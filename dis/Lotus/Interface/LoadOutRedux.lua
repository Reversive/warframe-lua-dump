; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  202

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7ed0a956
  2 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Types/Friendly/PlayerControllable/ControllableDrifterTennoAvatar"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x2d0fad09
  5 [-]: LOADK     R2 K3        ; R2 := "Lotus.Interface.StoreItemUtilities"
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x2d0fad09
  8 [-]: LOADK     R3 K4        ; R3 := "Lotus.Interface.LotusUtilities"
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0x2d0fad09
 11 [-]: LOADK     R4 K5        ; R4 := "EE.Interface.Utilities"
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K2        ; R4 := 0x2d0fad09
 14 [-]: LOADK     R5 K6        ; R5 := "Lotus.Interface.UIUtilities"
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K2        ; R5 := 0x2d0fad09
 17 [-]: LOADK     R6 K7        ; R6 := "Lotus.Interface.LoadoutUtilities"
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K2        ; R6 := 0x2d0fad09
 20 [-]: LOADK     R7 K8        ; R7 := "Lotus.Interface.UIStyleUtilities"
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: GETGLOBAL R7 K2        ; R7 := 0x2d0fad09
 23 [-]: LOADK     R8 K9        ; R8 := "Lotus.Interface.Libs.PreviewLinkUtilities"
 24 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 25 [-]: GETGLOBAL R8 K2        ; R8 := 0x2d0fad09
 26 [-]: LOADK     R9 K10       ; R9 := "Lotus.Interface.Components.StatCompare"
 27 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 28 [-]: GETGLOBAL R9 K11       ; R9 := 0xb009bbc6
 29 [-]: LOADK     R10 K12      ; R10 := "/Lotus/Types/Game/Store/ProductsManifest"
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 32 [-]: SETGLOBAL R10 K13      ; LOADOUT_SLOTS := R10
 33 [-]: LOADNIL   R10 R10      ; R10 := nil
 34 [-]: SETGLOBAL R10 K14      ; mUpsellHelper := R10
 35 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 36 [-]: SETTABLE  R10 K16 K17  ; R10["Current"] := 1.000000
 37 [-]: NEWTABLE  R11 3 0      ; R11 := {}
 38 [-]: LOADK     R12 K19      ; R12 := "/Lotus/Language/Menu/Cosmetics_None"
 39 [-]: LOADK     R13 K20      ; R13 := "/Lotus/Language/Menu/PvpTeam1"
 40 [-]: LOADK     R14 K21      ; R14 := "/Lotus/Language/Menu/PvpTeam2"
 41 [-]: SETLIST   R11 3 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 3
 42 [-]: SETTABLE  R10 K18 R11  ; R10["Types"] := R11
 43 [-]: SETGLOBAL R10 K15      ; mPvpTeams := R10
 44 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 45 [-]: SETTABLE  R10 K23 K24  ; R10["mTimerMgr"] := nil
 46 [-]: SETTABLE  R10 K25 K24  ; R10["mRedrawLoadOutTimerId"] := nil
 47 [-]: SETTABLE  R10 K26 K24  ; R10["mRedrawItemsGridTimerId"] := nil
 48 [-]: SETGLOBAL R10 K22      ; mTimerTable := R10
 49 [-]: LOADBOOL  R10 0 0      ; R10 := false
 50 [-]: SETGLOBAL R10 K27      ; mInitialized := R10
 51 [-]: LOADBOOL  R10 1 0      ; R10 := true
 52 [-]: SETGLOBAL R10 K28      ; mInputBlocked := R10
 53 [-]: LOADNIL   R10 R10      ; R10 := nil
 54 [-]: SETGLOBAL R10 K29      ; mPlayerProfile := R10
 55 [-]: LOADNIL   R10 R10      ; R10 := nil
 56 [-]: SETGLOBAL R10 K30      ; mInventory := R10
 57 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 58 [-]: SETGLOBAL R10 K31      ; mCurrentLoadout := R10
 59 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 60 [-]: SETGLOBAL R10 K32      ; mLists := R10
 61 [-]: LOADNIL   R10 R10      ; R10 := nil
 62 [-]: SETGLOBAL R10 K33      ; mItemsGrid := R10
 63 [-]: LOADNIL   R10 R10      ; R10 := nil
 64 [-]: SETGLOBAL R10 K34      ; mSortedCosmetics := R10
 65 [-]: NEWTABLE  R10 0 11     ; R10 := {}
 66 [-]: SETTABLE  R10 K36 K24  ; R10["rootPos"] := nil
 67 [-]: SETTABLE  R10 K37 K24  ; R10["forward"] := nil
 68 [-]: SETTABLE  R10 K38 K39  ; R10["currZoom"] := 0.000000
 69 [-]: SETTABLE  R10 K40 K41  ; R10["currPan"] := 0.600000
 70 [-]: SETTABLE  R10 K42 K39  ; R10["clampedPan"] := 0.000000
 71 [-]: SETTABLE  R10 K43 K41  ; R10["DefaultPan"] := 0.600000
 72 [-]: SETTABLE  R10 K44 K45  ; R10["MaxPan"] := 0.800000
 73 [-]: SETTABLE  R10 K46 K47  ; R10["MaxZoom"] := 2.000000
 74 [-]: SETTABLE  R10 K48 K47  ; R10["LerpScale"] := 2.000000
 75 [-]: SETTABLE  R10 K49 K50  ; R10["ConstantUpdate"] := true
 76 [-]: SETTABLE  R10 K51 K39  ; R10["mRightStickZoomValue"] := 0.000000
 77 [-]: SETGLOBAL R10 K35      ; mCameraTable := R10
 78 [-]: NEWTABLE  R10 0 7      ; R10 := {}
 79 [-]: SETTABLE  R10 K53 K24  ; R10["Element"] := nil
 80 [-]: SETTABLE  R10 K54 K24  ; R10["Item"] := nil
 81 [-]: SETTABLE  R10 K55 K24  ; R10["Cosmetic"] := nil
 82 [-]: SETTABLE  R10 K56 K24  ; R10["CosmeticItem"] := nil
 83 [-]: SETTABLE  R10 K57 K24  ; R10["CosmeticPreviousValue"] := nil
 84 [-]: SETTABLE  R10 K58 K24  ; R10["Consumable"] := nil
 85 [-]: SETTABLE  R10 K59 K24  ; R10["Emote"] := nil
 86 [-]: SETGLOBAL R10 K52      ; mSelected := R10
 87 [-]: LOADBOOL  R10 0 0      ; R10 := false
 88 [-]: SETGLOBAL R10 K60      ; mViewingConsumables := R10
 89 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 90 [-]: SETGLOBAL R10 K61      ; mButtons := R10
 91 [-]: NEWTABLE  R10 0 5      ; R10 := {}
 92 [-]: SETTABLE  R10 K63 K64  ; R10["Mode"] := 6.000000
 93 [-]: SETTABLE  R10 K65 K64  ; R10["SuitAppearance"] := 6.000000
 94 [-]: SETTABLE  R10 K66 K64  ; R10["PvpTeam"] := 6.000000
 95 [-]: SETTABLE  R10 K67 K64  ; R10["Rotate"] := 6.000000
 96 [-]: SETTABLE  R10 K68 K64  ; R10["Hints"] := 6.000000
 97 [-]: SETGLOBAL R10 K62      ; mButtonIndices := R10
 98 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 99 [-]: SETGLOBAL R10 K69      ; mCosmeticsLabels := R10
100 [-]: LOADNIL   R10 R10      ; R10 := nil
101 [-]: SETGLOBAL R10 K70      ; mSuitType := R10
102 [-]: LOADNIL   R10 R10      ; R10 := nil
103 [-]: SETGLOBAL R10 K71      ; mSentinelType := R10
104 [-]: LOADBOOL  R10 0 0      ; R10 := false
105 [-]: SETGLOBAL R10 K72      ; mConsumablesChanged := R10
106 [-]: LOADBOOL  R10 0 0      ; R10 := false
107 [-]: SETGLOBAL R10 K73      ; mEmotesChanged := R10
108 [-]: LOADBOOL  R10 0 0      ; R10 := false
109 [-]: SETGLOBAL R10 K74      ; mSeenRandomizeConfirm := R10
110 [-]: LOADNIL   R10 R10      ; R10 := nil
111 [-]: SETGLOBAL R10 K75      ; mHandleCanBeClosedCallback := R10
112 [-]: LOADNIL   R10 R10      ; R10 := nil
113 [-]: SETGLOBAL R10 K76      ; mChildMovie := R10
114 [-]: LOADNIL   R10 R10      ; R10 := nil
115 [-]: SETGLOBAL R10 K77      ; mEvoMovie := R10
116 [-]: LOADNIL   R10 R10      ; R10 := nil
117 [-]: SETGLOBAL R10 K78      ; mPurchasePopup := R10
118 [-]: LOADBOOL  R10 0 0      ; R10 := false
119 [-]: SETGLOBAL R10 K79      ; mRePopulateCosmetics := R10
120 [-]: LOADBOOL  R10 0 0      ; R10 := false
121 [-]: SETGLOBAL R10 K80      ; mShowVehicles := R10
122 [-]: LOADNIL   R10 R10      ; R10 := nil
123 [-]: SETGLOBAL R10 K81      ; mPrevSelection := R10
124 [-]: LOADNIL   R10 R10      ; R10 := nil
125 [-]: SETGLOBAL R10 K82      ; mPendingSelection := R10
126 [-]: LOADNIL   R10 R10      ; R10 := nil
127 [-]: SETGLOBAL R10 K83      ; mPendingItems := R10
128 [-]: LOADNIL   R10 R10      ; R10 := nil
129 [-]: NEWTABLE  R11 0 3      ; R11 := {}
130 [-]: SETTABLE  R11 K85 K39  ; R11["LS_NONE"] := 0.000000
131 [-]: SETTABLE  R11 K86 K17  ; R11["LS_LOADING"] := 1.000000
132 [-]: SETTABLE  R11 K87 K47  ; R11["LS_DONE"] := 2.000000
133 [-]: SETGLOBAL R11 K84      ; LoaderState := R11
134 [-]: NEWTABLE  R11 0 5      ; R11 := {}
135 [-]: SETTABLE  R11 K89 K24  ; R11["mSelectionLoader"] := nil
136 [-]: SETTABLE  R11 K90 K24  ; R11["mCosmeticsLoader"] := nil
137 [-]: SETTABLE  R11 K91 K24  ; R11["mSlotLoader"] := nil
138 [-]: SETTABLE  R11 K92 K24  ; R11["mConsumablesLoader"] := nil
139 [-]: SETTABLE  R11 K93 K94  ; R11["mQueueEquipItem"] := false
140 [-]: SETGLOBAL R11 K88      ; mLoaders := R11
141 [-]: NEWTABLE  R11 0 3      ; R11 := {}
142 [-]: NEWTABLE  R12 0 0      ; R12 := {}
143 [-]: SETTABLE  R11 K96 R12  ; R11["Items"] := R12
144 [-]: NEWTABLE  R12 0 0      ; R12 := {}
145 [-]: SETTABLE  R11 K97 R12  ; R11["SlotInfo"] := R12
146 [-]: NEWTABLE  R12 0 0      ; R12 := {}
147 [-]: SETTABLE  R11 K98 R12  ; R11["Cosmetics"] := R12
148 [-]: SETGLOBAL R11 K95      ; mPendingRandomizeInfo := R11
149 [-]: LOADNIL   R11 R11      ; R11 := nil
150 [-]: SETGLOBAL R11 K99      ; mConsumablesInstance := R11
151 [-]: LOADNIL   R11 R11      ; R11 := nil
152 [-]: SETGLOBAL R11 K100     ; mTennoWayInstance := R11
153 [-]: LOADNIL   R11 R11      ; R11 := nil
154 [-]: SETGLOBAL R11 K101     ; mArsenalConsole := R11
155 [-]: NEWTABLE  R11 0 3      ; R11 := {}
156 [-]: SETTABLE  R11 K103 K104; R11["PLATINUM"] := ""
157 [-]: SETTABLE  R11 K105 K104; R11["REPUTATION"] := ""
158 [-]: SETTABLE  R11 K106 K104; R11["TIMER"] := ""
159 [-]: SETGLOBAL R11 K102     ; Icons := R11
160 [-]: NEWTABLE  R11 0 7      ; R11 := {}
161 [-]: SETTABLE  R11 K107 K17 ; R11["SELECTING_PART"] := 1.000000
162 [-]: SETTABLE  R11 K108 K47 ; R11["SWAPPING_ITEM"] := 2.000000
163 [-]: SETTABLE  R11 K109 K110; R11["CUSTOMIZING_SKINS"] := 3.000000
164 [-]: SETTABLE  R11 K111 K112; R11["SELECTING_SKINS"] := 4.000000
165 [-]: SETTABLE  R11 K113 K114; R11["BROWSING_CONSUMABLES"] := 5.000000
166 [-]: SETTABLE  R11 K115 K64 ; R11["SELECTING_CONSUMABLES"] := 6.000000
167 [-]: SETTABLE  R11 K116 K117; R11["BROWSING_WAY_TREE"] := 7.000000
168 [-]: GETTABLE  R12 R11 K107 ; R12 := R11["SELECTING_PART"]
169 [-]: NEWTABLE  R13 0 3      ; R13 := {}
170 [-]: SETTABLE  R13 K16 K17  ; R13["Current"] := 1.000000
171 [-]: SETTABLE  R13 K119 K17 ; R13["Queued"] := 1.000000
172 [-]: SETTABLE  R13 K120 K24 ; R13["Visible"] := nil
173 [-]: NEWTABLE  R14 0 4      ; R14 := {}
174 [-]: SETTABLE  R14 K121 K39 ; R14["Time"] := 0.000000
175 [-]: SETTABLE  R14 K122 K94 ; R14["DoubleClick"] := false
176 [-]: SETTABLE  R14 K123 K94 ; R14["MouseDown"] := false
177 [-]: SETTABLE  R14 K124 K94 ; R14["AutoSelect"] := false
178 [-]: NEWTABLE  R15 0 0      ; R15 := {}
179 [-]: NEWTABLE  R16 0 2      ; R16 := {}
180 [-]: SETTABLE  R16 K125 K39 ; R16["X"] := 0.000000
181 [-]: SETTABLE  R16 K126 K39 ; R16["Y"] := 0.000000
182 [-]: NEWTABLE  R17 0 2      ; R17 := {}
183 [-]: GETGLOBAL R18 K127     ; R18 := 0x78ca68a2
184 [-]: LOADK     R19 0        ; R19 := 0.000000
185 [-]: LOADK     R20 K128     ; R20 := 0.150000
186 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
187 [-]: SETTABLE  R17 K125 R18 ; R17["X"] := R18
188 [-]: GETGLOBAL R18 K127     ; R18 := 0x78ca68a2
189 [-]: LOADK     R19 0        ; R19 := 0.000000
190 [-]: LOADK     R20 K128     ; R20 := 0.150000
191 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
192 [-]: SETTABLE  R17 K126 R18 ; R17["Y"] := R18
193 [-]: LOADNIL   R18 R18      ; R18 := nil
194 [-]: NEWTABLE  R19 0 0      ; R19 := {}
195 [-]: LOADNIL   R20 R21      ; R20 := R21 := nil
196 [-]: NEWTABLE  R22 0 5      ; R22 := {}
197 [-]: SETTABLE  R22 K129 K110; R22["PVE_LOADOUTS"] := 3.000000
198 [-]: SETTABLE  R22 K130 K112; R22["PVP_LOADOUTS"] := 4.000000
199 [-]: SETTABLE  R22 K131 K132; R22["LOADOUT_NAME_LENGTH"] := 16.000000
200 [-]: SETTABLE  R22 K133 K134; R22["VS_WIDTH"] := 140.500000
201 [-]: SETTABLE  R22 K135 K136; R22["DEAD_ZONE"] := 0.200000
202 [-]: NEWTABLE  R23 0 4      ; R23 := {}
203 [-]: SETTABLE  R23 K137 K138; R23["HEIGHT_SELECTED"] := 115.000000
204 [-]: SETTABLE  R23 K139 K140; R23["HEIGHT_UNSELECTED"] := 63.000000
205 [-]: SETTABLE  R23 K141 K142; R23["RESIZE_DURATION"] := 0.250000
206 [-]: SETTABLE  R23 K143 K47 ; R23["RESIZE_EASE"] := 2.000000
207 [-]: LOADBOOL  R24 0 0      ; R24 := false
208 [-]: NEWTABLE  R25 0 3      ; R25 := {}
209 [-]: SETTABLE  R25 K145 K24 ; R25["mCachedStats"] := nil
210 [-]: SETTABLE  R25 K146 K24 ; R25["mStatCompare"] := nil
211 [-]: SETTABLE  R25 K147 K24 ; R25["mStatCompareScrollBar"] := nil
212 [-]: LOADK     R26 0        ; R26 := 0.000000
213 [-]: NEWTABLE  R27 0 3      ; R27 := {}
214 [-]: SETTABLE  R27 K148 K17 ; R27["FALSE"] := 1.000000
215 [-]: SETTABLE  R27 K149 K47 ; R27["FRONT"] := 2.000000
216 [-]: SETTABLE  R27 K150 K110; R27["BACK"] := 3.000000
217 [-]: GETTABLE  R28 R27 K148 ; R28 := R27["FALSE"]
218 [-]: LOADBOOL  R29 0 0      ; R29 := false
219 [-]: LOADK     R30 0        ; R30 := 0.000000
220 [-]: LOADNIL   R31 R31      ; R31 := nil
221 [-]: LOADK     R32 0        ; R32 := 0.000000
222 [-]: LOADBOOL  R33 0 0      ; R33 := false
223 [-]: LOADBOOL  R34 0 0      ; R34 := false
224 [-]: NEWTABLE  R35 0 0      ; R35 := {}
225 [-]: NEWTABLE  R36 0 5      ; R36 := {}
226 [-]: GETGLOBAL R37 K152     ; R37 := 0x0469f296
227 [-]: LOADK     R38 K153     ; R38 := "BelowArsenalTeleportTrigger"
228 [-]: CALL      R37 2 2      ; R37 := R37(R38)
229 [-]: SETTABLE  R36 K151 R37 ; R36["TELEPORT_TRIGGER"] := R37
230 [-]: GETGLOBAL R37 K152     ; R37 := 0x0469f296
231 [-]: LOADK     R38 K155     ; R38 := "EmissiveTintColorHi"
232 [-]: CALL      R37 2 2      ; R37 := R37(R38)
233 [-]: SETTABLE  R36 K154 R37 ; R36["SYM_EMISSIVE_TINT_COLOR_HI"] := R37
234 [-]: SETTABLE  R36 K156 K157; R36["ARSENAL_CAMERA"] := "ArsenalCamera"
235 [-]: GETGLOBAL R37 K152     ; R37 := 0x0469f296
236 [-]: LOADK     R38 K159     ; R38 := "ArchwingTeleportPos"
237 [-]: CALL      R37 2 2      ; R37 := R37(R38)
238 [-]: SETTABLE  R36 K158 R37 ; R36["ARCHWING_WAYPOINT"] := R37
239 [-]: SETTABLE  R36 K160 K161; R36["ARCHWING_CAMERA"] := "ArchwingCamera"
240 [-]: NEWTABLE  R37 0 11     ; R37 := {}
241 [-]: SETTABLE  R37 K162 K163; R37["StatListYPos"] := 950.000000
242 [-]: SETTABLE  R37 K164 K24 ; R37["CosmeticDescOrigWidth"] := nil
243 [-]: SETTABLE  R37 K165 K39 ; R37["DefaultSuitRotationOffset"] := 0.000000
244 [-]: SETTABLE  R37 K166 K167; R37["DefaultArchwingRotationOffset"] := 180.000000
245 [-]: SETTABLE  R37 K168 K169; R37["DefaultSentinelRotationOffset"] := 90.000000
246 [-]: SETTABLE  R37 K170 K24 ; R37["OriginalLabelY"] := nil
247 [-]: SETTABLE  R37 K171 K24 ; R37["FullXpBarWidth"] := nil
248 [-]: SETTABLE  R37 K172 K39 ; R37["KDriveSlot"] := 0.000000
249 [-]: SETTABLE  R37 K173 K174; R37["ArchwingWaypointFindRadius"] := 200.000000
250 [-]: SETTABLE  R37 K175 K94 ; R37["CanEquipHeavyWeapons"] := false
251 [-]: SETTABLE  R37 K176 K94 ; R37["CanEquipMech"] := false
252 [-]: LOADNIL   R38 R38      ; R38 := nil
253 [-]: LOADBOOL  R39 0 0      ; R39 := false
254 [-]: LOADBOOL  R40 0 0      ; R40 := false
255 [-]: LOADK     R41 0        ; R41 := 0.000000
256 [-]: LOADNIL   R42 R42      ; R42 := nil
257 [-]: LOADBOOL  R43 1 0      ; R43 := true
258 [-]: LOADK     R44 K104     ; R44 := ""
259 [-]: LOADBOOL  R45 0 0      ; R45 := false
260 [-]: LOADNIL   R46 R46      ; R46 := nil
261 [-]: LOADBOOL  R47 0 0      ; R47 := false
262 [-]: LOADBOOL  R48 0 0      ; R48 := false
263 [-]: LOADK     R49 2        ; R49 := 2.000000
264 [-]: NEWTABLE  R50 0 2      ; R50 := {}
265 [-]: SETTABLE  R50 K125 K39 ; R50["X"] := 0.000000
266 [-]: SETTABLE  R50 K126 K39 ; R50["Y"] := 0.000000
267 [-]: GETGLOBAL R51 K0       ; R51 := 0x7ed0a956
268 [-]: LOADK     R52 K177     ; R52 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
269 [-]: CALL      R51 2 2      ; R51 := R51(R52)
270 [-]: LOADNIL   R52 R52      ; R52 := nil
271 [-]: NEWTABLE  R53 0 5      ; R53 := {}
272 [-]: SETTABLE  R53 K178 K39 ; R53["Timer"] := 0.000000
273 [-]: SETTABLE  R53 K179 K39 ; R53["StartTime"] := 0.000000
274 [-]: SETTABLE  R53 K180 K39 ; R53["FadeInTime"] := 0.000000
275 [-]: SETTABLE  R53 K181 K39 ; R53["FadeOutTime"] := 0.000000
276 [-]: CLOSURE   R54 0        ; R54 := closure(Function #1)
277 [-]: SETTABLE  R53 K182 R54 ; R53["Start"] := R54
278 [-]: NEWTABLE  R54 0 6      ; R54 := {}
279 [-]: SETTABLE  R54 K183 K94 ; R54["UmbraUnlocked"] := false
280 [-]: SETTABLE  R54 K184 K94 ; R54["UmbraMeleeUnlocked"] := false
281 [-]: SETTABLE  R54 K185 K94 ; R54["SacrificeQuestInputBlocked"] := false
282 [-]: SETTABLE  R54 K186 K94 ; R54["EquipmentChangesBlocked"] := false
283 [-]: SETTABLE  R54 K187 K94 ; R54["ArchwingUnlocked"] := false
284 [-]: SETTABLE  R54 K188 K94 ; R54["NewWarCompleted"] := false
285 [-]: NEWTABLE  R55 0 0      ; R55 := {}
286 [-]: LOADNIL   R56 R61      ; R56 := R57 := R58 := R59 := R60 := R61 := nil
287 [-]: CLOSURE   R10 1        ; R10 := closure(Function #2)
288 [-]: CLOSURE   R62 2        ; R62 := closure(Function #3)
289 [-]: MOVE      R0 R54       ; R0 := R54
290 [-]: CLOSURE   R63 3        ; R63 := closure(Function #4)
291 [-]: MOVE      R0 R62       ; R0 := R62
292 [-]: SETGLOBAL R63 K189     ; IsInputBlocked := R63
293 [-]: CLOSURE   R63 4        ; R63 := closure(Function #5)
294 [-]: SETGLOBAL R63 K190     ; OnLobbyReady := R63
295 [-]: CLOSURE   R63 5        ; R63 := closure(Function #6)
296 [-]: CLOSURE   R64 6        ; R64 := closure(Function #7)
297 [-]: MOVE      R0 R13       ; R0 := R13
298 [-]: CLOSURE   R65 7        ; R65 := closure(Function #8)
299 [-]: MOVE      R0 R52       ; R0 := R52
300 [-]: MOVE      R0 R2        ; R0 := R2
301 [-]: LOADNIL   R66 R66      ; R66 := nil
302 [-]: CLOSURE   R67 8        ; R67 := closure(Function #9)
303 [-]: MOVE      R0 R15       ; R0 := R15
304 [-]: MOVE      R0 R3        ; R0 := R3
305 [-]: MOVE      R0 R8        ; R0 := R8
306 [-]: CLOSURE   R68 9        ; R68 := closure(Function #10)
307 [-]: CLOSURE   R69 10       ; R69 := closure(Function #11)
308 [-]: MOVE      R0 R3        ; R0 := R3
309 [-]: CLOSURE   R70 11       ; R70 := closure(Function #12)
310 [-]: MOVE      R0 R52       ; R0 := R52
311 [-]: MOVE      R0 R2        ; R0 := R2
312 [-]: CLOSURE   R71 12       ; R71 := closure(Function #13)
313 [-]: MOVE      R0 R12       ; R0 := R12
314 [-]: MOVE      R0 R3        ; R0 := R3
315 [-]: MOVE      R0 R11       ; R0 := R11
316 [-]: SETTABLE  R55 K191 R71 ; R55["UpdateRightCallout"] := R71
317 [-]: CLOSURE   R71 13       ; R71 := closure(Function #14)
318 [-]: MOVE      R0 R52       ; R0 := R52
319 [-]: MOVE      R0 R2        ; R0 := R2
320 [-]: MOVE      R0 R36       ; R0 := R36
321 [-]: MOVE      R0 R37       ; R0 := R37
322 [-]: SETTABLE  R55 K192 R71 ; R55["GetArchwingWaypoint"] := R71
323 [-]: CLOSURE   R71 14       ; R71 := closure(Function #15)
324 [-]: MOVE      R0 R55       ; R0 := R55
325 [-]: MOVE      R0 R3        ; R0 := R3
326 [-]: CLOSURE   R72 15       ; R72 := closure(Function #16)
327 [-]: MOVE      R0 R55       ; R0 := R55
328 [-]: MOVE      R0 R3        ; R0 := R3
329 [-]: MOVE      R0 R13       ; R0 := R13
330 [-]: MOVE      R0 R67       ; R0 := R67
331 [-]: CLOSURE   R73 16       ; R73 := closure(Function #17)
332 [-]: MOVE      R0 R49       ; R0 := R49
333 [-]: SETTABLE  R55 K193 R73 ; R55["RefreshPetView"] := R73
334 [-]: CLOSURE   R73 17       ; R73 := closure(Function #18)
335 [-]: MOVE      R0 R3        ; R0 := R3
336 [-]: MOVE      R0 R2        ; R0 := R2
337 [-]: MOVE      R0 R51       ; R0 := R51
338 [-]: MOVE      R0 R13       ; R0 := R13
339 [-]: MOVE      R0 R67       ; R0 := R67
340 [-]: MOVE      R0 R68       ; R0 := R68
341 [-]: MOVE      R0 R52       ; R0 := R52
342 [-]: MOVE      R0 R71       ; R0 := R71
343 [-]: MOVE      R0 R72       ; R0 := R72
344 [-]: MOVE      R0 R69       ; R0 := R69
345 [-]: MOVE      R0 R70       ; R0 := R70
346 [-]: MOVE      R0 R55       ; R0 := R55
347 [-]: LOADNIL   R74 R74      ; R74 := nil
348 [-]: CLOSURE   R75 18       ; R75 := closure(Function #19)
349 [-]: MOVE      R0 R74       ; R0 := R74
350 [-]: CLOSURE   R76 19       ; R76 := closure(Function #20)
351 [-]: CLOSURE   R77 20       ; R77 := closure(Function #21)
352 [-]: MOVE      R0 R76       ; R0 := R76
353 [-]: MOVE      R0 R3        ; R0 := R3
354 [-]: CLOSURE   R78 21       ; R78 := closure(Function #22)
355 [-]: SETTABLE  R55 K194 R78 ; R55["ShowPurchaseSuccessPopup"] := R78
356 [-]: CLOSURE   R78 22       ; R78 := closure(Function #23)
357 [-]: CLOSURE   R79 23       ; R79 := closure(Function #24)
358 [-]: CLOSURE   R80 24       ; R80 := closure(Function #25)
359 [-]: CLOSURE   R81 25       ; R81 := closure(Function #26)
360 [-]: MOVE      R0 R9        ; R0 := R9
361 [-]: CLOSURE   R82 26       ; R82 := closure(Function #27)
362 [-]: MOVE      R0 R82       ; R0 := R82
363 [-]: CLOSURE   R83 27       ; R83 := closure(Function #28)
364 [-]: MOVE      R0 R3        ; R0 := R3
365 [-]: CLOSURE   R84 28       ; R84 := closure(Function #29)
366 [-]: CLOSURE   R85 29       ; R85 := closure(Function #30)
367 [-]: CLOSURE   R86 30       ; R86 := closure(Function #31)
368 [-]: SETTABLE  R55 K195 R86 ; R55["InApartment"] := R86
369 [-]: CLOSURE   R86 31       ; R86 := closure(Function #32)
370 [-]: MOVE      R0 R65       ; R0 := R65
371 [-]: MOVE      R0 R55       ; R0 := R55
372 [-]: MOVE      R0 R2        ; R0 := R2
373 [-]: MOVE      R0 R3        ; R0 := R3
374 [-]: MOVE      R0 R37       ; R0 := R37
375 [-]: CLOSURE   R87 32       ; R87 := closure(Function #33)
376 [-]: MOVE      R0 R68       ; R0 := R68
377 [-]: CLOSURE   R88 33       ; R88 := closure(Function #34)
378 [-]: MOVE      R0 R36       ; R0 := R36
379 [-]: MOVE      R0 R3        ; R0 := R3
380 [-]: MOVE      R0 R42       ; R0 := R42
381 [-]: MOVE      R0 R73       ; R0 := R73
382 [-]: MOVE      R0 R13       ; R0 := R13
383 [-]: MOVE      R0 R37       ; R0 := R37
384 [-]: MOVE      R0 R68       ; R0 := R68
385 [-]: MOVE      R0 R12       ; R0 := R12
386 [-]: MOVE      R0 R11       ; R0 := R11
387 [-]: MOVE      R0 R52       ; R0 := R52
388 [-]: MOVE      R0 R2        ; R0 := R2
389 [-]: MOVE      R0 R28       ; R0 := R28
390 [-]: MOVE      R0 R27       ; R0 := R27
391 [-]: MOVE      R0 R87       ; R0 := R87
392 [-]: MOVE      R0 R55       ; R0 := R55
393 [-]: MOVE      R0 R48       ; R0 := R48
394 [-]: MOVE      R0 R86       ; R0 := R86
395 [-]: CLOSURE   R89 34       ; R89 := closure(Function #35)
396 [-]: CLOSURE   R90 35       ; R90 := closure(Function #36)
397 [-]: CLOSURE   R91 36       ; R91 := closure(Function #37)
398 [-]: MOVE      R0 R90       ; R0 := R90
399 [-]: CLOSURE   R92 37       ; R92 := closure(Function #38)
400 [-]: MOVE      R0 R91       ; R0 := R91
401 [-]: CLOSURE   R93 38       ; R93 := closure(Function #39)
402 [-]: MOVE      R0 R37       ; R0 := R37
403 [-]: CLOSURE   R94 39       ; R94 := closure(Function #40)
404 [-]: CLOSURE   R95 40       ; R95 := closure(Function #41)
405 [-]: MOVE      R0 R94       ; R0 := R94
406 [-]: MOVE      R0 R93       ; R0 := R93
407 [-]: MOVE      R0 R3        ; R0 := R3
408 [-]: MOVE      R0 R19       ; R0 := R19
409 [-]: CLOSURE   R96 41       ; R96 := closure(Function #42)
410 [-]: MOVE      R0 R3        ; R0 := R3
411 [-]: MOVE      R0 R96       ; R0 := R96
412 [-]: MOVE      R0 R90       ; R0 := R90
413 [-]: MOVE      R0 R93       ; R0 := R93
414 [-]: MOVE      R0 R28       ; R0 := R28
415 [-]: MOVE      R0 R27       ; R0 := R27
416 [-]: CLOSURE   R97 42       ; R97 := closure(Function #43)
417 [-]: MOVE      R0 R37       ; R0 := R37
418 [-]: MOVE      R0 R28       ; R0 := R28
419 [-]: MOVE      R0 R27       ; R0 := R27
420 [-]: CLOSURE   R98 43       ; R98 := closure(Function #44)
421 [-]: MOVE      R0 R68       ; R0 := R68
422 [-]: CLOSURE   R99 44       ; R99 := closure(Function #45)
423 [-]: MOVE      R0 R3        ; R0 := R3
424 [-]: MOVE      R0 R12       ; R0 := R12
425 [-]: MOVE      R0 R13       ; R0 := R13
426 [-]: MOVE      R0 R11       ; R0 := R11
427 [-]: CLOSURE   R100 45      ; R100 := closure(Function #46)
428 [-]: MOVE      R0 R3        ; R0 := R3
429 [-]: MOVE      R0 R12       ; R0 := R12
430 [-]: MOVE      R0 R11       ; R0 := R11
431 [-]: MOVE      R0 R13       ; R0 := R13
432 [-]: CLOSURE   R101 46      ; R101 := closure(Function #47)
433 [-]: MOVE      R0 R11       ; R0 := R11
434 [-]: MOVE      R0 R3        ; R0 := R3
435 [-]: SETTABLE  R55 K196 R101; R55["RefreshLoadoutList"] := R101
436 [-]: CLOSURE   R101 47      ; R101 := closure(Function #48)
437 [-]: MOVE      R0 R54       ; R0 := R54
438 [-]: MOVE      R0 R3        ; R0 := R3
439 [-]: MOVE      R0 R11       ; R0 := R11
440 [-]: MOVE      R0 R55       ; R0 := R55
441 [-]: MOVE      R0 R66       ; R0 := R66
442 [-]: MOVE      R0 R96       ; R0 := R96
443 [-]: MOVE      R0 R73       ; R0 := R73
444 [-]: MOVE      R0 R13       ; R0 := R13
445 [-]: MOVE      R0 R46       ; R0 := R46
446 [-]: MOVE      R0 R88       ; R0 := R88
447 [-]: MOVE      R0 R83       ; R0 := R83
448 [-]: MOVE      R0 R99       ; R0 := R99
449 [-]: MOVE      R0 R100      ; R0 := R100
450 [-]: MOVE      R0 R90       ; R0 := R90
451 [-]: MOVE      R0 R89       ; R0 := R89
452 [-]: MOVE      R0 R87       ; R0 := R87
453 [-]: MOVE      R0 R78       ; R0 := R78
454 [-]: MOVE      R0 R20       ; R0 := R20
455 [-]: MOVE      R0 R21       ; R0 := R21
456 [-]: MOVE      R0 R75       ; R0 := R75
457 [-]: MOVE      R0 R12       ; R0 := R12
458 [-]: CLOSURE   R102 48      ; R102 := closure(Function #49)
459 [-]: CLOSURE   R103 49      ; R103 := closure(Function #50)
460 [-]: SETTABLE  R55 K197 R103; R55["UpdateZoom"] := R103
461 [-]: CLOSURE   R103 50      ; R103 := closure(Function #51)
462 [-]: MOVE      R0 R3        ; R0 := R3
463 [-]: MOVE      R0 R14       ; R0 := R14
464 [-]: MOVE      R0 R2        ; R0 := R2
465 [-]: MOVE      R0 R55       ; R0 := R55
466 [-]: SETTABLE  R55 K198 R103; R55["UpdateSuit"] := R103
467 [-]: CLOSURE   R103 51      ; R103 := closure(Function #52)
468 [-]: MOVE      R0 R3        ; R0 := R3
469 [-]: MOVE      R0 R13       ; R0 := R13
470 [-]: CLOSURE   R104 52      ; R104 := closure(Function #53)
471 [-]: MOVE      R0 R3        ; R0 := R3
472 [-]: MOVE      R0 R13       ; R0 := R13
473 [-]: CLOSURE   R105 53      ; R105 := closure(Function #54)
474 [-]: SETGLOBAL R105 K199    ; RestorePetVis := R105
475 [-]: CLOSURE   R105 54      ; R105 := closure(Function #55)
476 [-]: MOVE      R0 R104      ; R0 := R104
477 [-]: MOVE      R0 R103      ; R0 := R103
478 [-]: CLOSURE   R106 55      ; R106 := closure(Function #56)
479 [-]: MOVE      R0 R36       ; R0 := R36
480 [-]: MOVE      R0 R52       ; R0 := R52
481 [-]: MOVE      R0 R2        ; R0 := R2
482 [-]: MOVE      R0 R105      ; R0 := R105
483 [-]: MOVE      R0 R102      ; R0 := R102
484 [-]: MOVE      R0 R65       ; R0 := R65
485 [-]: MOVE      R0 R3        ; R0 := R3
486 [-]: MOVE      R0 R55       ; R0 := R55
487 [-]: MOVE      R0 R43       ; R0 := R43
488 [-]: MOVE      R0 R73       ; R0 := R73
489 [-]: MOVE      R0 R46       ; R0 := R46
490 [-]: MOVE      R0 R0        ; R0 := R0
491 [-]: SETGLOBAL R106 K200    ; Shutdown := R106
492 [-]: CLOSURE   R106 56      ; R106 := closure(Function #57)
493 [-]: CLOSURE   R107 57      ; R107 := closure(Function #58)
494 [-]: CLOSURE   R108 58      ; R108 := closure(Function #59)
495 [-]: CLOSURE   R109 59      ; R109 := closure(Function #60)
496 [-]: MOVE      R0 R13       ; R0 := R13
497 [-]: SETTABLE  R55 K201 R109; R55["SetSpaceMode"] := R109
498 [-]: CLOSURE   R109 60      ; R109 := closure(Function #61)
499 [-]: MOVE      R0 R2        ; R0 := R2
500 [-]: MOVE      R0 R55       ; R0 := R55
501 [-]: MOVE      R0 R65       ; R0 := R65
502 [-]: MOVE      R0 R107      ; R0 := R107
503 [-]: MOVE      R0 R108      ; R0 := R108
504 [-]: SETGLOBAL R109 K202    ; OnSaveLoadOutComplete := R109
505 [-]: CLOSURE   R109 61      ; R109 := closure(Function #62)
506 [-]: SETGLOBAL R109 K203    ; OnUpdateSessionSettings := R109
507 [-]: CLOSURE   R109 62      ; R109 := closure(Function #63)
508 [-]: MOVE      R0 R3        ; R0 := R3
509 [-]: MOVE      R0 R52       ; R0 := R52
510 [-]: MOVE      R0 R2        ; R0 := R2
511 [-]: MOVE      R0 R70       ; R0 := R70
512 [-]: MOVE      R0 R12       ; R0 := R12
513 [-]: MOVE      R0 R11       ; R0 := R11
514 [-]: MOVE      R0 R96       ; R0 := R96
515 [-]: MOVE      R0 R39       ; R0 := R39
516 [-]: MOVE      R0 R65       ; R0 := R65
517 [-]: MOVE      R0 R107      ; R0 := R107
518 [-]: MOVE      R0 R108      ; R0 := R108
519 [-]: MOVE      R0 R45       ; R0 := R45
520 [-]: MOVE      R0 R74       ; R0 := R74
521 [-]: CLOSURE   R110 63      ; R110 := closure(Function #64)
522 [-]: MOVE      R0 R3        ; R0 := R3
523 [-]: CLOSURE   R111 64      ; R111 := closure(Function #65)
524 [-]: MOVE      R0 R25       ; R0 := R25
525 [-]: MOVE      R0 R4        ; R0 := R4
526 [-]: CLOSURE   R112 65      ; R112 := closure(Function #66)
527 [-]: MOVE      R0 R3        ; R0 := R3
528 [-]: MOVE      R0 R25       ; R0 := R25
529 [-]: MOVE      R0 R111      ; R0 := R111
530 [-]: CLOSURE   R113 66      ; R113 := closure(Function #67)
531 [-]: MOVE      R0 R68       ; R0 := R68
532 [-]: MOVE      R0 R2        ; R0 := R2
533 [-]: MOVE      R0 R37       ; R0 := R37
534 [-]: CLOSURE   R114 67      ; R114 := closure(Function #68)
535 [-]: MOVE      R0 R12       ; R0 := R12
536 [-]: MOVE      R0 R11       ; R0 := R11
537 [-]: MOVE      R0 R68       ; R0 := R68
538 [-]: MOVE      R0 R63       ; R0 := R63
539 [-]: MOVE      R0 R3        ; R0 := R3
540 [-]: MOVE      R0 R67       ; R0 := R67
541 [-]: MOVE      R0 R13       ; R0 := R13
542 [-]: MOVE      R0 R8        ; R0 := R8
543 [-]: MOVE      R0 R25       ; R0 := R25
544 [-]: MOVE      R0 R61       ; R0 := R61
545 [-]: MOVE      R0 R112      ; R0 := R112
546 [-]: CLOSURE   R115 68      ; R115 := closure(Function #69)
547 [-]: MOVE      R0 R23       ; R0 := R23
548 [-]: MOVE      R0 R18       ; R0 := R18
549 [-]: MOVE      R0 R3        ; R0 := R3
550 [-]: CLOSURE   R116 69      ; R116 := closure(Function #70)
551 [-]: MOVE      R0 R23       ; R0 := R23
552 [-]: MOVE      R0 R115      ; R0 := R115
553 [-]: CLOSURE   R117 70      ; R117 := closure(Function #71)
554 [-]: MOVE      R0 R55       ; R0 := R55
555 [-]: MOVE      R0 R12       ; R0 := R12
556 [-]: MOVE      R0 R11       ; R0 := R11
557 [-]: MOVE      R0 R114      ; R0 := R114
558 [-]: CLOSURE   R118 71      ; R118 := closure(Function #72)
559 [-]: MOVE      R0 R23       ; R0 := R23
560 [-]: MOVE      R0 R115      ; R0 := R115
561 [-]: MOVE      R0 R25       ; R0 := R25
562 [-]: MOVE      R0 R117      ; R0 := R117
563 [-]: CLOSURE   R119 72      ; R119 := closure(Function #73)
564 [-]: SETGLOBAL R119 K204    ; RollOutSubButton := R119
565 [-]: CLOSURE   R119 73      ; R119 := closure(Function #74)
566 [-]: MOVE      R0 R62       ; R0 := R62
567 [-]: MOVE      R0 R3        ; R0 := R3
568 [-]: SETGLOBAL R119 K205    ; RollOverSubButton := R119
569 [-]: CLOSURE   R119 74      ; R119 := closure(Function #75)
570 [-]: CLOSURE   R120 75      ; R120 := closure(Function #76)
571 [-]: CLOSURE   R121 76      ; R121 := closure(Function #77)
572 [-]: CLOSURE   R122 77      ; R122 := closure(Function #78)
573 [-]: MOVE      R0 R3        ; R0 := R3
574 [-]: MOVE      R0 R13       ; R0 := R13
575 [-]: CLOSURE   R123 78      ; R123 := closure(Function #79)
576 [-]: MOVE      R0 R25       ; R0 := R25
577 [-]: MOVE      R0 R8        ; R0 := R8
578 [-]: CLOSURE   R124 79      ; R124 := closure(Function #80)
579 [-]: MOVE      R0 R21       ; R0 := R21
580 [-]: CLOSURE   R125 80      ; R125 := closure(Function #81)
581 [-]: MOVE      R0 R81       ; R0 := R81
582 [-]: MOVE      R0 R1        ; R0 := R1
583 [-]: CLOSURE   R126 81      ; R126 := closure(Function #82)
584 [-]: CLOSURE   R127 82      ; R127 := closure(Function #83)
585 [-]: CLOSURE   R128 83      ; R128 := closure(Function #84)
586 [-]: MOVE      R0 R13       ; R0 := R13
587 [-]: MOVE      R0 R3        ; R0 := R3
588 [-]: CLOSURE   R129 84      ; R129 := closure(Function #85)
589 [-]: MOVE      R0 R3        ; R0 := R3
590 [-]: MOVE      R0 R13       ; R0 := R13
591 [-]: MOVE      R0 R59       ; R0 := R59
592 [-]: MOVE      R0 R58       ; R0 := R58
593 [-]: CLOSURE   R130 85      ; R130 := closure(Function #86)
594 [-]: SETGLOBAL R130 K206    ; CategoryFocused := R130
595 [-]: CLOSURE   R130 86      ; R130 := closure(Function #87)
596 [-]: SETGLOBAL R130 K207    ; CategoryUnfocused := R130
597 [-]: CLOSURE   R130 87      ; R130 := closure(Function #88)
598 [-]: SETGLOBAL R130 K208    ; CategoryPressed := R130
599 [-]: CLOSURE   R130 88      ; R130 := closure(Function #89)
600 [-]: SETTABLE  R55 K209 R130; R55["HideXp"] := R130
601 [-]: CLOSURE   R130 89      ; R130 := closure(Function #90)
602 [-]: MOVE      R0 R62       ; R0 := R62
603 [-]: MOVE      R0 R12       ; R0 := R12
604 [-]: MOVE      R0 R11       ; R0 := R11
605 [-]: MOVE      R0 R18       ; R0 := R18
606 [-]: MOVE      R0 R55       ; R0 := R55
607 [-]: MOVE      R0 R116      ; R0 := R116
608 [-]: MOVE      R0 R3        ; R0 := R3
609 [-]: MOVE      R0 R88       ; R0 := R88
610 [-]: MOVE      R0 R110      ; R0 := R110
611 [-]: MOVE      R0 R25       ; R0 := R25
612 [-]: MOVE      R0 R118      ; R0 := R118
613 [-]: MOVE      R0 R23       ; R0 := R23
614 [-]: MOVE      R0 R65       ; R0 := R65
615 [-]: MOVE      R0 R32       ; R0 := R32
616 [-]: MOVE      R0 R1        ; R0 := R1
617 [-]: MOVE      R0 R125      ; R0 := R125
618 [-]: MOVE      R0 R115      ; R0 := R115
619 [-]: MOVE      R0 R122      ; R0 := R122
620 [-]: MOVE      R0 R126      ; R0 := R126
621 [-]: MOVE      R0 R2        ; R0 := R2
622 [-]: MOVE      R0 R121      ; R0 := R121
623 [-]: MOVE      R0 R40       ; R0 := R40
624 [-]: MOVE      R0 R37       ; R0 := R37
625 [-]: MOVE      R0 R119      ; R0 := R119
626 [-]: MOVE      R0 R120      ; R0 := R120
627 [-]: MOVE      R0 R13       ; R0 := R13
628 [-]: CLOSURE   R131 90      ; R131 := closure(Function #91)
629 [-]: MOVE      R0 R28       ; R0 := R28
630 [-]: MOVE      R0 R27       ; R0 := R27
631 [-]: SETTABLE  R55 K210 R131; R55["CanPanZoom"] := R131
632 [-]: CLOSURE   R131 91      ; R131 := closure(Function #92)
633 [-]: SETTABLE  R55 K211 R131; R55["UpdateCameraDestPos"] := R131
634 [-]: CLOSURE   R131 92      ; R131 := closure(Function #93)
635 [-]: MOVE      R0 R55       ; R0 := R55
636 [-]: MOVE      R0 R2        ; R0 := R2
637 [-]: SETTABLE  R55 K212 R131; R55["RefreshStatsParagraph"] := R131
638 [-]: CLOSURE   R131 93      ; R131 := closure(Function #94)
639 [-]: MOVE      R0 R55       ; R0 := R55
640 [-]: MOVE      R0 R81       ; R0 := R81
641 [-]: MOVE      R0 R1        ; R0 := R1
642 [-]: MOVE      R0 R9        ; R0 := R9
643 [-]: MOVE      R0 R82       ; R0 := R82
644 [-]: CLOSURE   R132 94      ; R132 := closure(Function #95)
645 [-]: MOVE      R0 R3        ; R0 := R3
646 [-]: CLOSURE   R133 95      ; R133 := closure(Function #96)
647 [-]: SETGLOBAL R133 K213    ; ConfirmWeaponRetrieve := R133
648 [-]: CLOSURE   R133 96      ; R133 := closure(Function #97)
649 [-]: MOVE      R0 R3        ; R0 := R3
650 [-]: SETGLOBAL R133 K214    ; ShowItemUnlockDialog := R133
651 [-]: CLOSURE   R133 97      ; R133 := closure(Function #98)
652 [-]: MOVE      R0 R63       ; R0 := R63
653 [-]: MOVE      R0 R90       ; R0 := R90
654 [-]: MOVE      R0 R92       ; R0 := R92
655 [-]: MOVE      R0 R91       ; R0 := R91
656 [-]: MOVE      R0 R18       ; R0 := R18
657 [-]: MOVE      R0 R81       ; R0 := R81
658 [-]: MOVE      R0 R79       ; R0 := R79
659 [-]: MOVE      R0 R55       ; R0 := R55
660 [-]: MOVE      R0 R114      ; R0 := R114
661 [-]: CLOSURE   R134 98      ; R134 := closure(Function #99)
662 [-]: MOVE      R0 R3        ; R0 := R3
663 [-]: MOVE      R0 R55       ; R0 := R55
664 [-]: MOVE      R0 R38       ; R0 := R38
665 [-]: MOVE      R0 R56       ; R0 := R56
666 [-]: SETGLOBAL R134 K215    ; OnUpgradeApplied := R134
667 [-]: CLOSURE   R134 99      ; R134 := closure(Function #100)
668 [-]: MOVE      R0 R38       ; R0 := R38
669 [-]: SETGLOBAL R134 K216    ; OnConfirmUnlockFeature := R134
670 [-]: CLOSURE   R134 100     ; R134 := closure(Function #101)
671 [-]: MOVE      R0 R38       ; R0 := R38
672 [-]: MOVE      R0 R3        ; R0 := R3
673 [-]: SETGLOBAL R134 K217    ; OnBuyFeatureItem := R134
674 [-]: CLOSURE   R56 101      ; R56 := closure(Function #102)
675 [-]: MOVE      R0 R62       ; R0 := R62
676 [-]: MOVE      R0 R54       ; R0 := R54
677 [-]: MOVE      R0 R12       ; R0 := R12
678 [-]: MOVE      R0 R11       ; R0 := R11
679 [-]: MOVE      R0 R24       ; R0 := R24
680 [-]: MOVE      R0 R3        ; R0 := R3
681 [-]: MOVE      R0 R18       ; R0 := R18
682 [-]: MOVE      R0 R38       ; R0 := R38
683 [-]: MOVE      R0 R5        ; R0 := R5
684 [-]: MOVE      R0 R131      ; R0 := R131
685 [-]: MOVE      R0 R101      ; R0 := R101
686 [-]: MOVE      R0 R80       ; R0 := R80
687 [-]: MOVE      R0 R31       ; R0 := R31
688 [-]: MOVE      R0 R52       ; R0 := R52
689 [-]: MOVE      R0 R2        ; R0 := R2
690 [-]: MOVE      R0 R104      ; R0 := R104
691 [-]: MOVE      R0 R55       ; R0 := R55
692 [-]: MOVE      R0 R103      ; R0 := R103
693 [-]: MOVE      R0 R56       ; R0 := R56
694 [-]: MOVE      R0 R116      ; R0 := R116
695 [-]: MOVE      R0 R96       ; R0 := R96
696 [-]: MOVE      R0 R28       ; R0 := R28
697 [-]: MOVE      R0 R27       ; R0 := R27
698 [-]: MOVE      R0 R81       ; R0 := R81
699 [-]: MOVE      R0 R133      ; R0 := R133
700 [-]: MOVE      R0 R132      ; R0 := R132
701 [-]: MOVE      R0 R73       ; R0 := R73
702 [-]: MOVE      R0 R13       ; R0 := R13
703 [-]: MOVE      R0 R46       ; R0 := R46
704 [-]: MOVE      R0 R65       ; R0 := R65
705 [-]: MOVE      R0 R32       ; R0 := R32
706 [-]: MOVE      R0 R88       ; R0 := R88
707 [-]: MOVE      R0 R97       ; R0 := R97
708 [-]: MOVE      R0 R98       ; R0 := R98
709 [-]: MOVE      R0 R118      ; R0 := R118
710 [-]: CLOSURE   R134 102     ; R134 := closure(Function #103)
711 [-]: MOVE      R0 R131      ; R0 := R131
712 [-]: CLOSURE   R135 103     ; R135 := closure(Function #104)
713 [-]: MOVE      R0 R3        ; R0 := R3
714 [-]: SETGLOBAL R135 K218    ; RoamOrMature := R135
715 [-]: CLOSURE   R135 104     ; R135 := closure(Function #105)
716 [-]: MOVE      R0 R31       ; R0 := R31
717 [-]: MOVE      R0 R134      ; R0 := R134
718 [-]: MOVE      R0 R101      ; R0 := R101
719 [-]: MOVE      R0 R11       ; R0 := R11
720 [-]: MOVE      R0 R80       ; R0 := R80
721 [-]: SETGLOBAL R135 K219    ; ConfirmRoamPet := R135
722 [-]: CLOSURE   R135 105     ; R135 := closure(Function #106)
723 [-]: MOVE      R0 R134      ; R0 := R134
724 [-]: MOVE      R0 R31       ; R0 := R31
725 [-]: MOVE      R0 R101      ; R0 := R101
726 [-]: MOVE      R0 R11       ; R0 := R11
727 [-]: MOVE      R0 R80       ; R0 := R80
728 [-]: SETGLOBAL R135 K220    ; ConfirmMaturePet := R135
729 [-]: CLOSURE   R135 106     ; R135 := closure(Function #107)
730 [-]: MOVE      R0 R31       ; R0 := R31
731 [-]: MOVE      R0 R13       ; R0 := R13
732 [-]: MOVE      R0 R70       ; R0 := R70
733 [-]: CLOSURE   R136 107     ; R136 := closure(Function #108)
734 [-]: MOVE      R0 R3        ; R0 := R3
735 [-]: MOVE      R0 R55       ; R0 := R55
736 [-]: MOVE      R0 R31       ; R0 := R31
737 [-]: MOVE      R0 R104      ; R0 := R104
738 [-]: SETGLOBAL R136 K221    ; OnMaturePetResults := R136
739 [-]: CLOSURE   R136 108     ; R136 := closure(Function #109)
740 [-]: MOVE      R0 R3        ; R0 := R3
741 [-]: MOVE      R0 R135      ; R0 := R135
742 [-]: MOVE      R0 R31       ; R0 := R31
743 [-]: SETGLOBAL R136 K222    ; OnRetrievePetFromStasisResults := R136
744 [-]: CLOSURE   R136 109     ; R136 := closure(Function #110)
745 [-]: MOVE      R0 R52       ; R0 := R52
746 [-]: MOVE      R0 R2        ; R0 := R2
747 [-]: MOVE      R0 R31       ; R0 := R31
748 [-]: MOVE      R0 R13       ; R0 := R13
749 [-]: MOVE      R0 R70       ; R0 := R70
750 [-]: MOVE      R0 R81       ; R0 := R81
751 [-]: MOVE      R0 R37       ; R0 := R37
752 [-]: MOVE      R0 R9        ; R0 := R9
753 [-]: MOVE      R0 R3        ; R0 := R3
754 [-]: SETTABLE  R55 K223 R136; R55["GetItems"] := R136
755 [-]: CLOSURE   R136 110     ; R136 := closure(Function #111)
756 [-]: MOVE      R0 R13       ; R0 := R13
757 [-]: CLOSURE   R137 111     ; R137 := closure(Function #112)
758 [-]: CLOSURE   R138 112     ; R138 := closure(Function #113)
759 [-]: MOVE      R0 R9        ; R0 := R9
760 [-]: MOVE      R0 R136      ; R0 := R136
761 [-]: MOVE      R0 R1        ; R0 := R1
762 [-]: MOVE      R0 R2        ; R0 := R2
763 [-]: MOVE      R0 R54       ; R0 := R54
764 [-]: MOVE      R0 R81       ; R0 := R81
765 [-]: MOVE      R0 R137      ; R0 := R137
766 [-]: MOVE      R0 R3        ; R0 := R3
767 [-]: MOVE      R0 R5        ; R0 := R5
768 [-]: MOVE      R0 R12       ; R0 := R12
769 [-]: MOVE      R0 R11       ; R0 := R11
770 [-]: MOVE      R0 R21       ; R0 := R21
771 [-]: CLOSURE   R139 113     ; R139 := closure(Function #114)
772 [-]: CLOSURE   R140 114     ; R140 := closure(Function #115)
773 [-]: SETTABLE  R55 K224 R140; R55["CanUseExtraColors"] := R140
774 [-]: CLOSURE   R140 115     ; R140 := closure(Function #116)
775 [-]: CLOSURE   R141 116     ; R141 := closure(Function #117)
776 [-]: MOVE      R0 R113      ; R0 := R113
777 [-]: MOVE      R0 R9        ; R0 := R9
778 [-]: MOVE      R0 R140      ; R0 := R140
779 [-]: MOVE      R0 R1        ; R0 := R1
780 [-]: MOVE      R0 R2        ; R0 := R2
781 [-]: MOVE      R0 R5        ; R0 := R5
782 [-]: MOVE      R0 R55       ; R0 := R55
783 [-]: MOVE      R0 R96       ; R0 := R96
784 [-]: CLOSURE   R142 117     ; R142 := closure(Function #118)
785 [-]: MOVE      R0 R12       ; R0 := R12
786 [-]: MOVE      R0 R11       ; R0 := R11
787 [-]: MOVE      R0 R55       ; R0 := R55
788 [-]: MOVE      R0 R131      ; R0 := R131
789 [-]: MOVE      R0 R56       ; R0 := R56
790 [-]: MOVE      R0 R138      ; R0 := R138
791 [-]: MOVE      R0 R141      ; R0 := R141
792 [-]: MOVE      R0 R139      ; R0 := R139
793 [-]: MOVE      R0 R133      ; R0 := R133
794 [-]: CLOSURE   R143 118     ; R143 := closure(Function #119)
795 [-]: SETGLOBAL R143 K225    ; OnDetailedViewComplete := R143
796 [-]: CLOSURE   R143 119     ; R143 := closure(Function #120)
797 [-]: MOVE      R0 R2        ; R0 := R2
798 [-]: MOVE      R0 R3        ; R0 := R3
799 [-]: MOVE      R0 R62       ; R0 := R62
800 [-]: MOVE      R0 R142      ; R0 := R142
801 [-]: CLOSURE   R144 120     ; R144 := closure(Function #121)
802 [-]: CLOSURE   R61 121      ; R61 := closure(Function #122)
803 [-]: MOVE      R0 R3        ; R0 := R3
804 [-]: MOVE      R0 R40       ; R0 := R40
805 [-]: MOVE      R0 R37       ; R0 := R37
806 [-]: CLOSURE   R145 122     ; R145 := closure(Function #123)
807 [-]: MOVE      R0 R37       ; R0 := R37
808 [-]: MOVE      R0 R96       ; R0 := R96
809 [-]: MOVE      R0 R63       ; R0 := R63
810 [-]: MOVE      R0 R30       ; R0 := R30
811 [-]: MOVE      R0 R70       ; R0 := R70
812 [-]: MOVE      R0 R61       ; R0 := R61
813 [-]: MOVE      R0 R144      ; R0 := R144
814 [-]: CLOSURE   R146 123     ; R146 := closure(Function #124)
815 [-]: MOVE      R0 R61       ; R0 := R61
816 [-]: SETGLOBAL R146 K226    ; SetChallengeProgressDesc := R146
817 [-]: CLOSURE   R146 124     ; R146 := closure(Function #125)
818 [-]: SETGLOBAL R146 K227    ; GetSelectedItemSlot := R146
819 [-]: CLOSURE   R146 125     ; R146 := closure(Function #126)
820 [-]: CLOSURE   R147 126     ; R147 := closure(Function #127)
821 [-]: MOVE      R0 R70       ; R0 := R70
822 [-]: MOVE      R0 R52       ; R0 := R52
823 [-]: MOVE      R0 R2        ; R0 := R2
824 [-]: MOVE      R0 R86       ; R0 := R86
825 [-]: MOVE      R0 R37       ; R0 := R37
826 [-]: MOVE      R0 R68       ; R0 := R68
827 [-]: MOVE      R0 R104      ; R0 := R104
828 [-]: MOVE      R0 R103      ; R0 := R103
829 [-]: MOVE      R0 R73       ; R0 := R73
830 [-]: MOVE      R0 R55       ; R0 := R55
831 [-]: MOVE      R0 R32       ; R0 := R32
832 [-]: MOVE      R0 R3        ; R0 := R3
833 [-]: MOVE      R0 R87       ; R0 := R87
834 [-]: CLOSURE   R148 127     ; R148 := closure(Function #128)
835 [-]: MOVE      R0 R12       ; R0 := R12
836 [-]: MOVE      R0 R11       ; R0 := R11
837 [-]: MOVE      R0 R1        ; R0 := R1
838 [-]: MOVE      R0 R3        ; R0 := R3
839 [-]: MOVE      R0 R143      ; R0 := R143
840 [-]: MOVE      R0 R78       ; R0 := R78
841 [-]: MOVE      R0 R14       ; R0 := R14
842 [-]: MOVE      R0 R56       ; R0 := R56
843 [-]: MOVE      R0 R73       ; R0 := R73
844 [-]: MOVE      R0 R13       ; R0 := R13
845 [-]: MOVE      R0 R46       ; R0 := R46
846 [-]: MOVE      R0 R88       ; R0 := R88
847 [-]: MOVE      R0 R145      ; R0 := R145
848 [-]: MOVE      R0 R79       ; R0 := R79
849 [-]: MOVE      R0 R114      ; R0 := R114
850 [-]: MOVE      R0 R112      ; R0 := R112
851 [-]: MOVE      R0 R25       ; R0 := R25
852 [-]: MOVE      R0 R147      ; R0 := R147
853 [-]: MOVE      R0 R4        ; R0 := R4
854 [-]: MOVE      R0 R80       ; R0 := R80
855 [-]: CLOSURE   R149 128     ; R149 := closure(Function #129)
856 [-]: MOVE      R0 R2        ; R0 := R2
857 [-]: MOVE      R0 R149      ; R0 := R149
858 [-]: CLOSURE   R150 129     ; R150 := closure(Function #130)
859 [-]: MOVE      R0 R3        ; R0 := R3
860 [-]: CLOSURE   R151 130     ; R151 := closure(Function #131)
861 [-]: MOVE      R0 R3        ; R0 := R3
862 [-]: CLOSURE   R152 131     ; R152 := closure(Function #132)
863 [-]: MOVE      R0 R13       ; R0 := R13
864 [-]: SETTABLE  R55 K228 R152; R55["InHeavyWeaponSlot"] := R152
865 [-]: CLOSURE   R152 132     ; R152 := closure(Function #133)
866 [-]: MOVE      R0 R3        ; R0 := R3
867 [-]: MOVE      R0 R12       ; R0 := R12
868 [-]: MOVE      R0 R11       ; R0 := R11
869 [-]: MOVE      R0 R40       ; R0 := R40
870 [-]: MOVE      R0 R14       ; R0 := R14
871 [-]: MOVE      R0 R146      ; R0 := R146
872 [-]: MOVE      R0 R78       ; R0 := R78
873 [-]: MOVE      R0 R1        ; R0 := R1
874 [-]: MOVE      R0 R2        ; R0 := R2
875 [-]: MOVE      R0 R18       ; R0 := R18
876 [-]: MOVE      R0 R21       ; R0 := R21
877 [-]: MOVE      R0 R55       ; R0 := R55
878 [-]: MOVE      R0 R151      ; R0 := R151
879 [-]: MOVE      R0 R149      ; R0 := R149
880 [-]: CLOSURE   R153 133     ; R153 := closure(Function #134)
881 [-]: MOVE      R0 R40       ; R0 := R40
882 [-]: MOVE      R0 R3        ; R0 := R3
883 [-]: MOVE      R0 R126      ; R0 := R126
884 [-]: MOVE      R0 R2        ; R0 := R2
885 [-]: MOVE      R0 R9        ; R0 := R9
886 [-]: MOVE      R0 R94       ; R0 := R94
887 [-]: MOVE      R0 R127      ; R0 := R127
888 [-]: MOVE      R0 R96       ; R0 := R96
889 [-]: MOVE      R0 R55       ; R0 := R55
890 [-]: CLOSURE   R154 134     ; R154 := closure(Function #135)
891 [-]: MOVE      R0 R93       ; R0 := R93
892 [-]: MOVE      R0 R90       ; R0 := R90
893 [-]: MOVE      R0 R95       ; R0 := R95
894 [-]: MOVE      R0 R65       ; R0 := R65
895 [-]: MOVE      R0 R32       ; R0 := R32
896 [-]: MOVE      R0 R55       ; R0 := R55
897 [-]: MOVE      R0 R87       ; R0 := R87
898 [-]: MOVE      R0 R73       ; R0 := R73
899 [-]: MOVE      R0 R13       ; R0 := R13
900 [-]: MOVE      R0 R94       ; R0 := R94
901 [-]: MOVE      R0 R3        ; R0 := R3
902 [-]: SETTABLE  R55 K229 R154; R55["OnDefaultColor"] := R154
903 [-]: CLOSURE   R154 135     ; R154 := closure(Function #136)
904 [-]: MOVE      R0 R94       ; R0 := R94
905 [-]: MOVE      R0 R93       ; R0 := R93
906 [-]: MOVE      R0 R3        ; R0 := R3
907 [-]: MOVE      R0 R55       ; R0 := R55
908 [-]: CLOSURE   R155 136     ; R155 := closure(Function #137)
909 [-]: MOVE      R0 R12       ; R0 := R12
910 [-]: MOVE      R0 R11       ; R0 := R11
911 [-]: MOVE      R0 R28       ; R0 := R28
912 [-]: MOVE      R0 R27       ; R0 := R27
913 [-]: MOVE      R0 R90       ; R0 := R90
914 [-]: MOVE      R0 R92       ; R0 := R92
915 [-]: CLOSURE   R156 137     ; R156 := closure(Function #138)
916 [-]: MOVE      R0 R94       ; R0 := R94
917 [-]: MOVE      R0 R96       ; R0 := R96
918 [-]: MOVE      R0 R55       ; R0 := R55
919 [-]: CLOSURE   R157 138     ; R157 := closure(Function #139)
920 [-]: MOVE      R0 R90       ; R0 := R90
921 [-]: MOVE      R0 R22       ; R0 := R22
922 [-]: MOVE      R0 R155      ; R0 := R155
923 [-]: CLOSURE   R158 139     ; R158 := closure(Function #140)
924 [-]: MOVE      R0 R40       ; R0 := R40
925 [-]: MOVE      R0 R3        ; R0 := R3
926 [-]: MOVE      R0 R90       ; R0 := R90
927 [-]: MOVE      R0 R93       ; R0 := R93
928 [-]: MOVE      R0 R94       ; R0 := R94
929 [-]: MOVE      R0 R127      ; R0 := R127
930 [-]: MOVE      R0 R95       ; R0 := R95
931 [-]: MOVE      R0 R55       ; R0 := R55
932 [-]: CLOSURE   R159 140     ; R159 := closure(Function #141)
933 [-]: MOVE      R0 R12       ; R0 := R12
934 [-]: MOVE      R0 R11       ; R0 := R11
935 [-]: MOVE      R0 R56       ; R0 := R56
936 [-]: MOVE      R0 R153      ; R0 := R153
937 [-]: MOVE      R0 R158      ; R0 := R158
938 [-]: CLOSURE   R160 141     ; R160 := closure(Function #142)
939 [-]: MOVE      R0 R159      ; R0 := R159
940 [-]: MOVE      R0 R3        ; R0 := R3
941 [-]: CLOSURE   R161 142     ; R161 := closure(Function #143)
942 [-]: MOVE      R0 R3        ; R0 := R3
943 [-]: MOVE      R0 R160      ; R0 := R160
944 [-]: CLOSURE   R162 143     ; R162 := closure(Function #144)
945 [-]: MOVE      R0 R161      ; R0 := R161
946 [-]: SETGLOBAL R162 K230    ; RandomizeCosmetics := R162
947 [-]: CLOSURE   R162 144     ; R162 := closure(Function #145)
948 [-]: MOVE      R0 R161      ; R0 := R161
949 [-]: SETGLOBAL R162 K231    ; OnRandomizeConfirm := R162
950 [-]: CLOSURE   R162 145     ; R162 := closure(Function #146)
951 [-]: MOVE      R0 R13       ; R0 := R13
952 [-]: MOVE      R0 R3        ; R0 := R3
953 [-]: MOVE      R0 R90       ; R0 := R90
954 [-]: MOVE      R0 R93       ; R0 := R93
955 [-]: MOVE      R0 R126      ; R0 := R126
956 [-]: MOVE      R0 R127      ; R0 := R127
957 [-]: MOVE      R0 R95       ; R0 := R95
958 [-]: MOVE      R0 R55       ; R0 := R55
959 [-]: CLOSURE   R163 146     ; R163 := closure(Function #147)
960 [-]: MOVE      R0 R14       ; R0 := R14
961 [-]: MOVE      R0 R9        ; R0 := R9
962 [-]: CLOSURE   R164 147     ; R164 := closure(Function #148)
963 [-]: MOVE      R0 R19       ; R0 := R19
964 [-]: MOVE      R0 R90       ; R0 := R90
965 [-]: MOVE      R0 R73       ; R0 := R73
966 [-]: MOVE      R0 R13       ; R0 := R13
967 [-]: MOVE      R0 R65       ; R0 := R65
968 [-]: MOVE      R0 R32       ; R0 := R32
969 [-]: MOVE      R0 R2        ; R0 := R2
970 [-]: MOVE      R0 R14       ; R0 := R14
971 [-]: MOVE      R0 R28       ; R0 := R28
972 [-]: MOVE      R0 R27       ; R0 := R27
973 [-]: MOVE      R0 R97       ; R0 := R97
974 [-]: MOVE      R0 R98       ; R0 := R98
975 [-]: MOVE      R0 R87       ; R0 := R87
976 [-]: SETTABLE  R55 K232 R164; R55["ExitColorPicker"] := R164
977 [-]: CLOSURE   R164 148     ; R164 := closure(Function #149)
978 [-]: MOVE      R0 R55       ; R0 := R55
979 [-]: MOVE      R0 R12       ; R0 := R12
980 [-]: MOVE      R0 R37       ; R0 := R37
981 [-]: MOVE      R0 R3        ; R0 := R3
982 [-]: MOVE      R0 R153      ; R0 := R153
983 [-]: MOVE      R0 R154      ; R0 := R154
984 [-]: MOVE      R0 R156      ; R0 := R156
985 [-]: MOVE      R0 R101      ; R0 := R101
986 [-]: MOVE      R0 R11       ; R0 := R11
987 [-]: MOVE      R0 R138      ; R0 := R138
988 [-]: MOVE      R0 R94       ; R0 := R94
989 [-]: MOVE      R0 R39       ; R0 := R39
990 [-]: MOVE      R0 R2        ; R0 := R2
991 [-]: MOVE      R0 R96       ; R0 := R96
992 [-]: MOVE      R0 R78       ; R0 := R78
993 [-]: MOVE      R0 R28       ; R0 := R28
994 [-]: MOVE      R0 R27       ; R0 := R27
995 [-]: MOVE      R0 R97       ; R0 := R97
996 [-]: MOVE      R0 R98       ; R0 := R98
997 [-]: MOVE      R0 R81       ; R0 := R81
998 [-]: MOVE      R0 R9        ; R0 := R9
999 [-]: MOVE      R0 R1        ; R0 := R1
1000 [-]: MOVE      R0 R90       ; R0 := R90
1001 [-]: MOVE      R0 R119      ; R0 := R119
1002 [-]: MOVE      R0 R22       ; R0 := R22
1003 [-]: CLOSURE   R165 149     ; R165 := closure(Function #150)
1004 [-]: MOVE      R0 R12       ; R0 := R12
1005 [-]: MOVE      R0 R11       ; R0 := R11
1006 [-]: MOVE      R0 R3        ; R0 := R3
1007 [-]: MOVE      R0 R82       ; R0 := R82
1008 [-]: MOVE      R0 R95       ; R0 := R95
1009 [-]: MOVE      R0 R73       ; R0 := R73
1010 [-]: MOVE      R0 R13       ; R0 := R13
1011 [-]: MOVE      R0 R46       ; R0 := R46
1012 [-]: MOVE      R0 R65       ; R0 := R65
1013 [-]: MOVE      R0 R32       ; R0 := R32
1014 [-]: MOVE      R0 R55       ; R0 := R55
1015 [-]: MOVE      R0 R87       ; R0 := R87
1016 [-]: CLOSURE   R166 150     ; R166 := closure(Function #151)
1017 [-]: MOVE      R0 R64       ; R0 := R64
1018 [-]: MOVE      R0 R52       ; R0 := R52
1019 [-]: MOVE      R0 R2        ; R0 := R2
1020 [-]: MOVE      R0 R104      ; R0 := R104
1021 [-]: MOVE      R0 R103      ; R0 := R103
1022 [-]: MOVE      R0 R55       ; R0 := R55
1023 [-]: MOVE      R0 R3        ; R0 := R3
1024 [-]: CLOSURE   R167 151     ; R167 := closure(Function #152)
1025 [-]: MOVE      R0 R55       ; R0 := R55
1026 [-]: SETGLOBAL R167 K233    ; RefreshLoadout := R167
1027 [-]: CLOSURE   R167 152     ; R167 := closure(Function #153)
1028 [-]: MOVE      R0 R12       ; R0 := R12
1029 [-]: MOVE      R0 R11       ; R0 := R11
1030 [-]: MOVE      R0 R3        ; R0 := R3
1031 [-]: MOVE      R0 R13       ; R0 := R13
1032 [-]: MOVE      R0 R166      ; R0 := R166
1033 [-]: MOVE      R0 R2        ; R0 := R2
1034 [-]: MOVE      R0 R64       ; R0 := R64
1035 [-]: CLOSURE   R168 153     ; R168 := closure(Function #154)
1036 [-]: MOVE      R0 R167      ; R0 := R167
1037 [-]: SETGLOBAL R168 K234    ; OpenLoadoutSelection := R168
1038 [-]: CLOSURE   R168 154     ; R168 := closure(Function #155)
1039 [-]: MOVE      R0 R12       ; R0 := R12
1040 [-]: MOVE      R0 R11       ; R0 := R11
1041 [-]: MOVE      R0 R20       ; R0 := R20
1042 [-]: MOVE      R0 R167      ; R0 := R167
1043 [-]: MOVE      R0 R3        ; R0 := R3
1044 [-]: CLOSURE   R169 155     ; R169 := closure(Function #156)
1045 [-]: MOVE      R0 R12       ; R0 := R12
1046 [-]: MOVE      R0 R11       ; R0 := R11
1047 [-]: MOVE      R0 R167      ; R0 := R167
1048 [-]: SETGLOBAL R169 K235    ; onKeyDown_MENU_RTHUMB := R169
1049 [-]: CLOSURE   R169 156     ; R169 := closure(Function #157)
1050 [-]: MOVE      R0 R101      ; R0 := R101
1051 [-]: MOVE      R0 R11       ; R0 := R11
1052 [-]: MOVE      R0 R55       ; R0 := R55
1053 [-]: MOVE      R0 R138      ; R0 := R138
1054 [-]: MOVE      R0 R3        ; R0 := R3
1055 [-]: CLOSURE   R170 157     ; R170 := closure(Function #158)
1056 [-]: MOVE      R0 R53       ; R0 := R53
1057 [-]: MOVE      R0 R101      ; R0 := R101
1058 [-]: MOVE      R0 R11       ; R0 := R11
1059 [-]: MOVE      R0 R12       ; R0 := R12
1060 [-]: MOVE      R0 R55       ; R0 := R55
1061 [-]: CLOSURE   R171 158     ; R171 := closure(Function #159)
1062 [-]: MOVE      R0 R169      ; R0 := R169
1063 [-]: CLOSURE   R172 159     ; R172 := closure(Function #160)
1064 [-]: MOVE      R0 R169      ; R0 := R169
1065 [-]: CLOSURE   R173 160     ; R173 := closure(Function #161)
1066 [-]: MOVE      R0 R34       ; R0 := R34
1067 [-]: MOVE      R0 R55       ; R0 := R55
1068 [-]: SETGLOBAL R173 K236    ; OnPvpDefaultLoadoutCreated := R173
1069 [-]: CLOSURE   R173 161     ; R173 := closure(Function #162)
1070 [-]: MOVE      R0 R34       ; R0 := R34
1071 [-]: MOVE      R0 R2        ; R0 := R2
1072 [-]: MOVE      R0 R55       ; R0 := R55
1073 [-]: CLOSURE   R174 162     ; R174 := closure(Function #163)
1074 [-]: MOVE      R0 R12       ; R0 := R12
1075 [-]: MOVE      R0 R11       ; R0 := R11
1076 [-]: MOVE      R0 R146      ; R0 := R146
1077 [-]: MOVE      R0 R56       ; R0 := R56
1078 [-]: MOVE      R0 R116      ; R0 := R116
1079 [-]: MOVE      R0 R118      ; R0 := R118
1080 [-]: MOVE      R0 R73       ; R0 := R73
1081 [-]: MOVE      R0 R13       ; R0 := R13
1082 [-]: MOVE      R0 R46       ; R0 := R46
1083 [-]: MOVE      R0 R55       ; R0 := R55
1084 [-]: MOVE      R0 R52       ; R0 := R52
1085 [-]: MOVE      R0 R2        ; R0 := R2
1086 [-]: MOVE      R0 R32       ; R0 := R32
1087 [-]: MOVE      R0 R131      ; R0 := R131
1088 [-]: CLOSURE   R175 163     ; R175 := closure(Function #164)
1089 [-]: SETGLOBAL R175 K237    ; FocusAbiltySet := R175
1090 [-]: CLOSURE   R175 164     ; R175 := closure(Function #165)
1091 [-]: MOVE      R0 R2        ; R0 := R2
1092 [-]: SETGLOBAL R175 K238    ; UpdateFocusSlot := R175
1093 [-]: CLOSURE   R58 165      ; R58 := closure(Function #166)
1094 [-]: MOVE      R0 R2        ; R0 := R2
1095 [-]: MOVE      R0 R51       ; R0 := R51
1096 [-]: MOVE      R0 R55       ; R0 := R55
1097 [-]: MOVE      R0 R13       ; R0 := R13
1098 [-]: MOVE      R0 R37       ; R0 := R37
1099 [-]: MOVE      R0 R174      ; R0 := R174
1100 [-]: CLOSURE   R175 166     ; R175 := closure(Function #167)
1101 [-]: MOVE      R0 R37       ; R0 := R37
1102 [-]: CLOSURE   R176 167     ; R176 := closure(Function #168)
1103 [-]: MOVE      R0 R101      ; R0 := R101
1104 [-]: MOVE      R0 R11       ; R0 := R11
1105 [-]: MOVE      R0 R138      ; R0 := R138
1106 [-]: CLOSURE   R177 168     ; R177 := closure(Function #169)
1107 [-]: MOVE      R0 R176      ; R0 := R176
1108 [-]: MOVE      R0 R9        ; R0 := R9
1109 [-]: MOVE      R0 R1        ; R0 := R1
1110 [-]: CLOSURE   R178 169     ; R178 := closure(Function #170)
1111 [-]: MOVE      R0 R141      ; R0 := R141
1112 [-]: MOVE      R0 R3        ; R0 := R3
1113 [-]: MOVE      R0 R55       ; R0 := R55
1114 [-]: MOVE      R0 R113      ; R0 := R113
1115 [-]: MOVE      R0 R136      ; R0 := R136
1116 [-]: MOVE      R0 R139      ; R0 := R139
1117 [-]: MOVE      R0 R1        ; R0 := R1
1118 [-]: MOVE      R0 R90       ; R0 := R90
1119 [-]: MOVE      R0 R73       ; R0 := R73
1120 [-]: MOVE      R0 R13       ; R0 := R13
1121 [-]: MOVE      R0 R126      ; R0 := R126
1122 [-]: MOVE      R0 R127      ; R0 := R127
1123 [-]: MOVE      R0 R157      ; R0 := R157
1124 [-]: MOVE      R0 R92       ; R0 := R92
1125 [-]: MOVE      R0 R162      ; R0 := R162
1126 [-]: MOVE      R0 R158      ; R0 := R158
1127 [-]: MOVE      R0 R95       ; R0 := R95
1128 [-]: MOVE      R0 R150      ; R0 := R150
1129 [-]: MOVE      R0 R20       ; R0 := R20
1130 [-]: CLOSURE   R179 170     ; R179 := closure(Function #171)
1131 [-]: SETGLOBAL R179 K239    ; VSFocus := R179
1132 [-]: CLOSURE   R179 171     ; R179 := closure(Function #172)
1133 [-]: MOVE      R0 R26       ; R0 := R26
1134 [-]: CLOSURE   R180 172     ; R180 := closure(Function #173)
1135 [-]: MOVE      R0 R28       ; R0 := R28
1136 [-]: MOVE      R0 R27       ; R0 := R27
1137 [-]: MOVE      R0 R29       ; R0 := R29
1138 [-]: CLOSURE   R181 173     ; R181 := closure(Function #174)
1139 [-]: MOVE      R0 R179      ; R0 := R179
1140 [-]: SETGLOBAL R181 K240    ; VSActivateSlider := R181
1141 [-]: CLOSURE   R181 174     ; R181 := closure(Function #175)
1142 [-]: MOVE      R0 R180      ; R0 := R180
1143 [-]: MOVE      R0 R26       ; R0 := R26
1144 [-]: CLOSURE   R182 175     ; R182 := closure(Function #176)
1145 [-]: MOVE      R0 R181      ; R0 := R181
1146 [-]: SETGLOBAL R182 K241    ; VSDecrement := R182
1147 [-]: CLOSURE   R182 176     ; R182 := closure(Function #177)
1148 [-]: MOVE      R0 R181      ; R0 := R181
1149 [-]: SETGLOBAL R182 K242    ; VSIncrement := R182
1150 [-]: CLOSURE   R182 177     ; R182 := closure(Function #178)
1151 [-]: MOVE      R0 R3        ; R0 := R3
1152 [-]: MOVE      R0 R180      ; R0 := R180
1153 [-]: MOVE      R0 R22       ; R0 := R22
1154 [-]: MOVE      R0 R26       ; R0 := R26
1155 [-]: MOVE      R0 R179      ; R0 := R179
1156 [-]: SETGLOBAL R182 K243    ; VSGoTo := R182
1157 [-]: CLOSURE   R182 178     ; R182 := closure(Function #179)
1158 [-]: CLOSURE   R183 179     ; R183 := closure(Function #180)
1159 [-]: MOVE      R0 R182      ; R0 := R182
1160 [-]: SETGLOBAL R183 K244    ; VSReset := R183
1161 [-]: CLOSURE   R183 180     ; R183 := closure(Function #181)
1162 [-]: MOVE      R0 R26       ; R0 := R26
1163 [-]: MOVE      R0 R14       ; R0 := R14
1164 [-]: MOVE      R0 R182      ; R0 := R182
1165 [-]: MOVE      R0 R180      ; R0 := R180
1166 [-]: MOVE      R0 R22       ; R0 := R22
1167 [-]: MOVE      R0 R3        ; R0 := R3
1168 [-]: CLOSURE   R184 181     ; R184 := closure(Function #182)
1169 [-]: MOVE      R0 R13       ; R0 := R13
1170 [-]: MOVE      R0 R3        ; R0 := R3
1171 [-]: MOVE      R0 R48       ; R0 := R48
1172 [-]: MOVE      R0 R52       ; R0 := R52
1173 [-]: MOVE      R0 R2        ; R0 := R2
1174 [-]: MOVE      R0 R78       ; R0 := R78
1175 [-]: MOVE      R0 R73       ; R0 := R73
1176 [-]: MOVE      R0 R46       ; R0 := R46
1177 [-]: MOVE      R0 R55       ; R0 := R55
1178 [-]: MOVE      R0 R36       ; R0 := R36
1179 [-]: SETTABLE  R55 K245 R184; R55["UpdateSpaceMode"] := R184
1180 [-]: CLOSURE   R184 182     ; R184 := closure(Function #183)
1181 [-]: MOVE      R0 R2        ; R0 := R2
1182 [-]: MOVE      R0 R9        ; R0 := R9
1183 [-]: CLOSURE   R185 183     ; R185 := closure(Function #184)
1184 [-]: MOVE      R0 R64       ; R0 := R64
1185 [-]: MOVE      R0 R58       ; R0 := R58
1186 [-]: MOVE      R0 R41       ; R0 := R41
1187 [-]: MOVE      R0 R2        ; R0 := R2
1188 [-]: MOVE      R0 R13       ; R0 := R13
1189 [-]: MOVE      R0 R40       ; R0 := R40
1190 [-]: MOVE      R0 R50       ; R0 := R50
1191 [-]: SETTABLE  R55 K246 R185; R55["RefreshCurrentLoadout"] := R185
1192 [-]: CLOSURE   R185 184     ; R185 := closure(Function #185)
1193 [-]: MOVE      R0 R13       ; R0 := R13
1194 [-]: MOVE      R0 R128      ; R0 := R128
1195 [-]: MOVE      R0 R173      ; R0 := R173
1196 [-]: MOVE      R0 R55       ; R0 := R55
1197 [-]: MOVE      R0 R99       ; R0 := R99
1198 [-]: MOVE      R0 R100      ; R0 := R100
1199 [-]: MOVE      R0 R78       ; R0 := R78
1200 [-]: SETTABLE  R55 K247 R185; R55["SetState"] := R185
1201 [-]: CLOSURE   R59 185      ; R59 := closure(Function #186)
1202 [-]: MOVE      R0 R14       ; R0 := R14
1203 [-]: MOVE      R0 R13       ; R0 := R13
1204 [-]: MOVE      R0 R184      ; R0 := R184
1205 [-]: MOVE      R0 R3        ; R0 := R3
1206 [-]: MOVE      R0 R53       ; R0 := R53
1207 [-]: MOVE      R0 R55       ; R0 := R55
1208 [-]: NEWTABLE  R185 0 3     ; R185 := {}
1209 [-]: SETTABLE  R185 K248 K24; R185["mMoveUpdateDelay"] := nil
1210 [-]: CLOSURE   R186 186     ; R186 := closure(Function #187)
1211 [-]: MOVE      R0 R52       ; R0 := R52
1212 [-]: MOVE      R0 R2        ; R0 := R2
1213 [-]: MOVE      R0 R37       ; R0 := R37
1214 [-]: SETTABLE  R185 K249 R186; R185["OnMovedToPosition"] := R186
1215 [-]: CLOSURE   R186 187     ; R186 := closure(Function #188)
1216 [-]: MOVE      R0 R0        ; R0 := R0
1217 [-]: MOVE      R0 R2        ; R0 := R2
1218 [-]: MOVE      R0 R55       ; R0 := R55
1219 [-]: SETTABLE  R185 K250 R186; R185["ShowPowerSuitHideOperator"] := R186
1220 [-]: CLOSURE   R186 188     ; R186 := closure(Function #189)
1221 [-]: MOVE      R0 R55       ; R0 := R55
1222 [-]: CLOSURE   R187 189     ; R187 := closure(Function #190)
1223 [-]: MOVE      R0 R21       ; R0 := R21
1224 [-]: MOVE      R0 R20       ; R0 := R20
1225 [-]: MOVE      R0 R106      ; R0 := R106
1226 [-]: MOVE      R0 R53       ; R0 := R53
1227 [-]: MOVE      R0 R60       ; R0 := R60
1228 [-]: MOVE      R0 R25       ; R0 := R25
1229 [-]: MOVE      R0 R57       ; R0 := R57
1230 [-]: MOVE      R0 R117      ; R0 := R117
1231 [-]: MOVE      R0 R12       ; R0 := R12
1232 [-]: MOVE      R0 R11       ; R0 := R11
1233 [-]: MOVE      R0 R55       ; R0 := R55
1234 [-]: MOVE      R0 R14       ; R0 := R14
1235 [-]: MOVE      R0 R3        ; R0 := R3
1236 [-]: MOVE      R0 R24       ; R0 := R24
1237 [-]: MOVE      R0 R13       ; R0 := R13
1238 [-]: MOVE      R0 R17       ; R0 := R17
1239 [-]: MOVE      R0 R56       ; R0 := R56
1240 [-]: MOVE      R0 R47       ; R0 := R47
1241 [-]: MOVE      R0 R52       ; R0 := R52
1242 [-]: MOVE      R0 R2        ; R0 := R2
1243 [-]: MOVE      R0 R88       ; R0 := R88
1244 [-]: MOVE      R0 R18       ; R0 := R18
1245 [-]: MOVE      R0 R65       ; R0 := R65
1246 [-]: MOVE      R0 R32       ; R0 := R32
1247 [-]: MOVE      R0 R39       ; R0 := R39
1248 [-]: MOVE      R0 R89       ; R0 := R89
1249 [-]: MOVE      R0 R177      ; R0 := R177
1250 [-]: MOVE      R0 R178      ; R0 := R178
1251 [-]: MOVE      R0 R183      ; R0 := R183
1252 [-]: MOVE      R0 R28       ; R0 := R28
1253 [-]: MOVE      R0 R27       ; R0 := R27
1254 [-]: MOVE      R0 R29       ; R0 := R29
1255 [-]: MOVE      R0 R155      ; R0 := R155
1256 [-]: MOVE      R0 R26       ; R0 := R26
1257 [-]: MOVE      R0 R33       ; R0 := R33
1258 [-]: MOVE      R0 R0        ; R0 := R0
1259 [-]: MOVE      R0 R185      ; R0 := R185
1260 [-]: MOVE      R0 R68       ; R0 := R68
1261 [-]: MOVE      R0 R30       ; R0 := R30
1262 [-]: MOVE      R0 R135      ; R0 := R135
1263 [-]: MOVE      R0 R186      ; R0 := R186
1264 [-]: SETGLOBAL R187 K251    ; Update := R187
1265 [-]: CLOSURE   R187 190     ; R187 := closure(Function #191)
1266 [-]: MOVE      R0 R20       ; R0 := R20
1267 [-]: SETGLOBAL R187 K252    ; ConfigItemFocused := R187
1268 [-]: CLOSURE   R187 191     ; R187 := closure(Function #192)
1269 [-]: MOVE      R0 R20       ; R0 := R20
1270 [-]: SETGLOBAL R187 K253    ; ConfigItemUnfocused := R187
1271 [-]: CLOSURE   R187 192     ; R187 := closure(Function #193)
1272 [-]: MOVE      R0 R62       ; R0 := R62
1273 [-]: MOVE      R0 R20       ; R0 := R20
1274 [-]: MOVE      R0 R3        ; R0 := R3
1275 [-]: SETGLOBAL R187 K254    ; ConfigItemSelected := R187
1276 [-]: CLOSURE   R187 193     ; R187 := closure(Function #194)
1277 [-]: MOVE      R0 R62       ; R0 := R62
1278 [-]: MOVE      R0 R20       ; R0 := R20
1279 [-]: SETGLOBAL R187 K255    ; ConfigItemPressed := R187
1280 [-]: CLOSURE   R187 194     ; R187 := closure(Function #195)
1281 [-]: MOVE      R0 R20       ; R0 := R20
1282 [-]: LOADK     R188 K256    ; R188 := "RefreshConfigsMenu"
1283 [-]: CLOSURE   R189 195     ; R189 := closure(Function #196)
1284 [-]: MOVE      R0 R20       ; R0 := R20
1285 [-]: MOVE      R0 R5        ; R0 := R5
1286 [-]: MOVE      R0 R84       ; R0 := R84
1287 [-]: MOVE      R0 R85       ; R0 := R85
1288 [-]: MOVE      R0 R187      ; R0 := R187
1289 [-]: SETTABLE  R55 R188 R189; R55[R188] := R189
1290 [-]: CLOSURE   R188 196     ; R188 := closure(Function #197)
1291 [-]: MOVE      R0 R20       ; R0 := R20
1292 [-]: MOVE      R0 R3        ; R0 := R3
1293 [-]: MOVE      R0 R4        ; R0 := R4
1294 [-]: MOVE      R0 R38       ; R0 := R38
1295 [-]: MOVE      R0 R5        ; R0 := R5
1296 [-]: MOVE      R0 R165      ; R0 := R165
1297 [-]: MOVE      R0 R55       ; R0 := R55
1298 [-]: MOVE      R0 R131      ; R0 := R131
1299 [-]: CLOSURE   R189 197     ; R189 := closure(Function #198)
1300 [-]: MOVE      R0 R64       ; R0 := R64
1301 [-]: MOVE      R0 R166      ; R0 := R166
1302 [-]: SETGLOBAL R189 K257    ; OnNewPreset := R189
1303 [-]: CLOSURE   R189 198     ; R189 := closure(Function #199)
1304 [-]: MOVE      R0 R22       ; R0 := R22
1305 [-]: SETGLOBAL R189 K258    ; UpdateMaxLoadouts := R189
1306 [-]: CLOSURE   R189 199     ; R189 := closure(Function #200)
1307 [-]: MOVE      R0 R13       ; R0 := R13
1308 [-]: MOVE      R0 R55       ; R0 := R55
1309 [-]: CLOSURE   R190 200     ; R190 := closure(Function #201)
1310 [-]: MOVE      R0 R189      ; R0 := R189
1311 [-]: SETGLOBAL R190 K259    ; OpenAbilityProgression := R190
1312 [-]: CLOSURE   R190 201     ; R190 := closure(Function #202)
1313 [-]: SETGLOBAL R190 K260    ; CloseAbilityProgression := R190
1314 [-]: CLOSURE   R190 202     ; R190 := closure(Function #203)
1315 [-]: MOVE      R0 R59       ; R0 := R59
1316 [-]: CLOSURE   R191 203     ; R191 := closure(Function #204)
1317 [-]: MOVE      R0 R73       ; R0 := R73
1318 [-]: MOVE      R0 R186      ; R0 := R186
1319 [-]: MOVE      R0 R78       ; R0 := R78
1320 [-]: CLOSURE   R192 204     ; R192 := closure(Function #205)
1321 [-]: MOVE      R0 R3        ; R0 := R3
1322 [-]: MOVE      R0 R14       ; R0 := R14
1323 [-]: CLOSURE   R193 205     ; R193 := closure(Function #206)
1324 [-]: MOVE      R0 R78       ; R0 := R78
1325 [-]: MOVE      R0 R73       ; R0 := R73
1326 [-]: CLOSURE   R194 206     ; R194 := closure(Function #207)
1327 [-]: MOVE      R0 R2        ; R0 := R2
1328 [-]: MOVE      R0 R18       ; R0 := R18
1329 [-]: MOVE      R0 R23       ; R0 := R23
1330 [-]: MOVE      R0 R115      ; R0 := R115
1331 [-]: MOVE      R0 R3        ; R0 := R3
1332 [-]: MOVE      R0 R12       ; R0 := R12
1333 [-]: MOVE      R0 R11       ; R0 := R11
1334 [-]: MOVE      R0 R194      ; R0 := R194
1335 [-]: CLOSURE   R195 207     ; R195 := closure(Function #208)
1336 [-]: MOVE      R0 R40       ; R0 := R40
1337 [-]: MOVE      R0 R52       ; R0 := R52
1338 [-]: MOVE      R0 R2        ; R0 := R2
1339 [-]: MOVE      R0 R50       ; R0 := R50
1340 [-]: MOVE      R0 R36       ; R0 := R36
1341 [-]: MOVE      R0 R10       ; R0 := R10
1342 [-]: MOVE      R0 R148      ; R0 := R148
1343 [-]: MOVE      R0 R159      ; R0 := R159
1344 [-]: MOVE      R0 R174      ; R0 := R174
1345 [-]: MOVE      R0 R101      ; R0 := R101
1346 [-]: MOVE      R0 R11       ; R0 := R11
1347 [-]: MOVE      R0 R3        ; R0 := R3
1348 [-]: MOVE      R0 R35       ; R0 := R35
1349 [-]: MOVE      R0 R6        ; R0 := R6
1350 [-]: MOVE      R0 R170      ; R0 := R170
1351 [-]: MOVE      R0 R191      ; R0 := R191
1352 [-]: MOVE      R0 R171      ; R0 := R171
1353 [-]: MOVE      R0 R172      ; R0 := R172
1354 [-]: MOVE      R0 R37       ; R0 := R37
1355 [-]: MOVE      R0 R66       ; R0 := R66
1356 [-]: MOVE      R0 R22       ; R0 := R22
1357 [-]: MOVE      R0 R70       ; R0 := R70
1358 [-]: MOVE      R0 R0        ; R0 := R0
1359 [-]: MOVE      R0 R63       ; R0 := R63
1360 [-]: MOVE      R0 R33       ; R0 := R33
1361 [-]: MOVE      R0 R156      ; R0 := R156
1362 [-]: MOVE      R0 R190      ; R0 := R190
1363 [-]: MOVE      R0 R193      ; R0 := R193
1364 [-]: MOVE      R0 R192      ; R0 := R192
1365 [-]: MOVE      R0 R4        ; R0 := R4
1366 [-]: MOVE      R0 R78       ; R0 := R78
1367 [-]: MOVE      R0 R188      ; R0 := R188
1368 [-]: MOVE      R0 R152      ; R0 := R152
1369 [-]: MOVE      R0 R130      ; R0 := R130
1370 [-]: MOVE      R0 R129      ; R0 := R129
1371 [-]: MOVE      R0 R164      ; R0 := R164
1372 [-]: MOVE      R0 R175      ; R0 := R175
1373 [-]: MOVE      R0 R123      ; R0 := R123
1374 [-]: MOVE      R0 R124      ; R0 := R124
1375 [-]: MOVE      R0 R55       ; R0 := R55
1376 [-]: MOVE      R0 R80       ; R0 := R80
1377 [-]: MOVE      R0 R194      ; R0 := R194
1378 [-]: MOVE      R0 R75       ; R0 := R75
1379 [-]: MOVE      R0 R102      ; R0 := R102
1380 [-]: MOVE      R0 R45       ; R0 := R45
1381 [-]: MOVE      R0 R54       ; R0 := R54
1382 [-]: MOVE      R0 R65       ; R0 := R65
1383 [-]: SETGLOBAL R195 K261    ; Initialize := R195
1384 [-]: CLOSURE   R195 208     ; R195 := closure(Function #209)
1385 [-]: SETGLOBAL R195 K262    ; OnChildScreenClosed := R195
1386 [-]: CLOSURE   R195 209     ; R195 := closure(Function #210)
1387 [-]: MOVE      R0 R109      ; R0 := R109
1388 [-]: SETGLOBAL R195 K263    ; Close := R195
1389 [-]: CLOSURE   R195 210     ; R195 := closure(Function #211)
1390 [-]: MOVE      R0 R109      ; R0 := R109
1391 [-]: MOVE      R0 R106      ; R0 := R106
1392 [-]: SETGLOBAL R195 K264    ; TransitionOut := R195
1393 [-]: CLOSURE   R195 211     ; R195 := closure(Function #212)
1394 [-]: MOVE      R0 R109      ; R0 := R109
1395 [-]: SETGLOBAL R195 K265    ; ExitScreen := R195
1396 [-]: CLOSURE   R60 212      ; R60 := closure(Function #213)
1397 [-]: MOVE      R0 R2        ; R0 := R2
1398 [-]: MOVE      R0 R62       ; R0 := R62
1399 [-]: MOVE      R0 R12       ; R0 := R12
1400 [-]: MOVE      R0 R11       ; R0 := R11
1401 [-]: MOVE      R0 R54       ; R0 := R54
1402 [-]: CLOSURE   R57 213      ; R57 := closure(Function #214)
1403 [-]: MOVE      R0 R60       ; R0 := R60
1404 [-]: MOVE      R0 R3        ; R0 := R3
1405 [-]: MOVE      R0 R2        ; R0 := R2
1406 [-]: MOVE      R0 R37       ; R0 := R37
1407 [-]: MOVE      R0 R43       ; R0 := R43
1408 [-]: CLOSURE   R195 214     ; R195 := closure(Function #215)
1409 [-]: MOVE      R0 R57       ; R0 := R57
1410 [-]: SETGLOBAL R195 K266    ; Mod := R195
1411 [-]: CLOSURE   R195 215     ; R195 := closure(Function #216)
1412 [-]: MOVE      R0 R62       ; R0 := R62
1413 [-]: MOVE      R0 R12       ; R0 := R12
1414 [-]: MOVE      R0 R11       ; R0 := R11
1415 [-]: MOVE      R0 R54       ; R0 := R54
1416 [-]: MOVE      R0 R101      ; R0 := R101
1417 [-]: MOVE      R0 R55       ; R0 := R55
1418 [-]: MOVE      R0 R138      ; R0 := R138
1419 [-]: CLOSURE   R196 216     ; R196 := closure(Function #217)
1420 [-]: MOVE      R0 R195      ; R0 := R195
1421 [-]: SETGLOBAL R196 K267    ; Swap := R196
1422 [-]: CLOSURE   R196 217     ; R196 := closure(Function #218)
1423 [-]: MOVE      R0 R62       ; R0 := R62
1424 [-]: MOVE      R0 R12       ; R0 := R12
1425 [-]: MOVE      R0 R11       ; R0 := R11
1426 [-]: MOVE      R0 R101      ; R0 := R101
1427 [-]: CLOSURE   R197 218     ; R197 := closure(Function #219)
1428 [-]: MOVE      R0 R196      ; R0 := R196
1429 [-]: SETGLOBAL R197 K98     ; Cosmetics := R197
1430 [-]: CLOSURE   R197 219     ; R197 := closure(Function #220)
1431 [-]: MOVE      R0 R56       ; R0 := R56
1432 [-]: SETGLOBAL R197 K268    ; EquipItem := R197
1433 [-]: CLOSURE   R197 220     ; R197 := closure(Function #221)
1434 [-]: MOVE      R0 R143      ; R0 := R143
1435 [-]: SETGLOBAL R197 K269    ; BuyItem := R197
1436 [-]: CLOSURE   R197 221     ; R197 := closure(Function #222)
1437 [-]: MOVE      R0 R62       ; R0 := R62
1438 [-]: MOVE      R0 R12       ; R0 := R12
1439 [-]: MOVE      R0 R11       ; R0 := R11
1440 [-]: MOVE      R0 R195      ; R0 := R195
1441 [-]: MOVE      R0 R14       ; R0 := R14
1442 [-]: SETGLOBAL R197 K270    ; onKeyUp_MENU_SELECT := R197
1443 [-]: CLOSURE   R197 222     ; R197 := closure(Function #223)
1444 [-]: MOVE      R0 R62       ; R0 := R62
1445 [-]: MOVE      R0 R12       ; R0 := R12
1446 [-]: MOVE      R0 R11       ; R0 := R11
1447 [-]: MOVE      R0 R196      ; R0 := R196
1448 [-]: SETGLOBAL R197 K271    ; onKeyUp_MENU_GENERIC1 := R197
1449 [-]: CLOSURE   R197 223     ; R197 := closure(Function #224)
1450 [-]: MOVE      R0 R62       ; R0 := R62
1451 [-]: MOVE      R0 R12       ; R0 := R12
1452 [-]: MOVE      R0 R11       ; R0 := R11
1453 [-]: MOVE      R0 R57       ; R0 := R57
1454 [-]: SETGLOBAL R197 K272    ; onKeyUp_MENU_GENERIC2 := R197
1455 [-]: CLOSURE   R197 224     ; R197 := closure(Function #225)
1456 [-]: MOVE      R0 R62       ; R0 := R62
1457 [-]: MOVE      R0 R12       ; R0 := R12
1458 [-]: MOVE      R0 R11       ; R0 := R11
1459 [-]: SETGLOBAL R197 K273    ; onKeyDown_MENU_GENERIC2 := R197
1460 [-]: CLOSURE   R197 225     ; R197 := closure(Function #226)
1461 [-]: MOVE      R0 R62       ; R0 := R62
1462 [-]: SETGLOBAL R197 K274    ; onKeyDown_MENU_RTRIGGER1 := R197
1463 [-]: CLOSURE   R197 226     ; R197 := closure(Function #227)
1464 [-]: MOVE      R0 R62       ; R0 := R62
1465 [-]: MOVE      R0 R12       ; R0 := R12
1466 [-]: MOVE      R0 R11       ; R0 := R11
1467 [-]: MOVE      R0 R189      ; R0 := R189
1468 [-]: SETGLOBAL R197 K275    ; onKeyUp_MENU_RTRIGGER1 := R197
1469 [-]: CLOSURE   R197 227     ; R197 := closure(Function #228)
1470 [-]: MOVE      R0 R62       ; R0 := R62
1471 [-]: MOVE      R0 R21       ; R0 := R21
1472 [-]: MOVE      R0 R190      ; R0 := R190
1473 [-]: SETGLOBAL R197 K276    ; onKeyUp_MENU_LTHUMB := R197
1474 [-]: CLOSURE   R197 228     ; R197 := closure(Function #229)
1475 [-]: CLOSURE   R198 229     ; R198 := closure(Function #230)
1476 [-]: MOVE      R0 R90       ; R0 := R90
1477 [-]: MOVE      R0 R197      ; R0 := R197
1478 [-]: MOVE      R0 R28       ; R0 := R28
1479 [-]: MOVE      R0 R27       ; R0 := R27
1480 [-]: MOVE      R0 R73       ; R0 := R73
1481 [-]: MOVE      R0 R13       ; R0 := R13
1482 [-]: MOVE      R0 R46       ; R0 := R46
1483 [-]: MOVE      R0 R65       ; R0 := R65
1484 [-]: MOVE      R0 R32       ; R0 := R32
1485 [-]: MOVE      R0 R55       ; R0 := R55
1486 [-]: MOVE      R0 R101      ; R0 := R101
1487 [-]: MOVE      R0 R11       ; R0 := R11
1488 [-]: MOVE      R0 R118      ; R0 := R118
1489 [-]: MOVE      R0 R80       ; R0 := R80
1490 [-]: LOADK     R199 K277    ; R199 := "_GoBack"
1491 [-]: CLOSURE   R200 230     ; R200 := closure(Function #231)
1492 [-]: MOVE      R0 R62       ; R0 := R62
1493 [-]: MOVE      R0 R12       ; R0 := R12
1494 [-]: MOVE      R0 R11       ; R0 := R11
1495 [-]: MOVE      R0 R13       ; R0 := R13
1496 [-]: MOVE      R0 R3        ; R0 := R3
1497 [-]: MOVE      R0 R109      ; R0 := R109
1498 [-]: MOVE      R0 R59       ; R0 := R59
1499 [-]: MOVE      R0 R53       ; R0 := R53
1500 [-]: MOVE      R0 R101      ; R0 := R101
1501 [-]: MOVE      R0 R118      ; R0 := R118
1502 [-]: MOVE      R0 R80       ; R0 := R80
1503 [-]: MOVE      R0 R198      ; R0 := R198
1504 [-]: MOVE      R0 R78       ; R0 := R78
1505 [-]: MOVE      R0 R73       ; R0 := R73
1506 [-]: MOVE      R0 R46       ; R0 := R46
1507 [-]: MOVE      R0 R55       ; R0 := R55
1508 [-]: MOVE      R0 R87       ; R0 := R87
1509 [-]: MOVE      R0 R52       ; R0 := R52
1510 [-]: MOVE      R0 R2        ; R0 := R2
1511 [-]: MOVE      R0 R70       ; R0 := R70
1512 [-]: MOVE      R0 R105      ; R0 := R105
1513 [-]: MOVE      R0 R32       ; R0 := R32
1514 [-]: MOVE      R0 R86       ; R0 := R86
1515 [-]: MOVE      R0 R114      ; R0 := R114
1516 [-]: MOVE      R0 R28       ; R0 := R28
1517 [-]: MOVE      R0 R27       ; R0 := R27
1518 [-]: MOVE      R0 R97       ; R0 := R97
1519 [-]: MOVE      R0 R98       ; R0 := R98
1520 [-]: MOVE      R0 R79       ; R0 := R79
1521 [-]: SETTABLE  R55 R199 R200; R55[R199] := R200
1522 [-]: CLOSURE   R199 231     ; R199 := closure(Function #232)
1523 [-]: MOVE      R0 R55       ; R0 := R55
1524 [-]: MOVE      R0 R3        ; R0 := R3
1525 [-]: SETGLOBAL R199 K278    ; GoBack := R199
1526 [-]: CLOSURE   R199 232     ; R199 := closure(Function #233)
1527 [-]: MOVE      R0 R62       ; R0 := R62
1528 [-]: MOVE      R0 R12       ; R0 := R12
1529 [-]: MOVE      R0 R11       ; R0 := R11
1530 [-]: MOVE      R0 R55       ; R0 := R55
1531 [-]: SETGLOBAL R199 K279    ; onKeyDown_MENU_CANCEL := R199
1532 [-]: CLOSURE   R199 233     ; R199 := closure(Function #234)
1533 [-]: MOVE      R0 R66       ; R0 := R66
1534 [-]: MOVE      R0 R25       ; R0 := R25
1535 [-]: MOVE      R0 R151      ; R0 := R151
1536 [-]: MOVE      R0 R150      ; R0 := R150
1537 [-]: SETGLOBAL R199 K280    ; onViewportSizeChanged := R199
1538 [-]: CLOSURE   R199 234     ; R199 := closure(Function #235)
1539 [-]: MOVE      R0 R15       ; R0 := R15
1540 [-]: MOVE      R0 R4        ; R0 := R4
1541 [-]: SETGLOBAL R199 K281    ; AbilityRollOver := R199
1542 [-]: CLOSURE   R199 235     ; R199 := closure(Function #236)
1543 [-]: SETGLOBAL R199 K282    ; AbilityRollOut := R199
1544 [-]: CLOSURE   R199 236     ; R199 := closure(Function #237)
1545 [-]: MOVE      R0 R3        ; R0 := R3
1546 [-]: SETGLOBAL R199 K283    ; RollOver := R199
1547 [-]: CLOSURE   R199 237     ; R199 := closure(Function #238)
1548 [-]: SETGLOBAL R199 K284    ; MenuItemFocused := R199
1549 [-]: CLOSURE   R199 238     ; R199 := closure(Function #239)
1550 [-]: SETGLOBAL R199 K285    ; MenuItemUnfocused := R199
1551 [-]: CLOSURE   R199 239     ; R199 := closure(Function #240)
1552 [-]: MOVE      R0 R62       ; R0 := R62
1553 [-]: SETGLOBAL R199 K286    ; MenuItemPressed := R199
1554 [-]: CLOSURE   R199 240     ; R199 := closure(Function #241)
1555 [-]: SETGLOBAL R199 K287    ; CosmeticsItemFocused := R199
1556 [-]: CLOSURE   R199 241     ; R199 := closure(Function #242)
1557 [-]: SETGLOBAL R199 K288    ; CosmeticsItemUnfocused := R199
1558 [-]: CLOSURE   R199 242     ; R199 := closure(Function #243)
1559 [-]: MOVE      R0 R62       ; R0 := R62
1560 [-]: SETGLOBAL R199 K289    ; CosmeticsItemPressed := R199
1561 [-]: CLOSURE   R199 243     ; R199 := closure(Function #244)
1562 [-]: SETGLOBAL R199 K290    ; DropDownArrowPressed := R199
1563 [-]: CLOSURE   R199 244     ; R199 := closure(Function #245)
1564 [-]: SETGLOBAL R199 K291    ; DropDownArrowFocused := R199
1565 [-]: CLOSURE   R199 245     ; R199 := closure(Function #246)
1566 [-]: SETGLOBAL R199 K292    ; DropDownArrowUnfocused := R199
1567 [-]: CLOSURE   R199 246     ; R199 := closure(Function #247)
1568 [-]: SETGLOBAL R199 K293    ; SortByFocused := R199
1569 [-]: CLOSURE   R199 247     ; R199 := closure(Function #248)
1570 [-]: SETGLOBAL R199 K294    ; SortByUnfocused := R199
1571 [-]: CLOSURE   R199 248     ; R199 := closure(Function #249)
1572 [-]: MOVE      R0 R62       ; R0 := R62
1573 [-]: SETGLOBAL R199 K295    ; SortByPressed := R199
1574 [-]: CLOSURE   R199 249     ; R199 := closure(Function #250)
1575 [-]: MOVE      R0 R14       ; R0 := R14
1576 [-]: SETGLOBAL R199 K296    ; onKeyDown_MENU_CLICK := R199
1577 [-]: CLOSURE   R199 250     ; R199 := closure(Function #251)
1578 [-]: MOVE      R0 R14       ; R0 := R14
1579 [-]: MOVE      R0 R62       ; R0 := R62
1580 [-]: SETGLOBAL R199 K297    ; onKeyUp_MENU_CLICK := R199
1581 [-]: CLOSURE   R199 251     ; R199 := closure(Function #252)
1582 [-]: MOVE      R0 R14       ; R0 := R14
1583 [-]: SETGLOBAL R199 K298    ; onKeyDown_MENU_RIGHT_X := R199
1584 [-]: LOADK     R199 K299    ; R199 := "GetScrollBar"
1585 [-]: CLOSURE   R200 252     ; R200 := closure(Function #253)
1586 [-]: MOVE      R0 R25       ; R0 := R25
1587 [-]: MOVE      R0 R55       ; R0 := R55
1588 [-]: MOVE      R0 R12       ; R0 := R12
1589 [-]: MOVE      R0 R11       ; R0 := R11
1590 [-]: SETTABLE  R55 R199 R200; R55[R199] := R200
1591 [-]: CLOSURE   R199 253     ; R199 := closure(Function #254)
1592 [-]: MOVE      R0 R14       ; R0 := R14
1593 [-]: SETGLOBAL R199 K300    ; onKeyUp_MENU_RIGHT_X := R199
1594 [-]: CLOSURE   R199 254     ; R199 := closure(Function #255)
1595 [-]: MOVE      R0 R55       ; R0 := R55
1596 [-]: MOVE      R0 R62       ; R0 := R62
1597 [-]: CLOSURE   R200 255     ; R200 := closure(Function #256)
1598 [-]: MOVE      R0 R199      ; R0 := R199
1599 [-]: SETGLOBAL R200 K301    ; onKeyDown_MENU_RIGHT_Y := R200
1600 [-]: CLOSURE   R200 256     ; R200 := closure(Function #257)
1601 [-]: MOVE      R0 R199      ; R0 := R199
1602 [-]: SETGLOBAL R200 K302    ; onKeyUp_MENU_RIGHT_Y := R200
1603 [-]: LOADK     R200 K303    ; R200 := "IsMouseInStatCompare"
1604 [-]: CLOSURE   R201 257     ; R201 := closure(Function #258)
1605 [-]: MOVE      R0 R3        ; R0 := R3
1606 [-]: SETTABLE  R55 R200 R201; R55[R200] := R201
1607 [-]: LOADK     R200 K304    ; R200 := "IsMouseInItemGrid"
1608 [-]: CLOSURE   R201 258     ; R201 := closure(Function #259)
1609 [-]: SETTABLE  R55 R200 R201; R55[R200] := R201
1610 [-]: LOADK     R200 K305    ; R200 := "IsMouseInCosmeticsList"
1611 [-]: CLOSURE   R201 259     ; R201 := closure(Function #260)
1612 [-]: MOVE      R0 R3        ; R0 := R3
1613 [-]: SETTABLE  R55 R200 R201; R55[R200] := R201
1614 [-]: CLOSURE   R200 260     ; R200 := closure(Function #261)
1615 [-]: MOVE      R0 R62       ; R0 := R62
1616 [-]: MOVE      R0 R55       ; R0 := R55
1617 [-]: SETGLOBAL R200 K306    ; onKeyDown_MENU_MOUSE_Z := R200
1618 [-]: CLOSURE   R200 261     ; R200 := closure(Function #262)
1619 [-]: MOVE      R0 R168      ; R0 := R168
1620 [-]: SETGLOBAL R200 K307    ; onKeyDown_MENU_LTRIGGER2 := R200
1621 [-]: CLOSURE   R200 262     ; R200 := closure(Function #263)
1622 [-]: MOVE      R0 R168      ; R0 := R168
1623 [-]: SETGLOBAL R200 K308    ; onKeyDown_MENU_RTRIGGER2 := R200
1624 [-]: CLOSURE   R200 263     ; R200 := closure(Function #264)
1625 [-]: SETGLOBAL R200 K309    ; ItemFocused := R200
1626 [-]: CLOSURE   R200 264     ; R200 := closure(Function #265)
1627 [-]: SETGLOBAL R200 K310    ; ItemUnfocused := R200
1628 [-]: CLOSURE   R200 265     ; R200 := closure(Function #266)
1629 [-]: MOVE      R0 R62       ; R0 := R62
1630 [-]: SETGLOBAL R200 K311    ; ItemSelected := R200
1631 [-]: CLOSURE   R200 266     ; R200 := closure(Function #267)
1632 [-]: MOVE      R0 R62       ; R0 := R62
1633 [-]: SETGLOBAL R200 K312    ; ItemPressed := R200
1634 [-]: CLOSURE   R200 267     ; R200 := closure(Function #268)
1635 [-]: SETGLOBAL R200 K313    ; ItemReleasedOutside := R200
1636 [-]: CLOSURE   R200 268     ; R200 := closure(Function #269)
1637 [-]: MOVE      R0 R7        ; R0 := R7
1638 [-]: MOVE      R0 R44       ; R0 := R44
1639 [-]: MOVE      R0 R35       ; R0 := R35
1640 [-]: MOVE      R0 R3        ; R0 := R3
1641 [-]: SETGLOBAL R200 K314    ; TopBtnFocused := R200
1642 [-]: CLOSURE   R200 269     ; R200 := closure(Function #270)
1643 [-]: MOVE      R0 R35       ; R0 := R35
1644 [-]: SETGLOBAL R200 K315    ; TopBtnUnfocused := R200
1645 [-]: CLOSURE   R200 270     ; R200 := closure(Function #271)
1646 [-]: MOVE      R0 R3        ; R0 := R3
1647 [-]: MOVE      R0 R163      ; R0 := R163
1648 [-]: MOVE      R0 R7        ; R0 := R7
1649 [-]: MOVE      R0 R44       ; R0 := R44
1650 [-]: SETGLOBAL R200 K316    ; TopBtnPressed := R200
1651 [-]: CLOSURE   R200 271     ; R200 := closure(Function #272)
1652 [-]: SETGLOBAL R200 K317    ; ConfirmPopup := R200
1653 [-]: CLOSURE   R200 272     ; R200 := closure(Function #273)
1654 [-]: MOVE      R0 R76       ; R0 := R76
1655 [-]: MOVE      R0 R55       ; R0 := R55
1656 [-]: MOVE      R0 R77       ; R0 := R77
1657 [-]: SETGLOBAL R200 K318    ; OnPurchaseResults := R200
1658 [-]: CLOSURE   R200 273     ; R200 := closure(Function #274)
1659 [-]: MOVE      R0 R12       ; R0 := R12
1660 [-]: MOVE      R0 R11       ; R0 := R11
1661 [-]: MOVE      R0 R16       ; R0 := R16
1662 [-]: SETGLOBAL R200 K319    ; onKeyDown_MENU_X := R200
1663 [-]: CLOSURE   R200 274     ; R200 := closure(Function #275)
1664 [-]: MOVE      R0 R12       ; R0 := R12
1665 [-]: MOVE      R0 R11       ; R0 := R11
1666 [-]: MOVE      R0 R16       ; R0 := R16
1667 [-]: SETGLOBAL R200 K320    ; onKeyUp_MENU_X := R200
1668 [-]: CLOSURE   R200 275     ; R200 := closure(Function #276)
1669 [-]: MOVE      R0 R12       ; R0 := R12
1670 [-]: MOVE      R0 R11       ; R0 := R11
1671 [-]: MOVE      R0 R16       ; R0 := R16
1672 [-]: SETGLOBAL R200 K321    ; onKeyDown_MENU_Y := R200
1673 [-]: CLOSURE   R200 276     ; R200 := closure(Function #277)
1674 [-]: MOVE      R0 R12       ; R0 := R12
1675 [-]: MOVE      R0 R11       ; R0 := R11
1676 [-]: MOVE      R0 R16       ; R0 := R16
1677 [-]: SETGLOBAL R200 K322    ; onKeyUp_MENU_Y := R200
1678 [-]: CLOSURE   R200 277     ; R200 := closure(Function #278)
1679 [-]: MOVE      R0 R13       ; R0 := R13
1680 [-]: MOVE      R0 R55       ; R0 := R55
1681 [-]: MOVE      R0 R109      ; R0 := R109
1682 [-]: SETGLOBAL R200 K323    ; HandleCanBeClosed := R200
1683 [-]: CLOSURE   R200 278     ; R200 := closure(Function #279)
1684 [-]: MOVE      R0 R64       ; R0 := R64
1685 [-]: SETGLOBAL R200 K324    ; PresetNameCallback := R200
1686 [-]: CLOSURE   R200 279     ; R200 := closure(Function #280)
1687 [-]: SETGLOBAL R200 K325    ; SetTrigger := R200
1688 [-]: CLOSURE   R200 280     ; R200 := closure(Function #281)
1689 [-]: MOVE      R0 R3        ; R0 := R3
1690 [-]: SETGLOBAL R200 K326    ; LoadoutUIConsoleEntered := R200
1691 [-]: CLOSURE   R200 281     ; R200 := closure(Function #282)
1692 [-]: MOVE      R0 R3        ; R0 := R3
1693 [-]: SETGLOBAL R200 K327    ; LoadoutUIConsoleExited := R200
1694 [-]: CLOSURE   R200 282     ; R200 := closure(Function #283)
1695 [-]: SETGLOBAL R200 K328    ; FadeDown := R200
1696 [-]: CLOSURE   R200 283     ; R200 := closure(Function #284)
1697 [-]: SETGLOBAL R200 K329    ; FadeUp := R200
1698 [-]: LOADK     R200 K330    ; R200 := "_GetUpgradeItem"
1699 [-]: CLOSURE   R201 284     ; R201 := closure(Function #285)
1700 [-]: MOVE      R0 R68       ; R0 := R68
1701 [-]: SETTABLE  R55 R200 R201; R55[R200] := R201
1702 [-]: LOADK     R200 K331    ; R200 := "_CacheCurrentStats"
1703 [-]: CLOSURE   R201 285     ; R201 := closure(Function #286)
1704 [-]: MOVE      R0 R55       ; R0 := R55
1705 [-]: MOVE      R0 R25       ; R0 := R25
1706 [-]: MOVE      R0 R3        ; R0 := R3
1707 [-]: MOVE      R0 R63       ; R0 := R63
1708 [-]: MOVE      R0 R13       ; R0 := R13
1709 [-]: MOVE      R0 R8        ; R0 := R8
1710 [-]: MOVE      R0 R12       ; R0 := R12
1711 [-]: MOVE      R0 R11       ; R0 := R11
1712 [-]: SETTABLE  R55 R200 R201; R55[R200] := R201
1713 [-]: CLOSURE   R200 286     ; R200 := closure(Function #287)
1714 [-]: MOVE      R0 R3        ; R0 := R3
1715 [-]: SETGLOBAL R200 K332    ; RollOverArrow := R200
1716 [-]: CLOSURE   R200 287     ; R200 := closure(Function #288)
1717 [-]: SETGLOBAL R200 K333    ; RollOutArrow := R200
1718 [-]: CLOSURE   R200 288     ; R200 := closure(Function #289)
1719 [-]: MOVE      R0 R62       ; R0 := R62
1720 [-]: SETGLOBAL R200 K334    ; onKeyDown_HIDE_PAUSE_MENU := R200
1721 [-]: CLOSURE   R200 289     ; R200 := closure(Function #290)
1722 [-]: MOVE      R0 R62       ; R0 := R62
1723 [-]: MOVE      R0 R168      ; R0 := R168
1724 [-]: SETGLOBAL R200 K335    ; PressArrow := R200
1725 [-]: CLOSURE   R200 290     ; R200 := closure(Function #291)
1726 [-]: MOVE      R0 R12       ; R0 := R12
1727 [-]: MOVE      R0 R11       ; R0 := R11
1728 [-]: MOVE      R0 R1        ; R0 := R1
1729 [-]: SETGLOBAL R200 K336    ; IconCacheFlushed := R200
1730 [-]: CLOSURE   R200 291     ; R200 := closure(Function #292)
1731 [-]: SETGLOBAL R200 K337    ; SetPhotoBoothArsenal := R200
1732 [-]: CLOSURE   R200 292     ; R200 := closure(Function #293)
1733 [-]: MOVE      R0 R12       ; R0 := R12
1734 [-]: MOVE      R0 R11       ; R0 := R11
1735 [-]: MOVE      R0 R14       ; R0 := R14
1736 [-]: MOVE      R0 R55       ; R0 := R55
1737 [-]: MOVE      R0 R20       ; R0 := R20
1738 [-]: SETGLOBAL R200 K338    ; OnGamepadTransition := R200
1739 [-]: CLOSURE   R200 293     ; R200 := closure(Function #294)
1740 [-]: MOVE      R0 R54       ; R0 := R54
1741 [-]: SETGLOBAL R200 K339    ; SacrificeQuestBlockInput := R200
1742 [-]: CLOSURE   R200 294     ; R200 := closure(Function #295)
1743 [-]: SETGLOBAL R200 K340    ; HideScreenForPlatPurchase := R200
1744 [-]: CLOSURE   R200 295     ; R200 := closure(Function #296)
1745 [-]: MOVE      R0 R47       ; R0 := R47
1746 [-]: SETGLOBAL R200 K341    ; OnAppearanceCopied := R200
1747 [-]: CLOSURE   R200 296     ; R200 := closure(Function #297)
1748 [-]: SETGLOBAL R200 K342    ; StatSelected := R200
1749 [-]: CLOSURE   R200 297     ; R200 := closure(Function #298)
1750 [-]: MOVE      R0 R25       ; R0 := R25
1751 [-]: MOVE      R0 R111      ; R0 := R111
1752 [-]: SETGLOBAL R200 K343    ; StatFocused := R200
1753 [-]: CLOSURE   R200 298     ; R200 := closure(Function #299)
1754 [-]: MOVE      R0 R25       ; R0 := R25
1755 [-]: SETGLOBAL R200 K344    ; StatUnfocused := R200
1756 [-]: CLOSURE   R200 299     ; R200 := closure(Function #300)
1757 [-]: SETGLOBAL R200 K345    ; StatPressed := R200
1758 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 262
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TESTSET   R4 R1 1      ; if R1 then PC := 4 else R4 := R1
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R4 K1        ; R4 := 0.300000
  4 [-]: SETTABLE  R0 K0 R4     ; R0["Timer"] := R4
  5 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["Timer"]
  6 [-]: SETTABLE  R0 K2 R4     ; R0["StartTime"] := R4
  7 [-]: TESTSET   R4 R2 1      ; if R2 then PC := 10 else R4 := R2
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R4 0         ; R4 := 0.000000
 10 [-]: SETTABLE  R0 K3 R4     ; R0["FadeInTime"] := R4
 11 [-]: TESTSET   R4 R3 1      ; if R3 then PC := 16 else R4 := R3
 12 [-]: JMP       16           ; PC := 16
 13 [-]: TESTSET   R4 R2 1      ; if R2 then PC := 16 else R4 := R2
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADK     R4 K5        ; R4 := 0.100000
 16 [-]: SETTABLE  R0 K4 R4     ; R0["FadeOutTime"] := R4
 17 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 288
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: NEWTABLE  R1 0 8       ; R1 := {}
  2 [-]: SETTABLE  R1 K0 K1     ; R1["mResLoader"] := nil
  3 [-]: GETGLOBAL R2 K3        ; R2 := LoaderState
  4 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["LS_NONE"]
  5 [-]: SETTABLE  R1 K2 R2     ; R1["mState"] := R2
  6 [-]: SETTABLE  R1 K5 R0     ; R1["mCallback"] := R0
  7 [-]: SETTABLE  R1 K6 K1     ; R1["mItems"] := nil
  8 [-]: CLOSURE   R2 0         ; R2 := closure(Function #2.1)
  9 [-]: SETTABLE  R1 K7 R2     ; R1["Load"] := R2
 10 [-]: CLOSURE   R2 1         ; R2 := closure(Function #2.2)
 11 [-]: SETTABLE  R1 K8 R2     ; R1["Update"] := R2
 12 [-]: CLOSURE   R2 2         ; R2 := closure(Function #2.3)
 13 [-]: SETTABLE  R1 K9 R2     ; R1["Release"] := R2
 14 [-]: CLOSURE   R2 3         ; R2 := closure(Function #2.4)
 15 [-]: SETTABLE  R1 K10 R2    ; R1["Pin"] := R2
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #2.1:
;
; Name:            
; Defined at line: 295
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SETTABLE  R0 K0 R1     ; R0["mItems"] := R1
  2 [-]: GETGLOBAL R3 K2        ; R3 := 0xbd496aa1
  3 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0x42645da3]
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: MOVE      R5 R2        ; R5 := R2
  6 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  7 [-]: SETTABLE  R0 K1 R3     ; R0["mResLoader"] := R3
  8 [-]: GETGLOBAL R3 K5        ; R3 := LoaderState
  9 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["LS_LOADING"]
 10 [-]: SETTABLE  R0 K4 R3     ; R0["mState"] := R3
 11 [-]: RETURN    R0 1         ; return 


; Function #2.2:
;
; Name:            
; Defined at line: 300
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mState"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := LoaderState
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["LS_LOADING"]
  4 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 44
  5 [-]: JMP       44           ; PC := 44
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  7 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mResLoader"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R1 K1        ; R1 := LoaderState
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["LS_NONE"]
 13 [-]: SETTABLE  R0 K0 R1     ; R0["mState"] := R1
 14 [-]: JMP       44           ; PC := 44
 15 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mResLoader"]
 16 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xd2d3875a]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 44
 19 [-]: JMP       44           ; PC := 44
 20 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0xc8802016
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mItems"]
 23 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 24 [-]: JMP       32           ; PC := 32
 25 [-]: GETGLOBAL R7 K9        ; R7 := 0x33bdd652
 26 [-]: GETTABLE  R7 R7 K10    ; R7 := R7[0x23d5322f]
 27 [-]: MOVE      R8 R1        ; R8 := R1
 28 [-]: GETGLOBAL R9 K11       ; R9 := 0x88efc25e
 29 [-]: MOVE      R10 R6       ; R10 := R6
 30 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 31 [-]: CALL      R7 0 1       ; R7(R8,...)
 32 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 25; R4 := R5 end
 33 [-]: JMP       25           ; PC := 25
 34 [-]: SETTABLE  R0 K8 R1     ; R0["mItems"] := R1
 35 [-]: GETGLOBAL R7 K1        ; R7 := LoaderState
 36 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["LS_DONE"]
 37 [-]: SETTABLE  R0 K0 R7     ; R0["mState"] := R7
 38 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["mCallback"]
 39 [-]: EQ        1 R7 K14     ; if R7 == nil then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETTABLE  R7 R0 K15    ; R7 := R0[0x7ca0d7fa]
 42 [-]: MOVE      R8 R0        ; R8 := R0
 43 [-]: CALL      R7 2 1       ; R7(R8)
 44 [-]: RETURN    R0 1         ; return 


; Function #2.3:
;
; Name:            
; Defined at line: 317
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mResLoader"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: SETTABLE  R0 K2 K3     ; R0["mItems"] := nil
  7 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mResLoader"]
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x8b1fab28]
  9 [-]: CALL      R1 2 1       ; R1(R2)
 10 [-]: RETURN    R0 1         ; return 


; Function #2.4:
;
; Name:            
; Defined at line: 323
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mState"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := LoaderState
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["LS_DONE"]
  4 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: SETTABLE  R0 K3 R1     ; R0["mItems"] := R1
  7 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 331
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["SacrificeQuestInputBlocked"]
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 335
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 339
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R0 1         ; if R0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  4 [-]: LOADK     R2 K1        ; R2 := "Photobooth session hosting failed"
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 345
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["InSimulacrum"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 26
  4 [-]: JMP       26           ; PC := 26
  5 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0xbe190284
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: TEST      R0 1         ; if R0 then PC := 26
  9 [-]: JMP       26           ; PC := 26
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0xbe190284
 11 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xf2deaf69]
 12 [-]: GETGLOBAL R2 K5        ; R2 := gLotusSandBoxGameRulesType
 13 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 14 [-]: TEST      R0 0         ; if not R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R0 K6        ; R0 := 0x89326c93
 17 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x18d05d30]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: TEST      R0 0         ; if not R0 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: LOADK     R0 3         ; R0 := 3.000000
 22 [-]: RETURN    R0 2         ; return R0
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADK     R0 4         ; R0 := 4.000000
 25 [-]: RETURN    R0 2         ; return R0
 26 [-]: LOADK     R0 0         ; R0 := 0.000000
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 356
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 0         ; R0 := 0.000000
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Current"]
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 3.000000 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R0 2         ; R0 := 2.000000
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Current"]
 10 [-]: EQ        0 R1 K3      ; if R1 ~= 2.000000 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADK     R0 3         ; R0 := 3.000000
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 367
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x23ddc82a]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: NOT       R0 R0        ; R0 := not R0
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 12
 12 [-]: LOADBOOL  R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 373
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 0         ; if not R5 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADNIL   R5 R5        ; R5 := nil
  8 [-]: RETURN    R5 2         ; return R5
  9 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 10 [-]: SETUPVAL  R5 U0        ; U82 := R0
 11 [-]: SELF      R5 R1 K1     ; R6 := R1; R5 := R1[0xde321e6f]
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: GETUPVAL  R6 U1        ; R6 := U1
 14 [-]: GETTABLE  R6 R6 K2     ; R6 := R6[0x06d055f9]
 15 [-]: SELF      R7 R5 K3     ; R8 := R5; R7 := R5[0xac03381f]
 16 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 17 [-]: SELF      R8 R5 K4     ; R9 := R5; R8 := R5[0x2303a280]
 18 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 19 [-]: SELF      R9 R5 K5     ; R10 := R5; R9 := R5[0xf7d48ee0]
 20 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 21 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 22 [-]: TEST      R3 0         ; if not R3 then PC := 39
 23 [-]: JMP       39           ; PC := 39
 24 [-]: GETUPVAL  R7 U2        ; R7 := U2
 25 [-]: GETTABLE  R7 R7 K6     ; R7 := R7[0xe6e9dfc9]
 26 [-]: MOVE      R8 R0        ; R8 := R0
 27 [-]: LOADNIL   R9 R9        ; R9 := nil
 28 [-]: MOVE      R10 R6       ; R10 := R6
 29 [-]: GETGLOBAL R11 K7       ; R11 := _T
 30 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["ArsenalState"]
 31 [-]: EQ        1 R11 K10    ; if R11 == 2.000000 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 34
 34 [-]: LOADBOOL  R11 1 0      ; R11 := true
 35 [-]: LOADNIL   R12 R12      ; R12 := nil
 36 [-]: CALL      R7 6 2       ; R7 := R7(R8,R9,R10,R11,R12)
 37 [-]: MOVE      R4 R7        ; R4 := R7
 38 [-]: JMP       53           ; PC := 53
 39 [-]: GETUPVAL  R7 U2        ; R7 := U2
 40 [-]: GETTABLE  R7 R7 K6     ; R7 := R7[0xe6e9dfc9]
 41 [-]: MOVE      R8 R0        ; R8 := R0
 42 [-]: MOVE      R9 R1        ; R9 := R1
 43 [-]: MOVE      R10 R6       ; R10 := R6
 44 [-]: GETGLOBAL R11 K7       ; R11 := _T
 45 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["ArsenalState"]
 46 [-]: EQ        1 R11 K10    ; if R11 == 2.000000 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 49
 49 [-]: LOADBOOL  R11 1 0      ; R11 := true
 50 [-]: LOADNIL   R12 R12      ; R12 := nil
 51 [-]: CALL      R7 6 2       ; R7 := R7(R8,R9,R10,R11,R12)
 52 [-]: MOVE      R4 R7        ; R4 := R7
 53 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
 54 [-]: MOVE      R8 R6        ; R8 := R6
 55 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 56 [-]: TEST      R7 1         ; if R7 then PC := 84
 57 [-]: JMP       84           ; PC := 84
 58 [-]: LOADNIL   R7 R7        ; R7 := nil
 59 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 60 [-]: GETGLOBAL R9 K11       ; R9 := mPlayerProfile
 61 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 62 [-]: TEST      R8 1         ; if R8 then PC := 70
 63 [-]: JMP       70           ; PC := 70
 64 [-]: GETGLOBAL R8 K11       ; R8 := mPlayerProfile
 65 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0x40e9c32b]
 66 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 67 [-]: SELF      R9 R8 K13    ; R10 := R8; R9 := R8[0xa39afcfe]
 68 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 69 [-]: MOVE      R7 R9        ; R7 := R9
 70 [-]: LOADK     R9 1         ; R9 := 1.000000
 71 [-]: LOADK     R10 4        ; R10 := 4.000000
 72 [-]: LOADK     R11 1        ; R11 := 1.000000
 73 [-]: FORPREP   R9 83        ; R9 -= R11; PC := 83
 74 [-]: NEWTABLE  R13 0 5      ; R13 := {}
 75 [-]: SETTABLE  R13 K14 K15  ; R13["IsAbility"] := true
 76 [-]: SETTABLE  R13 K16 K15  ; R13["CustomEntry"] := true
 77 [-]: SETTABLE  R13 K17 R6   ; R13["Suit"] := R6
 78 [-]: SUB       R14 R12 K19  ; R14 := R12 - 1.000000
 79 [-]: SETTABLE  R13 K18 R14  ; R13["AbilityIndex"] := R14
 80 [-]: SETTABLE  R13 K20 R7   ; R13["ModdedStats"] := R7
 81 [-]: GETUPVAL  R14 U0       ; R14 := U0
 82 [-]: SETTABLE  R14 R12 R13  ; R14[R12] := R13
 83 [-]: FORLOOP   R9 74        ; R9 += R11; if R9 <= R10 then begin PC := 74; R12 := R9 end
 84 [-]: GETTABLE  R14 R4 K21   ; R14 := R4["mStats"]
 85 [-]: RETURN    R14 2        ; return R14
 86 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 411
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 0.000000 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: LOADK     R1 3         ; R1 := 3.000000
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       32           ; PC := 32
  6 [-]: EQ        0 R0 K3      ; if R0 ~= 2.000000 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: LOADK     R1 1         ; R1 := 1.000000
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: JMP       32           ; PC := 32
 11 [-]: EQ        0 R0 K4      ; if R0 ~= 1.000000 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LOADK     R1 0         ; R1 := 0.000000
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: JMP       32           ; PC := 32
 16 [-]: EQ        0 R0 K5      ; if R0 ~= 3.000000 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: LOADK     R1 5         ; R1 := 5.000000
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: JMP       32           ; PC := 32
 21 [-]: EQ        1 R0 K6      ; if R0 == 5.000000 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: EQ        0 R0 K7      ; if R0 ~= 6.000000 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: LOADK     R1 7         ; R1 := 7.000000
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: JMP       32           ; PC := 32
 28 [-]: EQ        0 R0 K8      ; if R0 ~= 4.000000 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADK     R1 10        ; R1 := 10.000000
 31 [-]: RETURN    R1 2         ; return R1
 32 [-]: LOADNIL   R1 R1        ; R1 := nil
 33 [-]: RETURN    R1 2         ; return R1
 34 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 428
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xa9882367]
  3 [-]: LOADK     R1 K1        ; R1 := "MoaInteractionAction"
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 25
  9 [-]: JMP       25           ; PC := 25
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x25d99d89
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x9f91f49d]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0x383d2e7d]
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: JMP       25           ; PC := 25
 23 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0xf4e253b6]
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 439
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
  4 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETGLOBAL R1 K1        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MenuSuitAvatar"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xde321e6f]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x2676deee]
 16 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 17 [-]: RETURN    R2 0         ; return R2,...
 18 [-]: LOADNIL   R2 R2        ; R2 := nil
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: GETGLOBAL R2 K6        ; R2 := 0xbe190284
 21 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x7cf8123f]
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 24 [-]: RETURN    R2 0         ; return R2,...
 25 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 451
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x20b98db3]
  6 [-]: LOADK     R3 K3        ; R3 := "MenuPanel.Right.Tf.text"
  7 [-]: GETUPVAL  R4 U1        ; R4 := U1
  8 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0x06d055f9]
  9 [-]: GETUPVAL  R5 U2        ; R5 := U2
 10 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["SELECTING_PART"]
 11 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 14
 14 [-]: LOADBOOL  R5 1 0       ; R5 := true
 15 [-]: LOADK     R6 K6        ; R6 := "<MENU_RTHUMB>"
 16 [-]: LOADK     R7 K7        ; R7 := "<MENU_RTRIGGER2>"
 17 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 458
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETUPVAL  R3 U1        ; R3 := U1
  3 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
  4 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x46a0ebf5]
  8 [-]: GETUPVAL  R4 U2        ; R4 := U2
  9 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["ARCHWING_WAYPOINT"]
 10 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 11 [-]: MOVE      R1 R2        ; R1 := R2
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x462c251c]
 15 [-]: GETUPVAL  R4 U2        ; R4 := U2
 16 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["ARCHWING_WAYPOINT"]
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: LOADK     R6 0         ; R6 := 0.000000
 19 [-]: GETUPVAL  R7 U3        ; R7 := U3
 20 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["ArchwingWaypointFindRadius"]
 21 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 22 [-]: MOVE      R1 R2        ; R1 := R2
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 470
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xc1a84a4b]
  2 [-]: LOADK     R4 6         ; R4 := 6.000000
  3 [-]: LOADK     R5 0         ; R5 := 0.000000
  4 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  6 [-]: GETGLOBAL R4 K3        ; R4 := _T
  7 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["KDriveAvatar"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 0         ; if not R3 then PC := 111
 10 [-]: JMP       111          ; PC := 111
 11 [-]: GETTABLE  R3 R2 K5     ; R3 := R2["mItem"]
 12 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mModularParts"]
 13 [-]: LEN       R3 R3        ; R3 := # R3
 14 [-]: LT        0 K7 R3      ; if 0.000000 >= R3 then PC := 111
 15 [-]: JMP       111          ; PC := 111
 16 [-]: GETGLOBAL R3 K8        ; R3 := 0x88efc25e
 17 [-]: GETGLOBAL R4 K9        ; R4 := 0xdac9387c
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K10       ; R4 := 0x00046924
 20 [-]: GETGLOBAL R5 K3        ; R5 := _T
 21 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["DEFAULT_SUIT_ROTATION"]
 22 [-]: LOADK     R6 0         ; R6 := 0.000000
 23 [-]: LOADK     R7 0         ; R7 := 0.000000
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: SELF      R5 R1 K12    ; R6 := R1; R5 := R1[0xd1586535]
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: GETGLOBAL R6 K13       ; R6 := 0xa421af95
 28 [-]: LOADK     R7 0         ; R7 := 0.000000
 29 [-]: LOADK     R8 K14       ; R8 := 1.050000
 30 [-]: LOADK     R9 0         ; R9 := 0.000000
 31 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 32 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 33 [-]: GETUPVAL  R6 U0        ; R6 := U0
 34 [-]: GETTABLE  R6 R6 K15    ; R6 := R6[0x09b8fbee]
 35 [-]: SELF      R7 R1 K12    ; R8 := R1; R7 := R1[0xd1586535]
 36 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 37 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 38 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 39 [-]: MOVE      R8 R6        ; R8 := R6
 40 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 41 [-]: TEST      R7 1         ; if R7 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: SELF      R7 R6 K12    ; R8 := R6; R7 := R6[0xd1586535]
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: GETGLOBAL R8 K13       ; R8 := 0xa421af95
 46 [-]: LOADK     R9 0         ; R9 := 0.000000
 47 [-]: LOADK     R10 1        ; R10 := 1.250000
 48 [-]: LOADK     R11 0        ; R11 := 0.000000
 49 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 50 [-]: ADD       R5 R7 R8     ; R5 := R7 + R8
 51 [-]: GETGLOBAL R7 K3        ; R7 := _T
 52 [-]: GETGLOBAL R8 K16       ; R8 := 0x89326c93
 53 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0x05909209]
 54 [-]: MOVE      R10 R3       ; R10 := R3
 55 [-]: MOVE      R11 R5       ; R11 := R5
 56 [-]: MOVE      R12 R4       ; R12 := R4
 57 [-]: MOVE      R13 R1       ; R13 := R1
 58 [-]: MOVE      R14 R1       ; R14 := R1
 59 [-]: GETUPVAL  R15 U1       ; R15 := U1
 60 [-]: GETTABLE  R15 R15 K18  ; R15 := R15[0x06d055f9]
 61 [-]: GETGLOBAL R16 K16      ; R16 := 0x89326c93
 62 [-]: SELF      R16 R16 K19  ; R17 := R16; R16 := R16[0x18d05d30]
 63 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 64 [-]: LOADK     R17 3        ; R17 := 3.000000
 65 [-]: LOADK     R18 4        ; R18 := 4.000000
 66 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
 67 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 68 [-]: SETTABLE  R7 K4 R8     ; R7["KDriveAvatar"] := R8
 69 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 70 [-]: GETGLOBAL R8 K3        ; R8 := _T
 71 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["KDriveAvatar"]
 72 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 73 [-]: TEST      R7 1         ; if R7 then PC := 111
 74 [-]: JMP       111          ; PC := 111
 75 [-]: GETGLOBAL R7 K3        ; R7 := _T
 76 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["KDriveAvatar"]
 77 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7[0x6667e5d4]
 78 [-]: LOADBOOL  R9 1 0       ; R9 := true
 79 [-]: CALL      R7 3 1       ; R7(R8,R9)
 80 [-]: GETGLOBAL R7 K3        ; R7 := _T
 81 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["KDriveAvatar"]
 82 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0x044b7be8]
 83 [-]: LOADBOOL  R9 1 0       ; R9 := true
 84 [-]: CALL      R7 3 1       ; R7(R8,R9)
 85 [-]: GETGLOBAL R7 K3        ; R7 := _T
 86 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["KDriveAvatar"]
 87 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0xd749da12]
 88 [-]: LOADBOOL  R9 0 0       ; R9 := false
 89 [-]: CALL      R7 3 1       ; R7(R8,R9)
 90 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 91 [-]: GETGLOBAL R8 K3        ; R8 := _T
 92 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["suitTable"]
 93 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 94 [-]: TEST      R7 1         ; if R7 then PC := 111
 95 [-]: JMP       111          ; PC := 111
 96 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 97 [-]: GETGLOBAL R8 K3        ; R8 := _T
 98 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["suitTable"]
 99 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["positions"]
100 [-]: CALL      R7 2 2       ; R7 := R7(R8)
101 [-]: TEST      R7 1         ; if R7 then PC := 111
102 [-]: JMP       111          ; PC := 111
103 [-]: GETGLOBAL R7 K3        ; R7 := _T
104 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["suitTable"]
105 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["positions"]
106 [-]: GETGLOBAL R8 K3        ; R8 := _T
107 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["KDriveAvatar"]
108 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8[0x388577d5]
109 [-]: CALL      R8 2 2       ; R8 := R8(R9)
110 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
111 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
112 [-]: GETGLOBAL R8 K3        ; R8 := _T
113 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["KDriveAvatar"]
114 [-]: CALL      R7 2 2       ; R7 := R7(R8)
115 [-]: TEST      R7 1         ; if R7 then PC := 205
116 [-]: JMP       205          ; PC := 205
117 [-]: GETGLOBAL R7 K3        ; R7 := _T
118 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["KDriveAvatar"]
119 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0xde321e6f]
120 [-]: CALL      R7 2 2       ; R7 := R7(R8)
121 [-]: SELF      R8 R7 K27    ; R9 := R7; R8 := R7[0x374b084a]
122 [-]: CALL      R8 2 1       ; R8(R9)
123 [-]: SELF      R8 R7 K28    ; R9 := R7; R8 := R7[0xf596420f]
124 [-]: CALL      R8 2 1       ; R8(R9)
125 [-]: GETGLOBAL R8 K3        ; R8 := _T
126 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["KDriveAvatar"]
127 [-]: SELF      R8 R8 K29    ; R9 := R8; R8 := R8[0x511d26b8]
128 [-]: GETGLOBAL R10 K8       ; R10 := 0x88efc25e
129 [-]: GETGLOBAL R11 K30      ; R11 := 0x26072944
130 [-]: CALL      R10 2 2      ; R10 := R10(R11)
131 [-]: LOADBOOL  R11 0 0      ; R11 := false
132 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
133 [-]: GETGLOBAL R9 K2        ; R9 := 0x7b998233
134 [-]: MOVE      R10 R8       ; R10 := R8
135 [-]: CALL      R9 2 2       ; R9 := R9(R10)
136 [-]: TEST      R9 1         ; if R9 then PC := 187
137 [-]: JMP       187          ; PC := 187
138 [-]: GETTABLE  R9 R2 K31    ; R9 := R2["mAttachedUpgrades"]
139 [-]: GETGLOBAL R10 K32      ; R10 := 0xc8802016
140 [-]: MOVE      R11 R9       ; R11 := R9
141 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
142 [-]: JMP       161          ; PC := 161
143 [-]: GETGLOBAL R15 K2       ; R15 := 0x7b998233
144 [-]: GETTABLE  R16 R14 K33  ; R16 := R14["mItemType"]
145 [-]: CALL      R15 2 2      ; R15 := R15(R16)
146 [-]: TEST      R15 1        ; if R15 then PC := 161
147 [-]: JMP       161          ; PC := 161
148 [-]: GETGLOBAL R15 K16      ; R15 := 0x89326c93
149 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15[0x765dad71]
150 [-]: GETGLOBAL R17 K8       ; R17 := 0x88efc25e
151 [-]: GETTABLE  R18 R14 K33  ; R18 := R14["mItemType"]
152 [-]: CALL      R17 2 2      ; R17 := R17(R18)
153 [-]: MOVE      R18 R8       ; R18 := R8
154 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
155 [-]: SELF      R16 R15 K35  ; R17 := R15; R16 := R15[0x6868f7f8]
156 [-]: GETTABLE  R18 R14 K36  ; R18 := R14["mUpgradeFingerprint"]
157 [-]: CALL      R16 3 1      ; R16(R17,R18)
158 [-]: SELF      R16 R8 K37   ; R17 := R8; R16 := R8[0x5e6704ff]
159 [-]: MOVE      R18 R15      ; R18 := R15
160 [-]: CALL      R16 3 1      ; R16(R17,R18)
161 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 143; R12 := R13 end
162 [-]: JMP       143          ; PC := 143
163 [-]: SELF      R16 R8 K38   ; R17 := R8; R16 := R8[0xa6101f7e]
164 [-]: GETTABLE  R18 R2 K5    ; R18 := R2["mItem"]
165 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["mModularParts"]
166 [-]: GETTABLE  R19 R2 K5    ; R19 := R2["mItem"]
167 [-]: SELF      R19 R19 K39  ; R20 := R19; R19 := R19[0xdbfbf6c0]
168 [-]: LOADK     R21 3        ; R21 := 3.000000
169 [-]: CALL      R19 3 0      ; R19,... := R19(R20,R21)
170 [-]: CALL      R16 0 1      ; R16(R17,...)
171 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
172 [-]: GETGLOBAL R17 K40      ; R17 := 0x25d99d89
173 [-]: CALL      R16 2 2      ; R16 := R16(R17)
174 [-]: TEST      R16 1        ; if R16 then PC := 187
175 [-]: JMP       187          ; PC := 187
176 [-]: GETTABLE  R16 R2 K5    ; R16 := R2["mItem"]
177 [-]: SELF      R16 R16 K41  ; R17 := R16; R16 := R16[0x68d708a7]
178 [-]: CALL      R16 2 2      ; R16 := R16(R17)
179 [-]: SELF      R17 R8 K42   ; R18 := R8; R17 := R8[0xaa041663]
180 [-]: MOVE      R19 R16      ; R19 := R16
181 [-]: CALL      R17 3 1      ; R17(R18,R19)
182 [-]: SELF      R17 R16 K43  ; R18 := R16; R17 := R16[0x61b59a83]
183 [-]: GETGLOBAL R19 K3       ; R19 := _T
184 [-]: GETTABLE  R19 R19 K4   ; R19 := R19["KDriveAvatar"]
185 [-]: LOADBOOL  R20 0 0      ; R20 := false
186 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
187 [-]: GETGLOBAL R17 K3       ; R17 := _T
188 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["KDriveAvatar"]
189 [-]: SELF      R17 R17 K21  ; R18 := R17; R17 := R17[0x044b7be8]
190 [-]: LOADBOOL  R19 1 0      ; R19 := true
191 [-]: CALL      R17 3 1      ; R17(R18,R19)
192 [-]: GETGLOBAL R17 K3       ; R17 := _T
193 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["KDriveAvatar"]
194 [-]: SELF      R17 R17 K44  ; R18 := R17; R17 := R17[0x768274d6]
195 [-]: LOADBOOL  R19 0 0      ; R19 := false
196 [-]: LOADBOOL  R20 1 0      ; R20 := true
197 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
198 [-]: GETGLOBAL R17 K3       ; R17 := _T
199 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["KDriveAvatar"]
200 [-]: SELF      R17 R17 K45  ; R18 := R17; R17 := R17[0x3273ba96]
201 [-]: GETGLOBAL R19 K46      ; R19 := 0x0469f296
202 [-]: LOADK     R20 K47      ; R20 := "HubIgnoreNearCull"
203 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
204 [-]: CALL      R17 0 1      ; R17(R18,...)
205 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 522
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xc1a84a4b]
  2 [-]: LOADK     R4 8         ; R4 := 8.000000
  3 [-]: LOADK     R5 0         ; R5 := 0.000000
  4 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  6 [-]: GETGLOBAL R4 K3        ; R4 := _T
  7 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["MechAvatar"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 0         ; if not R3 then PC := 113
 10 [-]: JMP       113          ; PC := 113
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 12 [-]: GETTABLE  R4 R2 K5     ; R4 := R2["mItem"]
 13 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mItemType"]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: TEST      R3 1         ; if R3 then PC := 113
 16 [-]: JMP       113          ; PC := 113
 17 [-]: GETGLOBAL R3 K7        ; R3 := 0x88efc25e
 18 [-]: GETGLOBAL R4 K8        ; R4 := 0x6658d5be
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K9        ; R4 := 0x00046924
 21 [-]: GETGLOBAL R5 K3        ; R5 := _T
 22 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["DEFAULT_SUIT_ROTATION"]
 23 [-]: LOADK     R6 0         ; R6 := 0.000000
 24 [-]: LOADK     R7 0         ; R7 := 0.000000
 25 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 26 [-]: SELF      R5 R1 K11    ; R6 := R1; R5 := R1[0xd1586535]
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: GETTABLE  R6 R6 K12    ; R6 := R6[0x09b8fbee]
 30 [-]: SELF      R7 R1 K11    ; R8 := R1; R7 := R1[0xd1586535]
 31 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 32 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 33 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 34 [-]: MOVE      R8 R6        ; R8 := R6
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: TEST      R7 1         ; if R7 then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: SELF      R7 R6 K11    ; R8 := R6; R7 := R6[0xd1586535]
 39 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 40 [-]: GETGLOBAL R8 K13       ; R8 := 0xa421af95
 41 [-]: LOADK     R9 0         ; R9 := 0.000000
 42 [-]: LOADK     R10 -2       ; R10 := -2.000000
 43 [-]: LOADK     R11 K14      ; R11 := 1.350000
 44 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 45 [-]: ADD       R5 R7 R8     ; R5 := R7 + R8
 46 [-]: GETGLOBAL R7 K3        ; R7 := _T
 47 [-]: GETGLOBAL R8 K15       ; R8 := 0x89326c93
 48 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x05909209]
 49 [-]: MOVE      R10 R3       ; R10 := R3
 50 [-]: MOVE      R11 R5       ; R11 := R5
 51 [-]: MOVE      R12 R4       ; R12 := R4
 52 [-]: MOVE      R13 R1       ; R13 := R1
 53 [-]: MOVE      R14 R1       ; R14 := R1
 54 [-]: GETUPVAL  R15 U1       ; R15 := U1
 55 [-]: GETTABLE  R15 R15 K17  ; R15 := R15[0x06d055f9]
 56 [-]: GETGLOBAL R16 K15      ; R16 := 0x89326c93
 57 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16[0x18d05d30]
 58 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 59 [-]: LOADK     R17 3        ; R17 := 3.000000
 60 [-]: LOADK     R18 4        ; R18 := 4.000000
 61 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
 62 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 63 [-]: SETTABLE  R7 K4 R8     ; R7["MechAvatar"] := R8
 64 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 65 [-]: GETGLOBAL R8 K3        ; R8 := _T
 66 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["MechAvatar"]
 67 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 68 [-]: TEST      R7 1         ; if R7 then PC := 113
 69 [-]: JMP       113          ; PC := 113
 70 [-]: GETGLOBAL R7 K3        ; R7 := _T
 71 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["MechAvatar"]
 72 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7[0x0cca925a]
 73 [-]: GETGLOBAL R9 K21       ; R9 := 0x0469f296
 74 [-]: LOADK     R10 K22      ; R10 := "TENNO"
 75 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 76 [-]: CALL      R7 0 1       ; R7(R8,...)
 77 [-]: GETGLOBAL R7 K3        ; R7 := _T
 78 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["MechAvatar"]
 79 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7[0x6667e5d4]
 80 [-]: LOADBOOL  R9 1 0       ; R9 := true
 81 [-]: CALL      R7 3 1       ; R7(R8,R9)
 82 [-]: GETGLOBAL R7 K3        ; R7 := _T
 83 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["MechAvatar"]
 84 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7[0x044b7be8]
 85 [-]: LOADBOOL  R9 1 0       ; R9 := true
 86 [-]: CALL      R7 3 1       ; R7(R8,R9)
 87 [-]: GETGLOBAL R7 K3        ; R7 := _T
 88 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["MechAvatar"]
 89 [-]: SELF      R7 R7 K25    ; R8 := R7; R7 := R7[0xd749da12]
 90 [-]: LOADBOOL  R9 0 0       ; R9 := false
 91 [-]: CALL      R7 3 1       ; R7(R8,R9)
 92 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 93 [-]: GETGLOBAL R8 K3        ; R8 := _T
 94 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["suitTable"]
 95 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 96 [-]: TEST      R7 1         ; if R7 then PC := 113
 97 [-]: JMP       113          ; PC := 113
 98 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 99 [-]: GETGLOBAL R8 K3        ; R8 := _T
100 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["suitTable"]
101 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["positions"]
102 [-]: CALL      R7 2 2       ; R7 := R7(R8)
103 [-]: TEST      R7 1         ; if R7 then PC := 113
104 [-]: JMP       113          ; PC := 113
105 [-]: GETGLOBAL R7 K3        ; R7 := _T
106 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["suitTable"]
107 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["positions"]
108 [-]: GETGLOBAL R8 K3        ; R8 := _T
109 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["MechAvatar"]
110 [-]: SELF      R8 R8 K28    ; R9 := R8; R8 := R8[0x388577d5]
111 [-]: CALL      R8 2 2       ; R8 := R8(R9)
112 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
113 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
114 [-]: GETGLOBAL R8 K3        ; R8 := _T
115 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["MechAvatar"]
116 [-]: CALL      R7 2 2       ; R7 := R7(R8)
117 [-]: TEST      R7 1         ; if R7 then PC := 252
118 [-]: JMP       252          ; PC := 252
119 [-]: GETGLOBAL R7 K3        ; R7 := _T
120 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["MechAvatar"]
121 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7[0xde321e6f]
122 [-]: CALL      R7 2 2       ; R7 := R7(R8)
123 [-]: SELF      R8 R7 K30    ; R9 := R7; R8 := R7[0x374b084a]
124 [-]: CALL      R8 2 1       ; R8(R9)
125 [-]: SELF      R8 R7 K31    ; R9 := R7; R8 := R7[0xf596420f]
126 [-]: CALL      R8 2 1       ; R8(R9)
127 [-]: SELF      R8 R7 K32    ; R9 := R7; R8 := R7[0x1d2dfe4a]
128 [-]: MOVE      R10 R0       ; R10 := R0
129 [-]: LOADK     R11 8        ; R11 := 8.000000
130 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
131 [-]: SELF      R8 R7 K33    ; R9 := R7; R8 := R7[0xf7d48ee0]
132 [-]: CALL      R8 2 2       ; R8 := R8(R9)
133 [-]: GETGLOBAL R9 K2        ; R9 := 0x7b998233
134 [-]: MOVE      R10 R8       ; R10 := R8
135 [-]: CALL      R9 2 2       ; R9 := R9(R10)
136 [-]: TEST      R9 1         ; if R9 then PC := 221
137 [-]: JMP       221          ; PC := 221
138 [-]: LOADK     R9 5         ; R9 := 5.000000
139 [-]: LOADK     R10 6        ; R10 := 6.000000
140 [-]: LOADK     R11 1        ; R11 := 1.000000
141 [-]: FORPREP   R9 220       ; R9 -= R11; PC := 220
142 [-]: SELF      R13 R8 K34   ; R14 := R8; R13 := R8[0x4a5d8c86]
143 [-]: MOVE      R15 R12      ; R15 := R12
144 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
145 [-]: GETTABLE  R14 R13 K6   ; R14 := R13["mItemType"]
146 [-]: GETGLOBAL R15 K2       ; R15 := 0x7b998233
147 [-]: MOVE      R16 R14      ; R16 := R14
148 [-]: CALL      R15 2 2      ; R15 := R15(R16)
149 [-]: TEST      R15 1        ; if R15 then PC := 220
150 [-]: JMP       220          ; PC := 220
151 [-]: SELF      R15 R14 K35  ; R16 := R14; R15 := R14[0xf2deaf69]
152 [-]: GETGLOBAL R17 K36      ; R17 := gPowerSuitType
153 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
154 [-]: TEST      R15 1        ; if R15 then PC := 220
155 [-]: JMP       220          ; PC := 220
156 [-]: SELF      R15 R7 K37   ; R16 := R7; R15 := R7[0x9c596606]
157 [-]: MOVE      R17 R0       ; R17 := R0
158 [-]: LOADK     R18 8        ; R18 := 8.000000
159 [-]: MOVE      R19 R12      ; R19 := R12
160 [-]: LOADBOOL  R20 1 0      ; R20 := true
161 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
162 [-]: GETUPVAL  R15 U2       ; R15 := U2
163 [-]: GETTABLE  R15 R15 K38  ; R15 := R15["Current"]
164 [-]: EQ        0 R15 K39    ; if R15 ~= 3.000000 then PC := 220
165 [-]: JMP       220          ; PC := 220
166 [-]: GETUPVAL  R15 U3       ; R15 := U3
167 [-]: GETGLOBAL R16 K40      ; R16 := 0xae91e43b
168 [-]: GETGLOBAL R17 K3       ; R17 := _T
169 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["MechAvatar"]
170 [-]: GETGLOBAL R18 K41      ; R18 := mLists
171 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["mLoadOutList"]
172 [-]: GETTABLE  R18 R18 K43  ; R18 := R18["mElements"]
173 [-]: GETTABLE  R18 R18 K44  ; R18 := R18[1.000000]
174 [-]: LOADBOOL  R19 0 0      ; R19 := false
175 [-]: CALL      R15 5 2      ; R15 := R15(R16,R17,R18,R19)
176 [-]: GETTABLE  R16 R13 K45  ; R16 := R13["mAbilityIndex"]
177 [-]: SELF      R17 R8 K46   ; R18 := R8; R17 := R8[0xd836367c]
178 [-]: CALL      R17 2 2      ; R17 := R17(R18)
179 [-]: LT        0 R16 R17    ; if R16 >= R17 then PC := 220
180 [-]: JMP       220          ; PC := 220
181 [-]: EQ        0 R12 K47    ; if R12 ~= 5.000000 then PC := 201
182 [-]: JMP       201          ; PC := 201
183 [-]: GETGLOBAL R17 K41      ; R17 := mLists
184 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["mLoadOutList"]
185 [-]: GETTABLE  R17 R17 K48  ; R17 := R17["SpecialASlotId"]
186 [-]: EQ        1 R17 K49    ; if R17 == nil then PC := 201
187 [-]: JMP       201          ; PC := 201
188 [-]: GETGLOBAL R17 K41      ; R17 := mLists
189 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["mLoadOutList"]
190 [-]: GETTABLE  R17 R17 K43  ; R17 := R17["mElements"]
191 [-]: GETGLOBAL R18 K41      ; R18 := mLists
192 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["mLoadOutList"]
193 [-]: GETTABLE  R18 R18 K48  ; R18 := R18["SpecialASlotId"]
194 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
195 [-]: LOADK     R18 K51      ; R18 := "AbilityIcon"
196 [-]: ADD       R19 R16 K44  ; R19 := R16 + 1.000000
197 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
198 [-]: GETTABLE  R18 R15 R18  ; R18 := R15[R18]
199 [-]: SETTABLE  R17 K50 R18  ; R17["SpecialIcon"] := R18
200 [-]: JMP       220          ; PC := 220
201 [-]: EQ        0 R12 K52    ; if R12 ~= 6.000000 then PC := 220
202 [-]: JMP       220          ; PC := 220
203 [-]: GETGLOBAL R17 K41      ; R17 := mLists
204 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["mLoadOutList"]
205 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["SpecialBSlotId"]
206 [-]: EQ        1 R17 K49    ; if R17 == nil then PC := 220
207 [-]: JMP       220          ; PC := 220
208 [-]: GETGLOBAL R17 K41      ; R17 := mLists
209 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["mLoadOutList"]
210 [-]: GETTABLE  R17 R17 K43  ; R17 := R17["mElements"]
211 [-]: GETGLOBAL R18 K41      ; R18 := mLists
212 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["mLoadOutList"]
213 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["SpecialBSlotId"]
214 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
215 [-]: LOADK     R18 K51      ; R18 := "AbilityIcon"
216 [-]: ADD       R19 R16 K44  ; R19 := R16 + 1.000000
217 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
218 [-]: GETTABLE  R18 R15 R18  ; R18 := R15[R18]
219 [-]: SETTABLE  R17 K50 R18  ; R17["SpecialIcon"] := R18
220 [-]: FORLOOP   R9 142       ; R9 += R11; if R9 <= R10 then begin PC := 142; R12 := R9 end
221 [-]: GETGLOBAL R17 K3       ; R17 := _T
222 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["MechAvatar"]
223 [-]: SELF      R17 R17 K54  ; R18 := R17; R17 := R17[0x511d26b8]
224 [-]: GETGLOBAL R19 K7       ; R19 := 0x88efc25e
225 [-]: GETGLOBAL R20 K55      ; R20 := 0x3369a6b1
226 [-]: CALL      R19 2 2      ; R19 := R19(R20)
227 [-]: LOADBOOL  R20 0 0      ; R20 := false
228 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
229 [-]: SELF      R17 R7 K56   ; R18 := R7; R17 := R7[0xc69087f6]
230 [-]: LOADK     R19 10       ; R19 := 10.000000
231 [-]: LOADK     R20 0        ; R20 := 0.000000
232 [-]: LOADK     R21 2        ; R21 := 2.000000
233 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
234 [-]: GETGLOBAL R17 K3       ; R17 := _T
235 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["MechAvatar"]
236 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17[0x044b7be8]
237 [-]: LOADBOOL  R19 1 0      ; R19 := true
238 [-]: CALL      R17 3 1      ; R17(R18,R19)
239 [-]: GETGLOBAL R17 K3       ; R17 := _T
240 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["MechAvatar"]
241 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0x768274d6]
242 [-]: LOADBOOL  R19 0 0      ; R19 := false
243 [-]: LOADBOOL  R20 1 0      ; R20 := true
244 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
245 [-]: GETGLOBAL R17 K3       ; R17 := _T
246 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["MechAvatar"]
247 [-]: SELF      R17 R17 K59  ; R18 := R17; R17 := R17[0x3273ba96]
248 [-]: GETGLOBAL R19 K21      ; R19 := 0x0469f296
249 [-]: LOADK     R20 K60      ; R20 := "HubIgnoreNearCull"
250 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
251 [-]: CALL      R17 0 1      ; R17(R18,...)
252 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 590
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x768274d6]
  8 [-]: LOADBOOL  R3 0 0       ; R3 := false
  9 [-]: LOADBOOL  R4 1 0       ; R4 := true
 10 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 11 [-]: GETGLOBAL R1 K2        ; R1 := _T
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: SETTABLE  R1 K3 R2     ; R1["refreshPetView"] := R2
 14 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 599
; #Upvalues:       12
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  53

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0x06d055f9]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: LOADK     R5 3         ; R5 := 3.000000
  5 [-]: LOADK     R6 0         ; R6 := 0.000000
  6 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  7 [-]: GETGLOBAL R4 K2        ; R4 := 0x25d99d89
  8 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x62c81b76]
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: GETGLOBAL R5 K4        ; R5 := 0xbe190284
 11 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x417eba72]
 12 [-]: MOVE      R7 R4        ; R7 := R4
 13 [-]: CALL      R5 3 1       ; R5(R6,R7)
 14 [-]: GETGLOBAL R5 K6        ; R5 := _T
 15 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["MenuSuitAvatar"]
 16 [-]: SELF      R6 R5 K8     ; R7 := R5; R6 := R5[0xde321e6f]
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6[0xf7d48ee0]
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: LOADNIL   R8 R8        ; R8 := nil
 21 [-]: GETGLOBAL R9 K6        ; R9 := _T
 22 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mSpecialSuitMode"]
 23 [-]: GETGLOBAL R10 K6       ; R10 := _T
 24 [-]: SETTABLE  R10 K10 K11  ; R10["mSpecialSuitMode"] := nil
 25 [-]: LOADNIL   R10 R10      ; R10 := nil
 26 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
 27 [-]: MOVE      R12 R7       ; R12 := R7
 28 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 29 [-]: TEST      R11 1        ; if R11 then PC := 150
 30 [-]: JMP       150          ; PC := 150
 31 [-]: TEST      R2 1         ; if R2 then PC := 150
 32 [-]: JMP       150          ; PC := 150
 33 [-]: SELF      R11 R7 K13   ; R12 := R7; R11 := R7[0xed4e0128]
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: MOVE      R8 R11       ; R8 := R11
 36 [-]: SELF      R11 R7 K14   ; R12 := R7; R11 := R7[0xf2deaf69]
 37 [-]: GETGLOBAL R13 K15      ; R13 := 0xb5afcb89
 38 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 39 [-]: TEST      R11 0        ; if not R11 then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
 42 [-]: GETGLOBAL R12 K6       ; R12 := _T
 43 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["DRAGON_IsPeltEnabled"]
 44 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 45 [-]: TEST      R11 1        ; if R11 then PC := 150
 46 [-]: JMP       150          ; PC := 150
 47 [-]: GETGLOBAL R11 K6       ; R11 := _T
 48 [-]: GETTABLE  R11 R11 K17  ; R11 := R11[0xb3bbbb5e]
 49 [-]: MOVE      R12 R5       ; R12 := R5
 50 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 51 [-]: MOVE      R10 R11      ; R10 := R11
 52 [-]: JMP       150          ; PC := 150
 53 [-]: SELF      R11 R7 K14   ; R12 := R7; R11 := R7[0xf2deaf69]
 54 [-]: GETGLOBAL R13 K18      ; R13 := 0xe3ae0932
 55 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 56 [-]: TEST      R11 0        ; if not R11 then PC := 75
 57 [-]: JMP       75           ; PC := 75
 58 [-]: GETGLOBAL R11 K19      ; R11 := 0x2d0fad09
 59 [-]: LOADK     R12 K20      ; R12 := "Lotus.Scripts.Effects.Polarity"
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: GETTABLE  R12 R11 K21  ; R12 := R11[0x224c9cb2]
 62 [-]: MOVE      R13 R7       ; R13 := R7
 63 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 64 [-]: TEST      R12 0        ; if not R12 then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: LOADBOOL  R10 1 0      ; R10 := true
 67 [-]: JMP       150          ; PC := 150
 68 [-]: GETTABLE  R12 R11 K22  ; R12 := R11[0x7d2b2507]
 69 [-]: MOVE      R13 R7       ; R13 := R7
 70 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 71 [-]: TEST      R12 0        ; if not R12 then PC := 150
 72 [-]: JMP       150          ; PC := 150
 73 [-]: LOADBOOL  R10 0 0      ; R10 := false
 74 [-]: JMP       150          ; PC := 150
 75 [-]: SELF      R12 R7 K14   ; R13 := R7; R12 := R7[0xf2deaf69]
 76 [-]: GETGLOBAL R14 K23      ; R14 := 0x68564c44
 77 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 78 [-]: TEST      R12 0        ; if not R12 then PC := 105
 79 [-]: JMP       105          ; PC := 105
 80 [-]: GETGLOBAL R12 K12      ; R12 := 0x7b998233
 81 [-]: GETGLOBAL R13 K6       ; R13 := _T
 82 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["INFESTED_DecoState"]
 83 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 84 [-]: TEST      R12 1        ; if R12 then PC := 150
 85 [-]: JMP       150          ; PC := 150
 86 [-]: SELF      R12 R5 K25   ; R13 := R5; R12 := R5[0x388577d5]
 87 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 88 [-]: GETGLOBAL R13 K12      ; R13 := 0x7b998233
 89 [-]: GETGLOBAL R14 K6       ; R14 := _T
 90 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["INFESTED_DecoState"]
 91 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 92 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 93 [-]: TEST      R13 1        ; if R13 then PC := 150
 94 [-]: JMP       150          ; PC := 150
 95 [-]: LOADNIL   R13 R13      ; R13 := nil
 96 [-]: GETGLOBAL R14 K26      ; R14 := 0x4ec73e73
 97 [-]: GETGLOBAL R15 K6       ; R15 := _T
 98 [-]: GETTABLE  R15 R15 K24  ; R15 := R15["INFESTED_DecoState"]
 99 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
100 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["openDecos"]
101 [-]: CALL      R14 2 3      ; R14,R15 := R14(R15)
102 [-]: MOVE      R10 R15      ; R10 := R15
103 [-]: MOVE      R13 R14      ; R13 := R14
104 [-]: JMP       150          ; PC := 150
105 [-]: SELF      R14 R7 K14   ; R15 := R7; R14 := R7[0xf2deaf69]
106 [-]: GETGLOBAL R16 K28      ; R16 := 0x6dcacb87
107 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
108 [-]: TEST      R14 0        ; if not R14 then PC := 136
109 [-]: JMP       136          ; PC := 136
110 [-]: GETGLOBAL R14 K12      ; R14 := 0x7b998233
111 [-]: GETGLOBAL R15 K6       ; R15 := _T
112 [-]: GETTABLE  R15 R15 K29  ; R15 := R15["KHORA_CurrentMode"]
113 [-]: CALL      R14 2 2      ; R14 := R14(R15)
114 [-]: TEST      R14 1        ; if R14 then PC := 150
115 [-]: JMP       150          ; PC := 150
116 [-]: SELF      R14 R5 K25   ; R15 := R5; R14 := R5[0x388577d5]
117 [-]: CALL      R14 2 2      ; R14 := R14(R15)
118 [-]: GETGLOBAL R15 K12      ; R15 := 0x7b998233
119 [-]: GETGLOBAL R16 K6       ; R16 := _T
120 [-]: GETTABLE  R16 R16 K29  ; R16 := R16["KHORA_CurrentMode"]
121 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
122 [-]: CALL      R15 2 2      ; R15 := R15(R16)
123 [-]: TEST      R15 1        ; if R15 then PC := 150
124 [-]: JMP       150          ; PC := 150
125 [-]: NEWTABLE  R15 1 0      ; R15 := {}
126 [-]: GETGLOBAL R16 K6       ; R16 := _T
127 [-]: GETTABLE  R16 R16 K29  ; R16 := R16["KHORA_CurrentMode"]
128 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
129 [-]: GETGLOBAL R17 K6       ; R17 := _T
130 [-]: GETTABLE  R17 R17 K30  ; R17 := R17[0xb1b8ab73]
131 [-]: MOVE      R18 R7       ; R18 := R7
132 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
133 [-]: SETLIST   R15 0 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 0
134 [-]: MOVE      R10 R15      ; R10 := R15
135 [-]: JMP       150          ; PC := 150
136 [-]: SELF      R15 R7 K14   ; R16 := R7; R15 := R7[0xf2deaf69]
137 [-]: GETGLOBAL R17 K31      ; R17 := 0x2ccd2c30
138 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
139 [-]: TEST      R15 0        ; if not R15 then PC := 150
140 [-]: JMP       150          ; PC := 150
141 [-]: GETGLOBAL R15 K6       ; R15 := _T
142 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["RUNNER_DecoState"]
143 [-]: EQ        1 R15 K11    ; if R15 == nil then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: GETGLOBAL R15 K6       ; R15 := _T
146 [-]: GETTABLE  R15 R15 K33  ; R15 := R15[0x7fab9289]
147 [-]: MOVE      R16 R5       ; R16 := R5
148 [-]: CALL      R15 2 2      ; R15 := R15(R16)
149 [-]: MOVE      R10 R15      ; R10 := R15
150 [-]: EQ        0 R1 K34     ; if R1 ~= true then PC := 156
151 [-]: JMP       156          ; PC := 156
152 [-]: SELF      R15 R6 K35   ; R16 := R6; R15 := R6[0x374b084a]
153 [-]: CALL      R15 2 1      ; R15(R16)
154 [-]: SELF      R15 R6 K36   ; R16 := R6; R15 := R6[0xf596420f]
155 [-]: CALL      R15 2 1      ; R15(R16)
156 [-]: SELF      R15 R6 K37   ; R16 := R6; R15 := R6[0xb4af1972]
157 [-]: LOADBOOL  R17 1 0      ; R17 := true
158 [-]: CALL      R15 3 1      ; R15(R16,R17)
159 [-]: SELF      R15 R6 K38   ; R16 := R6; R15 := R6[0x1d2dfe4a]
160 [-]: MOVE      R17 R4       ; R17 := R4
161 [-]: MOVE      R18 R3       ; R18 := R3
162 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
163 [-]: GETGLOBAL R15 K12      ; R15 := 0x7b998233
164 [-]: GETGLOBAL R16 K6       ; R16 := _T
165 [-]: GETTABLE  R16 R16 K39  ; R16 := R16["KDriveAvatar"]
166 [-]: CALL      R15 2 2      ; R15 := R15(R16)
167 [-]: TEST      R15 1        ; if R15 then PC := 175
168 [-]: JMP       175          ; PC := 175
169 [-]: GETGLOBAL R15 K6       ; R15 := _T
170 [-]: GETTABLE  R15 R15 K39  ; R15 := R15["KDriveAvatar"]
171 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15[0xd4cc05b4]
172 [-]: CALL      R15 2 2      ; R15 := R15(R16)
173 [-]: TEST      R15 1        ; if R15 then PC := 191
174 [-]: JMP       191          ; PC := 191
175 [-]: GETGLOBAL R15 K12      ; R15 := 0x7b998233
176 [-]: GETGLOBAL R16 K6       ; R16 := _T
177 [-]: GETTABLE  R16 R16 K41  ; R16 := R16["MechAvatar"]
178 [-]: CALL      R15 2 2      ; R15 := R15(R16)
179 [-]: TEST      R15 1        ; if R15 then PC := 187
180 [-]: JMP       187          ; PC := 187
181 [-]: GETGLOBAL R15 K6       ; R15 := _T
182 [-]: GETTABLE  R15 R15 K41  ; R15 := R15["MechAvatar"]
183 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15[0xd4cc05b4]
184 [-]: CALL      R15 2 2      ; R15 := R15(R16)
185 [-]: TEST      R15 1        ; if R15 then PC := 191
186 [-]: JMP       191          ; PC := 191
187 [-]: SELF      R15 R5 K42   ; R16 := R5; R15 := R5[0x768274d6]
188 [-]: LOADBOOL  R17 1 0      ; R17 := true
189 [-]: LOADBOOL  R18 1 0      ; R18 := true
190 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
191 [-]: SELF      R15 R5 K43   ; R16 := R5; R15 := R5[0x5b89142c]
192 [-]: CALL      R15 2 2      ; R15 := R15(R16)
193 [-]: SELF      R15 R15 K44  ; R16 := R15; R15 := R15[0xe5586395]
194 [-]: MOVE      R17 R4       ; R17 := R4
195 [-]: CALL      R15 3 1      ; R15(R16,R17)
196 [-]: EQ        0 R3 K45     ; if R3 ~= 0.000000 then PC := 238
197 [-]: JMP       238          ; PC := 238
198 [-]: GETUPVAL  R15 U1       ; R15 := U1
199 [-]: GETTABLE  R15 R15 K46  ; R15 := R15[0x8e7c3b5e]
200 [-]: GETGLOBAL R16 K2       ; R16 := 0x25d99d89
201 [-]: CALL      R15 2 3      ; R15,R16 := R15(R16)
202 [-]: GETGLOBAL R17 K12      ; R17 := 0x7b998233
203 [-]: MOVE      R18 R15      ; R18 := R15
204 [-]: CALL      R17 2 2      ; R17 := R17(R18)
205 [-]: TEST      R17 1        ; if R17 then PC := 238
206 [-]: JMP       238          ; PC := 238
207 [-]: GETUPVAL  R17 U2       ; R17 := U2
208 [-]: EQ        0 R15 R17    ; if R15 ~= R17 then PC := 238
209 [-]: JMP       238          ; PC := 238
210 [-]: LE        0 K47 R16    ; if 15.000000 > R16 then PC := 238
211 [-]: JMP       238          ; PC := 238
212 [-]: GETGLOBAL R17 K2       ; R17 := 0x25d99d89
213 [-]: SELF      R17 R17 K48  ; R18 := R17; R17 := R17[0x25a6e75e]
214 [-]: CALL      R17 2 2      ; R17 := R17(R18)
215 [-]: SELF      R17 R17 K49  ; R18 := R17; R17 := R17[0xbadb2a78]
216 [-]: GETGLOBAL R19 K50      ; R19 := 0x7ed0a956
217 [-]: LOADK     R20 K51      ; R20 := "/Lotus/Weapons/Orokin/BallasSword/BallasSwordWeapon"
218 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
219 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
220 [-]: EQ        0 R17 K45    ; if R17 ~= 0.000000 then PC := 238
221 [-]: JMP       238          ; PC := 238
222 [-]: SELF      R17 R5 K52   ; R18 := R5; R17 := R5[0x511d26b8]
223 [-]: GETGLOBAL R19 K53      ; R19 := 0x88efc25e
224 [-]: LOADK     R20 K54      ; R20 := "/Lotus/Weapons/Orokin/BallasSword/TNWQuestBallasSwordWeapon"
225 [-]: CALL      R19 2 2      ; R19 := R19(R20)
226 [-]: LOADBOOL  R20 1 0      ; R20 := true
227 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
228 [-]: GETGLOBAL R18 K12      ; R18 := 0x7b998233
229 [-]: MOVE      R19 R17      ; R19 := R17
230 [-]: CALL      R18 2 2      ; R18 := R18(R19)
231 [-]: TEST      R18 1        ; if R18 then PC := 233
232 [-]: JMP       233          ; PC := 233
233 [-]: SELF      R18 R5 K8    ; R19 := R5; R18 := R5[0xde321e6f]
234 [-]: CALL      R18 2 2      ; R18 := R18(R19)
235 [-]: SELF      R18 R18 K55  ; R19 := R18; R18 := R18[0xa65fc8a8]
236 [-]: LOADBOOL  R20 1 0      ; R20 := true
237 [-]: CALL      R18 3 1      ; R18(R19,R20)
238 [-]: SELF      R18 R6 K9    ; R19 := R6; R18 := R6[0xf7d48ee0]
239 [-]: CALL      R18 2 2      ; R18 := R18(R19)
240 [-]: MOVE      R7 R18       ; R7 := R18
241 [-]: GETGLOBAL R18 K12      ; R18 := 0x7b998233
242 [-]: MOVE      R19 R7       ; R19 := R7
243 [-]: CALL      R18 2 2      ; R18 := R18(R19)
244 [-]: TEST      R18 1        ; if R18 then PC := 732
245 [-]: JMP       732          ; PC := 732
246 [-]: TEST      R2 1         ; if R2 then PC := 732
247 [-]: JMP       732          ; PC := 732
248 [-]: SELF      R18 R7 K13   ; R19 := R7; R18 := R7[0xed4e0128]
249 [-]: CALL      R18 2 2      ; R18 := R18(R19)
250 [-]: EQ        1 R18 R8     ; if R18 == R8 then PC := 253
251 [-]: JMP       253          ; PC := 253
252 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 253
253 [-]: LOADBOOL  R18 1 0      ; R18 := true
254 [-]: TEST      R18 0        ; if not R18 then PC := 360
255 [-]: JMP       360          ; PC := 360
256 [-]: SELF      R19 R7 K14   ; R20 := R7; R19 := R7[0xf2deaf69]
257 [-]: GETGLOBAL R21 K15      ; R21 := 0xb5afcb89
258 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
259 [-]: TEST      R19 0        ; if not R19 then PC := 275
260 [-]: JMP       275          ; PC := 275
261 [-]: EQ        0 R10 K56    ; if R10 ~= false then PC := 275
262 [-]: JMP       275          ; PC := 275
263 [-]: GETGLOBAL R19 K12      ; R19 := 0x7b998233
264 [-]: GETGLOBAL R20 K6       ; R20 := _T
265 [-]: GETTABLE  R20 R20 K57  ; R20 := R20["DRAGON_EnablePelt"]
266 [-]: CALL      R19 2 2      ; R19 := R19(R20)
267 [-]: TEST      R19 1        ; if R19 then PC := 360
268 [-]: JMP       360          ; PC := 360
269 [-]: GETGLOBAL R19 K6       ; R19 := _T
270 [-]: GETTABLE  R19 R19 K58  ; R19 := R19[0xc50e8842]
271 [-]: MOVE      R20 R5       ; R20 := R5
272 [-]: LOADBOOL  R21 0 0      ; R21 := false
273 [-]: CALL      R19 3 1      ; R19(R20,R21)
274 [-]: JMP       360          ; PC := 360
275 [-]: SELF      R19 R7 K14   ; R20 := R7; R19 := R7[0xf2deaf69]
276 [-]: GETGLOBAL R21 K18      ; R21 := 0xe3ae0932
277 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
278 [-]: TEST      R19 0        ; if not R19 then PC := 295
279 [-]: JMP       295          ; PC := 295
280 [-]: EQ        1 R10 K11    ; if R10 == nil then PC := 295
281 [-]: JMP       295          ; PC := 295
282 [-]: GETGLOBAL R19 K19      ; R19 := 0x2d0fad09
283 [-]: LOADK     R20 K20      ; R20 := "Lotus.Scripts.Effects.Polarity"
284 [-]: CALL      R19 2 2      ; R19 := R19(R20)
285 [-]: TEST      R10 0        ; if not R10 then PC := 291
286 [-]: JMP       291          ; PC := 291
287 [-]: GETTABLE  R20 R19 K59  ; R20 := R19[0xade98bab]
288 [-]: MOVE      R21 R7       ; R21 := R7
289 [-]: CALL      R20 2 1      ; R20(R21)
290 [-]: JMP       360          ; PC := 360
291 [-]: GETTABLE  R20 R19 K60  ; R20 := R19[0x3be7a1fc]
292 [-]: MOVE      R21 R7       ; R21 := R7
293 [-]: CALL      R20 2 1      ; R20(R21)
294 [-]: JMP       360          ; PC := 360
295 [-]: SELF      R20 R7 K14   ; R21 := R7; R20 := R7[0xf2deaf69]
296 [-]: GETGLOBAL R22 K23      ; R22 := 0x68564c44
297 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
298 [-]: TEST      R20 0        ; if not R20 then PC := 315
299 [-]: JMP       315          ; PC := 315
300 [-]: EQ        0 R10 K34    ; if R10 ~= true then PC := 315
301 [-]: JMP       315          ; PC := 315
302 [-]: GETGLOBAL R20 K12      ; R20 := 0x7b998233
303 [-]: GETGLOBAL R21 K6       ; R21 := _T
304 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["INFESTED_DecoState"]
305 [-]: CALL      R20 2 2      ; R20 := R20(R21)
306 [-]: TEST      R20 1        ; if R20 then PC := 360
307 [-]: JMP       360          ; PC := 360
308 [-]: GETGLOBAL R20 K6       ; R20 := _T
309 [-]: GETTABLE  R20 R20 K61  ; R20 := R20[0x8095dfb5]
310 [-]: MOVE      R21 R5       ; R21 := R5
311 [-]: LOADBOOL  R22 1 0      ; R22 := true
312 [-]: LOADBOOL  R23 1 0      ; R23 := true
313 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
314 [-]: JMP       360          ; PC := 360
315 [-]: SELF      R20 R7 K14   ; R21 := R7; R20 := R7[0xf2deaf69]
316 [-]: GETGLOBAL R22 K28      ; R22 := 0x6dcacb87
317 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
318 [-]: TEST      R20 0        ; if not R20 then PC := 343
319 [-]: JMP       343          ; PC := 343
320 [-]: GETGLOBAL R20 K6       ; R20 := _T
321 [-]: GETTABLE  R20 R20 K62  ; R20 := R20["KHORA_SetMode"]
322 [-]: EQ        1 R20 K11    ; if R20 == nil then PC := 343
323 [-]: JMP       343          ; PC := 343
324 [-]: EQ        1 R10 K11    ; if R10 == nil then PC := 343
325 [-]: JMP       343          ; PC := 343
326 [-]: GETGLOBAL R20 K6       ; R20 := _T
327 [-]: GETTABLE  R20 R20 K63  ; R20 := R20[0xea9ef043]
328 [-]: MOVE      R21 R7       ; R21 := R7
329 [-]: GETTABLE  R22 R10 K64  ; R22 := R10[1.000000]
330 [-]: CALL      R20 3 1      ; R20(R21,R22)
331 [-]: GETGLOBAL R20 K6       ; R20 := _T
332 [-]: GETTABLE  R20 R20 K65  ; R20 := R20[0x9d4f5aaf]
333 [-]: MOVE      R21 R7       ; R21 := R7
334 [-]: GETTABLE  R22 R10 K66  ; R22 := R10[2.000000]
335 [-]: CALL      R20 3 1      ; R20(R21,R22)
336 [-]: GETGLOBAL R20 K6       ; R20 := _T
337 [-]: GETTABLE  R20 R20 K67  ; R20 := R20["KHORA_CurrentDissolve"]
338 [-]: SELF      R21 R5 K25   ; R22 := R5; R21 := R5[0x388577d5]
339 [-]: CALL      R21 2 2      ; R21 := R21(R22)
340 [-]: GETTABLE  R22 R10 K66  ; R22 := R10[2.000000]
341 [-]: SETTABLE  R20 R21 R22  ; R20[R21] := R22
342 [-]: JMP       360          ; PC := 360
343 [-]: SELF      R20 R7 K14   ; R21 := R7; R20 := R7[0xf2deaf69]
344 [-]: GETGLOBAL R22 K31      ; R22 := 0x2ccd2c30
345 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
346 [-]: TEST      R20 0        ; if not R20 then PC := 360
347 [-]: JMP       360          ; PC := 360
348 [-]: EQ        0 R10 K34    ; if R10 ~= true then PC := 360
349 [-]: JMP       360          ; PC := 360
350 [-]: GETGLOBAL R20 K6       ; R20 := _T
351 [-]: GETTABLE  R20 R20 K68  ; R20 := R20["RUNNER_SetDecoState"]
352 [-]: EQ        1 R20 K11    ; if R20 == nil then PC := 360
353 [-]: JMP       360          ; PC := 360
354 [-]: GETGLOBAL R20 K6       ; R20 := _T
355 [-]: GETTABLE  R20 R20 K69  ; R20 := R20[0x3ef5c227]
356 [-]: MOVE      R21 R5       ; R21 := R5
357 [-]: LOADBOOL  R22 1 0      ; R22 := true
358 [-]: LOADBOOL  R23 1 0      ; R23 := true
359 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
360 [-]: LOADNIL   R20 R20      ; R20 := nil
361 [-]: MOVE      R21 R6       ; R21 := R6
362 [-]: SELF      R22 R7 K14   ; R23 := R7; R22 := R7[0xf2deaf69]
363 [-]: GETGLOBAL R24 K28      ; R24 := 0x6dcacb87
364 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
365 [-]: TEST      R22 1        ; if R22 then PC := 377
366 [-]: JMP       377          ; PC := 377
367 [-]: SELF      R22 R7 K14   ; R23 := R7; R22 := R7[0xf2deaf69]
368 [-]: GETGLOBAL R24 K70      ; R24 := 0xda46ae79
369 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
370 [-]: TEST      R22 1        ; if R22 then PC := 377
371 [-]: JMP       377          ; PC := 377
372 [-]: SELF      R22 R7 K14   ; R23 := R7; R22 := R7[0xf2deaf69]
373 [-]: GETGLOBAL R24 K71      ; R24 := 0x2c86a0ee
374 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
375 [-]: TEST      R22 0        ; if not R22 then PC := 590
376 [-]: JMP       590          ; PC := 590
377 [-]: GETGLOBAL R22 K6       ; R22 := _T
378 [-]: GETUPVAL  R23 U0       ; R23 := U0
379 [-]: GETTABLE  R23 R23 K0   ; R23 := R23[0x06d055f9]
380 [-]: MOVE      R24 R9       ; R24 := R9
381 [-]: LOADBOOL  R25 1 0      ; R25 := true
382 [-]: LOADBOOL  R26 0 0      ; R26 := false
383 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
384 [-]: SETTABLE  R22 K10 R23  ; R22["mSpecialSuitMode"] := R23
385 [-]: LOADNIL   R22 R22      ; R22 := nil
386 [-]: SELF      R23 R7 K14   ; R24 := R7; R23 := R7[0xf2deaf69]
387 [-]: GETGLOBAL R25 K28      ; R25 := 0x6dcacb87
388 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
389 [-]: TEST      R23 0        ; if not R23 then PC := 396
390 [-]: JMP       396          ; PC := 396
391 [-]: GETGLOBAL R23 K53      ; R23 := 0x88efc25e
392 [-]: GETGLOBAL R24 K72      ; R24 := 0xb75541f5
393 [-]: CALL      R23 2 2      ; R23 := R23(R24)
394 [-]: MOVE      R22 R23      ; R22 := R23
395 [-]: JMP       411          ; PC := 411
396 [-]: SELF      R23 R7 K14   ; R24 := R7; R23 := R7[0xf2deaf69]
397 [-]: GETGLOBAL R25 K71      ; R25 := 0x2c86a0ee
398 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
399 [-]: TEST      R23 0        ; if not R23 then PC := 406
400 [-]: JMP       406          ; PC := 406
401 [-]: GETGLOBAL R23 K53      ; R23 := 0x88efc25e
402 [-]: GETGLOBAL R24 K73      ; R24 := 0x2c71998f
403 [-]: CALL      R23 2 2      ; R23 := R23(R24)
404 [-]: MOVE      R22 R23      ; R22 := R23
405 [-]: JMP       411          ; PC := 411
406 [-]: GETGLOBAL R23 K53      ; R23 := 0x88efc25e
407 [-]: SELF      R24 R5 K74   ; R25 := R5; R24 := R5[0xcde10c4a]
408 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
409 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
410 [-]: MOVE      R22 R23      ; R22 := R23
411 [-]: GETGLOBAL R23 K12      ; R23 := 0x7b998233
412 [-]: GETGLOBAL R24 K6       ; R24 := _T
413 [-]: GETTABLE  R24 R24 K75  ; R24 := R24["SpecialSuitAvatar"]
414 [-]: CALL      R23 2 2      ; R23 := R23(R24)
415 [-]: TEST      R23 1        ; if R23 then PC := 430
416 [-]: JMP       430          ; PC := 430
417 [-]: GETGLOBAL R23 K6       ; R23 := _T
418 [-]: GETTABLE  R23 R23 K75  ; R23 := R23["SpecialSuitAvatar"]
419 [-]: SELF      R23 R23 K74  ; R24 := R23; R23 := R23[0xcde10c4a]
420 [-]: CALL      R23 2 2      ; R23 := R23(R24)
421 [-]: EQ        1 R23 R22    ; if R23 == R22 then PC := 430
422 [-]: JMP       430          ; PC := 430
423 [-]: GETGLOBAL R23 K76      ; R23 := 0x89326c93
424 [-]: SELF      R23 R23 K77  ; R24 := R23; R23 := R23[0x59c96e77]
425 [-]: GETGLOBAL R25 K6       ; R25 := _T
426 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
427 [-]: CALL      R23 3 1      ; R23(R24,R25)
428 [-]: GETGLOBAL R23 K6       ; R23 := _T
429 [-]: SETTABLE  R23 K75 K11  ; R23["SpecialSuitAvatar"] := nil
430 [-]: GETGLOBAL R23 K12      ; R23 := 0x7b998233
431 [-]: GETGLOBAL R24 K6       ; R24 := _T
432 [-]: GETTABLE  R24 R24 K75  ; R24 := R24["SpecialSuitAvatar"]
433 [-]: CALL      R23 2 2      ; R23 := R23(R24)
434 [-]: TEST      R23 0        ; if not R23 then PC := 498
435 [-]: JMP       498          ; PC := 498
436 [-]: GETGLOBAL R23 K78      ; R23 := 0x00046924
437 [-]: GETGLOBAL R24 K6       ; R24 := _T
438 [-]: GETTABLE  R24 R24 K79  ; R24 := R24["DEFAULT_SUIT_ROTATION"]
439 [-]: LOADK     R25 0        ; R25 := 0.000000
440 [-]: LOADK     R26 0        ; R26 := 0.000000
441 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
442 [-]: GETGLOBAL R24 K80      ; R24 := mArsenalConsole
443 [-]: SELF      R24 R24 K81  ; R25 := R24; R24 := R24[0xd1586535]
444 [-]: CALL      R24 2 2      ; R24 := R24(R25)
445 [-]: GETTABLE  R25 R24 K82  ; R25 := R24["y"]
446 [-]: SUB       R25 R25 K83  ; R25 := R25 - 0.670000
447 [-]: SETTABLE  R24 K82 R25  ; R24["y"] := R25
448 [-]: GETGLOBAL R25 K6       ; R25 := _T
449 [-]: GETGLOBAL R26 K76      ; R26 := 0x89326c93
450 [-]: SELF      R26 R26 K84  ; R27 := R26; R26 := R26[0x05909209]
451 [-]: MOVE      R28 R22      ; R28 := R22
452 [-]: MOVE      R29 R24      ; R29 := R24
453 [-]: MOVE      R30 R23      ; R30 := R23
454 [-]: MOVE      R31 R5       ; R31 := R5
455 [-]: MOVE      R32 R5       ; R32 := R5
456 [-]: GETUPVAL  R33 U0       ; R33 := U0
457 [-]: GETTABLE  R33 R33 K0   ; R33 := R33[0x06d055f9]
458 [-]: GETGLOBAL R34 K76      ; R34 := 0x89326c93
459 [-]: SELF      R34 R34 K85  ; R35 := R34; R34 := R34[0x18d05d30]
460 [-]: CALL      R34 2 2      ; R34 := R34(R35)
461 [-]: LOADK     R35 3        ; R35 := 3.000000
462 [-]: LOADK     R36 4        ; R36 := 4.000000
463 [-]: CALL      R33 4 0      ; R33,... := R33(R34,R35,R36)
464 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
465 [-]: SETTABLE  R25 K75 R26  ; R25["SpecialSuitAvatar"] := R26
466 [-]: GETGLOBAL R25 K6       ; R25 := _T
467 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
468 [-]: SELF      R25 R25 K14  ; R26 := R25; R25 := R25[0xf2deaf69]
469 [-]: GETGLOBAL R27 K86      ; R27 := gLotusSentinelAvatarType
470 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
471 [-]: TEST      R25 0        ; if not R25 then PC := 483
472 [-]: JMP       483          ; PC := 483
473 [-]: GETGLOBAL R25 K6       ; R25 := _T
474 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
475 [-]: SELF      R25 R25 K87  ; R26 := R25; R25 := R25[0xc5d49e69]
476 [-]: MOVE      R27 R5       ; R27 := R5
477 [-]: CALL      R25 3 1      ; R25(R26,R27)
478 [-]: GETGLOBAL R25 K6       ; R25 := _T
479 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
480 [-]: SELF      R25 R25 K88  ; R26 := R25; R25 := R25[0x23d6100a]
481 [-]: LOADBOOL  R27 0 0      ; R27 := false
482 [-]: CALL      R25 3 1      ; R25(R26,R27)
483 [-]: GETGLOBAL R25 K6       ; R25 := _T
484 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
485 [-]: SELF      R25 R25 K89  ; R26 := R25; R25 := R25[0x044b7be8]
486 [-]: LOADBOOL  R27 1 0      ; R27 := true
487 [-]: CALL      R25 3 1      ; R25(R26,R27)
488 [-]: GETGLOBAL R25 K6       ; R25 := _T
489 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
490 [-]: SELF      R25 R25 K90  ; R26 := R25; R25 := R25[0x2abc8ecd]
491 [-]: LOADBOOL  R27 0 0      ; R27 := false
492 [-]: CALL      R25 3 1      ; R25(R26,R27)
493 [-]: GETGLOBAL R25 K6       ; R25 := _T
494 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
495 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xd749da12]
496 [-]: LOADBOOL  R27 0 0      ; R27 := false
497 [-]: CALL      R25 3 1      ; R25(R26,R27)
498 [-]: GETGLOBAL R25 K6       ; R25 := _T
499 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["SpecialSuitAvatar"]
500 [-]: SELF      R25 R25 K8   ; R26 := R25; R25 := R25[0xde321e6f]
501 [-]: CALL      R25 2 2      ; R25 := R25(R26)
502 [-]: SELF      R26 R25 K92  ; R27 := R25; R26 := R25[0x3606abef]
503 [-]: SELF      R28 R6 K93   ; R29 := R6; R28 := R6[0x18a82453]
504 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
505 [-]: CALL      R26 0 1      ; R26(R27,...)
506 [-]: SELF      R26 R7 K14   ; R27 := R7; R26 := R7[0xf2deaf69]
507 [-]: GETGLOBAL R28 K70      ; R28 := 0xda46ae79
508 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
509 [-]: TEST      R26 0        ; if not R26 then PC := 512
510 [-]: JMP       512          ; PC := 512
511 [-]: MOVE      R21 R25      ; R21 := R25
512 [-]: SELF      R26 R25 K94  ; R27 := R25; R26 := R25[0x9c596606]
513 [-]: MOVE      R28 R4       ; R28 := R4
514 [-]: MOVE      R29 R3       ; R29 := R3
515 [-]: LOADK     R30 5        ; R30 := 5.000000
516 [-]: LOADBOOL  R31 1 0      ; R31 := true
517 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
518 [-]: SELF      R26 R25 K9   ; R27 := R25; R26 := R25[0xf7d48ee0]
519 [-]: CALL      R26 2 2      ; R26 := R26(R27)
520 [-]: GETGLOBAL R27 K12      ; R27 := 0x7b998233
521 [-]: MOVE      R28 R26      ; R28 := R26
522 [-]: CALL      R27 2 2      ; R27 := R27(R28)
523 [-]: TEST      R27 1        ; if R27 then PC := 554
524 [-]: JMP       554          ; PC := 554
525 [-]: GETGLOBAL R27 K6       ; R27 := _T
526 [-]: GETTABLE  R27 R27 K7   ; R27 := R27["MenuSuitAvatar"]
527 [-]: SELF      R27 R27 K8   ; R28 := R27; R27 := R27[0xde321e6f]
528 [-]: CALL      R27 2 2      ; R27 := R27(R28)
529 [-]: SELF      R27 R27 K95  ; R28 := R27; R27 := R27[0x38d29025]
530 [-]: MOVE      R29 R26      ; R29 := R26
531 [-]: CALL      R27 3 1      ; R27(R28,R29)
532 [-]: LOADK     R27 5        ; R27 := 5.000000
533 [-]: LOADK     R28 6        ; R28 := 6.000000
534 [-]: LOADK     R29 1        ; R29 := 1.000000
535 [-]: FORPREP   R27 553      ; R27 -= R29; PC := 553
536 [-]: SELF      R31 R26 K96  ; R32 := R26; R31 := R26[0x4a5d8c86]
537 [-]: MOVE      R33 R30      ; R33 := R30
538 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
539 [-]: GETTABLE  R31 R31 K97  ; R31 := R31["mItemType"]
540 [-]: GETGLOBAL R32 K12      ; R32 := 0x7b998233
541 [-]: MOVE      R33 R31      ; R33 := R31
542 [-]: CALL      R32 2 2      ; R32 := R32(R33)
543 [-]: TEST      R32 1        ; if R32 then PC := 553
544 [-]: JMP       553          ; PC := 553
545 [-]: GETGLOBAL R32 K6       ; R32 := _T
546 [-]: GETTABLE  R32 R32 K75  ; R32 := R32["SpecialSuitAvatar"]
547 [-]: SELF      R32 R32 K52  ; R33 := R32; R32 := R32[0x511d26b8]
548 [-]: GETGLOBAL R34 K53      ; R34 := 0x88efc25e
549 [-]: MOVE      R35 R31      ; R35 := R31
550 [-]: CALL      R34 2 2      ; R34 := R34(R35)
551 [-]: LOADBOOL  R35 1 0      ; R35 := true
552 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
553 [-]: FORLOOP   R27 536      ; R27 += R29; if R27 <= R28 then begin PC := 536; R30 := R27 end
554 [-]: GETUPVAL  R32 U3       ; R32 := U3
555 [-]: GETTABLE  R32 R32 K98  ; R32 := R32["Current"]
556 [-]: EQ        1 R32 K99    ; if R32 == 3.000000 then PC := 632
557 [-]: JMP       632          ; PC := 632
558 [-]: GETGLOBAL R32 K100     ; R32 := mLists
559 [-]: GETTABLE  R32 R32 K101 ; R32 := R32["mLoadOutList"]
560 [-]: GETTABLE  R32 R32 K102 ; R32 := R32["SpecialASlotId"]
561 [-]: EQ        1 R32 K11    ; if R32 == nil then PC := 632
562 [-]: JMP       632          ; PC := 632
563 [-]: SELF      R32 R7 K96   ; R33 := R7; R32 := R7[0x4a5d8c86]
564 [-]: LOADK     R34 5        ; R34 := 5.000000
565 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
566 [-]: GETUPVAL  R33 U4       ; R33 := U4
567 [-]: GETGLOBAL R34 K103     ; R34 := 0xae91e43b
568 [-]: MOVE      R35 R5       ; R35 := R5
569 [-]: GETGLOBAL R36 K100     ; R36 := mLists
570 [-]: GETTABLE  R36 R36 K101 ; R36 := R36["mLoadOutList"]
571 [-]: GETTABLE  R36 R36 K104 ; R36 := R36["mElements"]
572 [-]: GETTABLE  R36 R36 K64  ; R36 := R36[1.000000]
573 [-]: LOADBOOL  R37 0 0      ; R37 := false
574 [-]: CALL      R33 5 2      ; R33 := R33(R34,R35,R36,R37)
575 [-]: MOVE      R20 R33      ; R20 := R33
576 [-]: GETGLOBAL R33 K100     ; R33 := mLists
577 [-]: GETTABLE  R33 R33 K101 ; R33 := R33["mLoadOutList"]
578 [-]: GETTABLE  R33 R33 K104 ; R33 := R33["mElements"]
579 [-]: GETGLOBAL R34 K100     ; R34 := mLists
580 [-]: GETTABLE  R34 R34 K101 ; R34 := R34["mLoadOutList"]
581 [-]: GETTABLE  R34 R34 K102 ; R34 := R34["SpecialASlotId"]
582 [-]: GETTABLE  R33 R33 R34  ; R33 := R33[R34]
583 [-]: LOADK     R34 K106     ; R34 := "AbilityIcon"
584 [-]: GETTABLE  R35 R32 K107 ; R35 := R32["mAbilityIndex"]
585 [-]: ADD       R35 R35 K64  ; R35 := R35 + 1.000000
586 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
587 [-]: GETTABLE  R34 R20 R34  ; R34 := R20[R34]
588 [-]: SETTABLE  R33 K105 R34 ; R33["SpecialIcon"] := R34
589 [-]: JMP       632          ; PC := 632
590 [-]: GETGLOBAL R33 K12      ; R33 := 0x7b998233
591 [-]: GETGLOBAL R34 K6       ; R34 := _T
592 [-]: GETTABLE  R34 R34 K75  ; R34 := R34["SpecialSuitAvatar"]
593 [-]: CALL      R33 2 2      ; R33 := R33(R34)
594 [-]: TEST      R33 1        ; if R33 then PC := 606
595 [-]: JMP       606          ; PC := 606
596 [-]: GETGLOBAL R33 K76      ; R33 := 0x89326c93
597 [-]: SELF      R33 R33 K77  ; R34 := R33; R33 := R33[0x59c96e77]
598 [-]: GETGLOBAL R35 K6       ; R35 := _T
599 [-]: GETTABLE  R35 R35 K75  ; R35 := R35["SpecialSuitAvatar"]
600 [-]: CALL      R33 3 1      ; R33(R34,R35)
601 [-]: GETGLOBAL R33 K6       ; R33 := _T
602 [-]: SETTABLE  R33 K75 K11  ; R33["SpecialSuitAvatar"] := nil
603 [-]: SELF      R33 R5 K90   ; R34 := R5; R33 := R5[0x2abc8ecd]
604 [-]: LOADBOOL  R35 1 0      ; R35 := true
605 [-]: CALL      R33 3 1      ; R33(R34,R35)
606 [-]: GETGLOBAL R33 K100     ; R33 := mLists
607 [-]: GETTABLE  R33 R33 K101 ; R33 := R33["mLoadOutList"]
608 [-]: GETTABLE  R33 R33 K102 ; R33 := R33["SpecialASlotId"]
609 [-]: EQ        1 R33 K11    ; if R33 == nil then PC := 619
610 [-]: JMP       619          ; PC := 619
611 [-]: GETGLOBAL R33 K100     ; R33 := mLists
612 [-]: GETTABLE  R33 R33 K101 ; R33 := R33["mLoadOutList"]
613 [-]: GETTABLE  R33 R33 K104 ; R33 := R33["mElements"]
614 [-]: GETGLOBAL R34 K100     ; R34 := mLists
615 [-]: GETTABLE  R34 R34 K101 ; R34 := R34["mLoadOutList"]
616 [-]: GETTABLE  R34 R34 K102 ; R34 := R34["SpecialASlotId"]
617 [-]: GETTABLE  R33 R33 R34  ; R33 := R33[R34]
618 [-]: SETTABLE  R33 K105 K11 ; R33["SpecialIcon"] := nil
619 [-]: GETGLOBAL R33 K100     ; R33 := mLists
620 [-]: GETTABLE  R33 R33 K101 ; R33 := R33["mLoadOutList"]
621 [-]: GETTABLE  R33 R33 K108 ; R33 := R33["SpecialBSlotId"]
622 [-]: EQ        1 R33 K11    ; if R33 == nil then PC := 632
623 [-]: JMP       632          ; PC := 632
624 [-]: GETGLOBAL R33 K100     ; R33 := mLists
625 [-]: GETTABLE  R33 R33 K101 ; R33 := R33["mLoadOutList"]
626 [-]: GETTABLE  R33 R33 K104 ; R33 := R33["mElements"]
627 [-]: GETGLOBAL R34 K100     ; R34 := mLists
628 [-]: GETTABLE  R34 R34 K101 ; R34 := R34["mLoadOutList"]
629 [-]: GETTABLE  R34 R34 K108 ; R34 := R34["SpecialBSlotId"]
630 [-]: GETTABLE  R33 R33 R34  ; R33 := R33[R34]
631 [-]: SETTABLE  R33 K105 K11 ; R33["SpecialIcon"] := nil
632 [-]: LOADK     R33 5        ; R33 := 5.000000
633 [-]: LOADK     R34 6        ; R34 := 6.000000
634 [-]: LOADK     R35 1        ; R35 := 1.000000
635 [-]: FORPREP   R33 731      ; R33 -= R35; PC := 731
636 [-]: SELF      R37 R7 K96   ; R38 := R7; R37 := R7[0x4a5d8c86]
637 [-]: MOVE      R39 R36      ; R39 := R36
638 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
639 [-]: GETTABLE  R38 R37 K97  ; R38 := R37["mItemType"]
640 [-]: GETGLOBAL R39 K12      ; R39 := 0x7b998233
641 [-]: MOVE      R40 R38      ; R40 := R38
642 [-]: CALL      R39 2 2      ; R39 := R39(R40)
643 [-]: TEST      R39 1        ; if R39 then PC := 731
644 [-]: JMP       731          ; PC := 731
645 [-]: SELF      R39 R38 K14  ; R40 := R38; R39 := R38[0xf2deaf69]
646 [-]: GETGLOBAL R41 K109     ; R41 := gPowerSuitType
647 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
648 [-]: TEST      R39 1        ; if R39 then PC := 731
649 [-]: JMP       731          ; PC := 731
650 [-]: SELF      R39 R21 K94  ; R40 := R21; R39 := R21[0x9c596606]
651 [-]: MOVE      R41 R4       ; R41 := R4
652 [-]: MOVE      R42 R3       ; R42 := R3
653 [-]: MOVE      R43 R36      ; R43 := R36
654 [-]: LOADBOOL  R44 1 0      ; R44 := true
655 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
656 [-]: SELF      R39 R38 K14  ; R40 := R38; R39 := R38[0xf2deaf69]
657 [-]: GETGLOBAL R41 K110     ; R41 := gLotusCustomAimWeaponType
658 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
659 [-]: TEST      R39 1        ; if R39 then PC := 671
660 [-]: JMP       671          ; PC := 671
661 [-]: SELF      R39 R7 K14   ; R40 := R7; R39 := R7[0xf2deaf69]
662 [-]: GETGLOBAL R41 K111     ; R41 := 0xf773e9d4
663 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
664 [-]: TEST      R39 1        ; if R39 then PC := 671
665 [-]: JMP       671          ; PC := 671
666 [-]: SELF      R39 R21 K112 ; R40 := R21; R39 := R21[0x0eeedfea]
667 [-]: GETUPVAL  R41 U5       ; R41 := U5
668 [-]: MOVE      R42 R36      ; R42 := R36
669 [-]: CALL      R41 2 0      ; R41,... := R41(R42)
670 [-]: CALL      R39 0 1      ; R39(R40,...)
671 [-]: GETUPVAL  R39 U3       ; R39 := U3
672 [-]: GETTABLE  R39 R39 K98  ; R39 := R39["Current"]
673 [-]: EQ        1 R39 K99    ; if R39 == 3.000000 then PC := 731
674 [-]: JMP       731          ; PC := 731
675 [-]: EQ        0 R20 K11    ; if R20 ~= nil then PC := 687
676 [-]: JMP       687          ; PC := 687
677 [-]: GETUPVAL  R39 U4       ; R39 := U4
678 [-]: GETGLOBAL R40 K103     ; R40 := 0xae91e43b
679 [-]: MOVE      R41 R5       ; R41 := R5
680 [-]: GETGLOBAL R42 K100     ; R42 := mLists
681 [-]: GETTABLE  R42 R42 K101 ; R42 := R42["mLoadOutList"]
682 [-]: GETTABLE  R42 R42 K104 ; R42 := R42["mElements"]
683 [-]: GETTABLE  R42 R42 K64  ; R42 := R42[1.000000]
684 [-]: LOADBOOL  R43 0 0      ; R43 := false
685 [-]: CALL      R39 5 2      ; R39 := R39(R40,R41,R42,R43)
686 [-]: MOVE      R20 R39      ; R20 := R39
687 [-]: GETTABLE  R39 R37 K107 ; R39 := R37["mAbilityIndex"]
688 [-]: SELF      R40 R7 K113  ; R41 := R7; R40 := R7[0xd836367c]
689 [-]: CALL      R40 2 2      ; R40 := R40(R41)
690 [-]: LT        0 R39 R40    ; if R39 >= R40 then PC := 731
691 [-]: JMP       731          ; PC := 731
692 [-]: EQ        0 R36 K114   ; if R36 ~= 5.000000 then PC := 712
693 [-]: JMP       712          ; PC := 712
694 [-]: GETGLOBAL R40 K100     ; R40 := mLists
695 [-]: GETTABLE  R40 R40 K101 ; R40 := R40["mLoadOutList"]
696 [-]: GETTABLE  R40 R40 K102 ; R40 := R40["SpecialASlotId"]
697 [-]: EQ        1 R40 K11    ; if R40 == nil then PC := 712
698 [-]: JMP       712          ; PC := 712
699 [-]: GETGLOBAL R40 K100     ; R40 := mLists
700 [-]: GETTABLE  R40 R40 K101 ; R40 := R40["mLoadOutList"]
701 [-]: GETTABLE  R40 R40 K104 ; R40 := R40["mElements"]
702 [-]: GETGLOBAL R41 K100     ; R41 := mLists
703 [-]: GETTABLE  R41 R41 K101 ; R41 := R41["mLoadOutList"]
704 [-]: GETTABLE  R41 R41 K102 ; R41 := R41["SpecialASlotId"]
705 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
706 [-]: LOADK     R41 K106     ; R41 := "AbilityIcon"
707 [-]: ADD       R42 R39 K64  ; R42 := R39 + 1.000000
708 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
709 [-]: GETTABLE  R41 R20 R41  ; R41 := R20[R41]
710 [-]: SETTABLE  R40 K105 R41 ; R40["SpecialIcon"] := R41
711 [-]: JMP       731          ; PC := 731
712 [-]: EQ        0 R36 K115   ; if R36 ~= 6.000000 then PC := 731
713 [-]: JMP       731          ; PC := 731
714 [-]: GETGLOBAL R40 K100     ; R40 := mLists
715 [-]: GETTABLE  R40 R40 K101 ; R40 := R40["mLoadOutList"]
716 [-]: GETTABLE  R40 R40 K108 ; R40 := R40["SpecialBSlotId"]
717 [-]: EQ        1 R40 K11    ; if R40 == nil then PC := 731
718 [-]: JMP       731          ; PC := 731
719 [-]: GETGLOBAL R40 K100     ; R40 := mLists
720 [-]: GETTABLE  R40 R40 K101 ; R40 := R40["mLoadOutList"]
721 [-]: GETTABLE  R40 R40 K104 ; R40 := R40["mElements"]
722 [-]: GETGLOBAL R41 K100     ; R41 := mLists
723 [-]: GETTABLE  R41 R41 K101 ; R41 := R41["mLoadOutList"]
724 [-]: GETTABLE  R41 R41 K108 ; R41 := R41["SpecialBSlotId"]
725 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
726 [-]: LOADK     R41 K106     ; R41 := "AbilityIcon"
727 [-]: ADD       R42 R39 K64  ; R42 := R39 + 1.000000
728 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
729 [-]: GETTABLE  R41 R20 R41  ; R41 := R20[R41]
730 [-]: SETTABLE  R40 K105 R41 ; R40["SpecialIcon"] := R41
731 [-]: FORLOOP   R33 636      ; R33 += R35; if R33 <= R34 then begin PC := 636; R36 := R33 end
732 [-]: SELF      R40 R6 K116  ; R41 := R6; R40 := R6[0xfaa69527]
733 [-]: LOADK     R42 0        ; R42 := 0.000000
734 [-]: CALL      R40 3 1      ; R40(R41,R42)
735 [-]: TEST      R0 0         ; if not R0 then PC := 749
736 [-]: JMP       749          ; PC := 749
737 [-]: GETGLOBAL R40 K117     ; R40 := mPvpTeams
738 [-]: GETTABLE  R40 R40 K98  ; R40 := R40["Current"]
739 [-]: EQ        1 R40 K64    ; if R40 == 1.000000 then PC := 749
740 [-]: JMP       749          ; PC := 749
741 [-]: GETUPVAL  R40 U1       ; R40 := U1
742 [-]: GETTABLE  R40 R40 K118 ; R40 := R40[0xa99c33fd]
743 [-]: GETGLOBAL R41 K6       ; R41 := _T
744 [-]: GETTABLE  R41 R41 K7   ; R41 := R41["MenuSuitAvatar"]
745 [-]: GETGLOBAL R42 K117     ; R42 := mPvpTeams
746 [-]: GETTABLE  R42 R42 K98  ; R42 := R42["Current"]
747 [-]: SUB       R42 R42 K64  ; R42 := R42 - 1.000000
748 [-]: CALL      R40 3 1      ; R40(R41,R42)
749 [-]: LOADNIL   R40 R40      ; R40 := nil
750 [-]: GETGLOBAL R41 K12      ; R41 := 0x7b998233
751 [-]: GETGLOBAL R42 K6       ; R42 := _T
752 [-]: GETTABLE  R42 R42 K7   ; R42 := R42["MenuSuitAvatar"]
753 [-]: CALL      R41 2 2      ; R41 := R41(R42)
754 [-]: TEST      R41 1        ; if R41 then PC := 763
755 [-]: JMP       763          ; PC := 763
756 [-]: GETGLOBAL R41 K6       ; R41 := _T
757 [-]: GETTABLE  R41 R41 K7   ; R41 := R41["MenuSuitAvatar"]
758 [-]: SELF      R41 R41 K8   ; R42 := R41; R41 := R41[0xde321e6f]
759 [-]: CALL      R41 2 2      ; R41 := R41(R42)
760 [-]: SELF      R41 R41 K119 ; R42 := R41; R41 := R41[0x2676deee]
761 [-]: CALL      R41 2 2      ; R41 := R41(R42)
762 [-]: MOVE      R40 R41      ; R40 := R41
763 [-]: GETGLOBAL R41 K12      ; R41 := 0x7b998233
764 [-]: GETGLOBAL R42 K6       ; R42 := _T
765 [-]: GETTABLE  R42 R42 K120 ; R42 := R42["MenuSentinel"]
766 [-]: CALL      R41 2 2      ; R41 := R41(R42)
767 [-]: TEST      R41 1        ; if R41 then PC := 780
768 [-]: JMP       780          ; PC := 780
769 [-]: GETUPVAL  R41 U6       ; R41 := U6
770 [-]: GETUPVAL  R42 U1       ; R42 := U1
771 [-]: GETTABLE  R42 R42 K121 ; R42 := R42["UI_MODE_IN_SPACE_SHIP"]
772 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 780
773 [-]: JMP       780          ; PC := 780
774 [-]: GETGLOBAL R41 K6       ; R41 := _T
775 [-]: GETTABLE  R41 R41 K120 ; R41 := R41["MenuSentinel"]
776 [-]: SELF      R41 R41 K42  ; R42 := R41; R41 := R41[0x768274d6]
777 [-]: LOADBOOL  R43 0 0      ; R43 := false
778 [-]: LOADBOOL  R44 1 0      ; R44 := true
779 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
780 [-]: GETGLOBAL R41 K6       ; R41 := _T
781 [-]: SETTABLE  R41 K120 R40 ; R41["MenuSentinel"] := R40
782 [-]: GETGLOBAL R41 K12      ; R41 := 0x7b998233
783 [-]: GETGLOBAL R42 K6       ; R42 := _T
784 [-]: GETTABLE  R42 R42 K120 ; R42 := R42["MenuSentinel"]
785 [-]: CALL      R41 2 2      ; R41 := R41(R42)
786 [-]: TEST      R41 1        ; if R41 then PC := 816
787 [-]: JMP       816          ; PC := 816
788 [-]: GETGLOBAL R41 K6       ; R41 := _T
789 [-]: GETTABLE  R41 R41 K120 ; R41 := R41["MenuSentinel"]
790 [-]: SELF      R41 R41 K91  ; R42 := R41; R41 := R41[0xd749da12]
791 [-]: LOADBOOL  R43 0 0      ; R43 := false
792 [-]: CALL      R41 3 1      ; R41(R42,R43)
793 [-]: GETGLOBAL R41 K6       ; R41 := _T
794 [-]: GETTABLE  R41 R41 K122 ; R41 := R41["InSimulacrum"]
795 [-]: TEST      R41 0        ; if not R41 then PC := 816
796 [-]: JMP       816          ; PC := 816
797 [-]: GETGLOBAL R41 K6       ; R41 := _T
798 [-]: GETTABLE  R41 R41 K120 ; R41 := R41["MenuSentinel"]
799 [-]: SELF      R41 R41 K88  ; R42 := R41; R41 := R41[0x23d6100a]
800 [-]: LOADBOOL  R43 0 0      ; R43 := false
801 [-]: CALL      R41 3 1      ; R41(R42,R43)
802 [-]: GETGLOBAL R41 K6       ; R41 := _T
803 [-]: GETTABLE  R41 R41 K120 ; R41 := R41["MenuSentinel"]
804 [-]: SELF      R41 R41 K8   ; R42 := R41; R41 := R41[0xde321e6f]
805 [-]: CALL      R41 2 2      ; R41 := R41(R42)
806 [-]: SELF      R41 R41 K9   ; R42 := R41; R41 := R41[0xf7d48ee0]
807 [-]: CALL      R41 2 2      ; R41 := R41(R42)
808 [-]: GETGLOBAL R42 K12      ; R42 := 0x7b998233
809 [-]: MOVE      R43 R41      ; R43 := R41
810 [-]: CALL      R42 2 2      ; R42 := R42(R43)
811 [-]: TEST      R42 1        ; if R42 then PC := 816
812 [-]: JMP       816          ; PC := 816
813 [-]: SELF      R42 R41 K123 ; R43 := R41; R42 := R41[0x1bf26251]
814 [-]: LOADBOOL  R44 0 0      ; R44 := false
815 [-]: CALL      R42 3 1      ; R42(R43,R44)
816 [-]: GETGLOBAL R42 K12      ; R42 := 0x7b998233
817 [-]: GETGLOBAL R43 K6       ; R43 := _T
818 [-]: GETTABLE  R43 R43 K120 ; R43 := R43["MenuSentinel"]
819 [-]: CALL      R42 2 2      ; R42 := R42(R43)
820 [-]: TEST      R42 1        ; if R42 then PC := 829
821 [-]: JMP       829          ; PC := 829
822 [-]: GETGLOBAL R42 K6       ; R42 := _T
823 [-]: GETTABLE  R42 R42 K120 ; R42 := R42["MenuSentinel"]
824 [-]: SELF      R42 R42 K124 ; R43 := R42; R42 := R42[0x1ac1655c]
825 [-]: CALL      R42 2 2      ; R42 := R42(R43)
826 [-]: SELF      R42 R42 K125 ; R43 := R42; R42 := R42[0x35577788]
827 [-]: LOADBOOL  R44 0 0      ; R44 := false
828 [-]: CALL      R42 3 1      ; R42(R43,R44)
829 [-]: GETUPVAL  R42 U7       ; R42 := U7
830 [-]: MOVE      R43 R4       ; R43 := R4
831 [-]: MOVE      R44 R5       ; R44 := R5
832 [-]: CALL      R42 3 1      ; R42(R43,R44)
833 [-]: GETUPVAL  R42 U8       ; R42 := U8
834 [-]: MOVE      R43 R4       ; R43 := R4
835 [-]: MOVE      R44 R5       ; R44 := R5
836 [-]: CALL      R42 3 1      ; R42(R43,R44)
837 [-]: GETUPVAL  R42 U9       ; R42 := U9
838 [-]: CALL      R42 1 1      ; R42()
839 [-]: GETUPVAL  R42 U10      ; R42 := U10
840 [-]: LOADK     R43 3        ; R43 := 3.000000
841 [-]: CALL      R42 2 2      ; R42 := R42(R43)
842 [-]: GETGLOBAL R43 K12      ; R43 := 0x7b998233
843 [-]: MOVE      R44 R42      ; R44 := R42
844 [-]: CALL      R43 2 2      ; R43 := R43(R44)
845 [-]: TEST      R43 1        ; if R43 then PC := 852
846 [-]: JMP       852          ; PC := 852
847 [-]: SELF      R43 R42 K126 ; R44 := R42; R43 := R42[0x3273ba96]
848 [-]: GETGLOBAL R45 K127     ; R45 := 0x0469f296
849 [-]: LOADK     R46 K128     ; R46 := "HubIgnoreNearCull"
850 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
851 [-]: CALL      R43 0 1      ; R43(R44,...)
852 [-]: GETUPVAL  R43 U6       ; R43 := U6
853 [-]: GETUPVAL  R44 U1       ; R44 := U1
854 [-]: GETTABLE  R44 R44 K121 ; R44 := R44["UI_MODE_IN_SPACE_SHIP"]
855 [-]: EQ        1 R43 R44    ; if R43 == R44 then PC := 998
856 [-]: JMP       998          ; PC := 998
857 [-]: GETGLOBAL R43 K12      ; R43 := 0x7b998233
858 [-]: MOVE      R44 R40      ; R44 := R40
859 [-]: CALL      R43 2 2      ; R43 := R43(R44)
860 [-]: TEST      R43 1        ; if R43 then PC := 998
861 [-]: JMP       998          ; PC := 998
862 [-]: GETGLOBAL R43 K6       ; R43 := _T
863 [-]: GETTABLE  R43 R43 K122 ; R43 := R43["InSimulacrum"]
864 [-]: TEST      R43 1        ; if R43 then PC := 870
865 [-]: JMP       870          ; PC := 870
866 [-]: GETGLOBAL R43 K6       ; R43 := _T
867 [-]: GETTABLE  R43 R43 K129 ; R43 := R43["InDojo"]
868 [-]: TEST      R43 0        ; if not R43 then PC := 998
869 [-]: JMP       998          ; PC := 998
870 [-]: GETGLOBAL R43 K12      ; R43 := 0x7b998233
871 [-]: GETGLOBAL R44 K2       ; R44 := 0x25d99d89
872 [-]: CALL      R43 2 2      ; R43 := R43(R44)
873 [-]: TEST      R43 1        ; if R43 then PC := 879
874 [-]: JMP       879          ; PC := 879
875 [-]: GETGLOBAL R43 K2       ; R43 := 0x25d99d89
876 [-]: SELF      R43 R43 K130 ; R44 := R43; R43 := R43[0x3c6b0324]
877 [-]: CALL      R43 2 2      ; R43 := R43(R44)
878 [-]: JMP       881          ; PC := 881
879 [-]: LOADBOOL  R43 0 1      ; R43 := false; PC := 880
880 [-]: LOADBOOL  R43 1 0      ; R43 := true
881 [-]: GETGLOBAL R44 K12      ; R44 := 0x7b998233
882 [-]: GETGLOBAL R45 K2       ; R45 := 0x25d99d89
883 [-]: CALL      R44 2 2      ; R44 := R44(R45)
884 [-]: TEST      R44 1        ; if R44 then PC := 890
885 [-]: JMP       890          ; PC := 890
886 [-]: GETGLOBAL R44 K2       ; R44 := 0x25d99d89
887 [-]: SELF      R44 R44 K131 ; R45 := R44; R44 := R44[0x9f91f49d]
888 [-]: CALL      R44 2 2      ; R44 := R44(R45)
889 [-]: JMP       892          ; PC := 892
890 [-]: LOADBOOL  R44 0 1      ; R44 := false; PC := 891
891 [-]: LOADBOOL  R44 1 0      ; R44 := true
892 [-]: TEST      R43 1        ; if R43 then PC := 896
893 [-]: JMP       896          ; PC := 896
894 [-]: TEST      R44 0        ; if not R44 then PC := 906
895 [-]: JMP       906          ; PC := 906
896 [-]: GETGLOBAL R45 K12      ; R45 := 0x7b998233
897 [-]: SELF      R46 R40 K132 ; R47 := R40; R46 := R40[0xfa9e477f]
898 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
899 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
900 [-]: TEST      R45 1        ; if R45 then PC := 906
901 [-]: JMP       906          ; PC := 906
902 [-]: SELF      R45 R40 K132 ; R46 := R40; R45 := R40[0xfa9e477f]
903 [-]: CALL      R45 2 2      ; R45 := R45(R46)
904 [-]: SELF      R45 R45 K133 ; R46 := R45; R45 := R45[0x4094b424]
905 [-]: CALL      R45 2 1      ; R45(R46)
906 [-]: LOADNIL   R45 R45      ; R45 := nil
907 [-]: GETGLOBAL R46 K12      ; R46 := 0x7b998233
908 [-]: GETGLOBAL R47 K80      ; R47 := mArsenalConsole
909 [-]: CALL      R46 2 2      ; R46 := R46(R47)
910 [-]: TEST      R46 1        ; if R46 then PC := 922
911 [-]: JMP       922          ; PC := 922
912 [-]: GETGLOBAL R46 K76      ; R46 := 0x89326c93
913 [-]: SELF      R46 R46 K134 ; R47 := R46; R46 := R46[0xc7b81e8d]
914 [-]: GETGLOBAL R48 K127     ; R48 := 0x0469f296
915 [-]: LOADK     R49 K135     ; R49 := "CompanionArsenalSpot"
916 [-]: CALL      R48 2 2      ; R48 := R48(R49)
917 [-]: GETGLOBAL R49 K80      ; R49 := mArsenalConsole
918 [-]: SELF      R49 R49 K81  ; R50 := R49; R49 := R49[0xd1586535]
919 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
920 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
921 [-]: MOVE      R45 R46      ; R45 := R46
922 [-]: GETGLOBAL R46 K12      ; R46 := 0x7b998233
923 [-]: MOVE      R47 R45      ; R47 := R45
924 [-]: CALL      R46 2 2      ; R46 := R46(R47)
925 [-]: TEST      R46 1        ; if R46 then PC := 998
926 [-]: JMP       998          ; PC := 998
927 [-]: TEST      R43 1        ; if R43 then PC := 931
928 [-]: JMP       931          ; PC := 931
929 [-]: TEST      R44 0        ; if not R44 then PC := 941
930 [-]: JMP       941          ; PC := 941
931 [-]: GETGLOBAL R46 K12      ; R46 := 0x7b998233
932 [-]: SELF      R47 R40 K132 ; R48 := R40; R47 := R40[0xfa9e477f]
933 [-]: CALL      R47 2 0      ; R47,... := R47(R48)
934 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
935 [-]: TEST      R46 1        ; if R46 then PC := 941
936 [-]: JMP       941          ; PC := 941
937 [-]: SELF      R46 R40 K132 ; R47 := R40; R46 := R40[0xfa9e477f]
938 [-]: CALL      R46 2 2      ; R46 := R46(R47)
939 [-]: SELF      R46 R46 K133 ; R47 := R46; R46 := R46[0x4094b424]
940 [-]: CALL      R46 2 1      ; R46(R47)
941 [-]: GETGLOBAL R46 K12      ; R46 := 0x7b998233
942 [-]: GETGLOBAL R47 K6       ; R47 := _T
943 [-]: GETTABLE  R47 R47 K136 ; R47 := R47["suitTable"]
944 [-]: CALL      R46 2 2      ; R46 := R46(R47)
945 [-]: TEST      R46 1        ; if R46 then PC := 961
946 [-]: JMP       961          ; PC := 961
947 [-]: GETGLOBAL R46 K12      ; R46 := 0x7b998233
948 [-]: GETGLOBAL R47 K137     ; R47 := mSelected
949 [-]: GETTABLE  R47 R47 K138 ; R47 := R47["Element"]
950 [-]: CALL      R46 2 2      ; R46 := R46(R47)
951 [-]: TEST      R46 1        ; if R46 then PC := 961
952 [-]: JMP       961          ; PC := 961
953 [-]: GETGLOBAL R46 K137     ; R46 := mSelected
954 [-]: GETTABLE  R46 R46 K138 ; R46 := R46["Element"]
955 [-]: GETTABLE  R46 R46 K139 ; R46 := R46["LoadOutType"]
956 [-]: EQ        0 R46 K64    ; if R46 ~= 1.000000 then PC := 961
957 [-]: JMP       961          ; PC := 961
958 [-]: GETGLOBAL R46 K6       ; R46 := _T
959 [-]: GETTABLE  R46 R46 K136 ; R46 := R46["suitTable"]
960 [-]: SETTABLE  R46 K140 K141; R46["queuedTeleport"] := 0.050000
961 [-]: SELF      R46 R45 K81  ; R47 := R45; R46 := R45[0xd1586535]
962 [-]: CALL      R46 2 2      ; R46 := R46(R47)
963 [-]: TEST      R43 1        ; if R43 then PC := 970
964 [-]: JMP       970          ; PC := 970
965 [-]: TEST      R44 1        ; if R44 then PC := 970
966 [-]: JMP       970          ; PC := 970
967 [-]: GETTABLE  R47 R46 K82  ; R47 := R46["y"]
968 [-]: ADD       R47 R47 K142 ; R47 := R47 + 1.500000
969 [-]: SETTABLE  R46 K82 R47  ; R46["y"] := R47
970 [-]: GETGLOBAL R47 K12      ; R47 := 0x7b998233
971 [-]: GETGLOBAL R48 K6       ; R48 := _T
972 [-]: GETTABLE  R48 R48 K136 ; R48 := R48["suitTable"]
973 [-]: CALL      R47 2 2      ; R47 := R47(R48)
974 [-]: TEST      R47 1        ; if R47 then PC := 993
975 [-]: JMP       993          ; PC := 993
976 [-]: GETGLOBAL R47 K12      ; R47 := 0x7b998233
977 [-]: GETGLOBAL R48 K6       ; R48 := _T
978 [-]: GETTABLE  R48 R48 K136 ; R48 := R48["suitTable"]
979 [-]: GETTABLE  R48 R48 K143 ; R48 := R48["positions"]
980 [-]: CALL      R47 2 2      ; R47 := R47(R48)
981 [-]: TEST      R47 0        ; if not R47 then PC := 987
982 [-]: JMP       987          ; PC := 987
983 [-]: GETGLOBAL R47 K6       ; R47 := _T
984 [-]: GETTABLE  R47 R47 K136 ; R47 := R47["suitTable"]
985 [-]: NEWTABLE  R48 0 0      ; R48 := {}
986 [-]: SETTABLE  R47 K143 R48 ; R47["positions"] := R48
987 [-]: GETGLOBAL R47 K6       ; R47 := _T
988 [-]: GETTABLE  R47 R47 K136 ; R47 := R47["suitTable"]
989 [-]: GETTABLE  R47 R47 K143 ; R47 := R47["positions"]
990 [-]: SELF      R48 R40 K25  ; R49 := R40; R48 := R40[0x388577d5]
991 [-]: CALL      R48 2 2      ; R48 := R48(R49)
992 [-]: SETTABLE  R47 R48 R46  ; R47[R48] := R46
993 [-]: SELF      R47 R40 K144 ; R48 := R40; R47 := R40[0x589ef1c1]
994 [-]: MOVE      R49 R46      ; R49 := R46
995 [-]: SELF      R50 R45 K145 ; R51 := R45; R50 := R45[0xcb3851b8]
996 [-]: CALL      R50 2 0      ; R50,... := R50(R51)
997 [-]: CALL      R47 0 1      ; R47(R48,...)
998 [-]: GETUPVAL  R47 U6       ; R47 := U6
999 [-]: GETUPVAL  R48 U1       ; R48 := U1
1000 [-]: GETTABLE  R48 R48 K121 ; R48 := R48["UI_MODE_IN_SPACE_SHIP"]
1001 [-]: EQ        0 R47 R48    ; if R47 ~= R48 then PC := 1067
1002 [-]: JMP       1067         ; PC := 1067
1003 [-]: GETGLOBAL R47 K4       ; R47 := 0xbe190284
1004 [-]: SELF      R47 R47 K146 ; R48 := R47; R47 := R47[0x7cf8123f]
1005 [-]: LOADK     R49 1        ; R49 := 1.000000
1006 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
1007 [-]: GETGLOBAL R48 K12      ; R48 := 0x7b998233
1008 [-]: MOVE      R49 R47      ; R49 := R47
1009 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1010 [-]: TEST      R48 1        ; if R48 then PC := 1025
1011 [-]: JMP       1025         ; PC := 1025
1012 [-]: TEST      R2 0         ; if not R2 then PC := 1021
1013 [-]: JMP       1021         ; PC := 1021
1014 [-]: SELF      R48 R47 K147 ; R49 := R47; R48 := R47[0xd5f7912b]
1015 [-]: GETGLOBAL R50 K127     ; R50 := 0x0469f296
1016 [-]: LOADK     R51 K148     ; R51 := "RestorePetVis"
1017 [-]: CALL      R50 2 2      ; R50 := R50(R51)
1018 [-]: LOADBOOL  R51 0 0      ; R51 := false
1019 [-]: CALL      R48 4 1      ; R48(R49,R50,R51)
1020 [-]: JMP       1025         ; PC := 1025
1021 [-]: GETUPVAL  R48 U11      ; R48 := U11
1022 [-]: GETTABLE  R48 R48 K149 ; R48 := R48[0x705e38df]
1023 [-]: MOVE      R49 R47      ; R49 := R47
1024 [-]: CALL      R48 2 1      ; R48(R49)
1025 [-]: GETGLOBAL R48 K12      ; R48 := 0x7b998233
1026 [-]: MOVE      R49 R42      ; R49 := R42
1027 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1028 [-]: TEST      R48 1        ; if R48 then PC := 1067
1029 [-]: JMP       1067         ; PC := 1067
1030 [-]: GETGLOBAL R48 K12      ; R48 := 0x7b998233
1031 [-]: GETGLOBAL R49 K6       ; R49 := _T
1032 [-]: GETTABLE  R49 R49 K136 ; R49 := R49["suitTable"]
1033 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1034 [-]: TEST      R48 1        ; if R48 then PC := 1067
1035 [-]: JMP       1067         ; PC := 1067
1036 [-]: GETGLOBAL R48 K12      ; R48 := 0x7b998233
1037 [-]: GETGLOBAL R49 K6       ; R49 := _T
1038 [-]: GETTABLE  R49 R49 K136 ; R49 := R49["suitTable"]
1039 [-]: GETTABLE  R49 R49 K143 ; R49 := R49["positions"]
1040 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1041 [-]: TEST      R48 0        ; if not R48 then PC := 1047
1042 [-]: JMP       1047         ; PC := 1047
1043 [-]: GETGLOBAL R48 K6       ; R48 := _T
1044 [-]: GETTABLE  R48 R48 K136 ; R48 := R48["suitTable"]
1045 [-]: NEWTABLE  R49 0 0      ; R49 := {}
1046 [-]: SETTABLE  R48 K143 R49 ; R48["positions"] := R49
1047 [-]: GETUPVAL  R48 U0       ; R48 := U0
1048 [-]: GETTABLE  R48 R48 K150 ; R48 := R48[0xa9882367]
1049 [-]: LOADK     R49 K151     ; R49 := "MoaSpawnControl"
1050 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1051 [-]: GETGLOBAL R49 K12      ; R49 := 0x7b998233
1052 [-]: MOVE      R50 R48      ; R50 := R48
1053 [-]: CALL      R49 2 2      ; R49 := R49(R50)
1054 [-]: TEST      R49 1        ; if R49 then PC := 1067
1055 [-]: JMP       1067         ; PC := 1067
1056 [-]: SELF      R49 R48 K81  ; R50 := R48; R49 := R48[0xd1586535]
1057 [-]: CALL      R49 2 2      ; R49 := R49(R50)
1058 [-]: GETTABLE  R50 R49 K82  ; R50 := R49["y"]
1059 [-]: ADD       R50 R50 K152 ; R50 := R50 + 1.650000
1060 [-]: SETTABLE  R49 K82 R50  ; R49["y"] := R50
1061 [-]: GETGLOBAL R50 K6       ; R50 := _T
1062 [-]: GETTABLE  R50 R50 K136 ; R50 := R50["suitTable"]
1063 [-]: GETTABLE  R50 R50 K143 ; R50 := R50["positions"]
1064 [-]: SELF      R51 R42 K25  ; R52 := R42; R51 := R42[0x388577d5]
1065 [-]: CALL      R51 2 2      ; R51 := R51(R52)
1066 [-]: SETTABLE  R50 R51 R49  ; R50[R51] := R49
1067 [-]: GETGLOBAL R50 K6       ; R50 := _T
1068 [-]: GETTABLE  R50 R50 K153 ; R50 := R50["LoadoutSaveRequired"]
1069 [-]: TEST      R50 0        ; if not R50 then PC := 1078
1070 [-]: JMP       1078         ; PC := 1078
1071 [-]: GETGLOBAL R50 K6       ; R50 := _T
1072 [-]: GETTABLE  R50 R50 K122 ; R50 := R50["InSimulacrum"]
1073 [-]: TEST      R50 1        ; if R50 then PC := 1078
1074 [-]: JMP       1078         ; PC := 1078
1075 [-]: GETGLOBAL R50 K154     ; R50 := 0xe7f2b02f
1076 [-]: SELF      R50 R50 K155 ; R51 := R50; R50 := R50[0xcf1bf52a]
1077 [-]: CALL      R50 2 1      ; R50(R51)
1078 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 920
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xcb79539e
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 38
  5 [-]: JMP       38           ; PC := 38
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R1 K3        ; R1 := "MAIN"
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: EQ        0 R2 R1      ; if R2 ~= R1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: TEST      R2 0         ; if not R2 then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETGLOBAL R2 K1        ; R2 := 0xcb79539e
 18 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xa9188a47]
 19 [-]: GETGLOBAL R4 K5        ; R4 := 0x0469f296
 20 [-]: LOADK     R5 K6        ; R5 := "IN_SHIP_VIEW_TIME"
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: LOADK     R5 K7        ; R5 := "EQUIPMENT_ARSENAL_"
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 25 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 26 [-]: SETUPVAL  R1 U0        ; U82 := R0
 27 [-]: TEST      R1 0         ; if not R1 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETGLOBAL R2 K1        ; R2 := 0xcb79539e
 30 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xa9136b2f]
 31 [-]: GETGLOBAL R4 K5        ; R4 := 0x0469f296
 32 [-]: LOADK     R5 K6        ; R5 := "IN_SHIP_VIEW_TIME"
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: LOADK     R5 K7        ; R5 := "EQUIPMENT_ARSENAL_"
 35 [-]: MOVE      R6 R1        ; R6 := R1
 36 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 37 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 38 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 943
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mPurchasePopup
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := mPurchasePopup
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x32302b4a]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: LOADNIL   R0 R0        ; R0 := nil
 10 [-]: SETGLOBAL R0 K1        ; mPurchasePopup := R0
 11 [-]: LOADBOOL  R0 0 0       ; R0 := false
 12 [-]: SETGLOBAL R0 K3        ; mInputBlocked := R0
 13 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 951
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: CALL      R3 1 1       ; R3()
  3 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADK     R2 K1        ; R2 := "ConfirmPopup"
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x34291f5c
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0xe27b35bb]
  8 [-]: CALL      R3 1 2       ; R3 := R3()
  9 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: SETTABLE  R3 K5 K6     ; R3["dialogType"] := 4.000000
 12 [-]: JMP       18           ; PC := 18
 13 [-]: EQ        0 R1 K7      ; if R1 ~= 1.000000 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: SETTABLE  R3 K5 K4     ; R3["dialogType"] := 0.000000
 16 [-]: JMP       18           ; PC := 18
 17 [-]: SETTABLE  R3 K5 K7     ; R3["dialogType"] := 1.000000
 18 [-]: SETTABLE  R3 K8 R0     ; R3["locString"] := R0
 19 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xe6ccc5b9]
 20 [-]: MOVE      R6 R2        ; R6 := R2
 21 [-]: CALL      R4 3 1       ; R4(R5,R6)
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0xe99b84e7]
 24 [-]: MOVE      R5 R3        ; R5 := R3
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: SETGLOBAL R4 K10       ; mPurchasePopup := R4
 27 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 972
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 33
  5 [-]: JMP       33           ; PC := 33
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["BackgroundMovie"]
  8 [-]: EQ        1 R0 K4      ; if R0 == nil then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R0 K2        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["BackgroundMovie"]
 12 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xe4162eed]
 13 [-]: LOADK     R2 K6        ; R2 := "ShowPurchaseCelebration"
 14 [-]: LOADK     R3 K7        ; R3 := ""
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: GETGLOBAL R0 K2        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["ForegroundMovie"]
 18 [-]: TEST      R0 0         ; if not R0 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R0 K2        ; R0 := _T
 21 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["ForegroundMovie"]
 22 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xe4162eed]
 23 [-]: LOADK     R2 K9        ; R2 := "PopulatePlayerInfo"
 24 [-]: LOADK     R3 K7        ; R3 := ""
 25 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 26 [-]: GETGLOBAL R0 K10       ; R0 := mLists
 27 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mLoadOutList"]
 28 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x71e9ac81]
 29 [-]: CLOSURE   R2 0         ; R2 := closure(Function #22.1)
 30 [-]: CALL      R0 3 1       ; R0(R1,R2)
 31 [-]: LOADBOOL  R0 1 0       ; R0 := true
 32 [-]: RETURN    R0 2         ; return R0
 33 [-]: LOADBOOL  R0 0 0       ; R0 := false
 34 [-]: RETURN    R0 2         ; return R0
 35 [-]: RETURN    R0 1         ; return 


; Function #22.1:
;
; Name:            
; Defined at line: 982
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: SETGLOBAL R0 K0        ; mInputBlocked := R0
  3 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  4 [-]: GETGLOBAL R1 K2        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["SelectedLoadOutPart"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R0 K2        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["SelectedLoadOutPart"]
 11 [-]: GETGLOBAL R1 K4        ; R1 := mLists
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mLoadOutList"]
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5fbddc1a]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: LT        0 R1 R0      ; if R1 >= R0 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETGLOBAL R0 K2        ; R0 := _T
 18 [-]: SETTABLE  R0 K3 K7     ; R0["SelectedLoadOutPart"] := 1.000000
 19 [-]: GETGLOBAL R0 K4        ; R0 := mLists
 20 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mLoadOutList"]
 21 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x1e63ac7a]
 22 [-]: GETGLOBAL R2 K2        ; R2 := _T
 23 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SelectedLoadOutPart"]
 24 [-]: CALL      R0 3 1       ; R0(R1,R2)
 25 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 996
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := mButtons
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 1         ; R2 := 1.000000
  5 [-]: LOADK     R3 -1        ; R3 := -1.000000
  6 [-]: FORPREP   R1 27        ; R1 -= R3; PC := 27
  7 [-]: GETGLOBAL R5 K0        ; R5 := mButtons
  8 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  9 [-]: GETTABLE  R6 R5 K1     ; R6 := R5["mVisible"]
 10 [-]: TEST      R6 0         ; if not R6 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETGLOBAL R6 K2        ; R6 := 0x33bdd652
 13 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[0x23d5322f]
 14 [-]: MOVE      R7 R0        ; R7 := R0
 15 [-]: NEWTABLE  R8 0 5       ; R8 := {}
 16 [-]: GETTABLE  R9 R5 K5     ; R9 := R5["mLabel"]
 17 [-]: SETTABLE  R8 K4 R9     ; R8["Label"] := R9
 18 [-]: GETTABLE  R9 R5 K7     ; R9 := R5["mCallback"]
 19 [-]: SETTABLE  R8 K6 R9     ; R8["CallBack"] := R9
 20 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["mCallout"]
 21 [-]: SETTABLE  R8 K8 R9     ; R8["CallOut"] := R9
 22 [-]: GETTABLE  R9 R5 K10    ; R9 := R5["Tips"]
 23 [-]: SETTABLE  R8 K10 R9    ; R8["Tips"] := R9
 24 [-]: GETTABLE  R9 R5 K11    ; R9 := R5["Padding"]
 25 [-]: SETTABLE  R8 K11 R9    ; R8["Padding"] := R9
 26 [-]: CALL      R6 3 1       ; R6(R7,R8)
 27 [-]: FORLOOP   R1 7         ; R1 += R3; if R1 <= R2 then begin PC := 7; R4 := R1 end
 28 [-]: GETGLOBAL R6 K12       ; R6 := _T
 29 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["SetButtons"]
 30 [-]: TEST      R6 0         ; if not R6 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: GETGLOBAL R6 K12       ; R6 := _T
 33 [-]: GETTABLE  R6 R6 K14    ; R6 := R6[0x1c5b546f]
 34 [-]: GETGLOBAL R7 K15       ; R7 := 0xae91e43b
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: GETGLOBAL R9 K16       ; R9 := 0xcd0165a3
 37 [-]: LOADK     R10 1        ; R10 := 1.000000
 38 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 39 [-]: CALL      R6 0 1       ; R6(R7,...)
 40 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 1011
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K3        ; R2 := 0x25d99d89
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 0         ; if not R1 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: LOADBOOL  R1 0 0       ; R1 := false
 18 [-]: RETURN    R1 2         ; return R1
 19 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 20 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 21 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["LoadOutType"]
 22 [-]: EQ        0 R1 K6      ; if R1 ~= 1.000000 then PC := 33
 23 [-]: JMP       33           ; PC := 33
 24 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 25 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 26 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["LoadOutId"]
 27 [-]: EQ        0 R1 K8      ; if R1 ~= 0.000000 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 30 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x3c6b0324]
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: JMP       35           ; PC := 35
 33 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 34
 34 [-]: LOADBOOL  R1 1 0       ; R1 := true
 35 [-]: TESTSET   R2 R1 0      ; if not R1 then PC := 42 else R2 := R1
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["Slot"]
 38 [-]: EQ        1 R2 K11     ; if R2 == 6.000000 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 41
 41 [-]: LOADBOOL  R2 1 0       ; R2 := true
 42 [-]: RETURN    R2 2         ; return R2
 43 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 1021
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 0         ; if not R0 then PC := 20
  2 [-]: JMP       20           ; PC := 20
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  4 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 20
  8 [-]: JMP       20           ; PC := 20
  9 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["LoadOutType"]
 12 [-]: EQ        1 R1 K5      ; if R1 == 4.000000 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 15 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["LoadOutType"]
 17 [-]: EQ        0 R1 K6      ; if R1 ~= 6.000000 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xaade900e]
 22 [-]: LOADK     R3 K9        ; R3 := "EquippedTitle"
 23 [-]: LOADK     R4 11        ; R4 := 11.000000
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 26 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 1029
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x105074fb]
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 19 [-]: RETURN    R1 0         ; return R1,...
 20 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 1041
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETGLOBAL R4 K1        ; R4 := mInventory
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R3 R4        ; R3 := R4 := nil
  7 [-]: RETURN    R3 3         ; return R3,R4
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["EquippedItem"]
  9 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x68d708a7]
 10 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mCustSlot"]
 11 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 12 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["EquippedItem"]
 13 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xe04650ad]
 14 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["mCustSlot"]
 15 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 16 [-]: TEST      R1 0         ; if not R1 then PC := 34
 17 [-]: JMP       34           ; PC := 34
 18 [-]: CLOSURE   R5 0         ; R5 := closure(Function #27.1)
 19 [-]: MOVE      R0 R3        ; R0 := R3
 20 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: MOVE      R6 R5        ; R6 := R5
 23 [-]: MOVE      R7 R2        ; R7 := R2
 24 [-]: CALL      R6 2 1       ; R6(R7)
 25 [-]: JMP       34           ; PC := 34
 26 [-]: LOADK     R6 0         ; R6 := 0.000000
 27 [-]: LOADK     R7 20        ; R7 := 20.000000
 28 [-]: LOADK     R8 1         ; R8 := 1.000000
 29 [-]: FORPREP   R6 33        ; R6 -= R8; PC := 33
 30 [-]: MOVE      R10 R5       ; R10 := R5
 31 [-]: MOVE      R11 R9       ; R11 := R9
 32 [-]: CALL      R10 2 1      ; R10(R11)
 33 [-]: FORLOOP   R6 30        ; R6 += R8; if R6 <= R7 then begin PC := 30; R9 := R6 end
 34 [-]: GETTABLE  R10 R0 K8    ; R10 := R0["LoadOutId"]
 35 [-]: GETGLOBAL R11 K7       ; R11 := 0x6c97a788
 36 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["NUM_NORMAL_LOADOUT_SLOTS"]
 37 [-]: LE        0 R11 R10    ; if R11 > R10 then PC := 120
 38 [-]: JMP       120          ; PC := 120
 39 [-]: GETGLOBAL R10 K10      ; R10 := mLists
 40 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mLoadOutList"]
 41 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["SuitSlotId"]
 42 [-]: EQ        1 R10 K6     ; if R10 == nil then PC := 120
 43 [-]: JMP       120          ; PC := 120
 44 [-]: GETGLOBAL R10 K10      ; R10 := mLists
 45 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mLoadOutList"]
 46 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0xca30dfb6]
 47 [-]: GETGLOBAL R12 K10      ; R12 := mLists
 48 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["mLoadOutList"]
 49 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["SuitSlotId"]
 50 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 51 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
 52 [-]: MOVE      R12 R10      ; R12 := R10
 53 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 54 [-]: TEST      R11 1        ; if R11 then PC := 120
 55 [-]: JMP       120          ; PC := 120
 56 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
 57 [-]: GETTABLE  R12 R10 K14  ; R12 := R10["Customization"]
 58 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 59 [-]: TEST      R11 0        ; if not R11 then PC := 68
 60 [-]: JMP       68           ; PC := 68
 61 [-]: GETUPVAL  R11 U0       ; R11 := U0
 62 [-]: MOVE      R12 R10      ; R12 := R10
 63 [-]: MOVE      R13 R1       ; R13 := R1
 64 [-]: MOVE      R14 R2       ; R14 := R2
 65 [-]: CALL      R11 4 3      ; R11,R12 := R11(R12,R13,R14)
 66 [-]: SETTABLE  R10 K15 R12  ; R10["BackupCustomization"] := R12
 67 [-]: SETTABLE  R10 K14 R11  ; R10["Customization"] := R11
 68 [-]: GETTABLE  R11 R10 K14  ; R11 := R10["Customization"]
 69 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11[0x8e62760a]
 70 [-]: LOADK     R13 0        ; R13 := 0.000000
 71 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 72 [-]: SELF      R12 R11 K17  ; R13 := R11; R12 := R11[0x697019d0]
 73 [-]: LOADK     R14 6        ; R14 := 6.000000
 74 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 75 [-]: TEST      R12 0        ; if not R12 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: SELF      R12 R3 K16   ; R13 := R3; R12 := R3[0x8e62760a]
 78 [-]: LOADK     R14 0        ; R14 := 0.000000
 79 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 80 [-]: SELF      R13 R12 K18  ; R14 := R12; R13 := R12[0xa3927fe9]
 81 [-]: LOADK     R15 6        ; R15 := 6.000000
 82 [-]: SELF      R16 R11 K19  ; R17 := R11; R16 := R11[0x5d10207d]
 83 [-]: LOADK     R18 6        ; R18 := 6.000000
 84 [-]: CALL      R16 3 0      ; R16,... := R16(R17,R18)
 85 [-]: CALL      R13 0 1      ; R13(R14,...)
 86 [-]: SELF      R13 R12 K20  ; R14 := R12; R13 := R12[0xfc5d7158]
 87 [-]: LOADK     R15 6        ; R15 := 6.000000
 88 [-]: LOADBOOL  R16 1 0      ; R16 := true
 89 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 90 [-]: SELF      R13 R3 K21   ; R14 := R3; R13 := R3[0x199edf6e]
 91 [-]: LOADK     R15 0        ; R15 := 0.000000
 92 [-]: MOVE      R16 R12      ; R16 := R12
 93 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 94 [-]: GETTABLE  R13 R10 K15  ; R13 := R10["BackupCustomization"]
 95 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13[0x8e62760a]
 96 [-]: LOADK     R15 0        ; R15 := 0.000000
 97 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 98 [-]: SELF      R14 R13 K17  ; R15 := R13; R14 := R13[0x697019d0]
 99 [-]: LOADK     R16 6        ; R16 := 6.000000
100 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
101 [-]: TEST      R14 0        ; if not R14 then PC := 120
102 [-]: JMP       120          ; PC := 120
103 [-]: SELF      R14 R4 K16   ; R15 := R4; R14 := R4[0x8e62760a]
104 [-]: LOADK     R16 0        ; R16 := 0.000000
105 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
106 [-]: SELF      R15 R14 K18  ; R16 := R14; R15 := R14[0xa3927fe9]
107 [-]: LOADK     R17 6        ; R17 := 6.000000
108 [-]: SELF      R18 R13 K19  ; R19 := R13; R18 := R13[0x5d10207d]
109 [-]: LOADK     R20 6        ; R20 := 6.000000
110 [-]: CALL      R18 3 0      ; R18,... := R18(R19,R20)
111 [-]: CALL      R15 0 1      ; R15(R16,...)
112 [-]: SELF      R15 R14 K20  ; R16 := R14; R15 := R14[0xfc5d7158]
113 [-]: LOADK     R17 6        ; R17 := 6.000000
114 [-]: LOADBOOL  R18 1 0      ; R18 := true
115 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
116 [-]: SELF      R15 R4 K21   ; R16 := R4; R15 := R4[0x199edf6e]
117 [-]: LOADK     R17 0        ; R17 := 0.000000
118 [-]: MOVE      R18 R14      ; R18 := R14
119 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
120 [-]: MOVE      R15 R3       ; R15 := R3
121 [-]: MOVE      R16 R4       ; R16 := R4
122 [-]: RETURN    R15 3        ; return R15,R16
123 [-]: RETURN    R0 1         ; return 


; Function #27.1:
;
; Name:            
; Defined at line: 1050
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x5ef3783b]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 29
  9 [-]: JMP       29           ; PC := 29
 10 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["mItemId"]
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mId"]
 12 [-]: EQ        1 R2 K4      ; if R2 == "" then PC := 29
 13 [-]: JMP       29           ; PC := 29
 14 [-]: GETGLOBAL R2 K5        ; R2 := mInventory
 15 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x684d9747]
 16 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mItemId"]
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mId"]
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 1         ; if R3 then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x569554e7]
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: MOVE      R6 R0        ; R6 := R0
 28 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 29 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 1100
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x06d055f9]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 100       ; R3 := 100.000000
  5 [-]: LOADK     R4 60        ; R4 := 60.000000
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x06d055f9]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: LOADK     R4 100       ; R4 := 100.000000
 11 [-]: LOADK     R5 0         ; R5 := 0.000000
 12 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 16 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xaade900e]
 17 [-]: LOADK     R5 K3        ; R5 := "GearSetup"
 18 [-]: LOADK     R6 11        ; R6 := 11.000000
 19 [-]: LOADBOOL  R7 1 0       ; R7 := true
 20 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 21 [-]: GETGLOBAL R3 K4        ; R3 := 0x25312c9b
 22 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 23 [-]: LOADK     R5 K3        ; R5 := "GearSetup"
 24 [-]: LOADK     R6 0         ; R6 := 0.000000
 25 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 26 [-]: LOADK     R8 5         ; R8 := 5.000000
 27 [-]: LOADK     R9 6         ; R9 := 6.000000
 28 [-]: LOADK     R10 10       ; R10 := 10.000000
 29 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 30 [-]: NEWTABLE  R8 3 0       ; R8 := {}
 31 [-]: MOVE      R9 R1        ; R9 := R1
 32 [-]: MOVE      R10 R1       ; R10 := R1
 33 [-]: MOVE      R11 R2       ; R11 := R2
 34 [-]: SETLIST   R8 3 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 3
 35 [-]: LOADK     R9 0         ; R9 := 0.250000
 36 [-]: LOADK     R10 0        ; R10 := 0.000000
 37 [-]: CLOSURE   R11 0        ; R11 := closure(Function #28.1)
 38 [-]: MOVE      R0 R0        ; R0 := R0
 39 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 40 [-]: RETURN    R0 1         ; return 


; Function #28.1:
;
; Name:            
; Defined at line: 1106
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "GearSetup"
  4 [-]: LOADK     R3 11        ; R3 := 11.000000
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1109
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 42
  6 [-]: JMP       42           ; PC := 42
  7 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Element"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["LoadOutType"]
 10 [-]: EQ        0 R0 K5      ; if R0 ~= 0.000000 then PC := 42
 11 [-]: JMP       42           ; PC := 42
 12 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Element"]
 14 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["LoadOutId"]
 15 [-]: EQ        0 R0 K5      ; if R0 ~= 0.000000 then PC := 42
 16 [-]: JMP       42           ; PC := 42
 17 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 18 [-]: GETGLOBAL R1 K7        ; R1 := mSuitType
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 42
 21 [-]: JMP       42           ; PC := 42
 22 [-]: GETGLOBAL R0 K7        ; R0 := mSuitType
 23 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xf2deaf69]
 24 [-]: GETGLOBAL R2 K9        ; R2 := 0x94f36ee7
 25 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 26 [-]: TEST      R0 0         ; if not R0 then PC := 44
 27 [-]: JMP       44           ; PC := 44
 28 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 29 [-]: GETGLOBAL R1 K10       ; R1 := 0xe7f2b02f
 30 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x565be9ee]
 31 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 32 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 33 [-]: TEST      R0 1         ; if R0 then PC := 44
 34 [-]: JMP       44           ; PC := 44
 35 [-]: GETGLOBAL R0 K10       ; R0 := 0xe7f2b02f
 36 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0x565be9ee]
 37 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 38 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x3b013073]
 39 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 40 [-]: LE        1 R0 K13     ; if R0 <= 1.000000 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 43
 43 [-]: LOADBOOL  R0 1 0       ; R0 := true
 44 [-]: RETURN    R0 2         ; return R0
 45 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1114
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 48
  6 [-]: JMP       48           ; PC := 48
  7 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Element"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["LoadOutType"]
 10 [-]: EQ        0 R0 K5      ; if R0 ~= 1.000000 then PC := 48
 11 [-]: JMP       48           ; PC := 48
 12 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Element"]
 14 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["LoadOutId"]
 15 [-]: EQ        0 R0 K7      ; if R0 ~= 0.000000 then PC := 48
 16 [-]: JMP       48           ; PC := 48
 17 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 18 [-]: GETGLOBAL R1 K8        ; R1 := mSentinelType
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 48
 21 [-]: JMP       48           ; PC := 48
 22 [-]: GETGLOBAL R0 K8        ; R0 := mSentinelType
 23 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xf2deaf69]
 24 [-]: GETGLOBAL R2 K10       ; R2 := 0xbdb864c7
 25 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 26 [-]: TEST      R0 1         ; if R0 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R0 K8        ; R0 := mSentinelType
 29 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xf2deaf69]
 30 [-]: GETGLOBAL R2 K11       ; R2 := 0xb71841e2
 31 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 32 [-]: TEST      R0 0         ; if not R0 then PC := 50
 33 [-]: JMP       50           ; PC := 50
 34 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 35 [-]: GETGLOBAL R1 K12       ; R1 := 0xe7f2b02f
 36 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x565be9ee]
 37 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 38 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 39 [-]: TEST      R0 1         ; if R0 then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: GETGLOBAL R0 K12       ; R0 := 0xe7f2b02f
 42 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x565be9ee]
 43 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 44 [-]: SELF      R0 R0 K14    ; R1 := R0; R0 := R0[0x3b013073]
 45 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 46 [-]: LE        1 R0 K5      ; if R0 <= 1.000000 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 49
 49 [-]: LOADBOOL  R0 1 0       ; R0 := true
 50 [-]: RETURN    R0 2         ; return R0
 51 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1119
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xf2deaf69]
  3 [-]: GETGLOBAL R2 K2        ; R2 := gLotusAttractModeGameRulesType
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x23ddc82a]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1123
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["orgPosition"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x00046924
  4 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
  5 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["orgRotation"]
  6 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["heading"]
  7 [-]: GETGLOBAL R4 K0        ; R4 := mCameraTable
  8 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["orgRotation"]
  9 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["pitch"]
 10 [-]: GETGLOBAL R5 K0        ; R5 := mCameraTable
 11 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["orgRotation"]
 12 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["bank"]
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
 15 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["orgFOV"]
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: CALL      R4 1 2       ; R4 := R4()
 18 [-]: TEST      R4 1         ; if R4 then PC := 195
 19 [-]: JMP       195          ; PC := 195
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: GETTABLE  R4 R4 K8     ; R4 := R4[0x7a04c21d]
 22 [-]: CALL      R4 1 2       ; R4 := R4()
 23 [-]: TEST      R4 1         ; if R4 then PC := 195
 24 [-]: JMP       195          ; PC := 195
 25 [-]: GETGLOBAL R4 K9        ; R4 := _T
 26 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["MenuSentinel"]
 27 [-]: GETGLOBAL R5 K11       ; R5 := 0x7b998233
 28 [-]: MOVE      R6 R4        ; R6 := R4
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: TEST      R5 0         ; if not R5 then PC := 60
 31 [-]: JMP       60           ; PC := 60
 32 [-]: GETGLOBAL R5 K9        ; R5 := _T
 33 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["InSimulacrum"]
 34 [-]: TEST      R5 1         ; if R5 then PC := 60
 35 [-]: JMP       60           ; PC := 60
 36 [-]: GETGLOBAL R5 K13       ; R5 := 0x89326c93
 37 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5[0xfb64e76c]
 38 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 39 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 40 [-]: MOVE      R7 R5        ; R7 := R5
 41 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 42 [-]: TEST      R6 1         ; if R6 then PC := 60
 43 [-]: JMP       60           ; PC := 60
 44 [-]: SELF      R6 R5 K15    ; R7 := R5; R6 := R5[0xa534c3ac]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: GETGLOBAL R7 K11       ; R7 := 0x7b998233
 47 [-]: MOVE      R8 R6        ; R8 := R6
 48 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 49 [-]: TEST      R7 1         ; if R7 then PC := 60
 50 [-]: JMP       60           ; PC := 60
 51 [-]: GETGLOBAL R7 K9        ; R7 := _T
 52 [-]: SELF      R8 R6 K16    ; R9 := R6; R8 := R6[0xde321e6f]
 53 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 54 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0x2676deee]
 55 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 56 [-]: SETTABLE  R7 K10 R8    ; R7["MenuSentinel"] := R8
 57 [-]: GETGLOBAL R7 K9        ; R7 := _T
 58 [-]: GETTABLE  R4 R7 K10    ; R4 := R7["MenuSentinel"]
 59 [-]: LOADK     R0 0         ; R0 := 0.000000
 60 [-]: GETGLOBAL R7 K11       ; R7 := 0x7b998233
 61 [-]: MOVE      R8 R4        ; R8 := R4
 62 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 63 [-]: TEST      R7 1         ; if R7 then PC := 421
 64 [-]: JMP       421          ; PC := 421
 65 [-]: GETGLOBAL R7 K19       ; R7 := 0x5bced4c4
 66 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[0x3eda26fc]
 67 [-]: GETGLOBAL R8 K19       ; R8 := 0x5bced4c4
 68 [-]: GETTABLE  R8 R8 K21    ; R8 := R8[0xdde5c6a1]
 69 [-]: GETGLOBAL R9 K9        ; R9 := _T
 70 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["DEFAULT_SUIT_ROTATION"]
 71 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 72 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 73 [-]: GETGLOBAL R8 K19       ; R8 := 0x5bced4c4
 74 [-]: GETTABLE  R8 R8 K23    ; R8 := R8[0x00fa6bf1]
 75 [-]: GETGLOBAL R9 K19       ; R9 := 0x5bced4c4
 76 [-]: GETTABLE  R9 R9 K21    ; R9 := R9[0xdde5c6a1]
 77 [-]: GETGLOBAL R10 K9       ; R10 := _T
 78 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["DEFAULT_SUIT_ROTATION"]
 79 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 80 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 81 [-]: EQ        1 R0 K24     ; if R0 == 1.000000 then PC := 85
 82 [-]: JMP       85           ; PC := 85
 83 [-]: EQ        0 R0 K25     ; if R0 ~= 2.000000 then PC := 126
 84 [-]: JMP       126          ; PC := 126
 85 [-]: GETGLOBAL R9 K9        ; R9 := _T
 86 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["InSimulacrum"]
 87 [-]: TEST      R9 1         ; if R9 then PC := 94
 88 [-]: JMP       94           ; PC := 94
 89 [-]: GETUPVAL  R9 U2        ; R9 := U2
 90 [-]: GETTABLE  R9 R9 K26    ; R9 := R9[0xcf1fcba4]
 91 [-]: CALL      R9 1 2       ; R9 := R9()
 92 [-]: TEST      R9 0         ; if not R9 then PC := 104
 93 [-]: JMP       104          ; PC := 104
 94 [-]: GETGLOBAL R9 K11       ; R9 := 0x7b998233
 95 [-]: SELF      R10 R4 K27   ; R11 := R4; R10 := R4[0xfa9e477f]
 96 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 97 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 98 [-]: TEST      R9 1         ; if R9 then PC := 104
 99 [-]: JMP       104          ; PC := 104
100 [-]: SELF      R9 R4 K27    ; R10 := R4; R9 := R4[0xfa9e477f]
101 [-]: CALL      R9 2 2       ; R9 := R9(R10)
102 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0x4094b424]
103 [-]: CALL      R9 2 1       ; R9(R10)
104 [-]: GETGLOBAL R9 K29       ; R9 := 0xa421af95
105 [-]: MUL       R10 K30 R7   ; R10 := 3.500000 * R7
106 [-]: LOADK     R11 K31      ; R11 := 0.700000
107 [-]: MUL       R12 K30 R8   ; R12 := 3.500000 * R8
108 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
109 [-]: SELF      R10 R4 K32   ; R11 := R4; R10 := R4[0xd1586535]
110 [-]: CALL      R10 2 2      ; R10 := R10(R11)
111 [-]: ADD       R1 R10 R9    ; R1 := R10 + R9
112 [-]: GETGLOBAL R10 K33      ; R10 := 0x20b7f774
113 [-]: MOVE      R11 R1       ; R11 := R1
114 [-]: SELF      R12 R4 K32   ; R13 := R4; R12 := R4[0xd1586535]
115 [-]: CALL      R12 2 2      ; R12 := R12(R13)
116 [-]: GETGLOBAL R13 K29      ; R13 := 0xa421af95
117 [-]: LOADK     R14 0        ; R14 := 0.000000
118 [-]: LOADK     R15 K31      ; R15 := 0.700000
119 [-]: LOADK     R16 0        ; R16 := 0.000000
120 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
121 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
122 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
123 [-]: MOVE      R2 R10       ; R2 := R10
124 [-]: LOADK     R3 40        ; R3 := 40.000000
125 [-]: JMP       421          ; PC := 421
126 [-]: EQ        0 R0 K34     ; if R0 ~= 0.000000 then PC := 150
127 [-]: JMP       150          ; PC := 150
128 [-]: GETGLOBAL R10 K29      ; R10 := 0xa421af95
129 [-]: MUL       R11 K25 R7   ; R11 := 2.000000 * R7
130 [-]: LOADK     R12 K35      ; R12 := 0.300000
131 [-]: MUL       R13 K25 R8   ; R13 := 2.000000 * R8
132 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
133 [-]: SELF      R11 R4 K32   ; R12 := R4; R11 := R4[0xd1586535]
134 [-]: CALL      R11 2 2      ; R11 := R11(R12)
135 [-]: ADD       R1 R11 R10   ; R1 := R11 + R10
136 [-]: GETGLOBAL R11 K33      ; R11 := 0x20b7f774
137 [-]: MOVE      R12 R1       ; R12 := R1
138 [-]: SELF      R13 R4 K32   ; R14 := R4; R13 := R4[0xd1586535]
139 [-]: CALL      R13 2 2      ; R13 := R13(R14)
140 [-]: GETGLOBAL R14 K29      ; R14 := 0xa421af95
141 [-]: LOADK     R15 0        ; R15 := 0.000000
142 [-]: LOADK     R16 K35      ; R16 := 0.300000
143 [-]: LOADK     R17 0        ; R17 := 0.000000
144 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
145 [-]: ADD       R13 R13 R14  ; R13 := R13 + R14
146 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
147 [-]: MOVE      R2 R11       ; R2 := R11
148 [-]: LOADK     R3 23        ; R3 := 23.000000
149 [-]: JMP       421          ; PC := 421
150 [-]: EQ        1 R0 K36     ; if R0 == 3.000000 then PC := 154
151 [-]: JMP       154          ; PC := 154
152 [-]: EQ        0 R0 K37     ; if R0 ~= 4.000000 then PC := 421
153 [-]: JMP       421          ; PC := 421
154 [-]: GETGLOBAL R11 K9       ; R11 := _T
155 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["InSimulacrum"]
156 [-]: TEST      R11 1        ; if R11 then PC := 163
157 [-]: JMP       163          ; PC := 163
158 [-]: GETUPVAL  R11 U2       ; R11 := U2
159 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0xcf1fcba4]
160 [-]: CALL      R11 1 2      ; R11 := R11()
161 [-]: TEST      R11 0        ; if not R11 then PC := 173
162 [-]: JMP       173          ; PC := 173
163 [-]: GETGLOBAL R11 K11      ; R11 := 0x7b998233
164 [-]: SELF      R12 R4 K27   ; R13 := R4; R12 := R4[0xfa9e477f]
165 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
166 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
167 [-]: TEST      R11 1        ; if R11 then PC := 173
168 [-]: JMP       173          ; PC := 173
169 [-]: SELF      R11 R4 K27   ; R12 := R4; R11 := R4[0xfa9e477f]
170 [-]: CALL      R11 2 2      ; R11 := R11(R12)
171 [-]: SELF      R11 R11 K28  ; R12 := R11; R11 := R11[0x4094b424]
172 [-]: CALL      R11 2 1      ; R11(R12)
173 [-]: GETGLOBAL R11 K29      ; R11 := 0xa421af95
174 [-]: MUL       R12 K38 R7   ; R12 := 5.000000 * R7
175 [-]: LOADK     R13 1        ; R13 := 1.000000
176 [-]: MUL       R14 K38 R8   ; R14 := 5.000000 * R8
177 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
178 [-]: SELF      R12 R4 K32   ; R13 := R4; R12 := R4[0xd1586535]
179 [-]: CALL      R12 2 2      ; R12 := R12(R13)
180 [-]: ADD       R1 R12 R11   ; R1 := R12 + R11
181 [-]: GETGLOBAL R12 K33      ; R12 := 0x20b7f774
182 [-]: MOVE      R13 R1       ; R13 := R1
183 [-]: SELF      R14 R4 K32   ; R15 := R4; R14 := R4[0xd1586535]
184 [-]: CALL      R14 2 2      ; R14 := R14(R15)
185 [-]: GETGLOBAL R15 K29      ; R15 := 0xa421af95
186 [-]: LOADK     R16 0        ; R16 := 0.000000
187 [-]: LOADK     R17 1        ; R17 := 1.000000
188 [-]: LOADK     R18 0        ; R18 := -0.500000
189 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
190 [-]: ADD       R14 R14 R15  ; R14 := R14 + R15
191 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
192 [-]: MOVE      R2 R12       ; R2 := R12
193 [-]: LOADK     R3 23        ; R3 := 23.000000
194 [-]: JMP       421          ; PC := 421
195 [-]: EQ        1 R0 K24     ; if R0 == 1.000000 then PC := 199
196 [-]: JMP       199          ; PC := 199
197 [-]: EQ        0 R0 K25     ; if R0 ~= 2.000000 then PC := 241
198 [-]: JMP       241          ; PC := 241
199 [-]: GETUPVAL  R12 U3       ; R12 := U3
200 [-]: GETTABLE  R12 R12 K39  ; R12 := R12[0xa9882367]
201 [-]: LOADK     R13 K40      ; R13 := "KubrowPuppySpawnControl"
202 [-]: CALL      R12 2 2      ; R12 := R12(R13)
203 [-]: GETGLOBAL R13 K11      ; R13 := 0x7b998233
204 [-]: MOVE      R14 R12      ; R14 := R12
205 [-]: CALL      R13 2 2      ; R13 := R13(R14)
206 [-]: TEST      R13 1        ; if R13 then PC := 421
207 [-]: JMP       421          ; PC := 421
208 [-]: GETGLOBAL R13 K29      ; R13 := 0xa421af95
209 [-]: LOADK     R14 -2       ; R14 := -2.500000
210 [-]: LOADK     R15 K41      ; R15 := 1.900000
211 [-]: LOADK     R16 2        ; R16 := 2.500000
212 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
213 [-]: GETUPVAL  R14 U1       ; R14 := U1
214 [-]: GETTABLE  R14 R14 K8   ; R14 := R14[0x7a04c21d]
215 [-]: CALL      R14 1 2      ; R14 := R14()
216 [-]: TEST      R14 0        ; if not R14 then PC := 224
217 [-]: JMP       224          ; PC := 224
218 [-]: GETGLOBAL R14 K29      ; R14 := 0xa421af95
219 [-]: LOADK     R15 -4       ; R15 := -4.000000
220 [-]: LOADK     R16 K41      ; R16 := 1.900000
221 [-]: LOADK     R17 -2       ; R17 := -2.500000
222 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
223 [-]: MOVE      R13 R14      ; R13 := R14
224 [-]: SELF      R14 R12 K32  ; R15 := R12; R14 := R12[0xd1586535]
225 [-]: CALL      R14 2 2      ; R14 := R14(R15)
226 [-]: ADD       R1 R14 R13   ; R1 := R14 + R13
227 [-]: GETGLOBAL R14 K33      ; R14 := 0x20b7f774
228 [-]: MOVE      R15 R1       ; R15 := R1
229 [-]: SELF      R16 R12 K32  ; R17 := R12; R16 := R12[0xd1586535]
230 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
231 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
232 [-]: MOVE      R2 R14       ; R2 := R14
233 [-]: GETTABLE  R14 R2 K5    ; R14 := R2["pitch"]
234 [-]: SUB       R14 R14 K42  ; R14 := R14 - 9.000000
235 [-]: SETTABLE  R2 K5 R14    ; R2["pitch"] := R14
236 [-]: GETTABLE  R14 R2 K4    ; R14 := R2["heading"]
237 [-]: SUB       R14 R14 K43  ; R14 := R14 - 8.000000
238 [-]: SETTABLE  R2 K4 R14    ; R2["heading"] := R14
239 [-]: LOADK     R3 40        ; R3 := 40.000000
240 [-]: JMP       421          ; PC := 421
241 [-]: EQ        0 R0 K34     ; if R0 ~= 0.000000 then PC := 294
242 [-]: JMP       294          ; PC := 294
243 [-]: GETUPVAL  R14 U3       ; R14 := U3
244 [-]: GETTABLE  R14 R14 K39  ; R14 := R14[0xa9882367]
245 [-]: LOADK     R15 K44      ; R15 := "SentinelSpawnControl"
246 [-]: CALL      R14 2 2      ; R14 := R14(R15)
247 [-]: GETGLOBAL R15 K11      ; R15 := 0x7b998233
248 [-]: MOVE      R16 R14      ; R16 := R14
249 [-]: CALL      R15 2 2      ; R15 := R15(R16)
250 [-]: TEST      R15 1        ; if R15 then PC := 421
251 [-]: JMP       421          ; PC := 421
252 [-]: GETGLOBAL R15 K29      ; R15 := 0xa421af95
253 [-]: LOADK     R16 2        ; R16 := 2.000000
254 [-]: LOADK     R17 K45      ; R17 := 0.100000
255 [-]: LOADK     R18 2        ; R18 := 2.000000
256 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
257 [-]: GETGLOBAL R16 K29      ; R16 := 0xa421af95
258 [-]: LOADK     R17 0        ; R17 := 0.250000
259 [-]: LOADK     R18 0        ; R18 := 0.000000
260 [-]: LOADK     R19 0        ; R19 := 0.000000
261 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
262 [-]: GETUPVAL  R17 U1       ; R17 := U1
263 [-]: GETTABLE  R17 R17 K8   ; R17 := R17[0x7a04c21d]
264 [-]: CALL      R17 1 2      ; R17 := R17()
265 [-]: TEST      R17 0        ; if not R17 then PC := 279
266 [-]: JMP       279          ; PC := 279
267 [-]: GETGLOBAL R17 K29      ; R17 := 0xa421af95
268 [-]: LOADK     R18 4        ; R18 := 4.000000
269 [-]: LOADK     R19 K46      ; R19 := 0.400000
270 [-]: LOADK     R20 2        ; R20 := 2.000000
271 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
272 [-]: MOVE      R15 R17      ; R15 := R17
273 [-]: GETGLOBAL R17 K29      ; R17 := 0xa421af95
274 [-]: LOADK     R18 0        ; R18 := 0.500000
275 [-]: LOADK     R19 0        ; R19 := 0.000000
276 [-]: LOADK     R20 0        ; R20 := 0.000000
277 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
278 [-]: MOVE      R16 R17      ; R16 := R17
279 [-]: SELF      R17 R14 K32  ; R18 := R14; R17 := R14[0xd1586535]
280 [-]: CALL      R17 2 2      ; R17 := R17(R18)
281 [-]: ADD       R1 R17 R15   ; R1 := R17 + R15
282 [-]: GETGLOBAL R17 K33      ; R17 := 0x20b7f774
283 [-]: MOVE      R18 R1       ; R18 := R1
284 [-]: SELF      R19 R14 K32  ; R20 := R14; R19 := R14[0xd1586535]
285 [-]: CALL      R19 2 2      ; R19 := R19(R20)
286 [-]: ADD       R19 R19 R16  ; R19 := R19 + R16
287 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
288 [-]: MOVE      R2 R17       ; R2 := R17
289 [-]: GETTABLE  R17 R2 K5    ; R17 := R2["pitch"]
290 [-]: SUB       R17 R17 K38  ; R17 := R17 - 5.000000
291 [-]: SETTABLE  R2 K5 R17    ; R2["pitch"] := R17
292 [-]: LOADK     R3 25        ; R3 := 25.000000
293 [-]: JMP       421          ; PC := 421
294 [-]: EQ        0 R0 K36     ; if R0 ~= 3.000000 then PC := 378
295 [-]: JMP       378          ; PC := 378
296 [-]: GETUPVAL  R17 U3       ; R17 := U3
297 [-]: GETTABLE  R17 R17 K39  ; R17 := R17[0xa9882367]
298 [-]: LOADK     R18 K47      ; R18 := "MoaSpawnControl"
299 [-]: CALL      R17 2 2      ; R17 := R17(R18)
300 [-]: GETGLOBAL R18 K11      ; R18 := 0x7b998233
301 [-]: MOVE      R19 R17      ; R19 := R17
302 [-]: CALL      R18 2 2      ; R18 := R18(R19)
303 [-]: TEST      R18 1        ; if R18 then PC := 421
304 [-]: JMP       421          ; PC := 421
305 [-]: GETGLOBAL R18 K29      ; R18 := 0xa421af95
306 [-]: LOADK     R19 2        ; R19 := 2.000000
307 [-]: LOADK     R20 2        ; R20 := 2.000000
308 [-]: LOADK     R21 2        ; R21 := 2.000000
309 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
310 [-]: GETGLOBAL R19 K9       ; R19 := _T
311 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["MenuSentinel"]
312 [-]: LOADNIL   R20 R20      ; R20 := nil
313 [-]: GETUPVAL  R21 U1       ; R21 := U1
314 [-]: GETTABLE  R21 R21 K8   ; R21 := R21[0x7a04c21d]
315 [-]: CALL      R21 1 2      ; R21 := R21()
316 [-]: TEST      R21 0        ; if not R21 then PC := 333
317 [-]: JMP       333          ; PC := 333
318 [-]: GETGLOBAL R21 K29      ; R21 := 0xa421af95
319 [-]: LOADK     R22 3        ; R22 := 3.000000
320 [-]: LOADK     R23 3        ; R23 := 3.000000
321 [-]: LOADK     R24 -5       ; R24 := -5.000000
322 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
323 [-]: MOVE      R18 R21      ; R18 := R21
324 [-]: SELF      R21 R17 K32  ; R22 := R17; R21 := R17[0xd1586535]
325 [-]: CALL      R21 2 2      ; R21 := R21(R22)
326 [-]: GETGLOBAL R22 K29      ; R22 := 0xa421af95
327 [-]: LOADK     R23 K48      ; R23 := 0.200000
328 [-]: LOADK     R24 2        ; R24 := 2.500000
329 [-]: LOADK     R25 K49      ; R25 := -1.200000
330 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
331 [-]: ADD       R20 R21 R22  ; R20 := R21 + R22
332 [-]: JMP       360          ; PC := 360
333 [-]: GETGLOBAL R21 K11      ; R21 := 0x7b998233
334 [-]: MOVE      R22 R19      ; R22 := R19
335 [-]: CALL      R21 2 2      ; R21 := R21(R22)
336 [-]: TEST      R21 1        ; if R21 then PC := 343
337 [-]: JMP       343          ; PC := 343
338 [-]: SELF      R21 R19 K50  ; R22 := R19; R21 := R19[0xf2deaf69]
339 [-]: GETGLOBAL R23 K51      ; R23 := gLotusMoaPetAvatarType
340 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
341 [-]: TEST      R21 1        ; if R21 then PC := 352
342 [-]: JMP       352          ; PC := 352
343 [-]: SELF      R21 R17 K32  ; R22 := R17; R21 := R17[0xd1586535]
344 [-]: CALL      R21 2 2      ; R21 := R21(R22)
345 [-]: GETGLOBAL R22 K29      ; R22 := 0xa421af95
346 [-]: LOADK     R23 0        ; R23 := 0.500000
347 [-]: LOADK     R24 2        ; R24 := 2.500000
348 [-]: LOADK     R25 0        ; R25 := 0.000000
349 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
350 [-]: ADD       R20 R21 R22  ; R20 := R21 + R22
351 [-]: JMP       360          ; PC := 360
352 [-]: SELF      R21 R19 K52  ; R22 := R19; R21 := R19[0xebfba9e4]
353 [-]: CALL      R21 2 2      ; R21 := R21(R22)
354 [-]: GETGLOBAL R22 K29      ; R22 := 0xa421af95
355 [-]: LOADK     R23 K46      ; R23 := 0.400000
356 [-]: LOADK     R24 0        ; R24 := 0.000000
357 [-]: LOADK     R25 0        ; R25 := 0.000000
358 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
359 [-]: ADD       R20 R21 R22  ; R20 := R21 + R22
360 [-]: SELF      R21 R17 K32  ; R22 := R17; R21 := R17[0xd1586535]
361 [-]: CALL      R21 2 2      ; R21 := R21(R22)
362 [-]: ADD       R1 R21 R18   ; R1 := R21 + R18
363 [-]: GETGLOBAL R21 K33      ; R21 := 0x20b7f774
364 [-]: MOVE      R22 R1       ; R22 := R1
365 [-]: MOVE      R23 R20      ; R23 := R20
366 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
367 [-]: MOVE      R2 R21       ; R2 := R21
368 [-]: GETGLOBAL R21 K11      ; R21 := 0x7b998233
369 [-]: MOVE      R22 R19      ; R22 := R19
370 [-]: CALL      R21 2 2      ; R21 := R21(R22)
371 [-]: TEST      R21 0        ; if not R21 then PC := 376
372 [-]: JMP       376          ; PC := 376
373 [-]: GETTABLE  R21 R2 K5    ; R21 := R2["pitch"]
374 [-]: SUB       R21 R21 K53  ; R21 := R21 - 18.000000
375 [-]: SETTABLE  R2 K5 R21    ; R2["pitch"] := R21
376 [-]: LOADK     R3 25        ; R3 := 25.000000
377 [-]: JMP       421          ; PC := 421
378 [-]: EQ        0 R0 K37     ; if R0 ~= 4.000000 then PC := 421
379 [-]: JMP       421          ; PC := 421
380 [-]: GETUPVAL  R21 U3       ; R21 := U3
381 [-]: GETTABLE  R21 R21 K39  ; R21 := R21[0xa9882367]
382 [-]: LOADK     R22 K47      ; R22 := "MoaSpawnControl"
383 [-]: CALL      R21 2 2      ; R21 := R21(R22)
384 [-]: GETGLOBAL R22 K11      ; R22 := 0x7b998233
385 [-]: MOVE      R23 R21      ; R23 := R21
386 [-]: CALL      R22 2 2      ; R22 := R22(R23)
387 [-]: TEST      R22 1        ; if R22 then PC := 421
388 [-]: JMP       421          ; PC := 421
389 [-]: GETGLOBAL R22 K29      ; R22 := 0xa421af95
390 [-]: LOADK     R23 3        ; R23 := 3.000000
391 [-]: LOADK     R24 2        ; R24 := 2.000000
392 [-]: LOADK     R25 3        ; R25 := 3.000000
393 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
394 [-]: SELF      R23 R21 K32  ; R24 := R21; R23 := R21[0xd1586535]
395 [-]: CALL      R23 2 2      ; R23 := R23(R24)
396 [-]: GETGLOBAL R24 K29      ; R24 := 0xa421af95
397 [-]: LOADK     R25 0        ; R25 := 0.500000
398 [-]: LOADK     R26 2        ; R26 := 2.500000
399 [-]: LOADK     R27 0        ; R27 := 0.000000
400 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
401 [-]: ADD       R23 R23 R24  ; R23 := R23 + R24
402 [-]: SELF      R24 R21 K32  ; R25 := R21; R24 := R21[0xd1586535]
403 [-]: CALL      R24 2 2      ; R24 := R24(R25)
404 [-]: ADD       R1 R24 R22   ; R1 := R24 + R22
405 [-]: GETGLOBAL R24 K33      ; R24 := 0x20b7f774
406 [-]: MOVE      R25 R1       ; R25 := R1
407 [-]: MOVE      R26 R23      ; R26 := R23
408 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
409 [-]: MOVE      R2 R24       ; R2 := R24
410 [-]: GETGLOBAL R24 K9       ; R24 := _T
411 [-]: GETTABLE  R24 R24 K10  ; R24 := R24["MenuSentinel"]
412 [-]: GETGLOBAL R25 K11      ; R25 := 0x7b998233
413 [-]: MOVE      R26 R24      ; R26 := R24
414 [-]: CALL      R25 2 2      ; R25 := R25(R26)
415 [-]: TEST      R25 0        ; if not R25 then PC := 420
416 [-]: JMP       420          ; PC := 420
417 [-]: GETTABLE  R25 R2 K5    ; R25 := R2["pitch"]
418 [-]: SUB       R25 R25 K53  ; R25 := R25 - 18.000000
419 [-]: SETTABLE  R2 K5 R25    ; R2["pitch"] := R25
420 [-]: LOADK     R3 25        ; R3 := 25.000000
421 [-]: GETGLOBAL R25 K9       ; R25 := _T
422 [-]: GETTABLE  R25 R25 K12  ; R25 := R25["InSimulacrum"]
423 [-]: TEST      R25 1        ; if R25 then PC := 430
424 [-]: JMP       430          ; PC := 430
425 [-]: GETUPVAL  R25 U2       ; R25 := U2
426 [-]: GETTABLE  R25 R25 K26  ; R25 := R25[0xcf1fcba4]
427 [-]: CALL      R25 1 2      ; R25 := R25()
428 [-]: TEST      R25 0        ; if not R25 then PC := 433
429 [-]: JMP       433          ; PC := 433
430 [-]: GETGLOBAL R25 K9       ; R25 := _T
431 [-]: SETTABLE  R25 K54 K34  ; R25["SENTINEL_DEFAULT_ROTATION"] := 0.000000
432 [-]: JMP       444          ; PC := 444
433 [-]: EQ        1 R0 K34     ; if R0 == 0.000000 then PC := 437
434 [-]: JMP       437          ; PC := 437
435 [-]: EQ        0 R0 K36     ; if R0 ~= 3.000000 then PC := 442
436 [-]: JMP       442          ; PC := 442
437 [-]: GETGLOBAL R25 K9       ; R25 := _T
438 [-]: GETUPVAL  R26 U4       ; R26 := U4
439 [-]: GETTABLE  R26 R26 K55  ; R26 := R26["DefaultSentinelRotationOffset"]
440 [-]: SETTABLE  R25 K54 R26  ; R25["SENTINEL_DEFAULT_ROTATION"] := R26
441 [-]: JMP       444          ; PC := 444
442 [-]: GETGLOBAL R25 K9       ; R25 := _T
443 [-]: SETTABLE  R25 K54 K34  ; R25["SENTINEL_DEFAULT_ROTATION"] := 0.000000
444 [-]: GETGLOBAL R25 K0       ; R25 := mCameraTable
445 [-]: SETTABLE  R25 K56 K25  ; R25["LerpScale"] := 2.000000
446 [-]: GETGLOBAL R25 K0       ; R25 := mCameraTable
447 [-]: SETTABLE  R25 K57 R1   ; R25["destPos"] := R1
448 [-]: GETGLOBAL R25 K0       ; R25 := mCameraTable
449 [-]: SETTABLE  R25 K58 R2   ; R25["destRot"] := R2
450 [-]: GETGLOBAL R25 K0       ; R25 := mCameraTable
451 [-]: GETGLOBAL R26 K2       ; R26 := 0x00046924
452 [-]: CALL      R26 1 2      ; R26 := R26()
453 [-]: SETTABLE  R25 K59 R26  ; R25["biasRot"] := R26
454 [-]: GETGLOBAL R25 K0       ; R25 := mCameraTable
455 [-]: SETTABLE  R25 K60 K24  ; R25["attenFov"] := 1.000000
456 [-]: GETGLOBAL R25 K0       ; R25 := mCameraTable
457 [-]: SETTABLE  R25 K61 R3   ; R25["destFov"] := R3
458 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1261
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 0         ; if not R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0xde321e6f]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SELF      R5 R4 K2     ; R6 := R4; R5 := R4[0x8205b296]
 19 [-]: LOADK     R7 0         ; R7 := 0.000000
 20 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 21 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 22 [-]: MOVE      R7 R5        ; R7 := R5
 23 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 24 [-]: TEST      R6 1         ; if R6 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: SELF      R6 R5 K4     ; R7 := R5; R6 := R5[0xf2deaf69]
 27 [-]: GETGLOBAL R8 K5        ; R8 := gLotusMeleeWeaponType
 28 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 29 [-]: TEST      R6 1         ; if R6 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: RETURN    R0 1         ; return 
 32 [-]: EQ        1 R2 K7      ; if R2 == 3.000000 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R6 K6        ; R6 := 0x6c97a788
 35 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["NUM_NORMAL_LOADOUT_SLOTS"]
 36 [-]: LE        1 R6 R2      ; if R6 <= R2 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 39
 39 [-]: LOADBOOL  R6 1 0       ; R6 := true
 40 [-]: SELF      R7 R5 K9     ; R8 := R5; R7 := R5[0xa779cba7]
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: EQ        1 R7 K10     ; if R7 == 18.000000 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: SELF      R7 R5 K9     ; R8 := R5; R7 := R5[0xa779cba7]
 45 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 46 [-]: EQ        0 R7 K11     ; if R7 ~= 13.000000 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: LOADBOOL  R6 0 0       ; R6 := false
 49 [-]: JMP       73           ; PC := 73
 50 [-]: GETGLOBAL R7 K12       ; R7 := mLists
 51 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["mCosmeticsList"]
 52 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mCurrLevel"]
 53 [-]: GETGLOBAL R8 K12       ; R8 := mLists
 54 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["mCosmeticsList"]
 55 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["HOLSTER_STYLE"]
 56 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 66
 57 [-]: JMP       66           ; PC := 66
 58 [-]: GETGLOBAL R7 K12       ; R7 := mLists
 59 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["mCosmeticsList"]
 60 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mCurrLevel"]
 61 [-]: GETGLOBAL R8 K12       ; R8 := mLists
 62 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["mCosmeticsList"]
 63 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["HOLSTER_CUSTOMIZATION"]
 64 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: LOADBOOL  R6 0 0       ; R6 := false
 67 [-]: JMP       73           ; PC := 73
 68 [-]: EQ        1 R1 K17     ; if R1 == 4.000000 then PC := 72
 69 [-]: JMP       72           ; PC := 72
 70 [-]: EQ        0 R1 K18     ; if R1 ~= 6.000000 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: LOADBOOL  R6 0 0       ; R6 := false
 73 [-]: SELF      R7 R5 K19    ; R8 := R5; R7 := R5[0x9f3c821d]
 74 [-]: MOVE      R9 R6        ; R9 := R6
 75 [-]: LOADBOOL  R10 1 0      ; R10 := true
 76 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 77 [-]: SELF      R7 R4 K20    ; R8 := R4; R7 := R4[0x4d29b3a5]
 78 [-]: LOADK     R9 0         ; R9 := 0.000000
 79 [-]: LOADK     R10 0        ; R10 := 0.000000
 80 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 81 [-]: RETURN    R6 2         ; return R6
 82 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1292
; #Upvalues:       17
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  153

  1 [-]: EQ        1 R3 K0      ; if R3 == true then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 4
  4 [-]: LOADBOOL  R3 1 0       ; R3 := true
  5 [-]: EQ        0 R0 K2      ; if R0 ~= 1.000000 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: JMP       8            ; PC := 8
  8 [-]: LOADNIL   R4 R4        ; R4 := nil
  9 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 10 [-]: GETGLOBAL R6 K4        ; R6 := mArsenalConsole
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: TEST      R5 1         ; if R5 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETGLOBAL R5 K4        ; R5 := mArsenalConsole
 15 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0xd1586535]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: MOVE      R4 R5        ; R4 := R5
 18 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 19 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 20 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["rootNodeEntity"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 0         ; if not R5 then PC := 82
 23 [-]: JMP       82           ; PC := 82
 24 [-]: GETGLOBAL R5 K6        ; R5 := mCameraTable
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["ARSENAL_CAMERA"]
 27 [-]: SETTABLE  R5 K8 R6     ; R5["cameraTag"] := R6
 28 [-]: GETGLOBAL R5 K6        ; R5 := mCameraTable
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: GETTABLE  R6 R6 K11    ; R6 := R6[0x2a1108a9]
 31 [-]: GETUPVAL  R7 U0        ; R7 := U0
 32 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["ARSENAL_CAMERA"]
 33 [-]: MOVE      R8 R4        ; R8 := R4
 34 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 35 [-]: SETTABLE  R5 K10 R6    ; R5["camera"] := R6
 36 [-]: GETGLOBAL R5 K6        ; R5 := mCameraTable
 37 [-]: GETGLOBAL R6 K12       ; R6 := _T
 38 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["MenuSuitAvatar"]
 39 [-]: SETTABLE  R5 K7 R6     ; R5["rootNodeEntity"] := R6
 40 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 41 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 42 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["camera"]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: TEST      R5 1         ; if R5 then PC := 65
 45 [-]: JMP       65           ; PC := 65
 46 [-]: GETGLOBAL R5 K6        ; R5 := mCameraTable
 47 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 48 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["camera"]
 49 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0xd1586535]
 50 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 51 [-]: SETTABLE  R5 K14 R6    ; R5["orgPosition"] := R6
 52 [-]: GETGLOBAL R5 K6        ; R5 := mCameraTable
 53 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 54 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["camera"]
 55 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0xcb3851b8]
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: SETTABLE  R5 K15 R6    ; R5["orgRotation"] := R6
 58 [-]: GETGLOBAL R5 K6        ; R5 := mCameraTable
 59 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 60 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["camera"]
 61 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0xaac2f3a5]
 62 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 63 [-]: SETTABLE  R5 K17 R6    ; R5["orgFOV"] := R6
 64 [-]: JMP       82           ; PC := 82
 65 [-]: GETGLOBAL R5 K12       ; R5 := _T
 66 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["MenuSuitAvatar"]
 67 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 68 [-]: MOVE      R7 R5        ; R7 := R5
 69 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 70 [-]: TEST      R6 1         ; if R6 then PC := 82
 71 [-]: JMP       82           ; PC := 82
 72 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 73 [-]: SELF      R7 R5 K5     ; R8 := R5; R7 := R5[0xd1586535]
 74 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 75 [-]: SETTABLE  R6 K14 R7    ; R6["orgPosition"] := R7
 76 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 77 [-]: SELF      R7 R5 K16    ; R8 := R5; R7 := R5[0xcb3851b8]
 78 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 79 [-]: SETTABLE  R6 K15 R7    ; R6["orgRotation"] := R7
 80 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 81 [-]: SETTABLE  R6 K17 K19   ; R6["orgFOV"] := 90.000000
 82 [-]: GETGLOBAL R6 K6        ; R6 := mCameraTable
 83 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["orgPosition"]
 84 [-]: GETGLOBAL R7 K20       ; R7 := 0x00046924
 85 [-]: GETGLOBAL R8 K6        ; R8 := mCameraTable
 86 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["orgRotation"]
 87 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["heading"]
 88 [-]: GETGLOBAL R9 K6        ; R9 := mCameraTable
 89 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["orgRotation"]
 90 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["pitch"]
 91 [-]: GETGLOBAL R10 K6       ; R10 := mCameraTable
 92 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["orgRotation"]
 93 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["bank"]
 94 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 95 [-]: GETGLOBAL R8 K6        ; R8 := mCameraTable
 96 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["orgFOV"]
 97 [-]: GETGLOBAL R9 K6        ; R9 := mCameraTable
 98 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["rootNodeEntity"]
 99 [-]: GETGLOBAL R10 K3       ; R10 := 0x7b998233
100 [-]: MOVE      R11 R9       ; R11 := R9
101 [-]: CALL      R10 2 2      ; R10 := R10(R11)
102 [-]: TEST      R10 0        ; if not R10 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: RETURN    R0 1         ; return 
105 [-]: SELF      R10 R9 K24   ; R11 := R9; R10 := R9[0xde321e6f]
106 [-]: CALL      R10 2 2      ; R10 := R10(R11)
107 [-]: SELF      R11 R10 K25  ; R12 := R10; R11 := R10[0x8205b296]
108 [-]: LOADK     R13 0        ; R13 := 0.000000
109 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
110 [-]: EQ        1 R0 K27     ; if R0 == 4.000000 then PC := 127
111 [-]: JMP       127          ; PC := 127
112 [-]: GETUPVAL  R12 U2       ; R12 := U2
113 [-]: EQ        1 R12 K28    ; if R12 == nil then PC := 127
114 [-]: JMP       127          ; PC := 127
115 [-]: SELF      R12 R10 K29  ; R13 := R10; R12 := R10[0xf596420f]
116 [-]: CALL      R12 2 1      ; R12(R13)
117 [-]: GETUPVAL  R12 U3       ; R12 := U3
118 [-]: GETUPVAL  R13 U4       ; R13 := U4
119 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["Current"]
120 [-]: EQ        1 R13 K31    ; if R13 == 2.000000 then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 123
123 [-]: LOADBOOL  R13 1 0      ; R13 := true
124 [-]: CALL      R12 2 1      ; R12(R13)
125 [-]: LOADNIL   R12 R12      ; R12 := nil
126 [-]: SETUPVAL  R12 U2       ; U82 := R2
127 [-]: LOADBOOL  R12 1 0      ; R12 := true
128 [-]: GETGLOBAL R13 K12      ; R13 := _T
129 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mSpecialSuitMode"]
130 [-]: EQ        1 R13 K28    ; if R13 == nil then PC := 195
131 [-]: JMP       195          ; PC := 195
132 [-]: GETGLOBAL R13 K12      ; R13 := _T
133 [-]: SETTABLE  R13 K32 K33  ; R13["mSpecialSuitMode"] := false
134 [-]: GETGLOBAL R13 K3       ; R13 := 0x7b998233
135 [-]: GETGLOBAL R14 K34      ; R14 := mSuitType
136 [-]: CALL      R13 2 2      ; R13 := R13(R14)
137 [-]: TEST      R13 1        ; if R13 then PC := 180
138 [-]: JMP       180          ; PC := 180
139 [-]: GETUPVAL  R13 U4       ; R13 := U4
140 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["Current"]
141 [-]: EQ        1 R13 K2     ; if R13 == 1.000000 then PC := 147
142 [-]: JMP       147          ; PC := 147
143 [-]: GETUPVAL  R13 U4       ; R13 := U4
144 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["Current"]
145 [-]: EQ        0 R13 K31    ; if R13 ~= 2.000000 then PC := 180
146 [-]: JMP       180          ; PC := 180
147 [-]: GETGLOBAL R13 K34      ; R13 := mSuitType
148 [-]: SELF      R13 R13 K35  ; R14 := R13; R13 := R13[0xf2deaf69]
149 [-]: GETGLOBAL R15 K36      ; R15 := 0x6dcacb87
150 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
151 [-]: TEST      R13 1        ; if R13 then PC := 159
152 [-]: JMP       159          ; PC := 159
153 [-]: GETGLOBAL R13 K34      ; R13 := mSuitType
154 [-]: SELF      R13 R13 K35  ; R14 := R13; R13 := R13[0xf2deaf69]
155 [-]: GETGLOBAL R15 K37      ; R15 := 0x2c86a0ee
156 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
157 [-]: TEST      R13 0        ; if not R13 then PC := 166
158 [-]: JMP       166          ; PC := 166
159 [-]: GETGLOBAL R13 K12      ; R13 := _T
160 [-]: EQ        1 R1 K38     ; if R1 == 5.000000 then PC := 163
161 [-]: JMP       163          ; PC := 163
162 [-]: LOADBOOL  R14 0 1      ; R14 := false; PC := 163
163 [-]: LOADBOOL  R14 1 0      ; R14 := true
164 [-]: SETTABLE  R13 K32 R14  ; R13["mSpecialSuitMode"] := R14
165 [-]: JMP       180          ; PC := 180
166 [-]: GETGLOBAL R13 K34      ; R13 := mSuitType
167 [-]: SELF      R13 R13 K35  ; R14 := R13; R13 := R13[0xf2deaf69]
168 [-]: GETGLOBAL R15 K39      ; R15 := 0xda46ae79
169 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
170 [-]: TEST      R13 0        ; if not R13 then PC := 180
171 [-]: JMP       180          ; PC := 180
172 [-]: GETGLOBAL R13 K12      ; R13 := _T
173 [-]: EQ        1 R1 K38     ; if R1 == 5.000000 then PC := 178
174 [-]: JMP       178          ; PC := 178
175 [-]: EQ        1 R1 K40     ; if R1 == 6.000000 then PC := 178
176 [-]: JMP       178          ; PC := 178
177 [-]: LOADBOOL  R14 0 1      ; R14 := false; PC := 178
178 [-]: LOADBOOL  R14 1 0      ; R14 := true
179 [-]: SETTABLE  R13 K32 R14  ; R13["mSpecialSuitMode"] := R14
180 [-]: GETGLOBAL R13 K12      ; R13 := _T
181 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mSpecialSuitMode"]
182 [-]: NOT       R12 R13      ; R12 := not R13
183 [-]: GETGLOBAL R13 K3       ; R13 := 0x7b998233
184 [-]: GETGLOBAL R14 K12      ; R14 := _T
185 [-]: GETTABLE  R14 R14 K41  ; R14 := R14["SpecialSuitAvatar"]
186 [-]: CALL      R13 2 2      ; R13 := R13(R14)
187 [-]: TEST      R13 1        ; if R13 then PC := 195
188 [-]: JMP       195          ; PC := 195
189 [-]: GETGLOBAL R13 K12      ; R13 := _T
190 [-]: GETTABLE  R13 R13 K41  ; R13 := R13["SpecialSuitAvatar"]
191 [-]: SELF      R13 R13 K42  ; R14 := R13; R13 := R13[0x2abc8ecd]
192 [-]: GETGLOBAL R15 K12      ; R15 := _T
193 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["mSpecialSuitMode"]
194 [-]: CALL      R13 3 1      ; R13(R14,R15)
195 [-]: GETGLOBAL R13 K12      ; R13 := _T
196 [-]: GETUPVAL  R14 U5       ; R14 := U5
197 [-]: GETTABLE  R14 R14 K44  ; R14 := R14["KDriveSlot"]
198 [-]: EQ        0 R1 R14     ; if R1 ~= R14 then PC := 202
199 [-]: JMP       202          ; PC := 202
200 [-]: EQ        1 R0 K40     ; if R0 == 6.000000 then PC := 203
201 [-]: JMP       203          ; PC := 203
202 [-]: LOADBOOL  R14 0 1      ; R14 := false; PC := 203
203 [-]: LOADBOOL  R14 1 0      ; R14 := true
204 [-]: SETTABLE  R13 K43 R14  ; R13["mKDriveSuitMode"] := R14
205 [-]: TEST      R12 0        ; if not R12 then PC := 210
206 [-]: JMP       210          ; PC := 210
207 [-]: GETGLOBAL R13 K12      ; R13 := _T
208 [-]: GETTABLE  R13 R13 K43  ; R13 := R13["mKDriveSuitMode"]
209 [-]: NOT       R12 R13      ; R12 := not R13
210 [-]: GETGLOBAL R13 K3       ; R13 := 0x7b998233
211 [-]: GETGLOBAL R14 K12      ; R14 := _T
212 [-]: GETTABLE  R14 R14 K45  ; R14 := R14["KDriveAvatar"]
213 [-]: CALL      R13 2 2      ; R13 := R13(R14)
214 [-]: TEST      R13 1        ; if R13 then PC := 223
215 [-]: JMP       223          ; PC := 223
216 [-]: GETGLOBAL R13 K12      ; R13 := _T
217 [-]: GETTABLE  R13 R13 K45  ; R13 := R13["KDriveAvatar"]
218 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0x768274d6]
219 [-]: GETGLOBAL R15 K12      ; R15 := _T
220 [-]: GETTABLE  R15 R15 K43  ; R15 := R15["mKDriveSuitMode"]
221 [-]: LOADBOOL  R16 1 0      ; R16 := true
222 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
223 [-]: GETGLOBAL R13 K12      ; R13 := _T
224 [-]: EQ        1 R0 K48     ; if R0 == 8.000000 then PC := 227
225 [-]: JMP       227          ; PC := 227
226 [-]: LOADBOOL  R14 0 1      ; R14 := false; PC := 227
227 [-]: LOADBOOL  R14 1 0      ; R14 := true
228 [-]: SETTABLE  R13 K47 R14  ; R13["mMechaSuitMode"] := R14
229 [-]: TEST      R12 0        ; if not R12 then PC := 234
230 [-]: JMP       234          ; PC := 234
231 [-]: GETGLOBAL R13 K12      ; R13 := _T
232 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["mMechaSuitMode"]
233 [-]: NOT       R12 R13      ; R12 := not R13
234 [-]: GETGLOBAL R13 K3       ; R13 := 0x7b998233
235 [-]: GETGLOBAL R14 K12      ; R14 := _T
236 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["MechAvatar"]
237 [-]: CALL      R13 2 2      ; R13 := R13(R14)
238 [-]: TEST      R13 1        ; if R13 then PC := 247
239 [-]: JMP       247          ; PC := 247
240 [-]: GETGLOBAL R13 K12      ; R13 := _T
241 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["MechAvatar"]
242 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0x768274d6]
243 [-]: GETGLOBAL R15 K12      ; R15 := _T
244 [-]: GETTABLE  R15 R15 K47  ; R15 := R15["mMechaSuitMode"]
245 [-]: LOADBOOL  R16 1 0      ; R16 := true
246 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
247 [-]: SELF      R13 R9 K42   ; R14 := R9; R13 := R9[0x2abc8ecd]
248 [-]: MOVE      R15 R12      ; R15 := R12
249 [-]: CALL      R13 3 1      ; R13(R14,R15)
250 [-]: GETGLOBAL R13 K12      ; R13 := _T
251 [-]: GETTABLE  R13 R13 K50  ; R13 := R13["MenuSentinel"]
252 [-]: GETGLOBAL R14 K3       ; R14 := 0x7b998233
253 [-]: MOVE      R15 R13      ; R15 := R13
254 [-]: CALL      R14 2 2      ; R14 := R14(R15)
255 [-]: TEST      R14 1        ; if R14 then PC := 264
256 [-]: JMP       264          ; PC := 264
257 [-]: EQ        1 R0 K2      ; if R0 == 1.000000 then PC := 260
258 [-]: JMP       260          ; PC := 260
259 [-]: LOADBOOL  R14 0 1      ; R14 := false; PC := 260
260 [-]: LOADBOOL  R14 1 0      ; R14 := true
261 [-]: SELF      R15 R13 K51  ; R16 := R13; R15 := R13[0x044b7be8]
262 [-]: MOVE      R17 R14      ; R17 := R14
263 [-]: CALL      R15 3 1      ; R15(R16,R17)
264 [-]: GETGLOBAL R15 K3       ; R15 := 0x7b998233
265 [-]: GETGLOBAL R16 K12      ; R16 := _T
266 [-]: GETTABLE  R16 R16 K52  ; R16 := R16["suitTable"]
267 [-]: CALL      R15 2 2      ; R15 := R15(R16)
268 [-]: TEST      R15 1        ; if R15 then PC := 276
269 [-]: JMP       276          ; PC := 276
270 [-]: GETGLOBAL R15 K12      ; R15 := _T
271 [-]: GETTABLE  R15 R15 K52  ; R15 := R15["suitTable"]
272 [-]: SETTABLE  R15 K53 K54  ; R15["lerpRotY"] := 0.000000
273 [-]: GETGLOBAL R15 K12      ; R15 := _T
274 [-]: GETTABLE  R15 R15 K52  ; R15 := R15["suitTable"]
275 [-]: SETTABLE  R15 K55 K54  ; R15["lerpRotZ"] := 0.000000
276 [-]: EQ        1 R1 K28     ; if R1 == nil then PC := 279
277 [-]: JMP       279          ; PC := 279
278 [-]: LOADBOOL  R15 0 1      ; R15 := false; PC := 279
279 [-]: LOADBOOL  R15 1 0      ; R15 := true
280 [-]: EQ        1 R1 K54     ; if R1 == 0.000000 then PC := 283
281 [-]: JMP       283          ; PC := 283
282 [-]: LOADBOOL  R16 0 1      ; R16 := false; PC := 283
283 [-]: LOADBOOL  R16 1 0      ; R16 := true
284 [-]: EQ        1 R1 K31     ; if R1 == 2.000000 then PC := 289
285 [-]: JMP       289          ; PC := 289
286 [-]: EQ        1 R1 K27     ; if R1 == 4.000000 then PC := 289
287 [-]: JMP       289          ; PC := 289
288 [-]: LOADBOOL  R17 0 1      ; R17 := false; PC := 289
289 [-]: LOADBOOL  R17 1 0      ; R17 := true
290 [-]: EQ        1 R1 K2      ; if R1 == 1.000000 then PC := 293
291 [-]: JMP       293          ; PC := 293
292 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 293
293 [-]: LOADBOOL  R18 1 0      ; R18 := true
294 [-]: EQ        1 R1 K56     ; if R1 == 3.000000 then PC := 297
295 [-]: JMP       297          ; PC := 297
296 [-]: LOADBOOL  R19 0 1      ; R19 := false; PC := 297
297 [-]: LOADBOOL  R19 1 0      ; R19 := true
298 [-]: EQ        1 R0 K57     ; if R0 == 7.000000 then PC := 301
299 [-]: JMP       301          ; PC := 301
300 [-]: LOADBOOL  R20 0 1      ; R20 := false; PC := 301
301 [-]: LOADBOOL  R20 1 0      ; R20 := true
302 [-]: LOADNIL   R21 R21      ; R21 := nil
303 [-]: GETUPVAL  R22 U6       ; R22 := U6
304 [-]: MOVE      R23 R1       ; R23 := R1
305 [-]: CALL      R22 2 2      ; R22 := R22(R23)
306 [-]: TEST      R22 0        ; if not R22 then PC := 681
307 [-]: JMP       681          ; PC := 681
308 [-]: GETGLOBAL R23 K12      ; R23 := _T
309 [-]: GETTABLE  R23 R23 K32  ; R23 := R23["mSpecialSuitMode"]
310 [-]: TEST      R23 0        ; if not R23 then PC := 401
311 [-]: JMP       401          ; PC := 401
312 [-]: SELF      R23 R10 K58  ; R24 := R10; R23 := R10[0xf7d48ee0]
313 [-]: CALL      R23 2 2      ; R23 := R23(R24)
314 [-]: LOADNIL   R24 R24      ; R24 := nil
315 [-]: GETGLOBAL R25 K3       ; R25 := 0x7b998233
316 [-]: MOVE      R26 R23      ; R26 := R23
317 [-]: CALL      R25 2 2      ; R25 := R25(R26)
318 [-]: TEST      R25 1        ; if R25 then PC := 324
319 [-]: JMP       324          ; PC := 324
320 [-]: SELF      R25 R23 K59  ; R26 := R23; R25 := R23[0x4a5d8c86]
321 [-]: MOVE      R27 R1       ; R27 := R1
322 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
323 [-]: GETTABLE  R24 R25 K60  ; R24 := R25["mItemType"]
324 [-]: GETGLOBAL R25 K3       ; R25 := 0x7b998233
325 [-]: GETGLOBAL R26 K12      ; R26 := _T
326 [-]: GETTABLE  R26 R26 K41  ; R26 := R26["SpecialSuitAvatar"]
327 [-]: CALL      R25 2 2      ; R25 := R25(R26)
328 [-]: TEST      R25 1        ; if R25 then PC := 643
329 [-]: JMP       643          ; PC := 643
330 [-]: GETGLOBAL R25 K12      ; R25 := _T
331 [-]: GETTABLE  R9 R25 K41   ; R9 := R25["SpecialSuitAvatar"]
332 [-]: SELF      R25 R9 K24   ; R26 := R9; R25 := R9[0xde321e6f]
333 [-]: CALL      R25 2 2      ; R25 := R25(R26)
334 [-]: MOVE      R10 R25      ; R10 := R25
335 [-]: GETGLOBAL R25 K3       ; R25 := 0x7b998233
336 [-]: MOVE      R26 R24      ; R26 := R24
337 [-]: CALL      R25 2 2      ; R25 := R25(R26)
338 [-]: TEST      R25 1        ; if R25 then PC := 345
339 [-]: JMP       345          ; PC := 345
340 [-]: SELF      R25 R24 K35  ; R26 := R24; R25 := R24[0xf2deaf69]
341 [-]: GETGLOBAL R27 K61      ; R27 := gPowerSuitType
342 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
343 [-]: TEST      R25 0        ; if not R25 then PC := 365
344 [-]: JMP       365          ; PC := 365
345 [-]: LOADK     R22 3        ; R22 := 3.000000
346 [-]: SELF      R25 R10 K62  ; R26 := R10; R25 := R10[0xe85a2361]
347 [-]: MOVE      R27 R22      ; R27 := R22
348 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
349 [-]: MOVE      R21 R25      ; R21 := R25
350 [-]: GETUPVAL  R25 U6       ; R25 := U6
351 [-]: MOVE      R26 R1       ; R26 := R1
352 [-]: CALL      R25 2 2      ; R25 := R25(R26)
353 [-]: SELF      R26 R10 K62  ; R27 := R10; R26 := R10[0xe85a2361]
354 [-]: MOVE      R28 R25      ; R28 := R25
355 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
356 [-]: GETGLOBAL R27 K3       ; R27 := 0x7b998233
357 [-]: MOVE      R28 R26      ; R28 := R26
358 [-]: CALL      R27 2 2      ; R27 := R27(R28)
359 [-]: TEST      R27 1        ; if R27 then PC := 643
360 [-]: JMP       643          ; PC := 643
361 [-]: SELF      R27 R10 K63  ; R28 := R10; R27 := R10[0x0eeedfea]
362 [-]: MOVE      R29 R25      ; R29 := R25
363 [-]: CALL      R27 3 1      ; R27(R28,R29)
364 [-]: JMP       643          ; PC := 643
365 [-]: SELF      R27 R10 K62  ; R28 := R10; R27 := R10[0xe85a2361]
366 [-]: MOVE      R29 R22      ; R29 := R22
367 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
368 [-]: MOVE      R21 R27      ; R21 := R27
369 [-]: LOADNIL   R27 R27      ; R27 := nil
370 [-]: GETGLOBAL R28 K3       ; R28 := 0x7b998233
371 [-]: MOVE      R29 R21      ; R29 := R21
372 [-]: CALL      R28 2 2      ; R28 := R28(R29)
373 [-]: TEST      R28 1        ; if R28 then PC := 378
374 [-]: JMP       378          ; PC := 378
375 [-]: SELF      R28 R21 K64  ; R29 := R21; R28 := R21[0xcde10c4a]
376 [-]: CALL      R28 2 2      ; R28 := R28(R29)
377 [-]: MOVE      R27 R28      ; R27 := R28
378 [-]: EQ        1 R24 R27    ; if R24 == R27 then PC := 643
379 [-]: JMP       643          ; PC := 643
380 [-]: GETGLOBAL R28 K3       ; R28 := 0x7b998233
381 [-]: MOVE      R29 R21      ; R29 := R21
382 [-]: CALL      R28 2 2      ; R28 := R28(R29)
383 [-]: TEST      R28 1        ; if R28 then PC := 388
384 [-]: JMP       388          ; PC := 388
385 [-]: SELF      R28 R10 K63  ; R29 := R10; R28 := R10[0x0eeedfea]
386 [-]: MOVE      R30 R22      ; R30 := R22
387 [-]: CALL      R28 3 1      ; R28(R29,R30)
388 [-]: GETGLOBAL R28 K3       ; R28 := 0x7b998233
389 [-]: MOVE      R29 R24      ; R29 := R24
390 [-]: CALL      R28 2 2      ; R28 := R28(R29)
391 [-]: TEST      R28 1        ; if R28 then PC := 396
392 [-]: JMP       396          ; PC := 396
393 [-]: SELF      R28 R10 K65  ; R29 := R10; R28 := R10[0x3c8da6e7]
394 [-]: MOVE      R30 R24      ; R30 := R24
395 [-]: CALL      R28 3 1      ; R28(R29,R30)
396 [-]: SELF      R28 R10 K62  ; R29 := R10; R28 := R10[0xe85a2361]
397 [-]: MOVE      R30 R22      ; R30 := R22
398 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
399 [-]: MOVE      R21 R28      ; R21 := R28
400 [-]: JMP       643          ; PC := 643
401 [-]: GETUPVAL  R28 U5       ; R28 := U5
402 [-]: GETTABLE  R28 R28 K44  ; R28 := R28["KDriveSlot"]
403 [-]: EQ        0 R1 R28     ; if R1 ~= R28 then PC := 421
404 [-]: JMP       421          ; PC := 421
405 [-]: EQ        0 R0 K40     ; if R0 ~= 6.000000 then PC := 421
406 [-]: JMP       421          ; PC := 421
407 [-]: GETGLOBAL R28 K3       ; R28 := 0x7b998233
408 [-]: GETGLOBAL R29 K12      ; R29 := _T
409 [-]: GETTABLE  R29 R29 K45  ; R29 := R29["KDriveAvatar"]
410 [-]: CALL      R28 2 2      ; R28 := R28(R29)
411 [-]: TEST      R28 1        ; if R28 then PC := 643
412 [-]: JMP       643          ; PC := 643
413 [-]: GETGLOBAL R28 K12      ; R28 := _T
414 [-]: GETTABLE  R28 R28 K45  ; R28 := R28["KDriveAvatar"]
415 [-]: SELF      R28 R28 K24  ; R29 := R28; R28 := R28[0xde321e6f]
416 [-]: CALL      R28 2 2      ; R28 := R28(R29)
417 [-]: SELF      R28 R28 K58  ; R29 := R28; R28 := R28[0xf7d48ee0]
418 [-]: CALL      R28 2 2      ; R28 := R28(R29)
419 [-]: MOVE      R21 R28      ; R21 := R28
420 [-]: JMP       643          ; PC := 643
421 [-]: EQ        0 R0 K48     ; if R0 ~= 8.000000 then PC := 500
422 [-]: JMP       500          ; PC := 500
423 [-]: GETGLOBAL R28 K12      ; R28 := _T
424 [-]: GETTABLE  R28 R28 K49  ; R28 := R28["MechAvatar"]
425 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
426 [-]: MOVE      R30 R28      ; R30 := R28
427 [-]: CALL      R29 2 2      ; R29 := R29(R30)
428 [-]: TEST      R29 1        ; if R29 then PC := 643
429 [-]: JMP       643          ; PC := 643
430 [-]: SELF      R29 R28 K24  ; R30 := R28; R29 := R28[0xde321e6f]
431 [-]: CALL      R29 2 2      ; R29 := R29(R30)
432 [-]: SELF      R30 R29 K62  ; R31 := R29; R30 := R29[0xe85a2361]
433 [-]: MOVE      R32 R22      ; R32 := R22
434 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
435 [-]: MOVE      R21 R30      ; R21 := R30
436 [-]: EQ        1 R1 K54     ; if R1 == 0.000000 then PC := 445
437 [-]: JMP       445          ; PC := 445
438 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 445
439 [-]: JMP       445          ; PC := 445
440 [-]: SELF      R30 R29 K66  ; R31 := R29; R30 := R29[0xc69087f6]
441 [-]: MOVE      R32 R22      ; R32 := R22
442 [-]: LOADK     R33 0        ; R33 := 0.000000
443 [-]: LOADK     R34 2        ; R34 := 2.000000
444 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
445 [-]: SELF      R30 R29 K58  ; R31 := R29; R30 := R29[0xf7d48ee0]
446 [-]: CALL      R30 2 2      ; R30 := R30(R31)
447 [-]: EQ        1 R1 K38     ; if R1 == 5.000000 then PC := 451
448 [-]: JMP       451          ; PC := 451
449 [-]: EQ        0 R1 K40     ; if R1 ~= 6.000000 then PC := 493
450 [-]: JMP       493          ; PC := 493
451 [-]: LOADNIL   R31 R31      ; R31 := nil
452 [-]: GETGLOBAL R32 K3       ; R32 := 0x7b998233
453 [-]: MOVE      R33 R30      ; R33 := R30
454 [-]: CALL      R32 2 2      ; R32 := R32(R33)
455 [-]: TEST      R32 1        ; if R32 then PC := 461
456 [-]: JMP       461          ; PC := 461
457 [-]: SELF      R32 R30 K59  ; R33 := R30; R32 := R30[0x4a5d8c86]
458 [-]: MOVE      R34 R1       ; R34 := R1
459 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
460 [-]: GETTABLE  R31 R32 K60  ; R31 := R32["mItemType"]
461 [-]: LOADNIL   R32 R32      ; R32 := nil
462 [-]: GETGLOBAL R33 K3       ; R33 := 0x7b998233
463 [-]: MOVE      R34 R21      ; R34 := R21
464 [-]: CALL      R33 2 2      ; R33 := R33(R34)
465 [-]: TEST      R33 1        ; if R33 then PC := 470
466 [-]: JMP       470          ; PC := 470
467 [-]: SELF      R33 R21 K64  ; R34 := R21; R33 := R21[0xcde10c4a]
468 [-]: CALL      R33 2 2      ; R33 := R33(R34)
469 [-]: MOVE      R32 R33      ; R32 := R33
470 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 643
471 [-]: JMP       643          ; PC := 643
472 [-]: GETGLOBAL R33 K3       ; R33 := 0x7b998233
473 [-]: MOVE      R34 R21      ; R34 := R21
474 [-]: CALL      R33 2 2      ; R33 := R33(R34)
475 [-]: TEST      R33 1        ; if R33 then PC := 480
476 [-]: JMP       480          ; PC := 480
477 [-]: SELF      R33 R29 K63  ; R34 := R29; R33 := R29[0x0eeedfea]
478 [-]: MOVE      R35 R22      ; R35 := R22
479 [-]: CALL      R33 3 1      ; R33(R34,R35)
480 [-]: GETGLOBAL R33 K3       ; R33 := 0x7b998233
481 [-]: MOVE      R34 R31      ; R34 := R31
482 [-]: CALL      R33 2 2      ; R33 := R33(R34)
483 [-]: TEST      R33 1        ; if R33 then PC := 488
484 [-]: JMP       488          ; PC := 488
485 [-]: SELF      R33 R29 K65  ; R34 := R29; R33 := R29[0x3c8da6e7]
486 [-]: MOVE      R35 R31      ; R35 := R31
487 [-]: CALL      R33 3 1      ; R33(R34,R35)
488 [-]: SELF      R33 R29 K62  ; R34 := R29; R33 := R29[0xe85a2361]
489 [-]: MOVE      R35 R22      ; R35 := R22
490 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
491 [-]: MOVE      R21 R33      ; R21 := R33
492 [-]: JMP       643          ; PC := 643
493 [-]: GETUPVAL  R33 U6       ; R33 := U6
494 [-]: LOADK     R34 5        ; R34 := 5.000000
495 [-]: CALL      R33 2 2      ; R33 := R33(R34)
496 [-]: SELF      R34 R29 K63  ; R35 := R29; R34 := R29[0x0eeedfea]
497 [-]: MOVE      R36 R33      ; R36 := R33
498 [-]: CALL      R34 3 1      ; R34(R35,R36)
499 [-]: JMP       643          ; PC := 643
500 [-]: EQ        0 R0 K57     ; if R0 ~= 7.000000 then PC := 503
501 [-]: JMP       503          ; PC := 503
502 [-]: LOADK     R22 11       ; R22 := 11.000000
503 [-]: SELF      R34 R10 K62  ; R35 := R10; R34 := R10[0xe85a2361]
504 [-]: MOVE      R36 R22      ; R36 := R22
505 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
506 [-]: MOVE      R21 R34      ; R21 := R34
507 [-]: GETGLOBAL R34 K3       ; R34 := 0x7b998233
508 [-]: MOVE      R35 R21      ; R35 := R21
509 [-]: CALL      R34 2 2      ; R34 := R34(R35)
510 [-]: TEST      R34 0        ; if not R34 then PC := 522
511 [-]: JMP       522          ; PC := 522
512 [-]: EQ        0 R1 K27     ; if R1 ~= 4.000000 then PC := 522
513 [-]: JMP       522          ; PC := 522
514 [-]: SELF      R34 R10 K65  ; R35 := R10; R34 := R10[0x3c8da6e7]
515 [-]: GETTABLE  R36 R2 K67   ; R36 := R2["Type"]
516 [-]: MOVE      R37 R1       ; R37 := R1
517 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
518 [-]: SELF      R34 R10 K62  ; R35 := R10; R34 := R10[0xe85a2361]
519 [-]: MOVE      R36 R22      ; R36 := R22
520 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
521 [-]: MOVE      R21 R34      ; R21 := R34
522 [-]: SELF      R34 R10 K58  ; R35 := R10; R34 := R10[0xf7d48ee0]
523 [-]: CALL      R34 2 2      ; R34 := R34(R35)
524 [-]: EQ        1 R1 K38     ; if R1 == 5.000000 then PC := 528
525 [-]: JMP       528          ; PC := 528
526 [-]: EQ        0 R1 K40     ; if R1 ~= 6.000000 then PC := 570
527 [-]: JMP       570          ; PC := 570
528 [-]: LOADNIL   R35 R35      ; R35 := nil
529 [-]: GETGLOBAL R36 K3       ; R36 := 0x7b998233
530 [-]: MOVE      R37 R34      ; R37 := R34
531 [-]: CALL      R36 2 2      ; R36 := R36(R37)
532 [-]: TEST      R36 1        ; if R36 then PC := 538
533 [-]: JMP       538          ; PC := 538
534 [-]: SELF      R36 R34 K59  ; R37 := R34; R36 := R34[0x4a5d8c86]
535 [-]: MOVE      R38 R1       ; R38 := R1
536 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
537 [-]: GETTABLE  R35 R36 K60  ; R35 := R36["mItemType"]
538 [-]: LOADNIL   R36 R36      ; R36 := nil
539 [-]: GETGLOBAL R37 K3       ; R37 := 0x7b998233
540 [-]: MOVE      R38 R21      ; R38 := R21
541 [-]: CALL      R37 2 2      ; R37 := R37(R38)
542 [-]: TEST      R37 1        ; if R37 then PC := 547
543 [-]: JMP       547          ; PC := 547
544 [-]: SELF      R37 R21 K64  ; R38 := R21; R37 := R21[0xcde10c4a]
545 [-]: CALL      R37 2 2      ; R37 := R37(R38)
546 [-]: MOVE      R36 R37      ; R36 := R37
547 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 643
548 [-]: JMP       643          ; PC := 643
549 [-]: GETGLOBAL R37 K3       ; R37 := 0x7b998233
550 [-]: MOVE      R38 R21      ; R38 := R21
551 [-]: CALL      R37 2 2      ; R37 := R37(R38)
552 [-]: TEST      R37 1        ; if R37 then PC := 557
553 [-]: JMP       557          ; PC := 557
554 [-]: SELF      R37 R10 K63  ; R38 := R10; R37 := R10[0x0eeedfea]
555 [-]: MOVE      R39 R22      ; R39 := R22
556 [-]: CALL      R37 3 1      ; R37(R38,R39)
557 [-]: GETGLOBAL R37 K3       ; R37 := 0x7b998233
558 [-]: MOVE      R38 R35      ; R38 := R35
559 [-]: CALL      R37 2 2      ; R37 := R37(R38)
560 [-]: TEST      R37 1        ; if R37 then PC := 565
561 [-]: JMP       565          ; PC := 565
562 [-]: SELF      R37 R10 K65  ; R38 := R10; R37 := R10[0x3c8da6e7]
563 [-]: MOVE      R39 R35      ; R39 := R35
564 [-]: CALL      R37 3 1      ; R37(R38,R39)
565 [-]: SELF      R37 R10 K62  ; R38 := R10; R37 := R10[0xe85a2361]
566 [-]: MOVE      R39 R22      ; R39 := R22
567 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
568 [-]: MOVE      R21 R37      ; R21 := R37
569 [-]: JMP       643          ; PC := 643
570 [-]: EQ        1 R0 K2      ; if R0 == 1.000000 then PC := 643
571 [-]: JMP       643          ; PC := 643
572 [-]: EQ        0 R1 K54     ; if R1 ~= 0.000000 then PC := 576
573 [-]: JMP       576          ; PC := 576
574 [-]: EQ        0 R0 K57     ; if R0 ~= 7.000000 then PC := 643
575 [-]: JMP       643          ; PC := 643
576 [-]: LOADK     R37 5        ; R37 := 5.000000
577 [-]: LOADK     R38 6        ; R38 := 6.000000
578 [-]: LOADK     R39 1        ; R39 := 1.000000
579 [-]: FORPREP   R37 609      ; R37 -= R39; PC := 609
580 [-]: GETUPVAL  R41 U6       ; R41 := U6
581 [-]: MOVE      R42 R40      ; R42 := R40
582 [-]: CALL      R41 2 2      ; R41 := R41(R42)
583 [-]: SELF      R42 R10 K62  ; R43 := R10; R42 := R10[0xe85a2361]
584 [-]: MOVE      R44 R41      ; R44 := R41
585 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
586 [-]: GETGLOBAL R43 K3       ; R43 := 0x7b998233
587 [-]: MOVE      R44 R42      ; R44 := R42
588 [-]: CALL      R43 2 2      ; R43 := R43(R44)
589 [-]: TEST      R43 1        ; if R43 then PC := 609
590 [-]: JMP       609          ; PC := 609
591 [-]: SELF      R43 R42 K35  ; R44 := R42; R43 := R42[0xf2deaf69]
592 [-]: GETGLOBAL R45 K68      ; R45 := gLotusCustomAimWeaponType
593 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
594 [-]: TEST      R43 1        ; if R43 then PC := 609
595 [-]: JMP       609          ; PC := 609
596 [-]: GETGLOBAL R43 K3       ; R43 := 0x7b998233
597 [-]: MOVE      R44 R34      ; R44 := R34
598 [-]: CALL      R43 2 2      ; R43 := R43(R44)
599 [-]: TEST      R43 1        ; if R43 then PC := 606
600 [-]: JMP       606          ; PC := 606
601 [-]: SELF      R43 R34 K35  ; R44 := R34; R43 := R34[0xf2deaf69]
602 [-]: GETGLOBAL R45 K69      ; R45 := 0xf773e9d4
603 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
604 [-]: TEST      R43 1        ; if R43 then PC := 609
605 [-]: JMP       609          ; PC := 609
606 [-]: SELF      R43 R10 K63  ; R44 := R10; R43 := R10[0x0eeedfea]
607 [-]: MOVE      R45 R41      ; R45 := R41
608 [-]: CALL      R43 3 1      ; R43(R44,R45)
609 [-]: FORLOOP   R37 580      ; R37 += R39; if R37 <= R38 then begin PC := 580; R40 := R37 end
610 [-]: GETGLOBAL R43 K12      ; R43 := _T
611 [-]: GETTABLE  R43 R43 K70  ; R43 := R43["ArsenalState"]
612 [-]: EQ        0 R43 K56    ; if R43 ~= 3.000000 then PC := 643
613 [-]: JMP       643          ; PC := 643
614 [-]: EQ        0 R1 K27     ; if R1 ~= 4.000000 then PC := 629
615 [-]: JMP       629          ; PC := 629
616 [-]: GETGLOBAL R43 K3       ; R43 := 0x7b998233
617 [-]: MOVE      R44 R2       ; R44 := R2
618 [-]: CALL      R43 2 2      ; R43 := R43(R44)
619 [-]: TEST      R43 1        ; if R43 then PC := 629
620 [-]: JMP       629          ; PC := 629
621 [-]: SELF      R43 R10 K71  ; R44 := R10; R43 := R10[0xab98dbf5]
622 [-]: GETTABLE  R45 R2 K72   ; R45 := R2["UID"]
623 [-]: MOVE      R46 R0       ; R46 := R0
624 [-]: MOVE      R47 R1       ; R47 := R1
625 [-]: CALL      R43 5 2      ; R43 := R43(R44,R45,R46,R47)
626 [-]: EQ        1 R43 R21    ; if R43 == R21 then PC := 643
627 [-]: JMP       643          ; PC := 643
628 [-]: JMP       643          ; PC := 643
629 [-]: EQ        0 R1 K31     ; if R1 ~= 2.000000 then PC := 643
630 [-]: JMP       643          ; PC := 643
631 [-]: GETGLOBAL R44 K3       ; R44 := 0x7b998233
632 [-]: MOVE      R45 R2       ; R45 := R2
633 [-]: CALL      R44 2 2      ; R44 := R44(R45)
634 [-]: TEST      R44 1        ; if R44 then PC := 643
635 [-]: JMP       643          ; PC := 643
636 [-]: SELF      R44 R10 K71  ; R45 := R10; R44 := R10[0xab98dbf5]
637 [-]: GETTABLE  R46 R2 K72   ; R46 := R2["UID"]
638 [-]: MOVE      R47 R0       ; R47 := R0
639 [-]: MOVE      R48 R1       ; R48 := R1
640 [-]: CALL      R44 5 2      ; R44 := R44(R45,R46,R47,R48)
641 [-]: EQ        1 R44 R21    ; if R44 == R21 then PC := 643
642 [-]: JMP       643          ; PC := 643
643 [-]: GETGLOBAL R45 K3       ; R45 := 0x7b998233
644 [-]: MOVE      R46 R21      ; R46 := R21
645 [-]: CALL      R45 2 2      ; R45 := R45(R46)
646 [-]: TEST      R45 1        ; if R45 then PC := 681
647 [-]: JMP       681          ; PC := 681
648 [-]: TEST      R16 1        ; if R16 then PC := 654
649 [-]: JMP       654          ; PC := 654
650 [-]: SELF      R45 R21 K35  ; R46 := R21; R45 := R21[0xf2deaf69]
651 [-]: GETGLOBAL R47 K61      ; R47 := gPowerSuitType
652 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
653 [-]: MOVE      R16 R45      ; R16 := R45
654 [-]: TEST      R17 1        ; if R17 then PC := 669
655 [-]: JMP       669          ; PC := 669
656 [-]: SELF      R45 R21 K35  ; R46 := R21; R45 := R21[0xf2deaf69]
657 [-]: GETGLOBAL R47 K73      ; R47 := 0x7ed0a956
658 [-]: LOADK     R48 K74      ; R48 := "/Lotus/Weapons/Tenno/LotusLongGun"
659 [-]: CALL      R47 2 0      ; R47,... := R47(R48)
660 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
661 [-]: TESTSET   R17 R45 1    ; if R45 then PC := 669 else R17 := R45
662 [-]: JMP       669          ; PC := 669
663 [-]: SELF      R45 R21 K35  ; R46 := R21; R45 := R21[0xf2deaf69]
664 [-]: GETGLOBAL R47 K73      ; R47 := 0x7ed0a956
665 [-]: LOADK     R48 K75      ; R48 := "/Lotus/Weapons/Tenno/Archwing/Primary/ArchGun"
666 [-]: CALL      R47 2 0      ; R47,... := R47(R48)
667 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
668 [-]: MOVE      R17 R45      ; R17 := R45
669 [-]: TEST      R18 1        ; if R18 then PC := 675
670 [-]: JMP       675          ; PC := 675
671 [-]: SELF      R45 R21 K35  ; R46 := R21; R45 := R21[0xf2deaf69]
672 [-]: GETGLOBAL R47 K76      ; R47 := gLotusPistolType
673 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
674 [-]: MOVE      R18 R45      ; R18 := R45
675 [-]: TEST      R19 1        ; if R19 then PC := 681
676 [-]: JMP       681          ; PC := 681
677 [-]: SELF      R45 R21 K35  ; R46 := R21; R45 := R21[0xf2deaf69]
678 [-]: GETGLOBAL R47 K77      ; R47 := gLotusMeleeWeaponType
679 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
680 [-]: MOVE      R19 R45      ; R19 := R45
681 [-]: EQ        1 R0 K54     ; if R0 == 0.000000 then PC := 685
682 [-]: JMP       685          ; PC := 685
683 [-]: EQ        0 R0 K56     ; if R0 ~= 3.000000 then PC := 1304
684 [-]: JMP       1304         ; PC := 1304
685 [-]: GETGLOBAL R45 K78      ; R45 := 0x5bced4c4
686 [-]: GETTABLE  R45 R45 K79  ; R45 := R45[0x3eda26fc]
687 [-]: GETGLOBAL R46 K78      ; R46 := 0x5bced4c4
688 [-]: GETTABLE  R46 R46 K80  ; R46 := R46[0xdde5c6a1]
689 [-]: GETGLOBAL R47 K12      ; R47 := _T
690 [-]: GETTABLE  R47 R47 K81  ; R47 := R47["DEFAULT_SUIT_ROTATION"]
691 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
692 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
693 [-]: GETGLOBAL R46 K78      ; R46 := 0x5bced4c4
694 [-]: GETTABLE  R46 R46 K82  ; R46 := R46[0x00fa6bf1]
695 [-]: GETGLOBAL R47 K78      ; R47 := 0x5bced4c4
696 [-]: GETTABLE  R47 R47 K80  ; R47 := R47[0xdde5c6a1]
697 [-]: GETGLOBAL R48 K12      ; R48 := _T
698 [-]: GETTABLE  R48 R48 K81  ; R48 := R48["DEFAULT_SUIT_ROTATION"]
699 [-]: CALL      R47 2 0      ; R47,... := R47(R48)
700 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
701 [-]: TEST      R15 0        ; if not R15 then PC := 767
702 [-]: JMP       767          ; PC := 767
703 [-]: GETUPVAL  R47 U7       ; R47 := U7
704 [-]: GETUPVAL  R48 U8       ; R48 := U8
705 [-]: GETTABLE  R48 R48 K83  ; R48 := R48["BROWSING_WAY_TREE"]
706 [-]: EQ        0 R47 R48    ; if R47 ~= R48 then PC := 767
707 [-]: JMP       767          ; PC := 767
708 [-]: GETGLOBAL R47 K84      ; R47 := 0xa421af95
709 [-]: LOADK     R48 0        ; R48 := 0.000000
710 [-]: LOADK     R49 K85      ; R49 := 1.700000
711 [-]: LOADK     R50 0        ; R50 := 0.000000
712 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
713 [-]: MOVE      R48 R47      ; R48 := R47
714 [-]: GETGLOBAL R49 K86      ; R49 := 0x89326c93
715 [-]: SELF      R49 R49 K87  ; R50 := R49; R49 := R49[0xfb64e76c]
716 [-]: CALL      R49 2 2      ; R49 := R49(R50)
717 [-]: SELF      R50 R49 K88  ; R51 := R49; R50 := R49[0x5578d98b]
718 [-]: CALL      R50 2 2      ; R50 := R50(R51)
719 [-]: GETUPVAL  R51 U9       ; R51 := U9
720 [-]: GETUPVAL  R52 U10      ; R52 := U10
721 [-]: GETTABLE  R52 R52 K89  ; R52 := R52["UI_MODE_IN_SPACE_SHIP"]
722 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 744
723 [-]: JMP       744          ; PC := 744
724 [-]: GETGLOBAL R51 K3       ; R51 := 0x7b998233
725 [-]: MOVE      R52 R50      ; R52 := R50
726 [-]: CALL      R51 2 2      ; R51 := R51(R52)
727 [-]: TEST      R51 1        ; if R51 then PC := 744
728 [-]: JMP       744          ; PC := 744
729 [-]: SELF      R51 R50 K90  ; R52 := R50; R51 := R50[0x003c792f]
730 [-]: GETGLOBAL R53 K91      ; R53 := 0x0469f296
731 [-]: LOADK     R54 K92      ; R54 := "GAME_C1_HEAD1"
732 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
733 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
734 [-]: MOVE      R47 R51      ; R47 := R51
735 [-]: GETTABLE  R51 R47 K93  ; R51 := R47["y"]
736 [-]: SUB       R51 R51 K94  ; R51 := R51 - 0.020000
737 [-]: SETTABLE  R47 K93 R51  ; R47["y"] := R51
738 [-]: GETGLOBAL R51 K95      ; R51 := 0xf6c6e505
739 [-]: SELF      R52 R50 K96  ; R53 := R50; R52 := R50[0x5280b883]
740 [-]: CALL      R52 2 0      ; R52,... := R52(R53)
741 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
742 [-]: MUL       R48 R51 K97  ; R48 := R51 * 0.740000
743 [-]: JMP       758          ; PC := 758
744 [-]: SELF      R51 R9 K90   ; R52 := R9; R51 := R9[0x003c792f]
745 [-]: GETGLOBAL R53 K91      ; R53 := 0x0469f296
746 [-]: LOADK     R54 K92      ; R54 := "GAME_C1_HEAD1"
747 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
748 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
749 [-]: MOVE      R47 R51      ; R47 := R51
750 [-]: GETTABLE  R51 R47 K93  ; R51 := R47["y"]
751 [-]: SUB       R51 R51 K98  ; R51 := R51 - 0.050000
752 [-]: SETTABLE  R47 K93 R51  ; R47["y"] := R51
753 [-]: GETGLOBAL R51 K95      ; R51 := 0xf6c6e505
754 [-]: SELF      R52 R9 K96   ; R53 := R9; R52 := R9[0x5280b883]
755 [-]: CALL      R52 2 0      ; R52,... := R52(R53)
756 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
757 [-]: MOVE      R48 R51      ; R48 := R51
758 [-]: SETTABLE  R48 K93 K54  ; R48["y"] := 0.000000
759 [-]: ADD       R6 R47 R48   ; R6 := R47 + R48
760 [-]: GETGLOBAL R51 K99      ; R51 := 0x20b7f774
761 [-]: MOVE      R52 R6       ; R52 := R6
762 [-]: MOVE      R53 R47      ; R53 := R47
763 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
764 [-]: MOVE      R7 R51       ; R7 := R51
765 [-]: LOADK     R8 35        ; R8 := 35.000000
766 [-]: JMP       2162         ; PC := 2162
767 [-]: TEST      R16 1        ; if R16 then PC := 771
768 [-]: JMP       771          ; PC := 771
769 [-]: TEST      R15 0        ; if not R15 then PC := 887
770 [-]: JMP       887          ; PC := 887
771 [-]: GETUPVAL  R51 U11      ; R51 := U11
772 [-]: GETUPVAL  R52 U12      ; R52 := U12
773 [-]: GETTABLE  R52 R52 K100 ; R52 := R52["FALSE"]
774 [-]: EQ        1 R51 R52    ; if R51 == R52 then PC := 801
775 [-]: JMP       801          ; PC := 801
776 [-]: GETGLOBAL R51 K84      ; R51 := 0xa421af95
777 [-]: MUL       R52 K101 R45 ; R52 := 1.500000 * R45
778 [-]: LOADK     R53 K102     ; R53 := 1.400000
779 [-]: MUL       R54 K101 R46 ; R54 := 1.500000 * R46
780 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
781 [-]: GETGLOBAL R52 K6       ; R52 := mCameraTable
782 [-]: GETTABLE  R52 R52 K7   ; R52 := R52["rootNodeEntity"]
783 [-]: SELF      R52 R52 K5   ; R53 := R52; R52 := R52[0xd1586535]
784 [-]: CALL      R52 2 2      ; R52 := R52(R53)
785 [-]: ADD       R6 R52 R51   ; R6 := R52 + R51
786 [-]: GETGLOBAL R52 K84      ; R52 := 0xa421af95
787 [-]: LOADK     R53 0        ; R53 := 0.000000
788 [-]: LOADK     R54 K103     ; R54 := 1.300000
789 [-]: LOADK     R55 0        ; R55 := 0.000000
790 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
791 [-]: GETGLOBAL R53 K99      ; R53 := 0x20b7f774
792 [-]: MOVE      R54 R6       ; R54 := R6
793 [-]: GETGLOBAL R55 K6       ; R55 := mCameraTable
794 [-]: GETTABLE  R55 R55 K7   ; R55 := R55["rootNodeEntity"]
795 [-]: SELF      R55 R55 K5   ; R56 := R55; R55 := R55[0xd1586535]
796 [-]: CALL      R55 2 2      ; R55 := R55(R56)
797 [-]: ADD       R55 R55 R52  ; R55 := R55 + R52
798 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
799 [-]: MOVE      R7 R53       ; R7 := R53
800 [-]: JMP       882          ; PC := 882
801 [-]: LOADK     R53 0        ; R53 := 0.000000
802 [-]: GETGLOBAL R54 K3       ; R54 := 0x7b998233
803 [-]: MOVE      R55 R21      ; R55 := R21
804 [-]: CALL      R54 2 2      ; R54 := R54(R55)
805 [-]: TEST      R54 1        ; if R54 then PC := 858
806 [-]: JMP       858          ; PC := 858
807 [-]: SELF      R54 R21 K104 ; R55 := R21; R54 := R21[0x0ad758cb]
808 [-]: CALL      R54 2 2      ; R54 := R54(R55)
809 [-]: LOADK     R55 0        ; R55 := 0.000000
810 [-]: SUB       R56 R54 K2   ; R56 := R54 - 1.000000
811 [-]: LOADK     R57 1        ; R57 := 1.000000
812 [-]: FORPREP   R55 857      ; R55 -= R57; PC := 857
813 [-]: SELF      R59 R21 K105 ; R60 := R21; R59 := R21[0xfef27732]
814 [-]: MOVE      R61 R58      ; R61 := R58
815 [-]: CALL      R59 3 2      ; R59 := R59(R60,R61)
816 [-]: GETGLOBAL R60 K3       ; R60 := 0x7b998233
817 [-]: MOVE      R61 R59      ; R61 := R59
818 [-]: CALL      R60 2 2      ; R60 := R60(R61)
819 [-]: TEST      R60 1        ; if R60 then PC := 857
820 [-]: JMP       857          ; PC := 857
821 [-]: SELF      R60 R59 K35  ; R61 := R59; R60 := R59[0xf2deaf69]
822 [-]: GETGLOBAL R62 K106     ; R62 := 0x9166d883
823 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
824 [-]: TEST      R60 0        ; if not R60 then PC := 857
825 [-]: JMP       857          ; PC := 857
826 [-]: SELF      R60 R59 K107 ; R61 := R59; R60 := R59[0xf4f49d1b]
827 [-]: CALL      R60 2 2      ; R60 := R60(R61)
828 [-]: EQ        0 R60 K38    ; if R60 ~= 5.000000 then PC := 857
829 [-]: JMP       857          ; PC := 857
830 [-]: NEWTABLE  R60 3 0      ; R60 := {}
831 [-]: GETGLOBAL R61 K73      ; R61 := 0x7ed0a956
832 [-]: LOADK     R62 K108     ; R62 := "/Lotus/Upgrades/Skins/Fairy/FairyNobleAnims"
833 [-]: CALL      R61 2 2      ; R61 := R61(R62)
834 [-]: GETGLOBAL R62 K73      ; R62 := 0x7ed0a956
835 [-]: LOADK     R63 K109     ; R63 := "/Lotus/Upgrades/Skins/Fairy/FairyAgileAnims"
836 [-]: CALL      R62 2 2      ; R62 := R62(R63)
837 [-]: GETGLOBAL R63 K73      ; R63 := 0x7ed0a956
838 [-]: LOADK     R64 K110     ; R64 := "/Lotus/Upgrades/Skins/Sentient/SentientAgileAnims"
839 [-]: CALL      R63 2 2      ; R63 := R63(R64)
840 [-]: GETGLOBAL R64 K73      ; R64 := 0x7ed0a956
841 [-]: LOADK     R65 K111     ; R65 := "/Lotus/Upgrades/Skins/Sentient/SentientNobleAnims"
842 [-]: CALL      R64 2 0      ; R64,... := R64(R65)
843 [-]: SETLIST   R60 0 1      ; R60[(1-1)*FPF+i] := R(60+i), 1 <= i <= 0
844 [-]: LOADK     R61 1        ; R61 := 1.000000
845 [-]: LEN       R62 R60      ; R62 := # R60
846 [-]: LOADK     R63 1        ; R63 := 1.000000
847 [-]: FORPREP   R61 855      ; R61 -= R63; PC := 855
848 [-]: SELF      R65 R59 K35  ; R66 := R59; R65 := R59[0xf2deaf69]
849 [-]: GETTABLE  R67 R60 R64  ; R67 := R60[R64]
850 [-]: CALL      R65 3 2      ; R65 := R65(R66,R67)
851 [-]: TEST      R65 0        ; if not R65 then PC := 855
852 [-]: JMP       855          ; PC := 855
853 [-]: LOADK     R53 K112     ; R53 := 0.300000
854 [-]: JMP       858          ; PC := 858
855 [-]: FORLOOP   R61 848      ; R61 += R63; if R61 <= R62 then begin PC := 848; R64 := R61 end
856 [-]: JMP       858          ; PC := 858
857 [-]: FORLOOP   R55 813      ; R55 += R57; if R55 <= R56 then begin PC := 813; R58 := R55 end
858 [-]: GETGLOBAL R65 K84      ; R65 := 0xa421af95
859 [-]: MUL       R66 K113 R45 ; R66 := 3.500000 * R45
860 [-]: ADD       R67 K114 R53 ; R67 := 1.100000 + R53
861 [-]: MUL       R68 K113 R46 ; R68 := 3.500000 * R46
862 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
863 [-]: GETGLOBAL R66 K6       ; R66 := mCameraTable
864 [-]: GETTABLE  R66 R66 K7   ; R66 := R66["rootNodeEntity"]
865 [-]: SELF      R66 R66 K5   ; R67 := R66; R66 := R66[0xd1586535]
866 [-]: CALL      R66 2 2      ; R66 := R66(R67)
867 [-]: ADD       R6 R66 R65   ; R6 := R66 + R65
868 [-]: GETGLOBAL R66 K84      ; R66 := 0xa421af95
869 [-]: LOADK     R67 0        ; R67 := 0.000000
870 [-]: ADD       R68 K115 R53 ; R68 := 0.900000 + R53
871 [-]: LOADK     R69 0        ; R69 := 0.000000
872 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
873 [-]: GETGLOBAL R67 K99      ; R67 := 0x20b7f774
874 [-]: MOVE      R68 R6       ; R68 := R6
875 [-]: GETGLOBAL R69 K6       ; R69 := mCameraTable
876 [-]: GETTABLE  R69 R69 K7   ; R69 := R69["rootNodeEntity"]
877 [-]: SELF      R69 R69 K5   ; R70 := R69; R69 := R69[0xd1586535]
878 [-]: CALL      R69 2 2      ; R69 := R69(R70)
879 [-]: ADD       R69 R69 R66  ; R69 := R69 + R66
880 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
881 [-]: MOVE      R7 R67       ; R7 := R67
882 [-]: GETTABLE  R67 R7 K21   ; R67 := R7["heading"]
883 [-]: SUB       R67 R67 K57  ; R67 := R67 - 7.000000
884 [-]: SETTABLE  R7 K21 R67   ; R7["heading"] := R67
885 [-]: LOADK     R8 35        ; R8 := 35.000000
886 [-]: JMP       2162         ; PC := 2162
887 [-]: GETGLOBAL R67 K116     ; R67 := mLists
888 [-]: GETTABLE  R67 R67 K117 ; R67 := R67["mCosmeticsList"]
889 [-]: GETTABLE  R67 R67 K118 ; R67 := R67["mCurrLevel"]
890 [-]: GETGLOBAL R68 K116     ; R68 := mLists
891 [-]: GETTABLE  R68 R68 K117 ; R68 := R68["mCosmeticsList"]
892 [-]: GETTABLE  R68 R68 K119 ; R68 := R68["HOLSTER_STYLE"]
893 [-]: EQ        1 R67 R68    ; if R67 == R68 then PC := 903
894 [-]: JMP       903          ; PC := 903
895 [-]: GETGLOBAL R67 K116     ; R67 := mLists
896 [-]: GETTABLE  R67 R67 K117 ; R67 := R67["mCosmeticsList"]
897 [-]: GETTABLE  R67 R67 K118 ; R67 := R67["mCurrLevel"]
898 [-]: GETGLOBAL R68 K116     ; R68 := mLists
899 [-]: GETTABLE  R68 R68 K117 ; R68 := R68["mCosmeticsList"]
900 [-]: GETTABLE  R68 R68 K120 ; R68 := R68["HOLSTER_CUSTOMIZATION"]
901 [-]: EQ        0 R67 R68    ; if R67 ~= R68 then PC := 926
902 [-]: JMP       926          ; PC := 926
903 [-]: SELF      R67 R9 K90   ; R68 := R9; R67 := R9[0x003c792f]
904 [-]: GETGLOBAL R69 K91      ; R69 := 0x0469f296
905 [-]: LOADK     R70 K121     ; R70 := "GAME_C1_RIFLEATTACH"
906 [-]: CALL      R69 2 0      ; R69,... := R69(R70)
907 [-]: CALL      R67 0 2      ; R67 := R67(R68,...)
908 [-]: GETGLOBAL R68 K84      ; R68 := 0xa421af95
909 [-]: MUL       R69 K31 R45  ; R69 := 2.000000 * R45
910 [-]: LOADK     R70 0        ; R70 := 0.000000
911 [-]: MUL       R71 K31 R46  ; R71 := 2.000000 * R46
912 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
913 [-]: ADD       R6 R67 R68   ; R6 := R67 + R68
914 [-]: GETGLOBAL R69 K84      ; R69 := 0xa421af95
915 [-]: CALL      R69 1 2      ; R69 := R69()
916 [-]: GETGLOBAL R70 K99      ; R70 := 0x20b7f774
917 [-]: MOVE      R71 R6       ; R71 := R6
918 [-]: ADD       R72 R67 R69  ; R72 := R67 + R69
919 [-]: CALL      R70 3 2      ; R70 := R70(R71,R72)
920 [-]: MOVE      R7 R70       ; R7 := R70
921 [-]: GETTABLE  R70 R7 K21   ; R70 := R7["heading"]
922 [-]: SUB       R70 R70 K38  ; R70 := R70 - 5.000000
923 [-]: SETTABLE  R7 K21 R70   ; R7["heading"] := R70
924 [-]: LOADK     R8 40        ; R8 := 40.000000
925 [-]: JMP       2162         ; PC := 2162
926 [-]: TEST      R17 0        ; if not R17 then PC := 986
927 [-]: JMP       986          ; PC := 986
928 [-]: LOADBOOL  R70 1 0      ; R70 := true
929 [-]: EQ        1 R21 K28    ; if R21 == nil then PC := 938
930 [-]: JMP       938          ; PC := 938
931 [-]: SELF      R71 R21 K122 ; R72 := R21; R71 := R21[0x988945eb]
932 [-]: CALL      R71 2 2      ; R71 := R71(R72)
933 [-]: TESTSET   R70 R71 1    ; if R71 then PC := 938 else R70 := R71
934 [-]: JMP       938          ; PC := 938
935 [-]: SELF      R71 R21 K123 ; R72 := R21; R71 := R21[0xeead91ce]
936 [-]: CALL      R71 2 2      ; R71 := R71(R72)
937 [-]: NOT       R70 R71      ; R70 := not R71
938 [-]: SELF      R71 R9 K90   ; R72 := R9; R71 := R9[0x003c792f]
939 [-]: GETGLOBAL R73 K91      ; R73 := 0x0469f296
940 [-]: LOADK     R74 K124     ; R74 := "GAME_R1_WEAPON1"
941 [-]: CALL      R73 2 0      ; R73,... := R73(R74)
942 [-]: CALL      R71 0 2      ; R71 := R71(R72,...)
943 [-]: TEST      R70 0        ; if not R70 then PC := 952
944 [-]: JMP       952          ; PC := 952
945 [-]: SELF      R72 R9 K90   ; R73 := R9; R72 := R9[0x003c792f]
946 [-]: GETGLOBAL R74 K91      ; R74 := 0x0469f296
947 [-]: LOADK     R75 K125     ; R75 := "GAME_L1_WEAPON1"
948 [-]: CALL      R74 2 0      ; R74,... := R74(R75)
949 [-]: CALL      R72 0 2      ; R72 := R72(R73,...)
950 [-]: ADD       R72 R71 R72  ; R72 := R71 + R72
951 [-]: DIV       R71 R72 K31  ; R71 := R72 / 2.000000
952 [-]: GETUPVAL  R72 U1       ; R72 := U1
953 [-]: GETTABLE  R72 R72 K126 ; R72 := R72[0x06d055f9]
954 [-]: EQ        1 R1 K27     ; if R1 == 4.000000 then PC := 957
955 [-]: JMP       957          ; PC := 957
956 [-]: LOADBOOL  R73 0 1      ; R73 := false; PC := 957
957 [-]: LOADBOOL  R73 1 0      ; R73 := true
958 [-]: LOADK     R74 3        ; R74 := 3.000000
959 [-]: LOADK     R75 2        ; R75 := 2.000000
960 [-]: CALL      R72 4 2      ; R72 := R72(R73,R74,R75)
961 [-]: GETGLOBAL R73 K84      ; R73 := 0xa421af95
962 [-]: MUL       R74 K31 R45  ; R74 := 2.000000 * R45
963 [-]: LOADK     R75 0        ; R75 := 0.000000
964 [-]: MUL       R76 R72 R46  ; R76 := R72 * R46
965 [-]: CALL      R73 4 2      ; R73 := R73(R74,R75,R76)
966 [-]: ADD       R6 R71 R73   ; R6 := R71 + R73
967 [-]: GETGLOBAL R74 K84      ; R74 := 0xa421af95
968 [-]: CALL      R74 1 2      ; R74 := R74()
969 [-]: GETGLOBAL R75 K99      ; R75 := 0x20b7f774
970 [-]: MOVE      R76 R6       ; R76 := R6
971 [-]: ADD       R77 R71 R74  ; R77 := R71 + R74
972 [-]: CALL      R75 3 2      ; R75 := R75(R76,R77)
973 [-]: MOVE      R7 R75       ; R7 := R75
974 [-]: GETTABLE  R75 R7 K21   ; R75 := R7["heading"]
975 [-]: SUB       R75 R75 K38  ; R75 := R75 - 5.000000
976 [-]: SETTABLE  R7 K21 R75   ; R7["heading"] := R75
977 [-]: LOADK     R8 40        ; R8 := 40.000000
978 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 2162
979 [-]: JMP       2162         ; PC := 2162
980 [-]: SELF      R75 R10 K66  ; R76 := R10; R75 := R10[0xc69087f6]
981 [-]: MOVE      R77 R22      ; R77 := R22
982 [-]: LOADK     R78 0        ; R78 := 0.000000
983 [-]: LOADK     R79 2        ; R79 := 2.000000
984 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
985 [-]: JMP       2162         ; PC := 2162
986 [-]: TEST      R18 0        ; if not R18 then PC := 1050
987 [-]: JMP       1050         ; PC := 1050
988 [-]: LOADBOOL  R75 0 0      ; R75 := false
989 [-]: EQ        1 R21 K28    ; if R21 == nil then PC := 1005
990 [-]: JMP       1005         ; PC := 1005
991 [-]: SELF      R76 R21 K122 ; R77 := R21; R76 := R21[0x988945eb]
992 [-]: CALL      R76 2 2      ; R76 := R76(R77)
993 [-]: TESTSET   R75 R76 1    ; if R76 then PC := 1005 else R75 := R76
994 [-]: JMP       1005         ; PC := 1005
995 [-]: SELF      R76 R21 K123 ; R77 := R21; R76 := R21[0xeead91ce]
996 [-]: CALL      R76 2 2      ; R76 := R76(R77)
997 [-]: TEST      R76 0        ; if not R76 then PC := 1004
998 [-]: JMP       1004         ; PC := 1004
999 [-]: SELF      R76 R21 K127 ; R77 := R21; R76 := R21[0xb9700060]
1000 [-]: CALL      R76 2 2      ; R76 := R76(R77)
1001 [-]: MOVE      R75 R76      ; R75 := R76
1002 [-]: JMP       1005         ; PC := 1005
1003 [-]: LOADBOOL  R75 0 1      ; R75 := false; PC := 1004
1004 [-]: LOADBOOL  R75 1 0      ; R75 := true
1005 [-]: SELF      R76 R9 K90   ; R77 := R9; R76 := R9[0x003c792f]
1006 [-]: GETGLOBAL R78 K91      ; R78 := 0x0469f296
1007 [-]: LOADK     R79 K124     ; R79 := "GAME_R1_WEAPON1"
1008 [-]: CALL      R78 2 0      ; R78,... := R78(R79)
1009 [-]: CALL      R76 0 2      ; R76 := R76(R77,...)
1010 [-]: GETGLOBAL R77 K84      ; R77 := 0xa421af95
1011 [-]: MUL       R78 K128 R45 ; R78 := 1.450000 * R45
1012 [-]: LOADK     R79 0        ; R79 := 0.000000
1013 [-]: MUL       R80 K128 R46 ; R80 := 1.450000 * R46
1014 [-]: CALL      R77 4 2      ; R77 := R77(R78,R79,R80)
1015 [-]: TEST      R75 0        ; if not R75 then PC := 1030
1016 [-]: JMP       1030         ; PC := 1030
1017 [-]: SELF      R78 R9 K90   ; R79 := R9; R78 := R9[0x003c792f]
1018 [-]: GETGLOBAL R80 K91      ; R80 := 0x0469f296
1019 [-]: LOADK     R81 K125     ; R81 := "GAME_L1_WEAPON1"
1020 [-]: CALL      R80 2 0      ; R80,... := R80(R81)
1021 [-]: CALL      R78 0 2      ; R78 := R78(R79,...)
1022 [-]: ADD       R78 R76 R78  ; R78 := R76 + R78
1023 [-]: DIV       R76 R78 K31  ; R76 := R78 / 2.000000
1024 [-]: GETGLOBAL R78 K84      ; R78 := 0xa421af95
1025 [-]: MUL       R79 K31 R45  ; R79 := 2.000000 * R45
1026 [-]: LOADK     R80 0        ; R80 := 0.000000
1027 [-]: MUL       R81 K31 R46  ; R81 := 2.000000 * R46
1028 [-]: CALL      R78 4 2      ; R78 := R78(R79,R80,R81)
1029 [-]: MOVE      R77 R78      ; R77 := R78
1030 [-]: ADD       R6 R76 R77   ; R6 := R76 + R77
1031 [-]: GETGLOBAL R78 K84      ; R78 := 0xa421af95
1032 [-]: CALL      R78 1 2      ; R78 := R78()
1033 [-]: GETGLOBAL R79 K99      ; R79 := 0x20b7f774
1034 [-]: MOVE      R80 R6       ; R80 := R6
1035 [-]: ADD       R81 R76 R78  ; R81 := R76 + R78
1036 [-]: CALL      R79 3 2      ; R79 := R79(R80,R81)
1037 [-]: MOVE      R7 R79       ; R7 := R79
1038 [-]: GETTABLE  R79 R7 K21   ; R79 := R7["heading"]
1039 [-]: SUB       R79 R79 K38  ; R79 := R79 - 5.000000
1040 [-]: SETTABLE  R7 K21 R79   ; R7["heading"] := R79
1041 [-]: LOADK     R8 40        ; R8 := 40.000000
1042 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 2162
1043 [-]: JMP       2162         ; PC := 2162
1044 [-]: SELF      R79 R10 K66  ; R80 := R10; R79 := R10[0xc69087f6]
1045 [-]: MOVE      R81 R22      ; R81 := R22
1046 [-]: LOADK     R82 0        ; R82 := 0.000000
1047 [-]: LOADK     R83 2        ; R83 := 2.000000
1048 [-]: CALL      R79 5 1      ; R79(R80,R81,R82,R83)
1049 [-]: JMP       2162         ; PC := 2162
1050 [-]: TEST      R20 0        ; if not R20 then PC := 1082
1051 [-]: JMP       1082         ; PC := 1082
1052 [-]: SELF      R79 R9 K90   ; R80 := R9; R79 := R9[0x003c792f]
1053 [-]: GETGLOBAL R81 K91      ; R81 := 0x0469f296
1054 [-]: LOADK     R82 K124     ; R82 := "GAME_R1_WEAPON1"
1055 [-]: CALL      R81 2 0      ; R81,... := R81(R82)
1056 [-]: CALL      R79 0 2      ; R79 := R79(R80,...)
1057 [-]: GETGLOBAL R80 K84      ; R80 := 0xa421af95
1058 [-]: MUL       R81 K128 R45 ; R81 := 1.450000 * R45
1059 [-]: LOADK     R82 0        ; R82 := 0.000000
1060 [-]: MUL       R83 K128 R46 ; R83 := 1.450000 * R46
1061 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
1062 [-]: ADD       R6 R79 R80   ; R6 := R79 + R80
1063 [-]: GETGLOBAL R81 K84      ; R81 := 0xa421af95
1064 [-]: CALL      R81 1 2      ; R81 := R81()
1065 [-]: GETGLOBAL R82 K99      ; R82 := 0x20b7f774
1066 [-]: MOVE      R83 R6       ; R83 := R6
1067 [-]: ADD       R84 R79 R81  ; R84 := R79 + R81
1068 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
1069 [-]: MOVE      R7 R82       ; R7 := R82
1070 [-]: GETTABLE  R82 R7 K21   ; R82 := R7["heading"]
1071 [-]: SUB       R82 R82 K38  ; R82 := R82 - 5.000000
1072 [-]: SETTABLE  R7 K21 R82   ; R7["heading"] := R82
1073 [-]: LOADK     R8 40        ; R8 := 40.000000
1074 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 2162
1075 [-]: JMP       2162         ; PC := 2162
1076 [-]: SELF      R82 R10 K66  ; R83 := R10; R82 := R10[0xc69087f6]
1077 [-]: MOVE      R84 R22      ; R84 := R22
1078 [-]: LOADK     R85 0        ; R85 := 0.000000
1079 [-]: LOADK     R86 2        ; R86 := 2.000000
1080 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
1081 [-]: JMP       2162         ; PC := 2162
1082 [-]: TEST      R19 0        ; if not R19 then PC := 2162
1083 [-]: JMP       2162         ; PC := 2162
1084 [-]: LOADK     R82 -1       ; R82 := -1.000000
1085 [-]: EQ        1 R21 K28    ; if R21 == nil then PC := 1090
1086 [-]: JMP       1090         ; PC := 1090
1087 [-]: SELF      R83 R21 K129 ; R84 := R21; R83 := R21[0xa779cba7]
1088 [-]: CALL      R83 2 2      ; R83 := R83(R84)
1089 [-]: MOVE      R82 R83      ; R82 := R83
1090 [-]: LOADBOOL  R83 1 0      ; R83 := true
1091 [-]: EQ        1 R82 K27    ; if R82 == 4.000000 then PC := 1095
1092 [-]: JMP       1095         ; PC := 1095
1093 [-]: EQ        0 R82 K57    ; if R82 ~= 7.000000 then PC := 1096
1094 [-]: JMP       1096         ; PC := 1096
1095 [-]: LOADBOOL  R83 0 0      ; R83 := false
1096 [-]: SELF      R84 R9 K90   ; R85 := R9; R84 := R9[0x003c792f]
1097 [-]: GETGLOBAL R86 K91      ; R86 := 0x0469f296
1098 [-]: LOADK     R87 K124     ; R87 := "GAME_R1_WEAPON1"
1099 [-]: CALL      R86 2 0      ; R86,... := R86(R87)
1100 [-]: CALL      R84 0 2      ; R84 := R84(R85,...)
1101 [-]: TEST      R83 0        ; if not R83 then PC := 1110
1102 [-]: JMP       1110         ; PC := 1110
1103 [-]: SELF      R85 R9 K90   ; R86 := R9; R85 := R9[0x003c792f]
1104 [-]: GETGLOBAL R87 K91      ; R87 := 0x0469f296
1105 [-]: LOADK     R88 K125     ; R88 := "GAME_L1_WEAPON1"
1106 [-]: CALL      R87 2 0      ; R87,... := R87(R88)
1107 [-]: CALL      R85 0 2      ; R85 := R85(R86,...)
1108 [-]: ADD       R85 R84 R85  ; R85 := R84 + R85
1109 [-]: DIV       R84 R85 K31  ; R84 := R85 / 2.000000
1110 [-]: GETGLOBAL R85 K84      ; R85 := 0xa421af95
1111 [-]: MUL       R86 K31 R45  ; R86 := 2.000000 * R45
1112 [-]: LOADK     R87 0        ; R87 := 0.000000
1113 [-]: MUL       R88 K31 R46  ; R88 := 2.000000 * R46
1114 [-]: CALL      R85 4 2      ; R85 := R85(R86,R87,R88)
1115 [-]: GETGLOBAL R86 K84      ; R86 := 0xa421af95
1116 [-]: CALL      R86 1 2      ; R86 := R86()
1117 [-]: GETGLOBAL R87 K12      ; R87 := _T
1118 [-]: GETTABLE  R87 R87 K32  ; R87 := R87["mSpecialSuitMode"]
1119 [-]: TEST      R87 0        ; if not R87 then PC := 1134
1120 [-]: JMP       1134         ; PC := 1134
1121 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1122 [-]: MUL       R88 K31 R45  ; R88 := 2.000000 * R45
1123 [-]: LOADK     R89 0        ; R89 := -0.500000
1124 [-]: MUL       R90 K56 R46  ; R90 := 3.000000 * R46
1125 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1126 [-]: MOVE      R85 R87      ; R85 := R87
1127 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1128 [-]: LOADK     R88 0        ; R88 := 0.000000
1129 [-]: LOADK     R89 K130     ; R89 := -0.200000
1130 [-]: LOADK     R90 0        ; R90 := 0.000000
1131 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1132 [-]: MOVE      R86 R87      ; R86 := R87
1133 [-]: JMP       1198         ; PC := 1198
1134 [-]: EQ        1 R82 K131   ; if R82 == 9.000000 then PC := 1138
1135 [-]: JMP       1138         ; PC := 1138
1136 [-]: EQ        0 R82 K132   ; if R82 ~= 11.000000 then PC := 1151
1137 [-]: JMP       1151         ; PC := 1151
1138 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1139 [-]: MUL       R88 K133 R45 ; R88 := 2.500000 * R45
1140 [-]: LOADK     R89 0        ; R89 := 0.500000
1141 [-]: MUL       R90 K133 R46 ; R90 := 2.500000 * R46
1142 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1143 [-]: MOVE      R85 R87      ; R85 := R87
1144 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1145 [-]: LOADK     R88 0        ; R88 := 0.000000
1146 [-]: LOADK     R89 K112     ; R89 := 0.300000
1147 [-]: LOADK     R90 0        ; R90 := 0.000000
1148 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1149 [-]: MOVE      R86 R87      ; R86 := R87
1150 [-]: JMP       1198         ; PC := 1198
1151 [-]: EQ        0 R82 K56    ; if R82 ~= 3.000000 then PC := 1160
1152 [-]: JMP       1160         ; PC := 1160
1153 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1154 [-]: MUL       R88 K133 R45 ; R88 := 2.500000 * R45
1155 [-]: LOADK     R89 0        ; R89 := 0.000000
1156 [-]: MUL       R90 K133 R46 ; R90 := 2.500000 * R46
1157 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1158 [-]: MOVE      R85 R87      ; R85 := R87
1159 [-]: JMP       1198         ; PC := 1198
1160 [-]: EQ        1 R82 K134   ; if R82 == 15.000000 then PC := 1168
1161 [-]: JMP       1168         ; PC := 1168
1162 [-]: EQ        1 R82 K135   ; if R82 == 13.000000 then PC := 1168
1163 [-]: JMP       1168         ; PC := 1168
1164 [-]: EQ        1 R82 K38    ; if R82 == 5.000000 then PC := 1168
1165 [-]: JMP       1168         ; PC := 1168
1166 [-]: EQ        0 R82 K136   ; if R82 ~= 23.000000 then PC := 1181
1167 [-]: JMP       1181         ; PC := 1181
1168 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1169 [-]: MUL       R88 K31 R45  ; R88 := 2.000000 * R45
1170 [-]: LOADK     R89 0        ; R89 := -0.500000
1171 [-]: MUL       R90 K31 R46  ; R90 := 2.000000 * R46
1172 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1173 [-]: MOVE      R85 R87      ; R85 := R87
1174 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1175 [-]: LOADK     R88 0        ; R88 := 0.000000
1176 [-]: LOADK     R89 K130     ; R89 := -0.200000
1177 [-]: LOADK     R90 0        ; R90 := 0.000000
1178 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1179 [-]: MOVE      R86 R87      ; R86 := R87
1180 [-]: JMP       1198         ; PC := 1198
1181 [-]: EQ        0 R82 K27    ; if R82 ~= 4.000000 then PC := 1190
1182 [-]: JMP       1190         ; PC := 1190
1183 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1184 [-]: MUL       R88 K101 R45 ; R88 := 1.500000 * R45
1185 [-]: LOADK     R89 0        ; R89 := 0.000000
1186 [-]: MUL       R90 K101 R46 ; R90 := 1.500000 * R46
1187 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1188 [-]: MOVE      R85 R87      ; R85 := R87
1189 [-]: JMP       1198         ; PC := 1198
1190 [-]: EQ        0 R82 K137   ; if R82 ~= 18.000000 then PC := 1198
1191 [-]: JMP       1198         ; PC := 1198
1192 [-]: GETGLOBAL R87 K84      ; R87 := 0xa421af95
1193 [-]: MUL       R88 K31 R45  ; R88 := 2.000000 * R45
1194 [-]: LOADK     R89 K112     ; R89 := 0.300000
1195 [-]: MUL       R90 K31 R46  ; R90 := 2.000000 * R46
1196 [-]: CALL      R87 4 2      ; R87 := R87(R88,R89,R90)
1197 [-]: MOVE      R85 R87      ; R85 := R87
1198 [-]: ADD       R6 R84 R85   ; R6 := R84 + R85
1199 [-]: GETGLOBAL R87 K99      ; R87 := 0x20b7f774
1200 [-]: MOVE      R88 R6       ; R88 := R6
1201 [-]: ADD       R89 R84 R86  ; R89 := R84 + R86
1202 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1203 [-]: MOVE      R7 R87       ; R7 := R87
1204 [-]: EQ        0 R82 K27    ; if R82 ~= 4.000000 then PC := 1210
1205 [-]: JMP       1210         ; PC := 1210
1206 [-]: GETTABLE  R87 R7 K21   ; R87 := R7["heading"]
1207 [-]: SUB       R87 R87 K138 ; R87 := R87 - 10.000000
1208 [-]: SETTABLE  R7 K21 R87   ; R7["heading"] := R87
1209 [-]: JMP       1244         ; PC := 1244
1210 [-]: EQ        1 R82 K134   ; if R82 == 15.000000 then PC := 1244
1211 [-]: JMP       1244         ; PC := 1244
1212 [-]: EQ        1 R82 K135   ; if R82 == 13.000000 then PC := 1244
1213 [-]: JMP       1244         ; PC := 1244
1214 [-]: EQ        1 R82 K131   ; if R82 == 9.000000 then PC := 1244
1215 [-]: JMP       1244         ; PC := 1244
1216 [-]: EQ        1 R82 K132   ; if R82 == 11.000000 then PC := 1244
1217 [-]: JMP       1244         ; PC := 1244
1218 [-]: EQ        1 R82 K38    ; if R82 == 5.000000 then PC := 1244
1219 [-]: JMP       1244         ; PC := 1244
1220 [-]: EQ        1 R82 K136   ; if R82 == 23.000000 then PC := 1244
1221 [-]: JMP       1244         ; PC := 1244
1222 [-]: LOADNIL   R87 R87      ; R87 := nil
1223 [-]: EQ        1 R21 K28    ; if R21 == nil then PC := 1235
1224 [-]: JMP       1235         ; PC := 1235
1225 [-]: SELF      R88 R21 K139 ; R89 := R21; R88 := R21[0xe3ca779e]
1226 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1227 [-]: GETGLOBAL R89 K3       ; R89 := 0x7b998233
1228 [-]: MOVE      R90 R88      ; R90 := R88
1229 [-]: CALL      R89 2 2      ; R89 := R89(R90)
1230 [-]: TEST      R89 1        ; if R89 then PC := 1235
1231 [-]: JMP       1235         ; PC := 1235
1232 [-]: SELF      R89 R88 K140 ; R90 := R88; R89 := R88[0xed4e0128]
1233 [-]: CALL      R89 2 2      ; R89 := R89(R90)
1234 [-]: MOVE      R87 R89      ; R87 := R89
1235 [-]: EQ        0 R87 K141   ; if R87 ~= "SwordWhipMeleeTree" then PC := 1241
1236 [-]: JMP       1241         ; PC := 1241
1237 [-]: GETTABLE  R89 R7 K21   ; R89 := R7["heading"]
1238 [-]: ADD       R89 R89 K31  ; R89 := R89 + 2.000000
1239 [-]: SETTABLE  R7 K21 R89   ; R7["heading"] := R89
1240 [-]: JMP       1244         ; PC := 1244
1241 [-]: GETTABLE  R89 R7 K21   ; R89 := R7["heading"]
1242 [-]: SUB       R89 R89 K57  ; R89 := R89 - 7.000000
1243 [-]: SETTABLE  R7 K21 R89   ; R7["heading"] := R89
1244 [-]: LOADK     R8 40        ; R8 := 40.000000
1245 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 1288
1246 [-]: JMP       1288         ; PC := 1288
1247 [-]: GETGLOBAL R89 K116     ; R89 := mLists
1248 [-]: GETTABLE  R89 R89 K117 ; R89 := R89["mCosmeticsList"]
1249 [-]: GETTABLE  R89 R89 K118 ; R89 := R89["mCurrLevel"]
1250 [-]: GETGLOBAL R90 K116     ; R90 := mLists
1251 [-]: GETTABLE  R90 R90 K117 ; R90 := R90["mCosmeticsList"]
1252 [-]: GETTABLE  R90 R90 K119 ; R90 := R90["HOLSTER_STYLE"]
1253 [-]: EQ        1 R89 R90    ; if R89 == R90 then PC := 1288
1254 [-]: JMP       1288         ; PC := 1288
1255 [-]: GETGLOBAL R89 K116     ; R89 := mLists
1256 [-]: GETTABLE  R89 R89 K117 ; R89 := R89["mCosmeticsList"]
1257 [-]: GETTABLE  R89 R89 K118 ; R89 := R89["mCurrLevel"]
1258 [-]: GETGLOBAL R90 K116     ; R90 := mLists
1259 [-]: GETTABLE  R90 R90 K117 ; R90 := R90["mCosmeticsList"]
1260 [-]: GETTABLE  R90 R90 K120 ; R90 := R90["HOLSTER_CUSTOMIZATION"]
1261 [-]: EQ        1 R89 R90    ; if R89 == R90 then PC := 1288
1262 [-]: JMP       1288         ; PC := 1288
1263 [-]: SELF      R89 R10 K66  ; R90 := R10; R89 := R10[0xc69087f6]
1264 [-]: MOVE      R91 R22      ; R91 := R22
1265 [-]: LOADK     R92 0        ; R92 := 0.000000
1266 [-]: LOADK     R93 2        ; R93 := 2.000000
1267 [-]: CALL      R89 5 1      ; R89(R90,R91,R92,R93)
1268 [-]: GETGLOBAL R89 K3       ; R89 := 0x7b998233
1269 [-]: MOVE      R90 R21      ; R90 := R21
1270 [-]: CALL      R89 2 2      ; R89 := R89(R90)
1271 [-]: TEST      R89 1        ; if R89 then PC := 1288
1272 [-]: JMP       1288         ; PC := 1288
1273 [-]: SELF      R89 R10 K142 ; R90 := R10; R89 := R10[0xfaa69527]
1274 [-]: LOADK     R91 0        ; R91 := 0.000000
1275 [-]: CALL      R89 3 1      ; R89(R90,R91)
1276 [-]: GETUPVAL  R89 U13      ; R89 := U13
1277 [-]: MOVE      R90 R9       ; R90 := R9
1278 [-]: MOVE      R91 R0       ; R91 := R0
1279 [-]: MOVE      R92 R1       ; R92 := R1
1280 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
1281 [-]: TEST      R89 0        ; if not R89 then PC := 1288
1282 [-]: JMP       1288         ; PC := 1288
1283 [-]: SELF      R89 R21 K143 ; R90 := R21; R89 := R21[0x167f2e76]
1284 [-]: GETGLOBAL R91 K91      ; R91 := 0x0469f296
1285 [-]: LOADK     R92 K144     ; R92 := "WeaponForceOpen"
1286 [-]: CALL      R91 2 0      ; R91,... := R91(R92)
1287 [-]: CALL      R89 0 1      ; R89(R90,...)
1288 [-]: SELF      R89 R10 K25  ; R90 := R10; R89 := R10[0x8205b296]
1289 [-]: LOADK     R91 3        ; R91 := 3.000000
1290 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
1291 [-]: EQ        1 R89 R21    ; if R89 == R21 then PC := 2162
1292 [-]: JMP       2162         ; PC := 2162
1293 [-]: GETGLOBAL R90 K3       ; R90 := 0x7b998233
1294 [-]: MOVE      R91 R89      ; R91 := R89
1295 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1296 [-]: TEST      R90 1        ; if R90 then PC := 2162
1297 [-]: JMP       2162         ; PC := 2162
1298 [-]: SELF      R90 R10 K145 ; R91 := R10; R90 := R10[0x54732cc7]
1299 [-]: SELF      R92 R89 K146 ; R93 := R89; R92 := R89[0xb5d09c91]
1300 [-]: CALL      R92 2 2      ; R92 := R92(R93)
1301 [-]: LOADK     R93 2        ; R93 := 2.000000
1302 [-]: CALL      R90 4 1      ; R90(R91,R92,R93)
1303 [-]: JMP       2162         ; PC := 2162
1304 [-]: EQ        0 R0 K40     ; if R0 ~= 6.000000 then PC := 1460
1305 [-]: JMP       1460         ; PC := 1460
1306 [-]: GETGLOBAL R90 K78      ; R90 := 0x5bced4c4
1307 [-]: GETTABLE  R90 R90 K79  ; R90 := R90[0x3eda26fc]
1308 [-]: GETGLOBAL R91 K78      ; R91 := 0x5bced4c4
1309 [-]: GETTABLE  R91 R91 K80  ; R91 := R91[0xdde5c6a1]
1310 [-]: GETGLOBAL R92 K12      ; R92 := _T
1311 [-]: GETTABLE  R92 R92 K147 ; R92 := R92["ARCHWING_DEFAULT_ROTATION"]
1312 [-]: CALL      R91 2 0      ; R91,... := R91(R92)
1313 [-]: CALL      R90 0 2      ; R90 := R90(R91,...)
1314 [-]: GETGLOBAL R91 K78      ; R91 := 0x5bced4c4
1315 [-]: GETTABLE  R91 R91 K82  ; R91 := R91[0x00fa6bf1]
1316 [-]: GETGLOBAL R92 K78      ; R92 := 0x5bced4c4
1317 [-]: GETTABLE  R92 R92 K80  ; R92 := R92[0xdde5c6a1]
1318 [-]: GETGLOBAL R93 K12      ; R93 := _T
1319 [-]: GETTABLE  R93 R93 K147 ; R93 := R93["ARCHWING_DEFAULT_ROTATION"]
1320 [-]: CALL      R92 2 0      ; R92,... := R92(R93)
1321 [-]: CALL      R91 0 2      ; R91 := R91(R92,...)
1322 [-]: GETGLOBAL R92 K84      ; R92 := 0xa421af95
1323 [-]: MUL       R93 K148 R90 ; R93 := 3.750000 * R90
1324 [-]: LOADK     R94 0        ; R94 := 0.750000
1325 [-]: MUL       R95 K148 R91 ; R95 := 3.750000 * R91
1326 [-]: CALL      R92 4 2      ; R92 := R92(R93,R94,R95)
1327 [-]: GETGLOBAL R93 K6       ; R93 := mCameraTable
1328 [-]: GETTABLE  R93 R93 K7   ; R93 := R93["rootNodeEntity"]
1329 [-]: SELF      R93 R93 K5   ; R94 := R93; R93 := R93[0xd1586535]
1330 [-]: CALL      R93 2 2      ; R93 := R93(R94)
1331 [-]: GETGLOBAL R94 K3       ; R94 := 0x7b998233
1332 [-]: GETGLOBAL R95 K12      ; R95 := _T
1333 [-]: GETTABLE  R95 R95 K45  ; R95 := R95["KDriveAvatar"]
1334 [-]: CALL      R94 2 2      ; R94 := R94(R95)
1335 [-]: TEST      R94 1        ; if R94 then PC := 1343
1336 [-]: JMP       1343         ; PC := 1343
1337 [-]: GETGLOBAL R94 K12      ; R94 := _T
1338 [-]: GETTABLE  R94 R94 K45  ; R94 := R94["KDriveAvatar"]
1339 [-]: SELF      R94 R94 K5   ; R95 := R94; R94 := R94[0xd1586535]
1340 [-]: CALL      R94 2 2      ; R94 := R94(R95)
1341 [-]: MOVE      R93 R94      ; R93 := R94
1342 [-]: JMP       1355         ; PC := 1355
1343 [-]: GETUPVAL  R94 U14      ; R94 := U14
1344 [-]: GETTABLE  R94 R94 K149 ; R94 := R94[0x09b8fbee]
1345 [-]: MOVE      R95 R93      ; R95 := R93
1346 [-]: CALL      R94 2 2      ; R94 := R94(R95)
1347 [-]: GETGLOBAL R95 K3       ; R95 := 0x7b998233
1348 [-]: MOVE      R96 R94      ; R96 := R94
1349 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1350 [-]: TEST      R95 1        ; if R95 then PC := 1355
1351 [-]: JMP       1355         ; PC := 1355
1352 [-]: SELF      R95 R94 K5   ; R96 := R94; R95 := R94[0xd1586535]
1353 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1354 [-]: MOVE      R93 R95      ; R93 := R95
1355 [-]: GETGLOBAL R95 K3       ; R95 := 0x7b998233
1356 [-]: MOVE      R96 R21      ; R96 := R21
1357 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1358 [-]: TEST      R95 1        ; if R95 then PC := 1363
1359 [-]: JMP       1363         ; PC := 1363
1360 [-]: SELF      R95 R21 K150 ; R96 := R21; R95 := R21[0xaa69837b]
1361 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1362 [-]: JMP       1365         ; PC := 1365
1363 [-]: LOADBOOL  R95 0 1      ; R95 := false; PC := 1364
1364 [-]: LOADBOOL  R95 1 0      ; R95 := true
1365 [-]: TEST      R95 0        ; if not R95 then PC := 1373
1366 [-]: JMP       1373         ; PC := 1373
1367 [-]: GETGLOBAL R96 K84      ; R96 := 0xa421af95
1368 [-]: LOADK     R97 0        ; R97 := 0.000000
1369 [-]: LOADK     R98 K130     ; R98 := -0.200000
1370 [-]: LOADK     R99 0        ; R99 := 0.000000
1371 [-]: CALL      R96 4 2      ; R96 := R96(R97,R98,R99)
1372 [-]: ADD       R93 R93 R96  ; R93 := R93 + R96
1373 [-]: ADD       R6 R93 R92   ; R6 := R93 + R92
1374 [-]: GETGLOBAL R96 K12      ; R96 := _T
1375 [-]: GETTABLE  R96 R96 K52  ; R96 := R96["suitTable"]
1376 [-]: SETTABLE  R96 K55 K151 ; R96["lerpRotZ"] := 180.000000
1377 [-]: GETGLOBAL R96 K84      ; R96 := 0xa421af95
1378 [-]: LOADK     R97 0        ; R97 := 0.250000
1379 [-]: LOADK     R98 K152     ; R98 := 0.200000
1380 [-]: LOADK     R99 K153     ; R99 := -0.300000
1381 [-]: CALL      R96 4 2      ; R96 := R96(R97,R98,R99)
1382 [-]: GETUPVAL  R97 U9       ; R97 := U9
1383 [-]: GETUPVAL  R98 U10      ; R98 := U10
1384 [-]: GETTABLE  R98 R98 K89  ; R98 := R98["UI_MODE_IN_SPACE_SHIP"]
1385 [-]: EQ        0 R97 R98    ; if R97 ~= R98 then PC := 1389
1386 [-]: JMP       1389         ; PC := 1389
1387 [-]: SETTABLE  R96 K154 K153; R96["x"] := -0.300000
1388 [-]: JMP       1399         ; PC := 1399
1389 [-]: GETUPVAL  R97 U10      ; R97 := U10
1390 [-]: GETTABLE  R97 R97 K155 ; R97 := R97[0xcf1fcba4]
1391 [-]: CALL      R97 1 2      ; R97 := R97()
1392 [-]: TEST      R97 0        ; if not R97 then PC := 1398
1393 [-]: JMP       1398         ; PC := 1398
1394 [-]: SETTABLE  R96 K154 K112; R96["x"] := 0.300000
1395 [-]: SETTABLE  R96 K156 K157; R96["z"] := -1.000000
1396 [-]: SETTABLE  R96 K93 K158 ; R96["y"] := -0.100000
1397 [-]: JMP       1399         ; PC := 1399
1398 [-]: SETTABLE  R96 K154 K153; R96["x"] := -0.300000
1399 [-]: GETGLOBAL R97 K99      ; R97 := 0x20b7f774
1400 [-]: MOVE      R98 R6       ; R98 := R6
1401 [-]: ADD       R99 R93 R96  ; R99 := R93 + R96
1402 [-]: CALL      R97 3 2      ; R97 := R97(R98,R99)
1403 [-]: MOVE      R7 R97       ; R7 := R97
1404 [-]: LOADK     R8 35        ; R8 := 35.000000
1405 [-]: GETUPVAL  R97 U11      ; R97 := U11
1406 [-]: GETUPVAL  R98 U12      ; R98 := U12
1407 [-]: GETTABLE  R98 R98 K100 ; R98 := R98["FALSE"]
1408 [-]: EQ        1 R97 R98    ; if R97 == R98 then PC := 1447
1409 [-]: JMP       1447         ; PC := 1447
1410 [-]: TEST      R95 0        ; if not R95 then PC := 1419
1411 [-]: JMP       1419         ; PC := 1419
1412 [-]: GETGLOBAL R97 K12      ; R97 := _T
1413 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1414 [-]: SETTABLE  R97 K53 K54  ; R97["lerpRotY"] := 0.000000
1415 [-]: GETGLOBAL R97 K12      ; R97 := _T
1416 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1417 [-]: SETTABLE  R97 K55 K54  ; R97["lerpRotZ"] := 0.000000
1418 [-]: JMP       2162         ; PC := 2162
1419 [-]: GETUPVAL  R97 U10      ; R97 := U10
1420 [-]: GETTABLE  R97 R97 K155 ; R97 := R97[0xcf1fcba4]
1421 [-]: CALL      R97 1 2      ; R97 := R97()
1422 [-]: TEST      R97 0        ; if not R97 then PC := 1428
1423 [-]: JMP       1428         ; PC := 1428
1424 [-]: GETGLOBAL R97 K12      ; R97 := _T
1425 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1426 [-]: SETTABLE  R97 K53 K159 ; R97["lerpRotY"] := 270.000000
1427 [-]: JMP       2162         ; PC := 2162
1428 [-]: GETUPVAL  R97 U9       ; R97 := U9
1429 [-]: GETUPVAL  R98 U10      ; R98 := U10
1430 [-]: GETTABLE  R98 R98 K89  ; R98 := R98["UI_MODE_IN_SPACE_SHIP"]
1431 [-]: EQ        0 R97 R98    ; if R97 ~= R98 then PC := 1440
1432 [-]: JMP       1440         ; PC := 1440
1433 [-]: GETGLOBAL R97 K12      ; R97 := _T
1434 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1435 [-]: SETTABLE  R97 K53 K159 ; R97["lerpRotY"] := 270.000000
1436 [-]: GETGLOBAL R97 K12      ; R97 := _T
1437 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1438 [-]: SETTABLE  R97 K55 K54  ; R97["lerpRotZ"] := 0.000000
1439 [-]: JMP       2162         ; PC := 2162
1440 [-]: GETGLOBAL R97 K12      ; R97 := _T
1441 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1442 [-]: SETTABLE  R97 K53 K159 ; R97["lerpRotY"] := 270.000000
1443 [-]: GETGLOBAL R97 K12      ; R97 := _T
1444 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1445 [-]: SETTABLE  R97 K55 K159 ; R97["lerpRotZ"] := 270.000000
1446 [-]: JMP       2162         ; PC := 2162
1447 [-]: TEST      R95 0        ; if not R95 then PC := 1456
1448 [-]: JMP       1456         ; PC := 1456
1449 [-]: GETGLOBAL R97 K12      ; R97 := _T
1450 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1451 [-]: SETTABLE  R97 K53 K54  ; R97["lerpRotY"] := 0.000000
1452 [-]: GETGLOBAL R97 K12      ; R97 := _T
1453 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1454 [-]: SETTABLE  R97 K55 K54  ; R97["lerpRotZ"] := 0.000000
1455 [-]: JMP       2162         ; PC := 2162
1456 [-]: GETGLOBAL R97 K12      ; R97 := _T
1457 [-]: GETTABLE  R97 R97 K52  ; R97 := R97["suitTable"]
1458 [-]: SETTABLE  R97 K53 K160 ; R97["lerpRotY"] := -70.000000
1459 [-]: JMP       2162         ; PC := 2162
1460 [-]: EQ        0 R0 K31     ; if R0 ~= 2.000000 then PC := 1632
1461 [-]: JMP       1632         ; PC := 1632
1462 [-]: GETGLOBAL R97 K78      ; R97 := 0x5bced4c4
1463 [-]: GETTABLE  R97 R97 K79  ; R97 := R97[0x3eda26fc]
1464 [-]: GETGLOBAL R98 K78      ; R98 := 0x5bced4c4
1465 [-]: GETTABLE  R98 R98 K80  ; R98 := R98[0xdde5c6a1]
1466 [-]: GETGLOBAL R99 K12      ; R99 := _T
1467 [-]: GETTABLE  R99 R99 K147 ; R99 := R99["ARCHWING_DEFAULT_ROTATION"]
1468 [-]: CALL      R98 2 0      ; R98,... := R98(R99)
1469 [-]: CALL      R97 0 2      ; R97 := R97(R98,...)
1470 [-]: GETGLOBAL R98 K78      ; R98 := 0x5bced4c4
1471 [-]: GETTABLE  R98 R98 K82  ; R98 := R98[0x00fa6bf1]
1472 [-]: GETGLOBAL R99 K78      ; R99 := 0x5bced4c4
1473 [-]: GETTABLE  R99 R99 K80  ; R99 := R99[0xdde5c6a1]
1474 [-]: GETGLOBAL R100 K12     ; R100 := _T
1475 [-]: GETTABLE  R100 R100 K147; R100 := R100["ARCHWING_DEFAULT_ROTATION"]
1476 [-]: CALL      R99 2 0      ; R99,... := R99(R100)
1477 [-]: CALL      R98 0 2      ; R98 := R98(R99,...)
1478 [-]: TEST      R16 0        ; if not R16 then PC := 1517
1479 [-]: JMP       1517         ; PC := 1517
1480 [-]: GETGLOBAL R99 K84      ; R99 := 0xa421af95
1481 [-]: MUL       R100 K148 R97; R100 := 3.750000 * R97
1482 [-]: LOADK     R101 0       ; R101 := 0.250000
1483 [-]: MUL       R102 K148 R98; R102 := 3.750000 * R98
1484 [-]: CALL      R99 4 2      ; R99 := R99(R100,R101,R102)
1485 [-]: GETGLOBAL R100 K6      ; R100 := mCameraTable
1486 [-]: GETTABLE  R100 R100 K7 ; R100 := R100["rootNodeEntity"]
1487 [-]: SELF      R100 R100 K5 ; R101 := R100; R100 := R100[0xd1586535]
1488 [-]: CALL      R100 2 2     ; R100 := R100(R101)
1489 [-]: ADD       R6 R100 R99  ; R6 := R100 + R99
1490 [-]: GETGLOBAL R100 K84     ; R100 := 0xa421af95
1491 [-]: LOADK     R101 0       ; R101 := 0.250000
1492 [-]: LOADK     R102 0       ; R102 := 0.000000
1493 [-]: LOADK     R103 0       ; R103 := 0.000000
1494 [-]: CALL      R100 4 2     ; R100 := R100(R101,R102,R103)
1495 [-]: GETUPVAL  R101 U9      ; R101 := U9
1496 [-]: GETUPVAL  R102 U10     ; R102 := U10
1497 [-]: GETTABLE  R102 R102 K89; R102 := R102["UI_MODE_IN_SPACE_SHIP"]
1498 [-]: EQ        0 R101 R102  ; if R101 ~= R102 then PC := 1506
1499 [-]: JMP       1506         ; PC := 1506
1500 [-]: GETGLOBAL R101 K84     ; R101 := 0xa421af95
1501 [-]: LOADK     R102 0       ; R102 := -0.250000
1502 [-]: LOADK     R103 0       ; R103 := 0.000000
1503 [-]: LOADK     R104 0       ; R104 := 0.000000
1504 [-]: CALL      R101 4 2     ; R101 := R101(R102,R103,R104)
1505 [-]: MOVE      R100 R101    ; R100 := R101
1506 [-]: GETGLOBAL R101 K99     ; R101 := 0x20b7f774
1507 [-]: MOVE      R102 R6      ; R102 := R6
1508 [-]: GETGLOBAL R103 K6      ; R103 := mCameraTable
1509 [-]: GETTABLE  R103 R103 K7 ; R103 := R103["rootNodeEntity"]
1510 [-]: SELF      R103 R103 K5 ; R104 := R103; R103 := R103[0xd1586535]
1511 [-]: CALL      R103 2 2     ; R103 := R103(R104)
1512 [-]: ADD       R103 R103 R100; R103 := R103 + R100
1513 [-]: CALL      R101 3 2     ; R101 := R101(R102,R103)
1514 [-]: MOVE      R7 R101      ; R7 := R101
1515 [-]: LOADK     R8 35        ; R8 := 35.000000
1516 [-]: JMP       2162         ; PC := 2162
1517 [-]: TEST      R17 0        ; if not R17 then PC := 1565
1518 [-]: JMP       1565         ; PC := 1565
1519 [-]: LOADBOOL  R101 1 0     ; R101 := true
1520 [-]: EQ        1 R21 K28    ; if R21 == nil then PC := 1529
1521 [-]: JMP       1529         ; PC := 1529
1522 [-]: SELF      R102 R21 K122; R103 := R21; R102 := R21[0x988945eb]
1523 [-]: CALL      R102 2 2     ; R102 := R102(R103)
1524 [-]: TESTSET   R101 R102 1  ; if R102 then PC := 1529 else R101 := R102
1525 [-]: JMP       1529         ; PC := 1529
1526 [-]: SELF      R102 R21 K123; R103 := R21; R102 := R21[0xeead91ce]
1527 [-]: CALL      R102 2 2     ; R102 := R102(R103)
1528 [-]: NOT       R101 R102    ; R101 := not R102
1529 [-]: SELF      R102 R9 K90  ; R103 := R9; R102 := R9[0x003c792f]
1530 [-]: GETGLOBAL R104 K91     ; R104 := 0x0469f296
1531 [-]: LOADK     R105 K124    ; R105 := "GAME_R1_WEAPON1"
1532 [-]: CALL      R104 2 0     ; R104,... := R104(R105)
1533 [-]: CALL      R102 0 2     ; R102 := R102(R103,...)
1534 [-]: TEST      R101 0       ; if not R101 then PC := 1543
1535 [-]: JMP       1543         ; PC := 1543
1536 [-]: SELF      R103 R9 K90  ; R104 := R9; R103 := R9[0x003c792f]
1537 [-]: GETGLOBAL R105 K91     ; R105 := 0x0469f296
1538 [-]: LOADK     R106 K125    ; R106 := "GAME_L1_WEAPON1"
1539 [-]: CALL      R105 2 0     ; R105,... := R105(R106)
1540 [-]: CALL      R103 0 2     ; R103 := R103(R104,...)
1541 [-]: ADD       R103 R102 R103; R103 := R102 + R103
1542 [-]: DIV       R102 R103 K31; R102 := R103 / 2.000000
1543 [-]: GETGLOBAL R103 K84     ; R103 := 0xa421af95
1544 [-]: MUL       R104 K56 R97 ; R104 := 3.000000 * R97
1545 [-]: LOADK     R105 0       ; R105 := 0.000000
1546 [-]: MUL       R106 K56 R98 ; R106 := 3.000000 * R98
1547 [-]: CALL      R103 4 2     ; R103 := R103(R104,R105,R106)
1548 [-]: ADD       R6 R102 R103 ; R6 := R102 + R103
1549 [-]: GETGLOBAL R104 K84     ; R104 := 0xa421af95
1550 [-]: CALL      R104 1 2     ; R104 := R104()
1551 [-]: GETGLOBAL R105 K99     ; R105 := 0x20b7f774
1552 [-]: MOVE      R106 R6      ; R106 := R6
1553 [-]: ADD       R107 R102 R104; R107 := R102 + R104
1554 [-]: CALL      R105 3 2     ; R105 := R105(R106,R107)
1555 [-]: MOVE      R7 R105      ; R7 := R105
1556 [-]: LOADK     R8 40        ; R8 := 40.000000
1557 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 2162
1558 [-]: JMP       2162         ; PC := 2162
1559 [-]: SELF      R105 R10 K66 ; R106 := R10; R105 := R10[0xc69087f6]
1560 [-]: MOVE      R107 R22     ; R107 := R22
1561 [-]: LOADK     R108 0       ; R108 := 0.000000
1562 [-]: LOADK     R109 2       ; R109 := 2.000000
1563 [-]: CALL      R105 5 1     ; R105(R106,R107,R108,R109)
1564 [-]: JMP       2162         ; PC := 2162
1565 [-]: TEST      R19 0        ; if not R19 then PC := 2162
1566 [-]: JMP       2162         ; PC := 2162
1567 [-]: LOADK     R105 -1      ; R105 := -1.000000
1568 [-]: EQ        1 R21 K28    ; if R21 == nil then PC := 1573
1569 [-]: JMP       1573         ; PC := 1573
1570 [-]: SELF      R106 R21 K129; R107 := R21; R106 := R21[0xa779cba7]
1571 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1572 [-]: MOVE      R105 R106    ; R105 := R106
1573 [-]: LOADBOOL  R106 0 0     ; R106 := false
1574 [-]: EQ        1 R105 K40   ; if R105 == 6.000000 then PC := 1580
1575 [-]: JMP       1580         ; PC := 1580
1576 [-]: EQ        1 R105 K54   ; if R105 == 0.000000 then PC := 1580
1577 [-]: JMP       1580         ; PC := 1580
1578 [-]: EQ        0 R105 K2    ; if R105 ~= 1.000000 then PC := 1581
1579 [-]: JMP       1581         ; PC := 1581
1580 [-]: LOADBOOL  R106 1 0     ; R106 := true
1581 [-]: SELF      R107 R9 K90  ; R108 := R9; R107 := R9[0x003c792f]
1582 [-]: GETGLOBAL R109 K91     ; R109 := 0x0469f296
1583 [-]: LOADK     R110 K124    ; R110 := "GAME_R1_WEAPON1"
1584 [-]: CALL      R109 2 0     ; R109,... := R109(R110)
1585 [-]: CALL      R107 0 2     ; R107 := R107(R108,...)
1586 [-]: TEST      R106 0       ; if not R106 then PC := 1595
1587 [-]: JMP       1595         ; PC := 1595
1588 [-]: SELF      R108 R9 K90  ; R109 := R9; R108 := R9[0x003c792f]
1589 [-]: GETGLOBAL R110 K91     ; R110 := 0x0469f296
1590 [-]: LOADK     R111 K125    ; R111 := "GAME_L1_WEAPON1"
1591 [-]: CALL      R110 2 0     ; R110,... := R110(R111)
1592 [-]: CALL      R108 0 2     ; R108 := R108(R109,...)
1593 [-]: ADD       R108 R107 R108; R108 := R107 + R108
1594 [-]: DIV       R107 R108 K31; R107 := R108 / 2.000000
1595 [-]: GETGLOBAL R108 K84     ; R108 := 0xa421af95
1596 [-]: MUL       R109 K161 R97; R109 := 2.700000 * R97
1597 [-]: LOADK     R110 0       ; R110 := 0.000000
1598 [-]: MUL       R111 K161 R98; R111 := 2.700000 * R98
1599 [-]: CALL      R108 4 2     ; R108 := R108(R109,R110,R111)
1600 [-]: GETGLOBAL R109 K84     ; R109 := 0xa421af95
1601 [-]: CALL      R109 1 2     ; R109 := R109()
1602 [-]: ADD       R6 R107 R108 ; R6 := R107 + R108
1603 [-]: GETGLOBAL R110 K99     ; R110 := 0x20b7f774
1604 [-]: MOVE      R111 R6      ; R111 := R6
1605 [-]: ADD       R112 R107 R109; R112 := R107 + R109
1606 [-]: CALL      R110 3 2     ; R110 := R110(R111,R112)
1607 [-]: MOVE      R7 R110      ; R7 := R110
1608 [-]: GETTABLE  R110 R7 K21  ; R110 := R7["heading"]
1609 [-]: SUB       R110 R110 K57; R110 := R110 - 7.000000
1610 [-]: SETTABLE  R7 K21 R110  ; R7["heading"] := R110
1611 [-]: LOADK     R8 40        ; R8 := 40.000000
1612 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 1619
1613 [-]: JMP       1619         ; PC := 1619
1614 [-]: SELF      R110 R10 K66 ; R111 := R10; R110 := R10[0xc69087f6]
1615 [-]: MOVE      R112 R22     ; R112 := R22
1616 [-]: LOADK     R113 0       ; R113 := 0.000000
1617 [-]: LOADK     R114 2       ; R114 := 2.000000
1618 [-]: CALL      R110 5 1     ; R110(R111,R112,R113,R114)
1619 [-]: GETUPVAL  R110 U15     ; R110 := U15
1620 [-]: TEST      R110 0       ; if not R110 then PC := 2162
1621 [-]: JMP       2162         ; PC := 2162
1622 [-]: EQ        1 R21 K28    ; if R21 == nil then PC := 2162
1623 [-]: JMP       2162         ; PC := 2162
1624 [-]: SELF      R110 R21 K162; R111 := R21; R110 := R21[0x72d56f6b]
1625 [-]: CALL      R110 2 2     ; R110 := R110(R111)
1626 [-]: SELF      R111 R110 K163; R112 := R110; R111 := R110[0x2d90ee66]
1627 [-]: LOADK     R113 17      ; R113 := 17.000000
1628 [-]: CALL      R111 3 1     ; R111(R112,R113)
1629 [-]: LOADBOOL  R111 0 0     ; R111 := false
1630 [-]: SETUPVAL  R111 U15     ; U82 := R15
1631 [-]: JMP       2162         ; PC := 2162
1632 [-]: EQ        0 R0 K2      ; if R0 ~= 1.000000 then PC := 1824
1633 [-]: JMP       1824         ; PC := 1824
1634 [-]: GETGLOBAL R111 K3      ; R111 := 0x7b998233
1635 [-]: GETGLOBAL R112 K164    ; R112 := mSelected
1636 [-]: GETTABLE  R112 R112 K165; R112 := R112["Element"]
1637 [-]: CALL      R111 2 2     ; R111 := R111(R112)
1638 [-]: TEST      R111 1       ; if R111 then PC := 1645
1639 [-]: JMP       1645         ; PC := 1645
1640 [-]: GETGLOBAL R111 K3      ; R111 := 0x7b998233
1641 [-]: GETGLOBAL R112 K164    ; R112 := mSelected
1642 [-]: GETTABLE  R112 R112 K165; R112 := R112["Element"]
1643 [-]: GETTABLE  R112 R112 K166; R112 := R112["mStoreItem"]
1644 [-]: CALL      R111 2 2     ; R111 := R111(R112)
1645 [-]: GETUPVAL  R112 U7      ; R112 := U7
1646 [-]: GETUPVAL  R113 U8      ; R113 := U8
1647 [-]: GETTABLE  R113 R113 K167; R113 := R113["SWAPPING_ITEM"]
1648 [-]: EQ        0 R112 R113  ; if R112 ~= R113 then PC := 1663
1649 [-]: JMP       1663         ; PC := 1663
1650 [-]: GETGLOBAL R112 K3      ; R112 := 0x7b998233
1651 [-]: GETGLOBAL R113 K164    ; R113 := mSelected
1652 [-]: GETTABLE  R113 R113 K168; R113 := R113["Item"]
1653 [-]: CALL      R112 2 2     ; R112 := R112(R113)
1654 [-]: TEST      R112 1       ; if R112 then PC := 1664
1655 [-]: JMP       1664         ; PC := 1664
1656 [-]: GETGLOBAL R112 K3      ; R112 := 0x7b998233
1657 [-]: GETGLOBAL R113 K164    ; R113 := mSelected
1658 [-]: GETTABLE  R113 R113 K168; R113 := R113["Item"]
1659 [-]: GETTABLE  R113 R113 K166; R113 := R113["mStoreItem"]
1660 [-]: CALL      R112 2 2     ; R112 := R112(R113)
1661 [-]: JMP       1664         ; PC := 1664
1662 [-]: LOADBOOL  R112 0 1     ; R112 := false; PC := 1663
1663 [-]: LOADBOOL  R112 1 0     ; R112 := true
1664 [-]: GETUPVAL  R113 U9      ; R113 := U9
1665 [-]: GETUPVAL  R114 U10     ; R114 := U10
1666 [-]: GETTABLE  R114 R114 K89; R114 := R114["UI_MODE_IN_SPACE_SHIP"]
1667 [-]: EQ        1 R113 R114  ; if R113 == R114 then PC := 1720
1668 [-]: JMP       1720         ; PC := 1720
1669 [-]: TEST      R111 0       ; if not R111 then PC := 1720
1670 [-]: JMP       1720         ; PC := 1720
1671 [-]: TEST      R112 0       ; if not R112 then PC := 1720
1672 [-]: JMP       1720         ; PC := 1720
1673 [-]: GETGLOBAL R113 K12     ; R113 := _T
1674 [-]: SETTABLE  R113 K169 K33; R113["mSentinelMode"] := false
1675 [-]: GETGLOBAL R113 K78     ; R113 := 0x5bced4c4
1676 [-]: GETTABLE  R113 R113 K79; R113 := R113[0x3eda26fc]
1677 [-]: GETGLOBAL R114 K78     ; R114 := 0x5bced4c4
1678 [-]: GETTABLE  R114 R114 K80; R114 := R114[0xdde5c6a1]
1679 [-]: GETGLOBAL R115 K12     ; R115 := _T
1680 [-]: GETTABLE  R115 R115 K81; R115 := R115["DEFAULT_SUIT_ROTATION"]
1681 [-]: CALL      R114 2 0     ; R114,... := R114(R115)
1682 [-]: CALL      R113 0 2     ; R113 := R113(R114,...)
1683 [-]: GETGLOBAL R114 K78     ; R114 := 0x5bced4c4
1684 [-]: GETTABLE  R114 R114 K82; R114 := R114[0x00fa6bf1]
1685 [-]: GETGLOBAL R115 K78     ; R115 := 0x5bced4c4
1686 [-]: GETTABLE  R115 R115 K80; R115 := R115[0xdde5c6a1]
1687 [-]: GETGLOBAL R116 K12     ; R116 := _T
1688 [-]: GETTABLE  R116 R116 K81; R116 := R116["DEFAULT_SUIT_ROTATION"]
1689 [-]: CALL      R115 2 0     ; R115,... := R115(R116)
1690 [-]: CALL      R114 0 2     ; R114 := R114(R115,...)
1691 [-]: GETGLOBAL R115 K84     ; R115 := 0xa421af95
1692 [-]: MUL       R116 K113 R113; R116 := 3.500000 * R113
1693 [-]: LOADK     R117 K114    ; R117 := 1.100000
1694 [-]: MUL       R118 K113 R114; R118 := 3.500000 * R114
1695 [-]: CALL      R115 4 2     ; R115 := R115(R116,R117,R118)
1696 [-]: GETGLOBAL R116 K6      ; R116 := mCameraTable
1697 [-]: GETTABLE  R116 R116 K7 ; R116 := R116["rootNodeEntity"]
1698 [-]: SELF      R116 R116 K5 ; R117 := R116; R116 := R116[0xd1586535]
1699 [-]: CALL      R116 2 2     ; R116 := R116(R117)
1700 [-]: ADD       R6 R116 R115 ; R6 := R116 + R115
1701 [-]: GETGLOBAL R116 K84     ; R116 := 0xa421af95
1702 [-]: LOADK     R117 0       ; R117 := 0.000000
1703 [-]: LOADK     R118 K115    ; R118 := 0.900000
1704 [-]: LOADK     R119 0       ; R119 := 0.000000
1705 [-]: CALL      R116 4 2     ; R116 := R116(R117,R118,R119)
1706 [-]: GETGLOBAL R117 K99     ; R117 := 0x20b7f774
1707 [-]: MOVE      R118 R6      ; R118 := R6
1708 [-]: GETGLOBAL R119 K6      ; R119 := mCameraTable
1709 [-]: GETTABLE  R119 R119 K7 ; R119 := R119["rootNodeEntity"]
1710 [-]: SELF      R119 R119 K5 ; R120 := R119; R119 := R119[0xd1586535]
1711 [-]: CALL      R119 2 2     ; R119 := R119(R120)
1712 [-]: ADD       R119 R119 R116; R119 := R119 + R116
1713 [-]: CALL      R117 3 2     ; R117 := R117(R118,R119)
1714 [-]: MOVE      R7 R117      ; R7 := R117
1715 [-]: GETTABLE  R117 R7 K21  ; R117 := R7["heading"]
1716 [-]: SUB       R117 R117 K57; R117 := R117 - 7.000000
1717 [-]: SETTABLE  R7 K21 R117  ; R7["heading"] := R117
1718 [-]: LOADK     R8 35        ; R8 := 35.000000
1719 [-]: JMP       2162         ; PC := 2162
1720 [-]: GETGLOBAL R117 K12     ; R117 := _T
1721 [-]: SETTABLE  R117 K169 K0 ; R117["mSentinelMode"] := true
1722 [-]: GETGLOBAL R117 K3      ; R117 := 0x7b998233
1723 [-]: GETGLOBAL R118 K170    ; R118 := 0x25d99d89
1724 [-]: CALL      R117 2 2     ; R117 := R117(R118)
1725 [-]: TEST      R117 1       ; if R117 then PC := 1819
1726 [-]: JMP       1819         ; PC := 1819
1727 [-]: GETUPVAL  R117 U7      ; R117 := U7
1728 [-]: GETUPVAL  R118 U8      ; R118 := U8
1729 [-]: GETTABLE  R118 R118 K167; R118 := R118["SWAPPING_ITEM"]
1730 [-]: EQ        0 R117 R118  ; if R117 ~= R118 then PC := 1765
1731 [-]: JMP       1765         ; PC := 1765
1732 [-]: GETGLOBAL R117 K3      ; R117 := 0x7b998233
1733 [-]: GETGLOBAL R118 K164    ; R118 := mSelected
1734 [-]: GETTABLE  R118 R118 K168; R118 := R118["Item"]
1735 [-]: CALL      R117 2 2     ; R117 := R117(R118)
1736 [-]: TEST      R117 1       ; if R117 then PC := 1822
1737 [-]: JMP       1822         ; PC := 1822
1738 [-]: LOADNIL   R117 R117    ; R117 := nil
1739 [-]: GETGLOBAL R118 K164    ; R118 := mSelected
1740 [-]: GETTABLE  R118 R118 K168; R118 := R118["Item"]
1741 [-]: GETTABLE  R118 R118 K171; R118 := R118["mPetType"]
1742 [-]: EQ        0 R118 K28   ; if R118 ~= nil then PC := 1758
1743 [-]: JMP       1758         ; PC := 1758
1744 [-]: GETUPVAL  R118 U1      ; R118 := U1
1745 [-]: GETTABLE  R118 R118 K126; R118 := R118[0x06d055f9]
1746 [-]: GETGLOBAL R119 K12     ; R119 := _T
1747 [-]: GETTABLE  R119 R119 K172; R119 := R119["arsenalPetType"]
1748 [-]: EQ        0 R119 K28   ; if R119 ~= nil then PC := 1751
1749 [-]: JMP       1751         ; PC := 1751
1750 [-]: LOADBOOL  R119 0 1     ; R119 := false; PC := 1751
1751 [-]: LOADBOOL  R119 1 0     ; R119 := true
1752 [-]: GETGLOBAL R120 K12     ; R120 := _T
1753 [-]: GETTABLE  R120 R120 K172; R120 := R120["arsenalPetType"]
1754 [-]: LOADK     R121 0       ; R121 := 0.000000
1755 [-]: CALL      R118 4 2     ; R118 := R118(R119,R120,R121)
1756 [-]: MOVE      R117 R118    ; R117 := R118
1757 [-]: JMP       1761         ; PC := 1761
1758 [-]: GETGLOBAL R118 K164    ; R118 := mSelected
1759 [-]: GETTABLE  R118 R118 K168; R118 := R118["Item"]
1760 [-]: GETTABLE  R117 R118 K171; R117 := R118["mPetType"]
1761 [-]: GETUPVAL  R118 U16     ; R118 := U16
1762 [-]: MOVE      R119 R117    ; R119 := R117
1763 [-]: CALL      R118 2 1     ; R118(R119)
1764 [-]: JMP       1822         ; PC := 1822
1765 [-]: GETGLOBAL R118 K170    ; R118 := 0x25d99d89
1766 [-]: SELF      R118 R118 K173; R119 := R118; R118 := R118[0x3c6b0324]
1767 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1768 [-]: TEST      R118 0       ; if not R118 then PC := 1774
1769 [-]: JMP       1774         ; PC := 1774
1770 [-]: GETUPVAL  R118 U16     ; R118 := U16
1771 [-]: LOADK     R119 1       ; R119 := 1.000000
1772 [-]: CALL      R118 2 1     ; R118(R119)
1773 [-]: JMP       1822         ; PC := 1822
1774 [-]: GETGLOBAL R118 K170    ; R118 := 0x25d99d89
1775 [-]: SELF      R118 R118 K174; R119 := R118; R118 := R118[0x9f91f49d]
1776 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1777 [-]: TEST      R118 0       ; if not R118 then PC := 1815
1778 [-]: JMP       1815         ; PC := 1815
1779 [-]: GETGLOBAL R118 K3      ; R118 := 0x7b998233
1780 [-]: MOVE      R119 R13     ; R119 := R13
1781 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1782 [-]: TEST      R118 1       ; if R118 then PC := 1811
1783 [-]: JMP       1811         ; PC := 1811
1784 [-]: GETGLOBAL R118 K3      ; R118 := 0x7b998233
1785 [-]: SELF      R119 R13 K24 ; R120 := R13; R119 := R13[0xde321e6f]
1786 [-]: CALL      R119 2 0     ; R119,... := R119(R120)
1787 [-]: CALL      R118 0 2     ; R118 := R118(R119,...)
1788 [-]: TEST      R118 1       ; if R118 then PC := 1811
1789 [-]: JMP       1811         ; PC := 1811
1790 [-]: GETGLOBAL R118 K3      ; R118 := 0x7b998233
1791 [-]: SELF      R119 R13 K24 ; R120 := R13; R119 := R13[0xde321e6f]
1792 [-]: CALL      R119 2 2     ; R119 := R119(R120)
1793 [-]: SELF      R119 R119 K58; R120 := R119; R119 := R119[0xf7d48ee0]
1794 [-]: CALL      R119 2 0     ; R119,... := R119(R120)
1795 [-]: CALL      R118 0 2     ; R118 := R118(R119,...)
1796 [-]: TEST      R118 1       ; if R118 then PC := 1811
1797 [-]: JMP       1811         ; PC := 1811
1798 [-]: SELF      R118 R13 K24 ; R119 := R13; R118 := R13[0xde321e6f]
1799 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1800 [-]: SELF      R118 R118 K58; R119 := R118; R118 := R118[0xf7d48ee0]
1801 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1802 [-]: SELF      R118 R118 K35; R119 := R118; R118 := R118[0xf2deaf69]
1803 [-]: GETGLOBAL R120 K175    ; R120 := 0xb506ff82
1804 [-]: CALL      R118 3 2     ; R118 := R118(R119,R120)
1805 [-]: TEST      R118 0       ; if not R118 then PC := 1811
1806 [-]: JMP       1811         ; PC := 1811
1807 [-]: GETUPVAL  R118 U16     ; R118 := U16
1808 [-]: LOADK     R119 4       ; R119 := 4.000000
1809 [-]: CALL      R118 2 1     ; R118(R119)
1810 [-]: JMP       1822         ; PC := 1822
1811 [-]: GETUPVAL  R118 U16     ; R118 := U16
1812 [-]: LOADK     R119 3       ; R119 := 3.000000
1813 [-]: CALL      R118 2 1     ; R118(R119)
1814 [-]: JMP       1822         ; PC := 1822
1815 [-]: GETUPVAL  R118 U16     ; R118 := U16
1816 [-]: LOADK     R119 0       ; R119 := 0.000000
1817 [-]: CALL      R118 2 1     ; R118(R119)
1818 [-]: JMP       1822         ; PC := 1822
1819 [-]: GETUPVAL  R118 U16     ; R118 := U16
1820 [-]: LOADK     R119 0       ; R119 := 0.000000
1821 [-]: CALL      R118 2 1     ; R118(R119)
1822 [-]: RETURN    R0 1         ; return 
1823 [-]: JMP       2162         ; PC := 2162
1824 [-]: EQ        0 R0 K27     ; if R0 ~= 4.000000 then PC := 1950
1825 [-]: JMP       1950         ; PC := 1950
1826 [-]: LOADBOOL  R118 1 0     ; R118 := true
1827 [-]: SETUPVAL  R118 U2      ; U82 := R2
1828 [-]: GETGLOBAL R118 K78     ; R118 := 0x5bced4c4
1829 [-]: GETTABLE  R118 R118 K79; R118 := R118[0x3eda26fc]
1830 [-]: GETGLOBAL R119 K78     ; R119 := 0x5bced4c4
1831 [-]: GETTABLE  R119 R119 K80; R119 := R119[0xdde5c6a1]
1832 [-]: GETGLOBAL R120 K12     ; R120 := _T
1833 [-]: GETTABLE  R120 R120 K81; R120 := R120["DEFAULT_SUIT_ROTATION"]
1834 [-]: CALL      R119 2 0     ; R119,... := R119(R120)
1835 [-]: CALL      R118 0 2     ; R118 := R118(R119,...)
1836 [-]: GETGLOBAL R119 K78     ; R119 := 0x5bced4c4
1837 [-]: GETTABLE  R119 R119 K82; R119 := R119[0x00fa6bf1]
1838 [-]: GETGLOBAL R120 K78     ; R120 := 0x5bced4c4
1839 [-]: GETTABLE  R120 R120 K80; R120 := R120[0xdde5c6a1]
1840 [-]: GETGLOBAL R121 K12     ; R121 := _T
1841 [-]: GETTABLE  R121 R121 K81; R121 := R121["DEFAULT_SUIT_ROTATION"]
1842 [-]: CALL      R120 2 0     ; R120,... := R120(R121)
1843 [-]: CALL      R119 0 2     ; R119 := R119(R120,...)
1844 [-]: GETGLOBAL R120 K84     ; R120 := 0xa421af95
1845 [-]: MUL       R121 K113 R118; R121 := 3.500000 * R118
1846 [-]: LOADK     R122 K114    ; R122 := 1.100000
1847 [-]: MUL       R123 K113 R119; R123 := 3.500000 * R119
1848 [-]: CALL      R120 4 2     ; R120 := R120(R121,R122,R123)
1849 [-]: GETGLOBAL R121 K6      ; R121 := mCameraTable
1850 [-]: GETTABLE  R121 R121 K7 ; R121 := R121["rootNodeEntity"]
1851 [-]: SELF      R121 R121 K5 ; R122 := R121; R121 := R121[0xd1586535]
1852 [-]: CALL      R121 2 2     ; R121 := R121(R122)
1853 [-]: ADD       R6 R121 R120 ; R6 := R121 + R120
1854 [-]: GETGLOBAL R121 K84     ; R121 := 0xa421af95
1855 [-]: LOADK     R122 0       ; R122 := 0.000000
1856 [-]: LOADK     R123 K115    ; R123 := 0.900000
1857 [-]: LOADK     R124 0       ; R124 := 0.000000
1858 [-]: CALL      R121 4 2     ; R121 := R121(R122,R123,R124)
1859 [-]: GETGLOBAL R122 K99     ; R122 := 0x20b7f774
1860 [-]: MOVE      R123 R6      ; R123 := R6
1861 [-]: GETGLOBAL R124 K6      ; R124 := mCameraTable
1862 [-]: GETTABLE  R124 R124 K7 ; R124 := R124["rootNodeEntity"]
1863 [-]: SELF      R124 R124 K5 ; R125 := R124; R124 := R124[0xd1586535]
1864 [-]: CALL      R124 2 2     ; R124 := R124(R125)
1865 [-]: ADD       R124 R124 R121; R124 := R124 + R121
1866 [-]: CALL      R122 3 2     ; R122 := R122(R123,R124)
1867 [-]: MOVE      R7 R122      ; R7 := R122
1868 [-]: GETTABLE  R122 R7 K21  ; R122 := R7["heading"]
1869 [-]: SUB       R122 R122 K57; R122 := R122 - 7.000000
1870 [-]: SETTABLE  R7 K21 R122  ; R7["heading"] := R122
1871 [-]: LOADK     R8 35        ; R8 := 35.000000
1872 [-]: GETGLOBAL R122 K164    ; R122 := mSelected
1873 [-]: GETTABLE  R122 R122 K165; R122 := R122["Element"]
1874 [-]: EQ        1 R122 K28   ; if R122 == nil then PC := 2162
1875 [-]: JMP       2162         ; PC := 2162
1876 [-]: GETGLOBAL R122 K3      ; R122 := 0x7b998233
1877 [-]: GETGLOBAL R123 K164    ; R123 := mSelected
1878 [-]: GETTABLE  R123 R123 K165; R123 := R123["Element"]
1879 [-]: GETTABLE  R123 R123 K176; R123 := R123["EquippedItem"]
1880 [-]: CALL      R122 2 2     ; R122 := R122(R123)
1881 [-]: TEST      R122 1       ; if R122 then PC := 2162
1882 [-]: JMP       2162         ; PC := 2162
1883 [-]: SELF      R122 R10 K62 ; R123 := R10; R122 := R10[0xe85a2361]
1884 [-]: LOADK     R124 5       ; R124 := 5.000000
1885 [-]: CALL      R122 3 2     ; R122 := R122(R123,R124)
1886 [-]: GETGLOBAL R123 K3      ; R123 := 0x7b998233
1887 [-]: MOVE      R124 R122    ; R124 := R122
1888 [-]: CALL      R123 2 2     ; R123 := R123(R124)
1889 [-]: TEST      R123 1       ; if R123 then PC := 1899
1890 [-]: JMP       1899         ; PC := 1899
1891 [-]: SELF      R123 R122 K64; R124 := R122; R123 := R122[0xcde10c4a]
1892 [-]: CALL      R123 2 2     ; R123 := R123(R124)
1893 [-]: GETGLOBAL R124 K164    ; R124 := mSelected
1894 [-]: GETTABLE  R124 R124 K165; R124 := R124["Element"]
1895 [-]: GETTABLE  R124 R124 K176; R124 := R124["EquippedItem"]
1896 [-]: GETTABLE  R124 R124 K60; R124 := R124["mItemType"]
1897 [-]: EQ        1 R123 R124  ; if R123 == R124 then PC := 1946
1898 [-]: JMP       1946         ; PC := 1946
1899 [-]: SELF      R123 R10 K29 ; R124 := R10; R123 := R10[0xf596420f]
1900 [-]: CALL      R123 2 1     ; R123(R124)
1901 [-]: SELF      R123 R10 K177; R124 := R10; R123 := R10[0x1d2dfe4a]
1902 [-]: GETGLOBAL R125 K170    ; R125 := 0x25d99d89
1903 [-]: SELF      R125 R125 K178; R126 := R125; R125 := R125[0x62c81b76]
1904 [-]: CALL      R125 2 2     ; R125 := R125(R126)
1905 [-]: LOADK     R126 4       ; R126 := 4.000000
1906 [-]: CALL      R123 4 1     ; R123(R124,R125,R126)
1907 [-]: GETGLOBAL R123 K86     ; R123 := 0x89326c93
1908 [-]: SELF      R123 R123 K179; R124 := R123; R123 := R123[0x18d05d30]
1909 [-]: CALL      R123 2 2     ; R123 := R123(R124)
1910 [-]: TEST      R123 1       ; if R123 then PC := 1917
1911 [-]: JMP       1917         ; PC := 1917
1912 [-]: SELF      R123 R10 K66 ; R124 := R10; R123 := R10[0xc69087f6]
1913 [-]: LOADK     R125 5       ; R125 := 5.000000
1914 [-]: LOADK     R126 0       ; R126 := 0.000000
1915 [-]: LOADK     R127 2       ; R127 := 2.000000
1916 [-]: CALL      R123 5 1     ; R123(R124,R125,R126,R127)
1917 [-]: SELF      R123 R9 K180 ; R124 := R9; R123 := R9[0xc1595bd5]
1918 [-]: GETGLOBAL R125 K181    ; R125 := 0xd0550e92
1919 [-]: CALL      R123 3 2     ; R123 := R123(R124,R125)
1920 [-]: LOADK     R124 1       ; R124 := 1.000000
1921 [-]: LEN       R125 R123    ; R125 := # R123
1922 [-]: LOADK     R126 1       ; R126 := 1.000000
1923 [-]: FORPREP   R124 1928    ; R124 -= R126; PC := 1928
1924 [-]: GETGLOBAL R128 K86     ; R128 := 0x89326c93
1925 [-]: SELF      R128 R128 K182; R129 := R128; R128 := R128[0x59c96e77]
1926 [-]: GETTABLE  R130 R123 R127; R130 := R123[R127]
1927 [-]: CALL      R128 3 1     ; R128(R129,R130)
1928 [-]: FORLOOP   R124 1924    ; R124 += R126; if R124 <= R125 then begin PC := 1924; R127 := R124 end
1929 [-]: GETGLOBAL R128 K183    ; R128 := mPvpTeams
1930 [-]: GETTABLE  R128 R128 K30; R128 := R128["Current"]
1931 [-]: EQ        1 R128 K2    ; if R128 == 1.000000 then PC := 1940
1932 [-]: JMP       1940         ; PC := 1940
1933 [-]: GETUPVAL  R128 U10     ; R128 := U10
1934 [-]: GETTABLE  R128 R128 K184; R128 := R128[0xa99c33fd]
1935 [-]: MOVE      R129 R9      ; R129 := R9
1936 [-]: GETGLOBAL R130 K183    ; R130 := mPvpTeams
1937 [-]: GETTABLE  R130 R130 K30; R130 := R130["Current"]
1938 [-]: SUB       R130 R130 K2 ; R130 := R130 - 1.000000
1939 [-]: CALL      R128 3 1     ; R128(R129,R130)
1940 [-]: GETGLOBAL R128 K185    ; R128 := 0xb009bbc6
1941 [-]: LOADK     R129 K186    ; R129 := "/Lotus/Upgrades/Skins/PvP/Lunaro/LunaroTeamArmband"
1942 [-]: CALL      R128 2 2     ; R128 := R128(R129)
1943 [-]: SELF      R129 R10 K187; R130 := R10; R129 := R10[0x599a8e07]
1944 [-]: MOVE      R131 R128    ; R131 := R128
1945 [-]: CALL      R129 3 1     ; R129(R130,R131)
1946 [-]: SELF      R129 R9 K188 ; R130 := R9; R129 := R9[0x0aebaa10]
1947 [-]: GETGLOBAL R131 K189    ; R131 := 0x80cbdfd6
1948 [-]: CALL      R129 3 1     ; R129(R130,R131)
1949 [-]: JMP       2162         ; PC := 2162
1950 [-]: EQ        0 R0 K57     ; if R0 ~= 7.000000 then PC := 2000
1951 [-]: JMP       2000         ; PC := 2000
1952 [-]: GETGLOBAL R129 K12     ; R129 := _T
1953 [-]: SETTABLE  R129 K169 K33; R129["mSentinelMode"] := false
1954 [-]: GETGLOBAL R129 K78     ; R129 := 0x5bced4c4
1955 [-]: GETTABLE  R129 R129 K79; R129 := R129[0x3eda26fc]
1956 [-]: GETGLOBAL R130 K78     ; R130 := 0x5bced4c4
1957 [-]: GETTABLE  R130 R130 K80; R130 := R130[0xdde5c6a1]
1958 [-]: GETGLOBAL R131 K12     ; R131 := _T
1959 [-]: GETTABLE  R131 R131 K81; R131 := R131["DEFAULT_SUIT_ROTATION"]
1960 [-]: CALL      R130 2 0     ; R130,... := R130(R131)
1961 [-]: CALL      R129 0 2     ; R129 := R129(R130,...)
1962 [-]: GETGLOBAL R130 K78     ; R130 := 0x5bced4c4
1963 [-]: GETTABLE  R130 R130 K82; R130 := R130[0x00fa6bf1]
1964 [-]: GETGLOBAL R131 K78     ; R131 := 0x5bced4c4
1965 [-]: GETTABLE  R131 R131 K80; R131 := R131[0xdde5c6a1]
1966 [-]: GETGLOBAL R132 K12     ; R132 := _T
1967 [-]: GETTABLE  R132 R132 K81; R132 := R132["DEFAULT_SUIT_ROTATION"]
1968 [-]: CALL      R131 2 0     ; R131,... := R131(R132)
1969 [-]: CALL      R130 0 2     ; R130 := R130(R131,...)
1970 [-]: SELF      R131 R9 K90  ; R132 := R9; R131 := R9[0x003c792f]
1971 [-]: GETGLOBAL R133 K91     ; R133 := 0x0469f296
1972 [-]: LOADK     R134 K124    ; R134 := "GAME_R1_WEAPON1"
1973 [-]: CALL      R133 2 0     ; R133,... := R133(R134)
1974 [-]: CALL      R131 0 2     ; R131 := R131(R132,...)
1975 [-]: GETGLOBAL R132 K84     ; R132 := 0xa421af95
1976 [-]: MUL       R133 K128 R129; R133 := 1.450000 * R129
1977 [-]: LOADK     R134 0       ; R134 := 0.000000
1978 [-]: MUL       R135 K128 R130; R135 := 1.450000 * R130
1979 [-]: CALL      R132 4 2     ; R132 := R132(R133,R134,R135)
1980 [-]: ADD       R6 R131 R132 ; R6 := R131 + R132
1981 [-]: GETGLOBAL R133 K84     ; R133 := 0xa421af95
1982 [-]: CALL      R133 1 2     ; R133 := R133()
1983 [-]: GETGLOBAL R134 K99     ; R134 := 0x20b7f774
1984 [-]: MOVE      R135 R6      ; R135 := R6
1985 [-]: ADD       R136 R131 R133; R136 := R131 + R133
1986 [-]: CALL      R134 3 2     ; R134 := R134(R135,R136)
1987 [-]: MOVE      R7 R134      ; R7 := R134
1988 [-]: GETTABLE  R134 R7 K21  ; R134 := R7["heading"]
1989 [-]: SUB       R134 R134 K38; R134 := R134 - 5.000000
1990 [-]: SETTABLE  R7 K21 R134  ; R7["heading"] := R134
1991 [-]: LOADK     R8 45        ; R8 := 45.000000
1992 [-]: EQ        1 R11 R21    ; if R11 == R21 then PC := 2162
1993 [-]: JMP       2162         ; PC := 2162
1994 [-]: SELF      R134 R10 K66 ; R135 := R10; R134 := R10[0xc69087f6]
1995 [-]: MOVE      R136 R22     ; R136 := R22
1996 [-]: LOADK     R137 0       ; R137 := 0.000000
1997 [-]: LOADK     R138 2       ; R138 := 2.000000
1998 [-]: CALL      R134 5 1     ; R134(R135,R136,R137,R138)
1999 [-]: JMP       2162         ; PC := 2162
2000 [-]: EQ        0 R0 K48     ; if R0 ~= 8.000000 then PC := 2091
2001 [-]: JMP       2091         ; PC := 2091
2002 [-]: GETGLOBAL R134 K78     ; R134 := 0x5bced4c4
2003 [-]: GETTABLE  R134 R134 K79; R134 := R134[0x3eda26fc]
2004 [-]: GETGLOBAL R135 K78     ; R135 := 0x5bced4c4
2005 [-]: GETTABLE  R135 R135 K80; R135 := R135[0xdde5c6a1]
2006 [-]: GETGLOBAL R136 K12     ; R136 := _T
2007 [-]: GETTABLE  R136 R136 K147; R136 := R136["ARCHWING_DEFAULT_ROTATION"]
2008 [-]: CALL      R135 2 0     ; R135,... := R135(R136)
2009 [-]: CALL      R134 0 2     ; R134 := R134(R135,...)
2010 [-]: GETGLOBAL R135 K78     ; R135 := 0x5bced4c4
2011 [-]: GETTABLE  R135 R135 K82; R135 := R135[0x00fa6bf1]
2012 [-]: GETGLOBAL R136 K78     ; R136 := 0x5bced4c4
2013 [-]: GETTABLE  R136 R136 K80; R136 := R136[0xdde5c6a1]
2014 [-]: GETGLOBAL R137 K12     ; R137 := _T
2015 [-]: GETTABLE  R137 R137 K147; R137 := R137["ARCHWING_DEFAULT_ROTATION"]
2016 [-]: CALL      R136 2 0     ; R136,... := R136(R137)
2017 [-]: CALL      R135 0 2     ; R135 := R135(R136,...)
2018 [-]: GETGLOBAL R136 K84     ; R136 := 0xa421af95
2019 [-]: MUL       R137 K148 R134; R137 := 3.750000 * R134
2020 [-]: LOADK     R138 0       ; R138 := 0.750000
2021 [-]: MUL       R139 K190 R135; R139 := 6.750000 * R135
2022 [-]: CALL      R136 4 2     ; R136 := R136(R137,R138,R139)
2023 [-]: GETGLOBAL R137 K6      ; R137 := mCameraTable
2024 [-]: GETTABLE  R137 R137 K7 ; R137 := R137["rootNodeEntity"]
2025 [-]: SELF      R137 R137 K5 ; R138 := R137; R137 := R137[0xd1586535]
2026 [-]: CALL      R137 2 2     ; R137 := R137(R138)
2027 [-]: GETGLOBAL R138 K3      ; R138 := 0x7b998233
2028 [-]: GETGLOBAL R139 K12     ; R139 := _T
2029 [-]: GETTABLE  R139 R139 K49; R139 := R139["MechAvatar"]
2030 [-]: CALL      R138 2 2     ; R138 := R138(R139)
2031 [-]: TEST      R138 1       ; if R138 then PC := 2044
2032 [-]: JMP       2044         ; PC := 2044
2033 [-]: GETGLOBAL R138 K12     ; R138 := _T
2034 [-]: GETTABLE  R138 R138 K49; R138 := R138["MechAvatar"]
2035 [-]: SELF      R138 R138 K5 ; R139 := R138; R138 := R138[0xd1586535]
2036 [-]: CALL      R138 2 2     ; R138 := R138(R139)
2037 [-]: GETGLOBAL R139 K84     ; R139 := 0xa421af95
2038 [-]: LOADK     R140 0       ; R140 := 0.000000
2039 [-]: LOADK     R141 2       ; R141 := 2.000000
2040 [-]: LOADK     R142 0       ; R142 := 0.000000
2041 [-]: CALL      R139 4 2     ; R139 := R139(R140,R141,R142)
2042 [-]: ADD       R137 R138 R139; R137 := R138 + R139
2043 [-]: JMP       2061         ; PC := 2061
2044 [-]: GETUPVAL  R138 U14     ; R138 := U14
2045 [-]: GETTABLE  R138 R138 K149; R138 := R138[0x09b8fbee]
2046 [-]: MOVE      R139 R137    ; R139 := R137
2047 [-]: CALL      R138 2 2     ; R138 := R138(R139)
2048 [-]: GETGLOBAL R139 K3      ; R139 := 0x7b998233
2049 [-]: MOVE      R140 R138    ; R140 := R138
2050 [-]: CALL      R139 2 2     ; R139 := R139(R140)
2051 [-]: TEST      R139 1       ; if R139 then PC := 2061
2052 [-]: JMP       2061         ; PC := 2061
2053 [-]: SELF      R139 R138 K5 ; R140 := R138; R139 := R138[0xd1586535]
2054 [-]: CALL      R139 2 2     ; R139 := R139(R140)
2055 [-]: GETGLOBAL R140 K84     ; R140 := 0xa421af95
2056 [-]: LOADK     R141 0       ; R141 := 0.000000
2057 [-]: LOADK     R142 2       ; R142 := 2.000000
2058 [-]: LOADK     R143 -3      ; R143 := -3.000000
2059 [-]: CALL      R140 4 2     ; R140 := R140(R141,R142,R143)
2060 [-]: ADD       R137 R139 R140; R137 := R139 + R140
2061 [-]: ADD       R6 R137 R136 ; R6 := R137 + R136
2062 [-]: GETGLOBAL R139 K84     ; R139 := 0xa421af95
2063 [-]: LOADK     R140 0       ; R140 := 0.250000
2064 [-]: LOADK     R141 K152    ; R141 := 0.200000
2065 [-]: LOADK     R142 K153    ; R142 := -0.300000
2066 [-]: CALL      R139 4 2     ; R139 := R139(R140,R141,R142)
2067 [-]: GETUPVAL  R140 U9      ; R140 := U9
2068 [-]: GETUPVAL  R141 U10     ; R141 := U10
2069 [-]: GETTABLE  R141 R141 K89; R141 := R141["UI_MODE_IN_SPACE_SHIP"]
2070 [-]: EQ        0 R140 R141  ; if R140 ~= R141 then PC := 2074
2071 [-]: JMP       2074         ; PC := 2074
2072 [-]: SETTABLE  R139 K154 K153; R139["x"] := -0.300000
2073 [-]: JMP       2084         ; PC := 2084
2074 [-]: GETUPVAL  R140 U10     ; R140 := U10
2075 [-]: GETTABLE  R140 R140 K155; R140 := R140[0xcf1fcba4]
2076 [-]: CALL      R140 1 2     ; R140 := R140()
2077 [-]: TEST      R140 0       ; if not R140 then PC := 2083
2078 [-]: JMP       2083         ; PC := 2083
2079 [-]: SETTABLE  R139 K154 K112; R139["x"] := 0.300000
2080 [-]: SETTABLE  R139 K156 K157; R139["z"] := -1.000000
2081 [-]: SETTABLE  R139 K93 K158; R139["y"] := -0.100000
2082 [-]: JMP       2084         ; PC := 2084
2083 [-]: SETTABLE  R139 K154 K153; R139["x"] := -0.300000
2084 [-]: GETGLOBAL R140 K99     ; R140 := 0x20b7f774
2085 [-]: MOVE      R141 R6      ; R141 := R6
2086 [-]: ADD       R142 R137 R139; R142 := R137 + R139
2087 [-]: CALL      R140 3 2     ; R140 := R140(R141,R142)
2088 [-]: MOVE      R7 R140      ; R7 := R140
2089 [-]: LOADK     R8 35        ; R8 := 35.000000
2090 [-]: JMP       2162         ; PC := 2162
2091 [-]: GETUPVAL  R140 U9      ; R140 := U9
2092 [-]: GETUPVAL  R141 U10     ; R141 := U10
2093 [-]: GETTABLE  R141 R141 K89; R141 := R141["UI_MODE_IN_SPACE_SHIP"]
2094 [-]: EQ        1 R140 R141  ; if R140 == R141 then PC := 2116
2095 [-]: JMP       2116         ; PC := 2116
2096 [-]: GETGLOBAL R140 K12     ; R140 := _T
2097 [-]: GETTABLE  R140 R140 K169; R140 := R140["mSentinelMode"]
2098 [-]: TEST      R140 0       ; if not R140 then PC := 2116
2099 [-]: JMP       2116         ; PC := 2116
2100 [-]: GETGLOBAL R140 K3      ; R140 := 0x7b998233
2101 [-]: GETGLOBAL R141 K12     ; R141 := _T
2102 [-]: GETTABLE  R141 R141 K52; R141 := R141["suitTable"]
2103 [-]: CALL      R140 2 2     ; R140 := R140(R141)
2104 [-]: TEST      R140 1       ; if R140 then PC := 2116
2105 [-]: JMP       2116         ; PC := 2116
2106 [-]: GETGLOBAL R140 K12     ; R140 := _T
2107 [-]: GETTABLE  R140 R140 K52; R140 := R140["suitTable"]
2108 [-]: GETGLOBAL R141 K12     ; R141 := _T
2109 [-]: GETTABLE  R141 R141 K81; R141 := R141["DEFAULT_SUIT_ROTATION"]
2110 [-]: SETTABLE  R140 K191 R141; R140["desiredRot"] := R141
2111 [-]: GETGLOBAL R140 K12     ; R140 := _T
2112 [-]: GETTABLE  R140 R140 K52; R140 := R140["suitTable"]
2113 [-]: GETGLOBAL R141 K12     ; R141 := _T
2114 [-]: GETTABLE  R141 R141 K81; R141 := R141["DEFAULT_SUIT_ROTATION"]
2115 [-]: SETTABLE  R140 K192 R141; R140["lerpRot"] := R141
2116 [-]: GETGLOBAL R140 K12     ; R140 := _T
2117 [-]: SETTABLE  R140 K169 K33; R140["mSentinelMode"] := false
2118 [-]: GETGLOBAL R140 K78     ; R140 := 0x5bced4c4
2119 [-]: GETTABLE  R140 R140 K79; R140 := R140[0x3eda26fc]
2120 [-]: GETGLOBAL R141 K78     ; R141 := 0x5bced4c4
2121 [-]: GETTABLE  R141 R141 K80; R141 := R141[0xdde5c6a1]
2122 [-]: GETGLOBAL R142 K12     ; R142 := _T
2123 [-]: GETTABLE  R142 R142 K81; R142 := R142["DEFAULT_SUIT_ROTATION"]
2124 [-]: CALL      R141 2 0     ; R141,... := R141(R142)
2125 [-]: CALL      R140 0 2     ; R140 := R140(R141,...)
2126 [-]: GETGLOBAL R141 K78     ; R141 := 0x5bced4c4
2127 [-]: GETTABLE  R141 R141 K82; R141 := R141[0x00fa6bf1]
2128 [-]: GETGLOBAL R142 K78     ; R142 := 0x5bced4c4
2129 [-]: GETTABLE  R142 R142 K80; R142 := R142[0xdde5c6a1]
2130 [-]: GETGLOBAL R143 K12     ; R143 := _T
2131 [-]: GETTABLE  R143 R143 K81; R143 := R143["DEFAULT_SUIT_ROTATION"]
2132 [-]: CALL      R142 2 0     ; R142,... := R142(R143)
2133 [-]: CALL      R141 0 2     ; R141 := R141(R142,...)
2134 [-]: GETGLOBAL R142 K84     ; R142 := 0xa421af95
2135 [-]: MUL       R143 K113 R140; R143 := 3.500000 * R140
2136 [-]: LOADK     R144 K114    ; R144 := 1.100000
2137 [-]: MUL       R145 K113 R141; R145 := 3.500000 * R141
2138 [-]: CALL      R142 4 2     ; R142 := R142(R143,R144,R145)
2139 [-]: GETGLOBAL R143 K6      ; R143 := mCameraTable
2140 [-]: GETTABLE  R143 R143 K7 ; R143 := R143["rootNodeEntity"]
2141 [-]: SELF      R143 R143 K5 ; R144 := R143; R143 := R143[0xd1586535]
2142 [-]: CALL      R143 2 2     ; R143 := R143(R144)
2143 [-]: ADD       R6 R143 R142 ; R6 := R143 + R142
2144 [-]: GETGLOBAL R143 K84     ; R143 := 0xa421af95
2145 [-]: LOADK     R144 0       ; R144 := 0.000000
2146 [-]: LOADK     R145 K115    ; R145 := 0.900000
2147 [-]: LOADK     R146 0       ; R146 := 0.000000
2148 [-]: CALL      R143 4 2     ; R143 := R143(R144,R145,R146)
2149 [-]: GETGLOBAL R144 K99     ; R144 := 0x20b7f774
2150 [-]: MOVE      R145 R6      ; R145 := R6
2151 [-]: GETGLOBAL R146 K6      ; R146 := mCameraTable
2152 [-]: GETTABLE  R146 R146 K7 ; R146 := R146["rootNodeEntity"]
2153 [-]: SELF      R146 R146 K5 ; R147 := R146; R146 := R146[0xd1586535]
2154 [-]: CALL      R146 2 2     ; R146 := R146(R147)
2155 [-]: ADD       R146 R146 R143; R146 := R146 + R143
2156 [-]: CALL      R144 3 2     ; R144 := R144(R145,R146)
2157 [-]: MOVE      R7 R144      ; R7 := R144
2158 [-]: GETTABLE  R144 R7 K21  ; R144 := R7["heading"]
2159 [-]: SUB       R144 R144 K57; R144 := R144 - 7.000000
2160 [-]: SETTABLE  R7 K21 R144  ; R7["heading"] := R144
2161 [-]: LOADK     R8 35        ; R8 := 35.000000
2162 [-]: SELF      R144 R9 K193 ; R145 := R9; R144 := R9[0x30eb0cc3]
2163 [-]: LOADK     R146 0       ; R146 := 0.000000
2164 [-]: LOADBOOL  R147 0 0     ; R147 := false
2165 [-]: CALL      R144 4 1     ; R144(R145,R146,R147)
2166 [-]: TEST      R19 1        ; if R19 then PC := 2178
2167 [-]: JMP       2178         ; PC := 2178
2168 [-]: GETGLOBAL R144 K3      ; R144 := 0x7b998233
2169 [-]: MOVE      R145 R11     ; R145 := R11
2170 [-]: CALL      R144 2 2     ; R144 := R144(R145)
2171 [-]: TEST      R144 1       ; if R144 then PC := 2183
2172 [-]: JMP       2183         ; PC := 2183
2173 [-]: SELF      R144 R11 K35 ; R145 := R11; R144 := R11[0xf2deaf69]
2174 [-]: GETGLOBAL R146 K77     ; R146 := gLotusMeleeWeaponType
2175 [-]: CALL      R144 3 2     ; R144 := R144(R145,R146)
2176 [-]: TEST      R144 0       ; if not R144 then PC := 2183
2177 [-]: JMP       2183         ; PC := 2183
2178 [-]: GETUPVAL  R144 U13     ; R144 := U13
2179 [-]: MOVE      R145 R9      ; R145 := R9
2180 [-]: MOVE      R146 R0      ; R146 := R0
2181 [-]: MOVE      R147 R1      ; R147 := R1
2182 [-]: CALL      R144 4 1     ; R144(R145,R146,R147)
2183 [-]: LOADBOOL  R144 1 0     ; R144 := true
2184 [-]: GETUPVAL  R145 U14     ; R145 := U14
2185 [-]: GETTABLE  R145 R145 K149; R145 := R145[0x09b8fbee]
2186 [-]: SELF      R146 R9 K5   ; R147 := R9; R146 := R9[0xd1586535]
2187 [-]: CALL      R146 2 0     ; R146,... := R146(R147)
2188 [-]: CALL      R145 0 2     ; R145 := R145(R146,...)
2189 [-]: EQ        1 R0 K31     ; if R0 == 2.000000 then PC := 2193
2190 [-]: JMP       2193         ; PC := 2193
2191 [-]: EQ        0 R0 K40     ; if R0 ~= 6.000000 then PC := 2210
2192 [-]: JMP       2210         ; PC := 2210
2193 [-]: GETUPVAL  R146 U9      ; R146 := U9
2194 [-]: GETUPVAL  R147 U10     ; R147 := U10
2195 [-]: GETTABLE  R147 R147 K89; R147 := R147["UI_MODE_IN_SPACE_SHIP"]
2196 [-]: EQ        0 R146 R147  ; if R146 ~= R147 then PC := 2210
2197 [-]: JMP       2210         ; PC := 2210
2198 [-]: GETGLOBAL R146 K3      ; R146 := 0x7b998233
2199 [-]: MOVE      R147 R145    ; R147 := R145
2200 [-]: CALL      R146 2 2     ; R146 := R146(R147)
2201 [-]: TEST      R146 1       ; if R146 then PC := 2210
2202 [-]: JMP       2210         ; PC := 2210
2203 [-]: GETGLOBAL R146 K6      ; R146 := mCameraTable
2204 [-]: GETTABLE  R146 R146 K8 ; R146 := R146["cameraTag"]
2205 [-]: GETUPVAL  R147 U0      ; R147 := U0
2206 [-]: GETTABLE  R147 R147 K194; R147 := R147["ARCHWING_CAMERA"]
2207 [-]: EQ        1 R146 R147  ; if R146 == R147 then PC := 2210
2208 [-]: JMP       2210         ; PC := 2210
2209 [-]: LOADBOOL  R144 0 0     ; R144 := false
2210 [-]: TEST      R144 0       ; if not R144 then PC := 2308
2211 [-]: JMP       2308         ; PC := 2308
2212 [-]: LOADBOOL  R146 0 0     ; R146 := false
2213 [-]: LOADBOOL  R147 0 0     ; R147 := false
2214 [-]: GETGLOBAL R148 K3      ; R148 := 0x7b998233
2215 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2216 [-]: GETTABLE  R149 R149 K10; R149 := R149["camera"]
2217 [-]: CALL      R148 2 2     ; R148 := R148(R149)
2218 [-]: TEST      R148 1       ; if R148 then PC := 2258
2219 [-]: JMP       2258         ; PC := 2258
2220 [-]: GETGLOBAL R148 K6      ; R148 := mCameraTable
2221 [-]: GETTABLE  R148 R148 K10; R148 := R148["camera"]
2222 [-]: SELF      R148 R148 K5 ; R149 := R148; R148 := R148[0xd1586535]
2223 [-]: CALL      R148 2 2     ; R148 := R148(R149)
2224 [-]: GETGLOBAL R149 K195    ; R149 := 0x03ea2485
2225 [-]: MOVE      R150 R148    ; R150 := R148
2226 [-]: MOVE      R151 R6      ; R151 := R6
2227 [-]: CALL      R149 3 2     ; R149 := R149(R150,R151)
2228 [-]: LT        1 K138 R149  ; if 10.000000 < R149 then PC := 2231
2229 [-]: JMP       2231         ; PC := 2231
2230 [-]: LOADBOOL  R146 0 1     ; R146 := false; PC := 2231
2231 [-]: LOADBOOL  R146 1 0     ; R146 := true
2232 [-]: GETGLOBAL R149 K3      ; R149 := 0x7b998233
2233 [-]: GETGLOBAL R150 K6      ; R150 := mCameraTable
2234 [-]: GETTABLE  R150 R150 K196; R150 := R150["destRot"]
2235 [-]: CALL      R149 2 2     ; R149 := R149(R150)
2236 [-]: TEST      R149 1       ; if R149 then PC := 2256
2237 [-]: JMP       2256         ; PC := 2256
2238 [-]: GETGLOBAL R149 K3      ; R149 := 0x7b998233
2239 [-]: MOVE      R150 R7      ; R150 := R7
2240 [-]: CALL      R149 2 2     ; R149 := R149(R150)
2241 [-]: TEST      R149 1       ; if R149 then PC := 2256
2242 [-]: JMP       2256         ; PC := 2256
2243 [-]: GETGLOBAL R149 K197    ; R149 := 0xbf52f20f
2244 [-]: GETGLOBAL R150 K95     ; R150 := 0xf6c6e505
2245 [-]: GETGLOBAL R151 K6      ; R151 := mCameraTable
2246 [-]: GETTABLE  R151 R151 K10; R151 := R151["camera"]
2247 [-]: SELF      R151 R151 K16; R152 := R151; R151 := R151[0xcb3851b8]
2248 [-]: CALL      R151 2 0     ; R151,... := R151(R152)
2249 [-]: CALL      R150 0 2     ; R150 := R150(R151,...)
2250 [-]: GETGLOBAL R151 K95     ; R151 := 0xf6c6e505
2251 [-]: MOVE      R152 R7      ; R152 := R7
2252 [-]: CALL      R151 2 0     ; R151,... := R151(R152)
2253 [-]: CALL      R149 0 2     ; R149 := R149(R150,...)
2254 [-]: LT        1 K198 R149  ; if 120.000000 < R149 then PC := 2257
2255 [-]: JMP       2257         ; PC := 2257
2256 [-]: LOADBOOL  R147 0 1     ; R147 := false; PC := 2257
2257 [-]: LOADBOOL  R147 1 0     ; R147 := true
2258 [-]: TEST      R146 1       ; if R146 then PC := 2262
2259 [-]: JMP       2262         ; PC := 2262
2260 [-]: TEST      R147 0       ; if not R147 then PC := 2265
2261 [-]: JMP       2265         ; PC := 2265
2262 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2263 [-]: SETTABLE  R149 K199 K200; R149["LerpScale"] := 1000.000000
2264 [-]: JMP       2267         ; PC := 2267
2265 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2266 [-]: SETTABLE  R149 K199 K31; R149["LerpScale"] := 2.000000
2267 [-]: TEST      R3 1         ; if R3 then PC := 2287
2268 [-]: JMP       2287         ; PC := 2287
2269 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2270 [-]: GETUPVAL  R150 U14     ; R150 := U14
2271 [-]: GETTABLE  R150 R150 K202; R150 := R150[0x9598c404]
2272 [-]: CALL      R150 1 2     ; R150 := R150()
2273 [-]: NOT       R150 R150    ; R150 := not R150
2274 [-]: SETTABLE  R149 K201 R150; R149["ConstantUpdate"] := R150
2275 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2276 [-]: GETTABLE  R149 R149 K201; R149 := R149["ConstantUpdate"]
2277 [-]: TEST      R149 0       ; if not R149 then PC := 2287
2278 [-]: JMP       2287         ; PC := 2287
2279 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2280 [-]: SETTABLE  R149 K203 K54; R149["currZoom"] := 0.000000
2281 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2282 [-]: SETTABLE  R149 K204 K54; R149["clampedPan"] := 0.000000
2283 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2284 [-]: GETGLOBAL R150 K6      ; R150 := mCameraTable
2285 [-]: GETTABLE  R150 R150 K206; R150 := R150["DefaultPan"]
2286 [-]: SETTABLE  R149 K205 R150; R149["currPan"] := R150
2287 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2288 [-]: SETTABLE  R149 K207 K28; R149["forward"] := nil
2289 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2290 [-]: SETTABLE  R149 K208 R6 ; R149["destPos"] := R6
2291 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2292 [-]: GETTABLE  R149 R149 K201; R149 := R149["ConstantUpdate"]
2293 [-]: TEST      R149 1       ; if R149 then PC := 2298
2294 [-]: JMP       2298         ; PC := 2298
2295 [-]: GETUPVAL  R149 U14     ; R149 := U14
2296 [-]: GETTABLE  R149 R149 K209; R149 := R149[0x7027aec6]
2297 [-]: CALL      R149 1 1     ; R149()
2298 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2299 [-]: SETTABLE  R149 K196 R7 ; R149["destRot"] := R7
2300 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2301 [-]: GETGLOBAL R150 K20     ; R150 := 0x00046924
2302 [-]: CALL      R150 1 2     ; R150 := R150()
2303 [-]: SETTABLE  R149 K210 R150; R149["biasRot"] := R150
2304 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2305 [-]: SETTABLE  R149 K211 K2 ; R149["attenFov"] := 1.000000
2306 [-]: GETGLOBAL R149 K6      ; R149 := mCameraTable
2307 [-]: SETTABLE  R149 K212 R8 ; R149["destFov"] := R8
2308 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 2077
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mLists
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R0 K1        ; R0 := mLists
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mCosmeticsList"]
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x7c09c373]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: GETGLOBAL R0 K1        ; R0 := mLists
 12 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mCosmeticsList"]
 13 [-]: SETTABLE  R0 K4 K5     ; R0["mLastFocused"] := nil
 14 [-]: GETGLOBAL R0 K6        ; R0 := 0xae91e43b
 15 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xaade900e]
 16 [-]: LOADK     R2 K8        ; R2 := "CosmeticsMenu"
 17 [-]: LOADK     R3 11        ; R3 := 11.000000
 18 [-]: LOADBOOL  R4 0 0       ; R4 := false
 19 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 20 [-]: GETGLOBAL R0 K6        ; R0 := 0xae91e43b
 21 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xaade900e]
 22 [-]: LOADK     R2 K9        ; R2 := "CosmeticsMenuScrollBar"
 23 [-]: LOADK     R3 11        ; R3 := 11.000000
 24 [-]: LOADBOOL  R4 0 0       ; R4 := false
 25 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 26 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 2087
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["MenuSuitAvatar"]
  3 [-]: EQ        0 R0 K3      ; if R0 ~= 8.000000 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETGLOBAL R3 K0        ; R3 := _T
  6 [-]: GETTABLE  R2 R3 K4     ; R2 := R3["MechAvatar"]
  7 [-]: EQ        0 R1 K5      ; if R1 ~= 0.000000 then PC := 68
  8 [-]: JMP       68           ; PC := 68
  9 [-]: EQ        0 R0 K6      ; if R0 ~= 1.000000 then PC := 24
 10 [-]: JMP       24           ; PC := 24
 11 [-]: GETGLOBAL R3 K0        ; R3 := _T
 12 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MenuSentinel"]
 13 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: TEST      R4 1         ; if R4 then PC := 142
 17 [-]: JMP       142          ; PC := 142
 18 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xde321e6f]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf7d48ee0]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: RETURN    R4 2         ; return R4
 23 [-]: JMP       142          ; PC := 142
 24 [-]: EQ        0 R0 K11     ; if R0 ~= 6.000000 then PC := 40
 25 [-]: JMP       40           ; PC := 40
 26 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 27 [-]: GETGLOBAL R5 K0        ; R5 := _T
 28 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["KDriveAvatar"]
 29 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 30 [-]: TEST      R4 1         ; if R4 then PC := 142
 31 [-]: JMP       142          ; PC := 142
 32 [-]: GETGLOBAL R4 K0        ; R4 := _T
 33 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["KDriveAvatar"]
 34 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0xde321e6f]
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf7d48ee0]
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: RETURN    R4 2         ; return R4
 39 [-]: JMP       142          ; PC := 142
 40 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 41 [-]: MOVE      R5 R2        ; R5 := R2
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: TEST      R4 1         ; if R4 then PC := 142
 44 [-]: JMP       142          ; PC := 142
 45 [-]: EQ        0 R0 K13     ; if R0 ~= 2.000000 then PC := 53
 46 [-]: JMP       53           ; PC := 53
 47 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x2303a280]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: RETURN    R4 2         ; return R4
 52 [-]: JMP       142          ; PC := 142
 53 [-]: EQ        0 R0 K15     ; if R0 ~= 7.000000 then PC := 62
 54 [-]: JMP       62           ; PC := 62
 55 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe85a2361]
 58 [-]: LOADK     R6 11        ; R6 := 11.000000
 59 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 60 [-]: RETURN    R4 2         ; return R4
 61 [-]: JMP       142          ; PC := 142
 62 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
 63 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 64 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf7d48ee0]
 65 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 66 [-]: RETURN    R4 2         ; return R4
 67 [-]: JMP       142          ; PC := 142
 68 [-]: GETGLOBAL R4 K0        ; R4 := _T
 69 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["mSpecialSuitMode"]
 70 [-]: TEST      R4 0         ; if not R4 then PC := 91
 71 [-]: JMP       91           ; PC := 91
 72 [-]: GETGLOBAL R4 K0        ; R4 := _T
 73 [-]: GETTABLE  R2 R4 K19    ; R2 := R4["SpecialSuitAvatar"]
 74 [-]: EQ        0 R1 K20     ; if R1 ~= 5.000000 then PC := 82
 75 [-]: JMP       82           ; PC := 82
 76 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
 77 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 78 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf7d48ee0]
 79 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 80 [-]: RETURN    R4 2         ; return R4
 81 [-]: JMP       142          ; PC := 142
 82 [-]: EQ        0 R1 K11     ; if R1 ~= 6.000000 then PC := 142
 83 [-]: JMP       142          ; PC := 142
 84 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
 85 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 86 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe85a2361]
 87 [-]: LOADK     R6 7         ; R6 := 7.000000
 88 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 89 [-]: RETURN    R4 2         ; return R4
 90 [-]: JMP       142          ; PC := 142
 91 [-]: EQ        1 R1 K20     ; if R1 == 5.000000 then PC := 95
 92 [-]: JMP       95           ; PC := 95
 93 [-]: EQ        0 R1 K11     ; if R1 ~= 6.000000 then PC := 102
 94 [-]: JMP       102          ; PC := 102
 95 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
 96 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 97 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe85a2361]
 98 [-]: LOADK     R6 7         ; R6 := 7.000000
 99 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
100 [-]: RETURN    R4 2         ; return R4
101 [-]: JMP       142          ; PC := 142
102 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
103 [-]: MOVE      R5 R2        ; R5 := R2
104 [-]: CALL      R4 2 2       ; R4 := R4(R5)
105 [-]: TEST      R4 1         ; if R4 then PC := 142
106 [-]: JMP       142          ; PC := 142
107 [-]: EQ        0 R1 K13     ; if R1 ~= 2.000000 then PC := 116
108 [-]: JMP       116          ; PC := 116
109 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
110 [-]: CALL      R4 2 2       ; R4 := R4(R5)
111 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe85a2361]
112 [-]: LOADK     R6 1         ; R6 := 1.000000
113 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
114 [-]: RETURN    R4 2         ; return R4
115 [-]: JMP       142          ; PC := 142
116 [-]: EQ        0 R1 K6      ; if R1 ~= 1.000000 then PC := 125
117 [-]: JMP       125          ; PC := 125
118 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
119 [-]: CALL      R4 2 2       ; R4 := R4(R5)
120 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe85a2361]
121 [-]: LOADK     R6 0         ; R6 := 0.000000
122 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
123 [-]: RETURN    R4 2         ; return R4
124 [-]: JMP       142          ; PC := 142
125 [-]: EQ        0 R1 K21     ; if R1 ~= 3.000000 then PC := 134
126 [-]: JMP       134          ; PC := 134
127 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
128 [-]: CALL      R4 2 2       ; R4 := R4(R5)
129 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe85a2361]
130 [-]: LOADK     R6 5         ; R6 := 5.000000
131 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
132 [-]: RETURN    R4 2         ; return R4
133 [-]: JMP       142          ; PC := 142
134 [-]: EQ        0 R1 K22     ; if R1 ~= 4.000000 then PC := 142
135 [-]: JMP       142          ; PC := 142
136 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0xde321e6f]
137 [-]: CALL      R4 2 2       ; R4 := R4(R5)
138 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe85a2361]
139 [-]: LOADK     R6 10        ; R6 := 10.000000
140 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
141 [-]: RETURN    R4 2         ; return R4
142 [-]: LOADNIL   R4 R4        ; R4 := nil
143 [-]: RETURN    R4 2         ; return R4
144 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 2137
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["LoadOutType"]
  3 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["LoadOutId"]
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0xb009bbc6
 11 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1[0x0911ae7c]
 12 [-]: LOADK     R5 2         ; R5 := 2.000000
 13 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 14 [-]: TAILCALL  R2 0 0       ; R2,... := R2(R3,...)
 15 [-]: RETURN    R2 0         ; return R2,...
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 2145
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xb009bbc6
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Customization"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x2540510f]
  4 [-]: LOADK     R4 2         ; R4 := 2.000000
  5 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: MOVE      R1 R2        ; R1 := R2
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 2154
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  37

  1 [-]: GETGLOBAL R3 K0        ; R3 := _T
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["MenuSuitAvatar"]
  3 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  4 [-]: LOADBOOL  R5 0 0       ; R5 := false
  5 [-]: EQ        0 R0 K3      ; if R0 ~= 1.000000 then PC := 60
  6 [-]: JMP       60           ; PC := 60
  7 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 305
  8 [-]: JMP       305          ; PC := 305
  9 [-]: GETGLOBAL R6 K0        ; R6 := _T
 10 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["MenuSentinel"]
 11 [-]: GETGLOBAL R7 K6        ; R7 := 0x7b998233
 12 [-]: MOVE      R8 R6        ; R8 := R6
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: TEST      R7 1         ; if R7 then PC := 305
 15 [-]: JMP       305          ; PC := 305
 16 [-]: SELF      R7 R6 K7     ; R8 := R6; R7 := R6[0xde321e6f]
 17 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 18 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0xf7d48ee0]
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
 21 [-]: MOVE      R9 R2        ; R9 := R2
 22 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 23 [-]: TEST      R8 1         ; if R8 then PC := 36
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
 26 [-]: MOVE      R9 R7        ; R9 := R7
 27 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 28 [-]: TEST      R8 1         ; if R8 then PC := 41
 29 [-]: JMP       41           ; PC := 41
 30 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7[0xf2deaf69]
 31 [-]: SELF      R10 R2 K10   ; R11 := R2; R10 := R2[0xcde10c4a]
 32 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 33 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 34 [-]: TEST      R8 0         ; if not R8 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R8 K11       ; R8 := 0x33bdd652
 37 [-]: GETTABLE  R8 R8 K12    ; R8 := R8[0x23d5322f]
 38 [-]: MOVE      R9 R4        ; R9 := R4
 39 [-]: MOVE      R10 R6       ; R10 := R6
 40 [-]: CALL      R8 3 1       ; R8(R9,R10)
 41 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
 42 [-]: MOVE      R9 R7        ; R9 := R7
 43 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 44 [-]: TEST      R8 1         ; if R8 then PC := 58
 45 [-]: JMP       58           ; PC := 58
 46 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7[0xf2deaf69]
 47 [-]: GETGLOBAL R10 K13      ; R10 := 0x88980f4f
 48 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 49 [-]: TEST      R8 1         ; if R8 then PC := 56
 50 [-]: JMP       56           ; PC := 56
 51 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7[0xf2deaf69]
 52 [-]: GETGLOBAL R10 K14      ; R10 := 0xb506ff82
 53 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 54 [-]: TEST      R8 0         ; if not R8 then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: LOADBOOL  R5 0 0       ; R5 := false
 57 [-]: JMP       305          ; PC := 305
 58 [-]: LOADBOOL  R5 1 0       ; R5 := true
 59 [-]: JMP       305          ; PC := 305
 60 [-]: GETUPVAL  R8 U0        ; R8 := U0
 61 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["KDriveSlot"]
 62 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 81
 63 [-]: JMP       81           ; PC := 81
 64 [-]: EQ        0 R0 K16     ; if R0 ~= 6.000000 then PC := 81
 65 [-]: JMP       81           ; PC := 81
 66 [-]: GETGLOBAL R8 K0        ; R8 := _T
 67 [-]: GETTABLE  R3 R8 K17    ; R3 := R8["KDriveAvatar"]
 68 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
 69 [-]: MOVE      R9 R3        ; R9 := R3
 70 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 71 [-]: TEST      R8 1         ; if R8 then PC := 81
 72 [-]: JMP       81           ; PC := 81
 73 [-]: GETGLOBAL R8 K11       ; R8 := 0x33bdd652
 74 [-]: GETTABLE  R8 R8 K12    ; R8 := R8[0x23d5322f]
 75 [-]: MOVE      R9 R4        ; R9 := R4
 76 [-]: MOVE      R10 R3       ; R10 := R3
 77 [-]: CALL      R8 3 1       ; R8(R9,R10)
 78 [-]: MOVE      R8 R4        ; R8 := R4
 79 [-]: MOVE      R9 R5        ; R9 := R5
 80 [-]: RETURN    R8 3         ; return R8,R9
 81 [-]: EQ        0 R0 K18     ; if R0 ~= 8.000000 then PC := 100
 82 [-]: JMP       100          ; PC := 100
 83 [-]: GETGLOBAL R8 K0        ; R8 := _T
 84 [-]: GETTABLE  R3 R8 K19    ; R3 := R8["MechAvatar"]
 85 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
 86 [-]: MOVE      R9 R3        ; R9 := R3
 87 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 88 [-]: TEST      R8 1         ; if R8 then PC := 100
 89 [-]: JMP       100          ; PC := 100
 90 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 100
 91 [-]: JMP       100          ; PC := 100
 92 [-]: GETGLOBAL R8 K11       ; R8 := 0x33bdd652
 93 [-]: GETTABLE  R8 R8 K12    ; R8 := R8[0x23d5322f]
 94 [-]: MOVE      R9 R4        ; R9 := R4
 95 [-]: MOVE      R10 R3       ; R10 := R3
 96 [-]: CALL      R8 3 1       ; R8(R9,R10)
 97 [-]: MOVE      R8 R4        ; R8 := R4
 98 [-]: MOVE      R9 R5        ; R9 := R5
 99 [-]: RETURN    R8 3         ; return R8,R9
100 [-]: EQ        1 R1 K4      ; if R1 == 0.000000 then PC := 108
101 [-]: JMP       108          ; PC := 108
102 [-]: EQ        0 R1 K20     ; if R1 ~= 5.000000 then PC := 220
103 [-]: JMP       220          ; PC := 220
104 [-]: GETGLOBAL R8 K0        ; R8 := _T
105 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["mSpecialSuitMode"]
106 [-]: TEST      R8 0         ; if not R8 then PC := 220
107 [-]: JMP       220          ; PC := 220
108 [-]: EQ        0 R1 K20     ; if R1 ~= 5.000000 then PC := 120
109 [-]: JMP       120          ; PC := 120
110 [-]: GETGLOBAL R8 K0        ; R8 := _T
111 [-]: GETTABLE  R3 R8 K22    ; R3 := R8["SpecialSuitAvatar"]
112 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
113 [-]: MOVE      R9 R3        ; R9 := R3
114 [-]: CALL      R8 2 2       ; R8 := R8(R9)
115 [-]: TEST      R8 0         ; if not R8 then PC := 120
116 [-]: JMP       120          ; PC := 120
117 [-]: MOVE      R8 R4        ; R8 := R4
118 [-]: MOVE      R9 R5        ; R9 := R5
119 [-]: RETURN    R8 3         ; return R8,R9
120 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
121 [-]: MOVE      R9 R3        ; R9 := R3
122 [-]: CALL      R8 2 2       ; R8 := R8(R9)
123 [-]: TEST      R8 1         ; if R8 then PC := 305
124 [-]: JMP       305          ; PC := 305
125 [-]: SELF      R8 R3 K7     ; R9 := R3; R8 := R3[0xde321e6f]
126 [-]: CALL      R8 2 2       ; R8 := R8(R9)
127 [-]: EQ        0 R0 K23     ; if R0 ~= 7.000000 then PC := 157
128 [-]: JMP       157          ; PC := 157
129 [-]: SELF      R9 R8 K24    ; R10 := R8; R9 := R8[0xe85a2361]
130 [-]: LOADK     R11 11       ; R11 := 11.000000
131 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
132 [-]: GETGLOBAL R10 K6       ; R10 := 0x7b998233
133 [-]: MOVE      R11 R9       ; R11 := R9
134 [-]: CALL      R10 2 2      ; R10 := R10(R11)
135 [-]: TEST      R10 1        ; if R10 then PC := 305
136 [-]: JMP       305          ; PC := 305
137 [-]: LOADK     R10 0        ; R10 := 0.000000
138 [-]: LOADK     R11 3        ; R11 := 3.000000
139 [-]: LOADK     R12 1        ; R12 := 1.000000
140 [-]: FORPREP   R10 155      ; R10 -= R12; PC := 155
141 [-]: SELF      R14 R9 K26   ; R15 := R9; R14 := R9[0x92c56c50]
142 [-]: LOADK     R16 1        ; R16 := 1.000000
143 [-]: MOVE      R17 R13      ; R17 := R13
144 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
145 [-]: GETGLOBAL R15 K6       ; R15 := 0x7b998233
146 [-]: MOVE      R16 R14      ; R16 := R14
147 [-]: CALL      R15 2 2      ; R15 := R15(R16)
148 [-]: TEST      R15 1        ; if R15 then PC := 155
149 [-]: JMP       155          ; PC := 155
150 [-]: GETGLOBAL R15 K11      ; R15 := 0x33bdd652
151 [-]: GETTABLE  R15 R15 K12  ; R15 := R15[0x23d5322f]
152 [-]: MOVE      R16 R4       ; R16 := R4
153 [-]: MOVE      R17 R14      ; R17 := R14
154 [-]: CALL      R15 3 1      ; R15(R16,R17)
155 [-]: FORLOOP   R10 141      ; R10 += R12; if R10 <= R11 then begin PC := 141; R13 := R10 end
156 [-]: JMP       305          ; PC := 305
157 [-]: SELF      R15 R8 K8    ; R16 := R8; R15 := R8[0xf7d48ee0]
158 [-]: CALL      R15 2 2      ; R15 := R15(R16)
159 [-]: GETGLOBAL R16 K6       ; R16 := 0x7b998233
160 [-]: MOVE      R17 R15      ; R17 := R15
161 [-]: CALL      R16 2 2      ; R16 := R16(R17)
162 [-]: TEST      R16 1        ; if R16 then PC := 305
163 [-]: JMP       305          ; PC := 305
164 [-]: GETGLOBAL R16 K6       ; R16 := 0x7b998233
165 [-]: MOVE      R17 R2       ; R17 := R2
166 [-]: CALL      R16 2 2      ; R16 := R16(R17)
167 [-]: TEST      R16 1        ; if R16 then PC := 175
168 [-]: JMP       175          ; PC := 175
169 [-]: SELF      R16 R15 K9   ; R17 := R15; R16 := R15[0xf2deaf69]
170 [-]: SELF      R18 R2 K10   ; R19 := R2; R18 := R2[0xcde10c4a]
171 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
172 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
173 [-]: TEST      R16 0        ; if not R16 then PC := 305
174 [-]: JMP       305          ; PC := 305
175 [-]: GETGLOBAL R16 K11      ; R16 := 0x33bdd652
176 [-]: GETTABLE  R16 R16 K12  ; R16 := R16[0x23d5322f]
177 [-]: MOVE      R17 R4       ; R17 := R4
178 [-]: MOVE      R18 R3       ; R18 := R3
179 [-]: CALL      R16 3 1      ; R16(R17,R18)
180 [-]: SELF      R16 R15 K9   ; R17 := R15; R16 := R15[0xf2deaf69]
181 [-]: GETGLOBAL R18 K27      ; R18 := 0xf773e9d4
182 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
183 [-]: TEST      R16 0        ; if not R16 then PC := 218
184 [-]: JMP       218          ; PC := 218
185 [-]: GETGLOBAL R16 K6       ; R16 := 0x7b998233
186 [-]: SELF      R17 R8 K28   ; R18 := R8; R17 := R8[0xbb4a3d82]
187 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
188 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
189 [-]: TEST      R16 1        ; if R16 then PC := 218
190 [-]: JMP       218          ; PC := 218
191 [-]: SELF      R16 R8 K24   ; R17 := R8; R16 := R8[0xe85a2361]
192 [-]: LOADK     R18 7        ; R18 := 7.000000
193 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
194 [-]: GETGLOBAL R17 K6       ; R17 := 0x7b998233
195 [-]: MOVE      R18 R16      ; R18 := R16
196 [-]: CALL      R17 2 2      ; R17 := R17(R18)
197 [-]: TEST      R17 1        ; if R17 then PC := 218
198 [-]: JMP       218          ; PC := 218
199 [-]: LOADK     R17 0        ; R17 := 0.000000
200 [-]: LOADK     R18 3        ; R18 := 3.000000
201 [-]: LOADK     R19 1        ; R19 := 1.000000
202 [-]: FORPREP   R17 217      ; R17 -= R19; PC := 217
203 [-]: SELF      R21 R16 K26  ; R22 := R16; R21 := R16[0x92c56c50]
204 [-]: LOADK     R23 1        ; R23 := 1.000000
205 [-]: MOVE      R24 R20      ; R24 := R20
206 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
207 [-]: GETGLOBAL R22 K6       ; R22 := 0x7b998233
208 [-]: MOVE      R23 R21      ; R23 := R21
209 [-]: CALL      R22 2 2      ; R22 := R22(R23)
210 [-]: TEST      R22 1        ; if R22 then PC := 217
211 [-]: JMP       217          ; PC := 217
212 [-]: GETGLOBAL R22 K11      ; R22 := 0x33bdd652
213 [-]: GETTABLE  R22 R22 K12  ; R22 := R22[0x23d5322f]
214 [-]: MOVE      R23 R4       ; R23 := R4
215 [-]: MOVE      R24 R21      ; R24 := R21
216 [-]: CALL      R22 3 1      ; R22(R23,R24)
217 [-]: FORLOOP   R17 203      ; R17 += R19; if R17 <= R18 then begin PC := 203; R20 := R17 end
218 [-]: LOADBOOL  R5 1 0       ; R5 := true
219 [-]: JMP       305          ; PC := 305
220 [-]: LOADK     R22 0        ; R22 := 0.000000
221 [-]: EQ        0 R1 K29     ; if R1 ~= 2.000000 then PC := 225
222 [-]: JMP       225          ; PC := 225
223 [-]: LOADK     R22 1        ; R22 := 1.000000
224 [-]: JMP       244          ; PC := 244
225 [-]: EQ        0 R1 K30     ; if R1 ~= 3.000000 then PC := 229
226 [-]: JMP       229          ; PC := 229
227 [-]: LOADK     R22 5        ; R22 := 5.000000
228 [-]: JMP       244          ; PC := 244
229 [-]: EQ        1 R1 K20     ; if R1 == 5.000000 then PC := 233
230 [-]: JMP       233          ; PC := 233
231 [-]: EQ        0 R1 K16     ; if R1 ~= 6.000000 then PC := 241
232 [-]: JMP       241          ; PC := 241
233 [-]: GETGLOBAL R23 K0       ; R23 := _T
234 [-]: GETTABLE  R23 R23 K21  ; R23 := R23["mSpecialSuitMode"]
235 [-]: TEST      R23 0        ; if not R23 then PC := 239
236 [-]: JMP       239          ; PC := 239
237 [-]: GETGLOBAL R23 K0       ; R23 := _T
238 [-]: GETTABLE  R3 R23 K22   ; R3 := R23["SpecialSuitAvatar"]
239 [-]: LOADK     R22 7        ; R22 := 7.000000
240 [-]: JMP       244          ; PC := 244
241 [-]: EQ        0 R1 K31     ; if R1 ~= 4.000000 then PC := 244
242 [-]: JMP       244          ; PC := 244
243 [-]: LOADK     R22 10       ; R22 := 10.000000
244 [-]: GETGLOBAL R23 K6       ; R23 := 0x7b998233
245 [-]: MOVE      R24 R3       ; R24 := R3
246 [-]: CALL      R23 2 2      ; R23 := R23(R24)
247 [-]: TEST      R23 1        ; if R23 then PC := 305
248 [-]: JMP       305          ; PC := 305
249 [-]: SELF      R23 R3 K7    ; R24 := R3; R23 := R3[0xde321e6f]
250 [-]: CALL      R23 2 2      ; R23 := R23(R24)
251 [-]: SELF      R23 R23 K24  ; R24 := R23; R23 := R23[0xe85a2361]
252 [-]: MOVE      R25 R22      ; R25 := R22
253 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
254 [-]: GETGLOBAL R24 K6       ; R24 := 0x7b998233
255 [-]: MOVE      R25 R23      ; R25 := R23
256 [-]: CALL      R24 2 2      ; R24 := R24(R25)
257 [-]: TEST      R24 1        ; if R24 then PC := 305
258 [-]: JMP       305          ; PC := 305
259 [-]: GETGLOBAL R24 K6       ; R24 := 0x7b998233
260 [-]: MOVE      R25 R2       ; R25 := R2
261 [-]: CALL      R24 2 2      ; R24 := R24(R25)
262 [-]: TEST      R24 1        ; if R24 then PC := 270
263 [-]: JMP       270          ; PC := 270
264 [-]: SELF      R24 R23 K9   ; R25 := R23; R24 := R23[0xf2deaf69]
265 [-]: SELF      R26 R2 K10   ; R27 := R2; R26 := R2[0xcde10c4a]
266 [-]: CALL      R26 2 0      ; R26,... := R26(R27)
267 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
268 [-]: TEST      R24 0        ; if not R24 then PC := 305
269 [-]: JMP       305          ; PC := 305
270 [-]: LOADK     R24 0        ; R24 := 0.000000
271 [-]: LOADK     R25 3        ; R25 := 3.000000
272 [-]: LOADK     R26 1        ; R26 := 1.000000
273 [-]: FORPREP   R24 288      ; R24 -= R26; PC := 288
274 [-]: SELF      R28 R23 K26  ; R29 := R23; R28 := R23[0x92c56c50]
275 [-]: LOADK     R30 1        ; R30 := 1.000000
276 [-]: MOVE      R31 R27      ; R31 := R27
277 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
278 [-]: GETGLOBAL R29 K6       ; R29 := 0x7b998233
279 [-]: MOVE      R30 R28      ; R30 := R28
280 [-]: CALL      R29 2 2      ; R29 := R29(R30)
281 [-]: TEST      R29 1        ; if R29 then PC := 288
282 [-]: JMP       288          ; PC := 288
283 [-]: GETGLOBAL R29 K11      ; R29 := 0x33bdd652
284 [-]: GETTABLE  R29 R29 K12  ; R29 := R29[0x23d5322f]
285 [-]: MOVE      R30 R4       ; R30 := R4
286 [-]: MOVE      R31 R28      ; R31 := R28
287 [-]: CALL      R29 3 1      ; R29(R30,R31)
288 [-]: FORLOOP   R24 274      ; R24 += R26; if R24 <= R25 then begin PC := 274; R27 := R24 end
289 [-]: EQ        1 R1 K30     ; if R1 == 3.000000 then PC := 305
290 [-]: JMP       305          ; PC := 305
291 [-]: SELF      R29 R23 K32  ; R30 := R23; R29 := R23[0x4037ae58]
292 [-]: CALL      R29 2 2      ; R29 := R29(R30)
293 [-]: EQ        1 R29 K33    ; if R29 == nil then PC := 305
294 [-]: JMP       305          ; PC := 305
295 [-]: LOADK     R30 1        ; R30 := 1.000000
296 [-]: LEN       R31 R29      ; R31 := # R29
297 [-]: LOADK     R32 1        ; R32 := 1.000000
298 [-]: FORPREP   R30 304      ; R30 -= R32; PC := 304
299 [-]: GETGLOBAL R34 K11      ; R34 := 0x33bdd652
300 [-]: GETTABLE  R34 R34 K12  ; R34 := R34[0x23d5322f]
301 [-]: MOVE      R35 R4       ; R35 := R4
302 [-]: GETTABLE  R36 R29 R33  ; R36 := R29[R33]
303 [-]: CALL      R34 3 1      ; R34(R35,R36)
304 [-]: FORLOOP   R30 299      ; R30 += R32; if R30 <= R31 then begin PC := 299; R33 := R30 end
305 [-]: MOVE      R34 R4       ; R34 := R4
306 [-]: MOVE      R35 R5       ; R35 := R5
307 [-]: RETURN    R34 3        ; return R34,R35
308 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 2272
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LOADK     R0 2         ; R0 := 2.000000
  2 [-]: GETGLOBAL R1 K1        ; R1 := mLists
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
  4 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCurrLevel"]
  5 [-]: GETGLOBAL R2 K1        ; R2 := mLists
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCosmeticsList"]
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["DEFAULT"]
  8 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADK     R0 0         ; R0 := 0.000000
 11 [-]: JMP       31           ; PC := 31
 12 [-]: GETGLOBAL R1 K1        ; R1 := mLists
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCurrLevel"]
 15 [-]: GETGLOBAL R2 K1        ; R2 := mLists
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCosmeticsList"]
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["ATTACHMENTS"]
 18 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADK     R0 1         ; R0 := 1.000000
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R1 K1        ; R1 := mLists
 23 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
 24 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCurrLevel"]
 25 [-]: GETGLOBAL R2 K1        ; R2 := mLists
 26 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCosmeticsList"]
 27 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["SYANDANAS"]
 28 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADK     R0 3         ; R0 := 3.000000
 31 [-]: RETURN    R0 2         ; return R0
 32 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 2285
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := mSelected
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Element"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 58
  4 [-]: JMP       58           ; PC := 58
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Element"]
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["EquippedItem"]
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x68d708a7]
 11 [-]: GETGLOBAL R3 K0        ; R3 := mSelected
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Element"]
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCustSlot"]
 14 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 15 [-]: EQ        0 R0 K7      ; if R0 ~= 0.000000 then PC := 44
 16 [-]: JMP       44           ; PC := 44
 17 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 44
 21 [-]: JMP       44           ; PC := 44
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: GETGLOBAL R3 K0        ; R3 := mSelected
 24 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Element"]
 25 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["LoadOutType"]
 26 [-]: GETGLOBAL R4 K0        ; R4 := mSelected
 27 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Element"]
 28 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["LoadOutId"]
 29 [-]: CALL      R2 3 3       ; R2,R3 := R2(R3,R4)
 30 [-]: SELF      R4 R1 K11    ; R5 := R1; R4 := R1[0x1adf884d]
 31 [-]: MOVE      R6 R0        ; R6 := R0
 32 [-]: GETUPVAL  R7 U2        ; R7 := U2
 33 [-]: GETTABLE  R7 R7 K12    ; R7 := R7[0x06d055f9]
 34 [-]: LEN       R8 R2        ; R8 := # R2
 35 [-]: LT        1 K7 R8      ; if 0.000000 < R8 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: LOADBOOL  R8 0 1       ; R8 := false; PC := 38
 38 [-]: LOADBOOL  R8 1 0       ; R8 := true
 39 [-]: LEN       R9 R2        ; R9 := # R2
 40 [-]: GETTABLE  R9 R2 R9     ; R9 := R2[R9]
 41 [-]: LOADNIL   R10 R10      ; R10 := nil
 42 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 43 [-]: CALL      R4 0 1       ; R4(R5,...)
 44 [-]: CLOSURE   R4 0         ; R4 := closure(Function #41.1)
 45 [-]: GETUPVAL  R0 U3        ; R0 := U3
 46 [-]: MOVE      R0 R1        ; R0 := R1
 47 [-]: MOVE      R0 R0        ; R0 := R0
 48 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 49 [-]: SETUPVAL  R5 U3        ; U82 := R3
 50 [-]: GETGLOBAL R5 K13       ; R5 := mLists
 51 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mCosmeticsList"]
 52 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0xea061e98]
 53 [-]: CLOSURE   R7 1         ; R7 := closure(Function #41.2)
 54 [-]: MOVE      R0 R0        ; R0 := R0
 55 [-]: MOVE      R0 R4        ; R0 := R4
 56 [-]: CALL      R5 3 1       ; R5(R6,R7)
 57 [-]: CLOSE     R0           ; SAVE R0,...
 58 [-]: RETURN    R0 1         ; return 


; Function #41.1:
;
; Name:            
; Defined at line: 2298
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: MOVE      R5 R3        ; R5 := R3
  4 [-]: MOVE      R6 R4        ; R6 := R4
  5 [-]: RETURN    R5 3         ; return R5,R6
  6 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0x697019d0]
  7 [-]: MOVE      R7 R1        ; R7 := R1
  8 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
  9 [-]: TEST      R5 0         ; if not R5 then PC := 115
 10 [-]: JMP       115          ; PC := 115
 11 [-]: GETGLOBAL R5 K2        ; R5 := mLists
 12 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["mCosmeticsList"]
 13 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mCurrLevel"]
 14 [-]: GETGLOBAL R6 K2        ; R6 := mLists
 15 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["mCosmeticsList"]
 16 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["DEFAULT"]
 17 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 97
 18 [-]: JMP       97           ; PC := 97
 19 [-]: GETGLOBAL R5 K6        ; R5 := mSelected
 20 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Element"]
 21 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["LoadOutType"]
 22 [-]: EQ        0 R5 K10     ; if R5 ~= 1.000000 then PC := 66
 23 [-]: JMP       66           ; PC := 66
 24 [-]: GETGLOBAL R5 K6        ; R5 := mSelected
 25 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Element"]
 26 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["LoadOutId"]
 27 [-]: EQ        0 R5 K12     ; if R5 ~= 0.000000 then PC := 66
 28 [-]: JMP       66           ; PC := 66
 29 [-]: GETGLOBAL R5 K13       ; R5 := 0x7b998233
 30 [-]: GETGLOBAL R6 K14       ; R6 := 0x25d99d89
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: TEST      R5 1         ; if R5 then PC := 66
 33 [-]: JMP       66           ; PC := 66
 34 [-]: GETGLOBAL R5 K14       ; R5 := 0x25d99d89
 35 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0x3c6b0324]
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: TEST      R5 0         ; if not R5 then PC := 66
 38 [-]: JMP       66           ; PC := 66
 39 [-]: GETGLOBAL R5 K14       ; R5 := 0x25d99d89
 40 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0x62c81b76]
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["mKubrowPetDetails"]
 43 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mDominantTraits"]
 44 [-]: GETGLOBAL R6 K19       ; R6 := 0xb009bbc6
 45 [-]: GETTABLE  R7 R5 R2     ; R7 := R5[R2]
 46 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 47 [-]: GETGLOBAL R7 K13       ; R7 := 0x7b998233
 48 [-]: MOVE      R8 R6        ; R8 := R6
 49 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 50 [-]: TEST      R7 1         ; if R7 then PC := 98
 51 [-]: JMP       98           ; PC := 98
 52 [-]: SELF      R7 R6 K20    ; R8 := R6; R7 := R6[0x5d10207d]
 53 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 54 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0xa5d5c8f6]
 55 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 56 [-]: SELF      R8 R0 K20    ; R9 := R0; R8 := R0[0x5d10207d]
 57 [-]: MOVE      R10 R1       ; R10 := R1
 58 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 59 [-]: SELF      R8 R8 K21    ; R9 := R8; R8 := R8[0xa5d5c8f6]
 60 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 61 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 64
 64 [-]: LOADBOOL  R4 1 0       ; R4 := true
 65 [-]: JMP       98           ; PC := 98
 66 [-]: GETGLOBAL R9 K6        ; R9 := mSelected
 67 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["Element"]
 68 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["LoadOutId"]
 69 [-]: EQ        0 R9 K22     ; if R9 ~= 5.000000 then PC := 95
 70 [-]: JMP       95           ; PC := 95
 71 [-]: GETGLOBAL R9 K23       ; R9 := _T
 72 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["mSpecialSuitMode"]
 73 [-]: TEST      R9 0         ; if not R9 then PC := 95
 74 [-]: JMP       95           ; PC := 95
 75 [-]: GETGLOBAL R9 K6        ; R9 := mSelected
 76 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["Element"]
 77 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["Customization"]
 78 [-]: SELF      R9 R9 K26    ; R10 := R9; R9 := R9[0x6199aec6]
 79 [-]: MOVE      R11 R1       ; R11 := R1
 80 [-]: GETGLOBAL R12 K23      ; R12 := _T
 81 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["SpecialSuitAvatar"]
 82 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 83 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9[0xa5d5c8f6]
 84 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 85 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0[0x5d10207d]
 86 [-]: MOVE      R12 R1       ; R12 := R1
 87 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 88 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10[0xa5d5c8f6]
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 93
 91 [-]: JMP       93           ; PC := 93
 92 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 93
 93 [-]: LOADBOOL  R4 1 0       ; R4 := true
 94 [-]: JMP       98           ; PC := 98
 95 [-]: LOADBOOL  R4 1 0       ; R4 := true
 96 [-]: JMP       98           ; PC := 98
 97 [-]: LOADBOOL  R4 1 0       ; R4 := true
 98 [-]: GETGLOBAL R11 K28      ; R11 := 0x60130201
 99 [-]: SELF      R12 R0 K20   ; R13 := R0; R12 := R0[0x5d10207d]
100 [-]: MOVE      R14 R1       ; R14 := R1
101 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
102 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
103 [-]: MOVE      R3 R11       ; R3 := R11
104 [-]: GETGLOBAL R11 K29      ; R11 := 0x33bdd652
105 [-]: GETTABLE  R11 R11 K30  ; R11 := R11[0x23d5322f]
106 [-]: GETUPVAL  R12 U0       ; R12 := U0
107 [-]: GETGLOBAL R13 K28      ; R13 := 0x60130201
108 [-]: GETTABLE  R14 R3 K31   ; R14 := R3["red"]
109 [-]: GETTABLE  R15 R3 K32   ; R15 := R3["green"]
110 [-]: GETTABLE  R16 R3 K33   ; R16 := R3["blue"]
111 [-]: GETTABLE  R17 R3 K34   ; R17 := R3["alpha"]
112 [-]: CALL      R13 5 0      ; R13,... := R13(R14,R15,R16,R17)
113 [-]: CALL      R11 0 1      ; R11(R12,...)
114 [-]: JMP       126          ; PC := 126
115 [-]: LOADBOOL  R4 0 0       ; R4 := false
116 [-]: GETGLOBAL R11 K28      ; R11 := 0x60130201
117 [-]: GETUPVAL  R12 U1       ; R12 := U1
118 [-]: SELF      R12 R12 K35  ; R13 := R12; R12 := R12[0x8e62760a]
119 [-]: GETUPVAL  R14 U2       ; R14 := U2
120 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
121 [-]: SELF      R12 R12 K20  ; R13 := R12; R12 := R12[0x5d10207d]
122 [-]: MOVE      R14 R1       ; R14 := R1
123 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
124 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
125 [-]: MOVE      R3 R11       ; R3 := R11
126 [-]: MOVE      R11 R3       ; R11 := R3
127 [-]: MOVE      R12 R4       ; R12 := R4
128 [-]: RETURN    R11 3        ; return R11,R12
129 [-]: RETURN    R0 1         ; return 


; Function #41.2:
;
; Name:            
; Defined at line: 2341
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Attribute"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 25
  3 [-]: JMP       25           ; PC := 25
  4 [-]: SETTABLE  R0 K2 K3     ; R0["mForceRedraw"] := true
  5 [-]: GETGLOBAL R1 K4        ; R1 := mSelected
  6 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Element"]
  7 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Customization"]
  8 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x8e62760a]
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["Attribute"]
 14 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["PetTrait"]
 15 [-]: CALL      R2 4 3       ; R2,R3 := R2(R3,R4,R5)
 16 [-]: SETTABLE  R0 K9 R3     ; R0[0x1db57c6b] := R3
 17 [-]: SETTABLE  R0 K8 R2     ; R0[0x0a33ea4a] := R2
 18 [-]: GETUPVAL  R2 U1        ; R2 := U1
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["Attribute2"]
 21 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["PetTrait"]
 22 [-]: CALL      R2 4 3       ; R2,R3 := R2(R3,R4,R5)
 23 [-]: SETTABLE  R0 K12 R3    ; R0[0xf2deaf69] := R3
 24 [-]: SETTABLE  R0 K11 R2    ; R0["Color2"] := R2
 25 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 2353
; #Upvalues:       6
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  2 [-]: MOVE      R6 R1        ; R6 := R1
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 1         ; if R5 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  7 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
  8 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: TEST      R5 1         ; if R5 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: EQ        0 R0 K3      ; if R0 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R5 K1        ; R5 := mSelected
 16 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Element"]
 17 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["LoadOutId"]
 18 [-]: EQ        0 R5 K6      ; if R5 ~= 0.000000 then PC := 68
 19 [-]: JMP       68           ; PC := 68
 20 [-]: EQ        0 R0 K7      ; if R0 ~= 6.000000 then PC := 68
 21 [-]: JMP       68           ; PC := 68
 22 [-]: GETGLOBAL R5 K5        ; R5 := 0x6c97a788
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["NUM_NORMAL_LOADOUT_SLOTS"]
 24 [-]: LOADK     R6 7         ; R6 := 7.000000
 25 [-]: LOADK     R7 1         ; R7 := 1.000000
 26 [-]: FORPREP   R5 67        ; R5 -= R7; PC := 67
 27 [-]: GETGLOBAL R9 K1        ; R9 := mSelected
 28 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["Element"]
 29 [-]: GETUPVAL  R10 U0       ; R10 := U0
 30 [-]: GETTABLE  R10 R10 K9   ; R10 := R10[0x06d055f9]
 31 [-]: EQ        1 R8 K10     ; if R8 == 5.000000 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 34
 34 [-]: LOADBOOL  R11 1 0      ; R11 := true
 35 [-]: GETGLOBAL R12 K11      ; R12 := mLists
 36 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["mLoadOutList"]
 37 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["SpecialASlotId"]
 38 [-]: GETGLOBAL R13 K11      ; R13 := mLists
 39 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["mLoadOutList"]
 40 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["SpecialBSlotId"]
 41 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 42 [-]: GETGLOBAL R11 K1       ; R11 := mSelected
 43 [-]: GETGLOBAL R12 K11      ; R12 := mLists
 44 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["mLoadOutList"]
 45 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12[0xca30dfb6]
 46 [-]: MOVE      R14 R10      ; R14 := R10
 47 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 48 [-]: SETTABLE  R11 K2 R12   ; R11["Element"] := R12
 49 [-]: GETGLOBAL R11 K1       ; R11 := mSelected
 50 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["Element"]
 51 [-]: EQ        1 R11 K3     ; if R11 == nil then PC := 65
 52 [-]: JMP       65           ; PC := 65
 53 [-]: GETGLOBAL R11 K1       ; R11 := mSelected
 54 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["Element"]
 55 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["EquippedItem"]
 56 [-]: EQ        1 R11 K3     ; if R11 == nil then PC := 65
 57 [-]: JMP       65           ; PC := 65
 58 [-]: GETUPVAL  R11 U1       ; R11 := U1
 59 [-]: MOVE      R12 R0       ; R12 := R0
 60 [-]: MOVE      R13 R1       ; R13 := R1
 61 [-]: MOVE      R14 R2       ; R14 := R2
 62 [-]: LOADNIL   R15 R15      ; R15 := nil
 63 [-]: LOADBOOL  R16 1 0      ; R16 := true
 64 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
 65 [-]: GETGLOBAL R11 K1       ; R11 := mSelected
 66 [-]: SETTABLE  R11 K2 R9    ; R11["Element"] := R9
 67 [-]: FORLOOP   R5 27        ; R5 += R7; if R5 <= R6 then begin PC := 27; R8 := R5 end
 68 [-]: GETGLOBAL R11 K17      ; R11 := 0x60130201
 69 [-]: MOVE      R12 R1       ; R12 := R1
 70 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 71 [-]: GETGLOBAL R12 K1       ; R12 := mSelected
 72 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["Element"]
 73 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["Customization"]
 74 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 75 [-]: MOVE      R14 R12      ; R14 := R12
 76 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 77 [-]: TEST      R13 1        ; if R13 then PC := 289
 78 [-]: JMP       289          ; PC := 289
 79 [-]: SELF      R13 R12 K19  ; R14 := R12; R13 := R12[0x8e62760a]
 80 [-]: MOVE      R15 R2       ; R15 := R2
 81 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 82 [-]: EQ        0 R0 K7      ; if R0 ~= 6.000000 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: SETTABLE  R11 K20 K21  ; R11["alpha"] := 255.000000
 85 [-]: JMP       91           ; PC := 91
 86 [-]: SELF      R14 R13 K22  ; R15 := R13; R14 := R13[0x5d10207d]
 87 [-]: MOVE      R16 R0       ; R16 := R0
 88 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 89 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["alpha"]
 90 [-]: SETTABLE  R11 K20 R14  ; R11["alpha"] := R14
 91 [-]: SELF      R14 R13 K23  ; R15 := R13; R14 := R13[0xa3927fe9]
 92 [-]: MOVE      R16 R0       ; R16 := R0
 93 [-]: MOVE      R17 R11      ; R17 := R11
 94 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
 95 [-]: SELF      R14 R13 K24  ; R15 := R13; R14 := R13[0xfc5d7158]
 96 [-]: MOVE      R16 R0       ; R16 := R0
 97 [-]: LOADBOOL  R17 1 0      ; R17 := true
 98 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
 99 [-]: SELF      R14 R12 K25  ; R15 := R12; R14 := R12[0x199edf6e]
100 [-]: MOVE      R16 R2       ; R16 := R2
101 [-]: MOVE      R17 R13      ; R17 := R13
102 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
103 [-]: TEST      R4 1         ; if R4 then PC := 138
104 [-]: JMP       138          ; PC := 138
105 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
106 [-]: GETGLOBAL R15 K1       ; R15 := mSelected
107 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["Cosmetic"]
108 [-]: CALL      R14 2 2      ; R14 := R14(R15)
109 [-]: TEST      R14 1        ; if R14 then PC := 124
110 [-]: JMP       124          ; PC := 124
111 [-]: GETGLOBAL R14 K1       ; R14 := mSelected
112 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["Cosmetic"]
113 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["PetTrait"]
114 [-]: EQ        1 R14 K3     ; if R14 == nil then PC := 124
115 [-]: JMP       124          ; PC := 124
116 [-]: GETGLOBAL R14 K11      ; R14 := mLists
117 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["mCosmeticsList"]
118 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["mCurrLevel"]
119 [-]: GETGLOBAL R15 K11      ; R15 := mLists
120 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["mCosmeticsList"]
121 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["ATTACHMENTS"]
122 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 138
123 [-]: JMP       138          ; PC := 138
124 [-]: GETGLOBAL R14 K11      ; R14 := mLists
125 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["mCosmeticsList"]
126 [-]: SELF      R14 R14 K31  ; R15 := R14; R14 := R14[0xea061e98]
127 [-]: CLOSURE   R16 0        ; R16 := closure(Function #42.1)
128 [-]: MOVE      R0 R0        ; R0 := R0
129 [-]: MOVE      R0 R11       ; R0 := R11
130 [-]: CALL      R14 3 1      ; R14(R15,R16)
131 [-]: GETGLOBAL R14 K11      ; R14 := mLists
132 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["mCosmeticsList"]
133 [-]: SELF      R14 R14 K32  ; R15 := R14; R14 := R14[0x71e9ac81]
134 [-]: LOADNIL   R16 R16      ; R16 := nil
135 [-]: LOADBOOL  R17 0 0      ; R17 := false
136 [-]: LOADBOOL  R18 1 0      ; R18 := true
137 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
138 [-]: GETUPVAL  R14 U2       ; R14 := U2
139 [-]: GETGLOBAL R15 K1       ; R15 := mSelected
140 [-]: GETTABLE  R15 R15 K2   ; R15 := R15["Element"]
141 [-]: GETTABLE  R15 R15 K33  ; R15 := R15["LoadOutType"]
142 [-]: GETGLOBAL R16 K1       ; R16 := mSelected
143 [-]: GETTABLE  R16 R16 K2   ; R16 := R16["Element"]
144 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["LoadOutId"]
145 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
146 [-]: GETUPVAL  R15 U3       ; R15 := U3
147 [-]: GETGLOBAL R16 K1       ; R16 := mSelected
148 [-]: GETTABLE  R16 R16 K2   ; R16 := R16["Element"]
149 [-]: GETTABLE  R16 R16 K33  ; R16 := R16["LoadOutType"]
150 [-]: GETGLOBAL R17 K1       ; R17 := mSelected
151 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["Element"]
152 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["LoadOutId"]
153 [-]: CALL      R15 3 3      ; R15,R16 := R15(R16,R17)
154 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
155 [-]: MOVE      R18 R14      ; R18 := R14
156 [-]: CALL      R17 2 2      ; R17 := R17(R18)
157 [-]: TEST      R17 1        ; if R17 then PC := 163
158 [-]: JMP       163          ; PC := 163
159 [-]: SELF      R17 R14 K34  ; R18 := R14; R17 := R14[0xaa041663]
160 [-]: MOVE      R19 R12      ; R19 := R12
161 [-]: LOADBOOL  R20 0 0      ; R20 := false
162 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
163 [-]: LOADK     R17 1        ; R17 := 1.000000
164 [-]: LEN       R18 R15      ; R18 := # R15
165 [-]: LOADK     R19 1        ; R19 := 1.000000
166 [-]: FORPREP   R17 265      ; R17 -= R19; PC := 265
167 [-]: GETTABLE  R21 R15 R20  ; R21 := R15[R20]
168 [-]: SELF      R22 R12 K35  ; R23 := R12; R22 := R12[0x61b59a83]
169 [-]: MOVE      R24 R21      ; R24 := R21
170 [-]: MOVE      R25 R16      ; R25 := R16
171 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
172 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
173 [-]: MOVE      R23 R14      ; R23 := R14
174 [-]: CALL      R22 2 2      ; R22 := R22(R23)
175 [-]: TEST      R22 1        ; if R22 then PC := 179
176 [-]: JMP       179          ; PC := 179
177 [-]: EQ        1 R0 K7      ; if R0 == 6.000000 then PC := 181
178 [-]: JMP       181          ; PC := 181
179 [-]: EQ        0 R0 K36     ; if R0 ~= 7.000000 then PC := 202
180 [-]: JMP       202          ; PC := 202
181 [-]: SELF      R22 R14 K37  ; R23 := R14; R22 := R14[0x22d4e696]
182 [-]: MOVE      R24 R12      ; R24 := R12
183 [-]: CALL      R22 3 1      ; R22(R23,R24)
184 [-]: GETUPVAL  R22 U0       ; R22 := U0
185 [-]: GETTABLE  R22 R22 K38  ; R22 := R22[0x2a1108a9]
186 [-]: LOADK     R23 K39      ; R23 := "ArsenalEffectsCanvas"
187 [-]: SELF      R24 R21 K40  ; R25 := R21; R24 := R21[0xd1586535]
188 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
189 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
190 [-]: GETGLOBAL R23 K0       ; R23 := 0x7b998233
191 [-]: MOVE      R24 R22      ; R24 := R22
192 [-]: CALL      R23 2 2      ; R23 := R23(R24)
193 [-]: TEST      R23 1        ; if R23 then PC := 202
194 [-]: JMP       202          ; PC := 202
195 [-]: SELF      R23 R14 K41  ; R24 := R14; R23 := R14[0x0a33ea4a]
196 [-]: MOVE      R25 R22      ; R25 := R22
197 [-]: MOVE      R26 R12      ; R26 := R12
198 [-]: MOVE      R27 R2       ; R27 := R2
199 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
200 [-]: SELF      R23 R22 K42  ; R24 := R22; R23 := R22[0x1db57c6b]
201 [-]: CALL      R23 2 1      ; R23(R24)
202 [-]: GETGLOBAL R23 K1       ; R23 := mSelected
203 [-]: GETTABLE  R23 R23 K2   ; R23 := R23["Element"]
204 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["LoadOutId"]
205 [-]: EQ        0 R23 K6     ; if R23 ~= 0.000000 then PC := 265
206 [-]: JMP       265          ; PC := 265
207 [-]: EQ        0 R2 K43     ; if R2 ~= 2.000000 then PC := 265
208 [-]: JMP       265          ; PC := 265
209 [-]: GETUPVAL  R23 U4       ; R23 := U4
210 [-]: GETUPVAL  R24 U5       ; R24 := U5
211 [-]: GETTABLE  R24 R24 K44  ; R24 := R24["FALSE"]
212 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 265
213 [-]: JMP       265          ; PC := 265
214 [-]: SELF      R23 R21 K45  ; R24 := R21; R23 := R21[0xf2deaf69]
215 [-]: GETGLOBAL R25 K46      ; R25 := gBaseAvatarType
216 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
217 [-]: TEST      R23 0        ; if not R23 then PC := 265
218 [-]: JMP       265          ; PC := 265
219 [-]: SELF      R23 R21 K47  ; R24 := R21; R23 := R21[0xde321e6f]
220 [-]: CALL      R23 2 2      ; R23 := R23(R24)
221 [-]: SELF      R23 R23 K48  ; R24 := R23; R23 := R23[0xf7d48ee0]
222 [-]: CALL      R23 2 2      ; R23 := R23(R24)
223 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
224 [-]: MOVE      R25 R23      ; R25 := R23
225 [-]: CALL      R24 2 2      ; R24 := R24(R25)
226 [-]: TEST      R24 1        ; if R24 then PC := 265
227 [-]: JMP       265          ; PC := 265
228 [-]: SELF      R24 R23 K49  ; R25 := R23; R24 := R23[0x0ad758cb]
229 [-]: CALL      R24 2 2      ; R24 := R24(R25)
230 [-]: LOADK     R25 0        ; R25 := 0.000000
231 [-]: SUB       R26 R24 K50  ; R26 := R24 - 1.000000
232 [-]: LOADK     R27 1        ; R27 := 1.000000
233 [-]: FORPREP   R25 264      ; R25 -= R27; PC := 264
234 [-]: SELF      R29 R23 K51  ; R30 := R23; R29 := R23[0xfef27732]
235 [-]: MOVE      R31 R28      ; R31 := R28
236 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
237 [-]: GETGLOBAL R30 K0       ; R30 := 0x7b998233
238 [-]: MOVE      R31 R29      ; R31 := R29
239 [-]: CALL      R30 2 2      ; R30 := R30(R31)
240 [-]: TEST      R30 1        ; if R30 then PC := 264
241 [-]: JMP       264          ; PC := 264
242 [-]: SELF      R30 R29 K45  ; R31 := R29; R30 := R29[0xf2deaf69]
243 [-]: GETGLOBAL R32 K52      ; R32 := gLotusSigilType
244 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
245 [-]: TEST      R30 0        ; if not R30 then PC := 253
246 [-]: JMP       253          ; PC := 253
247 [-]: SELF      R30 R23 K34  ; R31 := R23; R30 := R23[0xaa041663]
248 [-]: MOVE      R32 R12      ; R32 := R12
249 [-]: LOADBOOL  R33 0 0      ; R33 := false
250 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
251 [-]: SELF      R30 R29 K53  ; R31 := R29; R30 := R29[0x4ece5f10]
252 [-]: CALL      R30 2 1      ; R30(R31)
253 [-]: SELF      R30 R29 K45  ; R31 := R29; R30 := R29[0xf2deaf69]
254 [-]: GETGLOBAL R32 K54      ; R32 := gLotusHoverboardStickerType
255 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
256 [-]: TEST      R30 0        ; if not R30 then PC := 264
257 [-]: JMP       264          ; PC := 264
258 [-]: SELF      R30 R23 K34  ; R31 := R23; R30 := R23[0xaa041663]
259 [-]: MOVE      R32 R12      ; R32 := R12
260 [-]: LOADBOOL  R33 0 0      ; R33 := false
261 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
262 [-]: SELF      R30 R29 K55  ; R31 := R29; R30 := R29[0xb6edddc0]
263 [-]: CALL      R30 2 1      ; R30(R31)
264 [-]: FORLOOP   R25 234      ; R25 += R27; if R25 <= R26 then begin PC := 234; R28 := R25 end
265 [-]: FORLOOP   R17 167      ; R17 += R19; if R17 <= R18 then begin PC := 167; R20 := R17 end
266 [-]: GETGLOBAL R30 K1       ; R30 := mSelected
267 [-]: GETTABLE  R30 R30 K2   ; R30 := R30["Element"]
268 [-]: GETTABLE  R30 R30 K16  ; R30 := R30["EquippedItem"]
269 [-]: SELF      R30 R30 K34  ; R31 := R30; R30 := R30[0xaa041663]
270 [-]: GETGLOBAL R32 K1       ; R32 := mSelected
271 [-]: GETTABLE  R32 R32 K2   ; R32 := R32["Element"]
272 [-]: GETTABLE  R32 R32 K18  ; R32 := R32["Customization"]
273 [-]: GETGLOBAL R33 K1       ; R33 := mSelected
274 [-]: GETTABLE  R33 R33 K2   ; R33 := R33["Element"]
275 [-]: GETTABLE  R33 R33 K56  ; R33 := R33["mCustSlot"]
276 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
277 [-]: GETGLOBAL R30 K57      ; R30 := mInventory
278 [-]: SELF      R30 R30 K58  ; R31 := R30; R30 := R30[0x9b051033]
279 [-]: GETGLOBAL R32 K1       ; R32 := mSelected
280 [-]: GETTABLE  R32 R32 K2   ; R32 := R32["Element"]
281 [-]: GETTABLE  R32 R32 K59  ; R32 := R32["UID"]
282 [-]: GETGLOBAL R33 K1       ; R33 := mSelected
283 [-]: GETTABLE  R33 R33 K2   ; R33 := R33["Element"]
284 [-]: GETTABLE  R33 R33 K56  ; R33 := R33["mCustSlot"]
285 [-]: GETGLOBAL R34 K1       ; R34 := mSelected
286 [-]: GETTABLE  R34 R34 K2   ; R34 := R34["Element"]
287 [-]: GETTABLE  R34 R34 K18  ; R34 := R34["Customization"]
288 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
289 [-]: RETURN    R0 1         ; return 


; Function #42.1:
;
; Name:            
; Defined at line: 2387
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Attribute"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: SETTABLE  R0 K1 K2     ; R0["mForceRedraw"] := true
  6 [-]: GETGLOBAL R1 K4        ; R1 := 0x60130201
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: SETTABLE  R0 K3 R1     ; R0["Color"] := R1
 10 [-]: SETTABLE  R0 K5 K2     ; R0["ColorInitialized"] := true
 11 [-]: JMP       25           ; PC := 25
 12 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["Attribute2"]
 13 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["Attribute2"]
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: SETTABLE  R0 K1 K2     ; R0["mForceRedraw"] := true
 20 [-]: GETGLOBAL R1 K4        ; R1 := 0x60130201
 21 [-]: GETUPVAL  R2 U1        ; R2 := U1
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SETTABLE  R0 K8 R1     ; R0["Color2"] := R1
 24 [-]: SETTABLE  R0 K9 K2     ; R0["ColorInitialized2"] := true
 25 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 2448
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MenuSuitAvatar"]
  3 [-]: LOADBOOL  R1 0 0       ; R1 := false
  4 [-]: LOADBOOL  R2 0 0       ; R2 := false
  5 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
  6 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["LoadOutType"]
  8 [-]: EQ        0 R3 K6      ; if R3 ~= 6.000000 then PC := 21
  9 [-]: JMP       21           ; PC := 21
 10 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 11 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
 12 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["LoadOutId"]
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["KDriveSlot"]
 15 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R3 K0        ; R3 := _T
 18 [-]: GETTABLE  R0 R3 K9     ; R0 := R3["KDriveAvatar"]
 19 [-]: LOADBOOL  R1 1 0       ; R1 := true
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 22 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
 23 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["LoadOutType"]
 24 [-]: EQ        0 R3 K10     ; if R3 ~= 8.000000 then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: GETGLOBAL R3 K0        ; R3 := _T
 27 [-]: GETTABLE  R0 R3 K11    ; R0 := R3["MechAvatar"]
 28 [-]: LOADBOOL  R2 1 0       ; R2 := true
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETUPVAL  R4 U2        ; R4 := U2
 31 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["FRONT"]
 32 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 47
 33 [-]: JMP       47           ; PC := 47
 34 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0[0xde321e6f]
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x4703255b]
 37 [-]: LOADK     R5 1         ; R5 := 1.000000
 38 [-]: LOADK     R6 2         ; R6 := 2.000000
 39 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 40 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0[0xde321e6f]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x4703255b]
 43 [-]: LOADK     R5 0         ; R5 := 0.000000
 44 [-]: LOADK     R6 2         ; R6 := 2.000000
 45 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 46 [-]: JMP       92           ; PC := 92
 47 [-]: GETUPVAL  R3 U1        ; R3 := U1
 48 [-]: GETUPVAL  R4 U2        ; R4 := U2
 49 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["BACK"]
 50 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 92
 51 [-]: JMP       92           ; PC := 92
 52 [-]: TEST      R1 0         ; if not R1 then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: GETGLOBAL R3 K0        ; R3 := _T
 55 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["suitTable"]
 56 [-]: SETTABLE  R3 K18 K19   ; R3["desiredRot"] := 170.000000
 57 [-]: JMP       67           ; PC := 67
 58 [-]: TEST      R2 0         ; if not R2 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETGLOBAL R3 K0        ; R3 := _T
 61 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["suitTable"]
 62 [-]: SETTABLE  R3 K18 K19   ; R3["desiredRot"] := 170.000000
 63 [-]: JMP       67           ; PC := 67
 64 [-]: GETGLOBAL R3 K0        ; R3 := _T
 65 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["suitTable"]
 66 [-]: SETTABLE  R3 K18 K19   ; R3["desiredRot"] := 170.000000
 67 [-]: GETGLOBAL R3 K0        ; R3 := _T
 68 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["suitTable"]
 69 [-]: GETGLOBAL R4 K21       ; R4 := 0x00046924
 70 [-]: CALL      R4 1 2       ; R4 := R4()
 71 [-]: SETTABLE  R3 K20 R4    ; R3["lerpHead"] := R4
 72 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0[0xde321e6f]
 73 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 74 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xc69087f6]
 75 [-]: LOADK     R5 1         ; R5 := 1.000000
 76 [-]: LOADK     R6 0         ; R6 := 0.000000
 77 [-]: LOADK     R7 2         ; R7 := 2.000000
 78 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 79 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0[0xde321e6f]
 80 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 81 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xc69087f6]
 82 [-]: LOADK     R5 5         ; R5 := 5.000000
 83 [-]: LOADK     R6 3         ; R6 := 3.000000
 84 [-]: LOADK     R7 2         ; R7 := 2.000000
 85 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 86 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0[0xde321e6f]
 87 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 88 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0x35b09371]
 89 [-]: LOADK     R5 5         ; R5 := 5.000000
 90 [-]: LOADBOOL  R6 1 0       ; R6 := true
 91 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 92 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0[0xde321e6f]
 93 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 94 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xf7d48ee0]
 95 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 96 [-]: SELF      R4 R3 K25    ; R5 := R3; R4 := R3[0x0ad758cb]
 97 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 98 [-]: LOADK     R5 0         ; R5 := 0.000000
 99 [-]: SUB       R6 R4 K26    ; R6 := R4 - 1.000000
100 [-]: LOADK     R7 1         ; R7 := 1.000000
101 [-]: FORPREP   R5 126       ; R5 -= R7; PC := 126
102 [-]: SELF      R9 R3 K27    ; R10 := R3; R9 := R3[0xfef27732]
103 [-]: MOVE      R11 R8       ; R11 := R8
104 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
105 [-]: GETGLOBAL R10 K28      ; R10 := 0x7b998233
106 [-]: MOVE      R11 R9       ; R11 := R9
107 [-]: CALL      R10 2 2      ; R10 := R10(R11)
108 [-]: TEST      R10 1        ; if R10 then PC := 126
109 [-]: JMP       126          ; PC := 126
110 [-]: SELF      R10 R9 K29   ; R11 := R9; R10 := R9[0xf2deaf69]
111 [-]: GETGLOBAL R12 K30      ; R12 := 0x9166d883
112 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
113 [-]: TEST      R10 0        ; if not R10 then PC := 126
114 [-]: JMP       126          ; PC := 126
115 [-]: SELF      R10 R9 K31   ; R11 := R9; R10 := R9[0xf4f49d1b]
116 [-]: CALL      R10 2 2      ; R10 := R10(R11)
117 [-]: EQ        0 R10 K32    ; if R10 ~= 5.000000 then PC := 126
118 [-]: JMP       126          ; PC := 126
119 [-]: SELF      R10 R3 K33   ; R11 := R3; R10 := R3[0x12dd9da2]
120 [-]: MOVE      R12 R9       ; R12 := R9
121 [-]: CALL      R10 3 1      ; R10(R11,R12)
122 [-]: GETGLOBAL R10 K34      ; R10 := 0x89326c93
123 [-]: SELF      R10 R10 K35  ; R11 := R10; R10 := R10[0x59c96e77]
124 [-]: MOVE      R12 R9       ; R12 := R9
125 [-]: CALL      R10 3 1      ; R10(R11,R12)
126 [-]: FORLOOP   R5 102       ; R5 += R7; if R5 <= R6 then begin PC := 102; R8 := R5 end
127 [-]: GETGLOBAL R10 K28      ; R10 := 0x7b998233
128 [-]: GETGLOBAL R11 K36      ; R11 := mCameraTable
129 [-]: CALL      R10 2 2      ; R10 := R10(R11)
130 [-]: TEST      R10 1        ; if R10 then PC := 145
131 [-]: JMP       145          ; PC := 145
132 [-]: TEST      R1 1         ; if R1 then PC := 145
133 [-]: JMP       145          ; PC := 145
134 [-]: TEST      R2 1         ; if R2 then PC := 145
135 [-]: JMP       145          ; PC := 145
136 [-]: GETGLOBAL R10 K36      ; R10 := mCameraTable
137 [-]: SETTABLE  R10 K37 K38  ; R10["attenFov"] := 0.500000
138 [-]: GETGLOBAL R10 K36      ; R10 := mCameraTable
139 [-]: GETGLOBAL R11 K21      ; R11 := 0x00046924
140 [-]: LOADK     R12 4        ; R12 := 4.500000
141 [-]: LOADK     R13 -5       ; R13 := -5.000000
142 [-]: LOADK     R14 0        ; R14 := 0.000000
143 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
144 [-]: SETTABLE  R10 K39 R11  ; R10["biasRot"] := R11
145 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 2495
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K3        ; R0 := _T
  9 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["MenuSuitAvatar"]
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["LoadOutId"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0xde321e6f]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x881b6b90]
 18 [-]: LOADK     R4 0         ; R4 := 0.000000
 19 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 20 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 1         ; if R3 then PC := 39
 24 [-]: JMP       39           ; PC := 39
 25 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x53c3399f]
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: EQ        1 R3 K10     ; if R3 == 0.000000 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: SELF      R3 R2 K11    ; R4 := R2; R3 := R2[0xb5d09c91]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: EQ        1 R3 R1      ; if R3 == R1 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0[0xde321e6f]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x54732cc7]
 36 [-]: SELF      R5 R2 K11    ; R6 := R2; R5 := R2[0xb5d09c91]
 37 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 38 [-]: CALL      R3 0 1       ; R3(R4,...)
 39 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 2510
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x06d055f9]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADBOOL  R2 1 0       ; R2 := true
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: GETUPVAL  R2 U2        ; R2 := U2
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Current"]
 12 [-]: EQ        0 R2 K4      ; if R2 ~= 2.000000 then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETUPVAL  R2 U3        ; R2 := U3
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["CUSTOMIZING_SKINS"]
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETUPVAL  R2 U3        ; R2 := U3
 19 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["SELECTING_PART"]
 20 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 23
 23 [-]: LOADBOOL  R2 1 0       ; R2 := true
 24 [-]: RETURN    R2 2         ; return R2
 25 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 2517
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x06d055f9]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADBOOL  R2 1 0       ; R2 := true
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: GETUPVAL  R2 U2        ; R2 := U2
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SELECTING_PART"]
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["BROWSING_WAY_TREE"]
 16 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: GETGLOBAL R2 K4        ; R2 := _T
 19 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["ArsenalPvPOnlyReturnConsole"]
 20 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETUPVAL  R2 U3        ; R2 := U3
 23 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Current"]
 24 [-]: EQ        0 R2 K8      ; if R2 ~= 2.000000 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 27
 27 [-]: LOADBOOL  R2 1 0       ; R2 := true
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 2523
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["SWAPPING_ITEM"]
  3 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 14
  4 [-]: JMP       14           ; PC := 14
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SELECTING_SKINS"]
  7 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SELECTING_CONSUMABLES"]
 11 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 14
 14 [-]: LOADBOOL  R2 1 0       ; R2 := true
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0x06d055f9]
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: LOADK     R5 198       ; R5 := 198.000000
 19 [-]: LOADK     R6 240       ; R6 := 240.000000
 20 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 21 [-]: GETUPVAL  R4 U1        ; R4 := U1
 22 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0x06d055f9]
 23 [-]: GETGLOBAL R5 K4        ; R5 := mLists
 24 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mCosmeticsList"]
 25 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mCurrLevel"]
 26 [-]: GETGLOBAL R6 K4        ; R6 := mLists
 27 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mCosmeticsList"]
 28 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["DEFAULT"]
 29 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["SELECTING_SKINS"]
 33 [-]: EQ        1 R0 R5      ; if R0 == R5 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 36
 36 [-]: LOADBOOL  R5 1 0       ; R5 := true
 37 [-]: LOADK     R6 -20       ; R6 := -20.000000
 38 [-]: LOADK     R7 -60       ; R7 := -60.000000
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 41 [-]: GETGLOBAL R4 K4        ; R4 := mLists
 42 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mLoadOutList"]
 43 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0xea061e98]
 44 [-]: CLOSURE   R6 0         ; R6 := closure(Function #47.1)
 45 [-]: MOVE      R0 R1        ; R0 := R1
 46 [-]: MOVE      R0 R0        ; R0 := R0
 47 [-]: GETUPVAL  R0 U0        ; R0 := U0
 48 [-]: GETUPVAL  R0 U1        ; R0 := U1
 49 [-]: MOVE      R0 R3        ; R0 := R3
 50 [-]: CALL      R4 3 1       ; R4(R5,R6)
 51 [-]: RETURN    R0 1         ; return 


; Function #47.1:
;
; Name:            
; Defined at line: 2527
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: TEST      R1 0         ; if not R1 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0xb15e6aca]
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 21 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 22 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x67e369fa]
 23 [-]: MOVE      R3 R0        ; R3 := R0
 24 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 25 [-]: LOADK     R2 0         ; R2 := 0.000000
 26 [-]: GETGLOBAL R3 K6        ; R3 := mSelected
 27 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Element"]
 28 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 197
 29 [-]: JMP       197          ; PC := 197
 30 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["Id"]
 31 [-]: GETGLOBAL R4 K6        ; R4 := mSelected
 32 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["Element"]
 33 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Id"]
 34 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 197
 35 [-]: JMP       197          ; PC := 197
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: GETUPVAL  R4 U2        ; R4 := U2
 38 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["BROWSING_CONSUMABLES"]
 39 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 197
 40 [-]: JMP       197          ; PC := 197
 41 [-]: LOADK     R2 100       ; R2 := 100.000000
 42 [-]: LOADK     R3 1         ; R3 := 1.000000
 43 [-]: LOADK     R4 4         ; R4 := 4.000000
 44 [-]: LOADK     R5 1         ; R5 := 1.000000
 45 [-]: FORPREP   R3 88        ; R3 -= R5; PC := 88
 46 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
 47 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0xaade900e]
 48 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
 49 [-]: LOADK     R10 K13      ; R10 := ".Btn"
 50 [-]: MOVE      R11 R6       ; R11 := R6
 51 [-]: LOADK     R12 K13      ; R12 := ".Btn"
 52 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 53 [-]: LOADK     R10 59       ; R10 := 59.000000
 54 [-]: GETUPVAL  R11 U1       ; R11 := U1
 55 [-]: GETUPVAL  R12 U2       ; R12 := U2
 56 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["SELECTING_PART"]
 57 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 60
 60 [-]: LOADBOOL  R11 1 0      ; R11 := true
 61 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 62 [-]: GETGLOBAL R7 K15       ; R7 := 0x25312c9b
 63 [-]: GETGLOBAL R8 K11       ; R8 := 0xae91e43b
 64 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
 65 [-]: LOADK     R10 K13      ; R10 := ".Btn"
 66 [-]: MOVE      R11 R6       ; R11 := R6
 67 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 68 [-]: LOADK     R10 0        ; R10 := 0.000000
 69 [-]: NEWTABLE  R11 1 0      ; R11 := {}
 70 [-]: LOADK     R12 10       ; R12 := 10.000000
 71 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
 72 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 73 [-]: GETUPVAL  R13 U3       ; R13 := U3
 74 [-]: GETTABLE  R13 R13 K17  ; R13 := R13[0x06d055f9]
 75 [-]: GETUPVAL  R14 U1       ; R14 := U1
 76 [-]: GETUPVAL  R15 U2       ; R15 := U2
 77 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["SELECTING_PART"]
 78 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: LOADBOOL  R14 0 1      ; R14 := false; PC := 81
 81 [-]: LOADBOOL  R14 1 0      ; R14 := true
 82 [-]: LOADK     R15 100      ; R15 := 100.000000
 83 [-]: LOADK     R16 0        ; R16 := 0.000000
 84 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 85 [-]: SETLIST   R12 0 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 0
 86 [-]: LOADK     R13 K18      ; R13 := 0.200000
 87 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 88 [-]: FORLOOP   R3 46        ; R3 += R5; if R3 <= R4 then begin PC := 46; R6 := R3 end
 89 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
 90 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0xf64b7262]
 91 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
 92 [-]: LOADK     R10 K20      ; R10 := "Label"
 93 [-]: LOADK     R11 76       ; R11 := 76.000000
 94 [-]: GETUPVAL  R12 U3       ; R12 := U3
 95 [-]: GETTABLE  R12 R12 K17  ; R12 := R12[0x06d055f9]
 96 [-]: GETUPVAL  R13 U1       ; R13 := U1
 97 [-]: GETUPVAL  R14 U2       ; R14 := U2
 98 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["SELECTING_PART"]
 99 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 102
100 [-]: JMP       102          ; PC := 102
101 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 102
102 [-]: LOADBOOL  R13 1 0      ; R13 := true
103 [-]: GETGLOBAL R14 K21      ; R14 := 0x0032441c
104 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["UIColor_White"]
105 [-]: GETGLOBAL R15 K21      ; R15 := 0x0032441c
106 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["UIColor_Black"]
107 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
108 [-]: CALL      R7 0 1       ; R7(R8,...)
109 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
110 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0xf64b7262]
111 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
112 [-]: LOADK     R10 K20      ; R10 := "Label"
113 [-]: LOADK     R11 36       ; R11 := 36.000000
114 [-]: GETUPVAL  R12 U3       ; R12 := U3
115 [-]: GETTABLE  R12 R12 K17  ; R12 := R12[0x06d055f9]
116 [-]: GETUPVAL  R13 U1       ; R13 := U1
117 [-]: GETUPVAL  R14 U2       ; R14 := U2
118 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["SELECTING_PART"]
119 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 122
120 [-]: JMP       122          ; PC := 122
121 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 122
122 [-]: LOADBOOL  R13 1 0      ; R13 := true
123 [-]: GETTABLE  R14 R0 K24   ; R14 := R0["LabelColor"]
124 [-]: GETGLOBAL R15 K21      ; R15 := 0x0032441c
125 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["UIColor_White"]
126 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
127 [-]: CALL      R7 0 1       ; R7(R8,...)
128 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
129 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0xf64b7262]
130 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
131 [-]: LOADK     R10 K25      ; R10 := "Stats"
132 [-]: LOADK     R11 36       ; R11 := 36.000000
133 [-]: GETUPVAL  R12 U3       ; R12 := U3
134 [-]: GETTABLE  R12 R12 K17  ; R12 := R12[0x06d055f9]
135 [-]: GETUPVAL  R13 U1       ; R13 := U1
136 [-]: GETUPVAL  R14 U2       ; R14 := U2
137 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["SELECTING_PART"]
138 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 141
139 [-]: JMP       141          ; PC := 141
140 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 141
141 [-]: LOADBOOL  R13 1 0      ; R13 := true
142 [-]: GETTABLE  R14 R0 K24   ; R14 := R0["LabelColor"]
143 [-]: GETGLOBAL R15 K21      ; R15 := 0x0032441c
144 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["UIColor_White"]
145 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
146 [-]: CALL      R7 0 1       ; R7(R8,...)
147 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
148 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0xf64b7262]
149 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
150 [-]: LOADK     R10 K26      ; R10 := "Back"
151 [-]: LOADK     R11 10       ; R11 := 10.000000
152 [-]: GETUPVAL  R12 U3       ; R12 := U3
153 [-]: GETTABLE  R12 R12 K17  ; R12 := R12[0x06d055f9]
154 [-]: GETUPVAL  R13 U1       ; R13 := U1
155 [-]: GETUPVAL  R14 U2       ; R14 := U2
156 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["SELECTING_PART"]
157 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 160
158 [-]: JMP       160          ; PC := 160
159 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 160
160 [-]: LOADBOOL  R13 1 0      ; R13 := true
161 [-]: LOADK     R14 85       ; R14 := 85.000000
162 [-]: LOADK     R15 10       ; R15 := 10.000000
163 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
164 [-]: CALL      R7 0 1       ; R7(R8,...)
165 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
166 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7[0xc0a3774b]
167 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
168 [-]: LOADK     R10 K28      ; R10 := "TopTitle"
169 [-]: LOADK     R11 11       ; R11 := 11.000000
170 [-]: GETTABLE  R12 R0 K28   ; R12 := R0["TopTitle"]
171 [-]: EQ        1 R12 K8     ; if R12 == nil then PC := 178
172 [-]: JMP       178          ; PC := 178
173 [-]: GETUPVAL  R12 U1       ; R12 := U1
174 [-]: GETUPVAL  R13 U2       ; R13 := U2
175 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["SELECTING_PART"]
176 [-]: EQ        1 R12 R13    ; if R12 == R13 then PC := 179
177 [-]: JMP       179          ; PC := 179
178 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 179
179 [-]: LOADBOOL  R12 1 0      ; R12 := true
180 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
181 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
182 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7[0xc0a3774b]
183 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
184 [-]: LOADK     R10 K29      ; R10 := "BottomLine"
185 [-]: LOADK     R11 11       ; R11 := 11.000000
186 [-]: GETTABLE  R12 R0 K30   ; R12 := R0["HasBottomLine"]
187 [-]: EQ        0 R12 K31    ; if R12 ~= true then PC := 194
188 [-]: JMP       194          ; PC := 194
189 [-]: GETUPVAL  R12 U1       ; R12 := U1
190 [-]: GETUPVAL  R13 U2       ; R13 := U2
191 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["SELECTING_PART"]
192 [-]: EQ        1 R12 R13    ; if R12 == R13 then PC := 195
193 [-]: JMP       195          ; PC := 195
194 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 195
195 [-]: LOADBOOL  R12 1 0      ; R12 := true
196 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
197 [-]: GETUPVAL  R7 U1        ; R7 := U1
198 [-]: GETUPVAL  R8 U2        ; R8 := U2
199 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["SELECTING_PART"]
200 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 210
201 [-]: JMP       210          ; PC := 210
202 [-]: LOADK     R2 100       ; R2 := 100.000000
203 [-]: GETGLOBAL R7 K2        ; R7 := mLists
204 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mLoadOutList"]
205 [-]: SELF      R7 R7 K32    ; R8 := R7; R7 := R7[0x68e36b8d]
206 [-]: MOVE      R9 R0        ; R9 := R0
207 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
208 [-]: SETUPVAL  R7 U4        ; U82 := R4
209 [-]: JMP       211          ; PC := 211
210 [-]: ADD       R1 R1 K33    ; R1 := R1 + 3.000000
211 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
212 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7[0xc0a3774b]
213 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mClipName"]
214 [-]: LOADK     R10 K34      ; R10 := "Btn"
215 [-]: LOADK     R11 59       ; R11 := 59.000000
216 [-]: LOADBOOL  R12 0 0      ; R12 := false
217 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
218 [-]: EQ        0 R2 K35     ; if R2 ~= 100.000000 then PC := 225
219 [-]: JMP       225          ; PC := 225
220 [-]: GETUPVAL  R7 U1        ; R7 := U1
221 [-]: GETUPVAL  R8 U2        ; R8 := U2
222 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["BROWSING_CONSUMABLES"]
223 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 226
224 [-]: JMP       226          ; PC := 226
225 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 226
226 [-]: LOADBOOL  R7 1 0       ; R7 := true
227 [-]: GETGLOBAL R8 K15       ; R8 := 0x25312c9b
228 [-]: GETGLOBAL R9 K11       ; R9 := 0xae91e43b
229 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["mClipName"]
230 [-]: LOADK     R11 8        ; R11 := 8.000000
231 [-]: NEWTABLE  R12 3 0      ; R12 := {}
232 [-]: LOADK     R13 1        ; R13 := 1.000000
233 [-]: LOADK     R14 0        ; R14 := 0.000000
234 [-]: LOADK     R15 10       ; R15 := 10.000000
235 [-]: SETLIST   R12 3 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 3
236 [-]: NEWTABLE  R13 3 0      ; R13 := {}
237 [-]: GETUPVAL  R14 U4       ; R14 := U4
238 [-]: MOVE      R15 R1       ; R15 := R1
239 [-]: MOVE      R16 R2       ; R16 := R2
240 [-]: SETLIST   R13 3 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
241 [-]: LOADK     R14 0        ; R14 := 0.250000
242 [-]: LOADK     R15 0        ; R15 := 0.000000
243 [-]: GETUPVAL  R16 U3       ; R16 := U3
244 [-]: GETTABLE  R16 R16 K17  ; R16 := R16[0x06d055f9]
245 [-]: GETTABLE  R17 R0 K9    ; R17 := R0["Id"]
246 [-]: EQ        1 R17 K36    ; if R17 == 1.000000 then PC := 249
247 [-]: JMP       249          ; PC := 249
248 [-]: LOADBOOL  R17 0 1      ; R17 := false; PC := 249
249 [-]: LOADBOOL  R17 1 0      ; R17 := true
250 [-]: CLOSURE   R18 0        ; R18 := closure(Function #47.1.1)
251 [-]: MOVE      R0 R0        ; R0 := R0
252 [-]: MOVE      R0 R7        ; R0 := R7
253 [-]: CLOSURE   R19 1        ; R19 := closure(Function #47.1.2)
254 [-]: MOVE      R0 R0        ; R0 := R0
255 [-]: MOVE      R0 R7        ; R0 := R7
256 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
257 [-]: CALL      R8 0 1       ; R8(R9,...)
258 [-]: GETGLOBAL R8 K11       ; R8 := 0xae91e43b
259 [-]: SELF      R8 R8 K27    ; R9 := R8; R8 := R8[0xc0a3774b]
260 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["mClipName"]
261 [-]: LOADK     R11 K37      ; R11 := "SelectBtn"
262 [-]: LOADK     R12 11       ; R12 := 11.000000
263 [-]: LOADBOOL  R13 0 0      ; R13 := false
264 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
265 [-]: RETURN    R0 1         ; return 


; Function #47.1.1:
;
; Name:            
; Defined at line: 2561
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: SETGLOBAL R0 K0        ; mInputBlocked := R0
  3 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  4 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xc0a3774b]
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipName"]
  7 [-]: LOADK     R3 K4        ; R3 := "Btn"
  8 [-]: LOADK     R4 59        ; R4 := 59.000000
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #47.1.2:
;
; Name:            
; Defined at line: 2561
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xc0a3774b]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mClipName"]
  5 [-]: LOADK     R3 K3        ; R3 := "Btn"
  6 [-]: LOADK     R4 59        ; R4 := 59.000000
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
  9 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 2566
; #Upvalues:       21
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["EquipmentChangesBlocked"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: LOADBOOL  R1 1 0       ; R1 := true
  7 [-]: SETGLOBAL R1 K1        ; mInputBlocked := R1
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0x659d451f]
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UISound_Select"]
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SWAPPING_ITEM"]
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETUPVAL  R1 U2        ; R1 := U2
 18 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["SELECTING_SKINS"]
 19 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["SELECTING_CONSUMABLES"]
 23 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 26
 26 [-]: LOADBOOL  R1 1 0       ; R1 := true
 27 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 28 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x80dc5f76]
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: GETUPVAL  R2 U3        ; R2 := U3
 31 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0x18e56c6b]
 32 [-]: MOVE      R3 R0        ; R3 := R0
 33 [-]: CALL      R2 2 1       ; R2(R3)
 34 [-]: GETUPVAL  R2 U2        ; R2 := U2
 35 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["SELECTING_PART"]
 36 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: GETGLOBAL R2 K12       ; R2 := 0x7b998233
 39 [-]: GETGLOBAL R3 K13       ; R3 := mEvoMovie
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: TEST      R2 1         ; if R2 then PC := 50
 42 [-]: JMP       50           ; PC := 50
 43 [-]: GETGLOBAL R2 K13       ; R2 := mEvoMovie
 44 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xe4162eed]
 45 [-]: LOADK     R4 K15       ; R4 := "Close"
 46 [-]: LOADK     R5 K16       ; R5 := ""
 47 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 48 [-]: LOADNIL   R2 R2        ; R2 := nil
 49 [-]: SETGLOBAL R2 K13       ; mEvoMovie := R2
 50 [-]: GETUPVAL  R2 U2        ; R2 := U2
 51 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["BROWSING_WAY_TREE"]
 52 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 55
 55 [-]: LOADBOOL  R2 1 0       ; R2 := true
 56 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 57 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xaade900e]
 58 [-]: LOADK     R5 K19       ; R5 := "LeftFade"
 59 [-]: LOADK     R6 11        ; R6 := 11.000000
 60 [-]: MOVE      R7 R2        ; R7 := R2
 61 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 62 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 63 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xaade900e]
 64 [-]: LOADK     R5 K20       ; R5 := "RightFade"
 65 [-]: LOADK     R6 11        ; R6 := 11.000000
 66 [-]: MOVE      R7 R2        ; R7 := R2
 67 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 68 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 69 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xaade900e]
 70 [-]: LOADK     R5 K21       ; R5 := "MenuPanel"
 71 [-]: LOADK     R6 11        ; R6 := 11.000000
 72 [-]: MOVE      R7 R2        ; R7 := R2
 73 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 74 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 75 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xaade900e]
 76 [-]: LOADK     R5 K22       ; R5 := "LoadoutCategories"
 77 [-]: LOADK     R6 11        ; R6 := 11.000000
 78 [-]: GETUPVAL  R7 U2        ; R7 := U2
 79 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["SELECTING_PART"]
 80 [-]: EQ        1 R0 R7      ; if R0 == R7 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 83
 83 [-]: LOADBOOL  R7 1 0       ; R7 := true
 84 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 85 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 86 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xaade900e]
 87 [-]: LOADK     R5 K23       ; R5 := "MenuPanel.Label"
 88 [-]: LOADK     R6 11        ; R6 := 11.000000
 89 [-]: GETUPVAL  R7 U2        ; R7 := U2
 90 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["SELECTING_PART"]
 91 [-]: EQ        1 R0 R7      ; if R0 == R7 then PC := 94
 92 [-]: JMP       94           ; PC := 94
 93 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 94
 94 [-]: LOADBOOL  R7 1 0       ; R7 := true
 95 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 96 [-]: GETUPVAL  R3 U2        ; R3 := U2
 97 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["CUSTOMIZING_SKINS"]
 98 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 101
 99 [-]: JMP       101          ; PC := 101
100 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 101
101 [-]: LOADBOOL  R3 1 0       ; R3 := true
102 [-]: GETUPVAL  R4 U2        ; R4 := U2
103 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CUSTOMIZING_SKINS"]
104 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 122
105 [-]: JMP       122          ; PC := 122
106 [-]: GETGLOBAL R4 K12       ; R4 := 0x7b998233
107 [-]: GETGLOBAL R5 K25       ; R5 := mSelected
108 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["Element"]
109 [-]: CALL      R4 2 2       ; R4 := R4(R5)
110 [-]: TEST      R4 1         ; if R4 then PC := 122
111 [-]: JMP       122          ; PC := 122
112 [-]: GETGLOBAL R4 K25       ; R4 := mSelected
113 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["Element"]
114 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["LoadOutType"]
115 [-]: EQ        0 R4 K29     ; if R4 ~= 0.000000 then PC := 122
116 [-]: JMP       122          ; PC := 122
117 [-]: GETGLOBAL R4 K25       ; R4 := mSelected
118 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["Element"]
119 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["LoadOutId"]
120 [-]: EQ        1 R4 K29     ; if R4 == 0.000000 then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 123
123 [-]: LOADBOOL  R4 1 0       ; R4 := true
124 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
125 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xaade900e]
126 [-]: LOADK     R7 K31       ; R7 := "LinkBtn"
127 [-]: LOADK     R8 11        ; R8 := 11.000000
128 [-]: MOVE      R9 R3        ; R9 := R3
129 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
130 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
131 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xaade900e]
132 [-]: LOADK     R7 K32       ; R7 := "CapturaBtn"
133 [-]: LOADK     R8 11        ; R8 := 11.000000
134 [-]: MOVE      R9 R4        ; R9 := R4
135 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
136 [-]: GETUPVAL  R5 U1        ; R5 := U1
137 [-]: GETTABLE  R5 R5 K33    ; R5 := R5[0x06d055f9]
138 [-]: MOVE      R6 R4        ; R6 := R4
139 [-]: LOADK     R7 65        ; R7 := 65.000000
140 [-]: LOADK     R8 0         ; R8 := 0.000000
141 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
142 [-]: GETUPVAL  R6 U1        ; R6 := U1
143 [-]: GETTABLE  R6 R6 K33    ; R6 := R6[0x06d055f9]
144 [-]: MOVE      R7 R3        ; R7 := R3
145 [-]: LOADK     R8 65        ; R8 := 65.000000
146 [-]: LOADK     R9 0         ; R9 := 0.000000
147 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
148 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
149 [-]: SUB       R5 K34 R5    ; R5 := 1777.000000 - R5
150 [-]: TEST      R3 0         ; if not R3 then PC := 164
151 [-]: JMP       164          ; PC := 164
152 [-]: GETUPVAL  R6 U1        ; R6 := U1
153 [-]: GETTABLE  R6 R6 K33    ; R6 := R6[0x06d055f9]
154 [-]: MOVE      R7 R4        ; R7 := R4
155 [-]: LOADK     R8 65        ; R8 := 65.000000
156 [-]: LOADK     R9 0         ; R9 := 0.000000
157 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
158 [-]: SUB       R6 K34 R6    ; R6 := 1777.000000 - R6
159 [-]: GETUPVAL  R7 U4        ; R7 := U4
160 [-]: SELF      R7 R7 K35    ; R8 := R7; R7 := R7[0x4bc5dc8b]
161 [-]: LOADK     R9 K31       ; R9 := "LinkBtn"
162 [-]: MOVE      R10 R6       ; R10 := R6
163 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
164 [-]: GETUPVAL  R7 U4        ; R7 := U4
165 [-]: SELF      R7 R7 K35    ; R8 := R7; R7 := R7[0x4bc5dc8b]
166 [-]: LOADK     R9 K36       ; R9 := "ClipLinkBtn"
167 [-]: MOVE      R10 R5       ; R10 := R5
168 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
169 [-]: GETUPVAL  R7 U4        ; R7 := U4
170 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7[0xfaa69527]
171 [-]: GETGLOBAL R9 K8        ; R9 := 0xae91e43b
172 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9[0x6b837788]
173 [-]: CALL      R9 2 2       ; R9 := R9(R10)
174 [-]: GETGLOBAL R10 K8       ; R10 := 0xae91e43b
175 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10[0xaf9fda9f]
176 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
177 [-]: CALL      R7 0 1       ; R7(R8,...)
178 [-]: GETUPVAL  R7 U2        ; R7 := U2
179 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["CUSTOMIZING_SKINS"]
180 [-]: EQ        1 R0 R7      ; if R0 == R7 then PC := 187
181 [-]: JMP       187          ; PC := 187
182 [-]: GETUPVAL  R7 U2        ; R7 := U2
183 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["SELECTING_PART"]
184 [-]: EQ        1 R0 R7      ; if R0 == R7 then PC := 187
185 [-]: JMP       187          ; PC := 187
186 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 187
187 [-]: LOADBOOL  R7 1 0       ; R7 := true
188 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
189 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xaade900e]
190 [-]: LOADK     R10 K40      ; R10 := "MenuPanel.Left"
191 [-]: LOADK     R11 11       ; R11 := 11.000000
192 [-]: GETGLOBAL R12 K41      ; R12 := 0x34291f5c
193 [-]: GETTABLE  R12 R12 K42  ; R12 := R12[0x1467d5f4]
194 [-]: CALL      R12 1 2      ; R12 := R12()
195 [-]: TEST      R12 0        ; if not R12 then PC := 203
196 [-]: JMP       203          ; PC := 203
197 [-]: GETUPVAL  R12 U2       ; R12 := U2
198 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["CUSTOMIZING_SKINS"]
199 [-]: EQ        1 R0 R12     ; if R0 == R12 then PC := 202
200 [-]: JMP       202          ; PC := 202
201 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 202
202 [-]: LOADBOOL  R12 1 0      ; R12 := true
203 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
204 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
205 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xaade900e]
206 [-]: LOADK     R10 K43      ; R10 := "MenuPanel.Right"
207 [-]: LOADK     R11 11       ; R11 := 11.000000
208 [-]: GETGLOBAL R12 K41      ; R12 := 0x34291f5c
209 [-]: GETTABLE  R12 R12 K42  ; R12 := R12[0x1467d5f4]
210 [-]: CALL      R12 1 2      ; R12 := R12()
211 [-]: TEST      R12 0        ; if not R12 then PC := 214
212 [-]: JMP       214          ; PC := 214
213 [-]: MOVE      R12 R7       ; R12 := R7
214 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
215 [-]: GETUPVAL  R8 U3        ; R8 := U3
216 [-]: GETTABLE  R8 R8 K44    ; R8 := R8[0x75598285]
217 [-]: MOVE      R9 R0        ; R9 := R0
218 [-]: CALL      R8 2 1       ; R8(R9)
219 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
220 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xaade900e]
221 [-]: LOADK     R10 K45      ; R10 := "MenuPanel.LeftArrow"
222 [-]: LOADK     R11 11       ; R11 := 11.000000
223 [-]: GETGLOBAL R12 K41      ; R12 := 0x34291f5c
224 [-]: GETTABLE  R12 R12 K42  ; R12 := R12[0x1467d5f4]
225 [-]: CALL      R12 1 2      ; R12 := R12()
226 [-]: TEST      R12 1        ; if R12 then PC := 232
227 [-]: JMP       232          ; PC := 232
228 [-]: GETUPVAL  R12 U2       ; R12 := U2
229 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["CUSTOMIZING_SKINS"]
230 [-]: EQ        1 R0 R12     ; if R0 == R12 then PC := 233
231 [-]: JMP       233          ; PC := 233
232 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 233
233 [-]: LOADBOOL  R12 1 0      ; R12 := true
234 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
235 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
236 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xaade900e]
237 [-]: LOADK     R10 K46      ; R10 := "MenuPanel.RightArrow"
238 [-]: LOADK     R11 11       ; R11 := 11.000000
239 [-]: GETGLOBAL R12 K41      ; R12 := 0x34291f5c
240 [-]: GETTABLE  R12 R12 K42  ; R12 := R12[0x1467d5f4]
241 [-]: CALL      R12 1 2      ; R12 := R12()
242 [-]: TEST      R12 1        ; if R12 then PC := 246
243 [-]: JMP       246          ; PC := 246
244 [-]: MOVE      R12 R7       ; R12 := R7
245 [-]: JMP       248          ; PC := 248
246 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 247
247 [-]: LOADBOOL  R12 1 0      ; R12 := true
248 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
249 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
250 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xaade900e]
251 [-]: LOADK     R10 K47      ; R10 := "MenuPanel.SelectLoadoutBtn"
252 [-]: LOADK     R11 59       ; R11 := 59.000000
253 [-]: GETGLOBAL R12 K41      ; R12 := 0x34291f5c
254 [-]: GETTABLE  R12 R12 K42  ; R12 := R12[0x1467d5f4]
255 [-]: CALL      R12 1 2      ; R12 := R12()
256 [-]: TEST      R12 1        ; if R12 then PC := 262
257 [-]: JMP       262          ; PC := 262
258 [-]: GETUPVAL  R12 U2       ; R12 := U2
259 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["SELECTING_PART"]
260 [-]: EQ        1 R0 R12     ; if R0 == R12 then PC := 263
261 [-]: JMP       263          ; PC := 263
262 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 263
263 [-]: LOADBOOL  R12 1 0      ; R12 := true
264 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
265 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
266 [-]: SELF      R8 R8 K48    ; R9 := R8; R8 := R8[0x5f56eeab]
267 [-]: LOADK     R10 K49      ; R10 := "CosmeticDesc"
268 [-]: LOADK     R11 29       ; R11 := 29.000000
269 [-]: LOADK     R12 K16      ; R12 := ""
270 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
271 [-]: GETUPVAL  R8 U2        ; R8 := U2
272 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["SWAPPING_ITEM"]
273 [-]: EQ        1 R0 R8      ; if R0 == R8 then PC := 292
274 [-]: JMP       292          ; PC := 292
275 [-]: GETGLOBAL R8 K50       ; R8 := mButtons
276 [-]: GETTABLE  R8 R8 K51    ; R8 := R8[2.000000]
277 [-]: SETTABLE  R8 K52 K53   ; R8["mVisible"] := false
278 [-]: GETGLOBAL R8 K54       ; R8 := mItemsGrid
279 [-]: SELF      R8 R8 K55    ; R9 := R8; R8 := R8[0x7c09c373]
280 [-]: LOADBOOL  R10 1 0      ; R10 := true
281 [-]: LOADBOOL  R11 1 0      ; R11 := true
282 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
283 [-]: GETGLOBAL R8 K54       ; R8 := mItemsGrid
284 [-]: SELF      R8 R8 K56    ; R9 := R8; R8 := R8[0x71e9ac81]
285 [-]: CALL      R8 2 1       ; R8(R9)
286 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
287 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xaade900e]
288 [-]: LOADK     R10 K57      ; R10 := "Item"
289 [-]: LOADK     R11 59       ; R11 := 59.000000
290 [-]: LOADBOOL  R12 0 0      ; R12 := false
291 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
292 [-]: GETGLOBAL R8 K50       ; R8 := mButtons
293 [-]: GETGLOBAL R9 K58       ; R9 := mButtonIndices
294 [-]: GETTABLE  R9 R9 K59    ; R9 := R9["Rotate"]
295 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
296 [-]: EQ        1 R8 K60     ; if R8 == nil then PC := 327
297 [-]: JMP       327          ; PC := 327
298 [-]: GETGLOBAL R8 K41       ; R8 := 0x34291f5c
299 [-]: GETTABLE  R8 R8 K42    ; R8 := R8[0x1467d5f4]
300 [-]: CALL      R8 1 2       ; R8 := R8()
301 [-]: TEST      R8 0         ; if not R8 then PC := 313
302 [-]: JMP       313          ; PC := 313
303 [-]: GETUPVAL  R8 U2        ; R8 := U2
304 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["SWAPPING_ITEM"]
305 [-]: EQ        1 R0 R8      ; if R0 == R8 then PC := 312
306 [-]: JMP       312          ; PC := 312
307 [-]: GETUPVAL  R8 U2        ; R8 := U2
308 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["SELECTING_SKINS"]
309 [-]: EQ        1 R0 R8      ; if R0 == R8 then PC := 312
310 [-]: JMP       312          ; PC := 312
311 [-]: LOADBOOL  R8 0 1       ; R8 := false; PC := 312
312 [-]: LOADBOOL  R8 1 0       ; R8 := true
313 [-]: GETGLOBAL R9 K50       ; R9 := mButtons
314 [-]: GETGLOBAL R10 K58      ; R10 := mButtonIndices
315 [-]: GETTABLE  R10 R10 K59  ; R10 := R10["Rotate"]
316 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
317 [-]: SETTABLE  R9 K52 R8    ; R9["mVisible"] := R8
318 [-]: TEST      R8 1         ; if R8 then PC := 327
319 [-]: JMP       327          ; PC := 327
320 [-]: GETGLOBAL R9 K50       ; R9 := mButtons
321 [-]: GETGLOBAL R10 K58      ; R10 := mButtonIndices
322 [-]: GETTABLE  R10 R10 K59  ; R10 := R10["Rotate"]
323 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
324 [-]: GETTABLE  R9 R9 K61    ; R9 := R9[0x7ca0d7fa]
325 [-]: LOADBOOL  R10 0 0      ; R10 := false
326 [-]: CALL      R9 2 1       ; R9(R10)
327 [-]: GETUPVAL  R9 U2        ; R9 := U2
328 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["SELECTING_SKINS"]
329 [-]: EQ        1 R0 R9      ; if R0 == R9 then PC := 434
330 [-]: JMP       434          ; PC := 434
331 [-]: GETGLOBAL R9 K25       ; R9 := mSelected
332 [-]: GETTABLE  R9 R9 K62    ; R9 := R9["CosmeticItem"]
333 [-]: EQ        1 R9 K60     ; if R9 == nil then PC := 434
334 [-]: JMP       434          ; PC := 434
335 [-]: GETGLOBAL R9 K25       ; R9 := mSelected
336 [-]: GETTABLE  R9 R9 K63    ; R9 := R9["Cosmetic"]
337 [-]: EQ        1 R9 K60     ; if R9 == nil then PC := 434
338 [-]: JMP       434          ; PC := 434
339 [-]: GETGLOBAL R9 K25       ; R9 := mSelected
340 [-]: GETTABLE  R9 R9 K63    ; R9 := R9["Cosmetic"]
341 [-]: GETTABLE  R9 R9 K64    ; R9 := R9["PetTrait"]
342 [-]: TEST      R9 0         ; if not R9 then PC := 367
343 [-]: JMP       367          ; PC := 367
344 [-]: GETGLOBAL R9 K25       ; R9 := mSelected
345 [-]: GETTABLE  R9 R9 K63    ; R9 := R9["Cosmetic"]
346 [-]: GETTABLE  R9 R9 K65    ; R9 := R9["Attribute"]
347 [-]: TEST      R9 0         ; if not R9 then PC := 367
348 [-]: JMP       367          ; PC := 367
349 [-]: GETGLOBAL R9 K25       ; R9 := mSelected
350 [-]: GETTABLE  R9 R9 K66    ; R9 := R9["CosmeticPreviousValue"]
351 [-]: EQ        1 R9 K60     ; if R9 == nil then PC := 364
352 [-]: JMP       364          ; PC := 364
353 [-]: GETUPVAL  R9 U5        ; R9 := U5
354 [-]: GETGLOBAL R10 K25      ; R10 := mSelected
355 [-]: GETTABLE  R10 R10 K63  ; R10 := R10["Cosmetic"]
356 [-]: GETTABLE  R10 R10 K65  ; R10 := R10["Attribute"]
357 [-]: GETGLOBAL R11 K25      ; R11 := mSelected
358 [-]: GETTABLE  R11 R11 K66  ; R11 := R11["CosmeticPreviousValue"]
359 [-]: SELF      R11 R11 K67  ; R12 := R11; R11 := R11[0xa5d5c8f6]
360 [-]: CALL      R11 2 2      ; R11 := R11(R12)
361 [-]: LOADK     R12 0        ; R12 := 0.000000
362 [-]: LOADNIL   R13 R13      ; R13 := nil
363 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
364 [-]: GETGLOBAL R9 K25       ; R9 := mSelected
365 [-]: SETTABLE  R9 K66 K60   ; R9["CosmeticPreviousValue"] := nil
366 [-]: JMP       434          ; PC := 434
367 [-]: GETGLOBAL R9 K12       ; R9 := 0x7b998233
368 [-]: GETGLOBAL R10 K25      ; R10 := mSelected
369 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["Element"]
370 [-]: CALL      R9 2 2       ; R9 := R9(R10)
371 [-]: TEST      R9 1         ; if R9 then PC := 434
372 [-]: JMP       434          ; PC := 434
373 [-]: GETGLOBAL R9 K25       ; R9 := mSelected
374 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["Element"]
375 [-]: GETTABLE  R9 R9 K68    ; R9 := R9["Customization"]
376 [-]: SELF      R9 R9 K69    ; R10 := R9; R9 := R9[0x2540510f]
377 [-]: GETGLOBAL R11 K25      ; R11 := mSelected
378 [-]: GETTABLE  R11 R11 K63  ; R11 := R11["Cosmetic"]
379 [-]: GETTABLE  R11 R11 K70  ; R11 := R11["Slot"]
380 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
381 [-]: GETGLOBAL R10 K71      ; R10 := _T
382 [-]: GETTABLE  R10 R10 K72  ; R10 := R10["MenuSuitAvatar"]
383 [-]: GETGLOBAL R11 K25      ; R11 := mSelected
384 [-]: GETTABLE  R11 R11 K62  ; R11 := R11["CosmeticItem"]
385 [-]: GETTABLE  R11 R11 K73  ; R11 := R11["Type"]
386 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 434
387 [-]: JMP       434          ; PC := 434
388 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
389 [-]: GETGLOBAL R12 K74      ; R12 := 0x25d99d89
390 [-]: CALL      R11 2 2      ; R11 := R11(R12)
391 [-]: TEST      R11 1        ; if R11 then PC := 434
392 [-]: JMP       434          ; PC := 434
393 [-]: GETGLOBAL R11 K25      ; R11 := mSelected
394 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["Element"]
395 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["LoadOutType"]
396 [-]: EQ        0 R11 K75    ; if R11 ~= 4.000000 then PC := 403
397 [-]: JMP       403          ; PC := 403
398 [-]: SELF      R11 R10 K76  ; R12 := R10; R11 := R10[0xde321e6f]
399 [-]: CALL      R11 2 2      ; R11 := R11(R12)
400 [-]: SELF      R11 R11 K77  ; R12 := R11; R11 := R11[0xf596420f]
401 [-]: CALL      R11 2 1      ; R11(R12)
402 [-]: JMP       434          ; PC := 434
403 [-]: SELF      R11 R10 K76  ; R12 := R10; R11 := R10[0xde321e6f]
404 [-]: CALL      R11 2 2      ; R11 := R11(R12)
405 [-]: SELF      R11 R11 K78  ; R12 := R11; R11 := R11[0x374b084a]
406 [-]: CALL      R11 2 1      ; R11(R12)
407 [-]: GETUPVAL  R11 U6       ; R11 := U6
408 [-]: GETUPVAL  R12 U7       ; R12 := U7
409 [-]: GETTABLE  R12 R12 K79  ; R12 := R12["Current"]
410 [-]: EQ        1 R12 K51    ; if R12 == 2.000000 then PC := 413
411 [-]: JMP       413          ; PC := 413
412 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 413
413 [-]: LOADBOOL  R12 1 0      ; R12 := true
414 [-]: CALL      R11 2 1      ; R11(R12)
415 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
416 [-]: GETUPVAL  R12 U8       ; R12 := U8
417 [-]: CALL      R11 2 2      ; R11 := R11(R12)
418 [-]: TEST      R11 0        ; if not R11 then PC := 424
419 [-]: JMP       424          ; PC := 424
420 [-]: SELF      R11 R10 K76  ; R12 := R10; R11 := R10[0xde321e6f]
421 [-]: CALL      R11 2 2      ; R11 := R11(R12)
422 [-]: SELF      R11 R11 K80  ; R12 := R11; R11 := R11[0x0c277ae1]
423 [-]: CALL      R11 2 1      ; R11(R12)
424 [-]: GETUPVAL  R11 U9       ; R11 := U9
425 [-]: GETGLOBAL R12 K25      ; R12 := mSelected
426 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["Element"]
427 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["LoadOutType"]
428 [-]: GETGLOBAL R13 K25      ; R13 := mSelected
429 [-]: GETTABLE  R13 R13 K26  ; R13 := R13["Element"]
430 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["LoadOutId"]
431 [-]: GETGLOBAL R14 K25      ; R14 := mSelected
432 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["Element"]
433 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
434 [-]: GETUPVAL  R11 U10      ; R11 := U10
435 [-]: GETUPVAL  R12 U2       ; R12 := U2
436 [-]: GETTABLE  R12 R12 K81  ; R12 := R12["BROWSING_CONSUMABLES"]
437 [-]: EQ        1 R0 R12     ; if R0 == R12 then PC := 440
438 [-]: JMP       440          ; PC := 440
439 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 440
440 [-]: LOADBOOL  R12 1 0      ; R12 := true
441 [-]: CALL      R11 2 1      ; R11(R12)
442 [-]: GETUPVAL  R11 U2       ; R11 := U2
443 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["SELECTING_CONSUMABLES"]
444 [-]: EQ        1 R0 R11     ; if R0 == R11 then PC := 450
445 [-]: JMP       450          ; PC := 450
446 [-]: GETGLOBAL R11 K25      ; R11 := mSelected
447 [-]: SETTABLE  R11 K82 K60  ; R11["Consumable"] := nil
448 [-]: GETGLOBAL R11 K25      ; R11 := mSelected
449 [-]: SETTABLE  R11 K83 K60  ; R11["Emote"] := nil
450 [-]: GETGLOBAL R11 K50      ; R11 := mButtons
451 [-]: GETGLOBAL R12 K58      ; R12 := mButtonIndices
452 [-]: GETTABLE  R12 R12 K84  ; R12 := R12["SuitAppearance"]
453 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
454 [-]: SETTABLE  R11 K52 K53  ; R11["mVisible"] := false
455 [-]: GETGLOBAL R11 K50      ; R11 := mButtons
456 [-]: GETGLOBAL R12 K58      ; R12 := mButtonIndices
457 [-]: GETTABLE  R12 R12 K85  ; R12 := R12["PvpTeam"]
458 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
459 [-]: GETUPVAL  R12 U11      ; R12 := U11
460 [-]: MOVE      R13 R0       ; R13 := R0
461 [-]: CALL      R12 2 2      ; R12 := R12(R13)
462 [-]: SETTABLE  R11 K52 R12  ; R11["mVisible"] := R12
463 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
464 [-]: GETGLOBAL R12 K50      ; R12 := mButtons
465 [-]: GETGLOBAL R13 K58      ; R13 := mButtonIndices
466 [-]: GETTABLE  R13 R13 K86  ; R13 := R13["Mode"]
467 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
468 [-]: CALL      R11 2 2      ; R11 := R11(R12)
469 [-]: TEST      R11 1        ; if R11 then PC := 479
470 [-]: JMP       479          ; PC := 479
471 [-]: GETGLOBAL R11 K50      ; R11 := mButtons
472 [-]: GETGLOBAL R12 K58      ; R12 := mButtonIndices
473 [-]: GETTABLE  R12 R12 K86  ; R12 := R12["Mode"]
474 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
475 [-]: GETUPVAL  R12 U12      ; R12 := U12
476 [-]: MOVE      R13 R0       ; R13 := R0
477 [-]: CALL      R12 2 2      ; R12 := R12(R13)
478 [-]: SETTABLE  R11 K52 R12  ; R11["mVisible"] := R12
479 [-]: GETUPVAL  R11 U2       ; R11 := U2
480 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["CUSTOMIZING_SKINS"]
481 [-]: EQ        1 R0 R11     ; if R0 == R11 then PC := 487
482 [-]: JMP       487          ; PC := 487
483 [-]: GETUPVAL  R11 U2       ; R11 := U2
484 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["SELECTING_SKINS"]
485 [-]: EQ        0 R0 R11     ; if R0 ~= R11 then PC := 828
486 [-]: JMP       828          ; PC := 828
487 [-]: GETGLOBAL R11 K87      ; R11 := mLists
488 [-]: GETTABLE  R11 R11 K88  ; R11 := R11["mCosmeticsList"]
489 [-]: SELF      R11 R11 K89  ; R12 := R11; R11 := R11[0xea061e98]
490 [-]: CLOSURE   R13 0        ; R13 := closure(Function #48.1)
491 [-]: MOVE      R0 R0        ; R0 := R0
492 [-]: GETUPVAL  R0 U2        ; R0 := U2
493 [-]: CALL      R11 3 1      ; R11(R12,R13)
494 [-]: GETUPVAL  R11 U2       ; R11 := U2
495 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["SELECTING_SKINS"]
496 [-]: EQ        0 R0 R11     ; if R0 ~= R11 then PC := 504
497 [-]: JMP       504          ; PC := 504
498 [-]: GETGLOBAL R11 K8       ; R11 := 0xae91e43b
499 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11[0xaade900e]
500 [-]: LOADK     R13 K90      ; R13 := "CosmeticsMenuScrollBar"
501 [-]: LOADK     R14 11       ; R14 := 11.000000
502 [-]: LOADBOOL  R15 0 0      ; R15 := false
503 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
504 [-]: GETUPVAL  R11 U2       ; R11 := U2
505 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["CUSTOMIZING_SKINS"]
506 [-]: EQ        0 R0 R11     ; if R0 ~= R11 then PC := 814
507 [-]: JMP       814          ; PC := 814
508 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
509 [-]: GETGLOBAL R12 K25      ; R12 := mSelected
510 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["Element"]
511 [-]: CALL      R11 2 2      ; R11 := R11(R12)
512 [-]: TEST      R11 1        ; if R11 then PC := 814
513 [-]: JMP       814          ; PC := 814
514 [-]: GETGLOBAL R11 K71      ; R11 := _T
515 [-]: GETTABLE  R11 R11 K72  ; R11 := R11["MenuSuitAvatar"]
516 [-]: SELF      R12 R11 K91  ; R13 := R11; R12 := R11[0x2e9b92e3]
517 [-]: LOADK     R14 1        ; R14 := 1.000000
518 [-]: CALL      R12 3 1      ; R12(R13,R14)
519 [-]: LOADBOOL  R12 1 0      ; R12 := true
520 [-]: SETGLOBAL R12 K92      ; mRePopulateCosmetics := R12
521 [-]: GETGLOBAL R12 K25      ; R12 := mSelected
522 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["Element"]
523 [-]: GETTABLE  R12 R12 K93  ; R12 := R12["LunaroArenaEntry"]
524 [-]: TEST      R12 0        ; if not R12 then PC := 527
525 [-]: JMP       527          ; PC := 527
526 [-]: JMP       814          ; PC := 814
527 [-]: GETGLOBAL R12 K25      ; R12 := mSelected
528 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["Element"]
529 [-]: GETTABLE  R12 R12 K30  ; R12 := R12["LoadOutId"]
530 [-]: EQ        0 R12 K29    ; if R12 ~= 0.000000 then PC := 814
531 [-]: JMP       814          ; PC := 814
532 [-]: GETGLOBAL R12 K25      ; R12 := mSelected
533 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["Element"]
534 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["LoadOutType"]
535 [-]: EQ        1 R12 K94    ; if R12 == 7.000000 then PC := 814
536 [-]: JMP       814          ; PC := 814
537 [-]: GETGLOBAL R12 K12      ; R12 := 0x7b998233
538 [-]: GETUPVAL  R13 U8       ; R13 := U8
539 [-]: CALL      R12 2 2      ; R12 := R12(R13)
540 [-]: TEST      R12 0        ; if not R12 then PC := 607
541 [-]: JMP       607          ; PC := 607
542 [-]: SELF      R12 R11 K76  ; R13 := R11; R12 := R11[0xde321e6f]
543 [-]: CALL      R12 2 2      ; R12 := R12(R13)
544 [-]: SELF      R13 R12 K95  ; R14 := R12; R13 := R12[0xc533c156]
545 [-]: LOADK     R15 0        ; R15 := 0.000000
546 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
547 [-]: SETUPVAL  R13 U8       ; U82 := R8
548 [-]: LOADBOOL  R13 0 0      ; R13 := false
549 [-]: SELF      R14 R12 K96  ; R15 := R12; R14 := R12[0xf7d48ee0]
550 [-]: CALL      R14 2 2      ; R14 := R14(R15)
551 [-]: GETGLOBAL R15 K12      ; R15 := 0x7b998233
552 [-]: MOVE      R16 R14      ; R16 := R14
553 [-]: CALL      R15 2 2      ; R15 := R15(R16)
554 [-]: TEST      R15 1        ; if R15 then PC := 594
555 [-]: JMP       594          ; PC := 594
556 [-]: SELF      R15 R12 K97  ; R16 := R12; R15 := R12[0x8205b296]
557 [-]: LOADK     R17 0        ; R17 := 0.000000
558 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
559 [-]: GETGLOBAL R16 K12      ; R16 := 0x7b998233
560 [-]: MOVE      R17 R15      ; R17 := R15
561 [-]: CALL      R16 2 2      ; R16 := R16(R17)
562 [-]: TEST      R16 1        ; if R16 then PC := 594
563 [-]: JMP       594          ; PC := 594
564 [-]: SELF      R16 R15 K98  ; R17 := R15; R16 := R15[0xf2deaf69]
565 [-]: GETGLOBAL R18 K99      ; R18 := gLotusCustomAimWeaponType
566 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
567 [-]: TEST      R16 1        ; if R16 then PC := 594
568 [-]: JMP       594          ; PC := 594
569 [-]: SELF      R16 R14 K98  ; R17 := R14; R16 := R14[0xf2deaf69]
570 [-]: GETGLOBAL R18 K100     ; R18 := 0xf773e9d4
571 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
572 [-]: TEST      R16 1        ; if R16 then PC := 594
573 [-]: JMP       594          ; PC := 594
574 [-]: LOADK     R16 5        ; R16 := 5.000000
575 [-]: LOADK     R17 6        ; R17 := 6.000000
576 [-]: LOADK     R18 1        ; R18 := 1.000000
577 [-]: FORPREP   R16 593      ; R16 -= R18; PC := 593
578 [-]: SELF      R20 R14 K101 ; R21 := R14; R20 := R14[0x4a5d8c86]
579 [-]: MOVE      R22 R19      ; R22 := R19
580 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
581 [-]: GETGLOBAL R21 K12      ; R21 := 0x7b998233
582 [-]: GETTABLE  R22 R20 K102 ; R22 := R20["mItemType"]
583 [-]: CALL      R21 2 2      ; R21 := R21(R22)
584 [-]: TEST      R21 1        ; if R21 then PC := 593
585 [-]: JMP       593          ; PC := 593
586 [-]: GETTABLE  R21 R20 K102 ; R21 := R20["mItemType"]
587 [-]: SELF      R22 R15 K103 ; R23 := R15; R22 := R15[0xcde10c4a]
588 [-]: CALL      R22 2 2      ; R22 := R22(R23)
589 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 593
590 [-]: JMP       593          ; PC := 593
591 [-]: LOADBOOL  R13 1 0      ; R13 := true
592 [-]: JMP       594          ; PC := 594
593 [-]: FORLOOP   R16 578      ; R16 += R18; if R16 <= R17 then begin PC := 578; R19 := R16 end
594 [-]: TEST      R13 0        ; if not R13 then PC := 600
595 [-]: JMP       600          ; PC := 600
596 [-]: SELF      R21 R12 K104 ; R22 := R12; R21 := R12[0x0eeedfea]
597 [-]: GETUPVAL  R23 U8       ; R23 := U8
598 [-]: CALL      R21 3 1      ; R21(R22,R23)
599 [-]: JMP       604          ; PC := 604
600 [-]: SELF      R21 R12 K105 ; R22 := R12; R21 := R12[0x54732cc7]
601 [-]: GETUPVAL  R23 U8       ; R23 := U8
602 [-]: LOADK     R24 2        ; R24 := 2.000000
603 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
604 [-]: SELF      R21 R12 K106 ; R22 := R12; R21 := R12[0x0b5ec5b5]
605 [-]: LOADBOOL  R23 0 0      ; R23 := false
606 [-]: CALL      R21 3 1      ; R21(R22,R23)
607 [-]: GETUPVAL  R21 U13      ; R21 := U13
608 [-]: GETGLOBAL R22 K25      ; R22 := mSelected
609 [-]: GETTABLE  R22 R22 K26  ; R22 := R22["Element"]
610 [-]: GETTABLE  R22 R22 K27  ; R22 := R22["LoadOutType"]
611 [-]: GETGLOBAL R23 K25      ; R23 := mSelected
612 [-]: GETTABLE  R23 R23 K26  ; R23 := R23["Element"]
613 [-]: GETTABLE  R23 R23 K30  ; R23 := R23["LoadOutId"]
614 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
615 [-]: GETGLOBAL R22 K12      ; R22 := 0x7b998233
616 [-]: MOVE      R23 R21      ; R23 := R21
617 [-]: CALL      R22 2 2      ; R22 := R22(R23)
618 [-]: TEST      R22 1        ; if R22 then PC := 814
619 [-]: JMP       814          ; PC := 814
620 [-]: SELF      R22 R21 K98  ; R23 := R21; R22 := R21[0xf2deaf69]
621 [-]: GETGLOBAL R24 K107     ; R24 := 0xb5afcb89
622 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
623 [-]: TEST      R22 0        ; if not R22 then PC := 644
624 [-]: JMP       644          ; PC := 644
625 [-]: GETGLOBAL R22 K50      ; R22 := mButtons
626 [-]: GETGLOBAL R23 K58      ; R23 := mButtonIndices
627 [-]: GETTABLE  R23 R23 K84  ; R23 := R23["SuitAppearance"]
628 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
629 [-]: SETTABLE  R22 K52 K108 ; R22["mVisible"] := true
630 [-]: GETGLOBAL R22 K50      ; R22 := mButtons
631 [-]: GETGLOBAL R23 K58      ; R23 := mButtonIndices
632 [-]: GETTABLE  R23 R23 K84  ; R23 := R23["SuitAppearance"]
633 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
634 [-]: GETGLOBAL R23 K110     ; R23 := 0x7f5022cf
635 [-]: GETTABLE  R23 R23 K111 ; R23 := R23[0x3f3e4d12]
636 [-]: GETGLOBAL R24 K8       ; R24 := 0xae91e43b
637 [-]: SELF      R24 R24 K112 ; R25 := R24; R24 := R24[0x42b04007]
638 [-]: LOADK     R26 K113     ; R26 := "/Lotus/Language/Suits/SentientAbilityName"
639 [-]: LOADBOOL  R27 0 0      ; R27 := false
640 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
641 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
642 [-]: SETTABLE  R22 K109 R23 ; R22["mLabel"] := R23
643 [-]: JMP       814          ; PC := 814
644 [-]: SELF      R22 R21 K98  ; R23 := R21; R22 := R21[0xf2deaf69]
645 [-]: GETGLOBAL R24 K114     ; R24 := 0xe3ae0932
646 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
647 [-]: TEST      R22 0        ; if not R22 then PC := 668
648 [-]: JMP       668          ; PC := 668
649 [-]: GETGLOBAL R22 K50      ; R22 := mButtons
650 [-]: GETGLOBAL R23 K58      ; R23 := mButtonIndices
651 [-]: GETTABLE  R23 R23 K84  ; R23 := R23["SuitAppearance"]
652 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
653 [-]: SETTABLE  R22 K52 K108 ; R22["mVisible"] := true
654 [-]: GETGLOBAL R22 K50      ; R22 := mButtons
655 [-]: GETGLOBAL R23 K58      ; R23 := mButtonIndices
656 [-]: GETTABLE  R23 R23 K84  ; R23 := R23["SuitAppearance"]
657 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
658 [-]: GETGLOBAL R23 K110     ; R23 := 0x7f5022cf
659 [-]: GETTABLE  R23 R23 K111 ; R23 := R23[0x3f3e4d12]
660 [-]: GETGLOBAL R24 K8       ; R24 := 0xae91e43b
661 [-]: SELF      R24 R24 K112 ; R25 := R24; R24 := R24[0x42b04007]
662 [-]: LOADK     R26 K115     ; R26 := "/Lotus/Language/Suits/YinYangSwitchAbilityName"
663 [-]: LOADBOOL  R27 0 0      ; R27 := false
664 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
665 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
666 [-]: SETTABLE  R22 K109 R23 ; R22["mLabel"] := R23
667 [-]: JMP       814          ; PC := 814
668 [-]: SELF      R22 R21 K98  ; R23 := R21; R22 := R21[0xf2deaf69]
669 [-]: GETGLOBAL R24 K116     ; R24 := 0x68564c44
670 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
671 [-]: TEST      R22 0        ; if not R22 then PC := 692
672 [-]: JMP       692          ; PC := 692
673 [-]: GETGLOBAL R22 K50      ; R22 := mButtons
674 [-]: GETGLOBAL R23 K58      ; R23 := mButtonIndices
675 [-]: GETTABLE  R23 R23 K84  ; R23 := R23["SuitAppearance"]
676 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
677 [-]: SETTABLE  R22 K52 K108 ; R22["mVisible"] := true
678 [-]: GETGLOBAL R22 K50      ; R22 := mButtons
679 [-]: GETGLOBAL R23 K58      ; R23 := mButtonIndices
680 [-]: GETTABLE  R23 R23 K84  ; R23 := R23["SuitAppearance"]
681 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
682 [-]: GETGLOBAL R23 K110     ; R23 := 0x7f5022cf
683 [-]: GETTABLE  R23 R23 K111 ; R23 := R23[0x3f3e4d12]
684 [-]: GETGLOBAL R24 K8       ; R24 := 0xae91e43b
685 [-]: SELF      R24 R24 K112 ; R25 := R24; R24 := R24[0x42b04007]
686 [-]: LOADK     R26 K117     ; R26 := "/Lotus/Language/Suits/InfestationAdaptation"
687 [-]: LOADBOOL  R27 0 0      ; R27 := false
688 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
689 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
690 [-]: SETTABLE  R22 K109 R23 ; R22["mLabel"] := R23
691 [-]: JMP       814          ; PC := 814
692 [-]: SELF      R22 R21 K98  ; R23 := R21; R22 := R21[0xf2deaf69]
693 [-]: GETGLOBAL R24 K118     ; R24 := 0x6dcacb87
694 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
695 [-]: TEST      R22 0        ; if not R22 then PC := 761
696 [-]: JMP       761          ; PC := 761
697 [-]: LOADK     R22 0        ; R22 := 0.000000
698 [-]: LOADK     R23 0        ; R23 := 0.000000
699 [-]: GETGLOBAL R24 K12      ; R24 := 0x7b998233
700 [-]: GETGLOBAL R25 K71      ; R25 := _T
701 [-]: GETTABLE  R25 R25 K119 ; R25 := R25["KHORA_CurrentMode"]
702 [-]: CALL      R24 2 2      ; R24 := R24(R25)
703 [-]: TEST      R24 1        ; if R24 then PC := 724
704 [-]: JMP       724          ; PC := 724
705 [-]: GETGLOBAL R24 K12      ; R24 := 0x7b998233
706 [-]: GETGLOBAL R25 K71      ; R25 := _T
707 [-]: GETTABLE  R25 R25 K119 ; R25 := R25["KHORA_CurrentMode"]
708 [-]: SELF      R26 R11 K120 ; R27 := R11; R26 := R11[0x388577d5]
709 [-]: CALL      R26 2 2      ; R26 := R26(R27)
710 [-]: GETTABLE  R25 R25 R26  ; R25 := R25[R26]
711 [-]: CALL      R24 2 2      ; R24 := R24(R25)
712 [-]: TEST      R24 1        ; if R24 then PC := 724
713 [-]: JMP       724          ; PC := 724
714 [-]: GETGLOBAL R24 K71      ; R24 := _T
715 [-]: GETTABLE  R24 R24 K119 ; R24 := R24["KHORA_CurrentMode"]
716 [-]: SELF      R25 R11 K120 ; R26 := R11; R25 := R11[0x388577d5]
717 [-]: CALL      R25 2 2      ; R25 := R25(R26)
718 [-]: GETTABLE  R22 R24 R25  ; R22 := R24[R25]
719 [-]: GETGLOBAL R24 K71      ; R24 := _T
720 [-]: GETTABLE  R24 R24 K121 ; R24 := R24[0xb1b8ab73]
721 [-]: MOVE      R25 R21      ; R25 := R21
722 [-]: CALL      R24 2 2      ; R24 := R24(R25)
723 [-]: MOVE      R23 R24      ; R23 := R24
724 [-]: LT        0 K29 R23    ; if 0.000000 >= R23 then PC := 740
725 [-]: JMP       740          ; PC := 740
726 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
727 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
728 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
729 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
730 [-]: GETGLOBAL R25 K110     ; R25 := 0x7f5022cf
731 [-]: GETTABLE  R25 R25 K111 ; R25 := R25[0x3f3e4d12]
732 [-]: GETGLOBAL R26 K8       ; R26 := 0xae91e43b
733 [-]: SELF      R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
734 [-]: LOADK     R28 K122     ; R28 := "/Lotus/Language/Suits/KhoraKavatModeNone"
735 [-]: LOADBOOL  R29 1 0      ; R29 := true
736 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
737 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
738 [-]: SETTABLE  R24 K109 R25 ; R24["mLabel"] := R25
739 [-]: JMP       755          ; PC := 755
740 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
741 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
742 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
743 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
744 [-]: GETGLOBAL R25 K110     ; R25 := 0x7f5022cf
745 [-]: GETTABLE  R25 R25 K111 ; R25 := R25[0x3f3e4d12]
746 [-]: GETGLOBAL R26 K8       ; R26 := 0xae91e43b
747 [-]: SELF      R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
748 [-]: LOADK     R28 K123     ; R28 := "/Lotus/Language/Suits/KhoraKavatMode"
749 [-]: MOVE      R29 R22      ; R29 := R22
750 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
751 [-]: LOADBOOL  R29 1 0      ; R29 := true
752 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
753 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
754 [-]: SETTABLE  R24 K109 R25 ; R24["mLabel"] := R25
755 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
756 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
757 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
758 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
759 [-]: SETTABLE  R24 K52 K108 ; R24["mVisible"] := true
760 [-]: JMP       814          ; PC := 814
761 [-]: SELF      R24 R21 K98  ; R25 := R21; R24 := R21[0xf2deaf69]
762 [-]: GETGLOBAL R26 K124     ; R26 := 0x2ccd2c30
763 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
764 [-]: TEST      R24 0        ; if not R24 then PC := 785
765 [-]: JMP       785          ; PC := 785
766 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
767 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
768 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
769 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
770 [-]: SETTABLE  R24 K52 K108 ; R24["mVisible"] := true
771 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
772 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
773 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
774 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
775 [-]: GETGLOBAL R25 K110     ; R25 := 0x7f5022cf
776 [-]: GETTABLE  R25 R25 K111 ; R25 := R25[0x3f3e4d12]
777 [-]: GETGLOBAL R26 K8       ; R26 := 0xae91e43b
778 [-]: SELF      R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
779 [-]: LOADK     R28 K125     ; R28 := "/Lotus/Language/Suits/RunnerRedlineAbilityName"
780 [-]: LOADBOOL  R29 0 0      ; R29 := false
781 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
782 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
783 [-]: SETTABLE  R24 K109 R25 ; R24["mLabel"] := R25
784 [-]: JMP       814          ; PC := 814
785 [-]: SELF      R24 R21 K98  ; R25 := R21; R24 := R21[0xf2deaf69]
786 [-]: GETGLOBAL R26 K126     ; R26 := 0x969b8384
787 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
788 [-]: TEST      R24 0        ; if not R24 then PC := 809
789 [-]: JMP       809          ; PC := 809
790 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
791 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
792 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
793 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
794 [-]: SETTABLE  R24 K52 K108 ; R24["mVisible"] := true
795 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
796 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
797 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
798 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
799 [-]: GETGLOBAL R25 K110     ; R25 := 0x7f5022cf
800 [-]: GETTABLE  R25 R25 K111 ; R25 := R25[0x3f3e4d12]
801 [-]: GETGLOBAL R26 K8       ; R26 := 0xae91e43b
802 [-]: SELF      R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
803 [-]: LOADK     R28 K127     ; R28 := "/Lotus/Language/Suits/BrokenFrameMode_Broken"
804 [-]: LOADBOOL  R29 0 0      ; R29 := false
805 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
806 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
807 [-]: SETTABLE  R24 K109 R25 ; R24["mLabel"] := R25
808 [-]: JMP       814          ; PC := 814
809 [-]: GETGLOBAL R24 K50      ; R24 := mButtons
810 [-]: GETGLOBAL R25 K58      ; R25 := mButtonIndices
811 [-]: GETTABLE  R25 R25 K84  ; R25 := R25["SuitAppearance"]
812 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
813 [-]: SETTABLE  R24 K52 K53  ; R24["mVisible"] := false
814 [-]: LOADK     R24 1        ; R24 := 1.000000
815 [-]: LOADK     R25 4        ; R25 := 4.000000
816 [-]: LOADK     R26 1        ; R26 := 1.000000
817 [-]: FORPREP   R24 826      ; R24 -= R26; PC := 826
818 [-]: GETGLOBAL R28 K8       ; R28 := 0xae91e43b
819 [-]: SELF      R28 R28 K18  ; R29 := R28; R28 := R28[0xaade900e]
820 [-]: LOADK     R30 K128     ; R30 := "Ability"
821 [-]: MOVE      R31 R27      ; R31 := R27
822 [-]: CONCAT    R30 R30 R31  ; R30 := R30 .. R31
823 [-]: LOADK     R31 11       ; R31 := 11.000000
824 [-]: LOADBOOL  R32 0 0      ; R32 := false
825 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
826 [-]: FORLOOP   R24 818      ; R24 += R26; if R24 <= R25 then begin PC := 818; R27 := R24 end
827 [-]: JMP       1018         ; PC := 1018
828 [-]: GETGLOBAL R28 K25      ; R28 := mSelected
829 [-]: SETTABLE  R28 K63 K60  ; R28["Cosmetic"] := nil
830 [-]: GETUPVAL  R28 U14      ; R28 := U14
831 [-]: CALL      R28 1 1      ; R28()
832 [-]: GETGLOBAL R28 K71      ; R28 := _T
833 [-]: GETTABLE  R28 R28 K72  ; R28 := R28["MenuSuitAvatar"]
834 [-]: GETGLOBAL R29 K12      ; R29 := 0x7b998233
835 [-]: MOVE      R30 R28      ; R30 := R28
836 [-]: CALL      R29 2 2      ; R29 := R29(R30)
837 [-]: TEST      R29 1        ; if R29 then PC := 1018
838 [-]: JMP       1018         ; PC := 1018
839 [-]: SELF      R29 R28 K91  ; R30 := R28; R29 := R28[0x2e9b92e3]
840 [-]: LOADK     R31 0        ; R31 := 0.000000
841 [-]: CALL      R29 3 1      ; R29(R30,R31)
842 [-]: GETGLOBAL R29 K12      ; R29 := 0x7b998233
843 [-]: GETUPVAL  R30 U8       ; R30 := U8
844 [-]: CALL      R29 2 2      ; R29 := R29(R30)
845 [-]: TEST      R29 1        ; if R29 then PC := 870
846 [-]: JMP       870          ; PC := 870
847 [-]: SELF      R29 R28 K76  ; R30 := R28; R29 := R28[0xde321e6f]
848 [-]: CALL      R29 2 2      ; R29 := R29(R30)
849 [-]: SELF      R29 R29 K106 ; R30 := R29; R29 := R29[0x0b5ec5b5]
850 [-]: LOADBOOL  R31 1 0      ; R31 := true
851 [-]: CALL      R29 3 1      ; R29(R30,R31)
852 [-]: SELF      R29 R28 K76  ; R30 := R28; R29 := R28[0xde321e6f]
853 [-]: CALL      R29 2 2      ; R29 := R29(R30)
854 [-]: SELF      R29 R29 K129 ; R30 := R29; R29 := R29[0xc69087f6]
855 [-]: GETUPVAL  R31 U8       ; R31 := U8
856 [-]: LOADK     R32 0        ; R32 := 0.000000
857 [-]: LOADK     R33 2        ; R33 := 2.000000
858 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
859 [-]: GETUPVAL  R29 U8       ; R29 := U8
860 [-]: EQ        0 R29 K130   ; if R29 ~= 5.000000 then PC := 868
861 [-]: JMP       868          ; PC := 868
862 [-]: GETUPVAL  R29 U15      ; R29 := U15
863 [-]: MOVE      R30 R28      ; R30 := R28
864 [-]: GETGLOBAL R31 K25      ; R31 := mSelected
865 [-]: GETTABLE  R31 R31 K26  ; R31 := R31["Element"]
866 [-]: GETTABLE  R31 R31 K27  ; R31 := R31["LoadOutType"]
867 [-]: CALL      R29 3 1      ; R29(R30,R31)
868 [-]: LOADNIL   R29 R29      ; R29 := nil
869 [-]: SETUPVAL  R29 U8       ; U82 := R8
870 [-]: SELF      R29 R28 K76  ; R30 := R28; R29 := R28[0xde321e6f]
871 [-]: CALL      R29 2 2      ; R29 := R29(R30)
872 [-]: SELF      R29 R29 K96  ; R30 := R29; R29 := R29[0xf7d48ee0]
873 [-]: CALL      R29 2 2      ; R29 := R29(R30)
874 [-]: GETGLOBAL R30 K12      ; R30 := 0x7b998233
875 [-]: MOVE      R31 R29      ; R31 := R29
876 [-]: CALL      R30 2 2      ; R30 := R30(R31)
877 [-]: TEST      R30 1        ; if R30 then PC := 1018
878 [-]: JMP       1018         ; PC := 1018
879 [-]: SELF      R30 R29 K98  ; R31 := R29; R30 := R29[0xf2deaf69]
880 [-]: GETGLOBAL R32 K107     ; R32 := 0xb5afcb89
881 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
882 [-]: TEST      R30 0        ; if not R30 then PC := 896
883 [-]: JMP       896          ; PC := 896
884 [-]: GETGLOBAL R30 K12      ; R30 := 0x7b998233
885 [-]: GETGLOBAL R31 K71      ; R31 := _T
886 [-]: GETTABLE  R31 R31 K131 ; R31 := R31["DRAGON_EnablePelt"]
887 [-]: CALL      R30 2 2      ; R30 := R30(R31)
888 [-]: TEST      R30 1        ; if R30 then PC := 1018
889 [-]: JMP       1018         ; PC := 1018
890 [-]: GETGLOBAL R30 K71      ; R30 := _T
891 [-]: GETTABLE  R30 R30 K132 ; R30 := R30[0xc50e8842]
892 [-]: MOVE      R31 R28      ; R31 := R28
893 [-]: LOADBOOL  R32 1 0      ; R32 := true
894 [-]: CALL      R30 3 1      ; R30(R31,R32)
895 [-]: JMP       1018         ; PC := 1018
896 [-]: SELF      R30 R29 K98  ; R31 := R29; R30 := R29[0xf2deaf69]
897 [-]: GETGLOBAL R32 K114     ; R32 := 0xe3ae0932
898 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
899 [-]: TEST      R30 0        ; if not R30 then PC := 918
900 [-]: JMP       918          ; PC := 918
901 [-]: GETGLOBAL R30 K133     ; R30 := 0x2d0fad09
902 [-]: LOADK     R31 K134     ; R31 := "Lotus.Scripts.Effects.Polarity"
903 [-]: CALL      R30 2 2      ; R30 := R30(R31)
904 [-]: GETTABLE  R31 R30 K135 ; R31 := R30[0x224c9cb2]
905 [-]: MOVE      R32 R29      ; R32 := R29
906 [-]: CALL      R31 2 2      ; R31 := R31(R32)
907 [-]: TEST      R31 1        ; if R31 then PC := 914
908 [-]: JMP       914          ; PC := 914
909 [-]: GETTABLE  R31 R30 K136 ; R31 := R30[0x7d2b2507]
910 [-]: MOVE      R32 R29      ; R32 := R29
911 [-]: CALL      R31 2 2      ; R31 := R31(R32)
912 [-]: TEST      R31 0        ; if not R31 then PC := 1018
913 [-]: JMP       1018         ; PC := 1018
914 [-]: GETTABLE  R31 R30 K137 ; R31 := R30[0x09118c8b]
915 [-]: MOVE      R32 R29      ; R32 := R29
916 [-]: CALL      R31 2 1      ; R31(R32)
917 [-]: JMP       1018         ; PC := 1018
918 [-]: SELF      R31 R29 K98  ; R32 := R29; R31 := R29[0xf2deaf69]
919 [-]: GETGLOBAL R33 K116     ; R33 := 0x68564c44
920 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
921 [-]: TEST      R31 0        ; if not R31 then PC := 946
922 [-]: JMP       946          ; PC := 946
923 [-]: GETGLOBAL R31 K12      ; R31 := 0x7b998233
924 [-]: GETGLOBAL R32 K71      ; R32 := _T
925 [-]: GETTABLE  R32 R32 K138 ; R32 := R32["INFESTED_DecoState"]
926 [-]: CALL      R31 2 2      ; R31 := R31(R32)
927 [-]: TEST      R31 1        ; if R31 then PC := 1018
928 [-]: JMP       1018         ; PC := 1018
929 [-]: GETGLOBAL R31 K12      ; R31 := 0x7b998233
930 [-]: GETGLOBAL R32 K139     ; R32 := 0xbe190284
931 [-]: CALL      R31 2 2      ; R31 := R31(R32)
932 [-]: TEST      R31 1        ; if R31 then PC := 940
933 [-]: JMP       940          ; PC := 940
934 [-]: GETGLOBAL R31 K139     ; R31 := 0xbe190284
935 [-]: SELF      R31 R31 K98  ; R32 := R31; R31 := R31[0xf2deaf69]
936 [-]: GETGLOBAL R33 K140     ; R33 := gLotusPhotoBoothGameRulesType
937 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
938 [-]: TEST      R31 1        ; if R31 then PC := 1018
939 [-]: JMP       1018         ; PC := 1018
940 [-]: GETGLOBAL R31 K71      ; R31 := _T
941 [-]: GETTABLE  R31 R31 K141 ; R31 := R31[0x8095dfb5]
942 [-]: MOVE      R32 R28      ; R32 := R28
943 [-]: LOADBOOL  R33 0 0      ; R33 := false
944 [-]: CALL      R31 3 1      ; R31(R32,R33)
945 [-]: JMP       1018         ; PC := 1018
946 [-]: SELF      R31 R29 K98  ; R32 := R29; R31 := R29[0xf2deaf69]
947 [-]: GETGLOBAL R33 K118     ; R33 := 0x6dcacb87
948 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
949 [-]: TEST      R31 0        ; if not R31 then PC := 977
950 [-]: JMP       977          ; PC := 977
951 [-]: GETGLOBAL R31 K12      ; R31 := 0x7b998233
952 [-]: GETGLOBAL R32 K71      ; R32 := _T
953 [-]: GETTABLE  R32 R32 K142 ; R32 := R32["KHORA_SetMode"]
954 [-]: CALL      R31 2 2      ; R31 := R31(R32)
955 [-]: TEST      R31 1        ; if R31 then PC := 1018
956 [-]: JMP       1018         ; PC := 1018
957 [-]: GETGLOBAL R31 K71      ; R31 := _T
958 [-]: GETTABLE  R31 R31 K143 ; R31 := R31[0xea9ef043]
959 [-]: MOVE      R32 R29      ; R32 := R29
960 [-]: LOADK     R33 0        ; R33 := 0.000000
961 [-]: CALL      R31 3 1      ; R31(R32,R33)
962 [-]: GETGLOBAL R31 K71      ; R31 := _T
963 [-]: GETTABLE  R31 R31 K144 ; R31 := R31[0x9d4f5aaf]
964 [-]: MOVE      R32 R29      ; R32 := R29
965 [-]: LOADK     R33 1        ; R33 := 1.000000
966 [-]: CALL      R31 3 1      ; R31(R32,R33)
967 [-]: GETGLOBAL R31 K71      ; R31 := _T
968 [-]: GETTABLE  R31 R31 K145 ; R31 := R31["KHORA_CurrentDissolve"]
969 [-]: SELF      R32 R28 K120 ; R33 := R28; R32 := R28[0x388577d5]
970 [-]: CALL      R32 2 2      ; R32 := R32(R33)
971 [-]: GETGLOBAL R33 K71      ; R33 := _T
972 [-]: GETTABLE  R33 R33 K121 ; R33 := R33[0xb1b8ab73]
973 [-]: MOVE      R34 R29      ; R34 := R29
974 [-]: CALL      R33 2 2      ; R33 := R33(R34)
975 [-]: SETTABLE  R31 R32 R33  ; R31[R32] := R33
976 [-]: JMP       1018         ; PC := 1018
977 [-]: SELF      R31 R29 K98  ; R32 := R29; R31 := R29[0xf2deaf69]
978 [-]: GETGLOBAL R33 K124     ; R33 := 0x2ccd2c30
979 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
980 [-]: TEST      R31 0        ; if not R31 then PC := 1003
981 [-]: JMP       1003         ; PC := 1003
982 [-]: GETGLOBAL R31 K71      ; R31 := _T
983 [-]: GETTABLE  R31 R31 K146 ; R31 := R31["RUNNER_SetDecoState"]
984 [-]: EQ        1 R31 K60    ; if R31 == nil then PC := 1018
985 [-]: JMP       1018         ; PC := 1018
986 [-]: GETGLOBAL R31 K12      ; R31 := 0x7b998233
987 [-]: GETGLOBAL R32 K139     ; R32 := 0xbe190284
988 [-]: CALL      R31 2 2      ; R31 := R31(R32)
989 [-]: TEST      R31 1        ; if R31 then PC := 997
990 [-]: JMP       997          ; PC := 997
991 [-]: GETGLOBAL R31 K139     ; R31 := 0xbe190284
992 [-]: SELF      R31 R31 K98  ; R32 := R31; R31 := R31[0xf2deaf69]
993 [-]: GETGLOBAL R33 K140     ; R33 := gLotusPhotoBoothGameRulesType
994 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
995 [-]: TEST      R31 1        ; if R31 then PC := 1018
996 [-]: JMP       1018         ; PC := 1018
997 [-]: GETGLOBAL R31 K71      ; R31 := _T
998 [-]: GETTABLE  R31 R31 K147 ; R31 := R31[0x3ef5c227]
999 [-]: MOVE      R32 R28      ; R32 := R28
1000 [-]: LOADBOOL  R33 0 0      ; R33 := false
1001 [-]: CALL      R31 3 1      ; R31(R32,R33)
1002 [-]: JMP       1018         ; PC := 1018
1003 [-]: SELF      R31 R29 K98  ; R32 := R29; R31 := R29[0xf2deaf69]
1004 [-]: GETGLOBAL R33 K126     ; R33 := 0x969b8384
1005 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
1006 [-]: TEST      R31 0        ; if not R31 then PC := 1018
1007 [-]: JMP       1018         ; PC := 1018
1008 [-]: GETGLOBAL R31 K71      ; R31 := _T
1009 [-]: GETTABLE  R31 R31 K148 ; R31 := R31["BROKEN_SetDecoVisibility"]
1010 [-]: TEST      R31 0        ; if not R31 then PC := 1018
1011 [-]: JMP       1018         ; PC := 1018
1012 [-]: GETGLOBAL R31 K71      ; R31 := _T
1013 [-]: GETTABLE  R31 R31 K149 ; R31 := R31[0xf627ed0d]
1014 [-]: MOVE      R32 R28      ; R32 := R28
1015 [-]: LOADBOOL  R33 1 0      ; R33 := true
1016 [-]: LOADK     R34 0        ; R34 := 0.250000
1017 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
1018 [-]: GETUPVAL  R31 U2       ; R31 := U2
1019 [-]: GETTABLE  R31 R31 K11  ; R31 := R31["SELECTING_PART"]
1020 [-]: EQ        1 R0 R31     ; if R0 == R31 then PC := 1026
1021 [-]: JMP       1026         ; PC := 1026
1022 [-]: GETUPVAL  R31 U2       ; R31 := U2
1023 [-]: GETTABLE  R31 R31 K17  ; R31 := R31["BROWSING_WAY_TREE"]
1024 [-]: EQ        0 R0 R31     ; if R0 ~= R31 then PC := 1055
1025 [-]: JMP       1055         ; PC := 1055
1026 [-]: LOADBOOL  R31 0 0      ; R31 := false
1027 [-]: SETGLOBAL R31 K150     ; mSeenRandomizeConfirm := R31
1028 [-]: GETGLOBAL R31 K87      ; R31 := mLists
1029 [-]: GETTABLE  R31 R31 K88  ; R31 := R31["mCosmeticsList"]
1030 [-]: EQ        1 R31 K60    ; if R31 == nil then PC := 1041
1031 [-]: JMP       1041         ; PC := 1041
1032 [-]: GETGLOBAL R31 K151     ; R31 := 0xcfc01047
1033 [-]: GETGLOBAL R32 K87      ; R32 := mLists
1034 [-]: GETTABLE  R32 R32 K88  ; R32 := R32["mCosmeticsList"]
1035 [-]: GETTABLE  R32 R32 K152 ; R32 := R32["mLevels"]
1036 [-]: CALL      R31 2 4      ; R31,R32,R33 := R31(R32)
1037 [-]: JMP       1039         ; PC := 1039
1038 [-]: SETTABLE  R35 K153 K60 ; R35["mSavedIndex"] := nil
1039 [-]: TFORLOOP  R31 2        ; R34,R35 :=  R31(R32,R33); if R34 ~= nil then begin PC = 1038; R33 := R34 end
1040 [-]: JMP       1038         ; PC := 1038
1041 [-]: LOADK     R36 K154     ; R36 := "/Lotus/Language/Menu/Exit"
1042 [-]: GETUPVAL  R37 U7       ; R37 := U7
1043 [-]: GETTABLE  R37 R37 K79  ; R37 := R37["Current"]
1044 [-]: EQ        0 R37 K51    ; if R37 ~= 2.000000 then PC := 1051
1045 [-]: JMP       1051         ; PC := 1051
1046 [-]: GETGLOBAL R37 K71      ; R37 := _T
1047 [-]: GETTABLE  R37 R37 K155 ; R37 := R37["ArsenalPvPOnlyReturnConsole"]
1048 [-]: EQ        0 R37 K60    ; if R37 ~= nil then PC := 1051
1049 [-]: JMP       1051         ; PC := 1051
1050 [-]: LOADK     R36 K156     ; R36 := "/Lotus/Language/Menu/Loadout_PVE"
1051 [-]: GETGLOBAL R37 K50      ; R37 := mButtons
1052 [-]: GETTABLE  R37 R37 K157 ; R37 := R37[1.000000]
1053 [-]: SETTABLE  R37 K109 R36 ; R37["mLabel"] := R36
1054 [-]: JMP       1058         ; PC := 1058
1055 [-]: GETGLOBAL R37 K50      ; R37 := mButtons
1056 [-]: GETTABLE  R37 R37 K157 ; R37 := R37[1.000000]
1057 [-]: SETTABLE  R37 K109 K158; R37["mLabel"] := "/Lotus/Language/Menu/Global_Back"
1058 [-]: GETUPVAL  R37 U2       ; R37 := U2
1059 [-]: GETTABLE  R37 R37 K24  ; R37 := R37["CUSTOMIZING_SKINS"]
1060 [-]: EQ        0 R0 R37     ; if R0 ~= R37 then PC := 1075
1061 [-]: JMP       1075         ; PC := 1075
1062 [-]: GETGLOBAL R37 K87      ; R37 := mLists
1063 [-]: GETTABLE  R37 R37 K88  ; R37 := R37["mCosmeticsList"]
1064 [-]: EQ        1 R37 K60    ; if R37 == nil then PC := 1075
1065 [-]: JMP       1075         ; PC := 1075
1066 [-]: GETGLOBAL R37 K87      ; R37 := mLists
1067 [-]: GETTABLE  R37 R37 K88  ; R37 := R37["mCosmeticsList"]
1068 [-]: GETTABLE  R37 R37 K159 ; R37 := R37["mCurrLevel"]
1069 [-]: EQ        0 R37 K157   ; if R37 ~= 1.000000 then PC := 1075
1070 [-]: JMP       1075         ; PC := 1075
1071 [-]: GETGLOBAL R37 K50      ; R37 := mButtons
1072 [-]: GETTABLE  R37 R37 K130 ; R37 := R37[5.000000]
1073 [-]: SETTABLE  R37 K52 K108 ; R37["mVisible"] := true
1074 [-]: JMP       1078         ; PC := 1078
1075 [-]: GETGLOBAL R37 K50      ; R37 := mButtons
1076 [-]: GETTABLE  R37 R37 K130 ; R37 := R37[5.000000]
1077 [-]: SETTABLE  R37 K52 K53  ; R37["mVisible"] := false
1078 [-]: GETGLOBAL R37 K50      ; R37 := mButtons
1079 [-]: GETTABLE  R37 R37 K160 ; R37 := R37[3.000000]
1080 [-]: SETTABLE  R37 K52 K53  ; R37["mVisible"] := false
1081 [-]: GETUPVAL  R37 U16      ; R37 := U16
1082 [-]: CALL      R37 1 1      ; R37()
1083 [-]: GETGLOBAL R37 K161     ; R37 := 0x25312c9b
1084 [-]: GETGLOBAL R38 K8       ; R38 := 0xae91e43b
1085 [-]: LOADK     R39 K162     ; R39 := "ScrollBar"
1086 [-]: LOADK     R40 0        ; R40 := 0.000000
1087 [-]: NEWTABLE  R41 1 0      ; R41 := {}
1088 [-]: LOADK     R42 10       ; R42 := 10.000000
1089 [-]: SETLIST   R41 1 1      ; R41[(1-1)*FPF+i] := R(41+i), 1 <= i <= 1
1090 [-]: NEWTABLE  R42 0 0      ; R42 := {}
1091 [-]: GETUPVAL  R43 U1       ; R43 := U1
1092 [-]: GETTABLE  R43 R43 K33  ; R43 := R43[0x06d055f9]
1093 [-]: GETUPVAL  R44 U2       ; R44 := U2
1094 [-]: GETTABLE  R44 R44 K5   ; R44 := R44["SWAPPING_ITEM"]
1095 [-]: EQ        1 R0 R44     ; if R0 == R44 then PC := 1106
1096 [-]: JMP       1106         ; PC := 1106
1097 [-]: GETUPVAL  R44 U2       ; R44 := U2
1098 [-]: GETTABLE  R44 R44 K6   ; R44 := R44["SELECTING_SKINS"]
1099 [-]: EQ        1 R0 R44     ; if R0 == R44 then PC := 1106
1100 [-]: JMP       1106         ; PC := 1106
1101 [-]: GETUPVAL  R44 U2       ; R44 := U2
1102 [-]: GETTABLE  R44 R44 K7   ; R44 := R44["SELECTING_CONSUMABLES"]
1103 [-]: EQ        1 R0 R44     ; if R0 == R44 then PC := 1106
1104 [-]: JMP       1106         ; PC := 1106
1105 [-]: LOADBOOL  R44 0 1      ; R44 := false; PC := 1106
1106 [-]: LOADBOOL  R44 1 0      ; R44 := true
1107 [-]: LOADK     R45 100      ; R45 := 100.000000
1108 [-]: LOADK     R46 0        ; R46 := 0.000000
1109 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
1110 [-]: SETLIST   R42 0 1      ; R42[(1-1)*FPF+i] := R(42+i), 1 <= i <= 0
1111 [-]: LOADK     R43 K164     ; R43 := 0.200000
1112 [-]: CALL      R37 7 1      ; R37(R38,R39,R40,R41,R42,R43)
1113 [-]: GETGLOBAL R37 K25      ; R37 := mSelected
1114 [-]: SETTABLE  R37 K57 K60  ; R37["Item"] := nil
1115 [-]: GETGLOBAL R37 K8       ; R37 := 0xae91e43b
1116 [-]: SELF      R37 R37 K18  ; R38 := R37; R37 := R37[0xaade900e]
1117 [-]: LOADK     R39 K165     ; R39 := "ItemGridBG"
1118 [-]: LOADK     R40 11       ; R40 := 11.000000
1119 [-]: GETUPVAL  R41 U1       ; R41 := U1
1120 [-]: GETTABLE  R41 R41 K33  ; R41 := R41[0x06d055f9]
1121 [-]: GETUPVAL  R42 U2       ; R42 := U2
1122 [-]: GETTABLE  R42 R42 K5   ; R42 := R42["SWAPPING_ITEM"]
1123 [-]: EQ        1 R0 R42     ; if R0 == R42 then PC := 1126
1124 [-]: JMP       1126         ; PC := 1126
1125 [-]: LOADBOOL  R42 0 1      ; R42 := false; PC := 1126
1126 [-]: LOADBOOL  R42 1 0      ; R42 := true
1127 [-]: LOADBOOL  R43 1 0      ; R43 := true
1128 [-]: LOADBOOL  R44 0 0      ; R44 := false
1129 [-]: CALL      R41 4 0      ; R41,... := R41(R42,R43,R44)
1130 [-]: CALL      R37 0 1      ; R37(R38,...)
1131 [-]: GETUPVAL  R37 U3       ; R37 := U3
1132 [-]: GETTABLE  R37 R37 K166 ; R37 := R37[0x7d70c833]
1133 [-]: CALL      R37 1 1      ; R37()
1134 [-]: GETUPVAL  R37 U17      ; R37 := U17
1135 [-]: SELF      R37 R37 K89  ; R38 := R37; R37 := R37[0xea061e98]
1136 [-]: CLOSURE   R39 1        ; R39 := closure(Function #48.2)
1137 [-]: MOVE      R0 R0        ; R0 := R0
1138 [-]: GETUPVAL  R0 U2        ; R0 := U2
1139 [-]: CALL      R37 3 1      ; R37(R38,R39)
1140 [-]: GETGLOBAL R37 K8       ; R37 := 0xae91e43b
1141 [-]: SELF      R37 R37 K18  ; R38 := R37; R37 := R37[0xaade900e]
1142 [-]: LOADK     R39 K167     ; R39 := "MenuPanel.Bg"
1143 [-]: LOADK     R40 11       ; R40 := 11.000000
1144 [-]: TEST      R1 1         ; if R1 then PC := 1168
1145 [-]: JMP       1168         ; PC := 1168
1146 [-]: GETUPVAL  R41 U2       ; R41 := U2
1147 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["BROWSING_CONSUMABLES"]
1148 [-]: EQ        1 R0 R41     ; if R0 == R41 then PC := 1168
1149 [-]: JMP       1168         ; PC := 1168
1150 [-]: GETUPVAL  R41 U2       ; R41 := U2
1151 [-]: GETTABLE  R41 R41 K24  ; R41 := R41["CUSTOMIZING_SKINS"]
1152 [-]: EQ        0 R0 R41     ; if R0 ~= R41 then PC := 1169
1153 [-]: JMP       1169         ; PC := 1169
1154 [-]: GETGLOBAL R41 K12      ; R41 := 0x7b998233
1155 [-]: GETGLOBAL R42 K87      ; R42 := mLists
1156 [-]: GETTABLE  R42 R42 K88  ; R42 := R42["mCosmeticsList"]
1157 [-]: CALL      R41 2 2      ; R41 := R41(R42)
1158 [-]: TEST      R41 1        ; if R41 then PC := 1168
1159 [-]: JMP       1168         ; PC := 1168
1160 [-]: GETGLOBAL R41 K87      ; R41 := mLists
1161 [-]: GETTABLE  R41 R41 K88  ; R41 := R41["mCosmeticsList"]
1162 [-]: GETTABLE  R41 R41 K159 ; R41 := R41["mCurrLevel"]
1163 [-]: GETGLOBAL R42 K87      ; R42 := mLists
1164 [-]: GETTABLE  R42 R42 K88  ; R42 := R42["mCosmeticsList"]
1165 [-]: GETTABLE  R42 R42 K168 ; R42 := R42["DEFAULT"]
1166 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 1169
1167 [-]: JMP       1169         ; PC := 1169
1168 [-]: LOADBOOL  R41 0 1      ; R41 := false; PC := 1169
1169 [-]: LOADBOOL  R41 1 0      ; R41 := true
1170 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
1171 [-]: GETUPVAL  R37 U2       ; R37 := U2
1172 [-]: GETTABLE  R37 R37 K5   ; R37 := R37["SWAPPING_ITEM"]
1173 [-]: EQ        1 R0 R37     ; if R0 == R37 then PC := 1176
1174 [-]: JMP       1176         ; PC := 1176
1175 [-]: LOADBOOL  R37 0 1      ; R37 := false; PC := 1176
1176 [-]: LOADBOOL  R37 1 0      ; R37 := true
1177 [-]: GETUPVAL  R38 U18      ; R38 := U18
1178 [-]: SELF      R38 R38 K169 ; R39 := R38; R38 := R38[0x368ad758]
1179 [-]: MOVE      R40 R1       ; R40 := R1
1180 [-]: CALL      R38 3 1      ; R38(R39,R40)
1181 [-]: GETGLOBAL R38 K8       ; R38 := 0xae91e43b
1182 [-]: SELF      R38 R38 K170 ; R39 := R38; R38 := R38[0x67bc869f]
1183 [-]: GETGLOBAL R40 K54      ; R40 := mItemsGrid
1184 [-]: GETTABLE  R40 R40 K171 ; R40 := R40["mSortClipName"]
1185 [-]: LOADK     R41 10       ; R41 := 10.000000
1186 [-]: GETUPVAL  R42 U1       ; R42 := U1
1187 [-]: GETTABLE  R42 R42 K33  ; R42 := R42[0x06d055f9]
1188 [-]: MOVE      R43 R37      ; R43 := R37
1189 [-]: LOADK     R44 100      ; R44 := 100.000000
1190 [-]: LOADK     R45 0        ; R45 := 0.000000
1191 [-]: CALL      R42 4 0      ; R42,... := R42(R43,R44,R45)
1192 [-]: CALL      R38 0 1      ; R38(R39,...)
1193 [-]: GETGLOBAL R38 K8       ; R38 := 0xae91e43b
1194 [-]: SELF      R38 R38 K18  ; R39 := R38; R38 := R38[0xaade900e]
1195 [-]: GETGLOBAL R40 K54      ; R40 := mItemsGrid
1196 [-]: GETTABLE  R40 R40 K171 ; R40 := R40["mSortClipName"]
1197 [-]: LOADK     R41 59       ; R41 := 59.000000
1198 [-]: MOVE      R42 R37      ; R42 := R37
1199 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
1200 [-]: GETGLOBAL R38 K8       ; R38 := 0xae91e43b
1201 [-]: SELF      R38 R38 K18  ; R39 := R38; R38 := R38[0xaade900e]
1202 [-]: LOADK     R40 K172     ; R40 := "SearchSortBg"
1203 [-]: LOADK     R41 11       ; R41 := 11.000000
1204 [-]: MOVE      R42 R1       ; R42 := R1
1205 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
1206 [-]: TEST      R1 0         ; if not R1 then PC := 1219
1207 [-]: JMP       1219         ; PC := 1219
1208 [-]: GETGLOBAL R38 K8       ; R38 := 0xae91e43b
1209 [-]: SELF      R38 R38 K170 ; R39 := R38; R38 := R38[0x67bc869f]
1210 [-]: LOADK     R40 K172     ; R40 := "SearchSortBg"
1211 [-]: LOADK     R41 12       ; R41 := 12.000000
1212 [-]: GETUPVAL  R42 U1       ; R42 := U1
1213 [-]: GETTABLE  R42 R42 K33  ; R42 := R42[0x06d055f9]
1214 [-]: MOVE      R43 R37      ; R43 := R37
1215 [-]: LOADK     R44 825      ; R44 := 825.000000
1216 [-]: LOADK     R45 380      ; R45 := 380.000000
1217 [-]: CALL      R42 4 0      ; R42,... := R42(R43,R44,R45)
1218 [-]: CALL      R38 0 1      ; R38(R39,...)
1219 [-]: LOADNIL   R38 R38      ; R38 := nil
1220 [-]: GETUPVAL  R39 U2       ; R39 := U2
1221 [-]: GETTABLE  R39 R39 K5   ; R39 := R39["SWAPPING_ITEM"]
1222 [-]: EQ        0 R0 R39     ; if R0 ~= R39 then PC := 1226
1223 [-]: JMP       1226         ; PC := 1226
1224 [-]: LOADK     R38 K173     ; R38 := "WEAPON"
1225 [-]: JMP       1279         ; PC := 1279
1226 [-]: GETUPVAL  R39 U2       ; R39 := U2
1227 [-]: GETTABLE  R39 R39 K6   ; R39 := R39["SELECTING_SKINS"]
1228 [-]: EQ        0 R0 R39     ; if R0 ~= R39 then PC := 1232
1229 [-]: JMP       1232         ; PC := 1232
1230 [-]: LOADK     R38 K174     ; R38 := "SKINS"
1231 [-]: JMP       1279         ; PC := 1279
1232 [-]: GETUPVAL  R39 U2       ; R39 := U2
1233 [-]: GETTABLE  R39 R39 K24  ; R39 := R39["CUSTOMIZING_SKINS"]
1234 [-]: EQ        0 R0 R39     ; if R0 ~= R39 then PC := 1248
1235 [-]: JMP       1248         ; PC := 1248
1236 [-]: LOADK     R38 K175     ; R38 := "APPEARANCE"
1237 [-]: GETUPVAL  R39 U1       ; R39 := U1
1238 [-]: GETTABLE  R39 R39 K2   ; R39 := R39[0x659d451f]
1239 [-]: GETGLOBAL R40 K3       ; R40 := 0x0032441c
1240 [-]: GETTABLE  R40 R40 K176 ; R40 := R40["UISound_ButtonSelect"]
1241 [-]: CALL      R39 2 1      ; R39(R40)
1242 [-]: GETUPVAL  R39 U1       ; R39 := U1
1243 [-]: GETTABLE  R39 R39 K2   ; R39 := R39[0x659d451f]
1244 [-]: GETGLOBAL R40 K3       ; R40 := 0x0032441c
1245 [-]: GETTABLE  R40 R40 K177 ; R40 := R40["UISound_WindowOpen"]
1246 [-]: CALL      R39 2 1      ; R39(R40)
1247 [-]: JMP       1279         ; PC := 1279
1248 [-]: GETUPVAL  R39 U2       ; R39 := U2
1249 [-]: GETTABLE  R39 R39 K7   ; R39 := R39["SELECTING_CONSUMABLES"]
1250 [-]: EQ        0 R0 R39     ; if R0 ~= R39 then PC := 1264
1251 [-]: JMP       1264         ; PC := 1264
1252 [-]: LOADK     R38 K178     ; R38 := "CONSUMABLES_SELECTION"
1253 [-]: GETUPVAL  R39 U1       ; R39 := U1
1254 [-]: GETTABLE  R39 R39 K2   ; R39 := R39[0x659d451f]
1255 [-]: GETGLOBAL R40 K3       ; R40 := 0x0032441c
1256 [-]: GETTABLE  R40 R40 K176 ; R40 := R40["UISound_ButtonSelect"]
1257 [-]: CALL      R39 2 1      ; R39(R40)
1258 [-]: GETUPVAL  R39 U1       ; R39 := U1
1259 [-]: GETTABLE  R39 R39 K2   ; R39 := R39[0x659d451f]
1260 [-]: GETGLOBAL R40 K3       ; R40 := 0x0032441c
1261 [-]: GETTABLE  R40 R40 K177 ; R40 := R40["UISound_WindowOpen"]
1262 [-]: CALL      R39 2 1      ; R39(R40)
1263 [-]: JMP       1279         ; PC := 1279
1264 [-]: GETUPVAL  R39 U2       ; R39 := U2
1265 [-]: GETTABLE  R39 R39 K81  ; R39 := R39["BROWSING_CONSUMABLES"]
1266 [-]: EQ        0 R0 R39     ; if R0 ~= R39 then PC := 1279
1267 [-]: JMP       1279         ; PC := 1279
1268 [-]: LOADK     R38 K179     ; R38 := "CONSUMABLES_BROWSE"
1269 [-]: GETUPVAL  R39 U1       ; R39 := U1
1270 [-]: GETTABLE  R39 R39 K2   ; R39 := R39[0x659d451f]
1271 [-]: GETGLOBAL R40 K3       ; R40 := 0x0032441c
1272 [-]: GETTABLE  R40 R40 K176 ; R40 := R40["UISound_ButtonSelect"]
1273 [-]: CALL      R39 2 1      ; R39(R40)
1274 [-]: GETUPVAL  R39 U1       ; R39 := U1
1275 [-]: GETTABLE  R39 R39 K2   ; R39 := R39[0x659d451f]
1276 [-]: GETGLOBAL R40 K3       ; R40 := 0x0032441c
1277 [-]: GETTABLE  R40 R40 K180 ; R40 := R40["UISound_DialogOpen"]
1278 [-]: CALL      R39 2 1      ; R39(R40)
1279 [-]: GETUPVAL  R39 U19      ; R39 := U19
1280 [-]: MOVE      R40 R38      ; R40 := R38
1281 [-]: CALL      R39 2 1      ; R39(R40)
1282 [-]: SETUPVAL  R0 U20       ; U82 := R20
1283 [-]: RETURN    R0 1         ; return 


; Function #48.1:
;
; Name:            
; Defined at line: 2667
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R1 240       ; R1 := 240.000000
  2 [-]: LOADK     R2 0         ; R2 := 0.000000
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["CUSTOMIZING_SKINS"]
  6 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: LOADK     R2 100       ; R2 := 100.000000
  9 [-]: GETGLOBAL R3 K1        ; R3 := mLists
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mCosmeticsList"]
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x68e36b8d]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: MOVE      R1 R3        ; R1 := R3
 15 [-]: LT        0 K4 R2      ; if 0.000000 >= R2 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 18 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xaade900e]
 19 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mClipName"]
 20 [-]: LOADK     R6 11        ; R6 := 11.000000
 21 [-]: LOADBOOL  R7 1 0       ; R7 := true
 22 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 23 [-]: CLOSURE   R3 0         ; R3 := closure(Function #48.1.1)
 24 [-]: MOVE      R0 R0        ; R0 := R0
 25 [-]: MOVE      R0 R2        ; R0 := R2
 26 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 27 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xc0a3774b]
 28 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["mClipName"]
 29 [-]: LOADK     R7 K9        ; R7 := "Btn"
 30 [-]: LOADK     R8 59        ; R8 := 59.000000
 31 [-]: GETUPVAL  R9 U0        ; R9 := U0
 32 [-]: GETUPVAL  R10 U1       ; R10 := U1
 33 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["CUSTOMIZING_SKINS"]
 34 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADBOOL  R9 0 1       ; R9 := false; PC := 37
 37 [-]: LOADBOOL  R9 1 0       ; R9 := true
 38 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 39 [-]: GETGLOBAL R4 K10       ; R4 := 0x25312c9b
 40 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 41 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["mClipName"]
 42 [-]: LOADK     R7 8         ; R7 := 8.000000
 43 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 44 [-]: LOADK     R9 1         ; R9 := 1.000000
 45 [-]: LOADK     R10 10       ; R10 := 10.000000
 46 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 47 [-]: NEWTABLE  R9 2 0       ; R9 := {}
 48 [-]: MOVE      R10 R1       ; R10 := R1
 49 [-]: MOVE      R11 R2       ; R11 := R2
 50 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
 51 [-]: LOADK     R10 0        ; R10 := 0.250000
 52 [-]: LOADK     R11 0        ; R11 := 0.000000
 53 [-]: MOVE      R12 R3       ; R12 := R3
 54 [-]: CALL      R4 9 1       ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
 55 [-]: RETURN    R0 1         ; return 


; Function #48.1.1:
;
; Name:            
; Defined at line: 2679
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Id"]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= 1.000000 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADBOOL  R0 0 0       ; R0 := false
  6 [-]: SETGLOBAL R0 K2        ; mInputBlocked := R0
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: EQ        0 R0 K3      ; if R0 ~= 0.000000 then PC := 17
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
 11 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xaade900e]
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mClipName"]
 14 [-]: LOADK     R3 11        ; R3 := 11.000000
 15 [-]: LOADBOOL  R4 0 0       ; R4 := false
 16 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 17 [-]: RETURN    R0 1         ; return 


; Function #48.2:
;
; Name:            
; Defined at line: 2871
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xaade900e]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 11        ; R4 := 11.000000
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: GETUPVAL  R6 U1        ; R6 := U1
  7 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["CUSTOMIZING_SKINS"]
  8 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 11
 11 [-]: LOADBOOL  R5 1 0       ; R5 := true
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 2910
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADK     R1 6         ; R1 := 6.000000
  2 [-]: TEST      R0 1         ; if R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADK     R1 -1        ; R1 := -1.000000
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0x89326c93
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 28
  9 [-]: JMP       28           ; PC := 28
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
 11 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x78298275]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 28
 17 [-]: JMP       28           ; PC := 28
 18 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x0b4bcfb6]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3[0x1c3568a5]
 26 [-]: MOVE      R6 R1        ; R6 := R1
 27 [-]: CALL      R4 3 1       ; R4(R5,R6)
 28 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 2931
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
  2 [-]: GETGLOBAL R2 K2        ; R2 := 0x42dcc9f5
  3 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["currZoom"]
  5 [-]: ADD       R3 R3 R0     ; R3 := R3 + R0
  6 [-]: LOADK     R4 0         ; R4 := 0.000000
  7 [-]: GETGLOBAL R5 K0        ; R5 := mCameraTable
  8 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["MaxZoom"]
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: SETTABLE  R1 K1 R2     ; R1["currZoom"] := R2
 11 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
 12 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["currZoom"]
 13 [-]: GETGLOBAL R2 K0        ; R2 := mCameraTable
 14 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxZoom"]
 15 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
 16 [-]: GETGLOBAL R2 K0        ; R2 := mCameraTable
 17 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["MaxPan"]
 19 [-]: MUL       R3 R3 R1     ; R3 := R3 * R1
 20 [-]: SETTABLE  R2 K4 R3     ; R2["clampedPan"] := R3
 21 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 2937
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: MOVE      R3 R2        ; R3 := R2
  2 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  3 [-]: MOVE      R5 R3        ; R5 := R3
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 0         ; if not R4 then PC := 41
  6 [-]: JMP       41           ; PC := 41
  7 [-]: GETGLOBAL R4 K1        ; R4 := _T
  8 [-]: GETTABLE  R3 R4 K2     ; R3 := R4["MenuSuitAvatar"]
  9 [-]: GETGLOBAL R4 K1        ; R4 := _T
 10 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mKDriveSuitMode"]
 11 [-]: TEST      R4 0         ; if not R4 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R3 R4 K4     ; R3 := R4["KDriveAvatar"]
 15 [-]: JMP       41           ; PC := 41
 16 [-]: GETGLOBAL R4 K1        ; R4 := _T
 17 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mMechaSuitMode"]
 18 [-]: TEST      R4 0         ; if not R4 then PC := 33
 19 [-]: JMP       33           ; PC := 33
 20 [-]: GETGLOBAL R4 K1        ; R4 := _T
 21 [-]: GETTABLE  R3 R4 K6     ; R3 := R4["MechAvatar"]
 22 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 23 [-]: MOVE      R5 R3        ; R5 := R3
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: TEST      R4 1         ; if R4 then PC := 41
 26 [-]: JMP       41           ; PC := 41
 27 [-]: SELF      R4 R3 K7     ; R5 := R3; R4 := R3[0xb2532845]
 28 [-]: GETGLOBAL R6 K8        ; R6 := 0x0469f296
 29 [-]: LOADK     R7 K9        ; R7 := "DisableFootIK"
 30 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 31 [-]: CALL      R4 0 1       ; R4(R5,...)
 32 [-]: JMP       41           ; PC := 41
 33 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 34 [-]: MOVE      R5 R3        ; R5 := R3
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: TEST      R4 1         ; if R4 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: SELF      R4 R3 K10    ; R5 := R3; R4 := R3[0x841b1f39]
 39 [-]: LOADBOOL  R6 0 0       ; R6 := false
 40 [-]: CALL      R4 3 1       ; R4(R5,R6)
 41 [-]: GETUPVAL  R4 U0        ; R4 := U0
 42 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x06d055f9]
 43 [-]: EQ        0 R0 K12     ; if R0 ~= nil then PC := 46
 44 [-]: JMP       46           ; PC := 46
 45 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 46
 46 [-]: LOADBOOL  R5 1 0       ; R5 := true
 47 [-]: MOVE      R6 R0        ; R6 := R0
 48 [-]: GETUPVAL  R7 U1        ; R7 := U1
 49 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["MouseDown"]
 50 [-]: TEST      R7 1         ; if R7 then PC := 58
 51 [-]: JMP       58           ; PC := 58
 52 [-]: GETGLOBAL R7 K14       ; R7 := mCameraTable
 53 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["mRightStickZoomValue"]
 54 [-]: EQ        0 R7 K16     ; if R7 ~= 0.000000 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 57
 57 [-]: LOADBOOL  R7 1 0       ; R7 := true
 58 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 59 [-]: MOVE      R0 R4        ; R0 := R4
 60 [-]: GETUPVAL  R4 U2        ; R4 := U2
 61 [-]: GETTABLE  R4 R4 K17    ; R4 := R4[0xd4c67576]
 62 [-]: GETGLOBAL R5 K18       ; R5 := 0xae91e43b
 63 [-]: MOVE      R6 R3        ; R6 := R3
 64 [-]: MOVE      R7 R0        ; R7 := R0
 65 [-]: MOVE      R8 R1        ; R8 := R1
 66 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 67 [-]: GETGLOBAL R4 K14       ; R4 := mCameraTable
 68 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["ConstantUpdate"]
 69 [-]: TEST      R4 1         ; if R4 then PC := 130
 70 [-]: JMP       130          ; PC := 130
 71 [-]: TEST      R0 0         ; if not R0 then PC := 130
 72 [-]: JMP       130          ; PC := 130
 73 [-]: GETGLOBAL R4 K1        ; R4 := _T
 74 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["suitTable"]
 75 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["myDiff"]
 76 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 130
 77 [-]: JMP       130          ; PC := 130
 78 [-]: GETGLOBAL R4 K14       ; R4 := mCameraTable
 79 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["currZoom"]
 80 [-]: EQ        1 R4 K16     ; if R4 == 0.000000 then PC := 130
 81 [-]: JMP       130          ; PC := 130
 82 [-]: GETGLOBAL R4 K14       ; R4 := mCameraTable
 83 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mRightStickZoomValue"]
 84 [-]: EQ        1 R4 K16     ; if R4 == 0.000000 then PC := 111
 85 [-]: JMP       111          ; PC := 111
 86 [-]: GETUPVAL  R4 U3        ; R4 := U3
 87 [-]: GETTABLE  R4 R4 K23    ; R4 := R4[0x8375cf88]
 88 [-]: GETGLOBAL R5 K14       ; R5 := mCameraTable
 89 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["mRightStickZoomValue"]
 90 [-]: CALL      R4 2 1       ; R4(R5)
 91 [-]: GETGLOBAL R4 K18       ; R4 := 0xae91e43b
 92 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0x91a24e4b]
 93 [-]: LOADK     R6 K25       ; R6 := "_root"
 94 [-]: LOADK     R7 26        ; R7 := 26.000000
 95 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 96 [-]: GETGLOBAL R5 K18       ; R5 := 0xae91e43b
 97 [-]: SELF      R5 R5 K26    ; R6 := R5; R5 := R5[0xaf9fda9f]
 98 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 99 [-]: GETGLOBAL R6 K14       ; R6 := mCameraTable
100 [-]: DIV       R7 R4 R5     ; R7 := R4 / R5
101 [-]: GETGLOBAL R8 K14       ; R8 := mCameraTable
102 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["clampedPan"]
103 [-]: MUL       R8 R8 K29    ; R8 := R8 * 2.000000
104 [-]: UNM       R8 R8        ; R8 := ^ R8
105 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
106 [-]: GETGLOBAL R8 K14       ; R8 := mCameraTable
107 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["clampedPan"]
108 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
109 [-]: SETTABLE  R6 K27 R7    ; R6["currPan"] := R7
110 [-]: JMP       127          ; PC := 127
111 [-]: GETGLOBAL R6 K14       ; R6 := mCameraTable
112 [-]: GETGLOBAL R7 K30       ; R7 := 0x42dcc9f5
113 [-]: GETGLOBAL R8 K14       ; R8 := mCameraTable
114 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["currPan"]
115 [-]: GETGLOBAL R9 K1        ; R9 := _T
116 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["suitTable"]
117 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["myDiff"]
118 [-]: MUL       R9 R9 K31    ; R9 := R9 * 0.002500
119 [-]: SUB       R8 R8 R9     ; R8 := R8 - R9
120 [-]: GETGLOBAL R9 K14       ; R9 := mCameraTable
121 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["clampedPan"]
122 [-]: UNM       R9 R9        ; R9 := ^ R9
123 [-]: GETGLOBAL R10 K14      ; R10 := mCameraTable
124 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["clampedPan"]
125 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
126 [-]: SETTABLE  R6 K27 R7    ; R6["currPan"] := R7
127 [-]: GETUPVAL  R6 U3        ; R6 := U3
128 [-]: GETTABLE  R6 R6 K32    ; R6 := R6[0x7027aec6]
129 [-]: CALL      R6 1 1       ; R6()
130 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 2974
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
 13 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x7cf8123f]
 14 [-]: LOADK     R4 3         ; R4 := 3.000000
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETGLOBAL R3 K4        ; R3 := 0x89326c93
 22 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x59c96e77]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R3 3 1       ; R3(R4,R5)
 25 [-]: LOADNIL   R2 R2        ; R2 := nil
 26 [-]: GETGLOBAL R3 K6        ; R3 := ZERO_VECTOR
 27 [-]: GETGLOBAL R4 K7        ; R4 := ZERO_ROTATION
 28 [-]: GETUPVAL  R5 U0        ; R5 := U0
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5[0xa9882367]
 30 [-]: LOADK     R6 K9        ; R6 := "MoaSpawnControl"
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 33 [-]: MOVE      R7 R5        ; R7 := R5
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: TEST      R6 1         ; if R6 then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: SELF      R6 R5 K10    ; R7 := R5; R6 := R5[0xd1586535]
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: GETGLOBAL R7 K11       ; R7 := 0xa421af95
 40 [-]: LOADK     R8 0         ; R8 := 0.000000
 41 [-]: LOADK     R9 1         ; R9 := 1.000000
 42 [-]: LOADK     R10 0        ; R10 := 0.000000
 43 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 44 [-]: ADD       R3 R6 R7     ; R3 := R6 + R7
 45 [-]: SELF      R6 R5 K12    ; R7 := R5; R6 := R5[0xcb3851b8]
 46 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 47 [-]: MOVE      R4 R6        ; R4 := R6
 48 [-]: SELF      R6 R1 K13    ; R7 := R1; R6 := R1[0xf2deaf69]
 49 [-]: GETGLOBAL R8 K14       ; R8 := 0x88980f4f
 50 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 51 [-]: GETUPVAL  R7 U0        ; R7 := U0
 52 [-]: GETTABLE  R7 R7 K15    ; R7 := R7[0x06d055f9]
 53 [-]: MOVE      R8 R6        ; R8 := R6
 54 [-]: GETGLOBAL R9 K16       ; R9 := 0x807c8690
 55 [-]: GETGLOBAL R10 K17      ; R10 := 0xf6ecd485
 56 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 57 [-]: GETGLOBAL R8 K4        ; R8 := 0x89326c93
 58 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0x29ef273d]
 59 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 60 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8[0x6cd833c5]
 61 [-]: GETGLOBAL R10 K20      ; R10 := 0x88efc25e
 62 [-]: MOVE      R11 R7       ; R11 := R7
 63 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 64 [-]: MOVE      R11 R3       ; R11 := R3
 65 [-]: MOVE      R12 R4       ; R12 := R4
 66 [-]: GETGLOBAL R13 K21      ; R13 := 0x0469f296
 67 [-]: CALL      R13 1 2      ; R13 := R13()
 68 [-]: LOADK     R14 0        ; R14 := 0.000000
 69 [-]: LOADBOOL  R15 1 0      ; R15 := true
 70 [-]: CALL      R8 8 2       ; R8 := R8(R9,R10,R11,R12,R13,R14,R15)
 71 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 72 [-]: MOVE      R10 R8       ; R10 := R8
 73 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 74 [-]: TEST      R9 0         ; if not R9 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: RETURN    R0 1         ; return 
 77 [-]: SELF      R9 R8 K22    ; R10 := R8; R9 := R8[0xbb610e5b]
 78 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 79 [-]: MOVE      R2 R9        ; R2 := R9
 80 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 81 [-]: MOVE      R10 R2       ; R10 := R2
 82 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 83 [-]: TEST      R9 1         ; if R9 then PC := 123
 84 [-]: JMP       123          ; PC := 123
 85 [-]: SELF      R9 R0 K23    ; R10 := R0; R9 := R0[0x68d708a7]
 86 [-]: LOADK     R11 0        ; R11 := 0.000000
 87 [-]: GETGLOBAL R12 K24      ; R12 := mInventory
 88 [-]: SELF      R12 R12 K25  ; R13 := R12; R12 := R12[0xe9131614]
 89 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 90 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 91 [-]: GETGLOBAL R10 K20      ; R10 := 0x88efc25e
 92 [-]: MOVE      R11 R1       ; R11 := R1
 93 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 94 [-]: SELF      R11 R2 K26   ; R12 := R2; R11 := R2[0x511d26b8]
 95 [-]: MOVE      R13 R10      ; R13 := R10
 96 [-]: LOADBOOL  R14 1 0      ; R14 := true
 97 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 98 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
 99 [-]: MOVE      R13 R11      ; R13 := R11
100 [-]: CALL      R12 2 2      ; R12 := R12(R13)
101 [-]: TEST      R12 1        ; if R12 then PC := 123
102 [-]: JMP       123          ; PC := 123
103 [-]: SELF      R12 R11 K27  ; R13 := R11; R12 := R11[0xaa041663]
104 [-]: MOVE      R14 R9       ; R14 := R9
105 [-]: CALL      R12 3 1      ; R12(R13,R14)
106 [-]: GETTABLE  R12 R0 K28   ; R12 := R0["mModularParts"]
107 [-]: EQ        1 R12 K29    ; if R12 == nil then PC := 114
108 [-]: JMP       114          ; PC := 114
109 [-]: LOADBOOL  R12 1 0      ; R12 := true
110 [-]: SELF      R13 R11 K30  ; R14 := R11; R13 := R11[0xa6101f7e]
111 [-]: GETTABLE  R15 R0 K28   ; R15 := R0["mModularParts"]
112 [-]: MOVE      R16 R12      ; R16 := R12
113 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
114 [-]: SELF      R13 R11 K31  ; R14 := R11; R13 := R11[0x1bf26251]
115 [-]: LOADBOOL  R15 0 0      ; R15 := false
116 [-]: CALL      R13 3 1      ; R13(R14,R15)
117 [-]: SELF      R13 R2 K32   ; R14 := R2; R13 := R2[0x40d138a2]
118 [-]: GETGLOBAL R15 K33      ; R15 := 0x25d99d89
119 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15[0x62c81b76]
120 [-]: CALL      R15 2 2      ; R15 := R15(R16)
121 [-]: MOVE      R16 R11      ; R16 := R11
122 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
123 [-]: GETGLOBAL R13 K1       ; R13 := 0xbe190284
124 [-]: SELF      R13 R13 K2   ; R14 := R13; R13 := R13[0x7cf8123f]
125 [-]: LOADK     R15 0        ; R15 := 0.000000
126 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
127 [-]: GETGLOBAL R14 K1       ; R14 := 0xbe190284
128 [-]: SELF      R14 R14 K2   ; R15 := R14; R14 := R14[0x7cf8123f]
129 [-]: LOADK     R16 1        ; R16 := 1.000000
130 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
131 [-]: GETGLOBAL R15 K1       ; R15 := 0xbe190284
132 [-]: SELF      R15 R15 K35  ; R16 := R15; R15 := R15[0x1e0f3010]
133 [-]: MOVE      R17 R13      ; R17 := R13
134 [-]: MOVE      R18 R14      ; R18 := R14
135 [-]: MOVE      R19 R2       ; R19 := R2
136 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
137 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
138 [-]: GETUPVAL  R16 U1       ; R16 := U1
139 [-]: CALL      R15 2 2      ; R15 := R15(R16)
140 [-]: TEST      R15 1        ; if R15 then PC := 146
141 [-]: JMP       146          ; PC := 146
142 [-]: GETUPVAL  R15 U1       ; R15 := U1
143 [-]: SETTABLE  R15 K36 R14  ; R15["petAvatar"] := R14
144 [-]: GETUPVAL  R15 U1       ; R15 := U1
145 [-]: SETTABLE  R15 K37 R8   ; R15[0x3abee2fa] := R8
146 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 3031
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
 13 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x7cf8123f]
 14 [-]: LOADK     R4 1         ; R4 := 1.000000
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETGLOBAL R3 K4        ; R3 := 0x89326c93
 22 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x59c96e77]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R3 3 1       ; R3(R4,R5)
 25 [-]: LOADNIL   R2 R2        ; R2 := nil
 26 [-]: GETGLOBAL R3 K6        ; R3 := ZERO_VECTOR
 27 [-]: GETGLOBAL R4 K7        ; R4 := ZERO_ROTATION
 28 [-]: GETUPVAL  R5 U0        ; R5 := U0
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5[0xa9882367]
 30 [-]: LOADK     R6 K9        ; R6 := "KubrowSpawnControl"
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: GETUPVAL  R6 U0        ; R6 := U0
 33 [-]: GETTABLE  R6 R6 K8     ; R6 := R6[0xa9882367]
 34 [-]: LOADK     R7 K10       ; R7 := "KubrowPuppySpawnControl"
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: GETUPVAL  R7 U0        ; R7 := U0
 37 [-]: GETTABLE  R7 R7 K11    ; R7 := R7[0x06d055f9]
 38 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mDetails"]
 39 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["mIsPuppy"]
 40 [-]: MOVE      R9 R6        ; R9 := R6
 41 [-]: MOVE      R10 R5       ; R10 := R5
 42 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 43 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 44 [-]: MOVE      R9 R7        ; R9 := R7
 45 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 46 [-]: TEST      R8 1         ; if R8 then PC := 54
 47 [-]: JMP       54           ; PC := 54
 48 [-]: SELF      R8 R7 K14    ; R9 := R7; R8 := R7[0xd1586535]
 49 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 50 [-]: MOVE      R3 R8        ; R3 := R8
 51 [-]: SELF      R8 R7 K15    ; R9 := R7; R8 := R7[0xcb3851b8]
 52 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 53 [-]: MOVE      R4 R8        ; R4 := R8
 54 [-]: SELF      R8 R1 K16    ; R9 := R1; R8 := R1[0xf2deaf69]
 55 [-]: GETGLOBAL R10 K17      ; R10 := 0xb9a9a904
 56 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 57 [-]: SELF      R9 R1 K16    ; R10 := R1; R9 := R1[0xf2deaf69]
 58 [-]: GETGLOBAL R11 K18      ; R11 := 0x2c2fbbf0
 59 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 60 [-]: LOADNIL   R10 R10      ; R10 := nil
 61 [-]: GETUPVAL  R11 U0       ; R11 := U0
 62 [-]: GETTABLE  R11 R11 K11  ; R11 := R11[0x06d055f9]
 63 [-]: GETTABLE  R12 R0 K12   ; R12 := R0["mDetails"]
 64 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["mIsPuppy"]
 65 [-]: GETUPVAL  R13 U0       ; R13 := U0
 66 [-]: GETTABLE  R13 R13 K11  ; R13 := R13[0x06d055f9]
 67 [-]: MOVE      R14 R8       ; R14 := R8
 68 [-]: GETGLOBAL R15 K19      ; R15 := 0x70114ff1
 69 [-]: GETGLOBAL R16 K20      ; R16 := 0x4ea3e9ad
 70 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 71 [-]: GETUPVAL  R14 U0       ; R14 := U0
 72 [-]: GETTABLE  R14 R14 K11  ; R14 := R14[0x06d055f9]
 73 [-]: MOVE      R15 R8       ; R15 := R8
 74 [-]: GETGLOBAL R16 K21      ; R16 := 0xb99ad96f
 75 [-]: GETGLOBAL R17 K22      ; R17 := 0xefc2e7cb
 76 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
 77 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 78 [-]: MOVE      R10 R11      ; R10 := R11
 79 [-]: GETGLOBAL R11 K4       ; R11 := 0x89326c93
 80 [-]: SELF      R11 R11 K23  ; R12 := R11; R11 := R11[0x29ef273d]
 81 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 82 [-]: SELF      R11 R11 K24  ; R12 := R11; R11 := R11[0x6cd833c5]
 83 [-]: GETGLOBAL R13 K25      ; R13 := 0x88efc25e
 84 [-]: MOVE      R14 R10      ; R14 := R10
 85 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 86 [-]: MOVE      R14 R3       ; R14 := R3
 87 [-]: MOVE      R15 R4       ; R15 := R4
 88 [-]: GETGLOBAL R16 K26      ; R16 := 0x0469f296
 89 [-]: CALL      R16 1 2      ; R16 := R16()
 90 [-]: LOADK     R17 0        ; R17 := 0.000000
 91 [-]: LOADBOOL  R18 1 0      ; R18 := true
 92 [-]: CALL      R11 8 2      ; R11 := R11(R12,R13,R14,R15,R16,R17,R18)
 93 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
 94 [-]: MOVE      R13 R11      ; R13 := R11
 95 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 96 [-]: TEST      R12 0        ; if not R12 then PC := 99
 97 [-]: JMP       99           ; PC := 99
 98 [-]: RETURN    R0 1         ; return 
 99 [-]: SELF      R12 R11 K27  ; R13 := R11; R12 := R11[0xbb610e5b]
100 [-]: CALL      R12 2 2      ; R12 := R12(R13)
101 [-]: MOVE      R2 R12       ; R2 := R12
102 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
103 [-]: MOVE      R13 R2       ; R13 := R2
104 [-]: CALL      R12 2 2      ; R12 := R12(R13)
105 [-]: TEST      R12 1        ; if R12 then PC := 232
106 [-]: JMP       232          ; PC := 232
107 [-]: GETGLOBAL R12 K28      ; R12 := _T
108 [-]: GETUPVAL  R13 U0       ; R13 := U0
109 [-]: GETTABLE  R13 R13 K11  ; R13 := R13[0x06d055f9]
110 [-]: GETTABLE  R14 R0 K12   ; R14 := R0["mDetails"]
111 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["mIsPuppy"]
112 [-]: TEST      R14 0        ; if not R14 then PC := 115
113 [-]: JMP       115          ; PC := 115
114 [-]: MOVE      R14 R9       ; R14 := R9
115 [-]: MOVE      R15 R2       ; R15 := R2
116 [-]: LOADNIL   R16 R16      ; R16 := nil
117 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
118 [-]: SETTABLE  R12 K29 R13  ; R12["chargerPuppy"] := R13
119 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
120 [-]: MOVE      R13 R7       ; R13 := R7
121 [-]: CALL      R12 2 2      ; R12 := R12(R13)
122 [-]: TEST      R12 1        ; if R12 then PC := 152
123 [-]: JMP       152          ; PC := 152
124 [-]: MOVE      R12 R3       ; R12 := R3
125 [-]: GETGLOBAL R13 K30      ; R13 := 0xa421af95
126 [-]: CALL      R13 1 2      ; R13 := R13()
127 [-]: GETGLOBAL R14 K4       ; R14 := 0x89326c93
128 [-]: SELF      R14 R14 K31  ; R15 := R14; R14 := R14[0xbd5d0ec1]
129 [-]: GETGLOBAL R16 K30      ; R16 := 0xa421af95
130 [-]: LOADK     R17 0        ; R17 := 0.000000
131 [-]: LOADK     R18 K32      ; R18 := 0.200000
132 [-]: LOADK     R19 0        ; R19 := 0.000000
133 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
134 [-]: ADD       R16 R12 R16  ; R16 := R12 + R16
135 [-]: GETGLOBAL R17 K30      ; R17 := 0xa421af95
136 [-]: LOADK     R18 0        ; R18 := 0.000000
137 [-]: LOADK     R19 1        ; R19 := 1.000000
138 [-]: LOADK     R20 0        ; R20 := 0.000000
139 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
140 [-]: SUB       R17 R12 R17  ; R17 := R12 - R17
141 [-]: LOADNIL   R18 R19      ; R18 := R19 := nil
142 [-]: MOVE      R20 R13      ; R20 := R13
143 [-]: CALL      R14 7 2      ; R14 := R14(R15,R16,R17,R18,R19,R20)
144 [-]: TEST      R14 0        ; if not R14 then PC := 147
145 [-]: JMP       147          ; PC := 147
146 [-]: MOVE      R12 R13      ; R12 := R13
147 [-]: SELF      R14 R2 K33   ; R15 := R2; R14 := R2[0x589ef1c1]
148 [-]: MOVE      R16 R12      ; R16 := R12
149 [-]: SELF      R17 R7 K15   ; R18 := R7; R17 := R7[0xcb3851b8]
150 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
151 [-]: CALL      R14 0 1      ; R14(R15,...)
152 [-]: SELF      R14 R2 K34   ; R15 := R2; R14 := R2[0xb2532845]
153 [-]: GETGLOBAL R16 K26      ; R16 := 0x0469f296
154 [-]: LOADK     R17 K35      ; R17 := "StandUp"
155 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
156 [-]: CALL      R14 0 1      ; R14(R15,...)
157 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
158 [-]: GETGLOBAL R15 K28      ; R15 := _T
159 [-]: GETTABLE  R15 R15 K36  ; R15 := R15["petCommands"]
160 [-]: CALL      R14 2 2      ; R14 := R14(R15)
161 [-]: TEST      R14 1        ; if R14 then PC := 173
162 [-]: JMP       173          ; PC := 173
163 [-]: GETGLOBAL R14 K28      ; R14 := _T
164 [-]: GETTABLE  R14 R14 K36  ; R14 := R14["petCommands"]
165 [-]: GETTABLE  R14 R14 K37  ; R14 := R14[0x3abee2fa]
166 [-]: GETUPVAL  R15 U0       ; R15 := U0
167 [-]: GETTABLE  R15 R15 K8   ; R15 := R15[0xa9882367]
168 [-]: LOADK     R16 K9       ; R16 := "KubrowSpawnControl"
169 [-]: CALL      R15 2 2      ; R15 := R15(R16)
170 [-]: LOADNIL   R16 R16      ; R16 := nil
171 [-]: LOADBOOL  R17 1 0      ; R17 := true
172 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
173 [-]: SELF      R14 R0 K38   ; R15 := R0; R14 := R0[0x68d708a7]
174 [-]: LOADK     R16 0        ; R16 := 0.000000
175 [-]: GETGLOBAL R17 K39      ; R17 := mInventory
176 [-]: SELF      R17 R17 K40  ; R18 := R17; R17 := R17[0xe9131614]
177 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
178 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
179 [-]: GETGLOBAL R15 K25      ; R15 := 0x88efc25e
180 [-]: MOVE      R16 R1       ; R16 := R1
181 [-]: CALL      R15 2 2      ; R15 := R15(R16)
182 [-]: SELF      R16 R2 K41   ; R17 := R2; R16 := R2[0x511d26b8]
183 [-]: MOVE      R18 R15      ; R18 := R15
184 [-]: LOADBOOL  R19 1 0      ; R19 := true
185 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
186 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
187 [-]: MOVE      R18 R16      ; R18 := R16
188 [-]: CALL      R17 2 2      ; R17 := R17(R18)
189 [-]: TEST      R17 1        ; if R17 then PC := 232
190 [-]: JMP       232          ; PC := 232
191 [-]: SELF      R17 R2 K42   ; R18 := R2; R17 := R2[0xb3b74ab3]
192 [-]: GETTABLE  R19 R0 K12   ; R19 := R0["mDetails"]
193 [-]: CALL      R17 3 1      ; R17(R18,R19)
194 [-]: GETTABLE  R17 R0 K12   ; R17 := R0["mDetails"]
195 [-]: GETTABLE  R17 R17 K13  ; R17 := R17["mIsPuppy"]
196 [-]: TEST      R17 1        ; if R17 then PC := 208
197 [-]: JMP       208          ; PC := 208
198 [-]: SELF      R17 R15 K16  ; R18 := R15; R17 := R15[0xf2deaf69]
199 [-]: GETGLOBAL R19 K43      ; R19 := 0xf541be71
200 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
201 [-]: TEST      R17 1        ; if R17 then PC := 208
202 [-]: JMP       208          ; PC := 208
203 [-]: SELF      R17 R15 K16  ; R18 := R15; R17 := R15[0xf2deaf69]
204 [-]: GETGLOBAL R19 K44      ; R19 := 0xda203692
205 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
206 [-]: TEST      R17 0        ; if not R17 then PC := 212
207 [-]: JMP       212          ; PC := 212
208 [-]: SELF      R17 R16 K45  ; R18 := R16; R17 := R16[0x7c595670]
209 [-]: GETTABLE  R19 R0 K12   ; R19 := R0["mDetails"]
210 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["mIsPuppy"]
211 [-]: CALL      R17 3 1      ; R17(R18,R19)
212 [-]: SELF      R17 R16 K46  ; R18 := R16; R17 := R16[0xaa041663]
213 [-]: MOVE      R19 R14      ; R19 := R14
214 [-]: CALL      R17 3 1      ; R17(R18,R19)
215 [-]: GETTABLE  R17 R0 K47   ; R17 := R0["mModularParts"]
216 [-]: EQ        1 R17 K48    ; if R17 == nil then PC := 223
217 [-]: JMP       223          ; PC := 223
218 [-]: LOADBOOL  R17 1 0      ; R17 := true
219 [-]: SELF      R18 R16 K49  ; R19 := R16; R18 := R16[0xa6101f7e]
220 [-]: GETTABLE  R20 R0 K47   ; R20 := R0["mModularParts"]
221 [-]: MOVE      R21 R17      ; R21 := R17
222 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
223 [-]: SELF      R18 R16 K50  ; R19 := R16; R18 := R16[0x1bf26251]
224 [-]: LOADBOOL  R20 0 0      ; R20 := false
225 [-]: CALL      R18 3 1      ; R18(R19,R20)
226 [-]: SELF      R18 R2 K51   ; R19 := R2; R18 := R2[0x40d138a2]
227 [-]: GETGLOBAL R20 K52      ; R20 := 0x25d99d89
228 [-]: SELF      R20 R20 K53  ; R21 := R20; R20 := R20[0x62c81b76]
229 [-]: CALL      R20 2 2      ; R20 := R20(R21)
230 [-]: MOVE      R21 R16      ; R21 := R16
231 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
232 [-]: GETGLOBAL R18 K1       ; R18 := 0xbe190284
233 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18[0x7cf8123f]
234 [-]: LOADK     R20 0        ; R20 := 0.000000
235 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
236 [-]: GETGLOBAL R19 K1       ; R19 := 0xbe190284
237 [-]: SELF      R19 R19 K2   ; R20 := R19; R19 := R19[0x7cf8123f]
238 [-]: LOADK     R21 3        ; R21 := 3.000000
239 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
240 [-]: GETGLOBAL R20 K1       ; R20 := 0xbe190284
241 [-]: SELF      R20 R20 K54  ; R21 := R20; R20 := R20[0x1e0f3010]
242 [-]: MOVE      R22 R18      ; R22 := R18
243 [-]: MOVE      R23 R2       ; R23 := R2
244 [-]: MOVE      R24 R19      ; R24 := R19
245 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
246 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
247 [-]: GETUPVAL  R21 U1       ; R21 := U1
248 [-]: CALL      R20 2 2      ; R20 := R20(R21)
249 [-]: TEST      R20 1        ; if R20 then PC := 255
250 [-]: JMP       255          ; PC := 255
251 [-]: GETUPVAL  R20 U1       ; R20 := U1
252 [-]: SETTABLE  R20 K55 R2   ; R20["petAvatar"] := R2
253 [-]: GETUPVAL  R20 U1       ; R20 := U1
254 [-]: SETTABLE  R20 K56 R11  ; R20["petAgent"] := R11
255 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 3116
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x768274d6]
  2 [-]: LOADBOOL  R3 0 0       ; R3 := false
  3 [-]: LOADBOOL  R4 1 0       ; R4 := true
  4 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0xcbd666e1
  6 [-]: LOADK     R2 0         ; R2 := 0.000000
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x768274d6]
  9 [-]: LOADBOOL  R3 1 0       ; R3 := true
 10 [-]: LOADBOOL  R4 1 0       ; R4 := true
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 3122
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := mInventory
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x3c6b0324]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x9f91f49d]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R0 0         ; if not R0 then PC := 49
 19 [-]: JMP       49           ; PC := 49
 20 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x62c81b76]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0xb61abfd2]
 24 [-]: LOADK     R5 1         ; R5 := 1.000000
 25 [-]: LOADK     R6 0         ; R6 := 0.000000
 26 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 27 [-]: GETGLOBAL R4 K2        ; R4 := mInventory
 28 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xa855881a]
 29 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 30 [-]: LOADK     R5 1         ; R5 := 1.000000
 31 [-]: LEN       R6 R4        ; R6 := # R4
 32 [-]: LOADK     R7 1         ; R7 := 1.000000
 33 [-]: FORPREP   R5 47        ; R5 -= R7; PC := 47
 34 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 35 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mItemId"]
 36 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mId"]
 37 [-]: GETTABLE  R10 R3 K9    ; R10 := R3["mItemId"]
 38 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mId"]
 39 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETUPVAL  R9 U0        ; R9 := U0
 42 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 43 [-]: GETTABLE  R11 R4 R8    ; R11 := R4[R8]
 44 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["mItemType"]
 45 [-]: CALL      R9 3 1       ; R9(R10,R11)
 46 [-]: JMP       79           ; PC := 79
 47 [-]: FORLOOP   R5 34        ; R5 += R7; if R5 <= R6 then begin PC := 34; R8 := R5 end
 48 [-]: JMP       79           ; PC := 79
 49 [-]: TEST      R1 0         ; if not R1 then PC := 79
 50 [-]: JMP       79           ; PC := 79
 51 [-]: GETGLOBAL R9 K1        ; R9 := 0x25d99d89
 52 [-]: SELF      R9 R9 K5     ; R10 := R9; R9 := R9[0x62c81b76]
 53 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 54 [-]: SELF      R10 R9 K6    ; R11 := R9; R10 := R9[0xb61abfd2]
 55 [-]: LOADK     R12 1        ; R12 := 1.000000
 56 [-]: LOADK     R13 0        ; R13 := 0.000000
 57 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 58 [-]: GETGLOBAL R11 K2       ; R11 := mInventory
 59 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11[0x91a3eddf]
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: LOADK     R12 1        ; R12 := 1.000000
 62 [-]: LEN       R13 R11      ; R13 := # R11
 63 [-]: LOADK     R14 1        ; R14 := 1.000000
 64 [-]: FORPREP   R12 78       ; R12 -= R14; PC := 78
 65 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
 66 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["mItemId"]
 67 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["mId"]
 68 [-]: GETTABLE  R17 R10 K9   ; R17 := R10["mItemId"]
 69 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["mId"]
 70 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 78
 71 [-]: JMP       78           ; PC := 78
 72 [-]: GETUPVAL  R16 U1       ; R16 := U1
 73 [-]: GETTABLE  R17 R11 R15  ; R17 := R11[R15]
 74 [-]: GETTABLE  R18 R11 R15  ; R18 := R11[R15]
 75 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["mItemType"]
 76 [-]: CALL      R16 3 1      ; R16(R17,R18)
 77 [-]: JMP       79           ; PC := 79
 78 [-]: FORLOOP   R12 65       ; R12 += R14; if R12 <= R13 then begin PC := 65; R15 := R12 end
 79 [-]: TEST      R0 1         ; if R0 then PC := 116
 80 [-]: JMP       116          ; PC := 116
 81 [-]: GETGLOBAL R16 K2       ; R16 := mInventory
 82 [-]: SELF      R16 R16 K8   ; R17 := R16; R16 := R16[0xa855881a]
 83 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 84 [-]: LOADK     R17 1        ; R17 := 1.000000
 85 [-]: LEN       R18 R16      ; R18 := # R16
 86 [-]: LOADK     R19 1        ; R19 := 1.000000
 87 [-]: FORPREP   R17 100      ; R17 -= R19; PC := 100
 88 [-]: GETTABLE  R21 R16 R20  ; R21 := R16[R20]
 89 [-]: GETTABLE  R21 R21 K13  ; R21 := R21["mDetails"]
 90 [-]: GETTABLE  R21 R21 K14  ; R21 := R21["mStatus"]
 91 [-]: EQ        1 R21 K15    ; if R21 == 3.000000 then PC := 100
 92 [-]: JMP       100          ; PC := 100
 93 [-]: GETUPVAL  R21 U0       ; R21 := U0
 94 [-]: GETTABLE  R22 R16 R20  ; R22 := R16[R20]
 95 [-]: GETTABLE  R23 R16 R20  ; R23 := R16[R20]
 96 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["mItemType"]
 97 [-]: CALL      R21 3 1      ; R21(R22,R23)
 98 [-]: LOADBOOL  R0 1 0       ; R0 := true
 99 [-]: JMP       101          ; PC := 101
100 [-]: FORLOOP   R17 88       ; R17 += R19; if R17 <= R18 then begin PC := 88; R20 := R17 end
101 [-]: TEST      R0 1         ; if R0 then PC := 116
102 [-]: JMP       116          ; PC := 116
103 [-]: GETGLOBAL R21 K16      ; R21 := 0xbe190284
104 [-]: SELF      R21 R21 K17  ; R22 := R21; R21 := R21[0x7cf8123f]
105 [-]: LOADK     R23 1        ; R23 := 1.000000
106 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
107 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
108 [-]: MOVE      R23 R21      ; R23 := R21
109 [-]: CALL      R22 2 2      ; R22 := R22(R23)
110 [-]: TEST      R22 1        ; if R22 then PC := 116
111 [-]: JMP       116          ; PC := 116
112 [-]: GETGLOBAL R22 K18      ; R22 := 0x89326c93
113 [-]: SELF      R22 R22 K19  ; R23 := R22; R22 := R22[0x59c96e77]
114 [-]: MOVE      R24 R21      ; R24 := R21
115 [-]: CALL      R22 3 1      ; R22(R23,R24)
116 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 3170
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["ConsumablesElements"] := nil
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: SETTABLE  R0 K3 K2     ; R0["EmotesElements"] := nil
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: SETTABLE  R0 K4 K2     ; R0["InfoPopup_Data"] := nil
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: SETTABLE  R0 K5 K2     ; R0["CurrentSearchTerm"] := nil
  9 [-]: GETGLOBAL R0 K6        ; R0 := 0x89326c93
 10 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x46a0ebf5]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["TELEPORT_TRIGGER"]
 13 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 14 [-]: GETGLOBAL R1 K9        ; R1 := 0x7b998233
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: SELF      R1 R0 K10    ; R2 := R0; R1 := R0[0x383d2e7d]
 20 [-]: CALL      R1 2 1       ; R1(R2)
 21 [-]: GETGLOBAL R1 K9        ; R1 := 0x7b998233
 22 [-]: GETGLOBAL R2 K11       ; R2 := mEvoMovie
 23 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 24 [-]: TEST      R1 1         ; if R1 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETGLOBAL R1 K11       ; R1 := mEvoMovie
 27 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xe4162eed]
 28 [-]: LOADK     R3 K13       ; R3 := "Close"
 29 [-]: LOADK     R4 K14       ; R4 := ""
 30 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 31 [-]: GETGLOBAL R1 K9        ; R1 := 0x7b998233
 32 [-]: GETGLOBAL R2 K0        ; R2 := _T
 33 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["IsInScreenStack"]
 34 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 35 [-]: TEST      R1 1         ; if R1 then PC := 52
 36 [-]: JMP       52           ; PC := 52
 37 [-]: GETGLOBAL R1 K0        ; R1 := _T
 38 [-]: GETTABLE  R1 R1 K16    ; R1 := R1[0x1c5b5b33]
 39 [-]: LOADK     R2 K17       ; R2 := "LoadOut"
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: TEST      R1 0         ; if not R1 then PC := 52
 42 [-]: JMP       52           ; PC := 52
 43 [-]: GETGLOBAL R1 K0        ; R1 := _T
 44 [-]: GETTABLE  R1 R1 K16    ; R1 := R1[0x1c5b5b33]
 45 [-]: LOADK     R2 K18       ; R2 := "UpgradeCards"
 46 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 47 [-]: TEST      R1 1         ; if R1 then PC := 52
 48 [-]: JMP       52           ; PC := 52
 49 [-]: GETGLOBAL R1 K0        ; R1 := _T
 50 [-]: GETTABLE  R1 R1 K19    ; R1 := R1[0x021c8cce]
 51 [-]: CALL      R1 1 1       ; R1()
 52 [-]: GETGLOBAL R1 K0        ; R1 := _T
 53 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["MenuSuitAvatar"]
 54 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 55 [-]: MOVE      R3 R1        ; R3 := R1
 56 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 57 [-]: TEST      R2 1         ; if R2 then PC := 369
 58 [-]: JMP       369          ; PC := 369
 59 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 60 [-]: GETGLOBAL R3 K21       ; R3 := 0xbe190284
 61 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 62 [-]: TEST      R2 1         ; if R2 then PC := 369
 63 [-]: JMP       369          ; PC := 369
 64 [-]: GETGLOBAL R2 K0        ; R2 := _T
 65 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0x1c5b5b33]
 66 [-]: LOADK     R3 K17       ; R3 := "LoadOut"
 67 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 68 [-]: TEST      R2 1         ; if R2 then PC := 369
 69 [-]: JMP       369          ; PC := 369
 70 [-]: GETGLOBAL R2 K0        ; R2 := _T
 71 [-]: SETTABLE  R2 K22 R1    ; R2["ArsenalAvatar"] := R1
 72 [-]: SELF      R2 R1 K23    ; R3 := R1; R2 := R1[0x768274d6]
 73 [-]: LOADBOOL  R4 0 0       ; R4 := false
 74 [-]: LOADBOOL  R5 1 0       ; R5 := true
 75 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 76 [-]: GETGLOBAL R2 K0        ; R2 := _T
 77 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["MenuSentinel"]
 78 [-]: GETGLOBAL R3 K9        ; R3 := 0x7b998233
 79 [-]: MOVE      R4 R2        ; R4 := R2
 80 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 81 [-]: TEST      R3 1         ; if R3 then PC := 90
 82 [-]: JMP       90           ; PC := 90
 83 [-]: SELF      R3 R2 K23    ; R4 := R2; R3 := R2[0x768274d6]
 84 [-]: LOADBOOL  R5 0 0       ; R5 := false
 85 [-]: LOADBOOL  R6 1 0       ; R6 := true
 86 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 87 [-]: SELF      R3 R2 K25    ; R4 := R2; R3 := R2[0x044b7be8]
 88 [-]: LOADBOOL  R5 0 0       ; R5 := false
 89 [-]: CALL      R3 3 1       ; R3(R4,R5)
 90 [-]: GETGLOBAL R3 K6        ; R3 := 0x89326c93
 91 [-]: SELF      R3 R3 K26    ; R4 := R3; R3 := R3[0xfb64e76c]
 92 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 93 [-]: GETGLOBAL R4 K9        ; R4 := 0x7b998233
 94 [-]: MOVE      R5 R3        ; R5 := R3
 95 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 96 [-]: TEST      R4 1         ; if R4 then PC := 183
 97 [-]: JMP       183          ; PC := 183
 98 [-]: SELF      R4 R3 K27    ; R5 := R3; R4 := R3[0xa534c3ac]
 99 [-]: CALL      R4 2 2       ; R4 := R4(R5)
100 [-]: GETGLOBAL R5 K9        ; R5 := 0x7b998233
101 [-]: MOVE      R6 R4        ; R6 := R4
102 [-]: CALL      R5 2 2       ; R5 := R5(R6)
103 [-]: TEST      R5 1         ; if R5 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R1 R4        ; R1 := R4
106 [-]: GETGLOBAL R5 K21       ; R5 := 0xbe190284
107 [-]: SELF      R5 R5 K28    ; R6 := R5; R5 := R5[0xf2deaf69]
108 [-]: GETGLOBAL R7 K29       ; R7 := gLotusPhotoBoothGameRulesType
109 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
110 [-]: TEST      R5 0         ; if not R5 then PC := 171
111 [-]: JMP       171          ; PC := 171
112 [-]: SELF      R5 R1 K30    ; R6 := R1; R5 := R1[0xde321e6f]
113 [-]: CALL      R5 2 2       ; R5 := R5(R6)
114 [-]: SELF      R5 R5 K31    ; R6 := R5; R5 := R5[0xf7d48ee0]
115 [-]: CALL      R5 2 2       ; R5 := R5(R6)
116 [-]: SELF      R6 R5 K28    ; R7 := R5; R6 := R5[0xf2deaf69]
117 [-]: GETGLOBAL R8 K32       ; R8 := 0x68564c44
118 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
119 [-]: TEST      R6 0         ; if not R6 then PC := 154
120 [-]: JMP       154          ; PC := 154
121 [-]: GETGLOBAL R6 K9        ; R6 := 0x7b998233
122 [-]: GETGLOBAL R7 K0        ; R7 := _T
123 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["INFESTED_DecoState"]
124 [-]: CALL      R6 2 2       ; R6 := R6(R7)
125 [-]: TEST      R6 1         ; if R6 then PC := 154
126 [-]: JMP       154          ; PC := 154
127 [-]: GETGLOBAL R6 K9        ; R6 := 0x7b998233
128 [-]: GETGLOBAL R7 K0        ; R7 := _T
129 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["INFESTED_DecoState"]
130 [-]: GETGLOBAL R8 K0        ; R8 := _T
131 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["MenuSuitAvatar"]
132 [-]: SELF      R8 R8 K34    ; R9 := R8; R8 := R8[0x388577d5]
133 [-]: CALL      R8 2 2       ; R8 := R8(R9)
134 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
135 [-]: CALL      R6 2 2       ; R6 := R6(R7)
136 [-]: TEST      R6 1         ; if R6 then PC := 154
137 [-]: JMP       154          ; PC := 154
138 [-]: GETGLOBAL R6 K35       ; R6 := 0x4ec73e73
139 [-]: GETGLOBAL R7 K0        ; R7 := _T
140 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["INFESTED_DecoState"]
141 [-]: GETGLOBAL R8 K0        ; R8 := _T
142 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["MenuSuitAvatar"]
143 [-]: SELF      R8 R8 K34    ; R9 := R8; R8 := R8[0x388577d5]
144 [-]: CALL      R8 2 2       ; R8 := R8(R9)
145 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
146 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["openDecos"]
147 [-]: CALL      R6 2 3       ; R6,R7 := R6(R7)
148 [-]: GETGLOBAL R8 K0        ; R8 := _T
149 [-]: GETTABLE  R8 R8 K37    ; R8 := R8[0x8095dfb5]
150 [-]: MOVE      R9 R1        ; R9 := R1
151 [-]: MOVE      R10 R7       ; R10 := R7
152 [-]: CALL      R8 3 1       ; R8(R9,R10)
153 [-]: JMP       171          ; PC := 171
154 [-]: SELF      R8 R5 K28    ; R9 := R5; R8 := R5[0xf2deaf69]
155 [-]: GETGLOBAL R10 K38      ; R10 := 0x2ccd2c30
156 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
157 [-]: TEST      R8 0         ; if not R8 then PC := 171
158 [-]: JMP       171          ; PC := 171
159 [-]: GETGLOBAL R8 K0        ; R8 := _T
160 [-]: GETTABLE  R8 R8 K39    ; R8 := R8["RUNNER_DecoState"]
161 [-]: EQ        1 R8 K2      ; if R8 == nil then PC := 171
162 [-]: JMP       171          ; PC := 171
163 [-]: GETGLOBAL R8 K0        ; R8 := _T
164 [-]: GETTABLE  R8 R8 K40    ; R8 := R8[0x3ef5c227]
165 [-]: MOVE      R9 R1        ; R9 := R1
166 [-]: GETGLOBAL R10 K0       ; R10 := _T
167 [-]: GETTABLE  R10 R10 K41  ; R10 := R10[0x7fab9289]
168 [-]: MOVE      R11 R1       ; R11 := R1
169 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
170 [-]: CALL      R8 0 1       ; R8(R9,...)
171 [-]: GETGLOBAL R8 K0        ; R8 := _T
172 [-]: GETTABLE  R8 R8 K42    ; R8 := R8["WRAITH_ForceBackToWraith"]
173 [-]: TEST      R8 0         ; if not R8 then PC := 181
174 [-]: JMP       181          ; PC := 181
175 [-]: GETGLOBAL R8 K0        ; R8 := _T
176 [-]: GETTABLE  R8 R8 K43    ; R8 := R8[0xcb159ef4]
177 [-]: SELF      R9 R3 K44    ; R10 := R3; R9 := R3[0xbb610e5b]
178 [-]: CALL      R9 2 2       ; R9 := R9(R10)
179 [-]: LOADBOOL  R10 1 0      ; R10 := true
180 [-]: CALL      R8 3 1       ; R8(R9,R10)
181 [-]: GETGLOBAL R8 K0        ; R8 := _T
182 [-]: SETTABLE  R8 K20 R1    ; R8["MenuSuitAvatar"] := R1
183 [-]: GETGLOBAL R8 K9        ; R8 := 0x7b998233
184 [-]: MOVE      R9 R1        ; R9 := R1
185 [-]: CALL      R8 2 2       ; R8 := R8(R9)
186 [-]: TEST      R8 1         ; if R8 then PC := 192
187 [-]: JMP       192          ; PC := 192
188 [-]: SELF      R8 R1 K23    ; R9 := R1; R8 := R1[0x768274d6]
189 [-]: LOADBOOL  R10 1 0      ; R10 := true
190 [-]: LOADBOOL  R11 1 0      ; R11 := true
191 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
192 [-]: GETGLOBAL R8 K0        ; R8 := _T
193 [-]: GETTABLE  R8 R8 K45    ; R8 := R8["LoadoutSaveRequired"]
194 [-]: TEST      R8 1         ; if R8 then PC := 204
195 [-]: JMP       204          ; PC := 204
196 [-]: GETGLOBAL R8 K0        ; R8 := _T
197 [-]: GETTABLE  R8 R8 K46    ; R8 := R8["SimulacrumFocusSchoolChanged"]
198 [-]: TEST      R8 1         ; if R8 then PC := 204
199 [-]: JMP       204          ; PC := 204
200 [-]: GETGLOBAL R8 K0        ; R8 := _T
201 [-]: GETTABLE  R8 R8 K47    ; R8 := R8["upgradeItemLot"]
202 [-]: EQ        0 R8 K49     ; if R8 ~= 4.000000 then PC := 283
203 [-]: JMP       283          ; PC := 283
204 [-]: GETGLOBAL R8 K0        ; R8 := _T
205 [-]: GETTABLE  R8 R8 K47    ; R8 := R8["upgradeItemLot"]
206 [-]: EQ        0 R8 K49     ; if R8 ~= 4.000000 then PC := 236
207 [-]: JMP       236          ; PC := 236
208 [-]: GETGLOBAL R8 K6        ; R8 := 0x89326c93
209 [-]: SELF      R8 R8 K50    ; R9 := R8; R8 := R8[0xfb669000]
210 [-]: GETGLOBAL R10 K51      ; R10 := 0xd0550e92
211 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
212 [-]: LOADK     R9 1         ; R9 := 1.000000
213 [-]: LEN       R10 R8       ; R10 := # R8
214 [-]: LOADK     R11 1        ; R11 := 1.000000
215 [-]: FORPREP   R9 220       ; R9 -= R11; PC := 220
216 [-]: GETGLOBAL R13 K6       ; R13 := 0x89326c93
217 [-]: SELF      R13 R13 K52  ; R14 := R13; R13 := R13[0x59c96e77]
218 [-]: GETTABLE  R15 R8 R12   ; R15 := R8[R12]
219 [-]: CALL      R13 3 1      ; R13(R14,R15)
220 [-]: FORLOOP   R9 216       ; R9 += R11; if R9 <= R10 then begin PC := 216; R12 := R9 end
221 [-]: GETGLOBAL R13 K6       ; R13 := 0x89326c93
222 [-]: SELF      R13 R13 K50  ; R14 := R13; R13 := R13[0xfb669000]
223 [-]: GETGLOBAL R15 K53      ; R15 := 0x7ed0a956
224 [-]: LOADK     R16 K54      ; R16 := "/Lotus/Weapons/Tenno/Speedball/AttractBallTrigger"
225 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
226 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
227 [-]: LOADK     R14 1        ; R14 := 1.000000
228 [-]: LEN       R15 R13      ; R15 := # R13
229 [-]: LOADK     R16 1        ; R16 := 1.000000
230 [-]: FORPREP   R14 235      ; R14 -= R16; PC := 235
231 [-]: GETGLOBAL R18 K6       ; R18 := 0x89326c93
232 [-]: SELF      R18 R18 K52  ; R19 := R18; R18 := R18[0x59c96e77]
233 [-]: GETTABLE  R20 R13 R17  ; R20 := R13[R17]
234 [-]: CALL      R18 3 1      ; R18(R19,R20)
235 [-]: FORLOOP   R14 231      ; R14 += R16; if R14 <= R15 then begin PC := 231; R17 := R14 end
236 [-]: GETGLOBAL R18 K9       ; R18 := 0x7b998233
237 [-]: MOVE      R19 R3       ; R19 := R3
238 [-]: CALL      R18 2 2      ; R18 := R18(R19)
239 [-]: TEST      R18 1        ; if R18 then PC := 273
240 [-]: JMP       273          ; PC := 273
241 [-]: GETGLOBAL R18 K21      ; R18 := 0xbe190284
242 [-]: SELF      R18 R18 K28  ; R19 := R18; R18 := R18[0xf2deaf69]
243 [-]: GETGLOBAL R20 K55      ; R20 := gLotusSandBoxGameRulesType
244 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
245 [-]: TEST      R18 0        ; if not R18 then PC := 273
246 [-]: JMP       273          ; PC := 273
247 [-]: GETGLOBAL R18 K0       ; R18 := _T
248 [-]: GETTABLE  R18 R18 K56  ; R18 := R18["InSimulacrum"]
249 [-]: TEST      R18 0        ; if not R18 then PC := 273
250 [-]: JMP       273          ; PC := 273
251 [-]: SELF      R18 R3 K57   ; R19 := R3; R18 := R3[0xbe524b27]
252 [-]: CALL      R18 2 2      ; R18 := R18(R19)
253 [-]: GETGLOBAL R19 K9       ; R19 := 0x7b998233
254 [-]: MOVE      R20 R18      ; R20 := R18
255 [-]: CALL      R19 2 2      ; R19 := R19(R20)
256 [-]: TEST      R19 1        ; if R19 then PC := 273
257 [-]: JMP       273          ; PC := 273
258 [-]: SELF      R19 R18 K58  ; R20 := R18; R19 := R18[0x80563238]
259 [-]: CALL      R19 2 2      ; R19 := R19(R20)
260 [-]: GETGLOBAL R20 K9       ; R20 := 0x7b998233
261 [-]: MOVE      R21 R19      ; R21 := R19
262 [-]: CALL      R20 2 2      ; R20 := R20(R21)
263 [-]: TEST      R20 1        ; if R20 then PC := 273
264 [-]: JMP       273          ; PC := 273
265 [-]: GETGLOBAL R20 K21      ; R20 := 0xbe190284
266 [-]: SELF      R20 R20 K59  ; R21 := R20; R20 := R20[0x20d53ac3]
267 [-]: MOVE      R22 R3       ; R22 := R3
268 [-]: SELF      R23 R19 K60  ; R24 := R19; R23 := R19[0x62c81b76]
269 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
270 [-]: CALL      R20 0 1      ; R20(R21,...)
271 [-]: GETGLOBAL R20 K0       ; R20 := _T
272 [-]: SETTABLE  R20 K45 K2   ; R20["LoadoutSaveRequired"] := nil
273 [-]: GETGLOBAL R20 K9       ; R20 := 0x7b998233
274 [-]: MOVE      R21 R1       ; R21 := R1
275 [-]: CALL      R20 2 2      ; R20 := R20(R21)
276 [-]: TEST      R20 1        ; if R20 then PC := 283
277 [-]: JMP       283          ; PC := 283
278 [-]: SELF      R20 R1 K61   ; R21 := R1; R20 := R1[0x1ac1655c]
279 [-]: CALL      R20 2 2      ; R20 := R20(R21)
280 [-]: SELF      R20 R20 K62  ; R21 := R20; R20 := R20[0xecd0f9d3]
281 [-]: LOADBOOL  R22 0 0      ; R22 := false
282 [-]: CALL      R20 3 1      ; R20(R21,R22)
283 [-]: GETUPVAL  R20 U1       ; R20 := U1
284 [-]: GETUPVAL  R21 U2       ; R21 := U2
285 [-]: GETTABLE  R21 R21 K63  ; R21 := R21["UI_MODE_IN_SPACE_SHIP"]
286 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 290
287 [-]: JMP       290          ; PC := 290
288 [-]: GETUPVAL  R20 U3       ; R20 := U3
289 [-]: CALL      R20 1 1      ; R20()
290 [-]: GETGLOBAL R20 K9       ; R20 := 0x7b998233
291 [-]: MOVE      R21 R2       ; R21 := R2
292 [-]: CALL      R20 2 2      ; R20 := R20(R21)
293 [-]: TEST      R20 1        ; if R20 then PC := 304
294 [-]: JMP       304          ; PC := 304
295 [-]: SELF      R20 R2 K28   ; R21 := R2; R20 := R2[0xf2deaf69]
296 [-]: GETGLOBAL R22 K64      ; R22 := gPetAvatarType
297 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
298 [-]: TEST      R20 0        ; if not R20 then PC := 304
299 [-]: JMP       304          ; PC := 304
300 [-]: SELF      R20 R2 K23   ; R21 := R2; R20 := R2[0x768274d6]
301 [-]: LOADBOOL  R22 1 0      ; R22 := true
302 [-]: LOADBOOL  R23 1 0      ; R23 := true
303 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
304 [-]: GETGLOBAL R20 K9       ; R20 := 0x7b998233
305 [-]: MOVE      R21 R1       ; R21 := R1
306 [-]: CALL      R20 2 2      ; R20 := R20(R21)
307 [-]: TEST      R20 1        ; if R20 then PC := 358
308 [-]: JMP       358          ; PC := 358
309 [-]: LOADBOOL  R20 1 0      ; R20 := true
310 [-]: GETGLOBAL R21 K9       ; R21 := 0x7b998233
311 [-]: GETGLOBAL R22 K65      ; R22 := 0x25d99d89
312 [-]: CALL      R21 2 2      ; R21 := R21(R22)
313 [-]: TEST      R21 1        ; if R21 then PC := 329
314 [-]: JMP       329          ; PC := 329
315 [-]: GETGLOBAL R21 K65      ; R21 := 0x25d99d89
316 [-]: SELF      R21 R21 K60  ; R22 := R21; R21 := R21[0x62c81b76]
317 [-]: CALL      R21 2 2      ; R21 := R21(R22)
318 [-]: SELF      R22 R21 K66  ; R23 := R21; R22 := R21[0x8af486d8]
319 [-]: CALL      R22 2 2      ; R22 := R22(R23)
320 [-]: TEST      R22 0        ; if not R22 then PC := 329
321 [-]: JMP       329          ; PC := 329
322 [-]: GETUPVAL  R22 U1       ; R22 := U1
323 [-]: GETUPVAL  R23 U2       ; R23 := U2
324 [-]: GETTABLE  R23 R23 K63  ; R23 := R23["UI_MODE_IN_SPACE_SHIP"]
325 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 328
326 [-]: JMP       328          ; PC := 328
327 [-]: LOADBOOL  R20 0 1      ; R20 := false; PC := 328
328 [-]: LOADBOOL  R20 1 0      ; R20 := true
329 [-]: SELF      R22 R1 K30   ; R23 := R1; R22 := R1[0xde321e6f]
330 [-]: CALL      R22 2 2      ; R22 := R22(R23)
331 [-]: SELF      R22 R22 K67  ; R23 := R22; R22 := R22[0x2676deee]
332 [-]: CALL      R22 2 2      ; R22 := R22(R23)
333 [-]: MOVE      R2 R22       ; R2 := R22
334 [-]: GETGLOBAL R22 K0       ; R22 := _T
335 [-]: SETTABLE  R22 K24 R2   ; R22["MenuSentinel"] := R2
336 [-]: GETGLOBAL R22 K9       ; R22 := 0x7b998233
337 [-]: MOVE      R23 R2       ; R23 := R2
338 [-]: CALL      R22 2 2      ; R22 := R22(R23)
339 [-]: TEST      R22 1        ; if R22 then PC := 355
340 [-]: JMP       355          ; PC := 355
341 [-]: TEST      R20 0        ; if not R20 then PC := 355
342 [-]: JMP       355          ; PC := 355
343 [-]: SELF      R22 R2 K23   ; R23 := R2; R22 := R2[0x768274d6]
344 [-]: LOADBOOL  R24 1 0      ; R24 := true
345 [-]: LOADBOOL  R25 1 0      ; R25 := true
346 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
347 [-]: SELF      R22 R2 K61   ; R23 := R2; R22 := R2[0x1ac1655c]
348 [-]: CALL      R22 2 2      ; R22 := R22(R23)
349 [-]: SELF      R22 R22 K68  ; R23 := R22; R22 := R22[0x35577788]
350 [-]: LOADBOOL  R24 1 0      ; R24 := true
351 [-]: CALL      R22 3 1      ; R22(R23,R24)
352 [-]: SELF      R22 R2 K25   ; R23 := R2; R22 := R2[0x044b7be8]
353 [-]: LOADBOOL  R24 0 0      ; R24 := false
354 [-]: CALL      R22 3 1      ; R22(R23,R24)
355 [-]: SELF      R22 R1 K25   ; R23 := R1; R22 := R1[0x044b7be8]
356 [-]: LOADBOOL  R24 0 0      ; R24 := false
357 [-]: CALL      R22 3 1      ; R22(R23,R24)
358 [-]: GETGLOBAL R22 K9       ; R22 := 0x7b998233
359 [-]: GETGLOBAL R23 K0       ; R23 := _T
360 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["ArsenalAvatar"]
361 [-]: CALL      R22 2 2      ; R22 := R22(R23)
362 [-]: TEST      R22 1        ; if R22 then PC := 369
363 [-]: JMP       369          ; PC := 369
364 [-]: GETGLOBAL R22 K6       ; R22 := 0x89326c93
365 [-]: SELF      R22 R22 K52  ; R23 := R22; R22 := R22[0x59c96e77]
366 [-]: GETGLOBAL R24 K0       ; R24 := _T
367 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["ArsenalAvatar"]
368 [-]: CALL      R22 3 1      ; R22(R23,R24)
369 [-]: GETGLOBAL R22 K9       ; R22 := 0x7b998233
370 [-]: GETGLOBAL R23 K69      ; R23 := mConsumablesInstance
371 [-]: CALL      R22 2 2      ; R22 := R22(R23)
372 [-]: TEST      R22 1        ; if R22 then PC := 377
373 [-]: JMP       377          ; PC := 377
374 [-]: GETGLOBAL R22 K69      ; R22 := mConsumablesInstance
375 [-]: SELF      R22 R22 K70  ; R23 := R22; R22 := R22[0x32302b4a]
376 [-]: CALL      R22 2 1      ; R22(R23)
377 [-]: GETGLOBAL R22 K9       ; R22 := 0x7b998233
378 [-]: GETGLOBAL R23 K71      ; R23 := mTennoWayInstance
379 [-]: CALL      R22 2 2      ; R22 := R22(R23)
380 [-]: TEST      R22 1        ; if R22 then PC := 385
381 [-]: JMP       385          ; PC := 385
382 [-]: GETGLOBAL R22 K71      ; R22 := mTennoWayInstance
383 [-]: SELF      R22 R22 K70  ; R23 := R22; R22 := R22[0x32302b4a]
384 [-]: CALL      R22 2 1      ; R22(R23)
385 [-]: GETUPVAL  R22 U4       ; R22 := U4
386 [-]: LOADBOOL  R23 0 0      ; R23 := false
387 [-]: CALL      R22 2 1      ; R22(R23)
388 [-]: GETGLOBAL R22 K9       ; R22 := 0x7b998233
389 [-]: GETGLOBAL R23 K21      ; R23 := 0xbe190284
390 [-]: CALL      R22 2 2      ; R22 := R22(R23)
391 [-]: TEST      R22 1        ; if R22 then PC := 398
392 [-]: JMP       398          ; PC := 398
393 [-]: GETGLOBAL R22 K21      ; R22 := 0xbe190284
394 [-]: SELF      R22 R22 K72  ; R23 := R22; R22 := R22[0xc02f2cb8]
395 [-]: LOADBOOL  R24 0 0      ; R24 := false
396 [-]: LOADBOOL  R25 1 0      ; R25 := true
397 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
398 [-]: GETUPVAL  R22 U5       ; R22 := U5
399 [-]: CALL      R22 1 2      ; R22 := R22()
400 [-]: TEST      R22 1        ; if R22 then PC := 408
401 [-]: JMP       408          ; PC := 408
402 [-]: GETGLOBAL R22 K0       ; R22 := _T
403 [-]: GETTABLE  R22 R22 K73  ; R22 := R22["previousConsoleTag"]
404 [-]: EQ        0 R22 K74    ; if R22 ~= "Arsenal" then PC := 408
405 [-]: JMP       408          ; PC := 408
406 [-]: GETGLOBAL R22 K0       ; R22 := _T
407 [-]: SETTABLE  R22 K73 K2   ; R22["previousConsoleTag"] := nil
408 [-]: GETGLOBAL R22 K0       ; R22 := _T
409 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["LoadoutSaveRequired"]
410 [-]: TEST      R22 0        ; if not R22 then PC := 419
411 [-]: JMP       419          ; PC := 419
412 [-]: GETGLOBAL R22 K0       ; R22 := _T
413 [-]: GETTABLE  R22 R22 K56  ; R22 := R22["InSimulacrum"]
414 [-]: TEST      R22 1        ; if R22 then PC := 419
415 [-]: JMP       419          ; PC := 419
416 [-]: GETGLOBAL R22 K75      ; R22 := 0xe7f2b02f
417 [-]: SELF      R22 R22 K76  ; R23 := R22; R22 := R22[0xcf1bf52a]
418 [-]: CALL      R22 2 1      ; R22(R23)
419 [-]: LOADNIL   R22 R22      ; R22 := nil
420 [-]: GETGLOBAL R23 K9       ; R23 := 0x7b998233
421 [-]: GETGLOBAL R24 K77      ; R24 := mArsenalConsole
422 [-]: CALL      R23 2 2      ; R23 := R23(R24)
423 [-]: TEST      R23 1        ; if R23 then PC := 429
424 [-]: JMP       429          ; PC := 429
425 [-]: GETGLOBAL R23 K77      ; R23 := mArsenalConsole
426 [-]: SELF      R23 R23 K78  ; R24 := R23; R23 := R23[0xd1586535]
427 [-]: CALL      R23 2 2      ; R23 := R23(R24)
428 [-]: MOVE      R22 R23      ; R22 := R23
429 [-]: GETUPVAL  R23 U6       ; R23 := U6
430 [-]: GETTABLE  R23 R23 K79  ; R23 := R23[0x2a1108a9]
431 [-]: LOADK     R24 K80      ; R24 := "OnExitedArsenal"
432 [-]: MOVE      R25 R22      ; R25 := R22
433 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
434 [-]: GETGLOBAL R24 K9       ; R24 := 0x7b998233
435 [-]: MOVE      R25 R23      ; R25 := R23
436 [-]: CALL      R24 2 2      ; R24 := R24(R25)
437 [-]: TEST      R24 1        ; if R24 then PC := 442
438 [-]: JMP       442          ; PC := 442
439 [-]: SELF      R24 R23 K81  ; R25 := R23; R24 := R23[0x8eb2112d]
440 [-]: LOADK     R26 K82      ; R26 := "Execute"
441 [-]: CALL      R24 3 1      ; R24(R25,R26)
442 [-]: GETGLOBAL R24 K83      ; R24 := 0x9ba7909f
443 [-]: SELF      R24 R24 K84  ; R25 := R24; R24 := R24[0xbcfb64ab]
444 [-]: GETGLOBAL R26 K85      ; R26 := 0x10179b0e
445 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
446 [-]: GETGLOBAL R25 K9       ; R25 := 0x7b998233
447 [-]: MOVE      R26 R24      ; R26 := R24
448 [-]: CALL      R25 2 2      ; R25 := R25(R26)
449 [-]: TEST      R25 1        ; if R25 then PC := 454
450 [-]: JMP       454          ; PC := 454
451 [-]: SELF      R25 R24 K86  ; R26 := R24; R25 := R24[0x41d3c627]
452 [-]: LOADBOOL  R27 0 0      ; R27 := false
453 [-]: CALL      R25 3 1      ; R25(R26,R27)
454 [-]: GETGLOBAL R25 K0       ; R25 := _T
455 [-]: SETTABLE  R25 K87 K2   ; R25["gToolTip"] := nil
456 [-]: GETGLOBAL R25 K0       ; R25 := _T
457 [-]: SETTABLE  R25 K88 K2   ; R25["SlideAbilityScreen"] := nil
458 [-]: GETGLOBAL R25 K0       ; R25 := _T
459 [-]: GETTABLE  R25 R25 K89  ; R25 := R25["loadoutInProgress"]
460 [-]: EQ        0 R25 K2     ; if R25 ~= nil then PC := 484
461 [-]: JMP       484          ; PC := 484
462 [-]: GETGLOBAL R25 K0       ; R25 := _T
463 [-]: SETTABLE  R25 K90 K2   ; R25["ArsenalPvPOnlyReturnConsole"] := nil
464 [-]: GETGLOBAL R25 K0       ; R25 := _T
465 [-]: GETTABLE  R25 R25 K91  ; R25 := R25["Arsenal_ReturnToNemesis"]
466 [-]: TEST      R25 0        ; if not R25 then PC := 484
467 [-]: JMP       484          ; PC := 484
468 [-]: GETGLOBAL R25 K9       ; R25 := 0x7b998233
469 [-]: GETGLOBAL R26 K92      ; R26 := 0x96540e3a
470 [-]: CALL      R25 2 2      ; R25 := R25(R26)
471 [-]: TEST      R25 1        ; if R25 then PC := 482
472 [-]: JMP       482          ; PC := 482
473 [-]: GETGLOBAL R25 K9       ; R25 := 0x7b998233
474 [-]: GETGLOBAL R26 K83      ; R26 := 0x9ba7909f
475 [-]: CALL      R25 2 2      ; R25 := R25(R26)
476 [-]: TEST      R25 1        ; if R25 then PC := 482
477 [-]: JMP       482          ; PC := 482
478 [-]: GETGLOBAL R25 K83      ; R25 := 0x9ba7909f
479 [-]: SELF      R25 R25 K93  ; R26 := R25; R25 := R25[0xcfba257f]
480 [-]: GETGLOBAL R27 K92      ; R27 := 0x96540e3a
481 [-]: CALL      R25 3 1      ; R25(R26,R27)
482 [-]: GETGLOBAL R25 K0       ; R25 := _T
483 [-]: SETTABLE  R25 K91 K2   ; R25["Arsenal_ReturnToNemesis"] := nil
484 [-]: GETGLOBAL R25 K0       ; R25 := _T
485 [-]: GETTABLE  R25 R25 K94  ; R25 := R25["ArsenalState"]
486 [-]: EQ        1 R25 K95    ; if R25 == 3.000000 then PC := 542
487 [-]: JMP       542          ; PC := 542
488 [-]: GETGLOBAL R25 K0       ; R25 := _T
489 [-]: GETTABLE  R25 R25 K96  ; R25 := R25["suitTable"]
490 [-]: TEST      R25 0        ; if not R25 then PC := 542
491 [-]: JMP       542          ; PC := 542
492 [-]: GETGLOBAL R25 K9       ; R25 := 0x7b998233
493 [-]: GETGLOBAL R26 K21      ; R26 := 0xbe190284
494 [-]: CALL      R25 2 2      ; R25 := R25(R26)
495 [-]: TEST      R25 1        ; if R25 then PC := 542
496 [-]: JMP       542          ; PC := 542
497 [-]: GETGLOBAL R25 K21      ; R25 := 0xbe190284
498 [-]: SELF      R25 R25 K28  ; R26 := R25; R25 := R25[0xf2deaf69]
499 [-]: GETGLOBAL R27 K29      ; R27 := gLotusPhotoBoothGameRulesType
500 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
501 [-]: TEST      R25 1        ; if R25 then PC := 542
502 [-]: JMP       542          ; PC := 542
503 [-]: GETGLOBAL R25 K0       ; R25 := _T
504 [-]: GETTABLE  R25 R25 K97  ; R25 := R25["mSpecialSuitMode"]
505 [-]: GETGLOBAL R26 K0       ; R26 := _T
506 [-]: SETTABLE  R26 K97 K2   ; R26["mSpecialSuitMode"] := nil
507 [-]: GETGLOBAL R26 K0       ; R26 := _T
508 [-]: GETTABLE  R26 R26 K96  ; R26 := R26["suitTable"]
509 [-]: GETGLOBAL R27 K0       ; R27 := _T
510 [-]: GETTABLE  R27 R27 K99  ; R27 := R27["DEFAULT_SUIT_ROTATION"]
511 [-]: SETTABLE  R26 K98 R27  ; R26["desiredRot"] := R27
512 [-]: GETGLOBAL R26 K0       ; R26 := _T
513 [-]: GETTABLE  R26 R26 K96  ; R26 := R26["suitTable"]
514 [-]: GETGLOBAL R27 K0       ; R27 := _T
515 [-]: GETTABLE  R27 R27 K96  ; R27 := R27["suitTable"]
516 [-]: GETTABLE  R27 R27 K98  ; R27 := R27["desiredRot"]
517 [-]: SETTABLE  R26 K100 R27 ; R26["lerpRot"] := R27
518 [-]: GETGLOBAL R26 K0       ; R26 := _T
519 [-]: GETTABLE  R26 R26 K96  ; R26 := R26["suitTable"]
520 [-]: GETGLOBAL R27 K102     ; R27 := 0x00046924
521 [-]: CALL      R27 1 2      ; R27 := R27()
522 [-]: SETTABLE  R26 K101 R27 ; R26["lerpHead"] := R27
523 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
524 [-]: GETGLOBAL R27 K6       ; R27 := 0x89326c93
525 [-]: CALL      R26 2 2      ; R26 := R26(R27)
526 [-]: TEST      R26 1        ; if R26 then PC := 538
527 [-]: JMP       538          ; PC := 538
528 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
529 [-]: MOVE      R27 R1       ; R27 := R1
530 [-]: CALL      R26 2 2      ; R26 := R26(R27)
531 [-]: TEST      R26 1        ; if R26 then PC := 538
532 [-]: JMP       538          ; PC := 538
533 [-]: GETUPVAL  R26 U7       ; R26 := U7
534 [-]: GETTABLE  R26 R26 K103 ; R26 := R26[0xd4c67576]
535 [-]: LOADNIL   R27 R28      ; R27 := R28 := nil
536 [-]: MOVE      R29 R1       ; R29 := R1
537 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
538 [-]: GETGLOBAL R26 K0       ; R26 := _T
539 [-]: SETTABLE  R26 K96 K2   ; R26["suitTable"] := nil
540 [-]: GETGLOBAL R26 K0       ; R26 := _T
541 [-]: SETTABLE  R26 K97 R25  ; R26["mSpecialSuitMode"] := R25
542 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
543 [-]: GETGLOBAL R27 K104     ; R27 := mChildMovie
544 [-]: CALL      R26 2 2      ; R26 := R26(R27)
545 [-]: TEST      R26 1        ; if R26 then PC := 550
546 [-]: JMP       550          ; PC := 550
547 [-]: GETGLOBAL R26 K104     ; R26 := mChildMovie
548 [-]: SELF      R26 R26 K70  ; R27 := R26; R26 := R26[0x32302b4a]
549 [-]: CALL      R26 2 1      ; R26(R27)
550 [-]: GETGLOBAL R26 K0       ; R26 := _T
551 [-]: GETUPVAL  R27 U6       ; R27 := U6
552 [-]: GETTABLE  R27 R27 K106 ; R27 := R27[0x06d055f9]
553 [-]: GETGLOBAL R28 K0       ; R28 := _T
554 [-]: GETTABLE  R28 R28 K16  ; R28 := R28[0x1c5b5b33]
555 [-]: LOADK     R29 K17      ; R29 := "LoadOut"
556 [-]: CALL      R28 2 2      ; R28 := R28(R29)
557 [-]: LOADBOOL  R29 1 0      ; R29 := true
558 [-]: LOADNIL   R30 R30      ; R30 := nil
559 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
560 [-]: SETTABLE  R26 K105 R27 ; R26["mLoadoutInPosition"] := R27
561 [-]: GETUPVAL  R26 U8       ; R26 := U8
562 [-]: TEST      R26 0        ; if not R26 then PC := 567
563 [-]: JMP       567          ; PC := 567
564 [-]: GETGLOBAL R26 K0       ; R26 := _T
565 [-]: GETTABLE  R26 R26 K107 ; R26 := R26[0x80172c74]
566 [-]: CALL      R26 1 1      ; R26()
567 [-]: GETGLOBAL R26 K0       ; R26 := _T
568 [-]: SETTABLE  R26 K108 K109; R26["maximumSyndicateScarfIntensity"] := false
569 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
570 [-]: MOVE      R27 R1       ; R27 := R1
571 [-]: CALL      R26 2 2      ; R26 := R26(R27)
572 [-]: TEST      R26 1        ; if R26 then PC := 647
573 [-]: JMP       647          ; PC := 647
574 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
575 [-]: GETGLOBAL R27 K6       ; R27 := 0x89326c93
576 [-]: CALL      R26 2 2      ; R26 := R26(R27)
577 [-]: TEST      R26 1        ; if R26 then PC := 647
578 [-]: JMP       647          ; PC := 647
579 [-]: GETGLOBAL R26 K6       ; R26 := 0x89326c93
580 [-]: SELF      R26 R26 K110 ; R27 := R26; R26 := R26[0x18d05d30]
581 [-]: CALL      R26 2 2      ; R26 := R26(R27)
582 [-]: TEST      R26 0        ; if not R26 then PC := 647
583 [-]: JMP       647          ; PC := 647
584 [-]: GETGLOBAL R26 K6       ; R26 := 0x89326c93
585 [-]: SELF      R26 R26 K111 ; R27 := R26; R26 := R26[0xd8140b94]
586 [-]: CALL      R26 2 2      ; R26 := R26(R27)
587 [-]: TEST      R26 0        ; if not R26 then PC := 647
588 [-]: JMP       647          ; PC := 647
589 [-]: GETGLOBAL R26 K0       ; R26 := _T
590 [-]: GETTABLE  R26 R26 K56  ; R26 := R26["InSimulacrum"]
591 [-]: TEST      R26 0        ; if not R26 then PC := 604
592 [-]: JMP       604          ; PC := 604
593 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
594 [-]: GETGLOBAL R27 K21      ; R27 := 0xbe190284
595 [-]: CALL      R26 2 2      ; R26 := R26(R27)
596 [-]: TEST      R26 1        ; if R26 then PC := 647
597 [-]: JMP       647          ; PC := 647
598 [-]: GETGLOBAL R26 K21      ; R26 := 0xbe190284
599 [-]: SELF      R26 R26 K28  ; R27 := R26; R26 := R26[0xf2deaf69]
600 [-]: GETGLOBAL R28 K55      ; R28 := gLotusSandBoxGameRulesType
601 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
602 [-]: TEST      R26 1        ; if R26 then PC := 647
603 [-]: JMP       647          ; PC := 647
604 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
605 [-]: GETGLOBAL R27 K65      ; R27 := 0x25d99d89
606 [-]: CALL      R26 2 2      ; R26 := R26(R27)
607 [-]: TEST      R26 1        ; if R26 then PC := 627
608 [-]: JMP       627          ; PC := 627
609 [-]: GETGLOBAL R26 K0       ; R26 := _T
610 [-]: GETTABLE  R26 R26 K89  ; R26 := R26["loadoutInProgress"]
611 [-]: EQ        0 R26 K2     ; if R26 ~= nil then PC := 627
612 [-]: JMP       627          ; PC := 627
613 [-]: GETUPVAL  R26 U9       ; R26 := U9
614 [-]: LOADBOOL  R27 0 0      ; R27 := false
615 [-]: LOADBOOL  R28 1 0      ; R28 := true
616 [-]: LOADBOOL  R29 1 0      ; R29 := true
617 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
618 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
619 [-]: GETUPVAL  R27 U10      ; R27 := U10
620 [-]: CALL      R26 2 2      ; R26 := R26(R27)
621 [-]: TEST      R26 0        ; if not R26 then PC := 627
622 [-]: JMP       627          ; PC := 627
623 [-]: SELF      R26 R1 K30   ; R27 := R1; R26 := R1[0xde321e6f]
624 [-]: CALL      R26 2 2      ; R26 := R26(R27)
625 [-]: SELF      R26 R26 K112 ; R27 := R26; R26 := R26[0x0c277ae1]
626 [-]: CALL      R26 2 1      ; R26(R27)
627 [-]: GETGLOBAL R26 K0       ; R26 := _T
628 [-]: GETTABLE  R26 R26 K56  ; R26 := R26["InSimulacrum"]
629 [-]: TEST      R26 1        ; if R26 then PC := 644
630 [-]: JMP       644          ; PC := 644
631 [-]: GETGLOBAL R26 K0       ; R26 := _T
632 [-]: GETTABLE  R26 R26 K89  ; R26 := R26["loadoutInProgress"]
633 [-]: TEST      R26 0        ; if not R26 then PC := 639
634 [-]: JMP       639          ; PC := 639
635 [-]: GETGLOBAL R26 K0       ; R26 := _T
636 [-]: GETTABLE  R26 R26 K47  ; R26 := R26["upgradeItemLot"]
637 [-]: EQ        1 R26 K113   ; if R26 == 2.000000 then PC := 644
638 [-]: JMP       644          ; PC := 644
639 [-]: SELF      R26 R1 K30   ; R27 := R1; R26 := R1[0xde321e6f]
640 [-]: CALL      R26 2 2      ; R26 := R26(R27)
641 [-]: SELF      R26 R26 K114 ; R27 := R26; R26 := R26[0xc7154a44]
642 [-]: LOADBOOL  R28 0 0      ; R28 := false
643 [-]: CALL      R26 3 1      ; R26(R27,R28)
644 [-]: SELF      R26 R1 K115  ; R27 := R1; R26 := R1[0xf4a0a8d5]
645 [-]: LOADBOOL  R28 1 0      ; R28 := true
646 [-]: CALL      R26 3 1      ; R26(R27,R28)
647 [-]: GETGLOBAL R26 K0       ; R26 := _T
648 [-]: GETTABLE  R26 R26 K116 ; R26 := R26["ForegroundMovie"]
649 [-]: TEST      R26 0        ; if not R26 then PC := 653
650 [-]: JMP       653          ; PC := 653
651 [-]: GETGLOBAL R26 K0       ; R26 := _T
652 [-]: SETTABLE  R26 K117 K109; R26["ForceHideLobbyStatusMessage"] := false
653 [-]: GETUPVAL  R26 U2       ; R26 := U2
654 [-]: GETTABLE  R26 R26 K118 ; R26 := R26[0xcf1fcba4]
655 [-]: CALL      R26 1 2      ; R26 := R26()
656 [-]: TEST      R26 0        ; if not R26 then PC := 660
657 [-]: JMP       660          ; PC := 660
658 [-]: GETGLOBAL R26 K0       ; R26 := _T
659 [-]: SETTABLE  R26 K119 K109; R26["HubArsenalOpen"] := false
660 [-]: GETGLOBAL R26 K0       ; R26 := _T
661 [-]: SETTABLE  R26 K120 K109; R26["ArsenalOpen"] := false
662 [-]: GETUPVAL  R26 U2       ; R26 := U2
663 [-]: GETTABLE  R26 R26 K121 ; R26 := R26[0x9e3d3434]
664 [-]: LOADBOOL  R27 0 0      ; R27 := false
665 [-]: CALL      R26 2 1      ; R26(R27)
666 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
667 [-]: GETGLOBAL R27 K21      ; R27 := 0xbe190284
668 [-]: CALL      R26 2 2      ; R26 := R26(R27)
669 [-]: TEST      R26 1        ; if R26 then PC := 675
670 [-]: JMP       675          ; PC := 675
671 [-]: GETGLOBAL R26 K21      ; R26 := 0xbe190284
672 [-]: SELF      R26 R26 K122 ; R27 := R26; R26 := R26[0x919b1925]
673 [-]: LOADBOOL  R28 0 0      ; R28 := false
674 [-]: CALL      R26 3 1      ; R26(R27,R28)
675 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
676 [-]: GETGLOBAL R27 K123     ; R27 := mItemsGrid
677 [-]: CALL      R26 2 2      ; R26 := R26(R27)
678 [-]: TEST      R26 1        ; if R26 then PC := 701
679 [-]: JMP       701          ; PC := 701
680 [-]: GETGLOBAL R26 K9       ; R26 := 0x7b998233
681 [-]: GETGLOBAL R27 K65      ; R27 := 0x25d99d89
682 [-]: CALL      R26 2 2      ; R26 := R26(R27)
683 [-]: TEST      R26 1        ; if R26 then PC := 701
684 [-]: JMP       701          ; PC := 701
685 [-]: GETGLOBAL R26 K123     ; R26 := mItemsGrid
686 [-]: SELF      R26 R26 K124 ; R27 := R26; R26 := R26[0xc32ccf2e]
687 [-]: CALL      R26 2 2      ; R26 := R26(R27)
688 [-]: GETGLOBAL R27 K9       ; R27 := 0x7b998233
689 [-]: MOVE      R28 R26      ; R28 := R26
690 [-]: CALL      R27 2 2      ; R27 := R27(R28)
691 [-]: TEST      R27 1        ; if R27 then PC := 701
692 [-]: JMP       701          ; PC := 701
693 [-]: GETGLOBAL R27 K125     ; R27 := 0xae91e43b
694 [-]: SELF      R27 R27 K126 ; R28 := R27; R27 := R27[0x492f9da2]
695 [-]: CALL      R27 2 2      ; R27 := R27(R28)
696 [-]: GETGLOBAL R28 K65      ; R28 := 0x25d99d89
697 [-]: SELF      R28 R28 K127 ; R29 := R28; R28 := R28[0x7855ea52]
698 [-]: MOVE      R30 R27      ; R30 := R27
699 [-]: MOVE      R31 R26      ; R31 := R26
700 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
701 [-]: GETGLOBAL R28 K9       ; R28 := 0x7b998233
702 [-]: MOVE      R29 R1       ; R29 := R1
703 [-]: CALL      R28 2 2      ; R28 := R28(R29)
704 [-]: TEST      R28 1        ; if R28 then PC := 723
705 [-]: JMP       723          ; PC := 723
706 [-]: GETGLOBAL R28 K9       ; R28 := 0x7b998233
707 [-]: GETGLOBAL R29 K6       ; R29 := 0x89326c93
708 [-]: CALL      R28 2 2      ; R28 := R28(R29)
709 [-]: TEST      R28 1        ; if R28 then PC := 723
710 [-]: JMP       723          ; PC := 723
711 [-]: SELF      R28 R1 K128  ; R29 := R1; R28 := R1[0xc1595bd5]
712 [-]: GETGLOBAL R30 K51      ; R30 := 0xd0550e92
713 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
714 [-]: LOADK     R29 1        ; R29 := 1.000000
715 [-]: LEN       R30 R28      ; R30 := # R28
716 [-]: LOADK     R31 1        ; R31 := 1.000000
717 [-]: FORPREP   R29 722      ; R29 -= R31; PC := 722
718 [-]: GETGLOBAL R33 K6       ; R33 := 0x89326c93
719 [-]: SELF      R33 R33 K52  ; R34 := R33; R33 := R33[0x59c96e77]
720 [-]: GETTABLE  R35 R28 R32  ; R35 := R28[R32]
721 [-]: CALL      R33 3 1      ; R33(R34,R35)
722 [-]: FORLOOP   R29 718      ; R29 += R31; if R29 <= R30 then begin PC := 718; R32 := R29 end
723 [-]: GETGLOBAL R33 K9       ; R33 := 0x7b998233
724 [-]: GETGLOBAL R34 K0       ; R34 := _T
725 [-]: GETTABLE  R34 R34 K129 ; R34 := R34["BackgroundMovie"]
726 [-]: CALL      R33 2 2      ; R33 := R33(R34)
727 [-]: TEST      R33 1        ; if R33 then PC := 735
728 [-]: JMP       735          ; PC := 735
729 [-]: GETGLOBAL R33 K0       ; R33 := _T
730 [-]: GETTABLE  R33 R33 K129 ; R33 := R33["BackgroundMovie"]
731 [-]: SELF      R33 R33 K12  ; R34 := R33; R33 := R33[0xe4162eed]
732 [-]: LOADK     R35 K130     ; R35 := "ShowBlockingMessage"
733 [-]: LOADK     R36 K131     ; R36 := "0"
734 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
735 [-]: GETGLOBAL R33 K0       ; R33 := _T
736 [-]: GETTABLE  R33 R33 K89  ; R33 := R33["loadoutInProgress"]
737 [-]: EQ        0 R33 K2     ; if R33 ~= nil then PC := 815
738 [-]: JMP       815          ; PC := 815
739 [-]: GETGLOBAL R33 K9       ; R33 := 0x7b998233
740 [-]: GETGLOBAL R34 K6       ; R34 := 0x89326c93
741 [-]: CALL      R33 2 2      ; R33 := R33(R34)
742 [-]: TEST      R33 1        ; if R33 then PC := 815
743 [-]: JMP       815          ; PC := 815
744 [-]: GETGLOBAL R33 K0       ; R33 := _T
745 [-]: SETTABLE  R33 K132 K2  ; R33["SelectedLoadOutPart"] := nil
746 [-]: GETGLOBAL R33 K6       ; R33 := 0x89326c93
747 [-]: SELF      R33 R33 K26  ; R34 := R33; R33 := R33[0xfb64e76c]
748 [-]: CALL      R33 2 2      ; R33 := R33(R34)
749 [-]: GETGLOBAL R34 K9       ; R34 := 0x7b998233
750 [-]: MOVE      R35 R33      ; R35 := R33
751 [-]: CALL      R34 2 2      ; R34 := R34(R35)
752 [-]: TEST      R34 1        ; if R34 then PC := 815
753 [-]: JMP       815          ; PC := 815
754 [-]: SELF      R34 R33 K133 ; R35 := R33; R34 := R33[0x5578d98b]
755 [-]: CALL      R34 2 2      ; R34 := R34(R35)
756 [-]: GETGLOBAL R35 K9       ; R35 := 0x7b998233
757 [-]: MOVE      R36 R34      ; R36 := R34
758 [-]: CALL      R35 2 2      ; R35 := R35(R36)
759 [-]: TEST      R35 0        ; if not R35 then PC := 771
760 [-]: JMP       771          ; PC := 771
761 [-]: SELF      R35 R33 K44  ; R36 := R33; R35 := R33[0xbb610e5b]
762 [-]: CALL      R35 2 2      ; R35 := R35(R36)
763 [-]: SELF      R35 R35 K28  ; R36 := R35; R35 := R35[0xf2deaf69]
764 [-]: GETUPVAL  R37 U11      ; R37 := U11
765 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
766 [-]: TEST      R35 0        ; if not R35 then PC := 771
767 [-]: JMP       771          ; PC := 771
768 [-]: SELF      R35 R33 K44  ; R36 := R33; R35 := R33[0xbb610e5b]
769 [-]: CALL      R35 2 2      ; R35 := R35(R36)
770 [-]: MOVE      R34 R35      ; R34 := R35
771 [-]: GETGLOBAL R35 K9       ; R35 := 0x7b998233
772 [-]: MOVE      R36 R34      ; R36 := R34
773 [-]: CALL      R35 2 2      ; R35 := R35(R36)
774 [-]: TEST      R35 1        ; if R35 then PC := 815
775 [-]: JMP       815          ; PC := 815
776 [-]: SELF      R35 R33 K44  ; R36 := R33; R35 := R33[0xbb610e5b]
777 [-]: CALL      R35 2 2      ; R35 := R35(R36)
778 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 815
779 [-]: JMP       815          ; PC := 815
780 [-]: SELF      R35 R34 K134 ; R36 := R34; R35 := R34[0x01bab237]
781 [-]: CALL      R35 2 2      ; R35 := R35(R36)
782 [-]: TEST      R35 1        ; if R35 then PC := 787
783 [-]: JMP       787          ; PC := 787
784 [-]: SELF      R35 R34 K23  ; R36 := R34; R35 := R34[0x768274d6]
785 [-]: LOADBOOL  R37 1 0      ; R37 := true
786 [-]: CALL      R35 3 1      ; R35(R36,R37)
787 [-]: GETGLOBAL R35 K9       ; R35 := 0x7b998233
788 [-]: MOVE      R36 R1       ; R36 := R1
789 [-]: CALL      R35 2 2      ; R35 := R35(R36)
790 [-]: TEST      R35 1        ; if R35 then PC := 799
791 [-]: JMP       799          ; PC := 799
792 [-]: SELF      R35 R1 K135  ; R36 := R1; R35 := R1[0x5d985c7e]
793 [-]: GETGLOBAL R37 K136     ; R37 := 0x364c85e6
794 [-]: LOADBOOL  R38 0 0      ; R38 := false
795 [-]: LOADK     R39 2        ; R39 := 2.000000
796 [-]: LOADK     R40 3        ; R40 := 3.000000
797 [-]: LOADBOOL  R41 1 0      ; R41 := true
798 [-]: CALL      R35 7 1      ; R35(R36,R37,R38,R39,R40,R41)
799 [-]: SELF      R35 R34 K28  ; R36 := R34; R35 := R34[0xf2deaf69]
800 [-]: GETUPVAL  R37 U11      ; R37 := U11
801 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
802 [-]: TEST      R35 0        ; if not R35 then PC := 815
803 [-]: JMP       815          ; PC := 815
804 [-]: SELF      R35 R33 K27  ; R36 := R33; R35 := R33[0xa534c3ac]
805 [-]: CALL      R35 2 2      ; R35 := R35(R36)
806 [-]: GETGLOBAL R36 K9       ; R36 := 0x7b998233
807 [-]: MOVE      R37 R35      ; R37 := R35
808 [-]: CALL      R36 2 2      ; R36 := R36(R37)
809 [-]: TEST      R36 1        ; if R36 then PC := 815
810 [-]: JMP       815          ; PC := 815
811 [-]: SELF      R36 R35 K23  ; R37 := R35; R36 := R35[0x768274d6]
812 [-]: LOADBOOL  R38 0 0      ; R38 := false
813 [-]: LOADBOOL  R39 0 0      ; R39 := false
814 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
815 [-]: GETGLOBAL R36 K9       ; R36 := 0x7b998233
816 [-]: GETGLOBAL R37 K138     ; R37 := 0x83f4e77c
817 [-]: CALL      R36 2 2      ; R36 := R36(R37)
818 [-]: TEST      R36 1        ; if R36 then PC := 846
819 [-]: JMP       846          ; PC := 846
820 [-]: GETGLOBAL R36 K9       ; R36 := 0x7b998233
821 [-]: GETGLOBAL R37 K6       ; R37 := 0x89326c93
822 [-]: CALL      R36 2 2      ; R36 := R36(R37)
823 [-]: TEST      R36 1        ; if R36 then PC := 846
824 [-]: JMP       846          ; PC := 846
825 [-]: GETGLOBAL R36 K6       ; R36 := 0x89326c93
826 [-]: SELF      R36 R36 K26  ; R37 := R36; R36 := R36[0xfb64e76c]
827 [-]: CALL      R36 2 2      ; R36 := R36(R37)
828 [-]: GETGLOBAL R37 K138     ; R37 := 0x83f4e77c
829 [-]: SELF      R37 R37 K139 ; R38 := R37; R37 := R37[0xd3c6feca]
830 [-]: CALL      R37 2 2      ; R37 := R37(R38)
831 [-]: GETGLOBAL R38 K9       ; R38 := 0x7b998233
832 [-]: MOVE      R39 R37      ; R39 := R37
833 [-]: CALL      R38 2 2      ; R38 := R38(R39)
834 [-]: TEST      R38 1        ; if R38 then PC := 846
835 [-]: JMP       846          ; PC := 846
836 [-]: GETGLOBAL R38 K9       ; R38 := 0x7b998233
837 [-]: MOVE      R39 R36      ; R39 := R36
838 [-]: CALL      R38 2 2      ; R38 := R38(R39)
839 [-]: TEST      R38 1        ; if R38 then PC := 846
840 [-]: JMP       846          ; PC := 846
841 [-]: SELF      R38 R37 K140 ; R39 := R37; R38 := R37[0x1be972b8]
842 [-]: MOVE      R40 R36      ; R40 := R36
843 [-]: GETGLOBAL R41 K141     ; R41 := 0xf3a45924
844 [-]: LOADNIL   R42 R42      ; R42 := nil
845 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
846 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 3480
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["SetButtons"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0x1c5b546f]
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  8 [-]: LOADNIL   R2 R2        ; R2 := nil
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0x25312c9b
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 12 [-]: LOADK     R2 K5        ; R2 := "_root"
 13 [-]: LOADK     R3 0         ; R3 := 0.000000
 14 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 15 [-]: LOADK     R5 10        ; R5 := 10.000000
 16 [-]: LOADK     R6 4         ; R6 := 4.000000
 17 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 18 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 19 [-]: LOADK     R6 0         ; R6 := 0.000000
 20 [-]: LOADK     R7 -10000    ; R7 := -10000.000000
 21 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 22 [-]: LOADK     R6 0         ; R6 := 0.250000
 23 [-]: LOADK     R7 0         ; R7 := 0.000000
 24 [-]: CLOSURE   R8 0         ; R8 := closure(Function #57.1)
 25 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 26 [-]: RETURN    R0 1         ; return 


; Function #57.1:
;
; Name:            
; Defined at line: 3486
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x32302b4a]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 3491
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SpecialSuitAvatar"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 25
  6 [-]: JMP       25           ; PC := 25
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x89326c93
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x59c96e77]
  9 [-]: GETGLOBAL R2 K1        ; R2 := _T
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SpecialSuitAvatar"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: GETGLOBAL R0 K1        ; R0 := _T
 13 [-]: SETTABLE  R0 K2 K5     ; R0["SpecialSuitAvatar"] := nil
 14 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 15 [-]: GETGLOBAL R1 K1        ; R1 := _T
 16 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MenuSuitAvatar"]
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 1         ; if R0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R0 K1        ; R0 := _T
 21 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["MenuSuitAvatar"]
 22 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x2abc8ecd]
 23 [-]: LOADBOOL  R2 1 0       ; R2 := true
 24 [-]: CALL      R0 3 1       ; R0(R1,R2)
 25 [-]: GETGLOBAL R0 K1        ; R0 := _T
 26 [-]: SETTABLE  R0 K8 K5     ; R0["mSpecialSuitMode"] := nil
 27 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 3502
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["KDriveAvatar"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 25
  6 [-]: JMP       25           ; PC := 25
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x89326c93
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x59c96e77]
  9 [-]: GETGLOBAL R2 K1        ; R2 := _T
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["KDriveAvatar"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: GETGLOBAL R0 K1        ; R0 := _T
 13 [-]: SETTABLE  R0 K2 K5     ; R0["KDriveAvatar"] := nil
 14 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 15 [-]: GETGLOBAL R1 K1        ; R1 := _T
 16 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MenuSuitAvatar"]
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 1         ; if R0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R0 K1        ; R0 := _T
 21 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["MenuSuitAvatar"]
 22 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x2abc8ecd]
 23 [-]: LOADBOOL  R2 1 0       ; R2 := true
 24 [-]: CALL      R0 3 1       ; R0(R1,R2)
 25 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 3512
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADBOOL  R2 0 0       ; R2 := false
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: JMP       43           ; PC := 43
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Current"]
  8 [-]: EQ        1 R3 K3      ; if R3 == 3.000000 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 11
 11 [-]: LOADBOOL  R2 1 0       ; R2 := true
 12 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Element"]
 14 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 31
 15 [-]: JMP       31           ; PC := 31
 16 [-]: TEST      R2 0         ; if not R2 then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 19 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Element"]
 20 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["LoadOutId"]
 21 [-]: EQ        0 R3 K7      ; if R3 ~= 4.000000 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 24 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Element"]
 25 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["LoadOutType"]
 26 [-]: EQ        1 R3 K9      ; if R3 == 8.000000 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 29
 29 [-]: LOADBOOL  R2 1 0       ; R2 := true
 30 [-]: JMP       43           ; PC := 43
 31 [-]: GETGLOBAL R3 K10       ; R3 := _T
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["upgradeItemSlot"]
 33 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: TEST      R2 0         ; if not R2 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R3 K10       ; R3 := _T
 38 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["upgradeItemSlot"]
 39 [-]: EQ        0 R3 K7      ; if R3 ~= 4.000000 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 42
 42 [-]: LOADBOOL  R2 1 0       ; R2 := true
 43 [-]: SELF      R3 R0 K12    ; R4 := R0; R3 := R0[0xde321e6f]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0xcfd657f3]
 46 [-]: MOVE      R5 R2        ; R5 := R2
 47 [-]: CALL      R3 3 1       ; R3(R4,R5)
 48 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 3528
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 3
  2 [-]: JMP       3            ; PC := 3
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0xbe190284
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf2deaf69]
 10 [-]: GETGLOBAL R4 K3        ; R4 := gLotusPhotoBoothGameRulesType
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x3c903e33]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 1         ; if R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x8fbd62e4]
 21 [-]: LOADK     R3 K6        ; R3 := "OnUpdateSessionSettings"
 22 [-]: CALL      R2 2 1       ; R2(R3)
 23 [-]: GETGLOBAL R2 K7        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["MenuSuitAvatar"]
 25 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 26 [-]: MOVE      R4 R2        ; R4 := R2
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: TEST      R3 1         ; if R3 then PC := 54
 29 [-]: JMP       54           ; PC := 54
 30 [-]: GETUPVAL  R3 U1        ; R3 := U1
 31 [-]: GETTABLE  R3 R3 K9     ; R3 := R3[0xcfd657f3]
 32 [-]: MOVE      R4 R2        ; R4 := R2
 33 [-]: LOADBOOL  R5 0 0       ; R5 := false
 34 [-]: CALL      R3 3 1       ; R3(R4,R5)
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[0xcf1fcba4]
 37 [-]: CALL      R3 1 2       ; R3 := R3()
 38 [-]: TEST      R3 0         ; if not R3 then PC := 54
 39 [-]: JMP       54           ; PC := 54
 40 [-]: LOADK     R3 K11       ; R3 := "{\"loadout\":"
 41 [-]: GETGLOBAL R4 K1        ; R4 := 0xbe190284
 42 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xe08c150e]
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: LOADK     R5 K13       ; R5 := "}"
 45 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 46 [-]: GETGLOBAL R4 K1        ; R4 := 0xbe190284
 47 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x83bfaed0]
 48 [-]: MOVE      R6 R3        ; R6 := R3
 49 [-]: CALL      R4 3 1       ; R4(R5,R6)
 50 [-]: GETGLOBAL R4 K1        ; R4 := 0xbe190284
 51 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x6dd14378]
 52 [-]: MOVE      R6 R2        ; R6 := R2
 53 [-]: CALL      R4 3 1       ; R4(R5,R6)
 54 [-]: GETGLOBAL R4 K16       ; R4 := mHandleCanBeClosedCallback
 55 [-]: EQ        1 R4 K17     ; if R4 == nil then PC := 65
 56 [-]: JMP       65           ; PC := 65
 57 [-]: GETGLOBAL R4 K7        ; R4 := _T
 58 [-]: GETGLOBAL R5 K16       ; R5 := mHandleCanBeClosedCallback
 59 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 60 [-]: LOADBOOL  R5 1 0       ; R5 := true
 61 [-]: CALL      R4 2 1       ; R4(R5)
 62 [-]: LOADNIL   R4 R4        ; R4 := nil
 63 [-]: SETGLOBAL R4 K16       ; mHandleCanBeClosedCallback := R4
 64 [-]: JMP       81           ; PC := 81
 65 [-]: GETGLOBAL R4 K7        ; R4 := _T
 66 [-]: GETTABLE  R4 R4 K18    ; R4 := R4[0x4e4e6b0c]
 67 [-]: LOADK     R5 1         ; R5 := 1.000000
 68 [-]: GETUPVAL  R6 U2        ; R6 := U2
 69 [-]: CALL      R6 1 2       ; R6 := R6()
 70 [-]: NOT       R6 R6        ; R6 := not R6
 71 [-]: CALL      R4 3 1       ; R4(R5,R6)
 72 [-]: GETGLOBAL R4 K7        ; R4 := _T
 73 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mTrigger"]
 74 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0x8eb2112d]
 75 [-]: LOADK     R6 K21       ; R6 := "Close"
 76 [-]: CALL      R4 3 1       ; R4(R5,R6)
 77 [-]: GETUPVAL  R4 U3        ; R4 := U3
 78 [-]: CALL      R4 1 1       ; R4()
 79 [-]: GETUPVAL  R4 U4        ; R4 := U4
 80 [-]: CALL      R4 1 1       ; R4()
 81 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 3563
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 3566
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["QuestProgressWaitingForUpgradesScreen"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xe0cba3ca]
  7 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/QuestModScreenRequired"
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 11 [-]: GETGLOBAL R1 K0        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MenuSuitAvatar"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETGLOBAL R0 K0        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["MenuSuitAvatar"]
 18 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x044b7be8]
 19 [-]: LOADBOOL  R2 0 0       ; R2 := false
 20 [-]: CALL      R0 3 1       ; R0(R1,R2)
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["ForegroundMovie"]
 23 [-]: TEST      R0 0         ; if not R0 then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: GETGLOBAL R0 K0        ; R0 := _T
 26 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["CanShowPlayTypeDropDown"]
 27 [-]: TEST      R0 0         ; if not R0 then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETGLOBAL R0 K0        ; R0 := _T
 30 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["ForegroundMovie"]
 31 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xe4162eed]
 32 [-]: LOADK     R2 K10       ; R2 := "TogglePlayTypeDropDown"
 33 [-]: LOADK     R3 K11       ; R3 := "true"
 34 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 35 [-]: GETUPVAL  R0 U0        ; R0 := U0
 36 [-]: GETTABLE  R0 R0 K12    ; R0 := R0[0x659d451f]
 37 [-]: GETGLOBAL R1 K13       ; R1 := 0x0032441c
 38 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["UISound_GridOpenTwo"]
 39 [-]: CALL      R0 2 1       ; R0(R1)
 40 [-]: GETUPVAL  R0 U0        ; R0 := U0
 41 [-]: GETTABLE  R0 R0 K12    ; R0 := R0[0x659d451f]
 42 [-]: GETGLOBAL R1 K13       ; R1 := 0x0032441c
 43 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["UISound_DialogClose"]
 44 [-]: CALL      R0 2 1       ; R0(R1)
 45 [-]: LOADBOOL  R0 1 0       ; R0 := true
 46 [-]: SETGLOBAL R0 K16       ; mInputBlocked := R0
 47 [-]: LOADBOOL  R0 1 0       ; R0 := true
 48 [-]: LOADBOOL  R1 1 0       ; R1 := true
 49 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 50 [-]: GETGLOBAL R3 K17       ; R3 := 0x25d99d89
 51 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 52 [-]: TEST      R2 1         ; if R2 then PC := 91
 53 [-]: JMP       91           ; PC := 91
 54 [-]: GETUPVAL  R2 U1        ; R2 := U1
 55 [-]: GETUPVAL  R3 U2        ; R3 := U2
 56 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
 57 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 91
 58 [-]: JMP       91           ; PC := 91
 59 [-]: GETGLOBAL R2 K17       ; R2 := 0x25d99d89
 60 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0x62c81b76]
 61 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 62 [-]: SELF      R3 R2 K20    ; R4 := R2; R3 := R2[0x8af486d8]
 63 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 64 [-]: TEST      R3 0         ; if not R3 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: LOADBOOL  R0 0 0       ; R0 := false
 67 [-]: LOADBOOL  R1 0 0       ; R1 := false
 68 [-]: JMP       91           ; PC := 91
 69 [-]: SELF      R3 R2 K21    ; R4 := R2; R3 := R2[0x5ea7c3b1]
 70 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 71 [-]: TEST      R3 0         ; if not R3 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: LOADBOOL  R0 0 0       ; R0 := false
 74 [-]: JMP       91           ; PC := 91
 75 [-]: LOADBOOL  R1 0 0       ; R1 := false
 76 [-]: SELF      R3 R2 K22    ; R4 := R2; R3 := R2[0xb61abfd2]
 77 [-]: LOADK     R5 1         ; R5 := 1.000000
 78 [-]: LOADK     R6 0         ; R6 := 0.000000
 79 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 80 [-]: GETTABLE  R4 R3 K24    ; R4 := R3["mItemId"]
 81 [-]: GETGLOBAL R5 K23       ; R5 := 0x6c97a788
 82 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["InvalidItemID"]
 83 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 90
 84 [-]: JMP       90           ; PC := 90
 85 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 86 [-]: GETTABLE  R5 R3 K26    ; R5 := R3["mItemType"]
 87 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 88 [-]: TEST      R4 0         ; if not R4 then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: LOADBOOL  R0 0 0       ; R0 := false
 91 [-]: GETUPVAL  R4 U3        ; R4 := U3
 92 [-]: LOADK     R5 0         ; R5 := 0.000000
 93 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 94 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 95 [-]: MOVE      R6 R4        ; R6 := R4
 96 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 97 [-]: TEST      R5 1         ; if R5 then PC := 103
 98 [-]: JMP       103          ; PC := 103
 99 [-]: SELF      R5 R4 K27    ; R6 := R4; R5 := R4[0x768274d6]
100 [-]: MOVE      R7 R0        ; R7 := R0
101 [-]: LOADBOOL  R8 1 0       ; R8 := true
102 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
103 [-]: GETUPVAL  R5 U3        ; R5 := U3
104 [-]: LOADK     R6 3         ; R6 := 3.000000
105 [-]: CALL      R5 2 2       ; R5 := R5(R6)
106 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
107 [-]: MOVE      R7 R5        ; R7 := R5
108 [-]: CALL      R6 2 2       ; R6 := R6(R7)
109 [-]: TEST      R6 1         ; if R6 then PC := 115
110 [-]: JMP       115          ; PC := 115
111 [-]: SELF      R6 R5 K27    ; R7 := R5; R6 := R5[0x768274d6]
112 [-]: MOVE      R8 R1        ; R8 := R1
113 [-]: LOADBOOL  R9 1 0       ; R9 := true
114 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
115 [-]: GETGLOBAL R6 K0        ; R6 := _T
116 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["domeState"]
117 [-]: TEST      R6 0         ; if not R6 then PC := 124
118 [-]: JMP       124          ; PC := 124
119 [-]: GETGLOBAL R6 K0        ; R6 := _T
120 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["domeState"]
121 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["closed"]
122 [-]: TEST      R6 1         ; if R6 then PC := 137
123 [-]: JMP       137          ; PC := 137
124 [-]: GETUPVAL  R6 U3        ; R6 := U3
125 [-]: LOADK     R7 1         ; R7 := 1.000000
126 [-]: CALL      R6 2 2       ; R6 := R6(R7)
127 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
128 [-]: MOVE      R8 R6        ; R8 := R6
129 [-]: CALL      R7 2 2       ; R7 := R7(R8)
130 [-]: TEST      R7 1         ; if R7 then PC := 137
131 [-]: JMP       137          ; PC := 137
132 [-]: SELF      R7 R6 K30    ; R8 := R6; R7 := R6[0xb2532845]
133 [-]: GETGLOBAL R9 K31       ; R9 := 0x0469f296
134 [-]: LOADK     R10 K32      ; R10 := "Release"
135 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
136 [-]: CALL      R7 0 1       ; R7(R8,...)
137 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
138 [-]: GETGLOBAL R8 K0        ; R8 := _T
139 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["petCommands"]
140 [-]: CALL      R7 2 2       ; R7 := R7(R8)
141 [-]: TEST      R7 1         ; if R7 then PC := 147
142 [-]: JMP       147          ; PC := 147
143 [-]: GETGLOBAL R7 K0        ; R7 := _T
144 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["petCommands"]
145 [-]: GETTABLE  R7 R7 K34    ; R7 := R7[0xea0b3661]
146 [-]: CALL      R7 1 1       ; R7()
147 [-]: GETUPVAL  R7 U4        ; R7 := U4
148 [-]: GETUPVAL  R8 U5        ; R8 := U5
149 [-]: GETTABLE  R8 R8 K35    ; R8 := R8["SELECTING_SKINS"]
150 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 181
151 [-]: JMP       181          ; PC := 181
152 [-]: GETGLOBAL R7 K36       ; R7 := mSelected
153 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["Cosmetic"]
154 [-]: EQ        1 R7 K38     ; if R7 == nil then PC := 181
155 [-]: JMP       181          ; PC := 181
156 [-]: GETGLOBAL R7 K36       ; R7 := mSelected
157 [-]: GETTABLE  R7 R7 K39    ; R7 := R7["CosmeticPreviousValue"]
158 [-]: EQ        1 R7 K38     ; if R7 == nil then PC := 181
159 [-]: JMP       181          ; PC := 181
160 [-]: GETGLOBAL R7 K36       ; R7 := mSelected
161 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["Cosmetic"]
162 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["PetTrait"]
163 [-]: TEST      R7 0         ; if not R7 then PC := 181
164 [-]: JMP       181          ; PC := 181
165 [-]: GETGLOBAL R7 K36       ; R7 := mSelected
166 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["Cosmetic"]
167 [-]: GETTABLE  R7 R7 K41    ; R7 := R7["Attribute"]
168 [-]: TEST      R7 0         ; if not R7 then PC := 181
169 [-]: JMP       181          ; PC := 181
170 [-]: GETUPVAL  R7 U6        ; R7 := U6
171 [-]: GETGLOBAL R8 K36       ; R8 := mSelected
172 [-]: GETTABLE  R8 R8 K37    ; R8 := R8["Cosmetic"]
173 [-]: GETTABLE  R8 R8 K41    ; R8 := R8["Attribute"]
174 [-]: GETGLOBAL R9 K36       ; R9 := mSelected
175 [-]: GETTABLE  R9 R9 K39    ; R9 := R9["CosmeticPreviousValue"]
176 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9[0xa5d5c8f6]
177 [-]: CALL      R9 2 2       ; R9 := R9(R10)
178 [-]: LOADK     R10 0        ; R10 := 0.000000
179 [-]: LOADNIL   R11 R11      ; R11 := nil
180 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
181 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
182 [-]: GETGLOBAL R8 K43       ; R8 := mChildMovie
183 [-]: CALL      R7 2 2       ; R7 := R7(R8)
184 [-]: TEST      R7 1         ; if R7 then PC := 194
185 [-]: JMP       194          ; PC := 194
186 [-]: GETUPVAL  R7 U7        ; R7 := U7
187 [-]: TEST      R7 0         ; if not R7 then PC := 194
188 [-]: JMP       194          ; PC := 194
189 [-]: GETGLOBAL R7 K43       ; R7 := mChildMovie
190 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xe4162eed]
191 [-]: LOADK     R9 K44       ; R9 := "Close"
192 [-]: LOADK     R10 K45      ; R10 := ""
193 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
194 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
195 [-]: GETGLOBAL R8 K17       ; R8 := 0x25d99d89
196 [-]: CALL      R7 2 2       ; R7 := R7(R8)
197 [-]: TEST      R7 1         ; if R7 then PC := 215
198 [-]: JMP       215          ; PC := 215
199 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
200 [-]: GETGLOBAL R8 K46       ; R8 := 0xbe190284
201 [-]: CALL      R7 2 2       ; R7 := R7(R8)
202 [-]: TEST      R7 1         ; if R7 then PC := 210
203 [-]: JMP       210          ; PC := 210
204 [-]: GETGLOBAL R7 K0        ; R7 := _T
205 [-]: GETGLOBAL R8 K0        ; R8 := _T
206 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["MenuSuitAvatar"]
207 [-]: SETTABLE  R7 K47 R8    ; R7["ArsenalAvatar"] := R8
208 [-]: GETGLOBAL R7 K0        ; R7 := _T
209 [-]: SETTABLE  R7 K48 K49   ; R7["useArsenalAvatar"] := true
210 [-]: GETGLOBAL R7 K17       ; R7 := 0x25d99d89
211 [-]: SELF      R7 R7 K50    ; R8 := R7; R7 := R7[0xb6e2ab0d]
212 [-]: LOADK     R9 K51       ; R9 := "OnSaveLoadOutComplete"
213 [-]: CALL      R7 3 1       ; R7(R8,R9)
214 [-]: JMP       227          ; PC := 227
215 [-]: GETGLOBAL R7 K0        ; R7 := _T
216 [-]: GETTABLE  R7 R7 K52    ; R7 := R7[0x4e4e6b0c]
217 [-]: LOADK     R8 1         ; R8 := 1.000000
218 [-]: GETUPVAL  R9 U8        ; R9 := U8
219 [-]: CALL      R9 1 2       ; R9 := R9()
220 [-]: NOT       R9 R9        ; R9 := not R9
221 [-]: CALL      R7 3 1       ; R7(R8,R9)
222 [-]: GETGLOBAL R7 K0        ; R7 := _T
223 [-]: GETTABLE  R7 R7 K53    ; R7 := R7["mTrigger"]
224 [-]: SELF      R7 R7 K54    ; R8 := R7; R7 := R7[0x8eb2112d]
225 [-]: LOADK     R9 K44       ; R9 := "Close"
226 [-]: CALL      R7 3 1       ; R7(R8,R9)
227 [-]: GETUPVAL  R7 U9        ; R7 := U9
228 [-]: CALL      R7 1 1       ; R7()
229 [-]: GETUPVAL  R7 U10       ; R7 := U10
230 [-]: CALL      R7 1 1       ; R7()
231 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
232 [-]: GETGLOBAL R8 K0        ; R8 := _T
233 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["MenuSuitAvatar"]
234 [-]: CALL      R7 2 2       ; R7 := R7(R8)
235 [-]: TEST      R7 1         ; if R7 then PC := 244
236 [-]: JMP       244          ; PC := 244
237 [-]: GETGLOBAL R7 K0        ; R7 := _T
238 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["MenuSuitAvatar"]
239 [-]: SELF      R7 R7 K55    ; R8 := R7; R7 := R7[0xde321e6f]
240 [-]: CALL      R7 2 2       ; R7 := R7(R8)
241 [-]: SELF      R7 R7 K56    ; R8 := R7; R7 := R7[0xb4af1972]
242 [-]: LOADBOOL  R9 1 0       ; R9 := true
243 [-]: CALL      R7 3 1       ; R7(R8,R9)
244 [-]: GETGLOBAL R7 K0        ; R7 := _T
245 [-]: SETTABLE  R7 K57 K49   ; R7["PetNameNeedsUpdate"] := true
246 [-]: GETGLOBAL R7 K0        ; R7 := _T
247 [-]: SETTABLE  R7 K58 K59   ; R7["mSentinelMode"] := false
248 [-]: GETGLOBAL R7 K0        ; R7 := _T
249 [-]: GETTABLE  R7 R7 K60    ; R7 := R7["InSimulacrum"]
250 [-]: TEST      R7 0         ; if not R7 then PC := 255
251 [-]: JMP       255          ; PC := 255
252 [-]: GETUPVAL  R7 U11       ; R7 := U11
253 [-]: TEST      R7 0         ; if not R7 then PC := 257
254 [-]: JMP       257          ; PC := 257
255 [-]: GETGLOBAL R7 K0        ; R7 := _T
256 [-]: SETTABLE  R7 K61 K38   ; R7["LoadoutSaveRequired"] := nil
257 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
258 [-]: GETGLOBAL R8 K62       ; R8 := 0xcb79539e
259 [-]: CALL      R7 2 2       ; R7 := R7(R8)
260 [-]: TEST      R7 1         ; if R7 then PC := 283
261 [-]: JMP       283          ; PC := 283
262 [-]: GETUPVAL  R7 U12       ; R7 := U12
263 [-]: TEST      R7 0         ; if not R7 then PC := 276
264 [-]: JMP       276          ; PC := 276
265 [-]: GETGLOBAL R7 K62       ; R7 := 0xcb79539e
266 [-]: SELF      R7 R7 K63    ; R8 := R7; R7 := R7[0xa9188a47]
267 [-]: GETGLOBAL R9 K31       ; R9 := 0x0469f296
268 [-]: LOADK     R10 K64      ; R10 := "IN_SHIP_VIEW_TIME"
269 [-]: CALL      R9 2 2       ; R9 := R9(R10)
270 [-]: LOADK     R10 K65      ; R10 := "EQUIPMENT_ARSENAL_"
271 [-]: GETUPVAL  R11 U12      ; R11 := U12
272 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
273 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
274 [-]: LOADNIL   R7 R7        ; R7 := nil
275 [-]: SETUPVAL  R7 U12       ; U82 := R12
276 [-]: GETGLOBAL R7 K62       ; R7 := 0xcb79539e
277 [-]: SELF      R7 R7 K63    ; R8 := R7; R7 := R7[0xa9188a47]
278 [-]: GETGLOBAL R9 K31       ; R9 := 0x0469f296
279 [-]: LOADK     R10 K64      ; R10 := "IN_SHIP_VIEW_TIME"
280 [-]: CALL      R9 2 2       ; R9 := R9(R10)
281 [-]: LOADK     R10 K66      ; R10 := "EQUIPMENT_ARSENAL_MAIN"
282 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
283 [-]: GETGLOBAL R7 K0        ; R7 := _T
284 [-]: GETTABLE  R7 R7 K67    ; R7 := R7["BackgroundMovie"]
285 [-]: EQ        1 R7 K38     ; if R7 == nil then PC := 311
286 [-]: JMP       311          ; PC := 311
287 [-]: GETUPVAL  R7 U2        ; R7 := U2
288 [-]: GETTABLE  R7 R7 K68    ; R7 := R7[0x23ddc82a]
289 [-]: CALL      R7 1 2       ; R7 := R7()
290 [-]: TEST      R7 0         ; if not R7 then PC := 299
291 [-]: JMP       299          ; PC := 299
292 [-]: GETGLOBAL R7 K0        ; R7 := _T
293 [-]: GETTABLE  R7 R7 K67    ; R7 := R7["BackgroundMovie"]
294 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xe4162eed]
295 [-]: LOADK     R9 K69       ; R9 := "UpdateApartmentDisplayWarframe"
296 [-]: LOADK     R10 K70      ; R10 := "false"
297 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
298 [-]: JMP       305          ; PC := 305
299 [-]: GETGLOBAL R7 K0        ; R7 := _T
300 [-]: GETTABLE  R7 R7 K67    ; R7 := R7["BackgroundMovie"]
301 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xe4162eed]
302 [-]: LOADK     R9 K71       ; R9 := "UpdateShipFavouriteWarframe"
303 [-]: LOADK     R10 K70      ; R10 := "false"
304 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
305 [-]: GETGLOBAL R7 K0        ; R7 := _T
306 [-]: GETTABLE  R7 R7 K67    ; R7 := R7["BackgroundMovie"]
307 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xe4162eed]
308 [-]: LOADK     R9 K72       ; R9 := "ClosePod"
309 [-]: LOADK     R10 K45      ; R10 := ""
310 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
311 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 3678
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutId"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 190
  3 [-]: JMP       190          ; PC := 190
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K3        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["MenuSuitAvatar"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 190
  9 [-]: JMP       190          ; PC := 190
 10 [-]: GETGLOBAL R1 K3        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["MenuSuitAvatar"]
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: LOADNIL   R3 R3        ; R3 := nil
 14 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["LoadOutId"]
 15 [-]: EQ        0 R4 K6      ; if R4 ~= 1.000000 then PC := 38
 16 [-]: JMP       38           ; PC := 38
 17 [-]: SELF      R4 R1 K7     ; R5 := R1; R4 := R1[0xde321e6f]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xe85a2361]
 20 [-]: LOADK     R6 0         ; R6 := 0.000000
 21 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 22 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 23 [-]: MOVE      R6 R4        ; R6 := R4
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: TEST      R5 1         ; if R5 then PC := 172
 26 [-]: JMP       172          ; PC := 172
 27 [-]: SELF      R5 R4 K10    ; R6 := R4; R5 := R4[0x92c56c50]
 28 [-]: LOADK     R7 1         ; R7 := 1.000000
 29 [-]: LOADK     R8 0         ; R8 := 0.000000
 30 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 31 [-]: MOVE      R2 R5        ; R2 := R5
 32 [-]: SELF      R5 R4 K10    ; R6 := R4; R5 := R4[0x92c56c50]
 33 [-]: LOADK     R7 1         ; R7 := 1.000000
 34 [-]: LOADK     R8 1         ; R8 := 1.000000
 35 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 36 [-]: MOVE      R3 R5        ; R3 := R5
 37 [-]: JMP       172          ; PC := 172
 38 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["LoadOutType"]
 39 [-]: EQ        1 R5 K12     ; if R5 == 0.000000 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["LoadOutType"]
 42 [-]: EQ        0 R5 K13     ; if R5 ~= 2.000000 then PC := 81
 43 [-]: JMP       81           ; PC := 81
 44 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["LoadOutId"]
 45 [-]: EQ        1 R5 K13     ; if R5 == 2.000000 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["LoadOutId"]
 48 [-]: EQ        0 R5 K14     ; if R5 ~= 4.000000 then PC := 81
 49 [-]: JMP       81           ; PC := 81
 50 [-]: GETUPVAL  R5 U0        ; R5 := U0
 51 [-]: GETTABLE  R5 R5 K15    ; R5 := R5[0x06d055f9]
 52 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["LoadOutId"]
 53 [-]: EQ        1 R6 K13     ; if R6 == 2.000000 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 56
 56 [-]: LOADBOOL  R6 1 0       ; R6 := true
 57 [-]: LOADK     R7 1         ; R7 := 1.000000
 58 [-]: LOADK     R8 10        ; R8 := 10.000000
 59 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 60 [-]: SELF      R6 R1 K7     ; R7 := R1; R6 := R1[0xde321e6f]
 61 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 62 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0xe85a2361]
 63 [-]: MOVE      R8 R5        ; R8 := R5
 64 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 65 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 66 [-]: MOVE      R8 R6        ; R8 := R6
 67 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 68 [-]: TEST      R7 1         ; if R7 then PC := 172
 69 [-]: JMP       172          ; PC := 172
 70 [-]: SELF      R7 R6 K10    ; R8 := R6; R7 := R6[0x92c56c50]
 71 [-]: LOADK     R9 1         ; R9 := 1.000000
 72 [-]: LOADK     R10 0        ; R10 := 0.000000
 73 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 74 [-]: MOVE      R2 R7        ; R2 := R7
 75 [-]: SELF      R7 R6 K10    ; R8 := R6; R7 := R6[0x92c56c50]
 76 [-]: LOADK     R9 1         ; R9 := 1.000000
 77 [-]: LOADK     R10 1        ; R10 := 1.000000
 78 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 79 [-]: MOVE      R3 R7        ; R3 := R7
 80 [-]: JMP       172          ; PC := 172
 81 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["LoadOutType"]
 82 [-]: EQ        1 R7 K12     ; if R7 == 0.000000 then PC := 87
 83 [-]: JMP       87           ; PC := 87
 84 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["LoadOutType"]
 85 [-]: EQ        0 R7 K13     ; if R7 ~= 2.000000 then PC := 111
 86 [-]: JMP       111          ; PC := 111
 87 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["LoadOutId"]
 88 [-]: EQ        0 R7 K16     ; if R7 ~= 3.000000 then PC := 111
 89 [-]: JMP       111          ; PC := 111
 90 [-]: SELF      R7 R1 K7     ; R8 := R1; R7 := R1[0xde321e6f]
 91 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 92 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0xe85a2361]
 93 [-]: LOADK     R9 5         ; R9 := 5.000000
 94 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 95 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
 96 [-]: MOVE      R9 R7        ; R9 := R7
 97 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 98 [-]: TEST      R8 1         ; if R8 then PC := 172
 99 [-]: JMP       172          ; PC := 172
100 [-]: SELF      R8 R7 K10    ; R9 := R7; R8 := R7[0x92c56c50]
101 [-]: LOADK     R10 1        ; R10 := 1.000000
102 [-]: LOADK     R11 0        ; R11 := 0.000000
103 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
104 [-]: MOVE      R2 R8        ; R2 := R8
105 [-]: SELF      R8 R7 K10    ; R9 := R7; R8 := R7[0x92c56c50]
106 [-]: LOADK     R10 1        ; R10 := 1.000000
107 [-]: LOADK     R11 1        ; R11 := 1.000000
108 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
109 [-]: MOVE      R3 R8        ; R3 := R8
110 [-]: JMP       172          ; PC := 172
111 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["LoadOutType"]
112 [-]: EQ        0 R8 K6      ; if R8 ~= 1.000000 then PC := 117
113 [-]: JMP       117          ; PC := 117
114 [-]: GETGLOBAL R8 K3        ; R8 := _T
115 [-]: GETTABLE  R2 R8 K17    ; R2 := R8["MenuSentinel"]
116 [-]: JMP       172          ; PC := 172
117 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["LoadOutId"]
118 [-]: EQ        0 R8 K18     ; if R8 ~= 5.000000 then PC := 149
119 [-]: JMP       149          ; PC := 149
120 [-]: GETGLOBAL R8 K3        ; R8 := _T
121 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["mSpecialSuitMode"]
122 [-]: TEST      R8 0         ; if not R8 then PC := 128
123 [-]: JMP       128          ; PC := 128
124 [-]: GETGLOBAL R8 K3        ; R8 := _T
125 [-]: GETTABLE  R1 R8 K20    ; R1 := R8["SpecialSuitAvatar"]
126 [-]: MOVE      R2 R1        ; R2 := R1
127 [-]: JMP       172          ; PC := 172
128 [-]: SELF      R8 R1 K7     ; R9 := R1; R8 := R1[0xde321e6f]
129 [-]: CALL      R8 2 2       ; R8 := R8(R9)
130 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0xe85a2361]
131 [-]: LOADK     R10 7        ; R10 := 7.000000
132 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
133 [-]: GETGLOBAL R9 K2        ; R9 := 0x7b998233
134 [-]: MOVE      R10 R8       ; R10 := R8
135 [-]: CALL      R9 2 2       ; R9 := R9(R10)
136 [-]: TEST      R9 1         ; if R9 then PC := 172
137 [-]: JMP       172          ; PC := 172
138 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8[0x92c56c50]
139 [-]: LOADK     R11 1        ; R11 := 1.000000
140 [-]: LOADK     R12 0        ; R12 := 0.000000
141 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
142 [-]: MOVE      R2 R9        ; R2 := R9
143 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8[0x92c56c50]
144 [-]: LOADK     R11 1        ; R11 := 1.000000
145 [-]: LOADK     R12 1        ; R12 := 1.000000
146 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
147 [-]: MOVE      R3 R9        ; R3 := R9
148 [-]: JMP       172          ; PC := 172
149 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["LoadOutId"]
150 [-]: EQ        0 R9 K21     ; if R9 ~= 6.000000 then PC := 172
151 [-]: JMP       172          ; PC := 172
152 [-]: SELF      R9 R1 K7     ; R10 := R1; R9 := R1[0xde321e6f]
153 [-]: CALL      R9 2 2       ; R9 := R9(R10)
154 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9[0xe85a2361]
155 [-]: LOADK     R11 7        ; R11 := 7.000000
156 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
157 [-]: GETGLOBAL R10 K2       ; R10 := 0x7b998233
158 [-]: MOVE      R11 R9       ; R11 := R9
159 [-]: CALL      R10 2 2      ; R10 := R10(R11)
160 [-]: TEST      R10 1        ; if R10 then PC := 172
161 [-]: JMP       172          ; PC := 172
162 [-]: SELF      R10 R9 K10   ; R11 := R9; R10 := R9[0x92c56c50]
163 [-]: LOADK     R12 1        ; R12 := 1.000000
164 [-]: LOADK     R13 0        ; R13 := 0.000000
165 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
166 [-]: MOVE      R2 R10       ; R2 := R10
167 [-]: SELF      R10 R9 K10   ; R11 := R9; R10 := R9[0x92c56c50]
168 [-]: LOADK     R12 1        ; R12 := 1.000000
169 [-]: LOADK     R13 1        ; R13 := 1.000000
170 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
171 [-]: MOVE      R3 R10       ; R3 := R10
172 [-]: GETGLOBAL R10 K2       ; R10 := 0x7b998233
173 [-]: MOVE      R11 R2       ; R11 := R2
174 [-]: CALL      R10 2 2      ; R10 := R10(R11)
175 [-]: TEST      R10 1        ; if R10 then PC := 181
176 [-]: JMP       181          ; PC := 181
177 [-]: SELF      R10 R2 K22   ; R11 := R2; R10 := R2[0x47901f07]
178 [-]: GETGLOBAL R12 K23      ; R12 := 0xd5276cb9
179 [-]: GETGLOBAL R13 K24      ; R13 := EMPTY_SYMBOL
180 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
181 [-]: GETGLOBAL R10 K2       ; R10 := 0x7b998233
182 [-]: MOVE      R11 R3       ; R11 := R3
183 [-]: CALL      R10 2 2      ; R10 := R10(R11)
184 [-]: TEST      R10 1        ; if R10 then PC := 190
185 [-]: JMP       190          ; PC := 190
186 [-]: SELF      R10 R3 K22   ; R11 := R3; R10 := R3[0x47901f07]
187 [-]: GETGLOBAL R12 K23      ; R12 := 0xd5276cb9
188 [-]: GETGLOBAL R13 K24      ; R13 := EMPTY_SYMBOL
189 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
190 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 3732
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TEST      R0 1         ; if R0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mStatCompare"]
  5 [-]: GETTABLE  R0 R1 K1     ; R0 := R1["TipIndex"]
  6 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 57
  7 [-]: JMP       57           ; PC := 57
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mStatCompare"]
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x5465f8f3]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 57
 14 [-]: JMP       57           ; PC := 57
 15 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["Current"]
 16 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["ToolTip"]
 17 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 57
 18 [-]: JMP       57           ; PC := 57
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mStatCompare"]
 21 [-]: SETTABLE  R2 K1 R0     ; R2["TipIndex"] := R0
 22 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 23 [-]: SETTABLE  R2 K6 K7     ; R2["CustomEntry"] := true
 24 [-]: GETTABLE  R3 R1 K9     ; R3 := R1["Label"]
 25 [-]: SETTABLE  R2 K8 R3     ; R2["Name"] := R3
 26 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["Current"]
 27 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["ToolTip"]
 28 [-]: SETTABLE  R2 K10 R3    ; R2["LocalizedDesc"] := R3
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[0xfc3fed1f]
 31 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
 34 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x91a24e4b]
 35 [-]: GETTABLE  R8 R1 K14    ; R8 := R1["mClipName"]
 36 [-]: LOADK     R9 2         ; R9 := 2.000000
 37 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 38 [-]: GETGLOBAL R7 K12       ; R7 := 0xae91e43b
 39 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0x91a24e4b]
 40 [-]: GETTABLE  R9 R1 K14    ; R9 := R1["mClipName"]
 41 [-]: LOADK     R10 3        ; R10 := 3.000000
 42 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 43 [-]: GETGLOBAL R8 K12       ; R8 := 0xae91e43b
 44 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x91a24e4b]
 45 [-]: GETTABLE  R10 R1 K14   ; R10 := R1["mClipName"]
 46 [-]: LOADK     R11 12       ; R11 := 12.000000
 47 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 48 [-]: SUB       R8 R8 K15    ; R8 := R8 - 50.000000
 49 [-]: GETGLOBAL R9 K12       ; R9 := 0xae91e43b
 50 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0x91a24e4b]
 51 [-]: GETTABLE  R11 R1 K14   ; R11 := R1["mClipName"]
 52 [-]: LOADK     R12 13       ; R12 := 13.000000
 53 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 54 [-]: CALL      R3 0 1       ; R3(R4,...)
 55 [-]: GETGLOBAL R3 K16       ; R3 := _T
 56 [-]: SETTABLE  R3 K17 R2    ; R3["InfoPopup_Data"] := R2
 57 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 3755
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x91a24e4b]
  3 [-]: LOADK     R4 K2        ; R4 := "CosmeticDesc"
  4 [-]: LOADK     R5 34        ; R5 := 34.000000
  5 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  6 [-]: LOADK     R3 0         ; R3 := 0.000000
  7 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
  8 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x5b0290d2]
  9 [-]: LOADK     R6 K4        ; R6 := "EquippedTitle"
 10 [-]: LOADK     R7 11        ; R7 := 11.000000
 11 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 12 [-]: TEST      R4 0         ; if not R4 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 15 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x91a24e4b]
 16 [-]: LOADK     R6 K4        ; R6 := "EquippedTitle"
 17 [-]: LOADK     R7 34        ; R7 := 34.000000
 18 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 19 [-]: MOVE      R3 R4        ; R3 := R4
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K5     ; R4 := R4[0x06d055f9]
 22 [-]: GETGLOBAL R5 K6        ; R5 := 0x7b998233
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: TEST      R5 1         ; if R5 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["LoadOutId"]
 28 [-]: EQ        1 R5 K9      ; if R5 == 0.000000 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 31
 31 [-]: LOADBOOL  R5 1 0       ; R5 := true
 32 [-]: LOADK     R6 425       ; R6 := 425.000000
 33 [-]: LOADK     R7 800       ; R7 := 800.000000
 34 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 35 [-]: GETUPVAL  R5 U1        ; R5 := U1
 36 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mStatCompare"]
 37 [-]: ADD       R6 R2 R3     ; R6 := R2 + R3
 38 [-]: ADD       R6 R6 K12    ; R6 := R6 + 50.000000
 39 [-]: SUB       R6 R4 R6     ; R6 := R4 - R6
 40 [-]: SETTABLE  R5 K11 R6    ; R5["mMaxHeight"] := R6
 41 [-]: GETGLOBAL R5 K6        ; R5 := 0x7b998233
 42 [-]: GETGLOBAL R6 K13       ; R6 := mEvoMovie
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: TEST      R5 1         ; if R5 then PC := 60
 45 [-]: JMP       60           ; PC := 60
 46 [-]: GETGLOBAL R5 K13       ; R5 := mEvoMovie
 47 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5[0xe4162eed]
 48 [-]: LOADK     R7 K15       ; R7 := "ArsenalModeYOffset"
 49 [-]: GETGLOBAL R8 K16       ; R8 := 0x64fb1586
 50 [-]: SUB       R9 R2 K17    ; R9 := R2 - 35.000000
 51 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 52 [-]: CALL      R5 0 1       ; R5(R6,...)
 53 [-]: GETUPVAL  R5 U1        ; R5 := U1
 54 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mStatCompare"]
 55 [-]: GETUPVAL  R6 U1        ; R6 := U1
 56 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["mStatCompare"]
 57 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["mMaxHeight"]
 58 [-]: SUB       R6 R6 K18    ; R6 := R6 - 270.000000
 59 [-]: SETTABLE  R5 K11 R6    ; R5["mMaxHeight"] := R6
 60 [-]: GETUPVAL  R5 U1        ; R5 := U1
 61 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mStatCompare"]
 62 [-]: SETTABLE  R5 K19 R1    ; R5["mStats"] := R1
 63 [-]: GETUPVAL  R5 U1        ; R5 := U1
 64 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mStatCompare"]
 65 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x71e9ac81]
 66 [-]: CALL      R5 2 1       ; R5(R6)
 67 [-]: GETUPVAL  R5 U1        ; R5 := U1
 68 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mStatCompare"]
 69 [-]: GETUPVAL  R6 U1        ; R6 := U1
 70 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["mStatCompare"]
 71 [-]: SELF      R6 R6 K22    ; R7 := R6; R6 := R6[0xf95e8229]
 72 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 73 [-]: SETTABLE  R5 K21 R6    ; R5["mRawHeight"] := R6
 74 [-]: GETUPVAL  R5 U1        ; R5 := U1
 75 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mStatCompare"]
 76 [-]: GETGLOBAL R6 K24       ; R6 := 0x5bced4c4
 77 [-]: GETTABLE  R6 R6 K25    ; R6 := R6[0xac1b386a]
 78 [-]: GETUPVAL  R7 U1        ; R7 := U1
 79 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["mStatCompare"]
 80 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["mRawHeight"]
 81 [-]: GETUPVAL  R8 U1        ; R8 := U1
 82 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["mStatCompare"]
 83 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["mMaxHeight"]
 84 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 85 [-]: SETTABLE  R5 K23 R6    ; R5["mListHeight"] := R6
 86 [-]: GETUPVAL  R5 U1        ; R5 := U1
 87 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mStatCompare"]
 88 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["mListHeight"]
 89 [-]: ADD       R5 R5 K26    ; R5 := R5 + 10.000000
 90 [-]: GETUPVAL  R6 U1        ; R6 := U1
 91 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["mStatCompare"]
 92 [-]: GETUPVAL  R7 U1        ; R7 := U1
 93 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["mStatCompare"]
 94 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mInitListYPos"]
 95 [-]: GETUPVAL  R8 U1        ; R8 := U1
 96 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["mStatCompare"]
 97 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["mListHeight"]
 98 [-]: SUB       R7 R7 R8     ; R7 := R7 - R8
 99 [-]: SETTABLE  R6 K27 R7    ; R6["mListYPos"] := R7
100 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
101 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6[0x67bc869f]
102 [-]: LOADK     R8 K30       ; R8 := "StatContainer.List"
103 [-]: LOADK     R9 1         ; R9 := 1.000000
104 [-]: GETUPVAL  R10 U1       ; R10 := U1
105 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mStatCompare"]
106 [-]: GETTABLE  R10 R10 K27  ; R10 := R10["mListYPos"]
107 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
108 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
109 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6[0x67bc869f]
110 [-]: LOADK     R8 K31       ; R8 := "StatContainer.Mask"
111 [-]: LOADK     R9 1         ; R9 := 1.000000
112 [-]: GETUPVAL  R10 U1       ; R10 := U1
113 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mStatCompare"]
114 [-]: GETTABLE  R10 R10 K27  ; R10 := R10["mListYPos"]
115 [-]: SUB       R10 R10 K32  ; R10 := R10 - 1.000000
116 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
117 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
118 [-]: SELF      R6 R6 K29    ; R7 := R6; R6 := R6[0x67bc869f]
119 [-]: LOADK     R8 K33       ; R8 := "StatContainer.ScrollBarContainer"
120 [-]: LOADK     R9 1         ; R9 := 1.000000
121 [-]: GETUPVAL  R10 U1       ; R10 := U1
122 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mStatCompare"]
123 [-]: GETTABLE  R10 R10 K27  ; R10 := R10["mListYPos"]
124 [-]: SUB       R10 R10 K34  ; R10 := R10 - 5.000000
125 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
126 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
127 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6[0x91a24e4b]
128 [-]: LOADK     R8 K4        ; R8 := "EquippedTitle"
129 [-]: LOADK     R9 34        ; R9 := 34.000000
130 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
131 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
132 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7[0x67bc869f]
133 [-]: LOADK     R9 K4        ; R9 := "EquippedTitle"
134 [-]: LOADK     R10 1        ; R10 := 1.000000
135 [-]: GETUPVAL  R11 U1       ; R11 := U1
136 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["mStatCompare"]
137 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["mContainerYPos"]
138 [-]: ADD       R12 R5 K34   ; R12 := R5 + 5.000000
139 [-]: SUB       R11 R11 R12  ; R11 := R11 - R12
140 [-]: SUB       R11 R11 R6   ; R11 := R11 - R6
141 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
142 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
143 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7[0x67bc869f]
144 [-]: LOADK     R9 K36       ; R9 := "StatContainer.Bg"
145 [-]: LOADK     R10 13       ; R10 := 13.000000
146 [-]: MOVE      R11 R5       ; R11 := R5
147 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
148 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
149 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7[0x67bc869f]
150 [-]: LOADK     R9 K37       ; R9 := "StatContainer.Blurer"
151 [-]: LOADK     R10 13       ; R10 := 13.000000
152 [-]: MOVE      R11 R5       ; R11 := R5
153 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
154 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
155 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7[0x67bc869f]
156 [-]: LOADK     R9 K31       ; R9 := "StatContainer.Mask"
157 [-]: LOADK     R10 13       ; R10 := 13.000000
158 [-]: GETUPVAL  R11 U1       ; R11 := U1
159 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["mStatCompare"]
160 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["mListHeight"]
161 [-]: ADD       R11 R11 K34  ; R11 := R11 + 5.000000
162 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
163 [-]: GETUPVAL  R7 U1        ; R7 := U1
164 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["mStatCompare"]
165 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["mRawHeight"]
166 [-]: GETUPVAL  R8 U1        ; R8 := U1
167 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["mStatCompare"]
168 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["mMaxHeight"]
169 [-]: LT        1 R8 R7      ; if R8 < R7 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 172
172 [-]: LOADBOOL  R7 1 0       ; R7 := true
173 [-]: GETUPVAL  R8 U1        ; R8 := U1
174 [-]: GETTABLE  R8 R8 K38    ; R8 := R8["mStatCompareScrollBar"]
175 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8[0x44aa79ac]
176 [-]: LOADK     R10 0        ; R10 := 0.000000
177 [-]: LOADBOOL  R11 0 0      ; R11 := false
178 [-]: LOADBOOL  R12 1 0      ; R12 := true
179 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
180 [-]: GETUPVAL  R8 U1        ; R8 := U1
181 [-]: GETTABLE  R8 R8 K38    ; R8 := R8["mStatCompareScrollBar"]
182 [-]: SELF      R8 R8 K40    ; R9 := R8; R8 := R8[0x0077d753]
183 [-]: MOVE      R10 R7       ; R10 := R7
184 [-]: CALL      R8 3 1       ; R8(R9,R10)
185 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
186 [-]: SELF      R8 R8 K41    ; R9 := R8; R8 := R8[0xaade900e]
187 [-]: LOADK     R10 K33      ; R10 := "StatContainer.ScrollBarContainer"
188 [-]: LOADK     R11 11       ; R11 := 11.000000
189 [-]: MOVE      R12 R7       ; R12 := R7
190 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
191 [-]: TEST      R7 0         ; if not R7 then PC := 209
192 [-]: JMP       209          ; PC := 209
193 [-]: GETUPVAL  R8 U1        ; R8 := U1
194 [-]: GETTABLE  R8 R8 K38    ; R8 := R8["mStatCompareScrollBar"]
195 [-]: GETUPVAL  R9 U1        ; R9 := U1
196 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mStatCompare"]
197 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["mRawHeight"]
198 [-]: GETUPVAL  R10 U1       ; R10 := U1
199 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mStatCompare"]
200 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mMaxHeight"]
201 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
202 [-]: DIV       R9 K43 R9    ; R9 := 40.000000 / R9
203 [-]: SETTABLE  R8 K42 R9    ; R8["mScrollStep"] := R9
204 [-]: GETUPVAL  R8 U1        ; R8 := U1
205 [-]: GETTABLE  R8 R8 K38    ; R8 := R8["mStatCompareScrollBar"]
206 [-]: SELF      R8 R8 K44    ; R9 := R8; R8 := R8[0x425b8f0d]
207 [-]: MOVE      R10 R5       ; R10 := R5
208 [-]: CALL      R8 3 1       ; R8(R9,R10)
209 [-]: GETUPVAL  R8 U2        ; R8 := U2
210 [-]: CALL      R8 1 1       ; R8()
211 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 3797
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: LOADNIL   R4 R4        ; R4 := nil
  3 [-]: GETUPVAL  R5 U0        ; R5 := U0
  4 [-]: MOVE      R6 R1        ; R6 := R1
  5 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  6 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: EQ        0 R2 K2      ; if R2 ~= 2.000000 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADK     R5 6         ; R5 := 6.000000
 11 [-]: JMP       15           ; PC := 15
 12 [-]: EQ        0 R2 K4      ; if R2 ~= 7.000000 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADK     R5 11        ; R5 := 11.000000
 15 [-]: LOADNIL   R6 R6        ; R6 := nil
 16 [-]: GETGLOBAL R7 K5        ; R7 := _T
 17 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["mMechaSuitMode"]
 18 [-]: TEST      R7 0         ; if not R7 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
 21 [-]: GETGLOBAL R8 K5        ; R8 := _T
 22 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["MechAvatar"]
 23 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 24 [-]: TEST      R7 1         ; if R7 then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: GETGLOBAL R7 K5        ; R7 := _T
 27 [-]: GETTABLE  R6 R7 K8     ; R6 := R7["MechAvatar"]
 28 [-]: JMP       66           ; PC := 66
 29 [-]: GETGLOBAL R7 K5        ; R7 := _T
 30 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["mSpecialSuitMode"]
 31 [-]: TEST      R7 0         ; if not R7 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETGLOBAL R7 K5        ; R7 := _T
 34 [-]: GETTABLE  R6 R7 K10    ; R6 := R7["SpecialSuitAvatar"]
 35 [-]: EQ        0 R1 K11     ; if R1 ~= 5.000000 then PC := 66
 36 [-]: JMP       66           ; PC := 66
 37 [-]: LOADK     R5 3         ; R5 := 3.000000
 38 [-]: JMP       66           ; PC := 66
 39 [-]: GETGLOBAL R7 K5        ; R7 := _T
 40 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["mSentinelMode"]
 41 [-]: TEST      R7 0         ; if not R7 then PC := 55
 42 [-]: JMP       55           ; PC := 55
 43 [-]: GETGLOBAL R7 K5        ; R7 := _T
 44 [-]: GETTABLE  R6 R7 K13    ; R6 := R7["MenuSentinel"]
 45 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
 46 [-]: MOVE      R8 R6        ; R8 := R6
 47 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 48 [-]: TEST      R7 0         ; if not R7 then PC := 66
 49 [-]: JMP       66           ; PC := 66
 50 [-]: GETUPVAL  R7 U1        ; R7 := U1
 51 [-]: GETTABLE  R7 R7 K14    ; R7 := R7[0x0b3c7eed]
 52 [-]: CALL      R7 1 2       ; R7 := R7()
 53 [-]: MOVE      R6 R7        ; R6 := R7
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETGLOBAL R7 K5        ; R7 := _T
 56 [-]: GETTABLE  R6 R7 K15    ; R6 := R7["MenuSuitAvatar"]
 57 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
 58 [-]: MOVE      R8 R6        ; R8 := R6
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: TEST      R7 0         ; if not R7 then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETUPVAL  R7 U1        ; R7 := U1
 63 [-]: GETTABLE  R7 R7 K16    ; R7 := R7[0x6ef45ebc]
 64 [-]: CALL      R7 1 2       ; R7 := R7()
 65 [-]: MOVE      R6 R7        ; R6 := R7
 66 [-]: GETGLOBAL R7 K17       ; R7 := 0x26072944
 67 [-]: EQ        0 R0 R7      ; if R0 ~= R7 then PC := 76
 68 [-]: JMP       76           ; PC := 76
 69 [-]: GETUPVAL  R7 U2        ; R7 := U2
 70 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["KDriveSlot"]
 71 [-]: EQ        0 R1 R7      ; if R1 ~= R7 then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: GETGLOBAL R7 K5        ; R7 := _T
 74 [-]: GETTABLE  R6 R7 K19    ; R6 := R7["KDriveAvatar"]
 75 [-]: LOADK     R5 3         ; R5 := 3.000000
 76 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
 77 [-]: MOVE      R8 R6        ; R8 := R6
 78 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 79 [-]: TEST      R7 1         ; if R7 then PC := 89
 80 [-]: JMP       89           ; PC := 89
 81 [-]: EQ        1 R5 K20     ; if R5 == nil then PC := 89
 82 [-]: JMP       89           ; PC := 89
 83 [-]: SELF      R7 R6 K21    ; R8 := R6; R7 := R6[0xde321e6f]
 84 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 85 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0xe85a2361]
 86 [-]: MOVE      R9 R5        ; R9 := R5
 87 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 88 [-]: MOVE      R4 R7        ; R4 := R7
 89 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
 90 [-]: MOVE      R8 R4        ; R8 := R4
 91 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 92 [-]: TEST      R7 1         ; if R7 then PC := 125
 93 [-]: JMP       125          ; PC := 125
 94 [-]: SELF      R7 R0 K23    ; R8 := R0; R7 := R0[0xf2deaf69]
 95 [-]: GETGLOBAL R9 K24       ; R9 := gLotusHybridWeaponType
 96 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 97 [-]: TEST      R7 0         ; if not R7 then PC := 116
 98 [-]: JMP       116          ; PC := 116
 99 [-]: SELF      R7 R4 K25    ; R8 := R4; R7 := R4[0x53ef4cf8]
100 [-]: CALL      R7 2 2       ; R7 := R7(R8)
101 [-]: GETGLOBAL R8 K7        ; R8 := 0x7b998233
102 [-]: MOVE      R9 R7        ; R9 := R7
103 [-]: CALL      R8 2 2       ; R8 := R8(R9)
104 [-]: TEST      R8 1         ; if R8 then PC := 125
105 [-]: JMP       125          ; PC := 125
106 [-]: SELF      R8 R7 K26    ; R9 := R7; R8 := R7[0xcde10c4a]
107 [-]: CALL      R8 2 2       ; R8 := R8(R9)
108 [-]: EQ        0 R8 R0      ; if R8 ~= R0 then PC := 125
109 [-]: JMP       125          ; PC := 125
110 [-]: GETGLOBAL R8 K27       ; R8 := 0x33bdd652
111 [-]: GETTABLE  R8 R8 K28    ; R8 := R8[0x23d5322f]
112 [-]: MOVE      R9 R3        ; R9 := R3
113 [-]: MOVE      R10 R4       ; R10 := R4
114 [-]: CALL      R8 3 1       ; R8(R9,R10)
115 [-]: JMP       125          ; PC := 125
116 [-]: SELF      R8 R4 K26    ; R9 := R4; R8 := R4[0xcde10c4a]
117 [-]: CALL      R8 2 2       ; R8 := R8(R9)
118 [-]: EQ        0 R8 R0      ; if R8 ~= R0 then PC := 125
119 [-]: JMP       125          ; PC := 125
120 [-]: GETGLOBAL R8 K27       ; R8 := 0x33bdd652
121 [-]: GETTABLE  R8 R8 K28    ; R8 := R8[0x23d5322f]
122 [-]: MOVE      R9 R3        ; R9 := R3
123 [-]: MOVE      R10 R4       ; R10 := R4
124 [-]: CALL      R8 3 1       ; R8(R9,R10)
125 [-]: RETURN    R3 2         ; return R3
126 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 3856
; #Upvalues:       11
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  52

  1 [-]: LOADBOOL  R3 0 0       ; R3 := false
  2 [-]: LOADNIL   R4 R4        ; R4 := nil
  3 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
  4 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0xaade900e]
  5 [-]: LOADK     R7 K2        ; R7 := "StatContainer"
  6 [-]: LOADK     R8 11        ; R8 := 11.000000
  7 [-]: LOADBOOL  R9 1 0       ; R9 := true
  8 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
  9 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 10 [-]: GETGLOBAL R6 K4        ; R6 := 0x25d99d89
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: TEST      R5 1         ; if R5 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: TEST      R5 0         ; if not R5 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["LoadOutType"]
 21 [-]: EQ        1 R5 K7      ; if R5 == 4.000000 then PC := 411
 22 [-]: JMP       411          ; PC := 411
 23 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["LoadOutType"]
 24 [-]: EQ        1 R5 K8      ; if R5 == 6.000000 then PC := 411
 25 [-]: JMP       411          ; PC := 411
 26 [-]: GETUPVAL  R5 U0        ; R5 := U0
 27 [-]: GETUPVAL  R6 U1        ; R6 := U1
 28 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["SWAPPING_ITEM"]
 29 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: GETGLOBAL R5 K10       ; R5 := mSelected
 32 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Element"]
 33 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LoadOutType"]
 34 [-]: EQ        1 R5 K7      ; if R5 == 4.000000 then PC := 411
 35 [-]: JMP       411          ; PC := 411
 36 [-]: GETGLOBAL R5 K10       ; R5 := mSelected
 37 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Element"]
 38 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LoadOutType"]
 39 [-]: EQ        1 R5 K8      ; if R5 == 6.000000 then PC := 411
 40 [-]: JMP       411          ; PC := 411
 41 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["EquippedItem"]
 42 [-]: EQ        1 R5 K13     ; if R5 == nil then PC := 276
 43 [-]: JMP       276          ; PC := 276
 44 [-]: GETUPVAL  R5 U0        ; R5 := U0
 45 [-]: GETUPVAL  R6 U1        ; R6 := U1
 46 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["SWAPPING_ITEM"]
 47 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 115
 48 [-]: JMP       115          ; PC := 115
 49 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["EquippedItem"]
 50 [-]: GETTABLE  R2 R5 K14    ; R2 := R5["mItemType"]
 51 [-]: SELF      R5 R2 K15    ; R6 := R2; R5 := R2[0xf2deaf69]
 52 [-]: GETGLOBAL R7 K16       ; R7 := gLotusHybridWeaponType
 53 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 54 [-]: TEST      R5 0         ; if not R5 then PC := 411
 55 [-]: JMP       411          ; PC := 411
 56 [-]: GETGLOBAL R5 K10       ; R5 := mSelected
 57 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Item"]
 58 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["Type"]
 59 [-]: GETGLOBAL R6 K10       ; R6 := mSelected
 60 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["Element"]
 61 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["Type"]
 62 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 411
 63 [-]: JMP       411          ; PC := 411
 64 [-]: GETGLOBAL R5 K10       ; R5 := mSelected
 65 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Item"]
 66 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["mPurchasedInfo"]
 67 [-]: TEST      R5 0         ; if not R5 then PC := 411
 68 [-]: JMP       411          ; PC := 411
 69 [-]: GETGLOBAL R5 K10       ; R5 := mSelected
 70 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Item"]
 71 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["mPurchasedInfo"]
 72 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["UID"]
 73 [-]: GETGLOBAL R6 K10       ; R6 := mSelected
 74 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["Element"]
 75 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["UID"]
 76 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 411
 77 [-]: JMP       411          ; PC := 411
 78 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 79 [-]: GETGLOBAL R6 K10       ; R6 := mSelected
 80 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["Element"]
 81 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["LoadOutId"]
 82 [-]: SETTABLE  R5 K21 R6    ; R5["LoadOutId"] := R6
 83 [-]: GETGLOBAL R6 K10       ; R6 := mSelected
 84 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["Element"]
 85 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["LoadOutType"]
 86 [-]: SETTABLE  R5 K5 R6     ; R5["LoadOutType"] := R6
 87 [-]: GETUPVAL  R6 U2        ; R6 := U2
 88 [-]: GETTABLE  R7 R5 K21    ; R7 := R5["LoadOutId"]
 89 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 90 [-]: TEST      R6 1         ; if R6 then PC := 94
 91 [-]: JMP       94           ; PC := 94
 92 [-]: LOADNIL   R7 R7        ; R7 := nil
 93 [-]: RETURN    R7 2         ; return R7
 94 [-]: GETGLOBAL R7 K22       ; R7 := _T
 95 [-]: GETTABLE  R4 R7 K23    ; R4 := R7["MenuSuitAvatar"]
 96 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xde321e6f]
 97 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 98 [-]: SELF      R7 R7 K25    ; R8 := R7; R7 := R7[0xab8f64c8]
 99 [-]: GETGLOBAL R9 K4        ; R9 := 0x25d99d89
100 [-]: SELF      R9 R9 K26    ; R10 := R9; R9 := R9[0x62c81b76]
101 [-]: CALL      R9 2 2       ; R9 := R9(R10)
102 [-]: GETTABLE  R10 R5 K5    ; R10 := R5["LoadOutType"]
103 [-]: GETTABLE  R11 R5 K21   ; R11 := R5["LoadOutId"]
104 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
105 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xde321e6f]
106 [-]: CALL      R7 2 2       ; R7 := R7(R8)
107 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7[0xe85a2361]
108 [-]: MOVE      R9 R6        ; R9 := R6
109 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
110 [-]: MOVE      R2 R7        ; R2 := R7
111 [-]: SELF      R7 R2 K28    ; R8 := R2; R7 := R2[0xcde10c4a]
112 [-]: CALL      R7 2 2       ; R7 := R7(R8)
113 [-]: MOVE      R2 R7        ; R2 := R7
114 [-]: JMP       411          ; PC := 411
115 [-]: GETGLOBAL R7 K22       ; R7 := _T
116 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["mMechaSuitMode"]
117 [-]: TEST      R7 0         ; if not R7 then PC := 128
118 [-]: JMP       128          ; PC := 128
119 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
120 [-]: GETGLOBAL R8 K22       ; R8 := _T
121 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["MechAvatar"]
122 [-]: CALL      R7 2 2       ; R7 := R7(R8)
123 [-]: TEST      R7 1         ; if R7 then PC := 128
124 [-]: JMP       128          ; PC := 128
125 [-]: GETGLOBAL R7 K22       ; R7 := _T
126 [-]: GETTABLE  R4 R7 K30    ; R4 := R7["MechAvatar"]
127 [-]: JMP       130          ; PC := 130
128 [-]: GETGLOBAL R7 K22       ; R7 := _T
129 [-]: GETTABLE  R4 R7 K23    ; R4 := R7["MenuSuitAvatar"]
130 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["LoadOutType"]
131 [-]: EQ        0 R7 K31     ; if R7 ~= 1.000000 then PC := 167
132 [-]: JMP       167          ; PC := 167
133 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
134 [-]: GETGLOBAL R8 K22       ; R8 := _T
135 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["MenuSuitAvatar"]
136 [-]: CALL      R7 2 2       ; R7 := R7(R8)
137 [-]: TEST      R7 1         ; if R7 then PC := 146
138 [-]: JMP       146          ; PC := 146
139 [-]: GETGLOBAL R7 K22       ; R7 := _T
140 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["MenuSuitAvatar"]
141 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7[0xde321e6f]
142 [-]: CALL      R7 2 2       ; R7 := R7(R8)
143 [-]: SELF      R7 R7 K32    ; R8 := R7; R7 := R7[0x2676deee]
144 [-]: CALL      R7 2 2       ; R7 := R7(R8)
145 [-]: MOVE      R4 R7        ; R4 := R7
146 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
147 [-]: MOVE      R8 R4        ; R8 := R4
148 [-]: CALL      R7 2 2       ; R7 := R7(R8)
149 [-]: TEST      R7 1         ; if R7 then PC := 411
150 [-]: JMP       411          ; PC := 411
151 [-]: GETTABLE  R7 R0 K21    ; R7 := R0["LoadOutId"]
152 [-]: EQ        0 R7 K33     ; if R7 ~= 0.000000 then PC := 160
153 [-]: JMP       160          ; PC := 160
154 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xde321e6f]
155 [-]: CALL      R7 2 2       ; R7 := R7(R8)
156 [-]: SELF      R7 R7 K34    ; R8 := R7; R7 := R7[0xf7d48ee0]
157 [-]: CALL      R7 2 2       ; R7 := R7(R8)
158 [-]: MOVE      R2 R7        ; R2 := R7
159 [-]: JMP       411          ; PC := 411
160 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xde321e6f]
161 [-]: CALL      R7 2 2       ; R7 := R7(R8)
162 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7[0xe85a2361]
163 [-]: LOADK     R9 1         ; R9 := 1.000000
164 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
165 [-]: MOVE      R2 R7        ; R2 := R7
166 [-]: JMP       411          ; PC := 411
167 [-]: GETTABLE  R7 R0 K21    ; R7 := R0["LoadOutId"]
168 [-]: EQ        0 R7 K33     ; if R7 ~= 0.000000 then PC := 190
169 [-]: JMP       190          ; PC := 190
170 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
171 [-]: MOVE      R8 R4        ; R8 := R4
172 [-]: CALL      R7 2 2       ; R7 := R7(R8)
173 [-]: TEST      R7 1         ; if R7 then PC := 411
174 [-]: JMP       411          ; PC := 411
175 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["LoadOutType"]
176 [-]: EQ        0 R7 K36     ; if R7 ~= 2.000000 then PC := 184
177 [-]: JMP       184          ; PC := 184
178 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xde321e6f]
179 [-]: CALL      R7 2 2       ; R7 := R7(R8)
180 [-]: SELF      R7 R7 K37    ; R8 := R7; R7 := R7[0x2303a280]
181 [-]: CALL      R7 2 2       ; R7 := R7(R8)
182 [-]: MOVE      R2 R7        ; R2 := R7
183 [-]: JMP       411          ; PC := 411
184 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xde321e6f]
185 [-]: CALL      R7 2 2       ; R7 := R7(R8)
186 [-]: SELF      R7 R7 K34    ; R8 := R7; R7 := R7[0xf7d48ee0]
187 [-]: CALL      R7 2 2       ; R7 := R7(R8)
188 [-]: MOVE      R2 R7        ; R2 := R7
189 [-]: JMP       411          ; PC := 411
190 [-]: GETGLOBAL R7 K22       ; R7 := _T
191 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["mSpecialSuitMode"]
192 [-]: TEST      R7 0         ; if not R7 then PC := 222
193 [-]: JMP       222          ; PC := 222
194 [-]: GETGLOBAL R7 K22       ; R7 := _T
195 [-]: GETTABLE  R4 R7 K39    ; R4 := R7["SpecialSuitAvatar"]
196 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
197 [-]: MOVE      R8 R4        ; R8 := R4
198 [-]: CALL      R7 2 2       ; R7 := R7(R8)
199 [-]: TEST      R7 1         ; if R7 then PC := 411
200 [-]: JMP       411          ; PC := 411
201 [-]: GETTABLE  R7 R0 K21    ; R7 := R0["LoadOutId"]
202 [-]: EQ        0 R7 K40     ; if R7 ~= 5.000000 then PC := 210
203 [-]: JMP       210          ; PC := 210
204 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xde321e6f]
205 [-]: CALL      R7 2 2       ; R7 := R7(R8)
206 [-]: SELF      R7 R7 K34    ; R8 := R7; R7 := R7[0xf7d48ee0]
207 [-]: CALL      R7 2 2       ; R7 := R7(R8)
208 [-]: MOVE      R2 R7        ; R2 := R7
209 [-]: JMP       411          ; PC := 411
210 [-]: GETUPVAL  R7 U2        ; R7 := U2
211 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["LoadOutId"]
212 [-]: CALL      R7 2 2       ; R7 := R7(R8)
213 [-]: TEST      R7 0         ; if not R7 then PC := 411
214 [-]: JMP       411          ; PC := 411
215 [-]: SELF      R8 R4 K24    ; R9 := R4; R8 := R4[0xde321e6f]
216 [-]: CALL      R8 2 2       ; R8 := R8(R9)
217 [-]: SELF      R8 R8 K27    ; R9 := R8; R8 := R8[0xe85a2361]
218 [-]: MOVE      R10 R7       ; R10 := R7
219 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
220 [-]: MOVE      R2 R8        ; R2 := R8
221 [-]: JMP       411          ; PC := 411
222 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["LoadOutId"]
223 [-]: EQ        0 R8 K7      ; if R8 ~= 4.000000 then PC := 237
224 [-]: JMP       237          ; PC := 237
225 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
226 [-]: MOVE      R9 R4        ; R9 := R4
227 [-]: CALL      R8 2 2       ; R8 := R8(R9)
228 [-]: TEST      R8 1         ; if R8 then PC := 411
229 [-]: JMP       411          ; PC := 411
230 [-]: SELF      R8 R4 K24    ; R9 := R4; R8 := R4[0xde321e6f]
231 [-]: CALL      R8 2 2       ; R8 := R8(R9)
232 [-]: SELF      R8 R8 K27    ; R9 := R8; R8 := R8[0xe85a2361]
233 [-]: LOADK     R10 10       ; R10 := 10.000000
234 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
235 [-]: MOVE      R2 R8        ; R2 := R8
236 [-]: JMP       411          ; PC := 411
237 [-]: GETUPVAL  R8 U2        ; R8 := U2
238 [-]: GETTABLE  R9 R0 K21    ; R9 := R0["LoadOutId"]
239 [-]: CALL      R8 2 2       ; R8 := R8(R9)
240 [-]: TEST      R8 1         ; if R8 then PC := 244
241 [-]: JMP       244          ; PC := 244
242 [-]: LOADNIL   R9 R9        ; R9 := nil
243 [-]: RETURN    R9 2         ; return R9
244 [-]: GETGLOBAL R9 K3        ; R9 := 0x7b998233
245 [-]: MOVE      R10 R4       ; R10 := R4
246 [-]: CALL      R9 2 2       ; R9 := R9(R10)
247 [-]: TEST      R9 1         ; if R9 then PC := 255
248 [-]: JMP       255          ; PC := 255
249 [-]: SELF      R9 R4 K24    ; R10 := R4; R9 := R4[0xde321e6f]
250 [-]: CALL      R9 2 2       ; R9 := R9(R10)
251 [-]: SELF      R9 R9 K27    ; R10 := R9; R9 := R9[0xe85a2361]
252 [-]: MOVE      R11 R8       ; R11 := R8
253 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
254 [-]: MOVE      R2 R9        ; R2 := R9
255 [-]: GETGLOBAL R9 K3        ; R9 := 0x7b998233
256 [-]: MOVE      R10 R2       ; R10 := R2
257 [-]: CALL      R9 2 2       ; R9 := R9(R10)
258 [-]: TEST      R9 1         ; if R9 then PC := 411
259 [-]: JMP       411          ; PC := 411
260 [-]: SELF      R9 R2 K15    ; R10 := R2; R9 := R2[0xf2deaf69]
261 [-]: GETGLOBAL R11 K16      ; R11 := gLotusHybridWeaponType
262 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
263 [-]: TEST      R9 0         ; if not R9 then PC := 411
264 [-]: JMP       411          ; PC := 411
265 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["EquippedItem"]
266 [-]: SELF      R9 R9 K41    ; R10 := R9; R9 := R9[0x111df904]
267 [-]: MOVE      R11 R4       ; R11 := R4
268 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
269 [-]: GETGLOBAL R10 K3       ; R10 := 0x7b998233
270 [-]: MOVE      R11 R9       ; R11 := R9
271 [-]: CALL      R10 2 2      ; R10 := R10(R11)
272 [-]: TEST      R10 1        ; if R10 then PC := 411
273 [-]: JMP       411          ; PC := 411
274 [-]: MOVE      R2 R9        ; R2 := R9
275 [-]: JMP       411          ; PC := 411
276 [-]: GETTABLE  R10 R0 K42   ; R10 := R0["mStoreItem"]
277 [-]: EQ        1 R10 K13    ; if R10 == nil then PC := 411
278 [-]: JMP       411          ; PC := 411
279 [-]: GETTABLE  R10 R0 K42   ; R10 := R0["mStoreItem"]
280 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10[0xf278f8a1]
281 [-]: CALL      R10 2 2      ; R10 := R10(R11)
282 [-]: MOVE      R2 R10       ; R2 := R10
283 [-]: SELF      R10 R2 K15   ; R11 := R2; R10 := R2[0xf2deaf69]
284 [-]: GETGLOBAL R12 K16      ; R12 := gLotusHybridWeaponType
285 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
286 [-]: TEST      R10 0        ; if not R10 then PC := 411
287 [-]: JMP       411          ; PC := 411
288 [-]: GETTABLE  R10 R0 K19   ; R10 := R0["mPurchasedInfo"]
289 [-]: TEST      R10 0        ; if not R10 then PC := 389
290 [-]: JMP       389          ; PC := 389
291 [-]: GETGLOBAL R10 K22      ; R10 := _T
292 [-]: GETTABLE  R4 R10 K23   ; R4 := R10["MenuSuitAvatar"]
293 [-]: NEWTABLE  R10 0 0      ; R10 := {}
294 [-]: GETTABLE  R11 R0 K19   ; R11 := R0["mPurchasedInfo"]
295 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["UID"]
296 [-]: SETTABLE  R10 K20 R11  ; R10["UID"] := R11
297 [-]: SETTABLE  R10 K44 K33  ; R10["mModSlot"] := 0.000000
298 [-]: SETTABLE  R10 K45 K33  ; R10["mCustSlot"] := 0.000000
299 [-]: GETGLOBAL R11 K10      ; R11 := mSelected
300 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["Element"]
301 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["LoadOutId"]
302 [-]: SETTABLE  R10 K21 R11  ; R10["LoadOutId"] := R11
303 [-]: GETGLOBAL R11 K10      ; R11 := mSelected
304 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["Element"]
305 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["LoadOutType"]
306 [-]: SETTABLE  R10 K5 R11   ; R10["LoadOutType"] := R11
307 [-]: GETUPVAL  R11 U2       ; R11 := U2
308 [-]: GETTABLE  R12 R10 K21  ; R12 := R10["LoadOutId"]
309 [-]: CALL      R11 2 2      ; R11 := R11(R12)
310 [-]: TEST      R11 1        ; if R11 then PC := 314
311 [-]: JMP       314          ; PC := 314
312 [-]: LOADNIL   R12 R12      ; R12 := nil
313 [-]: RETURN    R12 2        ; return R12
314 [-]: GETGLOBAL R12 K46      ; R12 := mCurrentLoadout
315 [-]: GETTABLE  R13 R10 K5   ; R13 := R10["LoadOutType"]
316 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
317 [-]: SELF      R12 R12 K47  ; R13 := R12; R12 := R12[0x2abbe722]
318 [-]: GETTABLE  R14 R10 K21  ; R14 := R10["LoadOutId"]
319 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
320 [-]: NEWTABLE  R13 0 3      ; R13 := {}
321 [-]: GETTABLE  R14 R12 K48  ; R14 := R12["mItemId"]
322 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["mId"]
323 [-]: SETTABLE  R13 K20 R14  ; R13["UID"] := R14
324 [-]: GETTABLE  R14 R12 K44  ; R14 := R12["mModSlot"]
325 [-]: SETTABLE  R13 K44 R14  ; R13["mModSlot"] := R14
326 [-]: GETTABLE  R14 R12 K45  ; R14 := R12["mCustSlot"]
327 [-]: SETTABLE  R13 K45 R14  ; R13["mCustSlot"] := R14
328 [-]: GETTABLE  R14 R12 K48  ; R14 := R12["mItemId"]
329 [-]: GETTABLE  R15 R10 K20  ; R15 := R10["UID"]
330 [-]: SETTABLE  R14 K49 R15  ; R14["mId"] := R15
331 [-]: GETTABLE  R14 R10 K44  ; R14 := R10["mModSlot"]
332 [-]: SETTABLE  R12 K44 R14  ; R12["mModSlot"] := R14
333 [-]: GETTABLE  R14 R10 K45  ; R14 := R10["mCustSlot"]
334 [-]: SETTABLE  R12 K45 R14  ; R12["mCustSlot"] := R14
335 [-]: GETGLOBAL R14 K46      ; R14 := mCurrentLoadout
336 [-]: GETTABLE  R15 R10 K5   ; R15 := R10["LoadOutType"]
337 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
338 [-]: SELF      R14 R14 K50  ; R15 := R14; R14 := R14[0xffca321e]
339 [-]: GETTABLE  R16 R10 K21  ; R16 := R10["LoadOutId"]
340 [-]: MOVE      R17 R12      ; R17 := R12
341 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
342 [-]: GETGLOBAL R14 K4       ; R14 := 0x25d99d89
343 [-]: SELF      R14 R14 K51  ; R15 := R14; R14 := R14[0x400b84a1]
344 [-]: GETTABLE  R16 R10 K5   ; R16 := R10["LoadOutType"]
345 [-]: GETGLOBAL R17 K46      ; R17 := mCurrentLoadout
346 [-]: GETTABLE  R18 R10 K5   ; R18 := R10["LoadOutType"]
347 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
348 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
349 [-]: SELF      R14 R4 K24   ; R15 := R4; R14 := R4[0xde321e6f]
350 [-]: CALL      R14 2 2      ; R14 := R14(R15)
351 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0xab8f64c8]
352 [-]: GETGLOBAL R16 K4       ; R16 := 0x25d99d89
353 [-]: SELF      R16 R16 K26  ; R17 := R16; R16 := R16[0x62c81b76]
354 [-]: CALL      R16 2 2      ; R16 := R16(R17)
355 [-]: GETTABLE  R17 R10 K5   ; R17 := R10["LoadOutType"]
356 [-]: GETTABLE  R18 R10 K21  ; R18 := R10["LoadOutId"]
357 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
358 [-]: SELF      R14 R4 K24   ; R15 := R4; R14 := R4[0xde321e6f]
359 [-]: CALL      R14 2 2      ; R14 := R14(R15)
360 [-]: SELF      R14 R14 K27  ; R15 := R14; R14 := R14[0xe85a2361]
361 [-]: MOVE      R16 R11      ; R16 := R11
362 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
363 [-]: MOVE      R2 R14       ; R2 := R14
364 [-]: SELF      R14 R2 K28   ; R15 := R2; R14 := R2[0xcde10c4a]
365 [-]: CALL      R14 2 2      ; R14 := R14(R15)
366 [-]: MOVE      R2 R14       ; R2 := R14
367 [-]: GETTABLE  R14 R12 K48  ; R14 := R12["mItemId"]
368 [-]: GETTABLE  R15 R13 K20  ; R15 := R13["UID"]
369 [-]: SETTABLE  R14 K49 R15  ; R14["mId"] := R15
370 [-]: GETTABLE  R14 R13 K44  ; R14 := R13["mModSlot"]
371 [-]: SETTABLE  R12 K44 R14  ; R12["mModSlot"] := R14
372 [-]: GETTABLE  R14 R13 K45  ; R14 := R13["mCustSlot"]
373 [-]: SETTABLE  R12 K45 R14  ; R12["mCustSlot"] := R14
374 [-]: GETGLOBAL R14 K46      ; R14 := mCurrentLoadout
375 [-]: GETTABLE  R15 R10 K5   ; R15 := R10["LoadOutType"]
376 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
377 [-]: SELF      R14 R14 K50  ; R15 := R14; R14 := R14[0xffca321e]
378 [-]: GETTABLE  R16 R10 K21  ; R16 := R10["LoadOutId"]
379 [-]: MOVE      R17 R12      ; R17 := R12
380 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
381 [-]: GETGLOBAL R14 K4       ; R14 := 0x25d99d89
382 [-]: SELF      R14 R14 K51  ; R15 := R14; R14 := R14[0x400b84a1]
383 [-]: GETTABLE  R16 R10 K5   ; R16 := R10["LoadOutType"]
384 [-]: GETGLOBAL R17 K46      ; R17 := mCurrentLoadout
385 [-]: GETTABLE  R18 R10 K5   ; R18 := R10["LoadOutType"]
386 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
387 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
388 [-]: JMP       411          ; PC := 411
389 [-]: GETGLOBAL R14 K52      ; R14 := 0x89326c93
390 [-]: SELF      R14 R14 K53  ; R15 := R14; R14 := R14[0x765dad71]
391 [-]: GETGLOBAL R16 K54      ; R16 := 0x88efc25e
392 [-]: MOVE      R17 R2       ; R17 := R2
393 [-]: CALL      R16 2 2      ; R16 := R16(R17)
394 [-]: GETGLOBAL R17 K22      ; R17 := _T
395 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["MenuSuitAvatar"]
396 [-]: GETUPVAL  R18 U3       ; R18 := U3
397 [-]: CALL      R18 1 0      ; R18,... := R18()
398 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
399 [-]: GETGLOBAL R15 K3       ; R15 := 0x7b998233
400 [-]: MOVE      R16 R14      ; R16 := R14
401 [-]: CALL      R15 2 2      ; R15 := R15(R16)
402 [-]: TEST      R15 1        ; if R15 then PC := 411
403 [-]: JMP       411          ; PC := 411
404 [-]: SELF      R15 R14 K55  ; R16 := R14; R15 := R14[0x18d9daed]
405 [-]: CALL      R15 2 2      ; R15 := R15(R16)
406 [-]: MOVE      R2 R15       ; R2 := R15
407 [-]: GETGLOBAL R15 K52      ; R15 := 0x89326c93
408 [-]: SELF      R15 R15 K56  ; R16 := R15; R15 := R15[0x59c96e77]
409 [-]: MOVE      R17 R14      ; R17 := R14
410 [-]: CALL      R15 3 1      ; R15(R16,R17)
411 [-]: GETGLOBAL R15 K3       ; R15 := 0x7b998233
412 [-]: MOVE      R16 R2       ; R16 := R2
413 [-]: CALL      R15 2 2      ; R15 := R15(R16)
414 [-]: TEST      R15 0        ; if not R15 then PC := 458
415 [-]: JMP       458          ; PC := 458
416 [-]: LOADK     R15 1        ; R15 := 1.000000
417 [-]: LOADK     R16 4        ; R16 := 4.000000
418 [-]: LOADK     R17 1        ; R17 := 1.000000
419 [-]: FORPREP   R15 438      ; R15 -= R17; PC := 438
420 [-]: GETGLOBAL R19 K57      ; R19 := 0x25312c9b
421 [-]: GETGLOBAL R20 K0       ; R20 := 0xae91e43b
422 [-]: LOADK     R21 K58      ; R21 := "Ability"
423 [-]: MOVE      R22 R18      ; R22 := R18
424 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
425 [-]: LOADK     R22 8        ; R22 := 8.000000
426 [-]: NEWTABLE  R23 1 0      ; R23 := {}
427 [-]: LOADK     R24 10       ; R24 := 10.000000
428 [-]: SETLIST   R23 1 1      ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 1
429 [-]: NEWTABLE  R24 1 0      ; R24 := {}
430 [-]: LOADK     R25 0        ; R25 := 0.000000
431 [-]: SETLIST   R24 1 1      ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 1
432 [-]: LOADK     R25 K60      ; R25 := 0.200000
433 [-]: LOADK     R26 0        ; R26 := 0.000000
434 [-]: CLOSURE   R27 0        ; R27 := closure(Function #68.1)
435 [-]: MOVE      R0 R18       ; R0 := R18
436 [-]: CALL      R19 9 1      ; R19(R20,R21,R22,R23,R24,R25,R26,R27)
437 [-]: CLOSE     R18          ; SAVE R18,...
438 [-]: FORLOOP   R15 420      ; R15 += R17; if R15 <= R16 then begin PC := 420; R18 := R15 end
439 [-]: GETGLOBAL R18 K0       ; R18 := 0xae91e43b
440 [-]: SELF      R18 R18 K61  ; R19 := R18; R18 := R18[0x5f56eeab]
441 [-]: LOADK     R20 K62      ; R20 := "CosmeticDesc"
442 [-]: LOADK     R21 29       ; R21 := 29.000000
443 [-]: LOADK     R22 K63      ; R22 := ""
444 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
445 [-]: GETGLOBAL R18 K0       ; R18 := 0xae91e43b
446 [-]: SELF      R18 R18 K1   ; R19 := R18; R18 := R18[0xaade900e]
447 [-]: LOADK     R20 K2       ; R20 := "StatContainer"
448 [-]: LOADK     R21 11       ; R21 := 11.000000
449 [-]: LOADBOOL  R22 0 0      ; R22 := false
450 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
451 [-]: GETGLOBAL R18 K0       ; R18 := 0xae91e43b
452 [-]: SELF      R18 R18 K1   ; R19 := R18; R18 := R18[0xaade900e]
453 [-]: LOADK     R20 K64      ; R20 := "EquippedTitle"
454 [-]: LOADK     R21 11       ; R21 := 11.000000
455 [-]: LOADBOOL  R22 0 0      ; R22 := false
456 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
457 [-]: RETURN    R0 1         ; return 
458 [-]: LOADBOOL  R18 0 0      ; R18 := false
459 [-]: GETGLOBAL R19 K65      ; R19 := 0x6728fd22
460 [-]: MOVE      R20 R2       ; R20 := R2
461 [-]: CALL      R19 2 2      ; R19 := R19(R20)
462 [-]: TEST      R19 0        ; if not R19 then PC := 650
463 [-]: JMP       650          ; PC := 650
464 [-]: GETGLOBAL R19 K10      ; R19 := mSelected
465 [-]: GETTABLE  R19 R19 K11  ; R19 := R19["Element"]
466 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["LoadOutId"]
467 [-]: EQ        1 R19 K33    ; if R19 == 0.000000 then PC := 528
468 [-]: JMP       528          ; PC := 528
469 [-]: GETGLOBAL R19 K52      ; R19 := 0x89326c93
470 [-]: SELF      R19 R19 K53  ; R20 := R19; R19 := R19[0x765dad71]
471 [-]: GETGLOBAL R21 K54      ; R21 := 0x88efc25e
472 [-]: MOVE      R22 R2       ; R22 := R2
473 [-]: CALL      R21 2 2      ; R21 := R21(R22)
474 [-]: GETGLOBAL R22 K22      ; R22 := _T
475 [-]: GETTABLE  R22 R22 K23  ; R22 := R22["MenuSuitAvatar"]
476 [-]: GETUPVAL  R23 U3       ; R23 := U3
477 [-]: CALL      R23 1 0      ; R23,... := R23()
478 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
479 [-]: MOVE      R2 R19       ; R2 := R19
480 [-]: GETGLOBAL R19 K3       ; R19 := 0x7b998233
481 [-]: MOVE      R20 R2       ; R20 := R2
482 [-]: CALL      R19 2 2      ; R19 := R19(R20)
483 [-]: TEST      R19 1        ; if R19 then PC := 526
484 [-]: JMP       526          ; PC := 526
485 [-]: SELF      R19 R2 K66   ; R20 := R2; R19 := R2[0x054e3c19]
486 [-]: GETGLOBAL R21 K22      ; R21 := _T
487 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["MenuSuitAvatar"]
488 [-]: CALL      R19 3 1      ; R19(R20,R21)
489 [-]: GETTABLE  R19 R0 K12   ; R19 := R0["EquippedItem"]
490 [-]: EQ        1 R19 K13    ; if R19 == nil then PC := 506
491 [-]: JMP       506          ; PC := 506
492 [-]: GETTABLE  R19 R0 K12   ; R19 := R0["EquippedItem"]
493 [-]: GETTABLE  R19 R19 K67  ; R19 := R19["mModularParts"]
494 [-]: LEN       R19 R19      ; R19 := # R19
495 [-]: LT        0 K33 R19    ; if 0.000000 >= R19 then PC := 526
496 [-]: JMP       526          ; PC := 526
497 [-]: SELF      R19 R2 K68   ; R20 := R2; R19 := R2[0xa6101f7e]
498 [-]: GETTABLE  R21 R0 K12   ; R21 := R0["EquippedItem"]
499 [-]: GETTABLE  R21 R21 K67  ; R21 := R21["mModularParts"]
500 [-]: GETTABLE  R22 R0 K12   ; R22 := R0["EquippedItem"]
501 [-]: SELF      R22 R22 K69  ; R23 := R22; R22 := R22[0xdbfbf6c0]
502 [-]: LOADK     R24 3        ; R24 := 3.000000
503 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
504 [-]: CALL      R19 0 1      ; R19(R20,...)
505 [-]: JMP       526          ; PC := 526
506 [-]: GETTABLE  R19 R0 K42   ; R19 := R0["mStoreItem"]
507 [-]: EQ        1 R19 K13    ; if R19 == nil then PC := 526
508 [-]: JMP       526          ; PC := 526
509 [-]: GETTABLE  R19 R0 K67   ; R19 := R0["mModularParts"]
510 [-]: LEN       R19 R19      ; R19 := # R19
511 [-]: LT        0 K33 R19    ; if 0.000000 >= R19 then PC := 526
512 [-]: JMP       526          ; PC := 526
513 [-]: GETUPVAL  R19 U4       ; R19 := U4
514 [-]: GETTABLE  R19 R19 K70  ; R19 := R19[0x06d055f9]
515 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
516 [-]: GETTABLE  R21 R0 K71   ; R21 := R0["mGild"]
517 [-]: CALL      R20 2 2      ; R20 := R20(R21)
518 [-]: NOT       R20 R20      ; R20 := not R20
519 [-]: GETTABLE  R21 R0 K71   ; R21 := R0["mGild"]
520 [-]: LOADBOOL  R22 0 0      ; R22 := false
521 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
522 [-]: SELF      R20 R2 K68   ; R21 := R2; R20 := R2[0xa6101f7e]
523 [-]: GETTABLE  R22 R0 K67   ; R22 := R0["mModularParts"]
524 [-]: MOVE      R23 R19      ; R23 := R19
525 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
526 [-]: LOADBOOL  R18 1 0      ; R18 := true
527 [-]: JMP       650          ; PC := 650
528 [-]: SELF      R20 R2 K15   ; R21 := R2; R20 := R2[0xf2deaf69]
529 [-]: GETGLOBAL R22 K72      ; R22 := 0x88980f4f
530 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
531 [-]: TEST      R20 1        ; if R20 then PC := 538
532 [-]: JMP       538          ; PC := 538
533 [-]: SELF      R20 R2 K15   ; R21 := R2; R20 := R2[0xf2deaf69]
534 [-]: GETGLOBAL R22 K73      ; R22 := 0xb506ff82
535 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
536 [-]: TEST      R20 0        ; if not R20 then PC := 571
537 [-]: JMP       571          ; PC := 571
538 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
539 [-]: GETGLOBAL R21 K22      ; R21 := _T
540 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["MenuSuitAvatar"]
541 [-]: CALL      R20 2 2      ; R20 := R20(R21)
542 [-]: TEST      R20 1        ; if R20 then PC := 571
543 [-]: JMP       571          ; PC := 571
544 [-]: GETGLOBAL R20 K22      ; R20 := _T
545 [-]: GETTABLE  R20 R20 K23  ; R20 := R20["MenuSuitAvatar"]
546 [-]: SELF      R20 R20 K24  ; R21 := R20; R20 := R20[0xde321e6f]
547 [-]: CALL      R20 2 2      ; R20 := R20(R21)
548 [-]: SELF      R20 R20 K32  ; R21 := R20; R20 := R20[0x2676deee]
549 [-]: CALL      R20 2 2      ; R20 := R20(R21)
550 [-]: MOVE      R4 R20       ; R4 := R20
551 [-]: GETGLOBAL R20 K52      ; R20 := 0x89326c93
552 [-]: SELF      R20 R20 K53  ; R21 := R20; R20 := R20[0x765dad71]
553 [-]: GETGLOBAL R22 K54      ; R22 := 0x88efc25e
554 [-]: MOVE      R23 R2       ; R23 := R2
555 [-]: CALL      R22 2 2      ; R22 := R22(R23)
556 [-]: MOVE      R23 R4       ; R23 := R4
557 [-]: GETUPVAL  R24 U3       ; R24 := U3
558 [-]: CALL      R24 1 0      ; R24,... := R24()
559 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
560 [-]: MOVE      R2 R20       ; R2 := R20
561 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
562 [-]: MOVE      R21 R2       ; R21 := R2
563 [-]: CALL      R20 2 2      ; R20 := R20(R21)
564 [-]: TEST      R20 1        ; if R20 then PC := 569
565 [-]: JMP       569          ; PC := 569
566 [-]: SELF      R20 R2 K66   ; R21 := R2; R20 := R2[0x054e3c19]
567 [-]: MOVE      R22 R4       ; R22 := R4
568 [-]: CALL      R20 3 1      ; R20(R21,R22)
569 [-]: LOADBOOL  R18 1 0      ; R18 := true
570 [-]: JMP       608          ; PC := 608
571 [-]: SELF      R20 R2 K15   ; R21 := R2; R20 := R2[0xf2deaf69]
572 [-]: GETGLOBAL R22 K74      ; R22 := 0x3219bb07
573 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
574 [-]: TEST      R20 0        ; if not R20 then PC := 604
575 [-]: JMP       604          ; PC := 604
576 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
577 [-]: GETGLOBAL R21 K22      ; R21 := _T
578 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["MenuSuitAvatar"]
579 [-]: CALL      R20 2 2      ; R20 := R20(R21)
580 [-]: TEST      R20 1        ; if R20 then PC := 604
581 [-]: JMP       604          ; PC := 604
582 [-]: GETGLOBAL R20 K52      ; R20 := 0x89326c93
583 [-]: SELF      R20 R20 K53  ; R21 := R20; R20 := R20[0x765dad71]
584 [-]: GETGLOBAL R22 K54      ; R22 := 0x88efc25e
585 [-]: MOVE      R23 R2       ; R23 := R2
586 [-]: CALL      R22 2 2      ; R22 := R22(R23)
587 [-]: GETGLOBAL R23 K22      ; R23 := _T
588 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["MenuSuitAvatar"]
589 [-]: GETUPVAL  R24 U3       ; R24 := U3
590 [-]: CALL      R24 1 0      ; R24,... := R24()
591 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
592 [-]: MOVE      R2 R20       ; R2 := R20
593 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
594 [-]: MOVE      R21 R2       ; R21 := R2
595 [-]: CALL      R20 2 2      ; R20 := R20(R21)
596 [-]: TEST      R20 1        ; if R20 then PC := 602
597 [-]: JMP       602          ; PC := 602
598 [-]: SELF      R20 R2 K66   ; R21 := R2; R20 := R2[0x054e3c19]
599 [-]: GETGLOBAL R22 K22      ; R22 := _T
600 [-]: GETTABLE  R22 R22 K23  ; R22 := R22["MenuSuitAvatar"]
601 [-]: CALL      R20 3 1      ; R20(R21,R22)
602 [-]: LOADBOOL  R18 1 0      ; R18 := true
603 [-]: JMP       608          ; PC := 608
604 [-]: GETGLOBAL R20 K75      ; R20 := 0xb009bbc6
605 [-]: MOVE      R21 R2       ; R21 := R2
606 [-]: CALL      R20 2 2      ; R20 := R20(R21)
607 [-]: MOVE      R2 R20       ; R2 := R20
608 [-]: GETGLOBAL R20 K3       ; R20 := 0x7b998233
609 [-]: MOVE      R21 R2       ; R21 := R2
610 [-]: CALL      R20 2 2      ; R20 := R20(R21)
611 [-]: TEST      R20 1        ; if R20 then PC := 650
612 [-]: JMP       650          ; PC := 650
613 [-]: GETTABLE  R20 R0 K12   ; R20 := R0["EquippedItem"]
614 [-]: EQ        1 R20 K13    ; if R20 == nil then PC := 630
615 [-]: JMP       630          ; PC := 630
616 [-]: GETTABLE  R20 R0 K12   ; R20 := R0["EquippedItem"]
617 [-]: GETTABLE  R20 R20 K67  ; R20 := R20["mModularParts"]
618 [-]: LEN       R20 R20      ; R20 := # R20
619 [-]: LT        0 K33 R20    ; if 0.000000 >= R20 then PC := 650
620 [-]: JMP       650          ; PC := 650
621 [-]: SELF      R20 R2 K68   ; R21 := R2; R20 := R2[0xa6101f7e]
622 [-]: GETTABLE  R22 R0 K12   ; R22 := R0["EquippedItem"]
623 [-]: GETTABLE  R22 R22 K67  ; R22 := R22["mModularParts"]
624 [-]: GETTABLE  R23 R0 K12   ; R23 := R0["EquippedItem"]
625 [-]: SELF      R23 R23 K69  ; R24 := R23; R23 := R23[0xdbfbf6c0]
626 [-]: LOADK     R25 3        ; R25 := 3.000000
627 [-]: CALL      R23 3 0      ; R23,... := R23(R24,R25)
628 [-]: CALL      R20 0 1      ; R20(R21,...)
629 [-]: JMP       650          ; PC := 650
630 [-]: GETTABLE  R20 R0 K42   ; R20 := R0["mStoreItem"]
631 [-]: EQ        1 R20 K13    ; if R20 == nil then PC := 650
632 [-]: JMP       650          ; PC := 650
633 [-]: GETTABLE  R20 R0 K67   ; R20 := R0["mModularParts"]
634 [-]: LEN       R20 R20      ; R20 := # R20
635 [-]: LT        0 K33 R20    ; if 0.000000 >= R20 then PC := 650
636 [-]: JMP       650          ; PC := 650
637 [-]: GETUPVAL  R20 U4       ; R20 := U4
638 [-]: GETTABLE  R20 R20 K70  ; R20 := R20[0x06d055f9]
639 [-]: GETGLOBAL R21 K3       ; R21 := 0x7b998233
640 [-]: GETTABLE  R22 R0 K71   ; R22 := R0["mGild"]
641 [-]: CALL      R21 2 2      ; R21 := R21(R22)
642 [-]: NOT       R21 R21      ; R21 := not R21
643 [-]: GETTABLE  R22 R0 K71   ; R22 := R0["mGild"]
644 [-]: LOADBOOL  R23 0 0      ; R23 := false
645 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
646 [-]: SELF      R21 R2 K68   ; R22 := R2; R21 := R2[0xa6101f7e]
647 [-]: GETTABLE  R23 R0 K67   ; R23 := R0["mModularParts"]
648 [-]: MOVE      R24 R20      ; R24 := R20
649 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
650 [-]: GETGLOBAL R21 K3       ; R21 := 0x7b998233
651 [-]: MOVE      R22 R2       ; R22 := R2
652 [-]: CALL      R21 2 2      ; R21 := R21(R22)
653 [-]: TEST      R21 0        ; if not R21 then PC := 656
654 [-]: JMP       656          ; PC := 656
655 [-]: RETURN    R0 1         ; return 
656 [-]: LOADNIL   R21 R21      ; R21 := nil
657 [-]: SELF      R22 R2 K15   ; R23 := R2; R22 := R2[0xf2deaf69]
658 [-]: GETGLOBAL R24 K76      ; R24 := gPowerSuitType
659 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
660 [-]: TEST      R22 0        ; if not R22 then PC := 671
661 [-]: JMP       671          ; PC := 671
662 [-]: LOADBOOL  R3 1 0       ; R3 := true
663 [-]: GETUPVAL  R22 U5       ; R22 := U5
664 [-]: GETGLOBAL R23 K0       ; R23 := 0xae91e43b
665 [-]: MOVE      R24 R4       ; R24 := R4
666 [-]: MOVE      R25 R0       ; R25 := R0
667 [-]: MOVE      R26 R1       ; R26 := R1
668 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
669 [-]: MOVE      R21 R22      ; R21 := R22
670 [-]: JMP       678          ; PC := 678
671 [-]: GETGLOBAL R22 K3       ; R22 := 0x7b998233
672 [-]: MOVE      R23 R4       ; R23 := R4
673 [-]: CALL      R22 2 2      ; R22 := R22(R23)
674 [-]: TEST      R22 0        ; if not R22 then PC := 678
675 [-]: JMP       678          ; PC := 678
676 [-]: GETGLOBAL R22 K22      ; R22 := _T
677 [-]: GETTABLE  R4 R22 K23   ; R4 := R22["MenuSuitAvatar"]
678 [-]: LOADBOOL  R22 0 0      ; R22 := false
679 [-]: NEWTABLE  R23 4 0      ; R23 := {}
680 [-]: LOADBOOL  R24 0 0      ; R24 := false
681 [-]: LOADBOOL  R25 0 0      ; R25 := false
682 [-]: LOADBOOL  R26 0 0      ; R26 := false
683 [-]: LOADBOOL  R27 0 0      ; R27 := false
684 [-]: SETLIST   R23 4 1      ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 4
685 [-]: LOADBOOL  R24 0 0      ; R24 := false
686 [-]: GETGLOBAL R25 K77      ; R25 := 0xc8802016
687 [-]: GETGLOBAL R26 K78      ; R26 := mLists
688 [-]: GETTABLE  R26 R26 K79  ; R26 := R26["mLoadOutList"]
689 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["mElements"]
690 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
691 [-]: JMP       709          ; PC := 709
692 [-]: GETTABLE  R30 R29 K5   ; R30 := R29["LoadOutType"]
693 [-]: EQ        0 R30 K31    ; if R30 ~= 1.000000 then PC := 709
694 [-]: JMP       709          ; PC := 709
695 [-]: GETTABLE  R30 R29 K21  ; R30 := R29["LoadOutId"]
696 [-]: EQ        0 R30 K33    ; if R30 ~= 0.000000 then PC := 709
697 [-]: JMP       709          ; PC := 709
698 [-]: GETTABLE  R30 R29 K20  ; R30 := R29["UID"]
699 [-]: GETGLOBAL R31 K6       ; R31 := 0x6c97a788
700 [-]: GETTABLE  R31 R31 K81  ; R31 := R31["InvalidItemID"]
701 [-]: EQ        1 R30 R31    ; if R30 == R31 then PC := 709
702 [-]: JMP       709          ; PC := 709
703 [-]: GETGLOBAL R30 K4       ; R30 := 0x25d99d89
704 [-]: SELF      R30 R30 K82  ; R31 := R30; R30 := R30[0x3c6b0324]
705 [-]: CALL      R30 2 2      ; R30 := R30(R31)
706 [-]: TEST      R30 1        ; if R30 then PC := 709
707 [-]: JMP       709          ; PC := 709
708 [-]: LOADBOOL  R24 1 0      ; R24 := true
709 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 692; R27 := R28 end
710 [-]: JMP       692          ; PC := 692
711 [-]: TEST      R3 0         ; if not R3 then PC := 815
712 [-]: JMP       815          ; PC := 815
713 [-]: GETGLOBAL R30 K3       ; R30 := 0x7b998233
714 [-]: MOVE      R31 R21      ; R31 := R21
715 [-]: CALL      R30 2 2      ; R30 := R30(R31)
716 [-]: TEST      R30 1        ; if R30 then PC := 815
717 [-]: JMP       815          ; PC := 815
718 [-]: GETUPVAL  R30 U0       ; R30 := U0
719 [-]: GETUPVAL  R31 U1       ; R31 := U1
720 [-]: GETTABLE  R31 R31 K9   ; R31 := R31["SWAPPING_ITEM"]
721 [-]: EQ        1 R30 R31    ; if R30 == R31 then PC := 815
722 [-]: JMP       815          ; PC := 815
723 [-]: GETUPVAL  R30 U0       ; R30 := U0
724 [-]: GETUPVAL  R31 U1       ; R31 := U1
725 [-]: GETTABLE  R31 R31 K83  ; R31 := R31["SELECTING_SKINS"]
726 [-]: EQ        1 R30 R31    ; if R30 == R31 then PC := 815
727 [-]: JMP       815          ; PC := 815
728 [-]: GETTABLE  R30 R0 K5    ; R30 := R0["LoadOutType"]
729 [-]: EQ        1 R30 K31    ; if R30 == 1.000000 then PC := 815
730 [-]: JMP       815          ; PC := 815
731 [-]: GETTABLE  R30 R0 K5    ; R30 := R0["LoadOutType"]
732 [-]: EQ        1 R30 K8     ; if R30 == 6.000000 then PC := 815
733 [-]: JMP       815          ; PC := 815
734 [-]: LOADK     R30 1        ; R30 := 1.000000
735 [-]: LOADK     R31 4        ; R31 := 4.000000
736 [-]: LOADK     R32 1        ; R32 := 1.000000
737 [-]: FORPREP   R30 814      ; R30 -= R32; PC := 814
738 [-]: LOADK     R34 K58      ; R34 := "Ability"
739 [-]: MOVE      R35 R33      ; R35 := R33
740 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
741 [-]: GETTABLE  R34 R21 R34  ; R34 := R21[R34]
742 [-]: TEST      R34 0        ; if not R34 then PC := 814
743 [-]: JMP       814          ; PC := 814
744 [-]: SETTABLE  R23 R33 K84  ; R23[R33] := true
745 [-]: LOADBOOL  R22 1 0      ; R22 := true
746 [-]: GETGLOBAL R34 K85      ; R34 := 0x7f5022cf
747 [-]: GETTABLE  R34 R34 K86  ; R34 := R34[0x3f3e4d12]
748 [-]: LOADK     R35 K58      ; R35 := "Ability"
749 [-]: MOVE      R36 R33      ; R36 := R33
750 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
751 [-]: GETTABLE  R35 R21 R35  ; R35 := R21[R35]
752 [-]: CALL      R34 2 2      ; R34 := R34(R35)
753 [-]: LOADK     R35 K87      ; R35 := "AbilityIcon"
754 [-]: MOVE      R36 R33      ; R36 := R33
755 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
756 [-]: GETTABLE  R35 R21 R35  ; R35 := R21[R35]
757 [-]: GETGLOBAL R36 K0       ; R36 := 0xae91e43b
758 [-]: SELF      R36 R36 K88  ; R37 := R36; R36 := R36[0x1e5b5cfe]
759 [-]: LOADK     R38 K58      ; R38 := "Ability"
760 [-]: MOVE      R39 R33      ; R39 := R33
761 [-]: LOADK     R40 K89      ; R40 := ".Btn"
762 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
763 [-]: LOADK     R39 K90      ; R39 := "AbilityRollOver"
764 [-]: LOADK     R40 K91      ; R40 := "AbilityRollOut"
765 [-]: LOADNIL   R41 R42      ; R41 := R42 := nil
766 [-]: CALL      R36 7 1      ; R36(R37,R38,R39,R40,R41,R42)
767 [-]: GETGLOBAL R36 K0       ; R36 := 0xae91e43b
768 [-]: SELF      R36 R36 K92  ; R37 := R36; R36 := R36[0x67bc869f]
769 [-]: LOADK     R38 K58      ; R38 := "Ability"
770 [-]: MOVE      R39 R33      ; R39 := R33
771 [-]: LOADK     R40 K89      ; R40 := ".Btn"
772 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
773 [-]: LOADK     R39 85       ; R39 := 85.000000
774 [-]: MOVE      R40 R33      ; R40 := R33
775 [-]: CALL      R36 5 1      ; R36(R37,R38,R39,R40)
776 [-]: GETGLOBAL R36 K0       ; R36 := 0xae91e43b
777 [-]: SELF      R36 R36 K61  ; R37 := R36; R36 := R36[0x5f56eeab]
778 [-]: LOADK     R38 K58      ; R38 := "Ability"
779 [-]: MOVE      R39 R33      ; R39 := R33
780 [-]: LOADK     R40 K93      ; R40 := ".Label"
781 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
782 [-]: LOADK     R39 29       ; R39 := 29.000000
783 [-]: MOVE      R40 R34      ; R40 := R34
784 [-]: CALL      R36 5 1      ; R36(R37,R38,R39,R40)
785 [-]: GETGLOBAL R36 K0       ; R36 := 0xae91e43b
786 [-]: SELF      R36 R36 K94  ; R37 := R36; R36 := R36[0x1cb415c1]
787 [-]: LOADK     R38 K58      ; R38 := "Ability"
788 [-]: MOVE      R39 R33      ; R39 := R33
789 [-]: LOADK     R40 K95      ; R40 := ".Icon"
790 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
791 [-]: MOVE      R39 R35      ; R39 := R35
792 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
793 [-]: GETGLOBAL R36 K0       ; R36 := 0xae91e43b
794 [-]: SELF      R36 R36 K96  ; R37 := R36; R36 := R36[0xf64b7262]
795 [-]: LOADK     R38 K58      ; R38 := "Ability"
796 [-]: MOVE      R39 R33      ; R39 := R33
797 [-]: CONCAT    R38 R38 R39  ; R38 := R38 .. R39
798 [-]: LOADK     R39 K97      ; R39 := "Icon"
799 [-]: LOADK     R40 10       ; R40 := 10.000000
800 [-]: LOADK     R41 40       ; R41 := 40.000000
801 [-]: CALL      R36 6 1      ; R36(R37,R38,R39,R40,R41)
802 [-]: GETGLOBAL R36 K0       ; R36 := 0xae91e43b
803 [-]: SELF      R36 R36 K98  ; R37 := R36; R36 := R36[0x91e13703]
804 [-]: LOADK     R38 K58      ; R38 := "Ability"
805 [-]: MOVE      R39 R33      ; R39 := R33
806 [-]: LOADK     R40 K95      ; R40 := ".Icon"
807 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
808 [-]: LOADK     R39 K99      ; R39 := "PixelateBias"
809 [-]: LOADK     R40 1        ; R40 := 1.000000
810 [-]: LOADK     R41 1        ; R41 := 1.000000
811 [-]: LOADK     R42 0        ; R42 := 0.000000
812 [-]: LOADK     R43 0        ; R43 := 0.000000
813 [-]: CALL      R36 8 1      ; R36(R37,R38,R39,R40,R41,R42,R43)
814 [-]: FORLOOP   R30 738      ; R30 += R32; if R30 <= R31 then begin PC := 738; R33 := R30 end
815 [-]: GETUPVAL  R36 U6       ; R36 := U6
816 [-]: GETTABLE  R36 R36 K100 ; R36 := R36["Current"]
817 [-]: EQ        0 R36 K101   ; if R36 ~= 3.000000 then PC := 828
818 [-]: JMP       828          ; PC := 828
819 [-]: GETGLOBAL R36 K10      ; R36 := mSelected
820 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["Element"]
821 [-]: EQ        1 R36 K13    ; if R36 == nil then PC := 828
822 [-]: JMP       828          ; PC := 828
823 [-]: GETGLOBAL R36 K10      ; R36 := mSelected
824 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["Element"]
825 [-]: GETTABLE  R36 R36 K21  ; R36 := R36["LoadOutId"]
826 [-]: EQ        1 R36 K7     ; if R36 == 4.000000 then PC := 829
827 [-]: JMP       829          ; PC := 829
828 [-]: LOADBOOL  R36 0 1      ; R36 := false; PC := 829
829 [-]: LOADBOOL  R36 1 0      ; R36 := true
830 [-]: GETUPVAL  R37 U7       ; R37 := U7
831 [-]: GETTABLE  R37 R37 K102 ; R37 := R37[0x0ed5e9ac]
832 [-]: MOVE      R38 R2       ; R38 := R2
833 [-]: MOVE      R39 R4       ; R39 := R4
834 [-]: LOADBOOL  R40 0 0      ; R40 := false
835 [-]: GETUPVAL  R41 U0       ; R41 := U0
836 [-]: GETUPVAL  R42 U1       ; R42 := U1
837 [-]: GETTABLE  R42 R42 K9   ; R42 := R42["SWAPPING_ITEM"]
838 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 841
839 [-]: JMP       841          ; PC := 841
840 [-]: LOADBOOL  R41 0 1      ; R41 := false; PC := 841
841 [-]: LOADBOOL  R41 1 0      ; R41 := true
842 [-]: MOVE      R42 R36      ; R42 := R36
843 [-]: CALL      R37 6 2      ; R37 := R37(R38,R39,R40,R41,R42)
844 [-]: EQ        1 R37 K13    ; if R37 == nil then PC := 853
845 [-]: JMP       853          ; PC := 853
846 [-]: GETUPVAL  R38 U7       ; R38 := U7
847 [-]: GETTABLE  R38 R38 K103 ; R38 := R38[0xa5370868]
848 [-]: GETUPVAL  R39 U8       ; R39 := U8
849 [-]: GETTABLE  R39 R39 K104 ; R39 := R39["mCachedStats"]
850 [-]: MOVE      R40 R37      ; R40 := R37
851 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
852 [-]: MOVE      R37 R38      ; R37 := R38
853 [-]: TEST      R22 0        ; if not R22 then PC := 862
854 [-]: JMP       862          ; PC := 862
855 [-]: GETGLOBAL R38 K0       ; R38 := 0xae91e43b
856 [-]: SELF      R38 R38 K61  ; R39 := R38; R38 := R38[0x5f56eeab]
857 [-]: LOADK     R40 K62      ; R40 := "CosmeticDesc"
858 [-]: LOADK     R41 29       ; R41 := 29.000000
859 [-]: LOADK     R42 K63      ; R42 := ""
860 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
861 [-]: JMP       865          ; PC := 865
862 [-]: GETUPVAL  R38 U9       ; R38 := U9
863 [-]: MOVE      R39 R0       ; R39 := R0
864 [-]: CALL      R38 2 1      ; R38(R39)
865 [-]: GETUPVAL  R38 U10      ; R38 := U10
866 [-]: MOVE      R39 R0       ; R39 := R0
867 [-]: MOVE      R40 R37      ; R40 := R37
868 [-]: CALL      R38 3 1      ; R38(R39,R40)
869 [-]: LOADK     R38 1        ; R38 := 1.000000
870 [-]: LOADK     R39 4        ; R39 := 4.000000
871 [-]: LOADK     R40 1        ; R40 := 1.000000
872 [-]: FORPREP   R38 897      ; R38 -= R40; PC := 897
873 [-]: GETGLOBAL R42 K57      ; R42 := 0x25312c9b
874 [-]: GETGLOBAL R43 K0       ; R43 := 0xae91e43b
875 [-]: LOADK     R44 K58      ; R44 := "Ability"
876 [-]: MOVE      R45 R41      ; R45 := R41
877 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
878 [-]: LOADK     R45 8        ; R45 := 8.000000
879 [-]: NEWTABLE  R46 1 0      ; R46 := {}
880 [-]: LOADK     R47 10       ; R47 := 10.000000
881 [-]: SETLIST   R46 1 1      ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 1
882 [-]: NEWTABLE  R47 0 0      ; R47 := {}
883 [-]: GETUPVAL  R48 U4       ; R48 := U4
884 [-]: GETTABLE  R48 R48 K70  ; R48 := R48[0x06d055f9]
885 [-]: GETTABLE  R49 R23 R41  ; R49 := R23[R41]
886 [-]: LOADK     R50 100      ; R50 := 100.000000
887 [-]: LOADK     R51 0        ; R51 := 0.000000
888 [-]: CALL      R48 4 0      ; R48,... := R48(R49,R50,R51)
889 [-]: SETLIST   R47 0 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 0
890 [-]: LOADK     R48 K60      ; R48 := 0.200000
891 [-]: LOADK     R49 0        ; R49 := 0.000000
892 [-]: CLOSURE   R50 1        ; R50 := closure(Function #68.2)
893 [-]: MOVE      R0 R41       ; R0 := R41
894 [-]: MOVE      R0 R23       ; R0 := R23
895 [-]: CALL      R42 9 1      ; R42(R43,R44,R45,R46,R47,R48,R49,R50)
896 [-]: CLOSE     R41          ; SAVE R41,...
897 [-]: FORLOOP   R38 873      ; R38 += R40; if R38 <= R39 then begin PC := 873; R41 := R38 end
898 [-]: TEST      R18 0        ; if not R18 then PC := 904
899 [-]: JMP       904          ; PC := 904
900 [-]: GETGLOBAL R41 K52      ; R41 := 0x89326c93
901 [-]: SELF      R41 R41 K56  ; R42 := R41; R41 := R41[0x59c96e77]
902 [-]: MOVE      R43 R2       ; R43 := R2
903 [-]: CALL      R41 3 1      ; R41(R42,R43)
904 [-]: RETURN    R0 1         ; return 


; Function #68.1:
;
; Name:            
; Defined at line: 3992
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "Ability"
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: LOADK     R3 11        ; R3 := 11.000000
  7 [-]: LOADBOOL  R4 0 0       ; R4 := false
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #68.2:
;
; Name:            
; Defined at line: 4111
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "Ability"
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  6 [-]: LOADK     R3 11        ; R3 := 11.000000
  7 [-]: GETUPVAL  R4 U1        ; R4 := U1
  8 [-]: GETUPVAL  R5 U0        ; R5 := U0
  9 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 10 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 11 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 4119
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x91a24e4b]
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K4        ; R4 := ".Back"
  9 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 10 [-]: LOADK     R4 13        ; R4 := 13.000000
 11 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 12 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["HEIGHT_UNSELECTED"]
 17 [-]: SUB       R2 R1 R2     ; R2 := R1 - R2
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["HEIGHT_SELECTED"]
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["HEIGHT_UNSELECTED"]
 22 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
 23 [-]: DIV       R2 R2 R3     ; R2 := R2 / R3
 24 [-]: LOADK     R3 K7        ; R3 := 1.520000
 25 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["EmotesEntry"]
 26 [-]: TEST      R4 1         ; if R4 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["MandachordEntry"]
 29 [-]: TEST      R4 0         ; if not R4 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETGLOBAL R4 K10       ; R4 := 0x0032441c
 32 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["UIColor_DarkGrey"]
 33 [-]: TEST      R4 1         ; if R4 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETGLOBAL R4 K10       ; R4 := 0x0032441c
 36 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["UIColor_White"]
 37 [-]: GETGLOBAL R5 K13       ; R5 := 0x7b998233
 38 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["SpecialIcon"]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: TEST      R5 1         ; if R5 then PC := 60
 41 [-]: JMP       60           ; PC := 60
 42 [-]: LOADK     R2 1         ; R2 := 1.000000
 43 [-]: GETUPVAL  R5 U1        ; R5 := U1
 44 [-]: EQ        1 R5 K1      ; if R5 == nil then PC := 54
 45 [-]: JMP       54           ; PC := 54
 46 [-]: GETUPVAL  R5 U1        ; R5 := U1
 47 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["Id"]
 48 [-]: GETTABLE  R6 R0 K15    ; R6 := R0["Id"]
 49 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 54
 50 [-]: JMP       54           ; PC := 54
 51 [-]: GETTABLE  R5 R0 K16    ; R5 := R0["FocusEntry"]
 52 [-]: TEST      R5 0         ; if not R5 then PC := 60
 53 [-]: JMP       60           ; PC := 60
 54 [-]: GETTABLE  R5 R0 K17    ; R5 := R0["LoadOutId"]
 55 [-]: EQ        1 R5 K1      ; if R5 == nil then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: LOADK     R3 1         ; R3 := 1.000000
 58 [-]: GETGLOBAL R5 K10       ; R5 := 0x0032441c
 59 [-]: GETTABLE  R4 R5 K11    ; R4 := R5["UIColor_DarkGrey"]
 60 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 61 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xf64b7262]
 62 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mClipName"]
 63 [-]: LOADK     R8 K19       ; R8 := "Icon"
 64 [-]: LOADK     R9 9         ; R9 := 9.000000
 65 [-]: MOVE      R10 R4       ; R10 := R4
 66 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 67 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 68 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xf64b7262]
 69 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mClipName"]
 70 [-]: LOADK     R8 K19       ; R8 := "Icon"
 71 [-]: LOADK     R9 10        ; R9 := 10.000000
 72 [-]: GETGLOBAL R10 K20      ; R10 := 0x42dcc9f5
 73 [-]: MUL       R11 R2 K21   ; R11 := R2 * 200.000000
 74 [-]: LOADK     R12 0        ; R12 := 0.000000
 75 [-]: LOADK     R13 100      ; R13 := 100.000000
 76 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 77 [-]: CALL      R5 0 1       ; R5(R6,...)
 78 [-]: MOVE      R5 R1        ; R5 := R1
 79 [-]: LOADK     R6 0         ; R6 := 0.000000
 80 [-]: GETTABLE  R7 R0 K22    ; R7 := R0["IconScale"]
 81 [-]: EQ        1 R7 K1      ; if R7 == nil then PC := 86
 82 [-]: JMP       86           ; PC := 86
 83 [-]: GETTABLE  R7 R0 K22    ; R7 := R0["IconScale"]
 84 [-]: MUL       R5 R5 R7     ; R5 := R5 * R7
 85 [-]: JMP       99           ; PC := 99
 86 [-]: GETTABLE  R7 R0 K17    ; R7 := R0["LoadOutId"]
 87 [-]: EQ        0 R7 K1      ; if R7 ~= nil then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: MUL       R5 R5 K23    ; R5 := R5 * 0.750000
 90 [-]: GETTABLE  R7 R0 K24    ; R7 := R0["XpRatio"]
 91 [-]: EQ        1 R7 K1      ; if R7 == nil then PC := 95
 92 [-]: JMP       95           ; PC := 95
 93 [-]: SUB       R5 R5 K25    ; R5 := R5 - 6.000000
 94 [-]: SUB       R6 R6 K26    ; R6 := R6 - 4.000000
 95 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["EmotesEntry"]
 96 [-]: TEST      R7 0         ; if not R7 then PC := 99
 97 [-]: JMP       99           ; PC := 99
 98 [-]: MUL       R5 R5 K27    ; R5 := R5 * 0.900000
 99 [-]: GETUPVAL  R7 U2        ; R7 := U2
100 [-]: GETTABLE  R7 R7 K28    ; R7 := R7[0x06d055f9]
101 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["FocusEntry"]
102 [-]: TEST      R8 1         ; if R8 then PC := 111
103 [-]: JMP       111          ; PC := 111
104 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["EmotesEntry"]
105 [-]: TEST      R8 1         ; if R8 then PC := 111
106 [-]: JMP       111          ; PC := 111
107 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["MandachordEntry"]
108 [-]: TEST      R8 1         ; if R8 then PC := 111
109 [-]: JMP       111          ; PC := 111
110 [-]: GETTABLE  R8 R0 K29    ; R8 := R0["Themed"]
111 [-]: MOVE      R9 R5        ; R9 := R5
112 [-]: MUL       R10 R5 R3    ; R10 := R5 * R3
113 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
114 [-]: GETUPVAL  R8 U2        ; R8 := U2
115 [-]: GETTABLE  R8 R8 K28    ; R8 := R8[0x06d055f9]
116 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["EmotesEntry"]
117 [-]: TEST      R9 1         ; if R9 then PC := 120
118 [-]: JMP       120          ; PC := 120
119 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["FocusEntry"]
120 [-]: MUL       R10 R5 K30   ; R10 := R5 * 1.700000
121 [-]: MOVE      R11 R7       ; R11 := R7
122 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
123 [-]: MUL       R8 R8 K31    ; R8 := R8 * 0.500000
124 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["LoadOutId"]
125 [-]: TEST      R9 0         ; if not R9 then PC := 143
126 [-]: JMP       143          ; PC := 143
127 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["LoadOutId"]
128 [-]: GETGLOBAL R10 K32      ; R10 := 0x6c97a788
129 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["NUM_NORMAL_LOADOUT_SLOTS"]
130 [-]: LE        0 R10 R9     ; if R10 > R9 then PC := 143
131 [-]: JMP       143          ; PC := 143
132 [-]: GETUPVAL  R9 U1        ; R9 := U1
133 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 142
134 [-]: JMP       142          ; PC := 142
135 [-]: GETUPVAL  R9 U1        ; R9 := U1
136 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["Id"]
137 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["Id"]
138 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 142
139 [-]: JMP       142          ; PC := 142
140 [-]: SETTABLE  R0 K34 K1    ; R0["IconXScale"] := nil
141 [-]: JMP       143          ; PC := 143
142 [-]: SETTABLE  R0 K34 K35   ; R0["IconXScale"] := 0.350000
143 [-]: GETTABLE  R9 R0 K34    ; R9 := R0["IconXScale"]
144 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 149
145 [-]: JMP       149          ; PC := 149
146 [-]: GETTABLE  R9 R0 K34    ; R9 := R0["IconXScale"]
147 [-]: MUL       R9 R8 R9     ; R9 := R8 * R9
148 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
149 [-]: SUB       R9 K36 R8    ; R9 := 384.000000 - R8
150 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
151 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0xf64b7262]
152 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["mClipName"]
153 [-]: LOADK     R13 K19      ; R13 := "Icon"
154 [-]: LOADK     R14 0        ; R14 := 0.000000
155 [-]: MOVE      R15 R9       ; R15 := R9
156 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
157 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
158 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0xf64b7262]
159 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["mClipName"]
160 [-]: LOADK     R13 K19      ; R13 := "Icon"
161 [-]: LOADK     R14 1        ; R14 := 1.000000
162 [-]: MOVE      R15 R6       ; R15 := R6
163 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
164 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
165 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0xf64b7262]
166 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["mClipName"]
167 [-]: LOADK     R13 K19      ; R13 := "Icon"
168 [-]: LOADK     R14 12       ; R14 := 12.000000
169 [-]: MOVE      R15 R7       ; R15 := R7
170 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
171 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
172 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0xf64b7262]
173 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["mClipName"]
174 [-]: LOADK     R13 K19      ; R13 := "Icon"
175 [-]: LOADK     R14 13       ; R14 := 13.000000
176 [-]: MOVE      R15 R5       ; R15 := R5
177 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
178 [-]: GETTABLE  R10 R0 K37   ; R10 := R0["TopTitle"]
179 [-]: EQ        1 R10 K1     ; if R10 == nil then PC := 193
180 [-]: JMP       193          ; PC := 193
181 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
182 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0xf64b7262]
183 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["mClipName"]
184 [-]: LOADK     R13 K37      ; R13 := "TopTitle"
185 [-]: LOADK     R14 1        ; R14 := 1.000000
186 [-]: GETUPVAL  R15 U2       ; R15 := U2
187 [-]: GETTABLE  R15 R15 K38  ; R15 := R15[0x74a11ec6]
188 [-]: MUL       R16 R1 K31   ; R16 := R1 * 0.500000
189 [-]: UNM       R16 R16      ; R16 := ^ R16
190 [-]: SUB       R16 R16 K39  ; R16 := R16 - 14.000000
191 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
192 [-]: CALL      R10 0 1      ; R10(R11,...)
193 [-]: GETTABLE  R10 R0 K40   ; R10 := R0["HasBottomLine"]
194 [-]: TEST      R10 0        ; if not R10 then PC := 207
195 [-]: JMP       207          ; PC := 207
196 [-]: GETGLOBAL R10 K2       ; R10 := 0xae91e43b
197 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0xf64b7262]
198 [-]: GETTABLE  R12 R0 K0    ; R12 := R0["mClipName"]
199 [-]: LOADK     R13 K41      ; R13 := "BottomLine"
200 [-]: LOADK     R14 1        ; R14 := 1.000000
201 [-]: GETUPVAL  R15 U2       ; R15 := U2
202 [-]: GETTABLE  R15 R15 K38  ; R15 := R15[0x74a11ec6]
203 [-]: MUL       R16 R1 K31   ; R16 := R1 * 0.500000
204 [-]: ADD       R16 R16 K42  ; R16 := R16 + 7.000000
205 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
206 [-]: CALL      R10 0 1      ; R10(R11,...)
207 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 4192
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  8 [-]: LOADK     R2 1         ; R2 := 1.000000
  9 [-]: LOADK     R3 4         ; R3 := 4.000000
 10 [-]: LOADK     R4 1         ; R4 := 1.000000
 11 [-]: FORPREP   R2 44        ; R2 -= R4; PC := 44
 12 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 13 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0xaade900e]
 14 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 15 [-]: LOADK     R9 K4        ; R9 := ".Btn"
 16 [-]: MOVE      R10 R5       ; R10 := R5
 17 [-]: LOADK     R11 K4       ; R11 := ".Btn"
 18 [-]: CONCAT    R8 R8 R11    ; R8 := R8 .. R9 .. R10 .. R11
 19 [-]: LOADK     R9 59        ; R9 := 59.000000
 20 [-]: LOADBOOL  R10 0 0      ; R10 := false
 21 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 22 [-]: GETGLOBAL R6 K5        ; R6 := 0x25312c9b
 23 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
 24 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 25 [-]: LOADK     R9 K4        ; R9 := ".Btn"
 26 [-]: MOVE      R10 R5       ; R10 := R5
 27 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["RESIZE_EASE"]
 30 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 31 [-]: LOADK     R11 10       ; R11 := 10.000000
 32 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 33 [-]: NEWTABLE  R11 1 0      ; R11 := {}
 34 [-]: LOADK     R12 0        ; R12 := 0.000000
 35 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
 36 [-]: GETUPVAL  R12 U0       ; R12 := U0
 37 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["RESIZE_DURATION"]
 38 [-]: LOADK     R13 0        ; R13 := 0.000000
 39 [-]: CLOSURE   R14 0        ; R14 := closure(Function #70.1)
 40 [-]: MOVE      R0 R1        ; R0 := R1
 41 [-]: MOVE      R0 R5        ; R0 := R5
 42 [-]: CALL      R6 9 1       ; R6(R7,R8,R9,R10,R11,R12,R13,R14)
 43 [-]: CLOSE     R5           ; SAVE R5,...
 44 [-]: FORLOOP   R2 12        ; R2 += R4; if R2 <= R3 then begin PC := 12; R5 := R2 end
 45 [-]: GETGLOBAL R5 K8        ; R5 := 0x7b998233
 46 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["SpecialIcon"]
 47 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 48 [-]: TEST      R5 1         ; if R5 then PC := 57
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 51 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x1cb415c1]
 52 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mClipName"]
 53 [-]: LOADK     R8 K11       ; R8 := ".Icon"
 54 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 55 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["SpecialIcon"]
 56 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 57 [-]: GETGLOBAL R5 K5        ; R5 := 0x25312c9b
 58 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 59 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mClipName"]
 60 [-]: LOADK     R8 K12       ; R8 := ".Back"
 61 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 62 [-]: GETUPVAL  R8 U0        ; R8 := U0
 63 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["RESIZE_EASE"]
 64 [-]: NEWTABLE  R9 2 0       ; R9 := {}
 65 [-]: LOADK     R10 K13      ; R10 := "_height"
 66 [-]: CLOSURE   R11 1        ; R11 := closure(Function #70.2)
 67 [-]: GETUPVAL  R0 U1        ; R0 := U1
 68 [-]: MOVE      R0 R0        ; R0 := R0
 69 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
 70 [-]: NEWTABLE  R10 2 0      ; R10 := {}
 71 [-]: GETUPVAL  R11 U0       ; R11 := U0
 72 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["HEIGHT_UNSELECTED"]
 73 [-]: LOADK     R12 1        ; R12 := 1.000000
 74 [-]: SETLIST   R10 2 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
 75 [-]: GETUPVAL  R11 U0       ; R11 := U0
 76 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["RESIZE_DURATION"]
 77 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 78 [-]: GETGLOBAL R5 K5        ; R5 := 0x25312c9b
 79 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 80 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mClipName"]
 81 [-]: LOADK     R8 K15       ; R8 := ".LevelProgress"
 82 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 83 [-]: GETUPVAL  R8 U0        ; R8 := U0
 84 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["RESIZE_EASE"]
 85 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 86 [-]: LOADK     R10 1        ; R10 := 1.000000
 87 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 88 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 89 [-]: GETUPVAL  R11 U0       ; R11 := U0
 90 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["HEIGHT_UNSELECTED"]
 91 [-]: MUL       R11 R11 K16  ; R11 := R11 * 0.500000
 92 [-]: SUB       R11 R11 K17  ; R11 := R11 - 5.000000
 93 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 94 [-]: GETUPVAL  R11 U0       ; R11 := U0
 95 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["RESIZE_DURATION"]
 96 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 97 [-]: RETURN    R0 1         ; return 


; Function #70.1:
;
; Name:            
; Defined at line: 4199
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := ".Btn"
  5 [-]: GETUPVAL  R4 U1        ; R4 := U1
  6 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
  7 [-]: LOADK     R3 11        ; R3 := 11.000000
  8 [-]: LOADBOOL  R4 0 0       ; R4 := false
  9 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #70.2:
;
; Name:            
; Defined at line: 4206
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 4210
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["LoadOutType"]
  3 [-]: SETTABLE  R1 K1 R2     ; R1[0x7f5022cf] := R2
  4 [-]: GETGLOBAL R1 K0        ; R1 := _T
  5 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["LoadOutId"]
  6 [-]: SETTABLE  R1 K3 R2     ; R1[0x1a94c9cc] := R2
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0xb2cd8e7b]
  9 [-]: LOADBOOL  R2 0 0       ; R2 := false
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K7        ; R2 := mEvoMovie
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 0         ; if not R1 then PC := 44
 16 [-]: JMP       44           ; PC := 44
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: GETUPVAL  R2 U2        ; R2 := U2
 19 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SELECTING_PART"]
 20 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 44
 21 [-]: JMP       44           ; PC := 44
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETTABLE  R1 R1 K9     ; R1 := R1[0x517d4a58]
 24 [-]: CALL      R1 1 2       ; R1 := R1()
 25 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: SELF      R2 R1 K10    ; R3 := R1; R2 := R1[0xc49a5a08]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: TEST      R2 0         ; if not R2 then PC := 44
 33 [-]: JMP       44           ; PC := 44
 34 [-]: GETGLOBAL R2 K0        ; R2 := _T
 35 [-]: SETTABLE  R2 K11 K12   ; R2["ZarimanEvolution_DioramaMode"] := false
 36 [-]: GETGLOBAL R2 K0        ; R2 := _T
 37 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["LoadOutId"]
 38 [-]: SETTABLE  R2 K13 R3    ; R2["ZarimanEvolution_WeaponSlot"] := R3
 39 [-]: GETGLOBAL R2 K14       ; R2 := 0xae91e43b
 40 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x1fd6abd0]
 41 [-]: GETGLOBAL R4 K16       ; R4 := 0x695f3674
 42 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 43 [-]: SETGLOBAL R2 K7        ; mEvoMovie := R2
 44 [-]: GETUPVAL  R2 U3        ; R2 := U3
 45 [-]: MOVE      R3 R0        ; R3 := R0
 46 [-]: LOADBOOL  R4 0 0       ; R4 := false
 47 [-]: CALL      R2 3 1       ; R2(R3,R4)
 48 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 4227
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["SpecialIcon"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K2        ; R1 := mLists
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x101bab76]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: GETGLOBAL R1 K5        ; R1 := 0x25312c9b
 12 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 13 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mClipName"]
 14 [-]: LOADK     R4 K8        ; R4 := ".Back"
 15 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["RESIZE_EASE"]
 18 [-]: NEWTABLE  R5 2 0       ; R5 := {}
 19 [-]: LOADK     R6 K10       ; R6 := "_height"
 20 [-]: CLOSURE   R7 0         ; R7 := closure(Function #72.1)
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: MOVE      R0 R0        ; R0 := R0
 23 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
 24 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 25 [-]: GETUPVAL  R7 U0        ; R7 := U0
 26 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["HEIGHT_SELECTED"]
 27 [-]: LOADK     R8 1         ; R8 := 1.000000
 28 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 29 [-]: GETUPVAL  R7 U0        ; R7 := U0
 30 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["RESIZE_DURATION"]
 31 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 32 [-]: GETUPVAL  R1 U2        ; R1 := U2
 33 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["mStatCompare"]
 34 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["mUpdateQueued"]
 35 [-]: EQ        0 R1 K15     ; if R1 ~= 0.000000 then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETUPVAL  R1 U3        ; R1 := U3
 38 [-]: MOVE      R2 R0        ; R2 := R0
 39 [-]: CALL      R1 2 1       ; R1(R2)
 40 [-]: GETGLOBAL R1 K5        ; R1 := 0x25312c9b
 41 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 42 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mClipName"]
 43 [-]: LOADK     R4 K16       ; R4 := ".LevelProgress"
 44 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["RESIZE_EASE"]
 47 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 48 [-]: LOADK     R6 1         ; R6 := 1.000000
 49 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 50 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 51 [-]: GETUPVAL  R7 U0        ; R7 := U0
 52 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["HEIGHT_SELECTED"]
 53 [-]: MUL       R7 R7 K17    ; R7 := R7 * 0.500000
 54 [-]: SUB       R7 R7 K18    ; R7 := R7 - 5.000000
 55 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 56 [-]: GETUPVAL  R7 U0        ; R7 := U0
 57 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["RESIZE_DURATION"]
 58 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 59 [-]: RETURN    R0 1         ; return 


; Function #72.1:
;
; Name:            
; Defined at line: 4231
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 4240
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x41e2ae25]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
  6 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0x1a94c9cc]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: LOADK     R5 1         ; R5 := 1.000000
  9 [-]: SUB       R6 R2 K3     ; R6 := R2 - 4.000000
 10 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 11 [-]: MOVE      R1 R3        ; R1 := R3
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 13 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xf64b7262]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: LOADK     R6 K6        ; R6 := "Btn"
 16 [-]: LOADK     R7 10        ; R7 := 10.000000
 17 [-]: LOADK     R8 15        ; R8 := 15.000000
 18 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 19 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 20 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xf64b7262]
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: LOADK     R6 K6        ; R6 := "Btn"
 23 [-]: LOADK     R7 9         ; R7 := 9.000000
 24 [-]: GETGLOBAL R8 K7        ; R8 := 0x0032441c
 25 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["UIColor_White"]
 26 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 27 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 28 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xf64b7262]
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: LOADK     R6 K9        ; R6 := "Outline"
 31 [-]: LOADK     R7 9         ; R7 := 9.000000
 32 [-]: GETGLOBAL R8 K7        ; R8 := 0x0032441c
 33 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["UIColor_White"]
 34 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 35 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 36 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xf64b7262]
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: LOADK     R6 K10       ; R6 := "Label"
 39 [-]: LOADK     R7 36        ; R7 := 36.000000
 40 [-]: GETGLOBAL R8 K7        ; R8 := 0x0032441c
 41 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["UIColor_White"]
 42 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 43 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 4249
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: TEST      R2 1         ; if R2 then PC := 52
  4 [-]: JMP       52           ; PC := 52
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x41e2ae25]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0x1a94c9cc]
 11 [-]: MOVE      R4 R1        ; R4 := R1
 12 [-]: LOADK     R5 1         ; R5 := 1.000000
 13 [-]: SUB       R6 R2 K3     ; R6 := R2 - 4.000000
 14 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 15 [-]: MOVE      R1 R3        ; R1 := R3
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x659d451f]
 18 [-]: GETGLOBAL R4 K5        ; R4 := 0x0032441c
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["UISound_Focus"]
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 22 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xf64b7262]
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: LOADK     R6 K9        ; R6 := "Btn"
 25 [-]: LOADK     R7 10        ; R7 := 10.000000
 26 [-]: LOADK     R8 90        ; R8 := 90.000000
 27 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 28 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 29 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xf64b7262]
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: LOADK     R6 K9        ; R6 := "Btn"
 32 [-]: LOADK     R7 9         ; R7 := 9.000000
 33 [-]: GETGLOBAL R8 K5        ; R8 := 0x0032441c
 34 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["UIColor_Yellow"]
 35 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 36 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 37 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xf64b7262]
 38 [-]: MOVE      R5 R1        ; R5 := R1
 39 [-]: LOADK     R6 K11       ; R6 := "Outline"
 40 [-]: LOADK     R7 9         ; R7 := 9.000000
 41 [-]: GETGLOBAL R8 K5        ; R8 := 0x0032441c
 42 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["UIColor_Yellow"]
 43 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 44 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 45 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xf64b7262]
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: LOADK     R6 K12       ; R6 := "Label"
 48 [-]: LOADK     R7 36        ; R7 := 36.000000
 49 [-]: GETGLOBAL R8 K5        ; R8 := 0x0032441c
 50 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["UIColor_DarkGrey"]
 51 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 52 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 4261
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0xaade900e]
  3 [-]: MOVE      R5 R0        ; R5 := R0
  4 [-]: LOADK     R6 11        ; R6 := 11.000000
  5 [-]: LOADBOOL  R7 1 0       ; R7 := true
  6 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
  7 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  8 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0x20b98db3]
  9 [-]: MOVE      R5 R0        ; R5 := R0
 10 [-]: LOADK     R6 K3        ; R6 := ".Label.text"
 11 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 12 [-]: MOVE      R6 R1        ; R6 := R1
 13 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 14 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x91a24e4b]
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: LOADK     R6 K5        ; R6 := ".Label"
 18 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 19 [-]: LOADK     R6 33        ; R6 := 33.000000
 20 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 21 [-]: SUB       R4 R2 R3     ; R4 := R2 - R3
 22 [-]: MUL       R4 R4 K6     ; R4 := R4 * 0.500000
 23 [-]: GETGLOBAL R5 K7        ; R5 := 0x5bced4c4
 24 [-]: GETTABLE  R5 R5 K8     ; R5 := R5[0xb62ecfe0]
 25 [-]: SUB       R6 R4 K9     ; R6 := R4 - 40.000000
 26 [-]: LOADK     R7 2         ; R7 := 2.000000
 27 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 28 [-]: MOVE      R4 R5        ; R4 := R5
 29 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 30 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf64b7262]
 31 [-]: MOVE      R7 R0        ; R7 := R0
 32 [-]: LOADK     R8 K11       ; R8 := "LineLeft"
 33 [-]: LOADK     R9 12        ; R9 := 12.000000
 34 [-]: MOVE      R10 R4       ; R10 := R4
 35 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 36 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 37 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf64b7262]
 38 [-]: MOVE      R7 R0        ; R7 := R0
 39 [-]: LOADK     R8 K12       ; R8 := "LineLeftCap"
 40 [-]: LOADK     R9 0         ; R9 := 0.000000
 41 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
 42 [-]: SELF      R10 R10 K4   ; R11 := R10; R10 := R10[0x91a24e4b]
 43 [-]: MOVE      R12 R0       ; R12 := R0
 44 [-]: LOADK     R13 K13      ; R13 := ".LineLeft"
 45 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 46 [-]: LOADK     R13 0        ; R13 := 0.000000
 47 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 48 [-]: ADD       R10 R10 R4   ; R10 := R10 + R4
 49 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 50 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 51 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf64b7262]
 52 [-]: MOVE      R7 R0        ; R7 := R0
 53 [-]: LOADK     R8 K14       ; R8 := "LineRight"
 54 [-]: LOADK     R9 12        ; R9 := 12.000000
 55 [-]: MOVE      R10 R4       ; R10 := R4
 56 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 57 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 58 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf64b7262]
 59 [-]: MOVE      R7 R0        ; R7 := R0
 60 [-]: LOADK     R8 K15       ; R8 := "LineRightCap"
 61 [-]: LOADK     R9 0         ; R9 := 0.000000
 62 [-]: GETGLOBAL R10 K0       ; R10 := 0xae91e43b
 63 [-]: SELF      R10 R10 K4   ; R11 := R10; R10 := R10[0x91a24e4b]
 64 [-]: MOVE      R12 R0       ; R12 := R0
 65 [-]: LOADK     R13 K16      ; R13 := ".LineRight"
 66 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 67 [-]: LOADK     R13 0        ; R13 := 0.000000
 68 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 69 [-]: SUB       R10 R10 R4   ; R10 := R10 - R4
 70 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 71 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 4274
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mLists
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mLoadOutList"]
  3 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xca30dfb6]
  4 [-]: GETGLOBAL R2 K0        ; R2 := mLists
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mLoadOutList"]
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["PetSlotId"]
  7 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  8 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0x25d99d89
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 0         ; if not R1 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADBOOL  R1 0 0       ; R1 := false
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["UID"]
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0x6c97a788
 22 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["InvalidItemID"]
 23 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R1 K5        ; R1 := 0x25d99d89
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x3c6b0324]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: NOT       R1 R1        ; R1 := not R1
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 31
 31 [-]: LOADBOOL  R1 1 0       ; R1 := true
 32 [-]: RETURN    R1 2         ; return R1
 33 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 4282
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xa1c390fe]
  9 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 10 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADBOOL  R0 0 0       ; R0 := false
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: GETGLOBAL R0 K3        ; R0 := mLists
 16 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mLoadOutList"]
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xca30dfb6]
 18 [-]: GETGLOBAL R2 K3        ; R2 := mLists
 19 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mLoadOutList"]
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["FocusSlotId"]
 21 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 22 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 0         ; if not R1 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: LOADBOOL  R1 0 0       ; R1 := false
 28 [-]: RETURN    R1 2         ; return R1
 29 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["SubTitle"]
 30 [-]: EQ        0 R1 K8      ; if R1 ~= nil then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 33
 33 [-]: LOADBOOL  R1 1 0       ; R1 := true
 34 [-]: RETURN    R1 2         ; return R1
 35 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 4293
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := mLists
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mLoadOutList"]
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SuitSlotId"]
  4 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x06d055f9]
 10 [-]: EQ        1 R0 K6      ; if R0 == 5.000000 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 13
 13 [-]: LOADBOOL  R2 1 0       ; R2 := true
 14 [-]: GETGLOBAL R3 K0        ; R3 := mLists
 15 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mLoadOutList"]
 16 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["SpecialASlotId"]
 17 [-]: GETGLOBAL R4 K0        ; R4 := mLists
 18 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mLoadOutList"]
 19 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["SpecialBSlotId"]
 20 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 21 [-]: GETGLOBAL R2 K0        ; R2 := mLists
 22 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mLoadOutList"]
 23 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xca30dfb6]
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: GETGLOBAL R3 K10       ; R3 := 0x7b998233
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 40
 30 [-]: JMP       40           ; PC := 40
 31 [-]: GETTABLE  R3 R2 K11    ; R3 := R2["OwnedItems"]
 32 [-]: LEN       R3 R3        ; R3 := # R3
 33 [-]: LE        1 R3 K12     ; if R3 <= 0.000000 then PC := 40
 34 [-]: JMP       40           ; PC := 40
 35 [-]: GETGLOBAL R3 K10       ; R3 := 0x7b998233
 36 [-]: GETTABLE  R4 R2 K13    ; R4 := R2["EquippedItem"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: TEST      R3 0         ; if not R3 then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: LOADBOOL  R3 0 0       ; R3 := false
 41 [-]: RETURN    R3 2         ; return R3
 42 [-]: GETUPVAL  R3 U1        ; R3 := U1
 43 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["Current"]
 44 [-]: LOADNIL   R4 R4        ; R4 := nil
 45 [-]: EQ        0 R3 K15     ; if R3 ~= 3.000000 then PC := 56
 46 [-]: JMP       56           ; PC := 56
 47 [-]: GETGLOBAL R5 K0        ; R5 := mLists
 48 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["mLoadOutList"]
 49 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0xca30dfb6]
 50 [-]: GETGLOBAL R7 K0        ; R7 := mLists
 51 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["mLoadOutList"]
 52 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["MechSuitSlotId"]
 53 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 54 [-]: MOVE      R4 R5        ; R4 := R5
 55 [-]: JMP       64           ; PC := 64
 56 [-]: GETGLOBAL R5 K0        ; R5 := mLists
 57 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["mLoadOutList"]
 58 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0xca30dfb6]
 59 [-]: GETGLOBAL R7 K0        ; R7 := mLists
 60 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["mLoadOutList"]
 61 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["SuitSlotId"]
 62 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 63 [-]: MOVE      R4 R5        ; R4 := R5
 64 [-]: EQ        0 R4 K3      ; if R4 ~= nil then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: LOADBOOL  R5 0 0       ; R5 := false
 67 [-]: RETURN    R5 2         ; return R5
 68 [-]: GETGLOBAL R5 K17       ; R5 := 0xb009bbc6
 69 [-]: GETTABLE  R6 R4 K13    ; R6 := R4["EquippedItem"]
 70 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["mItemType"]
 71 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 72 [-]: GETGLOBAL R6 K10       ; R6 := 0x7b998233
 73 [-]: MOVE      R7 R5        ; R7 := R5
 74 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 75 [-]: TEST      R6 0         ; if not R6 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: LOADBOOL  R6 0 0       ; R6 := false
 78 [-]: RETURN    R6 2         ; return R6
 79 [-]: SELF      R6 R5 K19    ; R7 := R5; R6 := R5[0x4a5d8c86]
 80 [-]: MOVE      R8 R0        ; R8 := R0
 81 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 82 [-]: GETGLOBAL R7 K10       ; R7 := 0x7b998233
 83 [-]: GETTABLE  R8 R6 K18    ; R8 := R6["mItemType"]
 84 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 85 [-]: TEST      R7 0         ; if not R7 then PC := 89
 86 [-]: JMP       89           ; PC := 89
 87 [-]: LOADBOOL  R7 0 0       ; R7 := false
 88 [-]: RETURN    R7 2         ; return R7
 89 [-]: SELF      R7 R5 K20    ; R8 := R5; R7 := R5[0xf2deaf69]
 90 [-]: GETGLOBAL R9 K21       ; R9 := 0x6dcacb87
 91 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 92 [-]: TEST      R7 1         ; if R7 then PC := 129
 93 [-]: JMP       129          ; PC := 129
 94 [-]: GETTABLE  R7 R6 K22    ; R7 := R6["mAbilityIndex"]
 95 [-]: SELF      R8 R5 K23    ; R9 := R5; R8 := R5[0x9352eaa9]
 96 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 97 [-]: LT        0 R7 R8      ; if R7 >= R8 then PC := 129
 98 [-]: JMP       129          ; PC := 129
 99 [-]: GETGLOBAL R7 K10       ; R7 := 0x7b998233
100 [-]: MOVE      R8 R4        ; R8 := R4
101 [-]: CALL      R7 2 2       ; R7 := R7(R8)
102 [-]: TEST      R7 1         ; if R7 then PC := 129
103 [-]: JMP       129          ; PC := 129
104 [-]: GETGLOBAL R7 K10       ; R7 := 0x7b998233
105 [-]: GETTABLE  R8 R4 K13    ; R8 := R4["EquippedItem"]
106 [-]: CALL      R7 2 2       ; R7 := R7(R8)
107 [-]: TEST      R7 1         ; if R7 then PC := 129
108 [-]: JMP       129          ; PC := 129
109 [-]: GETTABLE  R7 R4 K13    ; R7 := R4["EquippedItem"]
110 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["mPolarized"]
111 [-]: LE        0 R7 K12     ; if R7 > 0.000000 then PC := 129
112 [-]: JMP       129          ; PC := 129
113 [-]: SELF      R7 R5 K25    ; R8 := R5; R7 := R5[0x798d990e]
114 [-]: GETTABLE  R9 R6 K22    ; R9 := R6["mAbilityIndex"]
115 [-]: LOADK     R10 1        ; R10 := 1.000000
116 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
117 [-]: GETTABLE  R8 R4 K13    ; R8 := R4["EquippedItem"]
118 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["mXP"]
119 [-]: GETGLOBAL R9 K27       ; R9 := 0xa94df70b
120 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0x1c1ded06]
121 [-]: MOVE      R11 R7       ; R11 := R7
122 [-]: SELF      R12 R5 K29   ; R13 := R5; R12 := R5[0xcde10c4a]
123 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
124 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
125 [-]: LT        0 R8 R9      ; if R8 >= R9 then PC := 129
126 [-]: JMP       129          ; PC := 129
127 [-]: LOADBOOL  R8 0 0       ; R8 := false
128 [-]: RETURN    R8 2         ; return R8
129 [-]: SELF      R8 R5 K20    ; R9 := R5; R8 := R5[0xf2deaf69]
130 [-]: GETGLOBAL R10 K30      ; R10 := 0xf773e9d4
131 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
132 [-]: TEST      R8 0         ; if not R8 then PC := 157
133 [-]: JMP       157          ; PC := 157
134 [-]: GETGLOBAL R8 K0        ; R8 := mLists
135 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["mLoadOutList"]
136 [-]: GETTABLE  R8 R8 K31    ; R8 := R8["MeleeSlotId"]
137 [-]: EQ        1 R8 K3      ; if R8 == nil then PC := 157
138 [-]: JMP       157          ; PC := 157
139 [-]: GETGLOBAL R8 K0        ; R8 := mLists
140 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["mLoadOutList"]
141 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8[0xca30dfb6]
142 [-]: GETGLOBAL R10 K0       ; R10 := mLists
143 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["mLoadOutList"]
144 [-]: GETTABLE  R10 R10 K31  ; R10 := R10["MeleeSlotId"]
145 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
146 [-]: GETTABLE  R9 R8 K13    ; R9 := R8["EquippedItem"]
147 [-]: EQ        1 R9 K3      ; if R9 == nil then PC := 157
148 [-]: JMP       157          ; PC := 157
149 [-]: GETGLOBAL R9 K10       ; R9 := 0x7b998233
150 [-]: GETTABLE  R10 R8 K13   ; R10 := R8["EquippedItem"]
151 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["mItemType"]
152 [-]: CALL      R9 2 2       ; R9 := R9(R10)
153 [-]: TEST      R9 1         ; if R9 then PC := 157
154 [-]: JMP       157          ; PC := 157
155 [-]: LOADBOOL  R9 0 0       ; R9 := false
156 [-]: RETURN    R9 2         ; return R9
157 [-]: LOADBOOL  R9 1 0       ; R9 := true
158 [-]: RETURN    R9 2         ; return R9
159 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 4347
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0xae6791ba]
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  5 [-]: LOADK     R3 K3        ; R3 := "StatContainer.List.StatRow"
  6 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  7 [-]: SETTABLE  R0 K0 R1     ; R0["mStatCompare"] := R1
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mStatCompare"]
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x91a24e4b]
 12 [-]: LOADK     R3 K6        ; R3 := "StatContainer"
 13 [-]: LOADK     R4 1         ; R4 := 1.000000
 14 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 15 [-]: SETTABLE  R0 K4 R1     ; R0["mContainerYPos"] := R1
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mStatCompare"]
 18 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 19 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x91a24e4b]
 20 [-]: LOADK     R3 K8        ; R3 := "StatContainer.List"
 21 [-]: LOADK     R4 1         ; R4 := 1.000000
 22 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 23 [-]: SETTABLE  R0 K7 R1     ; R0["mInitListYPos"] := R1
 24 [-]: GETUPVAL  R0 U0        ; R0 := U0
 25 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mStatCompare"]
 26 [-]: SETTABLE  R0 K9 K10    ; R0["mListYPos"] := 0.000000
 27 [-]: GETUPVAL  R0 U0        ; R0 := U0
 28 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mStatCompare"]
 29 [-]: SETTABLE  R0 K11 K10   ; R0["mRawHeight"] := 0.000000
 30 [-]: GETUPVAL  R0 U0        ; R0 := U0
 31 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mStatCompare"]
 32 [-]: SETTABLE  R0 K12 K10   ; R0["mListHeight"] := 0.000000
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mStatCompare"]
 35 [-]: SETTABLE  R0 K13 K14   ; R0["mMaxHeight"] := 500.000000
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mStatCompare"]
 38 [-]: SETTABLE  R0 K15 K10   ; R0["mUpdateQueued"] := 0.000000
 39 [-]: GETGLOBAL R0 K16       ; R0 := 0x2d0fad09
 40 [-]: LOADK     R1 K17       ; R1 := "EE.Interface.Components.ScrollBar"
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: GETUPVAL  R1 U0        ; R1 := U0
 43 [-]: GETTABLE  R2 R0 K19    ; R2 := R0[0x3b3ea08c]
 44 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 45 [-]: LOADK     R4 K20       ; R4 := "StatContainer.ScrollBarContainer.ScrollBar"
 46 [-]: LOADK     R5 100       ; R5 := 100.000000
 47 [-]: LOADK     R6 0         ; R6 := 0.500000
 48 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 49 [-]: SETTABLE  R1 K18 R2    ; R1["mStatCompareScrollBar"] := R2
 50 [-]: GETUPVAL  R1 U0        ; R1 := U0
 51 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mStatCompareScrollBar"]
 52 [-]: CLOSURE   R2 0         ; R2 := closure(Function #79.1)
 53 [-]: GETUPVAL  R0 U0        ; R0 := U0
 54 [-]: SETTABLE  R1 K21 R2    ; R1["mScrollValueChangedCallback"] := R2
 55 [-]: GETUPVAL  R1 U0        ; R1 := U0
 56 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mStatCompareScrollBar"]
 57 [-]: SETTABLE  R1 K22 K10   ; R1["mRightStickScrollYValue"] := 0.000000
 58 [-]: GETUPVAL  R1 U0        ; R1 := U0
 59 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mStatCompareScrollBar"]
 60 [-]: SETTABLE  R1 K23 K24   ; R1["mEnableSmoothScroll"] := true
 61 [-]: GETUPVAL  R1 U0        ; R1 := U0
 62 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mStatCompareScrollBar"]
 63 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x0077d753]
 64 [-]: LOADBOOL  R3 0 0       ; R3 := false
 65 [-]: CALL      R1 3 1       ; R1(R2,R3)
 66 [-]: GETUPVAL  R1 U0        ; R1 := U0
 67 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mStatCompareScrollBar"]
 68 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0xe91c55ec]
 69 [-]: CALL      R1 2 1       ; R1(R2)
 70 [-]: GETUPVAL  R1 U0        ; R1 := U0
 71 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["mStatCompareScrollBar"]
 72 [-]: SELF      R1 R1 K27    ; R2 := R1; R1 := R1[0x687ae094]
 73 [-]: CALL      R1 2 1       ; R1(R2)
 74 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 75 [-]: SELF      R1 R1 K28    ; R2 := R1; R1 := R1[0xaade900e]
 76 [-]: LOADK     R3 K6        ; R3 := "StatContainer"
 77 [-]: LOADK     R4 11        ; R4 := 11.000000
 78 [-]: LOADBOOL  R5 0 0       ; R5 := false
 79 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 80 [-]: RETURN    R0 1         ; return 


; Function #79.1:
;
; Name:            
; Defined at line: 4362
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x67bc869f]
  3 [-]: LOADK     R4 K2        ; R4 := "StatContainer.List"
  4 [-]: LOADK     R5 1         ; R5 := 1.000000
  5 [-]: GETUPVAL  R6 U0        ; R6 := U0
  6 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["mStatCompare"]
  7 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mListYPos"]
  8 [-]: GETUPVAL  R7 U0        ; R7 := U0
  9 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mStatCompare"]
 10 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mRawHeight"]
 11 [-]: GETUPVAL  R8 U0        ; R8 := U0
 12 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mStatCompare"]
 13 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mMaxHeight"]
 14 [-]: SUB       R7 R7 R8     ; R7 := R7 - R8
 15 [-]: MUL       R7 R7 R0     ; R7 := R7 * R0
 16 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 4374
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.Components.SearchBox"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0[0xae6791ba]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K4        ; R3 := "SearchBox"
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: SETUPVAL  R1 U0        ; U82 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: CLOSURE   R2 0         ; R2 := closure(Function #80.1)
 11 [-]: SETTABLE  R1 K5 R2     ; R1["OnSearchChanged"] := R2
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x687ae094]
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x368ad758]
 17 [-]: LOADBOOL  R3 0 0       ; R3 := false
 18 [-]: CALL      R1 3 1       ; R1(R2,R3)
 19 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xaade900e]
 21 [-]: LOADK     R3 K9        ; R3 := "SearchSortBg"
 22 [-]: LOADK     R4 11        ; R4 := 11.000000
 23 [-]: LOADBOOL  R5 0 0       ; R5 := false
 24 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 25 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x67bc869f]
 27 [-]: LOADK     R3 K11       ; R3 := "SearchSortBg.Bg"
 28 [-]: LOADK     R4 9         ; R4 := 9.000000
 29 [-]: GETGLOBAL R5 K12       ; R5 := 0x0032441c
 30 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["UIColor_DarkGrey"]
 31 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 32 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 33 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x67bc869f]
 34 [-]: LOADK     R3 K11       ; R3 := "SearchSortBg.Bg"
 35 [-]: LOADK     R4 10        ; R4 := 10.000000
 36 [-]: LOADK     R5 50        ; R5 := 50.000000
 37 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 38 [-]: RETURN    R0 1         ; return 


; Function #80.1:
;
; Name:            
; Defined at line: 4378
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mItemsGrid
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 18
  3 [-]: JMP       18           ; PC := 18
  4 [-]: GETGLOBAL R1 K0        ; R1 := mItemsGrid
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mEquippedItemId"]
  6 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETGLOBAL R1 K0        ; R1 := mItemsGrid
  9 [-]: SETTABLE  R1 K3 K4     ; R1["mMuteGridOpenSound"] := true
 10 [-]: GETGLOBAL R1 K0        ; R1 := mItemsGrid
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x71e9ac81]
 12 [-]: LOADNIL   R3 R3        ; R3 := nil
 13 [-]: LOADBOOL  R4 1 0       ; R4 := true
 14 [-]: LOADBOOL  R5 1 0       ; R5 := true
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: GETGLOBAL R1 K0        ; R1 := mItemsGrid
 17 [-]: SETTABLE  R1 K3 K6     ; R1["mMuteGridOpenSound"] := false
 18 [-]: GETGLOBAL R1 K7        ; R1 := _T
 19 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["mSearchTerm"]
 20 [-]: SETTABLE  R1 K8 R2     ; R1["CurrentSearchTerm"] := R2
 21 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 4393
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x5ef3783b]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: LOADNIL   R3 R3        ; R3 := nil
  5 [-]: LOADBOOL  R4 1 0       ; R4 := true
  6 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
  7 [-]: MOVE      R6 R2        ; R6 := R2
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: TEST      R5 1         ; if R5 then PC := 26
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETUPVAL  R5 U0        ; R5 := U0
 12 [-]: GETTABLE  R6 R2 K2     ; R6 := R2["mItemType"]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 15 [-]: MOVE      R7 R5        ; R7 := R5
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: TEST      R6 1         ; if R6 then PC := 26
 18 [-]: JMP       26           ; PC := 26
 19 [-]: GETUPVAL  R6 U1        ; R6 := U1
 20 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[0x056dcf06]
 21 [-]: MOVE      R7 R5        ; R7 := R5
 22 [-]: LOADBOOL  R8 1 0       ; R8 := true
 23 [-]: CALL      R6 3 3       ; R6,R7 := R6(R7,R8)
 24 [-]: MOVE      R4 R7        ; R4 := R7
 25 [-]: MOVE      R3 R6        ; R3 := R6
 26 [-]: MOVE      R6 R3        ; R6 := R3
 27 [-]: MOVE      R7 R4        ; R7 := R4
 28 [-]: RETURN    R6 3         ; return R6,R7
 29 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 4407
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Type"]
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Customization"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Customization"]
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x2540510f]
  7 [-]: LOADK     R4 0         ; R4 := 0.000000
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 11 [-]: LOADK     R5 K5        ; R5 := "/Lotus/Powersuits/Berserker/BerserkerMelee"
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 128
 14 [-]: JMP       128          ; PC := 128
 15 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 16 [-]: LOADK     R5 K6        ; R5 := "/Lotus/Powersuits/Berserker/BerserkerMeleePrime"
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 128
 19 [-]: JMP       128          ; PC := 128
 20 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 21 [-]: LOADK     R5 K7        ; R5 := "/Lotus/Powersuits/Pacifist/PacifistFist"
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 128
 24 [-]: JMP       128          ; PC := 128
 25 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 26 [-]: LOADK     R5 K8        ; R5 := "/Lotus/Powersuits/Wraith/ReaperMeleeWeapon"
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: JMP       128          ; PC := 128
 31 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 32 [-]: LOADK     R5 K9        ; R5 := "/Lotus/Upgrades/Skins/Cowgirl/MesaDeluxeArmGunSkin"
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
 37 [-]: SETTABLE  R3 K12 K11   ; R3[2.000000] := true
 38 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
 39 [-]: JMP       128          ; PC := 128
 40 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 41 [-]: LOADK     R5 K14       ; R5 := "/Lotus/Upgrades/Skins/Cowgirl/MesaDeluxeV2ArmGunSkin"
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 52
 44 [-]: JMP       52           ; PC := 52
 45 [-]: SETTABLE  R3 K15 K11   ; R3[0.000000] := true
 46 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
 47 [-]: SETTABLE  R3 K12 K11   ; R3[2.000000] := true
 48 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
 49 [-]: SETTABLE  R3 K16 K11   ; R3[4.000000] := true
 50 [-]: SETTABLE  R3 K17 K11   ; R3[5.000000] := true
 51 [-]: JMP       128          ; PC := 128
 52 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 53 [-]: LOADK     R5 K18       ; R5 := "/Lotus/Powersuits/Cowgirl/SlingerPistols"
 54 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 55 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 61
 56 [-]: JMP       61           ; PC := 61
 57 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
 58 [-]: SETTABLE  R3 K16 K11   ; R3[4.000000] := true
 59 [-]: SETTABLE  R3 K17 K11   ; R3[5.000000] := true
 60 [-]: JMP       128          ; PC := 128
 61 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 62 [-]: LOADK     R5 K19       ; R5 := "/Lotus/Powersuits/Cowgirl/PrimeSlingerPistols"
 63 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 64 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 72
 65 [-]: JMP       72           ; PC := 72
 66 [-]: SETTABLE  R3 K15 K11   ; R3[0.000000] := true
 67 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
 68 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
 69 [-]: SETTABLE  R3 K16 K11   ; R3[4.000000] := true
 70 [-]: SETTABLE  R3 K17 K11   ; R3[5.000000] := true
 71 [-]: JMP       128          ; PC := 128
 72 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 73 [-]: LOADK     R5 K20       ; R5 := "/Lotus/Upgrades/Skins/MonkeyKing/WukongDeluxeStaffSkin"
 74 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 75 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 82
 76 [-]: JMP       82           ; PC := 82
 77 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
 78 [-]: SETTABLE  R3 K12 K11   ; R3[2.000000] := true
 79 [-]: SETTABLE  R3 K16 K11   ; R3[4.000000] := true
 80 [-]: SETTABLE  R3 K17 K11   ; R3[5.000000] := true
 81 [-]: JMP       128          ; PC := 128
 82 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 83 [-]: LOADK     R5 K21       ; R5 := "/Lotus/Powersuits/MonkeyKing/MonkeyKingStaff"
 84 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 85 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 93
 86 [-]: JMP       93           ; PC := 93
 87 [-]: SETTABLE  R3 K15 K11   ; R3[0.000000] := true
 88 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
 89 [-]: SETTABLE  R3 K12 K11   ; R3[2.000000] := true
 90 [-]: SETTABLE  R3 K16 K11   ; R3[4.000000] := true
 91 [-]: SETTABLE  R3 K17 K11   ; R3[5.000000] := true
 92 [-]: JMP       128          ; PC := 128
 93 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
 94 [-]: LOADK     R5 K22       ; R5 := "/Lotus/Powersuits/MonkeyKing/WukongPrimeStaff"
 95 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 96 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
 99 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
100 [-]: SETTABLE  R3 K16 K11   ; R3[4.000000] := true
101 [-]: SETTABLE  R3 K17 K11   ; R3[5.000000] := true
102 [-]: JMP       128          ; PC := 128
103 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
104 [-]: LOADK     R5 K23       ; R5 := "/Lotus/Upgrades/Skins/IronFrame/ShieldDeluxeBlastSkin"
105 [-]: CALL      R4 2 2       ; R4 := R4(R5)
106 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: SETTABLE  R3 K15 K11   ; R3[0.000000] := true
109 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
110 [-]: SETTABLE  R3 K12 K11   ; R3[2.000000] := true
111 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
112 [-]: JMP       128          ; PC := 128
113 [-]: GETGLOBAL R4 K4        ; R4 := 0x7ed0a956
114 [-]: LOADK     R5 K24       ; R5 := "/Lotus/Powersuits/IronFrame/BlastWeapon"
115 [-]: CALL      R4 2 2       ; R4 := R4(R5)
116 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 122
117 [-]: JMP       122          ; PC := 122
118 [-]: SETTABLE  R3 K15 K11   ; R3[0.000000] := true
119 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
120 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
121 [-]: JMP       128          ; PC := 128
122 [-]: SETTABLE  R3 K15 K11   ; R3[0.000000] := true
123 [-]: SETTABLE  R3 K10 K11   ; R3[1.000000] := true
124 [-]: SETTABLE  R3 K12 K11   ; R3[2.000000] := true
125 [-]: SETTABLE  R3 K13 K11   ; R3[3.000000] := true
126 [-]: SETTABLE  R3 K16 K11   ; R3[4.000000] := true
127 [-]: SETTABLE  R3 K17 K11   ; R3[5.000000] := true
128 [-]: RETURN    R3 2         ; return R3
129 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 4486
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["EquippedItem"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADBOOL  R1 0 0       ; R1 := false
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["EquippedItem"]
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mPolarized"]
 14 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 17 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 18 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["EquippedItem"]
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mPolarized"]
 20 [-]: LE        0 R1 K6      ; if R1 > 0.000000 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 23 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 24 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["LoadOutType"]
 25 [-]: EQ        0 R1 K9      ; if R1 ~= 7.000000 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: LOADBOOL  R1 1 0       ; R1 := true
 28 [-]: RETURN    R1 2         ; return R1
 29 [-]: LOADBOOL  R1 0 0       ; R1 := false
 30 [-]: RETURN    R1 2         ; return R1
 31 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 32 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 33 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["LoadOutType"]
 34 [-]: EQ        1 R1 K6      ; if R1 == 0.000000 then PC := 48
 35 [-]: JMP       48           ; PC := 48
 36 [-]: EQ        1 R1 K10     ; if R1 == 3.000000 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: EQ        1 R1 K11     ; if R1 == 2.000000 then PC := 48
 39 [-]: JMP       48           ; PC := 48
 40 [-]: EQ        1 R1 K12     ; if R1 == 1.000000 then PC := 48
 41 [-]: JMP       48           ; PC := 48
 42 [-]: EQ        1 R1 K13     ; if R1 == 6.000000 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: EQ        1 R1 K14     ; if R1 == 8.000000 then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: LOADBOOL  R2 0 0       ; R2 := false
 47 [-]: RETURN    R2 2         ; return R2
 48 [-]: GETGLOBAL R2 K15       ; R2 := mLists
 49 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mCosmeticsList"]
 50 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mCurrLevel"]
 51 [-]: GETGLOBAL R3 K15       ; R3 := mLists
 52 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["mCosmeticsList"]
 53 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["DEFAULT"]
 54 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 73
 55 [-]: JMP       73           ; PC := 73
 56 [-]: GETGLOBAL R2 K15       ; R2 := mLists
 57 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mCosmeticsList"]
 58 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mCurrLevel"]
 59 [-]: GETGLOBAL R3 K15       ; R3 := mLists
 60 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["mCosmeticsList"]
 61 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["ATTACHMENTS"]
 62 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 73
 63 [-]: JMP       73           ; PC := 73
 64 [-]: GETGLOBAL R2 K15       ; R2 := mLists
 65 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mCosmeticsList"]
 66 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mCurrLevel"]
 67 [-]: GETGLOBAL R3 K15       ; R3 := mLists
 68 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["mCosmeticsList"]
 69 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["SYANDANAS"]
 70 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 73
 73 [-]: LOADBOOL  R2 1 0       ; R2 := true
 74 [-]: RETURN    R2 2         ; return R2
 75 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 4513
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mLists
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mLoadOutCategories"]
  3 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x7c09c373]
  4 [-]: LOADBOOL  R3 1 0       ; R3 := true
  5 [-]: LOADBOOL  R4 1 0       ; R4 := true
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Current"]
  9 [-]: EQ        0 R1 K5      ; if R1 ~= 3.000000 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R1 1         ; R1 := 1.000000
 12 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0xbad4316f]
 13 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 14 [-]: SETTABLE  R4 K7 K8     ; R4["Name"] := "[HC] TENNO"
 15 [-]: SETTABLE  R4 K9 R1     ; R4["ArsenalState"] := R1
 16 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mStates"]
 17 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["TENNO"]
 18 [-]: SETTABLE  R4 K10 R5    ; R4["Id"] := R5
 19 [-]: GETGLOBAL R5 K14       ; R5 := 0x1feaefa7
 20 [-]: SETTABLE  R4 K13 R5    ; R4["Icon"] := R5
 21 [-]: LOADBOOL  R5 1 0       ; R5 := true
 22 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Current"]
 25 [-]: EQ        1 R2 K15     ; if R2 == 2.000000 then PC := 50
 26 [-]: JMP       50           ; PC := 50
 27 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0xbad4316f]
 28 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 29 [-]: SETTABLE  R4 K7 K16    ; R4["Name"] := "[HC] COMPANION"
 30 [-]: SETTABLE  R4 K9 K17    ; R4["ArsenalState"] := 1.000000
 31 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mStates"]
 32 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["COMPANION"]
 33 [-]: SETTABLE  R4 K10 R5    ; R4["Id"] := R5
 34 [-]: GETGLOBAL R5 K19       ; R5 := 0x0032441c
 35 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["UICategoryIcon_SentinelOn"]
 36 [-]: SETTABLE  R4 K13 R5    ; R4["Icon"] := R5
 37 [-]: LOADBOOL  R5 1 0       ; R5 := true
 38 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 39 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0xbad4316f]
 40 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 41 [-]: SETTABLE  R4 K7 K21    ; R4["Name"] := "[HC] GEAR"
 42 [-]: SETTABLE  R4 K9 K17    ; R4["ArsenalState"] := 1.000000
 43 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mStates"]
 44 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["GEAR"]
 45 [-]: SETTABLE  R4 K10 R5    ; R4["Id"] := R5
 46 [-]: GETGLOBAL R5 K23       ; R5 := 0x0c87f090
 47 [-]: SETTABLE  R4 K13 R5    ; R4["Icon"] := R5
 48 [-]: LOADBOOL  R5 1 0       ; R5 := true
 49 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 50 [-]: GETGLOBAL R2 K24       ; R2 := mShowVehicles
 51 [-]: TEST      R2 0         ; if not R2 then PC := 65
 52 [-]: JMP       65           ; PC := 65
 53 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0xbad4316f]
 54 [-]: NEWTABLE  R4 0 4       ; R4 := {}
 55 [-]: SETTABLE  R4 K7 K25    ; R4["Name"] := "[HC] VEHICLES"
 56 [-]: SETTABLE  R4 K9 K5     ; R4["ArsenalState"] := 3.000000
 57 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mStates"]
 58 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["VEHICLES"]
 59 [-]: SETTABLE  R4 K10 R5    ; R4["Id"] := R5
 60 [-]: GETGLOBAL R5 K19       ; R5 := 0x0032441c
 61 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["UICategoryIcon_VehiclesOn"]
 62 [-]: SETTABLE  R4 K13 R5    ; R4["Icon"] := R5
 63 [-]: LOADBOOL  R5 1 0       ; R5 := true
 64 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 65 [-]: GETUPVAL  R2 U1        ; R2 := U1
 66 [-]: GETTABLE  R2 R2 K28    ; R2 := R2[0x74a11ec6]
 67 [-]: SELF      R3 R0 K29    ; R4 := R0; R3 := R0[0x5fbddc1a]
 68 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 69 [-]: DIV       R3 K30 R3    ; R3 := 415.000000 / R3
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: ADD       R3 R2 K17    ; R3 := R2 + 1.000000
 72 [-]: SETTABLE  R0 K31 R3    ; R0["mForcedHorizontalSeparation"] := R3
 73 [-]: SETTABLE  R0 K32 R2    ; R0["mMinWidth"] := R2
 74 [-]: SELF      R3 R0 K33    ; R4 := R0; R3 := R0[0x71e9ac81]
 75 [-]: CALL      R3 2 1       ; R3(R4)
 76 [-]: SETTABLE  R0 K34 K35   ; R0["mQueueInstantReposition"] := true
 77 [-]: SELF      R3 R0 K36    ; R4 := R0; R3 := R0[0x070daa5a]
 78 [-]: GETTABLE  R5 R0 K37    ; R5 := R0["mState"]
 79 [-]: CALL      R3 3 1       ; R3(R4,R5)
 80 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 4539
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.Components.ThemedCategoriesMenu"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := mLists
  5 [-]: GETTABLE  R2 R0 K4     ; R2 := R0[0xae6791ba]
  6 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
  7 [-]: LOADK     R4 K6        ; R4 := "LoadoutCategories"
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: SETTABLE  R1 K3 R2     ; R1["mLoadOutCategories"] := R2
 10 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 12 [-]: NEWTABLE  R2 0 4       ; R2 := {}
 13 [-]: SETTABLE  R2 K8 K9     ; R2["TENNO"] := 1.000000
 14 [-]: SETTABLE  R2 K10 K11   ; R2["COMPANION"] := 2.000000
 15 [-]: SETTABLE  R2 K12 K13   ; R2["GEAR"] := 3.000000
 16 [-]: SETTABLE  R2 K14 K15   ; R2["VEHICLES"] := 4.000000
 17 [-]: SETTABLE  R1 K7 R2     ; R1["mStates"] := R2
 18 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 19 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 20 [-]: GETGLOBAL R2 K2        ; R2 := mLists
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mLoadOutCategories"]
 22 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mStates"]
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["TENNO"]
 24 [-]: SETTABLE  R1 K16 R2    ; R1["mState"] := R2
 25 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 27 [-]: SETTABLE  R1 K17 K18   ; R1["mShowCurrentSelectionLabel"] := false
 28 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 29 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 30 [-]: GETUPVAL  R2 U0        ; R2 := U0
 31 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["LEFT_ALIGNED"]
 32 [-]: SETTABLE  R1 K19 R2    ; R1["mAlign"] := R2
 33 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 34 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 35 [-]: SETTABLE  R1 K21 K22   ; R1["mForcedHorizontalSeparation"] := 76.000000
 36 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 37 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 38 [-]: SETTABLE  R1 K23 K24   ; R1["mMinWidth"] := 75.000000
 39 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 40 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 41 [-]: SETTABLE  R1 K25 K26   ; R1["mMinHeight"] := 55.000000
 42 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 43 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutCategories"]
 44 [-]: CLOSURE   R2 0         ; R2 := closure(Function #85.1)
 45 [-]: GETUPVAL  R0 U1        ; R0 := U1
 46 [-]: GETUPVAL  R0 U2        ; R0 := U2
 47 [-]: GETUPVAL  R0 U3        ; R0 := U3
 48 [-]: SETTABLE  R1 K27 R2    ; R1["mOnSelectedCallback"] := R2
 49 [-]: RETURN    R0 1         ; return 


; Function #85.1:
;
; Name:            
; Defined at line: 4550
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R1 0         ; if not R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETGLOBAL R2 K0        ; R2 := mInputBlocked
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K1        ; R2 := mLists
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mLoadOutCategories"]
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mState"]
 10 [-]: GETGLOBAL R3 K1        ; R3 := mLists
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mLoadOutCategories"]
 12 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["Id"]
 13 [-]: SETTABLE  R3 K3 R4     ; R3["mState"] := R4
 14 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["ArsenalState"]
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Current"]
 17 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETUPVAL  R3 U1        ; R3 := U1
 20 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["ArsenalState"]
 21 [-]: CALL      R3 2 1       ; R3(R4)
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["Id"]
 24 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: CALL      R3 1 1       ; R3()
 28 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 4565
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mLists
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mLoadOutCategories"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R1 K1        ; R1 := mLists
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mLoadOutCategories"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xdf42446e]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 4571
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mLists
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mLoadOutCategories"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R1 K1        ; R1 := mLists
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mLoadOutCategories"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbce5a201]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 4577
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mLists
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mLoadOutCategories"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 18
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R1 K3        ; R1 := mInputBlocked
  8 [-]: TEST      R1 1         ; if R1 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETGLOBAL R1 K1        ; R1 := mLists
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mLoadOutCategories"]
 12 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x070daa5a]
 13 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: LOADBOOL  R4 1 0       ; R4 := true
 17 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 4583
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutType"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutType"]
  5 [-]: EQ        1 R1 K3      ; if R1 == 7.000000 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 8
  8 [-]: LOADBOOL  R1 1 0       ; R1 := true
  9 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["Type"]
 10 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["Type"]
 13 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf2deaf69]
 14 [-]: GETGLOBAL R4 K6        ; R4 := 0x30b62636
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: JMP       19           ; PC := 19
 17 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 18
 18 [-]: LOADBOOL  R2 1 0       ; R2 := true
 19 [-]: TEST      R1 1         ; if R1 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: TEST      R2 1         ; if R2 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["MandachordEntry"]
 24 [-]: TEST      R3 0         ; if not R3 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: LOADBOOL  R3 1 0       ; R3 := true
 27 [-]: RETURN    R3 2         ; return R3
 28 [-]: LOADBOOL  R3 0 0       ; R3 := false
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 4593
; #Upvalues:       26
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := mLists
  5 [-]: GETTABLE  R2 R0 K4     ; R2 := R0[0x9383bc56]
  6 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
  7 [-]: LOADK     R4 K6        ; R4 := "MenuItem"
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: SETTABLE  R1 K3 R2     ; R1["mLoadOutList"] := R2
 10 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 12 [-]: SETTABLE  R1 K7 K8     ; R1["mForcedVerticalSeparation"] := 68.000000
 13 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 15 [-]: SETTABLE  R1 K9 K10    ; R1["mTransitionInDeltaY"] := 0.000000
 16 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 17 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 18 [-]: SETTABLE  R1 K11 K10   ; R1["mTransitionOutDeltaY"] := 0.000000
 19 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 20 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 21 [-]: SETTABLE  R1 K12 K13   ; R1["mWrapAroundNavigation"] := true
 22 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 23 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 24 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 25 [-]: LOADK     R3 K15       ; R3 := "MenuItemPressed"
 26 [-]: LOADK     R4 K16       ; R4 := "MenuItemFocused"
 27 [-]: LOADK     R5 K17       ; R5 := "MenuItemUnfocused"
 28 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 29 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 30 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 31 [-]: CLOSURE   R2 0         ; R2 := closure(Function #90.1)
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: GETUPVAL  R0 U2        ; R0 := U2
 35 [-]: GETUPVAL  R0 U3        ; R0 := U3
 36 [-]: GETUPVAL  R0 U4        ; R0 := U4
 37 [-]: GETUPVAL  R0 U5        ; R0 := U5
 38 [-]: GETUPVAL  R0 U6        ; R0 := U6
 39 [-]: GETUPVAL  R0 U7        ; R0 := U7
 40 [-]: GETUPVAL  R0 U8        ; R0 := U8
 41 [-]: GETUPVAL  R0 U9        ; R0 := U9
 42 [-]: GETUPVAL  R0 U10       ; R0 := U10
 43 [-]: GETUPVAL  R0 U11       ; R0 := U11
 44 [-]: SETTABLE  R1 K18 R2    ; R1["mOnFocusedCallback"] := R2
 45 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 46 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 47 [-]: CLOSURE   R2 1         ; R2 := closure(Function #90.2)
 48 [-]: SETTABLE  R1 K19 R2    ; R1["mOnUnfocusedCallback"] := R2
 49 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 50 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 51 [-]: CLOSURE   R2 2         ; R2 := closure(Function #90.3)
 52 [-]: SETTABLE  R1 K20 R2    ; R1["RepositionButtons"] := R2
 53 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 54 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 55 [-]: CLOSURE   R2 3         ; R2 := closure(Function #90.4)
 56 [-]: GETUPVAL  R0 U3        ; R0 := U3
 57 [-]: GETUPVAL  R0 U5        ; R0 := U5
 58 [-]: GETUPVAL  R0 U7        ; R0 := U7
 59 [-]: GETUPVAL  R0 U12       ; R0 := U12
 60 [-]: GETUPVAL  R0 U13       ; R0 := U13
 61 [-]: SETTABLE  R1 K21 R2    ; R1["mOnSelectedCallback"] := R2
 62 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 63 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 64 [-]: CLOSURE   R2 4         ; R2 := closure(Function #90.5)
 65 [-]: GETUPVAL  R0 U14       ; R0 := U14
 66 [-]: GETUPVAL  R0 U15       ; R0 := U15
 67 [-]: GETUPVAL  R0 U16       ; R0 := U16
 68 [-]: SETTABLE  R1 K22 R2    ; R1["RefreshElementIcon"] := R2
 69 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 70 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 71 [-]: CLOSURE   R2 5         ; R2 := closure(Function #90.6)
 72 [-]: GETUPVAL  R0 U3        ; R0 := U3
 73 [-]: GETUPVAL  R0 U4        ; R0 := U4
 74 [-]: GETUPVAL  R0 U17       ; R0 := U17
 75 [-]: GETUPVAL  R0 U18       ; R0 := U18
 76 [-]: GETUPVAL  R0 U19       ; R0 := U19
 77 [-]: GETUPVAL  R0 U20       ; R0 := U20
 78 [-]: GETUPVAL  R0 U11       ; R0 := U11
 79 [-]: GETUPVAL  R0 U21       ; R0 := U21
 80 [-]: GETUPVAL  R0 U6        ; R0 := U6
 81 [-]: GETUPVAL  R0 U22       ; R0 := U22
 82 [-]: GETUPVAL  R0 U23       ; R0 := U23
 83 [-]: GETUPVAL  R0 U24       ; R0 := U24
 84 [-]: GETUPVAL  R0 U25       ; R0 := U25
 85 [-]: GETUPVAL  R0 U16       ; R0 := U16
 86 [-]: SETTABLE  R1 K23 R2    ; R1["mElementDrawCallback"] := R2
 87 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 88 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 89 [-]: CLOSURE   R2 6         ; R2 := closure(Function #90.7)
 90 [-]: SETTABLE  R1 K24 R2    ; R1["SetupPreInterpolationValues"] := R2
 91 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 92 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 93 [-]: GETGLOBAL R2 K2        ; R2 := mLists
 94 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mLoadOutList"]
 95 [-]: GETTABLE  R2 R2 K26    ; R2 := R2["DefaultAlphaInterpolation"]
 96 [-]: SETTABLE  R1 K25 R2    ; R1["GetInterpolationProperties"] := R2
 97 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 98 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
 99 [-]: GETGLOBAL R2 K2        ; R2 := mLists
100 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mLoadOutList"]
101 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["CalculateY"]
102 [-]: SETTABLE  R1 K27 R2    ; R1["_LoadOutList_CalculateY"] := R2
103 [-]: GETGLOBAL R1 K2        ; R1 := mLists
104 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
105 [-]: CLOSURE   R2 7         ; R2 := closure(Function #90.8)
106 [-]: GETUPVAL  R0 U25       ; R0 := U25
107 [-]: GETUPVAL  R0 U20       ; R0 := U20
108 [-]: GETUPVAL  R0 U17       ; R0 := U17
109 [-]: GETUPVAL  R0 U11       ; R0 := U11
110 [-]: GETUPVAL  R0 U3        ; R0 := U3
111 [-]: SETTABLE  R1 K28 R2    ; R1["CalculateY"] := R2
112 [-]: GETGLOBAL R1 K2        ; R1 := mLists
113 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
114 [-]: CLOSURE   R2 8         ; R2 := closure(Function #90.9)
115 [-]: SETTABLE  R1 K29 R2    ; R1["OnElementTransitionStarted"] := R2
116 [-]: GETGLOBAL R1 K2        ; R1 := mLists
117 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
118 [-]: CLOSURE   R2 9         ; R2 := closure(Function #90.10)
119 [-]: SETTABLE  R1 K30 R2    ; R1["OnElementTransitionEnded"] := R2
120 [-]: RETURN    R0 1         ; return 


; Function #90.1:
;
; Name:            
; Defined at line: 4602
; #Upvalues:       12
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 1         ; if R1 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Element"]
  7 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
 10 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Element"]
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Id"]
 12 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Id"]
 13 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["SELECTING_PART"]
 19 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["LoadOutId"]
 23 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["LoadOutType"]
 26 [-]: EQ        0 R1 K8      ; if R1 ~= 0.000000 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["LoadOutId"]
 29 [-]: EQ        1 R1 K9      ; if R1 == 4.000000 then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: GETUPVAL  R1 U3        ; R1 := U3
 32 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 52
 33 [-]: JMP       52           ; PC := 52
 34 [-]: GETUPVAL  R1 U3        ; R1 := U3
 35 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["LoadOutId"]
 36 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 52
 37 [-]: JMP       52           ; PC := 52
 38 [-]: GETUPVAL  R1 U3        ; R1 := U3
 39 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["LoadOutType"]
 40 [-]: EQ        0 R1 K8      ; if R1 ~= 0.000000 then PC := 52
 41 [-]: JMP       52           ; PC := 52
 42 [-]: GETUPVAL  R1 U3        ; R1 := U3
 43 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["LoadOutId"]
 44 [-]: EQ        0 R1 K9      ; if R1 ~= 4.000000 then PC := 52
 45 [-]: JMP       52           ; PC := 52
 46 [-]: GETUPVAL  R1 U4        ; R1 := U4
 47 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0xd19b6acc]
 48 [-]: LOADBOOL  R2 0 0       ; R2 := false
 49 [-]: MOVE      R3 R0        ; R3 := R0
 50 [-]: LOADBOOL  R4 0 0       ; R4 := false
 51 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 52 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["LoadOutId"]
 53 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 61
 54 [-]: JMP       61           ; PC := 61
 55 [-]: GETGLOBAL R1 K11       ; R1 := mLists
 56 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mLoadOutList"]
 57 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x070daa5a]
 58 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["Id"]
 59 [-]: CALL      R1 3 1       ; R1(R2,R3)
 60 [-]: JMP       80           ; PC := 80
 61 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
 62 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Element"]
 63 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETUPVAL  R1 U5        ; R1 := U5
 66 [-]: GETGLOBAL R2 K0        ; R2 := mSelected
 67 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Element"]
 68 [-]: CALL      R1 2 1       ; R1(R2)
 69 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
 70 [-]: SETTABLE  R1 K1 K2     ; R1["Element"] := nil
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETUPVAL  R1 U3        ; R1 := U3
 73 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 80
 74 [-]: JMP       80           ; PC := 80
 75 [-]: GETUPVAL  R1 U5        ; R1 := U5
 76 [-]: GETUPVAL  R2 U3        ; R2 := U3
 77 [-]: CALL      R1 2 1       ; R1(R2)
 78 [-]: LOADNIL   R1 R1        ; R1 := nil
 79 [-]: SETUPVAL  R1 U3        ; U82 := R3
 80 [-]: SETUPVAL  R0 U3        ; U82 := R3
 81 [-]: GETUPVAL  R1 U6        ; R1 := U6
 82 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[0x659d451f]
 83 [-]: GETGLOBAL R2 K15       ; R2 := 0x0032441c
 84 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["UISound_Focus"]
 85 [-]: CALL      R1 2 1       ; R1(R2)
 86 [-]: GETGLOBAL R1 K17       ; R1 := 0x25312c9b
 87 [-]: GETGLOBAL R2 K18       ; R2 := 0xae91e43b
 88 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["mClipName"]
 89 [-]: LOADK     R4 K20       ; R4 := ".Mask"
 90 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 91 [-]: LOADK     R4 2         ; R4 := 2.000000
 92 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 93 [-]: LOADK     R6 12        ; R6 := 12.000000
 94 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 95 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 96 [-]: GETTABLE  R7 R0 K22    ; R7 := R0["LabelWidth"]
 97 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 98 [-]: LOADK     R7 K23       ; R7 := 0.200000
 99 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
100 [-]: GETGLOBAL R1 K17       ; R1 := 0x25312c9b
101 [-]: GETGLOBAL R2 K18       ; R2 := 0xae91e43b
102 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["mClipName"]
103 [-]: LOADK     R4 K24       ; R4 := ".Stub"
104 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
105 [-]: LOADK     R4 0         ; R4 := 0.000000
106 [-]: NEWTABLE  R5 2 0       ; R5 := {}
107 [-]: LOADK     R6 10        ; R6 := 10.000000
108 [-]: LOADK     R7 6         ; R7 := 6.000000
109 [-]: SETLIST   R5 2 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
110 [-]: NEWTABLE  R6 2 0       ; R6 := {}
111 [-]: LOADK     R7 0         ; R7 := 0.000000
112 [-]: LOADK     R8 1         ; R8 := 1.000000
113 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
114 [-]: LOADK     R7 K23       ; R7 := 0.200000
115 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
116 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["LoadOutId"]
117 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 131
118 [-]: JMP       131          ; PC := 131
119 [-]: GETGLOBAL R1 K18       ; R1 := 0xae91e43b
120 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0xf64b7262]
121 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["mClipName"]
122 [-]: LOADK     R4 K26       ; R4 := "Arrow"
123 [-]: LOADK     R5 10        ; R5 := 10.000000
124 [-]: LOADK     R6 100       ; R6 := 100.000000
125 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
126 [-]: GETUPVAL  R1 U7        ; R1 := U7
127 [-]: LOADK     R2 0         ; R2 := 0.000000
128 [-]: LOADK     R3 0         ; R3 := 0.000000
129 [-]: MOVE      R4 R0        ; R4 := R0
130 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
131 [-]: GETUPVAL  R1 U8        ; R1 := U8
132 [-]: MOVE      R2 R0        ; R2 := R0
133 [-]: CALL      R1 2 1       ; R1(R2)
134 [-]: GETGLOBAL R1 K27       ; R1 := 0x7b998233
135 [-]: GETGLOBAL R2 K28       ; R2 := mEvoMovie
136 [-]: CALL      R1 2 2       ; R1 := R1(R2)
137 [-]: TEST      R1 1         ; if R1 then PC := 146
138 [-]: JMP       146          ; PC := 146
139 [-]: GETGLOBAL R1 K28       ; R1 := mEvoMovie
140 [-]: SELF      R1 R1 K29    ; R2 := R1; R1 := R1[0xe4162eed]
141 [-]: LOADK     R3 K30       ; R3 := "Close"
142 [-]: LOADK     R4 K31       ; R4 := ""
143 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
144 [-]: LOADNIL   R1 R1        ; R1 := nil
145 [-]: SETGLOBAL R1 K28       ; mEvoMovie := R1
146 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["LoadOutId"]
147 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 152
148 [-]: JMP       152          ; PC := 152
149 [-]: GETUPVAL  R1 U9        ; R1 := U9
150 [-]: GETTABLE  R1 R1 K32    ; R1 := R1["mStatCompare"]
151 [-]: SETTABLE  R1 K33 K34   ; R1["mUpdateQueued"] := 2.000000
152 [-]: GETUPVAL  R1 U10       ; R1 := U10
153 [-]: MOVE      R2 R0        ; R2 := R0
154 [-]: CALL      R1 2 1       ; R1(R2)
155 [-]: GETGLOBAL R1 K11       ; R1 := mLists
156 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mLoadOutList"]
157 [-]: SELF      R1 R1 K35    ; R2 := R1; R1 := R1[0xea061e98]
158 [-]: CLOSURE   R3 0         ; R3 := closure(Function #90.1.1)
159 [-]: GETUPVAL  R0 U11       ; R0 := U11
160 [-]: CALL      R1 3 1       ; R1(R2,R3)
161 [-]: RETURN    R0 1         ; return 


; Function #90.1.1:
;
; Name:            
; Defined at line: 4651
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25312c9b
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["RESIZE_EASE"]
  6 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  7 [-]: LOADK     R6 1         ; R6 := 1.000000
  8 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
  9 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 10 [-]: GETGLOBAL R7 K4        ; R7 := mLists
 11 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mLoadOutList"]
 12 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0x68e36b8d]
 13 [-]: MOVE      R9 R0        ; R9 := R0
 14 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 15 [-]: SETLIST   R6 0 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 0
 16 [-]: GETUPVAL  R7 U0        ; R7 := U0
 17 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["RESIZE_DURATION"]
 18 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 19 [-]: RETURN    R0 1         ; return 


; Function #90.2:
;
; Name:            
; Defined at line: 4656
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutId"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf64b7262]
  6 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mClipName"]
  7 [-]: LOADK     R4 K5        ; R4 := "Arrow"
  8 [-]: LOADK     R5 10        ; R5 := 10.000000
  9 [-]: LOADK     R6 0         ; R6 := 0.000000
 10 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 11 [-]: RETURN    R0 1         ; return 


; Function #90.3:
;
; Name:            
; Defined at line: 4667
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mNumButtons"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 70
  3 [-]: JMP       70           ; PC := 70
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K3        ; R2 := mSelected
  6 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Element"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 70
  9 [-]: JMP       70           ; PC := 70
 10 [-]: LOADK     R1 39        ; R1 := 39.000000
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0x42dcc9f5
 12 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mNumButtons"]
 13 [-]: LOADK     R4 1         ; R4 := 1.000000
 14 [-]: LOADK     R5 3         ; R5 := 3.000000
 15 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 16 [-]: SUB       R2 R2 K6     ; R2 := R2 - 1.000000
 17 [-]: MUL       R2 K7 R2     ; R2 := -20.000000 * R2
 18 [-]: LOADK     R3 1         ; R3 := 1.000000
 19 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mNumButtons"]
 20 [-]: LOADK     R5 1         ; R5 := 1.000000
 21 [-]: FORPREP   R3 69        ; R3 -= R5; PC := 69
 22 [-]: GETGLOBAL R7 K8        ; R7 := 0xae91e43b
 23 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xaade900e]
 24 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
 25 [-]: LOADK     R10 K11      ; R10 := ".Btn"
 26 [-]: MOVE      R11 R6       ; R11 := R6
 27 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 28 [-]: LOADK     R10 11       ; R10 := 11.000000
 29 [-]: LOADBOOL  R11 1 0      ; R11 := true
 30 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 31 [-]: GETGLOBAL R7 K8        ; R7 := 0xae91e43b
 32 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xaade900e]
 33 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
 34 [-]: LOADK     R10 K11      ; R10 := ".Btn"
 35 [-]: MOVE      R11 R6       ; R11 := R6
 36 [-]: LOADK     R12 K11      ; R12 := ".Btn"
 37 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 38 [-]: LOADK     R10 59       ; R10 := 59.000000
 39 [-]: LOADBOOL  R11 1 0      ; R11 := true
 40 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 41 [-]: GETGLOBAL R7 K8        ; R7 := 0xae91e43b
 42 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0x67bc869f]
 43 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mClipName"]
 44 [-]: LOADK     R10 K11      ; R10 := ".Btn"
 45 [-]: MOVE      R11 R6       ; R11 := R6
 46 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 47 [-]: LOADK     R10 1        ; R10 := 1.000000
 48 [-]: SUB       R11 R6 K6    ; R11 := R6 - 1.000000
 49 [-]: MUL       R11 R11 R1   ; R11 := R11 * R1
 50 [-]: ADD       R11 R2 R11   ; R11 := R2 + R11
 51 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 52 [-]: GETGLOBAL R7 K13       ; R7 := 0x25312c9b
 53 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
 54 [-]: GETGLOBAL R9 K3        ; R9 := mSelected
 55 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["Element"]
 56 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mClipName"]
 57 [-]: LOADK     R10 K11      ; R10 := ".Btn"
 58 [-]: MOVE      R11 R6       ; R11 := R6
 59 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 60 [-]: LOADK     R10 8        ; R10 := 8.000000
 61 [-]: NEWTABLE  R11 1 0      ; R11 := {}
 62 [-]: LOADK     R12 10       ; R12 := 10.000000
 63 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
 64 [-]: NEWTABLE  R12 1 0      ; R12 := {}
 65 [-]: LOADK     R13 100      ; R13 := 100.000000
 66 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
 67 [-]: LOADK     R13 K15      ; R13 := 0.300000
 68 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 69 [-]: FORLOOP   R3 22        ; R3 += R5; if R3 <= R4 then begin PC := 22; R6 := R3 end
 70 [-]: RETURN    R0 1         ; return 


; Function #90.4:
;
; Name:            
; Defined at line: 4682
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["Id"]
  3 [-]: SETTABLE  R1 K1 R2     ; R1["SelectedLoadOutPart"] := R2
  4 [-]: GETGLOBAL R1 K3        ; R1 := mSelected
  5 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Element"]
  6 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 14
  7 [-]: JMP       14           ; PC := 14
  8 [-]: GETGLOBAL R1 K3        ; R1 := mSelected
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Element"]
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Id"]
 11 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["Id"]
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 143
 13 [-]: JMP       143          ; PC := 143
 14 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["LoadOutId"]
 15 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 121
 16 [-]: JMP       121          ; PC := 121
 17 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: GETGLOBAL R1 K3        ; R1 := mSelected
 26 [-]: SETTABLE  R1 K4 R0     ; R1["Element"] := R0
 27 [-]: GETUPVAL  R1 U2        ; R1 := U2
 28 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["LoadOutType"]
 29 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["LoadOutId"]
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 32 [-]: GETGLOBAL R1 K0        ; R1 := _T
 33 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mSentinelMode"]
 34 [-]: GETUPVAL  R2 U3        ; R2 := U3
 35 [-]: CALL      R2 1 2       ; R2 := R2()
 36 [-]: TEST      R2 1         ; if R2 then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 39 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mStoreItem"]
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: TEST      R2 0         ; if not R2 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: GETGLOBAL R2 K0        ; R2 := _T
 44 [-]: SETTABLE  R2 K9 K11    ; R2["mSentinelMode"] := false
 45 [-]: JMP       53           ; PC := 53
 46 [-]: GETGLOBAL R2 K0        ; R2 := _T
 47 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["LoadOutType"]
 48 [-]: EQ        1 R3 K13     ; if R3 == 1.000000 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 51
 51 [-]: LOADBOOL  R3 1 0       ; R3 := true
 52 [-]: SETTABLE  R2 K9 R3     ; R2["mSentinelMode"] := R3
 53 [-]: GETGLOBAL R2 K0        ; R2 := _T
 54 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["MenuSentinel"]
 55 [-]: GETUPVAL  R3 U3        ; R3 := U3
 56 [-]: CALL      R3 1 2       ; R3 := R3()
 57 [-]: TEST      R3 1         ; if R3 then PC := 88
 58 [-]: JMP       88           ; PC := 88
 59 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 60 [-]: MOVE      R4 R2        ; R4 := R2
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: TEST      R3 1         ; if R3 then PC := 88
 63 [-]: JMP       88           ; PC := 88
 64 [-]: GETGLOBAL R3 K0        ; R3 := _T
 65 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSentinelMode"]
 66 [-]: TEST      R3 0         ; if not R3 then PC := 88
 67 [-]: JMP       88           ; PC := 88
 68 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 69 [-]: GETGLOBAL R4 K15       ; R4 := 0x25d99d89
 70 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 71 [-]: TEST      R3 1         ; if R3 then PC := 88
 72 [-]: JMP       88           ; PC := 88
 73 [-]: GETGLOBAL R3 K15       ; R3 := 0x25d99d89
 74 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x3c6b0324]
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: TEST      R3 1         ; if R3 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: GETGLOBAL R3 K15       ; R3 := 0x25d99d89
 79 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3[0x9f91f49d]
 80 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 81 [-]: TEST      R3 0         ; if not R3 then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETUPVAL  R3 U4        ; R3 := U4
 84 [-]: LE        0 R3 K18     ; if R3 > 0.500000 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: LOADK     R3 0         ; R3 := 0.500000
 87 [-]: SETUPVAL  R3 U4        ; U82 := R4
 88 [-]: GETGLOBAL R3 K0        ; R3 := _T
 89 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSentinelMode"]
 90 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 115
 91 [-]: JMP       115          ; PC := 115
 92 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["LoadOutType"]
 93 [-]: EQ        1 R3 K19     ; if R3 == 6.000000 then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["LoadOutType"]
 96 [-]: EQ        0 R3 K20     ; if R3 ~= 2.000000 then PC := 104
 97 [-]: JMP       104          ; PC := 104
 98 [-]: GETGLOBAL R3 K0        ; R3 := _T
 99 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["suitTable"]
100 [-]: GETGLOBAL R4 K0        ; R4 := _T
101 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["ARCHWING_DEFAULT_ROTATION"]
102 [-]: SETTABLE  R3 K22 R4    ; R3["desiredRot"] := R4
103 [-]: JMP       109          ; PC := 109
104 [-]: GETGLOBAL R3 K0        ; R3 := _T
105 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["suitTable"]
106 [-]: GETGLOBAL R4 K0        ; R4 := _T
107 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["DEFAULT_SUIT_ROTATION"]
108 [-]: SETTABLE  R3 K22 R4    ; R3["desiredRot"] := R4
109 [-]: GETGLOBAL R3 K0        ; R3 := _T
110 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["suitTable"]
111 [-]: GETGLOBAL R4 K0        ; R4 := _T
112 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["suitTable"]
113 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["desiredRot"]
114 [-]: SETTABLE  R3 K25 R4    ; R3["lerpRot"] := R4
115 [-]: GETGLOBAL R3 K26       ; R3 := mLists
116 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["mLoadOutList"]
117 [-]: GETTABLE  R3 R3 K28    ; R3 := R3[0xad85f085]
118 [-]: MOVE      R4 R0        ; R4 := R0
119 [-]: CALL      R3 2 1       ; R3(R4)
120 [-]: JMP       166          ; PC := 166
121 [-]: GETTABLE  R3 R0 K29    ; R3 := R0["OpenScreen"]
122 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 132
123 [-]: JMP       132          ; PC := 132
124 [-]: GETGLOBAL R3 K0        ; R3 := _T
125 [-]: GETGLOBAL R4 K31       ; R4 := mCurrentLoadout
126 [-]: SETTABLE  R3 K30 R4    ; R3["loadoutInProgress"] := R4
127 [-]: GETGLOBAL R3 K0        ; R3 := _T
128 [-]: GETTABLE  R3 R3 K32    ; R3 := R3[0xbf0443a1]
129 [-]: GETTABLE  R4 R0 K29    ; R4 := R0["OpenScreen"]
130 [-]: CALL      R3 2 1       ; R3(R4)
131 [-]: JMP       166          ; PC := 166
132 [-]: GETTABLE  R3 R0 K33    ; R3 := R0["Callback"]
133 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 166
134 [-]: JMP       166          ; PC := 166
135 [-]: GETTABLE  R3 R0 K34    ; R3 := R0["LunaroArenaEntry"]
136 [-]: TEST      R3 0         ; if not R3 then PC := 140
137 [-]: JMP       140          ; PC := 140
138 [-]: GETGLOBAL R3 K3        ; R3 := mSelected
139 [-]: SETTABLE  R3 K4 R0     ; R3["Element"] := R0
140 [-]: GETTABLE  R3 R0 K35    ; R3 := R0[0x75afeb61]
141 [-]: CALL      R3 1 1       ; R3()
142 [-]: JMP       166          ; PC := 166
143 [-]: GETGLOBAL R3 K36       ; R3 := 0x34291f5c
144 [-]: GETTABLE  R3 R3 K37    ; R3 := R3[0x1467d5f4]
145 [-]: CALL      R3 1 2       ; R3 := R3()
146 [-]: TEST      R3 0         ; if not R3 then PC := 166
147 [-]: JMP       166          ; PC := 166
148 [-]: GETGLOBAL R3 K3        ; R3 := mSelected
149 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Element"]
150 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 166
151 [-]: JMP       166          ; PC := 166
152 [-]: GETGLOBAL R3 K3        ; R3 := mSelected
153 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Element"]
154 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Id"]
155 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["Id"]
156 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["LoadOutId"]
159 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 166
160 [-]: JMP       166          ; PC := 166
161 [-]: GETGLOBAL R3 K38       ; R3 := 0xae91e43b
162 [-]: SELF      R3 R3 K39    ; R4 := R3; R3 := R3[0xe4162eed]
163 [-]: LOADK     R5 K40       ; R5 := "onKeyUp_MENU_SELECT"
164 [-]: LOADK     R6 K41       ; R6 := ""
165 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
166 [-]: RETURN    R0 1         ; return 


; Function #90.5:
;
; Name:            
; Defined at line: 4735
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 11 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xc0a3774b]
 12 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 13 [-]: LOADK     R4 K5        ; R4 := "Icon"
 14 [-]: LOADK     R5 11        ; R5 := 11.000000
 15 [-]: LOADBOOL  R6 1 0       ; R6 := true
 16 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 17 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 18 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["Icon"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 23 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x1cb415c1]
 24 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 25 [-]: LOADK     R4 K7        ; R4 := ".Icon"
 26 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 27 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["Icon"]
 28 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 29 [-]: SETTABLE  R0 K8 K9     ; R0["Themed"] := true
 30 [-]: JMP       124          ; PC := 124
 31 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 32 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mStoreItem"]
 33 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 34 [-]: TEST      R1 1         ; if R1 then PC := 90
 35 [-]: JMP       90           ; PC := 90
 36 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["LoadOutId"]
 37 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 90
 38 [-]: JMP       90           ; PC := 90
 39 [-]: GETUPVAL  R1 U0        ; R1 := U0
 40 [-]: GETTABLE  R1 R1 K12    ; R1 := R1[0x056dcf06]
 41 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mStoreItem"]
 42 [-]: LOADBOOL  R3 1 0       ; R3 := true
 43 [-]: CALL      R1 3 3       ; R1,R2 := R1(R2,R3)
 44 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 45 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["Customization"]
 46 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 47 [-]: TEST      R3 1         ; if R3 then PC := 81
 48 [-]: JMP       81           ; PC := 81
 49 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["Type"]
 50 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xf2deaf69]
 51 [-]: GETGLOBAL R5 K16       ; R5 := 0xb9a9a904
 52 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 53 [-]: TEST      R3 1         ; if R3 then PC := 81
 54 [-]: JMP       81           ; PC := 81
 55 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["Type"]
 56 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xf2deaf69]
 57 [-]: GETGLOBAL R5 K17       ; R5 := 0x01302fb0
 58 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 59 [-]: TEST      R3 1         ; if R3 then PC := 81
 60 [-]: JMP       81           ; PC := 81
 61 [-]: LOADNIL   R3 R3        ; R3 := nil
 62 [-]: GETTABLE  R4 R0 K18    ; R4 := R0["LoadOutType"]
 63 [-]: EQ        0 R4 K20     ; if R4 ~= 7.000000 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: LOADK     R3 0         ; R3 := 0.000000
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["LoadOutId"]
 68 [-]: EQ        0 R4 K21     ; if R4 ~= 0.000000 then PC := 72
 69 [-]: JMP       72           ; PC := 72
 70 [-]: LOADK     R3 7         ; R3 := 7.000000
 71 [-]: JMP       73           ; PC := 73
 72 [-]: LOADK     R3 0         ; R3 := 0.000000
 73 [-]: GETUPVAL  R4 U1        ; R4 := U1
 74 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["Customization"]
 75 [-]: MOVE      R6 R3        ; R6 := R3
 76 [-]: CALL      R4 3 3       ; R4,R5 := R4(R5,R6)
 77 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 81
 78 [-]: JMP       81           ; PC := 81
 79 [-]: MOVE      R1 R4        ; R1 := R4
 80 [-]: MOVE      R2 R5        ; R2 := R5
 81 [-]: SETTABLE  R0 K8 R2     ; R0["Themed"] := R2
 82 [-]: GETGLOBAL R6 K3        ; R6 := 0xae91e43b
 83 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x1cb415c1]
 84 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 85 [-]: LOADK     R9 K7        ; R9 := ".Icon"
 86 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 87 [-]: MOVE      R9 R1        ; R9 := R1
 88 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 89 [-]: JMP       124          ; PC := 124
 90 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 91 [-]: GETTABLE  R7 R0 K22    ; R7 := R0["Texture"]
 92 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 93 [-]: TEST      R6 1         ; if R6 then PC := 117
 94 [-]: JMP       117          ; PC := 117
 95 [-]: GETGLOBAL R6 K3        ; R6 := 0xae91e43b
 96 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0x1cb415c1]
 97 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
 98 [-]: LOADK     R9 K7        ; R9 := ".Icon"
 99 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
100 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["Texture"]
101 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
102 [-]: GETTABLE  R6 R0 K23    ; R6 := R0["EmotesEntry"]
103 [-]: TEST      R6 1         ; if R6 then PC := 108
104 [-]: JMP       108          ; PC := 108
105 [-]: GETTABLE  R6 R0 K24    ; R6 := R0["MandachordEntry"]
106 [-]: TEST      R6 0         ; if not R6 then PC := 124
107 [-]: JMP       124          ; PC := 124
108 [-]: GETGLOBAL R6 K3        ; R6 := 0xae91e43b
109 [-]: SELF      R6 R6 K25    ; R7 := R6; R6 := R6[0xf64b7262]
110 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
111 [-]: LOADK     R9 K5        ; R9 := "Icon"
112 [-]: LOADK     R10 9        ; R10 := 9.000000
113 [-]: GETGLOBAL R11 K26      ; R11 := 0x0032441c
114 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["UIColor_DarkGrey"]
115 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
116 [-]: JMP       124          ; PC := 124
117 [-]: GETGLOBAL R6 K3        ; R6 := 0xae91e43b
118 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6[0xc0a3774b]
119 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mClipName"]
120 [-]: LOADK     R9 K5        ; R9 := "Icon"
121 [-]: LOADK     R10 11       ; R10 := 11.000000
122 [-]: LOADBOOL  R11 0 0      ; R11 := false
123 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
124 [-]: GETUPVAL  R6 U2        ; R6 := U2
125 [-]: MOVE      R7 R0        ; R7 := R0
126 [-]: CALL      R6 2 1       ; R6(R7)
127 [-]: RETURN    R0 1         ; return 


; Function #90.6:
;
; Name:            
; Defined at line: 4780
; #Upvalues:       14
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["Id"]
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Id"]
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 19
 19 [-]: LOADBOOL  R1 1 0       ; R1 := true
 20 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["EquippedItem"]
 21 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 24
 24 [-]: LOADBOOL  R2 1 0       ; R2 := true
 25 [-]: LOADBOOL  R3 1 0       ; R3 := true
 26 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 27 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0xf64b7262]
 28 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mClipName"]
 29 [-]: LOADK     R7 K7        ; R7 := "Arrow"
 30 [-]: LOADK     R8 10        ; R8 := 10.000000
 31 [-]: LOADK     R9 0         ; R9 := 0.000000
 32 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 33 [-]: SETTABLE  R0 K8 K9     ; R0["mNumButtons"] := 0.000000
 34 [-]: SETTABLE  R0 K10 K11   ; R0["mAbilityButtonVisible"] := false
 35 [-]: SETTABLE  R0 K12 K11   ; R0["mCanEquip"] := false
 36 [-]: SETTABLE  R0 K13 K11   ; R0["mCanUpgrade"] := false
 37 [-]: SETTABLE  R0 K14 K11   ; R0["mCanCustomize"] := false
 38 [-]: SETTABLE  R0 K15 K11   ; R0["mHasCustomName"] := false
 39 [-]: GETUPVAL  R4 U1        ; R4 := U1
 40 [-]: GETTABLE  R4 R4 K16    ; R4 := R4[0x6fba4466]
 41 [-]: MOVE      R5 R0        ; R5 := R0
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: GETTABLE  R5 R0 K17    ; R5 := R0["LoadOutId"]
 44 [-]: EQ        1 R5 K2      ; if R5 == nil then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: MOVE      R5 R4        ; R5 := R4
 47 [-]: JMP       50           ; PC := 50
 48 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 49
 49 [-]: LOADBOOL  R5 1 0       ; R5 := true
 50 [-]: LOADBOOL  R6 1 0       ; R6 := true
 51 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["isFixedQuestParacesis"]
 52 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["LoadOutId"]
 53 [-]: EQ        1 R8 K2      ; if R8 == nil then PC := 505
 54 [-]: JMP       505          ; PC := 505
 55 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["LoadOutId"]
 56 [-]: EQ        1 R8 K20     ; if R8 == 5.000000 then PC := 61
 57 [-]: JMP       61           ; PC := 61
 58 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["LoadOutId"]
 59 [-]: EQ        0 R8 K21     ; if R8 ~= 6.000000 then PC := 88
 60 [-]: JMP       88           ; PC := 88
 61 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["LoadOutType"]
 62 [-]: EQ        1 R8 K9      ; if R8 == 0.000000 then PC := 71
 63 [-]: JMP       71           ; PC := 71
 64 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["LoadOutType"]
 65 [-]: EQ        1 R8 K23     ; if R8 == 3.000000 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["LoadOutType"]
 68 [-]: EQ        1 R8 K24     ; if R8 == 8.000000 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: LOADBOOL  R8 0 1       ; R8 := false; PC := 71
 71 [-]: LOADBOOL  R8 1 0       ; R8 := true
 72 [-]: TESTSET   R2 R8 0      ; if not R8 then PC := 78 else R2 := R8
 73 [-]: JMP       78           ; PC := 78
 74 [-]: GETUPVAL  R9 U2        ; R9 := U2
 75 [-]: GETTABLE  R10 R0 K17   ; R10 := R0["LoadOutId"]
 76 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 77 [-]: MOVE      R2 R9        ; R2 := R9
 78 [-]: MOVE      R6 R2        ; R6 := R2
 79 [-]: GETGLOBAL R9 K25       ; R9 := 0x4ec73e73
 80 [-]: GETUPVAL  R10 U3       ; R10 := U3
 81 [-]: MOVE      R11 R0       ; R11 := R0
 82 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 83 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 84 [-]: EQ        0 R9 K2      ; if R9 ~= nil then PC := 147
 85 [-]: JMP       147          ; PC := 147
 86 [-]: LOADBOOL  R3 0 0       ; R3 := false
 87 [-]: JMP       147          ; PC := 147
 88 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["LoadOutId"]
 89 [-]: EQ        0 R9 K9      ; if R9 ~= 0.000000 then PC := 127
 90 [-]: JMP       127          ; PC := 127
 91 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["LoadOutType"]
 92 [-]: EQ        0 R9 K9      ; if R9 ~= 0.000000 then PC := 103
 93 [-]: JMP       103          ; PC := 103
 94 [-]: TEST      R2 0         ; if not R2 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["EquippedItem"]
 97 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["mItemType"]
 98 [-]: SETGLOBAL R9 K26       ; mSuitType := R9
 99 [-]: JMP       147          ; PC := 147
100 [-]: LOADNIL   R9 R9        ; R9 := nil
101 [-]: SETGLOBAL R9 K26       ; mSuitType := R9
102 [-]: JMP       147          ; PC := 147
103 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["LoadOutType"]
104 [-]: EQ        0 R9 K28     ; if R9 ~= 1.000000 then PC := 115
105 [-]: JMP       115          ; PC := 115
106 [-]: TEST      R2 0         ; if not R2 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["EquippedItem"]
109 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["mItemType"]
110 [-]: SETGLOBAL R9 K29       ; mSentinelType := R9
111 [-]: JMP       147          ; PC := 147
112 [-]: LOADNIL   R9 R9        ; R9 := nil
113 [-]: SETGLOBAL R9 K29       ; mSentinelType := R9
114 [-]: JMP       147          ; PC := 147
115 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["LoadOutType"]
116 [-]: EQ        0 R9 K23     ; if R9 ~= 3.000000 then PC := 147
117 [-]: JMP       147          ; PC := 147
118 [-]: TEST      R2 0         ; if not R2 then PC := 124
119 [-]: JMP       124          ; PC := 124
120 [-]: GETTABLE  R9 R0 K4     ; R9 := R0["EquippedItem"]
121 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["mItemType"]
122 [-]: SETGLOBAL R9 K26       ; mSuitType := R9
123 [-]: JMP       147          ; PC := 147
124 [-]: LOADNIL   R9 R9        ; R9 := nil
125 [-]: SETGLOBAL R9 K26       ; mSuitType := R9
126 [-]: JMP       147          ; PC := 147
127 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["LoadOutType"]
128 [-]: EQ        0 R9 K28     ; if R9 ~= 1.000000 then PC := 147
129 [-]: JMP       147          ; PC := 147
130 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
131 [-]: GETGLOBAL R10 K30      ; R10 := 0x25d99d89
132 [-]: CALL      R9 2 2       ; R9 := R9(R10)
133 [-]: TEST      R9 1         ; if R9 then PC := 147
134 [-]: JMP       147          ; PC := 147
135 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
136 [-]: GETGLOBAL R10 K29      ; R10 := mSentinelType
137 [-]: CALL      R9 2 2       ; R9 := R9(R10)
138 [-]: TEST      R9 1         ; if R9 then PC := 145
139 [-]: JMP       145          ; PC := 145
140 [-]: GETGLOBAL R9 K30       ; R9 := 0x25d99d89
141 [-]: SELF      R9 R9 K31    ; R10 := R9; R9 := R9[0x3c6b0324]
142 [-]: CALL      R9 2 2       ; R9 := R9(R10)
143 [-]: NOT       R6 R9        ; R6 := not R9
144 [-]: JMP       147          ; PC := 147
145 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 146
146 [-]: LOADBOOL  R6 1 0       ; R6 := true
147 [-]: GETGLOBAL R9 K5        ; R9 := 0xae91e43b
148 [-]: SELF      R9 R9 K32    ; R10 := R9; R9 := R9[0xc0a3774b]
149 [-]: GETTABLE  R11 R0 K1    ; R11 := R0["mClipName"]
150 [-]: LOADK     R12 K33      ; R12 := "Stats"
151 [-]: LOADK     R13 75       ; R13 := 75.000000
152 [-]: LOADBOOL  R14 1 0      ; R14 := true
153 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
154 [-]: GETTABLE  R9 R0 K34    ; R9 := R0["StatsParagraph"]
155 [-]: EQ        0 R9 K2      ; if R9 ~= nil then PC := 161
156 [-]: JMP       161          ; PC := 161
157 [-]: GETUPVAL  R9 U1        ; R9 := U1
158 [-]: GETTABLE  R9 R9 K35    ; R9 := R9[0x8027b42a]
159 [-]: MOVE      R10 R0       ; R10 := R0
160 [-]: CALL      R9 2 1       ; R9(R10)
161 [-]: GETGLOBAL R9 K5        ; R9 := 0xae91e43b
162 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9[0xe261aa96]
163 [-]: GETTABLE  R11 R0 K1    ; R11 := R0["mClipName"]
164 [-]: LOADK     R12 K33      ; R12 := "Stats"
165 [-]: LOADK     R13 29       ; R13 := 29.000000
166 [-]: GETGLOBAL R14 K37      ; R14 := 0x5f0788c4
167 [-]: GETTABLE  R15 R0 K34   ; R15 := R0["StatsParagraph"]
168 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
169 [-]: CALL      R9 0 1       ; R9(R10,...)
170 [-]: LOADK     R9 0         ; R9 := 0.000000
171 [-]: GETTABLE  R10 R0 K17   ; R10 := R0["LoadOutId"]
172 [-]: EQ        1 R10 K38    ; if R10 == 4.000000 then PC := 188
173 [-]: JMP       188          ; PC := 188
174 [-]: GETTABLE  R10 R0 K22   ; R10 := R0["LoadOutType"]
175 [-]: EQ        0 R10 K28    ; if R10 ~= 1.000000 then PC := 180
176 [-]: JMP       180          ; PC := 180
177 [-]: GETTABLE  R10 R0 K17   ; R10 := R0["LoadOutId"]
178 [-]: EQ        1 R10 K39    ; if R10 == 2.000000 then PC := 188
179 [-]: JMP       188          ; PC := 188
180 [-]: GETGLOBAL R10 K40      ; R10 := 0x1239e0a2
181 [-]: CALL      R10 1 2      ; R10 := R10()
182 [-]: TEST      R10 0        ; if not R10 then PC := 189
183 [-]: JMP       189          ; PC := 189
184 [-]: GETGLOBAL R10 K41      ; R10 := 0x34291f5c
185 [-]: GETTABLE  R10 R10 K42  ; R10 := R10[0x056bfe8b]
186 [-]: CALL      R10 1 2      ; R10 := R10()
187 [-]: JMP       190          ; PC := 190
188 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 189
189 [-]: LOADBOOL  R10 1 0      ; R10 := true
190 [-]: TESTSET   R11 R2 0     ; if not R2 then PC := 195 else R11 := R2
191 [-]: JMP       195          ; PC := 195
192 [-]: TESTSET   R11 R3 0     ; if not R3 then PC := 195 else R11 := R3
193 [-]: JMP       195          ; PC := 195
194 [-]: MOVE      R11 R10      ; R11 := R10
195 [-]: SETTABLE  R0 K14 R11   ; R0["mCanCustomize"] := R11
196 [-]: TESTSET   R11 R2 0     ; if not R2 then PC := 217 else R11 := R2
197 [-]: JMP       217          ; PC := 217
198 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
199 [-]: GETGLOBAL R12 K30      ; R12 := 0x25d99d89
200 [-]: CALL      R11 2 2      ; R11 := R11(R12)
201 [-]: TEST      R11 1        ; if R11 then PC := 215
202 [-]: JMP       215          ; PC := 215
203 [-]: GETGLOBAL R11 K30      ; R11 := 0x25d99d89
204 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0x4ae54c32]
205 [-]: GETUPVAL  R13 U4       ; R13 := U4
206 [-]: GETTABLE  R13 R13 K44  ; R13 := R13["SF_MODS"]
207 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
208 [-]: TEST      R11 0        ; if not R11 then PC := 217
209 [-]: JMP       217          ; PC := 217
210 [-]: GETTABLE  R11 R0 K22   ; R11 := R0["LoadOutType"]
211 [-]: EQ        1 R11 K38    ; if R11 == 4.000000 then PC := 215
212 [-]: JMP       215          ; PC := 215
213 [-]: NOT       R11 R7       ; R11 := not R7
214 [-]: JMP       217          ; PC := 217
215 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 216
216 [-]: LOADBOOL  R11 1 0      ; R11 := true
217 [-]: TEST      R11 0        ; if not R11 then PC := 240
218 [-]: JMP       240          ; PC := 240
219 [-]: GETTABLE  R12 R0 K17   ; R12 := R0["LoadOutId"]
220 [-]: GETGLOBAL R13 K19      ; R13 := 0x6c97a788
221 [-]: GETTABLE  R13 R13 K45  ; R13 := R13["NUM_NORMAL_LOADOUT_SLOTS"]
222 [-]: LT        1 R12 R13    ; if R12 < R13 then PC := 239
223 [-]: JMP       239          ; PC := 239
224 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
225 [-]: GETGLOBAL R13 K26      ; R13 := mSuitType
226 [-]: CALL      R12 2 2      ; R12 := R12(R13)
227 [-]: TESTSET   R11 R12 1    ; if R12 then PC := 240 else R11 := R12
228 [-]: JMP       240          ; PC := 240
229 [-]: GETTABLE  R12 R0 K22   ; R12 := R0["LoadOutType"]
230 [-]: EQ        0 R12 K9     ; if R12 ~= 0.000000 then PC := 239
231 [-]: JMP       239          ; PC := 239
232 [-]: GETGLOBAL R12 K26      ; R12 := mSuitType
233 [-]: SELF      R12 R12 K46  ; R13 := R12; R12 := R12[0xf2deaf69]
234 [-]: GETGLOBAL R14 K47      ; R14 := 0x2c86a0ee
235 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
236 [-]: NOT       R11 R12      ; R11 := not R12
237 [-]: JMP       240          ; PC := 240
238 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 239
239 [-]: LOADBOOL  R11 1 0      ; R11 := true
240 [-]: TESTSET   R12 R2 0     ; if not R2 then PC := 253 else R12 := R2
241 [-]: JMP       253          ; PC := 253
242 [-]: GETTABLE  R12 R0 K22   ; R12 := R0["LoadOutType"]
243 [-]: EQ        1 R12 K28    ; if R12 == 1.000000 then PC := 251
244 [-]: JMP       251          ; PC := 251
245 [-]: GETTABLE  R12 R0 K22   ; R12 := R0["LoadOutType"]
246 [-]: EQ        1 R12 K21    ; if R12 == 6.000000 then PC := 251
247 [-]: JMP       251          ; PC := 251
248 [-]: GETTABLE  R12 R0 K22   ; R12 := R0["LoadOutType"]
249 [-]: EQ        0 R12 K48    ; if R12 ~= 7.000000 then PC := 252
250 [-]: JMP       252          ; PC := 252
251 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 252
252 [-]: LOADBOOL  R12 1 0      ; R12 := true
253 [-]: TEST      R12 0        ; if not R12 then PC := 290
254 [-]: JMP       290          ; PC := 290
255 [-]: GETTABLE  R13 R0 K17   ; R13 := R0["LoadOutId"]
256 [-]: EQ        1 R13 K9     ; if R13 == 0.000000 then PC := 289
257 [-]: JMP       289          ; PC := 289
258 [-]: GETTABLE  R13 R0 K17   ; R13 := R0["LoadOutId"]
259 [-]: GETGLOBAL R14 K19      ; R14 := 0x6c97a788
260 [-]: GETTABLE  R14 R14 K45  ; R14 := R14["NUM_NORMAL_LOADOUT_SLOTS"]
261 [-]: LE        0 R14 R13    ; if R14 > R13 then PC := 288
262 [-]: JMP       288          ; PC := 288
263 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["EquippedItem"]
264 [-]: GETTABLE  R13 R13 K27  ; R13 := R13["mItemType"]
265 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0xf2deaf69]
266 [-]: GETGLOBAL R15 K49      ; R15 := gPowerSuitType
267 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
268 [-]: TESTSET   R12 R13 0    ; if not R13 then PC := 290 else R12 := R13
269 [-]: JMP       290          ; PC := 290
270 [-]: GETTABLE  R13 R0 K4    ; R13 := R0["EquippedItem"]
271 [-]: GETTABLE  R13 R13 K27  ; R13 := R13["mItemType"]
272 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0xf2deaf69]
273 [-]: GETGLOBAL R15 K50      ; R15 := gPetPowerSuitType
274 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
275 [-]: TEST      R13 1        ; if R13 then PC := 288
276 [-]: JMP       288          ; PC := 288
277 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
278 [-]: GETGLOBAL R14 K26      ; R14 := mSuitType
279 [-]: CALL      R13 2 2      ; R13 := R13(R14)
280 [-]: TESTSET   R12 R13 1    ; if R13 then PC := 290 else R12 := R13
281 [-]: JMP       290          ; PC := 290
282 [-]: GETGLOBAL R13 K26      ; R13 := mSuitType
283 [-]: SELF      R13 R13 K46  ; R14 := R13; R13 := R13[0xf2deaf69]
284 [-]: GETGLOBAL R15 K47      ; R15 := 0x2c86a0ee
285 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
286 [-]: NOT       R12 R13      ; R12 := not R13
287 [-]: JMP       290          ; PC := 290
288 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 289
289 [-]: LOADBOOL  R12 1 0      ; R12 := true
290 [-]: SETTABLE  R0 K13 R11   ; R0["mCanUpgrade"] := R11
291 [-]: SETTABLE  R0 K10 R12   ; R0["mAbilityButtonVisible"] := R12
292 [-]: NEWTABLE  R13 4 0      ; R13 := {}
293 [-]: NEWTABLE  R14 0 4      ; R14 := {}
294 [-]: SETTABLE  R14 K51 K52  ; R14["Label"] := "/Lotus/Language/Menu/ItemSelection_Equip"
295 [-]: SETTABLE  R14 K53 K54  ; R14["Callback"] := "Swap"
296 [-]: SETTABLE  R14 K55 K56  ; R14["Callout"] := "<MENU_SELECT>"
297 [-]: GETTABLE  R15 R0 K17   ; R15 := R0["LoadOutId"]
298 [-]: GETGLOBAL R16 K19      ; R16 := 0x6c97a788
299 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["NUM_NORMAL_LOADOUT_SLOTS"]
300 [-]: LT        0 R15 R16    ; if R15 >= R16 then PC := 307
301 [-]: JMP       307          ; PC := 307
302 [-]: GETTABLE  R15 R0 K22   ; R15 := R0["LoadOutType"]
303 [-]: EQ        1 R15 K48    ; if R15 == 7.000000 then PC := 307
304 [-]: JMP       307          ; PC := 307
305 [-]: NOT       R15 R7       ; R15 := not R7
306 [-]: JMP       309          ; PC := 309
307 [-]: LOADBOOL  R15 0 1      ; R15 := false; PC := 308
308 [-]: LOADBOOL  R15 1 0      ; R15 := true
309 [-]: SETTABLE  R14 K57 R15  ; R14["Visible"] := R15
310 [-]: NEWTABLE  R15 0 4      ; R15 := {}
311 [-]: SETTABLE  R15 K51 K58  ; R15["Label"] := "/Lotus/Language/Menu/Global_ProductCategory_Upgrade"
312 [-]: SETTABLE  R15 K53 K59  ; R15["Callback"] := "Mod"
313 [-]: SETTABLE  R15 K55 K60  ; R15["Callout"] := "<MENU_GENERIC2>"
314 [-]: SETTABLE  R15 K57 R11  ; R15["Visible"] := R11
315 [-]: NEWTABLE  R16 0 4      ; R16 := {}
316 [-]: SETTABLE  R16 K51 K61  ; R16["Label"] := "/Lotus/Language/Menu/Loadout_Options_Cosmetics"
317 [-]: SETTABLE  R16 K53 K62  ; R16["Callback"] := "Cosmetics"
318 [-]: SETTABLE  R16 K55 K63  ; R16["Callout"] := "<MENU_GENERIC1>"
319 [-]: GETTABLE  R17 R0 K14   ; R17 := R0["mCanCustomize"]
320 [-]: TEST      R17 0        ; if not R17 then PC := 323
321 [-]: JMP       323          ; PC := 323
322 [-]: NOT       R17 R7       ; R17 := not R7
323 [-]: SETTABLE  R16 K57 R17  ; R16["Visible"] := R17
324 [-]: NEWTABLE  R17 0 4      ; R17 := {}
325 [-]: SETTABLE  R17 K51 K64  ; R17["Label"] := "/Lotus/Language/Menu/ViewAbilities"
326 [-]: SETTABLE  R17 K53 K65  ; R17["Callback"] := "OpenAbilityProgression"
327 [-]: SETTABLE  R17 K55 K66  ; R17["Callout"] := "<MENU_RTRIGGER1>"
328 [-]: SETTABLE  R17 K57 R12  ; R17["Visible"] := R12
329 [-]: SETLIST   R13 4 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 4
330 [-]: LOADK     R14 1        ; R14 := 1.000000
331 [-]: LEN       R15 R13      ; R15 := # R13
332 [-]: LOADK     R16 1        ; R16 := 1.000000
333 [-]: FORPREP   R14 400      ; R14 -= R16; PC := 400
334 [-]: GETTABLE  R18 R13 R17  ; R18 := R13[R17]
335 [-]: GETTABLE  R19 R18 K57  ; R19 := R18["Visible"]
336 [-]: TEST      R19 0        ; if not R19 then PC := 400
337 [-]: JMP       400          ; PC := 400
338 [-]: GETTABLE  R19 R0 K1    ; R19 := R0["mClipName"]
339 [-]: LOADK     R20 K67      ; R20 := ".Btn"
340 [-]: GETGLOBAL R21 K68      ; R21 := 0x64fb1586
341 [-]: GETTABLE  R22 R0 K8    ; R22 := R0["mNumButtons"]
342 [-]: ADD       R22 R22 K28  ; R22 := R22 + 1.000000
343 [-]: CALL      R21 2 2      ; R21 := R21(R22)
344 [-]: CONCAT    R19 R19 R21  ; R19 := R19 .. R20 .. R21
345 [-]: GETGLOBAL R20 K5       ; R20 := 0xae91e43b
346 [-]: SELF      R20 R20 K69  ; R21 := R20; R20 := R20[0x20b98db3]
347 [-]: MOVE      R22 R19      ; R22 := R19
348 [-]: LOADK     R23 K70      ; R23 := ".Label.text"
349 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
350 [-]: GETTABLE  R23 R18 K51  ; R23 := R18["Label"]
351 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
352 [-]: GETGLOBAL R20 K5       ; R20 := 0xae91e43b
353 [-]: SELF      R20 R20 K69  ; R21 := R20; R20 := R20[0x20b98db3]
354 [-]: MOVE      R22 R19      ; R22 := R19
355 [-]: LOADK     R23 K71      ; R23 := ".Callout.Tf.text"
356 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
357 [-]: GETTABLE  R23 R18 K55  ; R23 := R18["Callout"]
358 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
359 [-]: GETGLOBAL R20 K5       ; R20 := 0xae91e43b
360 [-]: SELF      R20 R20 K72  ; R21 := R20; R20 := R20[0x1e5b5cfe]
361 [-]: MOVE      R22 R19      ; R22 := R19
362 [-]: LOADK     R23 K67      ; R23 := ".Btn"
363 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
364 [-]: LOADK     R23 K73      ; R23 := "RollOverSubButton"
365 [-]: LOADK     R24 K74      ; R24 := "RollOutSubButton"
366 [-]: GETTABLE  R25 R18 K53  ; R25 := R18["Callback"]
367 [-]: LOADNIL   R26 R26      ; R26 := nil
368 [-]: CALL      R20 7 1      ; R20(R21,R22,R23,R24,R25,R26)
369 [-]: GETGLOBAL R20 K5       ; R20 := 0xae91e43b
370 [-]: SELF      R20 R20 K6   ; R21 := R20; R20 := R20[0xf64b7262]
371 [-]: MOVE      R22 R19      ; R22 := R19
372 [-]: LOADK     R23 K75      ; R23 := "Btn"
373 [-]: LOADK     R24 85       ; R24 := 85.000000
374 [-]: GETTABLE  R25 R0 K3    ; R25 := R0["Id"]
375 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
376 [-]: GETGLOBAL R20 K5       ; R20 := 0xae91e43b
377 [-]: SELF      R20 R20 K76  ; R21 := R20; R20 := R20[0x2ce15376]
378 [-]: MOVE      R22 R19      ; R22 := R19
379 [-]: LOADK     R23 K51      ; R23 := "Label"
380 [-]: LOADK     R24 33       ; R24 := 33.000000
381 [-]: CALL      R20 5 2      ; R20 := R20(R21,R22,R23,R24)
382 [-]: GETGLOBAL R21 K0       ; R21 := 0x7b998233
383 [-]: MOVE      R22 R20      ; R22 := R20
384 [-]: CALL      R21 2 2      ; R21 := R21(R22)
385 [-]: TEST      R21 1        ; if R21 then PC := 393
386 [-]: JMP       393          ; PC := 393
387 [-]: GETGLOBAL R21 K77      ; R21 := 0x5bced4c4
388 [-]: GETTABLE  R21 R21 K78  ; R21 := R21[0xb62ecfe0]
389 [-]: MOVE      R22 R9       ; R22 := R9
390 [-]: MOVE      R23 R20      ; R23 := R20
391 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
392 [-]: MOVE      R9 R21       ; R9 := R21
393 [-]: GETTABLE  R21 R0 K22   ; R21 := R0["LoadOutType"]
394 [-]: EQ        1 R21 K48    ; if R21 == 7.000000 then PC := 397
395 [-]: JMP       397          ; PC := 397
396 [-]: SETTABLE  R0 K12 K79   ; R0["mCanEquip"] := true
397 [-]: GETTABLE  R21 R0 K8    ; R21 := R0["mNumButtons"]
398 [-]: ADD       R21 R21 K28  ; R21 := R21 + 1.000000
399 [-]: SETTABLE  R0 K8 R21    ; R0["mNumButtons"] := R21
400 [-]: FORLOOP   R14 334      ; R14 += R16; if R14 <= R15 then begin PC := 334; R17 := R14 end
401 [-]: LOADNIL   R21 R21      ; R21 := nil
402 [-]: LOADK     R22 1        ; R22 := 1.000000
403 [-]: LOADK     R23 4        ; R23 := 4.000000
404 [-]: LOADK     R24 1        ; R24 := 1.000000
405 [-]: FORPREP   R22 503      ; R22 -= R24; PC := 503
406 [-]: GETTABLE  R26 R0 K1    ; R26 := R0["mClipName"]
407 [-]: LOADK     R27 K67      ; R27 := ".Btn"
408 [-]: MOVE      R28 R25      ; R28 := R25
409 [-]: CONCAT    R21 R26 R28  ; R21 := R26 .. R27 .. R28
410 [-]: GETGLOBAL R26 K5       ; R26 := 0xae91e43b
411 [-]: SELF      R26 R26 K80  ; R27 := R26; R26 := R26[0xaade900e]
412 [-]: MOVE      R28 R21      ; R28 := R21
413 [-]: LOADK     R29 11       ; R29 := 11.000000
414 [-]: TESTSET   R30 R1 0     ; if not R1 then PC := 421 else R30 := R1
415 [-]: JMP       421          ; PC := 421
416 [-]: GETTABLE  R30 R0 K8    ; R30 := R0["mNumButtons"]
417 [-]: LE        1 R25 R30    ; if R25 <= R30 then PC := 420
418 [-]: JMP       420          ; PC := 420
419 [-]: LOADBOOL  R30 0 1      ; R30 := false; PC := 420
420 [-]: LOADBOOL  R30 1 0      ; R30 := true
421 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
422 [-]: GETTABLE  R26 R0 K8    ; R26 := R0["mNumButtons"]
423 [-]: LE        0 R25 R26    ; if R25 > R26 then PC := 503
424 [-]: JMP       503          ; PC := 503
425 [-]: GETGLOBAL R26 K5       ; R26 := 0xae91e43b
426 [-]: SELF      R26 R26 K32  ; R27 := R26; R26 := R26[0xc0a3774b]
427 [-]: MOVE      R28 R21      ; R28 := R21
428 [-]: LOADK     R29 K55      ; R29 := "Callout"
429 [-]: LOADK     R30 11       ; R30 := 11.000000
430 [-]: GETGLOBAL R31 K41      ; R31 := 0x34291f5c
431 [-]: GETTABLE  R31 R31 K81  ; R31 := R31[0x1467d5f4]
432 [-]: CALL      R31 1 0      ; R31,... := R31()
433 [-]: CALL      R26 0 1      ; R26(R27,...)
434 [-]: LOADK     R26 0        ; R26 := 0.000000
435 [-]: GETGLOBAL R27 K41      ; R27 := 0x34291f5c
436 [-]: GETTABLE  R27 R27 K81  ; R27 := R27[0x1467d5f4]
437 [-]: CALL      R27 1 2      ; R27 := R27()
438 [-]: TEST      R27 0        ; if not R27 then PC := 456
439 [-]: JMP       456          ; PC := 456
440 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
441 [-]: SELF      R27 R27 K6   ; R28 := R27; R27 := R27[0xf64b7262]
442 [-]: MOVE      R29 R21      ; R29 := R21
443 [-]: LOADK     R30 K51      ; R30 := "Label"
444 [-]: LOADK     R31 0        ; R31 := 0.000000
445 [-]: LOADK     R32 10       ; R32 := 10.000000
446 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
447 [-]: LOADK     R26 45       ; R26 := 45.000000
448 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
449 [-]: SELF      R27 R27 K6   ; R28 := R27; R27 := R27[0xf64b7262]
450 [-]: MOVE      R29 R21      ; R29 := R21
451 [-]: LOADK     R30 K55      ; R30 := "Callout"
452 [-]: LOADK     R31 0        ; R31 := 0.000000
453 [-]: ADD       R32 R9 R26   ; R32 := R9 + R26
454 [-]: SUB       R32 R32 K23  ; R32 := R32 - 3.000000
455 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
456 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
457 [-]: SELF      R27 R27 K6   ; R28 := R27; R27 := R27[0xf64b7262]
458 [-]: MOVE      R29 R21      ; R29 := R21
459 [-]: LOADK     R30 K75      ; R30 := "Btn"
460 [-]: LOADK     R31 10       ; R31 := 10.000000
461 [-]: LOADK     R32 15       ; R32 := 15.000000
462 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
463 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
464 [-]: SELF      R27 R27 K6   ; R28 := R27; R27 := R27[0xf64b7262]
465 [-]: MOVE      R29 R21      ; R29 := R21
466 [-]: LOADK     R30 K75      ; R30 := "Btn"
467 [-]: LOADK     R31 9        ; R31 := 9.000000
468 [-]: GETGLOBAL R32 K82      ; R32 := 0x0032441c
469 [-]: GETTABLE  R32 R32 K83  ; R32 := R32["UIColor_White"]
470 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
471 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
472 [-]: SELF      R27 R27 K6   ; R28 := R27; R27 := R27[0xf64b7262]
473 [-]: MOVE      R29 R21      ; R29 := R21
474 [-]: LOADK     R30 K75      ; R30 := "Btn"
475 [-]: LOADK     R31 12       ; R31 := 12.000000
476 [-]: ADD       R32 R9 R26   ; R32 := R9 + R26
477 [-]: ADD       R32 R32 K84  ; R32 := R32 + 20.000000
478 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
479 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
480 [-]: SELF      R27 R27 K6   ; R28 := R27; R27 := R27[0xf64b7262]
481 [-]: MOVE      R29 R21      ; R29 := R21
482 [-]: LOADK     R30 K85      ; R30 := "Blurer"
483 [-]: LOADK     R31 12       ; R31 := 12.000000
484 [-]: ADD       R32 R9 R26   ; R32 := R9 + R26
485 [-]: ADD       R32 R32 K84  ; R32 := R32 + 20.000000
486 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
487 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
488 [-]: SELF      R27 R27 K6   ; R28 := R27; R27 := R27[0xf64b7262]
489 [-]: MOVE      R29 R21      ; R29 := R21
490 [-]: LOADK     R30 K86      ; R30 := "Outline"
491 [-]: LOADK     R31 12       ; R31 := 12.000000
492 [-]: ADD       R32 R9 R26   ; R32 := R9 + R26
493 [-]: ADD       R32 R32 K84  ; R32 := R32 + 20.000000
494 [-]: CALL      R27 6 1      ; R27(R28,R29,R30,R31,R32)
495 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
496 [-]: SELF      R27 R27 K87  ; R28 := R27; R27 := R27[0xd5181643]
497 [-]: MOVE      R29 R21      ; R29 := R21
498 [-]: LOADK     R30 K67      ; R30 := ".Btn"
499 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
500 [-]: GETGLOBAL R30 K82      ; R30 := 0x0032441c
501 [-]: GETTABLE  R30 R30 K88  ; R30 := R30["UIMaterial_SmoothEdgeNoDepthTest"]
502 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
503 [-]: FORLOOP   R22 406      ; R22 += R24; if R22 <= R23 then begin PC := 406; R25 := R22 end
504 [-]: JMP       560          ; PC := 560
505 [-]: GETTABLE  R27 R0 K89   ; R27 := R0["MandachordEntry"]
506 [-]: TEST      R27 0        ; if not R27 then PC := 522
507 [-]: JMP       522          ; PC := 522
508 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
509 [-]: GETGLOBAL R28 K26      ; R28 := mSuitType
510 [-]: CALL      R27 2 2      ; R27 := R27(R28)
511 [-]: TEST      R27 1        ; if R27 then PC := 519
512 [-]: JMP       519          ; PC := 519
513 [-]: GETGLOBAL R27 K26      ; R27 := mSuitType
514 [-]: SELF      R27 R27 K46  ; R28 := R27; R27 := R27[0xf2deaf69]
515 [-]: GETGLOBAL R29 K90      ; R29 := 0x2de3a851
516 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
517 [-]: MOVE      R6 R27       ; R6 := R27
518 [-]: JMP       528          ; PC := 528
519 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 520
520 [-]: LOADBOOL  R6 1 0       ; R6 := true
521 [-]: JMP       528          ; PC := 528
522 [-]: GETTABLE  R27 R0 K91   ; R27 := R0["FocusEntry"]
523 [-]: TEST      R27 0        ; if not R27 then PC := 528
524 [-]: JMP       528          ; PC := 528
525 [-]: GETUPVAL  R27 U5       ; R27 := U5
526 [-]: CALL      R27 1 2      ; R27 := R27()
527 [-]: MOVE      R6 R27       ; R6 := R27
528 [-]: GETGLOBAL R27 K5       ; R27 := 0xae91e43b
529 [-]: SELF      R27 R27 K92  ; R28 := R27; R27 := R27[0x5f56eeab]
530 [-]: GETTABLE  R29 R0 K1    ; R29 := R0["mClipName"]
531 [-]: LOADK     R30 K93      ; R30 := ".Stats"
532 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
533 [-]: LOADK     R30 29       ; R30 := 29.000000
534 [-]: LOADK     R31 K94      ; R31 := ""
535 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
536 [-]: LOADK     R27 1        ; R27 := 1.000000
537 [-]: LOADK     R28 4        ; R28 := 4.000000
538 [-]: LOADK     R29 1        ; R29 := 1.000000
539 [-]: FORPREP   R27 559      ; R27 -= R29; PC := 559
540 [-]: GETGLOBAL R31 K5       ; R31 := 0xae91e43b
541 [-]: SELF      R31 R31 K95  ; R32 := R31; R31 := R31[0x67bc869f]
542 [-]: GETTABLE  R33 R0 K1    ; R33 := R0["mClipName"]
543 [-]: LOADK     R34 K67      ; R34 := ".Btn"
544 [-]: MOVE      R35 R30      ; R35 := R30
545 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
546 [-]: LOADK     R34 10       ; R34 := 10.000000
547 [-]: LOADK     R35 0        ; R35 := 0.000000
548 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
549 [-]: GETGLOBAL R31 K5       ; R31 := 0xae91e43b
550 [-]: SELF      R31 R31 K80  ; R32 := R31; R31 := R31[0xaade900e]
551 [-]: GETTABLE  R33 R0 K1    ; R33 := R0["mClipName"]
552 [-]: LOADK     R34 K67      ; R34 := ".Btn"
553 [-]: MOVE      R35 R30      ; R35 := R30
554 [-]: LOADK     R36 K67      ; R36 := ".Btn"
555 [-]: CONCAT    R33 R33 R36  ; R33 := R33 .. R34 .. R35 .. R36
556 [-]: LOADK     R34 59       ; R34 := 59.000000
557 [-]: LOADBOOL  R35 0 0      ; R35 := false
558 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
559 [-]: FORLOOP   R27 540      ; R27 += R29; if R27 <= R28 then begin PC := 540; R30 := R27 end
560 [-]: GETGLOBAL R31 K0       ; R31 := 0x7b998233
561 [-]: GETTABLE  R32 R0 K96   ; R32 := R0["mStoreItem"]
562 [-]: CALL      R31 2 2      ; R31 := R31(R32)
563 [-]: TEST      R31 1        ; if R31 then PC := 583
564 [-]: JMP       583          ; PC := 583
565 [-]: GETGLOBAL R31 K5       ; R31 := 0xae91e43b
566 [-]: SELF      R31 R31 K97  ; R32 := R31; R31 := R31[0x42b04007]
567 [-]: GETGLOBAL R33 K68      ; R33 := 0x64fb1586
568 [-]: GETTABLE  R34 R0 K96   ; R34 := R0["mStoreItem"]
569 [-]: SELF      R34 R34 K98  ; R35 := R34; R34 := R34[0xd3a9d01f]
570 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
571 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
572 [-]: LOADBOOL  R34 1 0      ; R34 := true
573 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
574 [-]: GETTABLE  R32 R0 K99   ; R32 := R0["mDisplayName"]
575 [-]: EQ        1 R32 K2     ; if R32 == nil then PC := 580
576 [-]: JMP       580          ; PC := 580
577 [-]: GETTABLE  R32 R0 K99   ; R32 := R0["mDisplayName"]
578 [-]: EQ        0 R32 R31    ; if R32 ~= R31 then PC := 581
579 [-]: JMP       581          ; PC := 581
580 [-]: LOADBOOL  R32 0 1      ; R32 := false; PC := 581
581 [-]: LOADBOOL  R32 1 0      ; R32 := true
582 [-]: SETTABLE  R0 K15 R32   ; R0["mHasCustomName"] := R32
583 [-]: SETTABLE  R0 K100 R6   ; R0["mVisible"] := R6
584 [-]: GETGLOBAL R32 K5       ; R32 := 0xae91e43b
585 [-]: SELF      R32 R32 K80  ; R33 := R32; R32 := R32[0xaade900e]
586 [-]: GETTABLE  R34 R0 K1    ; R34 := R0["mClipName"]
587 [-]: LOADK     R35 11       ; R35 := 11.000000
588 [-]: MOVE      R36 R6       ; R36 := R6
589 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
590 [-]: GETGLOBAL R32 K5       ; R32 := 0xae91e43b
591 [-]: SELF      R32 R32 K6   ; R33 := R32; R32 := R32[0xf64b7262]
592 [-]: GETTABLE  R34 R0 K1    ; R34 := R0["mClipName"]
593 [-]: LOADK     R35 K101     ; R35 := "Back"
594 [-]: LOADK     R36 13       ; R36 := 13.000000
595 [-]: TEST      R1 0         ; if not R1 then PC := 601
596 [-]: JMP       601          ; PC := 601
597 [-]: GETUPVAL  R37 U6       ; R37 := U6
598 [-]: GETTABLE  R37 R37 K102 ; R37 := R37["HEIGHT_SELECTED"]
599 [-]: TEST      R37 1        ; if R37 then PC := 603
600 [-]: JMP       603          ; PC := 603
601 [-]: GETUPVAL  R37 U6       ; R37 := U6
602 [-]: GETTABLE  R37 R37 K103 ; R37 := R37["HEIGHT_UNSELECTED"]
603 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
604 [-]: GETGLOBAL R32 K5       ; R32 := 0xae91e43b
605 [-]: SELF      R32 R32 K87  ; R33 := R32; R32 := R32[0xd5181643]
606 [-]: GETTABLE  R34 R0 K1    ; R34 := R0["mClipName"]
607 [-]: LOADK     R35 K104     ; R35 := ".Back"
608 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
609 [-]: GETGLOBAL R35 K82      ; R35 := 0x0032441c
610 [-]: GETTABLE  R35 R35 K88  ; R35 := R35["UIMaterial_SmoothEdgeNoDepthTest"]
611 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
612 [-]: GETGLOBAL R32 K82      ; R32 := 0x0032441c
613 [-]: GETTABLE  R32 R32 K105 ; R32 := R32["UIColor_DarkGrey"]
614 [-]: LOADK     R33 K94      ; R33 := ""
615 [-]: GETTABLE  R34 R0 K106  ; R34 := R0["SubTitle"]
616 [-]: EQ        1 R34 K2     ; if R34 == nil then PC := 620
617 [-]: JMP       620          ; PC := 620
618 [-]: GETTABLE  R33 R0 K106  ; R33 := R0["SubTitle"]
619 [-]: JMP       690          ; PC := 690
620 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
621 [-]: GETTABLE  R35 R0 K96   ; R35 := R0["mStoreItem"]
622 [-]: CALL      R34 2 2      ; R34 := R34(R35)
623 [-]: TEST      R34 1        ; if R34 then PC := 647
624 [-]: JMP       647          ; PC := 647
625 [-]: GETTABLE  R34 R0 K17   ; R34 := R0["LoadOutId"]
626 [-]: EQ        1 R34 K2     ; if R34 == nil then PC := 647
627 [-]: JMP       647          ; PC := 647
628 [-]: GETTABLE  R34 R0 K99   ; R34 := R0["mDisplayName"]
629 [-]: TESTSET   R33 R34 1    ; if R34 then PC := 641 else R33 := R34
630 [-]: JMP       641          ; PC := 641
631 [-]: GETGLOBAL R34 K5       ; R34 := 0xae91e43b
632 [-]: SELF      R34 R34 K97  ; R35 := R34; R34 := R34[0x42b04007]
633 [-]: GETGLOBAL R36 K68      ; R36 := 0x64fb1586
634 [-]: GETTABLE  R37 R0 K96   ; R37 := R0["mStoreItem"]
635 [-]: SELF      R37 R37 K98  ; R38 := R37; R37 := R37[0xd3a9d01f]
636 [-]: CALL      R37 2 0      ; R37,... := R37(R38)
637 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
638 [-]: LOADBOOL  R37 1 0      ; R37 := true
639 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
640 [-]: MOVE      R33 R34      ; R33 := R34
641 [-]: GETGLOBAL R34 K107     ; R34 := 0x7f5022cf
642 [-]: GETTABLE  R34 R34 K108 ; R34 := R34[0x3f3e4d12]
643 [-]: MOVE      R35 R33      ; R35 := R33
644 [-]: CALL      R34 2 2      ; R34 := R34(R35)
645 [-]: MOVE      R33 R34      ; R33 := R34
646 [-]: JMP       690          ; PC := 690
647 [-]: GETTABLE  R34 R0 K109  ; R34 := R0["ConsumablesEntry"]
648 [-]: TEST      R34 0        ; if not R34 then PC := 660
649 [-]: JMP       660          ; PC := 660
650 [-]: GETUPVAL  R34 U1       ; R34 := U1
651 [-]: GETTABLE  R34 R34 K110 ; R34 := R34[0x866fb296]
652 [-]: LOADNIL   R35 R35      ; R35 := nil
653 [-]: LOADK     R36 K111     ; R36 := "CONSUMABLES"
654 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
655 [-]: GETGLOBAL R35 K68      ; R35 := 0x64fb1586
656 [-]: LEN       R36 R34      ; R36 := # R34
657 [-]: CALL      R35 2 2      ; R35 := R35(R36)
658 [-]: MOVE      R33 R35      ; R33 := R35
659 [-]: JMP       690          ; PC := 690
660 [-]: GETTABLE  R35 R0 K112  ; R35 := R0["EmotesEntry"]
661 [-]: TEST      R35 0        ; if not R35 then PC := 673
662 [-]: JMP       673          ; PC := 673
663 [-]: GETUPVAL  R35 U1       ; R35 := U1
664 [-]: GETTABLE  R35 R35 K110 ; R35 := R35[0x866fb296]
665 [-]: LOADNIL   R36 R36      ; R36 := nil
666 [-]: LOADK     R37 K113     ; R37 := "EMOTES"
667 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
668 [-]: GETGLOBAL R36 K68      ; R36 := 0x64fb1586
669 [-]: LEN       R37 R35      ; R37 := # R35
670 [-]: CALL      R36 2 2      ; R36 := R36(R37)
671 [-]: MOVE      R33 R36      ; R33 := R36
672 [-]: JMP       690          ; PC := 690
673 [-]: GETTABLE  R36 R0 K114  ; R36 := R0["LunaroArenaEntry"]
674 [-]: TEST      R36 0        ; if not R36 then PC := 678
675 [-]: JMP       678          ; PC := 678
676 [-]: LOADK     R33 K94      ; R33 := ""
677 [-]: JMP       690          ; PC := 690
678 [-]: GETTABLE  R36 R0 K17   ; R36 := R0["LoadOutId"]
679 [-]: EQ        1 R36 K2     ; if R36 == nil then PC := 690
680 [-]: JMP       690          ; PC := 690
681 [-]: LOADBOOL  R5 1 0       ; R5 := true
682 [-]: GETGLOBAL R36 K5       ; R36 := 0xae91e43b
683 [-]: SELF      R36 R36 K97  ; R37 := R36; R36 := R36[0x42b04007]
684 [-]: LOADK     R38 K115     ; R38 := "/Lotus/Language/Menu/Cosmetics_None"
685 [-]: LOADBOOL  R39 0 0      ; R39 := false
686 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
687 [-]: MOVE      R33 R36      ; R33 := R36
688 [-]: GETGLOBAL R36 K82      ; R36 := 0x0032441c
689 [-]: GETTABLE  R32 R36 K116 ; R32 := R36["UIColor_MediumGrey"]
690 [-]: GETUPVAL  R36 U7       ; R36 := U7
691 [-]: TEST      R36 0        ; if not R36 then PC := 722
692 [-]: JMP       722          ; PC := 722
693 [-]: GETUPVAL  R36 U8       ; R36 := U8
694 [-]: GETTABLE  R36 R36 K117 ; R36 := R36[0x06d055f9]
695 [-]: GETTABLE  R37 R0 K15   ; R37 := R0["mHasCustomName"]
696 [-]: TEST      R37 1        ; if R37 then PC := 712
697 [-]: JMP       712          ; PC := 712
698 [-]: GETTABLE  R37 R0 K22   ; R37 := R0["LoadOutType"]
699 [-]: EQ        0 R37 K28    ; if R37 ~= 1.000000 then PC := 710
700 [-]: JMP       710          ; PC := 710
701 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
702 [-]: GETGLOBAL R38 K30      ; R38 := 0x25d99d89
703 [-]: CALL      R37 2 2      ; R37 := R37(R38)
704 [-]: TEST      R37 1        ; if R37 then PC := 710
705 [-]: JMP       710          ; PC := 710
706 [-]: GETGLOBAL R37 K30      ; R37 := 0x25d99d89
707 [-]: SELF      R37 R37 K31  ; R38 := R37; R37 := R37[0x3c6b0324]
708 [-]: CALL      R37 2 2      ; R37 := R37(R38)
709 [-]: JMP       712          ; PC := 712
710 [-]: LOADBOOL  R37 0 1      ; R37 := false; PC := 711
711 [-]: LOADBOOL  R37 1 0      ; R37 := true
712 [-]: LOADK     R38 K118     ; R38 := "Arial Unicode MS Bold"
713 [-]: LOADK     R39 K119     ; R39 := "Noto Sans Bold"
714 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
715 [-]: GETGLOBAL R37 K5       ; R37 := 0xae91e43b
716 [-]: SELF      R37 R37 K36  ; R38 := R37; R37 := R37[0xe261aa96]
717 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["mClipName"]
718 [-]: LOADK     R40 K51      ; R40 := "Label"
719 [-]: LOADK     R41 41       ; R41 := 41.000000
720 [-]: MOVE      R42 R36      ; R42 := R36
721 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
722 [-]: GETUPVAL  R37 U8       ; R37 := U8
723 [-]: GETTABLE  R37 R37 K120 ; R37 := R37[0xc340ce91]
724 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
725 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["mClipName"]
726 [-]: LOADK     R40 K121     ; R40 := ".Label"
727 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
728 [-]: GETGLOBAL R40 K107     ; R40 := 0x7f5022cf
729 [-]: GETTABLE  R40 R40 K108 ; R40 := R40[0x3f3e4d12]
730 [-]: MOVE      R41 R33      ; R41 := R33
731 [-]: CALL      R40 2 2      ; R40 := R40(R41)
732 [-]: LOADK     R41 K122     ; R41 := "..."
733 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
734 [-]: GETGLOBAL R37 K5       ; R37 := 0xae91e43b
735 [-]: SELF      R37 R37 K6   ; R38 := R37; R37 := R37[0xf64b7262]
736 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["mClipName"]
737 [-]: LOADK     R40 K33      ; R40 := "Stats"
738 [-]: LOADK     R41 36       ; R41 := 36.000000
739 [-]: MOVE      R42 R32      ; R42 := R32
740 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
741 [-]: GETGLOBAL R37 K5       ; R37 := 0xae91e43b
742 [-]: SELF      R37 R37 K6   ; R38 := R37; R37 := R37[0xf64b7262]
743 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["mClipName"]
744 [-]: LOADK     R40 K51      ; R40 := "Label"
745 [-]: LOADK     R41 36       ; R41 := 36.000000
746 [-]: MOVE      R42 R32      ; R42 := R32
747 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
748 [-]: SETTABLE  R0 K123 R32  ; R0["LabelColor"] := R32
749 [-]: GETGLOBAL R37 K5       ; R37 := 0xae91e43b
750 [-]: SELF      R37 R37 K125 ; R38 := R37; R37 := R37[0x91a24e4b]
751 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["mClipName"]
752 [-]: LOADK     R40 K121     ; R40 := ".Label"
753 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
754 [-]: LOADK     R40 33       ; R40 := 33.000000
755 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
756 [-]: ADD       R37 R37 K126 ; R37 := R37 + 16.000000
757 [-]: SETTABLE  R0 K124 R37  ; R0["LabelWidth"] := R37
758 [-]: GETGLOBAL R37 K127     ; R37 := mLists
759 [-]: GETTABLE  R37 R37 K128 ; R37 := R37["mLoadOutList"]
760 [-]: GETTABLE  R37 R37 K129 ; R37 := R37[0x101bab76]
761 [-]: MOVE      R38 R0       ; R38 := R0
762 [-]: CALL      R37 2 1      ; R37(R38)
763 [-]: GETTABLE  R37 R0 K17   ; R37 := R0["LoadOutId"]
764 [-]: EQ        0 R37 K2     ; if R37 ~= nil then PC := 790
765 [-]: JMP       790          ; PC := 790
766 [-]: GETGLOBAL R37 K5       ; R37 := 0xae91e43b
767 [-]: SELF      R37 R37 K97  ; R38 := R37; R37 := R37[0x42b04007]
768 [-]: GETTABLE  R39 R0 K130  ; R39 := R0["Title"]
769 [-]: LOADBOOL  R40 0 0      ; R40 := false
770 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
771 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
772 [-]: SELF      R38 R38 K36  ; R39 := R38; R38 := R38[0xe261aa96]
773 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
774 [-]: LOADK     R41 K51      ; R41 := "Label"
775 [-]: LOADK     R42 29       ; R42 := 29.000000
776 [-]: GETGLOBAL R43 K107     ; R43 := 0x7f5022cf
777 [-]: GETTABLE  R43 R43 K108 ; R43 := R43[0x3f3e4d12]
778 [-]: MOVE      R44 R37      ; R44 := R37
779 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
780 [-]: CALL      R38 0 1      ; R38(R39,...)
781 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
782 [-]: SELF      R38 R38 K36  ; R39 := R38; R38 := R38[0xe261aa96]
783 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
784 [-]: LOADK     R41 K33      ; R41 := "Stats"
785 [-]: LOADK     R42 29       ; R42 := 29.000000
786 [-]: GETGLOBAL R43 K37      ; R43 := 0x5f0788c4
787 [-]: MOVE      R44 R33      ; R44 := R33
788 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
789 [-]: CALL      R38 0 1      ; R38(R39,...)
790 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
791 [-]: SELF      R38 R38 K69  ; R39 := R38; R38 := R38[0x20b98db3]
792 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
793 [-]: LOADK     R41 K131     ; R41 := ".SelectBtn.Tf.text"
794 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
795 [-]: LOADK     R41 K56      ; R41 := "<MENU_SELECT>"
796 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
797 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
798 [-]: SELF      R38 R38 K32  ; R39 := R38; R38 := R38[0xc0a3774b]
799 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
800 [-]: LOADK     R41 K132     ; R41 := "SelectBtn"
801 [-]: LOADK     R42 11       ; R42 := 11.000000
802 [-]: LOADBOOL  R43 0 0      ; R43 := false
803 [-]: CALL      R38 6 1      ; R38(R39,R40,R41,R42,R43)
804 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
805 [-]: SELF      R38 R38 K6   ; R39 := R38; R38 := R38[0xf64b7262]
806 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
807 [-]: LOADK     R41 K132     ; R41 := "SelectBtn"
808 [-]: LOADK     R42 1        ; R42 := 1.000000
809 [-]: LOADK     R43 0        ; R43 := 0.000000
810 [-]: CALL      R38 6 1      ; R38(R39,R40,R41,R42,R43)
811 [-]: GETTABLE  R38 R0 K133  ; R38 := R0["XpRatio"]
812 [-]: TEST      R38 0        ; if not R38 then PC := 883
813 [-]: JMP       883          ; PC := 883
814 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
815 [-]: SELF      R38 R38 K32  ; R39 := R38; R38 := R38[0xc0a3774b]
816 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
817 [-]: LOADK     R41 K134     ; R41 := "LevelProgress"
818 [-]: LOADK     R42 11       ; R42 := 11.000000
819 [-]: LOADBOOL  R43 1 0      ; R43 := true
820 [-]: CALL      R38 6 1      ; R38(R39,R40,R41,R42,R43)
821 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
822 [-]: SELF      R38 R38 K6   ; R39 := R38; R38 := R38[0xf64b7262]
823 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
824 [-]: LOADK     R41 K134     ; R41 := "LevelProgress"
825 [-]: LOADK     R42 1        ; R42 := 1.000000
826 [-]: GETUPVAL  R43 U8       ; R43 := U8
827 [-]: GETTABLE  R43 R43 K117 ; R43 := R43[0x06d055f9]
828 [-]: MOVE      R44 R1       ; R44 := R1
829 [-]: GETUPVAL  R45 U6       ; R45 := U6
830 [-]: GETTABLE  R45 R45 K102 ; R45 := R45["HEIGHT_SELECTED"]
831 [-]: GETUPVAL  R46 U6       ; R46 := U6
832 [-]: GETTABLE  R46 R46 K103 ; R46 := R46["HEIGHT_UNSELECTED"]
833 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
834 [-]: MUL       R43 R43 K135 ; R43 := R43 * 0.500000
835 [-]: SUB       R43 R43 K20  ; R43 := R43 - 5.000000
836 [-]: CALL      R38 6 1      ; R38(R39,R40,R41,R42,R43)
837 [-]: GETUPVAL  R38 U9       ; R38 := U9
838 [-]: GETTABLE  R38 R38 K136 ; R38 := R38["FullXpBarWidth"]
839 [-]: EQ        0 R38 K2     ; if R38 ~= nil then PC := 851
840 [-]: JMP       851          ; PC := 851
841 [-]: GETUPVAL  R38 U9       ; R38 := U9
842 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
843 [-]: SELF      R39 R39 K125 ; R40 := R39; R39 := R39[0x91a24e4b]
844 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
845 [-]: LOADK     R42 K137     ; R42 := ".LevelProgress.Back"
846 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
847 [-]: LOADK     R42 12       ; R42 := 12.000000
848 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
849 [-]: SUB       R39 R39 K39  ; R39 := R39 - 2.000000
850 [-]: SETTABLE  R38 K136 R39 ; R38["FullXpBarWidth"] := R39
851 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
852 [-]: SELF      R38 R38 K6   ; R39 := R38; R38 := R38[0xf64b7262]
853 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
854 [-]: LOADK     R41 K138     ; R41 := "LevelProgress.Front"
855 [-]: LOADK     R42 12       ; R42 := 12.000000
856 [-]: GETGLOBAL R43 K139     ; R43 := 0x42dcc9f5
857 [-]: GETUPVAL  R44 U9       ; R44 := U9
858 [-]: GETTABLE  R44 R44 K136 ; R44 := R44["FullXpBarWidth"]
859 [-]: GETTABLE  R45 R0 K133  ; R45 := R0["XpRatio"]
860 [-]: MUL       R44 R44 R45  ; R44 := R44 * R45
861 [-]: LOADK     R45 K140     ; R45 := 0.010000
862 [-]: GETUPVAL  R46 U9       ; R46 := U9
863 [-]: GETTABLE  R46 R46 K136 ; R46 := R46["FullXpBarWidth"]
864 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
865 [-]: CALL      R38 0 1      ; R38(R39,...)
866 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
867 [-]: SELF      R38 R38 K87  ; R39 := R38; R38 := R38[0xd5181643]
868 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
869 [-]: LOADK     R41 K141     ; R41 := ".LevelProgress.Front"
870 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
871 [-]: GETGLOBAL R41 K82      ; R41 := 0x0032441c
872 [-]: GETTABLE  R41 R41 K88  ; R41 := R41["UIMaterial_SmoothEdgeNoDepthTest"]
873 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
874 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
875 [-]: SELF      R38 R38 K87  ; R39 := R38; R38 := R38[0xd5181643]
876 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
877 [-]: LOADK     R41 K137     ; R41 := ".LevelProgress.Back"
878 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
879 [-]: GETGLOBAL R41 K82      ; R41 := 0x0032441c
880 [-]: GETTABLE  R41 R41 K88  ; R41 := R41["UIMaterial_SmoothEdgeNoDepthTest"]
881 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
882 [-]: JMP       891          ; PC := 891
883 [-]: LOADBOOL  R5 1 0       ; R5 := true
884 [-]: GETGLOBAL R38 K5       ; R38 := 0xae91e43b
885 [-]: SELF      R38 R38 K32  ; R39 := R38; R38 := R38[0xc0a3774b]
886 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
887 [-]: LOADK     R41 K134     ; R41 := "LevelProgress"
888 [-]: LOADK     R42 11       ; R42 := 11.000000
889 [-]: LOADBOOL  R43 0 0      ; R43 := false
890 [-]: CALL      R38 6 1      ; R38(R39,R40,R41,R42,R43)
891 [-]: GETUPVAL  R38 U9       ; R38 := U9
892 [-]: GETTABLE  R38 R38 K142 ; R38 := R38["OriginalLabelY"]
893 [-]: EQ        0 R38 K2     ; if R38 ~= nil then PC := 904
894 [-]: JMP       904          ; PC := 904
895 [-]: GETUPVAL  R38 U9       ; R38 := U9
896 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
897 [-]: SELF      R39 R39 K125 ; R40 := R39; R39 := R39[0x91a24e4b]
898 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
899 [-]: LOADK     R42 K121     ; R42 := ".Label"
900 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
901 [-]: LOADK     R42 1        ; R42 := 1.000000
902 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
903 [-]: SETTABLE  R38 K142 R39 ; R38["OriginalLabelY"] := R39
904 [-]: GETUPVAL  R38 U9       ; R38 := U9
905 [-]: GETTABLE  R38 R38 K142 ; R38 := R38["OriginalLabelY"]
906 [-]: TEST      R5 0         ; if not R5 then PC := 921
907 [-]: JMP       921          ; PC := 921
908 [-]: GETUPVAL  R39 U8       ; R39 := U8
909 [-]: GETTABLE  R39 R39 K117 ; R39 := R39[0x06d055f9]
910 [-]: GETTABLE  R40 R0 K22   ; R40 := R0["LoadOutType"]
911 [-]: EQ        1 R40 K38    ; if R40 == 4.000000 then PC := 916
912 [-]: JMP       916          ; PC := 916
913 [-]: MOVE      R40 R4       ; R40 := R4
914 [-]: JMP       917          ; PC := 917
915 [-]: LOADBOOL  R40 0 1      ; R40 := false; PC := 916
916 [-]: LOADBOOL  R40 1 0      ; R40 := true
917 [-]: LOADK     R41 10       ; R41 := 10.000000
918 [-]: LOADK     R42 4        ; R42 := 4.000000
919 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
920 [-]: ADD       R38 R38 R39  ; R38 := R38 + R39
921 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
922 [-]: SELF      R39 R39 K6   ; R40 := R39; R39 := R39[0xf64b7262]
923 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
924 [-]: LOADK     R42 K51      ; R42 := "Label"
925 [-]: LOADK     R43 1        ; R43 := 1.000000
926 [-]: MOVE      R44 R38      ; R44 := R38
927 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
928 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
929 [-]: SELF      R39 R39 K6   ; R40 := R39; R39 := R39[0xf64b7262]
930 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
931 [-]: LOADK     R42 K33      ; R42 := "Stats"
932 [-]: LOADK     R43 1        ; R43 := 1.000000
933 [-]: ADD       R44 R38 K143 ; R44 := R38 + 27.000000
934 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
935 [-]: GETTABLE  R39 R0 K144  ; R39 := R0["TopTitle"]
936 [-]: EQ        1 R39 K2     ; if R39 == nil then PC := 946
937 [-]: JMP       946          ; PC := 946
938 [-]: GETUPVAL  R39 U10      ; R39 := U10
939 [-]: GETTABLE  R40 R0 K1    ; R40 := R0["mClipName"]
940 [-]: LOADK     R41 K145     ; R41 := ".TopTitle"
941 [-]: CONCAT    R40 R40 R41  ; R40 := R40 .. R41
942 [-]: GETTABLE  R41 R0 K144  ; R41 := R0["TopTitle"]
943 [-]: LOADK     R42 394      ; R42 := 394.000000
944 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
945 [-]: JMP       953          ; PC := 953
946 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
947 [-]: SELF      R39 R39 K32  ; R40 := R39; R39 := R39[0xc0a3774b]
948 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
949 [-]: LOADK     R42 K144     ; R42 := "TopTitle"
950 [-]: LOADK     R43 11       ; R43 := 11.000000
951 [-]: LOADBOOL  R44 0 0      ; R44 := false
952 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
953 [-]: GETGLOBAL R39 K0       ; R39 := 0x7b998233
954 [-]: GETGLOBAL R40 K30      ; R40 := 0x25d99d89
955 [-]: CALL      R39 2 2      ; R39 := R39(R40)
956 [-]: TEST      R39 1        ; if R39 then PC := 1141
957 [-]: JMP       1141         ; PC := 1141
958 [-]: GETTABLE  R39 R0 K22   ; R39 := R0["LoadOutType"]
959 [-]: EQ        0 R39 K48    ; if R39 ~= 7.000000 then PC := 976
960 [-]: JMP       976          ; PC := 976
961 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
962 [-]: EQ        0 R39 K9     ; if R39 ~= 0.000000 then PC := 1141
963 [-]: JMP       1141         ; PC := 1141
964 [-]: GETGLOBAL R39 K0       ; R39 := 0x7b998233
965 [-]: GETGLOBAL R40 K26      ; R40 := mSuitType
966 [-]: CALL      R39 2 2      ; R39 := R39(R40)
967 [-]: TEST      R39 1        ; if R39 then PC := 974
968 [-]: JMP       974          ; PC := 974
969 [-]: GETGLOBAL R39 K26      ; R39 := mSuitType
970 [-]: SELF      R39 R39 K46  ; R40 := R39; R39 := R39[0xf2deaf69]
971 [-]: GETGLOBAL R41 K90      ; R41 := 0x2de3a851
972 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
973 [-]: NOT       R39 R39      ; R39 := not R39
974 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
975 [-]: JMP       1141         ; PC := 1141
976 [-]: GETTABLE  R39 R0 K22   ; R39 := R0["LoadOutType"]
977 [-]: EQ        0 R39 K28    ; if R39 ~= 1.000000 then PC := 1006
978 [-]: JMP       1006         ; PC := 1006
979 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
980 [-]: EQ        0 R39 K9     ; if R39 ~= 0.000000 then PC := 994
981 [-]: JMP       994          ; PC := 994
982 [-]: GETUPVAL  R39 U11      ; R39 := U11
983 [-]: CALL      R39 1 2      ; R39 := R39()
984 [-]: TEST      R39 1        ; if R39 then PC := 990
985 [-]: JMP       990          ; PC := 990
986 [-]: GETUPVAL  R39 U12      ; R39 := U12
987 [-]: GETTABLE  R39 R39 K147 ; R39 := R39["Current"]
988 [-]: EQ        0 R39 K39    ; if R39 ~= 2.000000 then PC := 991
989 [-]: JMP       991          ; PC := 991
990 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 991
991 [-]: LOADBOOL  R39 1 0      ; R39 := true
992 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
993 [-]: JMP       1141         ; PC := 1141
994 [-]: GETUPVAL  R39 U11      ; R39 := U11
995 [-]: CALL      R39 1 2      ; R39 := R39()
996 [-]: TEST      R39 0        ; if not R39 then PC := 1004
997 [-]: JMP       1004         ; PC := 1004
998 [-]: GETUPVAL  R39 U12      ; R39 := U12
999 [-]: GETTABLE  R39 R39 K147 ; R39 := R39["Current"]
1000 [-]: EQ        0 R39 K39    ; if R39 ~= 2.000000 then PC := 1003
1001 [-]: JMP       1003         ; PC := 1003
1002 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 1003
1003 [-]: LOADBOOL  R39 1 0      ; R39 := true
1004 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1005 [-]: JMP       1141         ; PC := 1141
1006 [-]: GETTABLE  R39 R0 K22   ; R39 := R0["LoadOutType"]
1007 [-]: EQ        0 R39 K23    ; if R39 ~= 3.000000 then PC := 1074
1008 [-]: JMP       1074         ; PC := 1074
1009 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
1010 [-]: EQ        0 R39 K23    ; if R39 ~= 3.000000 then PC := 1030
1011 [-]: JMP       1030         ; PC := 1030
1012 [-]: GETUPVAL  R39 U5       ; R39 := U5
1013 [-]: CALL      R39 1 2      ; R39 := R39()
1014 [-]: TEST      R39 1        ; if R39 then PC := 1026
1015 [-]: JMP       1026         ; PC := 1026
1016 [-]: GETUPVAL  R39 U2       ; R39 := U2
1017 [-]: LOADK     R40 5        ; R40 := 5.000000
1018 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1019 [-]: TEST      R39 1        ; if R39 then PC := 1026
1020 [-]: JMP       1026         ; PC := 1026
1021 [-]: GETUPVAL  R39 U2       ; R39 := U2
1022 [-]: LOADK     R40 6        ; R40 := 6.000000
1023 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1024 [-]: NOT       R39 R39      ; R39 := not R39
1025 [-]: JMP       1028         ; PC := 1028
1026 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 1027
1027 [-]: LOADBOOL  R39 1 0      ; R39 := true
1028 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1029 [-]: JMP       1141         ; PC := 1141
1030 [-]: GETTABLE  R39 R0 K91   ; R39 := R0["FocusEntry"]
1031 [-]: TEST      R39 0        ; if not R39 then PC := 1050
1032 [-]: JMP       1050         ; PC := 1050
1033 [-]: GETUPVAL  R39 U2       ; R39 := U2
1034 [-]: LOADK     R40 5        ; R40 := 5.000000
1035 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1036 [-]: TEST      R39 1        ; if R39 then PC := 1046
1037 [-]: JMP       1046         ; PC := 1046
1038 [-]: GETUPVAL  R39 U2       ; R39 := U2
1039 [-]: LOADK     R40 6        ; R40 := 6.000000
1040 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1041 [-]: TEST      R39 1        ; if R39 then PC := 1046
1042 [-]: JMP       1046         ; PC := 1046
1043 [-]: GETUPVAL  R39 U5       ; R39 := U5
1044 [-]: CALL      R39 1 2      ; R39 := R39()
1045 [-]: JMP       1048         ; PC := 1048
1046 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 1047
1047 [-]: LOADBOOL  R39 1 0      ; R39 := true
1048 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1049 [-]: JMP       1141         ; PC := 1141
1050 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
1051 [-]: EQ        0 R39 K20    ; if R39 ~= 5.000000 then PC := 1066
1052 [-]: JMP       1066         ; PC := 1066
1053 [-]: GETUPVAL  R39 U2       ; R39 := U2
1054 [-]: LOADK     R40 6        ; R40 := 6.000000
1055 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1056 [-]: TEST      R39 1        ; if R39 then PC := 1062
1057 [-]: JMP       1062         ; PC := 1062
1058 [-]: GETUPVAL  R39 U2       ; R39 := U2
1059 [-]: LOADK     R40 5        ; R40 := 5.000000
1060 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1061 [-]: JMP       1064         ; PC := 1064
1062 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 1063
1063 [-]: LOADBOOL  R39 1 0      ; R39 := true
1064 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1065 [-]: JMP       1141         ; PC := 1141
1066 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
1067 [-]: EQ        0 R39 K21    ; if R39 ~= 6.000000 then PC := 1141
1068 [-]: JMP       1141         ; PC := 1141
1069 [-]: GETUPVAL  R39 U2       ; R39 := U2
1070 [-]: LOADK     R40 6        ; R40 := 6.000000
1071 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1072 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1073 [-]: JMP       1141         ; PC := 1141
1074 [-]: GETTABLE  R39 R0 K22   ; R39 := R0["LoadOutType"]
1075 [-]: EQ        0 R39 K24    ; if R39 ~= 8.000000 then PC := 1141
1076 [-]: JMP       1141         ; PC := 1141
1077 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
1078 [-]: EQ        0 R39 K38    ; if R39 ~= 4.000000 then PC := 1098
1079 [-]: JMP       1098         ; PC := 1098
1080 [-]: GETUPVAL  R39 U5       ; R39 := U5
1081 [-]: CALL      R39 1 2      ; R39 := R39()
1082 [-]: TEST      R39 1        ; if R39 then PC := 1094
1083 [-]: JMP       1094         ; PC := 1094
1084 [-]: GETUPVAL  R39 U2       ; R39 := U2
1085 [-]: LOADK     R40 5        ; R40 := 5.000000
1086 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1087 [-]: TEST      R39 1        ; if R39 then PC := 1094
1088 [-]: JMP       1094         ; PC := 1094
1089 [-]: GETUPVAL  R39 U2       ; R39 := U2
1090 [-]: LOADK     R40 6        ; R40 := 6.000000
1091 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1092 [-]: NOT       R39 R39      ; R39 := not R39
1093 [-]: JMP       1096         ; PC := 1096
1094 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 1095
1095 [-]: LOADBOOL  R39 1 0      ; R39 := true
1096 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1097 [-]: JMP       1141         ; PC := 1141
1098 [-]: GETTABLE  R39 R0 K91   ; R39 := R0["FocusEntry"]
1099 [-]: TEST      R39 0        ; if not R39 then PC := 1118
1100 [-]: JMP       1118         ; PC := 1118
1101 [-]: GETUPVAL  R39 U2       ; R39 := U2
1102 [-]: LOADK     R40 5        ; R40 := 5.000000
1103 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1104 [-]: TEST      R39 1        ; if R39 then PC := 1114
1105 [-]: JMP       1114         ; PC := 1114
1106 [-]: GETUPVAL  R39 U2       ; R39 := U2
1107 [-]: LOADK     R40 6        ; R40 := 6.000000
1108 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1109 [-]: TEST      R39 1        ; if R39 then PC := 1114
1110 [-]: JMP       1114         ; PC := 1114
1111 [-]: GETUPVAL  R39 U5       ; R39 := U5
1112 [-]: CALL      R39 1 2      ; R39 := R39()
1113 [-]: JMP       1116         ; PC := 1116
1114 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 1115
1115 [-]: LOADBOOL  R39 1 0      ; R39 := true
1116 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1117 [-]: JMP       1141         ; PC := 1141
1118 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
1119 [-]: EQ        0 R39 K20    ; if R39 ~= 5.000000 then PC := 1134
1120 [-]: JMP       1134         ; PC := 1134
1121 [-]: GETUPVAL  R39 U2       ; R39 := U2
1122 [-]: LOADK     R40 6        ; R40 := 6.000000
1123 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1124 [-]: TEST      R39 1        ; if R39 then PC := 1130
1125 [-]: JMP       1130         ; PC := 1130
1126 [-]: GETUPVAL  R39 U2       ; R39 := U2
1127 [-]: LOADK     R40 5        ; R40 := 5.000000
1128 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1129 [-]: JMP       1132         ; PC := 1132
1130 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 1131
1131 [-]: LOADBOOL  R39 1 0      ; R39 := true
1132 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1133 [-]: JMP       1141         ; PC := 1141
1134 [-]: GETTABLE  R39 R0 K17   ; R39 := R0["LoadOutId"]
1135 [-]: EQ        0 R39 K21    ; if R39 ~= 6.000000 then PC := 1141
1136 [-]: JMP       1141         ; PC := 1141
1137 [-]: GETUPVAL  R39 U2       ; R39 := U2
1138 [-]: LOADK     R40 6        ; R40 := 6.000000
1139 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1140 [-]: SETTABLE  R0 K146 R39  ; R0["HasBottomLine"] := R39
1141 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
1142 [-]: SELF      R39 R39 K32  ; R40 := R39; R39 := R39[0xc0a3774b]
1143 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
1144 [-]: LOADK     R42 K148     ; R42 := "BottomLine"
1145 [-]: LOADK     R43 11       ; R43 := 11.000000
1146 [-]: GETTABLE  R44 R0 K146  ; R44 := R0["HasBottomLine"]
1147 [-]: EQ        1 R44 K79    ; if R44 == true then PC := 1150
1148 [-]: JMP       1150         ; PC := 1150
1149 [-]: LOADBOOL  R44 0 1      ; R44 := false; PC := 1150
1150 [-]: LOADBOOL  R44 1 0      ; R44 := true
1151 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
1152 [-]: GETTABLE  R39 R0 K146  ; R39 := R0["HasBottomLine"]
1153 [-]: TEST      R39 0        ; if not R39 then PC := 1163
1154 [-]: JMP       1163         ; PC := 1163
1155 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
1156 [-]: SELF      R39 R39 K87  ; R40 := R39; R39 := R39[0xd5181643]
1157 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
1158 [-]: LOADK     R42 K149     ; R42 := ".BottomLine"
1159 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
1160 [-]: GETGLOBAL R42 K82      ; R42 := 0x0032441c
1161 [-]: GETTABLE  R42 R42 K150 ; R42 := R42["UIMaterial_Plain"]
1162 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
1163 [-]: GETGLOBAL R39 K0       ; R39 := 0x7b998233
1164 [-]: GETTABLE  R40 R0 K151  ; R40 := R0["SpecialIcon"]
1165 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1166 [-]: TEST      R39 1        ; if R39 then PC := 1175
1167 [-]: JMP       1175         ; PC := 1175
1168 [-]: GETGLOBAL R39 K5       ; R39 := 0xae91e43b
1169 [-]: SELF      R39 R39 K152 ; R40 := R39; R39 := R39[0x1cb415c1]
1170 [-]: GETTABLE  R41 R0 K1    ; R41 := R0["mClipName"]
1171 [-]: LOADK     R42 K153     ; R42 := ".Icon"
1172 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
1173 [-]: GETTABLE  R42 R0 K151  ; R42 := R0["SpecialIcon"]
1174 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
1175 [-]: GETUPVAL  R39 U13      ; R39 := U13
1176 [-]: MOVE      R40 R0       ; R40 := R0
1177 [-]: CALL      R39 2 1      ; R39(R40)
1178 [-]: RETURN    R0 1         ; return 


; Function #90.7:
;
; Name:            
; Defined at line: 5058
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #90.8:
;
; Name:            
; Defined at line: 5063
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xb7cddf01]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: LOADK     R3 40        ; R3 := 40.000000
  5 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["LoadOutId"]
  6 [-]: EQ        1 R4 K3      ; if R4 == 5.000000 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["LoadOutId"]
  9 [-]: EQ        1 R4 K4      ; if R4 == 6.000000 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 12
 12 [-]: LOADBOOL  R4 1 0       ; R4 := true
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Current"]
 15 [-]: EQ        0 R5 K6      ; if R5 ~= 2.000000 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["LoadOutType"]
 18 [-]: EQ        1 R5 K8      ; if R5 == 4.000000 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["LoadOutId"]
 21 [-]: EQ        1 R5 K9      ; if R5 == nil then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 24
 24 [-]: LOADBOOL  R5 1 0       ; R5 := true
 25 [-]: GETTABLE  R6 R1 K7     ; R6 := R1["LoadOutType"]
 26 [-]: EQ        1 R6 K10     ; if R6 == 7.000000 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 29
 29 [-]: LOADBOOL  R6 1 0       ; R6 := true
 30 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["MandachordEntry"]
 31 [-]: TEST      R4 1         ; if R4 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: TEST      R5 1         ; if R5 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: TEST      R6 1         ; if R6 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: TEST      R7 0         ; if not R7 then PC := 79
 38 [-]: JMP       79           ; PC := 79
 39 [-]: GETUPVAL  R8 U0        ; R8 := U0
 40 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["Current"]
 41 [-]: EQ        0 R8 K12     ; if R8 ~= 1.000000 then PC := 57
 42 [-]: JMP       57           ; PC := 57
 43 [-]: TEST      R6 1         ; if R6 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: TEST      R4 1         ; if R4 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: TEST      R7 0         ; if not R7 then PC := 57
 48 [-]: JMP       57           ; PC := 57
 49 [-]: GETUPVAL  R8 U1        ; R8 := U1
 50 [-]: CALL      R8 1 2       ; R8 := R8()
 51 [-]: TEST      R8 1         ; if R8 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETGLOBAL R8 K13       ; R8 := mLists
 54 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mLoadOutList"]
 55 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mForcedVerticalSeparation"]
 56 [-]: SUB       R2 R2 R8     ; R2 := R2 - R8
 57 [-]: TEST      R4 1         ; if R4 then PC := 68
 58 [-]: JMP       68           ; PC := 68
 59 [-]: GETUPVAL  R8 U2        ; R8 := U2
 60 [-]: LOADK     R9 5         ; R9 := 5.000000
 61 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 62 [-]: TEST      R8 1         ; if R8 then PC := 68
 63 [-]: JMP       68           ; PC := 68
 64 [-]: GETGLOBAL R8 K13       ; R8 := mLists
 65 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mLoadOutList"]
 66 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mForcedVerticalSeparation"]
 67 [-]: SUB       R2 R2 R8     ; R2 := R2 - R8
 68 [-]: TEST      R4 1         ; if R4 then PC := 79
 69 [-]: JMP       79           ; PC := 79
 70 [-]: GETUPVAL  R8 U2        ; R8 := U2
 71 [-]: LOADK     R9 6         ; R9 := 6.000000
 72 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 73 [-]: TEST      R8 1         ; if R8 then PC := 79
 74 [-]: JMP       79           ; PC := 79
 75 [-]: GETGLOBAL R8 K13       ; R8 := mLists
 76 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mLoadOutList"]
 77 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mForcedVerticalSeparation"]
 78 [-]: SUB       R2 R2 R8     ; R2 := R2 - R8
 79 [-]: GETGLOBAL R8 K16       ; R8 := 0xc8802016
 80 [-]: GETGLOBAL R9 K13       ; R9 := mLists
 81 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["mLoadOutList"]
 82 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["mElements"]
 83 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 84 [-]: JMP       94           ; PC := 94
 85 [-]: GETTABLE  R13 R12 K18  ; R13 := R12["Id"]
 86 [-]: GETTABLE  R14 R1 K18   ; R14 := R1["Id"]
 87 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETTABLE  R13 R12 K19  ; R13 := R12["HasBottomLine"]
 91 [-]: TEST      R13 0        ; if not R13 then PC := 94
 92 [-]: JMP       94           ; PC := 94
 93 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 94 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 85; R10 := R11 end
 95 [-]: JMP       85           ; PC := 85
 96 [-]: GETUPVAL  R13 U3       ; R13 := U3
 97 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["HEIGHT_SELECTED"]
 98 [-]: GETUPVAL  R14 U3       ; R14 := U3
 99 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["HEIGHT_UNSELECTED"]
100 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
101 [-]: GETUPVAL  R14 U4       ; R14 := U4
102 [-]: EQ        1 R14 K9     ; if R14 == nil then PC := 112
103 [-]: JMP       112          ; PC := 112
104 [-]: GETTABLE  R14 R1 K18   ; R14 := R1["Id"]
105 [-]: GETUPVAL  R15 U4       ; R15 := U4
106 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["Id"]
107 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: MUL       R14 R13 K22  ; R14 := R13 * 0.500000
110 [-]: ADD       R2 R2 R14    ; R2 := R2 + R14
111 [-]: JMP       121          ; PC := 121
112 [-]: GETUPVAL  R14 U4       ; R14 := U4
113 [-]: EQ        1 R14 K9     ; if R14 == nil then PC := 121
114 [-]: JMP       121          ; PC := 121
115 [-]: GETTABLE  R14 R1 K18   ; R14 := R1["Id"]
116 [-]: GETUPVAL  R15 U4       ; R15 := U4
117 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["Id"]
118 [-]: LT        0 R15 R14    ; if R15 >= R14 then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: ADD       R2 R2 R13    ; R2 := R2 + R13
121 [-]: RETURN    R2 2         ; return R2
122 [-]: RETURN    R0 1         ; return 


; Function #90.9:
;
; Name:            
; Defined at line: 5104
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc0a3774b]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := "Btn"
  5 [-]: LOADK     R6 59        ; R6 := 59.000000
  6 [-]: LOADBOOL  R7 0 0       ; R7 := false
  7 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
  8 [-]: RETURN    R0 1         ; return 


; Function #90.10:
;
; Name:            
; Defined at line: 5108
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := mTimerTable
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mTimerMgr"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xbd2e96ea]
  4 [-]: LOADK     R4 K3        ; R4 := 0.050000
  5 [-]: CLOSURE   R5 0         ; R5 := closure(Function #90.10.1)
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #90.10.1:
;
; Name:            
; Defined at line: 5110
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mClipName"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xc0a3774b]
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mClipName"]
 16 [-]: LOADK     R3 K4        ; R3 := "Btn"
 17 [-]: LOADK     R4 59        ; R4 := 59.000000
 18 [-]: LOADBOOL  R5 1 0       ; R5 := true
 19 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 20 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 5118
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mSelected
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Element"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADBOOL  R1 0 0       ; R1 := false
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FALSE"]
 10 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 23
 11 [-]: JMP       23           ; PC := 23
 12 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["LoadOutId"]
 13 [-]: EQ        0 R1 K6      ; if R1 ~= 0.000000 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["LoadOutType"]
 16 [-]: EQ        1 R1 K6      ; if R1 == 0.000000 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["LoadOutType"]
 19 [-]: EQ        0 R1 K8      ; if R1 ~= 3.000000 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADBOOL  R1 1 0       ; R1 := true
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: LOADBOOL  R1 0 0       ; R1 := false
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 5140
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := mCameraTable
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["destPos"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K4        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MenuSuitAvatar"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 31
 11 [-]: JMP       31           ; PC := 31
 12 [-]: GETGLOBAL R0 K4        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["MenuSuitAvatar"]
 14 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x003c792f]
 15 [-]: GETGLOBAL R2 K7        ; R2 := 0x0469f296
 16 [-]: LOADK     R3 K8        ; R3 := "GAME_C1_ROOT"
 17 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 18 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 19 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
 20 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["rootPos"]
 21 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
 24 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["rootPos"]
 25 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
 28 [-]: SETTABLE  R1 K10 K2    ; R1["forward"] := nil
 29 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
 30 [-]: SETTABLE  R1 K9 R0     ; R1["rootPos"] := R0
 31 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
 32 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["forward"]
 33 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 56
 34 [-]: JMP       56           ; PC := 56
 35 [-]: GETGLOBAL R1 K0        ; R1 := mCameraTable
 36 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["rootPos"]
 37 [-]: GETGLOBAL R2 K11       ; R2 := 0xa421af95
 38 [-]: LOADK     R3 0         ; R3 := 0.000000
 39 [-]: LOADK     R4 K12       ; R4 := 0.900000
 40 [-]: LOADK     R5 0         ; R5 := 0.000000
 41 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 42 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 43 [-]: GETGLOBAL R2 K0        ; R2 := mCameraTable
 44 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
 45 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["destPos"]
 46 [-]: SETTABLE  R2 K13 R3    ; R2["zoomMin"] := R3
 47 [-]: GETGLOBAL R2 K0        ; R2 := mCameraTable
 48 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
 49 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["destPos"]
 50 [-]: SUB       R3 R1 R3     ; R3 := R1 - R3
 51 [-]: SETTABLE  R2 K10 R3    ; R2["forward"] := R3
 52 [-]: GETGLOBAL R2 K14       ; R2 := 0xc2892f65
 53 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
 54 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["forward"]
 55 [-]: CALL      R2 2 1       ; R2(R3)
 56 [-]: GETGLOBAL R2 K15       ; R2 := 0x42dcc9f5
 57 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
 58 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["currPan"]
 59 [-]: GETGLOBAL R4 K0        ; R4 := mCameraTable
 60 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["clampedPan"]
 61 [-]: UNM       R4 R4        ; R4 := ^ R4
 62 [-]: GETGLOBAL R5 K0        ; R5 := mCameraTable
 63 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["clampedPan"]
 64 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 65 [-]: GETGLOBAL R3 K0        ; R3 := mCameraTable
 66 [-]: GETGLOBAL R4 K0        ; R4 := mCameraTable
 67 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["zoomMin"]
 68 [-]: GETGLOBAL R5 K0        ; R5 := mCameraTable
 69 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["forward"]
 70 [-]: GETGLOBAL R6 K0        ; R6 := mCameraTable
 71 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["currZoom"]
 72 [-]: MUL       R5 R5 R6     ; R5 := R5 * R6
 73 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 74 [-]: GETGLOBAL R5 K11       ; R5 := 0xa421af95
 75 [-]: LOADK     R6 0         ; R6 := 0.000000
 76 [-]: MOVE      R7 R2        ; R7 := R2
 77 [-]: LOADK     R8 0         ; R8 := 0.000000
 78 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 79 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 80 [-]: SETTABLE  R3 K1 R4     ; R3["destPos"] := R4
 81 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 5166
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: SETTABLE  R0 K0 K1     ; R0["StatsParagraph"] := ""
  2 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  3 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Type"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 121
  6 [-]: JMP       121          ; PC := 121
  7 [-]: LOADBOOL  R1 0 0       ; R1 := false
  8 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["LoadOutId"]
  9 [-]: EQ        1 R2 K6      ; if R2 == 0.000000 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: EQ        1 R2 K7      ; if R2 == 2.000000 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: EQ        1 R2 K8      ; if R2 == 1.000000 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: EQ        0 R2 K9      ; if R2 ~= 3.000000 then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["EquippedItem"]
 18 [-]: EQ        1 R3 K11     ; if R3 == nil then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["EquippedItem"]
 21 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xba568eef]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 0         ; if not R3 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADBOOL  R1 1 0       ; R1 := true
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0x6fba4466]
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 0         ; if not R3 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: JMP       127          ; PC := 127
 33 [-]: TEST      R1 0         ; if not R1 then PC := 62
 34 [-]: JMP       62           ; PC := 62
 35 [-]: GETGLOBAL R4 K14       ; R4 := 0x34291f5c
 36 [-]: GETTABLE  R4 R4 K15    ; R4 := R4[0x397b920f]
 37 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["EquippedItem"]
 38 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["mExpiry"]
 39 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["sec"]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: LOADNIL   R5 R5        ; R5 := nil
 42 [-]: LE        0 R4 K6      ; if R4 > 0.000000 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R6 K18       ; R6 := 0xae91e43b
 45 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0x42b04007]
 46 [-]: LOADK     R8 K20       ; R8 := "/Lotus/Language/Menu/Expired"
 47 [-]: LOADBOOL  R9 0 0       ; R9 := false
 48 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 49 [-]: MOVE      R5 R6        ; R5 := R6
 50 [-]: JMP       56           ; PC := 56
 51 [-]: GETUPVAL  R6 U1        ; R6 := U1
 52 [-]: GETTABLE  R6 R6 K21    ; R6 := R6[0x10e5bb7a]
 53 [-]: MOVE      R7 R4        ; R7 := R4
 54 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 55 [-]: MOVE      R5 R6        ; R5 := R6
 56 [-]: GETGLOBAL R6 K22       ; R6 := Icons
 57 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["TIMER"]
 58 [-]: MOVE      R7 R5        ; R7 := R5
 59 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 60 [-]: SETTABLE  R0 K0 R6     ; R0["StatsParagraph"] := R6
 61 [-]: JMP       127          ; PC := 127
 62 [-]: GETTABLE  R6 R0 K24    ; R6 := R0["Level"]
 63 [-]: GETGLOBAL R7 K25       ; R7 := 0xa94df70b
 64 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0x757f0100]
 65 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["Type"]
 66 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 67 [-]: LE        0 R7 R6      ; if R7 > R6 then PC := 96
 68 [-]: JMP       96           ; PC := 96
 69 [-]: GETGLOBAL R6 K18       ; R6 := 0xae91e43b
 70 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0x42b04007]
 71 [-]: LOADK     R8 K27       ; R8 := "/Lotus/Language/Ranks/MaxRank"
 72 [-]: LOADBOOL  R9 0 0       ; R9 := false
 73 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 74 [-]: SETTABLE  R0 K0 R6     ; R0["StatsParagraph"] := R6
 75 [-]: GETGLOBAL R6 K2        ; R6 := 0x7b998233
 76 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["EquippedItem"]
 77 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mFocusLens"]
 78 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 79 [-]: TEST      R6 1         ; if R6 then PC := 127
 80 [-]: JMP       127          ; PC := 127
 81 [-]: GETUPVAL  R6 U1        ; R6 := U1
 82 [-]: GETTABLE  R6 R6 K29    ; R6 := R6[0x12afd099]
 83 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["EquippedItem"]
 84 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mFocusLens"]
 85 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 86 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["StatsParagraph"]
 87 [-]: LOADK     R8 K30       ; R8 := " "
 88 [-]: GETGLOBAL R9 K18       ; R9 := 0xae91e43b
 89 [-]: SELF      R9 R9 K19    ; R10 := R9; R9 := R9[0x42b04007]
 90 [-]: GETTABLE  R11 R6 K31   ; R11 := R6["LensTag"]
 91 [-]: LOADBOOL  R12 1 0      ; R12 := true
 92 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 93 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 94 [-]: SETTABLE  R0 K0 R7     ; R0["StatsParagraph"] := R7
 95 [-]: JMP       127          ; PC := 127
 96 [-]: GETTABLE  R7 R0 K24    ; R7 := R0["Level"]
 97 [-]: LT        0 K6 R7      ; if 0.000000 >= R7 then PC := 111
 98 [-]: JMP       111          ; PC := 111
 99 [-]: GETGLOBAL R7 K32       ; R7 := 0x5f0788c4
100 [-]: GETGLOBAL R8 K18       ; R8 := 0xae91e43b
101 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8[0x42b04007]
102 [-]: LOADK     R10 K33      ; R10 := "/Lotus/Language/Menu/Arsenal_Rank"
103 [-]: LOADBOOL  R11 0 0      ; R11 := false
104 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
105 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
106 [-]: LOADK     R8 K30       ; R8 := " "
107 [-]: GETTABLE  R9 R0 K24    ; R9 := R0["Level"]
108 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
109 [-]: SETTABLE  R0 K0 R7     ; R0["StatsParagraph"] := R7
110 [-]: JMP       127          ; PC := 127
111 [-]: GETTABLE  R7 R0 K34    ; R7 := R0["LoadOutType"]
112 [-]: EQ        1 R7 K35     ; if R7 == 4.000000 then PC := 127
113 [-]: JMP       127          ; PC := 127
114 [-]: GETGLOBAL R7 K18       ; R7 := 0xae91e43b
115 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0x42b04007]
116 [-]: LOADK     R9 K36       ; R9 := "/Lotus/Language/Ranks/Rank0"
117 [-]: LOADBOOL  R10 0 0      ; R10 := false
118 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
119 [-]: SETTABLE  R0 K0 R7     ; R0["StatsParagraph"] := R7
120 [-]: JMP       127          ; PC := 127
121 [-]: GETGLOBAL R7 K18       ; R7 := 0xae91e43b
122 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0x42b04007]
123 [-]: GETTABLE  R9 R0 K37    ; R9 := R0["Title"]
124 [-]: LOADBOOL  R10 0 0      ; R10 := false
125 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
126 [-]: SETTABLE  R0 K0 R7     ; R0["StatsParagraph"] := R7
127 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 5206
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["UID"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x6c97a788
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["InvalidItemID"]
 10 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 102
 11 [-]: JMP       102          ; PC := 102
 12 [-]: LOADK     R1 1         ; R1 := 1.000000
 13 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["OwnedItems"]
 14 [-]: LEN       R2 R2        ; R2 := # R2
 15 [-]: LOADK     R3 1         ; R3 := 1.000000
 16 [-]: FORPREP   R1 100       ; R1 -= R3; PC := 100
 17 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["OwnedItems"]
 18 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 19 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["UID"]
 20 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["UID"]
 21 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 100
 22 [-]: JMP       100          ; PC := 100
 23 [-]: GETTABLE  R6 R5 K6     ; R6 := R5["Type"]
 24 [-]: SETTABLE  R0 K6 R6     ; R0["Type"] := R6
 25 [-]: GETTABLE  R6 R5 K7     ; R6 := R5["Xp"]
 26 [-]: SETTABLE  R0 K7 R6     ; R0["Xp"] := R6
 27 [-]: GETGLOBAL R6 K9        ; R6 := 0xa94df70b
 28 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x8427bf69]
 29 [-]: GETTABLE  R8 R0 K7     ; R8 := R0["Xp"]
 30 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["Type"]
 31 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 32 [-]: SETTABLE  R0 K8 R6     ; R0["Level"] := R6
 33 [-]: GETGLOBAL R6 K1        ; R6 := 0x25d99d89
 34 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0x62c81b76]
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xc9f592a7]
 37 [-]: GETTABLE  R8 R0 K14    ; R8 := R0["LoadOutType"]
 38 [-]: GETTABLE  R9 R0 K15    ; R9 := R0["LoadOutId"]
 39 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 40 [-]: SETTABLE  R0 K11 R6    ; R0["PvpValue"] := R6
 41 [-]: GETTABLE  R6 R5 K17    ; R6 := R5["Item"]
 42 [-]: SETTABLE  R0 K16 R6    ; R0["EquippedItem"] := R6
 43 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["Xp"]
 44 [-]: GETGLOBAL R7 K9        ; R7 := 0xa94df70b
 45 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x54c107f9]
 46 [-]: GETTABLE  R9 R0 K7     ; R9 := R0["Xp"]
 47 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["Type"]
 48 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 49 [-]: GETGLOBAL R8 K9        ; R8 := 0xa94df70b
 50 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8[0x4d058675]
 51 [-]: GETTABLE  R10 R0 K7    ; R10 := R0["Xp"]
 52 [-]: GETTABLE  R11 R0 K6    ; R11 := R0["Type"]
 53 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 54 [-]: SUB       R9 R6 R7     ; R9 := R6 - R7
 55 [-]: SUB       R10 R8 R7    ; R10 := R8 - R7
 56 [-]: DIV       R9 R9 R10    ; R9 := R9 / R10
 57 [-]: SETTABLE  R0 K20 R9    ; R0[0xf64b7262] := R9
 58 [-]: GETGLOBAL R10 K9       ; R10 := 0xa94df70b
 59 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10[0x84fb4327]
 60 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["Type"]
 61 [-]: GETTABLE  R13 R0 K16   ; R13 := R0["EquippedItem"]
 62 [-]: GETTABLE  R13 R13 K22  ; R13 := R13["mPolarized"]
 63 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 64 [-]: GETGLOBAL R11 K23      ; R11 := 0x5bced4c4
 65 [-]: GETTABLE  R11 R11 K24  ; R11 := R11[0xac1b386a]
 66 [-]: MOVE      R12 R10      ; R12 := R10
 67 [-]: GETTABLE  R13 R0 K8    ; R13 := R0["Level"]
 68 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 69 [-]: SETTABLE  R0 K8 R11    ; R0["Level"] := R11
 70 [-]: GETTABLE  R11 R0 K8    ; R11 := R0["Level"]
 71 [-]: EQ        1 R11 R10    ; if R11 == R10 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETTABLE  R11 R0 K14   ; R11 := R0["LoadOutType"]
 74 [-]: EQ        1 R11 K25    ; if R11 == 4.000000 then PC := 82
 75 [-]: JMP       82           ; PC := 82
 76 [-]: GETUPVAL  R11 U0       ; R11 := U0
 77 [-]: GETTABLE  R11 R11 K26  ; R11 := R11[0x6fba4466]
 78 [-]: MOVE      R12 R0       ; R12 := R0
 79 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 80 [-]: TEST      R11 0        ; if not R11 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: SETTABLE  R0 K20 K27   ; R0["XpRatio"] := nil
 83 [-]: GETUPVAL  R11 U1       ; R11 := U1
 84 [-]: GETTABLE  R12 R5 K6    ; R12 := R5["Type"]
 85 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 86 [-]: SETTABLE  R0 K28 R11   ; R0["mStoreItem"] := R11
 87 [-]: GETTABLE  R11 R5 K30   ; R11 := R5["CustomName"]
 88 [-]: SETTABLE  R0 K29 R11   ; R0["mDisplayName"] := R11
 89 [-]: SETTABLE  R0 K31 K27   ; R0["Icon"] := nil
 90 [-]: GETTABLE  R11 R5 K32   ; R11 := R5["mModularParts"]
 91 [-]: EQ        1 R11 K27    ; if R11 == nil then PC := 110
 92 [-]: JMP       110          ; PC := 110
 93 [-]: GETUPVAL  R11 U2       ; R11 := U2
 94 [-]: GETTABLE  R11 R11 K33  ; R11 := R11[0xda20bf25]
 95 [-]: GETTABLE  R12 R5 K32   ; R12 := R5["mModularParts"]
 96 [-]: GETUPVAL  R13 U3       ; R13 := U3
 97 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 98 [-]: SETTABLE  R0 K31 R11   ; R0["Icon"] := R11
 99 [-]: JMP       110          ; PC := 110
100 [-]: FORLOOP   R1 17        ; R1 += R3; if R1 <= R2 then begin PC := 17; R4 := R1 end
101 [-]: JMP       110          ; PC := 110
102 [-]: SETTABLE  R0 K6 K27    ; R0["Type"] := nil
103 [-]: SETTABLE  R0 K7 K34    ; R0["Xp"] := 0.000000
104 [-]: SETTABLE  R0 K20 K27   ; R0["XpRatio"] := nil
105 [-]: SETTABLE  R0 K8 K34    ; R0["Level"] := 0.000000
106 [-]: SETTABLE  R0 K11 K34   ; R0["PvpValue"] := 0.000000
107 [-]: SETTABLE  R0 K16 K27   ; R0["EquippedItem"] := nil
108 [-]: SETTABLE  R0 K28 K27   ; R0["mStoreItem"] := nil
109 [-]: SETTABLE  R0 K31 K27   ; R0["Icon"] := nil
110 [-]: GETUPVAL  R11 U0       ; R11 := U0
111 [-]: GETTABLE  R11 R11 K35  ; R11 := R11[0x8027b42a]
112 [-]: MOVE      R12 R0       ; R12 := R0
113 [-]: CALL      R11 2 1      ; R11(R12)
114 [-]: GETTABLE  R11 R0 K16   ; R11 := R0["EquippedItem"]
115 [-]: EQ        1 R11 K27    ; if R11 == nil then PC := 123
116 [-]: JMP       123          ; PC := 123
117 [-]: GETUPVAL  R11 U4       ; R11 := U4
118 [-]: MOVE      R12 R0       ; R12 := R0
119 [-]: LOADBOOL  R13 1 0      ; R13 := true
120 [-]: CALL      R11 3 3      ; R11,R12 := R11(R12,R13)
121 [-]: SETTABLE  R0 K37 R12   ; R0["BackupCustomization"] := R12
122 [-]: SETTABLE  R0 K36 R11   ; R0["Customization"] := R11
123 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 5262
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xf278f8a1]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADBOOL  R2 0 0       ; R2 := false
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: LOADNIL   R2 R2        ; R2 := nil
 18 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1[0xf2deaf69]
 19 [-]: GETGLOBAL R5 K3        ; R5 := 0xa3d702be
 20 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 21 [-]: TEST      R3 0         ; if not R3 then PC := 30
 22 [-]: JMP       30           ; PC := 30
 23 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 24 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x42b04007]
 25 [-]: LOADK     R5 K6        ; R5 := "/Lotus/Language/Items/GearTackleboxOnly"
 26 [-]: LOADBOOL  R6 0 0       ; R6 := false
 27 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 28 [-]: MOVE      R2 R3        ; R2 := R3
 29 [-]: JMP       41           ; PC := 41
 30 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1[0xf2deaf69]
 31 [-]: GETGLOBAL R5 K7        ; R5 := 0xe56e60c6
 32 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 33 [-]: TEST      R3 0         ; if not R3 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 36 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x42b04007]
 37 [-]: LOADK     R5 K8        ; R5 := "/Lotus/Language/Items/GearHuntingOnly"
 38 [-]: LOADBOOL  R6 0 0       ; R6 := false
 39 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 40 [-]: MOVE      R2 R3        ; R2 := R3
 41 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[0xe0cba3ca]
 45 [-]: MOVE      R4 R2        ; R4 := R2
 46 [-]: CALL      R3 2 1       ; R3(R4)
 47 [-]: LOADBOOL  R3 0 0       ; R3 := false
 48 [-]: RETURN    R3 2         ; return R3
 49 [-]: GETGLOBAL R3 K11       ; R3 := 0x7ed0a956
 50 [-]: LOADK     R4 K12       ; R4 := "/Lotus/Types/Restoratives/HeavyWeaponSummon"
 51 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 52 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 77
 53 [-]: JMP       77           ; PC := 77
 54 [-]: GETGLOBAL R4 K13       ; R4 := 0x25d99d89
 55 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x62c81b76]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: SELF      R5 R4 K15    ; R6 := R4; R5 := R4[0xb61abfd2]
 58 [-]: LOADK     R7 0         ; R7 := 0.000000
 59 [-]: LOADK     R8 4         ; R8 := 4.000000
 60 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 61 [-]: GETTABLE  R6 R5 K17    ; R6 := R5["mItemId"]
 62 [-]: GETGLOBAL R7 K16       ; R7 := 0x6c97a788
 63 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["InvalidItemID"]
 64 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 67 [-]: GETTABLE  R7 R5 K19    ; R7 := R5["mItemType"]
 68 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 69 [-]: TEST      R6 0         ; if not R6 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETUPVAL  R6 U0        ; R6 := U0
 72 [-]: GETTABLE  R6 R6 K20    ; R6 := R6[0xa53f5e12]
 73 [-]: LOADK     R7 K21       ; R7 := "/Lotus/Language/Items/Gear_HeavyWeaponNotEquipped"
 74 [-]: CALL      R6 2 1       ; R6(R7)
 75 [-]: LOADBOOL  R6 0 0       ; R6 := false
 76 [-]: RETURN    R6 2         ; return R6
 77 [-]: LOADBOOL  R6 1 0       ; R6 := true
 78 [-]: RETURN    R6 2         ; return R6
 79 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 5302
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K3        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x297e93ca]
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 5308
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Item"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 29
  6 [-]: JMP       29           ; PC := 29
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x34291f5c
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xe27b35bb]
  9 [-]: CALL      R0 1 2       ; R0 := R0()
 10 [-]: SETTABLE  R0 K5 K6     ; R0["dialogType"] := 1.000000
 11 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Item"]
 13 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mLockDetail"]
 14 [-]: SETTABLE  R0 K7 R1     ; R0["locString"] := R1
 15 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 16 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Item"]
 17 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["mUnlockTag"]
 18 [-]: SETTABLE  R0 K9 R1     ; R0["firstString"] := R1
 19 [-]: SETTABLE  R0 K11 K12   ; R0["secondString"] := "/Menu/Confirm_Item_Ok"
 20 [-]: SELF      R1 R0 K13    ; R2 := R0; R1 := R0[0xe6ccc5b9]
 21 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 22 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Item"]
 23 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mUnlockCallback"]
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[0xe99b84e7]
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: CALL      R1 2 1       ; R1(R2)
 29 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 5320
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  37

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 754
  6 [-]: JMP       754          ; PC := 754
  7 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Cosmetic"]
  9 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["PetTrait"]
 10 [-]: TEST      R0 0         ; if not R0 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Cosmetic"]
 14 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["Attribute"]
 15 [-]: TEST      R0 1         ; if R0 then PC := 754
 16 [-]: JMP       754          ; PC := 754
 17 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
 18 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Cosmetic"]
 19 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["Slot"]
 20 [-]: EQ        1 R0 K7      ; if R0 == nil then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
 23 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Element"]
 24 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["Customization"]
 25 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xedd0b8c3]
 26 [-]: LOADNIL   R2 R2        ; R2 := nil
 27 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 28 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Cosmetic"]
 29 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["Slot"]
 30 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 31 [-]: LOADNIL   R0 R0        ; R0 := nil
 32 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 33 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 34 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["Item"]
 35 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["CustomizationType"]
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: TEST      R1 1         ; if R1 then PC := 48
 38 [-]: JMP       48           ; PC := 48
 39 [-]: GETGLOBAL R1 K12       ; R1 := 0xb009bbc6
 40 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 41 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["Item"]
 42 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["CustomizationType"]
 43 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0xf278f8a1]
 44 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 45 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 46 [-]: MOVE      R0 R1        ; R0 := R1
 47 [-]: JMP       88           ; PC := 88
 48 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 49 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 50 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["Item"]
 51 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Type"]
 52 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 53 [-]: TEST      R1 1         ; if R1 then PC := 62
 54 [-]: JMP       62           ; PC := 62
 55 [-]: GETGLOBAL R1 K12       ; R1 := 0xb009bbc6
 56 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 57 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["Item"]
 58 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Type"]
 59 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 60 [-]: MOVE      R0 R1        ; R0 := R1
 61 [-]: JMP       88           ; PC := 88
 62 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 63 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["Item"]
 64 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["mPurchasedInfo"]
 65 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 88
 66 [-]: JMP       88           ; PC := 88
 67 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 68 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 69 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["Item"]
 70 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mPurchasedInfo"]
 71 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["UID"]
 72 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 73 [-]: TEST      R1 1         ; if R1 then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 76 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["Item"]
 77 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["mPurchasedInfo"]
 78 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["UID"]
 79 [-]: EQ        1 R1 K17     ; if R1 == "" then PC := 88
 80 [-]: JMP       88           ; PC := 88
 81 [-]: GETGLOBAL R1 K12       ; R1 := 0xb009bbc6
 82 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 83 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["Item"]
 84 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mPurchasedInfo"]
 85 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["UID"]
 86 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 87 [-]: MOVE      R0 R1        ; R0 := R1
 88 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 89 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Cosmetic"]
 90 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Slot"]
 91 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 121
 92 [-]: JMP       121          ; PC := 121
 93 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 94 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 95 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["Item"]
 96 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Skin"]
 97 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 98 [-]: TEST      R1 1         ; if R1 then PC := 112
 99 [-]: JMP       112          ; PC := 112
100 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
101 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
102 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Customization"]
103 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1[0x569554e7]
104 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
105 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["Item"]
106 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["Skin"]
107 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
108 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Cosmetic"]
109 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Slot"]
110 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
111 [-]: JMP       121          ; PC := 121
112 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
113 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
114 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Customization"]
115 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xedd0b8c3]
116 [-]: MOVE      R3 R0        ; R3 := R0
117 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
118 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Cosmetic"]
119 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Slot"]
120 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
121 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
122 [-]: MOVE      R2 R0        ; R2 := R0
123 [-]: CALL      R1 2 2       ; R1 := R1(R2)
124 [-]: TEST      R1 1         ; if R1 then PC := 201
125 [-]: JMP       201          ; PC := 201
126 [-]: SELF      R1 R0 K20    ; R2 := R0; R1 := R0[0xf2deaf69]
127 [-]: GETGLOBAL R3 K21       ; R3 := gLotusSuitCustomizationType
128 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
129 [-]: TEST      R1 0         ; if not R1 then PC := 201
130 [-]: JMP       201          ; PC := 201
131 [-]: LOADK     R1 0         ; R1 := 0.000000
132 [-]: LOADK     R2 20        ; R2 := 20.000000
133 [-]: LOADK     R3 1         ; R3 := 1.000000
134 [-]: FORPREP   R1 200       ; R1 -= R3; PC := 200
135 [-]: GETGLOBAL R5 K12       ; R5 := 0xb009bbc6
136 [-]: SELF      R6 R0 K23    ; R7 := R0; R6 := R0[0xb8ef5b34]
137 [-]: MOVE      R8 R4        ; R8 := R4
138 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
139 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
140 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
141 [-]: MOVE      R7 R5        ; R7 := R5
142 [-]: CALL      R6 2 2       ; R6 := R6(R7)
143 [-]: TEST      R6 0         ; if not R6 then PC := 188
144 [-]: JMP       188          ; PC := 188
145 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
146 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Cosmetic"]
147 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["Slot"]
148 [-]: EQ        0 R6 K24     ; if R6 ~= 7.000000 then PC := 188
149 [-]: JMP       188          ; PC := 188
150 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
151 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
152 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Element"]
153 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["Type"]
154 [-]: CALL      R6 2 2       ; R6 := R6(R7)
155 [-]: TEST      R6 1         ; if R6 then PC := 188
156 [-]: JMP       188          ; PC := 188
157 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
158 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
159 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["Type"]
160 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0xf2deaf69]
161 [-]: GETGLOBAL R8 K25       ; R8 := 0x01302fb0
162 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
163 [-]: TEST      R6 0         ; if not R6 then PC := 188
164 [-]: JMP       188          ; PC := 188
165 [-]: EQ        0 R4 K26     ; if R4 ~= 9.000000 then PC := 177
166 [-]: JMP       177          ; PC := 177
167 [-]: GETGLOBAL R6 K12       ; R6 := 0xb009bbc6
168 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
169 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Element"]
170 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["EquippedItem"]
171 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mDetails"]
172 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["mDominantTraits"]
173 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["mHead"]
174 [-]: CALL      R6 2 2       ; R6 := R6(R7)
175 [-]: MOVE      R5 R6        ; R5 := R6
176 [-]: JMP       188          ; PC := 188
177 [-]: EQ        0 R4 K31     ; if R4 ~= 10.000000 then PC := 188
178 [-]: JMP       188          ; PC := 188
179 [-]: GETGLOBAL R6 K12       ; R6 := 0xb009bbc6
180 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
181 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Element"]
182 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["EquippedItem"]
183 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mDetails"]
184 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["mDominantTraits"]
185 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["mTail"]
186 [-]: CALL      R6 2 2       ; R6 := R6(R7)
187 [-]: MOVE      R5 R6        ; R5 := R6
188 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
189 [-]: MOVE      R7 R5        ; R7 := R5
190 [-]: CALL      R6 2 2       ; R6 := R6(R7)
191 [-]: TEST      R6 1         ; if R6 then PC := 200
192 [-]: JMP       200          ; PC := 200
193 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
194 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
195 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Customization"]
196 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6[0xedd0b8c3]
197 [-]: MOVE      R8 R5        ; R8 := R5
198 [-]: MOVE      R9 R4        ; R9 := R4
199 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
200 [-]: FORLOOP   R1 135       ; R1 += R3; if R1 <= R2 then begin PC := 135; R4 := R1 end
201 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
202 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
203 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["EquippedItem"]
204 [-]: EQ        1 R6 K7      ; if R6 == nil then PC := 688
205 [-]: JMP       688          ; PC := 688
206 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
207 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
208 [-]: CALL      R6 2 2       ; R6 := R6(R7)
209 [-]: TEST      R6 1         ; if R6 then PC := 458
210 [-]: JMP       458          ; PC := 458
211 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
212 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
213 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Element"]
214 [-]: CALL      R6 2 2       ; R6 := R6(R7)
215 [-]: TEST      R6 1         ; if R6 then PC := 458
216 [-]: JMP       458          ; PC := 458
217 [-]: LOADNIL   R6 R6        ; R6 := nil
218 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
219 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
220 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Item"]
221 [-]: CALL      R7 2 2       ; R7 := R7(R8)
222 [-]: TEST      R7 1         ; if R7 then PC := 281
223 [-]: JMP       281          ; PC := 281
224 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
225 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
226 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Item"]
227 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["CustomizationType"]
228 [-]: CALL      R7 2 2       ; R7 := R7(R8)
229 [-]: TEST      R7 1         ; if R7 then PC := 240
230 [-]: JMP       240          ; PC := 240
231 [-]: GETGLOBAL R7 K12       ; R7 := 0xb009bbc6
232 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
233 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Item"]
234 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["CustomizationType"]
235 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0xf278f8a1]
236 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
237 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
238 [-]: MOVE      R6 R7        ; R6 := R7
239 [-]: JMP       300          ; PC := 300
240 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
241 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
242 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Item"]
243 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["Type"]
244 [-]: CALL      R7 2 2       ; R7 := R7(R8)
245 [-]: TEST      R7 1         ; if R7 then PC := 254
246 [-]: JMP       254          ; PC := 254
247 [-]: GETGLOBAL R7 K12       ; R7 := 0xb009bbc6
248 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
249 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Item"]
250 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["Type"]
251 [-]: CALL      R7 2 2       ; R7 := R7(R8)
252 [-]: MOVE      R6 R7        ; R6 := R7
253 [-]: JMP       300          ; PC := 300
254 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
255 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["Item"]
256 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["mPurchasedInfo"]
257 [-]: EQ        1 R7 K7      ; if R7 == nil then PC := 300
258 [-]: JMP       300          ; PC := 300
259 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
260 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
261 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Item"]
262 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mPurchasedInfo"]
263 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["UID"]
264 [-]: CALL      R7 2 2       ; R7 := R7(R8)
265 [-]: TEST      R7 1         ; if R7 then PC := 300
266 [-]: JMP       300          ; PC := 300
267 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
268 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["Item"]
269 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["mPurchasedInfo"]
270 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["UID"]
271 [-]: EQ        1 R7 K17     ; if R7 == "" then PC := 300
272 [-]: JMP       300          ; PC := 300
273 [-]: GETGLOBAL R7 K12       ; R7 := 0xb009bbc6
274 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
275 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["Item"]
276 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mPurchasedInfo"]
277 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["UID"]
278 [-]: CALL      R7 2 2       ; R7 := R7(R8)
279 [-]: MOVE      R6 R7        ; R6 := R7
280 [-]: JMP       300          ; PC := 300
281 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
282 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
283 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["CosmeticItem"]
284 [-]: CALL      R7 2 2       ; R7 := R7(R8)
285 [-]: TEST      R7 1         ; if R7 then PC := 300
286 [-]: JMP       300          ; PC := 300
287 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
288 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
289 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["CosmeticItem"]
290 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["Type"]
291 [-]: CALL      R7 2 2       ; R7 := R7(R8)
292 [-]: TEST      R7 1         ; if R7 then PC := 300
293 [-]: JMP       300          ; PC := 300
294 [-]: GETGLOBAL R7 K12       ; R7 := 0xb009bbc6
295 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
296 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["CosmeticItem"]
297 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["Type"]
298 [-]: CALL      R7 2 2       ; R7 := R7(R8)
299 [-]: MOVE      R6 R7        ; R6 := R7
300 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
301 [-]: MOVE      R8 R6        ; R8 := R6
302 [-]: CALL      R7 2 2       ; R7 := R7(R8)
303 [-]: TEST      R7 1         ; if R7 then PC := 458
304 [-]: JMP       458          ; PC := 458
305 [-]: SELF      R7 R6 K20    ; R8 := R6; R7 := R6[0xf2deaf69]
306 [-]: GETGLOBAL R9 K34       ; R9 := 0x9166d883
307 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
308 [-]: TEST      R7 0         ; if not R7 then PC := 458
309 [-]: JMP       458          ; PC := 458
310 [-]: LOADNIL   R7 R7        ; R7 := nil
311 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
312 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["Element"]
313 [-]: GETTABLE  R8 R8 K35    ; R8 := R8["LoadOutType"]
314 [-]: EQ        0 R8 K36     ; if R8 ~= 1.000000 then PC := 319
315 [-]: JMP       319          ; PC := 319
316 [-]: GETGLOBAL R8 K37       ; R8 := _T
317 [-]: GETTABLE  R7 R8 K38    ; R7 := R8["MenuSentinel"]
318 [-]: JMP       321          ; PC := 321
319 [-]: GETGLOBAL R8 K37       ; R8 := _T
320 [-]: GETTABLE  R7 R8 K39    ; R7 := R8["MenuSuitAvatar"]
321 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
322 [-]: MOVE      R9 R7        ; R9 := R7
323 [-]: CALL      R8 2 2       ; R8 := R8(R9)
324 [-]: TEST      R8 1         ; if R8 then PC := 458
325 [-]: JMP       458          ; PC := 458
326 [-]: LOADNIL   R8 R8        ; R8 := nil
327 [-]: GETGLOBAL R9 K1        ; R9 := mSelected
328 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["Element"]
329 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["LoadOutId"]
330 [-]: EQ        0 R9 K41     ; if R9 ~= 0.000000 then PC := 350
331 [-]: JMP       350          ; PC := 350
332 [-]: SELF      R9 R7 K42    ; R10 := R7; R9 := R7[0xde321e6f]
333 [-]: CALL      R9 2 2       ; R9 := R9(R10)
334 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0xac03381f]
335 [-]: CALL      R9 2 2       ; R9 := R9(R10)
336 [-]: TEST      R9 0         ; if not R9 then PC := 344
337 [-]: JMP       344          ; PC := 344
338 [-]: SELF      R9 R7 K42    ; R10 := R7; R9 := R7[0xde321e6f]
339 [-]: CALL      R9 2 2       ; R9 := R9(R10)
340 [-]: SELF      R9 R9 K44    ; R10 := R9; R9 := R9[0x2303a280]
341 [-]: CALL      R9 2 2       ; R9 := R9(R10)
342 [-]: MOVE      R8 R9        ; R8 := R9
343 [-]: JMP       400          ; PC := 400
344 [-]: SELF      R9 R7 K42    ; R10 := R7; R9 := R7[0xde321e6f]
345 [-]: CALL      R9 2 2       ; R9 := R9(R10)
346 [-]: SELF      R9 R9 K45    ; R10 := R9; R9 := R9[0xf7d48ee0]
347 [-]: CALL      R9 2 2       ; R9 := R9(R10)
348 [-]: MOVE      R8 R9        ; R8 := R9
349 [-]: JMP       400          ; PC := 400
350 [-]: GETGLOBAL R9 K1        ; R9 := mSelected
351 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["Element"]
352 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["LoadOutId"]
353 [-]: EQ        0 R9 K46     ; if R9 ~= 2.000000 then PC := 378
354 [-]: JMP       378          ; PC := 378
355 [-]: SELF      R9 R7 K42    ; R10 := R7; R9 := R7[0xde321e6f]
356 [-]: CALL      R9 2 2       ; R9 := R9(R10)
357 [-]: SELF      R9 R9 K47    ; R10 := R9; R9 := R9[0xe85a2361]
358 [-]: LOADK     R11 1        ; R11 := 1.000000
359 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
360 [-]: MOVE      R8 R9        ; R8 := R9
361 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
362 [-]: MOVE      R10 R8       ; R10 := R8
363 [-]: CALL      R9 2 2       ; R9 := R9(R10)
364 [-]: TEST      R9 0         ; if not R9 then PC := 400
365 [-]: JMP       400          ; PC := 400
366 [-]: GETGLOBAL R9 K1        ; R9 := mSelected
367 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["Element"]
368 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["LoadOutType"]
369 [-]: EQ        0 R9 K36     ; if R9 ~= 1.000000 then PC := 400
370 [-]: JMP       400          ; PC := 400
371 [-]: SELF      R9 R7 K42    ; R10 := R7; R9 := R7[0xde321e6f]
372 [-]: CALL      R9 2 2       ; R9 := R9(R10)
373 [-]: SELF      R9 R9 K47    ; R10 := R9; R9 := R9[0xe85a2361]
374 [-]: LOADK     R11 0        ; R11 := 0.000000
375 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
376 [-]: MOVE      R8 R9        ; R8 := R9
377 [-]: JMP       400          ; PC := 400
378 [-]: GETGLOBAL R9 K1        ; R9 := mSelected
379 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["Element"]
380 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["LoadOutId"]
381 [-]: EQ        0 R9 K36     ; if R9 ~= 1.000000 then PC := 390
382 [-]: JMP       390          ; PC := 390
383 [-]: SELF      R9 R7 K42    ; R10 := R7; R9 := R7[0xde321e6f]
384 [-]: CALL      R9 2 2       ; R9 := R9(R10)
385 [-]: SELF      R9 R9 K47    ; R10 := R9; R9 := R9[0xe85a2361]
386 [-]: LOADK     R11 0        ; R11 := 0.000000
387 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
388 [-]: MOVE      R8 R9        ; R8 := R9
389 [-]: JMP       400          ; PC := 400
390 [-]: GETGLOBAL R9 K1        ; R9 := mSelected
391 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["Element"]
392 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["LoadOutId"]
393 [-]: EQ        0 R9 K49     ; if R9 ~= 3.000000 then PC := 400
394 [-]: JMP       400          ; PC := 400
395 [-]: SELF      R9 R7 K42    ; R10 := R7; R9 := R7[0xde321e6f]
396 [-]: CALL      R9 2 2       ; R9 := R9(R10)
397 [-]: SELF      R9 R9 K50    ; R10 := R9; R9 := R9[0xbb4a3d82]
398 [-]: CALL      R9 2 2       ; R9 := R9(R10)
399 [-]: MOVE      R8 R9        ; R8 := R9
400 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
401 [-]: MOVE      R10 R8       ; R10 := R8
402 [-]: CALL      R9 2 2       ; R9 := R9(R10)
403 [-]: TEST      R9 1         ; if R9 then PC := 458
404 [-]: JMP       458          ; PC := 458
405 [-]: LOADK     R9 0         ; R9 := 0.000000
406 [-]: LOADK     R10 20       ; R10 := 20.000000
407 [-]: LOADK     R11 1        ; R11 := 1.000000
408 [-]: FORPREP   R9 457       ; R9 -= R11; PC := 457
409 [-]: SELF      R13 R6 K51   ; R14 := R6; R13 := R6[0x68eb5c84]
410 [-]: MOVE      R15 R12      ; R15 := R12
411 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
412 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
413 [-]: MOVE      R15 R13      ; R15 := R13
414 [-]: CALL      R14 2 2      ; R14 := R14(R15)
415 [-]: TEST      R14 1        ; if R14 then PC := 457
416 [-]: JMP       457          ; PC := 457
417 [-]: SELF      R14 R8 K52   ; R15 := R8; R14 := R8[0x0911ae7c]
418 [-]: MOVE      R16 R12      ; R16 := R12
419 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
420 [-]: GETGLOBAL R15 K1       ; R15 := mSelected
421 [-]: GETTABLE  R15 R15 K2   ; R15 := R15["Element"]
422 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["Customization"]
423 [-]: SELF      R15 R15 K53  ; R16 := R15; R15 := R15[0x2540510f]
424 [-]: MOVE      R17 R12      ; R17 := R12
425 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
426 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
427 [-]: MOVE      R17 R15      ; R17 := R15
428 [-]: CALL      R16 2 2      ; R16 := R16(R17)
429 [-]: TEST      R16 1        ; if R16 then PC := 433
430 [-]: JMP       433          ; PC := 433
431 [-]: EQ        0 R15 R14    ; if R15 ~= R14 then PC := 457
432 [-]: JMP       457          ; PC := 457
433 [-]: GETGLOBAL R16 K54      ; R16 := 0x89326c93
434 [-]: SELF      R16 R16 K55  ; R17 := R16; R16 := R16[0x765dad71]
435 [-]: GETGLOBAL R18 K56      ; R18 := 0x88efc25e
436 [-]: MOVE      R19 R13      ; R19 := R13
437 [-]: CALL      R18 2 2      ; R18 := R18(R19)
438 [-]: MOVE      R19 R8       ; R19 := R8
439 [-]: GETUPVAL  R20 U0       ; R20 := U0
440 [-]: CALL      R20 1 0      ; R20,... := R20()
441 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
442 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
443 [-]: MOVE      R18 R16      ; R18 := R16
444 [-]: CALL      R17 2 2      ; R17 := R17(R18)
445 [-]: TEST      R17 1        ; if R17 then PC := 457
446 [-]: JMP       457          ; PC := 457
447 [-]: SELF      R17 R16 K57  ; R18 := R16; R17 := R16[0x63af7fef]
448 [-]: MOVE      R19 R12      ; R19 := R12
449 [-]: CALL      R17 3 1      ; R17(R18,R19)
450 [-]: GETGLOBAL R17 K1       ; R17 := mSelected
451 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["Element"]
452 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["Customization"]
453 [-]: SELF      R17 R17 K9   ; R18 := R17; R17 := R17[0xedd0b8c3]
454 [-]: MOVE      R19 R16      ; R19 := R16
455 [-]: MOVE      R20 R12      ; R20 := R12
456 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
457 [-]: FORLOOP   R9 409       ; R9 += R11; if R9 <= R10 then begin PC := 409; R12 := R9 end
458 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
459 [-]: GETGLOBAL R18 K1       ; R18 := mSelected
460 [-]: GETTABLE  R18 R18 K2   ; R18 := R18["Element"]
461 [-]: GETTABLE  R18 R18 K14  ; R18 := R18["Type"]
462 [-]: CALL      R17 2 2      ; R17 := R17(R18)
463 [-]: TEST      R17 1        ; if R17 then PC := 659
464 [-]: JMP       659          ; PC := 659
465 [-]: GETGLOBAL R17 K1       ; R17 := mSelected
466 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["Element"]
467 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["LoadOutId"]
468 [-]: EQ        0 R17 K49    ; if R17 ~= 3.000000 then PC := 622
469 [-]: JMP       622          ; PC := 622
470 [-]: GETGLOBAL R17 K1       ; R17 := mSelected
471 [-]: GETTABLE  R17 R17 K3   ; R17 := R17["Cosmetic"]
472 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["Slot"]
473 [-]: EQ        0 R17 K41    ; if R17 ~= 0.000000 then PC := 622
474 [-]: JMP       622          ; PC := 622
475 [-]: LOADNIL   R17 R17      ; R17 := nil
476 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
477 [-]: GETGLOBAL R19 K1       ; R19 := mSelected
478 [-]: GETTABLE  R19 R19 K2   ; R19 := R19["Element"]
479 [-]: GETTABLE  R19 R19 K14  ; R19 := R19["Type"]
480 [-]: CALL      R18 2 2      ; R18 := R18(R19)
481 [-]: TEST      R18 1        ; if R18 then PC := 513
482 [-]: JMP       513          ; PC := 513
483 [-]: GETGLOBAL R18 K1       ; R18 := mSelected
484 [-]: GETTABLE  R18 R18 K2   ; R18 := R18["Element"]
485 [-]: GETTABLE  R18 R18 K14  ; R18 := R18["Type"]
486 [-]: SELF      R18 R18 K20  ; R19 := R18; R18 := R18[0xf2deaf69]
487 [-]: GETGLOBAL R20 K58      ; R20 := gLotusHybridWeaponType
488 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
489 [-]: TEST      R18 0        ; if not R18 then PC := 513
490 [-]: JMP       513          ; PC := 513
491 [-]: GETGLOBAL R18 K37      ; R18 := _T
492 [-]: GETTABLE  R18 R18 K39  ; R18 := R18["MenuSuitAvatar"]
493 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
494 [-]: MOVE      R20 R18      ; R20 := R18
495 [-]: CALL      R19 2 2      ; R19 := R19(R20)
496 [-]: TEST      R19 1        ; if R19 then PC := 519
497 [-]: JMP       519          ; PC := 519
498 [-]: SELF      R19 R18 K42  ; R20 := R18; R19 := R18[0xde321e6f]
499 [-]: CALL      R19 2 2      ; R19 := R19(R20)
500 [-]: SELF      R19 R19 K50  ; R20 := R19; R19 := R19[0xbb4a3d82]
501 [-]: CALL      R19 2 2      ; R19 := R19(R20)
502 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
503 [-]: MOVE      R21 R19      ; R21 := R19
504 [-]: CALL      R20 2 2      ; R20 := R20(R21)
505 [-]: TEST      R20 1        ; if R20 then PC := 519
506 [-]: JMP       519          ; PC := 519
507 [-]: GETGLOBAL R20 K12      ; R20 := 0xb009bbc6
508 [-]: SELF      R21 R19 K59  ; R22 := R19; R21 := R19[0xcde10c4a]
509 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
510 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
511 [-]: MOVE      R17 R20      ; R17 := R20
512 [-]: JMP       519          ; PC := 519
513 [-]: GETGLOBAL R20 K12      ; R20 := 0xb009bbc6
514 [-]: GETGLOBAL R21 K1       ; R21 := mSelected
515 [-]: GETTABLE  R21 R21 K2   ; R21 := R21["Element"]
516 [-]: GETTABLE  R21 R21 K14  ; R21 := R21["Type"]
517 [-]: CALL      R20 2 2      ; R20 := R20(R21)
518 [-]: MOVE      R17 R20      ; R17 := R20
519 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
520 [-]: MOVE      R21 R17      ; R21 := R17
521 [-]: CALL      R20 2 2      ; R20 := R20(R21)
522 [-]: TEST      R20 1        ; if R20 then PC := 659
523 [-]: JMP       659          ; PC := 659
524 [-]: SELF      R20 R17 K20  ; R21 := R17; R20 := R17[0xf2deaf69]
525 [-]: GETGLOBAL R22 K60      ; R22 := gLotusMeleeWeaponType
526 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
527 [-]: TEST      R20 0        ; if not R20 then PC := 659
528 [-]: JMP       659          ; PC := 659
529 [-]: LOADNIL   R20 R20      ; R20 := nil
530 [-]: GETUPVAL  R21 U1       ; R21 := U1
531 [-]: GETGLOBAL R22 K1       ; R22 := mSelected
532 [-]: GETTABLE  R22 R22 K2   ; R22 := R22["Element"]
533 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["LoadOutId"]
534 [-]: GETGLOBAL R23 K1       ; R23 := mSelected
535 [-]: GETTABLE  R23 R23 K2   ; R23 := R23["Element"]
536 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["LoadOutId"]
537 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
538 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
539 [-]: MOVE      R23 R21      ; R23 := R21
540 [-]: CALL      R22 2 2      ; R22 := R22(R23)
541 [-]: TEST      R22 1        ; if R22 then PC := 546
542 [-]: JMP       546          ; PC := 546
543 [-]: SELF      R22 R21 K61  ; R23 := R21; R22 := R21[0xde7a1002]
544 [-]: CALL      R22 2 2      ; R22 := R22(R23)
545 [-]: MOVE      R20 R22      ; R20 := R22
546 [-]: LOADNIL   R22 R22      ; R22 := nil
547 [-]: GETGLOBAL R23 K0       ; R23 := 0x7b998233
548 [-]: MOVE      R24 R0       ; R24 := R0
549 [-]: CALL      R23 2 2      ; R23 := R23(R24)
550 [-]: TEST      R23 1        ; if R23 then PC := 556
551 [-]: JMP       556          ; PC := 556
552 [-]: SELF      R23 R0 K20   ; R24 := R0; R23 := R0[0xf2deaf69]
553 [-]: GETGLOBAL R25 K21      ; R25 := gLotusSuitCustomizationType
554 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
555 [-]: JMP       558          ; PC := 558
556 [-]: LOADBOOL  R23 0 1      ; R23 := false; PC := 557
557 [-]: LOADBOOL  R23 1 0      ; R23 := true
558 [-]: TEST      R23 0        ; if not R23 then PC := 568
559 [-]: JMP       568          ; PC := 568
560 [-]: SELF      R24 R0 K62   ; R25 := R0; R24 := R0[0x33cc84eb]
561 [-]: CALL      R24 2 2      ; R24 := R24(R25)
562 [-]: TEST      R24 0        ; if not R24 then PC := 568
563 [-]: JMP       568          ; PC := 568
564 [-]: SELF      R24 R0 K63   ; R25 := R0; R24 := R0[0xa779cba7]
565 [-]: CALL      R24 2 2      ; R24 := R24(R25)
566 [-]: MOVE      R22 R24      ; R22 := R24
567 [-]: JMP       582          ; PC := 582
568 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
569 [-]: MOVE      R25 R20      ; R25 := R20
570 [-]: CALL      R24 2 2      ; R24 := R24(R25)
571 [-]: TEST      R24 1        ; if R24 then PC := 579
572 [-]: JMP       579          ; PC := 579
573 [-]: GETGLOBAL R24 K22      ; R24 := 0x6c97a788
574 [-]: GETTABLE  R24 R24 K64  ; R24 := R24[0x0958852e]
575 [-]: MOVE      R25 R20      ; R25 := R20
576 [-]: CALL      R24 2 2      ; R24 := R24(R25)
577 [-]: MOVE      R22 R24      ; R22 := R24
578 [-]: JMP       582          ; PC := 582
579 [-]: SELF      R24 R17 K63  ; R25 := R17; R24 := R17[0xa779cba7]
580 [-]: CALL      R24 2 2      ; R24 := R24(R25)
581 [-]: MOVE      R22 R24      ; R22 := R24
582 [-]: GETUPVAL  R24 U2       ; R24 := U2
583 [-]: GETGLOBAL R25 K1       ; R25 := mSelected
584 [-]: GETTABLE  R25 R25 K2   ; R25 := R25["Element"]
585 [-]: CALL      R24 2 2      ; R24 := R24(R25)
586 [-]: GETGLOBAL R25 K0       ; R25 := 0x7b998233
587 [-]: MOVE      R26 R24      ; R26 := R24
588 [-]: CALL      R25 2 2      ; R25 := R25(R26)
589 [-]: TEST      R25 1        ; if R25 then PC := 659
590 [-]: JMP       659          ; PC := 659
591 [-]: SELF      R25 R24 K65  ; R26 := R24; R25 := R24[0x6ca47e92]
592 [-]: MOVE      R27 R22      ; R27 := R22
593 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
594 [-]: TEST      R25 1        ; if R25 then PC := 659
595 [-]: JMP       659          ; PC := 659
596 [-]: LOADNIL   R25 R25      ; R25 := nil
597 [-]: TEST      R23 0        ; if not R23 then PC := 604
598 [-]: JMP       604          ; PC := 604
599 [-]: SELF      R26 R0 K51   ; R27 := R0; R26 := R0[0x68eb5c84]
600 [-]: LOADK     R28 2        ; R28 := 2.000000
601 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
602 [-]: MOVE      R25 R26      ; R25 := R26
603 [-]: JMP       609          ; PC := 609
604 [-]: GETUPVAL  R26 U3       ; R26 := U3
605 [-]: GETGLOBAL R27 K1       ; R27 := mSelected
606 [-]: GETTABLE  R27 R27 K2   ; R27 := R27["Element"]
607 [-]: CALL      R26 2 2      ; R26 := R26(R27)
608 [-]: MOVE      R25 R26      ; R25 := R26
609 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
610 [-]: MOVE      R27 R25      ; R27 := R25
611 [-]: CALL      R26 2 2      ; R26 := R26(R27)
612 [-]: TEST      R26 1        ; if R26 then PC := 659
613 [-]: JMP       659          ; PC := 659
614 [-]: GETGLOBAL R26 K1       ; R26 := mSelected
615 [-]: GETTABLE  R26 R26 K2   ; R26 := R26["Element"]
616 [-]: GETTABLE  R26 R26 K8   ; R26 := R26["Customization"]
617 [-]: SELF      R26 R26 K9   ; R27 := R26; R26 := R26[0xedd0b8c3]
618 [-]: MOVE      R28 R25      ; R28 := R25
619 [-]: LOADK     R29 2        ; R29 := 2.000000
620 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
621 [-]: JMP       659          ; PC := 659
622 [-]: GETGLOBAL R26 K1       ; R26 := mSelected
623 [-]: GETTABLE  R26 R26 K3   ; R26 := R26["Cosmetic"]
624 [-]: GETTABLE  R26 R26 K6   ; R26 := R26["Slot"]
625 [-]: EQ        0 R26 K24    ; if R26 ~= 7.000000 then PC := 659
626 [-]: JMP       659          ; PC := 659
627 [-]: GETGLOBAL R26 K1       ; R26 := mSelected
628 [-]: GETTABLE  R26 R26 K2   ; R26 := R26["Element"]
629 [-]: GETTABLE  R26 R26 K8   ; R26 := R26["Customization"]
630 [-]: SELF      R26 R26 K53  ; R27 := R26; R26 := R26[0x2540510f]
631 [-]: LOADK     R28 8        ; R28 := 8.000000
632 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
633 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
634 [-]: MOVE      R28 R26      ; R28 := R26
635 [-]: CALL      R27 2 2      ; R27 := R27(R28)
636 [-]: TEST      R27 1        ; if R27 then PC := 659
637 [-]: JMP       659          ; PC := 659
638 [-]: SELF      R27 R26 K20  ; R28 := R26; R27 := R26[0xf2deaf69]
639 [-]: GETGLOBAL R29 K66      ; R29 := 0x7ed0a956
640 [-]: LOADK     R30 K67      ; R30 := "/Lotus/Upgrades/Skins/Catbrows/Armor/CatbrowArmorEmpty"
641 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
642 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
643 [-]: TEST      R27 1        ; if R27 then PC := 652
644 [-]: JMP       652          ; PC := 652
645 [-]: SELF      R27 R26 K20  ; R28 := R26; R27 := R26[0xf2deaf69]
646 [-]: GETGLOBAL R29 K66      ; R29 := 0x7ed0a956
647 [-]: LOADK     R30 K68      ; R30 := "/Lotus/Upgrades/Skins/Kubrows/Armor/KubrowArmorEmpty"
648 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
649 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
650 [-]: TEST      R27 0        ; if not R27 then PC := 659
651 [-]: JMP       659          ; PC := 659
652 [-]: GETGLOBAL R27 K1       ; R27 := mSelected
653 [-]: GETTABLE  R27 R27 K2   ; R27 := R27["Element"]
654 [-]: GETTABLE  R27 R27 K8   ; R27 := R27["Customization"]
655 [-]: SELF      R27 R27 K9   ; R28 := R27; R27 := R27[0xedd0b8c3]
656 [-]: LOADNIL   R29 R29      ; R29 := nil
657 [-]: LOADK     R30 8        ; R30 := 8.000000
658 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
659 [-]: GETGLOBAL R27 K1       ; R27 := mSelected
660 [-]: GETTABLE  R27 R27 K2   ; R27 := R27["Element"]
661 [-]: GETTABLE  R27 R27 K27  ; R27 := R27["EquippedItem"]
662 [-]: SELF      R27 R27 K69  ; R28 := R27; R27 := R27[0xaa041663]
663 [-]: GETGLOBAL R29 K1       ; R29 := mSelected
664 [-]: GETTABLE  R29 R29 K2   ; R29 := R29["Element"]
665 [-]: GETTABLE  R29 R29 K8   ; R29 := R29["Customization"]
666 [-]: GETGLOBAL R30 K1       ; R30 := mSelected
667 [-]: GETTABLE  R30 R30 K2   ; R30 := R30["Element"]
668 [-]: GETTABLE  R30 R30 K70  ; R30 := R30["mCustSlot"]
669 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
670 [-]: GETGLOBAL R27 K71      ; R27 := mInventory
671 [-]: SELF      R27 R27 K72  ; R28 := R27; R27 := R27[0x9b051033]
672 [-]: GETGLOBAL R29 K1       ; R29 := mSelected
673 [-]: GETTABLE  R29 R29 K2   ; R29 := R29["Element"]
674 [-]: GETTABLE  R29 R29 K16  ; R29 := R29["UID"]
675 [-]: GETGLOBAL R30 K1       ; R30 := mSelected
676 [-]: GETTABLE  R30 R30 K2   ; R30 := R30["Element"]
677 [-]: GETTABLE  R30 R30 K70  ; R30 := R30["mCustSlot"]
678 [-]: GETGLOBAL R31 K1       ; R31 := mSelected
679 [-]: GETTABLE  R31 R31 K2   ; R31 := R31["Element"]
680 [-]: GETTABLE  R31 R31 K8   ; R31 := R31["Customization"]
681 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
682 [-]: GETGLOBAL R27 K73      ; R27 := mLists
683 [-]: GETTABLE  R27 R27 K74  ; R27 := R27["mLoadOutList"]
684 [-]: GETTABLE  R27 R27 K75  ; R27 := R27[0x101bab76]
685 [-]: GETGLOBAL R28 K1       ; R28 := mSelected
686 [-]: GETTABLE  R28 R28 K2   ; R28 := R28["Element"]
687 [-]: CALL      R27 2 1      ; R27(R28)
688 [-]: GETGLOBAL R27 K1       ; R27 := mSelected
689 [-]: GETTABLE  R27 R27 K2   ; R27 := R27["Element"]
690 [-]: GETTABLE  R27 R27 K8   ; R27 := R27["Customization"]
691 [-]: SELF      R27 R27 K53  ; R28 := R27; R27 := R27[0x2540510f]
692 [-]: LOADK     R29 0        ; R29 := 0.000000
693 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
694 [-]: GETGLOBAL R28 K0       ; R28 := 0x7b998233
695 [-]: MOVE      R29 R27      ; R29 := R27
696 [-]: CALL      R28 2 2      ; R28 := R28(R29)
697 [-]: TEST      R28 1        ; if R28 then PC := 748
698 [-]: JMP       748          ; PC := 748
699 [-]: GETGLOBAL R28 K0       ; R28 := 0x7b998233
700 [-]: GETUPVAL  R29 U4       ; R29 := U4
701 [-]: CALL      R28 2 2      ; R28 := R28(R29)
702 [-]: TEST      R28 1        ; if R28 then PC := 748
703 [-]: JMP       748          ; PC := 748
704 [-]: GETUPVAL  R28 U4       ; R28 := U4
705 [-]: GETTABLE  R28 R28 K40  ; R28 := R28["LoadOutId"]
706 [-]: EQ        0 R28 K41    ; if R28 ~= 0.000000 then PC := 748
707 [-]: JMP       748          ; PC := 748
708 [-]: GETUPVAL  R28 U5       ; R28 := U5
709 [-]: MOVE      R29 R27      ; R29 := R27
710 [-]: CALL      R28 2 2      ; R28 := R28(R29)
711 [-]: GETGLOBAL R29 K0       ; R29 := 0x7b998233
712 [-]: MOVE      R30 R28      ; R30 := R28
713 [-]: CALL      R29 2 2      ; R29 := R29(R30)
714 [-]: TEST      R29 1        ; if R29 then PC := 754
715 [-]: JMP       754          ; PC := 754
716 [-]: GETGLOBAL R29 K76      ; R29 := 0xae91e43b
717 [-]: SELF      R29 R29 K77  ; R30 := R29; R29 := R29[0x42b04007]
718 [-]: GETGLOBAL R31 K78      ; R31 := 0x64fb1586
719 [-]: SELF      R32 R28 K79  ; R33 := R28; R32 := R28[0xd3a9d01f]
720 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
721 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
722 [-]: LOADBOOL  R32 0 0      ; R32 := false
723 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
724 [-]: GETGLOBAL R30 K76      ; R30 := 0xae91e43b
725 [-]: SELF      R30 R30 K77  ; R31 := R30; R30 := R30[0x42b04007]
726 [-]: GETGLOBAL R32 K78      ; R32 := 0x64fb1586
727 [-]: SELF      R33 R28 K80  ; R34 := R28; R33 := R28[0x5ba460ac]
728 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
729 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
730 [-]: LOADBOOL  R33 0 0      ; R33 := false
731 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
732 [-]: LOADK     R31 K81      ; R31 := "<p><font face=\"Noto Sans\"><b>"
733 [-]: GETGLOBAL R32 K82      ; R32 := 0x7f5022cf
734 [-]: GETTABLE  R32 R32 K83  ; R32 := R32[0x3f3e4d12]
735 [-]: MOVE      R33 R29      ; R33 := R29
736 [-]: CALL      R32 2 2      ; R32 := R32(R33)
737 [-]: LOADK     R33 K84      ; R33 := "</b><br>"
738 [-]: MOVE      R34 R30      ; R34 := R30
739 [-]: LOADK     R35 K85      ; R35 := "</font></p>"
740 [-]: CONCAT    R31 R31 R35  ; R31 := R31 .. R32 .. R33 .. R34 .. R35
741 [-]: GETGLOBAL R32 K76      ; R32 := 0xae91e43b
742 [-]: SELF      R32 R32 K86  ; R33 := R32; R32 := R32[0x5f56eeab]
743 [-]: LOADK     R34 K87      ; R34 := "CosmeticDesc"
744 [-]: LOADK     R35 29       ; R35 := 29.000000
745 [-]: MOVE      R36 R31      ; R36 := R31
746 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
747 [-]: JMP       754          ; PC := 754
748 [-]: GETGLOBAL R32 K76      ; R32 := 0xae91e43b
749 [-]: SELF      R32 R32 K86  ; R33 := R32; R32 := R32[0x5f56eeab]
750 [-]: LOADK     R34 K87      ; R34 := "CosmeticDesc"
751 [-]: LOADK     R35 29       ; R35 := 29.000000
752 [-]: LOADK     R36 K17      ; R36 := ""
753 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
754 [-]: GETGLOBAL R32 K73      ; R32 := mLists
755 [-]: GETTABLE  R32 R32 K88  ; R32 := R32["mCosmeticsList"]
756 [-]: GETTABLE  R32 R32 K89  ; R32 := R32[0xb15e6aca]
757 [-]: GETGLOBAL R33 K1       ; R33 := mSelected
758 [-]: GETTABLE  R33 R33 K3   ; R33 := R33["Cosmetic"]
759 [-]: CALL      R32 2 1      ; R32(R33)
760 [-]: GETGLOBAL R32 K1       ; R32 := mSelected
761 [-]: SETTABLE  R32 K90 K7   ; R32["CosmeticPreviousValue"] := nil
762 [-]: GETUPVAL  R32 U6       ; R32 := U6
763 [-]: GETGLOBAL R33 K1       ; R33 := mSelected
764 [-]: GETTABLE  R33 R33 K3   ; R33 := R33["Cosmetic"]
765 [-]: CALL      R32 2 2      ; R32 := R32(R33)
766 [-]: TEST      R32 0        ; if not R32 then PC := 779
767 [-]: JMP       779          ; PC := 779
768 [-]: GETUPVAL  R32 U7       ; R32 := U7
769 [-]: GETTABLE  R32 R32 K91  ; R32 := R32[0xb2cd8e7b]
770 [-]: LOADBOOL  R33 0 0      ; R33 := false
771 [-]: GETGLOBAL R34 K1       ; R34 := mSelected
772 [-]: GETTABLE  R34 R34 K2   ; R34 := R34["Element"]
773 [-]: CALL      R32 3 1      ; R32(R33,R34)
774 [-]: GETUPVAL  R32 U8       ; R32 := U8
775 [-]: GETGLOBAL R33 K1       ; R33 := mSelected
776 [-]: GETTABLE  R33 R33 K2   ; R33 := R33["Element"]
777 [-]: LOADBOOL  R34 0 0      ; R34 := false
778 [-]: CALL      R32 3 1      ; R32(R33,R34)
779 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 5509
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
  4 [-]: LOADK     R4 K3        ; R4 := "ShowBlockingMessage"
  5 [-]: LOADK     R5 K4        ; R5 := "0"
  6 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 162
  8 [-]: JMP       162          ; PC := 162
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x659d451f]
 11 [-]: GETGLOBAL R3 K6        ; R3 := 0x0032441c
 12 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UISound_SweetenerTwo"]
 13 [-]: CALL      R2 2 1       ; R2(R3)
 14 [-]: GETGLOBAL R2 K8        ; R2 := mSelected
 15 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["Element"]
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[0x866fb296]
 18 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 19 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Element"]
 20 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["LoadOutType"]
 21 [-]: GETGLOBAL R5 K8        ; R5 := mSelected
 22 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["Element"]
 23 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["LoadOutId"]
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: SETTABLE  R2 K10 R3    ; R2["OwnedItems"] := R3
 26 [-]: GETGLOBAL R2 K8        ; R2 := mSelected
 27 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["Element"]
 28 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["LoadOutId"]
 29 [-]: EQ        0 R2 K15     ; if R2 ~= 4.000000 then PC := 95
 30 [-]: JMP       95           ; PC := 95
 31 [-]: GETGLOBAL R2 K16       ; R2 := mLists
 32 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mLoadOutList"]
 33 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xca30dfb6]
 34 [-]: GETGLOBAL R4 K16       ; R4 := mLists
 35 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mLoadOutList"]
 36 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["PrimarySlotId"]
 37 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 38 [-]: GETGLOBAL R3 K20       ; R3 := 0x7b998233
 39 [-]: MOVE      R4 R2        ; R4 := R2
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: TEST      R3 1         ; if R3 then PC := 64
 42 [-]: JMP       64           ; PC := 64
 43 [-]: GETUPVAL  R3 U1        ; R3 := U1
 44 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[0x866fb296]
 45 [-]: GETTABLE  R4 R2 K12    ; R4 := R2["LoadOutType"]
 46 [-]: GETTABLE  R5 R2 K13    ; R5 := R2["LoadOutId"]
 47 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 48 [-]: SETTABLE  R2 K10 R3    ; R2["OwnedItems"] := R3
 49 [-]: GETGLOBAL R3 K20       ; R3 := 0x7b998233
 50 [-]: GETTABLE  R4 R2 K21    ; R4 := R2["EquippedItem"]
 51 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 52 [-]: TEST      R3 1         ; if R3 then PC := 64
 53 [-]: JMP       64           ; PC := 64
 54 [-]: GETTABLE  R3 R2 K22    ; R3 := R2["UID"]
 55 [-]: GETUPVAL  R4 U2        ; R4 := U2
 56 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["mItemId"]
 57 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["mId"]
 58 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETTABLE  R3 R2 K21    ; R3 := R2["EquippedItem"]
 61 [-]: GETUPVAL  R4 U2        ; R4 := U2
 62 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["mItemFeatures"]
 63 [-]: SETTABLE  R3 K25 R4    ; R3["mFeatures"] := R4
 64 [-]: GETGLOBAL R3 K16       ; R3 := mLists
 65 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["mLoadOutList"]
 66 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xca30dfb6]
 67 [-]: GETUPVAL  R5 U0        ; R5 := U0
 68 [-]: GETTABLE  R5 R5 K27    ; R5 := R5[0x06d055f9]
 69 [-]: GETGLOBAL R6 K8        ; R6 := mSelected
 70 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Element"]
 71 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["LoadOutType"]
 72 [-]: EQ        1 R6 K28     ; if R6 == 8.000000 then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 75
 75 [-]: LOADBOOL  R6 1 0       ; R6 := true
 76 [-]: GETGLOBAL R7 K16       ; R7 := mLists
 77 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["mLoadOutList"]
 78 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["HeavyGunSlotId"]
 79 [-]: GETGLOBAL R8 K16       ; R8 := mLists
 80 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["mLoadOutList"]
 81 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["MechGunSlotId"]
 82 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 83 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 84 [-]: GETGLOBAL R4 K20       ; R4 := 0x7b998233
 85 [-]: MOVE      R5 R3        ; R5 := R3
 86 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 87 [-]: TEST      R4 1         ; if R4 then PC := 95
 88 [-]: JMP       95           ; PC := 95
 89 [-]: GETUPVAL  R4 U1        ; R4 := U1
 90 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x866fb296]
 91 [-]: GETTABLE  R5 R3 K12    ; R5 := R3["LoadOutType"]
 92 [-]: GETTABLE  R6 R3 K13    ; R6 := R3["LoadOutId"]
 93 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 94 [-]: SETTABLE  R3 K10 R4    ; R3["OwnedItems"] := R4
 95 [-]: GETGLOBAL R4 K20       ; R4 := 0x7b998233
 96 [-]: GETUPVAL  R5 U2        ; R5 := U2
 97 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 98 [-]: TEST      R4 1         ; if R4 then PC := 148
 99 [-]: JMP       148          ; PC := 148
100 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
101 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["Item"]
102 [-]: EQ        1 R4 K32     ; if R4 == nil then PC := 118
103 [-]: JMP       118          ; PC := 118
104 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
105 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["Item"]
106 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["RawItem"]
107 [-]: GETGLOBAL R5 K34       ; R5 := 0x25d99d89
108 [-]: SELF      R5 R5 K35    ; R6 := R5; R5 := R5[0x25a6e75e]
109 [-]: CALL      R5 2 2       ; R5 := R5(R6)
110 [-]: SELF      R5 R5 K36    ; R6 := R5; R5 := R5[0xc70965fe]
111 [-]: GETGLOBAL R7 K8        ; R7 := mSelected
112 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["Item"]
113 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["RawItem"]
114 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["UID"]
115 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
116 [-]: SETTABLE  R4 K31 R5    ; R4["Item"] := R5
117 [-]: JMP       148          ; PC := 148
118 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
119 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Element"]
120 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["UID"]
121 [-]: GETGLOBAL R5 K14       ; R5 := 0x6c97a788
122 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["InvalidItemID"]
123 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 148
124 [-]: JMP       148          ; PC := 148
125 [-]: LOADK     R4 1         ; R4 := 1.000000
126 [-]: GETGLOBAL R5 K8        ; R5 := mSelected
127 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["Element"]
128 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["OwnedItems"]
129 [-]: LEN       R5 R5        ; R5 := # R5
130 [-]: LOADK     R6 1         ; R6 := 1.000000
131 [-]: FORPREP   R4 147       ; R4 -= R6; PC := 147
132 [-]: GETGLOBAL R8 K8        ; R8 := mSelected
133 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["Element"]
134 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["OwnedItems"]
135 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
136 [-]: GETTABLE  R9 R8 K22    ; R9 := R8["UID"]
137 [-]: GETGLOBAL R10 K8       ; R10 := mSelected
138 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["Element"]
139 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["UID"]
140 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 147
141 [-]: JMP       147          ; PC := 147
142 [-]: GETGLOBAL R9 K8        ; R9 := mSelected
143 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["Element"]
144 [-]: GETTABLE  R10 R8 K31   ; R10 := R8["Item"]
145 [-]: SETTABLE  R9 K21 R10   ; R9["EquippedItem"] := R10
146 [-]: JMP       148          ; PC := 148
147 [-]: FORLOOP   R4 132       ; R4 += R6; if R4 <= R5 then begin PC := 132; R7 := R4 end
148 [-]: GETUPVAL  R9 U2        ; R9 := U2
149 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["mOperations"]
150 [-]: GETTABLE  R9 R9 K39    ; R9 := R9[1.000000]
151 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["mOperationType"]
152 [-]: EQ        0 R9 K41     ; if R9 ~= 11.000000 then PC := 157
153 [-]: JMP       157          ; PC := 157
154 [-]: GETUPVAL  R10 U1       ; R10 := U1
155 [-]: GETTABLE  R10 R10 K42  ; R10 := R10[0x7d70c833]
156 [-]: CALL      R10 1 1      ; R10()
157 [-]: LOADNIL   R10 R10      ; R10 := nil
158 [-]: SETUPVAL  R10 U2       ; U82 := R2
159 [-]: GETUPVAL  R10 U3       ; R10 := U3
160 [-]: CALL      R10 1 1      ; R10()
161 [-]: JMP       168          ; PC := 168
162 [-]: GETUPVAL  R10 U0       ; R10 := U0
163 [-]: GETTABLE  R10 R10 K43  ; R10 := R10[0xe0cba3ca]
164 [-]: LOADK     R11 K44      ; R11 := "/Lotus/Language/Menu/Loadout_ApplyFailed"
165 [-]: CALL      R10 2 1      ; R10(R11)
166 [-]: LOADNIL   R10 R10      ; R10 := nil
167 [-]: SETUPVAL  R10 U2       ; U82 := R2
168 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 5562
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0x25d99d89
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 28
 10 [-]: JMP       28           ; PC := 28
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 28
 15 [-]: JMP       28           ; PC := 28
 16 [-]: GETGLOBAL R1 K4        ; R1 := 0x25d99d89
 17 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xa7d9c1da]
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: LOADK     R4 K6        ; R4 := "OnUpgradeApplied"
 20 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 21 [-]: GETGLOBAL R1 K7        ; R1 := _T
 22 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["BackgroundMovie"]
 23 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xe4162eed]
 24 [-]: LOADK     R3 K10       ; R3 := "ShowBlockingMessage"
 25 [-]: LOADK     R4 K11       ; R4 := "2"
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADNIL   R1 R1        ; R1 := nil
 29 [-]: SETUPVAL  R1 U0        ; U82 := R0
 30 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 5572
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "true" then PC := 21
  2 [-]: JMP       21           ; PC := 21
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 27
  7 [-]: JMP       27           ; PC := 27
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mOperations"]
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: LE        0 K3 R1      ; if 1.000000 > R1 then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xe4162eed]
 15 [-]: LOADK     R3 K6        ; R3 := "OnConfirmUnlockFeature"
 16 [-]: GETGLOBAL R4 K7        ; R4 := 0x64fb1586
 17 [-]: LOADK     R5 4         ; R5 := 4.000000
 18 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 19 [-]: CALL      R1 0 1       ; R1(R2,...)
 20 [-]: JMP       27           ; PC := 27
 21 [-]: EQ        0 R0 K9      ; if R0 ~= "false" then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0xe0cba3ca]
 25 [-]: LOADK     R2 K11       ; R2 := "/Lotus/Language/Menu/Global_PurchaseFailed"
 26 [-]: CALL      R1 2 1       ; R1(R2)
 27 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 5582
; #Upvalues:       35
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  67

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: TEST      R2 1         ; if R2 then PC := 1409
 10 [-]: JMP       1409         ; PC := 1409
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 12 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 13 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Item"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 1409
 16 [-]: JMP       1409         ; PC := 1409
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["EquipmentChangesBlocked"]
 19 [-]: TEST      R2 1         ; if R2 then PC := 1409
 20 [-]: JMP       1409         ; PC := 1409
 21 [-]: LOADBOOL  R2 0 0       ; R2 := false
 22 [-]: LOADBOOL  R3 0 0       ; R3 := false
 23 [-]: GETGLOBAL R4 K5        ; R4 := _T
 24 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["LoadoutSaveRequired"]
 25 [-]: GETGLOBAL R5 K5        ; R5 := _T
 26 [-]: SETTABLE  R5 K6 K7     ; R5["LoadoutSaveRequired"] := true
 27 [-]: GETUPVAL  R5 U2        ; R5 := U2
 28 [-]: GETUPVAL  R6 U3        ; R6 := U3
 29 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["SWAPPING_ITEM"]
 30 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 762
 31 [-]: JMP       762          ; PC := 762
 32 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 33 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
 34 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Element"]
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: TEST      R5 1         ; if R5 then PC := 762
 37 [-]: JMP       762          ; PC := 762
 38 [-]: GETGLOBAL R5 K10       ; R5 := 0x6c97a788
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["InvalidItemID"]
 40 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
 41 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Item"]
 42 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["mPurchasedInfo"]
 43 [-]: EQ        1 R6 K13     ; if R6 == nil then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
 46 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Item"]
 47 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["mPurchasedInfo"]
 48 [-]: GETTABLE  R5 R6 K14    ; R5 := R6["UID"]
 49 [-]: GETGLOBAL R6 K1        ; R6 := 0x25d99d89
 50 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0xf84d3744]
 51 [-]: MOVE      R8 R5        ; R8 := R5
 52 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 53 [-]: TEST      R6 0         ; if not R6 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R6 K5        ; R6 := _T
 56 [-]: SETTABLE  R6 K6 R4     ; R6["LoadoutSaveRequired"] := R4
 57 [-]: LOADBOOL  R6 1 0       ; R6 := true
 58 [-]: SETUPVAL  R6 U4        ; U82 := R4
 59 [-]: RETURN    R0 1         ; return 
 60 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
 61 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Item"]
 62 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mFirstOption"]
 63 [-]: TEST      R6 0         ; if not R6 then PC := 113
 64 [-]: JMP       113          ; PC := 113
 65 [-]: GETGLOBAL R6 K17       ; R6 := 0x34291f5c
 66 [-]: GETTABLE  R6 R6 K18    ; R6 := R6[0xe27b35bb]
 67 [-]: CALL      R6 1 2       ; R6 := R6()
 68 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
 69 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
 70 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mSecondOption"]
 71 [-]: TEST      R7 0         ; if not R7 then PC := 93
 72 [-]: JMP       93           ; PC := 93
 73 [-]: SETTABLE  R6 K20 K21   ; R6["dialogType"] := 5.000000
 74 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
 75 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
 76 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["mOptionDesc"]
 77 [-]: SETTABLE  R6 K22 R7    ; R6["locString"] := R7
 78 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
 79 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
 80 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mFirstOption"]
 81 [-]: SETTABLE  R6 K24 R7    ; R6["firstString"] := R7
 82 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
 83 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
 84 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mSecondOption"]
 85 [-]: SETTABLE  R6 K25 R7    ; R6["secondString"] := R7
 86 [-]: SETTABLE  R6 K26 K27   ; R6["thirdString"] := "/Menu/Confirm_Item_Cancel"
 87 [-]: SELF      R7 R6 K28    ; R8 := R6; R7 := R6[0xe6ccc5b9]
 88 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
 89 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Item"]
 90 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["mCallback"]
 91 [-]: CALL      R7 3 1       ; R7(R8,R9)
 92 [-]: JMP       108          ; PC := 108
 93 [-]: SETTABLE  R6 K20 K30   ; R6["dialogType"] := 1.000000
 94 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
 95 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
 96 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["mOptionDesc"]
 97 [-]: SETTABLE  R6 K22 R7    ; R6["locString"] := R7
 98 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
 99 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
100 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mFirstOption"]
101 [-]: SETTABLE  R6 K24 R7    ; R6["firstString"] := R7
102 [-]: SETTABLE  R6 K25 K27   ; R6["secondString"] := "/Menu/Confirm_Item_Cancel"
103 [-]: SELF      R7 R6 K28    ; R8 := R6; R7 := R6[0xe6ccc5b9]
104 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
105 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Item"]
106 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["mCallback"]
107 [-]: CALL      R7 3 1       ; R7(R8,R9)
108 [-]: GETUPVAL  R7 U5        ; R7 := U5
109 [-]: GETTABLE  R7 R7 K31    ; R7 := R7[0xe99b84e7]
110 [-]: MOVE      R8 R6        ; R8 := R6
111 [-]: CALL      R7 2 1       ; R7(R8)
112 [-]: RETURN    R0 1         ; return 
113 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
114 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
115 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["mLockDetail"]
116 [-]: TEST      R7 0         ; if not R7 then PC := 136
117 [-]: JMP       136          ; PC := 136
118 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
119 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Item"]
120 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["mUnlockCallback"]
121 [-]: TEST      R7 0         ; if not R7 then PC := 129
122 [-]: JMP       129          ; PC := 129
123 [-]: GETGLOBAL R7 K34       ; R7 := 0xae91e43b
124 [-]: SELF      R7 R7 K35    ; R8 := R7; R7 := R7[0xe4162eed]
125 [-]: LOADK     R9 K36       ; R9 := "ShowItemUnlockDialog"
126 [-]: LOADK     R10 K37      ; R10 := ""
127 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
128 [-]: JMP       135          ; PC := 135
129 [-]: GETUPVAL  R7 U5        ; R7 := U5
130 [-]: GETTABLE  R7 R7 K38    ; R7 := R7[0xe0cba3ca]
131 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
132 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Item"]
133 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mLockDetail"]
134 [-]: CALL      R7 2 1       ; R7(R8)
135 [-]: RETURN    R0 1         ; return 
136 [-]: GETUPVAL  R7 U6        ; R7 := U6
137 [-]: GETTABLE  R7 R7 K39    ; R7 := R7["LoadOutType"]
138 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
139 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Item"]
140 [-]: GETTABLE  R8 R8 K40    ; R8 := R8["LoadOutId"]
141 [-]: EQ        0 R8 K41     ; if R8 ~= 4.000000 then PC := 252
142 [-]: JMP       252          ; PC := 252
143 [-]: EQ        1 R7 K42     ; if R7 == 8.000000 then PC := 252
144 [-]: JMP       252          ; PC := 252
145 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
146 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Item"]
147 [-]: GETTABLE  R8 R8 K43    ; R8 := R8["RawItem"]
148 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Item"]
149 [-]: SELF      R8 R8 K44    ; R9 := R8; R8 := R8[0xdbfbf6c0]
150 [-]: LOADK     R10 2        ; R10 := 2.000000
151 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
152 [-]: TEST      R8 1         ; if R8 then PC := 252
153 [-]: JMP       252          ; PC := 252
154 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
155 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Item"]
156 [-]: GETTABLE  R8 R8 K43    ; R8 := R8["RawItem"]
157 [-]: GETUPVAL  R9 U5        ; R9 := U5
158 [-]: GETTABLE  R9 R9 K45    ; R9 := R9[0x06d055f9]
159 [-]: GETGLOBAL R10 K5       ; R10 := _T
160 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["mMechaSuitMode"]
161 [-]: GETGLOBAL R11 K5       ; R11 := _T
162 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["MechAvatar"]
163 [-]: GETGLOBAL R12 K5       ; R12 := _T
164 [-]: GETTABLE  R12 R12 K48  ; R12 := R12["MenuSuitAvatar"]
165 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
166 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
167 [-]: MOVE      R11 R8       ; R11 := R8
168 [-]: CALL      R10 2 2      ; R10 := R10(R11)
169 [-]: TEST      R10 1        ; if R10 then PC := 186
170 [-]: JMP       186          ; PC := 186
171 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
172 [-]: GETTABLE  R11 R8 K3    ; R11 := R8["Item"]
173 [-]: CALL      R10 2 2      ; R10 := R10(R11)
174 [-]: TEST      R10 1        ; if R10 then PC := 186
175 [-]: JMP       186          ; PC := 186
176 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
177 [-]: GETGLOBAL R11 K1       ; R11 := 0x25d99d89
178 [-]: CALL      R10 2 2      ; R10 := R10(R11)
179 [-]: TEST      R10 1        ; if R10 then PC := 186
180 [-]: JMP       186          ; PC := 186
181 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
182 [-]: MOVE      R11 R9       ; R11 := R9
183 [-]: CALL      R10 2 2      ; R10 := R10(R11)
184 [-]: TEST      R10 0        ; if not R10 then PC := 194
185 [-]: JMP       194          ; PC := 194
186 [-]: GETUPVAL  R10 U5       ; R10 := U5
187 [-]: GETTABLE  R10 R10 K38  ; R10 := R10[0xe0cba3ca]
188 [-]: LOADK     R11 K49      ; R11 := "/Lotus/Language/Menu/Loadout_ApplyFailed"
189 [-]: CALL      R10 2 1      ; R10(R11)
190 [-]: GETGLOBAL R10 K50      ; R10 := 0x3d106989
191 [-]: LOADK     R11 K51      ; R11 := "Failed to upgrade item, missing owned item."
192 [-]: CALL      R10 2 1      ; R10(R11)
193 [-]: RETURN    R0 1         ; return 
194 [-]: SELF      R10 R9 K52   ; R11 := R9; R10 := R9[0xde321e6f]
195 [-]: CALL      R10 2 2      ; R10 := R10(R11)
196 [-]: SELF      R10 R10 K53  ; R11 := R10; R10 := R10[0xe85a2361]
197 [-]: LOADK     R12 10       ; R12 := 10.000000
198 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
199 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
200 [-]: MOVE      R12 R10      ; R12 := R10
201 [-]: CALL      R11 2 2      ; R11 := R11(R12)
202 [-]: TEST      R11 0        ; if not R11 then PC := 205
203 [-]: JMP       205          ; PC := 205
204 [-]: RETURN    R0 1         ; return 
205 [-]: GETTABLE  R11 R8 K3    ; R11 := R8["Item"]
206 [-]: SELF      R11 R11 K44  ; R12 := R11; R11 := R11[0xdbfbf6c0]
207 [-]: LOADK     R13 0        ; R13 := 0.000000
208 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
209 [-]: TEST      R11 0        ; if not R11 then PC := 220
210 [-]: JMP       220          ; PC := 220
211 [-]: GETUPVAL  R11 U8       ; R11 := U8
212 [-]: GETTABLE  R11 R11 K54  ; R11 := R11[0xc5e71a15]
213 [-]: GETTABLE  R12 R8 K3    ; R12 := R8["Item"]
214 [-]: MOVE      R13 R10      ; R13 := R10
215 [-]: LOADK     R14 2        ; R14 := 2.000000
216 [-]: LOADK     R15 28       ; R15 := 28.000000
217 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
218 [-]: SETUPVAL  R11 U7       ; U82 := R7
219 [-]: JMP       228          ; PC := 228
220 [-]: GETUPVAL  R11 U8       ; R11 := U8
221 [-]: GETTABLE  R11 R11 K54  ; R11 := R11[0xc5e71a15]
222 [-]: GETTABLE  R12 R8 K3    ; R12 := R8["Item"]
223 [-]: MOVE      R13 R10      ; R13 := R10
224 [-]: LOADK     R14 0        ; R14 := 0.000000
225 [-]: LOADK     R15 28       ; R15 := 28.000000
226 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
227 [-]: SETUPVAL  R11 U7       ; U82 := R7
228 [-]: GETUPVAL  R11 U8       ; R11 := U8
229 [-]: GETTABLE  R11 R11 K55  ; R11 := R11[0x60c655fc]
230 [-]: GETUPVAL  R12 U7       ; R12 := U7
231 [-]: LOADK     R13 K56      ; R13 := "OnConfirmUnlockFeature"
232 [-]: GETGLOBAL R14 K34      ; R14 := 0xae91e43b
233 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
234 [-]: EQ        0 R11 K57    ; if R11 ~= false then PC := 247
235 [-]: JMP       247          ; PC := 247
236 [-]: GETUPVAL  R12 U8       ; R12 := U8
237 [-]: GETTABLE  R12 R12 K58  ; R12 := R12[0xa3064de9]
238 [-]: GETUPVAL  R13 U7       ; R13 := U7
239 [-]: LOADK     R14 K59      ; R14 := "OnBuyFeatureItem"
240 [-]: GETGLOBAL R15 K34      ; R15 := 0xae91e43b
241 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
242 [-]: TEST      R12 1        ; if R12 then PC := 251
243 [-]: JMP       251          ; PC := 251
244 [-]: LOADNIL   R12 R12      ; R12 := nil
245 [-]: SETUPVAL  R12 U7       ; U82 := R7
246 [-]: JMP       251          ; PC := 251
247 [-]: EQ        0 R11 K13    ; if R11 ~= nil then PC := 251
248 [-]: JMP       251          ; PC := 251
249 [-]: LOADNIL   R12 R12      ; R12 := nil
250 [-]: SETUPVAL  R12 U7       ; U82 := R7
251 [-]: RETURN    R0 1         ; return 
252 [-]: GETGLOBAL R12 K2       ; R12 := mSelected
253 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Element"]
254 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["UID"]
255 [-]: EQ        1 R12 R5     ; if R12 == R5 then PC := 263
256 [-]: JMP       263          ; PC := 263
257 [-]: GETGLOBAL R12 K2       ; R12 := mSelected
258 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Element"]
259 [-]: SETTABLE  R12 K60 K61  ; R12["mModSlot"] := 0.000000
260 [-]: GETGLOBAL R12 K2       ; R12 := mSelected
261 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Element"]
262 [-]: SETTABLE  R12 K62 K61  ; R12["mCustSlot"] := 0.000000
263 [-]: GETGLOBAL R12 K2       ; R12 := mSelected
264 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Element"]
265 [-]: SETTABLE  R12 K14 R5   ; R12["UID"] := R5
266 [-]: GETGLOBAL R12 K63      ; R12 := mCurrentLoadout
267 [-]: GETGLOBAL R13 K2       ; R13 := mSelected
268 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Element"]
269 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["LoadOutType"]
270 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
271 [-]: SELF      R12 R12 K64  ; R13 := R12; R12 := R12[0x2abbe722]
272 [-]: GETGLOBAL R14 K2       ; R14 := mSelected
273 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["Element"]
274 [-]: GETTABLE  R14 R14 K40  ; R14 := R14["LoadOutId"]
275 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
276 [-]: GETTABLE  R13 R12 K65  ; R13 := R12["mItemId"]
277 [-]: GETGLOBAL R14 K2       ; R14 := mSelected
278 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["Element"]
279 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["UID"]
280 [-]: SETTABLE  R13 K66 R14  ; R13["mId"] := R14
281 [-]: GETGLOBAL R13 K2       ; R13 := mSelected
282 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Element"]
283 [-]: GETTABLE  R13 R13 K60  ; R13 := R13["mModSlot"]
284 [-]: SETTABLE  R12 K60 R13  ; R12["mModSlot"] := R13
285 [-]: GETGLOBAL R13 K2       ; R13 := mSelected
286 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Element"]
287 [-]: GETTABLE  R13 R13 K62  ; R13 := R13["mCustSlot"]
288 [-]: SETTABLE  R12 K62 R13  ; R12["mCustSlot"] := R13
289 [-]: GETGLOBAL R13 K63      ; R13 := mCurrentLoadout
290 [-]: GETGLOBAL R14 K2       ; R14 := mSelected
291 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["Element"]
292 [-]: GETTABLE  R14 R14 K39  ; R14 := R14["LoadOutType"]
293 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
294 [-]: SELF      R13 R13 K67  ; R14 := R13; R13 := R13[0xffca321e]
295 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
296 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["Element"]
297 [-]: GETTABLE  R15 R15 K40  ; R15 := R15["LoadOutId"]
298 [-]: MOVE      R16 R12      ; R16 := R12
299 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
300 [-]: GETGLOBAL R13 K68      ; R13 := mInventory
301 [-]: SELF      R13 R13 K69  ; R14 := R13; R13 := R13[0x6beb8ae1]
302 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
303 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["Element"]
304 [-]: GETTABLE  R15 R15 K39  ; R15 := R15["LoadOutType"]
305 [-]: GETGLOBAL R16 K63      ; R16 := mCurrentLoadout
306 [-]: GETGLOBAL R17 K2       ; R17 := mSelected
307 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["Element"]
308 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["LoadOutType"]
309 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
310 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
311 [-]: GETGLOBAL R13 K1       ; R13 := 0x25d99d89
312 [-]: SELF      R13 R13 K70  ; R14 := R13; R13 := R13[0x400b84a1]
313 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
314 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["Element"]
315 [-]: GETTABLE  R15 R15 K39  ; R15 := R15["LoadOutType"]
316 [-]: GETGLOBAL R16 K63      ; R16 := mCurrentLoadout
317 [-]: GETGLOBAL R17 K2       ; R17 := mSelected
318 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["Element"]
319 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["LoadOutType"]
320 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
321 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
322 [-]: LOADBOOL  R3 1 0       ; R3 := true
323 [-]: GETUPVAL  R13 U9       ; R13 := U9
324 [-]: GETGLOBAL R14 K2       ; R14 := mSelected
325 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["Element"]
326 [-]: CALL      R13 2 1      ; R13(R14)
327 [-]: LOADBOOL  R13 1 0      ; R13 := true
328 [-]: SETGLOBAL R13 K71      ; mInputBlocked := R13
329 [-]: GETGLOBAL R13 K72      ; R13 := mLists
330 [-]: GETTABLE  R13 R13 K73  ; R13 := R13["mLoadOutList"]
331 [-]: SELF      R13 R13 K74  ; R14 := R13; R13 := R13[0xea061e98]
332 [-]: GETGLOBAL R15 K72      ; R15 := mLists
333 [-]: GETTABLE  R15 R15 K73  ; R15 := R15["mLoadOutList"]
334 [-]: GETTABLE  R15 R15 K75  ; R15 := R15["mElementDrawCallback"]
335 [-]: CALL      R13 3 1      ; R13(R14,R15)
336 [-]: GETUPVAL  R13 U10      ; R13 := U10
337 [-]: GETUPVAL  R14 U3       ; R14 := U3
338 [-]: GETTABLE  R14 R14 K76  ; R14 := R14["SELECTING_PART"]
339 [-]: CALL      R13 2 1      ; R13(R14)
340 [-]: GETGLOBAL R13 K72      ; R13 := mLists
341 [-]: GETTABLE  R13 R13 K73  ; R13 := R13["mLoadOutList"]
342 [-]: GETTABLE  R13 R13 K77  ; R13 := R13[0xad85f085]
343 [-]: GETGLOBAL R14 K2       ; R14 := mSelected
344 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["Element"]
345 [-]: CALL      R13 2 1      ; R13(R14)
346 [-]: LOADBOOL  R2 1 0       ; R2 := true
347 [-]: GETUPVAL  R13 U11      ; R13 := U11
348 [-]: LOADBOOL  R14 0 0      ; R14 := false
349 [-]: CALL      R13 2 1      ; R13(R14)
350 [-]: GETGLOBAL R13 K2       ; R13 := mSelected
351 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Element"]
352 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["LoadOutType"]
353 [-]: EQ        0 R13 K30    ; if R13 ~= 1.000000 then PC := 362
354 [-]: JMP       362          ; PC := 362
355 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
356 [-]: GETGLOBAL R14 K78      ; R14 := mSentinelType
357 [-]: CALL      R13 2 2      ; R13 := R13(R14)
358 [-]: TEST      R13 1        ; if R13 then PC := 362
359 [-]: JMP       362          ; PC := 362
360 [-]: GETGLOBAL R13 K5       ; R13 := _T
361 [-]: SETTABLE  R13 K79 K7   ; R13["mSentinelMode"] := true
362 [-]: GETGLOBAL R13 K2       ; R13 := mSelected
363 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Element"]
364 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["LoadOutType"]
365 [-]: EQ        0 R13 K30    ; if R13 ~= 1.000000 then PC := 571
366 [-]: JMP       571          ; PC := 571
367 [-]: GETGLOBAL R13 K2       ; R13 := mSelected
368 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Element"]
369 [-]: GETTABLE  R13 R13 K40  ; R13 := R13["LoadOutId"]
370 [-]: EQ        0 R13 K61    ; if R13 ~= 0.000000 then PC := 571
371 [-]: JMP       571          ; PC := 571
372 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
373 [-]: GETGLOBAL R14 K78      ; R14 := mSentinelType
374 [-]: CALL      R13 2 2      ; R13 := R13(R14)
375 [-]: TEST      R13 1        ; if R13 then PC := 571
376 [-]: JMP       571          ; PC := 571
377 [-]: GETGLOBAL R13 K78      ; R13 := mSentinelType
378 [-]: SELF      R13 R13 K80  ; R14 := R13; R13 := R13[0xf2deaf69]
379 [-]: GETGLOBAL R15 K81      ; R15 := gPetPowerSuitType
380 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
381 [-]: TEST      R13 0        ; if not R13 then PC := 432
382 [-]: JMP       432          ; PC := 432
383 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
384 [-]: GETUPVAL  R14 U12      ; R14 := U12
385 [-]: CALL      R13 2 2      ; R13 := R13(R14)
386 [-]: TEST      R13 1        ; if R13 then PC := 393
387 [-]: JMP       393          ; PC := 393
388 [-]: GETUPVAL  R13 U12      ; R13 := U12
389 [-]: GETTABLE  R13 R13 K65  ; R13 := R13["mItemId"]
390 [-]: GETTABLE  R13 R13 K66  ; R13 := R13["mId"]
391 [-]: EQ        1 R5 R13     ; if R5 == R13 then PC := 1229
392 [-]: JMP       1229         ; PC := 1229
393 [-]: GETUPVAL  R13 U13      ; R13 := U13
394 [-]: GETUPVAL  R14 U14      ; R14 := U14
395 [-]: GETTABLE  R14 R14 K82  ; R14 := R14["UI_MODE_IN_SPACE_SHIP"]
396 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 426
397 [-]: JMP       426          ; PC := 426
398 [-]: GETGLOBAL R13 K68      ; R13 := mInventory
399 [-]: SELF      R13 R13 K83  ; R14 := R13; R13 := R13[0xa855881a]
400 [-]: CALL      R13 2 2      ; R13 := R13(R14)
401 [-]: LOADK     R14 1        ; R14 := 1.000000
402 [-]: LEN       R15 R13      ; R15 := # R13
403 [-]: LOADK     R16 1        ; R16 := 1.000000
404 [-]: FORPREP   R14 417      ; R14 -= R16; PC := 417
405 [-]: GETTABLE  R18 R13 R17  ; R18 := R13[R17]
406 [-]: GETTABLE  R18 R18 K65  ; R18 := R18["mItemId"]
407 [-]: GETTABLE  R18 R18 K66  ; R18 := R18["mId"]
408 [-]: EQ        0 R5 R18     ; if R5 ~= R18 then PC := 417
409 [-]: JMP       417          ; PC := 417
410 [-]: GETUPVAL  R18 U15      ; R18 := U15
411 [-]: GETTABLE  R19 R13 R17  ; R19 := R13[R17]
412 [-]: GETGLOBAL R20 K2       ; R20 := mSelected
413 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["Element"]
414 [-]: GETTABLE  R20 R20 K84  ; R20 := R20["Type"]
415 [-]: CALL      R18 3 1      ; R18(R19,R20)
416 [-]: JMP       418          ; PC := 418
417 [-]: FORLOOP   R14 405      ; R14 += R16; if R14 <= R15 then begin PC := 405; R17 := R14 end
418 [-]: GETGLOBAL R18 K85      ; R18 := 0xbe190284
419 [-]: SELF      R18 R18 K86  ; R19 := R18; R18 := R18[0x7cf8123f]
420 [-]: LOADK     R20 1        ; R20 := 1.000000
421 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
422 [-]: GETUPVAL  R19 U16      ; R19 := U16
423 [-]: GETTABLE  R19 R19 K87  ; R19 := R19[0x705e38df]
424 [-]: MOVE      R20 R18      ; R20 := R18
425 [-]: CALL      R19 2 1      ; R19(R20)
426 [-]: GETGLOBAL R19 K1       ; R19 := 0x25d99d89
427 [-]: SELF      R19 R19 K88  ; R20 := R19; R19 := R19[0xd03a1fb0]
428 [-]: MOVE      R21 R5       ; R21 := R5
429 [-]: LOADK     R22 K89      ; R22 := "OnRetrievePetFromStasisResults"
430 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
431 [-]: JMP       1229         ; PC := 1229
432 [-]: GETGLOBAL R19 K63      ; R19 := mCurrentLoadout
433 [-]: GETTABLE  R19 R19 K30  ; R19 := R19[1.000000]
434 [-]: SELF      R19 R19 K64  ; R20 := R19; R19 := R19[0x2abbe722]
435 [-]: LOADK     R21 2        ; R21 := 2.000000
436 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
437 [-]: MOVE      R12 R19      ; R12 := R19
438 [-]: GETGLOBAL R19 K78      ; R19 := mSentinelType
439 [-]: SELF      R19 R19 K80  ; R20 := R19; R19 := R19[0xf2deaf69]
440 [-]: GETGLOBAL R21 K90      ; R21 := 0x70b83a36
441 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
442 [-]: TEST      R19 0        ; if not R19 then PC := 469
443 [-]: JMP       469          ; PC := 469
444 [-]: GETUPVAL  R19 U13      ; R19 := U13
445 [-]: GETUPVAL  R20 U14      ; R20 := U14
446 [-]: GETTABLE  R20 R20 K82  ; R20 := R20["UI_MODE_IN_SPACE_SHIP"]
447 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 469
448 [-]: JMP       469          ; PC := 469
449 [-]: GETGLOBAL R19 K68      ; R19 := mInventory
450 [-]: SELF      R19 R19 K91  ; R20 := R19; R19 := R19[0x91a3eddf]
451 [-]: CALL      R19 2 2      ; R19 := R19(R20)
452 [-]: LOADK     R20 1        ; R20 := 1.000000
453 [-]: LEN       R21 R19      ; R21 := # R19
454 [-]: LOADK     R22 1        ; R22 := 1.000000
455 [-]: FORPREP   R20 468      ; R20 -= R22; PC := 468
456 [-]: GETTABLE  R24 R19 R23  ; R24 := R19[R23]
457 [-]: GETTABLE  R24 R24 K65  ; R24 := R24["mItemId"]
458 [-]: GETTABLE  R24 R24 K66  ; R24 := R24["mId"]
459 [-]: EQ        0 R5 R24     ; if R5 ~= R24 then PC := 468
460 [-]: JMP       468          ; PC := 468
461 [-]: GETUPVAL  R24 U17      ; R24 := U17
462 [-]: GETTABLE  R25 R19 R23  ; R25 := R19[R23]
463 [-]: GETGLOBAL R26 K2       ; R26 := mSelected
464 [-]: GETTABLE  R26 R26 K9   ; R26 := R26["Element"]
465 [-]: GETTABLE  R26 R26 K84  ; R26 := R26["Type"]
466 [-]: CALL      R24 3 1      ; R24(R25,R26)
467 [-]: JMP       469          ; PC := 469
468 [-]: FORLOOP   R20 456      ; R20 += R22; if R20 <= R21 then begin PC := 456; R23 := R20 end
469 [-]: GETGLOBAL R24 K92      ; R24 := 0xb009bbc6
470 [-]: GETGLOBAL R25 K78      ; R25 := mSentinelType
471 [-]: CALL      R24 2 2      ; R24 := R24(R25)
472 [-]: GETGLOBAL R25 K72      ; R25 := mLists
473 [-]: GETTABLE  R25 R25 K73  ; R25 := R25["mLoadOutList"]
474 [-]: SELF      R25 R25 K93  ; R26 := R25; R25 := R25[0xca30dfb6]
475 [-]: GETGLOBAL R27 K2       ; R27 := mSelected
476 [-]: GETTABLE  R27 R27 K9   ; R27 := R27["Element"]
477 [-]: GETTABLE  R27 R27 K94  ; R27 := R27["Id"]
478 [-]: ADD       R27 R27 K30  ; R27 := R27 + 1.000000
479 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
480 [-]: GETGLOBAL R26 K68      ; R26 := mInventory
481 [-]: SELF      R26 R26 K95  ; R27 := R26; R26 := R26[0xa2c6d8b7]
482 [-]: CALL      R26 2 2      ; R26 := R26(R27)
483 [-]: GETTABLE  R27 R12 K65  ; R27 := R12["mItemId"]
484 [-]: GETTABLE  R27 R27 K66  ; R27 := R27["mId"]
485 [-]: GETTABLE  R28 R25 K14  ; R28 := R25["UID"]
486 [-]: EQ        1 R27 R28    ; if R27 == R28 then PC := 489
487 [-]: JMP       489          ; PC := 489
488 [-]: LOADBOOL  R27 0 1      ; R27 := false; PC := 489
489 [-]: LOADBOOL  R27 1 0      ; R27 := true
490 [-]: LOADNIL   R28 R28      ; R28 := nil
491 [-]: GETGLOBAL R29 K96      ; R29 := 0xc8802016
492 [-]: MOVE      R30 R26      ; R30 := R26
493 [-]: CALL      R29 2 4      ; R29,R30,R31 := R29(R30)
494 [-]: JMP       525          ; PC := 525
495 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
496 [-]: MOVE      R35 R33      ; R35 := R33
497 [-]: CALL      R34 2 2      ; R34 := R34(R35)
498 [-]: TEST      R34 1        ; if R34 then PC := 525
499 [-]: JMP       525          ; PC := 525
500 [-]: EQ        0 R28 K13    ; if R28 ~= nil then PC := 508
501 [-]: JMP       508          ; PC := 508
502 [-]: SELF      R34 R24 K97  ; R35 := R24; R34 := R24[0x24b8c21f]
503 [-]: GETTABLE  R36 R33 K98  ; R36 := R33["mItemType"]
504 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
505 [-]: TEST      R34 0        ; if not R34 then PC := 508
506 [-]: JMP       508          ; PC := 508
507 [-]: MOVE      R28 R33      ; R28 := R33
508 [-]: GETTABLE  R34 R33 K65  ; R34 := R33["mItemId"]
509 [-]: GETTABLE  R34 R34 K66  ; R34 := R34["mId"]
510 [-]: GETTABLE  R35 R12 K65  ; R35 := R12["mItemId"]
511 [-]: GETTABLE  R35 R35 K66  ; R35 := R35["mId"]
512 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 520
513 [-]: JMP       520          ; PC := 520
514 [-]: SELF      R34 R24 K97  ; R35 := R24; R34 := R24[0x24b8c21f]
515 [-]: GETTABLE  R36 R33 K98  ; R36 := R33["mItemType"]
516 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
517 [-]: TEST      R34 1        ; if R34 then PC := 520
518 [-]: JMP       520          ; PC := 520
519 [-]: LOADBOOL  R27 0 0      ; R27 := false
520 [-]: TEST      R27 1        ; if R27 then PC := 525
521 [-]: JMP       525          ; PC := 525
522 [-]: EQ        1 R28 K13    ; if R28 == nil then PC := 525
523 [-]: JMP       525          ; PC := 525
524 [-]: JMP       527          ; PC := 527
525 [-]: TFORLOOP  R29 2        ; R32,R33 :=  R29(R30,R31); if R32 ~= nil then begin PC = 495; R31 := R32 end
526 [-]: JMP       495          ; PC := 495
527 [-]: TEST      R27 1        ; if R27 then PC := 567
528 [-]: JMP       567          ; PC := 567
529 [-]: GETGLOBAL R34 K2       ; R34 := mSelected
530 [-]: GETTABLE  R34 R34 K9   ; R34 := R34["Element"]
531 [-]: GETGLOBAL R35 K2       ; R35 := mSelected
532 [-]: SETTABLE  R35 K9 R25   ; R35["Element"] := R25
533 [-]: NEWTABLE  R35 0 0      ; R35 := {}
534 [-]: EQ        1 R28 K13    ; if R28 == nil then PC := 540
535 [-]: JMP       540          ; PC := 540
536 [-]: GETTABLE  R36 R28 K65  ; R36 := R28["mItemId"]
537 [-]: GETTABLE  R36 R36 K66  ; R36 := R36["mId"]
538 [-]: SETTABLE  R35 K14 R36  ; R35["UID"] := R36
539 [-]: JMP       543          ; PC := 543
540 [-]: GETGLOBAL R36 K10      ; R36 := 0x6c97a788
541 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["InvalidItemID"]
542 [-]: SETTABLE  R35 K14 R36  ; R35["UID"] := R36
543 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
544 [-]: NEWTABLE  R37 0 1      ; R37 := {}
545 [-]: SETTABLE  R37 K12 R35  ; R37["mPurchasedInfo"] := R35
546 [-]: SETTABLE  R36 K3 R37   ; R36["Item"] := R37
547 [-]: LOADBOOL  R36 0 0      ; R36 := false
548 [-]: SETGLOBAL R36 K71      ; mInputBlocked := R36
549 [-]: GETUPVAL  R36 U3       ; R36 := U3
550 [-]: GETTABLE  R36 R36 K8   ; R36 := R36["SWAPPING_ITEM"]
551 [-]: SETUPVAL  R36 U2       ; U82 := R2
552 [-]: GETUPVAL  R36 U18      ; R36 := U18
553 [-]: LOADNIL   R37 R37      ; R37 := nil
554 [-]: LOADBOOL  R38 1 0      ; R38 := true
555 [-]: CALL      R36 3 1      ; R36(R37,R38)
556 [-]: LOADBOOL  R36 1 0      ; R36 := true
557 [-]: SETGLOBAL R36 K71      ; mInputBlocked := R36
558 [-]: GETUPVAL  R36 U19      ; R36 := U19
559 [-]: GETGLOBAL R37 K2       ; R37 := mSelected
560 [-]: GETTABLE  R37 R37 K9   ; R37 := R37["Element"]
561 [-]: CALL      R36 2 1      ; R36(R37)
562 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
563 [-]: SETTABLE  R36 K9 R34   ; R36["Element"] := R34
564 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
565 [-]: SETTABLE  R36 K3 K13   ; R36["Item"] := nil
566 [-]: JMP       1229         ; PC := 1229
567 [-]: GETUPVAL  R36 U9       ; R36 := U9
568 [-]: MOVE      R37 R25      ; R37 := R25
569 [-]: CALL      R36 2 1      ; R36(R37)
570 [-]: JMP       1229         ; PC := 1229
571 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
572 [-]: GETTABLE  R36 R36 K9   ; R36 := R36["Element"]
573 [-]: GETTABLE  R36 R36 K39  ; R36 := R36["LoadOutType"]
574 [-]: EQ        1 R36 K61    ; if R36 == 0.000000 then PC := 586
575 [-]: JMP       586          ; PC := 586
576 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
577 [-]: GETTABLE  R36 R36 K9   ; R36 := R36["Element"]
578 [-]: GETTABLE  R36 R36 K39  ; R36 := R36["LoadOutType"]
579 [-]: EQ        1 R36 K99    ; if R36 == 3.000000 then PC := 586
580 [-]: JMP       586          ; PC := 586
581 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
582 [-]: GETTABLE  R36 R36 K9   ; R36 := R36["Element"]
583 [-]: GETTABLE  R36 R36 K39  ; R36 := R36["LoadOutType"]
584 [-]: EQ        0 R36 K42    ; if R36 ~= 8.000000 then PC := 1229
585 [-]: JMP       1229         ; PC := 1229
586 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
587 [-]: GETTABLE  R36 R36 K9   ; R36 := R36["Element"]
588 [-]: GETTABLE  R36 R36 K40  ; R36 := R36["LoadOutId"]
589 [-]: EQ        0 R36 K61    ; if R36 ~= 0.000000 then PC := 1229
590 [-]: JMP       1229         ; PC := 1229
591 [-]: LOADK     R36 5        ; R36 := 5.000000
592 [-]: LOADK     R37 6        ; R37 := 6.000000
593 [-]: LOADK     R38 1        ; R38 := 1.000000
594 [-]: FORPREP   R36 720      ; R36 -= R38; PC := 720
595 [-]: GETGLOBAL R40 K63      ; R40 := mCurrentLoadout
596 [-]: GETGLOBAL R41 K2       ; R41 := mSelected
597 [-]: GETTABLE  R41 R41 K9   ; R41 := R41["Element"]
598 [-]: GETTABLE  R41 R41 K39  ; R41 := R41["LoadOutType"]
599 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
600 [-]: SELF      R40 R40 K64  ; R41 := R40; R40 := R40[0x2abbe722]
601 [-]: MOVE      R42 R39      ; R42 := R39
602 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
603 [-]: MOVE      R12 R40      ; R12 := R40
604 [-]: GETUPVAL  R40 U5       ; R40 := U5
605 [-]: GETTABLE  R40 R40 K45  ; R40 := R40[0x06d055f9]
606 [-]: EQ        1 R39 K21    ; if R39 == 5.000000 then PC := 609
607 [-]: JMP       609          ; PC := 609
608 [-]: LOADBOOL  R41 0 1      ; R41 := false; PC := 609
609 [-]: LOADBOOL  R41 1 0      ; R41 := true
610 [-]: GETGLOBAL R42 K72      ; R42 := mLists
611 [-]: GETTABLE  R42 R42 K73  ; R42 := R42["mLoadOutList"]
612 [-]: GETTABLE  R42 R42 K100 ; R42 := R42["SpecialASlotId"]
613 [-]: GETGLOBAL R43 K72      ; R43 := mLists
614 [-]: GETTABLE  R43 R43 K73  ; R43 := R43["mLoadOutList"]
615 [-]: GETTABLE  R43 R43 K101 ; R43 := R43["SpecialBSlotId"]
616 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
617 [-]: GETGLOBAL R41 K72      ; R41 := mLists
618 [-]: GETTABLE  R41 R41 K73  ; R41 := R41["mLoadOutList"]
619 [-]: SELF      R41 R41 K93  ; R42 := R41; R41 := R41[0xca30dfb6]
620 [-]: MOVE      R43 R40      ; R43 := R40
621 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
622 [-]: GETGLOBAL R42 K10      ; R42 := 0x6c97a788
623 [-]: GETTABLE  R42 R42 K11  ; R42 := R42["InvalidItemID"]
624 [-]: EQ        1 R41 K13    ; if R41 == nil then PC := 632
625 [-]: JMP       632          ; PC := 632
626 [-]: GETTABLE  R43 R41 K102 ; R43 := R41["EquippedItem"]
627 [-]: EQ        1 R43 K13    ; if R43 == nil then PC := 632
628 [-]: JMP       632          ; PC := 632
629 [-]: GETTABLE  R43 R41 K102 ; R43 := R41["EquippedItem"]
630 [-]: GETTABLE  R43 R43 K65  ; R43 := R43["mItemId"]
631 [-]: GETTABLE  R42 R43 K66  ; R42 := R43["mId"]
632 [-]: GETTABLE  R43 R12 K65  ; R43 := R12["mItemId"]
633 [-]: GETTABLE  R43 R43 K66  ; R43 := R43["mId"]
634 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 711
635 [-]: JMP       711          ; PC := 711
636 [-]: GETGLOBAL R43 K2       ; R43 := mSelected
637 [-]: GETTABLE  R43 R43 K9   ; R43 := R43["Element"]
638 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
639 [-]: SETTABLE  R44 K9 R41   ; R44["Element"] := R41
640 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
641 [-]: NEWTABLE  R45 0 1      ; R45 := {}
642 [-]: NEWTABLE  R46 0 1      ; R46 := {}
643 [-]: GETTABLE  R47 R12 K65  ; R47 := R12["mItemId"]
644 [-]: GETTABLE  R47 R47 K66  ; R47 := R47["mId"]
645 [-]: SETTABLE  R46 K14 R47  ; R46["UID"] := R47
646 [-]: SETTABLE  R45 K12 R46  ; R45["mPurchasedInfo"] := R46
647 [-]: SETTABLE  R44 K3 R45   ; R44["Item"] := R45
648 [-]: GETTABLE  R44 R12 K65  ; R44 := R12["mItemId"]
649 [-]: GETTABLE  R44 R44 K66  ; R44 := R44["mId"]
650 [-]: GETGLOBAL R45 K10      ; R45 := 0x6c97a788
651 [-]: GETTABLE  R45 R45 K11  ; R45 := R45["InvalidItemID"]
652 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 666
653 [-]: JMP       666          ; PC := 666
654 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
655 [-]: GETTABLE  R44 R44 K9   ; R44 := R44["Element"]
656 [-]: GETUPVAL  R45 U16      ; R45 := U16
657 [-]: GETTABLE  R45 R45 K104 ; R45 := R45[0x866fb296]
658 [-]: GETGLOBAL R46 K2       ; R46 := mSelected
659 [-]: GETTABLE  R46 R46 K9   ; R46 := R46["Element"]
660 [-]: GETTABLE  R46 R46 K39  ; R46 := R46["LoadOutType"]
661 [-]: GETGLOBAL R47 K2       ; R47 := mSelected
662 [-]: GETTABLE  R47 R47 K9   ; R47 := R47["Element"]
663 [-]: GETTABLE  R47 R47 K40  ; R47 := R47["LoadOutId"]
664 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
665 [-]: SETTABLE  R44 K103 R45 ; R44["OwnedItems"] := R45
666 [-]: LOADBOOL  R44 0 0      ; R44 := false
667 [-]: SETGLOBAL R44 K71      ; mInputBlocked := R44
668 [-]: GETUPVAL  R44 U3       ; R44 := U3
669 [-]: GETTABLE  R44 R44 K8   ; R44 := R44["SWAPPING_ITEM"]
670 [-]: SETUPVAL  R44 U2       ; U82 := R2
671 [-]: GETUPVAL  R44 U18      ; R44 := U18
672 [-]: LOADNIL   R45 R45      ; R45 := nil
673 [-]: LOADBOOL  R46 1 0      ; R46 := true
674 [-]: CALL      R44 3 1      ; R44(R45,R46)
675 [-]: LOADBOOL  R44 1 0      ; R44 := true
676 [-]: SETGLOBAL R44 K71      ; mInputBlocked := R44
677 [-]: GETUPVAL  R44 U19      ; R44 := U19
678 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
679 [-]: GETTABLE  R45 R45 K9   ; R45 := R45["Element"]
680 [-]: CALL      R44 2 1      ; R44(R45)
681 [-]: GETTABLE  R44 R12 K65  ; R44 := R12["mItemId"]
682 [-]: GETTABLE  R44 R44 K66  ; R44 := R44["mId"]
683 [-]: GETGLOBAL R45 K10      ; R45 := 0x6c97a788
684 [-]: GETTABLE  R45 R45 K11  ; R45 := R45["InvalidItemID"]
685 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 699
686 [-]: JMP       699          ; PC := 699
687 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
688 [-]: GETTABLE  R44 R44 K9   ; R44 := R44["Element"]
689 [-]: GETUPVAL  R45 U16      ; R45 := U16
690 [-]: GETTABLE  R45 R45 K104 ; R45 := R45[0x866fb296]
691 [-]: GETGLOBAL R46 K2       ; R46 := mSelected
692 [-]: GETTABLE  R46 R46 K9   ; R46 := R46["Element"]
693 [-]: GETTABLE  R46 R46 K39  ; R46 := R46["LoadOutType"]
694 [-]: GETGLOBAL R47 K2       ; R47 := mSelected
695 [-]: GETTABLE  R47 R47 K9   ; R47 := R47["Element"]
696 [-]: GETTABLE  R47 R47 K40  ; R47 := R47["LoadOutId"]
697 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
698 [-]: SETTABLE  R44 K103 R45 ; R44["OwnedItems"] := R45
699 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
700 [-]: SETTABLE  R44 K9 R43   ; R44["Element"] := R43
701 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
702 [-]: SETTABLE  R44 K3 K13   ; R44["Item"] := nil
703 [-]: GETGLOBAL R44 K72      ; R44 := mLists
704 [-]: GETTABLE  R44 R44 K73  ; R44 := R44["mLoadOutList"]
705 [-]: SELF      R44 R44 K74  ; R45 := R44; R44 := R44[0xea061e98]
706 [-]: GETGLOBAL R46 K72      ; R46 := mLists
707 [-]: GETTABLE  R46 R46 K73  ; R46 := R46["mLoadOutList"]
708 [-]: GETTABLE  R46 R46 K75  ; R46 := R46["mElementDrawCallback"]
709 [-]: CALL      R44 3 1      ; R44(R45,R46)
710 [-]: JMP       720          ; PC := 720
711 [-]: EQ        1 R42 K37    ; if R42 == "" then PC := 720
712 [-]: JMP       720          ; PC := 720
713 [-]: GETGLOBAL R44 K10      ; R44 := 0x6c97a788
714 [-]: GETTABLE  R44 R44 K11  ; R44 := R44["InvalidItemID"]
715 [-]: EQ        1 R42 R44    ; if R42 == R44 then PC := 720
716 [-]: JMP       720          ; PC := 720
717 [-]: GETUPVAL  R44 U9       ; R44 := U9
718 [-]: MOVE      R45 R41      ; R45 := R41
719 [-]: CALL      R44 2 1      ; R44(R45)
720 [-]: FORLOOP   R36 595      ; R36 += R38; if R36 <= R37 then begin PC := 595; R39 := R36 end
721 [-]: GETGLOBAL R44 K5       ; R44 := _T
722 [-]: GETTABLE  R44 R44 K105 ; R44 := R44["bloodshedSigil"]
723 [-]: EQ        1 R44 K13    ; if R44 == nil then PC := 741
724 [-]: JMP       741          ; PC := 741
725 [-]: GETGLOBAL R44 K106     ; R44 := 0x89326c93
726 [-]: SELF      R44 R44 K107 ; R45 := R44; R44 := R44[0xded7d5cd]
727 [-]: CALL      R44 2 2      ; R44 := R44(R45)
728 [-]: GETTABLE  R44 R44 K30  ; R44 := R44[1.000000]
729 [-]: SELF      R44 R44 K108 ; R45 := R44; R44 := R44[0x5ca33548]
730 [-]: CALL      R44 2 2      ; R44 := R44(R45)
731 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
732 [-]: GETGLOBAL R46 K5       ; R46 := _T
733 [-]: GETTABLE  R46 R46 K105 ; R46 := R46["bloodshedSigil"]
734 [-]: GETTABLE  R46 R46 R44  ; R46 := R46[R44]
735 [-]: CALL      R45 2 2      ; R45 := R45(R46)
736 [-]: TEST      R45 1        ; if R45 then PC := 741
737 [-]: JMP       741          ; PC := 741
738 [-]: GETGLOBAL R45 K5       ; R45 := _T
739 [-]: GETTABLE  R45 R45 K105 ; R45 := R45["bloodshedSigil"]
740 [-]: SETTABLE  R45 R44 K61  ; R45[R44] := 0.000000
741 [-]: GETGLOBAL R45 K5       ; R45 := _T
742 [-]: GETTABLE  R45 R45 K109 ; R45 := R45["Arsenal_ForceUmbraUnlock"]
743 [-]: TEST      R45 0        ; if not R45 then PC := 1229
744 [-]: JMP       1229         ; PC := 1229
745 [-]: GETGLOBAL R45 K5       ; R45 := _T
746 [-]: GETTABLE  R45 R45 K110 ; R45 := R45["Arsenal_ForceUmbraSwordUnlock"]
747 [-]: TEST      R45 1        ; if R45 then PC := 1229
748 [-]: JMP       1229         ; PC := 1229
749 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
750 [-]: GETTABLE  R45 R45 K9   ; R45 := R45["Element"]
751 [-]: GETTABLE  R45 R45 K84  ; R45 := R45["Type"]
752 [-]: GETGLOBAL R46 K111     ; R46 := 0xfba12602
753 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 1229
754 [-]: JMP       1229         ; PC := 1229
755 [-]: GETGLOBAL R45 K5       ; R45 := _T
756 [-]: SETTABLE  R45 K112 K7  ; R45["ExcaliburUmbraEquipped"] := true
757 [-]: GETUPVAL  R45 U1       ; R45 := U1
758 [-]: SETTABLE  R45 K4 K7    ; R45["EquipmentChangesBlocked"] := true
759 [-]: GETUPVAL  R45 U1       ; R45 := U1
760 [-]: SETTABLE  R45 K113 K7  ; R45["SacrificeQuestInputBlocked"] := true
761 [-]: JMP       1229         ; PC := 1229
762 [-]: GETUPVAL  R45 U2       ; R45 := U2
763 [-]: GETUPVAL  R46 U3       ; R46 := U3
764 [-]: GETTABLE  R46 R46 K114 ; R46 := R46["SELECTING_SKINS"]
765 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 1033
766 [-]: JMP       1033         ; PC := 1033
767 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
768 [-]: GETGLOBAL R46 K2       ; R46 := mSelected
769 [-]: GETTABLE  R46 R46 K9   ; R46 := R46["Element"]
770 [-]: CALL      R45 2 2      ; R45 := R45(R46)
771 [-]: TEST      R45 1        ; if R45 then PC := 1033
772 [-]: JMP       1033         ; PC := 1033
773 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
774 [-]: GETTABLE  R45 R45 K9   ; R45 := R45["Element"]
775 [-]: GETTABLE  R45 R45 K115 ; R45 := R45["LunaroArenaEntry"]
776 [-]: TEST      R45 0        ; if not R45 then PC := 786
777 [-]: JMP       786          ; PC := 786
778 [-]: GETGLOBAL R45 K68      ; R45 := mInventory
779 [-]: GETTABLE  R45 R45 K116 ; R45 := R45["mArenaCustomization"]
780 [-]: SELF      R45 R45 K117 ; R46 := R45; R45 := R45[0x68877f1b]
781 [-]: GETGLOBAL R47 K2       ; R47 := mSelected
782 [-]: GETTABLE  R47 R47 K118 ; R47 := R47["CosmeticItem"]
783 [-]: GETTABLE  R47 R47 K84  ; R47 := R47["Type"]
784 [-]: CALL      R45 3 1      ; R45(R46,R47)
785 [-]: JMP       1026         ; PC := 1026
786 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
787 [-]: GETTABLE  R45 R45 K119 ; R45 := R45["Cosmetic"]
788 [-]: GETTABLE  R45 R45 K120 ; R45 := R45["PetTrait"]
789 [-]: TEST      R45 0        ; if not R45 then PC := 807
790 [-]: JMP       807          ; PC := 807
791 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
792 [-]: GETTABLE  R45 R45 K119 ; R45 := R45["Cosmetic"]
793 [-]: GETTABLE  R45 R45 K121 ; R45 := R45["Attribute"]
794 [-]: TEST      R45 0        ; if not R45 then PC := 807
795 [-]: JMP       807          ; PC := 807
796 [-]: GETUPVAL  R45 U20      ; R45 := U20
797 [-]: GETGLOBAL R46 K2       ; R46 := mSelected
798 [-]: GETTABLE  R46 R46 K119 ; R46 := R46["Cosmetic"]
799 [-]: GETTABLE  R46 R46 K121 ; R46 := R46["Attribute"]
800 [-]: GETGLOBAL R47 K2       ; R47 := mSelected
801 [-]: GETTABLE  R47 R47 K3   ; R47 := R47["Item"]
802 [-]: GETTABLE  R47 R47 K122 ; R47 := R47["PetTintColor"]
803 [-]: LOADK     R48 0        ; R48 := 0.000000
804 [-]: LOADNIL   R49 R49      ; R49 := nil
805 [-]: CALL      R45 5 1      ; R45(R46,R47,R48,R49)
806 [-]: JMP       1024         ; PC := 1024
807 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
808 [-]: GETTABLE  R45 R45 K9   ; R45 := R45["Element"]
809 [-]: GETTABLE  R45 R45 K39  ; R45 := R45["LoadOutType"]
810 [-]: EQ        1 R45 K61    ; if R45 == 0.000000 then PC := 817
811 [-]: JMP       817          ; PC := 817
812 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
813 [-]: GETTABLE  R45 R45 K9   ; R45 := R45["Element"]
814 [-]: GETTABLE  R45 R45 K39  ; R45 := R45["LoadOutType"]
815 [-]: EQ        0 R45 K99    ; if R45 ~= 3.000000 then PC := 910
816 [-]: JMP       910          ; PC := 910
817 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
818 [-]: GETTABLE  R45 R45 K9   ; R45 := R45["Element"]
819 [-]: GETTABLE  R45 R45 K40  ; R45 := R45["LoadOutId"]
820 [-]: EQ        0 R45 K61    ; if R45 ~= 0.000000 then PC := 910
821 [-]: JMP       910          ; PC := 910
822 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
823 [-]: GETTABLE  R45 R45 K119 ; R45 := R45["Cosmetic"]
824 [-]: GETTABLE  R45 R45 K123 ; R45 := R45["Slot"]
825 [-]: EQ        0 R45 K61    ; if R45 ~= 0.000000 then PC := 910
826 [-]: JMP       910          ; PC := 910
827 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
828 [-]: GETGLOBAL R46 K124     ; R46 := mPendingSelection
829 [-]: CALL      R45 2 2      ; R45 := R45(R46)
830 [-]: TEST      R45 1        ; if R45 then PC := 836
831 [-]: JMP       836          ; PC := 836
832 [-]: GETGLOBAL R45 K125     ; R45 := mLoaders
833 [-]: SETTABLE  R45 K126 K7  ; R45["mQueueEquipItem"] := true
834 [-]: LOADBOOL  R45 1 0      ; R45 := true
835 [-]: RETURN    R45 2        ; return R45
836 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
837 [-]: GETGLOBAL R46 K2       ; R46 := mSelected
838 [-]: GETTABLE  R46 R46 K118 ; R46 := R46["CosmeticItem"]
839 [-]: CALL      R45 2 2      ; R45 := R45(R46)
840 [-]: TEST      R45 1        ; if R45 then PC := 910
841 [-]: JMP       910          ; PC := 910
842 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
843 [-]: GETGLOBAL R46 K2       ; R46 := mSelected
844 [-]: GETTABLE  R46 R46 K118 ; R46 := R46["CosmeticItem"]
845 [-]: GETTABLE  R46 R46 K127 ; R46 := R46["Skin"]
846 [-]: CALL      R45 2 2      ; R45 := R45(R46)
847 [-]: TEST      R45 1        ; if R45 then PC := 910
848 [-]: JMP       910          ; PC := 910
849 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
850 [-]: GETGLOBAL R46 K2       ; R46 := mSelected
851 [-]: GETTABLE  R46 R46 K118 ; R46 := R46["CosmeticItem"]
852 [-]: GETTABLE  R46 R46 K127 ; R46 := R46["Skin"]
853 [-]: GETTABLE  R46 R46 K128 ; R46 := R46["mInstance"]
854 [-]: CALL      R45 2 2      ; R45 := R45(R46)
855 [-]: TEST      R45 1        ; if R45 then PC := 910
856 [-]: JMP       910          ; PC := 910
857 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
858 [-]: GETTABLE  R45 R45 K118 ; R45 := R45["CosmeticItem"]
859 [-]: GETTABLE  R45 R45 K127 ; R45 := R45["Skin"]
860 [-]: GETTABLE  R45 R45 K128 ; R45 := R45["mInstance"]
861 [-]: SELF      R45 R45 K129 ; R46 := R45; R45 := R45[0x0ad758cb]
862 [-]: CALL      R45 2 2      ; R45 := R45(R46)
863 [-]: LT        0 K61 R45    ; if 0.000000 >= R45 then PC := 910
864 [-]: JMP       910          ; PC := 910
865 [-]: GETGLOBAL R45 K68      ; R45 := mInventory
866 [-]: SELF      R45 R45 K130 ; R46 := R45; R45 := R45[0x2f30b8db]
867 [-]: GETGLOBAL R47 K2       ; R47 := mSelected
868 [-]: GETTABLE  R47 R47 K9   ; R47 := R47["Element"]
869 [-]: GETTABLE  R47 R47 K102 ; R47 := R47["EquippedItem"]
870 [-]: GETTABLE  R47 R47 K65  ; R47 := R47["mItemId"]
871 [-]: GETTABLE  R47 R47 K66  ; R47 := R47["mId"]
872 [-]: GETGLOBAL R48 K2       ; R48 := mSelected
873 [-]: GETTABLE  R48 R48 K9   ; R48 := R48["Element"]
874 [-]: GETTABLE  R48 R48 K60  ; R48 := R48["mModSlot"]
875 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
876 [-]: GETGLOBAL R46 K0       ; R46 := 0x7b998233
877 [-]: MOVE      R47 R45      ; R47 := R45
878 [-]: CALL      R46 2 2      ; R46 := R46(R47)
879 [-]: TEST      R46 1        ; if R46 then PC := 910
880 [-]: JMP       910          ; PC := 910
881 [-]: LOADK     R46 0        ; R46 := 0.000000
882 [-]: GETGLOBAL R47 K131     ; R47 := 0x7ed0a956
883 [-]: LOADK     R48 K132     ; R48 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
884 [-]: CALL      R47 2 2      ; R47 := R47(R48)
885 [-]: LOADK     R48 1        ; R48 := 1.000000
886 [-]: LEN       R49 R45      ; R49 := # R45
887 [-]: LOADK     R50 1        ; R50 := 1.000000
888 [-]: FORPREP   R48 903      ; R48 -= R50; PC := 903
889 [-]: GETGLOBAL R52 K0       ; R52 := 0x7b998233
890 [-]: GETTABLE  R53 R45 R51  ; R53 := R45[R51]
891 [-]: GETTABLE  R53 R53 K98  ; R53 := R53["mItemType"]
892 [-]: CALL      R52 2 2      ; R52 := R52(R53)
893 [-]: TEST      R52 1        ; if R52 then PC := 903
894 [-]: JMP       903          ; PC := 903
895 [-]: GETTABLE  R52 R45 R51  ; R52 := R45[R51]
896 [-]: GETTABLE  R52 R52 K98  ; R52 := R52["mItemType"]
897 [-]: SELF      R52 R52 K80  ; R53 := R52; R52 := R52[0xf2deaf69]
898 [-]: MOVE      R54 R47      ; R54 := R47
899 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
900 [-]: TEST      R52 0        ; if not R52 then PC := 903
901 [-]: JMP       903          ; PC := 903
902 [-]: ADD       R46 R46 K30  ; R46 := R46 + 1.000000
903 [-]: FORLOOP   R48 889      ; R48 += R50; if R48 <= R49 then begin PC := 889; R51 := R48 end
904 [-]: LE        0 K133 R46   ; if 2.000000 > R46 then PC := 910
905 [-]: JMP       910          ; PC := 910
906 [-]: GETUPVAL  R52 U5       ; R52 := U5
907 [-]: GETTABLE  R52 R52 K38  ; R52 := R52[0xe0cba3ca]
908 [-]: LOADK     R53 K134     ; R53 := "/Lotus/Language/Menu/ArcaneHelmet_EquipError"
909 [-]: CALL      R52 2 1      ; R52(R53)
910 [-]: GETUPVAL  R52 U21      ; R52 := U21
911 [-]: GETUPVAL  R53 U22      ; R53 := U22
912 [-]: GETTABLE  R53 R53 K135 ; R53 := R53["FALSE"]
913 [-]: EQ        1 R52 R53    ; if R52 == R53 then PC := 1024
914 [-]: JMP       1024         ; PC := 1024
915 [-]: GETGLOBAL R52 K0       ; R52 := 0x7b998233
916 [-]: GETGLOBAL R53 K2       ; R53 := mSelected
917 [-]: GETTABLE  R53 R53 K3   ; R53 := R53["Item"]
918 [-]: GETTABLE  R53 R53 K84  ; R53 := R53["Type"]
919 [-]: CALL      R52 2 2      ; R52 := R52(R53)
920 [-]: TEST      R52 1        ; if R52 then PC := 1024
921 [-]: JMP       1024         ; PC := 1024
922 [-]: GETGLOBAL R52 K2       ; R52 := mSelected
923 [-]: GETTABLE  R52 R52 K3   ; R52 := R52["Item"]
924 [-]: GETTABLE  R52 R52 K84  ; R52 := R52["Type"]
925 [-]: SELF      R52 R52 K80  ; R53 := R52; R52 := R52[0xf2deaf69]
926 [-]: GETGLOBAL R54 K136     ; R54 := gLotusSigilType
927 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
928 [-]: TEST      R52 1        ; if R52 then PC := 938
929 [-]: JMP       938          ; PC := 938
930 [-]: GETGLOBAL R52 K2       ; R52 := mSelected
931 [-]: GETTABLE  R52 R52 K3   ; R52 := R52["Item"]
932 [-]: GETTABLE  R52 R52 K84  ; R52 := R52["Type"]
933 [-]: SELF      R52 R52 K80  ; R53 := R52; R52 := R52[0xf2deaf69]
934 [-]: GETGLOBAL R54 K137     ; R54 := gLotusHoverboardStickerType
935 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
936 [-]: TEST      R52 0        ; if not R52 then PC := 1024
937 [-]: JMP       1024         ; PC := 1024
938 [-]: GETGLOBAL R52 K92      ; R52 := 0xb009bbc6
939 [-]: GETGLOBAL R53 K2       ; R53 := mSelected
940 [-]: GETTABLE  R53 R53 K3   ; R53 := R53["Item"]
941 [-]: GETTABLE  R53 R53 K84  ; R53 := R53["Type"]
942 [-]: CALL      R52 2 2      ; R52 := R52(R53)
943 [-]: SELF      R52 R52 K138 ; R53 := R52; R52 := R52[0x07408254]
944 [-]: CALL      R52 2 2      ; R52 := R52(R53)
945 [-]: GETGLOBAL R53 K0       ; R53 := 0x7b998233
946 [-]: MOVE      R54 R52      ; R54 := R52
947 [-]: CALL      R53 2 2      ; R53 := R53(R54)
948 [-]: TEST      R53 1        ; if R53 then PC := 1024
949 [-]: JMP       1024         ; PC := 1024
950 [-]: LOADNIL   R53 R53      ; R53 := nil
951 [-]: GETUPVAL  R54 U21      ; R54 := U21
952 [-]: GETUPVAL  R55 U22      ; R55 := U22
953 [-]: GETTABLE  R55 R55 K139 ; R55 := R55["FRONT"]
954 [-]: EQ        0 R54 R55    ; if R54 ~= R55 then PC := 964
955 [-]: JMP       964          ; PC := 964
956 [-]: GETGLOBAL R54 K2       ; R54 := mSelected
957 [-]: GETTABLE  R54 R54 K9   ; R54 := R54["Element"]
958 [-]: GETTABLE  R54 R54 K140 ; R54 := R54["Customization"]
959 [-]: SELF      R54 R54 K141 ; R55 := R54; R54 := R54[0x2540510f]
960 [-]: LOADK     R56 13       ; R56 := 13.000000
961 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
962 [-]: MOVE      R53 R54      ; R53 := R54
963 [-]: JMP       976          ; PC := 976
964 [-]: GETUPVAL  R54 U21      ; R54 := U21
965 [-]: GETUPVAL  R55 U22      ; R55 := U22
966 [-]: GETTABLE  R55 R55 K142 ; R55 := R55["BACK"]
967 [-]: EQ        0 R54 R55    ; if R54 ~= R55 then PC := 976
968 [-]: JMP       976          ; PC := 976
969 [-]: GETGLOBAL R54 K2       ; R54 := mSelected
970 [-]: GETTABLE  R54 R54 K9   ; R54 := R54["Element"]
971 [-]: GETTABLE  R54 R54 K140 ; R54 := R54["Customization"]
972 [-]: SELF      R54 R54 K141 ; R55 := R54; R54 := R54[0x2540510f]
973 [-]: LOADK     R56 12       ; R56 := 12.000000
974 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
975 [-]: MOVE      R53 R54      ; R53 := R54
976 [-]: GETGLOBAL R54 K0       ; R54 := 0x7b998233
977 [-]: MOVE      R55 R53      ; R55 := R53
978 [-]: CALL      R54 2 2      ; R54 := R54(R55)
979 [-]: TEST      R54 1        ; if R54 then PC := 1024
980 [-]: JMP       1024         ; PC := 1024
981 [-]: GETGLOBAL R54 K92      ; R54 := 0xb009bbc6
982 [-]: MOVE      R55 R53      ; R55 := R53
983 [-]: CALL      R54 2 2      ; R54 := R54(R55)
984 [-]: SELF      R54 R54 K138 ; R55 := R54; R54 := R54[0x07408254]
985 [-]: CALL      R54 2 2      ; R54 := R54(R55)
986 [-]: GETGLOBAL R55 K0       ; R55 := 0x7b998233
987 [-]: MOVE      R56 R54      ; R56 := R54
988 [-]: CALL      R55 2 2      ; R55 := R55(R56)
989 [-]: TEST      R55 1        ; if R55 then PC := 1024
990 [-]: JMP       1024         ; PC := 1024
991 [-]: LOADK     R55 K37      ; R55 := ""
992 [-]: GETUPVAL  R56 U23      ; R56 := U23
993 [-]: MOVE      R57 R53      ; R57 := R53
994 [-]: CALL      R56 2 2      ; R56 := R56(R57)
995 [-]: GETGLOBAL R57 K0       ; R57 := 0x7b998233
996 [-]: MOVE      R58 R56      ; R58 := R56
997 [-]: CALL      R57 2 2      ; R57 := R57(R58)
998 [-]: TEST      R57 1        ; if R57 then PC := 1009
999 [-]: JMP       1009         ; PC := 1009
1000 [-]: GETGLOBAL R57 K34      ; R57 := 0xae91e43b
1001 [-]: SELF      R57 R57 K143 ; R58 := R57; R57 := R57[0x42b04007]
1002 [-]: GETGLOBAL R59 K144     ; R59 := 0x64fb1586
1003 [-]: SELF      R60 R56 K145 ; R61 := R56; R60 := R56[0xd3a9d01f]
1004 [-]: CALL      R60 2 0      ; R60,... := R60(R61)
1005 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
1006 [-]: LOADBOOL  R60 0 0      ; R60 := false
1007 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
1008 [-]: MOVE      R55 R57      ; R55 := R57
1009 [-]: GETUPVAL  R57 U5       ; R57 := U5
1010 [-]: GETTABLE  R57 R57 K38  ; R57 := R57[0xe0cba3ca]
1011 [-]: GETGLOBAL R58 K34      ; R58 := 0xae91e43b
1012 [-]: SELF      R58 R58 K143 ; R59 := R58; R58 := R58[0x42b04007]
1013 [-]: LOADK     R60 K146     ; R60 := "/Lotus/Language/Menu/Cosmetics_SigilFactionError"
1014 [-]: LOADBOOL  R61 0 0      ; R61 := false
1015 [-]: NEWTABLE  R62 0 2      ; R62 := {}
1016 [-]: GETGLOBAL R63 K2       ; R63 := mSelected
1017 [-]: GETTABLE  R63 R63 K3   ; R63 := R63["Item"]
1018 [-]: GETTABLE  R63 R63 K148 ; R63 := R63["Name"]
1019 [-]: SETTABLE  R62 K147 R63 ; R62["SELECTED_SIGIL"] := R63
1020 [-]: SETTABLE  R62 K149 R55 ; R62["EQUIPPED_SIGIL"] := R55
1021 [-]: CALL      R58 5 0      ; R58,... := R58(R59,R60,R61,R62)
1022 [-]: CALL      R57 0 1      ; R57(R58,...)
1023 [-]: RETURN    R0 1         ; return 
1024 [-]: GETUPVAL  R57 U24      ; R57 := U24
1025 [-]: CALL      R57 1 1      ; R57()
1026 [-]: LOADBOOL  R57 1 0      ; R57 := true
1027 [-]: SETGLOBAL R57 K71      ; mInputBlocked := R57
1028 [-]: GETUPVAL  R57 U10      ; R57 := U10
1029 [-]: GETUPVAL  R58 U3       ; R58 := U3
1030 [-]: GETTABLE  R58 R58 K150 ; R58 := R58["CUSTOMIZING_SKINS"]
1031 [-]: CALL      R57 2 1      ; R57(R58)
1032 [-]: JMP       1229         ; PC := 1229
1033 [-]: GETUPVAL  R57 U2       ; R57 := U2
1034 [-]: GETUPVAL  R58 U3       ; R58 := U3
1035 [-]: GETTABLE  R58 R58 K151 ; R58 := R58["SELECTING_CONSUMABLES"]
1036 [-]: EQ        0 R57 R58    ; if R57 ~= R58 then PC := 1229
1037 [-]: JMP       1229         ; PC := 1229
1038 [-]: GETGLOBAL R57 K2       ; R57 := mSelected
1039 [-]: GETTABLE  R57 R57 K3   ; R57 := R57["Item"]
1040 [-]: GETTABLE  R57 R57 K152 ; R57 := R57["mPurchased"]
1041 [-]: TEST      R57 0        ; if not R57 then PC := 1229
1042 [-]: JMP       1229         ; PC := 1229
1043 [-]: LOADBOOL  R57 1 0      ; R57 := true
1044 [-]: SETGLOBAL R57 K71      ; mInputBlocked := R57
1045 [-]: GETGLOBAL R57 K2       ; R57 := mSelected
1046 [-]: GETTABLE  R57 R57 K3   ; R57 := R57["Item"]
1047 [-]: GETTABLE  R57 R57 K84  ; R57 := R57["Type"]
1048 [-]: GETGLOBAL R58 K2       ; R58 := mSelected
1049 [-]: GETTABLE  R58 R58 K3   ; R58 := R58["Item"]
1050 [-]: GETTABLE  R58 R58 K153 ; R58 := R58["mStoreItem"]
1051 [-]: LOADBOOL  R59 0 0      ; R59 := false
1052 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1053 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1054 [-]: EQ        1 R60 K13    ; if R60 == nil then PC := 1140
1055 [-]: JMP       1140         ; PC := 1140
1056 [-]: LOADBOOL  R60 1 0      ; R60 := true
1057 [-]: SETGLOBAL R60 K155     ; mConsumablesChanged := R60
1058 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1059 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1060 [-]: SETTABLE  R60 K156 K13 ; R60["HasRechargeUpgrade"] := nil
1061 [-]: GETGLOBAL R60 K0       ; R60 := 0x7b998233
1062 [-]: MOVE      R61 R57      ; R61 := R57
1063 [-]: CALL      R60 2 2      ; R60 := R60(R61)
1064 [-]: NOT       R59 R60      ; R59 := not R60
1065 [-]: TEST      R59 0        ; if not R59 then PC := 1118
1066 [-]: JMP       1118         ; PC := 1118
1067 [-]: GETUPVAL  R60 U25      ; R60 := U25
1068 [-]: MOVE      R61 R58      ; R61 := R58
1069 [-]: CALL      R60 2 2      ; R60 := R60(R61)
1070 [-]: TEST      R60 0        ; if not R60 then PC := 1118
1071 [-]: JMP       1118         ; PC := 1118
1072 [-]: LOADBOOL  R59 0 0      ; R59 := false
1073 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1074 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1075 [-]: GETGLOBAL R61 K2       ; R61 := mSelected
1076 [-]: GETTABLE  R61 R61 K3   ; R61 := R61["Item"]
1077 [-]: GETTABLE  R61 R61 K148 ; R61 := R61["Name"]
1078 [-]: SETTABLE  R60 K148 R61 ; R60["Name"] := R61
1079 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1080 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1081 [-]: SETTABLE  R60 K84 R57  ; R60["Type"] := R57
1082 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1083 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1084 [-]: SETTABLE  R60 K153 R58 ; R60["mStoreItem"] := R58
1085 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1086 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1087 [-]: GETGLOBAL R61 K2       ; R61 := mSelected
1088 [-]: GETTABLE  R61 R61 K3   ; R61 := R61["Item"]
1089 [-]: GETTABLE  R61 R61 K157 ; R61 := R61["Icon"]
1090 [-]: SETTABLE  R60 K157 R61 ; R60["Icon"] := R61
1091 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1092 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1093 [-]: SETTABLE  R60 K158 K7  ; R60["mForceRedraw"] := true
1094 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1095 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1096 [-]: SETTABLE  R60 K159 K57 ; R60["Filler"] := false
1097 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1098 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1099 [-]: SETTABLE  R60 K160 K61 ; R60["Count"] := 0.000000
1100 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1101 [-]: GETTABLE  R60 R60 K3   ; R60 := R60["Item"]
1102 [-]: GETTABLE  R60 R60 K12  ; R60 := R60["mPurchasedInfo"]
1103 [-]: EQ        1 R60 K13    ; if R60 == nil then PC := 1172
1104 [-]: JMP       1172         ; PC := 1172
1105 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1106 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1107 [-]: GETGLOBAL R61 K161     ; R61 := 0x5bced4c4
1108 [-]: GETTABLE  R61 R61 K162 ; R61 := R61[0xac1b386a]
1109 [-]: GETGLOBAL R62 K2       ; R62 := mSelected
1110 [-]: GETTABLE  R62 R62 K3   ; R62 := R62["Item"]
1111 [-]: GETTABLE  R62 R62 K12  ; R62 := R62["mPurchasedInfo"]
1112 [-]: GETTABLE  R62 R62 K163 ; R62 := R62["ItemCount"]
1113 [-]: SELF      R63 R58 K164 ; R64 := R58; R63 := R58[0x1c030fa3]
1114 [-]: CALL      R63 2 0      ; R63,... := R63(R64)
1115 [-]: CALL      R61 0 2      ; R61 := R61(R62,...)
1116 [-]: SETTABLE  R60 K160 R61 ; R60["Count"] := R61
1117 [-]: JMP       1172         ; PC := 1172
1118 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1119 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1120 [-]: SETTABLE  R60 K148 K13 ; R60["Name"] := nil
1121 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1122 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1123 [-]: SETTABLE  R60 K84 K13  ; R60["Type"] := nil
1124 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1125 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1126 [-]: SETTABLE  R60 K153 K13 ; R60["mStoreItem"] := nil
1127 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1128 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1129 [-]: SETTABLE  R60 K157 K13 ; R60["Icon"] := nil
1130 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1131 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1132 [-]: SETTABLE  R60 K158 K7  ; R60["mForceRedraw"] := true
1133 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1134 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1135 [-]: SETTABLE  R60 K159 K7  ; R60["Filler"] := true
1136 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1137 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1138 [-]: SETTABLE  R60 K160 K61 ; R60["Count"] := 0.000000
1139 [-]: JMP       1172         ; PC := 1172
1140 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1141 [-]: GETTABLE  R60 R60 K165 ; R60 := R60["Emote"]
1142 [-]: EQ        1 R60 K13    ; if R60 == nil then PC := 1172
1143 [-]: JMP       1172         ; PC := 1172
1144 [-]: LOADBOOL  R60 1 0      ; R60 := true
1145 [-]: SETGLOBAL R60 K166     ; mEmotesChanged := R60
1146 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1147 [-]: GETTABLE  R60 R60 K165 ; R60 := R60["Emote"]
1148 [-]: GETUPVAL  R61 U5       ; R61 := U5
1149 [-]: GETTABLE  R61 R61 K45  ; R61 := R61[0x06d055f9]
1150 [-]: EQ        1 R57 K13    ; if R57 == nil then PC := 1153
1151 [-]: JMP       1153         ; PC := 1153
1152 [-]: LOADBOOL  R62 0 1      ; R62 := false; PC := 1153
1153 [-]: LOADBOOL  R62 1 0      ; R62 := true
1154 [-]: LOADNIL   R63 R63      ; R63 := nil
1155 [-]: MOVE      R64 R58      ; R64 := R58
1156 [-]: CALL      R61 4 2      ; R61 := R61(R62,R63,R64)
1157 [-]: SETTABLE  R60 K153 R61 ; R60["mStoreItem"] := R61
1158 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1159 [-]: GETTABLE  R60 R60 K165 ; R60 := R60["Emote"]
1160 [-]: SETTABLE  R60 K84 R57  ; R60["Type"] := R57
1161 [-]: GETGLOBAL R60 K0       ; R60 := 0x7b998233
1162 [-]: GETGLOBAL R61 K5       ; R61 := _T
1163 [-]: GETTABLE  R61 R61 K48  ; R61 := R61["MenuSuitAvatar"]
1164 [-]: CALL      R60 2 2      ; R60 := R60(R61)
1165 [-]: TEST      R60 1        ; if R60 then PC := 1172
1166 [-]: JMP       1172         ; PC := 1172
1167 [-]: GETGLOBAL R60 K5       ; R60 := _T
1168 [-]: GETTABLE  R60 R60 K48  ; R60 := R60["MenuSuitAvatar"]
1169 [-]: SELF      R60 R60 K167 ; R61 := R60; R60 := R60[0xb13134f8]
1170 [-]: LOADNIL   R62 R62      ; R62 := nil
1171 [-]: CALL      R60 3 1      ; R60(R61,R62)
1172 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1173 [-]: GETTABLE  R60 R60 K154 ; R60 := R60["Consumable"]
1174 [-]: TEST      R60 1        ; if R60 then PC := 1178
1175 [-]: JMP       1178         ; PC := 1178
1176 [-]: GETGLOBAL R60 K2       ; R60 := mSelected
1177 [-]: GETTABLE  R60 R60 K165 ; R60 := R60["Emote"]
1178 [-]: TEST      R59 0        ; if not R59 then PC := 1185
1179 [-]: JMP       1185         ; PC := 1185
1180 [-]: GETGLOBAL R61 K5       ; R61 := _T
1181 [-]: GETTABLE  R61 R61 K168 ; R61 := R61[0xc85e4018]
1182 [-]: NEWTABLE  R62 0 0      ; R62 := {}
1183 [-]: CALL      R61 2 1      ; R61(R62)
1184 [-]: JMP       1224         ; PC := 1224
1185 [-]: GETGLOBAL R61 K0       ; R61 := 0x7b998233
1186 [-]: GETTABLE  R62 R60 K84  ; R62 := R60["Type"]
1187 [-]: CALL      R61 2 2      ; R61 := R61(R62)
1188 [-]: TEST      R61 0        ; if not R61 then PC := 1197
1189 [-]: JMP       1197         ; PC := 1197
1190 [-]: GETGLOBAL R61 K5       ; R61 := _T
1191 [-]: GETTABLE  R61 R61 K168 ; R61 := R61[0xc85e4018]
1192 [-]: NEWTABLE  R62 1 0      ; R62 := {}
1193 [-]: MOVE      R63 R60      ; R63 := R60
1194 [-]: SETLIST   R62 1 1      ; R62[(1-1)*FPF+i] := R(62+i), 1 <= i <= 1
1195 [-]: CALL      R61 2 1      ; R61(R62)
1196 [-]: JMP       1224         ; PC := 1224
1197 [-]: GETGLOBAL R61 K0       ; R61 := 0x7b998233
1198 [-]: GETGLOBAL R62 K5       ; R62 := _T
1199 [-]: GETTABLE  R62 R62 K169 ; R62 := R62["BackgroundMovie"]
1200 [-]: CALL      R61 2 2      ; R61 := R61(R62)
1201 [-]: TEST      R61 1        ; if R61 then PC := 1209
1202 [-]: JMP       1209         ; PC := 1209
1203 [-]: GETGLOBAL R61 K5       ; R61 := _T
1204 [-]: GETTABLE  R61 R61 K169 ; R61 := R61["BackgroundMovie"]
1205 [-]: SELF      R61 R61 K35  ; R62 := R61; R61 := R61[0xe4162eed]
1206 [-]: LOADK     R63 K170     ; R63 := "ShowBlockingMessage"
1207 [-]: LOADK     R64 K171     ; R64 := "1"
1208 [-]: CALL      R61 4 1      ; R61(R62,R63,R64)
1209 [-]: GETGLOBAL R61 K125     ; R61 := mLoaders
1210 [-]: GETTABLE  R61 R61 K172 ; R61 := R61["mConsumablesLoader"]
1211 [-]: SELF      R61 R61 K173 ; R62 := R61; R61 := R61[0x5a7aac67]
1212 [-]: CALL      R61 2 1      ; R61(R62)
1213 [-]: GETGLOBAL R61 K125     ; R61 := mLoaders
1214 [-]: GETTABLE  R61 R61 K172 ; R61 := R61["mConsumablesLoader"]
1215 [-]: SELF      R61 R61 K174 ; R62 := R61; R61 := R61[0x2f86cf1e]
1216 [-]: NEWTABLE  R63 0 0      ; R63 := {}
1217 [-]: GETTABLE  R64 R60 K84  ; R64 := R60["Type"]
1218 [-]: SELF      R64 R64 K175 ; R65 := R64; R64 := R64[0xed4e0128]
1219 [-]: CALL      R64 2 0      ; R64,... := R64(R65)
1220 [-]: SETLIST   R63 0 1      ; R63[(1-1)*FPF+i] := R(63+i), 1 <= i <= 0
1221 [-]: LOADBOOL  R64 1 0      ; R64 := true
1222 [-]: CALL      R61 4 1      ; R61(R62,R63,R64)
1223 [-]: RETURN    R0 1         ; return 
1224 [-]: GETUPVAL  R61 U10      ; R61 := U10
1225 [-]: GETUPVAL  R62 U3       ; R62 := U3
1226 [-]: GETTABLE  R62 R62 K176 ; R62 := R62["BROWSING_CONSUMABLES"]
1227 [-]: CALL      R61 2 1      ; R61(R62)
1228 [-]: RETURN    R0 1         ; return 
1229 [-]: TEST      R3 1         ; if R3 then PC := 1263
1230 [-]: JMP       1263         ; PC := 1263
1231 [-]: GETUPVAL  R61 U2       ; R61 := U2
1232 [-]: GETUPVAL  R62 U3       ; R62 := U3
1233 [-]: GETTABLE  R62 R62 K151 ; R62 := R62["SELECTING_CONSUMABLES"]
1234 [-]: EQ        1 R61 R62    ; if R61 == R62 then PC := 1263
1235 [-]: JMP       1263         ; PC := 1263
1236 [-]: GETUPVAL  R61 U2       ; R61 := U2
1237 [-]: GETUPVAL  R62 U3       ; R62 := U3
1238 [-]: GETTABLE  R62 R62 K176 ; R62 := R62["BROWSING_CONSUMABLES"]
1239 [-]: EQ        1 R61 R62    ; if R61 == R62 then PC := 1263
1240 [-]: JMP       1263         ; PC := 1263
1241 [-]: GETGLOBAL R61 K0       ; R61 := 0x7b998233
1242 [-]: GETGLOBAL R62 K2       ; R62 := mSelected
1243 [-]: GETTABLE  R62 R62 K9   ; R62 := R62["Element"]
1244 [-]: CALL      R61 2 2      ; R61 := R61(R62)
1245 [-]: TEST      R61 1        ; if R61 then PC := 1263
1246 [-]: JMP       1263         ; PC := 1263
1247 [-]: GETGLOBAL R61 K2       ; R61 := mSelected
1248 [-]: GETTABLE  R61 R61 K9   ; R61 := R61["Element"]
1249 [-]: GETTABLE  R61 R61 K115 ; R61 := R61["LunaroArenaEntry"]
1250 [-]: TEST      R61 1        ; if R61 then PC := 1263
1251 [-]: JMP       1263         ; PC := 1263
1252 [-]: GETGLOBAL R61 K1       ; R61 := 0x25d99d89
1253 [-]: SELF      R61 R61 K70  ; R62 := R61; R61 := R61[0x400b84a1]
1254 [-]: GETGLOBAL R63 K2       ; R63 := mSelected
1255 [-]: GETTABLE  R63 R63 K9   ; R63 := R63["Element"]
1256 [-]: GETTABLE  R63 R63 K39  ; R63 := R63["LoadOutType"]
1257 [-]: GETGLOBAL R64 K63      ; R64 := mCurrentLoadout
1258 [-]: GETGLOBAL R65 K2       ; R65 := mSelected
1259 [-]: GETTABLE  R65 R65 K9   ; R65 := R65["Element"]
1260 [-]: GETTABLE  R65 R65 K39  ; R65 := R65["LoadOutType"]
1261 [-]: GETTABLE  R64 R64 R65  ; R64 := R64[R65]
1262 [-]: CALL      R61 4 1      ; R61(R62,R63,R64)
1263 [-]: GETGLOBAL R61 K5       ; R61 := _T
1264 [-]: GETTABLE  R61 R61 K48  ; R61 := R61["MenuSuitAvatar"]
1265 [-]: GETUPVAL  R62 U26      ; R62 := U26
1266 [-]: GETUPVAL  R63 U27      ; R63 := U27
1267 [-]: GETTABLE  R63 R63 K177 ; R63 := R63["Current"]
1268 [-]: EQ        1 R63 K133   ; if R63 == 2.000000 then PC := 1271
1269 [-]: JMP       1271         ; PC := 1271
1270 [-]: LOADBOOL  R63 0 1      ; R63 := false; PC := 1271
1271 [-]: LOADBOOL  R63 1 0      ; R63 := true
1272 [-]: LOADBOOL  R64 1 0      ; R64 := true
1273 [-]: CALL      R62 3 1      ; R62(R63,R64)
1274 [-]: GETGLOBAL R62 K0       ; R62 := 0x7b998233
1275 [-]: GETUPVAL  R63 U28      ; R63 := U28
1276 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1277 [-]: TEST      R62 0        ; if not R62 then PC := 1283
1278 [-]: JMP       1283         ; PC := 1283
1279 [-]: SELF      R62 R61 K52  ; R63 := R61; R62 := R61[0xde321e6f]
1280 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1281 [-]: SELF      R62 R62 K178 ; R63 := R62; R62 := R62[0x0c277ae1]
1282 [-]: CALL      R62 2 1      ; R62(R63)
1283 [-]: GETUPVAL  R62 U29      ; R62 := U29
1284 [-]: CALL      R62 1 2      ; R62 := R62()
1285 [-]: TEST      R62 1        ; if R62 then PC := 1306
1286 [-]: JMP       1306         ; PC := 1306
1287 [-]: GETGLOBAL R62 K5       ; R62 := _T
1288 [-]: GETTABLE  R62 R62 K79  ; R62 := R62["mSentinelMode"]
1289 [-]: TEST      R62 0        ; if not R62 then PC := 1306
1290 [-]: JMP       1306         ; PC := 1306
1291 [-]: GETGLOBAL R62 K1       ; R62 := 0x25d99d89
1292 [-]: SELF      R62 R62 K179 ; R63 := R62; R62 := R62[0x3c6b0324]
1293 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1294 [-]: TEST      R62 1        ; if R62 then PC := 1301
1295 [-]: JMP       1301         ; PC := 1301
1296 [-]: GETGLOBAL R62 K1       ; R62 := 0x25d99d89
1297 [-]: SELF      R62 R62 K180 ; R63 := R62; R62 := R62[0x9f91f49d]
1298 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1299 [-]: TEST      R62 0        ; if not R62 then PC := 1306
1300 [-]: JMP       1306         ; PC := 1306
1301 [-]: LOADK     R62 2        ; R62 := 2.000000
1302 [-]: SETUPVAL  R62 U30      ; U82 := R30
1303 [-]: GETUPVAL  R62 U16      ; R62 := U16
1304 [-]: GETTABLE  R62 R62 K181 ; R62 := R62[0xd4c67576]
1305 [-]: CALL      R62 1 1      ; R62()
1306 [-]: GETGLOBAL R62 K2       ; R62 := mSelected
1307 [-]: GETTABLE  R62 R62 K9   ; R62 := R62["Element"]
1308 [-]: EQ        1 R62 K13    ; if R62 == nil then PC := 1320
1309 [-]: JMP       1320         ; PC := 1320
1310 [-]: GETUPVAL  R62 U31      ; R62 := U31
1311 [-]: GETGLOBAL R63 K2       ; R63 := mSelected
1312 [-]: GETTABLE  R63 R63 K9   ; R63 := R63["Element"]
1313 [-]: GETTABLE  R63 R63 K39  ; R63 := R63["LoadOutType"]
1314 [-]: GETGLOBAL R64 K2       ; R64 := mSelected
1315 [-]: GETTABLE  R64 R64 K9   ; R64 := R64["Element"]
1316 [-]: GETTABLE  R64 R64 K40  ; R64 := R64["LoadOutId"]
1317 [-]: GETGLOBAL R65 K2       ; R65 := mSelected
1318 [-]: GETTABLE  R65 R65 K9   ; R65 := R65["Element"]
1319 [-]: CALL      R62 4 1      ; R62(R63,R64,R65)
1320 [-]: GETUPVAL  R62 U16      ; R62 := U16
1321 [-]: GETTABLE  R62 R62 K182 ; R62 := R62[0xcfd657f3]
1322 [-]: MOVE      R63 R61      ; R63 := R61
1323 [-]: CALL      R62 2 1      ; R62(R63)
1324 [-]: GETUPVAL  R62 U21      ; R62 := U21
1325 [-]: GETUPVAL  R63 U22      ; R63 := U22
1326 [-]: GETTABLE  R63 R63 K139 ; R63 := R63["FRONT"]
1327 [-]: EQ        1 R62 R63    ; if R62 == R63 then PC := 1334
1328 [-]: JMP       1334         ; PC := 1334
1329 [-]: GETUPVAL  R62 U21      ; R62 := U21
1330 [-]: GETUPVAL  R63 U22      ; R63 := U22
1331 [-]: GETTABLE  R63 R63 K142 ; R63 := R63["BACK"]
1332 [-]: EQ        0 R62 R63    ; if R62 ~= R63 then PC := 1337
1333 [-]: JMP       1337         ; PC := 1337
1334 [-]: GETUPVAL  R62 U32      ; R62 := U32
1335 [-]: CALL      R62 1 1      ; R62()
1336 [-]: JMP       1355         ; PC := 1355
1337 [-]: GETGLOBAL R62 K72      ; R62 := mLists
1338 [-]: GETTABLE  R62 R62 K183 ; R62 := R62["mCosmeticsList"]
1339 [-]: GETTABLE  R62 R62 K184 ; R62 := R62["mCurrLevel"]
1340 [-]: GETGLOBAL R63 K72      ; R63 := mLists
1341 [-]: GETTABLE  R63 R63 K183 ; R63 := R63["mCosmeticsList"]
1342 [-]: GETTABLE  R63 R63 K185 ; R63 := R63["HOLSTER_STYLE"]
1343 [-]: EQ        1 R62 R63    ; if R62 == R63 then PC := 1353
1344 [-]: JMP       1353         ; PC := 1353
1345 [-]: GETGLOBAL R62 K72      ; R62 := mLists
1346 [-]: GETTABLE  R62 R62 K183 ; R62 := R62["mCosmeticsList"]
1347 [-]: GETTABLE  R62 R62 K184 ; R62 := R62["mCurrLevel"]
1348 [-]: GETGLOBAL R63 K72      ; R63 := mLists
1349 [-]: GETTABLE  R63 R63 K183 ; R63 := R63["mCosmeticsList"]
1350 [-]: GETTABLE  R63 R63 K186 ; R63 := R63["HOLSTER_CUSTOMIZATION"]
1351 [-]: EQ        0 R62 R63    ; if R62 ~= R63 then PC := 1355
1352 [-]: JMP       1355         ; PC := 1355
1353 [-]: GETUPVAL  R62 U33      ; R62 := U33
1354 [-]: CALL      R62 1 1      ; R62()
1355 [-]: TEST      R2 0         ; if not R2 then PC := 1361
1356 [-]: JMP       1361         ; PC := 1361
1357 [-]: GETUPVAL  R62 U34      ; R62 := U34
1358 [-]: GETGLOBAL R63 K2       ; R63 := mSelected
1359 [-]: GETTABLE  R63 R63 K9   ; R63 := R63["Element"]
1360 [-]: CALL      R62 2 1      ; R62(R63)
1361 [-]: GETGLOBAL R62 K0       ; R62 := 0x7b998233
1362 [-]: GETGLOBAL R63 K5       ; R63 := _T
1363 [-]: GETTABLE  R63 R63 K48  ; R63 := R63["MenuSuitAvatar"]
1364 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1365 [-]: TEST      R62 1        ; if R62 then PC := 1375
1366 [-]: JMP       1375         ; PC := 1375
1367 [-]: GETGLOBAL R62 K5       ; R62 := _T
1368 [-]: GETGLOBAL R63 K5       ; R63 := _T
1369 [-]: GETTABLE  R63 R63 K48  ; R63 := R63["MenuSuitAvatar"]
1370 [-]: SELF      R63 R63 K52  ; R64 := R63; R63 := R63[0xde321e6f]
1371 [-]: CALL      R63 2 2      ; R63 := R63(R64)
1372 [-]: SELF      R63 R63 K188 ; R64 := R63; R63 := R63[0x2676deee]
1373 [-]: CALL      R63 2 2      ; R63 := R63(R64)
1374 [-]: SETTABLE  R62 K187 R63 ; R62["MenuSentinel"] := R63
1375 [-]: GETGLOBAL R62 K0       ; R62 := 0x7b998233
1376 [-]: GETGLOBAL R63 K5       ; R63 := _T
1377 [-]: GETTABLE  R63 R63 K187 ; R63 := R63["MenuSentinel"]
1378 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1379 [-]: TEST      R62 1        ; if R62 then PC := 1409
1380 [-]: JMP       1409         ; PC := 1409
1381 [-]: GETGLOBAL R62 K5       ; R62 := _T
1382 [-]: GETTABLE  R62 R62 K187 ; R62 := R62["MenuSentinel"]
1383 [-]: SELF      R62 R62 K189 ; R63 := R62; R62 := R62[0xd749da12]
1384 [-]: LOADBOOL  R64 0 0      ; R64 := false
1385 [-]: CALL      R62 3 1      ; R62(R63,R64)
1386 [-]: GETGLOBAL R62 K5       ; R62 := _T
1387 [-]: GETTABLE  R62 R62 K190 ; R62 := R62["InSimulacrum"]
1388 [-]: TEST      R62 0        ; if not R62 then PC := 1409
1389 [-]: JMP       1409         ; PC := 1409
1390 [-]: GETGLOBAL R62 K5       ; R62 := _T
1391 [-]: GETTABLE  R62 R62 K187 ; R62 := R62["MenuSentinel"]
1392 [-]: SELF      R62 R62 K191 ; R63 := R62; R62 := R62[0x23d6100a]
1393 [-]: LOADBOOL  R64 0 0      ; R64 := false
1394 [-]: CALL      R62 3 1      ; R62(R63,R64)
1395 [-]: GETGLOBAL R62 K5       ; R62 := _T
1396 [-]: GETTABLE  R62 R62 K187 ; R62 := R62["MenuSentinel"]
1397 [-]: SELF      R62 R62 K52  ; R63 := R62; R62 := R62[0xde321e6f]
1398 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1399 [-]: SELF      R62 R62 K192 ; R63 := R62; R62 := R62[0xf7d48ee0]
1400 [-]: CALL      R62 2 2      ; R62 := R62(R63)
1401 [-]: GETGLOBAL R63 K0       ; R63 := 0x7b998233
1402 [-]: MOVE      R64 R62      ; R64 := R62
1403 [-]: CALL      R63 2 2      ; R63 := R63(R64)
1404 [-]: TEST      R63 1        ; if R63 then PC := 1409
1405 [-]: JMP       1409         ; PC := 1409
1406 [-]: SELF      R63 R62 K193 ; R64 := R62; R63 := R62[0x1bf26251]
1407 [-]: LOADBOOL  R65 0 0      ; R65 := false
1408 [-]: CALL      R63 3 1      ; R63(R64,R65)
1409 [-]: GETGLOBAL R63 K1       ; R63 := 0x25d99d89
1410 [-]: SELF      R63 R63 K194 ; R64 := R63; R63 := R63[0x121ec068]
1411 [-]: CALL      R63 2 1      ; R63(R64)
1412 [-]: NEWTABLE  R63 0 0      ; R63 := {}
1413 [-]: GETGLOBAL R64 K72      ; R64 := mLists
1414 [-]: GETTABLE  R64 R64 K73  ; R64 := R64["mLoadOutList"]
1415 [-]: SELF      R64 R64 K74  ; R65 := R64; R64 := R64[0xea061e98]
1416 [-]: CLOSURE   R66 0        ; R66 := closure(Function #102.1)
1417 [-]: MOVE      R0 R63       ; R0 := R63
1418 [-]: CALL      R64 3 1      ; R64(R65,R66)
1419 [-]: GETGLOBAL R64 K125     ; R64 := mLoaders
1420 [-]: GETTABLE  R64 R64 K195 ; R64 := R64["mSlotLoader"]
1421 [-]: SELF      R64 R64 K196 ; R65 := R64; R64 := R64[0x4a749835]
1422 [-]: MOVE      R66 R63      ; R66 := R63
1423 [-]: CALL      R64 3 1      ; R64(R65,R66)
1424 [-]: TEST      R1 1         ; if R1 then PC := 1436
1425 [-]: JMP       1436         ; PC := 1436
1426 [-]: GETGLOBAL R64 K197     ; R64 := mPendingRandomizeInfo
1427 [-]: GETTABLE  R64 R64 K198 ; R64 := R64["Items"]
1428 [-]: LEN       R64 R64      ; R64 := # R64
1429 [-]: EQ        0 R64 K61    ; if R64 ~= 0.000000 then PC := 1436
1430 [-]: JMP       1436         ; PC := 1436
1431 [-]: GETUPVAL  R64 U5       ; R64 := U5
1432 [-]: GETTABLE  R64 R64 K199 ; R64 := R64[0x659d451f]
1433 [-]: GETGLOBAL R65 K200     ; R65 := 0x0032441c
1434 [-]: GETTABLE  R65 R65 K201 ; R65 := R65["UISound_SweetenerTwo"]
1435 [-]: CALL      R64 2 1      ; R64(R65)
1436 [-]: RETURN    R0 1         ; return 


; Function #102.1:
;
; Name:            
; Defined at line: 6029
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutId"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 30
  3 [-]: JMP       30           ; PC := 30
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["StoreItemId"]
  5 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 30
  6 [-]: JMP       30           ; PC := 30
  7 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["UID"]
  8 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 30
  9 [-]: JMP       30           ; PC := 30
 10 [-]: GETGLOBAL R1 K4        ; R1 := 0x25d99d89
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xd08c3966]
 12 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["UID"]
 13 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["LoadOutType"]
 14 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["LoadOutId"]
 15 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["StoreItemId"]
 16 [-]: CALL      R1 6 2       ; R1 := R1(R2,R3,R4,R5,R6)
 17 [-]: GETGLOBAL R2 K7        ; R2 := 0xc8802016
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R7 K8        ; R7 := 0x33bdd652
 22 [-]: GETTABLE  R7 R7 K9     ; R7 := R7[0x23d5322f]
 23 [-]: GETUPVAL  R8 U0        ; R8 := U0
 24 [-]: GETGLOBAL R9 K10       ; R9 := 0x88efc25e
 25 [-]: MOVE      R10 R6       ; R10 := R6
 26 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 27 [-]: CALL      R7 0 1       ; R7(R8,...)
 28 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 21; R4 := R5 end
 29 [-]: JMP       21           ; PC := 21
 30 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 6044
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mCurrentLoadout
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["LoadOutType"]
  5 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  6 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x2abbe722]
  7 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
  9 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["LoadOutId"]
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["mItemId"]
 14 [-]: SETTABLE  R2 K7 K8     ; R2["mId"] := ""
 15 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 17 [-]: GETGLOBAL R3 K10       ; R3 := 0x6c97a788
 18 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["InvalidItemID"]
 19 [-]: SETTABLE  R2 K9 R3     ; R2["UID"] := R3
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 22 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 23 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 24 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["Item"]
 25 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["RawItem"]
 26 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UID"]
 27 [-]: SETTABLE  R2 K9 R3     ; R2["UID"] := R3
 28 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["mItemId"]
 29 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 30 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["Item"]
 31 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["RawItem"]
 32 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UID"]
 33 [-]: SETTABLE  R2 K7 R3     ; R2["mId"] := R3
 34 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 35 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 36 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["mModSlot"]
 37 [-]: SETTABLE  R1 K14 R2    ; R1["mModSlot"] := R2
 38 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 39 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 40 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mCustSlot"]
 41 [-]: SETTABLE  R1 K15 R2    ; R1["mCustSlot"] := R2
 42 [-]: GETGLOBAL R2 K0        ; R2 := mCurrentLoadout
 43 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 44 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 45 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["LoadOutType"]
 46 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 47 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xffca321e]
 48 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 49 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 50 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["LoadOutId"]
 51 [-]: MOVE      R5 R1        ; R5 := R1
 52 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 53 [-]: GETGLOBAL R2 K17       ; R2 := mInventory
 54 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0x6beb8ae1]
 55 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 56 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 57 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["LoadOutType"]
 58 [-]: GETGLOBAL R5 K0        ; R5 := mCurrentLoadout
 59 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
 60 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
 61 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["LoadOutType"]
 62 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 63 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 64 [-]: GETGLOBAL R2 K19       ; R2 := 0x25d99d89
 65 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2[0x400b84a1]
 66 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 67 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 68 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["LoadOutType"]
 69 [-]: GETGLOBAL R5 K0        ; R5 := mCurrentLoadout
 70 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
 71 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
 72 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["LoadOutType"]
 73 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 74 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 75 [-]: GETUPVAL  R2 U0        ; R2 := U0
 76 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 77 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 78 [-]: CALL      R2 2 1       ; R2(R3)
 79 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 6064
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: EQ        0 R0 K2      ; if R0 ~= 4.000000 then PC := 23
  6 [-]: JMP       23           ; PC := 23
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x42b04007]
  9 [-]: LOADK     R3 K5        ; R3 := "/Lotus/Language/Menu/ConfirmRoamPet"
 10 [-]: LOADBOOL  R4 0 0       ; R4 := false
 11 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 12 [-]: GETGLOBAL R6 K7        ; R6 := mSelected
 13 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Item"]
 14 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Name"]
 15 [-]: SETTABLE  R5 K6 R6     ; R5["NAME"] := R6
 16 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0xdedfded7]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: LOADK     R4 K11       ; R4 := "ConfirmRoamPet"
 21 [-]: CALL      R2 3 1       ; R2(R3,R4)
 22 [-]: JMP       40           ; PC := 40
 23 [-]: EQ        0 R0 K12     ; if R0 ~= 6.000000 then PC := 40
 24 [-]: JMP       40           ; PC := 40
 25 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 26 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x42b04007]
 27 [-]: LOADK     R4 K13       ; R4 := "/Lotus/Language/Menu/ConfirmMaturePet"
 28 [-]: LOADBOOL  R5 0 0       ; R5 := false
 29 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 30 [-]: GETGLOBAL R7 K7        ; R7 := mSelected
 31 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["Item"]
 32 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["Name"]
 33 [-]: SETTABLE  R6 K6 R7     ; R6["NAME"] := R7
 34 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[0xdedfded7]
 37 [-]: MOVE      R4 R2        ; R4 := R2
 38 [-]: LOADK     R5 K14       ; R5 := "ConfirmMaturePet"
 39 [-]: CALL      R3 3 1       ; R3(R4,R5)
 40 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 6077
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: EQ        0 R0 K2      ; if R0 ~= 4.000000 then PC := 60
  6 [-]: JMP       60           ; PC := 60
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETGLOBAL R1 K4        ; R1 := mSelected
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Item"]
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["RawItem"]
 15 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["UID"]
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mItemId"]
 18 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mId"]
 19 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 29
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETGLOBAL R1 K10       ; R1 := 0x25d99d89
 22 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xd03a1fb0]
 23 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 24 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Item"]
 25 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["RawItem"]
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UID"]
 27 [-]: LOADK     R4 K12       ; R4 := "OnRetrievePetFromStasisResults"
 28 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 29 [-]: GETGLOBAL R1 K10       ; R1 := 0x25d99d89
 30 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x3c6b0324]
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 0         ; if not R1 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETUPVAL  R1 U1        ; R1 := U1
 35 [-]: LOADBOOL  R2 1 0       ; R2 := true
 36 [-]: CALL      R1 2 1       ; R1(R2)
 37 [-]: GETGLOBAL R1 K14       ; R1 := 0xe7f2b02f
 38 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0xcf1bf52a]
 39 [-]: CALL      R1 2 1       ; R1(R2)
 40 [-]: GETGLOBAL R1 K16       ; R1 := mLists
 41 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["mLoadOutList"]
 42 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1[0xea061e98]
 43 [-]: GETGLOBAL R3 K16       ; R3 := mLists
 44 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["mLoadOutList"]
 45 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["mElementDrawCallback"]
 46 [-]: CALL      R1 3 1       ; R1(R2,R3)
 47 [-]: GETUPVAL  R1 U2        ; R1 := U2
 48 [-]: GETUPVAL  R2 U3        ; R2 := U3
 49 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["SELECTING_PART"]
 50 [-]: CALL      R1 2 1       ; R1(R2)
 51 [-]: GETGLOBAL R1 K16       ; R1 := mLists
 52 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["mLoadOutList"]
 53 [-]: GETTABLE  R1 R1 K21    ; R1 := R1[0xad85f085]
 54 [-]: GETGLOBAL R2 K4        ; R2 := mSelected
 55 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["Element"]
 56 [-]: CALL      R1 2 1       ; R1(R2)
 57 [-]: GETUPVAL  R1 U4        ; R1 := U4
 58 [-]: LOADBOOL  R2 0 0       ; R2 := false
 59 [-]: CALL      R1 2 1       ; R1(R2)
 60 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 6097
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: EQ        0 R0 K2      ; if R0 ~= 4.000000 then PC := 64
  6 [-]: JMP       64           ; PC := 64
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETGLOBAL R1 K4        ; R1 := mSelected
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Item"]
 16 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["RawItem"]
 17 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["UID"]
 18 [-]: GETUPVAL  R2 U1        ; R2 := U1
 19 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mItemId"]
 20 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mId"]
 21 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 34
 22 [-]: JMP       34           ; PC := 34
 23 [-]: GETGLOBAL R1 K10       ; R1 := _T
 24 [-]: SETTABLE  R1 K11 K12   ; R1["maturePet"] := true
 25 [-]: GETGLOBAL R1 K13       ; R1 := 0x25d99d89
 26 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0xd03a1fb0]
 27 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 28 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Item"]
 29 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["RawItem"]
 30 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UID"]
 31 [-]: LOADK     R4 K15       ; R4 := "OnRetrievePetFromStasisResults"
 32 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R1 K13       ; R1 := 0x25d99d89
 35 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1[0x7ff980d7]
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mItemId"]
 38 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mId"]
 39 [-]: LOADK     R4 K17       ; R4 := "OnMaturePetResults"
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K18       ; R1 := 0xe7f2b02f
 42 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1[0xcf1bf52a]
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: GETGLOBAL R1 K20       ; R1 := mLists
 45 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["mLoadOutList"]
 46 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0xea061e98]
 47 [-]: GETGLOBAL R3 K20       ; R3 := mLists
 48 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["mLoadOutList"]
 49 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["mElementDrawCallback"]
 50 [-]: CALL      R1 3 1       ; R1(R2,R3)
 51 [-]: GETUPVAL  R1 U2        ; R1 := U2
 52 [-]: GETUPVAL  R2 U3        ; R2 := U3
 53 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["SELECTING_PART"]
 54 [-]: CALL      R1 2 1       ; R1(R2)
 55 [-]: GETGLOBAL R1 K20       ; R1 := mLists
 56 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["mLoadOutList"]
 57 [-]: GETTABLE  R1 R1 K25    ; R1 := R1[0xad85f085]
 58 [-]: GETGLOBAL R2 K4        ; R2 := mSelected
 59 [-]: GETTABLE  R2 R2 K26    ; R2 := R2["Element"]
 60 [-]: CALL      R1 2 1       ; R1(R2)
 61 [-]: GETUPVAL  R1 U4        ; R1 := U4
 62 [-]: LOADBOOL  R2 0 0       ; R2 := false
 63 [-]: CALL      R1 2 1       ; R1(R2)
 64 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 6118
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInventory
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xa855881a]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: LOADK     R1 1         ; R1 := 1.000000
  5 [-]: LEN       R2 R0        ; R2 := # R0
  6 [-]: LOADK     R3 1         ; R3 := 1.000000
  7 [-]: FORPREP   R1 32        ; R1 -= R3; PC := 32
  8 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
  9 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mDetails"]
 10 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["mStatus"]
 11 [-]: EQ        0 R5 K5      ; if R5 ~= 2.000000 then PC := 32
 12 [-]: JMP       32           ; PC := 32
 13 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 14 [-]: SETUPVAL  R5 U0        ; U82 := R0
 15 [-]: GETUPVAL  R5 U1        ; R5 := U1
 16 [-]: GETUPVAL  R6 U2        ; R6 := U2
 17 [-]: LOADK     R7 1         ; R7 := 1.000000
 18 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 19 [-]: SETTABLE  R5 K6 R6     ; R5["petAvatar"] := R6
 20 [-]: GETGLOBAL R5 K7        ; R5 := 0x7b998233
 21 [-]: GETUPVAL  R6 U1        ; R6 := U1
 22 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["petAvatar"]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: TEST      R5 1         ; if R5 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETUPVAL  R5 U1        ; R5 := U1
 27 [-]: GETUPVAL  R6 U1        ; R6 := U1
 28 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["petAvatar"]
 29 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6[0xfa9e477f]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: SETTABLE  R5 K8 R6     ; R5["petAgent"] := R6
 32 [-]: FORLOOP   R1 8         ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
 33 [-]: GETGLOBAL R5 K7        ; R5 := 0x7b998233
 34 [-]: GETGLOBAL R6 K10       ; R6 := _T
 35 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["MenuSuitAvatar"]
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: TEST      R5 1         ; if R5 then PC := 47
 38 [-]: JMP       47           ; PC := 47
 39 [-]: GETGLOBAL R5 K10       ; R5 := _T
 40 [-]: GETGLOBAL R6 K10       ; R6 := _T
 41 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["MenuSuitAvatar"]
 42 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xde321e6f]
 43 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 44 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x2676deee]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: SETTABLE  R5 K12 R6    ; R5["MenuSentinel"] := R6
 47 [-]: GETGLOBAL R5 K7        ; R5 := 0x7b998233
 48 [-]: GETGLOBAL R6 K10       ; R6 := _T
 49 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["MenuSentinel"]
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: TEST      R5 1         ; if R5 then PC := 81
 52 [-]: JMP       81           ; PC := 81
 53 [-]: GETGLOBAL R5 K10       ; R5 := _T
 54 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MenuSentinel"]
 55 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0xd749da12]
 56 [-]: LOADBOOL  R7 0 0       ; R7 := false
 57 [-]: CALL      R5 3 1       ; R5(R6,R7)
 58 [-]: GETGLOBAL R5 K10       ; R5 := _T
 59 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["InSimulacrum"]
 60 [-]: TEST      R5 0         ; if not R5 then PC := 81
 61 [-]: JMP       81           ; PC := 81
 62 [-]: GETGLOBAL R5 K10       ; R5 := _T
 63 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MenuSentinel"]
 64 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5[0x23d6100a]
 65 [-]: LOADBOOL  R7 0 0       ; R7 := false
 66 [-]: CALL      R5 3 1       ; R5(R6,R7)
 67 [-]: GETGLOBAL R5 K10       ; R5 := _T
 68 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MenuSentinel"]
 69 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xde321e6f]
 70 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 71 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xf7d48ee0]
 72 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 73 [-]: GETGLOBAL R6 K7        ; R6 := 0x7b998233
 74 [-]: MOVE      R7 R5        ; R7 := R5
 75 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 76 [-]: TEST      R6 1         ; if R6 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: SELF      R6 R5 K19    ; R7 := R5; R6 := R5[0x1bf26251]
 79 [-]: LOADBOOL  R8 0 0       ; R8 := false
 80 [-]: CALL      R6 3 1       ; R6(R7,R8)
 81 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 6148
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xe0cba3ca]
  8 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/CraftingErrorText_UnknownError"
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: JMP       29           ; PC := 29
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x5f6897e6]
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 15 [-]: GETUPVAL  R3 U2        ; R3 := U2
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 1         ; if R2 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R2 U3        ; R2 := U3
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: GETUPVAL  R4 U2        ; R4 := U2
 22 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mItemType"]
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x659d451f]
 26 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["UISound_SweetenerTwo"]
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 6161
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xe0cba3ca]
  8 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/CraftingErrorText_UnknownError"
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: JMP       37           ; PC := 37
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0xa9882367]
 13 [-]: LOADK     R3 K4        ; R3 := "CheckPetReadyScriptTrigger"
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0xd91e1179]
 21 [-]: CALL      R3 2 1       ; R3(R4)
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: CALL      R3 1 1       ; R3()
 24 [-]: GETGLOBAL R3 K7        ; R3 := _T
 25 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["maturePet"]
 26 [-]: TEST      R3 0         ; if not R3 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: GETGLOBAL R3 K9        ; R3 := 0x25d99d89
 29 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x7ff980d7]
 30 [-]: GETUPVAL  R5 U2        ; R5 := U2
 31 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mItemId"]
 32 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["mId"]
 33 [-]: LOADK     R6 K13       ; R6 := "OnMaturePetResults"
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: GETGLOBAL R3 K7        ; R3 := _T
 36 [-]: SETTABLE  R3 K8 K14    ; R3["maturePet"] := nil
 37 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 6180
; #Upvalues:       9
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  78

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  3 [-]: GETGLOBAL R4 K0        ; R4 := mPlayerProfile
  4 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x537ac148]
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: NEWTABLE  R5 0 0       ; R5 := {}
  7 [-]: NEWTABLE  R6 0 1       ; R6 := {}
  8 [-]: CLOSURE   R7 0         ; R7 := closure(Function #110.1)
  9 [-]: SETTABLE  R6 K2 R7     ; R6["GetID"] := R7
 10 [-]: EQ        1 R0 K4      ; if R0 == 0.000000 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: EQ        0 R0 K5      ; if R0 ~= 3.000000 then PC := 63
 13 [-]: JMP       63           ; PC := 63
 14 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 17 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0x21a3da0c]
 18 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 19 [-]: MOVE      R2 R7        ; R2 := R7
 20 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["mPowerSuits"]
 21 [-]: JMP       484          ; PC := 484
 22 [-]: EQ        0 R1 K5      ; if R1 ~= 3.000000 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 25 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0x0bf14f02]
 26 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 27 [-]: MOVE      R2 R7        ; R2 := R7
 28 [-]: GETTABLE  R5 R4 K10    ; R5 := R4["mMeleeWeapons"]
 29 [-]: JMP       484          ; PC := 484
 30 [-]: EQ        0 R1 K11     ; if R1 ~= 2.000000 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 33 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0x57d88957]
 34 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 35 [-]: MOVE      R2 R7        ; R2 := R7
 36 [-]: GETTABLE  R5 R4 K13    ; R5 := R4["mLongGuns"]
 37 [-]: JMP       484          ; PC := 484
 38 [-]: EQ        0 R1 K14     ; if R1 ~= 1.000000 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 41 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7[0x215bf396]
 42 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 43 [-]: MOVE      R2 R7        ; R2 := R7
 44 [-]: GETTABLE  R5 R4 K16    ; R5 := R4["mPistols"]
 45 [-]: JMP       484          ; PC := 484
 46 [-]: EQ        0 R1 K17     ; if R1 ~= 4.000000 then PC := 54
 47 [-]: JMP       54           ; PC := 54
 48 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 49 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x6f7b67d7]
 50 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 51 [-]: MOVE      R2 R7        ; R2 := R7
 52 [-]: GETTABLE  R5 R4 K19    ; R5 := R4["mSpaceGuns"]
 53 [-]: JMP       484          ; PC := 484
 54 [-]: EQ        1 R1 K20     ; if R1 == 5.000000 then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: EQ        0 R1 K21     ; if R1 ~= 6.000000 then PC := 484
 57 [-]: JMP       484          ; PC := 484
 58 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 59 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0x375c296b]
 60 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 61 [-]: MOVE      R2 R7        ; R2 := R7
 62 [-]: JMP       484          ; PC := 484
 63 [-]: EQ        0 R0 K14     ; if R0 ~= 1.000000 then PC := 317
 64 [-]: JMP       317          ; PC := 317
 65 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 311
 66 [-]: JMP       311          ; PC := 311
 67 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 68 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7[0x2a207127]
 69 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 70 [-]: MOVE      R2 R7        ; R2 := R7
 71 [-]: GETTABLE  R5 R4 K24    ; R5 := R4["mSentinels"]
 72 [-]: TEST      R2 1         ; if R2 then PC := 76
 73 [-]: JMP       76           ; PC := 76
 74 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 75 [-]: MOVE      R2 R7        ; R2 := R7
 76 [-]: TEST      R5 1         ; if R5 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 79 [-]: MOVE      R5 R7        ; R5 := R7
 80 [-]: GETGLOBAL R7 K6        ; R7 := mInventory
 81 [-]: SELF      R7 R7 K25    ; R8 := R7; R7 := R7[0x91a3eddf]
 82 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 83 [-]: LOADK     R8 1         ; R8 := 1.000000
 84 [-]: LEN       R9 R7        ; R9 := # R7
 85 [-]: LOADK     R10 1        ; R10 := 1.000000
 86 [-]: FORPREP   R8 92        ; R8 -= R10; PC := 92
 87 [-]: GETGLOBAL R12 K26      ; R12 := 0x33bdd652
 88 [-]: GETTABLE  R12 R12 K27  ; R12 := R12[0x23d5322f]
 89 [-]: MOVE      R13 R2       ; R13 := R2
 90 [-]: GETTABLE  R14 R7 R11   ; R14 := R7[R11]
 91 [-]: CALL      R12 3 1      ; R12(R13,R14)
 92 [-]: FORLOOP   R8 87        ; R8 += R10; if R8 <= R9 then begin PC := 87; R11 := R8 end
 93 [-]: GETTABLE  R12 R4 K28   ; R12 := R4["mMoaPets"]
 94 [-]: LOADK     R13 1        ; R13 := 1.000000
 95 [-]: LEN       R14 R12      ; R14 := # R12
 96 [-]: LOADK     R15 1        ; R15 := 1.000000
 97 [-]: FORPREP   R13 103      ; R13 -= R15; PC := 103
 98 [-]: GETGLOBAL R17 K26      ; R17 := 0x33bdd652
 99 [-]: GETTABLE  R17 R17 K27  ; R17 := R17[0x23d5322f]
100 [-]: MOVE      R18 R5       ; R18 := R5
101 [-]: GETTABLE  R19 R12 R16  ; R19 := R12[R16]
102 [-]: CALL      R17 3 1      ; R17(R18,R19)
103 [-]: FORLOOP   R13 98       ; R13 += R15; if R13 <= R14 then begin PC := 98; R16 := R13 end
104 [-]: GETTABLE  R17 R4 K29   ; R17 := R4["mKubrowPets"]
105 [-]: LOADK     R18 1        ; R18 := 1.000000
106 [-]: LEN       R19 R17      ; R19 := # R17
107 [-]: LOADK     R20 1        ; R20 := 1.000000
108 [-]: FORPREP   R18 114      ; R18 -= R20; PC := 114
109 [-]: GETGLOBAL R22 K26      ; R22 := 0x33bdd652
110 [-]: GETTABLE  R22 R22 K27  ; R22 := R22[0x23d5322f]
111 [-]: MOVE      R23 R5       ; R23 := R5
112 [-]: GETTABLE  R24 R17 R21  ; R24 := R17[R21]
113 [-]: CALL      R22 3 1      ; R22(R23,R24)
114 [-]: FORLOOP   R18 109      ; R18 += R20; if R18 <= R19 then begin PC := 109; R21 := R18 end
115 [-]: GETGLOBAL R22 K6       ; R22 := mInventory
116 [-]: SELF      R22 R22 K30  ; R23 := R22; R22 := R22[0xa855881a]
117 [-]: CALL      R22 2 2      ; R22 := R22(R23)
118 [-]: LOADBOOL  R23 0 0      ; R23 := false
119 [-]: LOADBOOL  R24 0 0      ; R24 := false
120 [-]: LOADK     R25 1        ; R25 := 1.000000
121 [-]: LEN       R26 R22      ; R26 := # R22
122 [-]: LOADK     R27 1        ; R27 := 1.000000
123 [-]: FORPREP   R25 144      ; R25 -= R27; PC := 144
124 [-]: GETTABLE  R29 R22 R28  ; R29 := R22[R28]
125 [-]: GETTABLE  R29 R29 K31  ; R29 := R29["mDetails"]
126 [-]: GETTABLE  R29 R29 K32  ; R29 := R29["mStatus"]
127 [-]: EQ        1 R29 K4     ; if R29 == 0.000000 then PC := 134
128 [-]: JMP       134          ; PC := 134
129 [-]: GETTABLE  R29 R22 R28  ; R29 := R22[R28]
130 [-]: GETTABLE  R29 R29 K31  ; R29 := R29["mDetails"]
131 [-]: GETTABLE  R29 R29 K32  ; R29 := R29["mStatus"]
132 [-]: EQ        0 R29 K14    ; if R29 ~= 1.000000 then PC := 137
133 [-]: JMP       137          ; PC := 137
134 [-]: LOADBOOL  R23 1 0      ; R23 := true
135 [-]: JMP       145          ; PC := 145
136 [-]: JMP       144          ; PC := 144
137 [-]: GETTABLE  R29 R22 R28  ; R29 := R22[R28]
138 [-]: GETTABLE  R29 R29 K31  ; R29 := R29["mDetails"]
139 [-]: GETTABLE  R29 R29 K32  ; R29 := R29["mStatus"]
140 [-]: EQ        0 R29 K17    ; if R29 ~= 4.000000 then PC := 144
141 [-]: JMP       144          ; PC := 144
142 [-]: LOADBOOL  R24 1 0      ; R24 := true
143 [-]: JMP       145          ; PC := 145
144 [-]: FORLOOP   R25 124      ; R25 += R27; if R25 <= R26 then begin PC := 124; R28 := R25 end
145 [-]: LOADK     R29 1        ; R29 := 1.000000
146 [-]: LEN       R30 R22      ; R30 := # R22
147 [-]: LOADK     R31 1        ; R31 := 1.000000
148 [-]: FORPREP   R29 309      ; R29 -= R31; PC := 309
149 [-]: GETTABLE  R33 R22 R32  ; R33 := R22[R32]
150 [-]: GETTABLE  R33 R33 K31  ; R33 := R33["mDetails"]
151 [-]: GETTABLE  R33 R33 K32  ; R33 := R33["mStatus"]
152 [-]: EQ        1 R33 K4     ; if R33 == 0.000000 then PC := 309
153 [-]: JMP       309          ; PC := 309
154 [-]: GETTABLE  R33 R22 R32  ; R33 := R22[R32]
155 [-]: GETTABLE  R33 R33 K31  ; R33 := R33["mDetails"]
156 [-]: GETTABLE  R33 R33 K32  ; R33 := R33["mStatus"]
157 [-]: EQ        1 R33 K14    ; if R33 == 1.000000 then PC := 309
158 [-]: JMP       309          ; PC := 309
159 [-]: GETTABLE  R33 R22 R32  ; R33 := R22[R32]
160 [-]: GETTABLE  R33 R33 K31  ; R33 := R33["mDetails"]
161 [-]: GETTABLE  R33 R33 K32  ; R33 := R33["mStatus"]
162 [-]: EQ        1 R33 K17    ; if R33 == 4.000000 then PC := 309
163 [-]: JMP       309          ; PC := 309
164 [-]: GETTABLE  R33 R22 R32  ; R33 := R22[R32]
165 [-]: GETTABLE  R33 R33 K31  ; R33 := R33["mDetails"]
166 [-]: GETTABLE  R33 R33 K33  ; R33 := R33["mIsPuppy"]
167 [-]: TEST      R33 0        ; if not R33 then PC := 174
168 [-]: JMP       174          ; PC := 174
169 [-]: GETUPVAL  R33 U0       ; R33 := U0
170 [-]: GETUPVAL  R34 U1       ; R34 := U1
171 [-]: GETTABLE  R34 R34 K34  ; R34 := R34["UI_MODE_IN_SPACE_SHIP"]
172 [-]: EQ        0 R33 R34    ; if R33 ~= R34 then PC := 309
173 [-]: JMP       309          ; PC := 309
174 [-]: GETTABLE  R33 R22 R32  ; R33 := R22[R32]
175 [-]: GETTABLE  R33 R33 K31  ; R33 := R33["mDetails"]
176 [-]: GETTABLE  R33 R33 K32  ; R33 := R33["mStatus"]
177 [-]: EQ        0 R33 K11    ; if R33 ~= 2.000000 then PC := 198
178 [-]: JMP       198          ; PC := 198
179 [-]: GETTABLE  R33 R22 R32  ; R33 := R22[R32]
180 [-]: SETUPVAL  R33 U2       ; U82 := R2
181 [-]: GETUPVAL  R33 U3       ; R33 := U3
182 [-]: GETUPVAL  R34 U4       ; R34 := U4
183 [-]: LOADK     R35 1        ; R35 := 1.000000
184 [-]: CALL      R34 2 2      ; R34 := R34(R35)
185 [-]: SETTABLE  R33 K35 R34  ; R33["petAvatar"] := R34
186 [-]: GETGLOBAL R33 K36      ; R33 := 0x7b998233
187 [-]: GETUPVAL  R34 U3       ; R34 := U3
188 [-]: GETTABLE  R34 R34 K35  ; R34 := R34["petAvatar"]
189 [-]: CALL      R33 2 2      ; R33 := R33(R34)
190 [-]: TEST      R33 1        ; if R33 then PC := 198
191 [-]: JMP       198          ; PC := 198
192 [-]: GETUPVAL  R33 U3       ; R33 := U3
193 [-]: GETUPVAL  R34 U3       ; R34 := U3
194 [-]: GETTABLE  R34 R34 K35  ; R34 := R34["petAvatar"]
195 [-]: SELF      R34 R34 K38  ; R35 := R34; R34 := R34[0xfa9e477f]
196 [-]: CALL      R34 2 2      ; R34 := R34(R35)
197 [-]: SETTABLE  R33 K37 R34  ; R33["petAgent"] := R34
198 [-]: GETTABLE  R33 R22 R32  ; R33 := R22[R32]
199 [-]: GETTABLE  R33 R33 K31  ; R33 := R33["mDetails"]
200 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mName"]
201 [-]: GETTABLE  R34 R22 R32  ; R34 := R22[R32]
202 [-]: GETTABLE  R34 R34 K31  ; R34 := R34["mDetails"]
203 [-]: SELF      R34 R34 K40  ; R35 := R34; R34 := R34[0x4d3e1844]
204 [-]: CALL      R34 2 2      ; R34 := R34(R35)
205 [-]: TEST      R34 0        ; if not R34 then PC := 231
206 [-]: JMP       231          ; PC := 231
207 [-]: GETGLOBAL R34 K36      ; R34 := 0x7b998233
208 [-]: GETTABLE  R35 R22 R32  ; R35 := R22[R32]
209 [-]: GETTABLE  R35 R35 K41  ; R35 := R35["mItemType"]
210 [-]: CALL      R34 2 2      ; R34 := R34(R35)
211 [-]: TEST      R34 1        ; if R34 then PC := 231
212 [-]: JMP       231          ; PC := 231
213 [-]: GETUPVAL  R34 U5       ; R34 := U5
214 [-]: GETTABLE  R35 R22 R32  ; R35 := R22[R32]
215 [-]: GETTABLE  R35 R35 K41  ; R35 := R35["mItemType"]
216 [-]: CALL      R34 2 2      ; R34 := R34(R35)
217 [-]: GETGLOBAL R35 K36      ; R35 := 0x7b998233
218 [-]: MOVE      R36 R34      ; R36 := R34
219 [-]: CALL      R35 2 2      ; R35 := R35(R36)
220 [-]: TEST      R35 1        ; if R35 then PC := 231
221 [-]: JMP       231          ; PC := 231
222 [-]: GETGLOBAL R35 K42      ; R35 := 0xae91e43b
223 [-]: SELF      R35 R35 K43  ; R36 := R35; R35 := R35[0x42b04007]
224 [-]: GETGLOBAL R37 K44      ; R37 := 0x64fb1586
225 [-]: SELF      R38 R34 K45  ; R39 := R34; R38 := R34[0xd3a9d01f]
226 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
227 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
228 [-]: LOADBOOL  R38 0 0      ; R38 := false
229 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
230 [-]: MOVE      R33 R35      ; R33 := R35
231 [-]: GETGLOBAL R35 K26      ; R35 := 0x33bdd652
232 [-]: GETTABLE  R35 R35 K27  ; R35 := R35[0x23d5322f]
233 [-]: MOVE      R36 R2       ; R36 := R2
234 [-]: GETTABLE  R37 R22 R32  ; R37 := R22[R32]
235 [-]: CALL      R35 3 1      ; R35(R36,R37)
236 [-]: NEWTABLE  R35 0 1      ; R35 := {}
237 [-]: SETTABLE  R35 K46 R33  ; R35["Name"] := R33
238 [-]: TEST      R23 0        ; if not R23 then PC := 248
239 [-]: JMP       248          ; PC := 248
240 [-]: GETGLOBAL R36 K42      ; R36 := 0xae91e43b
241 [-]: SELF      R36 R36 K43  ; R37 := R36; R36 := R36[0x42b04007]
242 [-]: LOADK     R38 K48      ; R38 := "/Lotus/Language/Menu/KubrowLockedDetails_Incubation"
243 [-]: LOADBOOL  R39 0 0      ; R39 := false
244 [-]: NEWTABLE  R40 0 0      ; R40 := {}
245 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
246 [-]: SETTABLE  R35 K47 R36  ; R35["LockDetail"] := R36
247 [-]: JMP       305          ; PC := 305
248 [-]: TEST      R24 0        ; if not R24 then PC := 258
249 [-]: JMP       258          ; PC := 258
250 [-]: GETGLOBAL R36 K42      ; R36 := 0xae91e43b
251 [-]: SELF      R36 R36 K43  ; R37 := R36; R36 := R36[0x42b04007]
252 [-]: LOADK     R38 K49      ; R38 := "/Lotus/Language/Pets/KubrowLockedDetails_Distilling"
253 [-]: LOADBOOL  R39 0 0      ; R39 := false
254 [-]: NEWTABLE  R40 0 0      ; R40 := {}
255 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
256 [-]: SETTABLE  R35 K47 R36  ; R35["LockDetail"] := R36
257 [-]: JMP       305          ; PC := 305
258 [-]: GETTABLE  R36 R22 R32  ; R36 := R22[R32]
259 [-]: GETTABLE  R36 R36 K31  ; R36 := R36["mDetails"]
260 [-]: GETTABLE  R36 R36 K33  ; R36 := R36["mIsPuppy"]
261 [-]: TEST      R36 0        ; if not R36 then PC := 275
262 [-]: JMP       275          ; PC := 275
263 [-]: GETGLOBAL R36 K42      ; R36 := 0xae91e43b
264 [-]: SELF      R36 R36 K43  ; R37 := R36; R36 := R36[0x42b04007]
265 [-]: LOADK     R38 K51      ; R38 := "/Lotus/Language/Menu/KubrowIsPuppy_Desc"
266 [-]: LOADBOOL  R39 0 0      ; R39 := false
267 [-]: NEWTABLE  R40 0 1      ; R40 := {}
268 [-]: SETTABLE  R40 K52 R33  ; R40["NAME"] := R33
269 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
270 [-]: SETTABLE  R35 K50 R36  ; R35["OptionDesc"] := R36
271 [-]: SETTABLE  R35 K53 K54  ; R35["FirstOption"] := "/Lotus/Language/Menu/KubrowDetails_Roam"
272 [-]: SETTABLE  R35 K55 K56  ; R35["SecondOption"] := "/Lotus/Language/Menu/KubrowDetails_Mature"
273 [-]: SETTABLE  R35 K57 K58  ; R35["Callback"] := "RoamOrMature"
274 [-]: JMP       305          ; PC := 305
275 [-]: GETTABLE  R36 R22 R32  ; R36 := R22[R32]
276 [-]: GETTABLE  R36 R36 K31  ; R36 := R36["mDetails"]
277 [-]: GETTABLE  R36 R36 K59  ; R36 := R36["mHasCollar"]
278 [-]: TEST      R36 1        ; if R36 then PC := 291
279 [-]: JMP       291          ; PC := 291
280 [-]: GETGLOBAL R36 K42      ; R36 := 0xae91e43b
281 [-]: SELF      R36 R36 K43  ; R37 := R36; R36 := R36[0x42b04007]
282 [-]: LOADK     R38 K60      ; R38 := "/Lotus/Language/Pets/KubrowNoCollar_Desc"
283 [-]: LOADBOOL  R39 0 0      ; R39 := false
284 [-]: NEWTABLE  R40 0 1      ; R40 := {}
285 [-]: SETTABLE  R40 K52 R33  ; R40["NAME"] := R33
286 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
287 [-]: SETTABLE  R35 K50 R36  ; R35["OptionDesc"] := R36
288 [-]: SETTABLE  R35 K53 K54  ; R35["FirstOption"] := "/Lotus/Language/Menu/KubrowDetails_Roam"
289 [-]: SETTABLE  R35 K57 K61  ; R35["Callback"] := "ConfirmRoamPet"
290 [-]: JMP       305          ; PC := 305
291 [-]: GETTABLE  R36 R22 R32  ; R36 := R22[R32]
292 [-]: GETTABLE  R36 R36 K31  ; R36 := R36["mDetails"]
293 [-]: GETTABLE  R36 R36 K32  ; R36 := R36["mStatus"]
294 [-]: EQ        0 R36 K17    ; if R36 ~= 4.000000 then PC := 305
295 [-]: JMP       305          ; PC := 305
296 [-]: SETTABLE  R35 K62 K63  ; R35["LockTag"] := "/Lotus/Language/Menu/KubrowLocked_Imprinting"
297 [-]: GETGLOBAL R36 K42      ; R36 := 0xae91e43b
298 [-]: SELF      R36 R36 K43  ; R37 := R36; R36 := R36[0x42b04007]
299 [-]: LOADK     R38 K64      ; R38 := "/Lotus/Language/Menu/KubrowLockedDetails_Imprinting"
300 [-]: LOADBOOL  R39 0 0      ; R39 := false
301 [-]: NEWTABLE  R40 0 1      ; R40 := {}
302 [-]: SETTABLE  R40 K52 R33  ; R40["NAME"] := R33
303 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
304 [-]: SETTABLE  R35 K47 R36  ; R35["LockDetail"] := R36
305 [-]: GETTABLE  R36 R22 R32  ; R36 := R22[R32]
306 [-]: GETTABLE  R36 R36 K65  ; R36 := R36["mItemId"]
307 [-]: GETTABLE  R36 R36 K66  ; R36 := R36["mId"]
308 [-]: SETTABLE  R3 R36 R35   ; R3[R36] := R35
309 [-]: FORLOOP   R29 149      ; R29 += R31; if R29 <= R30 then begin PC := 149; R32 := R29 end
310 [-]: JMP       484          ; PC := 484
311 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
312 [-]: SELF      R36 R36 K67  ; R37 := R36; R36 := R36[0xa2c6d8b7]
313 [-]: CALL      R36 2 2      ; R36 := R36(R37)
314 [-]: MOVE      R2 R36       ; R2 := R36
315 [-]: GETTABLE  R5 R4 K68    ; R5 := R4["mSentinelWeapons"]
316 [-]: JMP       484          ; PC := 484
317 [-]: EQ        0 R0 K11     ; if R0 ~= 2.000000 then PC := 343
318 [-]: JMP       343          ; PC := 343
319 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 327
320 [-]: JMP       327          ; PC := 327
321 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
322 [-]: SELF      R36 R36 K69  ; R37 := R36; R36 := R36[0x4bb8609a]
323 [-]: CALL      R36 2 2      ; R36 := R36(R37)
324 [-]: MOVE      R2 R36       ; R2 := R36
325 [-]: GETTABLE  R5 R4 K70    ; R5 := R4["mSpaceSuits"]
326 [-]: JMP       484          ; PC := 484
327 [-]: EQ        0 R1 K5      ; if R1 ~= 3.000000 then PC := 335
328 [-]: JMP       335          ; PC := 335
329 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
330 [-]: SELF      R36 R36 K71  ; R37 := R36; R36 := R36[0x3218c3b0]
331 [-]: CALL      R36 2 2      ; R36 := R36(R37)
332 [-]: MOVE      R2 R36       ; R2 := R36
333 [-]: GETTABLE  R5 R4 K72    ; R5 := R4["mSpaceMelee"]
334 [-]: JMP       484          ; PC := 484
335 [-]: EQ        0 R1 K11     ; if R1 ~= 2.000000 then PC := 484
336 [-]: JMP       484          ; PC := 484
337 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
338 [-]: SELF      R36 R36 K18  ; R37 := R36; R36 := R36[0x6f7b67d7]
339 [-]: CALL      R36 2 2      ; R36 := R36(R37)
340 [-]: MOVE      R2 R36       ; R2 := R36
341 [-]: GETTABLE  R5 R4 K19    ; R5 := R4["mSpaceGuns"]
342 [-]: JMP       484          ; PC := 484
343 [-]: EQ        0 R0 K17     ; if R0 ~= 4.000000 then PC := 352
344 [-]: JMP       352          ; PC := 352
345 [-]: EQ        0 R1 K5      ; if R1 ~= 3.000000 then PC := 484
346 [-]: JMP       484          ; PC := 484
347 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
348 [-]: SELF      R36 R36 K73  ; R37 := R36; R36 := R36[0x4fed7a1b]
349 [-]: CALL      R36 2 2      ; R36 := R36(R37)
350 [-]: MOVE      R2 R36       ; R2 := R36
351 [-]: JMP       484          ; PC := 484
352 [-]: EQ        0 R0 K21     ; if R0 ~= 6.000000 then PC := 363
353 [-]: JMP       363          ; PC := 363
354 [-]: GETUPVAL  R36 U6       ; R36 := U6
355 [-]: GETTABLE  R36 R36 K74  ; R36 := R36["KDriveSlot"]
356 [-]: EQ        0 R1 R36     ; if R1 ~= R36 then PC := 484
357 [-]: JMP       484          ; PC := 484
358 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
359 [-]: SELF      R36 R36 K75  ; R37 := R36; R36 := R36[0x738deb95]
360 [-]: CALL      R36 2 2      ; R36 := R36(R37)
361 [-]: MOVE      R2 R36       ; R2 := R36
362 [-]: JMP       484          ; PC := 484
363 [-]: EQ        0 R0 K76     ; if R0 ~= 7.000000 then PC := 372
364 [-]: JMP       372          ; PC := 372
365 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 484
366 [-]: JMP       484          ; PC := 484
367 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
368 [-]: SELF      R36 R36 K77  ; R37 := R36; R36 := R36[0x8d6f4300]
369 [-]: CALL      R36 2 2      ; R36 := R36(R37)
370 [-]: MOVE      R2 R36       ; R2 := R36
371 [-]: JMP       484          ; PC := 484
372 [-]: EQ        0 R0 K78     ; if R0 ~= 8.000000 then PC := 397
373 [-]: JMP       397          ; PC := 397
374 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 381
375 [-]: JMP       381          ; PC := 381
376 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
377 [-]: SELF      R36 R36 K79  ; R37 := R36; R36 := R36[0xfab085e3]
378 [-]: CALL      R36 2 2      ; R36 := R36(R37)
379 [-]: MOVE      R2 R36       ; R2 := R36
380 [-]: JMP       484          ; PC := 484
381 [-]: EQ        0 R1 K17     ; if R1 ~= 4.000000 then PC := 388
382 [-]: JMP       388          ; PC := 388
383 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
384 [-]: SELF      R36 R36 K18  ; R37 := R36; R36 := R36[0x6f7b67d7]
385 [-]: CALL      R36 2 2      ; R36 := R36(R37)
386 [-]: MOVE      R2 R36       ; R2 := R36
387 [-]: JMP       484          ; PC := 484
388 [-]: EQ        1 R1 K20     ; if R1 == 5.000000 then PC := 392
389 [-]: JMP       392          ; PC := 392
390 [-]: EQ        0 R1 K21     ; if R1 ~= 6.000000 then PC := 484
391 [-]: JMP       484          ; PC := 484
392 [-]: GETGLOBAL R36 K6       ; R36 := mInventory
393 [-]: SELF      R36 R36 K22  ; R37 := R36; R36 := R36[0x375c296b]
394 [-]: CALL      R36 2 2      ; R36 := R36(R37)
395 [-]: MOVE      R2 R36       ; R2 := R36
396 [-]: JMP       484          ; PC := 484
397 [-]: EQ        1 R1 K80     ; if R1 == "CONSUMABLES" then PC := 401
398 [-]: JMP       401          ; PC := 401
399 [-]: EQ        0 R1 K81     ; if R1 ~= "EMOTES" then PC := 484
400 [-]: JMP       484          ; PC := 484
401 [-]: GETUPVAL  R36 U7       ; R36 := U7
402 [-]: SELF      R36 R36 K82  ; R37 := R36; R36 := R36[0xe9cbffa8]
403 [-]: GETUPVAL  R38 U8       ; R38 := U8
404 [-]: GETTABLE  R38 R38 K83  ; R38 := R38[0x06d055f9]
405 [-]: EQ        1 R1 K80     ; if R1 == "CONSUMABLES" then PC := 408
406 [-]: JMP       408          ; PC := 408
407 [-]: LOADBOOL  R39 0 1      ; R39 := false; PC := 408
408 [-]: LOADBOOL  R39 1 0      ; R39 := true
409 [-]: GETGLOBAL R40 K84      ; R40 := gGearItemType
410 [-]: GETGLOBAL R41 K85      ; R41 := gEmoteType
411 [-]: CALL      R38 4 0      ; R38,... := R38(R39,R40,R41)
412 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
413 [-]: GETUPVAL  R37 U8       ; R37 := U8
414 [-]: GETTABLE  R37 R37 K83  ; R37 := R37[0x06d055f9]
415 [-]: EQ        1 R1 K80     ; if R1 == "CONSUMABLES" then PC := 418
416 [-]: JMP       418          ; PC := 418
417 [-]: LOADBOOL  R38 0 1      ; R38 := false; PC := 418
418 [-]: LOADBOOL  R38 1 0      ; R38 := true
419 [-]: GETGLOBAL R39 K6       ; R39 := mInventory
420 [-]: SELF      R39 R39 K86  ; R40 := R39; R39 := R39[0x51a64e2e]
421 [-]: CALL      R39 2 2      ; R39 := R39(R40)
422 [-]: GETGLOBAL R40 K6       ; R40 := mInventory
423 [-]: SELF      R40 R40 K87  ; R41 := R40; R40 := R40[0xd8dfa041]
424 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
425 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
426 [-]: NEWTABLE  R38 0 0      ; R38 := {}
427 [-]: MOVE      R2 R38       ; R2 := R38
428 [-]: GETGLOBAL R38 K36      ; R38 := 0x7b998233
429 [-]: MOVE      R39 R36      ; R39 := R36
430 [-]: CALL      R38 2 2      ; R38 := R38(R39)
431 [-]: TEST      R38 1        ; if R38 then PC := 484
432 [-]: JMP       484          ; PC := 484
433 [-]: GETGLOBAL R38 K88      ; R38 := 0xc8802016
434 [-]: MOVE      R39 R36      ; R39 := R36
435 [-]: CALL      R38 2 4      ; R38,R39,R40 := R38(R39)
436 [-]: JMP       482          ; PC := 482
437 [-]: SELF      R43 R42 K89  ; R44 := R42; R43 := R42[0x31e559d2]
438 [-]: CALL      R43 2 2      ; R43 := R43(R44)
439 [-]: GETUPVAL  R44 U8       ; R44 := U8
440 [-]: GETTABLE  R44 R44 K83  ; R44 := R44[0x06d055f9]
441 [-]: MOVE      R45 R43      ; R45 := R43
442 [-]: LOADK     R46 1        ; R46 := 1.000000
443 [-]: LOADK     R47 0        ; R47 := 0.000000
444 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
445 [-]: SELF      R45 R42 K90  ; R46 := R42; R45 := R42[0xf278f8a1]
446 [-]: CALL      R45 2 2      ; R45 := R45(R46)
447 [-]: TEST      R43 1        ; if R43 then PC := 461
448 [-]: JMP       461          ; PC := 461
449 [-]: GETGLOBAL R46 K88      ; R46 := 0xc8802016
450 [-]: MOVE      R47 R37      ; R47 := R37
451 [-]: CALL      R46 2 4      ; R46,R47,R48 := R46(R47)
452 [-]: JMP       459          ; PC := 459
453 [-]: GETTABLE  R51 R50 K41  ; R51 := R50["mItemType"]
454 [-]: EQ        0 R51 R45    ; if R51 ~= R45 then PC := 459
455 [-]: JMP       459          ; PC := 459
456 [-]: LOADBOOL  R43 1 0      ; R43 := true
457 [-]: GETTABLE  R44 R50 K91  ; R44 := R50["mItemCount"]
458 [-]: JMP       461          ; PC := 461
459 [-]: TFORLOOP  R46 2        ; R49,R50 :=  R46(R47,R48); if R49 ~= nil then begin PC = 453; R48 := R49 end
460 [-]: JMP       453          ; PC := 453
461 [-]: TEST      R43 0        ; if not R43 then PC := 482
462 [-]: JMP       482          ; PC := 482
463 [-]: EQ        0 R1 K80     ; if R1 ~= "CONSUMABLES" then PC := 471
464 [-]: JMP       471          ; PC := 471
465 [-]: GETUPVAL  R51 U1       ; R51 := U1
466 [-]: GETTABLE  R51 R51 K92  ; R51 := R51[0x3ed4ce26]
467 [-]: MOVE      R52 R45      ; R52 := R45
468 [-]: CALL      R51 2 2      ; R51 := R51(R52)
469 [-]: TEST      R51 1        ; if R51 then PC := 482
470 [-]: JMP       482          ; PC := 482
471 [-]: NEWTABLE  R51 0 2      ; R51 := {}
472 [-]: SETTABLE  R51 K41 R45  ; R51["mItemType"] := R45
473 [-]: SETTABLE  R51 K65 R6   ; R51["mItemId"] := R6
474 [-]: EQ        0 R1 K80     ; if R1 ~= "CONSUMABLES" then PC := 477
475 [-]: JMP       477          ; PC := 477
476 [-]: SETTABLE  R51 K91 R44  ; R51["mItemCount"] := R44
477 [-]: GETGLOBAL R52 K26      ; R52 := 0x33bdd652
478 [-]: GETTABLE  R52 R52 K27  ; R52 := R52[0x23d5322f]
479 [-]: MOVE      R53 R2       ; R53 := R2
480 [-]: MOVE      R54 R51      ; R54 := R51
481 [-]: CALL      R52 3 1      ; R52(R53,R54)
482 [-]: TFORLOOP  R38 2        ; R41,R42 :=  R38(R39,R40); if R41 ~= nil then begin PC = 437; R40 := R41 end
483 [-]: JMP       437          ; PC := 437
484 [-]: NEWTABLE  R52 0 0      ; R52 := {}
485 [-]: GETGLOBAL R53 K36      ; R53 := 0x7b998233
486 [-]: MOVE      R54 R2       ; R54 := R2
487 [-]: CALL      R53 2 2      ; R53 := R53(R54)
488 [-]: TEST      R53 1        ; if R53 then PC := 656
489 [-]: JMP       656          ; PC := 656
490 [-]: LEN       R53 R2       ; R53 := # R2
491 [-]: LT        0 K4 R53     ; if 0.000000 >= R53 then PC := 656
492 [-]: JMP       656          ; PC := 656
493 [-]: NEWTABLE  R53 0 0      ; R53 := {}
494 [-]: LOADK     R54 1        ; R54 := 1.000000
495 [-]: LEN       R55 R5       ; R55 := # R5
496 [-]: LOADK     R56 1        ; R56 := 1.000000
497 [-]: FORPREP   R54 504      ; R54 -= R56; PC := 504
498 [-]: GETTABLE  R58 R5 R57   ; R58 := R5[R57]
499 [-]: GETTABLE  R58 R58 K93  ; R58 := R58["type"]
500 [-]: SELF      R58 R58 K94  ; R59 := R58; R58 := R58[0xed4e0128]
501 [-]: CALL      R58 2 2      ; R58 := R58(R59)
502 [-]: GETTABLE  R59 R5 R57   ; R59 := R5[R57]
503 [-]: SETTABLE  R53 R58 R59  ; R53[R58] := R59
504 [-]: FORLOOP   R54 498      ; R54 += R56; if R54 <= R55 then begin PC := 498; R57 := R54 end
505 [-]: GETGLOBAL R59 K95      ; R59 := 0x7ed0a956
506 [-]: LOADK     R60 K96      ; R60 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
507 [-]: CALL      R59 2 2      ; R59 := R59(R60)
508 [-]: LOADK     R60 1        ; R60 := 1.000000
509 [-]: LEN       R61 R2       ; R61 := # R2
510 [-]: LOADK     R62 1        ; R62 := 1.000000
511 [-]: FORPREP   R60 655      ; R60 -= R62; PC := 655
512 [-]: GETTABLE  R64 R2 R63   ; R64 := R2[R63]
513 [-]: GETTABLE  R65 R64 K41  ; R65 := R64["mItemType"]
514 [-]: GETTABLE  R66 R64 K65  ; R66 := R64["mItemId"]
515 [-]: SELF      R66 R66 K97  ; R67 := R66; R66 := R66[0xf537cfc7]
516 [-]: CALL      R66 2 2      ; R66 := R66(R67)
517 [-]: GETGLOBAL R67 K36      ; R67 := 0x7b998233
518 [-]: MOVE      R68 R65      ; R68 := R65
519 [-]: CALL      R67 2 2      ; R67 := R67(R68)
520 [-]: TEST      R67 1        ; if R67 then PC := 655
521 [-]: JMP       655          ; PC := 655
522 [-]: EQ        1 R65 R59    ; if R65 == R59 then PC := 655
523 [-]: JMP       655          ; PC := 655
524 [-]: GETUPVAL  R67 U5       ; R67 := U5
525 [-]: MOVE      R68 R65      ; R68 := R65
526 [-]: CALL      R67 2 2      ; R67 := R67(R68)
527 [-]: GETGLOBAL R68 K36      ; R68 := 0x7b998233
528 [-]: MOVE      R69 R67      ; R69 := R67
529 [-]: CALL      R68 2 2      ; R68 := R68(R69)
530 [-]: TEST      R68 1        ; if R68 then PC := 655
531 [-]: JMP       655          ; PC := 655
532 [-]: NEWTABLE  R68 0 7      ; R68 := {}
533 [-]: SETTABLE  R68 K98 R65  ; R68["Type"] := R65
534 [-]: SETTABLE  R68 K99 R67  ; R68["mStoreItem"] := R67
535 [-]: GETGLOBAL R69 K42      ; R69 := 0xae91e43b
536 [-]: SELF      R69 R69 K43  ; R70 := R69; R69 := R69[0x42b04007]
537 [-]: GETGLOBAL R71 K44      ; R71 := 0x64fb1586
538 [-]: SELF      R72 R67 K45  ; R73 := R67; R72 := R67[0xd3a9d01f]
539 [-]: CALL      R72 2 0      ; R72,... := R72(R73)
540 [-]: CALL      R71 0 2      ; R71 := R71(R72,...)
541 [-]: LOADBOOL  R72 0 0      ; R72 := false
542 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
543 [-]: SETTABLE  R68 K46 R69  ; R68["Name"] := R69
544 [-]: SETTABLE  R68 K100 R66 ; R68["UID"] := R66
545 [-]: GETTABLE  R69 R64 K102 ; R69 := R64["mXP"]
546 [-]: SETTABLE  R68 K101 R69 ; R68["Xp"] := R69
547 [-]: SETTABLE  R68 K103 R64 ; R68["Item"] := R64
548 [-]: GETTABLE  R69 R64 K91  ; R69 := R64["mItemCount"]
549 [-]: SETTABLE  R68 K104 R69 ; R68["ItemCount"] := R69
550 [-]: GETTABLE  R69 R3 R66   ; R69 := R3[R66]
551 [-]: EQ        1 R69 K105   ; if R69 == nil then PC := 572
552 [-]: JMP       572          ; PC := 572
553 [-]: GETTABLE  R69 R3 R66   ; R69 := R3[R66]
554 [-]: GETTABLE  R70 R69 K46  ; R70 := R69["Name"]
555 [-]: SETTABLE  R68 K106 R70 ; R68["CustomName"] := R70
556 [-]: GETTABLE  R70 R69 K62  ; R70 := R69["LockTag"]
557 [-]: SETTABLE  R68 K62 R70  ; R68["LockTag"] := R70
558 [-]: GETTABLE  R70 R69 K47  ; R70 := R69["LockDetail"]
559 [-]: SETTABLE  R68 K47 R70  ; R68["LockDetail"] := R70
560 [-]: GETTABLE  R70 R69 K50  ; R70 := R69["OptionDesc"]
561 [-]: SETTABLE  R68 K50 R70  ; R68["OptionDesc"] := R70
562 [-]: GETTABLE  R70 R69 K53  ; R70 := R69["FirstOption"]
563 [-]: SETTABLE  R68 K53 R70  ; R68["FirstOption"] := R70
564 [-]: GETTABLE  R70 R69 K55  ; R70 := R69["SecondOption"]
565 [-]: SETTABLE  R68 K55 R70  ; R68["SecondOption"] := R70
566 [-]: GETTABLE  R70 R69 K57  ; R70 := R69["Callback"]
567 [-]: SETTABLE  R68 K57 R70  ; R68["Callback"] := R70
568 [-]: GETTABLE  R70 R69 K107 ; R70 := R69["UnlockTag"]
569 [-]: SETTABLE  R68 K107 R70 ; R68["UnlockTag"] := R70
570 [-]: GETTABLE  R70 R69 K108 ; R70 := R69["UnlockCallback"]
571 [-]: SETTABLE  R68 K108 R70 ; R68["UnlockCallback"] := R70
572 [-]: SELF      R70 R65 K94  ; R71 := R65; R70 := R65[0xed4e0128]
573 [-]: CALL      R70 2 2      ; R70 := R70(R71)
574 [-]: GETTABLE  R71 R53 R70  ; R71 := R53[R70]
575 [-]: EQ        1 R71 K105   ; if R71 == nil then PC := 580
576 [-]: JMP       580          ; PC := 580
577 [-]: GETTABLE  R72 R71 K110 ; R72 := R71["equipTime"]
578 [-]: SETTABLE  R68 K109 R72 ; R68["Usage"] := R72
579 [-]: JMP       581          ; PC := 581
580 [-]: SETTABLE  R68 K109 K4  ; R68["Usage"] := 0.000000
581 [-]: GETTABLE  R72 R64 K111 ; R72 := R64["mModularParts"]
582 [-]: LEN       R72 R72      ; R72 := # R72
583 [-]: LT        0 K4 R72     ; if 0.000000 >= R72 then PC := 618
584 [-]: JMP       618          ; PC := 618
585 [-]: GETTABLE  R72 R64 K111 ; R72 := R64["mModularParts"]
586 [-]: SETTABLE  R68 K111 R72 ; R68["mModularParts"] := R72
587 [-]: GETTABLE  R72 R64 K112 ; R72 := R64["mGild"]
588 [-]: SETTABLE  R68 K112 R72 ; R68["mGild"] := R72
589 [-]: LOADNIL   R72 R72      ; R72 := nil
590 [-]: EQ        1 R1 K14     ; if R1 == 1.000000 then PC := 594
591 [-]: JMP       594          ; PC := 594
592 [-]: EQ        0 R1 K11     ; if R1 ~= 2.000000 then PC := 597
593 [-]: JMP       597          ; PC := 597
594 [-]: GETTABLE  R73 R68 K111 ; R73 := R68["mModularParts"]
595 [-]: GETTABLE  R72 R73 K14  ; R72 := R73[1.000000]
596 [-]: JMP       606          ; PC := 606
597 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 602
598 [-]: JMP       602          ; PC := 602
599 [-]: GETTABLE  R73 R68 K111 ; R73 := R68["mModularParts"]
600 [-]: GETTABLE  R72 R73 K11  ; R72 := R73[2.000000]
601 [-]: JMP       606          ; PC := 606
602 [-]: GETTABLE  R73 R68 K111 ; R73 := R68["mModularParts"]
603 [-]: GETTABLE  R74 R68 K111 ; R74 := R68["mModularParts"]
604 [-]: LEN       R74 R74      ; R74 := # R74
605 [-]: GETTABLE  R72 R73 R74  ; R72 := R73[R74]
606 [-]: GETGLOBAL R73 K36      ; R73 := 0x7b998233
607 [-]: MOVE      R74 R72      ; R74 := R72
608 [-]: CALL      R73 2 2      ; R73 := R73(R74)
609 [-]: TEST      R73 1        ; if R73 then PC := 618
610 [-]: JMP       618          ; PC := 618
611 [-]: SELF      R73 R72 K94  ; R74 := R72; R73 := R72[0xed4e0128]
612 [-]: CALL      R73 2 2      ; R73 := R73(R74)
613 [-]: GETTABLE  R71 R53 R73  ; R71 := R53[R73]
614 [-]: EQ        1 R71 K105   ; if R71 == nil then PC := 618
615 [-]: JMP       618          ; PC := 618
616 [-]: GETTABLE  R73 R71 K110 ; R73 := R71["equipTime"]
617 [-]: SETTABLE  R68 K109 R73 ; R68["Usage"] := R73
618 [-]: GETTABLE  R73 R64 K113 ; R73 := R64["mItemName"]
619 [-]: EQ        1 R73 K114   ; if R73 == "" then PC := 623
620 [-]: JMP       623          ; PC := 623
621 [-]: GETTABLE  R73 R64 K113 ; R73 := R64["mItemName"]
622 [-]: SETTABLE  R68 K106 R73 ; R68["CustomName"] := R73
623 [-]: GETGLOBAL R73 K36      ; R73 := 0x7b998233
624 [-]: GETTABLE  R74 R64 K115 ; R74 := R64["mUpgradeType"]
625 [-]: CALL      R73 2 2      ; R73 := R73(R74)
626 [-]: TEST      R73 1        ; if R73 then PC := 648
627 [-]: JMP       648          ; PC := 648
628 [-]: GETTABLE  R73 R68 K106 ; R73 := R68["CustomName"]
629 [-]: EQ        1 R73 K105   ; if R73 == nil then PC := 648
630 [-]: JMP       648          ; PC := 648
631 [-]: LOADK     R73 K116     ; R73 := "<KUVA_LICH> "
632 [-]: GETGLOBAL R74 K117     ; R74 := 0x7f5022cf
633 [-]: GETTABLE  R74 R74 K118 ; R74 := R74[0xa5c556b9]
634 [-]: MOVE      R75 R70      ; R75 := R70
635 [-]: LOADK     R76 K119     ; R76 := "/Corpus/"
636 [-]: CALL      R74 3 2      ; R74 := R74(R75,R76)
637 [-]: TEST      R74 0        ; if not R74 then PC := 640
638 [-]: JMP       640          ; PC := 640
639 [-]: LOADK     R73 K120     ; R73 := "<CORPUS_LICH> "
640 [-]: GETGLOBAL R74 K42      ; R74 := 0xae91e43b
641 [-]: SELF      R74 R74 K43  ; R75 := R74; R74 := R74[0x42b04007]
642 [-]: MOVE      R76 R73      ; R76 := R73
643 [-]: LOADBOOL  R77 1 0      ; R77 := true
644 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
645 [-]: GETTABLE  R75 R68 K106 ; R75 := R68["CustomName"]
646 [-]: CONCAT    R74 R74 R75  ; R74 := R74 .. R75
647 [-]: SETTABLE  R68 K106 R74 ; R68["CustomName"] := R74
648 [-]: GETTABLE  R74 R64 K121 ; R74 := R64["mPolarized"]
649 [-]: SETTABLE  R68 K121 R74 ; R68["mPolarized"] := R74
650 [-]: GETGLOBAL R74 K26      ; R74 := 0x33bdd652
651 [-]: GETTABLE  R74 R74 K27  ; R74 := R74[0x23d5322f]
652 [-]: MOVE      R75 R52      ; R75 := R52
653 [-]: MOVE      R76 R68      ; R76 := R68
654 [-]: CALL      R74 3 1      ; R74(R75,R76)
655 [-]: FORLOOP   R60 512      ; R60 += R62; if R60 <= R61 then begin PC := 512; R63 := R60 end
656 [-]: RETURN    R52 2        ; return R52
657 [-]: RETURN    R0 1         ; return 


; Function #110.1:
;
; Name:            
; Defined at line: 6185
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 6460
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xfe9eb1a5]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: EQ        0 R1 K3      ; if R1 ~= 41.000000 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADBOOL  R1 1 0       ; R1 := true
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Current"]
 14 [-]: EQ        1 R1 K6      ; if R1 == 1.000000 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Current"]
 18 [-]: EQ        0 R1 K7      ; if R1 ~= 3.000000 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x8170d7d9]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: TEST      R1 1         ; if R1 then PC := 33
 23 [-]: JMP       33           ; PC := 33
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Current"]
 26 [-]: EQ        0 R1 K9      ; if R1 ~= 2.000000 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: SELF      R1 R0 K10    ; R2 := R0; R1 := R0[0x9470f5c2]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 32
 32 [-]: LOADBOOL  R1 1 0       ; R1 := true
 33 [-]: RETURN    R1 2         ; return R1
 34 [-]: LOADBOOL  R1 0 0       ; R1 := false
 35 [-]: RETURN    R1 2         ; return R1
 36 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 6476
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: MOVE      R2 R0        ; R2 := R0
  2 [-]: LOADK     R3 K0        ; R3 := "\r\n\r\n\r\n"
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
  4 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0x42b04007]
  5 [-]: LOADK     R6 K3        ; R6 := "<ENHANCER>"
  6 [-]: LOADBOOL  R7 1 0       ; R7 := true
  7 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  8 [-]: LOADK     R5 K4        ; R5 := "\r\n"
  9 [-]: MOVE      R6 R1        ; R6 := R1
 10 [-]: CONCAT    R2 R2 R6     ; R2 := R2 .. R3 .. R4 .. R5 .. R6
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 6480
; #Upvalues:       12
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  57

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  8 [-]: CLOSURE   R2 0         ; R2 := closure(Function #113.1)
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: GETUPVAL  R0 U2        ; R0 := U2
 11 [-]: GETUPVAL  R0 U3        ; R0 := U3
 12 [-]: GETUPVAL  R0 U4        ; R0 := U4
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: LOADNIL   R3 R3        ; R3 := nil
 15 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 16 [-]: GETGLOBAL R5 K1        ; R5 := mSentinelType
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: GETGLOBAL R4 K2        ; R4 := 0xb009bbc6
 21 [-]: GETGLOBAL R5 K1        ; R5 := mSentinelType
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: MOVE      R3 R4        ; R3 := R4
 24 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["Items"]
 25 [-]: EQ        0 R4 K4      ; if R4 ~= nil then PC := 395
 26 [-]: JMP       395          ; PC := 395
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x06ad312d]
 29 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 30 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["OwnedItems"]
 31 [-]: LEN       R6 R5        ; R6 := # R5
 32 [-]: LOADK     R7 1         ; R7 := 1.000000
 33 [-]: MOVE      R8 R6        ; R8 := R6
 34 [-]: LOADK     R9 1         ; R9 := 1.000000
 35 [-]: FORPREP   R7 246       ; R7 -= R9; PC := 246
 36 [-]: GETGLOBAL R11 K7       ; R11 := 0xce225efa
 37 [-]: LOADK     R12 0        ; R12 := 0.000000
 38 [-]: CALL      R11 2 1      ; R11(R12)
 39 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 40 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
 41 [-]: MOVE      R13 R11      ; R13 := R11
 42 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 43 [-]: TEST      R12 1        ; if R12 then PC := 246
 44 [-]: JMP       246          ; PC := 246
 45 [-]: GETTABLE  R12 R11 K8   ; R12 := R11["Type"]
 46 [-]: GETUPVAL  R13 U5       ; R13 := U5
 47 [-]: MOVE      R14 R12      ; R14 := R12
 48 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 49 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
 50 [-]: MOVE      R15 R13      ; R15 := R13
 51 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 52 [-]: TEST      R14 1        ; if R14 then PC := 246
 53 [-]: JMP       246          ; PC := 246
 54 [-]: LOADBOOL  R14 1 0      ; R14 := true
 55 [-]: SELF      R15 R13 K9   ; R16 := R13; R15 := R13[0xfe9eb1a5]
 56 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 57 [-]: GETUPVAL  R16 U2       ; R16 := U2
 58 [-]: GETTABLE  R16 R16 K10  ; R16 := R16[0x08681f50]
 59 [-]: GETGLOBAL R17 K11      ; R17 := 0xae91e43b
 60 [-]: MOVE      R18 R13      ; R18 := R13
 61 [-]: NEWTABLE  R19 0 2      ; R19 := {}
 62 [-]: SETTABLE  R19 K12 R11  ; R19["ItemInfo"] := R11
 63 [-]: GETGLOBAL R20 K14      ; R20 := 0x25d99d89
 64 [-]: SETTABLE  R19 K13 R20  ; R19["GameData"] := R20
 65 [-]: GETUPVAL  R20 U0       ; R20 := U0
 66 [-]: LOADNIL   R21 R21      ; R21 := nil
 67 [-]: LOADBOOL  R22 1 0      ; R22 := true
 68 [-]: CALL      R16 7 2      ; R16 := R16(R17,R18,R19,R20,R21,R22)
 69 [-]: EQ        1 R15 K16    ; if R15 == 0.000000 then PC := 75
 70 [-]: JMP       75           ; PC := 75
 71 [-]: EQ        1 R15 K17    ; if R15 == 1.000000 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: EQ        0 R15 K18    ; if R15 ~= 5.000000 then PC := 87
 74 [-]: JMP       87           ; PC := 87
 75 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
 76 [-]: GETGLOBAL R18 K19      ; R18 := mSuitType
 77 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 78 [-]: TEST      R17 1        ; if R17 then PC := 112
 79 [-]: JMP       112          ; PC := 112
 80 [-]: SELF      R17 R12 K20  ; R18 := R12; R17 := R12[0xf2deaf69]
 81 [-]: GETGLOBAL R19 K21      ; R19 := gLotusWeaponType
 82 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 83 [-]: TEST      R17 1        ; if R17 then PC := 112
 84 [-]: JMP       112          ; PC := 112
 85 [-]: LOADBOOL  R14 0 0      ; R14 := false
 86 [-]: JMP       112          ; PC := 112
 87 [-]: EQ        0 R15 K22    ; if R15 ~= 16.000000 then PC := 112
 88 [-]: JMP       112          ; PC := 112
 89 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
 90 [-]: GETGLOBAL R18 K1       ; R18 := mSentinelType
 91 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 92 [-]: TEST      R17 1        ; if R17 then PC := 101
 93 [-]: JMP       101          ; PC := 101
 94 [-]: SELF      R17 R12 K20  ; R18 := R12; R17 := R12[0xf2deaf69]
 95 [-]: GETGLOBAL R19 K21      ; R19 := gLotusWeaponType
 96 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 97 [-]: TEST      R17 1        ; if R17 then PC := 101
 98 [-]: JMP       101          ; PC := 101
 99 [-]: LOADBOOL  R14 0 0      ; R14 := false
100 [-]: JMP       112          ; PC := 112
101 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
102 [-]: MOVE      R18 R3       ; R18 := R3
103 [-]: CALL      R17 2 2      ; R17 := R17(R18)
104 [-]: TEST      R17 1        ; if R17 then PC := 112
105 [-]: JMP       112          ; PC := 112
106 [-]: SELF      R17 R3 K23   ; R18 := R3; R17 := R3[0x24b8c21f]
107 [-]: MOVE      R19 R12      ; R19 := R12
108 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
109 [-]: TEST      R17 1        ; if R17 then PC := 112
110 [-]: JMP       112          ; PC := 112
111 [-]: LOADBOOL  R14 0 0      ; R14 := false
112 [-]: TEST      R14 0        ; if not R14 then PC := 246
113 [-]: JMP       246          ; PC := 246
114 [-]: LOADK     R17 0        ; R17 := 0.000000
115 [-]: GETTABLE  R18 R11 K24  ; R18 := R11["Xp"]
116 [-]: EQ        1 R18 K4     ; if R18 == nil then PC := 127
117 [-]: JMP       127          ; PC := 127
118 [-]: GETTABLE  R18 R11 K8   ; R18 := R11["Type"]
119 [-]: EQ        1 R18 K4     ; if R18 == nil then PC := 127
120 [-]: JMP       127          ; PC := 127
121 [-]: GETGLOBAL R18 K25      ; R18 := 0xa94df70b
122 [-]: SELF      R18 R18 K26  ; R19 := R18; R18 := R18[0x8427bf69]
123 [-]: GETTABLE  R20 R11 K24  ; R20 := R11["Xp"]
124 [-]: GETTABLE  R21 R11 K8   ; R21 := R11["Type"]
125 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
126 [-]: MOVE      R17 R18      ; R17 := R18
127 [-]: SETTABLE  R16 K27 R13  ; R16["mStoreItem"] := R13
128 [-]: SETTABLE  R16 K28 K29  ; R16["mPurchased"] := true
129 [-]: SETTABLE  R16 K30 R11  ; R16["mPurchasedInfo"] := R11
130 [-]: LEN       R18 R1       ; R18 := # R1
131 [-]: SETTABLE  R16 K31 R18  ; R16["mSortId"] := R18
132 [-]: GETTABLE  R18 R0 K32   ; R18 := R0["LoadOutId"]
133 [-]: SETTABLE  R16 K32 R18  ; R16["LoadOutId"] := R18
134 [-]: GETTABLE  R18 R11 K33  ; R18 := R11["CustomName"]
135 [-]: TEST      R18 0        ; if not R18 then PC := 142
136 [-]: JMP       142          ; PC := 142
137 [-]: GETGLOBAL R18 K35      ; R18 := 0x7f5022cf
138 [-]: GETTABLE  R18 R18 K36  ; R18 := R18[0x3f3e4d12]
139 [-]: GETTABLE  R19 R11 K33  ; R19 := R11["CustomName"]
140 [-]: CALL      R18 2 2      ; R18 := R18(R19)
141 [-]: SETTABLE  R16 K34 R18  ; R16["Name"] := R18
142 [-]: GETTABLE  R18 R11 K37  ; R18 := R11["EnhancedDesc"]
143 [-]: TEST      R18 0        ; if not R18 then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: GETUPVAL  R18 U6       ; R18 := U6
146 [-]: GETTABLE  R19 R16 K38  ; R19 := R16["LocalizedDesc"]
147 [-]: GETTABLE  R20 R11 K37  ; R20 := R11["EnhancedDesc"]
148 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
149 [-]: SETTABLE  R16 K38 R18  ; R16["LocalizedDesc"] := R18
150 [-]: GETTABLE  R18 R16 K32  ; R18 := R16["LoadOutId"]
151 [-]: TEST      R18 0        ; if not R18 then PC := 208
152 [-]: JMP       208          ; PC := 208
153 [-]: GETTABLE  R18 R11 K39  ; R18 := R11["Item"]
154 [-]: TEST      R18 0        ; if not R18 then PC := 208
155 [-]: JMP       208          ; PC := 208
156 [-]: GETTABLE  R18 R11 K8   ; R18 := R11["Type"]
157 [-]: SELF      R18 R18 K20  ; R19 := R18; R18 := R18[0xf2deaf69]
158 [-]: GETGLOBAL R20 K40      ; R20 := 0xb9a9a904
159 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
160 [-]: TEST      R18 1        ; if R18 then PC := 208
161 [-]: JMP       208          ; PC := 208
162 [-]: GETUPVAL  R18 U7       ; R18 := U7
163 [-]: GETTABLE  R18 R18 K41  ; R18 := R18[0x06d055f9]
164 [-]: GETTABLE  R19 R11 K8   ; R19 := R11["Type"]
165 [-]: SELF      R19 R19 K20  ; R20 := R19; R19 := R19[0xf2deaf69]
166 [-]: GETGLOBAL R21 K42      ; R21 := 0x01302fb0
167 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
168 [-]: LOADK     R20 9        ; R20 := 9.000000
169 [-]: GETUPVAL  R21 U7       ; R21 := U7
170 [-]: GETTABLE  R21 R21 K41  ; R21 := R21[0x06d055f9]
171 [-]: GETTABLE  R22 R16 K32  ; R22 := R16["LoadOutId"]
172 [-]: EQ        1 R22 K16    ; if R22 == 0.000000 then PC := 175
173 [-]: JMP       175          ; PC := 175
174 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 175
175 [-]: LOADBOOL  R22 1 0      ; R22 := true
176 [-]: LOADK     R23 7        ; R23 := 7.000000
177 [-]: LOADK     R24 0        ; R24 := 0.000000
178 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
179 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
180 [-]: GETUPVAL  R19 U2       ; R19 := U2
181 [-]: GETTABLE  R19 R19 K44  ; R19 := R19[0xca5df72e]
182 [-]: GETUPVAL  R20 U0       ; R20 := U0
183 [-]: GETGLOBAL R21 K45      ; R21 := mInventory
184 [-]: GETTABLE  R22 R11 K39  ; R22 := R11["Item"]
185 [-]: MOVE      R23 R18      ; R23 := R18
186 [-]: LOADBOOL  R24 1 0      ; R24 := true
187 [-]: CALL      R19 6 3      ; R19,R20 := R19(R20,R21,R22,R23,R24)
188 [-]: GETUPVAL  R21 U7       ; R21 := U7
189 [-]: GETTABLE  R21 R21 K41  ; R21 := R21[0x06d055f9]
190 [-]: EQ        1 R19 K4     ; if R19 == nil then PC := 193
191 [-]: JMP       193          ; PC := 193
192 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 193
193 [-]: LOADBOOL  R22 1 0      ; R22 := true
194 [-]: GETTABLE  R23 R16 K46  ; R23 := R16["Icon"]
195 [-]: MOVE      R24 R19      ; R24 := R19
196 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
197 [-]: SETTABLE  R16 K46 R21  ; R16["Icon"] := R21
198 [-]: GETUPVAL  R21 U7       ; R21 := U7
199 [-]: GETTABLE  R21 R21 K41  ; R21 := R21[0x06d055f9]
200 [-]: EQ        1 R19 K4     ; if R19 == nil then PC := 203
201 [-]: JMP       203          ; PC := 203
202 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 203
203 [-]: LOADBOOL  R22 1 0      ; R22 := true
204 [-]: GETTABLE  R23 R16 K47  ; R23 := R16["Themed"]
205 [-]: MOVE      R24 R20      ; R24 := R20
206 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
207 [-]: SETTABLE  R16 K47 R21  ; R16["Themed"] := R21
208 [-]: GETTABLE  R21 R11 K49  ; R21 := R11["OptionDesc"]
209 [-]: SETTABLE  R16 K48 R21  ; R16["mOptionDesc"] := R21
210 [-]: GETTABLE  R21 R11 K51  ; R21 := R11["FirstOption"]
211 [-]: SETTABLE  R16 K50 R21  ; R16["mFirstOption"] := R21
212 [-]: GETTABLE  R21 R11 K53  ; R21 := R11["SecondOption"]
213 [-]: SETTABLE  R16 K52 R21  ; R16["mSecondOption"] := R21
214 [-]: GETTABLE  R21 R11 K55  ; R21 := R11["Callback"]
215 [-]: SETTABLE  R16 K54 R21  ; R16["mCallback"] := R21
216 [-]: GETTABLE  R21 R11 K57  ; R21 := R11["LockTag"]
217 [-]: SETTABLE  R16 K56 R21  ; R16["mLockTag"] := R21
218 [-]: GETTABLE  R21 R11 K59  ; R21 := R11["LockDetail"]
219 [-]: SETTABLE  R16 K58 R21  ; R16["mLockDetail"] := R21
220 [-]: GETTABLE  R21 R11 K61  ; R21 := R11["UnlockTag"]
221 [-]: SETTABLE  R16 K60 R21  ; R16["mUnlockTag"] := R21
222 [-]: GETTABLE  R21 R11 K63  ; R21 := R11["UnlockCallback"]
223 [-]: SETTABLE  R16 K62 R21  ; R16["mUnlockCallback"] := R21
224 [-]: GETTABLE  R21 R11 K64  ; R21 := R11["mModularParts"]
225 [-]: SETTABLE  R16 K64 R21  ; R16["mModularParts"] := R21
226 [-]: GETTABLE  R21 R11 K65  ; R21 := R11["mItemName"]
227 [-]: SETTABLE  R16 K65 R21  ; R16["mItemName"] := R21
228 [-]: GETGLOBAL R21 K0       ; R21 := 0x7b998233
229 [-]: GETTABLE  R22 R11 K39  ; R22 := R11["Item"]
230 [-]: CALL      R21 2 2      ; R21 := R21(R22)
231 [-]: TEST      R21 1        ; if R21 then PC := 243
232 [-]: JMP       243          ; PC := 243
233 [-]: GETTABLE  R21 R11 K39  ; R21 := R11["Item"]
234 [-]: SELF      R21 R21 K67  ; R22 := R21; R21 := R21[0xdbfbf6c0]
235 [-]: LOADK     R23 3        ; R23 := 3.000000
236 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
237 [-]: SETTABLE  R16 K66 R21  ; R16["mGild"] := R21
238 [-]: GETTABLE  R21 R11 K39  ; R21 := R11["Item"]
239 [-]: SELF      R21 R21 K67  ; R22 := R21; R21 := R21[0xdbfbf6c0]
240 [-]: LOADK     R23 2        ; R23 := 2.000000
241 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
242 [-]: SETTABLE  R16 K68 R21  ; R16["mHeavyWeaponUnlocked"] := R21
243 [-]: MOVE      R21 R2       ; R21 := R2
244 [-]: MOVE      R22 R16      ; R22 := R16
245 [-]: CALL      R21 2 1      ; R21(R22)
246 [-]: FORLOOP   R7 36        ; R7 += R9; if R7 <= R8 then begin PC := 36; R10 := R7 end
247 [-]: GETTABLE  R21 R0 K32   ; R21 := R0["LoadOutId"]
248 [-]: EQ        1 R21 K69    ; if R21 == 4.000000 then PC := 396
249 [-]: JMP       396          ; PC := 396
250 [-]: GETTABLE  R21 R0 K70   ; R21 := R0["StoreItemId"]
251 [-]: EQ        1 R21 K71    ; if R21 == 39.000000 then PC := 255
252 [-]: JMP       255          ; PC := 255
253 [-]: EQ        0 R21 K72    ; if R21 ~= 24.000000 then PC := 256
254 [-]: JMP       256          ; PC := 256
255 [-]: LOADK     R21 15       ; R21 := 15.000000
256 [-]: LOADK     R22 1        ; R22 := 1.000000
257 [-]: LEN       R23 R4       ; R23 := # R4
258 [-]: LOADK     R24 1        ; R24 := 1.000000
259 [-]: FORPREP   R22 393      ; R22 -= R24; PC := 393
260 [-]: GETGLOBAL R26 K7       ; R26 := 0xce225efa
261 [-]: LOADK     R27 0        ; R27 := 0.000000
262 [-]: CALL      R26 2 1      ; R26(R27)
263 [-]: GETTABLE  R26 R4 R25   ; R26 := R4[R25]
264 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
265 [-]: MOVE      R28 R26      ; R28 := R26
266 [-]: CALL      R27 2 2      ; R27 := R27(R28)
267 [-]: TEST      R27 1        ; if R27 then PC := 393
268 [-]: JMP       393          ; PC := 393
269 [-]: SELF      R27 R26 K9   ; R28 := R26; R27 := R26[0xfe9eb1a5]
270 [-]: CALL      R27 2 2      ; R27 := R27(R28)
271 [-]: EQ        0 R27 R21    ; if R27 ~= R21 then PC := 393
272 [-]: JMP       393          ; PC := 393
273 [-]: LOADBOOL  R28 1 0      ; R28 := true
274 [-]: LOADK     R29 1        ; R29 := 1.000000
275 [-]: MOVE      R30 R6       ; R30 := R6
276 [-]: LOADK     R31 1        ; R31 := 1.000000
277 [-]: FORPREP   R29 284      ; R29 -= R31; PC := 284
278 [-]: GETTABLE  R33 R5 R32   ; R33 := R5[R32]
279 [-]: GETTABLE  R33 R33 K27  ; R33 := R33["mStoreItem"]
280 [-]: EQ        0 R26 R33    ; if R26 ~= R33 then PC := 284
281 [-]: JMP       284          ; PC := 284
282 [-]: LOADBOOL  R28 0 0      ; R28 := false
283 [-]: JMP       285          ; PC := 285
284 [-]: FORLOOP   R29 278      ; R29 += R31; if R29 <= R30 then begin PC := 278; R32 := R29 end
285 [-]: TEST      R28 0        ; if not R28 then PC := 368
286 [-]: JMP       368          ; PC := 368
287 [-]: GETUPVAL  R33 U2       ; R33 := U2
288 [-]: GETTABLE  R33 R33 K73  ; R33 := R33[0xcac502bd]
289 [-]: MOVE      R34 R26      ; R34 := R26
290 [-]: CALL      R33 2 2      ; R33 := R33(R34)
291 [-]: SELF      R34 R26 K74  ; R35 := R26; R34 := R26[0xc055cef8]
292 [-]: CALL      R34 2 2      ; R34 := R34(R35)
293 [-]: TEST      R34 0        ; if not R34 then PC := 307
294 [-]: JMP       307          ; PC := 307
295 [-]: TEST      R33 0        ; if not R33 then PC := 307
296 [-]: JMP       307          ; PC := 307
297 [-]: GETUPVAL  R34 U2       ; R34 := U2
298 [-]: GETTABLE  R34 R34 K75  ; R34 := R34[0xc20f37ad]
299 [-]: MOVE      R35 R26      ; R35 := R26
300 [-]: CALL      R34 2 2      ; R34 := R34(R35)
301 [-]: TEST      R34 0        ; if not R34 then PC := 308
302 [-]: JMP       308          ; PC := 308
303 [-]: GETUPVAL  R34 U4       ; R34 := U4
304 [-]: GETTABLE  R34 R34 K76  ; R34 := R34["NewWarCompleted"]
305 [-]: TEST      R34 1        ; if R34 then PC := 308
306 [-]: JMP       308          ; PC := 308
307 [-]: LOADBOOL  R28 0 0      ; R28 := false
308 [-]: EQ        1 R27 K16    ; if R27 == 0.000000 then PC := 314
309 [-]: JMP       314          ; PC := 314
310 [-]: EQ        1 R27 K17    ; if R27 == 1.000000 then PC := 314
311 [-]: JMP       314          ; PC := 314
312 [-]: EQ        0 R27 K18    ; if R27 ~= 5.000000 then PC := 334
313 [-]: JMP       334          ; PC := 334
314 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
315 [-]: GETGLOBAL R35 K19      ; R35 := mSuitType
316 [-]: CALL      R34 2 2      ; R34 := R34(R35)
317 [-]: TEST      R34 1        ; if R34 then PC := 368
318 [-]: JMP       368          ; PC := 368
319 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
320 [-]: SELF      R35 R26 K77  ; R36 := R26; R35 := R26[0xf278f8a1]
321 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
322 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
323 [-]: TEST      R34 1        ; if R34 then PC := 368
324 [-]: JMP       368          ; PC := 368
325 [-]: SELF      R34 R26 K77  ; R35 := R26; R34 := R26[0xf278f8a1]
326 [-]: CALL      R34 2 2      ; R34 := R34(R35)
327 [-]: SELF      R34 R34 K20  ; R35 := R34; R34 := R34[0xf2deaf69]
328 [-]: GETGLOBAL R36 K21      ; R36 := gLotusWeaponType
329 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
330 [-]: TEST      R34 1        ; if R34 then PC := 368
331 [-]: JMP       368          ; PC := 368
332 [-]: LOADBOOL  R28 0 0      ; R28 := false
333 [-]: JMP       368          ; PC := 368
334 [-]: EQ        0 R27 K22    ; if R27 ~= 16.000000 then PC := 368
335 [-]: JMP       368          ; PC := 368
336 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
337 [-]: GETGLOBAL R35 K1       ; R35 := mSentinelType
338 [-]: CALL      R34 2 2      ; R34 := R34(R35)
339 [-]: TEST      R34 1        ; if R34 then PC := 356
340 [-]: JMP       356          ; PC := 356
341 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
342 [-]: SELF      R35 R26 K77  ; R36 := R26; R35 := R26[0xf278f8a1]
343 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
344 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
345 [-]: TEST      R34 1        ; if R34 then PC := 356
346 [-]: JMP       356          ; PC := 356
347 [-]: SELF      R34 R26 K77  ; R35 := R26; R34 := R26[0xf278f8a1]
348 [-]: CALL      R34 2 2      ; R34 := R34(R35)
349 [-]: SELF      R34 R34 K20  ; R35 := R34; R34 := R34[0xf2deaf69]
350 [-]: GETGLOBAL R36 K21      ; R36 := gLotusWeaponType
351 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
352 [-]: TEST      R34 1        ; if R34 then PC := 356
353 [-]: JMP       356          ; PC := 356
354 [-]: LOADBOOL  R28 0 0      ; R28 := false
355 [-]: JMP       368          ; PC := 368
356 [-]: GETGLOBAL R34 K0       ; R34 := 0x7b998233
357 [-]: MOVE      R35 R3       ; R35 := R3
358 [-]: CALL      R34 2 2      ; R34 := R34(R35)
359 [-]: TEST      R34 1        ; if R34 then PC := 368
360 [-]: JMP       368          ; PC := 368
361 [-]: SELF      R34 R3 K23   ; R35 := R3; R34 := R3[0x24b8c21f]
362 [-]: SELF      R36 R26 K77  ; R37 := R26; R36 := R26[0xf278f8a1]
363 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
364 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
365 [-]: TEST      R34 1        ; if R34 then PC := 368
366 [-]: JMP       368          ; PC := 368
367 [-]: LOADBOOL  R28 0 0      ; R28 := false
368 [-]: TEST      R28 0        ; if not R28 then PC := 393
369 [-]: JMP       393          ; PC := 393
370 [-]: GETUPVAL  R34 U2       ; R34 := U2
371 [-]: GETTABLE  R34 R34 K10  ; R34 := R34[0x08681f50]
372 [-]: GETGLOBAL R35 K11      ; R35 := 0xae91e43b
373 [-]: MOVE      R36 R26      ; R36 := R26
374 [-]: NEWTABLE  R37 0 1      ; R37 := {}
375 [-]: GETGLOBAL R38 K14      ; R38 := 0x25d99d89
376 [-]: SETTABLE  R37 K13 R38  ; R37["GameData"] := R38
377 [-]: LOADNIL   R38 R39      ; R38 := R39 := nil
378 [-]: LOADBOOL  R40 1 0      ; R40 := true
379 [-]: CALL      R34 7 2      ; R34 := R34(R35,R36,R37,R38,R39,R40)
380 [-]: GETUPVAL  R35 U3       ; R35 := U3
381 [-]: GETTABLE  R35 R35 K78  ; R35 := R35[0xcd71f5a1]
382 [-]: MOVE      R36 R26      ; R36 := R26
383 [-]: CALL      R35 2 2      ; R35 := R35(R36)
384 [-]: SETTABLE  R34 K27 R26  ; R34["mStoreItem"] := R26
385 [-]: SETTABLE  R34 K79 K16  ; R34["Rank"] := 0.000000
386 [-]: SETTABLE  R34 K80 R35  ; R34["Sale"] := R35
387 [-]: SETTABLE  R34 K28 K81  ; R34["mPurchased"] := false
388 [-]: LEN       R36 R1       ; R36 := # R1
389 [-]: SETTABLE  R34 K31 R36  ; R34["mSortId"] := R36
390 [-]: MOVE      R36 R2       ; R36 := R2
391 [-]: MOVE      R37 R34      ; R37 := R34
392 [-]: CALL      R36 2 1      ; R36(R37)
393 [-]: FORLOOP   R22 260      ; R22 += R24; if R22 <= R23 then begin PC := 260; R25 := R22 end
394 [-]: JMP       396          ; PC := 396
395 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["Items"]
396 [-]: GETGLOBAL R36 K82      ; R36 := _T
397 [-]: GETTABLE  R36 R36 K83  ; R36 := R36["MenuSuitAvatar"]
398 [-]: NEWTABLE  R37 3 0      ; R37 := {}
399 [-]: LOADK     R38 0        ; R38 := 0.000000
400 [-]: LOADK     R39 1        ; R39 := 1.000000
401 [-]: LOADK     R40 5        ; R40 := 5.000000
402 [-]: SETLIST   R37 3 1      ; R37[(1-1)*FPF+i] := R(37+i), 1 <= i <= 3
403 [-]: LOADK     R38 0        ; R38 := 0.000000
404 [-]: LOADK     R39 1        ; R39 := 1.000000
405 [-]: LEN       R40 R37      ; R40 := # R37
406 [-]: LOADK     R41 1        ; R41 := 1.000000
407 [-]: FORPREP   R39 423      ; R39 -= R41; PC := 423
408 [-]: GETGLOBAL R43 K0       ; R43 := 0x7b998233
409 [-]: MOVE      R44 R36      ; R44 := R36
410 [-]: CALL      R43 2 2      ; R43 := R43(R44)
411 [-]: TEST      R43 1        ; if R43 then PC := 423
412 [-]: JMP       423          ; PC := 423
413 [-]: GETGLOBAL R43 K0       ; R43 := 0x7b998233
414 [-]: SELF      R44 R36 K84  ; R45 := R36; R44 := R36[0xde321e6f]
415 [-]: CALL      R44 2 2      ; R44 := R44(R45)
416 [-]: SELF      R44 R44 K85  ; R45 := R44; R44 := R44[0xe85a2361]
417 [-]: GETTABLE  R46 R37 R42  ; R46 := R37[R42]
418 [-]: CALL      R44 3 0      ; R44,... := R44(R45,R46)
419 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
420 [-]: TEST      R43 1        ; if R43 then PC := 423
421 [-]: JMP       423          ; PC := 423
422 [-]: ADD       R38 R38 K17  ; R38 := R38 + 1.000000
423 [-]: FORLOOP   R39 408      ; R39 += R41; if R39 <= R40 then begin PC := 408; R42 := R39 end
424 [-]: GETTABLE  R43 R0 K32   ; R43 := R0["LoadOutId"]
425 [-]: EQ        1 R43 K4     ; if R43 == nil then PC := 450
426 [-]: JMP       450          ; PC := 450
427 [-]: GETTABLE  R43 R0 K32   ; R43 := R0["LoadOutId"]
428 [-]: EQ        1 R43 K69    ; if R43 == 4.000000 then PC := 450
429 [-]: JMP       450          ; PC := 450
430 [-]: LT        0 K17 R38    ; if 1.000000 >= R38 then PC := 450
431 [-]: JMP       450          ; PC := 450
432 [-]: GETTABLE  R43 R0 K32   ; R43 := R0["LoadOutId"]
433 [-]: EQ        0 R43 K16    ; if R43 ~= 0.000000 then PC := 438
434 [-]: JMP       438          ; PC := 438
435 [-]: GETTABLE  R43 R0 K86   ; R43 := R0["LoadOutType"]
436 [-]: EQ        0 R43 K17    ; if R43 ~= 1.000000 then PC := 450
437 [-]: JMP       450          ; PC := 450
438 [-]: GETTABLE  R43 R0 K86   ; R43 := R0["LoadOutType"]
439 [-]: EQ        1 R43 K87    ; if R43 == 2.000000 then PC := 450
440 [-]: JMP       450          ; PC := 450
441 [-]: GETTABLE  R43 R0 K86   ; R43 := R0["LoadOutType"]
442 [-]: EQ        1 R43 K69    ; if R43 == 4.000000 then PC := 450
443 [-]: JMP       450          ; PC := 450
444 [-]: GETTABLE  R43 R0 K86   ; R43 := R0["LoadOutType"]
445 [-]: EQ        1 R43 K88    ; if R43 == 6.000000 then PC := 450
446 [-]: JMP       450          ; PC := 450
447 [-]: GETTABLE  R43 R0 K86   ; R43 := R0["LoadOutType"]
448 [-]: EQ        0 R43 K89    ; if R43 ~= 8.000000 then PC := 461
449 [-]: JMP       461          ; PC := 461
450 [-]: GETGLOBAL R43 K90      ; R43 := mSelected
451 [-]: GETTABLE  R43 R43 K91  ; R43 := R43["Emote"]
452 [-]: EQ        0 R43 K4     ; if R43 ~= nil then PC := 461
453 [-]: JMP       461          ; PC := 461
454 [-]: GETGLOBAL R43 K90      ; R43 := mSelected
455 [-]: GETTABLE  R43 R43 K92  ; R43 := R43["Consumable"]
456 [-]: EQ        0 R43 K4     ; if R43 ~= nil then PC := 461
457 [-]: JMP       461          ; PC := 461
458 [-]: GETTABLE  R43 R0 K86   ; R43 := R0["LoadOutType"]
459 [-]: EQ        0 R43 K17    ; if R43 ~= 1.000000 then PC := 478
460 [-]: JMP       478          ; PC := 478
461 [-]: GETGLOBAL R43 K93      ; R43 := 0x33bdd652
462 [-]: GETTABLE  R43 R43 K94  ; R43 := R43[0x23d5322f]
463 [-]: MOVE      R44 R1       ; R44 := R1
464 [-]: NEWTABLE  R45 0 7      ; R45 := {}
465 [-]: SETTABLE  R45 K95 K29  ; R45["mEmpty"] := true
466 [-]: SETTABLE  R45 K27 K4   ; R45["mStoreItem"] := nil
467 [-]: GETGLOBAL R46 K11      ; R46 := 0xae91e43b
468 [-]: SELF      R46 R46 K96  ; R47 := R46; R46 := R46[0x42b04007]
469 [-]: LOADK     R48 K97      ; R48 := "/Lotus/Language/Menu/Cosmetics_None"
470 [-]: LOADBOOL  R49 0 0      ; R49 := false
471 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
472 [-]: SETTABLE  R45 K34 R46  ; R45["Name"] := R46
473 [-]: SETTABLE  R45 K98 K16  ; R45["PvpValue"] := 0.000000
474 [-]: SETTABLE  R45 K28 K29  ; R45["mPurchased"] := true
475 [-]: SETTABLE  R45 K31 K99  ; R45["mSortId"] := -10.000000
476 [-]: SETTABLE  R45 K8 K4    ; R45["Type"] := nil
477 [-]: CALL      R43 3 1      ; R43(R44,R45)
478 [-]: LOADNIL   R43 R43      ; R43 := nil
479 [-]: LOADK     R44 1        ; R44 := 1.000000
480 [-]: LEN       R45 R1       ; R45 := # R1
481 [-]: LOADK     R46 1        ; R46 := 1.000000
482 [-]: FORPREP   R44 754      ; R44 -= R46; PC := 754
483 [-]: GETTABLE  R48 R1 R47   ; R48 := R1[R47]
484 [-]: SETTABLE  R48 K100 K101; R48["SearchCache"] := ""
485 [-]: GETTABLE  R49 R48 K95  ; R49 := R48["mEmpty"]
486 [-]: TEST      R49 0        ; if not R49 then PC := 497
487 [-]: JMP       497          ; PC := 497
488 [-]: GETGLOBAL R49 K102     ; R49 := 0x83e41587
489 [-]: GETGLOBAL R50 K11      ; R50 := 0xae91e43b
490 [-]: SELF      R50 R50 K96  ; R51 := R50; R50 := R50[0x42b04007]
491 [-]: LOADK     R52 K97      ; R52 := "/Lotus/Language/Menu/Cosmetics_None"
492 [-]: LOADBOOL  R53 0 0      ; R53 := false
493 [-]: CALL      R50 4 0      ; R50,... := R50(R51,R52,R53)
494 [-]: CALL      R49 0 2      ; R49 := R49(R50,...)
495 [-]: SETTABLE  R48 K100 R49 ; R48["SearchCache"] := R49
496 [-]: JMP       510          ; PC := 510
497 [-]: GETGLOBAL R49 K0       ; R49 := 0x7b998233
498 [-]: GETTABLE  R50 R48 K27  ; R50 := R48["mStoreItem"]
499 [-]: CALL      R49 2 2      ; R49 := R49(R50)
500 [-]: TEST      R49 1        ; if R49 then PC := 510
501 [-]: JMP       510          ; PC := 510
502 [-]: GETUPVAL  R49 U2       ; R49 := U2
503 [-]: GETTABLE  R49 R49 K103 ; R49 := R49[0x1ac299fb]
504 [-]: GETGLOBAL R50 K11      ; R50 := 0xae91e43b
505 [-]: GETTABLE  R51 R48 K27  ; R51 := R48["mStoreItem"]
506 [-]: GETTABLE  R52 R48 K34  ; R52 := R48["Name"]
507 [-]: GETTABLE  R53 R48 K104 ; R53 := R48["SearchTags"]
508 [-]: CALL      R49 5 2      ; R49 := R49(R50,R51,R52,R53)
509 [-]: SETTABLE  R48 K100 R49 ; R48["SearchCache"] := R49
510 [-]: GETTABLE  R49 R48 K105 ; R49 := R48["Polarity"]
511 [-]: EQ        1 R49 K4     ; if R49 == nil then PC := 525
512 [-]: JMP       525          ; PC := 525
513 [-]: GETGLOBAL R49 K102     ; R49 := 0x83e41587
514 [-]: GETGLOBAL R50 K11      ; R50 := 0xae91e43b
515 [-]: SELF      R50 R50 K96  ; R51 := R50; R50 := R50[0x42b04007]
516 [-]: GETTABLE  R52 R48 K105 ; R52 := R48["Polarity"]
517 [-]: GETTABLE  R52 R52 K106 ; R52 := R52["NameTag"]
518 [-]: LOADBOOL  R53 0 0      ; R53 := false
519 [-]: CALL      R50 4 0      ; R50,... := R50(R51,R52,R53)
520 [-]: CALL      R49 0 2      ; R49 := R49(R50,...)
521 [-]: LOADK     R50 K107     ; R50 := " "
522 [-]: GETTABLE  R51 R48 K100 ; R51 := R48["SearchCache"]
523 [-]: CONCAT    R49 R49 R51  ; R49 := R49 .. R50 .. R51
524 [-]: SETTABLE  R48 K100 R49 ; R48["SearchCache"] := R49
525 [-]: GETGLOBAL R49 K0       ; R49 := 0x7b998233
526 [-]: GETTABLE  R50 R48 K8   ; R50 := R48["Type"]
527 [-]: CALL      R49 2 2      ; R49 := R49(R50)
528 [-]: TEST      R49 1        ; if R49 then PC := 555
529 [-]: JMP       555          ; PC := 555
530 [-]: GETTABLE  R49 R48 K8   ; R49 := R48["Type"]
531 [-]: SELF      R49 R49 K20  ; R50 := R49; R49 := R49[0xf2deaf69]
532 [-]: GETGLOBAL R51 K108     ; R51 := gLotusSigilType
533 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
534 [-]: TEST      R49 0        ; if not R49 then PC := 555
535 [-]: JMP       555          ; PC := 555
536 [-]: GETTABLE  R49 R48 K27  ; R49 := R48["mStoreItem"]
537 [-]: SELF      R49 R49 K109 ; R50 := R49; R49 := R49[0xe1c86d38]
538 [-]: CALL      R49 2 2      ; R49 := R49(R50)
539 [-]: SUB       R49 R49 K17  ; R49 := R49 - 1.000000
540 [-]: LT        0 K16 R49    ; if 0.000000 >= R49 then PC := 555
541 [-]: JMP       555          ; PC := 555
542 [-]: GETTABLE  R50 R48 K34  ; R50 := R48["Name"]
543 [-]: LOADK     R51 K110     ; R51 := " (+"
544 [-]: GETUPVAL  R52 U7       ; R52 := U7
545 [-]: GETTABLE  R52 R52 K111 ; R52 := R52[0x74a11ec6]
546 [-]: MUL       R53 R49 K112 ; R53 := R49 * 100.000000
547 [-]: CALL      R52 2 2      ; R52 := R52(R53)
548 [-]: LOADK     R53 K113     ; R53 := "%"
549 [-]: GETGLOBAL R54 K114     ; R54 := Icons
550 [-]: GETTABLE  R54 R54 K115 ; R54 := R54["REPUTATION"]
551 [-]: LOADK     R55 K116     ; R55 := ")"
552 [-]: CONCAT    R50 R50 R55  ; R50 := R50 .. R51 .. R52 .. R53 .. R54 .. R55
553 [-]: SETTABLE  R48 K34 R50  ; R48["Name"] := R50
554 [-]: SETTABLE  R48 K117 K29 ; R48["IsSyndicateSigil"] := true
555 [-]: GETTABLE  R50 R48 K8   ; R50 := R48["Type"]
556 [-]: EQ        1 R50 K4     ; if R50 == nil then PC := 563
557 [-]: JMP       563          ; PC := 563
558 [-]: GETTABLE  R50 R48 K8   ; R50 := R48["Type"]
559 [-]: SELF      R50 R50 K20  ; R51 := R50; R50 := R50[0xf2deaf69]
560 [-]: GETGLOBAL R52 K118     ; R52 := gPetPowerSuitType
561 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
562 [-]: JMP       565          ; PC := 565
563 [-]: LOADBOOL  R50 0 1      ; R50 := false; PC := 564
564 [-]: LOADBOOL  R50 1 0      ; R50 := true
565 [-]: TEST      R50 0        ; if not R50 then PC := 585
566 [-]: JMP       585          ; PC := 585
567 [-]: GETGLOBAL R51 K0       ; R51 := 0x7b998233
568 [-]: GETTABLE  R52 R48 K30  ; R52 := R48["mPurchasedInfo"]
569 [-]: CALL      R51 2 2      ; R51 := R51(R52)
570 [-]: TEST      R51 1        ; if R51 then PC := 585
571 [-]: JMP       585          ; PC := 585
572 [-]: GETGLOBAL R51 K0       ; R51 := 0x7b998233
573 [-]: GETTABLE  R52 R48 K30  ; R52 := R48["mPurchasedInfo"]
574 [-]: GETTABLE  R52 R52 K39  ; R52 := R52["Item"]
575 [-]: CALL      R51 2 2      ; R51 := R51(R52)
576 [-]: TEST      R51 1        ; if R51 then PC := 585
577 [-]: JMP       585          ; PC := 585
578 [-]: GETUPVAL  R51 U8       ; R51 := U8
579 [-]: GETTABLE  R51 R51 K120 ; R51 := R51[0x44a40cdc]
580 [-]: GETGLOBAL R52 K11      ; R52 := 0xae91e43b
581 [-]: GETTABLE  R53 R48 K30  ; R53 := R48["mPurchasedInfo"]
582 [-]: GETTABLE  R53 R53 K39  ; R53 := R53["Item"]
583 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
584 [-]: SETTABLE  R48 K119 R51 ; R48["PetGenderBreedInfo"] := R51
585 [-]: GETGLOBAL R51 K121     ; R51 := mItemsGrid
586 [-]: SELF      R51 R51 K122 ; R52 := R51; R51 := R51[0xbad4316f]
587 [-]: MOVE      R53 R48      ; R53 := R48
588 [-]: LOADBOOL  R54 1 0      ; R54 := true
589 [-]: CALL      R51 4 1      ; R51(R52,R53,R54)
590 [-]: EQ        0 R43 K4     ; if R43 ~= nil then PC := 754
591 [-]: JMP       754          ; PC := 754
592 [-]: GETTABLE  R51 R48 K28  ; R51 := R48["mPurchased"]
593 [-]: TEST      R51 0        ; if not R51 then PC := 732
594 [-]: JMP       732          ; PC := 732
595 [-]: GETTABLE  R51 R48 K30  ; R51 := R48["mPurchasedInfo"]
596 [-]: EQ        1 R51 K4     ; if R51 == nil then PC := 732
597 [-]: JMP       732          ; PC := 732
598 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
599 [-]: GETTABLE  R51 R51 K39  ; R51 := R51["Item"]
600 [-]: EQ        1 R51 K4     ; if R51 == nil then PC := 606
601 [-]: JMP       606          ; PC := 606
602 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
603 [-]: GETTABLE  R51 R51 K39  ; R51 := R51["Item"]
604 [-]: GETTABLE  R43 R51 K123 ; R43 := R51["Id"]
605 [-]: JMP       754          ; PC := 754
606 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
607 [-]: GETTABLE  R51 R51 K92  ; R51 := R51["Consumable"]
608 [-]: EQ        1 R51 K4     ; if R51 == nil then PC := 619
609 [-]: JMP       619          ; PC := 619
610 [-]: GETTABLE  R51 R48 K30  ; R51 := R48["mPurchasedInfo"]
611 [-]: GETTABLE  R51 R51 K8   ; R51 := R51["Type"]
612 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
613 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["Consumable"]
614 [-]: GETTABLE  R52 R52 K8   ; R52 := R52["Type"]
615 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 754
616 [-]: JMP       754          ; PC := 754
617 [-]: GETTABLE  R43 R48 K123 ; R43 := R48["Id"]
618 [-]: JMP       754          ; PC := 754
619 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
620 [-]: GETTABLE  R51 R51 K91  ; R51 := R51["Emote"]
621 [-]: EQ        1 R51 K4     ; if R51 == nil then PC := 632
622 [-]: JMP       632          ; PC := 632
623 [-]: GETTABLE  R51 R48 K30  ; R51 := R48["mPurchasedInfo"]
624 [-]: GETTABLE  R51 R51 K8   ; R51 := R51["Type"]
625 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
626 [-]: GETTABLE  R52 R52 K91  ; R52 := R52["Emote"]
627 [-]: GETTABLE  R52 R52 K8   ; R52 := R52["Type"]
628 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 754
629 [-]: JMP       754          ; PC := 754
630 [-]: GETTABLE  R43 R48 K123 ; R43 := R48["Id"]
631 [-]: JMP       754          ; PC := 754
632 [-]: GETUPVAL  R51 U9       ; R51 := U9
633 [-]: GETUPVAL  R52 U10      ; R52 := U10
634 [-]: GETTABLE  R52 R52 K124 ; R52 := R52["SWAPPING_ITEM"]
635 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 652
636 [-]: JMP       652          ; PC := 652
637 [-]: GETGLOBAL R51 K0       ; R51 := 0x7b998233
638 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
639 [-]: GETTABLE  R52 R52 K125 ; R52 := R52["Element"]
640 [-]: CALL      R51 2 2      ; R51 := R51(R52)
641 [-]: TEST      R51 1        ; if R51 then PC := 652
642 [-]: JMP       652          ; PC := 652
643 [-]: GETTABLE  R51 R48 K30  ; R51 := R48["mPurchasedInfo"]
644 [-]: GETTABLE  R51 R51 K126 ; R51 := R51["UID"]
645 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
646 [-]: GETTABLE  R52 R52 K125 ; R52 := R52["Element"]
647 [-]: GETTABLE  R52 R52 K126 ; R52 := R52["UID"]
648 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 652
649 [-]: JMP       652          ; PC := 652
650 [-]: GETTABLE  R43 R48 K123 ; R43 := R48["Id"]
651 [-]: JMP       754          ; PC := 754
652 [-]: GETUPVAL  R51 U9       ; R51 := U9
653 [-]: GETUPVAL  R52 U10      ; R52 := U10
654 [-]: GETTABLE  R52 R52 K127 ; R52 := R52["SELECTING_SKINS"]
655 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 754
656 [-]: JMP       754          ; PC := 754
657 [-]: GETGLOBAL R51 K0       ; R51 := 0x7b998233
658 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
659 [-]: GETTABLE  R52 R52 K125 ; R52 := R52["Element"]
660 [-]: CALL      R51 2 2      ; R51 := R51(R52)
661 [-]: TEST      R51 1        ; if R51 then PC := 672
662 [-]: JMP       672          ; PC := 672
663 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
664 [-]: GETTABLE  R51 R51 K125 ; R51 := R51["Element"]
665 [-]: GETTABLE  R51 R51 K128 ; R51 := R51["LunaroArenaEntry"]
666 [-]: TEST      R51 0        ; if not R51 then PC := 672
667 [-]: JMP       672          ; PC := 672
668 [-]: GETGLOBAL R51 K129     ; R51 := 0x3d106989
669 [-]: LOADK     R52 K130     ; R52 := "yay"
670 [-]: CALL      R51 2 1      ; R51(R52)
671 [-]: JMP       754          ; PC := 754
672 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
673 [-]: GETTABLE  R51 R51 K131 ; R51 := R51["Cosmetic"]
674 [-]: GETTABLE  R51 R51 K132 ; R51 := R51["PetTrait"]
675 [-]: TEST      R51 0        ; if not R51 then PC := 694
676 [-]: JMP       694          ; PC := 694
677 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
678 [-]: GETTABLE  R51 R51 K131 ; R51 := R51["Cosmetic"]
679 [-]: GETTABLE  R51 R51 K133 ; R51 := R51["Attribute"]
680 [-]: TEST      R51 0        ; if not R51 then PC := 694
681 [-]: JMP       694          ; PC := 694
682 [-]: GETTABLE  R51 R48 K134 ; R51 := R48["PetTintColor"]
683 [-]: EQ        1 R51 K4     ; if R51 == nil then PC := 754
684 [-]: JMP       754          ; PC := 754
685 [-]: GETTABLE  R51 R48 K134 ; R51 := R48["PetTintColor"]
686 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
687 [-]: GETTABLE  R52 R52 K135 ; R52 := R52["CosmeticPreviousValue"]
688 [-]: SELF      R52 R52 K136 ; R53 := R52; R52 := R52[0xa5d5c8f6]
689 [-]: CALL      R52 2 2      ; R52 := R52(R53)
690 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 754
691 [-]: JMP       754          ; PC := 754
692 [-]: GETTABLE  R43 R48 K123 ; R43 := R48["Id"]
693 [-]: JMP       754          ; PC := 754
694 [-]: GETGLOBAL R51 K0       ; R51 := 0x7b998233
695 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
696 [-]: GETTABLE  R52 R52 K125 ; R52 := R52["Element"]
697 [-]: CALL      R51 2 2      ; R51 := R51(R52)
698 [-]: TEST      R51 1        ; if R51 then PC := 754
699 [-]: JMP       754          ; PC := 754
700 [-]: GETGLOBAL R51 K90      ; R51 := mSelected
701 [-]: GETTABLE  R51 R51 K125 ; R51 := R51["Element"]
702 [-]: GETTABLE  R51 R51 K137 ; R51 := R51["Customization"]
703 [-]: SELF      R51 R51 K138 ; R52 := R51; R51 := R51[0x5ef3783b]
704 [-]: GETGLOBAL R53 K90      ; R53 := mSelected
705 [-]: GETTABLE  R53 R53 K131 ; R53 := R53["Cosmetic"]
706 [-]: GETTABLE  R53 R53 K139 ; R53 := R53["Slot"]
707 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
708 [-]: GETTABLE  R52 R51 K140 ; R52 := R51["mItemId"]
709 [-]: GETTABLE  R52 R52 K141 ; R52 := R52["mId"]
710 [-]: GETTABLE  R53 R48 K30  ; R53 := R48["mPurchasedInfo"]
711 [-]: GETTABLE  R53 R53 K126 ; R53 := R53["UID"]
712 [-]: EQ        1 R52 R53    ; if R52 == R53 then PC := 730
713 [-]: JMP       730          ; PC := 730
714 [-]: GETTABLE  R52 R51 K140 ; R52 := R51["mItemId"]
715 [-]: GETTABLE  R52 R52 K141 ; R52 := R52["mId"]
716 [-]: EQ        0 R52 K101   ; if R52 ~= "" then PC := 754
717 [-]: JMP       754          ; PC := 754
718 [-]: GETGLOBAL R52 K0       ; R52 := 0x7b998233
719 [-]: GETTABLE  R53 R51 K142 ; R53 := R51["mItemType"]
720 [-]: CALL      R52 2 2      ; R52 := R52(R53)
721 [-]: TEST      R52 1        ; if R52 then PC := 754
722 [-]: JMP       754          ; PC := 754
723 [-]: GETTABLE  R52 R51 K142 ; R52 := R51["mItemType"]
724 [-]: SELF      R52 R52 K143 ; R53 := R52; R52 := R52[0xed4e0128]
725 [-]: CALL      R52 2 2      ; R52 := R52(R53)
726 [-]: GETTABLE  R53 R48 K30  ; R53 := R48["mPurchasedInfo"]
727 [-]: GETTABLE  R53 R53 K126 ; R53 := R53["UID"]
728 [-]: EQ        0 R52 R53    ; if R52 ~= R53 then PC := 754
729 [-]: JMP       754          ; PC := 754
730 [-]: GETTABLE  R43 R48 K123 ; R43 := R48["Id"]
731 [-]: JMP       754          ; PC := 754
732 [-]: GETTABLE  R52 R48 K8   ; R52 := R48["Type"]
733 [-]: EQ        0 R52 K4     ; if R52 ~= nil then PC := 754
734 [-]: JMP       754          ; PC := 754
735 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
736 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["Consumable"]
737 [-]: EQ        1 R52 K4     ; if R52 == nil then PC := 744
738 [-]: JMP       744          ; PC := 744
739 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
740 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["Consumable"]
741 [-]: GETTABLE  R52 R52 K8   ; R52 := R52["Type"]
742 [-]: EQ        1 R52 K4     ; if R52 == nil then PC := 753
743 [-]: JMP       753          ; PC := 753
744 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
745 [-]: GETTABLE  R52 R52 K91  ; R52 := R52["Emote"]
746 [-]: EQ        1 R52 K4     ; if R52 == nil then PC := 754
747 [-]: JMP       754          ; PC := 754
748 [-]: GETGLOBAL R52 K90      ; R52 := mSelected
749 [-]: GETTABLE  R52 R52 K91  ; R52 := R52["Emote"]
750 [-]: GETTABLE  R52 R52 K8   ; R52 := R52["Type"]
751 [-]: EQ        0 R52 K4     ; if R52 ~= nil then PC := 754
752 [-]: JMP       754          ; PC := 754
753 [-]: GETTABLE  R43 R48 K123 ; R43 := R48["Id"]
754 [-]: FORLOOP   R44 483      ; R44 += R46; if R44 <= R45 then begin PC := 483; R47 := R44 end
755 [-]: GETGLOBAL R52 K121     ; R52 := mItemsGrid
756 [-]: GETUPVAL  R53 U7       ; R53 := U7
757 [-]: GETTABLE  R53 R53 K41  ; R53 := R53[0x06d055f9]
758 [-]: EQ        1 R43 K4     ; if R43 == nil then PC := 761
759 [-]: JMP       761          ; PC := 761
760 [-]: LOADBOOL  R54 0 1      ; R54 := false; PC := 761
761 [-]: LOADBOOL  R54 1 0      ; R54 := true
762 [-]: LOADK     R55 1        ; R55 := 1.000000
763 [-]: MOVE      R56 R43      ; R56 := R43
764 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
765 [-]: SETTABLE  R52 K144 R53 ; R52["mEquippedItemId"] := R53
766 [-]: GETGLOBAL R52 K11      ; R52 := 0xae91e43b
767 [-]: SELF      R52 R52 K145 ; R53 := R52; R52 := R52[0x5f56eeab]
768 [-]: GETUPVAL  R54 U11      ; R54 := U11
769 [-]: GETTABLE  R54 R54 K146 ; R54 := R54["mClipName"]
770 [-]: LOADK     R55 K147     ; R55 := ".FilterText"
771 [-]: CONCAT    R54 R54 R55  ; R54 := R54 .. R55
772 [-]: LOADK     R55 29       ; R55 := 29.000000
773 [-]: LOADK     R56 K101     ; R56 := ""
774 [-]: CALL      R52 5 1      ; R52(R53,R54,R55,R56)
775 [-]: GETUPVAL  R52 U11      ; R52 := U11
776 [-]: SETTABLE  R52 K148 K4  ; R52["mSearchTerm"] := nil
777 [-]: GETUPVAL  R52 U11      ; R52 := U11
778 [-]: SETTABLE  R52 K149 K4  ; R52["mLowerSearchTerm"] := nil
779 [-]: GETGLOBAL R52 K82      ; R52 := _T
780 [-]: SETTABLE  R52 K150 K4  ; R52["CurrentSearchTerm"] := nil
781 [-]: GETGLOBAL R52 K121     ; R52 := mItemsGrid
782 [-]: SETTABLE  R52 K151 K4  ; R52["mLastFilterBy"] := nil
783 [-]: GETGLOBAL R52 K121     ; R52 := mItemsGrid
784 [-]: SELF      R52 R52 K152 ; R53 := R52; R52 := R52[0x71e9ac81]
785 [-]: CALL      R52 2 1      ; R52(R53)
786 [-]: GETGLOBAL R52 K121     ; R52 := mItemsGrid
787 [-]: GETTABLE  R52 R52 K153 ; R52 := R52["mIndexOnRedraw"]
788 [-]: EQ        1 R52 K4     ; if R52 == nil then PC := 797
789 [-]: JMP       797          ; PC := 797
790 [-]: GETGLOBAL R52 K121     ; R52 := mItemsGrid
791 [-]: SELF      R52 R52 K154 ; R53 := R52; R52 := R52[0x77de11fe]
792 [-]: GETGLOBAL R54 K121     ; R54 := mItemsGrid
793 [-]: GETTABLE  R54 R54 K153 ; R54 := R54["mIndexOnRedraw"]
794 [-]: CALL      R52 3 1      ; R52(R53,R54)
795 [-]: GETGLOBAL R52 K121     ; R52 := mItemsGrid
796 [-]: SETTABLE  R52 K153 K4  ; R52["mIndexOnRedraw"] := nil
797 [-]: GETUPVAL  R52 U7       ; R52 := U7
798 [-]: GETTABLE  R52 R52 K155 ; R52 := R52[0x659d451f]
799 [-]: GETGLOBAL R53 K156     ; R53 := 0x0032441c
800 [-]: GETTABLE  R53 R53 K157 ; R53 := R53["UISound_ButtonSelect"]
801 [-]: CALL      R52 2 1      ; R52(R53)
802 [-]: GETUPVAL  R52 U7       ; R52 := U7
803 [-]: GETTABLE  R52 R52 K155 ; R52 := R52[0x659d451f]
804 [-]: GETGLOBAL R53 K156     ; R53 := 0x0032441c
805 [-]: GETTABLE  R53 R53 K158 ; R53 := R53["UISound_WindowOpen"]
806 [-]: CALL      R52 2 1      ; R52(R53)
807 [-]: RETURN    R0 1         ; return 


; Function #113.1:
;
; Name:            
; Defined at line: 6485
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mStoreItem"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 121
  5 [-]: JMP       121          ; PC := 121
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["Type"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 57
 10 [-]: JMP       57           ; PC := 57
 11 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Type"]
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf2deaf69]
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7eb7cbd7
 14 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 15 [-]: TEST      R1 1         ; if R1 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Type"]
 18 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf2deaf69]
 19 [-]: GETGLOBAL R3 K5        ; R3 := 0xb53be573
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 57
 22 [-]: JMP       57           ; PC := 57
 23 [-]: GETGLOBAL R1 K6        ; R1 := 0x25d99d89
 24 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x62c81b76]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x5734fdfa]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 29 [-]: MOVE      R3 R1        ; R3 := R1
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: TEST      R2 1         ; if R2 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 34 [-]: GETTABLE  R3 R1 K9     ; R3 := R1["mItemType"]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 1         ; if R2 then PC := 53
 37 [-]: JMP       53           ; PC := 53
 38 [-]: GETGLOBAL R2 K10       ; R2 := 0xb009bbc6
 39 [-]: GETTABLE  R3 R1 K9     ; R3 := R1["mItemType"]
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 56
 45 [-]: JMP       56           ; PC := 56
 46 [-]: GETUPVAL  R3 U1        ; R3 := U1
 47 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0x056dcf06]
 48 [-]: MOVE      R4 R2        ; R4 := R2
 49 [-]: LOADBOOL  R5 1 0       ; R5 := true
 50 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 51 [-]: SETTABLE  R0 K11 R3    ; R0["Icon"] := R3
 52 [-]: JMP       56           ; PC := 56
 53 [-]: GETGLOBAL R3 K13       ; R3 := 0x0032441c
 54 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["UITexture_ProfilePlaceHolder"]
 55 [-]: SETTABLE  R0 K11 R3    ; R0["Icon"] := R3
 56 [-]: SETTABLE  R0 K15 K16   ; R0["Themed"] := true
 57 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mPurchasedInfo"]
 58 [-]: EQ        1 R3 K18     ; if R3 == nil then PC := 87
 59 [-]: JMP       87           ; PC := 87
 60 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 61 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mPurchasedInfo"]
 62 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["Item"]
 63 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 64 [-]: TEST      R3 1         ; if R3 then PC := 87
 65 [-]: JMP       87           ; PC := 87
 66 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 67 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mPurchasedInfo"]
 68 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["Item"]
 69 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["mFocusLens"]
 70 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 71 [-]: TEST      R3 1         ; if R3 then PC := 87
 72 [-]: JMP       87           ; PC := 87
 73 [-]: GETUPVAL  R3 U2        ; R3 := U2
 74 [-]: GETTABLE  R3 R3 K21    ; R3 := R3[0x12afd099]
 75 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mPurchasedInfo"]
 76 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["Item"]
 77 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["mFocusLens"]
 78 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 79 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 80 [-]: GETTABLE  R5 R3 K23    ; R5 := R3["PolarityType"]
 81 [-]: SETTABLE  R4 K2 R5     ; R4["Type"] := R5
 82 [-]: GETTABLE  R5 R3 K25    ; R5 := R3["PolarityTag"]
 83 [-]: SETTABLE  R4 K24 R5    ; R4["NameTag"] := R5
 84 [-]: GETTABLE  R5 R3 K26    ; R5 := R3["LensTag"]
 85 [-]: SETTABLE  R4 K26 R5    ; R4["LensTag"] := R5
 86 [-]: SETTABLE  R0 K22 R4    ; R0["Polarity"] := R4
 87 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 88 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["Type"]
 89 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 90 [-]: TEST      R4 1         ; if R4 then PC := 121
 91 [-]: JMP       121          ; PC := 121
 92 [-]: GETUPVAL  R4 U3        ; R4 := U3
 93 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["UmbraUnlocked"]
 94 [-]: TEST      R4 1         ; if R4 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["Type"]
 97 [-]: GETGLOBAL R5 K28       ; R5 := 0xfba12602
 98 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 121
 99 [-]: JMP       121          ; PC := 121
100 [-]: GETUPVAL  R4 U3        ; R4 := U3
101 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["UmbraMeleeUnlocked"]
102 [-]: TEST      R4 1         ; if R4 then PC := 108
103 [-]: JMP       108          ; PC := 108
104 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["Type"]
105 [-]: GETGLOBAL R5 K30       ; R5 := 0xfa01e69a
106 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 121
107 [-]: JMP       121          ; PC := 121
108 [-]: GETUPVAL  R4 U3        ; R4 := U3
109 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["ArchwingUnlocked"]
110 [-]: TEST      R4 1         ; if R4 then PC := 116
111 [-]: JMP       116          ; PC := 116
112 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["Type"]
113 [-]: GETGLOBAL R5 K32       ; R5 := 0x5de3dc36
114 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 121
115 [-]: JMP       121          ; PC := 121
116 [-]: GETGLOBAL R4 K33       ; R4 := 0x33bdd652
117 [-]: GETTABLE  R4 R4 K34    ; R4 := R4[0x23d5322f]
118 [-]: GETUPVAL  R5 U4        ; R5 := U4
119 [-]: MOVE      R6 R0        ; R6 := R0
120 [-]: CALL      R4 3 1       ; R4(R5,R6)
121 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 6790
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSlotCompatibilityOverrides"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSlotCompatibilityOverrides"]
  5 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: JMP       24           ; PC := 24
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  9 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["CustomizationType"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["CustomizationType"]
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x06e65678]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mStoreItem"]
 20 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x06e65678]
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 6800
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x2540510f]
  7 [-]: LOADK     R3 7         ; R3 := 7.000000
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 28
 13 [-]: JMP       28           ; PC := 28
 14 [-]: LOADK     R2 1         ; R2 := 1.000000
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0x52a3d23b
 16 [-]: LEN       R3 R3        ; R3 := # R3
 17 [-]: LOADK     R4 1         ; R4 := 1.000000
 18 [-]: FORPREP   R2 27        ; R2 -= R4; PC := 27
 19 [-]: SELF      R6 R1 K4     ; R7 := R1; R6 := R1[0xf2deaf69]
 20 [-]: GETGLOBAL R8 K3        ; R8 := 0x52a3d23b
 21 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 22 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 23 [-]: TEST      R6 0         ; if not R6 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADBOOL  R6 1 0       ; R6 := true
 26 [-]: RETURN    R6 2         ; return R6
 27 [-]: FORLOOP   R2 19        ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
 28 [-]: LOADBOOL  R6 0 0       ; R6 := false
 29 [-]: RETURN    R6 2         ; return R6
 30 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 6815
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: TEST      R3 1         ; if R3 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADBOOL  R4 1 0       ; R4 := true
  9 [-]: RETURN    R4 2         ; return R4
 10 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0x06e65678]
 11 [-]: LOADK     R6 16        ; R6 := 16.000000
 12 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 13 [-]: TEST      R4 0         ; if not R4 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0xf2deaf69]
 16 [-]: GETGLOBAL R6 K4        ; R6 := 0x26072944
 17 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 18 [-]: TEST      R4 0         ; if not R4 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADBOOL  R4 0 0       ; R4 := false
 21 [-]: RETURN    R4 2         ; return R4
 22 [-]: TEST      R2 1         ; if R2 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADBOOL  R4 1 0       ; R4 := true
 25 [-]: RETURN    R4 2         ; return R4
 26 [-]: GETGLOBAL R4 K5        ; R4 := _T
 27 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mSpecialSuitMode"]
 28 [-]: TEST      R4 1         ; if R4 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0x06e65678]
 31 [-]: LOADK     R6 0         ; R6 := 0.000000
 32 [-]: TAILCALL  R4 3 0       ; R4,... := R4(R5,R6)
 33 [-]: RETURN    R4 0         ; return R4,...
 34 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0xf2deaf69]
 35 [-]: GETGLOBAL R6 K7        ; R6 := 0x7ed0a956
 36 [-]: LOADK     R7 K8        ; R7 := "/Lotus/Powersuits/Khora/Kavat/KhoraKavatPowerSuit"
 37 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 38 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 39 [-]: TEST      R4 0         ; if not R4 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0x06e65678]
 42 [-]: LOADK     R6 8         ; R6 := 8.000000
 43 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 44 [-]: NOT       R4 R4        ; R4 := not R4
 45 [-]: RETURN    R4 2         ; return R4
 46 [-]: JMP       78           ; PC := 78
 47 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0xf2deaf69]
 48 [-]: GETGLOBAL R6 K7        ; R6 := 0x7ed0a956
 49 [-]: LOADK     R7 K9        ; R7 := "/Lotus/Powersuits/Wraith/ReaperBaseSuit"
 50 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 51 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 52 [-]: TEST      R4 0         ; if not R4 then PC := 69
 53 [-]: JMP       69           ; PC := 69
 54 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0x06e65678]
 55 [-]: LOADK     R6 0         ; R6 := 0.000000
 56 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 57 [-]: TEST      R4 1         ; if R4 then PC := 67
 58 [-]: JMP       67           ; PC := 67
 59 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0x06e65678]
 60 [-]: LOADK     R6 7         ; R6 := 7.000000
 61 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 62 [-]: TEST      R4 1         ; if R4 then PC := 67
 63 [-]: JMP       67           ; PC := 67
 64 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0x06e65678]
 65 [-]: LOADK     R6 16        ; R6 := 16.000000
 66 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 67 [-]: RETURN    R4 2         ; return R4
 68 [-]: JMP       78           ; PC := 78
 69 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0xf2deaf69]
 70 [-]: GETGLOBAL R6 K7        ; R6 := 0x7ed0a956
 71 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Powersuits/Yareli/BoardBaseSuit"
 72 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 73 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 74 [-]: TEST      R4 0         ; if not R4 then PC := 78
 75 [-]: JMP       78           ; PC := 78
 76 [-]: LOADBOOL  R4 0 0       ; R4 := false
 77 [-]: RETURN    R4 2         ; return R4
 78 [-]: LOADBOOL  R4 1 0       ; R4 := true
 79 [-]: RETURN    R4 2         ; return R4
 80 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 6845
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  99

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  9 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 12 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["EquippedItem"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 36
 15 [-]: JMP       36           ; PC := 36
 16 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["EquippedItem"]
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mModularParts"]
 18 [-]: LEN       R2 R2        ; R2 := # R2
 19 [-]: LT        0 K5 R2      ; if 0.000000 >= R2 then PC := 36
 20 [-]: JMP       36           ; PC := 36
 21 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 22 [-]: GETGLOBAL R3 K6        ; R3 := 0xc8802016
 23 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["EquippedItem"]
 24 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mModularParts"]
 25 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R8 K7        ; R8 := 0x33bdd652
 28 [-]: GETTABLE  R8 R8 K8     ; R8 := R8[0x23d5322f]
 29 [-]: MOVE      R9 R2        ; R9 := R2
 30 [-]: GETGLOBAL R10 K9       ; R10 := 0x88efc25e
 31 [-]: MOVE      R11 R7       ; R11 := R7
 32 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 33 [-]: CALL      R8 0 1       ; R8(R9,...)
 34 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 27; R5 := R6 end
 35 [-]: JMP       27           ; PC := 27
 36 [-]: GETUPVAL  R8 U0        ; R8 := U0
 37 [-]: GETTABLE  R9 R1 K10    ; R9 := R1["Type"]
 38 [-]: GETTABLE  R10 R1 K11   ; R10 := R1["LoadOutId"]
 39 [-]: GETTABLE  R11 R1 K12   ; R11 := R1["LoadOutType"]
 40 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 41 [-]: GETTABLE  R9 R1 K11    ; R9 := R1["LoadOutId"]
 42 [-]: EQ        1 R9 K14     ; if R9 == 5.000000 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETTABLE  R9 R1 K11    ; R9 := R1["LoadOutId"]
 45 [-]: EQ        1 R9 K15     ; if R9 == 6.000000 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: LOADBOOL  R9 0 1       ; R9 := false; PC := 48
 48 [-]: LOADBOOL  R9 1 0       ; R9 := true
 49 [-]: GETGLOBAL R10 K16      ; R10 := mInventory
 50 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0xe9131614]
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: TESTSET   R11 R9 0     ; if not R9 then PC := 65 else R11 := R9
 53 [-]: JMP       65           ; PC := 65
 54 [-]: GETGLOBAL R11 K18      ; R11 := _T
 55 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["mSpecialSuitMode"]
 56 [-]: TEST      R11 0        ; if not R11 then PC := 65
 57 [-]: JMP       65           ; PC := 65
 58 [-]: GETGLOBAL R11 K1       ; R11 := mSelected
 59 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["Element"]
 60 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["EquippedItem"]
 61 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["mItemType"]
 62 [-]: SELF      R11 R11 K21  ; R12 := R11; R11 := R11[0xf2deaf69]
 63 [-]: GETGLOBAL R13 K22      ; R13 := gPetPowerSuitType
 64 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 65 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 66 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 67 [-]: GETGLOBAL R14 K24      ; R14 := 0x25d99d89
 68 [-]: SETTABLE  R13 K23 R14  ; R13["GameData"] := R14
 69 [-]: LOADNIL   R14 R14      ; R14 := nil
 70 [-]: NEWTABLE  R15 0 0      ; R15 := {}
 71 [-]: GETGLOBAL R16 K6       ; R16 := 0xc8802016
 72 [-]: MOVE      R17 R8       ; R17 := R8
 73 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
 74 [-]: JMP       511          ; PC := 511
 75 [-]: SELF      R21 R20 K25  ; R22 := R20; R21 := R20[0xcde10c4a]
 76 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 77 [-]: SELF      R22 R20 K21  ; R23 := R20; R22 := R20[0xf2deaf69]
 78 [-]: GETGLOBAL R24 K26      ; R24 := gLotusWeaponType
 79 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
 80 [-]: TEST      R22 0        ; if not R22 then PC := 108
 81 [-]: JMP       108          ; PC := 108
 82 [-]: SELF      R22 R20 K27  ; R23 := R20; R22 := R20[0x81f3a598]
 83 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 84 [-]: TEST      R22 0        ; if not R22 then PC := 108
 85 [-]: JMP       108          ; PC := 108
 86 [-]: SELF      R22 R20 K28  ; R23 := R20; R22 := R20[0x9208afa1]
 87 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 88 [-]: EQ        1 R22 R21    ; if R22 == R21 then PC := 108
 89 [-]: JMP       108          ; PC := 108
 90 [-]: GETGLOBAL R22 K7       ; R22 := 0x33bdd652
 91 [-]: GETTABLE  R22 R22 K8   ; R22 := R22[0x23d5322f]
 92 [-]: MOVE      R23 R15      ; R23 := R15
 93 [-]: MOVE      R24 R21      ; R24 := R21
 94 [-]: CALL      R22 3 1      ; R22(R23,R24)
 95 [-]: GETGLOBAL R22 K7       ; R22 := 0x33bdd652
 96 [-]: GETTABLE  R22 R22 K8   ; R22 := R22[0x23d5322f]
 97 [-]: MOVE      R23 R15      ; R23 := R15
 98 [-]: SELF      R24 R20 K28  ; R25 := R20; R24 := R20[0x9208afa1]
 99 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
100 [-]: CALL      R22 0 1      ; R22(R23,...)
101 [-]: GETUPVAL  R22 U1       ; R22 := U1
102 [-]: SELF      R22 R22 K29  ; R23 := R22; R22 := R22[0xd6f0c641]
103 [-]: GETGLOBAL R24 K30      ; R24 := 0x9166d883
104 [-]: MOVE      R25 R20      ; R25 := R20
105 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
106 [-]: MOVE      R14 R22      ; R14 := R22
107 [-]: JMP       132          ; PC := 132
108 [-]: GETGLOBAL R22 K7       ; R22 := 0x33bdd652
109 [-]: GETTABLE  R22 R22 K8   ; R22 := R22[0x23d5322f]
110 [-]: MOVE      R23 R15      ; R23 := R15
111 [-]: MOVE      R24 R21      ; R24 := R21
112 [-]: CALL      R22 3 1      ; R22(R23,R24)
113 [-]: TEST      R11 0        ; if not R11 then PC := 125
114 [-]: JMP       125          ; PC := 125
115 [-]: SELF      R22 R20 K31  ; R23 := R20; R22 := R20[0x6df09e59]
116 [-]: CALL      R22 2 2      ; R22 := R22(R23)
117 [-]: TEST      R22 0        ; if not R22 then PC := 125
118 [-]: JMP       125          ; PC := 125
119 [-]: GETGLOBAL R22 K7       ; R22 := 0x33bdd652
120 [-]: GETTABLE  R22 R22 K8   ; R22 := R22[0x23d5322f]
121 [-]: MOVE      R23 R15      ; R23 := R15
122 [-]: SELF      R24 R21 K32  ; R25 := R21; R24 := R21[0x33abee92]
123 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
124 [-]: CALL      R22 0 1      ; R22(R23,...)
125 [-]: GETUPVAL  R22 U1       ; R22 := U1
126 [-]: SELF      R22 R22 K33  ; R23 := R22; R22 := R22[0xe39b2ba1]
127 [-]: GETGLOBAL R24 K30      ; R24 := 0x9166d883
128 [-]: SELF      R25 R20 K25  ; R26 := R20; R25 := R20[0xcde10c4a]
129 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
130 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
131 [-]: MOVE      R14 R22      ; R14 := R22
132 [-]: LOADNIL   R22 R22      ; R22 := nil
133 [-]: SELF      R23 R20 K21  ; R24 := R20; R23 := R20[0xf2deaf69]
134 [-]: GETGLOBAL R25 K34      ; R25 := gLotusMeleeWeaponType
135 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
136 [-]: TEST      R23 0        ; if not R23 then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: SELF      R23 R20 K35  ; R24 := R20; R23 := R20[0xa779cba7]
139 [-]: CALL      R23 2 2      ; R23 := R23(R24)
140 [-]: MOVE      R22 R23      ; R22 := R23
141 [-]: GETGLOBAL R23 K6       ; R23 := 0xc8802016
142 [-]: MOVE      R24 R10      ; R24 := R10
143 [-]: CALL      R23 2 4      ; R23,R24,R25 := R23(R24)
144 [-]: JMP       262          ; PC := 262
145 [-]: GETGLOBAL R28 K36      ; R28 := 0xce225efa
146 [-]: LOADK     R29 0        ; R29 := 0.000000
147 [-]: CALL      R28 2 1      ; R28(R29)
148 [-]: GETUPVAL  R28 U1       ; R28 := U1
149 [-]: SELF      R28 R28 K37  ; R29 := R28; R28 := R28[0x5458ba4c]
150 [-]: GETTABLE  R30 R27 K20  ; R30 := R27["mItemType"]
151 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
152 [-]: GETGLOBAL R29 K0       ; R29 := 0x7b998233
153 [-]: MOVE      R30 R28      ; R30 := R28
154 [-]: CALL      R29 2 2      ; R29 := R29(R30)
155 [-]: TEST      R29 1        ; if R29 then PC := 262
156 [-]: JMP       262          ; PC := 262
157 [-]: GETTABLE  R29 R27 K20  ; R29 := R27["mItemType"]
158 [-]: SELF      R29 R29 K21  ; R30 := R29; R29 := R29[0xf2deaf69]
159 [-]: GETGLOBAL R31 K38      ; R31 := gLotusSuitCustomizationType
160 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
161 [-]: LOADBOOL  R30 1 0      ; R30 := true
162 [-]: EQ        1 R22 K39    ; if R22 == nil then PC := 170
163 [-]: JMP       170          ; PC := 170
164 [-]: TEST      R29 0        ; if not R29 then PC := 170
165 [-]: JMP       170          ; PC := 170
166 [-]: SELF      R31 R28 K40  ; R32 := R28; R31 := R28[0x6ca47e92]
167 [-]: MOVE      R33 R22      ; R33 := R22
168 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
169 [-]: MOVE      R30 R31      ; R30 := R31
170 [-]: GETUPVAL  R31 U2       ; R31 := U2
171 [-]: MOVE      R32 R20      ; R32 := R20
172 [-]: MOVE      R33 R28      ; R33 := R28
173 [-]: MOVE      R34 R9       ; R34 := R9
174 [-]: MOVE      R35 R29      ; R35 := R29
175 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
176 [-]: TEST      R30 0        ; if not R30 then PC := 262
177 [-]: JMP       262          ; PC := 262
178 [-]: TEST      R31 0        ; if not R31 then PC := 262
179 [-]: JMP       262          ; PC := 262
180 [-]: LOADBOOL  R32 0 0      ; R32 := false
181 [-]: GETGLOBAL R33 K6       ; R33 := 0xc8802016
182 [-]: MOVE      R34 R15      ; R34 := R15
183 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
184 [-]: JMP       200          ; PC := 200
185 [-]: SELF      R38 R28 K41  ; R39 := R28; R38 := R28[0x29ba1d84]
186 [-]: CALL      R38 2 2      ; R38 := R38(R39)
187 [-]: TEST      R11 0        ; if not R11 then PC := 191
188 [-]: JMP       191          ; PC := 191
189 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 198
190 [-]: JMP       198          ; PC := 198
191 [-]: TEST      R11 1        ; if R11 then PC := 200
192 [-]: JMP       200          ; PC := 200
193 [-]: SELF      R39 R37 K21  ; R40 := R37; R39 := R37[0xf2deaf69]
194 [-]: MOVE      R41 R38      ; R41 := R38
195 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
196 [-]: TEST      R39 0        ; if not R39 then PC := 200
197 [-]: JMP       200          ; PC := 200
198 [-]: LOADBOOL  R32 1 0      ; R32 := true
199 [-]: JMP       202          ; PC := 202
200 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 185; R35 := R36 end
201 [-]: JMP       185          ; PC := 185
202 [-]: TEST      R32 0        ; if not R32 then PC := 262
203 [-]: JMP       262          ; PC := 262
204 [-]: GETUPVAL  R39 U3       ; R39 := U3
205 [-]: GETTABLE  R39 R39 K42  ; R39 := R39[0x08681f50]
206 [-]: GETGLOBAL R40 K43      ; R40 := 0xae91e43b
207 [-]: MOVE      R41 R28      ; R41 := R28
208 [-]: MOVE      R42 R13      ; R42 := R13
209 [-]: LOADNIL   R43 R44      ; R43 := R44 := nil
210 [-]: LOADBOOL  R45 1 0      ; R45 := true
211 [-]: CALL      R39 7 2      ; R39 := R39(R40,R41,R42,R43,R44,R45)
212 [-]: LOADK     R40 K44      ; R40 := ""
213 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
214 [-]: GETTABLE  R42 R39 K45  ; R42 := R39["LocalizedDesc"]
215 [-]: CALL      R41 2 2      ; R41 := R41(R42)
216 [-]: TEST      R41 0        ; if not R41 then PC := 219
217 [-]: JMP       219          ; PC := 219
218 [-]: SETTABLE  R39 K45 K44  ; R39["LocalizedDesc"] := ""
219 [-]: GETTABLE  R41 R27 K46  ; R41 := R27["mUpgradeInstance"]
220 [-]: EQ        1 R41 K39    ; if R41 == nil then PC := 228
221 [-]: JMP       228          ; PC := 228
222 [-]: GETTABLE  R41 R27 K46  ; R41 := R27["mUpgradeInstance"]
223 [-]: SELF      R41 R41 K47  ; R42 := R41; R41 := R41[0x2d74952a]
224 [-]: SELF      R43 R27 K48  ; R44 := R27; R43 := R27[0x20c79262]
225 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
226 [-]: CALL      R41 0 2      ; R41 := R41(R42,...)
227 [-]: MOVE      R40 R41      ; R40 := R41
228 [-]: EQ        1 R40 K44    ; if R40 == "" then PC := 241
229 [-]: JMP       241          ; PC := 241
230 [-]: GETTABLE  R41 R39 K45  ; R41 := R39["LocalizedDesc"]
231 [-]: LOADK     R42 K49      ; R42 := "\r\n\r\n\r\n"
232 [-]: GETGLOBAL R43 K43      ; R43 := 0xae91e43b
233 [-]: SELF      R43 R43 K50  ; R44 := R43; R43 := R43[0x42b04007]
234 [-]: LOADK     R45 K51      ; R45 := "<ENHANCER>"
235 [-]: LOADBOOL  R46 1 0      ; R46 := true
236 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
237 [-]: LOADK     R44 K52      ; R44 := "\r\n"
238 [-]: MOVE      R45 R40      ; R45 := R40
239 [-]: CONCAT    R41 R41 R45  ; R41 := R41 .. R42 .. R43 .. R44 .. R45
240 [-]: SETTABLE  R39 K45 R41  ; R39["LocalizedDesc"] := R41
241 [-]: SETTABLE  R39 K53 R28  ; R39["mStoreItem"] := R28
242 [-]: SELF      R41 R27 K55  ; R42 := R27; R41 := R27[0xd186922b]
243 [-]: CALL      R41 2 2      ; R41 := R41(R42)
244 [-]: SETTABLE  R39 K54 R41  ; R39["Name"] := R41
245 [-]: SETTABLE  R39 K56 R27  ; R39["Skin"] := R27
246 [-]: SETTABLE  R39 K57 K58  ; R39["mPurchased"] := true
247 [-]: NEWTABLE  R41 0 1      ; R41 := {}
248 [-]: GETTABLE  R42 R27 K61  ; R42 := R27["mItemId"]
249 [-]: GETTABLE  R42 R42 K62  ; R42 := R42["mId"]
250 [-]: SETTABLE  R41 K60 R42  ; R41["UID"] := R42
251 [-]: SETTABLE  R39 K59 R41  ; R39["mPurchasedInfo"] := R41
252 [-]: LEN       R41 R0       ; R41 := # R0
253 [-]: SETTABLE  R39 K63 R41  ; R39["mSortId"] := R41
254 [-]: GETGLOBAL R41 K7       ; R41 := 0x33bdd652
255 [-]: GETTABLE  R41 R41 K8   ; R41 := R41[0x23d5322f]
256 [-]: MOVE      R42 R0       ; R42 := R0
257 [-]: MOVE      R43 R39      ; R43 := R39
258 [-]: CALL      R41 3 1      ; R41(R42,R43)
259 [-]: SELF      R41 R28 K64  ; R42 := R28; R41 := R28[0xed4e0128]
260 [-]: CALL      R41 2 2      ; R41 := R41(R42)
261 [-]: SETTABLE  R12 R41 K58  ; R12[R41] := true
262 [-]: TFORLOOP  R23 2        ; R26,R27 :=  R23(R24,R25); if R26 ~= nil then begin PC = 145; R25 := R26 end
263 [-]: JMP       145          ; PC := 145
264 [-]: GETGLOBAL R41 K6       ; R41 := 0xc8802016
265 [-]: MOVE      R42 R14      ; R42 := R14
266 [-]: CALL      R41 2 4      ; R41,R42,R43 := R41(R42)
267 [-]: JMP       509          ; PC := 509
268 [-]: GETGLOBAL R46 K36      ; R46 := 0xce225efa
269 [-]: LOADK     R47 0        ; R47 := 0.000000
270 [-]: CALL      R46 2 1      ; R46(R47)
271 [-]: SELF      R46 R45 K65  ; R47 := R45; R46 := R45[0xf278f8a1]
272 [-]: CALL      R46 2 2      ; R46 := R46(R47)
273 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
274 [-]: MOVE      R48 R46      ; R48 := R46
275 [-]: CALL      R47 2 2      ; R47 := R47(R48)
276 [-]: TEST      R47 1        ; if R47 then PC := 509
277 [-]: JMP       509          ; PC := 509
278 [-]: SELF      R47 R45 K64  ; R48 := R45; R47 := R45[0xed4e0128]
279 [-]: CALL      R47 2 2      ; R47 := R47(R48)
280 [-]: GETTABLE  R48 R12 R47  ; R48 := R12[R47]
281 [-]: EQ        0 R48 K39    ; if R48 ~= nil then PC := 284
282 [-]: JMP       284          ; PC := 284
283 [-]: LOADBOOL  R48 0 1      ; R48 := false; PC := 284
284 [-]: LOADBOOL  R48 1 0      ; R48 := true
285 [-]: TEST      R48 1        ; if R48 then PC := 509
286 [-]: JMP       509          ; PC := 509
287 [-]: LOADBOOL  R49 1 0      ; R49 := true
288 [-]: EQ        1 R22 K39    ; if R22 == nil then PC := 294
289 [-]: JMP       294          ; PC := 294
290 [-]: SELF      R50 R45 K40  ; R51 := R45; R50 := R45[0x6ca47e92]
291 [-]: MOVE      R52 R22      ; R52 := R22
292 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
293 [-]: MOVE      R49 R50      ; R49 := R50
294 [-]: GETUPVAL  R50 U2       ; R50 := U2
295 [-]: MOVE      R51 R20      ; R51 := R20
296 [-]: MOVE      R52 R45      ; R52 := R45
297 [-]: MOVE      R53 R9       ; R53 := R9
298 [-]: LOADBOOL  R54 1 0      ; R54 := true
299 [-]: CALL      R50 5 2      ; R50 := R50(R51,R52,R53,R54)
300 [-]: NOT       R51 R11      ; R51 := not R11
301 [-]: TEST      R11 0        ; if not R11 then PC := 315
302 [-]: JMP       315          ; PC := 315
303 [-]: GETGLOBAL R52 K6       ; R52 := 0xc8802016
304 [-]: MOVE      R53 R15      ; R53 := R15
305 [-]: CALL      R52 2 4      ; R52,R53,R54 := R52(R53)
306 [-]: JMP       313          ; PC := 313
307 [-]: SELF      R57 R45 K41  ; R58 := R45; R57 := R45[0x29ba1d84]
308 [-]: CALL      R57 2 2      ; R57 := R57(R58)
309 [-]: EQ        0 R56 R57    ; if R56 ~= R57 then PC := 313
310 [-]: JMP       313          ; PC := 313
311 [-]: LOADBOOL  R51 1 0      ; R51 := true
312 [-]: JMP       315          ; PC := 315
313 [-]: TFORLOOP  R52 2        ; R55,R56 :=  R52(R53,R54); if R55 ~= nil then begin PC = 307; R54 := R55 end
314 [-]: JMP       307          ; PC := 307
315 [-]: TEST      R49 0        ; if not R49 then PC := 509
316 [-]: JMP       509          ; PC := 509
317 [-]: TEST      R50 0        ; if not R50 then PC := 509
318 [-]: JMP       509          ; PC := 509
319 [-]: TEST      R51 0        ; if not R51 then PC := 509
320 [-]: JMP       509          ; PC := 509
321 [-]: SELF      R58 R45 K66  ; R59 := R45; R58 := R45[0x31e559d2]
322 [-]: CALL      R58 2 2      ; R58 := R58(R59)
323 [-]: TEST      R58 0        ; if not R58 then PC := 446
324 [-]: JMP       446          ; PC := 446
325 [-]: LOADK     R58 1        ; R58 := 1.000000
326 [-]: SELF      R59 R20 K21  ; R60 := R20; R59 := R20[0xf2deaf69]
327 [-]: SELF      R61 R45 K41  ; R62 := R45; R61 := R45[0x29ba1d84]
328 [-]: CALL      R61 2 0      ; R61,... := R61(R62)
329 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
330 [-]: TEST      R59 1        ; if R59 then PC := 349
331 [-]: JMP       349          ; PC := 349
332 [-]: LOADK     R58 0        ; R58 := 0.000000
333 [-]: SELF      R59 R20 K21  ; R60 := R20; R59 := R20[0xf2deaf69]
334 [-]: SELF      R61 R45 K67  ; R62 := R45; R61 := R45[0xb6525e9d]
335 [-]: CALL      R61 2 0      ; R61,... := R61(R62)
336 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
337 [-]: TEST      R59 0        ; if not R59 then PC := 349
338 [-]: JMP       349          ; PC := 349
339 [-]: GETGLOBAL R59 K16      ; R59 := mInventory
340 [-]: SELF      R59 R59 K68  ; R60 := R59; R59 := R59[0x4c265dc6]
341 [-]: MOVE      R61 R45      ; R61 := R45
342 [-]: CALL      R59 3 2      ; R59 := R59(R60,R61)
343 [-]: TEST      R59 0        ; if not R59 then PC := 346
344 [-]: JMP       346          ; PC := 346
345 [-]: LOADK     R58 1        ; R58 := 1.000000
346 [-]: EQ        0 R58 K5     ; if R58 ~= 0.000000 then PC := 349
347 [-]: JMP       349          ; PC := 349
348 [-]: LOADK     R58 2        ; R58 := 2.000000
349 [-]: EQ        0 R58 K69    ; if R58 ~= 1.000000 then PC := 382
350 [-]: JMP       382          ; PC := 382
351 [-]: GETUPVAL  R59 U3       ; R59 := U3
352 [-]: GETTABLE  R59 R59 K42  ; R59 := R59[0x08681f50]
353 [-]: GETGLOBAL R60 K43      ; R60 := 0xae91e43b
354 [-]: MOVE      R61 R45      ; R61 := R45
355 [-]: MOVE      R62 R13      ; R62 := R13
356 [-]: LOADNIL   R63 R64      ; R63 := R64 := nil
357 [-]: LOADBOOL  R65 1 0      ; R65 := true
358 [-]: CALL      R59 7 2      ; R59 := R59(R60,R61,R62,R63,R64,R65)
359 [-]: SETTABLE  R59 K57 K58  ; R59["mPurchased"] := true
360 [-]: SETTABLE  R59 K53 R45  ; R59["mStoreItem"] := R45
361 [-]: SELF      R60 R45 K70  ; R61 := R45; R60 := R45[0xd3a9d01f]
362 [-]: CALL      R60 2 2      ; R60 := R60(R61)
363 [-]: GETGLOBAL R61 K71      ; R61 := 0x0469f296
364 [-]: LOADK     R62 K72      ; R62 := "/Lotus/Language/Menu/Cosmetics_None"
365 [-]: CALL      R61 2 2      ; R61 := R61(R62)
366 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 369
367 [-]: JMP       369          ; PC := 369
368 [-]: SETTABLE  R59 K73 K58  ; R59["mEmpty"] := true
369 [-]: NEWTABLE  R60 0 1      ; R60 := {}
370 [-]: GETTABLE  R61 R59 K74  ; R61 := R59["FullName"]
371 [-]: SETTABLE  R60 K60 R61  ; R60["UID"] := R61
372 [-]: SETTABLE  R59 K59 R60  ; R59["mPurchasedInfo"] := R60
373 [-]: LEN       R60 R0       ; R60 := # R0
374 [-]: SETTABLE  R59 K63 R60  ; R59["mSortId"] := R60
375 [-]: GETGLOBAL R60 K7       ; R60 := 0x33bdd652
376 [-]: GETTABLE  R60 R60 K8   ; R60 := R60[0x23d5322f]
377 [-]: MOVE      R61 R0       ; R61 := R0
378 [-]: MOVE      R62 R59      ; R62 := R59
379 [-]: CALL      R60 3 1      ; R60(R61,R62)
380 [-]: SETTABLE  R12 R47 K58  ; R12[R47] := true
381 [-]: JMP       509          ; PC := 509
382 [-]: EQ        0 R58 K75    ; if R58 ~= 2.000000 then PC := 509
383 [-]: JMP       509          ; PC := 509
384 [-]: SELF      R60 R45 K76  ; R61 := R45; R60 := R45[0xbb90e4fe]
385 [-]: CALL      R60 2 2      ; R60 := R60(R61)
386 [-]: GETUPVAL  R61 U1       ; R61 := U1
387 [-]: SELF      R61 R61 K37  ; R62 := R61; R61 := R61[0x5458ba4c]
388 [-]: MOVE      R63 R60      ; R63 := R60
389 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
390 [-]: GETGLOBAL R62 K0       ; R62 := 0x7b998233
391 [-]: MOVE      R63 R61      ; R63 := R61
392 [-]: CALL      R62 2 2      ; R62 := R62(R63)
393 [-]: TEST      R62 0        ; if not R62 then PC := 415
394 [-]: JMP       415          ; PC := 415
395 [-]: GETGLOBAL R62 K0       ; R62 := 0x7b998233
396 [-]: MOVE      R63 R60      ; R63 := R60
397 [-]: CALL      R62 2 2      ; R62 := R62(R63)
398 [-]: TEST      R62 0        ; if not R62 then PC := 408
399 [-]: JMP       408          ; PC := 408
400 [-]: GETGLOBAL R62 K77      ; R62 := 0x3d106989
401 [-]: LOADK     R63 K78      ; R63 := "StoreItem: "
402 [-]: SELF      R64 R45 K64  ; R65 := R45; R64 := R45[0xed4e0128]
403 [-]: CALL      R64 2 2      ; R64 := R64(R65)
404 [-]: LOADK     R65 K79      ; R65 := " has a GenericCompatible but no GenericRequirement."
405 [-]: CONCAT    R63 R63 R65  ; R63 := R63 .. R64 .. R65
406 [-]: CALL      R62 2 1      ; R62(R63)
407 [-]: JMP       509          ; PC := 509
408 [-]: GETGLOBAL R62 K77      ; R62 := 0x3d106989
409 [-]: LOADK     R63 K80      ; R63 := "Could not find store item for "
410 [-]: SELF      R64 R60 K64  ; R65 := R60; R64 := R60[0xed4e0128]
411 [-]: CALL      R64 2 2      ; R64 := R64(R65)
412 [-]: CONCAT    R63 R63 R64  ; R63 := R63 .. R64
413 [-]: CALL      R62 2 1      ; R62(R63)
414 [-]: JMP       509          ; PC := 509
415 [-]: GETUPVAL  R62 U3       ; R62 := U3
416 [-]: GETTABLE  R62 R62 K81  ; R62 := R62[0xcac502bd]
417 [-]: MOVE      R63 R61      ; R63 := R61
418 [-]: CALL      R62 2 2      ; R62 := R62(R63)
419 [-]: TEST      R62 0        ; if not R62 then PC := 509
420 [-]: JMP       509          ; PC := 509
421 [-]: GETUPVAL  R62 U3       ; R62 := U3
422 [-]: GETTABLE  R62 R62 K42  ; R62 := R62[0x08681f50]
423 [-]: GETGLOBAL R63 K43      ; R63 := 0xae91e43b
424 [-]: MOVE      R64 R61      ; R64 := R61
425 [-]: MOVE      R65 R13      ; R65 := R13
426 [-]: LOADNIL   R66 R67      ; R66 := R67 := nil
427 [-]: LOADBOOL  R68 1 0      ; R68 := true
428 [-]: CALL      R62 7 2      ; R62 := R62(R63,R64,R65,R66,R67,R68)
429 [-]: SETTABLE  R62 K82 R45  ; R62["CustomizationType"] := R45
430 [-]: SETTABLE  R62 K57 K83  ; R62["mPurchased"] := false
431 [-]: SETTABLE  R62 K53 R61  ; R62["mStoreItem"] := R61
432 [-]: NEWTABLE  R63 0 1      ; R63 := {}
433 [-]: SELF      R64 R61 K64  ; R65 := R61; R64 := R61[0xed4e0128]
434 [-]: CALL      R64 2 2      ; R64 := R64(R65)
435 [-]: SETTABLE  R63 K60 R64  ; R63["UID"] := R64
436 [-]: SETTABLE  R62 K59 R63  ; R62["mPurchasedInfo"] := R63
437 [-]: LEN       R63 R0       ; R63 := # R0
438 [-]: SETTABLE  R62 K63 R63  ; R62["mSortId"] := R63
439 [-]: GETGLOBAL R63 K7       ; R63 := 0x33bdd652
440 [-]: GETTABLE  R63 R63 K8   ; R63 := R63[0x23d5322f]
441 [-]: MOVE      R64 R0       ; R64 := R0
442 [-]: MOVE      R65 R62      ; R65 := R62
443 [-]: CALL      R63 3 1      ; R63(R64,R65)
444 [-]: SETTABLE  R12 R47 K58  ; R12[R47] := true
445 [-]: JMP       509          ; PC := 509
446 [-]: GETUPVAL  R63 U4       ; R63 := U4
447 [-]: GETTABLE  R63 R63 K84  ; R63 := R63[0xcd71f5a1]
448 [-]: MOVE      R64 R45      ; R64 := R45
449 [-]: CALL      R63 2 2      ; R63 := R63(R64)
450 [-]: SELF      R64 R45 K85  ; R65 := R45; R64 := R45[0xc055cef8]
451 [-]: CALL      R64 2 2      ; R64 := R64(R65)
452 [-]: TEST      R64 1        ; if R64 then PC := 459
453 [-]: JMP       459          ; PC := 459
454 [-]: GETGLOBAL R64 K0       ; R64 := 0x7b998233
455 [-]: MOVE      R65 R63      ; R65 := R63
456 [-]: CALL      R64 2 2      ; R64 := R64(R65)
457 [-]: TEST      R64 1        ; if R64 then PC := 464
458 [-]: JMP       464          ; PC := 464
459 [-]: GETUPVAL  R64 U3       ; R64 := U3
460 [-]: GETTABLE  R64 R64 K81  ; R64 := R64[0xcac502bd]
461 [-]: MOVE      R65 R45      ; R65 := R45
462 [-]: CALL      R64 2 2      ; R64 := R64(R65)
463 [-]: JMP       466          ; PC := 466
464 [-]: LOADBOOL  R64 0 1      ; R64 := false; PC := 465
465 [-]: LOADBOOL  R64 1 0      ; R64 := true
466 [-]: LOADBOOL  R65 0 0      ; R65 := false
467 [-]: TEST      R64 1        ; if R64 then PC := 487
468 [-]: JMP       487          ; PC := 487
469 [-]: SELF      R66 R45 K85  ; R67 := R45; R66 := R45[0xc055cef8]
470 [-]: CALL      R66 2 2      ; R66 := R66(R67)
471 [-]: TEST      R66 1        ; if R66 then PC := 487
472 [-]: JMP       487          ; PC := 487
473 [-]: GETGLOBAL R66 K0       ; R66 := 0x7b998233
474 [-]: GETGLOBAL R67 K86      ; R67 := mUpsellHelper
475 [-]: CALL      R66 2 2      ; R66 := R66(R67)
476 [-]: TEST      R66 1        ; if R66 then PC := 487
477 [-]: JMP       487          ; PC := 487
478 [-]: GETUPVAL  R66 U5       ; R66 := U5
479 [-]: GETTABLE  R66 R66 K87  ; R66 := R66[0x433e45de]
480 [-]: MOVE      R67 R45      ; R67 := R45
481 [-]: GETGLOBAL R68 K86      ; R68 := mUpsellHelper
482 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
483 [-]: MOVE      R64 R66      ; R64 := R66
484 [-]: TEST      R64 0        ; if not R64 then PC := 487
485 [-]: JMP       487          ; PC := 487
486 [-]: LOADBOOL  R65 1 0      ; R65 := true
487 [-]: TEST      R64 0        ; if not R64 then PC := 509
488 [-]: JMP       509          ; PC := 509
489 [-]: GETUPVAL  R66 U3       ; R66 := U3
490 [-]: GETTABLE  R66 R66 K42  ; R66 := R66[0x08681f50]
491 [-]: GETGLOBAL R67 K43      ; R67 := 0xae91e43b
492 [-]: MOVE      R68 R45      ; R68 := R45
493 [-]: MOVE      R69 R13      ; R69 := R13
494 [-]: LOADNIL   R70 R71      ; R70 := R71 := nil
495 [-]: LOADBOOL  R72 1 0      ; R72 := true
496 [-]: CALL      R66 7 2      ; R66 := R66(R67,R68,R69,R70,R71,R72)
497 [-]: SETTABLE  R66 K57 K83  ; R66["mPurchased"] := false
498 [-]: SETTABLE  R66 K53 R45  ; R66["mStoreItem"] := R45
499 [-]: LEN       R67 R0       ; R67 := # R0
500 [-]: SETTABLE  R66 K63 R67  ; R66["mSortId"] := R67
501 [-]: SETTABLE  R66 K88 R63  ; R66["Sale"] := R63
502 [-]: SETTABLE  R66 K89 R65  ; R66["BundleOnly"] := R65
503 [-]: GETGLOBAL R67 K7       ; R67 := 0x33bdd652
504 [-]: GETTABLE  R67 R67 K8   ; R67 := R67[0x23d5322f]
505 [-]: MOVE      R68 R0       ; R68 := R0
506 [-]: MOVE      R69 R66      ; R69 := R66
507 [-]: CALL      R67 3 1      ; R67(R68,R69)
508 [-]: SETTABLE  R12 R47 K58  ; R12[R47] := true
509 [-]: TFORLOOP  R41 2        ; R44,R45 :=  R41(R42,R43); if R44 ~= nil then begin PC = 268; R43 := R44 end
510 [-]: JMP       268          ; PC := 268
511 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 75; R18 := R19 end
512 [-]: JMP       75           ; PC := 75
513 [-]: GETGLOBAL R67 K1       ; R67 := mSelected
514 [-]: GETTABLE  R67 R67 K2   ; R67 := R67["Element"]
515 [-]: GETTABLE  R67 R67 K12  ; R67 := R67["LoadOutType"]
516 [-]: EQ        0 R67 K69    ; if R67 ~= 1.000000 then PC := 533
517 [-]: JMP       533          ; PC := 533
518 [-]: GETGLOBAL R67 K1       ; R67 := mSelected
519 [-]: GETTABLE  R67 R67 K2   ; R67 := R67["Element"]
520 [-]: GETTABLE  R67 R67 K11  ; R67 := R67["LoadOutId"]
521 [-]: EQ        0 R67 K5     ; if R67 ~= 0.000000 then PC := 533
522 [-]: JMP       533          ; PC := 533
523 [-]: GETGLOBAL R67 K0       ; R67 := 0x7b998233
524 [-]: GETGLOBAL R68 K24      ; R68 := 0x25d99d89
525 [-]: CALL      R67 2 2      ; R67 := R67(R68)
526 [-]: TEST      R67 1        ; if R67 then PC := 533
527 [-]: JMP       533          ; PC := 533
528 [-]: GETGLOBAL R67 K24      ; R67 := 0x25d99d89
529 [-]: SELF      R67 R67 K90  ; R68 := R67; R67 := R67[0x3c6b0324]
530 [-]: CALL      R67 2 2      ; R67 := R67(R68)
531 [-]: TEST      R67 1        ; if R67 then PC := 534
532 [-]: JMP       534          ; PC := 534
533 [-]: MOVE      R67 R11      ; R67 := R11
534 [-]: TEST      R67 0        ; if not R67 then PC := 706
535 [-]: JMP       706          ; PC := 706
536 [-]: NEWTABLE  R68 0 0      ; R68 := {}
537 [-]: GETGLOBAL R69 K0       ; R69 := 0x7b998233
538 [-]: GETGLOBAL R70 K1       ; R70 := mSelected
539 [-]: GETTABLE  R70 R70 K2   ; R70 := R70["Element"]
540 [-]: GETTABLE  R70 R70 K10  ; R70 := R70["Type"]
541 [-]: CALL      R69 2 2      ; R69 := R69(R70)
542 [-]: TEST      R69 1        ; if R69 then PC := 551
543 [-]: JMP       551          ; PC := 551
544 [-]: GETGLOBAL R69 K1       ; R69 := mSelected
545 [-]: GETTABLE  R69 R69 K2   ; R69 := R69["Element"]
546 [-]: GETTABLE  R69 R69 K10  ; R69 := R69["Type"]
547 [-]: SELF      R69 R69 K21  ; R70 := R69; R69 := R69[0xf2deaf69]
548 [-]: GETGLOBAL R71 K91      ; R71 := 0x01302fb0
549 [-]: CALL      R69 3 2      ; R69 := R69(R70,R71)
550 [-]: JMP       553          ; PC := 553
551 [-]: LOADBOOL  R69 0 1      ; R69 := false; PC := 552
552 [-]: LOADBOOL  R69 1 0      ; R69 := true
553 [-]: GETGLOBAL R70 K0       ; R70 := 0x7b998233
554 [-]: GETGLOBAL R71 K1       ; R71 := mSelected
555 [-]: GETTABLE  R71 R71 K2   ; R71 := R71["Element"]
556 [-]: GETTABLE  R71 R71 K10  ; R71 := R71["Type"]
557 [-]: CALL      R70 2 2      ; R70 := R70(R71)
558 [-]: TEST      R70 1        ; if R70 then PC := 567
559 [-]: JMP       567          ; PC := 567
560 [-]: GETGLOBAL R70 K1       ; R70 := mSelected
561 [-]: GETTABLE  R70 R70 K2   ; R70 := R70["Element"]
562 [-]: GETTABLE  R70 R70 K10  ; R70 := R70["Type"]
563 [-]: SELF      R70 R70 K21  ; R71 := R70; R70 := R70[0xf2deaf69]
564 [-]: GETGLOBAL R72 K92      ; R72 := 0x5bc0a754
565 [-]: CALL      R70 3 2      ; R70 := R70(R71,R72)
566 [-]: JMP       569          ; PC := 569
567 [-]: LOADBOOL  R70 0 1      ; R70 := false; PC := 568
568 [-]: LOADBOOL  R70 1 0      ; R70 := true
569 [-]: GETGLOBAL R71 K0       ; R71 := 0x7b998233
570 [-]: GETGLOBAL R72 K1       ; R72 := mSelected
571 [-]: GETTABLE  R72 R72 K2   ; R72 := R72["Element"]
572 [-]: GETTABLE  R72 R72 K10  ; R72 := R72["Type"]
573 [-]: CALL      R71 2 2      ; R71 := R71(R72)
574 [-]: TEST      R71 1        ; if R71 then PC := 583
575 [-]: JMP       583          ; PC := 583
576 [-]: GETGLOBAL R71 K1       ; R71 := mSelected
577 [-]: GETTABLE  R71 R71 K2   ; R71 := R71["Element"]
578 [-]: GETTABLE  R71 R71 K10  ; R71 := R71["Type"]
579 [-]: SELF      R71 R71 K21  ; R72 := R71; R71 := R71[0xf2deaf69]
580 [-]: GETGLOBAL R73 K93      ; R73 := 0xf541be71
581 [-]: CALL      R71 3 2      ; R71 := R71(R72,R73)
582 [-]: JMP       585          ; PC := 585
583 [-]: LOADBOOL  R71 0 1      ; R71 := false; PC := 584
584 [-]: LOADBOOL  R71 1 0      ; R71 := true
585 [-]: GETUPVAL  R72 U6       ; R72 := U6
586 [-]: GETTABLE  R72 R72 K94  ; R72 := R72[0xb68bba03]
587 [-]: GETGLOBAL R73 K1       ; R73 := mSelected
588 [-]: GETTABLE  R73 R73 K2   ; R73 := R73["Element"]
589 [-]: GETTABLE  R73 R73 K95  ; R73 := R73["Customization"]
590 [-]: CALL      R72 2 2      ; R72 := R72(R73)
591 [-]: GETGLOBAL R73 K0       ; R73 := 0x7b998233
592 [-]: GETGLOBAL R74 K1       ; R74 := mSelected
593 [-]: GETTABLE  R74 R74 K96  ; R74 := R74["Cosmetic"]
594 [-]: CALL      R73 2 2      ; R73 := R73(R74)
595 [-]: TEST      R73 1        ; if R73 then PC := 623
596 [-]: JMP       623          ; PC := 623
597 [-]: GETGLOBAL R73 K1       ; R73 := mSelected
598 [-]: GETTABLE  R73 R73 K96  ; R73 := R73["Cosmetic"]
599 [-]: GETTABLE  R73 R73 K97  ; R73 := R73["PetTrait"]
600 [-]: EQ        0 R73 K98    ; if R73 ~= "mFurPattern" then PC := 623
601 [-]: JMP       623          ; PC := 623
602 [-]: TEST      R72 1        ; if R72 then PC := 623
603 [-]: JMP       623          ; PC := 623
604 [-]: TEST      R69 1        ; if R69 then PC := 623
605 [-]: JMP       623          ; PC := 623
606 [-]: TEST      R70 1        ; if R70 then PC := 623
607 [-]: JMP       623          ; PC := 623
608 [-]: GETGLOBAL R73 K24      ; R73 := 0x25d99d89
609 [-]: SELF      R73 R73 K99  ; R74 := R73; R73 := R73[0x62c81b76]
610 [-]: CALL      R73 2 2      ; R73 := R73(R74)
611 [-]: GETTABLE  R73 R73 K100 ; R73 := R73["mKubrowPetDetails"]
612 [-]: GETTABLE  R73 R73 K101 ; R73 := R73["mDominantTraits"]
613 [-]: GETGLOBAL R74 K102     ; R74 := 0xb009bbc6
614 [-]: GETTABLE  R75 R73 K103 ; R75 := R73["mEyeColor"]
615 [-]: CALL      R74 2 2      ; R74 := R74(R75)
616 [-]: GETUPVAL  R75 U7       ; R75 := U7
617 [-]: LOADK     R76 3        ; R76 := 3.000000
618 [-]: SELF      R77 R74 K104 ; R78 := R74; R77 := R74[0x5d10207d]
619 [-]: CALL      R77 2 2      ; R77 := R77(R78)
620 [-]: LOADK     R78 0        ; R78 := 0.000000
621 [-]: LOADNIL   R79 R79      ; R79 := nil
622 [-]: CALL      R75 5 1      ; R75(R76,R77,R78,R79)
623 [-]: GETGLOBAL R75 K105     ; R75 := 0xcfc01047
624 [-]: GETGLOBAL R76 K16      ; R76 := mInventory
625 [-]: SELF      R76 R76 K106 ; R77 := R76; R76 := R76[0xd8dfa041]
626 [-]: CALL      R76 2 0      ; R76,... := R76(R77)
627 [-]: CALL      R75 0 4      ; R75,R76,R77 := R75(R76,...)
628 [-]: JMP       640          ; PC := 640
629 [-]: GETTABLE  R80 R79 K20  ; R80 := R79["mItemType"]
630 [-]: SELF      R80 R80 K21  ; R81 := R80; R80 := R80[0xf2deaf69]
631 [-]: GETGLOBAL R82 K107     ; R82 := 0xef60ddef
632 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
633 [-]: TEST      R80 0        ; if not R80 then PC := 640
634 [-]: JMP       640          ; PC := 640
635 [-]: GETGLOBAL R80 K7       ; R80 := 0x33bdd652
636 [-]: GETTABLE  R80 R80 K8   ; R80 := R80[0x23d5322f]
637 [-]: MOVE      R81 R68      ; R81 := R68
638 [-]: GETTABLE  R82 R79 K20  ; R82 := R79["mItemType"]
639 [-]: CALL      R80 3 1      ; R80(R81,R82)
640 [-]: TFORLOOP  R75 2        ; R78,R79 :=  R75(R76,R77); if R78 ~= nil then begin PC = 629; R77 := R78 end
641 [-]: JMP       629          ; PC := 629
642 [-]: GETGLOBAL R80 K6       ; R80 := 0xc8802016
643 [-]: MOVE      R81 R68      ; R81 := R68
644 [-]: CALL      R80 2 4      ; R80,R81,R82 := R80(R81)
645 [-]: JMP       704          ; PC := 704
646 [-]: GETUPVAL  R85 U1       ; R85 := U1
647 [-]: SELF      R85 R85 K37  ; R86 := R85; R85 := R85[0x5458ba4c]
648 [-]: MOVE      R87 R84      ; R87 := R84
649 [-]: CALL      R85 3 2      ; R85 := R85(R86,R87)
650 [-]: GETGLOBAL R86 K0       ; R86 := 0x7b998233
651 [-]: MOVE      R87 R85      ; R87 := R85
652 [-]: CALL      R86 2 2      ; R86 := R86(R87)
653 [-]: TEST      R86 1        ; if R86 then PC := 704
654 [-]: JMP       704          ; PC := 704
655 [-]: GETGLOBAL R86 K102     ; R86 := 0xb009bbc6
656 [-]: MOVE      R87 R84      ; R87 := R84
657 [-]: CALL      R86 2 2      ; R86 := R86(R87)
658 [-]: SELF      R87 R86 K104 ; R88 := R86; R87 := R86[0x5d10207d]
659 [-]: CALL      R87 2 2      ; R87 := R87(R88)
660 [-]: GETUPVAL  R88 U3       ; R88 := U3
661 [-]: GETTABLE  R88 R88 K42  ; R88 := R88[0x08681f50]
662 [-]: GETGLOBAL R89 K43      ; R89 := 0xae91e43b
663 [-]: MOVE      R90 R85      ; R90 := R85
664 [-]: MOVE      R91 R13      ; R91 := R13
665 [-]: LOADNIL   R92 R93      ; R92 := R93 := nil
666 [-]: LOADBOOL  R94 1 0      ; R94 := true
667 [-]: CALL      R88 7 2      ; R88 := R88(R89,R90,R91,R92,R93,R94)
668 [-]: SETTABLE  R88 K57 K58  ; R88["mPurchased"] := true
669 [-]: NEWTABLE  R89 0 1      ; R89 := {}
670 [-]: GETTABLE  R90 R88 K74  ; R90 := R88["FullName"]
671 [-]: SETTABLE  R89 K60 R90  ; R89["UID"] := R90
672 [-]: SETTABLE  R88 K59 R89  ; R88["mPurchasedInfo"] := R89
673 [-]: SETTABLE  R88 K53 R85  ; R88["mStoreItem"] := R85
674 [-]: NEWTABLE  R89 0 0      ; R89 := {}
675 [-]: SETTABLE  R88 K108 R89 ; R88["mSlotCompatibilityOverrides"] := R89
676 [-]: LEN       R89 R0       ; R89 := # R0
677 [-]: SETTABLE  R88 K63 R89  ; R88["mSortId"] := R89
678 [-]: SELF      R89 R87 K110 ; R90 := R87; R89 := R87[0xa5d5c8f6]
679 [-]: CALL      R89 2 2      ; R89 := R89(R90)
680 [-]: SETTABLE  R88 K109 R89 ; R88["PetTintColor"] := R89
681 [-]: GETTABLE  R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
682 [-]: SETTABLE  R89 K69 K58  ; R89[1.000000] := true
683 [-]: GETTABLE  R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
684 [-]: SETTABLE  R89 K111 K58 ; R89[9.000000] := true
685 [-]: GETTABLE  R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
686 [-]: SETTABLE  R89 K75 K58  ; R89[2.000000] := true
687 [-]: TEST      R69 1        ; if R69 then PC := 695
688 [-]: JMP       695          ; PC := 695
689 [-]: TEST      R71 1        ; if R71 then PC := 695
690 [-]: JMP       695          ; PC := 695
691 [-]: TEST      R70 1        ; if R70 then PC := 695
692 [-]: JMP       695          ; PC := 695
693 [-]: TEST      R72 0        ; if not R72 then PC := 699
694 [-]: JMP       699          ; PC := 699
695 [-]: GETTABLE  R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
696 [-]: SETTABLE  R89 K112 K58 ; R89[10.000000] := true
697 [-]: GETTABLE  R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
698 [-]: SETTABLE  R89 K113 K58 ; R89[11.000000] := true
699 [-]: GETGLOBAL R89 K7       ; R89 := 0x33bdd652
700 [-]: GETTABLE  R89 R89 K8   ; R89 := R89[0x23d5322f]
701 [-]: MOVE      R90 R0       ; R90 := R0
702 [-]: MOVE      R91 R88      ; R91 := R88
703 [-]: CALL      R89 3 1      ; R89(R90,R91)
704 [-]: TFORLOOP  R80 2        ; R83,R84 :=  R80(R81,R82); if R83 ~= nil then begin PC = 646; R82 := R83 end
705 [-]: JMP       646          ; PC := 646
706 [-]: LOADK     R89 1        ; R89 := 1.000000
707 [-]: LEN       R90 R0       ; R90 := # R0
708 [-]: LOADK     R91 1        ; R91 := 1.000000
709 [-]: FORPREP   R89 726      ; R89 -= R91; PC := 726
710 [-]: GETTABLE  R93 R0 R92   ; R93 := R0[R92]
711 [-]: GETTABLE  R93 R93 K54  ; R93 := R93["Name"]
712 [-]: EQ        0 R93 K39    ; if R93 ~= nil then PC := 726
713 [-]: JMP       726          ; PC := 726
714 [-]: GETTABLE  R93 R0 R92   ; R93 := R0[R92]
715 [-]: GETGLOBAL R94 K43      ; R94 := 0xae91e43b
716 [-]: SELF      R94 R94 K50  ; R95 := R94; R94 := R94[0x42b04007]
717 [-]: GETGLOBAL R96 K114     ; R96 := 0x64fb1586
718 [-]: GETTABLE  R97 R0 R92   ; R97 := R0[R92]
719 [-]: GETTABLE  R97 R97 K53  ; R97 := R97["mStoreItem"]
720 [-]: SELF      R97 R97 K70  ; R98 := R97; R97 := R97[0xd3a9d01f]
721 [-]: CALL      R97 2 0      ; R97,... := R97(R98)
722 [-]: CALL      R96 0 2      ; R96 := R96(R97,...)
723 [-]: LOADBOOL  R97 1 0      ; R97 := true
724 [-]: CALL      R94 4 2      ; R94 := R94(R95,R96,R97)
725 [-]: SETTABLE  R93 K54 R94  ; R93["Name"] := R94
726 [-]: FORLOOP   R89 710      ; R89 += R91; if R89 <= R90 then begin PC := 710; R92 := R89 end
727 [-]: RETURN    R0 2         ; return R0
728 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 7111
; #Upvalues:       9
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: LOADBOOL  R3 0 0       ; R3 := false
  2 [-]: SETGLOBAL R3 K0        ; mInputBlocked := R3
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 358
  4 [-]: JMP       358          ; PC := 358
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: JMP       358          ; PC := 358
  8 [-]: TEST      R0 0         ; if not R0 then PC := 358
  9 [-]: JMP       358          ; PC := 358
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["SWAPPING_ITEM"]
 13 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 115
 14 [-]: JMP       115          ; PC := 115
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 16 [-]: GETGLOBAL R4 K4        ; R4 := mSelected
 17 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Element"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 358
 20 [-]: JMP       358          ; PC := 358
 21 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 22 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Element"]
 23 [-]: GETUPVAL  R4 U2        ; R4 := U2
 24 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x866fb296]
 25 [-]: GETGLOBAL R5 K4        ; R5 := mSelected
 26 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Element"]
 27 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["LoadOutType"]
 28 [-]: GETGLOBAL R6 K4        ; R6 := mSelected
 29 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["Element"]
 30 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["LoadOutId"]
 31 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 32 [-]: SETTABLE  R3 K6 R4     ; R3["OwnedItems"] := R4
 33 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 34 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Element"]
 35 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["LoadOutType"]
 36 [-]: EQ        0 R3 K11     ; if R3 ~= 1.000000 then PC := 59
 37 [-]: JMP       59           ; PC := 59
 38 [-]: GETGLOBAL R3 K4        ; R3 := mSelected
 39 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Element"]
 40 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["LoadOutId"]
 41 [-]: EQ        0 R3 K12     ; if R3 ~= 0.000000 then PC := 59
 42 [-]: JMP       59           ; PC := 59
 43 [-]: GETGLOBAL R3 K13       ; R3 := mLists
 44 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mLoadOutList"]
 45 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xca30dfb6]
 46 [-]: GETGLOBAL R5 K4        ; R5 := mSelected
 47 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Element"]
 48 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["Id"]
 49 [-]: ADD       R5 R5 K11    ; R5 := R5 + 1.000000
 50 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 51 [-]: GETUPVAL  R4 U2        ; R4 := U2
 52 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x866fb296]
 53 [-]: GETGLOBAL R5 K4        ; R5 := mSelected
 54 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Element"]
 55 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["LoadOutType"]
 56 [-]: LOADK     R6 2         ; R6 := 2.000000
 57 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 58 [-]: SETTABLE  R3 K6 R4     ; R3["OwnedItems"] := R4
 59 [-]: GETUPVAL  R4 U3        ; R4 := U3
 60 [-]: GETGLOBAL R5 K4        ; R5 := mSelected
 61 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Element"]
 62 [-]: CALL      R4 2 1       ; R4(R5)
 63 [-]: LOADK     R4 1         ; R4 := 1.000000
 64 [-]: GETGLOBAL R5 K4        ; R5 := mSelected
 65 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Element"]
 66 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["OwnedItems"]
 67 [-]: LEN       R5 R5        ; R5 := # R5
 68 [-]: LOADK     R6 1         ; R6 := 1.000000
 69 [-]: FORPREP   R4 96        ; R4 -= R6; PC := 96
 70 [-]: GETGLOBAL R8 K4        ; R8 := mSelected
 71 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["Item"]
 72 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mPurchased"]
 73 [-]: TEST      R8 1         ; if R8 then PC := 96
 74 [-]: JMP       96           ; PC := 96
 75 [-]: GETGLOBAL R8 K4        ; R8 := mSelected
 76 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["Element"]
 77 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["OwnedItems"]
 78 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 79 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["Type"]
 80 [-]: GETGLOBAL R9 K4        ; R9 := mSelected
 81 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["Item"]
 82 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["Type"]
 83 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 96
 84 [-]: JMP       96           ; PC := 96
 85 [-]: GETGLOBAL R8 K4        ; R8 := mSelected
 86 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["Item"]
 87 [-]: GETGLOBAL R9 K4        ; R9 := mSelected
 88 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["Element"]
 89 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["OwnedItems"]
 90 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
 91 [-]: SETTABLE  R8 K20 R9    ; R8["mPurchasedInfo"] := R9
 92 [-]: GETGLOBAL R8 K4        ; R8 := mSelected
 93 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["Item"]
 94 [-]: SETTABLE  R8 K18 K21   ; R8["mPurchased"] := true
 95 [-]: JMP       97           ; PC := 97
 96 [-]: FORLOOP   R4 70        ; R4 += R6; if R4 <= R5 then begin PC := 70; R7 := R4 end
 97 [-]: GETGLOBAL R8 K4        ; R8 := mSelected
 98 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["Item"]
 99 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["mPurchasedInfo"]
100 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 105
101 [-]: JMP       105          ; PC := 105
102 [-]: GETUPVAL  R8 U4        ; R8 := U4
103 [-]: CALL      R8 1 1       ; R8()
104 [-]: JMP       358          ; PC := 358
105 [-]: GETGLOBAL R8 K22       ; R8 := mItemsGrid
106 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8[0x7c09c373]
107 [-]: LOADBOOL  R10 1 0      ; R10 := true
108 [-]: LOADBOOL  R11 1 0      ; R11 := true
109 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
110 [-]: GETUPVAL  R8 U5        ; R8 := U5
111 [-]: GETGLOBAL R9 K4        ; R9 := mSelected
112 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["Element"]
113 [-]: CALL      R8 2 1       ; R8(R9)
114 [-]: JMP       358          ; PC := 358
115 [-]: GETUPVAL  R8 U0        ; R8 := U0
116 [-]: GETUPVAL  R9 U1        ; R9 := U1
117 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["SELECTING_SKINS"]
118 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 280
119 [-]: JMP       280          ; PC := 280
120 [-]: GETUPVAL  R8 U6        ; R8 := U6
121 [-]: CALL      R8 1 2       ; R8 := R8()
122 [-]: LOADK     R9 1         ; R9 := 1.000000
123 [-]: GETGLOBAL R10 K13      ; R10 := mLists
124 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mCosmeticsList"]
125 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mElements"]
126 [-]: LEN       R10 R10      ; R10 := # R10
127 [-]: LOADK     R11 1        ; R11 := 1.000000
128 [-]: FORPREP   R9 142       ; R9 -= R11; PC := 142
129 [-]: GETGLOBAL R13 K13      ; R13 := mLists
130 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["mCosmeticsList"]
131 [-]: GETTABLE  R13 R13 K26  ; R13 := R13["mElements"]
132 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
133 [-]: GETTABLE  R13 R13 K27  ; R13 := R13["Items"]
134 [-]: EQ        1 R13 K1     ; if R13 == nil then PC := 142
135 [-]: JMP       142          ; PC := 142
136 [-]: GETGLOBAL R13 K13      ; R13 := mLists
137 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["mCosmeticsList"]
138 [-]: GETTABLE  R13 R13 K26  ; R13 := R13["mElements"]
139 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
140 [-]: NEWTABLE  R14 0 0      ; R14 := {}
141 [-]: SETTABLE  R13 K27 R14  ; R13["Items"] := R14
142 [-]: FORLOOP   R9 129       ; R9 += R11; if R9 <= R10 then begin PC := 129; R12 := R9 end
143 [-]: GETGLOBAL R13 K4       ; R13 := mSelected
144 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["Item"]
145 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["SetItems"]
146 [-]: LOADK     R14 1        ; R14 := 1.000000
147 [-]: LEN       R15 R8       ; R15 := # R8
148 [-]: LOADK     R16 1        ; R16 := 1.000000
149 [-]: FORPREP   R14 261      ; R14 -= R16; PC := 261
150 [-]: GETGLOBAL R18 K29      ; R18 := 0xce225efa
151 [-]: LOADK     R19 0        ; R19 := 0.000000
152 [-]: CALL      R18 2 1      ; R18(R19)
153 [-]: LOADK     R18 0        ; R18 := 0.000000
154 [-]: LOADK     R19 20       ; R19 := 20.000000
155 [-]: LOADK     R20 1        ; R20 := 1.000000
156 [-]: FORPREP   R18 194      ; R18 -= R20; PC := 194
157 [-]: GETUPVAL  R22 U7       ; R22 := U7
158 [-]: GETTABLE  R23 R8 R17   ; R23 := R8[R17]
159 [-]: MOVE      R24 R21      ; R24 := R21
160 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
161 [-]: TEST      R22 0        ; if not R22 then PC := 194
162 [-]: JMP       194          ; PC := 194
163 [-]: LOADK     R22 1        ; R22 := 1.000000
164 [-]: GETGLOBAL R23 K13      ; R23 := mLists
165 [-]: GETTABLE  R23 R23 K25  ; R23 := R23["mCosmeticsList"]
166 [-]: GETTABLE  R23 R23 K26  ; R23 := R23["mElements"]
167 [-]: LEN       R23 R23      ; R23 := # R23
168 [-]: LOADK     R24 1        ; R24 := 1.000000
169 [-]: FORPREP   R22 193      ; R22 -= R24; PC := 193
170 [-]: GETGLOBAL R26 K13      ; R26 := mLists
171 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["mCosmeticsList"]
172 [-]: GETTABLE  R26 R26 K26  ; R26 := R26["mElements"]
173 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
174 [-]: EQ        1 R26 K1     ; if R26 == nil then PC := 193
175 [-]: JMP       193          ; PC := 193
176 [-]: GETGLOBAL R26 K13      ; R26 := mLists
177 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["mCosmeticsList"]
178 [-]: GETTABLE  R26 R26 K26  ; R26 := R26["mElements"]
179 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
180 [-]: GETTABLE  R26 R26 K30  ; R26 := R26["Slot"]
181 [-]: EQ        0 R26 R21    ; if R26 ~= R21 then PC := 193
182 [-]: JMP       193          ; PC := 193
183 [-]: GETGLOBAL R26 K31      ; R26 := 0x33bdd652
184 [-]: GETTABLE  R26 R26 K32  ; R26 := R26[0x23d5322f]
185 [-]: GETGLOBAL R27 K13      ; R27 := mLists
186 [-]: GETTABLE  R27 R27 K25  ; R27 := R27["mCosmeticsList"]
187 [-]: GETTABLE  R27 R27 K26  ; R27 := R27["mElements"]
188 [-]: GETTABLE  R27 R27 R25  ; R27 := R27[R25]
189 [-]: GETTABLE  R27 R27 K27  ; R27 := R27["Items"]
190 [-]: GETTABLE  R28 R8 R17   ; R28 := R8[R17]
191 [-]: CALL      R26 3 1      ; R26(R27,R28)
192 [-]: JMP       194          ; PC := 194
193 [-]: FORLOOP   R22 170      ; R22 += R24; if R22 <= R23 then begin PC := 170; R25 := R22 end
194 [-]: FORLOOP   R18 157      ; R18 += R20; if R18 <= R19 then begin PC := 157; R21 := R18 end
195 [-]: GETGLOBAL R26 K4       ; R26 := mSelected
196 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["Item"]
197 [-]: GETTABLE  R26 R26 K18  ; R26 := R26["mPurchased"]
198 [-]: TEST      R26 1        ; if R26 then PC := 220
199 [-]: JMP       220          ; PC := 220
200 [-]: GETTABLE  R26 R8 R17   ; R26 := R8[R17]
201 [-]: GETTABLE  R26 R26 K19  ; R26 := R26["Type"]
202 [-]: GETGLOBAL R27 K4       ; R27 := mSelected
203 [-]: GETTABLE  R27 R27 K17  ; R27 := R27["Item"]
204 [-]: GETTABLE  R27 R27 K19  ; R27 := R27["Type"]
205 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 220
206 [-]: JMP       220          ; PC := 220
207 [-]: GETGLOBAL R26 K4       ; R26 := mSelected
208 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["Item"]
209 [-]: GETTABLE  R27 R8 R17   ; R27 := R8[R17]
210 [-]: GETTABLE  R27 R27 K33  ; R27 := R27["Skin"]
211 [-]: SETTABLE  R26 K33 R27  ; R26[0x25d99d89] := R27
212 [-]: GETGLOBAL R26 K4       ; R26 := mSelected
213 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["Item"]
214 [-]: GETTABLE  R27 R8 R17   ; R27 := R8[R17]
215 [-]: GETTABLE  R27 R27 K20  ; R27 := R27["mPurchasedInfo"]
216 [-]: SETTABLE  R26 K20 R27  ; R26["mPurchasedInfo"] := R27
217 [-]: GETGLOBAL R26 K4       ; R26 := mSelected
218 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["Item"]
219 [-]: SETTABLE  R26 K18 K21  ; R26["mPurchased"] := true
220 [-]: EQ        1 R13 K1     ; if R13 == nil then PC := 261
221 [-]: JMP       261          ; PC := 261
222 [-]: GETGLOBAL R26 K4       ; R26 := mSelected
223 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["Item"]
224 [-]: GETGLOBAL R27 K4       ; R27 := mSelected
225 [-]: GETTABLE  R27 R27 K34  ; R27 := R27["Cosmetic"]
226 [-]: GETTABLE  R27 R27 K30  ; R27 := R27["Slot"]
227 [-]: GETGLOBAL R28 K35      ; R28 := 0xc8802016
228 [-]: MOVE      R29 R13      ; R29 := R13
229 [-]: CALL      R28 2 4      ; R28,R29,R30 := R28(R29)
230 [-]: JMP       259          ; PC := 259
231 [-]: GETTABLE  R33 R32 K18  ; R33 := R32["mPurchased"]
232 [-]: TEST      R33 1        ; if R33 then PC := 259
233 [-]: JMP       259          ; PC := 259
234 [-]: GETTABLE  R33 R8 R17   ; R33 := R8[R17]
235 [-]: GETTABLE  R33 R33 K19  ; R33 := R33["Type"]
236 [-]: GETTABLE  R34 R32 K19  ; R34 := R32["Type"]
237 [-]: EQ        0 R33 R34    ; if R33 ~= R34 then PC := 259
238 [-]: JMP       259          ; PC := 259
239 [-]: GETTABLE  R33 R8 R17   ; R33 := R8[R17]
240 [-]: GETTABLE  R33 R33 K33  ; R33 := R33["Skin"]
241 [-]: SETTABLE  R32 K33 R33  ; R32[0x25d99d89] := R33
242 [-]: GETTABLE  R33 R8 R17   ; R33 := R8[R17]
243 [-]: GETTABLE  R33 R33 K20  ; R33 := R33["mPurchasedInfo"]
244 [-]: SETTABLE  R32 K20 R33  ; R32["mPurchasedInfo"] := R33
245 [-]: SETTABLE  R32 K18 K21  ; R32["mPurchased"] := true
246 [-]: GETGLOBAL R33 K4       ; R33 := mSelected
247 [-]: SETTABLE  R33 K17 R32  ; R33["Item"] := R32
248 [-]: GETGLOBAL R33 K4       ; R33 := mSelected
249 [-]: GETTABLE  R33 R33 K34  ; R33 := R33["Cosmetic"]
250 [-]: GETTABLE  R34 R32 K36  ; R34 := R32["CosmeticSlot"]
251 [-]: SETTABLE  R33 K30 R34  ; R33["Slot"] := R34
252 [-]: GETUPVAL  R33 U8       ; R33 := U8
253 [-]: CALL      R33 1 1      ; R33()
254 [-]: GETGLOBAL R33 K4       ; R33 := mSelected
255 [-]: SETTABLE  R33 K17 R26  ; R33["Item"] := R26
256 [-]: GETGLOBAL R33 K4       ; R33 := mSelected
257 [-]: GETTABLE  R33 R33 K34  ; R33 := R33["Cosmetic"]
258 [-]: SETTABLE  R33 K30 R27  ; R33["Slot"] := R27
259 [-]: TFORLOOP  R28 2        ; R31,R32 :=  R28(R29,R30); if R31 ~= nil then begin PC = 231; R30 := R31 end
260 [-]: JMP       231          ; PC := 231
261 [-]: FORLOOP   R14 150      ; R14 += R16; if R14 <= R15 then begin PC := 150; R17 := R14 end
262 [-]: GETGLOBAL R33 K4       ; R33 := mSelected
263 [-]: GETTABLE  R33 R33 K17  ; R33 := R33["Item"]
264 [-]: GETTABLE  R33 R33 K20  ; R33 := R33["mPurchasedInfo"]
265 [-]: EQ        1 R33 K1     ; if R33 == nil then PC := 270
266 [-]: JMP       270          ; PC := 270
267 [-]: GETUPVAL  R33 U4       ; R33 := U4
268 [-]: CALL      R33 1 1      ; R33()
269 [-]: JMP       358          ; PC := 358
270 [-]: GETGLOBAL R33 K22      ; R33 := mItemsGrid
271 [-]: SELF      R33 R33 K23  ; R34 := R33; R33 := R33[0x7c09c373]
272 [-]: LOADBOOL  R35 1 0      ; R35 := true
273 [-]: LOADBOOL  R36 1 0      ; R36 := true
274 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
275 [-]: GETUPVAL  R33 U5       ; R33 := U5
276 [-]: GETGLOBAL R34 K4       ; R34 := mSelected
277 [-]: GETTABLE  R34 R34 K34  ; R34 := R34["Cosmetic"]
278 [-]: CALL      R33 2 1      ; R33(R34)
279 [-]: JMP       358          ; PC := 358
280 [-]: GETUPVAL  R33 U0       ; R33 := U0
281 [-]: GETUPVAL  R34 U1       ; R34 := U1
282 [-]: GETTABLE  R34 R34 K37  ; R34 := R34["SELECTING_CONSUMABLES"]
283 [-]: EQ        0 R33 R34    ; if R33 ~= R34 then PC := 358
284 [-]: JMP       358          ; PC := 358
285 [-]: GETGLOBAL R33 K4       ; R33 := mSelected
286 [-]: GETTABLE  R33 R33 K38  ; R33 := R33["Consumable"]
287 [-]: EQ        1 R33 K1     ; if R33 == nil then PC := 358
288 [-]: JMP       358          ; PC := 358
289 [-]: GETUPVAL  R33 U2       ; R33 := U2
290 [-]: GETTABLE  R33 R33 K7   ; R33 := R33[0x866fb296]
291 [-]: LOADNIL   R34 R34      ; R34 := nil
292 [-]: LOADK     R35 K39      ; R35 := "CONSUMABLES"
293 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
294 [-]: GETGLOBAL R34 K4       ; R34 := mSelected
295 [-]: GETTABLE  R34 R34 K38  ; R34 := R34["Consumable"]
296 [-]: SETTABLE  R34 K6 R33   ; R34["OwnedItems"] := R33
297 [-]: LOADK     R34 1        ; R34 := 1.000000
298 [-]: LEN       R35 R33      ; R35 := # R33
299 [-]: LOADK     R36 1        ; R36 := 1.000000
300 [-]: FORPREP   R34 336      ; R34 -= R36; PC := 336
301 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
302 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
303 [-]: EQ        1 R38 K1     ; if R38 == nil then PC := 336
304 [-]: JMP       336          ; PC := 336
305 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
306 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
307 [-]: GETTABLE  R38 R38 K19  ; R38 := R38["Type"]
308 [-]: GETTABLE  R39 R33 R37  ; R39 := R33[R37]
309 [-]: GETTABLE  R39 R39 K19  ; R39 := R39["Type"]
310 [-]: EQ        0 R38 R39    ; if R38 ~= R39 then PC := 336
311 [-]: JMP       336          ; PC := 336
312 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
313 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
314 [-]: SETTABLE  R38 K18 K21  ; R38["mPurchased"] := true
315 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
316 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
317 [-]: GETTABLE  R38 R38 K20  ; R38 := R38["mPurchasedInfo"]
318 [-]: EQ        0 R38 K1     ; if R38 ~= nil then PC := 329
319 [-]: JMP       329          ; PC := 329
320 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
321 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
322 [-]: NEWTABLE  R39 0 1      ; R39 := {}
323 [-]: GETTABLE  R40 R33 R37  ; R40 := R33[R37]
324 [-]: GETTABLE  R40 R40 K19  ; R40 := R40["Type"]
325 [-]: SELF      R40 R40 K41  ; R41 := R40; R40 := R40[0xed4e0128]
326 [-]: CALL      R40 2 2      ; R40 := R40(R41)
327 [-]: SETTABLE  R39 K40 R40  ; R39["UID"] := R40
328 [-]: SETTABLE  R38 K20 R39  ; R38["mPurchasedInfo"] := R39
329 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
330 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
331 [-]: GETTABLE  R38 R38 K20  ; R38 := R38["mPurchasedInfo"]
332 [-]: GETTABLE  R39 R33 R37  ; R39 := R33[R37]
333 [-]: GETTABLE  R39 R39 K42  ; R39 := R39["ItemCount"]
334 [-]: SETTABLE  R38 K42 R39  ; R38["ItemCount"] := R39
335 [-]: JMP       337          ; PC := 337
336 [-]: FORLOOP   R34 301      ; R34 += R36; if R34 <= R35 then begin PC := 301; R37 := R34 end
337 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
338 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
339 [-]: EQ        1 R38 K1     ; if R38 == nil then PC := 349
340 [-]: JMP       349          ; PC := 349
341 [-]: GETGLOBAL R38 K4       ; R38 := mSelected
342 [-]: GETTABLE  R38 R38 K17  ; R38 := R38["Item"]
343 [-]: GETTABLE  R38 R38 K20  ; R38 := R38["mPurchasedInfo"]
344 [-]: EQ        1 R38 K1     ; if R38 == nil then PC := 349
345 [-]: JMP       349          ; PC := 349
346 [-]: GETUPVAL  R38 U4       ; R38 := U4
347 [-]: CALL      R38 1 1      ; R38()
348 [-]: JMP       358          ; PC := 358
349 [-]: GETGLOBAL R38 K22      ; R38 := mItemsGrid
350 [-]: SELF      R38 R38 K23  ; R39 := R38; R38 := R38[0x7c09c373]
351 [-]: LOADBOOL  R40 1 0      ; R40 := true
352 [-]: LOADBOOL  R41 1 0      ; R41 := true
353 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
354 [-]: GETUPVAL  R38 U5       ; R38 := U5
355 [-]: GETGLOBAL R39 K4       ; R39 := mSelected
356 [-]: GETTABLE  R39 R39 K38  ; R39 := R39["Consumable"]
357 [-]: CALL      R38 2 1      ; R38(R39)
358 [-]: GETGLOBAL R38 K43      ; R38 := mChildMovie
359 [-]: EQ        1 R38 K1     ; if R38 == nil then PC := 366
360 [-]: JMP       366          ; PC := 366
361 [-]: GETGLOBAL R38 K43      ; R38 := mChildMovie
362 [-]: SELF      R38 R38 K44  ; R39 := R38; R38 := R38[0xe4162eed]
363 [-]: LOADK     R40 K45      ; R40 := "TransitionOut"
364 [-]: LOADK     R41 K46      ; R41 := ""
365 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
366 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 7224
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETGLOBAL R1 K0        ; mChildMovie := R1
  2 [-]: LOADBOOL  R1 0 0       ; R1 := false
  3 [-]: SETGLOBAL R1 K1        ; mInputBlocked := R1
  4 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 7229
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x4ae54c32]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SF_MARKET_TIER_ONE"]
 11 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 12 [-]: TEST      R0 1         ; if R0 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R0 U1        ; R0 := U1
 15 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xe0cba3ca]
 16 [-]: LOADK     R1 K5        ; R1 := "/Lotus/Language/Menu/Global_PurchaseFailedModuleRequired"
 17 [-]: CALL      R0 2 1       ; R0(R1)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: CALL      R0 1 2       ; R0 := R0()
 21 [-]: TEST      R0 1         ; if R0 then PC := 80
 22 [-]: JMP       80           ; PC := 80
 23 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 24 [-]: GETGLOBAL R1 K6        ; R1 := mSelected
 25 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["Item"]
 26 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 27 [-]: TEST      R0 1         ; if R0 then PC := 80
 28 [-]: JMP       80           ; PC := 80
 29 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 30 [-]: GETGLOBAL R1 K6        ; R1 := mSelected
 31 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["Item"]
 32 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mStoreItem"]
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 80
 35 [-]: JMP       80           ; PC := 80
 36 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 37 [-]: GETGLOBAL R1 K9        ; R1 := 0x0032441c
 38 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["UIMovie_DetailedPurchaseDialog"]
 39 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 40 [-]: TEST      R0 1         ; if R0 then PC := 80
 41 [-]: JMP       80           ; PC := 80
 42 [-]: LOADBOOL  R0 1 0       ; R0 := true
 43 [-]: SETGLOBAL R0 K11       ; mInputBlocked := R0
 44 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 45 [-]: GETGLOBAL R1 K12       ; R1 := mChildMovie
 46 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 47 [-]: TEST      R0 1         ; if R0 then PC := 52
 48 [-]: JMP       52           ; PC := 52
 49 [-]: GETGLOBAL R0 K12       ; R0 := mChildMovie
 50 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0x32302b4a]
 51 [-]: CALL      R0 2 1       ; R0(R1)
 52 [-]: GETGLOBAL R0 K14       ; R0 := _T
 53 [-]: SETTABLE  R0 K15 K16   ; R0["marketDetailedViewParms"] := nil
 54 [-]: GETGLOBAL R0 K14       ; R0 := _T
 55 [-]: NEWTABLE  R1 0 2       ; R1 := {}
 56 [-]: NEWTABLE  R2 0 2       ; R2 := {}
 57 [-]: GETGLOBAL R3 K6        ; R3 := mSelected
 58 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Item"]
 59 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mStoreItem"]
 60 [-]: SETTABLE  R2 K18 R3    ; R2["StoreItem"] := R3
 61 [-]: GETGLOBAL R3 K6        ; R3 := mSelected
 62 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Item"]
 63 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["Sale"]
 64 [-]: SETTABLE  R2 K19 R3    ; R2["Sale"] := R3
 65 [-]: SETTABLE  R1 K17 R2    ; R1["ITEM"] := R2
 66 [-]: GETUPVAL  R2 U3        ; R2 := U3
 67 [-]: SETTABLE  R1 K20 R2    ; R1["CALLBACK"] := R2
 68 [-]: SETTABLE  R0 K15 R1    ; R0["marketDetailedViewParms"] := R1
 69 [-]: GETGLOBAL R0 K21       ; R0 := 0xae91e43b
 70 [-]: SELF      R0 R0 K22    ; R1 := R0; R0 := R0[0x1fd6abd0]
 71 [-]: GETGLOBAL R2 K9        ; R2 := 0x0032441c
 72 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["UIMovie_DetailedPurchaseDialog"]
 73 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 74 [-]: SETGLOBAL R0 K12       ; mChildMovie := R0
 75 [-]: GETGLOBAL R0 K12       ; R0 := mChildMovie
 76 [-]: SELF      R0 R0 K23    ; R1 := R0; R0 := R0[0xe4162eed]
 77 [-]: LOADK     R2 K24       ; R2 := "SetExitCallback"
 78 [-]: LOADK     R3 K25       ; R3 := "OnDetailedViewComplete"
 79 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 80 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 7253
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MenuSuitAvatar"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 35
  7 [-]: JMP       35           ; PC := 35
  8 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0xde321e6f]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xbb4a3d82]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 35
 16 [-]: JMP       35           ; PC := 35
 17 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xf2deaf69]
 18 [-]: GETGLOBAL R4 K6        ; R4 := 0x7ed0a956
 19 [-]: LOADK     R5 K7        ; R5 := "/Lotus/Weapons/Tenno/Melee/LotusNunchaku"
 20 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 21 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 22 [-]: TEST      R2 0         ; if not R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0x167f2e76]
 25 [-]: GETGLOBAL R4 K9        ; R4 := 0x0469f296
 26 [-]: LOADK     R5 K10       ; R5 := "NunchakuBlockIdle"
 27 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 28 [-]: CALL      R2 0 1       ; R2(R3,...)
 29 [-]: JMP       35           ; PC := 35
 30 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0x167f2e76]
 31 [-]: GETGLOBAL R4 K9        ; R4 := 0x0469f296
 32 [-]: LOADK     R5 K11       ; R5 := "WeaponForceOpen"
 33 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 34 [-]: CALL      R2 0 1       ; R2(R3,...)
 35 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 7267
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 150
  2 [-]: JMP       150          ; PC := 150
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mStoreItem"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 150
  7 [-]: JMP       150          ; PC := 150
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Name"]
  9 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 12 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x42b04007]
 13 [-]: GETGLOBAL R5 K6        ; R5 := 0x64fb1586
 14 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mStoreItem"]
 15 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0xd3a9d01f]
 16 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 17 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 18 [-]: LOADBOOL  R6 1 0       ; R6 := true
 19 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 20 [-]: MOVE      R2 R3        ; R2 := R3
 21 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["LocalizedDesc"]
 22 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 25 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 26 [-]: GETGLOBAL R6 K6        ; R6 := 0x64fb1586
 27 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mStoreItem"]
 28 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0x5ba460ac]
 29 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 30 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 31 [-]: LOADBOOL  R7 1 0       ; R7 := true
 32 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 33 [-]: MOVE      R3 R4        ; R3 := R4
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x06d055f9]
 36 [-]: GETUPVAL  R5 U1        ; R5 := U1
 37 [-]: LOADK     R6 K11       ; R6 := "Arial Unicode MS"
 38 [-]: LOADK     R7 K12       ; R7 := "Noto Sans"
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: LOADK     R5 18        ; R5 := 18.000000
 41 [-]: GETUPVAL  R6 U2        ; R6 := U2
 42 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["CosmeticDescOrigWidth"]
 43 [-]: EQ        1 R6 K0      ; if R6 == nil then PC := 114
 44 [-]: JMP       114          ; PC := 114
 45 [-]: GETGLOBAL R6 K4        ; R6 := 0xae91e43b
 46 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x91a24e4b]
 47 [-]: LOADK     R8 K15       ; R8 := "CosmeticDesc"
 48 [-]: LOADK     R9 12        ; R9 := 12.000000
 49 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 50 [-]: GETUPVAL  R7 U2        ; R7 := U2
 51 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["CosmeticDescOrigWidth"]
 52 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 73
 53 [-]: JMP       73           ; PC := 73
 54 [-]: GETGLOBAL R7 K4        ; R7 := 0xae91e43b
 55 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0x67bc869f]
 56 [-]: LOADK     R9 K15       ; R9 := "CosmeticDesc"
 57 [-]: LOADK     R10 5        ; R10 := 5.000000
 58 [-]: LOADK     R11 100      ; R11 := 100.000000
 59 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 60 [-]: GETGLOBAL R7 K4        ; R7 := 0xae91e43b
 61 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0x67bc869f]
 62 [-]: LOADK     R9 K15       ; R9 := "CosmeticDesc"
 63 [-]: LOADK     R10 6        ; R10 := 6.000000
 64 [-]: LOADK     R11 100      ; R11 := 100.000000
 65 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 66 [-]: GETGLOBAL R7 K4        ; R7 := 0xae91e43b
 67 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0x67bc869f]
 68 [-]: LOADK     R9 K15       ; R9 := "CosmeticDesc"
 69 [-]: LOADK     R10 12       ; R10 := 12.000000
 70 [-]: GETUPVAL  R11 U2       ; R11 := U2
 71 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["CosmeticDescOrigWidth"]
 72 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 73 [-]: GETGLOBAL R7 K17       ; R7 := 0xc8802016
 74 [-]: GETGLOBAL R8 K18       ; R8 := 0x4c2b1f7e
 75 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 76 [-]: JMP       112          ; PC := 112
 77 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["mStoreItem"]
 78 [-]: EQ        0 R12 R11    ; if R12 ~= R11 then PC := 112
 79 [-]: JMP       112          ; PC := 112
 80 [-]: LOADK     R4 K11       ; R4 := "Arial Unicode MS"
 81 [-]: LOADK     R5 12        ; R5 := 12.000000
 82 [-]: GETGLOBAL R12 K4       ; R12 := 0xae91e43b
 83 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12[0x6b837788]
 84 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 85 [-]: GETGLOBAL R13 K4       ; R13 := 0xae91e43b
 86 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13[0x091c120e]
 87 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 88 [-]: LT        0 R12 R13    ; if R12 >= R13 then PC := 114
 89 [-]: JMP       114          ; PC := 114
 90 [-]: DIV       R14 R13 R12  ; R14 := R13 / R12
 91 [-]: GETGLOBAL R15 K4       ; R15 := 0xae91e43b
 92 [-]: SELF      R15 R15 K16  ; R16 := R15; R15 := R15[0x67bc869f]
 93 [-]: LOADK     R17 K15      ; R17 := "CosmeticDesc"
 94 [-]: LOADK     R18 5        ; R18 := 5.000000
 95 [-]: MUL       R19 K21 R14  ; R19 := 100.000000 * R14
 96 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
 97 [-]: GETGLOBAL R15 K4       ; R15 := 0xae91e43b
 98 [-]: SELF      R15 R15 K16  ; R16 := R15; R15 := R15[0x67bc869f]
 99 [-]: LOADK     R17 K15      ; R17 := "CosmeticDesc"
100 [-]: LOADK     R18 6        ; R18 := 6.000000
101 [-]: MUL       R19 K21 R14  ; R19 := 100.000000 * R14
102 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
103 [-]: GETGLOBAL R15 K4       ; R15 := 0xae91e43b
104 [-]: SELF      R15 R15 K16  ; R16 := R15; R15 := R15[0x67bc869f]
105 [-]: LOADK     R17 K15      ; R17 := "CosmeticDesc"
106 [-]: LOADK     R18 12       ; R18 := 12.000000
107 [-]: GETUPVAL  R19 U2       ; R19 := U2
108 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["CosmeticDescOrigWidth"]
109 [-]: DIV       R19 R19 R14  ; R19 := R19 / R14
110 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
111 [-]: JMP       114          ; PC := 114
112 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 77; R9 := R10 end
113 [-]: JMP       77           ; PC := 77
114 [-]: LEN       R15 R1       ; R15 := # R1
115 [-]: LT        0 K22 R15    ; if 0.000000 >= R15 then PC := 120
116 [-]: JMP       120          ; PC := 120
117 [-]: MOVE      R15 R3       ; R15 := R3
118 [-]: MOVE      R16 R1       ; R16 := R1
119 [-]: CONCAT    R3 R15 R16   ; R3 := R15 .. R16
120 [-]: LOADK     R15 K23      ; R15 := "<p><font face=\""
121 [-]: MOVE      R16 R4       ; R16 := R4
122 [-]: LOADK     R17 K24      ; R17 := "\"><b>"
123 [-]: GETGLOBAL R18 K25      ; R18 := 0x7f5022cf
124 [-]: GETTABLE  R18 R18 K26  ; R18 := R18[0x3f3e4d12]
125 [-]: MOVE      R19 R2       ; R19 := R2
126 [-]: CALL      R18 2 2      ; R18 := R18(R19)
127 [-]: LOADK     R19 K27      ; R19 := "</b><br>"
128 [-]: MOVE      R20 R3       ; R20 := R3
129 [-]: LOADK     R21 K28      ; R21 := "</font></p>"
130 [-]: CONCAT    R15 R15 R21  ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21
131 [-]: GETGLOBAL R16 K4       ; R16 := 0xae91e43b
132 [-]: SELF      R16 R16 K29  ; R17 := R16; R16 := R16[0x5f56eeab]
133 [-]: LOADK     R18 K15      ; R18 := "CosmeticDesc"
134 [-]: LOADK     R19 41       ; R19 := 41.000000
135 [-]: MOVE      R20 R4       ; R20 := R4
136 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
137 [-]: GETGLOBAL R16 K4       ; R16 := 0xae91e43b
138 [-]: SELF      R16 R16 K16  ; R17 := R16; R16 := R16[0x67bc869f]
139 [-]: LOADK     R18 K15      ; R18 := "CosmeticDesc"
140 [-]: LOADK     R19 42       ; R19 := 42.000000
141 [-]: MOVE      R20 R5       ; R20 := R5
142 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
143 [-]: GETGLOBAL R16 K4       ; R16 := 0xae91e43b
144 [-]: SELF      R16 R16 K29  ; R17 := R16; R16 := R16[0x5f56eeab]
145 [-]: LOADK     R18 K15      ; R18 := "CosmeticDesc"
146 [-]: LOADK     R19 29       ; R19 := 29.000000
147 [-]: MOVE      R20 R15      ; R20 := R15
148 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
149 [-]: JMP       156          ; PC := 156
150 [-]: GETGLOBAL R16 K4       ; R16 := 0xae91e43b
151 [-]: SELF      R16 R16 K29  ; R17 := R16; R16 := R16[0x5f56eeab]
152 [-]: LOADK     R18 K15      ; R18 := "CosmeticDesc"
153 [-]: LOADK     R19 29       ; R19 := 29.000000
154 [-]: LOADK     R20 K30      ; R20 := ""
155 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
156 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 7317
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  61

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: LOADNIL   R1 R1        ; R1 := nil
  9 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["LoadOutType"]
 12 [-]: EQ        0 R2 K5      ; if R2 ~= 8.000000 then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 15 [-]: GETGLOBAL R3 K6        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MechAvatar"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETGLOBAL R2 K6        ; R2 := _T
 21 [-]: GETTABLE  R1 R2 K7     ; R1 := R2["MechAvatar"]
 22 [-]: JMP       55           ; PC := 55
 23 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 24 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 25 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["LoadOutType"]
 26 [-]: EQ        0 R2 K8      ; if R2 ~= 1.000000 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETGLOBAL R2 K6        ; R2 := _T
 29 [-]: GETTABLE  R1 R2 K9     ; R1 := R2["MenuSentinel"]
 30 [-]: JMP       55           ; PC := 55
 31 [-]: GETGLOBAL R2 K6        ; R2 := _T
 32 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["mSpecialSuitMode"]
 33 [-]: TEST      R2 0         ; if not R2 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: GETGLOBAL R2 K6        ; R2 := _T
 36 [-]: GETTABLE  R1 R2 K11    ; R1 := R2["SpecialSuitAvatar"]
 37 [-]: JMP       55           ; PC := 55
 38 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 39 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 40 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["LoadOutId"]
 41 [-]: GETUPVAL  R3 U0        ; R3 := U0
 42 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["KDriveSlot"]
 43 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 53
 44 [-]: JMP       53           ; PC := 53
 45 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 46 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 47 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["LoadOutType"]
 48 [-]: EQ        0 R2 K14     ; if R2 ~= 6.000000 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: GETGLOBAL R2 K6        ; R2 := _T
 51 [-]: GETTABLE  R1 R2 K15    ; R1 := R2["KDriveAvatar"]
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETGLOBAL R2 K6        ; R2 := _T
 54 [-]: GETTABLE  R1 R2 K16    ; R1 := R2["MenuSuitAvatar"]
 55 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 56 [-]: MOVE      R3 R1        ; R3 := R1
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 0         ; if not R2 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: RETURN    R0 1         ; return 
 61 [-]: LOADNIL   R2 R2        ; R2 := nil
 62 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 63 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 64 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LoadOutId"]
 65 [-]: EQ        0 R3 K17     ; if R3 ~= 0.000000 then PC := 97
 66 [-]: JMP       97           ; PC := 97
 67 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
 68 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 69 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3[0xac03381f]
 70 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 71 [-]: TEST      R3 0         ; if not R3 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0x2303a280]
 76 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 77 [-]: MOVE      R2 R3        ; R2 := R3
 78 [-]: JMP       176          ; PC := 176
 79 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 80 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 81 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["LoadOutType"]
 82 [-]: EQ        0 R3 K21     ; if R3 ~= 7.000000 then PC := 91
 83 [-]: JMP       91           ; PC := 91
 84 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xe85a2361]
 87 [-]: LOADK     R5 11        ; R5 := 11.000000
 88 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 89 [-]: MOVE      R2 R3        ; R2 := R3
 90 [-]: JMP       176          ; PC := 176
 91 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
 92 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 93 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xf7d48ee0]
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: MOVE      R2 R3        ; R2 := R3
 96 [-]: JMP       176          ; PC := 176
 97 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 98 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 99 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LoadOutId"]
100 [-]: EQ        0 R3 K25     ; if R3 ~= 2.000000 then PC := 125
101 [-]: JMP       125          ; PC := 125
102 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
103 [-]: CALL      R3 2 2       ; R3 := R3(R4)
104 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xe85a2361]
105 [-]: LOADK     R5 1         ; R5 := 1.000000
106 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
107 [-]: MOVE      R2 R3        ; R2 := R3
108 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
109 [-]: MOVE      R4 R2        ; R4 := R2
110 [-]: CALL      R3 2 2       ; R3 := R3(R4)
111 [-]: TEST      R3 0         ; if not R3 then PC := 176
112 [-]: JMP       176          ; PC := 176
113 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
114 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
115 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["LoadOutType"]
116 [-]: EQ        0 R3 K8      ; if R3 ~= 1.000000 then PC := 176
117 [-]: JMP       176          ; PC := 176
118 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
119 [-]: CALL      R3 2 2       ; R3 := R3(R4)
120 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xe85a2361]
121 [-]: LOADK     R5 0         ; R5 := 0.000000
122 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
123 [-]: MOVE      R2 R3        ; R2 := R3
124 [-]: JMP       176          ; PC := 176
125 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
126 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
127 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LoadOutId"]
128 [-]: EQ        0 R3 K8      ; if R3 ~= 1.000000 then PC := 137
129 [-]: JMP       137          ; PC := 137
130 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
131 [-]: CALL      R3 2 2       ; R3 := R3(R4)
132 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xe85a2361]
133 [-]: LOADK     R5 0         ; R5 := 0.000000
134 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
135 [-]: MOVE      R2 R3        ; R2 := R3
136 [-]: JMP       176          ; PC := 176
137 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
138 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
139 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LoadOutId"]
140 [-]: EQ        0 R3 K26     ; if R3 ~= 3.000000 then PC := 148
141 [-]: JMP       148          ; PC := 148
142 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
143 [-]: CALL      R3 2 2       ; R3 := R3(R4)
144 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3[0xbb4a3d82]
145 [-]: CALL      R3 2 2       ; R3 := R3(R4)
146 [-]: MOVE      R2 R3        ; R2 := R3
147 [-]: JMP       176          ; PC := 176
148 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
149 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
150 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LoadOutId"]
151 [-]: GETGLOBAL R4 K4        ; R4 := 0x6c97a788
152 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["NUM_NORMAL_LOADOUT_SLOTS"]
153 [-]: LE        0 R4 R3      ; if R4 > R3 then PC := 176
154 [-]: JMP       176          ; PC := 176
155 [-]: GETGLOBAL R3 K6        ; R3 := _T
156 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mSpecialSuitMode"]
157 [-]: TEST      R3 0         ; if not R3 then PC := 170
158 [-]: JMP       170          ; PC := 170
159 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
160 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
161 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LoadOutId"]
162 [-]: EQ        0 R3 K29     ; if R3 ~= 5.000000 then PC := 170
163 [-]: JMP       170          ; PC := 170
164 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
165 [-]: CALL      R3 2 2       ; R3 := R3(R4)
166 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xf7d48ee0]
167 [-]: CALL      R3 2 2       ; R3 := R3(R4)
168 [-]: MOVE      R2 R3        ; R2 := R3
169 [-]: JMP       176          ; PC := 176
170 [-]: SELF      R3 R1 K18    ; R4 := R1; R3 := R1[0xde321e6f]
171 [-]: CALL      R3 2 2       ; R3 := R3(R4)
172 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0xe85a2361]
173 [-]: LOADK     R5 7         ; R5 := 7.000000
174 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
175 [-]: MOVE      R2 R3        ; R2 := R3
176 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
177 [-]: MOVE      R4 R2        ; R4 := R2
178 [-]: CALL      R3 2 2       ; R3 := R3(R4)
179 [-]: TEST      R3 0         ; if not R3 then PC := 182
180 [-]: JMP       182          ; PC := 182
181 [-]: RETURN    R0 1         ; return 
182 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
183 [-]: GETTABLE  R4 R0 K30    ; R4 := R0["PetTintColor"]
184 [-]: CALL      R3 2 2       ; R3 := R3(R4)
185 [-]: TEST      R3 1         ; if R3 then PC := 194
186 [-]: JMP       194          ; PC := 194
187 [-]: GETUPVAL  R3 U1        ; R3 := U1
188 [-]: GETTABLE  R4 R0 K31    ; R4 := R0["Attribute"]
189 [-]: GETTABLE  R5 R0 K30    ; R5 := R0["PetTintColor"]
190 [-]: LOADK     R6 0         ; R6 := 0.000000
191 [-]: LOADNIL   R7 R7        ; R7 := nil
192 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
193 [-]: RETURN    R0 1         ; return 
194 [-]: LOADNIL   R3 R3        ; R3 := nil
195 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["CosmeticSlot"]
196 [-]: LOADNIL   R5 R5        ; R5 := nil
197 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
198 [-]: GETTABLE  R7 R0 K33    ; R7 := R0["CustomizationType"]
199 [-]: CALL      R6 2 2       ; R6 := R6(R7)
200 [-]: TEST      R6 1         ; if R6 then PC := 207
201 [-]: JMP       207          ; PC := 207
202 [-]: GETTABLE  R6 R0 K33    ; R6 := R0["CustomizationType"]
203 [-]: SELF      R6 R6 K34    ; R7 := R6; R6 := R6[0xf278f8a1]
204 [-]: CALL      R6 2 2       ; R6 := R6(R7)
205 [-]: MOVE      R5 R6        ; R5 := R6
206 [-]: JMP       229          ; PC := 229
207 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
208 [-]: GETTABLE  R7 R0 K35    ; R7 := R0["Type"]
209 [-]: CALL      R6 2 2       ; R6 := R6(R7)
210 [-]: TEST      R6 1         ; if R6 then PC := 214
211 [-]: JMP       214          ; PC := 214
212 [-]: GETTABLE  R5 R0 K35    ; R5 := R0["Type"]
213 [-]: JMP       229          ; PC := 229
214 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["mPurchasedInfo"]
215 [-]: EQ        1 R6 K37     ; if R6 == nil then PC := 229
216 [-]: JMP       229          ; PC := 229
217 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
218 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["mPurchasedInfo"]
219 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["UID"]
220 [-]: CALL      R6 2 2       ; R6 := R6(R7)
221 [-]: TEST      R6 1         ; if R6 then PC := 229
222 [-]: JMP       229          ; PC := 229
223 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["mPurchasedInfo"]
224 [-]: GETTABLE  R6 R6 K38    ; R6 := R6["UID"]
225 [-]: EQ        1 R6 K39     ; if R6 == "" then PC := 229
226 [-]: JMP       229          ; PC := 229
227 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["mPurchasedInfo"]
228 [-]: GETTABLE  R5 R6 K38    ; R5 := R6["UID"]
229 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
230 [-]: MOVE      R7 R5        ; R7 := R5
231 [-]: CALL      R6 2 2       ; R6 := R6(R7)
232 [-]: TEST      R6 1         ; if R6 then PC := 258
233 [-]: JMP       258          ; PC := 258
234 [-]: GETGLOBAL R6 K40       ; R6 := 0x89326c93
235 [-]: SELF      R6 R6 K41    ; R7 := R6; R6 := R6[0x765dad71]
236 [-]: GETGLOBAL R8 K42       ; R8 := 0xb009bbc6
237 [-]: MOVE      R9 R5        ; R9 := R5
238 [-]: CALL      R8 2 2       ; R8 := R8(R9)
239 [-]: MOVE      R9 R2        ; R9 := R2
240 [-]: GETUPVAL  R10 U2       ; R10 := U2
241 [-]: CALL      R10 1 0      ; R10,... := R10()
242 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
243 [-]: MOVE      R3 R6        ; R3 := R6
244 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
245 [-]: MOVE      R7 R3        ; R7 := R3
246 [-]: CALL      R6 2 2       ; R6 := R6(R7)
247 [-]: TEST      R6 1         ; if R6 then PC := 255
248 [-]: JMP       255          ; PC := 255
249 [-]: EQ        1 R4 K37     ; if R4 == nil then PC := 255
250 [-]: JMP       255          ; PC := 255
251 [-]: SELF      R6 R3 K43    ; R7 := R3; R6 := R3[0x63af7fef]
252 [-]: MOVE      R8 R4        ; R8 := R4
253 [-]: CALL      R6 3 1       ; R6(R7,R8)
254 [-]: JMP       258          ; PC := 258
255 [-]: GETGLOBAL R6 K44       ; R6 := 0x3d106989
256 [-]: LOADK     R7 K45       ; R7 := "Couldn't make it!"
257 [-]: CALL      R6 2 1       ; R6(R7)
258 [-]: EQ        0 R4 K37     ; if R4 ~= nil then PC := 261
259 [-]: JMP       261          ; PC := 261
260 [-]: RETURN    R0 1         ; return 
261 [-]: SELF      R6 R2 K46    ; R7 := R2; R6 := R2[0x0ad758cb]
262 [-]: CALL      R6 2 2       ; R6 := R6(R7)
263 [-]: NEWTABLE  R7 0 0       ; R7 := {}
264 [-]: LOADK     R8 0         ; R8 := 0.000000
265 [-]: SUB       R9 R6 K8     ; R9 := R6 - 1.000000
266 [-]: LOADK     R10 1        ; R10 := 1.000000
267 [-]: FORPREP   R8 574       ; R8 -= R10; PC := 574
268 [-]: SELF      R12 R2 K47   ; R13 := R2; R12 := R2[0xfef27732]
269 [-]: MOVE      R14 R11      ; R14 := R11
270 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
271 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
272 [-]: MOVE      R14 R12      ; R14 := R12
273 [-]: CALL      R13 2 2      ; R13 := R13(R14)
274 [-]: TEST      R13 1        ; if R13 then PC := 574
275 [-]: JMP       574          ; PC := 574
276 [-]: SELF      R13 R12 K48  ; R14 := R12; R13 := R12[0xf2deaf69]
277 [-]: GETGLOBAL R15 K49      ; R15 := 0x9166d883
278 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
279 [-]: TEST      R13 0        ; if not R13 then PC := 574
280 [-]: JMP       574          ; PC := 574
281 [-]: SELF      R13 R12 K50  ; R14 := R12; R13 := R12[0xf4f49d1b]
282 [-]: CALL      R13 2 2      ; R13 := R13(R14)
283 [-]: EQ        0 R13 R4     ; if R13 ~= R4 then PC := 520
284 [-]: JMP       520          ; PC := 520
285 [-]: GETGLOBAL R13 K51      ; R13 := 0x33bdd652
286 [-]: GETTABLE  R13 R13 K52  ; R13 := R13[0x23d5322f]
287 [-]: MOVE      R14 R7       ; R14 := R7
288 [-]: MOVE      R15 R12      ; R15 := R12
289 [-]: CALL      R13 3 1      ; R13(R14,R15)
290 [-]: LOADK     R13 0        ; R13 := 0.000000
291 [-]: LOADK     R14 20       ; R14 := 20.000000
292 [-]: LOADK     R15 1        ; R15 := 1.000000
293 [-]: FORPREP   R13 420      ; R13 -= R15; PC := 420
294 [-]: EQ        1 R16 R4     ; if R16 == R4 then PC := 420
295 [-]: JMP       420          ; PC := 420
296 [-]: SELF      R17 R12 K53  ; R18 := R12; R17 := R12[0x68eb5c84]
297 [-]: MOVE      R19 R16      ; R19 := R16
298 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
299 [-]: LOADNIL   R18 R18      ; R18 := nil
300 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
301 [-]: MOVE      R20 R3       ; R20 := R3
302 [-]: CALL      R19 2 2      ; R19 := R19(R20)
303 [-]: TEST      R19 1        ; if R19 then PC := 309
304 [-]: JMP       309          ; PC := 309
305 [-]: SELF      R19 R3 K53   ; R20 := R3; R19 := R3[0x68eb5c84]
306 [-]: MOVE      R21 R16      ; R21 := R16
307 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
308 [-]: MOVE      R18 R19      ; R18 := R19
309 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
310 [-]: MOVE      R20 R17      ; R20 := R17
311 [-]: CALL      R19 2 2      ; R19 := R19(R20)
312 [-]: TEST      R19 0        ; if not R19 then PC := 319
313 [-]: JMP       319          ; PC := 319
314 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
315 [-]: MOVE      R20 R18      ; R20 := R18
316 [-]: CALL      R19 2 2      ; R19 := R19(R20)
317 [-]: TEST      R19 1        ; if R19 then PC := 420
318 [-]: JMP       420          ; PC := 420
319 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
320 [-]: MOVE      R20 R17      ; R20 := R17
321 [-]: CALL      R19 2 2      ; R19 := R19(R20)
322 [-]: TEST      R19 0        ; if not R19 then PC := 333
323 [-]: JMP       333          ; PC := 333
324 [-]: GETGLOBAL R19 K42      ; R19 := 0xb009bbc6
325 [-]: GETGLOBAL R20 K1       ; R20 := mSelected
326 [-]: GETTABLE  R20 R20 K2   ; R20 := R20["Element"]
327 [-]: GETTABLE  R20 R20 K35  ; R20 := R20["Type"]
328 [-]: CALL      R19 2 2      ; R19 := R19(R20)
329 [-]: SELF      R19 R19 K54  ; R20 := R19; R19 := R19[0x0911ae7c]
330 [-]: MOVE      R21 R16      ; R21 := R16
331 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
332 [-]: MOVE      R17 R19      ; R17 := R19
333 [-]: GETGLOBAL R19 K1       ; R19 := mSelected
334 [-]: GETTABLE  R19 R19 K2   ; R19 := R19["Element"]
335 [-]: GETTABLE  R19 R19 K55  ; R19 := R19["Customization"]
336 [-]: SELF      R19 R19 K56  ; R20 := R19; R19 := R19[0x2540510f]
337 [-]: MOVE      R21 R16      ; R21 := R16
338 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
339 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
340 [-]: MOVE      R21 R19      ; R21 := R19
341 [-]: CALL      R20 2 2      ; R20 := R20(R21)
342 [-]: TEST      R20 1        ; if R20 then PC := 348
343 [-]: JMP       348          ; PC := 348
344 [-]: EQ        1 R17 R19    ; if R17 == R19 then PC := 347
345 [-]: JMP       347          ; PC := 347
346 [-]: LOADBOOL  R20 0 1      ; R20 := false; PC := 347
347 [-]: LOADBOOL  R20 1 0      ; R20 := true
348 [-]: TEST      R20 0        ; if not R20 then PC := 420
349 [-]: JMP       420          ; PC := 420
350 [-]: LOADK     R21 0        ; R21 := 0.000000
351 [-]: SUB       R22 R6 K8    ; R22 := R6 - 1.000000
352 [-]: LOADK     R23 1        ; R23 := 1.000000
353 [-]: FORPREP   R21 380      ; R21 -= R23; PC := 380
354 [-]: SELF      R25 R2 K47   ; R26 := R2; R25 := R2[0xfef27732]
355 [-]: MOVE      R27 R24      ; R27 := R24
356 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
357 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
358 [-]: MOVE      R27 R25      ; R27 := R25
359 [-]: CALL      R26 2 2      ; R26 := R26(R27)
360 [-]: TEST      R26 1        ; if R26 then PC := 380
361 [-]: JMP       380          ; PC := 380
362 [-]: SELF      R26 R25 K48  ; R27 := R25; R26 := R25[0xf2deaf69]
363 [-]: GETGLOBAL R28 K49      ; R28 := 0x9166d883
364 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
365 [-]: TEST      R26 0        ; if not R26 then PC := 380
366 [-]: JMP       380          ; PC := 380
367 [-]: SELF      R26 R25 K50  ; R27 := R25; R26 := R25[0xf4f49d1b]
368 [-]: CALL      R26 2 2      ; R26 := R26(R27)
369 [-]: EQ        0 R26 R16    ; if R26 ~= R16 then PC := 380
370 [-]: JMP       380          ; PC := 380
371 [-]: SELF      R26 R25 K57  ; R27 := R25; R26 := R25[0xcde10c4a]
372 [-]: CALL      R26 2 2      ; R26 := R26(R27)
373 [-]: EQ        0 R26 R17    ; if R26 ~= R17 then PC := 380
374 [-]: JMP       380          ; PC := 380
375 [-]: GETGLOBAL R26 K51      ; R26 := 0x33bdd652
376 [-]: GETTABLE  R26 R26 K52  ; R26 := R26[0x23d5322f]
377 [-]: MOVE      R27 R7       ; R27 := R7
378 [-]: MOVE      R28 R25      ; R28 := R25
379 [-]: CALL      R26 3 1      ; R26(R27,R28)
380 [-]: FORLOOP   R21 354      ; R21 += R23; if R21 <= R22 then begin PC := 354; R24 := R21 end
381 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
382 [-]: MOVE      R27 R18      ; R27 := R18
383 [-]: CALL      R26 2 2      ; R26 := R26(R27)
384 [-]: TEST      R26 0        ; if not R26 then PC := 395
385 [-]: JMP       395          ; PC := 395
386 [-]: GETGLOBAL R26 K42      ; R26 := 0xb009bbc6
387 [-]: GETGLOBAL R27 K1       ; R27 := mSelected
388 [-]: GETTABLE  R27 R27 K2   ; R27 := R27["Element"]
389 [-]: GETTABLE  R27 R27 K35  ; R27 := R27["Type"]
390 [-]: CALL      R26 2 2      ; R26 := R26(R27)
391 [-]: SELF      R26 R26 K54  ; R27 := R26; R26 := R26[0x0911ae7c]
392 [-]: MOVE      R28 R16      ; R28 := R16
393 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
394 [-]: MOVE      R18 R26      ; R18 := R26
395 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
396 [-]: MOVE      R27 R18      ; R27 := R18
397 [-]: CALL      R26 2 2      ; R26 := R26(R27)
398 [-]: TEST      R26 1        ; if R26 then PC := 420
399 [-]: JMP       420          ; PC := 420
400 [-]: GETGLOBAL R26 K40      ; R26 := 0x89326c93
401 [-]: SELF      R26 R26 K41  ; R27 := R26; R26 := R26[0x765dad71]
402 [-]: GETGLOBAL R28 K58      ; R28 := 0x88efc25e
403 [-]: MOVE      R29 R18      ; R29 := R18
404 [-]: CALL      R28 2 2      ; R28 := R28(R29)
405 [-]: MOVE      R29 R2       ; R29 := R2
406 [-]: GETUPVAL  R30 U2       ; R30 := U2
407 [-]: CALL      R30 1 0      ; R30,... := R30()
408 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
409 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
410 [-]: MOVE      R28 R26      ; R28 := R26
411 [-]: CALL      R27 2 2      ; R27 := R27(R28)
412 [-]: TEST      R27 1        ; if R27 then PC := 420
413 [-]: JMP       420          ; PC := 420
414 [-]: SELF      R27 R26 K43  ; R28 := R26; R27 := R26[0x63af7fef]
415 [-]: MOVE      R29 R16      ; R29 := R16
416 [-]: CALL      R27 3 1      ; R27(R28,R29)
417 [-]: SELF      R27 R2 K59   ; R28 := R2; R27 := R2[0x5e6704ff]
418 [-]: MOVE      R29 R26      ; R29 := R26
419 [-]: CALL      R27 3 1      ; R27(R28,R29)
420 [-]: FORLOOP   R13 294      ; R13 += R15; if R13 <= R14 then begin PC := 294; R16 := R13 end
421 [-]: LOADK     R27 0        ; R27 := 0.000000
422 [-]: LOADK     R28 20       ; R28 := 20.000000
423 [-]: LOADK     R29 1        ; R29 := 1.000000
424 [-]: FORPREP   R27 519      ; R27 -= R29; PC := 519
425 [-]: SELF      R31 R12 K60  ; R32 := R12; R31 := R12[0xb8ef5b34]
426 [-]: MOVE      R33 R30      ; R33 := R30
427 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
428 [-]: GETGLOBAL R32 K0       ; R32 := 0x7b998233
429 [-]: MOVE      R33 R31      ; R33 := R31
430 [-]: CALL      R32 2 2      ; R32 := R32(R33)
431 [-]: TEST      R32 1        ; if R32 then PC := 519
432 [-]: JMP       519          ; PC := 519
433 [-]: LOADK     R32 0        ; R32 := 0.000000
434 [-]: SUB       R33 R6 K8    ; R33 := R6 - 1.000000
435 [-]: LOADK     R34 1        ; R34 := 1.000000
436 [-]: FORPREP   R32 459      ; R32 -= R34; PC := 459
437 [-]: SELF      R36 R2 K47   ; R37 := R2; R36 := R2[0xfef27732]
438 [-]: MOVE      R38 R35      ; R38 := R35
439 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
440 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
441 [-]: MOVE      R38 R36      ; R38 := R36
442 [-]: CALL      R37 2 2      ; R37 := R37(R38)
443 [-]: TEST      R37 1        ; if R37 then PC := 459
444 [-]: JMP       459          ; PC := 459
445 [-]: SELF      R37 R36 K48  ; R38 := R36; R37 := R36[0xf2deaf69]
446 [-]: GETGLOBAL R39 K49      ; R39 := 0x9166d883
447 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
448 [-]: TEST      R37 0        ; if not R37 then PC := 459
449 [-]: JMP       459          ; PC := 459
450 [-]: SELF      R37 R36 K50  ; R38 := R36; R37 := R36[0xf4f49d1b]
451 [-]: CALL      R37 2 2      ; R37 := R37(R38)
452 [-]: EQ        0 R37 R30    ; if R37 ~= R30 then PC := 459
453 [-]: JMP       459          ; PC := 459
454 [-]: GETGLOBAL R37 K51      ; R37 := 0x33bdd652
455 [-]: GETTABLE  R37 R37 K52  ; R37 := R37[0x23d5322f]
456 [-]: MOVE      R38 R7       ; R38 := R7
457 [-]: MOVE      R39 R36      ; R39 := R36
458 [-]: CALL      R37 3 1      ; R37(R38,R39)
459 [-]: FORLOOP   R32 437      ; R32 += R34; if R32 <= R33 then begin PC := 437; R35 := R32 end
460 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
461 [-]: MOVE      R38 R3       ; R38 := R3
462 [-]: CALL      R37 2 2      ; R37 := R37(R38)
463 [-]: TEST      R37 1        ; if R37 then PC := 472
464 [-]: JMP       472          ; PC := 472
465 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
466 [-]: SELF      R38 R3 K60   ; R39 := R3; R38 := R3[0xb8ef5b34]
467 [-]: MOVE      R40 R30      ; R40 := R30
468 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
469 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
470 [-]: TEST      R37 0        ; if not R37 then PC := 519
471 [-]: JMP       519          ; PC := 519
472 [-]: GETGLOBAL R37 K1       ; R37 := mSelected
473 [-]: GETTABLE  R37 R37 K2   ; R37 := R37["Element"]
474 [-]: GETTABLE  R37 R37 K55  ; R37 := R37["Customization"]
475 [-]: SELF      R37 R37 K56  ; R38 := R37; R37 := R37[0x2540510f]
476 [-]: MOVE      R39 R30      ; R39 := R30
477 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
478 [-]: GETGLOBAL R38 K0       ; R38 := 0x7b998233
479 [-]: MOVE      R39 R37      ; R39 := R37
480 [-]: CALL      R38 2 2      ; R38 := R38(R39)
481 [-]: TEST      R38 1        ; if R38 then PC := 485
482 [-]: JMP       485          ; PC := 485
483 [-]: EQ        0 R37 R31    ; if R37 ~= R31 then PC := 494
484 [-]: JMP       494          ; PC := 494
485 [-]: GETGLOBAL R38 K42      ; R38 := 0xb009bbc6
486 [-]: GETGLOBAL R39 K1       ; R39 := mSelected
487 [-]: GETTABLE  R39 R39 K2   ; R39 := R39["Element"]
488 [-]: GETTABLE  R39 R39 K35  ; R39 := R39["Type"]
489 [-]: CALL      R38 2 2      ; R38 := R38(R39)
490 [-]: SELF      R38 R38 K54  ; R39 := R38; R38 := R38[0x0911ae7c]
491 [-]: MOVE      R40 R30      ; R40 := R30
492 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
493 [-]: MOVE      R37 R38      ; R37 := R38
494 [-]: GETGLOBAL R38 K0       ; R38 := 0x7b998233
495 [-]: MOVE      R39 R37      ; R39 := R37
496 [-]: CALL      R38 2 2      ; R38 := R38(R39)
497 [-]: TEST      R38 1        ; if R38 then PC := 519
498 [-]: JMP       519          ; PC := 519
499 [-]: GETGLOBAL R38 K40      ; R38 := 0x89326c93
500 [-]: SELF      R38 R38 K41  ; R39 := R38; R38 := R38[0x765dad71]
501 [-]: GETGLOBAL R40 K58      ; R40 := 0x88efc25e
502 [-]: MOVE      R41 R37      ; R41 := R37
503 [-]: CALL      R40 2 2      ; R40 := R40(R41)
504 [-]: MOVE      R41 R2       ; R41 := R2
505 [-]: GETUPVAL  R42 U2       ; R42 := U2
506 [-]: CALL      R42 1 0      ; R42,... := R42()
507 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
508 [-]: GETGLOBAL R39 K0       ; R39 := 0x7b998233
509 [-]: MOVE      R40 R38      ; R40 := R38
510 [-]: CALL      R39 2 2      ; R39 := R39(R40)
511 [-]: TEST      R39 1        ; if R39 then PC := 519
512 [-]: JMP       519          ; PC := 519
513 [-]: SELF      R39 R38 K43  ; R40 := R38; R39 := R38[0x63af7fef]
514 [-]: MOVE      R41 R30      ; R41 := R30
515 [-]: CALL      R39 3 1      ; R39(R40,R41)
516 [-]: SELF      R39 R2 K59   ; R40 := R2; R39 := R2[0x5e6704ff]
517 [-]: MOVE      R41 R38      ; R41 := R38
518 [-]: CALL      R39 3 1      ; R39(R40,R41)
519 [-]: FORLOOP   R27 425      ; R27 += R29; if R27 <= R28 then begin PC := 425; R30 := R27 end
520 [-]: GETGLOBAL R39 K0       ; R39 := 0x7b998233
521 [-]: MOVE      R40 R3       ; R40 := R3
522 [-]: CALL      R39 2 2      ; R39 := R39(R40)
523 [-]: TEST      R39 1        ; if R39 then PC := 574
524 [-]: JMP       574          ; PC := 574
525 [-]: LOADK     R39 0        ; R39 := 0.000000
526 [-]: LOADK     R40 20       ; R40 := 20.000000
527 [-]: LOADK     R41 1        ; R41 := 1.000000
528 [-]: FORPREP   R39 573      ; R39 -= R41; PC := 573
529 [-]: SELF      R43 R3 K60   ; R44 := R3; R43 := R3[0xb8ef5b34]
530 [-]: MOVE      R45 R42      ; R45 := R42
531 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
532 [-]: SELF      R44 R3 K53   ; R45 := R3; R44 := R3[0x68eb5c84]
533 [-]: MOVE      R46 R42      ; R46 := R42
534 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
535 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
536 [-]: MOVE      R46 R43      ; R46 := R43
537 [-]: CALL      R45 2 2      ; R45 := R45(R46)
538 [-]: TEST      R45 1        ; if R45 then PC := 551
539 [-]: JMP       551          ; PC := 551
540 [-]: SELF      R45 R12 K50  ; R46 := R12; R45 := R12[0xf4f49d1b]
541 [-]: CALL      R45 2 2      ; R45 := R45(R46)
542 [-]: EQ        0 R45 R42    ; if R45 ~= R42 then PC := 551
543 [-]: JMP       551          ; PC := 551
544 [-]: GETGLOBAL R45 K51      ; R45 := 0x33bdd652
545 [-]: GETTABLE  R45 R45 K52  ; R45 := R45[0x23d5322f]
546 [-]: MOVE      R46 R7       ; R46 := R7
547 [-]: MOVE      R47 R12      ; R47 := R12
548 [-]: CALL      R45 3 1      ; R45(R46,R47)
549 [-]: JMP       574          ; PC := 574
550 [-]: JMP       573          ; PC := 573
551 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
552 [-]: MOVE      R46 R44      ; R46 := R44
553 [-]: CALL      R45 2 2      ; R45 := R45(R46)
554 [-]: TEST      R45 1        ; if R45 then PC := 573
555 [-]: JMP       573          ; PC := 573
556 [-]: SELF      R45 R12 K50  ; R46 := R12; R45 := R12[0xf4f49d1b]
557 [-]: CALL      R45 2 2      ; R45 := R45(R46)
558 [-]: EQ        0 R45 R42    ; if R45 ~= R42 then PC := 573
559 [-]: JMP       573          ; PC := 573
560 [-]: SELF      R45 R12 K57  ; R46 := R12; R45 := R12[0xcde10c4a]
561 [-]: CALL      R45 2 2      ; R45 := R45(R46)
562 [-]: SELF      R46 R2 K54   ; R47 := R2; R46 := R2[0x0911ae7c]
563 [-]: MOVE      R48 R42      ; R48 := R42
564 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
565 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 573
566 [-]: JMP       573          ; PC := 573
567 [-]: GETGLOBAL R45 K51      ; R45 := 0x33bdd652
568 [-]: GETTABLE  R45 R45 K52  ; R45 := R45[0x23d5322f]
569 [-]: MOVE      R46 R7       ; R46 := R7
570 [-]: MOVE      R47 R12      ; R47 := R12
571 [-]: CALL      R45 3 1      ; R45(R46,R47)
572 [-]: JMP       574          ; PC := 574
573 [-]: FORLOOP   R39 529      ; R39 += R41; if R39 <= R40 then begin PC := 529; R42 := R39 end
574 [-]: FORLOOP   R8 268       ; R8 += R10; if R8 <= R9 then begin PC := 268; R11 := R8 end
575 [-]: GETGLOBAL R45 K61      ; R45 := 0xcfc01047
576 [-]: MOVE      R46 R7       ; R46 := R7
577 [-]: CALL      R45 2 4      ; R45,R46,R47 := R45(R46)
578 [-]: JMP       591          ; PC := 591
579 [-]: GETGLOBAL R50 K0       ; R50 := 0x7b998233
580 [-]: MOVE      R51 R49      ; R51 := R49
581 [-]: CALL      R50 2 2      ; R50 := R50(R51)
582 [-]: TEST      R50 1        ; if R50 then PC := 591
583 [-]: JMP       591          ; PC := 591
584 [-]: SELF      R50 R2 K62   ; R51 := R2; R50 := R2[0x12dd9da2]
585 [-]: MOVE      R52 R49      ; R52 := R49
586 [-]: CALL      R50 3 1      ; R50(R51,R52)
587 [-]: GETGLOBAL R50 K40      ; R50 := 0x89326c93
588 [-]: SELF      R50 R50 K63  ; R51 := R50; R50 := R50[0x59c96e77]
589 [-]: MOVE      R52 R49      ; R52 := R49
590 [-]: CALL      R50 3 1      ; R50(R51,R52)
591 [-]: TFORLOOP  R45 2        ; R48,R49 :=  R45(R46,R47); if R48 ~= nil then begin PC = 579; R47 := R48 end
592 [-]: JMP       579          ; PC := 579
593 [-]: GETGLOBAL R50 K0       ; R50 := 0x7b998233
594 [-]: MOVE      R51 R3       ; R51 := R3
595 [-]: CALL      R50 2 2      ; R50 := R50(R51)
596 [-]: TEST      R50 1        ; if R50 then PC := 717
597 [-]: JMP       717          ; PC := 717
598 [-]: SELF      R50 R2 K59   ; R51 := R2; R50 := R2[0x5e6704ff]
599 [-]: MOVE      R52 R3       ; R52 := R3
600 [-]: CALL      R50 3 1      ; R50(R51,R52)
601 [-]: LOADK     R50 0        ; R50 := 0.000000
602 [-]: LOADK     R51 20       ; R51 := 20.000000
603 [-]: LOADK     R52 1        ; R52 := 1.000000
604 [-]: FORPREP   R50 681      ; R50 -= R52; PC := 681
605 [-]: GETGLOBAL R54 K42      ; R54 := 0xb009bbc6
606 [-]: SELF      R55 R3 K60   ; R56 := R3; R55 := R3[0xb8ef5b34]
607 [-]: MOVE      R57 R53      ; R57 := R53
608 [-]: CALL      R55 3 0      ; R55,... := R55(R56,R57)
609 [-]: CALL      R54 0 2      ; R54 := R54(R55,...)
610 [-]: GETGLOBAL R55 K0       ; R55 := 0x7b998233
611 [-]: MOVE      R56 R54      ; R56 := R54
612 [-]: CALL      R55 2 2      ; R55 := R55(R56)
613 [-]: TEST      R55 0        ; if not R55 then PC := 658
614 [-]: JMP       658          ; PC := 658
615 [-]: GETGLOBAL R55 K1       ; R55 := mSelected
616 [-]: GETTABLE  R55 R55 K64  ; R55 := R55["Cosmetic"]
617 [-]: GETTABLE  R55 R55 K65  ; R55 := R55["Slot"]
618 [-]: EQ        0 R55 K21    ; if R55 ~= 7.000000 then PC := 658
619 [-]: JMP       658          ; PC := 658
620 [-]: GETGLOBAL R55 K0       ; R55 := 0x7b998233
621 [-]: GETGLOBAL R56 K1       ; R56 := mSelected
622 [-]: GETTABLE  R56 R56 K2   ; R56 := R56["Element"]
623 [-]: GETTABLE  R56 R56 K35  ; R56 := R56["Type"]
624 [-]: CALL      R55 2 2      ; R55 := R55(R56)
625 [-]: TEST      R55 1        ; if R55 then PC := 658
626 [-]: JMP       658          ; PC := 658
627 [-]: GETGLOBAL R55 K1       ; R55 := mSelected
628 [-]: GETTABLE  R55 R55 K2   ; R55 := R55["Element"]
629 [-]: GETTABLE  R55 R55 K35  ; R55 := R55["Type"]
630 [-]: SELF      R55 R55 K48  ; R56 := R55; R55 := R55[0xf2deaf69]
631 [-]: GETGLOBAL R57 K66      ; R57 := 0x01302fb0
632 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
633 [-]: TEST      R55 0        ; if not R55 then PC := 658
634 [-]: JMP       658          ; PC := 658
635 [-]: EQ        0 R53 K67    ; if R53 ~= 9.000000 then PC := 647
636 [-]: JMP       647          ; PC := 647
637 [-]: GETGLOBAL R55 K42      ; R55 := 0xb009bbc6
638 [-]: GETGLOBAL R56 K1       ; R56 := mSelected
639 [-]: GETTABLE  R56 R56 K2   ; R56 := R56["Element"]
640 [-]: GETTABLE  R56 R56 K68  ; R56 := R56["EquippedItem"]
641 [-]: GETTABLE  R56 R56 K69  ; R56 := R56["mDetails"]
642 [-]: GETTABLE  R56 R56 K70  ; R56 := R56["mDominantTraits"]
643 [-]: GETTABLE  R56 R56 K71  ; R56 := R56["mHead"]
644 [-]: CALL      R55 2 2      ; R55 := R55(R56)
645 [-]: MOVE      R54 R55      ; R54 := R55
646 [-]: JMP       658          ; PC := 658
647 [-]: EQ        0 R53 K72    ; if R53 ~= 10.000000 then PC := 658
648 [-]: JMP       658          ; PC := 658
649 [-]: GETGLOBAL R55 K42      ; R55 := 0xb009bbc6
650 [-]: GETGLOBAL R56 K1       ; R56 := mSelected
651 [-]: GETTABLE  R56 R56 K2   ; R56 := R56["Element"]
652 [-]: GETTABLE  R56 R56 K68  ; R56 := R56["EquippedItem"]
653 [-]: GETTABLE  R56 R56 K69  ; R56 := R56["mDetails"]
654 [-]: GETTABLE  R56 R56 K70  ; R56 := R56["mDominantTraits"]
655 [-]: GETTABLE  R56 R56 K73  ; R56 := R56["mTail"]
656 [-]: CALL      R55 2 2      ; R55 := R55(R56)
657 [-]: MOVE      R54 R55      ; R54 := R55
658 [-]: GETGLOBAL R55 K0       ; R55 := 0x7b998233
659 [-]: MOVE      R56 R54      ; R56 := R54
660 [-]: CALL      R55 2 2      ; R55 := R55(R56)
661 [-]: TEST      R55 1        ; if R55 then PC := 681
662 [-]: JMP       681          ; PC := 681
663 [-]: GETGLOBAL R55 K40      ; R55 := 0x89326c93
664 [-]: SELF      R55 R55 K41  ; R56 := R55; R55 := R55[0x765dad71]
665 [-]: MOVE      R57 R54      ; R57 := R54
666 [-]: MOVE      R58 R2       ; R58 := R2
667 [-]: GETUPVAL  R59 U2       ; R59 := U2
668 [-]: CALL      R59 1 0      ; R59,... := R59()
669 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
670 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
671 [-]: MOVE      R57 R55      ; R57 := R55
672 [-]: CALL      R56 2 2      ; R56 := R56(R57)
673 [-]: TEST      R56 1        ; if R56 then PC := 681
674 [-]: JMP       681          ; PC := 681
675 [-]: SELF      R56 R55 K43  ; R57 := R55; R56 := R55[0x63af7fef]
676 [-]: MOVE      R58 R53      ; R58 := R53
677 [-]: CALL      R56 3 1      ; R56(R57,R58)
678 [-]: SELF      R56 R2 K59   ; R57 := R2; R56 := R2[0x5e6704ff]
679 [-]: MOVE      R58 R55      ; R58 := R55
680 [-]: CALL      R56 3 1      ; R56(R57,R58)
681 [-]: FORLOOP   R50 605      ; R50 += R52; if R50 <= R51 then begin PC := 605; R53 := R50 end
682 [-]: GETGLOBAL R56 K74      ; R56 := mLists
683 [-]: GETTABLE  R56 R56 K75  ; R56 := R56["mCosmeticsList"]
684 [-]: GETTABLE  R56 R56 K76  ; R56 := R56["mCurrLevel"]
685 [-]: GETGLOBAL R57 K74      ; R57 := mLists
686 [-]: GETTABLE  R57 R57 K75  ; R57 := R57["mCosmeticsList"]
687 [-]: GETTABLE  R57 R57 K77  ; R57 := R57["HOLSTER_STYLE"]
688 [-]: EQ        1 R56 R57    ; if R56 == R57 then PC := 698
689 [-]: JMP       698          ; PC := 698
690 [-]: GETGLOBAL R56 K74      ; R56 := mLists
691 [-]: GETTABLE  R56 R56 K75  ; R56 := R56["mCosmeticsList"]
692 [-]: GETTABLE  R56 R56 K76  ; R56 := R56["mCurrLevel"]
693 [-]: GETGLOBAL R57 K74      ; R57 := mLists
694 [-]: GETTABLE  R57 R57 K75  ; R57 := R57["mCosmeticsList"]
695 [-]: GETTABLE  R57 R57 K78  ; R57 := R57["HOLSTER_CUSTOMIZATION"]
696 [-]: EQ        0 R56 R57    ; if R56 ~= R57 then PC := 700
697 [-]: JMP       700          ; PC := 700
698 [-]: LOADK     R56 4        ; R56 := 4.000000
699 [-]: SETUPVAL  R56 U3       ; U82 := R3
700 [-]: SELF      R56 R3 K48   ; R57 := R3; R56 := R3[0xf2deaf69]
701 [-]: GETGLOBAL R58 K79      ; R58 := gLotusMoaPetPersonalityType
702 [-]: CALL      R56 3 2      ; R56 := R56(R57,R58)
703 [-]: TEST      R56 0        ; if not R56 then PC := 717
704 [-]: JMP       717          ; PC := 717
705 [-]: GETUPVAL  R56 U4       ; R56 := U4
706 [-]: LOADK     R57 3        ; R57 := 3.000000
707 [-]: CALL      R56 2 2      ; R56 := R56(R57)
708 [-]: GETGLOBAL R57 K0       ; R57 := 0x7b998233
709 [-]: MOVE      R58 R56      ; R58 := R56
710 [-]: CALL      R57 2 2      ; R57 := R57(R58)
711 [-]: TEST      R57 1        ; if R57 then PC := 717
712 [-]: JMP       717          ; PC := 717
713 [-]: SELF      R57 R56 K80  ; R58 := R56; R57 := R56[0x929a9715]
714 [-]: LOADK     R59 5        ; R59 := 5.000000
715 [-]: LOADBOOL  R60 1 0      ; R60 := true
716 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
717 [-]: GETUPVAL  R57 U5       ; R57 := U5
718 [-]: MOVE      R58 R0       ; R58 := R0
719 [-]: CALL      R57 2 1      ; R57(R58)
720 [-]: SELF      R57 R2 K81   ; R58 := R2; R57 := R2[0xc4f8c7f7]
721 [-]: MOVE      R59 R1       ; R59 := R1
722 [-]: CALL      R57 3 1      ; R57(R58,R59)
723 [-]: SELF      R57 R2 K82   ; R58 := R2; R57 := R2[0xdfb47e85]
724 [-]: MOVE      R59 R1       ; R59 := R1
725 [-]: CALL      R57 3 1      ; R57(R58,R59)
726 [-]: SELF      R57 R2 K48   ; R58 := R2; R57 := R2[0xf2deaf69]
727 [-]: GETGLOBAL R59 K83      ; R59 := gLotusMeleeWeaponType
728 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
729 [-]: TEST      R57 0        ; if not R57 then PC := 737
730 [-]: JMP       737          ; PC := 737
731 [-]: GETGLOBAL R57 K84      ; R57 := mTimerTable
732 [-]: GETTABLE  R57 R57 K85  ; R57 := R57["mTimerMgr"]
733 [-]: SELF      R57 R57 K86  ; R58 := R57; R57 := R57[0xbd2e96ea]
734 [-]: LOADK     R59 0        ; R59 := 0.000000
735 [-]: GETUPVAL  R60 U6       ; R60 := U6
736 [-]: CALL      R57 4 1      ; R57(R58,R59,R60)
737 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 7554
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LEN       R1 R0        ; R1 := # R0
  2 [-]: LT        0 K0 R1      ; if 0.000000 >= R1 then PC := 20
  3 [-]: JMP       20           ; PC := 20
  4 [-]: LOADK     R1 K1        ; R1 := "<br><br><b>"
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x7f5022cf
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x3f3e4d12]
  7 [-]: GETGLOBAL R3 K4        ; R3 := 0x603636ad
  8 [-]: LOADK     R4 K5        ; R4 := "/EE_Menus/Challenges_Progress"
  9 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 10 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 11 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 12 [-]: LOADK     R3 K6        ; R3 := "</b><br>"
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CONCAT    R0 R1 R4     ; R0 := R1 .. R2 .. R3 .. R4
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETGLOBAL R2 K7        ; R2 := mSelected
 17 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Item"]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 7561
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mSelected
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R0 K0        ; R0 := mSelected
  5 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Item"]
  6 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R0 K3        ; R0 := _T
  9 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Item"]
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["CosmeticSlot"]
 12 [-]: SETTABLE  R0 K4 R1     ; R0["LoadOutSelectedSlot"] := R1
 13 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 7567
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Item"]
  3 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 31
  4 [-]: JMP       31           ; PC := 31
  5 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Item"]
  7 [-]: SETGLOBAL R1 K3        ; mPrevSelection := R1
  8 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Item"]
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mClipName"]
 11 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 31
 12 [-]: JMP       31           ; PC := 31
 13 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x91e13703]
 15 [-]: GETGLOBAL R3 K3        ; R3 := mPrevSelection
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mClipName"]
 17 [-]: LOADK     R4 K7        ; R4 := ".Background"
 18 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 19 [-]: LOADK     R4 K8        ; R4 := "RectInnerColor"
 20 [-]: GETGLOBAL R5 K9        ; R5 := 0x0032441c
 21 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["UIColorObject_White"]
 22 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["r"]
 23 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 24 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["UIColorObject_White"]
 25 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["g"]
 26 [-]: GETGLOBAL R7 K9        ; R7 := 0x0032441c
 27 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["UIColorObject_White"]
 28 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["b"]
 29 [-]: LOADK     R8 K14       ; R8 := 0.100000
 30 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 31 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
 32 [-]: SETTABLE  R1 K1 R0     ; R1["Item"] := R0
 33 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
 34 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Item"]
 35 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 61
 36 [-]: JMP       61           ; PC := 61
 37 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
 38 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Item"]
 39 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mClipName"]
 40 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 61
 41 [-]: JMP       61           ; PC := 61
 42 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 43 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x91e13703]
 44 [-]: GETGLOBAL R3 K0        ; R3 := mSelected
 45 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Item"]
 46 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mClipName"]
 47 [-]: LOADK     R4 K7        ; R4 := ".Background"
 48 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 49 [-]: LOADK     R4 K8        ; R4 := "RectInnerColor"
 50 [-]: GETGLOBAL R5 K9        ; R5 := 0x0032441c
 51 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["UIColorObject_White"]
 52 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["r"]
 53 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 54 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["UIColorObject_White"]
 55 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["g"]
 56 [-]: GETGLOBAL R7 K9        ; R7 := 0x0032441c
 57 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["UIColorObject_White"]
 58 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["b"]
 59 [-]: LOADK     R8 K15       ; R8 := 0.400000
 60 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 61 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 7580
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  53

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K2        ; R2 := mSelected
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Element"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: GETGLOBAL R2 K2        ; R2 := mSelected
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Element"]
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["LoadOutType"]
 17 [-]: EQ        0 R2 K6      ; if R2 ~= 8.000000 then PC := 28
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 20 [-]: GETGLOBAL R3 K7        ; R3 := _T
 21 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["MechAvatar"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R2 K7        ; R2 := _T
 26 [-]: GETTABLE  R1 R2 K8     ; R1 := R2["MechAvatar"]
 27 [-]: JMP       178          ; PC := 178
 28 [-]: GETGLOBAL R2 K2        ; R2 := mSelected
 29 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Element"]
 30 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["LoadOutType"]
 31 [-]: EQ        0 R2 K9      ; if R2 ~= 1.000000 then PC := 161
 32 [-]: JMP       161          ; PC := 161
 33 [-]: GETUPVAL  R2 U0        ; R2 := U0
 34 [-]: LOADK     R3 0         ; R3 := 0.000000
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: GETUPVAL  R3 U0        ; R3 := U0
 37 [-]: LOADK     R4 3         ; R4 := 3.000000
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 40 [-]: MOVE      R5 R2        ; R5 := R2
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: TEST      R4 1         ; if R4 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2[0x768274d6]
 45 [-]: LOADBOOL  R6 0 0       ; R6 := false
 46 [-]: LOADBOOL  R7 1 0       ; R7 := true
 47 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 48 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 49 [-]: MOVE      R5 R3        ; R5 := R3
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: TEST      R4 1         ; if R4 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: SELF      R4 R3 K10    ; R5 := R3; R4 := R3[0x768274d6]
 54 [-]: LOADBOOL  R6 0 0       ; R6 := false
 55 [-]: LOADBOOL  R7 1 0       ; R7 := true
 56 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 57 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 58 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
 59 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Item"]
 60 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Type"]
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: TEST      R4 0         ; if not R4 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: LOADBOOL  R4 0 0       ; R4 := false
 66 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
 67 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Item"]
 68 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Type"]
 69 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf2deaf69]
 70 [-]: GETGLOBAL R7 K14       ; R7 := 0x88980f4f
 71 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 72 [-]: TEST      R5 1         ; if R5 then PC := 82
 73 [-]: JMP       82           ; PC := 82
 74 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
 75 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Item"]
 76 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Type"]
 77 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf2deaf69]
 78 [-]: GETGLOBAL R7 K15       ; R7 := 0xb506ff82
 79 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 80 [-]: TEST      R5 0         ; if not R5 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: LOADBOOL  R4 1 0       ; R4 := true
 83 [-]: JMP       105          ; PC := 105
 84 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
 85 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["Element"]
 86 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["LoadOutId"]
 87 [-]: EQ        0 R5 K17     ; if R5 ~= 2.000000 then PC := 105
 88 [-]: JMP       105          ; PC := 105
 89 [-]: GETGLOBAL R5 K18       ; R5 := mSentinelType
 90 [-]: EQ        1 R5 K19     ; if R5 == nil then PC := 105
 91 [-]: JMP       105          ; PC := 105
 92 [-]: GETGLOBAL R5 K18       ; R5 := mSentinelType
 93 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf2deaf69]
 94 [-]: GETGLOBAL R7 K14       ; R7 := 0x88980f4f
 95 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 96 [-]: TEST      R5 1         ; if R5 then PC := 104
 97 [-]: JMP       104          ; PC := 104
 98 [-]: GETGLOBAL R5 K18       ; R5 := mSentinelType
 99 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf2deaf69]
100 [-]: GETGLOBAL R7 K15       ; R7 := 0xb506ff82
101 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
102 [-]: TEST      R5 0         ; if not R5 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: LOADBOOL  R4 1 0       ; R4 := true
105 [-]: GETUPVAL  R5 U1        ; R5 := U1
106 [-]: GETUPVAL  R6 U2        ; R6 := U2
107 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["UI_MODE_IN_SPACE_SHIP"]
108 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 118
109 [-]: JMP       118          ; PC := 118
110 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
111 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Item"]
112 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Type"]
113 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf2deaf69]
114 [-]: GETGLOBAL R7 K21       ; R7 := gPetPowerSuitType
115 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
116 [-]: TEST      R5 1         ; if R5 then PC := 148
117 [-]: JMP       148          ; PC := 148
118 [-]: TEST      R4 0         ; if not R4 then PC := 134
119 [-]: JMP       134          ; PC := 134
120 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
121 [-]: MOVE      R6 R3        ; R6 := R3
122 [-]: CALL      R5 2 2       ; R5 := R5(R6)
123 [-]: TEST      R5 1         ; if R5 then PC := 134
124 [-]: JMP       134          ; PC := 134
125 [-]: MOVE      R1 R3        ; R1 := R3
126 [-]: SELF      R5 R1 K10    ; R6 := R1; R5 := R1[0x768274d6]
127 [-]: LOADBOOL  R7 1 0       ; R7 := true
128 [-]: LOADBOOL  R8 1 0       ; R8 := true
129 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
130 [-]: GETUPVAL  R5 U3        ; R5 := U3
131 [-]: LOADK     R6 3         ; R6 := 3.000000
132 [-]: CALL      R5 2 1       ; R5(R6)
133 [-]: JMP       178          ; PC := 178
134 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
135 [-]: MOVE      R6 R2        ; R6 := R2
136 [-]: CALL      R5 2 2       ; R5 := R5(R6)
137 [-]: TEST      R5 1         ; if R5 then PC := 178
138 [-]: JMP       178          ; PC := 178
139 [-]: MOVE      R1 R2        ; R1 := R2
140 [-]: SELF      R5 R1 K10    ; R6 := R1; R5 := R1[0x768274d6]
141 [-]: LOADBOOL  R7 1 0       ; R7 := true
142 [-]: LOADBOOL  R8 1 0       ; R8 := true
143 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
144 [-]: GETUPVAL  R5 U3        ; R5 := U3
145 [-]: LOADK     R6 0         ; R6 := 0.000000
146 [-]: CALL      R5 2 1       ; R5(R6)
147 [-]: JMP       178          ; PC := 178
148 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
149 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Item"]
150 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Type"]
151 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf2deaf69]
152 [-]: GETGLOBAL R7 K21       ; R7 := gPetPowerSuitType
153 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
154 [-]: TEST      R5 0         ; if not R5 then PC := 178
155 [-]: JMP       178          ; PC := 178
156 [-]: MOVE      R1 R2        ; R1 := R2
157 [-]: GETUPVAL  R5 U3        ; R5 := U3
158 [-]: LOADK     R6 1         ; R6 := 1.000000
159 [-]: CALL      R5 2 1       ; R5(R6)
160 [-]: JMP       178          ; PC := 178
161 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
162 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["Element"]
163 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["LoadOutType"]
164 [-]: EQ        0 R5 K22     ; if R5 ~= 6.000000 then PC := 176
165 [-]: JMP       176          ; PC := 176
166 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
167 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["Element"]
168 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["LoadOutId"]
169 [-]: GETUPVAL  R6 U4        ; R6 := U4
170 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["KDriveSlot"]
171 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 176
172 [-]: JMP       176          ; PC := 176
173 [-]: GETGLOBAL R5 K7        ; R5 := _T
174 [-]: GETTABLE  R1 R5 K24    ; R1 := R5["KDriveAvatar"]
175 [-]: JMP       178          ; PC := 178
176 [-]: GETGLOBAL R5 K7        ; R5 := _T
177 [-]: GETTABLE  R1 R5 K25    ; R1 := R5["MenuSuitAvatar"]
178 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
179 [-]: MOVE      R6 R1        ; R6 := R1
180 [-]: CALL      R5 2 2       ; R5 := R5(R6)
181 [-]: TEST      R5 0         ; if not R5 then PC := 194
182 [-]: JMP       194          ; PC := 194
183 [-]: GETUPVAL  R5 U1        ; R5 := U1
184 [-]: GETUPVAL  R6 U2        ; R6 := U2
185 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["UI_MODE_IN_SPACE_SHIP"]
186 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 193
187 [-]: JMP       193          ; PC := 193
188 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
189 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["Element"]
190 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["LoadOutType"]
191 [-]: EQ        1 R5 K9      ; if R5 == 1.000000 then PC := 194
192 [-]: JMP       194          ; PC := 194
193 [-]: RETURN    R0 1         ; return 
194 [-]: GETUPVAL  R5 U5        ; R5 := U5
195 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
196 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Element"]
197 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["LoadOutId"]
198 [-]: CALL      R5 2 2       ; R5 := R5(R6)
199 [-]: LOADNIL   R6 R6        ; R6 := nil
200 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
201 [-]: MOVE      R8 R1        ; R8 := R1
202 [-]: CALL      R7 2 2       ; R7 := R7(R8)
203 [-]: TEST      R7 1         ; if R7 then PC := 229
204 [-]: JMP       229          ; PC := 229
205 [-]: EQ        1 R5 K9      ; if R5 == 1.000000 then PC := 213
206 [-]: JMP       213          ; PC := 213
207 [-]: SELF      R7 R1 K27    ; R8 := R1; R7 := R1[0xde321e6f]
208 [-]: CALL      R7 2 2       ; R7 := R7(R8)
209 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7[0x35b09371]
210 [-]: LOADK     R9 1         ; R9 := 1.000000
211 [-]: LOADBOOL  R10 1 0      ; R10 := true
212 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
213 [-]: EQ        1 R5 K29     ; if R5 == 0.000000 then PC := 221
214 [-]: JMP       221          ; PC := 221
215 [-]: SELF      R7 R1 K27    ; R8 := R1; R7 := R1[0xde321e6f]
216 [-]: CALL      R7 2 2       ; R7 := R7(R8)
217 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7[0x35b09371]
218 [-]: LOADK     R9 0         ; R9 := 0.000000
219 [-]: LOADBOOL  R10 1 0      ; R10 := true
220 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
221 [-]: EQ        1 R5 K30     ; if R5 == 5.000000 then PC := 229
222 [-]: JMP       229          ; PC := 229
223 [-]: SELF      R7 R1 K27    ; R8 := R1; R7 := R1[0xde321e6f]
224 [-]: CALL      R7 2 2       ; R7 := R7(R8)
225 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7[0x35b09371]
226 [-]: LOADK     R9 5         ; R9 := 5.000000
227 [-]: LOADBOOL  R10 1 0      ; R10 := true
228 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
229 [-]: LOADNIL   R7 R7        ; R7 := nil
230 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
231 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["Item"]
232 [-]: GETTABLE  R8 R8 K31    ; R8 := R8["mPurchased"]
233 [-]: EQ        0 R8 K32     ; if R8 ~= true then PC := 531
234 [-]: JMP       531          ; PC := 531
235 [-]: LOADNIL   R8 R8        ; R8 := nil
236 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
237 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
238 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["LoadOutType"]
239 [-]: EQ        1 R9 K29     ; if R9 == 0.000000 then PC := 246
240 [-]: JMP       246          ; PC := 246
241 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
242 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
243 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["LoadOutType"]
244 [-]: EQ        0 R9 K33     ; if R9 ~= 3.000000 then PC := 296
245 [-]: JMP       296          ; PC := 296
246 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
247 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
248 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
249 [-]: EQ        0 R9 K29     ; if R9 ~= 0.000000 then PC := 256
250 [-]: JMP       256          ; PC := 256
251 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
252 [-]: SELF      R9 R9 K35    ; R10 := R9; R9 := R9[0x21a3da0c]
253 [-]: CALL      R9 2 2       ; R9 := R9(R10)
254 [-]: MOVE      R8 R9        ; R8 := R9
255 [-]: JMP       436          ; PC := 436
256 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
257 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
258 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
259 [-]: EQ        0 R9 K33     ; if R9 ~= 3.000000 then PC := 266
260 [-]: JMP       266          ; PC := 266
261 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
262 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9[0x0bf14f02]
263 [-]: CALL      R9 2 2       ; R9 := R9(R10)
264 [-]: MOVE      R8 R9        ; R8 := R9
265 [-]: JMP       436          ; PC := 436
266 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
267 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
268 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
269 [-]: EQ        0 R9 K17     ; if R9 ~= 2.000000 then PC := 276
270 [-]: JMP       276          ; PC := 276
271 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
272 [-]: SELF      R9 R9 K37    ; R10 := R9; R9 := R9[0x57d88957]
273 [-]: CALL      R9 2 2       ; R9 := R9(R10)
274 [-]: MOVE      R8 R9        ; R8 := R9
275 [-]: JMP       436          ; PC := 436
276 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
277 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
278 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
279 [-]: EQ        0 R9 K38     ; if R9 ~= 4.000000 then PC := 286
280 [-]: JMP       286          ; PC := 286
281 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
282 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9[0x6f7b67d7]
283 [-]: CALL      R9 2 2       ; R9 := R9(R10)
284 [-]: MOVE      R8 R9        ; R8 := R9
285 [-]: JMP       436          ; PC := 436
286 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
287 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
288 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
289 [-]: EQ        0 R9 K9      ; if R9 ~= 1.000000 then PC := 436
290 [-]: JMP       436          ; PC := 436
291 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
292 [-]: SELF      R9 R9 K40    ; R10 := R9; R9 := R9[0x215bf396]
293 [-]: CALL      R9 2 2       ; R9 := R9(R10)
294 [-]: MOVE      R8 R9        ; R8 := R9
295 [-]: JMP       436          ; PC := 436
296 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
297 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
298 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["LoadOutType"]
299 [-]: EQ        0 R9 K9      ; if R9 ~= 1.000000 then PC := 360
300 [-]: JMP       360          ; PC := 360
301 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
302 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
303 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
304 [-]: EQ        0 R9 K29     ; if R9 ~= 0.000000 then PC := 350
305 [-]: JMP       350          ; PC := 350
306 [-]: GETUPVAL  R9 U1        ; R9 := U1
307 [-]: GETUPVAL  R10 U2       ; R10 := U2
308 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["UI_MODE_IN_SPACE_SHIP"]
309 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 324
310 [-]: JMP       324          ; PC := 324
311 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
312 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["Item"]
313 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["Type"]
314 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0xf2deaf69]
315 [-]: GETGLOBAL R11 K21      ; R11 := gPetPowerSuitType
316 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
317 [-]: TEST      R9 0         ; if not R9 then PC := 324
318 [-]: JMP       324          ; PC := 324
319 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
320 [-]: SELF      R9 R9 K41    ; R10 := R9; R9 := R9[0xa855881a]
321 [-]: CALL      R9 2 2       ; R9 := R9(R10)
322 [-]: MOVE      R8 R9        ; R8 := R9
323 [-]: JMP       436          ; PC := 436
324 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
325 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["Item"]
326 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["Type"]
327 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0xf2deaf69]
328 [-]: GETGLOBAL R11 K14      ; R11 := 0x88980f4f
329 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
330 [-]: TEST      R9 1         ; if R9 then PC := 340
331 [-]: JMP       340          ; PC := 340
332 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
333 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["Item"]
334 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["Type"]
335 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0xf2deaf69]
336 [-]: GETGLOBAL R11 K15      ; R11 := 0xb506ff82
337 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
338 [-]: TEST      R9 0         ; if not R9 then PC := 345
339 [-]: JMP       345          ; PC := 345
340 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
341 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9[0x91a3eddf]
342 [-]: CALL      R9 2 2       ; R9 := R9(R10)
343 [-]: MOVE      R8 R9        ; R8 := R9
344 [-]: JMP       436          ; PC := 436
345 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
346 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x2a207127]
347 [-]: CALL      R9 2 2       ; R9 := R9(R10)
348 [-]: MOVE      R8 R9        ; R8 := R9
349 [-]: JMP       436          ; PC := 436
350 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
351 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
352 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
353 [-]: EQ        0 R9 K17     ; if R9 ~= 2.000000 then PC := 436
354 [-]: JMP       436          ; PC := 436
355 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
356 [-]: SELF      R9 R9 K44    ; R10 := R9; R9 := R9[0xa2c6d8b7]
357 [-]: CALL      R9 2 2       ; R9 := R9(R10)
358 [-]: MOVE      R8 R9        ; R8 := R9
359 [-]: JMP       436          ; PC := 436
360 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
361 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
362 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["LoadOutType"]
363 [-]: EQ        0 R9 K17     ; if R9 ~= 2.000000 then PC := 395
364 [-]: JMP       395          ; PC := 395
365 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
366 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
367 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
368 [-]: EQ        0 R9 K29     ; if R9 ~= 0.000000 then PC := 375
369 [-]: JMP       375          ; PC := 375
370 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
371 [-]: SELF      R9 R9 K45    ; R10 := R9; R9 := R9[0x4bb8609a]
372 [-]: CALL      R9 2 2       ; R9 := R9(R10)
373 [-]: MOVE      R8 R9        ; R8 := R9
374 [-]: JMP       436          ; PC := 436
375 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
376 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
377 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
378 [-]: EQ        0 R9 K33     ; if R9 ~= 3.000000 then PC := 385
379 [-]: JMP       385          ; PC := 385
380 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
381 [-]: SELF      R9 R9 K46    ; R10 := R9; R9 := R9[0x3218c3b0]
382 [-]: CALL      R9 2 2       ; R9 := R9(R10)
383 [-]: MOVE      R8 R9        ; R8 := R9
384 [-]: JMP       436          ; PC := 436
385 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
386 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
387 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
388 [-]: EQ        0 R9 K17     ; if R9 ~= 2.000000 then PC := 436
389 [-]: JMP       436          ; PC := 436
390 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
391 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9[0x6f7b67d7]
392 [-]: CALL      R9 2 2       ; R9 := R9(R10)
393 [-]: MOVE      R8 R9        ; R8 := R9
394 [-]: JMP       436          ; PC := 436
395 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
396 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
397 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["LoadOutType"]
398 [-]: EQ        0 R9 K22     ; if R9 ~= 6.000000 then PC := 412
399 [-]: JMP       412          ; PC := 412
400 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
401 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
402 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
403 [-]: GETUPVAL  R10 U4       ; R10 := U4
404 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["KDriveSlot"]
405 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 436
406 [-]: JMP       436          ; PC := 436
407 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
408 [-]: SELF      R9 R9 K47    ; R10 := R9; R9 := R9[0x738deb95]
409 [-]: CALL      R9 2 2       ; R9 := R9(R10)
410 [-]: MOVE      R8 R9        ; R8 := R9
411 [-]: JMP       436          ; PC := 436
412 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
413 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
414 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["LoadOutType"]
415 [-]: EQ        0 R9 K6      ; if R9 ~= 8.000000 then PC := 436
416 [-]: JMP       436          ; PC := 436
417 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
418 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
419 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
420 [-]: EQ        0 R9 K29     ; if R9 ~= 0.000000 then PC := 427
421 [-]: JMP       427          ; PC := 427
422 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
423 [-]: SELF      R9 R9 K48    ; R10 := R9; R9 := R9[0xfab085e3]
424 [-]: CALL      R9 2 2       ; R9 := R9(R10)
425 [-]: MOVE      R8 R9        ; R8 := R9
426 [-]: JMP       436          ; PC := 436
427 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
428 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
429 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["LoadOutId"]
430 [-]: EQ        0 R9 K38     ; if R9 ~= 4.000000 then PC := 436
431 [-]: JMP       436          ; PC := 436
432 [-]: GETGLOBAL R9 K34       ; R9 := mInventory
433 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9[0x6f7b67d7]
434 [-]: CALL      R9 2 2       ; R9 := R9(R10)
435 [-]: MOVE      R8 R9        ; R8 := R9
436 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
437 [-]: MOVE      R10 R8       ; R10 := R8
438 [-]: CALL      R9 2 2       ; R9 := R9(R10)
439 [-]: TEST      R9 0         ; if not R9 then PC := 442
440 [-]: JMP       442          ; PC := 442
441 [-]: RETURN    R0 1         ; return 
442 [-]: GETGLOBAL R9 K49       ; R9 := 0xc8802016
443 [-]: MOVE      R10 R8       ; R10 := R8
444 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
445 [-]: JMP       529          ; PC := 529
446 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
447 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
448 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["Item"]
449 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["mStoreItem"]
450 [-]: CALL      R14 2 2      ; R14 := R14(R15)
451 [-]: TEST      R14 1        ; if R14 then PC := 529
452 [-]: JMP       529          ; PC := 529
453 [-]: GETTABLE  R14 R13 K51  ; R14 := R13["mItemType"]
454 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
455 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["Item"]
456 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["mStoreItem"]
457 [-]: SELF      R15 R15 K52  ; R16 := R15; R15 := R15[0xf278f8a1]
458 [-]: CALL      R15 2 2      ; R15 := R15(R16)
459 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 529
460 [-]: JMP       529          ; PC := 529
461 [-]: GETTABLE  R14 R13 K53  ; R14 := R13["mItemId"]
462 [-]: GETTABLE  R14 R14 K54  ; R14 := R14["mId"]
463 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
464 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["Item"]
465 [-]: GETTABLE  R15 R15 K55  ; R15 := R15["mPurchasedInfo"]
466 [-]: GETTABLE  R15 R15 K56  ; R15 := R15["UID"]
467 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 529
468 [-]: JMP       529          ; PC := 529
469 [-]: LOADK     R14 0        ; R14 := 0.000000
470 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
471 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["Element"]
472 [-]: GETTABLE  R15 R15 K56  ; R15 := R15["UID"]
473 [-]: GETGLOBAL R16 K2       ; R16 := mSelected
474 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["Item"]
475 [-]: GETTABLE  R16 R16 K55  ; R16 := R16["mPurchasedInfo"]
476 [-]: GETTABLE  R16 R16 K56  ; R16 := R16["UID"]
477 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 482
478 [-]: JMP       482          ; PC := 482
479 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
480 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["Element"]
481 [-]: GETTABLE  R14 R15 K57  ; R14 := R15["mCustSlot"]
482 [-]: SELF      R15 R13 K58  ; R16 := R13; R15 := R13[0x68d708a7]
483 [-]: MOVE      R17 R14      ; R17 := R14
484 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
485 [-]: MOVE      R7 R15       ; R7 := R15
486 [-]: GETGLOBAL R15 K34      ; R15 := mInventory
487 [-]: SELF      R15 R15 K59  ; R16 := R15; R15 := R15[0xe9131614]
488 [-]: CALL      R15 2 2      ; R15 := R15(R16)
489 [-]: LOADK     R16 0        ; R16 := 0.000000
490 [-]: LOADK     R17 20       ; R17 := 20.000000
491 [-]: LOADK     R18 1        ; R18 := 1.000000
492 [-]: FORPREP   R16 527      ; R16 -= R18; PC := 527
493 [-]: SELF      R20 R7 K60   ; R21 := R7; R20 := R7[0x5ef3783b]
494 [-]: MOVE      R22 R19      ; R22 := R19
495 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
496 [-]: GETGLOBAL R21 K0       ; R21 := 0x7b998233
497 [-]: MOVE      R22 R20      ; R22 := R20
498 [-]: CALL      R21 2 2      ; R21 := R21(R22)
499 [-]: TEST      R21 1        ; if R21 then PC := 527
500 [-]: JMP       527          ; PC := 527
501 [-]: GETTABLE  R21 R20 K53  ; R21 := R20["mItemId"]
502 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["mId"]
503 [-]: EQ        1 R21 K61    ; if R21 == "" then PC := 527
504 [-]: JMP       527          ; PC := 527
505 [-]: GETGLOBAL R21 K0       ; R21 := 0x7b998233
506 [-]: GETTABLE  R22 R20 K51  ; R22 := R20["mItemType"]
507 [-]: CALL      R21 2 2      ; R21 := R21(R22)
508 [-]: TEST      R21 0        ; if not R21 then PC := 527
509 [-]: JMP       527          ; PC := 527
510 [-]: LOADK     R21 1        ; R21 := 1.000000
511 [-]: LEN       R22 R15      ; R22 := # R15
512 [-]: LOADK     R23 1        ; R23 := 1.000000
513 [-]: FORPREP   R21 526      ; R21 -= R23; PC := 526
514 [-]: GETTABLE  R25 R15 R24  ; R25 := R15[R24]
515 [-]: GETTABLE  R25 R25 K53  ; R25 := R25["mItemId"]
516 [-]: GETTABLE  R25 R25 K54  ; R25 := R25["mId"]
517 [-]: GETTABLE  R26 R20 K53  ; R26 := R20["mItemId"]
518 [-]: GETTABLE  R26 R26 K54  ; R26 := R26["mId"]
519 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 526
520 [-]: JMP       526          ; PC := 526
521 [-]: SELF      R25 R7 K62   ; R26 := R7; R25 := R7[0x569554e7]
522 [-]: GETTABLE  R27 R15 R24  ; R27 := R15[R24]
523 [-]: MOVE      R28 R19      ; R28 := R19
524 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
525 [-]: JMP       527          ; PC := 527
526 [-]: FORLOOP   R21 514      ; R21 += R23; if R21 <= R22 then begin PC := 514; R24 := R21 end
527 [-]: FORLOOP   R16 493      ; R16 += R18; if R16 <= R17 then begin PC := 493; R19 := R16 end
528 [-]: JMP       531          ; PC := 531
529 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 446; R11 := R12 end
530 [-]: JMP       446          ; PC := 446
531 [-]: GETGLOBAL R25 K63      ; R25 := 0xb009bbc6
532 [-]: GETGLOBAL R26 K2       ; R26 := mSelected
533 [-]: GETTABLE  R26 R26 K11  ; R26 := R26["Item"]
534 [-]: GETTABLE  R26 R26 K12  ; R26 := R26["Type"]
535 [-]: CALL      R25 2 2      ; R25 := R25(R26)
536 [-]: MOVE      R6 R25       ; R6 := R25
537 [-]: GETGLOBAL R25 K0       ; R25 := 0x7b998233
538 [-]: MOVE      R26 R6       ; R26 := R6
539 [-]: CALL      R25 2 2      ; R25 := R25(R26)
540 [-]: TEST      R25 0        ; if not R25 then PC := 554
541 [-]: JMP       554          ; PC := 554
542 [-]: GETGLOBAL R25 K0       ; R25 := 0x7b998233
543 [-]: MOVE      R26 R1       ; R26 := R1
544 [-]: CALL      R25 2 2      ; R25 := R25(R26)
545 [-]: TEST      R25 1        ; if R25 then PC := 553
546 [-]: JMP       553          ; PC := 553
547 [-]: SELF      R25 R1 K27   ; R26 := R1; R25 := R1[0xde321e6f]
548 [-]: CALL      R25 2 2      ; R25 := R25(R26)
549 [-]: SELF      R25 R25 K28  ; R26 := R25; R25 := R25[0x35b09371]
550 [-]: MOVE      R27 R5       ; R27 := R5
551 [-]: LOADBOOL  R28 1 0      ; R28 := true
552 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
553 [-]: RETURN    R0 1         ; return 
554 [-]: GETGLOBAL R25 K2       ; R25 := mSelected
555 [-]: GETTABLE  R25 R25 K3   ; R25 := R25["Element"]
556 [-]: GETTABLE  R25 R25 K16  ; R25 := R25["LoadOutId"]
557 [-]: EQ        0 R25 K29    ; if R25 ~= 0.000000 then PC := 798
558 [-]: JMP       798          ; PC := 798
559 [-]: GETGLOBAL R25 K2       ; R25 := mSelected
560 [-]: GETTABLE  R25 R25 K3   ; R25 := R25["Element"]
561 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["LoadOutType"]
562 [-]: EQ        0 R25 K9     ; if R25 ~= 1.000000 then PC := 798
563 [-]: JMP       798          ; PC := 798
564 [-]: GETGLOBAL R25 K0       ; R25 := 0x7b998233
565 [-]: GETGLOBAL R26 K2       ; R26 := mSelected
566 [-]: GETTABLE  R26 R26 K11  ; R26 := R26["Item"]
567 [-]: GETTABLE  R26 R26 K55  ; R26 := R26["mPurchasedInfo"]
568 [-]: CALL      R25 2 2      ; R25 := R25(R26)
569 [-]: TEST      R25 1        ; if R25 then PC := 798
570 [-]: JMP       798          ; PC := 798
571 [-]: GETGLOBAL R25 K64      ; R25 := mCurrentLoadout
572 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
573 [-]: GETGLOBAL R27 K2       ; R27 := mSelected
574 [-]: GETTABLE  R27 R27 K3   ; R27 := R27["Element"]
575 [-]: CALL      R26 2 2      ; R26 := R26(R27)
576 [-]: TEST      R26 1        ; if R26 then PC := 1110
577 [-]: JMP       1110         ; PC := 1110
578 [-]: GETGLOBAL R26 K2       ; R26 := mSelected
579 [-]: GETTABLE  R26 R26 K3   ; R26 := R26["Element"]
580 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["LoadOutType"]
581 [-]: GETTABLE  R26 R25 R26  ; R26 := R25[R26]
582 [-]: SELF      R26 R26 K65  ; R27 := R26; R26 := R26[0x2abbe722]
583 [-]: GETGLOBAL R28 K2       ; R28 := mSelected
584 [-]: GETTABLE  R28 R28 K3   ; R28 := R28["Element"]
585 [-]: GETTABLE  R28 R28 K16  ; R28 := R28["LoadOutId"]
586 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
587 [-]: GETTABLE  R27 R26 K53  ; R27 := R26["mItemId"]
588 [-]: GETGLOBAL R28 K2       ; R28 := mSelected
589 [-]: GETTABLE  R28 R28 K11  ; R28 := R28["Item"]
590 [-]: GETTABLE  R28 R28 K55  ; R28 := R28["mPurchasedInfo"]
591 [-]: GETTABLE  R28 R28 K56  ; R28 := R28["UID"]
592 [-]: SETTABLE  R27 K54 R28  ; R27["mId"] := R28
593 [-]: SETTABLE  R26 K57 K29  ; R26["mCustSlot"] := 0.000000
594 [-]: GETGLOBAL R27 K2       ; R27 := mSelected
595 [-]: GETTABLE  R27 R27 K3   ; R27 := R27["Element"]
596 [-]: GETTABLE  R27 R27 K4   ; R27 := R27["LoadOutType"]
597 [-]: GETTABLE  R27 R25 R27  ; R27 := R25[R27]
598 [-]: SELF      R27 R27 K66  ; R28 := R27; R27 := R27[0xffca321e]
599 [-]: GETGLOBAL R29 K2       ; R29 := mSelected
600 [-]: GETTABLE  R29 R29 K3   ; R29 := R29["Element"]
601 [-]: GETTABLE  R29 R29 K16  ; R29 := R29["LoadOutId"]
602 [-]: MOVE      R30 R26      ; R30 := R26
603 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
604 [-]: GETGLOBAL R27 K1       ; R27 := 0x25d99d89
605 [-]: SELF      R27 R27 K67  ; R28 := R27; R27 := R27[0x400b84a1]
606 [-]: GETGLOBAL R29 K2       ; R29 := mSelected
607 [-]: GETTABLE  R29 R29 K3   ; R29 := R29["Element"]
608 [-]: GETTABLE  R29 R29 K4   ; R29 := R29["LoadOutType"]
609 [-]: GETGLOBAL R30 K2       ; R30 := mSelected
610 [-]: GETTABLE  R30 R30 K3   ; R30 := R30["Element"]
611 [-]: GETTABLE  R30 R30 K4   ; R30 := R30["LoadOutType"]
612 [-]: GETTABLE  R30 R25 R30  ; R30 := R25[R30]
613 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
614 [-]: GETGLOBAL R27 K2       ; R27 := mSelected
615 [-]: GETTABLE  R27 R27 K11  ; R27 := R27["Item"]
616 [-]: GETTABLE  R27 R27 K12  ; R27 := R27["Type"]
617 [-]: SELF      R27 R27 K13  ; R28 := R27; R27 := R27[0xf2deaf69]
618 [-]: GETGLOBAL R29 K21      ; R29 := gPetPowerSuitType
619 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
620 [-]: GETGLOBAL R28 K2       ; R28 := mSelected
621 [-]: GETTABLE  R28 R28 K11  ; R28 := R28["Item"]
622 [-]: GETTABLE  R28 R28 K12  ; R28 := R28["Type"]
623 [-]: SELF      R28 R28 K13  ; R29 := R28; R28 := R28[0xf2deaf69]
624 [-]: GETGLOBAL R30 K68      ; R30 := 0x70b83a36
625 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
626 [-]: GETUPVAL  R29 U1       ; R29 := U1
627 [-]: GETUPVAL  R30 U2       ; R30 := U2
628 [-]: GETTABLE  R30 R30 K20  ; R30 := R30["UI_MODE_IN_SPACE_SHIP"]
629 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 684
630 [-]: JMP       684          ; PC := 684
631 [-]: TEST      R27 0        ; if not R27 then PC := 658
632 [-]: JMP       658          ; PC := 658
633 [-]: GETGLOBAL R29 K34      ; R29 := mInventory
634 [-]: SELF      R29 R29 K41  ; R30 := R29; R29 := R29[0xa855881a]
635 [-]: CALL      R29 2 2      ; R29 := R29(R30)
636 [-]: LOADK     R30 1        ; R30 := 1.000000
637 [-]: LEN       R31 R29      ; R31 := # R29
638 [-]: LOADK     R32 1        ; R32 := 1.000000
639 [-]: FORPREP   R30 656      ; R30 -= R32; PC := 656
640 [-]: GETGLOBAL R34 K2       ; R34 := mSelected
641 [-]: GETTABLE  R34 R34 K11  ; R34 := R34["Item"]
642 [-]: GETTABLE  R34 R34 K55  ; R34 := R34["mPurchasedInfo"]
643 [-]: GETTABLE  R34 R34 K56  ; R34 := R34["UID"]
644 [-]: GETTABLE  R35 R29 R33  ; R35 := R29[R33]
645 [-]: GETTABLE  R35 R35 K53  ; R35 := R35["mItemId"]
646 [-]: GETTABLE  R35 R35 K54  ; R35 := R35["mId"]
647 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 656
648 [-]: JMP       656          ; PC := 656
649 [-]: GETUPVAL  R34 U6       ; R34 := U6
650 [-]: GETTABLE  R35 R29 R33  ; R35 := R29[R33]
651 [-]: GETGLOBAL R36 K2       ; R36 := mSelected
652 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["Item"]
653 [-]: GETTABLE  R36 R36 K12  ; R36 := R36["Type"]
654 [-]: CALL      R34 3 1      ; R34(R35,R36)
655 [-]: JMP       684          ; PC := 684
656 [-]: FORLOOP   R30 640      ; R30 += R32; if R30 <= R31 then begin PC := 640; R33 := R30 end
657 [-]: JMP       684          ; PC := 684
658 [-]: TEST      R28 0        ; if not R28 then PC := 684
659 [-]: JMP       684          ; PC := 684
660 [-]: GETGLOBAL R34 K34      ; R34 := mInventory
661 [-]: SELF      R34 R34 K42  ; R35 := R34; R34 := R34[0x91a3eddf]
662 [-]: CALL      R34 2 2      ; R34 := R34(R35)
663 [-]: LOADK     R35 1        ; R35 := 1.000000
664 [-]: LEN       R36 R34      ; R36 := # R34
665 [-]: LOADK     R37 1        ; R37 := 1.000000
666 [-]: FORPREP   R35 683      ; R35 -= R37; PC := 683
667 [-]: GETGLOBAL R39 K2       ; R39 := mSelected
668 [-]: GETTABLE  R39 R39 K11  ; R39 := R39["Item"]
669 [-]: GETTABLE  R39 R39 K55  ; R39 := R39["mPurchasedInfo"]
670 [-]: GETTABLE  R39 R39 K56  ; R39 := R39["UID"]
671 [-]: GETTABLE  R40 R34 R38  ; R40 := R34[R38]
672 [-]: GETTABLE  R40 R40 K53  ; R40 := R40["mItemId"]
673 [-]: GETTABLE  R40 R40 K54  ; R40 := R40["mId"]
674 [-]: EQ        0 R39 R40    ; if R39 ~= R40 then PC := 683
675 [-]: JMP       683          ; PC := 683
676 [-]: GETUPVAL  R39 U7       ; R39 := U7
677 [-]: GETTABLE  R40 R34 R38  ; R40 := R34[R38]
678 [-]: GETGLOBAL R41 K2       ; R41 := mSelected
679 [-]: GETTABLE  R41 R41 K11  ; R41 := R41["Item"]
680 [-]: GETTABLE  R41 R41 K12  ; R41 := R41["Type"]
681 [-]: CALL      R39 3 1      ; R39(R40,R41)
682 [-]: JMP       684          ; PC := 684
683 [-]: FORLOOP   R35 667      ; R35 += R37; if R35 <= R36 then begin PC := 667; R38 := R35 end
684 [-]: GETUPVAL  R39 U8       ; R39 := U8
685 [-]: LOADBOOL  R40 0 0      ; R40 := false
686 [-]: CALL      R39 2 1      ; R39(R40)
687 [-]: TEST      R27 0        ; if not R27 then PC := 712
688 [-]: JMP       712          ; PC := 712
689 [-]: LOADNIL   R39 R39      ; R39 := nil
690 [-]: GETUPVAL  R40 U1       ; R40 := U1
691 [-]: GETUPVAL  R41 U2       ; R41 := U2
692 [-]: GETTABLE  R41 R41 K20  ; R41 := R41["UI_MODE_IN_SPACE_SHIP"]
693 [-]: EQ        0 R40 R41    ; if R40 ~= R41 then PC := 701
694 [-]: JMP       701          ; PC := 701
695 [-]: GETGLOBAL R40 K69      ; R40 := 0xbe190284
696 [-]: SELF      R40 R40 K70  ; R41 := R40; R40 := R40[0x7cf8123f]
697 [-]: LOADK     R42 1        ; R42 := 1.000000
698 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
699 [-]: MOVE      R39 R40      ; R39 := R40
700 [-]: JMP       708          ; PC := 708
701 [-]: GETGLOBAL R40 K7       ; R40 := _T
702 [-]: GETTABLE  R40 R40 K25  ; R40 := R40["MenuSuitAvatar"]
703 [-]: SELF      R40 R40 K27  ; R41 := R40; R40 := R40[0xde321e6f]
704 [-]: CALL      R40 2 2      ; R40 := R40(R41)
705 [-]: SELF      R40 R40 K71  ; R41 := R40; R40 := R40[0x2676deee]
706 [-]: CALL      R40 2 2      ; R40 := R40(R41)
707 [-]: MOVE      R39 R40      ; R39 := R40
708 [-]: GETUPVAL  R40 U9       ; R40 := U9
709 [-]: GETTABLE  R40 R40 K72  ; R40 := R40[0x705e38df]
710 [-]: MOVE      R41 R39      ; R41 := R39
711 [-]: CALL      R40 2 1      ; R40(R41)
712 [-]: GETGLOBAL R40 K7       ; R40 := _T
713 [-]: SETTABLE  R40 K73 K32  ; R40["mSentinelMode"] := true
714 [-]: GETGLOBAL R40 K0       ; R40 := 0x7b998233
715 [-]: GETGLOBAL R41 K1       ; R41 := 0x25d99d89
716 [-]: CALL      R40 2 2      ; R40 := R40(R41)
717 [-]: TEST      R40 1        ; if R40 then PC := 770
718 [-]: JMP       770          ; PC := 770
719 [-]: GETGLOBAL R40 K1       ; R40 := 0x25d99d89
720 [-]: SELF      R40 R40 K74  ; R41 := R40; R40 := R40[0x3c6b0324]
721 [-]: CALL      R40 2 2      ; R40 := R40(R41)
722 [-]: TEST      R40 1        ; if R40 then PC := 732
723 [-]: JMP       732          ; PC := 732
724 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
725 [-]: GETTABLE  R40 R40 K11  ; R40 := R40["Item"]
726 [-]: GETTABLE  R40 R40 K12  ; R40 := R40["Type"]
727 [-]: SELF      R40 R40 K13  ; R41 := R40; R40 := R40[0xf2deaf69]
728 [-]: GETGLOBAL R42 K21      ; R42 := gPetPowerSuitType
729 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
730 [-]: TEST      R40 0        ; if not R40 then PC := 736
731 [-]: JMP       736          ; PC := 736
732 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
733 [-]: GETTABLE  R40 R40 K11  ; R40 := R40["Item"]
734 [-]: SETTABLE  R40 K75 K9   ; R40["mPetType"] := 1.000000
735 [-]: JMP       768          ; PC := 768
736 [-]: GETGLOBAL R40 K1       ; R40 := 0x25d99d89
737 [-]: SELF      R40 R40 K76  ; R41 := R40; R40 := R40[0x9f91f49d]
738 [-]: CALL      R40 2 2      ; R40 := R40(R41)
739 [-]: TEST      R40 1        ; if R40 then PC := 749
740 [-]: JMP       749          ; PC := 749
741 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
742 [-]: GETTABLE  R40 R40 K11  ; R40 := R40["Item"]
743 [-]: GETTABLE  R40 R40 K12  ; R40 := R40["Type"]
744 [-]: SELF      R40 R40 K13  ; R41 := R40; R40 := R40[0xf2deaf69]
745 [-]: GETGLOBAL R42 K68      ; R42 := 0x70b83a36
746 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
747 [-]: TEST      R40 0        ; if not R40 then PC := 765
748 [-]: JMP       765          ; PC := 765
749 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
750 [-]: GETTABLE  R40 R40 K11  ; R40 := R40["Item"]
751 [-]: GETTABLE  R40 R40 K12  ; R40 := R40["Type"]
752 [-]: SELF      R40 R40 K13  ; R41 := R40; R40 := R40[0xf2deaf69]
753 [-]: GETGLOBAL R42 K14      ; R42 := 0x88980f4f
754 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
755 [-]: TEST      R40 0        ; if not R40 then PC := 761
756 [-]: JMP       761          ; PC := 761
757 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
758 [-]: GETTABLE  R40 R40 K11  ; R40 := R40["Item"]
759 [-]: SETTABLE  R40 K75 K33  ; R40["mPetType"] := 3.000000
760 [-]: JMP       768          ; PC := 768
761 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
762 [-]: GETTABLE  R40 R40 K11  ; R40 := R40["Item"]
763 [-]: SETTABLE  R40 K75 K38  ; R40["mPetType"] := 4.000000
764 [-]: JMP       768          ; PC := 768
765 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
766 [-]: GETTABLE  R40 R40 K11  ; R40 := R40["Item"]
767 [-]: SETTABLE  R40 K75 K29  ; R40["mPetType"] := 0.000000
768 [-]: LOADK     R40 1        ; R40 := 1.500000
769 [-]: SETUPVAL  R40 U10      ; U82 := R10
770 [-]: GETTABLE  R40 R26 K53  ; R40 := R26["mItemId"]
771 [-]: GETGLOBAL R41 K2       ; R41 := mSelected
772 [-]: GETTABLE  R41 R41 K3   ; R41 := R41["Element"]
773 [-]: GETTABLE  R41 R41 K56  ; R41 := R41["UID"]
774 [-]: SETTABLE  R40 K54 R41  ; R40["mId"] := R41
775 [-]: GETGLOBAL R40 K64      ; R40 := mCurrentLoadout
776 [-]: GETGLOBAL R41 K2       ; R41 := mSelected
777 [-]: GETTABLE  R41 R41 K3   ; R41 := R41["Element"]
778 [-]: GETTABLE  R41 R41 K4   ; R41 := R41["LoadOutType"]
779 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
780 [-]: SELF      R40 R40 K66  ; R41 := R40; R40 := R40[0xffca321e]
781 [-]: GETGLOBAL R42 K2       ; R42 := mSelected
782 [-]: GETTABLE  R42 R42 K3   ; R42 := R42["Element"]
783 [-]: GETTABLE  R42 R42 K16  ; R42 := R42["LoadOutId"]
784 [-]: MOVE      R43 R26      ; R43 := R26
785 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
786 [-]: GETGLOBAL R40 K1       ; R40 := 0x25d99d89
787 [-]: SELF      R40 R40 K67  ; R41 := R40; R40 := R40[0x400b84a1]
788 [-]: GETGLOBAL R42 K2       ; R42 := mSelected
789 [-]: GETTABLE  R42 R42 K3   ; R42 := R42["Element"]
790 [-]: GETTABLE  R42 R42 K4   ; R42 := R42["LoadOutType"]
791 [-]: GETGLOBAL R43 K64      ; R43 := mCurrentLoadout
792 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
793 [-]: GETTABLE  R44 R44 K3   ; R44 := R44["Element"]
794 [-]: GETTABLE  R44 R44 K4   ; R44 := R44["LoadOutType"]
795 [-]: GETTABLE  R43 R43 R44  ; R43 := R43[R44]
796 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
797 [-]: JMP       1110         ; PC := 1110
798 [-]: GETUPVAL  R40 U1       ; R40 := U1
799 [-]: GETUPVAL  R41 U2       ; R41 := U2
800 [-]: GETTABLE  R41 R41 K20  ; R41 := R41["UI_MODE_IN_SPACE_SHIP"]
801 [-]: EQ        1 R40 R41    ; if R40 == R41 then PC := 904
802 [-]: JMP       904          ; PC := 904
803 [-]: GETGLOBAL R40 K2       ; R40 := mSelected
804 [-]: GETTABLE  R40 R40 K3   ; R40 := R40["Element"]
805 [-]: GETTABLE  R40 R40 K4   ; R40 := R40["LoadOutType"]
806 [-]: EQ        0 R40 K9     ; if R40 ~= 1.000000 then PC := 904
807 [-]: JMP       904          ; PC := 904
808 [-]: GETUPVAL  R40 U11      ; R40 := U11
809 [-]: GETTABLE  R40 R40 K77  ; R40 := R40[0x06d055f9]
810 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
811 [-]: GETGLOBAL R42 K7       ; R42 := _T
812 [-]: GETTABLE  R42 R42 K25  ; R42 := R42["MenuSuitAvatar"]
813 [-]: CALL      R41 2 2      ; R41 := R41(R42)
814 [-]: LOADNIL   R42 R42      ; R42 := nil
815 [-]: GETGLOBAL R43 K7       ; R43 := _T
816 [-]: GETTABLE  R43 R43 K25  ; R43 := R43["MenuSuitAvatar"]
817 [-]: SELF      R43 R43 K27  ; R44 := R43; R43 := R43[0xde321e6f]
818 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
819 [-]: CALL      R40 0 2      ; R40 := R40(R41,...)
820 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
821 [-]: GETGLOBAL R42 K7       ; R42 := _T
822 [-]: GETTABLE  R42 R42 K25  ; R42 := R42["MenuSuitAvatar"]
823 [-]: CALL      R41 2 2      ; R41 := R41(R42)
824 [-]: TEST      R41 1        ; if R41 then PC := 837
825 [-]: JMP       837          ; PC := 837
826 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
827 [-]: MOVE      R42 R40      ; R42 := R40
828 [-]: CALL      R41 2 2      ; R41 := R41(R42)
829 [-]: TEST      R41 1        ; if R41 then PC := 837
830 [-]: JMP       837          ; PC := 837
831 [-]: SELF      R41 R40 K78  ; R42 := R40; R41 := R40[0x62259cca]
832 [-]: CALL      R41 2 1      ; R41(R42)
833 [-]: GETUPVAL  R41 U0       ; R41 := U0
834 [-]: LOADK     R42 0        ; R42 := 0.000000
835 [-]: CALL      R41 2 2      ; R41 := R41(R42)
836 [-]: MOVE      R1 R41       ; R1 := R41
837 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
838 [-]: MOVE      R42 R1       ; R42 := R1
839 [-]: CALL      R41 2 2      ; R41 := R41(R42)
840 [-]: TEST      R41 0        ; if not R41 then PC := 843
841 [-]: JMP       843          ; PC := 843
842 [-]: RETURN    R0 1         ; return 
843 [-]: GETGLOBAL R41 K7       ; R41 := _T
844 [-]: SETTABLE  R41 K79 R1   ; R41["MenuSentinel"] := R1
845 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
846 [-]: SELF      R42 R1 K80   ; R43 := R1; R42 := R1[0x020d4331]
847 [-]: CALL      R42 2 0      ; R42,... := R42(R43)
848 [-]: CALL      R41 0 2      ; R41 := R41(R42,...)
849 [-]: TEST      R41 1        ; if R41 then PC := 904
850 [-]: JMP       904          ; PC := 904
851 [-]: GETGLOBAL R41 K7       ; R41 := _T
852 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["InSimulacrum"]
853 [-]: TEST      R41 0        ; if not R41 then PC := 904
854 [-]: JMP       904          ; PC := 904
855 [-]: LOADNIL   R41 R41      ; R41 := nil
856 [-]: GETGLOBAL R42 K0       ; R42 := 0x7b998233
857 [-]: GETGLOBAL R43 K82      ; R43 := mArsenalConsole
858 [-]: CALL      R42 2 2      ; R42 := R42(R43)
859 [-]: TEST      R42 1        ; if R42 then PC := 871
860 [-]: JMP       871          ; PC := 871
861 [-]: GETGLOBAL R42 K83      ; R42 := 0x89326c93
862 [-]: SELF      R42 R42 K84  ; R43 := R42; R42 := R42[0xc7b81e8d]
863 [-]: GETGLOBAL R44 K85      ; R44 := 0x0469f296
864 [-]: LOADK     R45 K86      ; R45 := "CompanionArsenalSpot"
865 [-]: CALL      R44 2 2      ; R44 := R44(R45)
866 [-]: GETGLOBAL R45 K82      ; R45 := mArsenalConsole
867 [-]: SELF      R45 R45 K87  ; R46 := R45; R45 := R45[0xd1586535]
868 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
869 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
870 [-]: MOVE      R41 R42      ; R41 := R42
871 [-]: GETGLOBAL R42 K0       ; R42 := 0x7b998233
872 [-]: MOVE      R43 R41      ; R43 := R41
873 [-]: CALL      R42 2 2      ; R42 := R42(R43)
874 [-]: TEST      R42 1        ; if R42 then PC := 904
875 [-]: JMP       904          ; PC := 904
876 [-]: SELF      R42 R41 K87  ; R43 := R41; R42 := R41[0xd1586535]
877 [-]: CALL      R42 2 2      ; R42 := R42(R43)
878 [-]: GETGLOBAL R43 K88      ; R43 := 0xa421af95
879 [-]: LOADK     R44 0        ; R44 := 0.000000
880 [-]: LOADK     R45 1        ; R45 := 1.500000
881 [-]: LOADK     R46 0        ; R46 := 0.000000
882 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
883 [-]: ADD       R42 R42 R43  ; R42 := R42 + R43
884 [-]: GETGLOBAL R43 K0       ; R43 := 0x7b998233
885 [-]: GETGLOBAL R44 K7       ; R44 := _T
886 [-]: GETTABLE  R44 R44 K89  ; R44 := R44["suitTable"]
887 [-]: CALL      R43 2 2      ; R43 := R43(R44)
888 [-]: TEST      R43 1        ; if R43 then PC := 899
889 [-]: JMP       899          ; PC := 899
890 [-]: GETGLOBAL R43 K7       ; R43 := _T
891 [-]: GETTABLE  R43 R43 K89  ; R43 := R43["suitTable"]
892 [-]: SETTABLE  R43 K90 K91  ; R43["queuedTeleport"] := 0.050000
893 [-]: GETGLOBAL R43 K7       ; R43 := _T
894 [-]: GETTABLE  R43 R43 K89  ; R43 := R43["suitTable"]
895 [-]: GETTABLE  R43 R43 K92  ; R43 := R43["positions"]
896 [-]: SELF      R44 R1 K93   ; R45 := R1; R44 := R1[0x388577d5]
897 [-]: CALL      R44 2 2      ; R44 := R44(R45)
898 [-]: SETTABLE  R43 R44 R42  ; R43[R44] := R42
899 [-]: SELF      R43 R1 K94   ; R44 := R1; R43 := R1[0x589ef1c1]
900 [-]: MOVE      R45 R42      ; R45 := R42
901 [-]: SELF      R46 R41 K95  ; R47 := R41; R46 := R41[0xcb3851b8]
902 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
903 [-]: CALL      R43 0 1      ; R43(R44,...)
904 [-]: LOADBOOL  R43 0 0      ; R43 := false
905 [-]: GETGLOBAL R44 K96      ; R44 := mPrevSelection
906 [-]: EQ        1 R44 K19    ; if R44 == nil then PC := 944
907 [-]: JMP       944          ; PC := 944
908 [-]: GETGLOBAL R44 K96      ; R44 := mPrevSelection
909 [-]: GETTABLE  R44 R44 K55  ; R44 := R44["mPurchasedInfo"]
910 [-]: EQ        1 R44 K19    ; if R44 == nil then PC := 944
911 [-]: JMP       944          ; PC := 944
912 [-]: GETGLOBAL R44 K96      ; R44 := mPrevSelection
913 [-]: GETTABLE  R44 R44 K55  ; R44 := R44["mPurchasedInfo"]
914 [-]: GETTABLE  R44 R44 K56  ; R44 := R44["UID"]
915 [-]: EQ        1 R44 K19    ; if R44 == nil then PC := 944
916 [-]: JMP       944          ; PC := 944
917 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
918 [-]: GETTABLE  R44 R44 K11  ; R44 := R44["Item"]
919 [-]: EQ        1 R44 K19    ; if R44 == nil then PC := 944
920 [-]: JMP       944          ; PC := 944
921 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
922 [-]: GETTABLE  R44 R44 K11  ; R44 := R44["Item"]
923 [-]: GETTABLE  R44 R44 K55  ; R44 := R44["mPurchasedInfo"]
924 [-]: EQ        1 R44 K19    ; if R44 == nil then PC := 944
925 [-]: JMP       944          ; PC := 944
926 [-]: GETGLOBAL R44 K2       ; R44 := mSelected
927 [-]: GETTABLE  R44 R44 K11  ; R44 := R44["Item"]
928 [-]: GETTABLE  R44 R44 K55  ; R44 := R44["mPurchasedInfo"]
929 [-]: GETTABLE  R44 R44 K56  ; R44 := R44["UID"]
930 [-]: EQ        1 R44 K19    ; if R44 == nil then PC := 944
931 [-]: JMP       944          ; PC := 944
932 [-]: GETGLOBAL R44 K96      ; R44 := mPrevSelection
933 [-]: GETTABLE  R44 R44 K55  ; R44 := R44["mPurchasedInfo"]
934 [-]: GETTABLE  R44 R44 K56  ; R44 := R44["UID"]
935 [-]: GETGLOBAL R45 K2       ; R45 := mSelected
936 [-]: GETTABLE  R45 R45 K11  ; R45 := R45["Item"]
937 [-]: GETTABLE  R45 R45 K55  ; R45 := R45["mPurchasedInfo"]
938 [-]: GETTABLE  R45 R45 K56  ; R45 := R45["UID"]
939 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 942
940 [-]: JMP       942          ; PC := 942
941 [-]: LOADBOOL  R43 0 1      ; R43 := false; PC := 942
942 [-]: LOADBOOL  R43 1 0      ; R43 := true
943 [-]: JMP       970          ; PC := 970
944 [-]: SELF      R44 R1 K27   ; R45 := R1; R44 := R1[0xde321e6f]
945 [-]: CALL      R44 2 2      ; R44 := R44(R45)
946 [-]: SELF      R44 R44 K97  ; R45 := R44; R44 := R44[0xe85a2361]
947 [-]: GETUPVAL  R46 U11      ; R46 := U11
948 [-]: GETTABLE  R46 R46 K77  ; R46 := R46[0x06d055f9]
949 [-]: EQ        1 R5 K19     ; if R5 == nil then PC := 952
950 [-]: JMP       952          ; PC := 952
951 [-]: LOADBOOL  R47 0 1      ; R47 := false; PC := 952
952 [-]: LOADBOOL  R47 1 0      ; R47 := true
953 [-]: LOADK     R48 3        ; R48 := 3.000000
954 [-]: MOVE      R49 R5       ; R49 := R5
955 [-]: CALL      R46 4 0      ; R46,... := R46(R47,R48,R49)
956 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
957 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
958 [-]: MOVE      R46 R44      ; R46 := R44
959 [-]: CALL      R45 2 2      ; R45 := R45(R46)
960 [-]: TESTSET   R43 R45 1    ; if R45 then PC := 970 else R43 := R45
961 [-]: JMP       970          ; PC := 970
962 [-]: SELF      R45 R44 K98  ; R46 := R44; R45 := R44[0xcde10c4a]
963 [-]: CALL      R45 2 2      ; R45 := R45(R46)
964 [-]: SELF      R46 R6 K98   ; R47 := R6; R46 := R6[0xcde10c4a]
965 [-]: CALL      R46 2 2      ; R46 := R46(R47)
966 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 969
967 [-]: JMP       969          ; PC := 969
968 [-]: LOADBOOL  R43 0 1      ; R43 := false; PC := 969
969 [-]: LOADBOOL  R43 1 0      ; R43 := true
970 [-]: LOADNIL   R45 R45      ; R45 := nil
971 [-]: TEST      R43 0        ; if not R43 then PC := 1003
972 [-]: JMP       1003         ; PC := 1003
973 [-]: GETGLOBAL R46 K83      ; R46 := 0x89326c93
974 [-]: SELF      R46 R46 K99  ; R47 := R46; R46 := R46[0x765dad71]
975 [-]: MOVE      R48 R6       ; R48 := R6
976 [-]: MOVE      R49 R1       ; R49 := R1
977 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
978 [-]: MOVE      R45 R46      ; R45 := R46
979 [-]: GETGLOBAL R46 K0       ; R46 := 0x7b998233
980 [-]: MOVE      R47 R45      ; R47 := R45
981 [-]: CALL      R46 2 2      ; R46 := R46(R47)
982 [-]: TEST      R46 1        ; if R46 then PC := 995
983 [-]: JMP       995          ; PC := 995
984 [-]: GETTABLE  R46 R0 K100  ; R46 := R0["RawItem"]
985 [-]: EQ        1 R46 K19    ; if R46 == nil then PC := 995
986 [-]: JMP       995          ; PC := 995
987 [-]: GETGLOBAL R46 K101     ; R46 := 0x3584dca2
988 [-]: CALL      R46 1 2      ; R46 := R46()
989 [-]: GETTABLE  R47 R0 K100  ; R47 := R0["RawItem"]
990 [-]: GETTABLE  R47 R47 K56  ; R47 := R47["UID"]
991 [-]: SETTABLE  R46 K54 R47  ; R46["mId"] := R47
992 [-]: SELF      R47 R45 K102 ; R48 := R45; R47 := R45[0x05a6a906]
993 [-]: MOVE      R49 R46      ; R49 := R46
994 [-]: CALL      R47 3 1      ; R47(R48,R49)
995 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
996 [-]: MOVE      R48 R7       ; R48 := R7
997 [-]: CALL      R47 2 2      ; R47 := R47(R48)
998 [-]: TEST      R47 1        ; if R47 then PC := 1003
999 [-]: JMP       1003         ; PC := 1003
1000 [-]: SELF      R47 R45 K103 ; R48 := R45; R47 := R45[0xaa041663]
1001 [-]: MOVE      R49 R7       ; R49 := R7
1002 [-]: CALL      R47 3 1      ; R47(R48,R49)
1003 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
1004 [-]: MOVE      R48 R45      ; R48 := R45
1005 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1006 [-]: TEST      R47 1        ; if R47 then PC := 1032
1007 [-]: JMP       1032         ; PC := 1032
1008 [-]: SELF      R47 R1 K27   ; R48 := R1; R47 := R1[0xde321e6f]
1009 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1010 [-]: SELF      R47 R47 K104 ; R48 := R47; R47 := R47[0x511d26b8]
1011 [-]: MOVE      R49 R45      ; R49 := R45
1012 [-]: LOADBOOL  R50 1 0      ; R50 := true
1013 [-]: CALL      R47 4 1      ; R47(R48,R49,R50)
1014 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
1015 [-]: MOVE      R48 R45      ; R48 := R45
1016 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1017 [-]: TEST      R47 1        ; if R47 then PC := 1032
1018 [-]: JMP       1032         ; PC := 1032
1019 [-]: SELF      R47 R45 K105 ; R48 := R45; R47 := R45[0xb5d09c91]
1020 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1021 [-]: EQ        1 R47 R5     ; if R47 == R5 then PC := 1032
1022 [-]: JMP       1032         ; PC := 1032
1023 [-]: EQ        0 R5 K106    ; if R5 ~= 10.000000 then PC := 1032
1024 [-]: JMP       1032         ; PC := 1032
1025 [-]: SELF      R47 R1 K27   ; R48 := R1; R47 := R1[0xde321e6f]
1026 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1027 [-]: SELF      R47 R47 K107 ; R48 := R47; R47 := R47[0x447665bf]
1028 [-]: MOVE      R49 R5       ; R49 := R5
1029 [-]: SELF      R50 R45 K105 ; R51 := R45; R50 := R45[0xb5d09c91]
1030 [-]: CALL      R50 2 0      ; R50,... := R50(R51)
1031 [-]: CALL      R47 0 1      ; R47(R48,...)
1032 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
1033 [-]: MOVE      R48 R45      ; R48 := R45
1034 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1035 [-]: TEST      R47 1        ; if R47 then PC := 1052
1036 [-]: JMP       1052         ; PC := 1052
1037 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
1038 [-]: GETGLOBAL R48 K2       ; R48 := mSelected
1039 [-]: GETTABLE  R48 R48 K11  ; R48 := R48["Item"]
1040 [-]: GETTABLE  R48 R48 K108 ; R48 := R48["mModularParts"]
1041 [-]: CALL      R47 2 2      ; R47 := R47(R48)
1042 [-]: TEST      R47 1        ; if R47 then PC := 1052
1043 [-]: JMP       1052         ; PC := 1052
1044 [-]: SELF      R47 R45 K109 ; R48 := R45; R47 := R45[0xa6101f7e]
1045 [-]: GETGLOBAL R49 K2       ; R49 := mSelected
1046 [-]: GETTABLE  R49 R49 K11  ; R49 := R49["Item"]
1047 [-]: GETTABLE  R49 R49 K108 ; R49 := R49["mModularParts"]
1048 [-]: GETGLOBAL R50 K2       ; R50 := mSelected
1049 [-]: GETTABLE  R50 R50 K11  ; R50 := R50["Item"]
1050 [-]: GETTABLE  R50 R50 K110 ; R50 := R50["mGild"]
1051 [-]: CALL      R47 4 1      ; R47(R48,R49,R50)
1052 [-]: LOADNIL   R47 R47      ; R47 := nil
1053 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
1054 [-]: MOVE      R49 R1       ; R49 := R1
1055 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1056 [-]: TEST      R48 1        ; if R48 then PC := 1092
1057 [-]: JMP       1092         ; PC := 1092
1058 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
1059 [-]: SELF      R49 R1 K27   ; R50 := R1; R49 := R1[0xde321e6f]
1060 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
1061 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
1062 [-]: TEST      R48 1        ; if R48 then PC := 1092
1063 [-]: JMP       1092         ; PC := 1092
1064 [-]: GETGLOBAL R48 K2       ; R48 := mSelected
1065 [-]: GETTABLE  R48 R48 K3   ; R48 := R48["Element"]
1066 [-]: GETTABLE  R48 R48 K16  ; R48 := R48["LoadOutId"]
1067 [-]: EQ        0 R48 K29    ; if R48 ~= 0.000000 then PC := 1086
1068 [-]: JMP       1086         ; PC := 1086
1069 [-]: GETGLOBAL R48 K2       ; R48 := mSelected
1070 [-]: GETTABLE  R48 R48 K3   ; R48 := R48["Element"]
1071 [-]: GETTABLE  R48 R48 K4   ; R48 := R48["LoadOutType"]
1072 [-]: EQ        0 R48 K17    ; if R48 ~= 2.000000 then PC := 1080
1073 [-]: JMP       1080         ; PC := 1080
1074 [-]: SELF      R48 R1 K27   ; R49 := R1; R48 := R1[0xde321e6f]
1075 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1076 [-]: SELF      R48 R48 K111 ; R49 := R48; R48 := R48[0x2303a280]
1077 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1078 [-]: MOVE      R47 R48      ; R47 := R48
1079 [-]: JMP       1092         ; PC := 1092
1080 [-]: SELF      R48 R1 K27   ; R49 := R1; R48 := R1[0xde321e6f]
1081 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1082 [-]: SELF      R48 R48 K112 ; R49 := R48; R48 := R48[0xf7d48ee0]
1083 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1084 [-]: MOVE      R47 R48      ; R47 := R48
1085 [-]: JMP       1092         ; PC := 1092
1086 [-]: SELF      R48 R1 K27   ; R49 := R1; R48 := R1[0xde321e6f]
1087 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1088 [-]: SELF      R48 R48 K113 ; R49 := R48; R48 := R48[0x881b6b90]
1089 [-]: LOADK     R50 0        ; R50 := 0.000000
1090 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
1091 [-]: MOVE      R47 R48      ; R47 := R48
1092 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
1093 [-]: MOVE      R49 R45      ; R49 := R45
1094 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1095 [-]: TEST      R48 0        ; if not R48 then PC := 1110
1096 [-]: JMP       1110         ; PC := 1110
1097 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
1098 [-]: MOVE      R49 R7       ; R49 := R7
1099 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1100 [-]: TEST      R48 1        ; if R48 then PC := 1110
1101 [-]: JMP       1110         ; PC := 1110
1102 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
1103 [-]: MOVE      R49 R47      ; R49 := R47
1104 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1105 [-]: TEST      R48 1        ; if R48 then PC := 1110
1106 [-]: JMP       1110         ; PC := 1110
1107 [-]: SELF      R48 R47 K103 ; R49 := R47; R48 := R47[0xaa041663]
1108 [-]: MOVE      R50 R7       ; R50 := R7
1109 [-]: CALL      R48 3 1      ; R48(R49,R50)
1110 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
1111 [-]: MOVE      R49 R1       ; R49 := R1
1112 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1113 [-]: TEST      R48 1        ; if R48 then PC := 1124
1114 [-]: JMP       1124         ; PC := 1124
1115 [-]: TEST      R5 0         ; if not R5 then PC := 1124
1116 [-]: JMP       1124         ; PC := 1124
1117 [-]: SELF      R48 R1 K27   ; R49 := R1; R48 := R1[0xde321e6f]
1118 [-]: CALL      R48 2 2      ; R48 := R48(R49)
1119 [-]: SELF      R48 R48 K114 ; R49 := R48; R48 := R48[0xc69087f6]
1120 [-]: MOVE      R50 R5       ; R50 := R5
1121 [-]: LOADK     R51 0        ; R51 := 0.000000
1122 [-]: LOADK     R52 2        ; R52 := 2.000000
1123 [-]: CALL      R48 5 1      ; R48(R49,R50,R51,R52)
1124 [-]: GETUPVAL  R48 U12      ; R48 := U12
1125 [-]: MOVE      R49 R1       ; R49 := R1
1126 [-]: GETGLOBAL R50 K2       ; R50 := mSelected
1127 [-]: GETTABLE  R50 R50 K3   ; R50 := R50["Element"]
1128 [-]: GETTABLE  R50 R50 K4   ; R50 := R50["LoadOutType"]
1129 [-]: GETGLOBAL R51 K2       ; R51 := mSelected
1130 [-]: GETTABLE  R51 R51 K3   ; R51 := R51["Element"]
1131 [-]: GETTABLE  R51 R51 K16  ; R51 := R51["LoadOutId"]
1132 [-]: CALL      R48 4 1      ; R48(R49,R50,R51)
1133 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 7903
; #Upvalues:       20
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x1467d5f4]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETGLOBAL R2 K2        ; R2 := mSelected
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Emote"]
  6 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETUPVAL  R3 U1        ; R3 := U1
 10 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["SELECTING_CONSUMABLES"]
 11 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R2 R1        ; R2 := R1
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 16
 16 [-]: LOADBOOL  R2 1 0       ; R2 := true
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mPurchased"]
 18 [-]: TEST      R3 0         ; if not R3 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 21 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Element"]
 22 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mPurchasedInfo"]
 25 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mPurchasedInfo"]
 28 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UID"]
 29 [-]: GETGLOBAL R4 K2        ; R4 := mSelected
 30 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["Element"]
 31 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["UID"]
 32 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 35
 35 [-]: LOADBOOL  R3 1 0       ; R3 := true
 36 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mPurchased"]
 37 [-]: TEST      R4 0         ; if not R4 then PC := 48
 38 [-]: JMP       48           ; PC := 48
 39 [-]: GETUPVAL  R4 U0        ; R4 := U0
 40 [-]: GETUPVAL  R5 U1        ; R5 := U1
 41 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["SELECTING_CONSUMABLES"]
 42 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 47
 43 [-]: JMP       47           ; PC := 47
 44 [-]: MOVE      R4 R2        ; R4 := R2
 45 [-]: JMP       48           ; PC := 48
 46 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 47
 47 [-]: LOADBOOL  R4 1 0       ; R4 := true
 48 [-]: GETUPVAL  R5 U2        ; R5 := U2
 49 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0xcac502bd]
 50 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mStoreItem"]
 51 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 52 [-]: TEST      R5 1         ; if R5 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["BundleOnly"]
 55 [-]: GETGLOBAL R6 K0        ; R6 := 0x34291f5c
 56 [-]: GETTABLE  R6 R6 K1     ; R6 := R6[0x1467d5f4]
 57 [-]: CALL      R6 1 2       ; R6 := R6()
 58 [-]: TEST      R6 0         ; if not R6 then PC := 74
 59 [-]: JMP       74           ; PC := 74
 60 [-]: GETUPVAL  R6 U0        ; R6 := U0
 61 [-]: GETUPVAL  R7 U1        ; R7 := U1
 62 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["SWAPPING_ITEM"]
 63 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 73
 64 [-]: JMP       73           ; PC := 73
 65 [-]: GETUPVAL  R6 U0        ; R6 := U0
 66 [-]: GETUPVAL  R7 U1        ; R7 := U1
 67 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["SELECTING_SKINS"]
 68 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: MOVE      R6 R2        ; R6 := R2
 71 [-]: JMP       74           ; PC := 74
 72 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 73
 73 [-]: LOADBOOL  R6 1 0       ; R6 := true
 74 [-]: LOADK     R7 K15       ; R7 := "/Lotus/Language/OstronCrafting/Crafting_Preview_NoIcon"
 75 [-]: TEST      R6 1         ; if R6 then PC := 87
 76 [-]: JMP       87           ; PC := 87
 77 [-]: TEST      R4 0         ; if not R4 then PC := 81
 78 [-]: JMP       81           ; PC := 81
 79 [-]: LOADK     R7 K16       ; R7 := "/Lotus/Language/Menu/ItemSelection_Equip"
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["BundleOnly"]
 82 [-]: TEST      R8 0         ; if not R8 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: LOADK     R7 K15       ; R7 := "/Lotus/Language/OstronCrafting/Crafting_Preview_NoIcon"
 85 [-]: JMP       87           ; PC := 87
 86 [-]: LOADK     R7 K17       ; R7 := "/Lotus/Language/Menu/Global_BuyItem"
 87 [-]: GETGLOBAL R8 K18       ; R8 := mButtons
 88 [-]: GETTABLE  R8 R8 K19    ; R8 := R8[2.000000]
 89 [-]: SETTABLE  R8 K20 R7    ; R8["mLabel"] := R7
 90 [-]: GETGLOBAL R8 K18       ; R8 := mButtons
 91 [-]: GETTABLE  R8 R8 K19    ; R8 := R8[2.000000]
 92 [-]: GETUPVAL  R9 U3        ; R9 := U3
 93 [-]: GETTABLE  R9 R9 K22    ; R9 := R9[0x06d055f9]
 94 [-]: TEST      R6 1         ; if R6 then PC := 104
 95 [-]: JMP       104          ; PC := 104
 96 [-]: GETUPVAL  R10 U0       ; R10 := U0
 97 [-]: GETUPVAL  R11 U1       ; R11 := U1
 98 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["SELECTING_CONSUMABLES"]
 99 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 105
100 [-]: JMP       105          ; PC := 105
101 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mPurchased"]
102 [-]: NOT       R10 R10      ; R10 := not R10
103 [-]: JMP       106          ; PC := 106
104 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 105
105 [-]: LOADBOOL  R10 1 0      ; R10 := true
106 [-]: LOADK     R11 K23      ; R11 := "MENU_SELECT"
107 [-]: LOADK     R12 K24      ; R12 := "MENU_GENERIC1"
108 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
109 [-]: SETTABLE  R8 K21 R9    ; R8["mCallout"] := R9
110 [-]: GETGLOBAL R8 K18       ; R8 := mButtons
111 [-]: GETTABLE  R8 R8 K19    ; R8 := R8[2.000000]
112 [-]: CLOSURE   R9 0         ; R9 := closure(Function #128.1)
113 [-]: MOVE      R0 R4        ; R0 := R4
114 [-]: GETUPVAL  R0 U4        ; R0 := U4
115 [-]: SETTABLE  R8 K25 R9    ; R8["mCallback"] := R9
116 [-]: LOADK     R8 K16       ; R8 := "/Lotus/Language/Menu/ItemSelection_Equip"
117 [-]: TEST      R6 0         ; if not R6 then PC := 126
118 [-]: JMP       126          ; PC := 126
119 [-]: GETUPVAL  R9 U3        ; R9 := U3
120 [-]: GETTABLE  R9 R9 K22    ; R9 := R9[0x06d055f9]
121 [-]: MOVE      R10 R4       ; R10 := R4
122 [-]: LOADK     R11 K16      ; R11 := "/Lotus/Language/Menu/ItemSelection_Equip"
123 [-]: LOADK     R12 K17      ; R12 := "/Lotus/Language/Menu/Global_BuyItem"
124 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
125 [-]: MOVE      R8 R9        ; R8 := R9
126 [-]: GETGLOBAL R9 K18       ; R9 := mButtons
127 [-]: GETTABLE  R9 R9 K26    ; R9 := R9[3.000000]
128 [-]: SETTABLE  R9 K20 R8    ; R9["mLabel"] := R8
129 [-]: GETGLOBAL R9 K18       ; R9 := mButtons
130 [-]: GETTABLE  R9 R9 K26    ; R9 := R9[3.000000]
131 [-]: TESTSET   R10 R6 1     ; if R6 then PC := 143 else R10 := R6
132 [-]: JMP       143          ; PC := 143
133 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mPurchased"]
134 [-]: TEST      R10 0        ; if not R10 then PC := 143
135 [-]: JMP       143          ; PC := 143
136 [-]: GETUPVAL  R10 U0       ; R10 := U0
137 [-]: GETUPVAL  R11 U1       ; R11 := U1
138 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["SELECTING_CONSUMABLES"]
139 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 142
142 [-]: LOADBOOL  R10 1 0      ; R10 := true
143 [-]: SETTABLE  R9 K27 R10   ; R9["mVisible"] := R10
144 [-]: GETGLOBAL R9 K18       ; R9 := mButtons
145 [-]: GETTABLE  R9 R9 K26    ; R9 := R9[3.000000]
146 [-]: SETTABLE  R9 K21 K23   ; R9["mCallout"] := "MENU_SELECT"
147 [-]: GETUPVAL  R9 U0        ; R9 := U0
148 [-]: GETUPVAL  R10 U1       ; R10 := U1
149 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["SELECTING_CONSUMABLES"]
150 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 159
151 [-]: JMP       159          ; PC := 159
152 [-]: GETGLOBAL R9 K18       ; R9 := mButtons
153 [-]: GETTABLE  R9 R9 K19    ; R9 := R9[2.000000]
154 [-]: TESTSET   R10 R4 1     ; if R4 then PC := 157 else R10 := R4
155 [-]: JMP       157          ; PC := 157
156 [-]: MOVE      R10 R5       ; R10 := R5
157 [-]: SETTABLE  R9 K27 R10   ; R9["mVisible"] := R10
158 [-]: JMP       169          ; PC := 169
159 [-]: GETGLOBAL R9 K18       ; R9 := mButtons
160 [-]: GETTABLE  R9 R9 K19    ; R9 := R9[2.000000]
161 [-]: GETTABLE  R10 R0 K28   ; R10 := R0["mEmpty"]
162 [-]: TEST      R10 1        ; if R10 then PC := 168
163 [-]: JMP       168          ; PC := 168
164 [-]: GETGLOBAL R10 K29      ; R10 := 0x7b998233
165 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["mStoreItem"]
166 [-]: CALL      R10 2 2      ; R10 := R10(R11)
167 [-]: NOT       R10 R10      ; R10 := not R10
168 [-]: SETTABLE  R9 K27 R10   ; R9["mVisible"] := R10
169 [-]: GETUPVAL  R9 U5        ; R9 := U5
170 [-]: CALL      R9 1 1       ; R9()
171 [-]: GETGLOBAL R9 K30       ; R9 := 0x55156ff7
172 [-]: CALL      R9 1 2       ; R9 := R9()
173 [-]: LOADBOOL  R10 0 0      ; R10 := false
174 [-]: TEST      R1 0         ; if not R1 then PC := 180
175 [-]: JMP       180          ; PC := 180
176 [-]: GETUPVAL  R11 U6       ; R11 := U6
177 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["AutoSelect"]
178 [-]: TEST      R11 1        ; if R11 then PC := 197
179 [-]: JMP       197          ; PC := 197
180 [-]: TEST      R1 1         ; if R1 then PC := 239
181 [-]: JMP       239          ; PC := 239
182 [-]: GETUPVAL  R11 U6       ; R11 := U6
183 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["DoubleClick"]
184 [-]: TEST      R11 1        ; if R11 then PC := 197
185 [-]: JMP       197          ; PC := 197
186 [-]: GETGLOBAL R11 K33      ; R11 := mPrevSelection
187 [-]: EQ        1 R11 K4     ; if R11 == nil then PC := 239
188 [-]: JMP       239          ; PC := 239
189 [-]: GETGLOBAL R11 K33      ; R11 := mPrevSelection
190 [-]: EQ        0 R11 R0     ; if R11 ~= R0 then PC := 239
191 [-]: JMP       239          ; PC := 239
192 [-]: GETUPVAL  R11 U6       ; R11 := U6
193 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["Time"]
194 [-]: SUB       R11 R9 R11   ; R11 := R9 - R11
195 [-]: LT        0 R11 K35    ; if R11 >= 0.500000 then PC := 239
196 [-]: JMP       239          ; PC := 239
197 [-]: GETUPVAL  R11 U6       ; R11 := U6
198 [-]: SETTABLE  R11 K34 K36  ; R11["Time"] := 0.000000
199 [-]: GETUPVAL  R11 U6       ; R11 := U6
200 [-]: SETTABLE  R11 K32 K37  ; R11["DoubleClick"] := false
201 [-]: GETUPVAL  R11 U6       ; R11 := U6
202 [-]: SETTABLE  R11 K31 K37  ; R11["AutoSelect"] := false
203 [-]: GETTABLE  R11 R0 K6    ; R11 := R0["mPurchased"]
204 [-]: TEST      R11 0        ; if not R11 then PC := 234
205 [-]: JMP       234          ; PC := 234
206 [-]: GETGLOBAL R11 K29      ; R11 := 0x7b998233
207 [-]: GETGLOBAL R12 K2       ; R12 := mSelected
208 [-]: GETTABLE  R12 R12 K38  ; R12 := R12["Item"]
209 [-]: CALL      R11 2 2      ; R11 := R11(R12)
210 [-]: TEST      R11 1        ; if R11 then PC := 228
211 [-]: JMP       228          ; PC := 228
212 [-]: GETGLOBAL R11 K2       ; R11 := mSelected
213 [-]: GETTABLE  R11 R11 K38  ; R11 := R11["Item"]
214 [-]: GETTABLE  R11 R11 K39  ; R11 := R11["LoadOutId"]
215 [-]: EQ        0 R11 K41    ; if R11 ~= 4.000000 then PC := 228
216 [-]: JMP       228          ; PC := 228
217 [-]: GETGLOBAL R11 K2       ; R11 := mSelected
218 [-]: GETTABLE  R11 R11 K38  ; R11 := R11["Item"]
219 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["RawItem"]
220 [-]: GETTABLE  R11 R11 K38  ; R11 := R11["Item"]
221 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0xdbfbf6c0]
222 [-]: LOADK     R13 2        ; R13 := 2.000000
223 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
224 [-]: TEST      R11 1        ; if R11 then PC := 228
225 [-]: JMP       228          ; PC := 228
226 [-]: LOADBOOL  R10 1 0      ; R10 := true
227 [-]: JMP       239          ; PC := 239
228 [-]: GETUPVAL  R11 U7       ; R11 := U7
229 [-]: CALL      R11 1 2      ; R11 := R11()
230 [-]: TEST      R11 1        ; if R11 then PC := 239
231 [-]: JMP       239          ; PC := 239
232 [-]: RETURN    R0 1         ; return 
233 [-]: JMP       239          ; PC := 239
234 [-]: TEST      R5 0         ; if not R5 then PC := 239
235 [-]: JMP       239          ; PC := 239
236 [-]: GETUPVAL  R11 U4       ; R11 := U4
237 [-]: CALL      R11 1 1      ; R11()
238 [-]: RETURN    R0 1         ; return 
239 [-]: GETUPVAL  R11 U6       ; R11 := U6
240 [-]: GETGLOBAL R12 K30      ; R12 := 0x55156ff7
241 [-]: CALL      R12 1 2      ; R12 := R12()
242 [-]: SETTABLE  R11 K34 R12  ; R11["Time"] := R12
243 [-]: GETUPVAL  R11 U6       ; R11 := U6
244 [-]: SETTABLE  R11 K32 K37  ; R11["DoubleClick"] := false
245 [-]: GETUPVAL  R11 U0       ; R11 := U0
246 [-]: GETUPVAL  R12 U1       ; R12 := U1
247 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["SELECTING_SKINS"]
248 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 344
249 [-]: JMP       344          ; PC := 344
250 [-]: GETGLOBAL R11 K29      ; R11 := 0x7b998233
251 [-]: GETGLOBAL R12 K2       ; R12 := mSelected
252 [-]: GETTABLE  R12 R12 K44  ; R12 := R12["CosmeticItem"]
253 [-]: CALL      R11 2 2      ; R11 := R11(R12)
254 [-]: TEST      R11 1        ; if R11 then PC := 303
255 [-]: JMP       303          ; PC := 303
256 [-]: GETGLOBAL R11 K2       ; R11 := mSelected
257 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["CosmeticItem"]
258 [-]: GETTABLE  R11 R11 K45  ; R11 := R11["appliedSet"]
259 [-]: EQ        0 R11 K46    ; if R11 ~= true then PC := 303
260 [-]: JMP       303          ; PC := 303
261 [-]: GETGLOBAL R11 K2       ; R11 := mSelected
262 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["CosmeticItem"]
263 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["Type"]
264 [-]: GETTABLE  R12 R0 K47   ; R12 := R0["Type"]
265 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 303
266 [-]: JMP       303          ; PC := 303
267 [-]: GETGLOBAL R11 K2       ; R11 := mSelected
268 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["CosmeticItem"]
269 [-]: SETTABLE  R11 K45 K37  ; R11["appliedSet"] := false
270 [-]: GETGLOBAL R11 K48      ; R11 := _T
271 [-]: GETTABLE  R11 R11 K49  ; R11 := R11["MenuSuitAvatar"]
272 [-]: SELF      R12 R11 K50  ; R13 := R11; R12 := R11[0xde321e6f]
273 [-]: CALL      R12 2 2      ; R12 := R12(R13)
274 [-]: SELF      R12 R12 K51  ; R13 := R12; R12 := R12[0x374b084a]
275 [-]: CALL      R12 2 1      ; R12(R13)
276 [-]: GETUPVAL  R12 U8       ; R12 := U8
277 [-]: GETUPVAL  R13 U9       ; R13 := U9
278 [-]: GETTABLE  R13 R13 K52  ; R13 := R13["Current"]
279 [-]: EQ        1 R13 K19    ; if R13 == 2.000000 then PC := 282
280 [-]: JMP       282          ; PC := 282
281 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 282
282 [-]: LOADBOOL  R13 1 0      ; R13 := true
283 [-]: CALL      R12 2 1      ; R12(R13)
284 [-]: GETGLOBAL R12 K29      ; R12 := 0x7b998233
285 [-]: GETUPVAL  R13 U10      ; R13 := U10
286 [-]: CALL      R12 2 2      ; R12 := R12(R13)
287 [-]: TEST      R12 0        ; if not R12 then PC := 293
288 [-]: JMP       293          ; PC := 293
289 [-]: SELF      R12 R11 K50  ; R13 := R11; R12 := R11[0xde321e6f]
290 [-]: CALL      R12 2 2      ; R12 := R12(R13)
291 [-]: SELF      R12 R12 K53  ; R13 := R12; R12 := R12[0x0c277ae1]
292 [-]: CALL      R12 2 1      ; R12(R13)
293 [-]: GETUPVAL  R12 U11      ; R12 := U11
294 [-]: GETGLOBAL R13 K2       ; R13 := mSelected
295 [-]: GETTABLE  R13 R13 K7   ; R13 := R13["Element"]
296 [-]: GETTABLE  R13 R13 K54  ; R13 := R13["LoadOutType"]
297 [-]: GETGLOBAL R14 K2       ; R14 := mSelected
298 [-]: GETTABLE  R14 R14 K7   ; R14 := R14["Element"]
299 [-]: GETTABLE  R14 R14 K39  ; R14 := R14["LoadOutId"]
300 [-]: GETGLOBAL R15 K2       ; R15 := mSelected
301 [-]: GETTABLE  R15 R15 K7   ; R15 := R15["Element"]
302 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
303 [-]: GETUPVAL  R12 U12      ; R12 := U12
304 [-]: MOVE      R13 R0       ; R13 := R0
305 [-]: CALL      R12 2 1      ; R12(R13)
306 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["mPurchased"]
307 [-]: TEST      R12 1        ; if R12 then PC := 322
308 [-]: JMP       322          ; PC := 322
309 [-]: GETTABLE  R12 R0 K55   ; R12 := R0["SetItems"]
310 [-]: EQ        1 R12 K4     ; if R12 == nil then PC := 322
311 [-]: JMP       322          ; PC := 322
312 [-]: GETGLOBAL R12 K56      ; R12 := 0xc8802016
313 [-]: GETTABLE  R13 R0 K55   ; R13 := R0["SetItems"]
314 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
315 [-]: JMP       320          ; PC := 320
316 [-]: GETUPVAL  R17 U12      ; R17 := U12
317 [-]: MOVE      R18 R16      ; R18 := R16
318 [-]: CALL      R17 2 1      ; R17(R18)
319 [-]: SETTABLE  R0 K45 K46   ; R0["appliedSet"] := true
320 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 316; R14 := R15 end
321 [-]: JMP       316          ; PC := 316
322 [-]: GETGLOBAL R17 K2       ; R17 := mSelected
323 [-]: SETTABLE  R17 K44 R0   ; R17["CosmeticItem"] := R0
324 [-]: GETUPVAL  R17 U13      ; R17 := U13
325 [-]: GETGLOBAL R18 K2       ; R18 := mSelected
326 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["Cosmetic"]
327 [-]: CALL      R17 2 2      ; R17 := R17(R18)
328 [-]: TEST      R17 0        ; if not R17 then PC := 336
329 [-]: JMP       336          ; PC := 336
330 [-]: GETUPVAL  R17 U14      ; R17 := U14
331 [-]: GETGLOBAL R18 K2       ; R18 := mSelected
332 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["Element"]
333 [-]: LOADBOOL  R19 0 0      ; R19 := false
334 [-]: CALL      R17 3 1      ; R17(R18,R19)
335 [-]: JMP       553          ; PC := 553
336 [-]: GETUPVAL  R17 U15      ; R17 := U15
337 [-]: GETGLOBAL R18 K2       ; R18 := mSelected
338 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["Element"]
339 [-]: GETUPVAL  R19 U16      ; R19 := U16
340 [-]: GETTABLE  R19 R19 K58  ; R19 := R19["mStatCompare"]
341 [-]: GETTABLE  R19 R19 K59  ; R19 := R19["mStats"]
342 [-]: CALL      R17 3 1      ; R17(R18,R19)
343 [-]: JMP       553          ; PC := 553
344 [-]: GETUPVAL  R17 U0       ; R17 := U0
345 [-]: GETUPVAL  R18 U1       ; R18 := U1
346 [-]: GETTABLE  R18 R18 K13  ; R18 := R18["SWAPPING_ITEM"]
347 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 516
348 [-]: JMP       516          ; PC := 516
349 [-]: GETUPVAL  R17 U17      ; R17 := U17
350 [-]: MOVE      R18 R0       ; R18 := R0
351 [-]: CALL      R17 2 1      ; R17(R18)
352 [-]: GETGLOBAL R17 K29      ; R17 := 0x7b998233
353 [-]: GETGLOBAL R18 K60      ; R18 := 0x25d99d89
354 [-]: CALL      R17 2 2      ; R17 := R17(R18)
355 [-]: TEST      R17 1        ; if R17 then PC := 553
356 [-]: JMP       553          ; PC := 553
357 [-]: GETGLOBAL R17 K29      ; R17 := 0x7b998233
358 [-]: GETGLOBAL R18 K2       ; R18 := mSelected
359 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["Element"]
360 [-]: CALL      R17 2 2      ; R17 := R17(R18)
361 [-]: TEST      R17 1        ; if R17 then PC := 553
362 [-]: JMP       553          ; PC := 553
363 [-]: LOADK     R17 K61      ; R17 := ""
364 [-]: GETGLOBAL R18 K2       ; R18 := mSelected
365 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["Element"]
366 [-]: GETTABLE  R18 R18 K62  ; R18 := R18["mDisplayName"]
367 [-]: EQ        1 R18 K4     ; if R18 == nil then PC := 373
368 [-]: JMP       373          ; PC := 373
369 [-]: GETGLOBAL R18 K2       ; R18 := mSelected
370 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["Element"]
371 [-]: GETTABLE  R17 R18 K62  ; R17 := R18["mDisplayName"]
372 [-]: JMP       392          ; PC := 392
373 [-]: GETGLOBAL R18 K29      ; R18 := 0x7b998233
374 [-]: GETGLOBAL R19 K2       ; R19 := mSelected
375 [-]: GETTABLE  R19 R19 K7   ; R19 := R19["Element"]
376 [-]: GETTABLE  R19 R19 K11  ; R19 := R19["mStoreItem"]
377 [-]: CALL      R18 2 2      ; R18 := R18(R19)
378 [-]: TEST      R18 1        ; if R18 then PC := 392
379 [-]: JMP       392          ; PC := 392
380 [-]: GETGLOBAL R18 K63      ; R18 := 0xae91e43b
381 [-]: SELF      R18 R18 K64  ; R19 := R18; R18 := R18[0x42b04007]
382 [-]: GETGLOBAL R20 K65      ; R20 := 0x64fb1586
383 [-]: GETGLOBAL R21 K2       ; R21 := mSelected
384 [-]: GETTABLE  R21 R21 K7   ; R21 := R21["Element"]
385 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["mStoreItem"]
386 [-]: SELF      R21 R21 K66  ; R22 := R21; R21 := R21[0xd3a9d01f]
387 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
388 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
389 [-]: LOADBOOL  R21 1 0      ; R21 := true
390 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
391 [-]: MOVE      R17 R18      ; R17 := R18
392 [-]: GETGLOBAL R18 K67      ; R18 := 0x5f0788c4
393 [-]: MOVE      R19 R17      ; R19 := R17
394 [-]: CALL      R18 2 2      ; R18 := R18(R19)
395 [-]: MOVE      R17 R18      ; R17 := R18
396 [-]: GETGLOBAL R18 K29      ; R18 := 0x7b998233
397 [-]: GETGLOBAL R19 K2       ; R19 := mSelected
398 [-]: GETTABLE  R19 R19 K7   ; R19 := R19["Element"]
399 [-]: GETTABLE  R19 R19 K68  ; R19 := R19["EquippedItem"]
400 [-]: CALL      R18 2 2      ; R18 := R18(R19)
401 [-]: TEST      R18 1        ; if R18 then PC := 425
402 [-]: JMP       425          ; PC := 425
403 [-]: GETGLOBAL R18 K29      ; R18 := 0x7b998233
404 [-]: GETGLOBAL R19 K2       ; R19 := mSelected
405 [-]: GETTABLE  R19 R19 K7   ; R19 := R19["Element"]
406 [-]: GETTABLE  R19 R19 K68  ; R19 := R19["EquippedItem"]
407 [-]: GETTABLE  R19 R19 K69  ; R19 := R19["mUpgradeType"]
408 [-]: CALL      R18 2 2      ; R18 := R18(R19)
409 [-]: TEST      R18 1        ; if R18 then PC := 425
410 [-]: JMP       425          ; PC := 425
411 [-]: GETUPVAL  R18 U18      ; R18 := U18
412 [-]: GETTABLE  R18 R18 K70  ; R18 := R18[0x52e49221]
413 [-]: GETGLOBAL R19 K63      ; R19 := 0xae91e43b
414 [-]: GETGLOBAL R20 K2       ; R20 := mSelected
415 [-]: GETTABLE  R20 R20 K7   ; R20 := R20["Element"]
416 [-]: GETTABLE  R20 R20 K68  ; R20 := R20["EquippedItem"]
417 [-]: LOADBOOL  R21 0 0      ; R21 := false
418 [-]: LOADBOOL  R22 1 0      ; R22 := true
419 [-]: CALL      R18 5 4      ; R18,R19,R20 := R18(R19,R20,R21,R22)
420 [-]: MOVE      R21 R17      ; R21 := R17
421 [-]: LOADK     R22 K71      ; R22 := " ("
422 [-]: MOVE      R23 R18      ; R23 := R18
423 [-]: LOADK     R24 K72      ; R24 := ")"
424 [-]: CONCAT    R17 R21 R24  ; R17 := R21 .. R22 .. R23 .. R24
425 [-]: GETGLOBAL R21 K29      ; R21 := 0x7b998233
426 [-]: GETGLOBAL R22 K2       ; R22 := mSelected
427 [-]: GETTABLE  R22 R22 K7   ; R22 := R22["Element"]
428 [-]: GETTABLE  R22 R22 K11  ; R22 := R22["mStoreItem"]
429 [-]: CALL      R21 2 2      ; R21 := R21(R22)
430 [-]: TEST      R21 1        ; if R21 then PC := 448
431 [-]: JMP       448          ; PC := 448
432 [-]: MOVE      R21 R17      ; R21 := R17
433 [-]: LOADK     R22 K73      ; R22 := " : "
434 [-]: GETGLOBAL R23 K67      ; R23 := 0x5f0788c4
435 [-]: GETGLOBAL R24 K63      ; R24 := 0xae91e43b
436 [-]: SELF      R24 R24 K64  ; R25 := R24; R24 := R24[0x42b04007]
437 [-]: LOADK     R26 K74      ; R26 := "/Lotus/Language/Menu/ItemSelection_Equipped"
438 [-]: LOADBOOL  R27 0 0      ; R27 := false
439 [-]: CALL      R24 4 0      ; R24,... := R24(R25,R26,R27)
440 [-]: CALL      R23 0 2      ; R23 := R23(R24,...)
441 [-]: CONCAT    R21 R21 R23  ; R21 := R21 .. R22 .. R23
442 [-]: GETGLOBAL R22 K63      ; R22 := 0xae91e43b
443 [-]: SELF      R22 R22 K75  ; R23 := R22; R22 := R22[0x20b98db3]
444 [-]: LOADK     R24 K76      ; R24 := "EquippedTitle.text"
445 [-]: MOVE      R25 R21      ; R25 := R21
446 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
447 [-]: JMP       453          ; PC := 453
448 [-]: GETGLOBAL R22 K63      ; R22 := 0xae91e43b
449 [-]: SELF      R22 R22 K75  ; R23 := R22; R22 := R22[0x20b98db3]
450 [-]: LOADK     R24 K76      ; R24 := "EquippedTitle.text"
451 [-]: LOADK     R25 K61      ; R25 := ""
452 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
453 [-]: GETGLOBAL R22 K67      ; R22 := 0x5f0788c4
454 [-]: GETTABLE  R23 R0 K77   ; R23 := R0["Name"]
455 [-]: CALL      R22 2 2      ; R22 := R22(R23)
456 [-]: GETGLOBAL R23 K29      ; R23 := 0x7b998233
457 [-]: GETTABLE  R24 R0 K42   ; R24 := R0["RawItem"]
458 [-]: CALL      R23 2 2      ; R23 := R23(R24)
459 [-]: TEST      R23 1        ; if R23 then PC := 487
460 [-]: JMP       487          ; PC := 487
461 [-]: GETGLOBAL R23 K29      ; R23 := 0x7b998233
462 [-]: GETTABLE  R24 R0 K42   ; R24 := R0["RawItem"]
463 [-]: GETTABLE  R24 R24 K38  ; R24 := R24["Item"]
464 [-]: CALL      R23 2 2      ; R23 := R23(R24)
465 [-]: TEST      R23 1        ; if R23 then PC := 487
466 [-]: JMP       487          ; PC := 487
467 [-]: GETGLOBAL R23 K29      ; R23 := 0x7b998233
468 [-]: GETTABLE  R24 R0 K42   ; R24 := R0["RawItem"]
469 [-]: GETTABLE  R24 R24 K38  ; R24 := R24["Item"]
470 [-]: GETTABLE  R24 R24 K69  ; R24 := R24["mUpgradeType"]
471 [-]: CALL      R23 2 2      ; R23 := R23(R24)
472 [-]: TEST      R23 1        ; if R23 then PC := 487
473 [-]: JMP       487          ; PC := 487
474 [-]: GETUPVAL  R23 U18      ; R23 := U18
475 [-]: GETTABLE  R23 R23 K70  ; R23 := R23[0x52e49221]
476 [-]: GETGLOBAL R24 K63      ; R24 := 0xae91e43b
477 [-]: GETTABLE  R25 R0 K42   ; R25 := R0["RawItem"]
478 [-]: GETTABLE  R25 R25 K38  ; R25 := R25["Item"]
479 [-]: LOADBOOL  R26 0 0      ; R26 := false
480 [-]: LOADBOOL  R27 1 0      ; R27 := true
481 [-]: CALL      R23 5 4      ; R23,R24,R25 := R23(R24,R25,R26,R27)
482 [-]: MOVE      R26 R22      ; R26 := R22
483 [-]: LOADK     R27 K71      ; R27 := " ("
484 [-]: MOVE      R28 R23      ; R28 := R23
485 [-]: LOADK     R29 K72      ; R29 := ")"
486 [-]: CONCAT    R22 R26 R29  ; R22 := R26 .. R27 .. R28 .. R29
487 [-]: TEST      R3 1         ; if R3 then PC := 508
488 [-]: JMP       508          ; PC := 508
489 [-]: GETGLOBAL R26 K2       ; R26 := mSelected
490 [-]: GETTABLE  R26 R26 K7   ; R26 := R26["Element"]
491 [-]: GETTABLE  R26 R26 K11  ; R26 := R26["mStoreItem"]
492 [-]: TEST      R26 0        ; if not R26 then PC := 503
493 [-]: JMP       503          ; PC := 503
494 [-]: GETGLOBAL R26 K63      ; R26 := 0xae91e43b
495 [-]: SELF      R26 R26 K75  ; R27 := R26; R26 := R26[0x20b98db3]
496 [-]: LOADK     R28 K76      ; R28 := "EquippedTitle.text"
497 [-]: MOVE      R29 R17      ; R29 := R17
498 [-]: LOADK     R30 K78      ; R30 := "\r\n > \r\n"
499 [-]: MOVE      R31 R22      ; R31 := R22
500 [-]: CONCAT    R29 R29 R31  ; R29 := R29 .. R30 .. R31
501 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
502 [-]: JMP       508          ; PC := 508
503 [-]: GETGLOBAL R26 K63      ; R26 := 0xae91e43b
504 [-]: SELF      R26 R26 K75  ; R27 := R26; R26 := R26[0x20b98db3]
505 [-]: LOADK     R28 K76      ; R28 := "EquippedTitle.text"
506 [-]: MOVE      R29 R22      ; R29 := R22
507 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
508 [-]: GETUPVAL  R26 U19      ; R26 := U19
509 [-]: LOADBOOL  R27 1 0      ; R27 := true
510 [-]: CALL      R26 2 1      ; R26(R27)
511 [-]: GETUPVAL  R26 U14      ; R26 := U14
512 [-]: MOVE      R27 R0       ; R27 := R0
513 [-]: LOADBOOL  R28 0 0      ; R28 := false
514 [-]: CALL      R26 3 1      ; R26(R27,R28)
515 [-]: JMP       553          ; PC := 553
516 [-]: GETUPVAL  R26 U0       ; R26 := U0
517 [-]: GETUPVAL  R27 U1       ; R27 := U1
518 [-]: GETTABLE  R27 R27 K5   ; R27 := R27["SELECTING_CONSUMABLES"]
519 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 553
520 [-]: JMP       553          ; PC := 553
521 [-]: GETGLOBAL R26 K2       ; R26 := mSelected
522 [-]: GETTABLE  R26 R26 K3   ; R26 := R26["Emote"]
523 [-]: EQ        1 R26 K4     ; if R26 == nil then PC := 553
524 [-]: JMP       553          ; PC := 553
525 [-]: GETGLOBAL R26 K29      ; R26 := 0x7b998233
526 [-]: GETGLOBAL R27 K48      ; R27 := _T
527 [-]: GETTABLE  R27 R27 K49  ; R27 := R27["MenuSuitAvatar"]
528 [-]: CALL      R26 2 2      ; R26 := R26(R27)
529 [-]: TEST      R26 1        ; if R26 then PC := 553
530 [-]: JMP       553          ; PC := 553
531 [-]: GETGLOBAL R26 K29      ; R26 := 0x7b998233
532 [-]: GETGLOBAL R27 K2       ; R27 := mSelected
533 [-]: GETTABLE  R27 R27 K38  ; R27 := R27["Item"]
534 [-]: GETTABLE  R27 R27 K47  ; R27 := R27["Type"]
535 [-]: CALL      R26 2 2      ; R26 := R26(R27)
536 [-]: TEST      R26 0        ; if not R26 then PC := 544
537 [-]: JMP       544          ; PC := 544
538 [-]: GETGLOBAL R26 K48      ; R26 := _T
539 [-]: GETTABLE  R26 R26 K49  ; R26 := R26["MenuSuitAvatar"]
540 [-]: SELF      R26 R26 K79  ; R27 := R26; R26 := R26[0xb13134f8]
541 [-]: LOADNIL   R28 R28      ; R28 := nil
542 [-]: CALL      R26 3 1      ; R26(R27,R28)
543 [-]: JMP       553          ; PC := 553
544 [-]: GETGLOBAL R26 K48      ; R26 := _T
545 [-]: GETTABLE  R26 R26 K49  ; R26 := R26["MenuSuitAvatar"]
546 [-]: SELF      R26 R26 K79  ; R27 := R26; R26 := R26[0xb13134f8]
547 [-]: GETGLOBAL R28 K80      ; R28 := 0xb009bbc6
548 [-]: GETGLOBAL R29 K2       ; R29 := mSelected
549 [-]: GETTABLE  R29 R29 K38  ; R29 := R29["Item"]
550 [-]: GETTABLE  R29 R29 K47  ; R29 := R29["Type"]
551 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
552 [-]: CALL      R26 0 1      ; R26(R27,...)
553 [-]: GETGLOBAL R26 K29      ; R26 := 0x7b998233
554 [-]: GETGLOBAL R27 K81      ; R27 := 0xcb79539e
555 [-]: CALL      R26 2 2      ; R26 := R26(R27)
556 [-]: TEST      R26 1        ; if R26 then PC := 570
557 [-]: JMP       570          ; PC := 570
558 [-]: GETTABLE  R26 R0 K6    ; R26 := R0["mPurchased"]
559 [-]: TEST      R26 1        ; if R26 then PC := 570
560 [-]: JMP       570          ; PC := 570
561 [-]: GETGLOBAL R26 K81      ; R26 := 0xcb79539e
562 [-]: SELF      R26 R26 K82  ; R27 := R26; R26 := R26[0x8b8fb8b7]
563 [-]: GETGLOBAL R28 K83      ; R28 := 0x0469f296
564 [-]: LOADK     R29 K84      ; R29 := "ITEM_VIEWED_ARSENAL"
565 [-]: CALL      R28 2 2      ; R28 := R28(R29)
566 [-]: GETTABLE  R29 R0 K11   ; R29 := R0["mStoreItem"]
567 [-]: SELF      R29 R29 K85  ; R30 := R29; R29 := R29[0xed4e0128]
568 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
569 [-]: CALL      R26 0 1      ; R26(R27,...)
570 [-]: TEST      R10 0        ; if not R10 then PC := 574
571 [-]: JMP       574          ; PC := 574
572 [-]: GETUPVAL  R26 U7       ; R26 := U7
573 [-]: CALL      R26 1 1      ; R26()
574 [-]: RETURN    R0 1         ; return 


; Function #128.1:
;
; Name:            
; Defined at line: 7924
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xe4162eed]
  6 [-]: LOADK     R2 K2        ; R2 := "EquipItem"
  7 [-]: LOADK     R3 K3        ; R3 := ""
  8 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  9 [-]: JMP       12           ; PC := 12
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: CALL      R0 1 1       ; R0()
 12 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 8063
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x25a6e75e]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 25
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 15 [-]: GETGLOBAL R2 K3        ; R2 := mItemsGrid
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R1 K3        ; R1 := mItemsGrid
 20 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x741d078c]
 21 [-]: CLOSURE   R3 0         ; R3 := closure(Function #129.1)
 22 [-]: MOVE      R0 R0        ; R0 := R0
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: CLOSE     R0           ; SAVE R0,...
 26 [-]: GETGLOBAL R0 K5        ; R0 := mTimerTable
 27 [-]: GETGLOBAL R1 K5        ; R1 := mTimerTable
 28 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mTimerMgr"]
 29 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xbd2e96ea]
 30 [-]: LOADK     R3 1         ; R3 := 1.000000
 31 [-]: GETUPVAL  R4 U1        ; R4 := U1
 32 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 33 [-]: SETTABLE  R0 K6 R1     ; R0["mRedrawItemsGridTimerId"] := R1
 34 [-]: RETURN    R0 1         ; return 


; Function #129.1:
;
; Name:            
; Defined at line: 8068
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mPurchasedInfo"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 78
  5 [-]: JMP       78           ; PC := 78
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mPurchasedInfo"]
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UID"]
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 78
 12 [-]: JMP       78           ; PC := 78
 13 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["LoadOutId"]
 14 [-]: LOADNIL   R3 R3        ; R3 := nil
 15 [-]: GETGLOBAL R4 K4        ; R4 := 0x6c97a788
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["SKIN_SLOT"]
 17 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETUPVAL  R4 U0        ; R4 := U0
 20 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x684d9747]
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: MOVE      R3 R4        ; R3 := R4
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0xc70965fe]
 27 [-]: MOVE      R6 R1        ; R6 := R1
 28 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 29 [-]: MOVE      R3 R4        ; R3 := R4
 30 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 31 [-]: MOVE      R5 R3        ; R5 := R3
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 1         ; if R4 then PC := 78
 34 [-]: JMP       78           ; PC := 78
 35 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3[0xba568eef]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 0         ; if not R4 then PC := 78
 38 [-]: JMP       78           ; PC := 78
 39 [-]: GETGLOBAL R4 K9        ; R4 := 0x34291f5c
 40 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x397b920f]
 41 [-]: GETTABLE  R5 R3 K11    ; R5 := R3["mExpiry"]
 42 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["sec"]
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: LOADNIL   R5 R5        ; R5 := nil
 45 [-]: LE        0 R4 K13     ; if R4 > 0.000000 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R6 K14       ; R6 := 0xae91e43b
 48 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x42b04007]
 49 [-]: LOADK     R8 K16       ; R8 := "/Lotus/Language/Menu/Expired"
 50 [-]: LOADBOOL  R9 0 0       ; R9 := false
 51 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 52 [-]: MOVE      R5 R6        ; R5 := R6
 53 [-]: JMP       59           ; PC := 59
 54 [-]: GETUPVAL  R6 U1        ; R6 := U1
 55 [-]: GETTABLE  R6 R6 K17    ; R6 := R6[0x10e5bb7a]
 56 [-]: MOVE      R7 R4        ; R7 := R4
 57 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 58 [-]: MOVE      R5 R6        ; R5 := R6
 59 [-]: GETGLOBAL R6 K18       ; R6 := Icons
 60 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["TIMER"]
 61 [-]: MOVE      R7 R5        ; R7 := R5
 62 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 63 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["Name"]
 64 [-]: LOADK     R8 K21       ; R8 := "<p><font color=\"#FFFFFF\"><b>"
 65 [-]: MOVE      R9 R7        ; R9 := R7
 66 [-]: LOADK     R10 K22      ; R10 := "</b><br>"
 67 [-]: MOVE      R11 R6       ; R11 := R6
 68 [-]: LOADK     R12 K23      ; R12 := "</font></p>"
 69 [-]: CONCAT    R7 R8 R12    ; R7 := R8 .. R9 .. R10 .. R11 .. R12
 70 [-]: GETGLOBAL R8 K14       ; R8 := 0xae91e43b
 71 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8[0x5f56eeab]
 72 [-]: GETTABLE  R10 R0 K25   ; R10 := R0["mClipName"]
 73 [-]: LOADK     R11 K26      ; R11 := ".Name"
 74 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 75 [-]: LOADK     R11 29       ; R11 := 29.000000
 76 [-]: MOVE      R12 R7       ; R12 := R7
 77 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 78 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 8102
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mLists
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := mLists
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mCosmeticsScrollBar"]
 10 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mHeight"]
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0xd718f59b]
 13 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0x0db7934d]
 18 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 19 [-]: LOADK     R4 5         ; R4 := 5.000000
 20 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 21 [-]: GETGLOBAL R3 K1        ; R3 := mLists
 22 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mCosmeticsList"]
 23 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mInitListYPos"]
 24 [-]: GETGLOBAL R4 K1        ; R4 := mLists
 25 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mCosmeticsList"]
 26 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mInitialY"]
 27 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 28 [-]: SUB       R3 R3 K10    ; R3 := R3 - 37.000000
 29 [-]: GETUPVAL  R4 U0        ; R4 := U0
 30 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0xe5e5a417]
 31 [-]: GETGLOBAL R5 K6        ; R5 := 0xae91e43b
 32 [-]: DIV       R6 R0 K12    ; R6 := R0 / 2.000000
 33 [-]: ADD       R6 R3 R6     ; R6 := R3 + R6
 34 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 35 [-]: NEWTABLE  R5 4 0       ; R5 := {}
 36 [-]: GETGLOBAL R6 K13       ; R6 := 0x7cf8742c
 37 [-]: GETGLOBAL R7 K14       ; R7 := 0x8e826993
 38 [-]: GETGLOBAL R8 K15       ; R8 := 0xc1607267
 39 [-]: GETGLOBAL R9 K16       ; R9 := 0x0d7545ad
 40 [-]: SETLIST   R5 4 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 4
 41 [-]: LOADK     R6 1         ; R6 := 1.000000
 42 [-]: LEN       R7 R5        ; R7 := # R5
 43 [-]: LOADK     R8 1         ; R8 := 1.000000
 44 [-]: FORPREP   R6 61        ; R6 -= R8; PC := 61
 45 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 46 [-]: SELF      R11 R10 K17  ; R12 := R10; R11 := R10[0x830eea67]
 47 [-]: GETGLOBAL R13 K18      ; R13 := 0x6c97a788
 48 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["VISIBILITY_SIZE"]
 49 [-]: MOVE      R14 R1       ; R14 := R1
 50 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 51 [-]: SELF      R11 R10 K17  ; R12 := R10; R11 := R10[0x830eea67]
 52 [-]: GETGLOBAL R13 K18      ; R13 := 0x6c97a788
 53 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["VISIBILITY_CENTER"]
 54 [-]: MOVE      R14 R4       ; R14 := R4
 55 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 56 [-]: SELF      R11 R10 K17  ; R12 := R10; R11 := R10[0x830eea67]
 57 [-]: GETGLOBAL R13 K18      ; R13 := 0x6c97a788
 58 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["VISIBILITY_FADE_SIZE"]
 59 [-]: MOVE      R14 R2       ; R14 := R2
 60 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 61 [-]: FORLOOP   R6 45        ; R6 += R8; if R6 <= R7 then begin PC := 45; R9 := R6 end
 62 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 8122
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mItemsGrid
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 66
  5 [-]: JMP       66           ; PC := 66
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xd718f59b]
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  9 [-]: GETGLOBAL R2 K1        ; R2 := mItemsGrid
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mScrollBar"]
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mHeight"]
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0xe5e5a417]
 15 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 16 [-]: LOADK     R3 605       ; R3 := 605.000000
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: GETGLOBAL R2 K7        ; R2 := 0xae09323f
 19 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 20 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 21 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["VISIBILITY_SIZE"]
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: GETGLOBAL R2 K7        ; R2 := 0xae09323f
 25 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 26 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 27 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["VISIBILITY_CENTER"]
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 30 [-]: GETGLOBAL R2 K12       ; R2 := 0x7e155d6a
 31 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 32 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 33 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["VISIBILITY_SIZE"]
 34 [-]: MOVE      R5 R0        ; R5 := R0
 35 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 36 [-]: GETGLOBAL R2 K12       ; R2 := 0x7e155d6a
 37 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 38 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 39 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["VISIBILITY_CENTER"]
 40 [-]: MOVE      R5 R1        ; R5 := R1
 41 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 42 [-]: GETGLOBAL R2 K13       ; R2 := 0x119fdfe2
 43 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 44 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 45 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["VISIBILITY_SIZE"]
 46 [-]: MOVE      R5 R0        ; R5 := R0
 47 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 48 [-]: GETGLOBAL R2 K13       ; R2 := 0x119fdfe2
 49 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 50 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 51 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["VISIBILITY_CENTER"]
 52 [-]: MOVE      R5 R1        ; R5 := R1
 53 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 54 [-]: GETGLOBAL R2 K14       ; R2 := 0x2c424c91
 55 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 56 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 57 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["VISIBILITY_SIZE"]
 58 [-]: MOVE      R5 R0        ; R5 := R0
 59 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 60 [-]: GETGLOBAL R2 K14       ; R2 := 0x2c424c91
 61 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x830eea67]
 62 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 63 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["VISIBILITY_CENTER"]
 64 [-]: MOVE      R5 R1        ; R5 := R1
 65 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 66 [-]: GETUPVAL  R2 U0        ; R2 := U0
 67 [-]: GETTABLE  R2 R2 K15    ; R2 := R2[0x44537adf]
 68 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 69 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
 70 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 71 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x67bc869f]
 72 [-]: LOADK     R6 K17       ; R6 := "LeftFade"
 73 [-]: LOADK     R7 13        ; R7 := 13.000000
 74 [-]: MOVE      R8 R3        ; R8 := R3
 75 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 76 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 77 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x67bc869f]
 78 [-]: LOADK     R6 K18       ; R6 := "RightFade"
 79 [-]: LOADK     R7 13        ; R7 := 13.000000
 80 [-]: MOVE      R8 R3        ; R8 := R3
 81 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 82 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 8142
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Current"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= 3.000000 then PC := 19
  4 [-]: JMP       19           ; PC := 19
  5 [-]: GETGLOBAL R0 K3        ; R0 := mSelected
  6 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["Element"]
  7 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETGLOBAL R0 K3        ; R0 := mSelected
 10 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["Element"]
 11 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["LoadOutId"]
 12 [-]: EQ        0 R0 K7      ; if R0 ~= 4.000000 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETGLOBAL R0 K3        ; R0 := mSelected
 15 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["Element"]
 16 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["LoadOutType"]
 17 [-]: EQ        0 R0 K9      ; if R0 ~= 8.000000 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 20
 20 [-]: LOADBOOL  R0 1 0       ; R0 := true
 21 [-]: RETURN    R0 2         ; return R0
 22 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 8146
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.Components.CategorizedGrid"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K3     ; R1 := R0[0x67d7b715]
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K5        ; R3 := "Item"
  7 [-]: LOADK     R4 4         ; R4 := 4.000000
  8 [-]: LOADK     R5 3         ; R5 := 3.000000
  9 [-]: LOADNIL   R6 R6        ; R6 := nil
 10 [-]: LOADK     R7 K6        ; R7 := "SortMenu"
 11 [-]: CALL      R1 7 2       ; R1 := R1(R2,R3,R4,R5,R6,R7)
 12 [-]: SETGLOBAL R1 K2        ; mItemsGrid := R1
 13 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 14 [-]: SETTABLE  R1 K7 K8     ; R1["mFilterBy"] := 0.000000
 15 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x91a24e4b]
 18 [-]: LOADK     R4 K11       ; R4 := "Item.Name.Tf"
 19 [-]: LOADK     R5 1         ; R5 := 1.000000
 20 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 21 [-]: SETTABLE  R1 K9 R2     ; R1["mOriginalNameY"] := R2
 22 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 23 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x91a24e4b]
 25 [-]: LOADK     R4 K11       ; R4 := "Item.Name.Tf"
 26 [-]: LOADK     R5 34        ; R5 := 34.000000
 27 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 28 [-]: SETTABLE  R1 K12 R2    ; R1["mOriginalNameHeight"] := R2
 29 [-]: GETGLOBAL R1 K13       ; R1 := 0x34291f5c
 30 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[0xe6b41adb]
 31 [-]: CALL      R1 1 2       ; R1 := R1()
 32 [-]: TEST      R1 0         ; if not R1 then PC := 44
 33 [-]: JMP       44           ; PC := 44
 34 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 35 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 36 [-]: LOADK     R3 K16       ; R3 := "ItemSelected"
 37 [-]: LOADK     R4 K17       ; R4 := "ItemFocused"
 38 [-]: LOADK     R5 K18       ; R5 := "ItemUnfocused"
 39 [-]: LOADK     R6 K19       ; R6 := "ItemPressed"
 40 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 41 [-]: LOADK     R9 K20       ; R9 := "ItemReleasedOutside"
 42 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 43 [-]: JMP       50           ; PC := 50
 44 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 45 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 46 [-]: LOADK     R3 K16       ; R3 := "ItemSelected"
 47 [-]: LOADK     R4 K17       ; R4 := "ItemFocused"
 48 [-]: LOADK     R5 K18       ; R5 := "ItemUnfocused"
 49 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 50 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 51 [-]: SETTABLE  R1 K21 K22   ; R1["mColumnSeparation"] := 205.000000
 52 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 53 [-]: SETTABLE  R1 K23 K24   ; R1["mRowSeparation"] := 195.000000
 54 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 55 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x3bc79f4f]
 56 [-]: LOADK     R3 K26       ; R3 := "ScrollBar"
 57 [-]: LOADK     R4 -10       ; R4 := -10.000000
 58 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 59 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 60 [-]: SELF      R1 R1 K27    ; R2 := R1; R1 := R1[0x7220acb6]
 61 [-]: CALL      R1 2 1       ; R1(R2)
 62 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 63 [-]: SETTABLE  R1 K28 K29   ; R1["mInitialDepth"] := 2000.000000
 64 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 65 [-]: SETTABLE  R1 K30 K8    ; R1["mElementDelayTime"] := 0.000000
 66 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 67 [-]: SETTABLE  R1 K31 K32   ; R1["mSelectElementsOnFocus"] := false
 68 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 69 [-]: SETTABLE  R1 K33 K34   ; R1["mAddFillerElements"] := true
 70 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 71 [-]: SETTABLE  R1 K35 K32   ; R1["mDiegeticMode"] := false
 72 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 73 [-]: SETTABLE  R1 K36 K37   ; R1["mSelectedScale"] := 100.000000
 74 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 75 [-]: SETTABLE  R1 K38 K39   ; R1["mScrollBarHorizontalOffset"] := nil
 76 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 77 [-]: SETTABLE  R1 K40 K39   ; R1["mSortMenuHorizontalOffset"] := nil
 78 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 79 [-]: SETTABLE  R1 K41 K39   ; R1["mSortMenuVerticalOffset"] := nil
 80 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 81 [-]: SETTABLE  R1 K42 K8    ; R1["mSmoothScrollExtraSpace"] := 0.000000
 82 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 83 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
 84 [-]: GETTABLE  R2 R2 K44    ; R2 := R2["SetSortBy_Internal"]
 85 [-]: SETTABLE  R1 K43 R2    ; R1["_ItemsGrid_SetSortBy_Internal"] := R2
 86 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 87 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 88 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x91a24e4b]
 89 [-]: LOADK     R4 K46       ; R4 := "Item.Btn"
 90 [-]: LOADK     R5 12        ; R5 := 12.000000
 91 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 92 [-]: SETTABLE  R1 K45 R2    ; R1["mElementWidth"] := R2
 93 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
 94 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 95 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x91a24e4b]
 96 [-]: LOADK     R4 K46       ; R4 := "Item.Btn"
 97 [-]: LOADK     R5 13        ; R5 := 13.000000
 98 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 99 [-]: SETTABLE  R1 K47 R2    ; R1["mElementHeight"] := R2
100 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
101 [-]: CLOSURE   R2 0         ; R2 := closure(Function #133.1)
102 [-]: SETTABLE  R1 K44 R2    ; R1["SetSortBy_Internal"] := R2
103 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
104 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
105 [-]: GETTABLE  R2 R2 K49    ; R2 := R2["OnFilteredElementsReady"]
106 [-]: SETTABLE  R1 K48 R2    ; R1["_ItemsGrid_OnFilteredElementsReady"] := R2
107 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
108 [-]: CLOSURE   R2 1         ; R2 := closure(Function #133.2)
109 [-]: SETTABLE  R1 K49 R2    ; R1["OnFilteredElementsReady"] := R2
110 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
111 [-]: CLOSURE   R2 2         ; R2 := closure(Function #133.3)
112 [-]: GETUPVAL  R0 U0        ; R0 := U0
113 [-]: SETTABLE  R1 K50 R2    ; R1["mOnFocusedCallback"] := R2
114 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
115 [-]: CLOSURE   R2 3         ; R2 := closure(Function #133.4)
116 [-]: SETTABLE  R1 K51 R2    ; R1["mOnUnfocusedCallback"] := R2
117 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
118 [-]: CLOSURE   R2 4         ; R2 := closure(Function #133.5)
119 [-]: GETUPVAL  R0 U1        ; R0 := U1
120 [-]: GETUPVAL  R0 U2        ; R0 := U2
121 [-]: GETUPVAL  R0 U0        ; R0 := U0
122 [-]: GETUPVAL  R0 U3        ; R0 := U3
123 [-]: GETUPVAL  R0 U4        ; R0 := U4
124 [-]: GETUPVAL  R0 U5        ; R0 := U5
125 [-]: GETUPVAL  R0 U6        ; R0 := U6
126 [-]: SETTABLE  R1 K52 R2    ; R1["mOnSelectedCallback"] := R2
127 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
128 [-]: CLOSURE   R2 5         ; R2 := closure(Function #133.6)
129 [-]: GETUPVAL  R0 U7        ; R0 := U7
130 [-]: GETUPVAL  R0 U0        ; R0 := U0
131 [-]: GETUPVAL  R0 U8        ; R0 := U8
132 [-]: GETUPVAL  R0 U1        ; R0 := U1
133 [-]: GETUPVAL  R0 U2        ; R0 := U2
134 [-]: GETUPVAL  R0 U9        ; R0 := U9
135 [-]: GETUPVAL  R0 U3        ; R0 := U3
136 [-]: SETTABLE  R1 K53 R2    ; R1["mElementDrawCallback"] := R2
137 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
138 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
139 [-]: GETTABLE  R2 R2 K55    ; R2 := R2["FocusElementInDirection"]
140 [-]: SETTABLE  R1 K54 R2    ; R1["_mItemsGrid_FocusElementInDirection"] := R2
141 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
142 [-]: CLOSURE   R2 6         ; R2 := closure(Function #133.7)
143 [-]: SETTABLE  R1 K55 R2    ; R1["FocusElementInDirection"] := R2
144 [-]: GETGLOBAL R1 K2        ; R1 := mItemsGrid
145 [-]: CLOSURE   R2 7         ; R2 := closure(Function #133.8)
146 [-]: GETUPVAL  R0 U10       ; R0 := U10
147 [-]: SETTABLE  R1 K56 R2    ; R1["AdditionalFilterFunction"] := R2
148 [-]: GETGLOBAL R1 K57       ; R1 := mTimerTable
149 [-]: GETTABLE  R1 R1 K58    ; R1 := R1["mRedrawItemsGridTimerId"]
150 [-]: EQ        1 R1 K39     ; if R1 == nil then PC := 158
151 [-]: JMP       158          ; PC := 158
152 [-]: GETGLOBAL R1 K57       ; R1 := mTimerTable
153 [-]: GETTABLE  R1 R1 K59    ; R1 := R1["mTimerMgr"]
154 [-]: SELF      R1 R1 K60    ; R2 := R1; R1 := R1[0x775c858b]
155 [-]: GETGLOBAL R3 K57       ; R3 := mTimerTable
156 [-]: GETTABLE  R3 R3 K58    ; R3 := R3["mRedrawItemsGridTimerId"]
157 [-]: CALL      R1 3 1       ; R1(R2,R3)
158 [-]: CLOSURE   R1 8         ; R1 := closure(Function #133.9)
159 [-]: GETUPVAL  R0 U0        ; R0 := U0
160 [-]: GETUPVAL  R0 U11       ; R0 := U11
161 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
162 [-]: SELF      R2 R2 K61    ; R3 := R2; R2 := R2[0xb029c588]
163 [-]: NEWTABLE  R4 0 3       ; R4 := {}
164 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
165 [-]: SELF      R5 R5 K63    ; R6 := R5; R5 := R5[0x42b04007]
166 [-]: LOADK     R7 K64       ; R7 := "/Lotus/Language/Menu/SortBy_Name"
167 [-]: LOADBOOL  R8 0 0       ; R8 := false
168 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
169 [-]: SETTABLE  R4 K62 R5    ; R4["Name"] := R5
170 [-]: SETTABLE  R4 K65 K66   ; R4["SortId"] := "NAME"
171 [-]: CLOSURE   R5 9         ; R5 := closure(Function #133.10)
172 [-]: MOVE      R0 R1        ; R0 := R1
173 [-]: SETTABLE  R4 K67 R5    ; R4[0x03f57322] := R5
174 [-]: CALL      R2 3 1       ; R2(R3,R4)
175 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
176 [-]: SELF      R2 R2 K61    ; R3 := R2; R2 := R2[0xb029c588]
177 [-]: NEWTABLE  R4 0 3       ; R4 := {}
178 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
179 [-]: SELF      R5 R5 K63    ; R6 := R5; R5 := R5[0x42b04007]
180 [-]: LOADK     R7 K68       ; R7 := "/Lotus/Language/Menu/SortBy_Level"
181 [-]: LOADBOOL  R8 0 0       ; R8 := false
182 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
183 [-]: SETTABLE  R4 K62 R5    ; R4["Name"] := R5
184 [-]: SETTABLE  R4 K65 K69   ; R4["SortId"] := "RANK"
185 [-]: CLOSURE   R5 10        ; R5 := closure(Function #133.11)
186 [-]: MOVE      R0 R1        ; R0 := R1
187 [-]: SETTABLE  R4 K67 R5    ; R4[0x03f57322] := R5
188 [-]: CALL      R2 3 1       ; R2(R3,R4)
189 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
190 [-]: SELF      R2 R2 K61    ; R3 := R2; R2 := R2[0xb029c588]
191 [-]: NEWTABLE  R4 0 3       ; R4 := {}
192 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
193 [-]: SELF      R5 R5 K63    ; R6 := R5; R5 := R5[0x42b04007]
194 [-]: LOADK     R7 K70       ; R7 := "/Lotus/Language/Menu/SortBy_FormaCount"
195 [-]: LOADBOOL  R8 0 0       ; R8 := false
196 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
197 [-]: SETTABLE  R4 K62 R5    ; R4["Name"] := R5
198 [-]: SETTABLE  R4 K65 K71   ; R4["SortId"] := "FORMA"
199 [-]: CLOSURE   R5 11        ; R5 := closure(Function #133.12)
200 [-]: MOVE      R0 R1        ; R0 := R1
201 [-]: SETTABLE  R4 K67 R5    ; R4[0x03f57322] := R5
202 [-]: CALL      R2 3 1       ; R2(R3,R4)
203 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
204 [-]: SELF      R2 R2 K61    ; R3 := R2; R2 := R2[0xb029c588]
205 [-]: NEWTABLE  R4 0 3       ; R4 := {}
206 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
207 [-]: SELF      R5 R5 K63    ; R6 := R5; R5 := R5[0x42b04007]
208 [-]: LOADK     R7 K72       ; R7 := "/Lotus/Language/Menu/SortBy_Usage"
209 [-]: LOADBOOL  R8 0 0       ; R8 := false
210 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
211 [-]: SETTABLE  R4 K62 R5    ; R4["Name"] := R5
212 [-]: SETTABLE  R4 K65 K73   ; R4["SortId"] := "USAGE"
213 [-]: CLOSURE   R5 12        ; R5 := closure(Function #133.13)
214 [-]: MOVE      R0 R1        ; R0 := R1
215 [-]: SETTABLE  R4 K67 R5    ; R4[0x03f57322] := R5
216 [-]: CALL      R2 3 1       ; R2(R3,R4)
217 [-]: GETGLOBAL R2 K2        ; R2 := mItemsGrid
218 [-]: SELF      R2 R2 K61    ; R3 := R2; R2 := R2[0xb029c588]
219 [-]: NEWTABLE  R4 0 3       ; R4 := {}
220 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
221 [-]: SELF      R5 R5 K63    ; R6 := R5; R5 := R5[0x42b04007]
222 [-]: LOADK     R7 K74       ; R7 := "/Lotus/Language/Menu/Loadout_Lens"
223 [-]: LOADBOOL  R8 0 0       ; R8 := false
224 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
225 [-]: SETTABLE  R4 K62 R5    ; R4["Name"] := R5
226 [-]: SETTABLE  R4 K65 K75   ; R4["SortId"] := "LENS"
227 [-]: CLOSURE   R5 13        ; R5 := closure(Function #133.14)
228 [-]: MOVE      R0 R1        ; R0 := R1
229 [-]: SETTABLE  R4 K67 R5    ; R4[0x03f57322] := R5
230 [-]: CALL      R2 3 1       ; R2(R3,R4)
231 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
232 [-]: SELF      R2 R2 K76    ; R3 := R2; R2 := R2[0x492f9da2]
233 [-]: CALL      R2 2 2       ; R2 := R2(R3)
234 [-]: GETGLOBAL R3 K77       ; R3 := 0x25d99d89
235 [-]: SELF      R3 R3 K78    ; R4 := R3; R3 := R3[0xb6b7ca1e]
236 [-]: MOVE      R5 R2        ; R5 := R2
237 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
238 [-]: EQ        0 R3 K79     ; if R3 ~= "" then PC := 241
239 [-]: JMP       241          ; PC := 241
240 [-]: LOADK     R3 K66       ; R3 := "NAME"
241 [-]: GETGLOBAL R4 K2        ; R4 := mItemsGrid
242 [-]: SELF      R4 R4 K80    ; R5 := R4; R4 := R4[0x60125a4f]
243 [-]: MOVE      R6 R3        ; R6 := R3
244 [-]: CALL      R4 3 1       ; R4(R5,R6)
245 [-]: GETUPVAL  R4 U12       ; R4 := U12
246 [-]: CALL      R4 1 1       ; R4()
247 [-]: GETUPVAL  R4 U13       ; R4 := U13
248 [-]: CALL      R4 1 1       ; R4()
249 [-]: RETURN    R0 1         ; return 


; Function #133.1:
;
; Name:            
; Defined at line: 8175
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mSelectedElement"]
  2 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mSelectedElement"]
  5 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Id"]
  6 [-]: SETTABLE  R0 K2 R3     ; R0["mEquippedItemId"] := R3
  7 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0xf5d6b8dd]
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: MOVE      R6 R2        ; R6 := R2
 10 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 11 [-]: RETURN    R0 1         ; return 


; Function #133.2:
;
; Name:            
; Defined at line: 8184
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x5fbddc1a]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mEquippedItemId"]
  7 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 25
  8 [-]: JMP       25           ; PC := 25
  9 [-]: GETGLOBAL R1 K4        ; R1 := mItemsGrid
 10 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x5b3d9c32]
 11 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mEquippedItemId"]
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: SETTABLE  R0 K6 R1     ; R0["mIndexOnRedraw"] := R1
 16 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0[0x4c4f8717]
 17 [-]: SUB       R4 R1 K8     ; R4 := R1 - 1.000000
 18 [-]: GETGLOBAL R5 K4        ; R5 := mItemsGrid
 19 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mColumns"]
 20 [-]: MOD       R4 R4 R5     ; R4 := R4 % R5
 21 [-]: SUB       R4 R1 R4     ; R4 := R1 - R4
 22 [-]: LOADBOOL  R5 1 0       ; R5 := true
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: SETTABLE  R0 K2 K3     ; R0["mEquippedItemId"] := nil
 25 [-]: SELF      R2 R0 K10    ; R3 := R0; R2 := R0[0x2db8c40c]
 26 [-]: CALL      R2 2 1       ; R2(R3)
 27 [-]: RETURN    R0 1         ; return 


; Function #133.3:
;
; Name:            
; Defined at line: 8206
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Filler"]
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x91e13703]
 10 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 K5        ; R4 := ".Background"
 12 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 13 [-]: LOADK     R4 K6        ; R4 := "RectEdgeColor"
 14 [-]: GETGLOBAL R5 K7        ; R5 := 0x0032441c
 15 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["UIColorObject_Yellow"]
 16 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["r"]
 17 [-]: GETGLOBAL R6 K7        ; R6 := 0x0032441c
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["UIColorObject_Yellow"]
 19 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["g"]
 20 [-]: GETGLOBAL R7 K7        ; R7 := 0x0032441c
 21 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["UIColorObject_Yellow"]
 22 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["b"]
 23 [-]: LOADK     R8 1         ; R8 := 1.000000
 24 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 25 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xf64b7262]
 27 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 28 [-]: LOADK     R4 K13       ; R4 := "NameBg"
 29 [-]: LOADK     R5 9         ; R5 := 9.000000
 30 [-]: GETGLOBAL R6 K7        ; R6 := 0x0032441c
 31 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["UIColor_Yellow"]
 32 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 33 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 34 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xf64b7262]
 35 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 36 [-]: LOADK     R4 K15       ; R4 := "Name"
 37 [-]: LOADK     R5 9         ; R5 := 9.000000
 38 [-]: GETGLOBAL R6 K7        ; R6 := 0x0032441c
 39 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["UIColor_Black"]
 40 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 41 [-]: GETUPVAL  R1 U0        ; R1 := U0
 42 [-]: GETTABLE  R1 R1 K17    ; R1 := R1[0x659d451f]
 43 [-]: GETGLOBAL R2 K7        ; R2 := 0x0032441c
 44 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["UISound_Focus"]
 45 [-]: CALL      R1 2 1       ; R1(R2)
 46 [-]: RETURN    R0 1         ; return 


; Function #133.4:
;
; Name:            
; Defined at line: 8218
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Filler"]
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x91e13703]
 10 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 K5        ; R4 := ".Background"
 12 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 13 [-]: LOADK     R4 K6        ; R4 := "RectEdgeColor"
 14 [-]: GETGLOBAL R5 K7        ; R5 := 0x0032441c
 15 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["UIColorObject_White"]
 16 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["r"]
 17 [-]: GETGLOBAL R6 K7        ; R6 := 0x0032441c
 18 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["UIColorObject_White"]
 19 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["g"]
 20 [-]: GETGLOBAL R7 K7        ; R7 := 0x0032441c
 21 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["UIColorObject_White"]
 22 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["b"]
 23 [-]: LOADK     R8 K12       ; R8 := 0.200000
 24 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 25 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0xf64b7262]
 27 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 28 [-]: LOADK     R4 K14       ; R4 := "NameBg"
 29 [-]: LOADK     R5 9         ; R5 := 9.000000
 30 [-]: GETGLOBAL R6 K7        ; R6 := 0x0032441c
 31 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["UIColor_White"]
 32 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 33 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 34 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0xf64b7262]
 35 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 36 [-]: LOADK     R4 K16       ; R4 := "Name"
 37 [-]: LOADK     R5 9         ; R5 := 9.000000
 38 [-]: GETGLOBAL R6 K7        ; R6 := 0x0032441c
 39 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["UIColor_DarkGrey"]
 40 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 41 [-]: GETGLOBAL R1 K18       ; R1 := _T
 42 [-]: SETTABLE  R1 K19 K1    ; R1["gToolTip"] := nil
 43 [-]: RETURN    R0 1         ; return 


; Function #133.5:
;
; Name:            
; Defined at line: 8229
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Filler"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["SWAPPING_ITEM"]
  8 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["SELECTING_CONSUMABLES"]
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 84
 14 [-]: JMP       84           ; PC := 84
 15 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mStoreItem"]
 16 [-]: TEST      R2 0         ; if not R2 then PC := 78
 17 [-]: JMP       78           ; PC := 78
 18 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["Name"]
 19 [-]: EQ        0 R2 K5      ; if R2 ~= nil then PC := 31
 20 [-]: JMP       31           ; PC := 31
 21 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 22 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x42b04007]
 23 [-]: GETGLOBAL R5 K8        ; R5 := 0x64fb1586
 24 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mStoreItem"]
 25 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6[0xd3a9d01f]
 26 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 27 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 28 [-]: LOADBOOL  R6 0 0       ; R6 := false
 29 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 30 [-]: MOVE      R2 R3        ; R2 := R3
 31 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["PetGenderBreedInfo"]
 32 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: MOVE      R3 R2        ; R3 := R2
 35 [-]: LOADK     R4 K11       ; R4 := " ("
 36 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["PetGenderBreedInfo"]
 37 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["BreedName"]
 38 [-]: LOADK     R6 K13       ; R6 := ")"
 39 [-]: CONCAT    R2 R3 R6     ; R2 := R3 .. R4 .. R5 .. R6
 40 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["LocalizedDesc"]
 41 [-]: GETUPVAL  R4 U2        ; R4 := U2
 42 [-]: GETTABLE  R4 R4 K15    ; R4 := R4[0x06d055f9]
 43 [-]: GETUPVAL  R5 U3        ; R5 := U3
 44 [-]: LOADK     R6 K16       ; R6 := "Arial Unicode MS"
 45 [-]: LOADK     R7 K17       ; R7 := "Noto Sans"
 46 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 47 [-]: LOADK     R5 18        ; R5 := 18.000000
 48 [-]: GETGLOBAL R6 K6        ; R6 := 0xae91e43b
 49 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6[0x5f56eeab]
 50 [-]: LOADK     R8 K19       ; R8 := "CosmeticDesc"
 51 [-]: LOADK     R9 41        ; R9 := 41.000000
 52 [-]: MOVE      R10 R4       ; R10 := R4
 53 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 54 [-]: GETGLOBAL R6 K6        ; R6 := 0xae91e43b
 55 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0x67bc869f]
 56 [-]: LOADK     R8 K19       ; R8 := "CosmeticDesc"
 57 [-]: LOADK     R9 42        ; R9 := 42.000000
 58 [-]: MOVE      R10 R5       ; R10 := R5
 59 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 60 [-]: LOADK     R6 K21       ; R6 := "<p><font face=\""
 61 [-]: MOVE      R7 R4        ; R7 := R4
 62 [-]: LOADK     R8 K22       ; R8 := "\"><b>"
 63 [-]: GETGLOBAL R9 K23       ; R9 := 0x7f5022cf
 64 [-]: GETTABLE  R9 R9 K24    ; R9 := R9[0x3f3e4d12]
 65 [-]: MOVE      R10 R2       ; R10 := R2
 66 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 67 [-]: LOADK     R10 K25      ; R10 := "</b><br>"
 68 [-]: MOVE      R11 R3       ; R11 := R3
 69 [-]: LOADK     R12 K26      ; R12 := "</font></p>"
 70 [-]: CONCAT    R6 R6 R12    ; R6 := R6 .. R7 .. R8 .. R9 .. R10 .. R11 .. R12
 71 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 72 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x5f56eeab]
 73 [-]: LOADK     R9 K19       ; R9 := "CosmeticDesc"
 74 [-]: LOADK     R10 29       ; R10 := 29.000000
 75 [-]: MOVE      R11 R6       ; R11 := R6
 76 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 77 [-]: JMP       84           ; PC := 84
 78 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 79 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x5f56eeab]
 80 [-]: LOADK     R9 K19       ; R9 := "CosmeticDesc"
 81 [-]: LOADK     R10 29       ; R10 := 29.000000
 82 [-]: LOADK     R11 K27      ; R11 := ""
 83 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 84 [-]: GETUPVAL  R7 U4        ; R7 := U4
 85 [-]: SETTABLE  R7 K28 R1    ; R7["AutoSelect"] := R1
 86 [-]: GETGLOBAL R7 K29       ; R7 := mPendingSelection
 87 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 103
 88 [-]: JMP       103          ; PC := 103
 89 [-]: GETGLOBAL R7 K30       ; R7 := mLoaders
 90 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["mSelectionLoader"]
 91 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["mState"]
 92 [-]: GETGLOBAL R8 K33       ; R8 := LoaderState
 93 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["LS_LOADING"]
 94 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 103
 95 [-]: JMP       103          ; PC := 103
 96 [-]: GETUPVAL  R7 U4        ; R7 := U4
 97 [-]: GETGLOBAL R8 K36       ; R8 := 0x55156ff7
 98 [-]: CALL      R8 1 2       ; R8 := R8()
 99 [-]: SETTABLE  R7 K35 R8    ; R7["Time"] := R8
100 [-]: GETUPVAL  R7 U4        ; R7 := U4
101 [-]: SETTABLE  R7 K37 K38   ; R7["DoubleClick"] := true
102 [-]: JMP       389          ; PC := 389
103 [-]: GETUPVAL  R7 U5        ; R7 := U5
104 [-]: MOVE      R8 R0        ; R8 := R0
105 [-]: CALL      R7 2 1       ; R7(R8)
106 [-]: NEWTABLE  R7 0 0       ; R7 := {}
107 [-]: SETGLOBAL R7 K39       ; mPendingItems := R7
108 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["EquippedItem"]
109 [-]: EQ        1 R7 K5      ; if R7 == nil then PC := 119
110 [-]: JMP       119          ; PC := 119
111 [-]: NEWTABLE  R7 0 0       ; R7 := {}
112 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["EquippedItem"]
113 [-]: GETTABLE  R8 R8 K41    ; R8 := R8["mItemType"]
114 [-]: SELF      R8 R8 K42    ; R9 := R8; R8 := R8[0xed4e0128]
115 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
116 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
117 [-]: SETGLOBAL R7 K39       ; mPendingItems := R7
118 [-]: JMP       193          ; PC := 193
119 [-]: GETTABLE  R7 R0 K43    ; R7 := R0["RawItem"]
120 [-]: EQ        1 R7 K5      ; if R7 == nil then PC := 147
121 [-]: JMP       147          ; PC := 147
122 [-]: GETTABLE  R7 R0 K43    ; R7 := R0["RawItem"]
123 [-]: GETTABLE  R7 R7 K44    ; R7 := R7["UID"]
124 [-]: EQ        1 R7 K5      ; if R7 == nil then PC := 147
125 [-]: JMP       147          ; PC := 147
126 [-]: GETTABLE  R7 R0 K43    ; R7 := R0["RawItem"]
127 [-]: GETTABLE  R7 R7 K44    ; R7 := R7["UID"]
128 [-]: EQ        1 R7 K27     ; if R7 == "" then PC := 147
129 [-]: JMP       147          ; PC := 147
130 [-]: GETGLOBAL R7 K45       ; R7 := 0x25d99d89
131 [-]: SELF      R7 R7 K46    ; R8 := R7; R7 := R7[0xd08c3966]
132 [-]: GETTABLE  R9 R0 K43    ; R9 := R0["RawItem"]
133 [-]: GETTABLE  R9 R9 K44    ; R9 := R9["UID"]
134 [-]: LOADK     R10 0        ; R10 := 0.000000
135 [-]: LOADK     R11 0        ; R11 := 0.000000
136 [-]: GETTABLE  R12 R0 K48   ; R12 := R0["Category"]
137 [-]: CALL      R7 6 2       ; R7 := R7(R8,R9,R10,R11,R12)
138 [-]: SETGLOBAL R7 K39       ; mPendingItems := R7
139 [-]: GETGLOBAL R7 K49       ; R7 := 0x7b998233
140 [-]: GETGLOBAL R8 K39       ; R8 := mPendingItems
141 [-]: CALL      R7 2 2       ; R7 := R7(R8)
142 [-]: TEST      R7 0         ; if not R7 then PC := 193
143 [-]: JMP       193          ; PC := 193
144 [-]: NEWTABLE  R7 0 0       ; R7 := {}
145 [-]: SETGLOBAL R7 K39       ; mPendingItems := R7
146 [-]: JMP       193          ; PC := 193
147 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["mStoreItem"]
148 [-]: EQ        1 R7 K5      ; if R7 == nil then PC := 193
149 [-]: JMP       193          ; PC := 193
150 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["mStoreItem"]
151 [-]: SELF      R7 R7 K50    ; R8 := R7; R7 := R7[0xf278f8a1]
152 [-]: CALL      R7 2 2       ; R7 := R7(R8)
153 [-]: SELF      R8 R7 K51    ; R9 := R7; R8 := R7[0xf2deaf69]
154 [-]: GETGLOBAL R10 K52      ; R10 := gLotusWeaponType
155 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
156 [-]: TEST      R8 0         ; if not R8 then PC := 173
157 [-]: JMP       173          ; PC := 173
158 [-]: GETGLOBAL R8 K45       ; R8 := 0x25d99d89
159 [-]: SELF      R8 R8 K53    ; R9 := R8; R8 := R8[0xaf0b6eb6]
160 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["mStoreItem"]
161 [-]: SELF      R10 R10 K50  ; R11 := R10; R10 := R10[0xf278f8a1]
162 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
163 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
164 [-]: SETGLOBAL R8 K39       ; mPendingItems := R8
165 [-]: GETGLOBAL R8 K49       ; R8 := 0x7b998233
166 [-]: GETGLOBAL R9 K39       ; R9 := mPendingItems
167 [-]: CALL      R8 2 2       ; R8 := R8(R9)
168 [-]: TEST      R8 0         ; if not R8 then PC := 193
169 [-]: JMP       193          ; PC := 193
170 [-]: NEWTABLE  R8 0 0       ; R8 := {}
171 [-]: SETGLOBAL R8 K39       ; mPendingItems := R8
172 [-]: JMP       193          ; PC := 193
173 [-]: NEWTABLE  R8 0 0       ; R8 := {}
174 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["mStoreItem"]
175 [-]: SELF      R9 R9 K50    ; R10 := R9; R9 := R9[0xf278f8a1]
176 [-]: CALL      R9 2 2       ; R9 := R9(R10)
177 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9[0xed4e0128]
178 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
179 [-]: SETLIST   R8 0 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
180 [-]: SETGLOBAL R8 K39       ; mPendingItems := R8
181 [-]: GETTABLE  R8 R0 K54    ; R8 := R0["CustomizationType"]
182 [-]: EQ        1 R8 K5      ; if R8 == nil then PC := 193
183 [-]: JMP       193          ; PC := 193
184 [-]: GETGLOBAL R8 K55       ; R8 := 0x33bdd652
185 [-]: GETTABLE  R8 R8 K56    ; R8 := R8[0x23d5322f]
186 [-]: GETGLOBAL R9 K39       ; R9 := mPendingItems
187 [-]: GETTABLE  R10 R0 K54   ; R10 := R0["CustomizationType"]
188 [-]: SELF      R10 R10 K50  ; R11 := R10; R10 := R10[0xf278f8a1]
189 [-]: CALL      R10 2 2      ; R10 := R10(R11)
190 [-]: SELF      R10 R10 K42  ; R11 := R10; R10 := R10[0xed4e0128]
191 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
192 [-]: CALL      R8 0 1       ; R8(R9,...)
193 [-]: GETGLOBAL R8 K57       ; R8 := _T
194 [-]: SETTABLE  R8 K58 K5    ; R8["arsenalPetType"] := nil
195 [-]: GETTABLE  R8 R0 K48    ; R8 := R0["Category"]
196 [-]: EQ        0 R8 K60     ; if R8 ~= 15.000000 then PC := 201
197 [-]: JMP       201          ; PC := 201
198 [-]: GETGLOBAL R8 K57       ; R8 := _T
199 [-]: SETTABLE  R8 K58 K61   ; R8["arsenalPetType"] := 0.000000
200 [-]: JMP       234          ; PC := 234
201 [-]: GETTABLE  R8 R0 K48    ; R8 := R0["Category"]
202 [-]: EQ        0 R8 K62     ; if R8 ~= 24.000000 then PC := 218
203 [-]: JMP       218          ; PC := 218
204 [-]: GETGLOBAL R8 K63       ; R8 := 0x7ed0a956
205 [-]: LOADK     R9 K64       ; R9 := "/Lotus/Types/Game/KubrowPet/KubrowPetPowerSuit"
206 [-]: CALL      R8 2 2       ; R8 := R8(R9)
207 [-]: GETGLOBAL R9 K57       ; R9 := _T
208 [-]: SETTABLE  R9 K58 K65   ; R9["arsenalPetType"] := 2.000000
209 [-]: GETTABLE  R9 R0 K66    ; R9 := R0["CatItemType"]
210 [-]: SELF      R9 R9 K51    ; R10 := R9; R9 := R9[0xf2deaf69]
211 [-]: MOVE      R11 R8       ; R11 := R8
212 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
213 [-]: TEST      R9 0         ; if not R9 then PC := 234
214 [-]: JMP       234          ; PC := 234
215 [-]: GETGLOBAL R9 K57       ; R9 := _T
216 [-]: SETTABLE  R9 K58 K67   ; R9["arsenalPetType"] := 1.000000
217 [-]: JMP       234          ; PC := 234
218 [-]: GETTABLE  R9 R0 K48    ; R9 := R0["Category"]
219 [-]: EQ        0 R9 K68     ; if R9 ~= 39.000000 then PC := 234
220 [-]: JMP       234          ; PC := 234
221 [-]: GETGLOBAL R9 K63       ; R9 := 0x7ed0a956
222 [-]: LOADK     R10 K69      ; R10 := "/Lotus/Types/Friendly/Pets/ZanukaPets/ZanukaPetPowerSuit"
223 [-]: CALL      R9 2 2       ; R9 := R9(R10)
224 [-]: GETGLOBAL R10 K57      ; R10 := _T
225 [-]: SETTABLE  R10 K58 K70  ; R10["arsenalPetType"] := 3.000000
226 [-]: GETTABLE  R10 R0 K66   ; R10 := R0["CatItemType"]
227 [-]: SELF      R10 R10 K51  ; R11 := R10; R10 := R10[0xf2deaf69]
228 [-]: MOVE      R12 R9       ; R12 := R9
229 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
230 [-]: TEST      R10 0        ; if not R10 then PC := 234
231 [-]: JMP       234          ; PC := 234
232 [-]: GETGLOBAL R10 K57      ; R10 := _T
233 [-]: SETTABLE  R10 K58 K71  ; R10["arsenalPetType"] := 4.000000
234 [-]: GETGLOBAL R10 K49      ; R10 := 0x7b998233
235 [-]: GETGLOBAL R11 K57      ; R11 := _T
236 [-]: GETTABLE  R11 R11 K58  ; R11 := R11["arsenalPetType"]
237 [-]: CALL      R10 2 2      ; R10 := R10(R11)
238 [-]: TEST      R10 1        ; if R10 then PC := 371
239 [-]: JMP       371          ; PC := 371
240 [-]: GETGLOBAL R10 K49      ; R10 := 0x7b998233
241 [-]: GETTABLE  R11 R0 K43   ; R11 := R0["RawItem"]
242 [-]: CALL      R10 2 2      ; R10 := R10(R11)
243 [-]: TEST      R10 1        ; if R10 then PC := 287
244 [-]: JMP       287          ; PC := 287
245 [-]: GETGLOBAL R10 K49      ; R10 := 0x7b998233
246 [-]: GETTABLE  R11 R0 K43   ; R11 := R0["RawItem"]
247 [-]: GETTABLE  R11 R11 K72  ; R11 := R11["Item"]
248 [-]: CALL      R10 2 2      ; R10 := R10(R11)
249 [-]: TEST      R10 1        ; if R10 then PC := 287
250 [-]: JMP       287          ; PC := 287
251 [-]: GETGLOBAL R10 K49      ; R10 := 0x7b998233
252 [-]: GETTABLE  R11 R0 K43   ; R11 := R0["RawItem"]
253 [-]: GETTABLE  R11 R11 K72  ; R11 := R11["Item"]
254 [-]: GETTABLE  R11 R11 K73  ; R11 := R11["mDetails"]
255 [-]: CALL      R10 2 2      ; R10 := R10(R11)
256 [-]: TEST      R10 1        ; if R10 then PC := 287
257 [-]: JMP       287          ; PC := 287
258 [-]: GETTABLE  R10 R0 K43   ; R10 := R0["RawItem"]
259 [-]: GETTABLE  R10 R10 K72  ; R10 := R10["Item"]
260 [-]: GETTABLE  R10 R10 K73  ; R10 := R10["mDetails"]
261 [-]: GETTABLE  R10 R10 K74  ; R10 := R10["mIsPuppy"]
262 [-]: TEST      R10 0        ; if not R10 then PC := 287
263 [-]: JMP       287          ; PC := 287
264 [-]: GETGLOBAL R10 K57      ; R10 := _T
265 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["arsenalPetType"]
266 [-]: EQ        0 R10 K67    ; if R10 ~= 1.000000 then PC := 276
267 [-]: JMP       276          ; PC := 276
268 [-]: GETGLOBAL R10 K55      ; R10 := 0x33bdd652
269 [-]: GETTABLE  R10 R10 K56  ; R10 := R10[0x23d5322f]
270 [-]: GETGLOBAL R11 K39      ; R11 := mPendingItems
271 [-]: GETGLOBAL R12 K75      ; R12 := 0x70114ff1
272 [-]: SELF      R12 R12 K42  ; R13 := R12; R12 := R12[0xed4e0128]
273 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
274 [-]: CALL      R10 0 1      ; R10(R11,...)
275 [-]: JMP       287          ; PC := 287
276 [-]: GETGLOBAL R10 K57      ; R10 := _T
277 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["arsenalPetType"]
278 [-]: EQ        0 R10 K65    ; if R10 ~= 2.000000 then PC := 287
279 [-]: JMP       287          ; PC := 287
280 [-]: GETGLOBAL R10 K55      ; R10 := 0x33bdd652
281 [-]: GETTABLE  R10 R10 K56  ; R10 := R10[0x23d5322f]
282 [-]: GETGLOBAL R11 K39      ; R11 := mPendingItems
283 [-]: GETGLOBAL R12 K76      ; R12 := 0x4ea3e9ad
284 [-]: SELF      R12 R12 K42  ; R13 := R12; R12 := R12[0xed4e0128]
285 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
286 [-]: CALL      R10 0 1      ; R10(R11,...)
287 [-]: GETGLOBAL R10 K57      ; R10 := _T
288 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["arsenalPetType"]
289 [-]: EQ        1 R10 K67    ; if R10 == 1.000000 then PC := 295
290 [-]: JMP       295          ; PC := 295
291 [-]: GETGLOBAL R10 K57      ; R10 := _T
292 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["arsenalPetType"]
293 [-]: EQ        0 R10 K65    ; if R10 ~= 2.000000 then PC := 349
294 [-]: JMP       349          ; PC := 349
295 [-]: GETGLOBAL R10 K49      ; R10 := 0x7b998233
296 [-]: GETTABLE  R11 R0 K77   ; R11 := R0["mModularParts"]
297 [-]: CALL      R10 2 2      ; R10 := R10(R11)
298 [-]: TEST      R10 1        ; if R10 then PC := 304
299 [-]: JMP       304          ; PC := 304
300 [-]: GETTABLE  R10 R0 K77   ; R10 := R0["mModularParts"]
301 [-]: LEN       R10 R10      ; R10 := # R10
302 [-]: LT        1 K61 R10    ; if 0.000000 < R10 then PC := 322
303 [-]: JMP       322          ; PC := 322
304 [-]: GETTABLE  R10 R0 K43   ; R10 := R0["RawItem"]
305 [-]: GETTABLE  R10 R10 K72  ; R10 := R10["Item"]
306 [-]: GETTABLE  R10 R10 K73  ; R10 := R10["mDetails"]
307 [-]: GETTABLE  R10 R10 K74  ; R10 := R10["mIsPuppy"]
308 [-]: TEST      R10 1        ; if R10 then PC := 322
309 [-]: JMP       322          ; PC := 322
310 [-]: GETTABLE  R10 R0 K78   ; R10 := R0["Type"]
311 [-]: SELF      R10 R10 K51  ; R11 := R10; R10 := R10[0xf2deaf69]
312 [-]: GETGLOBAL R12 K79      ; R12 := 0xf541be71
313 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
314 [-]: TEST      R10 1        ; if R10 then PC := 322
315 [-]: JMP       322          ; PC := 322
316 [-]: GETTABLE  R10 R0 K78   ; R10 := R0["Type"]
317 [-]: SELF      R10 R10 K51  ; R11 := R10; R10 := R10[0xf2deaf69]
318 [-]: GETGLOBAL R12 K80      ; R12 := 0xda203692
319 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
320 [-]: TEST      R10 0        ; if not R10 then PC := 349
321 [-]: JMP       349          ; PC := 349
322 [-]: GETGLOBAL R10 K81      ; R10 := 0xb009bbc6
323 [-]: GETTABLE  R11 R0 K78   ; R11 := R0["Type"]
324 [-]: CALL      R10 2 2      ; R10 := R10(R11)
325 [-]: GETGLOBAL R11 K49      ; R11 := 0x7b998233
326 [-]: MOVE      R12 R10      ; R12 := R10
327 [-]: CALL      R11 2 2      ; R11 := R11(R12)
328 [-]: TEST      R11 1        ; if R11 then PC := 349
329 [-]: JMP       349          ; PC := 349
330 [-]: SELF      R11 R10 K82  ; R12 := R10; R11 := R10[0xa7ea5052]
331 [-]: CALL      R11 2 2      ; R11 := R11(R12)
332 [-]: LOADK     R12 1        ; R12 := 1.000000
333 [-]: LEN       R13 R11      ; R13 := # R11
334 [-]: LOADK     R14 1        ; R14 := 1.000000
335 [-]: FORPREP   R12 348      ; R12 -= R14; PC := 348
336 [-]: GETGLOBAL R16 K49      ; R16 := 0x7b998233
337 [-]: GETTABLE  R17 R11 R15  ; R17 := R11[R15]
338 [-]: CALL      R16 2 2      ; R16 := R16(R17)
339 [-]: TEST      R16 1        ; if R16 then PC := 348
340 [-]: JMP       348          ; PC := 348
341 [-]: GETGLOBAL R16 K55      ; R16 := 0x33bdd652
342 [-]: GETTABLE  R16 R16 K56  ; R16 := R16[0x23d5322f]
343 [-]: GETGLOBAL R17 K39      ; R17 := mPendingItems
344 [-]: GETTABLE  R18 R11 R15  ; R18 := R11[R15]
345 [-]: SELF      R18 R18 K42  ; R19 := R18; R18 := R18[0xed4e0128]
346 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
347 [-]: CALL      R16 0 1      ; R16(R17,...)
348 [-]: FORLOOP   R12 336      ; R12 += R14; if R12 <= R13 then begin PC := 336; R15 := R12 end
349 [-]: GETGLOBAL R16 K55      ; R16 := 0x33bdd652
350 [-]: GETTABLE  R16 R16 K56  ; R16 := R16[0x23d5322f]
351 [-]: GETGLOBAL R17 K39      ; R17 := mPendingItems
352 [-]: GETGLOBAL R18 K83      ; R18 := 0xbe190284
353 [-]: SELF      R18 R18 K84  ; R19 := R18; R18 := R18[0x9c824b4c]
354 [-]: GETGLOBAL R20 K57      ; R20 := _T
355 [-]: GETTABLE  R20 R20 K58  ; R20 := R20["arsenalPetType"]
356 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
357 [-]: SELF      R18 R18 K42  ; R19 := R18; R18 := R18[0xed4e0128]
358 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
359 [-]: CALL      R16 0 1      ; R16(R17,...)
360 [-]: GETGLOBAL R16 K55      ; R16 := 0x33bdd652
361 [-]: GETTABLE  R16 R16 K56  ; R16 := R16[0x23d5322f]
362 [-]: GETGLOBAL R17 K39      ; R17 := mPendingItems
363 [-]: GETGLOBAL R18 K83      ; R18 := 0xbe190284
364 [-]: SELF      R18 R18 K85  ; R19 := R18; R18 := R18[0x51679416]
365 [-]: GETGLOBAL R20 K57      ; R20 := _T
366 [-]: GETTABLE  R20 R20 K58  ; R20 := R20["arsenalPetType"]
367 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
368 [-]: SELF      R18 R18 K42  ; R19 := R18; R18 := R18[0xed4e0128]
369 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
370 [-]: CALL      R16 0 1      ; R16(R17,...)
371 [-]: GETUPVAL  R16 U4       ; R16 := U4
372 [-]: SETTABLE  R16 K37 K86  ; R16["DoubleClick"] := false
373 [-]: GETGLOBAL R16 K87      ; R16 := mButtons
374 [-]: GETTABLE  R16 R16 K65  ; R16 := R16[2.000000]
375 [-]: SETTABLE  R16 K88 K86  ; R16["mVisible"] := false
376 [-]: GETUPVAL  R16 U6       ; R16 := U6
377 [-]: CALL      R16 1 1      ; R16()
378 [-]: GETGLOBAL R16 K30      ; R16 := mLoaders
379 [-]: GETTABLE  R16 R16 K31  ; R16 := R16["mSelectionLoader"]
380 [-]: SELF      R16 R16 K89  ; R17 := R16; R16 := R16[0x5a7aac67]
381 [-]: CALL      R16 2 1      ; R16(R17)
382 [-]: GETGLOBAL R16 K30      ; R16 := mLoaders
383 [-]: GETTABLE  R16 R16 K31  ; R16 := R16["mSelectionLoader"]
384 [-]: SELF      R16 R16 K90  ; R17 := R16; R16 := R16[0x2f86cf1e]
385 [-]: GETGLOBAL R18 K39      ; R18 := mPendingItems
386 [-]: LOADBOOL  R19 1 0      ; R19 := true
387 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
388 [-]: SETGLOBAL R0 K29       ; mPendingSelection := R0
389 [-]: RETURN    R0 1         ; return 


; Function #133.6:
;
; Name:            
; Defined at line: 8342
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  72

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  6 [-]: NEWTABLE  R2 19 0      ; R2 := {}
  7 [-]: LOADK     R3 K2        ; R3 := ".XPLocked"
  8 [-]: LOADK     R4 K3        ; R4 := ".XPLocked.Gradient"
  9 [-]: LOADK     R5 K4        ; R5 := ".XPLocked.Bg"
 10 [-]: LOADK     R6 K5        ; R6 := ".XPLocked.Icon"
 11 [-]: LOADK     R7 K6        ; R7 := ".PriceIcon"
 12 [-]: LOADK     R8 K7        ; R8 := ".CreditsBG"
 13 [-]: LOADK     R9 K8        ; R9 := ".OwnedStatus"
 14 [-]: LOADK     R10 K9       ; R10 := ".PetInfo.Gender"
 15 [-]: LOADK     R11 K10      ; R11 := ".PetInfo.Breed"
 16 [-]: LOADK     R12 K11      ; R12 := ".NameBg"
 17 [-]: LOADK     R13 K12      ; R13 := ".Image"
 18 [-]: LOADK     R14 K13      ; R14 := ".SigilMark"
 19 [-]: LOADK     R15 K14      ; R15 := ".SaleTag.Bg"
 20 [-]: LOADK     R16 K15      ; R16 := ".SaleTag.Icon"
 21 [-]: LOADK     R17 K16      ; R17 := ".SaleTag.IconBg"
 22 [-]: LOADK     R18 K17      ; R18 := ".StrikeThrough"
 23 [-]: LOADK     R19 K18      ; R19 := ".CouponPrice"
 24 [-]: LOADK     R20 K19      ; R20 := ".CouponPrice.PriceIcon"
 25 [-]: LOADK     R21 K20      ; R21 := ".CouponPrice.CreditsBG"
 26 [-]: LOADK     R22 K21      ; R22 := ".CouponPrice.Arrows"
 27 [-]: LOADK     R23 K22      ; R23 := ".UGCTag"
 28 [-]: SETLIST   R2 21 1      ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 21
 29 [-]: NEWTABLE  R3 8 0       ; R3 := {}
 30 [-]: LOADK     R4 K23       ; R4 := ".XPLocked.Label"
 31 [-]: LOADK     R5 K24       ; R5 := ".XPLocked.ReqLevel"
 32 [-]: LOADK     R6 K25       ; R6 := ".Credits"
 33 [-]: LOADK     R7 K26       ; R7 := ".Platinum"
 34 [-]: LOADK     R8 K27       ; R8 := ".Name"
 35 [-]: LOADK     R9 K28       ; R9 := ".OwnedStatus.FormaCount"
 36 [-]: LOADK     R10 K29      ; R10 := ".SaleTag.Label"
 37 [-]: LOADK     R11 K30      ; R11 := ".CouponPrice.Credits"
 38 [-]: SETLIST   R3 8 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 8
 39 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 40 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
 41 [-]: MOVE      R6 R1        ; R6 := R1
 42 [-]: LOADK     R7 K33       ; R7 := "Credits"
 43 [-]: LOADK     R8 44        ; R8 := 44.000000
 44 [-]: LOADBOOL  R9 0 0       ; R9 := false
 45 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 46 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 47 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4[0xd5181643]
 48 [-]: MOVE      R6 R1        ; R6 := R1
 49 [-]: LOADK     R7 K35       ; R7 := ".Background"
 50 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 51 [-]: GETGLOBAL R7 K36       ; R7 := 0x2c424c91
 52 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 53 [-]: GETTABLE  R4 R0 K37    ; R4 := R0["Filler"]
 54 [-]: TEST      R4 0         ; if not R4 then PC := 242
 55 [-]: JMP       242          ; PC := 242
 56 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 57 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
 58 [-]: MOVE      R6 R1        ; R6 := R1
 59 [-]: LOADK     R7 K38       ; R7 := "XPLocked"
 60 [-]: LOADK     R8 11        ; R8 := 11.000000
 61 [-]: LOADBOOL  R9 0 0       ; R9 := false
 62 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 63 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 64 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
 65 [-]: MOVE      R6 R1        ; R6 := R1
 66 [-]: LOADK     R7 K33       ; R7 := "Credits"
 67 [-]: LOADK     R8 11        ; R8 := 11.000000
 68 [-]: LOADBOOL  R9 0 0       ; R9 := false
 69 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 70 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 71 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
 72 [-]: MOVE      R6 R1        ; R6 := R1
 73 [-]: LOADK     R7 K39       ; R7 := "PriceIcon"
 74 [-]: LOADK     R8 11        ; R8 := 11.000000
 75 [-]: LOADBOOL  R9 0 0       ; R9 := false
 76 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 77 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 78 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
 79 [-]: MOVE      R6 R1        ; R6 := R1
 80 [-]: LOADK     R7 K40       ; R7 := "CreditsBG"
 81 [-]: LOADK     R8 11        ; R8 := 11.000000
 82 [-]: LOADBOOL  R9 0 0       ; R9 := false
 83 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 84 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 85 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
 86 [-]: MOVE      R6 R1        ; R6 := R1
 87 [-]: LOADK     R7 K41       ; R7 := "Platinum"
 88 [-]: LOADK     R8 11        ; R8 := 11.000000
 89 [-]: LOADBOOL  R9 0 0       ; R9 := false
 90 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 91 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
 92 [-]: SELF      R4 R4 K42    ; R5 := R4; R4 := R4[0x5f56eeab]
 93 [-]: MOVE      R6 R1        ; R6 := R1
 94 [-]: LOADK     R7 K27       ; R7 := ".Name"
 95 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 96 [-]: LOADK     R7 29        ; R7 := 29.000000
 97 [-]: LOADK     R8 K43       ; R8 := ""
 98 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 99 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
100 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
101 [-]: MOVE      R6 R1        ; R6 := R1
102 [-]: LOADK     R7 K44       ; R7 := "OwnedStatus"
103 [-]: LOADK     R8 11        ; R8 := 11.000000
104 [-]: LOADBOOL  R9 0 0       ; R9 := false
105 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
106 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
107 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
108 [-]: MOVE      R6 R1        ; R6 := R1
109 [-]: LOADK     R7 K45       ; R7 := "PetInfo"
110 [-]: LOADK     R8 11        ; R8 := 11.000000
111 [-]: LOADBOOL  R9 0 0       ; R9 := false
112 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
113 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
114 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
115 [-]: MOVE      R6 R1        ; R6 := R1
116 [-]: LOADK     R7 K46       ; R7 := "ItemCount"
117 [-]: LOADK     R8 11        ; R8 := 11.000000
118 [-]: LOADBOOL  R9 0 0       ; R9 := false
119 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
120 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
121 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
122 [-]: MOVE      R6 R1        ; R6 := R1
123 [-]: LOADK     R7 K47       ; R7 := "ItemCountBG"
124 [-]: LOADK     R8 11        ; R8 := 11.000000
125 [-]: LOADBOOL  R9 0 0       ; R9 := false
126 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
127 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
128 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
129 [-]: MOVE      R6 R1        ; R6 := R1
130 [-]: LOADK     R7 K48       ; R7 := "NameBg"
131 [-]: LOADK     R8 11        ; R8 := 11.000000
132 [-]: LOADBOOL  R9 0 0       ; R9 := false
133 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
134 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
135 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
136 [-]: MOVE      R6 R1        ; R6 := R1
137 [-]: LOADK     R7 K49       ; R7 := "SigilMark"
138 [-]: LOADK     R8 11        ; R8 := 11.000000
139 [-]: LOADBOOL  R9 0 0       ; R9 := false
140 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
141 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
142 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
143 [-]: MOVE      R6 R1        ; R6 := R1
144 [-]: LOADK     R7 K50       ; R7 := "UGCTag"
145 [-]: LOADK     R8 11        ; R8 := 11.000000
146 [-]: LOADBOOL  R9 0 0       ; R9 := false
147 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
148 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
149 [-]: SELF      R4 R4 K51    ; R5 := R4; R4 := R4[0x91e13703]
150 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
151 [-]: LOADK     R7 K35       ; R7 := ".Background"
152 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
153 [-]: LOADK     R7 K52       ; R7 := "RectInnerColor"
154 [-]: GETGLOBAL R8 K53       ; R8 := 0x0032441c
155 [-]: GETTABLE  R8 R8 K54    ; R8 := R8["UIColorObject_White"]
156 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["r"]
157 [-]: GETGLOBAL R9 K53       ; R9 := 0x0032441c
158 [-]: GETTABLE  R9 R9 K54    ; R9 := R9["UIColorObject_White"]
159 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["g"]
160 [-]: GETGLOBAL R10 K53      ; R10 := 0x0032441c
161 [-]: GETTABLE  R10 R10 K54  ; R10 := R10["UIColorObject_White"]
162 [-]: GETTABLE  R10 R10 K57  ; R10 := R10["b"]
163 [-]: LOADK     R11 K58      ; R11 := 0.050000
164 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
165 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
166 [-]: SELF      R4 R4 K51    ; R5 := R4; R4 := R4[0x91e13703]
167 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
168 [-]: LOADK     R7 K35       ; R7 := ".Background"
169 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
170 [-]: LOADK     R7 K59       ; R7 := "RectEdgeColor"
171 [-]: GETGLOBAL R8 K53       ; R8 := 0x0032441c
172 [-]: GETTABLE  R8 R8 K54    ; R8 := R8["UIColorObject_White"]
173 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["r"]
174 [-]: GETGLOBAL R9 K53       ; R9 := 0x0032441c
175 [-]: GETTABLE  R9 R9 K54    ; R9 := R9["UIColorObject_White"]
176 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["g"]
177 [-]: GETGLOBAL R10 K53      ; R10 := 0x0032441c
178 [-]: GETTABLE  R10 R10 K54  ; R10 := R10["UIColorObject_White"]
179 [-]: GETTABLE  R10 R10 K57  ; R10 := R10["b"]
180 [-]: LOADK     R11 K58      ; R11 := 0.050000
181 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
182 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
183 [-]: SELF      R4 R4 K60    ; R5 := R4; R4 := R4[0xf64b7262]
184 [-]: MOVE      R6 R1        ; R6 := R1
185 [-]: LOADK     R7 K61       ; R7 := "Image"
186 [-]: LOADK     R8 10        ; R8 := 10.000000
187 [-]: LOADK     R9 0         ; R9 := 0.000000
188 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
189 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
190 [-]: SELF      R4 R4 K60    ; R5 := R4; R4 := R4[0xf64b7262]
191 [-]: MOVE      R6 R1        ; R6 := R1
192 [-]: LOADK     R7 K62       ; R7 := "Shadow"
193 [-]: LOADK     R8 10        ; R8 := 10.000000
194 [-]: LOADK     R9 0         ; R9 := 0.000000
195 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
196 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
197 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
198 [-]: MOVE      R6 R1        ; R6 := R1
199 [-]: LOADK     R7 K63       ; R7 := "SaleTag"
200 [-]: LOADK     R8 11        ; R8 := 11.000000
201 [-]: LOADBOOL  R9 0 0       ; R9 := false
202 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
203 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
204 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
205 [-]: MOVE      R6 R1        ; R6 := R1
206 [-]: LOADK     R7 K64       ; R7 := "StrikeThrough"
207 [-]: LOADK     R8 11        ; R8 := 11.000000
208 [-]: LOADBOOL  R9 0 0       ; R9 := false
209 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
210 [-]: GETGLOBAL R4 K31       ; R4 := 0xae91e43b
211 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4[0xc0a3774b]
212 [-]: MOVE      R6 R1        ; R6 := R1
213 [-]: LOADK     R7 K65       ; R7 := "CouponPrice"
214 [-]: LOADK     R8 11        ; R8 := 11.000000
215 [-]: LOADBOOL  R9 0 0       ; R9 := false
216 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
217 [-]: LOADK     R4 1         ; R4 := 1.000000
218 [-]: LEN       R5 R2        ; R5 := # R2
219 [-]: LOADK     R6 1         ; R6 := 1.000000
220 [-]: FORPREP   R4 228       ; R4 -= R6; PC := 228
221 [-]: GETGLOBAL R8 K31       ; R8 := 0xae91e43b
222 [-]: SELF      R8 R8 K34    ; R9 := R8; R8 := R8[0xd5181643]
223 [-]: GETTABLE  R10 R0 K0    ; R10 := R0["mClipName"]
224 [-]: GETTABLE  R11 R2 R7    ; R11 := R2[R7]
225 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
226 [-]: GETGLOBAL R11 K66      ; R11 := 0xae09323f
227 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
228 [-]: FORLOOP   R4 221       ; R4 += R6; if R4 <= R5 then begin PC := 221; R7 := R4 end
229 [-]: LOADK     R8 1         ; R8 := 1.000000
230 [-]: LEN       R9 R3        ; R9 := # R3
231 [-]: LOADK     R10 1        ; R10 := 1.000000
232 [-]: FORPREP   R8 240       ; R8 -= R10; PC := 240
233 [-]: GETGLOBAL R12 K31      ; R12 := 0xae91e43b
234 [-]: SELF      R12 R12 K34  ; R13 := R12; R12 := R12[0xd5181643]
235 [-]: GETTABLE  R14 R0 K0    ; R14 := R0["mClipName"]
236 [-]: GETTABLE  R15 R3 R11   ; R15 := R3[R11]
237 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
238 [-]: GETGLOBAL R15 K67      ; R15 := 0x7e155d6a
239 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
240 [-]: FORLOOP   R8 233       ; R8 += R10; if R8 <= R9 then begin PC := 233; R11 := R8 end
241 [-]: RETURN    R0 1         ; return 
242 [-]: GETUPVAL  R12 U0       ; R12 := U0
243 [-]: GETTABLE  R12 R12 K68  ; R12 := R12[0x4ffc42f7]
244 [-]: GETGLOBAL R13 K31      ; R13 := 0xae91e43b
245 [-]: MOVE      R14 R1       ; R14 := R1
246 [-]: MOVE      R15 R0       ; R15 := R0
247 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
248 [-]: GETGLOBAL R12 K31      ; R12 := 0xae91e43b
249 [-]: SELF      R12 R12 K60  ; R13 := R12; R12 := R12[0xf64b7262]
250 [-]: MOVE      R14 R1       ; R14 := R1
251 [-]: LOADK     R15 K40      ; R15 := "CreditsBG"
252 [-]: LOADK     R16 9        ; R16 := 9.000000
253 [-]: LOADK     R17 K69      ; R17 := 11749898.000000
254 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
255 [-]: GETGLOBAL R12 K31      ; R12 := 0xae91e43b
256 [-]: SELF      R12 R12 K51  ; R13 := R12; R12 := R12[0x91e13703]
257 [-]: GETTABLE  R14 R0 K0    ; R14 := R0["mClipName"]
258 [-]: LOADK     R15 K35      ; R15 := ".Background"
259 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
260 [-]: LOADK     R15 K52      ; R15 := "RectInnerColor"
261 [-]: GETGLOBAL R16 K53      ; R16 := 0x0032441c
262 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["UIColorObject_White"]
263 [-]: GETTABLE  R16 R16 K55  ; R16 := R16["r"]
264 [-]: GETGLOBAL R17 K53      ; R17 := 0x0032441c
265 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["UIColorObject_White"]
266 [-]: GETTABLE  R17 R17 K56  ; R17 := R17["g"]
267 [-]: GETGLOBAL R18 K53      ; R18 := 0x0032441c
268 [-]: GETTABLE  R18 R18 K54  ; R18 := R18["UIColorObject_White"]
269 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["b"]
270 [-]: GETUPVAL  R19 U1       ; R19 := U1
271 [-]: GETTABLE  R19 R19 K70  ; R19 := R19[0x06d055f9]
272 [-]: GETGLOBAL R20 K71      ; R20 := mSelected
273 [-]: GETTABLE  R20 R20 K72  ; R20 := R20["Item"]
274 [-]: EQ        1 R20 K1     ; if R20 == nil then PC := 282
275 [-]: JMP       282          ; PC := 282
276 [-]: GETGLOBAL R20 K71      ; R20 := mSelected
277 [-]: GETTABLE  R20 R20 K72  ; R20 := R20["Item"]
278 [-]: GETTABLE  R20 R20 K73  ; R20 := R20["Id"]
279 [-]: GETTABLE  R21 R0 K73   ; R21 := R0["Id"]
280 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 283
281 [-]: JMP       283          ; PC := 283
282 [-]: LOADBOOL  R20 0 1      ; R20 := false; PC := 283
283 [-]: LOADBOOL  R20 1 0      ; R20 := true
284 [-]: LOADK     R21 K74      ; R21 := 0.400000
285 [-]: LOADK     R22 K75      ; R22 := 0.100000
286 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
287 [-]: CALL      R12 0 1      ; R12(R13,...)
288 [-]: GETGLOBAL R12 K31      ; R12 := 0xae91e43b
289 [-]: SELF      R12 R12 K51  ; R13 := R12; R12 := R12[0x91e13703]
290 [-]: GETTABLE  R14 R0 K0    ; R14 := R0["mClipName"]
291 [-]: LOADK     R15 K35      ; R15 := ".Background"
292 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
293 [-]: LOADK     R15 K59      ; R15 := "RectEdgeColor"
294 [-]: GETGLOBAL R16 K53      ; R16 := 0x0032441c
295 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["UIColorObject_White"]
296 [-]: GETTABLE  R16 R16 K55  ; R16 := R16["r"]
297 [-]: GETGLOBAL R17 K53      ; R17 := 0x0032441c
298 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["UIColorObject_White"]
299 [-]: GETTABLE  R17 R17 K56  ; R17 := R17["g"]
300 [-]: GETGLOBAL R18 K53      ; R18 := 0x0032441c
301 [-]: GETTABLE  R18 R18 K54  ; R18 := R18["UIColorObject_White"]
302 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["b"]
303 [-]: LOADK     R19 K76      ; R19 := 0.200000
304 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
305 [-]: GETGLOBAL R12 K31      ; R12 := 0xae91e43b
306 [-]: SELF      R12 R12 K60  ; R13 := R12; R12 := R12[0xf64b7262]
307 [-]: MOVE      R14 R1       ; R14 := R1
308 [-]: LOADK     R15 K61      ; R15 := "Image"
309 [-]: LOADK     R16 10       ; R16 := 10.000000
310 [-]: GETUPVAL  R17 U1       ; R17 := U1
311 [-]: GETTABLE  R17 R17 K70  ; R17 := R17[0x06d055f9]
312 [-]: GETTABLE  R18 R0 K77   ; R18 := R0["Icon"]
313 [-]: EQ        0 R18 K1     ; if R18 ~= nil then PC := 316
314 [-]: JMP       316          ; PC := 316
315 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 316
316 [-]: LOADBOOL  R18 1 0      ; R18 := true
317 [-]: LOADK     R19 100      ; R19 := 100.000000
318 [-]: LOADK     R20 0        ; R20 := 0.000000
319 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
320 [-]: CALL      R12 0 1      ; R12(R13,...)
321 [-]: GETGLOBAL R12 K31      ; R12 := 0xae91e43b
322 [-]: SELF      R12 R12 K60  ; R13 := R12; R12 := R12[0xf64b7262]
323 [-]: MOVE      R14 R1       ; R14 := R1
324 [-]: LOADK     R15 K62      ; R15 := "Shadow"
325 [-]: LOADK     R16 10       ; R16 := 10.000000
326 [-]: GETUPVAL  R17 U1       ; R17 := U1
327 [-]: GETTABLE  R17 R17 K70  ; R17 := R17[0x06d055f9]
328 [-]: GETTABLE  R18 R0 K77   ; R18 := R0["Icon"]
329 [-]: EQ        0 R18 K1     ; if R18 ~= nil then PC := 332
330 [-]: JMP       332          ; PC := 332
331 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 332
332 [-]: LOADBOOL  R18 1 0      ; R18 := true
333 [-]: LOADK     R19 41       ; R19 := 41.000000
334 [-]: LOADK     R20 0        ; R20 := 0.000000
335 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
336 [-]: CALL      R12 0 1      ; R12(R13,...)
337 [-]: GETGLOBAL R12 K31      ; R12 := 0xae91e43b
338 [-]: SELF      R12 R12 K34  ; R13 := R12; R12 := R12[0xd5181643]
339 [-]: GETTABLE  R14 R0 K0    ; R14 := R0["mClipName"]
340 [-]: LOADK     R15 K78      ; R15 := ".Shadow"
341 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
342 [-]: GETGLOBAL R15 K79      ; R15 := 0x119fdfe2
343 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
344 [-]: GETGLOBAL R12 K80      ; R12 := 0x7f5022cf
345 [-]: GETTABLE  R12 R12 K81  ; R12 := R12[0x3f3e4d12]
346 [-]: GETTABLE  R13 R0 K82   ; R13 := R0["Name"]
347 [-]: CALL      R12 2 2      ; R12 := R12(R13)
348 [-]: LOADBOOL  R13 0 0      ; R13 := false
349 [-]: LOADNIL   R14 R14      ; R14 := nil
350 [-]: GETTABLE  R15 R0 K83   ; R15 := R0["Skin"]
351 [-]: EQ        1 R15 K1     ; if R15 == nil then PC := 355
352 [-]: JMP       355          ; PC := 355
353 [-]: GETTABLE  R14 R0 K83   ; R14 := R0["Skin"]
354 [-]: JMP       379          ; PC := 379
355 [-]: GETGLOBAL R15 K84      ; R15 := 0x7b998233
356 [-]: GETGLOBAL R16 K85      ; R16 := 0x25d99d89
357 [-]: CALL      R15 2 2      ; R15 := R15(R16)
358 [-]: TEST      R15 1        ; if R15 then PC := 379
359 [-]: JMP       379          ; PC := 379
360 [-]: GETGLOBAL R15 K84      ; R15 := 0x7b998233
361 [-]: GETTABLE  R16 R0 K86   ; R16 := R0["mPurchasedInfo"]
362 [-]: CALL      R15 2 2      ; R15 := R15(R16)
363 [-]: TEST      R15 1        ; if R15 then PC := 379
364 [-]: JMP       379          ; PC := 379
365 [-]: GETGLOBAL R15 K84      ; R15 := 0x7b998233
366 [-]: GETTABLE  R16 R0 K86   ; R16 := R0["mPurchasedInfo"]
367 [-]: GETTABLE  R16 R16 K87  ; R16 := R16["UID"]
368 [-]: CALL      R15 2 2      ; R15 := R15(R16)
369 [-]: TEST      R15 1        ; if R15 then PC := 379
370 [-]: JMP       379          ; PC := 379
371 [-]: GETGLOBAL R15 K85      ; R15 := 0x25d99d89
372 [-]: SELF      R15 R15 K88  ; R16 := R15; R15 := R15[0x25a6e75e]
373 [-]: CALL      R15 2 2      ; R15 := R15(R16)
374 [-]: SELF      R16 R15 K89  ; R17 := R15; R16 := R15[0xc70965fe]
375 [-]: GETTABLE  R18 R0 K86   ; R18 := R0["mPurchasedInfo"]
376 [-]: GETTABLE  R18 R18 K87  ; R18 := R18["UID"]
377 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
378 [-]: MOVE      R14 R16      ; R14 := R16
379 [-]: EQ        1 R14 K1     ; if R14 == nil then PC := 386
380 [-]: JMP       386          ; PC := 386
381 [-]: SELF      R16 R14 K90  ; R17 := R14; R16 := R14[0xba568eef]
382 [-]: CALL      R16 2 2      ; R16 := R16(R17)
383 [-]: TEST      R16 0        ; if not R16 then PC := 386
384 [-]: JMP       386          ; PC := 386
385 [-]: LOADBOOL  R13 1 0      ; R13 := true
386 [-]: GETGLOBAL R16 K31      ; R16 := 0xae91e43b
387 [-]: SELF      R16 R16 K32  ; R17 := R16; R16 := R16[0xc0a3774b]
388 [-]: MOVE      R18 R1       ; R18 := R1
389 [-]: LOADK     R19 K50      ; R19 := "UGCTag"
390 [-]: LOADK     R20 11       ; R20 := 11.000000
391 [-]: GETTABLE  R21 R0 K91   ; R21 := R0["mStoreItem"]
392 [-]: EQ        1 R21 K1     ; if R21 == nil then PC := 398
393 [-]: JMP       398          ; PC := 398
394 [-]: GETTABLE  R21 R0 K91   ; R21 := R0["mStoreItem"]
395 [-]: SELF      R21 R21 K92  ; R22 := R21; R21 := R21[0x8c86593f]
396 [-]: CALL      R21 2 2      ; R21 := R21(R22)
397 [-]: JMP       400          ; PC := 400
398 [-]: LOADBOOL  R21 0 1      ; R21 := false; PC := 399
399 [-]: LOADBOOL  R21 1 0      ; R21 := true
400 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
401 [-]: GETGLOBAL R16 K31      ; R16 := 0xae91e43b
402 [-]: SELF      R16 R16 K93  ; R17 := R16; R16 := R16[0x20b98db3]
403 [-]: MOVE      R18 R1       ; R18 := R1
404 [-]: LOADK     R19 K94      ; R19 := ".UGCTag.text"
405 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
406 [-]: LOADK     R19 K95      ; R19 := "<UGC>"
407 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
408 [-]: LOADBOOL  R16 0 0      ; R16 := false
409 [-]: GETGLOBAL R17 K84      ; R17 := 0x7b998233
410 [-]: GETGLOBAL R18 K85      ; R18 := 0x25d99d89
411 [-]: CALL      R17 2 2      ; R17 := R17(R18)
412 [-]: TEST      R17 1        ; if R17 then PC := 431
413 [-]: JMP       431          ; PC := 431
414 [-]: GETGLOBAL R17 K84      ; R17 := 0x7b998233
415 [-]: GETTABLE  R18 R0 K86   ; R18 := R0["mPurchasedInfo"]
416 [-]: CALL      R17 2 2      ; R17 := R17(R18)
417 [-]: TEST      R17 1        ; if R17 then PC := 431
418 [-]: JMP       431          ; PC := 431
419 [-]: GETGLOBAL R17 K84      ; R17 := 0x7b998233
420 [-]: GETTABLE  R18 R0 K86   ; R18 := R0["mPurchasedInfo"]
421 [-]: GETTABLE  R18 R18 K87  ; R18 := R18["UID"]
422 [-]: CALL      R17 2 2      ; R17 := R17(R18)
423 [-]: TEST      R17 1        ; if R17 then PC := 431
424 [-]: JMP       431          ; PC := 431
425 [-]: GETGLOBAL R17 K85      ; R17 := 0x25d99d89
426 [-]: SELF      R17 R17 K96  ; R18 := R17; R17 := R17[0xf84d3744]
427 [-]: GETTABLE  R19 R0 K86   ; R19 := R0["mPurchasedInfo"]
428 [-]: GETTABLE  R19 R19 K87  ; R19 := R19["UID"]
429 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
430 [-]: MOVE      R16 R17      ; R16 := R17
431 [-]: GETTABLE  R17 R0 K97   ; R17 := R0["Type"]
432 [-]: EQ        1 R17 K1     ; if R17 == nil then PC := 439
433 [-]: JMP       439          ; PC := 439
434 [-]: GETTABLE  R17 R0 K97   ; R17 := R0["Type"]
435 [-]: SELF      R17 R17 K98  ; R18 := R17; R17 := R17[0xf2deaf69]
436 [-]: GETGLOBAL R19 K99      ; R19 := gPetPowerSuitType
437 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
438 [-]: JMP       441          ; PC := 441
439 [-]: LOADBOOL  R17 0 1      ; R17 := false; PC := 440
440 [-]: LOADBOOL  R17 1 0      ; R17 := true
441 [-]: GETGLOBAL R18 K84      ; R18 := 0x7b998233
442 [-]: MOVE      R19 R14      ; R19 := R14
443 [-]: CALL      R18 2 2      ; R18 := R18(R19)
444 [-]: TEST      R18 1        ; if R18 then PC := 463
445 [-]: JMP       463          ; PC := 463
446 [-]: GETGLOBAL R18 K84      ; R18 := 0x7b998233
447 [-]: GETTABLE  R19 R14 K100 ; R19 := R14["mUpgradesExpiry"]
448 [-]: CALL      R18 2 2      ; R18 := R18(R19)
449 [-]: TEST      R18 1        ; if R18 then PC := 463
450 [-]: JMP       463          ; PC := 463
451 [-]: GETTABLE  R18 R14 K100 ; R18 := R14["mUpgradesExpiry"]
452 [-]: SELF      R18 R18 K101 ; R19 := R18; R18 := R18[0x56c01834]
453 [-]: CALL      R18 2 2      ; R18 := R18(R19)
454 [-]: TEST      R18 0        ; if not R18 then PC := 465
455 [-]: JMP       465          ; PC := 465
456 [-]: GETGLOBAL R18 K102     ; R18 := 0x34291f5c
457 [-]: GETTABLE  R18 R18 K103 ; R18 := R18[0x397b920f]
458 [-]: GETTABLE  R19 R14 K100 ; R19 := R14["mUpgradesExpiry"]
459 [-]: GETTABLE  R19 R19 K104 ; R19 := R19["sec"]
460 [-]: CALL      R18 2 2      ; R18 := R18(R19)
461 [-]: LT        1 K105 R18   ; if 0.000000 < R18 then PC := 464
462 [-]: JMP       464          ; PC := 464
463 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 464
464 [-]: LOADBOOL  R18 1 0      ; R18 := true
465 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
466 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
467 [-]: MOVE      R21 R1       ; R21 := R1
468 [-]: LOADK     R22 K45      ; R22 := "PetInfo"
469 [-]: LOADK     R23 11       ; R23 := 11.000000
470 [-]: TESTSET   R24 R17 1    ; if R17 then PC := 473 else R24 := R17
471 [-]: JMP       473          ; PC := 473
472 [-]: MOVE      R24 R18      ; R24 := R18
473 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
474 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
475 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
476 [-]: MOVE      R21 R1       ; R21 := R1
477 [-]: LOADK     R22 K106     ; R22 := "PetInfo.Gender"
478 [-]: LOADK     R23 11       ; R23 := 11.000000
479 [-]: LOADBOOL  R24 0 0      ; R24 := false
480 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
481 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
482 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
483 [-]: MOVE      R21 R1       ; R21 := R1
484 [-]: LOADK     R22 K44      ; R22 := "OwnedStatus"
485 [-]: LOADK     R23 11       ; R23 := 11.000000
486 [-]: GETTABLE  R24 R0 K107  ; R24 := R0["mPurchased"]
487 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
488 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
489 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
490 [-]: MOVE      R21 R1       ; R21 := R1
491 [-]: LOADK     R22 K33      ; R22 := "Credits"
492 [-]: LOADK     R23 11       ; R23 := 11.000000
493 [-]: LOADBOOL  R24 0 0      ; R24 := false
494 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
495 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
496 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
497 [-]: MOVE      R21 R1       ; R21 := R1
498 [-]: LOADK     R22 K39      ; R22 := "PriceIcon"
499 [-]: LOADK     R23 11       ; R23 := 11.000000
500 [-]: LOADBOOL  R24 0 0      ; R24 := false
501 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
502 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
503 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
504 [-]: MOVE      R21 R1       ; R21 := R1
505 [-]: LOADK     R22 K40      ; R22 := "CreditsBG"
506 [-]: LOADK     R23 11       ; R23 := 11.000000
507 [-]: LOADBOOL  R24 0 0      ; R24 := false
508 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
509 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
510 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
511 [-]: MOVE      R21 R1       ; R21 := R1
512 [-]: LOADK     R22 K63      ; R22 := "SaleTag"
513 [-]: LOADK     R23 11       ; R23 := 11.000000
514 [-]: LOADBOOL  R24 0 0      ; R24 := false
515 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
516 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
517 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
518 [-]: MOVE      R21 R1       ; R21 := R1
519 [-]: LOADK     R22 K64      ; R22 := "StrikeThrough"
520 [-]: LOADK     R23 11       ; R23 := 11.000000
521 [-]: LOADBOOL  R24 0 0      ; R24 := false
522 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
523 [-]: GETGLOBAL R19 K31      ; R19 := 0xae91e43b
524 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19[0xc0a3774b]
525 [-]: MOVE      R21 R1       ; R21 := R1
526 [-]: LOADK     R22 K65      ; R22 := "CouponPrice"
527 [-]: LOADK     R23 11       ; R23 := 11.000000
528 [-]: LOADBOOL  R24 0 0      ; R24 := false
529 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
530 [-]: GETUPVAL  R19 U1       ; R19 := U1
531 [-]: GETTABLE  R19 R19 K70  ; R19 := R19[0x06d055f9]
532 [-]: MOVE      R20 R18      ; R20 := R18
533 [-]: LOADK     R21 30       ; R21 := 30.000000
534 [-]: LOADK     R22 50       ; R22 := 50.000000
535 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
536 [-]: GETGLOBAL R20 K31      ; R20 := 0xae91e43b
537 [-]: SELF      R20 R20 K60  ; R21 := R20; R20 := R20[0xf64b7262]
538 [-]: MOVE      R22 R1       ; R22 := R1
539 [-]: LOADK     R23 K108     ; R23 := "PetInfo.Breed"
540 [-]: LOADK     R24 12       ; R24 := 12.000000
541 [-]: MOVE      R25 R19      ; R25 := R19
542 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
543 [-]: GETGLOBAL R20 K31      ; R20 := 0xae91e43b
544 [-]: SELF      R20 R20 K60  ; R21 := R20; R20 := R20[0xf64b7262]
545 [-]: MOVE      R22 R1       ; R22 := R1
546 [-]: LOADK     R23 K108     ; R23 := "PetInfo.Breed"
547 [-]: LOADK     R24 13       ; R24 := 13.000000
548 [-]: MOVE      R25 R19      ; R25 := R19
549 [-]: CALL      R20 6 1      ; R20(R21,R22,R23,R24,R25)
550 [-]: TEST      R17 0        ; if not R17 then PC := 574
551 [-]: JMP       574          ; PC := 574
552 [-]: GETGLOBAL R20 K84      ; R20 := 0x7b998233
553 [-]: GETTABLE  R21 R0 K109  ; R21 := R0["PetGenderBreedInfo"]
554 [-]: CALL      R20 2 2      ; R20 := R20(R21)
555 [-]: TEST      R20 1        ; if R20 then PC := 574
556 [-]: JMP       574          ; PC := 574
557 [-]: GETGLOBAL R20 K31      ; R20 := 0xae91e43b
558 [-]: SELF      R20 R20 K110 ; R21 := R20; R20 := R20[0x1cb415c1]
559 [-]: MOVE      R22 R1       ; R22 := R1
560 [-]: LOADK     R23 K9       ; R23 := ".PetInfo.Gender"
561 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
562 [-]: GETTABLE  R23 R0 K109  ; R23 := R0["PetGenderBreedInfo"]
563 [-]: GETTABLE  R23 R23 K111 ; R23 := R23["GenderIcon"]
564 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
565 [-]: GETGLOBAL R20 K31      ; R20 := 0xae91e43b
566 [-]: SELF      R20 R20 K110 ; R21 := R20; R20 := R20[0x1cb415c1]
567 [-]: MOVE      R22 R1       ; R22 := R1
568 [-]: LOADK     R23 K10      ; R23 := ".PetInfo.Breed"
569 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
570 [-]: GETTABLE  R23 R0 K109  ; R23 := R0["PetGenderBreedInfo"]
571 [-]: GETTABLE  R23 R23 K112 ; R23 := R23["BreedIcon"]
572 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
573 [-]: JMP       583          ; PC := 583
574 [-]: TEST      R18 0        ; if not R18 then PC := 583
575 [-]: JMP       583          ; PC := 583
576 [-]: GETGLOBAL R20 K31      ; R20 := 0xae91e43b
577 [-]: SELF      R20 R20 K110 ; R21 := R20; R20 := R20[0x1cb415c1]
578 [-]: MOVE      R22 R1       ; R22 := R1
579 [-]: LOADK     R23 K10      ; R23 := ".PetInfo.Breed"
580 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
581 [-]: GETGLOBAL R23 K113     ; R23 := 0x010a4d3d
582 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
583 [-]: GETGLOBAL R20 K84      ; R20 := 0x7b998233
584 [-]: GETTABLE  R21 R0 K91   ; R21 := R0["mStoreItem"]
585 [-]: CALL      R20 2 2      ; R20 := R20(R21)
586 [-]: TEST      R20 1        ; if R20 then PC := 1071
587 [-]: JMP       1071         ; PC := 1071
588 [-]: GETTABLE  R20 R0 K107  ; R20 := R0["mPurchased"]
589 [-]: TEST      R20 1        ; if R20 then PC := 1071
590 [-]: JMP       1071         ; PC := 1071
591 [-]: GETTABLE  R20 R0 K38   ; R20 := R0["XPLocked"]
592 [-]: TEST      R20 1        ; if R20 then PC := 1071
593 [-]: JMP       1071         ; PC := 1071
594 [-]: LOADNIL   R20 R21      ; R20 := R21 := nil
595 [-]: GETTABLE  R22 R0 K114  ; R22 := R0["BundleOnly"]
596 [-]: TEST      R22 0        ; if not R22 then PC := 606
597 [-]: JMP       606          ; PC := 606
598 [-]: GETGLOBAL R22 K31      ; R22 := 0xae91e43b
599 [-]: SELF      R22 R22 K115 ; R23 := R22; R22 := R22[0x42b04007]
600 [-]: LOADK     R24 K116     ; R24 := "/Lotus/Language/Menu/Arsenal_BundleOnly"
601 [-]: LOADBOOL  R25 0 0      ; R25 := false
602 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
603 [-]: MOVE      R20 R22      ; R20 := R22
604 [-]: LOADK     R21 K41      ; R21 := "Platinum"
605 [-]: JMP       684          ; PC := 684
606 [-]: GETGLOBAL R22 K102     ; R22 := 0x34291f5c
607 [-]: GETTABLE  R22 R22 K117 ; R22 := R22[0x49d4c6fc]
608 [-]: CALL      R22 1 2      ; R22 := R22()
609 [-]: TEST      R22 0        ; if not R22 then PC := 629
610 [-]: JMP       629          ; PC := 629
611 [-]: GETTABLE  R22 R0 K91   ; R22 := R0["mStoreItem"]
612 [-]: SELF      R22 R22 K118 ; R23 := R22; R22 := R22[0x0f5a34d1]
613 [-]: CALL      R22 2 2      ; R22 := R22(R23)
614 [-]: TEST      R22 0        ; if not R22 then PC := 629
615 [-]: JMP       629          ; PC := 629
616 [-]: GETTABLE  R22 R0 K91   ; R22 := R0["mStoreItem"]
617 [-]: SELF      R22 R22 K119 ; R23 := R22; R22 := R22[0x1760dc5a]
618 [-]: CALL      R22 2 2      ; R22 := R22(R23)
619 [-]: EQ        1 R22 K43    ; if R22 == "" then PC := 629
620 [-]: JMP       629          ; PC := 629
621 [-]: GETGLOBAL R22 K85      ; R22 := 0x25d99d89
622 [-]: SELF      R22 R22 K120 ; R23 := R22; R22 := R22[0xf952636e]
623 [-]: GETTABLE  R24 R0 K91   ; R24 := R0["mStoreItem"]
624 [-]: SELF      R24 R24 K119 ; R25 := R24; R24 := R24[0x1760dc5a]
625 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
626 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
627 [-]: MOVE      R20 R22      ; R20 := R22
628 [-]: JMP       684          ; PC := 684
629 [-]: GETTABLE  R22 R0 K91   ; R22 := R0["mStoreItem"]
630 [-]: SELF      R22 R22 K121 ; R23 := R22; R22 := R22[0x19865272]
631 [-]: CALL      R22 2 2      ; R22 := R22(R23)
632 [-]: EQ        1 R22 K43    ; if R22 == "" then PC := 657
633 [-]: JMP       657          ; PC := 657
634 [-]: GETGLOBAL R22 K84      ; R22 := 0x7b998233
635 [-]: GETGLOBAL R23 K85      ; R23 := 0x25d99d89
636 [-]: CALL      R22 2 2      ; R22 := R22(R23)
637 [-]: TEST      R22 1        ; if R22 then PC := 649
638 [-]: JMP       649          ; PC := 649
639 [-]: GETGLOBAL R22 K85      ; R22 := 0x25d99d89
640 [-]: SELF      R22 R22 K120 ; R23 := R22; R22 := R22[0xf952636e]
641 [-]: GETTABLE  R24 R0 K91   ; R24 := R0["mStoreItem"]
642 [-]: SELF      R24 R24 K121 ; R25 := R24; R24 := R24[0x19865272]
643 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
644 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
645 [-]: MOVE      R20 R22      ; R20 := R22
646 [-]: EQ        0 R20 K122   ; if R20 ~= "0.00" then PC := 649
647 [-]: JMP       649          ; PC := 649
648 [-]: LOADNIL   R20 R20      ; R20 := nil
649 [-]: GETUPVAL  R22 U2       ; R22 := U2
650 [-]: GETTABLE  R22 R22 K123 ; R22 := R22[0x9df9be7e]
651 [-]: GETTABLE  R23 R0 K91   ; R23 := R0["mStoreItem"]
652 [-]: CALL      R22 2 2      ; R22 := R22(R23)
653 [-]: EQ        0 R22 K124   ; if R22 ~= "EXTERNAL" then PC := 684
654 [-]: JMP       684          ; PC := 684
655 [-]: LOADK     R21 K125     ; R21 := "Steam"
656 [-]: JMP       684          ; PC := 684
657 [-]: GETUPVAL  R22 U2       ; R22 := U2
658 [-]: GETTABLE  R22 R22 K126 ; R22 := R22[0xe9947039]
659 [-]: GETTABLE  R23 R0 K91   ; R23 := R0["mStoreItem"]
660 [-]: CALL      R22 2 3      ; R22,R23 := R22(R23)
661 [-]: LT        0 K105 R22   ; if 0.000000 >= R22 then PC := 665
662 [-]: JMP       665          ; PC := 665
663 [-]: LE        1 R23 K105   ; if R23 <= 0.000000 then PC := 666
664 [-]: JMP       666          ; PC := 666
665 [-]: LOADBOOL  R24 0 1      ; R24 := false; PC := 666
666 [-]: LOADBOOL  R24 1 0      ; R24 := true
667 [-]: GETUPVAL  R25 U1       ; R25 := U1
668 [-]: GETTABLE  R25 R25 K127 ; R25 := R25[0x1142c7a8]
669 [-]: GETUPVAL  R26 U1       ; R26 := U1
670 [-]: GETTABLE  R26 R26 K70  ; R26 := R26[0x06d055f9]
671 [-]: MOVE      R27 R24      ; R27 := R24
672 [-]: MOVE      R28 R22      ; R28 := R22
673 [-]: MOVE      R29 R23      ; R29 := R23
674 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
675 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
676 [-]: MOVE      R20 R25      ; R20 := R25
677 [-]: GETUPVAL  R25 U1       ; R25 := U1
678 [-]: GETTABLE  R25 R25 K70  ; R25 := R25[0x06d055f9]
679 [-]: MOVE      R26 R24      ; R26 := R24
680 [-]: LOADK     R27 K33      ; R27 := "Credits"
681 [-]: LOADK     R28 K41      ; R28 := "Platinum"
682 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
683 [-]: MOVE      R21 R25      ; R21 := R25
684 [-]: TEST      R20 0        ; if not R20 then PC := 1071
685 [-]: JMP       1071         ; PC := 1071
686 [-]: GETGLOBAL R25 K31      ; R25 := 0xae91e43b
687 [-]: SELF      R25 R25 K32  ; R26 := R25; R25 := R25[0xc0a3774b]
688 [-]: MOVE      R27 R1       ; R27 := R1
689 [-]: LOADK     R28 K33      ; R28 := "Credits"
690 [-]: LOADK     R29 11       ; R29 := 11.000000
691 [-]: LOADBOOL  R30 1 0      ; R30 := true
692 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
693 [-]: GETGLOBAL R25 K31      ; R25 := 0xae91e43b
694 [-]: SELF      R25 R25 K128 ; R26 := R25; R25 := R25[0xe261aa96]
695 [-]: MOVE      R27 R1       ; R27 := R1
696 [-]: LOADK     R28 K33      ; R28 := "Credits"
697 [-]: LOADK     R29 29       ; R29 := 29.000000
698 [-]: MOVE      R30 R20      ; R30 := R20
699 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
700 [-]: GETGLOBAL R25 K31      ; R25 := 0xae91e43b
701 [-]: SELF      R25 R25 K32  ; R26 := R25; R25 := R25[0xc0a3774b]
702 [-]: MOVE      R27 R1       ; R27 := R1
703 [-]: LOADK     R28 K40      ; R28 := "CreditsBG"
704 [-]: LOADK     R29 11       ; R29 := 11.000000
705 [-]: LOADBOOL  R30 1 0      ; R30 := true
706 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
707 [-]: TEST      R21 0        ; if not R21 then PC := 723
708 [-]: JMP       723          ; PC := 723
709 [-]: GETGLOBAL R25 K31      ; R25 := 0xae91e43b
710 [-]: SELF      R25 R25 K32  ; R26 := R25; R25 := R25[0xc0a3774b]
711 [-]: MOVE      R27 R1       ; R27 := R1
712 [-]: LOADK     R28 K39      ; R28 := "PriceIcon"
713 [-]: LOADK     R29 11       ; R29 := 11.000000
714 [-]: LOADBOOL  R30 1 0      ; R30 := true
715 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
716 [-]: GETGLOBAL R25 K129     ; R25 := 0x38f10e85
717 [-]: GETGLOBAL R26 K31      ; R26 := 0xae91e43b
718 [-]: MOVE      R27 R1       ; R27 := R1
719 [-]: LOADK     R28 K130     ; R28 := ".PriceIcon.gotoAndStop"
720 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
721 [-]: MOVE      R28 R21      ; R28 := R21
722 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
723 [-]: GETTABLE  R25 R0 K131  ; R25 := R0["Coupon"]
724 [-]: EQ        0 R25 K1     ; if R25 ~= nil then PC := 737
725 [-]: JMP       737          ; PC := 737
726 [-]: GETGLOBAL R25 K84      ; R25 := 0x7b998233
727 [-]: GETTABLE  R26 R0 K132  ; R26 := R0["StoreItem"]
728 [-]: CALL      R25 2 2      ; R25 := R25(R26)
729 [-]: TEST      R25 0        ; if not R25 then PC := 733
730 [-]: JMP       733          ; PC := 733
731 [-]: GETTABLE  R25 R0 K91   ; R25 := R0["mStoreItem"]
732 [-]: SETTABLE  R0 K132 R25  ; R0["StoreItem"] := R25
733 [-]: GETUPVAL  R25 U2       ; R25 := U2
734 [-]: GETTABLE  R25 R25 K133 ; R25 := R25[0x89fba24e]
735 [-]: MOVE      R26 R0       ; R26 := R0
736 [-]: CALL      R25 2 1      ; R25(R26)
737 [-]: LOADBOOL  R25 0 0      ; R25 := false
738 [-]: LOADK     R26 1        ; R26 := 1.000000
739 [-]: GETGLOBAL R27 K53      ; R27 := 0x0032441c
740 [-]: GETTABLE  R27 R27 K134 ; R27 := R27["UIColor_Orange"]
741 [-]: GETGLOBAL R28 K53      ; R28 := 0x0032441c
742 [-]: GETTABLE  R28 R28 K134 ; R28 := R28["UIColor_Orange"]
743 [-]: GETGLOBAL R29 K53      ; R29 := 0x0032441c
744 [-]: GETTABLE  R29 R29 K135 ; R29 := R29["UIColor_DarkGrey"]
745 [-]: LOADK     R30 0        ; R30 := 0.000000
746 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
747 [-]: EQ        1 R31 K1     ; if R31 == nil then PC := 762
748 [-]: JMP       762          ; PC := 762
749 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
750 [-]: GETTABLE  R31 R31 K137 ; R31 := R31["mProductExpiryOverride"]
751 [-]: EQ        1 R31 K1     ; if R31 == nil then PC := 762
752 [-]: JMP       762          ; PC := 762
753 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
754 [-]: GETTABLE  R31 R31 K137 ; R31 := R31["mProductExpiryOverride"]
755 [-]: GETTABLE  R31 R31 K104 ; R31 := R31["sec"]
756 [-]: EQ        1 R31 K43    ; if R31 == "" then PC := 762
757 [-]: JMP       762          ; PC := 762
758 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
759 [-]: GETTABLE  R31 R31 K137 ; R31 := R31["mProductExpiryOverride"]
760 [-]: GETTABLE  R30 R31 K104 ; R30 := R31["sec"]
761 [-]: JMP       769          ; PC := 769
762 [-]: GETTABLE  R31 R0 K132  ; R31 := R0["StoreItem"]
763 [-]: TEST      R31 0        ; if not R31 then PC := 769
764 [-]: JMP       769          ; PC := 769
765 [-]: GETTABLE  R31 R0 K132  ; R31 := R0["StoreItem"]
766 [-]: SELF      R31 R31 K138 ; R32 := R31; R31 := R31[0x5630a625]
767 [-]: CALL      R31 2 2      ; R31 := R31(R32)
768 [-]: MOVE      R30 R31      ; R30 := R31
769 [-]: EQ        1 R30 K105   ; if R30 == 0.000000 then PC := 781
770 [-]: JMP       781          ; PC := 781
771 [-]: LOADBOOL  R25 1 0      ; R25 := true
772 [-]: LOADK     R26 3        ; R26 := 3.000000
773 [-]: GETGLOBAL R31 K31      ; R31 := 0xae91e43b
774 [-]: SELF      R31 R31 K93  ; R32 := R31; R31 := R31[0x20b98db3]
775 [-]: MOVE      R33 R1       ; R33 := R1
776 [-]: LOADK     R34 K139     ; R34 := ".SaleTag.Label.text"
777 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
778 [-]: LOADK     R34 K140     ; R34 := "/Lotus/Language/Menu/Store_Expires"
779 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
780 [-]: JMP       985          ; PC := 985
781 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
782 [-]: EQ        1 R31 K1     ; if R31 == nil then PC := 801
783 [-]: JMP       801          ; PC := 801
784 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
785 [-]: GETTABLE  R31 R31 K141 ; R31 := R31["mDiscount"]
786 [-]: LT        0 K105 R31   ; if 0.000000 >= R31 then PC := 801
787 [-]: JMP       801          ; PC := 801
788 [-]: LOADBOOL  R25 1 0      ; R25 := true
789 [-]: GETGLOBAL R31 K31      ; R31 := 0xae91e43b
790 [-]: SELF      R31 R31 K93  ; R32 := R31; R31 := R31[0x20b98db3]
791 [-]: MOVE      R33 R1       ; R33 := R1
792 [-]: LOADK     R34 K139     ; R34 := ".SaleTag.Label.text"
793 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
794 [-]: LOADK     R34 K142     ; R34 := "/Lotus/Language/Menu/Store_Discount"
795 [-]: NEWTABLE  R35 0 1      ; R35 := {}
796 [-]: GETTABLE  R36 R0 K136  ; R36 := R0["Sale"]
797 [-]: GETTABLE  R36 R36 K141 ; R36 := R36["mDiscount"]
798 [-]: SETTABLE  R35 K143 R36 ; R35["value"] := R36
799 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
800 [-]: JMP       985          ; PC := 985
801 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
802 [-]: EQ        1 R31 K1     ; if R31 == nil then PC := 831
803 [-]: JMP       831          ; PC := 831
804 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
805 [-]: GETTABLE  R31 R31 K144 ; R31 := R31["mBogoBuy"]
806 [-]: LT        0 K105 R31   ; if 0.000000 >= R31 then PC := 831
807 [-]: JMP       831          ; PC := 831
808 [-]: GETTABLE  R31 R0 K136  ; R31 := R0["Sale"]
809 [-]: GETTABLE  R31 R31 K145 ; R31 := R31["mBogoGet"]
810 [-]: LT        0 K105 R31   ; if 0.000000 >= R31 then PC := 831
811 [-]: JMP       831          ; PC := 831
812 [-]: LOADBOOL  R25 1 0      ; R25 := true
813 [-]: GETGLOBAL R31 K31      ; R31 := 0xae91e43b
814 [-]: SELF      R31 R31 K93  ; R32 := R31; R31 := R31[0x20b98db3]
815 [-]: MOVE      R33 R1       ; R33 := R1
816 [-]: LOADK     R34 K139     ; R34 := ".SaleTag.Label.text"
817 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
818 [-]: LOADK     R34 K146     ; R34 := "/Lotus/Language/Menu/Store_Bogo"
819 [-]: NEWTABLE  R35 0 2      ; R35 := {}
820 [-]: GETTABLE  R36 R0 K136  ; R36 := R0["Sale"]
821 [-]: GETTABLE  R36 R36 K144 ; R36 := R36["mBogoBuy"]
822 [-]: SETTABLE  R35 K147 R36 ; R35["BUY"] := R36
823 [-]: GETTABLE  R36 R0 K136  ; R36 := R0["Sale"]
824 [-]: GETTABLE  R36 R36 K144 ; R36 := R36["mBogoBuy"]
825 [-]: GETTABLE  R37 R0 K136  ; R37 := R0["Sale"]
826 [-]: GETTABLE  R37 R37 K145 ; R37 := R37["mBogoGet"]
827 [-]: ADD       R36 R36 R37  ; R36 := R36 + R37
828 [-]: SETTABLE  R35 K148 R36 ; R35["GET"] := R36
829 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
830 [-]: JMP       985          ; PC := 985
831 [-]: GETTABLE  R31 R0 K114  ; R31 := R0["BundleOnly"]
832 [-]: TEST      R31 1        ; if R31 then PC := 985
833 [-]: JMP       985          ; PC := 985
834 [-]: GETTABLE  R31 R0 K131  ; R31 := R0["Coupon"]
835 [-]: EQ        1 R31 K1     ; if R31 == nil then PC := 985
836 [-]: JMP       985          ; PC := 985
837 [-]: GETTABLE  R31 R0 K131  ; R31 := R0["Coupon"]
838 [-]: GETTABLE  R31 R31 K149 ; R31 := R31["mAmount"]
839 [-]: EQ        1 R31 K105   ; if R31 == 0.000000 then PC := 985
840 [-]: JMP       985          ; PC := 985
841 [-]: LOADBOOL  R25 1 0      ; R25 := true
842 [-]: GETUPVAL  R31 U2       ; R31 := U2
843 [-]: GETTABLE  R31 R31 K150 ; R31 := R31[0xcfe63447]
844 [-]: GETGLOBAL R32 K102     ; R32 := 0x34291f5c
845 [-]: GETTABLE  R32 R32 K103 ; R32 := R32[0x397b920f]
846 [-]: GETTABLE  R33 R0 K131  ; R33 := R0["Coupon"]
847 [-]: GETTABLE  R33 R33 K151 ; R33 := R33["mExpiry"]
848 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
849 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
850 [-]: GETGLOBAL R32 K31      ; R32 := 0xae91e43b
851 [-]: SELF      R32 R32 K93  ; R33 := R32; R32 := R32[0x20b98db3]
852 [-]: MOVE      R34 R1       ; R34 := R1
853 [-]: LOADK     R35 K139     ; R35 := ".SaleTag.Label.text"
854 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
855 [-]: LOADK     R35 K152     ; R35 := "<BUILD_TIME>"
856 [-]: MOVE      R36 R31      ; R36 := R31
857 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
858 [-]: CALL      R32 4 1      ; R32(R33,R34,R35)
859 [-]: GETGLOBAL R32 K31      ; R32 := 0xae91e43b
860 [-]: SELF      R32 R32 K32  ; R33 := R32; R32 := R32[0xc0a3774b]
861 [-]: MOVE      R34 R1       ; R34 := R1
862 [-]: LOADK     R35 K153     ; R35 := "SaleTag.Label"
863 [-]: LOADK     R36 75       ; R36 := 75.000000
864 [-]: LOADBOOL  R37 1 0      ; R37 := true
865 [-]: CALL      R32 6 1      ; R32(R33,R34,R35,R36,R37)
866 [-]: LOADK     R26 2        ; R26 := 2.000000
867 [-]: LOADK     R32 K154     ; R32 := 483974.000000
868 [-]: LOADK     R33 K155     ; R33 := 2856898.000000
869 [-]: MOVE      R27 R33      ; R27 := R33
870 [-]: MOVE      R28 R32      ; R28 := R32
871 [-]: GETGLOBAL R34 K53      ; R34 := 0x0032441c
872 [-]: GETTABLE  R29 R34 K156 ; R29 := R34["UIColor_White"]
873 [-]: GETGLOBAL R34 K31      ; R34 := 0xae91e43b
874 [-]: SELF      R34 R34 K157 ; R35 := R34; R34 := R34[0x91a24e4b]
875 [-]: MOVE      R36 R1       ; R36 := R1
876 [-]: LOADK     R37 K25      ; R37 := ".Credits"
877 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
878 [-]: LOADK     R37 33       ; R37 := 33.000000
879 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
880 [-]: GETGLOBAL R35 K31      ; R35 := 0xae91e43b
881 [-]: SELF      R35 R35 K60  ; R36 := R35; R35 := R35[0xf64b7262]
882 [-]: MOVE      R37 R1       ; R37 := R1
883 [-]: LOADK     R38 K64      ; R38 := "StrikeThrough"
884 [-]: LOADK     R39 12       ; R39 := 12.000000
885 [-]: ADD       R40 R34 K158 ; R40 := R34 + 5.000000
886 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
887 [-]: GETGLOBAL R35 K31      ; R35 := 0xae91e43b
888 [-]: SELF      R35 R35 K32  ; R36 := R35; R35 := R35[0xc0a3774b]
889 [-]: MOVE      R37 R1       ; R37 := R1
890 [-]: LOADK     R38 K64      ; R38 := "StrikeThrough"
891 [-]: LOADK     R39 11       ; R39 := 11.000000
892 [-]: LOADBOOL  R40 1 0      ; R40 := true
893 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
894 [-]: GETGLOBAL R35 K31      ; R35 := 0xae91e43b
895 [-]: SELF      R35 R35 K32  ; R36 := R35; R35 := R35[0xc0a3774b]
896 [-]: MOVE      R37 R1       ; R37 := R1
897 [-]: LOADK     R38 K65      ; R38 := "CouponPrice"
898 [-]: LOADK     R39 11       ; R39 := 11.000000
899 [-]: LOADBOOL  R40 1 0      ; R40 := true
900 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
901 [-]: GETGLOBAL R35 K31      ; R35 := 0xae91e43b
902 [-]: SELF      R35 R35 K159 ; R36 := R35; R35 := R35[0xa7ec3e8a]
903 [-]: MOVE      R37 R1       ; R37 := R1
904 [-]: LOADK     R38 K18      ; R38 := ".CouponPrice"
905 [-]: CONCAT    R37 R37 R38  ; R37 := R37 .. R38
906 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
907 [-]: TEST      R35 0        ; if not R35 then PC := 985
908 [-]: JMP       985          ; PC := 985
909 [-]: GETGLOBAL R35 K31      ; R35 := 0xae91e43b
910 [-]: SELF      R35 R35 K157 ; R36 := R35; R35 := R35[0x91a24e4b]
911 [-]: MOVE      R37 R1       ; R37 := R1
912 [-]: LOADK     R38 K160     ; R38 := ".CreditsBg"
913 [-]: CONCAT    R37 R37 R38  ; R37 := R37 .. R38
914 [-]: LOADK     R38 0        ; R38 := 0.000000
915 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
916 [-]: GETGLOBAL R36 K31      ; R36 := 0xae91e43b
917 [-]: SELF      R36 R36 K60  ; R37 := R36; R36 := R36[0xf64b7262]
918 [-]: MOVE      R38 R1       ; R38 := R1
919 [-]: LOADK     R39 K65      ; R39 := "CouponPrice"
920 [-]: LOADK     R40 0        ; R40 := 0.000000
921 [-]: ADD       R41 R35 R34  ; R41 := R35 + R34
922 [-]: ADD       R41 R41 K161 ; R41 := R41 + 20.000000
923 [-]: CALL      R36 6 1      ; R36(R37,R38,R39,R40,R41)
924 [-]: GETUPVAL  R36 U2       ; R36 := U2
925 [-]: GETTABLE  R36 R36 K126 ; R36 := R36[0xe9947039]
926 [-]: GETTABLE  R37 R0 K91   ; R37 := R0["mStoreItem"]
927 [-]: CALL      R36 2 3      ; R36,R37 := R36(R37)
928 [-]: LT        0 K105 R36   ; if 0.000000 >= R36 then PC := 932
929 [-]: JMP       932          ; PC := 932
930 [-]: LE        1 R37 K105   ; if R37 <= 0.000000 then PC := 933
931 [-]: JMP       933          ; PC := 933
932 [-]: LOADBOOL  R38 0 1      ; R38 := false; PC := 933
933 [-]: LOADBOOL  R38 1 0      ; R38 := true
934 [-]: GETUPVAL  R39 U1       ; R39 := U1
935 [-]: GETTABLE  R39 R39 K70  ; R39 := R39[0x06d055f9]
936 [-]: MOVE      R40 R38      ; R40 := R38
937 [-]: MOVE      R41 R36      ; R41 := R36
938 [-]: MOVE      R42 R37      ; R42 := R37
939 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
940 [-]: GETUPVAL  R40 U2       ; R40 := U2
941 [-]: GETTABLE  R40 R40 K162 ; R40 := R40[0xebcd9651]
942 [-]: MOVE      R41 R39      ; R41 := R39
943 [-]: GETTABLE  R42 R0 K131  ; R42 := R0["Coupon"]
944 [-]: GETTABLE  R42 R42 K149 ; R42 := R42["mAmount"]
945 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
946 [-]: MOVE      R39 R40      ; R39 := R40
947 [-]: GETGLOBAL R40 K31      ; R40 := 0xae91e43b
948 [-]: SELF      R40 R40 K128 ; R41 := R40; R40 := R40[0xe261aa96]
949 [-]: MOVE      R42 R1       ; R42 := R1
950 [-]: LOADK     R43 K163     ; R43 := "CouponPrice.Credits"
951 [-]: LOADK     R44 29       ; R44 := 29.000000
952 [-]: GETUPVAL  R45 U1       ; R45 := U1
953 [-]: GETTABLE  R45 R45 K127 ; R45 := R45[0x1142c7a8]
954 [-]: MOVE      R46 R39      ; R46 := R39
955 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
956 [-]: CALL      R40 0 1      ; R40(R41,...)
957 [-]: GETGLOBAL R40 K129     ; R40 := 0x38f10e85
958 [-]: GETGLOBAL R41 K31      ; R41 := 0xae91e43b
959 [-]: MOVE      R42 R1       ; R42 := R1
960 [-]: LOADK     R43 K164     ; R43 := ".CouponPrice.PriceIcon.gotoAndStop"
961 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
962 [-]: MOVE      R43 R21      ; R43 := R21
963 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
964 [-]: GETGLOBAL R40 K31      ; R40 := 0xae91e43b
965 [-]: SELF      R40 R40 K157 ; R41 := R40; R40 := R40[0x91a24e4b]
966 [-]: MOVE      R42 R1       ; R42 := R1
967 [-]: LOADK     R43 K30      ; R43 := ".CouponPrice.Credits"
968 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
969 [-]: LOADK     R43 33       ; R43 := 33.000000
970 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
971 [-]: GETGLOBAL R41 K31      ; R41 := 0xae91e43b
972 [-]: SELF      R41 R41 K60  ; R42 := R41; R41 := R41[0xf64b7262]
973 [-]: MOVE      R43 R1       ; R43 := R1
974 [-]: LOADK     R44 K165     ; R44 := "CouponPrice.CreditsBG"
975 [-]: LOADK     R45 12       ; R45 := 12.000000
976 [-]: ADD       R46 R40 K161 ; R46 := R40 + 20.000000
977 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
978 [-]: GETGLOBAL R41 K31      ; R41 := 0xae91e43b
979 [-]: SELF      R41 R41 K60  ; R42 := R41; R41 := R41[0xf64b7262]
980 [-]: MOVE      R43 R1       ; R43 := R1
981 [-]: LOADK     R44 K166     ; R44 := "CouponPrice.CreditsBg"
982 [-]: LOADK     R45 9        ; R45 := 9.000000
983 [-]: MOVE      R46 R32      ; R46 := R32
984 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
985 [-]: GETGLOBAL R41 K31      ; R41 := 0xae91e43b
986 [-]: SELF      R41 R41 K32  ; R42 := R41; R41 := R41[0xc0a3774b]
987 [-]: MOVE      R43 R1       ; R43 := R1
988 [-]: LOADK     R44 K63      ; R44 := "SaleTag"
989 [-]: LOADK     R45 11       ; R45 := 11.000000
990 [-]: MOVE      R46 R25      ; R46 := R25
991 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
992 [-]: TEST      R25 0        ; if not R25 then PC := 1071
993 [-]: JMP       1071         ; PC := 1071
994 [-]: GETGLOBAL R41 K31      ; R41 := 0xae91e43b
995 [-]: SELF      R41 R41 K157 ; R42 := R41; R41 := R41[0x91a24e4b]
996 [-]: MOVE      R43 R1       ; R43 := R1
997 [-]: LOADK     R44 K11      ; R44 := ".NameBg"
998 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
999 [-]: LOADK     R44 1        ; R44 := 1.000000
1000 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
1001 [-]: GETGLOBAL R42 K31      ; R42 := 0xae91e43b
1002 [-]: SELF      R42 R42 K157 ; R43 := R42; R42 := R42[0x91a24e4b]
1003 [-]: MOVE      R44 R1       ; R44 := R1
1004 [-]: LOADK     R45 K27      ; R45 := ".Name"
1005 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
1006 [-]: LOADK     R45 34       ; R45 := 34.000000
1007 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
1008 [-]: ADD       R42 R42 K161 ; R42 := R42 + 20.000000
1009 [-]: GETGLOBAL R43 K31      ; R43 := 0xae91e43b
1010 [-]: SELF      R43 R43 K157 ; R44 := R43; R43 := R43[0x91a24e4b]
1011 [-]: MOVE      R45 R1       ; R45 := R1
1012 [-]: LOADK     R46 K14      ; R46 := ".SaleTag.Bg"
1013 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
1014 [-]: LOADK     R46 13       ; R46 := 13.000000
1015 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1016 [-]: GETGLOBAL R44 K31      ; R44 := 0xae91e43b
1017 [-]: SELF      R44 R44 K60  ; R45 := R44; R44 := R44[0xf64b7262]
1018 [-]: MOVE      R46 R1       ; R46 := R1
1019 [-]: LOADK     R47 K63      ; R47 := "SaleTag"
1020 [-]: LOADK     R48 1        ; R48 := 1.000000
1021 [-]: GETGLOBAL R49 K167     ; R49 := 0x5bced4c4
1022 [-]: GETTABLE  R49 R49 K168 ; R49 := R49[0xac1b386a]
1023 [-]: UNM       R50 R43      ; R50 := ^ R43
1024 [-]: DIV       R50 R50 K169 ; R50 := R50 / 2.000000
1025 [-]: SUB       R51 R41 R42  ; R51 := R41 - R42
1026 [-]: SUB       R51 R51 R43  ; R51 := R51 - R43
1027 [-]: CALL      R49 3 0      ; R49,... := R49(R50,R51)
1028 [-]: CALL      R44 0 1      ; R44(R45,...)
1029 [-]: GETGLOBAL R44 K31      ; R44 := 0xae91e43b
1030 [-]: SELF      R44 R44 K60  ; R45 := R44; R44 := R44[0xf64b7262]
1031 [-]: MOVE      R46 R1       ; R46 := R1
1032 [-]: LOADK     R47 K153     ; R47 := "SaleTag.Label"
1033 [-]: LOADK     R48 36       ; R48 := 36.000000
1034 [-]: MOVE      R49 R27      ; R49 := R27
1035 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
1036 [-]: GETGLOBAL R44 K31      ; R44 := 0xae91e43b
1037 [-]: SELF      R44 R44 K60  ; R45 := R44; R44 := R44[0xf64b7262]
1038 [-]: MOVE      R46 R1       ; R46 := R1
1039 [-]: LOADK     R47 K170     ; R47 := "SaleTag.IconBg"
1040 [-]: LOADK     R48 9        ; R48 := 9.000000
1041 [-]: MOVE      R49 R28      ; R49 := R28
1042 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
1043 [-]: GETGLOBAL R44 K129     ; R44 := 0x38f10e85
1044 [-]: GETGLOBAL R45 K31      ; R45 := 0xae91e43b
1045 [-]: MOVE      R46 R1       ; R46 := R1
1046 [-]: LOADK     R47 K171     ; R47 := ".SaleTag.Icon.gotoAndStop"
1047 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
1048 [-]: MOVE      R47 R26      ; R47 := R26
1049 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
1050 [-]: GETGLOBAL R44 K31      ; R44 := 0xae91e43b
1051 [-]: SELF      R44 R44 K60  ; R45 := R44; R44 := R44[0xf64b7262]
1052 [-]: MOVE      R46 R1       ; R46 := R1
1053 [-]: LOADK     R47 K172     ; R47 := "SaleTag.Icon"
1054 [-]: LOADK     R48 9        ; R48 := 9.000000
1055 [-]: MOVE      R49 R29      ; R49 := R29
1056 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
1057 [-]: GETGLOBAL R44 K31      ; R44 := 0xae91e43b
1058 [-]: SELF      R44 R44 K60  ; R45 := R44; R44 := R44[0xf64b7262]
1059 [-]: MOVE      R46 R1       ; R46 := R1
1060 [-]: LOADK     R47 K170     ; R47 := "SaleTag.IconBg"
1061 [-]: LOADK     R48 13       ; R48 := 13.000000
1062 [-]: LOADK     R49 91       ; R49 := 91.000000
1063 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
1064 [-]: GETGLOBAL R44 K31      ; R44 := 0xae91e43b
1065 [-]: SELF      R44 R44 K60  ; R45 := R44; R44 := R44[0xf64b7262]
1066 [-]: MOVE      R46 R1       ; R46 := R1
1067 [-]: LOADK     R47 K170     ; R47 := "SaleTag.IconBg"
1068 [-]: LOADK     R48 12       ; R48 := 12.000000
1069 [-]: LOADK     R49 139      ; R49 := 139.000000
1070 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
1071 [-]: LOADBOOL  R44 0 0      ; R44 := false
1072 [-]: LOADBOOL  R45 0 0      ; R45 := false
1073 [-]: LOADK     R46 K43      ; R46 := ""
1074 [-]: GETTABLE  R47 R0 K107  ; R47 := R0["mPurchased"]
1075 [-]: TEST      R47 0        ; if not R47 then PC := 1265
1076 [-]: JMP       1265         ; PC := 1265
1077 [-]: TEST      R16 1        ; if R16 then PC := 1265
1078 [-]: JMP       1265         ; PC := 1265
1079 [-]: LOADK     R47 K43      ; R47 := ""
1080 [-]: LOADK     R48 K173     ; R48 := "Owned"
1081 [-]: GETUPVAL  R49 U3       ; R49 := U3
1082 [-]: GETUPVAL  R50 U4       ; R50 := U4
1083 [-]: GETTABLE  R50 R50 K174 ; R50 := R50["SELECTING_CONSUMABLES"]
1084 [-]: EQ        0 R49 R50    ; if R49 ~= R50 then PC := 1109
1085 [-]: JMP       1109         ; PC := 1109
1086 [-]: GETTABLE  R49 R0 K86   ; R49 := R0["mPurchasedInfo"]
1087 [-]: EQ        1 R49 K1     ; if R49 == nil then PC := 1183
1088 [-]: JMP       1183         ; PC := 1183
1089 [-]: GETTABLE  R49 R0 K86   ; R49 := R0["mPurchasedInfo"]
1090 [-]: GETTABLE  R49 R49 K46  ; R49 := R49["ItemCount"]
1091 [-]: EQ        1 R49 K1     ; if R49 == nil then PC := 1183
1092 [-]: JMP       1183         ; PC := 1183
1093 [-]: GETTABLE  R49 R0 K86   ; R49 := R0["mPurchasedInfo"]
1094 [-]: GETTABLE  R49 R49 K46  ; R49 := R49["ItemCount"]
1095 [-]: LT        0 K175 R49   ; if 1.000000 >= R49 then PC := 1183
1096 [-]: JMP       1183         ; PC := 1183
1097 [-]: GETGLOBAL R49 K71      ; R49 := mSelected
1098 [-]: GETTABLE  R49 R49 K176 ; R49 := R49["Emote"]
1099 [-]: EQ        0 R49 K1     ; if R49 ~= nil then PC := 1183
1100 [-]: JMP       1183         ; PC := 1183
1101 [-]: LOADK     R49 K177     ; R49 := " x "
1102 [-]: GETUPVAL  R50 U1       ; R50 := U1
1103 [-]: GETTABLE  R50 R50 K127 ; R50 := R50[0x1142c7a8]
1104 [-]: GETTABLE  R51 R0 K86   ; R51 := R0["mPurchasedInfo"]
1105 [-]: GETTABLE  R51 R51 K46  ; R51 := R51["ItemCount"]
1106 [-]: CALL      R50 2 2      ; R50 := R50(R51)
1107 [-]: CONCAT    R47 R49 R50  ; R47 := R49 .. R50
1108 [-]: JMP       1183         ; PC := 1183
1109 [-]: TEST      R13 0        ; if not R13 then PC := 1136
1110 [-]: JMP       1136         ; PC := 1136
1111 [-]: GETGLOBAL R49 K102     ; R49 := 0x34291f5c
1112 [-]: GETTABLE  R49 R49 K103 ; R49 := R49[0x397b920f]
1113 [-]: GETTABLE  R50 R14 K151 ; R50 := R14["mExpiry"]
1114 [-]: GETTABLE  R50 R50 K104 ; R50 := R50["sec"]
1115 [-]: CALL      R49 2 2      ; R49 := R49(R50)
1116 [-]: LOADNIL   R50 R50      ; R50 := nil
1117 [-]: LE        0 R49 K105   ; if R49 > 0.000000 then PC := 1126
1118 [-]: JMP       1126         ; PC := 1126
1119 [-]: GETGLOBAL R51 K31      ; R51 := 0xae91e43b
1120 [-]: SELF      R51 R51 K115 ; R52 := R51; R51 := R51[0x42b04007]
1121 [-]: LOADK     R53 K178     ; R53 := "/Lotus/Language/Menu/Expired"
1122 [-]: LOADBOOL  R54 0 0      ; R54 := false
1123 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
1124 [-]: MOVE      R50 R51      ; R50 := R51
1125 [-]: JMP       1131         ; PC := 1131
1126 [-]: GETUPVAL  R51 U2       ; R51 := U2
1127 [-]: GETTABLE  R51 R51 K179 ; R51 := R51[0x10e5bb7a]
1128 [-]: MOVE      R52 R49      ; R52 := R49
1129 [-]: CALL      R51 2 2      ; R51 := R51(R52)
1130 [-]: MOVE      R50 R51      ; R50 := R51
1131 [-]: GETGLOBAL R51 K180     ; R51 := Icons
1132 [-]: GETTABLE  R51 R51 K181 ; R51 := R51["TIMER"]
1133 [-]: MOVE      R52 R50      ; R52 := R50
1134 [-]: CONCAT    R47 R51 R52  ; R47 := R51 .. R52
1135 [-]: JMP       1183         ; PC := 1183
1136 [-]: GETTABLE  R51 R0 K182  ; R51 := R0["Rank"]
1137 [-]: EQ        1 R51 K1     ; if R51 == nil then PC := 1183
1138 [-]: JMP       1183         ; PC := 1183
1139 [-]: LOADK     R51 K183     ; R51 := " ["
1140 [-]: GETTABLE  R52 R0 K182  ; R52 := R0["Rank"]
1141 [-]: LOADK     R53 K184     ; R53 := "]"
1142 [-]: CONCAT    R47 R51 R53  ; R47 := R51 .. R52 .. R53
1143 [-]: GETTABLE  R51 R0 K182  ; R51 := R0["Rank"]
1144 [-]: GETGLOBAL R52 K185     ; R52 := 0xa94df70b
1145 [-]: SELF      R52 R52 K186 ; R53 := R52; R52 := R52[0x757f0100]
1146 [-]: GETTABLE  R54 R0 K97   ; R54 := R0["Type"]
1147 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
1148 [-]: LE        1 R52 R51    ; if R52 <= R51 then PC := 1151
1149 [-]: JMP       1151         ; PC := 1151
1150 [-]: LOADBOOL  R51 0 1      ; R51 := false; PC := 1151
1151 [-]: LOADBOOL  R51 1 0      ; R51 := true
1152 [-]: GETTABLE  R52 R0 K86   ; R52 := R0["mPurchasedInfo"]
1153 [-]: GETTABLE  R52 R52 K72  ; R52 := R52["Item"]
1154 [-]: GETTABLE  R52 R52 K187 ; R52 := R52["mPolarized"]
1155 [-]: LT        0 K105 R52   ; if 0.000000 >= R52 then PC := 1159
1156 [-]: JMP       1159         ; PC := 1159
1157 [-]: LOADK     R48 K188     ; R48 := "Forma"
1158 [-]: JMP       1162         ; PC := 1162
1159 [-]: TEST      R51 0        ; if not R51 then PC := 1162
1160 [-]: JMP       1162         ; PC := 1162
1161 [-]: LOADK     R48 K189     ; R48 := "Max"
1162 [-]: TEST      R51 0        ; if not R51 then PC := 1183
1163 [-]: JMP       1183         ; PC := 1183
1164 [-]: LOADK     R52 K190     ; R52 := " "
1165 [-]: GETGLOBAL R53 K31      ; R53 := 0xae91e43b
1166 [-]: SELF      R53 R53 K115 ; R54 := R53; R53 := R53[0x42b04007]
1167 [-]: LOADK     R55 K191     ; R55 := "/Lotus/Language/Ranks/MaxRankAbbreviated"
1168 [-]: LOADBOOL  R56 0 0      ; R56 := false
1169 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
1170 [-]: CONCAT    R47 R52 R53  ; R47 := R52 .. R53
1171 [-]: GETTABLE  R52 R0 K192  ; R52 := R0["Polarity"]
1172 [-]: EQ        1 R52 K1     ; if R52 == nil then PC := 1183
1173 [-]: JMP       1183         ; PC := 1183
1174 [-]: MOVE      R52 R47      ; R52 := R47
1175 [-]: LOADK     R53 K190     ; R53 := " "
1176 [-]: GETGLOBAL R54 K31      ; R54 := 0xae91e43b
1177 [-]: SELF      R54 R54 K115 ; R55 := R54; R54 := R54[0x42b04007]
1178 [-]: GETTABLE  R56 R0 K192  ; R56 := R0["Polarity"]
1179 [-]: GETTABLE  R56 R56 K193 ; R56 := R56["LensTag"]
1180 [-]: LOADBOOL  R57 1 0      ; R57 := true
1181 [-]: CALL      R54 4 2      ; R54 := R54(R55,R56,R57)
1182 [-]: CONCAT    R47 R52 R54  ; R47 := R52 .. R53 .. R54
1183 [-]: GETGLOBAL R52 K129     ; R52 := 0x38f10e85
1184 [-]: GETGLOBAL R53 K31      ; R53 := 0xae91e43b
1185 [-]: GETTABLE  R54 R0 K0    ; R54 := R0["mClipName"]
1186 [-]: LOADK     R55 K194     ; R55 := ".OwnedStatus.gotoAndStop"
1187 [-]: CONCAT    R54 R54 R55  ; R54 := R54 .. R55
1188 [-]: MOVE      R55 R48      ; R55 := R48
1189 [-]: CALL      R52 4 1      ; R52(R53,R54,R55)
1190 [-]: EQ        0 R48 K188   ; if R48 ~= "Forma" then PC := 1203
1191 [-]: JMP       1203         ; PC := 1203
1192 [-]: GETGLOBAL R52 K31      ; R52 := 0xae91e43b
1193 [-]: SELF      R52 R52 K128 ; R53 := R52; R52 := R52[0xe261aa96]
1194 [-]: GETTABLE  R54 R0 K0    ; R54 := R0["mClipName"]
1195 [-]: LOADK     R55 K195     ; R55 := "OwnedStatus.FormaCount"
1196 [-]: LOADK     R56 29       ; R56 := 29.000000
1197 [-]: GETGLOBAL R57 K196     ; R57 := 0x64fb1586
1198 [-]: GETTABLE  R58 R0 K86   ; R58 := R0["mPurchasedInfo"]
1199 [-]: GETTABLE  R58 R58 K72  ; R58 := R58["Item"]
1200 [-]: GETTABLE  R58 R58 K187 ; R58 := R58["mPolarized"]
1201 [-]: CALL      R57 2 0      ; R57,... := R57(R58)
1202 [-]: CALL      R52 0 1      ; R52(R53,...)
1203 [-]: GETGLOBAL R52 K31      ; R52 := 0xae91e43b
1204 [-]: SELF      R52 R52 K60  ; R53 := R52; R52 := R52[0xf64b7262]
1205 [-]: GETTABLE  R54 R0 K0    ; R54 := R0["mClipName"]
1206 [-]: LOADK     R55 K45      ; R55 := "PetInfo"
1207 [-]: LOADK     R56 1        ; R56 := 1.000000
1208 [-]: GETUPVAL  R57 U1       ; R57 := U1
1209 [-]: GETTABLE  R57 R57 K70  ; R57 := R57[0x06d055f9]
1210 [-]: EQ        1 R48 K173   ; if R48 == "Owned" then PC := 1213
1211 [-]: JMP       1213         ; PC := 1213
1212 [-]: LOADBOOL  R58 0 1      ; R58 := false; PC := 1213
1213 [-]: LOADBOOL  R58 1 0      ; R58 := true
1214 [-]: LOADK     R59 0        ; R59 := 0.000000
1215 [-]: LOADK     R60 35       ; R60 := 35.000000
1216 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
1217 [-]: ADD       R57 K197 R57 ; R57 := -83.000000 + R57
1218 [-]: CALL      R52 6 1      ; R52(R53,R54,R55,R56,R57)
1219 [-]: EQ        1 R47 K43    ; if R47 == "" then PC := 1236
1220 [-]: JMP       1236         ; PC := 1236
1221 [-]: GETTABLE  R52 R0 K97   ; R52 := R0["Type"]
1222 [-]: SELF      R52 R52 K98  ; R53 := R52; R52 := R52[0xf2deaf69]
1223 [-]: GETGLOBAL R54 K198     ; R54 := gLotusSpeedballMeleeWeaponType
1224 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
1225 [-]: TEST      R52 1        ; if R52 then PC := 1236
1226 [-]: JMP       1236         ; PC := 1236
1227 [-]: LOADK     R52 K199     ; R52 := "<p><font color=\"#FFFFFF\"><b>"
1228 [-]: MOVE      R53 R12      ; R53 := R12
1229 [-]: LOADK     R54 K200     ; R54 := "</b>"
1230 [-]: GETGLOBAL R55 K80      ; R55 := 0x7f5022cf
1231 [-]: GETTABLE  R55 R55 K81  ; R55 := R55[0x3f3e4d12]
1232 [-]: MOVE      R56 R47      ; R56 := R47
1233 [-]: CALL      R55 2 2      ; R55 := R55(R56)
1234 [-]: LOADK     R56 K201     ; R56 := "</font></p>"
1235 [-]: CONCAT    R12 R52 R56  ; R12 := R52 .. R53 .. R54 .. R55 .. R56
1236 [-]: GETUPVAL  R52 U5       ; R52 := U5
1237 [-]: GETTABLE  R52 R52 K202 ; R52 := R52["LoadOutType"]
1238 [-]: GETUPVAL  R53 U3       ; R53 := U3
1239 [-]: GETUPVAL  R54 U4       ; R54 := U4
1240 [-]: GETTABLE  R54 R54 K203 ; R54 := R54["SWAPPING_ITEM"]
1241 [-]: EQ        0 R53 R54    ; if R53 ~= R54 then PC := 1259
1242 [-]: JMP       1259         ; PC := 1259
1243 [-]: EQ        1 R52 K205   ; if R52 == 8.000000 then PC := 1259
1244 [-]: JMP       1259         ; PC := 1259
1245 [-]: GETTABLE  R53 R0 K206  ; R53 := R0["LoadOutId"]
1246 [-]: EQ        0 R53 K207   ; if R53 ~= 4.000000 then PC := 1259
1247 [-]: JMP       1259         ; PC := 1259
1248 [-]: GETTABLE  R53 R0 K208  ; R53 := R0["mLockTag"]
1249 [-]: TEST      R53 1        ; if R53 then PC := 1259
1250 [-]: JMP       1259         ; PC := 1259
1251 [-]: GETTABLE  R53 R0 K209  ; R53 := R0["RawItem"]
1252 [-]: GETTABLE  R53 R53 K72  ; R53 := R53["Item"]
1253 [-]: SELF      R53 R53 K210 ; R54 := R53; R53 := R53[0xdbfbf6c0]
1254 [-]: LOADK     R55 2        ; R55 := 2.000000
1255 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
1256 [-]: TEST      R53 1        ; if R53 then PC := 1259
1257 [-]: JMP       1259         ; PC := 1259
1258 [-]: SETTABLE  R0 K208 K211 ; R0["mLockTag"] := "/Lotus/Language/Menu/HeavyLocked"
1259 [-]: GETTABLE  R53 R0 K208  ; R53 := R0["mLockTag"]
1260 [-]: TEST      R53 0        ; if not R53 then PC := 1289
1261 [-]: JMP       1289         ; PC := 1289
1262 [-]: LOADBOOL  R44 1 0      ; R44 := true
1263 [-]: GETTABLE  R46 R0 K208  ; R46 := R0["mLockTag"]
1264 [-]: JMP       1289         ; PC := 1289
1265 [-]: GETTABLE  R53 R0 K38   ; R53 := R0["XPLocked"]
1266 [-]: TEST      R53 1        ; if R53 then PC := 1270
1267 [-]: JMP       1270         ; PC := 1270
1268 [-]: TEST      R16 0        ; if not R16 then PC := 1289
1269 [-]: JMP       1289         ; PC := 1289
1270 [-]: GETGLOBAL R53 K84      ; R53 := 0x7b998233
1271 [-]: GETTABLE  R54 R0 K91   ; R54 := R0["mStoreItem"]
1272 [-]: CALL      R53 2 2      ; R53 := R53(R54)
1273 [-]: NOT       R44 R53      ; R44 := not R53
1274 [-]: NOT       R45 R16      ; R45 := not R16
1275 [-]: GETUPVAL  R53 U1       ; R53 := U1
1276 [-]: GETTABLE  R53 R53 K70  ; R53 := R53[0x06d055f9]
1277 [-]: MOVE      R54 R16      ; R54 := R16
1278 [-]: LOADK     R55 K212     ; R55 := "/Lotus/Language/Menu/Store_WeaponLocked"
1279 [-]: LOADK     R56 K213     ; R56 := "/Lotus/Language/Menu/Store_XPLocked"
1280 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
1281 [-]: MOVE      R46 R53      ; R46 := R53
1282 [-]: GETGLOBAL R53 K31      ; R53 := 0xae91e43b
1283 [-]: SELF      R53 R53 K128 ; R54 := R53; R53 := R53[0xe261aa96]
1284 [-]: MOVE      R55 R1       ; R55 := R1
1285 [-]: LOADK     R56 K214     ; R56 := "XPLocked.ReqLevel"
1286 [-]: LOADK     R57 29       ; R57 := 29.000000
1287 [-]: GETTABLE  R58 R0 K215  ; R58 := R0["ReqLevel"]
1288 [-]: CALL      R53 6 1      ; R53(R54,R55,R56,R57,R58)
1289 [-]: GETGLOBAL R53 K31      ; R53 := 0xae91e43b
1290 [-]: SELF      R53 R53 K32  ; R54 := R53; R53 := R53[0xc0a3774b]
1291 [-]: MOVE      R55 R1       ; R55 := R1
1292 [-]: LOADK     R56 K38      ; R56 := "XPLocked"
1293 [-]: LOADK     R57 11       ; R57 := 11.000000
1294 [-]: MOVE      R58 R44      ; R58 := R44
1295 [-]: CALL      R53 6 1      ; R53(R54,R55,R56,R57,R58)
1296 [-]: TEST      R44 0        ; if not R44 then PC := 1355
1297 [-]: JMP       1355         ; PC := 1355
1298 [-]: GETGLOBAL R53 K31      ; R53 := 0xae91e43b
1299 [-]: SELF      R53 R53 K32  ; R54 := R53; R53 := R53[0xc0a3774b]
1300 [-]: MOVE      R55 R1       ; R55 := R1
1301 [-]: LOADK     R56 K216     ; R56 := "XPLocked.Icon"
1302 [-]: LOADK     R57 11       ; R57 := 11.000000
1303 [-]: MOVE      R58 R45      ; R58 := R45
1304 [-]: CALL      R53 6 1      ; R53(R54,R55,R56,R57,R58)
1305 [-]: GETGLOBAL R53 K31      ; R53 := 0xae91e43b
1306 [-]: SELF      R53 R53 K32  ; R54 := R53; R53 := R53[0xc0a3774b]
1307 [-]: MOVE      R55 R1       ; R55 := R1
1308 [-]: LOADK     R56 K214     ; R56 := "XPLocked.ReqLevel"
1309 [-]: LOADK     R57 11       ; R57 := 11.000000
1310 [-]: MOVE      R58 R45      ; R58 := R45
1311 [-]: CALL      R53 6 1      ; R53(R54,R55,R56,R57,R58)
1312 [-]: GETUPVAL  R53 U1       ; R53 := U1
1313 [-]: GETTABLE  R53 R53 K70  ; R53 := R53[0x06d055f9]
1314 [-]: MOVE      R54 R45      ; R54 := R45
1315 [-]: LOADK     R55 40       ; R55 := 40.000000
1316 [-]: LOADK     R56 0        ; R56 := 0.000000
1317 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
1318 [-]: SUB       R53 K217 R53 ; R53 := 180.000000 - R53
1319 [-]: GETGLOBAL R54 K31      ; R54 := 0xae91e43b
1320 [-]: SELF      R54 R54 K128 ; R55 := R54; R54 := R54[0xe261aa96]
1321 [-]: MOVE      R56 R1       ; R56 := R1
1322 [-]: LOADK     R57 K218     ; R57 := "XPLocked.Label"
1323 [-]: LOADK     R58 38       ; R58 := 38.000000
1324 [-]: LOADK     R59 K219     ; R59 := "center"
1325 [-]: CALL      R54 6 1      ; R54(R55,R56,R57,R58,R59)
1326 [-]: GETGLOBAL R54 K31      ; R54 := 0xae91e43b
1327 [-]: SELF      R54 R54 K60  ; R55 := R54; R54 := R54[0xf64b7262]
1328 [-]: MOVE      R56 R1       ; R56 := R1
1329 [-]: LOADK     R57 K218     ; R57 := "XPLocked.Label"
1330 [-]: LOADK     R58 12       ; R58 := 12.000000
1331 [-]: MOVE      R59 R53      ; R59 := R53
1332 [-]: CALL      R54 6 1      ; R54(R55,R56,R57,R58,R59)
1333 [-]: GETGLOBAL R54 K31      ; R54 := 0xae91e43b
1334 [-]: SELF      R54 R54 K93  ; R55 := R54; R54 := R54[0x20b98db3]
1335 [-]: MOVE      R56 R1       ; R56 := R1
1336 [-]: LOADK     R57 K220     ; R57 := ".XPLocked.Label.text"
1337 [-]: CONCAT    R56 R56 R57  ; R56 := R56 .. R57
1338 [-]: MOVE      R57 R46      ; R57 := R46
1339 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
1340 [-]: GETGLOBAL R54 K31      ; R54 := 0xae91e43b
1341 [-]: SELF      R54 R54 K221 ; R55 := R54; R54 := R54[0x2ce15376]
1342 [-]: MOVE      R56 R1       ; R56 := R1
1343 [-]: LOADK     R57 K218     ; R57 := "XPLocked.Label"
1344 [-]: LOADK     R58 35       ; R58 := 35.000000
1345 [-]: CALL      R54 5 2      ; R54 := R54(R55,R56,R57,R58)
1346 [-]: GETGLOBAL R55 K31      ; R55 := 0xae91e43b
1347 [-]: SELF      R55 R55 K60  ; R56 := R55; R55 := R55[0xf64b7262]
1348 [-]: MOVE      R57 R1       ; R57 := R1
1349 [-]: LOADK     R58 K222     ; R58 := "XPLocked.Bg"
1350 [-]: LOADK     R59 13       ; R59 := 13.000000
1351 [-]: SUB       R60 R54 K175 ; R60 := R54 - 1.000000
1352 [-]: MUL       R60 K223 R60 ; R60 := 10.000000 * R60
1353 [-]: ADD       R60 K224 R60 ; R60 := 30.000000 + R60
1354 [-]: CALL      R55 6 1      ; R55(R56,R57,R58,R59,R60)
1355 [-]: GETGLOBAL R55 K31      ; R55 := 0xae91e43b
1356 [-]: SELF      R55 R55 K157 ; R56 := R55; R55 := R55[0x91a24e4b]
1357 [-]: MOVE      R57 R1       ; R57 := R1
1358 [-]: LOADK     R58 K25      ; R58 := ".Credits"
1359 [-]: CONCAT    R57 R57 R58  ; R57 := R57 .. R58
1360 [-]: LOADK     R58 33       ; R58 := 33.000000
1361 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
1362 [-]: GETGLOBAL R56 K31      ; R56 := 0xae91e43b
1363 [-]: SELF      R56 R56 K60  ; R57 := R56; R56 := R56[0xf64b7262]
1364 [-]: MOVE      R58 R1       ; R58 := R1
1365 [-]: LOADK     R59 K40      ; R59 := "CreditsBG"
1366 [-]: LOADK     R60 12       ; R60 := 12.000000
1367 [-]: ADD       R61 R55 K161 ; R61 := R55 + 20.000000
1368 [-]: CALL      R56 6 1      ; R56(R57,R58,R59,R60,R61)
1369 [-]: GETGLOBAL R56 K31      ; R56 := 0xae91e43b
1370 [-]: SELF      R56 R56 K32  ; R57 := R56; R56 := R56[0xc0a3774b]
1371 [-]: MOVE      R58 R1       ; R58 := R1
1372 [-]: LOADK     R59 K49      ; R59 := "SigilMark"
1373 [-]: LOADK     R60 11       ; R60 := 11.000000
1374 [-]: LOADBOOL  R61 0 0      ; R61 := false
1375 [-]: CALL      R56 6 1      ; R56(R57,R58,R59,R60,R61)
1376 [-]: LOADK     R56 266      ; R56 := 266.000000
1377 [-]: LOADK     R57 180      ; R57 := 180.000000
1378 [-]: GETGLOBAL R58 K84      ; R58 := 0x7b998233
1379 [-]: GETTABLE  R59 R0 K97   ; R59 := R0["Type"]
1380 [-]: CALL      R58 2 2      ; R58 := R58(R59)
1381 [-]: TEST      R58 1        ; if R58 then PC := 1403
1382 [-]: JMP       1403         ; PC := 1403
1383 [-]: GETTABLE  R58 R0 K97   ; R58 := R0["Type"]
1384 [-]: SELF      R58 R58 K98  ; R59 := R58; R58 := R58[0xf2deaf69]
1385 [-]: GETGLOBAL R60 K225     ; R60 := gLotusSigilType
1386 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
1387 [-]: TEST      R58 0        ; if not R58 then PC := 1399
1388 [-]: JMP       1399         ; PC := 1399
1389 [-]: GETTABLE  R58 R0 K226  ; R58 := R0["IsSyndicateSigil"]
1390 [-]: TEST      R58 0        ; if not R58 then PC := 1399
1391 [-]: JMP       1399         ; PC := 1399
1392 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1393 [-]: SELF      R58 R58 K32  ; R59 := R58; R58 := R58[0xc0a3774b]
1394 [-]: MOVE      R60 R1       ; R60 := R1
1395 [-]: LOADK     R61 K49      ; R61 := "SigilMark"
1396 [-]: LOADK     R62 11       ; R62 := 11.000000
1397 [-]: LOADBOOL  R63 1 0      ; R63 := true
1398 [-]: CALL      R58 6 1      ; R58(R59,R60,R61,R62,R63)
1399 [-]: GETTABLE  R58 R0 K227  ; R58 := R0["Themed"]
1400 [-]: TEST      R58 0        ; if not R58 then PC := 1403
1401 [-]: JMP       1403         ; PC := 1403
1402 [-]: MOVE      R56 R57      ; R56 := R57
1403 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1404 [-]: SELF      R58 R58 K60  ; R59 := R58; R58 := R58[0xf64b7262]
1405 [-]: MOVE      R60 R1       ; R60 := R1
1406 [-]: LOADK     R61 K228     ; R61 := "ImageMask"
1407 [-]: LOADK     R62 12       ; R62 := 12.000000
1408 [-]: MOVE      R63 R57      ; R63 := R57
1409 [-]: CALL      R58 6 1      ; R58(R59,R60,R61,R62,R63)
1410 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1411 [-]: SELF      R58 R58 K60  ; R59 := R58; R58 := R58[0xf64b7262]
1412 [-]: MOVE      R60 R1       ; R60 := R1
1413 [-]: LOADK     R61 K228     ; R61 := "ImageMask"
1414 [-]: LOADK     R62 13       ; R62 := 13.000000
1415 [-]: MOVE      R63 R57      ; R63 := R57
1416 [-]: CALL      R58 6 1      ; R58(R59,R60,R61,R62,R63)
1417 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1418 [-]: SELF      R58 R58 K60  ; R59 := R58; R58 := R58[0xf64b7262]
1419 [-]: MOVE      R60 R1       ; R60 := R1
1420 [-]: LOADK     R61 K61      ; R61 := "Image"
1421 [-]: LOADK     R62 12       ; R62 := 12.000000
1422 [-]: MOVE      R63 R56      ; R63 := R56
1423 [-]: CALL      R58 6 1      ; R58(R59,R60,R61,R62,R63)
1424 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1425 [-]: SELF      R58 R58 K60  ; R59 := R58; R58 := R58[0xf64b7262]
1426 [-]: MOVE      R60 R1       ; R60 := R1
1427 [-]: LOADK     R61 K62      ; R61 := "Shadow"
1428 [-]: LOADK     R62 12       ; R62 := 12.000000
1429 [-]: MOVE      R63 R56      ; R63 := R56
1430 [-]: CALL      R58 6 1      ; R58(R59,R60,R61,R62,R63)
1431 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1432 [-]: SELF      R58 R58 K60  ; R59 := R58; R58 := R58[0xf64b7262]
1433 [-]: MOVE      R60 R1       ; R60 := R1
1434 [-]: LOADK     R61 K61      ; R61 := "Image"
1435 [-]: LOADK     R62 13       ; R62 := 13.000000
1436 [-]: MOVE      R63 R57      ; R63 := R57
1437 [-]: CALL      R58 6 1      ; R58(R59,R60,R61,R62,R63)
1438 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1439 [-]: SELF      R58 R58 K60  ; R59 := R58; R58 := R58[0xf64b7262]
1440 [-]: MOVE      R60 R1       ; R60 := R1
1441 [-]: LOADK     R61 K62      ; R61 := "Shadow"
1442 [-]: LOADK     R62 13       ; R62 := 13.000000
1443 [-]: MOVE      R63 R57      ; R63 := R57
1444 [-]: CALL      R58 6 1      ; R58(R59,R60,R61,R62,R63)
1445 [-]: GETUPVAL  R58 U6       ; R58 := U6
1446 [-]: TEST      R58 0        ; if not R58 then PC := 1475
1447 [-]: JMP       1475         ; PC := 1475
1448 [-]: GETGLOBAL R58 K84      ; R58 := 0x7b998233
1449 [-]: GETTABLE  R59 R0 K91   ; R59 := R0["mStoreItem"]
1450 [-]: CALL      R58 2 2      ; R58 := R58(R59)
1451 [-]: TEST      R58 1        ; if R58 then PC := 1475
1452 [-]: JMP       1475         ; PC := 1475
1453 [-]: GETGLOBAL R58 K31      ; R58 := 0xae91e43b
1454 [-]: SELF      R58 R58 K115 ; R59 := R58; R58 := R58[0x42b04007]
1455 [-]: GETGLOBAL R60 K196     ; R60 := 0x64fb1586
1456 [-]: GETTABLE  R61 R0 K91   ; R61 := R0["mStoreItem"]
1457 [-]: SELF      R61 R61 K229 ; R62 := R61; R61 := R61[0xd3a9d01f]
1458 [-]: CALL      R61 2 0      ; R61,... := R61(R62)
1459 [-]: CALL      R60 0 2      ; R60 := R60(R61,...)
1460 [-]: LOADBOOL  R61 1 0      ; R61 := true
1461 [-]: CALL      R58 4 2      ; R58 := R58(R59,R60,R61)
1462 [-]: GETTABLE  R59 R0 K82   ; R59 := R0["Name"]
1463 [-]: EQ        1 R59 K1     ; if R59 == nil then PC := 1475
1464 [-]: JMP       1475         ; PC := 1475
1465 [-]: GETTABLE  R59 R0 K82   ; R59 := R0["Name"]
1466 [-]: EQ        1 R59 R58    ; if R59 == R58 then PC := 1475
1467 [-]: JMP       1475         ; PC := 1475
1468 [-]: GETGLOBAL R59 K31      ; R59 := 0xae91e43b
1469 [-]: SELF      R59 R59 K128 ; R60 := R59; R59 := R59[0xe261aa96]
1470 [-]: MOVE      R61 R1       ; R61 := R1
1471 [-]: LOADK     R62 K82      ; R62 := "Name"
1472 [-]: LOADK     R63 41       ; R63 := 41.000000
1473 [-]: LOADK     R64 K230     ; R64 := "Arial Unicode MS"
1474 [-]: CALL      R59 6 1      ; R59(R60,R61,R62,R63,R64)
1475 [-]: GETGLOBAL R59 K31      ; R59 := 0xae91e43b
1476 [-]: SELF      R59 R59 K42  ; R60 := R59; R59 := R59[0x5f56eeab]
1477 [-]: MOVE      R61 R1       ; R61 := R1
1478 [-]: LOADK     R62 K27      ; R62 := ".Name"
1479 [-]: CONCAT    R61 R61 R62  ; R61 := R61 .. R62
1480 [-]: LOADK     R62 29       ; R62 := 29.000000
1481 [-]: MOVE      R63 R12      ; R63 := R12
1482 [-]: CALL      R59 5 1      ; R59(R60,R61,R62,R63)
1483 [-]: GETGLOBAL R59 K31      ; R59 := 0xae91e43b
1484 [-]: SELF      R59 R59 K60  ; R60 := R59; R59 := R59[0xf64b7262]
1485 [-]: MOVE      R61 R1       ; R61 := R1
1486 [-]: LOADK     R62 K82      ; R62 := "Name"
1487 [-]: LOADK     R63 9        ; R63 := 9.000000
1488 [-]: GETGLOBAL R64 K53      ; R64 := 0x0032441c
1489 [-]: GETTABLE  R64 R64 K135 ; R64 := R64["UIColor_DarkGrey"]
1490 [-]: CALL      R59 6 1      ; R59(R60,R61,R62,R63,R64)
1491 [-]: GETGLOBAL R59 K31      ; R59 := 0xae91e43b
1492 [-]: SELF      R59 R59 K157 ; R60 := R59; R59 := R59[0x91a24e4b]
1493 [-]: MOVE      R61 R1       ; R61 := R1
1494 [-]: LOADK     R62 K27      ; R62 := ".Name"
1495 [-]: CONCAT    R61 R61 R62  ; R61 := R61 .. R62
1496 [-]: LOADK     R62 34       ; R62 := 34.000000
1497 [-]: CALL      R59 4 2      ; R59 := R59(R60,R61,R62)
1498 [-]: GETGLOBAL R60 K31      ; R60 := 0xae91e43b
1499 [-]: SELF      R60 R60 K60  ; R61 := R60; R60 := R60[0xf64b7262]
1500 [-]: MOVE      R62 R1       ; R62 := R1
1501 [-]: LOADK     R63 K48      ; R63 := "NameBg"
1502 [-]: LOADK     R64 13       ; R64 := 13.000000
1503 [-]: ADD       R65 R59 K223 ; R65 := R59 + 10.000000
1504 [-]: CALL      R60 6 1      ; R60(R61,R62,R63,R64,R65)
1505 [-]: GETGLOBAL R60 K31      ; R60 := 0xae91e43b
1506 [-]: SELF      R60 R60 K32  ; R61 := R60; R60 := R60[0xc0a3774b]
1507 [-]: MOVE      R62 R1       ; R62 := R1
1508 [-]: LOADK     R63 K48      ; R63 := "NameBg"
1509 [-]: LOADK     R64 11       ; R64 := 11.000000
1510 [-]: LOADBOOL  R65 1 0      ; R65 := true
1511 [-]: CALL      R60 6 1      ; R60(R61,R62,R63,R64,R65)
1512 [-]: LOADK     R60 1        ; R60 := 1.000000
1513 [-]: LEN       R61 R2       ; R61 := # R2
1514 [-]: LOADK     R62 1        ; R62 := 1.000000
1515 [-]: FORPREP   R60 1523     ; R60 -= R62; PC := 1523
1516 [-]: GETGLOBAL R64 K31      ; R64 := 0xae91e43b
1517 [-]: SELF      R64 R64 K34  ; R65 := R64; R64 := R64[0xd5181643]
1518 [-]: GETTABLE  R66 R0 K0    ; R66 := R0["mClipName"]
1519 [-]: GETTABLE  R67 R2 R63   ; R67 := R2[R63]
1520 [-]: CONCAT    R66 R66 R67  ; R66 := R66 .. R67
1521 [-]: GETGLOBAL R67 K66      ; R67 := 0xae09323f
1522 [-]: CALL      R64 4 1      ; R64(R65,R66,R67)
1523 [-]: FORLOOP   R60 1516     ; R60 += R62; if R60 <= R61 then begin PC := 1516; R63 := R60 end
1524 [-]: LOADK     R64 1        ; R64 := 1.000000
1525 [-]: LEN       R65 R3       ; R65 := # R3
1526 [-]: LOADK     R66 1        ; R66 := 1.000000
1527 [-]: FORPREP   R64 1535     ; R64 -= R66; PC := 1535
1528 [-]: GETGLOBAL R68 K31      ; R68 := 0xae91e43b
1529 [-]: SELF      R68 R68 K34  ; R69 := R68; R68 := R68[0xd5181643]
1530 [-]: GETTABLE  R70 R0 K0    ; R70 := R0["mClipName"]
1531 [-]: GETTABLE  R71 R3 R67   ; R71 := R3[R67]
1532 [-]: CONCAT    R70 R70 R71  ; R70 := R70 .. R71
1533 [-]: GETGLOBAL R71 K67      ; R71 := 0x7e155d6a
1534 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
1535 [-]: FORLOOP   R64 1528     ; R64 += R66; if R64 <= R65 then begin PC := 1528; R67 := R64 end
1536 [-]: RETURN    R0 1         ; return 


; Function #133.7:
;
; Name:            
; Defined at line: 8691
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x5fbddc1a]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: EQ        0 R2 K1      ; if R2 ~= 0.000000 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0xed1ab921]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: GETGLOBAL R3 K3        ; R3 := mSelected
  9 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Item"]
 10 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 11 [-]: GETGLOBAL R5 K6        ; R5 := mPendingSelection
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: GETGLOBAL R3 K6        ; R3 := mPendingSelection
 16 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 17 [-]: MOVE      R5 R3        ; R5 := R3
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 33
 20 [-]: JMP       33           ; PC := 33
 21 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 22 [-]: MOVE      R5 R2        ; R5 := R2
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: TEST      R4 1         ; if R4 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETTABLE  R4 R2 K7     ; R4 := R2["Id"]
 27 [-]: GETTABLE  R5 R3 K7     ; R5 := R3["Id"]
 28 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0[0xdf42446e]
 31 [-]: GETTABLE  R6 R3 K7     ; R6 := R3["Id"]
 32 [-]: CALL      R4 3 1       ; R4(R5,R6)
 33 [-]: SELF      R4 R0 K9     ; R5 := R0; R4 := R0[0x33a8707d]
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: CALL      R4 3 1       ; R4(R5,R6)
 36 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 37 [-]: MOVE      R5 R2        ; R5 := R2
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: TEST      R4 1         ; if R4 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETTABLE  R4 R2 K7     ; R4 := R2["Id"]
 42 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0[0xed1ab921]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Id"]
 45 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: SELF      R4 R0 K10    ; R5 := R0; R4 := R0[0x8b24ce41]
 48 [-]: CALL      R4 2 1       ; R4(R5)
 49 [-]: RETURN    R0 1         ; return 


; Function #133.8:
;
; Name:            
; Defined at line: 8711
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mLowerSearchTerm"]
  8 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mLowerSearchTerm"]
 12 [-]: EQ        0 R1 K3      ; if R1 ~= "" then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: LOADBOOL  R1 0 0       ; R1 := false
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       31           ; PC := 31
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x7f5022cf
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0xa5c556b9]
 19 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["SearchCache"]
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mLowerSearchTerm"]
 22 [-]: LOADK     R4 1         ; R4 := 1.000000
 23 [-]: LOADBOOL  R5 1 0       ; R5 := true
 24 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 25 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 28
 28 [-]: LOADBOOL  R1 1 0       ; R1 := true
 29 [-]: NOT       R2 R1        ; R2 := not R1
 30 [-]: RETURN    R2 2         ; return R2
 31 [-]: RETURN    R0 1         ; return 


; Function #133.9:
;
; Name:            
; Defined at line: 8727
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mEmpty"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mEmpty"]
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: JMP       119          ; PC := 119
 10 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mEmpty"]
 11 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LOADBOOL  R2 1 0       ; R2 := true
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: JMP       119          ; PC := 119
 16 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mEmpty"]
 17 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: LOADBOOL  R2 0 0       ; R2 := false
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: JMP       119          ; PC := 119
 22 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mDefault"]
 23 [-]: TEST      R2 0         ; if not R2 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["mDefault"]
 26 [-]: TEST      R2 0         ; if not R2 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: LOADNIL   R2 R2        ; R2 := nil
 29 [-]: RETURN    R2 2         ; return R2
 30 [-]: JMP       119          ; PC := 119
 31 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mDefault"]
 32 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: LOADBOOL  R2 1 0       ; R2 := true
 35 [-]: RETURN    R2 2         ; return R2
 36 [-]: JMP       119          ; PC := 119
 37 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["mDefault"]
 38 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADBOOL  R2 0 0       ; R2 := false
 41 [-]: RETURN    R2 2         ; return R2
 42 [-]: JMP       119          ; PC := 119
 43 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mPurchased"]
 44 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mPurchased"]
 45 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 65
 46 [-]: JMP       65           ; PC := 65
 47 [-]: GETUPVAL  R2 U0        ; R2 := U0
 48 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x06d055f9]
 49 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchased"]
 50 [-]: LOADK     R4 1         ; R4 := 1.000000
 51 [-]: LOADK     R5 0         ; R5 := 0.000000
 52 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 53 [-]: GETUPVAL  R3 U0        ; R3 := U0
 54 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x06d055f9]
 55 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["mPurchased"]
 56 [-]: LOADK     R5 1         ; R5 := 1.000000
 57 [-]: LOADK     R6 0         ; R6 := 0.000000
 58 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 59 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 62
 62 [-]: LOADBOOL  R2 1 0       ; R2 := true
 63 [-]: RETURN    R2 2         ; return R2
 64 [-]: JMP       119          ; PC := 119
 65 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mHeavyWeaponUnlocked"]
 66 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mHeavyWeaponUnlocked"]
 67 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 92
 68 [-]: JMP       92           ; PC := 92
 69 [-]: GETUPVAL  R2 U1        ; R2 := U1
 70 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x13271dc4]
 71 [-]: CALL      R2 1 2       ; R2 := R2()
 72 [-]: TEST      R2 0         ; if not R2 then PC := 92
 73 [-]: JMP       92           ; PC := 92
 74 [-]: GETUPVAL  R2 U0        ; R2 := U0
 75 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x06d055f9]
 76 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mHeavyWeaponUnlocked"]
 77 [-]: LOADK     R4 1         ; R4 := 1.000000
 78 [-]: LOADK     R5 0         ; R5 := 0.000000
 79 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 80 [-]: GETUPVAL  R3 U0        ; R3 := U0
 81 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x06d055f9]
 82 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["mHeavyWeaponUnlocked"]
 83 [-]: LOADK     R5 1         ; R5 := 1.000000
 84 [-]: LOADK     R6 0         ; R6 := 0.000000
 85 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 86 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 89
 89 [-]: LOADBOOL  R2 1 0       ; R2 := true
 90 [-]: RETURN    R2 2         ; return R2
 91 [-]: JMP       119          ; PC := 119
 92 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mPurchased"]
 93 [-]: TEST      R2 1         ; if R2 then PC := 117
 94 [-]: JMP       117          ; PC := 117
 95 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["XPLocked"]
 96 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["XPLocked"]
 97 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 117
 98 [-]: JMP       117          ; PC := 117
 99 [-]: GETUPVAL  R2 U0        ; R2 := U0
100 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x06d055f9]
101 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["XPLocked"]
102 [-]: LOADK     R4 1         ; R4 := 1.000000
103 [-]: LOADK     R5 0         ; R5 := 0.000000
104 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
105 [-]: GETUPVAL  R3 U0        ; R3 := U0
106 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x06d055f9]
107 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["XPLocked"]
108 [-]: LOADK     R5 1         ; R5 := 1.000000
109 [-]: LOADK     R6 0         ; R6 := 0.000000
110 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
111 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 114
114 [-]: LOADBOOL  R2 1 0       ; R2 := true
115 [-]: RETURN    R2 2         ; return R2
116 [-]: JMP       119          ; PC := 119
117 [-]: LOADNIL   R2 R2        ; R2 := nil
118 [-]: RETURN    R2 2         ; return R2
119 [-]: RETURN    R0 1         ; return 


; Function #133.10:
;
; Name:            
; Defined at line: 8755
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
  9 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Rank"]
 12 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 15 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 16 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 19
 19 [-]: LOADBOOL  R3 1 0       ; R3 := true
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: JMP       41           ; PC := 41
 22 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 23 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 24 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
 27 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Rank"]
 28 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 31
 31 [-]: LOADBOOL  R3 1 0       ; R3 := true
 32 [-]: RETURN    R3 2         ; return R3
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 35 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 36 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 39
 39 [-]: LOADBOOL  R3 1 0       ; R3 := true
 40 [-]: RETURN    R3 2         ; return R3
 41 [-]: RETURN    R0 1         ; return 


; Function #133.11:
;
; Name:            
; Defined at line: 8772
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
  9 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Rank"]
 12 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 15 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 16 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 19
 19 [-]: LOADBOOL  R3 1 0       ; R3 := true
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: JMP       41           ; PC := 41
 22 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
 23 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Rank"]
 24 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 27 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 28 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 31
 31 [-]: LOADBOOL  R3 1 0       ; R3 := true
 32 [-]: RETURN    R3 2         ; return R3
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
 35 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Rank"]
 36 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 39
 39 [-]: LOADBOOL  R3 1 0       ; R3 := true
 40 [-]: RETURN    R3 2         ; return R3
 41 [-]: RETURN    R0 1         ; return 


; Function #133.12:
;
; Name:            
; Defined at line: 8789
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
  9 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Rank"]
 12 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 15 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 16 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 19
 19 [-]: LOADBOOL  R3 1 0       ; R3 := true
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: JMP       75           ; PC := 75
 22 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchasedInfo"]
 23 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 44
 24 [-]: JMP       44           ; PC := 44
 25 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mPurchasedInfo"]
 26 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 44
 27 [-]: JMP       44           ; PC := 44
 28 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchasedInfo"]
 29 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Item"]
 30 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 44
 31 [-]: JMP       44           ; PC := 44
 32 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mPurchasedInfo"]
 33 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Item"]
 34 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchasedInfo"]
 37 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Item"]
 38 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mPolarized"]
 39 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["mPurchasedInfo"]
 40 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Item"]
 41 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mPolarized"]
 42 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 43 [-]: JMP       64           ; PC := 64
 44 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
 45 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Rank"]
 46 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 49 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 50 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 53
 53 [-]: LOADBOOL  R3 1 0       ; R3 := true
 54 [-]: RETURN    R3 2         ; return R3
 55 [-]: JMP       75           ; PC := 75
 56 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
 57 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Rank"]
 58 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 61
 61 [-]: LOADBOOL  R3 1 0       ; R3 := true
 62 [-]: RETURN    R3 2         ; return R3
 63 [-]: JMP       75           ; PC := 75
 64 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchasedInfo"]
 65 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Item"]
 66 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mPolarized"]
 67 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["mPurchasedInfo"]
 68 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Item"]
 69 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mPolarized"]
 70 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 73
 73 [-]: LOADBOOL  R3 1 0       ; R3 := true
 74 [-]: RETURN    R3 2         ; return R3
 75 [-]: RETURN    R0 1         ; return 


; Function #133.13:
;
; Name:            
; Defined at line: 8811
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
  9 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Rank"]
 12 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 15 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 16 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 19
 19 [-]: LOADBOOL  R3 1 0       ; R3 := true
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: JMP       63           ; PC := 63
 22 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchasedInfo"]
 23 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mPurchasedInfo"]
 26 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchasedInfo"]
 29 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Usage"]
 30 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["mPurchasedInfo"]
 31 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Usage"]
 32 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 54
 33 [-]: JMP       54           ; PC := 54
 34 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 35 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 36 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Rank"]
 39 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Rank"]
 40 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 43
 43 [-]: LOADBOOL  R3 1 0       ; R3 := true
 44 [-]: RETURN    R3 2         ; return R3
 45 [-]: JMP       63           ; PC := 63
 46 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Name"]
 47 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Name"]
 48 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 51
 51 [-]: LOADBOOL  R3 1 0       ; R3 := true
 52 [-]: RETURN    R3 2         ; return R3
 53 [-]: JMP       63           ; PC := 63
 54 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mPurchasedInfo"]
 55 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Usage"]
 56 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["mPurchasedInfo"]
 57 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Usage"]
 58 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 61
 61 [-]: LOADBOOL  R3 1 0       ; R3 := true
 62 [-]: RETURN    R3 2         ; return R3
 63 [-]: RETURN    R0 1         ; return 


; Function #133.14:
;
; Name:            
; Defined at line: 8831
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Polarity"]
  9 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 12
 12 [-]: LOADBOOL  R3 1 0       ; R3 := true
 13 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Polarity"]
 14 [-]: EQ        0 R4 K0      ; if R4 ~= nil then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 17
 17 [-]: LOADBOOL  R4 1 0       ; R4 := true
 18 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: JMP       83           ; PC := 83
 22 [-]: TEST      R3 1         ; if R3 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: TEST      R4 1         ; if R4 then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["Name"]
 27 [-]: GETTABLE  R6 R1 K2     ; R6 := R1["Name"]
 28 [-]: LT        1 R5 R6      ; if R5 < R6 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 31
 31 [-]: LOADBOOL  R5 1 0       ; R5 := true
 32 [-]: RETURN    R5 2         ; return R5
 33 [-]: JMP       83           ; PC := 83
 34 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Polarity"]
 35 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["Polarity"]
 36 [-]: GETTABLE  R7 R5 K3     ; R7 := R5["Type"]
 37 [-]: GETTABLE  R8 R6 K3     ; R8 := R6["Type"]
 38 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 68
 39 [-]: JMP       68           ; PC := 68
 40 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mPurchasedInfo"]
 41 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["Item"]
 42 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["mFocusLens"]
 43 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0xf2deaf69]
 44 [-]: GETGLOBAL R9 K8        ; R9 := 0x7ed0a956
 45 [-]: LOADK     R10 K9       ; R10 := "/Lotus/Types/Items/MiscItems/FocusLensGreater"
 46 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 47 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 48 [-]: GETTABLE  R8 R1 K4     ; R8 := R1["mPurchasedInfo"]
 49 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["Item"]
 50 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mFocusLens"]
 51 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0xf2deaf69]
 52 [-]: GETGLOBAL R10 K8       ; R10 := 0x7ed0a956
 53 [-]: LOADK     R11 K9       ; R11 := "/Lotus/Types/Items/MiscItems/FocusLensGreater"
 54 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 55 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 56 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 66
 57 [-]: JMP       66           ; PC := 66
 58 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["Name"]
 59 [-]: GETTABLE  R10 R1 K2    ; R10 := R1["Name"]
 60 [-]: LT        1 R9 R10     ; if R9 < R10 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: LOADBOOL  R9 0 1       ; R9 := false; PC := 63
 63 [-]: LOADBOOL  R9 1 0       ; R9 := true
 64 [-]: RETURN    R9 2         ; return R9
 65 [-]: JMP       83           ; PC := 83
 66 [-]: RETURN    R7 2         ; return R7
 67 [-]: JMP       83           ; PC := 83
 68 [-]: GETGLOBAL R9 K10       ; R9 := 0xae91e43b
 69 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0x42b04007]
 70 [-]: GETTABLE  R11 R5 K12   ; R11 := R5["NameTag"]
 71 [-]: LOADBOOL  R12 0 0      ; R12 := false
 72 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 73 [-]: GETGLOBAL R10 K10      ; R10 := 0xae91e43b
 74 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10[0x42b04007]
 75 [-]: GETTABLE  R12 R6 K12   ; R12 := R6["NameTag"]
 76 [-]: LOADBOOL  R13 0 0      ; R13 := false
 77 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 78 [-]: LT        1 R9 R10     ; if R9 < R10 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 81
 81 [-]: LOADBOOL  R11 1 0      ; R11 := true
 82 [-]: RETURN    R11 2        ; return R11
 83 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 8880
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: TEST      R1 0         ; if not R1 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["EquippedItem"]
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xba568eef]
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 0         ; if not R1 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETUPVAL  R1 U1        ; R1 := U1
 19 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0xe0cba3ca]
 20 [-]: LOADK     R2 K6        ; R2 := "/Lotus/Language/Changyou/CannotColourTimeLimitedEquipment"
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 24 [-]: GETGLOBAL R2 K7        ; R2 := 0x9000ff2a
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 0         ; if not R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 30 [-]: LOADNIL   R2 R2        ; R2 := nil
 31 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 32 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 33 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["LoadOutId"]
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0x6c97a788
 35 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["NUM_NORMAL_LOADOUT_SLOTS"]
 36 [-]: LE        0 R4 R3      ; if R4 > R3 then PC := 43
 37 [-]: JMP       43           ; PC := 43
 38 [-]: GETUPVAL  R3 U2        ; R3 := U2
 39 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 40 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: MOVE      R2 R3        ; R2 := R3
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[0xd3fed720]
 45 [-]: GETUPVAL  R4 U4        ; R4 := U4
 46 [-]: LOADBOOL  R5 1 0       ; R5 := true
 47 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 48 [-]: GETUPVAL  R5 U1        ; R5 := U1
 49 [-]: GETTABLE  R5 R5 K12    ; R5 := R5[0x06d055f9]
 50 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 51 [-]: MOVE      R7 R0        ; R7 := R0
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: GETUPVAL  R7 U5        ; R7 := U5
 54 [-]: CALL      R7 1 2       ; R7 := R7()
 55 [-]: MOVE      R8 R0        ; R8 := R0
 56 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 57 [-]: LEN       R6 R3        ; R6 := # R3
 58 [-]: TEST      R4 1         ; if R4 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: ADD       R6 R6 K13    ; R6 := R6 + 1.000000
 61 [-]: CLOSURE   R7 0         ; R7 := closure(Function #134.1)
 62 [-]: MOVE      R0 R3        ; R0 := R3
 63 [-]: MOVE      R0 R1        ; R0 := R1
 64 [-]: LOADK     R8 0         ; R8 := 0.000000
 65 [-]: LOADK     R9 7         ; R9 := 7.000000
 66 [-]: LOADK     R10 1        ; R10 := 1.000000
 67 [-]: FORPREP   R8 93        ; R8 -= R10; PC := 93
 68 [-]: EQ        1 R2 K14     ; if R2 == nil then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETTABLE  R12 R2 R11   ; R12 := R2[R11]
 71 [-]: TEST      R12 0        ; if not R12 then PC := 93
 72 [-]: JMP       93           ; PC := 93
 73 [-]: EQ        0 R11 K15    ; if R11 ~= 7.000000 then PC := 81
 74 [-]: JMP       81           ; PC := 81
 75 [-]: GETUPVAL  R12 U6       ; R12 := U6
 76 [-]: GETGLOBAL R13 K1       ; R13 := mSelected
 77 [-]: GETTABLE  R13 R13 K2   ; R13 := R13["Element"]
 78 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 79 [-]: TEST      R12 0        ; if not R12 then PC := 93
 80 [-]: JMP       93           ; PC := 93
 81 [-]: MOVE      R12 R7       ; R12 := R7
 82 [-]: GETGLOBAL R13 K16      ; R13 := 0x55730e1a
 83 [-]: LOADK     R14 1        ; R14 := 1.000000
 84 [-]: MOVE      R15 R6       ; R15 := R6
 85 [-]: CALL      R13 3 0      ; R13,... := R13(R14,R15)
 86 [-]: CALL      R12 0 3      ; R12,R13 := R12(R13,...)
 87 [-]: GETUPVAL  R14 U7       ; R14 := U7
 88 [-]: MOVE      R15 R11      ; R15 := R11
 89 [-]: MOVE      R16 R12      ; R16 := R12
 90 [-]: MOVE      R17 R5       ; R17 := R5
 91 [-]: MOVE      R18 R13      ; R18 := R13
 92 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 93 [-]: FORLOOP   R8 68        ; R8 += R10; if R8 <= R9 then begin PC := 68; R11 := R8 end
 94 [-]: GETUPVAL  R14 U8       ; R14 := U8
 95 [-]: GETTABLE  R14 R14 K17  ; R14 := R14[0xf6edf3bb]
 96 [-]: CALL      R14 1 1      ; R14()
 97 [-]: GETUPVAL  R14 U1       ; R14 := U1
 98 [-]: GETTABLE  R14 R14 K18  ; R14 := R14[0x659d451f]
 99 [-]: GETGLOBAL R15 K19      ; R15 := 0x0032441c
100 [-]: GETTABLE  R15 R15 K20  ; R15 := R15["UISound_ButtonSelect"]
101 [-]: CALL      R14 2 1      ; R14(R15)
102 [-]: RETURN    R0 1         ; return 


; Function #134.1:
;
; Name:            
; Defined at line: 8907
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: LEN       R2 R2        ; R2 := # R2
  3 [-]: LE        0 R0 R2      ; if R0 > R2 then PC := 18
  4 [-]: JMP       18           ; PC := 18
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xb009bbc6
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  8 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mStoreItem"]
  9 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xf278f8a1]
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 12 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x31522360]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: SETUPVAL  R3 U1        ; U82 := R1
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: GETTABLE  R1 R3 K1     ; R1 := R3["mStoreItem"]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: EQ        0 R3 K4      ; if R3 ~= nil then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 22 [-]: SETUPVAL  R3 U1        ; U82 := R1
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: LEN       R3 R3        ; R3 := # R3
 25 [-]: EQ        0 R3 K5      ; if R3 ~= 0.000000 then PC := 42
 26 [-]: JMP       42           ; PC := 42
 27 [-]: GETGLOBAL R3 K6        ; R3 := 0x9000ff2a
 28 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x31522360]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: LOADK     R4 3         ; R4 := 3.000000
 31 [-]: LEN       R5 R3        ; R5 := # R3
 32 [-]: LT        0 R4 R5      ; if R4 >= R5 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R5 K7        ; R5 := 0x33bdd652
 35 [-]: GETTABLE  R5 R5 K8     ; R5 := R5[0x23d5322f]
 36 [-]: GETUPVAL  R6 U1        ; R6 := U1
 37 [-]: GETTABLE  R7 R3 R4     ; R7 := R3[R4]
 38 [-]: CALL      R5 3 1       ; R5(R6,R7)
 39 [-]: ADD       R4 R4 K9     ; R4 := R4 + 5.000000
 40 [-]: JMP       31           ; PC := 31
 41 [-]: LOADNIL   R1 R1        ; R1 := nil
 42 [-]: GETUPVAL  R5 U1        ; R5 := U1
 43 [-]: GETGLOBAL R6 K10       ; R6 := 0x55730e1a
 44 [-]: LOADK     R7 1         ; R7 := 1.000000
 45 [-]: GETUPVAL  R8 U1        ; R8 := U1
 46 [-]: LEN       R8 R8        ; R8 := # R8
 47 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 48 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 49 [-]: MOVE      R6 R1        ; R6 := R1
 50 [-]: RETURN    R5 3         ; return R5,R6
 51 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 8949
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Customization"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 73
 15 [-]: JMP       73           ; PC := 73
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 18 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 19 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["LoadOutType"]
 20 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 21 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 22 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["LoadOutId"]
 23 [-]: CALL      R2 3 3       ; R2,R3 := R2(R3,R4)
 24 [-]: GETUPVAL  R4 U1        ; R4 := U1
 25 [-]: GETGLOBAL R5 K1        ; R5 := mSelected
 26 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Element"]
 27 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["LoadOutType"]
 28 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
 29 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
 30 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["LoadOutId"]
 31 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 32 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 33 [-]: MOVE      R6 R4        ; R6 := R4
 34 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 35 [-]: TEST      R5 1         ; if R5 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: SELF      R5 R4 K6     ; R6 := R4; R5 := R4[0xaa041663]
 38 [-]: MOVE      R7 R1        ; R7 := R1
 39 [-]: LOADBOOL  R8 0 0       ; R8 := false
 40 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 41 [-]: LEN       R5 R2        ; R5 := # R2
 42 [-]: LOADK     R6 1         ; R6 := 1.000000
 43 [-]: LOADK     R7 -1        ; R7 := -1.000000
 44 [-]: FORPREP   R5 49        ; R5 -= R7; PC := 49
 45 [-]: SELF      R9 R1 K7     ; R10 := R1; R9 := R1[0x61b59a83]
 46 [-]: GETTABLE  R11 R2 R8    ; R11 := R2[R8]
 47 [-]: MOVE      R12 R3       ; R12 := R3
 48 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 49 [-]: FORLOOP   R5 45        ; R5 += R7; if R5 <= R6 then begin PC := 45; R8 := R5 end
 50 [-]: GETGLOBAL R9 K8        ; R9 := _T
 51 [-]: SETTABLE  R9 K9 K10    ; R9["LoadoutSaveRequired"] := true
 52 [-]: GETGLOBAL R9 K1        ; R9 := mSelected
 53 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["Element"]
 54 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["EquippedItem"]
 55 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9[0xaa041663]
 56 [-]: MOVE      R11 R1       ; R11 := R1
 57 [-]: GETGLOBAL R12 K1       ; R12 := mSelected
 58 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["Element"]
 59 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["mCustSlot"]
 60 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 61 [-]: GETGLOBAL R9 K13       ; R9 := mInventory
 62 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9[0x9b051033]
 63 [-]: GETGLOBAL R11 K1       ; R11 := mSelected
 64 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["Element"]
 65 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["UID"]
 66 [-]: GETGLOBAL R12 K1       ; R12 := mSelected
 67 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["Element"]
 68 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["mCustSlot"]
 69 [-]: MOVE      R13 R1       ; R13 := R1
 70 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 71 [-]: GETUPVAL  R9 U2        ; R9 := U2
 72 [-]: CALL      R9 1 1       ; R9()
 73 [-]: EQ        1 R0 K16     ; if R0 == nil then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: EQ        0 R0 K10     ; if R0 ~= true then PC := 84
 76 [-]: JMP       84           ; PC := 84
 77 [-]: GETGLOBAL R9 K17       ; R9 := mLists
 78 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["mCosmeticsList"]
 79 [-]: SELF      R9 R9 K19    ; R10 := R9; R9 := R9[0x71e9ac81]
 80 [-]: LOADNIL   R11 R11      ; R11 := nil
 81 [-]: LOADBOOL  R12 1 0      ; R12 := true
 82 [-]: LOADBOOL  R13 1 0      ; R13 := true
 83 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 84 [-]: GETGLOBAL R9 K20       ; R9 := 0x25d99d89
 85 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9[0x400b84a1]
 86 [-]: GETGLOBAL R11 K1       ; R11 := mSelected
 87 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["Element"]
 88 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["LoadOutType"]
 89 [-]: GETGLOBAL R12 K22      ; R12 := mCurrentLoadout
 90 [-]: GETGLOBAL R13 K1       ; R13 := mSelected
 91 [-]: GETTABLE  R13 R13 K2   ; R13 := R13["Element"]
 92 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["LoadOutType"]
 93 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
 94 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 95 [-]: GETGLOBAL R9 K8        ; R9 := _T
 96 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["MenuSuitAvatar"]
 97 [-]: GETUPVAL  R10 U3       ; R10 := U3
 98 [-]: CALL      R10 1 2      ; R10 := R10()
 99 [-]: TEST      R10 1        ; if R10 then PC := 120
100 [-]: JMP       120          ; PC := 120
101 [-]: GETGLOBAL R10 K8       ; R10 := _T
102 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["mSentinelMode"]
103 [-]: TEST      R10 0        ; if not R10 then PC := 120
104 [-]: JMP       120          ; PC := 120
105 [-]: GETGLOBAL R10 K20      ; R10 := 0x25d99d89
106 [-]: SELF      R10 R10 K25  ; R11 := R10; R10 := R10[0x3c6b0324]
107 [-]: CALL      R10 2 2      ; R10 := R10(R11)
108 [-]: TEST      R10 1        ; if R10 then PC := 115
109 [-]: JMP       115          ; PC := 115
110 [-]: GETGLOBAL R10 K20      ; R10 := 0x25d99d89
111 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x9f91f49d]
112 [-]: CALL      R10 2 2      ; R10 := R10(R11)
113 [-]: TEST      R10 0        ; if not R10 then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: LOADK     R10 1        ; R10 := 1.000000
116 [-]: SETUPVAL  R10 U4       ; U82 := R4
117 [-]: GETUPVAL  R10 U5       ; R10 := U5
118 [-]: GETTABLE  R10 R10 K27  ; R10 := R10[0xd4c67576]
119 [-]: CALL      R10 1 1      ; R10()
120 [-]: GETUPVAL  R10 U6       ; R10 := U6
121 [-]: MOVE      R11 R9       ; R11 := R9
122 [-]: GETGLOBAL R12 K1       ; R12 := mSelected
123 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["Element"]
124 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["LoadOutType"]
125 [-]: GETGLOBAL R13 K1       ; R13 := mSelected
126 [-]: GETTABLE  R13 R13 K2   ; R13 := R13["Element"]
127 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["LoadOutId"]
128 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
129 [-]: GETUPVAL  R10 U7       ; R10 := U7
130 [-]: GETUPVAL  R11 U8       ; R11 := U8
131 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["Current"]
132 [-]: EQ        1 R11 K30    ; if R11 == 2.000000 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 135
135 [-]: LOADBOOL  R11 1 0      ; R11 := true
136 [-]: CALL      R10 2 1      ; R10(R11)
137 [-]: GETGLOBAL R10 K1       ; R10 := mSelected
138 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["Element"]
139 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["LoadOutId"]
140 [-]: GETGLOBAL R11 K29      ; R11 := 0x6c97a788
141 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["NUM_NORMAL_LOADOUT_SLOTS"]
142 [-]: LE        0 R11 R10    ; if R11 > R10 then PC := 178
143 [-]: JMP       178          ; PC := 178
144 [-]: SELF      R10 R9 K32   ; R11 := R9; R10 := R9[0xde321e6f]
145 [-]: CALL      R10 2 2      ; R10 := R10(R11)
146 [-]: SELF      R11 R10 K33  ; R12 := R10; R11 := R10[0xab98dbf5]
147 [-]: GETGLOBAL R13 K1       ; R13 := mSelected
148 [-]: GETTABLE  R13 R13 K2   ; R13 := R13["Element"]
149 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["EquippedItem"]
150 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["mItemId"]
151 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["mId"]
152 [-]: GETGLOBAL R14 K1       ; R14 := mSelected
153 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["Element"]
154 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["LoadOutType"]
155 [-]: GETGLOBAL R15 K1       ; R15 := mSelected
156 [-]: GETTABLE  R15 R15 K2   ; R15 := R15["Element"]
157 [-]: GETTABLE  R15 R15 K5   ; R15 := R15["LoadOutId"]
158 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
159 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
160 [-]: MOVE      R13 R11      ; R13 := R11
161 [-]: CALL      R12 2 2      ; R12 := R12(R13)
162 [-]: TEST      R12 1        ; if R12 then PC := 178
163 [-]: JMP       178          ; PC := 178
164 [-]: GETUPVAL  R12 U9       ; R12 := U9
165 [-]: CALL      R12 1 2      ; R12 := R12()
166 [-]: SELF      R13 R11 K36  ; R14 := R11; R13 := R11[0x68d708a7]
167 [-]: CALL      R13 2 2      ; R13 := R13(R14)
168 [-]: SELF      R13 R13 K37  ; R14 := R13; R13 := R13[0x8e62760a]
169 [-]: MOVE      R15 R12      ; R15 := R12
170 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
171 [-]: GETGLOBAL R14 K1       ; R14 := mSelected
172 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["Element"]
173 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["Customization"]
174 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14[0x199edf6e]
175 [-]: MOVE      R16 R12      ; R16 := R12
176 [-]: MOVE      R17 R13      ; R17 := R13
177 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
178 [-]: GETUPVAL  R14 U10      ; R14 := U10
179 [-]: GETTABLE  R14 R14 K39  ; R14 := R14[0x659d451f]
180 [-]: GETGLOBAL R15 K40      ; R15 := 0x0032441c
181 [-]: GETTABLE  R15 R15 K41  ; R15 := R15["UISound_ItemTipSection"]
182 [-]: CALL      R14 2 1      ; R14(R15)
183 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 9007
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Customization"]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: CALL      R2 1 2       ; R2 := R2()
 13 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 90
 17 [-]: JMP       90           ; PC := 90
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 20 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 21 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["LoadOutType"]
 22 [-]: GETGLOBAL R5 K1        ; R5 := mSelected
 23 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Element"]
 24 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LoadOutId"]
 25 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 26 [-]: LOADNIL   R5 R6        ; R5 := R6 := nil
 27 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
 28 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Element"]
 29 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["LoadOutId"]
 30 [-]: GETGLOBAL R8 K6        ; R8 := 0x6c97a788
 31 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["NUM_NORMAL_LOADOUT_SLOTS"]
 32 [-]: LE        0 R8 R7      ; if R8 > R7 then PC := 49
 33 [-]: JMP       49           ; PC := 49
 34 [-]: SELF      R7 R1 K8     ; R8 := R1; R7 := R1[0x8e62760a]
 35 [-]: MOVE      R9 R2        ; R9 := R2
 36 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 37 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7[0x697019d0]
 38 [-]: LOADK     R10 6        ; R10 := 6.000000
 39 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 40 [-]: TEST      R8 0         ; if not R8 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: GETTABLE  R5 R7 K10    ; R5 := R7["mEnergyColor"]
 43 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7[0x697019d0]
 44 [-]: LOADK     R10 7        ; R10 := 7.000000
 45 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 46 [-]: TEST      R8 0         ; if not R8 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: GETTABLE  R6 R7 K11    ; R6 := R7["mEnergyColor1"]
 49 [-]: SELF      R8 R1 K12    ; R9 := R1; R8 := R1[0x1adf884d]
 50 [-]: MOVE      R10 R2       ; R10 := R2
 51 [-]: GETUPVAL  R11 U2       ; R11 := U2
 52 [-]: GETTABLE  R11 R11 K13  ; R11 := R11[0x06d055f9]
 53 [-]: EQ        0 R2 K14     ; if R2 ~= 0.000000 then PC := 58
 54 [-]: JMP       58           ; PC := 58
 55 [-]: LEN       R12 R3       ; R12 := # R3
 56 [-]: LT        1 K14 R12    ; if 0.000000 < R12 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 59
 59 [-]: LOADBOOL  R12 1 0      ; R12 := true
 60 [-]: LEN       R13 R3       ; R13 := # R3
 61 [-]: GETTABLE  R13 R3 R13   ; R13 := R3[R13]
 62 [-]: LOADNIL   R14 R14      ; R14 := nil
 63 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 64 [-]: CALL      R8 0 1       ; R8(R9,...)
 65 [-]: EQ        0 R5 K15     ; if R5 ~= nil then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: EQ        1 R6 K15     ; if R6 == nil then PC := 90
 68 [-]: JMP       90           ; PC := 90
 69 [-]: SELF      R8 R1 K8     ; R9 := R1; R8 := R1[0x8e62760a]
 70 [-]: MOVE      R10 R2       ; R10 := R2
 71 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 72 [-]: EQ        1 R5 K15     ; if R5 == nil then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: SETTABLE  R8 K10 R5    ; R8["mEnergyColor"] := R5
 75 [-]: SELF      R9 R8 K16    ; R10 := R8; R9 := R8[0xfc5d7158]
 76 [-]: LOADK     R11 6        ; R11 := 6.000000
 77 [-]: LOADBOOL  R12 1 0      ; R12 := true
 78 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 79 [-]: EQ        1 R6 K15     ; if R6 == nil then PC := 86
 80 [-]: JMP       86           ; PC := 86
 81 [-]: SETTABLE  R8 K11 R6    ; R8["mEnergyColor1"] := R6
 82 [-]: SELF      R9 R8 K16    ; R10 := R8; R9 := R8[0xfc5d7158]
 83 [-]: LOADK     R11 7        ; R11 := 7.000000
 84 [-]: LOADBOOL  R12 1 0      ; R12 := true
 85 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 86 [-]: SELF      R9 R1 K17    ; R10 := R1; R9 := R1[0x199edf6e]
 87 [-]: MOVE      R11 R2       ; R11 := R2
 88 [-]: MOVE      R12 R8       ; R12 := R8
 89 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 90 [-]: GETUPVAL  R9 U3        ; R9 := U3
 91 [-]: GETTABLE  R9 R9 K18    ; R9 := R9[0xba296217]
 92 [-]: MOVE      R10 R0       ; R10 := R0
 93 [-]: CALL      R9 2 1       ; R9(R10)
 94 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 9050
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 25
  6 [-]: JMP       25           ; PC := 25
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Type"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 25
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 15 [-]: GETGLOBAL R2 K4        ; R2 := mLists
 16 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mCosmeticsList"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: GETUPVAL  R2 U1        ; R2 := U1
 22 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["CUSTOMIZING_SKINS"]
 23 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: GETGLOBAL R1 K4        ; R1 := mLists
 27 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mCosmeticsList"]
 28 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mCurrLevel"]
 29 [-]: GETGLOBAL R2 K4        ; R2 := mLists
 30 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mCosmeticsList"]
 31 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["FRONTSIGIL"]
 32 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 42
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETGLOBAL R1 K4        ; R1 := mLists
 35 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mCosmeticsList"]
 36 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mCurrLevel"]
 37 [-]: GETGLOBAL R2 K4        ; R2 := mLists
 38 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mCosmeticsList"]
 39 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["BACKSIGIL"]
 40 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 281
 41 [-]: JMP       281          ; PC := 281
 42 [-]: GETGLOBAL R1 K10       ; R1 := 0x7ed0a956
 43 [-]: LOADK     R2 K11       ; R2 := "/Lotus/Types/Game/PowerSuit"
 44 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 45 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 46 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 47 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Type"]
 48 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0xf2deaf69]
 49 [-]: MOVE      R4 R1        ; R4 := R1
 50 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 51 [-]: TEST      R2 0         ; if not R2 then PC := 536
 52 [-]: JMP       536          ; PC := 536
 53 [-]: GETUPVAL  R2 U2        ; R2 := U2
 54 [-]: GETUPVAL  R3 U3        ; R3 := U3
 55 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["FALSE"]
 56 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 536
 57 [-]: JMP       536          ; PC := 536
 58 [-]: GETGLOBAL R2 K4        ; R2 := mLists
 59 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mCosmeticsList"]
 60 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xca30dfb6]
 61 [-]: GETGLOBAL R4 K15       ; R4 := 0x03f57322
 62 [-]: MOVE      R5 R0        ; R5 := R0
 63 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 64 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 65 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 66 [-]: MOVE      R4 R2        ; R4 := R2
 67 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 68 [-]: TEST      R3 0         ; if not R3 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: RETURN    R0 1         ; return 
 71 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 72 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 73 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["Customization"]
 74 [-]: SELF      R4 R3 K17    ; R5 := R3; R4 := R3[0x8e62760a]
 75 [-]: LOADK     R6 2         ; R6 := 2.000000
 76 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 77 [-]: LOADBOOL  R5 1 0       ; R5 := true
 78 [-]: GETTABLE  R6 R2 K19    ; R6 := R2["PositionX"]
 79 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 93
 80 [-]: JMP       93           ; PC := 93
 81 [-]: SELF      R6 R4 K21    ; R7 := R4; R6 := R4[0x5d10207d]
 82 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["Attribute"]
 83 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 84 [-]: GETGLOBAL R7 K24       ; R7 := 0x42dcc9f5
 85 [-]: GETTABLE  R8 R2 K25    ; R8 := R2["Value"]
 86 [-]: MUL       R8 R8 K26    ; R8 := R8 * 255.000000
 87 [-]: LOADK     R9 0         ; R9 := 0.000000
 88 [-]: LOADK     R10 255      ; R10 := 255.000000
 89 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 90 [-]: SUB       R7 K26 R7    ; R7 := 255.000000 - R7
 91 [-]: SETTABLE  R6 K23 R7    ; R6["red"] := R7
 92 [-]: JMP       167          ; PC := 167
 93 [-]: GETTABLE  R6 R2 K27    ; R6 := R2["PositionY"]
 94 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 108
 95 [-]: JMP       108          ; PC := 108
 96 [-]: SELF      R6 R4 K21    ; R7 := R4; R6 := R4[0x5d10207d]
 97 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["Attribute"]
 98 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 99 [-]: GETGLOBAL R7 K24       ; R7 := 0x42dcc9f5
100 [-]: GETTABLE  R8 R2 K25    ; R8 := R2["Value"]
101 [-]: MUL       R8 R8 K26    ; R8 := R8 * 255.000000
102 [-]: LOADK     R9 0         ; R9 := 0.000000
103 [-]: LOADK     R10 255      ; R10 := 255.000000
104 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
105 [-]: SUB       R7 K26 R7    ; R7 := 255.000000 - R7
106 [-]: SETTABLE  R6 K28 R7    ; R6["green"] := R7
107 [-]: JMP       167          ; PC := 167
108 [-]: GETTABLE  R6 R2 K29    ; R6 := R2["ScaleX"]
109 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 122
110 [-]: JMP       122          ; PC := 122
111 [-]: SELF      R6 R4 K21    ; R7 := R4; R6 := R4[0x5d10207d]
112 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["Attribute"]
113 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
114 [-]: GETGLOBAL R7 K24       ; R7 := 0x42dcc9f5
115 [-]: GETTABLE  R8 R2 K25    ; R8 := R2["Value"]
116 [-]: MUL       R8 R8 K26    ; R8 := R8 * 255.000000
117 [-]: LOADK     R9 0         ; R9 := 0.000000
118 [-]: LOADK     R10 255      ; R10 := 255.000000
119 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
120 [-]: SETTABLE  R6 K30 R7    ; R6["blue"] := R7
121 [-]: JMP       167          ; PC := 167
122 [-]: GETTABLE  R6 R2 K31    ; R6 := R2["ScaleY"]
123 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 136
124 [-]: JMP       136          ; PC := 136
125 [-]: SELF      R6 R4 K21    ; R7 := R4; R6 := R4[0x5d10207d]
126 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["Attribute"]
127 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
128 [-]: GETGLOBAL R7 K24       ; R7 := 0x42dcc9f5
129 [-]: GETTABLE  R8 R2 K25    ; R8 := R2["Value"]
130 [-]: MUL       R8 R8 K26    ; R8 := R8 * 255.000000
131 [-]: LOADK     R9 0         ; R9 := 0.000000
132 [-]: LOADK     R10 255      ; R10 := 255.000000
133 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
134 [-]: SETTABLE  R6 K32 R7    ; R6["alpha"] := R7
135 [-]: JMP       167          ; PC := 167
136 [-]: GETTABLE  R6 R2 K33    ; R6 := R2["Alpha"]
137 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 151
138 [-]: JMP       151          ; PC := 151
139 [-]: SELF      R6 R4 K21    ; R7 := R4; R6 := R4[0x5d10207d]
140 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["Attribute"]
141 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
142 [-]: GETTABLE  R7 R2 K33    ; R7 := R2["Alpha"]
143 [-]: GETGLOBAL R8 K24       ; R8 := 0x42dcc9f5
144 [-]: GETTABLE  R9 R2 K25    ; R9 := R2["Value"]
145 [-]: MUL       R9 R9 K26    ; R9 := R9 * 255.000000
146 [-]: LOADK     R10 0        ; R10 := 0.000000
147 [-]: LOADK     R11 255      ; R11 := 255.000000
148 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
149 [-]: SETTABLE  R6 R7 R8     ; R6[R7] := R8
150 [-]: JMP       167          ; PC := 167
151 [-]: GETTABLE  R6 R2 K34    ; R6 := R2["Rotation"]
152 [-]: EQ        1 R6 K20     ; if R6 == nil then PC := 166
153 [-]: JMP       166          ; PC := 166
154 [-]: SELF      R6 R4 K21    ; R7 := R4; R6 := R4[0x5d10207d]
155 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["Attribute"]
156 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
157 [-]: GETTABLE  R7 R2 K34    ; R7 := R2["Rotation"]
158 [-]: GETGLOBAL R8 K24       ; R8 := 0x42dcc9f5
159 [-]: GETTABLE  R9 R2 K25    ; R9 := R2["Value"]
160 [-]: MUL       R9 R9 K26    ; R9 := R9 * 255.000000
161 [-]: LOADK     R10 0        ; R10 := 0.000000
162 [-]: LOADK     R11 255      ; R11 := 255.000000
163 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
164 [-]: SETTABLE  R6 R7 R8     ; R6[R7] := R8
165 [-]: JMP       167          ; PC := 167
166 [-]: LOADBOOL  R5 0 0       ; R5 := false
167 [-]: TEST      R5 0         ; if not R5 then PC := 173
168 [-]: JMP       173          ; PC := 173
169 [-]: SELF      R6 R4 K35    ; R7 := R4; R6 := R4[0xfc5d7158]
170 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["Attribute"]
171 [-]: LOADBOOL  R9 1 0       ; R9 := true
172 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
173 [-]: SELF      R6 R3 K36    ; R7 := R3; R6 := R3[0x199edf6e]
174 [-]: LOADK     R8 2         ; R8 := 2.000000
175 [-]: MOVE      R9 R4        ; R9 := R4
176 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
177 [-]: GETGLOBAL R6 K38       ; R6 := 0x60130201
178 [-]: SELF      R7 R4 K21    ; R8 := R4; R7 := R4[0x5d10207d]
179 [-]: GETTABLE  R9 R2 K22    ; R9 := R2["Attribute"]
180 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
181 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
182 [-]: SETTABLE  R2 K37 R6    ; R2["Color"] := R6
183 [-]: GETUPVAL  R6 U4        ; R6 := U4
184 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
185 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Element"]
186 [-]: GETTABLE  R7 R7 K39    ; R7 := R7["LoadOutType"]
187 [-]: GETGLOBAL R8 K1        ; R8 := mSelected
188 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["Element"]
189 [-]: GETTABLE  R8 R8 K40    ; R8 := R8["LoadOutId"]
190 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
191 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
192 [-]: MOVE      R8 R6        ; R8 := R6
193 [-]: CALL      R7 2 2       ; R7 := R7(R8)
194 [-]: TEST      R7 1         ; if R7 then PC := 268
195 [-]: JMP       268          ; PC := 268
196 [-]: SELF      R7 R6 K41    ; R8 := R6; R7 := R6[0x5163741e]
197 [-]: CALL      R7 2 2       ; R7 := R7(R8)
198 [-]: SELF      R8 R7 K42    ; R9 := R7; R8 := R7[0xde321e6f]
199 [-]: CALL      R8 2 2       ; R8 := R8(R9)
200 [-]: SELF      R8 R8 K43    ; R9 := R8; R8 := R8[0xf7d48ee0]
201 [-]: CALL      R8 2 2       ; R8 := R8(R9)
202 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
203 [-]: MOVE      R10 R8       ; R10 := R8
204 [-]: CALL      R9 2 2       ; R9 := R9(R10)
205 [-]: TEST      R9 1         ; if R9 then PC := 268
206 [-]: JMP       268          ; PC := 268
207 [-]: SELF      R9 R8 K44    ; R10 := R8; R9 := R8[0x0ad758cb]
208 [-]: CALL      R9 2 2       ; R9 := R9(R10)
209 [-]: LOADK     R10 0        ; R10 := 0.000000
210 [-]: SUB       R11 R9 K45   ; R11 := R9 - 1.000000
211 [-]: LOADK     R12 1        ; R12 := 1.000000
212 [-]: FORPREP   R10 267      ; R10 -= R12; PC := 267
213 [-]: SELF      R14 R8 K46   ; R15 := R8; R14 := R8[0xfef27732]
214 [-]: MOVE      R16 R13      ; R16 := R13
215 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
216 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
217 [-]: MOVE      R16 R14      ; R16 := R14
218 [-]: CALL      R15 2 2      ; R15 := R15(R16)
219 [-]: TEST      R15 1        ; if R15 then PC := 267
220 [-]: JMP       267          ; PC := 267
221 [-]: SELF      R15 R14 K12  ; R16 := R14; R15 := R14[0xf2deaf69]
222 [-]: GETGLOBAL R17 K47      ; R17 := gLotusSigilType
223 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
224 [-]: TEST      R15 1        ; if R15 then PC := 231
225 [-]: JMP       231          ; PC := 231
226 [-]: SELF      R15 R14 K12  ; R16 := R14; R15 := R14[0xf2deaf69]
227 [-]: GETGLOBAL R17 K48      ; R17 := gLotusHoverboardStickerType
228 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
229 [-]: TEST      R15 0        ; if not R15 then PC := 267
230 [-]: JMP       267          ; PC := 267
231 [-]: SELF      R15 R6 K49   ; R16 := R6; R15 := R6[0x68d708a7]
232 [-]: CALL      R15 2 2      ; R15 := R15(R16)
233 [-]: SELF      R16 R15 K50  ; R17 := R15; R16 := R15[0x7d8337fc]
234 [-]: LOADK     R18 1        ; R18 := 1.000000
235 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
236 [-]: GETTABLE  R16 R16 K51  ; R16 := R16["mEmblemName"]
237 [-]: SELF      R17 R3 K50   ; R18 := R3; R17 := R3[0x7d8337fc]
238 [-]: LOADK     R19 1        ; R19 := 1.000000
239 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
240 [-]: SETTABLE  R17 K51 R16  ; R17["mEmblemName"] := R16
241 [-]: SELF      R17 R15 K50  ; R18 := R15; R17 := R15[0x7d8337fc]
242 [-]: LOADK     R19 2        ; R19 := 2.000000
243 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
244 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["mEmblemName"]
245 [-]: SELF      R18 R3 K50   ; R19 := R3; R18 := R3[0x7d8337fc]
246 [-]: LOADK     R20 2        ; R20 := 2.000000
247 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
248 [-]: SETTABLE  R18 K51 R17  ; R18["mEmblemName"] := R17
249 [-]: SELF      R18 R6 K52   ; R19 := R6; R18 := R6[0xaa041663]
250 [-]: MOVE      R20 R3       ; R20 := R3
251 [-]: LOADBOOL  R21 0 0      ; R21 := false
252 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
253 [-]: SELF      R18 R14 K12  ; R19 := R14; R18 := R14[0xf2deaf69]
254 [-]: GETGLOBAL R20 K47      ; R20 := gLotusSigilType
255 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
256 [-]: TEST      R18 0        ; if not R18 then PC := 260
257 [-]: JMP       260          ; PC := 260
258 [-]: SELF      R18 R14 K53  ; R19 := R14; R18 := R14[0x4ece5f10]
259 [-]: CALL      R18 2 1      ; R18(R19)
260 [-]: SELF      R18 R14 K12  ; R19 := R14; R18 := R14[0xf2deaf69]
261 [-]: GETGLOBAL R20 K48      ; R20 := gLotusHoverboardStickerType
262 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
263 [-]: TEST      R18 0        ; if not R18 then PC := 267
264 [-]: JMP       267          ; PC := 267
265 [-]: SELF      R18 R14 K54  ; R19 := R14; R18 := R14[0xb6edddc0]
266 [-]: CALL      R18 2 1      ; R18(R19)
267 [-]: FORLOOP   R10 213      ; R10 += R12; if R10 <= R11 then begin PC := 213; R13 := R10 end
268 [-]: GETGLOBAL R18 K55      ; R18 := mInventory
269 [-]: SELF      R18 R18 K56  ; R19 := R18; R18 := R18[0x9b051033]
270 [-]: GETGLOBAL R20 K1       ; R20 := mSelected
271 [-]: GETTABLE  R20 R20 K2   ; R20 := R20["Element"]
272 [-]: GETTABLE  R20 R20 K57  ; R20 := R20["UID"]
273 [-]: GETGLOBAL R21 K1       ; R21 := mSelected
274 [-]: GETTABLE  R21 R21 K2   ; R21 := R21["Element"]
275 [-]: GETTABLE  R21 R21 K58  ; R21 := R21["mCustSlot"]
276 [-]: GETGLOBAL R22 K1       ; R22 := mSelected
277 [-]: GETTABLE  R22 R22 K2   ; R22 := R22["Element"]
278 [-]: GETTABLE  R22 R22 K16  ; R22 := R22["Customization"]
279 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
280 [-]: JMP       536          ; PC := 536
281 [-]: GETGLOBAL R18 K4       ; R18 := mLists
282 [-]: GETTABLE  R18 R18 K5   ; R18 := R18["mCosmeticsList"]
283 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["mCurrLevel"]
284 [-]: GETGLOBAL R19 K4       ; R19 := mLists
285 [-]: GETTABLE  R19 R19 K5   ; R19 := R19["mCosmeticsList"]
286 [-]: GETTABLE  R19 R19 K59  ; R19 := R19["HOLSTER_CUSTOMIZATION"]
287 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 536
288 [-]: JMP       536          ; PC := 536
289 [-]: GETGLOBAL R18 K4       ; R18 := mLists
290 [-]: GETTABLE  R18 R18 K5   ; R18 := R18["mCosmeticsList"]
291 [-]: SELF      R18 R18 K14  ; R19 := R18; R18 := R18[0xca30dfb6]
292 [-]: GETGLOBAL R20 K15      ; R20 := 0x03f57322
293 [-]: MOVE      R21 R0       ; R21 := R0
294 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
295 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
296 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
297 [-]: MOVE      R20 R18      ; R20 := R18
298 [-]: CALL      R19 2 2      ; R19 := R19(R20)
299 [-]: TEST      R19 0        ; if not R19 then PC := 302
300 [-]: JMP       302          ; PC := 302
301 [-]: RETURN    R0 1         ; return 
302 [-]: GETGLOBAL R19 K1       ; R19 := mSelected
303 [-]: GETTABLE  R19 R19 K2   ; R19 := R19["Element"]
304 [-]: GETTABLE  R19 R19 K16  ; R19 := R19["Customization"]
305 [-]: SELF      R20 R19 K17  ; R21 := R19; R20 := R19[0x8e62760a]
306 [-]: LOADK     R22 3        ; R22 := 3.000000
307 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
308 [-]: LOADK     R21 0        ; R21 := 0.000000
309 [-]: LOADK     R22 0        ; R22 := 0.000000
310 [-]: SELF      R23 R20 K60  ; R24 := R20; R23 := R20[0x697019d0]
311 [-]: GETTABLE  R25 R18 K22  ; R25 := R18["Attribute"]
312 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
313 [-]: TEST      R23 0        ; if not R23 then PC := 329
314 [-]: JMP       329          ; PC := 329
315 [-]: SELF      R23 R20 K21  ; R24 := R20; R23 := R20[0x5d10207d]
316 [-]: GETTABLE  R25 R18 K22  ; R25 := R18["Attribute"]
317 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
318 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["red"]
319 [-]: MOD       R21 R23 K61  ; R21 := R23 % 16.000000
320 [-]: GETGLOBAL R23 K62      ; R23 := 0x5bced4c4
321 [-]: GETTABLE  R23 R23 K63  ; R23 := R23[0x55f27c30]
322 [-]: SELF      R24 R20 K21  ; R25 := R20; R24 := R20[0x5d10207d]
323 [-]: GETTABLE  R26 R18 K22  ; R26 := R18["Attribute"]
324 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
325 [-]: GETTABLE  R24 R24 K23  ; R24 := R24["red"]
326 [-]: DIV       R24 R24 K61  ; R24 := R24 / 16.000000
327 [-]: CALL      R23 2 2      ; R23 := R23(R24)
328 [-]: MOVE      R22 R23      ; R22 := R23
329 [-]: GETTABLE  R23 R18 K25  ; R23 := R18["Value"]
330 [-]: LOADBOOL  R24 1 0      ; R24 := true
331 [-]: GETTABLE  R25 R18 K64  ; R25 := R18["AttachPart"]
332 [-]: EQ        1 R25 K20    ; if R25 == nil then PC := 406
333 [-]: JMP       406          ; PC := 406
334 [-]: GETTABLE  R25 R18 K65  ; R25 := R18["Hand"]
335 [-]: EQ        0 R25 K67    ; if R25 ~= 0.000000 then PC := 355
336 [-]: JMP       355          ; PC := 355
337 [-]: GETTABLE  R25 R18 K68  ; R25 := R18["NumOptions"]
338 [-]: EQ        1 R25 K20    ; if R25 == nil then PC := 347
339 [-]: JMP       347          ; PC := 347
340 [-]: GETTABLE  R25 R18 K68  ; R25 := R18["NumOptions"]
341 [-]: MUL       R23 R23 R25  ; R23 := R23 * R25
342 [-]: GETGLOBAL R25 K62      ; R25 := 0x5bced4c4
343 [-]: GETTABLE  R25 R25 K63  ; R25 := R25[0x55f27c30]
344 [-]: ADD       R26 R23 K69  ; R26 := R23 + 0.500000
345 [-]: CALL      R25 2 2      ; R25 := R25(R26)
346 [-]: MOVE      R23 R25      ; R23 := R25
347 [-]: GETGLOBAL R25 K24      ; R25 := 0x42dcc9f5
348 [-]: MOVE      R26 R23      ; R26 := R23
349 [-]: LOADK     R27 0        ; R27 := 0.000000
350 [-]: GETTABLE  R28 R18 K68  ; R28 := R18["NumOptions"]
351 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
352 [-]: MOVE      R23 R25      ; R23 := R25
353 [-]: MOVE      R21 R23      ; R21 := R23
354 [-]: JMP       375          ; PC := 375
355 [-]: GETTABLE  R25 R18 K65  ; R25 := R18["Hand"]
356 [-]: EQ        0 R25 K45    ; if R25 ~= 1.000000 then PC := 375
357 [-]: JMP       375          ; PC := 375
358 [-]: GETTABLE  R25 R18 K68  ; R25 := R18["NumOptions"]
359 [-]: EQ        1 R25 K20    ; if R25 == nil then PC := 368
360 [-]: JMP       368          ; PC := 368
361 [-]: GETTABLE  R25 R18 K68  ; R25 := R18["NumOptions"]
362 [-]: MUL       R23 R23 R25  ; R23 := R23 * R25
363 [-]: GETGLOBAL R25 K62      ; R25 := 0x5bced4c4
364 [-]: GETTABLE  R25 R25 K63  ; R25 := R25[0x55f27c30]
365 [-]: ADD       R26 R23 K69  ; R26 := R23 + 0.500000
366 [-]: CALL      R25 2 2      ; R25 := R25(R26)
367 [-]: MOVE      R23 R25      ; R23 := R25
368 [-]: GETGLOBAL R25 K24      ; R25 := 0x42dcc9f5
369 [-]: MOVE      R26 R23      ; R26 := R23
370 [-]: LOADK     R27 0        ; R27 := 0.000000
371 [-]: GETTABLE  R28 R18 K68  ; R28 := R18["NumOptions"]
372 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
373 [-]: MOVE      R23 R25      ; R23 := R25
374 [-]: MOVE      R22 R23      ; R22 := R23
375 [-]: SELF      R25 R20 K21  ; R26 := R20; R25 := R20[0x5d10207d]
376 [-]: GETTABLE  R27 R18 K22  ; R27 := R18["Attribute"]
377 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
378 [-]: MUL       R26 R22 K61  ; R26 := R22 * 16.000000
379 [-]: ADD       R26 R26 R21  ; R26 := R26 + R21
380 [-]: SETTABLE  R25 K23 R26  ; R25["red"] := R26
381 [-]: GETUPVAL  R25 U5       ; R25 := U5
382 [-]: GETGLOBAL R26 K1       ; R26 := mSelected
383 [-]: GETTABLE  R26 R26 K2   ; R26 := R26["Element"]
384 [-]: CALL      R25 2 2      ; R25 := R25(R26)
385 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
386 [-]: MOVE      R27 R25      ; R27 := R25
387 [-]: CALL      R26 2 2      ; R26 := R26(R27)
388 [-]: TEST      R26 1        ; if R26 then PC := 491
389 [-]: JMP       491          ; PC := 491
390 [-]: SELF      R26 R25 K70  ; R27 := R25; R26 := R25[0x5819e29e]
391 [-]: GETTABLE  R28 R18 K65  ; R28 := R18["Hand"]
392 [-]: MOVE      R29 R23      ; R29 := R23
393 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
394 [-]: GETTABLE  R27 R18 K71  ; R27 := R18["Title"]
395 [-]: EQ        1 R27 R26    ; if R27 == R26 then PC := 491
396 [-]: JMP       491          ; PC := 491
397 [-]: SETTABLE  R18 K71 R26  ; R18["Title"] := R26
398 [-]: GETGLOBAL R27 K4       ; R27 := mLists
399 [-]: GETTABLE  R27 R27 K5   ; R27 := R27["mCosmeticsList"]
400 [-]: SELF      R27 R27 K72  ; R28 := R27; R27 := R27[0x71e9ac81]
401 [-]: LOADNIL   R29 R29      ; R29 := nil
402 [-]: LOADBOOL  R30 1 0      ; R30 := true
403 [-]: LOADBOOL  R31 1 0      ; R31 := true
404 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
405 [-]: JMP       491          ; PC := 491
406 [-]: GETTABLE  R27 R18 K19  ; R27 := R18["PositionX"]
407 [-]: EQ        1 R27 K20    ; if R27 == nil then PC := 420
408 [-]: JMP       420          ; PC := 420
409 [-]: SELF      R27 R20 K21  ; R28 := R20; R27 := R20[0x5d10207d]
410 [-]: GETTABLE  R29 R18 K22  ; R29 := R18["Attribute"]
411 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
412 [-]: GETGLOBAL R28 K24      ; R28 := 0x42dcc9f5
413 [-]: GETTABLE  R29 R18 K25  ; R29 := R18["Value"]
414 [-]: MUL       R29 R29 K26  ; R29 := R29 * 255.000000
415 [-]: LOADK     R30 0        ; R30 := 0.000000
416 [-]: LOADK     R31 255      ; R31 := 255.000000
417 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
418 [-]: SETTABLE  R27 K23 R28  ; R27["red"] := R28
419 [-]: JMP       491          ; PC := 491
420 [-]: GETTABLE  R27 R18 K27  ; R27 := R18["PositionY"]
421 [-]: EQ        1 R27 K20    ; if R27 == nil then PC := 434
422 [-]: JMP       434          ; PC := 434
423 [-]: SELF      R27 R20 K21  ; R28 := R20; R27 := R20[0x5d10207d]
424 [-]: GETTABLE  R29 R18 K22  ; R29 := R18["Attribute"]
425 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
426 [-]: GETGLOBAL R28 K24      ; R28 := 0x42dcc9f5
427 [-]: GETTABLE  R29 R18 K25  ; R29 := R18["Value"]
428 [-]: MUL       R29 R29 K26  ; R29 := R29 * 255.000000
429 [-]: LOADK     R30 0        ; R30 := 0.000000
430 [-]: LOADK     R31 255      ; R31 := 255.000000
431 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
432 [-]: SETTABLE  R27 K28 R28  ; R27["green"] := R28
433 [-]: JMP       491          ; PC := 491
434 [-]: GETTABLE  R27 R18 K73  ; R27 := R18["PositionZ"]
435 [-]: EQ        1 R27 K20    ; if R27 == nil then PC := 448
436 [-]: JMP       448          ; PC := 448
437 [-]: SELF      R27 R20 K21  ; R28 := R20; R27 := R20[0x5d10207d]
438 [-]: GETTABLE  R29 R18 K22  ; R29 := R18["Attribute"]
439 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
440 [-]: GETGLOBAL R28 K24      ; R28 := 0x42dcc9f5
441 [-]: GETTABLE  R29 R18 K25  ; R29 := R18["Value"]
442 [-]: MUL       R29 R29 K26  ; R29 := R29 * 255.000000
443 [-]: LOADK     R30 0        ; R30 := 0.000000
444 [-]: LOADK     R31 255      ; R31 := 255.000000
445 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
446 [-]: SETTABLE  R27 K30 R28  ; R27["blue"] := R28
447 [-]: JMP       491          ; PC := 491
448 [-]: GETTABLE  R27 R18 K74  ; R27 := R18["RotationX"]
449 [-]: EQ        1 R27 K20    ; if R27 == nil then PC := 462
450 [-]: JMP       462          ; PC := 462
451 [-]: SELF      R27 R20 K21  ; R28 := R20; R27 := R20[0x5d10207d]
452 [-]: GETTABLE  R29 R18 K22  ; R29 := R18["Attribute"]
453 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
454 [-]: GETGLOBAL R28 K24      ; R28 := 0x42dcc9f5
455 [-]: GETTABLE  R29 R18 K25  ; R29 := R18["Value"]
456 [-]: MUL       R29 R29 K26  ; R29 := R29 * 255.000000
457 [-]: LOADK     R30 0        ; R30 := 0.000000
458 [-]: LOADK     R31 255      ; R31 := 255.000000
459 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
460 [-]: SETTABLE  R27 K23 R28  ; R27["red"] := R28
461 [-]: JMP       491          ; PC := 491
462 [-]: GETTABLE  R27 R18 K75  ; R27 := R18["RotationY"]
463 [-]: EQ        1 R27 K20    ; if R27 == nil then PC := 476
464 [-]: JMP       476          ; PC := 476
465 [-]: SELF      R27 R20 K21  ; R28 := R20; R27 := R20[0x5d10207d]
466 [-]: GETTABLE  R29 R18 K22  ; R29 := R18["Attribute"]
467 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
468 [-]: GETGLOBAL R28 K24      ; R28 := 0x42dcc9f5
469 [-]: GETTABLE  R29 R18 K25  ; R29 := R18["Value"]
470 [-]: MUL       R29 R29 K26  ; R29 := R29 * 255.000000
471 [-]: LOADK     R30 0        ; R30 := 0.000000
472 [-]: LOADK     R31 255      ; R31 := 255.000000
473 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
474 [-]: SETTABLE  R27 K28 R28  ; R27["green"] := R28
475 [-]: JMP       491          ; PC := 491
476 [-]: GETTABLE  R27 R18 K76  ; R27 := R18["RotationZ"]
477 [-]: EQ        1 R27 K20    ; if R27 == nil then PC := 490
478 [-]: JMP       490          ; PC := 490
479 [-]: SELF      R27 R20 K21  ; R28 := R20; R27 := R20[0x5d10207d]
480 [-]: GETTABLE  R29 R18 K22  ; R29 := R18["Attribute"]
481 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
482 [-]: GETGLOBAL R28 K24      ; R28 := 0x42dcc9f5
483 [-]: GETTABLE  R29 R18 K25  ; R29 := R18["Value"]
484 [-]: MUL       R29 R29 K26  ; R29 := R29 * 255.000000
485 [-]: LOADK     R30 0        ; R30 := 0.000000
486 [-]: LOADK     R31 255      ; R31 := 255.000000
487 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
488 [-]: SETTABLE  R27 K30 R28  ; R27["blue"] := R28
489 [-]: JMP       491          ; PC := 491
490 [-]: LOADBOOL  R24 0 0      ; R24 := false
491 [-]: TEST      R24 0        ; if not R24 then PC := 497
492 [-]: JMP       497          ; PC := 497
493 [-]: SELF      R27 R20 K35  ; R28 := R20; R27 := R20[0xfc5d7158]
494 [-]: GETTABLE  R29 R18 K22  ; R29 := R18["Attribute"]
495 [-]: LOADBOOL  R30 1 0      ; R30 := true
496 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
497 [-]: SELF      R27 R19 K36  ; R28 := R19; R27 := R19[0x199edf6e]
498 [-]: LOADK     R29 3        ; R29 := 3.000000
499 [-]: MOVE      R30 R20      ; R30 := R20
500 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
501 [-]: GETGLOBAL R27 K38      ; R27 := 0x60130201
502 [-]: SELF      R28 R20 K21  ; R29 := R20; R28 := R20[0x5d10207d]
503 [-]: GETTABLE  R30 R18 K22  ; R30 := R18["Attribute"]
504 [-]: CALL      R28 3 0      ; R28,... := R28(R29,R30)
505 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
506 [-]: SETTABLE  R18 K37 R27  ; R18["Color"] := R27
507 [-]: GETUPVAL  R27 U4       ; R27 := U4
508 [-]: GETGLOBAL R28 K1       ; R28 := mSelected
509 [-]: GETTABLE  R28 R28 K2   ; R28 := R28["Element"]
510 [-]: GETTABLE  R28 R28 K39  ; R28 := R28["LoadOutType"]
511 [-]: GETGLOBAL R29 K1       ; R29 := mSelected
512 [-]: GETTABLE  R29 R29 K2   ; R29 := R29["Element"]
513 [-]: GETTABLE  R29 R29 K40  ; R29 := R29["LoadOutId"]
514 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
515 [-]: GETGLOBAL R28 K0       ; R28 := 0x7b998233
516 [-]: MOVE      R29 R27      ; R29 := R27
517 [-]: CALL      R28 2 2      ; R28 := R28(R29)
518 [-]: TEST      R28 1        ; if R28 then PC := 524
519 [-]: JMP       524          ; PC := 524
520 [-]: SELF      R28 R27 K52  ; R29 := R27; R28 := R27[0xaa041663]
521 [-]: MOVE      R30 R19      ; R30 := R19
522 [-]: LOADBOOL  R31 0 0      ; R31 := false
523 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
524 [-]: GETGLOBAL R28 K55      ; R28 := mInventory
525 [-]: SELF      R28 R28 K56  ; R29 := R28; R28 := R28[0x9b051033]
526 [-]: GETGLOBAL R30 K1       ; R30 := mSelected
527 [-]: GETTABLE  R30 R30 K2   ; R30 := R30["Element"]
528 [-]: GETTABLE  R30 R30 K57  ; R30 := R30["UID"]
529 [-]: GETGLOBAL R31 K1       ; R31 := mSelected
530 [-]: GETTABLE  R31 R31 K2   ; R31 := R31["Element"]
531 [-]: GETTABLE  R31 R31 K58  ; R31 := R31["mCustSlot"]
532 [-]: GETGLOBAL R32 K1       ; R32 := mSelected
533 [-]: GETTABLE  R32 R32 K2   ; R32 := R32["Element"]
534 [-]: GETTABLE  R32 R32 K16  ; R32 := R32["Customization"]
535 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
536 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 9205
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: EQ        0 R0 K3      ; if R0 ~= nil then PC := 61
 14 [-]: JMP       61           ; PC := 61
 15 [-]: LOADBOOL  R2 0 0       ; R2 := false
 16 [-]: GETGLOBAL R3 K4        ; R3 := mLists
 17 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
 18 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xed1ab921]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: MOVE      R0 R3        ; R0 := R3
 21 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 58
 22 [-]: JMP       58           ; PC := 58
 23 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["Color"]
 24 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 56
 25 [-]: JMP       56           ; PC := 56
 26 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["PositionX"]
 27 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 28 [-]: JMP       56           ; PC := 56
 29 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["PositionY"]
 30 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 31 [-]: JMP       56           ; PC := 56
 32 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["PositionZ"]
 33 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 34 [-]: JMP       56           ; PC := 56
 35 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["ScaleX"]
 36 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 37 [-]: JMP       56           ; PC := 56
 38 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["ScaleY"]
 39 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 40 [-]: JMP       56           ; PC := 56
 41 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["Rotation"]
 42 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 43 [-]: JMP       56           ; PC := 56
 44 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["Alpha"]
 45 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 46 [-]: JMP       56           ; PC := 56
 47 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["RotationX"]
 48 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R3 R0 K16    ; R3 := R0["RotationY"]
 51 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 52 [-]: JMP       56           ; PC := 56
 53 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["RotationZ"]
 54 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 57
 57 [-]: LOADBOOL  R2 1 0       ; R2 := true
 58 [-]: TEST      R2 1         ; if R2 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: RETURN    R0 1         ; return 
 61 [-]: GETUPVAL  R3 U0        ; R3 := U0
 62 [-]: CALL      R3 1 2       ; R3 := R3()
 63 [-]: SETTABLE  R0 K18 K19   ; R0["mForceRedraw"] := true
 64 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["PetTrait"]
 65 [-]: TEST      R4 0         ; if not R4 then PC := 93
 66 [-]: JMP       93           ; PC := 93
 67 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 68 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 69 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["LoadOutId"]
 70 [-]: EQ        0 R4 K23     ; if R4 ~= 5.000000 then PC := 76
 71 [-]: JMP       76           ; PC := 76
 72 [-]: GETGLOBAL R4 K24       ; R4 := _T
 73 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["mSpecialSuitMode"]
 74 [-]: TEST      R4 1         ; if R4 then PC := 93
 75 [-]: JMP       93           ; PC := 93
 76 [-]: GETGLOBAL R4 K26       ; R4 := 0x25d99d89
 77 [-]: SELF      R4 R4 K27    ; R5 := R4; R4 := R4[0x62c81b76]
 78 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 79 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["mKubrowPetDetails"]
 80 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["mDominantTraits"]
 81 [-]: GETGLOBAL R5 K30       ; R5 := 0xb009bbc6
 82 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["PetTrait"]
 83 [-]: GETTABLE  R6 R4 R6     ; R6 := R4[R6]
 84 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 85 [-]: GETUPVAL  R6 U1        ; R6 := U1
 86 [-]: GETTABLE  R7 R0 K31    ; R7 := R0["Attribute"]
 87 [-]: SELF      R8 R5 K32    ; R9 := R5; R8 := R5[0x5d10207d]
 88 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 89 [-]: LOADK     R9 0         ; R9 := 0.000000
 90 [-]: LOADNIL   R10 R10      ; R10 := nil
 91 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 92 [-]: JMP       123          ; PC := 123
 93 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
 94 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
 95 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["Customization"]
 96 [-]: SELF      R6 R6 K34    ; R7 := R6; R6 := R6[0x8e62760a]
 97 [-]: MOVE      R8 R3        ; R8 := R3
 98 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 99 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: EQ        0 R1 K35     ; if R1 ~= 2.000000 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: SELF      R7 R6 K36    ; R8 := R6; R7 := R6[0xfc5d7158]
104 [-]: GETTABLE  R9 R0 K31    ; R9 := R0["Attribute"]
105 [-]: LOADBOOL  R10 0 0      ; R10 := false
106 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
107 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 116
108 [-]: JMP       116          ; PC := 116
109 [-]: GETTABLE  R7 R0 K37    ; R7 := R0["Attribute2"]
110 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 116
111 [-]: JMP       116          ; PC := 116
112 [-]: SELF      R7 R6 K36    ; R8 := R6; R7 := R6[0xfc5d7158]
113 [-]: GETTABLE  R9 R0 K37    ; R9 := R0["Attribute2"]
114 [-]: LOADBOOL  R10 0 0      ; R10 := false
115 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
116 [-]: GETGLOBAL R7 K1        ; R7 := mSelected
117 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Element"]
118 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["Customization"]
119 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7[0x199edf6e]
120 [-]: MOVE      R9 R3        ; R9 := R3
121 [-]: MOVE      R10 R6       ; R10 := R6
122 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
123 [-]: GETUPVAL  R7 U2        ; R7 := U2
124 [-]: GETTABLE  R7 R7 K39    ; R7 := R7[0xba296217]
125 [-]: CALL      R7 1 1       ; R7()
126 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 9245
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := mLists
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCosmeticsList"]
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCurrLevel"]
  4 [-]: GETGLOBAL R2 K0        ; R2 := mLists
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCosmeticsList"]
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["HOLSTER_CUSTOMIZATION"]
  7 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 90
  8 [-]: JMP       90           ; PC := 90
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K5        ; R2 := mSelected
 11 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Element"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 90
 14 [-]: JMP       90           ; PC := 90
 15 [-]: GETGLOBAL R1 K7        ; R1 := _T
 16 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["MenuSuitAvatar"]
 17 [-]: SELF      R2 R1 K9     ; R3 := R1; R2 := R1[0xde321e6f]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xf7d48ee0]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: GETGLOBAL R4 K5        ; R4 := mSelected
 23 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Element"]
 24 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["LoadOutType"]
 25 [-]: GETGLOBAL R5 K5        ; R5 := mSelected
 26 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Element"]
 27 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["LoadOutId"]
 28 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 29 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 30 [-]: MOVE      R5 R2        ; R5 := R2
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: TEST      R4 1         ; if R4 then PC := 97
 33 [-]: JMP       97           ; PC := 97
 34 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 35 [-]: MOVE      R5 R3        ; R5 := R3
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 1         ; if R4 then PC := 97
 38 [-]: JMP       97           ; PC := 97
 39 [-]: GETGLOBAL R4 K5        ; R4 := mSelected
 40 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Element"]
 41 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["Customization"]
 42 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4[0x8e62760a]
 43 [-]: LOADK     R7 3         ; R7 := 3.000000
 44 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 45 [-]: SELF      R6 R2 K16    ; R7 := R2; R6 := R2[0xd6496b1c]
 46 [-]: MOVE      R8 R3        ; R8 := R3
 47 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["Hand"]
 48 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 49 [-]: SELF      R7 R6 K14    ; R8 := R6; R7 := R6[0x8e62760a]
 50 [-]: LOADK     R9 3         ; R9 := 3.000000
 51 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 52 [-]: GETGLOBAL R8 K0        ; R8 := mLists
 53 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["mCosmeticsList"]
 54 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0xea061e98]
 55 [-]: CLOSURE   R10 0        ; R10 := closure(Function #139.1)
 56 [-]: MOVE      R0 R0        ; R0 := R0
 57 [-]: MOVE      R0 R7        ; R0 := R7
 58 [-]: GETUPVAL  R0 U1        ; R0 := U1
 59 [-]: MOVE      R0 R5        ; R0 := R5
 60 [-]: CALL      R8 3 1       ; R8(R9,R10)
 61 [-]: SELF      R8 R4 K19    ; R9 := R4; R8 := R4[0x199edf6e]
 62 [-]: LOADK     R10 3        ; R10 := 3.000000
 63 [-]: MOVE      R11 R5       ; R11 := R5
 64 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 65 [-]: SELF      R8 R3 K20    ; R9 := R3; R8 := R3[0x0ad758cb]
 66 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 67 [-]: GETGLOBAL R9 K4        ; R9 := 0x7b998233
 68 [-]: MOVE      R10 R3       ; R10 := R3
 69 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 70 [-]: TEST      R9 1         ; if R9 then PC := 76
 71 [-]: JMP       76           ; PC := 76
 72 [-]: SELF      R9 R3 K21    ; R10 := R3; R9 := R3[0xaa041663]
 73 [-]: MOVE      R11 R4       ; R11 := R4
 74 [-]: LOADBOOL  R12 0 0      ; R12 := false
 75 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 76 [-]: GETGLOBAL R9 K22       ; R9 := mInventory
 77 [-]: SELF      R9 R9 K23    ; R10 := R9; R9 := R9[0x9b051033]
 78 [-]: GETGLOBAL R11 K5       ; R11 := mSelected
 79 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["Element"]
 80 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["UID"]
 81 [-]: GETGLOBAL R12 K5       ; R12 := mSelected
 82 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["Element"]
 83 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["mCustSlot"]
 84 [-]: GETGLOBAL R13 K5       ; R13 := mSelected
 85 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["Element"]
 86 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["Customization"]
 87 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 88 [-]: CLOSE     R4           ; SAVE R4,...
 89 [-]: JMP       97           ; PC := 97
 90 [-]: GETGLOBAL R4 K0        ; R4 := mLists
 91 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mCosmeticsList"]
 92 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4[0xea061e98]
 93 [-]: CLOSURE   R6 1         ; R6 := closure(Function #139.2)
 94 [-]: GETUPVAL  R0 U1        ; R0 := U1
 95 [-]: GETUPVAL  R0 U2        ; R0 := U2
 96 [-]: CALL      R4 3 1       ; R4(R5,R6)
 97 [-]: RETURN    R0 1         ; return 


; Function #139.1:
;
; Name:            
; Defined at line: 9260
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["IsValueSelector"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 190
  3 [-]: JMP       190          ; PC := 190
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Hand"]
  6 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Hand"]
  7 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 190
  8 [-]: JMP       190          ; PC := 190
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["DefaultHolsterPosition"]
 11 [-]: TEST      R1 0         ; if not R1 then PC := 100
 12 [-]: JMP       100          ; PC := 100
 13 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["PositionX"]
 14 [-]: TEST      R1 1         ; if R1 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["PositionY"]
 17 [-]: TEST      R1 1         ; if R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["PositionZ"]
 20 [-]: TEST      R1 0         ; if not R1 then PC := 100
 21 [-]: JMP       100          ; PC := 100
 22 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["PositionX"]
 23 [-]: EQ        1 R1 K6      ; if R1 == nil then PC := 33
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x5d10207d]
 27 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["Attribute"]
 28 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 29 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["red"]
 30 [-]: DIV       R1 R1 K11    ; R1 := R1 / 255.000000
 31 [-]: SETTABLE  R0 K7 R1     ; R0["Value"] := R1
 32 [-]: JMP       54           ; PC := 54
 33 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["PositionY"]
 34 [-]: EQ        1 R1 K6      ; if R1 == nil then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETUPVAL  R1 U1        ; R1 := U1
 37 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x5d10207d]
 38 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["Attribute"]
 39 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 40 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["green"]
 41 [-]: DIV       R1 R1 K11    ; R1 := R1 / 255.000000
 42 [-]: SETTABLE  R0 K7 R1     ; R0["Value"] := R1
 43 [-]: JMP       54           ; PC := 54
 44 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["PositionZ"]
 45 [-]: EQ        1 R1 K6      ; if R1 == nil then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETUPVAL  R1 U1        ; R1 := U1
 48 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x5d10207d]
 49 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["Attribute"]
 50 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 51 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["blue"]
 52 [-]: DIV       R1 R1 K11    ; R1 := R1 / 255.000000
 53 [-]: SETTABLE  R0 K7 R1     ; R0["Value"] := R1
 54 [-]: GETGLOBAL R1 K14       ; R1 := 0x42dcc9f5
 55 [-]: GETUPVAL  R2 U2        ; R2 := U2
 56 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["VS_WIDTH"]
 57 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["Value"]
 58 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
 59 [-]: LOADK     R3 K16       ; R3 := 0.100000
 60 [-]: GETUPVAL  R4 U2        ; R4 := U2
 61 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["VS_WIDTH"]
 62 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 63 [-]: GETGLOBAL R2 K17       ; R2 := 0xae91e43b
 64 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xf64b7262]
 65 [-]: GETTABLE  R4 R0 K19    ; R4 := R0["mClipName"]
 66 [-]: LOADK     R5 K20       ; R5 := "ValueSelector.Front"
 67 [-]: LOADK     R6 12        ; R6 := 12.000000
 68 [-]: MOVE      R7 R1        ; R7 := R1
 69 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 70 [-]: GETGLOBAL R2 K17       ; R2 := 0xae91e43b
 71 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xf64b7262]
 72 [-]: GETTABLE  R4 R0 K19    ; R4 := R0["mClipName"]
 73 [-]: LOADK     R5 K21       ; R5 := "ValueSelector.Slider"
 74 [-]: LOADK     R6 0         ; R6 := 0.000000
 75 [-]: SUB       R7 R1 K22    ; R7 := R1 - 74.250000
 76 [-]: SUB       R7 R7 K23    ; R7 := R7 - 4.000000
 77 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 78 [-]: GETGLOBAL R2 K17       ; R2 := 0xae91e43b
 79 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xf64b7262]
 80 [-]: GETTABLE  R4 R0 K19    ; R4 := R0["mClipName"]
 81 [-]: LOADK     R5 K24       ; R5 := "ValueSelector.SliderBtn"
 82 [-]: LOADK     R6 0         ; R6 := 0.000000
 83 [-]: SUB       R7 R1 K22    ; R7 := R1 - 74.250000
 84 [-]: SUB       R7 R7 K25    ; R7 := R7 - 7.500000
 85 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 86 [-]: GETUPVAL  R2 U3        ; R2 := U3
 87 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2[0xa3927fe9]
 88 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Attribute"]
 89 [-]: GETUPVAL  R5 U1        ; R5 := U1
 90 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0x5d10207d]
 91 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["Attribute"]
 92 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 93 [-]: CALL      R2 0 1       ; R2(R3,...)
 94 [-]: GETUPVAL  R2 U3        ; R2 := U3
 95 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2[0xfc5d7158]
 96 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Attribute"]
 97 [-]: LOADBOOL  R5 0 0       ; R5 := false
 98 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 99 [-]: JMP       190          ; PC := 190
100 [-]: GETUPVAL  R2 U0        ; R2 := U0
101 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["DefaultHolsterRotation"]
102 [-]: TEST      R2 0         ; if not R2 then PC := 190
103 [-]: JMP       190          ; PC := 190
104 [-]: GETTABLE  R2 R0 K29    ; R2 := R0["RotationX"]
105 [-]: TEST      R2 1         ; if R2 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: GETTABLE  R2 R0 K30    ; R2 := R0["RotationY"]
108 [-]: TEST      R2 1         ; if R2 then PC := 113
109 [-]: JMP       113          ; PC := 113
110 [-]: GETTABLE  R2 R0 K31    ; R2 := R0["RotationZ"]
111 [-]: TEST      R2 0         ; if not R2 then PC := 190
112 [-]: JMP       190          ; PC := 190
113 [-]: GETTABLE  R2 R0 K29    ; R2 := R0["RotationX"]
114 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 124
115 [-]: JMP       124          ; PC := 124
116 [-]: GETUPVAL  R2 U1        ; R2 := U1
117 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x5d10207d]
118 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Attribute"]
119 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
120 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["red"]
121 [-]: DIV       R2 R2 K11    ; R2 := R2 / 255.000000
122 [-]: SETTABLE  R0 K7 R2     ; R0["Value"] := R2
123 [-]: JMP       145          ; PC := 145
124 [-]: GETTABLE  R2 R0 K30    ; R2 := R0["RotationY"]
125 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 135
126 [-]: JMP       135          ; PC := 135
127 [-]: GETUPVAL  R2 U1        ; R2 := U1
128 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x5d10207d]
129 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Attribute"]
130 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
131 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["green"]
132 [-]: DIV       R2 R2 K11    ; R2 := R2 / 255.000000
133 [-]: SETTABLE  R0 K7 R2     ; R0["Value"] := R2
134 [-]: JMP       145          ; PC := 145
135 [-]: GETTABLE  R2 R0 K31    ; R2 := R0["RotationZ"]
136 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 145
137 [-]: JMP       145          ; PC := 145
138 [-]: GETUPVAL  R2 U1        ; R2 := U1
139 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x5d10207d]
140 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Attribute"]
141 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
142 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["blue"]
143 [-]: DIV       R2 R2 K11    ; R2 := R2 / 255.000000
144 [-]: SETTABLE  R0 K7 R2     ; R0["Value"] := R2
145 [-]: GETGLOBAL R2 K14       ; R2 := 0x42dcc9f5
146 [-]: GETUPVAL  R3 U2        ; R3 := U2
147 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["VS_WIDTH"]
148 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["Value"]
149 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
150 [-]: LOADK     R4 K16       ; R4 := 0.100000
151 [-]: GETUPVAL  R5 U2        ; R5 := U2
152 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["VS_WIDTH"]
153 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
154 [-]: GETGLOBAL R3 K17       ; R3 := 0xae91e43b
155 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xf64b7262]
156 [-]: GETTABLE  R5 R0 K19    ; R5 := R0["mClipName"]
157 [-]: LOADK     R6 K20       ; R6 := "ValueSelector.Front"
158 [-]: LOADK     R7 12        ; R7 := 12.000000
159 [-]: MOVE      R8 R2        ; R8 := R2
160 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
161 [-]: GETGLOBAL R3 K17       ; R3 := 0xae91e43b
162 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xf64b7262]
163 [-]: GETTABLE  R5 R0 K19    ; R5 := R0["mClipName"]
164 [-]: LOADK     R6 K21       ; R6 := "ValueSelector.Slider"
165 [-]: LOADK     R7 0         ; R7 := 0.000000
166 [-]: SUB       R8 R2 K22    ; R8 := R2 - 74.250000
167 [-]: SUB       R8 R8 K23    ; R8 := R8 - 4.000000
168 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
169 [-]: GETGLOBAL R3 K17       ; R3 := 0xae91e43b
170 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xf64b7262]
171 [-]: GETTABLE  R5 R0 K19    ; R5 := R0["mClipName"]
172 [-]: LOADK     R6 K24       ; R6 := "ValueSelector.SliderBtn"
173 [-]: LOADK     R7 0         ; R7 := 0.000000
174 [-]: SUB       R8 R2 K22    ; R8 := R2 - 74.250000
175 [-]: SUB       R8 R8 K25    ; R8 := R8 - 7.500000
176 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
177 [-]: GETUPVAL  R3 U3        ; R3 := U3
178 [-]: SELF      R3 R3 K26    ; R4 := R3; R3 := R3[0xa3927fe9]
179 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["Attribute"]
180 [-]: GETUPVAL  R6 U1        ; R6 := U1
181 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x5d10207d]
182 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["Attribute"]
183 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
184 [-]: CALL      R3 0 1       ; R3(R4,...)
185 [-]: GETUPVAL  R3 U3        ; R3 := U3
186 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3[0xfc5d7158]
187 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["Attribute"]
188 [-]: LOADBOOL  R6 0 0       ; R6 := false
189 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
190 [-]: RETURN    R0 1         ; return 


; Function #139.2:
;
; Name:            
; Defined at line: 9314
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["IsValueSelector"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 89
  3 [-]: JMP       89           ; PC := 89
  4 [-]: GETGLOBAL R1 K1        ; R1 := mLists
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCurrLevel"]
  7 [-]: GETGLOBAL R2 K1        ; R2 := mLists
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCosmeticsList"]
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["FRONTSIGIL"]
 10 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETGLOBAL R1 K1        ; R1 := mLists
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCurrLevel"]
 15 [-]: GETGLOBAL R2 K1        ; R2 := mLists
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCosmeticsList"]
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["BACKSIGIL"]
 18 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 45
 19 [-]: JMP       45           ; PC := 45
 20 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["Rotation"]
 21 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 38
 22 [-]: JMP       38           ; PC := 38
 23 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["PositionX"]
 24 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 38
 25 [-]: JMP       38           ; PC := 38
 26 [-]: GETTABLE  R1 R0 K9     ; R1 := R0["PositionY"]
 27 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETTABLE  R1 R0 K10    ; R1 := R0["PositionZ"]
 30 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["ScaleX"]
 33 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: GETTABLE  R1 R0 K12    ; R1 := R0["ScaleY"]
 36 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: SETTABLE  R0 K13 K14   ; R0["Value"] := 0.500000
 39 [-]: JMP       54           ; PC := 54
 40 [-]: GETTABLE  R1 R0 K15    ; R1 := R0["Alpha"]
 41 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 54
 42 [-]: JMP       54           ; PC := 54
 43 [-]: SETTABLE  R0 K13 K16   ; R0["Value"] := 1.000000
 44 [-]: JMP       54           ; PC := 54
 45 [-]: GETGLOBAL R1 K1        ; R1 := mLists
 46 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCosmeticsList"]
 47 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCurrLevel"]
 48 [-]: GETGLOBAL R2 K1        ; R2 := mLists
 49 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCosmeticsList"]
 50 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["HOLSTER_CUSTOMIZATION"]
 51 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: SETTABLE  R0 K13 K14   ; R0["Value"] := 0.500000
 54 [-]: GETGLOBAL R1 K18       ; R1 := 0x42dcc9f5
 55 [-]: GETUPVAL  R2 U0        ; R2 := U0
 56 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["VS_WIDTH"]
 57 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["Value"]
 58 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
 59 [-]: LOADK     R3 K20       ; R3 := 0.100000
 60 [-]: GETUPVAL  R4 U0        ; R4 := U0
 61 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["VS_WIDTH"]
 62 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 63 [-]: GETGLOBAL R2 K21       ; R2 := 0xae91e43b
 64 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0xf64b7262]
 65 [-]: GETTABLE  R4 R0 K23    ; R4 := R0["mClipName"]
 66 [-]: LOADK     R5 K24       ; R5 := "ValueSelector.Front"
 67 [-]: LOADK     R6 12        ; R6 := 12.000000
 68 [-]: MOVE      R7 R1        ; R7 := R1
 69 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 70 [-]: GETGLOBAL R2 K21       ; R2 := 0xae91e43b
 71 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0xf64b7262]
 72 [-]: GETTABLE  R4 R0 K23    ; R4 := R0["mClipName"]
 73 [-]: LOADK     R5 K25       ; R5 := "ValueSelector.Slider"
 74 [-]: LOADK     R6 0         ; R6 := 0.000000
 75 [-]: SUB       R7 R1 K26    ; R7 := R1 - 74.250000
 76 [-]: SUB       R7 R7 K27    ; R7 := R7 - 4.000000
 77 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 78 [-]: GETGLOBAL R2 K21       ; R2 := 0xae91e43b
 79 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0xf64b7262]
 80 [-]: GETTABLE  R4 R0 K23    ; R4 := R0["mClipName"]
 81 [-]: LOADK     R5 K28       ; R5 := "ValueSelector.SliderBtn"
 82 [-]: LOADK     R6 0         ; R6 := 0.000000
 83 [-]: SUB       R7 R1 K26    ; R7 := R1 - 74.250000
 84 [-]: SUB       R7 R7 K29    ; R7 := R7 - 7.500000
 85 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 86 [-]: GETUPVAL  R2 U1        ; R2 := U1
 87 [-]: GETTABLE  R3 R0 K30    ; R3 := R0["Id"]
 88 [-]: CALL      R2 2 1       ; R2(R3)
 89 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 9337
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["CopyColors"]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: TEST      R2 0         ; if not R2 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["EquippedItem"]
 15 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xba568eef]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0xe0cba3ca]
 21 [-]: LOADK     R3 K7        ; R3 := "/Lotus/Language/Changyou/CannotColourTimeLimitedEquipment"
 22 [-]: CALL      R2 2 1       ; R2(R3)
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 26 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Customization"]
 27 [-]: GETUPVAL  R3 U2        ; R3 := U2
 28 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
 29 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
 30 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["LoadOutType"]
 31 [-]: GETGLOBAL R5 K1        ; R5 := mSelected
 32 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Element"]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["LoadOutId"]
 34 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 35 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 36 [-]: MOVE      R5 R2        ; R5 := R2
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: TEST      R4 1         ; if R4 then PC := 172
 39 [-]: JMP       172          ; PC := 172
 40 [-]: GETUPVAL  R4 U3        ; R4 := U3
 41 [-]: GETGLOBAL R5 K1        ; R5 := mSelected
 42 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Element"]
 43 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["LoadOutType"]
 44 [-]: GETGLOBAL R6 K1        ; R6 := mSelected
 45 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["Element"]
 46 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LoadOutId"]
 47 [-]: CALL      R4 3 3       ; R4,R5 := R4(R5,R6)
 48 [-]: SELF      R6 R2 K11    ; R7 := R2; R6 := R2[0x8e62760a]
 49 [-]: MOVE      R8 R1        ; R8 := R1
 50 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 51 [-]: GETUPVAL  R7 U4        ; R7 := U4
 52 [-]: CALL      R7 1 2       ; R7 := R7()
 53 [-]: SELF      R8 R2 K11    ; R9 := R2; R8 := R2[0x8e62760a]
 54 [-]: MOVE      R10 R7       ; R10 := R7
 55 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 56 [-]: LOADK     R9 0         ; R9 := 0.000000
 57 [-]: LOADK     R10 7        ; R10 := 7.000000
 58 [-]: LOADK     R11 1        ; R11 := 1.000000
 59 [-]: FORPREP   R9 119       ; R9 -= R11; PC := 119
 60 [-]: EQ        0 R12 K13    ; if R12 ~= 7.000000 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETUPVAL  R13 U5       ; R13 := U5
 63 [-]: GETGLOBAL R14 K1       ; R14 := mSelected
 64 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["Element"]
 65 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 66 [-]: TEST      R13 0        ; if not R13 then PC := 119
 67 [-]: JMP       119          ; PC := 119
 68 [-]: LOADNIL   R13 R13      ; R13 := nil
 69 [-]: LOADBOOL  R14 1 0      ; R14 := true
 70 [-]: SELF      R15 R6 K14   ; R16 := R6; R15 := R6[0x697019d0]
 71 [-]: MOVE      R17 R12      ; R17 := R12
 72 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 73 [-]: TEST      R15 0        ; if not R15 then PC := 80
 74 [-]: JMP       80           ; PC := 80
 75 [-]: SELF      R15 R6 K15   ; R16 := R6; R15 := R6[0x5d10207d]
 76 [-]: MOVE      R17 R12      ; R17 := R12
 77 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 78 [-]: MOVE      R13 R15      ; R13 := R15
 79 [-]: JMP       111          ; PC := 111
 80 [-]: SELF      R15 R2 K16   ; R16 := R2; R15 := R2[0x6199aec6]
 81 [-]: MOVE      R17 R12      ; R17 := R12
 82 [-]: GETUPVAL  R18 U1       ; R18 := U1
 83 [-]: GETTABLE  R18 R18 K17  ; R18 := R18[0x06d055f9]
 84 [-]: LEN       R19 R4       ; R19 := # R4
 85 [-]: LT        1 K18 R19    ; if 0.000000 < R19 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: LOADBOOL  R19 0 1      ; R19 := false; PC := 88
 88 [-]: LOADBOOL  R19 1 0      ; R19 := true
 89 [-]: GETTABLE  R20 R4 K19   ; R20 := R4[1.000000]
 90 [-]: LOADNIL   R21 R21      ; R21 := nil
 91 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
 92 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 93 [-]: MOVE      R13 R15      ; R13 := R15
 94 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
 95 [-]: MOVE      R16 R3       ; R16 := R3
 96 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 97 [-]: TEST      R15 1        ; if R15 then PC := 111
 98 [-]: JMP       111          ; PC := 111
 99 [-]: EQ        1 R12 K20    ; if R12 == 6.000000 then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: EQ        0 R12 K13    ; if R12 ~= 7.000000 then PC := 111
102 [-]: JMP       111          ; PC := 111
103 [-]: SELF      R15 R3 K21   ; R16 := R3; R15 := R3[0xa3ef5d65]
104 [-]: MOVE      R17 R13      ; R17 := R13
105 [-]: EQ        1 R12 K13    ; if R12 == 7.000000 then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 108
108 [-]: LOADBOOL  R18 1 0      ; R18 := true
109 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
110 [-]: MOVE      R14 R15      ; R14 := R15
111 [-]: SELF      R15 R8 K22   ; R16 := R8; R15 := R8[0xa3927fe9]
112 [-]: MOVE      R17 R12      ; R17 := R12
113 [-]: MOVE      R18 R13      ; R18 := R13
114 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
115 [-]: SELF      R15 R8 K23   ; R16 := R8; R15 := R8[0xfc5d7158]
116 [-]: MOVE      R17 R12      ; R17 := R12
117 [-]: MOVE      R18 R14      ; R18 := R14
118 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
119 [-]: FORLOOP   R9 60        ; R9 += R11; if R9 <= R10 then begin PC := 60; R12 := R9 end
120 [-]: GETGLOBAL R15 K1       ; R15 := mSelected
121 [-]: GETTABLE  R15 R15 K2   ; R15 := R15["Element"]
122 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["Customization"]
123 [-]: SELF      R15 R15 K24  ; R16 := R15; R15 := R15[0x199edf6e]
124 [-]: MOVE      R17 R7       ; R17 := R7
125 [-]: MOVE      R18 R8       ; R18 := R8
126 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
127 [-]: GETGLOBAL R15 K1       ; R15 := mSelected
128 [-]: GETTABLE  R15 R15 K2   ; R15 := R15["Element"]
129 [-]: GETTABLE  R15 R15 K4   ; R15 := R15["EquippedItem"]
130 [-]: SELF      R15 R15 K25  ; R16 := R15; R15 := R15[0xaa041663]
131 [-]: GETGLOBAL R17 K1       ; R17 := mSelected
132 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["Element"]
133 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["Customization"]
134 [-]: GETGLOBAL R18 K1       ; R18 := mSelected
135 [-]: GETTABLE  R18 R18 K2   ; R18 := R18["Element"]
136 [-]: GETTABLE  R18 R18 K26  ; R18 := R18["mCustSlot"]
137 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
138 [-]: GETGLOBAL R15 K27      ; R15 := mInventory
139 [-]: SELF      R15 R15 K28  ; R16 := R15; R15 := R15[0x9b051033]
140 [-]: GETGLOBAL R17 K1       ; R17 := mSelected
141 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["Element"]
142 [-]: GETTABLE  R17 R17 K29  ; R17 := R17["UID"]
143 [-]: GETGLOBAL R18 K1       ; R18 := mSelected
144 [-]: GETTABLE  R18 R18 K2   ; R18 := R18["Element"]
145 [-]: GETTABLE  R18 R18 K26  ; R18 := R18["mCustSlot"]
146 [-]: GETGLOBAL R19 K1       ; R19 := mSelected
147 [-]: GETTABLE  R19 R19 K2   ; R19 := R19["Element"]
148 [-]: GETTABLE  R19 R19 K8   ; R19 := R19["Customization"]
149 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
150 [-]: LOADK     R15 1        ; R15 := 1.000000
151 [-]: LEN       R16 R4       ; R16 := # R4
152 [-]: LOADK     R17 1        ; R17 := 1.000000
153 [-]: FORPREP   R15 162      ; R15 -= R17; PC := 162
154 [-]: GETTABLE  R19 R4 R18   ; R19 := R4[R18]
155 [-]: GETGLOBAL R20 K1       ; R20 := mSelected
156 [-]: GETTABLE  R20 R20 K2   ; R20 := R20["Element"]
157 [-]: GETTABLE  R20 R20 K8   ; R20 := R20["Customization"]
158 [-]: SELF      R20 R20 K30  ; R21 := R20; R20 := R20[0x61b59a83]
159 [-]: MOVE      R22 R19      ; R22 := R19
160 [-]: MOVE      R23 R5       ; R23 := R5
161 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
162 [-]: FORLOOP   R15 154      ; R15 += R17; if R15 <= R16 then begin PC := 154; R18 := R15 end
163 [-]: GETUPVAL  R20 U6       ; R20 := U6
164 [-]: CALL      R20 1 1      ; R20()
165 [-]: GETGLOBAL R20 K31      ; R20 := mLists
166 [-]: GETTABLE  R20 R20 K32  ; R20 := R20["mCosmeticsList"]
167 [-]: SELF      R20 R20 K33  ; R21 := R20; R20 := R20[0x71e9ac81]
168 [-]: CALL      R20 2 1      ; R20(R21)
169 [-]: GETUPVAL  R20 U7       ; R20 := U7
170 [-]: GETTABLE  R20 R20 K34  ; R20 := R20[0xf6edf3bb]
171 [-]: CALL      R20 1 1      ; R20()
172 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 9389
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["BackgroundMovie"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["BackgroundMovie"]
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xe4162eed]
 10 [-]: LOADK     R2 K4        ; R2 := "ShowBlockingMessage"
 11 [-]: LOADK     R3 K5        ; R3 := "0"
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: LOADK     R0 1         ; R0 := 1.000000
 14 [-]: GETGLOBAL R1 K6        ; R1 := mPendingRandomizeInfo
 15 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["Items"]
 16 [-]: LEN       R1 R1        ; R1 := # R1
 17 [-]: LOADK     R2 1         ; R2 := 1.000000
 18 [-]: FORPREP   R0 39        ; R0 -= R2; PC := 39
 19 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 20 [-]: GETGLOBAL R5 K6        ; R5 := mPendingRandomizeInfo
 21 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["Cosmetics"]
 22 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 23 [-]: SETTABLE  R4 K9 R5     ; R4["Cosmetic"] := R5
 24 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 25 [-]: GETGLOBAL R5 K6        ; R5 := mPendingRandomizeInfo
 26 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Items"]
 27 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 28 [-]: SETTABLE  R4 K11 R5    ; R4["Item"] := R5
 29 [-]: GETUPVAL  R4 U1        ; R4 := U1
 30 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["SELECTING_SKINS"]
 31 [-]: SETUPVAL  R4 U0        ; U82 := R0
 32 [-]: LOADBOOL  R4 0 0       ; R4 := false
 33 [-]: SETGLOBAL R4 K13       ; mInputBlocked := R4
 34 [-]: GETUPVAL  R4 U2        ; R4 := U2
 35 [-]: CALL      R4 1 1       ; R4()
 36 [-]: GETUPVAL  R4 U1        ; R4 := U1
 37 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CUSTOMIZING_SKINS"]
 38 [-]: SETUPVAL  R4 U0        ; U82 := R0
 39 [-]: FORLOOP   R0 19        ; R0 += R2; if R0 <= R1 then begin PC := 19; R3 := R0 end
 40 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 41 [-]: GETGLOBAL R5 K8        ; R5 := mSelected
 42 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["Element"]
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: TEST      R4 1         ; if R4 then PC := 81
 45 [-]: JMP       81           ; PC := 81
 46 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 47 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["Element"]
 48 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["LoadOutType"]
 49 [-]: EQ        0 R4 K18     ; if R4 ~= 1.000000 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 52 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["Element"]
 53 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["LoadOutId"]
 54 [-]: EQ        0 R4 K20     ; if R4 ~= 0.000000 then PC := 61
 55 [-]: JMP       61           ; PC := 61
 56 [-]: GETGLOBAL R4 K21       ; R4 := 0x25d99d89
 57 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x3c6b0324]
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: TEST      R4 1         ; if R4 then PC := 83
 60 [-]: JMP       83           ; PC := 83
 61 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 62 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["Element"]
 63 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["LoadOutId"]
 64 [-]: EQ        0 R4 K23     ; if R4 ~= 5.000000 then PC := 81
 65 [-]: JMP       81           ; PC := 81
 66 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 67 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["Element"]
 68 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["Type"]
 69 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0xf2deaf69]
 70 [-]: GETGLOBAL R6 K26       ; R6 := 0xb9a9a904
 71 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 72 [-]: TEST      R4 1         ; if R4 then PC := 83
 73 [-]: JMP       83           ; PC := 83
 74 [-]: GETGLOBAL R4 K8        ; R4 := mSelected
 75 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["Element"]
 76 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["Type"]
 77 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0xf2deaf69]
 78 [-]: GETGLOBAL R6 K27       ; R6 := 0x01302fb0
 79 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 80 [-]: JMP       83           ; PC := 83
 81 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 82
 82 [-]: LOADBOOL  R4 1 0       ; R4 := true
 83 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 84 [-]: GETGLOBAL R6 K8        ; R6 := mSelected
 85 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["Element"]
 86 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 87 [-]: TEST      R5 1         ; if R5 then PC := 104
 88 [-]: JMP       104          ; PC := 104
 89 [-]: GETGLOBAL R5 K8        ; R5 := mSelected
 90 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["Element"]
 91 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["LoadOutType"]
 92 [-]: EQ        1 R5 K20     ; if R5 == 0.000000 then PC := 99
 93 [-]: JMP       99           ; PC := 99
 94 [-]: GETGLOBAL R5 K8        ; R5 := mSelected
 95 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["Element"]
 96 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["LoadOutType"]
 97 [-]: EQ        0 R5 K28     ; if R5 ~= 3.000000 then PC := 104
 98 [-]: JMP       104          ; PC := 104
 99 [-]: GETGLOBAL R5 K8        ; R5 := mSelected
100 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["Element"]
101 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["LoadOutId"]
102 [-]: EQ        1 R5 K20     ; if R5 == 0.000000 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 105
105 [-]: LOADBOOL  R5 1 0       ; R5 := true
106 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
107 [-]: GETGLOBAL R7 K8        ; R7 := mSelected
108 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["Element"]
109 [-]: CALL      R6 2 2       ; R6 := R6(R7)
110 [-]: TEST      R6 1         ; if R6 then PC := 134
111 [-]: JMP       134          ; PC := 134
112 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
113 [-]: GETGLOBAL R7 K8        ; R7 := mSelected
114 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["Element"]
115 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["EquippedItem"]
116 [-]: CALL      R6 2 2       ; R6 := R6(R7)
117 [-]: TEST      R6 1         ; if R6 then PC := 134
118 [-]: JMP       134          ; PC := 134
119 [-]: GETGLOBAL R6 K8        ; R6 := mSelected
120 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["Element"]
121 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["EquippedItem"]
122 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["mModularParts"]
123 [-]: LEN       R6 R6        ; R6 := # R6
124 [-]: LT        0 K20 R6     ; if 0.000000 >= R6 then PC := 134
125 [-]: JMP       134          ; PC := 134
126 [-]: GETGLOBAL R6 K8        ; R6 := mSelected
127 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["Element"]
128 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["EquippedItem"]
129 [-]: SELF      R6 R6 K31    ; R7 := R6; R6 := R6[0xdbfbf6c0]
130 [-]: LOADK     R8 3         ; R8 := 3.000000
131 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
132 [-]: NOT       R6 R6        ; R6 := not R6
133 [-]: JMP       136          ; PC := 136
134 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 135
135 [-]: LOADBOOL  R6 1 0       ; R6 := true
136 [-]: TEST      R6 0         ; if not R6 then PC := 144
137 [-]: JMP       144          ; PC := 144
138 [-]: GETGLOBAL R7 K8        ; R7 := mSelected
139 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["Element"]
140 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["LoadOutType"]
141 [-]: EQ        0 R7 K32     ; if R7 ~= 6.000000 then PC := 144
142 [-]: JMP       144          ; PC := 144
143 [-]: LOADBOOL  R6 0 0       ; R6 := false
144 [-]: TEST      R4 1         ; if R4 then PC := 159
145 [-]: JMP       159          ; PC := 159
146 [-]: TEST      R6 1         ; if R6 then PC := 159
147 [-]: JMP       159          ; PC := 159
148 [-]: GETUPVAL  R7 U3        ; R7 := U3
149 [-]: LOADK     R8 0         ; R8 := 0.000000
150 [-]: CALL      R7 2 1       ; R7(R8)
151 [-]: GETUPVAL  R7 U3        ; R7 := U3
152 [-]: LOADK     R8 1         ; R8 := 1.000000
153 [-]: CALL      R7 2 1       ; R7(R8)
154 [-]: TEST      R5 0         ; if not R5 then PC := 159
155 [-]: JMP       159          ; PC := 159
156 [-]: GETUPVAL  R7 U3        ; R7 := U3
157 [-]: LOADK     R8 3         ; R8 := 3.000000
158 [-]: CALL      R7 2 1       ; R7(R8)
159 [-]: GETGLOBAL R7 K6        ; R7 := mPendingRandomizeInfo
160 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["HasSigil"]
161 [-]: TEST      R7 0         ; if not R7 then PC := 251
162 [-]: JMP       251          ; PC := 251
163 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
164 [-]: GETGLOBAL R8 K8        ; R8 := mSelected
165 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["Element"]
166 [-]: CALL      R7 2 2       ; R7 := R7(R8)
167 [-]: TEST      R7 1         ; if R7 then PC := 251
168 [-]: JMP       251          ; PC := 251
169 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
170 [-]: GETGLOBAL R8 K8        ; R8 := mSelected
171 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["Element"]
172 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["Customization"]
173 [-]: CALL      R7 2 2       ; R7 := R7(R8)
174 [-]: TEST      R7 1         ; if R7 then PC := 251
175 [-]: JMP       251          ; PC := 251
176 [-]: GETGLOBAL R7 K8        ; R7 := mSelected
177 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["Element"]
178 [-]: GETTABLE  R7 R7 K34    ; R7 := R7["Customization"]
179 [-]: SELF      R7 R7 K35    ; R8 := R7; R7 := R7[0x8e62760a]
180 [-]: LOADK     R9 2         ; R9 := 2.000000
181 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
182 [-]: SELF      R8 R7 K36    ; R9 := R7; R8 := R7[0x5d10207d]
183 [-]: LOADK     R10 1        ; R10 := 1.000000
184 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
185 [-]: SELF      R9 R7 K36    ; R10 := R7; R9 := R7[0x5d10207d]
186 [-]: LOADK     R11 3        ; R11 := 3.000000
187 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
188 [-]: GETUPVAL  R10 U3       ; R10 := U3
189 [-]: LOADK     R11 2        ; R11 := 2.000000
190 [-]: CALL      R10 2 1      ; R10(R11)
191 [-]: GETGLOBAL R10 K8       ; R10 := mSelected
192 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["Element"]
193 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Customization"]
194 [-]: SELF      R10 R10 K35  ; R11 := R10; R10 := R10[0x8e62760a]
195 [-]: LOADK     R12 2        ; R12 := 2.000000
196 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
197 [-]: SELF      R11 R10 K36  ; R12 := R10; R11 := R10[0x5d10207d]
198 [-]: LOADK     R13 1        ; R13 := 1.000000
199 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
200 [-]: SELF      R12 R10 K36  ; R13 := R10; R12 := R10[0x5d10207d]
201 [-]: LOADK     R14 3        ; R14 := 3.000000
202 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
203 [-]: SELF      R13 R10 K36  ; R14 := R10; R13 := R10[0x5d10207d]
204 [-]: LOADK     R15 6        ; R15 := 6.000000
205 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
206 [-]: GETTABLE  R14 R8 K37   ; R14 := R8["red"]
207 [-]: SETTABLE  R11 K37 R14  ; R11[0xe4162eed] := R14
208 [-]: GETTABLE  R14 R8 K38   ; R14 := R8["green"]
209 [-]: SETTABLE  R11 K38 R14  ; R11["green"] := R14
210 [-]: GETGLOBAL R14 K40      ; R14 := 0x5bced4c4
211 [-]: GETTABLE  R14 R14 K41  ; R14 := R14[0x3630e649]
212 [-]: LOADK     R15 0        ; R15 := 0.000000
213 [-]: LOADK     R16 255      ; R16 := 255.000000
214 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
215 [-]: SETTABLE  R11 K39 R14  ; R11["alpha"] := R14
216 [-]: GETTABLE  R14 R9 K37   ; R14 := R9["red"]
217 [-]: SETTABLE  R12 K37 R14  ; R12[0xe4162eed] := R14
218 [-]: GETTABLE  R14 R9 K38   ; R14 := R9["green"]
219 [-]: SETTABLE  R12 K38 R14  ; R12["green"] := R14
220 [-]: GETGLOBAL R14 K40      ; R14 := 0x5bced4c4
221 [-]: GETTABLE  R14 R14 K41  ; R14 := R14[0x3630e649]
222 [-]: LOADK     R15 0        ; R15 := 0.000000
223 [-]: LOADK     R16 255      ; R16 := 255.000000
224 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
225 [-]: SETTABLE  R12 K39 R14  ; R12["alpha"] := R14
226 [-]: GETGLOBAL R14 K40      ; R14 := 0x5bced4c4
227 [-]: GETTABLE  R14 R14 K41  ; R14 := R14[0x3630e649]
228 [-]: LOADK     R15 0        ; R15 := 0.000000
229 [-]: LOADK     R16 255      ; R16 := 255.000000
230 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
231 [-]: SETTABLE  R13 K39 R14  ; R13["alpha"] := R14
232 [-]: SELF      R14 R10 K42  ; R15 := R10; R14 := R10[0xa3927fe9]
233 [-]: LOADK     R16 1        ; R16 := 1.000000
234 [-]: MOVE      R17 R11      ; R17 := R11
235 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
236 [-]: SELF      R14 R10 K42  ; R15 := R10; R14 := R10[0xa3927fe9]
237 [-]: LOADK     R16 3        ; R16 := 3.000000
238 [-]: MOVE      R17 R12      ; R17 := R12
239 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
240 [-]: SELF      R14 R10 K42  ; R15 := R10; R14 := R10[0xa3927fe9]
241 [-]: LOADK     R16 6        ; R16 := 6.000000
242 [-]: MOVE      R17 R13      ; R17 := R13
243 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
244 [-]: GETGLOBAL R14 K8       ; R14 := mSelected
245 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["Element"]
246 [-]: GETTABLE  R14 R14 K34  ; R14 := R14["Customization"]
247 [-]: SELF      R14 R14 K43  ; R15 := R14; R14 := R14[0x199edf6e]
248 [-]: LOADK     R16 2        ; R16 := 2.000000
249 [-]: MOVE      R17 R10      ; R17 := R10
250 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
251 [-]: TEST      R6 1         ; if R6 then PC := 257
252 [-]: JMP       257          ; PC := 257
253 [-]: GETUPVAL  R14 U4       ; R14 := U4
254 [-]: NEWTABLE  R15 0 1      ; R15 := {}
255 [-]: SETTABLE  R15 K44 K20  ; R15["CopyColors"] := 0.000000
256 [-]: CALL      R14 2 1      ; R14(R15)
257 [-]: GETGLOBAL R14 K6       ; R14 := mPendingRandomizeInfo
258 [-]: NEWTABLE  R15 0 0      ; R15 := {}
259 [-]: SETTABLE  R14 K7 R15   ; R14["Items"] := R15
260 [-]: GETGLOBAL R14 K6       ; R14 := mPendingRandomizeInfo
261 [-]: NEWTABLE  R15 0 0      ; R15 := {}
262 [-]: SETTABLE  R14 K10 R15  ; R14["Cosmetics"] := R15
263 [-]: GETGLOBAL R14 K6       ; R14 := mPendingRandomizeInfo
264 [-]: NEWTABLE  R15 0 0      ; R15 := {}
265 [-]: SETTABLE  R14 K45 R15  ; R14["SlotInfo"] := R15
266 [-]: GETGLOBAL R14 K6       ; R14 := mPendingRandomizeInfo
267 [-]: SETTABLE  R14 K33 K46  ; R14["HasSigil"] := nil
268 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 9455
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mChildMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["BackgroundMovie"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["BackgroundMovie"]
 14 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xe4162eed]
 15 [-]: LOADK     R2 K5        ; R2 := "ShowBlockingMessage"
 16 [-]: LOADK     R3 K6        ; R3 := "0"
 17 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETGLOBAL R0 K7        ; R0 := mPendingRandomizeInfo
 20 [-]: SETTABLE  R0 K8 K9     ; R0["HasSigil"] := false
 21 [-]: NEWTABLE  R0 0 0       ; R0 := {}
 22 [-]: GETGLOBAL R1 K7        ; R1 := mPendingRandomizeInfo
 23 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 24 [-]: SETTABLE  R1 K10 R2    ; R1["Items"] := R2
 25 [-]: GETGLOBAL R1 K7        ; R1 := mPendingRandomizeInfo
 26 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 27 [-]: SETTABLE  R1 K11 R2    ; R1["SlotInfo"] := R2
 28 [-]: GETGLOBAL R1 K7        ; R1 := mPendingRandomizeInfo
 29 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 30 [-]: SETTABLE  R1 K12 R2    ; R1["Cosmetics"] := R2
 31 [-]: GETGLOBAL R1 K13       ; R1 := 0xc8802016
 32 [-]: GETGLOBAL R2 K14       ; R2 := mSortedCosmetics
 33 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 34 [-]: JMP       157          ; PC := 157
 35 [-]: GETGLOBAL R6 K15       ; R6 := 0xce225efa
 36 [-]: LOADK     R7 0         ; R7 := 0.000000
 37 [-]: CALL      R6 2 1       ; R6(R7)
 38 [-]: GETTABLE  R6 R5 K10    ; R6 := R5["Items"]
 39 [-]: LEN       R6 R6        ; R6 := # R6
 40 [-]: LOADK     R7 1         ; R7 := 1.000000
 41 [-]: LOADK     R8 -1        ; R8 := -1.000000
 42 [-]: FORPREP   R6 89        ; R6 -= R8; PC := 89
 43 [-]: GETTABLE  R10 R5 K10   ; R10 := R5["Items"]
 44 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 45 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["mPurchased"]
 46 [-]: TEST      R10 1        ; if R10 then PC := 54
 47 [-]: JMP       54           ; PC := 54
 48 [-]: GETGLOBAL R10 K17      ; R10 := 0x33bdd652
 49 [-]: GETTABLE  R10 R10 K18  ; R10 := R10[0x9c1f3b5a]
 50 [-]: GETTABLE  R11 R5 K10   ; R11 := R5["Items"]
 51 [-]: MOVE      R12 R9       ; R12 := R9
 52 [-]: CALL      R10 3 1      ; R10(R11,R12)
 53 [-]: JMP       89           ; PC := 89
 54 [-]: GETTABLE  R10 R5 K19   ; R10 := R5["Slot"]
 55 [-]: EQ        1 R10 K21    ; if R10 == 12.000000 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETTABLE  R10 R5 K19   ; R10 := R5["Slot"]
 58 [-]: EQ        0 R10 K22    ; if R10 ~= 13.000000 then PC := 89
 59 [-]: JMP       89           ; PC := 89
 60 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
 61 [-]: GETTABLE  R11 R5 K10   ; R11 := R5["Items"]
 62 [-]: GETTABLE  R11 R11 R9   ; R11 := R11[R9]
 63 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Type"]
 64 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 65 [-]: TEST      R10 1        ; if R10 then PC := 89
 66 [-]: JMP       89           ; PC := 89
 67 [-]: GETGLOBAL R10 K24      ; R10 := 0xb009bbc6
 68 [-]: GETTABLE  R11 R5 K10   ; R11 := R5["Items"]
 69 [-]: GETTABLE  R11 R11 R9   ; R11 := R11[R9]
 70 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Type"]
 71 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 72 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
 73 [-]: MOVE      R12 R10      ; R12 := R10
 74 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 75 [-]: TEST      R11 1        ; if R11 then PC := 89
 76 [-]: JMP       89           ; PC := 89
 77 [-]: SELF      R11 R10 K25  ; R12 := R10; R11 := R10[0x07408254]
 78 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 79 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
 80 [-]: MOVE      R13 R11      ; R13 := R11
 81 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 82 [-]: TEST      R12 1        ; if R12 then PC := 89
 83 [-]: JMP       89           ; PC := 89
 84 [-]: GETGLOBAL R12 K17      ; R12 := 0x33bdd652
 85 [-]: GETTABLE  R12 R12 K18  ; R12 := R12[0x9c1f3b5a]
 86 [-]: GETTABLE  R13 R5 K10   ; R13 := R5["Items"]
 87 [-]: MOVE      R14 R9       ; R14 := R9
 88 [-]: CALL      R12 3 1      ; R12(R13,R14)
 89 [-]: FORLOOP   R6 43        ; R6 += R8; if R6 <= R7 then begin PC := 43; R9 := R6 end
 90 [-]: LOADBOOL  R12 1 0      ; R12 := true
 91 [-]: GETTABLE  R13 R5 K19   ; R13 := R5["Slot"]
 92 [-]: EQ        1 R13 K21    ; if R13 == 12.000000 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETTABLE  R13 R5 K19   ; R13 := R5["Slot"]
 95 [-]: EQ        0 R13 K22    ; if R13 ~= 13.000000 then PC := 133
 96 [-]: JMP       133          ; PC := 133
 97 [-]: GETGLOBAL R13 K7       ; R13 := mPendingRandomizeInfo
 98 [-]: SETTABLE  R13 K8 K26   ; R13["HasSigil"] := true
 99 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
100 [-]: GETGLOBAL R14 K27      ; R14 := mSelected
101 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["Element"]
102 [-]: CALL      R13 2 2      ; R13 := R13(R14)
103 [-]: TEST      R13 1        ; if R13 then PC := 133
104 [-]: JMP       133          ; PC := 133
105 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
106 [-]: GETGLOBAL R14 K27      ; R14 := mSelected
107 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["Element"]
108 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["Customization"]
109 [-]: CALL      R13 2 2      ; R13 := R13(R14)
110 [-]: TEST      R13 1        ; if R13 then PC := 133
111 [-]: JMP       133          ; PC := 133
112 [-]: GETGLOBAL R13 K24      ; R13 := 0xb009bbc6
113 [-]: GETGLOBAL R14 K27      ; R14 := mSelected
114 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["Element"]
115 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["Customization"]
116 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14[0x2540510f]
117 [-]: GETTABLE  R16 R5 K19   ; R16 := R5["Slot"]
118 [-]: CALL      R14 3 0      ; R14,... := R14(R15,R16)
119 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
120 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
121 [-]: MOVE      R15 R13      ; R15 := R13
122 [-]: CALL      R14 2 2      ; R14 := R14(R15)
123 [-]: TEST      R14 1        ; if R14 then PC := 133
124 [-]: JMP       133          ; PC := 133
125 [-]: SELF      R14 R13 K25  ; R15 := R13; R14 := R13[0x07408254]
126 [-]: CALL      R14 2 2      ; R14 := R14(R15)
127 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
128 [-]: MOVE      R16 R14      ; R16 := R14
129 [-]: CALL      R15 2 2      ; R15 := R15(R16)
130 [-]: TEST      R15 1        ; if R15 then PC := 133
131 [-]: JMP       133          ; PC := 133
132 [-]: LOADBOOL  R12 0 0      ; R12 := false
133 [-]: TEST      R12 0        ; if not R12 then PC := 157
134 [-]: JMP       157          ; PC := 157
135 [-]: GETTABLE  R15 R5 K10   ; R15 := R5["Items"]
136 [-]: LEN       R15 R15      ; R15 := # R15
137 [-]: LT        0 K31 R15    ; if 0.000000 >= R15 then PC := 157
138 [-]: JMP       157          ; PC := 157
139 [-]: GETGLOBAL R15 K32      ; R15 := 0x5bced4c4
140 [-]: GETTABLE  R15 R15 K33  ; R15 := R15[0x3630e649]
141 [-]: LOADK     R16 1        ; R16 := 1.000000
142 [-]: GETTABLE  R17 R5 K10   ; R17 := R5["Items"]
143 [-]: LEN       R17 R17      ; R17 := # R17
144 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
145 [-]: GETGLOBAL R16 K7       ; R16 := mPendingRandomizeInfo
146 [-]: GETTABLE  R16 R16 K12  ; R16 := R16["Cosmetics"]
147 [-]: SETTABLE  R16 R4 R5    ; R16[R4] := R5
148 [-]: GETGLOBAL R16 K7       ; R16 := mPendingRandomizeInfo
149 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["Items"]
150 [-]: GETTABLE  R17 R5 K10   ; R17 := R5["Items"]
151 [-]: GETTABLE  R17 R17 R15  ; R17 := R17[R15]
152 [-]: SETTABLE  R16 R4 R17   ; R16[R4] := R17
153 [-]: GETTABLE  R16 R5 K10   ; R16 := R5["Items"]
154 [-]: GETTABLE  R16 R16 R15  ; R16 := R16[R15]
155 [-]: GETTABLE  R16 R16 K34  ; R16 := R16["FullName"]
156 [-]: SETTABLE  R0 R4 R16    ; R0[R4] := R16
157 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 35; R3 := R4 end
158 [-]: JMP       35           ; PC := 35
159 [-]: GETGLOBAL R16 K35      ; R16 := mLoaders
160 [-]: GETTABLE  R16 R16 K36  ; R16 := R16["mCosmeticsLoader"]
161 [-]: SELF      R16 R16 K37  ; R17 := R16; R16 := R16[0x5a7aac67]
162 [-]: CALL      R16 2 1      ; R16(R17)
163 [-]: LEN       R16 R0       ; R16 := # R0
164 [-]: LT        0 K31 R16    ; if 0.000000 >= R16 then PC := 173
165 [-]: JMP       173          ; PC := 173
166 [-]: GETGLOBAL R16 K35      ; R16 := mLoaders
167 [-]: GETTABLE  R16 R16 K36  ; R16 := R16["mCosmeticsLoader"]
168 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0x2f86cf1e]
169 [-]: MOVE      R18 R0       ; R18 := R0
170 [-]: LOADBOOL  R19 1 0      ; R19 := true
171 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
172 [-]: JMP       175          ; PC := 175
173 [-]: GETUPVAL  R16 U0       ; R16 := U0
174 [-]: CALL      R16 1 1      ; R16()
175 [-]: GETUPVAL  R16 U1       ; R16 := U1
176 [-]: GETTABLE  R16 R16 K39  ; R16 := R16[0x659d451f]
177 [-]: GETGLOBAL R17 K40      ; R17 := 0x0032441c
178 [-]: GETTABLE  R17 R17 K41  ; R17 := R17["UISound_SweetenerTwo"]
179 [-]: CALL      R16 2 1      ; R16(R17)
180 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 9517
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mSeenRandomizeConfirm
  2 [-]: TEST      R0 1         ; if R0 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xdedfded7]
  6 [-]: LOADK     R1 K2        ; R1 := "/Lotus/Language/Loadout/RandomizeConfirm"
  7 [-]: LOADK     R2 K3        ; R2 := "OnRandomizeConfirm"
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
 11 [-]: GETGLOBAL R1 K5        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["BackgroundMovie"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 25
 15 [-]: JMP       25           ; PC := 25
 16 [-]: GETGLOBAL R0 K5        ; R0 := _T
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: SETTABLE  R0 K7 R1     ; R0["DialogOpenCallback"] := R1
 19 [-]: GETGLOBAL R0 K5        ; R0 := _T
 20 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["BackgroundMovie"]
 21 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xe4162eed]
 22 [-]: LOADK     R2 K9        ; R2 := "ShowBlockingMessage"
 23 [-]: LOADK     R3 K10       ; R3 := "2"
 24 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 25 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 9530
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 9534
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: EQ        0 R0 K2      ; if R0 ~= 4.000000 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: LOADBOOL  R1 1 0       ; R1 := true
  8 [-]: SETGLOBAL R1 K3        ; mSeenRandomizeConfirm := R1
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: CALL      R1 1 1       ; R1()
 11 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 9542
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  37

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mInventory
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := mCurrentLoadout
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K3        ; R1 := mSelected
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Element"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: LOADK     R0 0         ; R0 := 0.000000
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Current"]
 21 [-]: EQ        0 R1 K7      ; if R1 ~= 2.000000 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: LOADK     R0 3         ; R0 := 3.000000
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETGLOBAL R1 K3        ; R1 := mSelected
 26 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Element"]
 27 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["LoadOutType"]
 28 [-]: EQ        0 R1 K9      ; if R1 ~= 8.000000 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R1 K3        ; R1 := mSelected
 31 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Element"]
 32 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["LoadOutId"]
 33 [-]: EQ        1 R1 K11     ; if R1 == 0.000000 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADK     R0 8         ; R0 := 8.000000
 36 [-]: LOADK     R1 0         ; R1 := 0.000000
 37 [-]: GETGLOBAL R2 K12       ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mSpecialSuitMode"]
 39 [-]: TEST      R2 0         ; if not R2 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETGLOBAL R2 K3        ; R2 := mSelected
 42 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Element"]
 43 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["LoadOutId"]
 44 [-]: EQ        0 R2 K14     ; if R2 ~= 6.000000 then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: LOADK     R1 5         ; R1 := 5.000000
 47 [-]: GETGLOBAL R2 K2        ; R2 := mCurrentLoadout
 48 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 49 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x2abbe722]
 50 [-]: MOVE      R4 R1        ; R4 := R1
 51 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 52 [-]: GETGLOBAL R3 K3        ; R3 := mSelected
 53 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Element"]
 54 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["Customization"]
 55 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 56 [-]: MOVE      R5 R3        ; R5 := R3
 57 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 58 [-]: TEST      R4 1         ; if R4 then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 61 [-]: MOVE      R5 R2        ; R5 := R2
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: TEST      R4 0         ; if not R4 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETGLOBAL R4 K1        ; R4 := mInventory
 67 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4[0xc70965fe]
 68 [-]: GETUPVAL  R6 U1        ; R6 := U1
 69 [-]: GETTABLE  R6 R6 K18    ; R6 := R6[0x06d055f9]
 70 [-]: EQ        1 R0 K19     ; if R0 == 3.000000 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 73
 73 [-]: LOADBOOL  R7 1 0       ; R7 := true
 74 [-]: LOADK     R8 0         ; R8 := 0.000000
 75 [-]: MOVE      R9 R0        ; R9 := R0
 76 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 77 [-]: MOVE      R7 R1        ; R7 := R1
 78 [-]: GETTABLE  R8 R2 K20    ; R8 := R2["mItemId"]
 79 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["mId"]
 80 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 81 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 82 [-]: MOVE      R6 R4        ; R6 := R4
 83 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 84 [-]: TEST      R5 0         ; if not R5 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: RETURN    R0 1         ; return 
 87 [-]: SELF      R5 R4 K22    ; R6 := R4; R5 := R4[0x68d708a7]
 88 [-]: GETTABLE  R7 R2 K23    ; R7 := R2["mCustSlot"]
 89 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 90 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 91 [-]: MOVE      R7 R5        ; R7 := R5
 92 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 93 [-]: TEST      R6 0         ; if not R6 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: RETURN    R0 1         ; return 
 96 [-]: GETUPVAL  R6 U2        ; R6 := U2
 97 [-]: MOVE      R7 R0        ; R7 := R0
 98 [-]: MOVE      R8 R1        ; R8 := R1
 99 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
100 [-]: SELF      R7 R5 K24    ; R8 := R5; R7 := R5[0x8e62760a]
101 [-]: LOADK     R9 0         ; R9 := 0.000000
102 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
103 [-]: SELF      R8 R3 K24    ; R9 := R3; R8 := R3[0x8e62760a]
104 [-]: LOADK     R10 0        ; R10 := 0.000000
105 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
106 [-]: GETUPVAL  R9 U3        ; R9 := U3
107 [-]: LOADK     R10 0        ; R10 := 0.000000
108 [-]: MOVE      R11 R1       ; R11 := R1
109 [-]: CALL      R9 3 3       ; R9,R10 := R9(R10,R11)
110 [-]: GETUPVAL  R11 U1       ; R11 := U1
111 [-]: GETTABLE  R11 R11 K18  ; R11 := R11[0x06d055f9]
112 [-]: LEN       R12 R9       ; R12 := # R9
113 [-]: LT        1 K11 R12    ; if 0.000000 < R12 then PC := 116
114 [-]: JMP       116          ; PC := 116
115 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 116
116 [-]: LOADBOOL  R12 1 0      ; R12 := true
117 [-]: LEN       R13 R9       ; R13 := # R9
118 [-]: GETTABLE  R13 R9 R13   ; R13 := R9[R13]
119 [-]: LOADNIL   R14 R14      ; R14 := nil
120 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
121 [-]: GETUPVAL  R12 U0       ; R12 := U0
122 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["Current"]
123 [-]: EQ        0 R12 K19    ; if R12 ~= 3.000000 then PC := 148
124 [-]: JMP       148          ; PC := 148
125 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
126 [-]: MOVE      R13 R11      ; R13 := R11
127 [-]: CALL      R12 2 2      ; R12 := R12(R13)
128 [-]: TEST      R12 1        ; if R12 then PC := 148
129 [-]: JMP       148          ; PC := 148
130 [-]: SELF      R12 R11 K25  ; R13 := R11; R12 := R11[0x905bb2bd]
131 [-]: CALL      R12 2 2      ; R12 := R12(R13)
132 [-]: GETGLOBAL R13 K26      ; R13 := 0x7ed0a956
133 [-]: LOADK     R14 K27      ; R14 := "/Lotus/Types/Game/FlightJetPack"
134 [-]: CALL      R13 2 2      ; R13 := R13(R14)
135 [-]: GETGLOBAL R14 K28      ; R14 := 0xcfc01047
136 [-]: MOVE      R15 R12      ; R15 := R12
137 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
138 [-]: JMP       146          ; PC := 146
139 [-]: SELF      R19 R18 K29  ; R20 := R18; R19 := R18[0xf2deaf69]
140 [-]: MOVE      R21 R13      ; R21 := R13
141 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
142 [-]: TEST      R19 0        ; if not R19 then PC := 146
143 [-]: JMP       146          ; PC := 146
144 [-]: MOVE      R11 R18      ; R11 := R18
145 [-]: JMP       148          ; PC := 148
146 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 139; R16 := R17 end
147 [-]: JMP       139          ; PC := 139
148 [-]: LOADNIL   R19 R19      ; R19 := nil
149 [-]: GETGLOBAL R20 K3       ; R20 := mSelected
150 [-]: GETTABLE  R20 R20 K4   ; R20 := R20["Element"]
151 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["LoadOutId"]
152 [-]: GETGLOBAL R21 K5       ; R21 := 0x6c97a788
153 [-]: GETTABLE  R21 R21 K30  ; R21 := R21["NUM_NORMAL_LOADOUT_SLOTS"]
154 [-]: LE        0 R21 R20    ; if R21 > R20 then PC := 161
155 [-]: JMP       161          ; PC := 161
156 [-]: GETUPVAL  R20 U4       ; R20 := U4
157 [-]: GETGLOBAL R21 K3       ; R21 := mSelected
158 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Element"]
159 [-]: CALL      R20 2 2      ; R20 := R20(R21)
160 [-]: MOVE      R19 R20      ; R19 := R20
161 [-]: LOADK     R20 0        ; R20 := 0.000000
162 [-]: LOADK     R21 7        ; R21 := 7.000000
163 [-]: LOADK     R22 1        ; R22 := 1.000000
164 [-]: FORPREP   R20 220      ; R20 -= R22; PC := 220
165 [-]: EQ        1 R19 K31    ; if R19 == nil then PC := 170
166 [-]: JMP       170          ; PC := 170
167 [-]: GETTABLE  R24 R19 R23  ; R24 := R19[R23]
168 [-]: TEST      R24 0        ; if not R24 then PC := 220
169 [-]: JMP       220          ; PC := 220
170 [-]: EQ        0 R23 K32    ; if R23 ~= 7.000000 then PC := 178
171 [-]: JMP       178          ; PC := 178
172 [-]: GETUPVAL  R24 U5       ; R24 := U5
173 [-]: GETGLOBAL R25 K3       ; R25 := mSelected
174 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["Element"]
175 [-]: CALL      R24 2 2      ; R24 := R24(R25)
176 [-]: TEST      R24 0        ; if not R24 then PC := 220
177 [-]: JMP       220          ; PC := 220
178 [-]: LOADNIL   R24 R24      ; R24 := nil
179 [-]: LOADBOOL  R25 1 0      ; R25 := true
180 [-]: SELF      R26 R7 K33   ; R27 := R7; R26 := R7[0x697019d0]
181 [-]: MOVE      R28 R23      ; R28 := R23
182 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
183 [-]: TEST      R26 0        ; if not R26 then PC := 190
184 [-]: JMP       190          ; PC := 190
185 [-]: SELF      R26 R7 K34   ; R27 := R7; R26 := R7[0x5d10207d]
186 [-]: MOVE      R28 R23      ; R28 := R23
187 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
188 [-]: MOVE      R24 R26      ; R24 := R26
189 [-]: JMP       212          ; PC := 212
190 [-]: SELF      R26 R5 K35   ; R27 := R5; R26 := R5[0x6199aec6]
191 [-]: MOVE      R28 R23      ; R28 := R23
192 [-]: MOVE      R29 R11      ; R29 := R11
193 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
194 [-]: MOVE      R24 R26      ; R24 := R26
195 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
196 [-]: MOVE      R27 R6       ; R27 := R6
197 [-]: CALL      R26 2 2      ; R26 := R26(R27)
198 [-]: TEST      R26 1        ; if R26 then PC := 212
199 [-]: JMP       212          ; PC := 212
200 [-]: EQ        1 R23 K14    ; if R23 == 6.000000 then PC := 204
201 [-]: JMP       204          ; PC := 204
202 [-]: EQ        0 R23 K32    ; if R23 ~= 7.000000 then PC := 212
203 [-]: JMP       212          ; PC := 212
204 [-]: SELF      R26 R6 K36   ; R27 := R6; R26 := R6[0xa3ef5d65]
205 [-]: MOVE      R28 R24      ; R28 := R24
206 [-]: EQ        1 R23 K32    ; if R23 == 7.000000 then PC := 209
207 [-]: JMP       209          ; PC := 209
208 [-]: LOADBOOL  R29 0 1      ; R29 := false; PC := 209
209 [-]: LOADBOOL  R29 1 0      ; R29 := true
210 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
211 [-]: MOVE      R25 R26      ; R25 := R26
212 [-]: SELF      R26 R8 K37   ; R27 := R8; R26 := R8[0xa3927fe9]
213 [-]: MOVE      R28 R23      ; R28 := R23
214 [-]: MOVE      R29 R24      ; R29 := R24
215 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
216 [-]: SELF      R26 R8 K38   ; R27 := R8; R26 := R8[0xfc5d7158]
217 [-]: MOVE      R28 R23      ; R28 := R23
218 [-]: MOVE      R29 R25      ; R29 := R25
219 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
220 [-]: FORLOOP   R20 165      ; R20 += R22; if R20 <= R21 then begin PC := 165; R23 := R20 end
221 [-]: GETGLOBAL R26 K3       ; R26 := mSelected
222 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["Element"]
223 [-]: GETTABLE  R26 R26 K16  ; R26 := R26["Customization"]
224 [-]: SELF      R26 R26 K39  ; R27 := R26; R26 := R26[0x199edf6e]
225 [-]: LOADK     R28 0        ; R28 := 0.000000
226 [-]: MOVE      R29 R8       ; R29 := R8
227 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
228 [-]: GETGLOBAL R26 K3       ; R26 := mSelected
229 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["Element"]
230 [-]: GETTABLE  R26 R26 K40  ; R26 := R26["EquippedItem"]
231 [-]: SELF      R26 R26 K41  ; R27 := R26; R26 := R26[0xaa041663]
232 [-]: GETGLOBAL R28 K3       ; R28 := mSelected
233 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["Element"]
234 [-]: GETTABLE  R28 R28 K16  ; R28 := R28["Customization"]
235 [-]: GETGLOBAL R29 K3       ; R29 := mSelected
236 [-]: GETTABLE  R29 R29 K4   ; R29 := R29["Element"]
237 [-]: GETTABLE  R29 R29 K23  ; R29 := R29["mCustSlot"]
238 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
239 [-]: GETGLOBAL R26 K1       ; R26 := mInventory
240 [-]: SELF      R26 R26 K42  ; R27 := R26; R26 := R26[0x9b051033]
241 [-]: GETGLOBAL R28 K3       ; R28 := mSelected
242 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["Element"]
243 [-]: GETTABLE  R28 R28 K43  ; R28 := R28["UID"]
244 [-]: GETGLOBAL R29 K3       ; R29 := mSelected
245 [-]: GETTABLE  R29 R29 K4   ; R29 := R29["Element"]
246 [-]: GETTABLE  R29 R29 K23  ; R29 := R29["mCustSlot"]
247 [-]: GETGLOBAL R30 K3       ; R30 := mSelected
248 [-]: GETTABLE  R30 R30 K4   ; R30 := R30["Element"]
249 [-]: GETTABLE  R30 R30 K16  ; R30 := R30["Customization"]
250 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
251 [-]: GETUPVAL  R26 U3       ; R26 := U3
252 [-]: GETGLOBAL R27 K3       ; R27 := mSelected
253 [-]: GETTABLE  R27 R27 K4   ; R27 := R27["Element"]
254 [-]: GETTABLE  R27 R27 K8   ; R27 := R27["LoadOutType"]
255 [-]: GETGLOBAL R28 K3       ; R28 := mSelected
256 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["Element"]
257 [-]: GETTABLE  R28 R28 K10  ; R28 := R28["LoadOutId"]
258 [-]: CALL      R26 3 3      ; R26,R27 := R26(R27,R28)
259 [-]: LOADK     R28 1        ; R28 := 1.000000
260 [-]: LEN       R29 R26      ; R29 := # R26
261 [-]: LOADK     R30 1        ; R30 := 1.000000
262 [-]: FORPREP   R28 281      ; R28 -= R30; PC := 281
263 [-]: GETTABLE  R32 R26 R31  ; R32 := R26[R31]
264 [-]: GETGLOBAL R33 K3       ; R33 := mSelected
265 [-]: GETTABLE  R33 R33 K4   ; R33 := R33["Element"]
266 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["Customization"]
267 [-]: SELF      R33 R33 K44  ; R34 := R33; R33 := R33[0x61b59a83]
268 [-]: MOVE      R35 R32      ; R35 := R32
269 [-]: MOVE      R36 R27      ; R36 := R27
270 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
271 [-]: GETGLOBAL R33 K0       ; R33 := 0x7b998233
272 [-]: MOVE      R34 R6       ; R34 := R6
273 [-]: CALL      R33 2 2      ; R33 := R33(R34)
274 [-]: TEST      R33 1        ; if R33 then PC := 281
275 [-]: JMP       281          ; PC := 281
276 [-]: SELF      R33 R6 K45   ; R34 := R6; R33 := R6[0x22d4e696]
277 [-]: GETGLOBAL R35 K3       ; R35 := mSelected
278 [-]: GETTABLE  R35 R35 K4   ; R35 := R35["Element"]
279 [-]: GETTABLE  R35 R35 K16  ; R35 := R35["Customization"]
280 [-]: CALL      R33 3 1      ; R33(R34,R35)
281 [-]: FORLOOP   R28 263      ; R28 += R30; if R28 <= R29 then begin PC := 263; R31 := R28 end
282 [-]: GETUPVAL  R33 U6       ; R33 := U6
283 [-]: CALL      R33 1 1      ; R33()
284 [-]: GETGLOBAL R33 K46      ; R33 := mLists
285 [-]: GETTABLE  R33 R33 K47  ; R33 := R33["mCosmeticsList"]
286 [-]: SELF      R33 R33 K48  ; R34 := R33; R33 := R33[0x71e9ac81]
287 [-]: CALL      R33 2 1      ; R33(R34)
288 [-]: GETUPVAL  R33 U7       ; R33 := U7
289 [-]: GETTABLE  R33 R33 K49  ; R33 := R33[0xf6edf3bb]
290 [-]: CALL      R33 1 1      ; R33()
291 [-]: GETUPVAL  R33 U1       ; R33 := U1
292 [-]: GETTABLE  R33 R33 K50  ; R33 := R33[0x659d451f]
293 [-]: GETGLOBAL R34 K51      ; R34 := 0x0032441c
294 [-]: GETTABLE  R34 R34 K52  ; R34 := R34["UISound_ButtonSelect"]
295 [-]: CALL      R33 2 1      ; R33(R34)
296 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 9641
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mChildMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K1        ; R0 := mChildMovie
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x32302b4a]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K3 K4     ; R0["MouseDown"] := false
 11 [-]: GETGLOBAL R0 K5        ; R0 := 0x2d0fad09
 12 [-]: LOADK     R1 K6        ; R1 := "Lotus.Interface.PhotoboothUtilities"
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETTABLE  R1 R0 K7     ; R1 := R0[0x67df6022]
 15 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 16 [-]: GETGLOBAL R3 K9        ; R3 := mTimerTable
 17 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mTimerMgr"]
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 20 [-]: SETGLOBAL R1 K1        ; mChildMovie := R1
 21 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 9651
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
  9 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Element"]
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["LoadOutType"]
 11 [-]: EQ        0 R0 K5      ; if R0 ~= 0.000000 then PC := 71
 12 [-]: JMP       71           ; PC := 71
 13 [-]: GETGLOBAL R0 K1        ; R0 := mSelected
 14 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Element"]
 15 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["LoadOutId"]
 16 [-]: EQ        0 R0 K5      ; if R0 ~= 0.000000 then PC := 71
 17 [-]: JMP       71           ; PC := 71
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 20 [-]: LOADBOOL  R2 0 0       ; R2 := false
 21 [-]: GETGLOBAL R3 K7        ; R3 := mLists
 22 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCosmeticsList"]
 23 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0xea061e98]
 24 [-]: CLOSURE   R5 0         ; R5 := closure(Function #148.1)
 25 [-]: MOVE      R0 R1        ; R0 := R1
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: LOADK     R3 1         ; R3 := 1.000000
 28 [-]: LEN       R4 R0        ; R4 := # R0
 29 [-]: LOADK     R5 1         ; R5 := 1.000000
 30 [-]: FORPREP   R3 51        ; R3 -= R5; PC := 51
 31 [-]: GETTABLE  R7 R0 R6     ; R7 := R0[R6]
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["red"]
 33 [-]: GETTABLE  R8 R1 R6     ; R8 := R1[R6]
 34 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["red"]
 35 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 49
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETTABLE  R7 R0 R6     ; R7 := R0[R6]
 38 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["green"]
 39 [-]: GETTABLE  R8 R1 R6     ; R8 := R1[R6]
 40 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["green"]
 41 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETTABLE  R7 R0 R6     ; R7 := R0[R6]
 44 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["blue"]
 45 [-]: GETTABLE  R8 R1 R6     ; R8 := R1[R6]
 46 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["blue"]
 47 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 51
 48 [-]: JMP       51           ; PC := 51
 49 [-]: LOADBOOL  R2 1 0       ; R2 := true
 50 [-]: JMP       52           ; PC := 52
 51 [-]: FORLOOP   R3 31        ; R3 += R5; if R3 <= R4 then begin PC := 31; R6 := R3 end
 52 [-]: TEST      R2 0         ; if not R2 then PC := 70
 53 [-]: JMP       70           ; PC := 70
 54 [-]: GETGLOBAL R7 K13       ; R7 := 0x89326c93
 55 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7[0xded7d5cd]
 56 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 57 [-]: GETTABLE  R7 R7 K15    ; R7 := R7[1.000000]
 58 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 59 [-]: MOVE      R9 R7        ; R9 := R7
 60 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 61 [-]: TEST      R8 1         ; if R8 then PC := 70
 62 [-]: JMP       70           ; PC := 70
 63 [-]: GETGLOBAL R8 K16       ; R8 := 0xba7dfcd2
 64 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0xf056b179]
 65 [-]: MOVE      R10 R7       ; R10 := R7
 66 [-]: GETGLOBAL R11 K18      ; R11 := 0x0469f296
 67 [-]: LOADK     R12 K19      ; R12 := "SUIT_COLOR_CHANGED"
 68 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 69 [-]: CALL      R8 0 1       ; R8(R9,...)
 70 [-]: CLOSE     R0           ; SAVE R0,...
 71 [-]: GETGLOBAL R0 K20       ; R0 := _T
 72 [-]: SETTABLE  R0 K21 K22   ; R0["LoadoutSaveRequired"] := true
 73 [-]: GETUPVAL  R0 U1        ; R0 := U1
 74 [-]: GETGLOBAL R1 K1        ; R1 := mSelected
 75 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Element"]
 76 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["LoadOutType"]
 77 [-]: GETGLOBAL R2 K1        ; R2 := mSelected
 78 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Element"]
 79 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["LoadOutId"]
 80 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 81 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 82 [-]: GETGLOBAL R2 K23       ; R2 := 0x25d99d89
 83 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 84 [-]: TEST      R1 1         ; if R1 then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 87 [-]: MOVE      R2 R0        ; R2 := R0
 88 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 89 [-]: TEST      R1 1         ; if R1 then PC := 102
 90 [-]: JMP       102          ; PC := 102
 91 [-]: GETGLOBAL R1 K23       ; R1 := 0x25d99d89
 92 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0x400b84a1]
 93 [-]: GETGLOBAL R3 K1        ; R3 := mSelected
 94 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Element"]
 95 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["LoadOutType"]
 96 [-]: GETGLOBAL R4 K25       ; R4 := mCurrentLoadout
 97 [-]: GETGLOBAL R5 K1        ; R5 := mSelected
 98 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Element"]
 99 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["LoadOutType"]
100 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
101 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
102 [-]: GETGLOBAL R1 K20       ; R1 := _T
103 [-]: GETTABLE  R1 R1 K26    ; R1 := R1["MenuSuitAvatar"]
104 [-]: GETUPVAL  R2 U2        ; R2 := U2
105 [-]: GETUPVAL  R3 U3        ; R3 := U3
106 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["Current"]
107 [-]: EQ        1 R3 K28     ; if R3 == 2.000000 then PC := 110
108 [-]: JMP       110          ; PC := 110
109 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 110
110 [-]: LOADBOOL  R3 1 0       ; R3 := true
111 [-]: CALL      R2 2 1       ; R2(R3)
112 [-]: GETUPVAL  R2 U4        ; R2 := U4
113 [-]: CALL      R2 1 2       ; R2 := R2()
114 [-]: TEST      R2 1         ; if R2 then PC := 140
115 [-]: JMP       140          ; PC := 140
116 [-]: GETGLOBAL R2 K20       ; R2 := _T
117 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["mSentinelMode"]
118 [-]: TEST      R2 0         ; if not R2 then PC := 140
119 [-]: JMP       140          ; PC := 140
120 [-]: GETGLOBAL R2 K23       ; R2 := 0x25d99d89
121 [-]: SELF      R2 R2 K30    ; R3 := R2; R2 := R2[0x3c6b0324]
122 [-]: CALL      R2 2 2       ; R2 := R2(R3)
123 [-]: TEST      R2 1         ; if R2 then PC := 130
124 [-]: JMP       130          ; PC := 130
125 [-]: GETGLOBAL R2 K23       ; R2 := 0x25d99d89
126 [-]: SELF      R2 R2 K31    ; R3 := R2; R2 := R2[0x9f91f49d]
127 [-]: CALL      R2 2 2       ; R2 := R2(R3)
128 [-]: TEST      R2 0         ; if not R2 then PC := 140
129 [-]: JMP       140          ; PC := 140
130 [-]: LOADK     R2 1         ; R2 := 1.000000
131 [-]: SETUPVAL  R2 U5        ; U82 := R5
132 [-]: GETUPVAL  R2 U6        ; R2 := U6
133 [-]: GETTABLE  R2 R2 K32    ; R2 := R2[0xd4c67576]
134 [-]: GETGLOBAL R3 K33       ; R3 := 0xae91e43b
135 [-]: GETGLOBAL R4 K20       ; R4 := _T
136 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["MenuSuitAvatar"]
137 [-]: GETUPVAL  R5 U7        ; R5 := U7
138 [-]: GETTABLE  R5 R5 K34    ; R5 := R5["MouseDown"]
139 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
140 [-]: GETUPVAL  R2 U8        ; R2 := U8
141 [-]: GETUPVAL  R3 U9        ; R3 := U9
142 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["FRONT"]
143 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: GETUPVAL  R2 U8        ; R2 := U8
146 [-]: GETUPVAL  R3 U9        ; R3 := U9
147 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["BACK"]
148 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 153
149 [-]: JMP       153          ; PC := 153
150 [-]: GETUPVAL  R2 U10       ; R2 := U10
151 [-]: CALL      R2 1 1       ; R2()
152 [-]: JMP       171          ; PC := 171
153 [-]: GETGLOBAL R2 K7        ; R2 := mLists
154 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mCosmeticsList"]
155 [-]: GETTABLE  R2 R2 K37    ; R2 := R2["mCurrLevel"]
156 [-]: GETGLOBAL R3 K7        ; R3 := mLists
157 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCosmeticsList"]
158 [-]: GETTABLE  R3 R3 K38    ; R3 := R3["HOLSTER_STYLE"]
159 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 169
160 [-]: JMP       169          ; PC := 169
161 [-]: GETGLOBAL R2 K7        ; R2 := mLists
162 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mCosmeticsList"]
163 [-]: GETTABLE  R2 R2 K37    ; R2 := R2["mCurrLevel"]
164 [-]: GETGLOBAL R3 K7        ; R3 := mLists
165 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCosmeticsList"]
166 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["HOLSTER_CUSTOMIZATION"]
167 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 171
168 [-]: JMP       171          ; PC := 171
169 [-]: GETUPVAL  R2 U11       ; R2 := U11
170 [-]: CALL      R2 1 1       ; R2()
171 [-]: GETUPVAL  R2 U12       ; R2 := U12
172 [-]: MOVE      R3 R1        ; R3 := R1
173 [-]: GETGLOBAL R4 K1        ; R4 := mSelected
174 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Element"]
175 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["LoadOutType"]
176 [-]: GETGLOBAL R5 K1        ; R5 := mSelected
177 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Element"]
178 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["LoadOutId"]
179 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
180 [-]: RETURN    R0 1         ; return 


; Function #148.1:
;
; Name:            
; Defined at line: 9663
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Attribute"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["Color"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0x33bdd652
  6 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x23d5322f]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETGLOBAL R4 K5        ; R4 := 0x60130201
  9 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["red"]
 10 [-]: GETTABLE  R6 R1 K7     ; R6 := R1["green"]
 11 [-]: GETTABLE  R7 R1 K8     ; R7 := R1["blue"]
 12 [-]: GETTABLE  R8 R1 K9     ; R8 := R1["alpha"]
 13 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 14 [-]: CALL      R2 0 1       ; R2(R3,...)
 15 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["Attribute2"]
 16 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["Color2"]
 19 [-]: GETGLOBAL R3 K3        ; R3 := 0x33bdd652
 20 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x23d5322f]
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: GETGLOBAL R5 K5        ; R5 := 0x60130201
 23 [-]: GETTABLE  R6 R2 K6     ; R6 := R2["red"]
 24 [-]: GETTABLE  R7 R2 K7     ; R7 := R2["green"]
 25 [-]: GETTABLE  R8 R2 K8     ; R8 := R2["blue"]
 26 [-]: GETTABLE  R9 R2 K9     ; R9 := R2["alpha"]
 27 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 28 [-]: CALL      R3 0 1       ; R3(R4,...)
 29 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 9715
; #Upvalues:       25
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := mLists
  5 [-]: GETTABLE  R2 R0 K4     ; R2 := R0[0x9383bc56]
  6 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
  7 [-]: LOADK     R4 K6        ; R4 := "CosmeticsMenu.CosmeticsMenuItem"
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: SETTABLE  R1 K3 R2     ; R1["mCosmeticsList"] := R2
 10 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 11 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 12 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 13 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x91a24e4b]
 14 [-]: LOADK     R4 K9        ; R4 := "CosmeticsMenu"
 15 [-]: LOADK     R5 1         ; R5 := 1.000000
 16 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 17 [-]: SETTABLE  R1 K7 R2     ; R1["mInitListYPos"] := R2
 18 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 19 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 20 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 21 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x91a24e4b]
 22 [-]: LOADK     R4 K9        ; R4 := "CosmeticsMenu"
 23 [-]: LOADK     R5 0         ; R5 := 0.000000
 24 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 25 [-]: SETTABLE  R1 K10 R2    ; R1["mInitListXPos"] := R2
 26 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 27 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 28 [-]: SETTABLE  R1 K11 K12   ; R1["mElementWidth"] := 430.000000
 29 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 30 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 31 [-]: GETGLOBAL R2 K2        ; R2 := mLists
 32 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
 33 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["mInitialY"]
 34 [-]: SETTABLE  R1 K13 R2    ; R1["mOrigY"] := R2
 35 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 36 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 37 [-]: SETTABLE  R1 K15 K16   ; R1["mForcedVerticalSeparation"] := 40.000000
 38 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 39 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 40 [-]: SETTABLE  R1 K17 K18   ; R1["mTransitionInDeltaY"] := 0.000000
 41 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 42 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 43 [-]: SETTABLE  R1 K19 K18   ; R1["mTransitionOutDeltaY"] := 0.000000
 44 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 45 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 46 [-]: SETTABLE  R1 K20 K21   ; R1["mInitialDepth"] := 3000.000000
 47 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 48 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 49 [-]: SETTABLE  R1 K22 K23   ; R1["mWrapAroundNavigation"] := false
 50 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 51 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 52 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 53 [-]: LOADK     R3 K25       ; R3 := "CosmeticsItemPressed"
 54 [-]: LOADK     R4 K26       ; R4 := "CosmeticsItemFocused"
 55 [-]: LOADK     R5 K27       ; R5 := "CosmeticsItemUnfocused"
 56 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 57 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 58 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 59 [-]: SETTABLE  R1 K28 K18   ; R1["NONE"] := 0.000000
 60 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 61 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 62 [-]: SETTABLE  R1 K29 K30   ; R1["DEFAULT"] := 1.000000
 63 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 64 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 65 [-]: SETTABLE  R1 K31 K32   ; R1["ATTACHMENTS"] := 2.000000
 66 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 67 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 68 [-]: SETTABLE  R1 K33 K34   ; R1["SYANDANAS"] := 3.000000
 69 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 70 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 71 [-]: SETTABLE  R1 K35 K36   ; R1["BADGES"] := 4.000000
 72 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 73 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 74 [-]: SETTABLE  R1 K37 K38   ; R1["FRONTSIGIL"] := 5.000000
 75 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 76 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 77 [-]: SETTABLE  R1 K39 K40   ; R1["BACKSIGIL"] := 6.000000
 78 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 79 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 80 [-]: SETTABLE  R1 K41 K42   ; R1["HOLSTER_STYLE"] := 7.000000
 81 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 82 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 83 [-]: SETTABLE  R1 K43 K44   ; R1["HOLSTER_CUSTOMIZATION"] := 8.000000
 84 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 85 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 86 [-]: SETTABLE  R1 K45 K46   ; R1["mLastFocused"] := nil
 87 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 88 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 89 [-]: GETGLOBAL R2 K2        ; R2 := mLists
 90 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
 91 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["DEFAULT"]
 92 [-]: SETTABLE  R1 K47 R2    ; R1["mCurrLevel"] := R2
 93 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 94 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 95 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 96 [-]: SETTABLE  R1 K48 R2    ; R1["mLevels"] := R2
 97 [-]: GETGLOBAL R1 K2        ; R1 := mLists
 98 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
 99 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
100 [-]: GETGLOBAL R2 K2        ; R2 := mLists
101 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
102 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["DEFAULT"]
103 [-]: NEWTABLE  R3 0 0       ; R3 := {}
104 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
105 [-]: GETGLOBAL R1 K2        ; R1 := mLists
106 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
107 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
108 [-]: GETGLOBAL R2 K2        ; R2 := mLists
109 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
110 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["ATTACHMENTS"]
111 [-]: NEWTABLE  R3 0 2       ; R3 := {}
112 [-]: SETTABLE  R3 K49 K50   ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
113 [-]: GETGLOBAL R4 K2        ; R4 := mLists
114 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mCosmeticsList"]
115 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["DEFAULT"]
116 [-]: SETTABLE  R3 K51 R4    ; R3["mParentId"] := R4
117 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
118 [-]: GETGLOBAL R1 K2        ; R1 := mLists
119 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
120 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
121 [-]: GETGLOBAL R2 K2        ; R2 := mLists
122 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
123 [-]: GETTABLE  R2 R2 K33    ; R2 := R2["SYANDANAS"]
124 [-]: NEWTABLE  R3 0 2       ; R3 := {}
125 [-]: SETTABLE  R3 K49 K52   ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_Neckwear"
126 [-]: GETGLOBAL R4 K2        ; R4 := mLists
127 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mCosmeticsList"]
128 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["DEFAULT"]
129 [-]: SETTABLE  R3 K51 R4    ; R3["mParentId"] := R4
130 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
131 [-]: GETGLOBAL R1 K2        ; R1 := mLists
132 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
133 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
134 [-]: GETGLOBAL R2 K2        ; R2 := mLists
135 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
136 [-]: GETTABLE  R2 R2 K35    ; R2 := R2["BADGES"]
137 [-]: NEWTABLE  R3 0 3       ; R3 := {}
138 [-]: SETTABLE  R3 K49 K53   ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_Regalia"
139 [-]: GETGLOBAL R4 K2        ; R4 := mLists
140 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mCosmeticsList"]
141 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["DEFAULT"]
142 [-]: SETTABLE  R3 K51 R4    ; R3["mParentId"] := R4
143 [-]: NEWTABLE  R4 0 1       ; R4 := {}
144 [-]: NEWTABLE  R5 0 1       ; R5 := {}
145 [-]: GETGLOBAL R6 K2        ; R6 := mLists
146 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["mCosmeticsList"]
147 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["NONE"]
148 [-]: SETTABLE  R5 K18 R6    ; R5[0.000000] := R6
149 [-]: SETTABLE  R4 K40 R5    ; R4[6.000000] := R5
150 [-]: SETTABLE  R3 K54 R4    ; R3["mAltParentId"] := R4
151 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
152 [-]: GETGLOBAL R1 K2        ; R1 := mLists
153 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
154 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
155 [-]: GETGLOBAL R2 K2        ; R2 := mLists
156 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
157 [-]: GETTABLE  R2 R2 K37    ; R2 := R2["FRONTSIGIL"]
158 [-]: NEWTABLE  R3 0 2       ; R3 := {}
159 [-]: SETTABLE  R3 K49 K56   ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_FrontSigil"
160 [-]: GETGLOBAL R4 K2        ; R4 := mLists
161 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mCosmeticsList"]
162 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["BADGES"]
163 [-]: SETTABLE  R3 K51 R4    ; R3["mParentId"] := R4
164 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
165 [-]: GETGLOBAL R1 K2        ; R1 := mLists
166 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
167 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
168 [-]: GETGLOBAL R2 K2        ; R2 := mLists
169 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
170 [-]: GETTABLE  R2 R2 K39    ; R2 := R2["BACKSIGIL"]
171 [-]: NEWTABLE  R3 0 4       ; R3 := {}
172 [-]: SETTABLE  R3 K49 K57   ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_BackSigil"
173 [-]: GETGLOBAL R4 K2        ; R4 := mLists
174 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mCosmeticsList"]
175 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["BADGES"]
176 [-]: SETTABLE  R3 K51 R4    ; R3["mParentId"] := R4
177 [-]: NEWTABLE  R4 0 1       ; R4 := {}
178 [-]: NEWTABLE  R5 0 1       ; R5 := {}
179 [-]: SETTABLE  R5 K18 K59   ; R5[0.000000] := "/Lotus/Language/Hoverboards/CategoryHoverboardSticker"
180 [-]: SETTABLE  R4 K40 R5    ; R4[6.000000] := R5
181 [-]: SETTABLE  R3 K58 R4    ; R3["mAltTitles"] := R4
182 [-]: NEWTABLE  R4 0 1       ; R4 := {}
183 [-]: NEWTABLE  R5 0 1       ; R5 := {}
184 [-]: GETGLOBAL R6 K2        ; R6 := mLists
185 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["mCosmeticsList"]
186 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["DEFAULT"]
187 [-]: SETTABLE  R5 K18 R6    ; R5[0.000000] := R6
188 [-]: SETTABLE  R4 K40 R5    ; R4[6.000000] := R5
189 [-]: SETTABLE  R3 K54 R4    ; R3["mAltParentId"] := R4
190 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
191 [-]: GETGLOBAL R1 K2        ; R1 := mLists
192 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
193 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
194 [-]: GETGLOBAL R2 K2        ; R2 := mLists
195 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
196 [-]: GETTABLE  R2 R2 K41    ; R2 := R2["HOLSTER_STYLE"]
197 [-]: NEWTABLE  R3 0 2       ; R3 := {}
198 [-]: SETTABLE  R3 K49 K60   ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
199 [-]: GETGLOBAL R4 K2        ; R4 := mLists
200 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mCosmeticsList"]
201 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["DEFAULT"]
202 [-]: SETTABLE  R3 K51 R4    ; R3["mParentId"] := R4
203 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
204 [-]: GETGLOBAL R1 K2        ; R1 := mLists
205 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
206 [-]: GETTABLE  R1 R1 K48    ; R1 := R1["mLevels"]
207 [-]: GETGLOBAL R2 K2        ; R2 := mLists
208 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
209 [-]: GETTABLE  R2 R2 K43    ; R2 := R2["HOLSTER_CUSTOMIZATION"]
210 [-]: NEWTABLE  R3 0 2       ; R3 := {}
211 [-]: SETTABLE  R3 K49 K60   ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
212 [-]: GETGLOBAL R4 K2        ; R4 := mLists
213 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mCosmeticsList"]
214 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["HOLSTER_STYLE"]
215 [-]: SETTABLE  R3 K51 R4    ; R3["mParentId"] := R4
216 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
217 [-]: GETGLOBAL R1 K2        ; R1 := mLists
218 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
219 [-]: NEWTABLE  R2 15 0      ; R2 := {}
220 [-]: LOADK     R3 K62       ; R3 := "ValueSelector.Slider"
221 [-]: LOADK     R4 K63       ; R4 := "ValueSelector.Front"
222 [-]: LOADK     R5 K64       ; R5 := "ValueSelector.Back"
223 [-]: LOADK     R6 K65       ; R6 := "ValueSelector.LeftArrow"
224 [-]: LOADK     R7 K66       ; R7 := "ValueSelector.RightArrow"
225 [-]: LOADK     R8 K67       ; R8 := "UndoBtn.CostBg"
226 [-]: LOADK     R9 K68       ; R9 := "UndoBtn.Bg"
227 [-]: LOADK     R10 K69      ; R10 := "UndoBtn.Icon"
228 [-]: LOADK     R11 K70      ; R11 := "MiddleLine"
229 [-]: LOADK     R12 K71      ; R12 := "checkbox"
230 [-]: LOADK     R13 K72      ; R13 := "CopyColors"
231 [-]: LOADK     R14 K73      ; R14 := "DefaultColors"
232 [-]: LOADK     R15 K74      ; R15 := "RandomColors"
233 [-]: LOADK     R16 K75      ; R16 := "Arrow"
234 [-]: LOADK     R17 K76      ; R17 := "Bg"
235 [-]: SETLIST   R2 15 1      ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 15
236 [-]: SETTABLE  R1 K61 R2    ; R1["mVisClips"] := R2
237 [-]: GETGLOBAL R1 K2        ; R1 := mLists
238 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
239 [-]: NEWTABLE  R2 7 0       ; R2 := {}
240 [-]: LOADK     R3 K78       ; R3 := "BottomLine"
241 [-]: LOADK     R4 K79       ; R4 := "TopTitle.LineRightCap"
242 [-]: LOADK     R5 K80       ; R5 := "TopTitle.LineLeftCap"
243 [-]: LOADK     R6 K81       ; R6 := "TopTitle.LineRight"
244 [-]: LOADK     R7 K82       ; R7 := "TopTitle.LineLeft"
245 [-]: LOADK     R8 K83       ; R8 := "TopTitle.LineRightOuterCap"
246 [-]: LOADK     R9 K84       ; R9 := "TopTitle.LineLeftOuterCap"
247 [-]: SETLIST   R2 7 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 7
248 [-]: SETTABLE  R1 K77 R2    ; R1["mVisNoAAClips"] := R2
249 [-]: GETGLOBAL R1 K2        ; R1 := mLists
250 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
251 [-]: NEWTABLE  R2 4 0       ; R2 := {}
252 [-]: LOADK     R3 K86       ; R3 := "UndoBtn.Cost"
253 [-]: LOADK     R4 K87       ; R4 := "TotalColorCost"
254 [-]: LOADK     R5 K88       ; R5 := "Label"
255 [-]: LOADK     R6 K89       ; R6 := "TopTitle.Label"
256 [-]: SETLIST   R2 4 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
257 [-]: SETTABLE  R1 K85 R2    ; R1["mVisTextClips"] := R2
258 [-]: GETGLOBAL R1 K2        ; R1 := mLists
259 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
260 [-]: CLOSURE   R2 0         ; R2 := closure(Function #149.1)
261 [-]: GETUPVAL  R0 U0        ; R0 := U0
262 [-]: GETUPVAL  R0 U1        ; R0 := U1
263 [-]: SETTABLE  R1 K90 R2    ; R1["GoToParent"] := R2
264 [-]: GETGLOBAL R1 K2        ; R1 := mLists
265 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
266 [-]: CLOSURE   R2 1         ; R2 := closure(Function #149.2)
267 [-]: GETUPVAL  R0 U2        ; R0 := U2
268 [-]: SETTABLE  R1 K91 R2    ; R1["AddLevelTags"] := R2
269 [-]: GETGLOBAL R1 K2        ; R1 := mLists
270 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
271 [-]: CLOSURE   R2 2         ; R2 := closure(Function #149.3)
272 [-]: GETUPVAL  R0 U3        ; R0 := U3
273 [-]: SETTABLE  R1 K92 R2    ; R1["mOnFocusedCallback"] := R2
274 [-]: GETGLOBAL R1 K2        ; R1 := mLists
275 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
276 [-]: CLOSURE   R2 3         ; R2 := closure(Function #149.4)
277 [-]: SETTABLE  R1 K93 R2    ; R1["mOnUnfocusedCallback"] := R2
278 [-]: GETGLOBAL R1 K2        ; R1 := mLists
279 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
280 [-]: CLOSURE   R2 4         ; R2 := closure(Function #149.5)
281 [-]: GETUPVAL  R0 U4        ; R0 := U4
282 [-]: GETUPVAL  R0 U5        ; R0 := U5
283 [-]: GETUPVAL  R0 U3        ; R0 := U3
284 [-]: GETUPVAL  R0 U6        ; R0 := U6
285 [-]: GETUPVAL  R0 U7        ; R0 := U7
286 [-]: GETUPVAL  R0 U8        ; R0 := U8
287 [-]: GETUPVAL  R0 U9        ; R0 := U9
288 [-]: GETUPVAL  R0 U10       ; R0 := U10
289 [-]: GETUPVAL  R0 U11       ; R0 := U11
290 [-]: GETUPVAL  R0 U12       ; R0 := U12
291 [-]: GETUPVAL  R0 U13       ; R0 := U13
292 [-]: GETUPVAL  R0 U0        ; R0 := U0
293 [-]: GETUPVAL  R0 U1        ; R0 := U1
294 [-]: GETUPVAL  R0 U14       ; R0 := U14
295 [-]: GETUPVAL  R0 U15       ; R0 := U15
296 [-]: GETUPVAL  R0 U16       ; R0 := U16
297 [-]: GETUPVAL  R0 U17       ; R0 := U17
298 [-]: GETUPVAL  R0 U18       ; R0 := U18
299 [-]: SETTABLE  R1 K94 R2    ; R1["mOnSelectedCallback"] := R2
300 [-]: GETGLOBAL R1 K2        ; R1 := mLists
301 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
302 [-]: CLOSURE   R2 5         ; R2 := closure(Function #149.6)
303 [-]: SETTABLE  R1 K95 R2    ; R1["mOnRemovedCallback"] := R2
304 [-]: GETGLOBAL R1 K2        ; R1 := mLists
305 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
306 [-]: CLOSURE   R2 6         ; R2 := closure(Function #149.7)
307 [-]: GETUPVAL  R0 U19       ; R0 := U19
308 [-]: GETUPVAL  R0 U20       ; R0 := U20
309 [-]: GETUPVAL  R0 U21       ; R0 := U21
310 [-]: GETUPVAL  R0 U22       ; R0 := U22
311 [-]: GETUPVAL  R0 U3        ; R0 := U3
312 [-]: GETUPVAL  R0 U12       ; R0 := U12
313 [-]: MOVE      R0 R0        ; R0 := R0
314 [-]: GETUPVAL  R0 U23       ; R0 := U23
315 [-]: GETUPVAL  R0 U24       ; R0 := U24
316 [-]: SETTABLE  R1 K96 R2    ; R1["mElementDrawCallback"] := R2
317 [-]: GETGLOBAL R1 K2        ; R1 := mLists
318 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
319 [-]: CLOSURE   R2 7         ; R2 := closure(Function #149.8)
320 [-]: SETTABLE  R1 K97 R2    ; R1["SetupPreInterpolationValues"] := R2
321 [-]: GETGLOBAL R1 K2        ; R1 := mLists
322 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
323 [-]: CLOSURE   R2 8         ; R2 := closure(Function #149.9)
324 [-]: SETTABLE  R1 K98 R2    ; R1["GetInterpolationProperties"] := R2
325 [-]: GETGLOBAL R1 K2        ; R1 := mLists
326 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
327 [-]: GETGLOBAL R2 K2        ; R2 := mLists
328 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mCosmeticsList"]
329 [-]: GETTABLE  R2 R2 K100   ; R2 := R2["CalculateY"]
330 [-]: SETTABLE  R1 K99 R2    ; R1["_CosmeticsList_CalculateY"] := R2
331 [-]: GETGLOBAL R1 K2        ; R1 := mLists
332 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
333 [-]: CLOSURE   R2 9         ; R2 := closure(Function #149.10)
334 [-]: SETTABLE  R1 K100 R2   ; R1["CalculateY"] := R2
335 [-]: GETGLOBAL R1 K0        ; R1 := 0x2d0fad09
336 [-]: LOADK     R2 K101      ; R2 := "EE.Interface.Components.ScrollBar"
337 [-]: CALL      R1 2 2       ; R1 := R1(R2)
338 [-]: GETGLOBAL R2 K2        ; R2 := mLists
339 [-]: GETTABLE  R3 R1 K103   ; R3 := R1[0x3b3ea08c]
340 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
341 [-]: LOADK     R5 K104      ; R5 := "CosmeticsMenuScrollBar"
342 [-]: LOADK     R6 720       ; R6 := 720.000000
343 [-]: LOADK     R7 0         ; R7 := 0.500000
344 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
345 [-]: SETTABLE  R2 K102 R3   ; R2["mCosmeticsScrollBar"] := R3
346 [-]: GETGLOBAL R2 K2        ; R2 := mLists
347 [-]: GETTABLE  R2 R2 K102   ; R2 := R2["mCosmeticsScrollBar"]
348 [-]: CLOSURE   R3 10        ; R3 := closure(Function #149.11)
349 [-]: SETTABLE  R2 K105 R3   ; R2["GetMenuYAtScroll"] := R3
350 [-]: GETGLOBAL R2 K2        ; R2 := mLists
351 [-]: GETTABLE  R2 R2 K102   ; R2 := R2["mCosmeticsScrollBar"]
352 [-]: CLOSURE   R3 11        ; R3 := closure(Function #149.12)
353 [-]: SETTABLE  R2 K106 R3   ; R2["mScrollValueChangedCallback"] := R3
354 [-]: GETGLOBAL R2 K2        ; R2 := mLists
355 [-]: GETTABLE  R2 R2 K102   ; R2 := R2["mCosmeticsScrollBar"]
356 [-]: GETGLOBAL R3 K2        ; R3 := mLists
357 [-]: GETTABLE  R3 R3 K102   ; R3 := R3["mCosmeticsScrollBar"]
358 [-]: GETTABLE  R3 R3 K108   ; R3 := R3["mHeight"]
359 [-]: SETTABLE  R2 K107 R3   ; R2["mInitHeight"] := R3
360 [-]: GETGLOBAL R2 K2        ; R2 := mLists
361 [-]: GETTABLE  R2 R2 K102   ; R2 := R2["mCosmeticsScrollBar"]
362 [-]: SETTABLE  R2 K109 K110 ; R2["mEnableSmoothScroll"] := true
363 [-]: GETGLOBAL R2 K2        ; R2 := mLists
364 [-]: GETTABLE  R2 R2 K102   ; R2 := R2["mCosmeticsScrollBar"]
365 [-]: SELF      R2 R2 K111   ; R3 := R2; R2 := R2[0xe91c55ec]
366 [-]: CALL      R2 2 1       ; R2(R3)
367 [-]: GETGLOBAL R2 K2        ; R2 := mLists
368 [-]: GETTABLE  R2 R2 K102   ; R2 := R2["mCosmeticsScrollBar"]
369 [-]: SELF      R2 R2 K112   ; R3 := R2; R2 := R2[0x687ae094]
370 [-]: CALL      R2 2 1       ; R2(R3)
371 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
372 [-]: SELF      R2 R2 K113   ; R3 := R2; R2 := R2[0xaade900e]
373 [-]: LOADK     R4 K104      ; R4 := "CosmeticsMenuScrollBar"
374 [-]: LOADK     R5 11        ; R5 := 11.000000
375 [-]: LOADBOOL  R6 0 0       ; R6 := false
376 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
377 [-]: RETURN    R0 1         ; return 


; Function #149.1:
;
; Name:            
; Defined at line: 9770
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xcfc01047
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mLevels"]
  3 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  4 [-]: JMP       51           ; PC := 51
  5 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mCurrLevel"]
  6 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 51
  7 [-]: JMP       51           ; PC := 51
  8 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["mParentId"]
  9 [-]: GETTABLE  R7 R5 K4     ; R7 := R5["mAltParentId"]
 10 [-]: EQ        1 R7 K5      ; if R7 == nil then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETTABLE  R7 R5 K4     ; R7 := R5["mAltParentId"]
 13 [-]: GETGLOBAL R8 K6        ; R8 := mSelected
 14 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Element"]
 15 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["LoadOutType"]
 16 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 17 [-]: EQ        1 R7 K5      ; if R7 == nil then PC := 39
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETTABLE  R7 R5 K4     ; R7 := R5["mAltParentId"]
 20 [-]: GETGLOBAL R8 K6        ; R8 := mSelected
 21 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Element"]
 22 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["LoadOutType"]
 23 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 24 [-]: GETGLOBAL R8 K6        ; R8 := mSelected
 25 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Element"]
 26 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["LoadOutId"]
 27 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 28 [-]: EQ        1 R7 K5      ; if R7 == nil then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETTABLE  R7 R5 K4     ; R7 := R5["mAltParentId"]
 31 [-]: GETGLOBAL R8 K6        ; R8 := mSelected
 32 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Element"]
 33 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["LoadOutType"]
 34 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 35 [-]: GETGLOBAL R8 K6        ; R8 := mSelected
 36 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Element"]
 37 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["LoadOutId"]
 38 [-]: GETTABLE  R6 R7 R8     ; R6 := R7[R8]
 39 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: SETTABLE  R0 K2 R6     ; R0["mCurrLevel"] := R6
 42 [-]: LOADBOOL  R7 1 0       ; R7 := true
 43 [-]: SETGLOBAL R7 K10       ; mRePopulateCosmetics := R7
 44 [-]: GETUPVAL  R7 U0        ; R7 := U0
 45 [-]: GETTABLE  R7 R7 K11    ; R7 := R7[0x18e56c6b]
 46 [-]: GETUPVAL  R8 U1        ; R8 := U1
 47 [-]: LOADBOOL  R9 0 0       ; R9 := false
 48 [-]: CALL      R7 3 1       ; R7(R8,R9)
 49 [-]: LOADBOOL  R7 1 0       ; R7 := true
 50 [-]: RETURN    R7 2         ; return R7
 51 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 5; R3 := R4 end
 52 [-]: JMP       5            ; PC := 5
 53 [-]: LOADBOOL  R7 0 0       ; R7 := false
 54 [-]: RETURN    R7 2         ; return R7
 55 [-]: RETURN    R0 1         ; return 


; Function #149.2:
;
; Name:            
; Defined at line: 9789
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xcfc01047
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mLevels"]
  3 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  4 [-]: JMP       144          ; PC := 144
  5 [-]: GETTABLE  R8 R7 K2     ; R8 := R7["mParentId"]
  6 [-]: GETTABLE  R9 R7 K3     ; R9 := R7["mAltParentId"]
  7 [-]: EQ        1 R9 K4      ; if R9 == nil then PC := 36
  8 [-]: JMP       36           ; PC := 36
  9 [-]: GETTABLE  R9 R7 K3     ; R9 := R7["mAltParentId"]
 10 [-]: GETGLOBAL R10 K5       ; R10 := mSelected
 11 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Element"]
 12 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["LoadOutType"]
 13 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 14 [-]: EQ        1 R9 K4      ; if R9 == nil then PC := 36
 15 [-]: JMP       36           ; PC := 36
 16 [-]: GETTABLE  R9 R7 K3     ; R9 := R7["mAltParentId"]
 17 [-]: GETGLOBAL R10 K5       ; R10 := mSelected
 18 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Element"]
 19 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["LoadOutType"]
 20 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 21 [-]: GETGLOBAL R10 K5       ; R10 := mSelected
 22 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Element"]
 23 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["LoadOutId"]
 24 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 25 [-]: EQ        1 R9 K4      ; if R9 == nil then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETTABLE  R9 R7 K3     ; R9 := R7["mAltParentId"]
 28 [-]: GETGLOBAL R10 K5       ; R10 := mSelected
 29 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Element"]
 30 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["LoadOutType"]
 31 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 32 [-]: GETGLOBAL R10 K5       ; R10 := mSelected
 33 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["Element"]
 34 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["LoadOutId"]
 35 [-]: GETTABLE  R8 R9 R10    ; R8 := R9[R10]
 36 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["mCurrLevel"]
 37 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 144
 38 [-]: JMP       144          ; PC := 144
 39 [-]: LOADBOOL  R9 0 0       ; R9 := false
 40 [-]: GETGLOBAL R10 K0       ; R10 := 0xcfc01047
 41 [-]: MOVE      R11 R1       ; R11 := R1
 42 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 43 [-]: JMP       52           ; PC := 52
 44 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["Level"]
 45 [-]: EQ        1 R15 K4     ; if R15 == nil then PC := 52
 46 [-]: JMP       52           ; PC := 52
 47 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["Level"]
 48 [-]: EQ        0 R15 R6     ; if R15 ~= R6 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: LOADBOOL  R9 1 0       ; R9 := true
 51 [-]: JMP       54           ; PC := 54
 52 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 44; R12 := R13 end
 53 [-]: JMP       44           ; PC := 44
 54 [-]: TEST      R9 0         ; if not R9 then PC := 144
 55 [-]: JMP       144          ; PC := 144
 56 [-]: LOADNIL   R15 R15      ; R15 := nil
 57 [-]: GETGLOBAL R16 K5       ; R16 := mSelected
 58 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["Element"]
 59 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["LoadOutId"]
 60 [-]: EQ        1 R16 K12    ; if R16 == 2.000000 then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETGLOBAL R16 K5       ; R16 := mSelected
 63 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["Element"]
 64 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["LoadOutId"]
 65 [-]: EQ        0 R16 K13    ; if R16 ~= 3.000000 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: SELF      R16 R0 K14   ; R17 := R0; R16 := R0[0x5fbddc1a]
 68 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 69 [-]: EQ        1 R16 K15    ; if R16 == 1.000000 then PC := 101
 70 [-]: JMP       101          ; PC := 101
 71 [-]: GETGLOBAL R16 K5       ; R16 := mSelected
 72 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["Element"]
 73 [-]: GETTABLE  R16 R16 K7   ; R16 := R16["LoadOutType"]
 74 [-]: EQ        0 R16 K15    ; if R16 ~= 1.000000 then PC := 85
 75 [-]: JMP       85           ; PC := 85
 76 [-]: GETGLOBAL R16 K5       ; R16 := mSelected
 77 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["Element"]
 78 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["LoadOutId"]
 79 [-]: EQ        0 R16 K16    ; if R16 ~= 0.000000 then PC := 85
 80 [-]: JMP       85           ; PC := 85
 81 [-]: SELF      R16 R0 K14   ; R17 := R0; R16 := R0[0x5fbddc1a]
 82 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 83 [-]: EQ        1 R16 K16    ; if R16 == 0.000000 then PC := 101
 84 [-]: JMP       101          ; PC := 101
 85 [-]: GETGLOBAL R16 K5       ; R16 := mSelected
 86 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["Element"]
 87 [-]: GETTABLE  R16 R16 K7   ; R16 := R16["LoadOutType"]
 88 [-]: EQ        0 R16 K17    ; if R16 ~= 6.000000 then PC := 102
 89 [-]: JMP       102          ; PC := 102
 90 [-]: GETGLOBAL R16 K5       ; R16 := mSelected
 91 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["Element"]
 92 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["LoadOutId"]
 93 [-]: GETUPVAL  R17 U0       ; R17 := U0
 94 [-]: GETTABLE  R17 R17 K18  ; R17 := R17["KDriveSlot"]
 95 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 102
 96 [-]: JMP       102          ; PC := 102
 97 [-]: SELF      R16 R0 K14   ; R17 := R0; R16 := R0[0x5fbddc1a]
 98 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 99 [-]: EQ        0 R16 K16    ; if R16 ~= 0.000000 then PC := 102
100 [-]: JMP       102          ; PC := 102
101 [-]: LOADK     R15 K19      ; R15 := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
102 [-]: GETTABLE  R16 R7 K20   ; R16 := R7["mTitle"]
103 [-]: GETGLOBAL R17 K21      ; R17 := 0x7b998233
104 [-]: GETTABLE  R18 R7 K22   ; R18 := R7["mAltTitles"]
105 [-]: CALL      R17 2 2      ; R17 := R17(R18)
106 [-]: TEST      R17 1        ; if R17 then PC := 135
107 [-]: JMP       135          ; PC := 135
108 [-]: GETTABLE  R17 R7 K22   ; R17 := R7["mAltTitles"]
109 [-]: GETGLOBAL R18 K5       ; R18 := mSelected
110 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["Element"]
111 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["LoadOutType"]
112 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
113 [-]: EQ        1 R17 K4     ; if R17 == nil then PC := 135
114 [-]: JMP       135          ; PC := 135
115 [-]: GETTABLE  R17 R7 K22   ; R17 := R7["mAltTitles"]
116 [-]: GETGLOBAL R18 K5       ; R18 := mSelected
117 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["Element"]
118 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["LoadOutType"]
119 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
120 [-]: GETGLOBAL R18 K5       ; R18 := mSelected
121 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["Element"]
122 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["LoadOutId"]
123 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
124 [-]: EQ        1 R17 K4     ; if R17 == nil then PC := 135
125 [-]: JMP       135          ; PC := 135
126 [-]: GETTABLE  R17 R7 K22   ; R17 := R7["mAltTitles"]
127 [-]: GETGLOBAL R18 K5       ; R18 := mSelected
128 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["Element"]
129 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["LoadOutType"]
130 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
131 [-]: GETGLOBAL R18 K5       ; R18 := mSelected
132 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["Element"]
133 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["LoadOutId"]
134 [-]: GETTABLE  R16 R17 R18  ; R16 := R17[R18]
135 [-]: SELF      R17 R0 K23   ; R18 := R0; R17 := R0[0xbad4316f]
136 [-]: NEWTABLE  R19 0 4      ; R19 := {}
137 [-]: SETTABLE  R19 K24 R16  ; R19["Title"] := R16
138 [-]: SETTABLE  R19 K10 R6   ; R19["Level"] := R6
139 [-]: SETTABLE  R19 K25 K26  ; R19["isSubMenu"] := true
140 [-]: SETTABLE  R19 K27 R15  ; R19["TopTitle"] := R15
141 [-]: LOADBOOL  R20 1 0      ; R20 := true
142 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
143 [-]: MOVE      R2 R17       ; R2 := R17
144 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 5; R5 := R6 end
145 [-]: JMP       5            ; PC := 5
146 [-]: RETURN    R0 1         ; return 


; Function #149.3:
;
; Name:            
; Defined at line: 9827
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x659d451f]
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UISound_Focus"]
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K3        ; R1 := mLists
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mCosmeticsList"]
  8 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mLevels"]
  9 [-]: GETGLOBAL R2 K3        ; R2 := mLists
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCosmeticsList"]
 11 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mCurrLevel"]
 12 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 13 [-]: GETGLOBAL R2 K3        ; R2 := mLists
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCosmeticsList"]
 15 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x1d246732]
 16 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Id"]
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: SETTABLE  R1 K7 R2     ; R1["mSavedIndex"] := R2
 19 [-]: GETGLOBAL R1 K10       ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xf64b7262]
 21 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mClipName"]
 22 [-]: LOADK     R4 K13       ; R4 := "Bg"
 23 [-]: LOADK     R5 9         ; R5 := 9.000000
 24 [-]: GETGLOBAL R6 K1        ; R6 := 0x0032441c
 25 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["UIColor_Yellow"]
 26 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 27 [-]: GETGLOBAL R1 K15       ; R1 := 0x7b998233
 28 [-]: GETGLOBAL R2 K3        ; R2 := mLists
 29 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCosmeticsList"]
 30 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mLastFocused"]
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 1         ; if R1 then PC := 46
 33 [-]: JMP       46           ; PC := 46
 34 [-]: GETGLOBAL R1 K3        ; R1 := mLists
 35 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mCosmeticsList"]
 36 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["mLastFocused"]
 37 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 46
 38 [-]: JMP       46           ; PC := 46
 39 [-]: GETGLOBAL R1 K3        ; R1 := mLists
 40 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mCosmeticsList"]
 41 [-]: GETTABLE  R1 R1 K17    ; R1 := R1[0xd838387b]
 42 [-]: GETGLOBAL R2 K3        ; R2 := mLists
 43 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCosmeticsList"]
 44 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["mLastFocused"]
 45 [-]: CALL      R1 2 1       ; R1(R2)
 46 [-]: GETGLOBAL R1 K3        ; R1 := mLists
 47 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mCosmeticsList"]
 48 [-]: SETTABLE  R1 K16 R0    ; R1["mLastFocused"] := R0
 49 [-]: RETURN    R0 1         ; return 


; Function #149.4:
;
; Name:            
; Defined at line: 9839
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf64b7262]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "Bg"
  5 [-]: LOADK     R5 9         ; R5 := 9.000000
  6 [-]: GETGLOBAL R6 K4        ; R6 := 0x03f57322
  7 [-]: LOADK     R7 K5        ; R7 := "0xEFEFEF"
  8 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
  9 [-]: CALL      R1 0 1       ; R1(R2,...)
 10 [-]: RETURN    R0 1         ; return 


; Function #149.5:
;
; Name:            
; Defined at line: 9843
; #Upvalues:       18
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Enabled"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Enabled"]
  5 [-]: TEST      R1 1         ; if R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["IsValueSelector"]
  9 [-]: EQ        1 R1 K3      ; if R1 == true then PC := 462
 10 [-]: JMP       462          ; PC := 462
 11 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["Callback"]
 12 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R1 R0 K5     ; R1 := R0[0x75afeb61]
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: JMP       462          ; PC := 462
 18 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["RandomizeColors"]
 19 [-]: TEST      R1 0         ; if not R1 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: CALL      R1 1 1       ; R1()
 23 [-]: JMP       462          ; PC := 462
 24 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["DefaultColors"]
 25 [-]: TEST      R1 0         ; if not R1 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETUPVAL  R1 U1        ; R1 := U1
 28 [-]: CALL      R1 1 1       ; R1()
 29 [-]: JMP       462          ; PC := 462
 30 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["Slot"]
 31 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 138
 32 [-]: JMP       138          ; PC := 138
 33 [-]: LOADBOOL  R1 0 0       ; R1 := false
 34 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["PetTrait"]
 35 [-]: TEST      R2 0         ; if not R2 then PC := 58
 36 [-]: JMP       58           ; PC := 58
 37 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["Attribute"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 58
 39 [-]: JMP       58           ; PC := 58
 40 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["ColorInitialized"]
 41 [-]: TEST      R2 0         ; if not R2 then PC := 58
 42 [-]: JMP       58           ; PC := 58
 43 [-]: GETUPVAL  R2 U2        ; R2 := U2
 44 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[0xb5be5d4a]
 45 [-]: GETGLOBAL R3 K13       ; R3 := 0xae91e43b
 46 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mClipName"]
 47 [-]: CALL      R2 3 3       ; R2,R3 := R2(R3,R4)
 48 [-]: GETGLOBAL R4 K13       ; R4 := 0xae91e43b
 49 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x91a24e4b]
 50 [-]: LOADK     R6 K16       ; R6 := "_root"
 51 [-]: LOADK     R7 25        ; R7 := 25.000000
 52 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 53 [-]: SUB       R4 R2 R4     ; R4 := R2 - R4
 54 [-]: LE        1 R4 K17     ; if R4 <= -130.000000 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 57
 57 [-]: LOADBOOL  R1 1 0       ; R1 := true
 58 [-]: TEST      R1 0         ; if not R1 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R5 U3        ; R5 := U3
 61 [-]: MOVE      R6 R0        ; R6 := R0
 62 [-]: CALL      R5 2 1       ; R5(R6)
 63 [-]: JMP       462          ; PC := 462
 64 [-]: LOADBOOL  R5 1 0       ; R5 := true
 65 [-]: SETGLOBAL R5 K18       ; mInputBlocked := R5
 66 [-]: GETUPVAL  R5 U4        ; R5 := U4
 67 [-]: GETUPVAL  R6 U5        ; R6 := U5
 68 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["SELECTING_SKINS"]
 69 [-]: CALL      R5 2 1       ; R5(R6)
 70 [-]: GETGLOBAL R5 K20       ; R5 := mSelected
 71 [-]: SETTABLE  R5 K21 R0    ; R5["Cosmetic"] := R0
 72 [-]: GETGLOBAL R5 K20       ; R5 := mSelected
 73 [-]: SETTABLE  R5 K22 K1    ; R5["CosmeticPreviousValue"] := nil
 74 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["PetTrait"]
 75 [-]: TEST      R5 0         ; if not R5 then PC := 134
 76 [-]: JMP       134          ; PC := 134
 77 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["Attribute"]
 78 [-]: TEST      R5 0         ; if not R5 then PC := 134
 79 [-]: JMP       134          ; PC := 134
 80 [-]: GETGLOBAL R5 K20       ; R5 := mSelected
 81 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Element"]
 82 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["LoadOutId"]
 83 [-]: EQ        0 R5 K26     ; if R5 ~= 5.000000 then PC := 97
 84 [-]: JMP       97           ; PC := 97
 85 [-]: GETGLOBAL R5 K27       ; R5 := _T
 86 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["mSpecialSuitMode"]
 87 [-]: TEST      R5 0         ; if not R5 then PC := 99
 88 [-]: JMP       99           ; PC := 99
 89 [-]: GETGLOBAL R5 K20       ; R5 := mSelected
 90 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Element"]
 91 [-]: GETTABLE  R5 R5 K29    ; R5 := R5["EquippedItem"]
 92 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["mItemType"]
 93 [-]: SELF      R5 R5 K31    ; R6 := R5; R5 := R5[0xf2deaf69]
 94 [-]: GETGLOBAL R7 K32       ; R7 := gPetPowerSuitType
 95 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 96 [-]: JMP       99           ; PC := 99
 97 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 98
 98 [-]: LOADBOOL  R5 1 0       ; R5 := true
 99 [-]: TEST      R5 0         ; if not R5 then PC := 119
100 [-]: JMP       119          ; PC := 119
101 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["ColorInitialized"]
102 [-]: TEST      R6 1         ; if R6 then PC := 119
103 [-]: JMP       119          ; PC := 119
104 [-]: GETGLOBAL R6 K20       ; R6 := mSelected
105 [-]: GETGLOBAL R7 K33       ; R7 := 0x60130201
106 [-]: GETGLOBAL R8 K20       ; R8 := mSelected
107 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Element"]
108 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["Customization"]
109 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0x6199aec6]
110 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Attribute"]
111 [-]: GETGLOBAL R11 K27      ; R11 := _T
112 [-]: GETTABLE  R11 R11 K36  ; R11 := R11["SpecialSuitAvatar"]
113 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
114 [-]: SELF      R8 R8 K37    ; R9 := R8; R8 := R8[0xa5d5c8f6]
115 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
116 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
117 [-]: SETTABLE  R6 K22 R7    ; R6["CosmeticPreviousValue"] := R7
118 [-]: JMP       134          ; PC := 134
119 [-]: GETGLOBAL R6 K20       ; R6 := mSelected
120 [-]: GETGLOBAL R7 K33       ; R7 := 0x60130201
121 [-]: GETGLOBAL R8 K20       ; R8 := mSelected
122 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Element"]
123 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["Customization"]
124 [-]: SELF      R8 R8 K38    ; R9 := R8; R8 := R8[0x8e62760a]
125 [-]: LOADK     R10 0        ; R10 := 0.000000
126 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
127 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8[0x5d10207d]
128 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Attribute"]
129 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
130 [-]: SELF      R8 R8 K37    ; R9 := R8; R8 := R8[0xa5d5c8f6]
131 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
132 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
133 [-]: SETTABLE  R6 K22 R7    ; R6["CosmeticPreviousValue"] := R7
134 [-]: GETUPVAL  R6 U6        ; R6 := U6
135 [-]: MOVE      R7 R0        ; R7 := R0
136 [-]: CALL      R6 2 1       ; R6(R7)
137 [-]: JMP       462          ; PC := 462
138 [-]: GETTABLE  R6 R0 K40    ; R6 := R0["Color"]
139 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 324
140 [-]: JMP       324          ; PC := 324
141 [-]: GETTABLE  R6 R0 K41    ; R6 := R0["Position"]
142 [-]: EQ        0 R6 K1      ; if R6 ~= nil then PC := 150
143 [-]: JMP       150          ; PC := 150
144 [-]: GETTABLE  R6 R0 K42    ; R6 := R0["Scale"]
145 [-]: EQ        0 R6 K1      ; if R6 ~= nil then PC := 150
146 [-]: JMP       150          ; PC := 150
147 [-]: GETTABLE  R6 R0 K43    ; R6 := R0["Rotation"]
148 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 229
149 [-]: JMP       229          ; PC := 229
150 [-]: GETGLOBAL R6 K20       ; R6 := mSelected
151 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["Element"]
152 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["Customization"]
153 [-]: SELF      R7 R6 K38    ; R8 := R6; R7 := R6[0x8e62760a]
154 [-]: LOADK     R9 2         ; R9 := 2.000000
155 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
156 [-]: GETTABLE  R8 R0 K41    ; R8 := R0["Position"]
157 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 172
158 [-]: JMP       172          ; PC := 172
159 [-]: SELF      R8 R7 K39    ; R9 := R7; R8 := R7[0x5d10207d]
160 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Attribute"]
161 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
162 [-]: GETTABLE  R9 R0 K40    ; R9 := R0["Color"]
163 [-]: GETTABLE  R9 R9 K44    ; R9 := R9["red"]
164 [-]: SETTABLE  R8 K44 R9    ; R8["red"] := R9
165 [-]: SELF      R8 R7 K39    ; R9 := R7; R8 := R7[0x5d10207d]
166 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Attribute"]
167 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
168 [-]: GETTABLE  R9 R0 K40    ; R9 := R0["Color"]
169 [-]: GETTABLE  R9 R9 K45    ; R9 := R9["green"]
170 [-]: SETTABLE  R8 K45 R9    ; R8["green"] := R9
171 [-]: JMP       197          ; PC := 197
172 [-]: GETTABLE  R8 R0 K42    ; R8 := R0["Scale"]
173 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 188
174 [-]: JMP       188          ; PC := 188
175 [-]: SELF      R8 R7 K39    ; R9 := R7; R8 := R7[0x5d10207d]
176 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Attribute"]
177 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
178 [-]: GETTABLE  R9 R0 K40    ; R9 := R0["Color"]
179 [-]: GETTABLE  R9 R9 K46    ; R9 := R9["blue"]
180 [-]: SETTABLE  R8 K46 R9    ; R8["blue"] := R9
181 [-]: SELF      R8 R7 K39    ; R9 := R7; R8 := R7[0x5d10207d]
182 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Attribute"]
183 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
184 [-]: GETTABLE  R9 R0 K40    ; R9 := R0["Color"]
185 [-]: GETTABLE  R9 R9 K47    ; R9 := R9["alpha"]
186 [-]: SETTABLE  R8 K47 R9    ; R8["alpha"] := R9
187 [-]: JMP       197          ; PC := 197
188 [-]: GETTABLE  R8 R0 K43    ; R8 := R0["Rotation"]
189 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 197
190 [-]: JMP       197          ; PC := 197
191 [-]: SELF      R8 R7 K39    ; R9 := R7; R8 := R7[0x5d10207d]
192 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["Attribute"]
193 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
194 [-]: GETTABLE  R9 R0 K40    ; R9 := R0["Color"]
195 [-]: GETTABLE  R9 R9 K47    ; R9 := R9["alpha"]
196 [-]: SETTABLE  R8 K47 R9    ; R8["alpha"] := R9
197 [-]: GETGLOBAL R8 K20       ; R8 := mSelected
198 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Element"]
199 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["EquippedItem"]
200 [-]: SELF      R8 R8 K48    ; R9 := R8; R8 := R8[0xaa041663]
201 [-]: GETGLOBAL R10 K20      ; R10 := mSelected
202 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["Element"]
203 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Customization"]
204 [-]: GETGLOBAL R11 K20      ; R11 := mSelected
205 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Element"]
206 [-]: GETTABLE  R11 R11 K49  ; R11 := R11["mCustSlot"]
207 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
208 [-]: GETGLOBAL R8 K50       ; R8 := mInventory
209 [-]: SELF      R8 R8 K51    ; R9 := R8; R8 := R8[0x9b051033]
210 [-]: GETGLOBAL R10 K20      ; R10 := mSelected
211 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["Element"]
212 [-]: GETTABLE  R10 R10 K52  ; R10 := R10["UID"]
213 [-]: GETGLOBAL R11 K20      ; R11 := mSelected
214 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Element"]
215 [-]: GETTABLE  R11 R11 K49  ; R11 := R11["mCustSlot"]
216 [-]: GETGLOBAL R12 K20      ; R12 := mSelected
217 [-]: GETTABLE  R12 R12 K23  ; R12 := R12["Element"]
218 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["Customization"]
219 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
220 [-]: SETTABLE  R0 K53 K3    ; R0["mForceRedraw"] := true
221 [-]: GETGLOBAL R8 K54       ; R8 := mLists
222 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["mCosmeticsList"]
223 [-]: SELF      R8 R8 K56    ; R9 := R8; R8 := R8[0x71e9ac81]
224 [-]: LOADNIL   R10 R10      ; R10 := nil
225 [-]: LOADBOOL  R11 0 0      ; R11 := false
226 [-]: LOADBOOL  R12 1 0      ; R12 := true
227 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
228 [-]: JMP       462          ; PC := 462
229 [-]: GETUPVAL  R8 U2        ; R8 := U2
230 [-]: GETTABLE  R8 R8 K12    ; R8 := R8[0xb5be5d4a]
231 [-]: GETGLOBAL R9 K13       ; R9 := 0xae91e43b
232 [-]: GETTABLE  R10 R0 K14   ; R10 := R0["mClipName"]
233 [-]: CALL      R8 3 3       ; R8,R9 := R8(R9,R10)
234 [-]: GETGLOBAL R10 K13      ; R10 := 0xae91e43b
235 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10[0x91a24e4b]
236 [-]: LOADK     R12 K16      ; R12 := "_root"
237 [-]: LOADK     R13 25       ; R13 := 25.000000
238 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
239 [-]: SUB       R10 R8 R10   ; R10 := R8 - R10
240 [-]: LE        1 R10 K17    ; if R10 <= -130.000000 then PC := 243
241 [-]: JMP       243          ; PC := 243
242 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 243
243 [-]: LOADBOOL  R11 1 0      ; R11 := true
244 [-]: GETTABLE  R12 R0 K57   ; R12 := R0["Color2"]
245 [-]: EQ        1 R12 K1     ; if R12 == nil then PC := 251
246 [-]: JMP       251          ; PC := 251
247 [-]: LT        0 K58 R10    ; if -120.000000 >= R10 then PC := 251
248 [-]: JMP       251          ; PC := 251
249 [-]: LE        1 R10 K59    ; if R10 <= -100.000000 then PC := 252
250 [-]: JMP       252          ; PC := 252
251 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 252
252 [-]: LOADBOOL  R12 1 0      ; R12 := true
253 [-]: TEST      R11 0        ; if not R11 then PC := 260
254 [-]: JMP       260          ; PC := 260
255 [-]: GETUPVAL  R13 U3       ; R13 := U3
256 [-]: MOVE      R14 R0       ; R14 := R0
257 [-]: LOADK     R15 2        ; R15 := 2.000000
258 [-]: CALL      R13 3 1      ; R13(R14,R15)
259 [-]: JMP       322          ; PC := 322
260 [-]: GETUPVAL  R13 U2       ; R13 := U2
261 [-]: GETTABLE  R13 R13 K60  ; R13 := R13[0x06d055f9]
262 [-]: MOVE      R14 R12      ; R14 := R12
263 [-]: GETTABLE  R15 R0 K61   ; R15 := R0["Attribute2"]
264 [-]: GETTABLE  R16 R0 K10   ; R16 := R0["Attribute"]
265 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
266 [-]: GETUPVAL  R14 U2       ; R14 := U2
267 [-]: GETTABLE  R14 R14 K60  ; R14 := R14[0x06d055f9]
268 [-]: MOVE      R15 R12      ; R15 := R12
269 [-]: GETTABLE  R16 R0 K57   ; R16 := R0["Color2"]
270 [-]: GETTABLE  R17 R0 K40   ; R17 := R0["Color"]
271 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
272 [-]: GETUPVAL  R15 U2       ; R15 := U2
273 [-]: GETTABLE  R15 R15 K60  ; R15 := R15[0x06d055f9]
274 [-]: MOVE      R16 R12      ; R16 := R12
275 [-]: GETTABLE  R17 R0 K62   ; R17 := R0["ColorInitialized2"]
276 [-]: GETTABLE  R18 R0 K11   ; R18 := R0["ColorInitialized"]
277 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
278 [-]: GETUPVAL  R16 U7       ; R16 := U7
279 [-]: CALL      R16 1 2      ; R16 := R16()
280 [-]: LOADBOOL  R17 1 0      ; R17 := true
281 [-]: SETUPVAL  R17 U8       ; U82 := R8
282 [-]: GETUPVAL  R17 U9       ; R17 := U9
283 [-]: GETTABLE  R17 R17 K64  ; R17 := R17[0x0d91f3d3]
284 [-]: GETGLOBAL R18 K13      ; R18 := 0xae91e43b
285 [-]: GETUPVAL  R19 U2       ; R19 := U2
286 [-]: GETTABLE  R19 R19 K60  ; R19 := R19[0x06d055f9]
287 [-]: MOVE      R20 R15      ; R20 := R15
288 [-]: LOADK     R21 K65      ; R21 := "0x00"
289 [-]: GETUPVAL  R22 U2       ; R22 := U2
290 [-]: GETTABLE  R22 R22 K66  ; R22 := R22[0x2d56ab0b]
291 [-]: GETTABLE  R23 R14 K44  ; R23 := R14["red"]
292 [-]: GETTABLE  R24 R14 K45  ; R24 := R14["green"]
293 [-]: GETTABLE  R25 R14 K46  ; R25 := R14["blue"]
294 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
295 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
296 [-]: LOADNIL   R22 R22      ; R22 := nil
297 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
298 [-]: CLOSURE   R20 0        ; R20 := closure(Function #149.5.1)
299 [-]: GETUPVAL  R0 U3        ; R0 := U3
300 [-]: MOVE      R0 R0        ; R0 := R0
301 [-]: GETUPVAL  R0 U2        ; R0 := U2
302 [-]: MOVE      R0 R12       ; R0 := R12
303 [-]: GETUPVAL  R0 U10       ; R0 := U10
304 [-]: MOVE      R0 R13       ; R0 := R13
305 [-]: MOVE      R0 R16       ; R0 := R16
306 [-]: CLOSURE   R21 1        ; R21 := closure(Function #149.5.2)
307 [-]: GETUPVAL  R0 U11       ; R0 := U11
308 [-]: GETUPVAL  R0 U8        ; R0 := U8
309 [-]: CALL      R17 5 2      ; R17 := R17(R18,R19,R20,R21)
310 [-]: SETGLOBAL R17 K63      ; mChildMovie := R17
311 [-]: GETGLOBAL R17 K67      ; R17 := 0x7b998233
312 [-]: GETGLOBAL R18 K63      ; R18 := mChildMovie
313 [-]: CALL      R17 2 2      ; R17 := R17(R18)
314 [-]: TEST      R17 1        ; if R17 then PC := 321
315 [-]: JMP       321          ; PC := 321
316 [-]: GETGLOBAL R17 K63      ; R17 := mChildMovie
317 [-]: SELF      R17 R17 K68  ; R18 := R17; R17 := R17[0xe4162eed]
318 [-]: LOADK     R19 K69      ; R19 := "SetSquadTitle"
319 [-]: GETTABLE  R20 R0 K70   ; R20 := R0["Title"]
320 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
321 [-]: CLOSE     R13          ; SAVE R13,...
322 [-]: CLOSE     R8           ; SAVE R8,...
323 [-]: JMP       462          ; PC := 462
324 [-]: GETTABLE  R8 R0 K71    ; R8 := R0["ToggleVal"]
325 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 349
326 [-]: JMP       349          ; PC := 349
327 [-]: GETTABLE  R8 R0 K72    ; R8 := R0["ToggleFunction"]
328 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 349
329 [-]: JMP       349          ; PC := 349
330 [-]: GETTABLE  R8 R0 K71    ; R8 := R0["ToggleVal"]
331 [-]: NOT       R8 R8        ; R8 := not R8
332 [-]: SETTABLE  R0 K71 R8    ; R0["ToggleVal"] := R8
333 [-]: GETGLOBAL R8 K73       ; R8 := 0x38f10e85
334 [-]: GETGLOBAL R9 K13       ; R9 := 0xae91e43b
335 [-]: GETTABLE  R10 R0 K14   ; R10 := R0["mClipName"]
336 [-]: LOADK     R11 K74      ; R11 := ".checkbox.gotoAndStop"
337 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
338 [-]: GETUPVAL  R11 U2       ; R11 := U2
339 [-]: GETTABLE  R11 R11 K60  ; R11 := R11[0x06d055f9]
340 [-]: GETTABLE  R12 R0 K71   ; R12 := R0["ToggleVal"]
341 [-]: LOADK     R13 K75      ; R13 := "On"
342 [-]: LOADK     R14 K76      ; R14 := "Off"
343 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
344 [-]: CALL      R8 0 1       ; R8(R9,...)
345 [-]: GETTABLE  R8 R0 K77    ; R8 := R0[0x66080f3a]
346 [-]: GETTABLE  R9 R0 K71    ; R9 := R0["ToggleVal"]
347 [-]: CALL      R8 2 1       ; R8(R9)
348 [-]: JMP       462          ; PC := 462
349 [-]: GETTABLE  R8 R0 K78    ; R8 := R0["Level"]
350 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 462
351 [-]: JMP       462          ; PC := 462
352 [-]: GETGLOBAL R8 K54       ; R8 := mLists
353 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["mCosmeticsList"]
354 [-]: GETTABLE  R9 R0 K78    ; R9 := R0["Level"]
355 [-]: SETTABLE  R8 K79 R9    ; R8["mCurrLevel"] := R9
356 [-]: GETGLOBAL R8 K54       ; R8 := mLists
357 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["mCosmeticsList"]
358 [-]: GETTABLE  R9 R0 K80    ; R9 := R0["Hand"]
359 [-]: SETTABLE  R8 K80 R9    ; R8["Hand"] := R9
360 [-]: LOADBOOL  R8 1 0       ; R8 := true
361 [-]: SETGLOBAL R8 K81       ; mRePopulateCosmetics := R8
362 [-]: GETUPVAL  R8 U12       ; R8 := U12
363 [-]: GETUPVAL  R9 U5        ; R9 := U5
364 [-]: GETTABLE  R9 R9 K82    ; R9 := R9["CUSTOMIZING_SKINS"]
365 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 380
366 [-]: JMP       380          ; PC := 380
367 [-]: GETGLOBAL R8 K54       ; R8 := mLists
368 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["mCosmeticsList"]
369 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 380
370 [-]: JMP       380          ; PC := 380
371 [-]: GETGLOBAL R8 K54       ; R8 := mLists
372 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["mCosmeticsList"]
373 [-]: GETTABLE  R8 R8 K79    ; R8 := R8["mCurrLevel"]
374 [-]: EQ        0 R8 K83     ; if R8 ~= 1.000000 then PC := 380
375 [-]: JMP       380          ; PC := 380
376 [-]: GETGLOBAL R8 K84       ; R8 := mButtons
377 [-]: GETTABLE  R8 R8 K26    ; R8 := R8[5.000000]
378 [-]: SETTABLE  R8 K85 K3    ; R8["mVisible"] := true
379 [-]: JMP       383          ; PC := 383
380 [-]: GETGLOBAL R8 K84       ; R8 := mButtons
381 [-]: GETTABLE  R8 R8 K26    ; R8 := R8[5.000000]
382 [-]: SETTABLE  R8 K85 K86   ; R8["mVisible"] := false
383 [-]: GETUPVAL  R8 U13       ; R8 := U13
384 [-]: CALL      R8 1 1       ; R8()
385 [-]: GETUPVAL  R8 U11       ; R8 := U11
386 [-]: GETTABLE  R8 R8 K87    ; R8 := R8[0x18e56c6b]
387 [-]: GETUPVAL  R9 U12       ; R9 := U12
388 [-]: LOADBOOL  R10 0 0      ; R10 := false
389 [-]: CALL      R8 3 1       ; R8(R9,R10)
390 [-]: GETGLOBAL R8 K27       ; R8 := _T
391 [-]: GETTABLE  R8 R8 K88    ; R8 := R8["MenuSuitAvatar"]
392 [-]: GETTABLE  R9 R0 K78    ; R9 := R0["Level"]
393 [-]: GETGLOBAL R10 K54      ; R10 := mLists
394 [-]: GETTABLE  R10 R10 K55  ; R10 := R10["mCosmeticsList"]
395 [-]: GETTABLE  R10 R10 K89  ; R10 := R10["FRONTSIGIL"]
396 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 407
397 [-]: JMP       407          ; PC := 407
398 [-]: GETGLOBAL R9 K67       ; R9 := 0x7b998233
399 [-]: MOVE      R10 R8       ; R10 := R8
400 [-]: CALL      R9 2 2       ; R9 := R9(R10)
401 [-]: TEST      R9 1         ; if R9 then PC := 407
402 [-]: JMP       407          ; PC := 407
403 [-]: GETUPVAL  R9 U15       ; R9 := U15
404 [-]: GETTABLE  R9 R9 K90    ; R9 := R9["FRONT"]
405 [-]: SETUPVAL  R9 U14       ; U82 := R14
406 [-]: JMP       421          ; PC := 421
407 [-]: GETTABLE  R9 R0 K78    ; R9 := R0["Level"]
408 [-]: GETGLOBAL R10 K54      ; R10 := mLists
409 [-]: GETTABLE  R10 R10 K55  ; R10 := R10["mCosmeticsList"]
410 [-]: GETTABLE  R10 R10 K91  ; R10 := R10["BACKSIGIL"]
411 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 421
412 [-]: JMP       421          ; PC := 421
413 [-]: GETGLOBAL R9 K67       ; R9 := 0x7b998233
414 [-]: MOVE      R10 R8       ; R10 := R8
415 [-]: CALL      R9 2 2       ; R9 := R9(R10)
416 [-]: TEST      R9 1         ; if R9 then PC := 421
417 [-]: JMP       421          ; PC := 421
418 [-]: GETUPVAL  R9 U15       ; R9 := U15
419 [-]: GETTABLE  R9 R9 K92    ; R9 := R9["BACK"]
420 [-]: SETUPVAL  R9 U14       ; U82 := R14
421 [-]: GETUPVAL  R9 U14       ; R9 := U14
422 [-]: GETUPVAL  R10 U15      ; R10 := U15
423 [-]: GETTABLE  R10 R10 K90  ; R10 := R10["FRONT"]
424 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 431
425 [-]: JMP       431          ; PC := 431
426 [-]: GETUPVAL  R9 U14       ; R9 := U14
427 [-]: GETUPVAL  R10 U15      ; R10 := U15
428 [-]: GETTABLE  R10 R10 K92  ; R10 := R10["BACK"]
429 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 444
430 [-]: JMP       444          ; PC := 444
431 [-]: GETUPVAL  R9 U16       ; R9 := U16
432 [-]: CALL      R9 1 1       ; R9()
433 [-]: GETGLOBAL R9 K93       ; R9 := mCameraTable
434 [-]: SETTABLE  R9 K94 K3    ; R9["ConstantUpdate"] := true
435 [-]: GETGLOBAL R9 K93       ; R9 := mCameraTable
436 [-]: SETTABLE  R9 K95 K96   ; R9["currZoom"] := 0.000000
437 [-]: GETGLOBAL R9 K93       ; R9 := mCameraTable
438 [-]: SETTABLE  R9 K97 K96   ; R9["clampedPan"] := 0.000000
439 [-]: GETGLOBAL R9 K93       ; R9 := mCameraTable
440 [-]: GETGLOBAL R10 K93      ; R10 := mCameraTable
441 [-]: GETTABLE  R10 R10 K99  ; R10 := R10["DefaultPan"]
442 [-]: SETTABLE  R9 K98 R10   ; R9["currPan"] := R10
443 [-]: JMP       462          ; PC := 462
444 [-]: GETGLOBAL R9 K54       ; R9 := mLists
445 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["mCosmeticsList"]
446 [-]: GETTABLE  R9 R9 K79    ; R9 := R9["mCurrLevel"]
447 [-]: GETGLOBAL R10 K54      ; R10 := mLists
448 [-]: GETTABLE  R10 R10 K55  ; R10 := R10["mCosmeticsList"]
449 [-]: GETTABLE  R10 R10 K100 ; R10 := R10["HOLSTER_STYLE"]
450 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 460
451 [-]: JMP       460          ; PC := 460
452 [-]: GETGLOBAL R9 K54       ; R9 := mLists
453 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["mCosmeticsList"]
454 [-]: GETTABLE  R9 R9 K79    ; R9 := R9["mCurrLevel"]
455 [-]: GETGLOBAL R10 K54      ; R10 := mLists
456 [-]: GETTABLE  R10 R10 K55  ; R10 := R10["mCosmeticsList"]
457 [-]: GETTABLE  R10 R10 K101 ; R10 := R10["HOLSTER_CUSTOMIZATION"]
458 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 462
459 [-]: JMP       462          ; PC := 462
460 [-]: GETUPVAL  R9 U17       ; R9 := U17
461 [-]: CALL      R9 1 1       ; R9()
462 [-]: GETUPVAL  R9 U2        ; R9 := U2
463 [-]: GETTABLE  R9 R9 K102   ; R9 := R9[0x659d451f]
464 [-]: GETGLOBAL R10 K103     ; R10 := 0x0032441c
465 [-]: GETTABLE  R10 R10 K104 ; R10 := R10["UISound_Select"]
466 [-]: CALL      R9 2 1       ; R9(R10)
467 [-]: RETURN    R0 1         ; return 


; Function #149.5.1:
;
; Name:            
; Defined at line: 9924
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETUPVAL  R4 U2        ; R4 := U2
 12 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0x06d055f9]
 13 [-]: GETUPVAL  R5 U3        ; R5 := U3
 14 [-]: LOADK     R6 1         ; R6 := 1.000000
 15 [-]: LOADNIL   R7 R7        ; R7 := nil
 16 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 17 [-]: CALL      R2 0 1       ; R2(R3,...)
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETUPVAL  R2 U4        ; R2 := U4
 20 [-]: GETUPVAL  R3 U5        ; R3 := U5
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: GETUPVAL  R5 U6        ; R5 := U6
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 25 [-]: RETURN    R0 1         ; return 


; Function #149.5.2:
;
; Name:            
; Defined at line: 9934
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: TEST      R0 0         ; if not R0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0xf6edf3bb]
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: SETUPVAL  R1 U1        ; U82 := R1
  8 [-]: RETURN    R0 1         ; return 


; Function #149.6:
;
; Name:            
; Defined at line: 9988
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["ColorList"]
  2 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["ColorList"]
  5 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x7c09c373]
  6 [-]: LOADBOOL  R4 1 0       ; R4 := true
  7 [-]: LOADBOOL  R5 1 0       ; R5 := true
  8 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  9 [-]: RETURN    R0 1         ; return 


; Function #149.7:
;
; Name:            
; Defined at line: 9994
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  59

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := mLists
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mCosmeticsList"]
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xed1ab921]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["Id"]
 12 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["Id"]
 13 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 16
 16 [-]: LOADBOOL  R2 1 0       ; R2 := true
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["Enabled"]
 18 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["Enabled"]
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 23
 23 [-]: LOADBOOL  R3 1 0       ; R3 := true
 24 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
 25 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x42b04007]
 26 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["Title"]
 27 [-]: LOADBOOL  R7 0 0       ; R7 := false
 28 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 29 [-]: GETGLOBAL R5 K7        ; R5 := 0xae91e43b
 30 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf64b7262]
 31 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mClipName"]
 32 [-]: LOADK     R8 K11       ; R8 := "Label"
 33 [-]: LOADK     R9 9         ; R9 := 9.000000
 34 [-]: GETGLOBAL R10 K12      ; R10 := 0x0032441c
 35 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["UIColor_MediumGrey"]
 36 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 37 [-]: LOADK     R5 K14       ; R5 := ""
 38 [-]: LOADK     R6 0         ; R6 := 0.000000
 39 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 40 [-]: LOADBOOL  R9 0 0       ; R9 := false
 41 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["Slot"]
 42 [-]: EQ        1 R10 K1     ; if R10 == nil then PC := 56
 43 [-]: JMP       56           ; PC := 56
 44 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["Slot"]
 45 [-]: EQ        1 R10 K17    ; if R10 == 17.000000 then PC := 57
 46 [-]: JMP       57           ; PC := 57
 47 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["Slot"]
 48 [-]: EQ        1 R10 K18    ; if R10 == 18.000000 then PC := 57
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["Slot"]
 51 [-]: EQ        1 R10 K19    ; if R10 == 19.000000 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["Slot"]
 54 [-]: EQ        1 R10 K20    ; if R10 == 20.000000 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 57
 57 [-]: LOADBOOL  R10 1 0      ; R10 := true
 58 [-]: GETGLOBAL R11 K21      ; R11 := mSelected
 59 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["Element"]
 60 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 88
 61 [-]: JMP       88           ; PC := 88
 62 [-]: GETGLOBAL R11 K21      ; R11 := mSelected
 63 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["Element"]
 64 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Customization"]
 65 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 88
 66 [-]: JMP       88           ; PC := 88
 67 [-]: GETTABLE  R11 R0 K15   ; R11 := R0["Slot"]
 68 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 88
 69 [-]: JMP       88           ; PC := 88
 70 [-]: GETGLOBAL R11 K24      ; R11 := 0x7b998233
 71 [-]: GETGLOBAL R12 K21      ; R12 := mSelected
 72 [-]: GETTABLE  R12 R12 K22  ; R12 := R12["Element"]
 73 [-]: GETTABLE  R12 R12 K23  ; R12 := R12["Customization"]
 74 [-]: SELF      R12 R12 K25  ; R13 := R12; R12 := R12[0x2540510f]
 75 [-]: GETTABLE  R14 R0 K15   ; R14 := R0["Slot"]
 76 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
 77 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 78 [-]: TEST      R11 1        ; if R11 then PC := 88
 79 [-]: JMP       88           ; PC := 88
 80 [-]: GETGLOBAL R11 K21      ; R11 := mSelected
 81 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["Element"]
 82 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Customization"]
 83 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11[0x5ef3783b]
 84 [-]: GETTABLE  R13 R0 K15   ; R13 := R0["Slot"]
 85 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 86 [-]: MOVE      R7 R11       ; R7 := R11
 87 [-]: JMP       112          ; PC := 112
 88 [-]: GETGLOBAL R11 K21      ; R11 := mSelected
 89 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["Element"]
 90 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["LunaroArenaEntry"]
 91 [-]: TEST      R11 0        ; if not R11 then PC := 112
 92 [-]: JMP       112          ; PC := 112
 93 [-]: GETGLOBAL R11 K28      ; R11 := mInventory
 94 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["mArenaCustomization"]
 95 [-]: SELF      R11 R11 K30  ; R12 := R11; R11 := R11[0xacfb060f]
 96 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 97 [-]: GETGLOBAL R12 K24      ; R12 := 0x7b998233
 98 [-]: MOVE      R13 R11      ; R13 := R11
 99 [-]: CALL      R12 2 2      ; R12 := R12(R13)
100 [-]: TEST      R12 1        ; if R12 then PC := 111
101 [-]: JMP       111          ; PC := 111
102 [-]: GETUPVAL  R12 U0       ; R12 := U0
103 [-]: MOVE      R13 R11      ; R13 := R11
104 [-]: CALL      R12 2 2      ; R12 := R12(R13)
105 [-]: GETGLOBAL R13 K31      ; R13 := 0x64fb1586
106 [-]: SELF      R14 R12 K32  ; R15 := R12; R14 := R12[0xd3a9d01f]
107 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
108 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
109 [-]: MOVE      R5 R13       ; R5 := R13
110 [-]: JMP       112          ; PC := 112
111 [-]: LOADK     R5 K33       ; R5 := "NONE"
112 [-]: GETTABLE  R13 R0 K34   ; R13 := R0["PetTrait"]
113 [-]: TEST      R13 0        ; if not R13 then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: GETTABLE  R13 R0 K35   ; R13 := R0["Attribute"]
116 [-]: TEST      R13 0        ; if not R13 then PC := 120
117 [-]: JMP       120          ; PC := 120
118 [-]: LOADK     R5 K14       ; R5 := ""
119 [-]: JMP       218          ; PC := 218
120 [-]: EQ        1 R7 K1      ; if R7 == nil then PC := 156
121 [-]: JMP       156          ; PC := 156
122 [-]: SELF      R13 R7 K36   ; R14 := R7; R13 := R7[0xd186922b]
123 [-]: CALL      R13 2 2      ; R13 := R13(R14)
124 [-]: MOVE      R5 R13       ; R5 := R13
125 [-]: GETGLOBAL R13 K37      ; R13 := 0x603636ad
126 [-]: LOADK     R14 K38      ; R14 := "/Lotus/Language/Menu/Cosmetics_None"
127 [-]: LOADNIL   R15 R15      ; R15 := nil
128 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
129 [-]: EQ        0 R5 R13     ; if R5 ~= R13 then PC := 132
130 [-]: JMP       132          ; PC := 132
131 [-]: LOADK     R5 K33       ; R5 := "NONE"
132 [-]: TEST      R10 0        ; if not R10 then PC := 218
133 [-]: JMP       218          ; PC := 218
134 [-]: GETGLOBAL R13 K24      ; R13 := 0x7b998233
135 [-]: GETUPVAL  R14 U1       ; R14 := U1
136 [-]: CALL      R13 2 2      ; R13 := R13(R14)
137 [-]: TEST      R13 1        ; if R13 then PC := 218
138 [-]: JMP       218          ; PC := 218
139 [-]: GETUPVAL  R13 U1       ; R13 := U1
140 [-]: SELF      R13 R13 K39  ; R14 := R13; R13 := R13[0x105074fb]
141 [-]: GETTABLE  R15 R7 K40   ; R15 := R7["mItemType"]
142 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
143 [-]: GETGLOBAL R14 K24      ; R14 := 0x7b998233
144 [-]: MOVE      R15 R13      ; R15 := R13
145 [-]: CALL      R14 2 2      ; R14 := R14(R15)
146 [-]: TEST      R14 1        ; if R14 then PC := 218
147 [-]: JMP       218          ; PC := 218
148 [-]: GETUPVAL  R14 U2       ; R14 := U2
149 [-]: GETTABLE  R14 R14 K41  ; R14 := R14[0x056dcf06]
150 [-]: MOVE      R15 R13      ; R15 := R13
151 [-]: LOADBOOL  R16 1 0      ; R16 := true
152 [-]: CALL      R14 3 3      ; R14,R15 := R14(R15,R16)
153 [-]: MOVE      R9 R15       ; R9 := R15
154 [-]: MOVE      R8 R14       ; R8 := R14
155 [-]: JMP       218          ; PC := 218
156 [-]: GETTABLE  R14 R0 K15   ; R14 := R0["Slot"]
157 [-]: EQ        1 R14 K1     ; if R14 == nil then PC := 217
158 [-]: JMP       217          ; PC := 217
159 [-]: LOADK     R5 K33       ; R5 := "NONE"
160 [-]: GETGLOBAL R14 K24      ; R14 := 0x7b998233
161 [-]: GETGLOBAL R15 K21      ; R15 := mSelected
162 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["Element"]
163 [-]: CALL      R14 2 2      ; R14 := R14(R15)
164 [-]: TEST      R14 1        ; if R14 then PC := 218
165 [-]: JMP       218          ; PC := 218
166 [-]: GETGLOBAL R14 K24      ; R14 := 0x7b998233
167 [-]: GETGLOBAL R15 K21      ; R15 := mSelected
168 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["Element"]
169 [-]: GETTABLE  R15 R15 K42  ; R15 := R15["Type"]
170 [-]: CALL      R14 2 2      ; R14 := R14(R15)
171 [-]: TEST      R14 1        ; if R14 then PC := 218
172 [-]: JMP       218          ; PC := 218
173 [-]: GETUPVAL  R14 U3       ; R14 := U3
174 [-]: GETGLOBAL R15 K21      ; R15 := mSelected
175 [-]: GETTABLE  R15 R15 K22  ; R15 := R15["Element"]
176 [-]: GETTABLE  R15 R15 K43  ; R15 := R15["LoadOutType"]
177 [-]: GETGLOBAL R16 K21      ; R16 := mSelected
178 [-]: GETTABLE  R16 R16 K22  ; R16 := R16["Element"]
179 [-]: GETTABLE  R16 R16 K44  ; R16 := R16["LoadOutId"]
180 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
181 [-]: LOADNIL   R15 R15      ; R15 := nil
182 [-]: GETGLOBAL R16 K24      ; R16 := 0x7b998233
183 [-]: MOVE      R17 R14      ; R17 := R14
184 [-]: CALL      R16 2 2      ; R16 := R16(R17)
185 [-]: TEST      R16 1        ; if R16 then PC := 191
186 [-]: JMP       191          ; PC := 191
187 [-]: SELF      R16 R14 K45  ; R17 := R14; R16 := R14[0x0911ae7c]
188 [-]: GETTABLE  R18 R0 K15   ; R18 := R0["Slot"]
189 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
190 [-]: MOVE      R15 R16      ; R15 := R16
191 [-]: GETGLOBAL R16 K24      ; R16 := 0x7b998233
192 [-]: MOVE      R17 R15      ; R17 := R15
193 [-]: CALL      R16 2 2      ; R16 := R16(R17)
194 [-]: TEST      R16 1        ; if R16 then PC := 218
195 [-]: JMP       218          ; PC := 218
196 [-]: GETUPVAL  R16 U0       ; R16 := U0
197 [-]: MOVE      R17 R15      ; R17 := R15
198 [-]: CALL      R16 2 2      ; R16 := R16(R17)
199 [-]: GETGLOBAL R17 K24      ; R17 := 0x7b998233
200 [-]: MOVE      R18 R16      ; R18 := R16
201 [-]: CALL      R17 2 2      ; R17 := R17(R18)
202 [-]: TEST      R17 1        ; if R17 then PC := 218
203 [-]: JMP       218          ; PC := 218
204 [-]: SELF      R17 R16 K32  ; R18 := R16; R17 := R16[0xd3a9d01f]
205 [-]: CALL      R17 2 2      ; R17 := R17(R18)
206 [-]: GETGLOBAL R18 K46      ; R18 := 0x0469f296
207 [-]: LOADK     R19 K38      ; R19 := "/Lotus/Language/Menu/Cosmetics_None"
208 [-]: CALL      R18 2 2      ; R18 := R18(R19)
209 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 218
210 [-]: JMP       218          ; PC := 218
211 [-]: GETGLOBAL R17 K31      ; R17 := 0x64fb1586
212 [-]: SELF      R18 R16 K32  ; R19 := R16; R18 := R16[0xd3a9d01f]
213 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
214 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
215 [-]: MOVE      R5 R17       ; R5 := R17
216 [-]: JMP       218          ; PC := 218
217 [-]: LOADK     R6 40        ; R6 := 40.000000
218 [-]: GETGLOBAL R17 K7       ; R17 := 0xae91e43b
219 [-]: SELF      R17 R17 K10  ; R18 := R17; R17 := R17[0xf64b7262]
220 [-]: GETTABLE  R19 R0 K0    ; R19 := R0["mClipName"]
221 [-]: LOADK     R20 K47      ; R20 := "Arrow"
222 [-]: LOADK     R21 9        ; R21 := 9.000000
223 [-]: GETUPVAL  R22 U4       ; R22 := U4
224 [-]: GETTABLE  R22 R22 K48  ; R22 := R22[0x06d055f9]
225 [-]: EQ        1 R5 K33     ; if R5 == "NONE" then PC := 228
226 [-]: JMP       228          ; PC := 228
227 [-]: LOADBOOL  R23 0 1      ; R23 := false; PC := 228
228 [-]: LOADBOOL  R23 1 0      ; R23 := true
229 [-]: GETGLOBAL R24 K12      ; R24 := 0x0032441c
230 [-]: GETTABLE  R24 R24 K13  ; R24 := R24["UIColor_MediumGrey"]
231 [-]: GETGLOBAL R25 K12      ; R25 := 0x0032441c
232 [-]: GETTABLE  R25 R25 K49  ; R25 := R25["UIColor_DarkGrey"]
233 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
234 [-]: CALL      R17 0 1      ; R17(R18,...)
235 [-]: GETGLOBAL R17 K7       ; R17 := 0xae91e43b
236 [-]: SELF      R17 R17 K10  ; R18 := R17; R17 := R17[0xf64b7262]
237 [-]: GETTABLE  R19 R0 K0    ; R19 := R0["mClipName"]
238 [-]: LOADK     R20 K11      ; R20 := "Label"
239 [-]: LOADK     R21 36       ; R21 := 36.000000
240 [-]: GETUPVAL  R22 U4       ; R22 := U4
241 [-]: GETTABLE  R22 R22 K48  ; R22 := R22[0x06d055f9]
242 [-]: EQ        1 R5 K33     ; if R5 == "NONE" then PC := 247
243 [-]: JMP       247          ; PC := 247
244 [-]: NOT       R23 R3       ; R23 := not R3
245 [-]: JMP       248          ; PC := 248
246 [-]: LOADBOOL  R23 0 1      ; R23 := false; PC := 247
247 [-]: LOADBOOL  R23 1 0      ; R23 := true
248 [-]: GETGLOBAL R24 K12      ; R24 := 0x0032441c
249 [-]: GETTABLE  R24 R24 K50  ; R24 := R24["UIColor_White"]
250 [-]: GETGLOBAL R25 K12      ; R25 := 0x0032441c
251 [-]: GETTABLE  R25 R25 K49  ; R25 := R25["UIColor_DarkGrey"]
252 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
253 [-]: CALL      R17 0 1      ; R17(R18,...)
254 [-]: GETGLOBAL R17 K7       ; R17 := 0xae91e43b
255 [-]: SELF      R17 R17 K51  ; R18 := R17; R17 := R17[0xc0a3774b]
256 [-]: GETTABLE  R19 R0 K0    ; R19 := R0["mClipName"]
257 [-]: LOADK     R20 K11      ; R20 := "Label"
258 [-]: LOADK     R21 75       ; R21 := 75.000000
259 [-]: LOADBOOL  R22 1 0      ; R22 := true
260 [-]: CALL      R17 6 1      ; R17(R18,R19,R20,R21,R22)
261 [-]: LOADBOOL  R17 0 0      ; R17 := false
262 [-]: GETGLOBAL R18 K21      ; R18 := mSelected
263 [-]: GETTABLE  R18 R18 K22  ; R18 := R18["Element"]
264 [-]: EQ        1 R18 K1     ; if R18 == nil then PC := 284
265 [-]: JMP       284          ; PC := 284
266 [-]: GETGLOBAL R18 K21      ; R18 := mSelected
267 [-]: GETTABLE  R18 R18 K22  ; R18 := R18["Element"]
268 [-]: GETTABLE  R18 R18 K52  ; R18 := R18["gildRestrictedSlots"]
269 [-]: EQ        1 R18 K1     ; if R18 == nil then PC := 284
270 [-]: JMP       284          ; PC := 284
271 [-]: GETGLOBAL R18 K53      ; R18 := 0xc8802016
272 [-]: GETGLOBAL R19 K21      ; R19 := mSelected
273 [-]: GETTABLE  R19 R19 K22  ; R19 := R19["Element"]
274 [-]: GETTABLE  R19 R19 K52  ; R19 := R19["gildRestrictedSlots"]
275 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
276 [-]: JMP       282          ; PC := 282
277 [-]: GETTABLE  R23 R0 K15   ; R23 := R0["Slot"]
278 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 282
279 [-]: JMP       282          ; PC := 282
280 [-]: LOADBOOL  R17 1 0      ; R17 := true
281 [-]: JMP       284          ; PC := 284
282 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 277; R20 := R21 end
283 [-]: JMP       277          ; PC := 277
284 [-]: TEST      R17 0        ; if not R17 then PC := 293
285 [-]: JMP       293          ; PC := 293
286 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
287 [-]: SELF      R23 R23 K8   ; R24 := R23; R23 := R23[0x42b04007]
288 [-]: LOADK     R25 K54      ; R25 := "/Lotus/Language/Menu/Loadout_ColorLocked"
289 [-]: LOADBOOL  R26 0 0      ; R26 := false
290 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
291 [-]: MOVE      R5 R23       ; R5 := R23
292 [-]: JMP       314          ; PC := 314
293 [-]: EQ        0 R5 K14     ; if R5 ~= "" then PC := 297
294 [-]: JMP       297          ; PC := 297
295 [-]: MOVE      R5 R4        ; R5 := R4
296 [-]: JMP       314          ; PC := 314
297 [-]: EQ        0 R5 K33     ; if R5 ~= "NONE" then PC := 308
298 [-]: JMP       308          ; PC := 308
299 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
300 [-]: SELF      R23 R23 K8   ; R24 := R23; R23 := R23[0x42b04007]
301 [-]: LOADK     R25 K55      ; R25 := "/Lotus/Language/Menu/Cosmetics_NoItem"
302 [-]: LOADBOOL  R26 0 0      ; R26 := false
303 [-]: NEWTABLE  R27 0 1      ; R27 := {}
304 [-]: SETTABLE  R27 K56 R4   ; R27["ITEM"] := R4
305 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
306 [-]: MOVE      R5 R23       ; R5 := R23
307 [-]: JMP       314          ; PC := 314
308 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
309 [-]: SELF      R23 R23 K8   ; R24 := R23; R23 := R23[0x42b04007]
310 [-]: MOVE      R25 R5       ; R25 := R5
311 [-]: LOADBOOL  R26 0 0      ; R26 := false
312 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
313 [-]: MOVE      R5 R23       ; R5 := R23
314 [-]: GETGLOBAL R23 K7       ; R23 := 0xae91e43b
315 [-]: SELF      R23 R23 K57  ; R24 := R23; R23 := R23[0xaade900e]
316 [-]: GETTABLE  R25 R0 K0    ; R25 := R0["mClipName"]
317 [-]: LOADK     R26 11       ; R26 := 11.000000
318 [-]: GETTABLE  R27 R0 K58   ; R27 := R0["Hide"]
319 [-]: EQ        1 R27 K1     ; if R27 == nil then PC := 322
320 [-]: JMP       322          ; PC := 322
321 [-]: LOADBOOL  R27 0 1      ; R27 := false; PC := 322
322 [-]: LOADBOOL  R27 1 0      ; R27 := true
323 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
324 [-]: GETTABLE  R23 R0 K59   ; R23 := R0["Color"]
325 [-]: EQ        1 R23 K1     ; if R23 == nil then PC := 360
326 [-]: JMP       360          ; PC := 360
327 [-]: GETTABLE  R23 R0 K60   ; R23 := R0["PositionX"]
328 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
329 [-]: JMP       360          ; PC := 360
330 [-]: GETTABLE  R23 R0 K61   ; R23 := R0["PositionY"]
331 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
332 [-]: JMP       360          ; PC := 360
333 [-]: GETTABLE  R23 R0 K62   ; R23 := R0["PositionZ"]
334 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
335 [-]: JMP       360          ; PC := 360
336 [-]: GETTABLE  R23 R0 K63   ; R23 := R0["ScaleX"]
337 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
338 [-]: JMP       360          ; PC := 360
339 [-]: GETTABLE  R23 R0 K64   ; R23 := R0["ScaleY"]
340 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
341 [-]: JMP       360          ; PC := 360
342 [-]: GETTABLE  R23 R0 K65   ; R23 := R0["Rotation"]
343 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
344 [-]: JMP       360          ; PC := 360
345 [-]: GETTABLE  R23 R0 K66   ; R23 := R0["Alpha"]
346 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
347 [-]: JMP       360          ; PC := 360
348 [-]: GETTABLE  R23 R0 K67   ; R23 := R0["RotationX"]
349 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
350 [-]: JMP       360          ; PC := 360
351 [-]: GETTABLE  R23 R0 K68   ; R23 := R0["RotationY"]
352 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
353 [-]: JMP       360          ; PC := 360
354 [-]: GETTABLE  R23 R0 K69   ; R23 := R0["RotationZ"]
355 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 360
356 [-]: JMP       360          ; PC := 360
357 [-]: GETTABLE  R23 R0 K70   ; R23 := R0["AttachPart"]
358 [-]: EQ        1 R23 K1     ; if R23 == nil then PC := 361
359 [-]: JMP       361          ; PC := 361
360 [-]: LOADBOOL  R23 0 1      ; R23 := false; PC := 361
361 [-]: LOADBOOL  R23 1 0      ; R23 := true
362 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
363 [-]: SELF      R24 R24 K51  ; R25 := R24; R24 := R24[0xc0a3774b]
364 [-]: GETTABLE  R26 R0 K0    ; R26 := R0["mClipName"]
365 [-]: LOADK     R27 K47      ; R27 := "Arrow"
366 [-]: LOADK     R28 11       ; R28 := 11.000000
367 [-]: GETGLOBAL R29 K24      ; R29 := 0x7b998233
368 [-]: MOVE      R30 R8       ; R30 := R8
369 [-]: CALL      R29 2 2      ; R29 := R29(R30)
370 [-]: TEST      R29 0        ; if not R29 then PC := 380
371 [-]: JMP       380          ; PC := 380
372 [-]: GETTABLE  R29 R0 K71   ; R29 := R0["Level"]
373 [-]: EQ        1 R29 K1     ; if R29 == nil then PC := 378
374 [-]: JMP       378          ; PC := 378
375 [-]: GETTABLE  R29 R0 K59   ; R29 := R0["Color"]
376 [-]: EQ        1 R29 K1     ; if R29 == nil then PC := 379
377 [-]: JMP       379          ; PC := 379
378 [-]: LOADBOOL  R29 0 1      ; R29 := false; PC := 379
379 [-]: LOADBOOL  R29 1 0      ; R29 := true
380 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
381 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
382 [-]: SELF      R24 R24 K51  ; R25 := R24; R24 := R24[0xc0a3774b]
383 [-]: GETTABLE  R26 R0 K0    ; R26 := R0["mClipName"]
384 [-]: LOADK     R27 K72      ; R27 := "UndoBtn"
385 [-]: LOADK     R28 11       ; R28 := 11.000000
386 [-]: LOADBOOL  R29 0 0      ; R29 := false
387 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
388 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
389 [-]: SELF      R24 R24 K51  ; R25 := R24; R24 := R24[0xc0a3774b]
390 [-]: GETTABLE  R26 R0 K0    ; R26 := R0["mClipName"]
391 [-]: LOADK     R27 K73      ; R27 := "RandomColors"
392 [-]: LOADK     R28 11       ; R28 := 11.000000
393 [-]: GETTABLE  R29 R0 K74   ; R29 := R0["RandomizeColors"]
394 [-]: EQ        1 R29 K75    ; if R29 == true then PC := 397
395 [-]: JMP       397          ; PC := 397
396 [-]: LOADBOOL  R29 0 1      ; R29 := false; PC := 397
397 [-]: LOADBOOL  R29 1 0      ; R29 := true
398 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
399 [-]: GETGLOBAL R24 K7       ; R24 := 0xae91e43b
400 [-]: SELF      R24 R24 K51  ; R25 := R24; R24 := R24[0xc0a3774b]
401 [-]: GETTABLE  R26 R0 K0    ; R26 := R0["mClipName"]
402 [-]: LOADK     R27 K76      ; R27 := "FadeIcon"
403 [-]: LOADK     R28 11       ; R28 := 11.000000
404 [-]: GETGLOBAL R29 K24      ; R29 := 0x7b998233
405 [-]: MOVE      R30 R8       ; R30 := R8
406 [-]: CALL      R29 2 2      ; R29 := R29(R30)
407 [-]: NOT       R29 R29      ; R29 := not R29
408 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
409 [-]: GETGLOBAL R24 K24      ; R24 := 0x7b998233
410 [-]: MOVE      R25 R8       ; R25 := R8
411 [-]: CALL      R24 2 2      ; R24 := R24(R25)
412 [-]: TEST      R24 1        ; if R24 then PC := 437
413 [-]: JMP       437          ; PC := 437
414 [-]: LOADK     R24 180      ; R24 := 180.000000
415 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
416 [-]: SELF      R25 R25 K10  ; R26 := R25; R25 := R25[0xf64b7262]
417 [-]: GETTABLE  R27 R0 K0    ; R27 := R0["mClipName"]
418 [-]: LOADK     R28 K76      ; R28 := "FadeIcon"
419 [-]: LOADK     R29 12       ; R29 := 12.000000
420 [-]: MOVE      R30 R24      ; R30 := R24
421 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
422 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
423 [-]: SELF      R25 R25 K10  ; R26 := R25; R25 := R25[0xf64b7262]
424 [-]: GETTABLE  R27 R0 K0    ; R27 := R0["mClipName"]
425 [-]: LOADK     R28 K76      ; R28 := "FadeIcon"
426 [-]: LOADK     R29 13       ; R29 := 13.000000
427 [-]: MOVE      R30 R24      ; R30 := R24
428 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
429 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
430 [-]: SELF      R25 R25 K77  ; R26 := R25; R25 := R25[0xef99134f]
431 [-]: GETTABLE  R27 R0 K0    ; R27 := R0["mClipName"]
432 [-]: LOADK     R28 K78      ; R28 := ".FadeIcon"
433 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
434 [-]: MOVE      R28 R8       ; R28 := R8
435 [-]: GETGLOBAL R29 K79      ; R29 := 0x8e826993
436 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
437 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
438 [-]: SELF      R25 R25 K80  ; R26 := R25; R25 := R25[0xd5181643]
439 [-]: GETTABLE  R27 R0 K0    ; R27 := R0["mClipName"]
440 [-]: LOADK     R28 K81      ; R28 := ".DefaultColors"
441 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
442 [-]: GETGLOBAL R28 K12      ; R28 := 0x0032441c
443 [-]: GETTABLE  R28 R28 K82  ; R28 := R28["UIMaterial_Plain"]
444 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
445 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
446 [-]: SELF      R25 R25 K51  ; R26 := R25; R25 := R25[0xc0a3774b]
447 [-]: GETTABLE  R27 R0 K0    ; R27 := R0["mClipName"]
448 [-]: LOADK     R28 K83      ; R28 := "DefaultColors"
449 [-]: LOADK     R29 11       ; R29 := 11.000000
450 [-]: GETTABLE  R30 R0 K83   ; R30 := R0["DefaultColors"]
451 [-]: EQ        1 R30 K75    ; if R30 == true then PC := 459
452 [-]: JMP       459          ; PC := 459
453 [-]: GETTABLE  R30 R0 K84   ; R30 := R0["DefaultSigilProps"]
454 [-]: EQ        1 R30 K75    ; if R30 == true then PC := 459
455 [-]: JMP       459          ; PC := 459
456 [-]: MOVE      R30 R23      ; R30 := R23
457 [-]: JMP       460          ; PC := 460
458 [-]: LOADBOOL  R30 0 1      ; R30 := false; PC := 459
459 [-]: LOADBOOL  R30 1 0      ; R30 := true
460 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
461 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
462 [-]: SELF      R25 R25 K85  ; R26 := R25; R25 := R25[0x19ad3f57]
463 [-]: GETTABLE  R27 R0 K0    ; R27 := R0["mClipName"]
464 [-]: LOADK     R28 K83      ; R28 := "DefaultColors"
465 [-]: LOADK     R29 K86      ; R29 := "noMenuSelection"
466 [-]: GETTABLE  R30 R0 K83   ; R30 := R0["DefaultColors"]
467 [-]: EQ        1 R30 K75    ; if R30 == true then PC := 473
468 [-]: JMP       473          ; PC := 473
469 [-]: GETTABLE  R30 R0 K84   ; R30 := R0["DefaultSigilProps"]
470 [-]: EQ        1 R30 K75    ; if R30 == true then PC := 473
471 [-]: JMP       473          ; PC := 473
472 [-]: LOADBOOL  R30 0 1      ; R30 := false; PC := 473
473 [-]: LOADBOOL  R30 1 0      ; R30 := true
474 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
475 [-]: GETGLOBAL R25 K7       ; R25 := 0xae91e43b
476 [-]: SELF      R25 R25 K51  ; R26 := R25; R25 := R25[0xc0a3774b]
477 [-]: GETTABLE  R27 R0 K0    ; R27 := R0["mClipName"]
478 [-]: LOADK     R28 K87      ; R28 := "CopyColors"
479 [-]: LOADK     R29 11       ; R29 := 11.000000
480 [-]: GETTABLE  R30 R0 K87   ; R30 := R0["CopyColors"]
481 [-]: EQ        0 R30 K1     ; if R30 ~= nil then PC := 484
482 [-]: JMP       484          ; PC := 484
483 [-]: LOADBOOL  R30 0 1      ; R30 := false; PC := 484
484 [-]: LOADBOOL  R30 1 0      ; R30 := true
485 [-]: CALL      R25 6 1      ; R25(R26,R27,R28,R29,R30)
486 [-]: LOADK     R25 100      ; R25 := 100.000000
487 [-]: LOADK     R26 122      ; R26 := 122.000000
488 [-]: LOADK     R27 134      ; R27 := 134.000000
489 [-]: TEST      R23 0        ; if not R23 then PC := 507
490 [-]: JMP       507          ; PC := 507
491 [-]: LOADK     R26 130      ; R26 := 130.000000
492 [-]: GETUPVAL  R28 U4       ; R28 := U4
493 [-]: GETTABLE  R28 R28 K48  ; R28 := R28[0x06d055f9]
494 [-]: GETTABLE  R29 R0 K88   ; R29 := R0["ColorInitialized"]
495 [-]: LOADK     R30 100      ; R30 := 100.000000
496 [-]: LOADK     R31 25       ; R31 := 25.000000
497 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
498 [-]: MOVE      R25 R28      ; R25 := R28
499 [-]: LOADK     R27 100      ; R27 := 100.000000
500 [-]: GETGLOBAL R28 K7       ; R28 := 0xae91e43b
501 [-]: SELF      R28 R28 K10  ; R29 := R28; R28 := R28[0xf64b7262]
502 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["mClipName"]
503 [-]: LOADK     R31 K72      ; R31 := "UndoBtn"
504 [-]: LOADK     R32 0        ; R32 := 0.000000
505 [-]: LOADK     R33 45       ; R33 := 45.000000
506 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
507 [-]: GETGLOBAL R28 K7       ; R28 := 0xae91e43b
508 [-]: SELF      R28 R28 K10  ; R29 := R28; R28 := R28[0xf64b7262]
509 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["mClipName"]
510 [-]: LOADK     R31 K83      ; R31 := "DefaultColors"
511 [-]: LOADK     R32 10       ; R32 := 10.000000
512 [-]: MOVE      R33 R25      ; R33 := R25
513 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
514 [-]: GETGLOBAL R28 K7       ; R28 := 0xae91e43b
515 [-]: SELF      R28 R28 K10  ; R29 := R28; R28 := R28[0xf64b7262]
516 [-]: GETTABLE  R30 R0 K0    ; R30 := R0["mClipName"]
517 [-]: LOADK     R31 K83      ; R31 := "DefaultColors"
518 [-]: LOADK     R32 0        ; R32 := 0.000000
519 [-]: MOVE      R33 R26      ; R33 := R26
520 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
521 [-]: TEST      R23 0        ; if not R23 then PC := 671
522 [-]: JMP       671          ; PC := 671
523 [-]: GETGLOBAL R28 K2       ; R28 := mLists
524 [-]: GETTABLE  R28 R28 K3   ; R28 := R28["mCosmeticsList"]
525 [-]: GETTABLE  R28 R28 K89  ; R28 := R28["mCurrLevel"]
526 [-]: GETGLOBAL R29 K2       ; R29 := mLists
527 [-]: GETTABLE  R29 R29 K3   ; R29 := R29["mCosmeticsList"]
528 [-]: GETTABLE  R29 R29 K90  ; R29 := R29["DEFAULT"]
529 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 671
530 [-]: JMP       671          ; PC := 671
531 [-]: GETGLOBAL R28 K21      ; R28 := mSelected
532 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["Element"]
533 [-]: GETTABLE  R28 R28 K44  ; R28 := R28["LoadOutId"]
534 [-]: EQ        0 R28 K91    ; if R28 ~= 0.000000 then PC := 671
535 [-]: JMP       671          ; PC := 671
536 [-]: GETTABLE  R28 R0 K35   ; R28 := R0["Attribute"]
537 [-]: EQ        0 R28 K92    ; if R28 ~= 4.000000 then PC := 671
538 [-]: JMP       671          ; PC := 671
539 [-]: GETUPVAL  R28 U3       ; R28 := U3
540 [-]: GETGLOBAL R29 K21      ; R29 := mSelected
541 [-]: GETTABLE  R29 R29 K22  ; R29 := R29["Element"]
542 [-]: GETTABLE  R29 R29 K43  ; R29 := R29["LoadOutType"]
543 [-]: GETGLOBAL R30 K21      ; R30 := mSelected
544 [-]: GETTABLE  R30 R30 K22  ; R30 := R30["Element"]
545 [-]: GETTABLE  R30 R30 K44  ; R30 := R30["LoadOutId"]
546 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
547 [-]: GETGLOBAL R29 K24      ; R29 := 0x7b998233
548 [-]: MOVE      R30 R28      ; R30 := R28
549 [-]: CALL      R29 2 2      ; R29 := R29(R30)
550 [-]: TEST      R29 1        ; if R29 then PC := 671
551 [-]: JMP       671          ; PC := 671
552 [-]: GETGLOBAL R29 K93      ; R29 := 0x2d0fad09
553 [-]: LOADK     R30 K94      ; R30 := "Lotus.Scripts.Effects.EnergyElement"
554 [-]: CALL      R29 2 2      ; R29 := R29(R30)
555 [-]: LOADNIL   R30 R30      ; R30 := nil
556 [-]: LOADBOOL  R31 0 0      ; R31 := false
557 [-]: GETTABLE  R32 R29 K95  ; R32 := R29[0x542ac0a6]
558 [-]: CALL      R32 1 2      ; R32 := R32()
559 [-]: SELF      R33 R28 K96  ; R34 := R28; R33 := R28[0xf2deaf69]
560 [-]: GETGLOBAL R35 K97      ; R35 := 0xe3ae0932
561 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
562 [-]: TEST      R33 1        ; if R33 then PC := 576
563 [-]: JMP       576          ; PC := 576
564 [-]: SELF      R33 R28 K96  ; R34 := R28; R33 := R28[0xf2deaf69]
565 [-]: GETGLOBAL R35 K98      ; R35 := gPowerSuitType
566 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
567 [-]: TEST      R33 0        ; if not R33 then PC := 587
568 [-]: JMP       587          ; PC := 587
569 [-]: GETGLOBAL R33 K24      ; R33 := 0x7b998233
570 [-]: SELF      R34 R28 K99  ; R35 := R28; R34 := R28[0x689412a5]
571 [-]: GETGLOBAL R36 K100     ; R36 := 0x19d808dc
572 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
573 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
574 [-]: TEST      R33 1        ; if R33 then PC := 587
575 [-]: JMP       587          ; PC := 587
576 [-]: GETGLOBAL R33 K93      ; R33 := 0x2d0fad09
577 [-]: LOADK     R34 K101     ; R34 := "Lotus.Scripts.Effects.Polarity"
578 [-]: CALL      R33 2 2      ; R33 := R33(R34)
579 [-]: GETTABLE  R34 R33 K102 ; R34 := R33[0xeeb4acdd]
580 [-]: GETTABLE  R35 R0 K59   ; R35 := R0["Color"]
581 [-]: CALL      R34 2 2      ; R34 := R34(R35)
582 [-]: TEST      R34 0        ; if not R34 then PC := 586
583 [-]: JMP       586          ; PC := 586
584 [-]: LOADK     R30 K103     ; R30 := "YING"
585 [-]: JMP       587          ; PC := 587
586 [-]: LOADK     R30 K104     ; R30 := "YANG"
587 [-]: LOADNIL   R34 R34      ; R34 := nil
588 [-]: SELF      R35 R28 K96  ; R36 := R28; R35 := R28[0xf2deaf69]
589 [-]: GETGLOBAL R37 K98      ; R37 := gPowerSuitType
590 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
591 [-]: TEST      R35 0        ; if not R35 then PC := 597
592 [-]: JMP       597          ; PC := 597
593 [-]: SELF      R35 R28 K99  ; R36 := R28; R35 := R28[0x689412a5]
594 [-]: GETGLOBAL R37 K105     ; R37 := 0xf893daea
595 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
596 [-]: MOVE      R34 R35      ; R34 := R35
597 [-]: GETGLOBAL R35 K24      ; R35 := 0x7b998233
598 [-]: MOVE      R36 R34      ; R36 := R34
599 [-]: CALL      R35 2 2      ; R35 := R35(R36)
600 [-]: TEST      R35 1        ; if R35 then PC := 604
601 [-]: JMP       604          ; PC := 604
602 [-]: LOADBOOL  R31 1 0      ; R31 := true
603 [-]: JMP       643          ; PC := 643
604 [-]: LOADNIL   R34 R34      ; R34 := nil
605 [-]: SELF      R35 R28 K96  ; R36 := R28; R35 := R28[0xf2deaf69]
606 [-]: GETGLOBAL R37 K98      ; R37 := gPowerSuitType
607 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
608 [-]: TEST      R35 0        ; if not R35 then PC := 623
609 [-]: JMP       623          ; PC := 623
610 [-]: SELF      R35 R28 K99  ; R36 := R28; R35 := R28[0x689412a5]
611 [-]: GETGLOBAL R37 K106     ; R37 := 0x3f3e290f
612 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
613 [-]: MOVE      R34 R35      ; R34 := R35
614 [-]: GETGLOBAL R35 K24      ; R35 := 0x7b998233
615 [-]: MOVE      R36 R34      ; R36 := R34
616 [-]: CALL      R35 2 2      ; R35 := R35(R36)
617 [-]: TEST      R35 0        ; if not R35 then PC := 623
618 [-]: JMP       623          ; PC := 623
619 [-]: SELF      R35 R28 K99  ; R36 := R28; R35 := R28[0x689412a5]
620 [-]: GETGLOBAL R37 K107     ; R37 := 0x50208c96
621 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
622 [-]: MOVE      R34 R35      ; R34 := R35
623 [-]: GETGLOBAL R35 K24      ; R35 := 0x7b998233
624 [-]: MOVE      R36 R34      ; R36 := R34
625 [-]: CALL      R35 2 2      ; R35 := R35(R36)
626 [-]: TEST      R35 1        ; if R35 then PC := 643
627 [-]: JMP       643          ; PC := 643
628 [-]: SELF      R35 R28 K108 ; R36 := R28; R35 := R28[0x73712b9c]
629 [-]: MOVE      R37 R34      ; R37 := R34
630 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
631 [-]: SELF      R36 R28 K109 ; R37 := R28; R36 := R28[0x5063edc3]
632 [-]: MOVE      R38 R35      ; R38 := R35
633 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
634 [-]: LT        0 K91 R36    ; if 0.000000 >= R36 then PC := 643
635 [-]: JMP       643          ; PC := 643
636 [-]: SELF      R36 R28 K110 ; R37 := R28; R36 := R28[0x75ecaf0b]
637 [-]: MOVE      R38 R35      ; R38 := R35
638 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
639 [-]: EQ        0 R36 K111   ; if R36 ~= 1.000000 then PC := 643
640 [-]: JMP       643          ; PC := 643
641 [-]: LOADBOOL  R31 1 0      ; R31 := true
642 [-]: LOADK     R32 5        ; R32 := 5.000000
643 [-]: TEST      R31 0        ; if not R31 then PC := 658
644 [-]: JMP       658          ; PC := 658
645 [-]: GETUPVAL  R36 U4       ; R36 := U4
646 [-]: GETTABLE  R36 R36 K48  ; R36 := R36[0x06d055f9]
647 [-]: GETTABLE  R37 R0 K88   ; R37 := R0["ColorInitialized"]
648 [-]: GETTABLE  R38 R29 K113 ; R38 := R29[0x22e0c5f3]
649 [-]: GETTABLE  R39 R0 K59   ; R39 := R0["Color"]
650 [-]: CALL      R38 2 2      ; R38 := R38(R39)
651 [-]: MOVE      R39 R32      ; R39 := R32
652 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
653 [-]: GETUPVAL  R37 U5       ; R37 := U5
654 [-]: GETTABLE  R37 R37 K114 ; R37 := R37[0xf851aa35]
655 [-]: MOVE      R38 R36      ; R38 := R36
656 [-]: CALL      R37 2 2      ; R37 := R37(R38)
657 [-]: MOVE      R30 R37      ; R30 := R37
658 [-]: EQ        1 R30 K1     ; if R30 == nil then PC := 671
659 [-]: JMP       671          ; PC := 671
660 [-]: MOVE      R37 R5       ; R37 := R5
661 [-]: LOADK     R38 K115     ; R38 := " "
662 [-]: GETGLOBAL R39 K7       ; R39 := 0xae91e43b
663 [-]: SELF      R39 R39 K8   ; R40 := R39; R39 := R39[0x42b04007]
664 [-]: LOADK     R41 K116     ; R41 := "<"
665 [-]: MOVE      R42 R30      ; R42 := R30
666 [-]: LOADK     R43 K117     ; R43 := ">"
667 [-]: CONCAT    R41 R41 R43  ; R41 := R41 .. R42 .. R43
668 [-]: LOADBOOL  R42 1 0      ; R42 := true
669 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
670 [-]: CONCAT    R5 R37 R39   ; R5 := R37 .. R38 .. R39
671 [-]: GETTABLE  R37 R0 K118  ; R37 := R0["ColorList"]
672 [-]: EQ        0 R37 K1     ; if R37 ~= nil then PC := 690
673 [-]: JMP       690          ; PC := 690
674 [-]: GETUPVAL  R37 U6       ; R37 := U6
675 [-]: GETTABLE  R37 R37 K119 ; R37 := R37[0x9383bc56]
676 [-]: GETGLOBAL R38 K7       ; R38 := 0xae91e43b
677 [-]: GETTABLE  R39 R0 K0    ; R39 := R0["mClipName"]
678 [-]: LOADK     R40 K120     ; R40 := ".ColorList.Color"
679 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
680 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
681 [-]: SETTABLE  R0 K118 R37  ; R0["ColorList"] := R37
682 [-]: GETTABLE  R37 R0 K118  ; R37 := R0["ColorList"]
683 [-]: SETTABLE  R37 K121 K91 ; R37["mForcedVerticalSeparation"] := 0.000000
684 [-]: GETTABLE  R37 R0 K118  ; R37 := R0["ColorList"]
685 [-]: SETTABLE  R37 K122 K123; R37["mForcedHorizontalSeparation"] := 26.000000
686 [-]: GETTABLE  R37 R0 K118  ; R37 := R0["ColorList"]
687 [-]: CLOSURE   R38 0        ; R38 := closure(Function #149.7.1)
688 [-]: GETUPVAL  R0 U4        ; R0 := U4
689 [-]: SETTABLE  R37 K124 R38 ; R37["mElementDrawCallback"] := R38
690 [-]: GETGLOBAL R37 K7       ; R37 := 0xae91e43b
691 [-]: SELF      R37 R37 K10  ; R38 := R37; R37 := R37[0xf64b7262]
692 [-]: GETTABLE  R39 R0 K0    ; R39 := R0["mClipName"]
693 [-]: LOADK     R40 K118     ; R40 := "ColorList"
694 [-]: LOADK     R41 0        ; R41 := 0.000000
695 [-]: GETUPVAL  R42 U4       ; R42 := U4
696 [-]: GETTABLE  R42 R42 K48  ; R42 := R42[0x06d055f9]
697 [-]: GETTABLE  R43 R0 K125  ; R43 := R0["Color2"]
698 [-]: EQ        1 R43 K1     ; if R43 == nil then PC := 701
699 [-]: JMP       701          ; PC := 701
700 [-]: LOADBOOL  R43 0 1      ; R43 := false; PC := 701
701 [-]: LOADBOOL  R43 1 0      ; R43 := true
702 [-]: LOADK     R44 0        ; R44 := 0.000000
703 [-]: LOADK     R45 -13      ; R45 := -13.000000
704 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
705 [-]: ADD       R42 R27 R42  ; R42 := R27 + R42
706 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
707 [-]: GETTABLE  R37 R0 K118  ; R37 := R0["ColorList"]
708 [-]: SELF      R37 R37 K126 ; R38 := R37; R37 := R37[0x7c09c373]
709 [-]: LOADBOOL  R39 1 0      ; R39 := true
710 [-]: LOADBOOL  R40 1 0      ; R40 := true
711 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
712 [-]: TEST      R23 0        ; if not R23 then PC := 757
713 [-]: JMP       757          ; PC := 757
714 [-]: GETUPVAL  R37 U4       ; R37 := U4
715 [-]: GETTABLE  R37 R37 K48  ; R37 := R37[0x06d055f9]
716 [-]: GETTABLE  R38 R0 K125  ; R38 := R0["Color2"]
717 [-]: EQ        1 R38 K1     ; if R38 == nil then PC := 720
718 [-]: JMP       720          ; PC := 720
719 [-]: LOADBOOL  R38 0 1      ; R38 := false; PC := 720
720 [-]: LOADBOOL  R38 1 0      ; R38 := true
721 [-]: LOADK     R39 100      ; R39 := 100.000000
722 [-]: LOADK     R40 45       ; R40 := 45.000000
723 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
724 [-]: GETTABLE  R38 R0 K118  ; R38 := R0["ColorList"]
725 [-]: SELF      R38 R38 K127 ; R39 := R38; R38 := R38[0xbad4316f]
726 [-]: NEWTABLE  R40 0 4      ; R40 := {}
727 [-]: SETTABLE  R40 K128 K75 ; R40["NoMenuSelection"] := true
728 [-]: SETTABLE  R40 K63 R37  ; R40["ScaleX"] := R37
729 [-]: GETTABLE  R41 R0 K88   ; R41 := R0["ColorInitialized"]
730 [-]: NOT       R41 R41      ; R41 := not R41
731 [-]: SETTABLE  R40 K129 R41 ; R40["Default"] := R41
732 [-]: GETTABLE  R41 R0 K59   ; R41 := R0["Color"]
733 [-]: SETTABLE  R40 K59 R41  ; R40["Color"] := R41
734 [-]: LOADBOOL  R41 1 0      ; R41 := true
735 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
736 [-]: GETTABLE  R38 R0 K125  ; R38 := R0["Color2"]
737 [-]: EQ        1 R38 K1     ; if R38 == nil then PC := 751
738 [-]: JMP       751          ; PC := 751
739 [-]: GETTABLE  R38 R0 K118  ; R38 := R0["ColorList"]
740 [-]: SELF      R38 R38 K127 ; R39 := R38; R38 := R38[0xbad4316f]
741 [-]: NEWTABLE  R40 0 4      ; R40 := {}
742 [-]: SETTABLE  R40 K128 K130; R40["NoMenuSelection"] := false
743 [-]: SETTABLE  R40 K63 R37  ; R40["ScaleX"] := R37
744 [-]: GETTABLE  R41 R0 K131  ; R41 := R0["ColorInitialized2"]
745 [-]: NOT       R41 R41      ; R41 := not R41
746 [-]: SETTABLE  R40 K129 R41 ; R40["Default"] := R41
747 [-]: GETTABLE  R41 R0 K125  ; R41 := R0["Color2"]
748 [-]: SETTABLE  R40 K59 R41  ; R40["Color"] := R41
749 [-]: LOADBOOL  R41 1 0      ; R41 := true
750 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
751 [-]: GETTABLE  R38 R0 K118  ; R38 := R0["ColorList"]
752 [-]: SELF      R38 R38 K132 ; R39 := R38; R38 := R38[0x71e9ac81]
753 [-]: LOADNIL   R40 R40      ; R40 := nil
754 [-]: LOADBOOL  R41 1 0      ; R41 := true
755 [-]: LOADBOOL  R42 1 0      ; R42 := true
756 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
757 [-]: GETGLOBAL R38 K7       ; R38 := 0xae91e43b
758 [-]: SELF      R38 R38 K51  ; R39 := R38; R38 := R38[0xc0a3774b]
759 [-]: GETTABLE  R40 R0 K0    ; R40 := R0["mClipName"]
760 [-]: LOADK     R41 K133     ; R41 := "TotalColorCost"
761 [-]: LOADK     R42 11       ; R42 := 11.000000
762 [-]: LOADBOOL  R43 0 0      ; R43 := false
763 [-]: CALL      R38 6 1      ; R38(R39,R40,R41,R42,R43)
764 [-]: EQ        1 R7 K1      ; if R7 == nil then PC := 796
765 [-]: JMP       796          ; PC := 796
766 [-]: SELF      R38 R7 K134  ; R39 := R7; R38 := R7[0xba568eef]
767 [-]: CALL      R38 2 2      ; R38 := R38(R39)
768 [-]: TEST      R38 0        ; if not R38 then PC := 796
769 [-]: JMP       796          ; PC := 796
770 [-]: GETGLOBAL R38 K112     ; R38 := 0x34291f5c
771 [-]: GETTABLE  R38 R38 K135 ; R38 := R38[0x397b920f]
772 [-]: GETTABLE  R39 R7 K136  ; R39 := R7["mExpiry"]
773 [-]: GETTABLE  R39 R39 K137 ; R39 := R39["sec"]
774 [-]: CALL      R38 2 2      ; R38 := R38(R39)
775 [-]: LOADNIL   R39 R39      ; R39 := nil
776 [-]: LE        0 R38 K91    ; if R38 > 0.000000 then PC := 785
777 [-]: JMP       785          ; PC := 785
778 [-]: GETGLOBAL R40 K7       ; R40 := 0xae91e43b
779 [-]: SELF      R40 R40 K8   ; R41 := R40; R40 := R40[0x42b04007]
780 [-]: LOADK     R42 K138     ; R42 := "/Lotus/Language/Menu/Expired"
781 [-]: LOADBOOL  R43 0 0      ; R43 := false
782 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
783 [-]: MOVE      R39 R40      ; R39 := R40
784 [-]: JMP       790          ; PC := 790
785 [-]: GETUPVAL  R40 U5       ; R40 := U5
786 [-]: GETTABLE  R40 R40 K139 ; R40 := R40[0xcfe63447]
787 [-]: MOVE      R41 R38      ; R41 := R38
788 [-]: CALL      R40 2 2      ; R40 := R40(R41)
789 [-]: MOVE      R39 R40      ; R39 := R40
790 [-]: GETGLOBAL R40 K140     ; R40 := Icons
791 [-]: GETTABLE  R40 R40 K141 ; R40 := R40["TIMER"]
792 [-]: MOVE      R41 R39      ; R41 := R39
793 [-]: LOADK     R42 K142     ; R42 := " l "
794 [-]: MOVE      R43 R5       ; R43 := R5
795 [-]: CONCAT    R5 R40 R43   ; R5 := R40 .. R41 .. R42 .. R43
796 [-]: GETUPVAL  R40 U4       ; R40 := U4
797 [-]: GETTABLE  R40 R40 K143 ; R40 := R40[0xc340ce91]
798 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
799 [-]: GETTABLE  R42 R0 K0    ; R42 := R0["mClipName"]
800 [-]: LOADK     R43 K144     ; R43 := ".Label"
801 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
802 [-]: GETGLOBAL R43 K145     ; R43 := 0x5f0788c4
803 [-]: MOVE      R44 R5       ; R44 := R5
804 [-]: CALL      R43 2 2      ; R43 := R43(R44)
805 [-]: LOADK     R44 K146     ; R44 := "..."
806 [-]: CALL      R40 5 1      ; R40(R41,R42,R43,R44)
807 [-]: GETGLOBAL R40 K147     ; R40 := 0x03f57322
808 [-]: LOADK     R41 K148     ; R41 := "0xEFEFEF"
809 [-]: CALL      R40 2 2      ; R40 := R40(R41)
810 [-]: TEST      R2 0         ; if not R2 then PC := 814
811 [-]: JMP       814          ; PC := 814
812 [-]: GETGLOBAL R41 K12      ; R41 := 0x0032441c
813 [-]: GETTABLE  R40 R41 K149 ; R40 := R41["UIColor_Yellow"]
814 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
815 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
816 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
817 [-]: LOADK     R44 K150     ; R44 := "Bg"
818 [-]: LOADK     R45 9        ; R45 := 9.000000
819 [-]: MOVE      R46 R40      ; R46 := R40
820 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
821 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
822 [-]: SELF      R41 R41 K80  ; R42 := R41; R41 := R41[0xd5181643]
823 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
824 [-]: LOADK     R44 K151     ; R44 := ".Bg"
825 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
826 [-]: GETGLOBAL R44 K12      ; R44 := 0x0032441c
827 [-]: GETTABLE  R44 R44 K152 ; R44 := R44["UIMaterial_SmoothEdgeNoDepthTest"]
828 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
829 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
830 [-]: SELF      R41 R41 K51  ; R42 := R41; R41 := R41[0xc0a3774b]
831 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
832 [-]: LOADK     R44 K153     ; R44 := "TopTitle"
833 [-]: LOADK     R45 11       ; R45 := 11.000000
834 [-]: GETTABLE  R46 R0 K153  ; R46 := R0["TopTitle"]
835 [-]: EQ        0 R46 K1     ; if R46 ~= nil then PC := 838
836 [-]: JMP       838          ; PC := 838
837 [-]: LOADBOOL  R46 0 1      ; R46 := false; PC := 838
838 [-]: LOADBOOL  R46 1 0      ; R46 := true
839 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
840 [-]: GETTABLE  R41 R0 K153  ; R41 := R0["TopTitle"]
841 [-]: EQ        1 R41 K1     ; if R41 == nil then PC := 850
842 [-]: JMP       850          ; PC := 850
843 [-]: GETUPVAL  R41 U7       ; R41 := U7
844 [-]: GETTABLE  R42 R0 K0    ; R42 := R0["mClipName"]
845 [-]: LOADK     R43 K154     ; R43 := ".TopTitle"
846 [-]: CONCAT    R42 R42 R43  ; R42 := R42 .. R43
847 [-]: GETTABLE  R43 R0 K153  ; R43 := R0["TopTitle"]
848 [-]: LOADK     R44 394      ; R44 := 394.000000
849 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
850 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
851 [-]: SELF      R41 R41 K51  ; R42 := R41; R41 := R41[0xc0a3774b]
852 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
853 [-]: LOADK     R44 K155     ; R44 := "MiddleLine"
854 [-]: LOADK     R45 11       ; R45 := 11.000000
855 [-]: GETTABLE  R46 R0 K156  ; R46 := R0["HasMiddleLine"]
856 [-]: EQ        1 R46 K75    ; if R46 == true then PC := 859
857 [-]: JMP       859          ; PC := 859
858 [-]: LOADBOOL  R46 0 1      ; R46 := false; PC := 859
859 [-]: LOADBOOL  R46 1 0      ; R46 := true
860 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
861 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
862 [-]: SELF      R41 R41 K80  ; R42 := R41; R41 := R41[0xd5181643]
863 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
864 [-]: LOADK     R44 K157     ; R44 := ".MiddleLine"
865 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
866 [-]: GETGLOBAL R44 K12      ; R44 := 0x0032441c
867 [-]: GETTABLE  R44 R44 K152 ; R44 := R44["UIMaterial_SmoothEdgeNoDepthTest"]
868 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
869 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
870 [-]: SELF      R41 R41 K51  ; R42 := R41; R41 := R41[0xc0a3774b]
871 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
872 [-]: LOADK     R44 K158     ; R44 := "BottomLine"
873 [-]: LOADK     R45 11       ; R45 := 11.000000
874 [-]: GETTABLE  R46 R0 K159  ; R46 := R0["HasBottomLine"]
875 [-]: EQ        1 R46 K75    ; if R46 == true then PC := 878
876 [-]: JMP       878          ; PC := 878
877 [-]: LOADBOOL  R46 0 1      ; R46 := false; PC := 878
878 [-]: LOADBOOL  R46 1 0      ; R46 := true
879 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
880 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
881 [-]: SELF      R41 R41 K80  ; R42 := R41; R41 := R41[0xd5181643]
882 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
883 [-]: LOADK     R44 K160     ; R44 := ".BottomLine"
884 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
885 [-]: GETGLOBAL R44 K12      ; R44 := 0x0032441c
886 [-]: GETTABLE  R44 R44 K82  ; R44 := R44["UIMaterial_Plain"]
887 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
888 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
889 [-]: SELF      R41 R41 K51  ; R42 := R41; R41 := R41[0xc0a3774b]
890 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
891 [-]: LOADK     R44 K161     ; R44 := "ValueSelector"
892 [-]: LOADK     R45 11       ; R45 := 11.000000
893 [-]: GETTABLE  R46 R0 K162  ; R46 := R0["IsValueSelector"]
894 [-]: EQ        1 R46 K75    ; if R46 == true then PC := 897
895 [-]: JMP       897          ; PC := 897
896 [-]: LOADBOOL  R46 0 1      ; R46 := false; PC := 897
897 [-]: LOADBOOL  R46 1 0      ; R46 := true
898 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
899 [-]: GETTABLE  R41 R0 K162  ; R41 := R0["IsValueSelector"]
900 [-]: TEST      R41 0        ; if not R41 then PC := 1033
901 [-]: JMP       1033         ; PC := 1033
902 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
903 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
904 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
905 [-]: LOADK     R44 K163     ; R44 := "ValueSelector.LeftArrow"
906 [-]: LOADK     R45 9        ; R45 := 9.000000
907 [-]: GETGLOBAL R46 K12      ; R46 := 0x0032441c
908 [-]: GETTABLE  R46 R46 K164 ; R46 := R46["UIColor_Black"]
909 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
910 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
911 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
912 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
913 [-]: LOADK     R44 K165     ; R44 := "ValueSelector.RightArrow"
914 [-]: LOADK     R45 9        ; R45 := 9.000000
915 [-]: GETGLOBAL R46 K12      ; R46 := 0x0032441c
916 [-]: GETTABLE  R46 R46 K164 ; R46 := R46["UIColor_Black"]
917 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
918 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
919 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
920 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
921 [-]: LOADK     R44 K166     ; R44 := "ValueSelector.Back"
922 [-]: LOADK     R45 9        ; R45 := 9.000000
923 [-]: GETGLOBAL R46 K12      ; R46 := 0x0032441c
924 [-]: GETTABLE  R46 R46 K164 ; R46 := R46["UIColor_Black"]
925 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
926 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
927 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
928 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
929 [-]: LOADK     R44 K167     ; R44 := "ValueSelector.Front"
930 [-]: LOADK     R45 9        ; R45 := 9.000000
931 [-]: GETGLOBAL R46 K12      ; R46 := 0x0032441c
932 [-]: GETTABLE  R46 R46 K50  ; R46 := R46["UIColor_White"]
933 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
934 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
935 [-]: SELF      R41 R41 K168 ; R42 := R41; R41 := R41[0x1e5b5cfe]
936 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
937 [-]: LOADK     R44 K169     ; R44 := ".ValueSelector.LeftBtn"
938 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
939 [-]: LOADK     R44 K170     ; R44 := "VSFocus"
940 [-]: LOADK     R45 K171     ; R45 := "VSReset"
941 [-]: LOADK     R46 K171     ; R46 := "VSReset"
942 [-]: LOADK     R47 K172     ; R47 := "VSDecrement"
943 [-]: CALL      R41 7 1      ; R41(R42,R43,R44,R45,R46,R47)
944 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
945 [-]: SELF      R41 R41 K168 ; R42 := R41; R41 := R41[0x1e5b5cfe]
946 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
947 [-]: LOADK     R44 K173     ; R44 := ".ValueSelector.RightBtn"
948 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
949 [-]: LOADK     R44 K170     ; R44 := "VSFocus"
950 [-]: LOADK     R45 K171     ; R45 := "VSReset"
951 [-]: LOADK     R46 K171     ; R46 := "VSReset"
952 [-]: LOADK     R47 K174     ; R47 := "VSIncrement"
953 [-]: CALL      R41 7 1      ; R41(R42,R43,R44,R45,R46,R47)
954 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
955 [-]: SELF      R41 R41 K168 ; R42 := R41; R41 := R41[0x1e5b5cfe]
956 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
957 [-]: LOADK     R44 K175     ; R44 := ".ValueSelector.SliderBtn"
958 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
959 [-]: LOADK     R44 K170     ; R44 := "VSFocus"
960 [-]: LOADK     R45 K171     ; R45 := "VSReset"
961 [-]: LOADK     R46 K171     ; R46 := "VSReset"
962 [-]: LOADK     R47 K176     ; R47 := "VSActivateSlider"
963 [-]: CALL      R41 7 1      ; R41(R42,R43,R44,R45,R46,R47)
964 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
965 [-]: SELF      R41 R41 K168 ; R42 := R41; R41 := R41[0x1e5b5cfe]
966 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
967 [-]: LOADK     R44 K177     ; R44 := ".ValueSelector.GoToBtn"
968 [-]: CONCAT    R43 R43 R44  ; R43 := R43 .. R44
969 [-]: LOADK     R44 K170     ; R44 := "VSFocus"
970 [-]: LOADNIL   R45 R46      ; R45 := R46 := nil
971 [-]: LOADK     R47 K178     ; R47 := "VSGoTo"
972 [-]: CALL      R41 7 1      ; R41(R42,R43,R44,R45,R46,R47)
973 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
974 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
975 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
976 [-]: LOADK     R44 K179     ; R44 := "ValueSelector.LeftBtn"
977 [-]: LOADK     R45 85       ; R45 := 85.000000
978 [-]: GETTABLE  R46 R0 K5    ; R46 := R0["Id"]
979 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
980 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
981 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
982 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
983 [-]: LOADK     R44 K180     ; R44 := "ValueSelector.RightBtn"
984 [-]: LOADK     R45 85       ; R45 := 85.000000
985 [-]: GETTABLE  R46 R0 K5    ; R46 := R0["Id"]
986 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
987 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
988 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
989 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
990 [-]: LOADK     R44 K181     ; R44 := "ValueSelector.SliderBtn"
991 [-]: LOADK     R45 85       ; R45 := 85.000000
992 [-]: GETTABLE  R46 R0 K5    ; R46 := R0["Id"]
993 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
994 [-]: GETGLOBAL R41 K7       ; R41 := 0xae91e43b
995 [-]: SELF      R41 R41 K10  ; R42 := R41; R41 := R41[0xf64b7262]
996 [-]: GETTABLE  R43 R0 K0    ; R43 := R0["mClipName"]
997 [-]: LOADK     R44 K182     ; R44 := "ValueSelector.GoToBtn"
998 [-]: LOADK     R45 85       ; R45 := 85.000000
999 [-]: GETTABLE  R46 R0 K5    ; R46 := R0["Id"]
1000 [-]: CALL      R41 6 1      ; R41(R42,R43,R44,R45,R46)
1001 [-]: GETGLOBAL R41 K183     ; R41 := 0x42dcc9f5
1002 [-]: GETUPVAL  R42 U8       ; R42 := U8
1003 [-]: GETTABLE  R42 R42 K184 ; R42 := R42["VS_WIDTH"]
1004 [-]: GETTABLE  R43 R0 K185  ; R43 := R0["Value"]
1005 [-]: MUL       R42 R42 R43  ; R42 := R42 * R43
1006 [-]: LOADK     R43 K186     ; R43 := 0.100000
1007 [-]: GETUPVAL  R44 U8       ; R44 := U8
1008 [-]: GETTABLE  R44 R44 K184 ; R44 := R44["VS_WIDTH"]
1009 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
1010 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
1011 [-]: SELF      R42 R42 K10  ; R43 := R42; R42 := R42[0xf64b7262]
1012 [-]: GETTABLE  R44 R0 K0    ; R44 := R0["mClipName"]
1013 [-]: LOADK     R45 K167     ; R45 := "ValueSelector.Front"
1014 [-]: LOADK     R46 12       ; R46 := 12.000000
1015 [-]: MOVE      R47 R41      ; R47 := R41
1016 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
1017 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
1018 [-]: SELF      R42 R42 K10  ; R43 := R42; R42 := R42[0xf64b7262]
1019 [-]: GETTABLE  R44 R0 K0    ; R44 := R0["mClipName"]
1020 [-]: LOADK     R45 K187     ; R45 := "ValueSelector.Slider"
1021 [-]: LOADK     R46 0        ; R46 := 0.000000
1022 [-]: SUB       R47 R41 K188 ; R47 := R41 - 74.250000
1023 [-]: SUB       R47 R47 K92  ; R47 := R47 - 4.000000
1024 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
1025 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
1026 [-]: SELF      R42 R42 K10  ; R43 := R42; R42 := R42[0xf64b7262]
1027 [-]: GETTABLE  R44 R0 K0    ; R44 := R0["mClipName"]
1028 [-]: LOADK     R45 K181     ; R45 := "ValueSelector.SliderBtn"
1029 [-]: LOADK     R46 0        ; R46 := 0.000000
1030 [-]: SUB       R47 R41 K188 ; R47 := R41 - 74.250000
1031 [-]: SUB       R47 R47 K189 ; R47 := R47 - 7.500000
1032 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
1033 [-]: GETGLOBAL R42 K7       ; R42 := 0xae91e43b
1034 [-]: SELF      R42 R42 K51  ; R43 := R42; R42 := R42[0xc0a3774b]
1035 [-]: GETTABLE  R44 R0 K0    ; R44 := R0["mClipName"]
1036 [-]: LOADK     R45 K190     ; R45 := "checkbox"
1037 [-]: LOADK     R46 11       ; R46 := 11.000000
1038 [-]: GETTABLE  R47 R0 K191  ; R47 := R0["ToggleVal"]
1039 [-]: EQ        0 R47 K1     ; if R47 ~= nil then PC := 1042
1040 [-]: JMP       1042         ; PC := 1042
1041 [-]: LOADBOOL  R47 0 1      ; R47 := false; PC := 1042
1042 [-]: LOADBOOL  R47 1 0      ; R47 := true
1043 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
1044 [-]: GETTABLE  R42 R0 K191  ; R42 := R0["ToggleVal"]
1045 [-]: EQ        1 R42 K1     ; if R42 == nil then PC := 1059
1046 [-]: JMP       1059         ; PC := 1059
1047 [-]: GETGLOBAL R42 K192     ; R42 := 0x38f10e85
1048 [-]: GETGLOBAL R43 K7       ; R43 := 0xae91e43b
1049 [-]: GETTABLE  R44 R0 K0    ; R44 := R0["mClipName"]
1050 [-]: LOADK     R45 K193     ; R45 := ".checkbox.gotoAndStop"
1051 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
1052 [-]: GETUPVAL  R45 U4       ; R45 := U4
1053 [-]: GETTABLE  R45 R45 K48  ; R45 := R45[0x06d055f9]
1054 [-]: GETTABLE  R46 R0 K191  ; R46 := R0["ToggleVal"]
1055 [-]: LOADK     R47 K194     ; R47 := "On"
1056 [-]: LOADK     R48 K195     ; R48 := "Off"
1057 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
1058 [-]: CALL      R42 0 1      ; R42(R43,...)
1059 [-]: LOADK     R42 1        ; R42 := 1.000000
1060 [-]: GETGLOBAL R43 K2       ; R43 := mLists
1061 [-]: GETTABLE  R43 R43 K3   ; R43 := R43["mCosmeticsList"]
1062 [-]: GETTABLE  R43 R43 K196 ; R43 := R43["mVisClips"]
1063 [-]: LEN       R43 R43      ; R43 := # R43
1064 [-]: LOADK     R44 1        ; R44 := 1.000000
1065 [-]: FORPREP   R42 1077     ; R42 -= R44; PC := 1077
1066 [-]: GETGLOBAL R46 K7       ; R46 := 0xae91e43b
1067 [-]: SELF      R46 R46 K80  ; R47 := R46; R46 := R46[0xd5181643]
1068 [-]: GETTABLE  R48 R0 K0    ; R48 := R0["mClipName"]
1069 [-]: LOADK     R49 K197     ; R49 := "."
1070 [-]: GETGLOBAL R50 K2       ; R50 := mLists
1071 [-]: GETTABLE  R50 R50 K3   ; R50 := R50["mCosmeticsList"]
1072 [-]: GETTABLE  R50 R50 K196 ; R50 := R50["mVisClips"]
1073 [-]: GETTABLE  R50 R50 R45  ; R50 := R50[R45]
1074 [-]: CONCAT    R48 R48 R50  ; R48 := R48 .. R49 .. R50
1075 [-]: GETGLOBAL R49 K198     ; R49 := 0x7cf8742c
1076 [-]: CALL      R46 4 1      ; R46(R47,R48,R49)
1077 [-]: FORLOOP   R42 1066     ; R42 += R44; if R42 <= R43 then begin PC := 1066; R45 := R42 end
1078 [-]: LOADK     R46 1        ; R46 := 1.000000
1079 [-]: GETGLOBAL R47 K2       ; R47 := mLists
1080 [-]: GETTABLE  R47 R47 K3   ; R47 := R47["mCosmeticsList"]
1081 [-]: GETTABLE  R47 R47 K199 ; R47 := R47["mVisNoAAClips"]
1082 [-]: LEN       R47 R47      ; R47 := # R47
1083 [-]: LOADK     R48 1        ; R48 := 1.000000
1084 [-]: FORPREP   R46 1096     ; R46 -= R48; PC := 1096
1085 [-]: GETGLOBAL R50 K7       ; R50 := 0xae91e43b
1086 [-]: SELF      R50 R50 K80  ; R51 := R50; R50 := R50[0xd5181643]
1087 [-]: GETTABLE  R52 R0 K0    ; R52 := R0["mClipName"]
1088 [-]: LOADK     R53 K197     ; R53 := "."
1089 [-]: GETGLOBAL R54 K2       ; R54 := mLists
1090 [-]: GETTABLE  R54 R54 K3   ; R54 := R54["mCosmeticsList"]
1091 [-]: GETTABLE  R54 R54 K199 ; R54 := R54["mVisNoAAClips"]
1092 [-]: GETTABLE  R54 R54 R49  ; R54 := R54[R49]
1093 [-]: CONCAT    R52 R52 R54  ; R52 := R52 .. R53 .. R54
1094 [-]: GETGLOBAL R53 K200     ; R53 := 0x0d7545ad
1095 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
1096 [-]: FORLOOP   R46 1085     ; R46 += R48; if R46 <= R47 then begin PC := 1085; R49 := R46 end
1097 [-]: LOADK     R50 1        ; R50 := 1.000000
1098 [-]: GETGLOBAL R51 K2       ; R51 := mLists
1099 [-]: GETTABLE  R51 R51 K3   ; R51 := R51["mCosmeticsList"]
1100 [-]: GETTABLE  R51 R51 K201 ; R51 := R51["mVisTextClips"]
1101 [-]: LEN       R51 R51      ; R51 := # R51
1102 [-]: LOADK     R52 1        ; R52 := 1.000000
1103 [-]: FORPREP   R50 1115     ; R50 -= R52; PC := 1115
1104 [-]: GETGLOBAL R54 K7       ; R54 := 0xae91e43b
1105 [-]: SELF      R54 R54 K80  ; R55 := R54; R54 := R54[0xd5181643]
1106 [-]: GETTABLE  R56 R0 K0    ; R56 := R0["mClipName"]
1107 [-]: LOADK     R57 K197     ; R57 := "."
1108 [-]: GETGLOBAL R58 K2       ; R58 := mLists
1109 [-]: GETTABLE  R58 R58 K3   ; R58 := R58["mCosmeticsList"]
1110 [-]: GETTABLE  R58 R58 K201 ; R58 := R58["mVisTextClips"]
1111 [-]: GETTABLE  R58 R58 R53  ; R58 := R58[R53]
1112 [-]: CONCAT    R56 R56 R58  ; R56 := R56 .. R57 .. R58
1113 [-]: GETGLOBAL R57 K202     ; R57 := 0xc1607267
1114 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
1115 [-]: FORLOOP   R50 1104     ; R50 += R52; if R50 <= R51 then begin PC := 1104; R53 := R50 end
1116 [-]: RETURN    R0 1         ; return 


; Function #149.7.1:
;
; Name:            
; Defined at line: 10184
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x19ad3f57]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "Fill"
  5 [-]: LOADK     R5 K4        ; R5 := "noMenuSelection"
  6 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["NoMenuSelection"]
  7 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
  8 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  9 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x67bc869f]
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 5         ; R4 := 5.000000
 12 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["ScaleX"]
 13 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 14 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["ScaleX"]
 15 [-]: DIV       R1 K8 R1     ; R1 := 100.000000 / R1
 16 [-]: MUL       R1 R1 K8     ; R1 := R1 * 100.000000
 17 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 18 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xf64b7262]
 19 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 20 [-]: LOADK     R5 K10       ; R5 := "Default"
 21 [-]: LOADK     R6 0         ; R6 := 0.000000
 22 [-]: DIV       R7 R1 K8     ; R7 := R1 / 100.000000
 23 [-]: MUL       R7 K11 R7    ; R7 := -32.000000 * R7
 24 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 25 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 26 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xf64b7262]
 27 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 28 [-]: LOADK     R5 K10       ; R5 := "Default"
 29 [-]: LOADK     R6 5         ; R6 := 5.000000
 30 [-]: MOVE      R7 R1        ; R7 := R1
 31 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 32 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 33 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0xc0a3774b]
 34 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 35 [-]: LOADK     R5 K10       ; R5 := "Default"
 36 [-]: LOADK     R6 11        ; R6 := 11.000000
 37 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["Default"]
 38 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 39 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["Default"]
 40 [-]: TEST      R2 0         ; if not R2 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 43 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xf64b7262]
 44 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 45 [-]: LOADK     R5 K3        ; R5 := "Fill"
 46 [-]: LOADK     R6 9         ; R6 := 9.000000
 47 [-]: GETGLOBAL R7 K13       ; R7 := 0x0032441c
 48 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["UIColor_White"]
 49 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 50 [-]: JMP       70           ; PC := 70
 51 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 52 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xf64b7262]
 53 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 54 [-]: LOADK     R5 K3        ; R5 := "Fill"
 55 [-]: LOADK     R6 9         ; R6 := 9.000000
 56 [-]: GETGLOBAL R7 K15       ; R7 := 0x03f57322
 57 [-]: LOADK     R8 K16       ; R8 := "0x"
 58 [-]: GETUPVAL  R9 U0        ; R9 := U0
 59 [-]: GETTABLE  R9 R9 K17    ; R9 := R9[0x2d56ab0b]
 60 [-]: GETTABLE  R10 R0 K18   ; R10 := R0["Color"]
 61 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["red"]
 62 [-]: GETTABLE  R11 R0 K18   ; R11 := R0["Color"]
 63 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["green"]
 64 [-]: GETTABLE  R12 R0 K18   ; R12 := R0["Color"]
 65 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["blue"]
 66 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 67 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 68 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 69 [-]: CALL      R2 0 1       ; R2(R3,...)
 70 [-]: NEWTABLE  R2 2 0       ; R2 := {}
 71 [-]: LOADK     R3 K3        ; R3 := "Fill"
 72 [-]: LOADK     R4 K10       ; R4 := "Default"
 73 [-]: SETLIST   R2 2 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 2
 74 [-]: LOADK     R3 1         ; R3 := 1.000000
 75 [-]: LEN       R4 R2        ; R4 := # R2
 76 [-]: LOADK     R5 1         ; R5 := 1.000000
 77 [-]: FORPREP   R3 86        ; R3 -= R5; PC := 86
 78 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 79 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0xd5181643]
 80 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 81 [-]: LOADK     R10 K23      ; R10 := "."
 82 [-]: GETTABLE  R11 R2 R6    ; R11 := R2[R6]
 83 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 84 [-]: GETGLOBAL R10 K24      ; R10 := 0x7cf8742c
 85 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 86 [-]: FORLOOP   R3 78        ; R3 += R5; if R3 <= R4 then begin PC := 78; R6 := R3 end
 87 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
 88 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0xd5181643]
 89 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 90 [-]: LOADK     R10 K25      ; R10 := ".Outline"
 91 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 92 [-]: GETGLOBAL R10 K26      ; R10 := 0x0d7545ad
 93 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 94 [-]: RETURN    R0 1         ; return 


; Function #149.8:
;
; Name:            
; Defined at line: 10294
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mMovie"]
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x67bc869f]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: LOADK     R5 0         ; R5 := 0.000000
  5 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mInitialX"]
  6 [-]: SUB       R6 R6 K4     ; R6 := R6 - 30.000000
  7 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  8 [-]: RETURN    R0 1         ; return 


; Function #149.9:
;
; Name:            
; Defined at line: 10298
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R2 2 0       ; R2 := {}
  2 [-]: LOADK     R3 10        ; R3 := 10.000000
  3 [-]: LOADK     R4 0         ; R4 := 0.000000
  4 [-]: SETLIST   R2 2 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 2
  5 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  6 [-]: LOADK     R4 100       ; R4 := 100.000000
  7 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mInitialX"]
  8 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
  9 [-]: RETURN    R2 3         ; return R2,R3
 10 [-]: RETURN    R0 1         ; return 


; Function #149.10:
;
; Name:            
; Defined at line: 10303
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xc608cfc1]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: LOADK     R3 1         ; R3 := 1.000000
  5 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mIndex"]
  6 [-]: LOADK     R5 1         ; R5 := 1.000000
  7 [-]: FORPREP   R3 35        ; R3 -= R5; PC := 35
  8 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mElements"]
  9 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 10 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 35
 11 [-]: JMP       35           ; PC := 35
 12 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mElements"]
 13 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 14 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["TopTitle"]
 15 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: EQ        1 R6 K5      ; if R6 == 1.000000 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: ADD       R2 R2 K6     ; R2 := R2 + 30.000000
 20 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mElements"]
 21 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 22 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["HasMiddleLine"]
 23 [-]: TEST      R7 0         ; if not R7 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: ADD       R2 R2 K8     ; R2 := R2 + 15.000000
 26 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mElements"]
 27 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 28 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["HasBottomLine"]
 29 [-]: TEST      R7 0         ; if not R7 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETTABLE  R7 R1 K1     ; R7 := R1["mIndex"]
 32 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: ADD       R2 R2 K10    ; R2 := R2 + 20.000000
 35 [-]: FORLOOP   R3 8         ; R3 += R5; if R3 <= R4 then begin PC := 8; R6 := R3 end
 36 [-]: RETURN    R2 2         ; return R2
 37 [-]: RETURN    R0 1         ; return 


; Function #149.11:
;
; Name:            
; Defined at line: 10327
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := mLists
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCosmeticsList"]
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mInitListYPos"]
  4 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mHeight"]
  5 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mTotalHeight"]
  6 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
  7 [-]: MUL       R3 R3 R1     ; R3 := R3 * R1
  8 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
  9 [-]: RETURN    R2 2         ; return R2
 10 [-]: RETURN    R0 1         ; return 


; Function #149.12:
;
; Name:            
; Defined at line: 10331
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x67bc869f]
  3 [-]: LOADK     R4 K2        ; R4 := "CosmeticsMenu"
  4 [-]: LOADK     R5 1         ; R5 := 1.000000
  5 [-]: GETGLOBAL R6 K3        ; R6 := mLists
  6 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mCosmeticsScrollBar"]
  7 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0x430251e8]
  8 [-]: MOVE      R8 R0        ; R8 := R0
  9 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 10 [-]: CALL      R2 0 1       ; R2(R3,...)
 11 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 10348
; #Upvalues:       12
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETUPVAL  R3 U1        ; R3 := U1
  3 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["CUSTOMIZING_SKINS"]
  4 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["ConfigSlot"]
 13 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETGLOBAL R2 K2        ; R2 := mSelected
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Element"]
 17 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mCustSlot"]
 18 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["ConfigSlot"]
 19 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: TEST      R1 1         ; if R1 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["IsFlappy"]
 25 [-]: TEST      R2 1         ; if R2 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["IsWyrmius"]
 28 [-]: TEST      R2 0         ; if not R2 then PC := 60
 29 [-]: JMP       60           ; PC := 60
 30 [-]: GETGLOBAL R2 K9        ; R2 := 0x34291f5c
 31 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0x68d83431]
 32 [-]: CALL      R2 1 2       ; R2 := R2()
 33 [-]: GETGLOBAL R3 K11       ; R3 := 0x0032441c
 34 [-]: GETUPVAL  R4 U2        ; R4 := U2
 35 [-]: GETTABLE  R4 R4 K13    ; R4 := R4[0x06d055f9]
 36 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["IsFlappy"]
 37 [-]: LOADK     R6 K14       ; R6 := "flappy"
 38 [-]: LOADK     R7 K15       ; R7 := "wyrmius"
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: SETTABLE  R3 K12 R4    ; R3["PlayingMiniGame"] := R4
 41 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2[0x8623cf14]
 42 [-]: GETUPVAL  R5 U2        ; R5 := U2
 43 [-]: GETTABLE  R5 R5 K13    ; R5 := R5[0x06d055f9]
 44 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["IsFlappy"]
 45 [-]: GETGLOBAL R7 K17       ; R7 := 0x184afc30
 46 [-]: GETGLOBAL R8 K18       ; R8 := 0x2e09b1e6
 47 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 48 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5[0xed4e0128]
 49 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 50 [-]: CALL      R3 0 1       ; R3(R4,...)
 51 [-]: SETTABLE  R2 K20 K21   ; R2["migrateServer"] := false
 52 [-]: GETGLOBAL R3 K9        ; R3 := 0x34291f5c
 53 [-]: GETTABLE  R3 R3 K22    ; R3 := R3[0x4e0a1dfc]
 54 [-]: MOVE      R4 R2        ; R4 := R2
 55 [-]: CALL      R3 2 1       ; R3(R4)
 56 [-]: GETGLOBAL R3 K23       ; R3 := 0xae91e43b
 57 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0x32302b4a]
 58 [-]: CALL      R3 2 1       ; R3(R4)
 59 [-]: RETURN    R0 1         ; return 
 60 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 61 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
 62 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 267
 63 [-]: JMP       267          ; PC := 267
 64 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 65 [-]: GETGLOBAL R4 K25       ; R4 := 0x25d99d89
 66 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 67 [-]: TEST      R3 1         ; if R3 then PC := 267
 68 [-]: JMP       267          ; PC := 267
 69 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 70 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
 71 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["ConfigSlot"]
 72 [-]: SETTABLE  R3 K6 R4     ; R3["mCustSlot"] := R4
 73 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 74 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
 75 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["EquippedItem"]
 76 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 95
 77 [-]: JMP       95           ; PC := 95
 78 [-]: GETGLOBAL R3 K2        ; R3 := mSelected
 79 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Element"]
 80 [-]: GETGLOBAL R4 K2        ; R4 := mSelected
 81 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Element"]
 82 [-]: GETUPVAL  R5 U3        ; R5 := U3
 83 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
 84 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Element"]
 85 [-]: LOADBOOL  R7 1 0       ; R7 := true
 86 [-]: CALL      R5 3 3       ; R5,R6 := R5(R6,R7)
 87 [-]: SETTABLE  R4 K28 R6    ; R4["BackupCustomization"] := R6
 88 [-]: SETTABLE  R3 K27 R5    ; R3["Customization"] := R5
 89 [-]: GETGLOBAL R3 K29       ; R3 := mLists
 90 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["mLoadOutList"]
 91 [-]: GETTABLE  R3 R3 K31    ; R3 := R3[0x101bab76]
 92 [-]: GETGLOBAL R4 K2        ; R4 := mSelected
 93 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Element"]
 94 [-]: CALL      R3 2 1       ; R3(R4)
 95 [-]: GETGLOBAL R3 K32       ; R3 := mCurrentLoadout
 96 [-]: GETGLOBAL R4 K2        ; R4 := mSelected
 97 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Element"]
 98 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["LoadOutType"]
 99 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
100 [-]: SELF      R3 R3 K34    ; R4 := R3; R3 := R3[0x2abbe722]
101 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
102 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["Element"]
103 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["LoadOutId"]
104 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
105 [-]: GETTABLE  R4 R3 K36    ; R4 := R3["mItemId"]
106 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
107 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["Element"]
108 [-]: GETTABLE  R5 R5 K38    ; R5 := R5["UID"]
109 [-]: SETTABLE  R4 K37 R5    ; R4["mId"] := R5
110 [-]: GETGLOBAL R4 K2        ; R4 := mSelected
111 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Element"]
112 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mCustSlot"]
113 [-]: SETTABLE  R3 K6 R4     ; R3["mCustSlot"] := R4
114 [-]: GETGLOBAL R4 K32       ; R4 := mCurrentLoadout
115 [-]: GETGLOBAL R5 K2        ; R5 := mSelected
116 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["Element"]
117 [-]: GETTABLE  R5 R5 K33    ; R5 := R5["LoadOutType"]
118 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
119 [-]: SELF      R4 R4 K39    ; R5 := R4; R4 := R4[0xffca321e]
120 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
121 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Element"]
122 [-]: GETTABLE  R6 R6 K35    ; R6 := R6["LoadOutId"]
123 [-]: MOVE      R7 R3        ; R7 := R3
124 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
125 [-]: GETGLOBAL R4 K40       ; R4 := mInventory
126 [-]: SELF      R4 R4 K41    ; R5 := R4; R4 := R4[0x6beb8ae1]
127 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
128 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Element"]
129 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["LoadOutType"]
130 [-]: GETGLOBAL R7 K32       ; R7 := mCurrentLoadout
131 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
132 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Element"]
133 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["LoadOutType"]
134 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
135 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
136 [-]: GETUPVAL  R4 U4        ; R4 := U4
137 [-]: CALL      R4 1 1       ; R4()
138 [-]: GETGLOBAL R4 K29       ; R4 := mLists
139 [-]: GETTABLE  R4 R4 K42    ; R4 := R4["mCosmeticsList"]
140 [-]: SELF      R4 R4 K43    ; R5 := R4; R4 := R4[0x71e9ac81]
141 [-]: LOADNIL   R6 R6        ; R6 := nil
142 [-]: LOADBOOL  R7 1 0       ; R7 := true
143 [-]: LOADBOOL  R8 1 0       ; R8 := true
144 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
145 [-]: GETGLOBAL R4 K25       ; R4 := 0x25d99d89
146 [-]: SELF      R4 R4 K44    ; R5 := R4; R4 := R4[0x400b84a1]
147 [-]: GETGLOBAL R6 K2        ; R6 := mSelected
148 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Element"]
149 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["LoadOutType"]
150 [-]: GETGLOBAL R7 K32       ; R7 := mCurrentLoadout
151 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
152 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Element"]
153 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["LoadOutType"]
154 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
155 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
156 [-]: GETGLOBAL R4 K25       ; R4 := 0x25d99d89
157 [-]: SELF      R4 R4 K45    ; R5 := R4; R4 := R4[0x121ec068]
158 [-]: CALL      R4 2 1       ; R4(R5)
159 [-]: GETGLOBAL R4 K46       ; R4 := _T
160 [-]: GETTABLE  R4 R4 K47    ; R4 := R4["MenuSuitAvatar"]
161 [-]: SELF      R5 R4 K48    ; R6 := R4; R5 := R4[0xde321e6f]
162 [-]: CALL      R5 2 2       ; R5 := R5(R6)
163 [-]: SELF      R5 R5 K49    ; R6 := R5; R5 := R5[0x374b084a]
164 [-]: CALL      R5 2 1       ; R5(R6)
165 [-]: GETUPVAL  R5 U5        ; R5 := U5
166 [-]: GETUPVAL  R6 U6        ; R6 := U6
167 [-]: GETTABLE  R6 R6 K50    ; R6 := R6["Current"]
168 [-]: EQ        1 R6 K52     ; if R6 == 2.000000 then PC := 171
169 [-]: JMP       171          ; PC := 171
170 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 171
171 [-]: LOADBOOL  R6 1 0       ; R6 := true
172 [-]: CALL      R5 2 1       ; R5(R6)
173 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
174 [-]: GETUPVAL  R6 U7        ; R6 := U7
175 [-]: CALL      R5 2 2       ; R5 := R5(R6)
176 [-]: TEST      R5 0         ; if not R5 then PC := 183
177 [-]: JMP       183          ; PC := 183
178 [-]: SELF      R5 R4 K48    ; R6 := R4; R5 := R4[0xde321e6f]
179 [-]: CALL      R5 2 2       ; R5 := R5(R6)
180 [-]: SELF      R5 R5 K53    ; R6 := R5; R5 := R5[0x0c277ae1]
181 [-]: LOADBOOL  R7 0 0       ; R7 := false
182 [-]: CALL      R5 3 1       ; R5(R6,R7)
183 [-]: LOADBOOL  R5 1 0       ; R5 := true
184 [-]: SETGLOBAL R5 K54       ; mRePopulateCosmetics := R5
185 [-]: GETUPVAL  R5 U8        ; R5 := U8
186 [-]: CALL      R5 1 2       ; R5 := R5()
187 [-]: TEST      R5 1         ; if R5 then PC := 208
188 [-]: JMP       208          ; PC := 208
189 [-]: GETGLOBAL R5 K46       ; R5 := _T
190 [-]: GETTABLE  R5 R5 K55    ; R5 := R5["mSentinelMode"]
191 [-]: TEST      R5 0         ; if not R5 then PC := 208
192 [-]: JMP       208          ; PC := 208
193 [-]: GETGLOBAL R5 K25       ; R5 := 0x25d99d89
194 [-]: SELF      R5 R5 K56    ; R6 := R5; R5 := R5[0x3c6b0324]
195 [-]: CALL      R5 2 2       ; R5 := R5(R6)
196 [-]: TEST      R5 1         ; if R5 then PC := 203
197 [-]: JMP       203          ; PC := 203
198 [-]: GETGLOBAL R5 K25       ; R5 := 0x25d99d89
199 [-]: SELF      R5 R5 K57    ; R6 := R5; R5 := R5[0x9f91f49d]
200 [-]: CALL      R5 2 2       ; R5 := R5(R6)
201 [-]: TEST      R5 0         ; if not R5 then PC := 208
202 [-]: JMP       208          ; PC := 208
203 [-]: LOADK     R5 1         ; R5 := 1.000000
204 [-]: SETUPVAL  R5 U9        ; U82 := R9
205 [-]: GETUPVAL  R5 U10       ; R5 := U10
206 [-]: GETTABLE  R5 R5 K58    ; R5 := R5[0xd4c67576]
207 [-]: CALL      R5 1 1       ; R5()
208 [-]: GETGLOBAL R5 K46       ; R5 := _T
209 [-]: SETTABLE  R5 K59 K60   ; R5["LoadoutSaveRequired"] := true
210 [-]: GETUPVAL  R5 U11       ; R5 := U11
211 [-]: MOVE      R6 R4        ; R6 := R4
212 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
213 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Element"]
214 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["LoadOutType"]
215 [-]: GETGLOBAL R8 K2        ; R8 := mSelected
216 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["Element"]
217 [-]: GETTABLE  R8 R8 K35    ; R8 := R8["LoadOutId"]
218 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
219 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
220 [-]: GETGLOBAL R6 K46       ; R6 := _T
221 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["MenuSuitAvatar"]
222 [-]: CALL      R5 2 2       ; R5 := R5(R6)
223 [-]: TEST      R5 1         ; if R5 then PC := 233
224 [-]: JMP       233          ; PC := 233
225 [-]: GETGLOBAL R5 K46       ; R5 := _T
226 [-]: GETGLOBAL R6 K46       ; R6 := _T
227 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["MenuSuitAvatar"]
228 [-]: SELF      R6 R6 K48    ; R7 := R6; R6 := R6[0xde321e6f]
229 [-]: CALL      R6 2 2       ; R6 := R6(R7)
230 [-]: SELF      R6 R6 K62    ; R7 := R6; R6 := R6[0x2676deee]
231 [-]: CALL      R6 2 2       ; R6 := R6(R7)
232 [-]: SETTABLE  R5 K61 R6    ; R5["MenuSentinel"] := R6
233 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
234 [-]: GETGLOBAL R6 K46       ; R6 := _T
235 [-]: GETTABLE  R6 R6 K61    ; R6 := R6["MenuSentinel"]
236 [-]: CALL      R5 2 2       ; R5 := R5(R6)
237 [-]: TEST      R5 1         ; if R5 then PC := 267
238 [-]: JMP       267          ; PC := 267
239 [-]: GETGLOBAL R5 K46       ; R5 := _T
240 [-]: GETTABLE  R5 R5 K61    ; R5 := R5["MenuSentinel"]
241 [-]: SELF      R5 R5 K63    ; R6 := R5; R5 := R5[0xd749da12]
242 [-]: LOADBOOL  R7 0 0       ; R7 := false
243 [-]: CALL      R5 3 1       ; R5(R6,R7)
244 [-]: GETGLOBAL R5 K46       ; R5 := _T
245 [-]: GETTABLE  R5 R5 K64    ; R5 := R5["InSimulacrum"]
246 [-]: TEST      R5 0         ; if not R5 then PC := 267
247 [-]: JMP       267          ; PC := 267
248 [-]: GETGLOBAL R5 K46       ; R5 := _T
249 [-]: GETTABLE  R5 R5 K61    ; R5 := R5["MenuSentinel"]
250 [-]: SELF      R5 R5 K65    ; R6 := R5; R5 := R5[0x23d6100a]
251 [-]: LOADBOOL  R7 0 0       ; R7 := false
252 [-]: CALL      R5 3 1       ; R5(R6,R7)
253 [-]: GETGLOBAL R5 K46       ; R5 := _T
254 [-]: GETTABLE  R5 R5 K61    ; R5 := R5["MenuSentinel"]
255 [-]: SELF      R5 R5 K48    ; R6 := R5; R5 := R5[0xde321e6f]
256 [-]: CALL      R5 2 2       ; R5 := R5(R6)
257 [-]: SELF      R5 R5 K66    ; R6 := R5; R5 := R5[0xf7d48ee0]
258 [-]: CALL      R5 2 2       ; R5 := R5(R6)
259 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
260 [-]: MOVE      R7 R5        ; R7 := R5
261 [-]: CALL      R6 2 2       ; R6 := R6(R7)
262 [-]: TEST      R6 1         ; if R6 then PC := 267
263 [-]: JMP       267          ; PC := 267
264 [-]: SELF      R6 R5 K67    ; R7 := R5; R6 := R5[0x1bf26251]
265 [-]: LOADBOOL  R8 0 0       ; R8 := false
266 [-]: CALL      R6 3 1       ; R6(R7,R8)
267 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 10432
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETGLOBAL R2 K0        ; R2 := mInventory
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x4b28a14c]
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemId"]
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: EQ        0 R1 K4      ; if R1 ~= 0.000000 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETGLOBAL R2 K0        ; R2 := mInventory
 11 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x4b28a14c]
 12 [-]: LOADK     R4 1         ; R4 := 1.000000
 13 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemId"]
 14 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 15 [-]: GETGLOBAL R2 K0        ; R2 := mInventory
 16 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x4b28a14c]
 17 [-]: LOADK     R4 7         ; R4 := 7.000000
 18 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemId"]
 19 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 20 [-]: GETGLOBAL R2 K0        ; R2 := mInventory
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x566259e1]
 22 [-]: LOADK     R4 1         ; R4 := 1.000000
 23 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemId"]
 24 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 25 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0x2abbe722]
 26 [-]: LOADK     R5 0         ; R5 := 0.000000
 27 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 28 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 29 [-]: GETGLOBAL R6 K0        ; R6 := mInventory
 30 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0xa855881a]
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: LOADK     R7 1         ; R7 := 1.000000
 33 [-]: LEN       R8 R6        ; R8 := # R6
 34 [-]: LOADK     R9 1         ; R9 := 1.000000
 35 [-]: FORPREP   R7 66        ; R7 -= R9; PC := 66
 36 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 37 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["mItemId"]
 38 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["mId"]
 39 [-]: GETTABLE  R12 R3 K2    ; R12 := R3["mItemId"]
 40 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["mId"]
 41 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 44
 42 [-]: JMP       44           ; PC := 44
 43 [-]: GETTABLE  R4 R6 R10    ; R4 := R6[R10]
 44 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 45 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["mDetails"]
 46 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["mStatus"]
 47 [-]: EQ        1 R11 K4     ; if R11 == 0.000000 then PC := 54
 48 [-]: JMP       54           ; PC := 54
 49 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 50 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["mDetails"]
 51 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["mStatus"]
 52 [-]: EQ        0 R11 K11    ; if R11 ~= 1.000000 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: GETTABLE  R5 R6 R10    ; R5 := R6[R10]
 55 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
 56 [-]: MOVE      R12 R4       ; R12 := R4
 57 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 58 [-]: TEST      R11 1        ; if R11 then PC := 66
 59 [-]: JMP       66           ; PC := 66
 60 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
 61 [-]: MOVE      R12 R5       ; R12 := R5
 62 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 63 [-]: TEST      R11 1        ; if R11 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: JMP       67           ; PC := 67
 66 [-]: FORLOOP   R7 36        ; R7 += R9; if R7 <= R8 then begin PC := 36; R10 := R7 end
 67 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
 68 [-]: MOVE      R12 R5       ; R12 := R5
 69 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 70 [-]: TEST      R11 1        ; if R11 then PC := 102
 71 [-]: JMP       102          ; PC := 102
 72 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
 73 [-]: MOVE      R12 R4       ; R12 := R4
 74 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 75 [-]: TEST      R11 1        ; if R11 then PC := 93
 76 [-]: JMP       93           ; PC := 93
 77 [-]: GETTABLE  R11 R3 K2    ; R11 := R3["mItemId"]
 78 [-]: SETTABLE  R11 K8 K13   ; R11["mId"] := ""
 79 [-]: SELF      R11 R2 K14   ; R12 := R2; R11 := R2[0xffca321e]
 80 [-]: LOADK     R13 0        ; R13 := 0.000000
 81 [-]: MOVE      R14 R3       ; R14 := R3
 82 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 83 [-]: GETGLOBAL R11 K0       ; R11 := mInventory
 84 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11[0x6beb8ae1]
 85 [-]: LOADK     R13 1        ; R13 := 1.000000
 86 [-]: MOVE      R14 R2       ; R14 := R2
 87 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 88 [-]: GETGLOBAL R11 K16      ; R11 := 0x25d99d89
 89 [-]: SELF      R11 R11 K17  ; R12 := R11; R11 := R11[0x400b84a1]
 90 [-]: LOADK     R13 1        ; R13 := 1.000000
 91 [-]: MOVE      R14 R2       ; R14 := R2
 92 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 93 [-]: GETUPVAL  R11 U1       ; R11 := U1
 94 [-]: GETUPVAL  R12 U2       ; R12 := U2
 95 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["UI_MODE_IN_SPACE_SHIP"]
 96 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 102
 97 [-]: JMP       102          ; PC := 102
 98 [-]: GETUPVAL  R11 U3       ; R11 := U3
 99 [-]: MOVE      R12 R5       ; R12 := R5
100 [-]: GETTABLE  R13 R5 K19   ; R13 := R5["mItemType"]
101 [-]: CALL      R11 3 1      ; R11(R12,R13)
102 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
103 [-]: MOVE      R12 R5       ; R12 := R5
104 [-]: CALL      R11 2 2      ; R11 := R11(R12)
105 [-]: TEST      R11 0        ; if not R11 then PC := 127
106 [-]: JMP       127          ; PC := 127
107 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
108 [-]: MOVE      R12 R4       ; R12 := R4
109 [-]: CALL      R11 2 2      ; R11 := R11(R12)
110 [-]: TEST      R11 1        ; if R11 then PC := 127
111 [-]: JMP       127          ; PC := 127
112 [-]: GETUPVAL  R11 U1       ; R11 := U1
113 [-]: GETUPVAL  R12 U2       ; R12 := U2
114 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["UI_MODE_IN_SPACE_SHIP"]
115 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 121
116 [-]: JMP       121          ; PC := 121
117 [-]: GETUPVAL  R11 U3       ; R11 := U3
118 [-]: MOVE      R12 R4       ; R12 := R4
119 [-]: GETTABLE  R13 R4 K19   ; R13 := R4["mItemType"]
120 [-]: CALL      R11 3 1      ; R11(R12,R13)
121 [-]: GETGLOBAL R11 K16      ; R11 := 0x25d99d89
122 [-]: SELF      R11 R11 K20  ; R12 := R11; R11 := R11[0xd03a1fb0]
123 [-]: GETTABLE  R13 R4 K2    ; R13 := R4["mItemId"]
124 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["mId"]
125 [-]: LOADK     R14 K21      ; R14 := "OnRetrievePetFromStasisResults"
126 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
127 [-]: GETGLOBAL R11 K12      ; R11 := 0x7b998233
128 [-]: MOVE      R12 R4       ; R12 := R4
129 [-]: CALL      R11 2 2      ; R11 := R11(R12)
130 [-]: TEST      R11 0        ; if not R11 then PC := 164
131 [-]: JMP       164          ; PC := 164
132 [-]: GETUPVAL  R11 U1       ; R11 := U1
133 [-]: GETUPVAL  R12 U2       ; R12 := U2
134 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["UI_MODE_IN_SPACE_SHIP"]
135 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 164
136 [-]: JMP       164          ; PC := 164
137 [-]: LOADNIL   R11 R11      ; R11 := nil
138 [-]: GETGLOBAL R12 K0       ; R12 := mInventory
139 [-]: SELF      R12 R12 K22  ; R13 := R12; R12 := R12[0x91a3eddf]
140 [-]: CALL      R12 2 2      ; R12 := R12(R13)
141 [-]: LOADK     R13 1        ; R13 := 1.000000
142 [-]: LEN       R14 R12      ; R14 := # R12
143 [-]: LOADK     R15 1        ; R15 := 1.000000
144 [-]: FORPREP   R13 154      ; R13 -= R15; PC := 154
145 [-]: GETTABLE  R17 R12 R16  ; R17 := R12[R16]
146 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["mItemId"]
147 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["mId"]
148 [-]: GETTABLE  R18 R3 K2    ; R18 := R3["mItemId"]
149 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["mId"]
150 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 154
151 [-]: JMP       154          ; PC := 154
152 [-]: GETTABLE  R11 R12 R16  ; R11 := R12[R16]
153 [-]: JMP       155          ; PC := 155
154 [-]: FORLOOP   R13 145      ; R13 += R15; if R13 <= R14 then begin PC := 145; R16 := R13 end
155 [-]: GETGLOBAL R17 K12      ; R17 := 0x7b998233
156 [-]: MOVE      R18 R11      ; R18 := R11
157 [-]: CALL      R17 2 2      ; R17 := R17(R18)
158 [-]: TEST      R17 1        ; if R17 then PC := 164
159 [-]: JMP       164          ; PC := 164
160 [-]: GETUPVAL  R17 U4       ; R17 := U4
161 [-]: MOVE      R18 R11      ; R18 := R11
162 [-]: GETTABLE  R19 R11 K19  ; R19 := R11["mItemType"]
163 [-]: CALL      R17 3 1      ; R17(R18,R19)
164 [-]: GETGLOBAL R17 K23      ; R17 := _T
165 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["loadoutInProgress"]
166 [-]: EQ        0 R17 K25    ; if R17 ~= nil then PC := 170
167 [-]: JMP       170          ; PC := 170
168 [-]: GETGLOBAL R17 K23      ; R17 := _T
169 [-]: SETTABLE  R17 K26 K27  ; R17["LoadoutSaveRequired"] := true
170 [-]: GETUPVAL  R17 U5       ; R17 := U5
171 [-]: GETTABLE  R17 R17 K28  ; R17 := R17[0x5f6897e6]
172 [-]: CALL      R17 1 1      ; R17()
173 [-]: GETUPVAL  R17 U6       ; R17 := U6
174 [-]: GETTABLE  R17 R17 K29  ; R17 := R17[0x659d451f]
175 [-]: GETGLOBAL R18 K30      ; R18 := 0x0032441c
176 [-]: GETTABLE  R18 R18 K31  ; R18 := R18["UISound_SweetenerTwo"]
177 [-]: CALL      R17 2 1      ; R17(R18)
178 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 10517
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x5f6897e6]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 10521
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETUPVAL  R3 U1        ; R3 := U1
  3 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["SELECTING_PART"]
  4 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x659d451f]
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0x0032441c
 10 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UISound_ButtonSelect"]
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 13 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x0c33ebb2]
 14 [-]: LOADK     R4 K6        ; R4 := "_root"
 15 [-]: LOADK     R5 K7        ; R5 := "suitRotationX"
 16 [-]: LOADK     R6 0         ; R6 := 0.000000
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 19 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x42b04007]
 20 [-]: GETUPVAL  R4 U2        ; R4 := U2
 21 [-]: GETTABLE  R4 R4 K9     ; R4 := R4[0x06d055f9]
 22 [-]: EQ        0 R0 K10     ; if R0 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 25
 25 [-]: LOADBOOL  R5 1 0       ; R5 := true
 26 [-]: MOVE      R6 R0        ; R6 := R0
 27 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Language/Menu/Loadout_Change"
 28 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 29 [-]: LOADBOOL  R5 1 0       ; R5 := true
 30 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 31 [-]: GETUPVAL  R3 U3        ; R3 := U3
 32 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["Current"]
 33 [-]: EQ        0 R3 K14     ; if R3 ~= 2.000000 then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 36 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x42b04007]
 37 [-]: LOADK     R5 K15       ; R5 := "<CONCLAVE>"
 38 [-]: LOADBOOL  R6 1 0       ; R6 := true
 39 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 40 [-]: LOADK     R4 K16       ; R4 := " "
 41 [-]: MOVE      R5 R2        ; R5 := R2
 42 [-]: CONCAT    R2 R3 R5     ; R2 := R3 .. R4 .. R5
 43 [-]: CLOSURE   R3 0         ; R3 := closure(Function #153.1)
 44 [-]: MOVE      R0 R1        ; R0 := R1
 45 [-]: GETUPVAL  R0 U4        ; R0 := U4
 46 [-]: GETUPVAL  R4 U5        ; R4 := U5
 47 [-]: GETTABLE  R4 R4 K18    ; R4 := R4[0x69d0e4da]
 48 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 49 [-]: LOADBOOL  R6 1 0       ; R6 := true
 50 [-]: GETGLOBAL R7 K19       ; R7 := 0x25d99d89
 51 [-]: GETUPVAL  R8 U6        ; R8 := U6
 52 [-]: CALL      R8 1 2       ; R8 := R8()
 53 [-]: MOVE      R9 R3        ; R9 := R3
 54 [-]: MOVE      R10 R2       ; R10 := R2
 55 [-]: CALL      R4 7 2       ; R4 := R4(R5,R6,R7,R8,R9,R10)
 56 [-]: SETGLOBAL R4 K17       ; mChildMovie := R4
 57 [-]: RETURN    R0 1         ; return 


; Function #153.1:
;
; Name:            
; Defined at line: 10535
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mPreset"]
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mPreset"]
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 10550
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 10554
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 0         ; if not R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CUSTOMIZING_SKINS"]
  8 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 43
  9 [-]: JMP       43           ; PC := 43
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 43
 14 [-]: JMP       43           ; PC := 43
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SELECTING_PART"]
 18 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 42
 19 [-]: JMP       42           ; PC := 42
 20 [-]: EQ        0 R0 K4      ; if R0 ~= 1.000000 then PC := 30
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x1467d5f4]
 24 [-]: CALL      R1 1 2       ; R1 := R1()
 25 [-]: TEST      R1 1         ; if R1 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETUPVAL  R1 U3        ; R1 := U3
 28 [-]: CALL      R1 1 1       ; R1()
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 31 [-]: GETGLOBAL R2 K7        ; R2 := mLists
 32 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mLoadOutCategories"]
 33 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 34 [-]: TEST      R1 1         ; if R1 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETGLOBAL R1 K7        ; R1 := mLists
 37 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mLoadOutCategories"]
 38 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xe0077a96]
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: LOADBOOL  R4 1 0       ; R4 := true
 41 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: LOADNIL   R1 R1        ; R1 := nil
 44 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 45 [-]: GETGLOBAL R3 K10       ; R3 := mSelected
 46 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Element"]
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: GETGLOBAL R2 K10       ; R2 := mSelected
 51 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["Element"]
 52 [-]: GETTABLE  R1 R2 K12    ; R1 := R2["EquippedItem"]
 53 [-]: LOADK     R2 3         ; R2 := 3.000000
 54 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 55 [-]: MOVE      R4 R1        ; R4 := R1
 56 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 57 [-]: TEST      R3 1         ; if R3 then PC := 62
 58 [-]: JMP       62           ; PC := 62
 59 [-]: SELF      R3 R1 K13    ; R4 := R1; R3 := R1[0xe1471700]
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: MOVE      R2 R3        ; R2 := R3
 62 [-]: GETGLOBAL R3 K10       ; R3 := mSelected
 63 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Element"]
 64 [-]: EQ        1 R3 K14     ; if R3 == nil then PC := 87
 65 [-]: JMP       87           ; PC := 87
 66 [-]: GETGLOBAL R3 K10       ; R3 := mSelected
 67 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Element"]
 68 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mCustSlot"]
 69 [-]: EQ        1 R3 K14     ; if R3 == nil then PC := 87
 70 [-]: JMP       87           ; PC := 87
 71 [-]: GETGLOBAL R3 K10       ; R3 := mSelected
 72 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Element"]
 73 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mCustSlot"]
 74 [-]: ADD       R3 R3 R0     ; R3 := R3 + R0
 75 [-]: SUB       R4 R2 K4     ; R4 := R2 - 1.000000
 76 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: LOADK     R3 0         ; R3 := 0.000000
 79 [-]: JMP       83           ; PC := 83
 80 [-]: LT        0 R3 K16     ; if R3 >= 0.000000 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: SUB       R3 R2 K4     ; R3 := R2 - 1.000000
 83 [-]: GETUPVAL  R4 U2        ; R4 := U2
 84 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4[0x20c43dc8]
 85 [-]: MOVE      R6 R3        ; R6 := R3
 86 [-]: CALL      R4 3 1       ; R4(R5,R6)
 87 [-]: GETUPVAL  R4 U4        ; R4 := U4
 88 [-]: GETTABLE  R4 R4 K18    ; R4 := R4[0x659d451f]
 89 [-]: GETGLOBAL R5 K19       ; R5 := 0x0032441c
 90 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["UISound_DialogOpen"]
 91 [-]: CALL      R4 2 1       ; R4(R5)
 92 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 10592
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["SELECTING_PART"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 10599
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADBOOL  R1 1 0       ; R1 := true
  2 [-]: SETGLOBAL R1 K0        ; mInputBlocked := R1
  3 [-]: SETGLOBAL R0 K1        ; mViewingConsumables := R0
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["BROWSING_CONSUMABLES"]
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x9ba7909f
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x5374b92e]
 10 [-]: GETGLOBAL R3 K5        ; R3 := 0x6af348d2
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: TEST      R1 1         ; if R1 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 15 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 16 [-]: GETGLOBAL R3 K5        ; R3 := 0x6af348d2
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: SETGLOBAL R1 K6        ; mConsumablesInstance := R1
 19 [-]: GETGLOBAL R1 K9        ; R1 := _T
 20 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0x680ea051]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: LOADK     R2 1         ; R2 := 1.000000
 24 [-]: TEST      R2 1         ; if R2 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADK     R2 2         ; R2 := 2.000000
 27 [-]: GETGLOBAL R3 K11       ; R3 := 0xb009bbc6
 28 [-]: LOADK     R4 K12       ; R4 := "/Lotus/Types/Game/Store/ProductsManifest"
 29 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 30 [-]: CALL      R1 0 1       ; R1(R2,...)
 31 [-]: GETGLOBAL R1 K9        ; R1 := _T
 32 [-]: CLOSURE   R2 0         ; R2 := closure(Function #157.1)
 33 [-]: GETUPVAL  R0 U2        ; R0 := U2
 34 [-]: SETTABLE  R1 K13 R2    ; R1["ConsumablesOverlayClosedCallback"] := R2
 35 [-]: GETGLOBAL R1 K9        ; R1 := _T
 36 [-]: CLOSURE   R2 1         ; R2 := closure(Function #157.2)
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: GETUPVAL  R0 U1        ; R0 := U1
 39 [-]: GETUPVAL  R0 U3        ; R0 := U3
 40 [-]: GETUPVAL  R0 U4        ; R0 := U4
 41 [-]: SETTABLE  R1 K14 R2    ; R1["ConsumablesOverlayElementSelectedCallback"] := R2
 42 [-]: RETURN    R0 1         ; return 


; Function #157.1:
;
; Name:            
; Defined at line: 10609
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETGLOBAL R0 K0        ; mConsumablesChanged := R0
  2 [-]: SETGLOBAL R1 K1        ; mEmotesChanged := R1
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xbe07b886]
  5 [-]: CALL      R2 1 1       ; R2()
  6 [-]: RETURN    R0 1         ; return 


; Function #157.2:
;
; Name:            
; Defined at line: 10615
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADBOOL  R2 1 0       ; R2 := true
  8 [-]: SETGLOBAL R2 K1        ; mInputBlocked := R2
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["SELECTING_CONSUMABLES"]
 12 [-]: CALL      R2 2 1       ; R2(R3)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETGLOBAL R2 K3        ; R2 := mSelected
 16 [-]: SETTABLE  R2 K4 R0     ; R2["Consumable"] := R0
 17 [-]: JMP       20           ; PC := 20
 18 [-]: GETGLOBAL R2 K3        ; R2 := mSelected
 19 [-]: SETTABLE  R2 K5 R0     ; R2["Emote"] := R0
 20 [-]: GETUPVAL  R2 U2        ; R2 := U2
 21 [-]: MOVE      R3 R0        ; R3 := R0
 22 [-]: CALL      R2 2 1       ; R2(R3)
 23 [-]: GETUPVAL  R2 U3        ; R2 := U3
 24 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x659d451f]
 25 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 26 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["UISound_Select"]
 27 [-]: CALL      R2 2 1       ; R2(R3)
 28 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 10631
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PolarityTree"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: LOADBOOL  R0 1 0       ; R0 := true
  9 [-]: SETGLOBAL R0 K3        ; mInputBlocked := R0
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x6bfeac2e]
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: GETUPVAL  R1 U2        ; R1 := U2
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["BROWSING_WAY_TREE"]
 16 [-]: CALL      R0 2 1       ; R0(R1)
 17 [-]: GETGLOBAL R0 K6        ; R0 := 0x9ba7909f
 18 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x5374b92e]
 19 [-]: GETGLOBAL R2 K8        ; R2 := 0x8c2d7fcb
 20 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 21 [-]: TEST      R0 1         ; if R0 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETGLOBAL R0 K10       ; R0 := 0xae91e43b
 24 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0x1fd6abd0]
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0x8c2d7fcb
 26 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 27 [-]: SETGLOBAL R0 K9        ; mTennoWayInstance := R0
 28 [-]: GETGLOBAL R0 K1        ; R0 := _T
 29 [-]: CLOSURE   R1 0         ; R1 := closure(Function #158.1)
 30 [-]: GETUPVAL  R0 U3        ; R0 := U3
 31 [-]: GETUPVAL  R0 U2        ; R0 := U2
 32 [-]: GETUPVAL  R0 U4        ; R0 := U4
 33 [-]: SETTABLE  R0 K12 R1    ; R0["TennoWayClosedCallback"] := R1
 34 [-]: GETGLOBAL R0 K9        ; R0 := mTennoWayInstance
 35 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0xe4162eed]
 36 [-]: LOADK     R2 K14       ; R2 := "SetCallBack"
 37 [-]: LOADK     R3 K12       ; R3 := "TennoWayClosedCallback"
 38 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 39 [-]: GETGLOBAL R0 K9        ; R0 := mTennoWayInstance
 40 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0xe4162eed]
 41 [-]: LOADK     R2 K15       ; R2 := "ShowTreeSelection"
 42 [-]: LOADK     R3 K16       ; R3 := ""
 43 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 44 [-]: RETURN    R0 1         ; return 


; Function #158.1:
;
; Name:            
; Defined at line: 10642
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["BROWSING_WAY_TREE"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0xbe07b886]
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 10651
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADBOOL  R1 1 0       ; R1 := true
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 10655
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADBOOL  R1 0 0       ; R1 := false
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 10659
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 1         ; if R0 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K1        ; R3 := "OnPvpDefaultLoadoutCreated failed:"
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K2        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["BackgroundMovie"]
 10 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xe4162eed]
 11 [-]: LOADK     R4 K5        ; R4 := "ShowBlockingMessage"
 12 [-]: LOADK     R5 K6        ; R5 := "0"
 13 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 14 [-]: LOADBOOL  R2 0 0       ; R2 := false
 15 [-]: SETUPVAL  R2 U0        ; U82 := R0
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0x05eeb9db]
 18 [-]: GETGLOBAL R3 K2        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["ArsenalState"]
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 10671
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADBOOL  R0 0 0       ; R0 := false
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
 12 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x626a83c1]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: LEN       R1 R0        ; R1 := # R0
 20 [-]: EQ        0 R1 K3      ; if R1 ~= 0.000000 then PC := 116
 21 [-]: JMP       116          ; PC := 116
 22 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 23 [-]: GETGLOBAL R2 K4        ; R2 := 0x6c97a788
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x313a28d9]
 25 [-]: CALL      R2 1 2       ; R2 := R2()
 26 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mItemId"]
 27 [-]: GETGLOBAL R4 K4        ; R4 := 0x6c97a788
 28 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["InvalidItemID"]
 29 [-]: SETTABLE  R3 K7 R4     ; R3["mId"] := R4
 30 [-]: GETUPVAL  R3 U1        ; R3 := U1
 31 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[0xe25dca66]
 32 [-]: LOADK     R4 K11       ; R4 := "Default Loadout"
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: SETTABLE  R2 K9 R3     ; R2["mName"] := R3
 35 [-]: NEWTABLE  R3 4 0       ; R3 := {}
 36 [-]: LOADK     R4 0         ; R4 := 0.000000
 37 [-]: LOADK     R5 2         ; R5 := 2.000000
 38 [-]: LOADK     R6 1         ; R6 := 1.000000
 39 [-]: LOADK     R7 3         ; R7 := 3.000000
 40 [-]: SETLIST   R3 4 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
 41 [-]: LOADK     R4 1         ; R4 := 1.000000
 42 [-]: LEN       R5 R3        ; R5 := # R3
 43 [-]: LOADK     R6 1         ; R6 := 1.000000
 44 [-]: FORPREP   R4 74        ; R4 -= R6; PC := 74
 45 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 46 [-]: GETUPVAL  R9 U2        ; R9 := U2
 47 [-]: GETTABLE  R9 R9 K12    ; R9 := R9[0x866fb296]
 48 [-]: LOADK     R10 3        ; R10 := 3.000000
 49 [-]: MOVE      R11 R8       ; R11 := R8
 50 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 51 [-]: LOADK     R10 1        ; R10 := 1.000000
 52 [-]: LEN       R11 R9       ; R11 := # R9
 53 [-]: LOADK     R12 1        ; R12 := 1.000000
 54 [-]: FORPREP   R10 73       ; R10 -= R12; PC := 73
 55 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 56 [-]: GETTABLE  R15 R14 K13  ; R15 := R14["mStoreItem"]
 57 [-]: SELF      R15 R15 K14  ; R16 := R15; R15 := R15[0x9470f5c2]
 58 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 59 [-]: TEST      R15 0        ; if not R15 then PC := 73
 60 [-]: JMP       73           ; PC := 73
 61 [-]: GETGLOBAL R15 K4       ; R15 := 0x6c97a788
 62 [-]: GETTABLE  R15 R15 K15  ; R15 := R15[0xd81046cb]
 63 [-]: CALL      R15 1 2      ; R15 := R15()
 64 [-]: MOVE      R1 R15       ; R1 := R15
 65 [-]: GETTABLE  R15 R14 K16  ; R15 := R14["Item"]
 66 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["mItemId"]
 67 [-]: SETTABLE  R1 K6 R15    ; R1["mItemId"] := R15
 68 [-]: SELF      R15 R2 K17   ; R16 := R2; R15 := R2[0xffca321e]
 69 [-]: MOVE      R17 R8       ; R17 := R8
 70 [-]: MOVE      R18 R1       ; R18 := R1
 71 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 72 [-]: JMP       74           ; PC := 74
 73 [-]: FORLOOP   R10 55       ; R10 += R12; if R10 <= R11 then begin PC := 55; R13 := R10 end
 74 [-]: FORLOOP   R4 45        ; R4 += R6; if R4 <= R5 then begin PC := 45; R7 := R4 end
 75 [-]: GETGLOBAL R15 K1       ; R15 := 0x25d99d89
 76 [-]: SELF      R15 R15 K18  ; R16 := R15; R15 := R15[0x25a6e75e]
 77 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 78 [-]: SELF      R16 R15 K19  ; R17 := R15; R16 := R15[0x8ed300d6]
 79 [-]: LOADK     R18 3        ; R18 := 3.000000
 80 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 81 [-]: GETTABLE  R17 R2 K6    ; R17 := R2["mItemId"]
 82 [-]: GETTABLE  R18 R16 K20  ; R18 := R16[1.000000]
 83 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["mItemId"]
 84 [-]: GETTABLE  R18 R18 K7   ; R18 := R18["mId"]
 85 [-]: SETTABLE  R17 K7 R18   ; R17["mId"] := R18
 86 [-]: SELF      R17 R15 K21  ; R18 := R15; R17 := R15[0x6beb8ae1]
 87 [-]: LOADK     R19 3        ; R19 := 3.000000
 88 [-]: MOVE      R20 R2       ; R20 := R2
 89 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
 90 [-]: SELF      R17 R15 K22  ; R18 := R15; R17 := R15[0x4b28a14c]
 91 [-]: LOADK     R19 3        ; R19 := 3.000000
 92 [-]: GETTABLE  R20 R2 K6    ; R20 := R2["mItemId"]
 93 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
 94 [-]: GETGLOBAL R17 K23      ; R17 := _T
 95 [-]: SETTABLE  R17 K24 K25  ; R17["LoadoutSaveRequired"] := true
 96 [-]: LOADBOOL  R17 1 0      ; R17 := true
 97 [-]: SETUPVAL  R17 U0       ; U82 := R0
 98 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
 99 [-]: GETGLOBAL R18 K23      ; R18 := _T
100 [-]: GETTABLE  R18 R18 K26  ; R18 := R18["BackgroundMovie"]
101 [-]: CALL      R17 2 2      ; R17 := R17(R18)
102 [-]: TEST      R17 1        ; if R17 then PC := 110
103 [-]: JMP       110          ; PC := 110
104 [-]: GETGLOBAL R17 K23      ; R17 := _T
105 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["BackgroundMovie"]
106 [-]: SELF      R17 R17 K27  ; R18 := R17; R17 := R17[0xe4162eed]
107 [-]: LOADK     R19 K28      ; R19 := "ShowBlockingMessage"
108 [-]: LOADK     R20 K29      ; R20 := "1"
109 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
110 [-]: GETGLOBAL R17 K1       ; R17 := 0x25d99d89
111 [-]: SELF      R17 R17 K30  ; R18 := R17; R17 := R17[0xb6e2ab0d]
112 [-]: LOADK     R19 K31      ; R19 := "OnPvpDefaultLoadoutCreated"
113 [-]: CALL      R17 3 1      ; R17(R18,R19)
114 [-]: LOADBOOL  R17 0 0      ; R17 := false
115 [-]: RETURN    R17 2        ; return R17
116 [-]: LOADBOOL  R17 1 0      ; R17 := true
117 [-]: RETURN    R17 2        ; return R17
118 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 10728
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPendingRandomizeInfo
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Items"]
  3 [-]: LEN       R0 R0        ; R0 := # R0
  4 [-]: LT        0 K2 R0      ; if 0.000000 >= R0 then PC := 76
  5 [-]: JMP       76           ; PC := 76
  6 [-]: LOADK     R0 1         ; R0 := 1.000000
  7 [-]: GETGLOBAL R1 K0        ; R1 := mPendingRandomizeInfo
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Items"]
  9 [-]: LEN       R1 R1        ; R1 := # R1
 10 [-]: LOADK     R2 1         ; R2 := 1.000000
 11 [-]: FORPREP   R0 32        ; R0 -= R2; PC := 32
 12 [-]: GETUPVAL  R4 U1        ; R4 := U1
 13 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SWAPPING_ITEM"]
 14 [-]: SETUPVAL  R4 U0        ; U82 := R0
 15 [-]: GETGLOBAL R4 K4        ; R4 := mSelected
 16 [-]: GETGLOBAL R5 K0        ; R5 := mPendingRandomizeInfo
 17 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["SlotInfo"]
 18 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 19 [-]: SETTABLE  R4 K5 R5     ; R4["Element"] := R5
 20 [-]: GETUPVAL  R4 U2        ; R4 := U2
 21 [-]: GETGLOBAL R5 K0        ; R5 := mPendingRandomizeInfo
 22 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Items"]
 23 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 24 [-]: CALL      R4 2 1       ; R4(R5)
 25 [-]: LOADBOOL  R4 0 0       ; R4 := false
 26 [-]: SETGLOBAL R4 K7        ; mInputBlocked := R4
 27 [-]: GETUPVAL  R4 U3        ; R4 := U3
 28 [-]: CALL      R4 1 1       ; R4()
 29 [-]: GETUPVAL  R4 U1        ; R4 := U1
 30 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["SELECTING_PART"]
 31 [-]: SETUPVAL  R4 U0        ; U82 := R0
 32 [-]: FORLOOP   R0 12        ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
 33 [-]: LOADK     R4 1         ; R4 := 1.000000
 34 [-]: GETGLOBAL R5 K0        ; R5 := mPendingRandomizeInfo
 35 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["SlotInfo"]
 36 [-]: LEN       R5 R5        ; R5 := # R5
 37 [-]: LOADK     R6 1         ; R6 := 1.000000
 38 [-]: FORPREP   R4 44        ; R4 -= R6; PC := 44
 39 [-]: GETUPVAL  R8 U4        ; R8 := U4
 40 [-]: GETGLOBAL R9 K0        ; R9 := mPendingRandomizeInfo
 41 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["SlotInfo"]
 42 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
 43 [-]: CALL      R8 2 1       ; R8(R9)
 44 [-]: FORLOOP   R4 39        ; R4 += R6; if R4 <= R5 then begin PC := 39; R7 := R4 end
 45 [-]: GETGLOBAL R8 K0        ; R8 := mPendingRandomizeInfo
 46 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["OriginalSlot"]
 47 [-]: EQ        1 R8 K10     ; if R8 == nil then PC := 177
 48 [-]: JMP       177          ; PC := 177
 49 [-]: GETUPVAL  R8 U5        ; R8 := U5
 50 [-]: GETGLOBAL R9 K0        ; R9 := mPendingRandomizeInfo
 51 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["OriginalSlot"]
 52 [-]: CALL      R8 2 1       ; R8(R9)
 53 [-]: GETGLOBAL R8 K4        ; R8 := mSelected
 54 [-]: GETGLOBAL R9 K0        ; R9 := mPendingRandomizeInfo
 55 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["OriginalSlot"]
 56 [-]: SETTABLE  R8 K5 R9     ; R8["Element"] := R9
 57 [-]: GETGLOBAL R8 K11       ; R8 := mLists
 58 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["mLoadOutList"]
 59 [-]: GETTABLE  R8 R8 K13    ; R8 := R8[0xad85f085]
 60 [-]: GETGLOBAL R9 K0        ; R9 := mPendingRandomizeInfo
 61 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["OriginalSlot"]
 62 [-]: CALL      R8 2 1       ; R8(R9)
 63 [-]: GETGLOBAL R8 K0        ; R8 := mPendingRandomizeInfo
 64 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["OriginalSlot"]
 65 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mIndex"]
 66 [-]: EQ        1 R8 K15     ; if R8 == 5.000000 then PC := 177
 67 [-]: JMP       177          ; PC := 177
 68 [-]: GETGLOBAL R8 K0        ; R8 := mPendingRandomizeInfo
 69 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["OriginalSlot"]
 70 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mIndex"]
 71 [-]: EQ        1 R8 K16     ; if R8 == 6.000000 then PC := 177
 72 [-]: JMP       177          ; PC := 177
 73 [-]: GETGLOBAL R8 K17       ; R8 := _T
 74 [-]: SETTABLE  R8 K18 K19   ; R8["mSentinelMode"] := false
 75 [-]: JMP       177          ; PC := 177
 76 [-]: GETGLOBAL R8 K20       ; R8 := 0x7b998233
 77 [-]: GETGLOBAL R9 K21       ; R9 := 0x25d99d89
 78 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 79 [-]: NOT       R8 R8        ; R8 := not R8
 80 [-]: GETGLOBAL R9 K22       ; R9 := 0xcfc01047
 81 [-]: GETGLOBAL R10 K23      ; R10 := mCurrentLoadout
 82 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 83 [-]: JMP       100          ; PC := 100
 84 [-]: TEST      R8 0         ; if not R8 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: GETGLOBAL R14 K21      ; R14 := 0x25d99d89
 87 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14[0x400b84a1]
 88 [-]: MOVE      R16 R12      ; R16 := R12
 89 [-]: MOVE      R17 R13      ; R17 := R13
 90 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
 91 [-]: SELF      R14 R13 K25  ; R15 := R13; R14 := R13[0x0384916a]
 92 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 93 [-]: TEST      R14 0        ; if not R14 then PC := 100
 94 [-]: JMP       100          ; PC := 100
 95 [-]: GETGLOBAL R14 K26      ; R14 := mInventory
 96 [-]: SELF      R14 R14 K27  ; R15 := R14; R14 := R14[0x6beb8ae1]
 97 [-]: MOVE      R16 R12      ; R16 := R12
 98 [-]: MOVE      R17 R13      ; R17 := R13
 99 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
100 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 84; R11 := R12 end
101 [-]: JMP       84           ; PC := 84
102 [-]: TEST      R8 0         ; if not R8 then PC := 107
103 [-]: JMP       107          ; PC := 107
104 [-]: GETGLOBAL R14 K21      ; R14 := 0x25d99d89
105 [-]: SELF      R14 R14 K28  ; R15 := R14; R14 := R14[0x121ec068]
106 [-]: CALL      R14 2 1      ; R14(R15)
107 [-]: GETGLOBAL R14 K17      ; R14 := _T
108 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["MenuSuitAvatar"]
109 [-]: GETGLOBAL R15 K20      ; R15 := 0x7b998233
110 [-]: MOVE      R16 R14      ; R16 := R14
111 [-]: CALL      R15 2 2      ; R15 := R15(R16)
112 [-]: TEST      R15 1        ; if R15 then PC := 143
113 [-]: JMP       143          ; PC := 143
114 [-]: SELF      R15 R14 K30  ; R16 := R14; R15 := R14[0xde321e6f]
115 [-]: CALL      R15 2 2      ; R15 := R15(R16)
116 [-]: SELF      R15 R15 K31  ; R16 := R15; R15 := R15[0x527a892b]
117 [-]: CALL      R15 2 1      ; R15(R16)
118 [-]: SELF      R15 R14 K30  ; R16 := R14; R15 := R14[0xde321e6f]
119 [-]: CALL      R15 2 2      ; R15 := R15(R16)
120 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15[0x374b084a]
121 [-]: CALL      R15 2 1      ; R15(R16)
122 [-]: GETUPVAL  R15 U6       ; R15 := U6
123 [-]: GETUPVAL  R16 U7       ; R16 := U7
124 [-]: GETTABLE  R16 R16 K33  ; R16 := R16["Current"]
125 [-]: EQ        1 R16 K35    ; if R16 == 2.000000 then PC := 128
126 [-]: JMP       128          ; PC := 128
127 [-]: LOADBOOL  R16 0 1      ; R16 := false; PC := 128
128 [-]: LOADBOOL  R16 1 0      ; R16 := true
129 [-]: CALL      R15 2 1      ; R15(R16)
130 [-]: GETGLOBAL R15 K20      ; R15 := 0x7b998233
131 [-]: GETUPVAL  R16 U8       ; R16 := U8
132 [-]: CALL      R15 2 2      ; R15 := R15(R16)
133 [-]: TEST      R15 0        ; if not R15 then PC := 139
134 [-]: JMP       139          ; PC := 139
135 [-]: SELF      R15 R14 K30  ; R16 := R14; R15 := R14[0xde321e6f]
136 [-]: CALL      R15 2 2      ; R15 := R15(R16)
137 [-]: SELF      R15 R15 K36  ; R16 := R15; R15 := R15[0x0c277ae1]
138 [-]: CALL      R15 2 1      ; R15(R16)
139 [-]: GETUPVAL  R15 U9       ; R15 := U9
140 [-]: GETTABLE  R15 R15 K37  ; R15 := R15[0xcfd657f3]
141 [-]: MOVE      R16 R14      ; R16 := R14
142 [-]: CALL      R15 2 1      ; R15(R16)
143 [-]: GETUPVAL  R15 U10      ; R15 := U10
144 [-]: GETUPVAL  R16 U11      ; R16 := U11
145 [-]: GETTABLE  R16 R16 K38  ; R16 := R16["UI_MODE_IN_SPACE_SHIP"]
146 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 165
147 [-]: JMP       165          ; PC := 165
148 [-]: TEST      R8 0         ; if not R8 then PC := 165
149 [-]: JMP       165          ; PC := 165
150 [-]: GETGLOBAL R15 K21      ; R15 := 0x25d99d89
151 [-]: SELF      R15 R15 K39  ; R16 := R15; R15 := R15[0x3c6b0324]
152 [-]: CALL      R15 2 2      ; R15 := R15(R16)
153 [-]: TEST      R15 1        ; if R15 then PC := 160
154 [-]: JMP       160          ; PC := 160
155 [-]: GETGLOBAL R15 K21      ; R15 := 0x25d99d89
156 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15[0x9f91f49d]
157 [-]: CALL      R15 2 2      ; R15 := R15(R16)
158 [-]: TEST      R15 0        ; if not R15 then PC := 165
159 [-]: JMP       165          ; PC := 165
160 [-]: LOADK     R15 3        ; R15 := 3.000000
161 [-]: SETUPVAL  R15 U12      ; U82 := R12
162 [-]: GETUPVAL  R15 U9       ; R15 := U9
163 [-]: GETTABLE  R15 R15 K41  ; R15 := R15[0xd4c67576]
164 [-]: CALL      R15 1 1      ; R15()
165 [-]: GETGLOBAL R15 K11      ; R15 := mLists
166 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["mLoadOutList"]
167 [-]: SELF      R15 R15 K42  ; R16 := R15; R15 := R15[0xea061e98]
168 [-]: CLOSURE   R17 0        ; R17 := closure(Function #163.1)
169 [-]: GETUPVAL  R0 U9        ; R0 := U9
170 [-]: GETUPVAL  R0 U13       ; R0 := U13
171 [-]: CALL      R15 3 1      ; R15(R16,R17)
172 [-]: GETGLOBAL R15 K11      ; R15 := mLists
173 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["mLoadOutList"]
174 [-]: SELF      R15 R15 K43  ; R16 := R15; R15 := R15[0x71e9ac81]
175 [-]: CLOSURE   R17 1        ; R17 := closure(Function #163.2)
176 [-]: CALL      R15 3 1      ; R15(R16,R17)
177 [-]: GETGLOBAL R15 K0       ; R15 := mPendingRandomizeInfo
178 [-]: NEWTABLE  R16 0 0      ; R16 := {}
179 [-]: SETTABLE  R15 K1 R16   ; R15[0x25d99d89] := R16
180 [-]: GETGLOBAL R15 K0       ; R15 := mPendingRandomizeInfo
181 [-]: NEWTABLE  R16 0 0      ; R16 := {}
182 [-]: SETTABLE  R15 K6 R16   ; R15["SlotInfo"] := R16
183 [-]: GETGLOBAL R15 K0       ; R15 := mPendingRandomizeInfo
184 [-]: SETTABLE  R15 K9 K10   ; R15["OriginalSlot"] := nil
185 [-]: RETURN    R0 1         ; return 


; Function #163.1:
;
; Name:            
; Defined at line: 10786
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutId"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 29
  3 [-]: JMP       29           ; PC := 29
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["isFixedQuestParacesis"]
  5 [-]: TEST      R1 1         ; if R1 then PC := 29
  6 [-]: JMP       29           ; PC := 29
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x866fb296]
  9 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["LoadOutType"]
 10 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["LoadOutId"]
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: SETTABLE  R0 K3 R1     ; R0["OwnedItems"] := R1
 13 [-]: GETGLOBAL R1 K6        ; R1 := mCurrentLoadout
 14 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["LoadOutType"]
 15 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 16 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x2abbe722]
 17 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["LoadOutId"]
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: GETTABLE  R2 R1 K9     ; R2 := R1["mItemId"]
 20 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["mId"]
 21 [-]: SETTABLE  R0 K8 R2     ; R0["UID"] := R2
 22 [-]: GETTABLE  R2 R1 K11    ; R2 := R1["mModSlot"]
 23 [-]: SETTABLE  R0 K11 R2    ; R0[0x7b998233] := R2
 24 [-]: GETTABLE  R2 R1 K12    ; R2 := R1["mCustSlot"]
 25 [-]: SETTABLE  R0 K12 R2    ; R0["mCustSlot"] := R2
 26 [-]: GETUPVAL  R2 U1        ; R2 := U1
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #163.2:
;
; Name:            
; Defined at line: 10798
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: SETGLOBAL R0 K0        ; mInputBlocked := R0
  3 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  4 [-]: GETGLOBAL R1 K2        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["SelectedLoadOutPart"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R0 K2        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["SelectedLoadOutPart"]
 11 [-]: GETGLOBAL R1 K4        ; R1 := mLists
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mLoadOutList"]
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5fbddc1a]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: LT        0 R1 R0      ; if R1 >= R0 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R0 K2        ; R0 := _T
 18 [-]: SETTABLE  R0 K3 K7     ; R0["SelectedLoadOutPart"] := 1.000000
 19 [-]: JMP       36           ; PC := 36
 20 [-]: GETGLOBAL R0 K4        ; R0 := mLists
 21 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mLoadOutList"]
 22 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x5465f8f3]
 23 [-]: GETGLOBAL R2 K2        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SelectedLoadOutPart"]
 25 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 26 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETTABLE  R1 R0 K9     ; R1 := R0["mVisible"]
 32 [-]: TEST      R1 1         ; if R1 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: GETGLOBAL R1 K2        ; R1 := _T
 35 [-]: SETTABLE  R1 K3 K7     ; R1["SelectedLoadOutPart"] := 1.000000
 36 [-]: GETGLOBAL R1 K4        ; R1 := mLists
 37 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mLoadOutList"]
 38 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x1e63ac7a]
 39 [-]: GETGLOBAL R3 K2        ; R3 := _T
 40 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["SelectedLoadOutPart"]
 41 [-]: CALL      R1 3 1       ; R1(R2,R3)
 42 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 10816
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  2 [-]: LOADK     R3 K1        ; R3 := "FocusAbiltySet(result="
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x64fb1586
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ")"
  7 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
  8 [-]: CALL      R2 2 1       ; R2(R3)
  9 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 10821
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETGLOBAL R0 K0        ; R0 := mLists
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mLoadOutList"]
  3 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["FocusSlotId"]
  4 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 153
  5 [-]: JMP       153          ; PC := 153
  6 [-]: GETGLOBAL R0 K0        ; R0 := mLists
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mLoadOutList"]
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xca30dfb6]
  9 [-]: GETGLOBAL R2 K0        ; R2 := mLists
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mLoadOutList"]
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["FocusSlotId"]
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: GETGLOBAL R2 K5        ; R2 := mCurrentLoadout
 15 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETGLOBAL R2 K5        ; R2 := mCurrentLoadout
 18 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["LoadOutType"]
 19 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 20 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETTABLE  R3 R2 K7     ; R3 := R2["mFocusSchool"]
 23 [-]: EQ        1 R3 K9      ; if R3 == 10.000000 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: GETTABLE  R1 R2 K7     ; R1 := R2["mFocusSchool"]
 26 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 40
 27 [-]: JMP       40           ; PC := 40
 28 [-]: GETGLOBAL R3 K10       ; R3 := 0x25d99d89
 29 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xa340c0e2]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: GETGLOBAL R4 K12       ; R4 := 0x7b998233
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: TEST      R4 1         ; if R4 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: SELF      R4 R3 K13    ; R5 := R3; R4 := R3[0xc6b8b3f2]
 37 [-]: LOADK     R6 K14       ; R6 := ""
 38 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 39 [-]: MOVE      R1 R4        ; R1 := R4
 40 [-]: GETGLOBAL R4 K15       ; R4 := _T
 41 [-]: SETTABLE  R4 K16 K3    ; R4["PolarityTree"] := nil
 42 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 153
 43 [-]: JMP       153          ; PC := 153
 44 [-]: GETUPVAL  R4 U0        ; R4 := U0
 45 [-]: GETTABLE  R4 R4 K17    ; R4 := R4[0x3077ca89]
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 153
 49 [-]: JMP       153          ; PC := 153
 50 [-]: GETTABLE  R5 R4 K18    ; R5 := R4["Ability"]
 51 [-]: GETGLOBAL R6 K19       ; R6 := 0x3d106989
 52 [-]: LOADK     R7 K20       ; R7 := "ActivateAbility "
 53 [-]: MOVE      R8 R5        ; R8 := R5
 54 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 55 [-]: CALL      R6 2 1       ; R6(R7)
 56 [-]: GETGLOBAL R6 K21       ; R6 := 0xb009bbc6
 57 [-]: MOVE      R7 R5        ; R7 := R5
 58 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 59 [-]: MOVE      R5 R6        ; R5 := R6
 60 [-]: GETGLOBAL R6 K12       ; R6 := 0x7b998233
 61 [-]: MOVE      R7 R5        ; R7 := R5
 62 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 63 [-]: TEST      R6 1         ; if R6 then PC := 153
 64 [-]: JMP       153          ; PC := 153
 65 [-]: GETGLOBAL R6 K10       ; R6 := 0x25d99d89
 66 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xa340c0e2]
 67 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 68 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 75
 69 [-]: JMP       75           ; PC := 75
 70 [-]: GETGLOBAL R6 K10       ; R6 := 0x25d99d89
 71 [-]: SELF      R6 R6 K22    ; R7 := R6; R6 := R6[0x74ad30b5]
 72 [-]: MOVE      R8 R5        ; R8 := R5
 73 [-]: LOADK     R9 K23       ; R9 := "FocusAbiltySet"
 74 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 75 [-]: GETGLOBAL R6 K21       ; R6 := 0xb009bbc6
 76 [-]: SELF      R7 R5 K24    ; R8 := R5; R7 := R5[0x60e42378]
 77 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 78 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 79 [-]: SELF      R7 R6 K25    ; R8 := R6; R7 := R6[0x9cb57e2b]
 80 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 81 [-]: LOADK     R8 0         ; R8 := 0.000000
 82 [-]: LOADK     R9 0         ; R9 := 0.000000
 83 [-]: GETGLOBAL R10 K26      ; R10 := 0xc8802016
 84 [-]: GETTABLE  R11 R7 K27   ; R11 := R7["nodes"]
 85 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 86 [-]: JMP       123          ; PC := 123
 87 [-]: GETTABLE  R15 R7 K28   ; R15 := R7["nodeTypes"]
 88 [-]: GETTABLE  R15 R15 R13  ; R15 := R15[R13]
 89 [-]: SELF      R16 R15 K29  ; R17 := R15; R16 := R15[0xf2deaf69]
 90 [-]: GETGLOBAL R18 K30      ; R18 := gLotusArtifactUpgradeType
 91 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 92 [-]: TEST      R16 0        ; if not R16 then PC := 123
 93 [-]: JMP       123          ; PC := 123
 94 [-]: SELF      R16 R15 K29  ; R17 := R15; R16 := R15[0xf2deaf69]
 95 [-]: GETGLOBAL R18 K31      ; R18 := gLotusFocusAbilityType
 96 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 97 [-]: TEST      R16 1        ; if R16 then PC := 123
 98 [-]: JMP       123          ; PC := 123
 99 [-]: ADD       R8 R8 K32    ; R8 := R8 + 1.000000
100 [-]: GETGLOBAL R16 K10      ; R16 := 0x25d99d89
101 [-]: SELF      R16 R16 K33  ; R17 := R16; R16 := R16[0x9de9471a]
102 [-]: MOVE      R18 R15      ; R18 := R15
103 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
104 [-]: GETGLOBAL R17 K12      ; R17 := 0x7b998233
105 [-]: GETTABLE  R18 R16 K34  ; R18 := R16["mItemType"]
106 [-]: CALL      R17 2 2      ; R17 := R17(R18)
107 [-]: TEST      R17 1        ; if R17 then PC := 123
108 [-]: JMP       123          ; PC := 123
109 [-]: GETGLOBAL R17 K8       ; R17 := 0x6c97a788
110 [-]: GETTABLE  R17 R17 K35  ; R17 := R17[0x1aba4d9e]
111 [-]: CALL      R17 1 2      ; R17 := R17()
112 [-]: SETTABLE  R17 K34 R15  ; R17["mItemType"] := R15
113 [-]: GETTABLE  R18 R17 K36  ; R18 := R17["mInstance"]
114 [-]: SELF      R18 R18 K13  ; R19 := R18; R18 := R18[0xc6b8b3f2]
115 [-]: LOADK     R20 K14      ; R20 := ""
116 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
117 [-]: EQ        1 R18 R1     ; if R18 == R1 then PC := 122
118 [-]: JMP       122          ; PC := 122
119 [-]: GETTABLE  R19 R16 K37  ; R19 := R16["mIsUniversal"]
120 [-]: TEST      R19 0        ; if not R19 then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: ADD       R9 R9 K32    ; R9 := R9 + 1.000000
123 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 87; R12 := R13 end
124 [-]: JMP       87           ; PC := 87
125 [-]: GETTABLE  R19 R4 K39   ; R19 := R4["Polarity"]
126 [-]: SETTABLE  R0 K38 R19   ; R0["Title"] := R19
127 [-]: GETGLOBAL R19 K21      ; R19 := 0xb009bbc6
128 [-]: LOADK     R20 K41      ; R20 := "/Lotus/Interface/Icons/StoreIcons/Operator/FocusLenses/"
129 [-]: GETTABLE  R21 R4 K42   ; R21 := R4["Icon"]
130 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
131 [-]: CALL      R19 2 2      ; R19 := R19(R20)
132 [-]: SETTABLE  R0 K40 R19   ; R0["Texture"] := R19
133 [-]: GETTABLE  R19 R0 K40   ; R19 := R0["Texture"]
134 [-]: SETTABLE  R0 K43 R19   ; R0["SpecialIcon"] := R19
135 [-]: MOVE      R19 R9       ; R19 := R9
136 [-]: LOADK     R20 K45      ; R20 := " / "
137 [-]: MOVE      R21 R8       ; R21 := R8
138 [-]: LOADK     R22 K46      ; R22 := " "
139 [-]: GETGLOBAL R23 K47      ; R23 := 0xae91e43b
140 [-]: SELF      R23 R23 K48  ; R24 := R23; R23 := R23[0x42b04007]
141 [-]: LOADK     R25 K49      ; R25 := "/Lotus/Language/Menu/Unlocked"
142 [-]: LOADBOOL  R26 1 0      ; R26 := true
143 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
144 [-]: CONCAT    R19 R19 R23  ; R19 := R19 .. R20 .. R21 .. R22 .. R23
145 [-]: SETTABLE  R0 K44 R19   ; R0["SubTitle"] := R19
146 [-]: GETGLOBAL R19 K0       ; R19 := mLists
147 [-]: GETTABLE  R19 R19 K1   ; R19 := R19["mLoadOutList"]
148 [-]: GETTABLE  R19 R19 K50  ; R19 := R19[0xb15e6aca]
149 [-]: MOVE      R20 R0       ; R20 := R0
150 [-]: CALL      R19 2 1      ; R19(R20)
151 [-]: GETGLOBAL R19 K15      ; R19 := _T
152 [-]: SETTABLE  R19 K16 R1   ; R19["PolarityTree"] := R1
153 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 10885
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: LOADBOOL  R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mInputBlocked := R0
  3 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x25d99d89
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K2        ; R0 := 0x25d99d89
 10 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x25a6e75e]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: SETGLOBAL R0 K3        ; mInventory := R0
 13 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
 14 [-]: GETGLOBAL R1 K5        ; R1 := 0x96517417
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 1         ; if R0 then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
 19 [-]: GETGLOBAL R1 K3        ; R1 := mInventory
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x6c97a788
 24 [-]: GETTABLE  R0 R0 K8     ; R0 := R0[0x779b1304]
 25 [-]: GETGLOBAL R1 K5        ; R1 := 0x96517417
 26 [-]: GETGLOBAL R2 K3        ; R2 := mInventory
 27 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 28 [-]: SETGLOBAL R0 K6        ; mUpsellHelper := R0
 29 [-]: GETGLOBAL R0 K9        ; R0 := _T
 30 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["loadoutInProgress"]
 31 [-]: EQ        1 R0 K11     ; if R0 == nil then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETGLOBAL R0 K9        ; R0 := _T
 34 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["loadoutInProgress"]
 35 [-]: SETGLOBAL R0 K12       ; mCurrentLoadout := R0
 36 [-]: GETGLOBAL R0 K9        ; R0 := _T
 37 [-]: SETTABLE  R0 K10 K11   ; R0["loadoutInProgress"] := nil
 38 [-]: JMP       56           ; PC := 56
 39 [-]: NEWTABLE  R0 0 0       ; R0 := {}
 40 [-]: SETGLOBAL R0 K12       ; mCurrentLoadout := R0
 41 [-]: LOADK     R0 0         ; R0 := 0.000000
 42 [-]: LOADK     R1 9         ; R1 := 9.000000
 43 [-]: LOADK     R2 1         ; R2 := 1.000000
 44 [-]: FORPREP   R0 55        ; R0 -= R2; PC := 55
 45 [-]: GETGLOBAL R4 K12       ; R4 := mCurrentLoadout
 46 [-]: GETGLOBAL R5 K3        ; R5 := mInventory
 47 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x566259e1]
 48 [-]: MOVE      R7 R3        ; R7 := R3
 49 [-]: GETGLOBAL R8 K3        ; R8 := mInventory
 50 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8[0x4e457768]
 51 [-]: MOVE      R10 R3       ; R10 := R3
 52 [-]: CALL      R8 3 0       ; R8,... := R8(R9,R10)
 53 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 54 [-]: SETTABLE  R4 R3 R5     ; R4[R3] := R5
 55 [-]: FORLOOP   R0 45        ; R0 += R2; if R0 <= R1 then begin PC := 45; R3 := R0 end
 56 [-]: GETGLOBAL R4 K15       ; R4 := 0xae91e43b
 57 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe4162eed]
 58 [-]: LOADK     R6 K17       ; R6 := "UpdateFocusSlot"
 59 [-]: LOADK     R7 K18       ; R7 := ""
 60 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 61 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 62 [-]: GETGLOBAL R5 K19       ; R5 := 0xcfc01047
 63 [-]: GETGLOBAL R6 K20       ; R6 := LOADOUT_SLOTS
 64 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 65 [-]: JMP       258          ; PC := 258
 66 [-]: GETTABLE  R10 R9 K21   ; R10 := R9["LoadOutId"]
 67 [-]: EQ        1 R10 K11    ; if R10 == nil then PC := 258
 68 [-]: JMP       258          ; PC := 258
 69 [-]: LOADBOOL  R10 0 0      ; R10 := false
 70 [-]: GETTABLE  R11 R9 K22   ; R11 := R9["LoadOutType"]
 71 [-]: EQ        0 R11 K23    ; if R11 ~= 0.000000 then PC := 101
 72 [-]: JMP       101          ; PC := 101
 73 [-]: GETTABLE  R11 R9 K21   ; R11 := R9["LoadOutId"]
 74 [-]: EQ        0 R11 K24    ; if R11 ~= 3.000000 then PC := 101
 75 [-]: JMP       101          ; PC := 101
 76 [-]: GETUPVAL  R11 U0       ; R11 := U0
 77 [-]: GETTABLE  R11 R11 K25  ; R11 := R11[0x8e7c3b5e]
 78 [-]: GETGLOBAL R12 K2       ; R12 := 0x25d99d89
 79 [-]: CALL      R11 2 3      ; R11,R12 := R11(R12)
 80 [-]: GETGLOBAL R13 K1       ; R13 := 0x7b998233
 81 [-]: MOVE      R14 R11      ; R14 := R11
 82 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 83 [-]: TEST      R13 1        ; if R13 then PC := 101
 84 [-]: JMP       101          ; PC := 101
 85 [-]: GETUPVAL  R13 U1       ; R13 := U1
 86 [-]: EQ        0 R11 R13    ; if R11 ~= R13 then PC := 101
 87 [-]: JMP       101          ; PC := 101
 88 [-]: LE        0 K26 R12    ; if 15.000000 > R12 then PC := 101
 89 [-]: JMP       101          ; PC := 101
 90 [-]: GETGLOBAL R13 K2       ; R13 := 0x25d99d89
 91 [-]: SELF      R13 R13 K4   ; R14 := R13; R13 := R13[0x25a6e75e]
 92 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 93 [-]: SELF      R13 R13 K27  ; R14 := R13; R13 := R13[0xbadb2a78]
 94 [-]: GETGLOBAL R15 K28      ; R15 := 0x7ed0a956
 95 [-]: LOADK     R16 K29      ; R16 := "/Lotus/Weapons/Orokin/BallasSword/BallasSwordWeapon"
 96 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 97 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 98 [-]: EQ        0 R13 K23    ; if R13 ~= 0.000000 then PC := 101
 99 [-]: JMP       101          ; PC := 101
100 [-]: LOADBOOL  R10 1 0      ; R10 := true
101 [-]: TEST      R10 0        ; if not R10 then PC := 109
102 [-]: JMP       109          ; PC := 109
103 [-]: SETTABLE  R9 K30 K31   ; R9["isFixedQuestParacesis"] := true
104 [-]: GETGLOBAL R13 K33      ; R13 := 0xb009bbc6
105 [-]: LOADK     R14 K34      ; R14 := "/Lotus/StoreItems/Weapons/Orokin/BallasSword/TNWQuestBallasSwordWeapon"
106 [-]: CALL      R13 2 2      ; R13 := R13(R14)
107 [-]: SETTABLE  R9 K32 R13   ; R9["mStoreItem"] := R13
108 [-]: JMP       258          ; PC := 258
109 [-]: GETUPVAL  R13 U2       ; R13 := U2
110 [-]: GETTABLE  R13 R13 K36  ; R13 := R13[0x866fb296]
111 [-]: GETTABLE  R14 R9 K22   ; R14 := R9["LoadOutType"]
112 [-]: GETTABLE  R15 R9 K21   ; R15 := R9["LoadOutId"]
113 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
114 [-]: SETTABLE  R9 K35 R13   ; R9["OwnedItems"] := R13
115 [-]: GETGLOBAL R13 K12      ; R13 := mCurrentLoadout
116 [-]: GETTABLE  R14 R9 K22   ; R14 := R9["LoadOutType"]
117 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
118 [-]: SELF      R13 R13 K37  ; R14 := R13; R13 := R13[0x2abbe722]
119 [-]: GETTABLE  R15 R9 K21   ; R15 := R9["LoadOutId"]
120 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
121 [-]: GETTABLE  R14 R13 K38  ; R14 := R13["mModSlot"]
122 [-]: GETTABLE  R15 R13 K39  ; R15 := R13["mCustSlot"]
123 [-]: GETTABLE  R16 R13 K41  ; R16 := R13["mItemId"]
124 [-]: GETTABLE  R16 R16 K42  ; R16 := R16["mId"]
125 [-]: SETTABLE  R9 K40 R16   ; R9["UID"] := R16
126 [-]: GETTABLE  R16 R9 K43   ; R16 := R9["StoreItemId"]
127 [-]: EQ        1 R16 K11    ; if R16 == nil then PC := 258
128 [-]: JMP       258          ; PC := 258
129 [-]: GETTABLE  R16 R9 K43   ; R16 := R9["StoreItemId"]
130 [-]: EQ        0 R16 K26    ; if R16 ~= 15.000000 then PC := 193
131 [-]: JMP       193          ; PC := 193
132 [-]: GETGLOBAL R16 K3       ; R16 := mInventory
133 [-]: SELF      R16 R16 K45  ; R17 := R16; R16 := R16[0xc70965fe]
134 [-]: GETTABLE  R18 R9 K40   ; R18 := R9["UID"]
135 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
136 [-]: GETGLOBAL R17 K1       ; R17 := 0x7b998233
137 [-]: GETTABLE  R18 R16 K46  ; R18 := R16["mItemType"]
138 [-]: CALL      R17 2 2      ; R17 := R17(R18)
139 [-]: TEST      R17 1        ; if R17 then PC := 238
140 [-]: JMP       238          ; PC := 238
141 [-]: GETTABLE  R17 R16 K46  ; R17 := R16["mItemType"]
142 [-]: SELF      R17 R17 K47  ; R18 := R17; R17 := R17[0xf2deaf69]
143 [-]: GETGLOBAL R19 K48      ; R19 := 0x88980f4f
144 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
145 [-]: TEST      R17 0        ; if not R17 then PC := 154
146 [-]: JMP       154          ; PC := 154
147 [-]: SETTABLE  R9 K43 K49   ; R9["StoreItemId"] := 39.000000
148 [-]: GETGLOBAL R17 K50      ; R17 := 0x33bdd652
149 [-]: GETTABLE  R17 R17 K51  ; R17 := R17[0x23d5322f]
150 [-]: MOVE      R18 R4       ; R18 := R4
151 [-]: LOADK     R19 K52      ; R19 := "/Lotus/Types/Friendly/Pets/MoaPets/MoaPetAgent"
152 [-]: CALL      R17 3 1      ; R17(R18,R19)
153 [-]: JMP       238          ; PC := 238
154 [-]: GETTABLE  R17 R16 K46  ; R17 := R16["mItemType"]
155 [-]: SELF      R17 R17 K47  ; R18 := R17; R17 := R17[0xf2deaf69]
156 [-]: GETGLOBAL R19 K53      ; R19 := 0xb506ff82
157 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
158 [-]: TEST      R17 0        ; if not R17 then PC := 167
159 [-]: JMP       167          ; PC := 167
160 [-]: SETTABLE  R9 K43 K49   ; R9["StoreItemId"] := 39.000000
161 [-]: GETGLOBAL R17 K50      ; R17 := 0x33bdd652
162 [-]: GETTABLE  R17 R17 K51  ; R17 := R17[0x23d5322f]
163 [-]: MOVE      R18 R4       ; R18 := R4
164 [-]: LOADK     R19 K54      ; R19 := "/Lotus/Types/Friendly/Pets/ZanukaPets/ZanukaPetAgent"
165 [-]: CALL      R17 3 1      ; R17(R18,R19)
166 [-]: JMP       238          ; PC := 238
167 [-]: GETTABLE  R17 R16 K46  ; R17 := R16["mItemType"]
168 [-]: SELF      R17 R17 K47  ; R18 := R17; R17 := R17[0xf2deaf69]
169 [-]: GETGLOBAL R19 K55      ; R19 := 0xb9a9a904
170 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
171 [-]: TEST      R17 0        ; if not R17 then PC := 180
172 [-]: JMP       180          ; PC := 180
173 [-]: SETTABLE  R9 K43 K56   ; R9["StoreItemId"] := 24.000000
174 [-]: GETGLOBAL R17 K50      ; R17 := 0x33bdd652
175 [-]: GETTABLE  R17 R17 K51  ; R17 := R17[0x23d5322f]
176 [-]: MOVE      R18 R4       ; R18 := R4
177 [-]: LOADK     R19 K57      ; R19 := "/Lotus/Types/Friendly/Pets/KubrowPetAgent"
178 [-]: CALL      R17 3 1      ; R17(R18,R19)
179 [-]: JMP       238          ; PC := 238
180 [-]: GETTABLE  R17 R16 K46  ; R17 := R16["mItemType"]
181 [-]: SELF      R17 R17 K47  ; R18 := R17; R17 := R17[0xf2deaf69]
182 [-]: GETGLOBAL R19 K58      ; R19 := 0x01302fb0
183 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
184 [-]: TEST      R17 0        ; if not R17 then PC := 238
185 [-]: JMP       238          ; PC := 238
186 [-]: SETTABLE  R9 K43 K56   ; R9["StoreItemId"] := 24.000000
187 [-]: GETGLOBAL R17 K50      ; R17 := 0x33bdd652
188 [-]: GETTABLE  R17 R17 K51  ; R17 := R17[0x23d5322f]
189 [-]: MOVE      R18 R4       ; R18 := R4
190 [-]: LOADK     R19 K59      ; R19 := "/Lotus/Types/Friendly/Pets/CatbrowPetAgent"
191 [-]: CALL      R17 3 1      ; R17(R18,R19)
192 [-]: JMP       238          ; PC := 238
193 [-]: GETTABLE  R17 R9 K43   ; R17 := R9["StoreItemId"]
194 [-]: EQ        0 R17 K60    ; if R17 ~= 48.000000 then PC := 224
195 [-]: JMP       224          ; PC := 224
196 [-]: GETTABLE  R17 R9 K35   ; R17 := R9["OwnedItems"]
197 [-]: LEN       R17 R17      ; R17 := # R17
198 [-]: LT        0 K23 R17    ; if 0.000000 >= R17 then PC := 238
199 [-]: JMP       238          ; PC := 238
200 [-]: GETTABLE  R17 R9 K40   ; R17 := R9["UID"]
201 [-]: GETGLOBAL R18 K7       ; R18 := 0x6c97a788
202 [-]: GETTABLE  R18 R18 K61  ; R18 := R18["InvalidItemID"]
203 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 209
204 [-]: JMP       209          ; PC := 209
205 [-]: GETTABLE  R17 R9 K35   ; R17 := R9["OwnedItems"]
206 [-]: GETTABLE  R17 R17 K62  ; R17 := R17[1.000000]
207 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["UID"]
208 [-]: SETTABLE  R9 K40 R17   ; R9["UID"] := R17
209 [-]: GETGLOBAL R17 K50      ; R17 := 0x33bdd652
210 [-]: GETTABLE  R17 R17 K51  ; R17 := R17[0x23d5322f]
211 [-]: MOVE      R18 R4       ; R18 := R4
212 [-]: GETGLOBAL R19 K63      ; R19 := 0x6658d5be
213 [-]: SELF      R19 R19 K64  ; R20 := R19; R19 := R19[0xed4e0128]
214 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
215 [-]: CALL      R17 0 1      ; R17(R18,...)
216 [-]: GETGLOBAL R17 K50      ; R17 := 0x33bdd652
217 [-]: GETTABLE  R17 R17 K51  ; R17 := R17[0x23d5322f]
218 [-]: MOVE      R18 R4       ; R18 := R4
219 [-]: GETGLOBAL R19 K65      ; R19 := 0x3369a6b1
220 [-]: SELF      R19 R19 K64  ; R20 := R19; R19 := R19[0xed4e0128]
221 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
222 [-]: CALL      R17 0 1      ; R17(R18,...)
223 [-]: JMP       238          ; PC := 238
224 [-]: GETTABLE  R17 R9 K43   ; R17 := R9["StoreItemId"]
225 [-]: EQ        0 R17 K66    ; if R17 ~= 41.000000 then PC := 238
226 [-]: JMP       238          ; PC := 238
227 [-]: GETTABLE  R17 R9 K35   ; R17 := R9["OwnedItems"]
228 [-]: LEN       R17 R17      ; R17 := # R17
229 [-]: LT        0 K23 R17    ; if 0.000000 >= R17 then PC := 238
230 [-]: JMP       238          ; PC := 238
231 [-]: GETGLOBAL R17 K50      ; R17 := 0x33bdd652
232 [-]: GETTABLE  R17 R17 K51  ; R17 := R17[0x23d5322f]
233 [-]: MOVE      R18 R4       ; R18 := R4
234 [-]: GETGLOBAL R19 K67      ; R19 := 0xdac9387c
235 [-]: SELF      R19 R19 K64  ; R20 := R19; R19 := R19[0xed4e0128]
236 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
237 [-]: CALL      R17 0 1      ; R17(R18,...)
238 [-]: GETGLOBAL R17 K2       ; R17 := 0x25d99d89
239 [-]: SELF      R17 R17 K68  ; R18 := R17; R17 := R17[0xd08c3966]
240 [-]: GETTABLE  R19 R9 K40   ; R19 := R9["UID"]
241 [-]: GETTABLE  R20 R9 K22   ; R20 := R9["LoadOutType"]
242 [-]: GETTABLE  R21 R9 K21   ; R21 := R9["LoadOutId"]
243 [-]: GETTABLE  R22 R9 K43   ; R22 := R9["StoreItemId"]
244 [-]: MOVE      R23 R14      ; R23 := R14
245 [-]: MOVE      R24 R15      ; R24 := R15
246 [-]: CALL      R17 8 2      ; R17 := R17(R18,R19,R20,R21,R22,R23,R24)
247 [-]: GETGLOBAL R18 K69      ; R18 := 0xc8802016
248 [-]: MOVE      R19 R17      ; R19 := R17
249 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
250 [-]: JMP       256          ; PC := 256
251 [-]: GETGLOBAL R23 K50      ; R23 := 0x33bdd652
252 [-]: GETTABLE  R23 R23 K51  ; R23 := R23[0x23d5322f]
253 [-]: MOVE      R24 R4       ; R24 := R4
254 [-]: MOVE      R25 R22      ; R25 := R22
255 [-]: CALL      R23 3 1      ; R23(R24,R25)
256 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 251; R20 := R21 end
257 [-]: JMP       251          ; PC := 251
258 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 66; R7 := R8 end
259 [-]: JMP       66           ; PC := 66
260 [-]: GETGLOBAL R23 K70      ; R23 := mLists
261 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
262 [-]: SELF      R23 R23 K72  ; R24 := R23; R23 := R23[0x7c09c373]
263 [-]: LOADBOOL  R25 1 0      ; R25 := true
264 [-]: LOADBOOL  R26 0 0      ; R26 := false
265 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
266 [-]: GETGLOBAL R23 K70      ; R23 := mLists
267 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
268 [-]: SETTABLE  R23 K73 K11  ; R23["SuitSlotId"] := nil
269 [-]: GETGLOBAL R23 K70      ; R23 := mLists
270 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
271 [-]: SETTABLE  R23 K74 K11  ; R23["PrimarySlotId"] := nil
272 [-]: GETGLOBAL R23 K70      ; R23 := mLists
273 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
274 [-]: SETTABLE  R23 K75 K11  ; R23["SecondarySlotId"] := nil
275 [-]: GETGLOBAL R23 K70      ; R23 := mLists
276 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
277 [-]: SETTABLE  R23 K76 K11  ; R23["MeleeSlotId"] := nil
278 [-]: GETGLOBAL R23 K70      ; R23 := mLists
279 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
280 [-]: SETTABLE  R23 K77 K11  ; R23["FocusSlotId"] := nil
281 [-]: GETGLOBAL R23 K70      ; R23 := mLists
282 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
283 [-]: SETTABLE  R23 K78 K11  ; R23["SpecialASlotId"] := nil
284 [-]: GETGLOBAL R23 K70      ; R23 := mLists
285 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
286 [-]: SETTABLE  R23 K79 K11  ; R23["SpecialBSlotId"] := nil
287 [-]: GETGLOBAL R23 K70      ; R23 := mLists
288 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
289 [-]: SETTABLE  R23 K80 K11  ; R23["PetSlotId"] := nil
290 [-]: GETGLOBAL R23 K70      ; R23 := mLists
291 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
292 [-]: SETTABLE  R23 K81 K11  ; R23["PetWeaponId"] := nil
293 [-]: GETGLOBAL R23 K70      ; R23 := mLists
294 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
295 [-]: SETTABLE  R23 K82 K11  ; R23["DataKnifeSlotId"] := nil
296 [-]: GETGLOBAL R23 K70      ; R23 := mLists
297 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
298 [-]: SETTABLE  R23 K83 K11  ; R23["MechSuitSlotId"] := nil
299 [-]: GETGLOBAL R23 K70      ; R23 := mLists
300 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
301 [-]: SETTABLE  R23 K84 K11  ; R23["MechGunSlotId"] := nil
302 [-]: GETGLOBAL R23 K70      ; R23 := mLists
303 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mLoadOutList"]
304 [-]: SETTABLE  R23 K85 K11  ; R23["HeavyGunSlotId"] := nil
305 [-]: GETUPVAL  R23 U3       ; R23 := U3
306 [-]: GETTABLE  R23 R23 K86  ; R23 := R23["Current"]
307 [-]: EQ        0 R23 K62    ; if R23 ~= 1.000000 then PC := 458
308 [-]: JMP       458          ; PC := 458
309 [-]: GETGLOBAL R23 K70      ; R23 := mLists
310 [-]: GETTABLE  R23 R23 K87  ; R23 := R23["mLoadOutCategories"]
311 [-]: GETTABLE  R23 R23 K88  ; R23 := R23["mState"]
312 [-]: GETGLOBAL R24 K70      ; R24 := mLists
313 [-]: GETTABLE  R24 R24 K87  ; R24 := R24["mLoadOutCategories"]
314 [-]: GETTABLE  R24 R24 K89  ; R24 := R24["mStates"]
315 [-]: GETTABLE  R24 R24 K90  ; R24 := R24["TENNO"]
316 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 414
317 [-]: JMP       414          ; PC := 414
318 [-]: GETGLOBAL R24 K70      ; R24 := mLists
319 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
320 [-]: GETGLOBAL R25 K70      ; R25 := mLists
321 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
322 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
323 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
324 [-]: GETTABLE  R27 R27 K92  ; R27 := R27["SUIT"]
325 [-]: LOADBOOL  R28 1 0      ; R28 := true
326 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
327 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
328 [-]: SETTABLE  R24 K73 R25  ; R24["SuitSlotId"] := R25
329 [-]: GETGLOBAL R24 K70      ; R24 := mLists
330 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
331 [-]: GETGLOBAL R25 K70      ; R25 := mLists
332 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
333 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
334 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
335 [-]: GETTABLE  R27 R27 K94  ; R27 := R27["PRIMARY"]
336 [-]: LOADBOOL  R28 1 0      ; R28 := true
337 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
338 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
339 [-]: SETTABLE  R24 K74 R25  ; R24["PrimarySlotId"] := R25
340 [-]: GETGLOBAL R24 K70      ; R24 := mLists
341 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
342 [-]: GETGLOBAL R25 K70      ; R25 := mLists
343 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
344 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
345 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
346 [-]: GETTABLE  R27 R27 K95  ; R27 := R27["SECONDARY"]
347 [-]: LOADBOOL  R28 1 0      ; R28 := true
348 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
349 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
350 [-]: SETTABLE  R24 K75 R25  ; R24["SecondarySlotId"] := R25
351 [-]: GETGLOBAL R24 K70      ; R24 := mLists
352 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
353 [-]: GETGLOBAL R25 K70      ; R25 := mLists
354 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
355 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
356 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
357 [-]: GETTABLE  R27 R27 K96  ; R27 := R27["MELEE"]
358 [-]: LOADBOOL  R28 1 0      ; R28 := true
359 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
360 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
361 [-]: SETTABLE  R24 K76 R25  ; R24["MeleeSlotId"] := R25
362 [-]: GETGLOBAL R24 K70      ; R24 := mLists
363 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
364 [-]: GETGLOBAL R25 K70      ; R25 := mLists
365 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
366 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
367 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
368 [-]: GETTABLE  R27 R27 K97  ; R27 := R27["FOCUS"]
369 [-]: LOADBOOL  R28 1 0      ; R28 := true
370 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
371 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
372 [-]: SETTABLE  R24 K77 R25  ; R24["FocusSlotId"] := R25
373 [-]: GETGLOBAL R24 K70      ; R24 := mLists
374 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
375 [-]: GETGLOBAL R25 K70      ; R25 := mLists
376 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
377 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
378 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
379 [-]: GETTABLE  R27 R27 K98  ; R27 := R27["SPECIAL_A"]
380 [-]: LOADBOOL  R28 1 0      ; R28 := true
381 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
382 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
383 [-]: SETTABLE  R24 K78 R25  ; R24["SpecialASlotId"] := R25
384 [-]: GETGLOBAL R24 K70      ; R24 := mLists
385 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
386 [-]: GETGLOBAL R25 K70      ; R25 := mLists
387 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
388 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
389 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
390 [-]: GETTABLE  R27 R27 K99  ; R27 := R27["SPECIAL_B"]
391 [-]: LOADBOOL  R28 1 0      ; R28 := true
392 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
393 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
394 [-]: SETTABLE  R24 K79 R25  ; R24["SpecialBSlotId"] := R25
395 [-]: GETGLOBAL R24 K70      ; R24 := mLists
396 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
397 [-]: GETGLOBAL R25 K70      ; R25 := mLists
398 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
399 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
400 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
401 [-]: GETTABLE  R27 R27 K100 ; R27 := R27["DATA_KNIFE"]
402 [-]: LOADBOOL  R28 1 0      ; R28 := true
403 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
404 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
405 [-]: SETTABLE  R24 K82 R25  ; R24["DataKnifeSlotId"] := R25
406 [-]: GETGLOBAL R24 K70      ; R24 := mLists
407 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
408 [-]: SELF      R24 R24 K91  ; R25 := R24; R24 := R24[0xbad4316f]
409 [-]: GETGLOBAL R26 K20      ; R26 := LOADOUT_SLOTS
410 [-]: GETTABLE  R26 R26 K101 ; R26 := R26["MANDACHORD"]
411 [-]: LOADBOOL  R27 1 0      ; R27 := true
412 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
413 [-]: JMP       635          ; PC := 635
414 [-]: GETGLOBAL R24 K70      ; R24 := mLists
415 [-]: GETTABLE  R24 R24 K87  ; R24 := R24["mLoadOutCategories"]
416 [-]: GETTABLE  R24 R24 K89  ; R24 := R24["mStates"]
417 [-]: GETTABLE  R24 R24 K102 ; R24 := R24["COMPANION"]
418 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 443
419 [-]: JMP       443          ; PC := 443
420 [-]: GETGLOBAL R24 K70      ; R24 := mLists
421 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
422 [-]: GETGLOBAL R25 K70      ; R25 := mLists
423 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
424 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
425 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
426 [-]: GETTABLE  R27 R27 K103 ; R27 := R27["PET"]
427 [-]: LOADBOOL  R28 1 0      ; R28 := true
428 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
429 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
430 [-]: SETTABLE  R24 K80 R25  ; R24["PetSlotId"] := R25
431 [-]: GETGLOBAL R24 K70      ; R24 := mLists
432 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
433 [-]: GETGLOBAL R25 K70      ; R25 := mLists
434 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
435 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
436 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
437 [-]: GETTABLE  R27 R27 K104 ; R27 := R27["PET_WEAPON"]
438 [-]: LOADBOOL  R28 1 0      ; R28 := true
439 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
440 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
441 [-]: SETTABLE  R24 K81 R25  ; R24["PetWeaponId"] := R25
442 [-]: JMP       635          ; PC := 635
443 [-]: GETGLOBAL R24 K70      ; R24 := mLists
444 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
445 [-]: SELF      R24 R24 K91  ; R25 := R24; R24 := R24[0xbad4316f]
446 [-]: GETGLOBAL R26 K20      ; R26 := LOADOUT_SLOTS
447 [-]: GETTABLE  R26 R26 K105 ; R26 := R26["CONSUMABLES"]
448 [-]: LOADBOOL  R27 1 0      ; R27 := true
449 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
450 [-]: GETGLOBAL R24 K70      ; R24 := mLists
451 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
452 [-]: SELF      R24 R24 K91  ; R25 := R24; R24 := R24[0xbad4316f]
453 [-]: GETGLOBAL R26 K20      ; R26 := LOADOUT_SLOTS
454 [-]: GETTABLE  R26 R26 K106 ; R26 := R26["EMOTES"]
455 [-]: LOADBOOL  R27 1 0      ; R27 := true
456 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
457 [-]: JMP       635          ; PC := 635
458 [-]: GETUPVAL  R24 U3       ; R24 := U3
459 [-]: GETTABLE  R24 R24 K86  ; R24 := R24["Current"]
460 [-]: EQ        0 R24 K107   ; if R24 ~= 2.000000 then PC := 543
461 [-]: JMP       543          ; PC := 543
462 [-]: GETGLOBAL R24 K70      ; R24 := mLists
463 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
464 [-]: GETGLOBAL R25 K70      ; R25 := mLists
465 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
466 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
467 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
468 [-]: GETTABLE  R27 R27 K108 ; R27 := R27["PVP_SUIT"]
469 [-]: LOADBOOL  R28 1 0      ; R28 := true
470 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
471 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
472 [-]: SETTABLE  R24 K73 R25  ; R24["SuitSlotId"] := R25
473 [-]: GETGLOBAL R24 K70      ; R24 := mLists
474 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
475 [-]: GETGLOBAL R25 K70      ; R25 := mLists
476 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
477 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
478 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
479 [-]: GETTABLE  R27 R27 K109 ; R27 := R27["PVP_PRIMARY"]
480 [-]: LOADBOOL  R28 1 0      ; R28 := true
481 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
482 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
483 [-]: SETTABLE  R24 K74 R25  ; R24["PrimarySlotId"] := R25
484 [-]: GETGLOBAL R24 K70      ; R24 := mLists
485 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
486 [-]: GETGLOBAL R25 K70      ; R25 := mLists
487 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
488 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
489 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
490 [-]: GETTABLE  R27 R27 K110 ; R27 := R27["PVP_SECONDARY"]
491 [-]: LOADBOOL  R28 1 0      ; R28 := true
492 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
493 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
494 [-]: SETTABLE  R24 K75 R25  ; R24["SecondarySlotId"] := R25
495 [-]: GETGLOBAL R24 K70      ; R24 := mLists
496 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
497 [-]: GETGLOBAL R25 K70      ; R25 := mLists
498 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
499 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
500 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
501 [-]: GETTABLE  R27 R27 K111 ; R27 := R27["PVP_MELEE"]
502 [-]: LOADBOOL  R28 1 0      ; R28 := true
503 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
504 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
505 [-]: SETTABLE  R24 K76 R25  ; R24["MeleeSlotId"] := R25
506 [-]: GETGLOBAL R24 K70      ; R24 := mLists
507 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
508 [-]: GETGLOBAL R25 K70      ; R25 := mLists
509 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
510 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
511 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
512 [-]: GETTABLE  R27 R27 K112 ; R27 := R27["PVP_SPECIAL_A"]
513 [-]: LOADBOOL  R28 1 0      ; R28 := true
514 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
515 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
516 [-]: SETTABLE  R24 K78 R25  ; R24["SpecialASlotId"] := R25
517 [-]: GETGLOBAL R24 K70      ; R24 := mLists
518 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
519 [-]: GETGLOBAL R25 K70      ; R25 := mLists
520 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
521 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
522 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
523 [-]: GETTABLE  R27 R27 K113 ; R27 := R27["PVP_SPECIAL_B"]
524 [-]: LOADBOOL  R28 1 0      ; R28 := true
525 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
526 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
527 [-]: SETTABLE  R24 K79 R25  ; R24["SpecialBSlotId"] := R25
528 [-]: GETGLOBAL R24 K70      ; R24 := mLists
529 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
530 [-]: SELF      R24 R24 K91  ; R25 := R24; R24 := R24[0xbad4316f]
531 [-]: GETGLOBAL R26 K20      ; R26 := LOADOUT_SLOTS
532 [-]: GETTABLE  R26 R26 K114 ; R26 := R26["PVP_SCOOP"]
533 [-]: LOADBOOL  R27 1 0      ; R27 := true
534 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
535 [-]: GETGLOBAL R24 K70      ; R24 := mLists
536 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
537 [-]: SELF      R24 R24 K91  ; R25 := R24; R24 := R24[0xbad4316f]
538 [-]: GETGLOBAL R26 K20      ; R26 := LOADOUT_SLOTS
539 [-]: GETTABLE  R26 R26 K115 ; R26 := R26["PVP_EMOTES"]
540 [-]: LOADBOOL  R27 1 0      ; R27 := true
541 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
542 [-]: JMP       635          ; PC := 635
543 [-]: GETGLOBAL R24 K70      ; R24 := mLists
544 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
545 [-]: GETGLOBAL R25 K70      ; R25 := mLists
546 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
547 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
548 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
549 [-]: GETTABLE  R27 R27 K116 ; R27 := R27["ARCHWING"]
550 [-]: LOADBOOL  R28 1 0      ; R28 := true
551 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
552 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
553 [-]: SETTABLE  R24 K73 R25  ; R24["SuitSlotId"] := R25
554 [-]: GETGLOBAL R24 K70      ; R24 := mLists
555 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
556 [-]: GETGLOBAL R25 K70      ; R25 := mLists
557 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
558 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
559 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
560 [-]: GETTABLE  R27 R27 K117 ; R27 := R27["ARCHGUN"]
561 [-]: LOADBOOL  R28 1 0      ; R28 := true
562 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
563 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
564 [-]: SETTABLE  R24 K74 R25  ; R24["PrimarySlotId"] := R25
565 [-]: GETGLOBAL R24 K70      ; R24 := mLists
566 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
567 [-]: GETGLOBAL R25 K70      ; R25 := mLists
568 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
569 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
570 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
571 [-]: GETTABLE  R27 R27 K118 ; R27 := R27["ARCHMELEE"]
572 [-]: LOADBOOL  R28 1 0      ; R28 := true
573 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
574 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
575 [-]: SETTABLE  R24 K76 R25  ; R24["MeleeSlotId"] := R25
576 [-]: GETUPVAL  R24 U4       ; R24 := U4
577 [-]: GETTABLE  R24 R24 K119 ; R24 := R24["CanEquipHeavyWeapons"]
578 [-]: TEST      R24 0        ; if not R24 then PC := 591
579 [-]: JMP       591          ; PC := 591
580 [-]: GETGLOBAL R24 K70      ; R24 := mLists
581 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
582 [-]: GETGLOBAL R25 K70      ; R25 := mLists
583 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
584 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
585 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
586 [-]: GETTABLE  R27 R27 K120 ; R27 := R27["HEAVY_GUN"]
587 [-]: LOADBOOL  R28 1 0      ; R28 := true
588 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
589 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
590 [-]: SETTABLE  R24 K85 R25  ; R24["HeavyGunSlotId"] := R25
591 [-]: GETGLOBAL R24 K70      ; R24 := mLists
592 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
593 [-]: SELF      R24 R24 K91  ; R25 := R24; R24 := R24[0xbad4316f]
594 [-]: GETGLOBAL R26 K20      ; R26 := LOADOUT_SLOTS
595 [-]: GETTABLE  R26 R26 K121 ; R26 := R26["KDRIVE"]
596 [-]: LOADBOOL  R27 1 0      ; R27 := true
597 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
598 [-]: GETUPVAL  R24 U4       ; R24 := U4
599 [-]: GETTABLE  R24 R24 K122 ; R24 := R24["CanEquipMech"]
600 [-]: TEST      R24 0        ; if not R24 then PC := 635
601 [-]: JMP       635          ; PC := 635
602 [-]: GETGLOBAL R24 K70      ; R24 := mLists
603 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
604 [-]: GETGLOBAL R25 K70      ; R25 := mLists
605 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
606 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
607 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
608 [-]: GETTABLE  R27 R27 K123 ; R27 := R27["MECH_SUIT"]
609 [-]: LOADBOOL  R28 1 0      ; R28 := true
610 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
611 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
612 [-]: SETTABLE  R24 K83 R25  ; R24["MechSuitSlotId"] := R25
613 [-]: GETGLOBAL R24 K70      ; R24 := mLists
614 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
615 [-]: GETGLOBAL R25 K70      ; R25 := mLists
616 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
617 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
618 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
619 [-]: GETTABLE  R27 R27 K124 ; R27 := R27["MECH_GUN"]
620 [-]: LOADBOOL  R28 1 0      ; R28 := true
621 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
622 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
623 [-]: SETTABLE  R24 K84 R25  ; R24["MechGunSlotId"] := R25
624 [-]: GETGLOBAL R24 K70      ; R24 := mLists
625 [-]: GETTABLE  R24 R24 K71  ; R24 := R24["mLoadOutList"]
626 [-]: GETGLOBAL R25 K70      ; R25 := mLists
627 [-]: GETTABLE  R25 R25 K71  ; R25 := R25["mLoadOutList"]
628 [-]: SELF      R25 R25 K91  ; R26 := R25; R25 := R25[0xbad4316f]
629 [-]: GETGLOBAL R27 K20      ; R27 := LOADOUT_SLOTS
630 [-]: GETTABLE  R27 R27 K125 ; R27 := R27["MECH_SPECIAL_A"]
631 [-]: LOADBOOL  R28 1 0      ; R28 := true
632 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
633 [-]: GETTABLE  R25 R25 K93  ; R25 := R25["Id"]
634 [-]: SETTABLE  R24 K78 R25  ; R24["SpecialASlotId"] := R25
635 [-]: GETGLOBAL R24 K126     ; R24 := mSelected
636 [-]: SETTABLE  R24 K127 K11 ; R24["Element"] := nil
637 [-]: GETGLOBAL R24 K128     ; R24 := mLoaders
638 [-]: GETTABLE  R24 R24 K129 ; R24 := R24["mSlotLoader"]
639 [-]: SELF      R24 R24 K130 ; R25 := R24; R24 := R24[0x5a7aac67]
640 [-]: CALL      R24 2 1      ; R24(R25)
641 [-]: GETGLOBAL R24 K131     ; R24 := mPendingRandomizeInfo
642 [-]: SETTABLE  R24 K132 K11 ; R24["OriginalSlot"] := nil
643 [-]: LEN       R24 R4       ; R24 := # R4
644 [-]: LT        0 K23 R24    ; if 0.000000 >= R24 then PC := 665
645 [-]: JMP       665          ; PC := 665
646 [-]: GETGLOBAL R24 K1       ; R24 := 0x7b998233
647 [-]: GETGLOBAL R25 K9       ; R25 := _T
648 [-]: GETTABLE  R25 R25 K133 ; R25 := R25["BackgroundMovie"]
649 [-]: CALL      R24 2 2      ; R24 := R24(R25)
650 [-]: TEST      R24 1        ; if R24 then PC := 658
651 [-]: JMP       658          ; PC := 658
652 [-]: GETGLOBAL R24 K9       ; R24 := _T
653 [-]: GETTABLE  R24 R24 K133 ; R24 := R24["BackgroundMovie"]
654 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24[0xe4162eed]
655 [-]: LOADK     R26 K134     ; R26 := "ShowBlockingMessage"
656 [-]: LOADK     R27 K135     ; R27 := "2"
657 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
658 [-]: GETGLOBAL R24 K128     ; R24 := mLoaders
659 [-]: GETTABLE  R24 R24 K129 ; R24 := R24["mSlotLoader"]
660 [-]: SELF      R24 R24 K136 ; R25 := R24; R24 := R24[0x2f86cf1e]
661 [-]: MOVE      R26 R4       ; R26 := R4
662 [-]: LOADBOOL  R27 1 0      ; R27 := true
663 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
664 [-]: JMP       667          ; PC := 667
665 [-]: GETUPVAL  R24 U5       ; R24 := U5
666 [-]: CALL      R24 1 1      ; R24()
667 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 11051
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: SETGLOBAL R0 K0        ; mCosmeticsLabels := R0
  3 [-]: CLOSURE   R0 0         ; R0 := closure(Function #167.1)
  4 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/Menu/Cosmetics_Skin"
  7 [-]: GETGLOBAL R4 K4        ; R4 := mLists
  8 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
  9 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["DEFAULT"]
 10 [-]: LOADK     R5 K7        ; R5 := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
 11 [-]: LOADK     R6 1         ; R6 := 1.000000
 12 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 13 [-]: SETTABLE  R1 K2 R2     ; R1[0.000000] := R2
 14 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 15 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0.000000]
 16 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
 17 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0.000000]
 18 [-]: NEWTABLE  R2 0 1       ; R2 := {}
 19 [-]: SETTABLE  R2 K9 K10    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Helmet"
 20 [-]: SETTABLE  R1 K2 R2     ; R1[0.000000] := R2
 21 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: LOADK     R3 K12       ; R3 := "/Lotus/Language/Menu/Cosmetics_ArmLeft"
 24 [-]: GETGLOBAL R4 K4        ; R4 := mLists
 25 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
 26 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
 27 [-]: LOADNIL   R5 R5        ; R5 := nil
 28 [-]: LOADK     R6 4         ; R6 := 4.000000
 29 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 30 [-]: SETTABLE  R1 K11 R2    ; R1[1.000000] := R2
 31 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 32 [-]: GETTABLE  R1 R1 K11    ; R1 := R1[1.000000]
 33 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
 34 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0.000000]
 35 [-]: NEWTABLE  R2 0 1       ; R2 := {}
 36 [-]: SETTABLE  R2 K9 K3     ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
 37 [-]: SETTABLE  R1 K14 R2    ; R1[2.000000] := R2
 38 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 39 [-]: GETTABLE  R1 R1 K11    ; R1 := R1[1.000000]
 40 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
 41 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[3.000000]
 42 [-]: NEWTABLE  R2 0 1       ; R2 := {}
 43 [-]: SETTABLE  R2 K9 K3     ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
 44 [-]: SETTABLE  R1 K14 R2    ; R1[2.000000] := R2
 45 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 46 [-]: MOVE      R2 R0        ; R2 := R0
 47 [-]: LOADK     R3 K17       ; R3 := "/Lotus/Language/Menu/Cosmetics_ArmRight"
 48 [-]: GETGLOBAL R4 K4        ; R4 := mLists
 49 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
 50 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
 51 [-]: LOADNIL   R5 R5        ; R5 := nil
 52 [-]: LOADK     R6 4         ; R6 := 4.000000
 53 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 54 [-]: SETTABLE  R1 K16 R2    ; R1[9.000000] := R2
 55 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 56 [-]: MOVE      R2 R0        ; R2 := R0
 57 [-]: LOADK     R3 K18       ; R3 := "/Lotus/Language/Menu/Cosmetics_LegLeft"
 58 [-]: GETGLOBAL R4 K4        ; R4 := mLists
 59 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
 60 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
 61 [-]: LOADNIL   R5 R5        ; R5 := nil
 62 [-]: LOADK     R6 5         ; R6 := 5.000000
 63 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 64 [-]: SETTABLE  R1 K14 R2    ; R1[2.000000] := R2
 65 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 66 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2.000000]
 67 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
 68 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0.000000]
 69 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 70 [-]: SETTABLE  R2 K9 K19    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
 71 [-]: GETGLOBAL R3 K4        ; R3 := mLists
 72 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
 73 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HOLSTER_STYLE"]
 74 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
 75 [-]: SETTABLE  R2 K22 K19   ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
 76 [-]: SETTABLE  R1 K14 R2    ; R1[2.000000] := R2
 77 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 78 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2.000000]
 79 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
 80 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[3.000000]
 81 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 82 [-]: SETTABLE  R2 K9 K19    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
 83 [-]: GETGLOBAL R3 K4        ; R3 := mLists
 84 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
 85 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HOLSTER_STYLE"]
 86 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
 87 [-]: SETTABLE  R2 K22 K19   ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
 88 [-]: SETTABLE  R1 K14 R2    ; R1[2.000000] := R2
 89 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
 90 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2.000000]
 91 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
 92 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0.000000]
 93 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 94 [-]: SETTABLE  R2 K9 K19    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
 95 [-]: GETGLOBAL R3 K4        ; R3 := mLists
 96 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
 97 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HOLSTER_STYLE"]
 98 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
 99 [-]: SETTABLE  R2 K22 K19   ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
100 [-]: SETTABLE  R1 K11 R2    ; R1[1.000000] := R2
101 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
102 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2.000000]
103 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
104 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[3.000000]
105 [-]: NEWTABLE  R2 0 3       ; R2 := {}
106 [-]: SETTABLE  R2 K9 K19    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
107 [-]: GETGLOBAL R3 K4        ; R3 := mLists
108 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
109 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HOLSTER_STYLE"]
110 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
111 [-]: SETTABLE  R2 K22 K19   ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
112 [-]: SETTABLE  R1 K11 R2    ; R1[1.000000] := R2
113 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
114 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2.000000]
115 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
116 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0.000000]
117 [-]: NEWTABLE  R2 0 3       ; R2 := {}
118 [-]: SETTABLE  R2 K9 K19    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
119 [-]: GETGLOBAL R3 K4        ; R3 := mLists
120 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
121 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HOLSTER_STYLE"]
122 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
123 [-]: SETTABLE  R2 K22 K19   ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
124 [-]: SETTABLE  R1 K15 R2    ; R1[3.000000] := R2
125 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
126 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2.000000]
127 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
128 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[3.000000]
129 [-]: NEWTABLE  R2 0 3       ; R2 := {}
130 [-]: SETTABLE  R2 K9 K19    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
131 [-]: GETGLOBAL R3 K4        ; R3 := mLists
132 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
133 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HOLSTER_STYLE"]
134 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
135 [-]: SETTABLE  R2 K22 K19   ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
136 [-]: SETTABLE  R1 K15 R2    ; R1[3.000000] := R2
137 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
138 [-]: MOVE      R2 R0        ; R2 := R0
139 [-]: LOADK     R3 K23       ; R3 := "/Lotus/Language/Menu/Cosmetics_CustomBadge"
140 [-]: GETGLOBAL R4 K4        ; R4 := mLists
141 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
142 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["BADGES"]
143 [-]: LOADK     R5 K25       ; R5 := "/Lotus/Language/Menu/Cosmetics_Regalia"
144 [-]: LOADK     R6 2         ; R6 := 2.000000
145 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
146 [-]: SETTABLE  R1 K15 R2    ; R1[3.000000] := R2
147 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
148 [-]: MOVE      R2 R0        ; R2 := R0
149 [-]: LOADK     R3 K27       ; R3 := "/Lotus/Language/Menu/Cosmetics_EventBadge"
150 [-]: GETGLOBAL R4 K4        ; R4 := mLists
151 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
152 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["BADGES"]
153 [-]: LOADNIL   R5 R5        ; R5 := nil
154 [-]: LOADK     R6 2         ; R6 := 2.000000
155 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
156 [-]: SETTABLE  R1 K26 R2    ; R1[4.000000] := R2
157 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
158 [-]: MOVE      R2 R0        ; R2 := R0
159 [-]: LOADK     R3 K29       ; R3 := "/Lotus/Language/Menu/Cosmetics_AnimationSet"
160 [-]: GETGLOBAL R4 K4        ; R4 := mLists
161 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
162 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["DEFAULT"]
163 [-]: LOADNIL   R5 R5        ; R5 := nil
164 [-]: LOADK     R6 3         ; R6 := 3.000000
165 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
166 [-]: SETTABLE  R1 K28 R2    ; R1[5.000000] := R2
167 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
168 [-]: GETTABLE  R1 R1 K28    ; R1 := R1[5.000000]
169 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
170 [-]: GETTABLE  R1 R1 K11    ; R1 := R1[1.000000]
171 [-]: NEWTABLE  R2 0 2       ; R2 := {}
172 [-]: SETTABLE  R2 K9 K30    ; R2["Title"] := "/Lotus/Language/SolarisVenus/Cosmetics_PetPersonality"
173 [-]: SETTABLE  R2 K22 K7    ; R2["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
174 [-]: SETTABLE  R1 K2 R2     ; R1[0.000000] := R2
175 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
176 [-]: MOVE      R2 R0        ; R2 := R0
177 [-]: LOADK     R3 K32       ; R3 := "/Lotus/Language/Menu/Cosmetics_Accessories"
178 [-]: GETGLOBAL R4 K4        ; R4 := mLists
179 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
180 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
181 [-]: LOADK     R5 K33       ; R5 := "/Lotus/Language/Menu/Cosmetics_Attachments"
182 [-]: LOADK     R6 1         ; R6 := 1.000000
183 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
184 [-]: SETTABLE  R1 K31 R2    ; R1[6.000000] := R2
185 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
186 [-]: GETTABLE  R1 R1 K31    ; R1 := R1[6.000000]
187 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
188 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0.000000]
189 [-]: NEWTABLE  R2 0 2       ; R2 := {}
190 [-]: SETTABLE  R2 K9 K34    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Neckwear"
191 [-]: GETGLOBAL R3 K4        ; R3 := mLists
192 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
193 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["SYANDANAS"]
194 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
195 [-]: SETTABLE  R1 K2 R2     ; R1[0.000000] := R2
196 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
197 [-]: GETTABLE  R1 R1 K31    ; R1 := R1[6.000000]
198 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
199 [-]: GETTABLE  R1 R1 K15    ; R1 := R1[3.000000]
200 [-]: NEWTABLE  R2 0 2       ; R2 := {}
201 [-]: SETTABLE  R2 K9 K34    ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Neckwear"
202 [-]: GETGLOBAL R3 K4        ; R3 := mLists
203 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mCosmeticsList"]
204 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["SYANDANAS"]
205 [-]: SETTABLE  R2 K20 R3    ; R2["Level"] := R3
206 [-]: SETTABLE  R1 K2 R2     ; R1[0.000000] := R2
207 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
208 [-]: MOVE      R2 R0        ; R2 := R0
209 [-]: LOADK     R3 K37       ; R3 := "/Lotus/Language/Menu/Cosmetics_BodySkin"
210 [-]: GETGLOBAL R4 K4        ; R4 := mLists
211 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
212 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["DEFAULT"]
213 [-]: LOADNIL   R5 R5        ; R5 := nil
214 [-]: LOADK     R6 2         ; R6 := 2.000000
215 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
216 [-]: SETTABLE  R1 K36 R2    ; R1[7.000000] := R2
217 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
218 [-]: GETTABLE  R1 R1 K36    ; R1 := R1[7.000000]
219 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
220 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2.000000]
221 [-]: NEWTABLE  R2 0 2       ; R2 := {}
222 [-]: SETTABLE  R2 K9 K3     ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
223 [-]: SETTABLE  R2 K22 K7    ; R2["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
224 [-]: SETTABLE  R1 K2 R2     ; R1[0.000000] := R2
225 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
226 [-]: GETTABLE  R1 R1 K36    ; R1 := R1[7.000000]
227 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
228 [-]: GETTABLE  R1 R1 K31    ; R1 := R1[6.000000]
229 [-]: GETUPVAL  R2 U0        ; R2 := U0
230 [-]: GETTABLE  R2 R2 K38    ; R2 := R2["KDriveSlot"]
231 [-]: NEWTABLE  R3 0 2       ; R3 := {}
232 [-]: SETTABLE  R3 K9 K3     ; R3["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
233 [-]: SETTABLE  R3 K22 K7    ; R3["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
234 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
235 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
236 [-]: MOVE      R2 R0        ; R2 := R0
237 [-]: LOADK     R3 K40       ; R3 := "/Lotus/Language/Menu/Cosmetics_Chest"
238 [-]: GETGLOBAL R4 K4        ; R4 := mLists
239 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
240 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
241 [-]: LOADK     R5 K33       ; R5 := "/Lotus/Language/Menu/Cosmetics_Attachments"
242 [-]: LOADK     R6 3         ; R6 := 3.000000
243 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
244 [-]: SETTABLE  R1 K39 R2    ; R1[8.000000] := R2
245 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
246 [-]: MOVE      R2 R0        ; R2 := R0
247 [-]: LOADK     R3 K42       ; R3 := "/Lotus/Language/Menu/Cosmetics_LegRight"
248 [-]: GETGLOBAL R4 K4        ; R4 := mLists
249 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
250 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
251 [-]: LOADNIL   R5 R5        ; R5 := nil
252 [-]: LOADK     R6 5         ; R6 := 5.000000
253 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
254 [-]: SETTABLE  R1 K41 R2    ; R1[10.000000] := R2
255 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
256 [-]: MOVE      R2 R0        ; R2 := R0
257 [-]: LOADK     R3 K44       ; R3 := "/Lotus/Language/Menu/Cosmetics_Face"
258 [-]: GETGLOBAL R4 K4        ; R4 := mLists
259 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
260 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
261 [-]: LOADNIL   R5 R5        ; R5 := nil
262 [-]: LOADK     R6 6         ; R6 := 6.000000
263 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
264 [-]: SETTABLE  R1 K43 R2    ; R1[11.000000] := R2
265 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
266 [-]: MOVE      R2 R0        ; R2 := R0
267 [-]: LOADK     R3 K46       ; R3 := "/Lotus/Language/Menu/Cosmetics_ChestSigil"
268 [-]: GETGLOBAL R4 K4        ; R4 := mLists
269 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
270 [-]: GETTABLE  R4 R4 K47    ; R4 := R4["FRONTSIGIL"]
271 [-]: LOADK     R5 K48       ; R5 := "/Lotus/Language/Menu/Cosmetics_FrontSigil"
272 [-]: LOADK     R6 1         ; R6 := 1.000000
273 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
274 [-]: SETTABLE  R1 K45 R2    ; R1[12.000000] := R2
275 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
276 [-]: MOVE      R2 R0        ; R2 := R0
277 [-]: LOADK     R3 K50       ; R3 := "/Lotus/Language/Menu/Cosmetics_BackSigil"
278 [-]: GETGLOBAL R4 K4        ; R4 := mLists
279 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
280 [-]: GETTABLE  R4 R4 K51    ; R4 := R4["BACKSIGIL"]
281 [-]: LOADK     R5 K50       ; R5 := "/Lotus/Language/Menu/Cosmetics_BackSigil"
282 [-]: LOADK     R6 2         ; R6 := 2.000000
283 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
284 [-]: SETTABLE  R1 K49 R2    ; R1[13.000000] := R2
285 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
286 [-]: GETTABLE  R1 R1 K49    ; R1 := R1[13.000000]
287 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Overrides"]
288 [-]: GETTABLE  R1 R1 K31    ; R1 := R1[6.000000]
289 [-]: GETUPVAL  R2 U0        ; R2 := U0
290 [-]: GETTABLE  R2 R2 K38    ; R2 := R2["KDriveSlot"]
291 [-]: NEWTABLE  R3 0 2       ; R3 := {}
292 [-]: SETTABLE  R3 K9 K52    ; R3["Title"] := "/Lotus/Language/Hoverboards/CategoryHoverboardSticker"
293 [-]: SETTABLE  R3 K22 K52   ; R3["TopTitle"] := "/Lotus/Language/Hoverboards/CategoryHoverboardSticker"
294 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
295 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
296 [-]: MOVE      R2 R0        ; R2 := R0
297 [-]: LOADK     R3 K54       ; R3 := "/Lotus/Language/Menu/Cosmetics_FxSet"
298 [-]: GETGLOBAL R4 K4        ; R4 := mLists
299 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
300 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
301 [-]: LOADNIL   R5 R5        ; R5 := nil
302 [-]: LOADK     R6 7         ; R6 := 7.000000
303 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
304 [-]: SETTABLE  R1 K53 R2    ; R1[15.000000] := R2
305 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
306 [-]: MOVE      R2 R0        ; R2 := R0
307 [-]: LOADK     R3 K56       ; R3 := "/Lotus/Language/Menu/Cosmetics_SpecialFxSet"
308 [-]: GETGLOBAL R4 K4        ; R4 := mLists
309 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
310 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["ATTACHMENTS"]
311 [-]: LOADNIL   R5 R5        ; R5 := nil
312 [-]: LOADK     R6 8         ; R6 := 8.000000
313 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
314 [-]: SETTABLE  R1 K55 R2    ; R1[16.000000] := R2
315 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
316 [-]: MOVE      R2 R0        ; R2 := R0
317 [-]: LOADK     R3 K58       ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material1"
318 [-]: GETGLOBAL R4 K4        ; R4 := mLists
319 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
320 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["DEFAULT"]
321 [-]: LOADNIL   R5 R5        ; R5 := nil
322 [-]: LOADK     R6 50        ; R6 := 50.000000
323 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
324 [-]: SETTABLE  R1 K57 R2    ; R1[17.000000] := R2
325 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
326 [-]: MOVE      R2 R0        ; R2 := R0
327 [-]: LOADK     R3 K60       ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material2"
328 [-]: GETGLOBAL R4 K4        ; R4 := mLists
329 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
330 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["DEFAULT"]
331 [-]: LOADNIL   R5 R5        ; R5 := nil
332 [-]: LOADK     R6 51        ; R6 := 51.000000
333 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
334 [-]: SETTABLE  R1 K59 R2    ; R1[18.000000] := R2
335 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
336 [-]: MOVE      R2 R0        ; R2 := R0
337 [-]: LOADK     R3 K62       ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material3"
338 [-]: GETGLOBAL R4 K4        ; R4 := mLists
339 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
340 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["DEFAULT"]
341 [-]: LOADNIL   R5 R5        ; R5 := nil
342 [-]: LOADK     R6 52        ; R6 := 52.000000
343 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
344 [-]: SETTABLE  R1 K61 R2    ; R1[19.000000] := R2
345 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
346 [-]: MOVE      R2 R0        ; R2 := R0
347 [-]: LOADK     R3 K64       ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material4"
348 [-]: GETGLOBAL R4 K4        ; R4 := mLists
349 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mCosmeticsList"]
350 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["DEFAULT"]
351 [-]: LOADNIL   R5 R5        ; R5 := nil
352 [-]: LOADK     R6 53        ; R6 := 53.000000
353 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
354 [-]: SETTABLE  R1 K63 R2    ; R1[20.000000] := R2
355 [-]: RETURN    R0 1         ; return 


; Function #167.1:
;
; Name:            
; Defined at line: 11054
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: NEWTABLE  R4 0 4       ; R4 := {}
  2 [-]: SETTABLE  R4 K0 R0     ; R4["Default"] := R0
  3 [-]: SETTABLE  R4 K1 R1     ; R4["Level"] := R1
  4 [-]: SETTABLE  R4 K2 R2     ; R4["TopTitle"] := R2
  5 [-]: SETTABLE  R4 K3 R3     ; R4["Id"] := R3
  6 [-]: NEWTABLE  R5 0 0       ; R5 := {}
  7 [-]: SETTABLE  R4 K4 R5     ; R4["Overrides"] := R5
  8 [-]: LOADK     R5 0         ; R5 := 0.000000
  9 [-]: LOADK     R6 9         ; R6 := 9.000000
 10 [-]: LOADK     R7 1         ; R7 := 1.000000
 11 [-]: FORPREP   R5 15        ; R5 -= R7; PC := 15
 12 [-]: GETTABLE  R9 R4 K4     ; R9 := R4["Overrides"]
 13 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 14 [-]: SETTABLE  R9 R8 R10    ; R9[R8] := R10
 15 [-]: FORLOOP   R5 12        ; R5 += R7; if R5 <= R6 then begin PC := 12; R8 := R5 end
 16 [-]: RETURN    R4 2         ; return R4
 17 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 11109
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LOADBOOL  R1 1 0       ; R1 := true
  2 [-]: SETGLOBAL R1 K0        ; mInputBlocked := R1
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SELECTING_SKINS"]
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 1       ; R1(R2)
 10 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 11115
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "CosmeticsMenu"
  4 [-]: LOADK     R3 11        ; R3 := 11.000000
  5 [-]: LOADBOOL  R4 1 0       ; R4 := true
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  8 [-]: NEWTABLE  R1 0 5       ; R1 := {}
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x42b04007]
 11 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Menu/Arsenal_None"
 12 [-]: LOADBOOL  R5 0 0       ; R5 := false
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: SETTABLE  R1 K3 R2     ; R1["Name"] := R2
 15 [-]: SETTABLE  R1 K6 K7     ; R1["mEmpty"] := true
 16 [-]: SETTABLE  R1 K8 K7     ; R1["mPurchased"] := true
 17 [-]: NEWTABLE  R2 0 1       ; R2 := {}
 18 [-]: SETTABLE  R2 K10 K11   ; R2["UID"] := ""
 19 [-]: SETTABLE  R1 K9 R2     ; R1["mPurchasedInfo"] := R2
 20 [-]: SETTABLE  R1 K12 K13   ; R1["mSortId"] := -1.000000
 21 [-]: NEWTABLE  R2 0 4       ; R2 := {}
 22 [-]: SETTABLE  R2 K15 K16   ; R2["Title"] := "/Lotus/Language/Menu/Loadout_Pennant"
 23 [-]: GETGLOBAL R3 K18       ; R3 := 0x7ed0a956
 24 [-]: LOADK     R4 K19       ; R4 := "/Lotus/Upgrades/Skins/Lunaro/Arena/PennantMeshBase"
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: SETTABLE  R2 K17 R3    ; R2["BaseType"] := R3
 27 [-]: NEWTABLE  R3 1 0       ; R3 := {}
 28 [-]: MOVE      R4 R1        ; R4 := R1
 29 [-]: SETLIST   R3 1 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
 30 [-]: SETTABLE  R2 K20 R3    ; R2["Items"] := R3
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: SETTABLE  R2 K21 R3    ; R2["Callback"] := R3
 33 [-]: SETTABLE  R0 K14 R2    ; R0[1.000000] := R2
 34 [-]: GETUPVAL  R2 U1        ; R2 := U1
 35 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0xe9cbffa8]
 36 [-]: GETGLOBAL R4 K23       ; R4 := gArenaCustomizationItemType
 37 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 38 [-]: GETGLOBAL R3 K24       ; R3 := mInventory
 39 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3[0xd8dfa041]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: LOADK     R4 1         ; R4 := 1.000000
 42 [-]: LEN       R5 R0        ; R5 := # R0
 43 [-]: LOADK     R6 1         ; R6 := 1.000000
 44 [-]: FORPREP   R4 117       ; R4 -= R6; PC := 117
 45 [-]: GETTABLE  R8 R0 R7     ; R8 := R0[R7]
 46 [-]: GETGLOBAL R9 K26       ; R9 := 0xc8802016
 47 [-]: MOVE      R10 R2       ; R10 := R2
 48 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 49 [-]: JMP       109          ; PC := 109
 50 [-]: SELF      R14 R13 K27  ; R15 := R13; R14 := R13[0xf278f8a1]
 51 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 52 [-]: SELF      R14 R14 K28  ; R15 := R14; R14 := R14[0xf2deaf69]
 53 [-]: GETTABLE  R16 R8 K17   ; R16 := R8["BaseType"]
 54 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 55 [-]: TEST      R14 0        ; if not R14 then PC := 109
 56 [-]: JMP       109          ; PC := 109
 57 [-]: GETUPVAL  R14 U2       ; R14 := U2
 58 [-]: GETTABLE  R14 R14 K29  ; R14 := R14[0x08681f50]
 59 [-]: GETGLOBAL R15 K0       ; R15 := 0xae91e43b
 60 [-]: MOVE      R16 R13      ; R16 := R13
 61 [-]: NEWTABLE  R17 0 1      ; R17 := {}
 62 [-]: GETGLOBAL R18 K31      ; R18 := 0x25d99d89
 63 [-]: SETTABLE  R17 K30 R18  ; R17["GameData"] := R18
 64 [-]: LOADNIL   R18 R19      ; R18 := R19 := nil
 65 [-]: LOADBOOL  R20 1 0      ; R20 := true
 66 [-]: CALL      R14 7 2      ; R14 := R14(R15,R16,R17,R18,R19,R20)
 67 [-]: GETGLOBAL R15 K32      ; R15 := 0x7b998233
 68 [-]: GETTABLE  R16 R14 K33  ; R16 := R14["LocalizedDesc"]
 69 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 70 [-]: TEST      R15 0        ; if not R15 then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: SETTABLE  R14 K33 K11  ; R14["LocalizedDesc"] := ""
 73 [-]: SETTABLE  R14 K34 R13  ; R14["mStoreItem"] := R13
 74 [-]: SETTABLE  R14 K8 K35   ; R14["mPurchased"] := false
 75 [-]: NEWTABLE  R15 0 1      ; R15 := {}
 76 [-]: GETTABLE  R16 R14 K34  ; R16 := R14["mStoreItem"]
 77 [-]: SELF      R16 R16 K27  ; R17 := R16; R16 := R16[0xf278f8a1]
 78 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 79 [-]: SELF      R16 R16 K36  ; R17 := R16; R16 := R16[0xed4e0128]
 80 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 81 [-]: SETTABLE  R15 K10 R16  ; R15["UID"] := R16
 82 [-]: SETTABLE  R14 K9 R15   ; R14["mPurchasedInfo"] := R15
 83 [-]: GETGLOBAL R15 K26      ; R15 := 0xc8802016
 84 [-]: MOVE      R16 R3       ; R16 := R3
 85 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 86 [-]: JMP       99           ; PC := 99
 87 [-]: GETTABLE  R20 R19 K37  ; R20 := R19["mItemType"]
 88 [-]: GETGLOBAL R21 K32      ; R21 := 0x7b998233
 89 [-]: MOVE      R22 R20      ; R22 := R20
 90 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 91 [-]: TEST      R21 1        ; if R21 then PC := 99
 92 [-]: JMP       99           ; PC := 99
 93 [-]: SELF      R21 R13 K27  ; R22 := R13; R21 := R13[0xf278f8a1]
 94 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 95 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 99
 96 [-]: JMP       99           ; PC := 99
 97 [-]: SETTABLE  R14 K8 K7    ; R14["mPurchased"] := true
 98 [-]: JMP       101          ; PC := 101
 99 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 87; R17 := R18 end
100 [-]: JMP       87           ; PC := 87
101 [-]: GETTABLE  R21 R8 K20   ; R21 := R8["Items"]
102 [-]: LEN       R21 R21      ; R21 := # R21
103 [-]: SETTABLE  R14 K12 R21  ; R14["mSortId"] := R21
104 [-]: GETGLOBAL R21 K38      ; R21 := 0x33bdd652
105 [-]: GETTABLE  R21 R21 K39  ; R21 := R21[0x23d5322f]
106 [-]: GETTABLE  R22 R8 K20   ; R22 := R8["Items"]
107 [-]: MOVE      R23 R14      ; R23 := R14
108 [-]: CALL      R21 3 1      ; R21(R22,R23)
109 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 50; R11 := R12 end
110 [-]: JMP       50           ; PC := 50
111 [-]: GETGLOBAL R21 K40      ; R21 := mLists
112 [-]: GETTABLE  R21 R21 K41  ; R21 := R21["mCosmeticsList"]
113 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21[0xbad4316f]
114 [-]: MOVE      R23 R8       ; R23 := R8
115 [-]: LOADBOOL  R24 1 0      ; R24 := true
116 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
117 [-]: FORLOOP   R4 45        ; R4 += R6; if R4 <= R5 then begin PC := 45; R7 := R4 end
118 [-]: GETGLOBAL R21 K40      ; R21 := mLists
119 [-]: GETTABLE  R21 R21 K41  ; R21 := R21["mCosmeticsList"]
120 [-]: SELF      R21 R21 K43  ; R22 := R21; R21 := R21[0x71e9ac81]
121 [-]: CLOSURE   R23 0        ; R23 := closure(Function #169.1)
122 [-]: CALL      R21 3 1      ; R21(R22,R23)
123 [-]: RETURN    R0 1         ; return 


; Function #169.1:
;
; Name:            
; Defined at line: 11163
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: SETGLOBAL R0 K0        ; mInputBlocked := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 11168
; #Upvalues:       19
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  184

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xaade900e]
  3 [-]: LOADK     R3 K2        ; R3 := "CosmeticsMenu"
  4 [-]: LOADK     R4 11        ; R4 := 11.000000
  5 [-]: LOADBOOL  R5 1 0       ; R5 := true
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x5f56eeab]
 12 [-]: LOADK     R5 K4        ; R5 := "CosmeticDesc"
 13 [-]: LOADK     R6 29        ; R6 := 29.000000
 14 [-]: LOADK     R7 K5        ; R7 := ""
 15 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 16 [-]: GETGLOBAL R3 K6        ; R3 := 0x7b998233
 17 [-]: GETGLOBAL R4 K7        ; R4 := mSelected
 18 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["Element"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R3 K7        ; R3 := mSelected
 24 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Element"]
 25 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["LoadOutType"]
 26 [-]: GETGLOBAL R4 K7        ; R4 := mSelected
 27 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["Element"]
 28 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["LoadOutId"]
 29 [-]: EQ        0 R4 K12     ; if R4 ~= 5.000000 then PC := 43
 30 [-]: JMP       43           ; PC := 43
 31 [-]: GETGLOBAL R5 K13       ; R5 := _T
 32 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mSpecialSuitMode"]
 33 [-]: TEST      R5 0         ; if not R5 then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: GETGLOBAL R5 K7        ; R5 := mSelected
 36 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["Element"]
 37 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["EquippedItem"]
 38 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["mItemType"]
 39 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5[0xf2deaf69]
 40 [-]: GETGLOBAL R7 K18       ; R7 := gPetPowerSuitType
 41 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 42 [-]: JMP       45           ; PC := 45
 43 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 44
 44 [-]: LOADBOOL  R5 1 0       ; R5 := true
 45 [-]: GETGLOBAL R6 K6        ; R6 := 0x7b998233
 46 [-]: GETGLOBAL R7 K19       ; R7 := 0x25d99d89
 47 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 48 [-]: TEST      R6 1         ; if R6 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: EQ        1 R3 K20     ; if R3 == 1.000000 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: TEST      R5 0         ; if not R5 then PC := 452
 53 [-]: JMP       452          ; PC := 452
 54 [-]: GETGLOBAL R6 K21       ; R6 := mCosmeticsLabels
 55 [-]: GETTABLE  R6 R6 K22    ; R6 := R6[16.000000]
 56 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["Overrides"]
 57 [-]: GETTABLE  R6 R6 K20    ; R6 := R6[1.000000]
 58 [-]: SETTABLE  R6 K24 K25   ; R6[0.000000] := nil
 59 [-]: TEST      R5 1         ; if R5 then PC := 66
 60 [-]: JMP       66           ; PC := 66
 61 [-]: GETGLOBAL R6 K19       ; R6 := 0x25d99d89
 62 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0x3c6b0324]
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: TEST      R6 0         ; if not R6 then PC := 292
 65 [-]: JMP       292          ; PC := 292
 66 [-]: GETGLOBAL R6 K21       ; R6 := mCosmeticsLabels
 67 [-]: GETTABLE  R6 R6 K27    ; R6 := R6[7.000000]
 68 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["Overrides"]
 69 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 70 [-]: NEWTABLE  R7 0 4       ; R7 := {}
 71 [-]: SETTABLE  R7 K28 K29   ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_FurPattern"
 72 [-]: GETGLOBAL R8 K31       ; R8 := mLists
 73 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mCosmeticsList"]
 74 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["DEFAULT"]
 75 [-]: SETTABLE  R7 K30 R8    ; R7["Level"] := R8
 76 [-]: SETTABLE  R7 K34 K35   ; R7["PetTrait"] := "mFurPattern"
 77 [-]: SETTABLE  R7 K36 K37   ; R7["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
 78 [-]: SETTABLE  R6 R4 R7     ; R6[R4] := R7
 79 [-]: GETGLOBAL R6 K21       ; R6 := mCosmeticsLabels
 80 [-]: GETTABLE  R6 R6 K20    ; R6 := R6[1.000000]
 81 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["Overrides"]
 82 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 83 [-]: NEWTABLE  R7 0 4       ; R7 := {}
 84 [-]: SETTABLE  R7 K28 K38   ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_BaseColor"
 85 [-]: GETGLOBAL R8 K31       ; R8 := mLists
 86 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mCosmeticsList"]
 87 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["DEFAULT"]
 88 [-]: SETTABLE  R7 K30 R8    ; R7["Level"] := R8
 89 [-]: SETTABLE  R7 K39 K24   ; R7["Attribute"] := 0.000000
 90 [-]: SETTABLE  R7 K34 K40   ; R7["PetTrait"] := "mBaseColor"
 91 [-]: SETTABLE  R6 R4 R7     ; R6[R4] := R7
 92 [-]: GETGLOBAL R6 K21       ; R6 := mCosmeticsLabels
 93 [-]: GETTABLE  R6 R6 K41    ; R6 := R6[9.000000]
 94 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["Overrides"]
 95 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 96 [-]: NEWTABLE  R7 0 4       ; R7 := {}
 97 [-]: SETTABLE  R7 K28 K42   ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_SecondaryColor"
 98 [-]: GETGLOBAL R8 K31       ; R8 := mLists
 99 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mCosmeticsList"]
100 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["DEFAULT"]
101 [-]: SETTABLE  R7 K30 R8    ; R7["Level"] := R8
102 [-]: SETTABLE  R7 K39 K20   ; R7["Attribute"] := 1.000000
103 [-]: SETTABLE  R7 K34 K43   ; R7["PetTrait"] := "mSecondaryColor"
104 [-]: SETTABLE  R6 R4 R7     ; R6[R4] := R7
105 [-]: GETGLOBAL R6 K21       ; R6 := mCosmeticsLabels
106 [-]: GETTABLE  R6 R6 K44    ; R6 := R6[2.000000]
107 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["Overrides"]
108 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
109 [-]: NEWTABLE  R7 0 4       ; R7 := {}
110 [-]: SETTABLE  R7 K28 K45   ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_TertiaryColor"
111 [-]: GETGLOBAL R8 K31       ; R8 := mLists
112 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mCosmeticsList"]
113 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["DEFAULT"]
114 [-]: SETTABLE  R7 K30 R8    ; R7["Level"] := R8
115 [-]: SETTABLE  R7 K39 K44   ; R7["Attribute"] := 2.000000
116 [-]: SETTABLE  R7 K34 K46   ; R7["PetTrait"] := "mTertiaryColor"
117 [-]: SETTABLE  R6 R4 R7     ; R6[R4] := R7
118 [-]: TEST      R5 0         ; if not R5 then PC := 127
119 [-]: JMP       127          ; PC := 127
120 [-]: NEWTABLE  R6 3 0       ; R6 := {}
121 [-]: LOADK     R7 1         ; R7 := 1.000000
122 [-]: LOADK     R8 9         ; R8 := 9.000000
123 [-]: LOADK     R9 2         ; R9 := 2.000000
124 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
125 [-]: MOVE      R2 R6        ; R2 := R6
126 [-]: JMP       134          ; PC := 134
127 [-]: NEWTABLE  R6 4 0       ; R6 := {}
128 [-]: LOADK     R7 7         ; R7 := 7.000000
129 [-]: LOADK     R8 1         ; R8 := 1.000000
130 [-]: LOADK     R9 9         ; R9 := 9.000000
131 [-]: LOADK     R10 2        ; R10 := 2.000000
132 [-]: SETLIST   R6 4 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 4
133 [-]: MOVE      R2 R6        ; R2 := R6
134 [-]: GETGLOBAL R6 K6        ; R6 := 0x7b998233
135 [-]: GETGLOBAL R7 K7        ; R7 := mSelected
136 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["Element"]
137 [-]: GETTABLE  R7 R7 K47    ; R7 := R7["Type"]
138 [-]: CALL      R6 2 2       ; R6 := R6(R7)
139 [-]: TEST      R6 1         ; if R6 then PC := 148
140 [-]: JMP       148          ; PC := 148
141 [-]: GETGLOBAL R6 K7        ; R6 := mSelected
142 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Element"]
143 [-]: GETTABLE  R6 R6 K47    ; R6 := R6["Type"]
144 [-]: SELF      R6 R6 K17    ; R7 := R6; R6 := R6[0xf2deaf69]
145 [-]: GETGLOBAL R8 K48       ; R8 := 0x01302fb0
146 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
147 [-]: JMP       150          ; PC := 150
148 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 149
149 [-]: LOADBOOL  R6 1 0       ; R6 := true
150 [-]: GETGLOBAL R7 K21       ; R7 := mCosmeticsLabels
151 [-]: GETTABLE  R7 R7 K49    ; R7 := R7[8.000000]
152 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["Overrides"]
153 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
154 [-]: NEWTABLE  R8 0 2       ; R8 := {}
155 [-]: SETTABLE  R8 K28 K50   ; R8["Title"] := "/Lotus/Language/Menu/Cosmetics_KubrowArmor"
156 [-]: GETUPVAL  R9 U1        ; R9 := U1
157 [-]: GETTABLE  R9 R9 K51    ; R9 := R9[0x06d055f9]
158 [-]: NOT       R10 R6       ; R10 := not R6
159 [-]: LOADK     R11 K5       ; R11 := ""
160 [-]: LOADNIL   R12 R12      ; R12 := nil
161 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
162 [-]: SETTABLE  R8 K36 R9    ; R8["TopTitle"] := R9
163 [-]: SETTABLE  R7 R4 R8     ; R7[R4] := R8
164 [-]: GETGLOBAL R7 K6        ; R7 := 0x7b998233
165 [-]: GETGLOBAL R8 K7        ; R8 := mSelected
166 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["Element"]
167 [-]: GETTABLE  R8 R8 K47    ; R8 := R8["Type"]
168 [-]: CALL      R7 2 2       ; R7 := R7(R8)
169 [-]: TEST      R7 1         ; if R7 then PC := 491
170 [-]: JMP       491          ; PC := 491
171 [-]: GETUPVAL  R7 U2        ; R7 := U2
172 [-]: GETTABLE  R7 R7 K52    ; R7 := R7[0xb68bba03]
173 [-]: GETGLOBAL R8 K7        ; R8 := mSelected
174 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["Element"]
175 [-]: GETTABLE  R8 R8 K53    ; R8 := R8["Customization"]
176 [-]: CALL      R7 2 2       ; R7 := R7(R8)
177 [-]: TEST      R7 0         ; if not R7 then PC := 192
178 [-]: JMP       192          ; PC := 192
179 [-]: GETGLOBAL R8 K21       ; R8 := mCosmeticsLabels
180 [-]: GETTABLE  R8 R8 K54    ; R8 := R8[10.000000]
181 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Overrides"]
182 [-]: GETTABLE  R8 R8 R3     ; R8 := R8[R3]
183 [-]: NEWTABLE  R9 0 4       ; R9 := {}
184 [-]: SETTABLE  R9 K28 K55   ; R9["Title"] := "/Lotus/Language/Menu/Cosmetics_TertiaryColor2"
185 [-]: GETGLOBAL R10 K31      ; R10 := mLists
186 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["mCosmeticsList"]
187 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["DEFAULT"]
188 [-]: SETTABLE  R9 K30 R10   ; R9["Level"] := R10
189 [-]: SETTABLE  R9 K39 K56   ; R9["Attribute"] := 3.000000
190 [-]: SETTABLE  R9 K34 K57   ; R9["PetTrait"] := "mEyeColor"
191 [-]: SETTABLE  R8 R4 R9     ; R8[R4] := R9
192 [-]: TEST      R6 1         ; if R6 then PC := 210
193 [-]: JMP       210          ; PC := 210
194 [-]: GETGLOBAL R8 K7        ; R8 := mSelected
195 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["Element"]
196 [-]: GETTABLE  R8 R8 K47    ; R8 := R8["Type"]
197 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0xf2deaf69]
198 [-]: GETGLOBAL R10 K58      ; R10 := 0xf541be71
199 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
200 [-]: TEST      R8 1         ; if R8 then PC := 210
201 [-]: JMP       210          ; PC := 210
202 [-]: GETGLOBAL R8 K7        ; R8 := mSelected
203 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["Element"]
204 [-]: GETTABLE  R8 R8 K47    ; R8 := R8["Type"]
205 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0xf2deaf69]
206 [-]: GETGLOBAL R10 K59      ; R10 := 0x5bc0a754
207 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
208 [-]: TEST      R8 0         ; if not R8 then PC := 246
209 [-]: JMP       246          ; PC := 246
210 [-]: GETGLOBAL R8 K21       ; R8 := mCosmeticsLabels
211 [-]: GETTABLE  R8 R8 K54    ; R8 := R8[10.000000]
212 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Overrides"]
213 [-]: GETTABLE  R8 R8 R3     ; R8 := R8[R3]
214 [-]: NEWTABLE  R9 0 4       ; R9 := {}
215 [-]: SETTABLE  R9 K28 K55   ; R9["Title"] := "/Lotus/Language/Menu/Cosmetics_TertiaryColor2"
216 [-]: GETGLOBAL R10 K31      ; R10 := mLists
217 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["mCosmeticsList"]
218 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["DEFAULT"]
219 [-]: SETTABLE  R9 K30 R10   ; R9["Level"] := R10
220 [-]: SETTABLE  R9 K39 K56   ; R9["Attribute"] := 3.000000
221 [-]: SETTABLE  R9 K34 K60   ; R9["PetTrait"] := "mAccentColor"
222 [-]: SETTABLE  R8 R4 R9     ; R8[R4] := R9
223 [-]: GETGLOBAL R8 K61       ; R8 := 0x33bdd652
224 [-]: GETTABLE  R8 R8 K62    ; R8 := R8[0x23d5322f]
225 [-]: MOVE      R9 R2        ; R9 := R2
226 [-]: LOADK     R10 10       ; R10 := 10.000000
227 [-]: CALL      R8 3 1       ; R8(R9,R10)
228 [-]: GETGLOBAL R8 K21       ; R8 := mCosmeticsLabels
229 [-]: GETTABLE  R8 R8 K63    ; R8 := R8[11.000000]
230 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Overrides"]
231 [-]: GETTABLE  R8 R8 R3     ; R8 := R8[R3]
232 [-]: NEWTABLE  R9 0 4       ; R9 := {}
233 [-]: SETTABLE  R9 K28 K64   ; R9["Title"] := "/Lotus/Language/Menu/Arsenal_Emissive"
234 [-]: GETGLOBAL R10 K31      ; R10 := mLists
235 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["mCosmeticsList"]
236 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["DEFAULT"]
237 [-]: SETTABLE  R9 K30 R10   ; R9["Level"] := R10
238 [-]: SETTABLE  R9 K39 K65   ; R9["Attribute"] := 4.000000
239 [-]: SETTABLE  R9 K34 K57   ; R9["PetTrait"] := "mEyeColor"
240 [-]: SETTABLE  R8 R4 R9     ; R8[R4] := R9
241 [-]: GETGLOBAL R8 K61       ; R8 := 0x33bdd652
242 [-]: GETTABLE  R8 R8 K62    ; R8 := R8[0x23d5322f]
243 [-]: MOVE      R9 R2        ; R9 := R2
244 [-]: LOADK     R10 11       ; R10 := 11.000000
245 [-]: CALL      R8 3 1       ; R8(R9,R10)
246 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
247 [-]: GETGLOBAL R9 K7        ; R9 := mSelected
248 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["Element"]
249 [-]: GETTABLE  R9 R9 K53    ; R9 := R9["Customization"]
250 [-]: CALL      R8 2 2       ; R8 := R8(R9)
251 [-]: TEST      R8 1         ; if R8 then PC := 491
252 [-]: JMP       491          ; PC := 491
253 [-]: GETGLOBAL R8 K7        ; R8 := mSelected
254 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["Element"]
255 [-]: GETTABLE  R8 R8 K53    ; R8 := R8["Customization"]
256 [-]: SELF      R8 R8 K66    ; R9 := R8; R8 := R8[0x2540510f]
257 [-]: LOADK     R10 7        ; R10 := 7.000000
258 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
259 [-]: GETGLOBAL R9 K6        ; R9 := 0x7b998233
260 [-]: MOVE      R10 R8       ; R10 := R8
261 [-]: CALL      R9 2 2       ; R9 := R9(R10)
262 [-]: TEST      R9 1         ; if R9 then PC := 491
263 [-]: JMP       491          ; PC := 491
264 [-]: SELF      R9 R8 K17    ; R10 := R8; R9 := R8[0xf2deaf69]
265 [-]: GETGLOBAL R11 K67      ; R11 := 0x0a914a18
266 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
267 [-]: TEST      R9 0         ; if not R9 then PC := 491
268 [-]: JMP       491          ; PC := 491
269 [-]: GETGLOBAL R9 K68       ; R9 := 0xb009bbc6
270 [-]: MOVE      R10 R8       ; R10 := R8
271 [-]: CALL      R9 2 2       ; R9 := R9(R10)
272 [-]: MOVE      R8 R9        ; R8 := R9
273 [-]: SELF      R9 R8 K69    ; R10 := R8; R9 := R8[0xb8ef5b34]
274 [-]: LOADK     R11 8        ; R11 := 8.000000
275 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
276 [-]: GETGLOBAL R10 K6       ; R10 := 0x7b998233
277 [-]: MOVE      R11 R9       ; R11 := R9
278 [-]: CALL      R10 2 2      ; R10 := R10(R11)
279 [-]: TEST      R10 1        ; if R10 then PC := 491
280 [-]: JMP       491          ; PC := 491
281 [-]: GETGLOBAL R10 K21      ; R10 := mCosmeticsLabels
282 [-]: GETTABLE  R10 R10 K49  ; R10 := R10[8.000000]
283 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["Overrides"]
284 [-]: GETTABLE  R10 R10 R3   ; R10 := R10[R3]
285 [-]: NEWTABLE  R11 0 1      ; R11 := {}
286 [-]: GETGLOBAL R12 K31      ; R12 := mLists
287 [-]: GETTABLE  R12 R12 K32  ; R12 := R12["mCosmeticsList"]
288 [-]: GETTABLE  R12 R12 K70  ; R12 := R12["NONE"]
289 [-]: SETTABLE  R11 K30 R12  ; R11["Level"] := R12
290 [-]: SETTABLE  R10 R4 R11   ; R10[R4] := R11
291 [-]: JMP       491          ; PC := 491
292 [-]: GETGLOBAL R10 K19      ; R10 := 0x25d99d89
293 [-]: SELF      R10 R10 K71  ; R11 := R10; R10 := R10[0x9f91f49d]
294 [-]: CALL      R10 2 2      ; R10 := R10(R11)
295 [-]: TEST      R10 0        ; if not R10 then PC := 406
296 [-]: JMP       406          ; PC := 406
297 [-]: EQ        0 R3 K20     ; if R3 ~= 1.000000 then PC := 406
298 [-]: JMP       406          ; PC := 406
299 [-]: GETGLOBAL R10 K21      ; R10 := mCosmeticsLabels
300 [-]: GETTABLE  R10 R10 K49  ; R10 := R10[8.000000]
301 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["Overrides"]
302 [-]: GETTABLE  R10 R10 K20  ; R10 := R10[1.000000]
303 [-]: NEWTABLE  R11 0 1      ; R11 := {}
304 [-]: GETGLOBAL R12 K31      ; R12 := mLists
305 [-]: GETTABLE  R12 R12 K32  ; R12 := R12["mCosmeticsList"]
306 [-]: GETTABLE  R12 R12 K70  ; R12 := R12["NONE"]
307 [-]: SETTABLE  R11 K30 R12  ; R11["Level"] := R12
308 [-]: SETTABLE  R10 K24 R11  ; R10[0.000000] := R11
309 [-]: GETGLOBAL R10 K6       ; R10 := 0x7b998233
310 [-]: GETGLOBAL R11 K7       ; R11 := mSelected
311 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["Element"]
312 [-]: CALL      R10 2 2      ; R10 := R10(R11)
313 [-]: TEST      R10 1        ; if R10 then PC := 336
314 [-]: JMP       336          ; PC := 336
315 [-]: GETGLOBAL R10 K6       ; R10 := 0x7b998233
316 [-]: GETGLOBAL R11 K7       ; R11 := mSelected
317 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["Element"]
318 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["EquippedItem"]
319 [-]: CALL      R10 2 2      ; R10 := R10(R11)
320 [-]: TEST      R10 1        ; if R10 then PC := 336
321 [-]: JMP       336          ; PC := 336
322 [-]: GETGLOBAL R10 K7       ; R10 := mSelected
323 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["Element"]
324 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["EquippedItem"]
325 [-]: GETTABLE  R10 R10 K72  ; R10 := R10["mModularParts"]
326 [-]: LEN       R10 R10      ; R10 := # R10
327 [-]: LT        0 K24 R10    ; if 0.000000 >= R10 then PC := 336
328 [-]: JMP       336          ; PC := 336
329 [-]: GETGLOBAL R10 K7       ; R10 := mSelected
330 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["Element"]
331 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["EquippedItem"]
332 [-]: SELF      R10 R10 K73  ; R11 := R10; R10 := R10[0xdbfbf6c0]
333 [-]: LOADK     R12 3        ; R12 := 3.000000
334 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
335 [-]: JMP       338          ; PC := 338
336 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 337
337 [-]: LOADBOOL  R10 1 0      ; R10 := true
338 [-]: TEST      R10 0        ; if not R10 then PC := 348
339 [-]: JMP       348          ; PC := 348
340 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
341 [-]: GETTABLE  R11 R11 K27  ; R11 := R11[7.000000]
342 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
343 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
344 [-]: NEWTABLE  R12 0 1      ; R12 := {}
345 [-]: SETTABLE  R12 K36 K37  ; R12["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
346 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
347 [-]: JMP       358          ; PC := 358
348 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
349 [-]: GETTABLE  R11 R11 K27  ; R11 := R11[7.000000]
350 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
351 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
352 [-]: NEWTABLE  R12 0 1      ; R12 := {}
353 [-]: GETGLOBAL R13 K31      ; R13 := mLists
354 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mCosmeticsList"]
355 [-]: GETTABLE  R13 R13 K70  ; R13 := R13["NONE"]
356 [-]: SETTABLE  R12 K30 R13  ; R12["Level"] := R13
357 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
358 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
359 [-]: GETTABLE  R11 R11 K24  ; R11 := R11[0.000000]
360 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
361 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
362 [-]: NEWTABLE  R12 0 1      ; R12 := {}
363 [-]: GETGLOBAL R13 K31      ; R13 := mLists
364 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mCosmeticsList"]
365 [-]: GETTABLE  R13 R13 K70  ; R13 := R13["NONE"]
366 [-]: SETTABLE  R12 K30 R13  ; R12["Level"] := R13
367 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
368 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
369 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
370 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
371 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
372 [-]: NEWTABLE  R12 0 1      ; R12 := {}
373 [-]: GETGLOBAL R13 K31      ; R13 := mLists
374 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mCosmeticsList"]
375 [-]: GETTABLE  R13 R13 K70  ; R13 := R13["NONE"]
376 [-]: SETTABLE  R12 K30 R13  ; R12["Level"] := R13
377 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
378 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
379 [-]: GETTABLE  R11 R11 K41  ; R11 := R11[9.000000]
380 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
381 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
382 [-]: NEWTABLE  R12 0 1      ; R12 := {}
383 [-]: GETGLOBAL R13 K31      ; R13 := mLists
384 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mCosmeticsList"]
385 [-]: GETTABLE  R13 R13 K70  ; R13 := R13["NONE"]
386 [-]: SETTABLE  R12 K30 R13  ; R12["Level"] := R13
387 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
388 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
389 [-]: GETTABLE  R11 R11 K44  ; R11 := R11[2.000000]
390 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
391 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
392 [-]: NEWTABLE  R12 0 1      ; R12 := {}
393 [-]: GETGLOBAL R13 K31      ; R13 := mLists
394 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mCosmeticsList"]
395 [-]: GETTABLE  R13 R13 K70  ; R13 := R13["NONE"]
396 [-]: SETTABLE  R12 K30 R13  ; R12["Level"] := R13
397 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
398 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
399 [-]: GETTABLE  R11 R11 K22  ; R11 := R11[16.000000]
400 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
401 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
402 [-]: NEWTABLE  R12 0 1      ; R12 := {}
403 [-]: SETTABLE  R12 K36 K74  ; R12["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
404 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
405 [-]: JMP       491          ; PC := 491
406 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
407 [-]: GETTABLE  R11 R11 K27  ; R11 := R11[7.000000]
408 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
409 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
410 [-]: NEWTABLE  R12 0 1      ; R12 := {}
411 [-]: SETTABLE  R12 K36 K37  ; R12["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
412 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
413 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
414 [-]: GETTABLE  R11 R11 K24  ; R11 := R11[0.000000]
415 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
416 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
417 [-]: NEWTABLE  R12 0 2      ; R12 := {}
418 [-]: SETTABLE  R12 K28 K75  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Mask"
419 [-]: GETGLOBAL R13 K31      ; R13 := mLists
420 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["mCosmeticsList"]
421 [-]: GETTABLE  R13 R13 K76  ; R13 := R13["ATTACHMENTS"]
422 [-]: SETTABLE  R12 K30 R13  ; R12["Level"] := R13
423 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
424 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
425 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
426 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
427 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
428 [-]: NEWTABLE  R12 0 1      ; R12 := {}
429 [-]: SETTABLE  R12 K28 K77  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Wings"
430 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
431 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
432 [-]: GETTABLE  R11 R11 K41  ; R11 := R11[9.000000]
433 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
434 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
435 [-]: NEWTABLE  R12 0 1      ; R12 := {}
436 [-]: SETTABLE  R12 K28 K78  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_WingsRight"
437 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
438 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
439 [-]: GETTABLE  R11 R11 K44  ; R11 := R11[2.000000]
440 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
441 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
442 [-]: NEWTABLE  R12 0 1      ; R12 := {}
443 [-]: SETTABLE  R12 K28 K79  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Tail"
444 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
445 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
446 [-]: GETTABLE  R11 R11 K65  ; R11 := R11[4.000000]
447 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
448 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
449 [-]: NEWTABLE  R12 0 0      ; R12 := {}
450 [-]: SETTABLE  R11 K24 R12  ; R11[0.000000] := R12
451 [-]: JMP       491          ; PC := 491
452 [-]: GETGLOBAL R11 K7       ; R11 := mSelected
453 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["Element"]
454 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["Type"]
455 [-]: SELF      R11 R11 K17  ; R12 := R11; R11 := R11[0xf2deaf69]
456 [-]: GETGLOBAL R13 K80      ; R13 := 0x56fafcd2
457 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
458 [-]: TEST      R11 0        ; if not R11 then PC := 477
459 [-]: JMP       477          ; PC := 477
460 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
461 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
462 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
463 [-]: GETTABLE  R11 R11 K24  ; R11 := R11[0.000000]
464 [-]: NEWTABLE  R12 0 2      ; R12 := {}
465 [-]: SETTABLE  R12 K28 K81  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_ArrowSkin"
466 [-]: SETTABLE  R12 K36 K74  ; R12["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
467 [-]: SETTABLE  R11 K44 R12  ; R11[2.000000] := R12
468 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
469 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
470 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
471 [-]: GETTABLE  R11 R11 K56  ; R11 := R11[3.000000]
472 [-]: NEWTABLE  R12 0 2      ; R12 := {}
473 [-]: SETTABLE  R12 K28 K81  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_ArrowSkin"
474 [-]: SETTABLE  R12 K36 K74  ; R12["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
475 [-]: SETTABLE  R11 K44 R12  ; R11[2.000000] := R12
476 [-]: JMP       491          ; PC := 491
477 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
478 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
479 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
480 [-]: GETTABLE  R11 R11 K24  ; R11 := R11[0.000000]
481 [-]: NEWTABLE  R12 0 1      ; R12 := {}
482 [-]: SETTABLE  R12 K28 K82  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
483 [-]: SETTABLE  R11 K44 R12  ; R11[2.000000] := R12
484 [-]: GETGLOBAL R11 K21      ; R11 := mCosmeticsLabels
485 [-]: GETTABLE  R11 R11 K20  ; R11 := R11[1.000000]
486 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["Overrides"]
487 [-]: GETTABLE  R11 R11 K56  ; R11 := R11[3.000000]
488 [-]: NEWTABLE  R12 0 1      ; R12 := {}
489 [-]: SETTABLE  R12 K28 K82  ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
490 [-]: SETTABLE  R11 K44 R12  ; R11[2.000000] := R12
491 [-]: LOADNIL   R11 R11      ; R11 := nil
492 [-]: GETGLOBAL R12 K7       ; R12 := mSelected
493 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["Element"]
494 [-]: EQ        1 R12 K25    ; if R12 == nil then PC := 499
495 [-]: JMP       499          ; PC := 499
496 [-]: GETGLOBAL R12 K7       ; R12 := mSelected
497 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["Element"]
498 [-]: GETTABLE  R11 R12 K53  ; R11 := R12["Customization"]
499 [-]: NEWTABLE  R12 0 0      ; R12 := {}
500 [-]: CLOSURE   R13 0        ; R13 := closure(Function #170.1)
501 [-]: MOVE      R0 R3        ; R0 := R3
502 [-]: MOVE      R0 R4        ; R0 := R4
503 [-]: MOVE      R0 R12       ; R0 := R12
504 [-]: GETGLOBAL R14 K83      ; R14 := 0xc8802016
505 [-]: MOVE      R15 R2       ; R15 := R2
506 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
507 [-]: JMP       514          ; PC := 514
508 [-]: GETTABLE  R19 R12 R18  ; R19 := R12[R18]
509 [-]: EQ        0 R19 K25    ; if R19 ~= nil then PC := 514
510 [-]: JMP       514          ; PC := 514
511 [-]: MOVE      R19 R13      ; R19 := R13
512 [-]: MOVE      R20 R18      ; R20 := R18
513 [-]: CALL      R19 2 1      ; R19(R20)
514 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 508; R16 := R17 end
515 [-]: JMP       508          ; PC := 508
516 [-]: NEWTABLE  R19 1 0      ; R19 := {}
517 [-]: LOADK     R20 0        ; R20 := 0.000000
518 [-]: SETLIST   R19 1 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
519 [-]: GETGLOBAL R20 K6       ; R20 := 0x7b998233
520 [-]: GETGLOBAL R21 K7       ; R21 := mSelected
521 [-]: GETTABLE  R21 R21 K8   ; R21 := R21["Element"]
522 [-]: GETTABLE  R21 R21 K15  ; R21 := R21["EquippedItem"]
523 [-]: CALL      R20 2 2      ; R20 := R20(R21)
524 [-]: TEST      R20 1        ; if R20 then PC := 541
525 [-]: JMP       541          ; PC := 541
526 [-]: GETGLOBAL R20 K7       ; R20 := mSelected
527 [-]: GETTABLE  R20 R20 K8   ; R20 := R20["Element"]
528 [-]: GETTABLE  R20 R20 K15  ; R20 := R20["EquippedItem"]
529 [-]: GETTABLE  R20 R20 K72  ; R20 := R20["mModularParts"]
530 [-]: LEN       R20 R20      ; R20 := # R20
531 [-]: LT        0 K24 R20    ; if 0.000000 >= R20 then PC := 541
532 [-]: JMP       541          ; PC := 541
533 [-]: GETGLOBAL R20 K7       ; R20 := mSelected
534 [-]: GETTABLE  R20 R20 K8   ; R20 := R20["Element"]
535 [-]: GETTABLE  R20 R20 K15  ; R20 := R20["EquippedItem"]
536 [-]: SELF      R20 R20 K73  ; R21 := R20; R20 := R20[0xdbfbf6c0]
537 [-]: LOADK     R22 3        ; R22 := 3.000000
538 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
539 [-]: NOT       R20 R20      ; R20 := not R20
540 [-]: JMP       543          ; PC := 543
541 [-]: LOADBOOL  R20 0 1      ; R20 := false; PC := 542
542 [-]: LOADBOOL  R20 1 0      ; R20 := true
543 [-]: TEST      R20 0        ; if not R20 then PC := 556
544 [-]: JMP       556          ; PC := 556
545 [-]: GETGLOBAL R21 K7       ; R21 := mSelected
546 [-]: GETTABLE  R21 R21 K8   ; R21 := R21["Element"]
547 [-]: GETTABLE  R21 R21 K9   ; R21 := R21["LoadOutType"]
548 [-]: EQ        1 R21 K84    ; if R21 == 6.000000 then PC := 555
549 [-]: JMP       555          ; PC := 555
550 [-]: GETGLOBAL R21 K7       ; R21 := mSelected
551 [-]: GETTABLE  R21 R21 K8   ; R21 := R21["Element"]
552 [-]: GETTABLE  R21 R21 K9   ; R21 := R21["LoadOutType"]
553 [-]: EQ        0 R21 K44    ; if R21 ~= 2.000000 then PC := 556
554 [-]: JMP       556          ; PC := 556
555 [-]: LOADBOOL  R20 0 0      ; R20 := false
556 [-]: TEST      R20 0        ; if not R20 then PC := 568
557 [-]: JMP       568          ; PC := 568
558 [-]: GETGLOBAL R21 K6       ; R21 := 0x7b998233
559 [-]: GETGLOBAL R22 K7       ; R22 := mSelected
560 [-]: GETTABLE  R22 R22 K8   ; R22 := R22["Element"]
561 [-]: CALL      R21 2 2      ; R21 := R21(R22)
562 [-]: TEST      R21 1        ; if R21 then PC := 568
563 [-]: JMP       568          ; PC := 568
564 [-]: GETGLOBAL R21 K7       ; R21 := mSelected
565 [-]: GETTABLE  R21 R21 K8   ; R21 := R21["Element"]
566 [-]: SETTABLE  R21 K85 R19  ; R21["gildRestrictedSlots"] := R19
567 [-]: JMP       571          ; PC := 571
568 [-]: GETGLOBAL R21 K7       ; R21 := mSelected
569 [-]: GETTABLE  R21 R21 K8   ; R21 := R21["Element"]
570 [-]: SETTABLE  R21 K85 K25  ; R21["gildRestrictedSlots"] := nil
571 [-]: GETUPVAL  R21 U3       ; R21 := U3
572 [-]: GETGLOBAL R22 K7       ; R22 := mSelected
573 [-]: GETTABLE  R22 R22 K8   ; R22 := R22["Element"]
574 [-]: GETTABLE  R22 R22 K47  ; R22 := R22["Type"]
575 [-]: MOVE      R23 R4       ; R23 := R4
576 [-]: MOVE      R24 R3       ; R24 := R3
577 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
578 [-]: GETGLOBAL R22 K83      ; R22 := 0xc8802016
579 [-]: MOVE      R23 R21      ; R23 := R21
580 [-]: CALL      R22 2 4      ; R22,R23,R24 := R22(R23)
581 [-]: JMP       839          ; PC := 839
582 [-]: GETGLOBAL R27 K83      ; R27 := 0xc8802016
583 [-]: MOVE      R28 R1       ; R28 := R1
584 [-]: CALL      R27 2 4      ; R27,R28,R29 := R27(R28)
585 [-]: JMP       837          ; PC := 837
586 [-]: NEWTABLE  R32 0 0      ; R32 := {}
587 [-]: GETUPVAL  R33 U4       ; R33 := U4
588 [-]: GETTABLE  R34 R31 K86  ; R34 := R31["mStoreItem"]
589 [-]: CALL      R33 2 2      ; R33 := R33(R34)
590 [-]: TEST      R33 0        ; if not R33 then PC := 699
591 [-]: JMP       699          ; PC := 699
592 [-]: GETTABLE  R33 R31 K86  ; R33 := R31["mStoreItem"]
593 [-]: SELF      R33 R33 K87  ; R34 := R33; R33 := R33[0x29ba1d84]
594 [-]: CALL      R33 2 2      ; R33 := R33(R34)
595 [-]: GETGLOBAL R34 K6       ; R34 := 0x7b998233
596 [-]: MOVE      R35 R33      ; R35 := R33
597 [-]: CALL      R34 2 2      ; R34 := R34(R35)
598 [-]: TEST      R34 1        ; if R34 then PC := 617
599 [-]: JMP       617          ; PC := 617
600 [-]: SELF      R34 R26 K17  ; R35 := R26; R34 := R26[0xf2deaf69]
601 [-]: GETGLOBAL R36 K88      ; R36 := gLotusWeaponType
602 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
603 [-]: TEST      R34 0        ; if not R34 then PC := 622
604 [-]: JMP       622          ; PC := 622
605 [-]: SELF      R34 R26 K89  ; R35 := R26; R34 := R26[0x4be2c5e3]
606 [-]: MOVE      R36 R33      ; R36 := R33
607 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
608 [-]: TEST      R34 1        ; if R34 then PC := 617
609 [-]: JMP       617          ; PC := 617
610 [-]: SELF      R34 R26 K89  ; R35 := R26; R34 := R26[0x4be2c5e3]
611 [-]: GETTABLE  R36 R31 K86  ; R36 := R31["mStoreItem"]
612 [-]: SELF      R36 R36 K90  ; R37 := R36; R36 := R36[0xb6525e9d]
613 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
614 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
615 [-]: TEST      R34 0        ; if not R34 then PC := 622
616 [-]: JMP       622          ; PC := 622
617 [-]: GETGLOBAL R34 K61      ; R34 := 0x33bdd652
618 [-]: GETTABLE  R34 R34 K62  ; R34 := R34[0x23d5322f]
619 [-]: MOVE      R35 R32      ; R35 := R32
620 [-]: MOVE      R36 R31      ; R36 := R31
621 [-]: CALL      R34 3 1      ; R34(R35,R36)
622 [-]: GETTABLE  R34 R31 K91  ; R34 := R31["mPurchased"]
623 [-]: TEST      R34 1        ; if R34 then PC := 699
624 [-]: JMP       699          ; PC := 699
625 [-]: GETTABLE  R34 R31 K86  ; R34 := R31["mStoreItem"]
626 [-]: SELF      R34 R34 K92  ; R35 := R34; R34 := R34[0x7b060e36]
627 [-]: CALL      R34 2 2      ; R34 := R34(R35)
628 [-]: LOADBOOL  R35 1 0      ; R35 := true
629 [-]: GETGLOBAL R36 K83      ; R36 := 0xc8802016
630 [-]: MOVE      R37 R34      ; R37 := R34
631 [-]: CALL      R36 2 4      ; R36,R37,R38 := R36(R37)
632 [-]: JMP       697          ; PC := 697
633 [-]: GETGLOBAL R41 K6       ; R41 := 0x7b998233
634 [-]: GETTABLE  R42 R40 K93  ; R42 := R40["mTypeName"]
635 [-]: CALL      R41 2 2      ; R41 := R41(R42)
636 [-]: TEST      R41 1        ; if R41 then PC := 697
637 [-]: JMP       697          ; PC := 697
638 [-]: SELF      R41 R26 K17  ; R42 := R26; R41 := R26[0xf2deaf69]
639 [-]: GETTABLE  R43 R40 K93  ; R43 := R40["mTypeName"]
640 [-]: SELF      R43 R43 K87  ; R44 := R43; R43 := R43[0x29ba1d84]
641 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
642 [-]: CALL      R41 0 2      ; R41 := R41(R42,...)
643 [-]: TEST      R41 0        ; if not R41 then PC := 697
644 [-]: JMP       697          ; PC := 697
645 [-]: NEWTABLE  R41 0 0      ; R41 := {}
646 [-]: GETGLOBAL R42 K94      ; R42 := 0xcfc01047
647 [-]: MOVE      R43 R31      ; R43 := R31
648 [-]: CALL      R42 2 4      ; R42,R43,R44 := R42(R43)
649 [-]: JMP       651          ; PC := 651
650 [-]: SETTABLE  R41 R45 R46  ; R41[R45] := R46
651 [-]: TFORLOOP  R42 2        ; R45,R46 :=  R42(R43,R44); if R45 ~= nil then begin PC = 650; R44 := R45 end
652 [-]: JMP       650          ; PC := 650
653 [-]: GETTABLE  R47 R40 K93  ; R47 := R40["mTypeName"]
654 [-]: SELF      R47 R47 K95  ; R48 := R47; R47 := R47[0xf278f8a1]
655 [-]: CALL      R47 2 2      ; R47 := R47(R48)
656 [-]: SETTABLE  R41 K47 R47  ; R41["Type"] := R47
657 [-]: GETTABLE  R47 R40 K93  ; R47 := R40["mTypeName"]
658 [-]: SETTABLE  R41 K96 R47  ; R41["CustomizationType"] := R47
659 [-]: GETTABLE  R47 R31 K97  ; R47 := R31["SetItems"]
660 [-]: EQ        0 R47 K25    ; if R47 ~= nil then PC := 664
661 [-]: JMP       664          ; PC := 664
662 [-]: NEWTABLE  R47 0 0      ; R47 := {}
663 [-]: SETTABLE  R31 K97 R47  ; R31["SetItems"] := R47
664 [-]: NEWTABLE  R47 1 0      ; R47 := {}
665 [-]: MOVE      R48 R31      ; R48 := R31
666 [-]: SETLIST   R47 1 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
667 [-]: SETTABLE  R41 K97 R47  ; R41["SetItems"] := R47
668 [-]: GETGLOBAL R47 K83      ; R47 := 0xc8802016
669 [-]: GETTABLE  R48 R31 K97  ; R48 := R31["SetItems"]
670 [-]: CALL      R47 2 4      ; R47,R48,R49 := R47(R48)
671 [-]: JMP       682          ; PC := 682
672 [-]: GETGLOBAL R52 K61      ; R52 := 0x33bdd652
673 [-]: GETTABLE  R52 R52 K62  ; R52 := R52[0x23d5322f]
674 [-]: GETTABLE  R53 R51 K97  ; R53 := R51["SetItems"]
675 [-]: MOVE      R54 R41      ; R54 := R41
676 [-]: CALL      R52 3 1      ; R52(R53,R54)
677 [-]: GETGLOBAL R52 K61      ; R52 := 0x33bdd652
678 [-]: GETTABLE  R52 R52 K62  ; R52 := R52[0x23d5322f]
679 [-]: GETTABLE  R53 R41 K97  ; R53 := R41["SetItems"]
680 [-]: MOVE      R54 R51      ; R54 := R51
681 [-]: CALL      R52 3 1      ; R52(R53,R54)
682 [-]: TFORLOOP  R47 2        ; R50,R51 :=  R47(R48,R49); if R50 ~= nil then begin PC = 672; R49 := R50 end
683 [-]: JMP       672          ; PC := 672
684 [-]: GETGLOBAL R52 K61      ; R52 := 0x33bdd652
685 [-]: GETTABLE  R52 R52 K62  ; R52 := R52[0x23d5322f]
686 [-]: GETTABLE  R53 R31 K97  ; R53 := R31["SetItems"]
687 [-]: MOVE      R54 R41      ; R54 := R41
688 [-]: CALL      R52 3 1      ; R52(R53,R54)
689 [-]: TEST      R35 0        ; if not R35 then PC := 697
690 [-]: JMP       697          ; PC := 697
691 [-]: GETGLOBAL R52 K61      ; R52 := 0x33bdd652
692 [-]: GETTABLE  R52 R52 K62  ; R52 := R52[0x23d5322f]
693 [-]: MOVE      R53 R32      ; R53 := R32
694 [-]: MOVE      R54 R41      ; R54 := R41
695 [-]: CALL      R52 3 1      ; R52(R53,R54)
696 [-]: LOADBOOL  R35 0 0      ; R35 := false
697 [-]: TFORLOOP  R36 2        ; R39,R40 :=  R36(R37,R38); if R39 ~= nil then begin PC = 633; R38 := R39 end
698 [-]: JMP       633          ; PC := 633
699 [-]: LOADK     R52 0        ; R52 := 0.000000
700 [-]: LOADK     R53 20       ; R53 := 20.000000
701 [-]: LOADK     R54 1        ; R54 := 1.000000
702 [-]: FORPREP   R52 836      ; R52 -= R54; PC := 836
703 [-]: LOADBOOL  R56 0 0      ; R56 := false
704 [-]: TEST      R20 0        ; if not R20 then PC := 724
705 [-]: JMP       724          ; PC := 724
706 [-]: GETGLOBAL R57 K83      ; R57 := 0xc8802016
707 [-]: MOVE      R58 R19      ; R58 := R19
708 [-]: CALL      R57 2 4      ; R57,R58,R59 := R57(R58)
709 [-]: JMP       722          ; PC := 722
710 [-]: EQ        0 R55 R61    ; if R55 ~= R61 then PC := 722
711 [-]: JMP       722          ; PC := 722
712 [-]: LOADBOOL  R56 1 0      ; R56 := true
713 [-]: GETTABLE  R62 R12 R55  ; R62 := R12[R55]
714 [-]: EQ        0 R62 K25    ; if R62 ~= nil then PC := 724
715 [-]: JMP       724          ; PC := 724
716 [-]: MOVE      R62 R13      ; R62 := R13
717 [-]: MOVE      R63 R55      ; R63 := R55
718 [-]: CALL      R62 2 1      ; R62(R63)
719 [-]: GETTABLE  R62 R12 R55  ; R62 := R12[R55]
720 [-]: SETTABLE  R62 K98 K99  ; R62["Enabled"] := false
721 [-]: JMP       724          ; PC := 724
722 [-]: TFORLOOP  R57 2        ; R60,R61 :=  R57(R58,R59); if R60 ~= nil then begin PC = 710; R59 := R60 end
723 [-]: JMP       710          ; PC := 710
724 [-]: TEST      R56 1        ; if R56 then PC := 836
725 [-]: JMP       836          ; PC := 836
726 [-]: GETGLOBAL R62 K83      ; R62 := 0xc8802016
727 [-]: MOVE      R63 R32      ; R63 := R32
728 [-]: CALL      R62 2 4      ; R62,R63,R64 := R62(R63)
729 [-]: JMP       834          ; PC := 834
730 [-]: GETGLOBAL R67 K100     ; R67 := 0xce225efa
731 [-]: LOADK     R68 0        ; R68 := 0.000000
732 [-]: CALL      R67 2 1      ; R67(R68)
733 [-]: GETUPVAL  R67 U5       ; R67 := U5
734 [-]: MOVE      R68 R66      ; R68 := R66
735 [-]: MOVE      R69 R55      ; R69 := R55
736 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
737 [-]: TEST      R67 0        ; if not R67 then PC := 834
738 [-]: JMP       834          ; PC := 834
739 [-]: GETTABLE  R67 R66 K86  ; R67 := R66["mStoreItem"]
740 [-]: SELF      R67 R67 K101 ; R68 := R67; R67 := R67[0x2e649c02]
741 [-]: MOVE      R69 R11      ; R69 := R11
742 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
743 [-]: TEST      R67 0        ; if not R67 then PC := 834
744 [-]: JMP       834          ; PC := 834
745 [-]: GETGLOBAL R67 K21      ; R67 := mCosmeticsLabels
746 [-]: GETTABLE  R67 R67 R55  ; R67 := R67[R55]
747 [-]: EQ        1 R67 K25    ; if R67 == nil then PC := 834
748 [-]: JMP       834          ; PC := 834
749 [-]: GETTABLE  R67 R12 R55  ; R67 := R12[R55]
750 [-]: EQ        0 R67 K25    ; if R67 ~= nil then PC := 755
751 [-]: JMP       755          ; PC := 755
752 [-]: MOVE      R67 R13      ; R67 := R13
753 [-]: MOVE      R68 R55      ; R68 := R55
754 [-]: CALL      R67 2 1      ; R67(R68)
755 [-]: GETTABLE  R67 R12 R55  ; R67 := R12[R55]
756 [-]: GETTABLE  R67 R67 K34  ; R67 := R67["PetTrait"]
757 [-]: TEST      R67 0        ; if not R67 then PC := 768
758 [-]: JMP       768          ; PC := 768
759 [-]: GETTABLE  R67 R12 R55  ; R67 := R12[R55]
760 [-]: GETTABLE  R67 R67 K34  ; R67 := R67["PetTrait"]
761 [-]: EQ        1 R67 K35    ; if R67 == "mFurPattern" then PC := 766
762 [-]: JMP       766          ; PC := 766
763 [-]: GETTABLE  R67 R66 K91  ; R67 := R66["mPurchased"]
764 [-]: NOT       R67 R67      ; R67 := not R67
765 [-]: JMP       768          ; PC := 768
766 [-]: LOADBOOL  R67 0 1      ; R67 := false; PC := 767
767 [-]: LOADBOOL  R67 1 0      ; R67 := true
768 [-]: TEST      R67 1        ; if R67 then PC := 808
769 [-]: JMP       808          ; PC := 808
770 [-]: GETTABLE  R68 R12 R55  ; R68 := R12[R55]
771 [-]: GETTABLE  R68 R68 K34  ; R68 := R68["PetTrait"]
772 [-]: TEST      R68 0        ; if not R68 then PC := 808
773 [-]: JMP       808          ; PC := 808
774 [-]: GETTABLE  R68 R12 R55  ; R68 := R12[R55]
775 [-]: GETTABLE  R68 R68 K34  ; R68 := R68["PetTrait"]
776 [-]: EQ        0 R68 K35    ; if R68 ~= "mFurPattern" then PC := 808
777 [-]: JMP       808          ; PC := 808
778 [-]: GETTABLE  R68 R66 K86  ; R68 := R66["mStoreItem"]
779 [-]: SELF      R68 R68 K87  ; R69 := R68; R68 := R68[0x29ba1d84]
780 [-]: CALL      R68 2 2      ; R68 := R68(R69)
781 [-]: GETGLOBAL R69 K6       ; R69 := 0x7b998233
782 [-]: MOVE      R70 R68      ; R70 := R68
783 [-]: CALL      R69 2 2      ; R69 := R69(R70)
784 [-]: TEST      R69 1        ; if R69 then PC := 808
785 [-]: JMP       808          ; PC := 808
786 [-]: SELF      R69 R68 K17  ; R70 := R68; R69 := R68[0xf2deaf69]
787 [-]: GETGLOBAL R71 K102     ; R71 := 0x2bc8b4f4
788 [-]: CALL      R69 3 2      ; R69 := R69(R70,R71)
789 [-]: TEST      R69 0        ; if not R69 then PC := 808
790 [-]: JMP       808          ; PC := 808
791 [-]: GETGLOBAL R69 K19      ; R69 := 0x25d99d89
792 [-]: SELF      R69 R69 K103 ; R70 := R69; R69 := R69[0x62c81b76]
793 [-]: CALL      R69 2 2      ; R69 := R69(R70)
794 [-]: GETTABLE  R69 R69 K104 ; R69 := R69["mKubrowPetDetails"]
795 [-]: GETTABLE  R69 R69 K105 ; R69 := R69["mDominantTraits"]
796 [-]: GETTABLE  R69 R69 K106 ; R69 := R69["mBodyType"]
797 [-]: GETGLOBAL R70 K6       ; R70 := 0x7b998233
798 [-]: MOVE      R71 R69      ; R71 := R69
799 [-]: CALL      R70 2 2      ; R70 := R70(R71)
800 [-]: TEST      R70 1        ; if R70 then PC := 808
801 [-]: JMP       808          ; PC := 808
802 [-]: SELF      R70 R69 K17  ; R71 := R69; R70 := R69[0xf2deaf69]
803 [-]: GETGLOBAL R72 K107     ; R72 := 0xcd412bda
804 [-]: CALL      R70 3 2      ; R70 := R70(R71,R72)
805 [-]: TEST      R70 0        ; if not R70 then PC := 808
806 [-]: JMP       808          ; PC := 808
807 [-]: LOADBOOL  R67 1 0      ; R67 := true
808 [-]: TEST      R67 0        ; if not R67 then PC := 811
809 [-]: JMP       811          ; PC := 811
810 [-]: JMP       834          ; PC := 834
811 [-]: NEWTABLE  R70 0 0      ; R70 := {}
812 [-]: GETGLOBAL R71 K94      ; R71 := 0xcfc01047
813 [-]: MOVE      R72 R66      ; R72 := R66
814 [-]: CALL      R71 2 4      ; R71,R72,R73 := R71(R72)
815 [-]: JMP       817          ; PC := 817
816 [-]: SETTABLE  R70 R74 R75  ; R70[R74] := R75
817 [-]: TFORLOOP  R71 2        ; R74,R75 :=  R71(R72,R73); if R74 ~= nil then begin PC = 816; R73 := R74 end
818 [-]: JMP       816          ; PC := 816
819 [-]: SETTABLE  R66 K108 R55 ; R66["CosmeticSlot"] := R55
820 [-]: SETTABLE  R70 K108 R55 ; R70["CosmeticSlot"] := R55
821 [-]: GETTABLE  R76 R12 R55  ; R76 := R12[R55]
822 [-]: GETTABLE  R76 R76 K39  ; R76 := R76["Attribute"]
823 [-]: TEST      R76 0        ; if not R76 then PC := 828
824 [-]: JMP       828          ; PC := 828
825 [-]: GETTABLE  R76 R12 R55  ; R76 := R12[R55]
826 [-]: GETTABLE  R76 R76 K39  ; R76 := R76["Attribute"]
827 [-]: SETTABLE  R70 K39 R76  ; R70["Attribute"] := R76
828 [-]: GETGLOBAL R76 K61      ; R76 := 0x33bdd652
829 [-]: GETTABLE  R76 R76 K62  ; R76 := R76[0x23d5322f]
830 [-]: GETTABLE  R77 R12 R55  ; R77 := R12[R55]
831 [-]: GETTABLE  R77 R77 K109 ; R77 := R77["Items"]
832 [-]: MOVE      R78 R70      ; R78 := R70
833 [-]: CALL      R76 3 1      ; R76(R77,R78)
834 [-]: TFORLOOP  R62 2        ; R65,R66 :=  R62(R63,R64); if R65 ~= nil then begin PC = 730; R64 := R65 end
835 [-]: JMP       730          ; PC := 730
836 [-]: FORLOOP   R52 703      ; R52 += R54; if R52 <= R53 then begin PC := 703; R55 := R52 end
837 [-]: TFORLOOP  R27 2        ; R30,R31 :=  R27(R28,R29); if R30 ~= nil then begin PC = 586; R29 := R30 end
838 [-]: JMP       586          ; PC := 586
839 [-]: TFORLOOP  R22 2        ; R25,R26 :=  R22(R23,R24); if R25 ~= nil then begin PC = 582; R24 := R25 end
840 [-]: JMP       582          ; PC := 582
841 [-]: LOADK     R76 0        ; R76 := 0.000000
842 [-]: LOADK     R77 20       ; R77 := 20.000000
843 [-]: LOADK     R78 1        ; R78 := 1.000000
844 [-]: FORPREP   R76 1154     ; R76 -= R78; PC := 1154
845 [-]: GETGLOBAL R80 K100     ; R80 := 0xce225efa
846 [-]: LOADK     R81 0        ; R81 := 0.000000
847 [-]: CALL      R80 2 1      ; R80(R81)
848 [-]: GETTABLE  R80 R12 R79  ; R80 := R12[R79]
849 [-]: EQ        1 R80 K25    ; if R80 == nil then PC := 1154
850 [-]: JMP       1154         ; PC := 1154
851 [-]: GETGLOBAL R80 K6       ; R80 := 0x7b998233
852 [-]: GETGLOBAL R81 K19      ; R81 := 0x25d99d89
853 [-]: CALL      R80 2 2      ; R80 := R80(R81)
854 [-]: TEST      R80 1        ; if R80 then PC := 1154
855 [-]: JMP       1154         ; PC := 1154
856 [-]: GETTABLE  R80 R12 R79  ; R80 := R12[R79]
857 [-]: GETTABLE  R80 R80 K34  ; R80 := R80["PetTrait"]
858 [-]: TEST      R80 0        ; if not R80 then PC := 980
859 [-]: JMP       980          ; PC := 980
860 [-]: NEWTABLE  R80 0 7      ; R80 := {}
861 [-]: SETTABLE  R80 K108 R79 ; R80["CosmeticSlot"] := R79
862 [-]: SETTABLE  R80 K47 K25  ; R80["Type"] := nil
863 [-]: SETTABLE  R80 K110 K111; R80["Name"] := "/Lotus/Language/Menu/Cosmetics_None"
864 [-]: SETTABLE  R80 K112 K113; R80["mEmpty"] := true
865 [-]: SETTABLE  R80 K91 K113 ; R80["mPurchased"] := true
866 [-]: NEWTABLE  R81 0 1      ; R81 := {}
867 [-]: SETTABLE  R81 K115 K5  ; R81["UID"] := ""
868 [-]: SETTABLE  R80 K114 R81 ; R80["mPurchasedInfo"] := R81
869 [-]: UNM       R81 R79      ; R81 := ^ R79
870 [-]: SETTABLE  R80 K116 R81 ; R80["mSortId"] := R81
871 [-]: TEST      R5 0         ; if not R5 then PC := 913
872 [-]: JMP       913          ; PC := 913
873 [-]: GETTABLE  R81 R12 R79  ; R81 := R12[R79]
874 [-]: GETTABLE  R81 R81 K39  ; R81 := R81["Attribute"]
875 [-]: TEST      R81 0        ; if not R81 then PC := 890
876 [-]: JMP       890          ; PC := 890
877 [-]: GETTABLE  R81 R12 R79  ; R81 := R12[R79]
878 [-]: GETTABLE  R81 R81 K39  ; R81 := R81["Attribute"]
879 [-]: SETTABLE  R80 K39 R81  ; R80["Attribute"] := R81
880 [-]: SELF      R81 R11 K118 ; R82 := R11; R81 := R11[0x6199aec6]
881 [-]: GETTABLE  R83 R80 K39  ; R83 := R80["Attribute"]
882 [-]: GETGLOBAL R84 K13      ; R84 := _T
883 [-]: GETTABLE  R84 R84 K119 ; R84 := R84["SpecialSuitAvatar"]
884 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
885 [-]: SELF      R81 R81 K120 ; R82 := R81; R81 := R81[0xa5d5c8f6]
886 [-]: CALL      R81 2 2      ; R81 := R81(R82)
887 [-]: SETTABLE  R80 K117 R81 ; R80["PetTintColor"] := R81
888 [-]: SETTABLE  R80 K110 K121; R80["Name"] := "/Lotus/Language/Menu/Cosmetics_NaturalColor"
889 [-]: JMP       965          ; PC := 965
890 [-]: LEN       R81 R21      ; R81 := # R21
891 [-]: GETTABLE  R81 R21 R81  ; R81 := R21[R81]
892 [-]: SELF      R82 R81 K122 ; R83 := R81; R82 := R81[0x0911ae7c]
893 [-]: MOVE      R84 R79      ; R84 := R79
894 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
895 [-]: GETGLOBAL R83 K83      ; R83 := 0xc8802016
896 [-]: GETTABLE  R84 R12 R79  ; R84 := R12[R79]
897 [-]: GETTABLE  R84 R84 K109 ; R84 := R84["Items"]
898 [-]: CALL      R83 2 4      ; R83,R84,R85 := R83(R84)
899 [-]: JMP       907          ; PC := 907
900 [-]: GETTABLE  R88 R87 K47  ; R88 := R87["Type"]
901 [-]: EQ        0 R88 R82    ; if R88 ~= R82 then PC := 907
902 [-]: JMP       907          ; PC := 907
903 [-]: SETTABLE  R87 K123 K113; R87["mDefault"] := true
904 [-]: SETTABLE  R87 K91 K113 ; R87["mPurchased"] := true
905 [-]: LOADNIL   R80 R80      ; R80 := nil
906 [-]: JMP       909          ; PC := 909
907 [-]: TFORLOOP  R83 2        ; R86,R87 :=  R83(R84,R85); if R86 ~= nil then begin PC = 900; R85 := R86 end
908 [-]: JMP       900          ; PC := 900
909 [-]: TEST      R80 0        ; if not R80 then PC := 965
910 [-]: JMP       965          ; PC := 965
911 [-]: SETTABLE  R80 K47 R82  ; R80["Type"] := R82
912 [-]: JMP       965          ; PC := 965
913 [-]: GETGLOBAL R88 K19      ; R88 := 0x25d99d89
914 [-]: SELF      R88 R88 K103 ; R89 := R88; R88 := R88[0x62c81b76]
915 [-]: CALL      R88 2 2      ; R88 := R88(R89)
916 [-]: GETTABLE  R88 R88 K104 ; R88 := R88["mKubrowPetDetails"]
917 [-]: GETTABLE  R88 R88 K105 ; R88 := R88["mDominantTraits"]
918 [-]: GETGLOBAL R89 K68      ; R89 := 0xb009bbc6
919 [-]: GETTABLE  R90 R12 R79  ; R90 := R12[R79]
920 [-]: GETTABLE  R90 R90 K34  ; R90 := R90["PetTrait"]
921 [-]: GETTABLE  R90 R88 R90  ; R90 := R88[R90]
922 [-]: CALL      R89 2 2      ; R89 := R89(R90)
923 [-]: GETTABLE  R90 R12 R79  ; R90 := R12[R79]
924 [-]: GETTABLE  R90 R90 K39  ; R90 := R90["Attribute"]
925 [-]: TEST      R90 0        ; if not R90 then PC := 941
926 [-]: JMP       941          ; PC := 941
927 [-]: GETTABLE  R90 R12 R79  ; R90 := R12[R79]
928 [-]: GETTABLE  R90 R90 K39  ; R90 := R90["Attribute"]
929 [-]: SETTABLE  R80 K39 R90  ; R80["Attribute"] := R90
930 [-]: TEST      R89 0        ; if not R89 then PC := 938
931 [-]: JMP       938          ; PC := 938
932 [-]: SELF      R90 R89 K124 ; R91 := R89; R90 := R89[0x5d10207d]
933 [-]: CALL      R90 2 2      ; R90 := R90(R91)
934 [-]: SELF      R90 R90 K120 ; R91 := R90; R90 := R90[0xa5d5c8f6]
935 [-]: CALL      R90 2 2      ; R90 := R90(R91)
936 [-]: SETTABLE  R80 K117 R90 ; R80["PetTintColor"] := R90
937 [-]: JMP       939          ; PC := 939
938 [-]: SETTABLE  R80 K117 K24 ; R80["PetTintColor"] := 0.000000
939 [-]: SETTABLE  R80 K110 K121; R80["Name"] := "/Lotus/Language/Menu/Cosmetics_NaturalColor"
940 [-]: JMP       965          ; PC := 965
941 [-]: GETGLOBAL R90 K68      ; R90 := 0xb009bbc6
942 [-]: GETTABLE  R91 R12 R79  ; R91 := R12[R79]
943 [-]: GETTABLE  R91 R91 K34  ; R91 := R91["PetTrait"]
944 [-]: GETTABLE  R91 R88 R91  ; R91 := R88[R91]
945 [-]: CALL      R90 2 2      ; R90 := R90(R91)
946 [-]: SETTABLE  R80 K47 R90  ; R80["Type"] := R90
947 [-]: GETTABLE  R90 R80 K114 ; R90 := R80["mPurchasedInfo"]
948 [-]: GETTABLE  R91 R80 K47  ; R91 := R80["Type"]
949 [-]: SELF      R91 R91 K125 ; R92 := R91; R91 := R91[0xed4e0128]
950 [-]: CALL      R91 2 2      ; R91 := R91(R92)
951 [-]: SETTABLE  R90 K115 R91 ; R90["UID"] := R91
952 [-]: GETTABLE  R90 R80 K47  ; R90 := R80["Type"]
953 [-]: SELF      R90 R90 K126 ; R91 := R90; R90 := R90[0xd3a9d01f]
954 [-]: CALL      R90 2 2      ; R90 := R90(R91)
955 [-]: SELF      R90 R90 K127 ; R91 := R90; R90 := R90[0x6d604ba7]
956 [-]: CALL      R90 2 2      ; R90 := R90(R91)
957 [-]: SETTABLE  R80 K110 R90 ; R80["Name"] := R90
958 [-]: GETUPVAL  R90 U6       ; R90 := U6
959 [-]: GETTABLE  R90 R90 K130 ; R90 := R90[0x056dcf06]
960 [-]: GETTABLE  R91 R80 K47  ; R91 := R80["Type"]
961 [-]: LOADBOOL  R92 1 0      ; R92 := true
962 [-]: CALL      R90 3 3      ; R90,R91 := R90(R91,R92)
963 [-]: SETTABLE  R80 K129 R91 ; R80["Themed"] := R91
964 [-]: SETTABLE  R80 K128 R90 ; R80["Icon"] := R90
965 [-]: TEST      R80 0        ; if not R80 then PC := 1154
966 [-]: JMP       1154         ; PC := 1154
967 [-]: GETGLOBAL R90 K0       ; R90 := 0xae91e43b
968 [-]: SELF      R90 R90 K131 ; R91 := R90; R90 := R90[0x42b04007]
969 [-]: GETTABLE  R92 R80 K110 ; R92 := R80["Name"]
970 [-]: LOADBOOL  R93 0 0      ; R93 := false
971 [-]: CALL      R90 4 2      ; R90 := R90(R91,R92,R93)
972 [-]: SETTABLE  R80 K110 R90 ; R80["Name"] := R90
973 [-]: GETGLOBAL R90 K61      ; R90 := 0x33bdd652
974 [-]: GETTABLE  R90 R90 K62  ; R90 := R90[0x23d5322f]
975 [-]: GETTABLE  R91 R12 R79  ; R91 := R12[R79]
976 [-]: GETTABLE  R91 R91 K109 ; R91 := R91["Items"]
977 [-]: MOVE      R92 R80      ; R92 := R80
978 [-]: CALL      R90 3 1      ; R90(R91,R92)
979 [-]: JMP       1154         ; PC := 1154
980 [-]: LOADBOOL  R90 1 0      ; R90 := true
981 [-]: TEST      R20 0        ; if not R20 then PC := 992
982 [-]: JMP       992          ; PC := 992
983 [-]: GETGLOBAL R91 K83      ; R91 := 0xc8802016
984 [-]: MOVE      R92 R19      ; R92 := R19
985 [-]: CALL      R91 2 4      ; R91,R92,R93 := R91(R92)
986 [-]: JMP       990          ; PC := 990
987 [-]: EQ        0 R79 R95    ; if R79 ~= R95 then PC := 990
988 [-]: JMP       990          ; PC := 990
989 [-]: LOADBOOL  R90 0 0      ; R90 := false
990 [-]: TFORLOOP  R91 2        ; R94,R95 :=  R91(R92,R93); if R94 ~= nil then begin PC = 987; R93 := R94 end
991 [-]: JMP       987          ; PC := 987
992 [-]: TEST      R90 0        ; if not R90 then PC := 1154
993 [-]: JMP       1154         ; PC := 1154
994 [-]: LEN       R96 R21      ; R96 := # R21
995 [-]: GETTABLE  R96 R21 R96  ; R96 := R21[R96]
996 [-]: GETGLOBAL R97 K7       ; R97 := mSelected
997 [-]: GETTABLE  R97 R97 K8   ; R97 := R97["Element"]
998 [-]: GETTABLE  R97 R97 K53  ; R97 := R97["Customization"]
999 [-]: SELF      R97 R97 K66  ; R98 := R97; R97 := R97[0x2540510f]
1000 [-]: MOVE      R99 R79      ; R99 := R79
1001 [-]: CALL      R97 3 2      ; R97 := R97(R98,R99)
1002 [-]: SELF      R98 R96 K122 ; R99 := R96; R98 := R96[0x0911ae7c]
1003 [-]: MOVE      R100 R79     ; R100 := R79
1004 [-]: CALL      R98 3 2      ; R98 := R98(R99,R100)
1005 [-]: LOADK     R99 0        ; R99 := 0.000000
1006 [-]: LOADK     R100 20      ; R100 := 20.000000
1007 [-]: LOADK     R101 1       ; R101 := 1.000000
1008 [-]: FORPREP   R99 1042     ; R99 -= R101; PC := 1042
1009 [-]: GETGLOBAL R103 K7      ; R103 := mSelected
1010 [-]: GETTABLE  R103 R103 K8 ; R103 := R103["Element"]
1011 [-]: GETTABLE  R103 R103 K53; R103 := R103["Customization"]
1012 [-]: SELF      R103 R103 K66; R104 := R103; R103 := R103[0x2540510f]
1013 [-]: MOVE      R105 R102    ; R105 := R102
1014 [-]: CALL      R103 3 2     ; R103 := R103(R104,R105)
1015 [-]: GETGLOBAL R104 K6      ; R104 := 0x7b998233
1016 [-]: MOVE      R105 R103    ; R105 := R103
1017 [-]: CALL      R104 2 2     ; R104 := R104(R105)
1018 [-]: TEST      R104 1       ; if R104 then PC := 1042
1019 [-]: JMP       1042         ; PC := 1042
1020 [-]: SELF      R104 R103 K17; R105 := R103; R104 := R103[0xf2deaf69]
1021 [-]: GETGLOBAL R106 K132    ; R106 := gLotusSuitCustomizationType
1022 [-]: CALL      R104 3 2     ; R104 := R104(R105,R106)
1023 [-]: TEST      R104 0       ; if not R104 then PC := 1042
1024 [-]: JMP       1042         ; PC := 1042
1025 [-]: GETGLOBAL R104 K68     ; R104 := 0xb009bbc6
1026 [-]: MOVE      R105 R103    ; R105 := R103
1027 [-]: CALL      R104 2 2     ; R104 := R104(R105)
1028 [-]: GETGLOBAL R105 K6      ; R105 := 0x7b998233
1029 [-]: MOVE      R106 R104    ; R106 := R104
1030 [-]: CALL      R105 2 2     ; R105 := R105(R106)
1031 [-]: TEST      R105 1       ; if R105 then PC := 1042
1032 [-]: JMP       1042         ; PC := 1042
1033 [-]: SELF      R105 R104 K133; R106 := R104; R105 := R104[0x68eb5c84]
1034 [-]: MOVE      R107 R79     ; R107 := R79
1035 [-]: CALL      R105 3 2     ; R105 := R105(R106,R107)
1036 [-]: GETGLOBAL R106 K6      ; R106 := 0x7b998233
1037 [-]: MOVE      R107 R105    ; R107 := R105
1038 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1039 [-]: TEST      R106 1       ; if R106 then PC := 1042
1040 [-]: JMP       1042         ; PC := 1042
1041 [-]: MOVE      R98 R105     ; R98 := R105
1042 [-]: FORLOOP   R99 1009     ; R99 += R101; if R99 <= R100 then begin PC := 1009; R102 := R99 end
1043 [-]: SELF      R106 R96 K134; R107 := R96; R106 := R96[0x81f3a598]
1044 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1045 [-]: GETGLOBAL R107 K6      ; R107 := 0x7b998233
1046 [-]: MOVE      R108 R98     ; R108 := R98
1047 [-]: CALL      R107 2 2     ; R107 := R107(R108)
1048 [-]: TEST      R107 0       ; if not R107 then PC := 1082
1049 [-]: JMP       1082         ; PC := 1082
1050 [-]: TEST      R106 0       ; if not R106 then PC := 1060
1051 [-]: JMP       1060         ; PC := 1060
1052 [-]: GETGLOBAL R107 K31     ; R107 := mLists
1053 [-]: GETTABLE  R107 R107 K32; R107 := R107["mCosmeticsList"]
1054 [-]: GETTABLE  R107 R107 K135; R107 := R107["mCurrLevel"]
1055 [-]: GETGLOBAL R108 K31     ; R108 := mLists
1056 [-]: GETTABLE  R108 R108 K32; R108 := R108["mCosmeticsList"]
1057 [-]: GETTABLE  R108 R108 K136; R108 := R108["HOLSTER_STYLE"]
1058 [-]: EQ        1 R107 R108  ; if R107 == R108 then PC := 1082
1059 [-]: JMP       1082         ; PC := 1082
1060 [-]: GETGLOBAL R107 K61     ; R107 := 0x33bdd652
1061 [-]: GETTABLE  R107 R107 K62; R107 := R107[0x23d5322f]
1062 [-]: GETTABLE  R108 R12 R79 ; R108 := R12[R79]
1063 [-]: GETTABLE  R108 R108 K109; R108 := R108["Items"]
1064 [-]: NEWTABLE  R109 0 7     ; R109 := {}
1065 [-]: SETTABLE  R109 K108 R79; R109["CosmeticSlot"] := R79
1066 [-]: SETTABLE  R109 K47 K25 ; R109["Type"] := nil
1067 [-]: GETGLOBAL R110 K0      ; R110 := 0xae91e43b
1068 [-]: SELF      R110 R110 K131; R111 := R110; R110 := R110[0x42b04007]
1069 [-]: LOADK     R112 K111    ; R112 := "/Lotus/Language/Menu/Cosmetics_None"
1070 [-]: LOADBOOL  R113 0 0     ; R113 := false
1071 [-]: CALL      R110 4 2     ; R110 := R110(R111,R112,R113)
1072 [-]: SETTABLE  R109 K110 R110; R109["Name"] := R110
1073 [-]: SETTABLE  R109 K112 K113; R109["mEmpty"] := true
1074 [-]: SETTABLE  R109 K91 K113; R109["mPurchased"] := true
1075 [-]: NEWTABLE  R110 0 1     ; R110 := {}
1076 [-]: SETTABLE  R110 K115 K5 ; R110["UID"] := ""
1077 [-]: SETTABLE  R109 K114 R110; R109["mPurchasedInfo"] := R110
1078 [-]: UNM       R110 R79     ; R110 := ^ R79
1079 [-]: SETTABLE  R109 K116 R110; R109["mSortId"] := R110
1080 [-]: CALL      R107 3 1     ; R107(R108,R109)
1081 [-]: JMP       1122         ; PC := 1122
1082 [-]: LOADBOOL  R107 0 0     ; R107 := false
1083 [-]: GETGLOBAL R108 K83     ; R108 := 0xc8802016
1084 [-]: GETTABLE  R109 R12 R79 ; R109 := R12[R79]
1085 [-]: GETTABLE  R109 R109 K109; R109 := R109["Items"]
1086 [-]: CALL      R108 2 4     ; R108,R109,R110 := R108(R109)
1087 [-]: JMP       1095         ; PC := 1095
1088 [-]: GETTABLE  R113 R112 K47; R113 := R112["Type"]
1089 [-]: EQ        0 R113 R98   ; if R113 ~= R98 then PC := 1095
1090 [-]: JMP       1095         ; PC := 1095
1091 [-]: SETTABLE  R112 K123 K113; R112["mDefault"] := true
1092 [-]: SETTABLE  R112 K91 K113; R112["mPurchased"] := true
1093 [-]: LOADBOOL  R107 1 0     ; R107 := true
1094 [-]: JMP       1097         ; PC := 1097
1095 [-]: TFORLOOP  R108 2       ; R111,R112 :=  R108(R109,R110); if R111 ~= nil then begin PC = 1088; R110 := R111 end
1096 [-]: JMP       1088         ; PC := 1088
1097 [-]: TEST      R107 1       ; if R107 then PC := 1122
1098 [-]: JMP       1122         ; PC := 1122
1099 [-]: TEST      R106 1       ; if R106 then PC := 1122
1100 [-]: JMP       1122         ; PC := 1122
1101 [-]: GETGLOBAL R113 K61     ; R113 := 0x33bdd652
1102 [-]: GETTABLE  R113 R113 K62; R113 := R113[0x23d5322f]
1103 [-]: GETTABLE  R114 R12 R79 ; R114 := R12[R79]
1104 [-]: GETTABLE  R114 R114 K109; R114 := R114["Items"]
1105 [-]: NEWTABLE  R115 0 7     ; R115 := {}
1106 [-]: SETTABLE  R115 K108 R79; R115["CosmeticSlot"] := R79
1107 [-]: SETTABLE  R115 K47 R98 ; R115["Type"] := R98
1108 [-]: GETGLOBAL R116 K0      ; R116 := 0xae91e43b
1109 [-]: SELF      R116 R116 K131; R117 := R116; R116 := R116[0x42b04007]
1110 [-]: LOADK     R118 K111    ; R118 := "/Lotus/Language/Menu/Cosmetics_None"
1111 [-]: LOADBOOL  R119 0 0     ; R119 := false
1112 [-]: CALL      R116 4 2     ; R116 := R116(R117,R118,R119)
1113 [-]: SETTABLE  R115 K110 R116; R115["Name"] := R116
1114 [-]: SETTABLE  R115 K112 K113; R115["mEmpty"] := true
1115 [-]: SETTABLE  R115 K91 K113; R115["mPurchased"] := true
1116 [-]: NEWTABLE  R116 0 1     ; R116 := {}
1117 [-]: SETTABLE  R116 K115 K5 ; R116["UID"] := ""
1118 [-]: SETTABLE  R115 K114 R116; R115["mPurchasedInfo"] := R116
1119 [-]: UNM       R116 R79     ; R116 := ^ R79
1120 [-]: SETTABLE  R115 K116 R116; R115["mSortId"] := R116
1121 [-]: CALL      R113 3 1     ; R113(R114,R115)
1122 [-]: GETGLOBAL R113 K6      ; R113 := 0x7b998233
1123 [-]: MOVE      R114 R97     ; R114 := R97
1124 [-]: CALL      R113 2 2     ; R113 := R113(R114)
1125 [-]: TEST      R113 1       ; if R113 then PC := 1154
1126 [-]: JMP       1154         ; PC := 1154
1127 [-]: SELF      R113 R97 K17 ; R114 := R97; R113 := R97[0xf2deaf69]
1128 [-]: GETGLOBAL R115 K132    ; R115 := gLotusSuitCustomizationType
1129 [-]: CALL      R113 3 2     ; R113 := R113(R114,R115)
1130 [-]: TEST      R113 0       ; if not R113 then PC := 1154
1131 [-]: JMP       1154         ; PC := 1154
1132 [-]: LOADK     R113 0       ; R113 := 0.000000
1133 [-]: LOADK     R114 20      ; R114 := 20.000000
1134 [-]: LOADK     R115 1       ; R115 := 1.000000
1135 [-]: FORPREP   R113 1153    ; R113 -= R115; PC := 1153
1136 [-]: GETGLOBAL R117 K68     ; R117 := 0xb009bbc6
1137 [-]: MOVE      R118 R97     ; R118 := R97
1138 [-]: CALL      R117 2 2     ; R117 := R117(R118)
1139 [-]: GETGLOBAL R118 K6      ; R118 := 0x7b998233
1140 [-]: MOVE      R119 R117    ; R119 := R117
1141 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1142 [-]: TEST      R118 1       ; if R118 then PC := 1153
1143 [-]: JMP       1153         ; PC := 1153
1144 [-]: SELF      R118 R117 K69; R119 := R117; R118 := R117[0xb8ef5b34]
1145 [-]: MOVE      R120 R116    ; R120 := R116
1146 [-]: CALL      R118 3 2     ; R118 := R118(R119,R120)
1147 [-]: GETGLOBAL R119 K6      ; R119 := 0x7b998233
1148 [-]: MOVE      R120 R118    ; R120 := R118
1149 [-]: CALL      R119 2 2     ; R119 := R119(R120)
1150 [-]: TEST      R119 1       ; if R119 then PC := 1153
1151 [-]: JMP       1153         ; PC := 1153
1152 [-]: SETTABLE  R12 R116 K25 ; R12[R116] := nil
1153 [-]: FORLOOP   R113 1136    ; R113 += R115; if R113 <= R114 then begin PC := 1136; R116 := R113 end
1154 [-]: FORLOOP   R76 845      ; R76 += R78; if R76 <= R77 then begin PC := 845; R79 := R76 end
1155 [-]: EQ        0 R3 K44     ; if R3 ~= 2.000000 then PC := 1159
1156 [-]: JMP       1159         ; PC := 1159
1157 [-]: SETTABLE  R12 K56 K25  ; R12[3.000000] := nil
1158 [-]: SETTABLE  R12 K65 K25  ; R12[4.000000] := nil
1159 [-]: NEWTABLE  R119 0 0     ; R119 := {}
1160 [-]: GETGLOBAL R120 K94     ; R120 := 0xcfc01047
1161 [-]: MOVE      R121 R12     ; R121 := R12
1162 [-]: CALL      R120 2 4     ; R120,R121,R122 := R120(R121)
1163 [-]: JMP       1169         ; PC := 1169
1164 [-]: GETGLOBAL R125 K61     ; R125 := 0x33bdd652
1165 [-]: GETTABLE  R125 R125 K62; R125 := R125[0x23d5322f]
1166 [-]: MOVE      R126 R119    ; R126 := R119
1167 [-]: MOVE      R127 R124    ; R127 := R124
1168 [-]: CALL      R125 3 1     ; R125(R126,R127)
1169 [-]: TFORLOOP  R120 2       ; R123,R124 :=  R120(R121,R122); if R123 ~= nil then begin PC = 1164; R122 := R123 end
1170 [-]: JMP       1164         ; PC := 1164
1171 [-]: GETGLOBAL R125 K61     ; R125 := 0x33bdd652
1172 [-]: GETTABLE  R125 R125 K137; R125 := R125[0xf21b1d8e]
1173 [-]: MOVE      R126 R119    ; R126 := R119
1174 [-]: CLOSURE   R127 1       ; R127 := closure(Function #170.2)
1175 [-]: CALL      R125 3 1     ; R125(R126,R127)
1176 [-]: GETGLOBAL R125 K6      ; R125 := 0x7b998233
1177 [-]: GETGLOBAL R126 K19     ; R126 := 0x25d99d89
1178 [-]: CALL      R125 2 2     ; R125 := R125(R126)
1179 [-]: TEST      R125 1       ; if R125 then PC := 1241
1180 [-]: JMP       1241         ; PC := 1241
1181 [-]: GETGLOBAL R125 K31     ; R125 := mLists
1182 [-]: GETTABLE  R125 R125 K32; R125 := R125["mCosmeticsList"]
1183 [-]: GETTABLE  R125 R125 K135; R125 := R125["mCurrLevel"]
1184 [-]: GETGLOBAL R126 K31     ; R126 := mLists
1185 [-]: GETTABLE  R126 R126 K32; R126 := R126["mCosmeticsList"]
1186 [-]: GETTABLE  R126 R126 K33; R126 := R126["DEFAULT"]
1187 [-]: EQ        0 R125 R126  ; if R125 ~= R126 then PC := 1241
1188 [-]: JMP       1241         ; PC := 1241
1189 [-]: EQ        1 R3 K24     ; if R3 == 0.000000 then PC := 1193
1190 [-]: JMP       1193         ; PC := 1193
1191 [-]: EQ        0 R3 K56     ; if R3 ~= 3.000000 then PC := 1241
1192 [-]: JMP       1241         ; PC := 1241
1193 [-]: EQ        1 R4 K44     ; if R4 == 2.000000 then PC := 1199
1194 [-]: JMP       1199         ; PC := 1199
1195 [-]: EQ        1 R4 K20     ; if R4 == 1.000000 then PC := 1199
1196 [-]: JMP       1199         ; PC := 1199
1197 [-]: EQ        0 R4 K56     ; if R4 ~= 3.000000 then PC := 1241
1198 [-]: JMP       1241         ; PC := 1241
1199 [-]: GETGLOBAL R125 K138    ; R125 := mCurrentLoadout
1200 [-]: GETTABLE  R125 R125 R3 ; R125 := R125[R3]
1201 [-]: SELF      R125 R125 K139; R126 := R125; R125 := R125[0x2abbe722]
1202 [-]: MOVE      R127 R4      ; R127 := R4
1203 [-]: CALL      R125 3 2     ; R125 := R125(R126,R127)
1204 [-]: GETGLOBAL R126 K31     ; R126 := mLists
1205 [-]: GETTABLE  R126 R126 K32; R126 := R126["mCosmeticsList"]
1206 [-]: SELF      R126 R126 K140; R127 := R126; R126 := R126[0xbad4316f]
1207 [-]: NEWTABLE  R128 0 4     ; R128 := {}
1208 [-]: SETTABLE  R128 K28 K141; R128["Title"] := "/Lotus/Language/Menu/Arsenal_HolsterVis"
1209 [-]: GETTABLE  R129 R125 K143; R129 := R125["mHiddenWhenHolstered"]
1210 [-]: NOT       R129 R129    ; R129 := not R129
1211 [-]: SETTABLE  R128 K142 R129; R128["ToggleVal"] := R129
1212 [-]: CLOSURE   R129 2       ; R129 := closure(Function #170.3)
1213 [-]: MOVE      R0 R3        ; R0 := R3
1214 [-]: MOVE      R0 R4        ; R0 := R4
1215 [-]: GETUPVAL  R0 U7        ; R0 := U7
1216 [-]: SETTABLE  R128 K144 R129; R128["ToggleFunction"] := R129
1217 [-]: SETTABLE  R128 K145 K113; R128["HasBottomLine"] := true
1218 [-]: LOADBOOL  R129 1 0     ; R129 := true
1219 [-]: CALL      R126 4 2     ; R126 := R126(R127,R128,R129)
1220 [-]: LOADK     R127 K5      ; R127 := ""
1221 [-]: GETGLOBAL R128 K7      ; R128 := mSelected
1222 [-]: GETTABLE  R128 R128 K8 ; R128 := R128["Element"]
1223 [-]: EQ        1 R128 K25   ; if R128 == nil then PC := 1233
1224 [-]: JMP       1233         ; PC := 1233
1225 [-]: GETGLOBAL R128 K0      ; R128 := 0xae91e43b
1226 [-]: SELF      R128 R128 K131; R129 := R128; R128 := R128[0x42b04007]
1227 [-]: GETGLOBAL R130 K7      ; R130 := mSelected
1228 [-]: GETTABLE  R130 R130 K8 ; R130 := R130["Element"]
1229 [-]: GETTABLE  R130 R130 K28; R130 := R130["Title"]
1230 [-]: LOADBOOL  R131 0 0     ; R131 := false
1231 [-]: CALL      R128 4 2     ; R128 := R128(R129,R130,R131)
1232 [-]: MOVE      R127 R128    ; R127 := R128
1233 [-]: GETGLOBAL R128 K0      ; R128 := 0xae91e43b
1234 [-]: SELF      R128 R128 K131; R129 := R128; R128 := R128[0x42b04007]
1235 [-]: LOADK     R130 K146    ; R130 := "/Lotus/Language/Menu/Loadout_HolsterTitle"
1236 [-]: LOADBOOL  R131 0 0     ; R131 := false
1237 [-]: NEWTABLE  R132 0 1     ; R132 := {}
1238 [-]: SETTABLE  R132 K147 R127; R132["SLOT"] := R127
1239 [-]: CALL      R128 5 2     ; R128 := R128(R129,R130,R131,R132)
1240 [-]: SETTABLE  R126 K36 R128; R126["TopTitle"] := R128
1241 [-]: SETGLOBAL R119 K148    ; mSortedCosmetics := R119
1242 [-]: NEWTABLE  R128 0 0     ; R128 := {}
1243 [-]: LOADBOOL  R129 0 0     ; R129 := false
1244 [-]: LOADK     R130 1       ; R130 := 1.000000
1245 [-]: LEN       R131 R119    ; R131 := # R119
1246 [-]: LOADK     R132 1       ; R132 := 1.000000
1247 [-]: FORPREP   R130 1277    ; R130 -= R132; PC := 1277
1248 [-]: GETTABLE  R134 R119 R133; R134 := R119[R133]
1249 [-]: GETTABLE  R135 R134 K30; R135 := R134["Level"]
1250 [-]: GETGLOBAL R136 K31     ; R136 := mLists
1251 [-]: GETTABLE  R136 R136 K32; R136 := R136["mCosmeticsList"]
1252 [-]: GETTABLE  R136 R136 K135; R136 := R136["mCurrLevel"]
1253 [-]: EQ        0 R135 R136  ; if R135 ~= R136 then PC := 1277
1254 [-]: JMP       1277         ; PC := 1277
1255 [-]: GETTABLE  R135 R134 K149; R135 := R134["Slot"]
1256 [-]: EQ        1 R135 K150  ; if R135 == 17.000000 then PC := 1267
1257 [-]: JMP       1267         ; PC := 1267
1258 [-]: GETTABLE  R135 R134 K149; R135 := R134["Slot"]
1259 [-]: EQ        1 R135 K151  ; if R135 == 18.000000 then PC := 1267
1260 [-]: JMP       1267         ; PC := 1267
1261 [-]: GETTABLE  R135 R134 K149; R135 := R134["Slot"]
1262 [-]: EQ        1 R135 K152  ; if R135 == 19.000000 then PC := 1267
1263 [-]: JMP       1267         ; PC := 1267
1264 [-]: GETTABLE  R135 R134 K149; R135 := R134["Slot"]
1265 [-]: EQ        0 R135 K153  ; if R135 ~= 20.000000 then PC := 1271
1266 [-]: JMP       1271         ; PC := 1271
1267 [-]: LOADBOOL  R129 1 0     ; R129 := true
1268 [-]: GETTABLE  R135 R134 K149; R135 := R134["Slot"]
1269 [-]: SETTABLE  R128 R135 R133; R128[R135] := R133
1270 [-]: JMP       1277         ; PC := 1277
1271 [-]: GETGLOBAL R135 K31     ; R135 := mLists
1272 [-]: GETTABLE  R135 R135 K32; R135 := R135["mCosmeticsList"]
1273 [-]: SELF      R135 R135 K140; R136 := R135; R135 := R135[0xbad4316f]
1274 [-]: MOVE      R137 R134    ; R137 := R134
1275 [-]: LOADBOOL  R138 1 0     ; R138 := true
1276 [-]: CALL      R135 4 1     ; R135(R136,R137,R138)
1277 [-]: FORLOOP   R130 1248    ; R130 += R132; if R130 <= R131 then begin PC := 1248; R133 := R130 end
1278 [-]: GETGLOBAL R135 K31     ; R135 := mLists
1279 [-]: GETTABLE  R135 R135 K32; R135 := R135["mCosmeticsList"]
1280 [-]: SELF      R135 R135 K154; R136 := R135; R135 := R135[0xd4878f80]
1281 [-]: MOVE      R137 R12     ; R137 := R12
1282 [-]: CALL      R135 3 1     ; R135(R136,R137)
1283 [-]: LOADBOOL  R135 0 0     ; R135 := false
1284 [-]: GETGLOBAL R136 K31     ; R136 := mLists
1285 [-]: GETTABLE  R136 R136 K32; R136 := R136["mCosmeticsList"]
1286 [-]: GETTABLE  R136 R136 K135; R136 := R136["mCurrLevel"]
1287 [-]: GETGLOBAL R137 K31     ; R137 := mLists
1288 [-]: GETTABLE  R137 R137 K32; R137 := R137["mCosmeticsList"]
1289 [-]: GETTABLE  R137 R137 K33; R137 := R137["DEFAULT"]
1290 [-]: EQ        0 R136 R137  ; if R136 ~= R137 then PC := 1338
1291 [-]: JMP       1338         ; PC := 1338
1292 [-]: GETGLOBAL R136 K6      ; R136 := 0x7b998233
1293 [-]: GETGLOBAL R137 K7      ; R137 := mSelected
1294 [-]: GETTABLE  R137 R137 K8 ; R137 := R137["Element"]
1295 [-]: GETTABLE  R137 R137 K47; R137 := R137["Type"]
1296 [-]: CALL      R136 2 2     ; R136 := R136(R137)
1297 [-]: TEST      R136 1       ; if R136 then PC := 1338
1298 [-]: JMP       1338         ; PC := 1338
1299 [-]: GETGLOBAL R136 K7      ; R136 := mSelected
1300 [-]: GETTABLE  R136 R136 K8 ; R136 := R136["Element"]
1301 [-]: GETTABLE  R136 R136 K47; R136 := R136["Type"]
1302 [-]: SELF      R136 R136 K17; R137 := R136; R136 := R136[0xf2deaf69]
1303 [-]: GETGLOBAL R138 K155    ; R138 := gPowerSuitType
1304 [-]: CALL      R136 3 2     ; R136 := R136(R137,R138)
1305 [-]: TEST      R136 0       ; if not R136 then PC := 1338
1306 [-]: JMP       1338         ; PC := 1338
1307 [-]: GETGLOBAL R136 K68     ; R136 := 0xb009bbc6
1308 [-]: GETGLOBAL R137 K7      ; R137 := mSelected
1309 [-]: GETTABLE  R137 R137 K8 ; R137 := R137["Element"]
1310 [-]: GETTABLE  R137 R137 K47; R137 := R137["Type"]
1311 [-]: CALL      R136 2 2     ; R136 := R136(R137)
1312 [-]: SELF      R137 R136 K156; R138 := R136; R137 := R136[0x6df09e59]
1313 [-]: CALL      R137 2 2     ; R137 := R137(R138)
1314 [-]: TEST      R137 1       ; if R137 then PC := 1320
1315 [-]: JMP       1320         ; PC := 1320
1316 [-]: SELF      R137 R136 K157; R138 := R136; R137 := R136[0xa55b216f]
1317 [-]: CALL      R137 2 2     ; R137 := R137(R138)
1318 [-]: TEST      R137 0       ; if not R137 then PC := 1338
1319 [-]: JMP       1338         ; PC := 1338
1320 [-]: GETGLOBAL R137 K68     ; R137 := 0xb009bbc6
1321 [-]: GETGLOBAL R138 K7      ; R138 := mSelected
1322 [-]: GETTABLE  R138 R138 K8 ; R138 := R138["Element"]
1323 [-]: GETTABLE  R138 R138 K53; R138 := R138["Customization"]
1324 [-]: SELF      R138 R138 K66; R139 := R138; R138 := R138[0x2540510f]
1325 [-]: LOADK     R140 7       ; R140 := 7.000000
1326 [-]: CALL      R138 3 0     ; R138,... := R138(R139,R140)
1327 [-]: CALL      R137 0 2     ; R137 := R137(R138,...)
1328 [-]: GETGLOBAL R138 K6      ; R138 := 0x7b998233
1329 [-]: MOVE      R139 R137    ; R139 := R137
1330 [-]: CALL      R138 2 2     ; R138 := R138(R139)
1331 [-]: TEST      R138 1       ; if R138 then PC := 1338
1332 [-]: JMP       1338         ; PC := 1338
1333 [-]: SELF      R138 R137 K158; R139 := R137; R138 := R137[0x90b30b03]
1334 [-]: CALL      R138 2 2     ; R138 := R138(R139)
1335 [-]: TEST      R138 0       ; if not R138 then PC := 1338
1336 [-]: JMP       1338         ; PC := 1338
1337 [-]: LOADBOOL  R135 1 0     ; R135 := true
1338 [-]: GETGLOBAL R138 K31     ; R138 := mLists
1339 [-]: GETTABLE  R138 R138 K32; R138 := R138["mCosmeticsList"]
1340 [-]: GETTABLE  R138 R138 K159; R138 := R138["mElements"]
1341 [-]: GETGLOBAL R139 K31     ; R139 := mLists
1342 [-]: GETTABLE  R139 R139 K32; R139 := R139["mCosmeticsList"]
1343 [-]: SELF      R139 R139 K160; R140 := R139; R139 := R139[0x5fbddc1a]
1344 [-]: CALL      R139 2 2     ; R139 := R139(R140)
1345 [-]: GETTABLE  R138 R138 R139; R138 := R138[R139]
1346 [-]: GETGLOBAL R139 K6      ; R139 := 0x7b998233
1347 [-]: MOVE      R140 R138    ; R140 := R138
1348 [-]: CALL      R139 2 2     ; R139 := R139(R140)
1349 [-]: TEST      R139 1       ; if R139 then PC := 1354
1350 [-]: JMP       1354         ; PC := 1354
1351 [-]: TEST      R135 1       ; if R135 then PC := 1354
1352 [-]: JMP       1354         ; PC := 1354
1353 [-]: SETTABLE  R138 K145 K113; R138["HasBottomLine"] := true
1354 [-]: EQ        0 R3 K20     ; if R3 ~= 1.000000 then PC := 1363
1355 [-]: JMP       1363         ; PC := 1363
1356 [-]: EQ        0 R4 K24     ; if R4 ~= 0.000000 then PC := 1363
1357 [-]: JMP       1363         ; PC := 1363
1358 [-]: GETGLOBAL R139 K19     ; R139 := 0x25d99d89
1359 [-]: SELF      R139 R139 K26; R140 := R139; R139 := R139[0x3c6b0324]
1360 [-]: CALL      R139 2 2     ; R139 := R139(R140)
1361 [-]: TEST      R139 1       ; if R139 then PC := 1364
1362 [-]: JMP       1364         ; PC := 1364
1363 [-]: MOVE      R139 R5      ; R139 := R5
1364 [-]: LOADBOOL  R140 1 0     ; R140 := true
1365 [-]: LOADBOOL  R141 0 0     ; R141 := false
1366 [-]: GETGLOBAL R142 K6      ; R142 := 0x7b998233
1367 [-]: GETGLOBAL R143 K19     ; R143 := 0x25d99d89
1368 [-]: CALL      R142 2 2     ; R142 := R142(R143)
1369 [-]: TEST      R142 1       ; if R142 then PC := 2409
1370 [-]: JMP       2409         ; PC := 2409
1371 [-]: TEST      R139 0       ; if not R139 then PC := 1381
1372 [-]: JMP       1381         ; PC := 1381
1373 [-]: GETGLOBAL R142 K31     ; R142 := mLists
1374 [-]: GETTABLE  R142 R142 K32; R142 := R142["mCosmeticsList"]
1375 [-]: GETTABLE  R142 R142 K135; R142 := R142["mCurrLevel"]
1376 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1377 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1378 [-]: GETTABLE  R143 R143 K76; R143 := R143["ATTACHMENTS"]
1379 [-]: EQ        0 R142 R143  ; if R142 ~= R143 then PC := 2409
1380 [-]: JMP       2409         ; PC := 2409
1381 [-]: GETGLOBAL R142 K31     ; R142 := mLists
1382 [-]: GETTABLE  R142 R142 K32; R142 := R142["mCosmeticsList"]
1383 [-]: GETTABLE  R142 R142 K135; R142 := R142["mCurrLevel"]
1384 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1385 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1386 [-]: GETTABLE  R143 R143 K33; R143 := R143["DEFAULT"]
1387 [-]: EQ        1 R142 R143  ; if R142 == R143 then PC := 1405
1388 [-]: JMP       1405         ; PC := 1405
1389 [-]: GETGLOBAL R142 K31     ; R142 := mLists
1390 [-]: GETTABLE  R142 R142 K32; R142 := R142["mCosmeticsList"]
1391 [-]: GETTABLE  R142 R142 K135; R142 := R142["mCurrLevel"]
1392 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1393 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1394 [-]: GETTABLE  R143 R143 K76; R143 := R143["ATTACHMENTS"]
1395 [-]: EQ        1 R142 R143  ; if R142 == R143 then PC := 1405
1396 [-]: JMP       1405         ; PC := 1405
1397 [-]: GETGLOBAL R142 K31     ; R142 := mLists
1398 [-]: GETTABLE  R142 R142 K32; R142 := R142["mCosmeticsList"]
1399 [-]: GETTABLE  R142 R142 K135; R142 := R142["mCurrLevel"]
1400 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1401 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1402 [-]: GETTABLE  R143 R143 K161; R143 := R143["SYANDANAS"]
1403 [-]: EQ        0 R142 R143  ; if R142 ~= R143 then PC := 1637
1404 [-]: JMP       1637         ; PC := 1637
1405 [-]: GETGLOBAL R142 K31     ; R142 := mLists
1406 [-]: GETTABLE  R142 R142 K32; R142 := R142["mCosmeticsList"]
1407 [-]: GETTABLE  R142 R142 K135; R142 := R142["mCurrLevel"]
1408 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1409 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1410 [-]: GETTABLE  R143 R143 K33; R143 := R143["DEFAULT"]
1411 [-]: EQ        0 R142 R143  ; if R142 ~= R143 then PC := 1450
1412 [-]: JMP       1450         ; PC := 1450
1413 [-]: TEST      R135 0       ; if not R135 then PC := 1450
1414 [-]: JMP       1450         ; PC := 1450
1415 [-]: GETGLOBAL R142 K68     ; R142 := 0xb009bbc6
1416 [-]: GETGLOBAL R143 K7      ; R143 := mSelected
1417 [-]: GETTABLE  R143 R143 K8 ; R143 := R143["Element"]
1418 [-]: GETTABLE  R143 R143 K53; R143 := R143["Customization"]
1419 [-]: SELF      R143 R143 K66; R144 := R143; R143 := R143[0x2540510f]
1420 [-]: LOADK     R145 7       ; R145 := 7.000000
1421 [-]: CALL      R143 3 0     ; R143,... := R143(R144,R145)
1422 [-]: CALL      R142 0 2     ; R142 := R142(R143,...)
1423 [-]: GETGLOBAL R143 K6      ; R143 := 0x7b998233
1424 [-]: MOVE      R144 R142    ; R144 := R142
1425 [-]: CALL      R143 2 2     ; R143 := R143(R144)
1426 [-]: TEST      R143 1       ; if R143 then PC := 1450
1427 [-]: JMP       1450         ; PC := 1450
1428 [-]: SELF      R143 R142 K158; R144 := R142; R143 := R142[0x90b30b03]
1429 [-]: CALL      R143 2 2     ; R143 := R143(R144)
1430 [-]: TEST      R143 0       ; if not R143 then PC := 1450
1431 [-]: JMP       1450         ; PC := 1450
1432 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1433 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1434 [-]: SELF      R143 R143 K140; R144 := R143; R143 := R143[0xbad4316f]
1435 [-]: NEWTABLE  R145 0 4     ; R145 := {}
1436 [-]: SETTABLE  R145 K28 K162; R145["Title"] := "/Lotus/Language/Menu/Arsenal_UglyMode"
1437 [-]: GETTABLE  R146 R11 K163; R146 := R11["mAllowUglyMode"]
1438 [-]: SETTABLE  R145 K142 R146; R145["ToggleVal"] := R146
1439 [-]: CLOSURE   R146 3       ; R146 := closure(Function #170.4)
1440 [-]: GETUPVAL  R0 U7        ; R0 := U7
1441 [-]: MOVE      R0 R3        ; R0 := R3
1442 [-]: MOVE      R0 R4        ; R0 := R4
1443 [-]: GETUPVAL  R0 U8        ; R0 := U8
1444 [-]: GETUPVAL  R0 U9        ; R0 := U9
1445 [-]: SETTABLE  R145 K144 R146; R145["ToggleFunction"] := R146
1446 [-]: SETTABLE  R145 K145 K113; R145["HasBottomLine"] := true
1447 [-]: LOADBOOL  R146 1 0     ; R146 := true
1448 [-]: CALL      R143 4 1     ; R143(R144,R145,R146)
1449 [-]: LOADBOOL  R141 1 0     ; R141 := true
1450 [-]: TEST      R20 1        ; if R20 then PC := 2265
1451 [-]: JMP       2265         ; PC := 2265
1452 [-]: LOADBOOL  R143 1 0     ; R143 := true
1453 [-]: LOADBOOL  R144 1 0     ; R144 := true
1454 [-]: LOADBOOL  R145 1 0     ; R145 := true
1455 [-]: LOADBOOL  R146 1 0     ; R146 := true
1456 [-]: LOADBOOL  R147 1 0     ; R147 := true
1457 [-]: LOADBOOL  R148 1 0     ; R148 := true
1458 [-]: LOADBOOL  R149 1 0     ; R149 := true
1459 [-]: LOADBOOL  R150 0 0     ; R150 := false
1460 [-]: GETGLOBAL R151 K11     ; R151 := 0x6c97a788
1461 [-]: GETTABLE  R151 R151 K164; R151 := R151["NUM_NORMAL_LOADOUT_SLOTS"]
1462 [-]: LE        0 R151 R4    ; if R151 > R4 then PC := 1488
1463 [-]: JMP       1488         ; PC := 1488
1464 [-]: GETUPVAL  R151 U10     ; R151 := U10
1465 [-]: GETGLOBAL R152 K7      ; R152 := mSelected
1466 [-]: GETTABLE  R152 R152 K8 ; R152 := R152["Element"]
1467 [-]: CALL      R151 2 2     ; R151 := R151(R152)
1468 [-]: GETTABLE  R143 R151 K24; R143 := R151[0.000000]
1469 [-]: GETTABLE  R144 R151 K20; R144 := R151[1.000000]
1470 [-]: GETTABLE  R145 R151 K44; R145 := R151[2.000000]
1471 [-]: GETTABLE  R146 R151 K56; R146 := R151[3.000000]
1472 [-]: GETTABLE  R147 R151 K65; R147 := R151[4.000000]
1473 [-]: GETTABLE  R148 R151 K12; R148 := R151[5.000000]
1474 [-]: LOADBOOL  R149 0 0     ; R149 := false
1475 [-]: LOADBOOL  R150 0 0     ; R150 := false
1476 [-]: TESTSET   R140 R143 1  ; if R143 then PC := 1487 else R140 := R143
1477 [-]: JMP       1487         ; PC := 1487
1478 [-]: TESTSET   R140 R144 1  ; if R144 then PC := 1487 else R140 := R144
1479 [-]: JMP       1487         ; PC := 1487
1480 [-]: TESTSET   R140 R145 1  ; if R145 then PC := 1487 else R140 := R145
1481 [-]: JMP       1487         ; PC := 1487
1482 [-]: TESTSET   R140 R146 1  ; if R146 then PC := 1487 else R140 := R146
1483 [-]: JMP       1487         ; PC := 1487
1484 [-]: TESTSET   R140 R147 1  ; if R147 then PC := 1487 else R140 := R147
1485 [-]: JMP       1487         ; PC := 1487
1486 [-]: MOVE      R140 R148    ; R140 := R148
1487 [-]: JMP       1495         ; PC := 1495
1488 [-]: GETUPVAL  R152 U11     ; R152 := U11
1489 [-]: GETGLOBAL R153 K7      ; R153 := mSelected
1490 [-]: GETTABLE  R153 R153 K8 ; R153 := R153["Element"]
1491 [-]: CALL      R152 2 2     ; R152 := R152(R153)
1492 [-]: TEST      R152 0       ; if not R152 then PC := 1495
1493 [-]: JMP       1495         ; PC := 1495
1494 [-]: LOADBOOL  R150 1 0     ; R150 := true
1495 [-]: NEWTABLE  R152 7 0     ; R152 := {}
1496 [-]: LOADK     R153 0       ; R153 := 0.000000
1497 [-]: LOADK     R154 1       ; R154 := 1.000000
1498 [-]: LOADK     R155 2       ; R155 := 2.000000
1499 [-]: LOADK     R156 7       ; R156 := 7.000000
1500 [-]: LOADK     R157 8       ; R157 := 8.000000
1501 [-]: LOADK     R158 9       ; R158 := 9.000000
1502 [-]: LOADK     R159 10      ; R159 := 10.000000
1503 [-]: SETLIST   R152 7 1     ; R152[(1-1)*FPF+i] := R(152+i), 1 <= i <= 7
1504 [-]: LOADBOOL  R153 0 0     ; R153 := false
1505 [-]: GETGLOBAL R154 K83     ; R154 := 0xc8802016
1506 [-]: MOVE      R155 R152    ; R155 := R152
1507 [-]: CALL      R154 2 4     ; R154,R155,R156 := R154(R155)
1508 [-]: JMP       1528         ; PC := 1528
1509 [-]: GETGLOBAL R159 K68     ; R159 := 0xb009bbc6
1510 [-]: GETGLOBAL R160 K7      ; R160 := mSelected
1511 [-]: GETTABLE  R160 R160 K8 ; R160 := R160["Element"]
1512 [-]: GETTABLE  R160 R160 K53; R160 := R160["Customization"]
1513 [-]: SELF      R160 R160 K66; R161 := R160; R160 := R160[0x2540510f]
1514 [-]: MOVE      R162 R158    ; R162 := R158
1515 [-]: CALL      R160 3 0     ; R160,... := R160(R161,R162)
1516 [-]: CALL      R159 0 2     ; R159 := R159(R160,...)
1517 [-]: GETGLOBAL R160 K6      ; R160 := 0x7b998233
1518 [-]: MOVE      R161 R159    ; R161 := R159
1519 [-]: CALL      R160 2 2     ; R160 := R160(R161)
1520 [-]: TEST      R160 1       ; if R160 then PC := 1528
1521 [-]: JMP       1528         ; PC := 1528
1522 [-]: SELF      R160 R159 K165; R161 := R159; R160 := R159[0x03186ac2]
1523 [-]: CALL      R160 2 2     ; R160 := R160(R161)
1524 [-]: TEST      R160 0       ; if not R160 then PC := 1528
1525 [-]: JMP       1528         ; PC := 1528
1526 [-]: LOADBOOL  R153 1 0     ; R153 := true
1527 [-]: JMP       1530         ; PC := 1530
1528 [-]: TFORLOOP  R154 2       ; R157,R158 :=  R154(R155,R156); if R157 ~= nil then begin PC = 1509; R156 := R157 end
1529 [-]: JMP       1509         ; PC := 1509
1530 [-]: CLOSURE   R160 4       ; R160 := closure(Function #170.5)
1531 [-]: MOVE      R0 R153      ; R0 := R153
1532 [-]: MOVE      R0 R128      ; R0 := R128
1533 [-]: MOVE      R0 R119      ; R0 := R119
1534 [-]: LOADK     R161 K166    ; R161 := "/Lotus/Language/Menu/Loadout_CustomizeColor"
1535 [-]: TEST      R129 0       ; if not R129 then PC := 1538
1536 [-]: JMP       1538         ; PC := 1538
1537 [-]: LOADK     R161 K167    ; R161 := "/Lotus/Language/Loadout/ColorAndMaterialTitle"
1538 [-]: TEST      R143 0       ; if not R143 then PC := 1550
1539 [-]: JMP       1550         ; PC := 1550
1540 [-]: GETGLOBAL R162 K31     ; R162 := mLists
1541 [-]: GETTABLE  R162 R162 K32; R162 := R162["mCosmeticsList"]
1542 [-]: SELF      R162 R162 K140; R163 := R162; R162 := R162[0xbad4316f]
1543 [-]: NEWTABLE  R164 0 3     ; R164 := {}
1544 [-]: SETTABLE  R164 K39 K24 ; R164["Attribute"] := 0.000000
1545 [-]: SETTABLE  R164 K28 K168; R164["Title"] := "/Lotus/Language/Menu/Arsenal_Primary"
1546 [-]: SETTABLE  R164 K36 R161; R164["TopTitle"] := R161
1547 [-]: LOADBOOL  R165 1 0     ; R165 := true
1548 [-]: CALL      R162 4 1     ; R162(R163,R164,R165)
1549 [-]: LOADNIL   R161 R161    ; R161 := nil
1550 [-]: MOVE      R162 R160    ; R162 := R160
1551 [-]: LOADK     R163 17      ; R163 := 17.000000
1552 [-]: CALL      R162 2 1     ; R162(R163)
1553 [-]: TEST      R144 0       ; if not R144 then PC := 1565
1554 [-]: JMP       1565         ; PC := 1565
1555 [-]: GETGLOBAL R162 K31     ; R162 := mLists
1556 [-]: GETTABLE  R162 R162 K32; R162 := R162["mCosmeticsList"]
1557 [-]: SELF      R162 R162 K140; R163 := R162; R162 := R162[0xbad4316f]
1558 [-]: NEWTABLE  R164 0 3     ; R164 := {}
1559 [-]: SETTABLE  R164 K39 K20 ; R164["Attribute"] := 1.000000
1560 [-]: SETTABLE  R164 K28 K169; R164["Title"] := "/Lotus/Language/Menu/Arsenal_Secondary"
1561 [-]: SETTABLE  R164 K36 R161; R164["TopTitle"] := R161
1562 [-]: LOADBOOL  R165 1 0     ; R165 := true
1563 [-]: CALL      R162 4 1     ; R162(R163,R164,R165)
1564 [-]: LOADNIL   R161 R161    ; R161 := nil
1565 [-]: MOVE      R162 R160    ; R162 := R160
1566 [-]: LOADK     R163 18      ; R163 := 18.000000
1567 [-]: CALL      R162 2 1     ; R162(R163)
1568 [-]: TEST      R145 0       ; if not R145 then PC := 1580
1569 [-]: JMP       1580         ; PC := 1580
1570 [-]: GETGLOBAL R162 K31     ; R162 := mLists
1571 [-]: GETTABLE  R162 R162 K32; R162 := R162["mCosmeticsList"]
1572 [-]: SELF      R162 R162 K140; R163 := R162; R162 := R162[0xbad4316f]
1573 [-]: NEWTABLE  R164 0 3     ; R164 := {}
1574 [-]: SETTABLE  R164 K39 K44 ; R164["Attribute"] := 2.000000
1575 [-]: SETTABLE  R164 K28 K170; R164["Title"] := "/Lotus/Language/Menu/Arsenal_TintColor3"
1576 [-]: SETTABLE  R164 K36 R161; R164["TopTitle"] := R161
1577 [-]: LOADBOOL  R165 1 0     ; R165 := true
1578 [-]: CALL      R162 4 1     ; R162(R163,R164,R165)
1579 [-]: LOADNIL   R161 R161    ; R161 := nil
1580 [-]: MOVE      R162 R160    ; R162 := R160
1581 [-]: LOADK     R163 19      ; R163 := 19.000000
1582 [-]: CALL      R162 2 1     ; R162(R163)
1583 [-]: TEST      R146 0       ; if not R146 then PC := 1595
1584 [-]: JMP       1595         ; PC := 1595
1585 [-]: GETGLOBAL R162 K31     ; R162 := mLists
1586 [-]: GETTABLE  R162 R162 K32; R162 := R162["mCosmeticsList"]
1587 [-]: SELF      R162 R162 K140; R163 := R162; R162 := R162[0xbad4316f]
1588 [-]: NEWTABLE  R164 0 3     ; R164 := {}
1589 [-]: SETTABLE  R164 K39 K56 ; R164["Attribute"] := 3.000000
1590 [-]: SETTABLE  R164 K28 K171; R164["Title"] := "/Lotus/Language/Menu/Arsenal_TintColor4"
1591 [-]: SETTABLE  R164 K36 R161; R164["TopTitle"] := R161
1592 [-]: LOADBOOL  R165 1 0     ; R165 := true
1593 [-]: CALL      R162 4 1     ; R162(R163,R164,R165)
1594 [-]: LOADNIL   R161 R161    ; R161 := nil
1595 [-]: MOVE      R162 R160    ; R162 := R160
1596 [-]: LOADK     R163 20      ; R163 := 20.000000
1597 [-]: CALL      R162 2 1     ; R162(R163)
1598 [-]: TEST      R147 0       ; if not R147 then PC := 1617
1599 [-]: JMP       1617         ; PC := 1617
1600 [-]: GETGLOBAL R162 K31     ; R162 := mLists
1601 [-]: GETTABLE  R162 R162 K32; R162 := R162["mCosmeticsList"]
1602 [-]: SELF      R162 R162 K140; R163 := R162; R162 := R162[0xbad4316f]
1603 [-]: NEWTABLE  R164 0 4     ; R164 := {}
1604 [-]: SETTABLE  R164 K39 K65 ; R164["Attribute"] := 4.000000
1605 [-]: GETUPVAL  R165 U1      ; R165 := U1
1606 [-]: GETTABLE  R165 R165 K51; R165 := R165[0x06d055f9]
1607 [-]: MOVE      R166 R148    ; R166 := R148
1608 [-]: LOADK     R167 5       ; R167 := 5.000000
1609 [-]: LOADNIL   R168 R168    ; R168 := nil
1610 [-]: CALL      R165 4 2     ; R165 := R165(R166,R167,R168)
1611 [-]: SETTABLE  R164 K172 R165; R164["Attribute2"] := R165
1612 [-]: SETTABLE  R164 K28 K64 ; R164["Title"] := "/Lotus/Language/Menu/Arsenal_Emissive"
1613 [-]: SETTABLE  R164 K36 R161; R164["TopTitle"] := R161
1614 [-]: LOADBOOL  R165 1 0     ; R165 := true
1615 [-]: CALL      R162 4 1     ; R162(R163,R164,R165)
1616 [-]: LOADNIL   R161 R161    ; R161 := nil
1617 [-]: TEST      R149 0       ; if not R149 then PC := 1635
1618 [-]: JMP       1635         ; PC := 1635
1619 [-]: GETGLOBAL R162 K31     ; R162 := mLists
1620 [-]: GETTABLE  R162 R162 K32; R162 := R162["mCosmeticsList"]
1621 [-]: SELF      R162 R162 K140; R163 := R162; R162 := R162[0xbad4316f]
1622 [-]: NEWTABLE  R164 0 4     ; R164 := {}
1623 [-]: SETTABLE  R164 K39 K84 ; R164["Attribute"] := 6.000000
1624 [-]: GETUPVAL  R165 U1      ; R165 := U1
1625 [-]: GETTABLE  R165 R165 K51; R165 := R165[0x06d055f9]
1626 [-]: MOVE      R166 R150    ; R166 := R150
1627 [-]: LOADK     R167 7       ; R167 := 7.000000
1628 [-]: LOADNIL   R168 R168    ; R168 := nil
1629 [-]: CALL      R165 4 2     ; R165 := R165(R166,R167,R168)
1630 [-]: SETTABLE  R164 K172 R165; R164["Attribute2"] := R165
1631 [-]: SETTABLE  R164 K28 K173; R164["Title"] := "/Lotus/Language/Menu/Arsenal_PrimaryEnergy"
1632 [-]: SETTABLE  R164 K36 R161; R164["TopTitle"] := R161
1633 [-]: LOADBOOL  R165 1 0     ; R165 := true
1634 [-]: CALL      R162 4 1     ; R162(R163,R164,R165)
1635 [-]: CLOSE     R143         ; SAVE R143,...
1636 [-]: JMP       2265         ; PC := 2265
1637 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1638 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1639 [-]: GETTABLE  R143 R143 K135; R143 := R143["mCurrLevel"]
1640 [-]: GETGLOBAL R144 K31     ; R144 := mLists
1641 [-]: GETTABLE  R144 R144 K32; R144 := R144["mCosmeticsList"]
1642 [-]: GETTABLE  R144 R144 K174; R144 := R144["FRONTSIGIL"]
1643 [-]: EQ        1 R143 R144  ; if R143 == R144 then PC := 1653
1644 [-]: JMP       1653         ; PC := 1653
1645 [-]: GETGLOBAL R143 K31     ; R143 := mLists
1646 [-]: GETTABLE  R143 R143 K32; R143 := R143["mCosmeticsList"]
1647 [-]: GETTABLE  R143 R143 K135; R143 := R143["mCurrLevel"]
1648 [-]: GETGLOBAL R144 K31     ; R144 := mLists
1649 [-]: GETTABLE  R144 R144 K32; R144 := R144["mCosmeticsList"]
1650 [-]: GETTABLE  R144 R144 K175; R144 := R144["BACKSIGIL"]
1651 [-]: EQ        0 R143 R144  ; if R143 ~= R144 then PC := 1914
1652 [-]: JMP       1914         ; PC := 1914
1653 [-]: GETGLOBAL R143 K7      ; R143 := mSelected
1654 [-]: GETTABLE  R143 R143 K8 ; R143 := R143["Element"]
1655 [-]: GETTABLE  R143 R143 K53; R143 := R143["Customization"]
1656 [-]: SELF      R144 R143 K176; R145 := R143; R144 := R143[0x8e62760a]
1657 [-]: LOADK     R146 2       ; R146 := 2.000000
1658 [-]: CALL      R144 3 2     ; R144 := R144(R145,R146)
1659 [-]: LOADK     R145 0       ; R145 := 0.000000
1660 [-]: LOADK     R146 4       ; R146 := 4.000000
1661 [-]: LOADK     R147 6       ; R147 := 6.000000
1662 [-]: LOADK     R148 K177    ; R148 := "blue"
1663 [-]: LOADK     R149 1       ; R149 := 1.000000
1664 [-]: LOADK     R150 6       ; R150 := 6.000000
1665 [-]: LOADK     R151 K178    ; R151 := "red"
1666 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1667 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1668 [-]: GETTABLE  R152 R152 K135; R152 := R152["mCurrLevel"]
1669 [-]: GETGLOBAL R153 K31     ; R153 := mLists
1670 [-]: GETTABLE  R153 R153 K32; R153 := R153["mCosmeticsList"]
1671 [-]: GETTABLE  R153 R153 K175; R153 := R153["BACKSIGIL"]
1672 [-]: EQ        0 R152 R153  ; if R152 ~= R153 then PC := 1679
1673 [-]: JMP       1679         ; PC := 1679
1674 [-]: LOADK     R145 2       ; R145 := 2.000000
1675 [-]: LOADK     R146 5       ; R146 := 5.000000
1676 [-]: LOADK     R148 K179    ; R148 := "alpha"
1677 [-]: LOADK     R149 3       ; R149 := 3.000000
1678 [-]: LOADK     R151 K180    ; R151 := "green"
1679 [-]: EQ        0 R3 K84     ; if R3 ~= 6.000000 then PC := 1772
1680 [-]: JMP       1772         ; PC := 1772
1681 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1682 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1683 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1684 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1685 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1686 [-]: SETTABLE  R154 K28 K181; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XScale"
1687 [-]: SETTABLE  R154 K182 K113; R154["ScaleX"] := true
1688 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1689 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1690 [-]: MOVE      R157 R149    ; R157 := R149
1691 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1692 [-]: GETTABLE  R155 R155 K177; R155 := R155["blue"]
1693 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1694 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1695 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1696 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1697 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1698 [-]: LOADBOOL  R155 1 0     ; R155 := true
1699 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1700 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1701 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1702 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1703 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1704 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1705 [-]: SETTABLE  R154 K28 K189; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YScale"
1706 [-]: SETTABLE  R154 K190 K113; R154["ScaleY"] := true
1707 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1708 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1709 [-]: MOVE      R157 R149    ; R157 := R149
1710 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1711 [-]: GETTABLE  R155 R155 K179; R155 := R155["alpha"]
1712 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1713 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1714 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1715 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1716 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1717 [-]: LOADBOOL  R155 1 0     ; R155 := true
1718 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1719 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1720 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1721 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1722 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1723 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1724 [-]: SETTABLE  R154 K28 K191; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XOffset"
1725 [-]: SETTABLE  R154 K192 K113; R154["PositionX"] := true
1726 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1727 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1728 [-]: MOVE      R157 R149    ; R157 := R149
1729 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1730 [-]: GETTABLE  R155 R155 K178; R155 := R155["red"]
1731 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1732 [-]: SUB       R155 K20 R155; R155 := 1.000000 - R155
1733 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1734 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1735 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1736 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1737 [-]: LOADBOOL  R155 1 0     ; R155 := true
1738 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1739 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1740 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1741 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1742 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1743 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1744 [-]: SETTABLE  R154 K28 K193; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YOffset"
1745 [-]: SETTABLE  R154 K194 K113; R154["PositionY"] := true
1746 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1747 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1748 [-]: MOVE      R157 R149    ; R157 := R149
1749 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1750 [-]: GETTABLE  R155 R155 K180; R155 := R155["green"]
1751 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1752 [-]: SUB       R155 K20 R155; R155 := 1.000000 - R155
1753 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1754 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1755 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1756 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1757 [-]: LOADBOOL  R155 1 0     ; R155 := true
1758 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1759 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1760 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1761 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1762 [-]: NEWTABLE  R154 0 5     ; R154 := {}
1763 [-]: SETTABLE  R154 K28 K195; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetProperties"
1764 [-]: SETTABLE  R154 K196 K113; R154["DefaultSigilProps"] := true
1765 [-]: GETUPVAL  R155 U12     ; R155 := U12
1766 [-]: SETTABLE  R154 K197 R155; R154["Callback"] := R155
1767 [-]: SETTABLE  R154 K145 K113; R154["HasBottomLine"] := true
1768 [-]: SETTABLE  R154 K198 K113; R154["HasMiddleLine"] := true
1769 [-]: LOADBOOL  R155 1 0     ; R155 := true
1770 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1771 [-]: JMP       2265         ; PC := 2265
1772 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1773 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1774 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1775 [-]: NEWTABLE  R154 0 9     ; R154 := {}
1776 [-]: SETTABLE  R154 K39 R147; R154["Attribute"] := R147
1777 [-]: SETTABLE  R154 K28 K199; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_Rotation"
1778 [-]: SETTABLE  R154 K36 K200; R154["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Properties"
1779 [-]: SETTABLE  R154 K201 R148; R154["Rotation"] := R148
1780 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1781 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1782 [-]: MOVE      R157 R147    ; R157 := R147
1783 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1784 [-]: GETTABLE  R155 R155 R148; R155 := R155[R148]
1785 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1786 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1787 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1788 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1789 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1790 [-]: LOADBOOL  R155 1 0     ; R155 := true
1791 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1792 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1793 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1794 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1795 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1796 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1797 [-]: SETTABLE  R154 K28 K181; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XScale"
1798 [-]: SETTABLE  R154 K182 K113; R154["ScaleX"] := true
1799 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1800 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1801 [-]: MOVE      R157 R149    ; R157 := R149
1802 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1803 [-]: GETTABLE  R155 R155 K177; R155 := R155["blue"]
1804 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1805 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1806 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1807 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1808 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1809 [-]: LOADBOOL  R155 1 0     ; R155 := true
1810 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1811 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1812 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1813 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1814 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1815 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1816 [-]: SETTABLE  R154 K28 K189; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YScale"
1817 [-]: SETTABLE  R154 K190 K113; R154["ScaleY"] := true
1818 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1819 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1820 [-]: MOVE      R157 R149    ; R157 := R149
1821 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1822 [-]: GETTABLE  R155 R155 K179; R155 := R155["alpha"]
1823 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1824 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1825 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1826 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1827 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1828 [-]: LOADBOOL  R155 1 0     ; R155 := true
1829 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1830 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1831 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1832 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1833 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1834 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1835 [-]: SETTABLE  R154 K28 K191; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XOffset"
1836 [-]: SETTABLE  R154 K192 K113; R154["PositionX"] := true
1837 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1838 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1839 [-]: MOVE      R157 R149    ; R157 := R149
1840 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1841 [-]: GETTABLE  R155 R155 K178; R155 := R155["red"]
1842 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1843 [-]: SUB       R155 K20 R155; R155 := 1.000000 - R155
1844 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1845 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1846 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1847 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1848 [-]: LOADBOOL  R155 1 0     ; R155 := true
1849 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1850 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1851 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1852 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1853 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1854 [-]: SETTABLE  R154 K39 R149; R154["Attribute"] := R149
1855 [-]: SETTABLE  R154 K28 K193; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YOffset"
1856 [-]: SETTABLE  R154 K194 K113; R154["PositionY"] := true
1857 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1858 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1859 [-]: MOVE      R157 R149    ; R157 := R149
1860 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1861 [-]: GETTABLE  R155 R155 K180; R155 := R155["green"]
1862 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1863 [-]: SUB       R155 K20 R155; R155 := 1.000000 - R155
1864 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1865 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1866 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1867 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1868 [-]: LOADBOOL  R155 1 0     ; R155 := true
1869 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1870 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1871 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1872 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1873 [-]: NEWTABLE  R154 0 8     ; R154 := {}
1874 [-]: SETTABLE  R154 K39 R150; R154["Attribute"] := R150
1875 [-]: SETTABLE  R154 K28 K202; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_Alpha"
1876 [-]: SETTABLE  R154 K203 R151; R154["Alpha"] := R151
1877 [-]: SETTABLE  R154 K183 K113; R154["IsValueSelector"] := true
1878 [-]: SELF      R155 R144 K124; R156 := R144; R155 := R144[0x5d10207d]
1879 [-]: MOVE      R157 R150    ; R157 := R150
1880 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1881 [-]: GETTABLE  R155 R155 R151; R155 := R155[R151]
1882 [-]: DIV       R155 R155 K185; R155 := R155 / 255.000000
1883 [-]: SETTABLE  R154 K184 R155; R154["Value"] := R155
1884 [-]: SETTABLE  R154 K186 K24; R154["ValueChange"] := 0.000000
1885 [-]: SETTABLE  R154 K187 K99; R154["SliderActive"] := false
1886 [-]: SETTABLE  R154 K188 K24; R154["SliderX"] := 0.000000
1887 [-]: LOADBOOL  R155 1 0     ; R155 := true
1888 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1889 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1890 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1891 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1892 [-]: NEWTABLE  R154 0 5     ; R154 := {}
1893 [-]: SETTABLE  R154 K28 K195; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetProperties"
1894 [-]: SETTABLE  R154 K196 K113; R154["DefaultSigilProps"] := true
1895 [-]: GETUPVAL  R155 U12     ; R155 := U12
1896 [-]: SETTABLE  R154 K197 R155; R154["Callback"] := R155
1897 [-]: SETTABLE  R154 K145 K113; R154["HasBottomLine"] := true
1898 [-]: SETTABLE  R154 K198 K113; R154["HasMiddleLine"] := true
1899 [-]: LOADBOOL  R155 1 0     ; R155 := true
1900 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1901 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1902 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1903 [-]: SELF      R152 R152 K140; R153 := R152; R152 := R152[0xbad4316f]
1904 [-]: NEWTABLE  R154 0 6     ; R154 := {}
1905 [-]: SETTABLE  R154 K39 R145; R154["Attribute"] := R145
1906 [-]: SETTABLE  R154 K172 R146; R154["Attribute2"] := R146
1907 [-]: SETTABLE  R154 K28 K168; R154["Title"] := "/Lotus/Language/Menu/Arsenal_Primary"
1908 [-]: SETTABLE  R154 K36 K166; R154["TopTitle"] := "/Lotus/Language/Menu/Loadout_CustomizeColor"
1909 [-]: SETTABLE  R154 K204 K113; R154["SigilColor"] := true
1910 [-]: SETTABLE  R154 K145 K113; R154["HasBottomLine"] := true
1911 [-]: LOADBOOL  R155 1 0     ; R155 := true
1912 [-]: CALL      R152 4 1     ; R152(R153,R154,R155)
1913 [-]: JMP       2265         ; PC := 2265
1914 [-]: GETGLOBAL R152 K31     ; R152 := mLists
1915 [-]: GETTABLE  R152 R152 K32; R152 := R152["mCosmeticsList"]
1916 [-]: GETTABLE  R152 R152 K135; R152 := R152["mCurrLevel"]
1917 [-]: GETGLOBAL R153 K31     ; R153 := mLists
1918 [-]: GETTABLE  R153 R153 K32; R153 := R153["mCosmeticsList"]
1919 [-]: GETTABLE  R153 R153 K136; R153 := R153["HOLSTER_STYLE"]
1920 [-]: EQ        0 R152 R153  ; if R152 ~= R153 then PC := 1980
1921 [-]: JMP       1980         ; PC := 1980
1922 [-]: LOADBOOL  R152 0 0     ; R152 := false
1923 [-]: LOADBOOL  R153 0 0     ; R153 := false
1924 [-]: GETUPVAL  R154 U13     ; R154 := U13
1925 [-]: GETGLOBAL R155 K7      ; R155 := mSelected
1926 [-]: GETTABLE  R155 R155 K8 ; R155 := R155["Element"]
1927 [-]: CALL      R154 2 2     ; R154 := R154(R155)
1928 [-]: GETGLOBAL R155 K6      ; R155 := 0x7b998233
1929 [-]: MOVE      R156 R154    ; R156 := R154
1930 [-]: CALL      R155 2 2     ; R155 := R155(R156)
1931 [-]: TEST      R155 1       ; if R155 then PC := 1941
1932 [-]: JMP       1941         ; PC := 1941
1933 [-]: SELF      R155 R154 K205; R156 := R154; R155 := R154[0x8fa87b4b]
1934 [-]: LOADK     R157 0       ; R157 := 0.000000
1935 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1936 [-]: MOVE      R152 R155    ; R152 := R155
1937 [-]: SELF      R155 R154 K205; R156 := R154; R155 := R154[0x8fa87b4b]
1938 [-]: LOADK     R157 1       ; R157 := 1.000000
1939 [-]: CALL      R155 3 2     ; R155 := R155(R156,R157)
1940 [-]: MOVE      R153 R155    ; R153 := R155
1941 [-]: TEST      R152 0       ; if not R152 then PC := 1960
1942 [-]: JMP       1960         ; PC := 1960
1943 [-]: NEWTABLE  R155 0 4     ; R155 := {}
1944 [-]: SETTABLE  R155 K28 K207; R155["Title"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolsterMainHand"
1945 [-]: SETTABLE  R155 K36 K208; R155["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolster"
1946 [-]: GETGLOBAL R156 K31     ; R156 := mLists
1947 [-]: GETTABLE  R156 R156 K32; R156 := R156["mCosmeticsList"]
1948 [-]: GETTABLE  R156 R156 K209; R156 := R156["HOLSTER_CUSTOMIZATION"]
1949 [-]: SETTABLE  R155 K30 R156; R155["Level"] := R156
1950 [-]: SETTABLE  R155 K210 K24; R155["Hand"] := 0.000000
1951 [-]: TEST      R153 1       ; if R153 then PC := 1954
1952 [-]: JMP       1954         ; PC := 1954
1953 [-]: SETTABLE  R155 K145 K113; R155["HasBottomLine"] := true
1954 [-]: GETGLOBAL R156 K31     ; R156 := mLists
1955 [-]: GETTABLE  R156 R156 K32; R156 := R156["mCosmeticsList"]
1956 [-]: SELF      R156 R156 K140; R157 := R156; R156 := R156[0xbad4316f]
1957 [-]: MOVE      R158 R155    ; R158 := R155
1958 [-]: LOADBOOL  R159 1 0     ; R159 := true
1959 [-]: CALL      R156 4 1     ; R156(R157,R158,R159)
1960 [-]: TEST      R153 0       ; if not R153 then PC := 2265
1961 [-]: JMP       2265         ; PC := 2265
1962 [-]: NEWTABLE  R156 0 4     ; R156 := {}
1963 [-]: SETTABLE  R156 K28 K211; R156["Title"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolsterOffHand"
1964 [-]: SETTABLE  R156 K145 K113; R156["HasBottomLine"] := true
1965 [-]: GETGLOBAL R157 K31     ; R157 := mLists
1966 [-]: GETTABLE  R157 R157 K32; R157 := R157["mCosmeticsList"]
1967 [-]: GETTABLE  R157 R157 K209; R157 := R157["HOLSTER_CUSTOMIZATION"]
1968 [-]: SETTABLE  R156 K30 R157; R156["Level"] := R157
1969 [-]: SETTABLE  R156 K210 K20; R156["Hand"] := 1.000000
1970 [-]: TEST      R152 1       ; if R152 then PC := 1973
1971 [-]: JMP       1973         ; PC := 1973
1972 [-]: SETTABLE  R156 K36 K208; R156["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolster"
1973 [-]: GETGLOBAL R157 K31     ; R157 := mLists
1974 [-]: GETTABLE  R157 R157 K32; R157 := R157["mCosmeticsList"]
1975 [-]: SELF      R157 R157 K140; R158 := R157; R157 := R157[0xbad4316f]
1976 [-]: MOVE      R159 R156    ; R159 := R156
1977 [-]: LOADBOOL  R160 1 0     ; R160 := true
1978 [-]: CALL      R157 4 1     ; R157(R158,R159,R160)
1979 [-]: JMP       2265         ; PC := 2265
1980 [-]: GETGLOBAL R157 K31     ; R157 := mLists
1981 [-]: GETTABLE  R157 R157 K32; R157 := R157["mCosmeticsList"]
1982 [-]: GETTABLE  R157 R157 K135; R157 := R157["mCurrLevel"]
1983 [-]: GETGLOBAL R158 K31     ; R158 := mLists
1984 [-]: GETTABLE  R158 R158 K32; R158 := R158["mCosmeticsList"]
1985 [-]: GETTABLE  R158 R158 K209; R158 := R158["HOLSTER_CUSTOMIZATION"]
1986 [-]: EQ        0 R157 R158  ; if R157 ~= R158 then PC := 2265
1987 [-]: JMP       2265         ; PC := 2265
1988 [-]: GETUPVAL  R157 U13     ; R157 := U13
1989 [-]: GETGLOBAL R158 K7      ; R158 := mSelected
1990 [-]: GETTABLE  R158 R158 K8 ; R158 := R158["Element"]
1991 [-]: CALL      R157 2 2     ; R157 := R157(R158)
1992 [-]: LOADK     R158 6       ; R158 := 6.000000
1993 [-]: LOADK     R159 0       ; R159 := 0.000000
1994 [-]: LOADK     R160 1       ; R160 := 1.000000
1995 [-]: GETGLOBAL R161 K31     ; R161 := mLists
1996 [-]: GETTABLE  R161 R161 K32; R161 := R161["mCosmeticsList"]
1997 [-]: GETTABLE  R161 R161 K210; R161 := R161["Hand"]
1998 [-]: EQ        0 R161 K20   ; if R161 ~= 1.000000 then PC := 2002
1999 [-]: JMP       2002         ; PC := 2002
2000 [-]: LOADK     R159 2       ; R159 := 2.000000
2001 [-]: LOADK     R160 3       ; R160 := 3.000000
2002 [-]: GETGLOBAL R161 K7      ; R161 := mSelected
2003 [-]: GETTABLE  R161 R161 K8 ; R161 := R161["Element"]
2004 [-]: GETTABLE  R161 R161 K53; R161 := R161["Customization"]
2005 [-]: SELF      R162 R161 K176; R163 := R161; R162 := R161[0x8e62760a]
2006 [-]: LOADK     R164 3       ; R164 := 3.000000
2007 [-]: CALL      R162 3 2     ; R162 := R162(R163,R164)
2008 [-]: GETGLOBAL R163 K13     ; R163 := _T
2009 [-]: GETTABLE  R163 R163 K212; R163 := R163["MenuSuitAvatar"]
2010 [-]: SELF      R164 R163 K213; R165 := R163; R164 := R163[0xde321e6f]
2011 [-]: CALL      R164 2 2     ; R164 := R164(R165)
2012 [-]: SELF      R164 R164 K214; R165 := R164; R164 := R164[0xf7d48ee0]
2013 [-]: CALL      R164 2 2     ; R164 := R164(R165)
2014 [-]: GETUPVAL  R165 U7      ; R165 := U7
2015 [-]: MOVE      R166 R3      ; R166 := R3
2016 [-]: MOVE      R167 R4      ; R167 := R4
2017 [-]: CALL      R165 3 2     ; R165 := R165(R166,R167)
2018 [-]: SELF      R166 R164 K215; R167 := R164; R166 := R164[0xd6496b1c]
2019 [-]: MOVE      R168 R165    ; R168 := R165
2020 [-]: GETGLOBAL R169 K31     ; R169 := mLists
2021 [-]: GETTABLE  R169 R169 K32; R169 := R169["mCosmeticsList"]
2022 [-]: GETTABLE  R169 R169 K210; R169 := R169["Hand"]
2023 [-]: CALL      R166 4 2     ; R166 := R166(R167,R168,R169)
2024 [-]: SELF      R167 R166 K176; R168 := R166; R167 := R166[0x8e62760a]
2025 [-]: LOADK     R169 3       ; R169 := 3.000000
2026 [-]: CALL      R167 3 2     ; R167 := R167(R168,R169)
2027 [-]: LOADNIL   R168 R168    ; R168 := nil
2028 [-]: SELF      R169 R162 K216; R170 := R162; R169 := R162[0x697019d0]
2029 [-]: MOVE      R171 R158    ; R171 := R158
2030 [-]: CALL      R169 3 2     ; R169 := R169(R170,R171)
2031 [-]: TEST      R169 0       ; if not R169 then PC := 2038
2032 [-]: JMP       2038         ; PC := 2038
2033 [-]: SELF      R169 R162 K124; R170 := R162; R169 := R162[0x5d10207d]
2034 [-]: MOVE      R171 R158    ; R171 := R158
2035 [-]: CALL      R169 3 2     ; R169 := R169(R170,R171)
2036 [-]: MOVE      R168 R169    ; R168 := R169
2037 [-]: JMP       2042         ; PC := 2042
2038 [-]: SELF      R169 R167 K124; R170 := R167; R169 := R167[0x5d10207d]
2039 [-]: MOVE      R171 R158    ; R171 := R158
2040 [-]: CALL      R169 3 2     ; R169 := R169(R170,R171)
2041 [-]: MOVE      R168 R169    ; R168 := R169
2042 [-]: LOADNIL   R169 R169    ; R169 := nil
2043 [-]: SELF      R170 R162 K216; R171 := R162; R170 := R162[0x697019d0]
2044 [-]: MOVE      R172 R159    ; R172 := R159
2045 [-]: CALL      R170 3 2     ; R170 := R170(R171,R172)
2046 [-]: TEST      R170 0       ; if not R170 then PC := 2053
2047 [-]: JMP       2053         ; PC := 2053
2048 [-]: SELF      R170 R162 K124; R171 := R162; R170 := R162[0x5d10207d]
2049 [-]: MOVE      R172 R159    ; R172 := R159
2050 [-]: CALL      R170 3 2     ; R170 := R170(R171,R172)
2051 [-]: MOVE      R169 R170    ; R169 := R170
2052 [-]: JMP       2057         ; PC := 2057
2053 [-]: SELF      R170 R167 K124; R171 := R167; R170 := R167[0x5d10207d]
2054 [-]: MOVE      R172 R159    ; R172 := R159
2055 [-]: CALL      R170 3 2     ; R170 := R170(R171,R172)
2056 [-]: MOVE      R169 R170    ; R169 := R170
2057 [-]: LOADNIL   R170 R170    ; R170 := nil
2058 [-]: SELF      R171 R162 K216; R172 := R162; R171 := R162[0x697019d0]
2059 [-]: MOVE      R173 R160    ; R173 := R160
2060 [-]: CALL      R171 3 2     ; R171 := R171(R172,R173)
2061 [-]: TEST      R171 0       ; if not R171 then PC := 2068
2062 [-]: JMP       2068         ; PC := 2068
2063 [-]: SELF      R171 R162 K124; R172 := R162; R171 := R162[0x5d10207d]
2064 [-]: MOVE      R173 R160    ; R173 := R160
2065 [-]: CALL      R171 3 2     ; R171 := R171(R172,R173)
2066 [-]: MOVE      R170 R171    ; R170 := R171
2067 [-]: JMP       2072         ; PC := 2072
2068 [-]: SELF      R171 R167 K124; R172 := R167; R171 := R167[0x5d10207d]
2069 [-]: MOVE      R173 R160    ; R173 := R160
2070 [-]: CALL      R171 3 2     ; R171 := R171(R172,R173)
2071 [-]: MOVE      R170 R171    ; R170 := R171
2072 [-]: GETTABLE  R171 R168 K178; R171 := R168["red"]
2073 [-]: MOD       R171 R171 K22; R171 := R171 % 16.000000
2074 [-]: SELF      R172 R157 K217; R173 := R157; R172 := R157[0x210f7d8b]
2075 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2076 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2077 [-]: GETTABLE  R174 R174 K210; R174 := R174["Hand"]
2078 [-]: CALL      R172 3 2     ; R172 := R172(R173,R174)
2079 [-]: SELF      R173 R157 K218; R174 := R157; R173 := R157[0x5819e29e]
2080 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2081 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2082 [-]: GETTABLE  R175 R175 K210; R175 := R175["Hand"]
2083 [-]: MOVE      R176 R171    ; R176 := R171
2084 [-]: CALL      R173 4 2     ; R173 := R173(R174,R175,R176)
2085 [-]: LEN       R174 R172    ; R174 := # R172
2086 [-]: LT        0 K20 R174   ; if 1.000000 >= R174 then PC := 2111
2087 [-]: JMP       2111         ; PC := 2111
2088 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2089 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2090 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2091 [-]: NEWTABLE  R176 0 12    ; R176 := {}
2092 [-]: SETTABLE  R176 K39 R158; R176["Attribute"] := R158
2093 [-]: SETTABLE  R176 K28 R173; R176[0x5465f8f3] := R173
2094 [-]: SETTABLE  R176 K219 K113; R176["AttachPart"] := true
2095 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2096 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2097 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2098 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2099 [-]: SETTABLE  R176 K183 K113; R176["IsValueSelector"] := true
2100 [-]: SETTABLE  R176 K184 R171; R176["Value"] := R171
2101 [-]: SETTABLE  R176 K186 K24; R176["ValueChange"] := 0.000000
2102 [-]: LEN       R177 R172    ; R177 := # R172
2103 [-]: SUB       R177 R177 K20; R177 := R177 - 1.000000
2104 [-]: SETTABLE  R176 K220 R177; R176["NumOptions"] := R177
2105 [-]: SETTABLE  R176 K187 K99; R176["SliderActive"] := false
2106 [-]: SETTABLE  R176 K188 K24; R176["SliderX"] := 0.000000
2107 [-]: SETTABLE  R176 K36 K221; R176["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_AttachPart"
2108 [-]: SETTABLE  R176 K145 K113; R176["HasBottomLine"] := true
2109 [-]: LOADBOOL  R177 1 0     ; R177 := true
2110 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2111 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2112 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2113 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2114 [-]: NEWTABLE  R176 0 10    ; R176 := {}
2115 [-]: SETTABLE  R176 K39 R159; R176["Attribute"] := R159
2116 [-]: SETTABLE  R176 K28 K191; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_XOffset"
2117 [-]: SETTABLE  R176 K192 K113; R176["PositionX"] := true
2118 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2119 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2120 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2121 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2122 [-]: SETTABLE  R176 K183 K113; R176["IsValueSelector"] := true
2123 [-]: GETTABLE  R177 R169 K178; R177 := R169["red"]
2124 [-]: DIV       R177 R177 K185; R177 := R177 / 255.000000
2125 [-]: SETTABLE  R176 K184 R177; R176["Value"] := R177
2126 [-]: SETTABLE  R176 K186 K24; R176["ValueChange"] := 0.000000
2127 [-]: SETTABLE  R176 K187 K99; R176["SliderActive"] := false
2128 [-]: SETTABLE  R176 K188 K24; R176["SliderX"] := 0.000000
2129 [-]: SETTABLE  R176 K36 K222; R176["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Position"
2130 [-]: LOADBOOL  R177 1 0     ; R177 := true
2131 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2132 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2133 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2134 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2135 [-]: NEWTABLE  R176 0 9     ; R176 := {}
2136 [-]: SETTABLE  R176 K39 R159; R176["Attribute"] := R159
2137 [-]: SETTABLE  R176 K28 K193; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_YOffset"
2138 [-]: SETTABLE  R176 K194 K113; R176["PositionY"] := true
2139 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2140 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2141 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2142 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2143 [-]: SETTABLE  R176 K183 K113; R176["IsValueSelector"] := true
2144 [-]: GETTABLE  R177 R169 K180; R177 := R169["green"]
2145 [-]: DIV       R177 R177 K185; R177 := R177 / 255.000000
2146 [-]: SETTABLE  R176 K184 R177; R176["Value"] := R177
2147 [-]: SETTABLE  R176 K186 K24; R176["ValueChange"] := 0.000000
2148 [-]: SETTABLE  R176 K187 K99; R176["SliderActive"] := false
2149 [-]: SETTABLE  R176 K188 K24; R176["SliderX"] := 0.000000
2150 [-]: LOADBOOL  R177 1 0     ; R177 := true
2151 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2152 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2153 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2154 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2155 [-]: NEWTABLE  R176 0 9     ; R176 := {}
2156 [-]: SETTABLE  R176 K39 R159; R176["Attribute"] := R159
2157 [-]: SETTABLE  R176 K28 K223; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_ZOffset"
2158 [-]: SETTABLE  R176 K224 K113; R176["PositionZ"] := true
2159 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2160 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2161 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2162 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2163 [-]: SETTABLE  R176 K183 K113; R176["IsValueSelector"] := true
2164 [-]: GETTABLE  R177 R169 K177; R177 := R169["blue"]
2165 [-]: DIV       R177 R177 K185; R177 := R177 / 255.000000
2166 [-]: SETTABLE  R176 K184 R177; R176["Value"] := R177
2167 [-]: SETTABLE  R176 K186 K24; R176["ValueChange"] := 0.000000
2168 [-]: SETTABLE  R176 K187 K99; R176["SliderActive"] := false
2169 [-]: SETTABLE  R176 K188 K24; R176["SliderX"] := 0.000000
2170 [-]: LOADBOOL  R177 1 0     ; R177 := true
2171 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2172 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2173 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2174 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2175 [-]: NEWTABLE  R176 0 6     ; R176 := {}
2176 [-]: SETTABLE  R176 K28 K225; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetPosition"
2177 [-]: SETTABLE  R176 K226 K113; R176["DefaultHolsterPosition"] := true
2178 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2179 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2180 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2181 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2182 [-]: GETUPVAL  R177 U12     ; R177 := U12
2183 [-]: SETTABLE  R176 K197 R177; R176["Callback"] := R177
2184 [-]: SETTABLE  R176 K145 K113; R176["HasBottomLine"] := true
2185 [-]: SETTABLE  R176 K198 K113; R176["HasMiddleLine"] := true
2186 [-]: LOADBOOL  R177 1 0     ; R177 := true
2187 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2188 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2189 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2190 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2191 [-]: NEWTABLE  R176 0 10    ; R176 := {}
2192 [-]: SETTABLE  R176 K39 R160; R176["Attribute"] := R160
2193 [-]: SETTABLE  R176 K28 K227; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RotationX"
2194 [-]: SETTABLE  R176 K228 K113; R176["RotationX"] := true
2195 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2196 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2197 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2198 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2199 [-]: SETTABLE  R176 K183 K113; R176["IsValueSelector"] := true
2200 [-]: GETTABLE  R177 R170 K178; R177 := R170["red"]
2201 [-]: DIV       R177 R177 K185; R177 := R177 / 255.000000
2202 [-]: SETTABLE  R176 K184 R177; R176["Value"] := R177
2203 [-]: SETTABLE  R176 K186 K24; R176["ValueChange"] := 0.000000
2204 [-]: SETTABLE  R176 K187 K99; R176["SliderActive"] := false
2205 [-]: SETTABLE  R176 K188 K24; R176["SliderX"] := 0.000000
2206 [-]: SETTABLE  R176 K36 K199; R176["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Rotation"
2207 [-]: LOADBOOL  R177 1 0     ; R177 := true
2208 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2209 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2210 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2211 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2212 [-]: NEWTABLE  R176 0 9     ; R176 := {}
2213 [-]: SETTABLE  R176 K39 R160; R176["Attribute"] := R160
2214 [-]: SETTABLE  R176 K28 K229; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RotationY"
2215 [-]: SETTABLE  R176 K230 K113; R176["RotationY"] := true
2216 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2217 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2218 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2219 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2220 [-]: SETTABLE  R176 K183 K113; R176["IsValueSelector"] := true
2221 [-]: GETTABLE  R177 R170 K180; R177 := R170["green"]
2222 [-]: DIV       R177 R177 K185; R177 := R177 / 255.000000
2223 [-]: SETTABLE  R176 K184 R177; R176["Value"] := R177
2224 [-]: SETTABLE  R176 K186 K24; R176["ValueChange"] := 0.000000
2225 [-]: SETTABLE  R176 K187 K99; R176["SliderActive"] := false
2226 [-]: SETTABLE  R176 K188 K24; R176["SliderX"] := 0.000000
2227 [-]: LOADBOOL  R177 1 0     ; R177 := true
2228 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2229 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2230 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2231 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2232 [-]: NEWTABLE  R176 0 9     ; R176 := {}
2233 [-]: SETTABLE  R176 K39 R160; R176["Attribute"] := R160
2234 [-]: SETTABLE  R176 K28 K231; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RotationZ"
2235 [-]: SETTABLE  R176 K232 K113; R176["RotationZ"] := true
2236 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2237 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2238 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2239 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2240 [-]: SETTABLE  R176 K183 K113; R176["IsValueSelector"] := true
2241 [-]: GETTABLE  R177 R170 K177; R177 := R170["blue"]
2242 [-]: DIV       R177 R177 K185; R177 := R177 / 255.000000
2243 [-]: SETTABLE  R176 K184 R177; R176["Value"] := R177
2244 [-]: SETTABLE  R176 K186 K24; R176["ValueChange"] := 0.000000
2245 [-]: SETTABLE  R176 K187 K99; R176["SliderActive"] := false
2246 [-]: SETTABLE  R176 K188 K24; R176["SliderX"] := 0.000000
2247 [-]: LOADBOOL  R177 1 0     ; R177 := true
2248 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2249 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2250 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2251 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2252 [-]: NEWTABLE  R176 0 6     ; R176 := {}
2253 [-]: SETTABLE  R176 K28 K233; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetRotation"
2254 [-]: SETTABLE  R176 K234 K113; R176["DefaultHolsterRotation"] := true
2255 [-]: GETGLOBAL R177 K31     ; R177 := mLists
2256 [-]: GETTABLE  R177 R177 K32; R177 := R177["mCosmeticsList"]
2257 [-]: GETTABLE  R177 R177 K210; R177 := R177["Hand"]
2258 [-]: SETTABLE  R176 K210 R177; R176["Hand"] := R177
2259 [-]: GETUPVAL  R177 U12     ; R177 := U12
2260 [-]: SETTABLE  R176 K197 R177; R176["Callback"] := R177
2261 [-]: SETTABLE  R176 K145 K113; R176["HasBottomLine"] := true
2262 [-]: SETTABLE  R176 K198 K113; R176["HasMiddleLine"] := true
2263 [-]: LOADBOOL  R177 1 0     ; R177 := true
2264 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2265 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2266 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2267 [-]: GETTABLE  R174 R174 K135; R174 := R174["mCurrLevel"]
2268 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2269 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2270 [-]: GETTABLE  R175 R175 K33; R175 := R175["DEFAULT"]
2271 [-]: EQ        1 R174 R175  ; if R174 == R175 then PC := 2289
2272 [-]: JMP       2289         ; PC := 2289
2273 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2274 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2275 [-]: GETTABLE  R174 R174 K135; R174 := R174["mCurrLevel"]
2276 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2277 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2278 [-]: GETTABLE  R175 R175 K76; R175 := R175["ATTACHMENTS"]
2279 [-]: EQ        1 R174 R175  ; if R174 == R175 then PC := 2289
2280 [-]: JMP       2289         ; PC := 2289
2281 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2282 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2283 [-]: GETTABLE  R174 R174 K135; R174 := R174["mCurrLevel"]
2284 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2285 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2286 [-]: GETTABLE  R175 R175 K161; R175 := R175["SYANDANAS"]
2287 [-]: EQ        0 R174 R175  ; if R174 ~= R175 then PC := 2406
2288 [-]: JMP       2406         ; PC := 2406
2289 [-]: TEST      R20 0        ; if not R20 then PC := 2302
2290 [-]: JMP       2302         ; PC := 2302
2291 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2292 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2293 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2294 [-]: NEWTABLE  R176 0 4     ; R176 := {}
2295 [-]: SETTABLE  R176 K98 K99 ; R176["Enabled"] := false
2296 [-]: SETTABLE  R176 K28 K235; R176["Title"] := "/Lotus/Language/Menu/Loadout_ColorLocked"
2297 [-]: SETTABLE  R176 K36 K166; R176["TopTitle"] := "/Lotus/Language/Menu/Loadout_CustomizeColor"
2298 [-]: SETTABLE  R176 K145 K113; R176["HasBottomLine"] := true
2299 [-]: LOADBOOL  R177 1 0     ; R177 := true
2300 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2301 [-]: JMP       2406         ; PC := 2406
2302 [-]: TEST      R140 0       ; if not R140 then PC := 2406
2303 [-]: JMP       2406         ; PC := 2406
2304 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2305 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2306 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2307 [-]: NEWTABLE  R176 0 3     ; R176 := {}
2308 [-]: SETTABLE  R176 K28 K236; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RandomColors"
2309 [-]: SETTABLE  R176 K237 K113; R176["RandomizeColors"] := true
2310 [-]: NOT       R177 R141    ; R177 := not R141
2311 [-]: SETTABLE  R176 K198 R177; R176["HasMiddleLine"] := R177
2312 [-]: LOADBOOL  R177 1 0     ; R177 := true
2313 [-]: CALL      R174 4 1     ; R174(R175,R176,R177)
2314 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2315 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2316 [-]: GETTABLE  R174 R174 K135; R174 := R174["mCurrLevel"]
2317 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2318 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2319 [-]: GETTABLE  R175 R175 K33; R175 := R175["DEFAULT"]
2320 [-]: EQ        0 R174 R175  ; if R174 ~= R175 then PC := 2366
2321 [-]: JMP       2366         ; PC := 2366
2322 [-]: GETGLOBAL R174 K31     ; R174 := mLists
2323 [-]: GETTABLE  R174 R174 K32; R174 := R174["mCosmeticsList"]
2324 [-]: SELF      R174 R174 K140; R175 := R174; R174 := R174[0xbad4316f]
2325 [-]: NEWTABLE  R176 0 2     ; R176 := {}
2326 [-]: SETTABLE  R176 K28 K238; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_DefaultColors"
2327 [-]: SETTABLE  R176 K239 K113; R176["DefaultColors"] := true
2328 [-]: LOADBOOL  R177 1 0     ; R177 := true
2329 [-]: CALL      R174 4 2     ; R174 := R174(R175,R176,R177)
2330 [-]: EQ        0 R4 K24     ; if R4 ~= 0.000000 then PC := 2336
2331 [-]: JMP       2336         ; PC := 2336
2332 [-]: EQ        1 R3 K24     ; if R3 == 0.000000 then PC := 2364
2333 [-]: JMP       2364         ; PC := 2364
2334 [-]: EQ        1 R3 K56     ; if R3 == 3.000000 then PC := 2364
2335 [-]: JMP       2364         ; PC := 2364
2336 [-]: EQ        0 R3 K49     ; if R3 ~= 8.000000 then PC := 2352
2337 [-]: JMP       2352         ; PC := 2352
2338 [-]: EQ        1 R4 K24     ; if R4 == 0.000000 then PC := 2352
2339 [-]: JMP       2352         ; PC := 2352
2340 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2341 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2342 [-]: SELF      R175 R175 K140; R176 := R175; R175 := R175[0xbad4316f]
2343 [-]: NEWTABLE  R177 0 4     ; R177 := {}
2344 [-]: SETTABLE  R177 K28 K240; R177["Title"] := "/Lotus/Language/Necromech/Cosmetics_CopyMechColors"
2345 [-]: SETTABLE  R177 K241 K113; R177["CopyColors"] := true
2346 [-]: GETUPVAL  R178 U14     ; R178 := U14
2347 [-]: SETTABLE  R177 K197 R178; R177["Callback"] := R178
2348 [-]: SETTABLE  R177 K145 K113; R177["HasBottomLine"] := true
2349 [-]: LOADBOOL  R178 1 0     ; R178 := true
2350 [-]: CALL      R175 4 1     ; R175(R176,R177,R178)
2351 [-]: JMP       2406         ; PC := 2406
2352 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2353 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2354 [-]: SELF      R175 R175 K140; R176 := R175; R175 := R175[0xbad4316f]
2355 [-]: NEWTABLE  R177 0 4     ; R177 := {}
2356 [-]: SETTABLE  R177 K28 K242; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_CopyWarframeColors"
2357 [-]: SETTABLE  R177 K241 K113; R177["CopyColors"] := true
2358 [-]: GETUPVAL  R178 U14     ; R178 := U14
2359 [-]: SETTABLE  R177 K197 R178; R177["Callback"] := R178
2360 [-]: SETTABLE  R177 K145 K113; R177["HasBottomLine"] := true
2361 [-]: LOADBOOL  R178 1 0     ; R178 := true
2362 [-]: CALL      R175 4 1     ; R175(R176,R177,R178)
2363 [-]: JMP       2406         ; PC := 2406
2364 [-]: SETTABLE  R174 K145 K113; R174["HasBottomLine"] := true
2365 [-]: JMP       2406         ; PC := 2406
2366 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2367 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2368 [-]: SELF      R175 R175 K140; R176 := R175; R175 := R175[0xbad4316f]
2369 [-]: NEWTABLE  R177 0 3     ; R177 := {}
2370 [-]: SETTABLE  R177 K28 K238; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_DefaultColors"
2371 [-]: SETTABLE  R177 K239 K113; R177["DefaultColors"] := true
2372 [-]: SETTABLE  R177 K145 R139; R177["HasBottomLine"] := R139
2373 [-]: LOADBOOL  R178 1 0     ; R178 := true
2374 [-]: CALL      R175 4 1     ; R175(R176,R177,R178)
2375 [-]: TEST      R139 1       ; if R139 then PC := 2406
2376 [-]: JMP       2406         ; PC := 2406
2377 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2378 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2379 [-]: GETTABLE  R175 R175 K135; R175 := R175["mCurrLevel"]
2380 [-]: GETGLOBAL R176 K31     ; R176 := mLists
2381 [-]: GETTABLE  R176 R176 K32; R176 := R176["mCosmeticsList"]
2382 [-]: GETTABLE  R176 R176 K161; R176 := R176["SYANDANAS"]
2383 [-]: EQ        0 R175 R176  ; if R175 ~= R176 then PC := 2395
2384 [-]: JMP       2395         ; PC := 2395
2385 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2386 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2387 [-]: SELF      R175 R175 K140; R176 := R175; R175 := R175[0xbad4316f]
2388 [-]: NEWTABLE  R177 0 3     ; R177 := {}
2389 [-]: SETTABLE  R177 K28 K243; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_CopyAttachmentColors"
2390 [-]: SETTABLE  R177 K241 K20; R177["CopyColors"] := 1.000000
2391 [-]: GETUPVAL  R178 U15     ; R178 := U15
2392 [-]: SETTABLE  R177 K197 R178; R177["Callback"] := R178
2393 [-]: LOADBOOL  R178 1 0     ; R178 := true
2394 [-]: CALL      R175 4 1     ; R175(R176,R177,R178)
2395 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2396 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2397 [-]: SELF      R175 R175 K140; R176 := R175; R175 := R175[0xbad4316f]
2398 [-]: NEWTABLE  R177 0 4     ; R177 := {}
2399 [-]: SETTABLE  R177 K28 K244; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_CopyColors"
2400 [-]: SETTABLE  R177 K241 K24; R177["CopyColors"] := 0.000000
2401 [-]: GETUPVAL  R178 U15     ; R178 := U15
2402 [-]: SETTABLE  R177 K197 R178; R177["Callback"] := R178
2403 [-]: SETTABLE  R177 K145 K113; R177["HasBottomLine"] := true
2404 [-]: LOADBOOL  R178 1 0     ; R178 := true
2405 [-]: CALL      R175 4 1     ; R175(R176,R177,R178)
2406 [-]: GETUPVAL  R175 U16     ; R175 := U16
2407 [-]: CALL      R175 1 1     ; R175()
2408 [-]: JMP       2411         ; PC := 2411
2409 [-]: GETUPVAL  R175 U16     ; R175 := U16
2410 [-]: CALL      R175 1 1     ; R175()
2411 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2412 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2413 [-]: GETGLOBAL R176 K31     ; R176 := mLists
2414 [-]: GETTABLE  R176 R176 K32; R176 := R176["mCosmeticsList"]
2415 [-]: GETTABLE  R176 R176 K246; R176 := R176["mOrigY"]
2416 [-]: GETUPVAL  R177 U1      ; R177 := U1
2417 [-]: GETTABLE  R177 R177 K51; R177 := R177[0x06d055f9]
2418 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2419 [-]: GETTABLE  R178 R178 K32; R178 := R178["mCosmeticsList"]
2420 [-]: GETTABLE  R178 R178 K135; R178 := R178["mCurrLevel"]
2421 [-]: GETGLOBAL R179 K31     ; R179 := mLists
2422 [-]: GETTABLE  R179 R179 K32; R179 := R179["mCosmeticsList"]
2423 [-]: GETTABLE  R179 R179 K33; R179 := R179["DEFAULT"]
2424 [-]: EQ        1 R178 R179  ; if R178 == R179 then PC := 2427
2425 [-]: JMP       2427         ; PC := 2427
2426 [-]: LOADBOOL  R178 0 1     ; R178 := false; PC := 2427
2427 [-]: LOADBOOL  R178 1 0     ; R178 := true
2428 [-]: LOADK     R179 -20     ; R179 := -20.000000
2429 [-]: LOADK     R180 -60     ; R180 := -60.000000
2430 [-]: CALL      R177 4 2     ; R177 := R177(R178,R179,R180)
2431 [-]: ADD       R176 R176 R177; R176 := R176 + R177
2432 [-]: SETTABLE  R175 K245 R176; R175["mInitialY"] := R176
2433 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2434 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2435 [-]: SELF      R175 R175 K247; R176 := R175; R175 := R175[0x71e9ac81]
2436 [-]: CLOSURE   R177 5       ; R177 := closure(Function #170.6)
2437 [-]: CALL      R175 3 1     ; R175(R176,R177)
2438 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2439 [-]: GETTABLE  R175 R175 K248; R175 := R175["mCosmeticsScrollBar"]
2440 [-]: GETGLOBAL R176 K31     ; R176 := mLists
2441 [-]: GETTABLE  R176 R176 K248; R176 := R176["mCosmeticsScrollBar"]
2442 [-]: GETTABLE  R176 R176 K250; R176 := R176["mInitHeight"]
2443 [-]: GETUPVAL  R177 U1      ; R177 := U1
2444 [-]: GETTABLE  R177 R177 K51; R177 := R177[0x06d055f9]
2445 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2446 [-]: GETTABLE  R178 R178 K32; R178 := R178["mCosmeticsList"]
2447 [-]: GETTABLE  R178 R178 K135; R178 := R178["mCurrLevel"]
2448 [-]: GETGLOBAL R179 K31     ; R179 := mLists
2449 [-]: GETTABLE  R179 R179 K32; R179 := R179["mCosmeticsList"]
2450 [-]: GETTABLE  R179 R179 K33; R179 := R179["DEFAULT"]
2451 [-]: EQ        1 R178 R179  ; if R178 == R179 then PC := 2454
2452 [-]: JMP       2454         ; PC := 2454
2453 [-]: LOADBOOL  R178 0 1     ; R178 := false; PC := 2454
2454 [-]: LOADBOOL  R178 1 0     ; R178 := true
2455 [-]: LOADK     R179 0       ; R179 := 0.000000
2456 [-]: LOADK     R180 40      ; R180 := 40.000000
2457 [-]: CALL      R177 4 2     ; R177 := R177(R178,R179,R180)
2458 [-]: ADD       R176 R176 R177; R176 := R176 + R177
2459 [-]: SETTABLE  R175 K249 R176; R175["mHeight"] := R176
2460 [-]: GETGLOBAL R175 K0      ; R175 := 0xae91e43b
2461 [-]: SELF      R175 R175 K251; R176 := R175; R175 := R175[0x67bc869f]
2462 [-]: LOADK     R177 K252    ; R177 := "CosmeticsMenuScrollBar"
2463 [-]: LOADK     R178 1       ; R178 := 1.000000
2464 [-]: GETGLOBAL R179 K31     ; R179 := mLists
2465 [-]: GETTABLE  R179 R179 K32; R179 := R179["mCosmeticsList"]
2466 [-]: GETTABLE  R179 R179 K253; R179 := R179["mInitListYPos"]
2467 [-]: GETGLOBAL R180 K31     ; R180 := mLists
2468 [-]: GETTABLE  R180 R180 K32; R180 := R180["mCosmeticsList"]
2469 [-]: GETTABLE  R180 R180 K245; R180 := R180["mInitialY"]
2470 [-]: ADD       R179 R179 R180; R179 := R179 + R180
2471 [-]: SUB       R179 R179 K254; R179 := R179 - 30.000000
2472 [-]: CALL      R175 5 1     ; R175(R176,R177,R178,R179)
2473 [-]: GETGLOBAL R175 K31     ; R175 := mLists
2474 [-]: GETTABLE  R175 R175 K32; R175 := R175["mCosmeticsList"]
2475 [-]: SELF      R175 R175 K255; R176 := R175; R175 := R175[0x68e36b8d]
2476 [-]: NEWTABLE  R177 0 1     ; R177 := {}
2477 [-]: LOADK     R178 K256    ; R178 := "mIndex"
2478 [-]: GETGLOBAL R179 K31     ; R179 := mLists
2479 [-]: GETTABLE  R179 R179 K32; R179 := R179["mCosmeticsList"]
2480 [-]: GETTABLE  R179 R179 K159; R179 := R179["mElements"]
2481 [-]: LEN       R179 R179    ; R179 := # R179
2482 [-]: LOADK     R180 1       ; R180 := 1.000000
2483 [-]: ADD       R179 R179 R180; R179 := R179 + R180
2484 [-]: SETTABLE  R177 R178 R179; R177[R178] := R179
2485 [-]: CALL      R175 3 2     ; R175 := R175(R176,R177)
2486 [-]: GETGLOBAL R176 K31     ; R176 := mLists
2487 [-]: GETTABLE  R176 R176 K32; R176 := R176["mCosmeticsList"]
2488 [-]: GETTABLE  R176 R176 K245; R176 := R176["mInitialY"]
2489 [-]: SUB       R175 R175 R176; R175 := R175 - R176
2490 [-]: LOADK     R176 30      ; R176 := 30.000000
2491 [-]: ADD       R175 R175 R176; R175 := R175 + R176
2492 [-]: GETGLOBAL R176 K31     ; R176 := mLists
2493 [-]: GETTABLE  R176 R176 K248; R176 := R176["mCosmeticsScrollBar"]
2494 [-]: GETTABLE  R176 R176 K249; R176 := R176["mHeight"]
2495 [-]: DIV       R176 R176 R175; R176 := R176 / R175
2496 [-]: LOADK     R177 1       ; R177 := 1.000000
2497 [-]: LT        1 R176 R177  ; if R176 < R177 then PC := 2500
2498 [-]: JMP       2500         ; PC := 2500
2499 [-]: LOADBOOL  R177 0 1     ; R177 := false; PC := 2500
2500 [-]: LOADBOOL  R177 1 0     ; R177 := true
2501 [-]: GETGLOBAL R178 K0      ; R178 := 0xae91e43b
2502 [-]: SELF      R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
2503 [-]: LOADK     R180 K252    ; R180 := "CosmeticsMenuScrollBar"
2504 [-]: LOADK     R181 11      ; R181 := 11.000000
2505 [-]: MOVE      R182 R177    ; R182 := R177
2506 [-]: CALL      R178 5 1     ; R178(R179,R180,R181,R182)
2507 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2508 [-]: GETTABLE  R178 R178 K248; R178 := R178["mCosmeticsScrollBar"]
2509 [-]: LOADK     R179 K257    ; R179 := "mTotalHeight"
2510 [-]: SETTABLE  R178 R179 R175; R178[R179] := R175
2511 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2512 [-]: GETTABLE  R178 R178 K248; R178 := R178["mCosmeticsScrollBar"]
2513 [-]: LOADK     R179 K258    ; R179 := "mVisibleProp"
2514 [-]: GETUPVAL  R180 U1      ; R180 := U1
2515 [-]: GETTABLE  R180 R180 K51; R180 := R180[0x06d055f9]
2516 [-]: MOVE      R181 R177    ; R181 := R177
2517 [-]: MOVE      R182 R176    ; R182 := R176
2518 [-]: LOADK     R183 0       ; R183 := 0.500000
2519 [-]: CALL      R180 4 2     ; R180 := R180(R181,R182,R183)
2520 [-]: SETTABLE  R178 R179 R180; R178[R179] := R180
2521 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2522 [-]: GETTABLE  R178 R178 K248; R178 := R178["mCosmeticsScrollBar"]
2523 [-]: LOADK     R180 K259    ; R180 := true
2524 [-]: SELF      R178 R178 R180; R179 := R178; R178 := R178[R180]
2525 [-]: LOADK     R180 0       ; R180 := 0.000000
2526 [-]: LOADBOOL  R181 0 0     ; R181 := false
2527 [-]: LOADBOOL  R182 1 0     ; R182 := true
2528 [-]: CALL      R178 5 1     ; R178(R179,R180,R181,R182)
2529 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2530 [-]: GETTABLE  R178 R178 K248; R178 := R178["mCosmeticsScrollBar"]
2531 [-]: LOADK     R180 K260    ; R180 := true
2532 [-]: SELF      R178 R178 R180; R179 := R178; R178 := R178[R180]
2533 [-]: CALL      R178 2 1     ; R178(R179)
2534 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2535 [-]: GETTABLE  R178 R178 K248; R178 := R178["mCosmeticsScrollBar"]
2536 [-]: LOADK     R179 K261    ; R179 := "mScrollStep"
2537 [-]: LOADK     R180 1       ; R180 := 1.000000
2538 [-]: SUB       R180 R180 R176; R180 := R180 - R176
2539 [-]: GETGLOBAL R181 K31     ; R181 := mLists
2540 [-]: GETTABLE  R181 R181 K32; R181 := R181["mCosmeticsList"]
2541 [-]: GETTABLE  R181 R181 K159; R181 := R181["mElements"]
2542 [-]: LEN       R181 R181    ; R181 := # R181
2543 [-]: LOADK     R182 1       ; R182 := 1.000000
2544 [-]: ADD       R181 R181 R182; R181 := R181 + R182
2545 [-]: MUL       R180 R180 R181; R180 := R180 * R181
2546 [-]: LOADK     R181 1       ; R181 := 1.000000
2547 [-]: DIV       R180 R181 R180; R180 := R181 / R180
2548 [-]: LOADK     R181 K262    ; R181 := 0.050000
2549 [-]: ADD       R180 R180 R181; R180 := R180 + R181
2550 [-]: SETTABLE  R178 R179 R180; R178[R179] := R180
2551 [-]: GETGLOBAL R178 K31     ; R178 := mLists
2552 [-]: GETTABLE  R178 R178 K248; R178 := R178["mCosmeticsScrollBar"]
2553 [-]: LOADK     R180 K263    ; R180 := true
2554 [-]: SELF      R178 R178 R180; R179 := R178; R178 := R178[R180]
2555 [-]: MOVE      R180 R177    ; R180 := R177
2556 [-]: CALL      R178 3 1     ; R178(R179,R180)
2557 [-]: GETUPVAL  R178 U17     ; R178 := U17
2558 [-]: CALL      R178 1 1     ; R178()
2559 [-]: GETUPVAL  R178 U18     ; R178 := U18
2560 [-]: LOADK     R180 K264    ; R180 := true
2561 [-]: SELF      R178 R178 R180; R179 := R178; R178 := R178[R180]
2562 [-]: CLOSURE   R180 6       ; R180 := closure(Function #170.7)
2563 [-]: CALL      R178 3 1     ; R178(R179,R180)
2564 [-]: GETGLOBAL R178 K0      ; R178 := 0xae91e43b
2565 [-]: SELF      R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
2566 [-]: LOADK     R180 K265    ; R180 := "MenuPanel.Left"
2567 [-]: LOADK     R181 11      ; R181 := 11.000000
2568 [-]: GETGLOBAL R182 K206    ; R182 := 0x34291f5c
2569 [-]: LOADK     R183 K266    ; R183 := true
2570 [-]: GETTABLE  R182 R182 R183; R182 := R182[R183]
2571 [-]: CALL      R182 1 2     ; R182 := R182()
2572 [-]: TEST      R182 0       ; if not R182 then PC := 2584
2573 [-]: JMP       2584         ; PC := 2584
2574 [-]: GETGLOBAL R182 K31     ; R182 := mLists
2575 [-]: GETTABLE  R182 R182 K32; R182 := R182["mCosmeticsList"]
2576 [-]: GETTABLE  R182 R182 K135; R182 := R182["mCurrLevel"]
2577 [-]: GETGLOBAL R183 K31     ; R183 := mLists
2578 [-]: GETTABLE  R183 R183 K32; R183 := R183["mCosmeticsList"]
2579 [-]: GETTABLE  R183 R183 K33; R183 := R183["DEFAULT"]
2580 [-]: EQ        1 R182 R183  ; if R182 == R183 then PC := 2583
2581 [-]: JMP       2583         ; PC := 2583
2582 [-]: LOADBOOL  R182 0 1     ; R182 := false; PC := 2583
2583 [-]: LOADBOOL  R182 1 0     ; R182 := true
2584 [-]: CALL      R178 5 1     ; R178(R179,R180,R181,R182)
2585 [-]: GETGLOBAL R178 K0      ; R178 := 0xae91e43b
2586 [-]: SELF      R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
2587 [-]: LOADK     R180 K267    ; R180 := "MenuPanel.Right"
2588 [-]: LOADK     R181 11      ; R181 := 11.000000
2589 [-]: GETGLOBAL R182 K206    ; R182 := 0x34291f5c
2590 [-]: LOADK     R183 K266    ; R183 := true
2591 [-]: GETTABLE  R182 R182 R183; R182 := R182[R183]
2592 [-]: CALL      R182 1 2     ; R182 := R182()
2593 [-]: TEST      R182 0       ; if not R182 then PC := 2605
2594 [-]: JMP       2605         ; PC := 2605
2595 [-]: GETGLOBAL R182 K31     ; R182 := mLists
2596 [-]: GETTABLE  R182 R182 K32; R182 := R182["mCosmeticsList"]
2597 [-]: GETTABLE  R182 R182 K135; R182 := R182["mCurrLevel"]
2598 [-]: GETGLOBAL R183 K31     ; R183 := mLists
2599 [-]: GETTABLE  R183 R183 K32; R183 := R183["mCosmeticsList"]
2600 [-]: GETTABLE  R183 R183 K33; R183 := R183["DEFAULT"]
2601 [-]: EQ        1 R182 R183  ; if R182 == R183 then PC := 2604
2602 [-]: JMP       2604         ; PC := 2604
2603 [-]: LOADBOOL  R182 0 1     ; R182 := false; PC := 2604
2604 [-]: LOADBOOL  R182 1 0     ; R182 := true
2605 [-]: CALL      R178 5 1     ; R178(R179,R180,R181,R182)
2606 [-]: GETGLOBAL R178 K0      ; R178 := 0xae91e43b
2607 [-]: SELF      R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
2608 [-]: LOADK     R180 K268    ; R180 := "MenuPanel.LeftArrow"
2609 [-]: LOADK     R181 11      ; R181 := 11.000000
2610 [-]: GETGLOBAL R182 K206    ; R182 := 0x34291f5c
2611 [-]: LOADK     R183 K266    ; R183 := true
2612 [-]: GETTABLE  R182 R182 R183; R182 := R182[R183]
2613 [-]: CALL      R182 1 2     ; R182 := R182()
2614 [-]: TEST      R182 1       ; if R182 then PC := 2624
2615 [-]: JMP       2624         ; PC := 2624
2616 [-]: GETGLOBAL R182 K31     ; R182 := mLists
2617 [-]: GETTABLE  R182 R182 K32; R182 := R182["mCosmeticsList"]
2618 [-]: GETTABLE  R182 R182 K135; R182 := R182["mCurrLevel"]
2619 [-]: GETGLOBAL R183 K31     ; R183 := mLists
2620 [-]: GETTABLE  R183 R183 K32; R183 := R183["mCosmeticsList"]
2621 [-]: GETTABLE  R183 R183 K33; R183 := R183["DEFAULT"]
2622 [-]: EQ        1 R182 R183  ; if R182 == R183 then PC := 2625
2623 [-]: JMP       2625         ; PC := 2625
2624 [-]: LOADBOOL  R182 0 1     ; R182 := false; PC := 2625
2625 [-]: LOADBOOL  R182 1 0     ; R182 := true
2626 [-]: CALL      R178 5 1     ; R178(R179,R180,R181,R182)
2627 [-]: GETGLOBAL R178 K0      ; R178 := 0xae91e43b
2628 [-]: SELF      R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
2629 [-]: LOADK     R180 K269    ; R180 := "MenuPanel.RightArrow"
2630 [-]: LOADK     R181 11      ; R181 := 11.000000
2631 [-]: GETGLOBAL R182 K206    ; R182 := 0x34291f5c
2632 [-]: LOADK     R183 K266    ; R183 := true
2633 [-]: GETTABLE  R182 R182 R183; R182 := R182[R183]
2634 [-]: CALL      R182 1 2     ; R182 := R182()
2635 [-]: TEST      R182 1       ; if R182 then PC := 2645
2636 [-]: JMP       2645         ; PC := 2645
2637 [-]: GETGLOBAL R182 K31     ; R182 := mLists
2638 [-]: GETTABLE  R182 R182 K32; R182 := R182["mCosmeticsList"]
2639 [-]: GETTABLE  R182 R182 K135; R182 := R182["mCurrLevel"]
2640 [-]: GETGLOBAL R183 K31     ; R183 := mLists
2641 [-]: GETTABLE  R183 R183 K32; R183 := R183["mCosmeticsList"]
2642 [-]: GETTABLE  R183 R183 K33; R183 := R183["DEFAULT"]
2643 [-]: EQ        1 R182 R183  ; if R182 == R183 then PC := 2646
2644 [-]: JMP       2646         ; PC := 2646
2645 [-]: LOADBOOL  R182 0 1     ; R182 := false; PC := 2646
2646 [-]: LOADBOOL  R182 1 0     ; R182 := true
2647 [-]: CALL      R178 5 1     ; R178(R179,R180,R181,R182)
2648 [-]: GETGLOBAL R178 K0      ; R178 := 0xae91e43b
2649 [-]: SELF      R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
2650 [-]: LOADK     R180 K270    ; R180 := "MenuPanel.Bg"
2651 [-]: LOADK     R181 11      ; R181 := 11.000000
2652 [-]: GETGLOBAL R182 K31     ; R182 := mLists
2653 [-]: GETTABLE  R182 R182 K32; R182 := R182["mCosmeticsList"]
2654 [-]: GETTABLE  R182 R182 K135; R182 := R182["mCurrLevel"]
2655 [-]: GETGLOBAL R183 K31     ; R183 := mLists
2656 [-]: GETTABLE  R183 R183 K32; R183 := R183["mCosmeticsList"]
2657 [-]: GETTABLE  R183 R183 K33; R183 := R183["DEFAULT"]
2658 [-]: EQ        1 R182 R183  ; if R182 == R183 then PC := 2661
2659 [-]: JMP       2661         ; PC := 2661
2660 [-]: LOADBOOL  R182 0 1     ; R182 := false; PC := 2661
2661 [-]: LOADBOOL  R182 1 0     ; R182 := true
2662 [-]: CALL      R178 5 1     ; R178(R179,R180,R181,R182)
2663 [-]: RETURN    R0 1         ; return 


; Function #170.1:
;
; Name:            
; Defined at line: 11267
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mCosmeticsLabels
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Default"]
  4 [-]: GETGLOBAL R2 K0        ; R2 := mCosmeticsLabels
  5 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Level"]
  7 [-]: GETGLOBAL R3 K0        ; R3 := mCosmeticsLabels
  8 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["TopTitle"]
 10 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 11 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 12 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 15 [-]: GETUPVAL  R5 U1        ; R5 := U1
 16 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 17 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 76
 18 [-]: JMP       76           ; PC := 76
 19 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 20 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 21 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 22 [-]: GETUPVAL  R5 U0        ; R5 := U0
 23 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 24 [-]: GETUPVAL  R5 U1        ; R5 := U1
 25 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 26 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Title"]
 27 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 30 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 31 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 32 [-]: GETUPVAL  R5 U0        ; R5 := U0
 33 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 34 [-]: GETUPVAL  R5 U1        ; R5 := U1
 35 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 36 [-]: GETTABLE  R1 R4 K6     ; R1 := R4["Title"]
 37 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 38 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 39 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 40 [-]: GETUPVAL  R5 U0        ; R5 := U0
 41 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 42 [-]: GETUPVAL  R5 U1        ; R5 := U1
 43 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Level"]
 45 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 55
 46 [-]: JMP       55           ; PC := 55
 47 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 48 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 49 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 50 [-]: GETUPVAL  R5 U0        ; R5 := U0
 51 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 52 [-]: GETUPVAL  R5 U1        ; R5 := U1
 53 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 54 [-]: GETTABLE  R2 R4 K2     ; R2 := R4["Level"]
 55 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 56 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 57 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 58 [-]: GETUPVAL  R5 U0        ; R5 := U0
 59 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 60 [-]: GETUPVAL  R5 U1        ; R5 := U1
 61 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 62 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["TopTitle"]
 63 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 76
 64 [-]: JMP       76           ; PC := 76
 65 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 66 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 67 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 68 [-]: GETUPVAL  R5 U0        ; R5 := U0
 69 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 70 [-]: GETUPVAL  R5 U1        ; R5 := U1
 71 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 72 [-]: GETTABLE  R3 R4 K3     ; R3 := R4["TopTitle"]
 73 [-]: EQ        0 R3 K7      ; if R3 ~= "" then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: LOADNIL   R3 R3        ; R3 := nil
 76 [-]: GETUPVAL  R4 U2        ; R4 := U2
 77 [-]: NEWTABLE  R5 0 5       ; R5 := {}
 78 [-]: SETTABLE  R5 K6 R1     ; R5["Title"] := R1
 79 [-]: SETTABLE  R5 K8 R0     ; R5["Slot"] := R0
 80 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 81 [-]: SETTABLE  R5 K9 R6     ; R5["Items"] := R6
 82 [-]: SETTABLE  R5 K2 R2     ; R5["Level"] := R2
 83 [-]: SETTABLE  R5 K3 R3     ; R5["TopTitle"] := R3
 84 [-]: SETTABLE  R4 R0 R5     ; R4[R0] := R5
 85 [-]: GETGLOBAL R4 K0        ; R4 := mCosmeticsLabels
 86 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 87 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Overrides"]
 88 [-]: GETUPVAL  R5 U0        ; R5 := U0
 89 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 90 [-]: GETUPVAL  R5 U1        ; R5 := U1
 91 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 92 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 116
 93 [-]: JMP       116          ; PC := 116
 94 [-]: GETUPVAL  R4 U2        ; R4 := U2
 95 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 96 [-]: GETGLOBAL R5 K0        ; R5 := mCosmeticsLabels
 97 [-]: GETTABLE  R5 R5 R0     ; R5 := R5[R0]
 98 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["Overrides"]
 99 [-]: GETUPVAL  R6 U0        ; R6 := U0
100 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
101 [-]: GETUPVAL  R6 U1        ; R6 := U1
102 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
103 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["Attribute"]
104 [-]: SETTABLE  R4 K10 R5    ; R4["Attribute"] := R5
105 [-]: GETUPVAL  R4 U2        ; R4 := U2
106 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
107 [-]: GETGLOBAL R5 K0        ; R5 := mCosmeticsLabels
108 [-]: GETTABLE  R5 R5 R0     ; R5 := R5[R0]
109 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["Overrides"]
110 [-]: GETUPVAL  R6 U0        ; R6 := U0
111 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
112 [-]: GETUPVAL  R6 U1        ; R6 := U1
113 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
114 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["PetTrait"]
115 [-]: SETTABLE  R4 K11 R5    ; R4["PetTrait"] := R5
116 [-]: RETURN    R0 1         ; return 


; Function #170.2:
;
; Name:            
; Defined at line: 11546
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := mCosmeticsLabels
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Slot"]
  3 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Id"]
  5 [-]: GETGLOBAL R3 K0        ; R3 := mCosmeticsLabels
  6 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Slot"]
  7 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Id"]
  9 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Title"]
 12 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["Title"]
 13 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 16
 16 [-]: LOADBOOL  R2 1 0       ; R2 := true
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: JMP       32           ; PC := 32
 19 [-]: GETGLOBAL R2 K0        ; R2 := mCosmeticsLabels
 20 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Slot"]
 21 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 22 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Id"]
 23 [-]: GETGLOBAL R3 K0        ; R3 := mCosmeticsLabels
 24 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["Slot"]
 25 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 26 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Id"]
 27 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 30
 30 [-]: LOADBOOL  R2 1 0       ; R2 := true
 31 [-]: RETURN    R2 2         ; return R2
 32 [-]: RETURN    R0 1         ; return 


; Function #170.3:
;
; Name:            
; Defined at line: 11559
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mCurrentLoadout
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x2abbe722]
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  7 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 49
  8 [-]: JMP       49           ; PC := 49
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K4        ; R3 := mInventory
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 49
 13 [-]: JMP       49           ; PC := 49
 14 [-]: NOT       R2 R0        ; R2 := not R0
 15 [-]: SETTABLE  R1 K5 R2     ; R1["mHiddenWhenHolstered"] := R2
 16 [-]: GETGLOBAL R2 K0        ; R2 := mCurrentLoadout
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 19 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xffca321e]
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 23 [-]: GETGLOBAL R2 K4        ; R2 := mInventory
 24 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x6beb8ae1]
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: GETGLOBAL R5 K0        ; R5 := mCurrentLoadout
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 29 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 30 [-]: GETGLOBAL R2 K8        ; R2 := 0x25d99d89
 31 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x400b84a1]
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETGLOBAL R5 K0        ; R5 := mCurrentLoadout
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 36 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 37 [-]: GETUPVAL  R2 U2        ; R2 := U2
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETUPVAL  R4 U1        ; R4 := U1
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2[0x99fddba0]
 47 [-]: GETTABLE  R5 R1 K5     ; R5 := R1["mHiddenWhenHolstered"]
 48 [-]: CALL      R3 3 1       ; R3(R4,R5)
 49 [-]: RETURN    R0 1         ; return 


; Function #170.4:
;
; Name:            
; Defined at line: 11634
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Element"]
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Customization"]
  4 [-]: SETTABLE  R1 K3 R0     ; R1["mAllowUglyMode"] := R0
  5 [-]: GETGLOBAL R1 K0        ; R1 := mSelected
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Element"]
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["EquippedItem"]
  8 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xaa041663]
  9 [-]: GETGLOBAL R3 K0        ; R3 := mSelected
 10 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Element"]
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Customization"]
 12 [-]: GETGLOBAL R4 K0        ; R4 := mSelected
 13 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Element"]
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mCustSlot"]
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETGLOBAL R1 K7        ; R1 := mInventory
 17 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x9b051033]
 18 [-]: GETGLOBAL R3 K0        ; R3 := mSelected
 19 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Element"]
 20 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UID"]
 21 [-]: GETGLOBAL R4 K0        ; R4 := mSelected
 22 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Element"]
 23 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mCustSlot"]
 24 [-]: GETGLOBAL R5 K0        ; R5 := mSelected
 25 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Element"]
 26 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Customization"]
 27 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: GETUPVAL  R2 U1        ; R2 := U1
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: GETGLOBAL R2 K10       ; R2 := 0x7b998233
 33 [-]: MOVE      R3 R1        ; R3 := R1
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 1         ; if R2 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xaa041663]
 38 [-]: GETGLOBAL R4 K0        ; R4 := mSelected
 39 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Element"]
 40 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Customization"]
 41 [-]: CALL      R2 3 1       ; R2(R3,R4)
 42 [-]: GETGLOBAL R2 K11       ; R2 := 0x25d99d89
 43 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0x400b84a1]
 44 [-]: GETGLOBAL R4 K0        ; R4 := mSelected
 45 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Element"]
 46 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["LoadOutType"]
 47 [-]: GETGLOBAL R5 K14       ; R5 := mCurrentLoadout
 48 [-]: GETGLOBAL R6 K0        ; R6 := mSelected
 49 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Element"]
 50 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["LoadOutType"]
 51 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 52 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 53 [-]: GETUPVAL  R2 U3        ; R2 := U3
 54 [-]: GETUPVAL  R3 U4        ; R3 := U4
 55 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["Current"]
 56 [-]: EQ        1 R3 K17     ; if R3 == 2.000000 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 59
 59 [-]: LOADBOOL  R3 1 0       ; R3 := true
 60 [-]: CALL      R2 2 1       ; R2(R3)
 61 [-]: RETURN    R0 1         ; return 


; Function #170.5:
;
; Name:            
; Defined at line: 11680
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  6 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 10 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R2 K1        ; R2 := mLists
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCosmeticsList"]
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xbad4316f]
 15 [-]: GETUPVAL  R4 U2        ; R4 := U2
 16 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 17 [-]: LOADBOOL  R5 1 0       ; R5 := true
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #170.6:
;
; Name:            
; Defined at line: 11888
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: SETGLOBAL R0 K0        ; mInputBlocked := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #170.7:
;
; Name:            
; Defined at line: 11910
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xaade900e]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 11        ; R4 := 11.000000
  5 [-]: GETGLOBAL R5 K3        ; R5 := mLists
  6 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mCosmeticsList"]
  7 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mCurrLevel"]
  8 [-]: GETGLOBAL R6 K3        ; R6 := mLists
  9 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mCosmeticsList"]
 10 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["DEFAULT"]
 11 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 14
 14 [-]: LOADBOOL  R5 1 0       ; R5 := true
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 11921
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mLists
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCosmeticsList"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xca30dfb6]
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 14 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["Value"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R2 K0        ; R2 := mLists
 19 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCosmeticsList"]
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0xaf2cb9be]
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 1       ; R2(R3)
 23 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 11928
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mLists
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCosmeticsList"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xca30dfb6]
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 24
 12 [-]: JMP       24           ; PC := 24
 13 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["SliderActive"]
 14 [-]: TEST      R2 1         ; if R2 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: SETTABLE  R1 K5 K6     ; R1["SliderActive"] := true
 17 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 18 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x91a24e4b]
 19 [-]: LOADK     R4 K10       ; R4 := "_root"
 20 [-]: LOADK     R5 25        ; R5 := 25.000000
 21 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 22 [-]: SETTABLE  R1 K7 R2     ; R1["SliderX"] := R2
 23 [-]: SETUPVAL  R0 U0        ; U82 := R0
 24 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 11938
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := mLists
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCosmeticsList"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xca30dfb6]
  4 [-]: GETGLOBAL R4 K3        ; R4 := 0x03f57322
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  7 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
  9 [-]: MOVE      R4 R2        ; R4 := R2
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 39
 12 [-]: JMP       39           ; PC := 39
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 14 [-]: GETTABLE  R4 R2 K5     ; R4 := R2["Value"]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 39
 17 [-]: JMP       39           ; PC := 39
 18 [-]: GETTABLE  R3 R2 K5     ; R3 := R2["Value"]
 19 [-]: EQ        1 R3 R1      ; if R3 == R1 then PC := 39
 20 [-]: JMP       39           ; PC := 39
 21 [-]: SETTABLE  R2 K5 R1     ; R2["Value"] := R1
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETUPVAL  R4 U1        ; R4 := U1
 24 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["FALSE"]
 25 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETGLOBAL R3 K0        ; R3 := mLists
 28 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mCosmeticsList"]
 29 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mCurrLevel"]
 30 [-]: GETGLOBAL R4 K0        ; R4 := mLists
 31 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mCosmeticsList"]
 32 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["HOLSTER_CUSTOMIZATION"]
 33 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: LOADBOOL  R3 1 0       ; R3 := true
 36 [-]: SETUPVAL  R3 U2        ; U82 := R2
 37 [-]: GETGLOBAL R3 K9        ; R3 := _T
 38 [-]: SETTABLE  R3 K10 K11   ; R3["LoadoutSaveRequired"] := true
 39 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 11952
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 11956
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := mLists
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCosmeticsList"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xca30dfb6]
  4 [-]: GETGLOBAL R4 K3        ; R4 := 0x03f57322
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  7 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
  9 [-]: MOVE      R4 R2        ; R4 := R2
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 50
 12 [-]: JMP       50           ; PC := 50
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 14 [-]: GETTABLE  R4 R2 K5     ; R4 := R2["Value"]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 50
 17 [-]: JMP       50           ; PC := 50
 18 [-]: SETTABLE  R2 K6 R1     ; R2["ValueChange"] := R1
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: GETGLOBAL R5 K7        ; R5 := 0x42dcc9f5
 22 [-]: GETTABLE  R6 R2 K5     ; R6 := R2["Value"]
 23 [-]: SUB       R6 R6 K8     ; R6 := R6 - 0.010000
 24 [-]: LOADK     R7 0         ; R7 := 0.000000
 25 [-]: LOADK     R8 1         ; R8 := 1.000000
 26 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 27 [-]: CALL      R3 0 1       ; R3(R4,...)
 28 [-]: LT        0 K9 R1      ; if 0.000000 >= R1 then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETGLOBAL R3 K10       ; R3 := 0xae91e43b
 31 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xf64b7262]
 32 [-]: GETTABLE  R5 R2 K12    ; R5 := R2["mClipName"]
 33 [-]: LOADK     R6 K13       ; R6 := "ValueSelector.RightArrow"
 34 [-]: LOADK     R7 9         ; R7 := 9.000000
 35 [-]: GETGLOBAL R8 K14       ; R8 := 0x0032441c
 36 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["UIColor_White"]
 37 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 38 [-]: JMP       49           ; PC := 49
 39 [-]: LT        0 R1 K9      ; if R1 >= 0.000000 then PC := 49
 40 [-]: JMP       49           ; PC := 49
 41 [-]: GETGLOBAL R3 K10       ; R3 := 0xae91e43b
 42 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xf64b7262]
 43 [-]: GETTABLE  R5 R2 K12    ; R5 := R2["mClipName"]
 44 [-]: LOADK     R6 K16       ; R6 := "ValueSelector.LeftArrow"
 45 [-]: LOADK     R7 9         ; R7 := 9.000000
 46 [-]: GETGLOBAL R8 K14       ; R8 := 0x0032441c
 47 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["UIColor_White"]
 48 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 49 [-]: SETUPVAL  R0 U1        ; U82 := R1
 50 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 11970
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 255       ; R1 := 255.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := mLists
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCosmeticsList"]
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xca30dfb6]
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x03f57322
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  8 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  9 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 1         ; if R3 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R3 R2 K5     ; R3 := R2["NumOptions"]
 15 [-]: EQ        1 R3 K6      ; if R3 == nil then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: GETTABLE  R1 R2 K5     ; R1 := R2["NumOptions"]
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: DIV       R5 K7 R1     ; R5 := 1.000000 / R1
 21 [-]: UNM       R5 R5        ; R5 := ^ R5
 22 [-]: CALL      R3 3 1       ; R3(R4,R5)
 23 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 11980
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 255       ; R1 := 255.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := mLists
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCosmeticsList"]
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xca30dfb6]
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x03f57322
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  8 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  9 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 1         ; if R3 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R3 R2 K5     ; R3 := R2["NumOptions"]
 15 [-]: EQ        1 R3 K6      ; if R3 == nil then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: GETTABLE  R1 R2 K5     ; R1 := R2["NumOptions"]
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: DIV       R5 K7 R1     ; R5 := 1.000000 / R1
 21 [-]: CALL      R3 3 1       ; R3(R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 11990
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := mLists
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCosmeticsList"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xca30dfb6]
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 83
 12 [-]: JMP       83           ; PC := 83
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 14 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["Value"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 83
 17 [-]: JMP       83           ; PC := 83
 18 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 19 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x91a24e4b]
 20 [-]: LOADK     R4 K8        ; R4 := "_root"
 21 [-]: LOADK     R5 25        ; R5 := 25.000000
 22 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETTABLE  R3 R3 K9     ; R3 := R3[0xb5be5d4a]
 25 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 26 [-]: GETTABLE  R5 R1 K10    ; R5 := R1["mClipName"]
 27 [-]: LOADK     R6 K11       ; R6 := ".ValueSelector.Back"
 28 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 29 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 30 [-]: GETUPVAL  R5 U1        ; R5 := U1
 31 [-]: MOVE      R6 R0        ; R6 := R0
 32 [-]: SUB       R7 R2 R3     ; R7 := R2 - R3
 33 [-]: DIV       R7 R7 K12    ; R7 := R7 / 143.000000
 34 [-]: CALL      R5 3 1       ; R5(R6,R7)
 35 [-]: GETTABLE  R5 R1 K5     ; R5 := R1["Value"]
 36 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["NumOptions"]
 37 [-]: EQ        1 R6 K14     ; if R6 == nil then PC := 48
 38 [-]: JMP       48           ; PC := 48
 39 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["NumOptions"]
 40 [-]: MUL       R5 R5 R6     ; R5 := R5 * R6
 41 [-]: GETGLOBAL R6 K15       ; R6 := 0x5bced4c4
 42 [-]: GETTABLE  R6 R6 K16    ; R6 := R6[0x55f27c30]
 43 [-]: ADD       R7 R5 K17    ; R7 := R5 + 0.500000
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: MOVE      R5 R6        ; R5 := R6
 46 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["NumOptions"]
 47 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
 48 [-]: GETGLOBAL R6 K18       ; R6 := 0x42dcc9f5
 49 [-]: GETUPVAL  R7 U2        ; R7 := U2
 50 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["VS_WIDTH"]
 51 [-]: MUL       R7 R7 R5     ; R7 := R7 * R5
 52 [-]: LOADK     R8 K20       ; R8 := 0.100000
 53 [-]: GETUPVAL  R9 U2        ; R9 := U2
 54 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["VS_WIDTH"]
 55 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 56 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 57 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0xf64b7262]
 58 [-]: GETTABLE  R9 R1 K10    ; R9 := R1["mClipName"]
 59 [-]: LOADK     R10 K22      ; R10 := "ValueSelector.Front"
 60 [-]: LOADK     R11 12       ; R11 := 12.000000
 61 [-]: MOVE      R12 R6       ; R12 := R6
 62 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 63 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 64 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0xf64b7262]
 65 [-]: GETTABLE  R9 R1 K10    ; R9 := R1["mClipName"]
 66 [-]: LOADK     R10 K23      ; R10 := "ValueSelector.Slider"
 67 [-]: LOADK     R11 0        ; R11 := 0.000000
 68 [-]: SUB       R12 R6 K24   ; R12 := R6 - 74.250000
 69 [-]: SUB       R12 R12 K25  ; R12 := R12 - 4.000000
 70 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 71 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 72 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0xf64b7262]
 73 [-]: GETTABLE  R9 R1 K10    ; R9 := R1["mClipName"]
 74 [-]: LOADK     R10 K26      ; R10 := "ValueSelector.SliderBtn"
 75 [-]: LOADK     R11 0        ; R11 := 0.000000
 76 [-]: SUB       R12 R6 K24   ; R12 := R6 - 74.250000
 77 [-]: SUB       R12 R12 K27  ; R12 := R12 - 7.500000
 78 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 79 [-]: SETUPVAL  R0 U3        ; U82 := R3
 80 [-]: GETUPVAL  R7 U4        ; R7 := U4
 81 [-]: MOVE      R8 R0        ; R8 := R0
 82 [-]: CALL      R7 2 1       ; R7(R8)
 83 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 12020
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := mLists
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCosmeticsList"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xca30dfb6]
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 31
 12 [-]: JMP       31           ; PC := 31
 13 [-]: SETTABLE  R1 K5 K6     ; R1["SliderActive"] := false
 14 [-]: SETTABLE  R1 K7 K8     ; R1["ValueChange"] := 0.000000
 15 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 16 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xf64b7262]
 17 [-]: GETTABLE  R4 R1 K11    ; R4 := R1["mClipName"]
 18 [-]: LOADK     R5 K12       ; R5 := "ValueSelector.RightArrow"
 19 [-]: LOADK     R6 9         ; R6 := 9.000000
 20 [-]: GETGLOBAL R7 K13       ; R7 := 0x0032441c
 21 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["UIColor_Black"]
 22 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 23 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xf64b7262]
 25 [-]: GETTABLE  R4 R1 K11    ; R4 := R1["mClipName"]
 26 [-]: LOADK     R5 K15       ; R5 := "ValueSelector.LeftArrow"
 27 [-]: LOADK     R6 9         ; R6 := 9.000000
 28 [-]: GETGLOBAL R7 K13       ; R7 := 0x0032441c
 29 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["UIColor_Black"]
 30 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 31 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 12031
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 12035
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := mLists
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mCosmeticsList"]
  3 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xca30dfb6]
  4 [-]: GETGLOBAL R2 K3        ; R2 := 0x03f57322
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  7 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  8 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 155
 12 [-]: JMP       155          ; PC := 155
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 14 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["Value"]
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 155
 17 [-]: JMP       155          ; PC := 155
 18 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["IsValueSelector"]
 19 [-]: EQ        0 R1 K7      ; if R1 ~= true then PC := 155
 20 [-]: JMP       155          ; PC := 155
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["MouseDown"]
 23 [-]: TEST      R1 1         ; if R1 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETUPVAL  R1 U2        ; R1 := U2
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: CALL      R1 2 1       ; R1(R2)
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETTABLE  R1 R0 K9     ; R1 := R0["ValueChange"]
 30 [-]: EQ        1 R1 K10     ; if R1 == 0.000000 then PC := 89
 31 [-]: JMP       89           ; PC := 89
 32 [-]: GETUPVAL  R1 U3        ; R1 := U3
 33 [-]: GETGLOBAL R2 K3        ; R2 := 0x03f57322
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: GETGLOBAL R3 K11       ; R3 := 0x42dcc9f5
 37 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["Value"]
 38 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["ValueChange"]
 39 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 40 [-]: LOADK     R5 0         ; R5 := 0.000000
 41 [-]: LOADK     R6 1         ; R6 := 1.000000
 42 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 43 [-]: CALL      R1 0 1       ; R1(R2,...)
 44 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["Value"]
 45 [-]: GETTABLE  R2 R0 K12    ; R2 := R0["NumOptions"]
 46 [-]: EQ        1 R2 K13     ; if R2 == nil then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETTABLE  R2 R0 K12    ; R2 := R0["NumOptions"]
 49 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 50 [-]: GETGLOBAL R2 K14       ; R2 := 0x5bced4c4
 51 [-]: GETTABLE  R2 R2 K15    ; R2 := R2[0x55f27c30]
 52 [-]: ADD       R3 R1 K16    ; R3 := R1 + 0.500000
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: MOVE      R1 R2        ; R1 := R2
 55 [-]: GETTABLE  R2 R0 K12    ; R2 := R0["NumOptions"]
 56 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
 57 [-]: SETTABLE  R0 K9 K10    ; R0["ValueChange"] := 0.000000
 58 [-]: GETGLOBAL R2 K11       ; R2 := 0x42dcc9f5
 59 [-]: GETUPVAL  R3 U4        ; R3 := U4
 60 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["VS_WIDTH"]
 61 [-]: MUL       R3 R3 R1     ; R3 := R3 * R1
 62 [-]: LOADK     R4 K18       ; R4 := 0.100000
 63 [-]: GETUPVAL  R5 U4        ; R5 := U4
 64 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["VS_WIDTH"]
 65 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 66 [-]: GETGLOBAL R3 K19       ; R3 := 0xae91e43b
 67 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0xf64b7262]
 68 [-]: GETTABLE  R5 R0 K21    ; R5 := R0["mClipName"]
 69 [-]: LOADK     R6 K22       ; R6 := "ValueSelector.Front"
 70 [-]: LOADK     R7 12        ; R7 := 12.000000
 71 [-]: MOVE      R8 R2        ; R8 := R2
 72 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 73 [-]: GETGLOBAL R3 K19       ; R3 := 0xae91e43b
 74 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0xf64b7262]
 75 [-]: GETTABLE  R5 R0 K21    ; R5 := R0["mClipName"]
 76 [-]: LOADK     R6 K23       ; R6 := "ValueSelector.Slider"
 77 [-]: LOADK     R7 0         ; R7 := 0.000000
 78 [-]: SUB       R8 R2 K24    ; R8 := R2 - 74.250000
 79 [-]: SUB       R8 R8 K25    ; R8 := R8 - 4.000000
 80 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 81 [-]: GETGLOBAL R3 K19       ; R3 := 0xae91e43b
 82 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0xf64b7262]
 83 [-]: GETTABLE  R5 R0 K21    ; R5 := R0["mClipName"]
 84 [-]: LOADK     R6 K26       ; R6 := "ValueSelector.SliderBtn"
 85 [-]: LOADK     R7 0         ; R7 := 0.000000
 86 [-]: SUB       R8 R2 K24    ; R8 := R2 - 74.250000
 87 [-]: SUB       R8 R8 K27    ; R8 := R8 - 7.500000
 88 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 89 [-]: GETTABLE  R3 R0 K28    ; R3 := R0["SliderActive"]
 90 [-]: TEST      R3 0         ; if not R3 then PC := 155
 91 [-]: JMP       155          ; PC := 155
 92 [-]: GETGLOBAL R3 K19       ; R3 := 0xae91e43b
 93 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3[0x91a24e4b]
 94 [-]: LOADK     R5 K30       ; R5 := "_root"
 95 [-]: LOADK     R6 25        ; R6 := 25.000000
 96 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 97 [-]: GETUPVAL  R4 U5        ; R4 := U5
 98 [-]: GETTABLE  R4 R4 K31    ; R4 := R4[0xb5be5d4a]
 99 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
100 [-]: GETTABLE  R6 R0 K21    ; R6 := R0["mClipName"]
101 [-]: LOADK     R7 K32       ; R7 := ".ValueSelector.Back"
102 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
103 [-]: CALL      R4 3 3       ; R4,R5 := R4(R5,R6)
104 [-]: GETUPVAL  R6 U3        ; R6 := U3
105 [-]: GETGLOBAL R7 K3        ; R7 := 0x03f57322
106 [-]: GETUPVAL  R8 U0        ; R8 := U0
107 [-]: CALL      R7 2 2       ; R7 := R7(R8)
108 [-]: SUB       R8 R3 R4     ; R8 := R3 - R4
109 [-]: DIV       R8 R8 K33    ; R8 := R8 / 143.000000
110 [-]: CALL      R6 3 1       ; R6(R7,R8)
111 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["Value"]
112 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["NumOptions"]
113 [-]: EQ        1 R7 K13     ; if R7 == nil then PC := 124
114 [-]: JMP       124          ; PC := 124
115 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["NumOptions"]
116 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
117 [-]: GETGLOBAL R7 K14       ; R7 := 0x5bced4c4
118 [-]: GETTABLE  R7 R7 K15    ; R7 := R7[0x55f27c30]
119 [-]: ADD       R8 R6 K16    ; R8 := R6 + 0.500000
120 [-]: CALL      R7 2 2       ; R7 := R7(R8)
121 [-]: MOVE      R6 R7        ; R6 := R7
122 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["NumOptions"]
123 [-]: DIV       R6 R6 R7     ; R6 := R6 / R7
124 [-]: GETGLOBAL R7 K11       ; R7 := 0x42dcc9f5
125 [-]: GETUPVAL  R8 U4        ; R8 := U4
126 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["VS_WIDTH"]
127 [-]: MUL       R8 R8 R6     ; R8 := R8 * R6
128 [-]: LOADK     R9 K18       ; R9 := 0.100000
129 [-]: GETUPVAL  R10 U4       ; R10 := U4
130 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["VS_WIDTH"]
131 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
132 [-]: GETGLOBAL R8 K19       ; R8 := 0xae91e43b
133 [-]: SELF      R8 R8 K20    ; R9 := R8; R8 := R8[0xf64b7262]
134 [-]: GETTABLE  R10 R0 K21   ; R10 := R0["mClipName"]
135 [-]: LOADK     R11 K22      ; R11 := "ValueSelector.Front"
136 [-]: LOADK     R12 12       ; R12 := 12.000000
137 [-]: MOVE      R13 R7       ; R13 := R7
138 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
139 [-]: GETGLOBAL R8 K19       ; R8 := 0xae91e43b
140 [-]: SELF      R8 R8 K20    ; R9 := R8; R8 := R8[0xf64b7262]
141 [-]: GETTABLE  R10 R0 K21   ; R10 := R0["mClipName"]
142 [-]: LOADK     R11 K23      ; R11 := "ValueSelector.Slider"
143 [-]: LOADK     R12 0        ; R12 := 0.000000
144 [-]: SUB       R13 R7 K24   ; R13 := R7 - 74.250000
145 [-]: SUB       R13 R13 K25  ; R13 := R13 - 4.000000
146 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
147 [-]: GETGLOBAL R8 K19       ; R8 := 0xae91e43b
148 [-]: SELF      R8 R8 K20    ; R9 := R8; R8 := R8[0xf64b7262]
149 [-]: GETTABLE  R10 R0 K21   ; R10 := R0["mClipName"]
150 [-]: LOADK     R11 K26      ; R11 := "ValueSelector.SliderBtn"
151 [-]: LOADK     R12 0        ; R12 := 0.000000
152 [-]: SUB       R13 R7 K24   ; R13 := R7 - 74.250000
153 [-]: SUB       R13 R13 K27  ; R13 := R13 - 7.500000
154 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
155 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 12088
; #Upvalues:       10
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Current"]
  3 [-]: EQ        1 R3 K2      ; if R3 == 3.000000 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 6
  6 [-]: LOADBOOL  R3 1 0       ; R3 := true
  7 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 23
  8 [-]: JMP       23           ; PC := 23
  9 [-]: TEST      R3 0         ; if not R3 then PC := 22
 10 [-]: JMP       22           ; PC := 22
 11 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["LoadOutId"]
 12 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 21
 13 [-]: JMP       21           ; PC := 21
 14 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["LoadOutType"]
 15 [-]: EQ        1 R4 K6      ; if R4 == 8.000000 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["LoadOutId"]
 18 [-]: EQ        0 R4 K7      ; if R4 ~= 4.000000 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 21
 21 [-]: LOADBOOL  R3 1 0       ; R3 := true
 22 [-]: JMP       41           ; PC := 41
 23 [-]: TEST      R0 0         ; if not R0 then PC := 41
 24 [-]: JMP       41           ; PC := 41
 25 [-]: TEST      R3 0         ; if not R3 then PC := 41
 26 [-]: JMP       41           ; PC := 41
 27 [-]: GETGLOBAL R4 K8        ; R4 := _T
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["upgradeItemSlot"]
 29 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 40
 30 [-]: JMP       40           ; PC := 40
 31 [-]: GETGLOBAL R4 K8        ; R4 := _T
 32 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["upgradeItemLot"]
 33 [-]: EQ        1 R4 K6      ; if R4 == 8.000000 then PC := 40
 34 [-]: JMP       40           ; PC := 40
 35 [-]: GETGLOBAL R4 K8        ; R4 := _T
 36 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["upgradeItemSlot"]
 37 [-]: EQ        0 R4 K7      ; if R4 ~= 4.000000 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 40
 40 [-]: LOADBOOL  R3 1 0       ; R3 := true
 41 [-]: TEST      R2 0         ; if not R2 then PC := 69
 42 [-]: JMP       69           ; PC := 69
 43 [-]: TEST      R3 0         ; if not R3 then PC := 54
 44 [-]: JMP       54           ; PC := 54
 45 [-]: GETUPVAL  R4 U1        ; R4 := U1
 46 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x659d451f]
 47 [-]: GETGLOBAL R5 K12       ; R5 := 0xf32c4c64
 48 [-]: CALL      R4 2 1       ; R4(R5)
 49 [-]: GETGLOBAL R4 K8        ; R4 := _T
 50 [-]: SETTABLE  R4 K13 K14   ; R4["previousConsoleTag"] := "Arsenal"
 51 [-]: LOADBOOL  R4 1 0       ; R4 := true
 52 [-]: SETUPVAL  R4 U2        ; U82 := R2
 53 [-]: JMP       65           ; PC := 65
 54 [-]: GETUPVAL  R4 U1        ; R4 := U1
 55 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[0x659d451f]
 56 [-]: GETGLOBAL R5 K15       ; R5 := 0x69f76352
 57 [-]: CALL      R4 2 1       ; R4(R5)
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: GETUPVAL  R5 U4        ; R5 := U4
 60 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["UI_MODE_IN_SPACE_SHIP"]
 61 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: GETGLOBAL R4 K8        ; R4 := _T
 64 [-]: SETTABLE  R4 K13 K3    ; R4["previousConsoleTag"] := nil
 65 [-]: GETUPVAL  R4 U5        ; R4 := U5
 66 [-]: CALL      R4 1 1       ; R4()
 67 [-]: GETGLOBAL R4 K17       ; R4 := mSelected
 68 [-]: SETTABLE  R4 K18 K3    ; R4["Element"] := nil
 69 [-]: GETGLOBAL R4 K19       ; R4 := 0x89326c93
 70 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0xfb64e76c]
 71 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 72 [-]: GETGLOBAL R5 K21       ; R5 := 0x7b998233
 73 [-]: MOVE      R6 R4        ; R6 := R4
 74 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 75 [-]: TEST      R5 1         ; if R5 then PC := 91
 76 [-]: JMP       91           ; PC := 91
 77 [-]: GETGLOBAL R5 K21       ; R5 := 0x7b998233
 78 [-]: SELF      R6 R4 K22    ; R7 := R4; R6 := R4[0x5578d98b]
 79 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 80 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 81 [-]: TEST      R5 1         ; if R5 then PC := 91
 82 [-]: JMP       91           ; PC := 91
 83 [-]: GETGLOBAL R5 K21       ; R5 := 0x7b998233
 84 [-]: SELF      R6 R4 K22    ; R7 := R4; R6 := R4[0x5578d98b]
 85 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 86 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0x5e651723]
 87 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 88 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 89 [-]: NOT       R5 R5        ; R5 := not R5
 90 [-]: JMP       93           ; PC := 93
 91 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 92
 92 [-]: LOADBOOL  R5 1 0       ; R5 := true
 93 [-]: GETGLOBAL R6 K8        ; R6 := _T
 94 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["MenuSuitAvatar"]
 95 [-]: GETGLOBAL R7 K19       ; R7 := 0x89326c93
 96 [-]: SELF      R7 R7 K25    ; R8 := R7; R7 := R7[0x78298275]
 97 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 98 [-]: SELF      R7 R7 K26    ; R8 := R7; R7 := R7[0x0b4bcfb6]
 99 [-]: CALL      R7 2 2       ; R7 := R7(R8)
100 [-]: TEST      R5 0         ; if not R5 then PC := 107
101 [-]: JMP       107          ; PC := 107
102 [-]: SELF      R8 R4 K22    ; R9 := R4; R8 := R4[0x5578d98b]
103 [-]: CALL      R8 2 2       ; R8 := R8(R9)
104 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0x0b4bcfb6]
105 [-]: CALL      R8 2 2       ; R8 := R8(R9)
106 [-]: MOVE      R7 R8        ; R7 := R8
107 [-]: TEST      R5 0         ; if not R5 then PC := 120
108 [-]: JMP       120          ; PC := 120
109 [-]: TEST      R3 0         ; if not R3 then PC := 116
110 [-]: JMP       116          ; PC := 116
111 [-]: GETGLOBAL R8 K19       ; R8 := 0x89326c93
112 [-]: SELF      R8 R8 K27    ; R9 := R8; R8 := R8[0x55684e45]
113 [-]: MOVE      R10 R6       ; R10 := R6
114 [-]: CALL      R8 3 1       ; R8(R9,R10)
115 [-]: JMP       120          ; PC := 120
116 [-]: GETGLOBAL R8 K19       ; R8 := 0x89326c93
117 [-]: SELF      R8 R8 K28    ; R9 := R8; R8 := R8[0x51d7cb5b]
118 [-]: MOVE      R10 R6       ; R10 := R6
119 [-]: CALL      R8 3 1       ; R8(R9,R10)
120 [-]: GETGLOBAL R8 K21       ; R8 := 0x7b998233
121 [-]: MOVE      R9 R6        ; R9 := R6
122 [-]: CALL      R8 2 2       ; R8 := R8(R9)
123 [-]: TEST      R8 1         ; if R8 then PC := 457
124 [-]: JMP       457          ; PC := 457
125 [-]: TEST      R2 0         ; if not R2 then PC := 148
126 [-]: JMP       148          ; PC := 148
127 [-]: SELF      R8 R6 K29    ; R9 := R6; R8 := R6[0xde321e6f]
128 [-]: CALL      R8 2 2       ; R8 := R8(R9)
129 [-]: SELF      R8 R8 K30    ; R9 := R8; R8 := R8[0x374b084a]
130 [-]: CALL      R8 2 1       ; R8(R9)
131 [-]: GETUPVAL  R8 U6        ; R8 := U6
132 [-]: GETUPVAL  R9 U0        ; R9 := U0
133 [-]: GETTABLE  R9 R9 K0     ; R9 := R9["Current"]
134 [-]: EQ        1 R9 K31     ; if R9 == 2.000000 then PC := 137
135 [-]: JMP       137          ; PC := 137
136 [-]: LOADBOOL  R9 0 1       ; R9 := false; PC := 137
137 [-]: LOADBOOL  R9 1 0       ; R9 := true
138 [-]: CALL      R8 2 1       ; R8(R9)
139 [-]: GETGLOBAL R8 K21       ; R8 := 0x7b998233
140 [-]: GETUPVAL  R9 U7        ; R9 := U7
141 [-]: CALL      R8 2 2       ; R8 := R8(R9)
142 [-]: TEST      R8 0         ; if not R8 then PC := 148
143 [-]: JMP       148          ; PC := 148
144 [-]: SELF      R8 R6 K29    ; R9 := R6; R8 := R6[0xde321e6f]
145 [-]: CALL      R8 2 2       ; R8 := R8(R9)
146 [-]: SELF      R8 R8 K32    ; R9 := R8; R8 := R8[0x0c277ae1]
147 [-]: CALL      R8 2 1       ; R8(R9)
148 [-]: GETUPVAL  R8 U8        ; R8 := U8
149 [-]: GETTABLE  R8 R8 K33    ; R8 := R8[0xcfd657f3]
150 [-]: MOVE      R9 R6        ; R9 := R6
151 [-]: MOVE      R10 R3       ; R10 := R3
152 [-]: CALL      R8 3 1       ; R8(R9,R10)
153 [-]: TEST      R3 0         ; if not R3 then PC := 335
154 [-]: JMP       335          ; PC := 335
155 [-]: TEST      R0 1         ; if R0 then PC := 162
156 [-]: JMP       162          ; PC := 162
157 [-]: GETGLOBAL R8 K8        ; R8 := _T
158 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["suitTable"]
159 [-]: SELF      R9 R6 K36    ; R10 := R6; R9 := R6[0xd1586535]
160 [-]: CALL      R9 2 2       ; R9 := R9(R10)
161 [-]: SETTABLE  R8 K35 R9    ; R8["prevPos"] := R9
162 [-]: GETGLOBAL R8 K21       ; R8 := 0x7b998233
163 [-]: GETGLOBAL R9 K8        ; R9 := _T
164 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
165 [-]: GETTABLE  R9 R9 K37    ; R9 := R9["positions"]
166 [-]: CALL      R8 2 2       ; R8 := R8(R9)
167 [-]: TEST      R8 0         ; if not R8 then PC := 173
168 [-]: JMP       173          ; PC := 173
169 [-]: GETGLOBAL R8 K8        ; R8 := _T
170 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["suitTable"]
171 [-]: NEWTABLE  R9 0 0       ; R9 := {}
172 [-]: SETTABLE  R8 K37 R9    ; R8["positions"] := R9
173 [-]: GETUPVAL  R8 U8        ; R8 := U8
174 [-]: GETTABLE  R8 R8 K38    ; R8 := R8[0x09b8fbee]
175 [-]: SELF      R9 R6 K36    ; R10 := R6; R9 := R6[0xd1586535]
176 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
177 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
178 [-]: GETGLOBAL R9 K21       ; R9 := 0x7b998233
179 [-]: MOVE      R10 R8       ; R10 := R8
180 [-]: CALL      R9 2 2       ; R9 := R9(R10)
181 [-]: TEST      R9 1         ; if R9 then PC := 298
182 [-]: JMP       298          ; PC := 298
183 [-]: GETGLOBAL R9 K8        ; R9 := _T
184 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
185 [-]: SETTABLE  R9 K39 K3    ; R9["desiredPos"] := nil
186 [-]: GETGLOBAL R9 K8        ; R9 := _T
187 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
188 [-]: GETGLOBAL R10 K8       ; R10 := _T
189 [-]: GETTABLE  R10 R10 K41  ; R10 := R10["ARCHWING_DEFAULT_ROTATION"]
190 [-]: SETTABLE  R9 K40 R10   ; R9["desiredRot"] := R10
191 [-]: GETGLOBAL R9 K8        ; R9 := _T
192 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
193 [-]: GETGLOBAL R10 K8       ; R10 := _T
194 [-]: GETTABLE  R10 R10 K41  ; R10 := R10["ARCHWING_DEFAULT_ROTATION"]
195 [-]: SETTABLE  R9 K42 R10   ; R9["lerpRot"] := R10
196 [-]: GETGLOBAL R9 K8        ; R9 := _T
197 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
198 [-]: GETTABLE  R9 R9 K37    ; R9 := R9["positions"]
199 [-]: SELF      R10 R6 K43   ; R11 := R6; R10 := R6[0x388577d5]
200 [-]: CALL      R10 2 2      ; R10 := R10(R11)
201 [-]: SELF      R11 R8 K36   ; R12 := R8; R11 := R8[0xd1586535]
202 [-]: CALL      R11 2 2      ; R11 := R11(R12)
203 [-]: SETTABLE  R9 R10 R11   ; R9[R10] := R11
204 [-]: GETGLOBAL R9 K21       ; R9 := 0x7b998233
205 [-]: GETGLOBAL R10 K8       ; R10 := _T
206 [-]: GETTABLE  R10 R10 K44  ; R10 := R10["KDriveAvatar"]
207 [-]: CALL      R9 2 2       ; R9 := R9(R10)
208 [-]: TEST      R9 1         ; if R9 then PC := 226
209 [-]: JMP       226          ; PC := 226
210 [-]: GETGLOBAL R9 K8        ; R9 := _T
211 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
212 [-]: GETTABLE  R9 R9 K37    ; R9 := R9["positions"]
213 [-]: GETGLOBAL R10 K8       ; R10 := _T
214 [-]: GETTABLE  R10 R10 K44  ; R10 := R10["KDriveAvatar"]
215 [-]: SELF      R10 R10 K43  ; R11 := R10; R10 := R10[0x388577d5]
216 [-]: CALL      R10 2 2      ; R10 := R10(R11)
217 [-]: SELF      R11 R8 K36   ; R12 := R8; R11 := R8[0xd1586535]
218 [-]: CALL      R11 2 2      ; R11 := R11(R12)
219 [-]: GETGLOBAL R12 K45      ; R12 := 0xa421af95
220 [-]: LOADK     R13 0        ; R13 := 0.500000
221 [-]: LOADK     R14 0        ; R14 := -0.500000
222 [-]: LOADK     R15 0        ; R15 := 0.000000
223 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
224 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
225 [-]: SETTABLE  R9 R10 R11   ; R9[R10] := R11
226 [-]: GETGLOBAL R9 K21       ; R9 := 0x7b998233
227 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
228 [-]: GETTABLE  R10 R10 K47  ; R10 := R10["rootNodeEntity"]
229 [-]: CALL      R9 2 2       ; R9 := R9(R10)
230 [-]: TEST      R9 0         ; if not R9 then PC := 236
231 [-]: JMP       236          ; PC := 236
232 [-]: GETGLOBAL R9 K46       ; R9 := mCameraTable
233 [-]: GETGLOBAL R10 K8       ; R10 := _T
234 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["MenuSuitAvatar"]
235 [-]: SETTABLE  R9 K47 R10   ; R9["rootNodeEntity"] := R10
236 [-]: GETGLOBAL R9 K46       ; R9 := mCameraTable
237 [-]: GETUPVAL  R10 U9       ; R10 := U9
238 [-]: GETTABLE  R10 R10 K49  ; R10 := R10["ARCHWING_CAMERA"]
239 [-]: SETTABLE  R9 K48 R10   ; R9["cameraTag"] := R10
240 [-]: GETGLOBAL R9 K46       ; R9 := mCameraTable
241 [-]: GETGLOBAL R10 K19      ; R10 := 0x89326c93
242 [-]: SELF      R10 R10 K51  ; R11 := R10; R10 := R10[0x46a0ebf5]
243 [-]: GETGLOBAL R12 K52      ; R12 := 0x0469f296
244 [-]: GETUPVAL  R13 U9       ; R13 := U9
245 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["ARCHWING_CAMERA"]
246 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
247 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
248 [-]: SETTABLE  R9 K50 R10   ; R9["camera"] := R10
249 [-]: GETGLOBAL R9 K46       ; R9 := mCameraTable
250 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
251 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["camera"]
252 [-]: SELF      R10 R10 K36  ; R11 := R10; R10 := R10[0xd1586535]
253 [-]: CALL      R10 2 2      ; R10 := R10(R11)
254 [-]: SETTABLE  R9 K53 R10   ; R9["orgPosition"] := R10
255 [-]: GETGLOBAL R9 K46       ; R9 := mCameraTable
256 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
257 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["camera"]
258 [-]: SELF      R10 R10 K55  ; R11 := R10; R10 := R10[0xcb3851b8]
259 [-]: CALL      R10 2 2      ; R10 := R10(R11)
260 [-]: SETTABLE  R9 K54 R10   ; R9["orgRotation"] := R10
261 [-]: GETGLOBAL R9 K46       ; R9 := mCameraTable
262 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
263 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["camera"]
264 [-]: SELF      R10 R10 K57  ; R11 := R10; R10 := R10[0xaac2f3a5]
265 [-]: CALL      R10 2 2      ; R10 := R10(R11)
266 [-]: SETTABLE  R9 K56 R10   ; R9["orgFOV"] := R10
267 [-]: GETGLOBAL R9 K46       ; R9 := mCameraTable
268 [-]: SETTABLE  R9 K58 K3    ; R9["destFov"] := nil
269 [-]: GETGLOBAL R9 K21       ; R9 := 0x7b998233
270 [-]: MOVE      R10 R7       ; R10 := R7
271 [-]: CALL      R9 2 2       ; R9 := R9(R10)
272 [-]: TEST      R9 1         ; if R9 then PC := 287
273 [-]: JMP       287          ; PC := 287
274 [-]: SELF      R9 R7 K59    ; R10 := R7; R9 := R7[0xa72afc7e]
275 [-]: CALL      R9 2 2       ; R9 := R9(R10)
276 [-]: SELF      R10 R7 K60   ; R11 := R7; R10 := R7[0x68f07b6a]
277 [-]: LOADK     R12 K61      ; R12 := 0.010000
278 [-]: CALL      R10 3 1      ; R10(R11,R12)
279 [-]: SELF      R10 R7 K62   ; R11 := R7; R10 := R7[0x14c7f7dd]
280 [-]: GETGLOBAL R12 K46      ; R12 := mCameraTable
281 [-]: GETTABLE  R12 R12 K50  ; R12 := R12["camera"]
282 [-]: LOADK     R13 0        ; R13 := 0.000000
283 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
284 [-]: SELF      R10 R7 K60   ; R11 := R7; R10 := R7[0x68f07b6a]
285 [-]: MOVE      R12 R9       ; R12 := R9
286 [-]: CALL      R10 3 1      ; R10(R11,R12)
287 [-]: GETGLOBAL R10 K21      ; R10 := 0x7b998233
288 [-]: GETGLOBAL R11 K63      ; R11 := mArsenalConsole
289 [-]: CALL      R10 2 2      ; R10 := R10(R11)
290 [-]: TEST      R10 1        ; if R10 then PC := 457
291 [-]: JMP       457          ; PC := 457
292 [-]: GETGLOBAL R10 K63      ; R10 := mArsenalConsole
293 [-]: SELF      R10 R10 K64  ; R11 := R10; R10 := R10[0x0e684fdd]
294 [-]: GETGLOBAL R12 K46      ; R12 := mCameraTable
295 [-]: GETTABLE  R12 R12 K50  ; R12 := R12["camera"]
296 [-]: CALL      R10 3 1      ; R10(R11,R12)
297 [-]: JMP       457          ; PC := 457
298 [-]: GETGLOBAL R10 K8       ; R10 := _T
299 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["suitTable"]
300 [-]: GETTABLE  R10 R10 K37  ; R10 := R10["positions"]
301 [-]: SELF      R11 R6 K43   ; R12 := R6; R11 := R6[0x388577d5]
302 [-]: CALL      R11 2 2      ; R11 := R11(R12)
303 [-]: SELF      R12 R6 K36   ; R13 := R6; R12 := R6[0xd1586535]
304 [-]: CALL      R12 2 2      ; R12 := R12(R13)
305 [-]: GETGLOBAL R13 K45      ; R13 := 0xa421af95
306 [-]: LOADK     R14 0        ; R14 := 0.000000
307 [-]: LOADK     R15 0        ; R15 := 0.750000
308 [-]: LOADK     R16 0        ; R16 := 0.000000
309 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
310 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
311 [-]: SETTABLE  R10 R11 R12  ; R10[R11] := R12
312 [-]: GETGLOBAL R10 K21      ; R10 := 0x7b998233
313 [-]: GETGLOBAL R11 K8       ; R11 := _T
314 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["KDriveAvatar"]
315 [-]: CALL      R10 2 2      ; R10 := R10(R11)
316 [-]: TEST      R10 1        ; if R10 then PC := 457
317 [-]: JMP       457          ; PC := 457
318 [-]: GETGLOBAL R10 K8       ; R10 := _T
319 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["suitTable"]
320 [-]: GETTABLE  R10 R10 K37  ; R10 := R10["positions"]
321 [-]: GETGLOBAL R11 K8       ; R11 := _T
322 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["KDriveAvatar"]
323 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0x388577d5]
324 [-]: CALL      R11 2 2      ; R11 := R11(R12)
325 [-]: SELF      R12 R6 K36   ; R13 := R6; R12 := R6[0xd1586535]
326 [-]: CALL      R12 2 2      ; R12 := R12(R13)
327 [-]: GETGLOBAL R13 K45      ; R13 := 0xa421af95
328 [-]: LOADK     R14 0        ; R14 := 0.000000
329 [-]: LOADK     R15 0        ; R15 := 0.750000
330 [-]: LOADK     R16 0        ; R16 := 0.000000
331 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
332 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
333 [-]: SETTABLE  R10 R11 R12  ; R10[R11] := R12
334 [-]: JMP       457          ; PC := 457
335 [-]: GETGLOBAL R10 K21      ; R10 := 0x7b998233
336 [-]: GETGLOBAL R11 K8       ; R11 := _T
337 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["suitTable"]
338 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["prevPos"]
339 [-]: CALL      R10 2 2      ; R10 := R10(R11)
340 [-]: TEST      R10 1        ; if R10 then PC := 457
341 [-]: JMP       457          ; PC := 457
342 [-]: GETGLOBAL R10 K8       ; R10 := _T
343 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["suitTable"]
344 [-]: GETGLOBAL R11 K8       ; R11 := _T
345 [-]: GETTABLE  R11 R11 K65  ; R11 := R11["DEFAULT_SUIT_ROTATION"]
346 [-]: SETTABLE  R10 K40 R11  ; R10["desiredRot"] := R11
347 [-]: GETGLOBAL R10 K8       ; R10 := _T
348 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["suitTable"]
349 [-]: GETGLOBAL R11 K8       ; R11 := _T
350 [-]: GETTABLE  R11 R11 K65  ; R11 := R11["DEFAULT_SUIT_ROTATION"]
351 [-]: SETTABLE  R10 K42 R11  ; R10["lerpRot"] := R11
352 [-]: GETGLOBAL R10 K21      ; R10 := 0x7b998233
353 [-]: GETGLOBAL R11 K8       ; R11 := _T
354 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["suitTable"]
355 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["positions"]
356 [-]: CALL      R10 2 2      ; R10 := R10(R11)
357 [-]: TEST      R10 0        ; if not R10 then PC := 363
358 [-]: JMP       363          ; PC := 363
359 [-]: GETGLOBAL R10 K8       ; R10 := _T
360 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["suitTable"]
361 [-]: NEWTABLE  R11 0 0      ; R11 := {}
362 [-]: SETTABLE  R10 K37 R11  ; R10["positions"] := R11
363 [-]: GETGLOBAL R10 K8       ; R10 := _T
364 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["suitTable"]
365 [-]: GETTABLE  R10 R10 K37  ; R10 := R10["positions"]
366 [-]: SELF      R11 R6 K43   ; R12 := R6; R11 := R6[0x388577d5]
367 [-]: CALL      R11 2 2      ; R11 := R11(R12)
368 [-]: GETGLOBAL R12 K8       ; R12 := _T
369 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["suitTable"]
370 [-]: GETTABLE  R12 R12 K35  ; R12 := R12["prevPos"]
371 [-]: SETTABLE  R10 R11 R12  ; R10[R11] := R12
372 [-]: SELF      R10 R6 K66   ; R11 := R6; R10 := R6[0x30eb0cc3]
373 [-]: LOADK     R12 15       ; R12 := 15.000000
374 [-]: LOADBOOL  R13 0 0      ; R13 := false
375 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
376 [-]: SELF      R10 R6 K68   ; R11 := R6; R10 := R6[0xb2532845]
377 [-]: GETGLOBAL R12 K52      ; R12 := 0x0469f296
378 [-]: LOADK     R13 K69      ; R13 := "IDLE"
379 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
380 [-]: CALL      R10 0 1      ; R10(R11,...)
381 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
382 [-]: GETUPVAL  R11 U9       ; R11 := U9
383 [-]: GETTABLE  R11 R11 K70  ; R11 := R11["ARSENAL_CAMERA"]
384 [-]: SETTABLE  R10 K48 R11  ; R10["cameraTag"] := R11
385 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
386 [-]: GETGLOBAL R11 K19      ; R11 := 0x89326c93
387 [-]: SELF      R11 R11 K51  ; R12 := R11; R11 := R11[0x46a0ebf5]
388 [-]: GETGLOBAL R13 K52      ; R13 := 0x0469f296
389 [-]: GETUPVAL  R14 U9       ; R14 := U9
390 [-]: GETTABLE  R14 R14 K70  ; R14 := R14["ARSENAL_CAMERA"]
391 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
392 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
393 [-]: SETTABLE  R10 K50 R11  ; R10["camera"] := R11
394 [-]: GETGLOBAL R10 K21      ; R10 := 0x7b998233
395 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
396 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["camera"]
397 [-]: CALL      R10 2 2      ; R10 := R10(R11)
398 [-]: TEST      R10 1        ; if R10 then PC := 419
399 [-]: JMP       419          ; PC := 419
400 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
401 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
402 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["camera"]
403 [-]: SELF      R11 R11 K36  ; R12 := R11; R11 := R11[0xd1586535]
404 [-]: CALL      R11 2 2      ; R11 := R11(R12)
405 [-]: SETTABLE  R10 K53 R11  ; R10["orgPosition"] := R11
406 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
407 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
408 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["camera"]
409 [-]: SELF      R11 R11 K55  ; R12 := R11; R11 := R11[0xcb3851b8]
410 [-]: CALL      R11 2 2      ; R11 := R11(R12)
411 [-]: SETTABLE  R10 K54 R11  ; R10["orgRotation"] := R11
412 [-]: GETGLOBAL R10 K46      ; R10 := mCameraTable
413 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
414 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["camera"]
415 [-]: SELF      R11 R11 K57  ; R12 := R11; R11 := R11[0xaac2f3a5]
416 [-]: CALL      R11 2 2      ; R11 := R11(R12)
417 [-]: SETTABLE  R10 K56 R11  ; R10["orgFOV"] := R11
418 [-]: JMP       436          ; PC := 436
419 [-]: GETGLOBAL R10 K8       ; R10 := _T
420 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["MenuSuitAvatar"]
421 [-]: GETGLOBAL R11 K21      ; R11 := 0x7b998233
422 [-]: MOVE      R12 R10      ; R12 := R10
423 [-]: CALL      R11 2 2      ; R11 := R11(R12)
424 [-]: TEST      R11 1        ; if R11 then PC := 434
425 [-]: JMP       434          ; PC := 434
426 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
427 [-]: SELF      R12 R10 K36  ; R13 := R10; R12 := R10[0xd1586535]
428 [-]: CALL      R12 2 2      ; R12 := R12(R13)
429 [-]: SETTABLE  R11 K53 R12  ; R11["orgPosition"] := R12
430 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
431 [-]: SELF      R12 R10 K55  ; R13 := R10; R12 := R10[0xcb3851b8]
432 [-]: CALL      R12 2 2      ; R12 := R12(R13)
433 [-]: SETTABLE  R11 K54 R12  ; R11["orgRotation"] := R12
434 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
435 [-]: SETTABLE  R11 K56 K71  ; R11["orgFOV"] := 90.000000
436 [-]: GETGLOBAL R11 K46      ; R11 := mCameraTable
437 [-]: SETTABLE  R11 K58 K3   ; R11["destFov"] := nil
438 [-]: GETGLOBAL R11 K21      ; R11 := 0x7b998233
439 [-]: MOVE      R12 R7       ; R12 := R7
440 [-]: CALL      R11 2 2      ; R11 := R11(R12)
441 [-]: TEST      R11 1        ; if R11 then PC := 448
442 [-]: JMP       448          ; PC := 448
443 [-]: SELF      R11 R7 K62   ; R12 := R7; R11 := R7[0x14c7f7dd]
444 [-]: GETGLOBAL R13 K46      ; R13 := mCameraTable
445 [-]: GETTABLE  R13 R13 K50  ; R13 := R13["camera"]
446 [-]: LOADK     R14 K72      ; R14 := 0.001000
447 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
448 [-]: GETGLOBAL R11 K21      ; R11 := 0x7b998233
449 [-]: GETGLOBAL R12 K63      ; R12 := mArsenalConsole
450 [-]: CALL      R11 2 2      ; R11 := R11(R12)
451 [-]: TEST      R11 1        ; if R11 then PC := 457
452 [-]: JMP       457          ; PC := 457
453 [-]: GETGLOBAL R11 K63      ; R11 := mArsenalConsole
454 [-]: SELF      R11 R11 K64  ; R12 := R11; R11 := R11[0x0e684fdd]
455 [-]: LOADNIL   R13 R13      ; R13 := nil
456 [-]: CALL      R11 3 1      ; R11(R12,R13)
457 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 12225
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADBOOL  R1 1 0       ; R1 := true
  2 [-]: LOADK     R2 K0        ; R2 := ""
  3 [-]: EQ        0 R0 K2      ; if R0 ~= 2.000000 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0xdd53e2ad]
  7 [-]: GETGLOBAL R4 K4        ; R4 := mInventory
  8 [-]: GETUPVAL  R5 U1        ; R5 := U1
  9 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 10 [-]: MOVE      R2 R4        ; R2 := R4
 11 [-]: MOVE      R1 R3        ; R1 := R3
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: RETURN    R3 3         ; return R3,R4
 15 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 12237
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x25a6e75e]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: SETGLOBAL R0 K2        ; mInventory := R0
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: CALL      R0 1 2       ; R0 := R0()
 13 [-]: GETGLOBAL R1 K2        ; R1 := mInventory
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x8ed300d6]
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 17 [-]: GETGLOBAL R2 K2        ; R2 := mInventory
 18 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x4e457768]
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 21 [-]: GETGLOBAL R3 K6        ; R3 := _T
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["loadoutInProgress"]
 23 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R3 K6        ; R3 := _T
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["loadoutInProgress"]
 27 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 28 [-]: GETTABLE  R2 R3 K9     ; R2 := R3["mItemId"]
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: CALL      R3 1 1       ; R3()
 31 [-]: LOADK     R3 0         ; R3 := 0.000000
 32 [-]: SETUPVAL  R3 U2        ; U82 := R2
 33 [-]: LOADK     R3 K10       ; R3 := ""
 34 [-]: GETGLOBAL R4 K11       ; R4 := 0xc8802016
 35 [-]: MOVE      R5 R1        ; R5 := R1
 36 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 37 [-]: JMP       70           ; PC := 70
 38 [-]: GETTABLE  R9 R8 K12    ; R9 := R8["mRemove"]
 39 [-]: TEST      R9 1         ; if R9 then PC := 70
 40 [-]: JMP       70           ; PC := 70
 41 [-]: GETTABLE  R9 R8 K9     ; R9 := R8["mItemId"]
 42 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["mId"]
 43 [-]: GETTABLE  R10 R2 K13   ; R10 := R2["mId"]
 44 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 67
 45 [-]: JMP       67           ; PC := 67
 46 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
 47 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10[0x42b04007]
 48 [-]: GETUPVAL  R12 U3       ; R12 := U3
 49 [-]: GETTABLE  R12 R12 K16  ; R12 := R12[0xe25dca66]
 50 [-]: GETTABLE  R13 R8 K17   ; R13 := R8["mName"]
 51 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 52 [-]: LOADBOOL  R13 0 0      ; R13 := false
 53 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 54 [-]: MOVE      R3 R10       ; R3 := R10
 55 [-]: GETUPVAL  R10 U4       ; R10 := U4
 56 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["Current"]
 57 [-]: EQ        0 R10 K20    ; if R10 ~= 2.000000 then PC := 67
 58 [-]: JMP       67           ; PC := 67
 59 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
 60 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10[0x42b04007]
 61 [-]: LOADK     R12 K21      ; R12 := "<CONCLAVE>"
 62 [-]: LOADBOOL  R13 1 0      ; R13 := true
 63 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 64 [-]: LOADK     R11 K22      ; R11 := " "
 65 [-]: MOVE      R12 R3       ; R12 := R3
 66 [-]: CONCAT    R3 R10 R12   ; R3 := R10 .. R11 .. R12
 67 [-]: GETUPVAL  R10 U2       ; R10 := U2
 68 [-]: ADD       R10 R10 K23  ; R10 := R10 + 1.000000
 69 [-]: SETUPVAL  R10 U2       ; U82 := R2
 70 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 38; R6 := R7 end
 71 [-]: JMP       38           ; PC := 38
 72 [-]: GETUPVAL  R10 U5       ; R10 := U5
 73 [-]: TEST      R10 0        ; if not R10 then PC := 107
 74 [-]: JMP       107          ; PC := 107
 75 [-]: LOADK     R10 K24      ; R10 := "<p><font face=\"Arial Unicode MS\" size=\"18\">"
 76 [-]: MOVE      R11 R3       ; R11 := R3
 77 [-]: LOADK     R12 K25      ; R12 := "</font></p>"
 78 [-]: CONCAT    R3 R10 R12   ; R3 := R10 .. R11 .. R12
 79 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
 80 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x67bc869f]
 81 [-]: LOADK     R12 K27      ; R12 := "MenuPanel.Label"
 82 [-]: LOADK     R13 0        ; R13 := 0.000000
 83 [-]: GETUPVAL  R14 U6       ; R14 := U6
 84 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["X"]
 85 [-]: SUB       R14 R14 K29  ; R14 := R14 - 30.000000
 86 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 87 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
 88 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x67bc869f]
 89 [-]: LOADK     R12 K27      ; R12 := "MenuPanel.Label"
 90 [-]: LOADK     R13 1        ; R13 := 1.000000
 91 [-]: GETUPVAL  R14 U6       ; R14 := U6
 92 [-]: GETTABLE  R14 R14 K30  ; R14 := R14["Y"]
 93 [-]: SUB       R14 R14 K31  ; R14 := R14 - 10.000000
 94 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 95 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
 96 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x67bc869f]
 97 [-]: LOADK     R12 K27      ; R12 := "MenuPanel.Label"
 98 [-]: LOADK     R13 5        ; R13 := 5.000000
 99 [-]: LOADK     R14 135      ; R14 := 135.000000
100 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
101 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
102 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x67bc869f]
103 [-]: LOADK     R12 K27      ; R12 := "MenuPanel.Label"
104 [-]: LOADK     R13 6        ; R13 := 6.000000
105 [-]: LOADK     R14 135      ; R14 := 135.000000
106 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
107 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
108 [-]: SELF      R10 R10 K32  ; R11 := R10; R10 := R10[0x5f56eeab]
109 [-]: LOADK     R12 K27      ; R12 := "MenuPanel.Label"
110 [-]: LOADK     R13 29       ; R13 := 29.000000
111 [-]: GETGLOBAL R14 K14      ; R14 := 0xae91e43b
112 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14[0xdca61cfa]
113 [-]: MOVE      R16 R3       ; R16 := R3
114 [-]: CALL      R14 3 0      ; R14,... := R14(R15,R16)
115 [-]: CALL      R10 0 1      ; R10(R11,...)
116 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
117 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x67bc869f]
118 [-]: LOADK     R12 K27      ; R12 := "MenuPanel.Label"
119 [-]: LOADK     R13 36       ; R13 := 36.000000
120 [-]: GETGLOBAL R14 K34      ; R14 := 0x0032441c
121 [-]: GETTABLE  R14 R14 K35  ; R14 := R14["UIColor_White"]
122 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
123 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
124 [-]: SELF      R10 R10 K36  ; R11 := R10; R10 := R10[0xaade900e]
125 [-]: LOADK     R12 K37      ; R12 := "MenuPanel.RightArrow"
126 [-]: LOADK     R13 11       ; R13 := 11.000000
127 [-]: GETGLOBAL R14 K38      ; R14 := 0x34291f5c
128 [-]: GETTABLE  R14 R14 K39  ; R14 := R14[0x1467d5f4]
129 [-]: CALL      R14 1 2      ; R14 := R14()
130 [-]: NOT       R14 R14      ; R14 := not R14
131 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
132 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
133 [-]: SELF      R10 R10 K36  ; R11 := R10; R10 := R10[0xaade900e]
134 [-]: LOADK     R12 K40      ; R12 := "MenuPanel.Right"
135 [-]: LOADK     R13 11       ; R13 := 11.000000
136 [-]: GETGLOBAL R14 K38      ; R14 := 0x34291f5c
137 [-]: GETTABLE  R14 R14 K39  ; R14 := R14[0x1467d5f4]
138 [-]: CALL      R14 1 0      ; R14,... := R14()
139 [-]: CALL      R10 0 1      ; R10(R11,...)
140 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
141 [-]: SELF      R10 R10 K36  ; R11 := R10; R10 := R10[0xaade900e]
142 [-]: LOADK     R12 K41      ; R12 := "MenuPanel.LeftArrow"
143 [-]: LOADK     R13 11       ; R13 := 11.000000
144 [-]: LOADBOOL  R14 0 0      ; R14 := false
145 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
146 [-]: GETGLOBAL R10 K14      ; R10 := 0xae91e43b
147 [-]: SELF      R10 R10 K36  ; R11 := R10; R10 := R10[0xaade900e]
148 [-]: LOADK     R12 K42      ; R12 := "MenuPanel.Left"
149 [-]: LOADK     R13 11       ; R13 := 11.000000
150 [-]: LOADBOOL  R14 0 0      ; R14 := false
151 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
152 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 12288
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Current"]
  3 [-]: GETGLOBAL R2 K1        ; R2 := _T
  4 [-]: SETTABLE  R2 K2 R0     ; R2["ArsenalState"] := R0
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: SETTABLE  R2 K0 R0     ; R2["Current"] := R0
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R2 1 1       ; R2()
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0xbe190284
 10 [-]: TEST      R2 0         ; if not R2 then PC := 42
 11 [-]: JMP       42           ; PC := 42
 12 [-]: GETGLOBAL R2 K3        ; R2 := 0xbe190284
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x919b1925]
 14 [-]: GETGLOBAL R4 K1        ; R4 := _T
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["ArsenalState"]
 16 [-]: EQ        1 R4 K6      ; if R4 == 2.000000 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 19
 19 [-]: LOADBOOL  R4 1 0       ; R4 := true
 20 [-]: CALL      R2 3 1       ; R2(R3,R4)
 21 [-]: GETGLOBAL R2 K1        ; R2 := _T
 22 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["QuestProgressWaitingForUpgradesScreen"]
 23 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R2 K1        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["QuestProgressWaitingForUpgradesScreen"]
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 29
 29 [-]: LOADBOOL  R2 1 0       ; R2 := true
 30 [-]: GETGLOBAL R3 K3        ; R3 := 0xbe190284
 31 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0xc02f2cb8]
 32 [-]: GETGLOBAL R5 K1        ; R5 := _T
 33 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["ArsenalState"]
 34 [-]: EQ        0 R5 K10     ; if R5 ~= 1.000000 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: MOVE      R5 R2        ; R5 := R2
 37 [-]: JMP       40           ; PC := 40
 38 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 39
 39 [-]: LOADBOOL  R5 1 0       ; R5 := true
 40 [-]: LOADBOOL  R6 1 0       ; R6 := true
 41 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 42 [-]: GETUPVAL  R3 U0        ; R3 := U0
 43 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Current"]
 44 [-]: EQ        0 R3 K6      ; if R3 ~= 2.000000 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETUPVAL  R3 U2        ; R3 := U2
 47 [-]: CALL      R3 1 2       ; R3 := R3()
 48 [-]: TEST      R3 1         ; if R3 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETUPVAL  R3 U0        ; R3 := U0
 52 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Current"]
 53 [-]: EQ        1 R3 K11     ; if R3 == 3.000000 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: EQ        0 R1 K11     ; if R1 ~= 3.000000 then PC := 69
 56 [-]: JMP       69           ; PC := 69
 57 [-]: GETUPVAL  R3 U3        ; R3 := U3
 58 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0xd19b6acc]
 59 [-]: EQ        0 R0 K11     ; if R0 ~= 3.000000 then PC := 64
 60 [-]: JMP       64           ; PC := 64
 61 [-]: GETGLOBAL R4 K13       ; R4 := mInitialized
 62 [-]: NOT       R4 R4        ; R4 := not R4
 63 [-]: JMP       66           ; PC := 66
 64 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 65
 65 [-]: LOADBOOL  R4 1 0       ; R4 := true
 66 [-]: LOADNIL   R5 R5        ; R5 := nil
 67 [-]: LOADBOOL  R6 1 0       ; R6 := true
 68 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 69 [-]: LOADK     R3 K14       ; R3 := "/Lotus/Language/Menu/Exit"
 70 [-]: GETUPVAL  R4 U0        ; R4 := U0
 71 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Current"]
 72 [-]: EQ        0 R4 K6      ; if R4 ~= 2.000000 then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: GETGLOBAL R4 K1        ; R4 := _T
 75 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["ArsenalPvPOnlyReturnConsole"]
 76 [-]: EQ        0 R4 K8      ; if R4 ~= nil then PC := 79
 77 [-]: JMP       79           ; PC := 79
 78 [-]: LOADK     R3 K16       ; R3 := "/Lotus/Language/Menu/Loadout_PVE"
 79 [-]: GETGLOBAL R4 K17       ; R4 := mButtons
 80 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[1.000000]
 81 [-]: SETTABLE  R4 K18 R3    ; R4["mLabel"] := R3
 82 [-]: GETGLOBAL R4 K17       ; R4 := mButtons
 83 [-]: GETGLOBAL R5 K19       ; R5 := mButtonIndices
 84 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["PvpTeam"]
 85 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 86 [-]: GETUPVAL  R5 U4        ; R5 := U4
 87 [-]: CALL      R5 1 2       ; R5 := R5()
 88 [-]: SETTABLE  R4 K21 R5    ; R4["mVisible"] := R5
 89 [-]: GETGLOBAL R4 K22       ; R4 := 0x7b998233
 90 [-]: GETGLOBAL R5 K17       ; R5 := mButtons
 91 [-]: GETGLOBAL R6 K19       ; R6 := mButtonIndices
 92 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["Mode"]
 93 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: TEST      R4 1         ; if R4 then PC := 104
 96 [-]: JMP       104          ; PC := 104
 97 [-]: GETGLOBAL R4 K17       ; R4 := mButtons
 98 [-]: GETGLOBAL R5 K19       ; R5 := mButtonIndices
 99 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Mode"]
100 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
101 [-]: GETUPVAL  R5 U5        ; R5 := U5
102 [-]: CALL      R5 1 2       ; R5 := R5()
103 [-]: SETTABLE  R4 K21 R5    ; R4["mVisible"] := R5
104 [-]: GETUPVAL  R4 U6        ; R4 := U6
105 [-]: CALL      R4 1 1       ; R4()
106 [-]: GETUPVAL  R4 U3        ; R4 := U3
107 [-]: GETTABLE  R4 R4 K24    ; R4 := R4[0x5f6897e6]
108 [-]: CALL      R4 1 1       ; R4()
109 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 12325
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["MouseDown"] := false
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Current"]
  5 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 3       ; R1,R2 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R3 U3        ; R3 := U3
 14 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0xe0cba3ca]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: SETTABLE  R3 K4 R0     ; R3["Queued"] := R0
 20 [-]: GETGLOBAL R3 K5        ; R3 := _T
 21 [-]: SETTABLE  R3 K6 K1     ; R3["mSentinelMode"] := false
 22 [-]: LOADBOOL  R3 1 0       ; R3 := true
 23 [-]: SETGLOBAL R3 K7        ; mInputBlocked := R3
 24 [-]: GETUPVAL  R3 U4        ; R3 := U4
 25 [-]: CLOSURE   R4 0         ; R4 := closure(Function #186.1)
 26 [-]: GETUPVAL  R0 U5        ; R0 := U5
 27 [-]: GETUPVAL  R0 U1        ; R0 := U1
 28 [-]: SETTABLE  R3 K8 R4     ; R3["Callback"] := R4
 29 [-]: GETUPVAL  R3 U4        ; R3 := U4
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x6bfeac2e]
 31 [-]: CALL      R3 2 1       ; R3(R4)
 32 [-]: RETURN    R0 1         ; return 


; Function #186.1:
;
; Name:            
; Defined at line: 12341
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x05eeb9db]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Queued"]
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 12348
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MenuSuitAvatar"]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
  6 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 136
  7 [-]: JMP       136          ; PC := 136
  8 [-]: GETGLOBAL R1 K0        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["InSimulacrum"]
 10 [-]: TEST      R1 1         ; if R1 then PC := 136
 11 [-]: JMP       136          ; PC := 136
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K5        ; R2 := mArsenalConsole
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 136
 16 [-]: JMP       136          ; PC := 136
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 136
 21 [-]: JMP       136          ; PC := 136
 22 [-]: GETGLOBAL R1 K5        ; R1 := mArsenalConsole
 23 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x16defb8a]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 136
 26 [-]: JMP       136          ; PC := 136
 27 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0x5280b883]
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: GETGLOBAL R2 K8        ; R2 := 0xa421af95
 30 [-]: CALL      R2 1 2       ; R2 := R2()
 31 [-]: SELF      R3 R0 K9     ; R4 := R0; R3 := R0[0xef8e8f7f]
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 34 [-]: GETGLOBAL R5 K10       ; R5 := gBaseAvatarType
 35 [-]: GETGLOBAL R6 K11       ; R6 := gPickUpType
 36 [-]: GETGLOBAL R7 K12       ; R7 := gRagdollType
 37 [-]: GETGLOBAL R8 K13       ; R8 := gHitProxyType
 38 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 39 [-]: NEWTABLE  R5 20 0      ; R5 := {}
 40 [-]: LOADK     R6 0         ; R6 := 0.000000
 41 [-]: LOADK     R7 30        ; R7 := 30.000000
 42 [-]: LOADK     R8 330       ; R8 := 330.000000
 43 [-]: LOADK     R9 180       ; R9 := 180.000000
 44 [-]: LOADK     R10 150      ; R10 := 150.000000
 45 [-]: LOADK     R11 210      ; R11 := 210.000000
 46 [-]: LOADK     R12 90       ; R12 := 90.000000
 47 [-]: LOADK     R13 270      ; R13 := 270.000000
 48 [-]: LOADK     R14 60       ; R14 := 60.000000
 49 [-]: LOADK     R15 120      ; R15 := 120.000000
 50 [-]: LOADK     R16 240      ; R16 := 240.000000
 51 [-]: LOADK     R17 300      ; R17 := 300.000000
 52 [-]: LOADK     R18 15       ; R18 := 15.000000
 53 [-]: LOADK     R19 45       ; R19 := 45.000000
 54 [-]: LOADK     R20 315      ; R20 := 315.000000
 55 [-]: LOADK     R21 345      ; R21 := 345.000000
 56 [-]: LOADK     R22 165      ; R22 := 165.000000
 57 [-]: LOADK     R23 195      ; R23 := 195.000000
 58 [-]: LOADK     R24 135      ; R24 := 135.000000
 59 [-]: LOADK     R25 225      ; R25 := 225.000000
 60 [-]: LOADK     R26 75       ; R26 := 75.000000
 61 [-]: LOADK     R27 105      ; R27 := 105.000000
 62 [-]: LOADK     R28 255      ; R28 := 255.000000
 63 [-]: LOADK     R29 285      ; R29 := 285.000000
 64 [-]: SETLIST   R5 24 1      ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 24
 65 [-]: NEWTABLE  R6 7 0       ; R6 := {}
 66 [-]: LOADK     R7 K14       ; R7 := "GAME_C1_HEAD1"
 67 [-]: LOADK     R8 K15       ; R8 := "GAME_L1_ARM2"
 68 [-]: LOADK     R9 K16       ; R9 := "GAME_R1_ARM2"
 69 [-]: LOADK     R10 K17      ; R10 := "GAME_L1_ARM3"
 70 [-]: LOADK     R11 K18      ; R11 := "GAME_R1_ARM3"
 71 [-]: LOADK     R12 K19      ; R12 := "GAME_L1_LEG3"
 72 [-]: LOADK     R13 K20      ; R13 := "GAME_R1_LEG3"
 73 [-]: SETLIST   R6 7 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 7
 74 [-]: GETGLOBAL R7 K21       ; R7 := 0xc8802016
 75 [-]: MOVE      R8 R5        ; R8 := R5
 76 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 77 [-]: JMP       124          ; PC := 124
 78 [-]: MOVE      R12 R1       ; R12 := R1
 79 [-]: GETTABLE  R13 R12 K22  ; R13 := R12["heading"]
 80 [-]: ADD       R13 R13 R11  ; R13 := R13 + R11
 81 [-]: SETTABLE  R12 K22 R13  ; R12["heading"] := R13
 82 [-]: GETGLOBAL R13 K23      ; R13 := 0xf6c6e505
 83 [-]: MOVE      R14 R12      ; R14 := R12
 84 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 85 [-]: MUL       R14 R13 K24  ; R14 := R13 * 4.000000
 86 [-]: ADD       R14 R3 R14   ; R14 := R3 + R14
 87 [-]: GETGLOBAL R15 K25      ; R15 := 0x89326c93
 88 [-]: SELF      R15 R15 K26  ; R16 := R15; R15 := R15[0x722cd32c]
 89 [-]: MOVE      R17 R3       ; R17 := R3
 90 [-]: MOVE      R18 R14      ; R18 := R14
 91 [-]: MOVE      R19 R4       ; R19 := R4
 92 [-]: LOADNIL   R20 R20      ; R20 := nil
 93 [-]: MOVE      R21 R2       ; R21 := R2
 94 [-]: CALL      R15 7 2      ; R15 := R15(R16,R17,R18,R19,R20,R21)
 95 [-]: TEST      R15 1        ; if R15 then PC := 124
 96 [-]: JMP       124          ; PC := 124
 97 [-]: GETGLOBAL R16 K21      ; R16 := 0xc8802016
 98 [-]: MOVE      R17 R6       ; R17 := R6
 99 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
100 [-]: JMP       118          ; PC := 118
101 [-]: SELF      R21 R0 K27   ; R22 := R0; R21 := R0[0x003c792f]
102 [-]: GETGLOBAL R23 K28      ; R23 := 0x0469f296
103 [-]: MOVE      R24 R20      ; R24 := R20
104 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
105 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
106 [-]: GETGLOBAL R22 K25      ; R22 := 0x89326c93
107 [-]: SELF      R22 R22 K26  ; R23 := R22; R22 := R22[0x722cd32c]
108 [-]: MOVE      R24 R21      ; R24 := R21
109 [-]: MOVE      R25 R14      ; R25 := R14
110 [-]: MOVE      R26 R4       ; R26 := R4
111 [-]: LOADNIL   R27 R27      ; R27 := nil
112 [-]: MOVE      R28 R2       ; R28 := R2
113 [-]: CALL      R22 7 2      ; R22 := R22(R23,R24,R25,R26,R27,R28)
114 [-]: MOVE      R15 R22      ; R15 := R22
115 [-]: TEST      R15 0        ; if not R15 then PC := 118
116 [-]: JMP       118          ; PC := 118
117 [-]: JMP       120          ; PC := 120
118 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 101; R18 := R19 end
119 [-]: JMP       101          ; PC := 101
120 [-]: TEST      R15 1        ; if R15 then PC := 124
121 [-]: JMP       124          ; PC := 124
122 [-]: MOVE      R1 R12       ; R1 := R12
123 [-]: JMP       126          ; PC := 126
124 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 78; R9 := R10 end
125 [-]: JMP       78           ; PC := 78
126 [-]: GETGLOBAL R22 K0       ; R22 := _T
127 [-]: GETTABLE  R23 R1 K22   ; R23 := R1["heading"]
128 [-]: SETTABLE  R22 K29 R23  ; R22["DEFAULT_SUIT_ROTATION"] := R23
129 [-]: GETGLOBAL R22 K0       ; R22 := _T
130 [-]: GETTABLE  R23 R1 K22   ; R23 := R1["heading"]
131 [-]: SETTABLE  R22 K30 R23  ; R22["ARCHWING_DEFAULT_ROTATION"] := R23
132 [-]: GETGLOBAL R22 K0       ; R22 := _T
133 [-]: GETTABLE  R23 R1 K22   ; R23 := R1["heading"]
134 [-]: SETTABLE  R22 K31 R23  ; R22["SENTINEL_DEFAULT_ROTATION"] := R23
135 [-]: JMP       195          ; PC := 195
136 [-]: GETGLOBAL R22 K0       ; R22 := _T
137 [-]: GETTABLE  R22 R22 K32  ; R22 := R22["InDojo"]
138 [-]: TEST      R22 0        ; if not R22 then PC := 159
139 [-]: JMP       159          ; PC := 159
140 [-]: GETGLOBAL R22 K4       ; R22 := 0x7b998233
141 [-]: GETGLOBAL R23 K5       ; R23 := mArsenalConsole
142 [-]: CALL      R22 2 2      ; R22 := R22(R23)
143 [-]: TEST      R22 1        ; if R22 then PC := 152
144 [-]: JMP       152          ; PC := 152
145 [-]: GETGLOBAL R22 K0       ; R22 := _T
146 [-]: GETGLOBAL R23 K5       ; R23 := mArsenalConsole
147 [-]: SELF      R23 R23 K33  ; R24 := R23; R23 := R23[0xcb3851b8]
148 [-]: CALL      R23 2 2      ; R23 := R23(R24)
149 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["heading"]
150 [-]: ADD       R23 R23 K34  ; R23 := R23 + 180.000000
151 [-]: SETTABLE  R22 K29 R23  ; R22["DEFAULT_SUIT_ROTATION"] := R23
152 [-]: GETGLOBAL R22 K0       ; R22 := _T
153 [-]: GETGLOBAL R23 K0       ; R23 := _T
154 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["DEFAULT_SUIT_ROTATION"]
155 [-]: SETTABLE  R22 K30 R23  ; R22["ARCHWING_DEFAULT_ROTATION"] := R23
156 [-]: GETGLOBAL R22 K0       ; R22 := _T
157 [-]: SETTABLE  R22 K31 K35  ; R22["SENTINEL_DEFAULT_ROTATION"] := 0.000000
158 [-]: JMP       195          ; PC := 195
159 [-]: GETGLOBAL R22 K0       ; R22 := _T
160 [-]: GETTABLE  R22 R22 K3   ; R22 := R22["InSimulacrum"]
161 [-]: TEST      R22 1        ; if R22 then PC := 168
162 [-]: JMP       168          ; PC := 168
163 [-]: GETUPVAL  R22 U1       ; R22 := U1
164 [-]: GETTABLE  R22 R22 K36  ; R22 := R22[0xcf1fcba4]
165 [-]: CALL      R22 1 2      ; R22 := R22()
166 [-]: TEST      R22 0        ; if not R22 then PC := 175
167 [-]: JMP       175          ; PC := 175
168 [-]: GETGLOBAL R22 K0       ; R22 := _T
169 [-]: SETTABLE  R22 K29 K37  ; R22["DEFAULT_SUIT_ROTATION"] := 90.000000
170 [-]: GETGLOBAL R22 K0       ; R22 := _T
171 [-]: SETTABLE  R22 K30 K37  ; R22["ARCHWING_DEFAULT_ROTATION"] := 90.000000
172 [-]: GETGLOBAL R22 K0       ; R22 := _T
173 [-]: SETTABLE  R22 K31 K37  ; R22["SENTINEL_DEFAULT_ROTATION"] := 90.000000
174 [-]: JMP       195          ; PC := 195
175 [-]: GETGLOBAL R22 K4       ; R22 := 0x7b998233
176 [-]: GETGLOBAL R23 K5       ; R23 := mArsenalConsole
177 [-]: CALL      R22 2 2      ; R22 := R22(R23)
178 [-]: TEST      R22 1        ; if R22 then PC := 187
179 [-]: JMP       187          ; PC := 187
180 [-]: GETGLOBAL R22 K0       ; R22 := _T
181 [-]: GETGLOBAL R23 K5       ; R23 := mArsenalConsole
182 [-]: SELF      R23 R23 K33  ; R24 := R23; R23 := R23[0xcb3851b8]
183 [-]: CALL      R23 2 2      ; R23 := R23(R24)
184 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["heading"]
185 [-]: ADD       R23 R23 K34  ; R23 := R23 + 180.000000
186 [-]: SETTABLE  R22 K29 R23  ; R22["DEFAULT_SUIT_ROTATION"] := R23
187 [-]: GETGLOBAL R22 K0       ; R22 := _T
188 [-]: GETUPVAL  R23 U2       ; R23 := U2
189 [-]: GETTABLE  R23 R23 K38  ; R23 := R23["DefaultArchwingRotationOffset"]
190 [-]: SETTABLE  R22 K30 R23  ; R22["ARCHWING_DEFAULT_ROTATION"] := R23
191 [-]: GETGLOBAL R22 K0       ; R22 := _T
192 [-]: GETUPVAL  R23 U2       ; R23 := U2
193 [-]: GETTABLE  R23 R23 K39  ; R23 := R23["DefaultSentinelRotationOffset"]
194 [-]: SETTABLE  R22 K31 R23  ; R22["SENTINEL_DEFAULT_ROTATION"] := R23
195 [-]: GETGLOBAL R22 K0       ; R22 := _T
196 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["suitTable"]
197 [-]: EQ        0 R22 K41    ; if R22 ~= nil then PC := 219
198 [-]: JMP       219          ; PC := 219
199 [-]: GETGLOBAL R22 K0       ; R22 := _T
200 [-]: NEWTABLE  R23 0 0      ; R23 := {}
201 [-]: SETTABLE  R22 K40 R23  ; R22["suitTable"] := R23
202 [-]: GETGLOBAL R22 K0       ; R22 := _T
203 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["suitTable"]
204 [-]: GETGLOBAL R23 K0       ; R23 := _T
205 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["DEFAULT_SUIT_ROTATION"]
206 [-]: SETTABLE  R22 K42 R23  ; R22[0x7b998233] := R23
207 [-]: GETGLOBAL R22 K0       ; R22 := _T
208 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["suitTable"]
209 [-]: GETGLOBAL R23 K0       ; R23 := _T
210 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["suitTable"]
211 [-]: GETTABLE  R23 R23 K42  ; R23 := R23["desiredRot"]
212 [-]: SETTABLE  R22 K43 R23  ; R22[0x89326c93] := R23
213 [-]: GETGLOBAL R22 K0       ; R22 := _T
214 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["suitTable"]
215 [-]: GETGLOBAL R23 K45      ; R23 := 0x00046924
216 [-]: CALL      R23 1 2      ; R23 := R23()
217 [-]: SETTABLE  R22 K44 R23  ; R22[0xfb64e76c] := R23
218 [-]: JMP       229          ; PC := 229
219 [-]: GETGLOBAL R22 K0       ; R22 := _T
220 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["suitTable"]
221 [-]: GETGLOBAL R23 K0       ; R23 := _T
222 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["DEFAULT_SUIT_ROTATION"]
223 [-]: SETTABLE  R22 K42 R23  ; R22[0x7b998233] := R23
224 [-]: GETGLOBAL R22 K0       ; R22 := _T
225 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["suitTable"]
226 [-]: GETGLOBAL R23 K45      ; R23 := 0x00046924
227 [-]: CALL      R23 1 2      ; R23 := R23()
228 [-]: SETTABLE  R22 K44 R23  ; R22[0xfb64e76c] := R23
229 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 12418
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := 0x89326c93
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xfb64e76c]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R1 K3        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["MenuSuitAvatar"]
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 0         ; if not R2 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0[0xbb610e5b]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: MOVE      R1 R2        ; R1 := R2
 26 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0x5578d98b]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 29 [-]: MOVE      R4 R2        ; R4 := R2
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: TEST      R3 0         ; if not R3 then PC := 43
 32 [-]: JMP       43           ; PC := 43
 33 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0[0xbb610e5b]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xf2deaf69]
 36 [-]: GETUPVAL  R5 U0        ; R5 := U0
 37 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 38 [-]: TEST      R3 0         ; if not R3 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0[0xbb610e5b]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: MOVE      R2 R3        ; R2 := R3
 43 [-]: GETGLOBAL R3 K8        ; R3 := 0xa421af95
 44 [-]: CALL      R3 1 2       ; R3 := R3()
 45 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 46 [-]: MOVE      R5 R2        ; R5 := R2
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: TEST      R4 1         ; if R4 then PC := 67
 49 [-]: JMP       67           ; PC := 67
 50 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0[0xbb610e5b]
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 67
 53 [-]: JMP       67           ; PC := 67
 54 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1[0x5d985c7e]
 55 [-]: LOADNIL   R6 R6        ; R6 := nil
 56 [-]: LOADBOOL  R7 0 0       ; R7 := false
 57 [-]: LOADK     R8 2         ; R8 := 2.000000
 58 [-]: LOADK     R9 1         ; R9 := 1.000000
 59 [-]: LOADBOOL  R10 1 0      ; R10 := true
 60 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 61 [-]: SELF      R4 R2 K11    ; R5 := R2; R4 := R2[0x2abc8ecd]
 62 [-]: LOADBOOL  R6 0 0       ; R6 := false
 63 [-]: CALL      R4 3 1       ; R4(R5,R6)
 64 [-]: SELF      R4 R2 K12    ; R5 := R2; R4 := R2[0xd1586535]
 65 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 66 [-]: MOVE      R3 R4        ; R3 := R4
 67 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 68 [-]: MOVE      R5 R1        ; R5 := R1
 69 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 70 [-]: TEST      R4 1         ; if R4 then PC := 240
 71 [-]: JMP       240          ; PC := 240
 72 [-]: SELF      R4 R1 K13    ; R5 := R1; R4 := R1[0x020d4331]
 73 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 74 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0xcdadcd5d]
 75 [-]: GETGLOBAL R6 K15       ; R6 := ZERO_VECTOR
 76 [-]: CALL      R4 3 1       ; R4(R5,R6)
 77 [-]: SELF      R4 R1 K13    ; R5 := R1; R4 := R1[0x020d4331]
 78 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 79 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x8eefb01e]
 80 [-]: GETGLOBAL R6 K8        ; R6 := 0xa421af95
 81 [-]: CALL      R6 1 0       ; R6,... := R6()
 82 [-]: CALL      R4 0 1       ; R4(R5,...)
 83 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 84 [-]: GETGLOBAL R5 K17       ; R5 := 0xbe190284
 85 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 86 [-]: TEST      R4 1         ; if R4 then PC := 240
 87 [-]: JMP       240          ; PC := 240
 88 [-]: GETGLOBAL R4 K17       ; R4 := 0xbe190284
 89 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0xf2deaf69]
 90 [-]: GETGLOBAL R6 K18       ; R6 := gLotusPhotoBoothGameRulesType
 91 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 92 [-]: TEST      R4 1         ; if R4 then PC := 240
 93 [-]: JMP       240          ; PC := 240
 94 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 95 [-]: GETGLOBAL R5 K19       ; R5 := mArsenalConsole
 96 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 97 [-]: TEST      R4 1         ; if R4 then PC := 240
 98 [-]: JMP       240          ; PC := 240
 99 [-]: GETGLOBAL R4 K19       ; R4 := mArsenalConsole
100 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xd1586535]
101 [-]: CALL      R4 2 2       ; R4 := R4(R5)
102 [-]: GETGLOBAL R5 K17       ; R5 := 0xbe190284
103 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0xf2deaf69]
104 [-]: GETGLOBAL R7 K20       ; R7 := gLotusBaseGameRulesType
105 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
106 [-]: TEST      R5 0         ; if not R5 then PC := 126
107 [-]: JMP       126          ; PC := 126
108 [-]: GETGLOBAL R5 K17       ; R5 := 0xbe190284
109 [-]: SELF      R5 R5 K21    ; R6 := R5; R5 := R5[0xef893aec]
110 [-]: CALL      R5 2 2       ; R5 := R5(R6)
111 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["location"]
112 [-]: GETUPVAL  R6 U1        ; R6 := U1
113 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["CETUS_NODE_TAG"]
114 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 125
115 [-]: JMP       125          ; PC := 125
116 [-]: GETGLOBAL R5 K17       ; R5 := 0xbe190284
117 [-]: SELF      R5 R5 K21    ; R6 := R5; R5 := R5[0xef893aec]
118 [-]: CALL      R5 2 2       ; R5 := R5(R6)
119 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["location"]
120 [-]: GETUPVAL  R6 U1        ; R6 := U1
121 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["FORTUNA_NODE_TAG"]
122 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 125
123 [-]: JMP       125          ; PC := 125
124 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 125
125 [-]: LOADBOOL  R5 1 0       ; R5 := true
126 [-]: TEST      R5 1         ; if R5 then PC := 133
127 [-]: JMP       133          ; PC := 133
128 [-]: GETUPVAL  R6 U2        ; R6 := U2
129 [-]: GETTABLE  R6 R6 K25    ; R6 := R6[0x7a04c21d]
130 [-]: CALL      R6 1 2       ; R6 := R6()
131 [-]: TEST      R6 0         ; if not R6 then PC := 135
132 [-]: JMP       135          ; PC := 135
133 [-]: MOVE      R4 R3        ; R4 := R3
134 [-]: JMP       146          ; PC := 146
135 [-]: GETGLOBAL R6 K3        ; R6 := _T
136 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["InSimulacrum"]
137 [-]: TEST      R6 0         ; if not R6 then PC := 143
138 [-]: JMP       143          ; PC := 143
139 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["y"]
140 [-]: SUB       R6 R6 K28    ; R6 := R6 - 0.750000
141 [-]: SETTABLE  R4 K27 R6    ; R4["y"] := R6
142 [-]: JMP       146          ; PC := 146
143 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["y"]
144 [-]: SUB       R6 R6 K28    ; R6 := R6 - 0.750000
145 [-]: SETTABLE  R4 K27 R6    ; R4["y"] := R6
146 [-]: GETGLOBAL R6 K29       ; R6 := 0xcbd666e1
147 [-]: LOADK     R7 0         ; R7 := 0.000000
148 [-]: CALL      R6 2 1       ; R6(R7)
149 [-]: SELF      R6 R1 K30    ; R7 := R1; R6 := R1[0x589ef1c1]
150 [-]: MOVE      R8 R4        ; R8 := R4
151 [-]: GETGLOBAL R9 K19       ; R9 := mArsenalConsole
152 [-]: SELF      R9 R9 K31    ; R10 := R9; R9 := R9[0xcb3851b8]
153 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
154 [-]: CALL      R6 0 1       ; R6(R7,...)
155 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
156 [-]: MOVE      R7 R2        ; R7 := R2
157 [-]: CALL      R6 2 2       ; R6 := R6(R7)
158 [-]: TEST      R6 1         ; if R6 then PC := 177
159 [-]: JMP       177          ; PC := 177
160 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0[0xbb610e5b]
161 [-]: CALL      R6 2 2       ; R6 := R6(R7)
162 [-]: EQ        0 R2 R6      ; if R2 ~= R6 then PC := 177
163 [-]: JMP       177          ; PC := 177
164 [-]: SELF      R6 R0 K32    ; R7 := R0; R6 := R0[0xa534c3ac]
165 [-]: CALL      R6 2 2       ; R6 := R6(R7)
166 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
167 [-]: MOVE      R8 R6        ; R8 := R6
168 [-]: CALL      R7 2 2       ; R7 := R7(R8)
169 [-]: TEST      R7 1         ; if R7 then PC := 177
170 [-]: JMP       177          ; PC := 177
171 [-]: SELF      R7 R6 K30    ; R8 := R6; R7 := R6[0x589ef1c1]
172 [-]: MOVE      R9 R4        ; R9 := R4
173 [-]: GETGLOBAL R10 K19      ; R10 := mArsenalConsole
174 [-]: SELF      R10 R10 K31  ; R11 := R10; R10 := R10[0xcb3851b8]
175 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
176 [-]: CALL      R7 0 1       ; R7(R8,...)
177 [-]: GETGLOBAL R7 K1        ; R7 := 0x89326c93
178 [-]: SELF      R7 R7 K33    ; R8 := R7; R7 := R7[0x18d05d30]
179 [-]: CALL      R7 2 2       ; R7 := R7(R8)
180 [-]: TEST      R7 1         ; if R7 then PC := 199
181 [-]: JMP       199          ; PC := 199
182 [-]: GETGLOBAL R7 K3        ; R7 := _T
183 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["InSimulacrum"]
184 [-]: TEST      R7 0         ; if not R7 then PC := 199
185 [-]: JMP       199          ; PC := 199
186 [-]: SELF      R7 R0 K32    ; R8 := R0; R7 := R0[0xa534c3ac]
187 [-]: CALL      R7 2 2       ; R7 := R7(R8)
188 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
189 [-]: MOVE      R9 R7        ; R9 := R7
190 [-]: CALL      R8 2 2       ; R8 := R8(R9)
191 [-]: TEST      R8 1         ; if R8 then PC := 199
192 [-]: JMP       199          ; PC := 199
193 [-]: SELF      R8 R7 K30    ; R9 := R7; R8 := R7[0x589ef1c1]
194 [-]: MOVE      R10 R4       ; R10 := R4
195 [-]: GETGLOBAL R11 K19      ; R11 := mArsenalConsole
196 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11[0xcb3851b8]
197 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
198 [-]: CALL      R8 0 1       ; R8(R9,...)
199 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
200 [-]: GETGLOBAL R9 K3        ; R9 := _T
201 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
202 [-]: CALL      R8 2 2       ; R8 := R8(R9)
203 [-]: TEST      R8 0         ; if not R8 then PC := 208
204 [-]: JMP       208          ; PC := 208
205 [-]: GETGLOBAL R8 K3        ; R8 := _T
206 [-]: NEWTABLE  R9 0 0       ; R9 := {}
207 [-]: SETTABLE  R8 K34 R9    ; R8["suitTable"] := R9
208 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
209 [-]: GETGLOBAL R9 K3        ; R9 := _T
210 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
211 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["positions"]
212 [-]: CALL      R8 2 2       ; R8 := R8(R9)
213 [-]: TEST      R8 0         ; if not R8 then PC := 219
214 [-]: JMP       219          ; PC := 219
215 [-]: GETGLOBAL R8 K3        ; R8 := _T
216 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["suitTable"]
217 [-]: NEWTABLE  R9 0 0       ; R9 := {}
218 [-]: SETTABLE  R8 K35 R9    ; R8["positions"] := R9
219 [-]: SELF      R8 R1 K36    ; R9 := R1; R8 := R1[0x388577d5]
220 [-]: CALL      R8 2 2       ; R8 := R8(R9)
221 [-]: GETGLOBAL R9 K3        ; R9 := _T
222 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["suitTable"]
223 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["positions"]
224 [-]: SETTABLE  R9 R8 R4     ; R9[R8] := R4
225 [-]: SELF      R9 R0 K5     ; R10 := R0; R9 := R0[0xbb610e5b]
226 [-]: CALL      R9 2 2       ; R9 := R9(R10)
227 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
228 [-]: MOVE      R11 R9       ; R11 := R9
229 [-]: CALL      R10 2 2      ; R10 := R10(R11)
230 [-]: TEST      R10 1        ; if R10 then PC := 240
231 [-]: JMP       240          ; PC := 240
232 [-]: EQ        1 R9 R1      ; if R9 == R1 then PC := 240
233 [-]: JMP       240          ; PC := 240
234 [-]: GETGLOBAL R10 K3       ; R10 := _T
235 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["suitTable"]
236 [-]: GETTABLE  R10 R10 K35  ; R10 := R10["positions"]
237 [-]: SELF      R11 R9 K36   ; R12 := R9; R11 := R9[0x388577d5]
238 [-]: CALL      R11 2 2      ; R11 := R11(R12)
239 [-]: SETTABLE  R10 R11 R4   ; R10[R11] := R4
240 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 12501
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xab18f94e
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := mLists
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mLoadOutList"]
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mElements"]
 10 [-]: GETGLOBAL R2 K2        ; R2 := mLists
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mLoadOutList"]
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SuitSlotId"]
 13 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 21 [-]: GETGLOBAL R3 K6        ; R3 := mChildMovie
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R2 K6        ; R2 := mChildMovie
 26 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x32302b4a]
 27 [-]: CALL      R2 2 1       ; R2(R3)
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["suitTable"]
 30 [-]: GETGLOBAL R3 K8        ; R3 := _T
 31 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["DEFAULT_SUIT_ROTATION"]
 32 [-]: SETTABLE  R2 K10 R3    ; R2["desiredRot"] := R3
 33 [-]: GETGLOBAL R2 K8        ; R2 := _T
 34 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["suitTable"]
 35 [-]: GETGLOBAL R3 K8        ; R3 := _T
 36 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["suitTable"]
 37 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["desiredRot"]
 38 [-]: SETTABLE  R2 K12 R3    ; R2["lerpRot"] := R3
 39 [-]: GETUPVAL  R2 U0        ; R2 := U0
 40 [-]: GETTABLE  R2 R2 K13    ; R2 := R2[0xd4c67576]
 41 [-]: LOADBOOL  R3 1 0       ; R3 := true
 42 [-]: CALL      R2 2 1       ; R2(R3)
 43 [-]: GETGLOBAL R2 K8        ; R2 := _T
 44 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 45 [-]: SETTABLE  R3 K15 R0    ; R3["abilityIndex"] := R0
 46 [-]: GETTABLE  R4 R1 K17    ; R4 := R1["UID"]
 47 [-]: SETTABLE  R3 K16 R4    ; R3["weaponId"] := R4
 48 [-]: GETTABLE  R4 R1 K19    ; R4 := R1["mCustSlot"]
 49 [-]: SETTABLE  R3 K18 R4    ; R3["configId"] := R4
 50 [-]: SETTABLE  R2 K14 R3    ; R2["ComposeTool"] := R3
 51 [-]: GETGLOBAL R2 K20       ; R2 := 0xae91e43b
 52 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0x1fd6abd0]
 53 [-]: GETGLOBAL R4 K1        ; R4 := 0xab18f94e
 54 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 55 [-]: SETGLOBAL R2 K6        ; mChildMovie := R2
 56 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 12524
; #Upvalues:       41
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  48

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xb693b6c1
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := mInitialized
  4 [-]: TEST      R1 0         ; if not R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 12 [-]: GETGLOBAL R2 K4        ; R2 := 0x89326c93
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 18 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x8a8c8d5a]
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: CALL      R1 3 1       ; R1(R2,R3)
 21 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 22 [-]: GETGLOBAL R2 K6        ; R2 := mTimerTable
 23 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mTimerMgr"]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: GETGLOBAL R1 K6        ; R1 := mTimerTable
 28 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mTimerMgr"]
 29 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xfaa69527]
 30 [-]: MOVE      R3 R0        ; R3 := R0
 31 [-]: CALL      R1 3 1       ; R1(R2,R3)
 32 [-]: GETGLOBAL R1 K9        ; R1 := 0x34291f5c
 33 [-]: GETTABLE  R1 R1 K10    ; R1 := R1[0xe6b41adb]
 34 [-]: CALL      R1 1 2       ; R1 := R1()
 35 [-]: TEST      R1 0         ; if not R1 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 38 [-]: GETGLOBAL R2 K11       ; R2 := mItemsGrid
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: TEST      R1 1         ; if R1 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: GETGLOBAL R1 K11       ; R1 := mItemsGrid
 43 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xfaa69527]
 44 [-]: MOVE      R3 R0        ; R3 := R0
 45 [-]: CALL      R1 3 1       ; R1(R2,R3)
 46 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 47 [-]: GETUPVAL  R2 U0        ; R2 := U0
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: TEST      R1 1         ; if R1 then PC := 56
 50 [-]: JMP       56           ; PC := 56
 51 [-]: GETUPVAL  R1 U0        ; R1 := U0
 52 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xfaa69527]
 53 [-]: GETGLOBAL R3 K0        ; R3 := 0xb693b6c1
 54 [-]: CALL      R3 1 0       ; R3,... := R3()
 55 [-]: CALL      R1 0 1       ; R1(R2,...)
 56 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 57 [-]: GETUPVAL  R2 U1        ; R2 := U1
 58 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 59 [-]: TEST      R1 1         ; if R1 then PC := 65
 60 [-]: JMP       65           ; PC := 65
 61 [-]: GETUPVAL  R1 U1        ; R1 := U1
 62 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xfaa69527]
 63 [-]: MOVE      R3 R0        ; R3 := R0
 64 [-]: CALL      R1 3 1       ; R1(R2,R3)
 65 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 66 [-]: GETGLOBAL R2 K12       ; R2 := _T
 67 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["MenuSuitAvatar"]
 68 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 69 [-]: TEST      R1 0         ; if not R1 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETUPVAL  R1 U2        ; R1 := U2
 72 [-]: CALL      R1 1 1       ; R1()
 73 [-]: GETUPVAL  R1 U3        ; R1 := U3
 74 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["Timer"]
 75 [-]: LT        0 K15 R1     ; if 0.000000 >= R1 then PC := 144
 76 [-]: JMP       144          ; PC := 144
 77 [-]: GETUPVAL  R1 U3        ; R1 := U3
 78 [-]: GETUPVAL  R2 U3        ; R2 := U3
 79 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Timer"]
 80 [-]: SUB       R2 R2 R0     ; R2 := R2 - R0
 81 [-]: SETTABLE  R1 K14 R2    ; R1["Timer"] := R2
 82 [-]: LOADBOOL  R1 1 0       ; R1 := true
 83 [-]: SETGLOBAL R1 K16       ; mInputBlocked := R1
 84 [-]: LOADK     R1 1         ; R1 := 1.000000
 85 [-]: GETUPVAL  R2 U3        ; R2 := U3
 86 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Timer"]
 87 [-]: GETUPVAL  R3 U3        ; R3 := U3
 88 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["StartTime"]
 89 [-]: GETUPVAL  R4 U3        ; R4 := U3
 90 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["FadeInTime"]
 91 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
 92 [-]: LT        0 R3 R2      ; if R3 >= R2 then PC := 109
 93 [-]: JMP       109          ; PC := 109
 94 [-]: GETUPVAL  R2 U3        ; R2 := U3
 95 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["FadeInTime"]
 96 [-]: GETUPVAL  R3 U3        ; R3 := U3
 97 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["Timer"]
 98 [-]: GETUPVAL  R4 U3        ; R4 := U3
 99 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["StartTime"]
100 [-]: GETUPVAL  R5 U3        ; R5 := U3
101 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["FadeInTime"]
102 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
103 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
104 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
105 [-]: GETUPVAL  R3 U3        ; R3 := U3
106 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["FadeInTime"]
107 [-]: DIV       R1 R2 R3     ; R1 := R2 / R3
108 [-]: JMP       138          ; PC := 138
109 [-]: GETUPVAL  R2 U3        ; R2 := U3
110 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Timer"]
111 [-]: LE        0 R2 K15     ; if R2 > 0.000000 then PC := 117
112 [-]: JMP       117          ; PC := 117
113 [-]: LOADK     R1 0         ; R1 := 0.000000
114 [-]: LOADBOOL  R2 0 0       ; R2 := false
115 [-]: SETGLOBAL R2 K16       ; mInputBlocked := R2
116 [-]: JMP       138          ; PC := 138
117 [-]: GETUPVAL  R2 U3        ; R2 := U3
118 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Timer"]
119 [-]: GETUPVAL  R3 U3        ; R3 := U3
120 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["FadeOutTime"]
121 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 129
122 [-]: JMP       129          ; PC := 129
123 [-]: GETUPVAL  R2 U3        ; R2 := U3
124 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Timer"]
125 [-]: GETUPVAL  R3 U3        ; R3 := U3
126 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["FadeOutTime"]
127 [-]: DIV       R1 R2 R3     ; R1 := R2 / R3
128 [-]: JMP       138          ; PC := 138
129 [-]: GETUPVAL  R2 U3        ; R2 := U3
130 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["Callback"]
131 [-]: EQ        1 R2 K21     ; if R2 == nil then PC := 138
132 [-]: JMP       138          ; PC := 138
133 [-]: GETUPVAL  R2 U3        ; R2 := U3
134 [-]: GETTABLE  R2 R2 K22    ; R2 := R2[0x75afeb61]
135 [-]: CALL      R2 1 1       ; R2()
136 [-]: GETUPVAL  R2 U3        ; R2 := U3
137 [-]: SETTABLE  R2 K20 K21   ; R2["Callback"] := nil
138 [-]: GETGLOBAL R2 K4        ; R2 := 0x89326c93
139 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2[0x7c1a0374]
140 [-]: CALL      R2 2 2       ; R2 := R2(R3)
141 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2[0xb6df3e50]
142 [-]: MOVE      R4 R1        ; R4 := R1
143 [-]: CALL      R2 3 1       ; R2(R3,R4)
144 [-]: GETGLOBAL R2 K12       ; R2 := _T
145 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["Arsenal_QuickUpgrade"]
146 [-]: EQ        1 R2 K21     ; if R2 == nil then PC := 174
147 [-]: JMP       174          ; PC := 174
148 [-]: GETUPVAL  R2 U4        ; R2 := U4
149 [-]: CALL      R2 1 2       ; R2 := R2()
150 [-]: TEST      R2 0         ; if not R2 then PC := 174
151 [-]: JMP       174          ; PC := 174
152 [-]: LOADNIL   R2 R2        ; R2 := nil
153 [-]: GETGLOBAL R3 K26       ; R3 := mLists
154 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["mLoadOutList"]
155 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0xea061e98]
156 [-]: CLOSURE   R5 0         ; R5 := closure(Function #190.1)
157 [-]: MOVE      R0 R2        ; R0 := R2
158 [-]: CALL      R3 3 1       ; R3(R4,R5)
159 [-]: EQ        1 R2 K21     ; if R2 == nil then PC := 173
160 [-]: JMP       173          ; PC := 173
161 [-]: GETUPVAL  R3 U5        ; R3 := U5
162 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["mStatCompare"]
163 [-]: SETTABLE  R3 K30 K15   ; R3["mUpdateQueued"] := 0.000000
164 [-]: GETUPVAL  R3 U6        ; R3 := U6
165 [-]: MOVE      R4 R2        ; R4 := R2
166 [-]: LOADBOOL  R5 1 0       ; R5 := true
167 [-]: LOADBOOL  R6 1 0       ; R6 := true
168 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
169 [-]: TEST      R3 0         ; if not R3 then PC := 173
170 [-]: JMP       173          ; PC := 173
171 [-]: GETGLOBAL R4 K12       ; R4 := _T
172 [-]: SETTABLE  R4 K25 K21   ; R4["Arsenal_QuickUpgrade"] := nil
173 [-]: CLOSE     R2           ; SAVE R2,...
174 [-]: GETUPVAL  R2 U5        ; R2 := U5
175 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["mStatCompare"]
176 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["mUpdateQueued"]
177 [-]: LT        0 K15 R2     ; if 0.000000 >= R2 then PC := 201
178 [-]: JMP       201          ; PC := 201
179 [-]: GETUPVAL  R2 U5        ; R2 := U5
180 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["mStatCompare"]
181 [-]: GETUPVAL  R3 U5        ; R3 := U5
182 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["mStatCompare"]
183 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["mUpdateQueued"]
184 [-]: SUB       R3 R3 K31    ; R3 := R3 - 1.000000
185 [-]: SETTABLE  R2 K30 R3    ; R2["mUpdateQueued"] := R3
186 [-]: GETUPVAL  R2 U5        ; R2 := U5
187 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["mStatCompare"]
188 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["mUpdateQueued"]
189 [-]: EQ        0 R2 K15     ; if R2 ~= 0.000000 then PC := 201
190 [-]: JMP       201          ; PC := 201
191 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
192 [-]: GETGLOBAL R3 K32       ; R3 := mSelected
193 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["Element"]
194 [-]: CALL      R2 2 2       ; R2 := R2(R3)
195 [-]: TEST      R2 1         ; if R2 then PC := 201
196 [-]: JMP       201          ; PC := 201
197 [-]: GETUPVAL  R2 U7        ; R2 := U7
198 [-]: GETGLOBAL R3 K32       ; R3 := mSelected
199 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["Element"]
200 [-]: CALL      R2 2 1       ; R2(R3)
201 [-]: GETGLOBAL R2 K9        ; R2 := 0x34291f5c
202 [-]: GETTABLE  R2 R2 K34    ; R2 := R2[0x1467d5f4]
203 [-]: CALL      R2 1 2       ; R2 := R2()
204 [-]: TEST      R2 0         ; if not R2 then PC := 262
205 [-]: JMP       262          ; PC := 262
206 [-]: GETUPVAL  R2 U8        ; R2 := U8
207 [-]: GETUPVAL  R3 U9        ; R3 := U9
208 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["SWAPPING_ITEM"]
209 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 221
210 [-]: JMP       221          ; PC := 221
211 [-]: GETUPVAL  R2 U8        ; R2 := U8
212 [-]: GETUPVAL  R3 U9        ; R3 := U9
213 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["SELECTING_SKINS"]
214 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 221
215 [-]: JMP       221          ; PC := 221
216 [-]: GETUPVAL  R2 U8        ; R2 := U8
217 [-]: GETUPVAL  R3 U9        ; R3 := U9
218 [-]: GETTABLE  R3 R3 K37    ; R3 := R3["SELECTING_CONSUMABLES"]
219 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 225
220 [-]: JMP       225          ; PC := 225
221 [-]: GETUPVAL  R2 U10       ; R2 := U10
222 [-]: GETTABLE  R2 R2 K38    ; R2 := R2[0x70d40695]
223 [-]: CALL      R2 1 2       ; R2 := R2()
224 [-]: JMP       227          ; PC := 227
225 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 226
226 [-]: LOADBOOL  R2 1 0       ; R2 := true
227 [-]: GETGLOBAL R3 K26       ; R3 := mLists
228 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["mCosmeticsScrollBar"]
229 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["mEnabled"]
230 [-]: TEST      R3 0         ; if not R3 then PC := 243
231 [-]: JMP       243          ; PC := 243
232 [-]: GETUPVAL  R3 U8        ; R3 := U8
233 [-]: GETUPVAL  R4 U9        ; R4 := U9
234 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["CUSTOMIZING_SKINS"]
235 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETUPVAL  R3 U10       ; R3 := U10
238 [-]: GETTABLE  R3 R3 K42    ; R3 := R3[0xe502027a]
239 [-]: CALL      R3 1 2       ; R3 := R3()
240 [-]: JMP       243          ; PC := 243
241 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 242
242 [-]: LOADBOOL  R3 1 0       ; R3 := true
243 [-]: GETUPVAL  R4 U5        ; R4 := U5
244 [-]: GETTABLE  R4 R4 K43    ; R4 := R4["mStatCompareScrollBar"]
245 [-]: GETTABLE  R4 R4 K40    ; R4 := R4["mEnabled"]
246 [-]: TEST      R4 0         ; if not R4 then PC := 251
247 [-]: JMP       251          ; PC := 251
248 [-]: GETUPVAL  R4 U10       ; R4 := U10
249 [-]: GETTABLE  R4 R4 K44    ; R4 := R4[0x8d5a3387]
250 [-]: CALL      R4 1 2       ; R4 := R4()
251 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
252 [-]: SELF      R5 R5 K45    ; R6 := R5; R5 := R5[0x824d113a]
253 [-]: TEST      R2 1         ; if R2 then PC := 259
254 [-]: JMP       259          ; PC := 259
255 [-]: TEST      R4 1         ; if R4 then PC := 259
256 [-]: JMP       259          ; PC := 259
257 [-]: NOT       R7 R3        ; R7 := not R3
258 [-]: JMP       261          ; PC := 261
259 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 260
260 [-]: LOADBOOL  R7 1 0       ; R7 := true
261 [-]: CALL      R5 3 1       ; R5(R6,R7)
262 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
263 [-]: GETGLOBAL R6 K46       ; R6 := 0x9ba7909f
264 [-]: SELF      R6 R6 K47    ; R7 := R6; R6 := R6[0xc12c4f71]
265 [-]: CALL      R6 2 2       ; R6 := R6(R7)
266 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 270
267 [-]: JMP       270          ; PC := 270
268 [-]: GETUPVAL  R5 U11       ; R5 := U11
269 [-]: SETTABLE  R5 K48 K49   ; R5["MouseDown"] := false
270 [-]: GETUPVAL  R5 U5        ; R5 := U5
271 [-]: GETTABLE  R5 R5 K43    ; R5 := R5["mStatCompareScrollBar"]
272 [-]: EQ        1 R5 K21     ; if R5 == nil then PC := 332
273 [-]: JMP       332          ; PC := 332
274 [-]: GETUPVAL  R5 U5        ; R5 := U5
275 [-]: GETTABLE  R5 R5 K43    ; R5 := R5["mStatCompareScrollBar"]
276 [-]: GETTABLE  R5 R5 K40    ; R5 := R5["mEnabled"]
277 [-]: TEST      R5 0         ; if not R5 then PC := 332
278 [-]: JMP       332          ; PC := 332
279 [-]: GETUPVAL  R5 U10       ; R5 := U10
280 [-]: GETTABLE  R5 R5 K44    ; R5 := R5[0x8d5a3387]
281 [-]: CALL      R5 1 2       ; R5 := R5()
282 [-]: GETUPVAL  R6 U5        ; R6 := U5
283 [-]: GETTABLE  R6 R6 K43    ; R6 := R6["mStatCompareScrollBar"]
284 [-]: GETTABLE  R6 R6 K50    ; R6 := R6["mActive"]
285 [-]: EQ        1 R6 R5      ; if R6 == R5 then PC := 332
286 [-]: JMP       332          ; PC := 332
287 [-]: GETUPVAL  R6 U12       ; R6 := U12
288 [-]: GETTABLE  R6 R6 K51    ; R6 := R6[0x06d055f9]
289 [-]: GETUPVAL  R7 U5        ; R7 := U5
290 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["mStatCompareScrollBar"]
291 [-]: GETTABLE  R7 R7 K50    ; R7 := R7["mActive"]
292 [-]: EQ        1 R7 K21     ; if R7 == nil then PC := 295
293 [-]: JMP       295          ; PC := 295
294 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 295
295 [-]: LOADBOOL  R7 1 0       ; R7 := true
296 [-]: LOADK     R8 0         ; R8 := 0.000000
297 [-]: LOADK     R9 K52       ; R9 := 0.200000
298 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
299 [-]: GETUPVAL  R7 U5        ; R7 := U5
300 [-]: GETTABLE  R7 R7 K43    ; R7 := R7["mStatCompareScrollBar"]
301 [-]: SETTABLE  R7 K50 R5    ; R7["mActive"] := R5
302 [-]: GETUPVAL  R7 U12       ; R7 := U12
303 [-]: GETTABLE  R7 R7 K51    ; R7 := R7[0x06d055f9]
304 [-]: GETUPVAL  R8 U5        ; R8 := U5
305 [-]: GETTABLE  R8 R8 K43    ; R8 := R8["mStatCompareScrollBar"]
306 [-]: GETTABLE  R8 R8 K50    ; R8 := R8["mActive"]
307 [-]: LOADK     R9 100       ; R9 := 100.000000
308 [-]: LOADK     R10 50       ; R10 := 50.000000
309 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
310 [-]: GETUPVAL  R8 U12       ; R8 := U12
311 [-]: GETTABLE  R8 R8 K51    ; R8 := R8[0x06d055f9]
312 [-]: GETUPVAL  R9 U5        ; R9 := U5
313 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["mStatCompareScrollBar"]
314 [-]: GETTABLE  R9 R9 K50    ; R9 := R9["mActive"]
315 [-]: LOADK     R10 100      ; R10 := 100.000000
316 [-]: LOADK     R11 30       ; R11 := 30.000000
317 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
318 [-]: GETGLOBAL R9 K53       ; R9 := 0x25312c9b
319 [-]: GETGLOBAL R10 K3       ; R10 := 0xae91e43b
320 [-]: LOADK     R11 K54      ; R11 := "StatContainer.ScrollBarContainer"
321 [-]: LOADK     R12 8        ; R12 := 8.000000
322 [-]: NEWTABLE  R13 2 0      ; R13 := {}
323 [-]: LOADK     R14 10       ; R14 := 10.000000
324 [-]: LOADK     R15 5        ; R15 := 5.000000
325 [-]: SETLIST   R13 2 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 2
326 [-]: NEWTABLE  R14 2 0      ; R14 := {}
327 [-]: MOVE      R15 R7       ; R15 := R7
328 [-]: MOVE      R16 R8       ; R16 := R8
329 [-]: SETLIST   R14 2 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 2
330 [-]: MOVE      R15 R6       ; R15 := R6
331 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
332 [-]: GETUPVAL  R9 U13       ; R9 := U13
333 [-]: TEST      R9 0         ; if not R9 then PC := 346
334 [-]: JMP       346          ; PC := 346
335 [-]: LOADBOOL  R9 0 0       ; R9 := false
336 [-]: SETUPVAL  R9 U13       ; U82 := R13
337 [-]: GETUPVAL  R9 U12       ; R9 := U12
338 [-]: GETTABLE  R9 R9 K56    ; R9 := R9[0xf616a184]
339 [-]: GETGLOBAL R10 K3       ; R10 := 0xae91e43b
340 [-]: SELF      R10 R10 K57  ; R11 := R10; R10 := R10[0x42b04007]
341 [-]: LOADK     R12 K58      ; R12 := "/Lotus/Language/Menu/RetrieveLockedWeapons"
342 [-]: LOADBOOL  R13 0 0      ; R13 := false
343 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
344 [-]: LOADK     R11 K59      ; R11 := "ConfirmWeaponRetrieve"
345 [-]: CALL      R9 3 1       ; R9(R10,R11)
346 [-]: GETGLOBAL R9 K12       ; R9 := _T
347 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["QuickSelectTutorialName"]
348 [-]: EQ        0 R9 K21     ; if R9 ~= nil then PC := 377
349 [-]: JMP       377          ; PC := 377
350 [-]: GETGLOBAL R9 K12       ; R9 := _T
351 [-]: GETTABLE  R9 R9 K61    ; R9 := R9["TopMenuOpen"]
352 [-]: EQ        1 R9 K21     ; if R9 == nil then PC := 358
353 [-]: JMP       358          ; PC := 358
354 [-]: GETGLOBAL R9 K12       ; R9 := _T
355 [-]: GETTABLE  R9 R9 K61    ; R9 := R9["TopMenuOpen"]
356 [-]: TEST      R9 1         ; if R9 then PC := 377
357 [-]: JMP       377          ; PC := 377
358 [-]: GETGLOBAL R9 K2        ; R9 := 0x7b998233
359 [-]: GETGLOBAL R10 K62      ; R10 := mChildMovie
360 [-]: CALL      R9 2 2       ; R9 := R9(R10)
361 [-]: TEST      R9 1         ; if R9 then PC := 379
362 [-]: JMP       379          ; PC := 379
363 [-]: GETGLOBAL R9 K2        ; R9 := 0x7b998233
364 [-]: GETGLOBAL R10 K62      ; R10 := mChildMovie
365 [-]: SELF      R10 R10 K63  ; R11 := R10; R10 := R10[0x492f9da2]
366 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
367 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
368 [-]: TEST      R9 1         ; if R9 then PC := 379
369 [-]: JMP       379          ; PC := 379
370 [-]: GETGLOBAL R9 K62       ; R9 := mChildMovie
371 [-]: SELF      R9 R9 K63    ; R10 := R9; R9 := R9[0x492f9da2]
372 [-]: CALL      R9 2 2       ; R9 := R9(R10)
373 [-]: GETGLOBAL R10 K64      ; R10 := 0x0032441c
374 [-]: GETTABLE  R10 R10 K65  ; R10 := R10["UIMovie_GenericMenu"]
375 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 378
376 [-]: JMP       378          ; PC := 378
377 [-]: LOADBOOL  R9 0 1       ; R9 := false; PC := 378
378 [-]: LOADBOOL  R9 1 0       ; R9 := true
379 [-]: GETUPVAL  R10 U14      ; R10 := U14
380 [-]: GETTABLE  R10 R10 K66  ; R10 := R10["Visible"]
381 [-]: EQ        1 R10 K21    ; if R10 == nil then PC := 387
382 [-]: JMP       387          ; PC := 387
383 [-]: GETUPVAL  R10 U14      ; R10 := U14
384 [-]: GETTABLE  R10 R10 K66  ; R10 := R10["Visible"]
385 [-]: EQ        1 R10 R9     ; if R10 == R9 then PC := 406
386 [-]: JMP       406          ; PC := 406
387 [-]: GETGLOBAL R10 K3       ; R10 := 0xae91e43b
388 [-]: SELF      R10 R10 K67  ; R11 := R10; R10 := R10[0x368ad758]
389 [-]: MOVE      R12 R9       ; R12 := R9
390 [-]: CALL      R10 3 1      ; R10(R11,R12)
391 [-]: GETGLOBAL R10 K2       ; R10 := 0x7b998233
392 [-]: GETGLOBAL R11 K68      ; R11 := mEvoMovie
393 [-]: CALL      R10 2 2      ; R10 := R10(R11)
394 [-]: TEST      R10 1        ; if R10 then PC := 404
395 [-]: JMP       404          ; PC := 404
396 [-]: GETGLOBAL R10 K68      ; R10 := mEvoMovie
397 [-]: SELF      R10 R10 K67  ; R11 := R10; R10 := R10[0x368ad758]
398 [-]: MOVE      R12 R9       ; R12 := R9
399 [-]: CALL      R10 3 1      ; R10(R11,R12)
400 [-]: GETGLOBAL R10 K68      ; R10 := mEvoMovie
401 [-]: SELF      R10 R10 K69  ; R11 := R10; R10 := R10[0xbc838db9]
402 [-]: MOVE      R12 R9       ; R12 := R9
403 [-]: CALL      R10 3 1      ; R10(R11,R12)
404 [-]: GETUPVAL  R10 U14      ; R10 := U14
405 [-]: SETTABLE  R10 K66 R9   ; R10["Visible"] := R9
406 [-]: GETGLOBAL R10 K3       ; R10 := 0xae91e43b
407 [-]: SELF      R10 R10 K70  ; R11 := R10; R10 := R10[0x91a24e4b]
408 [-]: LOADK     R12 K71      ; R12 := "_root"
409 [-]: LOADK     R13 25       ; R13 := 25.000000
410 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
411 [-]: GETGLOBAL R11 K3       ; R11 := 0xae91e43b
412 [-]: SELF      R11 R11 K70  ; R12 := R11; R11 := R11[0x91a24e4b]
413 [-]: LOADK     R13 K71      ; R13 := "_root"
414 [-]: LOADK     R14 26       ; R14 := 26.000000
415 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
416 [-]: LT        0 K72 R10    ; if -1000.000000 >= R10 then PC := 454
417 [-]: JMP       454          ; PC := 454
418 [-]: LT        0 K72 R11    ; if -1000.000000 >= R11 then PC := 454
419 [-]: JMP       454          ; PC := 454
420 [-]: GETGLOBAL R12 K3       ; R12 := 0xae91e43b
421 [-]: SELF      R12 R12 K73  ; R13 := R12; R12 := R12[0x091c120e]
422 [-]: CALL      R12 2 2      ; R12 := R12(R13)
423 [-]: MUL       R12 R12 K74  ; R12 := R12 * 0.500000
424 [-]: GETGLOBAL R13 K3       ; R13 := 0xae91e43b
425 [-]: SELF      R13 R13 K73  ; R14 := R13; R13 := R13[0x091c120e]
426 [-]: CALL      R13 2 2      ; R13 := R13(R14)
427 [-]: MUL       R13 R13 K74  ; R13 := R13 * 0.500000
428 [-]: SUB       R14 R10 R12  ; R14 := R10 - R12
429 [-]: DIV       R10 R14 R12  ; R10 := R14 / R12
430 [-]: SUB       R14 R11 R13  ; R14 := R11 - R13
431 [-]: DIV       R11 R14 R13  ; R11 := R14 / R13
432 [-]: GETGLOBAL R14 K75      ; R14 := 0x42dcc9f5
433 [-]: MOVE      R15 R10      ; R15 := R10
434 [-]: LOADK     R16 -1       ; R16 := -1.000000
435 [-]: LOADK     R17 1        ; R17 := 1.000000
436 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
437 [-]: MOVE      R10 R14      ; R10 := R14
438 [-]: GETGLOBAL R14 K75      ; R14 := 0x42dcc9f5
439 [-]: MOVE      R15 R11      ; R15 := R11
440 [-]: LOADK     R16 -1       ; R16 := -1.000000
441 [-]: LOADK     R17 1        ; R17 := 1.000000
442 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
443 [-]: MOVE      R11 R14      ; R11 := R14
444 [-]: GETUPVAL  R14 U15      ; R14 := U15
445 [-]: GETTABLE  R14 R14 K76  ; R14 := R14["X"]
446 [-]: SELF      R14 R14 K77  ; R15 := R14; R14 := R14[0x188e2bee]
447 [-]: MOVE      R16 R10      ; R16 := R10
448 [-]: CALL      R14 3 1      ; R14(R15,R16)
449 [-]: GETUPVAL  R14 U15      ; R14 := U15
450 [-]: GETTABLE  R14 R14 K78  ; R14 := R14["Y"]
451 [-]: SELF      R14 R14 K77  ; R15 := R14; R14 := R14[0x188e2bee]
452 [-]: MOVE      R16 R11      ; R16 := R11
453 [-]: CALL      R14 3 1      ; R14(R15,R16)
454 [-]: GETUPVAL  R14 U15      ; R14 := U15
455 [-]: GETTABLE  R14 R14 K76  ; R14 := R14["X"]
456 [-]: SELF      R14 R14 K8   ; R15 := R14; R14 := R14[0xfaa69527]
457 [-]: GETGLOBAL R16 K79      ; R16 := 0x67652851
458 [-]: CALL      R16 1 0      ; R16,... := R16()
459 [-]: CALL      R14 0 1      ; R14(R15,...)
460 [-]: GETUPVAL  R14 U15      ; R14 := U15
461 [-]: GETTABLE  R14 R14 K78  ; R14 := R14["Y"]
462 [-]: SELF      R14 R14 K8   ; R15 := R14; R14 := R14[0xfaa69527]
463 [-]: GETGLOBAL R16 K79      ; R16 := 0x67652851
464 [-]: CALL      R16 1 0      ; R16,... := R16()
465 [-]: CALL      R14 0 1      ; R14(R15,...)
466 [-]: GETUPVAL  R14 U15      ; R14 := U15
467 [-]: GETTABLE  R14 R14 K76  ; R14 := R14["X"]
468 [-]: SELF      R14 R14 K80  ; R15 := R14; R14 := R14[0x54ab95f9]
469 [-]: CALL      R14 2 2      ; R14 := R14(R15)
470 [-]: MOVE      R10 R14      ; R10 := R14
471 [-]: GETUPVAL  R14 U15      ; R14 := U15
472 [-]: GETTABLE  R14 R14 K78  ; R14 := R14["Y"]
473 [-]: SELF      R14 R14 K80  ; R15 := R14; R14 := R14[0x54ab95f9]
474 [-]: CALL      R14 2 2      ; R14 := R14(R15)
475 [-]: MOVE      R11 R14      ; R11 := R14
476 [-]: MUL       R14 R10 K74  ; R14 := R10 * 0.500000
477 [-]: ADD       R10 R14 K74  ; R10 := R14 + 0.500000
478 [-]: MUL       R14 R11 K74  ; R14 := R11 * 0.500000
479 [-]: ADD       R11 R14 K74  ; R11 := R14 + 0.500000
480 [-]: GETGLOBAL R14 K81      ; R14 := mLoaders
481 [-]: GETTABLE  R14 R14 K82  ; R14 := R14["mQueueEquipItem"]
482 [-]: TEST      R14 0        ; if not R14 then PC := 488
483 [-]: JMP       488          ; PC := 488
484 [-]: GETUPVAL  R14 U16      ; R14 := U16
485 [-]: CALL      R14 1 1      ; R14()
486 [-]: GETGLOBAL R14 K81      ; R14 := mLoaders
487 [-]: SETTABLE  R14 K82 K49  ; R14["mQueueEquipItem"] := false
488 [-]: GETUPVAL  R14 U17      ; R14 := U17
489 [-]: TEST      R14 0        ; if not R14 then PC := 507
490 [-]: JMP       507          ; PC := 507
491 [-]: GETUPVAL  R14 U8       ; R14 := U8
492 [-]: GETUPVAL  R15 U9       ; R15 := U9
493 [-]: GETTABLE  R15 R15 K83  ; R15 := R15["SELECTING_PART"]
494 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 500
495 [-]: JMP       500          ; PC := 500
496 [-]: GETUPVAL  R14 U10      ; R14 := U10
497 [-]: GETTABLE  R14 R14 K84  ; R14 := R14[0xbe07b886]
498 [-]: CALL      R14 1 1      ; R14()
499 [-]: JMP       507          ; PC := 507
500 [-]: LOADBOOL  R14 0 0      ; R14 := false
501 [-]: SETUPVAL  R14 U17      ; U82 := R17
502 [-]: GETGLOBAL R14 K3       ; R14 := 0xae91e43b
503 [-]: SELF      R14 R14 K85  ; R15 := R14; R14 := R14[0xe4162eed]
504 [-]: LOADK     R16 K86      ; R16 := "RefreshLoadout"
505 [-]: LOADK     R17 K87      ; R17 := ""
506 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
507 [-]: GETGLOBAL R14 K88      ; R14 := 0xcfc01047
508 [-]: GETGLOBAL R15 K81      ; R15 := mLoaders
509 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
510 [-]: JMP       515          ; PC := 515
511 [-]: EQ        1 R17 K82    ; if R17 == "mQueueEquipItem" then PC := 515
512 [-]: JMP       515          ; PC := 515
513 [-]: SELF      R19 R18 K8   ; R20 := R18; R19 := R18[0xfaa69527]
514 [-]: CALL      R19 2 1      ; R19(R20)
515 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 511; R16 := R17 end
516 [-]: JMP       511          ; PC := 511
517 [-]: GETGLOBAL R19 K12      ; R19 := _T
518 [-]: GETTABLE  R19 R19 K89  ; R19 := R19["mLoadoutInPosition"]
519 [-]: EQ        1 R19 K21    ; if R19 == nil then PC := 525
520 [-]: JMP       525          ; PC := 525
521 [-]: GETGLOBAL R19 K12      ; R19 := _T
522 [-]: GETTABLE  R19 R19 K89  ; R19 := R19["mLoadoutInPosition"]
523 [-]: TEST      R19 1        ; if R19 then PC := 530
524 [-]: JMP       530          ; PC := 530
525 [-]: GETUPVAL  R19 U18      ; R19 := U18
526 [-]: GETUPVAL  R20 U19      ; R20 := U19
527 [-]: GETTABLE  R20 R20 K90  ; R20 := R20["UI_MODE_IN_SPACE_HUB"]
528 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 699
529 [-]: JMP       699          ; PC := 699
530 [-]: GETGLOBAL R19 K2       ; R19 := 0x7b998233
531 [-]: GETGLOBAL R20 K91      ; R20 := 0x1211d00f
532 [-]: CALL      R19 2 2      ; R19 := R19(R20)
533 [-]: NOT       R19 R19      ; R19 := not R19
534 [-]: GETGLOBAL R20 K92      ; R20 := mCameraTable
535 [-]: GETTABLE  R20 R20 K93  ; R20 := R20["ConstantUpdate"]
536 [-]: TEST      R20 0        ; if not R20 then PC := 564
537 [-]: JMP       564          ; PC := 564
538 [-]: TEST      R19 1        ; if R19 then PC := 564
539 [-]: JMP       564          ; PC := 564
540 [-]: GETGLOBAL R20 K26      ; R20 := mLists
541 [-]: GETTABLE  R20 R20 K27  ; R20 := R20["mLoadOutList"]
542 [-]: SELF      R20 R20 K94  ; R21 := R20; R20 := R20[0xed1ab921]
543 [-]: CALL      R20 2 2      ; R20 := R20(R21)
544 [-]: EQ        1 R20 K21    ; if R20 == nil then PC := 553
545 [-]: JMP       553          ; PC := 553
546 [-]: GETUPVAL  R21 U20      ; R21 := U20
547 [-]: GETTABLE  R22 R20 K95  ; R22 := R20["LoadOutType"]
548 [-]: GETTABLE  R23 R20 K96  ; R23 := R20["LoadOutId"]
549 [-]: MOVE      R24 R20      ; R24 := R20
550 [-]: LOADBOOL  R25 1 0      ; R25 := true
551 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
552 [-]: JMP       564          ; PC := 564
553 [-]: GETUPVAL  R21 U21      ; R21 := U21
554 [-]: EQ        1 R21 K21    ; if R21 == nil then PC := 564
555 [-]: JMP       564          ; PC := 564
556 [-]: GETUPVAL  R21 U20      ; R21 := U20
557 [-]: GETUPVAL  R22 U21      ; R22 := U21
558 [-]: GETTABLE  R22 R22 K95  ; R22 := R22["LoadOutType"]
559 [-]: GETUPVAL  R23 U21      ; R23 := U21
560 [-]: GETTABLE  R23 R23 K96  ; R23 := R23["LoadOutId"]
561 [-]: GETUPVAL  R24 U21      ; R24 := U21
562 [-]: LOADBOOL  R25 1 0      ; R25 := true
563 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
564 [-]: GETUPVAL  R21 U8       ; R21 := U8
565 [-]: GETUPVAL  R22 U9       ; R22 := U9
566 [-]: GETTABLE  R22 R22 K35  ; R22 := R22["SWAPPING_ITEM"]
567 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 585
568 [-]: JMP       585          ; PC := 585
569 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
570 [-]: GETGLOBAL R22 K32      ; R22 := mSelected
571 [-]: GETTABLE  R22 R22 K97  ; R22 := R22["Item"]
572 [-]: CALL      R21 2 2      ; R21 := R21(R22)
573 [-]: TEST      R21 1        ; if R21 then PC := 585
574 [-]: JMP       585          ; PC := 585
575 [-]: GETGLOBAL R21 K32      ; R21 := mSelected
576 [-]: GETTABLE  R21 R21 K97  ; R21 := R21["Item"]
577 [-]: GETTABLE  R21 R21 K98  ; R21 := R21["mPetType"]
578 [-]: EQ        1 R21 K31    ; if R21 == 1.000000 then PC := 600
579 [-]: JMP       600          ; PC := 600
580 [-]: GETGLOBAL R21 K32      ; R21 := mSelected
581 [-]: GETTABLE  R21 R21 K97  ; R21 := R21["Item"]
582 [-]: GETTABLE  R21 R21 K98  ; R21 := R21["mPetType"]
583 [-]: EQ        1 R21 K100   ; if R21 == 2.000000 then PC := 600
584 [-]: JMP       600          ; PC := 600
585 [-]: GETUPVAL  R21 U8       ; R21 := U8
586 [-]: GETUPVAL  R22 U9       ; R22 := U9
587 [-]: GETTABLE  R22 R22 K35  ; R22 := R22["SWAPPING_ITEM"]
588 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 599
589 [-]: JMP       599          ; PC := 599
590 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
591 [-]: GETGLOBAL R22 K101     ; R22 := 0x25d99d89
592 [-]: CALL      R21 2 2      ; R21 := R21(R22)
593 [-]: TEST      R21 1        ; if R21 then PC := 599
594 [-]: JMP       599          ; PC := 599
595 [-]: GETGLOBAL R21 K101     ; R21 := 0x25d99d89
596 [-]: SELF      R21 R21 K102 ; R22 := R21; R21 := R21[0x3c6b0324]
597 [-]: CALL      R21 2 2      ; R21 := R21(R22)
598 [-]: JMP       601          ; PC := 601
599 [-]: LOADBOOL  R21 0 1      ; R21 := false; PC := 600
600 [-]: LOADBOOL  R21 1 0      ; R21 := true
601 [-]: GETUPVAL  R22 U8       ; R22 := U8
602 [-]: GETUPVAL  R23 U9       ; R23 := U9
603 [-]: GETTABLE  R23 R23 K35  ; R23 := R23["SWAPPING_ITEM"]
604 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 622
605 [-]: JMP       622          ; PC := 622
606 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
607 [-]: GETGLOBAL R23 K32      ; R23 := mSelected
608 [-]: GETTABLE  R23 R23 K97  ; R23 := R23["Item"]
609 [-]: CALL      R22 2 2      ; R22 := R22(R23)
610 [-]: TEST      R22 1        ; if R22 then PC := 622
611 [-]: JMP       622          ; PC := 622
612 [-]: GETGLOBAL R22 K32      ; R22 := mSelected
613 [-]: GETTABLE  R22 R22 K97  ; R22 := R22["Item"]
614 [-]: GETTABLE  R22 R22 K98  ; R22 := R22["mPetType"]
615 [-]: EQ        1 R22 K103   ; if R22 == 3.000000 then PC := 637
616 [-]: JMP       637          ; PC := 637
617 [-]: GETGLOBAL R22 K32      ; R22 := mSelected
618 [-]: GETTABLE  R22 R22 K97  ; R22 := R22["Item"]
619 [-]: GETTABLE  R22 R22 K98  ; R22 := R22["mPetType"]
620 [-]: EQ        1 R22 K104   ; if R22 == 4.000000 then PC := 637
621 [-]: JMP       637          ; PC := 637
622 [-]: GETUPVAL  R22 U8       ; R22 := U8
623 [-]: GETUPVAL  R23 U9       ; R23 := U9
624 [-]: GETTABLE  R23 R23 K35  ; R23 := R23["SWAPPING_ITEM"]
625 [-]: EQ        1 R22 R23    ; if R22 == R23 then PC := 636
626 [-]: JMP       636          ; PC := 636
627 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
628 [-]: GETGLOBAL R23 K101     ; R23 := 0x25d99d89
629 [-]: CALL      R22 2 2      ; R22 := R22(R23)
630 [-]: TEST      R22 1        ; if R22 then PC := 636
631 [-]: JMP       636          ; PC := 636
632 [-]: GETGLOBAL R22 K101     ; R22 := 0x25d99d89
633 [-]: SELF      R22 R22 K105 ; R23 := R22; R22 := R22[0x9f91f49d]
634 [-]: CALL      R22 2 2      ; R22 := R22(R23)
635 [-]: JMP       638          ; PC := 638
636 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 637
637 [-]: LOADBOOL  R22 1 0      ; R22 := true
638 [-]: GETGLOBAL R23 K12      ; R23 := _T
639 [-]: GETTABLE  R23 R23 K106 ; R23 := R23["mSentinelMode"]
640 [-]: TEST      R23 0        ; if not R23 then PC := 660
641 [-]: JMP       660          ; PC := 660
642 [-]: GETGLOBAL R23 K2       ; R23 := 0x7b998233
643 [-]: GETGLOBAL R24 K101     ; R24 := 0x25d99d89
644 [-]: CALL      R23 2 2      ; R23 := R23(R24)
645 [-]: TEST      R23 1        ; if R23 then PC := 660
646 [-]: JMP       660          ; PC := 660
647 [-]: TEST      R21 0        ; if not R21 then PC := 660
648 [-]: JMP       660          ; PC := 660
649 [-]: GETUPVAL  R23 U22      ; R23 := U22
650 [-]: CALL      R23 1 2      ; R23 := R23()
651 [-]: TEST      R23 0        ; if not R23 then PC := 660
652 [-]: JMP       660          ; PC := 660
653 [-]: GETGLOBAL R23 K12      ; R23 := _T
654 [-]: GETTABLE  R23 R23 K107 ; R23 := R23["petCommands"]
655 [-]: GETTABLE  R23 R23 K108 ; R23 := R23[0x2b82e642]
656 [-]: CALL      R23 1 2      ; R23 := R23()
657 [-]: TEST      R23 1        ; if R23 then PC := 660
658 [-]: JMP       660          ; PC := 660
659 [-]: JMP       699          ; PC := 699
660 [-]: GETUPVAL  R23 U18      ; R23 := U18
661 [-]: GETUPVAL  R24 U19      ; R24 := U19
662 [-]: GETTABLE  R24 R24 K109 ; R24 := R24["UI_MODE_IN_SPACE_SHIP"]
663 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 671
664 [-]: JMP       671          ; PC := 671
665 [-]: GETUPVAL  R23 U23      ; R23 := U23
666 [-]: LT        0 K15 R23    ; if 0.000000 >= R23 then PC := 671
667 [-]: JMP       671          ; PC := 671
668 [-]: GETUPVAL  R23 U23      ; R23 := U23
669 [-]: SUB       R23 R23 R0   ; R23 := R23 - R0
670 [-]: SETUPVAL  R23 U23      ; U82 := R23
671 [-]: GETUPVAL  R23 U24      ; R23 := U24
672 [-]: TEST      R23 1        ; if R23 then PC := 699
673 [-]: JMP       699          ; PC := 699
674 [-]: TEST      R19 1        ; if R19 then PC := 699
675 [-]: JMP       699          ; PC := 699
676 [-]: GETUPVAL  R23 U18      ; R23 := U18
677 [-]: GETUPVAL  R24 U19      ; R24 := U19
678 [-]: GETTABLE  R24 R24 K109 ; R24 := R24["UI_MODE_IN_SPACE_SHIP"]
679 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 692
680 [-]: JMP       692          ; PC := 692
681 [-]: GETGLOBAL R23 K12      ; R23 := _T
682 [-]: GETTABLE  R23 R23 K106 ; R23 := R23["mSentinelMode"]
683 [-]: TEST      R23 0        ; if not R23 then PC := 692
684 [-]: JMP       692          ; PC := 692
685 [-]: TEST      R21 1        ; if R21 then PC := 689
686 [-]: JMP       689          ; PC := 689
687 [-]: TEST      R22 0        ; if not R22 then PC := 692
688 [-]: JMP       692          ; PC := 692
689 [-]: GETUPVAL  R23 U23      ; R23 := U23
690 [-]: LE        0 R23 K15    ; if R23 > 0.000000 then PC := 699
691 [-]: JMP       699          ; PC := 699
692 [-]: GETUPVAL  R23 U10      ; R23 := U10
693 [-]: GETTABLE  R23 R23 K110 ; R23 := R23[0xd4c67576]
694 [-]: LOADNIL   R24 R24      ; R24 := nil
695 [-]: GETGLOBAL R25 K9       ; R25 := 0x34291f5c
696 [-]: GETTABLE  R25 R25 K34  ; R25 := R25[0x1467d5f4]
697 [-]: CALL      R25 1 0      ; R25,... := R25()
698 [-]: CALL      R23 0 1      ; R23(R24,...)
699 [-]: GETGLOBAL R23 K2       ; R23 := 0x7b998233
700 [-]: GETGLOBAL R24 K12      ; R24 := _T
701 [-]: GETTABLE  R24 R24 K13  ; R24 := R24["MenuSuitAvatar"]
702 [-]: CALL      R23 2 2      ; R23 := R23(R24)
703 [-]: TEST      R23 1        ; if R23 then PC := 715
704 [-]: JMP       715          ; PC := 715
705 [-]: GETGLOBAL R23 K4       ; R23 := 0x89326c93
706 [-]: SELF      R23 R23 K111 ; R24 := R23; R23 := R23[0xfb64e76c]
707 [-]: CALL      R23 2 2      ; R23 := R23(R24)
708 [-]: TEST      R23 0        ; if not R23 then PC := 715
709 [-]: JMP       715          ; PC := 715
710 [-]: GETGLOBAL R23 K4       ; R23 := 0x89326c93
711 [-]: SELF      R23 R23 K111 ; R24 := R23; R23 := R23[0xfb64e76c]
712 [-]: CALL      R23 2 2      ; R23 := R23(R24)
713 [-]: SELF      R23 R23 K112 ; R24 := R23; R23 := R23[0xb5983272]
714 [-]: CALL      R23 2 1      ; R23(R24)
715 [-]: GETGLOBAL R23 K92      ; R23 := mCameraTable
716 [-]: TEST      R23 0        ; if not R23 then PC := 854
717 [-]: JMP       854          ; PC := 854
718 [-]: GETGLOBAL R23 K92      ; R23 := mCameraTable
719 [-]: GETTABLE  R23 R23 K113 ; R23 := R23["destFov"]
720 [-]: TEST      R23 0        ; if not R23 then PC := 854
721 [-]: JMP       854          ; PC := 854
722 [-]: GETGLOBAL R23 K92      ; R23 := mCameraTable
723 [-]: GETTABLE  R23 R23 K114 ; R23 := R23["destPos"]
724 [-]: TEST      R23 0        ; if not R23 then PC := 854
725 [-]: JMP       854          ; PC := 854
726 [-]: GETGLOBAL R23 K2       ; R23 := 0x7b998233
727 [-]: GETGLOBAL R24 K92      ; R24 := mCameraTable
728 [-]: GETTABLE  R24 R24 K115 ; R24 := R24["camera"]
729 [-]: CALL      R23 2 2      ; R23 := R23(R24)
730 [-]: TEST      R23 1        ; if R23 then PC := 854
731 [-]: JMP       854          ; PC := 854
732 [-]: GETGLOBAL R23 K75      ; R23 := 0x42dcc9f5
733 [-]: GETGLOBAL R24 K92      ; R24 := mCameraTable
734 [-]: GETTABLE  R24 R24 K116 ; R24 := R24["LerpScale"]
735 [-]: MUL       R24 R0 R24   ; R24 := R0 * R24
736 [-]: LOADK     R25 0        ; R25 := 0.000000
737 [-]: LOADK     R26 1        ; R26 := 1.000000
738 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
739 [-]: GETGLOBAL R24 K92      ; R24 := mCameraTable
740 [-]: GETTABLE  R24 R24 K113 ; R24 := R24["destFov"]
741 [-]: GETGLOBAL R25 K92      ; R25 := mCameraTable
742 [-]: GETTABLE  R25 R25 K117 ; R25 := R25["attenFov"]
743 [-]: MUL       R24 R24 R25  ; R24 := R24 * R25
744 [-]: GETGLOBAL R25 K118     ; R25 := 0x5db3ce80
745 [-]: GETGLOBAL R26 K92      ; R26 := mCameraTable
746 [-]: GETTABLE  R26 R26 K115 ; R26 := R26["camera"]
747 [-]: SELF      R26 R26 K119 ; R27 := R26; R26 := R26[0xd1586535]
748 [-]: CALL      R26 2 2      ; R26 := R26(R27)
749 [-]: GETGLOBAL R27 K92      ; R27 := mCameraTable
750 [-]: GETTABLE  R27 R27 K114 ; R27 := R27["destPos"]
751 [-]: MOVE      R28 R23      ; R28 := R23
752 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
753 [-]: LOADNIL   R26 R26      ; R26 := nil
754 [-]: GETUPVAL  R27 U22      ; R27 := U22
755 [-]: CALL      R27 1 2      ; R27 := R27()
756 [-]: TEST      R27 0        ; if not R27 then PC := 778
757 [-]: JMP       778          ; PC := 778
758 [-]: GETGLOBAL R27 K92      ; R27 := mCameraTable
759 [-]: GETTABLE  R27 R27 K115 ; R27 := R27["camera"]
760 [-]: SELF      R27 R27 K120 ; R28 := R27; R27 := R27[0x2b54251b]
761 [-]: CALL      R27 2 2      ; R27 := R27(R28)
762 [-]: MOVE      R26 R27      ; R26 := R27
763 [-]: GETGLOBAL R27 K2       ; R27 := 0x7b998233
764 [-]: MOVE      R28 R26      ; R28 := R26
765 [-]: CALL      R27 2 2      ; R27 := R27(R28)
766 [-]: TEST      R27 1        ; if R27 then PC := 777
767 [-]: JMP       777          ; PC := 777
768 [-]: SELF      R27 R26 K121 ; R28 := R26; R27 := R26[0x810163c2]
769 [-]: CALL      R27 2 2      ; R27 := R27(R28)
770 [-]: TEST      R27 1        ; if R27 then PC := 777
771 [-]: JMP       777          ; PC := 777
772 [-]: SELF      R27 R26 K122 ; R28 := R26; R27 := R26[0x3e768d03]
773 [-]: MOVE      R29 R25      ; R29 := R25
774 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
775 [-]: MOVE      R25 R27      ; R25 := R27
776 [-]: JMP       778          ; PC := 778
777 [-]: LOADNIL   R26 R26      ; R26 := nil
778 [-]: GETGLOBAL R27 K123     ; R27 := 0x00046924
779 [-]: CALL      R27 1 2      ; R27 := R27()
780 [-]: GETGLOBAL R28 K92      ; R28 := mCameraTable
781 [-]: GETTABLE  R28 R28 K125 ; R28 := R28["destRot"]
782 [-]: GETTABLE  R28 R28 K124 ; R28 := R28["heading"]
783 [-]: GETGLOBAL R29 K92      ; R29 := mCameraTable
784 [-]: GETTABLE  R29 R29 K126 ; R29 := R29["biasRot"]
785 [-]: GETTABLE  R29 R29 K124 ; R29 := R29["heading"]
786 [-]: ADD       R28 R28 R29  ; R28 := R28 + R29
787 [-]: SETTABLE  R27 K124 R28 ; R27["heading"] := R28
788 [-]: GETGLOBAL R28 K92      ; R28 := mCameraTable
789 [-]: GETTABLE  R28 R28 K125 ; R28 := R28["destRot"]
790 [-]: GETTABLE  R28 R28 K127 ; R28 := R28["pitch"]
791 [-]: GETGLOBAL R29 K92      ; R29 := mCameraTable
792 [-]: GETTABLE  R29 R29 K126 ; R29 := R29["biasRot"]
793 [-]: GETTABLE  R29 R29 K127 ; R29 := R29["pitch"]
794 [-]: ADD       R28 R28 R29  ; R28 := R28 + R29
795 [-]: SETTABLE  R27 K127 R28 ; R27["pitch"] := R28
796 [-]: GETGLOBAL R28 K92      ; R28 := mCameraTable
797 [-]: GETTABLE  R28 R28 K125 ; R28 := R28["destRot"]
798 [-]: GETTABLE  R28 R28 K128 ; R28 := R28["bank"]
799 [-]: GETGLOBAL R29 K92      ; R29 := mCameraTable
800 [-]: GETTABLE  R29 R29 K126 ; R29 := R29["biasRot"]
801 [-]: GETTABLE  R29 R29 K128 ; R29 := R29["bank"]
802 [-]: ADD       R28 R28 R29  ; R28 := R28 + R29
803 [-]: SETTABLE  R27 K128 R28 ; R27["bank"] := R28
804 [-]: GETGLOBAL R28 K129     ; R28 := 0x5e223e7d
805 [-]: GETGLOBAL R29 K92      ; R29 := mCameraTable
806 [-]: GETTABLE  R29 R29 K115 ; R29 := R29["camera"]
807 [-]: SELF      R29 R29 K130 ; R30 := R29; R29 := R29[0xcb3851b8]
808 [-]: CALL      R29 2 2      ; R29 := R29(R30)
809 [-]: MOVE      R30 R27      ; R30 := R27
810 [-]: MOVE      R31 R23      ; R31 := R23
811 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
812 [-]: MOVE      R27 R28      ; R27 := R28
813 [-]: GETGLOBAL R28 K2       ; R28 := 0x7b998233
814 [-]: MOVE      R29 R26      ; R29 := R26
815 [-]: CALL      R28 2 2      ; R28 := R28(R29)
816 [-]: TEST      R28 1        ; if R28 then PC := 832
817 [-]: JMP       832          ; PC := 832
818 [-]: GETTABLE  R28 R27 K124 ; R28 := R27["heading"]
819 [-]: GETGLOBAL R29 K131     ; R29 := mArsenalConsole
820 [-]: SELF      R29 R29 K130 ; R30 := R29; R29 := R29[0xcb3851b8]
821 [-]: CALL      R29 2 2      ; R29 := R29(R30)
822 [-]: GETTABLE  R29 R29 K124 ; R29 := R29["heading"]
823 [-]: SUB       R28 R28 R29  ; R28 := R28 - R29
824 [-]: SETTABLE  R27 K124 R28 ; R27["heading"] := R28
825 [-]: GETGLOBAL R28 K92      ; R28 := mCameraTable
826 [-]: GETTABLE  R28 R28 K115 ; R28 := R28["camera"]
827 [-]: SELF      R28 R28 K132 ; R29 := R28; R28 := R28[0xe28aa928]
828 [-]: MOVE      R30 R25      ; R30 := R25
829 [-]: MOVE      R31 R27      ; R31 := R27
830 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
831 [-]: JMP       842          ; PC := 842
832 [-]: GETGLOBAL R28 K92      ; R28 := mCameraTable
833 [-]: GETTABLE  R28 R28 K115 ; R28 := R28["camera"]
834 [-]: SELF      R28 R28 K133 ; R29 := R28; R28 := R28[0x9307aa51]
835 [-]: MOVE      R30 R25      ; R30 := R25
836 [-]: CALL      R28 3 1      ; R28(R29,R30)
837 [-]: GETGLOBAL R28 K92      ; R28 := mCameraTable
838 [-]: GETTABLE  R28 R28 K115 ; R28 := R28["camera"]
839 [-]: SELF      R28 R28 K134 ; R29 := R28; R28 := R28[0x70b8836c]
840 [-]: MOVE      R30 R27      ; R30 := R27
841 [-]: CALL      R28 3 1      ; R28(R29,R30)
842 [-]: GETGLOBAL R28 K92      ; R28 := mCameraTable
843 [-]: GETTABLE  R28 R28 K115 ; R28 := R28["camera"]
844 [-]: SELF      R28 R28 K135 ; R29 := R28; R28 := R28[0xacea6d71]
845 [-]: GETGLOBAL R30 K136     ; R30 := 0x9bafffe3
846 [-]: GETGLOBAL R31 K92      ; R31 := mCameraTable
847 [-]: GETTABLE  R31 R31 K115 ; R31 := R31["camera"]
848 [-]: SELF      R31 R31 K137 ; R32 := R31; R31 := R31[0xaac2f3a5]
849 [-]: CALL      R31 2 2      ; R31 := R31(R32)
850 [-]: MOVE      R32 R24      ; R32 := R24
851 [-]: MOVE      R33 R23      ; R33 := R23
852 [-]: CALL      R30 4 0      ; R30,... := R30(R31,R32,R33)
853 [-]: CALL      R28 0 1      ; R28(R29,...)
854 [-]: GETGLOBAL R28 K3       ; R28 := 0xae91e43b
855 [-]: SELF      R28 R28 K70  ; R29 := R28; R28 := R28[0x91a24e4b]
856 [-]: LOADK     R30 K71      ; R30 := "_root"
857 [-]: LOADK     R31 10       ; R31 := 10.000000
858 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
859 [-]: MUL       R28 R28 K138 ; R28 := R28 * 0.010000
860 [-]: NEWTABLE  R29 5 0      ; R29 := {}
861 [-]: LOADK     R30 K139     ; R30 := "Lotus"
862 [-]: LOADK     R31 K140     ; R31 := "Power1"
863 [-]: LOADK     R32 K141     ; R32 := "Power2"
864 [-]: LOADK     R33 K142     ; R33 := "Power3"
865 [-]: LOADK     R34 K143     ; R34 := "Power4"
866 [-]: SETLIST   R29 5 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 5
867 [-]: LOADK     R30 1        ; R30 := 1.000000
868 [-]: LEN       R31 R29      ; R31 := # R29
869 [-]: LOADK     R32 1        ; R32 := 1.000000
870 [-]: FORPREP   R30 880      ; R30 -= R32; PC := 880
871 [-]: GETGLOBAL R34 K3       ; R34 := 0xae91e43b
872 [-]: SELF      R34 R34 K144 ; R35 := R34; R34 := R34[0x91e13703]
873 [-]: GETTABLE  R36 R29 R33  ; R36 := R29[R33]
874 [-]: LOADK     R37 K145     ; R37 := "PixelateBias"
875 [-]: LOADK     R38 1        ; R38 := 1.000000
876 [-]: MOVE      R39 R28      ; R39 := R28
877 [-]: LOADK     R40 0        ; R40 := 0.000000
878 [-]: LOADK     R41 0        ; R41 := 0.000000
879 [-]: CALL      R34 8 1      ; R34(R35,R36,R37,R38,R39,R40,R41)
880 [-]: FORLOOP   R30 871      ; R30 += R32; if R30 <= R31 then begin PC := 871; R33 := R30 end
881 [-]: GETGLOBAL R34 K146     ; R34 := mRePopulateCosmetics
882 [-]: TEST      R34 0        ; if not R34 then PC := 907
883 [-]: JMP       907          ; PC := 907
884 [-]: GETGLOBAL R34 K2       ; R34 := 0x7b998233
885 [-]: GETGLOBAL R35 K32      ; R35 := mSelected
886 [-]: GETTABLE  R35 R35 K33  ; R35 := R35["Element"]
887 [-]: CALL      R34 2 2      ; R34 := R34(R35)
888 [-]: TEST      R34 1        ; if R34 then PC := 900
889 [-]: JMP       900          ; PC := 900
890 [-]: GETGLOBAL R34 K32      ; R34 := mSelected
891 [-]: GETTABLE  R34 R34 K33  ; R34 := R34["Element"]
892 [-]: GETTABLE  R34 R34 K147 ; R34 := R34["LunaroArenaEntry"]
893 [-]: TEST      R34 0        ; if not R34 then PC := 900
894 [-]: JMP       900          ; PC := 900
895 [-]: GETUPVAL  R34 U25      ; R34 := U25
896 [-]: CALL      R34 1 1      ; R34()
897 [-]: GETUPVAL  R34 U26      ; R34 := U26
898 [-]: CALL      R34 1 1      ; R34()
899 [-]: JMP       905          ; PC := 905
900 [-]: GETUPVAL  R34 U25      ; R34 := U25
901 [-]: CALL      R34 1 1      ; R34()
902 [-]: GETUPVAL  R34 U27      ; R34 := U27
903 [-]: LOADK     R35 0        ; R35 := 0.000000
904 [-]: CALL      R34 2 1      ; R34(R35)
905 [-]: LOADBOOL  R34 0 0      ; R34 := false
906 [-]: SETGLOBAL R34 K146     ; mRePopulateCosmetics := R34
907 [-]: GETUPVAL  R34 U28      ; R34 := U28
908 [-]: MOVE      R35 R10      ; R35 := R10
909 [-]: MOVE      R36 R11      ; R36 := R11
910 [-]: CALL      R34 3 1      ; R34(R35,R36)
911 [-]: GETGLOBAL R34 K2       ; R34 := 0x7b998233
912 [-]: GETGLOBAL R35 K32      ; R35 := mSelected
913 [-]: GETTABLE  R35 R35 K33  ; R35 := R35["Element"]
914 [-]: CALL      R34 2 2      ; R34 := R34(R35)
915 [-]: TEST      R34 1        ; if R34 then PC := 938
916 [-]: JMP       938          ; PC := 938
917 [-]: GETUPVAL  R34 U29      ; R34 := U29
918 [-]: GETUPVAL  R35 U30      ; R35 := U30
919 [-]: GETTABLE  R35 R35 K148 ; R35 := R35["FALSE"]
920 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 930
921 [-]: JMP       930          ; PC := 930
922 [-]: GETGLOBAL R34 K26      ; R34 := mLists
923 [-]: GETTABLE  R34 R34 K149 ; R34 := R34["mCosmeticsList"]
924 [-]: GETTABLE  R34 R34 K150 ; R34 := R34["mCurrLevel"]
925 [-]: GETGLOBAL R35 K26      ; R35 := mLists
926 [-]: GETTABLE  R35 R35 K149 ; R35 := R35["mCosmeticsList"]
927 [-]: GETTABLE  R35 R35 K151 ; R35 := R35["HOLSTER_CUSTOMIZATION"]
928 [-]: EQ        0 R34 R35    ; if R34 ~= R35 then PC := 938
929 [-]: JMP       938          ; PC := 938
930 [-]: GETUPVAL  R34 U31      ; R34 := U31
931 [-]: TEST      R34 0        ; if not R34 then PC := 938
932 [-]: JMP       938          ; PC := 938
933 [-]: LOADBOOL  R34 0 0      ; R34 := false
934 [-]: SETUPVAL  R34 U31      ; U82 := R31
935 [-]: GETUPVAL  R34 U32      ; R34 := U32
936 [-]: GETUPVAL  R35 U33      ; R35 := U33
937 [-]: CALL      R34 2 1      ; R34(R35)
938 [-]: GETUPVAL  R34 U34      ; R34 := U34
939 [-]: TEST      R34 1        ; if R34 then PC := 983
940 [-]: JMP       983          ; PC := 983
941 [-]: GETGLOBAL R34 K4       ; R34 := 0x89326c93
942 [-]: SELF      R34 R34 K111 ; R35 := R34; R34 := R34[0xfb64e76c]
943 [-]: CALL      R34 2 2      ; R34 := R34(R35)
944 [-]: GETUPVAL  R35 U18      ; R35 := U18
945 [-]: GETUPVAL  R36 U19      ; R36 := U19
946 [-]: GETTABLE  R36 R36 K90  ; R36 := R36["UI_MODE_IN_SPACE_HUB"]
947 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 954
948 [-]: JMP       954          ; PC := 954
949 [-]: GETUPVAL  R35 U10      ; R35 := U10
950 [-]: GETTABLE  R35 R35 K152 ; R35 := R35[0x7a04c21d]
951 [-]: CALL      R35 1 2      ; R35 := R35()
952 [-]: JMP       955          ; PC := 955
953 [-]: LOADBOOL  R35 0 1      ; R35 := false; PC := 954
954 [-]: LOADBOOL  R35 1 0      ; R35 := true
955 [-]: EQ        1 R34 K21    ; if R34 == nil then PC := 975
956 [-]: JMP       975          ; PC := 975
957 [-]: TEST      R35 0        ; if not R35 then PC := 975
958 [-]: JMP       975          ; PC := 975
959 [-]: SELF      R36 R34 K153 ; R37 := R34; R36 := R34[0x5578d98b]
960 [-]: CALL      R36 2 2      ; R36 := R36(R37)
961 [-]: SELF      R37 R34 K154 ; R38 := R34; R37 := R34[0xbb610e5b]
962 [-]: CALL      R37 2 2      ; R37 := R37(R38)
963 [-]: EQ        1 R36 R37    ; if R36 == R37 then PC := 975
964 [-]: JMP       975          ; PC := 975
965 [-]: SELF      R36 R34 K154 ; R37 := R34; R36 := R34[0xbb610e5b]
966 [-]: CALL      R36 2 2      ; R36 := R36(R37)
967 [-]: SELF      R36 R36 K155 ; R37 := R36; R36 := R36[0xf2deaf69]
968 [-]: GETUPVAL  R38 U35      ; R38 := U35
969 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
970 [-]: TEST      R36 1        ; if R36 then PC := 975
971 [-]: JMP       975          ; PC := 975
972 [-]: GETGLOBAL R36 K12      ; R36 := _T
973 [-]: SETTABLE  R36 K89 K156 ; R36["mLoadoutInPosition"] := true
974 [-]: JMP       980          ; PC := 980
975 [-]: GETUPVAL  R36 U36      ; R36 := U36
976 [-]: GETTABLE  R36 R36 K157 ; R36 := R36[0xaf03c51d]
977 [-]: CALL      R36 1 1      ; R36()
978 [-]: GETUPVAL  R36 U36      ; R36 := U36
979 [-]: SETTABLE  R36 K158 K100; R36["mMoveUpdateDelay"] := 2.000000
980 [-]: LOADBOOL  R36 1 0      ; R36 := true
981 [-]: SETUPVAL  R36 U34      ; U82 := R34
982 [-]: JMP       1007         ; PC := 1007
983 [-]: GETGLOBAL R36 K12      ; R36 := _T
984 [-]: GETTABLE  R36 R36 K89  ; R36 := R36["mLoadoutInPosition"]
985 [-]: TEST      R36 1        ; if R36 then PC := 1007
986 [-]: JMP       1007         ; PC := 1007
987 [-]: GETUPVAL  R36 U36      ; R36 := U36
988 [-]: GETTABLE  R36 R36 K158 ; R36 := R36["mMoveUpdateDelay"]
989 [-]: EQ        0 R36 K21    ; if R36 ~= nil then PC := 993
990 [-]: JMP       993          ; PC := 993
991 [-]: GETUPVAL  R36 U36      ; R36 := U36
992 [-]: SETTABLE  R36 K158 K100; R36["mMoveUpdateDelay"] := 2.000000
993 [-]: GETUPVAL  R36 U36      ; R36 := U36
994 [-]: GETUPVAL  R37 U36      ; R37 := U36
995 [-]: GETTABLE  R37 R37 K158 ; R37 := R37["mMoveUpdateDelay"]
996 [-]: SUB       R37 R37 K31  ; R37 := R37 - 1.000000
997 [-]: SETTABLE  R36 K158 R37 ; R36["mMoveUpdateDelay"] := R37
998 [-]: GETUPVAL  R36 U36      ; R36 := U36
999 [-]: GETTABLE  R36 R36 K158 ; R36 := R36["mMoveUpdateDelay"]
1000 [-]: EQ        0 R36 K15    ; if R36 ~= 0.000000 then PC := 1007
1001 [-]: JMP       1007         ; PC := 1007
1002 [-]: GETUPVAL  R36 U36      ; R36 := U36
1003 [-]: GETTABLE  R36 R36 K159 ; R36 := R36[0xe2a1b930]
1004 [-]: CALL      R36 1 1      ; R36()
1005 [-]: GETGLOBAL R36 K12      ; R36 := _T
1006 [-]: SETTABLE  R36 K89 K156 ; R36["mLoadoutInPosition"] := true
1007 [-]: GETGLOBAL R36 K26      ; R36 := mLists
1008 [-]: GETTABLE  R36 R36 K149 ; R36 := R36["mCosmeticsList"]
1009 [-]: GETTABLE  R36 R36 K150 ; R36 := R36["mCurrLevel"]
1010 [-]: GETGLOBAL R37 K26      ; R37 := mLists
1011 [-]: GETTABLE  R37 R37 K149 ; R37 := R37["mCosmeticsList"]
1012 [-]: GETTABLE  R37 R37 K160 ; R37 := R37["HOLSTER_STYLE"]
1013 [-]: EQ        1 R36 R37    ; if R36 == R37 then PC := 1023
1014 [-]: JMP       1023         ; PC := 1023
1015 [-]: GETGLOBAL R36 K26      ; R36 := mLists
1016 [-]: GETTABLE  R36 R36 K149 ; R36 := R36["mCosmeticsList"]
1017 [-]: GETTABLE  R36 R36 K150 ; R36 := R36["mCurrLevel"]
1018 [-]: GETGLOBAL R37 K26      ; R37 := mLists
1019 [-]: GETTABLE  R37 R37 K149 ; R37 := R37["mCosmeticsList"]
1020 [-]: GETTABLE  R37 R37 K151 ; R37 := R37["HOLSTER_CUSTOMIZATION"]
1021 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 1090
1022 [-]: JMP       1090         ; PC := 1090
1023 [-]: GETGLOBAL R36 K12      ; R36 := _T
1024 [-]: GETTABLE  R36 R36 K13  ; R36 := R36["MenuSuitAvatar"]
1025 [-]: GETUPVAL  R37 U37      ; R37 := U37
1026 [-]: GETGLOBAL R38 K32      ; R38 := mSelected
1027 [-]: GETTABLE  R38 R38 K33  ; R38 := R38["Element"]
1028 [-]: GETTABLE  R38 R38 K96  ; R38 := R38["LoadOutId"]
1029 [-]: CALL      R37 2 2      ; R37 := R37(R38)
1030 [-]: SELF      R38 R36 K161 ; R39 := R36; R38 := R36[0xde321e6f]
1031 [-]: CALL      R38 2 2      ; R38 := R38(R39)
1032 [-]: SELF      R38 R38 K162 ; R39 := R38; R38 := R38[0x881b6b90]
1033 [-]: LOADK     R40 0        ; R40 := 0.000000
1034 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
1035 [-]: GETUPVAL  R39 U38      ; R39 := U38
1036 [-]: EQ        0 R39 K104   ; if R39 ~= 4.000000 then PC := 1048
1037 [-]: JMP       1048         ; PC := 1048
1038 [-]: SELF      R39 R36 K161 ; R40 := R36; R39 := R36[0xde321e6f]
1039 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1040 [-]: SELF      R39 R39 K163 ; R40 := R39; R39 := R39[0xc69087f6]
1041 [-]: MOVE      R41 R37      ; R41 := R37
1042 [-]: LOADK     R42 0        ; R42 := 0.000000
1043 [-]: LOADK     R43 0        ; R43 := 0.000000
1044 [-]: CALL      R39 5 1      ; R39(R40,R41,R42,R43)
1045 [-]: LOADK     R39 3        ; R39 := 3.000000
1046 [-]: SETUPVAL  R39 U38      ; U82 := R38
1047 [-]: JMP       1090         ; PC := 1090
1048 [-]: GETUPVAL  R39 U38      ; R39 := U38
1049 [-]: EQ        0 R39 K103   ; if R39 ~= 3.000000 then PC := 1063
1050 [-]: JMP       1063         ; PC := 1063
1051 [-]: GETGLOBAL R39 K2       ; R39 := 0x7b998233
1052 [-]: MOVE      R40 R38      ; R40 := R38
1053 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1054 [-]: TEST      R39 1        ; if R39 then PC := 1090
1055 [-]: JMP       1090         ; PC := 1090
1056 [-]: SELF      R39 R38 K164 ; R40 := R38; R39 := R38[0x53c3399f]
1057 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1058 [-]: EQ        0 R39 K165   ; if R39 ~= 15.000000 then PC := 1090
1059 [-]: JMP       1090         ; PC := 1090
1060 [-]: LOADK     R39 2        ; R39 := 2.000000
1061 [-]: SETUPVAL  R39 U38      ; U82 := R38
1062 [-]: JMP       1090         ; PC := 1090
1063 [-]: GETUPVAL  R39 U38      ; R39 := U38
1064 [-]: EQ        0 R39 K100   ; if R39 ~= 2.000000 then PC := 1078
1065 [-]: JMP       1078         ; PC := 1078
1066 [-]: GETGLOBAL R39 K2       ; R39 := 0x7b998233
1067 [-]: MOVE      R40 R38      ; R40 := R38
1068 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1069 [-]: TEST      R39 1        ; if R39 then PC := 1090
1070 [-]: JMP       1090         ; PC := 1090
1071 [-]: SELF      R39 R38 K164 ; R40 := R38; R39 := R38[0x53c3399f]
1072 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1073 [-]: EQ        0 R39 K15    ; if R39 ~= 0.000000 then PC := 1090
1074 [-]: JMP       1090         ; PC := 1090
1075 [-]: LOADK     R39 1        ; R39 := 1.000000
1076 [-]: SETUPVAL  R39 U38      ; U82 := R38
1077 [-]: JMP       1090         ; PC := 1090
1078 [-]: GETUPVAL  R39 U38      ; R39 := U38
1079 [-]: EQ        0 R39 K31    ; if R39 ~= 1.000000 then PC := 1090
1080 [-]: JMP       1090         ; PC := 1090
1081 [-]: SELF      R39 R36 K161 ; R40 := R36; R39 := R36[0xde321e6f]
1082 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1083 [-]: SELF      R39 R39 K166 ; R40 := R39; R39 := R39[0x54732cc7]
1084 [-]: MOVE      R41 R37      ; R41 := R37
1085 [-]: LOADK     R42 0        ; R42 := 0.000000
1086 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
1087 [-]: LOADK     R39 0        ; R39 := 0.000000
1088 [-]: SETUPVAL  R39 U38      ; U82 := R38
1089 [-]: JMP       1090         ; PC := 1090
1090 [-]: GETGLOBAL R39 K2       ; R39 := 0x7b998233
1091 [-]: GETUPVAL  R40 U14      ; R40 := U14
1092 [-]: GETTABLE  R40 R40 K167 ; R40 := R40["petAgent"]
1093 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1094 [-]: TEST      R39 1        ; if R39 then PC := 1100
1095 [-]: JMP       1100         ; PC := 1100
1096 [-]: GETUPVAL  R39 U14      ; R39 := U14
1097 [-]: GETTABLE  R39 R39 K167 ; R39 := R39["petAgent"]
1098 [-]: SELF      R39 R39 K168 ; R40 := R39; R39 := R39[0xc778ced4]
1099 [-]: CALL      R39 2 1      ; R39(R40)
1100 [-]: GETGLOBAL R39 K12      ; R39 := _T
1101 [-]: GETTABLE  R39 R39 K169 ; R39 := R39["refreshPetView"]
1102 [-]: TEST      R39 0        ; if not R39 then PC := 1143
1103 [-]: JMP       1143         ; PC := 1143
1104 [-]: GETGLOBAL R39 K12      ; R39 := _T
1105 [-]: GETGLOBAL R40 K12      ; R40 := _T
1106 [-]: GETTABLE  R40 R40 K169 ; R40 := R40["refreshPetView"]
1107 [-]: SUB       R40 R40 K31  ; R40 := R40 - 1.000000
1108 [-]: SETTABLE  R39 K169 R40 ; R39["refreshPetView"] := R40
1109 [-]: GETGLOBAL R39 K12      ; R39 := _T
1110 [-]: GETTABLE  R39 R39 K169 ; R39 := R39["refreshPetView"]
1111 [-]: LE        0 R39 K15    ; if R39 > 0.000000 then PC := 1143
1112 [-]: JMP       1143         ; PC := 1143
1113 [-]: LOADNIL   R39 R39      ; R39 := nil
1114 [-]: GETUPVAL  R40 U18      ; R40 := U18
1115 [-]: GETUPVAL  R41 U19      ; R41 := U19
1116 [-]: GETTABLE  R41 R41 K109 ; R41 := R41["UI_MODE_IN_SPACE_SHIP"]
1117 [-]: EQ        0 R40 R41    ; if R40 ~= R41 then PC := 1125
1118 [-]: JMP       1125         ; PC := 1125
1119 [-]: GETGLOBAL R40 K170     ; R40 := 0xbe190284
1120 [-]: SELF      R40 R40 K171 ; R41 := R40; R40 := R40[0x7cf8123f]
1121 [-]: LOADK     R42 1        ; R42 := 1.000000
1122 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
1123 [-]: MOVE      R39 R40      ; R39 := R40
1124 [-]: JMP       1132         ; PC := 1132
1125 [-]: GETGLOBAL R40 K12      ; R40 := _T
1126 [-]: GETTABLE  R40 R40 K13  ; R40 := R40["MenuSuitAvatar"]
1127 [-]: SELF      R40 R40 K161 ; R41 := R40; R40 := R40[0xde321e6f]
1128 [-]: CALL      R40 2 2      ; R40 := R40(R41)
1129 [-]: SELF      R40 R40 K172 ; R41 := R40; R40 := R40[0x2676deee]
1130 [-]: CALL      R40 2 2      ; R40 := R40(R41)
1131 [-]: MOVE      R39 R40      ; R39 := R40
1132 [-]: GETGLOBAL R40 K2       ; R40 := 0x7b998233
1133 [-]: MOVE      R41 R39      ; R41 := R39
1134 [-]: CALL      R40 2 2      ; R40 := R40(R41)
1135 [-]: TEST      R40 1        ; if R40 then PC := 1141
1136 [-]: JMP       1141         ; PC := 1141
1137 [-]: SELF      R40 R39 K173 ; R41 := R39; R40 := R39[0x768274d6]
1138 [-]: LOADBOOL  R42 1 0      ; R42 := true
1139 [-]: LOADBOOL  R43 1 0      ; R43 := true
1140 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
1141 [-]: GETGLOBAL R40 K12      ; R40 := _T
1142 [-]: SETTABLE  R40 K169 K21 ; R40["refreshPetView"] := nil
1143 [-]: GETGLOBAL R40 K12      ; R40 := _T
1144 [-]: GETTABLE  R40 R40 K174 ; R40 := R40["updateActiveKubrow"]
1145 [-]: TEST      R40 0        ; if not R40 then PC := 1151
1146 [-]: JMP       1151         ; PC := 1151
1147 [-]: GETUPVAL  R40 U39      ; R40 := U39
1148 [-]: CALL      R40 1 1      ; R40()
1149 [-]: GETGLOBAL R40 K12      ; R40 := _T
1150 [-]: SETTABLE  R40 K174 K21 ; R40["updateActiveKubrow"] := nil
1151 [-]: GETGLOBAL R40 K12      ; R40 := _T
1152 [-]: GETTABLE  R40 R40 K175 ; R40 := R40["InSimulacrum"]
1153 [-]: TEST      R40 0        ; if not R40 then PC := 1199
1154 [-]: JMP       1199         ; PC := 1199
1155 [-]: GETGLOBAL R40 K2       ; R40 := 0x7b998233
1156 [-]: GETGLOBAL R41 K170     ; R41 := 0xbe190284
1157 [-]: CALL      R40 2 2      ; R40 := R40(R41)
1158 [-]: TEST      R40 1        ; if R40 then PC := 1199
1159 [-]: JMP       1199         ; PC := 1199
1160 [-]: GETGLOBAL R40 K170     ; R40 := 0xbe190284
1161 [-]: SELF      R40 R40 K155 ; R41 := R40; R40 := R40[0xf2deaf69]
1162 [-]: GETGLOBAL R42 K176     ; R42 := gLotusSandBoxGameRulesType
1163 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
1164 [-]: TEST      R40 0        ; if not R40 then PC := 1199
1165 [-]: JMP       1199         ; PC := 1199
1166 [-]: GETGLOBAL R40 K4       ; R40 := 0x89326c93
1167 [-]: SELF      R40 R40 K177 ; R41 := R40; R40 := R40[0x78298275]
1168 [-]: CALL      R40 2 2      ; R40 := R40(R41)
1169 [-]: GETGLOBAL R41 K2       ; R41 := 0x7b998233
1170 [-]: MOVE      R42 R40      ; R42 := R40
1171 [-]: CALL      R41 2 2      ; R41 := R41(R42)
1172 [-]: TEST      R41 1        ; if R41 then PC := 1190
1173 [-]: JMP       1190         ; PC := 1190
1174 [-]: SELF      R41 R40 K178 ; R42 := R40; R41 := R40[0xd4cc05b4]
1175 [-]: CALL      R41 2 2      ; R41 := R41(R42)
1176 [-]: TEST      R41 0        ; if not R41 then PC := 1190
1177 [-]: JMP       1190         ; PC := 1190
1178 [-]: SELF      R41 R40 K155 ; R42 := R40; R41 := R40[0xf2deaf69]
1179 [-]: GETGLOBAL R43 K179     ; R43 := gLotusOperatorAvatarType
1180 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
1181 [-]: TEST      R41 1        ; if R41 then PC := 1190
1182 [-]: JMP       1190         ; PC := 1190
1183 [-]: GETGLOBAL R41 K12      ; R41 := _T
1184 [-]: GETTABLE  R41 R41 K13  ; R41 := R41["MenuSuitAvatar"]
1185 [-]: EQ        1 R40 R41    ; if R40 == R41 then PC := 1190
1186 [-]: JMP       1190         ; PC := 1190
1187 [-]: SELF      R41 R40 K180 ; R42 := R40; R41 := R40[0x2abc8ecd]
1188 [-]: LOADBOOL  R43 0 0      ; R43 := false
1189 [-]: CALL      R41 3 1      ; R41(R42,R43)
1190 [-]: SELF      R41 R40 K181 ; R42 := R40; R41 := R40[0x2047cfe7]
1191 [-]: CALL      R41 2 2      ; R41 := R41(R42)
1192 [-]: TEST      R41 0        ; if not R41 then PC := 1199
1193 [-]: JMP       1199         ; PC := 1199
1194 [-]: GETGLOBAL R41 K12      ; R41 := _T
1195 [-]: GETTABLE  R41 R41 K182 ; R41 := R41["mTrigger"]
1196 [-]: SELF      R41 R41 K183 ; R42 := R41; R41 := R41[0x8eb2112d]
1197 [-]: LOADK     R43 K184     ; R43 := "Close"
1198 [-]: CALL      R41 3 1      ; R41(R42,R43)
1199 [-]: GETGLOBAL R41 K12      ; R41 := _T
1200 [-]: GETTABLE  R41 R41 K185 ; R41 := R41["waitForBardSuit"]
1201 [-]: TEST      R41 0        ; if not R41 then PC := 1248
1202 [-]: JMP       1248         ; PC := 1248
1203 [-]: GETGLOBAL R41 K4       ; R41 := 0x89326c93
1204 [-]: SELF      R41 R41 K111 ; R42 := R41; R41 := R41[0xfb64e76c]
1205 [-]: CALL      R41 2 2      ; R41 := R41(R42)
1206 [-]: GETUPVAL  R42 U12      ; R42 := U12
1207 [-]: GETTABLE  R42 R42 K51  ; R42 := R42[0x06d055f9]
1208 [-]: EQ        0 R41 K21    ; if R41 ~= nil then PC := 1211
1209 [-]: JMP       1211         ; PC := 1211
1210 [-]: LOADBOOL  R43 0 1      ; R43 := false; PC := 1211
1211 [-]: LOADBOOL  R43 1 0      ; R43 := true
1212 [-]: SELF      R44 R41 K186 ; R45 := R41; R44 := R41[0xa534c3ac]
1213 [-]: CALL      R44 2 2      ; R44 := R44(R45)
1214 [-]: LOADNIL   R45 R45      ; R45 := nil
1215 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
1216 [-]: GETGLOBAL R43 K2       ; R43 := 0x7b998233
1217 [-]: MOVE      R44 R42      ; R44 := R42
1218 [-]: CALL      R43 2 2      ; R43 := R43(R44)
1219 [-]: TEST      R43 1        ; if R43 then PC := 1248
1220 [-]: JMP       1248         ; PC := 1248
1221 [-]: SELF      R43 R42 K161 ; R44 := R42; R43 := R42[0xde321e6f]
1222 [-]: CALL      R43 2 2      ; R43 := R43(R44)
1223 [-]: SELF      R43 R43 K187 ; R44 := R43; R43 := R43[0xf7d48ee0]
1224 [-]: CALL      R43 2 2      ; R43 := R43(R44)
1225 [-]: GETGLOBAL R44 K2       ; R44 := 0x7b998233
1226 [-]: MOVE      R45 R43      ; R45 := R43
1227 [-]: CALL      R44 2 2      ; R44 := R44(R45)
1228 [-]: TEST      R44 1        ; if R44 then PC := 1248
1229 [-]: JMP       1248         ; PC := 1248
1230 [-]: SELF      R44 R43 K155 ; R45 := R43; R44 := R43[0xf2deaf69]
1231 [-]: GETGLOBAL R46 K188     ; R46 := 0x2de3a851
1232 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
1233 [-]: TEST      R44 0        ; if not R44 then PC := 1248
1234 [-]: JMP       1248         ; PC := 1248
1235 [-]: GETGLOBAL R44 K12      ; R44 := _T
1236 [-]: GETTABLE  R44 R44 K189 ; R44 := R44["BackgroundMovie"]
1237 [-]: SELF      R44 R44 K85  ; R45 := R44; R44 := R44[0xe4162eed]
1238 [-]: LOADK     R46 K190     ; R46 := "ShowBlockingMessage"
1239 [-]: LOADK     R47 K191     ; R47 := "0"
1240 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
1241 [-]: LOADBOOL  R44 0 0      ; R44 := false
1242 [-]: SETGLOBAL R44 K16      ; mInputBlocked := R44
1243 [-]: GETGLOBAL R44 K12      ; R44 := _T
1244 [-]: SETTABLE  R44 K185 K21 ; R44["waitForBardSuit"] := nil
1245 [-]: GETUPVAL  R44 U40      ; R44 := U40
1246 [-]: LOADK     R45 0        ; R45 := 0.000000
1247 [-]: CALL      R44 2 1      ; R44(R45)
1248 [-]: RETURN    R0 1         ; return 


; Function #190.1:
;
; Name:            
; Defined at line: 12584
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutType"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Arsenal_QuickUpgrade"]
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["type"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["LoadOutId"]
  8 [-]: GETGLOBAL R2 K1        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Arsenal_QuickUpgrade"]
 10 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["slot"]
 11 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["Id"]
 14 [-]: SETUPVAL  R1 U0        ; U82 := R0
 15 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 12892
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xdf42446e]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 12898
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbce5a201]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 12904
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 1         ; if R1 then PC := 21
  4 [-]: JMP       21           ; PC := 21
  5 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 21
  9 [-]: JMP       21           ; PC := 21
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x070daa5a]
 12 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 15 [-]: CALL      R1 0 1       ; R1(R2,...)
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0x659d451f]
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 19 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_DialogOpen"]
 20 [-]: CALL      R1 2 1       ; R1(R2)
 21 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 12911
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 1         ; if R1 then PC := 16
  4 [-]: JMP       16           ; PC := 16
  5 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xaf5319dc]
 12 [-]: GETGLOBAL R3 K2        ; R3 := 0x03f57322
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 15 [-]: CALL      R1 0 1       ; R1(R2,...)
 16 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 12917
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x5fbddc1a]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mForcedHorizontalSeparation"]
 12 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
 13 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x67bc869f]
 15 [-]: LOADK     R3 K5        ; R3 := "MenuPanel.ConfigMenu"
 16 [-]: LOADK     R4 0         ; R4 := 0.000000
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mInitialXPos"]
 19 [-]: DIV       R6 R0 K7     ; R6 := R0 / 2.000000
 20 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 21 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 22 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x67bc869f]
 24 [-]: LOADK     R3 K8        ; R3 := "MenuPanel.ConfigMenu.SwapLabel"
 25 [-]: LOADK     R4 0         ; R4 := 0.000000
 26 [-]: DIV       R5 R0 K7     ; R5 := R0 / 2.000000
 27 [-]: SUB       R5 R5 K9     ; R5 := R5 - 75.000000
 28 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 29 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 12927
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x7c09c373]
  3 [-]: LOADBOOL  R2 1 0       ; R2 := true
  4 [-]: LOADBOOL  R3 1 0       ; R3 := true
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K2        ; R2 := mSelected
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Element"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETGLOBAL R1 K2        ; R1 := mSelected
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Element"]
 15 [-]: GETTABLE  R0 R1 K4     ; R0 := R1["EquippedItem"]
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 66
 20 [-]: JMP       66           ; PC := 66
 21 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0xe1471700]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: LOADK     R2 1         ; R2 := 1.000000
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: LOADK     R4 1         ; R4 := 1.000000
 26 [-]: FORPREP   R2 40        ; R2 -= R4; PC := 40
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: SELF      R6 R6 K6     ; R7 := R6; R6 := R6[0xbad4316f]
 29 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 30 [-]: LOADK     R9 K8        ; R9 := " "
 31 [-]: GETUPVAL  R10 U1       ; R10 := U1
 32 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["CONFIG_TYPES"]
 33 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 34 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 35 [-]: SETTABLE  R8 K7 R9     ; R8["Name"] := R9
 36 [-]: SUB       R9 R5 K11    ; R9 := R5 - 1.000000
 37 [-]: SETTABLE  R8 K10 R9    ; R8["ConfigSlot"] := R9
 38 [-]: LOADBOOL  R9 1 0       ; R9 := true
 39 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 40 [-]: FORLOOP   R2 27        ; R2 += R4; if R2 <= R3 then begin PC := 27; R5 := R2 end
 41 [-]: GETGLOBAL R6 K12       ; R6 := 0x25d99d89
 42 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xefee6c91]
 43 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 44 [-]: LE        0 K14 R6     ; if 10.000000 > R6 then PC := 66
 45 [-]: JMP       66           ; PC := 66
 46 [-]: GETGLOBAL R7 K15       ; R7 := 0x6c97a788
 47 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["WeaponInfo_DEFAULT_NUM_SLOTS"]
 48 [-]: GETGLOBAL R8 K15       ; R8 := 0x6c97a788
 49 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["WeaponInfo_MAX_SLOT_PURCHASES"]
 50 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 51 [-]: LT        0 R1 R7      ; if R1 >= R7 then PC := 66
 52 [-]: JMP       66           ; PC := 66
 53 [-]: GETUPVAL  R7 U0        ; R7 := U0
 54 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xbad4316f]
 55 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 56 [-]: GETGLOBAL R10 K18      ; R10 := 0xae91e43b
 57 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10[0x42b04007]
 58 [-]: LOADK     R12 K20      ; R12 := "<PLUS>"
 59 [-]: LOADBOOL  R13 1 0      ; R13 := true
 60 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 61 [-]: SETTABLE  R9 K7 R10    ; R9["Name"] := R10
 62 [-]: SETTABLE  R9 K21 K22   ; R9["IsAdd"] := true
 63 [-]: SETTABLE  R9 K23 K22   ; R9["DisableDrag"] := true
 64 [-]: LOADBOOL  R10 1 0      ; R10 := true
 65 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 66 [-]: GETUPVAL  R7 U2        ; R7 := U2
 67 [-]: CALL      R7 1 2       ; R7 := R7()
 68 [-]: TEST      R7 0         ; if not R7 then PC := 79
 69 [-]: JMP       79           ; PC := 79
 70 [-]: GETUPVAL  R7 U0        ; R7 := U0
 71 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xbad4316f]
 72 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 73 [-]: SETTABLE  R9 K7 K24    ; R9["Name"] := " Z"
 74 [-]: SETTABLE  R9 K25 K22   ; R9["IsFlappy"] := true
 75 [-]: SETTABLE  R9 K23 K22   ; R9["DisableDrag"] := true
 76 [-]: LOADBOOL  R10 1 0      ; R10 := true
 77 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 78 [-]: JMP       91           ; PC := 91
 79 [-]: GETUPVAL  R7 U3        ; R7 := U3
 80 [-]: CALL      R7 1 2       ; R7 := R7()
 81 [-]: TEST      R7 0         ; if not R7 then PC := 91
 82 [-]: JMP       91           ; PC := 91
 83 [-]: GETUPVAL  R7 U0        ; R7 := U0
 84 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xbad4316f]
 85 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 86 [-]: SETTABLE  R9 K7 K26    ; R9["Name"] := " W"
 87 [-]: SETTABLE  R9 K27 K22   ; R9["IsWyrmius"] := true
 88 [-]: SETTABLE  R9 K23 K22   ; R9["DisableDrag"] := true
 89 [-]: LOADBOOL  R10 1 0      ; R10 := true
 90 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 91 [-]: GETUPVAL  R7 U0        ; R7 := U0
 92 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mClickDrag"]
 93 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["Dragging"]
 94 [-]: TEST      R7 0         ; if not R7 then PC := 99
 95 [-]: JMP       99           ; PC := 99
 96 [-]: GETUPVAL  R7 U0        ; R7 := U0
 97 [-]: SELF      R7 R7 K30    ; R8 := R7; R7 := R7[0xb31346eb]
 98 [-]: CALL      R7 2 1       ; R7(R8)
 99 [-]: GETUPVAL  R7 U0        ; R7 := U0
100 [-]: SELF      R7 R7 K31    ; R8 := R7; R7 := R7[0x71e9ac81]
101 [-]: LOADNIL   R9 R9        ; R9 := nil
102 [-]: LOADBOOL  R10 0 0      ; R10 := false
103 [-]: LOADBOOL  R11 1 0      ; R11 := true
104 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
105 [-]: GETUPVAL  R7 U4        ; R7 := U4
106 [-]: CALL      R7 1 1       ; R7()
107 [-]: GETGLOBAL R7 K2        ; R7 := mSelected
108 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Element"]
109 [-]: EQ        1 R7 K32     ; if R7 == nil then PC := 117
110 [-]: JMP       117          ; PC := 117
111 [-]: GETUPVAL  R7 U0        ; R7 := U0
112 [-]: SELF      R7 R7 K33    ; R8 := R7; R7 := R7[0x20c43dc8]
113 [-]: GETGLOBAL R9 K2        ; R9 := mSelected
114 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["Element"]
115 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["mCustSlot"]
116 [-]: CALL      R7 3 1       ; R7(R8,R9)
117 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 12966
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0[0x9383bc56]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  6 [-]: LOADK     R3 K4        ; R3 := "MenuPanel.ConfigMenu.MenuItem"
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: SETUPVAL  R1 U0        ; U82 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SETTABLE  R1 K5 K6     ; R1["mForcedVerticalSeparation"] := 0.000000
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: SETTABLE  R1 K7 K8     ; R1["mForcedHorizontalSeparation"] := 50.000000
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: SETTABLE  R1 K9 K10    ; R1["mInitialDepth"] := 4000.000000
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0x91a24e4b]
 18 [-]: LOADK     R4 K13       ; R4 := "MenuPanel.ConfigMenu"
 19 [-]: LOADK     R5 0         ; R5 := 0.000000
 20 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 21 [-]: SETTABLE  R1 K11 R2    ; R1["mInitialXPos"] := R2
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 24 [-]: LOADK     R3 K15       ; R3 := "ConfigItemSelected"
 25 [-]: LOADK     R4 K16       ; R4 := "ConfigItemFocused"
 26 [-]: LOADK     R5 K17       ; R5 := "ConfigItemUnfocused"
 27 [-]: LOADK     R6 K18       ; R6 := "ConfigItemPressed"
 28 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 29 [-]: LOADK     R9 K15       ; R9 := "ConfigItemSelected"
 30 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1[0xb0e9af9b]
 33 [-]: CALL      R1 2 1       ; R1(R2)
 34 [-]: GETUPVAL  R1 U0        ; R1 := U0
 35 [-]: SETTABLE  R1 K20 K21   ; R1["mFocusedElementId"] := nil
 36 [-]: GETUPVAL  R1 U0        ; R1 := U0
 37 [-]: CLOSURE   R2 0         ; R2 := closure(Function #197.1)
 38 [-]: SETTABLE  R1 K22 R2    ; R1["Print"] := R2
 39 [-]: GETUPVAL  R1 U0        ; R1 := U0
 40 [-]: CLOSURE   R2 1         ; R2 := closure(Function #197.2)
 41 [-]: SETTABLE  R1 K23 R2    ; R1["SelectElementByCustSlot"] := R2
 42 [-]: GETUPVAL  R1 U0        ; R1 := U0
 43 [-]: CLOSURE   R2 2         ; R2 := closure(Function #197.3)
 44 [-]: GETUPVAL  R0 U1        ; R0 := U1
 45 [-]: SETTABLE  R1 K24 R2    ; R1["mElementDrawCallback"] := R2
 46 [-]: GETUPVAL  R1 U0        ; R1 := U0
 47 [-]: CLOSURE   R2 3         ; R2 := closure(Function #197.4)
 48 [-]: GETUPVAL  R0 U0        ; R0 := U0
 49 [-]: GETUPVAL  R0 U1        ; R0 := U1
 50 [-]: GETUPVAL  R0 U2        ; R0 := U2
 51 [-]: SETTABLE  R1 K25 R2    ; R1["mOnFocusedCallback"] := R2
 52 [-]: GETUPVAL  R1 U0        ; R1 := U0
 53 [-]: CLOSURE   R2 4         ; R2 := closure(Function #197.5)
 54 [-]: GETUPVAL  R0 U0        ; R0 := U0
 55 [-]: SETTABLE  R1 K26 R2    ; R1["mOnUnfocusedCallback"] := R2
 56 [-]: GETUPVAL  R1 U0        ; R1 := U0
 57 [-]: CLOSURE   R2 5         ; R2 := closure(Function #197.6)
 58 [-]: GETUPVAL  R0 U0        ; R0 := U0
 59 [-]: GETUPVAL  R0 U3        ; R0 := U3
 60 [-]: GETUPVAL  R0 U4        ; R0 := U4
 61 [-]: GETUPVAL  R0 U1        ; R0 := U1
 62 [-]: GETUPVAL  R0 U5        ; R0 := U5
 63 [-]: SETTABLE  R1 K27 R2    ; R1["mOnSelectedCallback"] := R2
 64 [-]: GETUPVAL  R1 U0        ; R1 := U0
 65 [-]: CLOSURE   R2 6         ; R2 := closure(Function #197.7)
 66 [-]: GETUPVAL  R0 U0        ; R0 := U0
 67 [-]: SETTABLE  R1 K28 R2    ; R1["mOnDragFocusedCallback"] := R2
 68 [-]: GETUPVAL  R1 U0        ; R1 := U0
 69 [-]: CLOSURE   R2 7         ; R2 := closure(Function #197.8)
 70 [-]: SETTABLE  R1 K29 R2    ; R1["mOnDragUnfocusedCallback"] := R2
 71 [-]: GETUPVAL  R1 U0        ; R1 := U0
 72 [-]: CLOSURE   R2 8         ; R2 := closure(Function #197.9)
 73 [-]: GETUPVAL  R0 U0        ; R0 := U0
 74 [-]: GETUPVAL  R0 U1        ; R0 := U1
 75 [-]: GETUPVAL  R0 U6        ; R0 := U6
 76 [-]: GETUPVAL  R0 U7        ; R0 := U7
 77 [-]: GETUPVAL  R0 U5        ; R0 := U5
 78 [-]: SETTABLE  R1 K30 R2    ; R1["mOnDraggedCallback"] := R2
 79 [-]: GETUPVAL  R1 U0        ; R1 := U0
 80 [-]: CLOSURE   R2 9         ; R2 := closure(Function #197.10)
 81 [-]: SETTABLE  R1 K31 R2    ; R1["mOnDragEndCallback"] := R2
 82 [-]: GETUPVAL  R1 U0        ; R1 := U0
 83 [-]: CLOSURE   R2 10        ; R2 := closure(Function #197.11)
 84 [-]: SETTABLE  R1 K32 R2    ; R1["mGetElementCenter"] := R2
 85 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 86 [-]: SELF      R1 R1 K33    ; R2 := R1; R1 := R1[0x5f56eeab]
 87 [-]: LOADK     R3 K34       ; R3 := "MenuPanel.ConfigMenu.SwapLabel"
 88 [-]: LOADK     R4 29        ; R4 := 29.000000
 89 [-]: LOADK     R5 K35       ; R5 := ""
 90 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 91 [-]: RETURN    R0 1         ; return 


; Function #197.1:
;
; Name:            
; Defined at line: 12977
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mPrefix"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #197.2:
;
; Name:            
; Defined at line: 12981
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x5fbddc1a]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: LOADK     R3 1         ; R3 := 1.000000
  4 [-]: MOVE      R4 R2        ; R4 := R2
  5 [-]: LOADK     R5 1         ; R5 := 1.000000
  6 [-]: FORPREP   R3 25        ; R3 -= R5; PC := 25
  7 [-]: SELF      R7 R0 K1     ; R8 := R0; R7 := R0[0x5465f8f3]
  8 [-]: MOVE      R9 R6        ; R9 := R6
  9 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 10 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
 11 [-]: MOVE      R9 R7        ; R9 := R7
 12 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 13 [-]: TEST      R8 1         ; if R8 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETTABLE  R8 R7 K3     ; R8 := R7["ConfigSlot"]
 16 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETTABLE  R8 R7 K3     ; R8 := R7["ConfigSlot"]
 19 [-]: EQ        0 R8 R1      ; if R8 ~= R1 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: SELF      R8 R0 K5     ; R9 := R0; R8 := R0[0x070daa5a]
 22 [-]: GETTABLE  R10 R7 K6    ; R10 := R7["Id"]
 23 [-]: CALL      R8 3 1       ; R8(R9,R10)
 24 [-]: JMP       26           ; PC := 26
 25 [-]: FORLOOP   R3 7         ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
 26 [-]: RETURN    R0 1         ; return 


; Function #197.3:
;
; Name:            
; Defined at line: 12993
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x20b98db3]
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K4        ; R4 := ".Label.text"
  9 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 10 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["Name"]
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xf64b7262]
 14 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 15 [-]: LOADK     R4 K7        ; R4 := "Label"
 16 [-]: LOADK     R5 36        ; R5 := 36.000000
 17 [-]: GETGLOBAL R6 K8        ; R6 := 0x0032441c
 18 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["UIColor_White"]
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xf64b7262]
 22 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 23 [-]: LOADK     R4 K7        ; R4 := "Label"
 24 [-]: LOADK     R5 10        ; R5 := 10.000000
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: GETTABLE  R6 R6 K10    ; R6 := R6[0x06d055f9]
 27 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["IsAdd"]
 28 [-]: LOADK     R8 50        ; R8 := 50.000000
 29 [-]: LOADK     R9 100       ; R9 := 100.000000
 30 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 31 [-]: CALL      R1 0 1       ; R1(R2,...)
 32 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 33 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xf64b7262]
 34 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 35 [-]: LOADK     R4 K12       ; R4 := "Bg"
 36 [-]: LOADK     R5 10        ; R5 := 10.000000
 37 [-]: LOADK     R6 0         ; R6 := 0.000000
 38 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 39 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 40 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xf64b7262]
 41 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 42 [-]: LOADK     R4 K13       ; R4 := "Bg.SubLine"
 43 [-]: LOADK     R5 13        ; R5 := 13.000000
 44 [-]: LOADK     R6 K14       ; R6 := 0.010000
 45 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 46 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 47 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0xd5181643]
 48 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 49 [-]: LOADK     R4 K16       ; R4 := ".Bg.Back"
 50 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 51 [-]: GETGLOBAL R4 K8        ; R4 := 0x0032441c
 52 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["UIMaterial_SmoothEdgeNoDepthTest"]
 53 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 54 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 55 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0xd5181643]
 56 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 57 [-]: LOADK     R4 K18       ; R4 := ".Bg.SubLine"
 58 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 59 [-]: GETGLOBAL R4 K8        ; R4 := 0x0032441c
 60 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["UIMaterial_SmoothEdgeNoDepthTest"]
 61 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 62 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 63 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1[0x91a24e4b]
 64 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 65 [-]: LOADK     R4 K20       ; R4 := ".Label"
 66 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 67 [-]: LOADK     R4 33        ; R4 := 33.000000
 68 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 69 [-]: ADD       R1 R1 K21    ; R1 := R1 + 25.000000
 70 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 71 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xf64b7262]
 72 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mClipName"]
 73 [-]: LOADK     R5 K22       ; R5 := "Btn"
 74 [-]: LOADK     R6 12        ; R6 := 12.000000
 75 [-]: MOVE      R7 R1        ; R7 := R1
 76 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 77 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 78 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xf64b7262]
 79 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mClipName"]
 80 [-]: LOADK     R5 K12       ; R5 := "Bg"
 81 [-]: LOADK     R6 12        ; R6 := 12.000000
 82 [-]: MOVE      R7 R1        ; R7 := R1
 83 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 84 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 85 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xf64b7262]
 86 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mClipName"]
 87 [-]: LOADK     R5 K23       ; R5 := "RightLine"
 88 [-]: LOADK     R6 0         ; R6 := 0.000000
 89 [-]: MOVE      R7 R1        ; R7 := R1
 90 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 91 [-]: RETURN    R0 1         ; return 


; Function #197.4:
;
; Name:            
; Defined at line: 13013
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mFocusedMenuElement"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 77
  6 [-]: JMP       77           ; PC := 77
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mFocusedMenuElement"]
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mClipName"]
 10 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 77
 11 [-]: JMP       77           ; PC := 77
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0x659d451f]
 14 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_Focus"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 18 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xf64b7262]
 19 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 20 [-]: LOADK     R4 K8        ; R4 := "Label"
 21 [-]: LOADK     R5 36        ; R5 := 36.000000
 22 [-]: GETGLOBAL R6 K4        ; R6 := 0x0032441c
 23 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["UIColor_Yellow"]
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: GETTABLE  R1 R0 K10    ; R1 := R0["IsAdd"]
 26 [-]: TEST      R1 0         ; if not R1 then PC := 77
 27 [-]: JMP       77           ; PC := 77
 28 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 29 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xf64b7262]
 30 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 31 [-]: LOADK     R4 K8        ; R4 := "Label"
 32 [-]: LOADK     R5 10        ; R5 := 10.000000
 33 [-]: LOADK     R6 100       ; R6 := 100.000000
 34 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 35 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 36 [-]: SETTABLE  R1 K11 K12   ; R1["CustomEntry"] := true
 37 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 38 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x42b04007]
 39 [-]: LOADK     R4 K15       ; R4 := "/Lotus/Language/Items/SlotUnlockerGeneric"
 40 [-]: LOADBOOL  R5 0 0       ; R5 := false
 41 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 42 [-]: SETTABLE  R1 K13 R2    ; R1["Name"] := R2
 43 [-]: SETTABLE  R1 K16 K17   ; R1["Description"] := "/Lotus/Language/Items/CustomizationSlotUnlockerDesc"
 44 [-]: GETUPVAL  R2 U2        ; R2 := U2
 45 [-]: GETTABLE  R2 R2 K18    ; R2 := R2[0x0f164e09]
 46 [-]: GETUPVAL  R3 U2        ; R3 := U2
 47 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["LABEL_TYPE_PLATINUM"]
 48 [-]: LOADK     R4 K20       ; R4 := "10"
 49 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 50 [-]: NEWTABLE  R3 1 0       ; R3 := {}
 51 [-]: MOVE      R4 R2        ; R4 := R2
 52 [-]: SETLIST   R3 1 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
 53 [-]: SETTABLE  R1 K21 R3    ; R1["Tags"] := R3
 54 [-]: GETUPVAL  R3 U2        ; R3 := U2
 55 [-]: GETTABLE  R3 R3 K22    ; R3 := R3[0xfc3fed1f]
 56 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 57 [-]: MOVE      R5 R1        ; R5 := R1
 58 [-]: GETGLOBAL R6 K6        ; R6 := 0xae91e43b
 59 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0x91a24e4b]
 60 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mClipName"]
 61 [-]: LOADK     R9 K24       ; R9 := ".Bg"
 62 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 63 [-]: LOADK     R9 2         ; R9 := 2.000000
 64 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 65 [-]: GETGLOBAL R7 K6        ; R7 := 0xae91e43b
 66 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7[0x91a24e4b]
 67 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mClipName"]
 68 [-]: LOADK     R10 K24      ; R10 := ".Bg"
 69 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 70 [-]: LOADK     R10 3        ; R10 := 3.000000
 71 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 72 [-]: LOADK     R8 50        ; R8 := 50.000000
 73 [-]: LOADK     R9 30        ; R9 := 30.000000
 74 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 75 [-]: GETGLOBAL R3 K25       ; R3 := _T
 76 [-]: SETTABLE  R3 K26 R1    ; R3["InfoPopup_Data"] := R1
 77 [-]: RETURN    R0 1         ; return 


; Function #197.5:
;
; Name:            
; Defined at line: 13040
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mFocusedMenuElement"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 32
  6 [-]: JMP       32           ; PC := 32
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mFocusedMenuElement"]
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mClipName"]
 10 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 32
 11 [-]: JMP       32           ; PC := 32
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xf64b7262]
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 15 [-]: LOADK     R4 K5        ; R4 := "Label"
 16 [-]: LOADK     R5 36        ; R5 := 36.000000
 17 [-]: GETGLOBAL R6 K6        ; R6 := 0x0032441c
 18 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["UIColor_White"]
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["IsAdd"]
 21 [-]: TEST      R1 0         ; if not R1 then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 24 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xf64b7262]
 25 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 26 [-]: LOADK     R4 K5        ; R4 := "Label"
 27 [-]: LOADK     R5 10        ; R5 := 10.000000
 28 [-]: LOADK     R6 50        ; R6 := 50.000000
 29 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 30 [-]: GETGLOBAL R1 K9        ; R1 := _T
 31 [-]: SETTABLE  R1 K10 K11   ; R1["InfoPopup_Data"] := nil
 32 [-]: RETURN    R0 1         ; return 


; Function #197.6:
;
; Name:            
; Defined at line: 13050
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["IsAdd"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 136
  3 [-]: JMP       136          ; PC := 136
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mFocusedElementId"]
  6 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xca30dfb6]
 11 [-]: GETUPVAL  R4 U0        ; R4 := U0
 12 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mFocusedElementId"]
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: SETTABLE  R1 K3 R2     ; R1["mSelectedElement"] := R2
 15 [-]: JMP       18           ; PC := 18
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SETTABLE  R1 K3 K2     ; R1["mSelectedElement"] := nil
 18 [-]: LOADNIL   R1 R1        ; R1 := nil
 19 [-]: GETGLOBAL R2 K5        ; R2 := mSelected
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Element"]
 21 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["LoadOutType"]
 22 [-]: EQ        0 R2 K9      ; if R2 ~= 6.000000 then PC := 43
 23 [-]: JMP       43           ; PC := 43
 24 [-]: GETGLOBAL R2 K5        ; R2 := mSelected
 25 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Element"]
 26 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["LoadOutId"]
 27 [-]: EQ        0 R2 K11     ; if R2 ~= 0.000000 then PC := 43
 28 [-]: JMP       43           ; PC := 43
 29 [-]: GETGLOBAL R2 K12       ; R2 := 0x7b998233
 30 [-]: GETGLOBAL R3 K13       ; R3 := _T
 31 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["KDriveAvatar"]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 100
 34 [-]: JMP       100          ; PC := 100
 35 [-]: GETGLOBAL R2 K13       ; R2 := _T
 36 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["KDriveAvatar"]
 37 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xde321e6f]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xf7d48ee0]
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: MOVE      R1 R2        ; R1 := R2
 42 [-]: JMP       100          ; PC := 100
 43 [-]: GETGLOBAL R2 K5        ; R2 := mSelected
 44 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Element"]
 45 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["LoadOutType"]
 46 [-]: EQ        0 R2 K17     ; if R2 ~= 8.000000 then PC := 84
 47 [-]: JMP       84           ; PC := 84
 48 [-]: GETGLOBAL R2 K12       ; R2 := 0x7b998233
 49 [-]: GETGLOBAL R3 K13       ; R3 := _T
 50 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["MechAvatar"]
 51 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 52 [-]: TEST      R2 1         ; if R2 then PC := 84
 53 [-]: JMP       84           ; PC := 84
 54 [-]: GETGLOBAL R2 K5        ; R2 := mSelected
 55 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Element"]
 56 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["LoadOutId"]
 57 [-]: EQ        0 R2 K11     ; if R2 ~= 0.000000 then PC := 67
 58 [-]: JMP       67           ; PC := 67
 59 [-]: GETGLOBAL R2 K13       ; R2 := _T
 60 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["MechAvatar"]
 61 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xde321e6f]
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xf7d48ee0]
 64 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 65 [-]: MOVE      R1 R2        ; R1 := R2
 66 [-]: JMP       100          ; PC := 100
 67 [-]: GETGLOBAL R2 K13       ; R2 := _T
 68 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["MechAvatar"]
 69 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xde321e6f]
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xab98dbf5]
 72 [-]: GETGLOBAL R4 K5        ; R4 := mSelected
 73 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Element"]
 74 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["UID"]
 75 [-]: GETGLOBAL R5 K5        ; R5 := mSelected
 76 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Element"]
 77 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["LoadOutType"]
 78 [-]: GETGLOBAL R6 K5        ; R6 := mSelected
 79 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["Element"]
 80 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LoadOutId"]
 81 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 82 [-]: MOVE      R1 R2        ; R1 := R2
 83 [-]: JMP       100          ; PC := 100
 84 [-]: GETGLOBAL R2 K13       ; R2 := _T
 85 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["MenuSuitAvatar"]
 86 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xde321e6f]
 87 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 88 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xab98dbf5]
 89 [-]: GETGLOBAL R4 K5        ; R4 := mSelected
 90 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Element"]
 91 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["UID"]
 92 [-]: GETGLOBAL R5 K5        ; R5 := mSelected
 93 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Element"]
 94 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["LoadOutType"]
 95 [-]: GETGLOBAL R6 K5        ; R6 := mSelected
 96 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["Element"]
 97 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LoadOutId"]
 98 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 99 [-]: MOVE      R1 R2        ; R1 := R2
100 [-]: GETUPVAL  R2 U2        ; R2 := U2
101 [-]: GETTABLE  R2 R2 K22    ; R2 := R2[0xc5e71a15]
102 [-]: GETGLOBAL R3 K5        ; R3 := mSelected
103 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["Element"]
104 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["EquippedItem"]
105 [-]: MOVE      R4 R1        ; R4 := R1
106 [-]: LOADK     R5 7         ; R5 := 7.000000
107 [-]: GETGLOBAL R6 K5        ; R6 := mSelected
108 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["Element"]
109 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["StoreItemId"]
110 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
111 [-]: SETUPVAL  R2 U1        ; U82 := R1
112 [-]: GETUPVAL  R2 U2        ; R2 := U2
113 [-]: GETTABLE  R2 R2 K25    ; R2 := R2[0x60c655fc]
114 [-]: GETUPVAL  R3 U1        ; R3 := U1
115 [-]: LOADK     R4 K26       ; R4 := "OnConfirmUnlockFeature"
116 [-]: GETGLOBAL R5 K27       ; R5 := 0xae91e43b
117 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
118 [-]: EQ        0 R2 K28     ; if R2 ~= false then PC := 131
119 [-]: JMP       131          ; PC := 131
120 [-]: GETUPVAL  R3 U2        ; R3 := U2
121 [-]: GETTABLE  R3 R3 K29    ; R3 := R3[0xa3064de9]
122 [-]: GETUPVAL  R4 U1        ; R4 := U1
123 [-]: LOADK     R5 K30       ; R5 := "OnBuyFeatureItem"
124 [-]: GETGLOBAL R6 K27       ; R6 := 0xae91e43b
125 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
126 [-]: TEST      R3 1         ; if R3 then PC := 135
127 [-]: JMP       135          ; PC := 135
128 [-]: LOADNIL   R3 R3        ; R3 := nil
129 [-]: SETUPVAL  R3 U1        ; U82 := R1
130 [-]: JMP       135          ; PC := 135
131 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 135
132 [-]: JMP       135          ; PC := 135
133 [-]: LOADNIL   R3 R3        ; R3 := nil
134 [-]: SETUPVAL  R3 U1        ; U82 := R1
135 [-]: RETURN    R0 1         ; return 
136 [-]: LOADBOOL  R3 1 0       ; R3 := true
137 [-]: GETGLOBAL R4 K12       ; R4 := 0x7b998233
138 [-]: GETUPVAL  R5 U0        ; R5 := U0
139 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["mFocusedMenuElement"]
140 [-]: CALL      R4 2 2       ; R4 := R4(R5)
141 [-]: TEST      R4 1         ; if R4 then PC := 179
142 [-]: JMP       179          ; PC := 179
143 [-]: GETUPVAL  R4 U0        ; R4 := U0
144 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["mFocusedMenuElement"]
145 [-]: GETTABLE  R5 R0 K32    ; R5 := R0["mClipName"]
146 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 149
147 [-]: JMP       149          ; PC := 149
148 [-]: LOADBOOL  R3 0 0       ; R3 := false
149 [-]: GETGLOBAL R4 K33       ; R4 := 0x25312c9b
150 [-]: GETGLOBAL R5 K27       ; R5 := 0xae91e43b
151 [-]: GETUPVAL  R6 U0        ; R6 := U0
152 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["mFocusedMenuElement"]
153 [-]: LOADK     R7 K34       ; R7 := ".Bg"
154 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
155 [-]: LOADK     R7 8         ; R7 := 8.000000
156 [-]: NEWTABLE  R8 1 0       ; R8 := {}
157 [-]: LOADK     R9 10        ; R9 := 10.000000
158 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
159 [-]: NEWTABLE  R9 1 0       ; R9 := {}
160 [-]: LOADK     R10 0        ; R10 := 0.000000
161 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
162 [-]: LOADK     R10 K36      ; R10 := 0.150000
163 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
164 [-]: GETGLOBAL R4 K33       ; R4 := 0x25312c9b
165 [-]: GETGLOBAL R5 K27       ; R5 := 0xae91e43b
166 [-]: GETUPVAL  R6 U0        ; R6 := U0
167 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["mFocusedMenuElement"]
168 [-]: LOADK     R7 K37       ; R7 := ".Bg.SubLine"
169 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
170 [-]: LOADK     R7 8         ; R7 := 8.000000
171 [-]: NEWTABLE  R8 1 0       ; R8 := {}
172 [-]: LOADK     R9 13        ; R9 := 13.000000
173 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
174 [-]: NEWTABLE  R9 1 0       ; R9 := {}
175 [-]: LOADK     R10 K38      ; R10 := 0.010000
176 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
177 [-]: LOADK     R10 K36      ; R10 := 0.150000
178 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
179 [-]: GETUPVAL  R4 U0        ; R4 := U0
180 [-]: GETTABLE  R5 R0 K32    ; R5 := R0["mClipName"]
181 [-]: SETTABLE  R4 K31 R5    ; R4["mFocusedMenuElement"] := R5
182 [-]: GETUPVAL  R4 U0        ; R4 := U0
183 [-]: GETTABLE  R5 R0 K39    ; R5 := R0["Id"]
184 [-]: SETTABLE  R4 K1 R5     ; R4["mFocusedElementId"] := R5
185 [-]: GETGLOBAL R4 K27       ; R4 := 0xae91e43b
186 [-]: SELF      R4 R4 K40    ; R5 := R4; R4 := R4[0xf64b7262]
187 [-]: GETUPVAL  R6 U0        ; R6 := U0
188 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["mFocusedMenuElement"]
189 [-]: LOADK     R7 K41       ; R7 := "Label"
190 [-]: LOADK     R8 36        ; R8 := 36.000000
191 [-]: GETGLOBAL R9 K42       ; R9 := 0x0032441c
192 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["UIColor_White"]
193 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
194 [-]: GETGLOBAL R4 K33       ; R4 := 0x25312c9b
195 [-]: GETGLOBAL R5 K27       ; R5 := 0xae91e43b
196 [-]: GETUPVAL  R6 U0        ; R6 := U0
197 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["mFocusedMenuElement"]
198 [-]: LOADK     R7 K34       ; R7 := ".Bg"
199 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
200 [-]: LOADK     R7 8         ; R7 := 8.000000
201 [-]: NEWTABLE  R8 1 0       ; R8 := {}
202 [-]: LOADK     R9 10        ; R9 := 10.000000
203 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
204 [-]: NEWTABLE  R9 1 0       ; R9 := {}
205 [-]: LOADK     R10 100      ; R10 := 100.000000
206 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
207 [-]: LOADK     R10 0        ; R10 := 0.250000
208 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
209 [-]: GETGLOBAL R4 K33       ; R4 := 0x25312c9b
210 [-]: GETGLOBAL R5 K27       ; R5 := 0xae91e43b
211 [-]: GETUPVAL  R6 U0        ; R6 := U0
212 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["mFocusedMenuElement"]
213 [-]: LOADK     R7 K37       ; R7 := ".Bg.SubLine"
214 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
215 [-]: LOADK     R7 8         ; R7 := 8.000000
216 [-]: NEWTABLE  R8 1 0       ; R8 := {}
217 [-]: LOADK     R9 13        ; R9 := 13.000000
218 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
219 [-]: NEWTABLE  R9 1 0       ; R9 := {}
220 [-]: LOADK     R10 4        ; R10 := 4.000000
221 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
222 [-]: LOADK     R10 0        ; R10 := 0.250000
223 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
224 [-]: TEST      R3 0         ; if not R3 then PC := 234
225 [-]: JMP       234          ; PC := 234
226 [-]: GETUPVAL  R4 U3        ; R4 := U3
227 [-]: GETTABLE  R4 R4 K44    ; R4 := R4[0x659d451f]
228 [-]: GETGLOBAL R5 K42       ; R5 := 0x0032441c
229 [-]: GETTABLE  R5 R5 K45    ; R5 := R5["UISound_Select"]
230 [-]: CALL      R4 2 1       ; R4(R5)
231 [-]: GETUPVAL  R4 U4        ; R4 := U4
232 [-]: MOVE      R5 R0        ; R5 := R0
233 [-]: CALL      R4 2 1       ; R4(R5)
234 [-]: RETURN    R0 1         ; return 


; Function #197.7:
;
; Name:            
; Defined at line: 13113
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xca30dfb6]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mClickDrag"]
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["DragId"]
  6 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["IsAdd"]
  8 [-]: TEST      R2 1         ; if R2 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["IsFlappy"]
 11 [-]: TEST      R2 1         ; if R2 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["IsWyrmius"]
 14 [-]: TEST      R2 0         ; if not R2 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x20b98db3]
 18 [-]: LOADK     R4 K8        ; R4 := "MenuPanel.ConfigMenu.SwapLabel.text"
 19 [-]: LOADK     R5 K9        ; R5 := "/Lotus/Language/Menu/Arsenal_ConfigSwapError"
 20 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 21 [-]: JMP       32           ; PC := 32
 22 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 23 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x20b98db3]
 24 [-]: LOADK     R4 K8        ; R4 := "MenuPanel.ConfigMenu.SwapLabel.text"
 25 [-]: LOADK     R5 K10       ; R5 := "/Lotus/Language/Menu/Arsenal_ConfigSwap"
 26 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 27 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["Name"]
 28 [-]: SETTABLE  R6 K11 R7    ; R6["FIRST"] := R7
 29 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["Name"]
 30 [-]: SETTABLE  R6 K13 R7    ; R6["SECOND"] := R7
 31 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 32 [-]: RETURN    R0 1         ; return 


; Function #197.8:
;
; Name:            
; Defined at line: 13123
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x5f56eeab]
  3 [-]: LOADK     R3 K2        ; R3 := "MenuPanel.ConfigMenu.SwapLabel"
  4 [-]: LOADK     R4 29        ; R4 := 29.000000
  5 [-]: LOADK     R5 K3        ; R5 := ""
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: RETURN    R0 1         ; return 


; Function #197.9:
;
; Name:            
; Defined at line: 13127
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x5465f8f3]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mClickDrag"]
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["DragIndex"]
  6 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x5465f8f3]
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mClickDrag"]
 11 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["FocusedIndex"]
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["ConfigSlot"]
 14 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["ConfigSlot"]
 17 [-]: EQ        0 R2 K5      ; if R2 ~= nil then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x659d451f]
 21 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 22 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["UISound_Error"]
 23 [-]: CALL      R2 2 1       ; R2(R3)
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETGLOBAL R2 K9        ; R2 := mInventory
 26 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xf193d12d]
 27 [-]: GETGLOBAL R4 K11       ; R4 := mSelected
 28 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["Element"]
 29 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["UID"]
 30 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["ConfigSlot"]
 31 [-]: GETTABLE  R6 R1 K4     ; R6 := R1["ConfigSlot"]
 32 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 33 [-]: GETGLOBAL R2 K11       ; R2 := mSelected
 34 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["Element"]
 35 [-]: GETUPVAL  R3 U2        ; R3 := U2
 36 [-]: GETTABLE  R3 R3 K15    ; R3 := R3[0x866fb296]
 37 [-]: GETGLOBAL R4 K11       ; R4 := mSelected
 38 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["Element"]
 39 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["LoadOutType"]
 40 [-]: GETGLOBAL R5 K11       ; R5 := mSelected
 41 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Element"]
 42 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["LoadOutId"]
 43 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 44 [-]: SETTABLE  R2 K14 R3    ; R2["OwnedItems"] := R3
 45 [-]: GETUPVAL  R2 U3        ; R2 := U3
 46 [-]: GETGLOBAL R3 K11       ; R3 := mSelected
 47 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["Element"]
 48 [-]: CALL      R2 2 1       ; R2(R3)
 49 [-]: GETUPVAL  R2 U0        ; R2 := U0
 50 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["mSelectedElement"]
 51 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 59
 52 [-]: JMP       59           ; PC := 59
 53 [-]: GETTABLE  R2 R1 K19    ; R2 := R1["Id"]
 54 [-]: GETUPVAL  R3 U0        ; R3 := U0
 55 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["mSelectedElement"]
 56 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["Id"]
 57 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 66
 58 [-]: JMP       66           ; PC := 66
 59 [-]: GETUPVAL  R2 U0        ; R2 := U0
 60 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2[0x77de11fe]
 61 [-]: GETUPVAL  R4 U0        ; R4 := U0
 62 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mClickDrag"]
 63 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FocusedIndex"]
 64 [-]: CALL      R2 3 1       ; R2(R3,R4)
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETUPVAL  R2 U4        ; R2 := U4
 67 [-]: GETUPVAL  R3 U0        ; R3 := U0
 68 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["mSelectedElement"]
 69 [-]: LOADBOOL  R4 1 0       ; R4 := true
 70 [-]: CALL      R2 3 1       ; R2(R3,R4)
 71 [-]: RETURN    R0 1         ; return 


; Function #197.10:
;
; Name:            
; Defined at line: 13148
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x5f56eeab]
  3 [-]: LOADK     R2 K2        ; R2 := "MenuPanel.ConfigMenu.SwapLabel"
  4 [-]: LOADK     R3 29        ; R3 := 29.000000
  5 [-]: LOADK     R4 K3        ; R4 := ""
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #197.11:
;
; Name:            
; Defined at line: 13152
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91a24e4b]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 0         ; R4 := 0.000000
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x91a24e4b]
  8 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
  9 [-]: LOADK     R5 1         ; R5 := 1.000000
 10 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 12 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x91a24e4b]
 13 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 14 [-]: LOADK     R6 K3        ; R6 := ".Bg"
 15 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 16 [-]: LOADK     R6 12        ; R6 := 12.000000
 17 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 18 [-]: DIV       R4 R3 K4     ; R4 := R3 / 2.000000
 19 [-]: ADD       R4 R1 R4     ; R4 := R1 + R4
 20 [-]: MOVE      R5 R2        ; R5 := R2
 21 [-]: RETURN    R4 3         ; return R4,R5
 22 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 13163
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 0         ; if not R0 then PC := 19
  2 [-]: JMP       19           ; PC := 19
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: CALL      R1 1 2       ; R1 := R1()
  5 [-]: GETGLOBAL R2 K0        ; R2 := mInventory
  6 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x8ed300d6]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 10 [-]: LEN       R4 R2        ; R4 := # R2
 11 [-]: GETTABLE  R4 R2 R4     ; R4 := R2[R4]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: LEN       R4 R2        ; R4 := # R2
 17 [-]: GETTABLE  R4 R2 R4     ; R4 := R2[R4]
 18 [-]: CALL      R3 2 1       ; R3(R4)
 19 [-]: LOADBOOL  R3 0 0       ; R3 := false
 20 [-]: SETGLOBAL R3 K3        ; mInputBlocked := R3
 21 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 13176
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["PVE_LOADOUTS"]
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0xa94df70b
  5 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x4ddd3d6e]
  6 [-]: LOADK     R4 6         ; R4 := 6.000000
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
  9 [-]: SETTABLE  R0 K0 R1     ; R0["PVE_LOADOUTS"] := R1
 10 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 13180
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0x14e3a848]
  3 [-]: LOADK     R1 K2        ; R1 := "AbilityProgression"
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 54
  6 [-]: JMP       54           ; PC := 54
  7 [-]: GETGLOBAL R1 K0        ; R1 := _T
  8 [-]: SETTABLE  R1 K4 K5     ; R1["mSentinelMode"] := false
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Current"]
 11 [-]: EQ        0 R1 K8      ; if R1 ~= 3.000000 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["suitTable"]
 15 [-]: GETGLOBAL R2 K0        ; R2 := _T
 16 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["ARCHWING_DEFAULT_ROTATION"]
 17 [-]: SETTABLE  R1 K10 R2    ; R1["desiredRot"] := R2
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETGLOBAL R1 K0        ; R1 := _T
 20 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["suitTable"]
 21 [-]: GETGLOBAL R2 K0        ; R2 := _T
 22 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["DEFAULT_SUIT_ROTATION"]
 23 [-]: SETTABLE  R1 K10 R2    ; R1["desiredRot"] := R2
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["suitTable"]
 26 [-]: GETGLOBAL R2 K0        ; R2 := _T
 27 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["suitTable"]
 28 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["desiredRot"]
 29 [-]: SETTABLE  R1 K13 R2    ; R1["lerpRot"] := R2
 30 [-]: GETUPVAL  R1 U1        ; R1 := U1
 31 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[0xd4c67576]
 32 [-]: LOADBOOL  R2 1 0       ; R2 := true
 33 [-]: CALL      R1 2 1       ; R1(R2)
 34 [-]: LOADBOOL  R1 1 0       ; R1 := true
 35 [-]: SETGLOBAL R1 K15       ; mInputBlocked := R1
 36 [-]: GETGLOBAL R1 K16       ; R1 := 0x7b998233
 37 [-]: GETGLOBAL R2 K17       ; R2 := mSelected
 38 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["Element"]
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: TEST      R1 1         ; if R1 then PC := 49
 41 [-]: JMP       49           ; PC := 49
 42 [-]: GETGLOBAL R1 K17       ; R1 := mSelected
 43 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["Element"]
 44 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["LoadOutId"]
 45 [-]: EQ        0 R1 K20     ; if R1 ~= 0.000000 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: GETGLOBAL R1 K0        ; R1 := _T
 48 [-]: SETTABLE  R1 K21 K22   ; R1["SlideAbilityScreen"] := true
 49 [-]: GETGLOBAL R1 K24       ; R1 := 0xae91e43b
 50 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x1fd6abd0]
 51 [-]: MOVE      R3 R0        ; R3 := R0
 52 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 53 [-]: SETGLOBAL R1 K23       ; mChildMovie := R1
 54 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 13206
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 13210
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mChildMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K1        ; R0 := mChildMovie
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x32302b4a]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 10 [-]: GETGLOBAL R1 K3        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["SelectedLoadOutPart"]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: GETGLOBAL R0 K3        ; R0 := _T
 16 [-]: SETTABLE  R0 K4 K5     ; R0["SelectedLoadOutPart"] := 1.000000
 17 [-]: LOADBOOL  R0 0 0       ; R0 := false
 18 [-]: SETGLOBAL R0 K6        ; mInputBlocked := R0
 19 [-]: GETGLOBAL R0 K7        ; R0 := mSelected
 20 [-]: SETTABLE  R0 K8 K9     ; R0["Element"] := nil
 21 [-]: GETGLOBAL R0 K10       ; R0 := mLists
 22 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mLoadOutList"]
 23 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0xbce5a201]
 24 [-]: GETGLOBAL R2 K3        ; R2 := _T
 25 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["SelectedLoadOutPart"]
 26 [-]: CALL      R0 3 1       ; R0(R1,R2)
 27 [-]: GETGLOBAL R0 K10       ; R0 := mLists
 28 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mLoadOutList"]
 29 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0xdf42446e]
 30 [-]: GETGLOBAL R2 K3        ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["SelectedLoadOutPart"]
 32 [-]: CALL      R0 3 1       ; R0(R1,R2)
 33 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 34 [-]: GETGLOBAL R1 K3        ; R1 := _T
 35 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["MenuSuitAvatar"]
 36 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 37 [-]: TEST      R0 1         ; if R0 then PC := 57
 38 [-]: JMP       57           ; PC := 57
 39 [-]: GETGLOBAL R0 K3        ; R0 := _T
 40 [-]: GETTABLE  R0 R0 K14    ; R0 := R0["MenuSuitAvatar"]
 41 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0[0xb63fc1d8]
 42 [-]: GETGLOBAL R2 K16       ; R2 := 0x0469f296
 43 [-]: LOADK     R3 K17       ; R3 := "GAME_C1_HEAD1"
 44 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 45 [-]: GETGLOBAL R3 K18       ; R3 := 0x00046924
 46 [-]: CALL      R3 1 0       ; R3,... := R3()
 47 [-]: CALL      R0 0 1       ; R0(R1,...)
 48 [-]: GETGLOBAL R0 K3        ; R0 := _T
 49 [-]: GETTABLE  R0 R0 K14    ; R0 := R0["MenuSuitAvatar"]
 50 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0[0xb63fc1d8]
 51 [-]: GETGLOBAL R2 K16       ; R2 := 0x0469f296
 52 [-]: LOADK     R3 K19       ; R3 := "GAME_C1_NECK2"
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: GETGLOBAL R3 K18       ; R3 := 0x00046924
 55 [-]: CALL      R3 1 0       ; R3,... := R3()
 56 [-]: CALL      R0 0 1       ; R0(R1,...)
 57 [-]: GETGLOBAL R0 K3        ; R0 := _T
 58 [-]: SETTABLE  R0 K20 K9    ; R0["SlideAbilityScreen"] := nil
 59 [-]: LOADBOOL  R0 1 0       ; R0 := true
 60 [-]: RETURN    R0 2         ; return R0
 61 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 13235
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mLists
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mLoadOutCategories"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := mLists
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mLoadOutCategories"]
  5 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mStates"]
  6 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["TENNO"]
  7 [-]: SETTABLE  R0 K2 R1     ; R0["mState"] := R1
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: LOADK     R1 2         ; R1 := 2.000000
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 13240
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MenuSuitAvatar"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 393
  7 [-]: JMP       393          ; PC := 393
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x0c33ebb2]
 10 [-]: LOADK     R3 K5        ; R3 := "_root"
 11 [-]: LOADK     R4 K6        ; R4 := "suitRotationX"
 12 [-]: LOADK     R5 0         ; R5 := 0.000000
 13 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 14 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0xde321e6f]
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xf7d48ee0]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 393
 22 [-]: JMP       393          ; PC := 393
 23 [-]: SELF      R2 R1 K9     ; R3 := R1; R2 := R1[0xf2deaf69]
 24 [-]: GETGLOBAL R4 K10       ; R4 := 0xb5afcb89
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: TEST      R2 0         ; if not R2 then PC := 44
 27 [-]: JMP       44           ; PC := 44
 28 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 29 [-]: GETGLOBAL R3 K0        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["DRAGON_EnablePelt"]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: TEST      R2 1         ; if R2 then PC := 393
 33 [-]: JMP       393          ; PC := 393
 34 [-]: GETGLOBAL R2 K0        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K12    ; R2 := R2[0xc50e8842]
 36 [-]: MOVE      R3 R0        ; R3 := R0
 37 [-]: GETGLOBAL R4 K0        ; R4 := _T
 38 [-]: GETTABLE  R4 R4 K13    ; R4 := R4[0xb3bbbb5e]
 39 [-]: MOVE      R5 R0        ; R5 := R0
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: NOT       R4 R4        ; R4 := not R4
 42 [-]: CALL      R2 3 1       ; R2(R3,R4)
 43 [-]: JMP       393          ; PC := 393
 44 [-]: SELF      R2 R1 K9     ; R3 := R1; R2 := R1[0xf2deaf69]
 45 [-]: GETGLOBAL R4 K14       ; R4 := 0xe3ae0932
 46 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 47 [-]: TEST      R2 0         ; if not R2 then PC := 65
 48 [-]: JMP       65           ; PC := 65
 49 [-]: GETGLOBAL R2 K15       ; R2 := 0x2d0fad09
 50 [-]: LOADK     R3 K16       ; R3 := "Lotus.Scripts.Effects.Polarity"
 51 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 52 [-]: GETTABLE  R3 R2 K17    ; R3 := R2[0x7d2b2507]
 53 [-]: MOVE      R4 R1        ; R4 := R1
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: TEST      R3 0         ; if not R3 then PC := 61
 56 [-]: JMP       61           ; PC := 61
 57 [-]: GETTABLE  R3 R2 K18    ; R3 := R2[0x467fcae6]
 58 [-]: MOVE      R4 R1        ; R4 := R1
 59 [-]: CALL      R3 2 1       ; R3(R4)
 60 [-]: JMP       393          ; PC := 393
 61 [-]: GETTABLE  R3 R2 K19    ; R3 := R2[0x09118c8b]
 62 [-]: MOVE      R4 R1        ; R4 := R1
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: JMP       393          ; PC := 393
 65 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1[0xf2deaf69]
 66 [-]: GETGLOBAL R5 K20       ; R5 := 0x68564c44
 67 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 68 [-]: TEST      R3 0         ; if not R3 then PC := 99
 69 [-]: JMP       99           ; PC := 99
 70 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 71 [-]: GETGLOBAL R4 K0        ; R4 := _T
 72 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["INFESTED_DecoState"]
 73 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 74 [-]: TEST      R3 1         ; if R3 then PC := 393
 75 [-]: JMP       393          ; PC := 393
 76 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 77 [-]: GETGLOBAL R4 K0        ; R4 := _T
 78 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["INFESTED_DecoState"]
 79 [-]: SELF      R5 R0 K22    ; R6 := R0; R5 := R0[0x388577d5]
 80 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 81 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: TEST      R3 1         ; if R3 then PC := 393
 84 [-]: JMP       393          ; PC := 393
 85 [-]: GETGLOBAL R3 K23       ; R3 := 0x4ec73e73
 86 [-]: GETGLOBAL R4 K0        ; R4 := _T
 87 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["INFESTED_DecoState"]
 88 [-]: SELF      R5 R0 K22    ; R6 := R0; R5 := R0[0x388577d5]
 89 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 90 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 91 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["openDecos"]
 92 [-]: CALL      R3 2 3       ; R3,R4 := R3(R4)
 93 [-]: GETGLOBAL R5 K0        ; R5 := _T
 94 [-]: GETTABLE  R5 R5 K25    ; R5 := R5[0x8095dfb5]
 95 [-]: MOVE      R6 R0        ; R6 := R0
 96 [-]: NOT       R7 R4        ; R7 := not R4
 97 [-]: CALL      R5 3 1       ; R5(R6,R7)
 98 [-]: JMP       393          ; PC := 393
 99 [-]: SELF      R5 R1 K9     ; R6 := R1; R5 := R1[0xf2deaf69]
100 [-]: GETGLOBAL R7 K26       ; R7 := 0x2de3a851
101 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
102 [-]: TEST      R5 0         ; if not R5 then PC := 181
103 [-]: JMP       181          ; PC := 181
104 [-]: GETGLOBAL R5 K27       ; R5 := 0x89326c93
105 [-]: SELF      R5 R5 K28    ; R6 := R5; R5 := R5[0xfb64e76c]
106 [-]: CALL      R5 2 2       ; R5 := R5(R6)
107 [-]: SELF      R6 R5 K29    ; R7 := R5; R6 := R5[0xa534c3ac]
108 [-]: CALL      R6 2 2       ; R6 := R6(R7)
109 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
110 [-]: MOVE      R8 R6        ; R8 := R6
111 [-]: CALL      R7 2 2       ; R7 := R7(R8)
112 [-]: TEST      R7 1         ; if R7 then PC := 393
113 [-]: JMP       393          ; PC := 393
114 [-]: SELF      R7 R6 K7     ; R8 := R6; R7 := R6[0xde321e6f]
115 [-]: CALL      R7 2 2       ; R7 := R7(R8)
116 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0xf7d48ee0]
117 [-]: CALL      R7 2 2       ; R7 := R7(R8)
118 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
119 [-]: MOVE      R9 R7        ; R9 := R7
120 [-]: CALL      R8 2 2       ; R8 := R8(R9)
121 [-]: TEST      R8 1         ; if R8 then PC := 177
122 [-]: JMP       177          ; PC := 177
123 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7[0xf2deaf69]
124 [-]: GETGLOBAL R10 K26      ; R10 := 0x2de3a851
125 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
126 [-]: TEST      R8 1         ; if R8 then PC := 177
127 [-]: JMP       177          ; PC := 177
128 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
129 [-]: GETGLOBAL R9 K30       ; R9 := 0xbe190284
130 [-]: CALL      R8 2 2       ; R8 := R8(R9)
131 [-]: TEST      R8 1         ; if R8 then PC := 160
132 [-]: JMP       160          ; PC := 160
133 [-]: GETGLOBAL R8 K30       ; R8 := 0xbe190284
134 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8[0xf2deaf69]
135 [-]: GETGLOBAL R10 K31      ; R10 := gLotusSandBoxGameRulesType
136 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
137 [-]: TEST      R8 0         ; if not R8 then PC := 160
138 [-]: JMP       160          ; PC := 160
139 [-]: LOADBOOL  R8 1 0       ; R8 := true
140 [-]: SETGLOBAL R8 K32       ; mInputBlocked := R8
141 [-]: GETGLOBAL R8 K0        ; R8 := _T
142 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["BackgroundMovie"]
143 [-]: SELF      R8 R8 K34    ; R9 := R8; R8 := R8[0xe4162eed]
144 [-]: LOADK     R10 K35      ; R10 := "ShowBlockingMessage"
145 [-]: LOADK     R11 K36      ; R11 := "2"
146 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
147 [-]: SELF      R8 R5 K37    ; R9 := R5; R8 := R5[0xbe524b27]
148 [-]: CALL      R8 2 2       ; R8 := R8(R9)
149 [-]: SELF      R9 R8 K38    ; R10 := R8; R9 := R8[0x80563238]
150 [-]: CALL      R9 2 2       ; R9 := R9(R10)
151 [-]: GETGLOBAL R10 K30      ; R10 := 0xbe190284
152 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10[0x20d53ac3]
153 [-]: MOVE      R12 R5       ; R12 := R5
154 [-]: SELF      R13 R9 K40   ; R14 := R9; R13 := R9[0x62c81b76]
155 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
156 [-]: CALL      R10 0 1      ; R10(R11,...)
157 [-]: GETGLOBAL R10 K0       ; R10 := _T
158 [-]: SETTABLE  R10 K41 K42  ; R10["waitForBardSuit"] := true
159 [-]: JMP       393          ; PC := 393
160 [-]: GETGLOBAL R10 K0       ; R10 := _T
161 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["MenuSuitAvatar"]
162 [-]: GETGLOBAL R11 K0       ; R11 := _T
163 [-]: SETTABLE  R11 K1 R6    ; R11["MenuSuitAvatar"] := R6
164 [-]: GETUPVAL  R11 U0       ; R11 := U0
165 [-]: CALL      R11 1 1      ; R11()
166 [-]: GETGLOBAL R11 K0       ; R11 := _T
167 [-]: GETTABLE  R11 R11 K1   ; R11 := R11["MenuSuitAvatar"]
168 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0x2abc8ecd]
169 [-]: LOADBOOL  R13 0 0      ; R13 := false
170 [-]: CALL      R11 3 1      ; R11(R12,R13)
171 [-]: GETGLOBAL R11 K0       ; R11 := _T
172 [-]: SETTABLE  R11 K1 R10   ; R11["MenuSuitAvatar"] := R10
173 [-]: GETUPVAL  R11 U1       ; R11 := U1
174 [-]: LOADK     R12 0        ; R12 := 0.000000
175 [-]: CALL      R11 2 1      ; R11(R12)
176 [-]: JMP       393          ; PC := 393
177 [-]: GETUPVAL  R11 U1       ; R11 := U1
178 [-]: LOADK     R12 0        ; R12 := 0.000000
179 [-]: CALL      R11 2 1      ; R11(R12)
180 [-]: JMP       393          ; PC := 393
181 [-]: SELF      R11 R1 K9    ; R12 := R1; R11 := R1[0xf2deaf69]
182 [-]: GETGLOBAL R13 K44      ; R13 := 0x6dcacb87
183 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
184 [-]: TEST      R11 0        ; if not R11 then PC := 336
185 [-]: JMP       336          ; PC := 336
186 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
187 [-]: GETGLOBAL R12 K0       ; R12 := _T
188 [-]: GETTABLE  R12 R12 K45  ; R12 := R12["KHORA_SetMode"]
189 [-]: CALL      R11 2 2      ; R11 := R11(R12)
190 [-]: TEST      R11 1        ; if R11 then PC := 393
191 [-]: JMP       393          ; PC := 393
192 [-]: LOADK     R11 0        ; R11 := 0.000000
193 [-]: LOADK     R12 0        ; R12 := 0.000000
194 [-]: GETGLOBAL R13 K2       ; R13 := 0x7b998233
195 [-]: GETGLOBAL R14 K0       ; R14 := _T
196 [-]: GETTABLE  R14 R14 K46  ; R14 := R14["KHORA_CurrentMode"]
197 [-]: CALL      R13 2 2      ; R13 := R13(R14)
198 [-]: TEST      R13 1        ; if R13 then PC := 214
199 [-]: JMP       214          ; PC := 214
200 [-]: GETGLOBAL R13 K2       ; R13 := 0x7b998233
201 [-]: GETGLOBAL R14 K0       ; R14 := _T
202 [-]: GETTABLE  R14 R14 K46  ; R14 := R14["KHORA_CurrentMode"]
203 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0[0x388577d5]
204 [-]: CALL      R15 2 2      ; R15 := R15(R16)
205 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
206 [-]: CALL      R13 2 2      ; R13 := R13(R14)
207 [-]: TEST      R13 1        ; if R13 then PC := 214
208 [-]: JMP       214          ; PC := 214
209 [-]: GETGLOBAL R13 K0       ; R13 := _T
210 [-]: GETTABLE  R13 R13 K46  ; R13 := R13["KHORA_CurrentMode"]
211 [-]: SELF      R14 R0 K22   ; R15 := R0; R14 := R0[0x388577d5]
212 [-]: CALL      R14 2 2      ; R14 := R14(R15)
213 [-]: GETTABLE  R11 R13 R14  ; R11 := R13[R14]
214 [-]: GETGLOBAL R13 K2       ; R13 := 0x7b998233
215 [-]: GETGLOBAL R14 K0       ; R14 := _T
216 [-]: GETTABLE  R14 R14 K47  ; R14 := R14["KHORA_CurrentDissolve"]
217 [-]: CALL      R13 2 2      ; R13 := R13(R14)
218 [-]: TEST      R13 1        ; if R13 then PC := 235
219 [-]: JMP       235          ; PC := 235
220 [-]: GETGLOBAL R13 K2       ; R13 := 0x7b998233
221 [-]: GETGLOBAL R14 K0       ; R14 := _T
222 [-]: GETTABLE  R14 R14 K47  ; R14 := R14["KHORA_CurrentDissolve"]
223 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0[0x388577d5]
224 [-]: CALL      R15 2 2      ; R15 := R15(R16)
225 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
226 [-]: CALL      R13 2 2      ; R13 := R13(R14)
227 [-]: TEST      R13 1        ; if R13 then PC := 235
228 [-]: JMP       235          ; PC := 235
229 [-]: GETGLOBAL R13 K0       ; R13 := _T
230 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["KHORA_CurrentDissolve"]
231 [-]: SELF      R14 R0 K22   ; R15 := R0; R14 := R0[0x388577d5]
232 [-]: CALL      R14 2 2      ; R14 := R14(R15)
233 [-]: GETTABLE  R12 R13 R14  ; R12 := R13[R14]
234 [-]: JMP       245          ; PC := 245
235 [-]: GETGLOBAL R13 K0       ; R13 := _T
236 [-]: GETTABLE  R13 R13 K48  ; R13 := R13[0xb1b8ab73]
237 [-]: MOVE      R14 R1       ; R14 := R1
238 [-]: CALL      R13 2 2      ; R13 := R13(R14)
239 [-]: MOVE      R12 R13      ; R12 := R13
240 [-]: GETGLOBAL R13 K0       ; R13 := _T
241 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["KHORA_CurrentDissolve"]
242 [-]: SELF      R14 R0 K22   ; R15 := R0; R14 := R0[0x388577d5]
243 [-]: CALL      R14 2 2      ; R14 := R14(R15)
244 [-]: SETTABLE  R13 R14 R12  ; R13[R14] := R12
245 [-]: LT        0 K49 R12    ; if 0.000000 >= R12 then PC := 278
246 [-]: JMP       278          ; PC := 278
247 [-]: GETGLOBAL R13 K0       ; R13 := _T
248 [-]: GETTABLE  R13 R13 K50  ; R13 := R13[0x9d4f5aaf]
249 [-]: MOVE      R14 R1       ; R14 := R1
250 [-]: LOADK     R15 0        ; R15 := 0.000000
251 [-]: CALL      R13 3 1      ; R13(R14,R15)
252 [-]: GETGLOBAL R13 K0       ; R13 := _T
253 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["KHORA_CurrentDissolve"]
254 [-]: SELF      R14 R0 K22   ; R15 := R0; R14 := R0[0x388577d5]
255 [-]: CALL      R14 2 2      ; R14 := R14(R15)
256 [-]: SETTABLE  R13 R14 K49  ; R13[R14] := 0.000000
257 [-]: GETGLOBAL R13 K0       ; R13 := _T
258 [-]: GETTABLE  R13 R13 K51  ; R13 := R13[0xea9ef043]
259 [-]: MOVE      R14 R1       ; R14 := R1
260 [-]: LOADK     R15 0        ; R15 := 0.000000
261 [-]: CALL      R13 3 1      ; R13(R14,R15)
262 [-]: GETGLOBAL R13 K52      ; R13 := mButtons
263 [-]: GETGLOBAL R14 K53      ; R14 := mButtonIndices
264 [-]: GETTABLE  R14 R14 K54  ; R14 := R14["SuitAppearance"]
265 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
266 [-]: GETGLOBAL R14 K56      ; R14 := 0x7f5022cf
267 [-]: GETTABLE  R14 R14 K57  ; R14 := R14[0x3f3e4d12]
268 [-]: GETGLOBAL R15 K3       ; R15 := 0xae91e43b
269 [-]: SELF      R15 R15 K58  ; R16 := R15; R15 := R15[0x42b04007]
270 [-]: LOADK     R17 K59      ; R17 := "/Lotus/Language/Suits/KhoraKavatMode"
271 [-]: LOADK     R18 0        ; R18 := 0.000000
272 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
273 [-]: LOADBOOL  R18 1 0      ; R18 := true
274 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
275 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
276 [-]: SETTABLE  R13 K55 R14  ; R13["mLabel"] := R14
277 [-]: JMP       333          ; PC := 333
278 [-]: EQ        0 R11 K60    ; if R11 ~= 2.000000 then PC := 311
279 [-]: JMP       311          ; PC := 311
280 [-]: GETGLOBAL R13 K0       ; R13 := _T
281 [-]: GETTABLE  R13 R13 K50  ; R13 := R13[0x9d4f5aaf]
282 [-]: MOVE      R14 R1       ; R14 := R1
283 [-]: LOADK     R15 1        ; R15 := 1.000000
284 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
285 [-]: TEST      R13 0        ; if not R13 then PC := 311
286 [-]: JMP       311          ; PC := 311
287 [-]: GETGLOBAL R13 K0       ; R13 := _T
288 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["KHORA_CurrentDissolve"]
289 [-]: SELF      R14 R0 K22   ; R15 := R0; R14 := R0[0x388577d5]
290 [-]: CALL      R14 2 2      ; R14 := R14(R15)
291 [-]: SETTABLE  R13 R14 K61  ; R13[R14] := 1.000000
292 [-]: GETGLOBAL R13 K0       ; R13 := _T
293 [-]: GETTABLE  R13 R13 K51  ; R13 := R13[0xea9ef043]
294 [-]: MOVE      R14 R1       ; R14 := R1
295 [-]: LOADK     R15 0        ; R15 := 0.000000
296 [-]: CALL      R13 3 1      ; R13(R14,R15)
297 [-]: GETGLOBAL R13 K52      ; R13 := mButtons
298 [-]: GETGLOBAL R14 K53      ; R14 := mButtonIndices
299 [-]: GETTABLE  R14 R14 K54  ; R14 := R14["SuitAppearance"]
300 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
301 [-]: GETGLOBAL R14 K56      ; R14 := 0x7f5022cf
302 [-]: GETTABLE  R14 R14 K57  ; R14 := R14[0x3f3e4d12]
303 [-]: GETGLOBAL R15 K3       ; R15 := 0xae91e43b
304 [-]: SELF      R15 R15 K58  ; R16 := R15; R15 := R15[0x42b04007]
305 [-]: LOADK     R17 K62      ; R17 := "/Lotus/Language/Suits/KhoraKavatModeNone"
306 [-]: LOADBOOL  R18 1 0      ; R18 := true
307 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
308 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
309 [-]: SETTABLE  R13 K55 R14  ; R13["mLabel"] := R14
310 [-]: JMP       333          ; PC := 333
311 [-]: ADD       R13 R11 K61  ; R13 := R11 + 1.000000
312 [-]: MOD       R13 R13 K63  ; R13 := R13 % 3.000000
313 [-]: GETGLOBAL R14 K0       ; R14 := _T
314 [-]: GETTABLE  R14 R14 K51  ; R14 := R14[0xea9ef043]
315 [-]: MOVE      R15 R1       ; R15 := R1
316 [-]: MOVE      R16 R13      ; R16 := R13
317 [-]: CALL      R14 3 1      ; R14(R15,R16)
318 [-]: GETGLOBAL R14 K52      ; R14 := mButtons
319 [-]: GETGLOBAL R15 K53      ; R15 := mButtonIndices
320 [-]: GETTABLE  R15 R15 K54  ; R15 := R15["SuitAppearance"]
321 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
322 [-]: GETGLOBAL R15 K56      ; R15 := 0x7f5022cf
323 [-]: GETTABLE  R15 R15 K57  ; R15 := R15[0x3f3e4d12]
324 [-]: GETGLOBAL R16 K3       ; R16 := 0xae91e43b
325 [-]: SELF      R16 R16 K58  ; R17 := R16; R16 := R16[0x42b04007]
326 [-]: LOADK     R18 K59      ; R18 := "/Lotus/Language/Suits/KhoraKavatMode"
327 [-]: MOVE      R19 R13      ; R19 := R13
328 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
329 [-]: LOADBOOL  R19 1 0      ; R19 := true
330 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
331 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
332 [-]: SETTABLE  R14 K55 R15  ; R14["mLabel"] := R15
333 [-]: GETUPVAL  R14 U2       ; R14 := U2
334 [-]: CALL      R14 1 1      ; R14()
335 [-]: JMP       393          ; PC := 393
336 [-]: SELF      R14 R1 K9    ; R15 := R1; R14 := R1[0xf2deaf69]
337 [-]: GETGLOBAL R16 K64      ; R16 := 0x2ccd2c30
338 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
339 [-]: TEST      R14 0        ; if not R14 then PC := 355
340 [-]: JMP       355          ; PC := 355
341 [-]: GETGLOBAL R14 K0       ; R14 := _T
342 [-]: GETTABLE  R14 R14 K65  ; R14 := R14["RUNNER_SetDecoState"]
343 [-]: EQ        1 R14 K66    ; if R14 == nil then PC := 393
344 [-]: JMP       393          ; PC := 393
345 [-]: GETGLOBAL R14 K0       ; R14 := _T
346 [-]: GETTABLE  R14 R14 K67  ; R14 := R14[0x3ef5c227]
347 [-]: MOVE      R15 R0       ; R15 := R0
348 [-]: GETGLOBAL R16 K0       ; R16 := _T
349 [-]: GETTABLE  R16 R16 K68  ; R16 := R16[0x7fab9289]
350 [-]: MOVE      R17 R0       ; R17 := R0
351 [-]: CALL      R16 2 2      ; R16 := R16(R17)
352 [-]: NOT       R16 R16      ; R16 := not R16
353 [-]: CALL      R14 3 1      ; R14(R15,R16)
354 [-]: JMP       393          ; PC := 393
355 [-]: SELF      R14 R1 K9    ; R15 := R1; R14 := R1[0xf2deaf69]
356 [-]: GETGLOBAL R16 K69      ; R16 := 0x969b8384
357 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
358 [-]: TEST      R14 0        ; if not R14 then PC := 393
359 [-]: JMP       393          ; PC := 393
360 [-]: GETGLOBAL R14 K0       ; R14 := _T
361 [-]: GETTABLE  R14 R14 K70  ; R14 := R14["BROKEN_SetDecoVisibility"]
362 [-]: TEST      R14 0        ; if not R14 then PC := 393
363 [-]: JMP       393          ; PC := 393
364 [-]: GETGLOBAL R14 K0       ; R14 := _T
365 [-]: GETTABLE  R14 R14 K71  ; R14 := R14[0xb0420af9]
366 [-]: MOVE      R15 R0       ; R15 := R0
367 [-]: CALL      R14 2 2      ; R14 := R14(R15)
368 [-]: LOADK     R15 K72      ; R15 := "/Lotus/Language/Suits/BrokenFrameMode_Broken"
369 [-]: TEST      R14 0        ; if not R14 then PC := 372
370 [-]: JMP       372          ; PC := 372
371 [-]: LOADK     R15 K73      ; R15 := "/Lotus/Language/Suits/BrokenFrameMode_Unbroken"
372 [-]: GETGLOBAL R16 K52      ; R16 := mButtons
373 [-]: GETGLOBAL R17 K53      ; R17 := mButtonIndices
374 [-]: GETTABLE  R17 R17 K54  ; R17 := R17["SuitAppearance"]
375 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
376 [-]: GETGLOBAL R17 K56      ; R17 := 0x7f5022cf
377 [-]: GETTABLE  R17 R17 K57  ; R17 := R17[0x3f3e4d12]
378 [-]: GETGLOBAL R18 K3       ; R18 := 0xae91e43b
379 [-]: SELF      R18 R18 K58  ; R19 := R18; R18 := R18[0x42b04007]
380 [-]: MOVE      R20 R15      ; R20 := R15
381 [-]: LOADBOOL  R21 0 0      ; R21 := false
382 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
383 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
384 [-]: SETTABLE  R16 K55 R17  ; R16["mLabel"] := R17
385 [-]: GETGLOBAL R16 K0       ; R16 := _T
386 [-]: GETTABLE  R16 R16 K74  ; R16 := R16[0xf627ed0d]
387 [-]: MOVE      R17 R0       ; R17 := R0
388 [-]: NOT       R18 R14      ; R18 := not R14
389 [-]: LOADK     R19 0        ; R19 := 0.250000
390 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
391 [-]: GETUPVAL  R16 U2       ; R16 := U2
392 [-]: CALL      R16 1 1      ; R16()
393 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 13343
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x0c33ebb2]
  3 [-]: LOADK     R3 K2        ; R3 := "_root"
  4 [-]: LOADK     R4 K3        ; R4 := "suitRotationX"
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: GETTABLE  R5 R5 K4     ; R5 := R5[0x06d055f9]
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: LOADK     R7 K5        ; R7 := 0.400000
  9 [-]: LOADK     R8 0         ; R8 := 0.000000
 10 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: SETTABLE  R1 K6 R0     ; R1["MouseDown"] := R0
 14 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 13348
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPvpTeams
  2 [-]: GETGLOBAL R1 K0        ; R1 := mPvpTeams
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Current"]
  4 [-]: GETGLOBAL R2 K0        ; R2 := mPvpTeams
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Types"]
  6 [-]: LEN       R2 R2        ; R2 := # R2
  7 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
  8 [-]: ADD       R1 R1 K3     ; R1 := R1 + 1.000000
  9 [-]: SETTABLE  R0 K1 R1     ; R0["Current"] := R1
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
 11 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x42b04007]
 12 [-]: GETGLOBAL R2 K0        ; R2 := mPvpTeams
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Types"]
 14 [-]: GETGLOBAL R3 K0        ; R3 := mPvpTeams
 15 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Current"]
 16 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 17 [-]: LOADBOOL  R3 0 0       ; R3 := false
 18 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 19 [-]: GETGLOBAL R1 K6        ; R1 := mButtons
 20 [-]: GETGLOBAL R2 K7        ; R2 := mButtonIndices
 21 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["PvpTeam"]
 22 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 23 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x42b04007]
 25 [-]: LOADK     R4 K10       ; R4 := "/Lotus/Language/Menu/Loadout_Team"
 26 [-]: LOADBOOL  R5 0 0       ; R5 := false
 27 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 28 [-]: SETTABLE  R6 K11 R0    ; R6["TEAM_NAME"] := R0
 29 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 30 [-]: SETTABLE  R1 K9 R2     ; R1["mLabel"] := R2
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: CALL      R1 1 1       ; R1()
 33 [-]: GETUPVAL  R1 U1        ; R1 := U1
 34 [-]: LOADBOOL  R2 1 0       ; R2 := true
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 13357
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mLists
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mLoadOutList"]
  3 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xea061e98]
  4 [-]: CLOSURE   R2 0         ; R2 := closure(Function #207.1)
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETUPVAL  R0 U3        ; R0 := U3
  9 [-]: GETUPVAL  R0 U4        ; R0 := U4
 10 [-]: GETUPVAL  R0 U5        ; R0 := U5
 11 [-]: GETUPVAL  R0 U6        ; R0 := U6
 12 [-]: CALL      R0 3 1       ; R0(R1,R2)
 13 [-]: GETGLOBAL R0 K3        ; R0 := mTimerTable
 14 [-]: GETGLOBAL R1 K3        ; R1 := mTimerTable
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mTimerMgr"]
 16 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xbd2e96ea]
 17 [-]: LOADK     R3 1         ; R3 := 1.000000
 18 [-]: GETUPVAL  R4 U7        ; R4 := U7
 19 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 20 [-]: SETTABLE  R0 K4 R1     ; R0["mRedrawLoadOutTimerId"] := R1
 21 [-]: RETURN    R0 1         ; return 


; Function #207.1:
;
; Name:            
; Defined at line: 13360
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["LoadOutId"]
  2 [-]: EQ        1 R1 K2      ; if R1 == 0.000000 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: EQ        1 R1 K3      ; if R1 == 2.000000 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: EQ        1 R1 K4      ; if R1 == 1.000000 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: EQ        0 R1 K5      ; if R1 ~= 3.000000 then PC := 168
  9 [-]: JMP       168          ; PC := 168
 10 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 11 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["Type"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 168
 14 [-]: JMP       168          ; PC := 168
 15 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["EquippedItem"]
 16 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xba568eef]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 0         ; if not R2 then PC := 168
 19 [-]: JMP       168          ; PC := 168
 20 [-]: GETGLOBAL R2 K10       ; R2 := 0x34291f5c
 21 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0x397b920f]
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["EquippedItem"]
 23 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mExpiry"]
 24 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["sec"]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: LOADNIL   R3 R3        ; R3 := nil
 27 [-]: LE        0 R2 K2      ; if R2 > 0.000000 then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 30 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x42b04007]
 31 [-]: LOADK     R6 K16       ; R6 := "/Lotus/Language/Menu/Expired"
 32 [-]: LOADBOOL  R7 0 0       ; R7 := false
 33 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 34 [-]: MOVE      R3 R4        ; R3 := R4
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETUPVAL  R4 U0        ; R4 := U0
 37 [-]: GETTABLE  R4 R4 K17    ; R4 := R4[0x10e5bb7a]
 38 [-]: MOVE      R5 R2        ; R5 := R2
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: MOVE      R3 R4        ; R3 := R4
 41 [-]: GETGLOBAL R4 K19       ; R4 := Icons
 42 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["TIMER"]
 43 [-]: MOVE      R5 R3        ; R5 := R3
 44 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 45 [-]: SETTABLE  R0 K18 R4    ; R0["StatsParagraph"] := R4
 46 [-]: GETGLOBAL R4 K21       ; R4 := mLists
 47 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["mLoadOutList"]
 48 [-]: GETTABLE  R4 R4 K23    ; R4 := R4[0xb15e6aca]
 49 [-]: MOVE      R5 R0        ; R5 := R0
 50 [-]: CALL      R4 2 1       ; R4(R5)
 51 [-]: GETUPVAL  R4 U1        ; R4 := U1
 52 [-]: EQ        0 R4 R0      ; if R4 ~= R0 then PC := 168
 53 [-]: JMP       168          ; PC := 168
 54 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 55 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xf64b7262]
 56 [-]: GETUPVAL  R6 U1        ; R6 := U1
 57 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mClipName"]
 58 [-]: LOADK     R7 K26       ; R7 := "Back"
 59 [-]: LOADK     R8 13        ; R8 := 13.000000
 60 [-]: GETUPVAL  R9 U2        ; R9 := U2
 61 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["HEIGHT_SELECTED"]
 62 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 63 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 64 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xf64b7262]
 65 [-]: GETUPVAL  R6 U1        ; R6 := U1
 66 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mClipName"]
 67 [-]: LOADK     R7 K28       ; R7 := "LevelProgress"
 68 [-]: LOADK     R8 1         ; R8 := 1.000000
 69 [-]: GETUPVAL  R9 U2        ; R9 := U2
 70 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["HEIGHT_SELECTED"]
 71 [-]: MUL       R9 R9 K29    ; R9 := R9 * 0.500000
 72 [-]: SUB       R9 R9 K30    ; R9 := R9 - 5.000000
 73 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 74 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 75 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xf64b7262]
 76 [-]: GETUPVAL  R6 U1        ; R6 := U1
 77 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mClipName"]
 78 [-]: LOADK     R7 K26       ; R7 := "Back"
 79 [-]: LOADK     R8 13        ; R8 := 13.000000
 80 [-]: GETUPVAL  R9 U2        ; R9 := U2
 81 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["HEIGHT_SELECTED"]
 82 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 83 [-]: GETUPVAL  R4 U3        ; R4 := U3
 84 [-]: GETUPVAL  R5 U1        ; R5 := U1
 85 [-]: CALL      R4 2 1       ; R4(R5)
 86 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 87 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xf64b7262]
 88 [-]: GETUPVAL  R6 U1        ; R6 := U1
 89 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mClipName"]
 90 [-]: LOADK     R7 K31       ; R7 := "Label"
 91 [-]: LOADK     R8 76        ; R8 := 76.000000
 92 [-]: GETUPVAL  R9 U4        ; R9 := U4
 93 [-]: GETTABLE  R9 R9 K32    ; R9 := R9[0x06d055f9]
 94 [-]: GETUPVAL  R10 U5       ; R10 := U5
 95 [-]: GETUPVAL  R11 U6       ; R11 := U6
 96 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["SELECTING_PART"]
 97 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 100
100 [-]: LOADBOOL  R10 1 0      ; R10 := true
101 [-]: GETGLOBAL R11 K34      ; R11 := 0x0032441c
102 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["UIColor_White"]
103 [-]: GETGLOBAL R12 K34      ; R12 := 0x0032441c
104 [-]: GETTABLE  R12 R12 K36  ; R12 := R12["UIColor_Black"]
105 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
106 [-]: CALL      R4 0 1       ; R4(R5,...)
107 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
108 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xf64b7262]
109 [-]: GETUPVAL  R6 U1        ; R6 := U1
110 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mClipName"]
111 [-]: LOADK     R7 K31       ; R7 := "Label"
112 [-]: LOADK     R8 36        ; R8 := 36.000000
113 [-]: GETUPVAL  R9 U4        ; R9 := U4
114 [-]: GETTABLE  R9 R9 K32    ; R9 := R9[0x06d055f9]
115 [-]: GETUPVAL  R10 U5       ; R10 := U5
116 [-]: GETUPVAL  R11 U6       ; R11 := U6
117 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["SELECTING_PART"]
118 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 121
121 [-]: LOADBOOL  R10 1 0      ; R10 := true
122 [-]: GETUPVAL  R11 U1       ; R11 := U1
123 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["LabelColor"]
124 [-]: GETGLOBAL R12 K34      ; R12 := 0x0032441c
125 [-]: GETTABLE  R12 R12 K35  ; R12 := R12["UIColor_White"]
126 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
127 [-]: CALL      R4 0 1       ; R4(R5,...)
128 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
129 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xf64b7262]
130 [-]: GETUPVAL  R6 U1        ; R6 := U1
131 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mClipName"]
132 [-]: LOADK     R7 K38       ; R7 := "Stats"
133 [-]: LOADK     R8 36        ; R8 := 36.000000
134 [-]: GETUPVAL  R9 U4        ; R9 := U4
135 [-]: GETTABLE  R9 R9 K32    ; R9 := R9[0x06d055f9]
136 [-]: GETUPVAL  R10 U5       ; R10 := U5
137 [-]: GETUPVAL  R11 U6       ; R11 := U6
138 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["SELECTING_PART"]
139 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 142
142 [-]: LOADBOOL  R10 1 0      ; R10 := true
143 [-]: GETUPVAL  R11 U1       ; R11 := U1
144 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["LabelColor"]
145 [-]: GETGLOBAL R12 K34      ; R12 := 0x0032441c
146 [-]: GETTABLE  R12 R12 K35  ; R12 := R12["UIColor_White"]
147 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
148 [-]: CALL      R4 0 1       ; R4(R5,...)
149 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
150 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xf64b7262]
151 [-]: GETUPVAL  R6 U1        ; R6 := U1
152 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mClipName"]
153 [-]: LOADK     R7 K26       ; R7 := "Back"
154 [-]: LOADK     R8 10        ; R8 := 10.000000
155 [-]: GETUPVAL  R9 U4        ; R9 := U4
156 [-]: GETTABLE  R9 R9 K32    ; R9 := R9[0x06d055f9]
157 [-]: GETUPVAL  R10 U5       ; R10 := U5
158 [-]: GETUPVAL  R11 U6       ; R11 := U6
159 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["SELECTING_PART"]
160 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 163
161 [-]: JMP       163          ; PC := 163
162 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 163
163 [-]: LOADBOOL  R10 1 0      ; R10 := true
164 [-]: LOADK     R11 85       ; R11 := 85.000000
165 [-]: LOADK     R12 10       ; R12 := 10.000000
166 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
167 [-]: CALL      R4 0 1       ; R4(R5,...)
168 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 13397
; #Upvalues:       47
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x0c33ebb2]
  9 [-]: LOADK     R2 K4        ; R2 := "_root"
 10 [-]: LOADK     R3 K5        ; R3 := "suitRotationX"
 11 [-]: LOADK     R4 0         ; R4 := 0.000000
 12 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 13 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 14 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x1e5b5cfe]
 15 [-]: LOADK     R2 K7        ; R2 := "MenuPanel.LeftArrow"
 16 [-]: LOADK     R3 K8        ; R3 := "RollOverArrow"
 17 [-]: LOADK     R4 K9        ; R4 := "RollOutArrow"
 18 [-]: LOADK     R5 K10       ; R5 := "PressArrow"
 19 [-]: LOADNIL   R6 R6        ; R6 := nil
 20 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 21 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x1e5b5cfe]
 23 [-]: LOADK     R2 K11       ; R2 := "MenuPanel.RightArrow"
 24 [-]: LOADK     R3 K8        ; R3 := "RollOverArrow"
 25 [-]: LOADK     R4 K9        ; R4 := "RollOutArrow"
 26 [-]: LOADK     R5 K10       ; R5 := "PressArrow"
 27 [-]: LOADNIL   R6 R6        ; R6 := nil
 28 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 29 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 30 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x1e5b5cfe]
 31 [-]: LOADK     R2 K12       ; R2 := "MenuPanel.SelectLoadoutBtn"
 32 [-]: LOADK     R3 K8        ; R3 := "RollOverArrow"
 33 [-]: LOADK     R4 K9        ; R4 := "RollOutArrow"
 34 [-]: LOADK     R5 K13       ; R5 := "OpenLoadoutSelection"
 35 [-]: LOADNIL   R6 R6        ; R6 := nil
 36 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 37 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 38 [-]: SELF      R0 R0 K14    ; R1 := R0; R0 := R0[0x263a3cc2]
 39 [-]: GETGLOBAL R2 K15       ; R2 := 0x89326c93
 40 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xb4364067]
 41 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 42 [-]: CALL      R0 0 1       ; R0(R1,...)
 43 [-]: GETGLOBAL R0 K17       ; R0 := 0x34291f5c
 44 [-]: GETTABLE  R0 R0 K18    ; R0 := R0[0xa7a2e381]
 45 [-]: CALL      R0 1 2       ; R0 := R0()
 46 [-]: SETUPVAL  R0 U0        ; U82 := R0
 47 [-]: GETUPVAL  R0 U2        ; R0 := U2
 48 [-]: GETTABLE  R0 R0 K19    ; R0 := R0[0xb73d420f]
 49 [-]: CALL      R0 1 2       ; R0 := R0()
 50 [-]: SETUPVAL  R0 U1        ; U82 := R1
 51 [-]: GETUPVAL  R0 U0        ; R0 := U0
 52 [-]: TEST      R0 0         ; if not R0 then PC := 74
 53 [-]: JMP       74           ; PC := 74
 54 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
 55 [-]: SELF      R0 R0 K20    ; R1 := R0; R0 := R0[0x5f56eeab]
 56 [-]: LOADK     R2 K21       ; R2 := "MenuPanel.Label"
 57 [-]: LOADK     R3 41        ; R3 := 41.000000
 58 [-]: LOADK     R4 K22       ; R4 := "Arial Unicode MS"
 59 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 60 [-]: GETUPVAL  R0 U3        ; R0 := U3
 61 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 62 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0x91a24e4b]
 63 [-]: LOADK     R3 K21       ; R3 := "MenuPanel.Label"
 64 [-]: LOADK     R4 0         ; R4 := 0.000000
 65 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 66 [-]: SETTABLE  R0 K23 R1    ; R0["X"] := R1
 67 [-]: GETUPVAL  R0 U3        ; R0 := U3
 68 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 69 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0x91a24e4b]
 70 [-]: LOADK     R3 K21       ; R3 := "MenuPanel.Label"
 71 [-]: LOADK     R4 1         ; R4 := 1.000000
 72 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 73 [-]: SETTABLE  R0 K25 R1    ; R0["Y"] := R1
 74 [-]: GETGLOBAL R0 K15       ; R0 := 0x89326c93
 75 [-]: SELF      R0 R0 K26    ; R1 := R0; R0 := R0[0x46a0ebf5]
 76 [-]: GETUPVAL  R2 U4        ; R2 := U4
 77 [-]: GETTABLE  R2 R2 K27    ; R2 := R2["TELEPORT_TRIGGER"]
 78 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 79 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 80 [-]: MOVE      R2 R0        ; R2 := R0
 81 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 82 [-]: TEST      R1 1         ; if R1 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: SELF      R1 R0 K28    ; R2 := R0; R1 := R0[0xf4e253b6]
 85 [-]: CALL      R1 2 1       ; R1(R2)
 86 [-]: GETGLOBAL R1 K29       ; R1 := mLoaders
 87 [-]: GETUPVAL  R2 U5        ; R2 := U5
 88 [-]: CLOSURE   R3 0         ; R3 := closure(Function #208.1)
 89 [-]: GETUPVAL  R0 U6        ; R0 := U6
 90 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 91 [-]: SETTABLE  R1 K30 R2    ; R1["mSelectionLoader"] := R2
 92 [-]: GETGLOBAL R1 K29       ; R1 := mLoaders
 93 [-]: GETUPVAL  R2 U5        ; R2 := U5
 94 [-]: CLOSURE   R3 1         ; R3 := closure(Function #208.2)
 95 [-]: GETUPVAL  R0 U7        ; R0 := U7
 96 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 97 [-]: SETTABLE  R1 K31 R2    ; R1["mCosmeticsLoader"] := R2
 98 [-]: GETGLOBAL R1 K29       ; R1 := mLoaders
 99 [-]: GETUPVAL  R2 U5        ; R2 := U5
100 [-]: CLOSURE   R3 2         ; R3 := closure(Function #208.3)
101 [-]: GETUPVAL  R0 U8        ; R0 := U8
102 [-]: CALL      R2 2 2       ; R2 := R2(R3)
103 [-]: SETTABLE  R1 K32 R2    ; R1[0x659d451f] := R2
104 [-]: GETGLOBAL R1 K29       ; R1 := mLoaders
105 [-]: GETUPVAL  R2 U5        ; R2 := U5
106 [-]: CLOSURE   R3 3         ; R3 := closure(Function #208.4)
107 [-]: GETUPVAL  R0 U9        ; R0 := U9
108 [-]: GETUPVAL  R0 U10       ; R0 := U10
109 [-]: CALL      R2 2 2       ; R2 := R2(R3)
110 [-]: SETTABLE  R1 K33 R2    ; R1[0x0032441c] := R2
111 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
112 [-]: SELF      R1 R1 K34    ; R2 := R1; R1 := R1[0x824d113a]
113 [-]: LOADBOOL  R3 1 0       ; R3 := true
114 [-]: CALL      R1 3 1       ; R1(R2,R3)
115 [-]: LOADNIL   R1 R1        ; R1 := nil
116 [-]: GETGLOBAL R2 K15       ; R2 := 0x89326c93
117 [-]: SELF      R2 R2 K35    ; R3 := R2; R2 := R2[0x78298275]
118 [-]: CALL      R2 2 2       ; R2 := R2(R3)
119 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
120 [-]: MOVE      R4 R2        ; R4 := R2
121 [-]: CALL      R3 2 2       ; R3 := R3(R4)
122 [-]: TEST      R3 1         ; if R3 then PC := 127
123 [-]: JMP       127          ; PC := 127
124 [-]: SELF      R3 R2 K36    ; R4 := R2; R3 := R2[0xd1586535]
125 [-]: CALL      R3 2 2       ; R3 := R3(R4)
126 [-]: MOVE      R1 R3        ; R1 := R3
127 [-]: GETUPVAL  R3 U11       ; R3 := U11
128 [-]: GETTABLE  R3 R3 K38    ; R3 := R3[0x2a1108a9]
129 [-]: GETUPVAL  R4 U11       ; R4 := U11
130 [-]: GETTABLE  R4 R4 K39    ; R4 := R4[0x06d055f9]
131 [-]: GETGLOBAL R5 K40       ; R5 := 0xe7f2b02f
132 [-]: SELF      R5 R5 K41    ; R6 := R5; R5 := R5[0xca33534d]
133 [-]: CALL      R5 2 2       ; R5 := R5(R6)
134 [-]: LOADK     R6 K42       ; R6 := "ArsenalRelay"
135 [-]: LOADK     R7 K43       ; R7 := "Arsenal"
136 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
137 [-]: MOVE      R5 R1        ; R5 := R1
138 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
139 [-]: SETGLOBAL R3 K37       ; mArsenalConsole := R3
140 [-]: GETUPVAL  R3 U11       ; R3 := U11
141 [-]: GETTABLE  R3 R3 K38    ; R3 := R3[0x2a1108a9]
142 [-]: LOADK     R4 K44       ; R4 := "OnEnteredArsenal"
143 [-]: MOVE      R5 R1        ; R5 := R1
144 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
145 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
146 [-]: MOVE      R5 R3        ; R5 := R3
147 [-]: CALL      R4 2 2       ; R4 := R4(R5)
148 [-]: TEST      R4 1         ; if R4 then PC := 153
149 [-]: JMP       153          ; PC := 153
150 [-]: SELF      R4 R3 K45    ; R5 := R3; R4 := R3[0x8eb2112d]
151 [-]: LOADK     R6 K46       ; R6 := "Execute"
152 [-]: CALL      R4 3 1       ; R4(R5,R6)
153 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
154 [-]: SELF      R4 R4 K47    ; R5 := R4; R4 := R4[0xacedfbeb]
155 [-]: LOADK     R6 2         ; R6 := 2.000000
156 [-]: CALL      R4 3 1       ; R4(R5,R6)
157 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
158 [-]: SELF      R4 R4 K49    ; R5 := R4; R4 := R4[0xc6a10ab1]
159 [-]: LOADK     R6 0         ; R6 := 0.000000
160 [-]: CALL      R4 3 1       ; R4(R5,R6)
161 [-]: GETGLOBAL R4 K50       ; R4 := _T
162 [-]: SETTABLE  R4 K51 K52   ; R4["maximumSyndicateScarfIntensity"] := true
163 [-]: GETGLOBAL R4 K50       ; R4 := _T
164 [-]: GETTABLE  R4 R4 K53    ; R4 := R4["QuestProgressWaitingForUpgradesScreen"]
165 [-]: TEST      R4 0         ; if not R4 then PC := 171
166 [-]: JMP       171          ; PC := 171
167 [-]: GETGLOBAL R4 K54       ; R4 := 0xbe190284
168 [-]: SELF      R4 R4 K55    ; R5 := R4; R4 := R4[0xc02f2cb8]
169 [-]: LOADBOOL  R6 1 0       ; R6 := true
170 [-]: CALL      R4 3 1       ; R4(R5,R6)
171 [-]: GETGLOBAL R4 K56       ; R4 := 0x9ba7909f
172 [-]: SELF      R4 R4 K57    ; R5 := R4; R4 := R4[0xbcfb64ab]
173 [-]: GETGLOBAL R6 K58       ; R6 := 0x10179b0e
174 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
175 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
176 [-]: MOVE      R6 R4        ; R6 := R4
177 [-]: CALL      R5 2 2       ; R5 := R5(R6)
178 [-]: TEST      R5 1         ; if R5 then PC := 183
179 [-]: JMP       183          ; PC := 183
180 [-]: SELF      R5 R4 K59    ; R6 := R4; R5 := R4[0x41d3c627]
181 [-]: LOADBOOL  R7 1 0       ; R7 := true
182 [-]: CALL      R5 3 1       ; R5(R6,R7)
183 [-]: GETUPVAL  R5 U12       ; R5 := U12
184 [-]: GETUPVAL  R6 U13       ; R6 := U13
185 [-]: GETTABLE  R6 R6 K61    ; R6 := R6[0x5d10207d]
186 [-]: LOADK     R7 9         ; R7 := 9.000000
187 [-]: LOADBOOL  R8 1 0       ; R8 := true
188 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
189 [-]: SETTABLE  R5 K60 R6    ; R5["FloatingContent"] := R6
190 [-]: GETUPVAL  R5 U12       ; R5 := U12
191 [-]: GETUPVAL  R6 U13       ; R6 := U13
192 [-]: GETTABLE  R6 R6 K61    ; R6 := R6[0x5d10207d]
193 [-]: LOADK     R7 10        ; R7 := 10.000000
194 [-]: LOADBOOL  R8 1 0       ; R8 := true
195 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
196 [-]: SETTABLE  R5 K63 R6    ; R5["FloatingContentHighlight"] := R6
197 [-]: GETUPVAL  R5 U12       ; R5 := U12
198 [-]: GETUPVAL  R6 U13       ; R6 := U13
199 [-]: GETTABLE  R6 R6 K61    ; R6 := R6[0x5d10207d]
200 [-]: LOADK     R7 2         ; R7 := 2.000000
201 [-]: LOADBOOL  R8 1 0       ; R8 := true
202 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
203 [-]: SETTABLE  R5 K64 R6    ; R5["Background1"] := R6
204 [-]: GETGLOBAL R5 K65       ; R5 := Icons
205 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
206 [-]: SELF      R6 R6 K67    ; R7 := R6; R6 := R6[0x42b04007]
207 [-]: LOADK     R8 K68       ; R8 := "<REPUTATION_SMALL>"
208 [-]: LOADBOOL  R9 1 0       ; R9 := true
209 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
210 [-]: SETTABLE  R5 K66 R6    ; R5["REPUTATION"] := R6
211 [-]: GETGLOBAL R5 K65       ; R5 := Icons
212 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
213 [-]: SELF      R6 R6 K67    ; R7 := R6; R6 := R6[0x42b04007]
214 [-]: LOADK     R8 K70       ; R8 := "<PLATINUM_CREDITS>"
215 [-]: LOADBOOL  R9 1 0       ; R9 := true
216 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
217 [-]: SETTABLE  R5 K69 R6    ; R5["PLATINUM"] := R6
218 [-]: GETGLOBAL R5 K65       ; R5 := Icons
219 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
220 [-]: SELF      R6 R6 K67    ; R7 := R6; R6 := R6[0x42b04007]
221 [-]: LOADK     R8 K72       ; R8 := "<TIMER>"
222 [-]: LOADBOOL  R9 1 0       ; R9 := true
223 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
224 [-]: SETTABLE  R5 K71 R6    ; R5["TIMER"] := R6
225 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
226 [-]: GETGLOBAL R6 K37       ; R6 := mArsenalConsole
227 [-]: CALL      R5 2 2       ; R5 := R5(R6)
228 [-]: TEST      R5 1         ; if R5 then PC := 239
229 [-]: JMP       239          ; PC := 239
230 [-]: GETGLOBAL R5 K37       ; R5 := mArsenalConsole
231 [-]: SELF      R5 R5 K73    ; R6 := R5; R5 := R5[0xfe3be07a]
232 [-]: CALL      R5 2 2       ; R5 := R5(R6)
233 [-]: TEST      R5 0         ; if not R5 then PC := 239
234 [-]: JMP       239          ; PC := 239
235 [-]: GETGLOBAL R5 K37       ; R5 := mArsenalConsole
236 [-]: SELF      R5 R5 K74    ; R6 := R5; R5 := R5[0x19368051]
237 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
238 [-]: CALL      R5 3 1       ; R5(R6,R7)
239 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
240 [-]: SELF      R5 R5 K75    ; R6 := R5; R5 := R5[0x67bc869f]
241 [-]: LOADK     R7 K76       ; R7 := "StatContainer.Bg"
242 [-]: LOADK     R8 10        ; R8 := 10.000000
243 [-]: LOADK     R9 10        ; R9 := 10.000000
244 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
245 [-]: NEWTABLE  R5 0 23      ; R5 := {}
246 [-]: NEWTABLE  R6 0 5       ; R6 := {}
247 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
248 [-]: SETTABLE  R6 K81 K80   ; R6["LoadOutId"] := 0.000000
249 [-]: SETTABLE  R6 K82 K83   ; R6["StoreItemId"] := 3.000000
250 [-]: SETTABLE  R6 K84 K85   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Warframe"
251 [-]: SETTABLE  R6 K86 K87   ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_TennoLoadout"
252 [-]: SETTABLE  R5 K78 R6    ; R5["SUIT"] := R6
253 [-]: NEWTABLE  R6 0 4       ; R6 := {}
254 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
255 [-]: SETTABLE  R6 K81 K89   ; R6["LoadOutId"] := 2.000000
256 [-]: SETTABLE  R6 K82 K90   ; R6["StoreItemId"] := 1.000000
257 [-]: SETTABLE  R6 K84 K91   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_LongGun"
258 [-]: SETTABLE  R5 K88 R6    ; R5["PRIMARY"] := R6
259 [-]: NEWTABLE  R6 0 4       ; R6 := {}
260 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
261 [-]: SETTABLE  R6 K81 K90   ; R6["LoadOutId"] := 1.000000
262 [-]: SETTABLE  R6 K82 K80   ; R6["StoreItemId"] := 0.000000
263 [-]: SETTABLE  R6 K84 K93   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Pistol"
264 [-]: SETTABLE  R5 K92 R6    ; R5[0x3ed442a9] := R6
265 [-]: NEWTABLE  R6 0 4       ; R6 := {}
266 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
267 [-]: SETTABLE  R6 K81 K83   ; R6["LoadOutId"] := 3.000000
268 [-]: SETTABLE  R6 K82 K95   ; R6["StoreItemId"] := 5.000000
269 [-]: SETTABLE  R6 K84 K96   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Melee"
270 [-]: SETTABLE  R5 K94 R6    ; R5["MELEE"] := R6
271 [-]: NEWTABLE  R6 0 6       ; R6 := {}
272 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
273 [-]: SETTABLE  R6 K98 K52   ; R6["FocusEntry"] := true
274 [-]: SETTABLE  R6 K84 K99   ; R6["Title"] := "/Lotus/Language/Menu/Focus"
275 [-]: SETTABLE  R6 K100 K89  ; R6["IconScale"] := 2.000000
276 [-]: SETTABLE  R6 K101 K102 ; R6["IconXScale"] := -0.600000
277 [-]: GETUPVAL  R7 U14       ; R7 := U14
278 [-]: SETTABLE  R6 K103 R7   ; R6[0x8f270b0e] := R7
279 [-]: SETTABLE  R5 K97 R6    ; R5["FOCUS"] := R6
280 [-]: NEWTABLE  R6 0 4       ; R6 := {}
281 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
282 [-]: SETTABLE  R6 K81 K95   ; R6["LoadOutId"] := 5.000000
283 [-]: SETTABLE  R6 K82 K105  ; R6["StoreItemId"] := 38.000000
284 [-]: SETTABLE  R6 K84 K106  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
285 [-]: SETTABLE  R5 K104 R6   ; R5["SPECIAL_A"] := R6
286 [-]: NEWTABLE  R6 0 4       ; R6 := {}
287 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
288 [-]: SETTABLE  R6 K81 K108  ; R6["LoadOutId"] := 6.000000
289 [-]: SETTABLE  R6 K82 K105  ; R6["StoreItemId"] := 38.000000
290 [-]: SETTABLE  R6 K84 K106  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
291 [-]: SETTABLE  R5 K107 R6   ; R5["SPECIAL_B"] := R6
292 [-]: NEWTABLE  R6 0 5       ; R6 := {}
293 [-]: SETTABLE  R6 K79 K110  ; R6["LoadOutType"] := 7.000000
294 [-]: SETTABLE  R6 K81 K80   ; R6["LoadOutId"] := 0.000000
295 [-]: SETTABLE  R6 K82 K111  ; R6["StoreItemId"] := 47.000000
296 [-]: SETTABLE  R6 K84 K112  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_DataKnife"
297 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
298 [-]: SETTABLE  R5 K109 R6   ; R5["DATA_KNIFE"] := R6
299 [-]: NEWTABLE  R6 0 5       ; R6 := {}
300 [-]: GETGLOBAL R7 K115      ; R7 := 0x7f5022cf
301 [-]: GETTABLE  R7 R7 K116   ; R7 := R7[0x3f3e4d12]
302 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
303 [-]: SELF      R8 R8 K67    ; R9 := R8; R8 := R8[0x42b04007]
304 [-]: LOADK     R10 K117     ; R10 := "/Lotus/Language/BardQuest/BardQuestSequencer"
305 [-]: LOADBOOL  R11 0 0      ; R11 := false
306 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
307 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
308 [-]: SETTABLE  R6 K84 R7    ; R6["Title"] := R7
309 [-]: GETGLOBAL R7 K119      ; R7 := 0xcc921830
310 [-]: SETTABLE  R6 K118 R7   ; R6[0x05eeb9db] := R7
311 [-]: GETUPVAL  R7 U15       ; R7 := U15
312 [-]: SETTABLE  R6 K103 R7   ; R6[0x8f270b0e] := R7
313 [-]: SETTABLE  R6 K120 K52  ; R6["MandachordEntry"] := true
314 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
315 [-]: SETTABLE  R5 K114 R6   ; R5["MANDACHORD"] := R6
316 [-]: NEWTABLE  R6 0 5       ; R6 := {}
317 [-]: SETTABLE  R6 K79 K90   ; R6["LoadOutType"] := 1.000000
318 [-]: SETTABLE  R6 K81 K80   ; R6["LoadOutId"] := 0.000000
319 [-]: SETTABLE  R6 K82 K122  ; R6["StoreItemId"] := 15.000000
320 [-]: SETTABLE  R6 K84 K123  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Companion"
321 [-]: SETTABLE  R6 K86 K124  ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_CompanionLoadout"
322 [-]: SETTABLE  R5 K121 R6   ; R5["PET"] := R6
323 [-]: NEWTABLE  R6 0 5       ; R6 := {}
324 [-]: SETTABLE  R6 K79 K90   ; R6["LoadOutType"] := 1.000000
325 [-]: SETTABLE  R6 K81 K89   ; R6["LoadOutId"] := 2.000000
326 [-]: SETTABLE  R6 K82 K126  ; R6["StoreItemId"] := 16.000000
327 [-]: SETTABLE  R6 K84 K127  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SentinelWeapon"
328 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
329 [-]: SETTABLE  R5 K125 R6   ; R5["PET_WEAPON"] := R6
330 [-]: NEWTABLE  R6 0 5       ; R6 := {}
331 [-]: SETTABLE  R6 K84 K129  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Consumables"
332 [-]: GETGLOBAL R7 K130      ; R7 := 0x12bbae18
333 [-]: SETTABLE  R6 K118 R7   ; R6[0x05eeb9db] := R7
334 [-]: GETUPVAL  R7 U16       ; R7 := U16
335 [-]: SETTABLE  R6 K103 R7   ; R6[0x8f270b0e] := R7
336 [-]: SETTABLE  R6 K131 K52  ; R6["ConsumablesEntry"] := true
337 [-]: SETTABLE  R6 K86 K129  ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_Consumables"
338 [-]: SETTABLE  R5 K128 R6   ; R5["CONSUMABLES"] := R6
339 [-]: NEWTABLE  R6 0 5       ; R6 := {}
340 [-]: SETTABLE  R6 K84 K133  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Emotes"
341 [-]: GETGLOBAL R7 K134      ; R7 := 0x1ecc3e46
342 [-]: SETTABLE  R6 K118 R7   ; R6[0x05eeb9db] := R7
343 [-]: GETUPVAL  R7 U17       ; R7 := U17
344 [-]: SETTABLE  R6 K103 R7   ; R6[0x8f270b0e] := R7
345 [-]: SETTABLE  R6 K135 K52  ; R6["EmotesEntry"] := true
346 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
347 [-]: SETTABLE  R5 K132 R6   ; R5[0x9e3d3434] := R6
348 [-]: NEWTABLE  R6 0 5       ; R6 := {}
349 [-]: SETTABLE  R6 K79 K83   ; R6["LoadOutType"] := 3.000000
350 [-]: SETTABLE  R6 K81 K80   ; R6["LoadOutId"] := 0.000000
351 [-]: SETTABLE  R6 K82 K83   ; R6["StoreItemId"] := 3.000000
352 [-]: SETTABLE  R6 K84 K85   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Warframe"
353 [-]: SETTABLE  R6 K86 K87   ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_TennoLoadout"
354 [-]: SETTABLE  R5 K136 R6   ; R5[0xed4e0128] := R6
355 [-]: NEWTABLE  R6 0 4       ; R6 := {}
356 [-]: SETTABLE  R6 K79 K83   ; R6["LoadOutType"] := 3.000000
357 [-]: SETTABLE  R6 K81 K89   ; R6["LoadOutId"] := 2.000000
358 [-]: SETTABLE  R6 K82 K90   ; R6["StoreItemId"] := 1.000000
359 [-]: SETTABLE  R6 K84 K91   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_LongGun"
360 [-]: SETTABLE  R5 K137 R6   ; R5["PVP_PRIMARY"] := R6
361 [-]: NEWTABLE  R6 0 4       ; R6 := {}
362 [-]: SETTABLE  R6 K79 K83   ; R6["LoadOutType"] := 3.000000
363 [-]: SETTABLE  R6 K81 K90   ; R6["LoadOutId"] := 1.000000
364 [-]: SETTABLE  R6 K82 K80   ; R6["StoreItemId"] := 0.000000
365 [-]: SETTABLE  R6 K84 K93   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Pistol"
366 [-]: SETTABLE  R5 K138 R6   ; R5["PVP_SECONDARY"] := R6
367 [-]: NEWTABLE  R6 0 4       ; R6 := {}
368 [-]: SETTABLE  R6 K79 K83   ; R6["LoadOutType"] := 3.000000
369 [-]: SETTABLE  R6 K81 K83   ; R6["LoadOutId"] := 3.000000
370 [-]: SETTABLE  R6 K82 K95   ; R6["StoreItemId"] := 5.000000
371 [-]: SETTABLE  R6 K84 K96   ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Melee"
372 [-]: SETTABLE  R5 K139 R6   ; R5[0x200054f6] := R6
373 [-]: NEWTABLE  R6 0 4       ; R6 := {}
374 [-]: SETTABLE  R6 K79 K83   ; R6["LoadOutType"] := 3.000000
375 [-]: SETTABLE  R6 K81 K95   ; R6["LoadOutId"] := 5.000000
376 [-]: SETTABLE  R6 K82 K105  ; R6["StoreItemId"] := 38.000000
377 [-]: SETTABLE  R6 K84 K106  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
378 [-]: SETTABLE  R5 K140 R6   ; R5[0x2d3d0773] := R6
379 [-]: NEWTABLE  R6 0 5       ; R6 := {}
380 [-]: SETTABLE  R6 K79 K83   ; R6["LoadOutType"] := 3.000000
381 [-]: SETTABLE  R6 K81 K108  ; R6["LoadOutId"] := 6.000000
382 [-]: SETTABLE  R6 K82 K105  ; R6["StoreItemId"] := 38.000000
383 [-]: SETTABLE  R6 K84 K106  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
384 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
385 [-]: SETTABLE  R5 K141 R6   ; R5[0xc1b70f65] := R6
386 [-]: NEWTABLE  R6 0 7       ; R6 := {}
387 [-]: SETTABLE  R6 K79 K143  ; R6["LoadOutType"] := 4.000000
388 [-]: SETTABLE  R6 K81 K83   ; R6["LoadOutId"] := 3.000000
389 [-]: SETTABLE  R6 K82 K144  ; R6["StoreItemId"] := 33.000000
390 [-]: SETTABLE  R6 K84 K145  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_LunaroScoop"
391 [-]: SETTABLE  R6 K86 K146  ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_Lunaro"
392 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
393 [-]: SETTABLE  R6 K147 K52  ; R6["Scoop"] := true
394 [-]: SETTABLE  R5 K142 R6   ; R5["PVP_SCOOP"] := R6
395 [-]: NEWTABLE  R6 0 6       ; R6 := {}
396 [-]: SETTABLE  R6 K84 K133  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Emotes"
397 [-]: GETGLOBAL R7 K134      ; R7 := 0x1ecc3e46
398 [-]: SETTABLE  R6 K118 R7   ; R6[0x05eeb9db] := R7
399 [-]: GETUPVAL  R7 U17       ; R7 := U17
400 [-]: SETTABLE  R6 K103 R7   ; R6[0x8f270b0e] := R7
401 [-]: SETTABLE  R6 K135 K52  ; R6["EmotesEntry"] := true
402 [-]: SETTABLE  R6 K86 K129  ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_Consumables"
403 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
404 [-]: SETTABLE  R5 K148 R6   ; R5[0xc14d48af] := R6
405 [-]: NEWTABLE  R6 0 5       ; R6 := {}
406 [-]: SETTABLE  R6 K79 K89   ; R6["LoadOutType"] := 2.000000
407 [-]: SETTABLE  R6 K81 K80   ; R6["LoadOutId"] := 0.000000
408 [-]: SETTABLE  R6 K82 K150  ; R6["StoreItemId"] := 27.000000
409 [-]: SETTABLE  R6 K84 K151  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Archwing"
410 [-]: SETTABLE  R6 K86 K87   ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_TennoLoadout"
411 [-]: SETTABLE  R5 K149 R6   ; R5["ARCHWING"] := R6
412 [-]: NEWTABLE  R6 0 4       ; R6 := {}
413 [-]: SETTABLE  R6 K79 K89   ; R6["LoadOutType"] := 2.000000
414 [-]: SETTABLE  R6 K81 K89   ; R6["LoadOutId"] := 2.000000
415 [-]: SETTABLE  R6 K82 K153  ; R6["StoreItemId"] := 28.000000
416 [-]: SETTABLE  R6 K84 K154  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceGun"
417 [-]: SETTABLE  R5 K152 R6   ; R5["ARCHGUN"] := R6
418 [-]: NEWTABLE  R6 0 5       ; R6 := {}
419 [-]: SETTABLE  R6 K79 K89   ; R6["LoadOutType"] := 2.000000
420 [-]: SETTABLE  R6 K81 K83   ; R6["LoadOutId"] := 3.000000
421 [-]: SETTABLE  R6 K82 K156  ; R6["StoreItemId"] := 29.000000
422 [-]: SETTABLE  R6 K84 K157  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceMelee"
423 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
424 [-]: SETTABLE  R5 K155 R6   ; R5["ARCHMELEE"] := R6
425 [-]: NEWTABLE  R6 0 6       ; R6 := {}
426 [-]: SETTABLE  R6 K79 K80   ; R6["LoadOutType"] := 0.000000
427 [-]: SETTABLE  R6 K81 K143  ; R6["LoadOutId"] := 4.000000
428 [-]: SETTABLE  R6 K82 K153  ; R6["StoreItemId"] := 28.000000
429 [-]: SETTABLE  R6 K84 K154  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceGun"
430 [-]: SETTABLE  R6 K86 K159  ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_HeavyWeapon"
431 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
432 [-]: SETTABLE  R5 K158 R6   ; R5["HEAVY_GUN"] := R6
433 [-]: NEWTABLE  R6 0 6       ; R6 := {}
434 [-]: SETTABLE  R6 K79 K108  ; R6["LoadOutType"] := 6.000000
435 [-]: GETUPVAL  R7 U18       ; R7 := U18
436 [-]: GETTABLE  R7 R7 K161   ; R7 := R7["KDriveSlot"]
437 [-]: SETTABLE  R6 K81 R7    ; R6["LoadOutId"] := R7
438 [-]: SETTABLE  R6 K82 K162  ; R6["StoreItemId"] := 41.000000
439 [-]: SETTABLE  R6 K84 K163  ; R6["Title"] := "/Lotus/Language/Items/HoverboardSummonBondiName"
440 [-]: SETTABLE  R6 K86 K164  ; R6["TopTitle"] := "/Lotus/Language/Hoverboards/Hoverboard_SingularUpper"
441 [-]: SETTABLE  R6 K113 K52  ; R6["HasBottomLine"] := true
442 [-]: SETTABLE  R5 K160 R6   ; R5["KDRIVE"] := R6
443 [-]: NEWTABLE  R6 0 5       ; R6 := {}
444 [-]: SETTABLE  R6 K79 K166  ; R6["LoadOutType"] := 8.000000
445 [-]: SETTABLE  R6 K81 K80   ; R6["LoadOutId"] := 0.000000
446 [-]: SETTABLE  R6 K82 K167  ; R6["StoreItemId"] := 48.000000
447 [-]: SETTABLE  R6 K84 K168  ; R6["Title"] := "/Lotus/Language/Necromech/MechCategoryName"
448 [-]: SETTABLE  R6 K86 K168  ; R6["TopTitle"] := "/Lotus/Language/Necromech/MechCategoryName"
449 [-]: SETTABLE  R5 K165 R6   ; R5["MECH_SUIT"] := R6
450 [-]: NEWTABLE  R6 0 4       ; R6 := {}
451 [-]: SETTABLE  R6 K79 K166  ; R6["LoadOutType"] := 8.000000
452 [-]: SETTABLE  R6 K81 K143  ; R6["LoadOutId"] := 4.000000
453 [-]: SETTABLE  R6 K82 K153  ; R6["StoreItemId"] := 28.000000
454 [-]: SETTABLE  R6 K84 K154  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceGun"
455 [-]: SETTABLE  R5 K169 R6   ; R5["MECH_GUN"] := R6
456 [-]: NEWTABLE  R6 0 4       ; R6 := {}
457 [-]: SETTABLE  R6 K79 K166  ; R6["LoadOutType"] := 8.000000
458 [-]: SETTABLE  R6 K81 K95   ; R6["LoadOutId"] := 5.000000
459 [-]: SETTABLE  R6 K82 K105  ; R6["StoreItemId"] := 38.000000
460 [-]: SETTABLE  R6 K84 K106  ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
461 [-]: SETTABLE  R5 K170 R6   ; R5["MECH_SPECIAL_A"] := R6
462 [-]: SETGLOBAL R5 K77       ; LOADOUT_SLOTS := R5
463 [-]: GETGLOBAL R5 K171      ; R5 := 0x2d0fad09
464 [-]: LOADK     R6 K172      ; R6 := "EE.Interface.AnchorMgr"
465 [-]: CALL      R5 2 2       ; R5 := R5(R6)
466 [-]: GETTABLE  R6 R5 K173   ; R6 := R5[0xae6791ba]
467 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
468 [-]: CALL      R6 2 2       ; R6 := R6(R7)
469 [-]: SETUPVAL  R6 U19       ; U82 := R19
470 [-]: GETUPVAL  R6 U19       ; R6 := U19
471 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
472 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
473 [-]: LOADK     R9 K175      ; R9 := "LinkBtn"
474 [-]: NEWTABLE  R10 1 0      ; R10 := {}
475 [-]: GETUPVAL  R11 U19      ; R11 := U19
476 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
477 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
478 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
479 [-]: GETUPVAL  R6 U19       ; R6 := U19
480 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
481 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
482 [-]: LOADK     R9 K177      ; R9 := "CapturaBtn"
483 [-]: NEWTABLE  R10 1 0      ; R10 := {}
484 [-]: GETUPVAL  R11 U19      ; R11 := U19
485 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
486 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
487 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
488 [-]: GETUPVAL  R6 U19       ; R6 := U19
489 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
490 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
491 [-]: LOADK     R9 K178      ; R9 := "ClipLinkBtn"
492 [-]: NEWTABLE  R10 1 0      ; R10 := {}
493 [-]: GETUPVAL  R11 U19      ; R11 := U19
494 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
495 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
496 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
497 [-]: GETUPVAL  R6 U19       ; R6 := U19
498 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
499 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
500 [-]: LOADK     R9 K179      ; R9 := "CosmeticDesc"
501 [-]: NEWTABLE  R10 1 0      ; R10 := {}
502 [-]: GETUPVAL  R11 U19      ; R11 := U19
503 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
504 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
505 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
506 [-]: GETUPVAL  R6 U19       ; R6 := U19
507 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
508 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
509 [-]: LOADK     R9 K180      ; R9 := "Ability1"
510 [-]: NEWTABLE  R10 1 0      ; R10 := {}
511 [-]: GETUPVAL  R11 U19      ; R11 := U19
512 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
513 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
514 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
515 [-]: GETUPVAL  R6 U19       ; R6 := U19
516 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
517 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
518 [-]: LOADK     R9 K181      ; R9 := "Ability2"
519 [-]: NEWTABLE  R10 1 0      ; R10 := {}
520 [-]: GETUPVAL  R11 U19      ; R11 := U19
521 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
522 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
523 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
524 [-]: GETUPVAL  R6 U19       ; R6 := U19
525 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
526 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
527 [-]: LOADK     R9 K182      ; R9 := "Ability3"
528 [-]: NEWTABLE  R10 1 0      ; R10 := {}
529 [-]: GETUPVAL  R11 U19      ; R11 := U19
530 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
531 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
532 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
533 [-]: GETUPVAL  R6 U19       ; R6 := U19
534 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
535 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
536 [-]: LOADK     R9 K183      ; R9 := "Ability4"
537 [-]: NEWTABLE  R10 1 0      ; R10 := {}
538 [-]: GETUPVAL  R11 U19      ; R11 := U19
539 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
540 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
541 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
542 [-]: GETUPVAL  R6 U19       ; R6 := U19
543 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
544 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
545 [-]: LOADK     R9 K184      ; R9 := "EquippedTitle"
546 [-]: NEWTABLE  R10 1 0      ; R10 := {}
547 [-]: GETUPVAL  R11 U19      ; R11 := U19
548 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
549 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
550 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
551 [-]: GETUPVAL  R6 U19       ; R6 := U19
552 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
553 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
554 [-]: LOADK     R9 K185      ; R9 := "StatContainer"
555 [-]: NEWTABLE  R10 1 0      ; R10 := {}
556 [-]: GETUPVAL  R11 U19      ; R11 := U19
557 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
558 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
559 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
560 [-]: GETUPVAL  R6 U19       ; R6 := U19
561 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
562 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
563 [-]: LOADK     R9 K186      ; R9 := "RightFade"
564 [-]: NEWTABLE  R10 1 0      ; R10 := {}
565 [-]: GETUPVAL  R11 U19      ; R11 := U19
566 [-]: GETTABLE  R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
567 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
568 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
569 [-]: GETUPVAL  R6 U19       ; R6 := U19
570 [-]: SELF      R6 R6 K174   ; R7 := R6; R6 := R6[0x20ff29f7]
571 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
572 [-]: LOADK     R9 K187      ; R9 := "LeftFade"
573 [-]: NEWTABLE  R10 1 0      ; R10 := {}
574 [-]: GETUPVAL  R11 U19      ; R11 := U19
575 [-]: GETTABLE  R11 R11 K188 ; R11 := R11["ANCHOR_H_LEFT"]
576 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
577 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
578 [-]: GETUPVAL  R6 U19       ; R6 := U19
579 [-]: SELF      R6 R6 K189   ; R7 := R6; R6 := R6[0xfaa69527]
580 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
581 [-]: SELF      R8 R8 K190   ; R9 := R8; R8 := R8[0x6b837788]
582 [-]: CALL      R8 2 2       ; R8 := R8(R9)
583 [-]: GETGLOBAL R9 K2        ; R9 := 0xae91e43b
584 [-]: SELF      R9 R9 K191   ; R10 := R9; R9 := R9[0xaf9fda9f]
585 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
586 [-]: CALL      R6 0 1       ; R6(R7,...)
587 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
588 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x0c33ebb2]
589 [-]: LOADK     R8 K180      ; R8 := "Ability1"
590 [-]: LOADK     R9 K192      ; R9 := "noMenuSelection"
591 [-]: LOADBOOL  R10 1 0      ; R10 := true
592 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
593 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
594 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x0c33ebb2]
595 [-]: LOADK     R8 K181      ; R8 := "Ability2"
596 [-]: LOADK     R9 K192      ; R9 := "noMenuSelection"
597 [-]: LOADBOOL  R10 1 0      ; R10 := true
598 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
599 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
600 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x0c33ebb2]
601 [-]: LOADK     R8 K182      ; R8 := "Ability3"
602 [-]: LOADK     R9 K192      ; R9 := "noMenuSelection"
603 [-]: LOADBOOL  R10 1 0      ; R10 := true
604 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
605 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
606 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x0c33ebb2]
607 [-]: LOADK     R8 K183      ; R8 := "Ability4"
608 [-]: LOADK     R9 K192      ; R9 := "noMenuSelection"
609 [-]: LOADBOOL  R10 1 0      ; R10 := true
610 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
611 [-]: GETGLOBAL R6 K171      ; R6 := 0x2d0fad09
612 [-]: LOADK     R7 K193      ; R7 := "Lotus.Interface.Libs.TimerMgr"
613 [-]: CALL      R6 2 2       ; R6 := R6(R7)
614 [-]: GETGLOBAL R7 K194      ; R7 := mTimerTable
615 [-]: GETTABLE  R8 R6 K196   ; R8 := R6[0xde474187]
616 [-]: CALL      R8 1 2       ; R8 := R8()
617 [-]: SETTABLE  R7 K195 R8   ; R7["mTimerMgr"] := R8
618 [-]: GETGLOBAL R7 K197      ; R7 := 0x119fdfe2
619 [-]: SELF      R7 R7 K198   ; R8 := R7; R7 := R7[0x830eea67]
620 [-]: GETGLOBAL R9 K62       ; R9 := 0x6c97a788
621 [-]: GETTABLE  R9 R9 K199   ; R9 := R9["VISIBILITY_CENTER"]
622 [-]: LOADK     R10 K200     ; R10 := 0.560000
623 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
624 [-]: GETGLOBAL R7 K197      ; R7 := 0x119fdfe2
625 [-]: SELF      R7 R7 K198   ; R8 := R7; R7 := R7[0x830eea67]
626 [-]: GETGLOBAL R9 K62       ; R9 := 0x6c97a788
627 [-]: GETTABLE  R9 R9 K201   ; R9 := R9["VISIBILITY_SIZE"]
628 [-]: LOADK     R10 K202     ; R10 := 0.525000
629 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
630 [-]: GETUPVAL  R7 U18       ; R7 := U18
631 [-]: GETGLOBAL R8 K2        ; R8 := 0xae91e43b
632 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8[0x91a24e4b]
633 [-]: LOADK     R10 K179     ; R10 := "CosmeticDesc"
634 [-]: LOADK     R11 12       ; R11 := 12.000000
635 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
636 [-]: SETTABLE  R7 K203 R8   ; R7["CosmeticDescOrigWidth"] := R8
637 [-]: GETGLOBAL R7 K2        ; R7 := 0xae91e43b
638 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7[0x5f56eeab]
639 [-]: LOADK     R9 K179      ; R9 := "CosmeticDesc"
640 [-]: LOADK     R10 29       ; R10 := 29.000000
641 [-]: LOADK     R11 K204     ; R11 := ""
642 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
643 [-]: GETGLOBAL R7 K206      ; R7 := 0x76ea806b
644 [-]: SELF      R7 R7 K207   ; R8 := R7; R7 := R7[0x3f3ae64c]
645 [-]: LOADK     R9 0         ; R9 := 0.000000
646 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
647 [-]: SETGLOBAL R7 K205      ; mPlayerProfile := R7
648 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
649 [-]: GETGLOBAL R8 K205      ; R8 := mPlayerProfile
650 [-]: CALL      R7 2 2       ; R7 := R7(R8)
651 [-]: TEST      R7 1         ; if R7 then PC := 701
652 [-]: JMP       701          ; PC := 701
653 [-]: GETUPVAL  R7 U20       ; R7 := U20
654 [-]: GETGLOBAL R8 K209      ; R8 := 0x5bced4c4
655 [-]: GETTABLE  R8 R8 K210   ; R8 := R8[0x55f27c30]
656 [-]: GETGLOBAL R9 K1        ; R9 := 0x25d99d89
657 [-]: SELF      R9 R9 K211   ; R10 := R9; R9 := R9[0xefee6c91]
658 [-]: CALL      R9 2 2       ; R9 := R9(R10)
659 [-]: DIV       R9 R9 K89    ; R9 := R9 / 2.000000
660 [-]: CALL      R8 2 2       ; R8 := R8(R9)
661 [-]: ADD       R8 R8 K90    ; R8 := R8 + 1.000000
662 [-]: GETGLOBAL R9 K1        ; R9 := 0x25d99d89
663 [-]: SELF      R9 R9 K212   ; R10 := R9; R9 := R9[0x25a6e75e]
664 [-]: CALL      R9 2 2       ; R9 := R9(R10)
665 [-]: SELF      R9 R9 K213   ; R10 := R9; R9 := R9[0xa64e07df]
666 [-]: LOADK     R11 6        ; R11 := 6.000000
667 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
668 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
669 [-]: SETTABLE  R7 K208 R8   ; R7["PVE_LOADOUTS"] := R8
670 [-]: GETGLOBAL R7 K50       ; R7 := _T
671 [-]: GETTABLE  R7 R7 K215   ; R7 := R7["ArsenalPvPOnlyReturnConsole"]
672 [-]: EQ        0 R7 K216    ; if R7 ~= nil then PC := 698
673 [-]: JMP       698          ; PC := 698
674 [-]: GETGLOBAL R7 K1        ; R7 := 0x25d99d89
675 [-]: SELF      R7 R7 K212   ; R8 := R7; R7 := R7[0x25a6e75e]
676 [-]: CALL      R7 2 2       ; R7 := R7(R8)
677 [-]: SELF      R7 R7 K217   ; R8 := R7; R7 := R7[0x4bb8609a]
678 [-]: CALL      R7 2 2       ; R7 := R7(R8)
679 [-]: LEN       R7 R7        ; R7 := # R7
680 [-]: LE        0 K90 R7     ; if 1.000000 > R7 then PC := 698
681 [-]: JMP       698          ; PC := 698
682 [-]: GETGLOBAL R7 K1        ; R7 := 0x25d99d89
683 [-]: SELF      R7 R7 K212   ; R8 := R7; R7 := R7[0x25a6e75e]
684 [-]: CALL      R7 2 2       ; R7 := R7(R8)
685 [-]: SELF      R7 R7 K218   ; R8 := R7; R7 := R7[0x6f7b67d7]
686 [-]: CALL      R7 2 2       ; R7 := R7(R8)
687 [-]: LEN       R7 R7        ; R7 := # R7
688 [-]: LE        0 K90 R7     ; if 1.000000 > R7 then PC := 698
689 [-]: JMP       698          ; PC := 698
690 [-]: GETGLOBAL R7 K1        ; R7 := 0x25d99d89
691 [-]: SELF      R7 R7 K212   ; R8 := R7; R7 := R7[0x25a6e75e]
692 [-]: CALL      R7 2 2       ; R7 := R7(R8)
693 [-]: SELF      R7 R7 K219   ; R8 := R7; R7 := R7[0x3218c3b0]
694 [-]: CALL      R7 2 2       ; R7 := R7(R8)
695 [-]: LEN       R7 R7        ; R7 := # R7
696 [-]: LE        1 K90 R7     ; if 1.000000 <= R7 then PC := 699
697 [-]: JMP       699          ; PC := 699
698 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 699
699 [-]: LOADBOOL  R7 1 0       ; R7 := true
700 [-]: SETGLOBAL R7 K214      ; mShowVehicles := R7
701 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
702 [-]: GETGLOBAL R8 K220      ; R8 := 0xb2fe2999
703 [-]: CALL      R7 2 2       ; R7 := R7(R8)
704 [-]: TEST      R7 1         ; if R7 then PC := 712
705 [-]: JMP       712          ; PC := 712
706 [-]: GETUPVAL  R7 U20       ; R7 := U20
707 [-]: GETUPVAL  R8 U2        ; R8 := U2
708 [-]: GETTABLE  R8 R8 K222   ; R8 := R8[0x790d34ac]
709 [-]: GETGLOBAL R9 K220      ; R9 := 0xb2fe2999
710 [-]: CALL      R8 2 2       ; R8 := R8(R9)
711 [-]: SETTABLE  R7 K221 R8   ; R7["PVP_LOADOUTS"] := R8
712 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
713 [-]: GETGLOBAL R8 K50       ; R8 := _T
714 [-]: GETTABLE  R8 R8 K223   ; R8 := R8["MenuSuitAvatar"]
715 [-]: CALL      R7 2 2       ; R7 := R7(R8)
716 [-]: TEST      R7 0         ; if not R7 then PC := 723
717 [-]: JMP       723          ; PC := 723
718 [-]: GETGLOBAL R7 K50       ; R7 := _T
719 [-]: GETUPVAL  R8 U2        ; R8 := U2
720 [-]: GETTABLE  R8 R8 K224   ; R8 := R8[0x6ef45ebc]
721 [-]: CALL      R8 1 2       ; R8 := R8()
722 [-]: SETTABLE  R7 K223 R8   ; R7["MenuSuitAvatar"] := R8
723 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
724 [-]: GETGLOBAL R8 K50       ; R8 := _T
725 [-]: GETTABLE  R8 R8 K225   ; R8 := R8["MenuSentinel"]
726 [-]: CALL      R7 2 2       ; R7 := R7(R8)
727 [-]: TEST      R7 1         ; if R7 then PC := 733
728 [-]: JMP       733          ; PC := 733
729 [-]: GETGLOBAL R7 K50       ; R7 := _T
730 [-]: GETTABLE  R7 R7 K226   ; R7 := R7["InSimulacrum"]
731 [-]: TEST      R7 1         ; if R7 then PC := 771
732 [-]: JMP       771          ; PC := 771
733 [-]: GETGLOBAL R7 K50       ; R7 := _T
734 [-]: GETGLOBAL R8 K50       ; R8 := _T
735 [-]: GETTABLE  R8 R8 K223   ; R8 := R8["MenuSuitAvatar"]
736 [-]: SELF      R8 R8 K227   ; R9 := R8; R8 := R8[0xde321e6f]
737 [-]: CALL      R8 2 2       ; R8 := R8(R9)
738 [-]: SELF      R8 R8 K228   ; R9 := R8; R8 := R8[0x2676deee]
739 [-]: CALL      R8 2 2       ; R8 := R8(R9)
740 [-]: SETTABLE  R7 K225 R8   ; R7["MenuSentinel"] := R8
741 [-]: LOADK     R7 0         ; R7 := 0.000000
742 [-]: GETGLOBAL R8 K1        ; R8 := 0x25d99d89
743 [-]: SELF      R8 R8 K229   ; R9 := R8; R8 := R8[0x3c6b0324]
744 [-]: CALL      R8 2 2       ; R8 := R8(R9)
745 [-]: TEST      R8 0         ; if not R8 then PC := 749
746 [-]: JMP       749          ; PC := 749
747 [-]: LOADK     R7 1         ; R7 := 1.000000
748 [-]: JMP       755          ; PC := 755
749 [-]: GETGLOBAL R8 K1        ; R8 := 0x25d99d89
750 [-]: SELF      R8 R8 K230   ; R9 := R8; R8 := R8[0x9f91f49d]
751 [-]: CALL      R8 2 2       ; R8 := R8(R9)
752 [-]: TEST      R8 0         ; if not R8 then PC := 755
753 [-]: JMP       755          ; PC := 755
754 [-]: LOADK     R7 3         ; R7 := 3.000000
755 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
756 [-]: GETGLOBAL R9 K50       ; R9 := _T
757 [-]: GETTABLE  R9 R9 K225   ; R9 := R9["MenuSentinel"]
758 [-]: CALL      R8 2 2       ; R8 := R8(R9)
759 [-]: TEST      R8 0         ; if not R8 then PC := 771
760 [-]: JMP       771          ; PC := 771
761 [-]: GETUPVAL  R8 U21       ; R8 := U21
762 [-]: MOVE      R9 R7        ; R9 := R7
763 [-]: CALL      R8 2 2       ; R8 := R8(R9)
764 [-]: TEST      R8 0         ; if not R8 then PC := 771
765 [-]: JMP       771          ; PC := 771
766 [-]: GETGLOBAL R8 K50       ; R8 := _T
767 [-]: GETUPVAL  R9 U21       ; R9 := U21
768 [-]: MOVE      R10 R7       ; R10 := R7
769 [-]: CALL      R9 2 2       ; R9 := R9(R10)
770 [-]: SETTABLE  R8 K225 R9   ; R8["MenuSentinel"] := R9
771 [-]: MOVE      R8 R2        ; R8 := R2
772 [-]: SELF      R9 R8 K231   ; R10 := R8; R9 := R8[0xf2deaf69]
773 [-]: GETGLOBAL R11 K232     ; R11 := gLotusOperatorAvatarType
774 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
775 [-]: TEST      R9 1         ; if R9 then PC := 782
776 [-]: JMP       782          ; PC := 782
777 [-]: SELF      R9 R8 K231   ; R10 := R8; R9 := R8[0xf2deaf69]
778 [-]: GETUPVAL  R11 U22      ; R11 := U22
779 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
780 [-]: TEST      R9 0         ; if not R9 then PC := 792
781 [-]: JMP       792          ; PC := 792
782 [-]: SELF      R9 R8 K233   ; R10 := R8; R9 := R8[0x5b89142c]
783 [-]: CALL      R9 2 2       ; R9 := R9(R10)
784 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
785 [-]: MOVE      R11 R9       ; R11 := R9
786 [-]: CALL      R10 2 2      ; R10 := R10(R11)
787 [-]: TEST      R10 1        ; if R10 then PC := 792
788 [-]: JMP       792          ; PC := 792
789 [-]: SELF      R10 R9 K234  ; R11 := R9; R10 := R9[0xa534c3ac]
790 [-]: CALL      R10 2 2      ; R10 := R10(R11)
791 [-]: MOVE      R8 R10       ; R8 := R10
792 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
793 [-]: MOVE      R11 R8       ; R11 := R8
794 [-]: CALL      R10 2 2      ; R10 := R10(R11)
795 [-]: TEST      R10 1        ; if R10 then PC := 825
796 [-]: JMP       825          ; PC := 825
797 [-]: SELF      R10 R8 K227  ; R11 := R8; R10 := R8[0xde321e6f]
798 [-]: CALL      R10 2 2      ; R10 := R10(R11)
799 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
800 [-]: MOVE      R12 R10      ; R12 := R10
801 [-]: CALL      R11 2 2      ; R11 := R11(R12)
802 [-]: TEST      R11 1        ; if R11 then PC := 825
803 [-]: JMP       825          ; PC := 825
804 [-]: SELF      R11 R10 K231 ; R12 := R10; R11 := R10[0xf2deaf69]
805 [-]: GETGLOBAL R13 K235     ; R13 := gLotusInventoryControllerType
806 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
807 [-]: TEST      R11 0        ; if not R11 then PC := 825
808 [-]: JMP       825          ; PC := 825
809 [-]: SELF      R11 R10 K236 ; R12 := R10; R11 := R10[0xf7d48ee0]
810 [-]: CALL      R11 2 2      ; R11 := R11(R12)
811 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
812 [-]: MOVE      R13 R11      ; R13 := R11
813 [-]: CALL      R12 2 2      ; R12 := R12(R13)
814 [-]: TEST      R12 1        ; if R12 then PC := 818
815 [-]: JMP       818          ; PC := 818
816 [-]: SELF      R12 R11 K237 ; R13 := R11; R12 := R11[0x707cd1f0]
817 [-]: CALL      R12 2 1      ; R12(R13)
818 [-]: GETGLOBAL R12 K50      ; R12 := _T
819 [-]: GETTABLE  R12 R12 K226 ; R12 := R12["InSimulacrum"]
820 [-]: TEST      R12 0        ; if not R12 then PC := 825
821 [-]: JMP       825          ; PC := 825
822 [-]: SELF      R12 R10 K238 ; R13 := R10; R12 := R10[0x0b5ec5b5]
823 [-]: LOADBOOL  R14 1 0      ; R14 := true
824 [-]: CALL      R12 3 1      ; R12(R13,R14)
825 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
826 [-]: GETGLOBAL R13 K54      ; R13 := 0xbe190284
827 [-]: CALL      R12 2 2      ; R12 := R12(R13)
828 [-]: TEST      R12 1        ; if R12 then PC := 924
829 [-]: JMP       924          ; PC := 924
830 [-]: GETGLOBAL R12 K15      ; R12 := 0x89326c93
831 [-]: SELF      R12 R12 K239 ; R13 := R12; R12 := R12[0xfb64e76c]
832 [-]: CALL      R12 2 2      ; R12 := R12(R13)
833 [-]: SELF      R13 R12 K234 ; R14 := R12; R13 := R12[0xa534c3ac]
834 [-]: CALL      R13 2 2      ; R13 := R13(R14)
835 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
836 [-]: MOVE      R15 R13      ; R15 := R13
837 [-]: CALL      R14 2 2      ; R14 := R14(R15)
838 [-]: TEST      R14 0        ; if not R14 then PC := 843
839 [-]: JMP       843          ; PC := 843
840 [-]: SELF      R14 R12 K240 ; R15 := R12; R14 := R12[0xbb610e5b]
841 [-]: CALL      R14 2 2      ; R14 := R14(R15)
842 [-]: MOVE      R13 R14      ; R13 := R14
843 [-]: GETGLOBAL R14 K50      ; R14 := _T
844 [-]: GETTABLE  R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
845 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 924
846 [-]: JMP       924          ; PC := 924
847 [-]: GETGLOBAL R14 K15      ; R14 := 0x89326c93
848 [-]: SELF      R14 R14 K241 ; R15 := R14; R14 := R14[0x18d05d30]
849 [-]: CALL      R14 2 2      ; R14 := R14(R15)
850 [-]: TEST      R14 0        ; if not R14 then PC := 858
851 [-]: JMP       858          ; PC := 858
852 [-]: GETGLOBAL R14 K50      ; R14 := _T
853 [-]: GETTABLE  R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
854 [-]: SELF      R14 R14 K242 ; R15 := R14; R14 := R14[0x2abc8ecd]
855 [-]: LOADBOOL  R16 0 0      ; R16 := false
856 [-]: CALL      R14 3 1      ; R14(R15,R16)
857 [-]: JMP       864          ; PC := 864
858 [-]: GETGLOBAL R14 K50      ; R14 := _T
859 [-]: GETTABLE  R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
860 [-]: SELF      R14 R14 K243 ; R15 := R14; R14 := R14[0x768274d6]
861 [-]: LOADBOOL  R16 0 0      ; R16 := false
862 [-]: LOADBOOL  R17 1 0      ; R17 := true
863 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
864 [-]: GETGLOBAL R14 K50      ; R14 := _T
865 [-]: GETTABLE  R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
866 [-]: SELF      R14 R14 K244 ; R15 := R14; R14 := R14[0x808b79e6]
867 [-]: CALL      R14 2 2      ; R14 := R14(R15)
868 [-]: GETGLOBAL R15 K50      ; R15 := _T
869 [-]: GETGLOBAL R16 K15      ; R16 := 0x89326c93
870 [-]: SELF      R16 R16 K245 ; R17 := R16; R16 := R16[0x05909209]
871 [-]: GETGLOBAL R18 K246     ; R18 := 0xc94196df
872 [-]: GETGLOBAL R19 K50      ; R19 := _T
873 [-]: GETTABLE  R19 R19 K223 ; R19 := R19["MenuSuitAvatar"]
874 [-]: SELF      R19 R19 K36  ; R20 := R19; R19 := R19[0xd1586535]
875 [-]: CALL      R19 2 2      ; R19 := R19(R20)
876 [-]: GETGLOBAL R20 K50      ; R20 := _T
877 [-]: GETTABLE  R20 R20 K223 ; R20 := R20["MenuSuitAvatar"]
878 [-]: SELF      R20 R20 K247 ; R21 := R20; R20 := R20[0xcb3851b8]
879 [-]: CALL      R20 2 2      ; R20 := R20(R21)
880 [-]: MOVE      R21 R12      ; R21 := R12
881 [-]: MOVE      R22 R12      ; R22 := R12
882 [-]: GETUPVAL  R23 U23      ; R23 := U23
883 [-]: CALL      R23 1 0      ; R23,... := R23()
884 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
885 [-]: SETTABLE  R15 K223 R16 ; R15["MenuSuitAvatar"] := R16
886 [-]: GETGLOBAL R15 K50      ; R15 := _T
887 [-]: GETTABLE  R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
888 [-]: SELF      R15 R15 K248 ; R16 := R15; R15 := R15[0xf04f9558]
889 [-]: MOVE      R17 R12      ; R17 := R12
890 [-]: CALL      R15 3 1      ; R15(R16,R17)
891 [-]: GETGLOBAL R15 K50      ; R15 := _T
892 [-]: GETTABLE  R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
893 [-]: SELF      R15 R15 K243 ; R16 := R15; R15 := R15[0x768274d6]
894 [-]: LOADBOOL  R17 0 0      ; R17 := false
895 [-]: LOADBOOL  R18 1 0      ; R18 := true
896 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
897 [-]: GETGLOBAL R15 K50      ; R15 := _T
898 [-]: GETTABLE  R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
899 [-]: SELF      R15 R15 K249 ; R16 := R15; R15 := R15[0x0cca925a]
900 [-]: MOVE      R17 R14      ; R17 := R14
901 [-]: CALL      R15 3 1      ; R15(R16,R17)
902 [-]: GETGLOBAL R15 K50      ; R15 := _T
903 [-]: GETTABLE  R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
904 [-]: SELF      R15 R15 K250 ; R16 := R15; R15 := R15[0xd749da12]
905 [-]: LOADBOOL  R17 0 0      ; R17 := false
906 [-]: CALL      R15 3 1      ; R15(R16,R17)
907 [-]: GETGLOBAL R15 K50      ; R15 := _T
908 [-]: GETTABLE  R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
909 [-]: SELF      R15 R15 K227 ; R16 := R15; R15 := R15[0xde321e6f]
910 [-]: CALL      R15 2 2      ; R15 := R15(R16)
911 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
912 [-]: MOVE      R17 R15      ; R17 := R15
913 [-]: CALL      R16 2 2      ; R16 := R16(R17)
914 [-]: TEST      R16 1        ; if R16 then PC := 924
915 [-]: JMP       924          ; PC := 924
916 [-]: SELF      R16 R15 K231 ; R17 := R15; R16 := R15[0xf2deaf69]
917 [-]: GETGLOBAL R18 K235     ; R18 := gLotusInventoryControllerType
918 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
919 [-]: TEST      R16 0        ; if not R16 then PC := 924
920 [-]: JMP       924          ; PC := 924
921 [-]: SELF      R16 R15 K251 ; R17 := R15; R16 := R15[0x6df65c49]
922 [-]: LOADBOOL  R18 1 0      ; R18 := true
923 [-]: CALL      R16 3 1      ; R16(R17,R18)
924 [-]: GETGLOBAL R16 K50      ; R16 := _T
925 [-]: GETTABLE  R16 R16 K223 ; R16 := R16["MenuSuitAvatar"]
926 [-]: SELF      R16 R16 K252 ; R17 := R16; R16 := R16[0xb2532845]
927 [-]: GETGLOBAL R18 K253     ; R18 := 0x0469f296
928 [-]: LOADK     R19 K254     ; R19 := "IDLE"
929 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
930 [-]: CALL      R16 0 1      ; R16(R17,...)
931 [-]: GETGLOBAL R16 K50      ; R16 := _T
932 [-]: GETTABLE  R16 R16 K223 ; R16 := R16["MenuSuitAvatar"]
933 [-]: SELF      R16 R16 K255 ; R17 := R16; R16 := R16[0xeb332d30]
934 [-]: CALL      R16 2 2      ; R16 := R16(R17)
935 [-]: TEST      R16 0        ; if not R16 then PC := 946
936 [-]: JMP       946          ; PC := 946
937 [-]: GETGLOBAL R16 K54      ; R16 := 0xbe190284
938 [-]: LOADK     R18 K256     ; R18 := true
939 [-]: SELF      R16 R16 R18  ; R17 := R16; R16 := R16[R18]
940 [-]: CALL      R16 2 2      ; R16 := R16(R17)
941 [-]: LOADK     R19 K257     ; R19 := true
942 [-]: SELF      R17 R16 R19  ; R18 := R16; R17 := R16[R19]
943 [-]: LOADK     R19 K258     ; R19 := "ToggleVendor"
944 [-]: LOADK     R20 K204     ; R20 := ""
945 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
946 [-]: GETGLOBAL R17 K50      ; R17 := _T
947 [-]: LOADK     R18 K259     ; R18 := "LongGunSlotSwapped"
948 [-]: LOADBOOL  R19 0 0      ; R19 := false
949 [-]: SETTABLE  R17 R18 R19  ; R17[R18] := R19
950 [-]: GETGLOBAL R17 K50      ; R17 := _T
951 [-]: LOADK     R18 K260     ; R18 := "MeleeSlotSwapped"
952 [-]: LOADBOOL  R19 0 0      ; R19 := false
953 [-]: SETTABLE  R17 R18 R19  ; R17[R18] := R19
954 [-]: GETGLOBAL R17 K50      ; R17 := _T
955 [-]: GETTABLE  R17 R17 K223 ; R17 := R17["MenuSuitAvatar"]
956 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
957 [-]: MOVE      R19 R17      ; R19 := R17
958 [-]: CALL      R18 2 2      ; R18 := R18(R19)
959 [-]: TEST      R18 1        ; if R18 then PC := 973
960 [-]: JMP       973          ; PC := 973
961 [-]: LOADK     R20 K261     ; R20 := true
962 [-]: SELF      R18 R17 R20  ; R19 := R17; R18 := R17[R20]
963 [-]: LOADBOOL  R20 0 0      ; R20 := false
964 [-]: CALL      R18 3 1      ; R18(R19,R20)
965 [-]: LOADK     R20 K262     ; R20 := true
966 [-]: SELF      R18 R17 R20  ; R19 := R17; R18 := R17[R20]
967 [-]: LOADBOOL  R20 1 0      ; R20 := true
968 [-]: CALL      R18 3 1      ; R18(R19,R20)
969 [-]: LOADK     R20 K263     ; R20 := true
970 [-]: SELF      R18 R17 R20  ; R19 := R17; R18 := R17[R20]
971 [-]: LOADNIL   R20 R20      ; R20 := nil
972 [-]: CALL      R18 3 1      ; R18(R19,R20)
973 [-]: GETGLOBAL R18 K50      ; R18 := _T
974 [-]: LOADK     R19 K264     ; R19 := "DEFAULT_SUIT_ROTATION"
975 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
976 [-]: LOADNIL   R19 R19      ; R19 := nil
977 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 985
978 [-]: JMP       985          ; PC := 985
979 [-]: GETGLOBAL R18 K50      ; R18 := _T
980 [-]: LOADK     R19 K264     ; R19 := "DEFAULT_SUIT_ROTATION"
981 [-]: GETUPVAL  R20 U18      ; R20 := U18
982 [-]: LOADK     R21 K265     ; R21 := "DefaultSuitRotationOffset"
983 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
984 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
985 [-]: GETGLOBAL R18 K50      ; R18 := _T
986 [-]: LOADK     R19 K266     ; R19 := "SENTINEL_DEFAULT_ROTATION"
987 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
988 [-]: LOADNIL   R19 R19      ; R19 := nil
989 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 997
990 [-]: JMP       997          ; PC := 997
991 [-]: GETGLOBAL R18 K50      ; R18 := _T
992 [-]: LOADK     R19 K266     ; R19 := "SENTINEL_DEFAULT_ROTATION"
993 [-]: GETUPVAL  R20 U18      ; R20 := U18
994 [-]: LOADK     R21 K267     ; R21 := "DefaultSentinelRotationOffset"
995 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
996 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
997 [-]: GETGLOBAL R18 K50      ; R18 := _T
998 [-]: LOADK     R19 K268     ; R19 := "ARCHWING_DEFAULT_ROTATION"
999 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
1000 [-]: LOADNIL   R19 R19      ; R19 := nil
1001 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 1022
1002 [-]: JMP       1022         ; PC := 1022
1003 [-]: GETUPVAL  R18 U2       ; R18 := U2
1004 [-]: LOADK     R19 K269     ; R19 := true
1005 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
1006 [-]: CALL      R18 1 2      ; R18 := R18()
1007 [-]: TEST      R18 0        ; if not R18 then PC := 1016
1008 [-]: JMP       1016         ; PC := 1016
1009 [-]: GETGLOBAL R18 K50      ; R18 := _T
1010 [-]: LOADK     R19 K268     ; R19 := "ARCHWING_DEFAULT_ROTATION"
1011 [-]: GETUPVAL  R20 U18      ; R20 := U18
1012 [-]: LOADK     R21 K265     ; R21 := "DefaultSuitRotationOffset"
1013 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
1014 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
1015 [-]: JMP       1022         ; PC := 1022
1016 [-]: GETGLOBAL R18 K50      ; R18 := _T
1017 [-]: LOADK     R19 K268     ; R19 := "ARCHWING_DEFAULT_ROTATION"
1018 [-]: GETUPVAL  R20 U18      ; R20 := U18
1019 [-]: LOADK     R21 K270     ; R21 := "DefaultArchwingRotationOffset"
1020 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
1021 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
1022 [-]: GETGLOBAL R18 K50      ; R18 := _T
1023 [-]: LOADK     R19 K271     ; R19 := "suitTable"
1024 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
1025 [-]: LOADNIL   R19 R19      ; R19 := nil
1026 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 1032
1027 [-]: JMP       1032         ; PC := 1032
1028 [-]: GETGLOBAL R18 K50      ; R18 := _T
1029 [-]: LOADK     R19 K271     ; R19 := "suitTable"
1030 [-]: NEWTABLE  R20 0 0      ; R20 := {}
1031 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
1032 [-]: GETGLOBAL R18 K50      ; R18 := _T
1033 [-]: LOADK     R19 K271     ; R19 := "suitTable"
1034 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
1035 [-]: LOADK     R19 K272     ; R19 := "desiredRot"
1036 [-]: GETGLOBAL R20 K50      ; R20 := _T
1037 [-]: LOADK     R21 K264     ; R21 := "DEFAULT_SUIT_ROTATION"
1038 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
1039 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
1040 [-]: GETGLOBAL R18 K50      ; R18 := _T
1041 [-]: LOADK     R19 K271     ; R19 := "suitTable"
1042 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
1043 [-]: LOADK     R19 K273     ; R19 := "lerpRot"
1044 [-]: GETGLOBAL R20 K50      ; R20 := _T
1045 [-]: LOADK     R21 K271     ; R21 := "suitTable"
1046 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
1047 [-]: LOADK     R21 K272     ; R21 := "desiredRot"
1048 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
1049 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
1050 [-]: GETGLOBAL R18 K50      ; R18 := _T
1051 [-]: LOADK     R19 K271     ; R19 := "suitTable"
1052 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
1053 [-]: LOADK     R19 K274     ; R19 := "lerpHead"
1054 [-]: GETGLOBAL R20 K275     ; R20 := 0xb73d420f
1055 [-]: CALL      R20 1 2      ; R20 := R20()
1056 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
1057 [-]: GETGLOBAL R18 K50      ; R18 := _T
1058 [-]: GETTABLE  R18 R18 K223 ; R18 := R18["MenuSuitAvatar"]
1059 [-]: LOADK     R20 K276     ; R20 := true
1060 [-]: SELF      R18 R18 R20  ; R19 := R18; R18 := R18[R20]
1061 [-]: GETGLOBAL R20 K253     ; R20 := 0x0469f296
1062 [-]: LOADK     R21 K277     ; R21 := "GAME_C1_HEAD1"
1063 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1064 [-]: GETGLOBAL R21 K275     ; R21 := 0xb73d420f
1065 [-]: CALL      R21 1 0      ; R21,... := R21()
1066 [-]: CALL      R18 0 1      ; R18(R19,...)
1067 [-]: GETGLOBAL R18 K50      ; R18 := _T
1068 [-]: GETTABLE  R18 R18 K223 ; R18 := R18["MenuSuitAvatar"]
1069 [-]: LOADK     R20 K276     ; R20 := true
1070 [-]: SELF      R18 R18 R20  ; R19 := R18; R18 := R18[R20]
1071 [-]: GETGLOBAL R20 K253     ; R20 := 0x0469f296
1072 [-]: LOADK     R21 K278     ; R21 := "GAME_C1_NECK2"
1073 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1074 [-]: GETGLOBAL R21 K275     ; R21 := 0xb73d420f
1075 [-]: CALL      R21 1 0      ; R21,... := R21()
1076 [-]: CALL      R18 0 1      ; R18(R19,...)
1077 [-]: GETGLOBAL R18 K50      ; R18 := _T
1078 [-]: LOADK     R19 K279     ; R19 := "domeState"
1079 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
1080 [-]: TEST      R18 0        ; if not R18 then PC := 1089
1081 [-]: JMP       1089         ; PC := 1089
1082 [-]: GETGLOBAL R18 K50      ; R18 := _T
1083 [-]: LOADK     R19 K279     ; R19 := "domeState"
10