; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  200

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["MATCHMAKING_QUICKMATCH_GAMEMODE"] := 9.000000
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: SETTABLE  R0 K3 K4     ; R0["MATCHMAKING_PRIVATE_GAMEMODE"] := 3.000000
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: SETTABLE  R0 K5 K6     ; R0["MATCHMAKING_INVITE_ONLY_GAMEMODE"] := 4.000000
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: SETTABLE  R0 K7 K8     ; R0["MATCHMAKING_OFFLINE_GAMEMODE"] := 0.000000
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: SETTABLE  R0 K9 K10    ; R0["MATCHMAKING_PVP_GAMEMODE"] := 6.000000
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: SETTABLE  R0 K11 K8    ; R0["MENU_SUIT_AVATAR_PROGRESS"] := 0.000000
 13 [-]: GETGLOBAL R0 K0        ; R0 := _T
 14 [-]: SETTABLE  R0 K12 K13   ; R0["SHOW_LOCKED_ALERTS"] := false
 15 [-]: GETGLOBAL R0 K0        ; R0 := _T
 16 [-]: SETTABLE  R0 K14 K15   ; R0["gSelectedRegionId"] := -1.000000
 17 [-]: GETGLOBAL R0 K0        ; R0 := _T
 18 [-]: SETTABLE  R0 K16 K17   ; R0["gSelectedNodeName"] := ""
 19 [-]: GETGLOBAL R0 K0        ; R0 := _T
 20 [-]: SETTABLE  R0 K18 K19   ; R0["gShowingLoginScreen"] := true
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 23 [-]: SETTABLE  R0 K20 R1    ; R0["CachedAlerts"] := R1
 24 [-]: GETGLOBAL R0 K0        ; R0 := _T
 25 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 26 [-]: SETTABLE  R0 K21 R1    ; R0["CachedInvasionInfo"] := R1
 27 [-]: GETGLOBAL R0 K0        ; R0 := _T
 28 [-]: SETTABLE  R0 K22 K23   ; R0["CachedConstructionProjects"] := nil
 29 [-]: GETGLOBAL R0 K0        ; R0 := _T
 30 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 31 [-]: SETTABLE  R0 K24 R1    ; R0["CachedSkullNodes"] := R1
 32 [-]: GETGLOBAL R0 K0        ; R0 := _T
 33 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 34 [-]: SETTABLE  R0 K25 R1    ; R0["CachedRegionStatus"] := R1
 35 [-]: GETGLOBAL R0 K0        ; R0 := _T
 36 [-]: SETTABLE  R0 K26 K23   ; R0["CachedFlashSales"] := nil
 37 [-]: GETGLOBAL R0 K0        ; R0 := _T
 38 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 39 [-]: SETTABLE  R0 K27 R1    ; R0["CachedVoidTraders"] := R1
 40 [-]: GETGLOBAL R0 K0        ; R0 := _T
 41 [-]: SETTABLE  R0 K28 K23   ; R0["CachedTennoAvatar"] := nil
 42 [-]: GETGLOBAL R0 K0        ; R0 := _T
 43 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 44 [-]: SETTABLE  R0 K29 R1    ; R0["CachedSyndicateMissions"] := R1
 45 [-]: GETGLOBAL R0 K0        ; R0 := _T
 46 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 47 [-]: SETTABLE  R0 K30 R1    ; R0["CachedNodesPendingDestruction"] := R1
 48 [-]: GETGLOBAL R0 K0        ; R0 := _T
 49 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 50 [-]: SETTABLE  R0 K31 R1    ; R0["CachedSortieMissions"] := R1
 51 [-]: GETGLOBAL R0 K0        ; R0 := _T
 52 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 53 [-]: SETTABLE  R0 K32 R1    ; R0["CachedLiteSortieMissions"] := R1
 54 [-]: GETGLOBAL R0 K0        ; R0 := _T
 55 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 56 [-]: SETTABLE  R0 K33 R1    ; R0["CachedActiveMissions"] := R1
 57 [-]: GETGLOBAL R0 K0        ; R0 := _T
 58 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 59 [-]: SETTABLE  R0 K34 R1    ; R0["CachedGhostTowerMissions"] := R1
 60 [-]: GETGLOBAL R0 K0        ; R0 := _T
 61 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 62 [-]: SETTABLE  R0 K35 R1    ; R0["CachedNemesisMissions"] := R1
 63 [-]: GETGLOBAL R0 K0        ; R0 := _T
 64 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 65 [-]: SETTABLE  R0 K36 R1    ; R0["CachedEliteAlertMissions"] := R1
 66 [-]: GETGLOBAL R0 K0        ; R0 := _T
 67 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 68 [-]: SETTABLE  R0 K37 R1    ; R0["CachedHardModeDailyMissions"] := R1
 69 [-]: GETGLOBAL R0 K0        ; R0 := _T
 70 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 71 [-]: SETTABLE  R0 K38 R1    ; R0["CachedVoidStormMissions"] := R1
 72 [-]: LOADK     R0 6         ; R0 := 6.000000
 73 [-]: NEWTABLE  R1 0 2       ; R1 := {}
 74 [-]: GETGLOBAL R2 K40       ; R2 := 0xb009bbc6
 75 [-]: LOADK     R3 K41       ; R3 := "/Lotus/Types/Game/MissionDecks/KuvaMissionRewards/KuvaSiphonRewards"
 76 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 77 [-]: SETTABLE  R1 K39 R2    ; R1["easy"] := R2
 78 [-]: GETGLOBAL R2 K40       ; R2 := 0xb009bbc6
 79 [-]: LOADK     R3 K43       ; R3 := "/Lotus/Types/Game/MissionDecks/KuvaMissionRewards/KuvaSiphonFloodRewards"
 80 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 81 [-]: SETTABLE  R1 K42 R2    ; R1["hard"] := R2
 82 [-]: NEWTABLE  R2 0 4       ; R2 := {}
 83 [-]: GETGLOBAL R3 K45       ; R3 := 0x0469f296
 84 [-]: LOADK     R4 K46       ; R4 := "TeshinHardModeInvite"
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: SETTABLE  R2 K44 R3    ; R2["NodeSymbol"] := R3
 87 [-]: SETTABLE  R2 K47 K15   ; R2["InviteQueued"] := -1.000000
 88 [-]: GETGLOBAL R3 K49       ; R3 := 0x7ed0a956
 89 [-]: LOADK     R4 K50       ; R4 := "/Lotus/Sounds/Dialog/HardMode/Teshin/DTeshinGeneric0240Teshin"
 90 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 91 [-]: SETTABLE  R2 K48 R3    ; R2["Transmission"] := R3
 92 [-]: GETGLOBAL R3 K40       ; R3 := 0xb009bbc6
 93 [-]: LOADK     R4 K52       ; R4 := "/Lotus/Types/Items/MiscItems/SteelEssence"
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: SETTABLE  R2 K51 R3    ; R2["DailyMissionReward"] := R3
 96 [-]: LOADK     R3 K53       ; R3 := "Background::"
 97 [-]: GETGLOBAL R4 K54       ; R4 := 0x2d0fad09
 98 [-]: LOADK     R5 K55       ; R5 := "EE.Interface.Utilities"
 99 [-]: CALL      R4 2 2       ; R4 := R4(R5)
100 [-]: GETGLOBAL R5 K54       ; R5 := 0x2d0fad09
101 [-]: LOADK     R6 K56       ; R6 := "Lotus.Interface.LotusUtilities"
102 [-]: CALL      R5 2 2       ; R5 := R5(R6)
103 [-]: GETGLOBAL R6 K54       ; R6 := 0x2d0fad09
104 [-]: LOADK     R7 K57       ; R7 := "Lotus.Interface.FortressUtilities"
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: GETGLOBAL R7 K54       ; R7 := 0x2d0fad09
107 [-]: LOADK     R8 K58       ; R8 := "Lotus.Interface.LotusNetworkUtilities"
108 [-]: CALL      R7 2 2       ; R7 := R7(R8)
109 [-]: GETGLOBAL R8 K54       ; R8 := 0x2d0fad09
110 [-]: LOADK     R9 K59       ; R9 := "Lotus.Interface.Libs.SortieGenerator"
111 [-]: CALL      R8 2 2       ; R8 := R8(R9)
112 [-]: GETGLOBAL R9 K54       ; R9 := 0x2d0fad09
113 [-]: LOADK     R10 K60      ; R10 := "Lotus.Interface.Libs.SyndicateMissionGenerator"
114 [-]: CALL      R9 2 2       ; R9 := R9(R10)
115 [-]: GETGLOBAL R10 K54      ; R10 := 0x2d0fad09
116 [-]: LOADK     R11 K61      ; R11 := "Lotus.Interface.Libs.ActiveMissionGenerator"
117 [-]: CALL      R10 2 2      ; R10 := R10(R11)
118 [-]: GETGLOBAL R11 K54      ; R11 := 0x2d0fad09
119 [-]: LOADK     R12 K62      ; R12 := "Lotus.Interface.Libs.InvasionMissionGenerator"
120 [-]: CALL      R11 2 2      ; R11 := R11(R12)
121 [-]: GETGLOBAL R12 K54      ; R12 := 0x2d0fad09
122 [-]: LOADK     R13 K63      ; R13 := "Lotus.Interface.CardUtilitiesRedux"
123 [-]: CALL      R12 2 2      ; R12 := R12(R13)
124 [-]: GETGLOBAL R13 K54      ; R13 := 0x2d0fad09
125 [-]: LOADK     R14 K64      ; R14 := "Lotus.Interface.TransmissionUtilities"
126 [-]: CALL      R13 2 2      ; R13 := R13(R14)
127 [-]: GETGLOBAL R14 K54      ; R14 := 0x2d0fad09
128 [-]: LOADK     R15 K65      ; R15 := "Lotus.Interface.UIUtilities"
129 [-]: CALL      R14 2 2      ; R14 := R14(R15)
130 [-]: GETGLOBAL R15 K54      ; R15 := 0x2d0fad09
131 [-]: LOADK     R16 K66      ; R16 := "Lotus.Interface.UIStyleUtilities"
132 [-]: CALL      R15 2 2      ; R15 := R15(R16)
133 [-]: GETGLOBAL R16 K54      ; R16 := 0x2d0fad09
134 [-]: LOADK     R17 K67      ; R17 := "Lotus.Scripts.RelayReconstructionUtilities"
135 [-]: CALL      R16 2 2      ; R16 := R16(R17)
136 [-]: GETGLOBAL R17 K54      ; R17 := 0x2d0fad09
137 [-]: LOADK     R18 K68      ; R18 := "Lotus.Interface.Libs.JukeBoxMgr"
138 [-]: CALL      R17 2 2      ; R17 := R17(R18)
139 [-]: GETGLOBAL R18 K54      ; R18 := 0x2d0fad09
140 [-]: LOADK     R19 K69      ; R19 := "Lotus.Interface.MissionRequirementUtilities"
141 [-]: CALL      R18 2 2      ; R18 := R18(R19)
142 [-]: GETGLOBAL R19 K54      ; R19 := 0x2d0fad09
143 [-]: LOADK     R20 K70      ; R20 := "Lotus.Interface.WorldStateUtilities"
144 [-]: CALL      R19 2 2      ; R19 := R19(R20)
145 [-]: GETGLOBAL R20 K54      ; R20 := 0x2d0fad09
146 [-]: LOADK     R21 K71      ; R21 := "Lotus.Scripts.Nemesis.NemesisGenerator"
147 [-]: CALL      R20 2 2      ; R20 := R20(R21)
148 [-]: GETGLOBAL R21 K54      ; R21 := 0x2d0fad09
149 [-]: LOADK     R22 K72      ; R22 := "Lotus.Interface.Libs.DioramaLoader"
150 [-]: CALL      R21 2 2      ; R21 := R21(R22)
151 [-]: GETGLOBAL R22 K54      ; R22 := 0x2d0fad09
152 [-]: LOADK     R23 K73      ; R23 := "Lotus.Interface.FocusUtilities"
153 [-]: CALL      R22 2 2      ; R22 := R22(R23)
154 [-]: GETGLOBAL R23 K54      ; R23 := 0x2d0fad09
155 [-]: LOADK     R24 K74      ; R24 := "Lotus.Interface.Libs.ActionFigureLoadoutLoader"
156 [-]: CALL      R23 2 2      ; R23 := R23(R24)
157 [-]: GETGLOBAL R24 K54      ; R24 := 0x2d0fad09
158 [-]: LOADK     R25 K75      ; R25 := "Lotus.Interface.Libs.DojoMgr"
159 [-]: CALL      R24 2 2      ; R24 := R24(R25)
160 [-]: GETGLOBAL R25 K54      ; R25 := 0x2d0fad09
161 [-]: LOADK     R26 K76      ; R26 := "Lotus.Powersuits.Operator.OperatorLib"
162 [-]: CALL      R25 2 2      ; R25 := R25(R26)
163 [-]: LOADNIL   R26 R26      ; R26 := nil
164 [-]: SETGLOBAL R26 K77      ; mTimerMgr := R26
165 [-]: LOADBOOL  R26 1 0      ; R26 := true
166 [-]: SETGLOBAL R26 K78      ; mQuestsNeedChecking := R26
167 [-]: NEWTABLE  R26 0 3      ; R26 := {}
168 [-]: SETTABLE  R26 K80 K13  ; R26["Initialized"] := false
169 [-]: SETTABLE  R26 K81 K13  ; R26["Shutdown"] := false
170 [-]: SETTABLE  R26 K82 K13  ; R26["StyleInit"] := false
171 [-]: SETGLOBAL R26 K79      ; mControl := R26
172 [-]: LOADNIL   R26 R26      ; R26 := nil
173 [-]: SETGLOBAL R26 K83      ; mNotificationsMovie := R26
174 [-]: LOADNIL   R26 R26      ; R26 := nil
175 [-]: SETGLOBAL R26 K84      ; mChildMovie := R26
176 [-]: NEWTABLE  R26 0 0      ; R26 := {}
177 [-]: SETGLOBAL R26 K85      ; screenStack := R26
178 [-]: LOADNIL   R26 R26      ; R26 := nil
179 [-]: SETGLOBAL R26 K86      ; queuedMovie := R26
180 [-]: LOADNIL   R26 R26      ; R26 := nil
181 [-]: SETGLOBAL R26 K87      ; queuedMovieCallback := R26
182 [-]: NEWTABLE  R26 0 0      ; R26 := {}
183 [-]: SETGLOBAL R26 K88      ; movies := R26
184 [-]: LOADBOOL  R26 0 0      ; R26 := false
185 [-]: SETGLOBAL R26 K89      ; mFadeInStarted := R26
186 [-]: LOADNIL   R26 R26      ; R26 := nil
187 [-]: SETGLOBAL R26 K90      ; mPreviousScreen := R26
188 [-]: LOADNIL   R26 R26      ; R26 := nil
189 [-]: SETGLOBAL R26 K91      ; mToolTip := R26
190 [-]: LOADNIL   R26 R26      ; R26 := nil
191 [-]: SETGLOBAL R26 K92      ; mInfoPopup := R26
192 [-]: LOADNIL   R26 R26      ; R26 := nil
193 [-]: SETGLOBAL R26 K93      ; mContextMenu := R26
194 [-]: LOADNIL   R26 R26      ; R26 := nil
195 [-]: SETGLOBAL R26 K94      ; mIMEOverlay := R26
196 [-]: LOADNIL   R26 R26      ; R26 := nil
197 [-]: SETGLOBAL R26 K95      ; mBlockingTaskPopup := R26
198 [-]: LOADBOOL  R26 0 0      ; R26 := false
199 [-]: SETGLOBAL R26 K96      ; mUnblockWhenAsyncDone := R26
200 [-]: LOADNIL   R26 R26      ; R26 := nil
201 [-]: SETGLOBAL R26 K97      ; mStyleBackgroundMovie := R26
202 [-]: LOADNIL   R26 R26      ; R26 := nil
203 [-]: SETGLOBAL R26 K98      ; mPurchaseParams := R26
204 [-]: LOADK     R26 1        ; R26 := 1.000000
205 [-]: SETGLOBAL R26 K99      ; mQuantityToReceive := R26
206 [-]: LOADNIL   R26 R27      ; R26 := R27 := nil
207 [-]: SETGLOBAL R27 K100     ; mPurchaseTotalPrice := R27
208 [-]: LOADNIL   R27 R27      ; R27 := nil
209 [-]: SETGLOBAL R27 K101     ; mPurchaseUnitPrice := R27
210 [-]: LOADK     R27 1        ; R27 := 1.000000
211 [-]: SETGLOBAL R27 K102     ; mPurchaseQuantityMultiplier := R27
212 [-]: LOADNIL   R27 R27      ; R27 := nil
213 [-]: SETGLOBAL R27 K103     ; mQueuedGoToScreen := R27
214 [-]: LOADNIL   R27 R27      ; R27 := nil
215 [-]: SETGLOBAL R27 K104     ; mQueuedGoToPreviousScreen := R27
216 [-]: LOADBOOL  R27 0 0      ; R27 := false
217 [-]: SETGLOBAL R27 K105     ; mQueuedLogoff := R27
218 [-]: LOADBOOL  R27 0 0      ; R27 := false
219 [-]: SETGLOBAL R27 K106     ; mAbortingQuickMatch := R27
220 [-]: LOADBOOL  R27 0 0      ; R27 := false
221 [-]: SETGLOBAL R27 K107     ; mNeedsToRespawnMenuAvatars := R27
222 [-]: LOADNIL   R27 R27      ; R27 := nil
223 [-]: SETGLOBAL R27 K108     ; mMenuSuitAvatar := R27
224 [-]: LOADBOOL  R27 0 0      ; R27 := false
225 [-]: SETGLOBAL R27 K109     ; mMenuSuitAvatarVisible := R27
226 [-]: LOADNIL   R27 R27      ; R27 := nil
227 [-]: SETGLOBAL R27 K110     ; connectionFailurePopup := R27
228 [-]: LOADNIL   R27 R27      ; R27 := nil
229 [-]: SETGLOBAL R27 K111     ; mPurchasePopupMovie := R27
230 [-]: LOADNIL   R27 R27      ; R27 := nil
231 [-]: SETGLOBAL R27 K112     ; mCurrentMode := R27
232 [-]: LOADNIL   R27 R27      ; R27 := nil
233 [-]: SETGLOBAL R27 K113     ; mCurrentGameRules := R27
234 [-]: LOADNIL   R27 R27      ; R27 := nil
235 [-]: SETGLOBAL R27 K114     ; mUIInputEnableTimer := R27
236 [-]: NEWTABLE  R27 0 3      ; R27 := {}
237 [-]: SETTABLE  R27 K116 K13 ; R27["Refresh"] := false
238 [-]: SETTABLE  R27 K117 K23 ; R27["Timer"] := nil
239 [-]: SETTABLE  R27 K118 K8  ; R27["LastRefreshTime"] := 0.000000
240 [-]: SETGLOBAL R27 K115     ; mFoundryNotification := R27
241 [-]: NEWTABLE  R27 0 5      ; R27 := {}
242 [-]: SETTABLE  R27 K120 K13 ; R27["IsLoading"] := false
243 [-]: SETTABLE  R27 K121 K17 ; R27["ScreenName"] := ""
244 [-]: SETTABLE  R27 K122 K23 ; R27["OpenFromMovie"] := nil
245 [-]: SETTABLE  R27 K123 K13 ; R27["IgnoreIfOpen"] := false
246 [-]: SETTABLE  R27 K124 K23 ; R27["Callback"] := nil
247 [-]: SETGLOBAL R27 K119     ; mOpenScreenAsyncInfo := R27
248 [-]: LOADK     R27 0        ; R27 := 0.000000
249 [-]: SETGLOBAL R27 K125     ; mPurchasePolarityType := R27
250 [-]: LOADNIL   R27 R27      ; R27 := nil
251 [-]: SETGLOBAL R27 K126     ; mPurchaseOrigin := R27
252 [-]: LOADK     R27 K17      ; R27 := ""
253 [-]: SETGLOBAL R27 K127     ; mBinType := R27
254 [-]: LOADK     R27 K17      ; R27 := ""
255 [-]: SETGLOBAL R27 K128     ; mBaseSourceType := R27
256 [-]: LOADNIL   R27 R27      ; R27 := nil
257 [-]: SETGLOBAL R27 K129     ; mWebCmd := R27
258 [-]: NEWTABLE  R27 17 0     ; R27 := {}
259 [-]: LOADK     R28 K130     ; R28 := "PURCHASE_MARKET"
260 [-]: LOADK     R29 K131     ; R29 := "PURCHASE_VOID_TRADER"
261 [-]: LOADK     R30 K132     ; R30 := "PURCHASE_SYNDICATE_FAVOR"
262 [-]: LOADK     R31 K133     ; R31 := "PURCHASE_DAILY_DEAL"
263 [-]: LOADK     R32 K134     ; R32 := "PURCHASE_ARSENAL"
264 [-]: LOADK     R33 K135     ; R33 := "PURCHASE_PROFILE"
265 [-]: LOADK     R34 K136     ; R34 := "PURCHASE_HUB"
266 [-]: LOADK     R35 K137     ; R35 := "PURCHASE_VENDOR"
267 [-]: LOADK     R36 K138     ; R36 := "PURCHASE_APPEARANCE_PREVIEW"
268 [-]: LOADK     R37 K139     ; R37 := "PURCHASE_MUSEUM"
269 [-]: LOADK     R38 K140     ; R38 := "PURCHASE_OPERATOR"
270 [-]: LOADK     R39 K141     ; R39 := "PURCHASE_PLAYER_SHIP"
271 [-]: LOADK     R40 K142     ; R40 := "PURCHASE_CREWSHIP"
272 [-]: LOADK     R41 K143     ; R41 := "PURCHASE_MENU_STYLE"
273 [-]: LOADK     R42 K144     ; R42 := "PURCHASE_MENU_HUD"
274 [-]: LOADK     R43 K145     ; R43 := "PURCHASE_CHAT"
275 [-]: LOADK     R44 K146     ; R44 := "PURCHASE_INVENTORY"
276 [-]: LOADK     R45 K147     ; R45 := "PURCHASE_STAR_CHART"
277 [-]: SETLIST   R27 18 1     ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 18
278 [-]: NEWTABLE  R28 0 5      ; R28 := {}
279 [-]: SETTABLE  R28 K117 K15 ; R28["Timer"] := -1.000000
280 [-]: SETTABLE  R28 K148 K8  ; R28["InTime"] := 0.000000
281 [-]: SETTABLE  R28 K149 K8  ; R28["OutTime"] := 0.000000
282 [-]: SETTABLE  R28 K150 K8  ; R28["FinalVal"] := 0.000000
283 [-]: SETTABLE  R28 K151 K23 ; R28["FullCallback"] := nil
284 [-]: LOADNIL   R29 R29      ; R29 := nil
285 [-]: NEWTABLE  R30 0 6      ; R30 := {}
286 [-]: GETGLOBAL R31 K45      ; R31 := 0x0469f296
287 [-]: LOADK     R32 K153     ; R32 := "BackgroundMovie"
288 [-]: CALL      R31 2 2      ; R31 := R31(R32)
289 [-]: SETTABLE  R30 K152 R31 ; R30["WORLD_STATE_CALLBACK_IDENTIFIER"] := R31
290 [-]: SETTABLE  R30 K154 K23 ; R30["mWorldStateLastNightmareSeed"] := nil
291 [-]: SETTABLE  R30 K155 K23 ; R30["mWorldStateLastGhostTowerSeed"] := nil
292 [-]: SETTABLE  R30 K156 K23 ; R30["mWorldStateLastEliteAlertSeed"] := nil
293 [-]: SETTABLE  R30 K157 K13 ; R30["mWorldStateCallbackRegistered"] := false
294 [-]: SETTABLE  R30 K158 K13 ; R30["mForceRefreshWorldStatePostLogin"] := false
295 [-]: LOADK     R31 5        ; R31 := 5.000000
296 [-]: LOADK     R32 3        ; R32 := 3.000000
297 [-]: LOADBOOL  R33 0 0      ; R33 := false
298 [-]: LOADNIL   R34 R34      ; R34 := nil
299 [-]: NEWTABLE  R35 0 0      ; R35 := {}
300 [-]: LOADK     R36 1        ; R36 := 1.000000
301 [-]: LOADNIL   R37 R37      ; R37 := nil
302 [-]: SETGLOBAL R37 K159     ; mProcessingOmegaWithPendingFingerprint := R37
303 [-]: LOADNIL   R37 R37      ; R37 := nil
304 [-]: SETGLOBAL R37 K160     ; mNewIdentifiedOmegaMods := R37
305 [-]: LOADNIL   R37 R37      ; R37 := nil
306 [-]: SETGLOBAL R37 K161     ; mOmegaWithPendingFingerprints := R37
307 [-]: LOADNIL   R37 R37      ; R37 := nil
308 [-]: SETGLOBAL R37 K162     ; mCheckingForIdentifiedOmegaMods := R37
309 [-]: LOADNIL   R37 R37      ; R37 := nil
310 [-]: SETGLOBAL R37 K163     ; mShowingIdentifiedOmegaModsDiorama := R37
311 [-]: LOADNIL   R37 R37      ; R37 := nil
312 [-]: SETGLOBAL R37 K164     ; mShouldShowDiorama := R37
313 [-]: LOADBOOL  R37 0 0      ; R37 := false
314 [-]: LOADNIL   R38 R38      ; R38 := nil
315 [-]: NEWTABLE  R39 0 8      ; R39 := {}
316 [-]: SETTABLE  R39 K165 K23 ; R39["Loader"] := nil
317 [-]: SETTABLE  R39 K120 K13 ; R39["IsLoading"] := false
318 [-]: SETTABLE  R39 K166 K23 ; R39["QueuedTransmission"] := nil
319 [-]: SETTABLE  R39 K167 K23 ; R39["SoundInst"] := nil
320 [-]: NEWTABLE  R40 0 0      ; R40 := {}
321 [-]: SETTABLE  R39 K168 R40 ; R39["WaitingTransmissions"] := R40
322 [-]: SETTABLE  R39 K169 K8  ; R39["DelayTime"] := 0.000000
323 [-]: NEWTABLE  R40 0 0      ; R40 := {}
324 [-]: SETTABLE  R39 K170 R40 ; R39["Callbacks"] := R40
325 [-]: SETTABLE  R39 K171 K13 ; R39["Playing"] := false
326 [-]: NEWTABLE  R40 0 2      ; R40 := {}
327 [-]: SETTABLE  R40 K172 K23 ; R40["Avatar"] := nil
328 [-]: GETGLOBAL R41 K174     ; R41 := 0xa421af95
329 [-]: CALL      R41 1 2      ; R41 := R41()
330 [-]: SETTABLE  R40 K173 R41 ; R40["TargetPos"] := R41
331 [-]: LOADBOOL  R41 0 0      ; R41 := false
332 [-]: SETGLOBAL R41 K175     ; mAdditionalScreenCreated := R41
333 [-]: LOADBOOL  R41 0 0      ; R41 := false
334 [-]: SETGLOBAL R41 K176     ; mNewFriendRequests := R41
335 [-]: NEWTABLE  R41 0 0      ; R41 := {}
336 [-]: SETGLOBAL R41 K177     ; mFriendRequests := R41
337 [-]: LOADNIL   R41 R41      ; R41 := nil
338 [-]: SETGLOBAL R41 K178     ; mFriendRequestActiveNotification := R41
339 [-]: NEWTABLE  R41 0 6      ; R41 := {}
340 [-]: NEWTABLE  R42 0 0      ; R42 := {}
341 [-]: SETTABLE  R41 K179 R42 ; R41["mBoosterPackResults"] := R42
342 [-]: SETTABLE  R41 K180 K8  ; R41["mCurrentPack"] := 0.000000
343 [-]: SETTABLE  R41 K181 K8  ; R41["mNumberOfCardsInPack"] := 0.000000
344 [-]: SETTABLE  R41 K182 K17 ; R41["mBoosterPackItemString"] := ""
345 [-]: SETTABLE  R41 K183 K8  ; R41["mNumberOfPacksToProcess"] := 0.000000
346 [-]: SETTABLE  R41 K184 K8  ; R41["mTotalPacksToProcess"] := 0.000000
347 [-]: NEWTABLE  R42 0 4      ; R42 := {}
348 [-]: GETTABLE  R43 R5 K186  ; R43 := R5["DECO_AREA_SHIP"]
349 [-]: SETTABLE  R42 K185 R43 ; R42["DecoArea"] := R43
350 [-]: SETTABLE  R42 K165 K23 ; R42["Loader"] := nil
351 [-]: SETTABLE  R42 K120 K13 ; R42["IsLoading"] := false
352 [-]: NEWTABLE  R43 0 6      ; R43 := {}
353 [-]: SETTABLE  R43 K188 K189; R43["RoomLoaderIndex"] := 1.000000
354 [-]: SETTABLE  R43 K190 K189; R43["DecoLoaderIndex"] := 1.000000
355 [-]: SETTABLE  R43 K191 K189; R43["RoomCreationIndex"] := 1.000000
356 [-]: SETTABLE  R43 K192 K189; R43["DecoCreationIndex"] := 1.000000
357 [-]: NEWTABLE  R44 0 0      ; R44 := {}
358 [-]: SETTABLE  R43 K193 R44 ; R43["DecosLoaded"] := R44
359 [-]: SETTABLE  R43 K194 K13 ; R43["LastLoad"] := false
360 [-]: SETTABLE  R42 K187 R43 ; R42["LoaderProgress"] := R43
361 [-]: NEWTABLE  R43 0 4      ; R43 := {}
362 [-]: GETTABLE  R44 R5 K195  ; R44 := R5["DECO_AREA_APARTMENT"]
363 [-]: SETTABLE  R43 K185 R44 ; R43["DecoArea"] := R44
364 [-]: SETTABLE  R43 K165 K23 ; R43["Loader"] := nil
365 [-]: SETTABLE  R43 K120 K13 ; R43["IsLoading"] := false
366 [-]: NEWTABLE  R44 0 6      ; R44 := {}
367 [-]: SETTABLE  R44 K188 K189; R44["RoomLoaderIndex"] := 1.000000
368 [-]: SETTABLE  R44 K190 K189; R44["DecoLoaderIndex"] := 1.000000
369 [-]: SETTABLE  R44 K191 K189; R44["RoomCreationIndex"] := 1.000000
370 [-]: SETTABLE  R44 K192 K189; R44["DecoCreationIndex"] := 1.000000
371 [-]: NEWTABLE  R45 0 0      ; R45 := {}
372 [-]: SETTABLE  R44 K193 R45 ; R44["DecosLoaded"] := R45
373 [-]: SETTABLE  R44 K194 K13 ; R44["LastLoad"] := false
374 [-]: SETTABLE  R43 K187 R44 ; R43["LoaderProgress"] := R44
375 [-]: NEWTABLE  R44 0 3      ; R44 := {}
376 [-]: SETTABLE  R44 K165 K23 ; R44["Loader"] := nil
377 [-]: SETTABLE  R44 K120 K13 ; R44["IsLoading"] := false
378 [-]: SETTABLE  R44 K196 K13 ; R44["IsFishTank"] := false
379 [-]: NEWTABLE  R45 0 5      ; R45 := {}
380 [-]: NEWTABLE  R46 0 0      ; R46 := {}
381 [-]: SETTABLE  R45 K197 R46 ; R45["Figures"] := R46
382 [-]: NEWTABLE  R46 0 0      ; R46 := {}
383 [-]: SETTABLE  R45 K198 R46 ; R45["PresetInfos"] := R46
384 [-]: NEWTABLE  R46 0 0      ; R46 := {}
385 [-]: SETTABLE  R45 K199 R46 ; R45["PresetIds"] := R46
386 [-]: NEWTABLE  R46 0 0      ; R46 := {}
387 [-]: SETTABLE  R45 K200 R46 ; R45["EnemyFigures"] := R46
388 [-]: NEWTABLE  R46 0 0      ; R46 := {}
389 [-]: SETTABLE  R45 K201 R46 ; R45["EnemyTypes"] := R46
390 [-]: NEWTABLE  R46 0 2      ; R46 := {}
391 [-]: SETTABLE  R46 K165 K23 ; R46["Loader"] := nil
392 [-]: SETTABLE  R46 K120 K13 ; R46["IsLoading"] := false
393 [-]: NEWTABLE  R47 0 3      ; R47 := {}
394 [-]: SETTABLE  R47 K165 K23 ; R47["Loader"] := nil
395 [-]: SETTABLE  R47 K120 K13 ; R47["IsLoading"] := false
396 [-]: NEWTABLE  R48 0 0      ; R48 := {}
397 [-]: SETTABLE  R47 K202 R48 ; R47["Upgrades"] := R48
398 [-]: NEWTABLE  R48 0 5      ; R48 := {}
399 [-]: SETTABLE  R48 K203 K23 ; R48["movie"] := nil
400 [-]: SETTABLE  R48 K204 K23 ; R48["timerId"] := nil
401 [-]: SETTABLE  R48 K205 K206; R48["timeToCheckDelay"] := 0.200000
402 [-]: SETTABLE  R48 K207 K8  ; R48["timeOpen"] := 0.000000
403 [-]: SETTABLE  R48 K208 K209; R48["minimumDisplayTime"] := 2.000000
404 [-]: LOADNIL   R49 R50      ; R49 := R50 := nil
405 [-]: NEWTABLE  R51 0 8      ; R51 := {}
406 [-]: SETTABLE  R51 K210 K211; R51["REGULAR_CREDITS"] := "Credits"
407 [-]: SETTABLE  R51 K212 K213; R51["PREMIUM_CREDITS"] := "Platinum"
408 [-]: SETTABLE  R51 K214 K215; R51["PRIME_BUCKS"] := "PrimeBucks"
409 [-]: SETTABLE  R51 K216 K217; R51["PRIME_TOKENS"] := "PrimeTokens"
410 [-]: SETTABLE  R51 K218 K219; R51["STANDING"] := "Standing"
411 [-]: SETTABLE  R51 K220 K221; R51["AMBULAS_DATA"] := "AmbulasData"
412 [-]: SETTABLE  R51 K222 K223; R51["ITEMS"] := "Items"
413 [-]: SETTABLE  R51 K224 K225; R51["FOCUS_XP"] := "FocusXp"
414 [-]: NEWTABLE  R52 0 4      ; R52 := {}
415 [-]: SETTABLE  R52 K226 K8  ; R52["DEFAULT"] := 0.000000
416 [-]: SETTABLE  R52 K227 K189; R52["OVERRIDE"] := 1.000000
417 [-]: SETTABLE  R52 K228 K209; R52["QUEUE"] := 2.000000
418 [-]: SETTABLE  R52 K229 K4  ; R52["FORCE_QUEUE"] := 3.000000
419 [-]: LOADK     R53 1        ; R53 := 1.000000
420 [-]: SETGLOBAL R53 K230     ; mRefreshHighPriorityMessages := R53
421 [-]: LOADK     R53 1        ; R53 := 1.000000
422 [-]: SETGLOBAL R53 K231     ; mHighPriorityMessageDelay := R53
423 [-]: LOADBOOL  R53 0 0      ; R53 := false
424 [-]: SETGLOBAL R53 K232     ; mBoughtShipFeatureItem := R53
425 [-]: LOADNIL   R53 R56      ; R53 := R54 := R55 := R56 := nil
426 [-]: LOADBOOL  R57 0 0      ; R57 := false
427 [-]: LOADNIL   R58 R59      ; R58 := R59 := nil
428 [-]: GETGLOBAL R60 K45      ; R60 := 0x0469f296
429 [-]: LOADK     R61 K233     ; R61 := "TennoConRelay"
430 [-]: CALL      R60 2 2      ; R60 := R60(R61)
431 [-]: GETGLOBAL R61 K45      ; R61 := 0x0469f296
432 [-]: LOADK     R62 K234     ; R62 := "TennoConRelayB"
433 [-]: CALL      R61 2 2      ; R61 := R61(R62)
434 [-]: LOADNIL   R62 R62      ; R62 := nil
435 [-]: LOADBOOL  R63 0 0      ; R63 := false
436 [-]: LOADK     R64 0        ; R64 := 0.000000
437 [-]: NEWTABLE  R65 0 7      ; R65 := {}
438 [-]: NEWTABLE  R66 0 1      ; R66 := {}
439 [-]: GETGLOBAL R67 K40      ; R67 := 0xb009bbc6
440 [-]: LOADK     R68 K238     ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanCorruptedAISpec"
441 [-]: CALL      R67 2 2      ; R67 := R67(R68)
442 [-]: SETTABLE  R66 K237 R67 ; R66["enemySpec"] := R67
443 [-]: SETTABLE  R65 K236 R66 ; R65[33.000000] := R66
444 [-]: NEWTABLE  R66 0 1      ; R66 := {}
445 [-]: GETGLOBAL R67 K40      ; R67 := 0xb009bbc6
446 [-]: LOADK     R68 K239     ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanExterminateSpec"
447 [-]: CALL      R67 2 2      ; R67 := R67(R68)
448 [-]: SETTABLE  R66 K237 R67 ; R66["enemySpec"] := R67
449 [-]: SETTABLE  R65 K189 R66 ; R65[1.000000] := R66
450 [-]: NEWTABLE  R66 0 1      ; R66 := {}
451 [-]: GETGLOBAL R67 K40      ; R67 := 0xb009bbc6
452 [-]: LOADK     R68 K240     ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanSurvival"
453 [-]: CALL      R67 2 2      ; R67 := R67(R68)
454 [-]: SETTABLE  R66 K237 R67 ; R66["enemySpec"] := R67
455 [-]: SETTABLE  R65 K209 R66 ; R65[2.000000] := R66
456 [-]: NEWTABLE  R66 0 1      ; R66 := {}
457 [-]: GETGLOBAL R67 K40      ; R67 := 0xb009bbc6
458 [-]: LOADK     R68 K242     ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanEndlessAssassinateSpec"
459 [-]: CALL      R67 2 2      ; R67 := R67(R68)
460 [-]: SETTABLE  R66 K237 R67 ; R66["enemySpec"] := R67
461 [-]: SETTABLE  R65 K241 R66 ; R65[8.000000] := R66
462 [-]: NEWTABLE  R66 0 1      ; R66 := {}
463 [-]: GETGLOBAL R67 K40      ; R67 := 0xb009bbc6
464 [-]: LOADK     R68 K243     ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanMobileDefenseSpec"
465 [-]: CALL      R67 2 2      ; R67 := R67(R68)
466 [-]: SETTABLE  R66 K237 R67 ; R66["enemySpec"] := R67
467 [-]: SETTABLE  R65 K2 R66   ; R65[9.000000] := R66
468 [-]: NEWTABLE  R66 0 1      ; R66 := {}
469 [-]: GETGLOBAL R67 K40      ; R67 := 0xb009bbc6
470 [-]: LOADK     R68 K240     ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanSurvival"
471 [-]: CALL      R67 2 2      ; R67 := R67(R68)
472 [-]: SETTABLE  R66 K237 R67 ; R66["enemySpec"] := R67
473 [-]: SETTABLE  R65 K244 R66 ; R65[34.000000] := R66
474 [-]: NEWTABLE  R66 0 1      ; R66 := {}
475 [-]: GETGLOBAL R67 K40      ; R67 := 0xb009bbc6
476 [-]: LOADK     R68 K242     ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanEndlessAssassinateSpec"
477 [-]: CALL      R67 2 2      ; R67 := R67(R68)
478 [-]: SETTABLE  R66 K237 R67 ; R66["enemySpec"] := R67
479 [-]: SETTABLE  R65 K245 R66 ; R65[35.000000] := R66
480 [-]: NEWTABLE  R66 3 0      ; R66 := {}
481 [-]: GETGLOBAL R67 K45      ; R67 := 0x0469f296
482 [-]: LOADK     R68 K246     ; R68 := "DisplayWarframeEntity1"
483 [-]: CALL      R67 2 2      ; R67 := R67(R68)
484 [-]: GETGLOBAL R68 K45      ; R68 := 0x0469f296
485 [-]: LOADK     R69 K247     ; R69 := "DisplayWarframeEntity2"
486 [-]: CALL      R68 2 2      ; R68 := R68(R69)
487 [-]: GETGLOBAL R69 K45      ; R69 := 0x0469f296
488 [-]: LOADK     R70 K248     ; R70 := "DisplayWarframeEntity3"
489 [-]: CALL      R69 2 2      ; R69 := R69(R70)
490 [-]: GETGLOBAL R70 K45      ; R70 := 0x0469f296
491 [-]: LOADK     R71 K249     ; R71 := "DisplayWarframeEntity4"
492 [-]: CALL      R70 2 0      ; R70,... := R70(R71)
493 [-]: SETLIST   R66 0 1      ; R66[(1-1)*FPF+i] := R(66+i), 1 <= i <= 0
494 [-]: GETGLOBAL R67 K0       ; R67 := _T
495 [-]: SETTABLE  R67 K250 K23 ; R67["Notifications"] := nil
496 [-]: GETGLOBAL R67 K0       ; R67 := _T
497 [-]: NEWTABLE  R68 0 0      ; R68 := {}
498 [-]: SETTABLE  R67 K251 R68 ; R67["remoteSuitEntities"] := R68
499 [-]: GETGLOBAL R67 K0       ; R67 := _T
500 [-]: SETTABLE  R67 K252 K13 ; R67["ActiveQuestLoaded"] := false
501 [-]: LOADNIL   R67 R67      ; R67 := nil
502 [-]: GETGLOBAL R68 K0       ; R68 := _T
503 [-]: SETTABLE  R68 K253 K23 ; R68["NeedsGoalCheck"] := nil
504 [-]: GETGLOBAL R68 K45      ; R68 := 0x0469f296
505 [-]: LOADK     R69 K254     ; R69 := "PersonalQuartersRoom"
506 [-]: CALL      R68 2 2      ; R68 := R68(R69)
507 [-]: GETGLOBAL R69 K49      ; R69 := 0x7ed0a956
508 [-]: LOADK     R70 K255     ; R70 := "/Lotus/Types/Game/ActionFigurePlaceableAreaTrigger"
509 [-]: CALL      R69 2 2      ; R69 := R69(R70)
510 [-]: GETGLOBAL R70 K49      ; R70 := 0x7ed0a956
511 [-]: LOADK     R71 K256     ; R71 := "/Lotus/Types/Items/ShipDecos/Vignettes/Warframes/WarframeAFItem"
512 [-]: CALL      R70 2 2      ; R70 := R70(R71)
513 [-]: GETGLOBAL R71 K49      ; R71 := 0x7ed0a956
514 [-]: LOADK     R72 K257     ; R72 := "/Lotus/Types/Items/MiscItems/Elitium"
515 [-]: CALL      R71 2 2      ; R71 := R71(R72)
516 [-]: GETGLOBAL R72 K49      ; R72 := 0x7ed0a956
517 [-]: LOADK     R73 K258     ; R73 := "/Lotus/Types/Enemies/TennoReplicants/SyndicateAllies/HexisAllyAgentDefense"
518 [-]: CALL      R72 2 2      ; R72 := R72(R73)
519 [-]: GETGLOBAL R73 K49      ; R73 := 0x7ed0a956
520 [-]: LOADK     R74 K259     ; R74 := "/Lotus/Objects/Tenno/Props/Ships/Events/WFRollerFloofDeco"
521 [-]: CALL      R73 2 2      ; R73 := R73(R74)
522 [-]: CLOSURE   R74 0        ; R74 := closure(Function #1)
523 [-]: SETGLOBAL R74 K81      ; Shutdown := R74
524 [-]: CLOSURE   R74 1        ; R74 := closure(Function #2)
525 [-]: CLOSURE   R75 2        ; R75 := closure(Function #3)
526 [-]: SETGLOBAL R75 K260     ; PurchasePlatinumFailed := R75
527 [-]: CLOSURE   R75 3        ; R75 := closure(Function #4)
528 [-]: MOVE      R0 R5        ; R0 := R5
529 [-]: MOVE      R0 R4        ; R0 := R4
530 [-]: CLOSURE   R76 4        ; R76 := closure(Function #5)
531 [-]: MOVE      R0 R75       ; R0 := R75
532 [-]: SETGLOBAL R76 K261     ; OnPurchasePlatinum := R76
533 [-]: CLOSURE   R76 5        ; R76 := closure(Function #6)
534 [-]: MOVE      R0 R75       ; R0 := R75
535 [-]: SETGLOBAL R76 K262     ; PurchasePlatinumOk := R76
536 [-]: CLOSURE   R76 6        ; R76 := closure(Function #7)
537 [-]: MOVE      R0 R5        ; R0 := R5
538 [-]: MOVE      R0 R4        ; R0 := R4
539 [-]: CLOSURE   R77 7        ; R77 := closure(Function #8)
540 [-]: MOVE      R0 R76       ; R0 := R76
541 [-]: SETGLOBAL R77 K263     ; PurchasePlatinumWithDialog := R77
542 [-]: CLOSURE   R77 8        ; R77 := closure(Function #9)
543 [-]: MOVE      R0 R4        ; R0 := R4
544 [-]: SETGLOBAL R77 K264     ; PurchasePrimeAccessPS4 := R77
545 [-]: CLOSURE   R77 9        ; R77 := closure(Function #10)
546 [-]: MOVE      R0 R51       ; R0 := R51
547 [-]: MOVE      R0 R5        ; R0 := R5
548 [-]: MOVE      R0 R4        ; R0 := R4
549 [-]: CLOSURE   R78 10       ; R78 := closure(Function #11)
550 [-]: MOVE      R0 R26       ; R0 := R26
551 [-]: MOVE      R0 R77       ; R0 := R77
552 [-]: MOVE      R0 R4        ; R0 := R4
553 [-]: SETGLOBAL R78 K265     ; ShowInsufficientFundsPopup := R78
554 [-]: CLOSURE   R78 11       ; R78 := closure(Function #12)
555 [-]: MOVE      R0 R5        ; R0 := R5
556 [-]: MOVE      R0 R4        ; R0 := R4
557 [-]: CLOSURE   R79 12       ; R79 := closure(Function #13)
558 [-]: CLOSURE   R80 13       ; R80 := closure(Function #14)
559 [-]: CLOSURE   R81 14       ; R81 := closure(Function #15)
560 [-]: MOVE      R0 R5        ; R0 := R5
561 [-]: MOVE      R0 R51       ; R0 := R51
562 [-]: MOVE      R0 R79       ; R0 := R79
563 [-]: MOVE      R0 R80       ; R0 := R80
564 [-]: CLOSURE   R82 15       ; R82 := closure(Function #16)
565 [-]: MOVE      R0 R81       ; R0 := R81
566 [-]: CLOSURE   R83 16       ; R83 := closure(Function #17)
567 [-]: MOVE      R0 R5        ; R0 := R5
568 [-]: SETGLOBAL R83 K266     ; OnSaveLoadOutComplete := R83
569 [-]: CLOSURE   R83 17       ; R83 := closure(Function #18)
570 [-]: SETGLOBAL R83 K267     ; AddToGear := R83
571 [-]: CLOSURE   R83 18       ; R83 := closure(Function #19)
572 [-]: MOVE      R0 R26       ; R0 := R26
573 [-]: MOVE      R0 R4        ; R0 := R4
574 [-]: CLOSURE   R84 19       ; R84 := closure(Function #20)
575 [-]: MOVE      R0 R51       ; R0 := R51
576 [-]: MOVE      R0 R4        ; R0 := R4
577 [-]: MOVE      R0 R5        ; R0 := R5
578 [-]: CLOSURE   R85 20       ; R85 := closure(Function #21)
579 [-]: MOVE      R0 R54       ; R0 := R54
580 [-]: MOVE      R0 R4        ; R0 := R4
581 [-]: MOVE      R0 R74       ; R0 := R74
582 [-]: SETGLOBAL R85 K268     ; OnPurchaseSlotResult := R85
583 [-]: CLOSURE   R85 21       ; R85 := closure(Function #22)
584 [-]: MOVE      R0 R77       ; R0 := R77
585 [-]: MOVE      R0 R51       ; R0 := R51
586 [-]: MOVE      R0 R54       ; R0 := R54
587 [-]: SETGLOBAL R85 K269     ; ConfirmSlotPurchase := R85
588 [-]: CLOSURE   R85 22       ; R85 := closure(Function #23)
589 [-]: MOVE      R0 R5        ; R0 := R5
590 [-]: MOVE      R0 R4        ; R0 := R4
591 [-]: CLOSURE   R86 23       ; R86 := closure(Function #24)
592 [-]: MOVE      R0 R5        ; R0 := R5
593 [-]: SETGLOBAL R86 K270     ; OnInvalidBinError := R86
594 [-]: CLOSURE   R86 24       ; R86 := closure(Function #25)
595 [-]: MOVE      R0 R4        ; R0 := R4
596 [-]: CLOSURE   R87 25       ; R87 := closure(Function #26)
597 [-]: MOVE      R0 R5        ; R0 := R5
598 [-]: MOVE      R0 R78       ; R0 := R78
599 [-]: MOVE      R0 R74       ; R0 := R74
600 [-]: MOVE      R0 R86       ; R0 := R86
601 [-]: MOVE      R0 R70       ; R0 := R70
602 [-]: MOVE      R0 R4        ; R0 := R4
603 [-]: MOVE      R0 R51       ; R0 := R51
604 [-]: MOVE      R0 R77       ; R0 := R77
605 [-]: MOVE      R0 R83       ; R0 := R83
606 [-]: MOVE      R0 R85       ; R0 := R85
607 [-]: MOVE      R0 R84       ; R0 := R84
608 [-]: CLOSURE   R88 26       ; R88 := closure(Function #27)
609 [-]: MOVE      R0 R87       ; R0 := R87
610 [-]: SETGLOBAL R88 K271     ; CheckPurchaseRequirements := R88
611 [-]: CLOSURE   R88 27       ; R88 := closure(Function #28)
612 [-]: MOVE      R0 R82       ; R0 := R82
613 [-]: MOVE      R0 R51       ; R0 := R51
614 [-]: MOVE      R0 R4        ; R0 := R4
615 [-]: MOVE      R0 R5        ; R0 := R5
616 [-]: MOVE      R0 R83       ; R0 := R83
617 [-]: MOVE      R0 R87       ; R0 := R87
618 [-]: CLOSURE   R89 28       ; R89 := closure(Function #29)
619 [-]: MOVE      R0 R88       ; R0 := R88
620 [-]: SETGLOBAL R89 K272     ; ShowUpgradeDurabilityPopupForGifting := R89
621 [-]: CLOSURE   R89 29       ; R89 := closure(Function #30)
622 [-]: MOVE      R0 R83       ; R0 := R83
623 [-]: SETGLOBAL R89 K273     ; ConfirmCurrency := R89
624 [-]: CLOSURE   R89 30       ; R89 := closure(Function #31)
625 [-]: SETGLOBAL R89 K274     ; GetScreenStackSize := R89
626 [-]: CLOSURE   R89 31       ; R89 := closure(Function #32)
627 [-]: CLOSURE   R90 32       ; R90 := closure(Function #33)
628 [-]: MOVE      R0 R89       ; R0 := R89
629 [-]: CLOSURE   R91 33       ; R91 := closure(Function #34)
630 [-]: MOVE      R0 R89       ; R0 := R89
631 [-]: CLOSURE   R92 34       ; R92 := closure(Function #35)
632 [-]: CLOSURE   R93 35       ; R93 := closure(Function #36)
633 [-]: CLOSURE   R94 36       ; R94 := closure(Function #37)
634 [-]: MOVE      R0 R5        ; R0 := R5
635 [-]: MOVE      R0 R92       ; R0 := R92
636 [-]: MOVE      R0 R25       ; R0 := R25
637 [-]: MOVE      R0 R93       ; R0 := R93
638 [-]: MOVE      R0 R17       ; R0 := R17
639 [-]: MOVE      R0 R37       ; R0 := R37
640 [-]: CLOSURE   R95 37       ; R95 := closure(Function #38)
641 [-]: SETGLOBAL R95 K275     ; IsMenuSuitAvatarShowing := R95
642 [-]: CLOSURE   R95 38       ; R95 := closure(Function #39)
643 [-]: MOVE      R0 R94       ; R0 := R94
644 [-]: SETGLOBAL R95 K276     ; SetupMenuSuit := R95
645 [-]: CLOSURE   R95 39       ; R95 := closure(Function #40)
646 [-]: MOVE      R0 R36       ; R0 := R36
647 [-]: CLOSURE   R96 40       ; R96 := closure(Function #41)
648 [-]: MOVE      R0 R95       ; R0 := R95
649 [-]: MOVE      R0 R2        ; R0 := R2
650 [-]: MOVE      R0 R5        ; R0 := R5
651 [-]: SETGLOBAL R96 K277     ; OnInitialInventorySync := R96
652 [-]: CLOSURE   R96 41       ; R96 := closure(Function #42)
653 [-]: SETGLOBAL R96 K278     ; OnInboxSync := R96
654 [-]: CLOSURE   R96 42       ; R96 := closure(Function #43)
655 [-]: MOVE      R0 R4        ; R0 := R4
656 [-]: SETGLOBAL R96 K279     ; OnSyncTwitchDrops := R96
657 [-]: CLOSURE   R96 43       ; R96 := closure(Function #44)
658 [-]: MOVE      R0 R4        ; R0 := R4
659 [-]: SETGLOBAL R96 K280     ; OnSyncAmazonEntitlemments := R96
660 [-]: CLOSURE   R96 44       ; R96 := closure(Function #45)
661 [-]: SETGLOBAL R96 K281     ; OnLoginRewardSync := R96
662 [-]: CLOSURE   R96 45       ; R96 := closure(Function #46)
663 [-]: CLOSURE   R97 46       ; R97 := closure(Function #47)
664 [-]: MOVE      R0 R5        ; R0 := R5
665 [-]: MOVE      R0 R90       ; R0 := R90
666 [-]: MOVE      R0 R94       ; R0 := R94
667 [-]: CLOSURE   R98 47       ; R98 := closure(Function #48)
668 [-]: MOVE      R0 R55       ; R0 := R55
669 [-]: CLOSURE   R99 48       ; R99 := closure(Function #49)
670 [-]: CLOSURE   R100 49      ; R100 := closure(Function #50)
671 [-]: MOVE      R0 R4        ; R0 := R4
672 [-]: MOVE      R0 R5        ; R0 := R5
673 [-]: CLOSURE   R101 50      ; R101 := closure(Function #51)
674 [-]: MOVE      R0 R100      ; R0 := R100
675 [-]: SETGLOBAL R101 K282    ; PlayCameraTransition := R101
676 [-]: CLOSURE   R101 51      ; R101 := closure(Function #52)
677 [-]: CLOSURE   R102 52      ; R102 := closure(Function #53)
678 [-]: MOVE      R0 R101      ; R0 := R101
679 [-]: SETGLOBAL R102 K283    ; ClearCurrentCameraSpot := R102
680 [-]: CLOSURE   R102 53      ; R102 := closure(Function #54)
681 [-]: MOVE      R0 R28       ; R0 := R28
682 [-]: CLOSURE   R103 54      ; R103 := closure(Function #55)
683 [-]: MOVE      R0 R102      ; R0 := R102
684 [-]: SETGLOBAL R103 K284    ; FadeInOut := R103
685 [-]: CLOSURE   R103 55      ; R103 := closure(Function #56)
686 [-]: MOVE      R0 R30       ; R0 := R30
687 [-]: CLOSURE   R54 56       ; R54 := closure(Function #57)
688 [-]: MOVE      R0 R4        ; R0 := R4
689 [-]: CLOSURE   R104 57      ; R104 := closure(Function #58)
690 [-]: MOVE      R0 R54       ; R0 := R54
691 [-]: SETGLOBAL R104 K285    ; ShowBlockingMessage := R104
692 [-]: CLOSURE   R104 58      ; R104 := closure(Function #59)
693 [-]: MOVE      R0 R53       ; R0 := R53
694 [-]: SETGLOBAL R104 K286    ; NotifyWorldStateChanged := R104
695 [-]: CLOSURE   R104 59      ; R104 := closure(Function #60)
696 [-]: MOVE      R0 R54       ; R0 := R54
697 [-]: CLOSURE   R105 60      ; R105 := closure(Function #61)
698 [-]: CLOSURE   R106 61      ; R106 := closure(Function #62)
699 [-]: MOVE      R0 R105      ; R0 := R105
700 [-]: SETGLOBAL R106 K287    ; SetGlobalLobbyMessage := R106
701 [-]: CLOSURE   R106 62      ; R106 := closure(Function #63)
702 [-]: CLOSURE   R107 63      ; R107 := closure(Function #64)
703 [-]: CLOSURE   R108 64      ; R108 := closure(Function #65)
704 [-]: MOVE      R0 R5        ; R0 := R5
705 [-]: MOVE      R0 R35       ; R0 := R35
706 [-]: CLOSURE   R109 65      ; R109 := closure(Function #66)
707 [-]: MOVE      R0 R5        ; R0 := R5
708 [-]: MOVE      R0 R35       ; R0 := R35
709 [-]: CLOSURE   R110 66      ; R110 := closure(Function #67)
710 [-]: MOVE      R0 R34       ; R0 := R34
711 [-]: SETGLOBAL R110 K288    ; QuestCompleted := R110
712 [-]: CLOSURE   R110 67      ; R110 := closure(Function #68)
713 [-]: MOVE      R0 R5        ; R0 := R5
714 [-]: CLOSURE   R111 68      ; R111 := closure(Function #69)
715 [-]: MOVE      R0 R110      ; R0 := R110
716 [-]: SETGLOBAL R111 K289    ; CheckQuests := R111
717 [-]: CLOSURE   R111 69      ; R111 := closure(Function #70)
718 [-]: MOVE      R0 R22       ; R0 := R22
719 [-]: CLOSURE   R112 70      ; R112 := closure(Function #71)
720 [-]: MOVE      R0 R4        ; R0 := R4
721 [-]: MOVE      R0 R47       ; R0 := R47
722 [-]: MOVE      R0 R111      ; R0 := R111
723 [-]: MOVE      R0 R5        ; R0 := R5
724 [-]: MOVE      R0 R107      ; R0 := R107
725 [-]: CLOSURE   R113 71      ; R113 := closure(Function #72)
726 [-]: MOVE      R0 R5        ; R0 := R5
727 [-]: MOVE      R0 R30       ; R0 := R30
728 [-]: MOVE      R0 R6        ; R0 := R6
729 [-]: MOVE      R0 R4        ; R0 := R4
730 [-]: MOVE      R0 R0        ; R0 := R0
731 [-]: MOVE      R0 R1        ; R0 := R1
732 [-]: CLOSURE   R114 72      ; R114 := closure(Function #73)
733 [-]: MOVE      R0 R5        ; R0 := R5
734 [-]: MOVE      R0 R30       ; R0 := R30
735 [-]: MOVE      R0 R4        ; R0 := R4
736 [-]: MOVE      R0 R72       ; R0 := R72
737 [-]: MOVE      R0 R71       ; R0 := R71
738 [-]: CLOSURE   R115 73      ; R115 := closure(Function #74)
739 [-]: MOVE      R0 R5        ; R0 := R5
740 [-]: MOVE      R0 R30       ; R0 := R30
741 [-]: MOVE      R0 R4        ; R0 := R4
742 [-]: CLOSURE   R116 74      ; R116 := closure(Function #75)
743 [-]: MOVE      R0 R5        ; R0 := R5
744 [-]: MOVE      R0 R4        ; R0 := R4
745 [-]: MOVE      R0 R2        ; R0 := R2
746 [-]: CLOSURE   R117 75      ; R117 := closure(Function #76)
747 [-]: MOVE      R0 R53       ; R0 := R53
748 [-]: CLOSURE   R118 76      ; R118 := closure(Function #77)
749 [-]: MOVE      R0 R62       ; R0 := R62
750 [-]: SETGLOBAL R118 K290    ; OnClaimRelayTasksComplete := R118
751 [-]: CLOSURE   R118 77      ; R118 := closure(Function #78)
752 [-]: MOVE      R0 R59       ; R0 := R59
753 [-]: CLOSURE   R119 78      ; R119 := closure(Function #79)
754 [-]: MOVE      R0 R119      ; R0 := R119
755 [-]: CLOSURE   R120 79      ; R120 := closure(Function #80)
756 [-]: MOVE      R0 R20       ; R0 := R20
757 [-]: MOVE      R0 R5        ; R0 := R5
758 [-]: MOVE      R0 R119      ; R0 := R119
759 [-]: MOVE      R0 R4        ; R0 := R4
760 [-]: CLOSURE   R121 80      ; R121 := closure(Function #81)
761 [-]: MOVE      R0 R65       ; R0 := R65
762 [-]: CLOSURE   R56 81       ; R56 := closure(Function #82)
763 [-]: MOVE      R0 R59       ; R0 := R59
764 [-]: MOVE      R0 R5        ; R0 := R5
765 [-]: MOVE      R0 R117      ; R0 := R117
766 [-]: MOVE      R0 R19       ; R0 := R19
767 [-]: MOVE      R0 R11       ; R0 := R11
768 [-]: MOVE      R0 R18       ; R0 := R18
769 [-]: MOVE      R0 R60       ; R0 := R60
770 [-]: MOVE      R0 R4        ; R0 := R4
771 [-]: MOVE      R0 R16       ; R0 := R16
772 [-]: MOVE      R0 R8        ; R0 := R8
773 [-]: MOVE      R0 R9        ; R0 := R9
774 [-]: MOVE      R0 R10       ; R0 := R10
775 [-]: MOVE      R0 R115      ; R0 := R115
776 [-]: MOVE      R0 R113      ; R0 := R113
777 [-]: MOVE      R0 R114      ; R0 := R114
778 [-]: MOVE      R0 R116      ; R0 := R116
779 [-]: MOVE      R0 R118      ; R0 := R118
780 [-]: MOVE      R0 R120      ; R0 := R120
781 [-]: MOVE      R0 R121      ; R0 := R121
782 [-]: CLOSURE   R122 82      ; R122 := closure(Function #83)
783 [-]: MOVE      R0 R4        ; R0 := R4
784 [-]: CLOSURE   R123 83      ; R123 := closure(Function #84)
785 [-]: MOVE      R0 R122      ; R0 := R122
786 [-]: SETGLOBAL R123 K291    ; ShowRequireExitMessage := R123
787 [-]: CLOSURE   R123 84      ; R123 := closure(Function #85)
788 [-]: MOVE      R0 R119      ; R0 := R119
789 [-]: SETGLOBAL R123 K292    ; RequiemMovieDone := R123
790 [-]: CLOSURE   R123 85      ; R123 := closure(Function #86)
791 [-]: MOVE      R0 R5        ; R0 := R5
792 [-]: MOVE      R0 R120      ; R0 := R120
793 [-]: SETGLOBAL R123 K293    ; OnInventorySyncCallback := R123
794 [-]: CLOSURE   R123 86      ; R123 := closure(Function #87)
795 [-]: MOVE      R0 R5        ; R0 := R5
796 [-]: MOVE      R0 R32       ; R0 := R32
797 [-]: MOVE      R0 R31       ; R0 := R31
798 [-]: MOVE      R0 R122      ; R0 := R122
799 [-]: MOVE      R0 R33       ; R0 := R33
800 [-]: MOVE      R0 R56       ; R0 := R56
801 [-]: SETGLOBAL R123 K294    ; OnSyncWorldState := R123
802 [-]: CLOSURE   R123 87      ; R123 := closure(Function #88)
803 [-]: MOVE      R0 R30       ; R0 := R30
804 [-]: CLOSURE   R124 88      ; R124 := closure(Function #89)
805 [-]: CLOSURE   R125 89      ; R125 := closure(Function #90)
806 [-]: MOVE      R0 R4        ; R0 := R4
807 [-]: MOVE      R0 R123      ; R0 := R123
808 [-]: SETGLOBAL R125 K295    ; RegisterWorldStateCallback := R125
809 [-]: CLOSURE   R125 90      ; R125 := closure(Function #91)
810 [-]: MOVE      R0 R52       ; R0 := R52
811 [-]: MOVE      R0 R39       ; R0 := R39
812 [-]: CLOSURE   R53 91       ; R53 := closure(Function #92)
813 [-]: MOVE      R0 R56       ; R0 := R56
814 [-]: CLOSURE   R126 92      ; R126 := closure(Function #93)
815 [-]: MOVE      R0 R40       ; R0 := R40
816 [-]: CLOSURE   R127 93      ; R127 := closure(Function #94)
817 [-]: MOVE      R0 R38       ; R0 := R38
818 [-]: CLOSURE   R128 94      ; R128 := closure(Function #95)
819 [-]: MOVE      R0 R127      ; R0 := R127
820 [-]: CLOSURE   R129 95      ; R129 := closure(Function #96)
821 [-]: MOVE      R0 R128      ; R0 := R128
822 [-]: MOVE      R0 R38       ; R0 := R38
823 [-]: SETGLOBAL R129 K296    ; ToggleOmegaDiorama := R129
824 [-]: CLOSURE   R129 96      ; R129 := closure(Function #97)
825 [-]: MOVE      R0 R34       ; R0 := R34
826 [-]: MOVE      R0 R108      ; R0 := R108
827 [-]: CLOSURE   R130 97      ; R130 := closure(Function #98)
828 [-]: MOVE      R0 R5        ; R0 := R5
829 [-]: CLOSURE   R131 98      ; R131 := closure(Function #99)
830 [-]: MOVE      R0 R4        ; R0 := R4
831 [-]: SETGLOBAL R131 K297    ; OnRerollsCompleted := R131
832 [-]: CLOSURE   R131 99      ; R131 := closure(Function #100)
833 [-]: MOVE      R0 R38       ; R0 := R38
834 [-]: SETGLOBAL R131 K298    ; OnFinishedShowingIdentifiedOmegas := R131
835 [-]: CLOSURE   R131 100     ; R131 := closure(Function #101)
836 [-]: MOVE      R0 R34       ; R0 := R34
837 [-]: MOVE      R0 R109      ; R0 := R109
838 [-]: MOVE      R0 R36       ; R0 := R36
839 [-]: MOVE      R0 R128      ; R0 := R128
840 [-]: CLOSURE   R132 101     ; R132 := closure(Function #102)
841 [-]: MOVE      R0 R37       ; R0 := R37
842 [-]: MOVE      R0 R34       ; R0 := R34
843 [-]: MOVE      R0 R109      ; R0 := R109
844 [-]: MOVE      R0 R12       ; R0 := R12
845 [-]: CLOSURE   R133 102     ; R133 := closure(Function #103)
846 [-]: MOVE      R0 R4        ; R0 := R4
847 [-]: MOVE      R0 R5        ; R0 := R5
848 [-]: MOVE      R0 R97       ; R0 := R97
849 [-]: MOVE      R0 R93       ; R0 := R93
850 [-]: MOVE      R0 R94       ; R0 := R94
851 [-]: MOVE      R0 R3        ; R0 := R3
852 [-]: MOVE      R0 R103      ; R0 := R103
853 [-]: MOVE      R0 R54       ; R0 := R54
854 [-]: CLOSURE   R134 103     ; R134 := closure(Function #104)
855 [-]: MOVE      R0 R5        ; R0 := R5
856 [-]: CLOSURE   R135 104     ; R135 := closure(Function #105)
857 [-]: MOVE      R0 R5        ; R0 := R5
858 [-]: MOVE      R0 R134      ; R0 := R134
859 [-]: CLOSURE   R136 105     ; R136 := closure(Function #106)
860 [-]: CLOSURE   R137 106     ; R137 := closure(Function #107)
861 [-]: MOVE      R0 R136      ; R0 := R136
862 [-]: SETGLOBAL R137 K299    ; ShowFragmentScreen := R137
863 [-]: CLOSURE   R137 107     ; R137 := closure(Function #108)
864 [-]: CLOSURE   R138 108     ; R138 := closure(Function #109)
865 [-]: MOVE      R0 R137      ; R0 := R137
866 [-]: SETGLOBAL R138 K300    ; ShowActionFigureScreen := R138
867 [-]: CLOSURE   R138 109     ; R138 := closure(Function #110)
868 [-]: CLOSURE   R139 110     ; R139 := closure(Function #111)
869 [-]: MOVE      R0 R138      ; R0 := R138
870 [-]: SETGLOBAL R139 K301    ; ShowLightCustScreen := R139
871 [-]: CLOSURE   R139 111     ; R139 := closure(Function #112)
872 [-]: MOVE      R0 R5        ; R0 := R5
873 [-]: MOVE      R0 R73       ; R0 := R73
874 [-]: MOVE      R0 R24       ; R0 := R24
875 [-]: MOVE      R0 R45       ; R0 := R45
876 [-]: MOVE      R0 R136      ; R0 := R136
877 [-]: MOVE      R0 R137      ; R0 := R137
878 [-]: MOVE      R0 R138      ; R0 := R138
879 [-]: MOVE      R0 R68       ; R0 := R68
880 [-]: MOVE      R0 R69       ; R0 := R69
881 [-]: MOVE      R0 R23       ; R0 := R23
882 [-]: MOVE      R0 R67       ; R0 := R67
883 [-]: CLOSURE   R140 112     ; R140 := closure(Function #113)
884 [-]: MOVE      R0 R4        ; R0 := R4
885 [-]: MOVE      R0 R44       ; R0 := R44
886 [-]: MOVE      R0 R14       ; R0 := R14
887 [-]: CLOSURE   R141 113     ; R141 := closure(Function #114)
888 [-]: MOVE      R0 R140      ; R0 := R140
889 [-]: MOVE      R0 R44       ; R0 := R44
890 [-]: SETGLOBAL R141 K302    ; OnVignetteStreamed := R141
891 [-]: CLOSURE   R141 114     ; R141 := closure(Function #115)
892 [-]: SETGLOBAL R141 K303    ; OnVignetteRemoved := R141
893 [-]: CLOSURE   R141 115     ; R141 := closure(Function #116)
894 [-]: MOVE      R0 R14       ; R0 := R14
895 [-]: MOVE      R0 R140      ; R0 := R140
896 [-]: CLOSURE   R142 116     ; R142 := closure(Function #117)
897 [-]: MOVE      R0 R39       ; R0 := R39
898 [-]: MOVE      R0 R13       ; R0 := R13
899 [-]: CLOSURE   R143 117     ; R143 := closure(Function #118)
900 [-]: CLOSURE   R144 118     ; R144 := closure(Function #119)
901 [-]: MOVE      R0 R5        ; R0 := R5
902 [-]: CLOSURE   R145 119     ; R145 := closure(Function #120)
903 [-]: MOVE      R0 R144      ; R0 := R144
904 [-]: SETGLOBAL R145 K304    ; OnHostFavouriteWarframeUpdated := R145
905 [-]: CLOSURE   R145 120     ; R145 := closure(Function #121)
906 [-]: MOVE      R0 R144      ; R0 := R144
907 [-]: CLOSURE   R146 121     ; R146 := closure(Function #122)
908 [-]: MOVE      R0 R145      ; R0 := R145
909 [-]: SETGLOBAL R146 K305    ; UpdateShipFavouriteWarframe := R146
910 [-]: CLOSURE   R146 122     ; R146 := closure(Function #123)
911 [-]: MOVE      R0 R66       ; R0 := R66
912 [-]: MOVE      R0 R144      ; R0 := R144
913 [-]: CLOSURE   R147 123     ; R147 := closure(Function #124)
914 [-]: MOVE      R0 R146      ; R0 := R146
915 [-]: SETGLOBAL R147 K306    ; UpdateApartmentDisplayWarframe := R147
916 [-]: CLOSURE   R147 124     ; R147 := closure(Function #125)
917 [-]: CLOSURE   R148 125     ; R148 := closure(Function #126)
918 [-]: MOVE      R0 R147      ; R0 := R147
919 [-]: SETGLOBAL R148 K307    ; CreateHelminthSuitLoader := R148
920 [-]: CLOSURE   R148 126     ; R148 := closure(Function #127)
921 [-]: MOVE      R0 R21       ; R0 := R21
922 [-]: CLOSURE   R149 127     ; R149 := closure(Function #128)
923 [-]: CLOSURE   R150 128     ; R150 := closure(Function #129)
924 [-]: MOVE      R0 R149      ; R0 := R149
925 [-]: CLOSURE   R151 129     ; R151 := closure(Function #130)
926 [-]: SETGLOBAL R151 K308    ; FriendRequestReceived := R151
927 [-]: CLOSURE   R151 130     ; R151 := closure(Function #131)
928 [-]: MOVE      R0 R4        ; R0 := R4
929 [-]: SETGLOBAL R151 K309    ; FriendNotificationSelected := R151
930 [-]: CLOSURE   R151 131     ; R151 := closure(Function #132)
931 [-]: MOVE      R0 R149      ; R0 := R149
932 [-]: SETGLOBAL R151 K310    ; FriendRequestOptionChosen := R151
933 [-]: CLOSURE   R151 132     ; R151 := closure(Function #133)
934 [-]: MOVE      R0 R4        ; R0 := R4
935 [-]: SETGLOBAL R151 K311    ; OnGetFriendsResult := R151
936 [-]: CLOSURE   R151 133     ; R151 := closure(Function #134)
937 [-]: MOVE      R0 R4        ; R0 := R4
938 [-]: CLOSURE   R152 134     ; R152 := closure(Function #135)
939 [-]: MOVE      R0 R151      ; R0 := R151
940 [-]: SETGLOBAL R152 K312    ; OnConfirmFriendResult := R152
941 [-]: CLOSURE   R152 135     ; R152 := closure(Function #136)
942 [-]: MOVE      R0 R151      ; R0 := R151
943 [-]: SETGLOBAL R152 K313    ; OnRemoveFriendResult := R152
944 [-]: CLOSURE   R152 136     ; R152 := closure(Function #137)
945 [-]: MOVE      R0 R4        ; R0 := R4
946 [-]: SETGLOBAL R152 K314    ; OnLeaveDojoSquadDone := R152
947 [-]: CLOSURE   R152 137     ; R152 := closure(Function #138)
948 [-]: MOVE      R0 R58       ; R0 := R58
949 [-]: MOVE      R0 R5        ; R0 := R5
950 [-]: MOVE      R0 R19       ; R0 := R19
951 [-]: MOVE      R0 R7        ; R0 := R7
952 [-]: CLOSURE   R153 138     ; R153 := closure(Function #139)
953 [-]: MOVE      R0 R5        ; R0 := R5
954 [-]: CLOSURE   R154 139     ; R154 := closure(Function #140)
955 [-]: MOVE      R0 R153      ; R0 := R153
956 [-]: CLOSURE   R155 140     ; R155 := closure(Function #141)
957 [-]: MOVE      R0 R15       ; R0 := R15
958 [-]: CLOSURE   R156 141     ; R156 := closure(Function #142)
959 [-]: MOVE      R0 R15       ; R0 := R15
960 [-]: CLOSURE   R157 142     ; R157 := closure(Function #143)
961 [-]: MOVE      R0 R15       ; R0 := R15
962 [-]: MOVE      R0 R155      ; R0 := R155
963 [-]: MOVE      R0 R156      ; R0 := R156
964 [-]: CLOSURE   R158 143     ; R158 := closure(Function #144)
965 [-]: MOVE      R0 R157      ; R0 := R157
966 [-]: SETGLOBAL R158 K315    ; StyleChangedCallback := R158
967 [-]: CLOSURE   R158 144     ; R158 := closure(Function #145)
968 [-]: MOVE      R0 R157      ; R0 := R157
969 [-]: MOVE      R0 R42       ; R0 := R42
970 [-]: MOVE      R0 R139      ; R0 := R139
971 [-]: MOVE      R0 R5        ; R0 := R5
972 [-]: MOVE      R0 R43       ; R0 := R43
973 [-]: MOVE      R0 R47       ; R0 := R47
974 [-]: MOVE      R0 R4        ; R0 := R4
975 [-]: MOVE      R0 R44       ; R0 := R44
976 [-]: MOVE      R0 R141      ; R0 := R141
977 [-]: MOVE      R0 R148      ; R0 := R148
978 [-]: MOVE      R0 R46       ; R0 := R46
979 [-]: MOVE      R0 R140      ; R0 := R140
980 [-]: MOVE      R0 R110      ; R0 := R110
981 [-]: MOVE      R0 R63       ; R0 := R63
982 [-]: MOVE      R0 R30       ; R0 := R30
983 [-]: MOVE      R0 R94       ; R0 := R94
984 [-]: MOVE      R0 R97       ; R0 := R97
985 [-]: MOVE      R0 R98       ; R0 := R98
986 [-]: MOVE      R0 R112      ; R0 := R112
987 [-]: MOVE      R0 R133      ; R0 := R133
988 [-]: MOVE      R0 R143      ; R0 := R143
989 [-]: MOVE      R0 R131      ; R0 := R131
990 [-]: MOVE      R0 R132      ; R0 := R132
991 [-]: MOVE      R0 R154      ; R0 := R154
992 [-]: MOVE      R0 R129      ; R0 := R129
993 [-]: MOVE      R0 R130      ; R0 := R130
994 [-]: MOVE      R0 R2        ; R0 := R2
995 [-]: MOVE      R0 R74       ; R0 := R74
996 [-]: MOVE      R0 R33       ; R0 := R33
997 [-]: MOVE      R0 R103      ; R0 := R103
998 [-]: MOVE      R0 R122      ; R0 := R122
999 [-]: MOVE      R0 R17       ; R0 := R17
1000 [-]: MOVE      R0 R39       ; R0 := R39
1001 [-]: MOVE      R0 R13       ; R0 := R13
1002 [-]: MOVE      R0 R142      ; R0 := R142
1003 [-]: MOVE      R0 R40       ; R0 := R40
1004 [-]: MOVE      R0 R58       ; R0 := R58
1005 [-]: MOVE      R0 R152      ; R0 := R152
1006 [-]: MOVE      R0 R28       ; R0 := R28
1007 [-]: MOVE      R0 R29       ; R0 := R29
1008 [-]: MOVE      R0 R49       ; R0 := R49
1009 [-]: MOVE      R0 R50       ; R0 := R50
1010 [-]: MOVE      R0 R150      ; R0 := R150
1011 [-]: SETGLOBAL R158 K316    ; Update := R158
1012 [-]: CLOSURE   R158 145     ; R158 := closure(Function #146)
1013 [-]: CLOSURE   R159 146     ; R159 := closure(Function #147)
1014 [-]: MOVE      R0 R3        ; R0 := R3
1015 [-]: MOVE      R0 R90       ; R0 := R90
1016 [-]: CLOSURE   R160 147     ; R160 := closure(Function #148)
1017 [-]: MOVE      R0 R3        ; R0 := R3
1018 [-]: MOVE      R0 R91       ; R0 := R91
1019 [-]: CLOSURE   R161 148     ; R161 := closure(Function #149)
1020 [-]: MOVE      R0 R3        ; R0 := R3
1021 [-]: SETGLOBAL R161 K317    ; ForceClearChildMovie := R161
1022 [-]: CLOSURE   R161 149     ; R161 := closure(Function #150)
1023 [-]: MOVE      R0 R54       ; R0 := R54
1024 [-]: SETGLOBAL R161 K318    ; OnMovieLoaded := R161
1025 [-]: CLOSURE   R161 150     ; R161 := closure(Function #151)
1026 [-]: MOVE      R0 R3        ; R0 := R3
1027 [-]: MOVE      R0 R106      ; R0 := R106
1028 [-]: MOVE      R0 R54       ; R0 := R54
1029 [-]: MOVE      R0 R89       ; R0 := R89
1030 [-]: CLOSURE   R162 151     ; R162 := closure(Function #152)
1031 [-]: MOVE      R0 R161      ; R0 := R161
1032 [-]: SETGLOBAL R162 K319    ; OpenScreenAsyncContextReset := R162
1033 [-]: CLOSURE   R162 152     ; R162 := closure(Function #153)
1034 [-]: CLOSURE   R163 153     ; R163 := closure(Function #154)
1035 [-]: MOVE      R0 R54       ; R0 := R54
1036 [-]: CLOSURE   R164 154     ; R164 := closure(Function #155)
1037 [-]: MOVE      R0 R163      ; R0 := R163
1038 [-]: SETGLOBAL R164 K320    ; TerminateQuickMatch := R164
1039 [-]: CLOSURE   R164 155     ; R164 := closure(Function #156)
1040 [-]: MOVE      R0 R158      ; R0 := R158
1041 [-]: MOVE      R0 R91       ; R0 := R91
1042 [-]: MOVE      R0 R4        ; R0 := R4
1043 [-]: CLOSURE   R165 156     ; R165 := closure(Function #157)
1044 [-]: MOVE      R0 R5        ; R0 := R5
1045 [-]: MOVE      R0 R99       ; R0 := R99
1046 [-]: MOVE      R0 R104      ; R0 := R104
1047 [-]: MOVE      R0 R3        ; R0 := R3
1048 [-]: MOVE      R0 R106      ; R0 := R106
1049 [-]: MOVE      R0 R91       ; R0 := R91
1050 [-]: MOVE      R0 R4        ; R0 := R4
1051 [-]: MOVE      R0 R90       ; R0 := R90
1052 [-]: CLOSURE   R166 157     ; R166 := closure(Function #158)
1053 [-]: MOVE      R0 R3        ; R0 := R3
1054 [-]: MOVE      R0 R90       ; R0 := R90
1055 [-]: CLOSURE   R167 158     ; R167 := closure(Function #159)
1056 [-]: CLOSURE   R168 159     ; R168 := closure(Function #160)
1057 [-]: MOVE      R0 R89       ; R0 := R89
1058 [-]: CLOSURE   R169 160     ; R169 := closure(Function #161)
1059 [-]: CLOSURE   R170 161     ; R170 := closure(Function #162)
1060 [-]: MOVE      R0 R169      ; R0 := R169
1061 [-]: CLOSURE   R171 162     ; R171 := closure(Function #163)
1062 [-]: CLOSURE   R172 163     ; R172 := closure(Function #164)
1063 [-]: MOVE      R0 R171      ; R0 := R171
1064 [-]: SETGLOBAL R172 K321    ; ClearToMainMenu := R172
1065 [-]: CLOSURE   R172 164     ; R172 := closure(Function #165)
1066 [-]: MOVE      R0 R171      ; R0 := R171
1067 [-]: MOVE      R0 R165      ; R0 := R165
1068 [-]: MOVE      R0 R170      ; R0 := R170
1069 [-]: CLOSURE   R173 165     ; R173 := closure(Function #166)
1070 [-]: MOVE      R0 R99       ; R0 := R99
1071 [-]: MOVE      R0 R104      ; R0 := R104
1072 [-]: MOVE      R0 R3        ; R0 := R3
1073 [-]: MOVE      R0 R91       ; R0 := R91
1074 [-]: CLOSURE   R174 166     ; R174 := closure(Function #167)
1075 [-]: CLOSURE   R175 167     ; R175 := closure(Function #168)
1076 [-]: MOVE      R0 R4        ; R0 := R4
1077 [-]: MOVE      R0 R5        ; R0 := R5
1078 [-]: CLOSURE   R176 168     ; R176 := closure(Function #169)
1079 [-]: MOVE      R0 R5        ; R0 := R5
1080 [-]: CLOSURE   R177 169     ; R177 := closure(Function #170)
1081 [-]: SETGLOBAL R177 K322    ; OnFcmKickOut := R177
1082 [-]: CLOSURE   R177 170     ; R177 := closure(Function #171)
1083 [-]: MOVE      R0 R4        ; R0 := R4
1084 [-]: SETGLOBAL R177 K323    ; OnWeGamePopUp := R177
1085 [-]: CLOSURE   R177 171     ; R177 := closure(Function #172)
1086 [-]: MOVE      R0 R48       ; R0 := R48
1087 [-]: MOVE      R0 R177      ; R0 := R177
1088 [-]: CLOSURE   R178 172     ; R178 := closure(Function #173)
1089 [-]: MOVE      R0 R15       ; R0 := R15
1090 [-]: SETGLOBAL R178 K324    ; ToggleForcedColorCorrection := R178
1091 [-]: CLOSURE   R178 173     ; R178 := closure(Function #174)
1092 [-]: MOVE      R0 R156      ; R0 := R156
1093 [-]: MOVE      R0 R5        ; R0 := R5
1094 [-]: MOVE      R0 R7        ; R0 := R7
1095 [-]: MOVE      R0 R35       ; R0 := R35
1096 [-]: MOVE      R0 R26       ; R0 := R26
1097 [-]: MOVE      R0 R4        ; R0 := R4
1098 [-]: MOVE      R0 R174      ; R0 := R174
1099 [-]: MOVE      R0 R177      ; R0 := R177
1100 [-]: MOVE      R0 R161      ; R0 := R161
1101 [-]: MOVE      R0 R162      ; R0 := R162
1102 [-]: MOVE      R0 R165      ; R0 := R165
1103 [-]: MOVE      R0 R172      ; R0 := R172
1104 [-]: MOVE      R0 R173      ; R0 := R173
1105 [-]: MOVE      R0 R164      ; R0 := R164
1106 [-]: MOVE      R0 R158      ; R0 := R158
1107 [-]: MOVE      R0 R106      ; R0 := R106
1108 [-]: MOVE      R0 R169      ; R0 := R169
1109 [-]: MOVE      R0 R166      ; R0 := R166
1110 [-]: MOVE      R0 R167      ; R0 := R167
1111 [-]: MOVE      R0 R159      ; R0 := R159
1112 [-]: MOVE      R0 R160      ; R0 := R160
1113 [-]: MOVE      R0 R168      ; R0 := R168
1114 [-]: MOVE      R0 R175      ; R0 := R175
1115 [-]: MOVE      R0 R176      ; R0 := R176
1116 [-]: MOVE      R0 R96       ; R0 := R96
1117 [-]: MOVE      R0 R125      ; R0 := R125
1118 [-]: MOVE      R0 R126      ; R0 := R126
1119 [-]: MOVE      R0 R56       ; R0 := R56
1120 [-]: MOVE      R0 R123      ; R0 := R123
1121 [-]: MOVE      R0 R30       ; R0 := R30
1122 [-]: MOVE      R0 R17       ; R0 := R17
1123 [-]: MOVE      R0 R127      ; R0 := R127
1124 [-]: SETGLOBAL R178 K325    ; Initialize := R178
1125 [-]: CLOSURE   R178 174     ; R178 := closure(Function #175)
1126 [-]: MOVE      R0 R4        ; R0 := R4
1127 [-]: SETGLOBAL R178 K326    ; Logoff := R178
1128 [-]: CLOSURE   R178 175     ; R178 := closure(Function #176)
1129 [-]: SETGLOBAL R178 K327    ; DebugSwitchProfile := R178
1130 [-]: CLOSURE   R178 176     ; R178 := closure(Function #177)
1131 [-]: MOVE      R0 R104      ; R0 := R104
1132 [-]: MOVE      R0 R102      ; R0 := R102
1133 [-]: MOVE      R0 R103      ; R0 := R103
1134 [-]: SETGLOBAL R178 K328    ; ConfirmLogoff := R178
1135 [-]: CLOSURE   R178 177     ; R178 := closure(Function #178)
1136 [-]: CLOSURE   R179 178     ; R179 := closure(Function #179)
1137 [-]: MOVE      R0 R178      ; R0 := R178
1138 [-]: SETGLOBAL R179 K329    ; CallMethodOnScreen := R179
1139 [-]: CLOSURE   R179 179     ; R179 := closure(Function #180)
1140 [-]: SETGLOBAL R179 K330    ; CallMethodOnScreenString := R179
1141 [-]: CLOSURE   R179 180     ; R179 := closure(Function #181)
1142 [-]: MOVE      R0 R178      ; R0 := R178
1143 [-]: SETGLOBAL R179 K331    ; CallMethodOnTopScreen := R179
1144 [-]: CLOSURE   R179 181     ; R179 := closure(Function #182)
1145 [-]: MOVE      R0 R4        ; R0 := R4
1146 [-]: SETGLOBAL R179 K332    ; SetBackgroundDepthTest := R179
1147 [-]: CLOSURE   R179 182     ; R179 := closure(Function #183)
1148 [-]: SETGLOBAL R179 K333    ; RefreshLoadout := R179
1149 [-]: CLOSURE   R179 183     ; R179 := closure(Function #184)
1150 [-]: SETGLOBAL R179 K334    ; CloseLoadout := R179
1151 [-]: CLOSURE   R179 184     ; R179 := closure(Function #185)
1152 [-]: MOVE      R0 R54       ; R0 := R54
1153 [-]: CLOSURE   R180 185     ; R180 := closure(Function #186)
1154 [-]: MOVE      R0 R54       ; R0 := R54
1155 [-]: CLOSURE   R181 186     ; R181 := closure(Function #187)
1156 [-]: MOVE      R0 R41       ; R0 := R41
1157 [-]: MOVE      R0 R4        ; R0 := R4
1158 [-]: CLOSURE   R182 187     ; R182 := closure(Function #188)
1159 [-]: MOVE      R0 R181      ; R0 := R181
1160 [-]: SETGLOBAL R182 K335    ; ProcessBoosterPacks := R182
1161 [-]: CLOSURE   R182 188     ; R182 := closure(Function #189)
1162 [-]: MOVE      R0 R41       ; R0 := R41
1163 [-]: MOVE      R0 R83       ; R0 := R83
1164 [-]: MOVE      R0 R180      ; R0 := R180
1165 [-]: MOVE      R0 R181      ; R0 := R181
1166 [-]: MOVE      R0 R5        ; R0 := R5
1167 [-]: CLOSURE   R183 189     ; R183 := closure(Function #190)
1168 [-]: MOVE      R0 R180      ; R0 := R180
1169 [-]: MOVE      R0 R4        ; R0 := R4
1170 [-]: MOVE      R0 R83       ; R0 := R83
1171 [-]: MOVE      R0 R182      ; R0 := R182
1172 [-]: SETGLOBAL R183 K336    ; OnPurchaseResults := R183
1173 [-]: CLOSURE   R183 190     ; R183 := closure(Function #191)
1174 [-]: MOVE      R0 R83       ; R0 := R83
1175 [-]: SETGLOBAL R183 K337    ; ConfirmPopup := R183
1176 [-]: CLOSURE   R183 191     ; R183 := closure(Function #192)
1177 [-]: MOVE      R0 R83       ; R0 := R83
1178 [-]: MOVE      R0 R27       ; R0 := R27
1179 [-]: MOVE      R0 R75       ; R0 := R75
1180 [-]: MOVE      R0 R76       ; R0 := R76
1181 [-]: SETGLOBAL R183 K338    ; ConfirmPopupNotEnoughPlatinum := R183
1182 [-]: CLOSURE   R183 192     ; R183 := closure(Function #193)
1183 [-]: MOVE      R0 R83       ; R0 := R83
1184 [-]: MOVE      R0 R82       ; R0 := R82
1185 [-]: MOVE      R0 R87       ; R0 := R87
1186 [-]: SETGLOBAL R183 K339    ; ConfirmDurability := R183
1187 [-]: CLOSURE   R183 193     ; R183 := closure(Function #194)
1188 [-]: SETGLOBAL R183 K340    ; ConfirmErrorPopup := R183
1189 [-]: CLOSURE   R183 194     ; R183 := closure(Function #195)
1190 [-]: SETGLOBAL R183 K341    ; OpenPrimeTokenPage := R183
1191 [-]: CLOSURE   R183 195     ; R183 := closure(Function #196)
1192 [-]: CLOSURE   R184 196     ; R184 := closure(Function #197)
1193 [-]: CLOSURE   R185 197     ; R185 := closure(Function #198)
1194 [-]: CLOSURE   R186 198     ; R186 := closure(Function #199)
1195 [-]: MOVE      R0 R185      ; R0 := R185
1196 [-]: MOVE      R0 R183      ; R0 := R183
1197 [-]: MOVE      R0 R4        ; R0 := R4
1198 [-]: MOVE      R0 R83       ; R0 := R83
1199 [-]: MOVE      R0 R184      ; R0 := R184
1200 [-]: MOVE      R0 R5        ; R0 := R5
1201 [-]: MOVE      R0 R179      ; R0 := R179
1202 [-]: SETGLOBAL R186 K342    ; ConfirmPurchase := R186
1203 [-]: CLOSURE   R186 199     ; R186 := closure(Function #200)
1204 [-]: MOVE      R0 R88       ; R0 := R88
1205 [-]: MOVE      R0 R5        ; R0 := R5
1206 [-]: MOVE      R0 R4        ; R0 := R4
1207 [-]: MOVE      R0 R82       ; R0 := R82
1208 [-]: MOVE      R0 R83       ; R0 := R83
1209 [-]: MOVE      R0 R51       ; R0 := R51
1210 [-]: MOVE      R0 R87       ; R0 := R87
1211 [-]: SETGLOBAL R186 K343    ; BuyItem := R186
1212 [-]: CLOSURE   R186 200     ; R186 := closure(Function #201)
1213 [-]: MOVE      R0 R171      ; R0 := R171
1214 [-]: MOVE      R0 R161      ; R0 := R161
1215 [-]: CLOSURE   R187 201     ; R187 := closure(Function #202)
1216 [-]: SETGLOBAL R187 K344    ; OpenPod := R187
1217 [-]: CLOSURE   R187 202     ; R187 := closure(Function #203)
1218 [-]: SETGLOBAL R187 K345    ; ClosePod := R187
1219 [-]: CLOSURE   R187 203     ; R187 := closure(Function #204)
1220 [-]: MOVE      R0 R4        ; R0 := R4
1221 [-]: SETGLOBAL R187 K346    ; OnProfileFocused := R187
1222 [-]: CLOSURE   R187 204     ; R187 := closure(Function #205)
1223 [-]: MOVE      R0 R186      ; R0 := R186
1224 [-]: SETGLOBAL R187 K347    ; ConfirmLobby := R187
1225 [-]: CLOSURE   R187 205     ; R187 := closure(Function #206)
1226 [-]: SETGLOBAL R187 K348    ; ExitLobby := R187
1227 [-]: CLOSURE   R187 206     ; R187 := closure(Function #207)
1228 [-]: MOVE      R0 R4        ; R0 := R4
1229 [-]: SETGLOBAL R187 K349    ; RollOver := R187
1230 [-]: CLOSURE   R187 207     ; R187 := closure(Function #208)
1231 [-]: SETGLOBAL R187 K350    ; onViewportSizeChanged := R187
1232 [-]: CLOSURE   R187 208     ; R187 := closure(Function #209)
1233 [-]: MOVE      R0 R17       ; R0 := R17
1234 [-]: SETGLOBAL R187 K252    ; ActiveQuestLoaded := R187
1235 [-]: CLOSURE   R187 209     ; R187 := closure(Function #210)
1236 [-]: MOVE      R0 R4        ; R0 := R4
1237 [-]: SETGLOBAL R187 K351    ; OnAccountNameChangedCallback := R187
1238 [-]: CLOSURE   R55 210      ; R55 := closure(Function #211)
1239 [-]: MOVE      R0 R5        ; R0 := R5
1240 [-]: CLOSURE   R187 211     ; R187 := closure(Function #212)
1241 [-]: MOVE      R0 R4        ; R0 := R4
1242 [-]: MOVE      R0 R187      ; R0 := R187
1243 [-]: CLOSURE   R188 212     ; R188 := closure(Function #213)
1244 [-]: MOVE      R0 R59       ; R0 := R59
1245 [-]: MOVE      R0 R5        ; R0 := R5
1246 [-]: MOVE      R0 R102      ; R0 := R102
1247 [-]: MOVE      R0 R101      ; R0 := R101
1248 [-]: MOVE      R0 R94       ; R0 := R94
1249 [-]: MOVE      R0 R110      ; R0 := R110
1250 [-]: MOVE      R0 R30       ; R0 := R30
1251 [-]: MOVE      R0 R56       ; R0 := R56
1252 [-]: MOVE      R0 R123      ; R0 := R123
1253 [-]: MOVE      R0 R187      ; R0 := R187
1254 [-]: MOVE      R0 R124      ; R0 := R124
1255 [-]: MOVE      R0 R120      ; R0 := R120
1256 [-]: MOVE      R0 R49       ; R0 := R49
1257 [-]: SETGLOBAL R188 K352    ; OnLoginDone := R188
1258 [-]: CLOSURE   R188 213     ; R188 := closure(Function #214)
1259 [-]: MOVE      R0 R2        ; R0 := R2
1260 [-]: SETGLOBAL R188 K353    ; QueueTeshinHardModeNag := R188
1261 [-]: CLOSURE   R188 214     ; R188 := closure(Function #215)
1262 [-]: MOVE      R0 R103      ; R0 := R103
1263 [-]: SETGLOBAL R188 K354    ; DoLogoff := R188
1264 [-]: CLOSURE   R188 215     ; R188 := closure(Function #216)
1265 [-]: MOVE      R0 R5        ; R0 := R5
1266 [-]: MOVE      R0 R4        ; R0 := R4
1267 [-]: SETGLOBAL R188 K355    ; HttpRequestFailureCallback := R188
1268 [-]: CLOSURE   R188 216     ; R188 := closure(Function #217)
1269 [-]: MOVE      R0 R4        ; R0 := R4
1270 [-]: SETGLOBAL R188 K356    ; HttpRequestAuthFailureCallback := R188
1271 [-]: CLOSURE   R188 217     ; R188 := closure(Function #218)
1272 [-]: MOVE      R0 R5        ; R0 := R5
1273 [-]: MOVE      R0 R103      ; R0 := R103
1274 [-]: SETGLOBAL R188 K357    ; OnUserChangedCallback := R188
1275 [-]: CLOSURE   R188 218     ; R188 := closure(Function #219)
1276 [-]: MOVE      R0 R57       ; R0 := R57
1277 [-]: SETGLOBAL R188 K358    ; OnConfirmation := R188
1278 [-]: CLOSURE   R188 219     ; R188 := closure(Function #220)
1279 [-]: MOVE      R0 R57       ; R0 := R57
1280 [-]: MOVE      R0 R4        ; R0 := R4
1281 [-]: SETGLOBAL R188 K359    ; OnUserGamepadRemoved := R188
1282 [-]: CLOSURE   R188 220     ; R188 := closure(Function #221)
1283 [-]: MOVE      R0 R57       ; R0 := R57
1284 [-]: MOVE      R0 R4        ; R0 := R4
1285 [-]: SETGLOBAL R188 K360    ; OnUserGamepadRemovedSwitch := R188
1286 [-]: CLOSURE   R188 221     ; R188 := closure(Function #222)
1287 [-]: MOVE      R0 R4        ; R0 := R4
1288 [-]: SETGLOBAL R188 K361    ; OnLoginExpired := R188
1289 [-]: CLOSURE   R188 222     ; R188 := closure(Function #223)
1290 [-]: SETGLOBAL R188 K362    ; GameInviteReceivedCallback := R188
1291 [-]: CLOSURE   R188 223     ; R188 := closure(Function #224)
1292 [-]: SETGLOBAL R188 K363    ; OnOnlinePlayTypeChanged := R188
1293 [-]: CLOSURE   R188 224     ; R188 := closure(Function #225)
1294 [-]: SETGLOBAL R188 K364    ; SelectMissionDeckRegion := R188
1295 [-]: CLOSURE   R188 225     ; R188 := closure(Function #226)
1296 [-]: MOVE      R0 R5        ; R0 := R5
1297 [-]: MOVE      R0 R17       ; R0 := R17
1298 [-]: SETGLOBAL R188 K365    ; IconCacheFlushed := R188
1299 [-]: CLOSURE   R188 226     ; R188 := closure(Function #227)
1300 [-]: MOVE      R0 R135      ; R0 := R135
1301 [-]: SETGLOBAL R188 K366    ; UpdateShipDecoCapacity := R188
1302 [-]: CLOSURE   R188 227     ; R188 := closure(Function #228)
1303 [-]: MOVE      R0 R54       ; R0 := R54
1304 [-]: MOVE      R0 R4        ; R0 := R4
1305 [-]: MOVE      R0 R5        ; R0 := R5
1306 [-]: MOVE      R0 R67       ; R0 := R67
1307 [-]: MOVE      R0 R43       ; R0 := R43
1308 [-]: MOVE      R0 R42       ; R0 := R42
1309 [-]: SETGLOBAL R188 K367    ; OnShipDecosReset := R188
1310 [-]: CLOSURE   R188 228     ; R188 := closure(Function #229)
1311 [-]: MOVE      R0 R5        ; R0 := R5
1312 [-]: MOVE      R0 R54       ; R0 := R54
1313 [-]: SETGLOBAL R188 K368    ; ResetShipDecos := R188
1314 [-]: CLOSURE   R67 229      ; R67 := closure(Function #230)
1315 [-]: MOVE      R0 R5        ; R0 := R5
1316 [-]: MOVE      R0 R135      ; R0 := R135
1317 [-]: MOVE      R0 R139      ; R0 := R139
1318 [-]: MOVE      R0 R67       ; R0 := R67
1319 [-]: CLOSURE   R188 230     ; R188 := closure(Function #231)
1320 [-]: MOVE      R0 R5        ; R0 := R5
1321 [-]: MOVE      R0 R43       ; R0 := R43
1322 [-]: MOVE      R0 R67       ; R0 := R67
1323 [-]: MOVE      R0 R42       ; R0 := R42
1324 [-]: SETGLOBAL R188 K369    ; RefreshShipDecos := R188
1325 [-]: CLOSURE   R188 231     ; R188 := closure(Function #232)
1326 [-]: MOVE      R0 R14       ; R0 := R14
1327 [-]: MOVE      R0 R44       ; R0 := R44
1328 [-]: CLOSURE   R189 232     ; R189 := closure(Function #233)
1329 [-]: MOVE      R0 R5        ; R0 := R5
1330 [-]: CLOSURE   R190 233     ; R190 := closure(Function #234)
1331 [-]: MOVE      R0 R189      ; R0 := R189
1332 [-]: SETGLOBAL R190 K370    ; RefreshLotusHelmetTrigger := R190
1333 [-]: CLOSURE   R190 234     ; R190 := closure(Function #235)
1334 [-]: MOVE      R0 R67       ; R0 := R67
1335 [-]: MOVE      R0 R42       ; R0 := R42
1336 [-]: MOVE      R0 R188      ; R0 := R188
1337 [-]: MOVE      R0 R147      ; R0 := R147
1338 [-]: MOVE      R0 R189      ; R0 := R189
1339 [-]: MOVE      R0 R145      ; R0 := R145
1340 [-]: SETGLOBAL R190 K371    ; SetupPlayerShip := R190
1341 [-]: CLOSURE   R190 235     ; R190 := closure(Function #236)
1342 [-]: MOVE      R0 R5        ; R0 := R5
1343 [-]: MOVE      R0 R43       ; R0 := R43
1344 [-]: MOVE      R0 R67       ; R0 := R67
1345 [-]: MOVE      R0 R66       ; R0 := R66
1346 [-]: MOVE      R0 R146      ; R0 := R146
1347 [-]: SETGLOBAL R190 K372    ; SetupPlayerApartment := R190
1348 [-]: CLOSURE   R190 236     ; R190 := closure(Function #237)
1349 [-]: SETGLOBAL R190 K373    ; OnDojoData := R190
1350 [-]: LOADBOOL  R190 0 0     ; R190 := false
1351 [-]: LOADK     R191 0       ; R191 := 0.000000
1352 [-]: LOADK     R192 0       ; R192 := 0.000000
1353 [-]: CLOSURE   R193 237     ; R193 := closure(Function #238)
1354 [-]: MOVE      R0 R190      ; R0 := R190
1355 [-]: MOVE      R0 R191      ; R0 := R191
1356 [-]: MOVE      R0 R192      ; R0 := R192
1357 [-]: SETGLOBAL R193 K374    ; ConfirmLoadOrbiterMessage := R193
1358 [-]: CLOSURE   R193 238     ; R193 := closure(Function #239)
1359 [-]: MOVE      R0 R190      ; R0 := R190
1360 [-]: MOVE      R0 R192      ; R0 := R192
1361 [-]: MOVE      R0 R4        ; R0 := R4
1362 [-]: CLOSURE   R194 239     ; R194 := closure(Function #240)
1363 [-]: MOVE      R0 R152      ; R0 := R152
1364 [-]: SETGLOBAL R194 K375    ; OnLoadHubMessage := R194
1365 [-]: CLOSURE   R194 240     ; R194 := closure(Function #241)
1366 [-]: CLOSURE   R195 241     ; R195 := closure(Function #242)
1367 [-]: CLOSURE   R196 242     ; R196 := closure(Function #243)
1368 [-]: CLOSURE   R197 243     ; R197 := closure(Function #244)
1369 [-]: SETGLOBAL R197 K376    ; OnAccountRenameRelogConfirm := R197
1370 [-]: CLOSURE   R197 244     ; R197 := closure(Function #245)
1371 [-]: MOVE      R0 R193      ; R0 := R193
1372 [-]: MOVE      R0 R194      ; R0 := R194
1373 [-]: MOVE      R0 R195      ; R0 := R195
1374 [-]: MOVE      R0 R196      ; R0 := R196
1375 [-]: SETGLOBAL R197 K377    ; OnLoadOrbiterMessage := R197
1376 [-]: CLOSURE   R197 245     ; R197 := closure(Function #246)
1377 [-]: MOVE      R0 R4        ; R0 := R4
1378 [-]: SETGLOBAL R197 K378    ; OnAccountRename := R197
1379 [-]: CLOSURE   R197 246     ; R197 := closure(Function #247)
1380 [-]: MOVE      R0 R5        ; R0 := R5
1381 [-]: SETGLOBAL R197 K379    ; OnAccountRenameConfirm := R197
1382 [-]: CLOSURE   R197 247     ; R197 := closure(Function #248)
1383 [-]: MOVE      R0 R5        ; R0 := R5
1384 [-]: SETGLOBAL R197 K380    ; OnBadNewNameAcknowledged := R197
1385 [-]: CLOSURE   R197 248     ; R197 := closure(Function #249)
1386 [-]: MOVE      R0 R5        ; R0 := R5
1387 [-]: MOVE      R0 R4        ; R0 := R4
1388 [-]: CLOSURE   R198 249     ; R198 := closure(Function #250)
1389 [-]: MOVE      R0 R197      ; R0 := R197
1390 [-]: SETGLOBAL R198 K381    ; AccountRename := R198
1391 [-]: CLOSURE   R198 250     ; R198 := closure(Function #251)
1392 [-]: MOVE      R0 R197      ; R0 := R197
1393 [-]: SETGLOBAL R198 K382    ; OSKAccountRename := R198
1394 [-]: CLOSURE   R198 251     ; R198 := closure(Function #252)
1395 [-]: MOVE      R0 R5        ; R0 := R5
1396 [-]: SETGLOBAL R198 K383    ; InitiateAccountRename := R198
1397 [-]: CLOSURE   R198 252     ; R198 := closure(Function #253)
1398 [-]: MOVE      R0 R5        ; R0 := R5
1399 [-]: MOVE      R0 R59       ; R0 := R59
1400 [-]: MOVE      R0 R118      ; R0 := R118
1401 [-]: MOVE      R0 R16       ; R0 := R16
1402 [-]: MOVE      R0 R62       ; R0 := R62
1403 [-]: SETGLOBAL R198 K384    ; InitializeRegionChallenges := R198
1404 [-]: CLOSURE   R198 253     ; R198 := closure(Function #254)
1405 [-]: MOVE      R0 R95       ; R0 := R95
1406 [-]: SETGLOBAL R198 K385    ; CheckNewOmega := R198
1407 [-]: CLOSURE   R198 254     ; R198 := closure(Function #255)
1408 [-]: SETGLOBAL R198 K386    ; ShowPurchaseCelebration := R198
1409 [-]: CLOSURE   R198 255     ; R198 := closure(Function #256)
1410 [-]: MOVE      R0 R5        ; R0 := R5
1411 [-]: MOVE      R0 R23       ; R0 := R23
1412 [-]: SETGLOBAL R198 K387    ; ApplyLoadOutChanges := R198
1413 [-]: CLOSURE   R198 256     ; R198 := closure(Function #257)
1414 [-]: SETGLOBAL R198 K388    ; OnLobbyReady := R198
1415 [-]: CLOSURE   R198 257     ; R198 := closure(Function #258)
1416 [-]: SETGLOBAL R198 K389    ; OnUpdateSessionSettings := R198
1417 [-]: CLOSURE   R50 258      ; R50 := closure(Function #259)
1418 [-]: MOVE      R0 R5        ; R0 := R5
1419 [-]: MOVE      R0 R7        ; R0 := R7
1420 [-]: CLOSURE   R198 259     ; R198 := closure(Function #260)
1421 [-]: MOVE      R0 R50       ; R0 := R50
1422 [-]: SETGLOBAL R198 K390    ; DebugLoadMission := R198
1423 [-]: CLOSURE   R198 260     ; R198 := closure(Function #261)
1424 [-]: SETGLOBAL R198 K391    ; ConfirmWeaponRetrieve := R198
1425 [-]: CLOSURE   R198 261     ; R198 := closure(Function #262)
1426 [-]: MOVE      R0 R5        ; R0 := R5
1427 [-]: MOVE      R0 R54       ; R0 := R54
1428 [-]: MOVE      R0 R4        ; R0 := R4
1429 [-]: MOVE      R0 R77       ; R0 := R77
1430 [-]: MOVE      R0 R64       ; R0 := R64
1431 [-]: MOVE      R0 R63       ; R0 := R63
1432 [-]: SETGLOBAL R198 K392    ; OnTrainingResultUploaded := R198
1433 [-]: CLOSURE   R198 262     ; R198 := closure(Function #263)
1434 [-]: MOVE      R0 R5        ; R0 := R5
1435 [-]: MOVE      R0 R77       ; R0 := R77
1436 [-]: MOVE      R0 R54       ; R0 := R54
1437 [-]: MOVE      R0 R63       ; R0 := R63
1438 [-]: MOVE      R0 R64       ; R0 := R64
1439 [-]: CLOSURE   R199 263     ; R199 := closure(Function #264)
1440 [-]: MOVE      R0 R198      ; R0 := R198
1441 [-]: SETGLOBAL R199 K393    ; LevelUpRetry := R199
1442 [-]: CLOSURE   R199 264     ; R199 := closure(Function #265)
1443 [-]: MOVE      R0 R198      ; R0 := R198
1444 [-]: SETGLOBAL R199 K394    ; LevelUpRetryConfirm := R199
1445 [-]: CLOSURE   R199 265     ; R199 := closure(Function #266)
1446 [-]: MOVE      R0 R5        ; R0 := R5
1447 [-]: MOVE      R0 R4        ; R0 := R4
1448 [-]: MOVE      R0 R54       ; R0 := R54
1449 [-]: MOVE      R0 R63       ; R0 := R63
1450 [-]: MOVE      R0 R64       ; R0 := R64
1451 [-]: SETGLOBAL R199 K395    ; LevelUp := R199
1452 [-]: CLOSURE   R199 266     ; R199 := closure(Function #267)
1453 [-]: SETGLOBAL R199 K396    ; QueueMailboxNotification := R199
1454 [-]: CLOSURE   R199 267     ; R199 := closure(Function #268)
1455 [-]: MOVE      R0 R103      ; R0 := R103
1456 [-]: SETGLOBAL R199 K397    ; ForceVersionLogoff := R199
1457 [-]: CLOSURE   R199 268     ; R199 := closure(Function #269)
1458 [-]: SETGLOBAL R199 K398    ; QuitGameConfirm := R199
1459 [-]: CLOSURE   R199 269     ; R199 := closure(Function #270)
1460 [-]: MOVE      R0 R4        ; R0 := R4
1461 [-]: SETGLOBAL R199 K399    ; QuitGame := R199
1462 [-]: CLOSURE   R199 270     ; R199 := closure(Function #271)
1463 [-]: MOVE      R0 R20       ; R0 := R20
1464 [-]: SETGLOBAL R199 K400    ; OnStartNemesis := R199
1465 [-]: CLOSURE   R199 271     ; R199 := closure(Function #272)
1466 [-]: SETGLOBAL R199 K401    ; ForceRefreshFoundryNotification := R199
1467 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 410
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mControl
  2 [-]: SETTABLE  R0 K1 K2     ; R0["Shutdown"] := true
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  4 [-]: GETGLOBAL R1 K4        ; R1 := mToolTip
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R0 K4        ; R0 := mToolTip
  9 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K6        ; R1 := mInfoPopup
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETGLOBAL R0 K6        ; R0 := mInfoPopup
 17 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 20 [-]: GETGLOBAL R1 K7        ; R1 := mContextMenu
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETGLOBAL R0 K7        ; R0 := mContextMenu
 25 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 26 [-]: CALL      R0 2 1       ; R0(R1)
 27 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 28 [-]: GETGLOBAL R1 K8        ; R1 := mBlockingTaskPopup
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: TEST      R0 1         ; if R0 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETGLOBAL R0 K8        ; R0 := mBlockingTaskPopup
 33 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 34 [-]: CALL      R0 2 1       ; R0(R1)
 35 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 36 [-]: GETGLOBAL R1 K9        ; R1 := mStyleBackgroundMovie
 37 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 38 [-]: TEST      R0 1         ; if R0 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETGLOBAL R0 K9        ; R0 := mStyleBackgroundMovie
 41 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 42 [-]: CALL      R0 2 1       ; R0(R1)
 43 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 44 [-]: GETGLOBAL R1 K10       ; R1 := mNotificationsMovie
 45 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 46 [-]: TEST      R0 1         ; if R0 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETGLOBAL R0 K10       ; R0 := mNotificationsMovie
 49 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x32302b4a]
 50 [-]: CALL      R0 2 1       ; R0(R1)
 51 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 52 [-]: GETGLOBAL R1 K11       ; R1 := _T
 53 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["DisableUIInput"]
 54 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 55 [-]: TEST      R0 1         ; if R0 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETGLOBAL R0 K11       ; R0 := _T
 58 [-]: GETTABLE  R0 R0 K13    ; R0 := R0[0x80172c74]
 59 [-]: CALL      R0 1 1       ; R0()
 60 [-]: GETGLOBAL R0 K14       ; R0 := mOpenScreenAsyncInfo
 61 [-]: GETTABLE  R0 R0 K15    ; R0 := R0["IsLoading"]
 62 [-]: TEST      R0 0         ; if not R0 then PC := 72
 63 [-]: JMP       72           ; PC := 72
 64 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 65 [-]: GETGLOBAL R1 K16       ; R1 := 0x9ba7909f
 66 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 67 [-]: TEST      R0 1         ; if R0 then PC := 72
 68 [-]: JMP       72           ; PC := 72
 69 [-]: GETGLOBAL R0 K16       ; R0 := 0x9ba7909f
 70 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0[0xf248fd5d]
 71 [-]: CALL      R0 2 1       ; R0(R1)
 72 [-]: GETGLOBAL R0 K18       ; R0 := mUIInputEnableTimer
 73 [-]: EQ        1 R0 K19     ; if R0 == nil then PC := 92
 74 [-]: JMP       92           ; PC := 92
 75 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 76 [-]: GETGLOBAL R1 K20       ; R1 := mTimerMgr
 77 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 78 [-]: TEST      R0 1         ; if R0 then PC := 92
 79 [-]: JMP       92           ; PC := 92
 80 [-]: GETGLOBAL R0 K20       ; R0 := mTimerMgr
 81 [-]: GETTABLE  R0 R0 K21    ; R0 := R0["mTimers"]
 82 [-]: GETGLOBAL R1 K18       ; R1 := mUIInputEnableTimer
 83 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 84 [-]: EQ        1 R0 K19     ; if R0 == nil then PC := 92
 85 [-]: JMP       92           ; PC := 92
 86 [-]: GETGLOBAL R0 K20       ; R0 := mTimerMgr
 87 [-]: GETTABLE  R0 R0 K21    ; R0 := R0["mTimers"]
 88 [-]: GETGLOBAL R1 K18       ; R1 := mUIInputEnableTimer
 89 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 90 [-]: GETTABLE  R0 R0 K22    ; R0 := R0[0x75afeb61]
 91 [-]: CALL      R0 1 1       ; R0()
 92 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 453
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R5 K0        ; R5 := _T
  2 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Credits"]
  3 [-]: EQ        1 R5 R0      ; if R5 == R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETGLOBAL R5 K0        ; R5 := _T
  6 [-]: SETTABLE  R5 K1 R0     ; R5["Credits"] := R0
  7 [-]: GETGLOBAL R5 K0        ; R5 := _T
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["PremiumCredits"]
  9 [-]: EQ        1 R5 R1      ; if R5 == R1 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETGLOBAL R5 K0        ; R5 := _T
 12 [-]: SETTABLE  R5 K2 R1     ; R5["PremiumCredits"] := R1
 13 [-]: GETGLOBAL R5 K0        ; R5 := _T
 14 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["PurchasedPremiumCredits"]
 15 [-]: EQ        1 R5 R2      ; if R5 == R2 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETGLOBAL R5 K0        ; R5 := _T
 18 [-]: SETTABLE  R5 K3 R2     ; R5["PurchasedPremiumCredits"] := R2
 19 [-]: GETGLOBAL R5 K0        ; R5 := _T
 20 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["PrimeTokens"]
 21 [-]: EQ        1 R5 R3      ; if R5 == R3 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETGLOBAL R5 K0        ; R5 := _T
 24 [-]: SETTABLE  R5 K4 R3     ; R5["PrimeTokens"] := R3
 25 [-]: GETGLOBAL R5 K0        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["PlayerXP"]
 27 [-]: EQ        1 R5 R4      ; if R5 == R4 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETGLOBAL R5 K0        ; R5 := _T
 30 [-]: SETTABLE  R5 K5 R4     ; R5["PlayerXP"] := R4
 31 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 475
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 479
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x76ea806b
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x3f3ae64c]
  4 [-]: LOADK     R3 0         ; R3 := 0.000000
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x49d9480e]
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: TEST      R2 1         ; if R2 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2[0x7d0219ae]
 13 [-]: CALL      R2 1 2       ; R2 := R2()
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADK     R0 K5        ; R0 := "https://dev.warframe.com/gameplatinum?"
 17 [-]: JMP       33           ; PC := 33
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0x28822185]
 20 [-]: CALL      R2 1 2       ; R2 := R2()
 21 [-]: TEST      R2 0         ; if not R2 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: LOADK     R0 K7        ; R0 := "https://test.warframe.com/gameplatinum?"
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0x34291f5c
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[0xa7a2e381]
 27 [-]: CALL      R2 1 2       ; R2 := R2()
 28 [-]: TEST      R2 0         ; if not R2 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADK     R0 K10       ; R0 := "https://store.wf.qq.com/?module=recharge"
 31 [-]: JMP       33           ; PC := 33
 32 [-]: LOADK     R0 K11       ; R0 := "https://warframe.com/gameplatinum?"
 33 [-]: SELF      R2 R1 K12    ; R3 := R1; R2 := R1[0x1012c7ec]
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: MOVE      R3 R2        ; R3 := R2
 36 [-]: SELF      R4 R1 K13    ; R5 := R1; R4 := R1[0x37346c0e]
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 39 [-]: LOADK     R3 K0        ; R3 := ""
 40 [-]: SELF      R4 R1 K14    ; R5 := R1; R4 := R1[0x80563238]
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: GETGLOBAL R5 K15       ; R5 := 0x7b998233
 43 [-]: MOVE      R6 R4        ; R6 := R4
 44 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 45 [-]: TEST      R5 1         ; if R5 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: SELF      R5 R4 K16    ; R6 := R4; R5 := R4[0x104b2223]
 48 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 49 [-]: LOADK     R6 K17       ; R6 := "&couponSku="
 50 [-]: GETGLOBAL R7 K18       ; R7 := 0x64fb1586
 51 [-]: GETTABLE  R8 R5 K19    ; R8 := R5["mCouponSku"]
 52 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 53 [-]: CONCAT    R3 R6 R7     ; R3 := R6 .. R7
 54 [-]: LOADK     R6 K0        ; R6 := ""
 55 [-]: GETGLOBAL R7 K8        ; R7 := 0x34291f5c
 56 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[0xbcd06415]
 57 [-]: CALL      R7 1 2       ; R7 := R7()
 58 [-]: TEST      R7 0         ; if not R7 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADK     R6 K21       ; R6 := "&epic=1"
 61 [-]: LOADBOOL  R7 0 0       ; R7 := false
 62 [-]: LOADK     R8 K0        ; R8 := ""
 63 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
 64 [-]: GETTABLE  R9 R9 K22    ; R9 := R9[0x9ad21ae9]
 65 [-]: CALL      R9 1 2       ; R9 := R9()
 66 [-]: TEST      R9 0         ; if not R9 then PC := 75
 67 [-]: JMP       75           ; PC := 75
 68 [-]: GETUPVAL  R9 U1        ; R9 := U1
 69 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
 70 [-]: LOADK     R10 K0       ; R10 := ""
 71 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
 72 [-]: MOVE      R8 R10       ; R8 := R10
 73 [-]: MOVE      R7 R9        ; R7 := R9
 74 [-]: JMP       121          ; PC := 121
 75 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
 76 [-]: GETTABLE  R9 R9 K24    ; R9 := R9[0x86647daf]
 77 [-]: CALL      R9 1 2       ; R9 := R9()
 78 [-]: TEST      R9 0         ; if not R9 then PC := 87
 79 [-]: JMP       87           ; PC := 87
 80 [-]: GETUPVAL  R9 U1        ; R9 := U1
 81 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
 82 [-]: LOADK     R10 K25      ; R10 := "PLATINUM"
 83 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
 84 [-]: MOVE      R8 R10       ; R8 := R10
 85 [-]: MOVE      R7 R9        ; R7 := R9
 86 [-]: JMP       121          ; PC := 121
 87 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
 88 [-]: GETTABLE  R9 R9 K26    ; R9 := R9[0xc84fa15a]
 89 [-]: CALL      R9 1 2       ; R9 := R9()
 90 [-]: TEST      R9 0         ; if not R9 then PC := 99
 91 [-]: JMP       99           ; PC := 99
 92 [-]: GETUPVAL  R9 U1        ; R9 := U1
 93 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
 94 [-]: LOADK     R10 K25      ; R10 := "PLATINUM"
 95 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
 96 [-]: MOVE      R8 R10       ; R8 := R10
 97 [-]: MOVE      R7 R9        ; R7 := R9
 98 [-]: JMP       121          ; PC := 121
 99 [-]: GETGLOBAL R9 K8        ; R9 := 0x34291f5c
100 [-]: GETTABLE  R9 R9 K9     ; R9 := R9[0xa7a2e381]
101 [-]: CALL      R9 1 2       ; R9 := R9()
102 [-]: TEST      R9 0         ; if not R9 then PC := 111
103 [-]: JMP       111          ; PC := 111
104 [-]: GETUPVAL  R9 U1        ; R9 := U1
105 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
106 [-]: MOVE      R10 R0       ; R10 := R0
107 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
108 [-]: MOVE      R8 R10       ; R8 := R10
109 [-]: MOVE      R7 R9        ; R7 := R9
110 [-]: JMP       121          ; PC := 121
111 [-]: GETUPVAL  R9 U1        ; R9 := U1
112 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0x49d3de6e]
113 [-]: MOVE      R10 R0       ; R10 := R0
114 [-]: MOVE      R11 R2       ; R11 := R2
115 [-]: MOVE      R12 R3       ; R12 := R3
116 [-]: MOVE      R13 R6       ; R13 := R6
117 [-]: CONCAT    R10 R10 R13  ; R10 := R10 .. R11 .. R12 .. R13
118 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
119 [-]: MOVE      R8 R10       ; R8 := R10
120 [-]: MOVE      R7 R9        ; R7 := R9
121 [-]: TEST      R7 1         ; if R7 then PC := 128
122 [-]: JMP       128          ; PC := 128
123 [-]: GETUPVAL  R9 U1        ; R9 := U1
124 [-]: GETTABLE  R9 R9 K27    ; R9 := R9[0xe0cba3ca]
125 [-]: MOVE      R10 R8       ; R10 := R8
126 [-]: LOADK     R11 K28      ; R11 := "PurchasePlatinumFailed"
127 [-]: CALL      R9 3 1       ; R9(R10,R11)
128 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 529
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 533
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
  9 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 10 [-]: JMP       39           ; PC := 39
 11 [-]: GETGLOBAL R1 K5        ; R1 := mPurchaseOrigin
 12 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 13 [-]: JMP       39           ; PC := 39
 14 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
 15 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x8b8fb8b7]
 16 [-]: GETGLOBAL R3 K7        ; R3 := 0x0469f296
 17 [-]: LOADK     R4 K8        ; R4 := "INSUFFICIENT_PLAT_POPUP"
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K5        ; R4 := mPurchaseOrigin
 20 [-]: LOADK     R5 K9        ; R5 := "_STORE_OK"
 21 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 22 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 23 [-]: JMP       39           ; PC := 39
 24 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
 25 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 26 [-]: JMP       39           ; PC := 39
 27 [-]: GETGLOBAL R1 K5        ; R1 := mPurchaseOrigin
 28 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETGLOBAL R1 K3        ; R1 := 0xcb79539e
 31 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x8b8fb8b7]
 32 [-]: GETGLOBAL R3 K7        ; R3 := 0x0469f296
 33 [-]: LOADK     R4 K8        ; R4 := "INSUFFICIENT_PLAT_POPUP"
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: GETGLOBAL R4 K5        ; R4 := mPurchaseOrigin
 36 [-]: LOADK     R5 K10       ; R5 := "_STORE_CANCEL"
 37 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 38 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 39 [-]: LOADNIL   R1 R1        ; R1 := nil
 40 [-]: SETGLOBAL R1 K5        ; mPurchaseOrigin := R1
 41 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 547
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x34291f5c
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xc84fa15a]
  4 [-]: CALL      R2 1 2       ; R2 := R2()
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/Store_LaunchingBrowser_Switch"
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/Store_LaunchingBrowser_Windows"
 10 [-]: GETGLOBAL R2 K5        ; R2 := 0x76ea806b
 11 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x3f3ae64c]
 12 [-]: LOADK     R4 0         ; R4 := 0.000000
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 1         ; if R3 then PC := 48
 18 [-]: JMP       48           ; PC := 48
 19 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0x80563238]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 22 [-]: MOVE      R5 R3        ; R5 := R3
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: TEST      R4 1         ; if R4 then PC := 48
 25 [-]: JMP       48           ; PC := 48
 26 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0x104b2223]
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: GETGLOBAL R5 K1        ; R5 := 0x34291f5c
 29 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x397b920f]
 30 [-]: GETTABLE  R6 R4 K11    ; R6 := R4["mExpiry"]
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: LT        0 K12 R5     ; if 0.000000 >= R5 then PC := 48
 33 [-]: JMP       48           ; PC := 48
 34 [-]: GETGLOBAL R6 K13       ; R6 := 0xae91e43b
 35 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x42b04007]
 36 [-]: LOADK     R8 K15       ; R8 := "/Lotus/Language/Menu/Store_LaunchingBrowserDiscount_Windows"
 37 [-]: LOADBOOL  R9 0 0       ; R9 := false
 38 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 39 [-]: GETUPVAL  R11 U0       ; R11 := U0
 40 [-]: GETTABLE  R11 R11 K17  ; R11 := R11[0x817b1503]
 41 [-]: GETGLOBAL R12 K13      ; R12 := 0xae91e43b
 42 [-]: MOVE      R13 R5       ; R13 := R5
 43 [-]: LOADK     R14 K18      ; R14 := "HoursOrMinutes"
 44 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 45 [-]: SETTABLE  R10 K16 R11  ; R10["TIMELEFT"] := R11
 46 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 47 [-]: MOVE      R1 R6        ; R1 := R6
 48 [-]: SETGLOBAL R0 K19       ; mPurchaseOrigin := R0
 49 [-]: GETUPVAL  R6 U1        ; R6 := U1
 50 [-]: GETTABLE  R6 R6 K20    ; R6 := R6[0xf616a184]
 51 [-]: MOVE      R7 R1        ; R7 := R1
 52 [-]: LOADK     R8 K21       ; R8 := "PurchasePlatinumOk"
 53 [-]: CALL      R6 3 1       ; R6(R7,R8)
 54 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 571
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 576
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0[0x86647daf]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: LOADBOOL  R0 0 0       ; R0 := false
  7 [-]: LOADK     R1 K2        ; R1 := ""
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x34291f5c
  9 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0x86647daf]
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: TEST      R2 0         ; if not R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x49d3de6e]
 15 [-]: LOADK     R3 K4        ; R3 := "PRIME_ACCESS"
 16 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
 17 [-]: MOVE      R1 R3        ; R1 := R3
 18 [-]: MOVE      R0 R2        ; R0 := R2
 19 [-]: TEST      R0 1         ; if R0 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETUPVAL  R2 U0        ; R2 := U0
 22 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: LOADK     R4 K6        ; R4 := "PurchasePlatinumFailed"
 25 [-]: CALL      R2 3 1       ; R2(R3,R4)
 26 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 591
; #Upvalues:       3
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x34291f5c
  2 [-]: GETTABLE  R5 R5 K1     ; R5 := R5[0xe27b35bb]
  3 [-]: CALL      R5 1 2       ; R5 := R5()
  4 [-]: SETTABLE  R5 K2 K3     ; R5["dialogType"] := 0.000000
  5 [-]: LOADK     R6 K4        ; R6 := ""
  6 [-]: LOADK     R7 K5        ; R7 := "ConfirmPopup"
  7 [-]: GETUPVAL  R8 U0        ; R8 := U0
  8 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["PRIME_BUCKS"]
  9 [-]: EQ        0 R0 R8      ; if R0 ~= R8 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADK     R6 K7        ; R6 := "/Lotus/Language/Menu/Global_InsufficientPrimeBucks"
 12 [-]: JMP       57           ; PC := 57
 13 [-]: GETUPVAL  R8 U0        ; R8 := U0
 14 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["PREMIUM_CREDITS"]
 15 [-]: EQ        0 R0 R8      ; if R0 ~= R8 then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: SETGLOBAL R4 K9        ; mPurchaseOrigin := R4
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADK     R6 K10       ; R6 := "/Lotus/Language/Menu/Global_InsufficientPurchasedPlatinum"
 21 [-]: JMP       27           ; PC := 27
 22 [-]: TEST      R3 0         ; if not R3 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: MOVE      R6 R2        ; R6 := R2
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/Global_InsufficientPlatinum"
 27 [-]: SETTABLE  R5 K2 K12    ; R5["dialogType"] := 1.000000
 28 [-]: SETTABLE  R5 K13 K14   ; R5["firstString"] := "/Lotus/Language/Menu/Store_GetPlatinum"
 29 [-]: SETTABLE  R5 K15 K16   ; R5["secondString"] := "/Lotus/Language/Menu/ItemSelection_OK"
 30 [-]: LOADK     R7 K17       ; R7 := "ConfirmPopupNotEnoughPlatinum"
 31 [-]: JMP       57           ; PC := 57
 32 [-]: GETUPVAL  R8 U0        ; R8 := U0
 33 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["REGULAR_CREDITS"]
 34 [-]: EQ        0 R0 R8      ; if R0 ~= R8 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADK     R6 K19       ; R6 := "/Lotus/Language/Menu/Global_InsufficientCredits"
 37 [-]: JMP       57           ; PC := 57
 38 [-]: GETUPVAL  R8 U0        ; R8 := U0
 39 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["STANDING"]
 40 [-]: EQ        0 R0 R8      ; if R0 ~= R8 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADK     R6 K21       ; R6 := "/Lotus/Language/Menu/Global_InsufficientStanding"
 43 [-]: JMP       57           ; PC := 57
 44 [-]: GETUPVAL  R8 U0        ; R8 := U0
 45 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["PRIME_TOKENS"]
 46 [-]: EQ        0 R0 R8      ; if R0 ~= R8 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: LOADK     R6 K23       ; R6 := "/Lotus/Language/Store/Global_InsufficientPrimeTokens"
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETUPVAL  R8 U0        ; R8 := U0
 51 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["FOCUS_XP"]
 52 [-]: EQ        0 R0 R8      ; if R0 ~= R8 then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: LOADK     R6 K25       ; R6 := "/Lotus/Language/Store/Global_InsufficientFocusXP"
 55 [-]: JMP       57           ; PC := 57
 56 [-]: LOADK     R6 K26       ; R6 := "/Lotus/Language/Menu/Global_InsufficientFunds"
 57 [-]: EQ        0 R2 K27     ; if R2 ~= nil then PC := 75
 58 [-]: JMP       75           ; PC := 75
 59 [-]: GETGLOBAL R8 K28       ; R8 := _T
 60 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["GenericVendor_NameOverride"]
 61 [-]: TEST      R8 0         ; if not R8 then PC := 68
 62 [-]: JMP       68           ; PC := 68
 63 [-]: GETGLOBAL R8 K28       ; R8 := _T
 64 [-]: GETTABLE  R2 R8 K29    ; R2 := R8["GenericVendor_NameOverride"]
 65 [-]: GETGLOBAL R8 K28       ; R8 := _T
 66 [-]: SETTABLE  R8 K29 K27   ; R8["GenericVendor_NameOverride"] := nil
 67 [-]: JMP       75           ; PC := 75
 68 [-]: GETUPVAL  R8 U1        ; R8 := U1
 69 [-]: GETTABLE  R8 R8 K30    ; R8 := R8[0xc7ca0123]
 70 [-]: GETGLOBAL R9 K31       ; R9 := 0xae91e43b
 71 [-]: GETGLOBAL R10 K32      ; R10 := mPurchaseParams
 72 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["mStoreItem"]
 73 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 74 [-]: MOVE      R2 R8        ; R2 := R8
 75 [-]: GETGLOBAL R8 K31       ; R8 := 0xae91e43b
 76 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0x42b04007]
 77 [-]: MOVE      R10 R6       ; R10 := R6
 78 [-]: LOADBOOL  R11 0 0      ; R11 := false
 79 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 80 [-]: SETTABLE  R12 K36 R2   ; R12["ITEM"] := R2
 81 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 82 [-]: SETTABLE  R5 K34 R8    ; R5["locString"] := R8
 83 [-]: SELF      R8 R5 K37    ; R9 := R5; R8 := R5[0xe6ccc5b9]
 84 [-]: MOVE      R10 R7       ; R10 := R7
 85 [-]: CALL      R8 3 1       ; R8(R9,R10)
 86 [-]: GETUPVAL  R8 U2        ; R8 := U2
 87 [-]: GETTABLE  R8 R8 K38    ; R8 := R8[0xe99b84e7]
 88 [-]: MOVE      R9 R5        ; R9 := R5
 89 [-]: CALL      R8 2 1       ; R8(R9)
 90 [-]: GETGLOBAL R8 K28       ; R8 := _T
 91 [-]: SETTABLE  R8 K39 K27   ; R8["PurchaseSuccessLocOverride"] := nil
 92 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 639
; #Upvalues:       3
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SETUPVAL  R5 U0        ; U82 := R0
  2 [-]: GETUPVAL  R5 U1        ; R5 := U1
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: GETUPVAL  R7 U2        ; R7 := U2
  5 [-]: GETTABLE  R7 R7 K0     ; R7 := R7[0x06d055f9]
  6 [-]: GETGLOBAL R8 K1        ; R8 := 0x03f57322
  7 [-]: MOVE      R9 R1        ; R9 := R1
  8 [-]: CALL      R8 2 2       ; R8 := R8(R9)
  9 [-]: EQ        1 R8 K2      ; if R8 == 1.000000 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADBOOL  R8 0 1       ; R8 := false; PC := 12
 12 [-]: LOADBOOL  R8 1 0       ; R8 := true
 13 [-]: LOADBOOL  R9 1 0       ; R9 := true
 14 [-]: LOADBOOL  R10 0 0      ; R10 := false
 15 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 16 [-]: MOVE      R8 R2        ; R8 := R2
 17 [-]: MOVE      R9 R3        ; R9 := R3
 18 [-]: MOVE      R10 R4       ; R10 := R4
 19 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 20 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 647
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xbecef34c]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mPurchaseParams
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mStoreItem"]
  5 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x42b04007]
  8 [-]: GETGLOBAL R4 K5        ; R4 := 0x64fb1586
  9 [-]: GETGLOBAL R5 K1        ; R5 := mPurchaseParams
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mStoreItem"]
 11 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0xd3a9d01f]
 12 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 13 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 14 [-]: LOADBOOL  R5 0 0       ; R5 := false
 15 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 16 [-]: GETGLOBAL R3 K7        ; R3 := 0x76ea806b
 17 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x3f3ae64c]
 18 [-]: LOADK     R5 0         ; R5 := 0.000000
 19 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 20 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0x80563238]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
 23 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x42b04007]
 24 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Language/Menu/BuyItem_XPNeeded"
 25 [-]: LOADBOOL  R8 0 0       ; R8 := false
 26 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 27 [-]: SETTABLE  R9 K11 R2    ; R9["ITEM_NAME"] := R2
 28 [-]: SETTABLE  R9 K12 R1    ; R9["XP_REQUIRED"] := R1
 29 [-]: SELF      R10 R4 K14   ; R11 := R4; R10 := R4[0xefee6c91]
 30 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 31 [-]: SETTABLE  R9 K13 R10   ; R9["XP_CURRENT"] := R10
 32 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 33 [-]: GETUPVAL  R6 U1        ; R6 := U1
 34 [-]: GETTABLE  R6 R6 K15    ; R6 := R6[0xe0cba3ca]
 35 [-]: MOVE      R7 R5        ; R7 := R5
 36 [-]: LOADK     R8 K16       ; R8 := "ConfirmPopup"
 37 [-]: CALL      R6 3 1       ; R6(R7,R8)
 38 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 659
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x76ea806b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x3f3ae64c]
  3 [-]: LOADK     R3 0         ; R3 := 0.000000
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: SELF      R3 R1 K3     ; R4 := R1; R3 := R1[0x80563238]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: MOVE      R2 R3        ; R2 := R3
 14 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADNIL   R3 R3        ; R3 := nil
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x69727e0b]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 24 [-]: MOVE      R5 R3        ; R5 := R3
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 0         ; if not R4 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADNIL   R4 R4        ; R4 := nil
 29 [-]: RETURN    R4 2         ; return R4
 30 [-]: GETGLOBAL R4 K5        ; R4 := 0xc8802016
 31 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["mVoidTraders"]
 32 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETGLOBAL R9 K7        ; R9 := 0x64fb1586
 35 [-]: MOVE      R10 R0       ; R10 := R0
 36 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 37 [-]: GETTABLE  R10 R8 K8    ; R10 := R8["mId"]
 38 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["mId"]
 39 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: RETURN    R8 2         ; return R8
 42 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 34; R6 := R7 end
 43 [-]: JMP       34           ; PC := 34
 44 [-]: LOADNIL   R9 R9        ; R9 := nil
 45 [-]: RETURN    R9 2         ; return R9
 46 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 684
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x76ea806b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x3f3ae64c]
  3 [-]: LOADK     R3 0         ; R3 := 0.000000
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: SELF      R3 R1 K3     ; R4 := R1; R3 := R1[0x80563238]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: MOVE      R2 R3        ; R2 := R3
 14 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADNIL   R3 R3        ; R3 := nil
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x69727e0b]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 24 [-]: MOVE      R5 R3        ; R5 := R3
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 0         ; if not R4 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADNIL   R4 R4        ; R4 := nil
 29 [-]: RETURN    R4 2         ; return R4
 30 [-]: GETGLOBAL R4 K5        ; R4 := 0x64fb1586
 31 [-]: MOVE      R5 R0        ; R5 := R0
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: GETGLOBAL R5 K6        ; R5 := 0xc8802016
 34 [-]: GETTABLE  R6 R3 K7     ; R6 := R3["mPrimeVaultTraders"]
 35 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 36 [-]: JMP       54           ; PC := 54
 37 [-]: GETTABLE  R10 R9 K8    ; R10 := R9["mId"]
 38 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["mId"]
 39 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 54
 40 [-]: JMP       54           ; PC := 54
 41 [-]: GETGLOBAL R10 K9       ; R10 := 0x34291f5c
 42 [-]: GETTABLE  R10 R10 K10  ; R10 := R10[0x397b920f]
 43 [-]: GETTABLE  R11 R9 K11   ; R11 := R9["mExpiry"]
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: LOADNIL   R11 R11      ; R11 := nil
 46 [-]: LT        0 K12 R10    ; if 0.000000 >= R10 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETTABLE  R11 R9 K13   ; R11 := R9["mManifest"]
 49 [-]: JMP       51           ; PC := 51
 50 [-]: GETTABLE  R11 R9 K14   ; R11 := R9["mNextManifest"]
 51 [-]: MOVE      R12 R9       ; R12 := R9
 52 [-]: MOVE      R13 R11      ; R13 := R11
 53 [-]: RETURN    R12 3        ; return R12,R13
 54 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 37; R7 := R8 end
 55 [-]: JMP       37           ; PC := 37
 56 [-]: LOADNIL   R12 R12      ; R12 := nil
 57 [-]: RETURN    R12 2        ; return R12
 58 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 719
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  73

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  3 [-]: LOADK     R3 1         ; R3 := 1.000000
  4 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
  5 [-]: SETGLOBAL R4 K0        ; mBaseSourceType := R4
  6 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
  7 [-]: EQ        1 R4 K3      ; if R4 == 0.000000 then PC := 45
  8 [-]: JMP       45           ; PC := 45
  9 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 10 [-]: EQ        1 R4 K4      ; if R4 == 4.000000 then PC := 45
 11 [-]: JMP       45           ; PC := 45
 12 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 13 [-]: EQ        1 R4 K5      ; if R4 == 5.000000 then PC := 45
 14 [-]: JMP       45           ; PC := 45
 15 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 16 [-]: EQ        1 R4 K6      ; if R4 == 6.000000 then PC := 45
 17 [-]: JMP       45           ; PC := 45
 18 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 19 [-]: EQ        1 R4 K7      ; if R4 == 8.000000 then PC := 45
 20 [-]: JMP       45           ; PC := 45
 21 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 22 [-]: EQ        1 R4 K8      ; if R4 == 10.000000 then PC := 45
 23 [-]: JMP       45           ; PC := 45
 24 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 25 [-]: EQ        1 R4 K9      ; if R4 == 11.000000 then PC := 45
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 28 [-]: EQ        1 R4 K10     ; if R4 == 12.000000 then PC := 45
 29 [-]: JMP       45           ; PC := 45
 30 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 31 [-]: EQ        1 R4 K11     ; if R4 == 13.000000 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 34 [-]: EQ        1 R4 K12     ; if R4 == 14.000000 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 37 [-]: EQ        1 R4 K13     ; if R4 == 15.000000 then PC := 45
 38 [-]: JMP       45           ; PC := 45
 39 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 40 [-]: EQ        1 R4 K14     ; if R4 == 16.000000 then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSource"]
 43 [-]: EQ        0 R4 K15     ; if R4 ~= 17.000000 then PC := 200
 44 [-]: JMP       200          ; PC := 200
 45 [-]: LOADNIL   R4 R6        ; R4 := R5 := R6 := nil
 46 [-]: GETTABLE  R7 R0 K16    ; R7 := R0["mStoreItem"]
 47 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0xc3bbc5cb]
 48 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 49 [-]: TEST      R7 0         ; if not R7 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: GETGLOBAL R7 K18       ; R7 := mPurchaseParams
 52 [-]: GETTABLE  R6 R7 K19    ; R6 := R7["mDurability"]
 53 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["mCouponId"]
 54 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["mId"]
 55 [-]: EQ        1 R7 K22     ; if R7 == "" then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 58
 58 [-]: LOADBOOL  R7 1 0       ; R7 := true
 59 [-]: GETUPVAL  R8 U0        ; R8 := U0
 60 [-]: GETTABLE  R8 R8 K23    ; R8 := R8[0xe9947039]
 61 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["mStoreItem"]
 62 [-]: MOVE      R10 R6       ; R10 := R6
 63 [-]: MOVE      R11 R7       ; R11 := R7
 64 [-]: GETGLOBAL R12 K24      ; R12 := _T
 65 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["purchasedItems"]
 66 [-]: CALL      R8 5 3       ; R8,R9 := R8(R9,R10,R11,R12)
 67 [-]: MOVE      R5 R9        ; R5 := R9
 68 [-]: MOVE      R4 R8        ; R4 := R8
 69 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["mCouponId"]
 70 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["mId"]
 71 [-]: EQ        1 R8 K22     ; if R8 == "" then PC := 98
 72 [-]: JMP       98           ; PC := 98
 73 [-]: EQ        0 R4 K3      ; if R4 ~= 0.000000 then PC := 98
 74 [-]: JMP       98           ; PC := 98
 75 [-]: EQ        0 R5 K3      ; if R5 ~= 0.000000 then PC := 98
 76 [-]: JMP       98           ; PC := 98
 77 [-]: GETUPVAL  R8 U0        ; R8 := U0
 78 [-]: GETTABLE  R8 R8 K26    ; R8 := R8[0xcd71f5a1]
 79 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["mStoreItem"]
 80 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 81 [-]: GETGLOBAL R9 K27       ; R9 := 0x7b998233
 82 [-]: MOVE      R10 R8       ; R10 := R8
 83 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 84 [-]: TEST      R9 1         ; if R9 then PC := 98
 85 [-]: JMP       98           ; PC := 98
 86 [-]: GETUPVAL  R9 U0        ; R9 := U0
 87 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[0xe9947039]
 88 [-]: GETTABLE  R10 R0 K16   ; R10 := R0["mStoreItem"]
 89 [-]: MOVE      R11 R6       ; R11 := R6
 90 [-]: LOADBOOL  R12 0 0      ; R12 := false
 91 [-]: GETGLOBAL R13 K24      ; R13 := _T
 92 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["purchasedItems"]
 93 [-]: LOADNIL   R14 R14      ; R14 := nil
 94 [-]: LOADBOOL  R15 1 0      ; R15 := true
 95 [-]: CALL      R9 7 3       ; R9,R10 := R9(R10,R11,R12,R13,R14,R15)
 96 [-]: MOVE      R5 R10       ; R5 := R10
 97 [-]: MOVE      R4 R9        ; R4 := R9
 98 [-]: LT        0 K3 R4      ; if 0.000000 >= R4 then PC := 112
 99 [-]: JMP       112          ; PC := 112
100 [-]: GETTABLE  R9 R0 K28    ; R9 := R0["mUsePremium"]
101 [-]: TEST      R9 1         ; if R9 then PC := 112
102 [-]: JMP       112          ; PC := 112
103 [-]: GETUPVAL  R9 U1        ; R9 := U1
104 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["REGULAR_CREDITS"]
105 [-]: GETTABLE  R10 R0 K30   ; R10 := R0["mQuantity"]
106 [-]: MUL       R10 R4 R10   ; R10 := R4 * R10
107 [-]: SETTABLE  R1 R9 R10    ; R1[R9] := R10
108 [-]: GETUPVAL  R9 U1        ; R9 := U1
109 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["REGULAR_CREDITS"]
110 [-]: SETTABLE  R2 R9 R4     ; R2[R9] := R4
111 [-]: JMP       128          ; PC := 128
112 [-]: LT        0 K3 R5      ; if 0.000000 >= R5 then PC := 126
113 [-]: JMP       126          ; PC := 126
114 [-]: GETTABLE  R9 R0 K28    ; R9 := R0["mUsePremium"]
115 [-]: TEST      R9 0         ; if not R9 then PC := 126
116 [-]: JMP       126          ; PC := 126
117 [-]: GETUPVAL  R9 U1        ; R9 := U1
118 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["PREMIUM_CREDITS"]
119 [-]: GETTABLE  R10 R0 K30   ; R10 := R0["mQuantity"]
120 [-]: MUL       R10 R5 R10   ; R10 := R5 * R10
121 [-]: SETTABLE  R1 R9 R10    ; R1[R9] := R10
122 [-]: GETUPVAL  R9 U1        ; R9 := U1
123 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["PREMIUM_CREDITS"]
124 [-]: SETTABLE  R2 R9 R5     ; R2[R9] := R5
125 [-]: JMP       128          ; PC := 128
126 [-]: LOADNIL   R9 R9        ; R9 := nil
127 [-]: RETURN    R9 2         ; return R9
128 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["mCouponId"]
129 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["mId"]
130 [-]: EQ        1 R9 K22     ; if R9 == "" then PC := 744
131 [-]: JMP       744          ; PC := 744
132 [-]: GETGLOBAL R9 K32       ; R9 := 0x76ea806b
133 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9[0x3f3ae64c]
134 [-]: LOADK     R11 0        ; R11 := 0.000000
135 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
136 [-]: GETGLOBAL R10 K27      ; R10 := 0x7b998233
137 [-]: MOVE      R11 R9       ; R11 := R9
138 [-]: CALL      R10 2 2      ; R10 := R10(R11)
139 [-]: TEST      R10 0        ; if not R10 then PC := 143
140 [-]: JMP       143          ; PC := 143
141 [-]: LOADNIL   R10 R10      ; R10 := nil
142 [-]: RETURN    R10 2        ; return R10
143 [-]: SELF      R10 R9 K34   ; R11 := R9; R10 := R9[0x80563238]
144 [-]: CALL      R10 2 2      ; R10 := R10(R11)
145 [-]: GETGLOBAL R11 K27      ; R11 := 0x7b998233
146 [-]: MOVE      R12 R10      ; R12 := R10
147 [-]: CALL      R11 2 2      ; R11 := R11(R12)
148 [-]: TEST      R11 0        ; if not R11 then PC := 152
149 [-]: JMP       152          ; PC := 152
150 [-]: LOADNIL   R11 R11      ; R11 := nil
151 [-]: RETURN    R11 2        ; return R11
152 [-]: LOADNIL   R11 R11      ; R11 := nil
153 [-]: GETGLOBAL R12 K35      ; R12 := 0xc8802016
154 [-]: SELF      R13 R10 K36  ; R14 := R10; R13 := R10[0x464542fe]
155 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
156 [-]: CALL      R12 0 4      ; R12,R13,R14 := R12(R13,...)
157 [-]: JMP       166          ; PC := 166
158 [-]: GETTABLE  R17 R16 K21  ; R17 := R16["mId"]
159 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["mId"]
160 [-]: GETTABLE  R18 R0 K20   ; R18 := R0["mCouponId"]
161 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["mId"]
162 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 166
163 [-]: JMP       166          ; PC := 166
164 [-]: MOVE      R11 R16      ; R11 := R16
165 [-]: JMP       168          ; PC := 168
166 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 158; R14 := R15 end
167 [-]: JMP       158          ; PC := 158
168 [-]: TEST      R11 1        ; if R11 then PC := 172
169 [-]: JMP       172          ; PC := 172
170 [-]: LOADNIL   R17 R17      ; R17 := nil
171 [-]: RETURN    R17 2        ; return R17
172 [-]: SELF      R17 R11 K37  ; R18 := R11; R17 := R11[0x96df49a3]
173 [-]: GETTABLE  R19 R0 K16   ; R19 := R0["mStoreItem"]
174 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
175 [-]: TEST      R17 1        ; if R17 then PC := 179
176 [-]: JMP       179          ; PC := 179
177 [-]: LOADNIL   R17 R17      ; R17 := nil
178 [-]: RETURN    R17 2        ; return R17
179 [-]: GETTABLE  R17 R0 K16   ; R17 := R0["mStoreItem"]
180 [-]: SELF      R17 R17 K38  ; R18 := R17; R17 := R17[0x0f5a34d1]
181 [-]: CALL      R17 2 2      ; R17 := R17(R18)
182 [-]: TEST      R17 0        ; if not R17 then PC := 186
183 [-]: JMP       186          ; PC := 186
184 [-]: LOADNIL   R17 R17      ; R17 := nil
185 [-]: RETURN    R17 2        ; return R17
186 [-]: GETGLOBAL R17 K39      ; R17 := 0xcfc01047
187 [-]: MOVE      R18 R2       ; R18 := R2
188 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
189 [-]: JMP       197          ; PC := 197
190 [-]: GETUPVAL  R22 U0       ; R22 := U0
191 [-]: GETTABLE  R22 R22 K40  ; R22 := R22[0xebcd9651]
192 [-]: GETTABLE  R23 R1 R20   ; R23 := R1[R20]
193 [-]: GETTABLE  R24 R11 K41  ; R24 := R11["mAmount"]
194 [-]: DIV       R24 R24 K42  ; R24 := R24 / 100.000000
195 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
196 [-]: SETTABLE  R1 R20 R22   ; R1[R20] := R22
197 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 190; R19 := R20 end
198 [-]: JMP       190          ; PC := 190
199 [-]: JMP       744          ; PC := 744
200 [-]: GETTABLE  R22 R0 K1    ; R22 := R0["mSource"]
201 [-]: EQ        0 R22 K43    ; if R22 ~= 1.000000 then PC := 333
202 [-]: JMP       333          ; PC := 333
203 [-]: GETUPVAL  R22 U2       ; R22 := U2
204 [-]: GETTABLE  R23 R0 K44   ; R23 := R0["mSourceId"]
205 [-]: CALL      R22 2 2      ; R22 := R22(R23)
206 [-]: TEST      R22 1        ; if R22 then PC := 210
207 [-]: JMP       210          ; PC := 210
208 [-]: LOADNIL   R23 R23      ; R23 := nil
209 [-]: RETURN    R23 2        ; return R23
210 [-]: LOADNIL   R23 R24      ; R23 := R24 := nil
211 [-]: GETTABLE  R25 R0 K45   ; R25 := R0["mExtraPurchaseInfoJson"]
212 [-]: EQ        1 R25 K22    ; if R25 == "" then PC := 226
213 [-]: JMP       226          ; PC := 226
214 [-]: GETGLOBAL R25 K46      ; R25 := cjson
215 [-]: GETTABLE  R25 R25 K47  ; R25 := R25[0x7ab914d8]
216 [-]: GETTABLE  R26 R0 K45   ; R26 := R0["mExtraPurchaseInfoJson"]
217 [-]: CALL      R25 2 2      ; R25 := R25(R26)
218 [-]: GETTABLE  R26 R25 K48  ; R26 := R25["ForcePrimeBucksPrice"]
219 [-]: EQ        1 R26 K49    ; if R26 == nil then PC := 222
220 [-]: JMP       222          ; PC := 222
221 [-]: GETTABLE  R23 R25 K48  ; R23 := R25["ForcePrimeBucksPrice"]
222 [-]: GETTABLE  R26 R25 K50  ; R26 := R25["ForceRegularPrice"]
223 [-]: EQ        1 R26 K49    ; if R26 == nil then PC := 226
224 [-]: JMP       226          ; PC := 226
225 [-]: GETTABLE  R24 R25 K50  ; R24 := R25["ForceRegularPrice"]
226 [-]: EQ        1 R23 K49    ; if R23 == nil then PC := 247
227 [-]: JMP       247          ; PC := 247
228 [-]: GETUPVAL  R26 U1       ; R26 := U1
229 [-]: GETTABLE  R26 R26 K51  ; R26 := R26["PRIME_BUCKS"]
230 [-]: GETTABLE  R27 R0 K30   ; R27 := R0["mQuantity"]
231 [-]: MUL       R27 R23 R27  ; R27 := R23 * R27
232 [-]: SETTABLE  R1 R26 R27   ; R1[R26] := R27
233 [-]: GETUPVAL  R26 U1       ; R26 := U1
234 [-]: GETTABLE  R26 R26 K51  ; R26 := R26["PRIME_BUCKS"]
235 [-]: SETTABLE  R2 R26 R23   ; R2[R26] := R23
236 [-]: EQ        1 R24 K49    ; if R24 == nil then PC := 315
237 [-]: JMP       315          ; PC := 315
238 [-]: GETUPVAL  R26 U1       ; R26 := U1
239 [-]: GETTABLE  R26 R26 K29  ; R26 := R26["REGULAR_CREDITS"]
240 [-]: GETTABLE  R27 R0 K30   ; R27 := R0["mQuantity"]
241 [-]: MUL       R27 R24 R27  ; R27 := R24 * R27
242 [-]: SETTABLE  R1 R26 R27   ; R1[R26] := R27
243 [-]: GETUPVAL  R26 U1       ; R26 := U1
244 [-]: GETTABLE  R26 R26 K29  ; R26 := R26["REGULAR_CREDITS"]
245 [-]: SETTABLE  R2 R26 R24   ; R2[R26] := R24
246 [-]: JMP       315          ; PC := 315
247 [-]: GETGLOBAL R26 K35      ; R26 := 0xc8802016
248 [-]: GETTABLE  R27 R22 K52  ; R27 := R22["mManifest"]
249 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
250 [-]: JMP       313          ; PC := 313
251 [-]: GETTABLE  R31 R30 K53  ; R31 := R30["mItemType"]
252 [-]: GETTABLE  R32 R0 K16   ; R32 := R0["mStoreItem"]
253 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 313
254 [-]: JMP       313          ; PC := 313
255 [-]: GETTABLE  R31 R30 K54  ; R31 := R30["mPrimePrice"]
256 [-]: LT        0 K3 R31     ; if 0.000000 >= R31 then PC := 268
257 [-]: JMP       268          ; PC := 268
258 [-]: GETUPVAL  R31 U1       ; R31 := U1
259 [-]: GETTABLE  R31 R31 K51  ; R31 := R31["PRIME_BUCKS"]
260 [-]: GETTABLE  R32 R30 K54  ; R32 := R30["mPrimePrice"]
261 [-]: GETTABLE  R33 R0 K30   ; R33 := R0["mQuantity"]
262 [-]: MUL       R32 R32 R33  ; R32 := R32 * R33
263 [-]: SETTABLE  R1 R31 R32   ; R1[R31] := R32
264 [-]: GETUPVAL  R31 U1       ; R31 := U1
265 [-]: GETTABLE  R31 R31 K51  ; R31 := R31["PRIME_BUCKS"]
266 [-]: GETTABLE  R32 R30 K54  ; R32 := R30["mPrimePrice"]
267 [-]: SETTABLE  R2 R31 R32   ; R2[R31] := R32
268 [-]: GETTABLE  R31 R30 K55  ; R31 := R30["mRegularPrice"]
269 [-]: LT        0 K3 R31     ; if 0.000000 >= R31 then PC := 281
270 [-]: JMP       281          ; PC := 281
271 [-]: GETUPVAL  R31 U1       ; R31 := U1
272 [-]: GETTABLE  R31 R31 K29  ; R31 := R31["REGULAR_CREDITS"]
273 [-]: GETTABLE  R32 R30 K55  ; R32 := R30["mRegularPrice"]
274 [-]: GETTABLE  R33 R0 K30   ; R33 := R0["mQuantity"]
275 [-]: MUL       R32 R32 R33  ; R32 := R32 * R33
276 [-]: SETTABLE  R1 R31 R32   ; R1[R31] := R32
277 [-]: GETUPVAL  R31 U1       ; R31 := U1
278 [-]: GETTABLE  R31 R31 K29  ; R31 := R31["REGULAR_CREDITS"]
279 [-]: GETTABLE  R32 R30 K55  ; R32 := R30["mRegularPrice"]
280 [-]: SETTABLE  R2 R31 R32   ; R2[R31] := R32
281 [-]: GETTABLE  R31 R30 K56  ; R31 := R30["mItemPrices"]
282 [-]: EQ        1 R31 K49    ; if R31 == nil then PC := 315
283 [-]: JMP       315          ; PC := 315
284 [-]: GETUPVAL  R31 U1       ; R31 := U1
285 [-]: GETTABLE  R31 R31 K57  ; R31 := R31["ITEMS"]
286 [-]: GETTABLE  R32 R30 K56  ; R32 := R30["mItemPrices"]
287 [-]: SETTABLE  R1 R31 R32   ; R1[R31] := R32
288 [-]: LOADK     R31 1        ; R31 := 1.000000
289 [-]: GETUPVAL  R32 U1       ; R32 := U1
290 [-]: GETTABLE  R32 R32 K57  ; R32 := R32["ITEMS"]
291 [-]: GETTABLE  R32 R1 R32   ; R32 := R1[R32]
292 [-]: LEN       R32 R32      ; R32 := # R32
293 [-]: LOADK     R33 1        ; R33 := 1.000000
294 [-]: FORPREP   R31 307      ; R31 -= R33; PC := 307
295 [-]: GETUPVAL  R35 U1       ; R35 := U1
296 [-]: GETTABLE  R35 R35 K57  ; R35 := R35["ITEMS"]
297 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
298 [-]: GETTABLE  R35 R35 R34  ; R35 := R35[R34]
299 [-]: GETUPVAL  R36 U1       ; R36 := U1
300 [-]: GETTABLE  R36 R36 K57  ; R36 := R36["ITEMS"]
301 [-]: GETTABLE  R36 R1 R36   ; R36 := R1[R36]
302 [-]: GETTABLE  R36 R36 R34  ; R36 := R36[R34]
303 [-]: GETTABLE  R36 R36 K58  ; R36 := R36["mItemCount"]
304 [-]: GETTABLE  R37 R0 K30   ; R37 := R0["mQuantity"]
305 [-]: MUL       R36 R36 R37  ; R36 := R36 * R37
306 [-]: SETTABLE  R35 K58 R36  ; R35["mItemCount"] := R36
307 [-]: FORLOOP   R31 295      ; R31 += R33; if R31 <= R32 then begin PC := 295; R34 := R31 end
308 [-]: GETUPVAL  R35 U1       ; R35 := U1
309 [-]: GETTABLE  R35 R35 K57  ; R35 := R35["ITEMS"]
310 [-]: GETTABLE  R36 R30 K56  ; R36 := R30["mItemPrices"]
311 [-]: SETTABLE  R2 R35 R36   ; R2[R35] := R36
312 [-]: JMP       315          ; PC := 315
313 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 251; R28 := R29 end
314 [-]: JMP       251          ; PC := 251
315 [-]: GETUPVAL  R35 U1       ; R35 := U1
316 [-]: GETTABLE  R35 R35 K51  ; R35 := R35["PRIME_BUCKS"]
317 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
318 [-]: TEST      R35 1        ; if R35 then PC := 744
319 [-]: JMP       744          ; PC := 744
320 [-]: GETUPVAL  R35 U1       ; R35 := U1
321 [-]: GETTABLE  R35 R35 K29  ; R35 := R35["REGULAR_CREDITS"]
322 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
323 [-]: TEST      R35 1        ; if R35 then PC := 744
324 [-]: JMP       744          ; PC := 744
325 [-]: GETUPVAL  R35 U1       ; R35 := U1
326 [-]: GETTABLE  R35 R35 K57  ; R35 := R35["ITEMS"]
327 [-]: GETTABLE  R35 R1 R35   ; R35 := R1[R35]
328 [-]: TEST      R35 1        ; if R35 then PC := 744
329 [-]: JMP       744          ; PC := 744
330 [-]: LOADNIL   R35 R35      ; R35 := nil
331 [-]: RETURN    R35 2        ; return R35
332 [-]: JMP       744          ; PC := 744
333 [-]: GETTABLE  R35 R0 K1    ; R35 := R0["mSource"]
334 [-]: EQ        0 R35 K59    ; if R35 ~= 18.000000 then PC := 406
335 [-]: JMP       406          ; PC := 406
336 [-]: GETUPVAL  R35 U3       ; R35 := U3
337 [-]: GETTABLE  R36 R0 K44   ; R36 := R0["mSourceId"]
338 [-]: CALL      R35 2 3      ; R35,R36 := R35(R36)
339 [-]: TEST      R35 1        ; if R35 then PC := 343
340 [-]: JMP       343          ; PC := 343
341 [-]: LOADNIL   R37 R37      ; R37 := nil
342 [-]: RETURN    R37 2        ; return R37
343 [-]: GETGLOBAL R37 K35      ; R37 := 0xc8802016
344 [-]: MOVE      R38 R36      ; R38 := R36
345 [-]: CALL      R37 2 4      ; R37,R38,R39 := R37(R38)
346 [-]: JMP       391          ; PC := 391
347 [-]: GETTABLE  R42 R41 K53  ; R42 := R41["mItemType"]
348 [-]: GETTABLE  R43 R0 K16   ; R43 := R0["mStoreItem"]
349 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 391
350 [-]: JMP       391          ; PC := 391
351 [-]: GETTABLE  R42 R41 K54  ; R42 := R41["mPrimePrice"]
352 [-]: LT        0 K3 R42     ; if 0.000000 >= R42 then PC := 364
353 [-]: JMP       364          ; PC := 364
354 [-]: GETUPVAL  R42 U1       ; R42 := U1
355 [-]: GETTABLE  R42 R42 K60  ; R42 := R42["PRIME_TOKENS"]
356 [-]: GETTABLE  R43 R41 K54  ; R43 := R41["mPrimePrice"]
357 [-]: GETTABLE  R44 R0 K30   ; R44 := R0["mQuantity"]
358 [-]: MUL       R43 R43 R44  ; R43 := R43 * R44
359 [-]: SETTABLE  R1 R42 R43   ; R1[R42] := R43
360 [-]: GETUPVAL  R42 U1       ; R42 := U1
361 [-]: GETTABLE  R42 R42 K60  ; R42 := R42["PRIME_TOKENS"]
362 [-]: GETTABLE  R43 R41 K54  ; R43 := R41["mPrimePrice"]
363 [-]: SETTABLE  R2 R42 R43   ; R2[R42] := R43
364 [-]: GETTABLE  R42 R41 K55  ; R42 := R41["mRegularPrice"]
365 [-]: LT        0 K3 R42     ; if 0.000000 >= R42 then PC := 393
366 [-]: JMP       393          ; PC := 393
367 [-]: GETGLOBAL R42 K61      ; R42 := 0x7ed0a956
368 [-]: LOADK     R43 K62      ; R43 := "/Lotus/Types/Items/MiscItems/SchismKey"
369 [-]: CALL      R42 2 2      ; R42 := R42(R43)
370 [-]: GETUPVAL  R43 U1       ; R43 := U1
371 [-]: GETTABLE  R43 R43 K57  ; R43 := R43["ITEMS"]
372 [-]: NEWTABLE  R44 1 0      ; R44 := {}
373 [-]: NEWTABLE  R45 0 2      ; R45 := {}
374 [-]: SETTABLE  R45 K53 R42  ; R45["mItemType"] := R42
375 [-]: GETTABLE  R46 R41 K55  ; R46 := R41["mRegularPrice"]
376 [-]: GETTABLE  R47 R0 K30   ; R47 := R0["mQuantity"]
377 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
378 [-]: SETTABLE  R45 K58 R46  ; R45["mItemCount"] := R46
379 [-]: SETLIST   R44 1 1      ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 1
380 [-]: SETTABLE  R1 R43 R44   ; R1[R43] := R44
381 [-]: GETUPVAL  R43 U1       ; R43 := U1
382 [-]: GETTABLE  R43 R43 K57  ; R43 := R43["ITEMS"]
383 [-]: NEWTABLE  R44 1 0      ; R44 := {}
384 [-]: NEWTABLE  R45 0 2      ; R45 := {}
385 [-]: SETTABLE  R45 K53 R42  ; R45["mItemType"] := R42
386 [-]: GETTABLE  R46 R41 K55  ; R46 := R41["mRegularPrice"]
387 [-]: SETTABLE  R45 K58 R46  ; R45["mItemCount"] := R46
388 [-]: SETLIST   R44 1 1      ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 1
389 [-]: SETTABLE  R2 R43 R44   ; R2[R43] := R44
390 [-]: JMP       393          ; PC := 393
391 [-]: TFORLOOP  R37 2        ; R40,R41 :=  R37(R38,R39); if R40 ~= nil then begin PC = 347; R39 := R40 end
392 [-]: JMP       347          ; PC := 347
393 [-]: GETUPVAL  R43 U1       ; R43 := U1
394 [-]: GETTABLE  R43 R43 K60  ; R43 := R43["PRIME_TOKENS"]
395 [-]: GETTABLE  R43 R1 R43   ; R43 := R1[R43]
396 [-]: TEST      R43 1        ; if R43 then PC := 744
397 [-]: JMP       744          ; PC := 744
398 [-]: GETUPVAL  R43 U1       ; R43 := U1
399 [-]: GETTABLE  R43 R43 K57  ; R43 := R43["ITEMS"]
400 [-]: GETTABLE  R43 R1 R43   ; R43 := R1[R43]
401 [-]: TEST      R43 1        ; if R43 then PC := 744
402 [-]: JMP       744          ; PC := 744
403 [-]: LOADNIL   R43 R43      ; R43 := nil
404 [-]: RETURN    R43 2        ; return R43
405 [-]: JMP       744          ; PC := 744
406 [-]: GETTABLE  R43 R0 K1    ; R43 := R0["mSource"]
407 [-]: EQ        0 R43 K63    ; if R43 ~= 2.000000 then PC := 503
408 [-]: JMP       503          ; PC := 503
409 [-]: GETTABLE  R43 R0 K64   ; R43 := R0["mSyndicateTag"]
410 [-]: SELF      R43 R43 K65  ; R44 := R43; R43 := R43[0x56c01834]
411 [-]: CALL      R43 2 2      ; R43 := R43(R44)
412 [-]: TEST      R43 1        ; if R43 then PC := 416
413 [-]: JMP       416          ; PC := 416
414 [-]: LOADNIL   R43 R43      ; R43 := nil
415 [-]: RETURN    R43 2        ; return R43
416 [-]: GETGLOBAL R43 K66      ; R43 := 0xa94df70b
417 [-]: SELF      R43 R43 K67  ; R44 := R43; R43 := R43[0x07408254]
418 [-]: GETTABLE  R45 R0 K64   ; R45 := R0["mSyndicateTag"]
419 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
420 [-]: GETGLOBAL R44 K27      ; R44 := 0x7b998233
421 [-]: MOVE      R45 R43      ; R45 := R43
422 [-]: CALL      R44 2 2      ; R44 := R44(R45)
423 [-]: TEST      R44 0        ; if not R44 then PC := 427
424 [-]: JMP       427          ; PC := 427
425 [-]: LOADNIL   R44 R44      ; R44 := nil
426 [-]: RETURN    R44 2        ; return R44
427 [-]: GETTABLE  R44 R0 K68   ; R44 := R0["mUseFreeFavor"]
428 [-]: TEST      R44 0        ; if not R44 then PC := 438
429 [-]: JMP       438          ; PC := 438
430 [-]: GETTABLE  R44 R0 K30   ; R44 := R0["mQuantity"]
431 [-]: LT        0 K43 R44    ; if 1.000000 >= R44 then PC := 435
432 [-]: JMP       435          ; PC := 435
433 [-]: LOADNIL   R44 R44      ; R44 := nil
434 [-]: RETURN    R44 2        ; return R44
435 [-]: NEWTABLE  R44 0 0      ; R44 := {}
436 [-]: NEWTABLE  R45 0 0      ; R45 := {}
437 [-]: RETURN    R44 3        ; return R44,R45
438 [-]: GETGLOBAL R44 K69      ; R44 := 0xb009bbc6
439 [-]: SELF      R45 R43 K70  ; R46 := R43; R45 := R43[0xcbbdc11b]
440 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
441 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
442 [-]: LOADNIL   R45 R45      ; R45 := nil
443 [-]: GETTABLE  R46 R0 K71   ; R46 := R0["mIsSupplyDrop"]
444 [-]: TEST      R46 0        ; if not R46 then PC := 450
445 [-]: JMP       450          ; PC := 450
446 [-]: SELF      R46 R44 K72  ; R47 := R44; R46 := R44[0x45d282eb]
447 [-]: CALL      R46 2 2      ; R46 := R46(R47)
448 [-]: MOVE      R45 R46      ; R45 := R46
449 [-]: JMP       453          ; PC := 453
450 [-]: SELF      R46 R44 K73  ; R47 := R44; R46 := R44[0x3cab9eeb]
451 [-]: CALL      R46 2 2      ; R46 := R46(R47)
452 [-]: MOVE      R45 R46      ; R45 := R46
453 [-]: GETGLOBAL R46 K35      ; R46 := 0xc8802016
454 [-]: MOVE      R47 R45      ; R47 := R45
455 [-]: CALL      R46 2 4      ; R46,R47,R48 := R46(R47)
456 [-]: JMP       488          ; PC := 488
457 [-]: GETTABLE  R51 R50 K74  ; R51 := R50["storeItem"]
458 [-]: GETTABLE  R52 R0 K16   ; R52 := R0["mStoreItem"]
459 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 488
460 [-]: JMP       488          ; PC := 488
461 [-]: GETTABLE  R51 R50 K75  ; R51 := R50["standingCost"]
462 [-]: LT        0 K3 R51     ; if 0.000000 >= R51 then PC := 474
463 [-]: JMP       474          ; PC := 474
464 [-]: GETUPVAL  R51 U1       ; R51 := U1
465 [-]: GETTABLE  R51 R51 K76  ; R51 := R51["STANDING"]
466 [-]: GETTABLE  R52 R50 K75  ; R52 := R50["standingCost"]
467 [-]: GETTABLE  R53 R0 K30   ; R53 := R0["mQuantity"]
468 [-]: MUL       R52 R52 R53  ; R52 := R52 * R53
469 [-]: SETTABLE  R1 R51 R52   ; R1[R51] := R52
470 [-]: GETUPVAL  R51 U1       ; R51 := U1
471 [-]: GETTABLE  R51 R51 K76  ; R51 := R51["STANDING"]
472 [-]: GETTABLE  R52 R50 K75  ; R52 := R50["standingCost"]
473 [-]: SETTABLE  R2 R51 R52   ; R2[R51] := R52
474 [-]: GETTABLE  R51 R50 K77  ; R51 := R50["creditsCost"]
475 [-]: LT        0 K3 R51     ; if 0.000000 >= R51 then PC := 490
476 [-]: JMP       490          ; PC := 490
477 [-]: GETUPVAL  R51 U1       ; R51 := U1
478 [-]: GETTABLE  R51 R51 K29  ; R51 := R51["REGULAR_CREDITS"]
479 [-]: GETTABLE  R52 R50 K77  ; R52 := R50["creditsCost"]
480 [-]: GETTABLE  R53 R0 K30   ; R53 := R0["mQuantity"]
481 [-]: MUL       R52 R52 R53  ; R52 := R52 * R53
482 [-]: SETTABLE  R1 R51 R52   ; R1[R51] := R52
483 [-]: GETUPVAL  R51 U1       ; R51 := U1
484 [-]: GETTABLE  R51 R51 K29  ; R51 := R51["REGULAR_CREDITS"]
485 [-]: GETTABLE  R52 R50 K77  ; R52 := R50["creditsCost"]
486 [-]: SETTABLE  R2 R51 R52   ; R2[R51] := R52
487 [-]: JMP       490          ; PC := 490
488 [-]: TFORLOOP  R46 2        ; R49,R50 :=  R46(R47,R48); if R49 ~= nil then begin PC = 457; R48 := R49 end
489 [-]: JMP       457          ; PC := 457
490 [-]: GETUPVAL  R51 U1       ; R51 := U1
491 [-]: GETTABLE  R51 R51 K76  ; R51 := R51["STANDING"]
492 [-]: GETTABLE  R51 R1 R51   ; R51 := R1[R51]
493 [-]: TEST      R51 1        ; if R51 then PC := 744
494 [-]: JMP       744          ; PC := 744
495 [-]: GETUPVAL  R51 U1       ; R51 := U1
496 [-]: GETTABLE  R51 R51 K29  ; R51 := R51["REGULAR_CREDITS"]
497 [-]: GETTABLE  R51 R1 R51   ; R51 := R1[R51]
498 [-]: TEST      R51 1        ; if R51 then PC := 744
499 [-]: JMP       744          ; PC := 744
500 [-]: LOADNIL   R51 R51      ; R51 := nil
501 [-]: RETURN    R51 2        ; return R51
502 [-]: JMP       744          ; PC := 744
503 [-]: GETTABLE  R51 R0 K1    ; R51 := R0["mSource"]
504 [-]: EQ        0 R51 K78    ; if R51 ~= 3.000000 then PC := 534
505 [-]: JMP       534          ; PC := 534
506 [-]: GETUPVAL  R51 U0       ; R51 := U0
507 [-]: GETTABLE  R51 R51 K79  ; R51 := R51[0xe87653f1]
508 [-]: CALL      R51 1 2      ; R51 := R51()
509 [-]: GETGLOBAL R52 K27      ; R52 := 0x7b998233
510 [-]: MOVE      R53 R51      ; R53 := R51
511 [-]: CALL      R52 2 2      ; R52 := R52(R53)
512 [-]: TEST      R52 1        ; if R52 then PC := 521
513 [-]: JMP       521          ; PC := 521
514 [-]: GETTABLE  R52 R51 K16  ; R52 := R51["mStoreItem"]
515 [-]: GETTABLE  R53 R0 K16   ; R53 := R0["mStoreItem"]
516 [-]: EQ        0 R52 R53    ; if R52 ~= R53 then PC := 521
517 [-]: JMP       521          ; PC := 521
518 [-]: GETTABLE  R52 R51 K80  ; R52 := R51["mSalePrice"]
519 [-]: LE        0 R52 K3     ; if R52 > 0.000000 then PC := 523
520 [-]: JMP       523          ; PC := 523
521 [-]: LOADNIL   R52 R52      ; R52 := nil
522 [-]: RETURN    R52 2        ; return R52
523 [-]: GETUPVAL  R52 U1       ; R52 := U1
524 [-]: GETTABLE  R52 R52 K31  ; R52 := R52["PREMIUM_CREDITS"]
525 [-]: GETTABLE  R53 R51 K80  ; R53 := R51["mSalePrice"]
526 [-]: GETTABLE  R54 R0 K30   ; R54 := R0["mQuantity"]
527 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
528 [-]: SETTABLE  R1 R52 R53   ; R1[R52] := R53
529 [-]: GETUPVAL  R52 U1       ; R52 := U1
530 [-]: GETTABLE  R52 R52 K31  ; R52 := R52["PREMIUM_CREDITS"]
531 [-]: GETTABLE  R53 R51 K80  ; R53 := R51["mSalePrice"]
532 [-]: SETTABLE  R2 R52 R53   ; R2[R52] := R53
533 [-]: JMP       744          ; PC := 744
534 [-]: GETTABLE  R52 R0 K1    ; R52 := R0["mSource"]
535 [-]: EQ        0 R52 K81    ; if R52 ~= 7.000000 then PC := 744
536 [-]: JMP       744          ; PC := 744
537 [-]: GETGLOBAL R52 K61      ; R52 := 0x7ed0a956
538 [-]: LOADK     R53 K82      ; R53 := "/Lotus/Types/Items/Events/AmbulasDataFragment"
539 [-]: CALL      R52 2 2      ; R52 := R52(R53)
540 [-]: LOADNIL   R53 R53      ; R53 := nil
541 [-]: GETGLOBAL R54 K69      ; R54 := 0xb009bbc6
542 [-]: GETTABLE  R55 R0 K44   ; R55 := R0["mSourceId"]
543 [-]: CALL      R54 2 2      ; R54 := R54(R55)
544 [-]: GETGLOBAL R55 K27      ; R55 := 0x7b998233
545 [-]: MOVE      R56 R54      ; R56 := R54
546 [-]: CALL      R55 2 2      ; R55 := R55(R56)
547 [-]: TEST      R55 0        ; if not R55 then PC := 566
548 [-]: JMP       566          ; PC := 566
549 [-]: GETGLOBAL R55 K32      ; R55 := 0x76ea806b
550 [-]: SELF      R55 R55 K33  ; R56 := R55; R55 := R55[0x3f3ae64c]
551 [-]: LOADK     R57 0        ; R57 := 0.000000
552 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
553 [-]: SELF      R55 R55 K34  ; R56 := R55; R55 := R55[0x80563238]
554 [-]: CALL      R55 2 2      ; R55 := R55(R56)
555 [-]: SELF      R56 R55 K83  ; R57 := R55; R56 := R55[0xa2997b3c]
556 [-]: LOADNIL   R58 R58      ; R58 := nil
557 [-]: GETTABLE  R59 R0 K44   ; R59 := R0["mSourceId"]
558 [-]: CALL      R56 4 2      ; R56 := R56(R57,R58,R59)
559 [-]: GETTABLE  R57 R56 K21  ; R57 := R56["mId"]
560 [-]: GETTABLE  R57 R57 K21  ; R57 := R57["mId"]
561 [-]: GETTABLE  R58 R0 K44   ; R58 := R0["mSourceId"]
562 [-]: EQ        0 R57 R58    ; if R57 ~= R58 then PC := 569
563 [-]: JMP       569          ; PC := 569
564 [-]: GETTABLE  R53 R56 K84  ; R53 := R56["mItemManifest"]
565 [-]: JMP       569          ; PC := 569
566 [-]: SELF      R57 R54 K85  ; R58 := R54; R57 := R54[0x60e4aa28]
567 [-]: CALL      R57 2 2      ; R57 := R57(R58)
568 [-]: MOVE      R53 R57      ; R53 := R57
569 [-]: GETGLOBAL R57 K27      ; R57 := 0x7b998233
570 [-]: MOVE      R58 R53      ; R58 := R53
571 [-]: CALL      R57 2 2      ; R57 := R57(R58)
572 [-]: TEST      R57 0        ; if not R57 then PC := 576
573 [-]: JMP       576          ; PC := 576
574 [-]: LOADNIL   R57 R57      ; R57 := nil
575 [-]: RETURN    R57 2        ; return R57
576 [-]: GETTABLE  R57 R0 K16   ; R57 := R0["mStoreItem"]
577 [-]: LOADNIL   R58 R58      ; R58 := nil
578 [-]: GETTABLE  R59 R0 K45   ; R59 := R0["mExtraPurchaseInfoJson"]
579 [-]: EQ        1 R59 K22    ; if R59 == "" then PC := 589
580 [-]: JMP       589          ; PC := 589
581 [-]: GETGLOBAL R59 K46      ; R59 := cjson
582 [-]: GETTABLE  R59 R59 K47  ; R59 := R59[0x7ab914d8]
583 [-]: GETTABLE  R60 R0 K45   ; R60 := R0["mExtraPurchaseInfoJson"]
584 [-]: CALL      R59 2 2      ; R59 := R59(R60)
585 [-]: GETTABLE  R60 R59 K86  ; R60 := R59["ItemId"]
586 [-]: EQ        1 R60 K49    ; if R60 == nil then PC := 589
587 [-]: JMP       589          ; PC := 589
588 [-]: GETTABLE  R58 R59 K86  ; R58 := R59["ItemId"]
589 [-]: LOADBOOL  R60 0 0      ; R60 := false
590 [-]: LOADK     R61 1        ; R61 := 1.000000
591 [-]: LEN       R62 R53      ; R62 := # R53
592 [-]: LOADK     R63 1        ; R63 := 1.000000
593 [-]: FORPREP   R61 739      ; R61 -= R63; PC := 739
594 [-]: GETTABLE  R65 R53 R64  ; R65 := R53[R64]
595 [-]: GETGLOBAL R66 K27      ; R66 := 0x7b998233
596 [-]: MOVE      R67 R58      ; R67 := R58
597 [-]: CALL      R66 2 2      ; R66 := R66(R67)
598 [-]: TEST      R66 1        ; if R66 then PC := 605
599 [-]: JMP       605          ; PC := 605
600 [-]: GETTABLE  R66 R65 K21  ; R66 := R65["mId"]
601 [-]: SELF      R66 R66 K87  ; R67 := R66; R66 := R66[0xf537cfc7]
602 [-]: CALL      R66 2 2      ; R66 := R66(R67)
603 [-]: EQ        1 R58 R66    ; if R58 == R66 then PC := 613
604 [-]: JMP       613          ; PC := 613
605 [-]: GETGLOBAL R66 K27      ; R66 := 0x7b998233
606 [-]: MOVE      R67 R58      ; R67 := R58
607 [-]: CALL      R66 2 2      ; R66 := R66(R67)
608 [-]: TEST      R66 0        ; if not R66 then PC := 739
609 [-]: JMP       739          ; PC := 739
610 [-]: GETTABLE  R66 R65 K16  ; R66 := R65["mStoreItem"]
611 [-]: EQ        0 R66 R57    ; if R66 ~= R57 then PC := 739
612 [-]: JMP       739          ; PC := 739
613 [-]: GETTABLE  R66 R65 K55  ; R66 := R65["mRegularPrice"]
614 [-]: GETTABLE  R66 R66 K88  ; R66 := R66["minValue"]
615 [-]: GETTABLE  R67 R65 K55  ; R67 := R65["mRegularPrice"]
616 [-]: GETTABLE  R67 R67 K89  ; R67 := R67["maxValue"]
617 [-]: EQ        0 R66 R67    ; if R66 ~= R67 then PC := 636
618 [-]: JMP       636          ; PC := 636
619 [-]: GETTABLE  R66 R65 K55  ; R66 := R65["mRegularPrice"]
620 [-]: GETTABLE  R66 R66 K89  ; R66 := R66["maxValue"]
621 [-]: LT        0 K3 R66     ; if 0.000000 >= R66 then PC := 636
622 [-]: JMP       636          ; PC := 636
623 [-]: GETUPVAL  R66 U1       ; R66 := U1
624 [-]: GETTABLE  R66 R66 K29  ; R66 := R66["REGULAR_CREDITS"]
625 [-]: GETTABLE  R67 R65 K55  ; R67 := R65["mRegularPrice"]
626 [-]: GETTABLE  R67 R67 K89  ; R67 := R67["maxValue"]
627 [-]: GETTABLE  R68 R0 K30   ; R68 := R0["mQuantity"]
628 [-]: MUL       R67 R67 R68  ; R67 := R67 * R68
629 [-]: SETTABLE  R1 R66 R67   ; R1[R66] := R67
630 [-]: GETUPVAL  R66 U1       ; R66 := U1
631 [-]: GETTABLE  R66 R66 K29  ; R66 := R66["REGULAR_CREDITS"]
632 [-]: GETTABLE  R67 R65 K55  ; R67 := R65["mRegularPrice"]
633 [-]: GETTABLE  R67 R67 K89  ; R67 := R67["maxValue"]
634 [-]: SETTABLE  R2 R66 R67   ; R2[R66] := R67
635 [-]: LOADBOOL  R60 1 0      ; R60 := true
636 [-]: GETTABLE  R66 R65 K90  ; R66 := R65["mPremiumPrice"]
637 [-]: GETTABLE  R66 R66 K88  ; R66 := R66["minValue"]
638 [-]: GETTABLE  R67 R65 K90  ; R67 := R65["mPremiumPrice"]
639 [-]: GETTABLE  R67 R67 K89  ; R67 := R67["maxValue"]
640 [-]: EQ        0 R66 R67    ; if R66 ~= R67 then PC := 659
641 [-]: JMP       659          ; PC := 659
642 [-]: GETTABLE  R66 R65 K90  ; R66 := R65["mPremiumPrice"]
643 [-]: GETTABLE  R66 R66 K89  ; R66 := R66["maxValue"]
644 [-]: LT        0 K3 R66     ; if 0.000000 >= R66 then PC := 659
645 [-]: JMP       659          ; PC := 659
646 [-]: GETUPVAL  R66 U1       ; R66 := U1
647 [-]: GETTABLE  R66 R66 K31  ; R66 := R66["PREMIUM_CREDITS"]
648 [-]: GETTABLE  R67 R65 K90  ; R67 := R65["mPremiumPrice"]
649 [-]: GETTABLE  R67 R67 K89  ; R67 := R67["maxValue"]
650 [-]: GETTABLE  R68 R0 K30   ; R68 := R0["mQuantity"]
651 [-]: MUL       R67 R67 R68  ; R67 := R67 * R68
652 [-]: SETTABLE  R1 R66 R67   ; R1[R66] := R67
653 [-]: GETUPVAL  R66 U1       ; R66 := U1
654 [-]: GETTABLE  R66 R66 K31  ; R66 := R66["PREMIUM_CREDITS"]
655 [-]: GETTABLE  R67 R65 K90  ; R67 := R65["mPremiumPrice"]
656 [-]: GETTABLE  R67 R67 K89  ; R67 := R67["maxValue"]
657 [-]: SETTABLE  R2 R66 R67   ; R2[R66] := R67
658 [-]: LOADBOOL  R60 1 0      ; R60 := true
659 [-]: GETTABLE  R66 R65 K56  ; R66 := R65["mItemPrices"]
660 [-]: EQ        1 R66 K49    ; if R66 == nil then PC := 717
661 [-]: JMP       717          ; PC := 717
662 [-]: LOADBOOL  R60 1 0      ; R60 := true
663 [-]: GETUPVAL  R66 U1       ; R66 := U1
664 [-]: GETTABLE  R66 R66 K57  ; R66 := R66["ITEMS"]
665 [-]: GETTABLE  R67 R65 K56  ; R67 := R65["mItemPrices"]
666 [-]: SETTABLE  R1 R66 R67   ; R1[R66] := R67
667 [-]: GETUPVAL  R66 U1       ; R66 := U1
668 [-]: GETTABLE  R66 R66 K57  ; R66 := R66["ITEMS"]
669 [-]: GETTABLE  R67 R65 K56  ; R67 := R65["mItemPrices"]
670 [-]: SETTABLE  R2 R66 R67   ; R2[R66] := R67
671 [-]: LOADK     R66 1        ; R66 := 1.000000
672 [-]: GETUPVAL  R67 U1       ; R67 := U1
673 [-]: GETTABLE  R67 R67 K57  ; R67 := R67["ITEMS"]
674 [-]: GETTABLE  R67 R1 R67   ; R67 := R1[R67]
675 [-]: LEN       R67 R67      ; R67 := # R67
676 [-]: LOADK     R68 1        ; R68 := 1.000000
677 [-]: FORPREP   R66 716      ; R66 -= R68; PC := 716
678 [-]: GETUPVAL  R70 U1       ; R70 := U1
679 [-]: GETTABLE  R70 R70 K57  ; R70 := R70["ITEMS"]
680 [-]: GETTABLE  R70 R1 R70   ; R70 := R1[R70]
681 [-]: GETTABLE  R70 R70 R69  ; R70 := R70[R69]
682 [-]: GETTABLE  R70 R70 K53  ; R70 := R70["mItemType"]
683 [-]: EQ        0 R70 R52    ; if R70 ~= R52 then PC := 696
684 [-]: JMP       696          ; PC := 696
685 [-]: GETUPVAL  R70 U1       ; R70 := U1
686 [-]: GETTABLE  R70 R70 K91  ; R70 := R70["AMBULAS_DATA"]
687 [-]: GETTABLE  R71 R65 K92  ; R71 := R65["mExtraCurrencyPrice"]
688 [-]: GETTABLE  R72 R0 K30   ; R72 := R0["mQuantity"]
689 [-]: MUL       R71 R71 R72  ; R71 := R71 * R72
690 [-]: SETTABLE  R1 R70 R71   ; R1[R70] := R71
691 [-]: GETUPVAL  R70 U1       ; R70 := U1
692 [-]: GETTABLE  R70 R70 K91  ; R70 := R70["AMBULAS_DATA"]
693 [-]: GETTABLE  R71 R65 K92  ; R71 := R65["mExtraCurrencyPrice"]
694 [-]: SETTABLE  R2 R70 R71   ; R2[R70] := R71
695 [-]: JMP       716          ; PC := 716
696 [-]: GETUPVAL  R70 U1       ; R70 := U1
697 [-]: GETTABLE  R70 R70 K57  ; R70 := R70["ITEMS"]
698 [-]: GETTABLE  R70 R1 R70   ; R70 := R1[R70]
699 [-]: GETTABLE  R70 R70 R69  ; R70 := R70[R69]
700 [-]: GETUPVAL  R71 U1       ; R71 := U1
701 [-]: GETTABLE  R71 R71 K57  ; R71 := R71["ITEMS"]
702 [-]: GETTABLE  R71 R1 R71   ; R71 := R1[R71]
703 [-]: GETTABLE  R71 R71 R69  ; R71 := R71[R69]
704 [-]: GETTABLE  R71 R71 K58  ; R71 := R71["mItemCount"]
705 [-]: GETTABLE  R72 R0 K30   ; R72 := R0["mQuantity"]
706 [-]: MUL       R71 R71 R72  ; R71 := R71 * R72
707 [-]: SETTABLE  R70 K58 R71  ; R70["mItemCount"] := R71
708 [-]: GETUPVAL  R70 U1       ; R70 := U1
709 [-]: GETTABLE  R70 R70 K57  ; R70 := R70["ITEMS"]
710 [-]: GETTABLE  R70 R1 R70   ; R70 := R1[R70]
711 [-]: GETTABLE  R70 R70 R69  ; R70 := R70[R69]
712 [-]: GETTABLE  R70 R70 K58  ; R70 := R70["mItemCount"]
713 [-]: LE        0 R70 K3     ; if R70 > 0.000000 then PC := 716
714 [-]: JMP       716          ; PC := 716
715 [-]: LOADBOOL  R60 0 0      ; R60 := false
716 [-]: FORLOOP   R66 678      ; R66 += R68; if R66 <= R67 then begin PC := 678; R69 := R66 end
717 [-]: GETTABLE  R70 R65 K93  ; R70 := R65["mFocusXpCost"]
718 [-]: GETTABLE  R70 R70 K94  ; R70 := R70["mCost"]
719 [-]: LT        0 K3 R70     ; if 0.000000 >= R70 then PC := 737
720 [-]: JMP       737          ; PC := 737
721 [-]: GETTABLE  R70 R65 K93  ; R70 := R65["mFocusXpCost"]
722 [-]: GETTABLE  R70 R70 K96  ; R70 := R70["mPolarity"]
723 [-]: SETGLOBAL R70 K95      ; mPurchasePolarityType := R70
724 [-]: GETUPVAL  R70 U1       ; R70 := U1
725 [-]: GETTABLE  R70 R70 K97  ; R70 := R70["FOCUS_XP"]
726 [-]: GETTABLE  R71 R65 K93  ; R71 := R65["mFocusXpCost"]
727 [-]: GETTABLE  R71 R71 K94  ; R71 := R71["mCost"]
728 [-]: GETTABLE  R72 R0 K30   ; R72 := R0["mQuantity"]
729 [-]: MUL       R71 R71 R72  ; R71 := R71 * R72
730 [-]: SETTABLE  R1 R70 R71   ; R1[R70] := R71
731 [-]: GETUPVAL  R70 U1       ; R70 := U1
732 [-]: GETTABLE  R70 R70 K97  ; R70 := R70["FOCUS_XP"]
733 [-]: GETTABLE  R71 R65 K93  ; R71 := R65["mFocusXpCost"]
734 [-]: GETTABLE  R71 R71 K94  ; R71 := R71["mCost"]
735 [-]: SETTABLE  R2 R70 R71   ; R2[R70] := R71
736 [-]: LOADBOOL  R60 1 0      ; R60 := true
737 [-]: GETTABLE  R3 R65 K98   ; R3 := R65["mQuantityMultiplier"]
738 [-]: JMP       740          ; PC := 740
739 [-]: FORLOOP   R61 594      ; R61 += R63; if R61 <= R62 then begin PC := 594; R64 := R61 end
740 [-]: TEST      R60 1        ; if R60 then PC := 744
741 [-]: JMP       744          ; PC := 744
742 [-]: LOADNIL   R70 R70      ; R70 := nil
743 [-]: RETURN    R70 2        ; return R70
744 [-]: MOVE      R70 R1       ; R70 := R1
745 [-]: MOVE      R71 R2       ; R71 := R2
746 [-]: MOVE      R72 R3       ; R72 := R3
747 [-]: RETURN    R70 4        ; return R70,R71,R72
748 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 1033
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  4 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADK     R3 1         ; R3 := 1.000000
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: MOVE      R5 R2        ; R5 := R2
  9 [-]: MOVE      R6 R3        ; R6 := R3
 10 [-]: RETURN    R4 4         ; return R4,R5,R6
 11 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 1042
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 3
  2 [-]: JMP       3            ; PC := 3
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x8fbd62e4]
  5 [-]: LOADK     R3 K1        ; R3 := "OnUpdateSessionSettings"
  6 [-]: CALL      R2 2 1       ; R2(R3)
  7 [-]: GETGLOBAL R2 K2        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MenuSuitAvatar"]
  9 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 0         ; if not R3 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETGLOBAL R3 K5        ; R3 := 0x89326c93
 15 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x78298275]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: MOVE      R2 R3        ; R2 := R3
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 19 [-]: MOVE      R4 R2        ; R4 := R2
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 55
 22 [-]: JMP       55           ; PC := 55
 23 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde321e6f]
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xcfd657f3]
 26 [-]: LOADBOOL  R5 0 0       ; R5 := false
 27 [-]: CALL      R3 3 1       ; R3(R4,R5)
 28 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xde321e6f]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x1d2dfe4a]
 31 [-]: GETGLOBAL R5 K10       ; R5 := 0x25d99d89
 32 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x62c81b76]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: LOADK     R6 0         ; R6 := 0.000000
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETUPVAL  R3 U0        ; R3 := U0
 37 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0xcf1fcba4]
 38 [-]: CALL      R3 1 2       ; R3 := R3()
 39 [-]: TEST      R3 0         ; if not R3 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: LOADK     R3 K14       ; R3 := "{\"loadout\":"
 42 [-]: GETGLOBAL R4 K15       ; R4 := 0xbe190284
 43 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0xe08c150e]
 44 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 45 [-]: LOADK     R5 K17       ; R5 := "}"
 46 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 47 [-]: GETGLOBAL R4 K15       ; R4 := 0xbe190284
 48 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4[0x83bfaed0]
 49 [-]: MOVE      R6 R3        ; R6 := R3
 50 [-]: CALL      R4 3 1       ; R4(R5,R6)
 51 [-]: GETGLOBAL R4 K15       ; R4 := 0xbe190284
 52 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4[0x6dd14378]
 53 [-]: MOVE      R6 R2        ; R6 := R2
 54 [-]: CALL      R4 3 1       ; R4(R5,R6)
 55 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 1064
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 4.000000 then PC := 21
  2 [-]: JMP       21           ; PC := 21
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  4 [-]: GETGLOBAL R2 K3        ; R2 := 0x25d99d89
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
  9 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xae7e2261]
 10 [-]: GETGLOBAL R3 K5        ; R3 := 0xb009bbc6
 11 [-]: GETGLOBAL R4 K6        ; R4 := mPurchaseParams
 12 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mStoreItem"]
 13 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xf278f8a1]
 14 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 15 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 16 [-]: CALL      R1 0 1       ; R1(R2,...)
 17 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 18 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xb6e2ab0d]
 19 [-]: LOADK     R3 K10       ; R3 := "OnSaveLoadOutComplete"
 20 [-]: CALL      R1 3 1       ; R1(R2,R3)
 21 [-]: LOADNIL   R1 R1        ; R1 := nil
 22 [-]: SETGLOBAL R1 K6        ; mPurchaseParams := R1
 23 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 1072
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SETGLOBAL R1 K0        ; mPurchasePopupMovie := R1
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 10 [-]: CALL      R1 3 1       ; R1(R2,R3)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 38
 12 [-]: JMP       38           ; PC := 38
 13 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mStoreItem"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xea735790]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 38
 18 [-]: JMP       38           ; PC := 38
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x603636ad
 20 [-]: GETGLOBAL R2 K2        ; R2 := mPurchaseParams
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mStoreItem"]
 22 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xd3a9d01f]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x6d604ba7]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 27 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0xe0cba3ca]
 30 [-]: GETGLOBAL R3 K5        ; R3 := 0x603636ad
 31 [-]: LOADK     R4 K9        ; R4 := "/Lotus/Language/Menu/EquippedGearOnPurchase"
 32 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 33 [-]: SETTABLE  R5 K10 R1    ; R5["ITEM"] := R1
 34 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 35 [-]: LOADK     R4 K11       ; R4 := "AddToGear"
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: JMP       40           ; PC := 40
 38 [-]: LOADNIL   R2 R2        ; R2 := nil
 39 [-]: SETGLOBAL R2 K2        ; mPurchaseParams := R2
 40 [-]: LOADK     R2 1         ; R2 := 1.000000
 41 [-]: SETGLOBAL R2 K12       ; mQuantityToReceive := R2
 42 [-]: GETGLOBAL R2 K13       ; R2 := _T
 43 [-]: SETTABLE  R2 K14 K15   ; R2["purchasedItems"] := nil
 44 [-]: GETGLOBAL R2 K13       ; R2 := _T
 45 [-]: SETTABLE  R2 K16 K15   ; R2["PurchaseSuccessLocOverride"] := nil
 46 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 1088
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mSkipConfirm"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETGLOBAL R0 K2        ; R0 := 0xae91e43b
  6 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xe4162eed]
  7 [-]: LOADK     R2 K4        ; R2 := "ConfirmPurchase"
  8 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
  9 [-]: LOADK     R4 4         ; R4 := 4.000000
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R0 0 1       ; R0(R1,...)
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: LOADK     R0 K7        ; R0 := ""
 14 [-]: LOADK     R1 K7        ; R1 := ""
 15 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["REGULAR_CREDITS"]
 18 [-]: SETTABLE  R2 R3 K9     ; R2[R3] := "<CREDITS>"
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["PREMIUM_CREDITS"]
 21 [-]: SETTABLE  R2 R3 K11    ; R2[R3] := "<PLATINUM_CREDITS>"
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["PRIME_BUCKS"]
 24 [-]: SETTABLE  R2 R3 K13    ; R2[R3] := "<PRIME_BUCKS>"
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["PRIME_TOKENS"]
 27 [-]: SETTABLE  R2 R3 K15    ; R2[R3] := "<PRIME_TOKENS>"
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["STANDING"]
 30 [-]: SETTABLE  R2 R3 K17    ; R2[R3] := "<REPUTATION>"
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["AMBULAS_DATA"]
 33 [-]: SETTABLE  R2 R3 K19    ; R2[R3] := "<AMBULAS_DATA>"
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["FOCUS_XP"]
 36 [-]: SETTABLE  R2 R3 K21    ; R2[R3] := "<FOCUS>"
 37 [-]: GETGLOBAL R3 K0        ; R3 := mPurchaseParams
 38 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["mStoreItem"]
 39 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0x075cb724]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: GETGLOBAL R4 K24       ; R4 := mPurchaseQuantityMultiplier
 42 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 43 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 44 [-]: LOADBOOL  R5 1 0       ; R5 := true
 45 [-]: GETGLOBAL R6 K25       ; R6 := 0xcfc01047
 46 [-]: GETGLOBAL R7 K26       ; R7 := mPurchaseUnitPrice
 47 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 48 [-]: JMP       66           ; PC := 66
 49 [-]: GETGLOBAL R11 K27      ; R11 := 0x0b96777e
 50 [-]: MOVE      R12 R10      ; R12 := R10
 51 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 52 [-]: EQ        1 R11 K28    ; if R11 == "table" then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: DIV       R11 R10 R3   ; R11 := R10 / R3
 55 [-]: SETTABLE  R4 R9 R11    ; R4[R9] := R11
 56 [-]: GETGLOBAL R11 K29      ; R11 := 0x5bced4c4
 57 [-]: GETTABLE  R11 R11 K30  ; R11 := R11[0x55f27c30]
 58 [-]: GETTABLE  R12 R4 R9    ; R12 := R4[R9]
 59 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 60 [-]: MUL       R11 R11 R3   ; R11 := R11 * R3
 61 [-]: EQ        1 R11 R10    ; if R11 == R10 then PC := 66
 62 [-]: JMP       66           ; PC := 66
 63 [-]: LOADBOOL  R5 0 0       ; R5 := false
 64 [-]: GETGLOBAL R4 K26       ; R4 := mPurchaseUnitPrice
 65 [-]: JMP       68           ; PC := 68
 66 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 49; R8 := R9 end
 67 [-]: JMP       49           ; PC := 49
 68 [-]: NEWTABLE  R11 7 0      ; R11 := {}
 69 [-]: GETUPVAL  R12 U0       ; R12 := U0
 70 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["AMBULAS_DATA"]
 71 [-]: GETUPVAL  R13 U0       ; R13 := U0
 72 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["FOCUS_XP"]
 73 [-]: GETUPVAL  R14 U0       ; R14 := U0
 74 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["STANDING"]
 75 [-]: GETUPVAL  R15 U0       ; R15 := U0
 76 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["PRIME_BUCKS"]
 77 [-]: GETUPVAL  R16 U0       ; R16 := U0
 78 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["PREMIUM_CREDITS"]
 79 [-]: GETUPVAL  R17 U0       ; R17 := U0
 80 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["REGULAR_CREDITS"]
 81 [-]: GETUPVAL  R18 U0       ; R18 := U0
 82 [-]: GETTABLE  R18 R18 K31  ; R18 := R18["ITEMS"]
 83 [-]: SETLIST   R11 7 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 7
 84 [-]: LOADBOOL  R12 1 0      ; R12 := true
 85 [-]: GETGLOBAL R13 K32      ; R13 := 0xc8802016
 86 [-]: MOVE      R14 R11      ; R14 := R11
 87 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 88 [-]: JMP       185          ; PC := 185
 89 [-]: GETUPVAL  R18 U0       ; R18 := U0
 90 [-]: GETTABLE  R18 R18 K31  ; R18 := R18["ITEMS"]
 91 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 134
 92 [-]: JMP       134          ; PC := 134
 93 [-]: GETGLOBAL R18 K33      ; R18 := mPurchaseTotalPrice
 94 [-]: GETTABLE  R18 R18 R17  ; R18 := R18[R17]
 95 [-]: TEST      R18 0        ; if not R18 then PC := 185
 96 [-]: JMP       185          ; PC := 185
 97 [-]: LOADBOOL  R12 0 0      ; R12 := false
 98 [-]: LOADK     R18 1        ; R18 := 1.000000
 99 [-]: GETGLOBAL R19 K33      ; R19 := mPurchaseTotalPrice
100 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
101 [-]: LEN       R19 R19      ; R19 := # R19
102 [-]: LOADK     R20 1        ; R20 := 1.000000
103 [-]: FORPREP   R18 132      ; R18 -= R20; PC := 132
104 [-]: GETGLOBAL R22 K33      ; R22 := mPurchaseTotalPrice
105 [-]: GETTABLE  R22 R22 R17  ; R22 := R22[R17]
106 [-]: GETTABLE  R22 R22 R21  ; R22 := R22[R21]
107 [-]: GETGLOBAL R23 K34      ; R23 := 0xb009bbc6
108 [-]: GETTABLE  R24 R22 K35  ; R24 := R22["mItemType"]
109 [-]: CALL      R23 2 2      ; R23 := R23(R24)
110 [-]: EQ        1 R1 K7      ; if R1 == "" then PC := 115
111 [-]: JMP       115          ; PC := 115
112 [-]: MOVE      R24 R1       ; R24 := R1
113 [-]: LOADK     R25 K36      ; R25 := "\r"
114 [-]: CONCAT    R1 R24 R25   ; R1 := R24 .. R25
115 [-]: MOVE      R24 R1       ; R24 := R1
116 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
117 [-]: SELF      R25 R25 K37  ; R26 := R25; R25 := R25[0x42b04007]
118 [-]: GETGLOBAL R27 K5       ; R27 := 0x64fb1586
119 [-]: SELF      R28 R23 K38  ; R29 := R23; R28 := R23[0xd3a9d01f]
120 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
121 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
122 [-]: LOADBOOL  R28 0 0      ; R28 := false
123 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
124 [-]: CONCAT    R1 R24 R25   ; R1 := R24 .. R25
125 [-]: GETTABLE  R24 R22 K39  ; R24 := R22["mItemCount"]
126 [-]: LT        0 K40 R24    ; if 1.000000 >= R24 then PC := 132
127 [-]: JMP       132          ; PC := 132
128 [-]: MOVE      R24 R1       ; R24 := R1
129 [-]: LOADK     R25 K41      ; R25 := " x "
130 [-]: GETTABLE  R26 R22 K39  ; R26 := R22["mItemCount"]
131 [-]: CONCAT    R1 R24 R26   ; R1 := R24 .. R25 .. R26
132 [-]: FORLOOP   R18 104      ; R18 += R20; if R18 <= R19 then begin PC := 104; R21 := R18 end
133 [-]: JMP       185          ; PC := 185
134 [-]: GETTABLE  R24 R4 R17   ; R24 := R4[R17]
135 [-]: TEST      R24 0        ; if not R24 then PC := 158
136 [-]: JMP       158          ; PC := 158
137 [-]: GETTABLE  R24 R4 R17   ; R24 := R4[R17]
138 [-]: LT        0 K42 R24    ; if 0.000000 >= R24 then PC := 158
139 [-]: JMP       158          ; PC := 158
140 [-]: LOADBOOL  R12 0 0      ; R12 := false
141 [-]: EQ        1 R0 K7      ; if R0 == "" then PC := 146
142 [-]: JMP       146          ; PC := 146
143 [-]: MOVE      R24 R0       ; R24 := R0
144 [-]: LOADK     R25 K43      ; R25 := " + "
145 [-]: CONCAT    R0 R24 R25   ; R0 := R24 .. R25
146 [-]: GETGLOBAL R24 K2       ; R24 := 0xae91e43b
147 [-]: SELF      R24 R24 K37  ; R25 := R24; R24 := R24[0x42b04007]
148 [-]: GETTABLE  R26 R2 R17   ; R26 := R2[R17]
149 [-]: LOADBOOL  R27 1 0      ; R27 := true
150 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
151 [-]: MOVE      R25 R0       ; R25 := R0
152 [-]: MOVE      R26 R24      ; R26 := R24
153 [-]: GETUPVAL  R27 U1       ; R27 := U1
154 [-]: GETTABLE  R27 R27 K44  ; R27 := R27[0x1142c7a8]
155 [-]: GETTABLE  R28 R4 R17   ; R28 := R4[R17]
156 [-]: CALL      R27 2 2      ; R27 := R27(R28)
157 [-]: CONCAT    R0 R25 R27   ; R0 := R25 .. R26 .. R27
158 [-]: GETGLOBAL R25 K33      ; R25 := mPurchaseTotalPrice
159 [-]: GETTABLE  R25 R25 R17  ; R25 := R25[R17]
160 [-]: TEST      R25 0        ; if not R25 then PC := 185
161 [-]: JMP       185          ; PC := 185
162 [-]: GETGLOBAL R25 K33      ; R25 := mPurchaseTotalPrice
163 [-]: GETTABLE  R25 R25 R17  ; R25 := R25[R17]
164 [-]: LT        0 K42 R25    ; if 0.000000 >= R25 then PC := 185
165 [-]: JMP       185          ; PC := 185
166 [-]: LOADBOOL  R12 0 0      ; R12 := false
167 [-]: EQ        1 R1 K7      ; if R1 == "" then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: MOVE      R25 R1       ; R25 := R1
170 [-]: LOADK     R26 K43      ; R26 := " + "
171 [-]: CONCAT    R1 R25 R26   ; R1 := R25 .. R26
172 [-]: GETGLOBAL R25 K2       ; R25 := 0xae91e43b
173 [-]: SELF      R25 R25 K37  ; R26 := R25; R25 := R25[0x42b04007]
174 [-]: GETTABLE  R27 R2 R17   ; R27 := R2[R17]
175 [-]: LOADBOOL  R28 1 0      ; R28 := true
176 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
177 [-]: MOVE      R26 R1       ; R26 := R1
178 [-]: MOVE      R27 R25      ; R27 := R25
179 [-]: GETUPVAL  R28 U1       ; R28 := U1
180 [-]: GETTABLE  R28 R28 K44  ; R28 := R28[0x1142c7a8]
181 [-]: GETGLOBAL R29 K33      ; R29 := mPurchaseTotalPrice
182 [-]: GETTABLE  R29 R29 R17  ; R29 := R29[R17]
183 [-]: CALL      R28 2 2      ; R28 := R28(R29)
184 [-]: CONCAT    R1 R26 R28   ; R1 := R26 .. R27 .. R28
185 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 89; R15 := R16 end
186 [-]: JMP       89           ; PC := 89
187 [-]: GETUPVAL  R26 U2       ; R26 := U2
188 [-]: GETTABLE  R26 R26 K45  ; R26 := R26[0xc7ca0123]
189 [-]: GETGLOBAL R27 K2       ; R27 := 0xae91e43b
190 [-]: GETGLOBAL R28 K0       ; R28 := mPurchaseParams
191 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["mStoreItem"]
192 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
193 [-]: GETGLOBAL R27 K0       ; R27 := mPurchaseParams
194 [-]: GETTABLE  R27 R27 K22  ; R27 := R27["mStoreItem"]
195 [-]: SELF      R27 R27 K46  ; R28 := R27; R27 := R27[0xc3bbc5cb]
196 [-]: CALL      R27 2 2      ; R27 := R27(R28)
197 [-]: TEST      R27 0        ; if not R27 then PC := 282
198 [-]: JMP       282          ; PC := 282
199 [-]: LOADBOOL  R27 1 0      ; R27 := true
200 [-]: GETGLOBAL R28 K0       ; R28 := mPurchaseParams
201 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["mStoreItem"]
202 [-]: SELF      R28 R28 K47  ; R29 := R28; R28 := R28[0xf278f8a1]
203 [-]: CALL      R28 2 2      ; R28 := R28(R29)
204 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28[0xf2deaf69]
205 [-]: GETGLOBAL R30 K49      ; R30 := gLotusBoosterUpgradeType
206 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
207 [-]: TEST      R28 0        ; if not R28 then PC := 218
208 [-]: JMP       218          ; PC := 218
209 [-]: GETGLOBAL R28 K34      ; R28 := 0xb009bbc6
210 [-]: GETGLOBAL R29 K0       ; R29 := mPurchaseParams
211 [-]: GETTABLE  R29 R29 K22  ; R29 := R29["mStoreItem"]
212 [-]: SELF      R29 R29 K47  ; R30 := R29; R29 := R29[0xf278f8a1]
213 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
214 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
215 [-]: SELF      R29 R28 K50  ; R30 := R28; R29 := R28[0x4bcc0a75]
216 [-]: CALL      R29 2 2      ; R29 := R29(R30)
217 [-]: MOVE      R27 R29      ; R27 := R29
218 [-]: TEST      R27 0        ; if not R27 then PC := 268
219 [-]: JMP       268          ; PC := 268
220 [-]: GETGLOBAL R29 K2       ; R29 := 0xae91e43b
221 [-]: SELF      R29 R29 K37  ; R30 := R29; R29 := R29[0x42b04007]
222 [-]: LOADK     R31 K51      ; R31 := "/Lotus/Language/Menu/Global_DurabilityPermanent"
223 [-]: LOADBOOL  R32 0 0      ; R32 := false
224 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
225 [-]: GETGLOBAL R30 K52      ; R30 := 0xa94df70b
226 [-]: SELF      R30 R30 K53  ; R31 := R30; R30 := R30[0x2539e471]
227 [-]: GETGLOBAL R32 K0       ; R32 := mPurchaseParams
228 [-]: GETTABLE  R32 R32 K54  ; R32 := R32["mDurability"]
229 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
230 [-]: EQ        0 R30 K55    ; if R30 ~= 259200.000000 then PC := 239
231 [-]: JMP       239          ; PC := 239
232 [-]: GETGLOBAL R31 K2       ; R31 := 0xae91e43b
233 [-]: SELF      R31 R31 K37  ; R32 := R31; R31 := R31[0x42b04007]
234 [-]: LOADK     R33 K56      ; R33 := "/Lotus/Language/Menu/Global_3Days"
235 [-]: LOADBOOL  R34 0 0      ; R34 := false
236 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
237 [-]: MOVE      R30 R31      ; R30 := R31
238 [-]: JMP       263          ; PC := 263
239 [-]: EQ        0 R30 K57    ; if R30 ~= 604800.000000 then PC := 248
240 [-]: JMP       248          ; PC := 248
241 [-]: GETGLOBAL R31 K2       ; R31 := 0xae91e43b
242 [-]: SELF      R31 R31 K37  ; R32 := R31; R31 := R31[0x42b04007]
243 [-]: LOADK     R33 K58      ; R33 := "/Lotus/Language/Menu/Global_7Days"
244 [-]: LOADBOOL  R34 0 0      ; R34 := false
245 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
246 [-]: MOVE      R30 R31      ; R30 := R31
247 [-]: JMP       263          ; PC := 263
248 [-]: GETUPVAL  R31 U1       ; R31 := U1
249 [-]: GETTABLE  R31 R31 K59  ; R31 := R31[0x06d055f9]
250 [-]: LT        1 K42 R30    ; if 0.000000 < R30 then PC := 253
251 [-]: JMP       253          ; PC := 253
252 [-]: LOADBOOL  R32 0 1      ; R32 := false; PC := 253
253 [-]: LOADBOOL  R32 1 0      ; R32 := true
254 [-]: GETUPVAL  R33 U2       ; R33 := U2
255 [-]: GETTABLE  R33 R33 K60  ; R33 := R33[0x817b1503]
256 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
257 [-]: MOVE      R35 R30      ; R35 := R30
258 [-]: LOADBOOL  R36 1 0      ; R36 := true
259 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
260 [-]: MOVE      R34 R29      ; R34 := R29
261 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
262 [-]: MOVE      R30 R31      ; R30 := R31
263 [-]: MOVE      R31 R30      ; R31 := R30
264 [-]: LOADK     R32 K61      ; R32 := " "
265 [-]: MOVE      R33 R26      ; R33 := R26
266 [-]: CONCAT    R26 R31 R33  ; R26 := R31 .. R32 .. R33
267 [-]: JMP       282          ; PC := 282
268 [-]: GETGLOBAL R31 K52      ; R31 := 0xa94df70b
269 [-]: SELF      R31 R31 K62  ; R32 := R31; R31 := R31[0xbd680672]
270 [-]: GETGLOBAL R33 K0       ; R33 := mPurchaseParams
271 [-]: GETTABLE  R33 R33 K54  ; R33 := R33["mDurability"]
272 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
273 [-]: MOVE      R32 R26      ; R32 := R26
274 [-]: LOADK     R33 K63      ; R33 := " ("
275 [-]: GETGLOBAL R34 K64      ; R34 := 0x603636ad
276 [-]: LOADK     R35 K65      ; R35 := "/Lotus/Language/Menu/Global_BoosterUses"
277 [-]: NEWTABLE  R36 0 1      ; R36 := {}
278 [-]: SETTABLE  R36 K66 R31  ; R36["NUM_USES"] := R31
279 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
280 [-]: LOADK     R35 K67      ; R35 := ")"
281 [-]: CONCAT    R26 R32 R35  ; R26 := R32 .. R33 .. R34 .. R35
282 [-]: LOADK     R32 K7       ; R32 := ""
283 [-]: NEWTABLE  R33 0 4      ; R33 := {}
284 [-]: SETTABLE  R33 K68 R26  ; R33["ITEM"] := R26
285 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
286 [-]: MUL       R34 R34 R3   ; R34 := R34 * R3
287 [-]: SETTABLE  R33 K69 R34  ; R33["QUANTITY"] := R34
288 [-]: SETTABLE  R33 K71 R0   ; R33["UNIT_PRICE"] := R0
289 [-]: SETTABLE  R33 K72 R1   ; R33["PRICE"] := R1
290 [-]: GETGLOBAL R34 K0       ; R34 := mPurchaseParams
291 [-]: GETTABLE  R34 R34 K73  ; R34 := R34["mSource"]
292 [-]: EQ        0 R34 K75    ; if R34 ~= 2.000000 then PC := 304
293 [-]: JMP       304          ; PC := 304
294 [-]: TEST      R12 0        ; if not R12 then PC := 304
295 [-]: JMP       304          ; PC := 304
296 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
297 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
298 [-]: LOADK     R36 K76      ; R36 := "/Lotus/Language/Menu/Global_FreePurchaseConfirmation"
299 [-]: LOADBOOL  R37 0 0      ; R37 := false
300 [-]: MOVE      R38 R33      ; R38 := R33
301 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
302 [-]: MOVE      R32 R34      ; R32 := R34
303 [-]: JMP       361          ; PC := 361
304 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
305 [-]: LT        0 K40 R34    ; if 1.000000 >= R34 then PC := 346
306 [-]: JMP       346          ; PC := 346
307 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
308 [-]: GETGLOBAL R35 K0       ; R35 := mPurchaseParams
309 [-]: GETTABLE  R35 R35 K77  ; R35 := R35["mQuantity"]
310 [-]: EQ        1 R34 R35    ; if R34 == R35 then PC := 328
311 [-]: JMP       328          ; PC := 328
312 [-]: GETGLOBAL R34 K0       ; R34 := mPurchaseParams
313 [-]: GETTABLE  R34 R34 K77  ; R34 := R34["mQuantity"]
314 [-]: SETTABLE  R33 K78 R34  ; R33["QUANTITY_BOUGHT"] := R34
315 [-]: GETGLOBAL R34 K70      ; R34 := mQuantityToReceive
316 [-]: GETGLOBAL R35 K0       ; R35 := mPurchaseParams
317 [-]: GETTABLE  R35 R35 K77  ; R35 := R35["mQuantity"]
318 [-]: SUB       R34 R34 R35  ; R34 := R34 - R35
319 [-]: SETTABLE  R33 K79 R34  ; R33["QUANTITY_FREE"] := R34
320 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
321 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
322 [-]: LOADK     R36 K80      ; R36 := "/Lotus/Language/Menu/Global_BogoPurchaseConfirmation"
323 [-]: LOADBOOL  R37 0 0      ; R37 := false
324 [-]: MOVE      R38 R33      ; R38 := R33
325 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
326 [-]: MOVE      R32 R34      ; R32 := R34
327 [-]: JMP       361          ; PC := 361
328 [-]: TEST      R5 1         ; if R5 then PC := 338
329 [-]: JMP       338          ; PC := 338
330 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
331 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
332 [-]: LOADK     R36 K81      ; R36 := "/Lotus/Language/Menu/Global_MultiBundlePurchaseConfirmation"
333 [-]: LOADBOOL  R37 0 0      ; R37 := false
334 [-]: MOVE      R38 R33      ; R38 := R33
335 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
336 [-]: MOVE      R32 R34      ; R32 := R34
337 [-]: JMP       361          ; PC := 361
338 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
339 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
340 [-]: LOADK     R36 K82      ; R36 := "/Lotus/Language/Menu/Global_MultiPurchaseConfirmation"
341 [-]: LOADBOOL  R37 0 0      ; R37 := false
342 [-]: MOVE      R38 R33      ; R38 := R33
343 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
344 [-]: MOVE      R32 R34      ; R32 := R34
345 [-]: JMP       361          ; PC := 361
346 [-]: GETTABLE  R34 R33 K69  ; R34 := R33["QUANTITY"]
347 [-]: LT        0 K40 R34    ; if 1.000000 >= R34 then PC := 354
348 [-]: JMP       354          ; PC := 354
349 [-]: MOVE      R34 R26      ; R34 := R26
350 [-]: LOADK     R35 K41      ; R35 := " x "
351 [-]: GETTABLE  R36 R33 K69  ; R36 := R33["QUANTITY"]
352 [-]: CONCAT    R34 R34 R36  ; R34 := R34 .. R35 .. R36
353 [-]: SETTABLE  R33 K68 R34  ; R33["ITEM"] := R34
354 [-]: GETGLOBAL R34 K2       ; R34 := 0xae91e43b
355 [-]: SELF      R34 R34 K37  ; R35 := R34; R34 := R34[0x42b04007]
356 [-]: LOADK     R36 K83      ; R36 := "/Lotus/Language/Menu/Global_PurchaseConfirmation"
357 [-]: LOADBOOL  R37 0 0      ; R37 := false
358 [-]: MOVE      R38 R33      ; R38 := R33
359 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
360 [-]: MOVE      R32 R34      ; R32 := R34
361 [-]: GETUPVAL  R34 U1       ; R34 := U1
362 [-]: GETTABLE  R34 R34 K84  ; R34 := R34[0xdedfded7]
363 [-]: MOVE      R35 R32      ; R35 := R32
364 [-]: LOADK     R36 K4       ; R36 := "ConfirmPurchase"
365 [-]: CALL      R34 3 1      ; R34(R35,R36)
366 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 1218
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: LOADK     R3 0         ; R3 := 0.000000
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 48
  5 [-]: JMP       48           ; PC := 48
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x659d451f]
  8 [-]: GETGLOBAL R3 K1        ; R3 := 0x0032441c
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["UISound_Purchase"]
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x76ea806b
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x3f3ae64c]
 13 [-]: LOADK     R4 0         ; R4 := 0.000000
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 54
 19 [-]: JMP       54           ; PC := 54
 20 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0x80563238]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 23 [-]: MOVE      R5 R3        ; R5 := R3
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: TEST      R4 1         ; if R4 then PC := 54
 26 [-]: JMP       54           ; PC := 54
 27 [-]: GETUPVAL  R4 U2        ; R4 := U2
 28 [-]: SELF      R5 R3 K7     ; R6 := R3; R5 := R3[0x1e11a6d0]
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: SELF      R6 R3 K8     ; R7 := R3; R6 := R3[0x9b466ee3]
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: SELF      R7 R3 K9     ; R8 := R3; R7 := R3[0x4ce20fca]
 33 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 34 [-]: SELF      R8 R3 K10    ; R9 := R3; R8 := R3[0xbd6729ff]
 35 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 36 [-]: SELF      R9 R3 K11    ; R10 := R3; R9 := R3[0xa59dbd63]
 37 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 38 [-]: CALL      R4 0 1       ; R4(R5,...)
 39 [-]: GETGLOBAL R4 K12       ; R4 := mPurchaseParams
 40 [-]: EQ        1 R4 K13     ; if R4 == nil then PC := 54
 41 [-]: JMP       54           ; PC := 54
 42 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 43 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0xe4162eed]
 44 [-]: LOADK     R6 K16       ; R6 := "CheckPurchaseRequirements"
 45 [-]: LOADK     R7 K17       ; R7 := ""
 46 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 47 [-]: JMP       54           ; PC := 54
 48 [-]: GETGLOBAL R4 K18       ; R4 := _T
 49 [-]: SETTABLE  R4 K19 K13   ; R4["PurchaseSuccessLocOverride"] := nil
 50 [-]: GETUPVAL  R4 U1        ; R4 := U1
 51 [-]: GETTABLE  R4 R4 K20    ; R4 := R4[0xe0cba3ca]
 52 [-]: LOADK     R5 K21       ; R5 := "/Lotus/Language/Menu/PurchaseFailure"
 53 [-]: CALL      R4 2 1       ; R4(R5)
 54 [-]: LOADNIL   R4 R4        ; R4 := nil
 55 [-]: SETGLOBAL R4 K22       ; mWebCmd := R4
 56 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 1243
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 4.000000 then PC := 92
  2 [-]: JMP       92           ; PC := 92
  3 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
  4 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 92
  5 [-]: JMP       92           ; PC := 92
  6 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K5        ; R2 := 0xcb79539e
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETGLOBAL R1 K5        ; R1 := 0xcb79539e
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x8b8fb8b7]
 13 [-]: GETGLOBAL R3 K7        ; R3 := 0x0469f296
 14 [-]: LOADK     R4 K8        ; R4 := "SLOT_PROMPT_POPUP"
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: LOADK     R4 K9        ; R4 := "Baro_"
 17 [-]: GETGLOBAL R5 K10       ; R5 := mBinType
 18 [-]: LOADK     R6 K11       ; R6 := "_Purchase"
 19 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 20 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 21 [-]: GETGLOBAL R1 K12       ; R1 := 0xa94df70b
 22 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x99c4ef3a]
 23 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 24 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mStoreItem"]
 25 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xfe9eb1a5]
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 28 [-]: GETGLOBAL R2 K16       ; R2 := 0x6c97a788
 29 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["MiscBin"]
 30 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: LE        0 K18 R1     ; if 12.000000 > R1 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETGLOBAL R2 K19       ; R2 := _T
 35 [-]: SETTABLE  R2 K20 K3    ; R2["PurchaseSuccessLocOverride"] := nil
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R2 K12       ; R2 := 0xa94df70b
 38 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0xd8cdfe4e]
 39 [-]: MOVE      R4 R1        ; R4 := R1
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: GETGLOBAL R3 K19       ; R3 := _T
 42 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["PremiumCredits"]
 43 [-]: LT        0 R3 R2      ; if R3 >= R2 then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: GETUPVAL  R4 U1        ; R4 := U1
 47 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["PREMIUM_CREDITS"]
 48 [-]: LOADBOOL  R5 0 0       ; R5 := false
 49 [-]: GETGLOBAL R6 K24       ; R6 := 0xae91e43b
 50 [-]: SELF      R6 R6 K25    ; R7 := R6; R6 := R6[0x42b04007]
 51 [-]: LOADK     R8 K26       ; R8 := "/Lotus/Language/Menu/ItemInventory_SlotsMisc"
 52 [-]: LOADBOOL  R9 1 0       ; R9 := true
 53 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 54 [-]: CALL      R3 0 1       ; R3(R4,...)
 55 [-]: RETURN    R0 1         ; return 
 56 [-]: GETGLOBAL R3 K27       ; R3 := 0x76ea806b
 57 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0x3f3ae64c]
 58 [-]: LOADK     R5 0         ; R5 := 0.000000
 59 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 60 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 61 [-]: MOVE      R5 R3        ; R5 := R3
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: TEST      R4 1         ; if R4 then PC := 109
 64 [-]: JMP       109          ; PC := 109
 65 [-]: SELF      R4 R3 K29    ; R5 := R3; R4 := R3[0x80563238]
 66 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 67 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 68 [-]: MOVE      R6 R4        ; R6 := R4
 69 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 70 [-]: TEST      R5 1         ; if R5 then PC := 109
 71 [-]: JMP       109          ; PC := 109
 72 [-]: GETUPVAL  R5 U2        ; R5 := U2
 73 [-]: LOADK     R6 1         ; R6 := 1.000000
 74 [-]: CALL      R5 2 1       ; R5(R6)
 75 [-]: GETGLOBAL R5 K30       ; R5 := 0x60cce7b4
 76 [-]: GETGLOBAL R6 K31       ; R6 := mWebCmd
 77 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 80
 80 [-]: LOADBOOL  R6 1 0       ; R6 := true
 81 [-]: CALL      R5 2 1       ; R5(R6)
 82 [-]: GETGLOBAL R5 K16       ; R5 := 0x6c97a788
 83 [-]: GETTABLE  R5 R5 K32    ; R5 := R5[0x2c6cc890]
 84 [-]: MOVE      R6 R1        ; R6 := R1
 85 [-]: LOADK     R7 K33       ; R7 := "OnPurchaseSlotResult"
 86 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 87 [-]: SETGLOBAL R5 K31       ; mWebCmd := R5
 88 [-]: GETGLOBAL R5 K31       ; R5 := mWebCmd
 89 [-]: SELF      R5 R5 K34    ; R6 := R5; R5 := R5[0xe4162eed]
 90 [-]: CALL      R5 2 1       ; R5(R6)
 91 [-]: JMP       109          ; PC := 109
 92 [-]: GETGLOBAL R5 K19       ; R5 := _T
 93 [-]: SETTABLE  R5 K20 K3    ; R5["PurchaseSuccessLocOverride"] := nil
 94 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 95 [-]: GETGLOBAL R6 K5        ; R6 := 0xcb79539e
 96 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 97 [-]: TEST      R5 1         ; if R5 then PC := 109
 98 [-]: JMP       109          ; PC := 109
 99 [-]: GETGLOBAL R5 K5        ; R5 := 0xcb79539e
100 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x8b8fb8b7]
101 [-]: GETGLOBAL R7 K7        ; R7 := 0x0469f296
102 [-]: LOADK     R8 K8        ; R8 := "SLOT_PROMPT_POPUP"
103 [-]: CALL      R7 2 2       ; R7 := R7(R8)
104 [-]: LOADK     R8 K9        ; R8 := "Baro_"
105 [-]: GETGLOBAL R9 K10       ; R9 := mBinType
106 [-]: LOADK     R10 K35      ; R10 := "_Cancel"
107 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
108 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
109 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 1278
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xa94df70b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x99c4ef3a]
  3 [-]: GETGLOBAL R2 K2        ; R2 := mPurchaseParams
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mStoreItem"]
  5 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xfe9eb1a5]
  6 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  7 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  8 [-]: GETGLOBAL R1 K5        ; R1 := 0x6c97a788
  9 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MiscBin"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LE        0 K7 R0      ; if 12.000000 > R0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0xa94df70b
 16 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xd8cdfe4e]
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: GETGLOBAL R2 K0        ; R2 := 0xa94df70b
 20 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x4ddd3d6e]
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[0x780243ce]
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: SETGLOBAL R3 K10       ; mBinType := R3
 28 [-]: GETUPVAL  R3 U1        ; R3 := U1
 29 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0xdedfded7]
 30 [-]: GETGLOBAL R4 K13       ; R4 := 0xae91e43b
 31 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x42b04007]
 32 [-]: LOADK     R6 K15       ; R6 := "/Lotus/Language/Menu/Store_InsufficientSlotPurchase"
 33 [-]: LOADBOOL  R7 1 0       ; R7 := true
 34 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 35 [-]: SETTABLE  R8 K16 R2    ; R8["COUNT"] := R2
 36 [-]: SETTABLE  R8 K17 R1    ; R8["COST"] := R1
 37 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 38 [-]: LOADK     R5 K18       ; R5 := "ConfirmSlotPurchase"
 39 [-]: CALL      R3 3 1       ; R3(R4,R5)
 40 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 1290
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x2dcaf529]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 1294
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R4 K1        ; R4 := _T
  7 [-]: SETTABLE  R4 K2 K3     ; R4["PurchaseSuccessLocOverride"] := nil
  8 [-]: LOADBOOL  R4 0 0       ; R4 := false
  9 [-]: RETURN    R4 2         ; return R4
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0xa94df70b
 11 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x0736562b]
 12 [-]: MOVE      R6 R1        ; R6 := R1
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: GETGLOBAL R5 K6        ; R5 := 0x25d99d89
 15 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0xefee6c91]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: LT        0 K8 R4      ; if 0.000000 >= R4 then PC := 53
 18 [-]: JMP       53           ; PC := 53
 19 [-]: SELF      R6 R0 K9     ; R7 := R0; R6 := R0[0xd83f6338]
 20 [-]: MOVE      R8 R1        ; R8 := R1
 21 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 22 [-]: ADD       R6 R2 R6     ; R6 := R2 + R6
 23 [-]: LT        0 R4 R6      ; if R4 >= R6 then PC := 53
 24 [-]: JMP       53           ; PC := 53
 25 [-]: EQ        0 R1 K11     ; if R1 ~= 7.000000 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: LE        0 K12 R5     ; if 30.000000 > R5 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: ADD       R4 R4 K12    ; R4 := R4 + 30.000000
 30 [-]: GETGLOBAL R6 K13       ; R6 := 0xae91e43b
 31 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x42b04007]
 32 [-]: MOVE      R8 R3        ; R8 := R3
 33 [-]: LOADBOOL  R9 0 0       ; R9 := false
 34 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 35 [-]: GETUPVAL  R11 U0       ; R11 := U0
 36 [-]: GETTABLE  R11 R11 K16  ; R11 := R11[0x1142c7a8]
 37 [-]: GETGLOBAL R12 K4       ; R12 := 0xa94df70b
 38 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0x804ccab2]
 39 [-]: MOVE      R14 R1       ; R14 := R1
 40 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 41 [-]: ADD       R12 R4 R12   ; R12 := R4 + R12
 42 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 43 [-]: SETTABLE  R10 K15 R11  ; R10["MAX"] := R11
 44 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 45 [-]: GETUPVAL  R7 U0        ; R7 := U0
 46 [-]: GETTABLE  R7 R7 K18    ; R7 := R7[0xe0cba3ca]
 47 [-]: MOVE      R8 R6        ; R8 := R6
 48 [-]: CALL      R7 2 1       ; R7(R8)
 49 [-]: GETGLOBAL R7 K1        ; R7 := _T
 50 [-]: SETTABLE  R7 K2 K3     ; R7["PurchaseSuccessLocOverride"] := nil
 51 [-]: LOADBOOL  R7 0 0       ; R7 := false
 52 [-]: RETURN    R7 2         ; return R7
 53 [-]: LOADBOOL  R7 1 0       ; R7 := true
 54 [-]: RETURN    R7 2         ; return R7
 55 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 1316
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseTotalPrice
  2 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: LOADBOOL  R0 0 0       ; R0 := false
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1[0xbecef34c]
  8 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETGLOBAL R1 K3        ; R1 := mPurchaseParams
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mSource"]
 15 [-]: EQ        1 R1 K7      ; if R1 == 18.000000 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: CALL      R1 1 1       ; R1()
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: LOADNIL   R1 R1        ; R1 := nil
 21 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 22 [-]: GETGLOBAL R3 K9        ; R3 := 0x25d99d89
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 47
 25 [-]: JMP       47           ; PC := 47
 26 [-]: GETGLOBAL R2 K9        ; R2 := 0x25d99d89
 27 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x25a6e75e]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETUPVAL  R2 U2        ; R2 := U2
 31 [-]: GETGLOBAL R3 K9        ; R3 := 0x25d99d89
 32 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x1e11a6d0]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0x25d99d89
 35 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0x9b466ee3]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETGLOBAL R5 K9        ; R5 := 0x25d99d89
 38 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x4ce20fca]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
 41 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0xbd6729ff]
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: GETGLOBAL R7 K9        ; R7 := 0x25d99d89
 44 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7[0xa59dbd63]
 45 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 46 [-]: CALL      R2 0 1       ; R2(R3,...)
 47 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
 48 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 49 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xfe9eb1a5]
 50 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 51 [-]: EQ        0 R2 K18     ; if R2 ~= 19.000000 then PC := 69
 52 [-]: JMP       69           ; PC := 69
 53 [-]: GETUPVAL  R2 U3        ; R2 := U3
 54 [-]: MOVE      R3 R1        ; R3 := R1
 55 [-]: GETGLOBAL R4 K3        ; R4 := mPurchaseParams
 56 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mStoreItem"]
 57 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4[0x5c4cdd9b]
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 60 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 61 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x075cb724]
 62 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 63 [-]: LOADK     R6 K21       ; R6 := "/Lotus/Language/Menu/BuyItem_ExceedBinMaxCapacity"
 64 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 65 [-]: TEST      R2 1         ; if R2 then PC := 123
 66 [-]: JMP       123          ; PC := 123
 67 [-]: RETURN    R0 1         ; return 
 68 [-]: JMP       123          ; PC := 123
 69 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
 70 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 71 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xfe9eb1a5]
 72 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 73 [-]: EQ        0 R2 K22     ; if R2 ~= 30.000000 then PC := 123
 74 [-]: JMP       123          ; PC := 123
 75 [-]: GETGLOBAL R2 K3        ; R2 := mPurchaseParams
 76 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mStoreItem"]
 77 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2[0xf278f8a1]
 78 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 79 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2[0xf2deaf69]
 80 [-]: GETUPVAL  R4 U4        ; R4 := U4
 81 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 82 [-]: TEST      R2 0         ; if not R2 then PC := 123
 83 [-]: JMP       123          ; PC := 123
 84 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 85 [-]: MOVE      R3 R1        ; R3 := R1
 86 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 87 [-]: TEST      R2 0         ; if not R2 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETGLOBAL R2 K25       ; R2 := _T
 90 [-]: SETTABLE  R2 K26 K1    ; R2["PurchaseSuccessLocOverride"] := nil
 91 [-]: RETURN    R0 1         ; return 
 92 [-]: GETUPVAL  R2 U0        ; R2 := U0
 93 [-]: GETTABLE  R2 R2 K27    ; R2 := R2[0x8a36a81b]
 94 [-]: GETGLOBAL R3 K9        ; R3 := 0x25d99d89
 95 [-]: MOVE      R4 R1        ; R4 := R1
 96 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 97 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 98 [-]: GETGLOBAL R6 K25       ; R6 := _T
 99 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["purchasedItems"]
100 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
101 [-]: GETGLOBAL R3 K3        ; R3 := mPurchaseParams
102 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["mQuantity"]
103 [-]: GETGLOBAL R4 K3        ; R4 := mPurchaseParams
104 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mStoreItem"]
105 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0x075cb724]
106 [-]: CALL      R4 2 2       ; R4 := R4(R5)
107 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
108 [-]: ADD       R3 R2 R3     ; R3 := R2 + R3
109 [-]: LT        0 K30 R3     ; if 138.000000 >= R3 then PC := 123
110 [-]: JMP       123          ; PC := 123
111 [-]: GETGLOBAL R3 K31       ; R3 := 0xae91e43b
112 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3[0x42b04007]
113 [-]: LOADK     R5 K33       ; R5 := "/Lotus/Language/Menu/BuyItem_ExceedShipDecoCapacity"
114 [-]: LOADBOOL  R6 0 0       ; R6 := false
115 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
116 [-]: GETUPVAL  R4 U5        ; R4 := U5
117 [-]: GETTABLE  R4 R4 K34    ; R4 := R4[0xe0cba3ca]
118 [-]: MOVE      R5 R3        ; R5 := R3
119 [-]: CALL      R4 2 1       ; R4(R5)
120 [-]: GETGLOBAL R4 K25       ; R4 := _T
121 [-]: SETTABLE  R4 K26 K1    ; R4["PurchaseSuccessLocOverride"] := nil
122 [-]: RETURN    R0 1         ; return 
123 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
124 [-]: GETUPVAL  R5 U6        ; R5 := U6
125 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["REGULAR_CREDITS"]
126 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
127 [-]: TEST      R4 0         ; if not R4 then PC := 146
128 [-]: JMP       146          ; PC := 146
129 [-]: GETGLOBAL R4 K25       ; R4 := _T
130 [-]: GETTABLE  R4 R4 K36    ; R4 := R4["Credits"]
131 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 146
132 [-]: JMP       146          ; PC := 146
133 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
134 [-]: GETUPVAL  R5 U6        ; R5 := U6
135 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["REGULAR_CREDITS"]
136 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
137 [-]: GETGLOBAL R5 K25       ; R5 := _T
138 [-]: GETTABLE  R5 R5 K36    ; R5 := R5["Credits"]
139 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R4 U7        ; R4 := U7
142 [-]: GETUPVAL  R5 U6        ; R5 := U6
143 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["REGULAR_CREDITS"]
144 [-]: CALL      R4 2 1       ; R4(R5)
145 [-]: RETURN    R0 1         ; return 
146 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
147 [-]: GETUPVAL  R5 U6        ; R5 := U6
148 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["PREMIUM_CREDITS"]
149 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
150 [-]: TEST      R4 0         ; if not R4 then PC := 180
151 [-]: JMP       180          ; PC := 180
152 [-]: LOADBOOL  R0 1 0       ; R0 := true
153 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
154 [-]: GETUPVAL  R5 U6        ; R5 := U6
155 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["PREMIUM_CREDITS"]
156 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
157 [-]: GETUPVAL  R5 U5        ; R5 := U5
158 [-]: GETTABLE  R5 R5 K38    ; R5 := R5[0x06d055f9]
159 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
160 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
161 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xd33115d5]
162 [-]: CALL      R6 2 2       ; R6 := R6(R7)
163 [-]: GETGLOBAL R7 K25       ; R7 := _T
164 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["PremiumCredits"]
165 [-]: GETGLOBAL R8 K25       ; R8 := _T
166 [-]: GETTABLE  R8 R8 K41    ; R8 := R8["PurchasedPremiumCredits"]
167 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
168 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 180
169 [-]: JMP       180          ; PC := 180
170 [-]: GETUPVAL  R4 U7        ; R4 := U7
171 [-]: GETUPVAL  R5 U6        ; R5 := U6
172 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["PREMIUM_CREDITS"]
173 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
174 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
175 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xd33115d5]
176 [-]: CALL      R6 2 2       ; R6 := R6(R7)
177 [-]: NOT       R6 R6        ; R6 := not R6
178 [-]: CALL      R4 3 1       ; R4(R5,R6)
179 [-]: RETURN    R0 1         ; return 
180 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
181 [-]: GETUPVAL  R5 U6        ; R5 := U6
182 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["PRIME_BUCKS"]
183 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
184 [-]: TEST      R4 0         ; if not R4 then PC := 205
185 [-]: JMP       205          ; PC := 205
186 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
187 [-]: GETGLOBAL R5 K9        ; R5 := 0x25d99d89
188 [-]: CALL      R4 2 2       ; R4 := R4(R5)
189 [-]: TEST      R4 1         ; if R4 then PC := 205
190 [-]: JMP       205          ; PC := 205
191 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
192 [-]: GETUPVAL  R5 U6        ; R5 := U6
193 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["PRIME_BUCKS"]
194 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
195 [-]: GETGLOBAL R5 K9        ; R5 := 0x25d99d89
196 [-]: SELF      R5 R5 K43    ; R6 := R5; R5 := R5[0x592472fb]
197 [-]: CALL      R5 2 2       ; R5 := R5(R6)
198 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 205
199 [-]: JMP       205          ; PC := 205
200 [-]: GETUPVAL  R4 U7        ; R4 := U7
201 [-]: GETUPVAL  R5 U6        ; R5 := U6
202 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["PRIME_BUCKS"]
203 [-]: CALL      R4 2 1       ; R4(R5)
204 [-]: RETURN    R0 1         ; return 
205 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
206 [-]: GETUPVAL  R5 U6        ; R5 := U6
207 [-]: GETTABLE  R5 R5 K44    ; R5 := R5["PRIME_TOKENS"]
208 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
209 [-]: TEST      R4 0         ; if not R4 then PC := 231
210 [-]: JMP       231          ; PC := 231
211 [-]: LOADBOOL  R0 1 0       ; R0 := true
212 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
213 [-]: GETGLOBAL R5 K9        ; R5 := 0x25d99d89
214 [-]: CALL      R4 2 2       ; R4 := R4(R5)
215 [-]: TEST      R4 1         ; if R4 then PC := 231
216 [-]: JMP       231          ; PC := 231
217 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
218 [-]: GETUPVAL  R5 U6        ; R5 := U6
219 [-]: GETTABLE  R5 R5 K44    ; R5 := R5["PRIME_TOKENS"]
220 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
221 [-]: GETGLOBAL R5 K9        ; R5 := 0x25d99d89
222 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5[0xbd6729ff]
223 [-]: CALL      R5 2 2       ; R5 := R5(R6)
224 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 231
225 [-]: JMP       231          ; PC := 231
226 [-]: GETUPVAL  R4 U7        ; R4 := U7
227 [-]: GETUPVAL  R5 U6        ; R5 := U6
228 [-]: GETTABLE  R5 R5 K44    ; R5 := R5["PRIME_TOKENS"]
229 [-]: CALL      R4 2 1       ; R4(R5)
230 [-]: RETURN    R0 1         ; return 
231 [-]: GETGLOBAL R4 K0        ; R4 := mPurchaseTotalPrice
232 [-]: GETUPVAL  R5 U6        ; R5 := U6
233 [-]: GETTABLE  R5 R5 K45    ; R5 := R5["STANDING"]
234 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
235 [-]: TEST      R4 0         ; if not R4 then PC := 266
236 [-]: JMP       266          ; PC := 266
237 [-]: GETGLOBAL R4 K3        ; R4 := mPurchaseParams
238 [-]: GETTABLE  R4 R4 K46    ; R4 := R4["mSyndicateTag"]
239 [-]: SELF      R4 R4 K47    ; R5 := R4; R4 := R4[0x56c01834]
240 [-]: CALL      R4 2 2       ; R4 := R4(R5)
241 [-]: TEST      R4 1         ; if R4 then PC := 247
242 [-]: JMP       247          ; PC := 247
243 [-]: GETUPVAL  R4 U8        ; R4 := U8
244 [-]: LOADNIL   R5 R5        ; R5 := nil
245 [-]: CALL      R4 2 1       ; R4(R5)
246 [-]: RETURN    R0 1         ; return 
247 [-]: GETUPVAL  R4 U0        ; R4 := U0
248 [-]: GETTABLE  R4 R4 K48    ; R4 := R4[0x338a8686]
249 [-]: GETGLOBAL R5 K49       ; R5 := 0xa94df70b
250 [-]: SELF      R5 R5 K50    ; R6 := R5; R5 := R5[0x07408254]
251 [-]: GETGLOBAL R7 K3        ; R7 := mPurchaseParams
252 [-]: GETTABLE  R7 R7 K46    ; R7 := R7["mSyndicateTag"]
253 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
254 [-]: CALL      R4 0 3       ; R4,R5 := R4(R5,...)
255 [-]: GETGLOBAL R6 K0        ; R6 := mPurchaseTotalPrice
256 [-]: GETUPVAL  R7 U6        ; R7 := U6
257 [-]: GETTABLE  R7 R7 K45    ; R7 := R7["STANDING"]
258 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
259 [-]: LT        0 R5 R6      ; if R5 >= R6 then PC := 266
260 [-]: JMP       266          ; PC := 266
261 [-]: GETUPVAL  R6 U7        ; R6 := U7
262 [-]: GETUPVAL  R7 U6        ; R7 := U6
263 [-]: GETTABLE  R7 R7 K45    ; R7 := R7["STANDING"]
264 [-]: CALL      R6 2 1       ; R6(R7)
265 [-]: RETURN    R0 1         ; return 
266 [-]: GETGLOBAL R6 K0        ; R6 := mPurchaseTotalPrice
267 [-]: GETUPVAL  R7 U6        ; R7 := U6
268 [-]: GETTABLE  R7 R7 K51    ; R7 := R7["AMBULAS_DATA"]
269 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
270 [-]: TEST      R6 0         ; if not R6 then PC := 301
271 [-]: JMP       301          ; PC := 301
272 [-]: GETGLOBAL R6 K52       ; R6 := 0x7ed0a956
273 [-]: LOADK     R7 K53       ; R7 := "/Lotus/Types/Items/Events/AmbulasDataFragment"
274 [-]: CALL      R6 2 2       ; R6 := R6(R7)
275 [-]: LOADK     R7 0         ; R7 := 0.000000
276 [-]: SELF      R8 R1 K54    ; R9 := R1; R8 := R1[0xf4045b7e]
277 [-]: CALL      R8 2 2       ; R8 := R8(R9)
278 [-]: LOADK     R9 1         ; R9 := 1.000000
279 [-]: LEN       R10 R8       ; R10 := # R8
280 [-]: LOADK     R11 1        ; R11 := 1.000000
281 [-]: FORPREP   R9 289       ; R9 -= R11; PC := 289
282 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
283 [-]: GETTABLE  R13 R13 K55  ; R13 := R13["mItemType"]
284 [-]: EQ        0 R13 R6     ; if R13 ~= R6 then PC := 289
285 [-]: JMP       289          ; PC := 289
286 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
287 [-]: GETTABLE  R7 R13 K56   ; R7 := R13["mItemCount"]
288 [-]: JMP       290          ; PC := 290
289 [-]: FORLOOP   R9 282       ; R9 += R11; if R9 <= R10 then begin PC := 282; R12 := R9 end
290 [-]: GETGLOBAL R13 K0       ; R13 := mPurchaseTotalPrice
291 [-]: GETUPVAL  R14 U6       ; R14 := U6
292 [-]: GETTABLE  R14 R14 K51  ; R14 := R14["AMBULAS_DATA"]
293 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
294 [-]: LT        0 R7 R13     ; if R7 >= R13 then PC := 301
295 [-]: JMP       301          ; PC := 301
296 [-]: GETUPVAL  R13 U7       ; R13 := U7
297 [-]: GETUPVAL  R14 U6       ; R14 := U6
298 [-]: GETTABLE  R14 R14 K51  ; R14 := R14["AMBULAS_DATA"]
299 [-]: CALL      R13 2 1      ; R13(R14)
300 [-]: RETURN    R0 1         ; return 
301 [-]: GETGLOBAL R13 K0       ; R13 := mPurchaseTotalPrice
302 [-]: GETUPVAL  R14 U6       ; R14 := U6
303 [-]: GETTABLE  R14 R14 K57  ; R14 := R14["ITEMS"]
304 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
305 [-]: TEST      R13 0        ; if not R13 then PC := 369
306 [-]: JMP       369          ; PC := 369
307 [-]: LOADK     R13 1        ; R13 := 1.000000
308 [-]: GETGLOBAL R14 K0       ; R14 := mPurchaseTotalPrice
309 [-]: GETUPVAL  R15 U6       ; R15 := U6
310 [-]: GETTABLE  R15 R15 K57  ; R15 := R15["ITEMS"]
311 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
312 [-]: LEN       R14 R14      ; R14 := # R14
313 [-]: LOADK     R15 1        ; R15 := 1.000000
314 [-]: FORPREP   R13 368      ; R13 -= R15; PC := 368
315 [-]: GETGLOBAL R17 K0       ; R17 := mPurchaseTotalPrice
316 [-]: GETUPVAL  R18 U6       ; R18 := U6
317 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["ITEMS"]
318 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
319 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
320 [-]: GETGLOBAL R18 K8       ; R18 := 0x7b998233
321 [-]: GETTABLE  R19 R17 K55  ; R19 := R17["mItemType"]
322 [-]: CALL      R18 2 2      ; R18 := R18(R19)
323 [-]: TEST      R18 1        ; if R18 then PC := 368
324 [-]: JMP       368          ; PC := 368
325 [-]: GETUPVAL  R18 U0       ; R18 := U0
326 [-]: GETTABLE  R18 R18 K58  ; R18 := R18[0xb54b2e07]
327 [-]: GETGLOBAL R19 K25      ; R19 := _T
328 [-]: GETTABLE  R19 R19 K28  ; R19 := R19["purchasedItems"]
329 [-]: GETTABLE  R20 R17 K55  ; R20 := R17["mItemType"]
330 [-]: SELF      R20 R20 K59  ; R21 := R20; R20 := R20[0xed4e0128]
331 [-]: CALL      R20 2 2      ; R20 := R20(R21)
332 [-]: CLOSURE   R21 0        ; R21 := closure(Function #26.1)
333 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
334 [-]: LOADK     R19 0        ; R19 := 0.000000
335 [-]: TEST      R18 0        ; if not R18 then PC := 360
336 [-]: JMP       360          ; PC := 360
337 [-]: GETTABLE  R20 R18 K60  ; R20 := R18[1.000000]
338 [-]: GETTABLE  R21 R18 K61  ; R21 := R18[2.000000]
339 [-]: LOADK     R22 1        ; R22 := 1.000000
340 [-]: FORPREP   R20 359      ; R20 -= R22; PC := 359
341 [-]: GETGLOBAL R24 K25      ; R24 := _T
342 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["purchasedItems"]
343 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
344 [-]: GETTABLE  R24 R24 K62  ; R24 := R24["count"]
345 [-]: TEST      R24 0        ; if not R24 then PC := 353
346 [-]: JMP       353          ; PC := 353
347 [-]: GETGLOBAL R24 K25      ; R24 := _T
348 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["purchasedItems"]
349 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
350 [-]: GETTABLE  R24 R24 K62  ; R24 := R24["count"]
351 [-]: ADD       R19 R19 R24  ; R19 := R19 + R24
352 [-]: JMP       359          ; PC := 359
353 [-]: GETGLOBAL R24 K63      ; R24 := 0x5bced4c4
354 [-]: GETTABLE  R24 R24 K64  ; R24 := R24[0xac1b386a]
355 [-]: ADD       R25 R19 K60  ; R25 := R19 + 1.000000
356 [-]: LOADK     R26 1        ; R26 := 1.000000
357 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
358 [-]: MOVE      R19 R24      ; R19 := R24
359 [-]: FORLOOP   R20 341      ; R20 += R22; if R20 <= R21 then begin PC := 341; R23 := R20 end
360 [-]: GETTABLE  R24 R17 K56  ; R24 := R17["mItemCount"]
361 [-]: LT        0 R19 R24    ; if R19 >= R24 then PC := 368
362 [-]: JMP       368          ; PC := 368
363 [-]: GETUPVAL  R24 U7       ; R24 := U7
364 [-]: GETUPVAL  R25 U6       ; R25 := U6
365 [-]: GETTABLE  R25 R25 K57  ; R25 := R25["ITEMS"]
366 [-]: CALL      R24 2 1      ; R24(R25)
367 [-]: RETURN    R0 1         ; return 
368 [-]: FORLOOP   R13 315      ; R13 += R15; if R13 <= R14 then begin PC := 315; R16 := R13 end
369 [-]: GETGLOBAL R24 K0       ; R24 := mPurchaseTotalPrice
370 [-]: GETUPVAL  R25 U6       ; R25 := U6
371 [-]: GETTABLE  R25 R25 K65  ; R25 := R25["FOCUS_XP"]
372 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
373 [-]: TEST      R24 0        ; if not R24 then PC := 401
374 [-]: JMP       401          ; PC := 401
375 [-]: GETGLOBAL R24 K9       ; R24 := 0x25d99d89
376 [-]: SELF      R24 R24 K66  ; R25 := R24; R24 := R24[0xad94d866]
377 [-]: GETGLOBAL R26 K67      ; R26 := mPurchasePolarityType
378 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
379 [-]: GETGLOBAL R25 K25      ; R25 := _T
380 [-]: GETTABLE  R25 R25 K68  ; R25 := R25["TennoWay_CurrentFocus"]
381 [-]: EQ        1 R25 K1     ; if R25 == nil then PC := 385
382 [-]: JMP       385          ; PC := 385
383 [-]: GETGLOBAL R25 K25      ; R25 := _T
384 [-]: GETTABLE  R24 R25 K68  ; R24 := R25["TennoWay_CurrentFocus"]
385 [-]: GETGLOBAL R25 K8       ; R25 := 0x7b998233
386 [-]: GETGLOBAL R26 K9       ; R26 := 0x25d99d89
387 [-]: CALL      R25 2 2      ; R25 := R25(R26)
388 [-]: TEST      R25 1        ; if R25 then PC := 401
389 [-]: JMP       401          ; PC := 401
390 [-]: GETGLOBAL R25 K0       ; R25 := mPurchaseTotalPrice
391 [-]: GETUPVAL  R26 U6       ; R26 := U6
392 [-]: GETTABLE  R26 R26 K65  ; R26 := R26["FOCUS_XP"]
393 [-]: GETTABLE  R25 R25 R26  ; R25 := R25[R26]
394 [-]: LT        0 R24 R25    ; if R24 >= R25 then PC := 401
395 [-]: JMP       401          ; PC := 401
396 [-]: GETUPVAL  R25 U7       ; R25 := U7
397 [-]: GETUPVAL  R26 U6       ; R26 := U6
398 [-]: GETTABLE  R26 R26 K65  ; R26 := R26["FOCUS_XP"]
399 [-]: CALL      R25 2 1      ; R25(R26)
400 [-]: RETURN    R0 1         ; return 
401 [-]: TEST      R0 1         ; if R0 then PC := 458
402 [-]: JMP       458          ; PC := 458
403 [-]: GETUPVAL  R25 U0       ; R25 := U0
404 [-]: GETTABLE  R25 R25 K69  ; R25 := R25[0x1fdb3a11]
405 [-]: GETGLOBAL R26 K3       ; R26 := mPurchaseParams
406 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["mStoreItem"]
407 [-]: SELF      R26 R26 K16  ; R27 := R26; R26 := R26[0xfe9eb1a5]
408 [-]: CALL      R26 2 2      ; R26 := R26(R27)
409 [-]: GETGLOBAL R27 K70      ; R27 := mQuantityToReceive
410 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
411 [-]: TEST      R25 1        ; if R25 then PC := 458
412 [-]: JMP       458          ; PC := 458
413 [-]: GETGLOBAL R25 K49      ; R25 := 0xa94df70b
414 [-]: SELF      R25 R25 K71  ; R26 := R25; R25 := R25[0x99c4ef3a]
415 [-]: GETGLOBAL R27 K3       ; R27 := mPurchaseParams
416 [-]: GETTABLE  R27 R27 K4   ; R27 := R27["mStoreItem"]
417 [-]: SELF      R27 R27 K16  ; R28 := R27; R27 := R27[0xfe9eb1a5]
418 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
419 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
420 [-]: GETUPVAL  R26 U0       ; R26 := U0
421 [-]: GETTABLE  R26 R26 K72  ; R26 := R26[0xc10bb642]
422 [-]: MOVE      R27 R1       ; R27 := R1
423 [-]: MOVE      R28 R25      ; R28 := R25
424 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
425 [-]: TEST      R26 1        ; if R26 then PC := 434
426 [-]: JMP       434          ; PC := 434
427 [-]: GETGLOBAL R26 K25      ; R26 := _T
428 [-]: SETTABLE  R26 K26 K1   ; R26["PurchaseSuccessLocOverride"] := nil
429 [-]: GETUPVAL  R26 U0       ; R26 := U0
430 [-]: GETTABLE  R26 R26 K73  ; R26 := R26[0x7aef8b7f]
431 [-]: LOADK     R27 K74      ; R27 := "OnInvalidBinError"
432 [-]: CALL      R26 2 1      ; R26(R27)
433 [-]: JMP       457          ; PC := 457
434 [-]: EQ        0 R25 K75    ; if R25 ~= 11.000000 then PC := 447
435 [-]: JMP       447          ; PC := 447
436 [-]: GETUPVAL  R26 U3       ; R26 := U3
437 [-]: MOVE      R27 R1       ; R27 := R1
438 [-]: MOVE      R28 R25      ; R28 := R25
439 [-]: LOADK     R29 1        ; R29 := 1.000000
440 [-]: LOADK     R30 K76      ; R30 := "/Lotus/Language/Labels/BuyItem_CrewCapacityReached"
441 [-]: CALL      R26 5 2      ; R26 := R26(R27,R28,R29,R30)
442 [-]: TEST      R26 0        ; if not R26 then PC := 457
443 [-]: JMP       457          ; PC := 457
444 [-]: GETUPVAL  R26 U9       ; R26 := U9
445 [-]: CALL      R26 1 1      ; R26()
446 [-]: JMP       457          ; PC := 457
447 [-]: GETUPVAL  R26 U3       ; R26 := U3
448 [-]: MOVE      R27 R1       ; R27 := R1
449 [-]: MOVE      R28 R25      ; R28 := R25
450 [-]: LOADK     R29 1        ; R29 := 1.000000
451 [-]: LOADK     R30 K77      ; R30 := "/Lotus/Language/Labels/BuyItem_BinCapacityReached"
452 [-]: CALL      R26 5 2      ; R26 := R26(R27,R28,R29,R30)
453 [-]: TEST      R26 0        ; if not R26 then PC := 457
454 [-]: JMP       457          ; PC := 457
455 [-]: GETUPVAL  R26 U9       ; R26 := U9
456 [-]: CALL      R26 1 1      ; R26()
457 [-]: RETURN    R0 1         ; return 
458 [-]: GETUPVAL  R26 U10      ; R26 := U10
459 [-]: CALL      R26 1 1      ; R26()
460 [-]: RETURN    R0 1         ; return 


; Function #26.1:
;
; Name:            
; Defined at line: 1424
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["type"]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 1480
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 1484
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: LOADK     R0 -1        ; R0 := -1.000000
  2 [-]: LOADK     R1 0         ; R1 := 0.000000
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x34291f5c
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xe27b35bb]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: SETTABLE  R2 K2 K3     ; R2["dialogType"] := 5.000000
  7 [-]: SETTABLE  R2 K4 K5     ; R2["locString"] := "/Lotus/Language/Menu/Global_DurabilityConfirmation"
  8 [-]: GETGLOBAL R3 K6        ; R3 := mPurchaseParams
  9 [-]: SETTABLE  R3 K7 K8     ; R3["mUsePremium"] := true
 10 [-]: LOADBOOL  R3 1 0       ; R3 := true
 11 [-]: GETGLOBAL R4 K6        ; R4 := mPurchaseParams
 12 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mStoreItem"]
 13 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf278f8a1]
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf2deaf69]
 16 [-]: GETGLOBAL R6 K12       ; R6 := gLotusBoosterUpgradeType
 17 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 18 [-]: TEST      R4 0         ; if not R4 then PC := 37
 19 [-]: JMP       37           ; PC := 37
 20 [-]: GETGLOBAL R4 K13       ; R4 := 0xb009bbc6
 21 [-]: GETGLOBAL R5 K6        ; R5 := mPurchaseParams
 22 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mStoreItem"]
 23 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0xf278f8a1]
 24 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 25 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 26 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4[0x4bcc0a75]
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: MOVE      R3 R5        ; R3 := R5
 29 [-]: GETGLOBAL R5 K15       ; R5 := _T
 30 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["GiftParams"]
 31 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["Item"]
 32 [-]: EQ        1 R5 K18     ; if R5 == nil then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETGLOBAL R5 K15       ; R5 := _T
 35 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["GiftParams"]
 36 [-]: SETTABLE  R5 K19 R3    ; R5["BoosterIsTimed"] := R3
 37 [-]: GETGLOBAL R5 K20       ; R5 := 0xae91e43b
 38 [-]: SELF      R5 R5 K21    ; R6 := R5; R5 := R5[0x42b04007]
 39 [-]: LOADK     R7 K22       ; R7 := "/Lotus/Language/Menu/Global_DurabilityPermanent"
 40 [-]: LOADBOOL  R8 0 0       ; R8 := false
 41 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 42 [-]: LOADK     R6 0         ; R6 := 0.000000
 43 [-]: LOADK     R7 2         ; R7 := 2.000000
 44 [-]: LOADK     R8 1         ; R8 := 1.000000
 45 [-]: FORPREP   R6 165       ; R6 -= R8; PC := 165
 46 [-]: GETGLOBAL R10 K6       ; R10 := mPurchaseParams
 47 [-]: SETTABLE  R10 K24 R9   ; R10["mDurability"] := R9
 48 [-]: GETUPVAL  R10 U0       ; R10 := U0
 49 [-]: GETGLOBAL R11 K6       ; R11 := mPurchaseParams
 50 [-]: CALL      R10 2 3      ; R10,R11 := R10(R11)
 51 [-]: EQ        1 R11 K18    ; if R11 == nil then PC := 165
 52 [-]: JMP       165          ; PC := 165
 53 [-]: EQ        1 R10 K18    ; if R10 == nil then PC := 165
 54 [-]: JMP       165          ; PC := 165
 55 [-]: GETUPVAL  R12 U1       ; R12 := U1
 56 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["PREMIUM_CREDITS"]
 57 [-]: GETTABLE  R12 R10 R12  ; R12 := R10[R12]
 58 [-]: EQ        1 R12 K18    ; if R12 == nil then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETUPVAL  R12 U1       ; R12 := U1
 61 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["PREMIUM_CREDITS"]
 62 [-]: GETTABLE  R12 R10 R12  ; R12 := R10[R12]
 63 [-]: LT        1 K26 R12    ; if 0.000000 < R12 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 66
 66 [-]: LOADBOOL  R12 1 0      ; R12 := true
 67 [-]: GETUPVAL  R13 U2       ; R13 := U2
 68 [-]: GETTABLE  R13 R13 K27  ; R13 := R13[0x06d055f9]
 69 [-]: MOVE      R14 R12      ; R14 := R12
 70 [-]: GETUPVAL  R15 U1       ; R15 := U1
 71 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["PREMIUM_CREDITS"]
 72 [-]: GETTABLE  R15 R10 R15  ; R15 := R10[R15]
 73 [-]: GETUPVAL  R16 U1       ; R16 := U1
 74 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["REGULAR_CREDITS"]
 75 [-]: GETTABLE  R16 R10 R16  ; R16 := R10[R16]
 76 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 77 [-]: LOADK     R14 K29      ; R14 := "undefined"
 78 [-]: MOVE      R0 R9        ; R0 := R9
 79 [-]: ADD       R1 R1 K30    ; R1 := R1 + 1.000000
 80 [-]: TEST      R3 0         ; if not R3 then PC := 135
 81 [-]: JMP       135          ; PC := 135
 82 [-]: GETGLOBAL R15 K31      ; R15 := 0xa94df70b
 83 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15[0x2539e471]
 84 [-]: MOVE      R17 R9       ; R17 := R9
 85 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 86 [-]: EQ        0 R15 K33    ; if R15 ~= 259200.000000 then PC := 95
 87 [-]: JMP       95           ; PC := 95
 88 [-]: GETGLOBAL R16 K20      ; R16 := 0xae91e43b
 89 [-]: SELF      R16 R16 K21  ; R17 := R16; R16 := R16[0x42b04007]
 90 [-]: LOADK     R18 K34      ; R18 := "/Lotus/Language/Menu/Global_3Days"
 91 [-]: LOADBOOL  R19 0 0      ; R19 := false
 92 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 93 [-]: MOVE      R15 R16      ; R15 := R16
 94 [-]: JMP       119          ; PC := 119
 95 [-]: EQ        0 R15 K35    ; if R15 ~= 604800.000000 then PC := 104
 96 [-]: JMP       104          ; PC := 104
 97 [-]: GETGLOBAL R16 K20      ; R16 := 0xae91e43b
 98 [-]: SELF      R16 R16 K21  ; R17 := R16; R16 := R16[0x42b04007]
 99 [-]: LOADK     R18 K36      ; R18 := "/Lotus/Language/Menu/Global_7Days"
100 [-]: LOADBOOL  R19 0 0      ; R19 := false
101 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
102 [-]: MOVE      R15 R16      ; R15 := R16
103 [-]: JMP       119          ; PC := 119
104 [-]: GETUPVAL  R16 U2       ; R16 := U2
105 [-]: GETTABLE  R16 R16 K27  ; R16 := R16[0x06d055f9]
106 [-]: LT        1 K26 R15    ; if 0.000000 < R15 then PC := 109
107 [-]: JMP       109          ; PC := 109
108 [-]: LOADBOOL  R17 0 1      ; R17 := false; PC := 109
109 [-]: LOADBOOL  R17 1 0      ; R17 := true
110 [-]: GETUPVAL  R18 U3       ; R18 := U3
111 [-]: GETTABLE  R18 R18 K37  ; R18 := R18[0x817b1503]
112 [-]: GETGLOBAL R19 K20      ; R19 := 0xae91e43b
113 [-]: MOVE      R20 R15      ; R20 := R15
114 [-]: LOADBOOL  R21 1 0      ; R21 := true
115 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
116 [-]: MOVE      R19 R5       ; R19 := R5
117 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
118 [-]: MOVE      R15 R16      ; R15 := R16
119 [-]: MOVE      R16 R15      ; R16 := R15
120 [-]: LOADK     R17 K38      ; R17 := " "
121 [-]: GETGLOBAL R18 K20      ; R18 := 0xae91e43b
122 [-]: SELF      R18 R18 K21  ; R19 := R18; R18 := R18[0x42b04007]
123 [-]: GETUPVAL  R20 U2       ; R20 := U2
124 [-]: GETTABLE  R20 R20 K27  ; R20 := R20[0x06d055f9]
125 [-]: MOVE      R21 R12      ; R21 := R12
126 [-]: LOADK     R22 K39      ; R22 := "<PLATINUM_CREDITS>"
127 [-]: LOADK     R23 K40      ; R23 := "<CREDITS>"
128 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
129 [-]: MOVE      R21 R13      ; R21 := R13
130 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
131 [-]: LOADBOOL  R21 1 0      ; R21 := true
132 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
133 [-]: CONCAT    R14 R16 R18  ; R14 := R16 .. R17 .. R18
134 [-]: JMP       158          ; PC := 158
135 [-]: GETGLOBAL R16 K31      ; R16 := 0xa94df70b
136 [-]: SELF      R16 R16 K41  ; R17 := R16; R16 := R16[0xbd680672]
137 [-]: MOVE      R18 R9       ; R18 := R9
138 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
139 [-]: GETGLOBAL R17 K42      ; R17 := 0x603636ad
140 [-]: LOADK     R18 K43      ; R18 := "/Lotus/Language/Menu/Global_BoosterUses"
141 [-]: NEWTABLE  R19 0 1      ; R19 := {}
142 [-]: SETTABLE  R19 K44 R16  ; R19["NUM_USES"] := R16
143 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
144 [-]: LOADK     R18 K38      ; R18 := " "
145 [-]: GETGLOBAL R19 K20      ; R19 := 0xae91e43b
146 [-]: SELF      R19 R19 K21  ; R20 := R19; R19 := R19[0x42b04007]
147 [-]: GETUPVAL  R21 U2       ; R21 := U2
148 [-]: GETTABLE  R21 R21 K27  ; R21 := R21[0x06d055f9]
149 [-]: MOVE      R22 R12      ; R22 := R12
150 [-]: LOADK     R23 K39      ; R23 := "<PLATINUM_CREDITS>"
151 [-]: LOADK     R24 K40      ; R24 := "<CREDITS>"
152 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
153 [-]: MOVE      R22 R13      ; R22 := R13
154 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
155 [-]: LOADBOOL  R22 1 0      ; R22 := true
156 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
157 [-]: CONCAT    R14 R17 R19  ; R14 := R17 .. R18 .. R19
158 [-]: GETGLOBAL R17 K6       ; R17 := mPurchaseParams
159 [-]: SETTABLE  R17 K45 R13  ; R17["mExpectedPrice"] := R13
160 [-]: EQ        0 R1 K30     ; if R1 ~= 1.000000 then PC := 164
161 [-]: JMP       164          ; PC := 164
162 [-]: SETTABLE  R2 K46 R14   ; R2["firstString"] := R14
163 [-]: JMP       165          ; PC := 165
164 [-]: SETTABLE  R2 K47 R14   ; R2["secondString"] := R14
165 [-]: FORLOOP   R6 46        ; R6 += R8; if R6 <= R7 then begin PC := 46; R9 := R6 end
166 [-]: LT        0 K30 R1     ; if 1.000000 >= R1 then PC := 177
167 [-]: JMP       177          ; PC := 177
168 [-]: SETTABLE  R2 K48 K49   ; R2["thirdString"] := "/Lotus/Language/Menu/ItemSelection_Cancel"
169 [-]: SELF      R17 R2 K50   ; R18 := R2; R17 := R2[0xe6ccc5b9]
170 [-]: LOADK     R19 K51      ; R19 := "ConfirmDurability"
171 [-]: CALL      R17 3 1      ; R17(R18,R19)
172 [-]: GETUPVAL  R17 U2       ; R17 := U2
173 [-]: GETTABLE  R17 R17 K52  ; R17 := R17[0xe99b84e7]
174 [-]: MOVE      R18 R2       ; R18 := R2
175 [-]: CALL      R17 2 1      ; R17(R18)
176 [-]: JMP       194          ; PC := 194
177 [-]: GETGLOBAL R17 K6       ; R17 := mPurchaseParams
178 [-]: SETTABLE  R17 K24 R0   ; R17["mDurability"] := R0
179 [-]: GETUPVAL  R17 U0       ; R17 := U0
180 [-]: GETGLOBAL R18 K6       ; R18 := mPurchaseParams
181 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
182 [-]: SETGLOBAL R19 K55      ; mPurchaseQuantityMultiplier := R19
183 [-]: SETGLOBAL R18 K54      ; mPurchaseUnitPrice := R18
184 [-]: SETGLOBAL R17 K53      ; mPurchaseTotalPrice := R17
185 [-]: GETGLOBAL R17 K53      ; R17 := mPurchaseTotalPrice
186 [-]: EQ        0 R17 K18    ; if R17 ~= nil then PC := 192
187 [-]: JMP       192          ; PC := 192
188 [-]: GETUPVAL  R17 U4       ; R17 := U4
189 [-]: LOADNIL   R18 R18      ; R18 := nil
190 [-]: CALL      R17 2 1      ; R17(R18)
191 [-]: RETURN    R0 1         ; return 
192 [-]: GETUPVAL  R17 U5       ; R17 := U5
193 [-]: CALL      R17 1 1      ; R17()
194 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1563
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K1        ; R0 := 0x6c97a788
  2 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xf89a99f3]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: SETGLOBAL R0 K0        ; mPurchaseParams := R0
  5 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
  6 [-]: GETGLOBAL R1 K4        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["GiftParams"]
  8 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["Item"]
  9 [-]: SETTABLE  R0 K3 R1     ; R0["mStoreItem"] := R1
 10 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
 11 [-]: GETGLOBAL R1 K4        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["GiftParams"]
 13 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["Source"]
 14 [-]: SETTABLE  R0 K7 R1     ; R0["mSource"] := R1
 15 [-]: GETGLOBAL R0 K4        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["GiftParams"]
 17 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["CouponId"]
 18 [-]: EQ        1 R0 K10     ; if R0 == nil then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R0 K0        ; R0 := mPurchaseParams
 21 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mCouponId"]
 22 [-]: GETGLOBAL R1 K4        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["GiftParams"]
 24 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["CouponId"]
 25 [-]: SETTABLE  R0 K12 R1    ; R0["mId"] := R1
 26 [-]: GETUPVAL  R0 U0        ; R0 := U0
 27 [-]: CALL      R0 1 1       ; R0()
 28 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1575
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 5.000000 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: EQ        0 R1 K3      ; if R1 ~= 4.000000 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETGLOBAL R1 K4        ; R1 := mPurchaseParams
 16 [-]: SETTABLE  R1 K5 K6     ; R1["mUsePremium"] := false
 17 [-]: JMP       20           ; PC := 20
 18 [-]: GETGLOBAL R1 K4        ; R1 := mPurchaseParams
 19 [-]: SETTABLE  R1 K5 K7     ; R1["mUsePremium"] := true
 20 [-]: GETGLOBAL R1 K8        ; R1 := 0xae91e43b
 21 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xe4162eed]
 22 [-]: LOADK     R3 K10       ; R3 := "BuyItem"
 23 [-]: LOADK     R4 K11       ; R4 := "true"
 24 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1590
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := screenStack
  2 [-]: LEN       R0 R0        ; R0 := # R0
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1594
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x7e17ae26]
  3 [-]: LOADK     R2 K2        ; R2 := "ScreenStackUpdated"
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x64fb1586
  5 [-]: GETGLOBAL R4 K4        ; R4 := screenStack
  6 [-]: LEN       R4 R4        ; R4 := # R4
  7 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  8 [-]: CALL      R0 0 1       ; R0(R1,...)
  9 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1598
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x23d5322f]
  3 [-]: GETGLOBAL R2 K2        ; R2 := screenStack
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1603
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x9c1f3b5a]
  3 [-]: GETGLOBAL R2 K2        ; R2 := screenStack
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1608
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0x768274d6]
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: LOADBOOL  R5 1 0       ; R5 := true
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0xde321e6f]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x2676deee]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: SELF      R3 R2 K1     ; R4 := R2; R3 := R2[0x768274d6]
 21 [-]: MOVE      R5 R1        ; R5 := R1
 22 [-]: LOADBOOL  R6 1 0       ; R6 := true
 23 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 24 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1619
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x8019cc24]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 12 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xf2deaf69]
 13 [-]: GETGLOBAL R2 K4        ; R2 := gLotusAttractModeGameRulesType
 14 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x23ddc82a]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 22
 22 [-]: LOADBOOL  R0 1 0       ; R0 := true
 23 [-]: RETURN    R0 2         ; return R0
 24 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1624
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K1        ; R2 := mMenuSuitAvatar
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xffe25891]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x89326c93
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x89326c93
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x78298275]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: SETGLOBAL R2 K1        ; mMenuSuitAvatar := R2
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 21 [-]: GETGLOBAL R3 K1        ; R3 := mMenuSuitAvatar
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R2 K6        ; R2 := mCurrentMode
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
 28 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: LOADNIL   R2 R2        ; R2 := nil
 32 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 33 [-]: GETGLOBAL R4 K8        ; R4 := 0x76ea806b
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 1         ; if R3 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R3 K8        ; R3 := 0x76ea806b
 38 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x3f3ae64c]
 39 [-]: LOADK     R5 0         ; R5 := 0.000000
 40 [-]: LOADBOOL  R6 0 0       ; R6 := false
 41 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 42 [-]: MOVE      R2 R3        ; R2 := R3
 43 [-]: LOADNIL   R3 R3        ; R3 := nil
 44 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 45 [-]: MOVE      R5 R2        ; R5 := R2
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 52
 48 [-]: JMP       52           ; PC := 52
 49 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2[0x80563238]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: MOVE      R3 R4        ; R3 := R4
 52 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 53 [-]: MOVE      R5 R3        ; R5 := R3
 54 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 55 [-]: TEST      R4 1         ; if R4 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: SELF      R4 R3 K11    ; R5 := R3; R4 := R3[0x25a6e75e]
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0x8e7c3b5e]
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: GETGLOBAL R5 K13       ; R5 := 0x7ed0a956
 62 [-]: LOADK     R6 K14       ; R6 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
 63 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 64 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 67
 67 [-]: LOADBOOL  R4 1 0       ; R4 := true
 68 [-]: TEST      R4 0         ; if not R4 then PC := 205
 69 [-]: JMP       205          ; PC := 205
 70 [-]: LOADBOOL  R5 1 0       ; R5 := true
 71 [-]: TEST      R5 1         ; if R5 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: GETGLOBAL R5 K15       ; R5 := 0x9ba7909f
 74 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xbf9494fc]
 75 [-]: LOADK     R7 K17       ; R7 := "Lotus.BypassQuestCommitments"
 76 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 77 [-]: TEST      R5 1         ; if R5 then PC := 102
 78 [-]: JMP       102          ; PC := 102
 79 [-]: SELF      R5 R3 K18    ; R6 := R3; R5 := R3[0xd3620ef3]
 80 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 81 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 82 [-]: MOVE      R7 R5        ; R7 := R5
 83 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 84 [-]: TEST      R6 1         ; if R6 then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: SELF      R6 R5 K19    ; R7 := R5; R6 := R5[0xf2deaf69]
 87 [-]: GETGLOBAL R8 K13       ; R8 := 0x7ed0a956
 88 [-]: LOADK     R9 K20       ; R9 := "/Lotus/Types/GameRules/CampFirstLoadFrontEndGameRules"
 89 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 90 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 91 [-]: TEST      R6 0         ; if not R6 then PC := 102
 92 [-]: JMP       102          ; PC := 102
 93 [-]: GETUPVAL  R6 U1        ; R6 := U1
 94 [-]: GETGLOBAL R7 K1        ; R7 := mMenuSuitAvatar
 95 [-]: LOADBOOL  R8 0 0       ; R8 := false
 96 [-]: CALL      R6 3 1       ; R6(R7,R8)
 97 [-]: GETGLOBAL R6 K21       ; R6 := _T
 98 [-]: SETTABLE  R6 K22 K23   ; R6["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
 99 [-]: LOADBOOL  R6 1 0       ; R6 := true
100 [-]: SETGLOBAL R6 K24       ; mMenuSuitAvatarVisible := R6
101 [-]: RETURN    R0 1         ; return 
102 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
103 [-]: GETGLOBAL R7 K1        ; R7 := mMenuSuitAvatar
104 [-]: CALL      R6 2 2       ; R6 := R6(R7)
105 [-]: TEST      R6 1         ; if R6 then PC := 114
106 [-]: JMP       114          ; PC := 114
107 [-]: GETGLOBAL R6 K1        ; R6 := mMenuSuitAvatar
108 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0xf2deaf69]
109 [-]: GETGLOBAL R8 K13       ; R8 := 0x7ed0a956
110 [-]: LOADK     R9 K25       ; R9 := "/Lotus/Types/Friendly/PlayerControllable/ControllableDrifterTennoAvatar"
111 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
112 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
113 [-]: JMP       116          ; PC := 116
114 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 115
115 [-]: LOADBOOL  R6 1 0       ; R6 := true
116 [-]: TEST      R6 0         ; if not R6 then PC := 205
117 [-]: JMP       205          ; PC := 205
118 [-]: GETUPVAL  R7 U0        ; R7 := U0
119 [-]: GETTABLE  R7 R7 K12    ; R7 := R7[0x8e7c3b5e]
120 [-]: MOVE      R8 R3        ; R8 := R3
121 [-]: CALL      R7 2 3       ; R7,R8 := R7(R8)
122 [-]: EQ        1 R8 K26     ; if R8 == nil then PC := 140
123 [-]: JMP       140          ; PC := 140
124 [-]: LE        0 R8 K27     ; if R8 > 7.000000 then PC := 140
125 [-]: JMP       140          ; PC := 140
126 [-]: SELF      R9 R3 K28    ; R10 := R3; R9 := R3[0x62c81b76]
127 [-]: CALL      R9 2 2       ; R9 := R9(R10)
128 [-]: GETTABLE  R10 R9 K29   ; R10 := R9["mAdultOperatorCustomization"]
129 [-]: SELF      R11 R10 K30  ; R12 := R10; R11 := R10[0xb73354b4]
130 [-]: LOADK     R13 14       ; R13 := 14.000000
131 [-]: LOADK     R14 1        ; R14 := 1.000000
132 [-]: LOADBOOL  R15 1 0      ; R15 := true
133 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
134 [-]: SELF      R11 R3 K11   ; R12 := R3; R11 := R3[0x25a6e75e]
135 [-]: CALL      R11 2 2      ; R11 := R11(R12)
136 [-]: SELF      R12 R11 K32  ; R13 := R11; R12 := R11[0xabb55f13]
137 [-]: MOVE      R14 R10      ; R14 := R10
138 [-]: LOADBOOL  R15 1 0      ; R15 := true
139 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
140 [-]: SELF      R12 R3 K33   ; R13 := R3; R12 := R3[0x24d4e4c1]
141 [-]: MOVE      R14 R0       ; R14 := R0
142 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
143 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
144 [-]: MOVE      R14 R12      ; R14 := R12
145 [-]: CALL      R13 2 2      ; R13 := R13(R14)
146 [-]: TEST      R13 1        ; if R13 then PC := 155
147 [-]: JMP       155          ; PC := 155
148 [-]: SELF      R13 R12 K34  ; R14 := R12; R13 := R12[0xd2d3875a]
149 [-]: CALL      R13 2 2      ; R13 := R13(R14)
150 [-]: TEST      R13 1        ; if R13 then PC := 155
151 [-]: JMP       155          ; PC := 155
152 [-]: LOADBOOL  R13 0 0      ; R13 := false
153 [-]: SETGLOBAL R13 K24      ; mMenuSuitAvatarVisible := R13
154 [-]: RETURN    R0 1         ; return 
155 [-]: GETGLOBAL R13 K35      ; R13 := 0x3d106989
156 [-]: LOADK     R14 K36      ; R14 := "LoadOut resource loader is done; showing avatar"
157 [-]: CALL      R13 2 1      ; R13(R14)
158 [-]: SELF      R13 R3 K37   ; R14 := R3; R13 := R3[0x121ec068]
159 [-]: CALL      R13 2 1      ; R13(R14)
160 [-]: GETGLOBAL R13 K8       ; R13 := 0x76ea806b
161 [-]: SELF      R13 R13 K38  ; R14 := R13; R13 := R13[0x8792aaab]
162 [-]: CALL      R13 2 2      ; R13 := R13(R14)
163 [-]: TEST      R13 0        ; if not R13 then PC := 167
164 [-]: JMP       167          ; PC := 167
165 [-]: SELF      R13 R3 K39   ; R14 := R3; R13 := R3[0x41f4ba99]
166 [-]: CALL      R13 2 1      ; R13(R14)
167 [-]: SELF      R13 R3 K28   ; R14 := R3; R13 := R3[0x62c81b76]
168 [-]: CALL      R13 2 2      ; R13 := R13(R14)
169 [-]: GETUPVAL  R14 U1       ; R14 := U1
170 [-]: GETGLOBAL R15 K1       ; R15 := mMenuSuitAvatar
171 [-]: LOADBOOL  R16 1 0      ; R16 := true
172 [-]: CALL      R14 3 1      ; R14(R15,R16)
173 [-]: LOADBOOL  R14 1 0      ; R14 := true
174 [-]: SETGLOBAL R14 K24      ; mMenuSuitAvatarVisible := R14
175 [-]: LOADNIL   R14 R14      ; R14 := nil
176 [-]: GETTABLE  R15 R13 K29  ; R15 := R13["mAdultOperatorCustomization"]
177 [-]: SELF      R16 R15 K40  ; R17 := R15; R16 := R15[0x0549b427]
178 [-]: CALL      R16 2 2      ; R16 := R16(R17)
179 [-]: TEST      R16 0        ; if not R16 then PC := 186
180 [-]: JMP       186          ; PC := 186
181 [-]: GETGLOBAL R16 K13      ; R16 := 0x7ed0a956
182 [-]: LOADK     R17 K41      ; R17 := "/Lotus/Types/Friendly/PlayerControllable/MaleControllableDrifterSuit"
183 [-]: CALL      R16 2 2      ; R16 := R16(R17)
184 [-]: MOVE      R14 R16      ; R14 := R16
185 [-]: JMP       190          ; PC := 190
186 [-]: GETGLOBAL R16 K13      ; R16 := 0x7ed0a956
187 [-]: LOADK     R17 K42      ; R17 := "/Lotus/Types/Friendly/PlayerControllable/FemaleControllableDrifterSuit"
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: MOVE      R14 R16      ; R14 := R16
190 [-]: GETUPVAL  R16 U2       ; R16 := U2
191 [-]: GETTABLE  R16 R16 K43  ; R16 := R16[0x222e16f3]
192 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
193 [-]: MOVE      R18 R13      ; R18 := R13
194 [-]: LOADBOOL  R19 0 0      ; R19 := false
195 [-]: LOADBOOL  R20 1 0      ; R20 := true
196 [-]: MOVE      R21 R14      ; R21 := R14
197 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
198 [-]: GETGLOBAL R16 K1       ; R16 := mMenuSuitAvatar
199 [-]: SELF      R16 R16 K44  ; R17 := R16; R16 := R16[0x2e9b92e3]
200 [-]: LOADK     R18 1        ; R18 := 1.000000
201 [-]: CALL      R16 3 1      ; R16(R17,R18)
202 [-]: LOADBOOL  R16 1 0      ; R16 := true
203 [-]: SETGLOBAL R16 K24      ; mMenuSuitAvatarVisible := R16
204 [-]: RETURN    R0 1         ; return 
205 [-]: GETGLOBAL R16 K4       ; R16 := 0x89326c93
206 [-]: SELF      R16 R16 K45  ; R17 := R16; R16 := R16[0x18d05d30]
207 [-]: CALL      R16 2 2      ; R16 := R16(R17)
208 [-]: TEST      R16 1        ; if R16 then PC := 214
209 [-]: JMP       214          ; PC := 214
210 [-]: GETUPVAL  R16 U3       ; R16 := U3
211 [-]: CALL      R16 1 2      ; R16 := R16()
212 [-]: TEST      R16 1        ; if R16 then PC := 218
213 [-]: JMP       218          ; PC := 218
214 [-]: GETGLOBAL R16 K21      ; R16 := _T
215 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["streaming_prevLevel"]
216 [-]: TEST      R16 0        ; if not R16 then PC := 223
217 [-]: JMP       223          ; PC := 223
218 [-]: GETGLOBAL R16 K21      ; R16 := _T
219 [-]: SETTABLE  R16 K22 K23  ; R16["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
220 [-]: LOADBOOL  R16 1 0      ; R16 := true
221 [-]: SETGLOBAL R16 K24      ; mMenuSuitAvatarVisible := R16
222 [-]: RETURN    R0 1         ; return 
223 [-]: GETUPVAL  R16 U1       ; R16 := U1
224 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
225 [-]: LOADBOOL  R18 0 0      ; R18 := false
226 [-]: CALL      R16 3 1      ; R16(R17,R18)
227 [-]: TEST      R1 0         ; if not R1 then PC := 268
228 [-]: JMP       268          ; PC := 268
229 [-]: GETGLOBAL R16 K21      ; R16 := _T
230 [-]: SETTABLE  R16 K22 K47  ; R16["MENU_SUIT_AVATAR_PROGRESS"] := 0.000000
231 [-]: GETGLOBAL R16 K48      ; R16 := 0x00046924
232 [-]: CALL      R16 1 2      ; R16 := R16()
233 [-]: GETUPVAL  R17 U0       ; R17 := U0
234 [-]: GETTABLE  R17 R17 K49  ; R17 := R17[0xf47b8ec3]
235 [-]: LOADBOOL  R18 1 0      ; R18 := true
236 [-]: CALL      R17 2 2      ; R17 := R17(R18)
237 [-]: TEST      R17 0        ; if not R17 then PC := 240
238 [-]: JMP       240          ; PC := 240
239 [-]: SETTABLE  R16 K50 K51  ; R16["heading"] := 180.000000
240 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
241 [-]: SELF      R17 R17 K52  ; R18 := R17; R17 := R17[0x89c6dbf7]
242 [-]: MOVE      R19 R16      ; R19 := R16
243 [-]: CALL      R17 3 1      ; R17(R18,R19)
244 [-]: GETGLOBAL R17 K8       ; R17 := 0x76ea806b
245 [-]: SELF      R17 R17 K38  ; R18 := R17; R17 := R17[0x8792aaab]
246 [-]: CALL      R17 2 2      ; R17 := R17(R18)
247 [-]: TEST      R17 0        ; if not R17 then PC := 256
248 [-]: JMP       256          ; PC := 256
249 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
250 [-]: SELF      R17 R17 K53  ; R18 := R17; R17 := R17[0x589ef1c1]
251 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
252 [-]: SELF      R19 R19 K54  ; R20 := R19; R19 := R19[0xd1586535]
253 [-]: CALL      R19 2 2      ; R19 := R19(R20)
254 [-]: MOVE      R20 R16      ; R20 := R16
255 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
256 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
257 [-]: SELF      R17 R17 K55  ; R18 := R17; R17 := R17[0xb2532845]
258 [-]: GETGLOBAL R19 K56      ; R19 := 0x0469f296
259 [-]: LOADK     R20 K57      ; R20 := "InstantKneel"
260 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
261 [-]: CALL      R17 0 1      ; R17(R18,...)
262 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
263 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
264 [-]: CALL      R17 2 2      ; R17 := R17(R18)
265 [-]: SELF      R17 R17 K59  ; R18 := R17; R17 := R17[0xc7154a44]
266 [-]: LOADBOOL  R19 0 0      ; R19 := false
267 [-]: CALL      R17 3 1      ; R17(R18,R19)
268 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
269 [-]: MOVE      R18 R2       ; R18 := R2
270 [-]: CALL      R17 2 2      ; R17 := R17(R18)
271 [-]: TEST      R17 0        ; if not R17 then PC := 301
272 [-]: JMP       301          ; PC := 301
273 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
274 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
275 [-]: CALL      R17 2 2      ; R17 := R17(R18)
276 [-]: SELF      R17 R17 K60  ; R18 := R17; R17 := R17[0x374b084a]
277 [-]: CALL      R17 2 1      ; R17(R18)
278 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
279 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
280 [-]: CALL      R17 2 2      ; R17 := R17(R18)
281 [-]: SELF      R17 R17 K61  ; R18 := R17; R17 := R17[0x1d2dfe4a]
282 [-]: GETGLOBAL R19 K31      ; R19 := 0x6c97a788
283 [-]: GETTABLE  R19 R19 K62  ; R19 := R19[0x17574a02]
284 [-]: CALL      R19 1 0      ; R19,... := R19()
285 [-]: CALL      R17 0 1      ; R17(R18,...)
286 [-]: GETGLOBAL R17 K1       ; R17 := mMenuSuitAvatar
287 [-]: SELF      R17 R17 K58  ; R18 := R17; R17 := R17[0xde321e6f]
288 [-]: CALL      R17 2 2      ; R17 := R17(R18)
289 [-]: SELF      R17 R17 K63  ; R18 := R17; R17 := R17[0x0c277ae1]
290 [-]: LOADBOOL  R19 0 0      ; R19 := false
291 [-]: CALL      R17 3 1      ; R17(R18,R19)
292 [-]: GETUPVAL  R17 U1       ; R17 := U1
293 [-]: GETGLOBAL R18 K1       ; R18 := mMenuSuitAvatar
294 [-]: LOADBOOL  R19 1 0      ; R19 := true
295 [-]: CALL      R17 3 1      ; R17(R18,R19)
296 [-]: LOADBOOL  R17 1 0      ; R17 := true
297 [-]: SETGLOBAL R17 K24      ; mMenuSuitAvatarVisible := R17
298 [-]: GETGLOBAL R17 K21      ; R17 := _T
299 [-]: SETTABLE  R17 K22 K23  ; R17["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
300 [-]: RETURN    R0 1         ; return 
301 [-]: GETGLOBAL R17 K21      ; R17 := _T
302 [-]: GETTABLE  R17 R17 K64  ; R17 := R17["syncingInventory"]
303 [-]: TEST      R17 0        ; if not R17 then PC := 351
304 [-]: JMP       351          ; PC := 351
305 [-]: SELF      R17 R3 K33   ; R18 := R3; R17 := R3[0x24d4e4c1]
306 [-]: MOVE      R19 R0       ; R19 := R0
307 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
308 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
309 [-]: MOVE      R19 R17      ; R19 := R17
310 [-]: CALL      R18 2 2      ; R18 := R18(R19)
311 [-]: TEST      R18 1        ; if R18 then PC := 350
312 [-]: JMP       350          ; PC := 350
313 [-]: GETGLOBAL R18 K21      ; R18 := _T
314 [-]: SELF      R19 R17 K65  ; R20 := R17; R19 := R17[0x958b6075]
315 [-]: CALL      R19 2 2      ; R19 := R19(R20)
316 [-]: SETTABLE  R18 K22 R19  ; R18["MENU_SUIT_AVATAR_PROGRESS"] := R19
317 [-]: SELF      R18 R17 K34  ; R19 := R17; R18 := R17[0xd2d3875a]
318 [-]: CALL      R18 2 2      ; R18 := R18(R19)
319 [-]: TEST      R18 0        ; if not R18 then PC := 350
320 [-]: JMP       350          ; PC := 350
321 [-]: SELF      R18 R3 K28   ; R19 := R3; R18 := R3[0x62c81b76]
322 [-]: CALL      R18 2 2      ; R18 := R18(R19)
323 [-]: GETGLOBAL R19 K21      ; R19 := _T
324 [-]: SETTABLE  R19 K22 K23  ; R19["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
325 [-]: LOADBOOL  R19 1 0      ; R19 := true
326 [-]: SETGLOBAL R19 K24      ; mMenuSuitAvatarVisible := R19
327 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
328 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0xde321e6f]
329 [-]: CALL      R19 2 2      ; R19 := R19(R20)
330 [-]: SELF      R19 R19 K60  ; R20 := R19; R19 := R19[0x374b084a]
331 [-]: CALL      R19 2 1      ; R19(R20)
332 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
333 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0xde321e6f]
334 [-]: CALL      R19 2 2      ; R19 := R19(R20)
335 [-]: SELF      R19 R19 K61  ; R20 := R19; R19 := R19[0x1d2dfe4a]
336 [-]: MOVE      R21 R18      ; R21 := R18
337 [-]: CALL      R19 3 1      ; R19(R20,R21)
338 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
339 [-]: SELF      R19 R19 K58  ; R20 := R19; R19 := R19[0xde321e6f]
340 [-]: CALL      R19 2 2      ; R19 := R19(R20)
341 [-]: SELF      R19 R19 K63  ; R20 := R19; R19 := R19[0x0c277ae1]
342 [-]: LOADBOOL  R21 0 0      ; R21 := false
343 [-]: CALL      R19 3 1      ; R19(R20,R21)
344 [-]: GETGLOBAL R19 K1       ; R19 := mMenuSuitAvatar
345 [-]: SELF      R19 R19 K66  ; R20 := R19; R19 := R19[0x5b89142c]
346 [-]: CALL      R19 2 2      ; R19 := R19(R20)
347 [-]: SELF      R19 R19 K67  ; R20 := R19; R19 := R19[0xe5586395]
348 [-]: MOVE      R21 R18      ; R21 := R18
349 [-]: CALL      R19 3 1      ; R19(R20,R21)
350 [-]: RETURN    R0 1         ; return 
351 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
352 [-]: MOVE      R20 R3       ; R20 := R3
353 [-]: CALL      R19 2 2      ; R19 := R19(R20)
354 [-]: TEST      R19 0        ; if not R19 then PC := 359
355 [-]: JMP       359          ; PC := 359
356 [-]: LOADBOOL  R19 0 0      ; R19 := false
357 [-]: SETGLOBAL R19 K24      ; mMenuSuitAvatarVisible := R19
358 [-]: RETURN    R0 1         ; return 
359 [-]: SELF      R19 R3 K33   ; R20 := R3; R19 := R3[0x24d4e4c1]
360 [-]: MOVE      R21 R0       ; R21 := R0
361 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
362 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
363 [-]: MOVE      R21 R19      ; R21 := R19
364 [-]: CALL      R20 2 2      ; R20 := R20(R21)
365 [-]: TEST      R20 1        ; if R20 then PC := 378
366 [-]: JMP       378          ; PC := 378
367 [-]: SELF      R20 R19 K34  ; R21 := R19; R20 := R19[0xd2d3875a]
368 [-]: CALL      R20 2 2      ; R20 := R20(R21)
369 [-]: TEST      R20 1        ; if R20 then PC := 378
370 [-]: JMP       378          ; PC := 378
371 [-]: GETGLOBAL R20 K21      ; R20 := _T
372 [-]: SELF      R21 R19 K65  ; R22 := R19; R21 := R19[0x958b6075]
373 [-]: CALL      R21 2 2      ; R21 := R21(R22)
374 [-]: SETTABLE  R20 K22 R21  ; R20["MENU_SUIT_AVATAR_PROGRESS"] := R21
375 [-]: LOADBOOL  R20 0 0      ; R20 := false
376 [-]: SETGLOBAL R20 K24      ; mMenuSuitAvatarVisible := R20
377 [-]: RETURN    R0 1         ; return 
378 [-]: GETGLOBAL R20 K35      ; R20 := 0x3d106989
379 [-]: LOADK     R21 K36      ; R21 := "LoadOut resource loader is done; showing avatar"
380 [-]: CALL      R20 2 1      ; R20(R21)
381 [-]: SELF      R20 R3 K37   ; R21 := R3; R20 := R3[0x121ec068]
382 [-]: CALL      R20 2 1      ; R20(R21)
383 [-]: GETGLOBAL R20 K8       ; R20 := 0x76ea806b
384 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0x8792aaab]
385 [-]: CALL      R20 2 2      ; R20 := R20(R21)
386 [-]: TEST      R20 0        ; if not R20 then PC := 410
387 [-]: JMP       410          ; PC := 410
388 [-]: SELF      R20 R3 K39   ; R21 := R3; R20 := R3[0x41f4ba99]
389 [-]: CALL      R20 2 1      ; R20(R21)
390 [-]: GETGLOBAL R20 K21      ; R20 := _T
391 [-]: GETTABLE  R20 R20 K68  ; R20 := R20["Jukebox"]
392 [-]: EQ        0 R20 K26    ; if R20 ~= nil then PC := 410
393 [-]: JMP       410          ; PC := 410
394 [-]: SELF      R20 R3 K69   ; R21 := R3; R20 := R3[0x4ae54c32]
395 [-]: GETUPVAL  R22 U0       ; R22 := U0
396 [-]: GETTABLE  R22 R22 K70  ; R22 := R22["SF_PERSONAL_QUARTERS"]
397 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
398 [-]: TEST      R20 0        ; if not R20 then PC := 410
399 [-]: JMP       410          ; PC := 410
400 [-]: GETGLOBAL R20 K2       ; R20 := 0xbe190284
401 [-]: SELF      R20 R20 K71  ; R21 := R20; R20 := R20[0x23ddc82a]
402 [-]: CALL      R20 2 2      ; R20 := R20(R21)
403 [-]: TEST      R20 1        ; if R20 then PC := 410
404 [-]: JMP       410          ; PC := 410
405 [-]: GETUPVAL  R20 U4       ; R20 := U4
406 [-]: GETTABLE  R20 R20 K72  ; R20 := R20[0x687ae094]
407 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
408 [-]: GETGLOBAL R22 K73      ; R22 := 0xae91e43b
409 [-]: CALL      R20 3 1      ; R20(R21,R22)
410 [-]: SELF      R20 R3 K28   ; R21 := R3; R20 := R3[0x62c81b76]
411 [-]: CALL      R20 2 2      ; R20 := R20(R21)
412 [-]: GETUPVAL  R21 U1       ; R21 := U1
413 [-]: GETGLOBAL R22 K1       ; R22 := mMenuSuitAvatar
414 [-]: LOADBOOL  R23 1 0      ; R23 := true
415 [-]: CALL      R21 3 1      ; R21(R22,R23)
416 [-]: LOADBOOL  R21 1 0      ; R21 := true
417 [-]: SETGLOBAL R21 K24      ; mMenuSuitAvatarVisible := R21
418 [-]: GETGLOBAL R21 K21      ; R21 := _T
419 [-]: SETTABLE  R21 K22 K23  ; R21["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
420 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
421 [-]: SELF      R21 R21 K58  ; R22 := R21; R21 := R21[0xde321e6f]
422 [-]: CALL      R21 2 2      ; R21 := R21(R22)
423 [-]: SELF      R21 R21 K60  ; R22 := R21; R21 := R21[0x374b084a]
424 [-]: CALL      R21 2 1      ; R21(R22)
425 [-]: GETGLOBAL R21 K2       ; R21 := 0xbe190284
426 [-]: SELF      R21 R21 K74  ; R22 := R21; R21 := R21[0x417eba72]
427 [-]: MOVE      R23 R20      ; R23 := R20
428 [-]: CALL      R21 3 1      ; R21(R22,R23)
429 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
430 [-]: SELF      R21 R21 K58  ; R22 := R21; R21 := R21[0xde321e6f]
431 [-]: CALL      R21 2 2      ; R21 := R21(R22)
432 [-]: SELF      R21 R21 K61  ; R22 := R21; R21 := R21[0x1d2dfe4a]
433 [-]: MOVE      R23 R20      ; R23 := R20
434 [-]: CALL      R21 3 1      ; R21(R22,R23)
435 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
436 [-]: SELF      R21 R21 K58  ; R22 := R21; R21 := R21[0xde321e6f]
437 [-]: CALL      R21 2 2      ; R21 := R21(R22)
438 [-]: SELF      R21 R21 K63  ; R22 := R21; R21 := R21[0x0c277ae1]
439 [-]: LOADBOOL  R23 0 0      ; R23 := false
440 [-]: CALL      R21 3 1      ; R21(R22,R23)
441 [-]: GETGLOBAL R21 K1       ; R21 := mMenuSuitAvatar
442 [-]: SELF      R21 R21 K66  ; R22 := R21; R21 := R21[0x5b89142c]
443 [-]: CALL      R21 2 2      ; R21 := R21(R22)
444 [-]: SELF      R21 R21 K67  ; R22 := R21; R21 := R21[0xe5586395]
445 [-]: MOVE      R23 R20      ; R23 := R20
446 [-]: CALL      R21 3 1      ; R21(R22,R23)
447 [-]: GETGLOBAL R21 K21      ; R21 := _T
448 [-]: GETGLOBAL R22 K1       ; R22 := mMenuSuitAvatar
449 [-]: SELF      R22 R22 K54  ; R23 := R22; R22 := R22[0xd1586535]
450 [-]: CALL      R22 2 2      ; R22 := R22(R23)
451 [-]: SETTABLE  R21 K75 R22  ; R21["menuSuitInitPos"] := R22
452 [-]: GETGLOBAL R21 K21      ; R21 := _T
453 [-]: GETGLOBAL R22 K1       ; R22 := mMenuSuitAvatar
454 [-]: SELF      R22 R22 K54  ; R23 := R22; R22 := R22[0xd1586535]
455 [-]: CALL      R22 2 2      ; R22 := R22(R23)
456 [-]: SETTABLE  R21 K76 R22  ; R21["menuSuitTargetPos"] := R22
457 [-]: LOADBOOL  R21 1 0      ; R21 := true
458 [-]: SETUPVAL  R21 U5       ; U82 := R5
459 [-]: GETGLOBAL R21 K4       ; R21 := 0x89326c93
460 [-]: SELF      R21 R21 K77  ; R22 := R21; R21 := R21[0xfb64e76c]
461 [-]: CALL      R21 2 2      ; R21 := R21(R22)
462 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
463 [-]: MOVE      R23 R21      ; R23 := R21
464 [-]: CALL      R22 2 2      ; R22 := R22(R23)
465 [-]: TEST      R22 1        ; if R22 then PC := 476
466 [-]: JMP       476          ; PC := 476
467 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
468 [-]: SELF      R23 R21 K78  ; R24 := R21; R23 := R21[0xa534c3ac]
469 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
470 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
471 [-]: TEST      R22 0        ; if not R22 then PC := 476
472 [-]: JMP       476          ; PC := 476
473 [-]: SELF      R22 R21 K79  ; R23 := R21; R22 := R21[0xe8272a78]
474 [-]: GETGLOBAL R24 K1       ; R24 := mMenuSuitAvatar
475 [-]: CALL      R22 3 1      ; R22(R23,R24)
476 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1806
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMenuSuitAvatarVisible
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1810
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1814
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADBOOL  R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mCheckingForIdentifiedOmegaMods := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: SETGLOBAL R0 K1        ; mOmegaWithPendingFingerprints := R0
  5 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  6 [-]: SETGLOBAL R0 K2        ; mNewIdentifiedOmegaMods := R0
  7 [-]: LOADK     R0 1         ; R0 := 1.000000
  8 [-]: SETUPVAL  R0 U0        ; U82 := R0
  9 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1821
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := mFoundryNotification
  2 [-]: SETTABLE  R2 K1 K2     ; R2["Refresh"] := true
  3 [-]: GETGLOBAL R2 K3        ; R2 := _T
  4 [-]: SETTABLE  R2 K4 K5     ; R2["syncingInventory"] := false
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: CALL      R2 1 1       ; R2()
  7 [-]: LOADBOOL  R2 0 0       ; R2 := false
  8 [-]: SETGLOBAL R2 K6        ; mMenuSuitAvatarVisible := R2
  9 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K8        ; R3 := 0x25d99d89
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 42
 13 [-]: JMP       42           ; PC := 42
 14 [-]: GETGLOBAL R2 K8        ; R2 := 0x25d99d89
 15 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x21a1810f]
 16 [-]: GETUPVAL  R4 U1        ; R4 := U1
 17 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["NodeSymbol"]
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: TEST      R2 1         ; if R2 then PC := 42
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETUPVAL  R2 U2        ; R2 := U2
 22 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0xe0628359]
 23 [-]: CALL      R2 1 2       ; R2 := R2()
 24 [-]: TEST      R2 0         ; if not R2 then PC := 42
 25 [-]: JMP       42           ; PC := 42
 26 [-]: GETGLOBAL R2 K8        ; R2 := 0x25d99d89
 27 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0x25a6e75e]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x8e7c3b5e]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: GETGLOBAL R3 K14       ; R3 := 0x7ed0a956
 32 [-]: LOADK     R4 K15       ; R4 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 37
 37 [-]: LOADBOOL  R2 1 0       ; R2 := true
 38 [-]: TEST      R2 1         ; if R2 then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: GETUPVAL  R3 U1        ; R3 := U1
 41 [-]: SETTABLE  R3 K16 K17   ; R3["InviteQueued"] := 5.000000
 42 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1835
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x76ea806b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x3f3ae64c]
  3 [-]: LOADK     R4 0         ; R4 := 0.000000
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 27
  9 [-]: JMP       27           ; PC := 27
 10 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x22de02e1]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 0         ; if not R3 then PC := 27
 13 [-]: JMP       27           ; PC := 27
 14 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x80563238]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 17 [-]: MOVE      R5 R3        ; R5 := R3
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3[0x1730e16b]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 0         ; if not R4 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: GETGLOBAL R4 K6        ; R4 := _T
 26 [-]: SETTABLE  R4 K7 K8     ; R4["gQueueMailbox"] := true
 27 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1847
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: EQ        1 R1 K0      ; if R1 == "" then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xa5c556b9]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/"
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 14 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x42b04007]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADBOOL  R6 0 0       ; R6 := false
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: LOADK     R5 0         ; R5 := 0.000000
 21 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1853
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: EQ        1 R1 K0      ; if R1 == "" then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xa5c556b9]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/"
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 14 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x42b04007]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADBOOL  R6 0 0       ; R6 := false
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: LOADK     R5 0         ; R5 := 0.000000
 21 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 22 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1859
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1862
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x354c41af
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 44
  5 [-]: JMP       44           ; PC := 44
  6 [-]: GETGLOBAL R3 K2        ; R3 := _T
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["InfoPopup_Data"]
  8 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 44
  9 [-]: JMP       44           ; PC := 44
 10 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["UID"]
 11 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETTABLE  R4 R3 K6     ; R4 := R3["RawItem"]
 14 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETTABLE  R4 R3 K6     ; R4 := R3["RawItem"]
 17 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UID"]
 18 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["UID"]
 19 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 44
 20 [-]: JMP       44           ; PC := 44
 21 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
 22 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x1fd6abd0]
 23 [-]: GETGLOBAL R6 K1        ; R6 := 0x354c41af
 24 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 25 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 26 [-]: MOVE      R6 R4        ; R6 := R4
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: TEST      R5 1         ; if R5 then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: GETGLOBAL R5 K2        ; R5 := _T
 31 [-]: LOADK     R6 K3        ; R6 := "InfoPopup_Data"
 32 [-]: MOVE      R7 R1        ; R7 := R1
 33 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 34 [-]: SETTABLE  R5 R6 R0     ; R5[R6] := R0
 35 [-]: SELF      R5 R4 K9     ; R6 := R4; R5 := R4[0xe4162eed]
 36 [-]: LOADK     R7 K10       ; R7 := "OverrideItemInfoData"
 37 [-]: MOVE      R8 R1        ; R8 := R1
 38 [-]: LOADK     R9 K11       ; R9 := ","
 39 [-]: MOVE      R10 R2       ; R10 := R2
 40 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 41 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 42 [-]: LOADBOOL  R5 1 0       ; R5 := true
 43 [-]: RETURN    R5 2         ; return R5
 44 [-]: LOADBOOL  R5 0 0       ; R5 := false
 45 [-]: RETURN    R5 2         ; return R5
 46 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1879
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["TopMenuOpen"] := false
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0x0bad3ab5
  4 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 10 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5374b92e]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: TEST      R1 1         ; if R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 16 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CALL      R1 3 1       ; R1(R2,R3)
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 20 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
 21 [-]: GETGLOBAL R3 K11       ; R3 := 0x997568cf
 22 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 23 [-]: SETGLOBAL R1 K9        ; mToolTip := R1
 24 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 25 [-]: GETGLOBAL R2 K9        ; R2 := mToolTip
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 30 [-]: GETGLOBAL R2 K11       ; R2 := 0x997568cf
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 1         ; if R1 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 35 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 36 [-]: GETGLOBAL R3 K11       ; R3 := 0x997568cf
 37 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 38 [-]: SETGLOBAL R1 K9        ; mToolTip := R1
 39 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 40 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
 41 [-]: GETGLOBAL R3 K13       ; R3 := 0x354c41af
 42 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 43 [-]: SETGLOBAL R1 K12       ; mInfoPopup := R1
 44 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 45 [-]: GETGLOBAL R2 K12       ; R2 := mInfoPopup
 46 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 47 [-]: TEST      R1 0         ; if not R1 then PC := 59
 48 [-]: JMP       59           ; PC := 59
 49 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 50 [-]: GETGLOBAL R2 K13       ; R2 := 0x354c41af
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 1         ; if R1 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 55 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 56 [-]: GETGLOBAL R3 K13       ; R3 := 0x354c41af
 57 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 58 [-]: SETGLOBAL R1 K12       ; mInfoPopup := R1
 59 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 60 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
 61 [-]: GETGLOBAL R3 K15       ; R3 := 0xfc29c5ee
 62 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 63 [-]: SETGLOBAL R1 K14       ; mContextMenu := R1
 64 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 65 [-]: GETGLOBAL R2 K14       ; R2 := mContextMenu
 66 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 67 [-]: TEST      R1 0         ; if not R1 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 70 [-]: GETGLOBAL R2 K15       ; R2 := 0xfc29c5ee
 71 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 72 [-]: TEST      R1 1         ; if R1 then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 75 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 76 [-]: GETGLOBAL R3 K15       ; R3 := 0xfc29c5ee
 77 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 78 [-]: SETGLOBAL R1 K14       ; mContextMenu := R1
 79 [-]: GETGLOBAL R1 K16       ; R1 := mCurrentMode
 80 [-]: GETUPVAL  R2 U0        ; R2 := U0
 81 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 82 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 111
 83 [-]: JMP       111          ; PC := 111
 84 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 85 [-]: GETGLOBAL R2 K18       ; R2 := 0x2c15a601
 86 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 87 [-]: TEST      R1 1         ; if R1 then PC := 99
 88 [-]: JMP       99           ; PC := 99
 89 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 90 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5374b92e]
 91 [-]: GETGLOBAL R3 K18       ; R3 := 0x2c15a601
 92 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 93 [-]: TEST      R1 1         ; if R1 then PC := 99
 94 [-]: JMP       99           ; PC := 99
 95 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 96 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
 97 [-]: GETGLOBAL R3 K18       ; R3 := 0x2c15a601
 98 [-]: CALL      R1 3 1       ; R1(R2,R3)
 99 [-]: GETGLOBAL R1 K19       ; R1 := 0xbe190284
100 [-]: SELF      R1 R1 K20    ; R2 := R1; R1 := R1[0x23ddc82a]
101 [-]: CALL      R1 2 2       ; R1 := R1(R2)
102 [-]: TEST      R1 1         ; if R1 then PC := 111
103 [-]: JMP       111          ; PC := 111
104 [-]: LOADK     R1 K22       ; R1 := "Default"
105 [-]: SETGLOBAL R1 K21       ; queuedMovie := R1
106 [-]: GETUPVAL  R1 U1        ; R1 := U1
107 [-]: GETGLOBAL R2 K21       ; R2 := queuedMovie
108 [-]: CALL      R1 2 1       ; R1(R2)
109 [-]: GETUPVAL  R1 U2        ; R1 := U2
110 [-]: CALL      R1 1 1       ; R1()
111 [-]: GETGLOBAL R1 K23       ; R1 := 0x34291f5c
112 [-]: GETTABLE  R1 R1 K24    ; R1 := R1[0x056bfe8b]
113 [-]: CALL      R1 1 2       ; R1 := R1()
114 [-]: TEST      R1 1         ; if R1 then PC := 136
115 [-]: JMP       136          ; PC := 136
116 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
117 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xbcfb64ab]
118 [-]: GETGLOBAL R3 K26       ; R3 := 0x16a51607
119 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
120 [-]: SETGLOBAL R1 K25       ; mIMEOverlay := R1
121 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
122 [-]: GETGLOBAL R2 K25       ; R2 := mIMEOverlay
123 [-]: CALL      R1 2 2       ; R1 := R1(R2)
124 [-]: TEST      R1 0         ; if not R1 then PC := 136
125 [-]: JMP       136          ; PC := 136
126 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
127 [-]: GETGLOBAL R2 K26       ; R2 := 0x16a51607
128 [-]: CALL      R1 2 2       ; R1 := R1(R2)
129 [-]: TEST      R1 1         ; if R1 then PC := 136
130 [-]: JMP       136          ; PC := 136
131 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
132 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x1fd6abd0]
133 [-]: GETGLOBAL R3 K26       ; R3 := 0x16a51607
134 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
135 [-]: SETGLOBAL R1 K25       ; mIMEOverlay := R1
136 [-]: LOADBOOL  R1 0 0       ; R1 := false
137 [-]: SETGLOBAL R1 K27       ; mAdditionalScreenCreated := R1
138 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1926
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x22efbc9d
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x9ba7909f
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5374b92e]
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x22efbc9d
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 26
 11 [-]: JMP       26           ; PC := 26
 12 [-]: GETGLOBAL R0 K4        ; R0 := 0x0032441c
 13 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["StalkerMode"]
 14 [-]: TEST      R0 1         ; if R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R0 K4        ; R0 := 0x0032441c
 17 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["LoadingTutorial"]
 18 [-]: TEST      R0 1         ; if R0 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETGLOBAL R0 K7        ; R0 := _T
 21 [-]: GETGLOBAL R1 K9        ; R1 := 0xae91e43b
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x1fd6abd0]
 23 [-]: GETGLOBAL R3 K1        ; R3 := 0x22efbc9d
 24 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 25 [-]: SETTABLE  R0 K8 R1     ; R0["AcceptInvitePanel"] := R1
 26 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 27 [-]: GETGLOBAL R1 K11       ; R1 := 0x45c63724
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 1         ; if R0 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: GETGLOBAL R0 K2        ; R0 := 0x9ba7909f
 32 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5374b92e]
 33 [-]: GETGLOBAL R2 K11       ; R2 := 0x45c63724
 34 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 35 [-]: TEST      R0 1         ; if R0 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: GETGLOBAL R0 K9        ; R0 := 0xae91e43b
 38 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x1fd6abd0]
 39 [-]: GETGLOBAL R2 K11       ; R2 := 0x45c63724
 40 [-]: CALL      R0 3 1       ; R0(R1,R2)
 41 [-]: GETGLOBAL R0 K12       ; R0 := 0xdbf8fb8c
 42 [-]: GETGLOBAL R1 K2        ; R1 := 0x9ba7909f
 43 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0xbcfb64ab]
 44 [-]: MOVE      R3 R0        ; R3 := R0
 45 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 46 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 47 [-]: MOVE      R3 R1        ; R3 := R1
 48 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 49 [-]: TEST      R2 0         ; if not R2 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETGLOBAL R2 K7        ; R2 := _T
 52 [-]: GETGLOBAL R3 K2        ; R3 := 0x9ba7909f
 53 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0x6dd7aa66]
 54 [-]: MOVE      R5 R0        ; R5 := R0
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: SETTABLE  R2 K14 R3    ; R2["SquadOverlay"] := R3
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: CALL      R2 1 1       ; R2()
 59 [-]: GETGLOBAL R2 K16       ; R2 := 0x34291f5c
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2[0xe6b41adb]
 61 [-]: CALL      R2 1 2       ; R2 := R2()
 62 [-]: TEST      R2 0         ; if not R2 then PC := 95
 63 [-]: JMP       95           ; PC := 95
 64 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 65 [-]: GETGLOBAL R3 K18       ; R3 := 0x3ace7bd2
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: TEST      R2 1         ; if R2 then PC := 95
 68 [-]: JMP       95           ; PC := 95
 69 [-]: GETGLOBAL R2 K2        ; R2 := 0x9ba7909f
 70 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xbf9494fc]
 71 [-]: LOADK     R4 K20       ; R4 := "Flash.ShowTouchControls"
 72 [-]: LOADBOOL  R5 1 0       ; R5 := true
 73 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 74 [-]: TEST      R2 0         ; if not R2 then PC := 95
 75 [-]: JMP       95           ; PC := 95
 76 [-]: GETGLOBAL R2 K2        ; R2 := 0x9ba7909f
 77 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0xbcfb64ab]
 78 [-]: GETGLOBAL R4 K18       ; R4 := 0x3ace7bd2
 79 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 80 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 81 [-]: MOVE      R4 R2        ; R4 := R2
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: TEST      R3 0         ; if not R3 then PC := 95
 84 [-]: JMP       95           ; PC := 95
 85 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 86 [-]: GETGLOBAL R4 K18       ; R4 := 0x3ace7bd2
 87 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 88 [-]: TEST      R3 1         ; if R3 then PC := 95
 89 [-]: JMP       95           ; PC := 95
 90 [-]: GETGLOBAL R3 K2        ; R3 := 0x9ba7909f
 91 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3[0xcfba257f]
 92 [-]: GETGLOBAL R5 K18       ; R5 := 0x3ace7bd2
 93 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 94 [-]: MOVE      R2 R3        ; R2 := R3
 95 [-]: LOADBOOL  R3 1 0       ; R3 := true
 96 [-]: SETGLOBAL R3 K22       ; mAdditionalScreenCreated := R3
 97 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1954
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == "Lobby" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 4
  4 [-]: LOADBOOL  R1 1 0       ; R1 := true
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1958
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xa9882367]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K1     ; R4 := R4[0x06d055f9]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5[0xcf1fcba4]
  8 [-]: CALL      R5 1 2       ; R5 := R5()
  9 [-]: GETGLOBAL R6 K3        ; R6 := 0x1211d00f
 10 [-]: LOADNIL   R7 R7        ; R7 := nil
 11 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 12 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 65
 17 [-]: JMP       65           ; PC := 65
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x89326c93
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xded7d5cd]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 22 [-]: MOVE      R5 R3        ; R5 := R3
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: TEST      R4 1         ; if R4 then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: LEN       R4 R3        ; R4 := # R3
 27 [-]: EQ        0 R4 K7      ; if R4 ~= 0.000000 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: LOADK     R4 1         ; R4 := 1.000000
 31 [-]: EQ        1 R1 K8      ; if R1 == nil then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETGLOBAL R5 K9        ; R5 := 0x03f57322
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: MOVE      R4 R5        ; R4 := R5
 37 [-]: GETTABLE  R5 R3 K10    ; R5 := R3[1.000000]
 38 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 39 [-]: MOVE      R7 R5        ; R7 := R5
 40 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 41 [-]: TEST      R6 1         ; if R6 then PC := 60
 42 [-]: JMP       60           ; PC := 60
 43 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 44 [-]: SELF      R7 R5 K11    ; R8 := R5; R7 := R5[0x0b4bcfb6]
 45 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 46 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 47 [-]: TEST      R6 1         ; if R6 then PC := 60
 48 [-]: JMP       60           ; PC := 60
 49 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0x0b4bcfb6]
 50 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 51 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0xcbeafe74]
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: TEST      R6 1         ; if R6 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0x0b4bcfb6]
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x68f07b6a]
 58 [-]: MOVE      R8 R4        ; R8 := R4
 59 [-]: CALL      R6 3 1       ; R6(R7,R8)
 60 [-]: SELF      R6 R2 K14    ; R7 := R2; R6 := R2[0x8eb2112d]
 61 [-]: LOADK     R8 K15       ; R8 := "Activate"
 62 [-]: CALL      R6 3 1       ; R6(R7,R8)
 63 [-]: GETGLOBAL R6 K16       ; R6 := _T
 64 [-]: SETTABLE  R6 K17 R0    ; R6["gActiveCameraSpot"] := R0
 65 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1981
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1985
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xded7d5cd]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: LEN       R2 R1        ; R2 := # R1
 16 [-]: EQ        0 R2 K3      ; if R2 ~= 0.000000 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x3d106989
 19 [-]: LOADK     R3 K5        ; R3 := "_ClearCurrentCameraSpot - no local player"
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: EQ        0 R0 K6      ; if R0 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R0 K7        ; R0 := 0.010000
 25 [-]: GETTABLE  R2 R1 K8     ; R2 := R1[1.000000]
 26 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 56
 30 [-]: JMP       56           ; PC := 56
 31 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 32 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0x0b4bcfb6]
 33 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 34 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 35 [-]: TEST      R3 1         ; if R3 then PC := 56
 36 [-]: JMP       56           ; PC := 56
 37 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0b4bcfb6]
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xcbeafe74]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: TEST      R3 1         ; if R3 then PC := 56
 42 [-]: JMP       56           ; PC := 56
 43 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0b4bcfb6]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x68f07b6a]
 46 [-]: LOADK     R5 1         ; R5 := 1.000000
 47 [-]: CALL      R3 3 1       ; R3(R4,R5)
 48 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x0b4bcfb6]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x14c7f7dd]
 51 [-]: LOADNIL   R5 R5        ; R5 := nil
 52 [-]: GETGLOBAL R6 K13       ; R6 := 0x03f57322
 53 [-]: MOVE      R7 R0        ; R7 := R0
 54 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 55 [-]: CALL      R3 0 1       ; R3(R4,...)
 56 [-]: GETGLOBAL R3 K14       ; R3 := _T
 57 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 58 [-]: EQ        1 R3 K16     ; if R3 == "LoginNoSuit" then PC := 80
 59 [-]: JMP       80           ; PC := 80
 60 [-]: GETGLOBAL R3 K14       ; R3 := _T
 61 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 62 [-]: EQ        1 R3 K17     ; if R3 == "Login" then PC := 80
 63 [-]: JMP       80           ; PC := 80
 64 [-]: GETGLOBAL R3 K14       ; R3 := _T
 65 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 66 [-]: EQ        1 R3 K18     ; if R3 == "OldLogin" then PC := 80
 67 [-]: JMP       80           ; PC := 80
 68 [-]: GETGLOBAL R3 K14       ; R3 := _T
 69 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 70 [-]: EQ        1 R3 K19     ; if R3 == "Syndicate" then PC := 80
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETGLOBAL R3 K14       ; R3 := _T
 73 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 74 [-]: EQ        1 R3 K20     ; if R3 == "LoginCamp" then PC := 80
 75 [-]: JMP       80           ; PC := 80
 76 [-]: GETGLOBAL R3 K14       ; R3 := _T
 77 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["gActiveCameraSpot"]
 78 [-]: EQ        0 R3 K21     ; if R3 ~= "LoginCampPreview" then PC := 84
 79 [-]: JMP       84           ; PC := 84
 80 [-]: GETGLOBAL R3 K22       ; R3 := 0xbe190284
 81 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0xc02f2cb8]
 82 [-]: LOADBOOL  R5 0 0       ; R5 := false
 83 [-]: CALL      R3 3 1       ; R3(R4,R5)
 84 [-]: GETGLOBAL R3 K14       ; R3 := _T
 85 [-]: SETTABLE  R3 K15 K6    ; R3["gActiveCameraSpot"] := nil
 86 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 2014
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 2018
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: SETTABLE  R4 K0 K1     ; R4["Timer"] := 0.000000
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: SETTABLE  R4 K2 R5     ; R4["InTime"] := R5
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: SETTABLE  R4 K4 R5     ; R4["OutTime"] := R5
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
 15 [-]: MOVE      R6 R2        ; R6 := R2
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: SETTABLE  R4 K5 R5     ; R4["FinalVal"] := R5
 18 [-]: GETUPVAL  R4 U0        ; R4 := U0
 19 [-]: SETTABLE  R4 K6 R3     ; R4["FullCallback"] := R3
 20 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 2026
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
  6 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2030
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: LOADK     R2 K1        ; R2 := "Background.lua - _DoLogoff()"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K3        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["BackgroundMovie"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
 11 [-]: LOADK     R2 K5        ; R2 := "Queued"
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: LOADBOOL  R1 1 0       ; R1 := true
 14 [-]: SETGLOBAL R1 K6        ; mQueuedLogoff := R1
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R1 K7        ; R1 := 0x34291f5c
 17 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0x056bfe8b]
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: TEST      R1 1         ; if R1 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R1 K9        ; R1 := 0x76ea806b
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x524772b5]
 23 [-]: LOADK     R3 0         ; R3 := 0.000000
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: GETGLOBAL R1 K3        ; R1 := _T
 26 [-]: SETTABLE  R1 K11 K12   ; R1["PreviousLoggedInAccountId"] := nil
 27 [-]: GETGLOBAL R1 K9        ; R1 := 0x76ea806b
 28 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x3f3ae64c]
 29 [-]: LOADK     R3 0         ; R3 := 0.000000
 30 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 31 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 83
 35 [-]: JMP       83           ; PC := 83
 36 [-]: GETGLOBAL R2 K3        ; R2 := _T
 37 [-]: SELF      R3 R1 K14    ; R4 := R1; R3 := R1[0xcac617c9]
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: SETTABLE  R2 K11 R3    ; R2["PreviousLoggedInAccountId"] := R3
 40 [-]: SELF      R2 R1 K15    ; R3 := R1; R2 := R1[0x80563238]
 41 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 42 [-]: SELF      R3 R1 K16    ; R4 := R1; R3 := R1[0x40e9c32b]
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 45 [-]: MOVE      R5 R2        ; R5 := R2
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 67
 48 [-]: JMP       67           ; PC := 67
 49 [-]: GETGLOBAL R4 K17       ; R4 := 0x0032441c
 50 [-]: SELF      R5 R3 K19    ; R6 := R3; R5 := R3[0xd25ad6f2]
 51 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 52 [-]: SETTABLE  R4 K18 R5    ; R4["PreviousLoggedInStreamerMode"] := R5
 53 [-]: TEST      R0 1         ; if R0 then PC := 67
 54 [-]: JMP       67           ; PC := 67
 55 [-]: SELF      R4 R2 K20    ; R5 := R2; R4 := R2[0x8e4b0c74]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: SELF      R5 R2 K21    ; R6 := R2; R5 := R2[0x68838443]
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: GETGLOBAL R5 K22       ; R5 := 0xa94df70b
 62 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0x2b0141b8]
 63 [-]: GETGLOBAL R7 K24       ; R7 := 0x7ed0a956
 64 [-]: LOADK     R8 K25       ; R8 := "/Lotus/Levels/Proc/PlayerShip"
 65 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 66 [-]: CALL      R5 0 1       ; R5(R6,...)
 67 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 68 [-]: MOVE      R6 R2        ; R6 := R2
 69 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 70 [-]: TEST      R5 1         ; if R5 then PC := 83
 71 [-]: JMP       83           ; PC := 83
 72 [-]: GETUPVAL  R5 U0        ; R5 := U0
 73 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mWorldStateCallbackRegistered"]
 74 [-]: TEST      R5 0         ; if not R5 then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: SELF      R5 R2 K27    ; R6 := R2; R5 := R2[0xa552fd85]
 77 [-]: LOADK     R7 K28       ; R7 := "OnSyncWorldState"
 78 [-]: GETUPVAL  R8 U0        ; R8 := U0
 79 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["WORLD_STATE_CALLBACK_IDENTIFIER"]
 80 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 81 [-]: SELF      R5 R2 K30    ; R6 := R2; R5 := R2[0x75fa6bbb]
 82 [-]: CALL      R5 2 1       ; R5(R6)
 83 [-]: GETUPVAL  R5 U0        ; R5 := U0
 84 [-]: SETTABLE  R5 K26 K31   ; R5["mWorldStateCallbackRegistered"] := false
 85 [-]: GETGLOBAL R5 K3        ; R5 := _T
 86 [-]: GETTABLE  R5 R5 K32    ; R5 := R5[0x8e6a7b4e]
 87 [-]: LOADK     R6 K33       ; R6 := "MainMenu"
 88 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 89 [-]: TEST      R5 1         ; if R5 then PC := 134
 90 [-]: JMP       134          ; PC := 134
 91 [-]: GETGLOBAL R6 K0        ; R6 := 0x3d106989
 92 [-]: LOADK     R7 K34       ; R7 := "Main menu not open"
 93 [-]: CALL      R6 2 1       ; R6(R7)
 94 [-]: GETGLOBAL R6 K35       ; R6 := screenStack
 95 [-]: LEN       R6 R6        ; R6 := # R6
 96 [-]: LOADK     R7 1         ; R7 := 1.000000
 97 [-]: LOADK     R8 -1        ; R8 := -1.000000
 98 [-]: FORPREP   R6 123       ; R6 -= R8; PC := 123
 99 [-]: GETGLOBAL R10 K2       ; R10 := 0x7b998233
100 [-]: GETGLOBAL R11 K36      ; R11 := movies
101 [-]: GETGLOBAL R12 K35      ; R12 := screenStack
102 [-]: GETTABLE  R12 R12 R9   ; R12 := R12[R9]
103 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
104 [-]: CALL      R10 2 2      ; R10 := R10(R11)
105 [-]: TEST      R10 1        ; if R10 then PC := 123
106 [-]: JMP       123          ; PC := 123
107 [-]: GETGLOBAL R10 K37      ; R10 := 0x9ba7909f
108 [-]: SELF      R10 R10 K38  ; R11 := R10; R10 := R10[0xbcfb64ab]
109 [-]: GETGLOBAL R12 K36      ; R12 := movies
110 [-]: GETGLOBAL R13 K35      ; R13 := screenStack
111 [-]: GETTABLE  R13 R13 R9   ; R13 := R13[R9]
112 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
113 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
114 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
115 [-]: MOVE      R12 R10      ; R12 := R10
116 [-]: CALL      R11 2 2      ; R11 := R11(R12)
117 [-]: TEST      R11 1        ; if R11 then PC := 123
118 [-]: JMP       123          ; PC := 123
119 [-]: SELF      R11 R10 K39  ; R12 := R10; R11 := R10[0xe4162eed]
120 [-]: LOADK     R13 K40      ; R13 := "TransitionOut"
121 [-]: LOADK     R14 K41      ; R14 := ""
122 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
123 [-]: FORLOOP   R6 99        ; R6 += R8; if R6 <= R7 then begin PC := 99; R9 := R6 end
124 [-]: GETGLOBAL R11 K9       ; R11 := 0x76ea806b
125 [-]: SELF      R11 R11 K42  ; R12 := R11; R11 := R11[0x63e78018]
126 [-]: CALL      R11 2 1      ; R11(R12)
127 [-]: TEST      R0 0         ; if not R0 then PC := 192
128 [-]: JMP       192          ; PC := 192
129 [-]: GETGLOBAL R11 K9       ; R11 := 0x76ea806b
130 [-]: SELF      R11 R11 K43  ; R12 := R11; R11 := R11[0x44ef46af]
131 [-]: LOADBOOL  R13 0 0      ; R13 := false
132 [-]: CALL      R11 3 1      ; R11(R12,R13)
133 [-]: JMP       192          ; PC := 192
134 [-]: GETGLOBAL R11 K35      ; R11 := screenStack
135 [-]: LEN       R11 R11      ; R11 := # R11
136 [-]: LOADK     R12 1        ; R12 := 1.000000
137 [-]: LOADK     R13 -1       ; R13 := -1.000000
138 [-]: FORPREP   R11 191      ; R11 -= R13; PC := 191
139 [-]: GETGLOBAL R15 K37      ; R15 := 0x9ba7909f
140 [-]: SELF      R15 R15 K38  ; R16 := R15; R15 := R15[0xbcfb64ab]
141 [-]: GETGLOBAL R17 K36      ; R17 := movies
142 [-]: GETGLOBAL R18 K35      ; R18 := screenStack
143 [-]: GETTABLE  R18 R18 R14  ; R18 := R18[R14]
144 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
145 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
146 [-]: EQ        1 R15 K12    ; if R15 == nil then PC := 191
147 [-]: JMP       191          ; PC := 191
148 [-]: GETGLOBAL R16 K35      ; R16 := screenStack
149 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
150 [-]: EQ        1 R16 K44    ; if R16 == "Default" then PC := 156
151 [-]: JMP       156          ; PC := 156
152 [-]: GETGLOBAL R16 K35      ; R16 := screenStack
153 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
154 [-]: EQ        0 R16 K33    ; if R16 ~= "MainMenu" then PC := 170
155 [-]: JMP       170          ; PC := 170
156 [-]: GETGLOBAL R16 K9       ; R16 := 0x76ea806b
157 [-]: SELF      R16 R16 K42  ; R17 := R16; R16 := R16[0x63e78018]
158 [-]: CALL      R16 2 1      ; R16(R17)
159 [-]: TEST      R0 0         ; if not R0 then PC := 165
160 [-]: JMP       165          ; PC := 165
161 [-]: GETGLOBAL R16 K9       ; R16 := 0x76ea806b
162 [-]: SELF      R16 R16 K43  ; R17 := R16; R16 := R16[0x44ef46af]
163 [-]: LOADBOOL  R18 0 0      ; R18 := false
164 [-]: CALL      R16 3 1      ; R16(R17,R18)
165 [-]: SELF      R16 R15 K39  ; R17 := R15; R16 := R15[0xe4162eed]
166 [-]: LOADK     R18 K45      ; R18 := "LogOut"
167 [-]: LOADK     R19 K41      ; R19 := ""
168 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
169 [-]: JMP       191          ; PC := 191
170 [-]: GETGLOBAL R16 K7       ; R16 := 0x34291f5c
171 [-]: GETTABLE  R16 R16 K46  ; R16 := R16[0xff935e74]
172 [-]: CALL      R16 1 2      ; R16 := R16()
173 [-]: TEST      R16 0        ; if not R16 then PC := 184
174 [-]: JMP       184          ; PC := 184
175 [-]: GETGLOBAL R16 K35      ; R16 := screenStack
176 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
177 [-]: EQ        0 R16 K47    ; if R16 ~= "Menu" then PC := 184
178 [-]: JMP       184          ; PC := 184
179 [-]: SELF      R16 R15 K39  ; R17 := R15; R16 := R15[0xe4162eed]
180 [-]: LOADK     R18 K48      ; R18 := "HideForBigPic"
181 [-]: LOADK     R19 K41      ; R19 := ""
182 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
183 [-]: JMP       191          ; PC := 191
184 [-]: GETGLOBAL R16 K49      ; R16 := 0xae91e43b
185 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 191
186 [-]: JMP       191          ; PC := 191
187 [-]: SELF      R16 R15 K39  ; R17 := R15; R16 := R15[0xe4162eed]
188 [-]: LOADK     R18 K40      ; R18 := "TransitionOut"
189 [-]: LOADK     R19 K41      ; R19 := ""
190 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
191 [-]: FORLOOP   R11 139      ; R11 += R13; if R11 <= R12 then begin PC := 139; R14 := R11 end
192 [-]: GETGLOBAL R16 K37      ; R16 := 0x9ba7909f
193 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0xbcfb64ab]
194 [-]: GETGLOBAL R18 K50      ; R18 := 0x3255839e
195 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
196 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
197 [-]: MOVE      R18 R16      ; R18 := R16
198 [-]: CALL      R17 2 2      ; R17 := R17(R18)
199 [-]: TEST      R17 1        ; if R17 then PC := 203
200 [-]: JMP       203          ; PC := 203
201 [-]: SELF      R17 R16 K51  ; R18 := R16; R17 := R16[0x32302b4a]
202 [-]: CALL      R17 2 1      ; R17(R18)
203 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
204 [-]: GETGLOBAL R18 K3       ; R18 := _T
205 [-]: GETTABLE  R18 R18 K52  ; R18 := R18["SquadOverlay"]
206 [-]: CALL      R17 2 2      ; R17 := R17(R18)
207 [-]: TEST      R17 1        ; if R17 then PC := 213
208 [-]: JMP       213          ; PC := 213
209 [-]: GETGLOBAL R17 K3       ; R17 := _T
210 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["SquadOverlay"]
211 [-]: SELF      R17 R17 K51  ; R18 := R17; R17 := R17[0x32302b4a]
212 [-]: CALL      R17 2 1      ; R17(R18)
213 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
214 [-]: GETGLOBAL R18 K53      ; R18 := mChildMovie
215 [-]: CALL      R17 2 2      ; R17 := R17(R18)
216 [-]: TEST      R17 1        ; if R17 then PC := 221
217 [-]: JMP       221          ; PC := 221
218 [-]: GETGLOBAL R17 K53      ; R17 := mChildMovie
219 [-]: SELF      R17 R17 K51  ; R18 := R17; R17 := R17[0x32302b4a]
220 [-]: CALL      R17 2 1      ; R17(R18)
221 [-]: LOADNIL   R17 R17      ; R17 := nil
222 [-]: SETGLOBAL R17 K53      ; mChildMovie := R17
223 [-]: LOADBOOL  R17 0 0      ; R17 := false
224 [-]: SETGLOBAL R17 K6       ; mQueuedLogoff := R17
225 [-]: LOADK     R17 K44      ; R17 := "Default"
226 [-]: SETGLOBAL R17 K54      ; queuedMovie := R17
227 [-]: NEWTABLE  R17 1 0      ; R17 := {}
228 [-]: LOADK     R18 K44      ; R18 := "Default"
229 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
230 [-]: SETGLOBAL R17 K35      ; screenStack := R17
231 [-]: NEWTABLE  R17 1 0      ; R17 := {}
232 [-]: LOADK     R18 K55      ; R18 := "loadoutInProgress"
233 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
234 [-]: GETGLOBAL R18 K56      ; R18 := 0xc8802016
235 [-]: MOVE      R19 R17      ; R19 := R17
236 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
237 [-]: JMP       240          ; PC := 240
238 [-]: GETGLOBAL R23 K3       ; R23 := _T
239 [-]: SETTABLE  R23 R22 K12  ; R23[R22] := nil
240 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 238; R20 := R21 end
241 [-]: JMP       238          ; PC := 238
242 [-]: GETGLOBAL R23 K7       ; R23 := 0x34291f5c
243 [-]: GETTABLE  R23 R23 K57  ; R23 := R23[0x9ad21ae9]
244 [-]: CALL      R23 1 2      ; R23 := R23()
245 [-]: TEST      R23 0        ; if not R23 then PC := 257
246 [-]: JMP       257          ; PC := 257
247 [-]: GETGLOBAL R23 K58      ; R23 := 0x83f4e77c
248 [-]: SELF      R23 R23 K59  ; R24 := R23; R23 := R23[0x7d63f19c]
249 [-]: CALL      R23 2 2      ; R23 := R23(R24)
250 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
251 [-]: MOVE      R25 R23      ; R25 := R23
252 [-]: CALL      R24 2 2      ; R24 := R24(R25)
253 [-]: TEST      R24 1        ; if R24 then PC := 257
254 [-]: JMP       257          ; PC := 257
255 [-]: SELF      R24 R23 K60  ; R25 := R23; R24 := R23[0x68a5045a]
256 [-]: CALL      R24 2 1      ; R24(R25)
257 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
258 [-]: GETGLOBAL R25 K61      ; R25 := 0xbe190284
259 [-]: CALL      R24 2 2      ; R24 := R24(R25)
260 [-]: TEST      R24 1        ; if R24 then PC := 266
261 [-]: JMP       266          ; PC := 266
262 [-]: GETGLOBAL R24 K61      ; R24 := 0xbe190284
263 [-]: SELF      R24 R24 K62  ; R25 := R24; R24 := R24[0x39c667a9]
264 [-]: LOADBOOL  R26 1 0      ; R26 := true
265 [-]: CALL      R24 3 1      ; R24(R25,R26)
266 [-]: GETGLOBAL R24 K7       ; R24 := 0x34291f5c
267 [-]: GETTABLE  R24 R24 K63  ; R24 := R24[0x8ee24660]
268 [-]: LOADBOOL  R25 1 0      ; R25 := true
269 [-]: CALL      R24 2 1      ; R24(R25)
270 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2146
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x03f57322
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: MOVE      R0 R2        ; R0 := R2
  5 [-]: EQ        1 R0 K1      ; if R0 == 1.000000 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: EQ        0 R0 K2      ; if R0 ~= 2.000000 then PC := 36
  8 [-]: JMP       36           ; PC := 36
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K4        ; R3 := mBlockingTaskPopup
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 50
 13 [-]: JMP       50           ; PC := 50
 14 [-]: GETGLOBAL R2 K5        ; R2 := 0x34291f5c
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0xe27b35bb]
 16 [-]: CALL      R2 1 2       ; R2 := R2()
 17 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: SETTABLE  R2 K8 K9     ; R2["locString"] := "/Lotus/Language/Menu/NavBar_QuickMatchPleaseWait"
 20 [-]: JMP       22           ; PC := 22
 21 [-]: SETTABLE  R2 K8 R1     ; R2["locString"] := R1
 22 [-]: GETGLOBAL R3 K10       ; R3 := _T
 23 [-]: EQ        1 R0 K2      ; if R0 == 2.000000 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 26
 26 [-]: LOADBOOL  R4 1 0       ; R4 := true
 27 [-]: SETTABLE  R3 K11 R4    ; R3["LiteModeBlocking"] := R4
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0xe99b84e7]
 30 [-]: MOVE      R4 R2        ; R4 := R2
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: SETGLOBAL R3 K4        ; mBlockingTaskPopup := R3
 33 [-]: GETGLOBAL R3 K10       ; R3 := _T
 34 [-]: SETTABLE  R3 K11 K7    ; R3["LiteModeBlocking"] := nil
 35 [-]: JMP       50           ; PC := 50
 36 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 37 [-]: GETGLOBAL R4 K4        ; R4 := mBlockingTaskPopup
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: TEST      R3 1         ; if R3 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETGLOBAL R3 K4        ; R3 := mBlockingTaskPopup
 42 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x32302b4a]
 43 [-]: CALL      R3 2 1       ; R3(R4)
 44 [-]: LOADNIL   R3 R3        ; R3 := nil
 45 [-]: SETGLOBAL R3 K4        ; mBlockingTaskPopup := R3
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETGLOBAL R3 K14       ; R3 := 0x3d106989
 48 [-]: LOADK     R4 K15       ; R4 := "Tried to close non-existent blocking message"
 49 [-]: CALL      R3 2 1       ; R3(R4)
 50 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2170
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2174
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2178
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mAbortingQuickMatch
  2 [-]: TEST      R0 1         ; if R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: LOADBOOL  R0 1 0       ; R0 := true
  5 [-]: SETGLOBAL R0 K1        ; mUnblockWhenAsyncDone := R0
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: LOADK     R1 1         ; R1 := 1.000000
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2185
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := screenStack
  2 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  5 [-]: EQ        1 R1 K1      ; if R1 == "Lobby" then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 10
 10 [-]: LOADBOOL  R1 1 0       ; R1 := true
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xaade900e]
 13 [-]: LOADK     R4 K5        ; R4 := "GlobalMessage"
 14 [-]: LOADK     R5 11        ; R5 := 11.000000
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x5f56eeab]
 21 [-]: LOADK     R4 K7        ; R4 := "GlobalMessage.Message"
 22 [-]: LOADK     R5 29        ; R5 := 29.000000
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 25 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2193
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2197
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := movies
  3 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 18
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x9ba7909f
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbcfb64ab]
  9 [-]: GETGLOBAL R3 K1        ; R3 := movies
 10 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: NOT       R2 R2        ; R2 := not R2
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x3d106989
 19 [-]: LOADK     R3 K5        ; R3 := "ERROR: Checking unrecognized screen ["
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0x64fb1586
 21 [-]: MOVE      R5 R0        ; R5 := R0
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: LOADK     R5 K7        ; R5 := "] Check your spelling."
 24 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: LOADBOOL  R2 0 0       ; R2 := false
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2207
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: RETURN    R3 3         ; return R3,R4
  9 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x104b2223]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R4 K2        ; R4 := 0x34291f5c
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[0x397b920f]
 18 [-]: GETTABLE  R5 R3 K4     ; R5 := R3["mExpiry"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: LT        0 K5 R4      ; if 0.000000 >= R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R1 1         ; R1 := 1.000000
 23 [-]: GETTABLE  R2 R3 K4     ; R2 := R3["mExpiry"]
 24 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 58
 25 [-]: JMP       58           ; PC := 58
 26 [-]: GETGLOBAL R4 K7        ; R4 := _T
 27 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["CachedFlashSales"]
 28 [-]: TEST      R4 0         ; if not R4 then PC := 58
 29 [-]: JMP       58           ; PC := 58
 30 [-]: GETGLOBAL R4 K9        ; R4 := 0xcfc01047
 31 [-]: GETGLOBAL R5 K7        ; R5 := _T
 32 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["CachedFlashSales"]
 33 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 34 [-]: JMP       56           ; PC := 56
 35 [-]: GETTABLE  R9 R8 K10    ; R9 := R8["mDiscount"]
 36 [-]: EQ        1 R9 K5      ; if R9 == 0.000000 then PC := 56
 37 [-]: JMP       56           ; PC := 56
 38 [-]: GETGLOBAL R9 K2        ; R9 := 0x34291f5c
 39 [-]: GETTABLE  R9 R9 K3     ; R9 := R9[0x397b920f]
 40 [-]: GETTABLE  R10 R8 K11   ; R10 := R8["mStartDate"]
 41 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 42 [-]: LT        0 R9 K5      ; if R9 >= 0.000000 then PC := 56
 43 [-]: JMP       56           ; PC := 56
 44 [-]: GETGLOBAL R9 K2        ; R9 := 0x34291f5c
 45 [-]: GETTABLE  R9 R9 K3     ; R9 := R9[0x397b920f]
 46 [-]: GETTABLE  R10 R8 K12   ; R10 := R8["mEndDate"]
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: LT        0 K5 R9      ; if 0.000000 >= R9 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R9 R8 K13    ; R9 := R8["mShowInMarket"]
 51 [-]: TEST      R9 0         ; if not R9 then PC := 56
 52 [-]: JMP       56           ; PC := 56
 53 [-]: LOADK     R1 2         ; R1 := 2.000000
 54 [-]: GETTABLE  R2 R8 K12    ; R2 := R8["mEndDate"]
 55 [-]: JMP       58           ; PC := 58
 56 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 35; R6 := R7 end
 57 [-]: JMP       35           ; PC := 35
 58 [-]: MOVE      R9 R1        ; R9 := R1
 59 [-]: MOVE      R10 R2       ; R10 := R2
 60 [-]: RETURN    R9 3         ; return R9,R10
 61 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2240
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := queuedMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 31
  5 [-]: JMP       31           ; PC := 31
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["missionStatsPending"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 31
  9 [-]: JMP       31           ; PC := 31
 10 [-]: GETGLOBAL R0 K2        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["ActiveQuestLoaded"]
 12 [-]: TEST      R0 0         ; if not R0 then PC := 31
 13 [-]: JMP       31           ; PC := 31
 14 [-]: GETGLOBAL R0 K2        ; R0 := _T
 15 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["MainMenuStateReady"]
 16 [-]: TEST      R0 1         ; if R0 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R0 K6        ; R0 := mCurrentMode
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 21 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: GETGLOBAL R0 K2        ; R0 := _T
 24 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["gQueueMailbox"]
 25 [-]: TEST      R0 1         ; if R0 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETGLOBAL R0 K2        ; R0 := _T
 28 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["OpeningMailbox"]
 29 [-]: TEST      R0 0         ; if not R0 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADBOOL  R0 0 0       ; R0 := false
 32 [-]: RETURN    R0 2         ; return R0
 33 [-]: LOADK     R0 1         ; R0 := 1.000000
 34 [-]: GETUPVAL  R1 U1        ; R1 := U1
 35 [-]: LEN       R1 R1        ; R1 := # R1
 36 [-]: LOADK     R2 1         ; R2 := 1.000000
 37 [-]: FORPREP   R0 47        ; R0 -= R2; PC := 47
 38 [-]: GETGLOBAL R4 K10       ; R4 := 0x9ba7909f
 39 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xbcfb64ab]
 40 [-]: GETUPVAL  R6 U1        ; R6 := U1
 41 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 42 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 43 [-]: EQ        1 R4 K12     ; if R4 == nil then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: LOADBOOL  R5 0 0       ; R5 := false
 46 [-]: RETURN    R5 2         ; return R5
 47 [-]: FORLOOP   R0 38        ; R0 += R2; if R0 <= R1 then begin PC := 38; R3 := R0 end
 48 [-]: LOADBOOL  R5 1 0       ; R5 := true
 49 [-]: RETURN    R5 2         ; return R5
 50 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2260
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x9ba7909f
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K1        ; R1 := 0x9ba7909f
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbcfb64ab]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UIMovie_EndOfQuestMovie"]
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADBOOL  R2 0 0       ; R2 := false
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: TEST      R0 0         ; if not R0 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x9ba7909f
 20 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xbcfb64ab]
 21 [-]: GETGLOBAL R4 K6        ; R4 := 0x39803e25
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADBOOL  R3 0 0       ; R3 := false
 26 [-]: RETURN    R3 2         ; return R3
 27 [-]: GETGLOBAL R3 K1        ; R3 := 0x9ba7909f
 28 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xbcfb64ab]
 29 [-]: GETGLOBAL R5 K3        ; R5 := 0x0032441c
 30 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["UIMovie_SolarMap"]
 31 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 32 [-]: MOVE      R1 R3        ; R1 := R3
 33 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: LOADBOOL  R3 0 0       ; R3 := false
 36 [-]: RETURN    R3 2         ; return R3
 37 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 38 [-]: GETGLOBAL R4 K8        ; R4 := queuedMovie
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 0         ; if not R3 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R3 K9        ; R3 := _T
 43 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["missionStatsPending"]
 44 [-]: TEST      R3 1         ; if R3 then PC := 55
 45 [-]: JMP       55           ; PC := 55
 46 [-]: GETGLOBAL R3 K11       ; R3 := mCurrentMode
 47 [-]: GETUPVAL  R4 U0        ; R4 := U0
 48 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["UI_MODE_IN_SPACE_SHIP"]
 49 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETGLOBAL R3 K9        ; R3 := _T
 52 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["MainMenuStateReady"]
 53 [-]: TEST      R3 1         ; if R3 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: LOADBOOL  R3 0 0       ; R3 := false
 56 [-]: RETURN    R3 2         ; return R3
 57 [-]: GETGLOBAL R3 K9        ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["gQueueMailbox"]
 59 [-]: TEST      R3 1         ; if R3 then PC := 69
 60 [-]: JMP       69           ; PC := 69
 61 [-]: GETGLOBAL R3 K9        ; R3 := _T
 62 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["OpeningMailbox"]
 63 [-]: TEST      R3 1         ; if R3 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETGLOBAL R3 K9        ; R3 := _T
 66 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["QuestPickerOpen"]
 67 [-]: TEST      R3 0         ; if not R3 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADBOOL  R3 0 0       ; R3 := false
 70 [-]: RETURN    R3 2         ; return R3
 71 [-]: LOADK     R3 1         ; R3 := 1.000000
 72 [-]: GETUPVAL  R4 U1        ; R4 := U1
 73 [-]: LEN       R4 R4        ; R4 := # R4
 74 [-]: LOADK     R5 1         ; R5 := 1.000000
 75 [-]: FORPREP   R3 86        ; R3 -= R5; PC := 86
 76 [-]: GETGLOBAL R7 K1        ; R7 := 0x9ba7909f
 77 [-]: SELF      R7 R7 K2     ; R8 := R7; R7 := R7[0xbcfb64ab]
 78 [-]: GETUPVAL  R9 U1        ; R9 := U1
 79 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 80 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 81 [-]: MOVE      R1 R7        ; R1 := R7
 82 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: LOADBOOL  R7 0 0       ; R7 := false
 85 [-]: RETURN    R7 2         ; return R7
 86 [-]: FORLOOP   R3 76        ; R3 += R5; if R3 <= R4 then begin PC := 76; R6 := R3 end
 87 [-]: LOADBOOL  R7 1 0       ; R7 := true
 88 [-]: RETURN    R7 2         ; return R7
 89 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2300
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETUPVAL  R0 U0        ; U82 := R0
  2 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2304
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x7c37aeec]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2308
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 5
  5 [-]: LOADBOOL  R2 1 0       ; R2 := true
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2312
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R0 5 0       ; R0 := {}
  2 [-]: LOADK     R1 1         ; R1 := 1.000000
  3 [-]: LOADK     R2 2         ; R2 := 2.000000
  4 [-]: LOADK     R3 3         ; R3 := 3.000000
  5 [-]: LOADK     R4 4         ; R4 := 4.000000
  6 [-]: LOADK     R5 7         ; R5 := 7.000000
  7 [-]: SETLIST   R0 5 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 5
  8 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  9 [-]: LOADK     R2 1         ; R2 := 1.000000
 10 [-]: LEN       R3 R0        ; R3 := # R0
 11 [-]: LOADK     R4 1         ; R4 := 1.000000
 12 [-]: FORPREP   R2 21        ; R2 -= R4; PC := 21
 13 [-]: GETUPVAL  R6 U0        ; R6 := U0
 14 [-]: GETTABLE  R6 R6 K1     ; R6 := R6[0x09cec339]
 15 [-]: GETTABLE  R7 R0 R5     ; R7 := R0[R5]
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: TEST      R6 0         ; if not R6 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETTABLE  R6 R0 R5     ; R6 := R0[R5]
 20 [-]: SETTABLE  R1 R6 K2     ; R1[R6] := true
 21 [-]: FORLOOP   R2 13        ; R2 += R4; if R2 <= R3 then begin PC := 13; R5 := R2 end
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2325
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  61

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R3 K1        ; R3 := _T
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["Notifications"]
  9 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: LOADNIL   R4 R9        ; R4 := R5 := R6 := R7 := R8 := R9 := nil
 13 [-]: GETGLOBAL R10 K1       ; R10 := _T
 14 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["CachedGlobalUpgrades"]
 15 [-]: EQ        1 R10 K3     ; if R10 == nil then PC := 78
 16 [-]: JMP       78           ; PC := 78
 17 [-]: GETGLOBAL R10 K5       ; R10 := 0xcfc01047
 18 [-]: GETGLOBAL R11 K1       ; R11 := _T
 19 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["CachedGlobalUpgrades"]
 20 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 21 [-]: JMP       76           ; PC := 76
 22 [-]: GETGLOBAL R15 K6       ; R15 := 0x34291f5c
 23 [-]: GETTABLE  R15 R15 K7   ; R15 := R15[0x397b920f]
 24 [-]: GETTABLE  R16 R14 K8   ; R16 := R14["mActivation"]
 25 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 26 [-]: LE        0 R15 K9     ; if R15 > 0.000000 then PC := 76
 27 [-]: JMP       76           ; PC := 76
 28 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
 29 [-]: GETTABLE  R16 R14 K10  ; R16 := R14["mUpgrade"]
 30 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 31 [-]: TEST      R15 1        ; if R15 then PC := 76
 32 [-]: JMP       76           ; PC := 76
 33 [-]: GETTABLE  R15 R14 K11  ; R15 := R14["mNodes"]
 34 [-]: LEN       R15 R15      ; R15 := # R15
 35 [-]: EQ        0 R15 K9     ; if R15 ~= 0.000000 then PC := 76
 36 [-]: JMP       76           ; PC := 76
 37 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 38 [-]: SELF      R15 R15 K12  ; R16 := R15; R15 := R15[0x9f236ac2]
 39 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 40 [-]: EQ        0 R15 K14    ; if R15 ~= 172.000000 then PC := 48
 41 [-]: JMP       48           ; PC := 48
 42 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 43 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15[0x0fbc7293]
 44 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 45 [-]: MOVE      R8 R15       ; R8 := R15
 46 [-]: GETTABLE  R9 R14 K16   ; R9 := R14["mExpiryDate"]
 47 [-]: JMP       69           ; PC := 69
 48 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 49 [-]: SELF      R15 R15 K12  ; R16 := R15; R15 := R15[0x9f236ac2]
 50 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 51 [-]: EQ        0 R15 K17    ; if R15 ~= 170.000000 then PC := 59
 52 [-]: JMP       59           ; PC := 59
 53 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 54 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15[0x0fbc7293]
 55 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 56 [-]: MOVE      R4 R15       ; R4 := R15
 57 [-]: GETTABLE  R5 R14 K16   ; R5 := R14["mExpiryDate"]
 58 [-]: JMP       69           ; PC := 69
 59 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 60 [-]: SELF      R15 R15 K12  ; R16 := R15; R15 := R15[0x9f236ac2]
 61 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 62 [-]: EQ        0 R15 K18    ; if R15 ~= 164.000000 then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["mUpgrade"]
 65 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15[0x0fbc7293]
 66 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 67 [-]: MOVE      R6 R15       ; R6 := R15
 68 [-]: GETTABLE  R7 R14 K16   ; R7 := R14["mExpiryDate"]
 69 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: EQ        1 R8 K3      ; if R8 == nil then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: JMP       78           ; PC := 78
 76 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 22; R12 := R13 end
 77 [-]: JMP       22           ; PC := 22
 78 [-]: LOADNIL   R15 R15      ; R15 := nil
 79 [-]: LOADK     R16 0        ; R16 := 0.000000
 80 [-]: LOADNIL   R17 R17      ; R17 := nil
 81 [-]: LOADK     R18 0        ; R18 := 0.000000
 82 [-]: SELF      R19 R1 K19   ; R20 := R1; R19 := R1[0x62c81b76]
 83 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 84 [-]: SELF      R20 R19 K20  ; R21 := R19; R20 := R19[0xb61abfd2]
 85 [-]: LOADK     R22 0        ; R22 := 0.000000
 86 [-]: LOADK     R23 0        ; R23 := 0.000000
 87 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
 88 [-]: GETTABLE  R21 R20 K22  ; R21 := R20["mUmbraDate"]
 89 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21[0x56c01834]
 90 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 91 [-]: TEST      R21 0        ; if not R21 then PC := 97
 92 [-]: JMP       97           ; PC := 97
 93 [-]: LOADK     R16 1        ; R16 := 1.000000
 94 [-]: SELF      R21 R20 K24  ; R22 := R20; R21 := R20[0x54c2ec45]
 95 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 96 [-]: MOVE      R15 R21      ; R15 := R21
 97 [-]: GETTABLE  R21 R20 K25  ; R21 := R20["mUpgradesExpiry"]
 98 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21[0x56c01834]
 99 [-]: CALL      R21 2 2      ; R21 := R21(R22)
100 [-]: TEST      R21 0        ; if not R21 then PC := 193
101 [-]: JMP       193          ; PC := 193
102 [-]: LOADK     R18 1        ; R18 := 1.000000
103 [-]: GETTABLE  R17 R20 K25  ; R17 := R20["mUpgradesExpiry"]
104 [-]: GETGLOBAL R21 K1       ; R21 := _T
105 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["CurrentInvigoration"]
106 [-]: EQ        0 R21 K3     ; if R21 ~= nil then PC := 110
107 [-]: JMP       110          ; PC := 110
108 [-]: GETGLOBAL R21 K1       ; R21 := _T
109 [-]: SETTABLE  R21 K26 K27  ; R21["CurrentInvigoration"] := ""
110 [-]: GETTABLE  R21 R20 K28  ; R21 := R20["mOffensiveUpgrade"]
111 [-]: EQ        1 R21 K3     ; if R21 == nil then PC := 121
112 [-]: JMP       121          ; PC := 121
113 [-]: GETUPVAL  R21 U0       ; R21 := U0
114 [-]: GETTABLE  R21 R21 K29  ; R21 := R21[0x609b196e]
115 [-]: GETUPVAL  R22 U1       ; R22 := U1
116 [-]: GETTABLE  R22 R22 K30  ; R22 := R22["Upgrades"]
117 [-]: GETTABLE  R23 R20 K28  ; R23 := R20["mOffensiveUpgrade"]
118 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
119 [-]: EQ        1 R21 K31    ; if R21 == -1.000000 then PC := 122
120 [-]: JMP       122          ; PC := 122
121 [-]: LOADBOOL  R21 0 1      ; R21 := false; PC := 122
122 [-]: LOADBOOL  R21 1 0      ; R21 := true
123 [-]: GETTABLE  R22 R20 K32  ; R22 := R20["mDefensiveUpgrade"]
124 [-]: EQ        1 R22 K3     ; if R22 == nil then PC := 134
125 [-]: JMP       134          ; PC := 134
126 [-]: GETUPVAL  R22 U0       ; R22 := U0
127 [-]: GETTABLE  R22 R22 K29  ; R22 := R22[0x609b196e]
128 [-]: GETUPVAL  R23 U1       ; R23 := U1
129 [-]: GETTABLE  R23 R23 K30  ; R23 := R23["Upgrades"]
130 [-]: GETTABLE  R24 R20 K32  ; R24 := R20["mDefensiveUpgrade"]
131 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
132 [-]: EQ        1 R22 K31    ; if R22 == -1.000000 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 135
135 [-]: LOADBOOL  R22 1 0      ; R22 := true
136 [-]: TEST      R21 1        ; if R21 then PC := 140
137 [-]: JMP       140          ; PC := 140
138 [-]: TEST      R22 0        ; if not R22 then PC := 193
139 [-]: JMP       193          ; PC := 193
140 [-]: GETGLOBAL R23 K1       ; R23 := _T
141 [-]: GETGLOBAL R24 K33      ; R24 := 0xae91e43b
142 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x42b04007]
143 [-]: LOADK     R26 K35      ; R26 := "/Lotus/Language/Menu/LoadoutSelection_Loading"
144 [-]: LOADBOOL  R27 0 0      ; R27 := false
145 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
146 [-]: SETTABLE  R23 K26 R24  ; R23["CurrentInvigoration"] := R24
147 [-]: GETUPVAL  R23 U1       ; R23 := U1
148 [-]: NEWTABLE  R24 0 0      ; R24 := {}
149 [-]: SETTABLE  R23 K30 R24  ; R23["Upgrades"] := R24
150 [-]: GETTABLE  R23 R20 K28  ; R23 := R20["mOffensiveUpgrade"]
151 [-]: EQ        1 R23 K3     ; if R23 == nil then PC := 159
152 [-]: JMP       159          ; PC := 159
153 [-]: GETGLOBAL R23 K36      ; R23 := 0x33bdd652
154 [-]: GETTABLE  R23 R23 K37  ; R23 := R23[0x23d5322f]
155 [-]: GETUPVAL  R24 U1       ; R24 := U1
156 [-]: GETTABLE  R24 R24 K30  ; R24 := R24["Upgrades"]
157 [-]: GETTABLE  R25 R20 K28  ; R25 := R20["mOffensiveUpgrade"]
158 [-]: CALL      R23 3 1      ; R23(R24,R25)
159 [-]: GETTABLE  R23 R20 K32  ; R23 := R20["mDefensiveUpgrade"]
160 [-]: EQ        1 R23 K3     ; if R23 == nil then PC := 168
161 [-]: JMP       168          ; PC := 168
162 [-]: GETGLOBAL R23 K36      ; R23 := 0x33bdd652
163 [-]: GETTABLE  R23 R23 K37  ; R23 := R23[0x23d5322f]
164 [-]: GETUPVAL  R24 U1       ; R24 := U1
165 [-]: GETTABLE  R24 R24 K30  ; R24 := R24["Upgrades"]
166 [-]: GETTABLE  R25 R20 K32  ; R25 := R20["mDefensiveUpgrade"]
167 [-]: CALL      R23 3 1      ; R23(R24,R25)
168 [-]: NEWTABLE  R23 0 0      ; R23 := {}
169 [-]: LOADK     R24 1        ; R24 := 1.000000
170 [-]: GETUPVAL  R25 U1       ; R25 := U1
171 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["Upgrades"]
172 [-]: LEN       R25 R25      ; R25 := # R25
173 [-]: LOADK     R26 1        ; R26 := 1.000000
174 [-]: FORPREP   R24 184      ; R24 -= R26; PC := 184
175 [-]: GETGLOBAL R28 K36      ; R28 := 0x33bdd652
176 [-]: GETTABLE  R28 R28 K37  ; R28 := R28[0x23d5322f]
177 [-]: MOVE      R29 R23      ; R29 := R23
178 [-]: GETUPVAL  R30 U1       ; R30 := U1
179 [-]: GETTABLE  R30 R30 K30  ; R30 := R30["Upgrades"]
180 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
181 [-]: SELF      R30 R30 K38  ; R31 := R30; R30 := R30[0xed4e0128]
182 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
183 [-]: CALL      R28 0 1      ; R28(R29,...)
184 [-]: FORLOOP   R24 175      ; R24 += R26; if R24 <= R25 then begin PC := 175; R27 := R24 end
185 [-]: GETUPVAL  R28 U1       ; R28 := U1
186 [-]: GETGLOBAL R29 K40      ; R29 := 0xbd496aa1
187 [-]: GETTABLE  R29 R29 K41  ; R29 := R29[0x42645da3]
188 [-]: MOVE      R30 R23      ; R30 := R23
189 [-]: CALL      R29 2 2      ; R29 := R29(R30)
190 [-]: SETTABLE  R28 K39 R29  ; R28["Loader"] := R29
191 [-]: GETUPVAL  R28 U1       ; R28 := U1
192 [-]: SETTABLE  R28 K42 K43  ; R28["IsLoading"] := true
193 [-]: LOADNIL   R28 R28      ; R28 := nil
194 [-]: TEST      R2 1         ; if R2 then PC := 210
195 [-]: JMP       210          ; PC := 210
196 [-]: GETGLOBAL R29 K1       ; R29 := _T
197 [-]: GETTABLE  R29 R29 K44  ; R29 := R29["Notifications_RefreshPolarities"]
198 [-]: EQ        0 R29 K3     ; if R29 ~= nil then PC := 210
199 [-]: JMP       210          ; PC := 210
200 [-]: GETGLOBAL R29 K0       ; R29 := 0x7b998233
201 [-]: GETGLOBAL R30 K45      ; R30 := 0x25d99d89
202 [-]: CALL      R29 2 2      ; R29 := R29(R30)
203 [-]: TEST      R29 1        ; if R29 then PC := 210
204 [-]: JMP       210          ; PC := 210
205 [-]: GETUPVAL  R29 U2       ; R29 := U2
206 [-]: CALL      R29 1 2      ; R29 := R29()
207 [-]: MOVE      R28 R29      ; R28 := R29
208 [-]: GETGLOBAL R29 K1       ; R29 := _T
209 [-]: SETTABLE  R29 K44 K46  ; R29["Notifications_RefreshPolarities"] := false
210 [-]: LOADK     R29 1        ; R29 := 1.000000
211 [-]: GETTABLE  R30 R3 K47   ; R30 := R3["mElements"]
212 [-]: LEN       R30 R30      ; R30 := # R30
213 [-]: LOADK     R31 1        ; R31 := 1.000000
214 [-]: FORPREP   R29 498      ; R29 -= R31; PC := 498
215 [-]: GETTABLE  R33 R3 K47   ; R33 := R3["mElements"]
216 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
217 [-]: EQ        1 R33 K3     ; if R33 == nil then PC := 498
218 [-]: JMP       498          ; PC := 498
219 [-]: LOADK     R34 0        ; R34 := 0.000000
220 [-]: LOADNIL   R35 R35      ; R35 := nil
221 [-]: GETTABLE  R36 R33 K48  ; R36 := R33["Id"]
222 [-]: TEST      R2 1         ; if R2 then PC := 362
223 [-]: JMP       362          ; PC := 362
224 [-]: GETTABLE  R37 R3 K49   ; R37 := R3["MAIL"]
225 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 231
226 [-]: JMP       231          ; PC := 231
227 [-]: SELF      R37 R1 K50   ; R38 := R1; R37 := R1[0xf5fb4cbf]
228 [-]: CALL      R37 2 2      ; R37 := R37(R38)
229 [-]: MOVE      R34 R37      ; R34 := R37
230 [-]: JMP       362          ; PC := 362
231 [-]: GETTABLE  R37 R3 K51   ; R37 := R3["FOUNDRY"]
232 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 325
233 [-]: JMP       325          ; PC := 325
234 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
235 [-]: GETGLOBAL R38 K52      ; R38 := 0xbe190284
236 [-]: CALL      R37 2 2      ; R37 := R37(R38)
237 [-]: TEST      R37 1        ; if R37 then PC := 362
238 [-]: JMP       362          ; PC := 362
239 [-]: GETGLOBAL R37 K0       ; R37 := 0x7b998233
240 [-]: MOVE      R38 R1       ; R38 := R1
241 [-]: CALL      R37 2 2      ; R37 := R37(R38)
242 [-]: TEST      R37 1        ; if R37 then PC := 362
243 [-]: JMP       362          ; PC := 362
244 [-]: SELF      R37 R1 K53   ; R38 := R1; R37 := R1[0x4ae54c32]
245 [-]: GETUPVAL  R39 U3       ; R39 := U3
246 [-]: GETTABLE  R39 R39 K54  ; R39 := R39["SF_FOUNDRY"]
247 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
248 [-]: TEST      R37 0        ; if not R37 then PC := 362
249 [-]: JMP       362          ; PC := 362
250 [-]: GETGLOBAL R37 K55      ; R37 := mFoundryNotification
251 [-]: GETTABLE  R37 R37 K56  ; R37 := R37["Refresh"]
252 [-]: TEST      R37 0        ; if not R37 then PC := 323
253 [-]: JMP       323          ; PC := 323
254 [-]: MOVE      R37 R0       ; R37 := R0
255 [-]: GETGLOBAL R38 K55      ; R38 := mFoundryNotification
256 [-]: GETTABLE  R38 R38 K57  ; R38 := R38["LastRefreshTime"]
257 [-]: EQ        1 R38 K9     ; if R38 == 0.000000 then PC := 264
258 [-]: JMP       264          ; PC := 264
259 [-]: GETGLOBAL R38 K58      ; R38 := 0x55156ff7
260 [-]: CALL      R38 1 2      ; R38 := R38()
261 [-]: GETGLOBAL R39 K55      ; R39 := mFoundryNotification
262 [-]: GETTABLE  R39 R39 K57  ; R39 := R39["LastRefreshTime"]
263 [-]: SUB       R37 R38 R39  ; R37 := R38 - R39
264 [-]: SELF      R38 R1 K59   ; R39 := R1; R38 := R1[0x72d0092a]
265 [-]: GETGLOBAL R40 K52      ; R40 := 0xbe190284
266 [-]: SELF      R40 R40 K60  ; R41 := R40; R40 := R40[0xa1c390fe]
267 [-]: CALL      R40 2 2      ; R40 := R40(R41)
268 [-]: MOVE      R41 R37      ; R41 := R37
269 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
270 [-]: GETGLOBAL R39 K55      ; R39 := mFoundryNotification
271 [-]: GETGLOBAL R40 K58      ; R40 := 0x55156ff7
272 [-]: CALL      R40 1 2      ; R40 := R40()
273 [-]: SETTABLE  R39 K57 R40  ; R39["LastRefreshTime"] := R40
274 [-]: GETTABLE  R34 R38 K61  ; R34 := R38["mCount"]
275 [-]: GETGLOBAL R39 K1       ; R39 := _T
276 [-]: GETTABLE  R39 R39 K62  ; R39 := R39["ShowNotification"]
277 [-]: EQ        1 R39 K3     ; if R39 == nil then PC := 299
278 [-]: JMP       299          ; PC := 299
279 [-]: LOADK     R39 1        ; R39 := 1.000000
280 [-]: GETTABLE  R40 R38 K63  ; R40 := R38["mReadySinceLastCheck"]
281 [-]: LEN       R40 R40      ; R40 := # R40
282 [-]: LOADK     R41 1        ; R41 := 1.000000
283 [-]: FORPREP   R39 298      ; R39 -= R41; PC := 298
284 [-]: GETGLOBAL R43 K33      ; R43 := 0xae91e43b
285 [-]: SELF      R43 R43 K34  ; R44 := R43; R43 := R43[0x42b04007]
286 [-]: LOADK     R45 K64      ; R45 := "/Lotus/Language/Menu/Crafting_ReadyToClaim_Notification"
287 [-]: LOADBOOL  R46 0 0      ; R46 := false
288 [-]: NEWTABLE  R47 0 1      ; R47 := {}
289 [-]: GETTABLE  R48 R38 K63  ; R48 := R38["mReadySinceLastCheck"]
290 [-]: GETTABLE  R48 R48 R42  ; R48 := R48[R42]
291 [-]: SETTABLE  R47 K65 R48  ; R47["RECIPE"] := R48
292 [-]: CALL      R43 5 2      ; R43 := R43(R44,R45,R46,R47)
293 [-]: GETGLOBAL R44 K1       ; R44 := _T
294 [-]: GETTABLE  R44 R44 K66  ; R44 := R44[0x7dce37bc]
295 [-]: MOVE      R45 R43      ; R45 := R43
296 [-]: LOADK     R46 K67      ; R46 := "BuildComplete"
297 [-]: CALL      R44 3 1      ; R44(R45,R46)
298 [-]: FORLOOP   R39 284      ; R39 += R41; if R39 <= R40 then begin PC := 284; R42 := R39 end
299 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
300 [-]: SETTABLE  R44 K56 K46  ; R44["Refresh"] := false
301 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
302 [-]: GETTABLE  R44 R44 K68  ; R44 := R44["Timer"]
303 [-]: EQ        1 R44 K3     ; if R44 == nil then PC := 312
304 [-]: JMP       312          ; PC := 312
305 [-]: GETGLOBAL R44 K69      ; R44 := mTimerMgr
306 [-]: SELF      R44 R44 K70  ; R45 := R44; R44 := R44[0x775c858b]
307 [-]: GETGLOBAL R46 K55      ; R46 := mFoundryNotification
308 [-]: GETTABLE  R46 R46 K68  ; R46 := R46["Timer"]
309 [-]: CALL      R44 3 1      ; R44(R45,R46)
310 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
311 [-]: SETTABLE  R44 K68 K3   ; R44["Timer"] := nil
312 [-]: GETTABLE  R44 R38 K71  ; R44 := R38["mTimeToNextClaimable"]
313 [-]: LE        0 K9 R44     ; if 0.000000 > R44 then PC := 362
314 [-]: JMP       362          ; PC := 362
315 [-]: GETGLOBAL R44 K55      ; R44 := mFoundryNotification
316 [-]: GETGLOBAL R45 K69      ; R45 := mTimerMgr
317 [-]: SELF      R45 R45 K72  ; R46 := R45; R45 := R45[0xbd2e96ea]
318 [-]: GETTABLE  R47 R38 K71  ; R47 := R38["mTimeToNextClaimable"]
319 [-]: CLOSURE   R48 0        ; R48 := closure(Function #71.1)
320 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
321 [-]: SETTABLE  R44 K68 R45  ; R44["Timer"] := R45
322 [-]: JMP       362          ; PC := 362
323 [-]: GETTABLE  R34 R33 K73  ; R34 := R33["Value"]
324 [-]: JMP       362          ; PC := 362
325 [-]: GETTABLE  R44 R3 K74   ; R44 := R3["MARKET"]
326 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 340
327 [-]: JMP       340          ; PC := 340
328 [-]: SELF      R44 R1 K53   ; R45 := R1; R44 := R1[0x4ae54c32]
329 [-]: GETUPVAL  R46 U3       ; R46 := U3
330 [-]: GETTABLE  R46 R46 K75  ; R46 := R46["SF_SOCIAL_MENU"]
331 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
332 [-]: TEST      R44 0        ; if not R44 then PC := 362
333 [-]: JMP       362          ; PC := 362
334 [-]: GETUPVAL  R44 U4       ; R44 := U4
335 [-]: MOVE      R45 R1       ; R45 := R1
336 [-]: CALL      R44 2 3      ; R44,R45 := R44(R45)
337 [-]: MOVE      R35 R45      ; R35 := R45
338 [-]: MOVE      R34 R44      ; R34 := R44
339 [-]: JMP       362          ; PC := 362
340 [-]: GETTABLE  R44 R3 K76   ; R44 := R3["INC_FRIENDS"]
341 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 347
342 [-]: JMP       347          ; PC := 347
343 [-]: SELF      R44 R1 K77   ; R45 := R1; R44 := R1[0x016ec8be]
344 [-]: CALL      R44 2 2      ; R44 := R44(R45)
345 [-]: MOVE      R34 R44      ; R34 := R44
346 [-]: JMP       362          ; PC := 362
347 [-]: GETTABLE  R44 R3 K78   ; R44 := R3["ATTACK_POLARITY"]
348 [-]: LE        0 R44 R36    ; if R44 > R36 then PC := 362
349 [-]: JMP       362          ; PC := 362
350 [-]: GETTABLE  R44 R3 K79   ; R44 := R3["WARD_POLARITY"]
351 [-]: LE        0 R36 R44    ; if R36 > R44 then PC := 362
352 [-]: JMP       362          ; PC := 362
353 [-]: EQ        0 R28 K3     ; if R28 ~= nil then PC := 357
354 [-]: JMP       357          ; PC := 357
355 [-]: GETTABLE  R34 R33 K73  ; R34 := R33["Value"]
356 [-]: JMP       362          ; PC := 362
357 [-]: GETTABLE  R44 R33 K80  ; R44 := R33["Polarity"]
358 [-]: GETTABLE  R44 R28 R44  ; R44 := R28[R44]
359 [-]: EQ        1 R44 K3     ; if R44 == nil then PC := 362
360 [-]: JMP       362          ; PC := 362
361 [-]: LOADK     R34 1        ; R34 := 1.000000
362 [-]: GETTABLE  R44 R3 K81   ; R44 := R3["UMBRA_ECHO"]
363 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 368
364 [-]: JMP       368          ; PC := 368
365 [-]: MOVE      R34 R16      ; R34 := R16
366 [-]: MOVE      R35 R15      ; R35 := R15
367 [-]: JMP       474          ; PC := 474
368 [-]: GETTABLE  R44 R3 K82   ; R44 := R3["INVIGORATION"]
369 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 374
370 [-]: JMP       374          ; PC := 374
371 [-]: MOVE      R34 R18      ; R34 := R18
372 [-]: MOVE      R35 R17      ; R35 := R17
373 [-]: JMP       474          ; PC := 474
374 [-]: GETTABLE  R44 R3 K83   ; R44 := R3["DOUBLE_CREDIT"]
375 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 380
376 [-]: JMP       380          ; PC := 380
377 [-]: MOVE      R34 R4       ; R34 := R4
378 [-]: MOVE      R35 R5       ; R35 := R5
379 [-]: JMP       474          ; PC := 474
380 [-]: GETTABLE  R44 R3 K84   ; R44 := R3["DOUBLE_AFFINITY"]
381 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 386
382 [-]: JMP       386          ; PC := 386
383 [-]: MOVE      R34 R6       ; R34 := R6
384 [-]: MOVE      R35 R7       ; R35 := R7
385 [-]: JMP       474          ; PC := 474
386 [-]: GETTABLE  R44 R3 K85   ; R44 := R3["DOUBLE_PICKUP"]
387 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 392
388 [-]: JMP       392          ; PC := 392
389 [-]: MOVE      R34 R8       ; R34 := R8
390 [-]: MOVE      R35 R9       ; R35 := R9
391 [-]: JMP       474          ; PC := 474
392 [-]: GETTABLE  R44 R3 K86   ; R44 := R3["EVOLVING_WEAPON"]
393 [-]: EQ        0 R36 R44    ; if R36 ~= R44 then PC := 474
394 [-]: JMP       474          ; PC := 474
395 [-]: GETGLOBAL R44 K0       ; R44 := 0x7b998233
396 [-]: GETGLOBAL R45 K45      ; R45 := 0x25d99d89
397 [-]: CALL      R44 2 2      ; R44 := R44(R45)
398 [-]: TEST      R44 1        ; if R44 then PC := 474
399 [-]: JMP       474          ; PC := 474
400 [-]: GETGLOBAL R44 K87      ; R44 := 0x89326c93
401 [-]: SELF      R44 R44 K88  ; R45 := R44; R44 := R44[0x78298275]
402 [-]: CALL      R44 2 2      ; R44 := R44(R45)
403 [-]: GETGLOBAL R45 K0       ; R45 := 0x7b998233
404 [-]: MOVE      R46 R44      ; R46 := R44
405 [-]: CALL      R45 2 2      ; R45 := R45(R46)
406 [-]: TEST      R45 1        ; if R45 then PC := 474
407 [-]: JMP       474          ; PC := 474
408 [-]: SELF      R45 R44 K89  ; R46 := R44; R45 := R44[0xde321e6f]
409 [-]: CALL      R45 2 2      ; R45 := R45(R46)
410 [-]: NEWTABLE  R46 3 0      ; R46 := {}
411 [-]: LOADK     R47 0        ; R47 := 0.000000
412 [-]: LOADK     R48 1        ; R48 := 1.000000
413 [-]: LOADK     R49 5        ; R49 := 5.000000
414 [-]: SETLIST   R46 3 1      ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 3
415 [-]: NEWTABLE  R47 3 0      ; R47 := {}
416 [-]: LOADK     R48 1        ; R48 := 1.000000
417 [-]: LOADK     R49 2        ; R49 := 2.000000
418 [-]: LOADK     R50 3        ; R50 := 3.000000
419 [-]: SETLIST   R47 3 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 3
420 [-]: GETGLOBAL R48 K90      ; R48 := 0xc8802016
421 [-]: MOVE      R49 R46      ; R49 := R46
422 [-]: CALL      R48 2 4      ; R48,R49,R50 := R48(R49)
423 [-]: JMP       472          ; PC := 472
424 [-]: SELF      R53 R45 K91  ; R54 := R45; R53 := R45[0xe85a2361]
425 [-]: MOVE      R55 R52      ; R55 := R52
426 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
427 [-]: GETGLOBAL R54 K0       ; R54 := 0x7b998233
428 [-]: MOVE      R55 R53      ; R55 := R53
429 [-]: CALL      R54 2 2      ; R54 := R54(R55)
430 [-]: TEST      R54 1        ; if R54 then PC := 472
431 [-]: JMP       472          ; PC := 472
432 [-]: SELF      R54 R53 K92  ; R55 := R53; R54 := R53[0xc49a5a08]
433 [-]: CALL      R54 2 2      ; R54 := R54(R55)
434 [-]: TEST      R54 0        ; if not R54 then PC := 472
435 [-]: JMP       472          ; PC := 472
436 [-]: GETGLOBAL R54 K45      ; R54 := 0x25d99d89
437 [-]: SELF      R54 R54 K93  ; R55 := R54; R54 := R54[0x81454478]
438 [-]: GETGLOBAL R56 K94      ; R56 := 0x0469f296
439 [-]: SELF      R57 R53 K38  ; R58 := R53; R57 := R53[0xed4e0128]
440 [-]: CALL      R57 2 0      ; R57,... := R57(R58)
441 [-]: CALL      R56 0 0      ; R56,... := R56(R57,...)
442 [-]: CALL      R54 0 2      ; R54 := R54(R55,...)
443 [-]: GETGLOBAL R55 K0       ; R55 := 0x7b998233
444 [-]: MOVE      R56 R54      ; R56 := R54
445 [-]: CALL      R55 2 2      ; R55 := R55(R56)
446 [-]: TEST      R55 1        ; if R55 then PC := 472
447 [-]: JMP       472          ; PC := 472
448 [-]: GETGLOBAL R55 K45      ; R55 := 0x25d99d89
449 [-]: SELF      R55 R55 K95  ; R56 := R55; R55 := R55[0x25a6e75e]
450 [-]: CALL      R55 2 2      ; R55 := R55(R56)
451 [-]: SELF      R55 R55 K96  ; R56 := R55; R55 := R55[0xc70965fe]
452 [-]: LOADK     R57 0        ; R57 := 0.000000
453 [-]: GETTABLE  R58 R47 R51  ; R58 := R47[R51]
454 [-]: SELF      R59 R53 K97  ; R60 := R53; R59 := R53[0x6daa621a]
455 [-]: CALL      R59 2 2      ; R59 := R59(R60)
456 [-]: SELF      R59 R59 K98  ; R60 := R59; R59 := R59[0xf537cfc7]
457 [-]: CALL      R59 2 0      ; R59,... := R59(R60)
458 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
459 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
460 [-]: MOVE      R57 R55      ; R57 := R55
461 [-]: CALL      R56 2 2      ; R56 := R56(R57)
462 [-]: TEST      R56 1        ; if R56 then PC := 472
463 [-]: JMP       472          ; PC := 472
464 [-]: GETGLOBAL R56 K99      ; R56 := 0x7f5022cf
465 [-]: GETTABLE  R56 R56 K100 ; R56 := R56[0x41e2ae25]
466 [-]: GETTABLE  R57 R55 K101 ; R57 := R55["mSkillTree"]
467 [-]: CALL      R56 2 2      ; R56 := R56(R57)
468 [-]: GETTABLE  R57 R54 K102 ; R57 := R54["rank"]
469 [-]: LT        0 R56 R57    ; if R56 >= R57 then PC := 472
470 [-]: JMP       472          ; PC := 472
471 [-]: LOADK     R34 1        ; R34 := 1.000000
472 [-]: TFORLOOP  R48 2        ; R51,R52 :=  R48(R49,R50); if R51 ~= nil then begin PC = 424; R50 := R51 end
473 [-]: JMP       424          ; PC := 424
474 [-]: GETTABLE  R56 R33 K73  ; R56 := R33["Value"]
475 [-]: EQ        0 R34 R56    ; if R34 ~= R56 then PC := 490
476 [-]: JMP       490          ; PC := 490
477 [-]: EQ        1 R35 K3     ; if R35 == nil then PC := 498
478 [-]: JMP       498          ; PC := 498
479 [-]: GETTABLE  R56 R33 K103 ; R56 := R33["Expiry"]
480 [-]: EQ        1 R56 K3     ; if R56 == nil then PC := 487
481 [-]: JMP       487          ; PC := 487
482 [-]: SELF      R56 R35 K104 ; R57 := R35; R56 := R35[0x10f68684]
483 [-]: GETTABLE  R58 R33 K103 ; R58 := R33["Expiry"]
484 [-]: CALL      R56 3 2      ; R56 := R56(R57,R58)
485 [-]: JMP       488          ; PC := 488
486 [-]: LOADBOOL  R56 0 1      ; R56 := false; PC := 487
487 [-]: LOADBOOL  R56 1 0      ; R56 := true
488 [-]: EQ        1 R56 K9     ; if R56 == 0.000000 then PC := 498
489 [-]: JMP       498          ; PC := 498
490 [-]: SETTABLE  R33 K73 R34  ; R33["Value"] := R34
491 [-]: EQ        0 R35 K3     ; if R35 ~= nil then PC := 495
492 [-]: JMP       495          ; PC := 495
493 [-]: SETTABLE  R33 K103 K3  ; R33["Expiry"] := nil
494 [-]: JMP       498          ; PC := 498
495 [-]: SELF      R56 R35 K105 ; R57 := R35; R56 := R35[0x8f89d633]
496 [-]: CALL      R56 2 2      ; R56 := R56(R57)
497 [-]: SETTABLE  R33 K103 R56 ; R33["Expiry"] := R56
498 [-]: FORLOOP   R29 215      ; R29 += R31; if R29 <= R30 then begin PC := 215; R32 := R29 end
499 [-]: RETURN    R0 1         ; return 


; Function #71.1:
;
; Name:            
; Defined at line: 2449
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mFoundryNotification
  2 [-]: SETTABLE  R0 K1 K2     ; R0["Refresh"] := true
  3 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 2523
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  55

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x9718be96]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["KUVA_TOWER_MISSION_INTERVAL"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["KUVA_TOWER_MISSION_INTERVAL"]
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0xa01111a5]
 10 [-]: CALL      R3 1 2       ; R3 := R3()
 11 [-]: GETUPVAL  R4 U0        ; R4 := U0
 12 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["KUVA_TOWER_MISSION_INTERVAL"]
 13 [-]: MOD       R3 R3 R4     ; R3 := R3 % R4
 14 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mWorldStateLastGhostTowerSeed"]
 17 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: SETTABLE  R3 K4 R1     ; R3["mWorldStateLastGhostTowerSeed"] := R1
 22 [-]: GETGLOBAL R3 K5        ; R3 := 0x4f6851ff
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: CALL      R3 2 1       ; R3(R4)
 25 [-]: GETGLOBAL R3 K6        ; R3 := _T
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: SETTABLE  R3 K7 R4     ; R3["CachedGhostTowerMissions"] := R4
 28 [-]: LOADBOOL  R3 0 0       ; R3 := false
 29 [-]: GETGLOBAL R4 K8        ; R4 := 0x7ed0a956
 30 [-]: LOADK     R5 K9        ; R5 := "/Lotus/Types/Keys/WarWithinQuest/WarWithinQuestKeyChain"
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: GETUPVAL  R5 U0        ; R5 := U0
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x52fb05b3]
 34 [-]: MOVE      R6 R4        ; R6 := R4
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: GETGLOBAL R6 K11       ; R6 := 0x0469f296
 37 [-]: LOADK     R7 K12       ; R7 := "KuvaSurvival"
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: GETGLOBAL R7 K13       ; R7 := 0x5bced4c4
 40 [-]: GETTABLE  R7 R7 K14    ; R7 := R7[0x55f27c30]
 41 [-]: GETGLOBAL R8 K15       ; R8 := 0xbe190284
 42 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x67b221fa]
 43 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 44 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 45 [-]: ADD       R7 R7 R2     ; R7 := R7 + R2
 46 [-]: GETUPVAL  R8 U0        ; R8 := U0
 47 [-]: GETTABLE  R8 R8 K17    ; R8 := R8[0x5e35d4d6]
 48 [-]: CALL      R8 1 2       ; R8 := R8()
 49 [-]: SELF      R9 R8 K18    ; R10 := R8; R9 := R8[0xc1dee03f]
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: GETUPVAL  R10 U2       ; R10 := U2
 52 [-]: GETTABLE  R10 R10 K19  ; R10 := R10[0xf918a1ff]
 53 [-]: CALL      R10 1 2      ; R10 := R10()
 54 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 55 [-]: GETGLOBAL R12 K20      ; R12 := 0xcfc01047
 56 [-]: MOVE      R13 R9       ; R13 := R9
 57 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 58 [-]: JMP       92           ; PC := 92
 59 [-]: GETUPVAL  R17 U0       ; R17 := U0
 60 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["REGION_ID_FORTRESS"]
 61 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 62 [-]: JMP       92           ; PC := 92
 63 [-]: GETUPVAL  R17 U0       ; R17 := U0
 64 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["REGION_ID_DOJO"]
 65 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 66 [-]: JMP       92           ; PC := 92
 67 [-]: GETUPVAL  R17 U0       ; R17 := U0
 68 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["REGION_ID_VOID"]
 69 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 70 [-]: JMP       92           ; PC := 92
 71 [-]: GETUPVAL  R17 U0       ; R17 := U0
 72 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["REGION_ID_MOON"]
 73 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 74 [-]: JMP       92           ; PC := 92
 75 [-]: GETUPVAL  R17 U0       ; R17 := U0
 76 [-]: GETTABLE  R17 R17 K25  ; R17 := R17["REGION_ID_DARK_SECTOR"]
 77 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 78 [-]: JMP       92           ; PC := 92
 79 [-]: GETUPVAL  R17 U0       ; R17 := U0
 80 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["REGION_ID_DEEP_SPACE"]
 81 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 82 [-]: JMP       92           ; PC := 92
 83 [-]: GETUPVAL  R17 U0       ; R17 := U0
 84 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["REGION_ID_ZARIMAN"]
 85 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 92
 86 [-]: JMP       92           ; PC := 92
 87 [-]: GETGLOBAL R17 K28      ; R17 := 0x33bdd652
 88 [-]: GETTABLE  R17 R17 K29  ; R17 := R17[0x23d5322f]
 89 [-]: MOVE      R18 R11      ; R18 := R11
 90 [-]: MOVE      R19 R16      ; R19 := R16
 91 [-]: CALL      R17 3 1      ; R17(R18,R19)
 92 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 59; R14 := R15 end
 93 [-]: JMP       59           ; PC := 59
 94 [-]: GETGLOBAL R17 K28      ; R17 := 0x33bdd652
 95 [-]: GETTABLE  R17 R17 K30  ; R17 := R17[0xf21b1d8e]
 96 [-]: MOVE      R18 R11      ; R18 := R11
 97 [-]: CLOSURE   R19 0        ; R19 := closure(Function #72.1)
 98 [-]: MOVE      R0 R10       ; R0 := R10
 99 [-]: CALL      R17 3 1      ; R17(R18,R19)
100 [-]: LOADK     R17 2        ; R17 := 2.000000
101 [-]: NEWTABLE  R18 0 0      ; R18 := {}
102 [-]: GETGLOBAL R19 K31      ; R19 := 0xc8802016
103 [-]: MOVE      R20 R11      ; R20 := R11
104 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
105 [-]: JMP       173          ; PC := 173
106 [-]: GETGLOBAL R24 K20      ; R24 := 0xcfc01047
107 [-]: GETTABLE  R25 R23 K32  ; R25 := R23["sectors"]
108 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
109 [-]: JMP       168          ; PC := 168
110 [-]: GETGLOBAL R29 K33      ; R29 := 0x64fb1586
111 [-]: GETTABLE  R30 R28 K34  ; R30 := R28["name"]
112 [-]: CALL      R29 2 2      ; R29 := R29(R30)
113 [-]: GETTABLE  R30 R28 K35  ; R30 := R28["mission"]
114 [-]: GETTABLE  R31 R30 K36  ; R31 := R30["missionType"]
115 [-]: GETTABLE  R32 R28 K37  ; R32 := R28["nodeType"]
116 [-]: EQ        0 R32 K39    ; if R32 ~= 0.000000 then PC := 168
117 [-]: JMP       168          ; PC := 168
118 [-]: EQ        1 R29 K40    ; if R29 == "" then PC := 168
119 [-]: JMP       168          ; PC := 168
120 [-]: GETGLOBAL R32 K41      ; R32 := 0x7b998233
121 [-]: GETTABLE  R33 R30 K42  ; R33 := R30["levelOverride"]
122 [-]: CALL      R32 2 2      ; R32 := R32(R33)
123 [-]: TEST      R32 1        ; if R32 then PC := 168
124 [-]: JMP       168          ; PC := 168
125 [-]: GETTABLE  R32 R30 K43  ; R32 := R30["archwingRequired"]
126 [-]: TEST      R32 1        ; if R32 then PC := 168
127 [-]: JMP       168          ; PC := 168
128 [-]: GETTABLE  R32 R30 K44  ; R32 := R30["isSharkwingMission"]
129 [-]: TEST      R32 1        ; if R32 then PC := 168
130 [-]: JMP       168          ; PC := 168
131 [-]: EQ        1 R31 K45    ; if R31 == 22.000000 then PC := 168
132 [-]: JMP       168          ; PC := 168
133 [-]: EQ        1 R31 K46    ; if R31 == 13.000000 then PC := 168
134 [-]: JMP       168          ; PC := 168
135 [-]: EQ        1 R31 K47    ; if R31 == 8.000000 then PC := 168
136 [-]: JMP       168          ; PC := 168
137 [-]: EQ        1 R31 K48    ; if R31 == 21.000000 then PC := 168
138 [-]: JMP       168          ; PC := 168
139 [-]: EQ        1 R31 K49    ; if R31 == 14.000000 then PC := 168
140 [-]: JMP       168          ; PC := 168
141 [-]: EQ        1 R31 K50    ; if R31 == 28.000000 then PC := 168
142 [-]: JMP       168          ; PC := 168
143 [-]: EQ        1 R31 K51    ; if R31 == 36.000000 then PC := 168
144 [-]: JMP       168          ; PC := 168
145 [-]: EQ        1 R31 K52    ; if R31 == 30.000000 then PC := 168
146 [-]: JMP       168          ; PC := 168
147 [-]: EQ        1 R31 K53    ; if R31 == 32.000000 then PC := 168
148 [-]: JMP       168          ; PC := 168
149 [-]: EQ        1 R31 K54    ; if R31 == 31.000000 then PC := 168
150 [-]: JMP       168          ; PC := 168
151 [-]: GETTABLE  R32 R30 K55  ; R32 := R30["goalTag"]
152 [-]: GETGLOBAL R33 K56      ; R33 := EMPTY_SYMBOL
153 [-]: EQ        1 R32 R33    ; if R32 == R33 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: GETTABLE  R32 R30 K55  ; R32 := R30["goalTag"]
156 [-]: EQ        0 R32 R6     ; if R32 ~= R6 then PC := 168
157 [-]: JMP       168          ; PC := 168
158 [-]: GETGLOBAL R32 K41      ; R32 := 0x7b998233
159 [-]: GETTABLE  R33 R30 K57  ; R33 := R30["questReq"]
160 [-]: CALL      R32 2 2      ; R32 := R32(R33)
161 [-]: TEST      R32 0        ; if not R32 then PC := 168
162 [-]: JMP       168          ; PC := 168
163 [-]: GETGLOBAL R32 K28      ; R32 := 0x33bdd652
164 [-]: GETTABLE  R32 R32 K29  ; R32 := R32[0x23d5322f]
165 [-]: MOVE      R33 R18      ; R33 := R18
166 [-]: MOVE      R34 R28      ; R34 := R28
167 [-]: CALL      R32 3 1      ; R32(R33,R34)
168 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 110; R26 := R27 end
169 [-]: JMP       110          ; PC := 110
170 [-]: EQ        0 R22 R17    ; if R22 ~= R17 then PC := 173
171 [-]: JMP       173          ; PC := 173
172 [-]: JMP       175          ; PC := 175
173 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 106; R21 := R22 end
174 [-]: JMP       106          ; PC := 106
175 [-]: GETUPVAL  R32 U3       ; R32 := U3
176 [-]: GETTABLE  R32 R32 K58  ; R32 := R32[0xb8f73de1]
177 [-]: MOVE      R33 R18      ; R33 := R18
178 [-]: CALL      R32 2 1      ; R32(R33)
179 [-]: LOADBOOL  R32 0 0      ; R32 := false
180 [-]: TEST      R32 0        ; if not R32 then PC := 199
181 [-]: JMP       199          ; PC := 199
182 [-]: TEST      R3 0         ; if not R3 then PC := 199
183 [-]: JMP       199          ; PC := 199
184 [-]: GETGLOBAL R32 K31      ; R32 := 0xc8802016
185 [-]: MOVE      R33 R18      ; R33 := R18
186 [-]: CALL      R32 2 4      ; R32,R33,R34 := R32(R33)
187 [-]: JMP       197          ; PC := 197
188 [-]: GETGLOBAL R37 K59      ; R37 := 0x3d106989
189 [-]: LOADK     R38 K60      ; R38 := "KUVA node"
190 [-]: MOVE      R39 R35      ; R39 := R35
191 [-]: LOADK     R40 K61      ; R40 := "="
192 [-]: GETGLOBAL R41 K33      ; R41 := 0x64fb1586
193 [-]: GETTABLE  R42 R36 K34  ; R42 := R36["name"]
194 [-]: CALL      R41 2 2      ; R41 := R41(R42)
195 [-]: CONCAT    R38 R38 R41  ; R38 := R38 .. R39 .. R40 .. R41
196 [-]: CALL      R37 2 1      ; R37(R38)
197 [-]: TFORLOOP  R32 2        ; R35,R36 :=  R32(R33,R34); if R35 ~= nil then begin PC = 188; R34 := R35 end
198 [-]: JMP       188          ; PC := 188
199 [-]: LOADNIL   R37 R37      ; R37 := nil
200 [-]: SELF      R38 R0 K62   ; R39 := R0; R38 := R0[0x69727e0b]
201 [-]: CALL      R38 2 2      ; R38 := R38(R39)
202 [-]: SELF      R38 R38 K63  ; R39 := R38; R38 := R38[0x21fec8ad]
203 [-]: GETGLOBAL R40 K11      ; R40 := 0x0469f296
204 [-]: LOADK     R41 K64      ; R41 := "KuvaFlood"
205 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
206 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
207 [-]: TEST      R38 0        ; if not R38 then PC := 222
208 [-]: JMP       222          ; PC := 222
209 [-]: LEN       R39 R38      ; R39 := # R38
210 [-]: LT        0 K39 R39    ; if 0.000000 >= R39 then PC := 222
211 [-]: JMP       222          ; PC := 222
212 [-]: SELF      R39 R8 K65   ; R40 := R8; R39 := R8[0x3ad9ed31]
213 [-]: GETTABLE  R41 R38 K66  ; R41 := R38[1.000000]
214 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
215 [-]: MOVE      R37 R39      ; R37 := R39
216 [-]: GETGLOBAL R39 K13      ; R39 := 0x5bced4c4
217 [-]: GETTABLE  R39 R39 K67  ; R39 := R39[0xac1b386a]
218 [-]: GETUPVAL  R40 U4       ; R40 := U4
219 [-]: LEN       R41 R18      ; R41 := # R18
220 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
221 [-]: SETTABLE  R18 R39 R37  ; R18[R39] := R37
222 [-]: GETGLOBAL R39 K13      ; R39 := 0x5bced4c4
223 [-]: GETTABLE  R39 R39 K14  ; R39 := R39[0x55f27c30]
224 [-]: GETUPVAL  R40 U0       ; R40 := U0
225 [-]: GETTABLE  R40 R40 K3   ; R40 := R40[0xa01111a5]
226 [-]: CALL      R40 1 2      ; R40 := R40()
227 [-]: GETUPVAL  R41 U0       ; R41 := U0
228 [-]: GETTABLE  R41 R41 K2   ; R41 := R41["KUVA_TOWER_MISSION_INTERVAL"]
229 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
230 [-]: CALL      R39 2 2      ; R39 := R39(R40)
231 [-]: MOD       R39 R39 K68  ; R39 := R39 % 2.000000
232 [-]: GETGLOBAL R40 K31      ; R40 := 0xc8802016
233 [-]: MOVE      R41 R18      ; R41 := R18
234 [-]: CALL      R40 2 4      ; R40,R41,R42 := R40(R41)
235 [-]: JMP       361          ; PC := 361
236 [-]: GETUPVAL  R45 U4       ; R45 := U4
237 [-]: EQ        1 R43 R45    ; if R43 == R45 then PC := 240
238 [-]: JMP       240          ; PC := 240
239 [-]: LOADBOOL  R45 0 1      ; R45 := false; PC := 240
240 [-]: LOADBOOL  R45 1 0      ; R45 := true
241 [-]: GETUPVAL  R46 U4       ; R46 := U4
242 [-]: MUL       R46 R39 R46  ; R46 := R39 * R46
243 [-]: ADD       R46 R43 R46  ; R46 := R43 + R46
244 [-]: GETGLOBAL R47 K11      ; R47 := 0x0469f296
245 [-]: LOADK     R48 K69      ; R48 := "KuvaMission"
246 [-]: MOVE      R49 R46      ; R49 := R46
247 [-]: CONCAT    R48 R48 R49  ; R48 := R48 .. R49
248 [-]: CALL      R47 2 2      ; R47 := R47(R48)
249 [-]: GETGLOBAL R48 K33      ; R48 := 0x64fb1586
250 [-]: GETTABLE  R49 R44 K34  ; R49 := R44["name"]
251 [-]: CALL      R48 2 2      ; R48 := R48(R49)
252 [-]: SELF      R49 R0 K70   ; R50 := R0; R49 := R0[0xc3150d06]
253 [-]: MOVE      R51 R47      ; R51 := R47
254 [-]: GETUPVAL  R52 U0       ; R52 := U0
255 [-]: GETTABLE  R52 R52 K2   ; R52 := R52["KUVA_TOWER_MISSION_INTERVAL"]
256 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
257 [-]: TEST      R49 1        ; if R49 then PC := 265
258 [-]: JMP       265          ; PC := 265
259 [-]: TESTSET   R49 R37 0    ; if not R37 then PC := 265 else R49 := R37
260 [-]: JMP       265          ; PC := 265
261 [-]: EQ        1 R37 R44    ; if R37 == R44 then PC := 264
262 [-]: JMP       264          ; PC := 264
263 [-]: LOADBOOL  R49 0 1      ; R49 := false; PC := 264
264 [-]: LOADBOOL  R49 1 0      ; R49 := true
265 [-]: GETTABLE  R50 R44 K35  ; R50 := R44["mission"]
266 [-]: SELF      R50 R50 K71  ; R51 := R50; R50 := R50[0x8f89d633]
267 [-]: CALL      R50 2 2      ; R50 := R50(R51)
268 [-]: GETUPVAL  R51 U3       ; R51 := U3
269 [-]: GETTABLE  R51 R51 K73  ; R51 := R51[0x06d055f9]
270 [-]: MOVE      R52 R45      ; R52 := R45
271 [-]: LOADK     R53 80       ; R53 := 80.000000
272 [-]: LOADK     R54 25       ; R54 := 25.000000
273 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
274 [-]: SETTABLE  R50 K72 R51  ; R50["minEnemyLevel"] := R51
275 [-]: GETUPVAL  R51 U3       ; R51 := U3
276 [-]: GETTABLE  R51 R51 K73  ; R51 := R51[0x06d055f9]
277 [-]: MOVE      R52 R45      ; R52 := R45
278 [-]: LOADK     R53 100      ; R53 := 100.000000
279 [-]: LOADK     R54 35       ; R54 := 35.000000
280 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
281 [-]: SETTABLE  R50 K74 R51  ; R50["maxEnemyLevel"] := R51
282 [-]: SETTABLE  R50 K75 K66  ; R50["difficulty"] := 1.000000
283 [-]: GETUPVAL  R51 U0       ; R51 := U0
284 [-]: GETTABLE  R51 R51 K76  ; R51 := R51["KUVA_TOWER_GOAL_TAG"]
285 [-]: SETTABLE  R50 K55 R51  ; R50["goalTag"] := R51
286 [-]: SETTABLE  R50 K77 R47  ; R50["periodicMissionTag"] := R47
287 [-]: GETUPVAL  R51 U0       ; R51 := U0
288 [-]: GETTABLE  R51 R51 K2   ; R51 := R51["KUVA_TOWER_MISSION_INTERVAL"]
289 [-]: SETTABLE  R50 K78 R51  ; R50["periodicMissionCooldown"] := R51
290 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
291 [-]: EQ        0 R51 K68    ; if R51 ~= 2.000000 then PC := 295
292 [-]: JMP       295          ; PC := 295
293 [-]: SETTABLE  R50 K79 K80  ; R50["maxWaveNum"] := 5.000000
294 [-]: JMP       324          ; PC := 324
295 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
296 [-]: EQ        0 R51 K47    ; if R51 ~= 8.000000 then PC := 300
297 [-]: JMP       300          ; PC := 300
298 [-]: SETTABLE  R50 K79 K80  ; R50["maxWaveNum"] := 5.000000
299 [-]: JMP       324          ; PC := 324
300 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
301 [-]: EQ        0 R51 K46    ; if R51 ~= 13.000000 then PC := 305
302 [-]: JMP       305          ; PC := 305
303 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
304 [-]: JMP       324          ; PC := 324
305 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
306 [-]: EQ        0 R51 K81    ; if R51 ~= 17.000000 then PC := 310
307 [-]: JMP       310          ; PC := 310
308 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
309 [-]: JMP       324          ; PC := 324
310 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
311 [-]: EQ        0 R51 K82    ; if R51 ~= 7.000000 then PC := 315
312 [-]: JMP       315          ; PC := 315
313 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
314 [-]: JMP       324          ; PC := 324
315 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
316 [-]: EQ        0 R51 K83    ; if R51 ~= 4.000000 then PC := 320
317 [-]: JMP       320          ; PC := 320
318 [-]: SETTABLE  R50 K79 K68  ; R50["maxWaveNum"] := 2.000000
319 [-]: JMP       324          ; PC := 324
320 [-]: GETTABLE  R51 R50 K36  ; R51 := R50["missionType"]
321 [-]: EQ        0 R51 K53    ; if R51 ~= 32.000000 then PC := 324
322 [-]: JMP       324          ; PC := 324
323 [-]: SETTABLE  R50 K79 K66  ; R50["maxWaveNum"] := 1.000000
324 [-]: GETGLOBAL R51 K84      ; R51 := 0x84883f05
325 [-]: GETTABLE  R52 R50 K85  ; R52 := R50["seed"]
326 [-]: GETUPVAL  R53 U0       ; R53 := U0
327 [-]: GETTABLE  R53 R53 K86  ; R53 := R53[0xb53a8957]
328 [-]: CALL      R53 1 2      ; R53 := R53()
329 [-]: MOD       R53 R53 K87  ; R53 := R53 % 24.000000
330 [-]: CALL      R51 3 1      ; R51(R52,R53)
331 [-]: GETGLOBAL R51 K88      ; R51 := 0xffd438ab
332 [-]: CALL      R51 1 2      ; R51 := R51()
333 [-]: SETTABLE  R50 K85 R51  ; R50["seed"] := R51
334 [-]: TEST      R45 0        ; if not R45 then PC := 341
335 [-]: JMP       341          ; PC := 341
336 [-]: GETTABLE  R51 R50 K89  ; R51 := R50["missionReward"]
337 [-]: GETUPVAL  R52 U5       ; R52 := U5
338 [-]: GETTABLE  R52 R52 K91  ; R52 := R52["hard"]
339 [-]: SETTABLE  R51 K90 R52  ; R51["randomizedItems"] := R52
340 [-]: JMP       345          ; PC := 345
341 [-]: GETTABLE  R51 R50 K89  ; R51 := R50["missionReward"]
342 [-]: GETUPVAL  R52 U5       ; R52 := U5
343 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["easy"]
344 [-]: SETTABLE  R51 K90 R52  ; R51["randomizedItems"] := R52
345 [-]: GETGLOBAL R51 K6       ; R51 := _T
346 [-]: GETTABLE  R51 R51 K7   ; R51 := R51["CachedGhostTowerMissions"]
347 [-]: NEWTABLE  R52 0 5      ; R52 := {}
348 [-]: SETTABLE  R52 K93 R50  ; R52["mMissionInfo"] := R50
349 [-]: TESTSET   R53 R5 1     ; if R5 then PC := 352 else R53 := R5
350 [-]: JMP       352          ; PC := 352
351 [-]: MOVE      R53 R3       ; R53 := R3
352 [-]: SETTABLE  R52 K94 R53  ; R52["mUnlocked"] := R53
353 [-]: SETTABLE  R52 K95 R49  ; R52["mShowInStarChart"] := R49
354 [-]: SETTABLE  R52 K96 R7   ; R52["mExpiry"] := R7
355 [-]: SETTABLE  R52 K97 R45  ; R52["mFlood"] := R45
356 [-]: SETTABLE  R51 R48 R52  ; R51[R48] := R52
357 [-]: GETUPVAL  R51 U4       ; R51 := U4
358 [-]: EQ        0 R43 R51    ; if R43 ~= R51 then PC := 361
359 [-]: JMP       361          ; PC := 361
360 [-]: JMP       363          ; PC := 363
361 [-]: TFORLOOP  R40 2        ; R43,R44 :=  R40(R41,R42); if R43 ~= nil then begin PC = 236; R42 := R43 end
362 [-]: JMP       236          ; PC := 236
363 [-]: RETURN    R2 2         ; return R2
364 [-]: RETURN    R0 1         ; return 


; Function #72.1:
;
; Name:            
; Defined at line: 2556
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x03ea2485
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["pos"]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x03ea2485
  6 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["pos"]
  7 [-]: GETUPVAL  R5 U0        ; R5 := U0
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 12
 12 [-]: LOADBOOL  R2 1 0       ; R2 := true
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 2667
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  64

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["ELITE_ALERT_MISSION_INTERVAL"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xa01111a5]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["ELITE_ALERT_MISSION_INTERVAL"]
  8 [-]: MOD       R2 R2 R3     ; R2 := R2 % R3
  9 [-]: SUB       R1 R1 R2     ; R1 := R1 - R2
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x34291f5c
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x9718be96]
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["ELITE_ALERT_MISSION_INTERVAL"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETUPVAL  R3 U1        ; R3 := U1
 16 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mWorldStateLastEliteAlertSeed"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: SETTABLE  R3 K4 R2     ; R3["mWorldStateLastEliteAlertSeed"] := R2
 22 [-]: GETGLOBAL R3 K5        ; R3 := 0x4f6851ff
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: CALL      R3 2 1       ; R3(R4)
 25 [-]: GETGLOBAL R3 K6        ; R3 := _T
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: SETTABLE  R3 K7 R4     ; R3["CachedEliteAlertMissions"] := R4
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x5e35d4d6]
 30 [-]: CALL      R3 1 2       ; R3 := R3()
 31 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xc1dee03f]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: GETGLOBAL R5 K10       ; R5 := 0x5bced4c4
 34 [-]: GETTABLE  R5 R5 K11    ; R5 := R5[0x55f27c30]
 35 [-]: GETGLOBAL R6 K12       ; R6 := 0xbe190284
 36 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x67b221fa]
 37 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 38 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 39 [-]: ADD       R5 R5 R1     ; R5 := R5 + R1
 40 [-]: GETUPVAL  R6 U2        ; R6 := U2
 41 [-]: GETTABLE  R6 R6 K14    ; R6 := R6[0x06d055f9]
 42 [-]: GETUPVAL  R7 U0        ; R7 := U0
 43 [-]: GETTABLE  R7 R7 K15    ; R7 := R7[0xb53a8957]
 44 [-]: CALL      R7 1 2       ; R7 := R7()
 45 [-]: MOD       R7 R7 K16    ; R7 := R7 % 2.000000
 46 [-]: EQ        1 R7 K17     ; if R7 == 0.000000 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 49
 49 [-]: LOADBOOL  R7 1 0       ; R7 := true
 50 [-]: GETUPVAL  R8 U0        ; R8 := U0
 51 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["ELITE_ALERT_PERIODIC_MISSION_TAG"]
 52 [-]: GETUPVAL  R9 U0        ; R9 := U0
 53 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
 54 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 55 [-]: SELF      R7 R0 K20    ; R8 := R0; R7 := R0[0xc3150d06]
 56 [-]: MOVE      R9 R6        ; R9 := R6
 57 [-]: GETUPVAL  R10 U0       ; R10 := U0
 58 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["ELITE_ALERT_MISSION_INTERVAL"]
 59 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 60 [-]: EQ        1 R7 K21     ; if R7 == false then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 63
 63 [-]: LOADBOOL  R7 1 0       ; R7 := true
 64 [-]: GETUPVAL  R8 U0        ; R8 := U0
 65 [-]: GETTABLE  R8 R8 K22    ; R8 := R8[0xe0628359]
 66 [-]: CALL      R8 1 3       ; R8,R9 := R8()
 67 [-]: LOADBOOL  R10 1 0      ; R10 := true
 68 [-]: TEST      R8 1         ; if R8 then PC := 98
 69 [-]: JMP       98           ; PC := 98
 70 [-]: LOADK     R11 1        ; R11 := 1.000000
 71 [-]: LEN       R12 R4       ; R12 := # R4
 72 [-]: LOADK     R13 1        ; R13 := 1.000000
 73 [-]: FORPREP   R11 97       ; R11 -= R13; PC := 97
 74 [-]: GETUPVAL  R15 U0       ; R15 := U0
 75 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["REGION_ID_DOJO"]
 76 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 97
 77 [-]: JMP       97           ; PC := 97
 78 [-]: GETUPVAL  R15 U0       ; R15 := U0
 79 [-]: GETTABLE  R15 R15 K24  ; R15 := R15["REGION_ID_DARK_SECTOR"]
 80 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 97
 81 [-]: JMP       97           ; PC := 97
 82 [-]: GETUPVAL  R15 U0       ; R15 := U0
 83 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["REGION_ID_DEEP_SPACE"]
 84 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 97
 85 [-]: JMP       97           ; PC := 97
 86 [-]: GETUPVAL  R15 U0       ; R15 := U0
 87 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["REGION_ID_ZARIMAN"]
 88 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 97
 89 [-]: JMP       97           ; PC := 97
 90 [-]: GETTABLE  R15 R4 R14   ; R15 := R4[R14]
 91 [-]: SELF      R15 R15 K27  ; R16 := R15; R15 := R15[0x699fd1e2]
 92 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 93 [-]: EQ        0 R15 K17    ; if R15 ~= 0.000000 then PC := 97
 94 [-]: JMP       97           ; PC := 97
 95 [-]: LOADBOOL  R10 0 0      ; R10 := false
 96 [-]: JMP       98           ; PC := 98
 97 [-]: FORLOOP   R11 74       ; R11 += R13; if R11 <= R12 then begin PC := 74; R14 := R11 end
 98 [-]: TEST      R8 1         ; if R8 then PC := 105
 99 [-]: JMP       105          ; PC := 105
100 [-]: TESTSET   R15 R10 0    ; if not R10 then PC := 109 else R15 := R10
101 [-]: JMP       109          ; PC := 109
102 [-]: LEN       R15 R9       ; R15 := # R9
103 [-]: LE        0 R15 K29    ; if R15 > 20.000000 then PC := 107
104 [-]: JMP       107          ; PC := 107
105 [-]: NOT       R15 R7       ; R15 := not R7
106 [-]: JMP       109          ; PC := 109
107 [-]: LOADBOOL  R15 0 1      ; R15 := false; PC := 108
108 [-]: LOADBOOL  R15 1 0      ; R15 := true
109 [-]: LOADNIL   R16 R16      ; R16 := nil
110 [-]: SELF      R17 R0 K30   ; R18 := R0; R17 := R0[0x69727e0b]
111 [-]: CALL      R17 2 2      ; R17 := R17(R18)
112 [-]: SELF      R17 R17 K31  ; R18 := R17; R17 := R17[0x21fec8ad]
113 [-]: GETGLOBAL R19 K32      ; R19 := 0x0469f296
114 [-]: LOADK     R20 K33      ; R20 := "EliteAlert"
115 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
116 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
117 [-]: TEST      R17 0        ; if not R17 then PC := 127
118 [-]: JMP       127          ; PC := 127
119 [-]: LEN       R18 R17      ; R18 := # R17
120 [-]: LT        0 K17 R18    ; if 0.000000 >= R18 then PC := 127
121 [-]: JMP       127          ; PC := 127
122 [-]: SELF      R18 R3 K34   ; R19 := R3; R18 := R3[0x3ad9ed31]
123 [-]: GETTABLE  R20 R17 K35  ; R20 := R17[1.000000]
124 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
125 [-]: MOVE      R16 R18      ; R16 := R18
126 [-]: JMP       256          ; PC := 256
127 [-]: NEWTABLE  R18 0 0      ; R18 := {}
128 [-]: NEWTABLE  R19 0 0      ; R19 := {}
129 [-]: LOADK     R20 1        ; R20 := 1.000000
130 [-]: LEN       R21 R4       ; R21 := # R4
131 [-]: LOADK     R22 1        ; R22 := 1.000000
132 [-]: FORPREP   R20 158      ; R20 -= R22; PC := 158
133 [-]: GETUPVAL  R24 U0       ; R24 := U0
134 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["REGION_ID_FORTRESS"]
135 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 158
136 [-]: JMP       158          ; PC := 158
137 [-]: GETUPVAL  R24 U0       ; R24 := U0
138 [-]: GETTABLE  R24 R24 K23  ; R24 := R24["REGION_ID_DOJO"]
139 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 158
140 [-]: JMP       158          ; PC := 158
141 [-]: GETUPVAL  R24 U0       ; R24 := U0
142 [-]: GETTABLE  R24 R24 K24  ; R24 := R24["REGION_ID_DARK_SECTOR"]
143 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 158
144 [-]: JMP       158          ; PC := 158
145 [-]: GETUPVAL  R24 U0       ; R24 := U0
146 [-]: GETTABLE  R24 R24 K25  ; R24 := R24["REGION_ID_DEEP_SPACE"]
147 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 158
148 [-]: JMP       158          ; PC := 158
149 [-]: GETUPVAL  R24 U0       ; R24 := U0
150 [-]: GETTABLE  R24 R24 K26  ; R24 := R24["REGION_ID_ZARIMAN"]
151 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 158
152 [-]: JMP       158          ; PC := 158
153 [-]: GETGLOBAL R24 K37      ; R24 := 0x33bdd652
154 [-]: GETTABLE  R24 R24 K38  ; R24 := R24[0x23d5322f]
155 [-]: MOVE      R25 R19      ; R25 := R19
156 [-]: MOVE      R26 R23      ; R26 := R23
157 [-]: CALL      R24 3 1      ; R24(R25,R26)
158 [-]: FORLOOP   R20 133      ; R20 += R22; if R20 <= R21 then begin PC := 133; R23 := R20 end
159 [-]: GETUPVAL  R24 U2       ; R24 := U2
160 [-]: GETTABLE  R24 R24 K39  ; R24 := R24[0xb8f73de1]
161 [-]: MOVE      R25 R19      ; R25 := R19
162 [-]: CALL      R24 2 1      ; R24(R25)
163 [-]: LOADNIL   R24 R25      ; R24 := R25 := nil
164 [-]: LOADBOOL  R26 0 0      ; R26 := false
165 [-]: TEST      R26 0        ; if not R26 then PC := 185
166 [-]: JMP       185          ; PC := 185
167 [-]: NEWTABLE  R27 0 0      ; R27 := {}
168 [-]: MOVE      R24 R27      ; R24 := R27
169 [-]: LOADK     R27 1        ; R27 := 1.000000
170 [-]: LEN       R28 R19      ; R28 := # R19
171 [-]: LOADK     R29 1        ; R29 := 1.000000
172 [-]: FORPREP   R27 179      ; R27 -= R29; PC := 179
173 [-]: GETTABLE  R31 R19 R30  ; R31 := R19[R30]
174 [-]: GETGLOBAL R32 K37      ; R32 := 0x33bdd652
175 [-]: GETTABLE  R32 R32 K38  ; R32 := R32[0x23d5322f]
176 [-]: MOVE      R33 R24      ; R33 := R24
177 [-]: GETTABLE  R34 R4 R31   ; R34 := R4[R31]
178 [-]: CALL      R32 3 1      ; R32(R33,R34)
179 [-]: FORLOOP   R27 173      ; R27 += R29; if R27 <= R28 then begin PC := 173; R30 := R27 end
180 [-]: NEWTABLE  R32 1 0      ; R32 := {}
181 [-]: LOADK     R33 0        ; R33 := 0.000000
182 [-]: SETLIST   R32 1 1      ; R32[(1-1)*FPF+i] := R(32+i), 1 <= i <= 1
183 [-]: MOVE      R25 R32      ; R25 := R32
184 [-]: JMP       200          ; PC := 200
185 [-]: GETTABLE  R32 R19 K35  ; R32 := R19[1.000000]
186 [-]: NEWTABLE  R33 1 0      ; R33 := {}
187 [-]: GETTABLE  R34 R4 R32   ; R34 := R4[R32]
188 [-]: SETLIST   R33 1 1      ; R33[(1-1)*FPF+i] := R(33+i), 1 <= i <= 1
189 [-]: MOVE      R24 R33      ; R24 := R33
190 [-]: NEWTABLE  R33 7 0      ; R33 := {}
191 [-]: LOADK     R34 2        ; R34 := 2.000000
192 [-]: LOADK     R35 8        ; R35 := 8.000000
193 [-]: LOADK     R36 13       ; R36 := 13.000000
194 [-]: LOADK     R37 21       ; R37 := 21.000000
195 [-]: LOADK     R38 17       ; R38 := 17.000000
196 [-]: LOADK     R39 27       ; R39 := 27.000000
197 [-]: LOADK     R40 32       ; R40 := 32.000000
198 [-]: SETLIST   R33 7 1      ; R33[(1-1)*FPF+i] := R(33+i), 1 <= i <= 7
199 [-]: MOVE      R25 R33      ; R25 := R33
200 [-]: GETGLOBAL R33 K40      ; R33 := 0xcfc01047
201 [-]: MOVE      R34 R24      ; R34 := R24
202 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
203 [-]: JMP       249          ; PC := 249
204 [-]: GETGLOBAL R38 K40      ; R38 := 0xcfc01047
205 [-]: GETTABLE  R39 R37 K41  ; R39 := R37["sectors"]
206 [-]: CALL      R38 2 4      ; R38,R39,R40 := R38(R39)
207 [-]: JMP       247          ; PC := 247
208 [-]: GETGLOBAL R43 K42      ; R43 := 0x64fb1586
209 [-]: GETTABLE  R44 R42 K43  ; R44 := R42["name"]
210 [-]: CALL      R43 2 2      ; R43 := R43(R44)
211 [-]: EQ        1 R43 K44    ; if R43 == "" then PC := 247
212 [-]: JMP       247          ; PC := 247
213 [-]: GETTABLE  R44 R42 K45  ; R44 := R42["nodeType"]
214 [-]: EQ        1 R44 K17    ; if R44 == 0.000000 then PC := 219
215 [-]: JMP       219          ; PC := 219
216 [-]: GETTABLE  R44 R42 K45  ; R44 := R42["nodeType"]
217 [-]: EQ        0 R44 K46    ; if R44 ~= 4.000000 then PC := 247
218 [-]: JMP       247          ; PC := 247
219 [-]: GETTABLE  R44 R42 K47  ; R44 := R42["mission"]
220 [-]: GETTABLE  R44 R44 K48  ; R44 := R44["goalTag"]
221 [-]: GETGLOBAL R45 K49      ; R45 := EMPTY_SYMBOL
222 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 247
223 [-]: JMP       247          ; PC := 247
224 [-]: GETTABLE  R44 R42 K47  ; R44 := R42["mission"]
225 [-]: GETTABLE  R44 R44 K50  ; R44 := R44["archwingRequired"]
226 [-]: TEST      R44 1        ; if R44 then PC := 247
227 [-]: JMP       247          ; PC := 247
228 [-]: GETGLOBAL R44 K51      ; R44 := 0x7b998233
229 [-]: GETTABLE  R45 R42 K47  ; R45 := R42["mission"]
230 [-]: GETTABLE  R45 R45 K52  ; R45 := R45["levelOverride"]
231 [-]: CALL      R44 2 2      ; R44 := R44(R45)
232 [-]: TEST      R44 1        ; if R44 then PC := 247
233 [-]: JMP       247          ; PC := 247
234 [-]: GETUPVAL  R44 U2       ; R44 := U2
235 [-]: GETTABLE  R44 R44 K53  ; R44 := R44[0x609b196e]
236 [-]: MOVE      R45 R25      ; R45 := R25
237 [-]: GETTABLE  R46 R42 K47  ; R46 := R42["mission"]
238 [-]: GETTABLE  R46 R46 K54  ; R46 := R46["missionType"]
239 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
240 [-]: LT        0 K17 R44    ; if 0.000000 >= R44 then PC := 247
241 [-]: JMP       247          ; PC := 247
242 [-]: GETGLOBAL R44 K37      ; R44 := 0x33bdd652
243 [-]: GETTABLE  R44 R44 K38  ; R44 := R44[0x23d5322f]
244 [-]: MOVE      R45 R18      ; R45 := R18
245 [-]: MOVE      R46 R42      ; R46 := R42
246 [-]: CALL      R44 3 1      ; R44(R45,R46)
247 [-]: TFORLOOP  R38 2        ; R41,R42 :=  R38(R39,R40); if R41 ~= nil then begin PC = 208; R40 := R41 end
248 [-]: JMP       208          ; PC := 208
249 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 204; R35 := R36 end
250 [-]: JMP       204          ; PC := 204
251 [-]: GETUPVAL  R44 U2       ; R44 := U2
252 [-]: GETTABLE  R44 R44 K39  ; R44 := R44[0xb8f73de1]
253 [-]: MOVE      R45 R18      ; R45 := R18
254 [-]: CALL      R44 2 1      ; R44(R45)
255 [-]: GETTABLE  R16 R18 K35  ; R16 := R18[1.000000]
256 [-]: TEST      R16 1        ; if R16 then PC := 260
257 [-]: JMP       260          ; PC := 260
258 [-]: LOADNIL   R44 R44      ; R44 := nil
259 [-]: RETURN    R44 2        ; return R44
260 [-]: GETGLOBAL R44 K42      ; R44 := 0x64fb1586
261 [-]: GETTABLE  R45 R16 K43  ; R45 := R16["name"]
262 [-]: CALL      R44 2 2      ; R44 := R44(R45)
263 [-]: GETTABLE  R45 R16 K47  ; R45 := R16["mission"]
264 [-]: SELF      R45 R45 K55  ; R46 := R45; R45 := R45[0x8f89d633]
265 [-]: CALL      R45 2 2      ; R45 := R45(R46)
266 [-]: SELF      R46 R45 K56  ; R47 := R45; R46 := R45[0xa76123ac]
267 [-]: CALL      R46 2 1      ; R46(R47)
268 [-]: SELF      R46 R45 K57  ; R47 := R45; R46 := R45[0x1a812eb5]
269 [-]: CALL      R46 2 1      ; R46(R47)
270 [-]: SETTABLE  R45 K58 K59  ; R45["minEnemyLevel"] := 60.000000
271 [-]: SETTABLE  R45 K60 K61  ; R45["maxEnemyLevel"] := 80.000000
272 [-]: SETTABLE  R45 K62 K35  ; R45["difficulty"] := 1.000000
273 [-]: SETTABLE  R45 K63 K64  ; R45["maxSuitReq"] := true
274 [-]: SETTABLE  R45 K65 R6   ; R45["periodicMissionTag"] := R6
275 [-]: GETUPVAL  R46 U0       ; R46 := U0
276 [-]: GETTABLE  R46 R46 K0   ; R46 := R46["ELITE_ALERT_MISSION_INTERVAL"]
277 [-]: SETTABLE  R45 K66 R46  ; R45["periodicMissionCooldown"] := R46
278 [-]: GETGLOBAL R46 K68      ; R46 := 0x0032441c
279 [-]: GETTABLE  R46 R46 K69  ; R46 := R46["UITexture_EliteAlert"]
280 [-]: SETTABLE  R45 K67 R46  ; R45["icon"] := R46
281 [-]: GETTABLE  R46 R45 K54  ; R46 := R45["missionType"]
282 [-]: EQ        0 R46 K70    ; if R46 ~= 8.000000 then PC := 291
283 [-]: JMP       291          ; PC := 291
284 [-]: GETTABLE  R46 R16 K71  ; R46 := R16["region"]
285 [-]: GETUPVAL  R47 U0       ; R47 := U0
286 [-]: GETTABLE  R47 R47 K72  ; R47 := R47["REGION_ID_MOON"]
287 [-]: EQ        1 R46 R47    ; if R46 == R47 then PC := 291
288 [-]: JMP       291          ; PC := 291
289 [-]: GETUPVAL  R46 U3       ; R46 := U3
290 [-]: SETTABLE  R45 K73 R46  ; R45["vipAgent"] := R46
291 [-]: GETTABLE  R46 R45 K50  ; R46 := R45["archwingRequired"]
292 [-]: TEST      R46 0        ; if not R46 then PC := 296
293 [-]: JMP       296          ; PC := 296
294 [-]: GETTABLE  R46 R45 K74  ; R46 := R45["isSharkwingMission"]
295 [-]: NOT       R46 R46      ; R46 := not R46
296 [-]: TEST      R46 0        ; if not R46 then PC := 304
297 [-]: JMP       304          ; PC := 304
298 [-]: GETTABLE  R47 R45 K58  ; R47 := R45["minEnemyLevel"]
299 [-]: DIV       R47 R47 K16  ; R47 := R47 / 2.000000
300 [-]: SETTABLE  R45 K58 R47  ; R45["minEnemyLevel"] := R47
301 [-]: GETTABLE  R47 R45 K60  ; R47 := R45["maxEnemyLevel"]
302 [-]: DIV       R47 R47 K16  ; R47 := R47 / 2.000000
303 [-]: SETTABLE  R45 K60 R47  ; R45["maxEnemyLevel"] := R47
304 [-]: GETGLOBAL R47 K75      ; R47 := 0x84883f05
305 [-]: GETTABLE  R48 R45 K76  ; R48 := R45["seed"]
306 [-]: GETUPVAL  R49 U0       ; R49 := U0
307 [-]: GETTABLE  R49 R49 K15  ; R49 := R49[0xb53a8957]
308 [-]: CALL      R49 1 2      ; R49 := R49()
309 [-]: MOD       R49 R49 K77  ; R49 := R49 % 24.000000
310 [-]: CALL      R47 3 1      ; R47(R48,R49)
311 [-]: GETGLOBAL R47 K78      ; R47 := 0x0997dbe6
312 [-]: GETGLOBAL R48 K79      ; R48 := 0x0c5e62f9
313 [-]: LOADK     R49 0        ; R49 := 0.000000
314 [-]: LOADK     R50 K80      ; R50 := 1000000.000000
315 [-]: CALL      R48 3 0      ; R48,... := R48(R49,R50)
316 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
317 [-]: SETTABLE  R45 K76 R47  ; R45["seed"] := R47
318 [-]: GETTABLE  R47 R45 K81  ; R47 := R45["missionReward"]
319 [-]: SETTABLE  R47 K82 K83  ; R47["credits"] := 50000.000000
320 [-]: GETTABLE  R47 R45 K81  ; R47 := R45["missionReward"]
321 [-]: NEWTABLE  R48 0 0      ; R48 := {}
322 [-]: GETGLOBAL R49 K28      ; R49 := 0x6c97a788
323 [-]: GETTABLE  R49 R49 K85  ; R49 := R49[0x925e2bbb]
324 [-]: GETUPVAL  R50 U4       ; R50 := U4
325 [-]: LOADK     R51 1        ; R51 := 1.000000
326 [-]: CALL      R49 3 0      ; R49,... := R49(R50,R51)
327 [-]: SETLIST   R48 0 1      ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 0
328 [-]: SETTABLE  R47 K84 R48  ; R47["countedItems"] := R48
329 [-]: GETTABLE  R47 R45 K81  ; R47 := R45["missionReward"]
330 [-]: GETGLOBAL R48 K87      ; R48 := 0xb009bbc6
331 [-]: GETGLOBAL R49 K88      ; R49 := 0xa94df70b
332 [-]: SELF      R49 R49 K89  ; R50 := R49; R49 := R49[0xc3b3ec6b]
333 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
334 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
335 [-]: SETTABLE  R47 K86 R48  ; R47["randomizedItems"] := R48
336 [-]: SELF      R47 R45 K90  ; R48 := R45; R47 := R45[0xafd5ace5]
337 [-]: LOADK     R49 19       ; R49 := 19.000000
338 [-]: LOADK     R50 3        ; R50 := 3.000000
339 [-]: LOADK     R51 10000    ; R51 := 10000.000000
340 [-]: GETGLOBAL R52 K92      ; R52 := gTennoAvatarType
341 [-]: LOADNIL   R53 R53      ; R53 := nil
342 [-]: LOADK     R54 25       ; R54 := 25.000000
343 [-]: GETGLOBAL R55 K49      ; R55 := EMPTY_SYMBOL
344 [-]: CALL      R47 9 1      ; R47(R48,R49,R50,R51,R52,R53,R54,R55)
345 [-]: GETUPVAL  R47 U0       ; R47 := U0
346 [-]: GETTABLE  R47 R47 K93  ; R47 := R47[0x67839867]
347 [-]: GETGLOBAL R48 K94      ; R48 := 0x76ea806b
348 [-]: SELF      R48 R48 K95  ; R49 := R48; R48 := R48[0x3f3ae64c]
349 [-]: LOADK     R50 0        ; R50 := 0.000000
350 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
351 [-]: SELF      R48 R48 K96  ; R49 := R48; R48 := R48[0x5ca33548]
352 [-]: CALL      R48 2 2      ; R48 := R48(R49)
353 [-]: MOVE      R49 R45      ; R49 := R45
354 [-]: CALL      R47 3 9      ; R47,R48,R49,R50,R51,R52,R53,R54 := R47(R48,R49)
355 [-]: GETGLOBAL R55 K6       ; R55 := _T
356 [-]: GETTABLE  R55 R55 K7   ; R55 := R55["CachedEliteAlertMissions"]
357 [-]: NEWTABLE  R56 0 10     ; R56 := {}
358 [-]: SETTABLE  R56 K97 R45  ; R56["mMissionInfo"] := R45
359 [-]: TESTSET   R57 R15 0    ; if not R15 then PC := 362 else R57 := R15
360 [-]: JMP       362          ; PC := 362
361 [-]: MOVE      R57 R8       ; R57 := R8
362 [-]: SETTABLE  R56 K98 R57  ; R56["mUnlocked"] := R57
363 [-]: SETTABLE  R56 K99 R15  ; R56["mVisible"] := R15
364 [-]: TESTSET   R57 R15 0    ; if not R15 then PC := 367 else R57 := R15
365 [-]: JMP       367          ; PC := 367
366 [-]: MOVE      R57 R8       ; R57 := R8
367 [-]: SETTABLE  R56 K100 R57 ; R56["mShowInStarChart"] := R57
368 [-]: SETTABLE  R56 K101 R5  ; R56["mExpiry"] := R5
369 [-]: SETTABLE  R56 K102 R47 ; R56["mSuitStoreItem"] := R47
370 [-]: GETTABLE  R57 R50 K104 ; R57 := R50["label"]
371 [-]: SETTABLE  R56 K103 R57 ; R56["mSuitMod"] := R57
372 [-]: SETTABLE  R56 K105 R51 ; R56["mWeaponStoreItem"] := R51
373 [-]: GETTABLE  R57 R54 K104 ; R57 := R54["label"]
374 [-]: SETTABLE  R56 K106 R57 ; R56["mWeaponMod"] := R57
375 [-]: SETTABLE  R56 K107 R7  ; R56["mCompleted"] := R7
376 [-]: SETTABLE  R55 R44 R56  ; R55[R44] := R56
377 [-]: GETGLOBAL R55 K108     ; R55 := 0x3d106989
378 [-]: LOADK     R56 K109     ; R56 := "EliteAlertMission at "
379 [-]: MOVE      R57 R44      ; R57 := R44
380 [-]: LOADK     R58 K110     ; R58 := " ("
381 [-]: GETGLOBAL R59 K111     ; R59 := 0x603636ad
382 [-]: GETTABLE  R60 R16 K71  ; R60 := R16["region"]
383 [-]: ADD       R60 R60 K35  ; R60 := R60 + 1.000000
384 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
385 [-]: GETTABLE  R60 R60 K43  ; R60 := R60["name"]
386 [-]: LOADBOOL  R61 0 0      ; R61 := false
387 [-]: CALL      R59 3 2      ; R59 := R59(R60,R61)
388 [-]: LOADK     R60 K112     ; R60 := " - "
389 [-]: GETGLOBAL R61 K111     ; R61 := 0x603636ad
390 [-]: GETGLOBAL R62 K42      ; R62 := 0x64fb1586
391 [-]: GETTABLE  R63 R16 K113 ; R63 := R16["locTag"]
392 [-]: CALL      R62 2 2      ; R62 := R62(R63)
393 [-]: LOADBOOL  R63 0 0      ; R63 := false
394 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
395 [-]: LOADK     R62 K114     ; R62 := ")"
396 [-]: CONCAT    R56 R56 R62  ; R56 := R56 .. R57 .. R58 .. R59 .. R60 .. R61 .. R62
397 [-]: CALL      R55 2 1      ; R55(R56)
398 [-]: RETURN    R1 2         ; return R1
399 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 2799
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x9718be96]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["NIGHTMARE_MISSION_INTERVAL"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mWorldStateLastNightmareSeed"]
  8 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: SETTABLE  R2 K3 R1     ; R2["mWorldStateLastNightmareSeed"] := R1
 13 [-]: GETGLOBAL R2 K4        ; R2 := _T
 14 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 15 [-]: SETTABLE  R2 K5 R3     ; R2["CachedSkullNodes"] := R3
 16 [-]: GETGLOBAL R2 K6        ; R2 := 0x1239e0a2
 17 [-]: CALL      R2 1 2       ; R2 := R2()
 18 [-]: TEST      R2 0         ; if not R2 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0x9ba7909f
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xbf9494fc]
 23 [-]: LOADK     R4 K9        ; R4 := "LotusGameRules.AlwaysNightmare"
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: LOADBOOL  R3 0 0       ; R3 := false
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETTABLE  R4 R4 K10    ; R4 := R4[0x5e35d4d6]
 28 [-]: CALL      R4 1 2       ; R4 := R4()
 29 [-]: SELF      R5 R4 K11    ; R6 := R4; R5 := R4[0xc1dee03f]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: SELF      R6 R4 K12    ; R7 := R4; R6 := R4[0xd13b47be]
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 34 [-]: LOADK     R8 1         ; R8 := 1.000000
 35 [-]: LEN       R9 R5        ; R9 := # R5
 36 [-]: LOADK     R10 1        ; R10 := 1.000000
 37 [-]: FORPREP   R8 43        ; R8 -= R10; PC := 43
 38 [-]: GETGLOBAL R12 K13      ; R12 := 0x33bdd652
 39 [-]: GETTABLE  R12 R12 K14  ; R12 := R12[0x23d5322f]
 40 [-]: MOVE      R13 R7       ; R13 := R7
 41 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 42 [-]: CALL      R12 3 1      ; R12(R13,R14)
 43 [-]: FORLOOP   R8 38        ; R8 += R10; if R8 <= R9 then begin PC := 38; R11 := R8 end
 44 [-]: LOADK     R12 1        ; R12 := 1.000000
 45 [-]: LEN       R13 R6       ; R13 := # R6
 46 [-]: LOADK     R14 1        ; R14 := 1.000000
 47 [-]: FORPREP   R12 59       ; R12 -= R14; PC := 59
 48 [-]: GETGLOBAL R16 K15      ; R16 := 0xce225efa
 49 [-]: LOADK     R17 0        ; R17 := 0.000000
 50 [-]: CALL      R16 2 1      ; R16(R17)
 51 [-]: GETTABLE  R16 R6 R15   ; R16 := R6[R15]
 52 [-]: GETTABLE  R17 R16 K16  ; R17 := R16["region"]
 53 [-]: ADD       R17 R17 K17  ; R17 := R17 + 1.000000
 54 [-]: GETGLOBAL R18 K13      ; R18 := 0x33bdd652
 55 [-]: GETTABLE  R18 R18 K14  ; R18 := R18[0x23d5322f]
 56 [-]: GETTABLE  R19 R7 R17   ; R19 := R7[R17]
 57 [-]: MOVE      R20 R16      ; R20 := R16
 58 [-]: CALL      R18 3 1      ; R18(R19,R20)
 59 [-]: FORLOOP   R12 48       ; R12 += R14; if R12 <= R13 then begin PC := 48; R15 := R12 end
 60 [-]: GETGLOBAL R18 K18      ; R18 := 0x4f6851ff
 61 [-]: MOVE      R19 R1       ; R19 := R1
 62 [-]: CALL      R18 2 1      ; R18(R19)
 63 [-]: LOADK     R18 1        ; R18 := 1.000000
 64 [-]: LEN       R19 R5       ; R19 := # R5
 65 [-]: LOADK     R20 1        ; R20 := 1.000000
 66 [-]: FORPREP   R18 75       ; R18 -= R20; PC := 75
 67 [-]: GETTABLE  R22 R7 R21   ; R22 := R7[R21]
 68 [-]: LEN       R22 R22      ; R22 := # R22
 69 [-]: LT        0 K19 R22    ; if 0.000000 >= R22 then PC := 75
 70 [-]: JMP       75           ; PC := 75
 71 [-]: GETUPVAL  R22 U2       ; R22 := U2
 72 [-]: GETTABLE  R22 R22 K20  ; R22 := R22[0xb8f73de1]
 73 [-]: GETTABLE  R23 R7 R21   ; R23 := R7[R21]
 74 [-]: CALL      R22 2 1      ; R22(R23)
 75 [-]: FORLOOP   R18 67       ; R18 += R20; if R18 <= R19 then begin PC := 67; R21 := R18 end
 76 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 77 [-]: LOADK     R23 1        ; R23 := 1.000000
 78 [-]: LEN       R24 R5       ; R24 := # R5
 79 [-]: LOADK     R25 1        ; R25 := 1.000000
 80 [-]: FORPREP   R23 237      ; R23 -= R25; PC := 237
 81 [-]: GETTABLE  R27 R5 R26   ; R27 := R5[R26]
 82 [-]: SELF      R27 R27 K21  ; R28 := R27; R27 := R27[0x699fd1e2]
 83 [-]: CALL      R27 2 2      ; R27 := R27(R28)
 84 [-]: EQ        1 R27 K23    ; if R27 == 2.000000 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: TESTSET   R27 R3 1     ; if R3 then PC := 92 else R27 := R3
 87 [-]: JMP       92           ; PC := 92
 88 [-]: MOVE      R27 R2       ; R27 := R2
 89 [-]: JMP       92           ; PC := 92
 90 [-]: LOADBOOL  R27 0 1      ; R27 := false; PC := 91
 91 [-]: LOADBOOL  R27 1 0      ; R27 := true
 92 [-]: LOADK     R28 K24      ; R28 := "NightmareRegion"
 93 [-]: MOVE      R29 R26      ; R29 := R26
 94 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
 95 [-]: GETUPVAL  R29 U0       ; R29 := U0
 96 [-]: GETTABLE  R29 R29 K25  ; R29 := R29["REGION_ID_DOJO"]
 97 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
 98 [-]: JMP       119          ; PC := 119
 99 [-]: GETUPVAL  R29 U0       ; R29 := U0
100 [-]: GETTABLE  R29 R29 K26  ; R29 := R29["REGION_ID_DARK_SECTOR"]
101 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
102 [-]: JMP       119          ; PC := 119
103 [-]: GETUPVAL  R29 U0       ; R29 := U0
104 [-]: GETTABLE  R29 R29 K27  ; R29 := R29["REGION_ID_DEEP_SPACE"]
105 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
106 [-]: JMP       119          ; PC := 119
107 [-]: GETUPVAL  R29 U0       ; R29 := U0
108 [-]: GETTABLE  R29 R29 K28  ; R29 := R29["REGION_ID_ZARIMAN"]
109 [-]: EQ        1 R26 R29    ; if R26 == R29 then PC := 119
110 [-]: JMP       119          ; PC := 119
111 [-]: SELF      R29 R0 K29   ; R30 := R0; R29 := R0[0xc3150d06]
112 [-]: GETGLOBAL R31 K30      ; R31 := 0x0469f296
113 [-]: MOVE      R32 R28      ; R32 := R28
114 [-]: CALL      R31 2 2      ; R31 := R31(R32)
115 [-]: GETUPVAL  R32 U0       ; R32 := U0
116 [-]: GETTABLE  R32 R32 K2   ; R32 := R32["NIGHTMARE_MISSION_INTERVAL"]
117 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
118 [-]: JMP       121          ; PC := 121
119 [-]: LOADBOOL  R29 0 1      ; R29 := false; PC := 120
120 [-]: LOADBOOL  R29 1 0      ; R29 := true
121 [-]: TEST      R27 0        ; if not R27 then PC := 237
122 [-]: JMP       237          ; PC := 237
123 [-]: TEST      R29 0        ; if not R29 then PC := 237
124 [-]: JMP       237          ; PC := 237
125 [-]: GETTABLE  R30 R7 R26   ; R30 := R7[R26]
126 [-]: LEN       R30 R30      ; R30 := # R30
127 [-]: LT        0 K19 R30    ; if 0.000000 >= R30 then PC := 237
128 [-]: JMP       237          ; PC := 237
129 [-]: LOADNIL   R30 R30      ; R30 := nil
130 [-]: TEST      R2 0         ; if not R2 then PC := 135
131 [-]: JMP       135          ; PC := 135
132 [-]: GETTABLE  R31 R7 R26   ; R31 := R7[R26]
133 [-]: LEN       R30 R31      ; R30 := # R31
134 [-]: JMP       136          ; PC := 136
135 [-]: LOADK     R30 1        ; R30 := 1.000000
136 [-]: LOADK     R31 1        ; R31 := 1.000000
137 [-]: GETTABLE  R32 R7 R26   ; R32 := R7[R26]
138 [-]: LEN       R32 R32      ; R32 := # R32
139 [-]: LOADK     R33 1        ; R33 := 1.000000
140 [-]: FORPREP   R31 236      ; R31 -= R33; PC := 236
141 [-]: GETTABLE  R35 R7 R26   ; R35 := R7[R26]
142 [-]: GETTABLE  R35 R35 R34  ; R35 := R35[R34]
143 [-]: GETGLOBAL R36 K31      ; R36 := 0x64fb1586
144 [-]: GETTABLE  R37 R35 K32  ; R37 := R35["name"]
145 [-]: CALL      R36 2 2      ; R36 := R36(R37)
146 [-]: EQ        1 R36 K33    ; if R36 == "" then PC := 236
147 [-]: JMP       236          ; PC := 236
148 [-]: GETGLOBAL R37 K34      ; R37 := 0x7b998233
149 [-]: GETTABLE  R38 R35 K35  ; R38 := R35["mission"]
150 [-]: GETTABLE  R38 R38 K36  ; R38 := R38["levelOverride"]
151 [-]: CALL      R37 2 2      ; R37 := R37(R38)
152 [-]: TEST      R37 1        ; if R37 then PC := 236
153 [-]: JMP       236          ; PC := 236
154 [-]: GETTABLE  R37 R35 K37  ; R37 := R35["nodeType"]
155 [-]: EQ        0 R37 K19    ; if R37 ~= 0.000000 then PC := 236
156 [-]: JMP       236          ; PC := 236
157 [-]: GETGLOBAL R37 K4       ; R37 := _T
158 [-]: GETTABLE  R37 R37 K38  ; R37 := R37["CachedSortieMissions"]
159 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
160 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
161 [-]: JMP       236          ; PC := 236
162 [-]: GETGLOBAL R37 K4       ; R37 := _T
163 [-]: GETTABLE  R37 R37 K40  ; R37 := R37["CachedActiveMissions"]
164 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
165 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
166 [-]: JMP       236          ; PC := 236
167 [-]: GETGLOBAL R37 K4       ; R37 := _T
168 [-]: GETTABLE  R37 R37 K41  ; R37 := R37["CachedAlerts"]
169 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
170 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
171 [-]: JMP       236          ; PC := 236
172 [-]: GETGLOBAL R37 K4       ; R37 := _T
173 [-]: GETTABLE  R37 R37 K42  ; R37 := R37["CachedInvasionInfo"]
174 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
175 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
176 [-]: JMP       236          ; PC := 236
177 [-]: GETGLOBAL R37 K43      ; R37 := 0x0032441c
178 [-]: GETTABLE  R37 R37 K44  ; R37 := R37["CachedGoalInfo"]
179 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
180 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
181 [-]: JMP       236          ; PC := 236
182 [-]: GETGLOBAL R37 K43      ; R37 := 0x0032441c
183 [-]: GETTABLE  R37 R37 K45  ; R37 := R37["MergedGoalNodes"]
184 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
185 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
186 [-]: JMP       236          ; PC := 236
187 [-]: GETGLOBAL R37 K4       ; R37 := _T
188 [-]: GETTABLE  R37 R37 K46  ; R37 := R37["CachedSyndicateMissions"]
189 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
190 [-]: EQ        0 R37 K39    ; if R37 ~= nil then PC := 236
191 [-]: JMP       236          ; PC := 236
192 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
193 [-]: GETTABLE  R37 R37 K47  ; R37 := R37["archwingRequired"]
194 [-]: TEST      R37 0        ; if not R37 then PC := 200
195 [-]: JMP       200          ; PC := 200
196 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
197 [-]: GETTABLE  R37 R37 K48  ; R37 := R37["isSharkwingMission"]
198 [-]: TEST      R37 0        ; if not R37 then PC := 236
199 [-]: JMP       236          ; PC := 236
200 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
201 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
202 [-]: EQ        1 R37 K50    ; if R37 == 22.000000 then PC := 236
203 [-]: JMP       236          ; PC := 236
204 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
205 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
206 [-]: EQ        1 R37 K51    ; if R37 == 28.000000 then PC := 236
207 [-]: JMP       236          ; PC := 236
208 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
209 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
210 [-]: EQ        1 R37 K52    ; if R37 == 36.000000 then PC := 236
211 [-]: JMP       236          ; PC := 236
212 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
213 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
214 [-]: EQ        1 R37 K53    ; if R37 == 30.000000 then PC := 236
215 [-]: JMP       236          ; PC := 236
216 [-]: GETTABLE  R37 R35 K35  ; R37 := R35["mission"]
217 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["missionType"]
218 [-]: EQ        1 R37 K54    ; if R37 == 31.000000 then PC := 236
219 [-]: JMP       236          ; PC := 236
220 [-]: SELF      R37 R4 K55   ; R38 := R4; R37 := R4[0x3ad9ed31]
221 [-]: GETTABLE  R39 R35 K32  ; R39 := R35["name"]
222 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
223 [-]: GETTABLE  R37 R37 K35  ; R37 := R37["mission"]
224 [-]: GETTABLE  R37 R37 K56  ; R37 := R37["faction"]
225 [-]: GETTABLE  R38 R35 K35  ; R38 := R35["mission"]
226 [-]: GETTABLE  R38 R38 K56  ; R38 := R38["faction"]
227 [-]: EQ        0 R38 R37    ; if R38 ~= R37 then PC := 236
228 [-]: JMP       236          ; PC := 236
229 [-]: LEN       R38 R22      ; R38 := # R22
230 [-]: ADD       R38 R38 K17  ; R38 := R38 + 1.000000
231 [-]: SETTABLE  R22 R38 R35  ; R22[R38] := R35
232 [-]: SUB       R30 R30 K17  ; R30 := R30 - 1.000000
233 [-]: EQ        0 R30 K19    ; if R30 ~= 0.000000 then PC := 236
234 [-]: JMP       236          ; PC := 236
235 [-]: JMP       237          ; PC := 237
236 [-]: FORLOOP   R31 141      ; R31 += R33; if R31 <= R32 then begin PC := 141; R34 := R31 end
237 [-]: FORLOOP   R23 81       ; R23 += R25; if R23 <= R24 then begin PC := 81; R26 := R23 end
238 [-]: SELF      R38 R0 K57   ; R39 := R0; R38 := R0[0x69727e0b]
239 [-]: CALL      R38 2 2      ; R38 := R38(R39)
240 [-]: SELF      R38 R38 K58  ; R39 := R38; R38 := R38[0x21fec8ad]
241 [-]: GETGLOBAL R40 K30      ; R40 := 0x0469f296
242 [-]: LOADK     R41 K59      ; R41 := "Nightmare"
243 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
244 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
245 [-]: LOADK     R39 1        ; R39 := 1.000000
246 [-]: LEN       R40 R38      ; R40 := # R38
247 [-]: LOADK     R41 1        ; R41 := 1.000000
248 [-]: FORPREP   R39 255      ; R39 -= R41; PC := 255
249 [-]: LEN       R43 R22      ; R43 := # R22
250 [-]: ADD       R43 R43 K17  ; R43 := R43 + 1.000000
251 [-]: SELF      R44 R4 K55   ; R45 := R4; R44 := R4[0x3ad9ed31]
252 [-]: GETTABLE  R46 R38 R42  ; R46 := R38[R42]
253 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
254 [-]: SETTABLE  R22 R43 R44  ; R22[R43] := R44
255 [-]: FORLOOP   R39 249      ; R39 += R41; if R39 <= R40 then begin PC := 249; R42 := R39 end
256 [-]: LOADK     R43 1        ; R43 := 1.000000
257 [-]: LEN       R44 R22      ; R44 := # R22
258 [-]: LOADK     R45 1        ; R45 := 1.000000
259 [-]: FORPREP   R43 271      ; R43 -= R45; PC := 271
260 [-]: GETTABLE  R47 R22 R46  ; R47 := R22[R46]
261 [-]: GETUPVAL  R48 U0       ; R48 := U0
262 [-]: GETTABLE  R48 R48 K60  ; R48 := R48[0x860b26c6]
263 [-]: GETTABLE  R49 R47 K35  ; R49 := R47["mission"]
264 [-]: CALL      R48 2 2      ; R48 := R48(R49)
265 [-]: GETGLOBAL R49 K31      ; R49 := 0x64fb1586
266 [-]: GETTABLE  R50 R47 K32  ; R50 := R47["name"]
267 [-]: CALL      R49 2 2      ; R49 := R49(R50)
268 [-]: GETGLOBAL R50 K4       ; R50 := _T
269 [-]: GETTABLE  R50 R50 K5   ; R50 := R50["CachedSkullNodes"]
270 [-]: SETTABLE  R50 R49 R48  ; R50[R49] := R48
271 [-]: FORLOOP   R43 260      ; R43 += R45; if R43 <= R44 then begin PC := 260; R46 := R43 end
272 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 2904
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  52

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xce225efa
  2 [-]: LOADK     R2 0         ; R2 := 0.000000
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K1        ; R1 := _T
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: SETTABLE  R1 K2 R2     ; R1["CachedHardModeDailyMissions"] := R2
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xffd438ab
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x34291f5c
 10 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x9718be96]
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["HARD_MODE_DAILY_MISSION_INTERVAL"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: GETGLOBAL R3 K7        ; R3 := 0x4f6851ff
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x5e35d4d6]
 19 [-]: CALL      R3 1 2       ; R3 := R3()
 20 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xc1dee03f]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 23 [-]: LOADK     R6 1         ; R6 := 1.000000
 24 [-]: LEN       R7 R4        ; R7 := # R4
 25 [-]: LOADK     R8 1         ; R8 := 1.000000
 26 [-]: FORPREP   R6 97        ; R6 -= R8; PC := 97
 27 [-]: GETTABLE  R10 R4 R9    ; R10 := R4[R9]
 28 [-]: GETUPVAL  R11 U0       ; R11 := U0
 29 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["REGION_ID_DOJO"]
 30 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 31 [-]: JMP       97           ; PC := 97
 32 [-]: GETUPVAL  R11 U0       ; R11 := U0
 33 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["REGION_ID_DARK_SECTOR"]
 34 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 35 [-]: JMP       97           ; PC := 97
 36 [-]: GETUPVAL  R11 U0       ; R11 := U0
 37 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["REGION_ID_DEEP_SPACE"]
 38 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 39 [-]: JMP       97           ; PC := 97
 40 [-]: GETUPVAL  R11 U0       ; R11 := U0
 41 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["REGION_ID_ZARIMAN"]
 42 [-]: EQ        1 R9 R11     ; if R9 == R11 then PC := 97
 43 [-]: JMP       97           ; PC := 97
 44 [-]: LEN       R11 R5       ; R11 := # R5
 45 [-]: ADD       R11 R11 K14  ; R11 := R11 + 1.000000
 46 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 47 [-]: SETTABLE  R5 R11 R12   ; R5[R11] := R12
 48 [-]: GETGLOBAL R12 K15      ; R12 := 0xcfc01047
 49 [-]: GETTABLE  R13 R10 K16  ; R13 := R10["sectors"]
 50 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 51 [-]: JMP       91           ; PC := 91
 52 [-]: GETTABLE  R17 R16 K17  ; R17 := R16["name"]
 53 [-]: GETTABLE  R18 R16 K18  ; R18 := R16["mission"]
 54 [-]: GETTABLE  R19 R18 K19  ; R19 := R18["missionType"]
 55 [-]: GETGLOBAL R20 K20      ; R20 := EMPTY_SYMBOL
 56 [-]: EQ        1 R17 R20    ; if R17 == R20 then PC := 91
 57 [-]: JMP       91           ; PC := 91
 58 [-]: GETTABLE  R20 R16 K21  ; R20 := R16["nodeType"]
 59 [-]: EQ        1 R20 K23    ; if R20 == 0.000000 then PC := 64
 60 [-]: JMP       64           ; PC := 64
 61 [-]: GETTABLE  R20 R16 K21  ; R20 := R16["nodeType"]
 62 [-]: EQ        0 R20 K24    ; if R20 ~= 4.000000 then PC := 91
 63 [-]: JMP       91           ; PC := 91
 64 [-]: GETTABLE  R20 R18 K25  ; R20 := R18["goalTag"]
 65 [-]: GETGLOBAL R21 K20      ; R21 := EMPTY_SYMBOL
 66 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 91
 67 [-]: JMP       91           ; PC := 91
 68 [-]: GETGLOBAL R20 K26      ; R20 := 0x7b998233
 69 [-]: GETTABLE  R21 R18 K27  ; R21 := R18["levelOverride"]
 70 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 71 [-]: TEST      R20 1        ; if R20 then PC := 91
 72 [-]: JMP       91           ; PC := 91
 73 [-]: EQ        1 R19 K28    ; if R19 == 31.000000 then PC := 91
 74 [-]: JMP       91           ; PC := 91
 75 [-]: EQ        1 R19 K29    ; if R19 == 22.000000 then PC := 91
 76 [-]: JMP       91           ; PC := 91
 77 [-]: EQ        1 R19 K30    ; if R19 == 36.000000 then PC := 91
 78 [-]: JMP       91           ; PC := 91
 79 [-]: EQ        1 R19 K31    ; if R19 == 28.000000 then PC := 91
 80 [-]: JMP       91           ; PC := 91
 81 [-]: GETGLOBAL R20 K32      ; R20 := 0x33bdd652
 82 [-]: GETTABLE  R20 R20 K33  ; R20 := R20[0x23d5322f]
 83 [-]: GETTABLE  R21 R5 R11   ; R21 := R5[R11]
 84 [-]: NEWTABLE  R22 0 2      ; R22 := {}
 85 [-]: GETGLOBAL R23 K35      ; R23 := 0x64fb1586
 86 [-]: MOVE      R24 R17      ; R24 := R17
 87 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 88 [-]: SETTABLE  R22 K34 R23  ; R22["nodeName"] := R23
 89 [-]: SETTABLE  R22 K19 R19  ; R22["missionType"] := R19
 90 [-]: CALL      R20 3 1      ; R20(R21,R22)
 91 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 52; R14 := R15 end
 92 [-]: JMP       52           ; PC := 52
 93 [-]: GETUPVAL  R20 U1       ; R20 := U1
 94 [-]: GETTABLE  R20 R20 K36  ; R20 := R20[0xb8f73de1]
 95 [-]: GETTABLE  R21 R5 R11   ; R21 := R5[R11]
 96 [-]: CALL      R20 2 1      ; R20(R21)
 97 [-]: FORLOOP   R6 27        ; R6 += R8; if R6 <= R7 then begin PC := 27; R9 := R6 end
 98 [-]: LOADK     R20 5        ; R20 := 5.000000
 99 [-]: GETUPVAL  R21 U1       ; R21 := U1
100 [-]: GETTABLE  R21 R21 K37  ; R21 := R21[0x06d055f9]
101 [-]: GETUPVAL  R22 U0       ; R22 := U0
102 [-]: GETTABLE  R22 R22 K38  ; R22 := R22[0xe3ee0517]
103 [-]: CALL      R22 1 2      ; R22 := R22()
104 [-]: MOD       R22 R22 K39  ; R22 := R22 % 2.000000
105 [-]: EQ        1 R22 K23    ; if R22 == 0.000000 then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 108
108 [-]: LOADBOOL  R22 1 0      ; R22 := true
109 [-]: LOADK     R23 0        ; R23 := 0.000000
110 [-]: MOVE      R24 R20      ; R24 := R20
111 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
112 [-]: LOADK     R22 1        ; R22 := 1.000000
113 [-]: LOADK     R23 10       ; R23 := 10.000000
114 [-]: LOADK     R24 1        ; R24 := 1.000000
115 [-]: FORPREP   R22 146      ; R22 -= R24; PC := 146
116 [-]: GETUPVAL  R26 U1       ; R26 := U1
117 [-]: GETTABLE  R26 R26 K36  ; R26 := R26[0xb8f73de1]
118 [-]: MOVE      R27 R5       ; R27 := R5
119 [-]: CALL      R26 2 1      ; R26(R27)
120 [-]: LOADK     R26 0        ; R26 := 0.000000
121 [-]: LOADK     R27 1        ; R27 := 1.000000
122 [-]: MOVE      R28 R20      ; R28 := R20
123 [-]: LOADK     R29 1        ; R29 := 1.000000
124 [-]: FORPREP   R27 142      ; R27 -= R29; PC := 142
125 [-]: GETTABLE  R31 R5 R30   ; R31 := R5[R30]
126 [-]: TEST      R31 0        ; if not R31 then PC := 142
127 [-]: JMP       142          ; PC := 142
128 [-]: GETTABLE  R31 R5 R30   ; R31 := R5[R30]
129 [-]: LEN       R31 R31      ; R31 := # R31
130 [-]: LT        0 K23 R31    ; if 0.000000 >= R31 then PC := 142
131 [-]: JMP       142          ; PC := 142
132 [-]: GETTABLE  R31 R5 R30   ; R31 := R5[R30]
133 [-]: GETTABLE  R31 R31 K14  ; R31 := R31[1.000000]
134 [-]: GETTABLE  R31 R31 K19  ; R31 := R31["missionType"]
135 [-]: EQ        1 R31 K14    ; if R31 == 1.000000 then PC := 141
136 [-]: JMP       141          ; PC := 141
137 [-]: EQ        1 R31 K40    ; if R31 == 5.000000 then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: EQ        0 R31 K41    ; if R31 ~= 3.000000 then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: ADD       R26 R26 K14  ; R26 := R26 + 1.000000
142 [-]: FORLOOP   R27 125      ; R27 += R29; if R27 <= R28 then begin PC := 125; R30 := R27 end
143 [-]: LT        0 R26 K41    ; if R26 >= 3.000000 then PC := 146
144 [-]: JMP       146          ; PC := 146
145 [-]: JMP       147          ; PC := 147
146 [-]: FORLOOP   R22 116      ; R22 += R24; if R22 <= R23 then begin PC := 116; R25 := R22 end
147 [-]: SELF      R32 R0 K42   ; R33 := R0; R32 := R0[0x69727e0b]
148 [-]: CALL      R32 2 2      ; R32 := R32(R33)
149 [-]: SELF      R32 R32 K43  ; R33 := R32; R32 := R32[0x21fec8ad]
150 [-]: GETGLOBAL R34 K44      ; R34 := 0x0469f296
151 [-]: LOADK     R35 K45      ; R35 := "SteelPath"
152 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
153 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
154 [-]: TEST      R32 0        ; if not R32 then PC := 184
155 [-]: JMP       184          ; PC := 184
156 [-]: LEN       R33 R32      ; R33 := # R32
157 [-]: LT        0 K23 R33    ; if 0.000000 >= R33 then PC := 184
158 [-]: JMP       184          ; PC := 184
159 [-]: LOADK     R33 1        ; R33 := 1.000000
160 [-]: LEN       R34 R32      ; R34 := # R32
161 [-]: LOADK     R35 1        ; R35 := 1.000000
162 [-]: FORPREP   R33 181      ; R33 -= R35; PC := 181
163 [-]: SELF      R37 R3 K46   ; R38 := R3; R37 := R3[0x3ad9ed31]
164 [-]: GETGLOBAL R39 K44      ; R39 := 0x0469f296
165 [-]: GETTABLE  R40 R32 R36  ; R40 := R32[R36]
166 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
167 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
168 [-]: ADD       R38 R20 R36  ; R38 := R20 + R36
169 [-]: NEWTABLE  R39 1 1      ; R39 := {}
170 [-]: NEWTABLE  R40 0 2      ; R40 := {}
171 [-]: GETGLOBAL R41 K35      ; R41 := 0x64fb1586
172 [-]: GETTABLE  R42 R37 K17  ; R42 := R37["name"]
173 [-]: CALL      R41 2 2      ; R41 := R41(R42)
174 [-]: SETTABLE  R40 K34 R41  ; R40["nodeName"] := R41
175 [-]: GETTABLE  R41 R37 K18  ; R41 := R37["mission"]
176 [-]: GETTABLE  R41 R41 K19  ; R41 := R41["missionType"]
177 [-]: SETTABLE  R40 K19 R41  ; R40["missionType"] := R41
178 [-]: SETTABLE  R39 K47 K48  ; R39["forceVisible"] := true
179 [-]: SETLIST   R39 1 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 1
180 [-]: SETTABLE  R5 R38 R39   ; R5[R38] := R39
181 [-]: FORLOOP   R33 163      ; R33 += R35; if R33 <= R34 then begin PC := 163; R36 := R33 end
182 [-]: LEN       R38 R32      ; R38 := # R32
183 [-]: ADD       R20 R20 R38  ; R20 := R20 + R38
184 [-]: LOADK     R38 1        ; R38 := 1.000000
185 [-]: MOVE      R39 R20      ; R39 := R20
186 [-]: LOADK     R40 1        ; R40 := 1.000000
187 [-]: FORPREP   R38 311      ; R38 -= R40; PC := 311
188 [-]: GETTABLE  R42 R5 R41   ; R42 := R5[R41]
189 [-]: TEST      R42 0        ; if not R42 then PC := 311
190 [-]: JMP       311          ; PC := 311
191 [-]: GETTABLE  R42 R5 R41   ; R42 := R5[R41]
192 [-]: LEN       R42 R42      ; R42 := # R42
193 [-]: LT        0 K23 R42    ; if 0.000000 >= R42 then PC := 311
194 [-]: JMP       311          ; PC := 311
195 [-]: GETTABLE  R42 R5 R41   ; R42 := R5[R41]
196 [-]: GETTABLE  R42 R42 K14  ; R42 := R42[1.000000]
197 [-]: GETTABLE  R43 R42 K34  ; R43 := R42["nodeName"]
198 [-]: GETUPVAL  R44 U0       ; R44 := U0
199 [-]: GETTABLE  R44 R44 K49  ; R44 := R44["HARD_MODE_LEVEL_MODIFIER"]
200 [-]: GETGLOBAL R45 K44      ; R45 := 0x0469f296
201 [-]: LOADK     R46 K50      ; R46 := "HardDaily"
202 [-]: ADD       R47 R41 R21  ; R47 := R41 + R21
203 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
204 [-]: CALL      R45 2 2      ; R45 := R45(R46)
205 [-]: GETGLOBAL R46 K1       ; R46 := _T
206 [-]: GETTABLE  R46 R46 K2   ; R46 := R46["CachedHardModeDailyMissions"]
207 [-]: NEWTABLE  R47 0 2      ; R47 := {}
208 [-]: SELF      R48 R3 K46   ; R49 := R3; R48 := R3[0x3ad9ed31]
209 [-]: GETGLOBAL R50 K44      ; R50 := 0x0469f296
210 [-]: MOVE      R51 R43      ; R51 := R43
211 [-]: CALL      R50 2 0      ; R50,... := R50(R51)
212 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
213 [-]: GETTABLE  R48 R48 K18  ; R48 := R48["mission"]
214 [-]: SELF      R48 R48 K51  ; R49 := R48; R48 := R48[0x8f89d633]
215 [-]: CALL      R48 2 2      ; R48 := R48(R49)
216 [-]: SETTABLE  R47 K18 R48  ; R47["mission"] := R48
217 [-]: SELF      R48 R0 K53   ; R49 := R0; R48 := R0[0xc3150d06]
218 [-]: MOVE      R50 R45      ; R50 := R45
219 [-]: GETUPVAL  R51 U0       ; R51 := U0
220 [-]: GETTABLE  R51 R51 K6   ; R51 := R51["HARD_MODE_DAILY_MISSION_INTERVAL"]
221 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
222 [-]: TEST      R48 1        ; if R48 then PC := 225
223 [-]: JMP       225          ; PC := 225
224 [-]: GETTABLE  R48 R42 K47  ; R48 := R42["forceVisible"]
225 [-]: SETTABLE  R47 K52 R48  ; R47["isVisible"] := R48
226 [-]: SETTABLE  R46 R43 R47  ; R46[R43] := R47
227 [-]: GETGLOBAL R46 K1       ; R46 := _T
228 [-]: GETTABLE  R46 R46 K2   ; R46 := R46["CachedHardModeDailyMissions"]
229 [-]: GETTABLE  R46 R46 R43  ; R46 := R46[R43]
230 [-]: GETTABLE  R46 R46 K18  ; R46 := R46["mission"]
231 [-]: SETTABLE  R46 K54 K14  ; R46["tier"] := 1.000000
232 [-]: GETTABLE  R47 R46 K55  ; R47 := R46["missionReward"]
233 [-]: NEWTABLE  R48 0 0      ; R48 := {}
234 [-]: GETGLOBAL R49 K22      ; R49 := 0x6c97a788
235 [-]: GETTABLE  R49 R49 K57  ; R49 := R49[0x925e2bbb]
236 [-]: GETUPVAL  R50 U2       ; R50 := U2
237 [-]: GETTABLE  R50 R50 K58  ; R50 := R50["DailyMissionReward"]
238 [-]: LOADK     R51 5        ; R51 := 5.000000
239 [-]: CALL      R49 3 0      ; R49,... := R49(R50,R51)
240 [-]: SETLIST   R48 0 1      ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 0
241 [-]: SETTABLE  R47 K56 R48  ; R47["countedItems"] := R48
242 [-]: GETTABLE  R47 R46 K59  ; R47 := R46["archwingRequired"]
243 [-]: TEST      R47 0        ; if not R47 then PC := 264
244 [-]: JMP       264          ; PC := 264
245 [-]: GETTABLE  R47 R46 K60  ; R47 := R46["isSharkwingMission"]
246 [-]: TEST      R47 1        ; if R47 then PC := 264
247 [-]: JMP       264          ; PC := 264
248 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
249 [-]: EQ        1 R47 K31    ; if R47 == 28.000000 then PC := 264
250 [-]: JMP       264          ; PC := 264
251 [-]: GETGLOBAL R47 K61      ; R47 := 0x7f5022cf
252 [-]: GETTABLE  R47 R47 K62  ; R47 := R47[0xa5c556b9]
253 [-]: GETGLOBAL R48 K35      ; R48 := 0x64fb1586
254 [-]: GETTABLE  R49 R46 K27  ; R49 := R46["levelOverride"]
255 [-]: SELF      R49 R49 K63  ; R50 := R49; R49 := R49[0xed4e0128]
256 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
257 [-]: CALL      R48 0 2      ; R48 := R48(R49,...)
258 [-]: LOADK     R49 K64      ; R49 := "GrineerFortress"
259 [-]: CALL      R47 3 2      ; R47 := R47(R48,R49)
260 [-]: EQ        0 R47 K65    ; if R47 ~= nil then PC := 264
261 [-]: JMP       264          ; PC := 264
262 [-]: GETUPVAL  R47 U0       ; R47 := U0
263 [-]: GETTABLE  R44 R47 K66  ; R44 := R47["HARD_MODE_ARCHWING_LEVEL_MODIFIER"]
264 [-]: GETTABLE  R47 R46 K67  ; R47 := R46["minEnemyLevel"]
265 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
266 [-]: SETTABLE  R46 K67 R47  ; R46["minEnemyLevel"] := R47
267 [-]: GETTABLE  R47 R46 K68  ; R47 := R46["maxEnemyLevel"]
268 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
269 [-]: SETTABLE  R46 K68 R47  ; R46["maxEnemyLevel"] := R47
270 [-]: GETGLOBAL R47 K44      ; R47 := 0x0469f296
271 [-]: MOVE      R48 R45      ; R48 := R45
272 [-]: CALL      R47 2 2      ; R47 := R47(R48)
273 [-]: SETTABLE  R46 K69 R47  ; R46["periodicMissionTag"] := R47
274 [-]: GETUPVAL  R47 U0       ; R47 := U0
275 [-]: GETTABLE  R47 R47 K6   ; R47 := R47["HARD_MODE_DAILY_MISSION_INTERVAL"]
276 [-]: SETTABLE  R46 K70 R47  ; R46["periodicMissionCooldown"] := R47
277 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
278 [-]: EQ        0 R47 K39    ; if R47 ~= 2.000000 then PC := 282
279 [-]: JMP       282          ; PC := 282
280 [-]: SETTABLE  R46 K71 K40  ; R46["maxWaveNum"] := 5.000000
281 [-]: JMP       311          ; PC := 311
282 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
283 [-]: EQ        0 R47 K72    ; if R47 ~= 8.000000 then PC := 287
284 [-]: JMP       287          ; PC := 287
285 [-]: SETTABLE  R46 K71 K40  ; R46["maxWaveNum"] := 5.000000
286 [-]: JMP       311          ; PC := 311
287 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
288 [-]: EQ        0 R47 K73    ; if R47 ~= 13.000000 then PC := 292
289 [-]: JMP       292          ; PC := 292
290 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
291 [-]: JMP       311          ; PC := 311
292 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
293 [-]: EQ        0 R47 K74    ; if R47 ~= 17.000000 then PC := 297
294 [-]: JMP       297          ; PC := 297
295 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
296 [-]: JMP       311          ; PC := 311
297 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
298 [-]: EQ        0 R47 K75    ; if R47 ~= 7.000000 then PC := 302
299 [-]: JMP       302          ; PC := 302
300 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
301 [-]: JMP       311          ; PC := 311
302 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
303 [-]: EQ        0 R47 K24    ; if R47 ~= 4.000000 then PC := 307
304 [-]: JMP       307          ; PC := 307
305 [-]: SETTABLE  R46 K71 K39  ; R46["maxWaveNum"] := 2.000000
306 [-]: JMP       311          ; PC := 311
307 [-]: GETTABLE  R47 R46 K19  ; R47 := R46["missionType"]
308 [-]: EQ        0 R47 K76    ; if R47 ~= 32.000000 then PC := 311
309 [-]: JMP       311          ; PC := 311
310 [-]: SETTABLE  R46 K71 K24  ; R46["maxWaveNum"] := 4.000000
311 [-]: FORLOOP   R38 188      ; R38 += R40; if R38 <= R39 then begin PC := 188; R41 := R38 end
312 [-]: GETGLOBAL R47 K7       ; R47 := 0x4f6851ff
313 [-]: MOVE      R48 R1       ; R48 := R1
314 [-]: CALL      R47 2 1      ; R47(R48)
315 [-]: GETGLOBAL R47 K1       ; R47 := _T
316 [-]: GETUPVAL  R48 U0       ; R48 := U0
317 [-]: GETTABLE  R48 R48 K6   ; R48 := R48["HARD_MODE_DAILY_MISSION_INTERVAL"]
318 [-]: GETUPVAL  R49 U0       ; R49 := U0
319 [-]: GETTABLE  R49 R49 K78  ; R49 := R49[0xa01111a5]
320 [-]: CALL      R49 1 2      ; R49 := R49()
321 [-]: GETUPVAL  R50 U0       ; R50 := U0
322 [-]: GETTABLE  R50 R50 K6   ; R50 := R50["HARD_MODE_DAILY_MISSION_INTERVAL"]
323 [-]: MOD       R49 R49 R50  ; R49 := R49 % R50
324 [-]: SUB       R48 R48 R49  ; R48 := R48 - R49
325 [-]: SETTABLE  R47 K77 R48  ; R47["CachedHardModeDailyMissionsExpiry"] := R48
326 [-]: GETGLOBAL R47 K1       ; R47 := _T
327 [-]: GETTABLE  R47 R47 K77  ; R47 := R47["CachedHardModeDailyMissionsExpiry"]
328 [-]: RETURN    R47 2        ; return R47
329 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3028
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := mTimerMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xb1f4e5e1]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETTABLE  R3 R2 K2     ; R3 := R2["Duration"]
  8 [-]: LT        0 R1 R3      ; if R1 >= R3 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: SETTABLE  R2 K2 R1     ; R2["Duration"] := R1
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R3 K0        ; R3 := mTimerMgr
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xbd2e96ea]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: GETUPVAL  R6 U0        ; R6 := U0
 16 [-]: LOADBOOL  R7 0 0       ; R7 := false
 17 [-]: MOVE      R8 R0        ; R8 := R0
 18 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 19 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 3040
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 26
  2 [-]: JMP       26           ; PC := 26
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R2 K0 K1     ; R2["progress"] := 1.000000
  5 [-]: LOADNIL   R2 R2        ; R2 := nil
  6 [-]: SETUPVAL  R2 U0        ; U82 := R0
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x76ea806b
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x3f3ae64c]
  9 [-]: LOADK     R4 0         ; R4 := 0.000000
 10 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0x80563238]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 19 [-]: MOVE      R5 R3        ; R5 := R3
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3[0x24389ec3]
 24 [-]: LOADK     R6 K7        ; R6 := "OnInboxSync"
 25 [-]: CALL      R4 3 1       ; R4(R5,R6)
 26 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3054
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 42
  3 [-]: JMP       42           ; PC := 42
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 42
  8 [-]: JMP       42           ; PC := 42
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 11 [-]: GETGLOBAL R2 K3        ; R2 := gLotusSandBoxGameRulesType
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 17 [-]: GETGLOBAL R2 K4        ; R2 := gLotusPhotoBoothGameRulesType
 18 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 19 [-]: TEST      R0 0         ; if not R0 then PC := 42
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 22 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 23 [-]: GETGLOBAL R2 K5        ; R2 := gLotusGameRulesType
 24 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 25 [-]: TEST      R0 0         ; if not R0 then PC := 33
 26 [-]: JMP       33           ; PC := 33
 27 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 28 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xef893aec]
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["missionType"]
 31 [-]: EQ        1 R0 K9      ; if R0 == 11.000000 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETGLOBAL R0 K10       ; R0 := 0xba7dfcd2
 34 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 35 [-]: GETGLOBAL R2 K11       ; R2 := gLotusChallengeMgrType
 36 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 37 [-]: TEST      R0 0         ; if not R0 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: GETGLOBAL R0 K10       ; R0 := 0xba7dfcd2
 40 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x83a4b16a]
 41 [-]: CALL      R0 2 1       ; R0(R1)
 42 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3065
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["RequiemLoader"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["RequiemLoader"]
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xd2d3875a]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x9ba7909f
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x230561f1]
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x68fccc59
 14 [-]: LOADK     R3 K6        ; R3 := "RequiemMovieDone"
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R0 K7        ; R0 := mTimerMgr
 18 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xbd2e96ea]
 19 [-]: LOADK     R2 0         ; R2 := 0.500000
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3076
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  3 [-]: SETTABLE  R2 K1 R3     ; R2["CachedNemesisMissions"] := R3
  4 [-]: GETGLOBAL R2 K0        ; R2 := _T
  5 [-]: SETTABLE  R2 K2 K3     ; R2["CachedNemesisGenericMissionInfo"] := nil
  6 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x600a0ad6]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0xd8140b94]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 89
 11 [-]: JMP       89           ; PC := 89
 12 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mInfluenceNodes"]
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x6a965652]
 15 [-]: MOVE      R5 R2        ; R5 := R2
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: GETGLOBAL R5 K0        ; R5 := _T
 18 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 19 [-]: GETTABLE  R7 R2 K9     ; R7 := R2["mRank"]
 20 [-]: SETTABLE  R6 K8 R7     ; R6["rank"] := R7
 21 [-]: GETTABLE  R7 R4 K11    ; R7 := R4["mFaction"]
 22 [-]: SETTABLE  R6 K10 R7    ; R6["faction"] := R7
 23 [-]: GETTABLE  R7 R4 K13    ; R7 := R4["mName"]
 24 [-]: SETTABLE  R6 K12 R7    ; R6["name"] := R7
 25 [-]: SETTABLE  R5 K2 R6     ; R5["CachedNemesisGenericMissionInfo"] := R6
 26 [-]: LOADK     R5 1         ; R5 := 1.000000
 27 [-]: LEN       R6 R3        ; R6 := # R3
 28 [-]: LOADK     R7 1         ; R7 := 1.000000
 29 [-]: FORPREP   R5 50        ; R5 -= R7; PC := 50
 30 [-]: GETTABLE  R9 R3 R8     ; R9 := R3[R8]
 31 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["mNode"]
 32 [-]: GETUPVAL  R10 U1       ; R10 := U1
 33 [-]: GETTABLE  R10 R10 K15  ; R10 := R10[0x6c5ef17c]
 34 [-]: MOVE      R11 R9       ; R11 := R9
 35 [-]: GETTABLE  R12 R2 K9    ; R12 := R2["mRank"]
 36 [-]: GETTABLE  R13 R4 K11   ; R13 := R4["mFaction"]
 37 [-]: GETTABLE  R14 R4 K13   ; R14 := R4["mName"]
 38 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 39 [-]: GETGLOBAL R11 K0       ; R11 := _T
 40 [-]: GETTABLE  R11 R11 K1   ; R11 := R11["CachedNemesisMissions"]
 41 [-]: SELF      R12 R9 K16   ; R13 := R9; R12 := R9[0x6d604ba7]
 42 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 43 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 44 [-]: SELF      R14 R10 K18  ; R15 := R10; R14 := R10[0x8f89d633]
 45 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 46 [-]: SETTABLE  R13 K17 R14  ; R13["mMissionInfo"] := R14
 47 [-]: GETTABLE  R14 R10 K20  ; R14 := R10["uniqueName"]
 48 [-]: SETTABLE  R13 K19 R14  ; R13["missionName"] := R14
 49 [-]: SETTABLE  R11 R12 R13  ; R11[R12] := R13
 50 [-]: FORLOOP   R5 30        ; R5 += R7; if R5 <= R6 then begin PC := 30; R8 := R5 end
 51 [-]: GETGLOBAL R11 K21      ; R11 := 0x0032441c
 52 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["NumRequiemHints"]
 53 [-]: TEST      R11 0        ; if not R11 then PC := 84
 54 [-]: JMP       84           ; PC := 84
 55 [-]: GETTABLE  R12 R2 K23   ; R12 := R2["mHints"]
 56 [-]: TEST      R12 0        ; if not R12 then PC := 84
 57 [-]: JMP       84           ; PC := 84
 58 [-]: GETTABLE  R12 R2 K23   ; R12 := R2["mHints"]
 59 [-]: LEN       R12 R12      ; R12 := # R12
 60 [-]: LT        0 R11 R12    ; if R11 >= R12 then PC := 84
 61 [-]: JMP       84           ; PC := 84
 62 [-]: GETGLOBAL R12 K0       ; R12 := _T
 63 [-]: ADD       R13 R11 K25  ; R13 := R11 + 1.000000
 64 [-]: SETTABLE  R12 K24 R13  ; R12["NewRequiemHint"] := R13
 65 [-]: GETGLOBAL R12 K0       ; R12 := _T
 66 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["RequiemLoader"]
 67 [-]: TEST      R12 1        ; if R12 then PC := 79
 68 [-]: JMP       79           ; PC := 79
 69 [-]: GETGLOBAL R12 K0       ; R12 := _T
 70 [-]: GETGLOBAL R13 K27      ; R13 := 0xbd496aa1
 71 [-]: GETTABLE  R13 R13 K28  ; R13 := R13[0x42645da3]
 72 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 73 [-]: GETGLOBAL R15 K29      ; R15 := 0x68fccc59
 74 [-]: SELF      R15 R15 K30  ; R16 := R15; R15 := R15[0xed4e0128]
 75 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 76 [-]: SETLIST   R14 0 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 0
 77 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 78 [-]: SETTABLE  R12 K26 R13  ; R12["RequiemLoader"] := R13
 79 [-]: GETGLOBAL R12 K31      ; R12 := mTimerMgr
 80 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12[0xbd2e96ea]
 81 [-]: LOADK     R14 3        ; R14 := 3.000000
 82 [-]: GETUPVAL  R15 U2       ; R15 := U2
 83 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 84 [-]: GETGLOBAL R12 K21      ; R12 := 0x0032441c
 85 [-]: GETTABLE  R13 R2 K23   ; R13 := R2["mHints"]
 86 [-]: LEN       R13 R13      ; R13 := # R13
 87 [-]: SETTABLE  R12 K22 R13  ; R12["NumRequiemHints"] := R13
 88 [-]: JMP       91           ; PC := 91
 89 [-]: GETGLOBAL R12 K21      ; R12 := 0x0032441c
 90 [-]: SETTABLE  R12 K33 K3   ; R12["RequiemHints"] := nil
 91 [-]: GETGLOBAL R12 K21      ; R12 := 0x0032441c
 92 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["NemesisKillChoiceMade"]
 93 [-]: EQ        1 R12 K3     ; if R12 == nil then PC := 137
 94 [-]: JMP       137          ; PC := 137
 95 [-]: GETGLOBAL R12 K35      ; R12 := 0x25d99d89
 96 [-]: SELF      R12 R12 K36  ; R13 := R12; R12 := R12[0x2bc6bc3e]
 97 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 98 [-]: TEST      R1 0         ; if not R1 then PC := 137
 99 [-]: JMP       137          ; PC := 137
100 [-]: GETGLOBAL R13 K37      ; R13 := 0x7b998233
101 [-]: MOVE      R14 R12      ; R14 := R12
102 [-]: CALL      R13 2 2      ; R13 := R13(R14)
103 [-]: TEST      R13 1        ; if R13 then PC := 137
104 [-]: JMP       137          ; PC := 137
105 [-]: LEN       R13 R12      ; R13 := # R12
106 [-]: LT        0 K38 R13    ; if 0.000000 >= R13 then PC := 137
107 [-]: JMP       137          ; PC := 137
108 [-]: LEN       R13 R12      ; R13 := # R12
109 [-]: GETTABLE  R13 R12 R13  ; R13 := R12[R13]
110 [-]: GETUPVAL  R14 U0       ; R14 := U0
111 [-]: GETTABLE  R14 R14 K7   ; R14 := R14[0x6a965652]
112 [-]: MOVE      R15 R13      ; R15 := R13
113 [-]: CALL      R14 2 2      ; R14 := R14(R15)
114 [-]: GETUPVAL  R15 U3       ; R15 := U3
115 [-]: GETTABLE  R15 R15 K39  ; R15 := R15[0x06d055f9]
116 [-]: GETGLOBAL R16 K21      ; R16 := 0x0032441c
117 [-]: GETTABLE  R16 R16 K34  ; R16 := R16["NemesisKillChoiceMade"]
118 [-]: EQ        1 R16 K40    ; if R16 == true then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: LOADBOOL  R16 0 1      ; R16 := false; PC := 121
121 [-]: LOADBOOL  R16 1 0      ; R16 := true
122 [-]: LOADK     R17 K41      ; R17 := "/Lotus/Language/Kingpins/LichKilledLabel"
123 [-]: LOADK     R18 K42      ; R18 := "/Lotus/Language/Kingpins/LichConvertedLabel"
124 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
125 [-]: GETGLOBAL R16 K21      ; R16 := 0x0032441c
126 [-]: NEWTABLE  R17 0 5      ; R17 := {}
127 [-]: SETTABLE  R17 K44 K40  ; R17["OpenScreen"] := true
128 [-]: SETTABLE  R17 K45 K46  ; R17["Header"] := "/Lotus/Language/Kingpins/NemesisPopupHeader"
129 [-]: GETTABLE  R18 R14 K13  ; R18 := R14["mName"]
130 [-]: SETTABLE  R17 K47 R18  ; R17["Name"] := R18
131 [-]: GETTABLE  R18 R14 K11  ; R18 := R14["mFaction"]
132 [-]: SETTABLE  R17 K48 R18  ; R17["FactionId"] := R18
133 [-]: SETTABLE  R17 K49 R15  ; R17["Description"] := R15
134 [-]: SETTABLE  R16 K43 R17  ; R16["NemesisPopup_Info"] := R17
135 [-]: GETGLOBAL R16 K21      ; R16 := 0x0032441c
136 [-]: SETTABLE  R16 K34 K3   ; R16["NemesisKillChoiceMade"] := nil
137 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3136
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x3d106989
  8 [-]: LOADK     R2 K3        ; R2 := "updating zariman missions"
  9 [-]: CALL      R1 2 1       ; R1(R2)
 10 [-]: LOADK     R1 0         ; R1 := 0.000000
 11 [-]: GETGLOBAL R2 K4        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["CachedZarimanFactionIdx"]
 13 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R2 K7        ; R2 := 0xe7f2b02f
 16 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x6923a4fa]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: EQ        1 R2 K9      ; if R2 == "" then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R2 K2        ; R2 := 0x3d106989
 21 [-]: LOADK     R3 K10       ; R3 := "using cached faction "
 22 [-]: GETGLOBAL R4 K4        ; R4 := _T
 23 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["CachedZarimanFactionIdx"]
 24 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: GETGLOBAL R2 K4        ; R2 := _T
 27 [-]: GETTABLE  R1 R2 K5     ; R1 := R2["CachedZarimanFactionIdx"]
 28 [-]: JMP       69           ; PC := 69
 29 [-]: GETGLOBAL R2 K11       ; R2 := 0x0469f296
 30 [-]: LOADK     R3 K12       ; R3 := "ZarimanSyndicate"
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
 33 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x69727e0b]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["mSyndicateMissions"]
 36 [-]: LOADK     R4 1         ; R4 := 1.000000
 37 [-]: LEN       R5 R3        ; R5 := # R3
 38 [-]: LOADK     R6 1         ; R6 := 1.000000
 39 [-]: FORPREP   R4 68        ; R4 -= R6; PC := 68
 40 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 41 [-]: GETTABLE  R9 R8 K15    ; R9 := R8["mTag"]
 42 [-]: EQ        0 R9 R2      ; if R9 ~= R2 then PC := 68
 43 [-]: JMP       68           ; PC := 68
 44 [-]: GETGLOBAL R9 K16       ; R9 := 0x34291f5c
 45 [-]: GETTABLE  R9 R9 K17    ; R9 := R9[0x397b920f]
 46 [-]: GETTABLE  R10 R8 K18   ; R10 := R8["mActivation"]
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: LE        0 R9 K19     ; if R9 > 0.000000 then PC := 68
 49 [-]: JMP       68           ; PC := 68
 50 [-]: GETGLOBAL R9 K16       ; R9 := 0x34291f5c
 51 [-]: GETTABLE  R9 R9 K17    ; R9 := R9[0x397b920f]
 52 [-]: GETTABLE  R10 R8 K20   ; R10 := R8["mExpiry"]
 53 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 54 [-]: LT        0 K19 R9     ; if 0.000000 >= R9 then PC := 68
 55 [-]: JMP       68           ; PC := 68
 56 [-]: GETGLOBAL R9 K21       ; R9 := 0x03f57322
 57 [-]: GETGLOBAL R10 K22      ; R10 := 0x5f93cf5b
 58 [-]: GETTABLE  R11 R8 K23   ; R11 := R8["mSeed"]
 59 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 60 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 61 [-]: MOD       R1 R9 K24    ; R1 := R9 % 2.000000
 62 [-]: GETGLOBAL R9 K2        ; R9 := 0x3d106989
 63 [-]: LOADK     R10 K25      ; R10 := "using syndicate mission seed gives "
 64 [-]: MOVE      R11 R1       ; R11 := R1
 65 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 66 [-]: CALL      R9 2 1       ; R9(R10)
 67 [-]: JMP       69           ; PC := 69
 68 [-]: FORLOOP   R4 40        ; R4 += R6; if R4 <= R5 then begin PC := 40; R7 := R4 end
 69 [-]: EQ        0 R1 K26     ; if R1 ~= 1.000000 then PC := 100
 70 [-]: JMP       100          ; PC := 100
 71 [-]: GETGLOBAL R9 K2        ; R9 := 0x3d106989
 72 [-]: LOADK     R10 K27      ; R10 := "swapping to corpus"
 73 [-]: CALL      R9 2 1       ; R9(R10)
 74 [-]: GETGLOBAL R9 K28       ; R9 := 0xcfc01047
 75 [-]: MOVE      R10 R0       ; R10 := R0
 76 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 77 [-]: JMP       98           ; PC := 98
 78 [-]: GETUPVAL  R14 U0       ; R14 := U0
 79 [-]: GETTABLE  R15 R13 K29  ; R15 := R13["mission"]
 80 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["missionType"]
 81 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 82 [-]: TEST      R14 0        ; if not R14 then PC := 98
 83 [-]: JMP       98           ; PC := 98
 84 [-]: GETGLOBAL R15 K31      ; R15 := 0x6c97a788
 85 [-]: GETTABLE  R15 R15 K32  ; R15 := R15[0x57d5cada]
 86 [-]: CALL      R15 1 2      ; R15 := R15()
 87 [-]: GETTABLE  R16 R13 K34  ; R16 := R13["name"]
 88 [-]: SETTABLE  R15 K33 R16  ; R15["mNode"] := R16
 89 [-]: SETTABLE  R15 K35 K26  ; R15["mFaction"] := 1.000000
 90 [-]: GETTABLE  R16 R14 K37  ; R16 := R14["enemySpec"]
 91 [-]: SETTABLE  R15 K36 R16  ; R15["mEnemySpec"] := R16
 92 [-]: GETGLOBAL R16 K1       ; R16 := 0x25d99d89
 93 [-]: SELF      R16 R16 K13  ; R17 := R16; R16 := R16[0x69727e0b]
 94 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 95 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0x01e9ccdd]
 96 [-]: MOVE      R18 R15      ; R18 := R15
 97 [-]: CALL      R16 3 1      ; R16(R17,R18)
 98 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 78; R11 := R12 end
 99 [-]: JMP       78           ; PC := 78
100 [-]: GETGLOBAL R16 K4       ; R16 := _T
101 [-]: GETTABLE  R16 R16 K5   ; R16 := R16["CachedZarimanFactionIdx"]
102 [-]: EQ        1 R16 K6     ; if R16 == nil then PC := 108
103 [-]: JMP       108          ; PC := 108
104 [-]: GETGLOBAL R16 K4       ; R16 := _T
105 [-]: GETTABLE  R16 R16 K5   ; R16 := R16["CachedZarimanFactionIdx"]
106 [-]: EQ        1 R16 R1     ; if R16 == R1 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: GETGLOBAL R16 K2       ; R16 := 0x3d106989
109 [-]: LOADK     R17 K39      ; R17 := "signalling bounty refresh"
110 [-]: CALL      R16 2 1      ; R16(R17)
111 [-]: GETGLOBAL R16 K4       ; R16 := _T
112 [-]: SETTABLE  R16 K40 K41  ; R16["WorldStateJobsChanged"] := true
113 [-]: GETGLOBAL R16 K4       ; R16 := _T
114 [-]: SETTABLE  R16 K5 R1    ; R16["CachedZarimanFactionIdx"] := R1
115 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3187
; #Upvalues:       19
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  124

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x3d106989
  7 [-]: LOADK     R1 K3        ; R1 := "No game rules, early out"
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K4        ; R0 := _T
 11 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 12 [-]: SETTABLE  R0 K5 R1     ; R0["CachedAlerts"] := R1
 13 [-]: GETGLOBAL R0 K4        ; R0 := _T
 14 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 15 [-]: SETTABLE  R0 K6 R1     ; R0["CachedInvasionInfo"] := R1
 16 [-]: GETGLOBAL R0 K7        ; R0 := 0x0032441c
 17 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 18 [-]: SETTABLE  R0 K8 R1     ; R0["CachedGoalInfo"] := R1
 19 [-]: GETGLOBAL R0 K7        ; R0 := 0x0032441c
 20 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 21 [-]: SETTABLE  R0 K9 R1     ; R0["MergedGoalNodes"] := R1
 22 [-]: GETGLOBAL R0 K4        ; R0 := _T
 23 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 24 [-]: SETTABLE  R0 K10 R1    ; R0["CachedConstructionProjects"] := R1
 25 [-]: GETGLOBAL R0 K4        ; R0 := _T
 26 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 27 [-]: SETTABLE  R0 K11 R1    ; R0["CachedRegionStatus"] := R1
 28 [-]: GETGLOBAL R0 K4        ; R0 := _T
 29 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 30 [-]: SETTABLE  R0 K12 R1    ; R0["CachedFlashSales"] := R1
 31 [-]: GETGLOBAL R0 K4        ; R0 := _T
 32 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 33 [-]: SETTABLE  R0 K13 R1    ; R0["CachedVoidTraders"] := R1
 34 [-]: GETGLOBAL R0 K4        ; R0 := _T
 35 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 36 [-]: SETTABLE  R0 K14 R1    ; R0["CachedGlobalUpgrades"] := R1
 37 [-]: GETGLOBAL R0 K4        ; R0 := _T
 38 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 39 [-]: SETTABLE  R0 K15 R1    ; R0["CachedGoalLongDesc"] := R1
 40 [-]: GETGLOBAL R0 K4        ; R0 := _T
 41 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 42 [-]: SETTABLE  R0 K16 R1    ; R0["LockedGoalList"] := R1
 43 [-]: GETGLOBAL R0 K4        ; R0 := _T
 44 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 45 [-]: SETTABLE  R0 K17 R1    ; R0["CachedNodesPendingDestruction"] := R1
 46 [-]: GETGLOBAL R0 K4        ; R0 := _T
 47 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 48 [-]: SETTABLE  R0 K18 R1    ; R0["CachedVoidStormMissions"] := R1
 49 [-]: GETGLOBAL R0 K7        ; R0 := 0x0032441c
 50 [-]: GETTABLE  R0 R0 K19    ; R0 := R0["LoginDone"]
 51 [-]: TEST      R0 1         ; if R0 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: LOADNIL   R0 R0        ; R0 := nil
 54 [-]: RETURN    R0 2         ; return R0
 55 [-]: GETGLOBAL R0 K20       ; R0 := 0x76ea806b
 56 [-]: SELF      R0 R0 K21    ; R1 := R0; R0 := R0[0x3f3ae64c]
 57 [-]: LOADK     R2 0         ; R2 := 0.000000
 58 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 59 [-]: LOADNIL   R1 R1        ; R1 := nil
 60 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 61 [-]: MOVE      R3 R0        ; R3 := R0
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: TEST      R2 1         ; if R2 then PC := 68
 64 [-]: JMP       68           ; PC := 68
 65 [-]: SELF      R2 R0 K22    ; R3 := R0; R2 := R0[0x80563238]
 66 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 67 [-]: MOVE      R1 R2        ; R1 := R2
 68 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 69 [-]: MOVE      R3 R1        ; R3 := R1
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: TEST      R2 0         ; if not R2 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: LOADNIL   R2 R2        ; R2 := nil
 74 [-]: RETURN    R2 2         ; return R2
 75 [-]: SELF      R2 R1 K23    ; R3 := R1; R2 := R1[0x69727e0b]
 76 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 77 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 78 [-]: MOVE      R4 R2        ; R4 := R2
 79 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 80 [-]: TEST      R3 0         ; if not R3 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: LOADNIL   R3 R3        ; R3 := nil
 83 [-]: RETURN    R3 2         ; return R3
 84 [-]: GETUPVAL  R3 U0        ; R3 := U0
 85 [-]: EQ        0 R3 K24     ; if R3 ~= nil then PC := 91
 86 [-]: JMP       91           ; PC := 91
 87 [-]: GETUPVAL  R3 U1        ; R3 := U1
 88 [-]: GETTABLE  R3 R3 K25    ; R3 := R3[0xc00479a5]
 89 [-]: CALL      R3 1 2       ; R3 := R3()
 90 [-]: SETUPVAL  R3 U0        ; U82 := R0
 91 [-]: GETUPVAL  R3 U1        ; R3 := U1
 92 [-]: GETTABLE  R3 R3 K26    ; R3 := R3[0x5e35d4d6]
 93 [-]: CALL      R3 1 2       ; R3 := R3()
 94 [-]: SELF      R4 R3 K27    ; R5 := R3; R4 := R3[0xc1dee03f]
 95 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 96 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 97 [-]: GETGLOBAL R6 K28       ; R6 := 0x83f4e77c
 98 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 99 [-]: LOADNIL   R6 R6        ; R6 := nil
100 [-]: GETTABLE  R7 R2 K29    ; R7 := R2["mAlerts"]
101 [-]: LOADK     R8 1         ; R8 := 1.000000
102 [-]: LEN       R9 R7        ; R9 := # R7
103 [-]: LOADK     R10 1        ; R10 := 1.000000
104 [-]: FORPREP   R8 255       ; R8 -= R10; PC := 255
105 [-]: GETGLOBAL R12 K30      ; R12 := 0xce225efa
106 [-]: LOADK     R13 0        ; R13 := 0.000000
107 [-]: CALL      R12 2 1      ; R12(R13)
108 [-]: GETTABLE  R12 R7 R11   ; R12 := R7[R11]
109 [-]: SELF      R13 R3 K31   ; R14 := R3; R13 := R3[0x3ad9ed31]
110 [-]: GETTABLE  R15 R12 K32  ; R15 := R12["mMissionInfo"]
111 [-]: GETTABLE  R15 R15 K33  ; R15 := R15["location"]
112 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
113 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
114 [-]: MOVE      R15 R13      ; R15 := R13
115 [-]: CALL      R14 2 2      ; R14 := R14(R15)
116 [-]: TEST      R14 1        ; if R14 then PC := 255
117 [-]: JMP       255          ; PC := 255
118 [-]: GETGLOBAL R14 K34      ; R14 := 0x34291f5c
119 [-]: GETTABLE  R14 R14 K35  ; R14 := R14[0x397b920f]
120 [-]: GETTABLE  R15 R12 K36  ; R15 := R12["mExpiry"]
121 [-]: CALL      R14 2 2      ; R14 := R14(R15)
122 [-]: LT        0 K37 R14    ; if 0.000000 >= R14 then PC := 255
123 [-]: JMP       255          ; PC := 255
124 [-]: GETGLOBAL R15 K38      ; R15 := 0x64fb1586
125 [-]: GETTABLE  R16 R13 K39  ; R16 := R13["name"]
126 [-]: CALL      R15 2 2      ; R15 := R15(R16)
127 [-]: MOVE      R6 R15       ; R6 := R15
128 [-]: LOADK     R15 0        ; R15 := 0.000000
129 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
130 [-]: GETTABLE  R17 R12 K40  ; R17 := R12["mActivation"]
131 [-]: CALL      R16 2 2      ; R16 := R16(R17)
132 [-]: TEST      R16 1        ; if R16 then PC := 139
133 [-]: JMP       139          ; PC := 139
134 [-]: GETGLOBAL R16 K34      ; R16 := 0x34291f5c
135 [-]: GETTABLE  R16 R16 K35  ; R16 := R16[0x397b920f]
136 [-]: GETTABLE  R17 R12 K40  ; R17 := R12["mActivation"]
137 [-]: CALL      R16 2 2      ; R16 := R16(R17)
138 [-]: MOVE      R15 R16      ; R15 := R16
139 [-]: LT        0 K37 R15    ; if 0.000000 >= R15 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R16 U2       ; R16 := U2
142 [-]: MOVE      R17 R6       ; R17 := R6
143 [-]: MOVE      R18 R15      ; R18 := R15
144 [-]: CALL      R16 3 1      ; R16(R17,R18)
145 [-]: JMP       255          ; PC := 255
146 [-]: GETUPVAL  R16 U0       ; R16 := U0
147 [-]: TEST      R16 0        ; if not R16 then PC := 159
148 [-]: JMP       159          ; PC := 159
149 [-]: SELF      R16 R1 K41   ; R17 := R1; R16 := R1[0xcf6ac497]
150 [-]: GETTABLE  R18 R12 K42  ; R18 := R12["mId"]
151 [-]: GETTABLE  R18 R18 K42  ; R18 := R18["mId"]
152 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
153 [-]: TEST      R16 0        ; if not R16 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: GETTABLE  R16 R12 K43  ; R16 := R12["mAllowReplay"]
156 [-]: JMP       159          ; PC := 159
157 [-]: LOADBOOL  R16 0 1      ; R16 := false; PC := 158
158 [-]: LOADBOOL  R16 1 0      ; R16 := true
159 [-]: LOADBOOL  R17 0 0      ; R17 := false
160 [-]: GETTABLE  R18 R13 K44  ; R18 := R13["region"]
161 [-]: ADD       R18 R18 K45  ; R18 := R18 + 1.000000
162 [-]: GETTABLE  R19 R4 R18   ; R19 := R4[R18]
163 [-]: TEST      R19 0        ; if not R19 then PC := 188
164 [-]: JMP       188          ; PC := 188
165 [-]: GETUPVAL  R20 U1       ; R20 := U1
166 [-]: GETTABLE  R20 R20 K46  ; R20 := R20["REGION_ID_FORTRESS"]
167 [-]: EQ        0 R18 R20    ; if R18 ~= R20 then PC := 175
168 [-]: JMP       175          ; PC := 175
169 [-]: SELF      R20 R1 K47   ; R21 := R1; R20 := R1[0x5baf7a39]
170 [-]: CALL      R20 2 2      ; R20 := R20(R21)
171 [-]: TESTSET   R17 R20 1    ; if R20 then PC := 174 else R17 := R20
172 [-]: JMP       174          ; PC := 174
173 [-]: MOVE      R17 R5       ; R17 := R5
174 [-]: JMP       188          ; PC := 188
175 [-]: SELF      R20 R19 K48  ; R21 := R19; R20 := R19[0x699fd1e2]
176 [-]: CALL      R20 2 2      ; R20 := R20(R21)
177 [-]: EQ        0 R20 K37    ; if R20 ~= 0.000000 then PC := 187
178 [-]: JMP       187          ; PC := 187
179 [-]: SELF      R20 R1 K50   ; R21 := R1; R20 := R1[0x25452953]
180 [-]: MOVE      R22 R18      ; R22 := R18
181 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
182 [-]: TESTSET   R17 R20 1    ; if R20 then PC := 188 else R17 := R20
183 [-]: JMP       188          ; PC := 188
184 [-]: MOVE      R17 R5       ; R17 := R5
185 [-]: JMP       188          ; PC := 188
186 [-]: LOADBOOL  R17 0 1      ; R17 := false; PC := 187
187 [-]: LOADBOOL  R17 1 0      ; R17 := true
188 [-]: GETTABLE  R20 R13 K51  ; R20 := R13["unlocked"]
189 [-]: TEST      R20 1        ; if R20 then PC := 195
190 [-]: JMP       195          ; PC := 195
191 [-]: GETTABLE  R20 R12 K52  ; R20 := R12["mForceUnlock"]
192 [-]: TEST      R20 1        ; if R20 then PC := 195
193 [-]: JMP       195          ; PC := 195
194 [-]: MOVE      R20 R5       ; R20 := R5
195 [-]: TEST      R17 1        ; if R17 then PC := 202
196 [-]: JMP       202          ; PC := 202
197 [-]: GETGLOBAL R21 K4       ; R21 := _T
198 [-]: GETTABLE  R21 R21 K53  ; R21 := R21["SHOW_LOCKED_ALERTS"]
199 [-]: TEST      R21 1        ; if R21 then PC := 202
200 [-]: JMP       202          ; PC := 202
201 [-]: LOADBOOL  R16 0 0      ; R16 := false
202 [-]: GETGLOBAL R21 K4       ; R21 := _T
203 [-]: GETTABLE  R21 R21 K5   ; R21 := R21["CachedAlerts"]
204 [-]: NEWTABLE  R22 0 5      ; R22 := {}
205 [-]: SETTABLE  R22 K54 R12  ; R22["mAlertInfo"] := R12
206 [-]: SETTABLE  R22 K55 R18  ; R22["mRegionIdx"] := R18
207 [-]: SETTABLE  R22 K56 R16  ; R22["mVisible"] := R16
208 [-]: SETTABLE  R22 K57 R20  ; R22["mUnlocked"] := R20
209 [-]: SETTABLE  R22 K58 R17  ; R22["mRegionUnlocked"] := R17
210 [-]: SETTABLE  R21 R6 R22   ; R21[R6] := R22
211 [-]: GETGLOBAL R21 K4       ; R21 := _T
212 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
213 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
214 [-]: TEST      R21 1        ; if R21 then PC := 220
215 [-]: JMP       220          ; PC := 220
216 [-]: GETGLOBAL R21 K4       ; R21 := _T
217 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
218 [-]: NEWTABLE  R22 0 0      ; R22 := {}
219 [-]: SETTABLE  R21 R18 R22  ; R21[R18] := R22
220 [-]: GETGLOBAL R21 K4       ; R21 := _T
221 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
222 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
223 [-]: SETTABLE  R21 K59 R16  ; R21["alert"] := R16
224 [-]: GETGLOBAL R21 K0       ; R21 := 0x7b998233
225 [-]: GETTABLE  R22 R12 K60  ; R22 := R12["mIcon"]
226 [-]: CALL      R21 2 2      ; R21 := R21(R22)
227 [-]: TEST      R21 1        ; if R21 then PC := 234
228 [-]: JMP       234          ; PC := 234
229 [-]: GETGLOBAL R21 K4       ; R21 := _T
230 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["CachedRegionStatus"]
231 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
232 [-]: GETTABLE  R22 R12 K60  ; R22 := R12["mIcon"]
233 [-]: SETTABLE  R21 K61 R22  ; R21["customAlertIcon"] := R22
234 [-]: GETGLOBAL R21 K4       ; R21 := _T
235 [-]: GETTABLE  R21 R21 K5   ; R21 := R21["CachedAlerts"]
236 [-]: GETTABLE  R21 R21 R6   ; R21 := R21[R6]
237 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["mAlertInfo"]
238 [-]: GETTABLE  R21 R21 K32  ; R21 := R21["mMissionInfo"]
239 [-]: GETTABLE  R22 R21 K62  ; R22 := R21["maxEnemyLevel"]
240 [-]: LE        0 R22 K45    ; if R22 > 1.000000 then PC := 249
241 [-]: JMP       249          ; PC := 249
242 [-]: SELF      R22 R3 K63   ; R23 := R3; R22 := R3[0x18a37080]
243 [-]: GETTABLE  R24 R13 K39  ; R24 := R13["name"]
244 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
245 [-]: ADD       R23 R22 K45  ; R23 := R22 + 1.000000
246 [-]: SETTABLE  R21 K64 R23  ; R21["minEnemyLevel"] := R23
247 [-]: ADD       R23 R22 K65  ; R23 := R22 + 3.000000
248 [-]: SETTABLE  R21 K62 R23  ; R21["maxEnemyLevel"] := R23
249 [-]: GETTABLE  R23 R12 K67  ; R23 := R12["mTag"]
250 [-]: SETTABLE  R21 K66 R23  ; R21["alertTag"] := R23
251 [-]: GETUPVAL  R23 U2       ; R23 := U2
252 [-]: MOVE      R24 R6       ; R24 := R6
253 [-]: MOVE      R25 R14      ; R25 := R14
254 [-]: CALL      R23 3 1      ; R23(R24,R25)
255 [-]: FORLOOP   R8 105       ; R8 += R10; if R8 <= R9 then begin PC := 105; R11 := R8 end
256 [-]: GETTABLE  R23 R2 K68   ; R23 := R2["mInvasions"]
257 [-]: NEWTABLE  R24 0 0      ; R24 := {}
258 [-]: GETUPVAL  R25 U3       ; R25 := U3
259 [-]: GETTABLE  R25 R25 K69  ; R25 := R25[0x8d66ec64]
260 [-]: LOADK     R26 K70      ; R26 := "infinv"
261 [-]: LOADK     R27 0        ; R27 := 0.000000
262 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
263 [-]: LT        1 K37 R25    ; if 0.000000 < R25 then PC := 266
264 [-]: JMP       266          ; PC := 266
265 [-]: LOADBOOL  R25 0 1      ; R25 := false; PC := 266
266 [-]: LOADBOOL  R25 1 0      ; R25 := true
267 [-]: TESTSET   R26 R25 0    ; if not R25 then PC := 278 else R26 := R25
268 [-]: JMP       278          ; PC := 278
269 [-]: GETGLOBAL R26 K71      ; R26 := 0x25d99d89
270 [-]: SELF      R26 R26 K23  ; R27 := R26; R26 := R26[0x69727e0b]
271 [-]: CALL      R26 2 2      ; R26 := R26(R27)
272 [-]: GETTABLE  R26 R26 K72  ; R26 := R26["mSeasonInfo"]
273 [-]: GETTABLE  R26 R26 K73  ; R26 := R26["mPhase"]
274 [-]: LE        1 K74 R26    ; if 4.000000 <= R26 then PC := 277
275 [-]: JMP       277          ; PC := 277
276 [-]: LOADBOOL  R26 0 1      ; R26 := false; PC := 277
277 [-]: LOADBOOL  R26 1 0      ; R26 := true
278 [-]: TEST      R25 0        ; if not R25 then PC := 286
279 [-]: JMP       286          ; PC := 286
280 [-]: GETGLOBAL R27 K4       ; R27 := _T
281 [-]: NEWTABLE  R28 0 0      ; R28 := {}
282 [-]: SETTABLE  R27 K75 R28  ; R27["WorldStateDerelictNodes"] := R28
283 [-]: GETGLOBAL R27 K4       ; R27 := _T
284 [-]: NEWTABLE  R28 0 0      ; R28 := {}
285 [-]: SETTABLE  R27 K76 R28  ; R27["WorldStateOutbreakChains"] := R28
286 [-]: LOADK     R27 1        ; R27 := 1.000000
287 [-]: LEN       R28 R23      ; R28 := # R23
288 [-]: LOADK     R29 1        ; R29 := 1.000000
289 [-]: FORPREP   R27 437      ; R27 -= R29; PC := 437
290 [-]: GETGLOBAL R31 K30      ; R31 := 0xce225efa
291 [-]: LOADK     R32 0        ; R32 := 0.000000
292 [-]: CALL      R31 2 1      ; R31(R32)
293 [-]: GETTABLE  R31 R23 R30  ; R31 := R23[R30]
294 [-]: GETGLOBAL R32 K38      ; R32 := 0x64fb1586
295 [-]: GETTABLE  R33 R31 K77  ; R33 := R31["mNode"]
296 [-]: CALL      R32 2 2      ; R32 := R32(R33)
297 [-]: MOVE      R6 R32       ; R6 := R32
298 [-]: GETGLOBAL R32 K34      ; R32 := 0x34291f5c
299 [-]: GETTABLE  R32 R32 K35  ; R32 := R32[0x397b920f]
300 [-]: GETTABLE  R33 R31 K40  ; R33 := R31["mActivation"]
301 [-]: CALL      R32 2 2      ; R32 := R32(R33)
302 [-]: LT        0 K37 R32    ; if 0.000000 >= R32 then PC := 309
303 [-]: JMP       309          ; PC := 309
304 [-]: GETUPVAL  R33 U2       ; R33 := U2
305 [-]: MOVE      R34 R6       ; R34 := R6
306 [-]: MOVE      R35 R32      ; R35 := R32
307 [-]: CALL      R33 3 1      ; R33(R34,R35)
308 [-]: JMP       437          ; PC := 437
309 [-]: GETTABLE  R33 R31 K78  ; R33 := R31["mCompleted"]
310 [-]: TEST      R33 1        ; if R33 then PC := 437
311 [-]: JMP       437          ; PC := 437
312 [-]: SELF      R33 R3 K31   ; R34 := R3; R33 := R3[0x3ad9ed31]
313 [-]: GETTABLE  R35 R31 K77  ; R35 := R31["mNode"]
314 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
315 [-]: GETGLOBAL R34 K4       ; R34 := _T
316 [-]: GETTABLE  R34 R34 K6   ; R34 := R34["CachedInvasionInfo"]
317 [-]: GETUPVAL  R35 U4       ; R35 := U4
318 [-]: GETTABLE  R35 R35 K79  ; R35 := R35[0x62b05d23]
319 [-]: MOVE      R36 R1       ; R36 := R1
320 [-]: MOVE      R37 R31      ; R37 := R31
321 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
322 [-]: SETTABLE  R34 R6 R35   ; R34[R6] := R35
323 [-]: GETGLOBAL R34 K38      ; R34 := 0x64fb1586
324 [-]: GETTABLE  R35 R31 K80  ; R35 := R31["mEventTag"]
325 [-]: CALL      R34 2 2      ; R34 := R34(R35)
326 [-]: EQ        1 R34 K81    ; if R34 == "" then PC := 332
327 [-]: JMP       332          ; PC := 332
328 [-]: GETGLOBAL R34 K38      ; R34 := 0x64fb1586
329 [-]: GETTABLE  R35 R31 K80  ; R35 := R31["mEventTag"]
330 [-]: CALL      R34 2 2      ; R34 := R34(R35)
331 [-]: SETTABLE  R24 R34 R31  ; R24[R34] := R31
332 [-]: GETTABLE  R34 R33 K44  ; R34 := R33["region"]
333 [-]: ADD       R34 R34 K45  ; R34 := R34 + 1.000000
334 [-]: GETTABLE  R34 R4 R34   ; R34 := R4[R34]
335 [-]: GETGLOBAL R35 K0       ; R35 := 0x7b998233
336 [-]: MOVE      R36 R34      ; R36 := R34
337 [-]: CALL      R35 2 2      ; R35 := R35(R36)
338 [-]: TEST      R35 1        ; if R35 then PC := 437
339 [-]: JMP       437          ; PC := 437
340 [-]: GETUPVAL  R35 U0       ; R35 := U0
341 [-]: TEST      R35 0        ; if not R35 then PC := 357
342 [-]: JMP       357          ; PC := 357
343 [-]: SELF      R35 R34 K48  ; R36 := R34; R35 := R34[0x699fd1e2]
344 [-]: CALL      R35 2 2      ; R35 := R35(R36)
345 [-]: EQ        0 R35 K37    ; if R35 ~= 0.000000 then PC := 356
346 [-]: JMP       356          ; PC := 356
347 [-]: SELF      R35 R1 K50   ; R36 := R1; R35 := R1[0x25452953]
348 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
349 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
350 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
351 [-]: TEST      R35 1        ; if R35 then PC := 357
352 [-]: JMP       357          ; PC := 357
353 [-]: MOVE      R35 R5       ; R35 := R5
354 [-]: JMP       357          ; PC := 357
355 [-]: LOADBOOL  R35 0 1      ; R35 := false; PC := 356
356 [-]: LOADBOOL  R35 1 0      ; R35 := true
357 [-]: TEST      R35 1        ; if R35 then PC := 363
358 [-]: JMP       363          ; PC := 363
359 [-]: GETGLOBAL R36 K4       ; R36 := _T
360 [-]: GETTABLE  R36 R36 K53  ; R36 := R36["SHOW_LOCKED_ALERTS"]
361 [-]: TEST      R36 0        ; if not R36 then PC := 383
362 [-]: JMP       383          ; PC := 383
363 [-]: GETGLOBAL R36 K4       ; R36 := _T
364 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["CachedRegionStatus"]
365 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
366 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
367 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
368 [-]: TEST      R36 1        ; if R36 then PC := 376
369 [-]: JMP       376          ; PC := 376
370 [-]: GETGLOBAL R36 K4       ; R36 := _T
371 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["CachedRegionStatus"]
372 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
373 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
374 [-]: NEWTABLE  R38 0 0      ; R38 := {}
375 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
376 [-]: GETGLOBAL R36 K4       ; R36 := _T
377 [-]: GETTABLE  R36 R36 K11  ; R36 := R36["CachedRegionStatus"]
378 [-]: GETTABLE  R37 R33 K44  ; R37 := R33["region"]
379 [-]: ADD       R37 R37 K45  ; R37 := R37 + 1.000000
380 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
381 [-]: GETTABLE  R37 R31 K83  ; R37 := R31["mFaction"]
382 [-]: SETTABLE  R36 K82 R37  ; R36["invasion"] := R37
383 [-]: TEST      R25 0        ; if not R25 then PC := 437
384 [-]: JMP       437          ; PC := 437
385 [-]: GETTABLE  R36 R31 K83  ; R36 := R31["mFaction"]
386 [-]: EQ        0 R36 K84    ; if R36 ~= 2.000000 then PC := 437
387 [-]: JMP       437          ; PC := 437
388 [-]: GETGLOBAL R36 K85      ; R36 := 0xcfc01047
389 [-]: GETTABLE  R37 R34 K86  ; R37 := R34["sectors"]
390 [-]: CALL      R36 2 4      ; R36,R37,R38 := R36(R37)
391 [-]: JMP       435          ; PC := 435
392 [-]: GETTABLE  R41 R40 K87  ; R41 := R40["mission"]
393 [-]: GETTABLE  R41 R41 K88  ; R41 := R41["missionType"]
394 [-]: GETGLOBAL R42 K4       ; R42 := _T
395 [-]: GETTABLE  R42 R42 K76  ; R42 := R42["WorldStateOutbreakChains"]
396 [-]: GETTABLE  R43 R34 K39  ; R43 := R34["name"]
397 [-]: GETTABLE  R42 R42 R43  ; R42 := R42[R43]
398 [-]: TEST      R42 1        ; if R42 then PC := 435
399 [-]: JMP       435          ; PC := 435
400 [-]: TEST      R26 0        ; if not R26 then PC := 404
401 [-]: JMP       404          ; PC := 404
402 [-]: EQ        1 R41 K37    ; if R41 == 0.000000 then PC := 410
403 [-]: JMP       410          ; PC := 410
404 [-]: TEST      R26 1        ; if R26 then PC := 435
405 [-]: JMP       435          ; PC := 435
406 [-]: EQ        1 R41 K37    ; if R41 == 0.000000 then PC := 435
407 [-]: JMP       435          ; PC := 435
408 [-]: EQ        1 R41 K89    ; if R41 == 20.000000 then PC := 435
409 [-]: JMP       435          ; PC := 435
410 [-]: GETGLOBAL R42 K90      ; R42 := 0x7f5022cf
411 [-]: GETTABLE  R42 R42 K91  ; R42 := R42[0xa5c556b9]
412 [-]: GETGLOBAL R43 K38      ; R43 := 0x64fb1586
413 [-]: GETTABLE  R44 R40 K39  ; R44 := R40["name"]
414 [-]: CALL      R43 2 2      ; R43 := R43(R44)
415 [-]: LOADK     R44 K92      ; R44 := "Derelict"
416 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
417 [-]: TEST      R42 0        ; if not R42 then PC := 435
418 [-]: JMP       435          ; PC := 435
419 [-]: GETGLOBAL R42 K4       ; R42 := _T
420 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["WorldStateDerelictNodes"]
421 [-]: GETGLOBAL R43 K38      ; R43 := 0x64fb1586
422 [-]: GETTABLE  R44 R40 K39  ; R44 := R40["name"]
423 [-]: CALL      R43 2 2      ; R43 := R43(R44)
424 [-]: SETTABLE  R42 R43 K93  ; R42[R43] := true
425 [-]: GETGLOBAL R42 K4       ; R42 := _T
426 [-]: GETTABLE  R42 R42 K76  ; R42 := R42["WorldStateOutbreakChains"]
427 [-]: GETTABLE  R43 R34 K39  ; R43 := R34["name"]
428 [-]: GETTABLE  R44 R31 K94  ; R44 := R31["mChainID"]
429 [-]: GETTABLE  R44 R44 K42  ; R44 := R44["mId"]
430 [-]: SETTABLE  R42 R43 R44  ; R42[R43] := R44
431 [-]: EQ        0 R41 K37    ; if R41 ~= 0.000000 then PC := 437
432 [-]: JMP       437          ; PC := 437
433 [-]: LOADBOOL  R26 0 0      ; R26 := false
434 [-]: JMP       437          ; PC := 437
435 [-]: TFORLOOP  R36 2        ; R39,R40 :=  R36(R37,R38); if R39 ~= nil then begin PC = 392; R38 := R39 end
436 [-]: JMP       392          ; PC := 392
437 [-]: FORLOOP   R27 290      ; R27 += R29; if R27 <= R28 then begin PC := 290; R30 := R27 end
438 [-]: GETTABLE  R42 R2 K95   ; R42 := R2["mGoals"]
439 [-]: NEWTABLE  R43 0 0      ; R43 := {}
440 [-]: GETGLOBAL R44 K0       ; R44 := 0x7b998233
441 [-]: GETGLOBAL R45 K28      ; R45 := 0x83f4e77c
442 [-]: CALL      R44 2 2      ; R44 := R44(R45)
443 [-]: GETUPVAL  R45 U5       ; R45 := U5
444 [-]: GETTABLE  R45 R45 K96  ; R45 := R45[0xbc682855]
445 [-]: MOVE      R46 R1       ; R46 := R1
446 [-]: CALL      R45 2 2      ; R45 := R45(R46)
447 [-]: LOADK     R46 1        ; R46 := 1.000000
448 [-]: LEN       R47 R42      ; R47 := # R42
449 [-]: LOADK     R48 1        ; R48 := 1.000000
450 [-]: FORPREP   R46 1305     ; R46 -= R48; PC := 1305
451 [-]: GETGLOBAL R50 K30      ; R50 := 0xce225efa
452 [-]: LOADK     R51 0        ; R51 := 0.000000
453 [-]: CALL      R50 2 1      ; R50(R51)
454 [-]: GETTABLE  R50 R42 R49  ; R50 := R42[R49]
455 [-]: GETTABLE  R6 R50 K77   ; R6 := R50["mNode"]
456 [-]: GETGLOBAL R51 K34      ; R51 := 0x34291f5c
457 [-]: GETTABLE  R51 R51 K35  ; R51 := R51[0x397b920f]
458 [-]: GETTABLE  R52 R50 K40  ; R52 := R50["mActivation"]
459 [-]: CALL      R51 2 2      ; R51 := R51(R52)
460 [-]: LOADK     R52 K81      ; R52 := ""
461 [-]: TEST      R44 0        ; if not R44 then PC := 470
462 [-]: JMP       470          ; PC := 470
463 [-]: GETGLOBAL R53 K2       ; R53 := 0x3d106989
464 [-]: LOADK     R54 K97      ; R54 := "Goal: "
465 [-]: GETGLOBAL R55 K38      ; R55 := 0x64fb1586
466 [-]: MOVE      R56 R6       ; R56 := R6
467 [-]: CALL      R55 2 2      ; R55 := R55(R56)
468 [-]: CONCAT    R54 R54 R55  ; R54 := R54 .. R55
469 [-]: CALL      R53 2 1      ; R53(R54)
470 [-]: LT        0 K37 R51    ; if 0.000000 >= R51 then PC := 486
471 [-]: JMP       486          ; PC := 486
472 [-]: TEST      R44 0        ; if not R44 then PC := 481
473 [-]: JMP       481          ; PC := 481
474 [-]: GETGLOBAL R53 K2       ; R53 := 0x3d106989
475 [-]: LOADK     R54 K98      ; R54 := "Seconds until start: "
476 [-]: GETGLOBAL R55 K38      ; R55 := 0x64fb1586
477 [-]: MOVE      R56 R51      ; R56 := R51
478 [-]: CALL      R55 2 2      ; R55 := R55(R56)
479 [-]: CONCAT    R54 R54 R55  ; R54 := R54 .. R55
480 [-]: CALL      R53 2 1      ; R53(R54)
481 [-]: GETUPVAL  R53 U2       ; R53 := U2
482 [-]: MOVE      R54 R6       ; R54 := R6
483 [-]: MOVE      R55 R51      ; R55 := R51
484 [-]: CALL      R53 3 1      ; R53(R54,R55)
485 [-]: JMP       1305         ; PC := 1305
486 [-]: GETTABLE  R53 R50 K99  ; R53 := R50["mInvasion"]
487 [-]: TEST      R53 1        ; if R53 then PC := 575
488 [-]: JMP       575          ; PC := 575
489 [-]: GETUPVAL  R53 U0       ; R53 := U0
490 [-]: TEST      R53 0        ; if not R53 then PC := 511
491 [-]: JMP       511          ; PC := 511
492 [-]: SELF      R53 R1 K100  ; R54 := R1; R53 := R1[0x7e2a4aa9]
493 [-]: SUB       R55 R49 K45  ; R55 := R49 - 1.000000
494 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
495 [-]: TEST      R53 0        ; if not R53 then PC := 511
496 [-]: JMP       511          ; PC := 511
497 [-]: GETGLOBAL R53 K34      ; R53 := 0x34291f5c
498 [-]: GETTABLE  R53 R53 K35  ; R53 := R53[0x397b920f]
499 [-]: GETTABLE  R54 R50 K36  ; R54 := R50["mExpiry"]
500 [-]: CALL      R53 2 2      ; R53 := R53(R54)
501 [-]: LE        1 R53 K37    ; if R53 <= 0.000000 then PC := 511
502 [-]: JMP       511          ; PC := 511
503 [-]: GETTABLE  R53 R50 K67  ; R53 := R50["mTag"]
504 [-]: GETUPVAL  R54 U6       ; R54 := U6
505 [-]: EQ        0 R53 R54    ; if R53 ~= R54 then PC := 575
506 [-]: JMP       575          ; PC := 575
507 [-]: TEST      R45 1        ; if R45 then PC := 575
508 [-]: JMP       575          ; PC := 575
509 [-]: TEST      R5 1         ; if R5 then PC := 575
510 [-]: JMP       575          ; PC := 575
511 [-]: TEST      R44 0        ; if not R44 then PC := 516
512 [-]: JMP       516          ; PC := 516
513 [-]: GETGLOBAL R53 K2       ; R53 := 0x3d106989
514 [-]: LOADK     R54 K101     ; R54 := "Goal locked"
515 [-]: CALL      R53 2 1      ; R53(R54)
516 [-]: GETTABLE  R53 R50 K77  ; R53 := R50["mNode"]
517 [-]: EQ        1 R53 K81    ; if R53 == "" then PC := 552
518 [-]: JMP       552          ; PC := 552
519 [-]: GETGLOBAL R53 K90      ; R53 := 0x7f5022cf
520 [-]: GETTABLE  R53 R53 K91  ; R53 := R53[0xa5c556b9]
521 [-]: GETTABLE  R54 R50 K77  ; R54 := R50["mNode"]
522 [-]: LOADK     R55 K102     ; R55 := "Pvp"
523 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
524 [-]: TEST      R53 1        ; if R53 then PC := 552
525 [-]: JMP       552          ; PC := 552
526 [-]: GETTABLE  R53 R50 K103 ; R53 := R50["mOptionalInMission"]
527 [-]: TEST      R53 1        ; if R53 then PC := 552
528 [-]: JMP       552          ; PC := 552
529 [-]: GETTABLE  R53 R50 K104 ; R53 := R50["mRelayReconstruction"]
530 [-]: TEST      R53 1        ; if R53 then PC := 552
531 [-]: JMP       552          ; PC := 552
532 [-]: GETUPVAL  R53 U1       ; R53 := U1
533 [-]: GETTABLE  R53 R53 K26  ; R53 := R53[0x5e35d4d6]
534 [-]: CALL      R53 1 2      ; R53 := R53()
535 [-]: SELF      R53 R53 K31  ; R54 := R53; R53 := R53[0x3ad9ed31]
536 [-]: GETGLOBAL R55 K105     ; R55 := 0x0469f296
537 [-]: GETTABLE  R56 R50 K77  ; R56 := R50["mNode"]
538 [-]: CALL      R55 2 0      ; R55,... := R55(R56)
539 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
540 [-]: GETTABLE  R54 R53 K106 ; R54 := R53["nodeType"]
541 [-]: EQ        0 R54 K45    ; if R54 ~= 1.000000 then PC := 552
542 [-]: JMP       552          ; PC := 552
543 [-]: GETGLOBAL R54 K4       ; R54 := _T
544 [-]: GETTABLE  R54 R54 K16  ; R54 := R54["LockedGoalList"]
545 [-]: GETTABLE  R55 R50 K77  ; R55 := R50["mNode"]
546 [-]: NEWTABLE  R56 0 2      ; R56 := {}
547 [-]: GETTABLE  R57 R50 K107 ; R57 := R50["mDesc"]
548 [-]: SETTABLE  R56 K107 R57 ; R56["mDesc"] := R57
549 [-]: GETTABLE  R57 R50 K108 ; R57 := R50["mMissionKeyName"]
550 [-]: SETTABLE  R56 K108 R57 ; R56["mMissionKeyName"] := R57
551 [-]: SETTABLE  R54 R55 R56  ; R54[R55] := R56
552 [-]: GETTABLE  R54 R50 K109 ; R54 := R50["mFomorian"]
553 [-]: TEST      R54 0        ; if not R54 then PC := 1305
554 [-]: JMP       1305         ; PC := 1305
555 [-]: GETGLOBAL R54 K38      ; R54 := 0x64fb1586
556 [-]: GETTABLE  R55 R50 K110 ; R55 := R50["mVictimNode"]
557 [-]: CALL      R54 2 2      ; R54 := R54(R55)
558 [-]: EQ        1 R54 K81    ; if R54 == "" then PC := 1305
559 [-]: JMP       1305         ; PC := 1305
560 [-]: GETGLOBAL R55 K4       ; R55 := _T
561 [-]: GETTABLE  R55 R55 K17  ; R55 := R55["CachedNodesPendingDestruction"]
562 [-]: NEWTABLE  R56 0 2      ; R56 := {}
563 [-]: GETTABLE  R57 R50 K112 ; R57 := R50["mHealthPct"]
564 [-]: LT        1 K37 R57    ; if 0.000000 < R57 then PC := 567
565 [-]: JMP       567          ; PC := 567
566 [-]: LOADBOOL  R57 0 1      ; R57 := false; PC := 567
567 [-]: LOADBOOL  R57 1 0      ; R57 := true
568 [-]: SETTABLE  R56 K111 R57 ; R56["shouldLock"] := R57
569 [-]: GETTABLE  R57 R50 K36  ; R57 := R50["mExpiry"]
570 [-]: SELF      R57 R57 K114 ; R58 := R57; R57 := R57[0x8f89d633]
571 [-]: CALL      R57 2 2      ; R57 := R57(R58)
572 [-]: SETTABLE  R56 K113 R57 ; R56["lockTime"] := R57
573 [-]: SETTABLE  R55 R54 R56  ; R55[R54] := R56
574 [-]: JMP       1305         ; PC := 1305
575 [-]: GETTABLE  R55 R50 K115 ; R55 := R50["mSuccess"]
576 [-]: EQ        1 R55 K37    ; if R55 == 0.000000 then PC := 582
577 [-]: JMP       582          ; PC := 582
578 [-]: GETTABLE  R55 R50 K116 ; R55 := R50["mTypes"]
579 [-]: LEN       R55 R55      ; R55 := # R55
580 [-]: LT        0 K37 R55    ; if 0.000000 >= R55 then PC := 1305
581 [-]: JMP       1305         ; PC := 1305
582 [-]: LOADNIL   R55 R55      ; R55 := nil
583 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
584 [-]: GETTABLE  R57 R50 K108 ; R57 := R50["mMissionKeyName"]
585 [-]: CALL      R56 2 2      ; R56 := R56(R57)
586 [-]: TEST      R56 1        ; if R56 then PC := 674
587 [-]: JMP       674          ; PC := 674
588 [-]: GETGLOBAL R56 K4       ; R56 := _T
589 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
590 [-]: TEST      R56 1        ; if R56 then PC := 598
591 [-]: JMP       598          ; PC := 598
592 [-]: GETGLOBAL R56 K4       ; R56 := _T
593 [-]: NEWTABLE  R57 0 0      ; R57 := {}
594 [-]: SETTABLE  R56 K117 R57 ; R56["CachedGoalKeys"] := R57
595 [-]: GETGLOBAL R56 K4       ; R56 := _T
596 [-]: NEWTABLE  R57 0 0      ; R57 := {}
597 [-]: SETTABLE  R56 K118 R57 ; R56["CachedGoalKeyTypes"] := R57
598 [-]: TEST      R44 0        ; if not R44 then PC := 607
599 [-]: JMP       607          ; PC := 607
600 [-]: GETGLOBAL R56 K2       ; R56 := 0x3d106989
601 [-]: LOADK     R57 K119     ; R57 := "Adding "
602 [-]: GETGLOBAL R58 K38      ; R58 := 0x64fb1586
603 [-]: MOVE      R59 R6       ; R59 := R6
604 [-]: CALL      R58 2 2      ; R58 := R58(R59)
605 [-]: CONCAT    R57 R57 R58  ; R57 := R57 .. R58
606 [-]: CALL      R56 2 1      ; R56(R57)
607 [-]: GETGLOBAL R56 K4       ; R56 := _T
608 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
609 [-]: GETTABLE  R56 R56 R6   ; R56 := R56[R6]
610 [-]: TEST      R56 1        ; if R56 then PC := 626
611 [-]: JMP       626          ; PC := 626
612 [-]: GETGLOBAL R56 K4       ; R56 := _T
613 [-]: GETTABLE  R56 R56 K118 ; R56 := R56["CachedGoalKeyTypes"]
614 [-]: GETGLOBAL R57 K120     ; R57 := 0x88efc25e
615 [-]: GETTABLE  R58 R50 K108 ; R58 := R50["mMissionKeyName"]
616 [-]: CALL      R57 2 2      ; R57 := R57(R58)
617 [-]: SETTABLE  R56 R6 R57   ; R56[R6] := R57
618 [-]: GETGLOBAL R56 K4       ; R56 := _T
619 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
620 [-]: GETGLOBAL R57 K121     ; R57 := 0xb009bbc6
621 [-]: GETGLOBAL R58 K4       ; R58 := _T
622 [-]: GETTABLE  R58 R58 K118 ; R58 := R58["CachedGoalKeyTypes"]
623 [-]: GETTABLE  R58 R58 R6   ; R58 := R58[R6]
624 [-]: CALL      R57 2 2      ; R57 := R57(R58)
625 [-]: SETTABLE  R56 R6 R57   ; R56[R6] := R57
626 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
627 [-]: GETGLOBAL R57 K4       ; R57 := _T
628 [-]: GETTABLE  R57 R57 K117 ; R57 := R57["CachedGoalKeys"]
629 [-]: GETTABLE  R57 R57 R6   ; R57 := R57[R6]
630 [-]: CALL      R56 2 2      ; R56 := R56(R57)
631 [-]: TEST      R56 1        ; if R56 then PC := 647
632 [-]: JMP       647          ; PC := 647
633 [-]: GETGLOBAL R56 K4       ; R56 := _T
634 [-]: GETTABLE  R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
635 [-]: GETTABLE  R56 R56 R6   ; R56 := R56[R6]
636 [-]: SELF      R56 R56 K122 ; R57 := R56; R56 := R56[0xef893aec]
637 [-]: CALL      R56 2 2      ; R56 := R56(R57)
638 [-]: MOVE      R55 R56      ; R55 := R56
639 [-]: GETGLOBAL R56 K38      ; R56 := 0x64fb1586
640 [-]: GETGLOBAL R57 K4       ; R57 := _T
641 [-]: GETTABLE  R57 R57 K117 ; R57 := R57["CachedGoalKeys"]
642 [-]: GETTABLE  R57 R57 R6   ; R57 := R57[R6]
643 [-]: SELF      R57 R57 K123 ; R58 := R57; R57 := R57[0x030ae5e5]
644 [-]: CALL      R57 2 0      ; R57,... := R57(R58)
645 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
646 [-]: MOVE      R52 R56      ; R52 := R56
647 [-]: TEST      R55 0        ; if not R55 then PC := 707
648 [-]: JMP       707          ; PC := 707
649 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
650 [-]: GETTABLE  R56 R56 K64  ; R56 := R56["minEnemyLevel"]
651 [-]: LT        0 K45 R56    ; if 1.000000 >= R56 then PC := 656
652 [-]: JMP       656          ; PC := 656
653 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
654 [-]: GETTABLE  R56 R56 K64  ; R56 := R56["minEnemyLevel"]
655 [-]: SETTABLE  R55 K64 R56  ; R55["minEnemyLevel"] := R56
656 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
657 [-]: GETTABLE  R56 R56 K62  ; R56 := R56["maxEnemyLevel"]
658 [-]: LT        0 K45 R56    ; if 1.000000 >= R56 then PC := 663
659 [-]: JMP       663          ; PC := 663
660 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
661 [-]: GETTABLE  R56 R56 K62  ; R56 := R56["maxEnemyLevel"]
662 [-]: SETTABLE  R55 K62 R56  ; R55["maxEnemyLevel"] := R56
663 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
664 [-]: GETTABLE  R57 R50 K32  ; R57 := R50["mMissionInfo"]
665 [-]: GETTABLE  R57 R57 K124 ; R57 := R57["enemySpec"]
666 [-]: CALL      R56 2 2      ; R56 := R56(R57)
667 [-]: TEST      R56 1        ; if R56 then PC := 672
668 [-]: JMP       672          ; PC := 672
669 [-]: GETTABLE  R56 R50 K32  ; R56 := R50["mMissionInfo"]
670 [-]: GETTABLE  R56 R56 K124 ; R56 := R56["enemySpec"]
671 [-]: SETTABLE  R55 K124 R56 ; R55["enemySpec"] := R56
672 [-]: SETTABLE  R50 K32 R55  ; R50["mMissionInfo"] := R55
673 [-]: JMP       707          ; PC := 707
674 [-]: GETGLOBAL R56 K0       ; R56 := 0x7b998233
675 [-]: GETTABLE  R57 R50 K32  ; R57 := R50["mMissionInfo"]
676 [-]: GETTABLE  R57 R57 K125 ; R57 := R57["levelOverride"]
677 [-]: CALL      R56 2 2      ; R56 := R56(R57)
678 [-]: TEST      R56 0        ; if not R56 then PC := 707
679 [-]: JMP       707          ; PC := 707
680 [-]: GETTABLE  R56 R50 K77  ; R56 := R50["mNode"]
681 [-]: EQ        1 R56 K81    ; if R56 == "" then PC := 707
682 [-]: JMP       707          ; PC := 707
683 [-]: GETTABLE  R56 R50 K103 ; R56 := R50["mOptionalInMission"]
684 [-]: TEST      R56 1        ; if R56 then PC := 707
685 [-]: JMP       707          ; PC := 707
686 [-]: GETUPVAL  R56 U1       ; R56 := U1
687 [-]: GETTABLE  R56 R56 K26  ; R56 := R56[0x5e35d4d6]
688 [-]: CALL      R56 1 2      ; R56 := R56()
689 [-]: SELF      R56 R56 K31  ; R57 := R56; R56 := R56[0x3ad9ed31]
690 [-]: GETGLOBAL R58 K105     ; R58 := 0x0469f296
691 [-]: GETTABLE  R59 R50 K77  ; R59 := R50["mNode"]
692 [-]: CALL      R58 2 0      ; R58,... := R58(R59)
693 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
694 [-]: GETTABLE  R57 R50 K32  ; R57 := R50["mMissionInfo"]
695 [-]: GETTABLE  R57 R57 K126 ; R57 := R57["icon"]
696 [-]: GETTABLE  R58 R56 K87  ; R58 := R56["mission"]
697 [-]: SELF      R58 R58 K114 ; R59 := R58; R58 := R58[0x8f89d633]
698 [-]: CALL      R58 2 2      ; R58 := R58(R59)
699 [-]: SETTABLE  R50 K32 R58  ; R50["mMissionInfo"] := R58
700 [-]: GETGLOBAL R58 K0       ; R58 := 0x7b998233
701 [-]: MOVE      R59 R57      ; R59 := R57
702 [-]: CALL      R58 2 2      ; R58 := R58(R59)
703 [-]: TEST      R58 1        ; if R58 then PC := 707
704 [-]: JMP       707          ; PC := 707
705 [-]: GETTABLE  R58 R50 K32  ; R58 := R50["mMissionInfo"]
706 [-]: SETTABLE  R58 K126 R57 ; R58["icon"] := R57
707 [-]: GETTABLE  R58 R50 K32  ; R58 := R50["mMissionInfo"]
708 [-]: GETTABLE  R59 R50 K42  ; R59 := R50["mId"]
709 [-]: GETTABLE  R59 R59 K42  ; R59 := R59["mId"]
710 [-]: SETTABLE  R58 K127 R59 ; R58["goalId"] := R59
711 [-]: NEWTABLE  R58 0 0      ; R58 := {}
712 [-]: LOADK     R59 0        ; R59 := 0.000000
713 [-]: GETTABLE  R60 R50 K77  ; R60 := R50["mNode"]
714 [-]: EQ        1 R60 K81    ; if R60 == "" then PC := 748
715 [-]: JMP       748          ; PC := 748
716 [-]: GETTABLE  R60 R50 K103 ; R60 := R50["mOptionalInMission"]
717 [-]: TEST      R60 0        ; if not R60 then PC := 735
718 [-]: JMP       735          ; PC := 735
719 [-]: NEWTABLE  R60 0 4      ; R60 := {}
720 [-]: GETUPVAL  R61 U1       ; R61 := U1
721 [-]: GETTABLE  R61 R61 K129 ; R61 := R61["OPTIONAL_GOAL_PREFIX"]
722 [-]: GETTABLE  R62 R50 K77  ; R62 := R50["mNode"]
723 [-]: CONCAT    R61 R61 R62  ; R61 := R61 .. R62
724 [-]: SETTABLE  R60 K128 R61 ; R60["nodeName"] := R61
725 [-]: GETTABLE  R61 R50 K108 ; R61 := R50["mMissionKeyName"]
726 [-]: SETTABLE  R60 K130 R61 ; R60["missionKeyName"] := R61
727 [-]: SETTABLE  R60 K131 R55 ; R60["missionKeyInfo"] := R55
728 [-]: SETTABLE  R60 K132 R52 ; R60["longDesc"] := R52
729 [-]: GETGLOBAL R61 K133     ; R61 := 0x33bdd652
730 [-]: GETTABLE  R61 R61 K134 ; R61 := R61[0x23d5322f]
731 [-]: MOVE      R62 R58      ; R62 := R58
732 [-]: MOVE      R63 R60      ; R63 := R60
733 [-]: CALL      R61 3 1      ; R61(R62,R63)
734 [-]: JMP       782          ; PC := 782
735 [-]: NEWTABLE  R61 0 4      ; R61 := {}
736 [-]: GETTABLE  R62 R50 K77  ; R62 := R50["mNode"]
737 [-]: SETTABLE  R61 K128 R62 ; R61["nodeName"] := R62
738 [-]: GETTABLE  R62 R50 K108 ; R62 := R50["mMissionKeyName"]
739 [-]: SETTABLE  R61 K130 R62 ; R61["missionKeyName"] := R62
740 [-]: SETTABLE  R61 K131 R55 ; R61["missionKeyInfo"] := R55
741 [-]: SETTABLE  R61 K132 R52 ; R61["longDesc"] := R52
742 [-]: GETGLOBAL R62 K133     ; R62 := 0x33bdd652
743 [-]: GETTABLE  R62 R62 K134 ; R62 := R62[0x23d5322f]
744 [-]: MOVE      R63 R58      ; R63 := R58
745 [-]: MOVE      R64 R61      ; R64 := R61
746 [-]: CALL      R62 3 1      ; R62(R63,R64)
747 [-]: JMP       782          ; PC := 782
748 [-]: GETTABLE  R62 R50 K135 ; R62 := R50["mInvasionNode"]
749 [-]: GETGLOBAL R63 K136     ; R63 := EMPTY_SYMBOL
750 [-]: EQ        1 R62 R63    ; if R62 == R63 then PC := 767
751 [-]: JMP       767          ; PC := 767
752 [-]: NEWTABLE  R62 0 4      ; R62 := {}
753 [-]: GETGLOBAL R63 K38      ; R63 := 0x64fb1586
754 [-]: GETTABLE  R64 R50 K135 ; R64 := R50["mInvasionNode"]
755 [-]: CALL      R63 2 2      ; R63 := R63(R64)
756 [-]: SETTABLE  R62 K128 R63 ; R62["nodeName"] := R63
757 [-]: GETTABLE  R63 R50 K108 ; R63 := R50["mMissionKeyName"]
758 [-]: SETTABLE  R62 K130 R63 ; R62["missionKeyName"] := R63
759 [-]: SETTABLE  R62 K131 R55 ; R62["missionKeyInfo"] := R55
760 [-]: SETTABLE  R62 K132 R52 ; R62["longDesc"] := R52
761 [-]: GETGLOBAL R63 K133     ; R63 := 0x33bdd652
762 [-]: GETTABLE  R63 R63 K134 ; R63 := R63[0x23d5322f]
763 [-]: MOVE      R64 R58      ; R64 := R58
764 [-]: MOVE      R65 R62      ; R65 := R62
765 [-]: CALL      R63 3 1      ; R63(R64,R65)
766 [-]: JMP       782          ; PC := 782
767 [-]: NEWTABLE  R63 0 4      ; R63 := {}
768 [-]: GETUPVAL  R64 U1       ; R64 := U1
769 [-]: GETTABLE  R64 R64 K137 ; R64 := R64["ANY_NODE_PREFIX"]
770 [-]: MOVE      R65 R49      ; R65 := R49
771 [-]: CONCAT    R64 R64 R65  ; R64 := R64 .. R65
772 [-]: SETTABLE  R63 K128 R64 ; R63["nodeName"] := R64
773 [-]: GETTABLE  R64 R50 K108 ; R64 := R50["mMissionKeyName"]
774 [-]: SETTABLE  R63 K130 R64 ; R63["missionKeyName"] := R64
775 [-]: SETTABLE  R63 K131 R55 ; R63["missionKeyInfo"] := R55
776 [-]: SETTABLE  R63 K132 R52 ; R63["longDesc"] := R52
777 [-]: GETGLOBAL R64 K133     ; R64 := 0x33bdd652
778 [-]: GETTABLE  R64 R64 K134 ; R64 := R64[0x23d5322f]
779 [-]: MOVE      R65 R58      ; R65 := R58
780 [-]: MOVE      R66 R63      ; R66 := R63
781 [-]: CALL      R64 3 1      ; R64(R65,R66)
782 [-]: GETUPVAL  R64 U1       ; R64 := U1
783 [-]: GETTABLE  R64 R64 K138 ; R64 := R64[0x9897ecc6]
784 [-]: MOVE      R65 R50      ; R65 := R50
785 [-]: CALL      R64 2 4      ; R64,R65,R66 := R64(R65)
786 [-]: LOADK     R67 1        ; R67 := 1.000000
787 [-]: GETTABLE  R68 R50 K139 ; R68 := R50["mConcurrentNodes"]
788 [-]: LEN       R68 R68      ; R68 := # R68
789 [-]: LOADK     R69 1        ; R69 := 1.000000
790 [-]: FORPREP   R67 1076     ; R67 -= R69; PC := 1076
791 [-]: GETTABLE  R71 R50 K139 ; R71 := R50["mConcurrentNodes"]
792 [-]: GETTABLE  R71 R71 R70  ; R71 := R71[R70]
793 [-]: GETTABLE  R72 R50 K77  ; R72 := R50["mNode"]
794 [-]: EQ        1 R71 R72    ; if R71 == R72 then PC := 1076
795 [-]: JMP       1076         ; PC := 1076
796 [-]: EQ        1 R71 K81    ; if R71 == "" then PC := 1076
797 [-]: JMP       1076         ; PC := 1076
798 [-]: GETUPVAL  R72 U0       ; R72 := U0
799 [-]: GETTABLE  R73 R50 K140 ; R73 := R50["mConcurrentNodeReqs"]
800 [-]: LEN       R73 R73      ; R73 := # R73
801 [-]: LE        0 R70 R73    ; if R70 > R73 then PC := 819
802 [-]: JMP       819          ; PC := 819
803 [-]: GETTABLE  R73 R50 K140 ; R73 := R50["mConcurrentNodeReqs"]
804 [-]: GETTABLE  R73 R73 R70  ; R73 := R73[R70]
805 [-]: LT        0 K37 R73    ; if 0.000000 >= R73 then PC := 819
806 [-]: JMP       819          ; PC := 819
807 [-]: GETUPVAL  R73 U7       ; R73 := U7
808 [-]: GETTABLE  R73 R73 K141 ; R73 := R73[0x06d055f9]
809 [-]: GETTABLE  R74 R50 K142 ; R74 := R50["mBest"]
810 [-]: MOVE      R75 R65      ; R75 := R65
811 [-]: MOVE      R76 R64      ; R76 := R64
812 [-]: CALL      R73 4 2      ; R73 := R73(R74,R75,R76)
813 [-]: GETTABLE  R74 R50 K140 ; R74 := R50["mConcurrentNodeReqs"]
814 [-]: GETTABLE  R74 R74 R70  ; R74 := R74[R70]
815 [-]: LE        1 R74 R73    ; if R74 <= R73 then PC := 818
816 [-]: JMP       818          ; PC := 818
817 [-]: LOADBOOL  R72 0 1      ; R72 := false; PC := 818
818 [-]: LOADBOOL  R72 1 0      ; R72 := true
819 [-]: TEST      R72 0        ; if not R72 then PC := 946
820 [-]: JMP       946          ; PC := 946
821 [-]: GETTABLE  R73 R50 K108 ; R73 := R50["mMissionKeyName"]
822 [-]: MOVE      R74 R55      ; R74 := R55
823 [-]: LOADBOOL  R75 0 0      ; R75 := false
824 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
825 [-]: LEN       R76 R76      ; R76 := # R76
826 [-]: LE        0 R70 R76    ; if R70 > R76 then PC := 884
827 [-]: JMP       884          ; PC := 884
828 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
829 [-]: GETTABLE  R76 R76 R70  ; R76 := R76[R70]
830 [-]: TEST      R76 0        ; if not R76 then PC := 884
831 [-]: JMP       884          ; PC := 884
832 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
833 [-]: GETTABLE  R76 R76 R70  ; R76 := R76[R70]
834 [-]: EQ        1 R76 K81    ; if R76 == "" then PC := 884
835 [-]: JMP       884          ; PC := 884
836 [-]: GETTABLE  R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
837 [-]: GETTABLE  R73 R76 R70  ; R73 := R76[R70]
838 [-]: GETGLOBAL R76 K121     ; R76 := 0xb009bbc6
839 [-]: MOVE      R77 R73      ; R77 := R73
840 [-]: CALL      R76 2 2      ; R76 := R76(R77)
841 [-]: GETGLOBAL R77 K0       ; R77 := 0x7b998233
842 [-]: MOVE      R78 R76      ; R78 := R76
843 [-]: CALL      R77 2 2      ; R77 := R77(R78)
844 [-]: TEST      R77 1        ; if R77 then PC := 854
845 [-]: JMP       854          ; PC := 854
846 [-]: SELF      R77 R76 K122 ; R78 := R76; R77 := R76[0xef893aec]
847 [-]: CALL      R77 2 2      ; R77 := R77(R78)
848 [-]: MOVE      R74 R77      ; R74 := R77
849 [-]: GETGLOBAL R77 K38      ; R77 := 0x64fb1586
850 [-]: SELF      R78 R76 K123 ; R79 := R76; R78 := R76[0x030ae5e5]
851 [-]: CALL      R78 2 0      ; R78,... := R78(R79)
852 [-]: CALL      R77 0 2      ; R77 := R77(R78,...)
853 [-]: MOVE      R52 R77      ; R52 := R77
854 [-]: GETTABLE  R77 R50 K144 ; R77 := R50["mClampNodeScores"]
855 [-]: TEST      R77 0        ; if not R77 then PC := 863
856 [-]: JMP       863          ; PC := 863
857 [-]: GETTABLE  R77 R50 K140 ; R77 := R50["mConcurrentNodeReqs"]
858 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
859 [-]: GETTABLE  R78 R50 K145 ; R78 := R50["mGoal"]
860 [-]: LE        0 R78 R77    ; if R78 > R77 then PC := 863
861 [-]: JMP       863          ; PC := 863
862 [-]: LOADBOOL  R75 1 0      ; R75 := true
863 [-]: GETGLOBAL R77 K4       ; R77 := _T
864 [-]: GETTABLE  R77 R77 K117 ; R77 := R77["CachedGoalKeys"]
865 [-]: GETTABLE  R77 R77 R71  ; R77 := R77[R71]
866 [-]: TEST      R77 1        ; if R77 then PC := 927
867 [-]: JMP       927          ; PC := 927
868 [-]: GETGLOBAL R77 K4       ; R77 := _T
869 [-]: GETTABLE  R77 R77 K118 ; R77 := R77["CachedGoalKeyTypes"]
870 [-]: GETGLOBAL R78 K120     ; R78 := 0x88efc25e
871 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
872 [-]: GETTABLE  R79 R79 R70  ; R79 := R79[R70]
873 [-]: CALL      R78 2 2      ; R78 := R78(R79)
874 [-]: SETTABLE  R77 R71 R78  ; R77[R71] := R78
875 [-]: GETGLOBAL R77 K4       ; R77 := _T
876 [-]: GETTABLE  R77 R77 K117 ; R77 := R77["CachedGoalKeys"]
877 [-]: GETGLOBAL R78 K121     ; R78 := 0xb009bbc6
878 [-]: GETGLOBAL R79 K4       ; R79 := _T
879 [-]: GETTABLE  R79 R79 K118 ; R79 := R79["CachedGoalKeyTypes"]
880 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
881 [-]: CALL      R78 2 2      ; R78 := R78(R79)
882 [-]: SETTABLE  R77 R71 R78  ; R77[R71] := R78
883 [-]: JMP       927          ; PC := 927
884 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
885 [-]: LEN       R77 R77      ; R77 := # R77
886 [-]: LE        0 R70 R77    ; if R70 > R77 then PC := 907
887 [-]: JMP       907          ; PC := 907
888 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
889 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
890 [-]: TEST      R77 0        ; if not R77 then PC := 907
891 [-]: JMP       907          ; PC := 907
892 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
893 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
894 [-]: SELF      R77 R77 K114 ; R78 := R77; R77 := R77[0x8f89d633]
895 [-]: CALL      R77 2 2      ; R77 := R77(R78)
896 [-]: MOVE      R74 R77      ; R74 := R77
897 [-]: GETTABLE  R77 R50 K144 ; R77 := R50["mClampNodeScores"]
898 [-]: TEST      R77 0        ; if not R77 then PC := 927
899 [-]: JMP       927          ; PC := 927
900 [-]: GETTABLE  R77 R50 K140 ; R77 := R50["mConcurrentNodeReqs"]
901 [-]: GETTABLE  R77 R77 R70  ; R77 := R77[R70]
902 [-]: GETTABLE  R78 R50 K145 ; R78 := R50["mGoal"]
903 [-]: LE        0 R78 R77    ; if R78 > R77 then PC := 927
904 [-]: JMP       927          ; PC := 927
905 [-]: LOADBOOL  R75 1 0      ; R75 := true
906 [-]: JMP       927          ; PC := 927
907 [-]: GETTABLE  R77 R50 K143 ; R77 := R50["mConcurrentMissionKeyNames"]
908 [-]: LEN       R77 R77      ; R77 := # R77
909 [-]: EQ        0 R77 K37    ; if R77 ~= 0.000000 then PC := 927
910 [-]: JMP       927          ; PC := 927
911 [-]: GETTABLE  R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
912 [-]: LEN       R77 R77      ; R77 := # R77
913 [-]: EQ        0 R77 K37    ; if R77 ~= 0.000000 then PC := 927
914 [-]: JMP       927          ; PC := 927
915 [-]: GETUPVAL  R77 U1       ; R77 := U1
916 [-]: GETTABLE  R77 R77 K26  ; R77 := R77[0x5e35d4d6]
917 [-]: CALL      R77 1 2      ; R77 := R77()
918 [-]: SELF      R77 R77 K31  ; R78 := R77; R77 := R77[0x3ad9ed31]
919 [-]: GETGLOBAL R79 K105     ; R79 := 0x0469f296
920 [-]: MOVE      R80 R71      ; R80 := R71
921 [-]: CALL      R79 2 0      ; R79,... := R79(R80)
922 [-]: CALL      R77 0 2      ; R77 := R77(R78,...)
923 [-]: GETTABLE  R78 R77 K87  ; R78 := R77["mission"]
924 [-]: SELF      R78 R78 K114 ; R79 := R78; R78 := R78[0x8f89d633]
925 [-]: CALL      R78 2 2      ; R78 := R78(R79)
926 [-]: MOVE      R74 R78      ; R74 := R78
927 [-]: ADD       R59 R59 K45  ; R59 := R59 + 1.000000
928 [-]: NEWTABLE  R78 0 8      ; R78 := {}
929 [-]: SETTABLE  R78 K128 R71 ; R78["nodeName"] := R71
930 [-]: SETTABLE  R78 K130 R73 ; R78["missionKeyName"] := R73
931 [-]: SETTABLE  R78 K131 R74 ; R78["missionKeyInfo"] := R74
932 [-]: SETTABLE  R78 K147 K93 ; R78["concurrent"] := true
933 [-]: SETTABLE  R78 K148 R75 ; R78["challenge"] := R75
934 [-]: ADD       R79 R59 K45  ; R79 := R59 + 1.000000
935 [-]: SETTABLE  R78 K149 R79 ; R78["concurrentNumeral"] := R79
936 [-]: GETTABLE  R79 R50 K140 ; R79 := R50["mConcurrentNodeReqs"]
937 [-]: GETTABLE  R79 R79 R70  ; R79 := R79[R70]
938 [-]: SETTABLE  R78 K150 R79 ; R78["nodeScoreReq"] := R79
939 [-]: SETTABLE  R78 K132 R52 ; R78["longDesc"] := R52
940 [-]: GETGLOBAL R79 K133     ; R79 := 0x33bdd652
941 [-]: GETTABLE  R79 R79 K134 ; R79 := R79[0x23d5322f]
942 [-]: MOVE      R80 R58      ; R80 := R58
943 [-]: MOVE      R81 R78      ; R81 := R78
944 [-]: CALL      R79 3 1      ; R79(R80,R81)
945 [-]: JMP       1076         ; PC := 1076
946 [-]: GETGLOBAL R79 K4       ; R79 := _T
947 [-]: GETTABLE  R79 R79 K16  ; R79 := R79["LockedGoalList"]
948 [-]: NEWTABLE  R80 0 1      ; R80 := {}
949 [-]: GETTABLE  R81 R50 K107 ; R81 := R50["mDesc"]
950 [-]: SETTABLE  R80 K107 R81 ; R80["mDesc"] := R81
951 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
952 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
953 [-]: TEST      R79 0        ; if not R79 then PC := 1076
954 [-]: JMP       1076         ; PC := 1076
955 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
956 [-]: LEN       R79 R79      ; R79 := # R79
957 [-]: LE        0 R70 R79    ; if R70 > R79 then PC := 1076
958 [-]: JMP       1076         ; PC := 1076
959 [-]: GETTABLE  R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
960 [-]: GETTABLE  R79 R79 R70  ; R79 := R79[R70]
961 [-]: TEST      R79 0        ; if not R79 then PC := 1076
962 [-]: JMP       1076         ; PC := 1076
963 [-]: GETGLOBAL R79 K4       ; R79 := _T
964 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
965 [-]: TEST      R79 1        ; if R79 then PC := 970
966 [-]: JMP       970          ; PC := 970
967 [-]: GETGLOBAL R79 K4       ; R79 := _T
968 [-]: NEWTABLE  R80 0 0      ; R80 := {}
969 [-]: SETTABLE  R79 K151 R80 ; R79["LockedGoalMissionInfo"] := R80
970 [-]: GETGLOBAL R79 K4       ; R79 := _T
971 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
972 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
973 [-]: TEST      R79 1        ; if R79 then PC := 1076
974 [-]: JMP       1076         ; PC := 1076
975 [-]: GETGLOBAL R79 K4       ; R79 := _T
976 [-]: GETTABLE  R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
977 [-]: TEST      R79 1        ; if R79 then PC := 985
978 [-]: JMP       985          ; PC := 985
979 [-]: GETGLOBAL R79 K4       ; R79 := _T
980 [-]: NEWTABLE  R80 0 0      ; R80 := {}
981 [-]: SETTABLE  R79 K117 R80 ; R79["CachedGoalKeys"] := R80
982 [-]: GETGLOBAL R79 K4       ; R79 := _T
983 [-]: NEWTABLE  R80 0 0      ; R80 := {}
984 [-]: SETTABLE  R79 K118 R80 ; R79["CachedGoalKeyTypes"] := R80
985 [-]: GETGLOBAL R79 K4       ; R79 := _T
986 [-]: GETTABLE  R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
987 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
988 [-]: TEST      R79 1        ; if R79 then PC := 1005
989 [-]: JMP       1005         ; PC := 1005
990 [-]: GETGLOBAL R79 K4       ; R79 := _T
991 [-]: GETTABLE  R79 R79 K118 ; R79 := R79["CachedGoalKeyTypes"]
992 [-]: GETGLOBAL R80 K120     ; R80 := 0x88efc25e
993 [-]: GETTABLE  R81 R50 K143 ; R81 := R50["mConcurrentMissionKeyNames"]
994 [-]: GETTABLE  R81 R81 R70  ; R81 := R81[R70]
995 [-]: CALL      R80 2 2      ; R80 := R80(R81)
996 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
997 [-]: GETGLOBAL R79 K4       ; R79 := _T
998 [-]: GETTABLE  R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
999 [-]: GETGLOBAL R80 K121     ; R80 := 0xb009bbc6
1000 [-]: GETGLOBAL R81 K4       ; R81 := _T
1001 [-]: GETTABLE  R81 R81 K118 ; R81 := R81["CachedGoalKeyTypes"]
1002 [-]: GETTABLE  R81 R81 R71  ; R81 := R81[R71]
1003 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1004 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
1005 [-]: GETGLOBAL R79 K0       ; R79 := 0x7b998233
1006 [-]: GETGLOBAL R80 K4       ; R80 := _T
1007 [-]: GETTABLE  R80 R80 K117 ; R80 := R80["CachedGoalKeys"]
1008 [-]: GETTABLE  R80 R80 R71  ; R80 := R80[R71]
1009 [-]: CALL      R79 2 2      ; R79 := R79(R80)
1010 [-]: TEST      R79 1        ; if R79 then PC := 1076
1011 [-]: JMP       1076         ; PC := 1076
1012 [-]: GETGLOBAL R79 K4       ; R79 := _T
1013 [-]: GETTABLE  R79 R79 K15  ; R79 := R79["CachedGoalLongDesc"]
1014 [-]: GETGLOBAL R80 K38      ; R80 := 0x64fb1586
1015 [-]: GETGLOBAL R81 K4       ; R81 := _T
1016 [-]: GETTABLE  R81 R81 K117 ; R81 := R81["CachedGoalKeys"]
1017 [-]: GETTABLE  R81 R81 R71  ; R81 := R81[R71]
1018 [-]: SELF      R81 R81 K123 ; R82 := R81; R81 := R81[0x030ae5e5]
1019 [-]: CALL      R81 2 0      ; R81,... := R81(R82)
1020 [-]: CALL      R80 0 2      ; R80 := R80(R81,...)
1021 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
1022 [-]: GETGLOBAL R79 K4       ; R79 := _T
1023 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1024 [-]: NEWTABLE  R80 0 0      ; R80 := {}
1025 [-]: SETTABLE  R79 R71 R80  ; R79[R71] := R80
1026 [-]: GETGLOBAL R79 K4       ; R79 := _T
1027 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1028 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1029 [-]: GETGLOBAL R80 K4       ; R80 := _T
1030 [-]: GETTABLE  R80 R80 K117 ; R80 := R80["CachedGoalKeys"]
1031 [-]: GETTABLE  R80 R80 R71  ; R80 := R80[R71]
1032 [-]: SELF      R80 R80 K122 ; R81 := R80; R80 := R80[0xef893aec]
1033 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1034 [-]: SETTABLE  R79 K32 R80  ; R79["mMissionInfo"] := R80
1035 [-]: GETGLOBAL R79 K4       ; R79 := _T
1036 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1037 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1038 [-]: GETGLOBAL R80 K152     ; R80 := 0x603636ad
1039 [-]: GETTABLE  R81 R50 K107 ; R81 := R50["mDesc"]
1040 [-]: LOADBOOL  R82 0 0      ; R82 := false
1041 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
1042 [-]: LOADK     R81 K153     ; R81 := " - "
1043 [-]: GETGLOBAL R82 K152     ; R82 := 0x603636ad
1044 [-]: LOADK     R83 K154     ; R83 := "/Lotus/Language/Menu/Lobby_Mission"
1045 [-]: LOADNIL   R84 R84      ; R84 := nil
1046 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
1047 [-]: LOADK     R83 K155     ; R83 := " "
1048 [-]: GETGLOBAL R84 K38      ; R84 := 0x64fb1586
1049 [-]: ADD       R85 R70 K45  ; R85 := R70 + 1.000000
1050 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1051 [-]: CONCAT    R80 R80 R84  ; R80 := R80 .. R81 .. R82 .. R83 .. R84
1052 [-]: SETTABLE  R79 K107 R80 ; R79["mDesc"] := R80
1053 [-]: GETGLOBAL R79 K4       ; R79 := _T
1054 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1055 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1056 [-]: GETGLOBAL R80 K156     ; R80 := 0x8650181f
1057 [-]: GETTABLE  R81 R50 K42  ; R81 := R50["mId"]
1058 [-]: GETTABLE  R81 R81 K42  ; R81 := R81["mId"]
1059 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1060 [-]: SETTABLE  R79 K42 R80  ; R79["mId"] := R80
1061 [-]: GETGLOBAL R79 K4       ; R79 := _T
1062 [-]: GETTABLE  R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
1063 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1064 [-]: GETGLOBAL R80 K105     ; R80 := 0x0469f296
1065 [-]: GETTABLE  R81 R50 K67  ; R81 := R50["mTag"]
1066 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1067 [-]: SETTABLE  R79 K67 R80  ; R79["mTag"] := R80
1068 [-]: GETGLOBAL R79 K4       ; R79 := _T
1069 [-]: GETTABLE  R79 R79 K16  ; R79 := R79["LockedGoalList"]
1070 [-]: GETTABLE  R79 R79 R71  ; R79 := R79[R71]
1071 [-]: GETGLOBAL R80 K4       ; R80 := _T
1072 [-]: GETTABLE  R80 R80 K151 ; R80 := R80["LockedGoalMissionInfo"]
1073 [-]: GETTABLE  R80 R80 R71  ; R80 := R80[R71]
1074 [-]: GETTABLE  R80 R80 K107 ; R80 := R80["mDesc"]
1075 [-]: SETTABLE  R79 K107 R80 ; R79["mDesc"] := R80
1076 [-]: FORLOOP   R67 791      ; R67 += R69; if R67 <= R68 then begin PC := 791; R70 := R67 end
1077 [-]: LOADK     R79 1        ; R79 := 1.000000
1078 [-]: LEN       R80 R58      ; R80 := # R58
1079 [-]: LOADK     R81 1        ; R81 := 1.000000
1080 [-]: FORPREP   R79 1272     ; R79 -= R81; PC := 1272
1081 [-]: GETTABLE  R83 R58 R82  ; R83 := R58[R82]
1082 [-]: GETTABLE  R84 R83 K128 ; R84 := R83["nodeName"]
1083 [-]: GETGLOBAL R85 K7       ; R85 := 0x0032441c
1084 [-]: GETTABLE  R85 R85 K8   ; R85 := R85["CachedGoalInfo"]
1085 [-]: SELF      R86 R50 K114 ; R87 := R50; R86 := R50[0x8f89d633]
1086 [-]: CALL      R86 2 2      ; R86 := R86(R87)
1087 [-]: SETTABLE  R85 R84 R86  ; R85[R84] := R86
1088 [-]: GETGLOBAL R85 K7       ; R85 := 0x0032441c
1089 [-]: GETTABLE  R85 R85 K8   ; R85 := R85["CachedGoalInfo"]
1090 [-]: GETTABLE  R85 R85 R84  ; R85 := R85[R84]
1091 [-]: SETTABLE  R85 K77 R84  ; R85["mNode"] := R84
1092 [-]: GETGLOBAL R85 K4       ; R85 := _T
1093 [-]: GETTABLE  R85 R85 K15  ; R85 := R85["CachedGoalLongDesc"]
1094 [-]: GETTABLE  R86 R83 K132 ; R86 := R83["longDesc"]
1095 [-]: SETTABLE  R85 R84 R86  ; R85[R84] := R86
1096 [-]: GETGLOBAL R85 K38      ; R85 := 0x64fb1586
1097 [-]: GETTABLE  R86 R50 K110 ; R86 := R50["mVictimNode"]
1098 [-]: CALL      R85 2 2      ; R85 := R85(R86)
1099 [-]: EQ        1 R85 K81    ; if R85 == "" then PC := 1115
1100 [-]: JMP       1115         ; PC := 1115
1101 [-]: GETGLOBAL R86 K4       ; R86 := _T
1102 [-]: GETTABLE  R86 R86 K17  ; R86 := R86["CachedNodesPendingDestruction"]
1103 [-]: NEWTABLE  R87 0 2      ; R87 := {}
1104 [-]: GETTABLE  R88 R50 K112 ; R88 := R50["mHealthPct"]
1105 [-]: LT        1 K37 R88    ; if 0.000000 < R88 then PC := 1108
1106 [-]: JMP       1108         ; PC := 1108
1107 [-]: LOADBOOL  R88 0 1      ; R88 := false; PC := 1108
1108 [-]: LOADBOOL  R88 1 0      ; R88 := true
1109 [-]: SETTABLE  R87 K111 R88 ; R87["shouldLock"] := R88
1110 [-]: GETTABLE  R88 R50 K36  ; R88 := R50["mExpiry"]
1111 [-]: SELF      R88 R88 K114 ; R89 := R88; R88 := R88[0x8f89d633]
1112 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1113 [-]: SETTABLE  R87 K113 R88 ; R87["lockTime"] := R88
1114 [-]: SETTABLE  R86 R85 R87  ; R86[R85] := R87
1115 [-]: GETTABLE  R86 R83 K131 ; R86 := R83["missionKeyInfo"]
1116 [-]: TEST      R86 0        ; if not R86 then PC := 1143
1117 [-]: JMP       1143         ; PC := 1143
1118 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1119 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1120 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1121 [-]: GETTABLE  R87 R83 K130 ; R87 := R83["missionKeyName"]
1122 [-]: SETTABLE  R86 K108 R87 ; R86["mMissionKeyName"] := R87
1123 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1124 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1125 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1126 [-]: GETTABLE  R87 R83 K131 ; R87 := R83["missionKeyInfo"]
1127 [-]: SETTABLE  R86 K32 R87  ; R86["mMissionInfo"] := R87
1128 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1129 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1130 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1131 [-]: GETTABLE  R86 R86 K32  ; R86 := R86["mMissionInfo"]
1132 [-]: GETGLOBAL R87 K105     ; R87 := 0x0469f296
1133 [-]: MOVE      R88 R84      ; R88 := R84
1134 [-]: CALL      R87 2 2      ; R87 := R87(R88)
1135 [-]: SETTABLE  R86 K33 R87  ; R86["location"] := R87
1136 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1137 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1138 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1139 [-]: GETTABLE  R86 R86 K32  ; R86 := R86["mMissionInfo"]
1140 [-]: GETTABLE  R87 R50 K42  ; R87 := R50["mId"]
1141 [-]: GETTABLE  R87 R87 K42  ; R87 := R87["mId"]
1142 [-]: SETTABLE  R86 K127 R87 ; R86["goalId"] := R87
1143 [-]: GETTABLE  R86 R83 K147 ; R86 := R83["concurrent"]
1144 [-]: EQ        0 R86 K93    ; if R86 ~= true then PC := 1171
1145 [-]: JMP       1171         ; PC := 1171
1146 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1147 [-]: GETTABLE  R86 R86 K9   ; R86 := R86["MergedGoalNodes"]
1148 [-]: GETTABLE  R87 R83 K150 ; R87 := R83["nodeScoreReq"]
1149 [-]: SETTABLE  R86 R84 R87  ; R86[R84] := R87
1150 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1151 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1152 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1153 [-]: GETGLOBAL R87 K152     ; R87 := 0x603636ad
1154 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1155 [-]: GETTABLE  R88 R88 K8   ; R88 := R88["CachedGoalInfo"]
1156 [-]: GETTABLE  R88 R88 R84  ; R88 := R88[R84]
1157 [-]: GETTABLE  R88 R88 K107 ; R88 := R88["mDesc"]
1158 [-]: LOADBOOL  R89 0 0      ; R89 := false
1159 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1160 [-]: LOADK     R88 K153     ; R88 := " - "
1161 [-]: GETGLOBAL R89 K152     ; R89 := 0x603636ad
1162 [-]: LOADK     R90 K154     ; R90 := "/Lotus/Language/Menu/Lobby_Mission"
1163 [-]: LOADNIL   R91 R91      ; R91 := nil
1164 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
1165 [-]: LOADK     R90 K155     ; R90 := " "
1166 [-]: GETGLOBAL R91 K38      ; R91 := 0x64fb1586
1167 [-]: GETTABLE  R92 R83 K149 ; R92 := R83["concurrentNumeral"]
1168 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1169 [-]: CONCAT    R87 R87 R91  ; R87 := R87 .. R88 .. R89 .. R90 .. R91
1170 [-]: SETTABLE  R86 K107 R87 ; R86["mDesc"] := R87
1171 [-]: GETTABLE  R86 R83 K148 ; R86 := R83["challenge"]
1172 [-]: TEST      R86 0        ; if not R86 then PC := 1197
1173 [-]: JMP       1197         ; PC := 1197
1174 [-]: GETTABLE  R86 R50 K67  ; R86 := R50["mTag"]
1175 [-]: GETGLOBAL R87 K105     ; R87 := 0x0469f296
1176 [-]: LOADK     R88 K157     ; R88 := "WaterFight"
1177 [-]: CALL      R87 2 2      ; R87 := R87(R88)
1178 [-]: EQ        1 R86 R87    ; if R86 == R87 then PC := 1197
1179 [-]: JMP       1197         ; PC := 1197
1180 [-]: GETGLOBAL R86 K7       ; R86 := 0x0032441c
1181 [-]: GETTABLE  R86 R86 K8   ; R86 := R86["CachedGoalInfo"]
1182 [-]: GETTABLE  R86 R86 R84  ; R86 := R86[R84]
1183 [-]: GETGLOBAL R87 K152     ; R87 := 0x603636ad
1184 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1185 [-]: GETTABLE  R88 R88 K8   ; R88 := R88["CachedGoalInfo"]
1186 [-]: GETTABLE  R88 R88 R84  ; R88 := R88[R84]
1187 [-]: GETTABLE  R88 R88 K107 ; R88 := R88["mDesc"]
1188 [-]: LOADBOOL  R89 0 0      ; R89 := false
1189 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1190 [-]: LOADK     R88 K155     ; R88 := " "
1191 [-]: GETGLOBAL R89 K152     ; R89 := 0x603636ad
1192 [-]: LOADK     R90 K158     ; R90 := "/Lotus/Language/Menu/WorldStateChallengeMode"
1193 [-]: LOADBOOL  R91 0 0      ; R91 := false
1194 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
1195 [-]: CONCAT    R87 R87 R89  ; R87 := R87 .. R88 .. R89
1196 [-]: SETTABLE  R86 K107 R87 ; R86["mDesc"] := R87
1197 [-]: GETGLOBAL R86 K0       ; R86 := 0x7b998233
1198 [-]: GETUPVAL  R87 U1       ; R87 := U1
1199 [-]: GETTABLE  R87 R87 K137 ; R87 := R87["ANY_NODE_PREFIX"]
1200 [-]: CALL      R86 2 2      ; R86 := R86(R87)
1201 [-]: TEST      R86 1        ; if R86 then PC := 1211
1202 [-]: JMP       1211         ; PC := 1211
1203 [-]: GETGLOBAL R86 K90      ; R86 := 0x7f5022cf
1204 [-]: GETTABLE  R86 R86 K91  ; R86 := R86[0xa5c556b9]
1205 [-]: MOVE      R87 R84      ; R87 := R84
1206 [-]: GETUPVAL  R88 U1       ; R88 := U1
1207 [-]: GETTABLE  R88 R88 K137 ; R88 := R88["ANY_NODE_PREFIX"]
1208 [-]: CALL      R86 3 2      ; R86 := R86(R87,R88)
1209 [-]: TEST      R86 1        ; if R86 then PC := 1244
1210 [-]: JMP       1244         ; PC := 1244
1211 [-]: SELF      R86 R3 K31   ; R87 := R3; R86 := R3[0x3ad9ed31]
1212 [-]: GETGLOBAL R88 K105     ; R88 := 0x0469f296
1213 [-]: MOVE      R89 R84      ; R89 := R84
1214 [-]: CALL      R88 2 0      ; R88,... := R88(R89)
1215 [-]: CALL      R86 0 2      ; R86 := R86(R87,...)
1216 [-]: GETTABLE  R87 R86 K44  ; R87 := R86["region"]
1217 [-]: ADD       R87 R87 K45  ; R87 := R87 + 1.000000
1218 [-]: GETGLOBAL R88 K4       ; R88 := _T
1219 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1220 [-]: GETTABLE  R88 R88 R87  ; R88 := R88[R87]
1221 [-]: TEST      R88 1        ; if R88 then PC := 1227
1222 [-]: JMP       1227         ; PC := 1227
1223 [-]: GETGLOBAL R88 K4       ; R88 := _T
1224 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1225 [-]: NEWTABLE  R89 0 0      ; R89 := {}
1226 [-]: SETTABLE  R88 R87 R89  ; R88[R87] := R89
1227 [-]: GETGLOBAL R88 K4       ; R88 := _T
1228 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1229 [-]: GETTABLE  R88 R88 R87  ; R88 := R88[R87]
1230 [-]: SETTABLE  R88 K159 K93 ; R88["goal"] := true
1231 [-]: GETGLOBAL R88 K4       ; R88 := _T
1232 [-]: GETTABLE  R88 R88 K11  ; R88 := R88["CachedRegionStatus"]
1233 [-]: GETTABLE  R88 R88 R87  ; R88 := R88[R87]
1234 [-]: GETUPVAL  R89 U7       ; R89 := U7
1235 [-]: GETTABLE  R89 R89 K141 ; R89 := R89[0x06d055f9]
1236 [-]: GETGLOBAL R90 K0       ; R90 := 0x7b998233
1237 [-]: GETTABLE  R91 R50 K60  ; R91 := R50["mIcon"]
1238 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1239 [-]: GETGLOBAL R91 K7       ; R91 := 0x0032441c
1240 [-]: GETTABLE  R91 R91 K161 ; R91 := R91["UITexture_Event"]
1241 [-]: GETTABLE  R92 R50 K60  ; R92 := R50["mIcon"]
1242 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
1243 [-]: SETTABLE  R88 K160 R89 ; R88["goalIcon"] := R89
1244 [-]: GETGLOBAL R88 K38      ; R88 := 0x64fb1586
1245 [-]: GETTABLE  R89 R50 K67  ; R89 := R50["mTag"]
1246 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1247 [-]: EQ        1 R88 K81    ; if R88 == "" then PC := 1264
1248 [-]: JMP       1264         ; PC := 1264
1249 [-]: GETGLOBAL R88 K38      ; R88 := 0x64fb1586
1250 [-]: GETTABLE  R89 R50 K67  ; R89 := R50["mTag"]
1251 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1252 [-]: GETTABLE  R88 R24 R88  ; R88 := R24[R88]
1253 [-]: TEST      R88 0        ; if not R88 then PC := 1264
1254 [-]: JMP       1264         ; PC := 1264
1255 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1256 [-]: GETTABLE  R88 R88 K8   ; R88 := R88["CachedGoalInfo"]
1257 [-]: GETTABLE  R88 R88 R84  ; R88 := R88[R84]
1258 [-]: GETGLOBAL R89 K38      ; R89 := 0x64fb1586
1259 [-]: GETTABLE  R90 R50 K67  ; R90 := R50["mTag"]
1260 [-]: CALL      R89 2 2      ; R89 := R89(R90)
1261 [-]: GETTABLE  R89 R24 R89  ; R89 := R24[R89]
1262 [-]: GETTABLE  R89 R89 K77  ; R89 := R89["mNode"]
1263 [-]: SETTABLE  R88 K135 R89 ; R88["mInvasionNode"] := R89
1264 [-]: GETTABLE  R88 R50 K104 ; R88 := R50["mRelayReconstruction"]
1265 [-]: TEST      R88 0        ; if not R88 then PC := 1272
1266 [-]: JMP       1272         ; PC := 1272
1267 [-]: GETGLOBAL R88 K133     ; R88 := 0x33bdd652
1268 [-]: GETTABLE  R88 R88 K134 ; R88 := R88[0x23d5322f]
1269 [-]: MOVE      R89 R43      ; R89 := R43
1270 [-]: MOVE      R90 R50      ; R90 := R50
1271 [-]: CALL      R88 3 1      ; R88(R89,R90)
1272 [-]: FORLOOP   R79 1081     ; R79 += R81; if R79 <= R80 then begin PC := 1081; R82 := R79 end
1273 [-]: GETTABLE  R88 R50 K162 ; R88 := R50["mRewardNode"]
1274 [-]: EQ        1 R88 K81    ; if R88 == "" then PC := 1295
1275 [-]: JMP       1295         ; PC := 1295
1276 [-]: LT        0 R64 R66    ; if R64 >= R66 then PC := 1289
1277 [-]: JMP       1289         ; PC := 1289
1278 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1279 [-]: GETTABLE  R89 R50 K162 ; R89 := R50["mRewardNode"]
1280 [-]: SETTABLE  R88 K163 R89 ; R88["StarChartHiddenEventNode"] := R89
1281 [-]: GETGLOBAL R88 K4       ; R88 := _T
1282 [-]: GETTABLE  R88 R88 K16  ; R88 := R88["LockedGoalList"]
1283 [-]: GETTABLE  R89 R50 K162 ; R89 := R50["mRewardNode"]
1284 [-]: NEWTABLE  R90 0 1      ; R90 := {}
1285 [-]: GETTABLE  R91 R50 K107 ; R91 := R50["mDesc"]
1286 [-]: SETTABLE  R90 K107 R91 ; R90["mDesc"] := R91
1287 [-]: SETTABLE  R88 R89 R90  ; R88[R89] := R90
1288 [-]: JMP       1295         ; PC := 1295
1289 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1290 [-]: GETTABLE  R88 R88 K163 ; R88 := R88["StarChartHiddenEventNode"]
1291 [-]: EQ        1 R88 K24    ; if R88 == nil then PC := 1295
1292 [-]: JMP       1295         ; PC := 1295
1293 [-]: GETGLOBAL R88 K7       ; R88 := 0x0032441c
1294 [-]: SETTABLE  R88 K163 K24 ; R88["StarChartHiddenEventNode"] := nil
1295 [-]: GETGLOBAL R88 K34      ; R88 := 0x34291f5c
1296 [-]: GETTABLE  R88 R88 K35  ; R88 := R88[0x397b920f]
1297 [-]: GETTABLE  R89 R50 K36  ; R89 := R50["mExpiry"]
1298 [-]: CALL      R88 2 2      ; R88 := R88(R89)
1299 [-]: LT        0 K37 R88    ; if 0.000000 >= R88 then PC := 1305
1300 [-]: JMP       1305         ; PC := 1305
1301 [-]: GETUPVAL  R89 U2       ; R89 := U2
1302 [-]: MOVE      R90 R6       ; R90 := R6
1303 [-]: MOVE      R91 R88      ; R91 := R88
1304 [-]: CALL      R89 3 1      ; R89(R90,R91)
1305 [-]: FORLOOP   R46 451      ; R46 += R48; if R46 <= R47 then begin PC := 451; R49 := R46 end
1306 [-]: GETGLOBAL R89 K4       ; R89 := _T
1307 [-]: GETUPVAL  R90 U8       ; R90 := U8
1308 [-]: GETTABLE  R90 R90 K164 ; R90 := R90[0xe8ee3de5]
1309 [-]: CALL      R90 1 2      ; R90 := R90()
1310 [-]: SETTABLE  R89 K10 R90  ; R89["CachedConstructionProjects"] := R90
1311 [-]: GETUPVAL  R89 U9       ; R89 := U9
1312 [-]: GETTABLE  R89 R89 K165 ; R89 := R89[0x141cee8e]
1313 [-]: MOVE      R90 R1       ; R90 := R1
1314 [-]: CALL      R89 2 2      ; R89 := R89(R90)
1315 [-]: TEST      R89 0        ; if not R89 then PC := 1327
1316 [-]: JMP       1327         ; PC := 1327
1317 [-]: GETGLOBAL R90 K34      ; R90 := 0x34291f5c
1318 [-]: GETTABLE  R90 R90 K35  ; R90 := R90[0x397b920f]
1319 [-]: MOVE      R91 R89      ; R91 := R89
1320 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1321 [-]: LT        0 K37 R90    ; if 0.000000 >= R90 then PC := 1327
1322 [-]: JMP       1327         ; PC := 1327
1323 [-]: GETUPVAL  R91 U2       ; R91 := U2
1324 [-]: LOADK     R92 K166     ; R92 := "Sortie"
1325 [-]: MOVE      R93 R90      ; R93 := R90
1326 [-]: CALL      R91 3 1      ; R91(R92,R93)
1327 [-]: GETUPVAL  R91 U9       ; R91 := U9
1328 [-]: GETTABLE  R91 R91 K167 ; R91 := R91[0xd6b6f58a]
1329 [-]: MOVE      R92 R1       ; R92 := R1
1330 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1331 [-]: TEST      R91 0        ; if not R91 then PC := 1343
1332 [-]: JMP       1343         ; PC := 1343
1333 [-]: GETGLOBAL R92 K34      ; R92 := 0x34291f5c
1334 [-]: GETTABLE  R92 R92 K35  ; R92 := R92[0x397b920f]
1335 [-]: MOVE      R93 R91      ; R93 := R91
1336 [-]: CALL      R92 2 2      ; R92 := R92(R93)
1337 [-]: LT        0 K37 R92    ; if 0.000000 >= R92 then PC := 1343
1338 [-]: JMP       1343         ; PC := 1343
1339 [-]: GETUPVAL  R93 U2       ; R93 := U2
1340 [-]: LOADK     R94 K168     ; R94 := "LiteSortie"
1341 [-]: MOVE      R95 R92      ; R95 := R92
1342 [-]: CALL      R93 3 1      ; R93(R94,R95)
1343 [-]: GETUPVAL  R93 U10      ; R93 := U10
1344 [-]: GETTABLE  R93 R93 K169 ; R93 := R93[0x132be2ac]
1345 [-]: MOVE      R94 R1       ; R94 := R1
1346 [-]: CALL      R93 2 2      ; R93 := R93(R94)
1347 [-]: TEST      R93 0        ; if not R93 then PC := 1359
1348 [-]: JMP       1359         ; PC := 1359
1349 [-]: GETGLOBAL R94 K34      ; R94 := 0x34291f5c
1350 [-]: GETTABLE  R94 R94 K35  ; R94 := R94[0x397b920f]
1351 [-]: MOVE      R95 R93      ; R95 := R93
1352 [-]: CALL      R94 2 2      ; R94 := R94(R95)
1353 [-]: LT        0 K37 R94    ; if 0.000000 >= R94 then PC := 1359
1354 [-]: JMP       1359         ; PC := 1359
1355 [-]: GETUPVAL  R95 U2       ; R95 := U2
1356 [-]: LOADK     R96 K170     ; R96 := "Syndicate"
1357 [-]: MOVE      R97 R94      ; R97 := R94
1358 [-]: CALL      R95 3 1      ; R95(R96,R97)
1359 [-]: GETUPVAL  R95 U11      ; R95 := U11
1360 [-]: GETTABLE  R95 R95 K171 ; R95 := R95[0x28cda05a]
1361 [-]: MOVE      R96 R1       ; R96 := R1
1362 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1363 [-]: TEST      R95 0        ; if not R95 then PC := 1375
1364 [-]: JMP       1375         ; PC := 1375
1365 [-]: GETGLOBAL R96 K34      ; R96 := 0x34291f5c
1366 [-]: GETTABLE  R96 R96 K35  ; R96 := R96[0x397b920f]
1367 [-]: MOVE      R97 R95      ; R97 := R95
1368 [-]: CALL      R96 2 2      ; R96 := R96(R97)
1369 [-]: LT        0 K37 R96    ; if 0.000000 >= R96 then PC := 1375
1370 [-]: JMP       1375         ; PC := 1375
1371 [-]: GETUPVAL  R97 U2       ; R97 := U2
1372 [-]: LOADK     R98 K172     ; R98 := "ActiveMission"
1373 [-]: MOVE      R99 R96      ; R99 := R96
1374 [-]: CALL      R97 3 1      ; R97(R98,R99)
1375 [-]: GETUPVAL  R97 U12      ; R97 := U12
1376 [-]: MOVE      R98 R1       ; R98 := R1
1377 [-]: CALL      R97 2 1      ; R97(R98)
1378 [-]: GETUPVAL  R97 U13      ; R97 := U13
1379 [-]: MOVE      R98 R1       ; R98 := R1
1380 [-]: CALL      R97 2 2      ; R97 := R97(R98)
1381 [-]: TEST      R97 0        ; if not R97 then PC := 1389
1382 [-]: JMP       1389         ; PC := 1389
1383 [-]: LT        0 K37 R97    ; if 0.000000 >= R97 then PC := 1389
1384 [-]: JMP       1389         ; PC := 1389
1385 [-]: GETUPVAL  R98 U2       ; R98 := U2
1386 [-]: LOADK     R99 K173     ; R99 := "GhostTower"
1387 [-]: MOVE      R100 R97     ; R100 := R97
1388 [-]: CALL      R98 3 1      ; R98(R99,R100)
1389 [-]: GETUPVAL  R98 U14      ; R98 := U14
1390 [-]: MOVE      R99 R1       ; R99 := R1
1391 [-]: CALL      R98 2 2      ; R98 := R98(R99)
1392 [-]: TEST      R98 0        ; if not R98 then PC := 1400
1393 [-]: JMP       1400         ; PC := 1400
1394 [-]: LT        0 K37 R98    ; if 0.000000 >= R98 then PC := 1400
1395 [-]: JMP       1400         ; PC := 1400
1396 [-]: GETUPVAL  R99 U2       ; R99 := U2
1397 [-]: LOADK     R100 K174    ; R100 := "EliteAlert"
1398 [-]: MOVE      R101 R98     ; R101 := R98
1399 [-]: CALL      R99 3 1      ; R99(R100,R101)
1400 [-]: GETUPVAL  R99 U15      ; R99 := U15
1401 [-]: MOVE      R100 R1      ; R100 := R1
1402 [-]: CALL      R99 2 2      ; R99 := R99(R100)
1403 [-]: TEST      R99 0        ; if not R99 then PC := 1411
1404 [-]: JMP       1411         ; PC := 1411
1405 [-]: LT        0 K37 R99    ; if 0.000000 >= R99 then PC := 1411
1406 [-]: JMP       1411         ; PC := 1411
1407 [-]: GETUPVAL  R100 U2      ; R100 := U2
1408 [-]: LOADK     R101 K175    ; R101 := "HardModeDaily"
1409 [-]: MOVE      R102 R99     ; R102 := R99
1410 [-]: CALL      R100 3 1     ; R100(R101,R102)
1411 [-]: GETGLOBAL R100 K4      ; R100 := _T
1412 [-]: NEWTABLE  R101 0 0     ; R101 := {}
1413 [-]: SETTABLE  R100 K12 R101; R100["CachedFlashSales"] := R101
1414 [-]: GETGLOBAL R100 K176    ; R100 := 0xc8802016
1415 [-]: GETTABLE  R101 R2 K177 ; R101 := R2["mFlashSales"]
1416 [-]: CALL      R100 2 4     ; R100,R101,R102 := R100(R101)
1417 [-]: JMP       1434         ; PC := 1434
1418 [-]: GETGLOBAL R105 K0      ; R105 := 0x7b998233
1419 [-]: MOVE      R106 R104    ; R106 := R104
1420 [-]: CALL      R105 2 2     ; R105 := R105(R106)
1421 [-]: TEST      R105 1       ; if R105 then PC := 1434
1422 [-]: JMP       1434         ; PC := 1434
1423 [-]: GETGLOBAL R105 K0      ; R105 := 0x7b998233
1424 [-]: GETTABLE  R106 R104 K178; R106 := R104["mTypeName"]
1425 [-]: CALL      R105 2 2     ; R105 := R105(R106)
1426 [-]: TEST      R105 1       ; if R105 then PC := 1434
1427 [-]: JMP       1434         ; PC := 1434
1428 [-]: GETGLOBAL R105 K4      ; R105 := _T
1429 [-]: GETTABLE  R105 R105 K12; R105 := R105["CachedFlashSales"]
1430 [-]: GETTABLE  R106 R104 K178; R106 := R104["mTypeName"]
1431 [-]: SELF      R106 R106 K179; R107 := R106; R106 := R106[0xed4e0128]
1432 [-]: CALL      R106 2 2     ; R106 := R106(R107)
1433 [-]: SETTABLE  R105 R106 R104; R105[R106] := R104
1434 [-]: TFORLOOP  R100 2       ; R103,R104 :=  R100(R101,R102); if R103 ~= nil then begin PC = 1418; R102 := R103 end
1435 [-]: JMP       1418         ; PC := 1418
1436 [-]: GETTABLE  R105 R2 K180 ; R105 := R2["mVoidTraders"]
1437 [-]: EQ        1 R105 K24   ; if R105 == nil then PC := 1442
1438 [-]: JMP       1442         ; PC := 1442
1439 [-]: GETGLOBAL R105 K4      ; R105 := _T
1440 [-]: GETTABLE  R106 R2 K180 ; R106 := R2["mVoidTraders"]
1441 [-]: SETTABLE  R105 K13 R106; R105["CachedVoidTraders"] := R106
1442 [-]: GETGLOBAL R105 K4      ; R105 := _T
1443 [-]: GETTABLE  R106 R2 K181 ; R106 := R2["mGlobalUpgrades"]
1444 [-]: SETTABLE  R105 K14 R106; R105["CachedGlobalUpgrades"] := R106
1445 [-]: GETTABLE  R105 R2 K182 ; R105 := R2["mVoidStorms"]
1446 [-]: LOADK     R106 600     ; R106 := 600.000000
1447 [-]: LOADK     R107 1       ; R107 := 1.000000
1448 [-]: LEN       R108 R105    ; R108 := # R105
1449 [-]: LOADK     R109 1       ; R109 := 1.000000
1450 [-]: FORPREP   R107 1521    ; R107 -= R109; PC := 1521
1451 [-]: GETTABLE  R111 R105 R110; R111 := R105[R110]
1452 [-]: GETGLOBAL R112 K34     ; R112 := 0x34291f5c
1453 [-]: GETTABLE  R112 R112 K35; R112 := R112[0x397b920f]
1454 [-]: GETTABLE  R113 R111 K36; R113 := R111["mExpiry"]
1455 [-]: CALL      R112 2 2     ; R112 := R112(R113)
1456 [-]: GETTABLE  R113 R111 K183; R113 := R111["mActiveMissionTier"]
1457 [-]: GETTABLE  R114 R111 K42; R114 := R111["mId"]
1458 [-]: GETTABLE  R114 R114 K42; R114 := R114["mId"]
1459 [-]: UNM       R115 R106    ; R115 := ^ R106
1460 [-]: LT        0 R115 R112  ; if R115 >= R112 then PC := 1521
1461 [-]: JMP       1521         ; PC := 1521
1462 [-]: SELF      R115 R3 K31  ; R116 := R3; R115 := R3[0x3ad9ed31]
1463 [-]: GETTABLE  R117 R111 K77; R117 := R111["mNode"]
1464 [-]: CALL      R115 3 2     ; R115 := R115(R116,R117)
1465 [-]: GETGLOBAL R116 K38     ; R116 := 0x64fb1586
1466 [-]: GETTABLE  R117 R115 K39; R117 := R115["name"]
1467 [-]: CALL      R116 2 2     ; R116 := R116(R117)
1468 [-]: MOVE      R6 R116      ; R6 := R116
1469 [-]: GETTABLE  R116 R115 K87; R116 := R115["mission"]
1470 [-]: SELF      R116 R116 K114; R117 := R116; R116 := R116[0x8f89d633]
1471 [-]: CALL      R116 2 2     ; R116 := R116(R117)
1472 [-]: LOADK     R117 10      ; R117 := 10.000000
1473 [-]: MOVE      R118 R6      ; R118 := R6
1474 [-]: LOADK     R119 K185    ; R119 := "_"
1475 [-]: MOVE      R120 R114    ; R120 := R114
1476 [-]: CONCAT    R118 R118 R120; R118 := R118 .. R119 .. R120
1477 [-]: SETTABLE  R116 K184 R118; R116["voidStormId"] := R118
1478 [-]: GETGLOBAL R118 K105    ; R118 := 0x0469f296
1479 [-]: MOVE      R119 R113    ; R119 := R113
1480 [-]: CALL      R118 2 2     ; R118 := R118(R119)
1481 [-]: SETTABLE  R116 K186 R118; R116["activeMissionTag"] := R118
1482 [-]: GETTABLE  R118 R116 K64; R118 := R116["minEnemyLevel"]
1483 [-]: ADD       R118 R118 R117; R118 := R118 + R117
1484 [-]: SETTABLE  R116 K64 R118; R116["minEnemyLevel"] := R118
1485 [-]: GETTABLE  R118 R116 K62; R118 := R116["maxEnemyLevel"]
1486 [-]: ADD       R118 R118 R117; R118 := R118 + R117
1487 [-]: SETTABLE  R116 K62 R118; R116["maxEnemyLevel"] := R118
1488 [-]: GETTABLE  R118 R116 K187; R118 := R116["minSpaceEnemyLevel"]
1489 [-]: ADD       R118 R118 R117; R118 := R118 + R117
1490 [-]: SETTABLE  R116 K187 R118; R116["minSpaceEnemyLevel"] := R118
1491 [-]: GETTABLE  R118 R116 K188; R118 := R116["maxSpaceEnemyLevel"]
1492 [-]: ADD       R118 R118 R117; R118 := R118 + R117
1493 [-]: SETTABLE  R116 K188 R118; R116["maxSpaceEnemyLevel"] := R118
1494 [-]: GETTABLE  R118 R115 K51; R118 := R115["unlocked"]
1495 [-]: TEST      R118 1       ; if R118 then PC := 1498
1496 [-]: JMP       1498         ; PC := 1498
1497 [-]: LOADBOOL  R118 0 0     ; R118 := false
1498 [-]: GETGLOBAL R119 K4      ; R119 := _T
1499 [-]: GETTABLE  R119 R119 K18; R119 := R119["CachedVoidStormMissions"]
1500 [-]: GETTABLE  R120 R111 K77; R120 := R111["mNode"]
1501 [-]: SELF      R120 R120 K189; R121 := R120; R120 := R120[0x6d604ba7]
1502 [-]: CALL      R120 2 2     ; R120 := R120(R121)
1503 [-]: NEWTABLE  R121 0 7     ; R121 := {}
1504 [-]: GETTABLE  R122 R111 K40; R122 := R111["mActivation"]
1505 [-]: SELF      R122 R122 K114; R123 := R122; R122 := R122[0x8f89d633]
1506 [-]: CALL      R122 2 2     ; R122 := R122(R123)
1507 [-]: SETTABLE  R121 K40 R122; R121["mActivation"] := R122
1508 [-]: GETTABLE  R122 R111 K36; R122 := R111["mExpiry"]
1509 [-]: SELF      R122 R122 K114; R123 := R122; R122 := R122[0x8f89d633]
1510 [-]: CALL      R122 2 2     ; R122 := R122(R123)
1511 [-]: SETTABLE  R121 K36 R122; R121["mExpiry"] := R122
1512 [-]: GETGLOBAL R122 K105    ; R122 := 0x0469f296
1513 [-]: MOVE      R123 R113    ; R123 := R113
1514 [-]: CALL      R122 2 2     ; R122 := R122(R123)
1515 [-]: SETTABLE  R121 K190 R122; R121["tier"] := R122
1516 [-]: SETTABLE  R121 K191 K192; R121["enemyLevelIncrease"] := 10.000000
1517 [-]: SETTABLE  R121 K32 R116; R121["mMissionInfo"] := R116
1518 [-]: SETTABLE  R121 K57 R118; R121["mUnlocked"] := R118
1519 [-]: SETTABLE  R121 K58 R118; R121["mRegionUnlocked"] := R118
1520 [-]: SETTABLE  R119 R120 R121; R119[R120] := R121
1521 [-]: FORLOOP   R107 1451    ; R107 += R109; if R107 <= R108 then begin PC := 1451; R110 := R107 end
1522 [-]: GETUPVAL  R119 U3      ; R119 := U3
1523 [-]: GETTABLE  R119 R119 K193; R119 := R119[0x5273af13]
1524 [-]: LOADK     R120 K194    ; R120 := "dce"
1525 [-]: LOADBOOL  R121 1 0     ; R121 := true
1526 [-]: CALL      R119 3 2     ; R119 := R119(R120,R121)
1527 [-]: TEST      R119 1       ; if R119 then PC := 1533
1528 [-]: JMP       1533         ; PC := 1533
1529 [-]: GETGLOBAL R120 K195    ; R120 := 0xe7f2b02f
1530 [-]: SELF      R120 R120 K196; R121 := R120; R120 := R120[0x0da40368]
1531 [-]: LOADK     R122 K81     ; R122 := ""
1532 [-]: CALL      R120 3 1     ; R120(R121,R122)
1533 [-]: GETGLOBAL R120 K0      ; R120 := 0x7b998233
1534 [-]: GETGLOBAL R121 K4      ; R121 := _T
1535 [-]: GETTABLE  R121 R121 K197; R121 := R121["NeedsGoalCheck"]
1536 [-]: CALL      R120 2 2     ; R120 := R120(R121)
1537 [-]: TEST      R120 0       ; if not R120 then PC := 1541
1538 [-]: JMP       1541         ; PC := 1541
1539 [-]: GETGLOBAL R120 K4      ; R120 := _T
1540 [-]: SETTABLE  R120 K197 K93; R120["NeedsGoalCheck"] := true
1541 [-]: GETUPVAL  R120 U16     ; R120 := U16
1542 [-]: CALL      R120 1 1     ; R120()
1543 [-]: GETUPVAL  R120 U1      ; R120 := U1
1544 [-]: GETTABLE  R120 R120 K198; R120 := R120[0xcf1fcba4]
1545 [-]: CALL      R120 1 2     ; R120 := R120()
1546 [-]: TEST      R120 1       ; if R120 then PC := 1553
1547 [-]: JMP       1553         ; PC := 1553
1548 [-]: GETGLOBAL R120 K1      ; R120 := 0xbe190284
1549 [-]: SELF      R120 R120 K199; R121 := R120; R120 := R120[0x99f38c13]
1550 [-]: CALL      R120 2 2     ; R120 := R120(R121)
1551 [-]: TEST      R120 0       ; if not R120 then PC := 1556
1552 [-]: JMP       1556         ; PC := 1556
1553 [-]: GETUPVAL  R120 U17     ; R120 := U17
1554 [-]: MOVE      R121 R1      ; R121 := R1
1555 [-]: CALL      R120 2 1     ; R120(R121)
1556 [-]: GETUPVAL  R120 U18     ; R120 := U18
1557 [-]: GETUPVAL  R121 U1      ; R121 := U1
1558 [-]: GETTABLE  R121 R121 K200; R121 := R121["REGION_ID_ZARIMAN"]
1559 [-]: GETTABLE  R121 R4 R121 ; R121 := R4[R121]
1560 [-]: GETTABLE  R121 R121 K86; R121 := R121["sectors"]
1561 [-]: CALL      R120 2 1     ; R120(R121)
1562 [-]: GETGLOBAL R120 K0      ; R120 := 0x7b998233
1563 [-]: GETGLOBAL R121 K28     ; R121 := 0x83f4e77c
1564 [-]: CALL      R120 2 2     ; R120 := R120(R121)
1565 [-]: TEST      R120 1       ; if R120 then PC := 1572
1566 [-]: JMP       1572         ; PC := 1572
1567 [-]: GETGLOBAL R120 K201    ; R120 := 0x9ba7909f
1568 [-]: SELF      R120 R120 K202; R121 := R120; R120 := R120[0x7e17ae26]
1569 [-]: LOADK     R122 K203    ; R122 := "OnWorldStateChanged"
1570 [-]: LOADK     R123 K81     ; R123 := ""
1571 [-]: CALL      R120 4 1     ; R120(R121,R122,R123)
1572 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3761
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0xe0cba3ca]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 1       ; R1(R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3765
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3769
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 45
  5 [-]: JMP       45           ; PC := 45
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x600a0ad6]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0xf56f3887]
 10 [-]: LOADK     R4 K4        ; R4 := "ShowScanStatus"
 11 [-]: NEWTABLE  R5 5 0       ; R5 := {}
 12 [-]: GETGLOBAL R6 K5        ; R6 := 0x603636ad
 13 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Game/KuvaMurmur"
 14 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 15 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 16 [-]: GETGLOBAL R7 K7        ; R7 := 0x64fb1586
 17 [-]: GETTABLE  R8 R1 K8     ; R8 := R1["mHints"]
 18 [-]: GETGLOBAL R9 K9        ; R9 := _T
 19 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["NewRequiemHint"]
 20 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 21 [-]: ADD       R8 R8 K11    ; R8 := R8 + 1.000000
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: LOADK     R8 K12       ; R8 := "0"
 24 [-]: LOADK     R9 K13       ; R9 := "false"
 25 [-]: LOADK     R10 K14      ; R10 := "NEMESIS_HINT"
 26 [-]: SETLIST   R5 5 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 5
 27 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 28 [-]: GETGLOBAL R2 K9        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["NewRequiemHint"]
 30 [-]: GETGLOBAL R3 K15       ; R3 := 0x0032441c
 31 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["NumRequiemHints"]
 32 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 45
 33 [-]: JMP       45           ; PC := 45
 34 [-]: GETGLOBAL R2 K9        ; R2 := _T
 35 [-]: GETGLOBAL R3 K9        ; R3 := _T
 36 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["NewRequiemHint"]
 37 [-]: ADD       R3 R3 K11    ; R3 := R3 + 1.000000
 38 [-]: SETTABLE  R2 K10 R3    ; R2["NewRequiemHint"] := R3
 39 [-]: GETGLOBAL R2 K17       ; R2 := mTimerMgr
 40 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xbd2e96ea]
 41 [-]: LOADK     R4 6         ; R4 := 6.000000
 42 [-]: GETUPVAL  R5 U0        ; R5 := U0
 43 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: GETGLOBAL R2 K9        ; R2 := _T
 46 [-]: SETTABLE  R2 K19 K20   ; R2["RequiemLoader"] := nil
 47 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3784
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 39
  2 [-]: JMP       39           ; PC := 39
  3 [-]: GETGLOBAL R2 K0        ; R2 := mFoundryNotification
  4 [-]: SETTABLE  R2 K1 K2     ; R2["Refresh"] := true
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[0x22828de3]
  7 [-]: LOADBOOL  R3 0 0       ; R3 := false
  8 [-]: CALL      R2 2 1       ; R2(R3)
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x76ea806b
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x3f3ae64c]
 11 [-]: LOADK     R4 0         ; R4 := 0.000000
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: GETGLOBAL R3 K6        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 39
 17 [-]: JMP       39           ; PC := 39
 18 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0x80563238]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0x7b998233
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 39
 24 [-]: JMP       39           ; PC := 39
 25 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3[0x464542fe]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: LEN       R4 R4        ; R4 := # R4
 28 [-]: LT        0 K9 R4      ; if 0.000000 >= R4 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R4 K10       ; R4 := 0x9ba7909f
 31 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0x7e17ae26]
 32 [-]: LOADK     R6 K12       ; R6 := "CouponAwarded"
 33 [-]: LOADK     R7 K13       ; R7 := ""
 34 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 35 [-]: GETUPVAL  R4 U1        ; R4 := U1
 36 [-]: MOVE      R5 R3        ; R5 := R3
 37 [-]: LOADBOOL  R6 1 0       ; R6 := true
 38 [-]: CALL      R4 3 1       ; R4(R5,R6)
 39 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3803
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  2 [-]: LOADK     R3 K1        ; R3 := "Background: world state refreshed from db"
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: EQ        1 R1 K2      ; if R1 == "" then PC := 91
  5 [-]: JMP       91           ; PC := 91
  6 [-]: GETGLOBAL R2 K3        ; R2 := mCurrentMode
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UI_MODE_IN_GAME"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 87
 10 [-]: JMP       87           ; PC := 87
 11 [-]: LOADBOOL  R2 0 0       ; R2 := false
 12 [-]: GETGLOBAL R3 K5        ; R3 := 0xa94df70b
 13 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xf87f9433]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: TEST      R3 0         ; if not R3 then PC := 55
 16 [-]: JMP       55           ; PC := 55
 17 [-]: GETUPVAL  R3 U1        ; R3 := U1
 18 [-]: LT        0 K7 R3      ; if 0.000000 >= R3 then PC := 50
 19 [-]: JMP       50           ; PC := 50
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: GETUPVAL  R4 U2        ; R4 := U2
 22 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 23 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 24 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 1         ; if R4 then PC := 46
 27 [-]: JMP       46           ; PC := 46
 28 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 29 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x42b04007]
 30 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableCountdown"
 31 [-]: LOADBOOL  R7 0 0       ; R7 := false
 32 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 33 [-]: SETTABLE  R8 K12 R3    ; R8["MINUTES"] := R3
 34 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 35 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 36 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x42b04007]
 37 [-]: LOADK     R7 K13       ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
 38 [-]: LOADBOOL  R8 0 0       ; R8 := false
 39 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 40 [-]: LOADK     R6 K14       ; R6 := "\r\n\r\n"
 41 [-]: MOVE      R7 R4        ; R7 := R4
 42 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 43 [-]: GETUPVAL  R6 U3        ; R6 := U3
 44 [-]: MOVE      R7 R5        ; R7 := R5
 45 [-]: CALL      R6 2 1       ; R6(R7)
 46 [-]: GETUPVAL  R6 U1        ; R6 := U1
 47 [-]: SUB       R6 R6 K15    ; R6 := R6 - 1.000000
 48 [-]: SETUPVAL  R6 U1        ; U82 := R1
 49 [-]: JMP       53           ; PC := 53
 50 [-]: LOADBOOL  R6 1 0       ; R6 := true
 51 [-]: SETUPVAL  R6 U4        ; U82 := R4
 52 [-]: RETURN    R0 1         ; return 
 53 [-]: LOADBOOL  R2 1 0       ; R2 := true
 54 [-]: JMP       73           ; PC := 73
 55 [-]: GETGLOBAL R6 K5        ; R6 := 0xa94df70b
 56 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0x751e7461]
 57 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 58 [-]: TEST      R6 0         ; if not R6 then PC := 73
 59 [-]: JMP       73           ; PC := 73
 60 [-]: GETGLOBAL R6 K8        ; R6 := 0x7b998233
 61 [-]: GETGLOBAL R7 K9        ; R7 := 0xae91e43b
 62 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 63 [-]: TEST      R6 1         ; if R6 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETUPVAL  R6 U3        ; R6 := U3
 66 [-]: GETGLOBAL R7 K9        ; R7 := 0xae91e43b
 67 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0x42b04007]
 68 [-]: LOADK     R9 K17       ; R9 := "/Lotus/Language/Menu/MainMenu_BugReportPending"
 69 [-]: LOADBOOL  R10 0 0      ; R10 := false
 70 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 71 [-]: CALL      R6 0 1       ; R6(R7,...)
 72 [-]: LOADBOOL  R2 1 0       ; R2 := true
 73 [-]: TEST      R2 0         ; if not R2 then PC := 87
 74 [-]: JMP       87           ; PC := 87
 75 [-]: GETGLOBAL R6 K8        ; R6 := 0x7b998233
 76 [-]: GETGLOBAL R7 K18       ; R7 := _T
 77 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["SquadOverlay"]
 78 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 79 [-]: TEST      R6 1         ; if R6 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETGLOBAL R6 K18       ; R6 := _T
 82 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["SquadOverlay"]
 83 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0xe4162eed]
 84 [-]: LOADK     R8 K21       ; R8 := "LeaveSquadUI"
 85 [-]: LOADK     R9 K2        ; R9 := ""
 86 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 87 [-]: TEST      R0 0         ; if not R0 then PC := 91
 88 [-]: JMP       91           ; PC := 91
 89 [-]: GETUPVAL  R6 U5        ; R6 := U5
 90 [-]: CALL      R6 1 1       ; R6()
 91 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3845
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mWorldStateCallbackRegistered"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: TEST      R0 1         ; if R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K1        ; R1 := 0x76ea806b
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x3f3ae64c]
 10 [-]: LOADK     R3 0         ; R3 := 0.000000
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x80563238]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 1         ; if R3 then PC := 32
 23 [-]: JMP       32           ; PC := 32
 24 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0x0e0439c0]
 25 [-]: LOADK     R5 K6        ; R5 := "OnSyncWorldState"
 26 [-]: GETUPVAL  R6 U0        ; R6 := U0
 27 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["WORLD_STATE_CALLBACK_IDENTIFIER"]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: SETTABLE  R3 K0 K8     ; R3["mWorldStateCallbackRegistered"] := true
 32 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3860
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: LOADK     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x80563238]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x92ca4c2e]
 18 [-]: LOADK     R4 K5        ; R4 := "OnInventorySyncCallback"
 19 [-]: CALL      R2 3 1       ; R2(R3,R4)
 20 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3870
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x06d055f9]
  3 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADBOOL  R2 1 0       ; R2 := true
  7 [-]: LOADBOOL  R3 1 0       ; R3 := true
  8 [-]: LOADBOOL  R4 0 0       ; R4 := false
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3875
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x3d106989
  7 [-]: LOADK     R5 K2        ; R5 := "Error: Transmissions set is borked"
  8 [-]: CALL      R4 2 1       ; R4(R5)
  9 [-]: LOADBOOL  R4 0 0       ; R4 := false
 10 [-]: RETURN    R4 2         ; return R4
 11 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R2 R4 K4     ; R2 := R4["DEFAULT"]
 15 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADK     R3 0         ; R3 := 0.000000
 18 [-]: GETGLOBAL R4 K5        ; R4 := 0x33bdd652
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4[0x23d5322f]
 20 [-]: GETUPVAL  R5 U1        ; R5 := U1
 21 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Callbacks"]
 22 [-]: MOVE      R6 R3        ; R6 := R3
 23 [-]: CALL      R4 3 1       ; R4(R5,R6)
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["OVERRIDE"]
 26 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: GETUPVAL  R4 U0        ; R4 := U0
 29 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["DEFAULT"]
 30 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 42
 31 [-]: JMP       42           ; PC := 42
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["DEFAULT"]
 34 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 76
 35 [-]: JMP       76           ; PC := 76
 36 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 37 [-]: GETUPVAL  R5 U1        ; R5 := U1
 38 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["SoundInst"]
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: TEST      R4 1         ; if R4 then PC := 76
 41 [-]: JMP       76           ; PC := 76
 42 [-]: GETUPVAL  R4 U0        ; R4 := U0
 43 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["FORCE_QUEUE"]
 44 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 56
 45 [-]: JMP       56           ; PC := 56
 46 [-]: LOADK     R4 1         ; R4 := 1.000000
 47 [-]: GETUPVAL  R5 U1        ; R5 := U1
 48 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["WaitingTransmissions"]
 49 [-]: LEN       R5 R5        ; R5 := # R5
 50 [-]: LOADK     R6 1         ; R6 := 1.000000
 51 [-]: FORPREP   R4 55        ; R4 -= R6; PC := 55
 52 [-]: GETUPVAL  R8 U1        ; R8 := U1
 53 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["WaitingTransmissions"]
 54 [-]: SETTABLE  R8 R7 K3     ; R8[R7] := nil
 55 [-]: FORLOOP   R4 52        ; R4 += R6; if R4 <= R5 then begin PC := 52; R7 := R4 end
 56 [-]: GETUPVAL  R8 U0        ; R8 := U0
 57 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["QUEUE"]
 58 [-]: EQ        1 R2 R8      ; if R2 == R8 then PC := 64
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETUPVAL  R8 U0        ; R8 := U0
 61 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["FORCE_QUEUE"]
 62 [-]: EQ        0 R2 R8      ; if R2 ~= R8 then PC := 74
 63 [-]: JMP       74           ; PC := 74
 64 [-]: GETGLOBAL R8 K5        ; R8 := 0x33bdd652
 65 [-]: GETTABLE  R8 R8 K6     ; R8 := R8[0x23d5322f]
 66 [-]: GETUPVAL  R9 U1        ; R9 := U1
 67 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["WaitingTransmissions"]
 68 [-]: SELF      R10 R1 K13   ; R11 := R1; R10 := R1[0x10c9eef2]
 69 [-]: GETGLOBAL R12 K14      ; R12 := 0x0469f296
 70 [-]: MOVE      R13 R0       ; R13 := R0
 71 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 72 [-]: CALL      R10 0 0      ; R10,... := R10(R11,...)
 73 [-]: CALL      R8 0 1       ; R8(R9,...)
 74 [-]: LOADBOOL  R8 0 0       ; R8 := false
 75 [-]: RETURN    R8 2         ; return R8
 76 [-]: GETUPVAL  R8 U1        ; R8 := U1
 77 [-]: SELF      R9 R1 K13    ; R10 := R1; R9 := R1[0x10c9eef2]
 78 [-]: GETGLOBAL R11 K14      ; R11 := 0x0469f296
 79 [-]: MOVE      R12 R0       ; R12 := R0
 80 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 81 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 82 [-]: SETTABLE  R8 K15 R9    ; R8["QueuedTransmission"] := R9
 83 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 84 [-]: GETUPVAL  R9 U1        ; R9 := U1
 85 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["QueuedTransmission"]
 86 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 87 [-]: TEST      R8 1         ; if R8 then PC := 102
 88 [-]: JMP       102          ; PC := 102
 89 [-]: GETUPVAL  R8 U1        ; R8 := U1
 90 [-]: GETGLOBAL R9 K17       ; R9 := 0xbd496aa1
 91 [-]: GETTABLE  R9 R9 K18    ; R9 := R9[0x42645da3]
 92 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 93 [-]: GETUPVAL  R11 U1       ; R11 := U1
 94 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["QueuedTransmission"]
 95 [-]: SELF      R11 R11 K19  ; R12 := R11; R11 := R11[0xed4e0128]
 96 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 97 [-]: SETLIST   R10 0 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
 98 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 99 [-]: SETTABLE  R8 K16 R9    ; R8["Loader"] := R9
100 [-]: GETUPVAL  R8 U1        ; R8 := U1
101 [-]: SETTABLE  R8 K20 K21   ; R8["IsLoading"] := true
102 [-]: LOADBOOL  R8 1 0       ; R8 := true
103 [-]: RETURN    R8 2         ; return R8
104 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3912
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3918
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 R0     ; R2["Avatar"] := R0
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R2 K1 R1     ; R2["TargetPos"] := R1
  5 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3923
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe4162eed]
  8 [-]: LOADK     R4 K2        ; R4 := "CloseDiorama"
  9 [-]: LOADK     R5 K3        ; R5 := ""
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: SETUPVAL  R2 U0        ; U82 := R0
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 47
 17 [-]: JMP       47           ; PC := 47
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x9ba7909f
 19 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xcfba257f]
 20 [-]: GETGLOBAL R4 K6        ; R4 := 0xe0c4d91f
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: SETUPVAL  R2 U0        ; U82 := R0
 23 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 29 [-]: GETGLOBAL R3 K7        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: TEST      R2 1         ; if R2 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETUPVAL  R2 U0        ; R2 := U0
 35 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe4162eed]
 36 [-]: LOADK     R4 K8        ; R4 := "SetLoadedCallback"
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 39 [-]: GETUPVAL  R2 U0        ; R2 := U0
 40 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe4162eed]
 41 [-]: LOADK     R4 K9        ; R4 := "LoadDiorama"
 42 [-]: GETGLOBAL R5 K10       ; R5 := 0x64fb1586
 43 [-]: SELF      R6 R0 K11    ; R7 := R0; R6 := R0[0xed4e0128]
 44 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 45 [-]: CALL      R5 0 0       ; R5,... := R5(R6,...)
 46 [-]: CALL      R2 0 1       ; R2(R3,...)
 47 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3937
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x1044f972]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: GETTABLE  R3 R2 K1     ; R3 := R2["level"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: MOVE      R6 R1        ; R6 := R1
  7 [-]: CALL      R4 3 1       ; R4(R5,R6)
  8 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3943
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        1 R0 K0      ; if R0 == true then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: EQ        0 R0 K1      ; if R0 ~= "true" then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x4248b498
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: JMP       22           ; PC := 22
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xe4162eed]
 17 [-]: LOADK     R4 K5        ; R4 := "CloseDiorama"
 18 [-]: LOADK     R5 K6        ; R5 := ""
 19 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 20 [-]: LOADNIL   R2 R2        ; R2 := nil
 21 [-]: SETUPVAL  R2 U1        ; U82 := R1
 22 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3952
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe7f2b02f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0b6ebd5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 35
  5 [-]: JMP       35           ; PC := 35
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIMovie_EndOfQuestMovie"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 35
 11 [-]: JMP       35           ; PC := 35
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 35
 14 [-]: JMP       35           ; PC := 35
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 35
 18 [-]: JMP       35           ; PC := 35
 19 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x1fd6abd0]
 21 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
 22 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UIMovie_EndOfQuestMovie"]
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 1         ; if R2 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xe4162eed]
 30 [-]: LOADK     R4 K9        ; R4 := "SetQuestType"
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 33 [-]: LOADNIL   R2 R2        ; R2 := nil
 34 [-]: SETUPVAL  R2 U0        ; U82 := R0
 35 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3967
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["NeedsGoalCheck"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["NeedsGoalCheck"]
  9 [-]: TEST      R0 1         ; if R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R0 K3        ; R0 := 0x76ea806b
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x3f3ae64c]
 14 [-]: LOADK     R2 0         ; R2 := 0.000000
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 0         ; if not R1 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0x80563238]
 23 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 24 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 0         ; if not R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0x4b0ebe0c]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: SELF      R3 R1 K7     ; R4 := R1; R3 := R1[0x69727e0b]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 35 [-]: MOVE      R5 R3        ; R5 := R3
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 0         ; if not R4 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: LOADNIL   R4 R4        ; R4 := nil
 40 [-]: RETURN    R4 2         ; return R4
 41 [-]: LOADK     R4 1         ; R4 := 1.000000
 42 [-]: GETTABLE  R5 R3 K8     ; R5 := R3["mGoals"]
 43 [-]: LEN       R5 R5        ; R5 := # R5
 44 [-]: LOADK     R6 1         ; R6 := 1.000000
 45 [-]: FORPREP   R4 63        ; R4 -= R6; PC := 63
 46 [-]: GETTABLE  R8 R3 K8     ; R8 := R3["mGoals"]
 47 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 48 [-]: GETTABLE  R9 R8 K9     ; R9 := R8["mTag"]
 49 [-]: GETGLOBAL R10 K10      ; R10 := 0x0469f296
 50 [-]: LOADK     R11 K11      ; R11 := "OldWorldSalvage"
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 63
 53 [-]: JMP       63           ; PC := 63
 54 [-]: GETUPVAL  R9 U0        ; R9 := U0
 55 [-]: GETTABLE  R9 R9 K12    ; R9 := R9[0x9897ecc6]
 56 [-]: MOVE      R10 R8       ; R10 := R8
 57 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 58 [-]: EQ        0 R2 K13     ; if R2 ~= "SolNode333" then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: EQ        0 R9 K14     ; if R9 ~= 1.000000 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: JMP       64           ; PC := 64
 63 [-]: FORLOOP   R4 46        ; R4 += R6; if R4 <= R5 then begin PC := 46; R7 := R4 end
 64 [-]: EQ        0 R2 K15     ; if R2 ~= "SolNode332" then PC := 85
 65 [-]: JMP       85           ; PC := 85
 66 [-]: SELF      R12 R1 K16   ; R13 := R1; R12 := R1[0xb407484d]
 67 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 68 [-]: LOADK     R13 1        ; R13 := 1.000000
 69 [-]: LEN       R14 R12      ; R14 := # R12
 70 [-]: LOADK     R15 1        ; R15 := 1.000000
 71 [-]: FORPREP   R13 84       ; R13 -= R15; PC := 84
 72 [-]: GETTABLE  R17 R12 R16  ; R17 := R12[R16]
 73 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["mTag"]
 74 [-]: GETGLOBAL R18 K10      ; R18 := 0x0469f296
 75 [-]: LOADK     R19 K15      ; R19 := "SolNode332"
 76 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 77 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 84
 78 [-]: JMP       84           ; PC := 84
 79 [-]: GETTABLE  R17 R12 R16  ; R17 := R12[R16]
 80 [-]: GETTABLE  R17 R17 K17  ; R17 := R17["mCompletes"]
 81 [-]: EQ        0 R17 K14    ; if R17 ~= 1.000000 then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: JMP       85           ; PC := 85
 84 [-]: FORLOOP   R13 72       ; R13 += R15; if R13 <= R14 then begin PC := 72; R16 := R13 end
 85 [-]: GETGLOBAL R17 K1       ; R17 := _T
 86 [-]: SETTABLE  R17 K2 K18   ; R17["NeedsGoalCheck"] := false
 87 [-]: GETGLOBAL R17 K19      ; R17 := 0x3d106989
 88 [-]: LOADK     R18 K20      ; R18 := "Goal check is now false"
 89 [-]: CALL      R17 2 1      ; R17(R18)
 90 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 4014
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: TEST      R0 0         ; if not R0 then PC := 101
  2 [-]: JMP       101          ; PC := 101
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x76ea806b
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x3f3ae64c]
  5 [-]: LOADK     R4 0         ; R4 := 0.000000
  6 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x80563238]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 0         ; if not R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R4 K4        ; R4 := 0x9ba7909f
 22 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xbcfb64ab]
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: GETTABLE  R6 R6 K6     ; R6 := R6[0xc472e470]
 25 [-]: CALL      R6 1 0       ; R6,... := R6()
 26 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 27 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 28 [-]: MOVE      R6 R4        ; R6 := R4
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: TEST      R5 1         ; if R5 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: SELF      R5 R4 K7     ; R6 := R4; R5 := R4[0xe4162eed]
 33 [-]: LOADK     R7 K8        ; R7 := "UpdateOmegaSuggestTree"
 34 [-]: LOADK     R8 K9        ; R8 := ""
 35 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 36 [-]: SELF      R5 R3 K10    ; R6 := R3; R5 := R3[0x25a6e75e]
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0x98b1bb53]
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 41 [-]: GETGLOBAL R8 K12       ; R8 := cjson
 42 [-]: GETTABLE  R8 R8 K13    ; R8 := R8[0x7ab914d8]
 43 [-]: MOVE      R9 R1        ; R9 := R1
 44 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 45 [-]: GETTABLE  R9 R8 K14    ; R9 := R8["changes"]
 46 [-]: EQ        1 R9 K15     ; if R9 == nil then PC := 72
 47 [-]: JMP       72           ; PC := 72
 48 [-]: GETGLOBAL R9 K16       ; R9 := 0xc8802016
 49 [-]: GETTABLE  R10 R8 K14   ; R10 := R8["changes"]
 50 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 51 [-]: JMP       70           ; PC := 70
 52 [-]: GETTABLE  R14 R13 K17  ; R14 := R13["ItemId"]
 53 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["$oid"]
 54 [-]: GETGLOBAL R15 K16      ; R15 := 0xc8802016
 55 [-]: MOVE      R16 R6       ; R16 := R6
 56 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 57 [-]: JMP       68           ; PC := 68
 58 [-]: GETTABLE  R20 R19 K19  ; R20 := R19["mItemId"]
 59 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["mId"]
 60 [-]: EQ        0 R14 R20    ; if R14 ~= R20 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETGLOBAL R21 K21      ; R21 := 0x33bdd652
 63 [-]: GETTABLE  R21 R21 K22  ; R21 := R21[0x23d5322f]
 64 [-]: MOVE      R22 R7       ; R22 := R7
 65 [-]: MOVE      R23 R19      ; R23 := R19
 66 [-]: CALL      R21 3 1      ; R21(R22,R23)
 67 [-]: JMP       70           ; PC := 70
 68 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 58; R17 := R18 end
 69 [-]: JMP       58           ; PC := 58
 70 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 52; R11 := R12 end
 71 [-]: JMP       52           ; PC := 52
 72 [-]: GETGLOBAL R21 K23      ; R21 := _T
 73 [-]: SETTABLE  R21 K24 K25  ; R21["boosterUpgradeInfoMode"] := true
 74 [-]: GETGLOBAL R21 K23      ; R21 := _T
 75 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 76 [-]: SETTABLE  R21 K26 R22  ; R21["boosterPackCards"] := R22
 77 [-]: GETGLOBAL R21 K23      ; R21 := _T
 78 [-]: SETTABLE  R21 K27 K25  ; R21["boosterOmegaMode"] := true
 79 [-]: GETGLOBAL R21 K16      ; R21 := 0xc8802016
 80 [-]: MOVE      R22 R7       ; R22 := R7
 81 [-]: CALL      R21 2 4      ; R21,R22,R23 := R21(R22)
 82 [-]: JMP       92           ; PC := 92
 83 [-]: GETGLOBAL R26 K21      ; R26 := 0x33bdd652
 84 [-]: GETTABLE  R26 R26 K22  ; R26 := R26[0x23d5322f]
 85 [-]: GETGLOBAL R27 K23      ; R27 := _T
 86 [-]: GETTABLE  R27 R27 K26  ; R27 := R27["boosterPackCards"]
 87 [-]: NEWTABLE  R28 2 0      ; R28 := {}
 88 [-]: MOVE      R29 R25      ; R29 := R25
 89 [-]: LOADK     R30 K9       ; R30 := ""
 90 [-]: SETLIST   R28 2 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
 91 [-]: CALL      R26 3 1      ; R26(R27,R28)
 92 [-]: TFORLOOP  R21 2        ; R24,R25 :=  R21(R22,R23); if R24 ~= nil then begin PC = 83; R23 := R24 end
 93 [-]: JMP       83           ; PC := 83
 94 [-]: LOADBOOL  R26 0 0      ; R26 := false
 95 [-]: SETGLOBAL R26 K28      ; mShowingIdentifiedOmegaModsDiorama := R26
 96 [-]: LOADBOOL  R26 1 0      ; R26 := true
 97 [-]: SETGLOBAL R26 K29      ; mShouldShowDiorama := R26
 98 [-]: LOADNIL   R26 R26      ; R26 := nil
 99 [-]: SETGLOBAL R26 K30      ; mCheckingForIdentifiedOmegaMods := R26
100 [-]: JMP       101          ; PC := 101
101 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 4117
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xe4162eed]
  8 [-]: LOADK     R3 K2        ; R3 := "CloseDiorama"
  9 [-]: LOADK     R4 K3        ; R4 := ""
 10 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 11 [-]: LOADNIL   R1 R1        ; R1 := nil
 12 [-]: SETUPVAL  R1 U0        ; U82 := R0
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: SETGLOBAL R1 K4        ; mShowingIdentifiedOmegaModsDiorama := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 4125
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe7f2b02f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0b6ebd5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 228
  5 [-]: JMP       228          ; PC := 228
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIMovie_EndOfQuestMovie"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 228
 11 [-]: JMP       228          ; PC := 228
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 228
 14 [-]: JMP       228          ; PC := 228
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 228
 18 [-]: JMP       228          ; PC := 228
 19 [-]: GETGLOBAL R1 K6        ; R1 := mCheckingForIdentifiedOmegaMods
 20 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 72
 21 [-]: JMP       72           ; PC := 72
 22 [-]: GETGLOBAL R1 K7        ; R1 := mShowingIdentifiedOmegaModsDiorama
 23 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 72
 24 [-]: JMP       72           ; PC := 72
 25 [-]: GETGLOBAL R1 K8        ; R1 := mOmegaWithPendingFingerprints
 26 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 72
 27 [-]: JMP       72           ; PC := 72
 28 [-]: GETGLOBAL R1 K9        ; R1 := mProcessingOmegaWithPendingFingerprint
 29 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 72
 30 [-]: JMP       72           ; PC := 72
 31 [-]: GETGLOBAL R1 K8        ; R1 := mOmegaWithPendingFingerprints
 32 [-]: LEN       R1 R1        ; R1 := # R1
 33 [-]: LT        0 K10 R1     ; if 0.000000 >= R1 then PC := 69
 34 [-]: JMP       69           ; PC := 69
 35 [-]: GETGLOBAL R1 K11       ; R1 := 0x33bdd652
 36 [-]: GETTABLE  R1 R1 K12    ; R1 := R1[0x9c1f3b5a]
 37 [-]: GETGLOBAL R2 K8        ; R2 := mOmegaWithPendingFingerprints
 38 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 39 [-]: SETGLOBAL R1 K9        ; mProcessingOmegaWithPendingFingerprint := R1
 40 [-]: GETGLOBAL R1 K13       ; R1 := _T
 41 [-]: GETGLOBAL R2 K9        ; R2 := mProcessingOmegaWithPendingFingerprint
 42 [-]: SETTABLE  R1 K14 R2    ; R1["OmegaRerollChoice"] := R2
 43 [-]: GETGLOBAL R1 K13       ; R1 := _T
 44 [-]: CLOSURE   R2 0         ; R2 := closure(Function #101.1)
 45 [-]: SETTABLE  R1 K15 R2    ; R1["OmegaRerollDone"] := R2
 46 [-]: GETGLOBAL R1 K13       ; R1 := _T
 47 [-]: CLOSURE   R2 1         ; R2 := closure(Function #101.2)
 48 [-]: SETTABLE  R1 K16 R2    ; R1["OmegaRerollCanceled"] := R2
 49 [-]: GETGLOBAL R1 K17       ; R1 := 0xae91e43b
 50 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1[0x1fd6abd0]
 51 [-]: GETGLOBAL R3 K19       ; R3 := 0x7ed0a956
 52 [-]: LOADK     R4 K20       ; R4 := "/Lotus/Interface/OmegaRerollSelection.swf"
 53 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 54 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 55 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 56 [-]: MOVE      R3 R1        ; R3 := R1
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 1         ; if R2 then PC := 228
 59 [-]: JMP       228          ; PC := 228
 60 [-]: SELF      R2 R1 K21    ; R3 := R1; R2 := R1[0xe4162eed]
 61 [-]: LOADK     R4 K22       ; R4 := "SetCallBack"
 62 [-]: LOADK     R5 K15       ; R5 := "OmegaRerollDone"
 63 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 64 [-]: SELF      R2 R1 K21    ; R3 := R1; R2 := R1[0xe4162eed]
 65 [-]: LOADK     R4 K23       ; R4 := "SetCancelCallBack"
 66 [-]: LOADK     R5 K16       ; R5 := "OmegaRerollCanceled"
 67 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 68 [-]: JMP       228          ; PC := 228
 69 [-]: LOADNIL   R2 R2        ; R2 := nil
 70 [-]: SETGLOBAL R2 K8        ; mOmegaWithPendingFingerprints := R2
 71 [-]: JMP       228          ; PC := 228
 72 [-]: GETGLOBAL R2 K6        ; R2 := mCheckingForIdentifiedOmegaMods
 73 [-]: TEST      R2 0         ; if not R2 then PC := 182
 74 [-]: JMP       182          ; PC := 182
 75 [-]: GETGLOBAL R2 K24       ; R2 := 0x76ea806b
 76 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2[0x3f3ae64c]
 77 [-]: LOADK     R4 0         ; R4 := 0.000000
 78 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 79 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 80 [-]: MOVE      R4 R2        ; R4 := R2
 81 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 82 [-]: TEST      R3 0         ; if not R3 then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: RETURN    R0 1         ; return 
 85 [-]: SELF      R3 R2 K26    ; R4 := R2; R3 := R2[0x80563238]
 86 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 87 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 88 [-]: MOVE      R5 R3        ; R5 := R3
 89 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 90 [-]: TEST      R4 0         ; if not R4 then PC := 93
 91 [-]: JMP       93           ; PC := 93
 92 [-]: RETURN    R0 1         ; return 
 93 [-]: SELF      R4 R3 K27    ; R5 := R3; R4 := R3[0x25a6e75e]
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: SELF      R5 R4 K28    ; R6 := R4; R5 := R4[0x98b1bb53]
 96 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 97 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 98 [-]: GETGLOBAL R7 K29       ; R7 := 0xc8802016
 99 [-]: MOVE      R8 R5        ; R8 := R5
100 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
101 [-]: JMP       113          ; PC := 113
102 [-]: GETTABLE  R12 R11 K30  ; R12 := R11["mItemType"]
103 [-]: SELF      R13 R12 K31  ; R14 := R12; R13 := R12[0xf2deaf69]
104 [-]: GETGLOBAL R15 K32      ; R15 := gRandomizedArtifactUpgradeType
105 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
106 [-]: TEST      R13 0        ; if not R13 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: GETGLOBAL R13 K11      ; R13 := 0x33bdd652
109 [-]: GETTABLE  R13 R13 K33  ; R13 := R13[0x23d5322f]
110 [-]: MOVE      R14 R6       ; R14 := R6
111 [-]: MOVE      R15 R11      ; R15 := R11
112 [-]: CALL      R13 3 1      ; R13(R14,R15)
113 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 102; R9 := R10 end
114 [-]: JMP       102          ; PC := 102
115 [-]: GETUPVAL  R13 U2       ; R13 := U2
116 [-]: LEN       R14 R6       ; R14 := # R6
117 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 168
118 [-]: JMP       168          ; PC := 168
119 [-]: GETUPVAL  R13 U2       ; R13 := U2
120 [-]: GETTABLE  R13 R6 R13   ; R13 := R6[R13]
121 [-]: GETTABLE  R14 R13 K30  ; R14 := R13["mItemType"]
122 [-]: GETTABLE  R15 R13 K34  ; R15 := R13["mInstance"]
123 [-]: GETTABLE  R16 R13 K35  ; R16 := R13["mUpgradeFingerprint"]
124 [-]: GETTABLE  R17 R13 K36  ; R17 := R13["mPendingRerollFingerprint"]
125 [-]: GETGLOBAL R18 K2       ; R18 := 0x7b998233
126 [-]: SELF      R19 R15 K37  ; R20 := R15; R19 := R15[0xd08fa3ab]
127 [-]: MOVE      R21 R16      ; R21 := R16
128 [-]: CALL      R19 3 0      ; R19,... := R19(R20,R21)
129 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
130 [-]: TEST      R18 1        ; if R18 then PC := 147
131 [-]: JMP       147          ; PC := 147
132 [-]: SELF      R18 R15 K38  ; R19 := R15; R18 := R15[0x4dd96fc5]
133 [-]: MOVE      R20 R16      ; R20 := R16
134 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
135 [-]: SELF      R19 R15 K39  ; R20 := R15; R19 := R15[0xfb6b8cc5]
136 [-]: MOVE      R21 R16      ; R21 := R16
137 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
138 [-]: LE        0 R19 R18    ; if R19 > R18 then PC := 147
139 [-]: JMP       147          ; PC := 147
140 [-]: GETGLOBAL R18 K11      ; R18 := 0x33bdd652
141 [-]: GETTABLE  R18 R18 K33  ; R18 := R18[0x23d5322f]
142 [-]: GETGLOBAL R19 K40      ; R19 := mNewIdentifiedOmegaMods
143 [-]: GETTABLE  R20 R13 K41  ; R20 := R13["mItemId"]
144 [-]: GETTABLE  R20 R20 K42  ; R20 := R20["mId"]
145 [-]: CALL      R18 3 1      ; R18(R19,R20)
146 [-]: JMP       160          ; PC := 160
147 [-]: EQ        1 R17 K43    ; if R17 == "" then PC := 160
148 [-]: JMP       160          ; PC := 160
149 [-]: GETGLOBAL R18 K11      ; R18 := 0x33bdd652
150 [-]: GETTABLE  R18 R18 K33  ; R18 := R18[0x23d5322f]
151 [-]: GETGLOBAL R19 K8       ; R19 := mOmegaWithPendingFingerprints
152 [-]: NEWTABLE  R20 0 4      ; R20 := {}
153 [-]: GETTABLE  R21 R13 K41  ; R21 := R13["mItemId"]
154 [-]: GETTABLE  R21 R21 K42  ; R21 := R21["mId"]
155 [-]: SETTABLE  R20 K44 R21  ; R20["Id"] := R21
156 [-]: SETTABLE  R20 K45 R14  ; R20["Type"] := R14
157 [-]: SETTABLE  R20 K46 R16  ; R20["Fingerprint"] := R16
158 [-]: SETTABLE  R20 K47 R17  ; R20["RerollFingerprint"] := R17
159 [-]: CALL      R18 3 1      ; R18(R19,R20)
160 [-]: GETUPVAL  R18 U2       ; R18 := U2
161 [-]: LEN       R19 R6       ; R19 := # R6
162 [-]: LT        0 R18 R19    ; if R18 >= R19 then PC := 168
163 [-]: JMP       168          ; PC := 168
164 [-]: GETUPVAL  R18 U2       ; R18 := U2
165 [-]: ADD       R18 R18 K48  ; R18 := R18 + 1.000000
166 [-]: SETUPVAL  R18 U2       ; U82 := R2
167 [-]: RETURN    R0 1         ; return 
168 [-]: LOADBOOL  R18 0 0      ; R18 := false
169 [-]: SETGLOBAL R18 K6       ; mCheckingForIdentifiedOmegaMods := R18
170 [-]: GETGLOBAL R18 K40      ; R18 := mNewIdentifiedOmegaMods
171 [-]: LEN       R18 R18      ; R18 := # R18
172 [-]: EQ        0 R18 K10    ; if R18 ~= 0.000000 then PC := 177
173 [-]: JMP       177          ; PC := 177
174 [-]: LOADNIL   R18 R18      ; R18 := nil
175 [-]: SETGLOBAL R18 K6       ; mCheckingForIdentifiedOmegaMods := R18
176 [-]: RETURN    R0 1         ; return 
177 [-]: SELF      R18 R3 K49   ; R19 := R3; R18 := R3[0x924e816a]
178 [-]: GETGLOBAL R20 K40      ; R20 := mNewIdentifiedOmegaMods
179 [-]: LOADK     R21 K50      ; R21 := "OnRerollsCompleted"
180 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
181 [-]: JMP       228          ; PC := 228
182 [-]: GETGLOBAL R18 K51      ; R18 := mShouldShowDiorama
183 [-]: TEST      R18 0        ; if not R18 then PC := 195
184 [-]: JMP       195          ; PC := 195
185 [-]: LOADNIL   R18 R18      ; R18 := nil
186 [-]: SETGLOBAL R18 K51      ; mShouldShowDiorama := R18
187 [-]: GETGLOBAL R18 K13      ; R18 := _T
188 [-]: CLOSURE   R19 2        ; R19 := closure(Function #101.3)
189 [-]: SETTABLE  R18 K52 R19  ; R18["OnDioramaLoaded"] := R19
190 [-]: GETUPVAL  R18 U3       ; R18 := U3
191 [-]: GETGLOBAL R19 K53      ; R19 := 0x4248b498
192 [-]: LOADK     R20 K52      ; R20 := "OnDioramaLoaded"
193 [-]: CALL      R18 3 1      ; R18(R19,R20)
194 [-]: JMP       228          ; PC := 228
195 [-]: GETGLOBAL R18 K7       ; R18 := mShowingIdentifiedOmegaModsDiorama
196 [-]: TEST      R18 0        ; if not R18 then PC := 228
197 [-]: JMP       228          ; PC := 228
198 [-]: LOADBOOL  R18 0 0      ; R18 := false
199 [-]: SETGLOBAL R18 K7       ; mShowingIdentifiedOmegaModsDiorama := R18
200 [-]: GETGLOBAL R18 K13      ; R18 := _T
201 [-]: SETTABLE  R18 K52 K5   ; R18["OnDioramaLoaded"] := nil
202 [-]: LOADNIL   R18 R18      ; R18 := nil
203 [-]: GETGLOBAL R19 K54      ; R19 := 0x4ec73e73
204 [-]: GETGLOBAL R20 K13      ; R20 := _T
205 [-]: GETTABLE  R20 R20 K55  ; R20 := R20["boosterPackCards"]
206 [-]: CALL      R19 2 2      ; R19 := R19(R20)
207 [-]: TEST      R19 0        ; if not R19 then PC := 228
208 [-]: JMP       228          ; PC := 228
209 [-]: GETGLOBAL R19 K17      ; R19 := 0xae91e43b
210 [-]: SELF      R19 R19 K18  ; R20 := R19; R19 := R19[0x1fd6abd0]
211 [-]: GETGLOBAL R21 K56      ; R21 := 0x39803e25
212 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
213 [-]: MOVE      R18 R19      ; R18 := R19
214 [-]: SELF      R19 R18 K57  ; R20 := R18; R19 := R18[0xf56f3887]
215 [-]: LOADK     R21 K58      ; R21 := "SetText"
216 [-]: NEWTABLE  R22 1 0      ; R22 := {}
217 [-]: LOADK     R23 K43      ; R23 := ""
218 [-]: SETLIST   R22 1 1      ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
219 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
220 [-]: SELF      R19 R18 K21  ; R20 := R18; R19 := R18[0xe4162eed]
221 [-]: LOADK     R21 K59      ; R21 := "SetNumOptions"
222 [-]: LOADK     R22 1        ; R22 := 1.000000
223 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
224 [-]: SELF      R19 R18 K21  ; R20 := R18; R19 := R18[0xe4162eed]
225 [-]: LOADK     R21 K60      ; R21 := "SetCallback"
226 [-]: LOADK     R22 K61      ; R22 := "OnFinishedShowingIdentifiedOmegas"
227 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
228 [-]: RETURN    R0 1         ; return 


; Function #101.1:
;
; Name:            
; Defined at line: 4134
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #101.2:
;
; Name:            
; Defined at line: 4137
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["OmegaRerollDone"] := nil
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: SETTABLE  R0 K3 K2     ; R0["OmegaRerollCanceled"] := nil
  5 [-]: LOADNIL   R0 R0        ; R0 := nil
  6 [-]: SETGLOBAL R0 K4        ; mProcessingOmegaWithPendingFingerprint := R0
  7 [-]: RETURN    R0 1         ; return 


; Function #101.3:
;
; Name:            
; Defined at line: 4208
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADBOOL  R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mShowingIdentifiedOmegaModsDiorama := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 4227
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe7f2b02f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0b6ebd5b]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: TEST      R1 0         ; if not R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIMovie_EndOfQuestMovie"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 28
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETUPVAL  R1 U2        ; R1 := U2
 19 [-]: LOADBOOL  R2 1 0       ; R2 := true
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 0         ; if not R1 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETUPVAL  R1 U3        ; R1 := U3
 24 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x8c71bcf4]
 25 [-]: CALL      R1 1 1       ; R1()
 26 [-]: LOADBOOL  R1 0 0       ; R1 := false
 27 [-]: SETUPVAL  R1 U0        ; U82 := R0
 28 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 4241
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x83f4e77c
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 87
  5 [-]: JMP       87           ; PC := 87
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0x89326c93
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x29ef273d]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: MOVE      R0 R1        ; R0 := R1
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xa6f182de]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 25
 25 [-]: LOADBOOL  R1 1 0       ; R1 := true
 26 [-]: GETGLOBAL R2 K1        ; R2 := 0x83f4e77c
 27 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x67e75582]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: TEST      R2 1         ; if R2 then PC := 73
 30 [-]: JMP       73           ; PC := 73
 31 [-]: GETGLOBAL R2 K6        ; R2 := mFadeInStarted
 32 [-]: TEST      R2 1         ; if R2 then PC := 73
 33 [-]: JMP       73           ; PC := 73
 34 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: GETTABLE  R3 R3 K7     ; R3 := R3[0xa9882367]
 37 [-]: LOADK     R4 K8        ; R4 := "StarChartRoot"
 38 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 39 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 40 [-]: TEST      R2 0         ; if not R2 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETGLOBAL R2 K9        ; R2 := mCurrentMode
 43 [-]: GETUPVAL  R3 U1        ; R3 := U1
 44 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
 45 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 73
 46 [-]: JMP       73           ; PC := 73
 47 [-]: TEST      R1 0         ; if not R1 then PC := 73
 48 [-]: JMP       73           ; PC := 73
 49 [-]: GETUPVAL  R2 U2        ; R2 := U2
 50 [-]: CALL      R2 1 1       ; R2()
 51 [-]: GETUPVAL  R2 U0        ; R2 := U0
 52 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0xa9882367]
 53 [-]: LOADK     R3 K11       ; R3 := "SuitAvatarSpawner"
 54 [-]: GETUPVAL  R4 U0        ; R4 := U0
 55 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x06d055f9]
 56 [-]: GETUPVAL  R5 U1        ; R5 := U1
 57 [-]: GETTABLE  R5 R5 K13    ; R5 := R5[0xcf1fcba4]
 58 [-]: CALL      R5 1 2       ; R5 := R5()
 59 [-]: GETGLOBAL R6 K14       ; R6 := 0x1211d00f
 60 [-]: LOADNIL   R7 R7        ; R7 := nil
 61 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 62 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 63 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 64 [-]: MOVE      R4 R2        ; R4 := R2
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: TEST      R3 1         ; if R3 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: SELF      R3 R2 K15    ; R4 := R2; R3 := R2[0x8eb2112d]
 69 [-]: LOADK     R5 K16       ; R5 := "Start"
 70 [-]: CALL      R3 3 1       ; R3(R4,R5)
 71 [-]: LOADBOOL  R3 1 0       ; R3 := true
 72 [-]: SETGLOBAL R3 K6        ; mFadeInStarted := R3
 73 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 74 [-]: GETGLOBAL R4 K17       ; R4 := mMenuSuitAvatar
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: TEST      R3 1         ; if R3 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: GETGLOBAL R3 K18       ; R3 := mMenuSuitAvatarVisible
 79 [-]: TEST      R3 1         ; if R3 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETUPVAL  R3 U3        ; R3 := U3
 82 [-]: CALL      R3 1 2       ; R3 := R3()
 83 [-]: TEST      R3 0         ; if not R3 then PC := 87
 84 [-]: JMP       87           ; PC := 87
 85 [-]: GETUPVAL  R3 U4        ; R3 := U4
 86 [-]: CALL      R3 1 1       ; R3()
 87 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 88 [-]: GETGLOBAL R4 K19       ; R4 := queuedMovie
 89 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 90 [-]: TEST      R3 1         ; if R3 then PC := 200
 91 [-]: JMP       200          ; PC := 200
 92 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 93 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: TEST      R3 1         ; if R3 then PC := 100
 96 [-]: JMP       100          ; PC := 100
 97 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
 98 [-]: EQ        0 R3 K21     ; if R3 ~= "LoadOut" then PC := 200
 99 [-]: JMP       200          ; PC := 200
100 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
101 [-]: EQ        0 R3 K22     ; if R3 ~= "ItemBrowsing" then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: GETGLOBAL R3 K23       ; R3 := _T
104 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["starChartDone"]
105 [-]: TEST      R3 0         ; if not R3 then PC := 200
106 [-]: JMP       200          ; PC := 200
107 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
108 [-]: GETGLOBAL R4 K25       ; R4 := movies
109 [-]: GETGLOBAL R5 K19       ; R5 := queuedMovie
110 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
111 [-]: CALL      R3 2 2       ; R3 := R3(R4)
112 [-]: TEST      R3 1         ; if R3 then PC := 189
113 [-]: JMP       189          ; PC := 189
114 [-]: GETGLOBAL R3 K26       ; R3 := 0x3d106989
115 [-]: GETUPVAL  R4 U5        ; R4 := U5
116 [-]: LOADK     R5 K27       ; R5 := "PushChildMovie("
117 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
118 [-]: LOADK     R7 K28       ; R7 := ")"
119 [-]: CONCAT    R4 R4 R7     ; R4 := R4 .. R5 .. R6 .. R7
120 [-]: CALL      R3 2 1       ; R3(R4)
121 [-]: GETGLOBAL R3 K29       ; R3 := 0x9ba7909f
122 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0xbcfb64ab]
123 [-]: GETGLOBAL R5 K25       ; R5 := movies
124 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
125 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
126 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
127 [-]: SETGLOBAL R3 K20       ; mChildMovie := R3
128 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
129 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
130 [-]: CALL      R3 2 2       ; R3 := R3(R4)
131 [-]: TEST      R3 1         ; if R3 then PC := 163
132 [-]: JMP       163          ; PC := 163
133 [-]: GETGLOBAL R3 K20       ; R3 := mChildMovie
134 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3[0x368ad758]
135 [-]: LOADBOOL  R5 1 0       ; R5 := true
136 [-]: CALL      R3 3 1       ; R3(R4,R5)
137 [-]: GETGLOBAL R3 K20       ; R3 := mChildMovie
138 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3[0xe4162eed]
139 [-]: LOADK     R5 K33       ; R5 := "OnChildScreenClosed"
140 [-]: GETGLOBAL R6 K34       ; R6 := mPreviousScreen
141 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
142 [-]: LOADNIL   R3 R3        ; R3 := nil
143 [-]: SETGLOBAL R3 K34       ; mPreviousScreen := R3
144 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
145 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
146 [-]: CALL      R3 2 2       ; R3 := R3(R4)
147 [-]: TEST      R3 1         ; if R3 then PC := 170
148 [-]: JMP       170          ; PC := 170
149 [-]: GETGLOBAL R3 K35       ; R3 := 0x25312c9b
150 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
151 [-]: LOADK     R5 K36       ; R5 := "_root"
152 [-]: LOADK     R6 0         ; R6 := 0.000000
153 [-]: NEWTABLE  R7 1 0       ; R7 := {}
154 [-]: LOADK     R8 10        ; R8 := 10.000000
155 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
156 [-]: NEWTABLE  R8 1 0       ; R8 := {}
157 [-]: LOADK     R9 100       ; R9 := 100.000000
158 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
159 [-]: LOADK     R9 K38       ; R9 := 0.200000
160 [-]: LOADK     R10 K39      ; R10 := 0.300000
161 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
162 [-]: JMP       170          ; PC := 170
163 [-]: GETGLOBAL R3 K40       ; R3 := 0xae91e43b
164 [-]: SELF      R3 R3 K41    ; R4 := R3; R3 := R3[0x1fd6abd0]
165 [-]: GETGLOBAL R5 K25       ; R5 := movies
166 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
167 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
168 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
169 [-]: SETGLOBAL R3 K20       ; mChildMovie := R3
170 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
171 [-]: EQ        1 R3 K42     ; if R3 == "MainMenu" then PC := 176
172 [-]: JMP       176          ; PC := 176
173 [-]: GETGLOBAL R3 K19       ; R3 := queuedMovie
174 [-]: EQ        0 R3 K43     ; if R3 ~= "Default" then PC := 178
175 [-]: JMP       178          ; PC := 178
176 [-]: LOADNIL   R3 R3        ; R3 := nil
177 [-]: SETGLOBAL R3 K20       ; mChildMovie := R3
178 [-]: GETGLOBAL R3 K44       ; R3 := queuedMovieCallback
179 [-]: EQ        1 R3 K45     ; if R3 == nil then PC := 186
180 [-]: JMP       186          ; PC := 186
181 [-]: GETGLOBAL R3 K46       ; R3 := 0xd920f066
182 [-]: GETGLOBAL R4 K20       ; R4 := mChildMovie
183 [-]: CALL      R3 2 1       ; R3(R4)
184 [-]: LOADNIL   R3 R3        ; R3 := nil
185 [-]: SETGLOBAL R3 K44       ; queuedMovieCallback := R3
186 [-]: LOADNIL   R3 R3        ; R3 := nil
187 [-]: SETGLOBAL R3 K19       ; queuedMovie := R3
188 [-]: JMP       200          ; PC := 200
189 [-]: GETGLOBAL R3 K26       ; R3 := 0x3d106989
190 [-]: LOADK     R4 K47       ; R4 := "ERROR: Queued unrecognized screen ["
191 [-]: GETGLOBAL R5 K48       ; R5 := 0x64fb1586
192 [-]: GETGLOBAL R6 K19       ; R6 := queuedMovie
193 [-]: CALL      R5 2 2       ; R5 := R5(R6)
194 [-]: LOADK     R6 K49       ; R6 := "] Check your spelling."
195 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
196 [-]: CALL      R3 2 1       ; R3(R4)
197 [-]: GETGLOBAL R3 K50       ; R3 := 0x60cce7b4
198 [-]: LOADBOOL  R4 0 0       ; R4 := false
199 [-]: CALL      R3 2 1       ; R3(R4)
200 [-]: GETGLOBAL R3 K51       ; R3 := 0xe7f2b02f
201 [-]: SELF      R3 R3 K52    ; R4 := R3; R3 := R3[0x0b6ebd5b]
202 [-]: CALL      R3 2 2       ; R3 := R3(R4)
203 [-]: TEST      R3 1         ; if R3 then PC := 243
204 [-]: JMP       243          ; PC := 243
205 [-]: GETGLOBAL R4 K53       ; R4 := mQueuedGoToScreen
206 [-]: EQ        1 R4 K45     ; if R4 == nil then PC := 219
207 [-]: JMP       219          ; PC := 219
208 [-]: GETGLOBAL R4 K53       ; R4 := mQueuedGoToScreen
209 [-]: GETTABLE  R4 R4 K54    ; R4 := R4["screen"]
210 [-]: GETGLOBAL R5 K53       ; R5 := mQueuedGoToScreen
211 [-]: GETTABLE  R5 R5 K55    ; R5 := R5["callback"]
212 [-]: LOADNIL   R6 R6        ; R6 := nil
213 [-]: SETGLOBAL R6 K53       ; mQueuedGoToScreen := R6
214 [-]: GETGLOBAL R6 K23       ; R6 := _T
215 [-]: GETTABLE  R6 R6 K56    ; R6 := R6[0xbf0443a1]
216 [-]: MOVE      R7 R4        ; R7 := R4
217 [-]: MOVE      R8 R5        ; R8 := R5
218 [-]: CALL      R6 3 1       ; R6(R7,R8)
219 [-]: GETGLOBAL R6 K57       ; R6 := mQueuedGoToPreviousScreen
220 [-]: EQ        1 R6 K45     ; if R6 == nil then PC := 230
221 [-]: JMP       230          ; PC := 230
222 [-]: GETGLOBAL R6 K57       ; R6 := mQueuedGoToPreviousScreen
223 [-]: GETTABLE  R6 R6 K58    ; R6 := R6["skip"]
224 [-]: LOADNIL   R7 R7        ; R7 := nil
225 [-]: SETGLOBAL R7 K57       ; mQueuedGoToPreviousScreen := R7
226 [-]: GETGLOBAL R7 K23       ; R7 := _T
227 [-]: GETTABLE  R7 R7 K59    ; R7 := R7[0x4e4e6b0c]
228 [-]: MOVE      R8 R6        ; R8 := R6
229 [-]: CALL      R7 2 1       ; R7(R8)
230 [-]: GETGLOBAL R7 K60       ; R7 := mQueuedLogoff
231 [-]: TEST      R7 0         ; if not R7 then PC := 235
232 [-]: JMP       235          ; PC := 235
233 [-]: GETUPVAL  R7 U6        ; R7 := U6
234 [-]: CALL      R7 1 1       ; R7()
235 [-]: GETGLOBAL R7 K61       ; R7 := mUnblockWhenAsyncDone
236 [-]: TEST      R7 0         ; if not R7 then PC := 243
237 [-]: JMP       243          ; PC := 243
238 [-]: GETUPVAL  R7 U7        ; R7 := U7
239 [-]: LOADK     R8 0         ; R8 := 0.000000
240 [-]: CALL      R7 2 1       ; R7(R8)
241 [-]: LOADBOOL  R7 0 0       ; R7 := false
242 [-]: SETGLOBAL R7 K61       ; mUnblockWhenAsyncDone := R7
243 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 4325
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  38

  1 [-]: LOADK     R4 1         ; R4 := 1.000000
  2 [-]: LEN       R5 R2        ; R5 := # R2
  3 [-]: LOADK     R6 1         ; R6 := 1.000000
  4 [-]: FORPREP   R4 67        ; R4 -= R6; PC := 67
  5 [-]: LOADK     R8 0         ; R8 := 0.000000
  6 [-]: GETTABLE  R9 R2 R7     ; R9 := R2[R7]
  7 [-]: GETTABLE  R9 R9 K0     ; R9 := R9["mPlacedDecos"]
  8 [-]: GETGLOBAL R10 K1       ; R10 := 0xc8802016
  9 [-]: MOVE      R11 R9       ; R11 := R9
 10 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 11 [-]: JMP       59           ; PC := 59
 12 [-]: GETTABLE  R15 R14 K2   ; R15 := R14["decoType"]
 13 [-]: GETGLOBAL R16 K3       ; R16 := 0x7b998233
 14 [-]: MOVE      R17 R15      ; R17 := R15
 15 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 16 [-]: TEST      R16 1        ; if R16 then PC := 59
 17 [-]: JMP       59           ; PC := 59
 18 [-]: SELF      R16 R15 K4   ; R17 := R15; R16 := R15[0xed4e0128]
 19 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 20 [-]: GETGLOBAL R17 K5       ; R17 := 0x0032441c
 21 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["CapacityCost"]
 22 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 23 [-]: EQ        0 R17 K7     ; if R17 ~= nil then PC := 47
 24 [-]: JMP       47           ; PC := 47
 25 [-]: GETGLOBAL R17 K1       ; R17 := 0xc8802016
 26 [-]: MOVE      R18 R1       ; R18 := R1
 27 [-]: CALL      R17 2 4      ; R17,R18,R19 := R17(R18)
 28 [-]: JMP       45           ; PC := 45
 29 [-]: SELF      R22 R21 K8   ; R23 := R21; R22 := R21[0xf2deaf69]
 30 [-]: GETGLOBAL R24 K9       ; R24 := gShipDecoStoreItemType
 31 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
 32 [-]: TEST      R22 0        ; if not R22 then PC := 45
 33 [-]: JMP       45           ; PC := 45
 34 [-]: SELF      R22 R21 K10  ; R23 := R21; R22 := R21[0x656c098f]
 35 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 36 [-]: EQ        0 R22 R15    ; if R22 ~= R15 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETGLOBAL R22 K5       ; R22 := 0x0032441c
 39 [-]: GETTABLE  R22 R22 K6   ; R22 := R22["CapacityCost"]
 40 [-]: SELF      R23 R21 K11  ; R24 := R21; R23 := R21[0xfb7eb1d7]
 41 [-]: LOADBOOL  R25 0 0      ; R25 := false
 42 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
 43 [-]: SETTABLE  R22 R16 R23  ; R22[R16] := R23
 44 [-]: JMP       47           ; PC := 47
 45 [-]: TFORLOOP  R17 2        ; R20,R21 :=  R17(R18,R19); if R20 ~= nil then begin PC = 29; R19 := R20 end
 46 [-]: JMP       29           ; PC := 29
 47 [-]: GETGLOBAL R22 K5       ; R22 := 0x0032441c
 48 [-]: GETTABLE  R22 R22 K6   ; R22 := R22["CapacityCost"]
 49 [-]: GETTABLE  R22 R22 R16  ; R22 := R22[R16]
 50 [-]: EQ        1 R22 K7     ; if R22 == nil then PC := 56
 51 [-]: JMP       56           ; PC := 56
 52 [-]: GETGLOBAL R22 K5       ; R22 := 0x0032441c
 53 [-]: GETTABLE  R22 R22 K6   ; R22 := R22["CapacityCost"]
 54 [-]: GETTABLE  R22 R22 R16  ; R22 := R22[R16]
 55 [-]: ADD       R8 R8 R22    ; R8 := R8 + R22
 56 [-]: GETGLOBAL R22 K12      ; R22 := 0xce225efa
 57 [-]: LOADK     R23 0        ; R23 := 0.000000
 58 [-]: CALL      R22 2 1      ; R22(R23)
 59 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 12; R12 := R13 end
 60 [-]: JMP       12           ; PC := 12
 61 [-]: SELF      R22 R0 K13   ; R23 := R0; R22 := R0[0xc9ccdd50]
 62 [-]: GETTABLE  R24 R2 R7    ; R24 := R2[R7]
 63 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["mName"]
 64 [-]: MOVE      R25 R3       ; R25 := R3
 65 [-]: MOVE      R26 R8       ; R26 := R8
 66 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
 67 [-]: FORLOOP   R4 5         ; R4 += R6; if R4 <= R5 then begin PC := 5; R7 := R4 end
 68 [-]: TEST      R3 0         ; if not R3 then PC := 129
 69 [-]: JMP       129          ; PC := 129
 70 [-]: GETUPVAL  R22 U0       ; R22 := U0
 71 [-]: GETTABLE  R22 R22 K15  ; R22 := R22[0x23ddc82a]
 72 [-]: CALL      R22 1 2      ; R22 := R22()
 73 [-]: TEST      R22 0        ; if not R22 then PC := 129
 74 [-]: JMP       129          ; PC := 129
 75 [-]: GETGLOBAL R22 K16      ; R22 := _T
 76 [-]: GETTABLE  R22 R22 K17  ; R22 := R22["ApartmentPlaceableLevelObjectDecos"]
 77 [-]: EQ        1 R22 K7     ; if R22 == nil then PC := 129
 78 [-]: JMP       129          ; PC := 129
 79 [-]: GETGLOBAL R22 K18      ; R22 := 0xcfc01047
 80 [-]: GETGLOBAL R23 K16      ; R23 := _T
 81 [-]: GETTABLE  R23 R23 K17  ; R23 := R23["ApartmentPlaceableLevelObjectDecos"]
 82 [-]: CALL      R22 2 4      ; R22,R23,R24 := R22(R23)
 83 [-]: JMP       127          ; PC := 127
 84 [-]: SELF      R27 R26 K19  ; R28 := R26; R27 := R26[0x154947fa]
 85 [-]: CALL      R27 2 2      ; R27 := R27(R28)
 86 [-]: TEST      R27 0        ; if not R27 then PC := 127
 87 [-]: JMP       127          ; PC := 127
 88 [-]: GETUPVAL  R27 U0       ; R27 := U0
 89 [-]: GETTABLE  R27 R27 K20  ; R27 := R27[0xeee7057a]
 90 [-]: MOVE      R28 R26      ; R28 := R26
 91 [-]: CALL      R27 2 2      ; R27 := R27(R28)
 92 [-]: SELF      R28 R26 K21  ; R29 := R26; R28 := R26[0xaa6ffd67]
 93 [-]: MOVE      R30 R27      ; R30 := R27
 94 [-]: LOADBOOL  R31 0 0      ; R31 := false
 95 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
 96 [-]: SELF      R28 R26 K22  ; R29 := R26; R28 := R26[0xcde10c4a]
 97 [-]: CALL      R28 2 2      ; R28 := R28(R29)
 98 [-]: SELF      R28 R28 K4   ; R29 := R28; R28 := R28[0xed4e0128]
 99 [-]: CALL      R28 2 2      ; R28 := R28(R29)
100 [-]: GETGLOBAL R29 K5       ; R29 := 0x0032441c
101 [-]: GETTABLE  R29 R29 K6   ; R29 := R29["CapacityCost"]
102 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
103 [-]: EQ        0 R29 K7     ; if R29 ~= nil then PC := 127
104 [-]: JMP       127          ; PC := 127
105 [-]: GETGLOBAL R29 K1       ; R29 := 0xc8802016
106 [-]: MOVE      R30 R1       ; R30 := R1
107 [-]: CALL      R29 2 4      ; R29,R30,R31 := R29(R30)
108 [-]: JMP       125          ; PC := 125
109 [-]: SELF      R34 R33 K8   ; R35 := R33; R34 := R33[0xf2deaf69]
110 [-]: GETGLOBAL R36 K9       ; R36 := gShipDecoStoreItemType
111 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
112 [-]: TEST      R34 0        ; if not R34 then PC := 125
113 [-]: JMP       125          ; PC := 125
114 [-]: SELF      R34 R33 K10  ; R35 := R33; R34 := R33[0x656c098f]
115 [-]: CALL      R34 2 2      ; R34 := R34(R35)
116 [-]: EQ        0 R34 R26    ; if R34 ~= R26 then PC := 125
117 [-]: JMP       125          ; PC := 125
118 [-]: GETGLOBAL R34 K5       ; R34 := 0x0032441c
119 [-]: GETTABLE  R34 R34 K6   ; R34 := R34["CapacityCost"]
120 [-]: SELF      R35 R33 K11  ; R36 := R33; R35 := R33[0xfb7eb1d7]
121 [-]: LOADBOOL  R37 0 0      ; R37 := false
122 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
123 [-]: SETTABLE  R34 R28 R35  ; R34[R28] := R35
124 [-]: JMP       127          ; PC := 127
125 [-]: TFORLOOP  R29 2        ; R32,R33 :=  R29(R30,R31); if R32 ~= nil then begin PC = 109; R31 := R32 end
126 [-]: JMP       109          ; PC := 109
127 [-]: TFORLOOP  R22 2        ; R25,R26 :=  R22(R23,R24); if R25 ~= nil then begin PC = 84; R24 := R25 end
128 [-]: JMP       84           ; PC := 84
129 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 4373
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x18d05d30]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0xbe190284
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
 14 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0xa1c390fe]
 15 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 16 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R1 K5        ; R1 := 0x0032441c
 21 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["CapacityCost"]
 22 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETGLOBAL R1 K5        ; R1 := 0x0032441c
 25 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 26 [-]: SETTABLE  R1 K6 R2     ; R1["CapacityCost"] := R2
 27 [-]: GETGLOBAL R1 K8        ; R1 := 0x76ea806b
 28 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x3f3ae64c]
 29 [-]: LOADK     R3 0         ; R3 := 0.000000
 30 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 31 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 67
 35 [-]: JMP       67           ; PC := 67
 36 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0xa1c390fe]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2[0xe9cbffa8]
 39 [-]: GETGLOBAL R5 K11       ; R5 := gShipDecoItemType
 40 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 41 [-]: SELF      R4 R1 K12    ; R5 := R1; R4 := R1[0x80563238]
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: GETTABLE  R5 R5 K13    ; R5 := R5[0x23ddc82a]
 45 [-]: CALL      R5 1 2       ; R5 := R5()
 46 [-]: TEST      R5 0         ; if not R5 then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETUPVAL  R5 U1        ; R5 := U1
 49 [-]: MOVE      R6 R4        ; R6 := R4
 50 [-]: MOVE      R7 R3        ; R7 := R3
 51 [-]: SELF      R8 R4 K14    ; R9 := R4; R8 := R4[0x571ef1e3]
 52 [-]: LOADBOOL  R10 1 0      ; R10 := true
 53 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 54 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mRooms"]
 55 [-]: LOADBOOL  R9 1 0       ; R9 := true
 56 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 57 [-]: JMP       67           ; PC := 67
 58 [-]: GETUPVAL  R5 U1        ; R5 := U1
 59 [-]: MOVE      R6 R4        ; R6 := R4
 60 [-]: MOVE      R7 R3        ; R7 := R3
 61 [-]: SELF      R8 R4 K16    ; R9 := R4; R8 := R4[0xcd57f819]
 62 [-]: LOADBOOL  R10 1 0      ; R10 := true
 63 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 64 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mRooms"]
 65 [-]: LOADBOOL  R9 0 0       ; R9 := false
 66 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 67 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 4402
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x6dd7aa66]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xcb12dfe1
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4407
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4411
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x6dd7aa66]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x15d46370
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4415
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4419
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x6dd7aa66]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x69813b4f
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4423
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4427
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  60

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0xbe190284
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 23
 10 [-]: JMP       23           ; PC := 23
 11 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf2deaf69]
 13 [-]: GETGLOBAL R3 K4        ; R3 := gLotusAttractModeGameRulesType
 14 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 15 [-]: TEST      R1 1         ; if R1 then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
 18 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf2deaf69]
 19 [-]: GETGLOBAL R3 K5        ; R3 := gLotusPhotoBoothGameRulesType
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: TEST      R1 1         ; if R1 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R1 K6        ; R1 := 0x0469f296
 25 [-]: LOADK     R2 K7        ; R2 := "DynamicDojoDeco"
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 28 [-]: GETGLOBAL R3 K8        ; R3 := 0x25d99d89
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 1         ; if R2 then PC := 615
 31 [-]: JMP       615          ; PC := 615
 32 [-]: LOADK     R2 8         ; R2 := 8.000000
 33 [-]: LOADK     R3 0         ; R3 := 0.000000
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0xa421af95
 35 [-]: CALL      R4 1 2       ; R4 := R4()
 36 [-]: GETGLOBAL R5 K9        ; R5 := 0xa421af95
 37 [-]: CALL      R5 1 2       ; R5 := R5()
 38 [-]: GETGLOBAL R6 K10       ; R6 := 0x00046924
 39 [-]: CALL      R6 1 2       ; R6 := R6()
 40 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["DecoArea"]
 41 [-]: GETUPVAL  R8 U0        ; R8 := U0
 42 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["DECO_AREA_APARTMENT"]
 43 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 46
 44 [-]: JMP       46           ; PC := 46
 45 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 46
 46 [-]: LOADBOOL  R7 1 0       ; R7 := true
 47 [-]: GETGLOBAL R8 K8        ; R8 := 0x25d99d89
 48 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x911c6241]
 49 [-]: GETGLOBAL R10 K1       ; R10 := 0x89326c93
 50 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10[0x18d05d30]
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: MOVE      R11 R7       ; R11 := R7
 53 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 54 [-]: GETTABLE  R9 R0 K15    ; R9 := R0["LoaderProgress"]
 55 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["RoomCreationIndex"]
 56 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["LoaderProgress"]
 57 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["RoomLoaderIndex"]
 58 [-]: LOADK     R11 1        ; R11 := 1.000000
 59 [-]: FORPREP   R9 571       ; R9 -= R11; PC := 571
 60 [-]: GETTABLE  R13 R0 K15   ; R13 := R0["LoaderProgress"]
 61 [-]: SETTABLE  R13 K16 R12  ; R13["RoomCreationIndex"] := R12
 62 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 63 [-]: GETTABLE  R13 R13 K18  ; R13 := R13["mPlacedDecos"]
 64 [-]: GETTABLE  R14 R8 R12   ; R14 := R8[R12]
 65 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["mName"]
 66 [-]: LEN       R15 R13      ; R15 := # R13
 67 [-]: NEWTABLE  R16 0 0      ; R16 := {}
 68 [-]: GETTABLE  R17 R0 K15   ; R17 := R0["LoaderProgress"]
 69 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["DecoCreationIndex"]
 70 [-]: MOVE      R18 R15      ; R18 := R15
 71 [-]: LOADK     R19 1        ; R19 := 1.000000
 72 [-]: FORPREP   R17 516      ; R17 -= R19; PC := 516
 73 [-]: GETTABLE  R21 R13 R20  ; R21 := R13[R20]
 74 [-]: SELF      R22 R21 K21  ; R23 := R21; R22 := R21[0xf537cfc7]
 75 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 76 [-]: GETGLOBAL R23 K22      ; R23 := _T
 77 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["ShipDecos"]
 78 [-]: EQ        0 R23 K24    ; if R23 ~= nil then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETGLOBAL R23 K22      ; R23 := _T
 81 [-]: NEWTABLE  R24 0 0      ; R24 := {}
 82 [-]: SETTABLE  R23 K23 R24  ; R23["ShipDecos"] := R24
 83 [-]: LOADBOOL  R23 0 0      ; R23 := false
 84 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
 85 [-]: GETTABLE  R25 R21 K25  ; R25 := R21["decoType"]
 86 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 87 [-]: TEST      R24 0        ; if not R24 then PC := 93
 88 [-]: JMP       93           ; PC := 93
 89 [-]: GETTABLE  R24 R0 K15   ; R24 := R0["LoaderProgress"]
 90 [-]: ADD       R25 R20 K26  ; R25 := R20 + 1.000000
 91 [-]: SETTABLE  R24 K20 R25  ; R24["DecoCreationIndex"] := R25
 92 [-]: JMP       109          ; PC := 109
 93 [-]: GETTABLE  R24 R0 K15   ; R24 := R0["LoaderProgress"]
 94 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["DecosLoaded"]
 95 [-]: GETTABLE  R25 R21 K25  ; R25 := R21["decoType"]
 96 [-]: SELF      R25 R25 K28  ; R26 := R25; R25 := R25[0xed4e0128]
 97 [-]: CALL      R25 2 2      ; R25 := R25(R26)
 98 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
 99 [-]: EQ        0 R24 K24    ; if R24 ~= nil then PC := 105
100 [-]: JMP       105          ; PC := 105
101 [-]: GETTABLE  R24 R0 K15   ; R24 := R0["LoaderProgress"]
102 [-]: SETTABLE  R24 K20 R20  ; R24["DecoCreationIndex"] := R20
103 [-]: JMP       517          ; PC := 517
104 [-]: JMP       109          ; PC := 109
105 [-]: LOADBOOL  R23 1 0      ; R23 := true
106 [-]: GETTABLE  R24 R0 K15   ; R24 := R0["LoaderProgress"]
107 [-]: ADD       R25 R20 K26  ; R25 := R20 + 1.000000
108 [-]: SETTABLE  R24 K20 R25  ; R24["DecoCreationIndex"] := R25
109 [-]: TEST      R23 0        ; if not R23 then PC := 123
110 [-]: JMP       123          ; PC := 123
111 [-]: GETGLOBAL R24 K1       ; R24 := 0x89326c93
112 [-]: SELF      R24 R24 K14  ; R25 := R24; R24 := R24[0x18d05d30]
113 [-]: CALL      R24 2 2      ; R24 := R24(R25)
114 [-]: TEST      R24 1        ; if R24 then PC := 123
115 [-]: JMP       123          ; PC := 123
116 [-]: GETTABLE  R24 R21 K25  ; R24 := R21["decoType"]
117 [-]: SELF      R24 R24 K3   ; R25 := R24; R24 := R24[0xf2deaf69]
118 [-]: GETUPVAL  R26 U1       ; R26 := U1
119 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
120 [-]: TEST      R24 0        ; if not R24 then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: LOADBOOL  R23 0 0      ; R23 := false
123 [-]: TEST      R23 0        ; if not R23 then PC := 516
124 [-]: JMP       516          ; PC := 516
125 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
126 [-]: GETGLOBAL R25 K22      ; R25 := _T
127 [-]: GETTABLE  R25 R25 K23  ; R25 := R25["ShipDecos"]
128 [-]: GETTABLE  R25 R25 R22  ; R25 := R25[R22]
129 [-]: CALL      R24 2 2      ; R24 := R24(R25)
130 [-]: TEST      R24 0        ; if not R24 then PC := 516
131 [-]: JMP       516          ; PC := 516
132 [-]: LOADNIL   R24 R24      ; R24 := nil
133 [-]: SELF      R25 R21 K29  ; R26 := R21; R25 := R21[0x450ef75f]
134 [-]: CALL      R25 2 2      ; R25 := R25(R26)
135 [-]: GETUPVAL  R26 U0       ; R26 := U0
136 [-]: GETTABLE  R26 R26 K30  ; R26 := R26[0x5d6355b4]
137 [-]: MOVE      R27 R14      ; R27 := R14
138 [-]: MOVE      R28 R7       ; R28 := R7
139 [-]: MOVE      R29 R21      ; R29 := R21
140 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
141 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
142 [-]: MOVE      R28 R26      ; R28 := R26
143 [-]: CALL      R27 2 2      ; R27 := R27(R28)
144 [-]: TEST      R27 1        ; if R27 then PC := 196
145 [-]: JMP       196          ; PC := 196
146 [-]: EQ        1 R25 K31    ; if R25 == "" then PC := 186
147 [-]: JMP       186          ; PC := 186
148 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
149 [-]: GETGLOBAL R28 K22      ; R28 := _T
150 [-]: GETTABLE  R28 R28 K23  ; R28 := R28["ShipDecos"]
151 [-]: GETTABLE  R28 R28 R25  ; R28 := R28[R25]
152 [-]: CALL      R27 2 2      ; R27 := R27(R28)
153 [-]: TEST      R27 1        ; if R27 then PC := 168
154 [-]: JMP       168          ; PC := 168
155 [-]: GETGLOBAL R27 K22      ; R27 := _T
156 [-]: GETTABLE  R27 R27 K23  ; R27 := R27["ShipDecos"]
157 [-]: GETTABLE  R27 R27 R25  ; R27 := R27[R25]
158 [-]: SELF      R27 R27 K32  ; R28 := R27; R27 := R27[0x47901f07]
159 [-]: GETGLOBAL R29 K33      ; R29 := 0x88efc25e
160 [-]: GETTABLE  R30 R21 K25  ; R30 := R21["decoType"]
161 [-]: CALL      R29 2 2      ; R29 := R29(R30)
162 [-]: GETGLOBAL R30 K34      ; R30 := EMPTY_SYMBOL
163 [-]: GETTABLE  R31 R21 K35  ; R31 := R21["pos"]
164 [-]: GETTABLE  R32 R21 K36  ; R32 := R21["rot"]
165 [-]: CALL      R27 6 2      ; R27 := R27(R28,R29,R30,R31,R32)
166 [-]: MOVE      R24 R27      ; R24 := R27
167 [-]: JMP       199          ; PC := 199
168 [-]: SELF      R27 R26 K32  ; R28 := R26; R27 := R26[0x47901f07]
169 [-]: GETGLOBAL R29 K33      ; R29 := 0x88efc25e
170 [-]: GETTABLE  R30 R21 K25  ; R30 := R21["decoType"]
171 [-]: CALL      R29 2 2      ; R29 := R29(R30)
172 [-]: GETGLOBAL R30 K34      ; R30 := EMPTY_SYMBOL
173 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
174 [-]: MOVE      R24 R27      ; R24 := R27
175 [-]: SELF      R27 R24 K37  ; R28 := R24; R27 := R24[0x467c327c]
176 [-]: CALL      R27 2 1      ; R27(R28)
177 [-]: GETGLOBAL R27 K38      ; R27 := 0x33bdd652
178 [-]: GETTABLE  R27 R27 K39  ; R27 := R27[0x23d5322f]
179 [-]: MOVE      R28 R16      ; R28 := R16
180 [-]: NEWTABLE  R29 2 0      ; R29 := {}
181 [-]: MOVE      R30 R21      ; R30 := R21
182 [-]: MOVE      R31 R24      ; R31 := R24
183 [-]: SETLIST   R29 2 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 2
184 [-]: CALL      R27 3 1      ; R27(R28,R29)
185 [-]: JMP       199          ; PC := 199
186 [-]: SELF      R27 R26 K32  ; R28 := R26; R27 := R26[0x47901f07]
187 [-]: GETGLOBAL R29 K33      ; R29 := 0x88efc25e
188 [-]: GETTABLE  R30 R21 K25  ; R30 := R21["decoType"]
189 [-]: CALL      R29 2 2      ; R29 := R29(R30)
190 [-]: GETGLOBAL R30 K34      ; R30 := EMPTY_SYMBOL
191 [-]: GETTABLE  R31 R21 K35  ; R31 := R21["pos"]
192 [-]: GETTABLE  R32 R21 K36  ; R32 := R21["rot"]
193 [-]: CALL      R27 6 2      ; R27 := R27(R28,R29,R30,R31,R32)
194 [-]: MOVE      R24 R27      ; R24 := R27
195 [-]: JMP       199          ; PC := 199
196 [-]: GETGLOBAL R27 K40      ; R27 := 0x3d106989
197 [-]: LOADK     R28 K41      ; R28 := "Could not find attachment anchor for ship decos!"
198 [-]: CALL      R27 2 1      ; R27(R28)
199 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
200 [-]: MOVE      R28 R24      ; R28 := R24
201 [-]: CALL      R27 2 2      ; R27 := R27(R28)
202 [-]: TEST      R27 1        ; if R27 then PC := 516
203 [-]: JMP       516          ; PC := 516
204 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
205 [-]: GETGLOBAL R28 K2       ; R28 := 0xbe190284
206 [-]: CALL      R27 2 2      ; R27 := R27(R28)
207 [-]: TEST      R27 1        ; if R27 then PC := 236
208 [-]: JMP       236          ; PC := 236
209 [-]: GETGLOBAL R27 K2       ; R27 := 0xbe190284
210 [-]: SELF      R27 R27 K3   ; R28 := R27; R27 := R27[0xf2deaf69]
211 [-]: GETGLOBAL R29 K5       ; R29 := gLotusPhotoBoothGameRulesType
212 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
213 [-]: TEST      R27 0        ; if not R27 then PC := 236
214 [-]: JMP       236          ; PC := 236
215 [-]: SELF      R27 R24 K42  ; R28 := R24; R27 := R24[0x905bb2bd]
216 [-]: CALL      R27 2 2      ; R27 := R27(R28)
217 [-]: GETGLOBAL R28 K0       ; R28 := 0x7b998233
218 [-]: MOVE      R29 R27      ; R29 := R27
219 [-]: CALL      R28 2 2      ; R28 := R28(R29)
220 [-]: TEST      R28 1        ; if R28 then PC := 236
221 [-]: JMP       236          ; PC := 236
222 [-]: LOADK     R28 1        ; R28 := 1.000000
223 [-]: LEN       R29 R27      ; R29 := # R27
224 [-]: LOADK     R30 1        ; R30 := 1.000000
225 [-]: FORPREP   R28 235      ; R28 -= R30; PC := 235
226 [-]: GETTABLE  R32 R27 R31  ; R32 := R27[R31]
227 [-]: SELF      R32 R32 K3   ; R33 := R32; R32 := R32[0xf2deaf69]
228 [-]: GETGLOBAL R34 K43      ; R34 := gContextActionType
229 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
230 [-]: TEST      R32 0        ; if not R32 then PC := 235
231 [-]: JMP       235          ; PC := 235
232 [-]: GETTABLE  R32 R27 R31  ; R32 := R27[R31]
233 [-]: SELF      R32 R32 K44  ; R33 := R32; R32 := R32[0xf4e253b6]
234 [-]: CALL      R32 2 1      ; R32(R33)
235 [-]: FORLOOP   R28 226      ; R28 += R30; if R28 <= R29 then begin PC := 226; R31 := R28 end
236 [-]: EQ        1 R25 K31    ; if R25 == "" then PC := 256
237 [-]: JMP       256          ; PC := 256
238 [-]: GETGLOBAL R32 K22      ; R32 := _T
239 [-]: GETTABLE  R32 R32 K23  ; R32 := R32["ShipDecos"]
240 [-]: GETTABLE  R32 R32 R25  ; R32 := R32[R25]
241 [-]: GETGLOBAL R33 K0       ; R33 := 0x7b998233
242 [-]: MOVE      R34 R32      ; R34 := R32
243 [-]: CALL      R33 2 2      ; R33 := R33(R34)
244 [-]: TEST      R33 1        ; if R33 then PC := 251
245 [-]: JMP       251          ; PC := 251
246 [-]: SELF      R33 R24 K45  ; R34 := R24; R33 := R24[0x7a4ee345]
247 [-]: MOVE      R35 R32      ; R35 := R32
248 [-]: LOADBOOL  R36 0 0      ; R36 := false
249 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
250 [-]: JMP       258          ; PC := 258
251 [-]: SELF      R33 R24 K46  ; R34 := R24; R33 := R24[0xe28aa928]
252 [-]: GETTABLE  R35 R21 K35  ; R35 := R21["pos"]
253 [-]: GETTABLE  R36 R21 K36  ; R36 := R21["rot"]
254 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
255 [-]: JMP       258          ; PC := 258
256 [-]: SELF      R33 R24 K37  ; R34 := R24; R33 := R24[0x467c327c]
257 [-]: CALL      R33 2 1      ; R33(R34)
258 [-]: GETTABLE  R33 R21 K47  ; R33 := R21["socketInfo"]
259 [-]: SELF      R34 R24 K48  ; R35 := R24; R34 := R24[0x3787263c]
260 [-]: MOVE      R36 R33      ; R36 := R33
261 [-]: CALL      R34 3 1      ; R34(R35,R36)
262 [-]: SELF      R34 R24 K49  ; R35 := R24; R34 := R24[0x1403231b]
263 [-]: MOVE      R36 R22      ; R36 := R22
264 [-]: CALL      R34 3 1      ; R34(R35,R36)
265 [-]: SELF      R34 R24 K50  ; R35 := R24; R34 := R24[0xaa6ffd67]
266 [-]: GETTABLE  R36 R8 R12   ; R36 := R8[R12]
267 [-]: GETTABLE  R36 R36 K19  ; R36 := R36["mName"]
268 [-]: LOADBOOL  R37 0 0      ; R37 := false
269 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
270 [-]: SELF      R34 R24 K51  ; R35 := R24; R34 := R24[0x5acae14c]
271 [-]: LOADK     R36 4        ; R36 := 4.000000
272 [-]: LOADK     R37 1        ; R37 := 1.000000
273 [-]: LOADBOOL  R38 1 0      ; R38 := true
274 [-]: LOADNIL   R39 R39      ; R39 := nil
275 [-]: CALL      R34 6 1      ; R34(R35,R36,R37,R38,R39)
276 [-]: GETTABLE  R34 R21 K53  ; R34 := R21["scale"]
277 [-]: LT        0 K54 R34    ; if 0.000000 >= R34 then PC := 282
278 [-]: JMP       282          ; PC := 282
279 [-]: SELF      R34 R24 K55  ; R35 := R24; R34 := R24[0x2d9ba74f]
280 [-]: GETTABLE  R36 R21 K53  ; R36 := R21["scale"]
281 [-]: CALL      R34 3 1      ; R34(R35,R36)
282 [-]: GETUPVAL  R34 U2       ; R34 := U2
283 [-]: GETTABLE  R34 R34 K56  ; R34 := R34[0x5a03fa99]
284 [-]: MOVE      R35 R21      ; R35 := R21
285 [-]: MOVE      R36 R24      ; R36 := R24
286 [-]: CALL      R34 3 1      ; R34(R35,R36)
287 [-]: SELF      R34 R24 K3   ; R35 := R24; R34 := R24[0xf2deaf69]
288 [-]: GETGLOBAL R36 K57      ; R36 := 0x10828333
289 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
290 [-]: TEST      R34 0        ; if not R34 then PC := 401
291 [-]: JMP       401          ; PC := 401
292 [-]: SELF      R34 R24 K58  ; R35 := R24; R34 := R24[0xef977697]
293 [-]: GETTABLE  R36 R21 K59  ; R36 := R21["customizationInfo"]
294 [-]: LOADBOOL  R37 1 0      ; R37 := true
295 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
296 [-]: GETTABLE  R34 R21 K59  ; R34 := R21["customizationInfo"]
297 [-]: GETTABLE  R34 R34 K60  ; R34 := R34["mLoadOutPreset"]
298 [-]: GETTABLE  R35 R21 K59  ; R35 := R21["customizationInfo"]
299 [-]: GETTABLE  R35 R35 K61  ; R35 := R35["mVehiclePreset"]
300 [-]: GETTABLE  R36 R34 K62  ; R36 := R34["mItemId"]
301 [-]: GETTABLE  R36 R36 K63  ; R36 := R36["mId"]
302 [-]: GETTABLE  R37 R35 K62  ; R37 := R35["mItemId"]
303 [-]: GETTABLE  R37 R37 K63  ; R37 := R37["mId"]
304 [-]: GETTABLE  R38 R21 K59  ; R38 := R21["customizationInfo"]
305 [-]: GETTABLE  R38 R38 K64  ; R38 := R38["mLoadOutType"]
306 [-]: LOADBOOL  R39 0 0      ; R39 := false
307 [-]: GETGLOBAL R40 K52      ; R40 := 0x6c97a788
308 [-]: GETTABLE  R40 R40 K65  ; R40 := R40["InvalidItemID"]
309 [-]: EQ        1 R37 R40    ; if R37 == R40 then PC := 321
310 [-]: JMP       321          ; PC := 321
311 [-]: EQ        1 R37 K31    ; if R37 == "" then PC := 321
312 [-]: JMP       321          ; PC := 321
313 [-]: GETGLOBAL R40 K38      ; R40 := 0x33bdd652
314 [-]: GETTABLE  R40 R40 K39  ; R40 := R40[0x23d5322f]
315 [-]: GETUPVAL  R41 U3       ; R41 := U3
316 [-]: GETTABLE  R41 R41 K66  ; R41 := R41["Figures"]
317 [-]: MOVE      R42 R24      ; R42 := R24
318 [-]: CALL      R40 3 1      ; R40(R41,R42)
319 [-]: LOADBOOL  R39 1 0      ; R39 := true
320 [-]: JMP       322          ; PC := 322
321 [-]: LOADK     R37 K31      ; R37 := ""
322 [-]: GETGLOBAL R40 K52      ; R40 := 0x6c97a788
323 [-]: GETTABLE  R40 R40 K65  ; R40 := R40["InvalidItemID"]
324 [-]: EQ        1 R36 R40    ; if R36 == R40 then PC := 364
325 [-]: JMP       364          ; PC := 364
326 [-]: EQ        1 R36 K31    ; if R36 == "" then PC := 364
327 [-]: JMP       364          ; PC := 364
328 [-]: MOVE      R40 R36      ; R40 := R36
329 [-]: MOVE      R41 R37      ; R41 := R37
330 [-]: MOVE      R42 R38      ; R42 := R38
331 [-]: CONCAT    R40 R40 R42  ; R40 := R40 .. R41 .. R42
332 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
333 [-]: GETUPVAL  R42 U3       ; R42 := U3
334 [-]: GETTABLE  R42 R42 K67  ; R42 := R42["PresetIds"]
335 [-]: GETTABLE  R42 R42 R40  ; R42 := R42[R40]
336 [-]: CALL      R41 2 2      ; R41 := R41(R42)
337 [-]: TEST      R41 0        ; if not R41 then PC := 355
338 [-]: JMP       355          ; PC := 355
339 [-]: GETGLOBAL R41 K38      ; R41 := 0x33bdd652
340 [-]: GETTABLE  R41 R41 K39  ; R41 := R41[0x23d5322f]
341 [-]: GETUPVAL  R42 U3       ; R42 := U3
342 [-]: GETTABLE  R42 R42 K68  ; R42 := R42["PresetInfos"]
343 [-]: NEWTABLE  R43 0 3      ; R43 := {}
344 [-]: SELF      R44 R34 K70  ; R45 := R34; R44 := R34[0x8f89d633]
345 [-]: CALL      R44 2 2      ; R44 := R44(R45)
346 [-]: SETTABLE  R43 K69 R44  ; R43["Preset"] := R44
347 [-]: SELF      R44 R35 K70  ; R45 := R35; R44 := R35[0x8f89d633]
348 [-]: CALL      R44 2 2      ; R44 := R44(R45)
349 [-]: SETTABLE  R43 K71 R44  ; R43["VehiclePreset"] := R44
350 [-]: SETTABLE  R43 K72 R38  ; R43["LoadOutType"] := R38
351 [-]: CALL      R41 3 1      ; R41(R42,R43)
352 [-]: GETUPVAL  R41 U3       ; R41 := U3
353 [-]: GETTABLE  R41 R41 K67  ; R41 := R41["PresetIds"]
354 [-]: SETTABLE  R41 R40 K26  ; R41[R40] := 1.000000
355 [-]: TEST      R39 1        ; if R39 then PC := 401
356 [-]: JMP       401          ; PC := 401
357 [-]: GETGLOBAL R41 K38      ; R41 := 0x33bdd652
358 [-]: GETTABLE  R41 R41 K39  ; R41 := R41[0x23d5322f]
359 [-]: GETUPVAL  R42 U3       ; R42 := U3
360 [-]: GETTABLE  R42 R42 K66  ; R42 := R42["Figures"]
361 [-]: MOVE      R43 R24      ; R43 := R24
362 [-]: CALL      R41 3 1      ; R41(R42,R43)
363 [-]: JMP       401          ; PC := 401
364 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
365 [-]: GETTABLE  R42 R21 K59  ; R42 := R21["customizationInfo"]
366 [-]: GETTABLE  R42 R42 K73  ; R42 := R42["mAvatarType"]
367 [-]: CALL      R41 2 2      ; R41 := R41(R42)
368 [-]: TEST      R41 1        ; if R41 then PC := 401
369 [-]: JMP       401          ; PC := 401
370 [-]: LOADBOOL  R41 0 0      ; R41 := false
371 [-]: LOADK     R42 1        ; R42 := 1.000000
372 [-]: GETUPVAL  R43 U3       ; R43 := U3
373 [-]: GETTABLE  R43 R43 K74  ; R43 := R43["EnemyTypes"]
374 [-]: LEN       R43 R43      ; R43 := # R43
375 [-]: LOADK     R44 1        ; R44 := 1.000000
376 [-]: FORPREP   R42 385      ; R42 -= R44; PC := 385
377 [-]: GETUPVAL  R46 U3       ; R46 := U3
378 [-]: GETTABLE  R46 R46 K74  ; R46 := R46["EnemyTypes"]
379 [-]: GETTABLE  R46 R46 R45  ; R46 := R46[R45]
380 [-]: GETTABLE  R47 R21 K59  ; R47 := R21["customizationInfo"]
381 [-]: GETTABLE  R47 R47 K73  ; R47 := R47["mAvatarType"]
382 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 385
383 [-]: JMP       385          ; PC := 385
384 [-]: LOADBOOL  R41 1 0      ; R41 := true
385 [-]: FORLOOP   R42 377      ; R42 += R44; if R42 <= R43 then begin PC := 377; R45 := R42 end
386 [-]: TEST      R41 1        ; if R41 then PC := 395
387 [-]: JMP       395          ; PC := 395
388 [-]: GETGLOBAL R46 K38      ; R46 := 0x33bdd652
389 [-]: GETTABLE  R46 R46 K39  ; R46 := R46[0x23d5322f]
390 [-]: GETUPVAL  R47 U3       ; R47 := U3
391 [-]: GETTABLE  R47 R47 K74  ; R47 := R47["EnemyTypes"]
392 [-]: GETTABLE  R48 R21 K59  ; R48 := R21["customizationInfo"]
393 [-]: GETTABLE  R48 R48 K73  ; R48 := R48["mAvatarType"]
394 [-]: CALL      R46 3 1      ; R46(R47,R48)
395 [-]: GETGLOBAL R46 K38      ; R46 := 0x33bdd652
396 [-]: GETTABLE  R46 R46 K39  ; R46 := R46[0x23d5322f]
397 [-]: GETUPVAL  R47 U3       ; R47 := U3
398 [-]: GETTABLE  R47 R47 K75  ; R47 := R47["EnemyFigures"]
399 [-]: MOVE      R48 R24      ; R48 := R24
400 [-]: CALL      R46 3 1      ; R46(R47,R48)
401 [-]: GETGLOBAL R46 K22      ; R46 := _T
402 [-]: GETTABLE  R46 R46 K23  ; R46 := R46["ShipDecos"]
403 [-]: SETTABLE  R46 R22 R24  ; R46[R22] := R24
404 [-]: SELF      R46 R24 K76  ; R47 := R24; R46 := R24[0x22da1852]
405 [-]: CALL      R46 2 2      ; R46 := R46(R47)
406 [-]: EQ        0 R46 R1     ; if R46 ~= R1 then PC := 425
407 [-]: JMP       425          ; PC := 425
408 [-]: GETGLOBAL R46 K22      ; R46 := _T
409 [-]: GETTABLE  R46 R46 K77  ; R46 := R46["DynamicDecos"]
410 [-]: EQ        0 R46 K24    ; if R46 ~= nil then PC := 415
411 [-]: JMP       415          ; PC := 415
412 [-]: GETGLOBAL R46 K22      ; R46 := _T
413 [-]: NEWTABLE  R47 0 0      ; R47 := {}
414 [-]: SETTABLE  R46 K77 R47  ; R46["DynamicDecos"] := R47
415 [-]: GETGLOBAL R46 K22      ; R46 := _T
416 [-]: GETTABLE  R46 R46 K77  ; R46 := R46["DynamicDecos"]
417 [-]: NEWTABLE  R47 0 2      ; R47 := {}
418 [-]: SELF      R48 R24 K78  ; R49 := R24; R48 := R24[0xf6ebd926]
419 [-]: CALL      R48 2 2      ; R48 := R48(R49)
420 [-]: SETTABLE  R47 K35 R48  ; R47["pos"] := R48
421 [-]: SELF      R48 R24 K79  ; R49 := R24; R48 := R24[0x5280b883]
422 [-]: CALL      R48 2 2      ; R48 := R48(R49)
423 [-]: SETTABLE  R47 K36 R48  ; R47["rot"] := R48
424 [-]: SETTABLE  R46 R22 R47  ; R46[R22] := R47
425 [-]: GETGLOBAL R46 K22      ; R46 := _T
426 [-]: GETTABLE  R46 R46 K80  ; R46 := R46["PlacingCustomizableDeco"]
427 [-]: TEST      R46 0        ; if not R46 then PC := 479
428 [-]: JMP       479          ; PC := 479
429 [-]: LEN       R46 R13      ; R46 := # R13
430 [-]: EQ        0 R20 R46    ; if R20 ~= R46 then PC := 479
431 [-]: JMP       479          ; PC := 479
432 [-]: SELF      R46 R24 K3   ; R47 := R24; R46 := R24[0xf2deaf69]
433 [-]: GETGLOBAL R48 K81      ; R48 := 0x7ed0a956
434 [-]: LOADK     R49 K82      ; R49 := "/Lotus/Types/Game/DojoPlaceableDecorations/ShipPlaceablePictureFrame"
435 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
436 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
437 [-]: TEST      R46 0        ; if not R46 then PC := 444
438 [-]: JMP       444          ; PC := 444
439 [-]: GETGLOBAL R46 K22      ; R46 := _T
440 [-]: SETTABLE  R46 K83 R24  ; R46["FragmentViewerDeco"] := R24
441 [-]: GETUPVAL  R46 U4       ; R46 := U4
442 [-]: CALL      R46 1 1      ; R46()
443 [-]: JMP       477          ; PC := 477
444 [-]: SELF      R46 R24 K3   ; R47 := R24; R46 := R24[0xf2deaf69]
445 [-]: GETGLOBAL R48 K81      ; R48 := 0x7ed0a956
446 [-]: LOADK     R49 K84      ; R49 := "/Lotus/Objects/Tenno/ActionFigures/Figures/BaseAF"
447 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
448 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
449 [-]: TEST      R46 0        ; if not R46 then PC := 456
450 [-]: JMP       456          ; PC := 456
451 [-]: GETGLOBAL R46 K22      ; R46 := _T
452 [-]: SETTABLE  R46 K85 R24  ; R46["ActionFigureDeco"] := R24
453 [-]: GETUPVAL  R46 U5       ; R46 := U5
454 [-]: CALL      R46 1 1      ; R46()
455 [-]: JMP       477          ; PC := 477
456 [-]: SELF      R46 R24 K3   ; R47 := R24; R46 := R24[0xf2deaf69]
457 [-]: GETGLOBAL R48 K86      ; R48 := 0x7713b3ef
458 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
459 [-]: TEST      R46 0        ; if not R46 then PC := 477
460 [-]: JMP       477          ; PC := 477
461 [-]: GETGLOBAL R46 K22      ; R46 := _T
462 [-]: SETTABLE  R46 K87 R24  ; R46["LightDeco"] := R24
463 [-]: SELF      R46 R24 K3   ; R47 := R24; R46 := R24[0xf2deaf69]
464 [-]: GETGLOBAL R48 K88      ; R48 := 0x5d855734
465 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
466 [-]: TEST      R46 0        ; if not R46 then PC := 473
467 [-]: JMP       473          ; PC := 473
468 [-]: GETGLOBAL R46 K22      ; R46 := _T
469 [-]: SELF      R47 R24 K90  ; R48 := R24; R47 := R24[0x801404d2]
470 [-]: CALL      R47 2 2      ; R47 := R47(R48)
471 [-]: SETTABLE  R46 K89 R47  ; R46["TextLightMovie"] := R47
472 [-]: JMP       475          ; PC := 475
473 [-]: GETGLOBAL R46 K22      ; R46 := _T
474 [-]: SETTABLE  R46 K89 K24  ; R46["TextLightMovie"] := nil
475 [-]: GETUPVAL  R46 U6       ; R46 := U6
476 [-]: CALL      R46 1 1      ; R46()
477 [-]: GETGLOBAL R46 K22      ; R46 := _T
478 [-]: SETTABLE  R46 K80 K91  ; R46["PlacingCustomizableDeco"] := false
479 [-]: GETUPVAL  R46 U7       ; R46 := U7
480 [-]: EQ        0 R14 R46    ; if R14 ~= R46 then PC := 512
481 [-]: JMP       512          ; PC := 512
482 [-]: SELF      R46 R24 K92  ; R47 := R24; R46 := R24[0x64930a5f]
483 [-]: MOVE      R48 R4       ; R48 := R4
484 [-]: MOVE      R49 R5       ; R49 := R5
485 [-]: MOVE      R50 R6       ; R50 := R6
486 [-]: CALL      R46 5 1      ; R46(R47,R48,R49,R50)
487 [-]: GETGLOBAL R46 K1       ; R46 := 0x89326c93
488 [-]: SELF      R46 R46 K93  ; R47 := R46; R46 := R46[0x78094005]
489 [-]: MOVE      R48 R5       ; R48 := R5
490 [-]: MOVE      R49 R4       ; R49 := R4
491 [-]: MOVE      R50 R6       ; R50 := R6
492 [-]: GETUPVAL  R51 U8       ; R51 := U8
493 [-]: LOADBOOL  R52 0 0      ; R52 := false
494 [-]: LOADBOOL  R53 1 0      ; R53 := true
495 [-]: LOADBOOL  R54 0 0      ; R54 := false
496 [-]: CALL      R46 9 2      ; R46 := R46(R47,R48,R49,R50,R51,R52,R53,R54)
497 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
498 [-]: MOVE      R48 R46      ; R48 := R46
499 [-]: CALL      R47 2 2      ; R47 := R47(R48)
500 [-]: TEST      R47 1        ; if R47 then PC := 512
501 [-]: JMP       512          ; PC := 512
502 [-]: GETGLOBAL R47 K22      ; R47 := _T
503 [-]: GETTABLE  R47 R47 K94  ; R47 := R47["ShipDecosInVignette"]
504 [-]: EQ        0 R47 K24    ; if R47 ~= nil then PC := 509
505 [-]: JMP       509          ; PC := 509
506 [-]: GETGLOBAL R47 K22      ; R47 := _T
507 [-]: NEWTABLE  R48 0 0      ; R48 := {}
508 [-]: SETTABLE  R47 K94 R48  ; R47["ShipDecosInVignette"] := R48
509 [-]: GETGLOBAL R47 K22      ; R47 := _T
510 [-]: GETTABLE  R47 R47 K94  ; R47 := R47["ShipDecosInVignette"]
511 [-]: SETTABLE  R47 R22 R24  ; R47[R22] := R24
512 [-]: ADD       R3 R3 K26    ; R3 := R3 + 1.000000
513 [-]: LE        0 R2 R3      ; if R2 > R3 then PC := 516
514 [-]: JMP       516          ; PC := 516
515 [-]: JMP       517          ; PC := 517
516 [-]: FORLOOP   R17 73       ; R17 += R19; if R17 <= R18 then begin PC := 73; R20 := R17 end
517 [-]: LOADK     R47 1        ; R47 := 1.000000
518 [-]: LEN       R48 R16      ; R48 := # R16
519 [-]: LOADK     R49 1        ; R49 := 1.000000
520 [-]: FORPREP   R47 550      ; R47 -= R49; PC := 550
521 [-]: GETTABLE  R51 R16 R50  ; R51 := R16[R50]
522 [-]: GETTABLE  R52 R51 K26  ; R52 := R51[1.000000]
523 [-]: SELF      R52 R52 K29  ; R53 := R52; R52 := R52[0x450ef75f]
524 [-]: CALL      R52 2 2      ; R52 := R52(R53)
525 [-]: GETGLOBAL R53 K0       ; R53 := 0x7b998233
526 [-]: GETTABLE  R54 R51 K95  ; R54 := R51[2.000000]
527 [-]: CALL      R53 2 2      ; R53 := R53(R54)
528 [-]: TEST      R53 1        ; if R53 then PC := 550
529 [-]: JMP       550          ; PC := 550
530 [-]: GETGLOBAL R53 K22      ; R53 := _T
531 [-]: GETTABLE  R53 R53 K23  ; R53 := R53["ShipDecos"]
532 [-]: GETTABLE  R53 R53 R52  ; R53 := R53[R52]
533 [-]: GETGLOBAL R54 K0       ; R54 := 0x7b998233
534 [-]: MOVE      R55 R53      ; R55 := R53
535 [-]: CALL      R54 2 2      ; R54 := R54(R55)
536 [-]: TEST      R54 1        ; if R54 then PC := 550
537 [-]: JMP       550          ; PC := 550
538 [-]: GETTABLE  R54 R51 K95  ; R54 := R51[2.000000]
539 [-]: SELF      R54 R54 K46  ; R55 := R54; R54 := R54[0xe28aa928]
540 [-]: GETTABLE  R56 R51 K26  ; R56 := R51[1.000000]
541 [-]: GETTABLE  R56 R56 K35  ; R56 := R56["pos"]
542 [-]: GETTABLE  R57 R51 K26  ; R57 := R51[1.000000]
543 [-]: GETTABLE  R57 R57 K36  ; R57 := R57["rot"]
544 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
545 [-]: GETTABLE  R54 R51 K95  ; R54 := R51[2.000000]
546 [-]: SELF      R54 R54 K45  ; R55 := R54; R54 := R54[0x7a4ee345]
547 [-]: MOVE      R56 R53      ; R56 := R53
548 [-]: LOADBOOL  R57 1 0      ; R57 := true
549 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
550 [-]: FORLOOP   R47 521      ; R47 += R49; if R47 <= R48 then begin PC := 521; R50 := R47 end
551 [-]: LOADNIL   R16 R16      ; R16 := nil
552 [-]: GETTABLE  R54 R0 K15   ; R54 := R0["LoaderProgress"]
553 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["DecoCreationIndex"]
554 [-]: LT        0 R15 R54    ; if R15 >= R54 then PC := 568
555 [-]: JMP       568          ; PC := 568
556 [-]: GETTABLE  R54 R0 K15   ; R54 := R0["LoaderProgress"]
557 [-]: SETTABLE  R54 K20 K26  ; R54["DecoCreationIndex"] := 1.000000
558 [-]: GETTABLE  R54 R0 K15   ; R54 := R0["LoaderProgress"]
559 [-]: GETTABLE  R54 R54 K16  ; R54 := R54["RoomCreationIndex"]
560 [-]: LEN       R55 R8       ; R55 := # R8
561 [-]: LT        0 R54 R55    ; if R54 >= R55 then PC := 568
562 [-]: JMP       568          ; PC := 568
563 [-]: GETTABLE  R54 R0 K15   ; R54 := R0["LoaderProgress"]
564 [-]: GETTABLE  R55 R0 K15   ; R55 := R0["LoaderProgress"]
565 [-]: GETTABLE  R55 R55 K16  ; R55 := R55["RoomCreationIndex"]
566 [-]: ADD       R55 R55 K26  ; R55 := R55 + 1.000000
567 [-]: SETTABLE  R54 K16 R55  ; R54["RoomCreationIndex"] := R55
568 [-]: LE        0 R2 R3      ; if R2 > R3 then PC := 571
569 [-]: JMP       571          ; PC := 571
570 [-]: JMP       572          ; PC := 572
571 [-]: FORLOOP   R9 60        ; R9 += R11; if R9 <= R10 then begin PC := 60; R12 := R9 end
572 [-]: EQ        0 R3 K54     ; if R3 ~= 0.000000 then PC := 615
573 [-]: JMP       615          ; PC := 615
574 [-]: GETTABLE  R54 R0 K15   ; R54 := R0["LoaderProgress"]
575 [-]: GETTABLE  R54 R54 K96  ; R54 := R54["LastLoad"]
576 [-]: TEST      R54 0        ; if not R54 then PC := 611
577 [-]: JMP       611          ; PC := 611
578 [-]: GETUPVAL  R54 U9       ; R54 := U9
579 [-]: GETTABLE  R54 R54 K97  ; R54 := R54[0x8664c443]
580 [-]: LOADNIL   R55 R55      ; R55 := nil
581 [-]: CALL      R54 2 1      ; R54(R55)
582 [-]: GETGLOBAL R54 K0       ; R54 := 0x7b998233
583 [-]: GETGLOBAL R55 K22      ; R55 := _T
584 [-]: GETTABLE  R55 R55 K98  ; R55 := R55["ActionFigureLoadOutLoader"]
585 [-]: CALL      R54 2 2      ; R54 := R54(R55)
586 [-]: TEST      R54 1        ; if R54 then PC := 600
587 [-]: JMP       600          ; PC := 600
588 [-]: GETGLOBAL R54 K22      ; R54 := _T
589 [-]: GETTABLE  R54 R54 K98  ; R54 := R54["ActionFigureLoadOutLoader"]
590 [-]: SELF      R54 R54 K99  ; R55 := R54; R54 := R54[0x382439cd]
591 [-]: GETUPVAL  R56 U3       ; R56 := U3
592 [-]: GETTABLE  R56 R56 K66  ; R56 := R56["Figures"]
593 [-]: GETUPVAL  R57 U3       ; R57 := U3
594 [-]: GETTABLE  R57 R57 K68  ; R57 := R57["PresetInfos"]
595 [-]: GETUPVAL  R58 U3       ; R58 := U3
596 [-]: GETTABLE  R58 R58 K75  ; R58 := R58["EnemyFigures"]
597 [-]: GETUPVAL  R59 U3       ; R59 := U3
598 [-]: GETTABLE  R59 R59 K74  ; R59 := R59["EnemyTypes"]
599 [-]: CALL      R54 6 1      ; R54(R55,R56,R57,R58,R59)
600 [-]: SETTABLE  R0 K100 K91  ; R0["IsLoading"] := false
601 [-]: GETUPVAL  R54 U3       ; R54 := U3
602 [-]: NEWTABLE  R55 0 0      ; R55 := {}
603 [-]: SETTABLE  R54 K66 R55  ; R54["Figures"] := R55
604 [-]: GETUPVAL  R54 U3       ; R54 := U3
605 [-]: NEWTABLE  R55 0 0      ; R55 := {}
606 [-]: SETTABLE  R54 K68 R55  ; R54["PresetInfos"] := R55
607 [-]: GETUPVAL  R54 U3       ; R54 := U3
608 [-]: NEWTABLE  R55 0 0      ; R55 := {}
609 [-]: SETTABLE  R54 K67 R55  ; R54["PresetIds"] := R55
610 [-]: JMP       615          ; PC := 615
611 [-]: GETUPVAL  R54 U10      ; R54 := U10
612 [-]: LOADNIL   R55 R55      ; R55 := nil
613 [-]: MOVE      R56 R0       ; R56 := R0
614 [-]: CALL      R54 3 1      ; R54(R55,R56)
615 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4667
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0x89326c93
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 0         ; if not R0 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
 18 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xcd57f819]
 19 [-]: GETGLOBAL R2 K3        ; R2 := 0x89326c93
 20 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x18d05d30]
 21 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 22 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 23 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xa1c390fe]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mVignetteFish"]
 27 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 28 [-]: MOVE      R4 R2        ; R4 := R2
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 0         ; if not R3 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: RETURN    R0 1         ; return 
 33 [-]: GETUPVAL  R3 U0        ; R3 := U0
 34 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0x06d055f9]
 35 [-]: GETGLOBAL R4 K9        ; R4 := _T
 36 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["QueueFishTankPopulation"]
 37 [-]: EQ        1 R4 K11     ; if R4 == nil then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 40
 40 [-]: LOADBOOL  R4 1 0       ; R4 := true
 41 [-]: LOADK     R5 0         ; R5 := 0.000000
 42 [-]: LOADK     R6 1         ; R6 := 1.000000
 43 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 44 [-]: MOVE      R4 R3        ; R4 := R3
 45 [-]: LOADK     R5 1         ; R5 := 1.000000
 46 [-]: LOADK     R6 1         ; R6 := 1.000000
 47 [-]: FORPREP   R4 138       ; R4 -= R6; PC := 138
 48 [-]: EQ        0 R7 K12     ; if R7 ~= 1.000000 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETUPVAL  R8 U1        ; R8 := U1
 51 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["IsFishTank"]
 52 [-]: TEST      R8 1         ; if R8 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: JMP       139          ; PC := 139
 55 [-]: GETGLOBAL R8 K3        ; R8 := 0x89326c93
 56 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8[0x46a0ebf5]
 57 [-]: GETGLOBAL R10 K15      ; R10 := 0x0469f296
 58 [-]: LOADK     R11 K16      ; R11 := "FishPaths"
 59 [-]: GETGLOBAL R12 K17      ; R12 := 0x64fb1586
 60 [-]: MOVE      R13 R7       ; R13 := R7
 61 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 62 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 63 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 64 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 65 [-]: EQ        0 R7 K12     ; if R7 ~= 1.000000 then PC := 75
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 68 [-]: MOVE      R10 R8       ; R10 := R8
 69 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 70 [-]: TEST      R9 0         ; if not R9 then PC := 75
 71 [-]: JMP       75           ; PC := 75
 72 [-]: GETGLOBAL R9 K9        ; R9 := _T
 73 [-]: SETTABLE  R9 K10 K18   ; R9["QueueFishTankPopulation"] := true
 74 [-]: RETURN    R0 1         ; return 
 75 [-]: GETGLOBAL R9 K9        ; R9 := _T
 76 [-]: SETTABLE  R9 K10 K19   ; R9["QueueFishTankPopulation"] := false
 77 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 78 [-]: MOVE      R10 R1       ; R10 := R1
 79 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 80 [-]: TEST      R9 1         ; if R9 then PC := 138
 81 [-]: JMP       138          ; PC := 138
 82 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 83 [-]: MOVE      R10 R8       ; R10 := R8
 84 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 85 [-]: TEST      R9 1         ; if R9 then PC := 138
 86 [-]: JMP       138          ; PC := 138
 87 [-]: LOADK     R9 1         ; R9 := 1.000000
 88 [-]: LOADK     R10 10       ; R10 := 10.000000
 89 [-]: LOADK     R11 1        ; R11 := 1.000000
 90 [-]: FORPREP   R9 137       ; R9 -= R11; PC := 137
 91 [-]: MUL       R13 R7 K20   ; R13 := R7 * 10.000000
 92 [-]: ADD       R13 R12 R13  ; R13 := R12 + R13
 93 [-]: GETTABLE  R14 R2 R13   ; R14 := R2[R13]
 94 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
 95 [-]: MOVE      R16 R14      ; R16 := R14
 96 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 97 [-]: TEST      R15 1        ; if R15 then PC := 137
 98 [-]: JMP       137          ; PC := 137
 99 [-]: SELF      R15 R1 K21   ; R16 := R1; R15 := R1[0x105074fb]
100 [-]: MOVE      R17 R14      ; R17 := R14
101 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
102 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
103 [-]: MOVE      R17 R15      ; R17 := R15
104 [-]: CALL      R16 2 2      ; R16 := R16(R17)
105 [-]: TEST      R16 1        ; if R16 then PC := 137
106 [-]: JMP       137          ; PC := 137
107 [-]: GETUPVAL  R16 U2       ; R16 := U2
108 [-]: GETTABLE  R16 R16 K22  ; R16 := R16[0x7791a519]
109 [-]: MOVE      R17 R15      ; R17 := R15
110 [-]: GETGLOBAL R18 K23      ; R18 := 0xce64b481
111 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
112 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
113 [-]: MOVE      R18 R16      ; R18 := R16
114 [-]: CALL      R17 2 2      ; R17 := R17(R18)
115 [-]: TEST      R17 1        ; if R17 then PC := 137
116 [-]: JMP       137          ; PC := 137
117 [-]: GETGLOBAL R17 K15      ; R17 := 0x0469f296
118 [-]: LOADK     R18 K24      ; R18 := "GAME_C1_FISH"
119 [-]: GETGLOBAL R19 K17      ; R19 := 0x64fb1586
120 [-]: MOVE      R20 R12      ; R20 := R12
121 [-]: CALL      R19 2 2      ; R19 := R19(R20)
122 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
123 [-]: CALL      R17 2 2      ; R17 := R17(R18)
124 [-]: SELF      R18 R8 K25   ; R19 := R8; R18 := R8[0x47901f07]
125 [-]: GETGLOBAL R20 K26      ; R20 := 0xb009bbc6
126 [-]: MOVE      R21 R16      ; R21 := R16
127 [-]: CALL      R20 2 2      ; R20 := R20(R21)
128 [-]: MOVE      R21 R17      ; R21 := R17
129 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
130 [-]: SELF      R19 R18 K27  ; R20 := R18; R19 := R18[0xe92524c3]
131 [-]: CALL      R19 2 1      ; R19(R20)
132 [-]: GETUPVAL  R19 U2       ; R19 := U2
133 [-]: GETTABLE  R19 R19 K28  ; R19 := R19[0x57d66842]
134 [-]: MOVE      R20 R18      ; R20 := R18
135 [-]: MOVE      R21 R15      ; R21 := R15
136 [-]: CALL      R19 3 1      ; R19(R20,R21)
137 [-]: FORLOOP   R9 91        ; R9 += R11; if R9 <= R10 then begin PC := 91; R12 := R9 end
138 [-]: FORLOOP   R4 48        ; R4 += R6; if R4 <= R5 then begin PC := 48; R7 := R4 end
139 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4717
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 1       ; R2()
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: SETTABLE  R2 K0 K1     ; R2["Loader"] := nil
  5 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4723
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4728
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 57
  5 [-]: JMP       57           ; PC := 57
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 57
 10 [-]: JMP       57           ; PC := 57
 11 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
 12 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xcd57f819]
 13 [-]: GETGLOBAL R2 K2        ; R2 := 0x89326c93
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x18d05d30]
 15 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 16 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 17 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["mVignette"]
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0x89326c93
 19 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x18d05d30]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 0         ; if not R2 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETGLOBAL R2 K6        ; R2 := 0xb009bbc6
 29 [-]: MOVE      R3 R1        ; R3 := R1
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xafcbe068]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: GETUPVAL  R3 U0        ; R3 := U0
 34 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[0xf63bfb54]
 35 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 36 [-]: MOVE      R5 R2        ; R5 := R2
 37 [-]: CALL      R3 3 1       ; R3(R4,R5)
 38 [-]: JMP       41           ; PC := 41
 39 [-]: GETUPVAL  R3 U1        ; R3 := U1
 40 [-]: CALL      R3 1 1       ; R3()
 41 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mWallpaper"]
 42 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 43 [-]: MOVE      R5 R3        ; R5 := R3
 44 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 45 [-]: TEST      R4 1         ; if R4 then PC := 57
 46 [-]: JMP       57           ; PC := 57
 47 [-]: GETGLOBAL R4 K6        ; R4 := 0xb009bbc6
 48 [-]: MOVE      R5 R3        ; R5 := R3
 49 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 50 [-]: GETUPVAL  R5 U0        ; R5 := U0
 51 [-]: GETTABLE  R5 R5 K11    ; R5 := R5[0x81284a57]
 52 [-]: GETGLOBAL R6 K6        ; R6 := 0xb009bbc6
 53 [-]: SELF      R7 R4 K12    ; R8 := R4; R7 := R4[0xf7abfecf]
 54 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 55 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
 56 [-]: CALL      R5 0 1       ; R5(R6,...)
 57 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4749
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SoundInst"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 17
  6 [-]: JMP       17           ; PC := 17
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x9da884af]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SoundInst"]
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x89326c93
 12 [-]: LOADBOOL  R4 1 0       ; R4 := true
 13 [-]: GETGLOBAL R5 K4        ; R5 := _T
 14 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LypSyncDeco"]
 15 [-]: LOADBOOL  R6 0 0       ; R6 := false
 16 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 17 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4755
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["FortressLocation"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 37
  4 [-]: JMP       37           ; PC := 37
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["FortressLocation"]
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Initialized"]
  8 [-]: EQ        0 R0 K4      ; if R0 ~= true then PC := 37
  9 [-]: JMP       37           ; PC := 37
 10 [-]: GETGLOBAL R0 K0        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["FortressLocation"]
 12 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["Progress"]
 13 [-]: GETGLOBAL R1 K6        ; R1 := 0xb693b6c1
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: GETGLOBAL R2 K0        ; R2 := _T
 16 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FortressLocation"]
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Velocity"]
 18 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 19 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 20 [-]: LE        0 K8 R0      ; if 1.000000 > R0 then PC := 33
 21 [-]: JMP       33           ; PC := 33
 22 [-]: GETGLOBAL R1 K0        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["FortressLocation"]
 24 [-]: GETGLOBAL R2 K0        ; R2 := _T
 25 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FortressLocation"]
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["SplineIndex"]
 27 [-]: GETGLOBAL R3 K0        ; R3 := _T
 28 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["FortressLocation"]
 29 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["MaxSplines"]
 30 [-]: MOD       R2 R2 R3     ; R2 := R2 % R3
 31 [-]: ADD       R2 K8 R2     ; R2 := 1.000000 + R2
 32 [-]: SETTABLE  R1 K9 R2     ; R1["SplineIndex"] := R2
 33 [-]: GETGLOBAL R1 K0        ; R1 := _T
 34 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["FortressLocation"]
 35 [-]: MOD       R2 R0 K8     ; R2 := R0 % 1.000000
 36 [-]: SETTABLE  R1 K5 R2     ; R1["Progress"] := R2
 37 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4765
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 160
  5 [-]: JMP       160          ; PC := 160
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 160
  7 [-]: JMP       160          ; PC := 160
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  9 [-]: GETGLOBAL R5 K2        ; R5 := _T
 10 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FavouriteLoadoutLoader"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 0         ; if not R4 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R4 K2        ; R4 := _T
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: SETTABLE  R4 K3 R5     ; R4["FavouriteLoadoutLoader"] := R5
 17 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 18 [-]: GETGLOBAL R5 K2        ; R5 := _T
 19 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["FavWarframeAvatar"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 0         ; if not R4 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETGLOBAL R4 K2        ; R4 := _T
 24 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 25 [-]: SETTABLE  R4 K4 R5     ; R4["FavWarframeAvatar"] := R5
 26 [-]: GETGLOBAL R4 K5        ; R4 := 0x64fb1586
 27 [-]: MOVE      R5 R3        ; R5 := R3
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: GETGLOBAL R5 K6        ; R5 := 0x89326c93
 30 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x46a0ebf5]
 31 [-]: MOVE      R7 R3        ; R7 := R3
 32 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 33 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 34 [-]: MOVE      R7 R5        ; R7 := R5
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: TEST      R6 1         ; if R6 then PC := 97
 37 [-]: JMP       97           ; PC := 97
 38 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 39 [-]: GETGLOBAL R7 K2        ; R7 := _T
 40 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FavWarframeAvatar"]
 41 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: TEST      R6 0         ; if not R6 then PC := 97
 44 [-]: JMP       97           ; PC := 97
 45 [-]: LOADK     R6 0         ; R6 := 0.000000
 46 [-]: GETGLOBAL R7 K9        ; R7 := 0x0469f296
 47 [-]: LOADK     R8 K10       ; R8 := "FavouriteWarframeEntity"
 48 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 49 [-]: EQ        1 R4 R7      ; if R4 == R7 then PC := 58
 50 [-]: JMP       58           ; PC := 58
 51 [-]: LOADK     R6 3         ; R6 := 3.000000
 52 [-]: GETGLOBAL R7 K6        ; R7 := 0x89326c93
 53 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0x18d05d30]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: TEST      R7 1         ; if R7 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: LOADK     R6 4         ; R6 := 4.000000
 58 [-]: GETGLOBAL R7 K2        ; R7 := _T
 59 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FavWarframeAvatar"]
 60 [-]: GETGLOBAL R8 K6        ; R8 := 0x89326c93
 61 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0x05909209]
 62 [-]: GETGLOBAL R10 K13      ; R10 := 0xf5d69a4f
 63 [-]: SELF      R11 R5 K14   ; R12 := R5; R11 := R5[0xd1586535]
 64 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 65 [-]: SELF      R12 R5 K15   ; R13 := R5; R12 := R5[0xcb3851b8]
 66 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 67 [-]: LOADNIL   R13 R14      ; R13 := R14 := nil
 68 [-]: MOVE      R15 R6       ; R15 := R6
 69 [-]: CALL      R8 8 2       ; R8 := R8(R9,R10,R11,R12,R13,R14,R15)
 70 [-]: SETTABLE  R7 R4 R8     ; R7[R4] := R8
 71 [-]: GETGLOBAL R7 K2        ; R7 := _T
 72 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FavWarframeAvatar"]
 73 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 74 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0x589ef1c1]
 75 [-]: SELF      R9 R5 K14    ; R10 := R5; R9 := R5[0xd1586535]
 76 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 77 [-]: SELF      R10 R5 K15   ; R11 := R5; R10 := R5[0xcb3851b8]
 78 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 79 [-]: CALL      R7 0 1       ; R7(R8,...)
 80 [-]: GETGLOBAL R7 K2        ; R7 := _T
 81 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FavWarframeAvatar"]
 82 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 83 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0x89c6dbf7]
 84 [-]: SELF      R9 R5 K15    ; R10 := R5; R9 := R5[0xcb3851b8]
 85 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 86 [-]: CALL      R7 0 1       ; R7(R8,...)
 87 [-]: GETGLOBAL R7 K2        ; R7 := _T
 88 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FavWarframeAvatar"]
 89 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 90 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x8decb783]
 91 [-]: LOADBOOL  R9 0 0       ; R9 := false
 92 [-]: CALL      R7 3 1       ; R7(R8,R9)
 93 [-]: SELF      R7 R5 K19    ; R8 := R5; R7 := R5[0x768274d6]
 94 [-]: LOADBOOL  R9 0 0       ; R9 := false
 95 [-]: LOADBOOL  R10 1 0      ; R10 := true
 96 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 97 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
 98 [-]: GETGLOBAL R8 K2        ; R8 := _T
 99 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["FavWarframeAvatar"]
100 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
101 [-]: CALL      R7 2 2       ; R7 := R7(R8)
102 [-]: TEST      R7 0         ; if not R7 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: RETURN    R0 1         ; return 
105 [-]: GETGLOBAL R7 K2        ; R7 := _T
106 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["FavWarframeAvatar"]
107 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
108 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7[0x26d544fc]
109 [-]: GETGLOBAL R9 K9        ; R9 := 0x0469f296
110 [-]: CALL      R9 1 0       ; R9,... := R9()
111 [-]: CALL      R7 0 1       ; R7(R8,...)
112 [-]: LOADNIL   R7 R7        ; R7 := nil
113 [-]: GETGLOBAL R8 K6        ; R8 := 0x89326c93
114 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0x18d05d30]
115 [-]: CALL      R8 2 2       ; R8 := R8(R9)
116 [-]: TEST      R8 0         ; if not R8 then PC := 122
117 [-]: JMP       122          ; PC := 122
118 [-]: SELF      R8 R0 K21    ; R9 := R0; R8 := R0[0x25a6e75e]
119 [-]: CALL      R8 2 2       ; R8 := R8(R9)
120 [-]: MOVE      R7 R8        ; R7 := R8
121 [-]: JMP       125          ; PC := 125
122 [-]: SELF      R8 R0 K22    ; R9 := R0; R8 := R0[0x7465e2a0]
123 [-]: CALL      R8 2 2       ; R8 := R8(R9)
124 [-]: MOVE      R7 R8        ; R7 := R8
125 [-]: SELF      R8 R7 K23    ; R9 := R7; R8 := R7[0x566259e1]
126 [-]: LOADK     R10 0        ; R10 := 0.000000
127 [-]: MOVE      R11 R1       ; R11 := R1
128 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
129 [-]: GETGLOBAL R9 K6        ; R9 := 0x89326c93
130 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0x18d05d30]
131 [-]: CALL      R9 2 2       ; R9 := R9(R10)
132 [-]: NOT       R9 R9        ; R9 := not R9
133 [-]: GETGLOBAL R10 K9       ; R10 := 0x0469f296
134 [-]: CALL      R10 1 2      ; R10 := R10()
135 [-]: GETUPVAL  R11 U0       ; R11 := U0
136 [-]: GETTABLE  R11 R11 K25  ; R11 := R11[0x23ddc82a]
137 [-]: CALL      R11 1 2      ; R11 := R11()
138 [-]: TEST      R11 0        ; if not R11 then PC := 144
139 [-]: JMP       144          ; PC := 144
140 [-]: GETGLOBAL R11 K9       ; R11 := 0x0469f296
141 [-]: MOVE      R12 R4       ; R12 := R4
142 [-]: CALL      R11 2 2      ; R11 := R11(R12)
143 [-]: MOVE      R10 R11      ; R10 := R11
144 [-]: SELF      R11 R0 K26   ; R12 := R0; R11 := R0[0xaf73a93c]
145 [-]: MOVE      R13 R2       ; R13 := R2
146 [-]: LOADK     R14 0        ; R14 := 0.000000
147 [-]: MOVE      R15 R8       ; R15 := R8
148 [-]: MOVE      R16 R9       ; R16 := R9
149 [-]: MOVE      R17 R10      ; R17 := R10
150 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
151 [-]: GETGLOBAL R11 K2       ; R11 := _T
152 [-]: GETTABLE  R11 R11 K3   ; R11 := R11["FavouriteLoadoutLoader"]
153 [-]: NEWTABLE  R12 0 2      ; R12 := {}
154 [-]: SETTABLE  R12 K27 R2   ; R12["Loadout"] := R2
155 [-]: SELF      R13 R0 K29   ; R14 := R0; R13 := R0[0xf16dfdcc]
156 [-]: MOVE      R15 R10      ; R15 := R10
157 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
158 [-]: SETTABLE  R12 K28 R13  ; R12["Loader"] := R13
159 [-]: SETTABLE  R11 R4 R12   ; R11[R4] := R12
160 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 4815
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0xbe190284
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf2deaf69]
  8 [-]: GETGLOBAL R4 K3        ; R4 := gLotusAttractModeGameRulesType
  9 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 10 [-]: TEST      R2 1         ; if R2 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
 13 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf2deaf69]
 14 [-]: GETGLOBAL R4 K4        ; R4 := gLotusPhotoBoothGameRulesType
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: TEST      R2 1         ; if R2 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETGLOBAL R2 K5        ; R2 := 0x76ea806b
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x3f3ae64c]
 21 [-]: LOADK     R4 0         ; R4 := 0.000000
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0x80563238]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: TEST      R4 1         ; if R4 then PC := 77
 35 [-]: JMP       77           ; PC := 77
 36 [-]: GETGLOBAL R4 K8        ; R4 := 0x0469f296
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: GETGLOBAL R5 K9        ; R5 := 0x8650181f
 40 [-]: CALL      R5 1 2       ; R5 := R5()
 41 [-]: TEST      R0 0         ; if not R0 then PC := 62
 42 [-]: JMP       62           ; PC := 62
 43 [-]: SELF      R6 R3 K10    ; R7 := R3; R6 := R3[0x571ef1e3]
 44 [-]: GETGLOBAL R8 K11       ; R8 := 0x89326c93
 45 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0x18d05d30]
 46 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 47 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 48 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["mFavouriteLoadouts"]
 49 [-]: LOADK     R7 1         ; R7 := 1.000000
 50 [-]: LEN       R8 R6        ; R8 := # R6
 51 [-]: LOADK     R9 1         ; R9 := 1.000000
 52 [-]: FORPREP   R7 60        ; R7 -= R9; PC := 60
 53 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 54 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["mTag"]
 55 [-]: EQ        0 R4 R11     ; if R4 ~= R11 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 58 [-]: GETTABLE  R5 R11 K15   ; R5 := R11["mLoadoutId"]
 59 [-]: JMP       68           ; PC := 68
 60 [-]: FORLOOP   R7 53        ; R7 += R9; if R7 <= R8 then begin PC := 53; R10 := R7 end
 61 [-]: JMP       68           ; PC := 68
 62 [-]: SELF      R11 R3 K16   ; R12 := R3; R11 := R3[0xcd57f819]
 63 [-]: GETGLOBAL R13 K11      ; R13 := 0x89326c93
 64 [-]: SELF      R13 R13 K12  ; R14 := R13; R13 := R13[0x18d05d30]
 65 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 66 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 67 [-]: GETTABLE  R5 R11 K17   ; R5 := R11["mFavouriteLoadoutId"]
 68 [-]: GETGLOBAL R11 K18      ; R11 := 0x6c97a788
 69 [-]: GETTABLE  R11 R11 K19  ; R11 := R11[0x17574a02]
 70 [-]: CALL      R11 1 2      ; R11 := R11()
 71 [-]: GETUPVAL  R12 U0       ; R12 := U0
 72 [-]: MOVE      R13 R3       ; R13 := R3
 73 [-]: MOVE      R14 R5       ; R14 := R5
 74 [-]: MOVE      R15 R11      ; R15 := R11
 75 [-]: MOVE      R16 R4       ; R16 := R4
 76 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 77 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 4845
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusAttractModeGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusPhotoBoothGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0x76ea806b
 20 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x3f3ae64c]
 21 [-]: LOADK     R2 0         ; R2 := 0.000000
 22 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 23 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 0         ; if not R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0x80563238]
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 53
 35 [-]: JMP       53           ; PC := 53
 36 [-]: GETGLOBAL R2 K8        ; R2 := 0x6c97a788
 37 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[0x17574a02]
 38 [-]: CALL      R2 1 2       ; R2 := R2()
 39 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1[0xcd57f819]
 40 [-]: GETGLOBAL R5 K11       ; R5 := 0x89326c93
 41 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0x18d05d30]
 42 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 43 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 44 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mFavouriteLoadoutId"]
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: MOVE      R6 R3        ; R6 := R3
 48 [-]: MOVE      R7 R2        ; R7 := R2
 49 [-]: GETGLOBAL R8 K14       ; R8 := 0x0469f296
 50 [-]: LOADK     R9 K15       ; R9 := "FavouriteWarframeEntity"
 51 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 52 [-]: CALL      R4 0 1       ; R4(R5,...)
 53 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 4862
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R0 0         ; if not R0 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x18d05d30]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 14
  7 [-]: JMP       14           ; PC := 14
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x8019cc24]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: CALL      R1 1 1       ; R1()
 16 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 4871
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusAttractModeGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusPhotoBoothGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0x76ea806b
 20 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x3f3ae64c]
 21 [-]: LOADK     R2 0         ; R2 := 0.000000
 22 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 23 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 0         ; if not R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0x80563238]
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 74
 35 [-]: JMP       74           ; PC := 74
 36 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0x571ef1e3]
 37 [-]: GETGLOBAL R4 K9        ; R4 := 0x89326c93
 38 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x18d05d30]
 39 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 40 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 41 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mFavouriteLoadouts"]
 42 [-]: LOADK     R3 1         ; R3 := 1.000000
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: LEN       R4 R4        ; R4 := # R4
 45 [-]: LOADK     R5 1         ; R5 := 1.000000
 46 [-]: FORPREP   R3 73        ; R3 -= R5; PC := 73
 47 [-]: GETGLOBAL R7 K12       ; R7 := 0x8650181f
 48 [-]: CALL      R7 1 2       ; R7 := R7()
 49 [-]: LOADK     R8 1         ; R8 := 1.000000
 50 [-]: LEN       R9 R2        ; R9 := # R2
 51 [-]: LOADK     R10 1        ; R10 := 1.000000
 52 [-]: FORPREP   R8 62        ; R8 -= R10; PC := 62
 53 [-]: GETUPVAL  R12 U0       ; R12 := U0
 54 [-]: GETTABLE  R12 R12 R6   ; R12 := R12[R6]
 55 [-]: GETTABLE  R13 R2 R11   ; R13 := R2[R11]
 56 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["mTag"]
 57 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 62
 58 [-]: JMP       62           ; PC := 62
 59 [-]: GETTABLE  R12 R2 R11   ; R12 := R2[R11]
 60 [-]: GETTABLE  R7 R12 K14   ; R7 := R12["mLoadoutId"]
 61 [-]: JMP       63           ; PC := 63
 62 [-]: FORLOOP   R8 53        ; R8 += R10; if R8 <= R9 then begin PC := 53; R11 := R8 end
 63 [-]: GETGLOBAL R12 K15      ; R12 := 0x6c97a788
 64 [-]: GETTABLE  R12 R12 K16  ; R12 := R12[0x17574a02]
 65 [-]: CALL      R12 1 2      ; R12 := R12()
 66 [-]: GETUPVAL  R13 U1       ; R13 := U1
 67 [-]: MOVE      R14 R1       ; R14 := R1
 68 [-]: MOVE      R15 R7       ; R15 := R7
 69 [-]: MOVE      R16 R12      ; R16 := R12
 70 [-]: GETUPVAL  R17 U0       ; R17 := U0
 71 [-]: GETTABLE  R17 R17 R6   ; R17 := R17[R6]
 72 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 73 [-]: FORLOOP   R3 47        ; R3 += R5; if R3 <= R4 then begin PC := 47; R6 := R3 end
 74 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 4898
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 0         ; if not R0 then PC := 15
  2 [-]: JMP       15           ; PC := 15
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x18d05d30]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf2deaf69]
 10 [-]: GETGLOBAL R3 K4        ; R3 := gLotusAttractModeGameRulesType
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: TEST      R1 1         ; if R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: CALL      R1 1 1       ; R1()
 17 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 4907
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusAttractModeGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusPhotoBoothGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0x76ea806b
 20 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x3f3ae64c]
 21 [-]: LOADK     R2 0         ; R2 := 0.000000
 22 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 23 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 0         ; if not R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0x80563238]
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 109
 35 [-]: JMP       109          ; PC := 109
 36 [-]: LOADNIL   R2 R2        ; R2 := nil
 37 [-]: GETGLOBAL R3 K8        ; R3 := 0x89326c93
 38 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x18d05d30]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 0         ; if not R3 then PC := 48
 41 [-]: JMP       48           ; PC := 48
 42 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1[0x25a6e75e]
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x726215c7]
 45 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 46 [-]: MOVE      R2 R3        ; R2 := R3
 47 [-]: JMP       53           ; PC := 53
 48 [-]: SELF      R3 R1 K12    ; R4 := R1; R3 := R1[0x7465e2a0]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x726215c7]
 51 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 52 [-]: MOVE      R2 R3        ; R2 := R3
 53 [-]: GETGLOBAL R3 K13       ; R3 := _T
 54 [-]: SETTABLE  R3 K14 K15   ; R3["HelminthSuitLoader"] := nil
 55 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 56 [-]: GETTABLE  R4 R2 K16    ; R4 := R2["mLastConsumedSuit"]
 57 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mItemType"]
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: TEST      R3 1         ; if R3 then PC := 88
 60 [-]: JMP       88           ; PC := 88
 61 [-]: GETGLOBAL R3 K18       ; R3 := 0x34291f5c
 62 [-]: GETTABLE  R3 R3 K19    ; R3 := R3[0x397b920f]
 63 [-]: GETTABLE  R4 R2 K20    ; R4 := R2["mAbilityOverrideUnlockCooldown"]
 64 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 65 [-]: LT        0 K21 R3     ; if 0.000000 >= R3 then PC := 88
 66 [-]: JMP       88           ; PC := 88
 67 [-]: GETGLOBAL R3 K13       ; R3 := _T
 68 [-]: NEWTABLE  R4 0 1       ; R4 := {}
 69 [-]: GETGLOBAL R5 K23       ; R5 := 0x6c97a788
 70 [-]: GETTABLE  R5 R5 K24    ; R5 := R5[0x17574a02]
 71 [-]: CALL      R5 1 2       ; R5 := R5()
 72 [-]: SETTABLE  R4 K22 R5    ; R4["LoadOut"] := R5
 73 [-]: SETTABLE  R3 K14 R4    ; R3["HelminthSuitLoader"] := R4
 74 [-]: SELF      R3 R1 K25    ; R4 := R1; R3 := R1[0xea04dcea]
 75 [-]: GETGLOBAL R5 K13       ; R5 := _T
 76 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["HelminthSuitLoader"]
 77 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["LoadOut"]
 78 [-]: GETGLOBAL R6 K8        ; R6 := 0x89326c93
 79 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6[0x18d05d30]
 80 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 81 [-]: NOT       R6 R6        ; R6 := not R6
 82 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 83 [-]: GETGLOBAL R3 K13       ; R3 := _T
 84 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["HelminthSuitLoader"]
 85 [-]: SELF      R4 R1 K27    ; R5 := R1; R4 := R1[0x94b1aa85]
 86 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 87 [-]: SETTABLE  R3 K26 R4    ; R3["Loader"] := R4
 88 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 89 [-]: GETGLOBAL R4 K13       ; R4 := _T
 90 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["HelminthSuitLoader"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 0         ; if not R3 then PC := 109
 93 [-]: JMP       109          ; PC := 109
 94 [-]: GETGLOBAL R3 K8        ; R3 := 0x89326c93
 95 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0x46a0ebf5]
 96 [-]: GETGLOBAL R5 K29       ; R5 := 0x0469f296
 97 [-]: LOADK     R6 K30       ; R6 := "HelminthConsumedSuit"
 98 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 99 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
100 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
101 [-]: MOVE      R5 R3        ; R5 := R3
102 [-]: CALL      R4 2 2       ; R4 := R4(R5)
103 [-]: TEST      R4 1         ; if R4 then PC := 109
104 [-]: JMP       109          ; PC := 109
105 [-]: SELF      R4 R3 K31    ; R5 := R3; R4 := R3[0x768274d6]
106 [-]: LOADBOOL  R6 0 0       ; R6 := false
107 [-]: LOADBOOL  R7 1 0       ; R7 := true
108 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
109 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 4943
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 4947
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HelminthSuitLoader"]
  3 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["LoadOutCopyPending"]
  4 [-]: EQ        0 R0 K3      ; if R0 ~= nil then PC := 115
  5 [-]: JMP       115          ; PC := 115
  6 [-]: LOADK     R0 3         ; R0 := 3.000000
  7 [-]: GETGLOBAL R1 K5        ; R1 := 0x89326c93
  8 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x18d05d30]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADK     R0 4         ; R0 := 4.000000
 13 [-]: GETGLOBAL R1 K5        ; R1 := 0x89326c93
 14 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x78298275]
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 0         ; if not R2 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R2 K9        ; R2 := 0x3d106989
 22 [-]: LOADK     R3 K10       ; R3 := "Couldn't get player avatar, not creating a loader"
 23 [-]: CALL      R2 2 1       ; R2(R3)
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: SELF      R2 R1 K11    ; R3 := R1; R2 := R1[0xd1586535]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETGLOBAL R3 K12       ; R3 := 0xa421af95
 28 [-]: LOADK     R4 0         ; R4 := 0.000000
 29 [-]: LOADK     R5 -2        ; R5 := -2.000000
 30 [-]: LOADK     R6 0         ; R6 := 0.000000
 31 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 32 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 33 [-]: GETGLOBAL R3 K5        ; R3 := 0x89326c93
 34 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x46a0ebf5]
 35 [-]: GETGLOBAL R5 K14       ; R5 := 0x0469f296
 36 [-]: LOADK     R6 K15       ; R6 := "ActionFigureAvatarSpawn"
 37 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 38 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 39 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 40 [-]: MOVE      R5 R3        ; R5 := R3
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: TEST      R4 1         ; if R4 then PC := 47
 43 [-]: JMP       47           ; PC := 47
 44 [-]: SELF      R4 R3 K11    ; R5 := R3; R4 := R3[0xd1586535]
 45 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 46 [-]: MOVE      R2 R4        ; R2 := R4
 47 [-]: GETGLOBAL R4 K0        ; R4 := _T
 48 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
 49 [-]: GETGLOBAL R5 K5        ; R5 := 0x89326c93
 50 [-]: SELF      R5 R5 K17    ; R6 := R5; R5 := R5[0x05909209]
 51 [-]: GETGLOBAL R7 K18       ; R7 := 0x3b8177f3
 52 [-]: MOVE      R8 R2        ; R8 := R2
 53 [-]: GETGLOBAL R9 K19       ; R9 := ZERO_ROTATION
 54 [-]: MOVE      R10 R1       ; R10 := R1
 55 [-]: MOVE      R11 R1       ; R11 := R1
 56 [-]: MOVE      R12 R0       ; R12 := R0
 57 [-]: CALL      R5 8 2       ; R5 := R5(R6,R7,R8,R9,R10,R11,R12)
 58 [-]: SETTABLE  R4 K16 R5    ; R4["Avatar"] := R5
 59 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 60 [-]: GETGLOBAL R5 K0        ; R5 := _T
 61 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["HelminthSuitLoader"]
 62 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["Avatar"]
 63 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 64 [-]: TEST      R4 1         ; if R4 then PC := 158
 65 [-]: JMP       158          ; PC := 158
 66 [-]: GETGLOBAL R4 K0        ; R4 := _T
 67 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
 68 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["Avatar"]
 69 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0x5a03ce82]
 70 [-]: LOADBOOL  R6 1 0       ; R6 := true
 71 [-]: LOADBOOL  R7 0 0       ; R7 := false
 72 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 73 [-]: GETGLOBAL R4 K0        ; R4 := _T
 74 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
 75 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["Avatar"]
 76 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4[0x26d544fc]
 77 [-]: GETGLOBAL R6 K14       ; R6 := 0x0469f296
 78 [-]: CALL      R6 1 0       ; R6,... := R6()
 79 [-]: CALL      R4 0 1       ; R4(R5,...)
 80 [-]: GETGLOBAL R4 K0        ; R4 := _T
 81 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
 82 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["Avatar"]
 83 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x768274d6]
 84 [-]: LOADBOOL  R6 0 0       ; R6 := false
 85 [-]: CALL      R4 3 1       ; R4(R5,R6)
 86 [-]: GETGLOBAL R4 K0        ; R4 := _T
 87 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
 88 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["Avatar"]
 89 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4[0x30eb0cc3]
 90 [-]: LOADK     R6 7         ; R6 := 7.000000
 91 [-]: LOADBOOL  R7 1 0       ; R7 := true
 92 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 93 [-]: GETGLOBAL R4 K0        ; R4 := _T
 94 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
 95 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["Avatar"]
 96 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0x9d668f53]
 97 [-]: GETGLOBAL R6 K14       ; R6 := 0x0469f296
 98 [-]: CALL      R6 1 2       ; R6 := R6()
 99 [-]: LOADK     R7 5         ; R7 := 5.000000
100 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
101 [-]: GETGLOBAL R4 K0        ; R4 := _T
102 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
103 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["Avatar"]
104 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4[0xde321e6f]
105 [-]: CALL      R4 2 2       ; R4 := R4(R5)
106 [-]: SELF      R4 R4 K27    ; R5 := R4; R4 := R4[0x1d2dfe4a]
107 [-]: GETGLOBAL R6 K0        ; R6 := _T
108 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["HelminthSuitLoader"]
109 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["LoadOut"]
110 [-]: CALL      R4 3 1       ; R4(R5,R6)
111 [-]: GETGLOBAL R4 K0        ; R4 := _T
112 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
113 [-]: SETTABLE  R4 K2 K29    ; R4["LoadOutCopyPending"] := 4.000000
114 [-]: JMP       158          ; PC := 158
115 [-]: GETGLOBAL R4 K0        ; R4 := _T
116 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
117 [-]: GETGLOBAL R5 K0        ; R5 := _T
118 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["HelminthSuitLoader"]
119 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["LoadOutCopyPending"]
120 [-]: SUB       R5 R5 K30    ; R5 := R5 - 1.000000
121 [-]: SETTABLE  R4 K2 R5     ; R4["LoadOutCopyPending"] := R5
122 [-]: GETGLOBAL R4 K0        ; R4 := _T
123 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["HelminthSuitLoader"]
124 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["LoadOutCopyPending"]
125 [-]: EQ        0 R4 K31     ; if R4 ~= 0.000000 then PC := 158
126 [-]: JMP       158          ; PC := 158
127 [-]: GETGLOBAL R4 K5        ; R4 := 0x89326c93
128 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x46a0ebf5]
129 [-]: GETGLOBAL R6 K14       ; R6 := 0x0469f296
130 [-]: LOADK     R7 K32       ; R7 := "HelminthConsumedSuit"
131 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
132 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
133 [-]: SELF      R5 R4 K22    ; R6 := R4; R5 := R4[0x768274d6]
134 [-]: LOADBOOL  R7 1 0       ; R7 := true
135 [-]: LOADBOOL  R8 1 0       ; R8 := true
136 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
137 [-]: GETUPVAL  R5 U0        ; R5 := U0
138 [-]: GETTABLE  R5 R5 K33    ; R5 := R5[0x18ea51f7]
139 [-]: MOVE      R6 R4        ; R6 := R4
140 [-]: GETGLOBAL R7 K0        ; R7 := _T
141 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["HelminthSuitLoader"]
142 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["Avatar"]
143 [-]: LOADBOOL  R8 0 0       ; R8 := false
144 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
145 [-]: SELF      R5 R4 K34    ; R6 := R4; R5 := R4[0xc9f6a7d7]
146 [-]: GETGLOBAL R7 K35       ; R7 := 0x1fcef9d4
147 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
148 [-]: GETGLOBAL R6 K8        ; R6 := 0x7b998233
149 [-]: MOVE      R7 R5        ; R7 := R5
150 [-]: CALL      R6 2 2       ; R6 := R6(R7)
151 [-]: TEST      R6 1         ; if R6 then PC := 156
152 [-]: JMP       156          ; PC := 156
153 [-]: SELF      R6 R5 K36    ; R7 := R5; R6 := R5[0x8eb2112d]
154 [-]: LOADK     R8 K37       ; R8 := "Burst"
155 [-]: CALL      R6 3 1       ; R6(R7,R8)
156 [-]: GETGLOBAL R6 K0        ; R6 := _T
157 [-]: SETTABLE  R6 K1 K3     ; R6["HelminthSuitLoader"] := nil
158 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5001
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: SETGLOBAL R1 K0        ; mFriendRequestActiveNotification := R1
  4 [-]: JMP       25           ; PC := 25
  5 [-]: GETGLOBAL R2 K0        ; R2 := mFriendRequestActiveNotification
  6 [-]: EQ        0 R2 R1      ; if R2 ~= R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADNIL   R2 R2        ; R2 := nil
  9 [-]: SETGLOBAL R2 K0        ; mFriendRequestActiveNotification := R2
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x25d99d89
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETGLOBAL R2 K3        ; R2 := mFriendRequests
 16 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 17 [-]: TEST      R2 0         ; if not R2 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R2 K3        ; R2 := mFriendRequests
 20 [-]: SETTABLE  R2 R1 K4     ; R2[R1] := nil
 21 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
 22 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xadb51265]
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5015
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: TEST      R0 1         ; if R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADBOOL  R0 0 0       ; R0 := false
  5 [-]: TEST      R0 0         ; if not R0 then PC := 78
  6 [-]: JMP       78           ; PC := 78
  7 [-]: GETGLOBAL R1 K0        ; R1 := mNewFriendRequests
  8 [-]: TEST      R1 0         ; if not R1 then PC := 78
  9 [-]: JMP       78           ; PC := 78
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 11 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 78
 14 [-]: JMP       78           ; PC := 78
 15 [-]: GETGLOBAL R1 K3        ; R1 := _T
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ShowNotification"]
 17 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 78
 18 [-]: JMP       78           ; PC := 78
 19 [-]: LOADBOOL  R1 0 0       ; R1 := false
 20 [-]: SETGLOBAL R1 K0        ; mNewFriendRequests := R1
 21 [-]: GETGLOBAL R1 K2        ; R1 := 0x25d99d89
 22 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x31842110]
 23 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 24 [-]: LOADK     R2 1         ; R2 := 1.000000
 25 [-]: LEN       R3 R1        ; R3 := # R1
 26 [-]: LOADK     R4 1         ; R4 := 1.000000
 27 [-]: FORPREP   R2 77        ; R2 -= R4; PC := 77
 28 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 29 [-]: GETTABLE  R7 R6 K7     ; R7 := R6["mDisplayName"]
 30 [-]: GETTABLE  R8 R6 K8     ; R8 := R6["mNewRequest"]
 31 [-]: TEST      R8 0         ; if not R8 then PC := 77
 32 [-]: JMP       77           ; PC := 77
 33 [-]: GETGLOBAL R8 K9        ; R8 := 0x89326c93
 34 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0x78298275]
 35 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 36 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
 37 [-]: MOVE      R10 R8       ; R10 := R8
 38 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 39 [-]: TEST      R9 1         ; if R9 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: SELF      R9 R8 K11    ; R10 := R8; R9 := R8[0xd3a01177]
 42 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 43 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xcc998df1]
 44 [-]: LOADK     R11 K13      ; R11 := "FriendNotificationSelected"
 45 [-]: CALL      R9 3 1       ; R9(R10,R11)
 46 [-]: GETGLOBAL R9 K14       ; R9 := mFriendRequests
 47 [-]: SETTABLE  R9 R7 R6     ; R9[R7] := R6
 48 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
 49 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x42b04007]
 50 [-]: LOADK     R11 K17      ; R11 := "/Lotus/Language/Menu/Lobby_FriendInvite"
 51 [-]: LOADBOOL  R12 0 0      ; R12 := false
 52 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 53 [-]: SETTABLE  R13 K18 R7   ; R13["USER"] := R7
 54 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 55 [-]: LOADK     R10 K19      ; R10 := "\r\r"
 56 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
 57 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11[0x42b04007]
 58 [-]: LOADK     R13 K20      ; R13 := "<NEXT_INV>"
 59 [-]: LOADBOOL  R14 1 0      ; R14 := true
 60 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 61 [-]: GETGLOBAL R12 K15      ; R12 := 0xae91e43b
 62 [-]: SELF      R12 R12 K16  ; R13 := R12; R12 := R12[0x42b04007]
 63 [-]: LOADK     R14 K21      ; R14 := "/Lotus/Language/Menu/Details"
 64 [-]: LOADBOOL  R15 0 0      ; R15 := false
 65 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 66 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 67 [-]: GETGLOBAL R10 K3       ; R10 := _T
 68 [-]: GETTABLE  R10 R10 K22  ; R10 := R10[0x7dce37bc]
 69 [-]: MOVE      R11 R9       ; R11 := R9
 70 [-]: LOADK     R12 K23      ; R12 := "SquadMemberJoined"
 71 [-]: LOADBOOL  R13 0 0      ; R13 := false
 72 [-]: LOADK     R14 8        ; R14 := 8.000000
 73 [-]: LOADNIL   R15 R16      ; R15 := R16 := nil
 74 [-]: GETUPVAL  R17 U0       ; R17 := U0
 75 [-]: MOVE      R18 R7       ; R18 := R7
 76 [-]: CALL      R10 9 1      ; R10(R11,R12,R13,R14,R15,R16,R17,R18)
 77 [-]: FORLOOP   R2 28        ; R2 += R4; if R2 <= R3 then begin PC := 28; R5 := R2 end
 78 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5039
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADBOOL  R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mNewFriendRequests := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 5043
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mFriendRequestActiveNotification
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 53
  5 [-]: JMP       53           ; PC := 53
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0x41c97c15]
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: GETGLOBAL R0 K4        ; R0 := mFriendRequests
 10 [-]: GETGLOBAL R1 K1        ; R1 := mFriendRequestActiveNotification
 11 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 12 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 13 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0xe27b35bb]
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: SETTABLE  R1 K7 K8     ; R1["dialogType"] := 5.000000
 16 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 17 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 18 [-]: LOADK     R4 K12       ; R4 := "/Lotus/Language/Menu/Lobby_FriendInviteDetails"
 19 [-]: LOADBOOL  R5 0 0       ; R5 := false
 20 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 21 [-]: GETGLOBAL R7 K1        ; R7 := mFriendRequestActiveNotification
 22 [-]: SETTABLE  R6 K13 R7    ; R6["USER"] := R7
 23 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 24 [-]: LOADK     R3 K14       ; R3 := "\r\r"
 25 [-]: GETTABLE  R4 R0 K15    ; R4 := R0["mNote"]
 26 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 27 [-]: SETTABLE  R1 K9 R2     ; R1["locString"] := R2
 28 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 29 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 30 [-]: LOADK     R4 K17       ; R4 := "/Lotus/Language/Menu/Global_Accept"
 31 [-]: LOADBOOL  R5 0 0       ; R5 := false
 32 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 33 [-]: SETTABLE  R1 K16 R2    ; R1["firstString"] := R2
 34 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 35 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 36 [-]: LOADK     R4 K19       ; R4 := "/Lotus/Language/Menu/Global_Decline"
 37 [-]: LOADBOOL  R5 0 0       ; R5 := false
 38 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 39 [-]: SETTABLE  R1 K18 R2    ; R1["secondString"] := R2
 40 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 41 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 42 [-]: LOADK     R4 K21       ; R4 := "/Lotus/Language/Menu/NavBar_Cancel"
 43 [-]: LOADBOOL  R5 0 0       ; R5 := false
 44 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 45 [-]: SETTABLE  R1 K20 R2    ; R1["thirdString"] := R2
 46 [-]: SELF      R2 R1 K22    ; R3 := R1; R2 := R1[0xe6ccc5b9]
 47 [-]: LOADK     R4 K23       ; R4 := "FriendRequestOptionChosen"
 48 [-]: CALL      R2 3 1       ; R2(R3,R4)
 49 [-]: GETUPVAL  R2 U0        ; R2 := U0
 50 [-]: GETTABLE  R2 R2 K24    ; R2 := R2[0xe99b84e7]
 51 [-]: MOVE      R3 R1        ; R3 := R1
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 5060
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 39
  5 [-]: JMP       39           ; PC := 39
  6 [-]: GETGLOBAL R1 K2        ; R1 := mFriendRequests
  7 [-]: GETGLOBAL R2 K3        ; R2 := mFriendRequestActiveNotification
  8 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 35
 13 [-]: JMP       35           ; PC := 35
 14 [-]: GETGLOBAL R2 K4        ; R2 := 0x03f57322
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: EQ        0 R2 K6      ; if R2 ~= 4.000000 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xad1be9ba]
 21 [-]: GETTABLE  R4 R1 K8     ; R4 := R1["mId"]
 22 [-]: LOADK     R5 K9        ; R5 := "OnConfirmFriendResult"
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: JMP       35           ; PC := 35
 25 [-]: GETGLOBAL R2 K4        ; R2 := 0x03f57322
 26 [-]: MOVE      R3 R0        ; R3 := R0
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: EQ        0 R2 K10     ; if R2 ~= 6.000000 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
 31 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x4818a526]
 32 [-]: GETTABLE  R4 R1 K8     ; R4 := R1["mId"]
 33 [-]: LOADK     R5 K12       ; R5 := "OnRemoveFriendResult"
 34 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: LOADBOOL  R3 0 0       ; R3 := false
 37 [-]: GETGLOBAL R4 K3        ; R4 := mFriendRequestActiveNotification
 38 [-]: CALL      R2 3 1       ; R2(R3,R4)
 39 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 5074
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xe0cba3ca]
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3[0x3230dc3e]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  9 [-]: CALL      R2 0 1       ; R2(R3,...)
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 5081
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 1         ; if R0 then PC := 11
  2 [-]: JMP       11           ; PC := 11
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0xe0cba3ca]
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K1     ; R4 := R4[0x3230dc3e]
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  9 [-]: CALL      R3 0 1       ; R3(R4,...)
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K0     ; R3 := R3[0xe0cba3ca]
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CALL      R3 2 1       ; R3(R4)
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 16 [-]: GETGLOBAL R4 K3        ; R4 := 0x25d99d89
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: GETGLOBAL R3 K3        ; R3 := 0x25d99d89
 21 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x50f18d6c]
 22 [-]: LOADK     R5 K5        ; R5 := "OnGetFriendsResult"
 23 [-]: CALL      R3 3 1       ; R3(R4,R5)
 24 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 5094
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K0        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendConfirmed"
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 5098
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K0        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendRemoveConfirm"
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 5105
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe0cba3ca]
  3 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/HostDojoFailureDownload"
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 5109
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0xbe190284
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: SETUPVAL  R0 U0        ; U82 := R0
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0x7f5022cf
 10 [-]: GETTABLE  R3 R3 K3     ; R3 := R3[0xa5c556b9]
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: GETUPVAL  R5 U1        ; R5 := U1
 13 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["TAG_SEPERATOR"]
 14 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 15 [-]: TEST      R3 0         ; if not R3 then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: GETGLOBAL R4 K2        ; R4 := 0x7f5022cf
 18 [-]: GETTABLE  R4 R4 K5     ; R4 := R4[0x1a94c9cc]
 19 [-]: MOVE      R5 R2        ; R5 := R2
 20 [-]: LOADK     R6 1         ; R6 := 1.000000
 21 [-]: SUB       R7 R3 K6     ; R7 := R3 - 1.000000
 22 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 23 [-]: MOVE      R2 R4        ; R2 := R4
 24 [-]: GETGLOBAL R4 K7        ; R4 := 0x0469f296
 25 [-]: MOVE      R5 R2        ; R5 := R2
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: GETUPVAL  R5 U1        ; R5 := U1
 28 [-]: GETTABLE  R5 R5 K8     ; R5 := R5[0x5e35d4d6]
 29 [-]: CALL      R5 1 2       ; R5 := R5()
 30 [-]: SELF      R6 R5 K9     ; R7 := R5; R6 := R5[0xc18bf6f0]
 31 [-]: MOVE      R8 R4        ; R8 := R4
 32 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 33 [-]: GETGLOBAL R7 K2        ; R7 := 0x7f5022cf
 34 [-]: GETTABLE  R7 R7 K3     ; R7 := R7[0xa5c556b9]
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: GETUPVAL  R9 U1        ; R9 := U1
 37 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["KEY_TAG"]
 38 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 39 [-]: TEST      R7 0         ; if not R7 then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: GETGLOBAL R7 K11       ; R7 := 0xb009bbc6
 42 [-]: MOVE      R8 R2        ; R8 := R2
 43 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 44 [-]: SELF      R8 R7 K12    ; R9 := R7; R8 := R7[0xef893aec]
 45 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 46 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x8f89d633]
 47 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 48 [-]: MOVE      R6 R8        ; R6 := R8
 49 [-]: JMP       85           ; PC := 85
 50 [-]: GETTABLE  R8 R6 K14    ; R8 := R6["levelOverride"]
 51 [-]: TEST      R8 1         ; if R8 then PC := 85
 52 [-]: JMP       85           ; PC := 85
 53 [-]: LOADBOOL  R8 0 0       ; R8 := false
 54 [-]: TEST      R8 0         ; if not R8 then PC := 85
 55 [-]: JMP       85           ; PC := 85
 56 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 57 [-]: GETUPVAL  R9 U1        ; R9 := U1
 58 [-]: GETTABLE  R9 R9 K15    ; R9 := R9[0x2196d0b1]
 59 [-]: MOVE      R10 R8       ; R10 := R8
 60 [-]: LOADNIL   R11 R11      ; R11 := nil
 61 [-]: GETGLOBAL R12 K1       ; R12 := 0xbe190284
 62 [-]: SELF      R12 R12 K16  ; R13 := R12; R12 := R12[0xa1c390fe]
 63 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 64 [-]: CALL      R9 0 1       ; R9(R10,...)
 65 [-]: LOADK     R9 1         ; R9 := 1.000000
 66 [-]: LEN       R10 R8       ; R10 := # R8
 67 [-]: LOADK     R11 1        ; R11 := 1.000000
 68 [-]: FORPREP   R9 84        ; R9 -= R11; PC := 84
 69 [-]: GETGLOBAL R13 K17      ; R13 := 0xce225efa
 70 [-]: LOADK     R14 0        ; R14 := 0.000000
 71 [-]: CALL      R13 2 1      ; R13(R14)
 72 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 73 [-]: GETTABLE  R14 R13 K18  ; R14 := R13["Type"]
 74 [-]: SELF      R15 R14 K19  ; R16 := R14; R15 := R14[0xed4e0128]
 75 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 76 [-]: EQ        0 R15 R2     ; if R15 ~= R2 then PC := 84
 77 [-]: JMP       84           ; PC := 84
 78 [-]: SELF      R15 R14 K12  ; R16 := R14; R15 := R14[0xef893aec]
 79 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 80 [-]: SELF      R15 R15 K13  ; R16 := R15; R15 := R15[0x8f89d633]
 81 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 82 [-]: MOVE      R6 R15       ; R6 := R15
 83 [-]: JMP       85           ; PC := 85
 84 [-]: FORLOOP   R9 69        ; R9 += R11; if R9 <= R10 then begin PC := 69; R12 := R9 end
 85 [-]: GETUPVAL  R15 U1       ; R15 := U1
 86 [-]: GETTABLE  R15 R15 K20  ; R15 := R15[0xb73d420f]
 87 [-]: CALL      R15 1 2      ; R15 := R15()
 88 [-]: GETUPVAL  R16 U1       ; R16 := U1
 89 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["UI_MODE_IN_SPACE_HUB"]
 90 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 109
 91 [-]: JMP       109          ; PC := 109
 92 [-]: GETGLOBAL R16 K1       ; R16 := 0xbe190284
 93 [-]: SELF      R16 R16 K12  ; R17 := R16; R16 := R16[0xef893aec]
 94 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 95 [-]: GETTABLE  R17 R16 K22  ; R17 := R16["location"]
 96 [-]: EQ        0 R17 R4     ; if R17 ~= R4 then PC := 109
 97 [-]: JMP       109          ; PC := 109
 98 [-]: TEST      R1 1         ; if R1 then PC := 104
 99 [-]: JMP       104          ; PC := 104
100 [-]: GETGLOBAL R17 K23      ; R17 := 0x3d106989
101 [-]: LOADK     R18 K24      ; R18 := "Received message to join a hub-squad while already in a hub. Staying put and hoping everyone's in the same location/instance."
102 [-]: CALL      R17 2 1      ; R17(R18)
103 [-]: RETURN    R0 1         ; return 
104 [-]: GETGLOBAL R17 K25      ; R17 := 0xe7f2b02f
105 [-]: SELF      R17 R17 K26  ; R18 := R17; R17 := R17[0x3b62d69a]
106 [-]: MOVE      R19 R0       ; R19 := R0
107 [-]: LOADBOOL  R20 1 0      ; R20 := true
108 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
109 [-]: EQ        0 R2 K27     ; if R2 ~= "DojoHUB" then PC := 245
110 [-]: JMP       245          ; PC := 245
111 [-]: GETGLOBAL R17 K28      ; R17 := 0x76ea806b
112 [-]: SELF      R17 R17 K29  ; R18 := R17; R17 := R17[0x3f3ae64c]
113 [-]: LOADK     R19 0        ; R19 := 0.000000
114 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
115 [-]: SELF      R18 R17 K30  ; R19 := R17; R18 := R17[0x300348b9]
116 [-]: CALL      R18 2 2      ; R18 := R18(R19)
117 [-]: TEST      R18 1        ; if R18 then PC := 123
118 [-]: JMP       123          ; PC := 123
119 [-]: GETGLOBAL R18 K23      ; R18 := 0x3d106989
120 [-]: LOADK     R19 K31      ; R19 := "UGC restrictions in joining Dojo"
121 [-]: CALL      R18 2 1      ; R18(R19)
122 [-]: RETURN    R0 1         ; return 
123 [-]: GETGLOBAL R18 K2       ; R18 := 0x7f5022cf
124 [-]: GETTABLE  R18 R18 K3   ; R18 := R18[0xa5c556b9]
125 [-]: MOVE      R19 R0       ; R19 := R0
126 [-]: GETUPVAL  R20 U1       ; R20 := U1
127 [-]: GETTABLE  R20 R20 K4   ; R20 := R20["TAG_SEPERATOR"]
128 [-]: ADD       R21 R3 K6    ; R21 := R3 + 1.000000
129 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
130 [-]: TEST      R18 0        ; if not R18 then PC := 150
131 [-]: JMP       150          ; PC := 150
132 [-]: GETGLOBAL R19 K32      ; R19 := _T
133 [-]: NEWTABLE  R20 0 1      ; R20 := {}
134 [-]: SETTABLE  R20 K34 K35  ; R20["Invite"] := true
135 [-]: SETTABLE  R19 K33 R20  ; R19["gDojoData"] := R20
136 [-]: GETGLOBAL R19 K32      ; R19 := _T
137 [-]: GETTABLE  R19 R19 K33  ; R19 := R19["gDojoData"]
138 [-]: GETGLOBAL R20 K2       ; R20 := 0x7f5022cf
139 [-]: GETTABLE  R20 R20 K5   ; R20 := R20[0x1a94c9cc]
140 [-]: MOVE      R21 R0       ; R21 := R0
141 [-]: ADD       R22 R18 K6   ; R22 := R18 + 1.000000
142 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
143 [-]: SETTABLE  R19 K36 R20  ; R19["GuildId"] := R20
144 [-]: GETGLOBAL R19 K32      ; R19 := _T
145 [-]: GETTABLE  R19 R19 K33  ; R19 := R19["gDojoData"]
146 [-]: GETGLOBAL R20 K25      ; R20 := 0xe7f2b02f
147 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0x10d2c544]
148 [-]: CALL      R20 2 2      ; R20 := R20(R21)
149 [-]: SETTABLE  R19 K37 R20  ; R19["ContentURL"] := R20
150 [-]: GETGLOBAL R19 K39      ; R19 := 0x3584dca2
151 [-]: CALL      R19 1 2      ; R19 := R19()
152 [-]: GETGLOBAL R20 K32      ; R20 := _T
153 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["gDojoData"]
154 [-]: EQ        1 R20 K40    ; if R20 == nil then PC := 168
155 [-]: JMP       168          ; PC := 168
156 [-]: GETGLOBAL R20 K32      ; R20 := _T
157 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["gDojoData"]
158 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["GuildId"]
159 [-]: EQ        1 R20 K40    ; if R20 == nil then PC := 168
160 [-]: JMP       168          ; PC := 168
161 [-]: SELF      R20 R19 K41  ; R21 := R19; R20 := R19[0x46e9d221]
162 [-]: GETGLOBAL R22 K32      ; R22 := _T
163 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["gDojoData"]
164 [-]: GETTABLE  R22 R22 K36  ; R22 := R22["GuildId"]
165 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
166 [-]: TEST      R20 1        ; if R20 then PC := 180
167 [-]: JMP       180          ; PC := 180
168 [-]: GETGLOBAL R20 K23      ; R20 := 0x3d106989
169 [-]: LOADK     R21 K42      ; R21 := "Couldn't find GuildId in the hubName, bailing!"
170 [-]: CALL      R20 2 1      ; R20(R21)
171 [-]: GETGLOBAL R20 K25      ; R20 := 0xe7f2b02f
172 [-]: SELF      R20 R20 K26  ; R21 := R20; R20 := R20[0x3b62d69a]
173 [-]: LOADK     R22 K43      ; R22 := ""
174 [-]: CALL      R20 3 1      ; R20(R21,R22)
175 [-]: GETGLOBAL R20 K25      ; R20 := 0xe7f2b02f
176 [-]: SELF      R20 R20 K44  ; R21 := R20; R20 := R20[0x8229d239]
177 [-]: LOADK     R22 K45      ; R22 := "OnLeaveDojoSquadDone"
178 [-]: CALL      R20 3 1      ; R20(R21,R22)
179 [-]: RETURN    R0 1         ; return 
180 [-]: GETUPVAL  R20 U1       ; R20 := U1
181 [-]: GETTABLE  R20 R20 K46  ; R20 := R20["UI_MODE_IN_DOJO"]
182 [-]: EQ        0 R15 R20    ; if R15 ~= R20 then PC := 196
183 [-]: JMP       196          ; PC := 196
184 [-]: GETGLOBAL R20 K32      ; R20 := _T
185 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["gDojoData"]
186 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["GuildId"]
187 [-]: GETGLOBAL R21 K1       ; R21 := 0xbe190284
188 [-]: SELF      R21 R21 K47  ; R22 := R21; R21 := R21[0x713ce380]
189 [-]: CALL      R21 2 2      ; R21 := R21(R22)
190 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 196
191 [-]: JMP       196          ; PC := 196
192 [-]: GETGLOBAL R20 K23      ; R20 := 0x3d106989
193 [-]: LOADK     R21 K48      ; R21 := "Received message to join a Dojo-squad while already in the same Dojo. Staying put and hoping everyone's in the same location/instance."
194 [-]: CALL      R20 2 1      ; R20(R21)
195 [-]: RETURN    R0 1         ; return 
196 [-]: GETUPVAL  R20 U2       ; R20 := U2
197 [-]: GETTABLE  R20 R20 K49  ; R20 := R20[0x5273af13]
198 [-]: LOADK     R21 K50      ; R21 := "dce"
199 [-]: LOADBOOL  R22 1 0      ; R22 := true
200 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
201 [-]: TEST      R20 0        ; if not R20 then PC := 204
202 [-]: JMP       204          ; PC := 204
203 [-]: NOT       R20 R1       ; R20 := not R1
204 [-]: TEST      R20 0        ; if not R20 then PC := 228
205 [-]: JMP       228          ; PC := 228
206 [-]: GETGLOBAL R21 K32      ; R21 := _T
207 [-]: GETTABLE  R21 R21 K33  ; R21 := R21["gDojoData"]
208 [-]: GETTABLE  R21 R21 K37  ; R21 := R21["ContentURL"]
209 [-]: EQ        1 R21 K43    ; if R21 == "" then PC := 228
210 [-]: JMP       228          ; PC := 228
211 [-]: GETGLOBAL R21 K51      ; R21 := 0xa94df70b
212 [-]: SELF      R21 R21 K52  ; R22 := R21; R21 := R21[0x78040d9c]
213 [-]: GETGLOBAL R23 K32      ; R23 := _T
214 [-]: GETTABLE  R23 R23 K33  ; R23 := R23["gDojoData"]
215 [-]: GETTABLE  R23 R23 K37  ; R23 := R23["ContentURL"]
216 [-]: LOADBOOL  R24 1 0      ; R24 := true
217 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
218 [-]: TEST      R21 0        ; if not R21 then PC := 228
219 [-]: JMP       228          ; PC := 228
220 [-]: GETGLOBAL R21 K53      ; R21 := 0x34291f5c
221 [-]: GETTABLE  R21 R21 K54  ; R21 := R21[0x201a0824]
222 [-]: GETGLOBAL R22 K32      ; R22 := _T
223 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["gDojoData"]
224 [-]: GETTABLE  R22 R22 K37  ; R22 := R22["ContentURL"]
225 [-]: LOADK     R23 K55      ; R23 := "OnDojoData"
226 [-]: CALL      R21 3 1      ; R21(R22,R23)
227 [-]: JMP       301          ; PC := 301
228 [-]: SELF      R21 R17 K56  ; R22 := R17; R21 := R17[0x1012c7ec]
229 [-]: CALL      R21 2 2      ; R21 := R21(R22)
230 [-]: GETGLOBAL R22 K53      ; R22 := 0x34291f5c
231 [-]: GETTABLE  R22 R22 K54  ; R22 := R22[0x201a0824]
232 [-]: GETGLOBAL R23 K51      ; R23 := 0xa94df70b
233 [-]: SELF      R23 R23 K57  ; R24 := R23; R23 := R23[0x2608b62f]
234 [-]: CALL      R23 2 2      ; R23 := R23(R24)
235 [-]: LOADK     R24 K58      ; R24 := "getGuildDojo.php?"
236 [-]: MOVE      R25 R21      ; R25 := R21
237 [-]: LOADK     R26 K59      ; R26 := "&guildId="
238 [-]: GETGLOBAL R27 K32      ; R27 := _T
239 [-]: GETTABLE  R27 R27 K33  ; R27 := R27["gDojoData"]
240 [-]: GETTABLE  R27 R27 K36  ; R27 := R27["GuildId"]
241 [-]: CONCAT    R23 R23 R27  ; R23 := R23 .. R24 .. R25 .. R26 .. R27
242 [-]: LOADK     R24 K55      ; R24 := "OnDojoData"
243 [-]: CALL      R22 3 1      ; R22(R23,R24)
244 [-]: JMP       301          ; PC := 301
245 [-]: GETUPVAL  R22 U3       ; R22 := U3
246 [-]: GETTABLE  R22 R22 K60  ; R22 := R22[0x05b69533]
247 [-]: GETGLOBAL R23 K7       ; R23 := 0x0469f296
248 [-]: MOVE      R24 R0       ; R24 := R0
249 [-]: CALL      R23 2 2      ; R23 := R23(R24)
250 [-]: MOVE      R24 R6       ; R24 := R6
251 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
252 [-]: GETGLOBAL R23 K0       ; R23 := 0x7b998233
253 [-]: MOVE      R24 R22      ; R24 := R22
254 [-]: CALL      R23 2 2      ; R23 := R23(R24)
255 [-]: TEST      R23 0        ; if not R23 then PC := 261
256 [-]: JMP       261          ; PC := 261
257 [-]: GETGLOBAL R23 K23      ; R23 := 0x3d106989
258 [-]: LOADK     R24 K61      ; R24 := "LevelArgs are null, cannot open level"
259 [-]: CALL      R23 2 1      ; R23(R24)
260 [-]: RETURN    R0 1         ; return 
261 [-]: SETTABLE  R22 K62 K63  ; R22["loadFromLobby"] := false
262 [-]: GETGLOBAL R23 K64      ; R23 := 0x89326c93
263 [-]: SELF      R23 R23 K65  ; R24 := R23; R23 := R23[0x18d05d30]
264 [-]: CALL      R23 2 2      ; R23 := R23(R24)
265 [-]: TEST      R23 1        ; if R23 then PC := 297
266 [-]: JMP       297          ; PC := 297
267 [-]: GETGLOBAL R23 K1       ; R23 := 0xbe190284
268 [-]: SELF      R23 R23 K66  ; R24 := R23; R23 := R23[0xf2deaf69]
269 [-]: GETGLOBAL R25 K67      ; R25 := gLotusAttractModeGameRulesType
270 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
271 [-]: TEST      R23 0        ; if not R23 then PC := 297
272 [-]: JMP       297          ; PC := 297
273 [-]: SETTABLE  R22 K68 K35  ; R22["loadToLobby"] := true
274 [-]: SETTABLE  R22 K69 K35  ; R22["isLobby"] := true
275 [-]: GETGLOBAL R23 K28      ; R23 := 0x76ea806b
276 [-]: SELF      R23 R23 K29  ; R24 := R23; R23 := R23[0x3f3ae64c]
277 [-]: LOADK     R25 0        ; R25 := 0.000000
278 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
279 [-]: SELF      R24 R23 K70  ; R25 := R23; R24 := R23[0x80563238]
280 [-]: CALL      R24 2 2      ; R24 := R24(R25)
281 [-]: SELF      R25 R24 K71  ; R26 := R24; R25 := R24[0xe4b15c4a]
282 [-]: MOVE      R27 R22      ; R27 := R22
283 [-]: MOVE      R28 R0       ; R28 := R0
284 [-]: GETUPVAL  R29 U1       ; R29 := U1
285 [-]: GETTABLE  R29 R29 K72  ; R29 := R29["HUB_TAG"]
286 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
287 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
288 [-]: GETGLOBAL R25 K25      ; R25 := 0xe7f2b02f
289 [-]: SELF      R25 R25 K26  ; R26 := R25; R25 := R25[0x3b62d69a]
290 [-]: MOVE      R27 R0       ; R27 := R0
291 [-]: CALL      R25 3 1      ; R25(R26,R27)
292 [-]: GETGLOBAL R25 K53      ; R25 := 0x34291f5c
293 [-]: GETTABLE  R25 R25 K73  ; R25 := R25[0x8ee24660]
294 [-]: LOADBOOL  R26 1 0      ; R26 := true
295 [-]: CALL      R25 2 1      ; R25(R26)
296 [-]: RETURN    R0 1         ; return 
297 [-]: GETGLOBAL R25 K53      ; R25 := 0x34291f5c
298 [-]: GETTABLE  R25 R25 K74  ; R25 := R25[0x4e0a1dfc]
299 [-]: MOVE      R26 R22      ; R26 := R22
300 [-]: CALL      R25 2 1      ; R25(R26)
301 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 5231
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: NEWTABLE  R0 14 0      ; R0 := {}
  2 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  3 [-]: SETTABLE  R1 K0 K1     ; R1["Collection"] := "weekly.accounts.ZephyrScore"
  4 [-]: GETGLOBAL R2 K3        ; R2 := 0x603636ad
  5 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Language/Menu/Profile_ZephyrLeaderboard"
  6 [-]: LOADNIL   R4 R4        ; R4 := nil
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: SETTABLE  R1 K2 R2     ; R1["Title"] := R2
  9 [-]: SETTABLE  R1 K5 K6     ; R1["Weekly"] := true
 10 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 11 [-]: SETTABLE  R2 K0 K7     ; R2["Collection"] := "weekly.accounts.SentinelGameScore"
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x603636ad
 13 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/Profile_SentinelGameLeaderboard"
 14 [-]: LOADNIL   R5 R5        ; R5 := nil
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: SETTABLE  R2 K2 R3     ; R2["Title"] := R3
 17 [-]: SETTABLE  R2 K5 K6     ; R2["Weekly"] := true
 18 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 19 [-]: SETTABLE  R3 K0 K9     ; R3["Collection"] := "weekly.accounts.DojoObstacleScore"
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x603636ad
 21 [-]: LOADK     R5 K10       ; R5 := "/Lotus/Language/Menu/Profile_ObstacleScoreLeaderboard"
 22 [-]: LOADNIL   R6 R6        ; R6 := nil
 23 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 24 [-]: SETTABLE  R3 K2 R4     ; R3["Title"] := R4
 25 [-]: SETTABLE  R3 K5 K6     ; R3["Weekly"] := true
 26 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 27 [-]: SETTABLE  R4 K0 K11    ; R4["Collection"] := "weekly.speedball.accounts.SB_WINS"
 28 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
 29 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x42b04007]
 30 [-]: LOADK     R7 K14       ; R7 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 31 [-]: LOADBOOL  R8 1 0       ; R8 := true
 32 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 33 [-]: GETGLOBAL R10 K3       ; R10 := 0x603636ad
 34 [-]: LOADK     R11 K16      ; R11 := "/Lotus/Language/Menu/Profile_SpeedballWins"
 35 [-]: LOADNIL   R12 R12      ; R12 := nil
 36 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 37 [-]: SETTABLE  R9 K15 R10   ; R9["TYPE"] := R10
 38 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 39 [-]: SETTABLE  R4 K2 R5     ; R4["Title"] := R5
 40 [-]: SETTABLE  R4 K5 K6     ; R4["Weekly"] := true
 41 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 42 [-]: SETTABLE  R5 K0 K17    ; R5["Collection"] := "weekly.speedball.accounts.SB_POINTS"
 43 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
 44 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x42b04007]
 45 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 46 [-]: LOADBOOL  R9 1 0       ; R9 := true
 47 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 48 [-]: GETGLOBAL R11 K3       ; R11 := 0x603636ad
 49 [-]: LOADK     R12 K18      ; R12 := "/Lotus/Language/Menu/Profile_SpeedballPoints"
 50 [-]: LOADNIL   R13 R13      ; R13 := nil
 51 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 52 [-]: SETTABLE  R10 K15 R11  ; R10["TYPE"] := R11
 53 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 54 [-]: SETTABLE  R5 K2 R6     ; R5["Title"] := R6
 55 [-]: SETTABLE  R5 K5 K6     ; R5["Weekly"] := true
 56 [-]: NEWTABLE  R6 0 3       ; R6 := {}
 57 [-]: SETTABLE  R6 K0 K19    ; R6["Collection"] := "weekly.speedball.accounts.SB_GOALS"
 58 [-]: GETGLOBAL R7 K12       ; R7 := 0xae91e43b
 59 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0x42b04007]
 60 [-]: LOADK     R9 K14       ; R9 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 61 [-]: LOADBOOL  R10 1 0      ; R10 := true
 62 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 63 [-]: GETGLOBAL R12 K3       ; R12 := 0x603636ad
 64 [-]: LOADK     R13 K20      ; R13 := "/Lotus/Language/Menu/Profile_SpeedballGoals"
 65 [-]: LOADNIL   R14 R14      ; R14 := nil
 66 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 67 [-]: SETTABLE  R11 K15 R12  ; R11["TYPE"] := R12
 68 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 69 [-]: SETTABLE  R6 K2 R7     ; R6["Title"] := R7
 70 [-]: SETTABLE  R6 K5 K6     ; R6["Weekly"] := true
 71 [-]: NEWTABLE  R7 0 3       ; R7 := {}
 72 [-]: SETTABLE  R7 K0 K21    ; R7["Collection"] := "weekly.speedball.accounts.SB_ASSISTS"
 73 [-]: GETGLOBAL R8 K12       ; R8 := 0xae91e43b
 74 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x42b04007]
 75 [-]: LOADK     R10 K14      ; R10 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 76 [-]: LOADBOOL  R11 1 0      ; R11 := true
 77 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 78 [-]: GETGLOBAL R13 K3       ; R13 := 0x603636ad
 79 [-]: LOADK     R14 K22      ; R14 := "/Lotus/Language/Menu/Profile_SpeedballAssists"
 80 [-]: LOADNIL   R15 R15      ; R15 := nil
 81 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 82 [-]: SETTABLE  R12 K15 R13  ; R12["TYPE"] := R13
 83 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 84 [-]: SETTABLE  R7 K2 R8     ; R7["Title"] := R8
 85 [-]: SETTABLE  R7 K5 K6     ; R7["Weekly"] := true
 86 [-]: NEWTABLE  R8 0 3       ; R8 := {}
 87 [-]: SETTABLE  R8 K0 K23    ; R8["Collection"] := "weekly.speedball.accounts.SB_REBOUNDS"
 88 [-]: GETGLOBAL R9 K12       ; R9 := 0xae91e43b
 89 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0x42b04007]
 90 [-]: LOADK     R11 K14      ; R11 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
 91 [-]: LOADBOOL  R12 1 0      ; R12 := true
 92 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 93 [-]: GETGLOBAL R14 K3       ; R14 := 0x603636ad
 94 [-]: LOADK     R15 K24      ; R15 := "/Lotus/Language/Menu/Profile_SpeedballRebounds"
 95 [-]: LOADNIL   R16 R16      ; R16 := nil
 96 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 97 [-]: SETTABLE  R13 K15 R14  ; R13["TYPE"] := R14
 98 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 99 [-]: SETTABLE  R8 K2 R9     ; R8["Title"] := R9
100 [-]: SETTABLE  R8 K5 K6     ; R8["Weekly"] := true
101 [-]: NEWTABLE  R9 0 3       ; R9 := {}
102 [-]: SETTABLE  R9 K0 K25    ; R9["Collection"] := "weekly.speedball.accounts.SB_SAVES"
103 [-]: GETGLOBAL R10 K12      ; R10 := 0xae91e43b
104 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0x42b04007]
105 [-]: LOADK     R12 K14      ; R12 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
106 [-]: LOADBOOL  R13 1 0      ; R13 := true
107 [-]: NEWTABLE  R14 0 1      ; R14 := {}
108 [-]: GETGLOBAL R15 K3       ; R15 := 0x603636ad
109 [-]: LOADK     R16 K26      ; R16 := "/Lotus/Language/Menu/Profile_SpeedballSaves"
110 [-]: LOADNIL   R17 R17      ; R17 := nil
111 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
112 [-]: SETTABLE  R14 K15 R15  ; R14["TYPE"] := R15
113 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
114 [-]: SETTABLE  R9 K2 R10    ; R9["Title"] := R10
115 [-]: SETTABLE  R9 K5 K6     ; R9["Weekly"] := true
116 [-]: NEWTABLE  R10 0 3      ; R10 := {}
117 [-]: SETTABLE  R10 K0 K27   ; R10["Collection"] := "weekly.speedball.accounts.SB_PASSES"
118 [-]: GETGLOBAL R11 K12      ; R11 := 0xae91e43b
119 [-]: SELF      R11 R11 K13  ; R12 := R11; R11 := R11[0x42b04007]
120 [-]: LOADK     R13 K14      ; R13 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
121 [-]: LOADBOOL  R14 1 0      ; R14 := true
122 [-]: NEWTABLE  R15 0 1      ; R15 := {}
123 [-]: GETGLOBAL R16 K3       ; R16 := 0x603636ad
124 [-]: LOADK     R17 K28      ; R17 := "/Lotus/Language/Menu/Profile_SpeedballPasses"
125 [-]: LOADNIL   R18 R18      ; R18 := nil
126 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
127 [-]: SETTABLE  R15 K15 R16  ; R15["TYPE"] := R16
128 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
129 [-]: SETTABLE  R10 K2 R11   ; R10["Title"] := R11
130 [-]: SETTABLE  R10 K5 K6    ; R10["Weekly"] := true
131 [-]: NEWTABLE  R11 0 3      ; R11 := {}
132 [-]: SETTABLE  R11 K0 K29   ; R11["Collection"] := "weekly.speedball.accounts.SB_CATCHES"
133 [-]: GETGLOBAL R12 K12      ; R12 := 0xae91e43b
134 [-]: SELF      R12 R12 K13  ; R13 := R12; R12 := R12[0x42b04007]
135 [-]: LOADK     R14 K14      ; R14 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
136 [-]: LOADBOOL  R15 1 0      ; R15 := true
137 [-]: NEWTABLE  R16 0 1      ; R16 := {}
138 [-]: GETGLOBAL R17 K3       ; R17 := 0x603636ad
139 [-]: LOADK     R18 K30      ; R18 := "/Lotus/Language/Menu/Profile_SpeedballCatches"
140 [-]: LOADNIL   R19 R19      ; R19 := nil
141 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
142 [-]: SETTABLE  R16 K15 R17  ; R16["TYPE"] := R17
143 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
144 [-]: SETTABLE  R11 K2 R12   ; R11["Title"] := R12
145 [-]: SETTABLE  R11 K5 K6    ; R11["Weekly"] := true
146 [-]: NEWTABLE  R12 0 3      ; R12 := {}
147 [-]: SETTABLE  R12 K0 K31   ; R12["Collection"] := "weekly.speedball.accounts.SB_INTERCEPTIONS"
148 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
149 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13[0x42b04007]
150 [-]: LOADK     R15 K14      ; R15 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
151 [-]: LOADBOOL  R16 1 0      ; R16 := true
152 [-]: NEWTABLE  R17 0 1      ; R17 := {}
153 [-]: GETGLOBAL R18 K3       ; R18 := 0x603636ad
154 [-]: LOADK     R19 K32      ; R19 := "/Lotus/Language/Menu/Profile_SpeedballInterceptions"
155 [-]: LOADNIL   R20 R20      ; R20 := nil
156 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
157 [-]: SETTABLE  R17 K15 R18  ; R17["TYPE"] := R18
158 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
159 [-]: SETTABLE  R12 K2 R13   ; R12["Title"] := R13
160 [-]: SETTABLE  R12 K5 K6    ; R12["Weekly"] := true
161 [-]: NEWTABLE  R13 0 3      ; R13 := {}
162 [-]: SETTABLE  R13 K0 K33   ; R13["Collection"] := "weekly.speedball.accounts.SB_CHECKS"
163 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
164 [-]: SELF      R14 R14 K13  ; R15 := R14; R14 := R14[0x42b04007]
165 [-]: LOADK     R16 K14      ; R16 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
166 [-]: LOADBOOL  R17 1 0      ; R17 := true
167 [-]: NEWTABLE  R18 0 1      ; R18 := {}
168 [-]: GETGLOBAL R19 K3       ; R19 := 0x603636ad
169 [-]: LOADK     R20 K34      ; R20 := "/Lotus/Language/Menu/Profile_SpeedballChecks"
170 [-]: LOADNIL   R21 R21      ; R21 := nil
171 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
172 [-]: SETTABLE  R18 K15 R19  ; R18["TYPE"] := R19
173 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
174 [-]: SETTABLE  R13 K2 R14   ; R13["Title"] := R14
175 [-]: SETTABLE  R13 K5 K6    ; R13["Weekly"] := true
176 [-]: NEWTABLE  R14 0 3      ; R14 := {}
177 [-]: SETTABLE  R14 K0 K35   ; R14["Collection"] := "weekly.speedball.accounts.SB_STEALS"
178 [-]: GETGLOBAL R15 K12      ; R15 := 0xae91e43b
179 [-]: SELF      R15 R15 K13  ; R16 := R15; R15 := R15[0x42b04007]
180 [-]: LOADK     R17 K14      ; R17 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
181 [-]: LOADBOOL  R18 1 0      ; R18 := true
182 [-]: NEWTABLE  R19 0 1      ; R19 := {}
183 [-]: GETGLOBAL R20 K3       ; R20 := 0x603636ad
184 [-]: LOADK     R21 K36      ; R21 := "/Lotus/Language/Menu/Profile_SpeedballSteals"
185 [-]: LOADNIL   R22 R22      ; R22 := nil
186 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
187 [-]: SETTABLE  R19 K15 R20  ; R19["TYPE"] := R20
188 [-]: CALL      R15 5 2      ; R15 := R15(R16,R17,R18,R19)
189 [-]: SETTABLE  R14 K2 R15   ; R14["Title"] := R15
190 [-]: SETTABLE  R14 K5 K6    ; R14["Weekly"] := true
191 [-]: SETLIST   R0 14 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 14
192 [-]: GETUPVAL  R1 U0        ; R1 := U0
193 [-]: GETTABLE  R1 R1 K37    ; R1 := R1[0x5e35d4d6]
194 [-]: CALL      R1 1 2       ; R1 := R1()
195 [-]: SELF      R2 R1 K38    ; R3 := R1; R2 := R1[0xd13b47be]
196 [-]: CALL      R2 2 2       ; R2 := R2(R3)
197 [-]: SELF      R3 R1 K39    ; R4 := R1; R3 := R1[0xc1dee03f]
198 [-]: CALL      R3 2 2       ; R3 := R3(R4)
199 [-]: LOADK     R4 1         ; R4 := 1.000000
200 [-]: LEN       R5 R3        ; R5 := # R3
201 [-]: LOADK     R6 1         ; R6 := 1.000000
202 [-]: FORPREP   R4 289       ; R4 -= R6; PC := 289
203 [-]: GETGLOBAL R8 K40       ; R8 := 0xce225efa
204 [-]: LOADK     R9 0         ; R9 := 0.000000
205 [-]: CALL      R8 2 1       ; R8(R9)
206 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
207 [-]: LOADK     R9 1         ; R9 := 1.000000
208 [-]: LEN       R10 R2       ; R10 := # R2
209 [-]: LOADK     R11 1        ; R11 := 1.000000
210 [-]: FORPREP   R9 288       ; R9 -= R11; PC := 288
211 [-]: GETTABLE  R13 R2 R12   ; R13 := R2[R12]
212 [-]: GETTABLE  R14 R13 K41  ; R14 := R13["region"]
213 [-]: ADD       R14 R14 K42  ; R14 := R14 + 1.000000
214 [-]: EQ        0 R14 R7     ; if R14 ~= R7 then PC := 288
215 [-]: JMP       288          ; PC := 288
216 [-]: GETTABLE  R14 R13 K43  ; R14 := R13["name"]
217 [-]: SELF      R14 R14 K44  ; R15 := R14; R14 := R14[0x56c01834]
218 [-]: CALL      R14 2 2      ; R14 := R14(R15)
219 [-]: TEST      R14 0        ; if not R14 then PC := 288
220 [-]: JMP       288          ; PC := 288
221 [-]: GETTABLE  R14 R13 K45  ; R14 := R13["nodeType"]
222 [-]: EQ        1 R14 K47    ; if R14 == 0.000000 then PC := 227
223 [-]: JMP       227          ; PC := 227
224 [-]: GETTABLE  R14 R13 K45  ; R14 := R13["nodeType"]
225 [-]: EQ        0 R14 K48    ; if R14 ~= 4.000000 then PC := 288
226 [-]: JMP       288          ; PC := 288
227 [-]: SELF      R14 R1 K49   ; R15 := R1; R14 := R1[0xc18bf6f0]
228 [-]: GETTABLE  R16 R13 K43  ; R16 := R13["name"]
229 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
230 [-]: GETTABLE  R15 R14 K50  ; R15 := R14["missionType"]
231 [-]: EQ        0 R15 K51    ; if R15 ~= 8.000000 then PC := 236
232 [-]: JMP       236          ; PC := 236
233 [-]: GETTABLE  R16 R14 K52  ; R16 := R14["maxWaveNum"]
234 [-]: EQ        1 R16 K47    ; if R16 == 0.000000 then PC := 254
235 [-]: JMP       254          ; PC := 254
236 [-]: EQ        1 R15 K53    ; if R15 == 2.000000 then PC := 254
237 [-]: JMP       254          ; PC := 254
238 [-]: EQ        1 R15 K54    ; if R15 == 13.000000 then PC := 254
239 [-]: JMP       254          ; PC := 254
240 [-]: EQ        1 R15 K55    ; if R15 == 17.000000 then PC := 254
241 [-]: JMP       254          ; PC := 254
242 [-]: EQ        1 R15 K56    ; if R15 == 27.000000 then PC := 254
243 [-]: JMP       254          ; PC := 254
244 [-]: EQ        1 R15 K57    ; if R15 == 30.000000 then PC := 254
245 [-]: JMP       254          ; PC := 254
246 [-]: EQ        1 R15 K58    ; if R15 == 32.000000 then PC := 254
247 [-]: JMP       254          ; PC := 254
248 [-]: EQ        1 R15 K59    ; if R15 == 33.000000 then PC := 254
249 [-]: JMP       254          ; PC := 254
250 [-]: EQ        1 R15 K60    ; if R15 == 34.000000 then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: EQ        0 R15 K61    ; if R15 ~= 35.000000 then PC := 288
253 [-]: JMP       288          ; PC := 288
254 [-]: GETGLOBAL R16 K12      ; R16 := 0xae91e43b
255 [-]: SELF      R16 R16 K13  ; R17 := R16; R16 := R16[0x42b04007]
256 [-]: GETTABLE  R18 R8 K43   ; R18 := R8["name"]
257 [-]: LOADBOOL  R19 1 0      ; R19 := true
258 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
259 [-]: GETGLOBAL R17 K12      ; R17 := 0xae91e43b
260 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17[0x42b04007]
261 [-]: GETTABLE  R19 R13 K62  ; R19 := R13["locTag"]
262 [-]: SELF      R19 R19 K63  ; R20 := R19; R19 := R19[0x6d604ba7]
263 [-]: CALL      R19 2 2      ; R19 := R19(R20)
264 [-]: LOADBOOL  R20 1 0      ; R20 := true
265 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
266 [-]: GETGLOBAL R18 K12      ; R18 := 0xae91e43b
267 [-]: SELF      R18 R18 K13  ; R19 := R18; R18 := R18[0x42b04007]
268 [-]: LOADK     R20 K64      ; R20 := "/Lotus/Language/Menu/RegionNode"
269 [-]: LOADBOOL  R21 1 0      ; R21 := true
270 [-]: NEWTABLE  R22 0 2      ; R22 := {}
271 [-]: SETTABLE  R22 K65 R16  ; R22["REGION"] := R16
272 [-]: SETTABLE  R22 K66 R17  ; R22["NODE"] := R17
273 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
274 [-]: NEWTABLE  R19 0 3      ; R19 := {}
275 [-]: LOADK     R20 K67      ; R20 := "weekly.accounts."
276 [-]: GETTABLE  R21 R13 K43  ; R21 := R13["name"]
277 [-]: SELF      R21 R21 K63  ; R22 := R21; R21 := R21[0x6d604ba7]
278 [-]: CALL      R21 2 2      ; R21 := R21(R22)
279 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
280 [-]: SETTABLE  R19 K0 R20   ; R19["Collection"] := R20
281 [-]: SETTABLE  R19 K2 R18   ; R19["Title"] := R18
282 [-]: SETTABLE  R19 K5 K6    ; R19["Weekly"] := true
283 [-]: GETGLOBAL R20 K68      ; R20 := 0x33bdd652
284 [-]: GETTABLE  R20 R20 K69  ; R20 := R20[0x23d5322f]
285 [-]: MOVE      R21 R0       ; R21 := R0
286 [-]: MOVE      R22 R19      ; R22 := R19
287 [-]: CALL      R20 3 1      ; R20(R21,R22)
288 [-]: FORLOOP   R9 211       ; R9 += R11; if R9 <= R10 then begin PC := 211; R12 := R9 end
289 [-]: FORLOOP   R4 203       ; R4 += R6; if R4 <= R5 then begin PC := 203; R7 := R4 end
290 [-]: RETURN    R0 2         ; return R0
291 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 5290
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xcb79539e
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 69
  5 [-]: JMP       69           ; PC := 69
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ShowNotification"]
  8 [-]: EQ        1 R0 K4      ; if R0 == nil then PC := 69
  9 [-]: JMP       69           ; PC := 69
 10 [-]: GETGLOBAL R0 K1        ; R0 := 0xcb79539e
 11 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x3689bfc7]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 69
 14 [-]: JMP       69           ; PC := 69
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: CALL      R0 1 2       ; R0 := R0()
 17 [-]: GETGLOBAL R1 K1        ; R1 := 0xcb79539e
 18 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x366febf1]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: LOADK     R2 1         ; R2 := 1.000000
 21 [-]: LEN       R3 R1        ; R3 := # R1
 22 [-]: LOADK     R4 1         ; R4 := 1.000000
 23 [-]: FORPREP   R2 65        ; R2 -= R4; PC := 65
 24 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 25 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["leaderboard"]
 26 [-]: GETTABLE  R7 R1 R5     ; R7 := R1[R5]
 27 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["rank"]
 28 [-]: LOADK     R8 1         ; R8 := 1.000000
 29 [-]: LEN       R9 R0        ; R9 := # R0
 30 [-]: LOADK     R10 1        ; R10 := 1.000000
 31 [-]: FORPREP   R8 64        ; R8 -= R10; PC := 64
 32 [-]: GETTABLE  R12 R0 R11   ; R12 := R0[R11]
 33 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Collection"]
 34 [-]: EQ        0 R12 R6     ; if R12 ~= R6 then PC := 64
 35 [-]: JMP       64           ; PC := 64
 36 [-]: LOADK     R12 K10      ; R12 := "/Lotus/Language/Menu/LeaderboardPlacement"
 37 [-]: GETTABLE  R13 R0 R11   ; R13 := R0[R11]
 38 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["Weekly"]
 39 [-]: TEST      R13 0        ; if not R13 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADK     R12 K12      ; R12 := "/Lotus/Language/Menu/LeaderboardPlacementWeekly"
 42 [-]: GETGLOBAL R13 K13      ; R13 := 0xae91e43b
 43 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13[0x42b04007]
 44 [-]: MOVE      R15 R12      ; R15 := R12
 45 [-]: LOADBOOL  R16 1 0      ; R16 := true
 46 [-]: NEWTABLE  R17 0 2      ; R17 := {}
 47 [-]: SETTABLE  R17 K15 R7   ; R17["RANK"] := R7
 48 [-]: GETTABLE  R18 R0 R11   ; R18 := R0[R11]
 49 [-]: GETTABLE  R18 R18 K17  ; R18 := R18["Title"]
 50 [-]: SETTABLE  R17 K16 R18  ; R17["LEADERBOARD"] := R18
 51 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
 52 [-]: GETGLOBAL R14 K2       ; R14 := _T
 53 [-]: GETTABLE  R14 R14 K18  ; R14 := R14[0x7dce37bc]
 54 [-]: MOVE      R15 R13      ; R15 := R13
 55 [-]: LOADK     R16 K19      ; R16 := "Leaderboard"
 56 [-]: CALL      R14 3 1      ; R14(R15,R16)
 57 [-]: GETGLOBAL R14 K20      ; R14 := 0x3d106989
 58 [-]: LOADK     R15 K21      ; R15 := "LB Placement: \""
 59 [-]: MOVE      R16 R13      ; R16 := R13
 60 [-]: LOADK     R17 K22      ; R17 := "\""
 61 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
 62 [-]: CALL      R14 2 1      ; R14(R15)
 63 [-]: JMP       65           ; PC := 65
 64 [-]: FORLOOP   R8 32        ; R8 += R10; if R8 <= R9 then begin PC := 32; R11 := R8 end
 65 [-]: FORLOOP   R2 24        ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
 66 [-]: GETGLOBAL R14 K1       ; R14 := 0xcb79539e
 67 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14[0x72876f0a]
 68 [-]: CALL      R14 2 1      ; R14(R15)
 69 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 5314
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xff9d1292]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: LOADBOOL  R1 1 0       ; R1 := true
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  6 [-]: GETGLOBAL R3 K2        ; R3 := mStyleBackgroundMovie
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 28
  9 [-]: JMP       28           ; PC := 28
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETGLOBAL R2 K2        ; R2 := mStyleBackgroundMovie
 16 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x492f9da2]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x7ed0a956
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: LOADBOOL  R1 0 0       ; R1 := false
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R2 K2        ; R2 := mStyleBackgroundMovie
 26 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x32302b4a]
 27 [-]: CALL      R2 2 1       ; R2(R3)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 31 [-]: MOVE      R3 R0        ; R3 := R0
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 42
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETGLOBAL R2 K6        ; R2 := _T
 36 [-]: SETTABLE  R2 K7 K8     ; R2["BackgroundVisible"] := nil
 37 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 38 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x1fd6abd0]
 39 [-]: MOVE      R4 R0        ; R4 := R0
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: SETGLOBAL R2 K2        ; mStyleBackgroundMovie := R2
 42 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 5332
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xced66ef6]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 186
  8 [-]: JMP       186          ; PC := 186
  9 [-]: CLOSURE   R1 0         ; R1 := closure(Function #142.1)
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: LOADK     R4 0         ; R4 := 0.000000
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SETTABLE  R2 K3 R3     ; R2["UISound_Open"] := R3
 16 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: LOADK     R4 1         ; R4 := 1.000000
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: SETTABLE  R2 K5 R3     ; R2["UISound_Close"] := R3
 21 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: LOADK     R4 2         ; R4 := 2.000000
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: SETTABLE  R2 K6 R3     ; R2["UISound_HudAchievement"] := R3
 26 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: LOADK     R4 3         ; R4 := 3.000000
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: SETTABLE  R2 K7 R3     ; R2["UISound_Focus"] := R3
 31 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: LOADK     R4 4         ; R4 := 4.000000
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SETTABLE  R2 K8 R3     ; R2["UISound_Unfocus"] := R3
 36 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: LOADK     R4 5         ; R4 := 5.000000
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: SETTABLE  R2 K9 R3     ; R2["UISound_Select"] := R3
 41 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 42 [-]: MOVE      R3 R1        ; R3 := R1
 43 [-]: LOADK     R4 6         ; R4 := 6.000000
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: SETTABLE  R2 K10 R3    ; R2["UISound_Scroll"] := R3
 46 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 47 [-]: MOVE      R3 R1        ; R3 := R1
 48 [-]: LOADK     R4 7         ; R4 := 7.000000
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: SETTABLE  R2 K11 R3    ; R2["UISound_Purchase"] := R3
 51 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 52 [-]: MOVE      R3 R1        ; R3 := R1
 53 [-]: LOADK     R4 8         ; R4 := 8.000000
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: SETTABLE  R2 K12 R3    ; R2["UISound_Error"] := R3
 56 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 57 [-]: MOVE      R3 R1        ; R3 := R1
 58 [-]: LOADK     R4 9         ; R4 := 9.000000
 59 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 60 [-]: SETTABLE  R2 K13 R3    ; R2["UISound_Type"] := R3
 61 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 62 [-]: MOVE      R3 R1        ; R3 := R1
 63 [-]: LOADK     R4 10        ; R4 := 10.000000
 64 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 65 [-]: SETTABLE  R2 K14 R3    ; R2["UISound_SearchType"] := R3
 66 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 67 [-]: MOVE      R3 R1        ; R3 := R1
 68 [-]: LOADK     R4 11        ; R4 := 11.000000
 69 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 70 [-]: SETTABLE  R2 K15 R3    ; R2["UISound_GridOpen"] := R3
 71 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 72 [-]: MOVE      R3 R1        ; R3 := R1
 73 [-]: LOADK     R4 12        ; R4 := 12.000000
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: SETTABLE  R2 K16 R3    ; R2["UISound_GridOpenTwo"] := R3
 76 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 77 [-]: MOVE      R3 R1        ; R3 := R1
 78 [-]: LOADK     R4 13        ; R4 := 13.000000
 79 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 80 [-]: SETTABLE  R2 K17 R3    ; R2["UISound_GridRow"] := R3
 81 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 82 [-]: MOVE      R3 R1        ; R3 := R1
 83 [-]: LOADK     R4 14        ; R4 := 14.000000
 84 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 85 [-]: SETTABLE  R2 K18 R3    ; R2["UISound_DialogOpen"] := R3
 86 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 87 [-]: MOVE      R3 R1        ; R3 := R1
 88 [-]: LOADK     R4 15        ; R4 := 15.000000
 89 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 90 [-]: SETTABLE  R2 K19 R3    ; R2["UISound_DialogClose"] := R3
 91 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 92 [-]: MOVE      R3 R1        ; R3 := R1
 93 [-]: LOADK     R4 16        ; R4 := 16.000000
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: SETTABLE  R2 K20 R3    ; R2["UISound_Countdown"] := R3
 96 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 97 [-]: MOVE      R3 R1        ; R3 := R1
 98 [-]: LOADK     R4 17        ; R4 := 17.000000
 99 [-]: CALL      R3 2 2       ; R3 := R3(R4)
100 [-]: SETTABLE  R2 K21 R3    ; R2["UISound_ItemTip"] := R3
101 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
102 [-]: MOVE      R3 R1        ; R3 := R1
103 [-]: LOADK     R4 18        ; R4 := 18.000000
104 [-]: CALL      R3 2 2       ; R3 := R3(R4)
105 [-]: SETTABLE  R2 K22 R3    ; R2["UISound_ItemTipSection"] := R3
106 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
107 [-]: MOVE      R3 R1        ; R3 := R1
108 [-]: LOADK     R4 19        ; R4 := 19.000000
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: SETTABLE  R2 K23 R3    ; R2["UISound_ButtonSelect"] := R3
111 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
112 [-]: MOVE      R3 R1        ; R3 := R1
113 [-]: LOADK     R4 20        ; R4 := 20.000000
114 [-]: CALL      R3 2 2       ; R3 := R3(R4)
115 [-]: SETTABLE  R2 K24 R3    ; R2["UISound_CursorBlink"] := R3
116 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
117 [-]: MOVE      R3 R1        ; R3 := R1
118 [-]: LOADK     R4 21        ; R4 := 21.000000
119 [-]: CALL      R3 2 2       ; R3 := R3(R4)
120 [-]: SETTABLE  R2 K25 R3    ; R2["UISound_SweetenerOne"] := R3
121 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
122 [-]: MOVE      R3 R1        ; R3 := R1
123 [-]: LOADK     R4 22        ; R4 := 22.000000
124 [-]: CALL      R3 2 2       ; R3 := R3(R4)
125 [-]: SETTABLE  R2 K26 R3    ; R2["UISound_SweetenerTwo"] := R3
126 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
127 [-]: MOVE      R3 R1        ; R3 := R1
128 [-]: LOADK     R4 23        ; R4 := 23.000000
129 [-]: CALL      R3 2 2       ; R3 := R3(R4)
130 [-]: SETTABLE  R2 K27 R3    ; R2["UISound_WindowOpen"] := R3
131 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
132 [-]: MOVE      R3 R1        ; R3 := R1
133 [-]: LOADK     R4 24        ; R4 := 24.000000
134 [-]: CALL      R3 2 2       ; R3 := R3(R4)
135 [-]: SETTABLE  R2 K28 R3    ; R2["UISound_WindowClose"] := R3
136 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
137 [-]: MOVE      R3 R1        ; R3 := R1
138 [-]: LOADK     R4 25        ; R4 := 25.000000
139 [-]: CALL      R3 2 2       ; R3 := R3(R4)
140 [-]: SETTABLE  R2 K29 R3    ; R2["UISound_LoginSuccess"] := R3
141 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
142 [-]: MOVE      R3 R1        ; R3 := R1
143 [-]: LOADK     R4 26        ; R4 := 26.000000
144 [-]: CALL      R3 2 2       ; R3 := R3(R4)
145 [-]: SETTABLE  R2 K30 R3    ; R2["UISound_MissionStart"] := R3
146 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
147 [-]: MOVE      R3 R1        ; R3 := R1
148 [-]: LOADK     R4 27        ; R4 := 27.000000
149 [-]: CALL      R3 2 2       ; R3 := R3(R4)
150 [-]: SETTABLE  R2 K31 R3    ; R2["UISound_VotingStarted"] := R3
151 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
152 [-]: MOVE      R3 R1        ; R3 := R1
153 [-]: LOADK     R4 28        ; R4 := 28.000000
154 [-]: CALL      R3 2 2       ; R3 := R3(R4)
155 [-]: SETTABLE  R2 K32 R3    ; R2["UISound_LogoTransition"] := R3
156 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
157 [-]: MOVE      R3 R1        ; R3 := R1
158 [-]: LOADK     R4 29        ; R4 := 29.000000
159 [-]: CALL      R3 2 2       ; R3 := R3(R4)
160 [-]: SETTABLE  R2 K33 R3    ; R2["UISound_ChatPM"] := R3
161 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
162 [-]: MOVE      R3 R1        ; R3 := R1
163 [-]: LOADK     R4 30        ; R4 := 30.000000
164 [-]: CALL      R3 2 2       ; R3 := R3(R4)
165 [-]: SETTABLE  R2 K34 R3    ; R2["UISound_ChatDM"] := R3
166 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
167 [-]: MOVE      R3 R1        ; R3 := R1
168 [-]: LOADK     R4 31        ; R4 := 31.000000
169 [-]: CALL      R3 2 2       ; R3 := R3(R4)
170 [-]: SETTABLE  R2 K35 R3    ; R2["UISound_ChatSquad"] := R3
171 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
172 [-]: MOVE      R3 R1        ; R3 := R1
173 [-]: LOADK     R4 32        ; R4 := 32.000000
174 [-]: CALL      R3 2 2       ; R3 := R3(R4)
175 [-]: SETTABLE  R2 K36 R3    ; R2["UISound_StartDrag"] := R3
176 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
177 [-]: MOVE      R3 R1        ; R3 := R1
178 [-]: LOADK     R4 33        ; R4 := 33.000000
179 [-]: CALL      R3 2 2       ; R3 := R3(R4)
180 [-]: SETTABLE  R2 K37 R3    ; R2["UISound_EndDrag"] := R3
181 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
182 [-]: MOVE      R3 R1        ; R3 := R1
183 [-]: LOADK     R4 34        ; R4 := 34.000000
184 [-]: CALL      R3 2 2       ; R3 := R3(R4)
185 [-]: SETTABLE  R2 K38 R3    ; R2["UISound_GearWheelTransition"] := R3
186 [-]: RETURN    R0 1         ; return 


; Function #142.1:
;
; Name:            
; Defined at line: 5337
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADNIL   R1 R1        ; R1 := nil
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: ADD       R2 R0 K1     ; R2 := R0 + 1.000000
  7 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 5383
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x9ba7909f
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0x3d106989
  8 [-]: LOADK     R1 K3        ; R1 := "UISTYLE: Style changed callback called"
  9 [-]: CALL      R0 2 1       ; R0(R1)
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0x58803cb6]
 12 [-]: CALL      R0 1 1       ; R0()
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: CALL      R0 1 1       ; R0()
 15 [-]: GETUPVAL  R0 U2        ; R0 := U2
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0x9ba7909f
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x7e17ae26]
 19 [-]: LOADK     R2 K6        ; R2 := "OnStyleChangedCallback"
 20 [-]: LOADK     R3 K7        ; R3 := ""
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 5397
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 5401
; #Upvalues:       43
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R0 K0        ; R0 := mControl
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Initialized"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K3        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["BackgroundMovie"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 20
 11 [-]: JMP       20           ; PC := 20
 12 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R0 K3        ; R0 := _T
 18 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 19 [-]: SETTABLE  R0 K4 R1     ; R0["BackgroundMovie"] := R1
 20 [-]: GETGLOBAL R0 K0        ; R0 := mControl
 21 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["StyleInit"]
 22 [-]: TEST      R0 1         ; if R0 then PC := 28
 23 [-]: JMP       28           ; PC := 28
 24 [-]: GETUPVAL  R0 U0        ; R0 := U0
 25 [-]: CALL      R0 1 1       ; R0()
 26 [-]: GETGLOBAL R0 K0        ; R0 := mControl
 27 [-]: SETTABLE  R0 K6 K7     ; R0["StyleInit"] := true
 28 [-]: GETUPVAL  R0 U1        ; R0 := U1
 29 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["IsLoading"]
 30 [-]: TEST      R0 0         ; if not R0 then PC := 47
 31 [-]: JMP       47           ; PC := 47
 32 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
 33 [-]: GETUPVAL  R1 U1        ; R1 := U1
 34 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["Loader"]
 35 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 36 [-]: TEST      R0 1         ; if R0 then PC := 47
 37 [-]: JMP       47           ; PC := 47
 38 [-]: GETUPVAL  R0 U1        ; R0 := U1
 39 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["Loader"]
 40 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0xd2d3875a]
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: TEST      R0 0         ; if not R0 then PC := 47
 43 [-]: JMP       47           ; PC := 47
 44 [-]: GETUPVAL  R0 U2        ; R0 := U2
 45 [-]: GETUPVAL  R1 U1        ; R1 := U1
 46 [-]: CALL      R0 2 1       ; R0(R1)
 47 [-]: GETUPVAL  R0 U3        ; R0 := U3
 48 [-]: GETTABLE  R0 R0 K11    ; R0 := R0[0x23ddc82a]
 49 [-]: CALL      R0 1 2       ; R0 := R0()
 50 [-]: TEST      R0 0         ; if not R0 then PC := 71
 51 [-]: JMP       71           ; PC := 71
 52 [-]: GETUPVAL  R0 U4        ; R0 := U4
 53 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["IsLoading"]
 54 [-]: TEST      R0 0         ; if not R0 then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
 57 [-]: GETUPVAL  R1 U4        ; R1 := U4
 58 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["Loader"]
 59 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 60 [-]: TEST      R0 1         ; if R0 then PC := 71
 61 [-]: JMP       71           ; PC := 71
 62 [-]: GETUPVAL  R0 U4        ; R0 := U4
 63 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["Loader"]
 64 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0xd2d3875a]
 65 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 66 [-]: TEST      R0 0         ; if not R0 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: GETUPVAL  R0 U2        ; R0 := U2
 69 [-]: GETUPVAL  R1 U4        ; R1 := U4
 70 [-]: CALL      R0 2 1       ; R0(R1)
 71 [-]: GETUPVAL  R0 U5        ; R0 := U5
 72 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["IsLoading"]
 73 [-]: TEST      R0 0         ; if not R0 then PC := 141
 74 [-]: JMP       141          ; PC := 141
 75 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
 76 [-]: GETUPVAL  R1 U5        ; R1 := U5
 77 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["Loader"]
 78 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 79 [-]: TEST      R0 1         ; if R0 then PC := 141
 80 [-]: JMP       141          ; PC := 141
 81 [-]: GETUPVAL  R0 U5        ; R0 := U5
 82 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["Loader"]
 83 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0xd2d3875a]
 84 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 85 [-]: TEST      R0 0         ; if not R0 then PC := 141
 86 [-]: JMP       141          ; PC := 141
 87 [-]: GETUPVAL  R0 U5        ; R0 := U5
 88 [-]: SETTABLE  R0 K8 K12    ; R0["IsLoading"] := false
 89 [-]: LOADK     R0 K13       ; R0 := ""
 90 [-]: LOADK     R1 1         ; R1 := 1.000000
 91 [-]: GETUPVAL  R2 U5        ; R2 := U5
 92 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Upgrades"]
 93 [-]: LEN       R2 R2        ; R2 := # R2
 94 [-]: LOADK     R3 1         ; R3 := 1.000000
 95 [-]: FORPREP   R1 138       ; R1 -= R3; PC := 138
 96 [-]: GETGLOBAL R5 K15       ; R5 := 0xb009bbc6
 97 [-]: GETUPVAL  R6 U5        ; R6 := U5
 98 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["Upgrades"]
 99 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
100 [-]: CALL      R5 2 2       ; R5 := R5(R6)
101 [-]: SELF      R6 R5 K16    ; R7 := R5; R6 := R5[0xce30fcd8]
102 [-]: LOADK     R8 K13       ; R8 := ""
103 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
104 [-]: GETTABLE  R7 R6 K17    ; R7 := R6["affixes"]
105 [-]: EQ        1 R7 K18     ; if R7 == nil then PC := 127
106 [-]: JMP       127          ; PC := 127
107 [-]: LOADK     R7 1         ; R7 := 1.000000
108 [-]: GETTABLE  R8 R6 K17    ; R8 := R6["affixes"]
109 [-]: LEN       R8 R8        ; R8 := # R8
110 [-]: LOADK     R9 1         ; R9 := 1.000000
111 [-]: FORPREP   R7 125       ; R7 -= R9; PC := 125
112 [-]: MOVE      R11 R0       ; R11 := R0
113 [-]: GETUPVAL  R12 U6       ; R12 := U6
114 [-]: GETTABLE  R12 R12 K19  ; R12 := R12[0x06d055f9]
115 [-]: EQ        1 R0 K13     ; if R0 == "" then PC := 118
116 [-]: JMP       118          ; PC := 118
117 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 118
118 [-]: LOADBOOL  R13 1 0      ; R13 := true
119 [-]: LOADK     R14 K13      ; R14 := ""
120 [-]: LOADK     R15 K20      ; R15 := "\r\n"
121 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
122 [-]: GETTABLE  R13 R6 K17   ; R13 := R6["affixes"]
123 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
124 [-]: CONCAT    R0 R11 R13   ; R0 := R11 .. R12 .. R13
125 [-]: FORLOOP   R7 112       ; R7 += R9; if R7 <= R8 then begin PC := 112; R10 := R7 end
126 [-]: JMP       138          ; PC := 138
127 [-]: MOVE      R11 R0       ; R11 := R0
128 [-]: LOADK     R12 K20      ; R12 := "\r\n"
129 [-]: GETGLOBAL R13 K5       ; R13 := 0xae91e43b
130 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13[0x42b04007]
131 [-]: GETGLOBAL R15 K22      ; R15 := 0x64fb1586
132 [-]: SELF      R16 R5 K23   ; R17 := R5; R16 := R5[0x5ba460ac]
133 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
134 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
135 [-]: LOADBOOL  R16 0 0      ; R16 := false
136 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
137 [-]: CONCAT    R0 R11 R13   ; R0 := R11 .. R12 .. R13
138 [-]: FORLOOP   R1 96        ; R1 += R3; if R1 <= R2 then begin PC := 96; R4 := R1 end
139 [-]: GETGLOBAL R11 K3       ; R11 := _T
140 [-]: SETTABLE  R11 K24 R0   ; R11["CurrentInvigoration"] := R0
141 [-]: GETUPVAL  R11 U7       ; R11 := U7
142 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["IsLoading"]
143 [-]: TEST      R11 0        ; if not R11 then PC := 161
144 [-]: JMP       161          ; PC := 161
145 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
146 [-]: GETUPVAL  R12 U7       ; R12 := U7
147 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Loader"]
148 [-]: CALL      R11 2 2      ; R11 := R11(R12)
149 [-]: TEST      R11 1        ; if R11 then PC := 161
150 [-]: JMP       161          ; PC := 161
151 [-]: GETUPVAL  R11 U7       ; R11 := U7
152 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["Loader"]
153 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0xd2d3875a]
154 [-]: CALL      R11 2 2      ; R11 := R11(R12)
155 [-]: TEST      R11 0        ; if not R11 then PC := 161
156 [-]: JMP       161          ; PC := 161
157 [-]: GETUPVAL  R11 U7       ; R11 := U7
158 [-]: SETTABLE  R11 K8 K12   ; R11["IsLoading"] := false
159 [-]: GETUPVAL  R11 U8       ; R11 := U8
160 [-]: CALL      R11 1 1      ; R11()
161 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
162 [-]: GETGLOBAL R12 K3       ; R12 := _T
163 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["HelminthSuitLoader"]
164 [-]: CALL      R11 2 2      ; R11 := R11(R12)
165 [-]: TEST      R11 1        ; if R11 then PC := 183
166 [-]: JMP       183          ; PC := 183
167 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
168 [-]: GETGLOBAL R12 K3       ; R12 := _T
169 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["HelminthSuitLoader"]
170 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Loader"]
171 [-]: CALL      R11 2 2      ; R11 := R11(R12)
172 [-]: TEST      R11 1        ; if R11 then PC := 183
173 [-]: JMP       183          ; PC := 183
174 [-]: GETGLOBAL R11 K3       ; R11 := _T
175 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["HelminthSuitLoader"]
176 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["Loader"]
177 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0xd2d3875a]
178 [-]: CALL      R11 2 2      ; R11 := R11(R12)
179 [-]: TEST      R11 0        ; if not R11 then PC := 183
180 [-]: JMP       183          ; PC := 183
181 [-]: GETUPVAL  R11 U9       ; R11 := U9
182 [-]: CALL      R11 1 1      ; R11()
183 [-]: GETUPVAL  R11 U10      ; R11 := U10
184 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["IsLoading"]
185 [-]: TEST      R11 0        ; if not R11 then PC := 216
186 [-]: JMP       216          ; PC := 216
187 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
188 [-]: GETGLOBAL R12 K26      ; R12 := 0x89326c93
189 [-]: CALL      R11 2 2      ; R11 := R11(R12)
190 [-]: TEST      R11 1        ; if R11 then PC := 216
191 [-]: JMP       216          ; PC := 216
192 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
193 [-]: GETUPVAL  R12 U10      ; R12 := U10
194 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["Loader"]
195 [-]: CALL      R11 2 2      ; R11 := R11(R12)
196 [-]: TEST      R11 1        ; if R11 then PC := 216
197 [-]: JMP       216          ; PC := 216
198 [-]: GETUPVAL  R11 U10      ; R11 := U10
199 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["Loader"]
200 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0xd2d3875a]
201 [-]: CALL      R11 2 2      ; R11 := R11(R12)
202 [-]: TEST      R11 0        ; if not R11 then PC := 216
203 [-]: JMP       216          ; PC := 216
204 [-]: GETUPVAL  R11 U10      ; R11 := U10
205 [-]: SETTABLE  R11 K8 K12   ; R11["IsLoading"] := false
206 [-]: GETGLOBAL R11 K26      ; R11 := 0x89326c93
207 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11[0x05909209]
208 [-]: GETGLOBAL R13 K28      ; R13 := 0x88efc25e
209 [-]: GETGLOBAL R14 K29      ; R14 := 0x95a2efe1
210 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14[0xed4e0128]
211 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
212 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
213 [-]: GETGLOBAL R14 K31      ; R14 := ZERO_VECTOR
214 [-]: GETGLOBAL R15 K32      ; R15 := ZERO_ROTATION
215 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
216 [-]: GETGLOBAL R11 K3       ; R11 := _T
217 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["QueueFishTankPopulation"]
218 [-]: TEST      R11 0        ; if not R11 then PC := 222
219 [-]: JMP       222          ; PC := 222
220 [-]: GETUPVAL  R11 U11      ; R11 := U11
221 [-]: CALL      R11 1 1      ; R11()
222 [-]: GETGLOBAL R11 K34      ; R11 := 0xb693b6c1
223 [-]: CALL      R11 1 2      ; R11 := R11()
224 [-]: GETGLOBAL R12 K5       ; R12 := 0xae91e43b
225 [-]: SELF      R12 R12 K35  ; R13 := R12; R12 := R12[0x8a8c8d5a]
226 [-]: MOVE      R14 R11      ; R14 := R11
227 [-]: CALL      R12 3 1      ; R12(R13,R14)
228 [-]: GETGLOBAL R12 K2       ; R12 := 0x7b998233
229 [-]: GETGLOBAL R13 K36      ; R13 := mTimerMgr
230 [-]: CALL      R12 2 2      ; R12 := R12(R13)
231 [-]: TEST      R12 1        ; if R12 then PC := 237
232 [-]: JMP       237          ; PC := 237
233 [-]: GETGLOBAL R12 K36      ; R12 := mTimerMgr
234 [-]: SELF      R12 R12 K37  ; R13 := R12; R12 := R12[0xfaa69527]
235 [-]: MOVE      R14 R11      ; R14 := R11
236 [-]: CALL      R12 3 1      ; R12(R13,R14)
237 [-]: GETGLOBAL R12 K38      ; R12 := mQuestsNeedChecking
238 [-]: TEST      R12 0        ; if not R12 then PC := 248
239 [-]: JMP       248          ; PC := 248
240 [-]: GETGLOBAL R12 K3       ; R12 := _T
241 [-]: GETTABLE  R12 R12 K39  ; R12 := R12["ActiveQuestLoaded"]
242 [-]: TEST      R12 0        ; if not R12 then PC := 248
243 [-]: JMP       248          ; PC := 248
244 [-]: GETUPVAL  R12 U12      ; R12 := U12
245 [-]: CALL      R12 1 3      ; R12,R13 := R12()
246 [-]: NOT       R14 R13      ; R14 := not R13
247 [-]: SETGLOBAL R14 K38      ; mQuestsNeedChecking := R14
248 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
249 [-]: GETGLOBAL R15 K3       ; R15 := _T
250 [-]: GETTABLE  R15 R15 K40  ; R15 := R15["DojoMgr"]
251 [-]: CALL      R14 2 2      ; R14 := R14(R15)
252 [-]: TEST      R14 1        ; if R14 then PC := 258
253 [-]: JMP       258          ; PC := 258
254 [-]: GETGLOBAL R14 K3       ; R14 := _T
255 [-]: GETTABLE  R14 R14 K40  ; R14 := R14["DojoMgr"]
256 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14[0xfaa69527]
257 [-]: CALL      R14 2 1      ; R14(R15)
258 [-]: GETUPVAL  R14 U13      ; R14 := U13
259 [-]: TEST      R14 0        ; if not R14 then PC := 278
260 [-]: JMP       278          ; PC := 278
261 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
262 [-]: GETGLOBAL R15 K41      ; R15 := 0x76ea806b
263 [-]: CALL      R14 2 2      ; R14 := R14(R15)
264 [-]: TEST      R14 1        ; if R14 then PC := 278
265 [-]: JMP       278          ; PC := 278
266 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
267 [-]: GETGLOBAL R15 K42      ; R15 := 0x25d99d89
268 [-]: CALL      R14 2 2      ; R14 := R14(R15)
269 [-]: TEST      R14 1        ; if R14 then PC := 278
270 [-]: JMP       278          ; PC := 278
271 [-]: GETGLOBAL R14 K42      ; R14 := 0x25d99d89
272 [-]: SELF      R14 R14 K43  ; R15 := R14; R14 := R14[0x000daadd]
273 [-]: LOADK     R16 0        ; R16 := 0.000000
274 [-]: LOADK     R17 K44      ; R17 := "OnTrainingResultUploaded"
275 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
276 [-]: LOADBOOL  R14 0 0      ; R14 := false
277 [-]: SETUPVAL  R14 U13      ; U82 := R13
278 [-]: GETGLOBAL R14 K45      ; R14 := mCurrentMode
279 [-]: EQ        1 R14 K18    ; if R14 == nil then PC := 285
280 [-]: JMP       285          ; PC := 285
281 [-]: GETGLOBAL R14 K46      ; R14 := mCurrentGameRules
282 [-]: GETGLOBAL R15 K47      ; R15 := 0xbe190284
283 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 421
284 [-]: JMP       421          ; PC := 421
285 [-]: GETGLOBAL R14 K2       ; R14 := 0x7b998233
286 [-]: GETGLOBAL R15 K47      ; R15 := 0xbe190284
287 [-]: CALL      R14 2 2      ; R14 := R14(R15)
288 [-]: TEST      R14 0        ; if not R14 then PC := 291
289 [-]: JMP       291          ; PC := 291
290 [-]: RETURN    R0 1         ; return 
291 [-]: GETGLOBAL R14 K47      ; R14 := 0xbe190284
292 [-]: SETGLOBAL R14 K46      ; mCurrentGameRules := R14
293 [-]: GETUPVAL  R14 U3       ; R14 := U3
294 [-]: GETTABLE  R14 R14 K48  ; R14 := R14[0xb73d420f]
295 [-]: CALL      R14 1 2      ; R14 := R14()
296 [-]: SETGLOBAL R14 K45      ; mCurrentMode := R14
297 [-]: GETGLOBAL R14 K45      ; R14 := mCurrentMode
298 [-]: GETUPVAL  R15 U3       ; R15 := U3
299 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["UI_MODE_IN_SPACE_SHIP"]
300 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 307
301 [-]: JMP       307          ; PC := 307
302 [-]: GETGLOBAL R14 K47      ; R14 := 0xbe190284
303 [-]: SELF      R14 R14 K11  ; R15 := R14; R14 := R14[0x23ddc82a]
304 [-]: CALL      R14 2 2      ; R14 := R14(R15)
305 [-]: TEST      R14 0        ; if not R14 then PC := 312
306 [-]: JMP       312          ; PC := 312
307 [-]: GETGLOBAL R14 K45      ; R14 := mCurrentMode
308 [-]: GETUPVAL  R15 U3       ; R15 := U3
309 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["UI_MODE_IN_SPACE_HUB"]
310 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 372
311 [-]: JMP       372          ; PC := 372
312 [-]: GETGLOBAL R14 K41      ; R14 := 0x76ea806b
313 [-]: SELF      R14 R14 K51  ; R15 := R14; R14 := R14[0x3f3ae64c]
314 [-]: LOADK     R16 0        ; R16 := 0.000000
315 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
316 [-]: GETGLOBAL R15 K41      ; R15 := 0x76ea806b
317 [-]: SELF      R15 R15 K52  ; R16 := R15; R15 := R15[0x8792aaab]
318 [-]: CALL      R15 2 2      ; R15 := R15(R16)
319 [-]: TEST      R15 0        ; if not R15 then PC := 372
320 [-]: JMP       372          ; PC := 372
321 [-]: GETGLOBAL R15 K2       ; R15 := 0x7b998233
322 [-]: MOVE      R16 R14      ; R16 := R14
323 [-]: CALL      R15 2 2      ; R15 := R15(R16)
324 [-]: TEST      R15 1        ; if R15 then PC := 372
325 [-]: JMP       372          ; PC := 372
326 [-]: GETGLOBAL R15 K53      ; R15 := 0x3d106989
327 [-]: LOADK     R16 K54      ; R16 := "return to ship: initial sync"
328 [-]: CALL      R15 2 1      ; R15(R16)
329 [-]: GETGLOBAL R15 K3       ; R15 := _T
330 [-]: SETTABLE  R15 K55 K7   ; R15["syncingInventory"] := true
331 [-]: SELF      R15 R14 K56  ; R16 := R14; R15 := R14[0x80563238]
332 [-]: CALL      R15 2 2      ; R15 := R15(R16)
333 [-]: SELF      R16 R15 K57  ; R17 := R15; R16 := R15[0x08ead34d]
334 [-]: LOADK     R18 K58      ; R18 := "OnInitialInventorySync"
335 [-]: LOADBOOL  R19 1 0      ; R19 := true
336 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
337 [-]: SELF      R16 R15 K59  ; R17 := R15; R16 := R15[0x24389ec3]
338 [-]: LOADK     R18 K60      ; R18 := "OnInboxSync"
339 [-]: CALL      R16 3 1      ; R16(R17,R18)
340 [-]: GETGLOBAL R16 K45      ; R16 := mCurrentMode
341 [-]: GETUPVAL  R17 U3       ; R17 := U3
342 [-]: GETTABLE  R17 R17 K49  ; R17 := R17["UI_MODE_IN_SPACE_SHIP"]
343 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 370
344 [-]: JMP       370          ; PC := 370
345 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
346 [-]: GETGLOBAL R17 K3       ; R17 := _T
347 [-]: GETTABLE  R17 R17 K61  ; R17 := R17["EndOfQuestOpen"]
348 [-]: CALL      R16 2 2      ; R16 := R16(R17)
349 [-]: TEST      R16 1        ; if R16 then PC := 355
350 [-]: JMP       355          ; PC := 355
351 [-]: GETGLOBAL R16 K3       ; R16 := _T
352 [-]: GETTABLE  R16 R16 K61  ; R16 := R16["EndOfQuestOpen"]
353 [-]: TEST      R16 1        ; if R16 then PC := 370
354 [-]: JMP       370          ; PC := 370
355 [-]: SELF      R16 R15 K62  ; R17 := R15; R16 := R15[0x8c21a288]
356 [-]: CALL      R16 2 2      ; R16 := R16(R17)
357 [-]: GETGLOBAL R17 K63      ; R17 := 0x34291f5c
358 [-]: GETTABLE  R17 R17 K64  ; R17 := R17[0x397b920f]
359 [-]: MOVE      R18 R16      ; R18 := R16
360 [-]: CALL      R17 2 2      ; R17 := R17(R18)
361 [-]: GETGLOBAL R18 K65      ; R18 := 0x5bced4c4
362 [-]: GETTABLE  R18 R18 K66  ; R18 := R18[0xe4a5b3ca]
363 [-]: MOVE      R19 R17      ; R19 := R17
364 [-]: CALL      R18 2 2      ; R18 := R18(R19)
365 [-]: LE        0 K67 R18    ; if 86400.000000 > R18 then PC := 370
366 [-]: JMP       370          ; PC := 370
367 [-]: SELF      R18 R15 K68  ; R19 := R15; R18 := R15[0xfe249742]
368 [-]: LOADK     R20 K69      ; R20 := "OnLoginRewardSync"
369 [-]: CALL      R18 3 1      ; R18(R19,R20)
370 [-]: GETUPVAL  R18 U14      ; R18 := U14
371 [-]: SETTABLE  R18 K70 K7   ; R18["mForceRefreshWorldStatePostLogin"] := true
372 [-]: GETGLOBAL R18 K45      ; R18 := mCurrentMode
373 [-]: GETUPVAL  R19 U3       ; R19 := U3
374 [-]: GETTABLE  R19 R19 K49  ; R19 := R19["UI_MODE_IN_SPACE_SHIP"]
375 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 387
376 [-]: JMP       387          ; PC := 387
377 [-]: GETGLOBAL R18 K45      ; R18 := mCurrentMode
378 [-]: GETUPVAL  R19 U3       ; R19 := U3
379 [-]: GETTABLE  R19 R19 K50  ; R19 := R19["UI_MODE_IN_SPACE_HUB"]
380 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 387
381 [-]: JMP       387          ; PC := 387
382 [-]: GETGLOBAL R18 K45      ; R18 := mCurrentMode
383 [-]: GETUPVAL  R19 U3       ; R19 := U3
384 [-]: GETTABLE  R19 R19 K71  ; R19 := R19["UI_MODE_IN_DOJO"]
385 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 399
386 [-]: JMP       399          ; PC := 399
387 [-]: GETUPVAL  R18 U10      ; R18 := U10
388 [-]: GETGLOBAL R19 K72      ; R19 := 0xbd496aa1
389 [-]: GETTABLE  R19 R19 K73  ; R19 := R19[0x42645da3]
390 [-]: NEWTABLE  R20 0 0      ; R20 := {}
391 [-]: GETGLOBAL R21 K29      ; R21 := 0x95a2efe1
392 [-]: SELF      R21 R21 K30  ; R22 := R21; R21 := R21[0xed4e0128]
393 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
394 [-]: SETLIST   R20 0 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 0
395 [-]: CALL      R19 2 2      ; R19 := R19(R20)
396 [-]: SETTABLE  R18 K9 R19   ; R18["Loader"] := R19
397 [-]: GETUPVAL  R18 U10      ; R18 := U10
398 [-]: SETTABLE  R18 K8 K7    ; R18["IsLoading"] := true
399 [-]: GETGLOBAL R18 K45      ; R18 := mCurrentMode
400 [-]: GETUPVAL  R19 U3       ; R19 := U3
401 [-]: GETTABLE  R19 R19 K49  ; R19 := R19["UI_MODE_IN_SPACE_SHIP"]
402 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 406
403 [-]: JMP       406          ; PC := 406
404 [-]: GETUPVAL  R18 U15      ; R18 := U15
405 [-]: CALL      R18 1 1      ; R18()
406 [-]: LOADBOOL  R18 1 0      ; R18 := true
407 [-]: SETGLOBAL R18 K74      ; mFadeInStarted := R18
408 [-]: GETGLOBAL R18 K5       ; R18 := 0xae91e43b
409 [-]: SELF      R18 R18 K75  ; R19 := R18; R18 := R18[0x58bec6d6]
410 [-]: LOADK     R20 0        ; R20 := 0.000000
411 [-]: CALL      R18 3 1      ; R18(R19,R20)
412 [-]: GETUPVAL  R18 U16      ; R18 := U16
413 [-]: CALL      R18 1 1      ; R18()
414 [-]: GETUPVAL  R18 U3       ; R18 := U3
415 [-]: GETTABLE  R18 R18 K76  ; R18 := R18[0xd342d13d]
416 [-]: CALL      R18 1 2      ; R18 := R18()
417 [-]: TEST      R18 0        ; if not R18 then PC := 421
418 [-]: JMP       421          ; PC := 421
419 [-]: GETUPVAL  R18 U17      ; R18 := U17
420 [-]: CALL      R18 1 1      ; R18()
421 [-]: GETGLOBAL R18 K77      ; R18 := mAdditionalScreenCreated
422 [-]: EQ        0 R18 K12    ; if R18 ~= false then PC := 435
423 [-]: JMP       435          ; PC := 435
424 [-]: GETUPVAL  R18 U3       ; R18 := U3
425 [-]: GETTABLE  R18 R18 K76  ; R18 := R18[0xd342d13d]
426 [-]: CALL      R18 1 2      ; R18 := R18()
427 [-]: TEST      R18 1        ; if R18 then PC := 435
428 [-]: JMP       435          ; PC := 435
429 [-]: GETGLOBAL R18 K3       ; R18 := _T
430 [-]: GETTABLE  R18 R18 K78  ; R18 := R18["gShowingLoginScreen"]
431 [-]: EQ        0 R18 K12    ; if R18 ~= false then PC := 435
432 [-]: JMP       435          ; PC := 435
433 [-]: GETUPVAL  R18 U17      ; R18 := U17
434 [-]: CALL      R18 1 1      ; R18()
435 [-]: GETGLOBAL R18 K45      ; R18 := mCurrentMode
436 [-]: GETUPVAL  R19 U3       ; R19 := U3
437 [-]: GETTABLE  R19 R19 K79  ; R19 := R19["UI_MODE_IN_GAME"]
438 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 441
439 [-]: JMP       441          ; PC := 441
440 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 441
441 [-]: LOADBOOL  R18 1 0      ; R18 := true
442 [-]: LOADNIL   R19 R19      ; R19 := nil
443 [-]: TEST      R18 0        ; if not R18 then PC := 447
444 [-]: JMP       447          ; PC := 447
445 [-]: GETGLOBAL R19 K42      ; R19 := 0x25d99d89
446 [-]: JMP       463          ; PC := 463
447 [-]: GETGLOBAL R20 K41      ; R20 := 0x76ea806b
448 [-]: SELF      R20 R20 K51  ; R21 := R20; R20 := R20[0x3f3ae64c]
449 [-]: LOADK     R22 0        ; R22 := 0.000000
450 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
451 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
452 [-]: MOVE      R22 R20      ; R22 := R20
453 [-]: CALL      R21 2 2      ; R21 := R21(R22)
454 [-]: TEST      R21 1        ; if R21 then PC := 463
455 [-]: JMP       463          ; PC := 463
456 [-]: SELF      R21 R20 K80  ; R22 := R20; R21 := R20[0x22de02e1]
457 [-]: CALL      R21 2 2      ; R21 := R21(R22)
458 [-]: TEST      R21 0        ; if not R21 then PC := 463
459 [-]: JMP       463          ; PC := 463
460 [-]: SELF      R21 R20 K56  ; R22 := R20; R21 := R20[0x80563238]
461 [-]: CALL      R21 2 2      ; R21 := R21(R22)
462 [-]: MOVE      R19 R21      ; R19 := R21
463 [-]: GETUPVAL  R21 U18      ; R21 := U18
464 [-]: MOVE      R22 R11      ; R22 := R11
465 [-]: MOVE      R23 R19      ; R23 := R19
466 [-]: MOVE      R24 R18      ; R24 := R18
467 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
468 [-]: TEST      R18 1        ; if R18 then PC := 675
469 [-]: JMP       675          ; PC := 675
470 [-]: GETGLOBAL R21 K45      ; R21 := mCurrentMode
471 [-]: GETUPVAL  R22 U3       ; R22 := U3
472 [-]: GETTABLE  R22 R22 K49  ; R22 := R22["UI_MODE_IN_SPACE_SHIP"]
473 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 480
474 [-]: JMP       480          ; PC := 480
475 [-]: GETUPVAL  R21 U3       ; R21 := U3
476 [-]: GETTABLE  R21 R21 K81  ; R21 := R21[0xcf1fcba4]
477 [-]: CALL      R21 1 2      ; R21 := R21()
478 [-]: TEST      R21 0        ; if not R21 then PC := 490
479 [-]: JMP       490          ; PC := 490
480 [-]: GETUPVAL  R21 U19      ; R21 := U19
481 [-]: CALL      R21 1 1      ; R21()
482 [-]: GETUPVAL  R21 U20      ; R21 := U20
483 [-]: CALL      R21 1 1      ; R21()
484 [-]: GETUPVAL  R21 U21      ; R21 := U21
485 [-]: CALL      R21 1 1      ; R21()
486 [-]: GETUPVAL  R21 U22      ; R21 := U22
487 [-]: CALL      R21 1 1      ; R21()
488 [-]: GETUPVAL  R21 U23      ; R21 := U23
489 [-]: CALL      R21 1 1      ; R21()
490 [-]: GETGLOBAL R21 K45      ; R21 := mCurrentMode
491 [-]: GETUPVAL  R22 U3       ; R22 := U3
492 [-]: GETTABLE  R22 R22 K49  ; R22 := R22["UI_MODE_IN_SPACE_SHIP"]
493 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 549
494 [-]: JMP       549          ; PC := 549
495 [-]: GETGLOBAL R21 K3       ; R21 := _T
496 [-]: GETTABLE  R21 R21 K82  ; R21 := R21["uiConsoleTriggersInitialized"]
497 [-]: TEST      R21 0        ; if not R21 then PC := 549
498 [-]: JMP       549          ; PC := 549
499 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
500 [-]: GETGLOBAL R22 K83      ; R22 := 0x0032441c
501 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["JunctionComplete"]
502 [-]: CALL      R21 2 2      ; R21 := R21(R22)
503 [-]: TEST      R21 1        ; if R21 then PC := 549
504 [-]: JMP       549          ; PC := 549
505 [-]: GETGLOBAL R21 K83      ; R21 := 0x0032441c
506 [-]: GETTABLE  R21 R21 K84  ; R21 := R21["JunctionComplete"]
507 [-]: GETTABLE  R21 R21 K85  ; R21 := R21["transitioning"]
508 [-]: TEST      R21 1        ; if R21 then PC := 549
509 [-]: JMP       549          ; PC := 549
510 [-]: GETGLOBAL R21 K2       ; R21 := 0x7b998233
511 [-]: GETGLOBAL R22 K26      ; R22 := 0x89326c93
512 [-]: SELF      R22 R22 K86  ; R23 := R22; R22 := R22[0x78298275]
513 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
514 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
515 [-]: TEST      R21 1        ; if R21 then PC := 549
516 [-]: JMP       549          ; PC := 549
517 [-]: GETGLOBAL R21 K3       ; R21 := _T
518 [-]: GETTABLE  R21 R21 K87  ; R21 := R21[0x1c5b5b33]
519 [-]: LOADK     R22 K88      ; R22 := "MissionStats"
520 [-]: CALL      R21 2 2      ; R21 := R21(R22)
521 [-]: TEST      R21 1        ; if R21 then PC := 549
522 [-]: JMP       549          ; PC := 549
523 [-]: GETGLOBAL R21 K3       ; R21 := _T
524 [-]: GETTABLE  R21 R21 K89  ; R21 := R21["missionStatsPending"]
525 [-]: TEST      R21 1        ; if R21 then PC := 549
526 [-]: JMP       549          ; PC := 549
527 [-]: GETGLOBAL R21 K90      ; R21 := 0x9ba7909f
528 [-]: SELF      R21 R21 K91  ; R22 := R21; R21 := R21[0x5374b92e]
529 [-]: GETGLOBAL R23 K92      ; R23 := 0x99b0a3fe
530 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
531 [-]: TEST      R21 1        ; if R21 then PC := 549
532 [-]: JMP       549          ; PC := 549
533 [-]: GETGLOBAL R21 K3       ; R21 := _T
534 [-]: SETTABLE  R21 K93 K94  ; R21["triggeredConsoleTag"] := "SolarMapOrigin"
535 [-]: GETUPVAL  R21 U6       ; R21 := U6
536 [-]: GETTABLE  R21 R21 K95  ; R21 := R21[0xa9882367]
537 [-]: LOADK     R22 K96      ; R22 := "ConsoleTeleportAndActivate"
538 [-]: CALL      R21 2 2      ; R21 := R21(R22)
539 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
540 [-]: MOVE      R23 R21      ; R23 := R21
541 [-]: CALL      R22 2 2      ; R22 := R22(R23)
542 [-]: TEST      R22 1        ; if R22 then PC := 546
543 [-]: JMP       546          ; PC := 546
544 [-]: SELF      R22 R21 K97  ; R23 := R21; R22 := R21[0xd91e1179]
545 [-]: CALL      R22 2 1      ; R22(R23)
546 [-]: GETGLOBAL R22 K83      ; R22 := 0x0032441c
547 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["JunctionComplete"]
548 [-]: SETTABLE  R22 K85 K7   ; R22["transitioning"] := true
549 [-]: GETUPVAL  R22 U24      ; R22 := U24
550 [-]: CALL      R22 1 1      ; R22()
551 [-]: GETUPVAL  R22 U25      ; R22 := U25
552 [-]: CALL      R22 1 1      ; R22()
553 [-]: GETUPVAL  R22 U26      ; R22 := U26
554 [-]: GETTABLE  R22 R22 K98  ; R22 := R22["InviteQueued"]
555 [-]: LE        0 K99 R22    ; if 0.000000 > R22 then PC := 596
556 [-]: JMP       596          ; PC := 596
557 [-]: GETUPVAL  R22 U26      ; R22 := U26
558 [-]: GETGLOBAL R23 K65      ; R23 := 0x5bced4c4
559 [-]: GETTABLE  R23 R23 K100 ; R23 := R23[0xb62ecfe0]
560 [-]: GETUPVAL  R24 U26      ; R24 := U26
561 [-]: GETTABLE  R24 R24 K98  ; R24 := R24["InviteQueued"]
562 [-]: GETGLOBAL R25 K101     ; R25 := 0x67652851
563 [-]: CALL      R25 1 2      ; R25 := R25()
564 [-]: SUB       R24 R24 R25  ; R24 := R24 - R25
565 [-]: LOADK     R25 0        ; R25 := 0.000000
566 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
567 [-]: SETTABLE  R22 K98 R23  ; R22["InviteQueued"] := R23
568 [-]: GETUPVAL  R22 U26      ; R22 := U26
569 [-]: GETTABLE  R22 R22 K98  ; R22 := R22["InviteQueued"]
570 [-]: EQ        0 R22 K99    ; if R22 ~= 0.000000 then PC := 596
571 [-]: JMP       596          ; PC := 596
572 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
573 [-]: GETGLOBAL R23 K26      ; R23 := 0x89326c93
574 [-]: SELF      R23 R23 K102 ; R24 := R23; R23 := R23[0xdd25e9d1]
575 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
576 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
577 [-]: TEST      R22 0        ; if not R22 then PC := 596
578 [-]: JMP       596          ; PC := 596
579 [-]: GETUPVAL  R22 U3       ; R22 := U3
580 [-]: GETTABLE  R22 R22 K103 ; R22 := R22[0x0deacd54]
581 [-]: CALL      R22 1 2      ; R22 := R22()
582 [-]: TEST      R22 1        ; if R22 then PC := 596
583 [-]: JMP       596          ; PC := 596
584 [-]: GETUPVAL  R22 U26      ; R22 := U26
585 [-]: SETTABLE  R22 K98 K104 ; R22["InviteQueued"] := -1.000000
586 [-]: GETUPVAL  R22 U3       ; R22 := U3
587 [-]: GETTABLE  R22 R22 K105 ; R22 := R22[0x1f60d532]
588 [-]: GETUPVAL  R23 U26      ; R23 := U26
589 [-]: GETTABLE  R23 R23 K106 ; R23 := R23["Transmission"]
590 [-]: CALL      R22 2 1      ; R22(R23)
591 [-]: GETGLOBAL R22 K42      ; R22 := 0x25d99d89
592 [-]: SELF      R22 R22 K107 ; R23 := R22; R22 := R22[0xbf6c9575]
593 [-]: GETUPVAL  R24 U26      ; R24 := U26
594 [-]: GETTABLE  R24 R24 K108 ; R24 := R24["NodeSymbol"]
595 [-]: CALL      R22 3 1      ; R22(R23,R24)
596 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
597 [-]: MOVE      R23 R19      ; R23 := R19
598 [-]: CALL      R22 2 2      ; R22 := R22(R23)
599 [-]: TEST      R22 1        ; if R22 then PC := 613
600 [-]: JMP       613          ; PC := 613
601 [-]: GETUPVAL  R22 U27      ; R22 := U27
602 [-]: SELF      R23 R19 K109 ; R24 := R19; R23 := R19[0x1e11a6d0]
603 [-]: CALL      R23 2 2      ; R23 := R23(R24)
604 [-]: SELF      R24 R19 K110 ; R25 := R19; R24 := R19[0x9b466ee3]
605 [-]: CALL      R24 2 2      ; R24 := R24(R25)
606 [-]: SELF      R25 R19 K111 ; R26 := R19; R25 := R19[0x4ce20fca]
607 [-]: CALL      R25 2 2      ; R25 := R25(R26)
608 [-]: SELF      R26 R19 K112 ; R27 := R19; R26 := R19[0xbd6729ff]
609 [-]: CALL      R26 2 2      ; R26 := R26(R27)
610 [-]: SELF      R27 R19 K113 ; R28 := R19; R27 := R19[0xa59dbd63]
611 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
612 [-]: CALL      R22 0 1      ; R22(R23,...)
613 [-]: GETUPVAL  R22 U28      ; R22 := U28
614 [-]: TEST      R22 0        ; if not R22 then PC := 646
615 [-]: JMP       646          ; PC := 646
616 [-]: LOADBOOL  R22 0 0      ; R22 := false
617 [-]: SETUPVAL  R22 U28      ; U82 := R28
618 [-]: GETGLOBAL R22 K5       ; R22 := 0xae91e43b
619 [-]: SELF      R22 R22 K21  ; R23 := R22; R22 := R22[0x42b04007]
620 [-]: LOADK     R24 K114     ; R24 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
621 [-]: LOADBOOL  R25 0 0      ; R25 := false
622 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
623 [-]: LOADK     R23 K115     ; R23 := "\r\n\r\n"
624 [-]: GETGLOBAL R24 K5       ; R24 := 0xae91e43b
625 [-]: SELF      R24 R24 K21  ; R25 := R24; R24 := R24[0x42b04007]
626 [-]: LOADK     R26 K116     ; R26 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableKicked"
627 [-]: LOADBOOL  R27 0 0      ; R27 := false
628 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
629 [-]: CONCAT    R22 R22 R24  ; R22 := R22 .. R23 .. R24
630 [-]: GETUPVAL  R23 U29      ; R23 := U29
631 [-]: CALL      R23 1 1      ; R23()
632 [-]: GETUPVAL  R23 U30      ; R23 := U30
633 [-]: MOVE      R24 R22      ; R24 := R22
634 [-]: CALL      R23 2 1      ; R23(R24)
635 [-]: GETGLOBAL R23 K63      ; R23 := 0x34291f5c
636 [-]: GETTABLE  R23 R23 K117 ; R23 := R23[0x056bfe8b]
637 [-]: CALL      R23 1 2      ; R23 := R23()
638 [-]: TEST      R23 1        ; if R23 then PC := 646
639 [-]: JMP       646          ; PC := 646
640 [-]: GETGLOBAL R23 K90      ; R23 := 0x9ba7909f
641 [-]: SELF      R23 R23 K118 ; R24 := R23; R23 := R23[0xf37bdbf9]
642 [-]: GETGLOBAL R25 K15      ; R25 := 0xb009bbc6
643 [-]: LOADK     R26 K119     ; R26 := "/EE/Editor/ToolMenus/Commands/CmdRelaunch"
644 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
645 [-]: CALL      R23 0 1      ; R23(R24,...)
646 [-]: GETGLOBAL R23 K2       ; R23 := 0x7b998233
647 [-]: MOVE      R24 R19      ; R24 := R19
648 [-]: CALL      R23 2 2      ; R23 := R23(R24)
649 [-]: TEST      R23 1        ; if R23 then PC := 669
650 [-]: JMP       669          ; PC := 669
651 [-]: GETGLOBAL R23 K120     ; R23 := mRefreshHighPriorityMessages
652 [-]: LE        0 R23 K99    ; if R23 > 0.000000 then PC := 669
653 [-]: JMP       669          ; PC := 669
654 [-]: SELF      R23 R19 K121 ; R24 := R19; R23 := R19[0x63a9c319]
655 [-]: CALL      R23 2 2      ; R23 := R23(R24)
656 [-]: LT        0 K99 R23    ; if 0.000000 >= R23 then PC := 666
657 [-]: JMP       666          ; PC := 666
658 [-]: GETGLOBAL R24 K3       ; R24 := _T
659 [-]: GETTABLE  R24 R24 K122 ; R24 := R24["gLastHighPriorityMessageCount"]
660 [-]: EQ        1 R24 R23    ; if R24 == R23 then PC := 666
661 [-]: JMP       666          ; PC := 666
662 [-]: GETGLOBAL R24 K3       ; R24 := _T
663 [-]: SETTABLE  R24 K123 K7  ; R24["gQueueMailbox"] := true
664 [-]: GETGLOBAL R24 K3       ; R24 := _T
665 [-]: SETTABLE  R24 K122 R23 ; R24["gLastHighPriorityMessageCount"] := R23
666 [-]: GETGLOBAL R24 K124     ; R24 := mHighPriorityMessageDelay
667 [-]: SETGLOBAL R24 K120     ; mRefreshHighPriorityMessages := R24
668 [-]: JMP       698          ; PC := 698
669 [-]: GETGLOBAL R24 K120     ; R24 := mRefreshHighPriorityMessages
670 [-]: GETGLOBAL R25 K101     ; R25 := 0x67652851
671 [-]: CALL      R25 1 2      ; R25 := R25()
672 [-]: SUB       R24 R24 R25  ; R24 := R24 - R25
673 [-]: SETGLOBAL R24 K120     ; mRefreshHighPriorityMessages := R24
674 [-]: JMP       698          ; PC := 698
675 [-]: GETGLOBAL R24 K3       ; R24 := _T
676 [-]: GETTABLE  R24 R24 K125 ; R24 := R24["InSimulacrum"]
677 [-]: TEST      R24 0        ; if not R24 then PC := 698
678 [-]: JMP       698          ; PC := 698
679 [-]: GETUPVAL  R24 U19      ; R24 := U19
680 [-]: CALL      R24 1 1      ; R24()
681 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
682 [-]: MOVE      R25 R19      ; R25 := R19
683 [-]: CALL      R24 2 2      ; R24 := R24(R25)
684 [-]: TEST      R24 1        ; if R24 then PC := 698
685 [-]: JMP       698          ; PC := 698
686 [-]: GETUPVAL  R24 U27      ; R24 := U27
687 [-]: SELF      R25 R19 K109 ; R26 := R19; R25 := R19[0x1e11a6d0]
688 [-]: CALL      R25 2 2      ; R25 := R25(R26)
689 [-]: SELF      R26 R19 K110 ; R27 := R19; R26 := R19[0x9b466ee3]
690 [-]: CALL      R26 2 2      ; R26 := R26(R27)
691 [-]: SELF      R27 R19 K111 ; R28 := R19; R27 := R19[0x4ce20fca]
692 [-]: CALL      R27 2 2      ; R27 := R27(R28)
693 [-]: SELF      R28 R19 K112 ; R29 := R19; R28 := R19[0xbd6729ff]
694 [-]: CALL      R28 2 2      ; R28 := R28(R29)
695 [-]: SELF      R29 R19 K113 ; R30 := R19; R29 := R19[0xa59dbd63]
696 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
697 [-]: CALL      R24 0 1      ; R24(R25,...)
698 [-]: GETGLOBAL R24 K3       ; R24 := _T
699 [-]: GETTABLE  R24 R24 K126 ; R24 := R24["PendingMissionReqErrorDialog"]
700 [-]: TEST      R24 0        ; if not R24 then PC := 707
701 [-]: JMP       707          ; PC := 707
702 [-]: GETGLOBAL R24 K3       ; R24 := _T
703 [-]: GETTABLE  R24 R24 K127 ; R24 := R24[0x37ab0747]
704 [-]: CALL      R24 1 1      ; R24()
705 [-]: GETGLOBAL R24 K3       ; R24 := _T
706 [-]: SETTABLE  R24 K126 K18 ; R24["PendingMissionReqErrorDialog"] := nil
707 [-]: GETGLOBAL R24 K3       ; R24 := _T
708 [-]: GETTABLE  R24 R24 K128 ; R24 := R24["Jukebox"]
709 [-]: EQ        1 R24 K18    ; if R24 == nil then PC := 714
710 [-]: JMP       714          ; PC := 714
711 [-]: GETUPVAL  R24 U31      ; R24 := U31
712 [-]: GETTABLE  R24 R24 K129 ; R24 := R24[0x5f64dde3]
713 [-]: CALL      R24 1 1      ; R24()
714 [-]: GETUPVAL  R24 U32      ; R24 := U32
715 [-]: GETTABLE  R24 R24 K130 ; R24 := R24["DelayTime"]
716 [-]: LT        0 K99 R24    ; if 0.000000 >= R24 then PC := 725
717 [-]: JMP       725          ; PC := 725
718 [-]: GETUPVAL  R24 U32      ; R24 := U32
719 [-]: GETUPVAL  R25 U32      ; R25 := U32
720 [-]: GETTABLE  R25 R25 K130 ; R25 := R25["DelayTime"]
721 [-]: GETGLOBAL R26 K34      ; R26 := 0xb693b6c1
722 [-]: CALL      R26 1 2      ; R26 := R26()
723 [-]: SUB       R25 R25 R26  ; R25 := R25 - R26
724 [-]: SETTABLE  R24 K130 R25 ; R24["DelayTime"] := R25
725 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
726 [-]: GETUPVAL  R25 U32      ; R25 := U32
727 [-]: GETTABLE  R25 R25 K9   ; R25 := R25["Loader"]
728 [-]: CALL      R24 2 2      ; R24 := R24(R25)
729 [-]: TEST      R24 1        ; if R24 then PC := 822
730 [-]: JMP       822          ; PC := 822
731 [-]: GETUPVAL  R24 U32      ; R24 := U32
732 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["Loader"]
733 [-]: SELF      R24 R24 K10  ; R25 := R24; R24 := R24[0xd2d3875a]
734 [-]: CALL      R24 2 2      ; R24 := R24(R25)
735 [-]: TEST      R24 0        ; if not R24 then PC := 822
736 [-]: JMP       822          ; PC := 822
737 [-]: GETGLOBAL R24 K2       ; R24 := 0x7b998233
738 [-]: GETUPVAL  R25 U32      ; R25 := U32
739 [-]: GETTABLE  R25 R25 K131 ; R25 := R25["QueuedTransmission"]
740 [-]: CALL      R24 2 2      ; R24 := R24(R25)
741 [-]: TEST      R24 1        ; if R24 then PC := 822
742 [-]: JMP       822          ; PC := 822
743 [-]: GETUPVAL  R24 U32      ; R24 := U32
744 [-]: GETTABLE  R24 R24 K8   ; R24 := R24["IsLoading"]
745 [-]: TEST      R24 0        ; if not R24 then PC := 761
746 [-]: JMP       761          ; PC := 761
747 [-]: GETUPVAL  R24 U32      ; R24 := U32
748 [-]: SETTABLE  R24 K8 K12   ; R24["IsLoading"] := false
749 [-]: GETUPVAL  R24 U32      ; R24 := U32
750 [-]: GETGLOBAL R25 K15      ; R25 := 0xb009bbc6
751 [-]: GETUPVAL  R26 U32      ; R26 := U32
752 [-]: GETTABLE  R26 R26 K131 ; R26 := R26["QueuedTransmission"]
753 [-]: CALL      R25 2 2      ; R25 := R25(R26)
754 [-]: SETTABLE  R24 K131 R25 ; R24["QueuedTransmission"] := R25
755 [-]: GETUPVAL  R24 U32      ; R24 := U32
756 [-]: GETUPVAL  R25 U32      ; R25 := U32
757 [-]: GETTABLE  R25 R25 K131 ; R25 := R25["QueuedTransmission"]
758 [-]: SELF      R25 R25 K132 ; R26 := R25; R25 := R25[0xcab30b25]
759 [-]: CALL      R25 2 2      ; R25 := R25(R26)
760 [-]: SETTABLE  R24 K130 R25 ; R24["DelayTime"] := R25
761 [-]: GETUPVAL  R24 U32      ; R24 := U32
762 [-]: GETTABLE  R24 R24 K130 ; R24 := R24["DelayTime"]
763 [-]: LE        0 R24 K99    ; if R24 > 0.000000 then PC := 822
764 [-]: JMP       822          ; PC := 822
765 [-]: GETUPVAL  R24 U32      ; R24 := U32
766 [-]: GETGLOBAL R25 K15      ; R25 := 0xb009bbc6
767 [-]: GETUPVAL  R26 U32      ; R26 := U32
768 [-]: GETTABLE  R26 R26 K131 ; R26 := R26["QueuedTransmission"]
769 [-]: CALL      R25 2 2      ; R25 := R25(R26)
770 [-]: SETTABLE  R24 K131 R25 ; R24["QueuedTransmission"] := R25
771 [-]: GETUPVAL  R24 U33      ; R24 := U33
772 [-]: SELF      R24 R24 K133 ; R25 := R24; R24 := R24[0xca33ff41]
773 [-]: GETUPVAL  R26 U32      ; R26 := U32
774 [-]: GETTABLE  R26 R26 K131 ; R26 := R26["QueuedTransmission"]
775 [-]: CALL      R24 3 3      ; R24,R25 := R24(R25,R26)
776 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
777 [-]: GETGLOBAL R27 K3       ; R27 := _T
778 [-]: GETTABLE  R27 R27 K134 ; R27 := R27["LypSyncDeco"]
779 [-]: CALL      R26 2 2      ; R26 := R26(R27)
780 [-]: TEST      R26 1        ; if R26 then PC := 795
781 [-]: JMP       795          ; PC := 795
782 [-]: GETUPVAL  R26 U32      ; R26 := U32
783 [-]: GETGLOBAL R27 K3       ; R27 := _T
784 [-]: GETTABLE  R27 R27 K134 ; R27 := R27["LypSyncDeco"]
785 [-]: SELF      R27 R27 K136 ; R28 := R27; R27 := R27[0x659d451f]
786 [-]: GETUPVAL  R29 U32      ; R29 := U32
787 [-]: GETTABLE  R29 R29 K131 ; R29 := R29["QueuedTransmission"]
788 [-]: SELF      R29 R29 K137 ; R30 := R29; R29 := R29[0xbd368681]
789 [-]: MOVE      R31 R25      ; R31 := R25
790 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
791 [-]: LOADBOOL  R30 0 0      ; R30 := false
792 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
793 [-]: SETTABLE  R26 K135 R27 ; R26["SoundInst"] := R27
794 [-]: JMP       805          ; PC := 805
795 [-]: GETUPVAL  R26 U32      ; R26 := U32
796 [-]: GETUPVAL  R27 U6       ; R27 := U6
797 [-]: GETTABLE  R27 R27 K136 ; R27 := R27[0x659d451f]
798 [-]: GETUPVAL  R28 U32      ; R28 := U32
799 [-]: GETTABLE  R28 R28 K131 ; R28 := R28["QueuedTransmission"]
800 [-]: SELF      R28 R28 K137 ; R29 := R28; R28 := R28[0xbd368681]
801 [-]: MOVE      R30 R25      ; R30 := R25
802 [-]: CALL      R28 3 0      ; R28,... := R28(R29,R30)
803 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
804 [-]: SETTABLE  R26 K135 R27 ; R26["SoundInst"] := R27
805 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
806 [-]: GETUPVAL  R27 U32      ; R27 := U32
807 [-]: GETTABLE  R27 R27 K135 ; R27 := R27["SoundInst"]
808 [-]: CALL      R26 2 2      ; R26 := R26(R27)
809 [-]: TEST      R26 1        ; if R26 then PC := 818
810 [-]: JMP       818          ; PC := 818
811 [-]: GETGLOBAL R26 K26      ; R26 := 0x89326c93
812 [-]: SELF      R26 R26 K138 ; R27 := R26; R26 := R26[0x0cde6e4f]
813 [-]: GETUPVAL  R28 U32      ; R28 := U32
814 [-]: GETTABLE  R28 R28 K135 ; R28 := R28["SoundInst"]
815 [-]: MOVE      R29 R24      ; R29 := R24
816 [-]: LOADBOOL  R30 1 0      ; R30 := true
817 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
818 [-]: GETUPVAL  R26 U32      ; R26 := U32
819 [-]: SETTABLE  R26 K9 K18   ; R26["Loader"] := nil
820 [-]: GETUPVAL  R26 U32      ; R26 := U32
821 [-]: SETTABLE  R26 K131 K18 ; R26["QueuedTransmission"] := nil
822 [-]: GETUPVAL  R26 U32      ; R26 := U32
823 [-]: GETTABLE  R26 R26 K139 ; R26 := R26["Playing"]
824 [-]: TEST      R26 0        ; if not R26 then PC := 855
825 [-]: JMP       855          ; PC := 855
826 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
827 [-]: GETUPVAL  R27 U32      ; R27 := U32
828 [-]: GETTABLE  R27 R27 K135 ; R27 := R27["SoundInst"]
829 [-]: CALL      R26 2 2      ; R26 := R26(R27)
830 [-]: TEST      R26 0        ; if not R26 then PC := 855
831 [-]: JMP       855          ; PC := 855
832 [-]: GETUPVAL  R26 U32      ; R26 := U32
833 [-]: SETTABLE  R26 K139 K12 ; R26["Playing"] := false
834 [-]: GETGLOBAL R26 K140     ; R26 := 0x4ec73e73
835 [-]: GETUPVAL  R27 U32      ; R27 := U32
836 [-]: GETTABLE  R27 R27 K141 ; R27 := R27["Callbacks"]
837 [-]: CALL      R26 2 2      ; R26 := R26(R27)
838 [-]: EQ        1 R26 K18    ; if R26 == nil then PC := 849
839 [-]: JMP       849          ; PC := 849
840 [-]: GETUPVAL  R26 U32      ; R26 := U32
841 [-]: GETTABLE  R26 R26 K141 ; R26 := R26["Callbacks"]
842 [-]: GETTABLE  R26 R26 K142 ; R26 := R26[1.000000]
843 [-]: EQ        1 R26 K99    ; if R26 == 0.000000 then PC := 849
844 [-]: JMP       849          ; PC := 849
845 [-]: GETUPVAL  R26 U32      ; R26 := U32
846 [-]: GETTABLE  R26 R26 K141 ; R26 := R26["Callbacks"]
847 [-]: GETTABLE  R26 R26 K142 ; R26 := R26[1.000000]
848 [-]: CALL      R26 1 1      ; R26()
849 [-]: GETGLOBAL R26 K143     ; R26 := 0x33bdd652
850 [-]: GETTABLE  R26 R26 K144 ; R26 := R26[0x9c1f3b5a]
851 [-]: GETUPVAL  R27 U32      ; R27 := U32
852 [-]: GETTABLE  R27 R27 K141 ; R27 := R27["Callbacks"]
853 [-]: LOADK     R28 1        ; R28 := 1.000000
854 [-]: CALL      R26 3 1      ; R26(R27,R28)
855 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
856 [-]: GETUPVAL  R27 U32      ; R27 := U32
857 [-]: GETTABLE  R27 R27 K135 ; R27 := R27["SoundInst"]
858 [-]: CALL      R26 2 2      ; R26 := R26(R27)
859 [-]: TEST      R26 1        ; if R26 then PC := 866
860 [-]: JMP       866          ; PC := 866
861 [-]: GETUPVAL  R26 U32      ; R26 := U32
862 [-]: SETTABLE  R26 K139 K7  ; R26["Playing"] := true
863 [-]: GETUPVAL  R26 U34      ; R26 := U34
864 [-]: CALL      R26 1 1      ; R26()
865 [-]: JMP       901          ; PC := 901
866 [-]: GETUPVAL  R26 U32      ; R26 := U32
867 [-]: GETTABLE  R26 R26 K8   ; R26 := R26["IsLoading"]
868 [-]: TEST      R26 1        ; if R26 then PC := 901
869 [-]: JMP       901          ; PC := 901
870 [-]: GETUPVAL  R26 U32      ; R26 := U32
871 [-]: GETTABLE  R26 R26 K130 ; R26 := R26["DelayTime"]
872 [-]: LE        0 R26 K99    ; if R26 > 0.000000 then PC := 901
873 [-]: JMP       901          ; PC := 901
874 [-]: GETGLOBAL R26 K140     ; R26 := 0x4ec73e73
875 [-]: GETUPVAL  R27 U32      ; R27 := U32
876 [-]: GETTABLE  R27 R27 K145 ; R27 := R27["WaitingTransmissions"]
877 [-]: CALL      R26 2 2      ; R26 := R26(R27)
878 [-]: EQ        1 R26 K18    ; if R26 == nil then PC := 901
879 [-]: JMP       901          ; PC := 901
880 [-]: GETUPVAL  R26 U32      ; R26 := U32
881 [-]: GETGLOBAL R27 K143     ; R27 := 0x33bdd652
882 [-]: GETTABLE  R27 R27 K144 ; R27 := R27[0x9c1f3b5a]
883 [-]: GETUPVAL  R28 U32      ; R28 := U32
884 [-]: GETTABLE  R28 R28 K145 ; R28 := R28["WaitingTransmissions"]
885 [-]: LOADK     R29 1        ; R29 := 1.000000
886 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
887 [-]: SETTABLE  R26 K131 R27 ; R26["QueuedTransmission"] := R27
888 [-]: GETUPVAL  R26 U32      ; R26 := U32
889 [-]: GETGLOBAL R27 K72      ; R27 := 0xbd496aa1
890 [-]: GETTABLE  R27 R27 K73  ; R27 := R27[0x42645da3]
891 [-]: NEWTABLE  R28 0 0      ; R28 := {}
892 [-]: GETUPVAL  R29 U32      ; R29 := U32
893 [-]: GETTABLE  R29 R29 K131 ; R29 := R29["QueuedTransmission"]
894 [-]: SELF      R29 R29 K30  ; R30 := R29; R29 := R29[0xed4e0128]
895 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
896 [-]: SETLIST   R28 0 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 0
897 [-]: CALL      R27 2 2      ; R27 := R27(R28)
898 [-]: SETTABLE  R26 K9 R27   ; R26["Loader"] := R27
899 [-]: GETUPVAL  R26 U32      ; R26 := U32
900 [-]: SETTABLE  R26 K8 K7    ; R26["IsLoading"] := true
901 [-]: GETUPVAL  R26 U32      ; R26 := U32
902 [-]: GETTABLE  R26 R26 K8   ; R26 := R26["IsLoading"]
903 [-]: TEST      R26 1        ; if R26 then PC := 917
904 [-]: JMP       917          ; PC := 917
905 [-]: GETUPVAL  R26 U32      ; R26 := U32
906 [-]: GETTABLE  R26 R26 K130 ; R26 := R26["DelayTime"]
907 [-]: LE        0 R26 K99    ; if R26 > 0.000000 then PC := 917
908 [-]: JMP       917          ; PC := 917
909 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
910 [-]: GETUPVAL  R27 U32      ; R27 := U32
911 [-]: GETTABLE  R27 R27 K135 ; R27 := R27["SoundInst"]
912 [-]: CALL      R26 2 2      ; R26 := R26(R27)
913 [-]: TEST      R26 0        ; if not R26 then PC := 917
914 [-]: JMP       917          ; PC := 917
915 [-]: GETGLOBAL R26 K3       ; R26 := _T
916 [-]: SETTABLE  R26 K134 K18 ; R26["LypSyncDeco"] := nil
917 [-]: GETUPVAL  R26 U35      ; R26 := U35
918 [-]: GETTABLE  R26 R26 K146 ; R26 := R26["Avatar"]
919 [-]: EQ        1 R26 K18    ; if R26 == nil then PC := 927
920 [-]: JMP       927          ; PC := 927
921 [-]: GETUPVAL  R26 U35      ; R26 := U35
922 [-]: GETTABLE  R26 R26 K146 ; R26 := R26["Avatar"]
923 [-]: SELF      R26 R26 K147 ; R27 := R26; R26 := R26[0x98776060]
924 [-]: GETUPVAL  R28 U35      ; R28 := U35
925 [-]: GETTABLE  R28 R28 K148 ; R28 := R28["TargetPos"]
926 [-]: CALL      R26 3 1      ; R26(R27,R28)
927 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
928 [-]: GETGLOBAL R27 K47      ; R27 := 0xbe190284
929 [-]: CALL      R26 2 2      ; R26 := R26(R27)
930 [-]: TEST      R26 1        ; if R26 then PC := 941
931 [-]: JMP       941          ; PC := 941
932 [-]: GETUPVAL  R26 U36      ; R26 := U36
933 [-]: EQ        1 R26 K18    ; if R26 == nil then PC := 941
934 [-]: JMP       941          ; PC := 941
935 [-]: GETUPVAL  R26 U36      ; R26 := U36
936 [-]: LOADNIL   R27 R27      ; R27 := nil
937 [-]: SETUPVAL  R27 U36      ; U82 := R36
938 [-]: GETUPVAL  R27 U37      ; R27 := U37
939 [-]: MOVE      R28 R26      ; R28 := R26
940 [-]: CALL      R27 2 1      ; R27(R28)
941 [-]: GETGLOBAL R27 K2       ; R27 := 0x7b998233
942 [-]: GETGLOBAL R28 K26      ; R28 := 0x89326c93
943 [-]: CALL      R27 2 2      ; R27 := R27(R28)
944 [-]: TEST      R27 1        ; if R27 then PC := 1020
945 [-]: JMP       1020         ; PC := 1020
946 [-]: GETUPVAL  R27 U38      ; R27 := U38
947 [-]: GETTABLE  R27 R27 K149 ; R27 := R27["Timer"]
948 [-]: LE        0 K99 R27    ; if 0.000000 > R27 then PC := 1020
949 [-]: JMP       1020         ; PC := 1020
950 [-]: GETGLOBAL R27 K26      ; R27 := 0x89326c93
951 [-]: SELF      R27 R27 K150 ; R28 := R27; R27 := R27[0x7c1a0374]
952 [-]: CALL      R27 2 2      ; R27 := R27(R28)
953 [-]: GETGLOBAL R28 K2       ; R28 := 0x7b998233
954 [-]: MOVE      R29 R27      ; R29 := R27
955 [-]: CALL      R28 2 2      ; R28 := R28(R29)
956 [-]: TEST      R28 1        ; if R28 then PC := 1020
957 [-]: JMP       1020         ; PC := 1020
958 [-]: GETUPVAL  R28 U38      ; R28 := U38
959 [-]: GETUPVAL  R29 U38      ; R29 := U38
960 [-]: GETTABLE  R29 R29 K149 ; R29 := R29["Timer"]
961 [-]: GETGLOBAL R30 K101     ; R30 := 0x67652851
962 [-]: CALL      R30 1 2      ; R30 := R30()
963 [-]: ADD       R29 R29 R30  ; R29 := R29 + R30
964 [-]: SETTABLE  R28 K149 R29 ; R28["Timer"] := R29
965 [-]: GETUPVAL  R28 U38      ; R28 := U38
966 [-]: GETTABLE  R28 R28 K149 ; R28 := R28["Timer"]
967 [-]: GETUPVAL  R29 U38      ; R29 := U38
968 [-]: GETTABLE  R29 R29 K151 ; R29 := R29["InTime"]
969 [-]: LE        0 R28 R29    ; if R28 > R29 then PC := 982
970 [-]: JMP       982          ; PC := 982
971 [-]: GETUPVAL  R28 U38      ; R28 := U38
972 [-]: GETTABLE  R28 R28 K149 ; R28 := R28["Timer"]
973 [-]: GETUPVAL  R29 U38      ; R29 := U38
974 [-]: GETTABLE  R29 R29 K151 ; R29 := R29["InTime"]
975 [-]: DIV       R28 R28 R29  ; R28 := R28 / R29
976 [-]: SELF      R29 R27 K152 ; R30 := R27; R29 := R27[0xb6df3e50]
977 [-]: GETUPVAL  R31 U38      ; R31 := U38
978 [-]: GETTABLE  R31 R31 K153 ; R31 := R31["FinalVal"]
979 [-]: MUL       R31 R28 R31  ; R31 := R28 * R31
980 [-]: CALL      R29 3 1      ; R29(R30,R31)
981 [-]: JMP       1020         ; PC := 1020
982 [-]: GETUPVAL  R29 U38      ; R29 := U38
983 [-]: GETTABLE  R29 R29 K149 ; R29 := R29["Timer"]
984 [-]: GETUPVAL  R30 U38      ; R30 := U38
985 [-]: GETTABLE  R30 R30 K151 ; R30 := R30["InTime"]
986 [-]: GETUPVAL  R31 U38      ; R31 := U38
987 [-]: GETTABLE  R31 R31 K154 ; R31 := R31["OutTime"]
988 [-]: ADD       R30 R30 R31  ; R30 := R30 + R31
989 [-]: LE        0 R29 R30    ; if R29 > R30 then PC := 1015
990 [-]: JMP       1015         ; PC := 1015
991 [-]: GETUPVAL  R29 U38      ; R29 := U38
992 [-]: GETTABLE  R29 R29 K155 ; R29 := R29["FullCallback"]
993 [-]: EQ        1 R29 K18    ; if R29 == nil then PC := 1000
994 [-]: JMP       1000         ; PC := 1000
995 [-]: GETUPVAL  R29 U38      ; R29 := U38
996 [-]: GETTABLE  R29 R29 K156 ; R29 := R29[0x91b51300]
997 [-]: CALL      R29 1 1      ; R29()
998 [-]: GETUPVAL  R29 U38      ; R29 := U38
999 [-]: SETTABLE  R29 K155 K18 ; R29["FullCallback"] := nil
1000 [-]: GETUPVAL  R29 U38      ; R29 := U38
1001 [-]: GETTABLE  R29 R29 K149 ; R29 := R29["Timer"]
1002 [-]: GETUPVAL  R30 U38      ; R30 := U38
1003 [-]: GETTABLE  R30 R30 K151 ; R30 := R30["InTime"]
1004 [-]: SUB       R29 R29 R30  ; R29 := R29 - R30
1005 [-]: GETUPVAL  R30 U38      ; R30 := U38
1006 [-]: GETTABLE  R30 R30 K154 ; R30 := R30["OutTime"]
1007 [-]: DIV       R29 R29 R30  ; R29 := R29 / R30
1008 [-]: SUB       R29 K142 R29 ; R29 := 1.000000 - R29
1009 [-]: SELF      R30 R27 K152 ; R31 := R27; R30 := R27[0xb6df3e50]
1010 [-]: GETUPVAL  R32 U38      ; R32 := U38
1011 [-]: GETTABLE  R32 R32 K153 ; R32 := R32["FinalVal"]
1012 [-]: MUL       R32 R29 R32  ; R32 := R29 * R32
1013 [-]: CALL      R30 3 1      ; R30(R31,R32)
1014 [-]: JMP       1020         ; PC := 1020
1015 [-]: GETUPVAL  R30 U38      ; R30 := U38
1016 [-]: SETTABLE  R30 K149 K104; R30["Timer"] := -1.000000
1017 [-]: SELF      R30 R27 K152 ; R31 := R27; R30 := R27[0xb6df3e50]
1018 [-]: LOADK     R32 0        ; R32 := 0.000000
1019 [-]: CALL      R30 3 1      ; R30(R31,R32)
1020 [-]: GETGLOBAL R30 K2       ; R30 := 0x7b998233
1021 [-]: GETGLOBAL R31 K26      ; R31 := 0x89326c93
1022 [-]: CALL      R30 2 2      ; R30 := R30(R31)
1023 [-]: TEST      R30 1        ; if R30 then PC := 1051
1024 [-]: JMP       1051         ; PC := 1051
1025 [-]: GETGLOBAL R30 K3       ; R30 := _T
1026 [-]: GETTABLE  R30 R30 K157 ; R30 := R30["QuestStartCinPlaying"]
1027 [-]: TEST      R30 1        ; if R30 then PC := 1051
1028 [-]: JMP       1051         ; PC := 1051
1029 [-]: GETGLOBAL R30 K26      ; R30 := 0x89326c93
1030 [-]: SELF      R30 R30 K150 ; R31 := R30; R30 := R30[0x7c1a0374]
1031 [-]: CALL      R30 2 2      ; R30 := R30(R31)
1032 [-]: GETGLOBAL R31 K2       ; R31 := 0x7b998233
1033 [-]: MOVE      R32 R30      ; R32 := R30
1034 [-]: CALL      R31 2 2      ; R31 := R31(R32)
1035 [-]: TEST      R31 1        ; if R31 then PC := 1051
1036 [-]: JMP       1051         ; PC := 1051
1037 [-]: SELF      R31 R30 K158 ; R32 := R30; R31 := R30[0x65c7544c]
1038 [-]: CALL      R31 2 2      ; R31 := R31(R32)
1039 [-]: GETUPVAL  R32 U39      ; R32 := U39
1040 [-]: EQ        1 R32 K18    ; if R32 == nil then PC := 1045
1041 [-]: JMP       1045         ; PC := 1045
1042 [-]: GETUPVAL  R32 U39      ; R32 := U39
1043 [-]: EQ        1 R32 R31    ; if R32 == R31 then PC := 1051
1044 [-]: JMP       1051         ; PC := 1051
1045 [-]: SETUPVAL  R31 U39      ; U82 := R39
1046 [-]: GETGLOBAL R32 K90      ; R32 := 0x9ba7909f
1047 [-]: SELF      R32 R32 K159 ; R33 := R32; R32 := R32[0x103453dc]
1048 [-]: MUL       R34 R31 R31  ; R34 := R31 * R31
1049 [-]: SUB       R34 K142 R34 ; R34 := 1.000000 - R34
1050 [-]: CALL      R32 3 1      ; R32(R33,R34)
1051 [-]: GETGLOBAL R32 K3       ; R32 := _T
1052 [-]: GETTABLE  R32 R32 K160 ; R32 := R32["DelayedCall"]
1053 [-]: EQ        1 R32 K18    ; if R32 == nil then PC := 1060
1054 [-]: JMP       1060         ; PC := 1060
1055 [-]: GETGLOBAL R32 K3       ; R32 := _T
1056 [-]: GETTABLE  R32 R32 K161 ; R32 := R32[0xc3ff3268]
1057 [-]: CALL      R32 1 1      ; R32()
1058 [-]: GETGLOBAL R32 K3       ; R32 := _T
1059 [-]: SETTABLE  R32 K160 K18 ; R32["DelayedCall"] := nil
1060 [-]: GETGLOBAL R32 K2       ; R32 := 0x7b998233
1061 [-]: GETGLOBAL R33 K3       ; R33 := _T
1062 [-]: GETTABLE  R33 R33 K162 ; R33 := R33["ActionFigureLoadOutLoader"]
1063 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1064 [-]: TEST      R32 1        ; if R32 then PC := 1070
1065 [-]: JMP       1070         ; PC := 1070
1066 [-]: GETGLOBAL R32 K3       ; R32 := _T
1067 [-]: GETTABLE  R32 R32 K162 ; R32 := R32["ActionFigureLoadOutLoader"]
1068 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32[0xfaa69527]
1069 [-]: CALL      R32 2 1      ; R32(R33)
1070 [-]: GETGLOBAL R32 K2       ; R32 := 0x7b998233
1071 [-]: GETGLOBAL R33 K3       ; R33 := _T
1072 [-]: GETTABLE  R33 R33 K163 ; R33 := R33["FavouriteLoadoutLoader"]
1073 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1074 [-]: TEST      R32 0        ; if not R32 then PC := 1079
1075 [-]: JMP       1079         ; PC := 1079
1076 [-]: GETGLOBAL R32 K3       ; R32 := _T
1077 [-]: NEWTABLE  R33 0 0      ; R33 := {}
1078 [-]: SETTABLE  R32 K163 R33 ; R32["FavouriteLoadoutLoader"] := R33
1079 [-]: GETGLOBAL R32 K2       ; R32 := 0x7b998233
1080 [-]: GETGLOBAL R33 K3       ; R33 := _T
1081 [-]: GETTABLE  R33 R33 K164 ; R33 := R33["FavWarframeAvatar"]
1082 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1083 [-]: TEST      R32 0        ; if not R32 then PC := 1088
1084 [-]: JMP       1088         ; PC := 1088
1085 [-]: GETGLOBAL R32 K3       ; R32 := _T
1086 [-]: NEWTABLE  R33 0 0      ; R33 := {}
1087 [-]: SETTABLE  R32 K164 R33 ; R32["FavWarframeAvatar"] := R33
1088 [-]: GETGLOBAL R32 K2       ; R32 := 0x7b998233
1089 [-]: GETGLOBAL R33 K3       ; R33 := _T
1090 [-]: GETTABLE  R33 R33 K163 ; R33 := R33["FavouriteLoadoutLoader"]
1091 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1092 [-]: TEST      R32 1        ; if R32 then PC := 1162
1093 [-]: JMP       1162         ; PC := 1162
1094 [-]: GETGLOBAL R32 K165     ; R32 := 0xcfc01047
1095 [-]: GETGLOBAL R33 K3       ; R33 := _T
1096 [-]: GETTABLE  R33 R33 K163 ; R33 := R33["FavouriteLoadoutLoader"]
1097 [-]: CALL      R32 2 4      ; R32,R33,R34 := R32(R33)
1098 [-]: JMP       1160         ; PC := 1160
1099 [-]: GETGLOBAL R37 K3       ; R37 := _T
1100 [-]: GETTABLE  R37 R37 K163 ; R37 := R37["FavouriteLoadoutLoader"]
1101 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
1102 [-]: TEST      R37 0        ; if not R37 then PC := 1160
1103 [-]: JMP       1160         ; PC := 1160
1104 [-]: GETGLOBAL R37 K2       ; R37 := 0x7b998233
1105 [-]: GETGLOBAL R38 K3       ; R38 := _T
1106 [-]: GETTABLE  R38 R38 K163 ; R38 := R38["FavouriteLoadoutLoader"]
1107 [-]: GETTABLE  R38 R38 R35  ; R38 := R38[R35]
1108 [-]: GETTABLE  R38 R38 K9   ; R38 := R38["Loader"]
1109 [-]: CALL      R37 2 2      ; R37 := R37(R38)
1110 [-]: TEST      R37 1        ; if R37 then PC := 1160
1111 [-]: JMP       1160         ; PC := 1160
1112 [-]: GETGLOBAL R37 K3       ; R37 := _T
1113 [-]: GETTABLE  R37 R37 K163 ; R37 := R37["FavouriteLoadoutLoader"]
1114 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
1115 [-]: GETTABLE  R37 R37 K9   ; R37 := R37["Loader"]
1116 [-]: SELF      R37 R37 K10  ; R38 := R37; R37 := R37[0xd2d3875a]
1117 [-]: CALL      R37 2 2      ; R37 := R37(R38)
1118 [-]: TEST      R37 0        ; if not R37 then PC := 1160
1119 [-]: JMP       1160         ; PC := 1160
1120 [-]: GETGLOBAL R37 K2       ; R37 := 0x7b998233
1121 [-]: GETGLOBAL R38 K3       ; R38 := _T
1122 [-]: GETTABLE  R38 R38 K164 ; R38 := R38["FavWarframeAvatar"]
1123 [-]: GETTABLE  R38 R38 R35  ; R38 := R38[R35]
1124 [-]: CALL      R37 2 2      ; R37 := R37(R38)
1125 [-]: TEST      R37 1        ; if R37 then PC := 1160
1126 [-]: JMP       1160         ; PC := 1160
1127 [-]: GETGLOBAL R37 K3       ; R37 := _T
1128 [-]: GETTABLE  R37 R37 K164 ; R37 := R37["FavWarframeAvatar"]
1129 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
1130 [-]: SELF      R37 R37 K166 ; R38 := R37; R37 := R37[0x9d668f53]
1131 [-]: GETGLOBAL R39 K167     ; R39 := 0x0469f296
1132 [-]: CALL      R39 1 2      ; R39 := R39()
1133 [-]: LOADK     R40 100      ; R40 := 100.000000
1134 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
1135 [-]: GETGLOBAL R37 K3       ; R37 := _T
1136 [-]: GETTABLE  R37 R37 K164 ; R37 := R37["FavWarframeAvatar"]
1137 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
1138 [-]: SELF      R37 R37 K168 ; R38 := R37; R37 := R37[0xb2532845]
1139 [-]: GETGLOBAL R39 K167     ; R39 := 0x0469f296
1140 [-]: LOADK     R40 K169     ; R40 := "Statue"
1141 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
1142 [-]: CALL      R37 0 1      ; R37(R38,...)
1143 [-]: GETGLOBAL R37 K3       ; R37 := _T
1144 [-]: GETTABLE  R37 R37 K164 ; R37 := R37["FavWarframeAvatar"]
1145 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
1146 [-]: SELF      R37 R37 K170 ; R38 := R37; R37 := R37[0xde321e6f]
1147 [-]: CALL      R37 2 2      ; R37 := R37(R38)
1148 [-]: SELF      R38 R37 K171 ; R39 := R37; R38 := R37[0x1d2dfe4a]
1149 [-]: GETGLOBAL R40 K3       ; R40 := _T
1150 [-]: GETTABLE  R40 R40 K163 ; R40 := R40["FavouriteLoadoutLoader"]
1151 [-]: GETTABLE  R40 R40 R35  ; R40 := R40[R35]
1152 [-]: GETTABLE  R40 R40 K172 ; R40 := R40["Loadout"]
1153 [-]: CALL      R38 3 1      ; R38(R39,R40)
1154 [-]: SELF      R38 R37 K173 ; R39 := R37; R38 := R37[0xa65fc8a8]
1155 [-]: LOADBOOL  R40 1 0      ; R40 := true
1156 [-]: CALL      R38 3 1      ; R38(R39,R40)
1157 [-]: GETGLOBAL R38 K3       ; R38 := _T
1158 [-]: GETTABLE  R38 R38 K163 ; R38 := R38["FavouriteLoadoutLoader"]
1159 [-]: SETTABLE  R38 R35 K18  ; R38[R35] := nil
1160 [-]: TFORLOOP  R32 2        ; R35,R36 :=  R32(R33,R34); if R35 ~= nil then begin PC = 1099; R34 := R35 end
1161 [-]: JMP       1099         ; PC := 1099
1162 [-]: GETUPVAL  R38 U40      ; R38 := U40
1163 [-]: TEST      R38 0        ; if not R38 then PC := 1174
1164 [-]: JMP       1174         ; PC := 1174
1165 [-]: GETGLOBAL R38 K3       ; R38 := _T
1166 [-]: GETTABLE  R38 R38 K174 ; R38 := R38["SquadOverlay"]
1167 [-]: TEST      R38 0        ; if not R38 then PC := 1174
1168 [-]: JMP       1174         ; PC := 1174
1169 [-]: GETUPVAL  R38 U41      ; R38 := U41
1170 [-]: GETUPVAL  R39 U40      ; R39 := U40
1171 [-]: CALL      R38 2 1      ; R38(R39)
1172 [-]: LOADNIL   R38 R38      ; R38 := nil
1173 [-]: SETUPVAL  R38 U40      ; U82 := R40
1174 [-]: GETUPVAL  R38 U42      ; R38 := U42
1175 [-]: CALL      R38 1 1      ; R38()
1176 [-]: GETGLOBAL R38 K3       ; R38 := _T
1177 [-]: GETTABLE  R38 R38 K175 ; R38 := R38["PendingScenarioHubName"]
1178 [-]: TEST      R38 0        ; if not R38 then PC := 1202
1179 [-]: JMP       1202         ; PC := 1202
1180 [-]: GETGLOBAL R38 K3       ; R38 := _T
1181 [-]: GETTABLE  R38 R38 K176 ; R38 := R38["ScenarioHubStarted"]
1182 [-]: TEST      R38 1        ; if R38 then PC := 1199
1183 [-]: JMP       1199         ; PC := 1199
1184 [-]: GETGLOBAL R38 K53      ; R38 := 0x3d106989
1185 [-]: LOADK     R39 K177     ; R39 := "Connecting to scenario hub "
1186 [-]: GETGLOBAL R40 K3       ; R40 := _T
1187 [-]: GETTABLE  R40 R40 K175 ; R40 := R40["PendingScenarioHubName"]
1188 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
1189 [-]: CALL      R38 2 1      ; R38(R39)
1190 [-]: GETGLOBAL R38 K3       ; R38 := _T
1191 [-]: SETTABLE  R38 K176 K7  ; R38["ScenarioHubStarted"] := true
1192 [-]: GETGLOBAL R38 K47      ; R38 := 0xbe190284
1193 [-]: SELF      R38 R38 K178 ; R39 := R38; R38 := R38[0xf53075e2]
1194 [-]: GETGLOBAL R40 K167     ; R40 := 0x0469f296
1195 [-]: GETGLOBAL R41 K3       ; R41 := _T
1196 [-]: GETTABLE  R41 R41 K175 ; R41 := R41["PendingScenarioHubName"]
1197 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
1198 [-]: CALL      R38 0 1      ; R38(R39,...)
1199 [-]: GETGLOBAL R38 K3       ; R38 := _T
1200 [-]: SETTABLE  R38 K175 K18 ; R38["PendingScenarioHubName"] := nil
1201 [-]: JMP       1212         ; PC := 1212
1202 [-]: GETGLOBAL R38 K3       ; R38 := _T
1203 [-]: GETTABLE  R38 R38 K179 ; R38 := R38["PendingScenarioHubShutdown"]
1204 [-]: TEST      R38 0        ; if not R38 then PC := 1212
1205 [-]: JMP       1212         ; PC := 1212
1206 [-]: GETGLOBAL R38 K3       ; R38 := _T
1207 [-]: SETTABLE  R38 K179 K18 ; R38["PendingScenarioHubShutdown"] := nil
1208 [-]: GETGLOBAL R38 K47      ; R38 := 0xbe190284
1209 [-]: SELF      R38 R38 K180 ; R39 := R38; R38 := R38[0x39c667a9]
1210 [-]: LOADBOOL  R40 1 0      ; R40 := true
1211 [-]: CALL      R38 3 1      ; R38(R39,R40)
1212 [-]: GETGLOBAL R38 K2       ; R38 := 0x7b998233
1213 [-]: GETGLOBAL R39 K181     ; R39 := 0x83f4e77c
1214 [-]: CALL      R38 2 2      ; R38 := R38(R39)
1215 [-]: TEST      R38 1        ; if R38 then PC := 1243
1216 [-]: JMP       1243         ; PC := 1243
1217 [-]: GETGLOBAL R38 K182     ; R38 := 0xe7f2b02f
1218 [-]: SELF      R38 R38 K183 ; R39 := R38; R38 := R38[0xeaad7523]
1219 [-]: GETGLOBAL R40 K181     ; R40 := 0x83f4e77c
1220 [-]: SELF      R40 R40 K184 ; R41 := R40; R40 := R40[0xac0a30b1]
1221 [-]: CALL      R40 2 2      ; R40 := R40(R41)
1222 [-]: TEST      R40 0        ; if not R40 then PC := 1242
1223 [-]: JMP       1242         ; PC := 1242
1224 [-]: GETGLOBAL R40 K2       ; R40 := 0x7b998233
1225 [-]: GETGLOBAL R41 K47      ; R41 := 0xbe190284
1226 [-]: CALL      R40 2 2      ; R40 := R40(R41)
1227 [-]: TEST      R40 1        ; if R40 then PC := 1240
1228 [-]: JMP       1240         ; PC := 1240
1229 [-]: GETGLOBAL R40 K47      ; R40 := 0xbe190284
1230 [-]: SELF      R40 R40 K185 ; R41 := R40; R40 := R40[0xf2deaf69]
1231 [-]: GETGLOBAL R42 K186     ; R42 := gLotusAttractModeGameRulesType
1232 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
1233 [-]: TEST      R40 1        ; if R40 then PC := 1242
1234 [-]: JMP       1242         ; PC := 1242
1235 [-]: GETGLOBAL R40 K47      ; R40 := 0xbe190284
1236 [-]: SELF      R40 R40 K185 ; R41 := R40; R40 := R40[0xf2deaf69]
1237 [-]: GETGLOBAL R42 K187     ; R42 := gLotusHubGameRulesType
1238 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
1239 [-]: JMP       1242         ; PC := 1242
1240 [-]: LOADBOOL  R40 0 1      ; R40 := false; PC := 1241
1241 [-]: LOADBOOL  R40 1 0      ; R40 := true
1242 [-]: CALL      R38 3 1      ; R38(R39,R40)
1243 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 5793
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 1         ; R1 := 1.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 1         ; R3 := 1.000000
  5 [-]: FORPREP   R1 12        ; R1 -= R3; PC := 12
  6 [-]: GETGLOBAL R5 K0        ; R5 := screenStack
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADBOOL  R5 1 0       ; R5 := true
 11 [-]: RETURN    R5 2         ; return R5
 12 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 13 [-]: LOADBOOL  R5 0 0       ; R5 := false
 14 [-]: RETURN    R5 2         ; return R5
 15 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 5802
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LOADK     R3 K1        ; R3 := "ForceIntoStack()"
  4 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 5807
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LOADK     R3 K1        ; R3 := "ForceOutOfStack()"
  4 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K2        ; R1 := screenStack
  7 [-]: LEN       R1 R1        ; R1 := # R1
  8 [-]: LOADK     R2 1         ; R2 := 1.000000
  9 [-]: LOADK     R3 -1        ; R3 := -1.000000
 10 [-]: FORPREP   R1 19        ; R1 -= R3; PC := 19
 11 [-]: GETGLOBAL R5 K2        ; R5 := screenStack
 12 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 13 [-]: EQ        0 R5 R0      ; if R5 ~= R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R5 U1        ; R5 := U1
 16 [-]: MOVE      R6 R4        ; R6 := R4
 17 [-]: CALL      R5 2 1       ; R5(R6)
 18 [-]: JMP       20           ; PC := 20
 19 [-]: FORLOOP   R1 11        ; R1 += R3; if R1 <= R2 then begin PC := 11; R4 := R1 end
 20 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 5819
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LOADK     R2 K1        ; R2 := "ForceClearChildMovie()"
  4 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: SETGLOBAL R0 K2        ; mChildMovie := R0
  8 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 5825
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := mOpenScreenAsyncInfo
  2 [-]: SETTABLE  R1 K1 K2     ; R1["IsLoading"] := false
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x3d106989
  4 [-]: LOADK     R2 K4        ; R2 := "Background: MovieLoaded"
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: LOADK     R2 0         ; R2 := 0.000000
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K0        ; R2 := mOpenScreenAsyncInfo
 11 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Callback"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K0        ; R1 := mOpenScreenAsyncInfo
 16 [-]: GETTABLE  R1 R1 K7     ; R1 := R1[0x75afeb61]
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 5836
; #Upvalues:       4
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x3d106989
  2 [-]: GETUPVAL  R5 U0        ; R5 := U0
  3 [-]: LOADK     R6 K1        ; R6 := "OpenScreen(screenName="
  4 [-]: GETGLOBAL R7 K2        ; R7 := 0x64fb1586
  5 [-]: MOVE      R8 R0        ; R8 := R0
  6 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  7 [-]: LOADK     R8 K3        ; R8 := ", openFromMovie="
  8 [-]: GETGLOBAL R9 K2        ; R9 := 0x64fb1586
  9 [-]: MOVE      R10 R1       ; R10 := R1
 10 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 11 [-]: LOADK     R10 K4       ; R10 := ", ignoreIfOpen="
 12 [-]: GETGLOBAL R11 K2       ; R11 := 0x64fb1586
 13 [-]: MOVE      R12 R2       ; R12 := R2
 14 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 15 [-]: LOADK     R12 K5       ; R12 := ", openAsAsync="
 16 [-]: GETGLOBAL R13 K2       ; R13 := 0x64fb1586
 17 [-]: MOVE      R14 R3       ; R14 := R3
 18 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 19 [-]: LOADK     R14 K6       ; R14 := ")"
 20 [-]: CONCAT    R5 R5 R14    ; R5 := R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11 .. R12 .. R13 .. R14
 21 [-]: CALL      R4 2 1       ; R4(R5)
 22 [-]: GETGLOBAL R4 K7        ; R4 := movies
 23 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 24 [-]: EQ        1 R4 K8      ; if R4 == nil then PC := 100
 25 [-]: JMP       100          ; PC := 100
 26 [-]: GETUPVAL  R4 U1        ; R4 := U1
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 0         ; if not R4 then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: TEST      R2 0         ; if not R2 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0x9ba7909f
 35 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xbcfb64ab]
 36 [-]: GETGLOBAL R6 K7        ; R6 := movies
 37 [-]: GETTABLE  R6 R6 R0     ; R6 := R6[R0]
 38 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 39 [-]: GETGLOBAL R5 K11       ; R5 := 0x7b998233
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: TEST      R5 1         ; if R5 then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: SELF      R5 R4 K12    ; R6 := R4; R5 := R4[0x32302b4a]
 45 [-]: CALL      R5 2 1       ; R5(R6)
 46 [-]: LOADNIL   R5 R5        ; R5 := nil
 47 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 48 [-]: MOVE      R7 R1        ; R7 := R1
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: TEST      R6 1         ; if R6 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R5 R1        ; R5 := R1
 53 [-]: JMP       67           ; PC := 67
 54 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 55 [-]: GETGLOBAL R7 K13       ; R7 := mChildMovie
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: TEST      R6 1         ; if R6 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: GETGLOBAL R5 K13       ; R5 := mChildMovie
 60 [-]: JMP       67           ; PC := 67
 61 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 62 [-]: GETGLOBAL R7 K14       ; R7 := 0xae91e43b
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: TEST      R6 1         ; if R6 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: GETGLOBAL R5 K14       ; R5 := 0xae91e43b
 67 [-]: TEST      R3 0         ; if not R3 then PC := 85
 68 [-]: JMP       85           ; PC := 85
 69 [-]: GETGLOBAL R6 K11       ; R6 := 0x7b998233
 70 [-]: MOVE      R7 R5        ; R7 := R5
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: TEST      R6 1         ; if R6 then PC := 111
 73 [-]: JMP       111          ; PC := 111
 74 [-]: GETUPVAL  R6 U2        ; R6 := U2
 75 [-]: LOADK     R7 2         ; R7 := 2.000000
 76 [-]: CALL      R6 2 1       ; R6(R7)
 77 [-]: GETGLOBAL R6 K15       ; R6 := mOpenScreenAsyncInfo
 78 [-]: SETTABLE  R6 K16 K17   ; R6["IsLoading"] := true
 79 [-]: SELF      R6 R5 K18    ; R7 := R5; R6 := R5[0xbf3e8f54]
 80 [-]: GETGLOBAL R8 K7        ; R8 := movies
 81 [-]: GETTABLE  R8 R8 R0     ; R8 := R8[R0]
 82 [-]: LOADK     R9 K19       ; R9 := "OnMovieLoaded"
 83 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 84 [-]: JMP       111          ; PC := 111
 85 [-]: LOADNIL   R6 R6        ; R6 := nil
 86 [-]: GETGLOBAL R7 K11       ; R7 := 0x7b998233
 87 [-]: MOVE      R8 R5        ; R8 := R5
 88 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 89 [-]: TEST      R7 1         ; if R7 then PC := 96
 90 [-]: JMP       96           ; PC := 96
 91 [-]: SELF      R7 R5 K20    ; R8 := R5; R7 := R5[0x1fd6abd0]
 92 [-]: GETGLOBAL R9 K7        ; R9 := movies
 93 [-]: GETTABLE  R9 R9 R0     ; R9 := R9[R0]
 94 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 95 [-]: MOVE      R6 R7        ; R6 := R7
 96 [-]: GETUPVAL  R7 U3        ; R7 := U3
 97 [-]: CALL      R7 1 1       ; R7()
 98 [-]: RETURN    R6 2         ; return R6
 99 [-]: JMP       111          ; PC := 111
100 [-]: GETGLOBAL R7 K0        ; R7 := 0x3d106989
101 [-]: LOADK     R8 K21       ; R8 := "ERROR: Tried to open unrecognized screen ["
102 [-]: GETGLOBAL R9 K2        ; R9 := 0x64fb1586
103 [-]: MOVE      R10 R0       ; R10 := R0
104 [-]: CALL      R9 2 2       ; R9 := R9(R10)
105 [-]: LOADK     R10 K22      ; R10 := "] Check your spelling."
106 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
107 [-]: CALL      R7 2 1       ; R7(R8)
108 [-]: GETGLOBAL R7 K23       ; R7 := 0x60cce7b4
109 [-]: LOADBOOL  R8 0 0       ; R8 := false
110 [-]: CALL      R7 2 1       ; R7(R8)
111 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 5881
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K0        ; R1 := mOpenScreenAsyncInfo
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ScreenName"]
  4 [-]: GETGLOBAL R2 K0        ; R2 := mOpenScreenAsyncInfo
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["OpenFromMovie"]
  6 [-]: GETGLOBAL R3 K0        ; R3 := mOpenScreenAsyncInfo
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["IgnoreIfOpen"]
  8 [-]: LOADBOOL  R4 1 0       ; R4 := true
  9 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 5885
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
  2 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["IsLoading"]
  3 [-]: TEST      R4 1         ; if R4 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 0         ; if not R4 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 12 [-]: SETTABLE  R4 K4 R0     ; R4["ScreenName"] := R0
 13 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 14 [-]: SETTABLE  R4 K5 R1     ; R4["OpenFromMovie"] := R1
 15 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 16 [-]: SETTABLE  R4 K6 R2     ; R4["IgnoreIfOpen"] := R2
 17 [-]: GETGLOBAL R4 K0        ; R4 := mOpenScreenAsyncInfo
 18 [-]: SETTABLE  R4 K7 R3     ; R4["Callback"] := R3
 19 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 20 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xe4162eed]
 21 [-]: LOADK     R6 K9        ; R6 := "OpenScreenAsyncContextReset"
 22 [-]: LOADK     R7 K10       ; R7 := ""
 23 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 24 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 5899
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mAbortingQuickMatch
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x83f4e77c
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xac0a30b1]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: LOADBOOL  R0 1 0       ; R0 := true
 10 [-]: SETGLOBAL R0 K0        ; mAbortingQuickMatch := R0
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: LOADK     R1 1         ; R1 := 1.000000
 13 [-]: CALL      R0 2 1       ; R0(R1)
 14 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 5906
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 5910
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0x609b196e]
  9 [-]: GETGLOBAL R3 K1        ; R3 := screenStack
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
 12 [-]: CALL      R1 0 1       ; R1(R2,...)
 13 [-]: GETGLOBAL R1 K2        ; R1 := 0x9ba7909f
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbcfb64ab]
 15 [-]: GETGLOBAL R3 K4        ; R3 := movies
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0xe4162eed]
 24 [-]: LOADK     R4 K7        ; R4 := "TransitionOut"
 25 [-]: LOADK     R5 K8        ; R5 := ""
 26 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 5921
; #Upvalues:       8
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xd342d13d]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: TEST      R2 0         ; if not R2 then PC := 31
  5 [-]: JMP       31           ; PC := 31
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2[0xcf1fcba4]
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: TEST      R2 1         ; if R2 then PC := 31
 10 [-]: JMP       31           ; PC := 31
 11 [-]: GETGLOBAL R2 K2        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["InSimulacrum"]
 13 [-]: TEST      R2 1         ; if R2 then PC := 31
 14 [-]: JMP       31           ; PC := 31
 15 [-]: GETGLOBAL R2 K4        ; R2 := 0x9ba7909f
 16 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xbcfb64ab]
 17 [-]: GETGLOBAL R4 K6        ; R4 := movies
 18 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 19 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 20 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 0         ; if not R3 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R3 K4        ; R3 := 0x9ba7909f
 26 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x6dd7aa66]
 27 [-]: GETGLOBAL R5 K6        ; R5 := movies
 28 [-]: GETTABLE  R5 R5 R0     ; R5 := R5[R0]
 29 [-]: CALL      R3 3 1       ; R3(R4,R5)
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R3 K9        ; R3 := 0xe7f2b02f
 32 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x0b6ebd5b]
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 0         ; if not R3 then PC := 58
 35 [-]: JMP       58           ; PC := 58
 36 [-]: LOADK     R3 1         ; R3 := 1.000000
 37 [-]: GETGLOBAL R4 K11       ; R4 := screenStack
 38 [-]: LEN       R4 R4        ; R4 := # R4
 39 [-]: LOADK     R5 1         ; R5 := 1.000000
 40 [-]: FORPREP   R3 57        ; R3 -= R5; PC := 57
 41 [-]: GETUPVAL  R7 U1        ; R7 := U1
 42 [-]: GETGLOBAL R8 K11       ; R8 := screenStack
 43 [-]: GETTABLE  R8 R8 R6     ; R8 := R8[R6]
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: TEST      R7 0         ; if not R7 then PC := 57
 46 [-]: JMP       57           ; PC := 57
 47 [-]: GETGLOBAL R7 K12       ; R7 := mQueuedGoToScreen
 48 [-]: EQ        0 R7 K13     ; if R7 ~= nil then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 51 [-]: SETTABLE  R7 K14 R0    ; R7["screen"] := R0
 52 [-]: SETTABLE  R7 K15 R1    ; R7["callback"] := R1
 53 [-]: SETGLOBAL R7 K12       ; mQueuedGoToScreen := R7
 54 [-]: GETUPVAL  R7 U2        ; R7 := U2
 55 [-]: CALL      R7 1 1       ; R7()
 56 [-]: RETURN    R0 1         ; return 
 57 [-]: FORLOOP   R3 41        ; R3 += R5; if R3 <= R4 then begin PC := 41; R6 := R3 end
 58 [-]: GETGLOBAL R7 K11       ; R7 := screenStack
 59 [-]: GETGLOBAL R8 K11       ; R8 := screenStack
 60 [-]: LEN       R8 R8        ; R8 := # R8
 61 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 62 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: GETGLOBAL R8 K16       ; R8 := 0x3d106989
 66 [-]: GETUPVAL  R9 U3        ; R9 := U3
 67 [-]: LOADK     R10 K17      ; R10 := "GoToScreen(screenName="
 68 [-]: GETGLOBAL R11 K18      ; R11 := 0x64fb1586
 69 [-]: MOVE      R12 R0       ; R12 := R0
 70 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 71 [-]: LOADK     R12 K19      ; R12 := ")"
 72 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 73 [-]: CALL      R8 2 1       ; R8(R9)
 74 [-]: GETGLOBAL R8 K20       ; R8 := 0xae91e43b
 75 [-]: GETGLOBAL R9 K7        ; R9 := 0x7b998233
 76 [-]: GETGLOBAL R10 K21      ; R10 := mChildMovie
 77 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 78 [-]: TEST      R9 1         ; if R9 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: GETGLOBAL R8 K21       ; R8 := mChildMovie
 81 [-]: GETGLOBAL R9 K7        ; R9 := 0x7b998233
 82 [-]: GETGLOBAL R10 K6       ; R10 := movies
 83 [-]: GETTABLE  R10 R10 R0   ; R10 := R10[R0]
 84 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 85 [-]: TEST      R9 1         ; if R9 then PC := 132
 86 [-]: JMP       132          ; PC := 132
 87 [-]: GETUPVAL  R9 U4        ; R9 := U4
 88 [-]: MOVE      R10 R0       ; R10 := R0
 89 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 90 [-]: TEST      R9 0         ; if not R9 then PC := 111
 91 [-]: JMP       111          ; PC := 111
 92 [-]: GETGLOBAL R9 K4        ; R9 := 0x9ba7909f
 93 [-]: SELF      R9 R9 K5     ; R10 := R9; R9 := R9[0xbcfb64ab]
 94 [-]: GETGLOBAL R11 K6       ; R11 := movies
 95 [-]: GETTABLE  R11 R11 R0   ; R11 := R11[R0]
 96 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 97 [-]: GETGLOBAL R10 K7       ; R10 := 0x7b998233
 98 [-]: MOVE      R11 R9       ; R11 := R9
 99 [-]: CALL      R10 2 2      ; R10 := R10(R11)
100 [-]: TEST      R10 1        ; if R10 then PC := 104
101 [-]: JMP       104          ; PC := 104
102 [-]: SELF      R10 R9 K22   ; R11 := R9; R10 := R9[0x32302b4a]
103 [-]: CALL      R10 2 1      ; R10(R11)
104 [-]: GETUPVAL  R10 U5       ; R10 := U5
105 [-]: GETUPVAL  R11 U6       ; R11 := U6
106 [-]: GETTABLE  R11 R11 K23  ; R11 := R11[0x609b196e]
107 [-]: GETGLOBAL R12 K11      ; R12 := screenStack
108 [-]: MOVE      R13 R0       ; R13 := R0
109 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
110 [-]: CALL      R10 0 1      ; R10(R11,...)
111 [-]: GETGLOBAL R10 K7       ; R10 := 0x7b998233
112 [-]: GETGLOBAL R11 K21      ; R11 := mChildMovie
113 [-]: CALL      R10 2 2      ; R10 := R10(R11)
114 [-]: TEST      R10 1        ; if R10 then PC := 126
115 [-]: JMP       126          ; PC := 126
116 [-]: EQ        0 R0 K24     ; if R0 ~= "Menu" then PC := 121
117 [-]: JMP       121          ; PC := 121
118 [-]: LOADNIL   R10 R10      ; R10 := nil
119 [-]: SETGLOBAL R10 K21      ; mChildMovie := R10
120 [-]: JMP       126          ; PC := 126
121 [-]: GETGLOBAL R10 K21      ; R10 := mChildMovie
122 [-]: SELF      R10 R10 K25  ; R11 := R10; R10 := R10[0xe4162eed]
123 [-]: LOADK     R12 K26      ; R12 := "TransitionOut"
124 [-]: LOADK     R13 K27      ; R13 := ""
125 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
126 [-]: GETUPVAL  R10 U7       ; R10 := U7
127 [-]: MOVE      R11 R0       ; R11 := R0
128 [-]: CALL      R10 2 1      ; R10(R11)
129 [-]: SETGLOBAL R0 K28       ; queuedMovie := R0
130 [-]: SETGLOBAL R1 K29       ; queuedMovieCallback := R1
131 [-]: JMP       143          ; PC := 143
132 [-]: GETGLOBAL R10 K16      ; R10 := 0x3d106989
133 [-]: LOADK     R11 K30      ; R11 := "ERROR: Tried to open unrecognized screen ["
134 [-]: GETGLOBAL R12 K18      ; R12 := 0x64fb1586
135 [-]: MOVE      R13 R0       ; R13 := R0
136 [-]: CALL      R12 2 2      ; R12 := R12(R13)
137 [-]: LOADK     R13 K31      ; R13 := "] Check your spelling."
138 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
139 [-]: CALL      R10 2 1      ; R10(R11)
140 [-]: GETGLOBAL R10 K32      ; R10 := 0x60cce7b4
141 [-]: LOADBOOL  R11 0 0      ; R11 := false
142 [-]: CALL      R10 2 1      ; R10(R11)
143 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 5982
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := screenStack
  2 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  5 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x3d106989
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: LOADK     R4 K2        ; R4 := "ScreenOpened(screenName="
 11 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
 12 [-]: MOVE      R6 R0        ; R6 := R0
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: LOADK     R6 K4        ; R6 := ")"
 15 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 18 [-]: GETGLOBAL R3 K6        ; R3 := movies
 19 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 65
 22 [-]: JMP       65           ; PC := 65
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0x9ba7909f
 24 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xbcfb64ab]
 25 [-]: GETGLOBAL R4 K6        ; R4 := movies
 26 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 27 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 28 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 29 [-]: MOVE      R4 R2        ; R4 := R2
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: TEST      R3 1         ; if R3 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 34 [-]: GETGLOBAL R4 K9        ; R4 := mChildMovie
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: TEST      R3 1         ; if R3 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: EQ        0 R0 K10     ; if R0 ~= "Menu" then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADNIL   R3 R3        ; R3 := nil
 41 [-]: SETGLOBAL R3 K9        ; mChildMovie := R3
 42 [-]: JMP       48           ; PC := 48
 43 [-]: GETGLOBAL R3 K9        ; R3 := mChildMovie
 44 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xe4162eed]
 45 [-]: LOADK     R5 K12       ; R5 := "TransitionOut"
 46 [-]: LOADK     R6 K13       ; R6 := ""
 47 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 48 [-]: SETGLOBAL R2 K9        ; mChildMovie := R2
 49 [-]: GETUPVAL  R3 U1        ; R3 := U1
 50 [-]: MOVE      R4 R0        ; R4 := R0
 51 [-]: CALL      R3 2 1       ; R3(R4)
 52 [-]: JMP       76           ; PC := 76
 53 [-]: GETGLOBAL R3 K1        ; R3 := 0x3d106989
 54 [-]: LOADK     R4 K14       ; R4 := "ERROR: Screen opened called on ["
 55 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
 56 [-]: MOVE      R6 R0        ; R6 := R0
 57 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 58 [-]: LOADK     R6 K15       ; R6 := "], said screen doesn't exist."
 59 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 60 [-]: CALL      R3 2 1       ; R3(R4)
 61 [-]: GETGLOBAL R3 K16       ; R3 := 0x60cce7b4
 62 [-]: LOADBOOL  R4 0 0       ; R4 := false
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: JMP       76           ; PC := 76
 65 [-]: GETGLOBAL R3 K1        ; R3 := 0x3d106989
 66 [-]: LOADK     R4 K17       ; R4 := "ERROR: Tried to open unrecognized screen ["
 67 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
 68 [-]: MOVE      R6 R0        ; R6 := R0
 69 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 70 [-]: LOADK     R6 K18       ; R6 := "] Check your spelling."
 71 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 72 [-]: CALL      R3 2 1       ; R3(R4)
 73 [-]: GETGLOBAL R3 K16       ; R3 := 0x60cce7b4
 74 [-]: LOADBOOL  R4 0 0       ; R4 := false
 75 [-]: CALL      R3 2 1       ; R3(R4)
 76 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 6013
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := movies
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: RETURN    R1 2         ; return R1
  4 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 6017
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 1 0       ; R0 := {}
  2 [-]: LOADK     R1 K1        ; R1 := "Default"
  3 [-]: SETLIST   R0 1 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
  4 [-]: SETGLOBAL R0 K0        ; screenStack := R0
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 6022
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := screenStack
  2 [-]: GETGLOBAL R1 K0        ; R1 := screenStack
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  5 [-]: GETGLOBAL R1 K1        ; R1 := movies
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x9ba7909f
 14 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0xbcfb64ab]
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: MOVE      R2 R3        ; R2 := R3
 18 [-]: MOVE      R3 R2        ; R3 := R2
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: RETURN    R3 3         ; return R3,R4
 21 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 6032
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1[0xe4162eed]
  9 [-]: LOADK     R4 K2        ; R4 := "HandleCanBeClosed"
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: EQ        0 R2 K3      ; if R2 ~= true then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R3 K4        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: LOADBOOL  R4 1 0       ; R4 := true
 18 [-]: CALL      R3 2 1       ; R3(R4)
 19 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 6045
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: TEST      R1 1         ; if R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R1 K0        ; R1 := ""
  4 [-]: TEST      R0 1         ; if R0 then PC := 33
  5 [-]: JMP       33           ; PC := 33
  6 [-]: GETGLOBAL R2 K1        ; R2 := screenStack
  7 [-]: LEN       R2 R2        ; R2 := # R2
  8 [-]: LOADK     R3 1         ; R3 := 1.000000
  9 [-]: LOADK     R4 -1        ; R4 := -1.000000
 10 [-]: FORPREP   R2 32        ; R2 -= R4; PC := 32
 11 [-]: GETGLOBAL R6 K2        ; R6 := 0x9ba7909f
 12 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0xbcfb64ab]
 13 [-]: GETGLOBAL R8 K4        ; R8 := movies
 14 [-]: GETGLOBAL R9 K1        ; R9 := screenStack
 15 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 16 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 17 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 18 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 32
 19 [-]: JMP       32           ; PC := 32
 20 [-]: GETGLOBAL R7 K1        ; R7 := screenStack
 21 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 22 [-]: EQ        1 R7 K6      ; if R7 == "Default" then PC := 32
 23 [-]: JMP       32           ; PC := 32
 24 [-]: GETGLOBAL R7 K1        ; R7 := screenStack
 25 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 26 [-]: EQ        1 R7 K7      ; if R7 == "MainMenu" then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: SELF      R7 R6 K8     ; R8 := R6; R7 := R6[0xe4162eed]
 29 [-]: LOADK     R9 K9        ; R9 := "TransitionOut"
 30 [-]: MOVE      R10 R1       ; R10 := R1
 31 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 32 [-]: FORLOOP   R2 11        ; R2 += R4; if R2 <= R3 then begin PC := 11; R5 := R2 end
 33 [-]: LOADK     R7 K6        ; R7 := "Default"
 34 [-]: SETGLOBAL R7 K10       ; queuedMovie := R7
 35 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 36 [-]: LOADK     R8 K6        ; R8 := "Default"
 37 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 38 [-]: SETGLOBAL R7 K1        ; screenStack := R7
 39 [-]: GETGLOBAL R7 K2        ; R7 := 0x9ba7909f
 40 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0x7e17ae26]
 41 [-]: LOADK     R9 K12       ; R9 := "ScreenStackUpdated"
 42 [-]: LOADK     R10 1        ; R10 := 1.000000
 43 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 44 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 6064
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 6068
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: CLOSURE   R3 0         ; R3 := closure(Function #165.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: SETTABLE  R2 K1 R3     ; R2["CanScreenBeClosedCallback"] := R3
  8 [-]: GETUPVAL  R2 U2        ; R2 := U2
  9 [-]: LOADK     R3 K1        ; R3 := "CanScreenBeClosedCallback"
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #165.1:
;
; Name:            
; Defined at line: 6070
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 0         ; if not R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: LOADBOOL  R2 1 0       ; R2 := true
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: GETUPVAL  R3 U3        ; R3 := U3
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: SETTABLE  R1 K1 K2     ; R1["CanScreenBeClosedCallback"] := nil
 12 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 6081
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xe7f2b02f
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x0b6ebd5b]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETGLOBAL R3 K2        ; R3 := screenStack
  8 [-]: GETGLOBAL R4 K2        ; R4 := screenStack
  9 [-]: LEN       R4 R4        ; R4 := # R4
 10 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETGLOBAL R2 K3        ; R2 := mQueuedGoToPreviousScreen
 15 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: NEWTABLE  R2 0 1       ; R2 := {}
 18 [-]: SETTABLE  R2 K5 R0     ; R2[0x00000001] := R0
 19 [-]: SETGLOBAL R2 K3        ; mQueuedGoToPreviousScreen := R2
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: CALL      R2 1 1       ; R2()
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0x3d106989
 24 [-]: GETUPVAL  R3 U2        ; R3 := U2
 25 [-]: LOADK     R4 K7        ; R4 := "GoToPreviousScreen(skipScreens="
 26 [-]: GETGLOBAL R5 K8        ; R5 := 0x64fb1586
 27 [-]: MOVE      R6 R0        ; R6 := R0
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: LOADK     R6 K9        ; R6 := ")"
 30 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 31 [-]: CALL      R2 2 1       ; R2(R3)
 32 [-]: GETGLOBAL R2 K10       ; R2 := 0x7b998233
 33 [-]: MOVE      R3 R0        ; R3 := R0
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 0         ; if not R2 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: LOADK     R0 1         ; R0 := 1.000000
 38 [-]: GETGLOBAL R2 K11       ; R2 := 0x03f57322
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: MOVE      R0 R2        ; R0 := R2
 42 [-]: LT        0 R0 K12     ; if R0 >= 1.000000 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: LOADK     R0 1         ; R0 := 1.000000
 45 [-]: GETGLOBAL R2 K10       ; R2 := 0x7b998233
 46 [-]: MOVE      R3 R1        ; R3 := R1
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 0         ; if not R2 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADBOOL  R1 0 0       ; R1 := false
 51 [-]: TEST      R1 1         ; if R1 then PC := 66
 52 [-]: JMP       66           ; PC := 66
 53 [-]: GETGLOBAL R2 K2        ; R2 := screenStack
 54 [-]: LEN       R2 R2        ; R2 := # R2
 55 [-]: LE        0 R2 R0      ; if R2 > R0 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETGLOBAL R2 K6        ; R2 := 0x3d106989
 58 [-]: LOADK     R3 K13       ; R3 := "ERROR: There's not "
 59 [-]: GETGLOBAL R4 K8        ; R4 := 0x64fb1586
 60 [-]: MOVE      R5 R0        ; R5 := R0
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: LOADK     R5 K14       ; R5 := " screens to back up over!"
 63 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 64 [-]: CALL      R2 2 1       ; R2(R3)
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: LOADK     R2 1         ; R2 := 1.000000
 67 [-]: MOVE      R3 R0        ; R3 := R0
 68 [-]: LOADK     R4 1         ; R4 := 1.000000
 69 [-]: FORPREP   R2 83        ; R2 -= R4; PC := 83
 70 [-]: GETGLOBAL R6 K2        ; R6 := screenStack
 71 [-]: LEN       R6 R6        ; R6 := # R6
 72 [-]: LT        0 K15 R6     ; if 0.000000 >= R6 then PC := 83
 73 [-]: JMP       83           ; PC := 83
 74 [-]: GETGLOBAL R6 K2        ; R6 := screenStack
 75 [-]: GETGLOBAL R7 K2        ; R7 := screenStack
 76 [-]: LEN       R7 R7        ; R7 := # R7
 77 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 78 [-]: SETGLOBAL R6 K16       ; mPreviousScreen := R6
 79 [-]: GETUPVAL  R6 U3        ; R6 := U3
 80 [-]: GETGLOBAL R7 K2        ; R7 := screenStack
 81 [-]: LEN       R7 R7        ; R7 := # R7
 82 [-]: CALL      R6 2 1       ; R6(R7)
 83 [-]: FORLOOP   R2 70        ; R2 += R4; if R2 <= R3 then begin PC := 70; R5 := R2 end
 84 [-]: GETGLOBAL R6 K2        ; R6 := screenStack
 85 [-]: GETGLOBAL R7 K2        ; R7 := screenStack
 86 [-]: LEN       R7 R7        ; R7 := # R7
 87 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 88 [-]: SETGLOBAL R6 K17       ; queuedMovie := R6
 89 [-]: GETGLOBAL R6 K10       ; R6 := 0x7b998233
 90 [-]: GETGLOBAL R7 K18       ; R7 := mChildMovie
 91 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 92 [-]: TEST      R6 1         ; if R6 then PC := 99
 93 [-]: JMP       99           ; PC := 99
 94 [-]: GETGLOBAL R6 K18       ; R6 := mChildMovie
 95 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0xe4162eed]
 96 [-]: LOADK     R8 K20       ; R8 := "TransitionOut"
 97 [-]: LOADK     R9 K21       ; R9 := ""
 98 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 99 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 6124
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  3 [-]: SETTABLE  R1 K0 R0     ; R1["mElements"] := R0
  4 [-]: NEWTABLE  R2 16 0      ; R2 := {}
  5 [-]: LOADK     R3 K1        ; R3 := "TASK"
  6 [-]: LOADK     R4 K2        ; R4 := "MAIL"
  7 [-]: LOADK     R5 K3        ; R5 := "FOUNDRY"
  8 [-]: LOADK     R6 K4        ; R6 := "MARKET"
  9 [-]: LOADK     R7 K5        ; R7 := "INC_FRIENDS"
 10 [-]: LOADK     R8 K6        ; R8 := "UMBRA_ECHO"
 11 [-]: LOADK     R9 K7        ; R9 := "INVIGORATION"
 12 [-]: LOADK     R10 K8       ; R10 := "ATTACK_POLARITY"
 13 [-]: LOADK     R11 K9       ; R11 := "DEFENSE_POLARITY"
 14 [-]: LOADK     R12 K10      ; R12 := "TACTIC_POLARITY"
 15 [-]: LOADK     R13 K11      ; R13 := "POWER_POLARITY"
 16 [-]: LOADK     R14 K12      ; R14 := "WARD_POLARITY"
 17 [-]: LOADK     R15 K13      ; R15 := "DOUBLE_CREDIT"
 18 [-]: LOADK     R16 K14      ; R16 := "DOUBLE_AFFINITY"
 19 [-]: LOADK     R17 K15      ; R17 := "DOUBLE_PICKUP"
 20 [-]: LOADK     R18 K16      ; R18 := "EVOLVING_WEAPON"
 21 [-]: SETLIST   R2 16 1      ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 16
 22 [-]: LEN       R3 R2        ; R3 := # R2
 23 [-]: SETTABLE  R1 K17 R3    ; R1["BOOSTER_ID_BASE"] := R3
 24 [-]: CLOSURE   R3 0         ; R3 := closure(Function #167.1)
 25 [-]: SETTABLE  R1 K18 R3    ; R1["GetStatus"] := R3
 26 [-]: CLOSURE   R3 1         ; R3 := closure(Function #167.2)
 27 [-]: SETTABLE  R1 K19 R3    ; R1["GetCurrentNotifications"] := R3
 28 [-]: LOADK     R3 1         ; R3 := 1.000000
 29 [-]: LEN       R4 R2        ; R4 := # R2
 30 [-]: LOADK     R5 1         ; R5 := 1.000000
 31 [-]: FORPREP   R3 40        ; R3 -= R5; PC := 40
 32 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 33 [-]: SETTABLE  R1 R7 R6     ; R1[R7] := R6
 34 [-]: GETGLOBAL R7 K20       ; R7 := 0x33bdd652
 35 [-]: GETTABLE  R7 R7 K21    ; R7 := R7[0x23d5322f]
 36 [-]: MOVE      R8 R0        ; R8 := R0
 37 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 38 [-]: SETTABLE  R9 K22 R6    ; R9["Id"] := R6
 39 [-]: CALL      R7 3 1       ; R7(R8,R9)
 40 [-]: FORLOOP   R3 32        ; R3 += R5; if R3 <= R4 then begin PC := 32; R6 := R3 end
 41 [-]: GETTABLE  R7 R1 K2     ; R7 := R1["MAIL"]
 42 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 43 [-]: SETTABLE  R7 K23 K24   ; R7["Value"] := 0.000000
 44 [-]: GETTABLE  R7 R1 K3     ; R7 := R1["FOUNDRY"]
 45 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 46 [-]: SETTABLE  R7 K23 K24   ; R7["Value"] := 0.000000
 47 [-]: GETTABLE  R7 R1 K5     ; R7 := R1["INC_FRIENDS"]
 48 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 49 [-]: SETTABLE  R7 K23 K24   ; R7["Value"] := 0.000000
 50 [-]: GETTABLE  R7 R1 K8     ; R7 := R1["ATTACK_POLARITY"]
 51 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 52 [-]: SETTABLE  R7 K25 K27   ; R7["Polarity"] := 1.000000
 53 [-]: GETTABLE  R7 R1 K9     ; R7 := R1["DEFENSE_POLARITY"]
 54 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 55 [-]: SETTABLE  R7 K25 K28   ; R7["Polarity"] := 2.000000
 56 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["TACTIC_POLARITY"]
 57 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 58 [-]: SETTABLE  R7 K25 K29   ; R7["Polarity"] := 3.000000
 59 [-]: GETTABLE  R7 R1 K11    ; R7 := R1["POWER_POLARITY"]
 60 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 61 [-]: SETTABLE  R7 K25 K30   ; R7["Polarity"] := 4.000000
 62 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["WARD_POLARITY"]
 63 [-]: GETTABLE  R7 R0 R7     ; R7 := R0[R7]
 64 [-]: SETTABLE  R7 K25 K31   ; R7["Polarity"] := 7.000000
 65 [-]: GETGLOBAL R7 K32       ; R7 := _T
 66 [-]: SETTABLE  R7 K33 R1    ; R7["Notifications"] := R1
 67 [-]: RETURN    R0 1         ; return 


; Function #167.1:
;
; Name:            
; Defined at line: 6150
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R2 0         ; R2 := 0.000000
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: LOADK     R3 1         ; R3 := 1.000000
  5 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mElements"]
  6 [-]: LEN       R4 R4        ; R4 := # R4
  7 [-]: LOADK     R5 1         ; R5 := 1.000000
  8 [-]: FORPREP   R3 18        ; R3 -= R5; PC := 18
  9 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mElements"]
 10 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 11 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["Id"]
 12 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mElements"]
 15 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 16 [-]: GETTABLE  R2 R7 K3     ; R2 := R7["Value"]
 17 [-]: JMP       19           ; PC := 19
 18 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #167.2:
;
; Name:            
; Defined at line: 6165
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mElements"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 6188
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbf9494fc]
  3 [-]: LOADK     R3 K2        ; R3 := "Lotus.EnableTraceLogging"
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 21
  6 [-]: JMP       21           ; PC := 21
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x3d106989
  8 [-]: LOADK     R2 K4        ; R2 := "EnableUIInput("
  9 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: LOADK     R4 K6        ; R4 := "), last state = "
 13 [-]: GETGLOBAL R5 K5        ; R5 := 0x64fb1586
 14 [-]: GETGLOBAL R6 K7        ; R6 := _T
 15 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["UIInputEnabled"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: GETGLOBAL R1 K9        ; R1 := 0xab19f327
 20 [-]: CALL      R1 1 1       ; R1()
 21 [-]: GETGLOBAL R1 K10       ; R1 := mUIInputEnableTimer
 22 [-]: EQ        1 R1 K11     ; if R1 == nil then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETGLOBAL R1 K12       ; R1 := mTimerMgr
 25 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x775c858b]
 26 [-]: GETGLOBAL R3 K10       ; R3 := mUIInputEnableTimer
 27 [-]: CALL      R1 3 1       ; R1(R2,R3)
 28 [-]: LOADNIL   R1 R1        ; R1 := nil
 29 [-]: SETGLOBAL R1 K10       ; mUIInputEnableTimer := R1
 30 [-]: GETGLOBAL R1 K7        ; R1 := _T
 31 [-]: SETTABLE  R1 K8 K14    ; R1["UIInputEnabled"] := true
 32 [-]: GETGLOBAL R1 K7        ; R1 := _T
 33 [-]: GETUPVAL  R2 U0        ; R2 := U0
 34 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0x06d055f9]
 35 [-]: EQ        0 R0 K11     ; if R0 ~= nil then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 38
 38 [-]: LOADBOOL  R3 1 0       ; R3 := true
 39 [-]: MOVE      R4 R0        ; R4 := R0
 40 [-]: LOADBOOL  R5 0 0       ; R5 := false
 41 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 42 [-]: SETTABLE  R1 K15 R2    ; R1["HideMoneyOverlay"] := R2
 43 [-]: GETGLOBAL R1 K17       ; R1 := mCurrentMode
 44 [-]: GETUPVAL  R2 U1        ; R2 := U1
 45 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 46 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETGLOBAL R1 K7        ; R1 := _T
 49 [-]: SETTABLE  R1 K19 K14   ; R1["HideMarkers"] := true
 50 [-]: GETGLOBAL R1 K17       ; R1 := mCurrentMode
 51 [-]: GETUPVAL  R2 U1        ; R2 := U1
 52 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 53 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 75
 54 [-]: JMP       75           ; PC := 75
 55 [-]: GETGLOBAL R1 K7        ; R1 := _T
 56 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["HideMoneyOverlay"]
 57 [-]: TEST      R1 1         ; if R1 then PC := 75
 58 [-]: JMP       75           ; PC := 75
 59 [-]: GETGLOBAL R1 K20       ; R1 := 0x7b998233
 60 [-]: GETGLOBAL R2 K21       ; R2 := 0xae91e43b
 61 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 62 [-]: TEST      R1 1         ; if R1 then PC := 75
 63 [-]: JMP       75           ; PC := 75
 64 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
 65 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0x5374b92e]
 66 [-]: GETGLOBAL R3 K23       ; R3 := 0xe44a533a
 67 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 68 [-]: TEST      R1 1         ; if R1 then PC := 75
 69 [-]: JMP       75           ; PC := 75
 70 [-]: GETGLOBAL R1 K21       ; R1 := 0xae91e43b
 71 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x1fd6abd0]
 72 [-]: GETGLOBAL R3 K23       ; R3 := 0xe44a533a
 73 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 74 [-]: SETGLOBAL R1 K24       ; mNotificationsMovie := R1
 75 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
 76 [-]: SELF      R1 R1 K26    ; R2 := R1; R1 := R1[0x7e17ae26]
 77 [-]: LOADK     R3 K27       ; R3 := "EnableInput"
 78 [-]: LOADK     R4 K28       ; R4 := ""
 79 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 80 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 6214
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbf9494fc]
  3 [-]: LOADK     R2 K2        ; R2 := "Lotus.EnableTraceLogging"
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 17
  6 [-]: JMP       17           ; PC := 17
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x3d106989
  8 [-]: LOADK     R1 K4        ; R1 := "DisableUIInput(), last state = "
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0x64fb1586
 10 [-]: GETGLOBAL R3 K6        ; R3 := _T
 11 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UIInputEnabled"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: GETGLOBAL R0 K8        ; R0 := 0xab19f327
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: GETGLOBAL R0 K6        ; R0 := _T
 18 [-]: SETTABLE  R0 K7 K9     ; R0["UIInputEnabled"] := false
 19 [-]: GETGLOBAL R0 K10       ; R0 := mControl
 20 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["Shutdown"]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
 24 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x7e17ae26]
 25 [-]: LOADK     R2 K13       ; R2 := "DisableInput"
 26 [-]: LOADK     R3 K14       ; R3 := ""
 27 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETGLOBAL R0 K16       ; R0 := mTimerMgr
 30 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0[0xbd2e96ea]
 31 [-]: LOADK     R2 K18       ; R2 := 0.200000
 32 [-]: CLOSURE   R3 0         ; R3 := closure(Function #169.1)
 33 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 34 [-]: SETGLOBAL R0 K15       ; mUIInputEnableTimer := R0
 35 [-]: GETGLOBAL R0 K6        ; R0 := _T
 36 [-]: SETTABLE  R0 K19 K9    ; R0["HideMoneyOverlay"] := false
 37 [-]: GETGLOBAL R0 K20       ; R0 := mCurrentMode
 38 [-]: GETUPVAL  R1 U0        ; R1 := U0
 39 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 40 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: GETGLOBAL R0 K6        ; R0 := _T
 43 [-]: SETTABLE  R0 K22 K9    ; R0["HideMarkers"] := false
 44 [-]: GETGLOBAL R0 K23       ; R0 := 0x7b998233
 45 [-]: GETGLOBAL R1 K24       ; R1 := mNotificationsMovie
 46 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 47 [-]: TEST      R0 1         ; if R0 then PC := 57
 48 [-]: JMP       57           ; PC := 57
 49 [-]: GETGLOBAL R0 K20       ; R0 := mCurrentMode
 50 [-]: GETUPVAL  R1 U0        ; R1 := U0
 51 [-]: GETTABLE  R1 R1 K21    ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
 52 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETGLOBAL R0 K24       ; R0 := mNotificationsMovie
 55 [-]: SELF      R0 R0 K25    ; R1 := R0; R0 := R0[0x32302b4a]
 56 [-]: CALL      R0 2 1       ; R0(R1)
 57 [-]: RETURN    R0 1         ; return 


; Function #169.1:
;
; Name:            
; Defined at line: 6225
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SETGLOBAL R0 K0        ; mUIInputEnableTimer := R0
  2 [-]: GETGLOBAL R0 K1        ; R0 := 0x9ba7909f
  3 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x7e17ae26]
  4 [-]: LOADK     R2 K3        ; R2 := "DisableInput"
  5 [-]: LOADK     R3 K4        ; R3 := ""
  6 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 6241
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xf37bdbf9]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x9e5e1b85
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 6245
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 25
  5 [-]: JMP       25           ; PC := 25
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0x3d106989
  7 [-]: LOADK     R3 K3        ; R3 := "Showing WeGame popup due to status "
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: EQ        0 R1 K4      ; if R1 ~= 40.000000 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 15 [-]: LOADK     R3 K6        ; R3 := "/Lotus/Language/Changyou/WeGameAntiAddictionKick"
 16 [-]: LOADK     R4 K7        ; R4 := "OnFcmKickOut"
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: JMP       48           ; PC := 48
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0xe0cba3ca]
 21 [-]: LOADK     R3 K8        ; R3 := "/Lotus/Language/Changyou/WeGamePlatformOffline"
 22 [-]: LOADK     R4 K7        ; R4 := "OnFcmKickOut"
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: JMP       48           ; PC := 48
 25 [-]: EQ        1 R0 K9      ; if R0 == "" then PC := 48
 26 [-]: JMP       48           ; PC := 48
 27 [-]: GETGLOBAL R2 K10       ; R2 := cjson
 28 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0x7ab914d8]
 29 [-]: MOVE      R3 R0        ; R3 := R0
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: GETTABLE  R3 R2 K12    ; R3 := R2["title"]
 32 [-]: LOADK     R4 K13       ; R4 := "\r\n\r\n"
 33 [-]: GETTABLE  R5 R2 K14    ; R5 := R2["desc"]
 34 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 35 [-]: GETGLOBAL R4 K15       ; R4 := 0x34291f5c
 36 [-]: GETTABLE  R4 R4 K16    ; R4 := R4[0xe27b35bb]
 37 [-]: CALL      R4 1 2       ; R4 := R4()
 38 [-]: SETTABLE  R4 K17 K18   ; R4["dialogType"] := 0.000000
 39 [-]: SETTABLE  R4 K19 R3    ; R4["locString"] := R3
 40 [-]: GETTABLE  R5 R2 K21    ; R5 := R2["confirm_button"]
 41 [-]: SETTABLE  R4 K20 R5    ; R4["firstString"] := R5
 42 [-]: GETGLOBAL R5 K22       ; R5 := 0x83f4e77c
 43 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0x7d63f19c]
 44 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 45 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5[0x69e5aa4f]
 46 [-]: MOVE      R7 R4        ; R7 := R4
 47 [-]: CALL      R5 3 1       ; R5(R6,R7)
 48 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 6267
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["timeOpen"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["timeToCheckDelay"]
 10 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 11 [-]: SETTABLE  R0 K1 R1     ; R0["timeOpen"] := R1
 12 [-]: GETGLOBAL R0 K3        ; R0 := 0x34291f5c
 13 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xd27f8079]
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: TEST      R0 0         ; if not R0 then PC := 33
 16 [-]: JMP       33           ; PC := 33
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
 19 [-]: TEST      R0 1         ; if R0 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: GETGLOBAL R1 K5        ; R1 := 0x9ba7909f
 23 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x6dd7aa66]
 24 [-]: GETGLOBAL R3 K7        ; R3 := 0xe8d2b0d8
 25 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 26 [-]: SETTABLE  R0 K0 R1     ; R0["movie"] := R1
 27 [-]: GETUPVAL  R0 U0        ; R0 := U0
 28 [-]: SETTABLE  R0 K1 K8     ; R0["timeOpen"] := 0.000000
 29 [-]: GETGLOBAL R0 K9        ; R0 := 0xe7f2b02f
 30 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x9971ad47]
 31 [-]: CALL      R0 2 1       ; R0(R1)
 32 [-]: JMP       49           ; PC := 49
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
 35 [-]: TEST      R0 0         ; if not R0 then PC := 49
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETUPVAL  R0 U0        ; R0 := U0
 38 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["timeOpen"]
 39 [-]: GETUPVAL  R1 U0        ; R1 := U0
 40 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["minimumDisplayTime"]
 41 [-]: LE        0 R1 R0      ; if R1 > R0 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETUPVAL  R0 U0        ; R0 := U0
 44 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["movie"]
 45 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0x32302b4a]
 46 [-]: CALL      R0 2 1       ; R0(R1)
 47 [-]: GETUPVAL  R0 U0        ; R0 := U0
 48 [-]: SETTABLE  R0 K0 K13    ; R0["movie"] := nil
 49 [-]: GETGLOBAL R0 K14       ; R0 := 0x7b998233
 50 [-]: GETUPVAL  R1 U0        ; R1 := U0
 51 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["timerId"]
 52 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 53 [-]: TEST      R0 1         ; if R0 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R0 K16       ; R0 := mTimerMgr
 56 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0[0x775c858b]
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["timerId"]
 59 [-]: CALL      R0 3 1       ; R0(R1,R2)
 60 [-]: GETUPVAL  R0 U0        ; R0 := U0
 61 [-]: GETGLOBAL R1 K16       ; R1 := mTimerMgr
 62 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1[0xbd2e96ea]
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["timeToCheckDelay"]
 65 [-]: GETUPVAL  R4 U1        ; R4 := U1
 66 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 67 [-]: SETTABLE  R0 K15 R1    ; R0["timerId"] := R1
 68 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 6296
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x8e9f5fee]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 6300
; #Upvalues:       32
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x368ad758]
  8 [-]: LOADBOOL  R2 0 0       ; R2 := false
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 11 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5f56eeab]
 12 [-]: LOADK     R2 K4        ; R2 := "RobotoRegular17"
 13 [-]: LOADK     R3 29        ; R3 := 29.000000
 14 [-]: LOADK     R4 K5        ; R4 := "Filler text"
 15 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 16 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 17 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x5f56eeab]
 18 [-]: LOADK     R2 K6        ; R2 := "RobotoBold17"
 19 [-]: LOADK     R3 29        ; R3 := 29.000000
 20 [-]: LOADK     R4 K5        ; R4 := "Filler text"
 21 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: CALL      R0 1 1       ; R0()
 24 [-]: GETUPVAL  R0 U1        ; R0 := U1
 25 [-]: GETTABLE  R0 R0 K7     ; R0 := R0[0x8024bd2d]
 26 [-]: CALL      R0 1 1       ; R0()
 27 [-]: GETGLOBAL R0 K8        ; R0 := 0x0032441c
 28 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["CachedGoalInfo"]
 29 [-]: EQ        0 R0 K10     ; if R0 ~= nil then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETGLOBAL R0 K8        ; R0 := 0x0032441c
 32 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 33 [-]: SETTABLE  R0 K9 R1     ; R0["CachedGoalInfo"] := R1
 34 [-]: GETGLOBAL R0 K8        ; R0 := 0x0032441c
 35 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 36 [-]: SETTABLE  R0 K11 R1    ; R0["MergedGoalNodes"] := R1
 37 [-]: GETGLOBAL R0 K12       ; R0 := _T
 38 [-]: CLOSURE   R1 0         ; R1 := closure(Function #174.1)
 39 [-]: GETUPVAL  R0 U1        ; R0 := U1
 40 [-]: GETUPVAL  R0 U2        ; R0 := U2
 41 [-]: SETTABLE  R0 K13 R1    ; R0["gOpenWeaponRecoveryMission"] := R1
 42 [-]: GETGLOBAL R0 K14       ; R0 := 0x34291f5c
 43 [-]: GETTABLE  R0 R0 K15    ; R0 := R0[0xa7a2e381]
 44 [-]: CALL      R0 1 2       ; R0 := R0()
 45 [-]: TEST      R0 0         ; if not R0 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: GETGLOBAL R0 K14       ; R0 := 0x34291f5c
 48 [-]: GETTABLE  R0 R0 K16    ; R0 := R0[0x65b1a965]
 49 [-]: LOADK     R1 K17       ; R1 := "OnWeGamePopUp"
 50 [-]: CALL      R0 2 1       ; R0(R1)
 51 [-]: GETGLOBAL R0 K18       ; R0 := 0x2d0fad09
 52 [-]: LOADK     R1 K19       ; R1 := "Lotus.Interface.Libs.TimerMgr"
 53 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 54 [-]: GETTABLE  R1 R0 K21    ; R1 := R0[0xde474187]
 55 [-]: CALL      R1 1 2       ; R1 := R1()
 56 [-]: SETGLOBAL R1 K20       ; mTimerMgr := R1
 57 [-]: GETGLOBAL R1 K12       ; R1 := _T
 58 [-]: CLOSURE   R2 1         ; R2 := closure(Function #174.2)
 59 [-]: SETTABLE  R1 K22 R2    ; R1["AddToBackgroundTimer"] := R2
 60 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 61 [-]: GETGLOBAL R2 K23       ; R2 := 0x4c5fdf9c
 62 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 63 [-]: TEST      R1 1         ; if R1 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETGLOBAL R1 K24       ; R1 := 0x9ba7909f
 66 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x6dd7aa66]
 67 [-]: GETGLOBAL R3 K23       ; R3 := 0x4c5fdf9c
 68 [-]: CALL      R1 3 1       ; R1(R2,R3)
 69 [-]: NEWTABLE  R1 6 0       ; R1 := {}
 70 [-]: GETGLOBAL R2 K26       ; R2 := 0xe1380899
 71 [-]: GETGLOBAL R3 K27       ; R3 := 0x420192be
 72 [-]: GETGLOBAL R4 K28       ; R4 := 0xc813104a
 73 [-]: GETGLOBAL R5 K29       ; R5 := 0x8fa91b7b
 74 [-]: GETGLOBAL R6 K30       ; R6 := 0x65bc0e9e
 75 [-]: GETGLOBAL R7 K31       ; R7 := 0x0ef37382
 76 [-]: SETLIST   R1 6 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 6
 77 [-]: SETUPVAL  R1 U3        ; U82 := R3
 78 [-]: GETGLOBAL R1 K32       ; R1 := movies
 79 [-]: GETGLOBAL R2 K34       ; R2 := 0x5465532c
 80 [-]: SETTABLE  R1 K33 R2    ; R1["Default"] := R2
 81 [-]: GETGLOBAL R1 K32       ; R1 := movies
 82 [-]: GETGLOBAL R2 K34       ; R2 := 0x5465532c
 83 [-]: SETTABLE  R1 K35 R2    ; R1["MainMenu"] := R2
 84 [-]: GETGLOBAL R1 K32       ; R1 := movies
 85 [-]: GETGLOBAL R2 K37       ; R2 := 0xbdad5a54
 86 [-]: SETTABLE  R1 K36 R2    ; R1["LoadOut"] := R2
 87 [-]: GETGLOBAL R1 K32       ; R1 := movies
 88 [-]: GETGLOBAL R2 K39       ; R2 := 0x6030f79f
 89 [-]: SETTABLE  R1 K38 R2    ; R1["LoadOutCrewShip"] := R2
 90 [-]: GETGLOBAL R1 K32       ; R1 := movies
 91 [-]: GETGLOBAL R2 K41       ; R2 := 0x5ffeed32
 92 [-]: SETTABLE  R1 K40 R2    ; R1["Inventory"] := R2
 93 [-]: GETGLOBAL R1 K32       ; R1 := movies
 94 [-]: GETGLOBAL R2 K43       ; R2 := 0x66d4e2ca
 95 [-]: SETTABLE  R1 K42 R2    ; R1["StyleManager"] := R2
 96 [-]: GETGLOBAL R1 K32       ; R1 := movies
 97 [-]: GETGLOBAL R2 K45       ; R2 := 0xba5a7939
 98 [-]: SETTABLE  R1 K44 R2    ; R1["Profile"] := R2
 99 [-]: GETGLOBAL R1 K32       ; R1 := movies
100 [-]: GETGLOBAL R2 K47       ; R2 := 0xa106c3ae
101 [-]: SETTABLE  R1 K46 R2    ; R1["Leaderboards"] := R2
102 [-]: GETGLOBAL R1 K32       ; R1 := movies
103 [-]: GETGLOBAL R2 K26       ; R2 := 0xe1380899
104 [-]: SETTABLE  R1 K48 R2    ; R1["MissionStats"] := R2
105 [-]: GETGLOBAL R1 K32       ; R1 := movies
106 [-]: GETGLOBAL R2 K50       ; R2 := 0x295e8761
107 [-]: SETTABLE  R1 K49 R2    ; R1["Settings"] := R2
108 [-]: GETGLOBAL R1 K32       ; R1 := movies
109 [-]: GETGLOBAL R2 K52       ; R2 := 0x0ba97bb4
110 [-]: SETTABLE  R1 K51 R2    ; R1["Bindings"] := R2
111 [-]: GETGLOBAL R1 K32       ; R1 := movies
112 [-]: GETGLOBAL R2 K54       ; R2 := 0xdc45943d
113 [-]: SETTABLE  R1 K53 R2    ; R1["Store"] := R2
114 [-]: GETGLOBAL R1 K32       ; R1 := movies
115 [-]: GETGLOBAL R2 K56       ; R2 := 0x900feed6
116 [-]: SETTABLE  R1 K55 R2    ; R1["Lobby"] := R2
117 [-]: GETGLOBAL R1 K32       ; R1 := movies
118 [-]: GETGLOBAL R2 K58       ; R2 := 0xe3808980
119 [-]: SETTABLE  R1 K57 R2    ; R1["LobbyPVP"] := R2
120 [-]: GETGLOBAL R1 K32       ; R1 := movies
121 [-]: GETGLOBAL R2 K60       ; R2 := 0x420fe829
122 [-]: SETTABLE  R1 K59 R2    ; R1["ColorPicker"] := R2
123 [-]: GETGLOBAL R1 K32       ; R1 := movies
124 [-]: GETGLOBAL R2 K62       ; R2 := 0x80fe1846
125 [-]: SETTABLE  R1 K61 R2    ; R1["Intel"] := R2
126 [-]: GETGLOBAL R1 K32       ; R1 := movies
127 [-]: GETGLOBAL R2 K64       ; R2 := 0x748b755d
128 [-]: SETTABLE  R1 K63 R2    ; R1["UpgradeCards"] := R2
129 [-]: GETGLOBAL R1 K32       ; R1 := movies
130 [-]: GETGLOBAL R2 K66       ; R2 := 0xf07cbb7c
131 [-]: SETTABLE  R1 K65 R2    ; R1["MemberRole"] := R2
132 [-]: GETGLOBAL R1 K32       ; R1 := movies
133 [-]: GETGLOBAL R2 K68       ; R2 := 0x6a400c4e
134 [-]: SETTABLE  R1 K67 R2    ; R1["Menu"] := R2
135 [-]: GETGLOBAL R1 K32       ; R1 := movies
136 [-]: GETGLOBAL R2 K30       ; R2 := 0x65bc0e9e
137 [-]: SETTABLE  R1 K69 R2    ; R1["Inbox"] := R2
138 [-]: GETGLOBAL R1 K32       ; R1 := movies
139 [-]: GETGLOBAL R2 K8        ; R2 := 0x0032441c
140 [-]: GETTABLE  R2 R2 K71    ; R2 := R2["UIMovie_ItemBrowsingMovie"]
141 [-]: SETTABLE  R1 K70 R2    ; R1["ItemBrowsing"] := R2
142 [-]: GETGLOBAL R1 K32       ; R1 := movies
143 [-]: GETGLOBAL R2 K73       ; R2 := 0xef1adc3a
144 [-]: SETTABLE  R1 K72 R2    ; R1["AllianceView"] := R2
145 [-]: GETGLOBAL R1 K32       ; R1 := movies
146 [-]: GETGLOBAL R2 K75       ; R2 := 0x37779262
147 [-]: SETTABLE  R1 K74 R2    ; R1["Clan"] := R2
148 [-]: GETGLOBAL R1 K32       ; R1 := movies
149 [-]: GETGLOBAL R2 K77       ; R2 := 0x7384bada
150 [-]: SETTABLE  R1 K76 R2    ; R1["ClanSearch"] := R2
151 [-]: GETGLOBAL R1 K32       ; R1 := movies
152 [-]: GETGLOBAL R2 K79       ; R2 := 0x8d3c3891
153 [-]: SETTABLE  R1 K78 R2    ; R1["Friends"] := R2
154 [-]: GETGLOBAL R1 K32       ; R1 := movies
155 [-]: GETGLOBAL R2 K81       ; R2 := 0xdbf8fb8c
156 [-]: SETTABLE  R1 K80 R2    ; R1["SquadOverlay"] := R2
157 [-]: GETGLOBAL R1 K32       ; R1 := movies
158 [-]: GETGLOBAL R2 K83       ; R2 := 0xe465ca95
159 [-]: SETTABLE  R1 K82 R2    ; R1["InvitePanel"] := R2
160 [-]: GETGLOBAL R1 K32       ; R1 := movies
161 [-]: GETGLOBAL R2 K85       ; R2 := 0x8a9373f5
162 [-]: SETTABLE  R1 K84 R2    ; R1["Spectres"] := R2
163 [-]: GETGLOBAL R1 K32       ; R1 := movies
164 [-]: GETGLOBAL R2 K87       ; R2 := 0xc55bde47
165 [-]: SETTABLE  R1 K86 R2    ; R1["DiegeticArtifactCards"] := R2
166 [-]: GETGLOBAL R1 K32       ; R1 := movies
167 [-]: GETGLOBAL R2 K89       ; R2 := 0xb071c019
168 [-]: SETTABLE  R1 K88 R2    ; R1["AbilityProgression"] := R2
169 [-]: GETGLOBAL R1 K32       ; R1 := movies
170 [-]: GETGLOBAL R2 K91       ; R2 := 0x69749ee5
171 [-]: SETTABLE  R1 K90 R2    ; R1["GiftUnwrap"] := R2
172 [-]: GETGLOBAL R1 K32       ; R1 := movies
173 [-]: GETGLOBAL R2 K93       ; R2 := 0x71e6d95f
174 [-]: SETTABLE  R1 K92 R2    ; R1["InvasionSelection"] := R2
175 [-]: GETGLOBAL R1 K32       ; R1 := movies
176 [-]: GETGLOBAL R2 K95       ; R2 := 0x23f370a1
177 [-]: SETTABLE  R1 K94 R2    ; R1["CustomizeTenno"] := R2
178 [-]: GETGLOBAL R1 K32       ; R1 := movies
179 [-]: GETGLOBAL R2 K97       ; R2 := 0x89567b1a
180 [-]: SETTABLE  R1 K96 R2    ; R1["OperatorLoadout"] := R2
181 [-]: GETGLOBAL R1 K32       ; R1 := movies
182 [-]: GETGLOBAL R2 K8        ; R2 := 0x0032441c
183 [-]: GETTABLE  R2 R2 K99    ; R2 := R2["UIMovie_DetailedPurchaseDialog"]
184 [-]: SETTABLE  R1 K98 R2    ; R1["DetailedPurchaseDialog"] := R2
185 [-]: GETGLOBAL R1 K32       ; R1 := movies
186 [-]: GETGLOBAL R2 K101      ; R2 := 0x005a373c
187 [-]: SETTABLE  R1 K100 R2   ; R1["DarvoDeal"] := R2
188 [-]: GETGLOBAL R1 K32       ; R1 := movies
189 [-]: GETGLOBAL R2 K103      ; R2 := 0x4baca03a
190 [-]: SETTABLE  R1 K102 R2   ; R1["GenericSettings"] := R2
191 [-]: GETGLOBAL R1 K32       ; R1 := movies
192 [-]: GETGLOBAL R2 K105      ; R2 := 0x08a5afb4
193 [-]: SETTABLE  R1 K104 R2   ; R1["GenericMenu"] := R2
194 [-]: GETGLOBAL R1 K32       ; R1 := movies
195 [-]: GETGLOBAL R2 K107      ; R2 := 0x0150fb92
196 [-]: SETTABLE  R1 K106 R2   ; R1["BeaconAccept"] := R2
197 [-]: GETGLOBAL R1 K32       ; R1 := movies
198 [-]: GETGLOBAL R2 K109      ; R2 := 0x5228d2b2
199 [-]: SETTABLE  R1 K108 R2   ; R1["Intrinsics"] := R2
200 [-]: GETGLOBAL R1 K32       ; R1 := movies
201 [-]: GETGLOBAL R2 K111      ; R2 := 0x7286a683
202 [-]: SETTABLE  R1 K110 R2   ; R1["KeyboardRendereriOS"] := R2
203 [-]: GETGLOBAL R1 K32       ; R1 := movies
204 [-]: GETGLOBAL R2 K113      ; R2 := 0x808ea68d
205 [-]: SETTABLE  R1 K112 R2   ; R1["ClanAdvertisement"] := R2
206 [-]: GETGLOBAL R1 K32       ; R1 := movies
207 [-]: GETGLOBAL R2 K115      ; R2 := 0xae7cd1d5
208 [-]: SETTABLE  R1 K114 R2   ; R1["LotusLoadOut"] := R2
209 [-]: GETGLOBAL R1 K32       ; R1 := movies
210 [-]: GETGLOBAL R2 K117      ; R2 := 0x481ccf68
211 [-]: SETTABLE  R1 K116 R2   ; R1["Challenges"] := R2
212 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
213 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
214 [-]: CALL      R1 2 2       ; R1 := R1(R2)
215 [-]: TEST      R1 1         ; if R1 then PC := 229
216 [-]: JMP       229          ; PC := 229
217 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
218 [-]: SELF      R1 R1 K118   ; R2 := R1; R1 := R1[0xc6a10ab1]
219 [-]: LOADK     R3 0         ; R3 := 0.000000
220 [-]: CALL      R1 3 1       ; R1(R2,R3)
221 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
222 [-]: SELF      R1 R1 K119   ; R2 := R1; R1 := R1[0x58bec6d6]
223 [-]: LOADK     R3 0         ; R3 := 0.000000
224 [-]: CALL      R1 3 1       ; R1(R2,R3)
225 [-]: GETGLOBAL R1 K24       ; R1 := 0x9ba7909f
226 [-]: SELF      R1 R1 K120   ; R2 := R1; R1 := R1[0x8b966b9b]
227 [-]: LOADBOOL  R3 1 0       ; R3 := true
228 [-]: CALL      R1 3 1       ; R1(R2,R3)
229 [-]: LOADBOOL  R1 0 0       ; R1 := false
230 [-]: SETGLOBAL R1 K121      ; mFadeInStarted := R1
231 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
232 [-]: GETGLOBAL R2 K122      ; R2 := mChildMovie
233 [-]: CALL      R1 2 2       ; R1 := R1(R2)
234 [-]: TEST      R1 1         ; if R1 then PC := 239
235 [-]: JMP       239          ; PC := 239
236 [-]: GETGLOBAL R1 K122      ; R1 := mChildMovie
237 [-]: SELF      R1 R1 K123   ; R2 := R1; R1 := R1[0x32302b4a]
238 [-]: CALL      R1 2 1       ; R1(R2)
239 [-]: GETGLOBAL R1 K12       ; R1 := _T
240 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
241 [-]: SETTABLE  R1 K124 R2   ; R1["BackgroundMovie"] := R2
242 [-]: GETGLOBAL R1 K12       ; R1 := _T
243 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
244 [-]: GETGLOBAL R3 K126      ; R3 := 0xbe190284
245 [-]: CALL      R2 2 2       ; R2 := R2(R3)
246 [-]: TEST      R2 1         ; if R2 then PC := 253
247 [-]: JMP       253          ; PC := 253
248 [-]: GETGLOBAL R2 K126      ; R2 := 0xbe190284
249 [-]: SELF      R2 R2 K127   ; R3 := R2; R2 := R2[0xf2deaf69]
250 [-]: GETGLOBAL R4 K128      ; R4 := gLotusSandBoxGameRulesType
251 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
252 [-]: JMP       255          ; PC := 255
253 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 254
254 [-]: LOADBOOL  R2 1 0       ; R2 := true
255 [-]: SETTABLE  R1 K125 R2   ; R1["InSimulacrum"] := R2
256 [-]: GETGLOBAL R1 K12       ; R1 := _T
257 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
258 [-]: GETGLOBAL R3 K126      ; R3 := 0xbe190284
259 [-]: CALL      R2 2 2       ; R2 := R2(R3)
260 [-]: TEST      R2 1         ; if R2 then PC := 267
261 [-]: JMP       267          ; PC := 267
262 [-]: GETGLOBAL R2 K126      ; R2 := 0xbe190284
263 [-]: SELF      R2 R2 K127   ; R3 := R2; R2 := R2[0xf2deaf69]
264 [-]: GETGLOBAL R4 K130      ; R4 := gLotusDojoGameRulesType
265 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
266 [-]: JMP       269          ; PC := 269
267 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 268
268 [-]: LOADBOOL  R2 1 0       ; R2 := true
269 [-]: SETTABLE  R1 K129 R2   ; R1["InDojo"] := R2
270 [-]: GETGLOBAL R1 K12       ; R1 := _T
271 [-]: SETTABLE  R1 K131 K10  ; R1["CachedZarimanFactionIdx"] := nil
272 [-]: GETGLOBAL R1 K12       ; R1 := _T
273 [-]: CLOSURE   R2 2         ; R2 := closure(Function #174.3)
274 [-]: GETUPVAL  R0 U4        ; R0 := U4
275 [-]: SETTABLE  R1 K132 R2   ; R1["DoPurchase"] := R2
276 [-]: GETGLOBAL R1 K12       ; R1 := _T
277 [-]: CLOSURE   R2 3         ; R2 := closure(Function #174.4)
278 [-]: GETUPVAL  R0 U1        ; R0 := U1
279 [-]: GETUPVAL  R0 U5        ; R0 := U5
280 [-]: SETTABLE  R1 K133 R2   ; R1["BuyItem"] := R2
281 [-]: GETUPVAL  R1 U6        ; R1 := U6
282 [-]: CALL      R1 1 1       ; R1()
283 [-]: LOADNIL   R1 R1        ; R1 := nil
284 [-]: SETGLOBAL R1 K134      ; mCurrentMode := R1
285 [-]: GETGLOBAL R1 K135      ; R1 := mControl
286 [-]: SETTABLE  R1 K136 K137 ; R1["Initialized"] := true
287 [-]: GETGLOBAL R1 K14       ; R1 := 0x34291f5c
288 [-]: GETTABLE  R1 R1 K138   ; R1 := R1[0xa6cf258d]
289 [-]: LOADK     R2 K139      ; R2 := "HttpRequestFailureCallback"
290 [-]: CALL      R1 2 1       ; R1(R2)
291 [-]: GETGLOBAL R1 K14       ; R1 := 0x34291f5c
292 [-]: GETTABLE  R1 R1 K140   ; R1 := R1[0x164ca1b3]
293 [-]: LOADK     R2 K141      ; R2 := "HttpRequestAuthFailureCallback"
294 [-]: CALL      R1 2 1       ; R1(R2)
295 [-]: GETUPVAL  R1 U7        ; R1 := U7
296 [-]: CALL      R1 1 1       ; R1()
297 [-]: GETGLOBAL R1 K12       ; R1 := _T
298 [-]: GETUPVAL  R2 U8        ; R2 := U8
299 [-]: SETTABLE  R1 K142 R2   ; R1["OpenScreen"] := R2
300 [-]: GETGLOBAL R1 K12       ; R1 := _T
301 [-]: GETUPVAL  R2 U9        ; R2 := U9
302 [-]: SETTABLE  R1 K143 R2   ; R1["OpenScreenAsync"] := R2
303 [-]: GETGLOBAL R1 K12       ; R1 := _T
304 [-]: GETUPVAL  R2 U10       ; R2 := U10
305 [-]: SETTABLE  R1 K144 R2   ; R1["GoToScreen"] := R2
306 [-]: GETGLOBAL R1 K12       ; R1 := _T
307 [-]: GETUPVAL  R2 U11       ; R2 := U11
308 [-]: SETTABLE  R1 K145 R2   ; R1["ChangeScreen"] := R2
309 [-]: GETGLOBAL R1 K12       ; R1 := _T
310 [-]: GETUPVAL  R2 U12       ; R2 := U12
311 [-]: SETTABLE  R1 K146 R2   ; R1["GoToPreviousScreen"] := R2
312 [-]: GETGLOBAL R1 K12       ; R1 := _T
313 [-]: GETUPVAL  R2 U13       ; R2 := U13
314 [-]: SETTABLE  R1 K147 R2   ; R1["CloseScreen"] := R2
315 [-]: GETGLOBAL R1 K12       ; R1 := _T
316 [-]: GETUPVAL  R2 U14       ; R2 := U14
317 [-]: SETTABLE  R1 K148 R2   ; R1["IsInScreenStack"] := R2
318 [-]: GETGLOBAL R1 K12       ; R1 := _T
319 [-]: GETUPVAL  R2 U15       ; R2 := U15
320 [-]: SETTABLE  R1 K149 R2   ; R1["IsScreenOpen"] := R2
321 [-]: GETGLOBAL R1 K12       ; R1 := _T
322 [-]: GETUPVAL  R2 U16       ; R2 := U16
323 [-]: SETTABLE  R1 K150 R2   ; R1["GetTopScreen"] := R2
324 [-]: GETGLOBAL R1 K12       ; R1 := _T
325 [-]: GETUPVAL  R2 U17       ; R2 := U17
326 [-]: SETTABLE  R1 K151 R2   ; R1["ScreenOpened"] := R2
327 [-]: GETGLOBAL R1 K12       ; R1 := _T
328 [-]: GETUPVAL  R2 U18       ; R2 := U18
329 [-]: SETTABLE  R1 K152 R2   ; R1["GetScreenRes"] := R2
330 [-]: GETGLOBAL R1 K12       ; R1 := _T
331 [-]: GETUPVAL  R2 U19       ; R2 := U19
332 [-]: SETTABLE  R1 K153 R2   ; R1["ForceIntoStack"] := R2
333 [-]: GETGLOBAL R1 K12       ; R1 := _T
334 [-]: GETUPVAL  R2 U20       ; R2 := U20
335 [-]: SETTABLE  R1 K154 R2   ; R1["ForceOutOfStack"] := R2
336 [-]: GETGLOBAL R1 K12       ; R1 := _T
337 [-]: GETUPVAL  R2 U21       ; R2 := U21
338 [-]: SETTABLE  R1 K155 R2   ; R1["ForceClearScreenStack"] := R2
339 [-]: GETGLOBAL R1 K12       ; R1 := _T
340 [-]: GETUPVAL  R2 U22       ; R2 := U22
341 [-]: SETTABLE  R1 K156 R2   ; R1["EnableUIInput"] := R2
342 [-]: GETGLOBAL R1 K12       ; R1 := _T
343 [-]: GETUPVAL  R2 U23       ; R2 := U23
344 [-]: SETTABLE  R1 K157 R2   ; R1["DisableUIInput"] := R2
345 [-]: GETGLOBAL R1 K12       ; R1 := _T
346 [-]: GETGLOBAL R2 K159      ; R2 := 0xbcd84083
347 [-]: SETTABLE  R1 K158 R2   ; R1["CachedTennoAvatar"] := R2
348 [-]: GETGLOBAL R1 K12       ; R1 := _T
349 [-]: GETUPVAL  R2 U24       ; R2 := U24
350 [-]: SETTABLE  R1 K160 R2   ; R1["CompareInfoPopup"] := R2
351 [-]: GETGLOBAL R1 K12       ; R1 := _T
352 [-]: CLOSURE   R2 4         ; R2 := closure(Function #174.5)
353 [-]: GETUPVAL  R0 U25       ; R0 := U25
354 [-]: SETTABLE  R1 K161 R2   ; R1["PlayBackgroundTransmission"] := R2
355 [-]: GETGLOBAL R1 K12       ; R1 := _T
356 [-]: CLOSURE   R2 5         ; R2 := closure(Function #174.6)
357 [-]: GETUPVAL  R0 U26       ; R0 := U26
358 [-]: SETTABLE  R1 K162 R2   ; R1["SetAvatarLookAt"] := R2
359 [-]: GETGLOBAL R1 K163      ; R1 := 0x76ea806b
360 [-]: SELF      R1 R1 K164   ; R2 := R1; R1 := R1[0x12b342e0]
361 [-]: LOADK     R3 K165      ; R3 := "OnUserChangedCallback"
362 [-]: CALL      R1 3 1       ; R1(R2,R3)
363 [-]: GETGLOBAL R1 K166      ; R1 := 0xe7f2b02f
364 [-]: SELF      R1 R1 K167   ; R2 := R1; R1 := R1[0x592621b6]
365 [-]: LOADK     R3 K168      ; R3 := "OnLoadHubMessage"
366 [-]: CALL      R1 3 1       ; R1(R2,R3)
367 [-]: GETGLOBAL R1 K166      ; R1 := 0xe7f2b02f
368 [-]: SELF      R1 R1 K169   ; R2 := R1; R1 := R1[0xb1d1a0e2]
369 [-]: LOADK     R3 K170      ; R3 := "OnLoadOrbiterMessage"
370 [-]: CALL      R1 3 1       ; R1(R2,R3)
371 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
372 [-]: GETGLOBAL R2 K171      ; R2 := 0x83f4e77c
373 [-]: CALL      R1 2 2       ; R1 := R1(R2)
374 [-]: TEST      R1 1         ; if R1 then PC := 390
375 [-]: JMP       390          ; PC := 390
376 [-]: GETGLOBAL R1 K171      ; R1 := 0x83f4e77c
377 [-]: SELF      R1 R1 K172   ; R2 := R1; R1 := R1[0x7d63f19c]
378 [-]: CALL      R1 2 2       ; R1 := R1(R2)
379 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
380 [-]: MOVE      R3 R1        ; R3 := R1
381 [-]: CALL      R2 2 2       ; R2 := R2(R3)
382 [-]: TEST      R2 1         ; if R2 then PC := 390
383 [-]: JMP       390          ; PC := 390
384 [-]: GETGLOBAL R2 K173      ; R2 := 0x3d106989
385 [-]: LOADK     R3 K174      ; R3 := "UISTYLE: Style changed callback registered"
386 [-]: CALL      R2 2 1       ; R2(R3)
387 [-]: SELF      R2 R1 K175   ; R3 := R1; R2 := R1[0x97b2b307]
388 [-]: LOADK     R4 K176      ; R4 := "StyleChangedCallback"
389 [-]: CALL      R2 3 1       ; R2(R3,R4)
390 [-]: GETGLOBAL R2 K163      ; R2 := 0x76ea806b
391 [-]: SELF      R2 R2 K177   ; R3 := R2; R2 := R2[0x3f3ae64c]
392 [-]: LOADK     R4 0         ; R4 := 0.000000
393 [-]: LOADBOOL  R5 0 0       ; R5 := false
394 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
395 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
396 [-]: MOVE      R4 R2        ; R4 := R2
397 [-]: CALL      R3 2 2       ; R3 := R3(R4)
398 [-]: TEST      R3 1         ; if R3 then PC := 463
399 [-]: JMP       463          ; PC := 463
400 [-]: SELF      R3 R2 K178   ; R4 := R2; R3 := R2[0x80563238]
401 [-]: CALL      R3 2 2       ; R3 := R3(R4)
402 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
403 [-]: MOVE      R5 R3        ; R5 := R3
404 [-]: CALL      R4 2 2       ; R4 := R4(R5)
405 [-]: TEST      R4 1         ; if R4 then PC := 463
406 [-]: JMP       463          ; PC := 463
407 [-]: SELF      R4 R3 K179   ; R5 := R3; R4 := R3[0x25a6e75e]
408 [-]: CALL      R4 2 2       ; R4 := R4(R5)
409 [-]: SELF      R4 R4 K180   ; R5 := R4; R4 := R4[0x8e7c3b5e]
410 [-]: CALL      R4 2 2       ; R4 := R4(R5)
411 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
412 [-]: MOVE      R6 R4        ; R6 := R4
413 [-]: CALL      R5 2 2       ; R5 := R5(R6)
414 [-]: TEST      R5 1         ; if R5 then PC := 432
415 [-]: JMP       432          ; PC := 432
416 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
417 [-]: GETGLOBAL R6 K126      ; R6 := 0xbe190284
418 [-]: CALL      R5 2 2       ; R5 := R5(R6)
419 [-]: TEST      R5 0         ; if not R5 then PC := 425
420 [-]: JMP       425          ; PC := 425
421 [-]: GETGLOBAL R5 K181      ; R5 := 0xcbd666e1
422 [-]: LOADK     R6 0         ; R6 := 0.000000
423 [-]: CALL      R5 2 1       ; R5(R6)
424 [-]: JMP       416          ; PC := 416
425 [-]: GETGLOBAL R5 K126      ; R5 := 0xbe190284
426 [-]: SELF      R5 R5 K182   ; R6 := R5; R5 := R5[0x8e07e77f]
427 [-]: SELF      R7 R4 K183   ; R8 := R4; R7 := R4[0xed4e0128]
428 [-]: CALL      R7 2 2       ; R7 := R7(R8)
429 [-]: LOADK     R8 K184      ; R8 := "ActiveQuestLoaded"
430 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
431 [-]: JMP       434          ; PC := 434
432 [-]: GETGLOBAL R5 K12       ; R5 := _T
433 [-]: SETTABLE  R5 K184 K137 ; R5["ActiveQuestLoaded"] := true
434 [-]: GETGLOBAL R5 K185      ; R5 := 0x89326c93
435 [-]: SELF      R5 R5 K186   ; R6 := R5; R5 := R5[0xca9ea368]
436 [-]: CALL      R5 2 2       ; R5 := R5(R6)
437 [-]: GETGLOBAL R6 K187      ; R6 := 0xa94df70b
438 [-]: SELF      R6 R6 K188   ; R7 := R6; R6 := R6[0x85de842a]
439 [-]: MOVE      R8 R5        ; R8 := R5
440 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
441 [-]: TEST      R6 1         ; if R6 then PC := 463
442 [-]: JMP       463          ; PC := 463
443 [-]: GETUPVAL  R6 U27       ; R6 := U27
444 [-]: CALL      R6 1 1       ; R6()
445 [-]: GETGLOBAL R6 K12       ; R6 := _T
446 [-]: GETTABLE  R6 R6 K189   ; R6 := R6["BackgroundInitialized"]
447 [-]: EQ        1 R6 K137    ; if R6 == true then PC := 450
448 [-]: JMP       450          ; PC := 450
449 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 450
450 [-]: LOADBOOL  R6 1 0       ; R6 := true
451 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
452 [-]: GETGLOBAL R8 K171      ; R8 := 0x83f4e77c
453 [-]: CALL      R7 2 2       ; R7 := R7(R8)
454 [-]: TEST      R7 1         ; if R7 then PC := 458
455 [-]: JMP       458          ; PC := 458
456 [-]: TEST      R6 0         ; if not R6 then PC := 463
457 [-]: JMP       463          ; PC := 463
458 [-]: GETUPVAL  R7 U28       ; R7 := U28
459 [-]: LOADBOOL  R8 0 0       ; R8 := false
460 [-]: CALL      R7 2 1       ; R7(R8)
461 [-]: GETUPVAL  R7 U29       ; R7 := U29
462 [-]: SETTABLE  R7 K190 K191 ; R7["mForceRefreshWorldStatePostLogin"] := false
463 [-]: GETUPVAL  R7 U30       ; R7 := U30
464 [-]: GETTABLE  R7 R7 K192   ; R7 := R7[0x36fcc811]
465 [-]: CALL      R7 1 1       ; R7()
466 [-]: GETGLOBAL R7 K12       ; R7 := _T
467 [-]: GETUPVAL  R8 U31       ; R8 := U31
468 [-]: SETTABLE  R7 K193 R8   ; R7["ShowDioramaLevel"] := R8
469 [-]: GETGLOBAL R7 K12       ; R7 := _T
470 [-]: SETTABLE  R7 K189 K137 ; R7["BackgroundInitialized"] := true
471 [-]: GETGLOBAL R7 K173      ; R7 := 0x3d106989
472 [-]: LOADK     R8 K194      ; R8 := "Background.lua: Initialize"
473 [-]: CALL      R7 2 1       ; R7(R8)
474 [-]: RETURN    R0 1         ; return 


; Function #174.1:
;
; Name:            
; Defined at line: 6316
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: LOADK     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x80563238]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x1dd7e0dd]
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x34291f5c
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1[0x68d83431]
 11 [-]: CALL      R1 1 2       ; R1 := R1()
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2[0xa6e1fb01]
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xbfa0067d]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: SELF      R4 R1 K8     ; R5 := R1; R4 := R1[0xeaa7e8dc]
 18 [-]: MOVE      R6 R3        ; R6 := R3
 19 [-]: CALL      R4 3 1       ; R4(R5,R6)
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: GETTABLE  R4 R4 K9     ; R4 := R4[0x6c3b4854]
 22 [-]: MOVE      R5 R1        ; R5 := R1
 23 [-]: MOVE      R6 R2        ; R6 := R2
 24 [-]: CALL      R4 3 1       ; R4(R5,R6)
 25 [-]: GETGLOBAL R4 K11       ; R4 := 0x161c62c5
 26 [-]: SETTABLE  R1 K10 R4    ; R1["level"] := R4
 27 [-]: GETGLOBAL R4 K4        ; R4 := 0x34291f5c
 28 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x4e0a1dfc]
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: CALL      R4 2 1       ; R4(R5)
 31 [-]: RETURN    R0 1         ; return 


; Function #174.2:
;
; Name:            
; Defined at line: 6338
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := mTimerMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbd2e96ea]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #174.3:
;
; Name:            
; Defined at line: 6411
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SETGLOBAL R0 K0        ; mPurchaseParams := R0
  2 [-]: SETUPVAL  R1 U0        ; U82 := R0
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
  5 [-]: LOADK     R4 K3        ; R4 := "BuyItem"
  6 [-]: LOADK     R5 K4        ; R5 := ""
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #174.4:
;
; Name:            
; Defined at line: 6418
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x6c97a788
  2 [-]: GETTABLE  R4 R4 K1     ; R4 := R4[0xf89a99f3]
  3 [-]: CALL      R4 1 2       ; R4 := R4()
  4 [-]: GETUPVAL  R5 U0        ; R5 := U0
  5 [-]: GETTABLE  R5 R5 K3     ; R5 := R5[0x6a6c9d79]
  6 [-]: CALL      R5 1 2       ; R5 := R5()
  7 [-]: SETTABLE  R4 K2 R5     ; R4["mSource"] := R5
  8 [-]: GETGLOBAL R5 K5        ; R5 := 0xb009bbc6
  9 [-]: MOVE      R6 R0        ; R6 := R0
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: SETTABLE  R4 K4 R5     ; R4["mStoreItem"] := R5
 12 [-]: GETUPVAL  R5 U1        ; R5 := U1
 13 [-]: GETTABLE  R5 R5 K7     ; R5 := R5[0x06d055f9]
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: MOVE      R7 R2        ; R7 := R2
 16 [-]: LOADK     R8 1         ; R8 := 1.000000
 17 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 18 [-]: SETTABLE  R4 K6 R5     ; R4["mQuantity"] := R5
 19 [-]: EQ        1 R3 K9      ; if R3 == true then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 22
 22 [-]: LOADBOOL  R5 1 0       ; R5 := true
 23 [-]: SETTABLE  R4 K8 R5     ; R4["mSkipConfirm"] := R5
 24 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["mSource"]
 25 [-]: EQ        0 R5 K10     ; if R5 ~= 0.000000 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETGLOBAL R5 K11       ; R5 := 0x7b998233
 28 [-]: GETGLOBAL R6 K12       ; R6 := _T
 29 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["CurrentStorePage"]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: TEST      R5 1         ; if R5 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: GETGLOBAL R5 K12       ; R5 := _T
 34 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CurrentStorePage"]
 35 [-]: SETTABLE  R4 K14 R5    ; R4["mStorePage"] := R5
 36 [-]: GETGLOBAL R5 K11       ; R5 := 0x7b998233
 37 [-]: GETGLOBAL R6 K12       ; R6 := _T
 38 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["CurrentSearchTerm"]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: TEST      R5 1         ; if R5 then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETGLOBAL R5 K12       ; R5 := _T
 43 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["CurrentSearchTerm"]
 44 [-]: SETTABLE  R4 K16 R5    ; R4["mSearchTerm"] := R5
 45 [-]: GETGLOBAL R5 K12       ; R5 := _T
 46 [-]: GETTABLE  R5 R5 K17    ; R5 := R5[0xfeca41e4]
 47 [-]: MOVE      R6 R4        ; R6 := R4
 48 [-]: MOVE      R7 R1        ; R7 := R1
 49 [-]: CALL      R5 3 1       ; R5(R6,R7)
 50 [-]: RETURN    R0 1         ; return 


; Function #174.5:
;
; Name:            
; Defined at line: 6468
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #174.6:
;
; Name:            
; Defined at line: 6473
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 6526
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xf616a184]
  3 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/MainMenu_LogoffConfirm"
  4 [-]: LOADK     R2 K2        ; R2 := "ConfirmLogoff"
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 6530
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xc92b1e03]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := _T
  5 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["BackgroundMovie"]
  6 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xf56f3887]
  7 [-]: LOADK     R2 K5        ; R2 := "ConfirmLogoff"
  8 [-]: NEWTABLE  R3 1 0       ; R3 := {}
  9 [-]: LOADK     R4 4         ; R4 := 4.000000
 10 [-]: SETLIST   R3 1 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
 11 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 6535
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0xe7f2b02f
  7 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x0b6ebd5b]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R1 K5        ; R1 := 0x3d106989
 12 [-]: LOADK     R2 K6        ; R2 := "ConfirmLogoff - IsBlockingTaskPending, waiting"
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: CALL      R1 1 1       ; R1()
 16 [-]: LOADBOOL  R1 1 0       ; R1 := true
 17 [-]: SETGLOBAL R1 K7        ; mQueuedLogoff := R1
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x3d106989
 20 [-]: LOADK     R2 K8        ; R2 := "Background.lua - ConfirmLogoff -> _FadeInOut -> _DoLogoff"
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: LOADK     R2 K9        ; R2 := 0.000100
 24 [-]: LOADK     R3 20        ; R3 := 20.000000
 25 [-]: LOADK     R4 1         ; R4 := 1.000000
 26 [-]: GETUPVAL  R5 U2        ; R5 := U2
 27 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 28 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 6548
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       7
; Max Stack Size:  15

  1 [-]: GETGLOBAL R3 K0        ; R3 := movies
  2 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  4 [-]: MOVE      R5 R3        ; R5 := R3
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 33
  7 [-]: JMP       33           ; PC := 33
  8 [-]: GETGLOBAL R4 K2        ; R4 := 0x9ba7909f
  9 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xbcfb64ab]
 10 [-]: MOVE      R6 R3        ; R6 := R3
 11 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 12 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 33
 16 [-]: JMP       33           ; PC := 33
 17 [-]: LOADK     R5 K4        ; R5 := ""
 18 [-]: GETGLOBAL R6 K5        ; R6 := 0xc8802016
 19 [-]: MOVE      R7 R2        ; R7 := R2
 20 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 21 [-]: JMP       26           ; PC := 26
 22 [-]: MOVE      R11 R5       ; R11 := R5
 23 [-]: LOADK     R12 K6       ; R12 := ","
 24 [-]: MOVE      R13 R10      ; R13 := R10
 25 [-]: CONCAT    R5 R11 R13   ; R5 := R11 .. R12 .. R13
 26 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 22; R8 := R9 end
 27 [-]: JMP       22           ; PC := 22
 28 [-]: SELF      R11 R4 K7    ; R12 := R4; R11 := R4[0xe4162eed]
 29 [-]: MOVE      R13 R1       ; R13 := R1
 30 [-]: MOVE      R14 R5       ; R14 := R5
 31 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 32 [-]: RETURN    R11 2        ; return R11
 33 [-]: LOADBOOL  R11 0 0      ; R11 := false
 34 [-]: RETURN    R11 2        ; return R11
 35 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 6563
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       3
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: VARARG    R6 0         ; R6 := ...
  5 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 6567
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := movies
  2 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  4 [-]: MOVE      R5 R3        ; R5 := R3
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 22
  7 [-]: JMP       22           ; PC := 22
  8 [-]: GETGLOBAL R4 K2        ; R4 := 0x9ba7909f
  9 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xbcfb64ab]
 10 [-]: MOVE      R6 R3        ; R6 := R3
 11 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 12 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: SELF      R5 R4 K4     ; R6 := R4; R5 := R4[0xe4162eed]
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: MOVE      R8 R2        ; R8 := R2
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: RETURN    R5 2         ; return R5
 22 [-]: LOADBOOL  R5 0 0       ; R5 := false
 23 [-]: RETURN    R5 2         ; return R5
 24 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 6578
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       3
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := screenStack
  2 [-]: GETGLOBAL R3 K0        ; R3 := screenStack
  3 [-]: LEN       R3 R3        ; R3 := # R3
  4 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: VARARG    R6 0         ; R6 := ...
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 6583
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADBOOL  R0 1 0       ; R0 := true
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  6 [-]: GETGLOBAL R2 K2        ; R2 := mStyleBackgroundMovie
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R1 K2        ; R1 := mStyleBackgroundMovie
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x2d6bad65]
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0x06d055f9]
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: GETGLOBAL R5 K5        ; R5 := 0x0c4ff375
 16 [-]: GETGLOBAL R6 K6        ; R6 := 0xd80c3870
 17 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 6590
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xbdad5a54
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xe4162eed]
 11 [-]: LOADK     R3 K5        ; R3 := "UpdatePurchases"
 12 [-]: LOADK     R4 K6        ; R4 := ""
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
 15 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbcfb64ab]
 16 [-]: GETGLOBAL R3 K7        ; R3 := 0xe44a533a
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xe4162eed]
 24 [-]: LOADK     R4 K8        ; R4 := "RefreshBoosters"
 25 [-]: LOADK     R5 K6        ; R5 := ""
 26 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 6602
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xbdad5a54
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0x32302b4a]
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 6609
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADK     R2 2         ; R2 := 2.000000
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 6613
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 0         ; R1 := 0.000000
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 6617
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  3 [-]: SETTABLE  R0 K1 R1     ; R0[0x33bdd652] := R1
  4 [-]: LOADK     R0 1         ; R0 := 1.000000
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mNumberOfCardsInPack"]
  7 [-]: LOADK     R2 1         ; R2 := 1.000000
  8 [-]: FORPREP   R0 23        ; R0 -= R2; PC := 23
  9 [-]: GETGLOBAL R4 K3        ; R4 := 0x33bdd652
 10 [-]: GETTABLE  R4 R4 K4     ; R4 := R4[0x23d5322f]
 11 [-]: GETGLOBAL R5 K0        ; R5 := _T
 12 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["boosterPackCards"]
 13 [-]: GETUPVAL  R6 U0        ; R6 := U0
 14 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mBoosterPackResults"]
 15 [-]: GETTABLE  R6 R6 K6     ; R6 := R6[1.000000]
 16 [-]: CALL      R4 3 1       ; R4(R5,R6)
 17 [-]: GETGLOBAL R4 K3        ; R4 := 0x33bdd652
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4[0x9c1f3b5a]
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mBoosterPackResults"]
 21 [-]: LOADK     R6 1         ; R6 := 1.000000
 22 [-]: CALL      R4 3 1       ; R4(R5,R6)
 23 [-]: FORLOOP   R0 9         ; R0 += R2; if R0 <= R1 then begin PC := 9; R3 := R0 end
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mNumberOfPacksToProcess"]
 27 [-]: SUB       R5 R5 K6     ; R5 := R5 - 1.000000
 28 [-]: SETTABLE  R4 K8 R5     ; R4[0x303eb010] := R5
 29 [-]: GETGLOBAL R4 K0        ; R4 := _T
 30 [-]: GETUPVAL  R5 U1        ; R5 := U1
 31 [-]: GETTABLE  R5 R5 K10    ; R5 := R5[0x06d055f9]
 32 [-]: GETUPVAL  R6 U0        ; R6 := U0
 33 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mNumberOfPacksToProcess"]
 34 [-]: EQ        1 R6 K11     ; if R6 == 0.000000 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 37
 37 [-]: LOADBOOL  R6 1 0       ; R6 := true
 38 [-]: LOADNIL   R7 R7        ; R7 := nil
 39 [-]: GETUPVAL  R8 U0        ; R8 := U0
 40 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mNumberOfPacksToProcess"]
 41 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 42 [-]: SETTABLE  R4 K9 R5     ; R4["queuedBoosterPacks"] := R5
 43 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 44 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x1fd6abd0]
 45 [-]: GETGLOBAL R6 K14       ; R6 := 0x39803e25
 46 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 47 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
 48 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0x42b04007]
 49 [-]: LOADK     R7 K16       ; R7 := "/Lotus/Language/Menu/Store_GetRandomItem"
 50 [-]: LOADBOOL  R8 0 0       ; R8 := false
 51 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 52 [-]: GETUPVAL  R10 U0       ; R10 := U0
 53 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["mBoosterPackItemString"]
 54 [-]: SETTABLE  R9 K17 R10   ; R9[0xbe190284] := R10
 55 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 56 [-]: GETUPVAL  R6 U1        ; R6 := U1
 57 [-]: GETTABLE  R6 R6 K19    ; R6 := R6[0x659d451f]
 58 [-]: GETGLOBAL R7 K20       ; R7 := 0x0032441c
 59 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["UISound_Purchase"]
 60 [-]: CALL      R6 2 1       ; R6(R7)
 61 [-]: SELF      R6 R4 K22    ; R7 := R4; R6 := R4[0xf56f3887]
 62 [-]: LOADK     R8 K23       ; R8 := "SetText"
 63 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 64 [-]: MOVE      R10 R5       ; R10 := R5
 65 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 66 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 67 [-]: GETUPVAL  R6 U0        ; R6 := U0
 68 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mNumberOfPacksToProcess"]
 69 [-]: LT        0 R6 K6      ; if R6 >= 1.000000 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: SELF      R6 R4 K24    ; R7 := R4; R6 := R4[0xe4162eed]
 72 [-]: LOADK     R8 K25       ; R8 := "SetCallback"
 73 [-]: LOADK     R9 K26       ; R9 := "ConfirmPopup"
 74 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 75 [-]: JMP       80           ; PC := 80
 76 [-]: SELF      R6 R4 K24    ; R7 := R4; R6 := R4[0xe4162eed]
 77 [-]: LOADK     R8 K25       ; R8 := "SetCallback"
 78 [-]: LOADK     R9 K27       ; R9 := "ProcessBoosterPacks"
 79 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 80 [-]: GETUPVAL  R6 U0        ; R6 := U0
 81 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["mTotalPacksToProcess"]
 82 [-]: LT        0 K6 R6      ; if 1.000000 >= R6 then PC := 102
 83 [-]: JMP       102          ; PC := 102
 84 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
 85 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x42b04007]
 86 [-]: LOADK     R8 K29       ; R8 := "/Lotus/Language/Menu/Pack_Display_Count"
 87 [-]: LOADBOOL  R9 0 0       ; R9 := false
 88 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 89 [-]: GETGLOBAL R7 K30       ; R7 := 0x7f5022cf
 90 [-]: GETTABLE  R7 R7 K31    ; R7 := R7[0xe8072ded]
 91 [-]: MOVE      R8 R6        ; R8 := R6
 92 [-]: GETUPVAL  R9 U0        ; R9 := U0
 93 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["mCurrentPack"]
 94 [-]: GETUPVAL  R10 U0       ; R10 := U0
 95 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["mTotalPacksToProcess"]
 96 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 97 [-]: MOVE      R6 R7        ; R6 := R7
 98 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xe4162eed]
 99 [-]: LOADK     R9 K33       ; R9 := "SetCaption"
100 [-]: MOVE      R10 R6       ; R10 := R6
101 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
102 [-]: SELF      R7 R4 K24    ; R8 := R4; R7 := R4[0xe4162eed]
103 [-]: LOADK     R9 K34       ; R9 := "SetNumOptions"
104 [-]: LOADK     R10 1        ; R10 := 1.000000
105 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
106 [-]: GETUPVAL  R7 U0        ; R7 := U0
107 [-]: GETUPVAL  R8 U0        ; R8 := U0
108 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mCurrentPack"]
109 [-]: ADD       R8 R8 K6     ; R8 := R8 + 1.000000
110 [-]: SETTABLE  R7 K32 R8    ; R7["mCurrentPack"] := R8
111 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 6644
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 6648
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  3 [-]: SETTABLE  R3 K0 R4     ; R3["mBoosterPackResults"] := R4
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: SETTABLE  R3 K1 K2     ; R3["mBoosterPackItemString"] := ""
  6 [-]: LOADBOOL  R3 0 0       ; R3 := false
  7 [-]: GETGLOBAL R4 K3        ; R4 := 0x76ea806b
  8 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x3f3ae64c]
  9 [-]: LOADK     R6 0         ; R6 := 0.000000
 10 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 11 [-]: SELF      R5 R4 K5     ; R6 := R4; R5 := R4[0x80563238]
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 14 [-]: LEN       R7 R1        ; R7 := # R1
 15 [-]: EQ        0 R7 K6      ; if R7 ~= 0.000000 then PC := 43
 16 [-]: JMP       43           ; PC := 43
 17 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["KubrowPetEggs"]
 18 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADBOOL  R3 1 0       ; R3 := true
 21 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["MiscItems"]
 22 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 162
 23 [-]: JMP       162          ; PC := 162
 24 [-]: LOADK     R7 1         ; R7 := 1.000000
 25 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["MiscItems"]
 26 [-]: LEN       R8 R8        ; R8 := # R8
 27 [-]: LOADK     R9 1         ; R9 := 1.000000
 28 [-]: FORPREP   R7 41        ; R7 -= R9; PC := 41
 29 [-]: GETGLOBAL R11 K10      ; R11 := 0x7ed0a956
 30 [-]: GETTABLE  R12 R0 K9    ; R12 := R0["MiscItems"]
 31 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
 32 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["ItemType"]
 33 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 34 [-]: SELF      R12 R11 K12  ; R13 := R11; R12 := R11[0xf2deaf69]
 35 [-]: GETGLOBAL R14 K13      ; R14 := 0x2fb8423c
 36 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 37 [-]: TEST      R12 0        ; if not R12 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: LOADBOOL  R12 1 0      ; R12 := true
 40 [-]: SETGLOBAL R12 K14      ; mBoughtShipFeatureItem := R12
 41 [-]: FORLOOP   R7 29        ; R7 += R9; if R7 <= R8 then begin PC := 29; R10 := R7 end
 42 [-]: JMP       162          ; PC := 162
 43 [-]: LOADK     R12 1        ; R12 := 1.000000
 44 [-]: LEN       R13 R1       ; R13 := # R1
 45 [-]: LOADK     R14 1        ; R14 := 1.000000
 46 [-]: FORPREP   R12 152      ; R12 -= R14; PC := 152
 47 [-]: GETGLOBAL R16 K15      ; R16 := 0x015284cd
 48 [-]: LOADK     R17 K16      ; R17 := ","
 49 [-]: GETTABLE  R18 R1 R15   ; R18 := R1[R15]
 50 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 51 [-]: LEN       R17 R16      ; R17 := # R16
 52 [-]: EQ        0 R17 K17    ; if R17 ~= 1.000000 then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: GETGLOBAL R17 K18      ; R17 := 0x3d106989
 55 [-]: LOADK     R18 K19      ; R18 := "Parse failure: "
 56 [-]: MOVE      R19 R2       ; R19 := R2
 57 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 58 [-]: CALL      R17 2 1      ; R17(R18)
 59 [-]: GETUPVAL  R17 U1       ; R17 := U1
 60 [-]: LOADBOOL  R18 0 0      ; R18 := false
 61 [-]: CALL      R17 2 1      ; R17(R18)
 62 [-]: GETUPVAL  R17 U2       ; R17 := U2
 63 [-]: CALL      R17 1 1      ; R17()
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: JMP       152          ; PC := 152
 66 [-]: LEN       R17 R16      ; R17 := # R16
 67 [-]: LE        0 K20 R17    ; if 2.000000 > R17 then PC := 152
 68 [-]: JMP       152          ; PC := 152
 69 [-]: GETTABLE  R17 R16 K17  ; R17 := R16[1.000000]
 70 [-]: GETTABLE  R18 R16 K20  ; R18 := R16[2.000000]
 71 [-]: GETGLOBAL R19 K21      ; R19 := 0xb009bbc6
 72 [-]: MOVE      R20 R17      ; R20 := R17
 73 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 74 [-]: GETGLOBAL R20 K22      ; R20 := 0x7b998233
 75 [-]: MOVE      R21 R19      ; R21 := R19
 76 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 77 [-]: TEST      R20 1        ; if R20 then PC := 152
 78 [-]: JMP       152          ; PC := 152
 79 [-]: SELF      R20 R19 K23  ; R21 := R19; R20 := R19[0xf278f8a1]
 80 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 81 [-]: SELF      R20 R20 K12  ; R21 := R20; R20 := R20[0xf2deaf69]
 82 [-]: GETGLOBAL R22 K24      ; R22 := gLotusArtifactUpgradeType
 83 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 84 [-]: TEST      R20 0        ; if not R20 then PC := 118
 85 [-]: JMP       118          ; PC := 118
 86 [-]: GETGLOBAL R20 K25      ; R20 := 0x6c97a788
 87 [-]: GETTABLE  R20 R20 K26  ; R20 := R20[0x1aba4d9e]
 88 [-]: CALL      R20 1 2      ; R20 := R20()
 89 [-]: SELF      R21 R19 K23  ; R22 := R19; R21 := R19[0xf278f8a1]
 90 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 91 [-]: SETTABLE  R20 K27 R21  ; R20["mItemType"] := R21
 92 [-]: SETTABLE  R20 K28 K17  ; R20["mItemCount"] := 1.000000
 93 [-]: LOADBOOL  R21 0 0      ; R21 := false
 94 [-]: LOADK     R22 1        ; R22 := 1.000000
 95 [-]: LEN       R23 R6       ; R23 := # R6
 96 [-]: LOADK     R24 1        ; R24 := 1.000000
 97 [-]: FORPREP   R22 110      ; R22 -= R24; PC := 110
 98 [-]: GETTABLE  R26 R6 R25   ; R26 := R6[R25]
 99 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["mItemType"]
100 [-]: GETTABLE  R27 R20 K27  ; R27 := R20["mItemType"]
101 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 110
102 [-]: JMP       110          ; PC := 110
103 [-]: GETTABLE  R26 R6 R25   ; R26 := R6[R25]
104 [-]: GETTABLE  R27 R6 R25   ; R27 := R6[R25]
105 [-]: GETTABLE  R27 R27 K28  ; R27 := R27["mItemCount"]
106 [-]: ADD       R27 R27 K17  ; R27 := R27 + 1.000000
107 [-]: SETTABLE  R26 K28 R27  ; R26["mItemCount"] := R27
108 [-]: LOADBOOL  R21 1 0      ; R21 := true
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R22 98       ; R22 += R24; if R22 <= R23 then begin PC := 98; R25 := R22 end
111 [-]: TEST      R21 1        ; if R21 then PC := 118
112 [-]: JMP       118          ; PC := 118
113 [-]: GETGLOBAL R26 K29      ; R26 := 0x33bdd652
114 [-]: GETTABLE  R26 R26 K30  ; R26 := R26[0x23d5322f]
115 [-]: MOVE      R27 R6       ; R27 := R6
116 [-]: MOVE      R28 R20      ; R28 := R20
117 [-]: CALL      R26 3 1      ; R26(R27,R28)
118 [-]: GETGLOBAL R26 K29      ; R26 := 0x33bdd652
119 [-]: GETTABLE  R26 R26 K30  ; R26 := R26[0x23d5322f]
120 [-]: GETUPVAL  R27 U0       ; R27 := U0
121 [-]: GETTABLE  R27 R27 K0   ; R27 := R27["mBoosterPackResults"]
122 [-]: NEWTABLE  R28 2 0      ; R28 := {}
123 [-]: MOVE      R29 R19      ; R29 := R19
124 [-]: MOVE      R30 R18      ; R30 := R18
125 [-]: SETLIST   R28 2 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
126 [-]: CALL      R26 3 1      ; R26(R27,R28)
127 [-]: GETGLOBAL R26 K31      ; R26 := 0xae91e43b
128 [-]: SELF      R26 R26 K32  ; R27 := R26; R26 := R26[0x42b04007]
129 [-]: GETGLOBAL R28 K33      ; R28 := 0x64fb1586
130 [-]: SELF      R29 R19 K34  ; R30 := R19; R29 := R19[0xd3a9d01f]
131 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
132 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
133 [-]: LOADBOOL  R29 0 0      ; R29 := false
134 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
135 [-]: GETUPVAL  R27 U0       ; R27 := U0
136 [-]: GETTABLE  R27 R27 K0   ; R27 := R27["mBoosterPackResults"]
137 [-]: LEN       R27 R27      ; R27 := # R27
138 [-]: LT        0 K17 R27    ; if 1.000000 >= R27 then PC := 146
139 [-]: JMP       146          ; PC := 146
140 [-]: GETUPVAL  R27 U0       ; R27 := U0
141 [-]: GETUPVAL  R28 U0       ; R28 := U0
142 [-]: GETTABLE  R28 R28 K1   ; R28 := R28["mBoosterPackItemString"]
143 [-]: LOADK     R29 K35      ; R29 := "\\,"
144 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
145 [-]: SETTABLE  R27 K1 R28   ; R27["mBoosterPackItemString"] := R28
146 [-]: GETUPVAL  R27 U0       ; R27 := U0
147 [-]: GETUPVAL  R28 U0       ; R28 := U0
148 [-]: GETTABLE  R28 R28 K1   ; R28 := R28["mBoosterPackItemString"]
149 [-]: MOVE      R29 R26      ; R29 := R26
150 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
151 [-]: SETTABLE  R27 K1 R28   ; R27["mBoosterPackItemString"] := R28
152 [-]: FORLOOP   R12 47       ; R12 += R14; if R12 <= R13 then begin PC := 47; R15 := R12 end
153 [-]: LOADK     R27 1        ; R27 := 1.000000
154 [-]: LEN       R28 R6       ; R28 := # R6
155 [-]: LOADK     R29 1        ; R29 := 1.000000
156 [-]: FORPREP   R27 161      ; R27 -= R29; PC := 161
157 [-]: SELF      R31 R5 K36   ; R32 := R5; R31 := R5[0x303eb010]
158 [-]: GETTABLE  R33 R6 R30   ; R33 := R6[R30]
159 [-]: LOADBOOL  R34 1 0      ; R34 := true
160 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
161 [-]: FORLOOP   R27 157      ; R27 += R29; if R27 <= R28 then begin PC := 157; R30 := R27 end
162 [-]: GETUPVAL  R31 U0       ; R31 := U0
163 [-]: GETTABLE  R31 R31 K0   ; R31 := R31["mBoosterPackResults"]
164 [-]: LEN       R31 R31      ; R31 := # R31
165 [-]: LT        0 K6 R31     ; if 0.000000 >= R31 then PC := 187
166 [-]: JMP       187          ; PC := 187
167 [-]: GETUPVAL  R31 U0       ; R31 := U0
168 [-]: GETGLOBAL R32 K38      ; R32 := mQuantityToReceive
169 [-]: SETTABLE  R31 K37 R32  ; R31["mTotalPacksToProcess"] := R32
170 [-]: GETUPVAL  R31 U0       ; R31 := U0
171 [-]: GETUPVAL  R32 U0       ; R32 := U0
172 [-]: GETTABLE  R32 R32 K0   ; R32 := R32["mBoosterPackResults"]
173 [-]: LEN       R32 R32      ; R32 := # R32
174 [-]: GETUPVAL  R33 U0       ; R33 := U0
175 [-]: GETTABLE  R33 R33 K37  ; R33 := R33["mTotalPacksToProcess"]
176 [-]: DIV       R32 R32 R33  ; R32 := R32 / R33
177 [-]: SETTABLE  R31 K39 R32  ; R31["mNumberOfCardsInPack"] := R32
178 [-]: GETUPVAL  R31 U0       ; R31 := U0
179 [-]: SETTABLE  R31 K40 K17  ; R31["mCurrentPack"] := 1.000000
180 [-]: GETUPVAL  R31 U0       ; R31 := U0
181 [-]: GETUPVAL  R32 U0       ; R32 := U0
182 [-]: GETTABLE  R32 R32 K37  ; R32 := R32["mTotalPacksToProcess"]
183 [-]: SETTABLE  R31 K41 R32  ; R31["mNumberOfPacksToProcess"] := R32
184 [-]: GETUPVAL  R31 U3       ; R31 := U3
185 [-]: CALL      R31 1 1      ; R31()
186 [-]: JMP       192          ; PC := 192
187 [-]: GETGLOBAL R31 K31      ; R31 := 0xae91e43b
188 [-]: SELF      R31 R31 K43  ; R32 := R31; R31 := R31[0x1fd6abd0]
189 [-]: GETGLOBAL R33 K44      ; R33 := 0x09de914d
190 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
191 [-]: SETGLOBAL R31 K42      ; mPurchasePopupMovie := R31
192 [-]: TEST      R3 0         ; if not R3 then PC := 219
193 [-]: JMP       219          ; PC := 219
194 [-]: GETGLOBAL R31 K45      ; R31 := 0xbe190284
195 [-]: SELF      R31 R31 K12  ; R32 := R31; R31 := R31[0xf2deaf69]
196 [-]: GETGLOBAL R33 K46      ; R33 := gLotusAttractModeGameRulesType
197 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
198 [-]: TEST      R31 0        ; if not R31 then PC := 219
199 [-]: JMP       219          ; PC := 219
200 [-]: GETGLOBAL R31 K45      ; R31 := 0xbe190284
201 [-]: SELF      R31 R31 K47  ; R32 := R31; R31 := R31[0x7cf8123f]
202 [-]: LOADK     R33 1        ; R33 := 1.000000
203 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
204 [-]: GETGLOBAL R32 K22      ; R32 := 0x7b998233
205 [-]: MOVE      R33 R31      ; R33 := R31
206 [-]: CALL      R32 2 2      ; R32 := R32(R33)
207 [-]: TEST      R32 0        ; if not R32 then PC := 219
208 [-]: JMP       219          ; PC := 219
209 [-]: GETGLOBAL R32 K48      ; R32 := _T
210 [-]: GETTABLE  R32 R32 K49  ; R32 := R32["domeCommands"]
211 [-]: TEST      R32 0        ; if not R32 then PC := 219
212 [-]: JMP       219          ; PC := 219
213 [-]: GETGLOBAL R32 K48      ; R32 := _T
214 [-]: GETTABLE  R32 R32 K49  ; R32 := R32["domeCommands"]
215 [-]: GETTABLE  R32 R32 K50  ; R32 := R32["Cycle"]
216 [-]: NEWTABLE  R33 0 1      ; R33 := {}
217 [-]: SETTABLE  R33 K51 K52  ; R33["opaque"] := true
218 [-]: CALL      R32 2 1      ; R32(R33)
219 [-]: GETUPVAL  R32 U2       ; R32 := U2
220 [-]: CALL      R32 1 1      ; R32()
221 [-]: GETGLOBAL R32 K14      ; R32 := mBoughtShipFeatureItem
222 [-]: TEST      R32 0        ; if not R32 then PC := 230
223 [-]: JMP       230          ; PC := 230
224 [-]: GETUPVAL  R32 U4       ; R32 := U4
225 [-]: GETTABLE  R32 R32 K53  ; R32 := R32[0x22828de3]
226 [-]: LOADBOOL  R33 0 0      ; R33 := false
227 [-]: CALL      R32 2 1      ; R32(R33)
228 [-]: LOADBOOL  R32 0 0      ; R32 := false
229 [-]: SETGLOBAL R32 K14      ; mBoughtShipFeatureItem := R32
230 [-]: GETUPVAL  R32 U1       ; R32 := U1
231 [-]: LOADBOOL  R33 1 0      ; R33 := true
232 [-]: CALL      R32 2 1      ; R32(R33)
233 [-]: GETTABLE  R32 R0 K54   ; R32 := R0["QuestKeys"]
234 [-]: EQ        1 R32 K8     ; if R32 == nil then PC := 240
235 [-]: JMP       240          ; PC := 240
236 [-]: GETUPVAL  R32 U4       ; R32 := U4
237 [-]: GETTABLE  R32 R32 K55  ; R32 := R32[0x7c37aeec]
238 [-]: LOADBOOL  R33 1 0      ; R33 := true
239 [-]: CALL      R32 2 1      ; R32(R33)
240 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 6757
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: TEST      R0 1         ; if R0 then PC := 81
  2 [-]: JMP       81           ; PC := 81
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R2 1 1       ; R2()
 10 [-]: LOADK     R2 K2        ; R2 := "PurchaseFailure_UnknownError"
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 48
 15 [-]: JMP       48           ; PC := 48
 16 [-]: EQ        0 R3 K5      ; if R3 ~= 6.000000 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R2 K6        ; R2 := "PurchaseFailure_InvalidItem"
 19 [-]: JMP       55           ; PC := 55
 20 [-]: EQ        0 R3 K7      ; if R3 ~= 5.000000 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R2 K8        ; R2 := "PurchaseFailure_InsufficientSlots"
 23 [-]: JMP       55           ; PC := 55
 24 [-]: EQ        0 R3 K9      ; if R3 ~= 4.000000 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: LOADK     R2 K10       ; R2 := "PurchaseFailure_InvalidAccount"
 27 [-]: JMP       55           ; PC := 55
 28 [-]: EQ        0 R3 K11     ; if R3 ~= 3.000000 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADK     R2 K12       ; R2 := "PurchaseFailure_AuthenticationFailed"
 31 [-]: JMP       55           ; PC := 55
 32 [-]: EQ        0 R3 K13     ; if R3 ~= 2.000000 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: LOADK     R2 K14       ; R2 := "PurchaseFailure_InsufficientXP"
 35 [-]: JMP       55           ; PC := 55
 36 [-]: EQ        0 R3 K15     ; if R3 ~= 1.000000 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: LOADK     R2 K16       ; R2 := "PurchaseFailure_InsufficientFunds"
 39 [-]: JMP       55           ; PC := 55
 40 [-]: EQ        0 R3 K17     ; if R3 ~= 13.000000 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADK     R2 K18       ; R2 := "PurchaseFailure_OutOfStock"
 43 [-]: JMP       55           ; PC := 55
 44 [-]: EQ        0 R3 K19     ; if R3 ~= 15.000000 then PC := 55
 45 [-]: JMP       55           ; PC := 55
 46 [-]: LOADK     R2 K20       ; R2 := "PurchaseFailure_NewBuild"
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETUPVAL  R4 U1        ; R4 := U1
 49 [-]: GETTABLE  R4 R4 K21    ; R4 := R4[0x7b3cf471]
 50 [-]: MOVE      R5 R1        ; R5 := R1
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: TEST      R4 0         ; if not R4 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: LOADK     R2 K22       ; R2 := "PurchaseFailure_ConnectionError"
 55 [-]: GETGLOBAL R4 K23       ; R4 := 0xae91e43b
 56 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0x42b04007]
 57 [-]: LOADK     R6 K25       ; R6 := "/Lotus/Language/Menu/PurchaseFailure"
 58 [-]: LOADBOOL  R7 1 0       ; R7 := true
 59 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 60 [-]: GETGLOBAL R5 K23       ; R5 := 0xae91e43b
 61 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5[0x42b04007]
 62 [-]: LOADK     R7 K26       ; R7 := "/Lotus/Language/Menu/"
 63 [-]: MOVE      R8 R2        ; R8 := R2
 64 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 65 [-]: LOADBOOL  R8 1 0       ; R8 := true
 66 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 67 [-]: MOVE      R6 R4        ; R6 := R4
 68 [-]: LOADK     R7 K27       ; R7 := " ("
 69 [-]: MOVE      R8 R5        ; R8 := R5
 70 [-]: LOADK     R9 K28       ; R9 := ")"
 71 [-]: CONCAT    R4 R6 R9     ; R4 := R6 .. R7 .. R8 .. R9
 72 [-]: GETUPVAL  R6 U1        ; R6 := U1
 73 [-]: GETTABLE  R6 R6 K29    ; R6 := R6[0xe0cba3ca]
 74 [-]: MOVE      R7 R4        ; R7 := R4
 75 [-]: LOADK     R8 K30       ; R8 := "ConfirmPopup"
 76 [-]: CALL      R6 3 1       ; R6(R7,R8)
 77 [-]: GETUPVAL  R6 U2        ; R6 := U2
 78 [-]: LOADBOOL  R7 0 0       ; R7 := false
 79 [-]: CALL      R6 2 1       ; R6(R7)
 80 [-]: RETURN    R0 1         ; return 
 81 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 82 [-]: GETGLOBAL R7 K31       ; R7 := cjson
 83 [-]: GETTABLE  R7 R7 K32    ; R7 := R7[0x7ab914d8]
 84 [-]: MOVE      R8 R1        ; R8 := R1
 85 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 86 [-]: GETTABLE  R8 R7 K33    ; R8 := R7["BoosterPackItems"]
 87 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 94
 88 [-]: JMP       94           ; PC := 94
 89 [-]: GETGLOBAL R8 K34       ; R8 := 0x015284cd
 90 [-]: LOADK     R9 K35       ; R9 := ";"
 91 [-]: GETTABLE  R10 R7 K33   ; R10 := R7["BoosterPackItems"]
 92 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 93 [-]: MOVE      R6 R8        ; R6 := R8
 94 [-]: GETUPVAL  R8 U3        ; R8 := U3
 95 [-]: GETTABLE  R9 R7 K36    ; R9 := R7["InventoryChanges"]
 96 [-]: MOVE      R10 R6       ; R10 := R6
 97 [-]: MOVE      R11 R1       ; R11 := R1
 98 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 99 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 6803
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADNIL   R2 R2        ; R2 := nil
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 6807
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADNIL   R2 R2        ; R2 := nil
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: LOADK     R1 K0        ; R1 := ""
  5 [-]: GETGLOBAL R2 K1        ; R2 := 0xcb79539e
  6 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETGLOBAL R2 K3        ; R2 := mBaseSourceType
  9 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R2 K3        ; R2 := mBaseSourceType
 12 [-]: EQ        1 R2 K0      ; if R2 == "" then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETGLOBAL R3 K3        ; R3 := mBaseSourceType
 16 [-]: ADD       R3 R3 K4     ; R3 := R3 + 1.000000
 17 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
 18 [-]: JMP       20           ; PC := 20
 19 [-]: GETGLOBAL R1 K5        ; R1 := mPurchaseOrigin
 20 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: LOADK     R1 K0        ; R1 := ""
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0x03f57322
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: EQ        0 R2 K8      ; if R2 ~= 4.000000 then PC := 94
 27 [-]: JMP       94           ; PC := 94
 28 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 29 [-]: GETGLOBAL R3 K1        ; R3 := 0xcb79539e
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: TEST      R2 1         ; if R2 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETGLOBAL R2 K1        ; R2 := 0xcb79539e
 34 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x8b8fb8b7]
 35 [-]: GETGLOBAL R4 K11       ; R4 := 0x0469f296
 36 [-]: LOADK     R5 K12       ; R5 := "INSUFFICIENT_PLAT_POPUP"
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: MOVE      R5 R1        ; R5 := R1
 39 [-]: LOADK     R6 K13       ; R6 := "_YES"
 40 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 41 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 42 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 43 [-]: GETTABLE  R2 R2 K14    ; R2 := R2[0x9e503547]
 44 [-]: CALL      R2 1 2       ; R2 := R2()
 45 [-]: TEST      R2 0         ; if not R2 then PC := 52
 46 [-]: JMP       52           ; PC := 52
 47 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 48 [-]: GETTABLE  R2 R2 K15    ; R2 := R2[0xbcd06415]
 49 [-]: CALL      R2 1 2       ; R2 := R2()
 50 [-]: TEST      R2 1         ; if R2 then PC := 71
 51 [-]: JMP       71           ; PC := 71
 52 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 53 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0x49d4c6fc]
 54 [-]: CALL      R2 1 2       ; R2 := R2()
 55 [-]: TEST      R2 0         ; if not R2 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETGLOBAL R2 K17       ; R2 := 0x76ea806b
 58 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0x3f3ae64c]
 59 [-]: LOADK     R4 0         ; R4 := 0.000000
 60 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 61 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xfe6131c3]
 62 [-]: LOADK     R4 K20       ; R4 := "steam_market"
 63 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 64 [-]: TEST      R2 1         ; if R2 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETGLOBAL R2 K7        ; R2 := 0x34291f5c
 67 [-]: GETTABLE  R2 R2 K21    ; R2 := R2[0x9ad21ae9]
 68 [-]: CALL      R2 1 2       ; R2 := R2()
 69 [-]: TEST      R2 0         ; if not R2 then PC := 78
 70 [-]: JMP       78           ; PC := 78
 71 [-]: GETGLOBAL R2 K22       ; R2 := 0x2d0fad09
 72 [-]: LOADK     R3 K23       ; R3 := "Lotus.Interface.StoreItemUtilities"
 73 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 74 [-]: GETTABLE  R3 R2 K24    ; R3 := R2[0x80d045d2]
 75 [-]: GETGLOBAL R4 K25       ; R4 := 0xae91e43b
 76 [-]: CALL      R3 2 1       ; R3(R4)
 77 [-]: JMP       108          ; PC := 108
 78 [-]: GETGLOBAL R3 K17       ; R3 := 0x76ea806b
 79 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0x3f3ae64c]
 80 [-]: LOADK     R5 0         ; R5 := 0.000000
 81 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 82 [-]: SELF      R4 R3 K19    ; R5 := R3; R4 := R3[0xfe6131c3]
 83 [-]: LOADK     R6 K26       ; R6 := "direct_platinum"
 84 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 85 [-]: TEST      R4 0         ; if not R4 then PC := 90
 86 [-]: JMP       90           ; PC := 90
 87 [-]: GETUPVAL  R4 U2        ; R4 := U2
 88 [-]: CALL      R4 1 1       ; R4()
 89 [-]: JMP       108          ; PC := 108
 90 [-]: GETUPVAL  R4 U3        ; R4 := U3
 91 [-]: MOVE      R5 R1        ; R5 := R1
 92 [-]: CALL      R4 2 1       ; R4(R5)
 93 [-]: JMP       108          ; PC := 108
 94 [-]: GETGLOBAL R4 K9        ; R4 := 0x7b998233
 95 [-]: GETGLOBAL R5 K1        ; R5 := 0xcb79539e
 96 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 97 [-]: TEST      R4 1         ; if R4 then PC := 108
 98 [-]: JMP       108          ; PC := 108
 99 [-]: GETGLOBAL R4 K1        ; R4 := 0xcb79539e
100 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x8b8fb8b7]
101 [-]: GETGLOBAL R6 K11       ; R6 := 0x0469f296
102 [-]: LOADK     R7 K12       ; R7 := "INSUFFICIENT_PLAT_POPUP"
103 [-]: CALL      R6 2 2       ; R6 := R6(R7)
104 [-]: MOVE      R7 R1        ; R7 := R1
105 [-]: LOADK     R8 K27       ; R8 := "_NO"
106 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
107 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
108 [-]: LOADK     R4 K0        ; R4 := ""
109 [-]: SETGLOBAL R4 K3        ; mBaseSourceType := R4
110 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 6844
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UpgradeDurabilityCallback"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 26
  9 [-]: JMP       26           ; PC := 26
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 11 [-]: GETGLOBAL R2 K2        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UpgradeDurabilityCallbackMovie"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R1 K2        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["UpgradeDurabilityCallbackMovie"]
 18 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xe4162eed]
 19 [-]: GETGLOBAL R3 K2        ; R3 := _T
 20 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UpgradeDurabilityCallback"]
 21 [-]: GETGLOBAL R4 K6        ; R4 := 0x64fb1586
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 24 [-]: CALL      R1 0 1       ; R1(R2,...)
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: GETGLOBAL R1 K7        ; R1 := 0x03f57322
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: EQ        0 R1 K9      ; if R1 ~= 5.000000 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: CALL      R1 2 1       ; R1(R2)
 34 [-]: RETURN    R0 1         ; return 
 35 [-]: GETGLOBAL R1 K7        ; R1 := 0x03f57322
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: EQ        0 R1 K10     ; if R1 ~= 4.000000 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETGLOBAL R1 K11       ; R1 := mPurchaseParams
 41 [-]: SETTABLE  R1 K12 K14   ; R1["mDurability"] := 0.000000
 42 [-]: JMP       53           ; PC := 53
 43 [-]: GETGLOBAL R1 K7        ; R1 := 0x03f57322
 44 [-]: MOVE      R2 R0        ; R2 := R0
 45 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 46 [-]: EQ        0 R1 K15     ; if R1 ~= 6.000000 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETGLOBAL R1 K11       ; R1 := mPurchaseParams
 49 [-]: SETTABLE  R1 K12 K16   ; R1["mDurability"] := 1.000000
 50 [-]: JMP       53           ; PC := 53
 51 [-]: GETGLOBAL R1 K11       ; R1 := mPurchaseParams
 52 [-]: SETTABLE  R1 K12 K17   ; R1["mDurability"] := 2.000000
 53 [-]: GETUPVAL  R1 U1        ; R1 := U1
 54 [-]: GETGLOBAL R2 K11       ; R2 := mPurchaseParams
 55 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 56 [-]: SETGLOBAL R3 K20       ; mPurchaseQuantityMultiplier := R3
 57 [-]: SETGLOBAL R2 K19       ; mPurchaseUnitPrice := R2
 58 [-]: SETGLOBAL R1 K18       ; mPurchaseTotalPrice := R1
 59 [-]: GETGLOBAL R1 K18       ; R1 := mPurchaseTotalPrice
 60 [-]: EQ        0 R1 K21     ; if R1 ~= nil then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETUPVAL  R1 U0        ; R1 := U0
 63 [-]: LOADBOOL  R2 0 0       ; R2 := false
 64 [-]: CALL      R1 2 1       ; R1(R2)
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETUPVAL  R1 U2        ; R1 := U2
 67 [-]: CALL      R1 1 1       ; R1()
 68 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 6877
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 6880
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x2d0fad09
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.StoreItemUtilities"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0[0x80d045d2]
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
  6 [-]: LOADBOOL  R3 1 0       ; R3 := true
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 6885
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K1      ; if R0 == 27.000000 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: EQ        1 R0 K2      ; if R0 == 28.000000 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: EQ        1 R0 K3      ; if R0 == 29.000000 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: EQ        1 R0 K4      ; if R0 == 42.000000 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 10
 10 [-]: LOADBOOL  R1 1 0       ; R1 := true
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 6889
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K1      ; if R0 == 48.000000 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 4
  4 [-]: LOADBOOL  R1 1 0       ; R1 := true
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 6893
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x9dbbea0a]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: TEST      R2 0         ; if not R2 then PC := 29
  4 [-]: JMP       29           ; PC := 29
  5 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0x7b060e36]
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: LOADK     R3 1         ; R3 := 1.000000
  8 [-]: LEN       R4 R2        ; R4 := # R2
  9 [-]: LOADK     R5 1         ; R5 := 1.000000
 10 [-]: FORPREP   R3 27        ; R3 -= R5; PC := 27
 11 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 12 [-]: GETTABLE  R8 R2 R6     ; R8 := R2[R6]
 13 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mTypeName"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: TEST      R7 1         ; if R7 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: MOVE      R7 R1        ; R7 := R1
 18 [-]: GETTABLE  R8 R2 R6     ; R8 := R2[R6]
 19 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mTypeName"]
 20 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8[0xfe9eb1a5]
 21 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 22 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 23 [-]: TEST      R7 0         ; if not R7 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADBOOL  R7 1 0       ; R7 := true
 26 [-]: RETURN    R7 2         ; return R7
 27 [-]: FORLOOP   R3 11        ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
 28 [-]: JMP       47           ; PC := 47
 29 [-]: SELF      R7 R0 K5     ; R8 := R0; R7 := R0[0xf278f8a1]
 30 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 31 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0xf2deaf69]
 32 [-]: GETGLOBAL R9 K7        ; R9 := gRecipeItemType
 33 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 34 [-]: TEST      R7 0         ; if not R7 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: MOVE      R7 R1        ; R7 := R1
 37 [-]: SELF      R8 R0 K8     ; R9 := R0; R8 := R0[0x9abeadd7]
 38 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 39 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 40 [-]: RETURN    R7 2         ; return R7
 41 [-]: JMP       47           ; PC := 47
 42 [-]: MOVE      R7 R1        ; R7 := R1
 43 [-]: SELF      R8 R0 K4     ; R9 := R0; R8 := R0[0xfe9eb1a5]
 44 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 45 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 46 [-]: RETURN    R7 2         ; return R7
 47 [-]: LOADBOOL  R7 0 0       ; R7 := false
 48 [-]: RETURN    R7 2         ; return R7
 49 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 6910
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 111
  5 [-]: JMP       111          ; PC := 111
  6 [-]: GETGLOBAL R1 K3        ; R1 := mPurchaseParams
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mStoreItem"]
  8 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 111
  9 [-]: JMP       111          ; PC := 111
 10 [-]: GETGLOBAL R1 K3        ; R1 := mPurchaseParams
 11 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mStoreItem"]
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xc3bbc5cb]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K7        ; R2 := 0x76ea806b
 15 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x3f3ae64c]
 16 [-]: LOADK     R4 0         ; R4 := 0.000000
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x80563238]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: LOADK     R4 K10       ; R4 := ""
 21 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 22 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 23 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x9dbbea0a]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: TEST      R5 0         ; if not R5 then PC := 33
 26 [-]: JMP       33           ; PC := 33
 27 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 28 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 29 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xed4e0128]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: MOVE      R4 R5        ; R4 := R5
 32 [-]: JMP       38           ; PC := 38
 33 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 34 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mStoreItem"]
 35 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x170c5cfa]
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: MOVE      R4 R5        ; R4 := R5
 38 [-]: GETGLOBAL R5 K3        ; R5 := mPurchaseParams
 39 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mSource"]
 40 [-]: EQ        1 R5 K16     ; if R5 == 18.000000 then PC := 85
 41 [-]: JMP       85           ; PC := 85
 42 [-]: SELF      R5 R3 K17    ; R6 := R3; R5 := R3[0xc192c12e]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: TEST      R5 1         ; if R5 then PC := 63
 45 [-]: JMP       63           ; PC := 63
 46 [-]: GETUPVAL  R5 U0        ; R5 := U0
 47 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
 48 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
 49 [-]: GETUPVAL  R7 U1        ; R7 := U1
 50 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 51 [-]: TEST      R5 0         ; if not R5 then PC := 63
 52 [-]: JMP       63           ; PC := 63
 53 [-]: GETUPVAL  R5 U2        ; R5 := U2
 54 [-]: GETTABLE  R5 R5 K18    ; R5 := R5[0xe0cba3ca]
 55 [-]: LOADK     R6 K19       ; R6 := "/Lotus/Language/Menu/ArchwingFailurePurchase"
 56 [-]: LOADK     R7 K20       ; R7 := "ConfirmErrorPopup"
 57 [-]: CALL      R5 3 1       ; R5(R6,R7)
 58 [-]: GETUPVAL  R5 U3        ; R5 := U3
 59 [-]: LOADNIL   R6 R6        ; R6 := nil
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: RETURN    R0 1         ; return 
 62 [-]: JMP       85           ; PC := 85
 63 [-]: GETUPVAL  R5 U0        ; R5 := U0
 64 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
 65 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mStoreItem"]
 66 [-]: GETUPVAL  R7 U4        ; R7 := U4
 67 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 68 [-]: TEST      R5 0         ; if not R5 then PC := 85
 69 [-]: JMP       85           ; PC := 85
 70 [-]: GETUPVAL  R5 U5        ; R5 := U5
 71 [-]: GETTABLE  R5 R5 K21    ; R5 := R5[0x52fb05b3]
 72 [-]: GETGLOBAL R6 K22       ; R6 := 0x0747e0de
 73 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 74 [-]: TEST      R5 1         ; if R5 then PC := 85
 75 [-]: JMP       85           ; PC := 85
 76 [-]: GETUPVAL  R5 U2        ; R5 := U2
 77 [-]: GETTABLE  R5 R5 K18    ; R5 := R5[0xe0cba3ca]
 78 [-]: LOADK     R6 K23       ; R6 := "/Lotus/Language/Store/MechPurchaseFailure"
 79 [-]: LOADK     R7 K20       ; R7 := "ConfirmErrorPopup"
 80 [-]: CALL      R5 3 1       ; R5(R6,R7)
 81 [-]: GETUPVAL  R5 U3        ; R5 := U3
 82 [-]: LOADNIL   R6 R6        ; R6 := nil
 83 [-]: CALL      R5 2 1       ; R5(R6)
 84 [-]: RETURN    R0 1         ; return 
 85 [-]: GETGLOBAL R5 K24       ; R5 := 0x9ba7909f
 86 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5[0xbcfb64ab]
 87 [-]: GETGLOBAL R7 K26       ; R7 := movies
 88 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["LoadOut"]
 89 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 90 [-]: GETGLOBAL R6 K28       ; R6 := 0x7b998233
 91 [-]: MOVE      R7 R5        ; R7 := R5
 92 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 93 [-]: TEST      R6 1         ; if R6 then PC := 99
 94 [-]: JMP       99           ; PC := 99
 95 [-]: SELF      R6 R5 K29    ; R7 := R5; R6 := R5[0xe4162eed]
 96 [-]: LOADK     R8 K30       ; R8 := "NotifyPurchase"
 97 [-]: LOADK     R9 K10       ; R9 := ""
 98 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 99 [-]: GETUPVAL  R6 U6        ; R6 := U6
100 [-]: LOADK     R7 K31       ; R7 := "/Lotus/Language/Menu/PurchaseInProgress"
101 [-]: CALL      R6 2 1       ; R6(R7)
102 [-]: TEST      R1 1         ; if R1 then PC := 106
103 [-]: JMP       106          ; PC := 106
104 [-]: GETGLOBAL R6 K3        ; R6 := mPurchaseParams
105 [-]: SETTABLE  R6 K32 K2    ; R6["mDurability"] := 4.000000
106 [-]: SELF      R6 R3 K33    ; R7 := R3; R6 := R3[0xa98ff345]
107 [-]: GETGLOBAL R8 K3        ; R8 := mPurchaseParams
108 [-]: LOADK     R9 K34       ; R9 := "OnPurchaseResults"
109 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
110 [-]: JMP       114          ; PC := 114
111 [-]: GETUPVAL  R6 U3        ; R6 := U3
112 [-]: LOADNIL   R7 R7        ; R7 := nil
113 [-]: CALL      R6 2 1       ; R6(R7)
114 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 6954
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADBOOL  R0 1 0       ; R0 := true
  5 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mQuantity"]
  7 [-]: SETGLOBAL R1 K1        ; mQuantityToReceive := R1
  8 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mStoreItem"]
 10 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xc3bbc5cb]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: CALL      R1 1 1       ; R1()
 16 [-]: JMP       200          ; PC := 200
 17 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 18 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 19 [-]: EQ        1 R1 K8      ; if R1 == 0.000000 then PC := 70
 20 [-]: JMP       70           ; PC := 70
 21 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 22 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 23 [-]: EQ        1 R1 K9      ; if R1 == 4.000000 then PC := 70
 24 [-]: JMP       70           ; PC := 70
 25 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 26 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 27 [-]: EQ        1 R1 K10     ; if R1 == 5.000000 then PC := 70
 28 [-]: JMP       70           ; PC := 70
 29 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 30 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 31 [-]: EQ        1 R1 K11     ; if R1 == 6.000000 then PC := 70
 32 [-]: JMP       70           ; PC := 70
 33 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 34 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 35 [-]: EQ        1 R1 K12     ; if R1 == 8.000000 then PC := 70
 36 [-]: JMP       70           ; PC := 70
 37 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 38 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 39 [-]: EQ        1 R1 K13     ; if R1 == 10.000000 then PC := 70
 40 [-]: JMP       70           ; PC := 70
 41 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 42 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 43 [-]: EQ        1 R1 K14     ; if R1 == 11.000000 then PC := 70
 44 [-]: JMP       70           ; PC := 70
 45 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 46 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 47 [-]: EQ        1 R1 K15     ; if R1 == 12.000000 then PC := 70
 48 [-]: JMP       70           ; PC := 70
 49 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 50 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 51 [-]: EQ        1 R1 K16     ; if R1 == 13.000000 then PC := 70
 52 [-]: JMP       70           ; PC := 70
 53 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 54 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 55 [-]: EQ        1 R1 K17     ; if R1 == 14.000000 then PC := 70
 56 [-]: JMP       70           ; PC := 70
 57 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 58 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 59 [-]: EQ        1 R1 K18     ; if R1 == 15.000000 then PC := 70
 60 [-]: JMP       70           ; PC := 70
 61 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 62 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 63 [-]: EQ        1 R1 K19     ; if R1 == 16.000000 then PC := 70
 64 [-]: JMP       70           ; PC := 70
 65 [-]: GETGLOBAL R1 K2        ; R1 := mPurchaseParams
 66 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mSource"]
 67 [-]: EQ        1 R1 K20     ; if R1 == 17.000000 then PC := 70
 68 [-]: JMP       70           ; PC := 70
 69 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 70
 70 [-]: LOADBOOL  R1 1 0       ; R1 := true
 71 [-]: TEST      R1 0         ; if not R1 then PC := 170
 72 [-]: JMP       170          ; PC := 170
 73 [-]: TEST      R0 1         ; if R0 then PC := 170
 74 [-]: JMP       170          ; PC := 170
 75 [-]: GETUPVAL  R2 U1        ; R2 := U1
 76 [-]: GETTABLE  R2 R2 K21    ; R2 := R2[0xcd71f5a1]
 77 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 78 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mStoreItem"]
 79 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 80 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 81 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["mCouponId"]
 82 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["mId"]
 83 [-]: EQ        0 R3 K24     ; if R3 ~= "" then PC := 106
 84 [-]: JMP       106          ; PC := 106
 85 [-]: TEST      R2 0         ; if not R2 then PC := 106
 86 [-]: JMP       106          ; PC := 106
 87 [-]: GETTABLE  R3 R2 K25    ; R3 := R2["mBogoBuy"]
 88 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 106
 89 [-]: JMP       106          ; PC := 106
 90 [-]: GETTABLE  R3 R2 K26    ; R3 := R2["mBogoGet"]
 91 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 106
 92 [-]: JMP       106          ; PC := 106
 93 [-]: GETGLOBAL R3 K2        ; R3 := mPurchaseParams
 94 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mQuantity"]
 95 [-]: GETGLOBAL R4 K27       ; R4 := 0x5bced4c4
 96 [-]: GETTABLE  R4 R4 K28    ; R4 := R4[0x55f27c30]
 97 [-]: GETGLOBAL R5 K2        ; R5 := mPurchaseParams
 98 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["mQuantity"]
 99 [-]: GETTABLE  R6 R2 K25    ; R6 := R2["mBogoBuy"]
100 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
101 [-]: CALL      R4 2 2       ; R4 := R4(R5)
102 [-]: GETTABLE  R5 R2 K26    ; R5 := R2["mBogoGet"]
103 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
104 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
105 [-]: SETGLOBAL R3 K1        ; mQuantityToReceive := R3
106 [-]: GETUPVAL  R3 U1        ; R3 := U1
107 [-]: GETTABLE  R3 R3 K29    ; R3 := R3[0xe9947039]
108 [-]: GETGLOBAL R4 K2        ; R4 := mPurchaseParams
109 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mStoreItem"]
110 [-]: LOADNIL   R5 R6        ; R5 := R6 := nil
111 [-]: GETGLOBAL R7 K30       ; R7 := _T
112 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["purchasedItems"]
113 [-]: CALL      R3 5 3       ; R3,R4 := R3(R4,R5,R6,R7)
114 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 164
115 [-]: JMP       164          ; PC := 164
116 [-]: LT        0 K8 R4      ; if 0.000000 >= R4 then PC := 164
117 [-]: JMP       164          ; PC := 164
118 [-]: GETGLOBAL R5 K32       ; R5 := 0xae91e43b
119 [-]: SELF      R5 R5 K33    ; R6 := R5; R5 := R5[0x42b04007]
120 [-]: GETGLOBAL R7 K34       ; R7 := 0x64fb1586
121 [-]: GETGLOBAL R8 K2        ; R8 := mPurchaseParams
122 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["mStoreItem"]
123 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0xd3a9d01f]
124 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
125 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
126 [-]: LOADBOOL  R8 0 0       ; R8 := false
127 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
128 [-]: GETGLOBAL R6 K32       ; R6 := 0xae91e43b
129 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x42b04007]
130 [-]: LOADK     R8 K36       ; R8 := "/Lotus/Language/Menu/Popup_BuyItem"
131 [-]: LOADBOOL  R9 1 0       ; R9 := true
132 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
133 [-]: GETGLOBAL R7 K37       ; R7 := 0x7f5022cf
134 [-]: GETTABLE  R7 R7 K38    ; R7 := R7[0xe8072ded]
135 [-]: MOVE      R8 R6        ; R8 := R6
136 [-]: MOVE      R9 R5        ; R9 := R5
137 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
138 [-]: MOVE      R6 R7        ; R6 := R7
139 [-]: LOADK     R7 K39       ; R7 := "<PLATINUM_CREDITS>"
140 [-]: MOVE      R8 R4        ; R8 := R4
141 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
142 [-]: LOADK     R8 K40       ; R8 := "<CREDITS>"
143 [-]: MOVE      R9 R3        ; R9 := R3
144 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
145 [-]: GETGLOBAL R9 K41       ; R9 := 0x34291f5c
146 [-]: GETTABLE  R9 R9 K42    ; R9 := R9[0xe27b35bb]
147 [-]: CALL      R9 1 2       ; R9 := R9()
148 [-]: SETTABLE  R9 K43 K10   ; R9["dialogType"] := 5.000000
149 [-]: SETTABLE  R9 K44 R6    ; R9["locString"] := R6
150 [-]: SETTABLE  R9 K45 R8    ; R9["firstString"] := R8
151 [-]: SETTABLE  R9 K46 R7    ; R9["secondString"] := R7
152 [-]: SETTABLE  R9 K47 K48   ; R9["thirdString"] := "/Lotus/Language/Menu/ItemSelection_Cancel"
153 [-]: SELF      R10 R9 K49   ; R11 := R9; R10 := R9[0xe6ccc5b9]
154 [-]: LOADK     R12 K50      ; R12 := "ConfirmCurrency"
155 [-]: CALL      R10 3 1      ; R10(R11,R12)
156 [-]: GETUPVAL  R10 U2       ; R10 := U2
157 [-]: GETTABLE  R10 R10 K51  ; R10 := R10[0xe99b84e7]
158 [-]: MOVE      R11 R9       ; R11 := R9
159 [-]: CALL      R10 2 1      ; R10(R11)
160 [-]: GETGLOBAL R10 K30      ; R10 := _T
161 [-]: SETTABLE  R10 K52 K53  ; R10["PurchaseSuccessLocOverride"] := nil
162 [-]: RETURN    R0 1         ; return 
163 [-]: JMP       170          ; PC := 170
164 [-]: GETGLOBAL R10 K2       ; R10 := mPurchaseParams
165 [-]: LT        1 K8 R4      ; if 0.000000 < R4 then PC := 168
166 [-]: JMP       168          ; PC := 168
167 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 168
168 [-]: LOADBOOL  R11 1 0      ; R11 := true
169 [-]: SETTABLE  R10 K54 R11  ; R10["mUsePremium"] := R11
170 [-]: GETUPVAL  R10 U3       ; R10 := U3
171 [-]: GETGLOBAL R11 K2       ; R11 := mPurchaseParams
172 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
173 [-]: SETGLOBAL R12 K57      ; mPurchaseQuantityMultiplier := R12
174 [-]: SETGLOBAL R11 K56      ; mPurchaseUnitPrice := R11
175 [-]: SETGLOBAL R10 K55      ; mPurchaseTotalPrice := R10
176 [-]: GETGLOBAL R10 K55      ; R10 := mPurchaseTotalPrice
177 [-]: EQ        0 R10 K53    ; if R10 ~= nil then PC := 183
178 [-]: JMP       183          ; PC := 183
179 [-]: GETUPVAL  R10 U4       ; R10 := U4
180 [-]: LOADNIL   R11 R11      ; R11 := nil
181 [-]: CALL      R10 2 1      ; R10(R11)
182 [-]: RETURN    R0 1         ; return 
183 [-]: TEST      R1 0         ; if not R1 then PC := 198
184 [-]: JMP       198          ; PC := 198
185 [-]: GETUPVAL  R10 U2       ; R10 := U2
186 [-]: GETTABLE  R10 R10 K58  ; R10 := R10[0x06d055f9]
187 [-]: GETGLOBAL R11 K2       ; R11 := mPurchaseParams
188 [-]: GETTABLE  R11 R11 K54  ; R11 := R11["mUsePremium"]
189 [-]: GETUPVAL  R12 U5       ; R12 := U5
190 [-]: GETTABLE  R12 R12 K59  ; R12 := R12["PREMIUM_CREDITS"]
191 [-]: GETUPVAL  R13 U5       ; R13 := U5
192 [-]: GETTABLE  R13 R13 K60  ; R13 := R13["REGULAR_CREDITS"]
193 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
194 [-]: GETGLOBAL R11 K2       ; R11 := mPurchaseParams
195 [-]: GETGLOBAL R12 K55      ; R12 := mPurchaseTotalPrice
196 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
197 [-]: SETTABLE  R11 K61 R12  ; R11["mExpectedPrice"] := R12
198 [-]: GETUPVAL  R11 U6       ; R11 := U6
199 [-]: CALL      R11 1 1      ; R11()
200 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 7020
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADBOOL  R1 0 0       ; R1 := false
  3 [-]: LOADK     R2 K0        ; R2 := "invite"
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0x9ba7909f
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xbcfb64ab]
  7 [-]: GETGLOBAL R2 K3        ; R2 := movies
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["MainMenu"]
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0x32302b4a]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: LOADK     R2 K4        ; R2 := "MainMenu"
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 7030
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 29
  6 [-]: JMP       29           ; PC := 29
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Status"]
 10 [-]: EQ        1 R0 K4      ; if R0 == 0.000000 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K1        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Status"]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 0         ; if not R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0x3d106989
 20 [-]: LOADK     R1 K6        ; R1 := "open pod"
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: GETGLOBAL R0 K1        ; R0 := _T
 23 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 24 [-]: GETGLOBAL R1 K8        ; R1 := 0x6b06b155
 25 [-]: SETTABLE  R0 K7 R1     ; R0["PendingAnimation"] := R1
 26 [-]: GETGLOBAL R0 K1        ; R0 := _T
 27 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 28 [-]: SETTABLE  R0 K3 K9     ; R0["Status"] := 2.000000
 29 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 7038
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 29
  6 [-]: JMP       29           ; PC := 29
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  8 [-]: GETGLOBAL R1 K1        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PodState"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Status"]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 1         ; if R0 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETGLOBAL R0 K1        ; R0 := _T
 15 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 16 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Status"]
 17 [-]: LT        0 K4 R0      ; if 0.000000 >= R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: GETGLOBAL R0 K5        ; R0 := 0x3d106989
 20 [-]: LOADK     R1 K6        ; R1 := "close pod"
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: GETGLOBAL R0 K1        ; R0 := _T
 23 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 24 [-]: GETGLOBAL R1 K8        ; R1 := 0xb2b63f87
 25 [-]: SETTABLE  R0 K7 R1     ; R0["PendingAnimation"] := R1
 26 [-]: GETGLOBAL R0 K1        ; R0 := _T
 27 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["PodState"]
 28 [-]: SETTABLE  R0 K3 K4     ; R0["Status"] := 0.000000
 29 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 7046
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x659d451f]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x620d6b95
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 7050
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 7056
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADBOOL  R0 1 0       ; R0 := true
  2 [-]: SETGLOBAL R0 K0        ; mNeedsToRespawnMenuAvatars := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 7060
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x659d451f]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x0032441c
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UISound_Focus"]
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 7064
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #209:
;
; Name:            
; Defined at line: 7067
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 0         ; if not R0 then PC := 21
  2 [-]: JMP       21           ; PC := 21
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K1 K2     ; R2["ActiveQuestLoaded"] := true
  5 [-]: GETGLOBAL R2 K0        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Jukebox"]
  7 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0xb009bbc6
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0xac62edc0]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 0         ; if not R3 then PC := 28
 15 [-]: JMP       28           ; PC := 28
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3[0x348f9680]
 18 [-]: LOADBOOL  R4 1 0       ; R4 := true
 19 [-]: CALL      R3 2 1       ; R3(R4)
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R3 K0        ; R3 := _T
 22 [-]: SETTABLE  R3 K1 K8     ; R3["ActiveQuestLoaded"] := false
 23 [-]: GETGLOBAL R3 K9        ; R3 := 0x3d106989
 24 [-]: LOADK     R4 K10       ; R4 := "Couldn't load quest: "
 25 [-]: MOVE      R5 R1        ; R5 := R1
 26 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 27 [-]: CALL      R3 2 1       ; R3(R4)
 28 [-]: GETGLOBAL R3 K9        ; R3 := 0x3d106989
 29 [-]: LOADK     R4 K11       ; R4 := "ActiveQuestLoaded="
 30 [-]: GETGLOBAL R5 K12       ; R5 := 0x64fb1586
 31 [-]: GETGLOBAL R6 K0        ; R6 := _T
 32 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["ActiveQuestLoaded"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 35 [-]: CALL      R3 2 1       ; R3(R4)
 36 [-]: RETURN    R0 1         ; return 


; Function #210:
;
; Name:            
; Defined at line: 7084
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := connectionFailurePopup
  2 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x76ea806b
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x8792aaab]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xe0cba3ca]
 11 [-]: LOADK     R1 K5        ; R1 := "/Lotus/Language/Menu/BackgroundError_UserNameChanged"
 12 [-]: LOADK     R2 K6        ; R2 := "DoLogoff"
 13 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 14 [-]: SETGLOBAL R0 K0        ; connectionFailurePopup := R0
 15 [-]: RETURN    R0 1         ; return 


; Function #211:
;
; Name:            
; Defined at line: 7090
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "CheckForAvailableRankUp()"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := mCurrentMode
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
  7 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K4        ; R0 := 0x76ea806b
 11 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x3f3ae64c]
 12 [-]: LOADK     R2 0         ; R2 := 0.000000
 13 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 14 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0x80563238]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 1         ; if R2 then PC := 83
 26 [-]: JMP       83           ; PC := 83
 27 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xde2d1b82]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1[0xefee6c91]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: SELF      R4 R1 K10    ; R5 := R1; R4 := R1[0xa59dbd63]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: SELF      R5 R1 K11    ; R6 := R1; R5 := R1[0x82499e82]
 34 [-]: ADD       R7 R3 K12    ; R7 := R3 + 1.000000
 35 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 36 [-]: LE        0 R5 R4      ; if R5 > R4 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: LE        1 R2 K13     ; if R2 <= 0.000000 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 41
 41 [-]: LOADBOOL  R6 1 0       ; R6 := true
 42 [-]: TEST      R6 0         ; if not R6 then PC := 83
 43 [-]: JMP       83           ; PC := 83
 44 [-]: GETGLOBAL R7 K14       ; R7 := _T
 45 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["ShowNotification"]
 46 [-]: EQ        1 R7 K16     ; if R7 == nil then PC := 83
 47 [-]: JMP       83           ; PC := 83
 48 [-]: GETGLOBAL R7 K17       ; R7 := 0xae91e43b
 49 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x42b04007]
 50 [-]: GETGLOBAL R9 K19       ; R9 := 0x64fb1586
 51 [-]: GETGLOBAL R10 K20      ; R10 := 0xa94df70b
 52 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10[0x8a513cba]
 53 [-]: ADD       R12 R3 K12   ; R12 := R3 + 1.000000
 54 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 55 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 56 [-]: LOADBOOL  R10 0 0      ; R10 := false
 57 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 58 [-]: GETGLOBAL R8 K14       ; R8 := _T
 59 [-]: GETTABLE  R8 R8 K22    ; R8 := R8[0x7dce37bc]
 60 [-]: GETGLOBAL R9 K17       ; R9 := 0xae91e43b
 61 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9[0x42b04007]
 62 [-]: LOADK     R11 K23      ; R11 := "/Lotus/Language/Menu/Notification_LevelUpAvailable"
 63 [-]: LOADBOOL  R12 1 0      ; R12 := true
 64 [-]: NEWTABLE  R13 0 3      ; R13 := {}
 65 [-]: GETGLOBAL R14 K17      ; R14 := 0xae91e43b
 66 [-]: SELF      R14 R14 K18  ; R15 := R14; R14 := R14[0x42b04007]
 67 [-]: LOADK     R16 K25      ; R16 := "<RANK_"
 68 [-]: ADD       R17 R3 K12   ; R17 := R3 + 1.000000
 69 [-]: LOADK     R18 K26      ; R18 := ">"
 70 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
 71 [-]: LOADBOOL  R17 1 0      ; R17 := true
 72 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 73 [-]: SETTABLE  R13 K24 R14  ; R13["RANK_ICON"] := R14
 74 [-]: GETUPVAL  R14 U0       ; R14 := U0
 75 [-]: GETTABLE  R14 R14 K28  ; R14 := R14[0x0199c230]
 76 [-]: ADD       R15 R3 K12   ; R15 := R3 + 1.000000
 77 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 78 [-]: SETTABLE  R13 K27 R14  ; R13["RANK_NUMBER"] := R14
 79 [-]: SETTABLE  R13 K29 R7   ; R13["RANK_NAME"] := R7
 80 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 81 [-]: LOADK     R10 K30      ; R10 := "LevelUpAvailable"
 82 [-]: CALL      R8 3 1       ; R8(R9,R10)
 83 [-]: RETURN    R0 1         ; return 


; Function #212:
;
; Name:            
; Defined at line: 7118
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf03cd640]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: LOADK     R2 1         ; R2 := 1.000000
  5 [-]: LEN       R3 R1        ; R3 := # R1
  6 [-]: LOADK     R4 1         ; R4 := 1.000000
  7 [-]: FORPREP   R2 63        ; R2 -= R4; PC := 63
  8 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
  9 [-]: GETGLOBAL R7 K2        ; R7 := 0x34291f5c
 10 [-]: GETTABLE  R7 R7 K3     ; R7 := R7[0x397b920f]
 11 [-]: GETTABLE  R8 R6 K4     ; R8 := R6["date"]
 12 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 13 [-]: LE        0 R7 K5      ; if R7 > 0.000000 then PC := 58
 14 [-]: JMP       58           ; PC := 58
 15 [-]: GETGLOBAL R8 K6        ; R8 := 0x89326c93
 16 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0xc7fcada9]
 17 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
 18 [-]: LOADK     R11 K9       ; R11 := "SHIPEVENT_"
 19 [-]: GETTABLE  R12 R6 K10   ; R12 := R6["tag"]
 20 [-]: SELF      R12 R12 K11  ; R13 := R12; R12 := R12[0x6d604ba7]
 21 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 22 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 23 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 24 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 25 [-]: TEST      R8 0         ; if not R8 then PC := 47
 26 [-]: JMP       47           ; PC := 47
 27 [-]: GETGLOBAL R9 K12       ; R9 := 0xc8802016
 28 [-]: MOVE      R10 R8       ; R10 := R8
 29 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 30 [-]: JMP       44           ; PC := 44
 31 [-]: GETGLOBAL R14 K13      ; R14 := 0x7b998233
 32 [-]: MOVE      R15 R13      ; R15 := R13
 33 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 34 [-]: TEST      R14 1        ; if R14 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: SELF      R14 R13 K14  ; R15 := R13; R14 := R13[0xf2deaf69]
 37 [-]: GETGLOBAL R16 K15      ; R16 := gScriptTriggerType
 38 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 39 [-]: TEST      R14 0        ; if not R14 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: SELF      R14 R13 K16  ; R15 := R13; R14 := R13[0x8eb2112d]
 42 [-]: LOADK     R16 K17      ; R16 := "Execute"
 43 [-]: CALL      R14 3 1      ; R14(R15,R16)
 44 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 31; R11 := R12 end
 45 [-]: JMP       31           ; PC := 31
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETUPVAL  R14 U0       ; R14 := U0
 48 [-]: GETTABLE  R14 R14 K18  ; R14 := R14[0xe0cba3ca]
 49 [-]: GETGLOBAL R15 K19      ; R15 := 0x64fb1586
 50 [-]: GETTABLE  R16 R6 K10   ; R16 := R6["tag"]
 51 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 52 [-]: CALL      R14 0 1      ; R14(R15,...)
 53 [-]: GETGLOBAL R14 K0       ; R14 := 0x25d99d89
 54 [-]: SELF      R14 R14 K20  ; R15 := R14; R14 := R14[0xcad9bf76]
 55 [-]: GETTABLE  R16 R6 K10   ; R16 := R6["tag"]
 56 [-]: CALL      R14 3 1      ; R14(R15,R16)
 57 [-]: JMP       63           ; PC := 63
 58 [-]: EQ        1 R0 K21     ; if R0 == nil then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: LT        0 R7 R0      ; if R7 >= R0 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: MOVE      R0 R7        ; R0 := R7
 63 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 64 [-]: EQ        1 R0 K21     ; if R0 == nil then PC := 74
 65 [-]: JMP       74           ; PC := 74
 66 [-]: LT        0 K5 R0      ; if 0.000000 >= R0 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: GETGLOBAL R14 K22      ; R14 := mTimerMgr
 69 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14[0xbd2e96ea]
 70 [-]: MOVE      R16 R0       ; R16 := R0
 71 [-]: GETUPVAL  R17 U1       ; R17 := U1
 72 [-]: LOADBOOL  R18 0 0      ; R18 := false
 73 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
 74 [-]: RETURN    R0 1         ; return 


; Function #213:
;
; Name:            
; Defined at line: 7148
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "Background::OnLoginDone()"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x0032441c
  5 [-]: SETTABLE  R0 K3 K4     ; R0["LoginDone"] := true
  6 [-]: GETGLOBAL R0 K5        ; R0 := 0x76ea806b
  7 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x3f3ae64c]
  8 [-]: LOADK     R2 0         ; R2 := 0.000000
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
 16 [-]: LOADK     R2 K8        ; R2 := "Background::OnLoginDone() playerProfile == nil"
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: SELF      R1 R0 K9     ; R2 := R0; R1 := R0[0xcac617c9]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: GETGLOBAL R2 K10       ; R2 := _T
 22 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["PreviousLoggedInAccountId"]
 23 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: GETGLOBAL R2 K10       ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["PreviousLoggedInAccountId"]
 27 [-]: EQ        1 R2 R1      ; if R2 == R1 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
 30 [-]: LOADK     R3 K13       ; R3 := "Logging in with a new user, disconnecting"
 31 [-]: CALL      R2 2 1       ; R2(R3)
 32 [-]: GETGLOBAL R2 K14       ; R2 := 0x34291f5c
 33 [-]: GETTABLE  R2 R2 K15    ; R2 := R2[0x8ee24660]
 34 [-]: LOADBOOL  R3 1 0       ; R3 := true
 35 [-]: CALL      R2 2 1       ; R2(R3)
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[0xc00479a5]
 39 [-]: CALL      R2 1 2       ; R2 := R2()
 40 [-]: SETUPVAL  R2 U0        ; U82 := R0
 41 [-]: GETGLOBAL R2 K10       ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["QueueNewWarRecap"]
 43 [-]: GETGLOBAL R3 K10       ; R3 := _T
 44 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["gActiveCameraSpot"]
 45 [-]: EQ        0 R3 K19     ; if R3 ~= "LoginNoSuit" then PC := 57
 46 [-]: JMP       57           ; PC := 57
 47 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
 48 [-]: LOADK     R4 K20       ; R4 := "Login: No Suit"
 49 [-]: CALL      R3 2 1       ; R3(R4)
 50 [-]: GETUPVAL  R3 U2        ; R3 := U2
 51 [-]: LOADK     R4 0         ; R4 := 0.750000
 52 [-]: LOADK     R5 0         ; R5 := 0.750000
 53 [-]: LOADK     R6 1         ; R6 := 1.000000
 54 [-]: GETUPVAL  R7 U3        ; R7 := U3
 55 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 56 [-]: JMP       87           ; PC := 87
 57 [-]: GETGLOBAL R3 K10       ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["HasDailyTribute"]
 59 [-]: TEST      R3 1         ; if R3 then PC := 73
 60 [-]: JMP       73           ; PC := 73
 61 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
 62 [-]: LOADK     R4 K22       ; R4 := "Login: No Daily"
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: GETUPVAL  R3 U3        ; R3 := U3
 65 [-]: LOADK     R4 0         ; R4 := 0.500000
 66 [-]: CALL      R3 2 1       ; R3(R4)
 67 [-]: GETGLOBAL R3 K23       ; R3 := mTimerMgr
 68 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xbd2e96ea]
 69 [-]: LOADK     R5 2         ; R5 := 2.000000
 70 [-]: CLOSURE   R6 0         ; R6 := closure(Function #213.1)
 71 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 72 [-]: JMP       87           ; PC := 87
 73 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
 74 [-]: LOADK     R4 K25       ; R4 := "Login: Daily"
 75 [-]: CALL      R3 2 1       ; R3(R4)
 76 [-]: LOADBOOL  R2 0 0       ; R2 := false
 77 [-]: GETGLOBAL R3 K10       ; R3 := _T
 78 [-]: SETTABLE  R3 K26 K27   ; R3["DailyTributeLoginState"] := 2.000000
 79 [-]: GETGLOBAL R3 K10       ; R3 := _T
 80 [-]: GETGLOBAL R4 K23       ; R4 := mTimerMgr
 81 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4[0xbd2e96ea]
 82 [-]: LOADK     R6 2         ; R6 := 2.000000
 83 [-]: CLOSURE   R7 1         ; R7 := closure(Function #213.2)
 84 [-]: LOADBOOL  R8 1 0       ; R8 := true
 85 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 86 [-]: SETTABLE  R3 K28 R4    ; R3["DailyTributeLoginTimerId"] := R4
 87 [-]: GETGLOBAL R3 K29       ; R3 := 0x9ba7909f
 88 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x7e17ae26]
 89 [-]: LOADK     R5 K31       ; R5 := "OnLoginComplete"
 90 [-]: LOADK     R6 K32       ; R6 := ""
 91 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 92 [-]: LOADBOOL  R3 0 0       ; R3 := false
 93 [-]: SETGLOBAL R3 K33       ; mNeedsToRespawnMenuAvatars := R3
 94 [-]: GETUPVAL  R3 U4        ; R3 := U4
 95 [-]: CALL      R3 1 1       ; R3()
 96 [-]: GETGLOBAL R3 K5        ; R3 := 0x76ea806b
 97 [-]: SELF      R3 R3 K34    ; R4 := R3; R3 := R3[0xa75c5137]
 98 [-]: LOADK     R5 K35       ; R5 := "OnAccountNameChangedCallback"
 99 [-]: CALL      R3 3 1       ; R3(R4,R5)
100 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
101 [-]: GETGLOBAL R4 K36       ; R4 := 0x25d99d89
102 [-]: CALL      R3 2 2       ; R3 := R3(R4)
103 [-]: TEST      R3 0         ; if not R3 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: RETURN    R0 1         ; return 
106 [-]: GETGLOBAL R3 K36       ; R3 := 0x25d99d89
107 [-]: SELF      R3 R3 K37    ; R4 := R3; R3 := R3[0x188fedab]
108 [-]: LOADK     R5 K38       ; R5 := "FriendRequestReceived"
109 [-]: CALL      R3 3 1       ; R3(R4,R5)
110 [-]: LOADBOOL  R3 1 0       ; R3 := true
111 [-]: SETGLOBAL R3 K39       ; mNewFriendRequests := R3
112 [-]: GETUPVAL  R3 U1        ; R3 := U1
113 [-]: GETTABLE  R3 R3 K40    ; R3 := R3[0x52fb05b3]
114 [-]: GETGLOBAL R4 K41       ; R4 := 0x7ed0a956
115 [-]: LOADK     R5 K42       ; R5 := "/Lotus/Types/Keys/OrokinMoonQuest/OrokinMoonQuestKeyChain"
116 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
117 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
118 [-]: TEST      R3 0         ; if not R3 then PC := 173
119 [-]: JMP       173          ; PC := 173
120 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
121 [-]: GETGLOBAL R5 K36       ; R5 := 0x25d99d89
122 [-]: SELF      R5 R5 K43    ; R6 := R5; R5 := R5[0xa340c0e2]
123 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
124 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
125 [-]: TEST      R4 0         ; if not R4 then PC := 173
126 [-]: JMP       173          ; PC := 173
127 [-]: GETGLOBAL R4 K29       ; R4 := 0x9ba7909f
128 [-]: SELF      R4 R4 K44    ; R5 := R4; R4 := R4[0xcfba257f]
129 [-]: GETGLOBAL R6 K45       ; R6 := 0xcffd3193
130 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
131 [-]: GETGLOBAL R5 K7        ; R5 := 0x7b998233
132 [-]: MOVE      R6 R4        ; R6 := R4
133 [-]: CALL      R5 2 2       ; R5 := R5(R6)
134 [-]: TEST      R5 1         ; if R5 then PC := 173
135 [-]: JMP       173          ; PC := 173
136 [-]: SELF      R5 R4 K46    ; R6 := R4; R5 := R4[0xe4162eed]
137 [-]: LOADK     R7 K47       ; R7 := "SetWayInMovie"
138 [-]: LOADK     R8 K48       ; R8 := "true"
139 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
140 [-]: NEWTABLE  R5 0 5       ; R5 := {}
141 [-]: SETTABLE  R5 K49 K50   ; R5["NARAMON"] := 1.000000
142 [-]: SETTABLE  R5 K51 K27   ; R5["ZENURIK"] := 2.000000
143 [-]: SETTABLE  R5 K52 K53   ; R5["VAZARIN"] := 3.000000
144 [-]: SETTABLE  R5 K54 K55   ; R5["UNAIRU"] := 4.000000
145 [-]: SETTABLE  R5 K56 K57   ; R5["MADURAI"] := 5.000000
146 [-]: GETGLOBAL R6 K10       ; R6 := _T
147 [-]: GETTABLE  R6 R6 K58    ; R6 := R6[0xd73ffe73]
148 [-]: MOVE      R7 R5        ; R7 := R5
149 [-]: CALL      R6 2 1       ; R6(R7)
150 [-]: NEWTABLE  R6 0 0       ; R6 := {}
151 [-]: GETTABLE  R7 R5 K49    ; R7 := R5["NARAMON"]
152 [-]: GETTABLE  R8 R5 K56    ; R8 := R5["MADURAI"]
153 [-]: LOADK     R9 1         ; R9 := 1.000000
154 [-]: FORPREP   R7 162       ; R7 -= R9; PC := 162
155 [-]: GETGLOBAL R11 K59      ; R11 := 0x33bdd652
156 [-]: GETTABLE  R11 R11 K60  ; R11 := R11[0x23d5322f]
157 [-]: MOVE      R12 R6       ; R12 := R6
158 [-]: NEWTABLE  R13 0 2      ; R13 := {}
159 [-]: SETTABLE  R13 K61 R10  ; R13["Clan"] := R10
160 [-]: SETTABLE  R13 K62 K63  ; R13["Count"] := 0.000000
161 [-]: CALL      R11 3 1      ; R11(R12,R13)
162 [-]: FORLOOP   R7 155       ; R7 += R9; if R7 <= R8 then begin PC := 155; R10 := R7 end
163 [-]: GETGLOBAL R11 K7       ; R11 := 0x7b998233
164 [-]: GETGLOBAL R12 K10      ; R12 := _T
165 [-]: GETTABLE  R12 R12 K64  ; R12 := R12["SetCurrentResults"]
166 [-]: CALL      R11 2 2      ; R11 := R11(R12)
167 [-]: TEST      R11 1        ; if R11 then PC := 173
168 [-]: JMP       173          ; PC := 173
169 [-]: GETGLOBAL R11 K10      ; R11 := _T
170 [-]: GETTABLE  R11 R11 K65  ; R11 := R11[0xce3bbe2f]
171 [-]: MOVE      R12 R6       ; R12 := R6
172 [-]: CALL      R11 2 1      ; R11(R12)
173 [-]: GETGLOBAL R11 K36      ; R11 := 0x25d99d89
174 [-]: SELF      R11 R11 K66  ; R12 := R11; R11 := R11[0x25a6e75e]
175 [-]: CALL      R11 2 2      ; R11 := R11(R12)
176 [-]: SELF      R11 R11 K67  ; R12 := R11; R11 := R11[0x8e7c3b5e]
177 [-]: CALL      R11 2 2      ; R11 := R11(R12)
178 [-]: GETGLOBAL R12 K7       ; R12 := 0x7b998233
179 [-]: MOVE      R13 R11      ; R13 := R11
180 [-]: CALL      R12 2 2      ; R12 := R12(R13)
181 [-]: TEST      R12 1        ; if R12 then PC := 199
182 [-]: JMP       199          ; PC := 199
183 [-]: GETGLOBAL R12 K10      ; R12 := _T
184 [-]: GETTABLE  R12 R12 K68  ; R12 := R12["ActiveQuestLoaded"]
185 [-]: TEST      R12 1        ; if R12 then PC := 199
186 [-]: JMP       199          ; PC := 199
187 [-]: GETGLOBAL R12 K7       ; R12 := 0x7b998233
188 [-]: GETGLOBAL R13 K69      ; R13 := 0xbe190284
189 [-]: CALL      R12 2 2      ; R12 := R12(R13)
190 [-]: TEST      R12 1        ; if R12 then PC := 205
191 [-]: JMP       205          ; PC := 205
192 [-]: GETGLOBAL R12 K69      ; R12 := 0xbe190284
193 [-]: SELF      R12 R12 K70  ; R13 := R12; R12 := R12[0x8e07e77f]
194 [-]: SELF      R14 R11 K71  ; R15 := R11; R14 := R11[0xed4e0128]
195 [-]: CALL      R14 2 2      ; R14 := R14(R15)
196 [-]: LOADK     R15 K68      ; R15 := "ActiveQuestLoaded"
197 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
198 [-]: JMP       205          ; PC := 205
199 [-]: GETGLOBAL R12 K10      ; R12 := _T
200 [-]: SETTABLE  R12 K68 K4   ; R12["ActiveQuestLoaded"] := true
201 [-]: GETUPVAL  R12 U5       ; R12 := U5
202 [-]: CALL      R12 1 3      ; R12,R13 := R12()
203 [-]: NOT       R14 R13      ; R14 := not R13
204 [-]: SETGLOBAL R14 K72      ; mQuestsNeedChecking := R14
205 [-]: GETUPVAL  R14 U6       ; R14 := U6
206 [-]: GETTABLE  R14 R14 K73  ; R14 := R14["mForceRefreshWorldStatePostLogin"]
207 [-]: TEST      R14 0        ; if not R14 then PC := 211
208 [-]: JMP       211          ; PC := 211
209 [-]: GETUPVAL  R14 U7       ; R14 := U7
210 [-]: CALL      R14 1 1      ; R14()
211 [-]: GETUPVAL  R14 U8       ; R14 := U8
212 [-]: GETUPVAL  R15 U6       ; R15 := U6
213 [-]: GETTABLE  R15 R15 K73  ; R15 := R15["mForceRefreshWorldStatePostLogin"]
214 [-]: CALL      R14 2 1      ; R14(R15)
215 [-]: GETUPVAL  R14 U6       ; R14 := U6
216 [-]: SETTABLE  R14 K73 K74  ; R14["mForceRefreshWorldStatePostLogin"] := false
217 [-]: GETGLOBAL R14 K36      ; R14 := 0x25d99d89
218 [-]: SELF      R14 R14 K75  ; R15 := R14; R14 := R14[0x1bddce2c]
219 [-]: LOADK     R16 K76      ; R16 := "OnSyncTwitchDrops"
220 [-]: CALL      R14 3 1      ; R14(R15,R16)
221 [-]: GETGLOBAL R14 K36      ; R14 := 0x25d99d89
222 [-]: SELF      R14 R14 K77  ; R15 := R14; R14 := R14[0x5826c749]
223 [-]: LOADK     R16 K78      ; R16 := "OnSyncAmazonEntitlemments"
224 [-]: CALL      R14 3 1      ; R14(R15,R16)
225 [-]: GETUPVAL  R14 U9       ; R14 := U9
226 [-]: CALL      R14 1 1      ; R14()
227 [-]: GETUPVAL  R14 U10      ; R14 := U10
228 [-]: CALL      R14 1 1      ; R14()
229 [-]: GETGLOBAL R14 K79      ; R14 := mFoundryNotification
230 [-]: SETTABLE  R14 K80 K4   ; R14["Refresh"] := true
231 [-]: GETGLOBAL R14 K10      ; R14 := _T
232 [-]: SETTABLE  R14 K81 K74  ; R14["syncingInventory"] := false
233 [-]: GETUPVAL  R14 U11      ; R14 := U11
234 [-]: GETGLOBAL R15 K36      ; R15 := 0x25d99d89
235 [-]: CALL      R14 2 1      ; R14(R15)
236 [-]: GETGLOBAL R14 K2       ; R14 := 0x0032441c
237 [-]: GETTABLE  R14 R14 K82  ; R14 := R14["checkAutoLaunchMission"]
238 [-]: EQ        1 R14 K74    ; if R14 == false then PC := 250
239 [-]: JMP       250          ; PC := 250
240 [-]: GETGLOBAL R14 K29      ; R14 := 0x9ba7909f
241 [-]: SELF      R14 R14 K83  ; R15 := R14; R14 := R14[0x0b1c45c5]
242 [-]: LOADK     R16 K84      ; R16 := "LotusGameRules.AutoLaunchMission"
243 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
244 [-]: EQ        1 R14 K32    ; if R14 == "" then PC := 250
245 [-]: JMP       250          ; PC := 250
246 [-]: SETUPVAL  R14 U12      ; U82 := R12
247 [-]: LOADBOOL  R2 0 0       ; R2 := false
248 [-]: GETGLOBAL R15 K2       ; R15 := 0x0032441c
249 [-]: SETTABLE  R15 K82 K74  ; R15["checkAutoLaunchMission"] := false
250 [-]: TEST      R2 0         ; if not R2 then PC := 263
251 [-]: JMP       263          ; PC := 263
252 [-]: GETGLOBAL R15 K10      ; R15 := _T
253 [-]: SETTABLE  R15 K17 K12  ; R15["QueueNewWarRecap"] := nil
254 [-]: GETGLOBAL R15 K7       ; R15 := 0x7b998233
255 [-]: GETGLOBAL R16 K85      ; R16 := 0x56df9f48
256 [-]: CALL      R15 2 2      ; R15 := R15(R16)
257 [-]: TEST      R15 1        ; if R15 then PC := 263
258 [-]: JMP       263          ; PC := 263
259 [-]: GETGLOBAL R15 K29      ; R15 := 0x9ba7909f
260 [-]: SELF      R15 R15 K86  ; R16 := R15; R15 := R15[0x6dd7aa66]
261 [-]: GETGLOBAL R17 K85      ; R17 := 0x56df9f48
262 [-]: CALL      R15 3 1      ; R15(R16,R17)
263 [-]: GETUPVAL  R15 U1       ; R15 := U1
264 [-]: GETTABLE  R15 R15 K87  ; R15 := R15[0xc14d48af]
265 [-]: CALL      R15 1 2      ; R15 := R15()
266 [-]: TEST      R15 0        ; if not R15 then PC := 298
267 [-]: JMP       298          ; PC := 298
268 [-]: GETGLOBAL R16 K7       ; R16 := 0x7b998233
269 [-]: GETGLOBAL R17 K88      ; R17 := 0xa94df70b
270 [-]: CALL      R16 2 2      ; R16 := R16(R17)
271 [-]: TEST      R16 1        ; if R16 then PC := 298
272 [-]: JMP       298          ; PC := 298
273 [-]: GETGLOBAL R16 K7       ; R16 := 0x7b998233
274 [-]: GETGLOBAL R17 K36      ; R17 := 0x25d99d89
275 [-]: CALL      R16 2 2      ; R16 := R16(R17)
276 [-]: TEST      R16 1        ; if R16 then PC := 298
277 [-]: JMP       298          ; PC := 298
278 [-]: GETGLOBAL R16 K36      ; R16 := 0x25d99d89
279 [-]: SELF      R16 R16 K89  ; R17 := R16; R16 := R16[0xcd57f819]
280 [-]: LOADBOOL  R18 1 0      ; R18 := true
281 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
282 [-]: GETTABLE  R16 R16 K90  ; R16 := R16["mBootLocation"]
283 [-]: EQ        0 R16 K50    ; if R16 ~= 1.000000 then PC := 292
284 [-]: JMP       292          ; PC := 292
285 [-]: GETGLOBAL R17 K88      ; R17 := 0xa94df70b
286 [-]: SELF      R17 R17 K92  ; R18 := R17; R17 := R17[0x2b0141b8]
287 [-]: GETGLOBAL R19 K41      ; R19 := 0x7ed0a956
288 [-]: LOADK     R20 K93      ; R20 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/TNWDrifterCampMain"
289 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
290 [-]: CALL      R17 0 1      ; R17(R18,...)
291 [-]: JMP       298          ; PC := 298
292 [-]: GETGLOBAL R17 K88      ; R17 := 0xa94df70b
293 [-]: SELF      R17 R17 K92  ; R18 := R17; R17 := R17[0x2b0141b8]
294 [-]: GETGLOBAL R19 K41      ; R19 := 0x7ed0a956
295 [-]: LOADK     R20 K94      ; R20 := "/Lotus/Levels/Proc/PlayerShip"
296 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
297 [-]: CALL      R17 0 1      ; R17(R18,...)
298 [-]: RETURN    R0 1         ; return 


; Function #213.1:
;
; Name:            
; Defined at line: 7176
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMenuSuitAvatar
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R0 K1        ; R0 := mMenuSuitAvatar
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x044b7be8]
  8 [-]: LOADBOOL  R2 0 0       ; R2 := false
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0x3d106989
 11 [-]: LOADK     R1 K4        ; R1 := "Login: Setup 1 Done"
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: GETGLOBAL R0 K3        ; R0 := 0x3d106989
 14 [-]: LOADK     R1 K5        ; R1 := "Login: Setup 2 Done"
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #213.2:
;
; Name:            
; Defined at line: 7188
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HasDailyTribute"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["DailyTributeLoginState"]
  7 [-]: EQ        0 R0 K3      ; if R0 ~= 2.000000 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: SETTABLE  R0 K2 K4     ; R0["DailyTributeLoginState"] := 1.000000
 11 [-]: JMP       56           ; PC := 56
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["DailyTributeLoginState"]
 14 [-]: EQ        0 R0 K4      ; if R0 ~= 1.000000 then PC := 56
 15 [-]: JMP       56           ; PC := 56
 16 [-]: GETGLOBAL R0 K5        ; R0 := 0x7b998233
 17 [-]: GETGLOBAL R1 K6        ; R1 := mMenuSuitAvatar
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: TEST      R0 1         ; if R0 then PC := 38
 20 [-]: JMP       38           ; PC := 38
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: SETTABLE  R0 K2 K7     ; R0["DailyTributeLoginState"] := nil
 23 [-]: GETGLOBAL R0 K6        ; R0 := mMenuSuitAvatar
 24 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x044b7be8]
 25 [-]: LOADBOOL  R2 0 0       ; R2 := false
 26 [-]: CALL      R0 3 1       ; R0(R1,R2)
 27 [-]: GETGLOBAL R0 K9        ; R0 := mTimerMgr
 28 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x775c858b]
 29 [-]: GETGLOBAL R2 K0        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["DailyTributeLoginTimerId"]
 31 [-]: CALL      R0 3 1       ; R0(R1,R2)
 32 [-]: GETGLOBAL R0 K0        ; R0 := _T
 33 [-]: SETTABLE  R0 K11 K7    ; R0["DailyTributeLoginTimerId"] := nil
 34 [-]: GETGLOBAL R0 K12       ; R0 := 0x3d106989
 35 [-]: LOADK     R1 K13       ; R1 := "Login: Daily Done"
 36 [-]: CALL      R0 2 1       ; R0(R1)
 37 [-]: JMP       41           ; PC := 41
 38 [-]: GETGLOBAL R0 K12       ; R0 := 0x3d106989
 39 [-]: LOADK     R1 K14       ; R1 := "Login: Setup missing avatar"
 40 [-]: CALL      R0 2 1       ; R0(R1)
 41 [-]: GETGLOBAL R0 K0        ; R0 := _T
 42 [-]: GETTABLE  R0 R0 K15    ; R0 := R0["QueueNewWarRecap"]
 43 [-]: TEST      R0 0         ; if not R0 then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: GETGLOBAL R0 K0        ; R0 := _T
 46 [-]: SETTABLE  R0 K15 K7    ; R0["QueueNewWarRecap"] := nil
 47 [-]: GETGLOBAL R0 K5        ; R0 := 0x7b998233
 48 [-]: GETGLOBAL R1 K16       ; R1 := 0x56df9f48
 49 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 50 [-]: TEST      R0 1         ; if R0 then PC := 56
 51 [-]: JMP       56           ; PC := 56
 52 [-]: GETGLOBAL R0 K17       ; R0 := 0x9ba7909f
 53 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0[0x6dd7aa66]
 54 [-]: GETGLOBAL R2 K16       ; R2 := 0x56df9f48
 55 [-]: CALL      R0 3 1       ; R0(R1,R2)
 56 [-]: RETURN    R0 1         ; return 


; Function #214:
;
; Name:            
; Defined at line: 7308
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["InviteQueued"] := 5.000000
  3 [-]: RETURN    R0 1         ; return 


; Function #215:
;
; Name:            
; Defined at line: 7312
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: LOADK     R2 K1        ; R2 := "DoLogoff"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: LOADNIL   R1 R1        ; R1 := nil
  5 [-]: SETGLOBAL R1 K2        ; connectionFailurePopup := R1
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: EQ        1 R0 K3      ; if R0 == "true" then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 10
 10 [-]: LOADBOOL  R2 1 0       ; R2 := true
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #216:
;
; Name:            
; Defined at line: 7318
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := connectionFailurePopup
  2 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 34
  3 [-]: JMP       34           ; PC := 34
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x76ea806b
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x8792aaab]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 34
  8 [-]: JMP       34           ; PC := 34
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xd342d13d]
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: TEST      R0 0         ; if not R0 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETGLOBAL R0 K5        ; R0 := 0x9ba7909f
 15 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x5374b92e]
 16 [-]: GETGLOBAL R2 K7        ; R2 := 0xe1380899
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: TEST      R0 1         ; if R0 then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETGLOBAL R1 K8        ; R1 := 0x34291f5c
 21 [-]: GETTABLE  R1 R1 K9     ; R1 := R1[0x056bfe8b]
 22 [-]: CALL      R1 1 2       ; R1 := R1()
 23 [-]: TEST      R1 0         ; if not R1 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R1 K2        ; R1 := 0x76ea806b
 26 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x2e5dbf9d]
 27 [-]: CALL      R1 2 1       ; R1(R2)
 28 [-]: GETUPVAL  R1 U1        ; R1 := U1
 29 [-]: GETTABLE  R1 R1 K11    ; R1 := R1[0xe0cba3ca]
 30 [-]: LOADK     R2 K12       ; R2 := "/Lotus/Language/Menu/BackgroundError_FailedToConnect"
 31 [-]: LOADK     R3 K13       ; R3 := "DoLogoff"
 32 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 33 [-]: SETGLOBAL R1 K0        ; connectionFailurePopup := R1
 34 [-]: RETURN    R0 1         ; return 


; Function #217:
;
; Name:            
; Defined at line: 7330
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0x056bfe8b]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 1         ; if R1 then PC := 129
  5 [-]: JMP       129          ; PC := 129
  6 [-]: GETGLOBAL R1 K2        ; R1 := connectionFailurePopup
  7 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 129
  8 [-]: JMP       129          ; PC := 129
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x76ea806b
 10 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x8792aaab]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 129
 13 [-]: JMP       129          ; PC := 129
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0xa7a2e381]
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 123
 18 [-]: JMP       123          ; PC := 123
 19 [-]: GETGLOBAL R1 K7        ; R1 := 0x7f5022cf
 20 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0xa5c556b9]
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: LOADK     R3 K9        ; R3 := "|"
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: TEST      R1 0         ; if not R1 then PC := 123
 25 [-]: JMP       123          ; PC := 123
 26 [-]: GETGLOBAL R2 K7        ; R2 := 0x7f5022cf
 27 [-]: GETTABLE  R2 R2 K10    ; R2 := R2[0x1a94c9cc]
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: ADD       R4 R1 K11    ; R4 := R1 + 1.000000
 30 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 31 [-]: GETGLOBAL R3 K12       ; R3 := cjson
 32 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0x7ab914d8]
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 123
 36 [-]: JMP       123          ; PC := 123
 37 [-]: GETTABLE  R4 R3 K14    ; R4 := R3["SuspendDate"]
 38 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 70
 39 [-]: JMP       70           ; PC := 70
 40 [-]: GETGLOBAL R4 K15       ; R4 := 0xae91e43b
 41 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x42b04007]
 42 [-]: LOADK     R6 K17       ; R6 := "/Lotus/Language/Launcher/LoginFailedSuspended"
 43 [-]: LOADBOOL  R7 1 0       ; R7 := true
 44 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 45 [-]: LOADK     R5 K18       ; R5 := "/Lotus/Language/Launcher/SuspendReason_"
 46 [-]: GETTABLE  R6 R3 K19    ; R6 := R3["SuspendReason"]
 47 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 48 [-]: GETGLOBAL R6 K15       ; R6 := 0xae91e43b
 49 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0x42b04007]
 50 [-]: MOVE      R8 R5        ; R8 := R5
 51 [-]: LOADBOOL  R9 1 0       ; R9 := true
 52 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 53 [-]: EQ        0 R6 R5      ; if R6 ~= R5 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: GETTABLE  R6 R3 K19    ; R6 := R3["SuspendReason"]
 56 [-]: GETGLOBAL R7 K7        ; R7 := 0x7f5022cf
 57 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[0xe8072ded]
 58 [-]: MOVE      R8 R4        ; R8 := R4
 59 [-]: GETTABLE  R9 R3 K14    ; R9 := R3["SuspendDate"]
 60 [-]: MOVE      R10 R6       ; R10 := R6
 61 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 62 [-]: GETUPVAL  R8 U0        ; R8 := U0
 63 [-]: GETTABLE  R8 R8 K21    ; R8 := R8[0xe0cba3ca]
 64 [-]: MOVE      R9 R7        ; R9 := R7
 65 [-]: LOADK     R10 K22      ; R10 := "OnFcmKickOut"
 66 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 67 [-]: SETGLOBAL R8 K2        ; connectionFailurePopup := R8
 68 [-]: RETURN    R0 1         ; return 
 69 [-]: JMP       123          ; PC := 123
 70 [-]: GETTABLE  R8 R3 K23    ; R8 := R3["ChatBanDate"]
 71 [-]: EQ        1 R8 K3      ; if R8 == nil then PC := 91
 72 [-]: JMP       91           ; PC := 91
 73 [-]: GETGLOBAL R8 K15       ; R8 := 0xae91e43b
 74 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x42b04007]
 75 [-]: LOADK     R10 K24      ; R10 := "/Lotus/Language/Changyou/WeGameChatBan"
 76 [-]: LOADBOOL  R11 0 0      ; R11 := false
 77 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 78 [-]: GETTABLE  R13 R3 K23   ; R13 := R3["ChatBanDate"]
 79 [-]: SETTABLE  R12 K25 R13  ; R12["BAN_TIME"] := R13
 80 [-]: GETTABLE  R13 R3 K27   ; R13 := R3["ChatBannedReason"]
 81 [-]: SETTABLE  R12 K26 R13  ; R12["BAN_REASON"] := R13
 82 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 83 [-]: GETUPVAL  R9 U0        ; R9 := U0
 84 [-]: GETTABLE  R9 R9 K21    ; R9 := R9[0xe0cba3ca]
 85 [-]: MOVE      R10 R8       ; R10 := R8
 86 [-]: LOADK     R11 K28      ; R11 := "DoLogoff"
 87 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 88 [-]: SETGLOBAL R9 K2        ; connectionFailurePopup := R9
 89 [-]: RETURN    R0 1         ; return 
 90 [-]: JMP       123          ; PC := 123
 91 [-]: GETTABLE  R9 R3 K29    ; R9 := R3["KickReason"]
 92 [-]: EQ        1 R9 K3      ; if R9 == nil then PC := 110
 93 [-]: JMP       110          ; PC := 110
 94 [-]: GETGLOBAL R9 K15       ; R9 := 0xae91e43b
 95 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x42b04007]
 96 [-]: LOADK     R11 K30      ; R11 := "/Lotus/Language/Changyou/WeGameKick"
 97 [-]: LOADBOOL  R12 0 0      ; R12 := false
 98 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 99 [-]: GETTABLE  R14 R3 K29   ; R14 := R3["KickReason"]
100 [-]: SETTABLE  R13 K31 R14  ; R13["KICK_REASON"] := R14
101 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
102 [-]: GETUPVAL  R10 U0       ; R10 := U0
103 [-]: GETTABLE  R10 R10 K21  ; R10 := R10[0xe0cba3ca]
104 [-]: MOVE      R11 R9       ; R11 := R9
105 [-]: LOADK     R12 K22      ; R12 := "OnFcmKickOut"
106 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
107 [-]: SETGLOBAL R10 K2       ; connectionFailurePopup := R10
108 [-]: RETURN    R0 1         ; return 
109 [-]: JMP       123          ; PC := 123
110 [-]: GETTABLE  R10 R3 K32   ; R10 := R3["WarningReason"]
111 [-]: EQ        1 R10 K3     ; if R10 == nil then PC := 123
112 [-]: JMP       123          ; PC := 123
113 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
114 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10[0x42b04007]
115 [-]: GETTABLE  R12 R3 K32   ; R12 := R3["WarningReason"]
116 [-]: LOADBOOL  R13 0 0      ; R13 := false
117 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
118 [-]: GETUPVAL  R11 U0       ; R11 := U0
119 [-]: GETTABLE  R11 R11 K21  ; R11 := R11[0xe0cba3ca]
120 [-]: MOVE      R12 R10      ; R12 := R10
121 [-]: CALL      R11 2 1      ; R11(R12)
122 [-]: RETURN    R0 1         ; return 
123 [-]: GETUPVAL  R11 U0       ; R11 := U0
124 [-]: GETTABLE  R11 R11 K21  ; R11 := R11[0xe0cba3ca]
125 [-]: LOADK     R12 K33      ; R12 := "/Lotus/Language/Menu/BackgroundError_FailedToConnect"
126 [-]: LOADK     R13 K28      ; R13 := "DoLogoff"
127 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
128 [-]: SETGLOBAL R11 K2       ; connectionFailurePopup := R11
129 [-]: RETURN    R0 1         ; return 


; Function #218:
;
; Name:            
; Defined at line: 7373
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x3d106989
  2 [-]: LOADK     R1 K1        ; R1 := "Background.lua: OnUserChangedCallback"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K2        ; R0 := 0x9ba7909f
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x7e17ae26]
  6 [-]: LOADK     R2 K4        ; R2 := "OnUserChangedFunction"
  7 [-]: LOADK     R3 K5        ; R3 := ""
  8 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  9 [-]: GETGLOBAL R0 K6        ; R0 := 0xbe190284
 10 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K8     ; R1 := R1[0xd342d13d]
 17 [-]: CALL      R1 1 2       ; R1 := R1()
 18 [-]: TEST      R1 1         ; if R1 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETGLOBAL R1 K6        ; R1 := 0xbe190284
 21 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xf2deaf69]
 22 [-]: GETGLOBAL R3 K10       ; R3 := gLotusHubGameRulesType
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 26
 26 [-]: LOADBOOL  R1 1 0       ; R1 := true
 27 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
 28 [-]: LOADK     R3 K11       ; R3 := "OnUserChangedCallback"
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: GETGLOBAL R2 K12       ; R2 := 0x0032441c
 31 [-]: SETTABLE  R2 K13 K14   ; R2["JunctionComplete"] := nil
 32 [-]: GETGLOBAL R2 K15       ; R2 := 0x76ea806b
 33 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x8792aaab]
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 0         ; if not R2 then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: TEST      R1 1         ; if R1 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: LOADNIL   R2 R2        ; R2 := nil
 40 [-]: SETGLOBAL R2 K17       ; connectionFailurePopup := R2
 41 [-]: GETUPVAL  R2 U1        ; R2 := U1
 42 [-]: CALL      R2 1 1       ; R2()
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R2 K18       ; R2 := 0x34291f5c
 45 [-]: GETTABLE  R2 R2 K19    ; R2 := R2[0x8ee24660]
 46 [-]: LOADBOOL  R3 1 0       ; R3 := true
 47 [-]: CALL      R2 2 1       ; R2(R3)
 48 [-]: RETURN    R0 1         ; return 


; Function #219:
;
; Name:            
; Defined at line: 7395
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: SETUPVAL  R0 U0        ; U82 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gDialogDeviceID"]
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: GETGLOBAL R2 K0        ; R2 := _T
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gDialogDeviceID"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R0 K3        ; R0 := ""
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0x89326c93
 13 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x785f144d]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x89326c93
 18 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xcf9f3db6]
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: CALL      R1 3 1       ; R1(R2,R3)
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R1 K4        ; R1 := 0x89326c93
 23 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xca216d11]
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: LOADBOOL  R4 0 0       ; R4 := false
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #220:
;
; Name:            
; Defined at line: 7409
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: LOADBOOL  R0 1 0       ; R0 := true
  5 [-]: SETUPVAL  R0 U0        ; U82 := R0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe0cba3ca]
  8 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/ConnectController_XBone"
  9 [-]: LOADK     R2 K2        ; R2 := "OnConfirmation"
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #221:
;
; Name:            
; Defined at line: 7416
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: LOADBOOL  R0 1 0       ; R0 := true
  5 [-]: SETUPVAL  R0 U0        ; U82 := R0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0xe0cba3ca]
  8 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/ConnectController_Switch"
  9 [-]: LOADK     R2 K2        ; R2 := "OnConfirmation"
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #222:
;
; Name:            
; Defined at line: 7423
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := connectionFailurePopup
  2 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0xe0cba3ca]
  6 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/Menu/ConnectionError_LoginExpired"
  7 [-]: LOADK     R4 K4        ; R4 := "DoLogoff"
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #223:
;
; Name:            
; Defined at line: 7429
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #224:
;
; Name:            
; Defined at line: 7432
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x900feed6
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xe4162eed]
 11 [-]: LOADK     R3 K5        ; R3 := "OnOnlinePlayTypeChanged"
 12 [-]: LOADK     R4 K6        ; R4 := ""
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: RETURN    R0 1         ; return 


; Function #225:
;
; Name:            
; Defined at line: 7439
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbcfb64ab]
  3 [-]: GETGLOBAL R3 K2        ; R3 := movies
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MissionDeck"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xe4162eed]
 12 [-]: LOADK     R4 K6        ; R4 := "GlobalSelectRegion"
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #226:
;
; Name:            
; Defined at line: 7446
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x8024bd2d]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: GETGLOBAL R0 K1        ; R0 := _T
  5 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Jukebox"]
  6 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K4     ; R0 := R0[0xfce6fd2b]
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: GETGLOBAL R0 K1        ; R0 := _T
 13 [-]: SETTABLE  R0 K6 K7     ; R0["IntelIconCacheFlushed"] := true
 14 [-]: RETURN    R0 1         ; return 


; Function #227:
;
; Name:            
; Defined at line: 7454
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #228:
;
; Name:            
; Defined at line: 7458
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: LOADK     R3 0         ; R3 := 0.000000
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 25
  5 [-]: JMP       25           ; PC := 25
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xe0cba3ca]
  8 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Language/UiElements/ResetShipDecosSuccess"
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: GETUPVAL  R2 U2        ; R2 := U2
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2[0x23ddc82a]
 12 [-]: CALL      R2 1 2       ; R2 := R2()
 13 [-]: TEST      R2 0         ; if not R2 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETUPVAL  R2 U3        ; R2 := U3
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: GETUPVAL  R4 U4        ; R4 := U4
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: GETUPVAL  R4 U5        ; R4 := U5
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[0xe0cba3ca]
 27 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/UiElements/ResetShipDecosFail"
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #229:
;
; Name:            
; Defined at line: 7472
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0[0xeee7057a]
  8 [-]: CALL      R0 1 4       ; R0,R1,R2 := R0()
  9 [-]: GETUPVAL  R3 U1        ; R3 := U1
 10 [-]: LOADK     R4 2         ; R4 := 2.000000
 11 [-]: CALL      R3 2 1       ; R3(R4)
 12 [-]: GETGLOBAL R3 K1        ; R3 := 0xbe190284
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xba3ffded]
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: MOVE      R6 R2        ; R6 := R2
 16 [-]: LOADK     R7 K4        ; R7 := "OnShipDecosReset"
 17 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 18 [-]: RETURN    R0 1         ; return 


; Function #230:
;
; Name:            
; Defined at line: 7480
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xbe190284
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf2deaf69]
  3 [-]: GETGLOBAL R4 K2        ; R4 := gLotusAttractModeGameRulesType
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: TEST      R2 1         ; if R2 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0xbe190284
  8 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xf2deaf69]
  9 [-]: GETGLOBAL R4 K3        ; R4 := gLotusPhotoBoothGameRulesType
 10 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 11 [-]: TEST      R2 1         ; if R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["DecoArea"]
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["DECO_AREA_APARTMENT"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETGLOBAL R2 K6        ; R2 := _T
 20 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["ShipDecos"]
 21 [-]: EQ        0 R2 K8      ; if R2 ~= nil then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETGLOBAL R2 K6        ; R2 := _T
 24 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 25 [-]: SETTABLE  R2 K7 R3     ; R2["ShipDecos"] := R3
 26 [-]: EQ        1 R0 K8      ; if R0 == nil then PC := 158
 27 [-]: JMP       158          ; PC := 158
 28 [-]: EQ        1 R0 K9      ; if R0 == "" then PC := 158
 29 [-]: JMP       158          ; PC := 158
 30 [-]: GETGLOBAL R2 K10       ; R2 := cjson
 31 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0x7ab914d8]
 32 [-]: MOVE      R3 R0        ; R3 := R0
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 35 [-]: GETTABLE  R4 R2 K12    ; R4 := R2["RemovedDecos"]
 36 [-]: EQ        1 R4 K8      ; if R4 == nil then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: GETTABLE  R3 R2 K12    ; R3 := R2["RemovedDecos"]
 39 [-]: JMP       100          ; PC := 100
 40 [-]: GETTABLE  R4 R2 K13    ; R4 := R2["DecoId"]
 41 [-]: EQ        1 R4 K8      ; if R4 == nil then PC := 48
 42 [-]: JMP       48           ; PC := 48
 43 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 44 [-]: GETTABLE  R5 R2 K13    ; R5 := R2["DecoId"]
 45 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 46 [-]: MOVE      R3 R4        ; R3 := R4
 47 [-]: JMP       100          ; PC := 100
 48 [-]: GETTABLE  R4 R2 K14    ; R4 := R2["ResetRoom"]
 49 [-]: EQ        1 R4 K8      ; if R4 == nil then PC := 100
 50 [-]: JMP       100          ; PC := 100
 51 [-]: GETGLOBAL R4 K15       ; R4 := 0x25d99d89
 52 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x911c6241]
 53 [-]: LOADBOOL  R6 1 0       ; R6 := true
 54 [-]: GETTABLE  R7 R2 K17    ; R7 := R2["IsApartment"]
 55 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 56 [-]: LOADK     R5 1         ; R5 := 1.000000
 57 [-]: LEN       R6 R4        ; R6 := # R4
 58 [-]: LOADK     R7 1         ; R7 := 1.000000
 59 [-]: FORPREP   R5 82        ; R5 -= R7; PC := 82
 60 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 61 [-]: GETTABLE  R10 R9 K18   ; R10 := R9["mName"]
 62 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10[0x6d604ba7]
 63 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 64 [-]: GETTABLE  R11 R2 K14   ; R11 := R2["ResetRoom"]
 65 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 68 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["mPlacedDecos"]
 69 [-]: LOADK     R11 1        ; R11 := 1.000000
 70 [-]: LEN       R12 R10      ; R12 := # R10
 71 [-]: LOADK     R13 1        ; R13 := 1.000000
 72 [-]: FORPREP   R11 80       ; R11 -= R13; PC := 80
 73 [-]: GETGLOBAL R15 K21      ; R15 := 0x33bdd652
 74 [-]: GETTABLE  R15 R15 K22  ; R15 := R15[0x23d5322f]
 75 [-]: MOVE      R16 R3       ; R16 := R3
 76 [-]: GETTABLE  R17 R10 R14  ; R17 := R10[R14]
 77 [-]: SELF      R17 R17 K23  ; R18 := R17; R17 := R17[0xf537cfc7]
 78 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
 79 [-]: CALL      R15 0 1      ; R15(R16,...)
 80 [-]: FORLOOP   R11 73       ; R11 += R13; if R11 <= R12 then begin PC := 73; R14 := R11 end
 81 [-]: JMP       83           ; PC := 83
 82 [-]: FORLOOP   R5 60        ; R5 += R7; if R5 <= R6 then begin PC := 60; R8 := R5 end
 83 [-]: GETTABLE  R15 R2 K24   ; R15 := R2["ClaimedDecos"]
 84 [-]: EQ        1 R15 K8     ; if R15 == nil then PC := 100
 85 [-]: JMP       100          ; PC := 100
 86 [-]: LOADK     R15 1        ; R15 := 1.000000
 87 [-]: GETTABLE  R16 R2 K24   ; R16 := R2["ClaimedDecos"]
 88 [-]: LEN       R16 R16      ; R16 := # R16
 89 [-]: LOADK     R17 1        ; R17 := 1.000000
 90 [-]: FORPREP   R15 99       ; R15 -= R17; PC := 99
 91 [-]: GETGLOBAL R19 K21      ; R19 := 0x33bdd652
 92 [-]: GETTABLE  R19 R19 K22  ; R19 := R19[0x23d5322f]
 93 [-]: MOVE      R20 R3       ; R20 := R3
 94 [-]: GETTABLE  R21 R2 K24   ; R21 := R2["ClaimedDecos"]
 95 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
 96 [-]: GETTABLE  R21 R21 K25  ; R21 := R21["Id"]
 97 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["$oid"]
 98 [-]: CALL      R19 3 1      ; R19(R20,R21)
 99 [-]: FORLOOP   R15 91       ; R15 += R17; if R15 <= R16 then begin PC := 91; R18 := R15 end
100 [-]: LOADK     R19 1        ; R19 := 1.000000
101 [-]: LEN       R20 R3       ; R20 := # R3
102 [-]: LOADK     R21 1        ; R21 := 1.000000
103 [-]: FORPREP   R19 151      ; R19 -= R21; PC := 151
104 [-]: GETTABLE  R23 R3 R22   ; R23 := R3[R22]
105 [-]: GETGLOBAL R24 K27      ; R24 := 0x7b998233
106 [-]: GETGLOBAL R25 K6       ; R25 := _T
107 [-]: GETTABLE  R25 R25 K7   ; R25 := R25["ShipDecos"]
108 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
109 [-]: CALL      R24 2 2      ; R24 := R24(R25)
110 [-]: TEST      R24 1        ; if R24 then PC := 121
111 [-]: JMP       121          ; PC := 121
112 [-]: GETGLOBAL R24 K6       ; R24 := _T
113 [-]: GETTABLE  R24 R24 K7   ; R24 := R24["ShipDecos"]
114 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
115 [-]: SELF      R24 R24 K28  ; R25 := R24; R24 := R24[0xa2880940]
116 [-]: CALL      R24 2 1      ; R24(R25)
117 [-]: GETGLOBAL R24 K6       ; R24 := _T
118 [-]: GETTABLE  R24 R24 K7   ; R24 := R24["ShipDecos"]
119 [-]: SETTABLE  R24 R23 K8   ; R24[R23] := nil
120 [-]: JMP       137          ; PC := 137
121 [-]: GETGLOBAL R24 K27      ; R24 := 0x7b998233
122 [-]: GETGLOBAL R25 K6       ; R25 := _T
123 [-]: GETTABLE  R25 R25 K29  ; R25 := R25["ApartmentPlaceableLevelObjectDecos"]
124 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
125 [-]: CALL      R24 2 2      ; R24 := R24(R25)
126 [-]: TEST      R24 1        ; if R24 then PC := 137
127 [-]: JMP       137          ; PC := 137
128 [-]: GETGLOBAL R24 K30      ; R24 := 0x89326c93
129 [-]: SELF      R24 R24 K31  ; R25 := R24; R24 := R24[0x59c96e77]
130 [-]: GETGLOBAL R26 K6       ; R26 := _T
131 [-]: GETTABLE  R26 R26 K29  ; R26 := R26["ApartmentPlaceableLevelObjectDecos"]
132 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
133 [-]: CALL      R24 3 1      ; R24(R25,R26)
134 [-]: GETGLOBAL R24 K6       ; R24 := _T
135 [-]: GETTABLE  R24 R24 K29  ; R24 := R24["ApartmentPlaceableLevelObjectDecos"]
136 [-]: SETTABLE  R24 R23 K8   ; R24[R23] := nil
137 [-]: GETGLOBAL R24 K6       ; R24 := _T
138 [-]: GETTABLE  R24 R24 K32  ; R24 := R24["ShipDecosInVignette"]
139 [-]: EQ        1 R24 K8     ; if R24 == nil then PC := 151
140 [-]: JMP       151          ; PC := 151
141 [-]: GETGLOBAL R24 K27      ; R24 := 0x7b998233
142 [-]: GETGLOBAL R25 K6       ; R25 := _T
143 [-]: GETTABLE  R25 R25 K32  ; R25 := R25["ShipDecosInVignette"]
144 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
145 [-]: CALL      R24 2 2      ; R24 := R24(R25)
146 [-]: TEST      R24 1        ; if R24 then PC := 151
147 [-]: JMP       151          ; PC := 151
148 [-]: GETGLOBAL R24 K6       ; R24 := _T
149 [-]: GETTABLE  R24 R24 K32  ; R24 := R24["ShipDecosInVignette"]
150 [-]: SETTABLE  R24 R23 K8   ; R24[R23] := nil
151 [-]: FORLOOP   R19 104      ; R19 += R21; if R19 <= R20 then begin PC := 104; R22 := R19 end
152 [-]: GETTABLE  R24 R2 K14   ; R24 := R2["ResetRoom"]
153 [-]: EQ        0 R24 K8     ; if R24 ~= nil then PC := 157
154 [-]: JMP       157          ; PC := 157
155 [-]: GETUPVAL  R24 U1       ; R24 := U1
156 [-]: CALL      R24 1 1      ; R24()
157 [-]: RETURN    R0 1         ; return 
158 [-]: GETGLOBAL R24 K33      ; R24 := 0x76ea806b
159 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x3f3ae64c]
160 [-]: LOADK     R26 0        ; R26 := 0.000000
161 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
162 [-]: GETGLOBAL R25 K27      ; R25 := 0x7b998233
163 [-]: MOVE      R26 R24      ; R26 := R24
164 [-]: CALL      R25 2 2      ; R25 := R25(R26)
165 [-]: TEST      R25 1        ; if R25 then PC := 342
166 [-]: JMP       342          ; PC := 342
167 [-]: NEWTABLE  R25 0 0      ; R25 := {}
168 [-]: NEWTABLE  R26 0 0      ; R26 := {}
169 [-]: NEWTABLE  R27 0 0      ; R27 := {}
170 [-]: NEWTABLE  R28 0 0      ; R28 := {}
171 [-]: SELF      R29 R24 K35  ; R30 := R24; R29 := R24[0x80563238]
172 [-]: CALL      R29 2 2      ; R29 := R29(R30)
173 [-]: SELF      R30 R29 K16  ; R31 := R29; R30 := R29[0x911c6241]
174 [-]: GETGLOBAL R32 K30      ; R32 := 0x89326c93
175 [-]: SELF      R32 R32 K36  ; R33 := R32; R32 := R32[0x18d05d30]
176 [-]: CALL      R32 2 2      ; R32 := R32(R33)
177 [-]: GETTABLE  R33 R1 K4    ; R33 := R1["DecoArea"]
178 [-]: GETUPVAL  R34 U0       ; R34 := U0
179 [-]: GETTABLE  R34 R34 K5   ; R34 := R34["DECO_AREA_APARTMENT"]
180 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 183
181 [-]: JMP       183          ; PC := 183
182 [-]: LOADBOOL  R33 0 1      ; R33 := false; PC := 183
183 [-]: LOADBOOL  R33 1 0      ; R33 := true
184 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
185 [-]: NEWTABLE  R31 0 0      ; R31 := {}
186 [-]: GETTABLE  R32 R1 K37   ; R32 := R1["LoaderProgress"]
187 [-]: GETTABLE  R32 R32 K38  ; R32 := R32["RoomLoaderIndex"]
188 [-]: LEN       R33 R30      ; R33 := # R30
189 [-]: LE        0 R32 R33    ; if R32 > R33 then PC := 195
190 [-]: JMP       195          ; PC := 195
191 [-]: GETTABLE  R32 R1 K37   ; R32 := R1["LoaderProgress"]
192 [-]: GETTABLE  R32 R32 K38  ; R32 := R32["RoomLoaderIndex"]
193 [-]: GETTABLE  R32 R30 R32  ; R32 := R30[R32]
194 [-]: GETTABLE  R31 R32 K20  ; R31 := R32["mPlacedDecos"]
195 [-]: LEN       R32 R31      ; R32 := # R31
196 [-]: MOVE      R33 R32      ; R33 := R32
197 [-]: LOADK     R34 0        ; R34 := 0.000000
198 [-]: GETTABLE  R35 R1 K37   ; R35 := R1["LoaderProgress"]
199 [-]: GETTABLE  R35 R35 K39  ; R35 := R35["DecoLoaderIndex"]
200 [-]: MOVE      R36 R32      ; R36 := R32
201 [-]: LOADK     R37 1        ; R37 := 1.000000
202 [-]: FORPREP   R35 291      ; R35 -= R37; PC := 291
203 [-]: GETTABLE  R39 R1 K37   ; R39 := R1["LoaderProgress"]
204 [-]: ADD       R40 R38 K40  ; R40 := R38 + 1.000000
205 [-]: SETTABLE  R39 K39 R40  ; R39["DecoLoaderIndex"] := R40
206 [-]: GETTABLE  R39 R31 R38  ; R39 := R31[R38]
207 [-]: GETGLOBAL R40 K27      ; R40 := 0x7b998233
208 [-]: GETTABLE  R41 R39 K41  ; R41 := R39["decoType"]
209 [-]: CALL      R40 2 2      ; R40 := R40(R41)
210 [-]: TEST      R40 1        ; if R40 then PC := 291
211 [-]: JMP       291          ; PC := 291
212 [-]: GETTABLE  R40 R39 K41  ; R40 := R39["decoType"]
213 [-]: SELF      R40 R40 K42  ; R41 := R40; R40 := R40[0xed4e0128]
214 [-]: CALL      R40 2 2      ; R40 := R40(R41)
215 [-]: GETTABLE  R41 R1 K37   ; R41 := R1["LoaderProgress"]
216 [-]: GETTABLE  R41 R41 K43  ; R41 := R41["DecosLoaded"]
217 [-]: GETTABLE  R41 R41 R40  ; R41 := R41[R40]
218 [-]: EQ        0 R41 K8     ; if R41 ~= nil then PC := 291
219 [-]: JMP       291          ; PC := 291
220 [-]: GETTABLE  R41 R1 K37   ; R41 := R1["LoaderProgress"]
221 [-]: GETTABLE  R41 R41 K43  ; R41 := R41["DecosLoaded"]
222 [-]: SETTABLE  R41 R40 K44  ; R41[R40] := true
223 [-]: GETGLOBAL R41 K27      ; R41 := 0x7b998233
224 [-]: GETTABLE  R42 R39 K45  ; R42 := R39["pictureFrameInfo"]
225 [-]: GETTABLE  R42 R42 K46  ; R42 := R42["mImage"]
226 [-]: CALL      R41 2 2      ; R41 := R41(R42)
227 [-]: TEST      R41 1        ; if R41 then PC := 242
228 [-]: JMP       242          ; PC := 242
229 [-]: GETTABLE  R41 R39 K45  ; R41 := R39["pictureFrameInfo"]
230 [-]: GETTABLE  R41 R41 K46  ; R41 := R41["mImage"]
231 [-]: SELF      R41 R41 K42  ; R42 := R41; R41 := R41[0xed4e0128]
232 [-]: CALL      R41 2 2      ; R41 := R41(R42)
233 [-]: GETTABLE  R42 R26 R41  ; R42 := R26[R41]
234 [-]: EQ        0 R42 K8     ; if R42 ~= nil then PC := 242
235 [-]: JMP       242          ; PC := 242
236 [-]: SETTABLE  R26 R41 K44  ; R26[R41] := true
237 [-]: GETGLOBAL R42 K21      ; R42 := 0x33bdd652
238 [-]: GETTABLE  R42 R42 K22  ; R42 := R42[0x23d5322f]
239 [-]: MOVE      R43 R25      ; R43 := R25
240 [-]: MOVE      R44 R41      ; R44 := R41
241 [-]: CALL      R42 3 1      ; R42(R43,R44)
242 [-]: GETGLOBAL R42 K27      ; R42 := 0x7b998233
243 [-]: GETTABLE  R43 R39 K45  ; R43 := R39["pictureFrameInfo"]
244 [-]: GETTABLE  R43 R43 K47  ; R43 := R43["mFilter"]
245 [-]: CALL      R42 2 2      ; R42 := R42(R43)
246 [-]: TEST      R42 1        ; if R42 then PC := 261
247 [-]: JMP       261          ; PC := 261
248 [-]: GETTABLE  R42 R39 K45  ; R42 := R39["pictureFrameInfo"]
249 [-]: GETTABLE  R42 R42 K47  ; R42 := R42["mFilter"]
250 [-]: SELF      R42 R42 K42  ; R43 := R42; R42 := R42[0xed4e0128]
251 [-]: CALL      R42 2 2      ; R42 := R42(R43)
252 [-]: GETTABLE  R43 R27 R42  ; R43 := R27[R42]
253 [-]: EQ        0 R43 K8     ; if R43 ~= nil then PC := 261
254 [-]: JMP       261          ; PC := 261
255 [-]: SETTABLE  R27 R42 K44  ; R27[R42] := true
256 [-]: GETGLOBAL R43 K21      ; R43 := 0x33bdd652
257 [-]: GETTABLE  R43 R43 K22  ; R43 := R43[0x23d5322f]
258 [-]: MOVE      R44 R25      ; R44 := R25
259 [-]: MOVE      R45 R42      ; R45 := R42
260 [-]: CALL      R43 3 1      ; R43(R44,R45)
261 [-]: GETGLOBAL R43 K27      ; R43 := 0x7b998233
262 [-]: GETTABLE  R44 R39 K48  ; R44 := R39["customizationInfo"]
263 [-]: GETTABLE  R44 R44 K49  ; R44 := R44["mAnim"]
264 [-]: CALL      R43 2 2      ; R43 := R43(R44)
265 [-]: TEST      R43 1        ; if R43 then PC := 280
266 [-]: JMP       280          ; PC := 280
267 [-]: GETTABLE  R43 R39 K48  ; R43 := R39["customizationInfo"]
268 [-]: GETTABLE  R43 R43 K49  ; R43 := R43["mAnim"]
269 [-]: SELF      R43 R43 K42  ; R44 := R43; R43 := R43[0xed4e0128]
270 [-]: CALL      R43 2 2      ; R43 := R43(R44)
271 [-]: GETTABLE  R44 R28 R43  ; R44 := R28[R43]
272 [-]: EQ        0 R44 K8     ; if R44 ~= nil then PC := 280
273 [-]: JMP       280          ; PC := 280
274 [-]: SETTABLE  R28 R43 K44  ; R28[R43] := true
275 [-]: GETGLOBAL R44 K21      ; R44 := 0x33bdd652
276 [-]: GETTABLE  R44 R44 K22  ; R44 := R44[0x23d5322f]
277 [-]: MOVE      R45 R25      ; R45 := R25
278 [-]: MOVE      R46 R43      ; R46 := R43
279 [-]: CALL      R44 3 1      ; R44(R45,R46)
280 [-]: GETGLOBAL R44 K21      ; R44 := 0x33bdd652
281 [-]: GETTABLE  R44 R44 K22  ; R44 := R44[0x23d5322f]
282 [-]: MOVE      R45 R25      ; R45 := R25
283 [-]: MOVE      R46 R40      ; R46 := R40
284 [-]: CALL      R44 3 1      ; R44(R45,R46)
285 [-]: ADD       R34 R34 K40  ; R34 := R34 + 1.000000
286 [-]: EQ        1 R34 R33    ; if R34 == R33 then PC := 292
287 [-]: JMP       292          ; PC := 292
288 [-]: EQ        0 R38 R32    ; if R38 ~= R32 then PC := 291
289 [-]: JMP       291          ; PC := 291
290 [-]: JMP       292          ; PC := 292
291 [-]: FORLOOP   R35 203      ; R35 += R37; if R35 <= R36 then begin PC := 203; R38 := R35 end
292 [-]: GETTABLE  R44 R1 K37   ; R44 := R1["LoaderProgress"]
293 [-]: GETTABLE  R44 R44 K39  ; R44 := R44["DecoLoaderIndex"]
294 [-]: LT        0 R32 R44    ; if R32 >= R44 then PC := 311
295 [-]: JMP       311          ; PC := 311
296 [-]: GETTABLE  R44 R1 K37   ; R44 := R1["LoaderProgress"]
297 [-]: SETTABLE  R44 K39 K40  ; R44["DecoLoaderIndex"] := 1.000000
298 [-]: GETTABLE  R44 R1 K37   ; R44 := R1["LoaderProgress"]
299 [-]: GETTABLE  R44 R44 K38  ; R44 := R44["RoomLoaderIndex"]
300 [-]: LEN       R45 R30      ; R45 := # R30
301 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 306
302 [-]: JMP       306          ; PC := 306
303 [-]: GETTABLE  R44 R1 K37   ; R44 := R1["LoaderProgress"]
304 [-]: SETTABLE  R44 K50 K44  ; R44["LastLoad"] := true
305 [-]: JMP       311          ; PC := 311
306 [-]: GETTABLE  R44 R1 K37   ; R44 := R1["LoaderProgress"]
307 [-]: GETTABLE  R45 R1 K37   ; R45 := R1["LoaderProgress"]
308 [-]: GETTABLE  R45 R45 K38  ; R45 := R45["RoomLoaderIndex"]
309 [-]: ADD       R45 R45 K40  ; R45 := R45 + 1.000000
310 [-]: SETTABLE  R44 K38 R45  ; R44["RoomLoaderIndex"] := R45
311 [-]: LEN       R44 R25      ; R44 := # R25
312 [-]: LT        0 K51 R44    ; if 0.000000 >= R44 then PC := 321
313 [-]: JMP       321          ; PC := 321
314 [-]: GETGLOBAL R44 K53      ; R44 := 0xbd496aa1
315 [-]: GETTABLE  R44 R44 K54  ; R44 := R44[0x42645da3]
316 [-]: MOVE      R45 R25      ; R45 := R25
317 [-]: CALL      R44 2 2      ; R44 := R44(R45)
318 [-]: SETTABLE  R1 K52 R44   ; R1["Loader"] := R44
319 [-]: SETTABLE  R1 K55 K44   ; R1["IsLoading"] := true
320 [-]: JMP       340          ; PC := 340
321 [-]: LT        0 K51 R32    ; if 0.000000 >= R32 then PC := 327
322 [-]: JMP       327          ; PC := 327
323 [-]: GETUPVAL  R44 U2       ; R44 := U2
324 [-]: MOVE      R45 R1       ; R45 := R1
325 [-]: CALL      R44 2 1      ; R44(R45)
326 [-]: JMP       340          ; PC := 340
327 [-]: GETTABLE  R44 R1 K37   ; R44 := R1["LoaderProgress"]
328 [-]: GETTABLE  R44 R44 K38  ; R44 := R44["RoomLoaderIndex"]
329 [-]: LEN       R45 R30      ; R45 := # R30
330 [-]: LE        0 R44 R45    ; if R44 > R45 then PC := 340
331 [-]: JMP       340          ; PC := 340
332 [-]: GETTABLE  R44 R1 K37   ; R44 := R1["LoaderProgress"]
333 [-]: GETTABLE  R44 R44 K50  ; R44 := R44["LastLoad"]
334 [-]: TEST      R44 1        ; if R44 then PC := 340
335 [-]: JMP       340          ; PC := 340
336 [-]: GETUPVAL  R44 U3       ; R44 := U3
337 [-]: LOADNIL   R45 R45      ; R45 := nil
338 [-]: MOVE      R46 R1       ; R46 := R1
339 [-]: CALL      R44 3 1      ; R44(R45,R46)
340 [-]: GETUPVAL  R44 U1       ; R44 := U1
341 [-]: CALL      R44 1 1      ; R44()
342 [-]: RETURN    R0 1         ; return 


; Function #231:
;
; Name:            
; Defined at line: 7631
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x23ddc82a]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 0         ; if not R1 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
  8 [-]: SETTABLE  R1 K2 K3     ; R1["RoomLoaderIndex"] := 1.000000
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 11 [-]: SETTABLE  R1 K4 K3     ; R1["DecoLoaderIndex"] := 1.000000
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 14 [-]: SETTABLE  R1 K5 K3     ; R1["RoomCreationIndex"] := 1.000000
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 17 [-]: SETTABLE  R1 K6 K3     ; R1["DecoCreationIndex"] := 1.000000
 18 [-]: GETUPVAL  R1 U1        ; R1 := U1
 19 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 20 [-]: SETTABLE  R1 K7 K8     ; R1["LastLoad"] := false
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: JMP       45           ; PC := 45
 26 [-]: GETUPVAL  R1 U3        ; R1 := U3
 27 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 28 [-]: SETTABLE  R1 K2 K3     ; R1["RoomLoaderIndex"] := 1.000000
 29 [-]: GETUPVAL  R1 U3        ; R1 := U3
 30 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 31 [-]: SETTABLE  R1 K4 K3     ; R1["DecoLoaderIndex"] := 1.000000
 32 [-]: GETUPVAL  R1 U3        ; R1 := U3
 33 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 34 [-]: SETTABLE  R1 K5 K3     ; R1["RoomCreationIndex"] := 1.000000
 35 [-]: GETUPVAL  R1 U3        ; R1 := U3
 36 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 37 [-]: SETTABLE  R1 K6 K3     ; R1["DecoCreationIndex"] := 1.000000
 38 [-]: GETUPVAL  R1 U3        ; R1 := U3
 39 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["LoaderProgress"]
 40 [-]: SETTABLE  R1 K7 K8     ; R1["LastLoad"] := false
 41 [-]: GETUPVAL  R1 U2        ; R1 := U2
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: CALL      R1 3 1       ; R1(R2,R3)
 45 [-]: RETURN    R0 1         ; return 


; Function #232:
;
; Name:            
; Defined at line: 7652
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xf2deaf69]
  3 [-]: GETGLOBAL R2 K2        ; R2 := gLotusAttractModeGameRulesType
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 1         ; if R0 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xf2deaf69]
  9 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPhotoBoothGameRulesType
 10 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 11 [-]: TEST      R0 1         ; if R0 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R0 K4        ; R0 := 0x76ea806b
 15 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x3f3ae64c]
 16 [-]: LOADK     R2 0         ; R2 := 0.000000
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 125
 22 [-]: JMP       125          ; PC := 125
 23 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 24 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0[0x80563238]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0xcd57f819]
 27 [-]: GETGLOBAL R5 K9        ; R5 := 0x89326c93
 28 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x18d05d30]
 29 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: GETTABLE  R4 R3 K11    ; R4 := R3["mVignette"]
 32 [-]: GETTABLE  R5 R3 K12    ; R5 := R3["mWallpaper"]
 33 [-]: GETTABLE  R6 R3 K13    ; R6 := R3["mVignetteFish"]
 34 [-]: LOADBOOL  R7 0 0       ; R7 := false
 35 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
 36 [-]: MOVE      R9 R4        ; R9 := R4
 37 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 38 [-]: TEST      R8 1         ; if R8 then PC := 53
 39 [-]: JMP       53           ; PC := 53
 40 [-]: GETGLOBAL R8 K14       ; R8 := 0x33bdd652
 41 [-]: GETTABLE  R8 R8 K15    ; R8 := R8[0x23d5322f]
 42 [-]: MOVE      R9 R1        ; R9 := R1
 43 [-]: SELF      R10 R4 K16   ; R11 := R4; R10 := R4[0xed4e0128]
 44 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 45 [-]: CALL      R8 0 1       ; R8(R9,...)
 46 [-]: GETGLOBAL R8 K17       ; R8 := 0x7ed0a956
 47 [-]: LOADK     R9 K18       ; R9 := "/Lotus/Types/Game/ActionFigureDioramas/OceanADiorama"
 48 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 49 [-]: EQ        1 R4 R8      ; if R4 == R8 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 52
 52 [-]: LOADBOOL  R7 1 0       ; R7 := true
 53 [-]: GETGLOBAL R9 K6        ; R9 := 0x7b998233
 54 [-]: MOVE      R10 R6       ; R10 := R6
 55 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 56 [-]: TEST      R9 1         ; if R9 then PC := 91
 57 [-]: JMP       91           ; PC := 91
 58 [-]: GETGLOBAL R9 K0        ; R9 := 0xbe190284
 59 [-]: SELF      R9 R9 K19    ; R10 := R9; R9 := R9[0xa1c390fe]
 60 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 61 [-]: GETGLOBAL R10 K20      ; R10 := 0xcfc01047
 62 [-]: MOVE      R11 R6       ; R11 := R6
 63 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
 64 [-]: JMP       89           ; PC := 89
 65 [-]: SELF      R15 R9 K21   ; R16 := R9; R15 := R9[0x105074fb]
 66 [-]: MOVE      R17 R14      ; R17 := R14
 67 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 68 [-]: GETGLOBAL R16 K6       ; R16 := 0x7b998233
 69 [-]: MOVE      R17 R15      ; R17 := R15
 70 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 71 [-]: TEST      R16 1        ; if R16 then PC := 89
 72 [-]: JMP       89           ; PC := 89
 73 [-]: GETUPVAL  R16 U0       ; R16 := U0
 74 [-]: GETTABLE  R16 R16 K22  ; R16 := R16[0x7791a519]
 75 [-]: MOVE      R17 R15      ; R17 := R15
 76 [-]: GETGLOBAL R18 K23      ; R18 := 0xce64b481
 77 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 78 [-]: GETGLOBAL R17 K6       ; R17 := 0x7b998233
 79 [-]: MOVE      R18 R16      ; R18 := R16
 80 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 81 [-]: TEST      R17 1        ; if R17 then PC := 89
 82 [-]: JMP       89           ; PC := 89
 83 [-]: GETGLOBAL R17 K14      ; R17 := 0x33bdd652
 84 [-]: GETTABLE  R17 R17 K15  ; R17 := R17[0x23d5322f]
 85 [-]: MOVE      R18 R1       ; R18 := R1
 86 [-]: SELF      R19 R16 K16  ; R20 := R16; R19 := R16[0xed4e0128]
 87 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
 88 [-]: CALL      R17 0 1      ; R17(R18,...)
 89 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 65; R12 := R13 end
 90 [-]: JMP       65           ; PC := 65
 91 [-]: GETGLOBAL R17 K6       ; R17 := 0x7b998233
 92 [-]: MOVE      R18 R5       ; R18 := R5
 93 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 94 [-]: TEST      R17 1        ; if R17 then PC := 112
 95 [-]: JMP       112          ; PC := 112
 96 [-]: GETGLOBAL R17 K24      ; R17 := 0xb009bbc6
 97 [-]: MOVE      R18 R5       ; R18 := R5
 98 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 99 [-]: SELF      R17 R17 K25  ; R18 := R17; R17 := R17[0xf7abfecf]
100 [-]: CALL      R17 2 2      ; R17 := R17(R18)
101 [-]: GETGLOBAL R18 K6       ; R18 := 0x7b998233
102 [-]: MOVE      R19 R17      ; R19 := R17
103 [-]: CALL      R18 2 2      ; R18 := R18(R19)
104 [-]: TEST      R18 1        ; if R18 then PC := 112
105 [-]: JMP       112          ; PC := 112
106 [-]: GETGLOBAL R18 K14      ; R18 := 0x33bdd652
107 [-]: GETTABLE  R18 R18 K15  ; R18 := R18[0x23d5322f]
108 [-]: MOVE      R19 R1       ; R19 := R1
109 [-]: SELF      R20 R17 K16  ; R21 := R17; R20 := R17[0xed4e0128]
110 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
111 [-]: CALL      R18 0 1      ; R18(R19,...)
112 [-]: LEN       R18 R1       ; R18 := # R1
113 [-]: LT        0 K26 R18    ; if 0.000000 >= R18 then PC := 125
114 [-]: JMP       125          ; PC := 125
115 [-]: GETUPVAL  R18 U1       ; R18 := U1
116 [-]: GETGLOBAL R19 K28      ; R19 := 0xbd496aa1
117 [-]: GETTABLE  R19 R19 K29  ; R19 := R19[0x42645da3]
118 [-]: MOVE      R20 R1       ; R20 := R1
119 [-]: CALL      R19 2 2      ; R19 := R19(R20)
120 [-]: SETTABLE  R18 K27 R19  ; R18["Loader"] := R19
121 [-]: GETUPVAL  R18 U1       ; R18 := U1
122 [-]: SETTABLE  R18 K30 K31  ; R18["IsLoading"] := true
123 [-]: GETUPVAL  R18 U1       ; R18 := U1
124 [-]: SETTABLE  R18 K32 R7   ; R18["IsFishTank"] := R7
125 [-]: RETURN    R0 1         ; return 


; Function #233:
;
; Name:            
; Defined at line: 7703
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x46a0ebf5]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x0469f296
  4 [-]: LOADK     R3 K3        ; R3 := "LotusHelmetAction"
  5 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x8e7c3b5e]
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0x25d99d89
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 40
 15 [-]: JMP       40           ; PC := 40
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[0xc14d48af]
 18 [-]: CALL      R2 1 2       ; R2 := R2()
 19 [-]: TEST      R2 0         ; if not R2 then PC := 40
 20 [-]: JMP       40           ; PC := 40
 21 [-]: GETGLOBAL R2 K6        ; R2 := 0x7b998233
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[0x536ca856]
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 1         ; if R2 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: SELF      R2 R0 K9     ; R3 := R0; R2 := R0[0x383d2e7d]
 33 [-]: CALL      R2 2 1       ; R2(R3)
 34 [-]: SELF      R2 R0 K10    ; R3 := R0; R2 := R0[0x3961202b]
 35 [-]: GETGLOBAL R4 K11       ; R4 := 0x603636ad
 36 [-]: LOADK     R5 K12       ; R5 := "/Lotus/Language/Actions/LotusCustomization"
 37 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 38 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 39 [-]: CALL      R2 0 1       ; R2(R3,...)
 40 [-]: RETURN    R0 1         ; return 


; Function #234:
;
; Name:            
; Defined at line: 7714
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #235:
;
; Name:            
; Defined at line: 7718
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADNIL   R1 R1        ; R1 := nil
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETUPVAL  R0 U3        ; R0 := U3
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: GETUPVAL  R0 U4        ; R0 := U4
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
 12 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x18d05d30]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U5        ; R0 := U5
 17 [-]: CALL      R0 1 1       ; R0()
 18 [-]: JMP       57           ; PC := 57
 19 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
 20 [-]: GETGLOBAL R1 K3        ; R1 := 0xbe190284
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R0 K3        ; R0 := 0xbe190284
 25 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xf2deaf69]
 26 [-]: GETGLOBAL R2 K5        ; R2 := gLotusAttractModeGameRulesType
 27 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 28 [-]: TEST      R0 1         ; if R0 then PC := 37
 29 [-]: JMP       37           ; PC := 37
 30 [-]: GETGLOBAL R0 K3        ; R0 := 0xbe190284
 31 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xf2deaf69]
 32 [-]: GETGLOBAL R2 K6        ; R2 := gLotusPhotoBoothGameRulesType
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: TEST      R0 1         ; if R0 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
 38 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0xfb669000]
 39 [-]: GETGLOBAL R2 K8        ; R2 := 0xf5d69a4f
 40 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 41 [-]: GETGLOBAL R1 K9        ; R1 := 0xc8802016
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 44 [-]: JMP       55           ; PC := 55
 45 [-]: SELF      R6 R5 K10    ; R7 := R5; R6 := R5[0x9d668f53]
 46 [-]: GETGLOBAL R8 K11       ; R8 := 0x0469f296
 47 [-]: CALL      R8 1 2       ; R8 := R8()
 48 [-]: LOADK     R9 100       ; R9 := 100.000000
 49 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 50 [-]: SELF      R6 R5 K12    ; R7 := R5; R6 := R5[0xb2532845]
 51 [-]: GETGLOBAL R8 K11       ; R8 := 0x0469f296
 52 [-]: LOADK     R9 K13       ; R9 := "Statue"
 53 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 54 [-]: CALL      R6 0 1       ; R6(R7,...)
 55 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 45; R3 := R4 end
 56 [-]: JMP       45           ; PC := 45
 57 [-]: RETURN    R0 1         ; return 


; Function #236:
;
; Name:            
; Defined at line: 7739
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1[0x23ddc82a]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 0         ; if not R1 then PC := 208
  5 [-]: JMP       208          ; PC := 208
  6 [-]: EQ        0 R0 K1      ; if R0 ~= "true" then PC := 109
  7 [-]: JMP       109          ; PC := 109
  8 [-]: GETGLOBAL R1 K2        ; R1 := _T
  9 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 10 [-]: SETTABLE  R1 K3 R2     ; R1["ApartmentPlaceableLevelObjectDecos"] := R2
 11 [-]: GETGLOBAL R1 K4        ; R1 := 0x89326c93
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xfb669000]
 13 [-]: GETGLOBAL R3 K6        ; R3 := gDojoPlaceableDecorationType
 14 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 15 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 16 [-]: LOADK     R3 1         ; R3 := 1.000000
 17 [-]: LEN       R4 R1        ; R4 := # R1
 18 [-]: LOADK     R5 1         ; R5 := 1.000000
 19 [-]: FORPREP   R3 37        ; R3 -= R5; PC := 37
 20 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 21 [-]: SELF      R8 R7 K7     ; R9 := R7; R8 := R7[0x154947fa]
 22 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 23 [-]: TEST      R8 0         ; if not R8 then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: SELF      R8 R7 K8     ; R9 := R7; R8 := R7[0xf537cfc7]
 26 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 27 [-]: GETGLOBAL R9 K2        ; R9 := _T
 28 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["ApartmentPlaceableLevelObjectDecos"]
 29 [-]: SETTABLE  R9 R8 R7     ; R9[R8] := R7
 30 [-]: GETTABLE  R9 R2 R8     ; R9 := R2[R8]
 31 [-]: EQ        0 R9 K9      ; if R9 ~= nil then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: SETTABLE  R2 R8 K10    ; R2[R8] := 0.000000
 34 [-]: GETTABLE  R9 R2 R8     ; R9 := R2[R8]
 35 [-]: ADD       R9 R9 K11    ; R9 := R9 + 1.000000
 36 [-]: SETTABLE  R2 R8 R9     ; R2[R8] := R9
 37 [-]: FORLOOP   R3 20        ; R3 += R5; if R3 <= R4 then begin PC := 20; R6 := R3 end
 38 [-]: GETGLOBAL R9 K12       ; R9 := 0xcfc01047
 39 [-]: MOVE      R10 R2       ; R10 := R2
 40 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 41 [-]: JMP       55           ; PC := 55
 42 [-]: LT        0 K11 R13    ; if 1.000000 >= R13 then PC := 55
 43 [-]: JMP       55           ; PC := 55
 44 [-]: GETGLOBAL R14 K13      ; R14 := 0x3d106989
 45 [-]: LOADK     R15 K14      ; R15 := "Found "
 46 [-]: MOVE      R16 R13      ; R16 := R13
 47 [-]: LOADK     R17 K15      ; R17 := " DojoPlaceableDecorations sharing the ID "
 48 [-]: MOVE      R18 R12      ; R18 := R12
 49 [-]: LOADK     R19 K16      ; R19 := "; please correct the level data!"
 50 [-]: CONCAT    R15 R15 R19  ; R15 := R15 .. R16 .. R17 .. R18 .. R19
 51 [-]: CALL      R14 2 1      ; R14(R15)
 52 [-]: GETGLOBAL R14 K17      ; R14 := 0x484742b6
 53 [-]: LOADK     R15 K18      ; R15 := "Duplicate DojoPlaceableDecoration IDs detected"
 54 [-]: CALL      R14 2 1      ; R14(R15)
 55 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 42; R11 := R12 end
 56 [-]: JMP       42           ; PC := 42
 57 [-]: GETGLOBAL R14 K19      ; R14 := 0x25d99d89
 58 [-]: SELF      R14 R14 K20  ; R15 := R14; R14 := R14[0x571ef1e3]
 59 [-]: GETGLOBAL R16 K4       ; R16 := 0x89326c93
 60 [-]: SELF      R16 R16 K21  ; R17 := R16; R16 := R16[0x18d05d30]
 61 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
 62 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 63 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["mClaimedDecos"]
 64 [-]: LOADK     R15 1        ; R15 := 1.000000
 65 [-]: LEN       R16 R14      ; R16 := # R14
 66 [-]: LOADK     R17 1        ; R17 := 1.000000
 67 [-]: FORPREP   R15 85       ; R15 -= R17; PC := 85
 68 [-]: GETTABLE  R19 R14 R18  ; R19 := R14[R18]
 69 [-]: GETGLOBAL R20 K23      ; R20 := 0x7b998233
 70 [-]: GETGLOBAL R21 K2       ; R21 := _T
 71 [-]: GETTABLE  R21 R21 K3   ; R21 := R21["ApartmentPlaceableLevelObjectDecos"]
 72 [-]: GETTABLE  R21 R21 R19  ; R21 := R21[R19]
 73 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 74 [-]: TEST      R20 1        ; if R20 then PC := 85
 75 [-]: JMP       85           ; PC := 85
 76 [-]: GETGLOBAL R20 K4       ; R20 := 0x89326c93
 77 [-]: SELF      R20 R20 K24  ; R21 := R20; R20 := R20[0x59c96e77]
 78 [-]: GETGLOBAL R22 K2       ; R22 := _T
 79 [-]: GETTABLE  R22 R22 K3   ; R22 := R22["ApartmentPlaceableLevelObjectDecos"]
 80 [-]: GETTABLE  R22 R22 R19  ; R22 := R22[R19]
 81 [-]: CALL      R20 3 1      ; R20(R21,R22)
 82 [-]: GETGLOBAL R20 K2       ; R20 := _T
 83 [-]: GETTABLE  R20 R20 K3   ; R20 := R20["ApartmentPlaceableLevelObjectDecos"]
 84 [-]: SETTABLE  R20 R19 K9   ; R20[R19] := nil
 85 [-]: FORLOOP   R15 68       ; R15 += R17; if R15 <= R16 then begin PC := 68; R18 := R15 end
 86 [-]: GETUPVAL  R20 U1       ; R20 := U1
 87 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["LoaderProgress"]
 88 [-]: SETTABLE  R20 K26 K11  ; R20["RoomLoaderIndex"] := 1.000000
 89 [-]: GETUPVAL  R20 U1       ; R20 := U1
 90 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["LoaderProgress"]
 91 [-]: SETTABLE  R20 K27 K11  ; R20["DecoLoaderIndex"] := 1.000000
 92 [-]: GETUPVAL  R20 U1       ; R20 := U1
 93 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["LoaderProgress"]
 94 [-]: SETTABLE  R20 K28 K11  ; R20["RoomCreationIndex"] := 1.000000
 95 [-]: GETUPVAL  R20 U1       ; R20 := U1
 96 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["LoaderProgress"]
 97 [-]: SETTABLE  R20 K29 K11  ; R20["DecoCreationIndex"] := 1.000000
 98 [-]: GETUPVAL  R20 U1       ; R20 := U1
 99 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["LoaderProgress"]
100 [-]: SETTABLE  R20 K30 K31  ; R20["LastLoad"] := false
101 [-]: GETUPVAL  R20 U1       ; R20 := U1
102 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["LoaderProgress"]
103 [-]: NEWTABLE  R21 0 0      ; R21 := {}
104 [-]: SETTABLE  R20 K32 R21  ; R20["DecosLoaded"] := R21
105 [-]: GETUPVAL  R20 U2       ; R20 := U2
106 [-]: LOADNIL   R21 R21      ; R21 := nil
107 [-]: GETUPVAL  R22 U1       ; R22 := U1
108 [-]: CALL      R20 3 1      ; R20(R21,R22)
109 [-]: GETGLOBAL R20 K33      ; R20 := 0x76ea806b
110 [-]: SELF      R20 R20 K34  ; R21 := R20; R20 := R20[0x3f3ae64c]
111 [-]: LOADK     R22 0        ; R22 := 0.000000
112 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
113 [-]: GETGLOBAL R21 K23      ; R21 := 0x7b998233
114 [-]: MOVE      R22 R20      ; R22 := R20
115 [-]: CALL      R21 2 2      ; R21 := R21(R22)
116 [-]: TEST      R21 1        ; if R21 then PC := 135
117 [-]: JMP       135          ; PC := 135
118 [-]: SELF      R21 R20 K35  ; R22 := R20; R21 := R20[0x80563238]
119 [-]: CALL      R21 2 2      ; R21 := R21(R22)
120 [-]: GETGLOBAL R22 K23      ; R22 := 0x7b998233
121 [-]: MOVE      R23 R21      ; R23 := R21
122 [-]: CALL      R22 2 2      ; R22 := R22(R23)
123 [-]: TEST      R22 1        ; if R22 then PC := 135
124 [-]: JMP       135          ; PC := 135
125 [-]: LOADK     R22 1        ; R22 := 1.000000
126 [-]: GETUPVAL  R23 U3       ; R23 := U3
127 [-]: LEN       R23 R23      ; R23 := # R23
128 [-]: LOADK     R24 1        ; R24 := 1.000000
129 [-]: FORPREP   R22 134      ; R22 -= R24; PC := 134
130 [-]: SELF      R26 R21 K36  ; R27 := R21; R26 := R21[0xd033bd37]
131 [-]: GETUPVAL  R28 U3       ; R28 := U3
132 [-]: GETTABLE  R28 R28 R25  ; R28 := R28[R25]
133 [-]: CALL      R26 3 1      ; R26(R27,R28)
134 [-]: FORLOOP   R22 130      ; R22 += R24; if R22 <= R23 then begin PC := 130; R25 := R22 end
135 [-]: GETUPVAL  R26 U4       ; R26 := U4
136 [-]: CALL      R26 1 1      ; R26()
137 [-]: GETGLOBAL R26 K4       ; R26 := 0x89326c93
138 [-]: SELF      R26 R26 K21  ; R27 := R26; R26 := R26[0x18d05d30]
139 [-]: CALL      R26 2 2      ; R26 := R26(R27)
140 [-]: TEST      R26 1        ; if R26 then PC := 147
141 [-]: JMP       147          ; PC := 147
142 [-]: GETGLOBAL R26 K23      ; R26 := 0x7b998233
143 [-]: GETGLOBAL R27 K37      ; R27 := 0xbe190284
144 [-]: CALL      R26 2 2      ; R26 := R26(R27)
145 [-]: TEST      R26 1        ; if R26 then PC := 159
146 [-]: JMP       159          ; PC := 159
147 [-]: GETGLOBAL R26 K37      ; R26 := 0xbe190284
148 [-]: SELF      R26 R26 K38  ; R27 := R26; R26 := R26[0xf2deaf69]
149 [-]: GETGLOBAL R28 K39      ; R28 := gLotusAttractModeGameRulesType
150 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
151 [-]: TEST      R26 1        ; if R26 then PC := 160
152 [-]: JMP       160          ; PC := 160
153 [-]: GETGLOBAL R26 K37      ; R26 := 0xbe190284
154 [-]: SELF      R26 R26 K38  ; R27 := R26; R26 := R26[0xf2deaf69]
155 [-]: GETGLOBAL R28 K40      ; R28 := gLotusPhotoBoothGameRulesType
156 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
157 [-]: TEST      R26 1        ; if R26 then PC := 160
158 [-]: JMP       160          ; PC := 160
159 [-]: RETURN    R0 1         ; return 
160 [-]: GETGLOBAL R26 K4       ; R26 := 0x89326c93
161 [-]: SELF      R26 R26 K21  ; R27 := R26; R26 := R26[0x18d05d30]
162 [-]: CALL      R26 2 2      ; R26 := R26(R27)
163 [-]: TEST      R26 1        ; if R26 then PC := 170
164 [-]: JMP       170          ; PC := 170
165 [-]: GETGLOBAL R26 K37      ; R26 := 0xbe190284
166 [-]: SELF      R26 R26 K38  ; R27 := R26; R26 := R26[0xf2deaf69]
167 [-]: GETGLOBAL R28 K39      ; R28 := gLotusAttractModeGameRulesType
168 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
169 [-]: JMP       172          ; PC := 172
170 [-]: LOADBOOL  R26 0 1      ; R26 := false; PC := 171
171 [-]: LOADBOOL  R26 1 0      ; R26 := true
172 [-]: TEST      R26 0        ; if not R26 then PC := 188
173 [-]: JMP       188          ; PC := 188
174 [-]: GETGLOBAL R27 K4       ; R27 := 0x89326c93
175 [-]: SELF      R27 R27 K41  ; R28 := R27; R27 := R27[0xc7fcada9]
176 [-]: GETGLOBAL R29 K42      ; R29 := 0x0469f296
177 [-]: LOADK     R30 K43      ; R30 := "ApartmentOptionsDisplayChange"
178 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
179 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
180 [-]: LOADK     R28 1        ; R28 := 1.000000
181 [-]: LEN       R29 R27      ; R29 := # R27
182 [-]: LOADK     R30 1        ; R30 := 1.000000
183 [-]: FORPREP   R28 187      ; R28 -= R30; PC := 187
184 [-]: GETTABLE  R32 R27 R31  ; R32 := R27[R31]
185 [-]: SELF      R32 R32 K44  ; R33 := R32; R32 := R32[0xf4e253b6]
186 [-]: CALL      R32 2 1      ; R32(R33)
187 [-]: FORLOOP   R28 184      ; R28 += R30; if R28 <= R29 then begin PC := 184; R31 := R28 end
188 [-]: GETGLOBAL R32 K4       ; R32 := 0x89326c93
189 [-]: SELF      R32 R32 K5   ; R33 := R32; R32 := R32[0xfb669000]
190 [-]: GETGLOBAL R34 K45      ; R34 := 0xf5d69a4f
191 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
192 [-]: GETGLOBAL R33 K46      ; R33 := 0xc8802016
193 [-]: MOVE      R34 R32      ; R34 := R32
194 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
195 [-]: JMP       206          ; PC := 206
196 [-]: SELF      R38 R37 K47  ; R39 := R37; R38 := R37[0x9d668f53]
197 [-]: GETGLOBAL R40 K42      ; R40 := 0x0469f296
198 [-]: CALL      R40 1 2      ; R40 := R40()
199 [-]: LOADK     R41 100      ; R41 := 100.000000
200 [-]: CALL      R38 4 1      ; R38(R39,R40,R41)
201 [-]: SELF      R38 R37 K48  ; R39 := R37; R38 := R37[0xb2532845]
202 [-]: GETGLOBAL R40 K42      ; R40 := 0x0469f296
203 [-]: LOADK     R41 K49      ; R41 := "Statue"
204 [-]: CALL      R40 2 0      ; R40,... := R40(R41)
205 [-]: CALL      R38 0 1      ; R38(R39,...)
206 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 196; R35 := R36 end
207 [-]: JMP       196          ; PC := 196
208 [-]: RETURN    R0 1         ; return 


; Function #237:
;
; Name:            
; Defined at line: 7820
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["gDojoData"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K1        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["gDojoData"]
 10 [-]: SETTABLE  R2 K3 R0     ; R2["Result"] := R0
 11 [-]: GETGLOBAL R2 K1        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["gDojoData"]
 13 [-]: SETTABLE  R2 K4 R1     ; R2["Body"] := R1
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 15 [-]: GETGLOBAL R3 K1        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["SquadOverlay"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 89
 19 [-]: JMP       89           ; PC := 89
 20 [-]: TEST      R0 0         ; if not R0 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETGLOBAL R2 K1        ; R2 := _T
 23 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 24 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xe4162eed]
 25 [-]: LOADK     R4 K7        ; R4 := "OpenDojoLevel"
 26 [-]: LOADK     R5 K8        ; R5 := ""
 27 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 28 [-]: JMP       89           ; PC := 89
 29 [-]: LOADNIL   R2 R2        ; R2 := nil
 30 [-]: EQ        1 R1 K8      ; if R1 == "" then PC := 53
 31 [-]: JMP       53           ; PC := 53
 32 [-]: GETGLOBAL R3 K9        ; R3 := 0x7f5022cf
 33 [-]: GETTABLE  R3 R3 K10    ; R3 := R3[0x1a94c9cc]
 34 [-]: MOVE      R4 R1        ; R4 := R1
 35 [-]: LOADK     R5 1         ; R5 := 1.000000
 36 [-]: LOADK     R6 1         ; R6 := 1.000000
 37 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 38 [-]: EQ        0 R3 K11     ; if R3 ~= "{" then PC := 53
 39 [-]: JMP       53           ; PC := 53
 40 [-]: GETGLOBAL R3 K12       ; R3 := cjson
 41 [-]: GETTABLE  R3 R3 K13    ; R3 := R3[0x7ab914d8]
 42 [-]: MOVE      R4 R1        ; R4 := R1
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: EQ        1 R3 K14     ; if R3 == nil then PC := 53
 45 [-]: JMP       53           ; PC := 53
 46 [-]: GETTABLE  R4 R3 K15    ; R4 := R3["DojoRequestStatus"]
 47 [-]: EQ        1 R4 K14     ; if R4 == nil then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETGLOBAL R4 K16       ; R4 := 0x03f57322
 50 [-]: GETTABLE  R5 R3 K15    ; R5 := R3["DojoRequestStatus"]
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: MOVE      R2 R4        ; R2 := R4
 53 [-]: EQ        0 R2 K18     ; if R2 ~= -8.000000 then PC := 80
 54 [-]: JMP       80           ; PC := 80
 55 [-]: GETGLOBAL R4 K19       ; R4 := 0xa94df70b
 56 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0xa593e43f]
 57 [-]: GETGLOBAL R6 K1        ; R6 := _T
 58 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["gDojoData"]
 59 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["ContentURL"]
 60 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 61 [-]: TEST      R4 1         ; if R4 then PC := 80
 62 [-]: JMP       80           ; PC := 80
 63 [-]: GETGLOBAL R4 K22       ; R4 := 0x3d106989
 64 [-]: LOADK     R5 K23       ; R5 := "CDN Dojo retrieval failed; retrying with API"
 65 [-]: CALL      R4 2 1       ; R4(R5)
 66 [-]: GETGLOBAL R4 K1        ; R4 := _T
 67 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["BackgroundMovie"]
 68 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0xf56f3887]
 69 [-]: LOADK     R6 K26       ; R6 := "OnLoadHubMessage"
 70 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 71 [-]: LOADK     R8 K27       ; R8 := "DojoHUB_HUB_"
 72 [-]: GETGLOBAL R9 K1        ; R9 := _T
 73 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["gDojoData"]
 74 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["GuildId"]
 75 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 76 [-]: LOADK     R9 K29       ; R9 := "true"
 77 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 78 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 79 [-]: JMP       89           ; PC := 89
 80 [-]: GETGLOBAL R4 K1        ; R4 := _T
 81 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["SquadOverlay"]
 82 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0xf56f3887]
 83 [-]: LOADK     R6 K30       ; R6 := "OnDojoData"
 84 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 85 [-]: LOADK     R8 K31       ; R8 := "false"
 86 [-]: LOADK     R9 K8        ; R9 := ""
 87 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 88 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 89 [-]: RETURN    R0 1         ; return 


; Function #238:
;
; Name:            
; Defined at line: 7856
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADBOOL  R1 0 0       ; R1 := false
  2 [-]: SETUPVAL  R1 U0        ; U82 := R0
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xfb64e76c]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x5ca33548]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x03f57322
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: EQ        0 R2 K5      ; if R2 ~= 4.000000 then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R2 K6        ; R2 := 0xe7f2b02f
 14 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x0eb3b79c]
 15 [-]: LOADK     R4 3         ; R4 := 3.000000
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: LOADK     R2 0         ; R2 := 0.000000
 19 [-]: SETUPVAL  R2 U1        ; U82 := R1
 20 [-]: LOADK     R2 0         ; R2 := 0.000000
 21 [-]: SETUPVAL  R2 U2        ; U82 := R2
 22 [-]: JMP       37           ; PC := 37
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0xe7f2b02f
 24 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x0eb3b79c]
 25 [-]: LOADK     R4 4         ; R4 := 4.000000
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: ADD       R2 R2 K8     ; R2 := R2 + 1.000000
 30 [-]: SETUPVAL  R2 U1        ; U82 := R1
 31 [-]: GETGLOBAL R2 K9        ; R2 := 0x55156ff7
 32 [-]: CALL      R2 1 2       ; R2 := R2()
 33 [-]: GETUPVAL  R3 U1        ; R3 := U1
 34 [-]: MUL       R3 K10 R3    ; R3 := 15.000000 * R3
 35 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 36 [-]: SETUPVAL  R2 U2        ; U82 := R2
 37 [-]: RETURN    R0 1         ; return 


; Function #239:
;
; Name:            
; Defined at line: 7871
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  5 [-]: LOADK     R2 K1        ; R2 := "Ignoring Orbiter Invitation while pending"
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETGLOBAL R2 K2        ; R2 := 0x55156ff7
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
 14 [-]: LOADK     R2 K3        ; R2 := "Ignoring Orbiter Invitation after rejection"
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0xbe190284
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 38
 21 [-]: JMP       38           ; PC := 38
 22 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0x89326c93
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: GETGLOBAL R1 K5        ; R1 := 0xbe190284
 28 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xf2deaf69]
 29 [-]: GETGLOBAL R3 K8        ; R3 := gLotusAttractModeGameRulesType
 30 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 31 [-]: TEST      R1 0         ; if not R1 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETGLOBAL R1 K6        ; R1 := 0x89326c93
 34 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x18d05d30]
 35 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 36 [-]: TEST      R1 1         ; if R1 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: RETURN    R0 1         ; return 
 39 [-]: GETGLOBAL R1 K10       ; R1 := 0xe7f2b02f
 40 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x565be9ee]
 41 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 42 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 43 [-]: MOVE      R3 R1        ; R3 := R1
 44 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 45 [-]: TEST      R2 1         ; if R2 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 48 [-]: GETGLOBAL R3 K6        ; R3 := 0x89326c93
 49 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xfb64e76c]
 50 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 51 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 52 [-]: TEST      R2 0         ; if not R2 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R2 K6        ; R2 := 0x89326c93
 56 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0xfb64e76c]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x5ca33548]
 59 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 60 [-]: EQ        1 R2 R0      ; if R2 == R0 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: RETURN    R0 1         ; return 
 63 [-]: SELF      R3 R1 K14    ; R4 := R1; R3 := R1[0x2fb816cf]
 64 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 65 [-]: GETGLOBAL R4 K15       ; R4 := 0x76ea806b
 66 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4[0x3f3ae64c]
 67 [-]: LOADK     R6 0         ; R6 := 0.000000
 68 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 69 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 70 [-]: MOVE      R6 R4        ; R6 := R4
 71 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 72 [-]: TEST      R5 0         ; if not R5 then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: RETURN    R0 1         ; return 
 75 [-]: SELF      R5 R4 K17    ; R6 := R4; R5 := R4[0x80563238]
 76 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 77 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 78 [-]: MOVE      R7 R5        ; R7 := R5
 79 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 80 [-]: TEST      R6 0         ; if not R6 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: RETURN    R0 1         ; return 
 83 [-]: SELF      R6 R5 K18    ; R7 := R5; R6 := R5[0x273a2275]
 84 [-]: MOVE      R8 R3        ; R8 := R3
 85 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 86 [-]: TEST      R6 0         ; if not R6 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: RETURN    R0 1         ; return 
 89 [-]: SELF      R6 R4 K19    ; R7 := R4; R6 := R4[0x300348b9]
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 94
 92 [-]: JMP       94           ; PC := 94
 93 [-]: RETURN    R0 1         ; return 
 94 [-]: GETGLOBAL R6 K10       ; R6 := 0xe7f2b02f
 95 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0x0eb3b79c]
 96 [-]: LOADK     R8 2         ; R8 := 2.000000
 97 [-]: MOVE      R9 R2        ; R9 := R2
 98 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 99 [-]: LOADBOOL  R6 1 0       ; R6 := true
100 [-]: SETUPVAL  R6 U0        ; U82 := R0
101 [-]: GETGLOBAL R6 K22       ; R6 := 0xae91e43b
102 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0x42b04007]
103 [-]: LOADK     R8 K24       ; R8 := "/Lotus/Language/Menu/InvitedToOrbiter"
104 [-]: LOADBOOL  R9 0 0       ; R9 := false
105 [-]: NEWTABLE  R10 0 1      ; R10 := {}
106 [-]: SETTABLE  R10 K25 R3   ; R10["NAME"] := R3
107 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
108 [-]: GETUPVAL  R7 U2        ; R7 := U2
109 [-]: GETTABLE  R7 R7 K26    ; R7 := R7[0xdedfded7]
110 [-]: MOVE      R8 R6        ; R8 := R6
111 [-]: LOADK     R9 K27       ; R9 := "ConfirmLoadOrbiterMessage"
112 [-]: CALL      R7 3 1       ; R7(R8,R9)
113 [-]: RETURN    R0 1         ; return 


; Function #240:
;
; Name:            
; Defined at line: 7924
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #241:
;
; Name:            
; Defined at line: 7928
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/InviteToOrbiterReceived"
  4 [-]: LOADBOOL  R4 0 0       ; R4 := false
  5 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  6 [-]: SETTABLE  R5 K3 R0     ; R5["NAME"] := R0
  7 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
  8 [-]: GETGLOBAL R2 K4        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x7dce37bc]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: LOADK     R4 K6        ; R4 := "SquadMemberJoined"
 12 [-]: CALL      R2 3 1       ; R2(R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #242:
;
; Name:            
; Defined at line: 7933
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/InviteToOrbiterRejected"
  4 [-]: LOADBOOL  R4 0 0       ; R4 := false
  5 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  6 [-]: SETTABLE  R5 K3 R0     ; R5["NAME"] := R0
  7 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
  8 [-]: GETGLOBAL R2 K4        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x7dce37bc]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: LOADK     R4 K6        ; R4 := "SquadMemberLeft"
 12 [-]: CALL      R2 3 1       ; R2(R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #243:
;
; Name:            
; Defined at line: 7938
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x42b04007]
  3 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/InviteToOrbiterAccepted"
  4 [-]: LOADBOOL  R4 0 0       ; R4 := false
  5 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  6 [-]: SETTABLE  R5 K3 R0     ; R5["NAME"] := R0
  7 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
  8 [-]: GETGLOBAL R2 K4        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[0x7dce37bc]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: LOADK     R4 K6        ; R4 := "SquadMemberJoined"
 12 [-]: CALL      R2 3 1       ; R2(R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #244:
;
; Name:            
; Defined at line: 7943
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf56f3887]
  4 [-]: LOADK     R4 K3        ; R4 := "ConfirmLogoff"
  5 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  6 [-]: MOVE      R6 R0        ; R6 := R0
  7 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
  8 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  9 [-]: RETURN    R0 1         ; return 


; Function #245:
;
; Name:            
; Defined at line: 7947
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 1.000000 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: JMP       24           ; PC := 24
  7 [-]: EQ        0 R0 K2      ; if R0 ~= 2.000000 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: JMP       24           ; PC := 24
 13 [-]: EQ        0 R0 K3      ; if R0 ~= 4.000000 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R2 U2        ; R2 := U2
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: JMP       24           ; PC := 24
 19 [-]: EQ        0 R0 K4      ; if R0 ~= 3.000000 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R2 U3        ; R2 := U3
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 1       ; R2(R3)
 24 [-]: RETURN    R0 1         ; return 


; Function #246:
;
; Name:            
; Defined at line: 7959
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 28
  2 [-]: JMP       28           ; PC := 28
  3 [-]: EQ        0 R1 K0      ; if R1 ~= "WEGAME_ACCOUNT_ACTIVATED" then PC := 22
  4 [-]: JMP       22           ; PC := 22
  5 [-]: GETGLOBAL R2 K1        ; R2 := _T
  6 [-]: SETTABLE  R2 K2 K3     ; R2["gWeGameAccount"] := nil
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0x9ba7909f
  8 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xbcfb64ab]
  9 [-]: GETGLOBAL R4 K6        ; R4 := movies
 10 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["MainMenu"]
 11 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 12 [-]: GETGLOBAL R3 K8        ; R3 := 0x7b998233
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: TEST      R3 1         ; if R3 then PC := 53
 16 [-]: JMP       53           ; PC := 53
 17 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0xe4162eed]
 18 [-]: LOADK     R5 K10       ; R5 := "OnWeGameAccountNamed"
 19 [-]: LOADK     R6 K11       ; R6 := ""
 20 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 21 [-]: JMP       53           ; PC := 53
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K12    ; R3 := R3[0xf616a184]
 24 [-]: LOADK     R4 K13       ; R4 := "/Lotus/Language/Menu/Profile_AccountRenameSuccess"
 25 [-]: LOADK     R5 K14       ; R5 := "OnAccountRenameRelogConfirm"
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: JMP       53           ; PC := 53
 28 [-]: LOADK     R3 K15       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail"
 29 [-]: EQ        0 R1 K16     ; if R1 ~= "RESTRICTED_NAME" then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADK     R3 K17       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_RESTRICTED_NAME"
 32 [-]: JMP       40           ; PC := 40
 33 [-]: EQ        0 R1 K18     ; if R1 ~= "INSUFFICIENT_FUNDS" then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: LOADK     R3 K19       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_INSUFFICIENT_FUNDS"
 36 [-]: JMP       40           ; PC := 40
 37 [-]: EQ        0 R1 K20     ; if R1 ~= "NAME_USED" then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADK     R3 K21       ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_NAME_USED"
 40 [-]: GETGLOBAL R4 K22       ; R4 := 0x603636ad
 41 [-]: MOVE      R5 R3        ; R5 := R3
 42 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 43 [-]: GETGLOBAL R7 K1        ; R7 := _T
 44 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["gPendingAccountRename"]
 45 [-]: SETTABLE  R6 K23 R7    ; R6[0xe0cba3ca] := R7
 46 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 47 [-]: MOVE      R3 R4        ; R3 := R4
 48 [-]: GETUPVAL  R4 U0        ; R4 := U0
 49 [-]: GETTABLE  R4 R4 K25    ; R4 := R4[0xe0cba3ca]
 50 [-]: MOVE      R5 R3        ; R5 := R3
 51 [-]: LOADK     R6 K26       ; R6 := "OnBadNewNameAcknowledged"
 52 [-]: CALL      R4 3 1       ; R4(R5,R6)
 53 [-]: GETGLOBAL R4 K1        ; R4 := _T
 54 [-]: SETTABLE  R4 K24 K11   ; R4["gPendingAccountRename"] := ""
 55 [-]: RETURN    R0 1         ; return 


; Function #247:
;
; Name:            
; Defined at line: 7988
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 41
  5 [-]: JMP       41           ; PC := 41
  6 [-]: GETGLOBAL R1 K3        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["gWeGameAccount"]
  8 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[0x5ef16644]
 12 [-]: GETGLOBAL R2 K3        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["gPendingAccountRename"]
 14 [-]: GETGLOBAL R3 K3        ; R3 := _T
 15 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["gWeGameAccount"]
 16 [-]: LOADK     R4 K8        ; R4 := "OnAccountRename"
 17 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 18 [-]: JMP       59           ; PC := 59
 19 [-]: GETGLOBAL R1 K9        ; R1 := 0x76ea806b
 20 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x3f3ae64c]
 21 [-]: LOADK     R3 0         ; R3 := 0.000000
 22 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 23 [-]: GETGLOBAL R2 K11       ; R2 := 0x7b998233
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 59
 27 [-]: JMP       59           ; PC := 59
 28 [-]: SELF      R2 R1 K12    ; R3 := R1; R2 := R1[0x80563238]
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: GETGLOBAL R3 K11       ; R3 := 0x7b998233
 31 [-]: MOVE      R4 R2        ; R4 := R2
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: TEST      R3 1         ; if R3 then PC := 59
 34 [-]: JMP       59           ; PC := 59
 35 [-]: SELF      R3 R2 K13    ; R4 := R2; R3 := R2[0xddb81687]
 36 [-]: GETGLOBAL R5 K3        ; R5 := _T
 37 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["gPendingAccountRename"]
 38 [-]: LOADK     R6 K8        ; R6 := "OnAccountRename"
 39 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 40 [-]: JMP       59           ; PC := 59
 41 [-]: GETGLOBAL R3 K3        ; R3 := _T
 42 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["gWeGameAccount"]
 43 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 59
 44 [-]: JMP       59           ; PC := 59
 45 [-]: GETGLOBAL R3 K3        ; R3 := _T
 46 [-]: SETTABLE  R3 K7 K14    ; R3["gPendingAccountRename"] := ""
 47 [-]: GETUPVAL  R3 U0        ; R3 := U0
 48 [-]: GETTABLE  R3 R3 K15    ; R3 := R3[0xef3e3165]
 49 [-]: GETGLOBAL R4 K16       ; R4 := 0xae91e43b
 50 [-]: LOADK     R5 K17       ; R5 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
 51 [-]: LOADK     R6 K14       ; R6 := ""
 52 [-]: LOADK     R7 24        ; R7 := 24.000000
 53 [-]: LOADK     R8 K18       ; R8 := "AccountRename"
 54 [-]: LOADK     R9 K19       ; R9 := "OSKAccountRename"
 55 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 56 [-]: SETTABLE  R10 K20 K21  ; R10["isMultiline"] := false
 57 [-]: SETTABLE  R10 K22 K23  ; R10["cancelDisabled"] := true
 58 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 59 [-]: RETURN    R0 1         ; return 


; Function #248:
;
; Name:            
; Defined at line: 8011
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gWeGameAccount"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 17
  4 [-]: JMP       17           ; PC := 17
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0xef3e3165]
  7 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
  8 [-]: LOADK     R2 K5        ; R2 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
  9 [-]: LOADK     R3 K6        ; R3 := ""
 10 [-]: LOADK     R4 24        ; R4 := 24.000000
 11 [-]: LOADK     R5 K7        ; R5 := "AccountRename"
 12 [-]: LOADK     R6 K8        ; R6 := "OSKAccountRename"
 13 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 14 [-]: SETTABLE  R7 K9 K10    ; R7["isMultiline"] := false
 15 [-]: SETTABLE  R7 K11 K12   ; R7["cancelDisabled"] := true
 16 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 17 [-]: RETURN    R0 1         ; return 


; Function #249:
;
; Name:            
; Defined at line: 8018
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 18
  2 [-]: JMP       18           ; PC := 18
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x9ba7909f
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbcfb64ab]
  5 [-]: GETGLOBAL R3 K3        ; R3 := movies
  6 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["MainMenu"]
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0xe4162eed]
 14 [-]: LOADK     R4 K7        ; R4 := "OnWeGameAccountNameCancelled"
 15 [-]: LOADK     R5 K8        ; R5 := ""
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: EQ        0 R0 K8      ; if R0 ~= "" then PC := 37
 19 [-]: JMP       37           ; PC := 37
 20 [-]: GETGLOBAL R2 K9        ; R2 := _T
 21 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["gWeGameAccount"]
 22 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[0xef3e3165]
 26 [-]: GETGLOBAL R3 K12       ; R3 := 0xae91e43b
 27 [-]: LOADK     R4 K13       ; R4 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
 28 [-]: LOADK     R5 K8        ; R5 := ""
 29 [-]: LOADK     R6 24        ; R6 := 24.000000
 30 [-]: LOADK     R7 K14       ; R7 := "AccountRename"
 31 [-]: LOADK     R8 K15       ; R8 := "OSKAccountRename"
 32 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 33 [-]: SETTABLE  R9 K16 K17   ; R9["isMultiline"] := false
 34 [-]: SETTABLE  R9 K18 K19   ; R9["cancelDisabled"] := true
 35 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: GETTABLE  R2 R2 K20    ; R2 := R2[0x5d3d561a]
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: LT        0 K21 R2     ; if 0.000000 >= R2 then PC := 59
 42 [-]: JMP       59           ; PC := 59
 43 [-]: GETUPVAL  R3 U1        ; R3 := U1
 44 [-]: GETTABLE  R3 R3 K22    ; R3 := R3[0xe0cba3ca]
 45 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 46 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4[0x42b04007]
 47 [-]: LOADK     R6 K24       ; R6 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
 48 [-]: LOADBOOL  R7 0 0       ; R7 := false
 49 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 50 [-]: GETGLOBAL R5 K25       ; R5 := 0x68b0afb4
 51 [-]: MOVE      R6 R0        ; R6 := R0
 52 [-]: MOVE      R7 R2        ; R7 := R2
 53 [-]: MOVE      R8 R2        ; R8 := R2
 54 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 55 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 56 [-]: LOADK     R5 K26       ; R5 := "OnBadNewNameAcknowledged"
 57 [-]: CALL      R3 3 1       ; R3(R4,R5)
 58 [-]: RETURN    R0 1         ; return 
 59 [-]: GETGLOBAL R3 K27       ; R3 := 0x7f5022cf
 60 [-]: GETTABLE  R3 R3 K28    ; R3 := R3[0x41e2ae25]
 61 [-]: MOVE      R4 R0        ; R4 := R0
 62 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 63 [-]: LT        0 K29 R3     ; if 24.000000 >= R3 then PC := 75
 64 [-]: JMP       75           ; PC := 75
 65 [-]: GETUPVAL  R3 U1        ; R3 := U1
 66 [-]: GETTABLE  R3 R3 K22    ; R3 := R3[0xe0cba3ca]
 67 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 68 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4[0x42b04007]
 69 [-]: LOADK     R6 K30       ; R6 := "/Lotus/Language/Menu/Profile_AccountRenameFail_TOO_LONG"
 70 [-]: LOADBOOL  R7 0 0       ; R7 := false
 71 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 72 [-]: LOADK     R5 K26       ; R5 := "OnBadNewNameAcknowledged"
 73 [-]: CALL      R3 3 1       ; R3(R4,R5)
 74 [-]: RETURN    R0 1         ; return 
 75 [-]: GETGLOBAL R3 K27       ; R3 := 0x7f5022cf
 76 [-]: GETTABLE  R3 R3 K28    ; R3 := R3[0x41e2ae25]
 77 [-]: MOVE      R4 R0        ; R4 := R0
 78 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 79 [-]: LT        0 R3 K31     ; if R3 >= 4.000000 then PC := 91
 80 [-]: JMP       91           ; PC := 91
 81 [-]: GETUPVAL  R3 U1        ; R3 := U1
 82 [-]: GETTABLE  R3 R3 K22    ; R3 := R3[0xe0cba3ca]
 83 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 84 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4[0x42b04007]
 85 [-]: LOADK     R6 K32       ; R6 := "/Lotus/Language/Menu/Profile_AccountNameFail_TOO_SHORT"
 86 [-]: LOADBOOL  R7 0 0       ; R7 := false
 87 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 88 [-]: LOADK     R5 K26       ; R5 := "OnBadNewNameAcknowledged"
 89 [-]: CALL      R3 3 1       ; R3(R4,R5)
 90 [-]: RETURN    R0 1         ; return 
 91 [-]: GETGLOBAL R3 K33       ; R3 := 0x7db5f856
 92 [-]: MOVE      R4 R0        ; R4 := R0
 93 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 94 [-]: MOVE      R0 R3        ; R0 := R3
 95 [-]: GETGLOBAL R3 K34       ; R3 := 0x09423272
 96 [-]: MOVE      R4 R0        ; R4 := R0
 97 [-]: LOADK     R5 1         ; R5 := 1.000000
 98 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 99 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 107
100 [-]: JMP       107          ; PC := 107
101 [-]: GETUPVAL  R4 U1        ; R4 := U1
102 [-]: GETTABLE  R4 R4 K22    ; R4 := R4[0xe0cba3ca]
103 [-]: LOADK     R5 K36       ; R5 := "/Lotus/Language/Menu/Profile_AccountRenameFail_CENSORED"
104 [-]: LOADK     R6 K26       ; R6 := "OnBadNewNameAcknowledged"
105 [-]: CALL      R4 3 1       ; R4(R5,R6)
106 [-]: RETURN    R0 1         ; return 
107 [-]: GETGLOBAL R4 K9        ; R4 := _T
108 [-]: SETTABLE  R4 K37 R0    ; R4["gPendingAccountRename"] := R0
109 [-]: GETGLOBAL R4 K9        ; R4 := _T
110 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["gWeGameAccount"]
111 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 127
112 [-]: JMP       127          ; PC := 127
113 [-]: NEWTABLE  R4 0 1       ; R4 := {}
114 [-]: SETTABLE  R4 K38 R0    ; R4["NEW_NAME"] := R0
115 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
116 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0x42b04007]
117 [-]: LOADK     R7 K39       ; R7 := "/Lotus/Language/Changyou/AliasNameConfirm"
118 [-]: LOADBOOL  R8 1 0       ; R8 := true
119 [-]: MOVE      R9 R4        ; R9 := R4
120 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
121 [-]: GETUPVAL  R6 U1        ; R6 := U1
122 [-]: GETTABLE  R6 R6 K40    ; R6 := R6[0xf616a184]
123 [-]: MOVE      R7 R5        ; R7 := R5
124 [-]: LOADK     R8 K41       ; R8 := "OnAccountRenameConfirm"
125 [-]: CALL      R6 3 1       ; R6(R7,R8)
126 [-]: RETURN    R0 1         ; return 
127 [-]: GETGLOBAL R6 K42       ; R6 := 0x76ea806b
128 [-]: SELF      R6 R6 K43    ; R7 := R6; R6 := R6[0x3f3ae64c]
129 [-]: LOADK     R8 0         ; R8 := 0.000000
130 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
131 [-]: GETGLOBAL R7 K5        ; R7 := 0x7b998233
132 [-]: MOVE      R8 R6        ; R8 := R6
133 [-]: CALL      R7 2 2       ; R7 := R7(R8)
134 [-]: TEST      R7 1         ; if R7 then PC := 171
135 [-]: JMP       171          ; PC := 171
136 [-]: SELF      R7 R6 K44    ; R8 := R6; R7 := R6[0x5ca33548]
137 [-]: CALL      R7 2 2       ; R7 := R7(R8)
138 [-]: EQ        1 R7 R0      ; if R7 == R0 then PC := 163
139 [-]: JMP       163          ; PC := 163
140 [-]: GETUPVAL  R7 U1        ; R7 := U1
141 [-]: GETTABLE  R7 R7 K45    ; R7 := R7[0x06d055f9]
142 [-]: GETGLOBAL R8 K46       ; R8 := 0x34291f5c
143 [-]: GETTABLE  R8 R8 K47    ; R8 := R8[0xa7a2e381]
144 [-]: CALL      R8 1 2       ; R8 := R8()
145 [-]: LOADK     R9 50        ; R9 := 50.000000
146 [-]: LOADK     R10 200      ; R10 := 200.000000
147 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
148 [-]: NEWTABLE  R8 0 2       ; R8 := {}
149 [-]: SETTABLE  R8 K38 R0    ; R8["NEW_NAME"] := R0
150 [-]: SETTABLE  R8 K48 R7    ; R8["RENAME_COST"] := R7
151 [-]: GETGLOBAL R9 K12       ; R9 := 0xae91e43b
152 [-]: SELF      R9 R9 K23    ; R10 := R9; R9 := R9[0x42b04007]
153 [-]: LOADK     R11 K49      ; R11 := "/Lotus/Language/Menu/Profile_AccountRenameConfirm"
154 [-]: LOADBOOL  R12 1 0      ; R12 := true
155 [-]: MOVE      R13 R8       ; R13 := R8
156 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
157 [-]: GETUPVAL  R10 U1       ; R10 := U1
158 [-]: GETTABLE  R10 R10 K40  ; R10 := R10[0xf616a184]
159 [-]: MOVE      R11 R9       ; R11 := R9
160 [-]: LOADK     R12 K41      ; R12 := "OnAccountRenameConfirm"
161 [-]: CALL      R10 3 1      ; R10(R11,R12)
162 [-]: JMP       171          ; PC := 171
163 [-]: GETUPVAL  R10 U1       ; R10 := U1
164 [-]: GETTABLE  R10 R10 K22  ; R10 := R10[0xe0cba3ca]
165 [-]: GETGLOBAL R11 K50      ; R11 := 0x603636ad
166 [-]: LOADK     R12 K51      ; R12 := "/Lotus/Language/Menu/Profile_AccountRenameFail_NO_CHANGE"
167 [-]: NEWTABLE  R13 0 1      ; R13 := {}
168 [-]: SETTABLE  R13 K38 R0   ; R13["NEW_NAME"] := R0
169 [-]: CALL      R11 3 0      ; R11,... := R11(R12,R13)
170 [-]: CALL      R10 0 1      ; R10(R11,...)
171 [-]: RETURN    R0 1         ; return 


; Function #250:
;
; Name:            
; Defined at line: 8089
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0x03f57322
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: EQ        0 R3 K3      ; if R3 ~= 4.000000 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 1       ; R3(R4)
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: LOADNIL   R4 R4        ; R4 := nil
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #251:
;
; Name:            
; Defined at line: 8097
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 1         ; if R0 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 1       ; R2(R3)
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: LOADNIL   R3 R3        ; R3 := nil
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #252:
;
; Name:            
; Defined at line: 8105
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 4
  4 [-]: LOADBOOL  R0 1 0       ; R0 := true
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1[0xef3e3165]
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  8 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
  9 [-]: LOADK     R4 K4        ; R4 := ""
 10 [-]: LOADK     R5 24        ; R5 := 24.000000
 11 [-]: LOADK     R6 K5        ; R6 := "AccountRename"
 12 [-]: LOADK     R7 K6        ; R7 := "OSKAccountRename"
 13 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 14 [-]: SETTABLE  R8 K7 K8     ; R8["isMultiline"] := false
 15 [-]: SETTABLE  R8 K9 R0     ; R8["cancelDisabled"] := R0
 16 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 17 [-]: RETURN    R0 1         ; return 


; Function #253:
;
; Name:            
; Defined at line: 8110
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  72

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: LOADK     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: LOADK     R1 30        ; R1 := 30.000000
  6 [-]: LOADK     R2 0         ; R2 := 0.000000
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: TEST      R3 0         ; if not R3 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 27
 13 [-]: JMP       27           ; PC := 27
 14 [-]: GETGLOBAL R3 K3        ; R3 := 0x3d106989
 15 [-]: LOADK     R4 K4        ; R4 := "failed to initialize region challenges: no player profile"
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: ADD       R2 R2 K5     ; R2 := R2 + 1.000000
 18 [-]: GETGLOBAL R3 K6        ; R3 := 0xcbd666e1
 19 [-]: LOADK     R4 K7        ; R4 := 0.100000
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETGLOBAL R3 K0        ; R3 := 0x76ea806b
 22 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x3f3ae64c]
 23 [-]: LOADK     R5 0         ; R5 := 0.000000
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: MOVE      R0 R3        ; R0 := R3
 26 [-]: JMP       7            ; PC := 7
 27 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: LOADK     R2 0         ; R2 := 0.000000
 31 [-]: SELF      R3 R0 K8     ; R4 := R0; R3 := R0[0x80563238]
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 34 [-]: MOVE      R5 R3        ; R5 := R3
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: TEST      R4 0         ; if not R4 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 51
 39 [-]: JMP       51           ; PC := 51
 40 [-]: GETGLOBAL R4 K3        ; R4 := 0x3d106989
 41 [-]: LOADK     R5 K9        ; R5 := "failed to initialize region challenges: no game data"
 42 [-]: CALL      R4 2 1       ; R4(R5)
 43 [-]: ADD       R2 R2 K5     ; R2 := R2 + 1.000000
 44 [-]: GETGLOBAL R4 K6        ; R4 := 0xcbd666e1
 45 [-]: LOADK     R5 K7        ; R5 := 0.100000
 46 [-]: CALL      R4 2 1       ; R4(R5)
 47 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0[0x80563238]
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: MOVE      R3 R4        ; R3 := R4
 50 [-]: JMP       33           ; PC := 33
 51 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETGLOBAL R4 K3        ; R4 := 0x3d106989
 54 [-]: LOADK     R5 K10       ; R5 := "bailing from region challenges."
 55 [-]: CALL      R4 2 1       ; R4(R5)
 56 [-]: RETURN    R0 1         ; return 
 57 [-]: GETGLOBAL R4 K3        ; R4 := 0x3d106989
 58 [-]: LOADK     R5 K11       ; R5 := "initializing region challenges"
 59 [-]: CALL      R4 2 1       ; R4(R5)
 60 [-]: GETUPVAL  R4 U0        ; R4 := U0
 61 [-]: GETTABLE  R4 R4 K12    ; R4 := R4[0x5e35d4d6]
 62 [-]: CALL      R4 1 2       ; R4 := R4()
 63 [-]: SELF      R5 R4 K13    ; R6 := R4; R5 := R4[0xc1dee03f]
 64 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 65 [-]: GETUPVAL  R6 U0        ; R6 := U0
 66 [-]: GETTABLE  R6 R6 K14    ; R6 := R6[0xd342d13d]
 67 [-]: CALL      R6 1 2       ; R6 := R6()
 68 [-]: LOADK     R7 0         ; R7 := 0.000000
 69 [-]: LOADBOOL  R8 0 0       ; R8 := false
 70 [-]: TEST      R6 0         ; if not R6 then PC := 115
 71 [-]: JMP       115          ; PC := 115
 72 [-]: GETGLOBAL R9 K15       ; R9 := 0x89326c93
 73 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0xca9ea368]
 74 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 75 [-]: GETGLOBAL R10 K17      ; R10 := 0xa94df70b
 76 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10[0x85de842a]
 77 [-]: MOVE      R12 R9       ; R12 := R9
 78 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 79 [-]: TEST      R10 0        ; if not R10 then PC := 84
 80 [-]: JMP       84           ; PC := 84
 81 [-]: LOADK     R7 3         ; R7 := 3.000000
 82 [-]: LOADBOOL  R8 1 0       ; R8 := true
 83 [-]: JMP       115          ; PC := 115
 84 [-]: GETGLOBAL R10 K19      ; R10 := 0xbe190284
 85 [-]: SELF      R10 R10 K20  ; R11 := R10; R10 := R10[0xef893aec]
 86 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 87 [-]: GETTABLE  R11 R10 K21  ; R11 := R10["levelKeyName"]
 88 [-]: GETGLOBAL R12 K2       ; R12 := 0x7b998233
 89 [-]: MOVE      R13 R11      ; R13 := R11
 90 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 91 [-]: TEST      R12 1        ; if R12 then PC := 105
 92 [-]: JMP       105          ; PC := 105
 93 [-]: GETGLOBAL R12 K22      ; R12 := 0xb009bbc6
 94 [-]: MOVE      R13 R11      ; R13 := R11
 95 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 96 [-]: GETGLOBAL R13 K2       ; R13 := 0x7b998233
 97 [-]: MOVE      R14 R12      ; R14 := R12
 98 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 99 [-]: TEST      R13 1        ; if R13 then PC := 115
100 [-]: JMP       115          ; PC := 115
101 [-]: SELF      R13 R12 K23  ; R14 := R12; R13 := R12[0x6c053909]
102 [-]: CALL      R13 2 2      ; R13 := R13(R14)
103 [-]: MOVE      R7 R13       ; R7 := R13
104 [-]: JMP       115          ; PC := 115
105 [-]: GETTABLE  R13 R10 K24  ; R13 := R10["location"]
106 [-]: SELF      R14 R13 K25  ; R15 := R13; R14 := R13[0x56c01834]
107 [-]: CALL      R14 2 2      ; R14 := R14(R15)
108 [-]: TEST      R14 0        ; if not R14 then PC := 115
109 [-]: JMP       115          ; PC := 115
110 [-]: SELF      R14 R4 K26   ; R15 := R4; R14 := R4[0x3ad9ed31]
111 [-]: MOVE      R16 R13      ; R16 := R13
112 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
113 [-]: GETTABLE  R15 R14 K27  ; R15 := R14["region"]
114 [-]: ADD       R7 R15 K5    ; R7 := R15 + 1.000000
115 [-]: GETGLOBAL R15 K28      ; R15 := 0x0469f296
116 [-]: LOADK     R16 K29      ; R16 := "QUEST_COMPLETE"
117 [-]: CALL      R15 2 2      ; R15 := R15(R16)
118 [-]: GETGLOBAL R16 K30      ; R16 := 0x7ed0a956
119 [-]: LOADK     R17 K31      ; R17 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
120 [-]: CALL      R16 2 2      ; R16 := R16(R17)
121 [-]: GETGLOBAL R17 K30      ; R17 := 0x7ed0a956
122 [-]: LOADK     R18 K32      ; R18 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
123 [-]: CALL      R17 2 2      ; R17 := R17(R18)
124 [-]: LOADNIL   R18 R18      ; R18 := nil
125 [-]: GETGLOBAL R19 K15      ; R19 := 0x89326c93
126 [-]: SELF      R19 R19 K33  ; R20 := R19; R19 := R19[0xfb64e76c]
127 [-]: CALL      R19 2 2      ; R19 := R19(R20)
128 [-]: LOADBOOL  R20 0 0      ; R20 := false
129 [-]: GETGLOBAL R21 K3       ; R21 := 0x3d106989
130 [-]: LOADK     R22 K34      ; R22 := "regions: "
131 [-]: LEN       R23 R5       ; R23 := # R5
132 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
133 [-]: CALL      R21 2 1      ; R21(R22)
134 [-]: LOADK     R21 1        ; R21 := 1.000000
135 [-]: LEN       R22 R5       ; R22 := # R5
136 [-]: LOADK     R23 1        ; R23 := 1.000000
137 [-]: FORPREP   R21 232      ; R21 -= R23; PC := 232
138 [-]: GETTABLE  R25 R5 R24   ; R25 := R5[R24]
139 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
140 [-]: MOVE      R27 R25      ; R27 := R25
141 [-]: CALL      R26 2 2      ; R26 := R26(R27)
142 [-]: TEST      R26 1        ; if R26 then PC := 232
143 [-]: JMP       232          ; PC := 232
144 [-]: GETGLOBAL R26 K35      ; R26 := 0xcfc01047
145 [-]: GETTABLE  R27 R25 K36  ; R27 := R25["challenges"]
146 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
147 [-]: JMP       230          ; PC := 230
148 [-]: GETGLOBAL R31 K37      ; R31 := 0xba7dfcd2
149 [-]: SELF      R31 R31 K38  ; R32 := R31; R31 := R31[0xd87c0114]
150 [-]: SELF      R33 R30 K39  ; R34 := R30; R33 := R30[0xe223e2b1]
151 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
152 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
153 [-]: SELF      R32 R30 K40  ; R33 := R30; R32 := R30[0x2f5d21d2]
154 [-]: CALL      R32 2 2      ; R32 := R32(R33)
155 [-]: LE        1 R32 R31    ; if R32 <= R31 then PC := 158
156 [-]: JMP       158          ; PC := 158
157 [-]: LOADBOOL  R33 0 1      ; R33 := false; PC := 158
158 [-]: LOADBOOL  R33 1 0      ; R33 := true
159 [-]: TEST      R33 1        ; if R33 then PC := 230
160 [-]: JMP       230          ; PC := 230
161 [-]: TEST      R6 0         ; if not R6 then PC := 169
162 [-]: JMP       169          ; PC := 169
163 [-]: EQ        1 R24 R7     ; if R24 == R7 then PC := 169
164 [-]: JMP       169          ; PC := 169
165 [-]: SELF      R34 R30 K41  ; R35 := R30; R34 := R30[0xf4ba463e]
166 [-]: CALL      R34 2 2      ; R34 := R34(R35)
167 [-]: TEST      R34 0        ; if not R34 then PC := 230
168 [-]: JMP       230          ; PC := 230
169 [-]: GETGLOBAL R34 K37      ; R34 := 0xba7dfcd2
170 [-]: SELF      R34 R34 K42  ; R35 := R34; R34 := R34[0x9252175f]
171 [-]: GETGLOBAL R36 K15      ; R36 := 0x89326c93
172 [-]: SELF      R36 R36 K43  ; R37 := R36; R36 := R36[0x765dad71]
173 [-]: GETGLOBAL R38 K44      ; R38 := 0x88efc25e
174 [-]: MOVE      R39 R30      ; R39 := R30
175 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
176 [-]: CALL      R36 0 0      ; R36,... := R36(R37,...)
177 [-]: CALL      R34 0 1      ; R34(R35,...)
178 [-]: GETGLOBAL R34 K2       ; R34 := 0x7b998233
179 [-]: MOVE      R35 R19      ; R35 := R19
180 [-]: CALL      R34 2 2      ; R34 := R34(R35)
181 [-]: TEST      R34 1        ; if R34 then PC := 230
182 [-]: JMP       230          ; PC := 230
183 [-]: SELF      R34 R30 K45  ; R35 := R30; R34 := R30[0xd8e82278]
184 [-]: CALL      R34 2 2      ; R34 := R34(R35)
185 [-]: EQ        0 R34 R15    ; if R34 ~= R15 then PC := 230
186 [-]: JMP       230          ; PC := 230
187 [-]: EQ        0 R18 K46    ; if R18 ~= nil then PC := 194
188 [-]: JMP       194          ; PC := 194
189 [-]: SELF      R34 R3 K47   ; R35 := R3; R34 := R3[0x25a6e75e]
190 [-]: CALL      R34 2 2      ; R34 := R34(R35)
191 [-]: SELF      R34 R34 K48  ; R35 := R34; R34 := R34[0xe9768ed0]
192 [-]: CALL      R34 2 2      ; R34 := R34(R35)
193 [-]: MOVE      R18 R34      ; R18 := R34
194 [-]: SELF      R34 R30 K49  ; R35 := R30; R34 := R30[0xcac7abc9]
195 [-]: CALL      R34 2 2      ; R34 := R34(R35)
196 [-]: GETGLOBAL R35 K50      ; R35 := 0xc8802016
197 [-]: MOVE      R36 R18      ; R36 := R18
198 [-]: CALL      R35 2 4      ; R35,R36,R37 := R35(R36)
199 [-]: JMP       228          ; PC := 228
200 [-]: GETTABLE  R40 R39 K51  ; R40 := R39["mItemType"]
201 [-]: EQ        0 R34 R40    ; if R34 ~= R40 then PC := 215
202 [-]: JMP       215          ; PC := 215
203 [-]: GETTABLE  R40 R39 K52  ; R40 := R39["mCompleted"]
204 [-]: TEST      R40 0        ; if not R40 then PC := 215
205 [-]: JMP       215          ; PC := 215
206 [-]: GETGLOBAL R40 K37      ; R40 := 0xba7dfcd2
207 [-]: SELF      R40 R40 K53  ; R41 := R40; R40 := R40[0xf056b179]
208 [-]: MOVE      R42 R19      ; R42 := R19
209 [-]: MOVE      R43 R15      ; R43 := R15
210 [-]: LOADNIL   R44 R44      ; R44 := nil
211 [-]: GETTABLE  R45 R39 K51  ; R45 := R39["mItemType"]
212 [-]: CALL      R40 6 1      ; R40(R41,R42,R43,R44,R45)
213 [-]: LOADBOOL  R20 1 0      ; R20 := true
214 [-]: JMP       228          ; PC := 228
215 [-]: EQ        0 R34 R17    ; if R34 ~= R17 then PC := 228
216 [-]: JMP       228          ; PC := 228
217 [-]: GETTABLE  R40 R39 K51  ; R40 := R39["mItemType"]
218 [-]: EQ        0 R40 R16    ; if R40 ~= R16 then PC := 228
219 [-]: JMP       228          ; PC := 228
220 [-]: GETGLOBAL R40 K37      ; R40 := 0xba7dfcd2
221 [-]: SELF      R40 R40 K53  ; R41 := R40; R40 := R40[0xf056b179]
222 [-]: MOVE      R42 R19      ; R42 := R19
223 [-]: MOVE      R43 R15      ; R43 := R15
224 [-]: LOADNIL   R44 R44      ; R44 := nil
225 [-]: MOVE      R45 R17      ; R45 := R17
226 [-]: CALL      R40 6 1      ; R40(R41,R42,R43,R44,R45)
227 [-]: LOADBOOL  R20 1 0      ; R20 := true
228 [-]: TFORLOOP  R35 2        ; R38,R39 :=  R35(R36,R37); if R38 ~= nil then begin PC = 200; R37 := R38 end
229 [-]: JMP       200          ; PC := 200
230 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 148; R28 := R29 end
231 [-]: JMP       148          ; PC := 148
232 [-]: FORLOOP   R21 138      ; R21 += R23; if R21 <= R22 then begin PC := 138; R24 := R21 end
233 [-]: GETUPVAL  R40 U1       ; R40 := U1
234 [-]: EQ        0 R40 K46    ; if R40 ~= nil then PC := 240
235 [-]: JMP       240          ; PC := 240
236 [-]: GETUPVAL  R40 U0       ; R40 := U0
237 [-]: GETTABLE  R40 R40 K54  ; R40 := R40[0xc00479a5]
238 [-]: CALL      R40 1 2      ; R40 := R40()
239 [-]: SETUPVAL  R40 U1       ; U82 := R1
240 [-]: GETUPVAL  R40 U2       ; R40 := U2
241 [-]: CALL      R40 1 1      ; R40()
242 [-]: GETGLOBAL R40 K55      ; R40 := 0x0032441c
243 [-]: GETTABLE  R40 R40 K56  ; R40 := R40["PlayedFightingGame"]
244 [-]: TEST      R40 0        ; if not R40 then PC := 258
245 [-]: JMP       258          ; PC := 258
246 [-]: GETGLOBAL R40 K37      ; R40 := 0xba7dfcd2
247 [-]: SELF      R40 R40 K53  ; R41 := R40; R40 := R40[0xf056b179]
248 [-]: MOVE      R42 R19      ; R42 := R19
249 [-]: GETGLOBAL R43 K28      ; R43 := 0x0469f296
250 [-]: LOADK     R44 K57      ; R44 := "PLAY_MINIGAME"
251 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
252 [-]: CALL      R40 0 1      ; R40(R41,...)
253 [-]: GETGLOBAL R40 K58      ; R40 := 0x25d99d89
254 [-]: SELF      R40 R40 K59  ; R41 := R40; R40 := R40[0xd723c617]
255 [-]: CALL      R40 2 1      ; R40(R41)
256 [-]: GETGLOBAL R40 K55      ; R40 := 0x0032441c
257 [-]: SETTABLE  R40 K56 K46  ; R40["PlayedFightingGame"] := nil
258 [-]: GETGLOBAL R40 K28      ; R40 := 0x0469f296
259 [-]: LOADK     R41 K60      ; R41 := "LORE_FRAGMENT_SCAN"
260 [-]: CALL      R40 2 2      ; R40 := R40(R41)
261 [-]: GETGLOBAL R41 K37      ; R41 := 0xba7dfcd2
262 [-]: SELF      R41 R41 K38  ; R42 := R41; R41 := R41[0xd87c0114]
263 [-]: LOADK     R43 K61      ; R43 := "MPCephFragments"
264 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
265 [-]: SELF      R42 R3 K47   ; R43 := R3; R42 := R3[0x25a6e75e]
266 [-]: CALL      R42 2 2      ; R42 := R42(R43)
267 [-]: SELF      R42 R42 K62  ; R43 := R42; R42 := R42[0x2b7da058]
268 [-]: CALL      R42 2 2      ; R42 := R42(R43)
269 [-]: GETGLOBAL R43 K35      ; R43 := 0xcfc01047
270 [-]: MOVE      R44 R42      ; R44 := R42
271 [-]: CALL      R43 2 4      ; R43,R44,R45 := R43(R44)
272 [-]: JMP       288          ; PC := 288
273 [-]: GETTABLE  R48 R47 K63  ; R48 := R47["mRegion"]
274 [-]: EQ        0 R48 K64    ; if R48 ~= "/Lotus/Language/Locations/Mars" then PC := 288
275 [-]: JMP       288          ; PC := 288
276 [-]: GETTABLE  R48 R47 K65  ; R48 := R47["mItemCount"]
277 [-]: SUB       R48 R48 R41  ; R48 := R48 - R41
278 [-]: LT        0 K66 R48    ; if 0.000000 >= R48 then PC := 288
279 [-]: JMP       288          ; PC := 288
280 [-]: GETGLOBAL R49 K37      ; R49 := 0xba7dfcd2
281 [-]: SELF      R49 R49 K67  ; R50 := R49; R49 := R49[0xd8da7235]
282 [-]: MOVE      R51 R19      ; R51 := R19
283 [-]: MOVE      R52 R40      ; R52 := R40
284 [-]: MOVE      R53 R48      ; R53 := R48
285 [-]: CALL      R49 5 1      ; R49(R50,R51,R52,R53)
286 [-]: LOADBOOL  R20 1 0      ; R20 := true
287 [-]: JMP       290          ; PC := 290
288 [-]: TFORLOOP  R43 2        ; R46,R47 :=  R43(R44,R45); if R46 ~= nil then begin PC = 273; R45 := R46 end
289 [-]: JMP       273          ; PC := 273
290 [-]: TEST      R20 0        ; if not R20 then PC := 294
291 [-]: JMP       294          ; PC := 294
292 [-]: SELF      R49 R3 K59   ; R50 := R3; R49 := R3[0xd723c617]
293 [-]: CALL      R49 2 1      ; R49(R50)
294 [-]: GETGLOBAL R49 K68      ; R49 := _T
295 [-]: GETTABLE  R49 R49 K69  ; R49 := R49["CachedConstructionProjects"]
296 [-]: TEST      R49 1        ; if R49 then PC := 303
297 [-]: JMP       303          ; PC := 303
298 [-]: GETGLOBAL R49 K68      ; R49 := _T
299 [-]: GETUPVAL  R50 U3       ; R50 := U3
300 [-]: GETTABLE  R50 R50 K70  ; R50 := R50[0xe8ee3de5]
301 [-]: CALL      R50 1 2      ; R50 := R50()
302 [-]: SETTABLE  R49 K69 R50  ; R49["CachedConstructionProjects"] := R50
303 [-]: GETGLOBAL R49 K68      ; R49 := _T
304 [-]: GETTABLE  R49 R49 K69  ; R49 := R49["CachedConstructionProjects"]
305 [-]: LOADK     R50 1        ; R50 := 1.000000
306 [-]: LEN       R51 R49      ; R51 := # R49
307 [-]: LOADK     R52 1        ; R52 := 1.000000
308 [-]: FORPREP   R50 364      ; R50 -= R52; PC := 364
309 [-]: GETTABLE  R54 R49 R53  ; R54 := R49[R53]
310 [-]: GETTABLE  R55 R54 K71  ; R55 := R54["goalId"]
311 [-]: GETTABLE  R56 R54 K72  ; R56 := R54["progress"]
312 [-]: EQ        0 R56 K66    ; if R56 ~= 0.000000 then PC := 364
313 [-]: JMP       364          ; PC := 364
314 [-]: GETTABLE  R56 R54 K73  ; R56 := R54["info"]
315 [-]: GETTABLE  R57 R56 K74  ; R57 := R56["mTasks"]
316 [-]: LOADBOOL  R58 1 0      ; R58 := true
317 [-]: GETGLOBAL R59 K35      ; R59 := 0xcfc01047
318 [-]: MOVE      R60 R57      ; R60 := R57
319 [-]: CALL      R59 2 4      ; R59,R60,R61 := R59(R60)
320 [-]: JMP       355          ; PC := 355
321 [-]: GETGLOBAL R64 K2       ; R64 := 0x7b998233
322 [-]: MOVE      R65 R63      ; R65 := R63
323 [-]: CALL      R64 2 2      ; R64 := R64(R65)
324 [-]: TEST      R64 1        ; if R64 then PC := 355
325 [-]: JMP       355          ; PC := 355
326 [-]: GETGLOBAL R64 K37      ; R64 := 0xba7dfcd2
327 [-]: SELF      R64 R64 K38  ; R65 := R64; R64 := R64[0xd87c0114]
328 [-]: SELF      R66 R63 K39  ; R67 := R63; R66 := R63[0xe223e2b1]
329 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
330 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
331 [-]: GETGLOBAL R65 K22      ; R65 := 0xb009bbc6
332 [-]: MOVE      R66 R63      ; R66 := R63
333 [-]: CALL      R65 2 2      ; R65 := R65(R66)
334 [-]: SELF      R66 R65 K40  ; R67 := R65; R66 := R65[0x2f5d21d2]
335 [-]: CALL      R66 2 2      ; R66 := R66(R67)
336 [-]: LT        0 R64 R66    ; if R64 >= R66 then PC := 355
337 [-]: JMP       355          ; PC := 355
338 [-]: GETGLOBAL R67 K15      ; R67 := 0x89326c93
339 [-]: SELF      R67 R67 K43  ; R68 := R67; R67 := R67[0x765dad71]
340 [-]: GETGLOBAL R69 K44      ; R69 := 0x88efc25e
341 [-]: MOVE      R70 R63      ; R70 := R63
342 [-]: CALL      R69 2 0      ; R69,... := R69(R70)
343 [-]: CALL      R67 0 2      ; R67 := R67(R68,...)
344 [-]: GETGLOBAL R68 K37      ; R68 := 0xba7dfcd2
345 [-]: SELF      R68 R68 K42  ; R69 := R68; R68 := R68[0x9252175f]
346 [-]: MOVE      R70 R67      ; R70 := R67
347 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
348 [-]: TEST      R68 1        ; if R68 then PC := 354
349 [-]: JMP       354          ; PC := 354
350 [-]: GETGLOBAL R68 K15      ; R68 := 0x89326c93
351 [-]: SELF      R68 R68 K75  ; R69 := R68; R68 := R68[0x59c96e77]
352 [-]: MOVE      R70 R67      ; R70 := R67
353 [-]: CALL      R68 3 1      ; R68(R69,R70)
354 [-]: LOADBOOL  R58 0 0      ; R58 := false
355 [-]: TFORLOOP  R59 2        ; R62,R63 :=  R59(R60,R61); if R62 ~= nil then begin PC = 321; R61 := R62 end
356 [-]: JMP       321          ; PC := 321
357 [-]: TEST      R58 0        ; if not R58 then PC := 364
358 [-]: JMP       364          ; PC := 364
359 [-]: SETUPVAL  R54 U4       ; U82 := R4
360 [-]: SELF      R68 R3 K76   ; R69 := R3; R68 := R3[0x39ff07d9]
361 [-]: MOVE      R70 R55      ; R70 := R55
362 [-]: LOADK     R71 K77      ; R71 := "OnClaimRelayTasksComplete"
363 [-]: CALL      R68 4 1      ; R68(R69,R70,R71)
364 [-]: FORLOOP   R50 309      ; R50 += R52; if R50 <= R51 then begin PC := 309; R53 := R50 end
365 [-]: RETURN    R0 1         ; return 


; Function #254:
;
; Name:            
; Defined at line: 8290
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #255:
;
; Name:            
; Defined at line: 8294
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x09de914d
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x1fd6abd0]
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x09de914d
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: SETGLOBAL R0 K2        ; mPurchasePopupMovie := R0
 11 [-]: RETURN    R0 1         ; return 


; Function #256:
;
; Name:            
; Defined at line: 8300
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: LOADK     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 11 [-]: GETGLOBAL R2 K3        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ShipDecos"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 18 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 19 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 20 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 21 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 22 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 23 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 24 [-]: SELF      R8 R0 K5     ; R9 := R0; R8 := R0[0x80563238]
 25 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 26 [-]: SELF      R9 R8 K6     ; R10 := R8; R9 := R8[0x911c6241]
 27 [-]: LOADBOOL  R11 1 0      ; R11 := true
 28 [-]: GETUPVAL  R12 U0       ; R12 := U0
 29 [-]: GETTABLE  R12 R12 K7   ; R12 := R12[0x23ddc82a]
 30 [-]: CALL      R12 1 0      ; R12,... := R12()
 31 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 32 [-]: LOADK     R10 1        ; R10 := 1.000000
 33 [-]: LEN       R11 R9       ; R11 := # R9
 34 [-]: LOADK     R12 1        ; R12 := 1.000000
 35 [-]: FORPREP   R10 154      ; R10 -= R12; PC := 154
 36 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 37 [-]: GETTABLE  R14 R14 K8   ; R14 := R14["mPlacedDecos"]
 38 [-]: LOADK     R15 1        ; R15 := 1.000000
 39 [-]: LEN       R16 R14      ; R16 := # R14
 40 [-]: LOADK     R17 1        ; R17 := 1.000000
 41 [-]: FORPREP   R15 153      ; R15 -= R17; PC := 153
 42 [-]: GETTABLE  R19 R14 R18  ; R19 := R14[R18]
 43 [-]: SELF      R20 R19 K9   ; R21 := R19; R20 := R19[0xf537cfc7]
 44 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 45 [-]: GETGLOBAL R21 K3       ; R21 := _T
 46 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["ShipDecos"]
 47 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
 48 [-]: LOADBOOL  R22 0 0      ; R22 := false
 49 [-]: GETGLOBAL R23 K2       ; R23 := 0x7b998233
 50 [-]: MOVE      R24 R21      ; R24 := R21
 51 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 52 [-]: TEST      R23 1        ; if R23 then PC := 138
 53 [-]: JMP       138          ; PC := 138
 54 [-]: SELF      R23 R21 K10  ; R24 := R21; R23 := R21[0xf2deaf69]
 55 [-]: GETGLOBAL R25 K11      ; R25 := 0x10828333
 56 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
 57 [-]: TEST      R23 0        ; if not R23 then PC := 138
 58 [-]: JMP       138          ; PC := 138
 59 [-]: GETTABLE  R23 R19 K12  ; R23 := R19["customizationInfo"]
 60 [-]: GETTABLE  R24 R23 K13  ; R24 := R23["mLoadOutType"]
 61 [-]: EQ        1 R24 K15    ; if R24 == 8.000000 then PC := 75
 62 [-]: JMP       75           ; PC := 75
 63 [-]: GETTABLE  R25 R23 K16  ; R25 := R23["mLoadOutPreset"]
 64 [-]: SELF      R25 R25 K17  ; R26 := R25; R25 := R25[0x0384916a]
 65 [-]: CALL      R25 2 2      ; R25 := R25(R26)
 66 [-]: TEST      R25 0        ; if not R25 then PC := 75
 67 [-]: JMP       75           ; PC := 75
 68 [-]: GETTABLE  R25 R23 K16  ; R25 := R23["mLoadOutPreset"]
 69 [-]: GETTABLE  R25 R25 K18  ; R25 := R25["mItemId"]
 70 [-]: GETTABLE  R25 R25 K19  ; R25 := R25["mId"]
 71 [-]: GETGLOBAL R26 K14      ; R26 := 0x6c97a788
 72 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["InvalidItemID"]
 73 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 87
 74 [-]: JMP       87           ; PC := 87
 75 [-]: GETTABLE  R25 R23 K21  ; R25 := R23["mVehiclePreset"]
 76 [-]: SELF      R25 R25 K17  ; R26 := R25; R25 := R25[0x0384916a]
 77 [-]: CALL      R25 2 2      ; R25 := R25(R26)
 78 [-]: TEST      R25 0        ; if not R25 then PC := 138
 79 [-]: JMP       138          ; PC := 138
 80 [-]: GETTABLE  R25 R23 K21  ; R25 := R23["mVehiclePreset"]
 81 [-]: GETTABLE  R25 R25 K18  ; R25 := R25["mItemId"]
 82 [-]: GETTABLE  R25 R25 K19  ; R25 := R25["mId"]
 83 [-]: GETGLOBAL R26 K14      ; R26 := 0x6c97a788
 84 [-]: GETTABLE  R26 R26 K20  ; R26 := R26["InvalidItemID"]
 85 [-]: EQ        1 R25 R26    ; if R25 == R26 then PC := 138
 86 [-]: JMP       138          ; PC := 138
 87 [-]: GETTABLE  R25 R23 K16  ; R25 := R23["mLoadOutPreset"]
 88 [-]: GETTABLE  R25 R25 K18  ; R25 := R25["mItemId"]
 89 [-]: GETTABLE  R25 R25 K19  ; R25 := R25["mId"]
 90 [-]: GETTABLE  R26 R23 K21  ; R26 := R23["mVehiclePreset"]
 91 [-]: GETTABLE  R26 R26 K18  ; R26 := R26["mItemId"]
 92 [-]: GETTABLE  R26 R26 K19  ; R26 := R26["mId"]
 93 [-]: MOVE      R27 R24      ; R27 := R24
 94 [-]: CONCAT    R25 R25 R27  ; R25 := R25 .. R26 .. R27
 95 [-]: GETTABLE  R26 R2 R25   ; R26 := R2[R25]
 96 [-]: EQ        0 R26 K22    ; if R26 ~= nil then PC := 113
 97 [-]: JMP       113          ; PC := 113
 98 [-]: GETGLOBAL R26 K23      ; R26 := 0x33bdd652
 99 [-]: GETTABLE  R26 R26 K24  ; R26 := R26[0x23d5322f]
100 [-]: MOVE      R27 R5       ; R27 := R5
101 [-]: NEWTABLE  R28 0 3      ; R28 := {}
102 [-]: GETTABLE  R29 R23 K16  ; R29 := R23["mLoadOutPreset"]
103 [-]: SELF      R29 R29 K26  ; R30 := R29; R29 := R29[0x8f89d633]
104 [-]: CALL      R29 2 2      ; R29 := R29(R30)
105 [-]: SETTABLE  R28 K25 R29  ; R28["Preset"] := R29
106 [-]: GETTABLE  R29 R23 K21  ; R29 := R23["mVehiclePreset"]
107 [-]: SELF      R29 R29 K26  ; R30 := R29; R29 := R29[0x8f89d633]
108 [-]: CALL      R29 2 2      ; R29 := R29(R30)
109 [-]: SETTABLE  R28 K27 R29  ; R28["VehiclePreset"] := R29
110 [-]: SETTABLE  R28 K28 R24  ; R28["LoadOutType"] := R24
111 [-]: CALL      R26 3 1      ; R26(R27,R28)
112 [-]: SETTABLE  R2 R25 K29   ; R2[R25] := 1.000000
113 [-]: GETTABLE  R26 R14 R18  ; R26 := R14[R18]
114 [-]: GETTABLE  R26 R26 K12  ; R26 := R26["customizationInfo"]
115 [-]: GETTABLE  R26 R26 K16  ; R26 := R26["mLoadOutPreset"]
116 [-]: SELF      R26 R26 K30  ; R27 := R26; R26 := R26[0xbc051a36]
117 [-]: LOADBOOL  R28 0 0      ; R28 := false
118 [-]: CALL      R26 3 1      ; R26(R27,R28)
119 [-]: GETTABLE  R26 R14 R18  ; R26 := R14[R18]
120 [-]: GETTABLE  R26 R26 K12  ; R26 := R26["customizationInfo"]
121 [-]: GETTABLE  R26 R26 K21  ; R26 := R26["mVehiclePreset"]
122 [-]: SELF      R26 R26 K30  ; R27 := R26; R26 := R26[0xbc051a36]
123 [-]: LOADBOOL  R28 0 0      ; R28 := false
124 [-]: CALL      R26 3 1      ; R26(R27,R28)
125 [-]: SELF      R26 R21 K31  ; R27 := R21; R26 := R21[0xf5b90b23]
126 [-]: CALL      R26 2 2      ; R26 := R26(R27)
127 [-]: GETTABLE  R27 R14 R18  ; R27 := R14[R18]
128 [-]: GETTABLE  R27 R27 K12  ; R27 := R27["customizationInfo"]
129 [-]: GETTABLE  R27 R27 K16  ; R27 := R27["mLoadOutPreset"]
130 [-]: SETTABLE  R26 K16 R27  ; R26[0xa5c556b9] := R27
131 [-]: SELF      R26 R21 K31  ; R27 := R21; R26 := R21[0xf5b90b23]
132 [-]: CALL      R26 2 2      ; R26 := R26(R27)
133 [-]: GETTABLE  R27 R14 R18  ; R27 := R14[R18]
134 [-]: GETTABLE  R27 R27 K12  ; R27 := R27["customizationInfo"]
135 [-]: GETTABLE  R27 R27 K21  ; R27 := R27["mVehiclePreset"]
136 [-]: SETTABLE  R26 K21 R27  ; R26["mVehiclePreset"] := R27
137 [-]: LOADBOOL  R22 1 0      ; R22 := true
138 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
139 [-]: MOVE      R27 R21      ; R27 := R21
140 [-]: CALL      R26 2 2      ; R26 := R26(R27)
141 [-]: TEST      R26 1        ; if R26 then PC := 153
142 [-]: JMP       153          ; PC := 153
143 [-]: SELF      R26 R21 K10  ; R27 := R21; R26 := R21[0xf2deaf69]
144 [-]: GETGLOBAL R28 K11      ; R28 := 0x10828333
145 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
146 [-]: TEST      R26 0        ; if not R26 then PC := 153
147 [-]: JMP       153          ; PC := 153
148 [-]: TEST      R22 0        ; if not R22 then PC := 153
149 [-]: JMP       153          ; PC := 153
150 [-]: LEN       R26 R1       ; R26 := # R1
151 [-]: ADD       R26 R26 K29  ; R26 := R26 + 1.000000
152 [-]: SETTABLE  R1 R26 R21   ; R1[R26] := R21
153 [-]: FORLOOP   R15 42       ; R15 += R17; if R15 <= R16 then begin PC := 42; R18 := R15 end
154 [-]: FORLOOP   R10 36       ; R10 += R12; if R10 <= R11 then begin PC := 36; R13 := R10 end
155 [-]: LEN       R26 R1       ; R26 := # R1
156 [-]: EQ        1 R26 K32    ; if R26 == 0.000000 then PC := 168
157 [-]: JMP       168          ; PC := 168
158 [-]: GETUPVAL  R26 U1       ; R26 := U1
159 [-]: GETTABLE  R26 R26 K33  ; R26 := R26[0x8664c443]
160 [-]: LOADNIL   R27 R27      ; R27 := nil
161 [-]: CALL      R26 2 1      ; R26(R27)
162 [-]: GETGLOBAL R26 K3       ; R26 := _T
163 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["ActionFigureLoadOutLoader"]
164 [-]: SELF      R26 R26 K35  ; R27 := R26; R26 := R26[0x382439cd]
165 [-]: MOVE      R28 R1       ; R28 := R1
166 [-]: MOVE      R29 R5       ; R29 := R5
167 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
168 [-]: RETURN    R0 1         ; return 


; Function #257:
;
; Name:            
; Defined at line: 8362
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #258:
;
; Name:            
; Defined at line: 8365
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #259:
;
; Name:            
; Defined at line: 8368
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["KEY_TAG"]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0xb009bbc6
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K2        ; R5 := ""
  7 [-]: GETUPVAL  R6 U0        ; R6 := U0
  8 [-]: GETTABLE  R6 R6 K3     ; R6 := R6[0x5e35d4d6]
  9 [-]: CALL      R6 1 2       ; R6 := R6()
 10 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 11 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x04981ab3]
 12 [-]: MOVE      R8 R0        ; R8 := R0
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: EQ        1 R7 K6      ; if R7 == "dojo" then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 17 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x04981ab3]
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: EQ        0 R7 K7      ; if R7 ~= "drydock" then PC := 39
 21 [-]: JMP       39           ; PC := 39
 22 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 23 [-]: GETTABLE  R7 R7 K5     ; R7 := R7[0x04981ab3]
 24 [-]: MOVE      R8 R0        ; R8 := R0
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: EQ        0 R7 K7      ; if R7 ~= "drydock" then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETGLOBAL R7 K8        ; R7 := 0x0032441c
 29 [-]: SETTABLE  R7 K9 K10    ; R7["ForceTeleportToDrydock"] := true
 30 [-]: GETGLOBAL R7 K11       ; R7 := _T
 31 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
 32 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
 33 [-]: LOADK     R9 K14       ; R9 := "InitiateDojoVisit"
 34 [-]: LOADK     R10 K2       ; R10 := ""
 35 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 36 [-]: LOADBOOL  R7 1 0       ; R7 := true
 37 [-]: RETURN    R7 2         ; return R7
 38 [-]: JMP       62           ; PC := 62
 39 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 40 [-]: MOVE      R8 R4        ; R8 := R4
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 54
 43 [-]: JMP       54           ; PC := 54
 44 [-]: SELF      R7 R4 K16    ; R8 := R4; R7 := R4[0xf2deaf69]
 45 [-]: GETGLOBAL R9 K17       ; R9 := gKeyItemType
 46 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 47 [-]: TEST      R7 0         ; if not R7 then PC := 54
 48 [-]: JMP       54           ; PC := 54
 49 [-]: SELF      R7 R4 K18    ; R8 := R4; R7 := R4[0xef893aec]
 50 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 51 [-]: MOVE      R2 R7        ; R2 := R7
 52 [-]: MOVE      R5 R0        ; R5 := R0
 53 [-]: JMP       62           ; PC := 62
 54 [-]: SELF      R7 R6 K19    ; R8 := R6; R7 := R6[0x3ad9ed31]
 55 [-]: GETGLOBAL R9 K20       ; R9 := 0x0469f296
 56 [-]: MOVE      R10 R0       ; R10 := R0
 57 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 58 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 59 [-]: GETTABLE  R2 R7 K21    ; R2 := R7["mission"]
 60 [-]: LOADK     R3 K2        ; R3 := ""
 61 [-]: LOADNIL   R5 R5        ; R5 := nil
 62 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 63 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["levelOverride"]
 64 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 65 [-]: TEST      R7 0         ; if not R7 then PC := 84
 66 [-]: JMP       84           ; PC := 84
 67 [-]: TEST      R0 0         ; if not R0 then PC := 84
 68 [-]: JMP       84           ; PC := 84
 69 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 70 [-]: GETTABLE  R7 R7 K23    ; R7 := R7[0xa5c556b9]
 71 [-]: MOVE      R8 R0        ; R8 := R0
 72 [-]: LOADK     R9 K24       ; R9 := ".level"
 73 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 74 [-]: TEST      R7 0         ; if not R7 then PC := 84
 75 [-]: JMP       84           ; PC := 84
 76 [-]: GETGLOBAL R7 K25       ; R7 := 0x6c97a788
 77 [-]: GETTABLE  R7 R7 K26    ; R7 := R7[0x6e0e9f85]
 78 [-]: CALL      R7 1 2       ; R7 := R7()
 79 [-]: MOVE      R2 R7        ; R2 := R7
 80 [-]: GETGLOBAL R7 K27       ; R7 := 0x7ed0a956
 81 [-]: MOVE      R8 R0        ; R8 := R0
 82 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 83 [-]: SETTABLE  R2 K22 R7    ; R2["levelOverride"] := R7
 84 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 85 [-]: GETTABLE  R8 R2 K22    ; R8 := R2["levelOverride"]
 86 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 87 [-]: TEST      R7 1         ; if R7 then PC := 220
 88 [-]: JMP       220          ; PC := 220
 89 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 90 [-]: MOVE      R8 R1        ; R8 := R1
 91 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 92 [-]: TEST      R7 1         ; if R7 then PC := 98
 93 [-]: JMP       98           ; PC := 98
 94 [-]: GETGLOBAL R7 K27       ; R7 := 0x7ed0a956
 95 [-]: MOVE      R8 R1        ; R8 := R1
 96 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 97 [-]: SETTABLE  R2 K28 R7    ; R2["keyChainName"] := R7
 98 [-]: EQ        0 R5 K29     ; if R5 ~= nil then PC := 116
 99 [-]: JMP       116          ; PC := 116
100 [-]: GETTABLE  R7 R2 K30    ; R7 := R2["missionType"]
101 [-]: EQ        0 R7 K31     ; if R7 ~= 31.000000 then PC := 116
102 [-]: JMP       116          ; PC := 116
103 [-]: GETGLOBAL R7 K11       ; R7 := _T
104 [-]: NEWTABLE  R8 0 2       ; R8 := {}
105 [-]: SETTABLE  R8 K33 K10   ; R8["teleportNeeded"] := true
106 [-]: SETTABLE  R8 K34 R0    ; R8["name"] := R0
107 [-]: SETTABLE  R7 K32 R8    ; R7["RailjackAutoLaunchPending"] := R8
108 [-]: GETGLOBAL R7 K11       ; R7 := _T
109 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
110 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
111 [-]: LOADK     R9 K35       ; R9 := "AutoLaunchRailjackMission"
112 [-]: LOADK     R10 K2       ; R10 := ""
113 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
114 [-]: LOADBOOL  R7 1 0       ; R7 := true
115 [-]: RETURN    R7 2         ; return R7
116 [-]: GETTABLE  R7 R2 K36    ; R7 := R2["soloMode"]
117 [-]: TEST      R7 1         ; if R7 then PC := 153
118 [-]: JMP       153          ; PC := 153
119 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
120 [-]: GETGLOBAL R8 K37       ; R8 := 0xe7f2b02f
121 [-]: SELF      R8 R8 K38    ; R9 := R8; R8 := R8[0x565be9ee]
122 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
123 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
124 [-]: TEST      R7 0         ; if not R7 then PC := 153
125 [-]: JMP       153          ; PC := 153
126 [-]: GETGLOBAL R7 K11       ; R7 := _T
127 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
128 [-]: TEST      R7 0         ; if not R7 then PC := 153
129 [-]: JMP       153          ; PC := 153
130 [-]: GETGLOBAL R7 K11       ; R7 := _T
131 [-]: GETTABLE  R7 R7 K39    ; R7 := R7["gActiveMatchMakingMode"]
132 [-]: GETGLOBAL R8 K11       ; R8 := _T
133 [-]: GETTABLE  R8 R8 K40    ; R8 := R8["MATCHMAKING_OFFLINE_GAMEMODE"]
134 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 153
135 [-]: JMP       153          ; PC := 153
136 [-]: GETGLOBAL R7 K11       ; R7 := _T
137 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
138 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
139 [-]: LOADK     R9 K41       ; R9 := "HostLobby"
140 [-]: LOADK     R10 K2       ; R10 := ""
141 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
142 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
143 [-]: GETGLOBAL R8 K37       ; R8 := 0xe7f2b02f
144 [-]: SELF      R8 R8 K38    ; R9 := R8; R8 := R8[0x565be9ee]
145 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
146 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
147 [-]: TEST      R7 0         ; if not R7 then PC := 153
148 [-]: JMP       153          ; PC := 153
149 [-]: GETGLOBAL R7 K42       ; R7 := 0xcbd666e1
150 [-]: LOADK     R8 0         ; R8 := 0.000000
151 [-]: CALL      R7 2 1       ; R7(R8)
152 [-]: JMP       142          ; PC := 142
153 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
154 [-]: GETTABLE  R7 R7 K23    ; R7 := R7[0xa5c556b9]
155 [-]: MOVE      R8 R0        ; R8 := R0
156 [-]: LOADK     R9 K43       ; R9 := "Wareframe"
157 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
158 [-]: TEST      R7 0         ; if not R7 then PC := 175
159 [-]: JMP       175          ; PC := 175
160 [-]: GETGLOBAL R7 K11       ; R7 := _T
161 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
162 [-]: TEST      R7 0         ; if not R7 then PC := 175
163 [-]: JMP       175          ; PC := 175
164 [-]: GETGLOBAL R7 K11       ; R7 := _T
165 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["SquadOverlay"]
166 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7[0xe4162eed]
167 [-]: LOADK     R9 K44       ; R9 := "LoadAutonomousMultiplayerMission"
168 [-]: MOVE      R10 R0       ; R10 := R0
169 [-]: MOVE      R11 R3       ; R11 := R3
170 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
171 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
172 [-]: LOADBOOL  R7 1 0       ; R7 := true
173 [-]: RETURN    R7 2         ; return R7
174 [-]: JMP       220          ; PC := 220
175 [-]: GETUPVAL  R7 U1        ; R7 := U1
176 [-]: GETTABLE  R7 R7 K45    ; R7 := R7[0x05b69533]
177 [-]: GETGLOBAL R8 K20       ; R8 := 0x0469f296
178 [-]: MOVE      R9 R0        ; R9 := R0
179 [-]: MOVE      R10 R3       ; R10 := R3
180 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
181 [-]: CALL      R8 2 2       ; R8 := R8(R9)
182 [-]: MOVE      R9 R2        ; R9 := R2
183 [-]: GETGLOBAL R10 K27      ; R10 := 0x7ed0a956
184 [-]: MOVE      R11 R5       ; R11 := R5
185 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
186 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
187 [-]: TEST      R7 0         ; if not R7 then PC := 220
188 [-]: JMP       220          ; PC := 220
189 [-]: GETGLOBAL R8 K15       ; R8 := 0x7b998233
190 [-]: GETGLOBAL R9 K37       ; R9 := 0xe7f2b02f
191 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9[0x565be9ee]
192 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
193 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
194 [-]: TEST      R8 1         ; if R8 then PC := 214
195 [-]: JMP       214          ; PC := 214
196 [-]: GETUPVAL  R8 U0        ; R8 := U0
197 [-]: GETTABLE  R8 R8 K46    ; R8 := R8[0x7155f039]
198 [-]: MOVE      R9 R0        ; R9 := R0
199 [-]: MOVE      R10 R3       ; R10 := R3
200 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
201 [-]: MOVE      R10 R6       ; R10 := R6
202 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
203 [-]: GETGLOBAL R9 K37       ; R9 := 0xe7f2b02f
204 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9[0x565be9ee]
205 [-]: CALL      R9 2 2       ; R9 := R9(R10)
206 [-]: SELF      R9 R9 K47    ; R10 := R9; R9 := R9[0xfdd3576f]
207 [-]: CALL      R9 2 2       ; R9 := R9(R10)
208 [-]: SETTABLE  R9 K48 R8    ; R9["gameModeId"] := R8
209 [-]: GETGLOBAL R10 K37      ; R10 := 0xe7f2b02f
210 [-]: SELF      R10 R10 K49  ; R11 := R10; R10 := R10[0xee2f24fc]
211 [-]: MOVE      R12 R9       ; R12 := R9
212 [-]: LOADK     R13 K50      ; R13 := "OnUpdateSessionSettings"
213 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
214 [-]: GETGLOBAL R10 K51      ; R10 := 0x34291f5c
215 [-]: GETTABLE  R10 R10 K52  ; R10 := R10[0x4e0a1dfc]
216 [-]: MOVE      R11 R7       ; R11 := R7
217 [-]: CALL      R10 2 1      ; R10(R11)
218 [-]: LOADBOOL  R10 1 0      ; R10 := true
219 [-]: RETURN    R10 2        ; return R10
220 [-]: LOADBOOL  R10 0 0      ; R10 := false
221 [-]: RETURN    R10 2        ; return R10
222 [-]: RETURN    R0 1         ; return 


; Function #260:
;
; Name:            
; Defined at line: 8436
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #261:
;
; Name:            
; Defined at line: 8440
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K3        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1[0x297e93ca]
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #262:
;
; Name:            
; Defined at line: 8446
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TEST      R0 0         ; if not R0 then PC := 12
  2 [-]: JMP       12           ; PC := 12
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x25d99d89
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xefee6c91]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0x0c9eedd2]
  8 [-]: ADD       R4 R2 K3     ; R4 := R2 + 1.000000
  9 [-]: LOADBOOL  R5 0 0       ; R5 := false
 10 [-]: CALL      R3 3 1       ; R3(R4,R5)
 11 [-]: JMP       73           ; PC := 73
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x7f5022cf
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3[0xa5c556b9]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: LOADK     R5 K6        ; R5 := "No daily retries remaining"
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 44
 18 [-]: JMP       44           ; PC := 44
 19 [-]: GETGLOBAL R3 K0        ; R3 := 0x25d99d89
 20 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xde2d1b82]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4[0x817b1503]
 24 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 25 [-]: MOVE      R6 R3        ; R6 := R3
 26 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 27 [-]: GETGLOBAL R5 K10       ; R5 := 0x603636ad
 28 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
 29 [-]: LOADBOOL  R7 0 0       ; R7 := false
 30 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 31 [-]: GETGLOBAL R6 K4        ; R6 := 0x7f5022cf
 32 [-]: GETTABLE  R6 R6 K12    ; R6 := R6[0xe8072ded]
 33 [-]: MOVE      R7 R5        ; R7 := R5
 34 [-]: MOVE      R8 R4        ; R8 := R4
 35 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 36 [-]: GETUPVAL  R7 U1        ; R7 := U1
 37 [-]: LOADK     R8 0         ; R8 := 0.000000
 38 [-]: CALL      R7 2 1       ; R7(R8)
 39 [-]: GETUPVAL  R7 U2        ; R7 := U2
 40 [-]: GETTABLE  R7 R7 K13    ; R7 := R7[0xe0cba3ca]
 41 [-]: MOVE      R8 R6        ; R8 := R6
 42 [-]: CALL      R7 2 1       ; R7(R8)
 43 [-]: JMP       73           ; PC := 73
 44 [-]: EQ        0 R1 K14     ; if R1 ~= "1" then PC := 58
 45 [-]: JMP       58           ; PC := 58
 46 [-]: GETUPVAL  R7 U1        ; R7 := U1
 47 [-]: LOADK     R8 0         ; R8 := 0.000000
 48 [-]: CALL      R7 2 1       ; R7(R8)
 49 [-]: GETUPVAL  R7 U3        ; R7 := U3
 50 [-]: LOADK     R8 K15       ; R8 := "Platinum"
 51 [-]: LOADK     R9 K16       ; R9 := "0"
 52 [-]: GETGLOBAL R10 K10      ; R10 := 0x603636ad
 53 [-]: LOADK     R11 K17      ; R11 := "/Lotus/Language/Menu/RankupRetry"
 54 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 55 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 56 [-]: CALL      R7 0 1       ; R7(R8,...)
 57 [-]: JMP       73           ; PC := 73
 58 [-]: GETUPVAL  R7 U4        ; R7 := U4
 59 [-]: LT        0 R7 K18     ; if R7 >= 2.000000 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: LOADBOOL  R7 1 0       ; R7 := true
 62 [-]: SETUPVAL  R7 U5        ; U82 := R5
 63 [-]: GETUPVAL  R7 U4        ; R7 := U4
 64 [-]: ADD       R7 R7 K3     ; R7 := R7 + 1.000000
 65 [-]: SETUPVAL  R7 U4        ; U82 := R4
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETGLOBAL R7 K19       ; R7 := 0x3d106989
 68 [-]: LOADK     R8 K20       ; R8 := "Failed to submit training result too many times. Aborting."
 69 [-]: CALL      R7 2 1       ; R7(R8)
 70 [-]: GETUPVAL  R7 U1        ; R7 := U1
 71 [-]: LOADK     R8 0         ; R8 := 0.000000
 72 [-]: CALL      R7 2 1       ; R7(R8)
 73 [-]: RETURN    R0 1         ; return 


; Function #263:
;
; Name:            
; Defined at line: 8476
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x25a6e75e]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mPremiumCredits"]
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0x7773bdcf]
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: LT        0 R0 R1      ; if R0 >= R1 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: LOADK     R1 K4        ; R1 := "Platinum"
 12 [-]: LOADK     R2 K5        ; R2 := "0"
 13 [-]: GETGLOBAL R3 K6        ; R3 := 0x603636ad
 14 [-]: LOADK     R4 K7        ; R4 := "/Lotus/Language/Menu/RankupRetry"
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 17 [-]: CALL      R0 0 1       ; R0(R1,...)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: LOADK     R1 1         ; R1 := 1.000000
 21 [-]: CALL      R0 2 1       ; R0(R1)
 22 [-]: LOADBOOL  R0 1 0       ; R0 := true
 23 [-]: SETUPVAL  R0 U3        ; U82 := R3
 24 [-]: LOADK     R0 0         ; R0 := 0.000000
 25 [-]: SETUPVAL  R0 U4        ; U82 := R4
 26 [-]: RETURN    R0 1         ; return 


; Function #264:
;
; Name:            
; Defined at line: 8488
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #265:
;
; Name:            
; Defined at line: 8492
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: RETURN    R0 1         ; return 


; Function #266:
;
; Name:            
; Defined at line: 8498
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0[0x8c8051c7]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  4 [-]: LOADBOOL  R2 0 0       ; R2 := false
  5 [-]: CALL      R0 3 4       ; R0,R1,R2 := R0(R1,R2)
  6 [-]: TEST      R0 1         ; if R0 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: TEST      R2 0         ; if not R2 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0xf616a184]
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: LOADK     R5 K3        ; R5 := "LevelUpRetryConfirm"
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3[0xe0cba3ca]
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: CALL      R3 2 1       ; R3(R4)
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
 22 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x652b21b9]
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 0         ; if not R3 then PC := 36
 25 [-]: JMP       36           ; PC := 36
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: GETTABLE  R3 R3 K2     ; R3 := R3[0xf616a184]
 28 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 29 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x42b04007]
 30 [-]: LOADK     R6 K8        ; R6 := "/Lotus/Language/Menu/RetrieveLockedWeapons"
 31 [-]: LOADBOOL  R7 0 0       ; R7 := false
 32 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 33 [-]: LOADK     R5 K9        ; R5 := "ConfirmWeaponRetrieve"
 34 [-]: CALL      R3 3 1       ; R3(R4,R5)
 35 [-]: RETURN    R0 1         ; return 
 36 [-]: GETUPVAL  R3 U2        ; R3 := U2
 37 [-]: LOADK     R4 1         ; R4 := 1.000000
 38 [-]: CALL      R3 2 1       ; R3(R4)
 39 [-]: LOADBOOL  R3 1 0       ; R3 := true
 40 [-]: SETUPVAL  R3 U3        ; U82 := R3
 41 [-]: LOADK     R3 0         ; R3 := 0.000000
 42 [-]: SETUPVAL  R3 U4        ; U82 := R4
 43 [-]: RETURN    R0 1         ; return 


; Function #267:
;
; Name:            
; Defined at line: 8520
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["gQueueMailbox"] := true
  3 [-]: RETURN    R0 1         ; return 


; Function #268:
;
; Name:            
; Defined at line: 8524
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #269:
;
; Name:            
; Defined at line: 8528
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ShowingQuitGameDialog"] := nil
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x03f57322
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: EQ        0 R1 K5      ; if R1 ~= 4.000000 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETGLOBAL R1 K6        ; R1 := 0x9ba7909f
  9 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xf37bdbf9]
 10 [-]: GETGLOBAL R3 K8        ; R3 := 0x9e5e1b85
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #270:
;
; Name:            
; Defined at line: 8535
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ShowingQuitGameDialog"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: SETTABLE  R0 K1 K2     ; R0["ShowingQuitGameDialog"] := true
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0[0xdedfded7]
  9 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/QuitGameConfirm"
 10 [-]: LOADK     R2 K5        ; R2 := "QuitGameConfirm"
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: LOADBOOL  R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #271:
;
; Name:            
; Defined at line: 8543
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x600a0ad6]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0xd8140b94]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1[0x6a965652]
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 14 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 15 [-]: SETTABLE  R2 K5 R3     ; R2["NemesisTauntCooldowns"] := R3
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["NemesisTauntCooldowns"]
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Created"]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 22 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["NemesisTauntCooldowns"]
 23 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Created"]
 24 [-]: ADD       R2 R2 K7     ; R2 := R2 + 1200.000000
 25 [-]: GETGLOBAL R3 K8        ; R3 := 0xbe190284
 26 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x715c5d7f]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 45
 29 [-]: JMP       45           ; PC := 45
 30 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 31 [-]: GETGLOBAL R3 K11       ; R3 := 0x0469f296
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xd89d6ea2]
 34 [-]: MOVE      R6 R0        ; R6 := R0
 35 [-]: MOVE      R7 R1        ; R7 := R1
 36 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 37 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 38 [-]: SETTABLE  R2 K10 R3    ; R2["NemesisTaunt"] := R3
 39 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 40 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["NemesisTauntCooldowns"]
 41 [-]: GETGLOBAL R3 K8        ; R3 := 0xbe190284
 42 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x715c5d7f]
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: SETTABLE  R2 K6 R3     ; R2["Created"] := R3
 45 [-]: GETGLOBAL R2 K13       ; R2 := 0x7b998233
 46 [-]: GETGLOBAL R3 K14       ; R3 := 0xcb79539e
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 65
 49 [-]: JMP       65           ; PC := 65
 50 [-]: GETGLOBAL R2 K14       ; R2 := 0xcb79539e
 51 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x8b8fb8b7]
 52 [-]: GETGLOBAL R4 K16       ; R4 := 0x6c97a788
 53 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["NEMESIS_CREATED"]
 54 [-]: GETTABLE  R5 R1 K18    ; R5 := R1["mAgent"]
 55 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5[0xed4e0128]
 56 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 57 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["mKillingSuit"]
 58 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0xed4e0128]
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: LOADK     R7 1         ; R7 := 1.000000
 61 [-]: GETGLOBAL R8 K21       ; R8 := 0xa421af95
 62 [-]: CALL      R8 1 2       ; R8 := R8()
 63 [-]: GETTABLE  R9 R1 K22    ; R9 := R1["mName"]
 64 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 65 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 66 [-]: NEWTABLE  R3 0 6       ; R3 := {}
 67 [-]: SETTABLE  R3 K24 K25   ; R3["IsCreationPopup"] := true
 68 [-]: SETTABLE  R3 K26 K25   ; R3["OpenScreen"] := true
 69 [-]: SETTABLE  R3 K27 K28   ; R3["Header"] := "/Lotus/Language/Kingpins/NemesisPopupHeader"
 70 [-]: GETTABLE  R4 R1 K22    ; R4 := R1["mName"]
 71 [-]: SETTABLE  R3 K29 R4    ; R3["Name"] := R4
 72 [-]: GETTABLE  R4 R1 K31    ; R4 := R1["mFaction"]
 73 [-]: SETTABLE  R3 K30 R4    ; R3["FactionId"] := R4
 74 [-]: SETTABLE  R3 K32 K33   ; R3["Description"] := "/Lotus/Language/Kingpins/NemesisPopupBirthLabel"
 75 [-]: SETTABLE  R2 K23 R3    ; R2["NemesisPopup_Info"] := R3
 76 [-]: RETURN    R0 1         ; return 


; Function #272:
;
; Name:            
; Defined at line: 8573
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mFoundryNotification
  2 [-]: SETTABLE  R0 K1 K2     ; R0["Refresh"] := true
  3 [-]: RETURN    R0 1         ; return 


