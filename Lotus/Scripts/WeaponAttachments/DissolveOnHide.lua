
main <?:0,0> (37 instructions, 148 bytes at 00000211637FEFA0)
0+ params, 6 slots, 0 upvalues, 0 locals, 10 constants, 6 functions
	1	[12]	GETGLOBAL	R0 K0 ; R0 := 0x0469f296
	2	[12]	LOADK    	R1 K1 ; R1 := "PinchAtten"
	3	[12]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[13]	GETGLOBAL	R1 K0 ; R1 := 0x0469f296
	5	[13]	LOADK    	R2 K2 ; R2 := "PinchLength"
	6	[13]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[14]	GETGLOBAL	R2 K0 ; R2 := 0x0469f296
	8	[14]	LOADK    	R3 K3 ; R3 := "AxisVector"
	9	[14]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[15]	GETGLOBAL	R3 K0 ; R3 := 0x0469f296
	11	[15]	LOADK    	R4 K4 ; R4 := "Size"
	12	[15]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[34]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	14	[34]	MOVE     	R0 R1 ; R0 := R1
	15	[34]	MOVE     	R0 R2 ; R0 := R2
	16	[126]	CLOSURE  	R5 1 ; R5 := closure(Function #2)
	17	[126]	MOVE     	R0 R4 ; R0 := R4
	18	[126]	MOVE     	R0 R1 ; R0 := R1
	19	[126]	MOVE     	R0 R3 ; R0 := R3
	20	[126]	MOVE     	R0 R2 ; R0 := R2
	21	[126]	MOVE     	R0 R0 ; R0 := R0
	22	[36]	SETGLOBAL	R5 K5 ; DissolveOnHide := R5
	23	[211]	CLOSURE  	R5 2 ; R5 := closure(Function #3)
	24	[211]	MOVE     	R0 R0 ; R0 := R0
	25	[211]	MOVE     	R0 R4 ; R0 := R4
	26	[211]	MOVE     	R0 R1 ; R0 := R1
	27	[211]	MOVE     	R0 R3 ; R0 := R3
	28	[211]	MOVE     	R0 R2 ; R0 := R2
	29	[128]	SETGLOBAL	R5 K6 ; MaterializeOnShow := R5
	30	[241]	CLOSURE  	R5 3 ; R5 := closure(Function #4)
	31	[213]	SETGLOBAL	R5 K7 ; InstantHolster := R5
	32	[247]	CLOSURE  	R5 4 ; R5 := closure(Function #5)
	33	[243]	SETGLOBAL	R5 K8 ; ForceHideWhenHolstered := R5
	34	[256]	CLOSURE  	R5 5 ; R5 := closure(Function #6)
	35	[256]	MOVE     	R0 R0 ; R0 := R0
	36	[249]	SETGLOBAL	R5 K9 ; TestFade := R5
	37	[256]	RETURN   	R0 1 ; return 


function #1 <?:17,34> (54 instructions, 216 bytes at 0000021174940800)
1 param, 8 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[18]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0x819abd48]
	2	[18]	LOADK    	R3 := 0.000000
	3	[18]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	4	[19]	LOADK    	R2 := 1.000000
	5	[20]	GETGLOBAL	R3 K1 ; R3 := 0xa421af95
	6	[20]	LOADK    	R4 := 0.000000
	7	[20]	LOADK    	R5 := 0.000000
	8	[20]	LOADK    	R6 := 1.000000
	9	[20]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	10	[21]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	11	[21]	MOVE     	R5 R1 ; R5 := R1
	12	[21]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[21]	TEST     	R4 1 ; if R4 then PC := 35
	14	[21]	JMP      	35 ; PC := 35
	15	[22]	SELF     	R4 R1 K3 ; R5 := R1; R4 := R1[0xae79653b]
	16	[22]	GETUPVAL 	R6 U0 ; R6 := U0
	17	[22]	LOADK    	R7 := 1.000000
	18	[22]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	19	[22]	MOVE     	R2 R4 ; R2 := R4
	20	[23]	SELF     	R4 R1 K3 ; R5 := R1; R4 := R1[0xae79653b]
	21	[23]	GETUPVAL 	R6 U1 ; R6 := U1
	22	[23]	LOADK    	R7 := 1.000000
	23	[23]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	24	[23]	SETTABLE 	R3 K4 R4 ; R3["x"] := R4
	25	[24]	SELF     	R4 R1 K3 ; R5 := R1; R4 := R1[0xae79653b]
	26	[24]	GETUPVAL 	R6 U1 ; R6 := U1
	27	[24]	LOADK    	R7 := 2.000000
	28	[24]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	29	[24]	SETTABLE 	R3 K5 R4 ; R3["y"] := R4
	30	[25]	SELF     	R4 R1 K3 ; R5 := R1; R4 := R1[0xae79653b]
	31	[25]	GETUPVAL 	R6 U1 ; R6 := U1
	32	[25]	LOADK    	R7 := 3.000000
	33	[25]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	34	[25]	SETTABLE 	R3 K6 R4 ; R3["z"] := R4
	35	[27]	LE       	1 R2 K7 ; if R2 <= 0.000000 then PC := 39
	36	[27]	JMP      	39 ; PC := 39
	37	[27]	LT       	0 K8 R2 ; if 10.000000 >= R2 then PC := 40
	38	[27]	JMP      	40 ; PC := 40
	39	[28]	LOADK    	R2 := 1.000000
	40	[30]	GETGLOBAL	R4 K9 ; R4 := 0xae2294fa
	41	[30]	MOVE     	R5 R3 ; R5 := R3
	42	[30]	CALL     	R4 2 2 ; R4 := R4(R5)
	43	[30]	LT       	0 K10 R4 ; if 5.000000 >= R4 then PC := 51
	44	[30]	JMP      	51 ; PC := 51
	45	[31]	GETGLOBAL	R4 K1 ; R4 := 0xa421af95
	46	[31]	LOADK    	R5 := 0.000000
	47	[31]	LOADK    	R6 := 0.000000
	48	[31]	LOADK    	R7 := 1.000000
	49	[31]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	50	[31]	MOVE     	R3 R4 ; R3 := R4
	51	[33]	MOVE     	R4 R2 ; R4 := R2
	52	[33]	MOVE     	R5 R3 ; R5 := R3
	53	[33]	RETURN   	R4 3 ; return R4, R5 
	54	[34]	RETURN   	R0 1 ; return 

function #2 <?:36,126> (252 instructions, 1008 bytes at 0000021174940A70)
2 params, 34 slots, 5 upvalues, 0 locals, 45 constants, 0 functions
	1	[37]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x73a8846a]
	2	[37]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[38]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0xc1595bd5]
	4	[38]	GETGLOBAL	R5 K2 ; R5 := gDecorationType
	5	[38]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	6	[39]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0x28e744cf]
	7	[39]	CALL     	R4 2 2 ; R4 := R4(R5)
	8	[40]	TESTSET  	R5 R1 1 ; if R1 then PC := 17 else R5 := R1 
	9	[40]	JMP      	17 ; PC := 17
	10	[40]	SELF     	R5 R0 K4 ; R6 := R0; R5 := R0[0xadbdc520]
	11	[40]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[40]	GETGLOBAL	R6 K5 ; R6 := 0x1211d00f
	13	[40]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 16
	14	[40]	JMP      	16 ; PC := 16
	15	[40]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 16
	16	[40]	OP_LOADBOOL	R5 1 0 ; R5 := true
	17	[42]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	18	[42]	MOVE     	R7 R4 ; R7 := R4
	19	[42]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[42]	TEST     	R6 1 ; if R6 then PC := 39
	21	[42]	JMP      	39 ; PC := 39
	22	[42]	SELF     	R6 R4 K7 ; R7 := R4; R6 := R4[0xf2deaf69]
	23	[42]	GETGLOBAL	R8 K8 ; R8 := gLotusAvatarType
	24	[42]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	25	[42]	TEST     	R6 0 ; if not R6 then PC := 39
	26	[42]	JMP      	39 ; PC := 39
	27	[42]	SELF     	R6 R4 K9 ; R7 := R4; R6 := R4[0xa5e492d4]
	28	[42]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[42]	TEST     	R6 0 ; if not R6 then PC := 39
	30	[42]	JMP      	39 ; PC := 39
	31	[42]	TEST     	R5 1 ; if R5 then PC := 39
	32	[42]	JMP      	39 ; PC := 39
	33	[43]	SELF     	R6 R0 K10 ; R7 := R0; R6 := R0[0x659d451f]
	34	[43]	GETGLOBAL	R8 K11 ; R8 := 0x04144d1d
	35	[43]	OP_LOADBOOL	R9 0 0 ; R9 := false
	36	[43]	LOADK    	R10 := 0.000000
	37	[43]	OP_LOADBOOL	R11 0 0 ; R11 := false
	38	[43]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	39	[46]	GETUPVAL 	R6 U0 ; R6 := U0
	40	[46]	MOVE     	R7 R0 ; R7 := R0
	41	[46]	CALL     	R6 2 3 ; R6,R7 := R6(R7)
	42	[48]	LOADNIL  	R8 R8 ; R8 := nil
	43	[49]	TEST     	R5 1 ; if R5 then PC := 79
	44	[49]	JMP      	79 ; PC := 79
	45	[50]	SELF     	R9 R0 K12 ; R10 := R0; R9 := R0[0x47901f07]
	46	[50]	GETGLOBAL	R11 K13 ; R11 := 0x4ce6b20d
	47	[50]	GETGLOBAL	R12 K14 ; R12 := EMPTY_SYMBOL
	48	[50]	GETGLOBAL	R13 K15 ; R13 := ZERO_VECTOR
	49	[50]	GETGLOBAL	R14 K16 ; R14 := ZERO_ROTATION
	50	[50]	MOVE     	R15 R2 ; R15 := R2
	51	[50]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	52	[51]	SELF     	R9 R0 K12 ; R10 := R0; R9 := R0[0x47901f07]
	53	[51]	GETGLOBAL	R11 K17 ; R11 := 0x78403f35
	54	[51]	GETGLOBAL	R12 K14 ; R12 := EMPTY_SYMBOL
	55	[51]	GETGLOBAL	R13 K15 ; R13 := ZERO_VECTOR
	56	[51]	GETGLOBAL	R14 K16 ; R14 := ZERO_ROTATION
	57	[51]	MOVE     	R15 R2 ; R15 := R2
	58	[51]	CALL     	R9 7 2 ; R9 := R9(R10,R11,R12,R13,R14,R15)
	59	[51]	MOVE     	R8 R9 ; R8 := R9
	60	[52]	GETGLOBAL	R9 K6 ; R9 := 0x7b998233
	61	[52]	MOVE     	R10 R8 ; R10 := R8
	62	[52]	CALL     	R9 2 2 ; R9 := R9(R10)
	63	[52]	TEST     	R9 1 ; if R9 then PC := 79
	64	[52]	JMP      	79 ; PC := 79
	65	[53]	SELF     	R9 R8 K18 ; R10 := R8; R9 := R8[0x986d2ab8]
	66	[53]	GETUPVAL 	R11 U1 ; R11 := U1
	67	[53]	MOVE     	R12 R6 ; R12 := R6
	68	[53]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	69	[54]	SELF     	R9 R8 K18 ; R10 := R8; R9 := R8[0x986d2ab8]
	70	[54]	GETUPVAL 	R11 U2 ; R11 := U2
	71	[54]	MOVE     	R12 R6 ; R12 := R6
	72	[54]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	73	[55]	SELF     	R9 R8 K18 ; R10 := R8; R9 := R8[0x986d2ab8]
	74	[55]	GETUPVAL 	R11 U3 ; R11 := U3
	75	[55]	GETTABLE 	R12 R7 K19 ; R12 := R7["x"]
	76	[55]	GETTABLE 	R13 R7 K20 ; R13 := R7["y"]
	77	[55]	GETTABLE 	R14 R7 K21 ; R14 := R7["z"]
	78	[55]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	79	[59]	GETGLOBAL	R9 K22 ; R9 := 0x0469f296
	80	[59]	LOADK    	R10 K23 ; R10 := "ManageVisibilityOnEquipmentChange"
	81	[59]	CALL     	R9 2 2 ; R9 := R9(R10)
	82	[61]	SELF     	R10 R0 K1 ; R11 := R0; R10 := R0[0xc1595bd5]
	83	[61]	GETGLOBAL	R12 K24 ; R12 := gEntityType
	84	[61]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	85	[61]	MOVE     	R3 R10 ; R3 := R10
	86	[62]	LOADK    	R10 := 1.000000
	87	[62]	LEN      	R11 R3 ; R11 := # R3
	88	[62]	LOADK    	R12 := 1.000000
	89	[62]	FORPREP  	R10 101 ; R10 -= R12; PC := 101
	90	[63]	GETTABLE 	R14 R3 R13 ; R14 := R3[R13]
	91	[63]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x08db51de]
	92	[63]	MOVE     	R16 R9 ; R16 := R9
	93	[63]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	94	[63]	TEST     	R14 0 ; if not R14 then PC := 101
	95	[63]	JMP      	101 ; PC := 101
	96	[64]	GETTABLE 	R14 R3 R13 ; R14 := R3[R13]
	97	[64]	SELF     	R14 R14 K26 ; R15 := R14; R14 := R14[0x768274d6]
	98	[64]	OP_LOADBOOL	R16 0 0 ; R16 := false
	99	[64]	OP_LOADBOOL	R17 1 0 ; R17 := true
	100	[64]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	101	[62]	FORLOOP  	R10 90 ; R10 += R12; if R10 <= R11 then begin PC := 90; R13 := R10 end
	102	[68]	SELF     	R14 R0 K1 ; R15 := R0; R14 := R0[0xc1595bd5]
	103	[68]	GETGLOBAL	R16 K27 ; R16 := gWeaponTrailType
	104	[68]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	105	[69]	LOADK    	R15 := 1.000000
	106	[69]	LEN      	R16 R14 ; R16 := # R14
	107	[69]	LOADK    	R17 := 1.000000
	108	[69]	FORPREP  	R15 117 ; R15 -= R17; PC := 117
	109	[70]	GETGLOBAL	R19 K6 ; R19 := 0x7b998233
	110	[70]	GETTABLE 	R20 R14 R18 ; R20 := R14[R18]
	111	[70]	CALL     	R19 2 2 ; R19 := R19(R20)
	112	[70]	TEST     	R19 1 ; if R19 then PC := 117
	113	[70]	JMP      	117 ; PC := 117
	114	[71]	GETTABLE 	R19 R14 R18 ; R19 := R14[R18]
	115	[71]	SELF     	R19 R19 K28 ; R20 := R19; R19 := R19[0xf4e253b6]
	116	[71]	CALL     	R19 2 1 ; R19(R20)
	117	[69]	FORLOOP  	R15 109 ; R15 += R17; if R15 <= R16 then begin PC := 109; R18 := R15 end
	118	[75]	GETGLOBAL	R19 K29 ; R19 := 0x20b7f774
	119	[75]	GETGLOBAL	R20 K15 ; R20 := ZERO_VECTOR
	120	[75]	MOVE     	R21 R7 ; R21 := R7
	121	[75]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	122	[76]	SELF     	R20 R0 K30 ; R21 := R0; R20 := R0[0xc9f6a7d7]
	123	[76]	GETGLOBAL	R22 K31 ; R22 := 0xd69210b8
	124	[76]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	125	[77]	GETGLOBAL	R21 K6 ; R21 := 0x7b998233
	126	[77]	MOVE     	R22 R20 ; R22 := R20
	127	[77]	CALL     	R21 2 2 ; R21 := R21(R22)
	128	[77]	TEST     	R21 0 ; if not R21 then PC := 138
	129	[77]	JMP      	138 ; PC := 138
	130	[78]	SELF     	R21 R0 K12 ; R22 := R0; R21 := R0[0x47901f07]
	131	[78]	GETGLOBAL	R23 K31 ; R23 := 0xd69210b8
	132	[78]	GETGLOBAL	R24 K14 ; R24 := EMPTY_SYMBOL
	133	[78]	GETGLOBAL	R25 K15 ; R25 := ZERO_VECTOR
	134	[78]	MOVE     	R26 R19 ; R26 := R19
	135	[78]	MOVE     	R27 R2 ; R27 := R2
	136	[78]	CALL     	R21 7 2 ; R21 := R21(R22,R23,R24,R25,R26,R27)
	137	[78]	MOVE     	R20 R21 ; R20 := R21
	138	[82]	GETGLOBAL	R21 K32 ; R21 := 0x86ef8ddc
	139	[82]	SELF     	R22 R0 K33 ; R23 := R0; R22 := R0[0x055478b1]
	140	[82]	CALL     	R22 2 2 ; R22 := R22(R23)
	141	[82]	MUL      	R21 R21 R22 ; R21 := R21 * R22
	142	[84]	TEST     	R5 0 ; if not R5 then PC := 148
	143	[84]	JMP      	148 ; PC := 148
	144	[84]	GETGLOBAL	R22 K34 ; R22 := 0x4c492377
	145	[84]	TEST     	R22 1 ; if R22 then PC := 148
	146	[84]	JMP      	148 ; PC := 148
	147	[85]	GETGLOBAL	R21 K32 ; R21 := 0x86ef8ddc
	148	[88]	GETGLOBAL	R22 K35 ; R22 := 0xa421af95
	149	[88]	CALL     	R22 1 2 ; R22 := R22()
	150	[89]	LOADK    	R23 := 1.000000
	151	[90]	GETGLOBAL	R24 K32 ; R24 := 0x86ef8ddc
	152	[90]	LT       	0 R21 R24 ; if R21 >= R24 then PC := 220
	153	[90]	JMP      	220 ; PC := 220
	154	[90]	GETGLOBAL	R24 K6 ; R24 := 0x7b998233
	155	[90]	MOVE     	R25 R0 ; R25 := R0
	156	[90]	CALL     	R24 2 2 ; R24 := R24(R25)
	157	[90]	TEST     	R24 1 ; if R24 then PC := 220
	158	[90]	JMP      	220 ; PC := 220
	159	[91]	GETGLOBAL	R24 K32 ; R24 := 0x86ef8ddc
	160	[91]	DIV      	R23 R21 R24 ; R23 := R21 / R24
	161	[92]	SELF     	R24 R0 K18 ; R25 := R0; R24 := R0[0x986d2ab8]
	162	[92]	GETUPVAL 	R26 U4 ; R26 := U4
	163	[92]	SUB      	R27 K36 R23 ; R27 := 1.000000 - R23
	164	[92]	MUL      	R27 K37 R27 ; R27 := 0.500000 * R27
	165	[92]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	166	[93]	LOADK    	R24 := 1.000000
	167	[93]	LEN      	R25 R3 ; R25 := # R3
	168	[93]	LOADK    	R26 := 1.000000
	169	[93]	FORPREP  	R24 183 ; R24 -= R26; PC := 183
	170	[94]	GETGLOBAL	R28 K6 ; R28 := 0x7b998233
	171	[94]	GETTABLE 	R29 R3 R27 ; R29 := R3[R27]
	172	[94]	CALL     	R28 2 2 ; R28 := R28(R29)
	173	[94]	TEST     	R28 1 ; if R28 then PC := 183
	174	[94]	JMP      	183 ; PC := 183
	175	[95]	GETTABLE 	R28 R3 R27 ; R28 := R3[R27]
	176	[95]	SELF     	R28 R28 K38 ; R29 := R28; R28 := R28[0x66472bf5]
	177	[95]	GETGLOBAL	R30 K39 ; R30 := 0x5bced4c4
	178	[95]	GETTABLE 	R30 R30 K40 ; R30 := R30[0xac1b386a]
	179	[95]	LOADK    	R31 := 1.000000
	180	[95]	MUL      	R32 K41 R23 ; R32 := 3.000000 * R23
	181	[95]	CALL     	R30 3 0 ; R30,... := R30(R31,R32)
	182	[95]	CALL     	R28 0 1 ; R28(R29,...)
	183	[93]	FORLOOP  	R24 170 ; R24 += R26; if R24 <= R25 then begin PC := 170; R27 := R24 end
	184	[98]	GETGLOBAL	R28 K6 ; R28 := 0x7b998233
	185	[98]	MOVE     	R29 R8 ; R29 := R8
	186	[98]	CALL     	R28 2 2 ; R28 := R28(R29)
	187	[98]	TEST     	R28 1 ; if R28 then PC := 194
	188	[98]	JMP      	194 ; PC := 194
	189	[99]	SELF     	R28 R8 K18 ; R29 := R8; R28 := R8[0x986d2ab8]
	190	[99]	GETUPVAL 	R30 U4 ; R30 := U4
	191	[99]	SUB      	R31 K36 R23 ; R31 := 1.000000 - R23
	192	[99]	MUL      	R31 K37 R31 ; R31 := 0.500000 * R31
	193	[99]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	194	[101]	GETGLOBAL	R28 K6 ; R28 := 0x7b998233
	195	[101]	MOVE     	R29 R20 ; R29 := R20
	196	[101]	CALL     	R28 2 2 ; R28 := R28(R29)
	197	[101]	TEST     	R28 1 ; if R28 then PC := 213
	198	[101]	JMP      	213 ; PC := 213
	199	[102]	MUL      	R23 R6 R23 ; R23 := R6 * R23
	200	[103]	GETTABLE 	R28 R7 K19 ; R28 := R7["x"]
	201	[103]	MUL      	R28 R23 R28 ; R28 := R23 * R28
	202	[103]	SETTABLE 	R22 K19 R28 ; R22["x"] := R28
	203	[104]	GETTABLE 	R28 R7 K20 ; R28 := R7["y"]
	204	[104]	MUL      	R28 R23 R28 ; R28 := R23 * R28
	205	[104]	SETTABLE 	R22 K20 R28 ; R22["y"] := R28
	206	[105]	GETTABLE 	R28 R7 K21 ; R28 := R7["z"]
	207	[105]	MUL      	R28 R23 R28 ; R28 := R23 * R28
	208	[105]	SETTABLE 	R22 K21 R28 ; R22["z"] := R28
	209	[106]	SELF     	R28 R20 K42 ; R29 := R20; R28 := R20[0xe28aa928]
	210	[106]	MOVE     	R30 R22 ; R30 := R22
	211	[106]	MOVE     	R31 R19 ; R31 := R19
	212	[106]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	213	[108]	GETGLOBAL	R28 K43 ; R28 := 0xcbd666e1
	214	[108]	LOADK    	R29 := 0.000000
	215	[108]	CALL     	R28 2 1 ; R28(R29)
	216	[109]	GETGLOBAL	R28 K44 ; R28 := 0x67652851
	217	[109]	CALL     	R28 1 2 ; R28 := R28()
	218	[109]	ADD      	R21 R21 R28 ; R21 := R21 + R28
	219	[109]	JMP      	151 ; PC := 151
	220	[112]	GETGLOBAL	R28 K6 ; R28 := 0x7b998233
	221	[112]	MOVE     	R29 R0 ; R29 := R0
	222	[112]	CALL     	R28 2 2 ; R28 := R28(R29)
	223	[112]	TEST     	R28 1 ; if R28 then PC := 232
	224	[112]	JMP      	232 ; PC := 232
	225	[113]	SELF     	R28 R0 K38 ; R29 := R0; R28 := R0[0x66472bf5]
	226	[113]	LOADK    	R30 := 1.000000
	227	[113]	CALL     	R28 3 1 ; R28(R29,R30)
	228	[114]	SELF     	R28 R0 K18 ; R29 := R0; R28 := R0[0x986d2ab8]
	229	[114]	GETUPVAL 	R30 U4 ; R30 := U4
	230	[114]	LOADK    	R31 := 0.000000
	231	[114]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	232	[117]	GETGLOBAL	R28 K6 ; R28 := 0x7b998233
	233	[117]	MOVE     	R29 R20 ; R29 := R20
	234	[117]	CALL     	R28 2 2 ; R28 := R28(R29)
	235	[117]	TEST     	R28 1 ; if R28 then PC := 239
	236	[117]	JMP      	239 ; PC := 239
	237	[118]	SELF     	R28 R20 K28 ; R29 := R20; R28 := R20[0xf4e253b6]
	238	[118]	CALL     	R28 2 1 ; R28(R29)
	239	[121]	LOADK    	R28 := 1.000000
	240	[121]	LEN      	R29 R14 ; R29 := # R14
	241	[121]	LOADK    	R30 := 1.000000
	242	[121]	FORPREP  	R28 251 ; R28 -= R30; PC := 251
	243	[122]	GETGLOBAL	R32 K6 ; R32 := 0x7b998233
	244	[122]	GETTABLE 	R33 R14 R31 ; R33 := R14[R31]
	245	[122]	CALL     	R32 2 2 ; R32 := R32(R33)
	246	[122]	TEST     	R32 1 ; if R32 then PC := 251
	247	[122]	JMP      	251 ; PC := 251
	248	[123]	GETTABLE 	R32 R14 R31 ; R32 := R14[R31]
	249	[123]	SELF     	R32 R32 K28 ; R33 := R32; R32 := R32[0xf4e253b6]
	250	[123]	CALL     	R32 2 1 ; R32(R33)
	251	[121]	FORLOOP  	R28 243 ; R28 += R30; if R28 <= R29 then begin PC := 243; R31 := R28 end
	252	[126]	RETURN   	R0 1 ; return 

function #3 <?:128,211> (217 instructions, 868 bytes at 0000021174941340)
3 params, 29 slots, 5 upvalues, 0 locals, 41 constants, 0 functions
	1	[129]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0x73a8846a]
	2	[129]	CALL     	R3 2 2 ; R3 := R3(R4)
	3	[131]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x6af8445c]
	4	[131]	GETUPVAL 	R6 U0 ; R6 := U0
	5	[131]	LOADK    	R7 := 1.000000
	6	[131]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	7	[131]	MUL      	R4 R4 K2 ; R4 := R4 * 0.500000
	8	[132]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0xd4cc05b4]
	9	[132]	CALL     	R5 2 2 ; R5 := R5(R6)
	10	[132]	TEST     	R5 0 ; if not R5 then PC := 14
	11	[132]	JMP      	14 ; PC := 14
	12	[132]	LT       	0 K4 R4 ; if 1.000000 >= R4 then PC := 15
	13	[132]	JMP      	15 ; PC := 15
	14	[134]	LOADK    	R4 := 0.000000
	15	[137]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0xc1595bd5]
	16	[137]	GETGLOBAL	R7 K6 ; R7 := gDecorationType
	17	[137]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	18	[139]	GETGLOBAL	R6 K7 ; R6 := 0x0469f296
	19	[139]	LOADK    	R7 K8 ; R7 := "ManageVisibilityOnEquipmentChange"
	20	[139]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[141]	SELF     	R7 R0 K5 ; R8 := R0; R7 := R0[0xc1595bd5]
	22	[141]	GETGLOBAL	R9 K9 ; R9 := gEntityType
	23	[141]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	24	[141]	MOVE     	R5 R7 ; R5 := R7
	25	[142]	LOADK    	R7 := 1.000000
	26	[142]	LEN      	R8 R5 ; R8 := # R5
	27	[142]	LOADK    	R9 := 1.000000
	28	[142]	FORPREP  	R7 40 ; R7 -= R9; PC := 40
	29	[143]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	30	[143]	SELF     	R11 R11 K10 ; R12 := R11; R11 := R11[0x08db51de]
	31	[143]	MOVE     	R13 R6 ; R13 := R6
	32	[143]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	33	[143]	TEST     	R11 0 ; if not R11 then PC := 40
	34	[143]	JMP      	40 ; PC := 40
	35	[144]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	36	[144]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x768274d6]
	37	[144]	OP_LOADBOOL	R13 1 0 ; R13 := true
	38	[144]	OP_LOADBOOL	R14 1 0 ; R14 := true
	39	[144]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	40	[142]	FORLOOP  	R7 29 ; R7 += R9; if R7 <= R8 then begin PC := 29; R10 := R7 end
	41	[148]	SUB      	R11 K2 R4 ; R11 := 0.500000 - R4
	42	[148]	DIV      	R11 R11 K2 ; R11 := R11 / 0.500000
	43	[150]	SELF     	R12 R0 K12 ; R13 := R0; R12 := R0[0x66472bf5]
	44	[150]	LOADK    	R14 := 0.000000
	45	[150]	CALL     	R12 3 1 ; R12(R13,R14)
	46	[152]	SELF     	R12 R0 K13 ; R13 := R0; R12 := R0[0x28e744cf]
	47	[152]	CALL     	R12 2 2 ; R12 := R12(R13)
	48	[153]	TESTSET  	R13 R1 1 ; if R1 then PC := 57 else R13 := R1 
	49	[153]	JMP      	57 ; PC := 57
	50	[153]	SELF     	R13 R0 K14 ; R14 := R0; R13 := R0[0xadbdc520]
	51	[153]	CALL     	R13 2 2 ; R13 := R13(R14)
	52	[153]	GETGLOBAL	R14 K15 ; R14 := 0x1211d00f
	53	[153]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 56
	54	[153]	JMP      	56 ; PC := 56
	55	[153]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 56
	56	[153]	OP_LOADBOOL	R13 1 0 ; R13 := true
	57	[155]	GETGLOBAL	R14 K16 ; R14 := 0x7b998233
	58	[155]	MOVE     	R15 R12 ; R15 := R12
	59	[155]	CALL     	R14 2 2 ; R14 := R14(R15)
	60	[155]	TEST     	R14 1 ; if R14 then PC := 79
	61	[155]	JMP      	79 ; PC := 79
	62	[155]	SELF     	R14 R12 K17 ; R15 := R12; R14 := R12[0xf2deaf69]
	63	[155]	GETGLOBAL	R16 K18 ; R16 := gLotusAvatarType
	64	[155]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	65	[155]	TEST     	R14 0 ; if not R14 then PC := 79
	66	[155]	JMP      	79 ; PC := 79
	67	[155]	SELF     	R14 R12 K19 ; R15 := R12; R14 := R12[0xa5e492d4]
	68	[155]	CALL     	R14 2 2 ; R14 := R14(R15)
	69	[155]	TEST     	R14 0 ; if not R14 then PC := 79
	70	[155]	JMP      	79 ; PC := 79
	71	[155]	TEST     	R13 1 ; if R13 then PC := 79
	72	[155]	JMP      	79 ; PC := 79
	73	[156]	SELF     	R14 R0 K20 ; R15 := R0; R14 := R0[0x659d451f]
	74	[156]	GETGLOBAL	R16 K21 ; R16 := 0x5b321542
	75	[156]	OP_LOADBOOL	R17 0 0 ; R17 := false
	76	[156]	LOADK    	R18 := 0.000000
	77	[156]	OP_LOADBOOL	R19 0 0 ; R19 := false
	78	[156]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	79	[159]	GETUPVAL 	R14 U1 ; R14 := U1
	80	[159]	MOVE     	R15 R0 ; R15 := R0
	81	[159]	CALL     	R14 2 3 ; R14,R15 := R14(R15)
	82	[160]	LOADNIL  	R16 R17 ; R16 := R17 := nil
	83	[162]	TEST     	R13 1 ; if R13 then PC := 100
	84	[162]	JMP      	100 ; PC := 100
	85	[163]	SELF     	R18 R0 K22 ; R19 := R0; R18 := R0[0x47901f07]
	86	[163]	GETGLOBAL	R20 K23 ; R20 := 0x78403f35
	87	[163]	GETGLOBAL	R21 K24 ; R21 := EMPTY_SYMBOL
	88	[163]	GETGLOBAL	R22 K25 ; R22 := ZERO_VECTOR
	89	[163]	GETGLOBAL	R23 K26 ; R23 := ZERO_ROTATION
	90	[163]	MOVE     	R24 R3 ; R24 := R3
	91	[163]	CALL     	R18 7 2 ; R18 := R18(R19,R20,R21,R22,R23,R24)
	92	[163]	MOVE     	R16 R18 ; R16 := R18
	93	[164]	SELF     	R18 R0 K22 ; R19 := R0; R18 := R0[0x47901f07]
	94	[164]	GETGLOBAL	R20 K27 ; R20 := 0x4ce6b20d
	95	[164]	GETGLOBAL	R21 K24 ; R21 := EMPTY_SYMBOL
	96	[164]	GETGLOBAL	R22 K25 ; R22 := ZERO_VECTOR
	97	[164]	GETGLOBAL	R23 K26 ; R23 := ZERO_ROTATION
	98	[164]	MOVE     	R24 R3 ; R24 := R3
	99	[164]	CALL     	R18 7 1 ; R18(R19,R20,R21,R22,R23,R24)
	100	[168]	GETGLOBAL	R18 K28 ; R18 := 0xd043a9cc
	101	[168]	TEST     	R18 0 ; if not R18 then PC := 110
	102	[168]	JMP      	110 ; PC := 110
	103	[169]	SELF     	R18 R0 K22 ; R19 := R0; R18 := R0[0x47901f07]
	104	[169]	GETGLOBAL	R20 K27 ; R20 := 0x4ce6b20d
	105	[169]	GETGLOBAL	R21 K24 ; R21 := EMPTY_SYMBOL
	106	[169]	GETGLOBAL	R22 K25 ; R22 := ZERO_VECTOR
	107	[169]	GETGLOBAL	R23 K26 ; R23 := ZERO_ROTATION
	108	[169]	MOVE     	R24 R3 ; R24 := R3
	109	[169]	CALL     	R18 7 1 ; R18(R19,R20,R21,R22,R23,R24)
	110	[172]	GETGLOBAL	R18 K16 ; R18 := 0x7b998233
	111	[172]	MOVE     	R19 R16 ; R19 := R16
	112	[172]	CALL     	R18 2 2 ; R18 := R18(R19)
	113	[172]	TEST     	R18 1 ; if R18 then PC := 129
	114	[172]	JMP      	129 ; PC := 129
	115	[173]	SELF     	R18 R16 K29 ; R19 := R16; R18 := R16[0x986d2ab8]
	116	[173]	GETUPVAL 	R20 U2 ; R20 := U2
	117	[173]	MOVE     	R21 R14 ; R21 := R14
	118	[173]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	119	[174]	SELF     	R18 R16 K29 ; R19 := R16; R18 := R16[0x986d2ab8]
	120	[174]	GETUPVAL 	R20 U3 ; R20 := U3
	121	[174]	MOVE     	R21 R14 ; R21 := R14
	122	[174]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	123	[175]	SELF     	R18 R16 K29 ; R19 := R16; R18 := R16[0x986d2ab8]
	124	[175]	GETUPVAL 	R20 U4 ; R20 := U4
	125	[175]	GETTABLE 	R21 R15 K30 ; R21 := R15["x"]
	126	[175]	GETTABLE 	R22 R15 K31 ; R22 := R15["y"]
	127	[175]	GETTABLE 	R23 R15 K32 ; R23 := R15["z"]
	128	[175]	CALL     	R18 6 1 ; R18(R19,R20,R21,R22,R23)
	129	[179]	GETGLOBAL	R18 K33 ; R18 := 0x9dd6602f
	130	[179]	MUL      	R18 R18 R11 ; R18 := R18 * R11
	131	[180]	TEST     	R13 0 ; if not R13 then PC := 137
	132	[180]	JMP      	137 ; PC := 137
	133	[180]	GETGLOBAL	R19 K34 ; R19 := 0x4c492377
	134	[180]	TEST     	R19 1 ; if R19 then PC := 137
	135	[180]	JMP      	137 ; PC := 137
	136	[181]	LOADK    	R18 := 0.000000
	137	[184]	GETGLOBAL	R19 K35 ; R19 := 0xa421af95
	138	[184]	CALL     	R19 1 2 ; R19 := R19()
	139	[185]	LT       	0 K36 R18 ; if 0.000000 >= R18 then PC := 205
	140	[185]	JMP      	205 ; PC := 205
	141	[185]	GETGLOBAL	R20 K16 ; R20 := 0x7b998233
	142	[185]	MOVE     	R21 R0 ; R21 := R0
	143	[185]	CALL     	R20 2 2 ; R20 := R20(R21)
	144	[185]	TEST     	R20 1 ; if R20 then PC := 205
	145	[185]	JMP      	205 ; PC := 205
	146	[186]	GETGLOBAL	R20 K33 ; R20 := 0x9dd6602f
	147	[186]	DIV      	R20 R18 R20 ; R20 := R18 / R20
	148	[186]	SUB      	R20 K4 R20 ; R20 := 1.000000 - R20
	149	[186]	MUL      	R20 K2 R20 ; R20 := 0.500000 * R20
	150	[187]	SELF     	R21 R0 K29 ; R22 := R0; R21 := R0[0x986d2ab8]
	151	[187]	GETUPVAL 	R23 U0 ; R23 := U0
	152	[187]	SUB      	R24 K4 R20 ; R24 := 1.000000 - R20
	153	[187]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	154	[188]	LOADK    	R21 := 1.000000
	155	[188]	LEN      	R22 R5 ; R22 := # R5
	156	[188]	LOADK    	R23 := 1.000000
	157	[188]	FORPREP  	R21 168 ; R21 -= R23; PC := 168
	158	[189]	GETGLOBAL	R25 K16 ; R25 := 0x7b998233
	159	[189]	GETTABLE 	R26 R5 R24 ; R26 := R5[R24]
	160	[189]	CALL     	R25 2 2 ; R25 := R25(R26)
	161	[189]	TEST     	R25 1 ; if R25 then PC := 168
	162	[189]	JMP      	168 ; PC := 168
	163	[190]	GETTABLE 	R25 R5 R24 ; R25 := R5[R24]
	164	[190]	SELF     	R25 R25 K12 ; R26 := R25; R25 := R25[0x66472bf5]
	165	[190]	GETGLOBAL	R27 K33 ; R27 := 0x9dd6602f
	166	[190]	DIV      	R27 R18 R27 ; R27 := R18 / R27
	167	[190]	CALL     	R25 3 1 ; R25(R26,R27)
	168	[188]	FORLOOP  	R21 158 ; R21 += R23; if R21 <= R22 then begin PC := 158; R24 := R21 end
	169	[193]	GETGLOBAL	R25 K16 ; R25 := 0x7b998233
	170	[193]	MOVE     	R26 R16 ; R26 := R16
	171	[193]	CALL     	R25 2 2 ; R25 := R25(R26)
	172	[193]	TEST     	R25 1 ; if R25 then PC := 178
	173	[193]	JMP      	178 ; PC := 178
	174	[194]	SELF     	R25 R16 K29 ; R26 := R16; R25 := R16[0x986d2ab8]
	175	[194]	GETUPVAL 	R27 U0 ; R27 := U0
	176	[194]	SUB      	R28 K4 R20 ; R28 := 1.000000 - R20
	177	[194]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	178	[196]	GETGLOBAL	R25 K16 ; R25 := 0x7b998233
	179	[196]	MOVE     	R26 R17 ; R26 := R17
	180	[196]	CALL     	R25 2 2 ; R25 := R25(R26)
	181	[196]	TEST     	R25 1 ; if R25 then PC := 198
	182	[196]	JMP      	198 ; PC := 198
	183	[197]	MUL      	R25 R14 R20 ; R25 := R14 * R20
	184	[197]	MUL      	R20 R25 K37 ; R20 := R25 * 2.400000
	185	[198]	GETTABLE 	R25 R15 K30 ; R25 := R15["x"]
	186	[198]	MUL      	R25 R20 R25 ; R25 := R20 * R25
	187	[198]	SETTABLE 	R19 K30 R25 ; R19["x"] := R25
	188	[199]	GETTABLE 	R25 R15 K31 ; R25 := R15["y"]
	189	[199]	MUL      	R25 R20 R25 ; R25 := R20 * R25
	190	[199]	SETTABLE 	R19 K31 R25 ; R19["y"] := R25
	191	[200]	GETTABLE 	R25 R15 K32 ; R25 := R15["z"]
	192	[200]	MUL      	R25 R20 R25 ; R25 := R20 * R25
	193	[200]	SETTABLE 	R19 K32 R25 ; R19["z"] := R25
	194	[201]	SELF     	R25 R17 K38 ; R26 := R17; R25 := R17[0xe28aa928]
	195	[201]	MOVE     	R27 R19 ; R27 := R19
	196	[201]	GETGLOBAL	R28 K26 ; R28 := ZERO_ROTATION
	197	[201]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	198	[203]	GETGLOBAL	R25 K39 ; R25 := 0xcbd666e1
	199	[203]	LOADK    	R26 := 0.000000
	200	[203]	CALL     	R25 2 1 ; R25(R26)
	201	[204]	GETGLOBAL	R25 K40 ; R25 := 0x67652851
	202	[204]	CALL     	R25 1 2 ; R25 := R25()
	203	[204]	SUB      	R18 R18 R25 ; R18 := R18 - R25
	204	[204]	JMP      	139 ; PC := 139
	205	[207]	GETGLOBAL	R25 K16 ; R25 := 0x7b998233
	206	[207]	MOVE     	R26 R0 ; R26 := R0
	207	[207]	CALL     	R25 2 2 ; R25 := R25(R26)
	208	[207]	TEST     	R25 1 ; if R25 then PC := 217
	209	[207]	JMP      	217 ; PC := 217
	210	[208]	SELF     	R25 R0 K29 ; R26 := R0; R25 := R0[0x986d2ab8]
	211	[208]	GETUPVAL 	R27 U0 ; R27 := U0
	212	[208]	LOADK    	R28 := 0.500000
	213	[208]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	214	[209]	SELF     	R25 R0 K12 ; R26 := R0; R25 := R0[0x66472bf5]
	215	[209]	LOADK    	R27 := 0.000000
	216	[209]	CALL     	R25 3 1 ; R25(R26,R27)
	217	[211]	RETURN   	R0 1 ; return 

function #4 <?:213,241> (94 instructions, 376 bytes at 0000021174941D70)
1 param, 21 slots, 0 upvalues, 0 locals, 27 constants, 0 functions
	1	[214]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xed324116]
	2	[214]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[216]	GETGLOBAL	R2 K1 ; R2 := 0xcbd666e1
	4	[216]	LOADK    	R3 := 0.000000
	5	[216]	CALL     	R2 2 1 ; R2(R3)
	6	[217]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0xe860af53]
	7	[217]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[218]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	9	[218]	MOVE     	R4 R2 ; R4 := R2
	10	[218]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[218]	TEST     	R3 0 ; if not R3 then PC := 14
	12	[218]	JMP      	14 ; PC := 14
	13	[219]	RETURN   	R0 1 ; return 
	14	[221]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x79a9e9d3]
	15	[221]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[222]	SELF     	R4 R2 K5 ; R5 := R2; R4 := R2[0x8fbd942d]
	17	[222]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[224]	GETGLOBAL	R5 K1 ; R5 := 0xcbd666e1
	19	[224]	LOADK    	R6 := 0.000000
	20	[224]	CALL     	R5 2 1 ; R5(R6)
	21	[225]	GETGLOBAL	R5 K6 ; R5 := 0xa421af95
	22	[225]	CALL     	R5 1 2 ; R5 := R5()
	23	[226]	GETGLOBAL	R6 K7 ; R6 := 0x00046924
	24	[226]	CALL     	R6 1 2 ; R6 := R6()
	25	[227]	SELF     	R7 R0 K8 ; R8 := R0; R7 := R0[0xd1586535]
	26	[227]	CALL     	R7 2 2 ; R7 := R7(R8)
	27	[228]	SELF     	R8 R0 K9 ; R9 := R0; R8 := R0[0xcb3851b8]
	28	[228]	CALL     	R8 2 2 ; R8 := R8(R9)
	29	[230]	GETGLOBAL	R9 K6 ; R9 := 0xa421af95
	30	[230]	CALL     	R9 1 2 ; R9 := R9()
	31	[231]	GETGLOBAL	R10 K10 ; R10 := 0x5bced4c4
	32	[231]	GETTABLE 	R10 R10 K11 ; R10 := R10[0x55f27c30]
	33	[231]	GETGLOBAL	R11 K12 ; R11 := 0x42dcc9f5
	34	[231]	GETGLOBAL	R12 K10 ; R12 := 0x5bced4c4
	35	[231]	GETTABLE 	R12 R12 K13 ; R12 := R12[0xb62ecfe0]
	36	[231]	GETTABLE 	R13 R3 K14 ; R13 := R3["y"]
	37	[231]	GETTABLE 	R14 R4 K14 ; R14 := R4["y"]
	38	[231]	SUB      	R13 R13 R14 ; R13 := R13 - R14
	39	[231]	GETTABLE 	R14 R3 K15 ; R14 := R3["z"]
	40	[231]	GETTABLE 	R15 R4 K15 ; R15 := R4["z"]
	41	[231]	SUB      	R14 R14 R15 ; R14 := R14 - R15
	42	[231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	43	[231]	MUL      	R12 R12 K16 ; R12 := R12 * 4.000000
	44	[231]	LOADK    	R13 := 2.000000
	45	[231]	LOADK    	R14 := 8.000000
	46	[231]	CALL     	R11 4 0 ; R11,... := R11(R12,R13,R14)
	47	[231]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	48	[232]	LOADK    	R11 := 1.000000
	49	[232]	MOVE     	R12 R10 ; R12 := R10
	50	[232]	LOADK    	R13 := 1.000000
	51	[232]	FORPREP  	R11 93 ; R11 -= R13; PC := 93
	52	[233]	GETGLOBAL	R15 K17 ; R15 := 0x9bafffe3
	53	[233]	GETTABLE 	R16 R4 K14 ; R16 := R4["y"]
	54	[233]	GETTABLE 	R17 R3 K14 ; R17 := R3["y"]
	55	[233]	GETGLOBAL	R18 K18 ; R18 := 0x0c62abf7
	56	[233]	CALL     	R18 1 0 ; R18,... := R18()
	57	[233]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	58	[233]	SETTABLE 	R9 K14 R15 ; R9["y"] := R15
	59	[234]	GETGLOBAL	R15 K17 ; R15 := 0x9bafffe3
	60	[234]	GETTABLE 	R16 R4 K15 ; R16 := R4["z"]
	61	[234]	GETTABLE 	R17 R3 K15 ; R17 := R3["z"]
	62	[234]	GETGLOBAL	R18 K18 ; R18 := 0x0c62abf7
	63	[234]	CALL     	R18 1 0 ; R18,... := R18()
	64	[234]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	65	[234]	SETTABLE 	R9 K15 R15 ; R9["z"] := R15
	66	[235]	GETGLOBAL	R15 K19 ; R15 := 0x492c7f2a
	67	[235]	MOVE     	R16 R9 ; R16 := R9
	68	[235]	MOVE     	R17 R8 ; R17 := R8
	69	[235]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	70	[235]	MOVE     	R5 R15 ; R5 := R15
	71	[236]	GETGLOBAL	R15 K21 ; R15 := 0xc163f229
	72	[236]	LOADK    	R16 := -180.000000
	73	[236]	LOADK    	R17 := 180.000000
	74	[236]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	75	[236]	SETTABLE 	R6 K20 R15 ; R6["heading"] := R15
	76	[237]	GETGLOBAL	R15 K21 ; R15 := 0xc163f229
	77	[237]	LOADK    	R16 := -180.000000
	78	[237]	LOADK    	R17 := 180.000000
	79	[237]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	80	[237]	SETTABLE 	R6 K22 R15 ; R6["pitch"] := R15
	81	[238]	GETGLOBAL	R15 K23 ; R15 := 0x808dc004
	82	[238]	MOVE     	R16 R5 ; R16 := R5
	83	[238]	MOVE     	R17 R5 ; R17 := R5
	84	[238]	MOVE     	R18 R7 ; R18 := R7
	85	[238]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	86	[239]	GETGLOBAL	R15 K24 ; R15 := 0x89326c93
	87	[239]	SELF     	R15 R15 K25 ; R16 := R15; R15 := R15[0x21dbe06c]
	88	[239]	GETGLOBAL	R17 K26 ; R17 := 0xd69210b8
	89	[239]	MOVE     	R18 R5 ; R18 := R5
	90	[239]	MOVE     	R19 R6 ; R19 := R6
	91	[239]	MOVE     	R20 R1 ; R20 := R1
	92	[239]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	93	[232]	FORLOOP  	R11 52 ; R11 += R13; if R11 <= R12 then begin PC := 52; R14 := R11 end
	94	[241]	RETURN   	R0 1 ; return 

function #5 <?:243,247> (9 instructions, 36 bytes at 00000211749422E0)
1 param, 4 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[244]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[244]	MOVE     	R2 R0 ; R2 := R0
	3	[244]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[244]	TEST     	R1 1 ; if R1 then PC := 9
	5	[244]	JMP      	9 ; PC := 9
	6	[245]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x99fddba0]
	7	[245]	OP_LOADBOOL	R3 1 0 ; R3 := true
	8	[245]	CALL     	R1 3 1 ; R1(R2,R3)
	9	[247]	RETURN   	R0 1 ; return 

function #6 <?:249,256> (23 instructions, 92 bytes at 00000211749423F0)
1 param, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[250]	GETGLOBAL	R1 K0 ; R1 := 0xcbd666e1
	2	[250]	LOADK    	R2 := 1.000000
	3	[250]	CALL     	R1 2 1 ; R1(R2)
	4	[251]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[251]	MOVE     	R2 R0 ; R2 := R0
	6	[251]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[251]	TEST     	R1 1 ; if R1 then PC := 23
	8	[251]	JMP      	23 ; PC := 23
	9	[252]	GETGLOBAL	R1 K2 ; R1 := 0x55156ff7
	10	[252]	CALL     	R1 1 2 ; R1 := R1()
	11	[252]	MUL      	R1 R1 K3 ; R1 := R1 * 1.000000
	12	[252]	GETGLOBAL	R2 K4 ; R2 := 0x86ef8ddc
	13	[252]	DIV      	R1 R1 R2 ; R1 := R1 / R2
	14	[252]	MOD      	R1 R1 K3 ; R1 := R1 % 1.000000
	15	[253]	SELF     	R2 R0 K5 ; R3 := R0; R2 := R0[0x986d2ab8]
	16	[253]	GETUPVAL 	R4 U0 ; R4 := U0
	17	[253]	MOVE     	R5 R1 ; R5 := R1
	18	[253]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	19	[254]	GETGLOBAL	R2 K0 ; R2 := 0xcbd666e1
	20	[254]	LOADK    	R3 := 0.000000
	21	[254]	CALL     	R2 2 1 ; R2(R3)
	22	[254]	JMP      	4 ; PC := 4
	23	[256]	RETURN   	R0 1 ; return 
