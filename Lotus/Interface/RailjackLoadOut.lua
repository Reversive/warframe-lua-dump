
main <?:0,0> (1072 instructions, 4288 bytes at 00000211322EBB60)
0+ params, 149 slots, 0 upvalues, 0 locals, 259 constants, 196 functions
	1	[57]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[57]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.UIStyleUtilities"
	3	[57]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[58]	GETGLOBAL	R1 K0 ; R1 := 0x2d0fad09
	5	[58]	LOADK    	R2 K2 ; R2 := "Lotus.Interface.LotusUtilities"
	6	[58]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[59]	GETGLOBAL	R2 K0 ; R2 := 0x2d0fad09
	8	[59]	LOADK    	R3 K3 ; R3 := "Lotus.Interface.CardUtilitiesRedux"
	9	[59]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[60]	GETGLOBAL	R3 K0 ; R3 := 0x2d0fad09
	11	[60]	LOADK    	R4 K4 ; R4 := "Lotus.Interface.UIUtilities"
	12	[60]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[61]	GETGLOBAL	R4 K0 ; R4 := 0x2d0fad09
	14	[61]	LOADK    	R5 K5 ; R5 := "Lotus.Interface.StoreItemUtilities"
	15	[61]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[62]	GETGLOBAL	R5 K0 ; R5 := 0x2d0fad09
	17	[62]	LOADK    	R6 K6 ; R6 := "EE.Interface.Utilities"
	18	[62]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[63]	GETGLOBAL	R6 K0 ; R6 := 0x2d0fad09
	20	[63]	LOADK    	R7 K7 ; R7 := "Lotus.Scripts.Libs.RailjackUtilities"
	21	[63]	CALL     	R6 2 2 ; R6 := R6(R7)
	22	[64]	GETGLOBAL	R7 K0 ; R7 := 0x2d0fad09
	23	[64]	LOADK    	R8 K8 ; R8 := "Lotus.Interface.Components.ThemedCustomizationButton"
	24	[64]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[66]	GETGLOBAL	R8 K9 ; R8 := 0xb009bbc6
	26	[66]	LOADK    	R9 K10 ; R9 := "/Lotus/Types/Game/Store/ProductsManifest"
	27	[66]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[67]	LOADNIL  	R9 R9 ; R9 := nil
	29	[67]	SETGLOBALHASH	R9 K11 ; mTimerMgr := R9
	30	[68]	LOADNIL  	R9 R9 ; R9 := nil
	31	[68]	SETGLOBALHASH	R9 K12 ; mAnchorMgr := R9
	32	[69]	OP_LOADBOOL	R9 0 0 ; R9 := false
	33	[69]	SETGLOBALHASH	R9 K13 ; mLisetMode := R9
	34	[71]	OP_LOADBOOL	R9 0 0 ; R9 := false
	35	[71]	SETGLOBALHASH	R9 K14 ; mInputBlocked := R9
	36	[72]	LOADNIL  	R9 R9 ; R9 := nil
	37	[72]	SETGLOBALHASH	R9 K15 ; mAvatar := R9
	38	[73]	LOADNIL  	R9 R9 ; R9 := nil
	39	[73]	SETGLOBALHASH	R9 K16 ; mCameraSpot := R9
	40	[74]	LOADNIL  	R9 R9 ; R9 := nil
	41	[74]	SETGLOBALHASH	R9 K17 ; mCameraTag := R9
	42	[75]	LOADNIL  	R9 R9 ; R9 := nil
	43	[75]	SETGLOBALHASH	R9 K18 ; mWeaponMover := R9
	44	[76]	LOADNIL  	R9 R9 ; R9 := nil
	45	[76]	SETGLOBALHASH	R9 K19 ; mCosmeticMover := R9
	46	[77]	LOADNIL  	R9 R9 ; R9 := nil
	47	[77]	SETGLOBALHASH	R9 K20 ; mCosmeticsList := R9
	48	[78]	LOADNIL  	R9 R9 ; R9 := nil
	49	[78]	SETGLOBALHASH	R9 K21 ; mInventoryGrid := R9
	50	[79]	LOADNIL  	R9 R9 ; R9 := nil
	51	[79]	SETGLOBALHASH	R9 K22 ; mCategories := R9
	52	[80]	LOADNIL  	R9 R9 ; R9 := nil
	53	[80]	SETGLOBALHASH	R9 K23 ; mEquipment := R9
	54	[81]	NEWTABLE 	R9 0 0 ; R9 := {}
	55	[81]	SETGLOBALHASH	R9 K24 ; mColors := R9
	56	[82]	LOADNIL  	R9 R9 ; R9 := nil
	57	[82]	SETGLOBALHASH	R9 K25 ; mActiveState := R9
	58	[83]	LOADNIL  	R9 R9 ; R9 := nil
	59	[83]	SETGLOBALHASH	R9 K26 ; mStats := R9
	60	[84]	LOADNIL  	R9 R9 ; R9 := nil
	61	[84]	SETGLOBALHASH	R9 K27 ; mCurrentLoadout := R9
	62	[85]	LOADNIL  	R9 R9 ; R9 := nil
	63	[85]	SETGLOBALHASH	R9 K28 ; mCurrentShip := R9
	64	[86]	LOADNIL  	R9 R9 ; R9 := nil
	65	[86]	SETGLOBALHASH	R9 K29 ; mButtons := R9
	66	[87]	LOADNIL  	R9 R9 ; R9 := nil
	67	[87]	SETGLOBALHASH	R9 K30 ; mShipAvatar := R9
	68	[88]	LOADNIL  	R9 R9 ; R9 := nil
	69	[88]	SETGLOBALHASH	R9 K31 ; mShipSuit := R9
	70	[89]	LOADNIL  	R9 R9 ; R9 := nil
	71	[89]	SETGLOBALHASH	R9 K32 ; mPrevShipName := R9
	72	[90]	LOADNIL  	R9 R9 ; R9 := nil
	73	[90]	SETGLOBALHASH	R9 K33 ; mMenuLoop := R9
	74	[91]	LOADNIL  	R9 R9 ; R9 := nil
	75	[91]	SETGLOBALHASH	R9 K34 ; mMenuMusic := R9
	76	[92]	OP_LOADBOOL	R9 0 0 ; R9 := false
	77	[92]	SETGLOBALHASH	R9 K35 ; mInteriorCustomization := R9
	78	[93]	LOADNIL  	R9 R9 ; R9 := nil
	79	[93]	SETGLOBALHASH	R9 K36 ; mChildMovie := R9
	80	[94]	LOADNIL  	R9 R9 ; R9 := nil
	81	[94]	SETGLOBALHASH	R9 K37 ; mVignetteMovie := R9
	82	[95]	LOADK    	R9 := 0.000000
	83	[95]	SETGLOBALHASH	R9 K38 ; mBinToExpand := R9
	84	[96]	LOADNIL  	R9 R9 ; R9 := nil
	85	[96]	SETGLOBALHASH	R9 K39 ; mWebCmd := R9
	86	[97]	OP_LOADBOOL	R9 0 0 ; R9 := false
	87	[97]	SETGLOBALHASH	R9 K40 ; mQueueContributionScreen := R9
	88	[98]	LOADNIL  	R9 R9 ; R9 := nil
	89	[98]	SETGLOBALHASH	R9 K41 ; mRushPrice := R9
	90	[99]	LOADNIL  	R9 R9 ; R9 := nil
	91	[99]	SETGLOBALHASH	R9 K42 ; mManifestMovie := R9
	92	[100]	LOADK    	R9 := 50.000000
	93	[100]	SETGLOBALHASH	R9 K43 ; mWearAndTear := R9
	94	[101]	LOADK    	R9 := 50.000000
	95	[101]	SETGLOBALHASH	R9 K44 ; mInteriorWearAndTear := R9
	96	[102]	NEWTABLE 	R9 0 0 ; R9 := {}
	97	[102]	SETGLOBALHASH	R9 K45 ; mCrewShipWeaponSkinsToLoad := R9
	98	[103]	LOADNIL  	R9 R9 ; R9 := nil
	99	[103]	SETGLOBALHASH	R9 K46 ; mCrewShipWeaponSkinsLoader := R9
	100	[104]	LOADNIL  	R9 R9 ; R9 := nil
	101	[104]	SETGLOBALHASH	R9 K47 ; mScrapBtn := R9
	102	[105]	LOADNIL  	R9 R9 ; R9 := nil
	103	[105]	SETGLOBALHASH	R9 K48 ; mTransferBtn := R9
	104	[106]	LOADNIL  	R9 R9 ; R9 := nil
	105	[106]	SETGLOBALHASH	R9 K49 ; mRushDroneBtn := R9
	106	[107]	LOADNIL  	R9 R9 ; R9 := nil
	107	[107]	SETGLOBALHASH	R9 K50 ; mCancelRepairBtn := R9
	108	[108]	LOADNIL  	R9 R9 ; R9 := nil
	109	[108]	SETGLOBALHASH	R9 K51 ; mSalvageSpecialBtn := R9
	110	[109]	OP_LOADBOOL	R9 0 0 ; R9 := false
	111	[109]	SETGLOBALHASH	R9 K52 ; mCleanUpDone := R9
	112	[110]	OP_LOADBOOL	R9 0 0 ; R9 := false
	113	[110]	SETGLOBALHASH	R9 K53 ; mCloseOnTrigger := R9
	114	[111]	LOADNIL  	R9 R9 ; R9 := nil
	115	[111]	SETGLOBALHASH	R9 K54 ; mHandleCanBeClosedCallback := R9
	116	[112]	OP_LOADBOOL	R9 0 0 ; R9 := false
	117	[112]	SETGLOBALHASH	R9 K55 ; mShuttingDown := R9
	118	[113]	LOADNIL  	R9 R9 ; R9 := nil
	119	[113]	SETGLOBALHASH	R9 K56 ; mCurrencyList := R9
	120	[114]	LOADNIL  	R9 R9 ; R9 := nil
	121	[114]	SETGLOBALHASH	R9 K57 ; mSearchBox := R9
	122	[115]	LOADNIL  	R9 R9 ; R9 := nil
	123	[115]	SETGLOBALHASH	R9 K58 ; mSellInfo := R9
	124	[116]	LOADNIL  	R9 R9 ; R9 := nil
	125	[116]	SETGLOBALHASH	R9 K59 ; mSellInfoItems := R9
	126	[117]	LOADNIL  	R9 R9 ; R9 := nil
	127	[117]	SETGLOBALHASH	R9 K60 ; mScrapCount := R9
	128	[119]	LOADNIL  	R9 R13 ; R9 := R10 := R11 := R12 := R13 := nil
	129	[124]	SETGLOBALHASH	R13 K61 ; mFuseElement1 := R13
	130	[125]	LOADNIL  	R13 R13 ; R13 := nil
	131	[125]	SETGLOBALHASH	R13 K62 ; mFuseElement2 := R13
	132	[126]	LOADNIL  	R13 R13 ; R13 := nil
	133	[126]	SETGLOBALHASH	R13 K63 ; mFuseElement3 := R13
	134	[127]	OP_LOADBOOL	R13 0 0 ; R13 := false
	135	[127]	SETGLOBALHASH	R13 K64 ; mEquipAfterFuse := R13
	136	[128]	NEWTABLE 	R13 3 0 ; R13 := {}
	137	[128]	LOADK    	R14 K66 ; R14 := 1.100000
	138	[128]	LOADK    	R15 K67 ; R15 := 1.050000
	139	[128]	LOADK    	R16 K68 ; R16 := 1.020000
	140	[128]	SETLIST  	R13 3 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
	141	[128]	SETGLOBALHASH	R13 K65 ; FUSE_MULTIPLIERS := R13
	142	[129]	LOADK    	R13 := 1073741824.000000
	143	[129]	SETGLOBALHASH	R13 K69 ; FUSE_MAX_VALUE := R13
	144	[131]	NEWTABLE 	R13 0 4 ; R13 := {}
	145	[131]	SETTABLE 	R13 K70 K71 ; R13["PILOT"] := 1.000000
	146	[131]	SETTABLE 	R13 K72 K73 ; R13["TURRET"] := 2.000000
	147	[131]	SETTABLE 	R13 K74 K75 ; R13["ORDINANCE"] := 3.000000
	148	[131]	SETTABLE 	R13 K76 K77 ; R13["COUNTERMEASURES"] := 4.000000
	149	[132]	NEWTABLE 	R14 0 4 ; R14 := {}
	150	[132]	SETTABLE 	R14 K78 K71 ; R14["RENAME_SHIP"] := 1.000000
	151	[132]	SETTABLE 	R14 K79 K73 ; R14["ATTACHMENTS"] := 2.000000
	152	[132]	SETTABLE 	R14 K80 K75 ; R14["COLORS"] := 3.000000
	153	[132]	SETTABLE 	R14 K81 K77 ; R14["ALL_COLORS"] := 4.000000
	154	[133]	NEWTABLE 	R15 0 15 ; R15 := {}
	155	[133]	SETTABLE 	R15 K82 K71 ; R15["EQUIPMENT"] := 1.000000
	156	[133]	SETTABLE 	R15 K83 K73 ; R15["WEAPONS"] := 2.000000
	157	[133]	SETTABLE 	R15 K84 K75 ; R15["EQUIP_INV"] := 3.000000
	158	[133]	SETTABLE 	R15 K85 K77 ; R15["WEAPON_INV"] := 4.000000
	159	[133]	SETTABLE 	R15 K86 K87 ; R15["COSMETICS"] := 5.000000
	160	[133]	SETTABLE 	R15 K79 K88 ; R15["ATTACHMENTS"] := 6.000000
	161	[133]	SETTABLE 	R15 K89 K90 ; R15["COLOR_PICKER"] := 7.000000
	162	[133]	SETTABLE 	R15 K91 K92 ; R15["SYSTEMS"] := 8.000000
	163	[133]	SETTABLE 	R15 K93 K94 ; R15["RESOURCES"] := 9.000000
	164	[133]	SETTABLE 	R15 K78 K95 ; R15["RENAME_SHIP"] := 10.000000
	165	[133]	SETTABLE 	R15 K96 K97 ; R15["INTRINSICS"] := 11.000000
	166	[133]	SETTABLE 	R15 K98 K99 ; R15["SKIN_SELECTION"] := 12.000000
	167	[133]	SETTABLE 	R15 K100 K101 ; R15["CREW_MGR"] := 13.000000
	168	[133]	SETTABLE 	R15 K102 K103 ; R15["ARCHWING"] := 14.000000
	169	[133]	SETTABLE 	R15 K104 K105 ; R15["ARCH_INV"] := 15.000000
	170	[135]	NEWTABLE 	R16 0 6 ; R16 := {}
	171	[135]	SETTABLE 	R16 K106 K71 ; R16["UNIDENTIFIED"] := 1.000000
	172	[135]	SETTABLE 	R16 K107 K73 ; R16["IDENTIFIED"] := 2.000000
	173	[135]	SETTABLE 	R16 K108 K75 ; R16["AWAITING_FUNDS"] := 3.000000
	174	[135]	SETTABLE 	R16 K109 K77 ; R16["AWAITING_COMPLETION"] := 4.000000
	175	[135]	SETTABLE 	R16 K110 K87 ; R16["COMPLETED"] := 5.000000
	176	[135]	SETTABLE 	R16 K111 K88 ; R16["OWNED"] := 6.000000
	177	[137]	NEWTABLE 	R17 0 5 ; R17 := {}
	178	[137]	SETTABLE 	R17 K112 K71 ; R17["REPAIR"] := 1.000000
	179	[137]	SETTABLE 	R17 K113 K73 ; R17["SELL"] := 2.000000
	180	[137]	SETTABLE 	R17 K114 K75 ; R17["SELL_BULK"] := 3.000000
	181	[137]	SETTABLE 	R17 K115 K77 ; R17["CONTRIBUTE"] := 4.000000
	182	[137]	SETTABLE 	R17 K116 K87 ; R17["CANCEL"] := 5.000000
	183	[139]	LOADK    	R18 := 30.000000
	184	[141]	NEWTABLE 	R19 3 0 ; R19 := {}
	185	[141]	LOADK    	R20 K117 ; R20 := "Components"
	186	[141]	LOADK    	R21 K118 ; R21 := "Wreckage"
	187	[141]	LOADK    	R22 K119 ; R22 := "Unidentified"
	188	[141]	SETLIST  	R19 3 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 3
	189	[143]	GETGLOBAL	R20 K120 ; R20 := 0x0469f296
	190	[143]	LOADK    	R21 K121 ; R21 := "GondolaTube"
	191	[143]	CALL     	R20 2 2 ; R20 := R20(R21)
	192	[145]	NEWTABLE 	R21 3 0 ; R21 := {}
	193	[145]	LOADK    	R22 K122 ; R22 := "Lavan"
	194	[145]	LOADK    	R23 K123 ; R23 := "Vidar"
	195	[145]	LOADK    	R24 K124 ; R24 := "Zekti"
	196	[145]	SETLIST  	R21 3 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 3
	197	[147]	NEWTABLE 	R22 0 3 ; R22 := {}
	198	[147]	SETTABLE 	R22 K125 K71 ; R22["A"] := 1.000000
	199	[147]	SETTABLE 	R22 K126 K73 ; R22["B"] := 2.000000
	200	[147]	SETTABLE 	R22 K127 K75 ; R22["C"] := 3.000000
	201	[149]	NEWTABLE 	R23 3 0 ; R23 := {}
	202	[150]	NEWTABLE 	R24 0 3 ; R24 := {}
	203	[152]	SETTABLE 	R24 K71 K128 ; R24[1.000000] := 400.000000
	204	[153]	SETTABLE 	R24 K73 K129 ; R24[2.000000] := 600.000000
	205	[154]	SETTABLE 	R24 K75 K130 ; R24[3.000000] := 800.000000
	206	[155]	NEWTABLE 	R25 0 2 ; R25 := {}
	207	[157]	SETTABLE 	R25 K73 K131 ; R25[2.000000] := 1200.000000
	208	[158]	SETTABLE 	R25 K75 K132 ; R25[3.000000] := 1600.000000
	209	[159]	NEWTABLE 	R26 0 1 ; R26 := {}
	210	[161]	SETTABLE 	R26 K75 K133 ; R26[3.000000] := 2400.000000
	211	[163]	SETLIST  	R23 3 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 3
	212	[165]	NEWTABLE 	R24 3 0 ; R24 := {}
	213	[166]	NEWTABLE 	R25 0 3 ; R25 := {}
	214	[168]	SETTABLE 	R25 K71 K134 ; R25[1.000000] := 20.000000
	215	[169]	SETTABLE 	R25 K73 K135 ; R25[2.000000] := 30.000000
	216	[170]	SETTABLE 	R25 K75 K136 ; R25[3.000000] := 40.000000
	217	[171]	NEWTABLE 	R26 0 2 ; R26 := {}
	218	[173]	SETTABLE 	R26 K73 K135 ; R26[2.000000] := 30.000000
	219	[174]	SETTABLE 	R26 K75 K136 ; R26[3.000000] := 40.000000
	220	[175]	NEWTABLE 	R27 0 1 ; R27 := {}
	221	[177]	SETTABLE 	R27 K75 K136 ; R27[3.000000] := 40.000000
	222	[179]	SETLIST  	R24 3 1 ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 3
	223	[181]	NEWTABLE 	R25 0 8 ; R25 := {}
	224	[183]	SETTABLE 	R25 K137 K138 ; R25["ALL"] := 0.000000
	225	[184]	SETTABLE 	R25 K139 K71 ; R25["MKI"] := 1.000000
	226	[185]	SETTABLE 	R25 K140 K73 ; R25["MKII"] := 2.000000
	227	[186]	SETTABLE 	R25 K141 K75 ; R25["MKIII"] := 3.000000
	228	[187]	SETTABLE 	R25 K142 K77 ; R25["LAVAN"] := 4.000000
	229	[188]	SETTABLE 	R25 K143 K87 ; R25["VIDAR"] := 5.000000
	230	[189]	SETTABLE 	R25 K144 K88 ; R25["ZEKTI"] := 6.000000
	231	[190]	SETTABLE 	R25 K145 K90 ; R25["SIGMA"] := 7.000000
	232	[193]	NEWTABLE 	R26 0 14 ; R26 := {}
	233	[195]	GETTABLE 	R27 R15 K83 ; R27 := R15["WEAPONS"]
	234	[195]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	235	[195]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	236	[196]	GETTABLE 	R27 R15 K84 ; R27 := R15["EQUIP_INV"]
	237	[196]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	238	[196]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	239	[197]	GETTABLE 	R27 R15 K86 ; R27 := R15["COSMETICS"]
	240	[197]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	241	[197]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	242	[198]	GETTABLE 	R27 R15 K91 ; R27 := R15["SYSTEMS"]
	243	[198]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	244	[198]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	245	[199]	GETTABLE 	R27 R15 K93 ; R27 := R15["RESOURCES"]
	246	[199]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	247	[199]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	248	[200]	GETTABLE 	R27 R15 K96 ; R27 := R15["INTRINSICS"]
	249	[200]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	250	[200]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	251	[201]	GETTABLE 	R27 R15 K100 ; R27 := R15["CREW_MGR"]
	252	[201]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	253	[201]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	254	[202]	GETTABLE 	R27 R15 K102 ; R27 := R15["ARCHWING"]
	255	[202]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	256	[202]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	257	[203]	GETTABLE 	R27 R15 K104 ; R27 := R15["ARCH_INV"]
	258	[203]	GETTABLE 	R28 R15 K102 ; R28 := R15["ARCHWING"]
	259	[203]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	260	[204]	GETTABLE 	R27 R15 K85 ; R27 := R15["WEAPON_INV"]
	261	[204]	GETTABLE 	R28 R15 K83 ; R28 := R15["WEAPONS"]
	262	[204]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	263	[205]	GETTABLE 	R27 R15 K78 ; R27 := R15["RENAME_SHIP"]
	264	[205]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	265	[205]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	266	[206]	GETTABLE 	R27 R15 K79 ; R27 := R15["ATTACHMENTS"]
	267	[206]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	268	[206]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	269	[207]	GETTABLE 	R27 R15 K89 ; R27 := R15["COLOR_PICKER"]
	270	[207]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	271	[207]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	272	[208]	GETTABLE 	R27 R15 K98 ; R27 := R15["SKIN_SELECTION"]
	273	[208]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	274	[208]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	275	[210]	GETGLOBAL	R27 K120 ; R27 := 0x0469f296
	276	[210]	LOADK    	R28 K146 ; R28 := "EngineRoomFacingRear"
	277	[210]	CALL     	R27 2 2 ; R27 := R27(R28)
	278	[211]	GETGLOBAL	R28 K120 ; R28 := 0x0469f296
	279	[211]	LOADK    	R29 K147 ; R29 := "EngineRoomUpperFacingFront"
	280	[211]	CALL     	R28 2 2 ; R28 := R28(R29)
	281	[212]	GETGLOBAL	R29 K120 ; R29 := 0x0469f296
	282	[212]	LOADK    	R30 K148 ; R30 := "SideViewCam"
	283	[212]	CALL     	R29 2 2 ; R29 := R29(R30)
	284	[213]	GETGLOBAL	R30 K120 ; R30 := 0x0469f296
	285	[213]	LOADK    	R31 K149 ; R31 := "WeaponPathCam"
	286	[213]	CALL     	R30 2 2 ; R30 := R30(R31)
	287	[214]	GETGLOBAL	R31 K120 ; R31 := 0x0469f296
	288	[214]	LOADK    	R32 K150 ; R32 := "WeaponPathCam_Caballero"
	289	[214]	CALL     	R31 2 2 ; R31 := R31(R32)
	290	[215]	GETGLOBAL	R32 K120 ; R32 := 0x0469f296
	291	[215]	LOADK    	R33 K151 ; R33 := "WeaponPathCam_SunGem"
	292	[215]	CALL     	R32 2 2 ; R32 := R32(R33)
	293	[216]	GETGLOBAL	R33 K120 ; R33 := 0x0469f296
	294	[216]	LOADK    	R34 K152 ; R34 := "WeaponPathCam_Ghost"
	295	[216]	CALL     	R33 2 2 ; R33 := R33(R34)
	296	[217]	GETGLOBAL	R34 K120 ; R34 := 0x0469f296
	297	[217]	LOADK    	R35 K153 ; R35 := "CosmeticPathCam"
	298	[217]	CALL     	R34 2 2 ; R34 := R34(R35)
	299	[218]	GETGLOBAL	R35 K120 ; R35 := 0x0469f296
	300	[218]	LOADK    	R36 K154 ; R36 := "CosmeticPathCam_Caballero"
	301	[218]	CALL     	R35 2 2 ; R35 := R35(R36)
	302	[219]	GETGLOBAL	R36 K120 ; R36 := 0x0469f296
	303	[219]	LOADK    	R37 K155 ; R37 := "CosmeticPathCam_SunGem"
	304	[219]	CALL     	R36 2 2 ; R36 := R36(R37)
	305	[220]	GETGLOBAL	R37 K120 ; R37 := 0x0469f296
	306	[220]	LOADK    	R38 K156 ; R38 := "CosmeticPathCam_Ghost"
	307	[220]	CALL     	R37 2 2 ; R37 := R37(R38)
	308	[221]	GETGLOBAL	R38 K120 ; R38 := 0x0469f296
	309	[221]	LOADK    	R39 K157 ; R39 := "RailjackSpawn"
	310	[221]	CALL     	R38 2 2 ; R38 := R38(R39)
	311	[222]	GETGLOBAL	R39 K120 ; R39 := 0x0469f296
	312	[222]	LOADK    	R40 K158 ; R40 := "RailJackAvatar"
	313	[222]	CALL     	R39 2 2 ; R39 := R39(R40)
	314	[223]	GETGLOBAL	R40 K120 ; R40 := 0x0469f296
	315	[223]	LOADK    	R41 K159 ; R41 := "CrewshipLoadout"
	316	[223]	CALL     	R40 2 2 ; R40 := R40(R41)
	317	[224]	GETGLOBAL	R41 K120 ; R41 := 0x0469f296
	318	[224]	LOADK    	R42 K160 ; R42 := "CrewshipBoardingAction"
	319	[224]	CALL     	R41 2 2 ; R41 := R41(R42)
	320	[225]	GETGLOBAL	R42 K120 ; R42 := 0x0469f296
	321	[225]	LOADK    	R43 K161 ; R43 := "HubIgnoreNearCull"
	322	[225]	CALL     	R42 2 2 ; R42 := R42(R43)
	323	[226]	GETGLOBAL	R43 K120 ; R43 := 0x0469f296
	324	[226]	LOADK    	R44 K162 ; R44 := "RailjackPostInit"
	325	[226]	CALL     	R43 2 2 ; R43 := R43(R44)
	326	[227]	GETGLOBAL	R44 K120 ; R44 := 0x0469f296
	327	[227]	LOADK    	R45 K163 ; R45 := "HangarRefPoint"
	328	[227]	CALL     	R44 2 2 ; R44 := R44(R45)
	329	[228]	GETGLOBAL	R45 K120 ; R45 := 0x0469f296
	330	[228]	LOADK    	R46 K164 ; R46 := "HubRailJackCam"
	331	[228]	CALL     	R45 2 2 ; R45 := R45(R46)
	332	[230]	LOADK    	R46 := 260.000000
	333	[234]	CLOSURE  	R47 0 ; R47 := closure(Function #1)
	334	[245]	CLOSURE  	R48 1 ; R48 := closure(Function #2)
	335	[245]	MOVE     	R0 R41 ; R0 := R41
	336	[270]	CLOSURE  	R49 2 ; R49 := closure(Function #3)
	337	[270]	MOVE     	R0 R5 ; R0 := R5
	338	[270]	MOVE     	R0 R39 ; R0 := R39
	339	[270]	MOVE     	R0 R6 ; R0 := R6
	340	[295]	CLOSURE  	R50 3 ; R50 := closure(Function #4)
	341	[295]	MOVE     	R0 R6 ; R0 := R6
	342	[295]	MOVE     	R0 R49 ; R0 := R49
	343	[315]	CLOSURE  	R51 4 ; R51 := closure(Function #5)
	344	[320]	CLOSURE  	R52 5 ; R52 := closure(Function #6)
	345	[383]	CLOSURE  	R53 6 ; R53 := closure(Function #7)
	346	[383]	MOVE     	R0 R5 ; R0 := R5
	347	[383]	MOVE     	R0 R39 ; R0 := R39
	348	[383]	MOVE     	R0 R6 ; R0 := R6
	349	[383]	MOVE     	R0 R51 ; R0 := R51
	350	[383]	MOVE     	R0 R44 ; R0 := R44
	351	[383]	MOVE     	R0 R49 ; R0 := R49
	352	[383]	MOVE     	R0 R50 ; R0 := R50
	353	[322]	SETGLOBAL	R53 K165 ; RefreshShipLoadOut := R53
	354	[394]	CLOSURE  	R53 7 ; R53 := closure(Function #8)
	355	[410]	CLOSURE  	R54 8 ; R54 := closure(Function #9)
	356	[410]	MOVE     	R0 R53 ; R0 := R53
	357	[412]	GETGLOBAL	R55 K166 ; R55 := ZERO_VECTOR
	358	[483]	CLOSURE  	R56 9 ; R56 := closure(Function #10)
	359	[483]	MOVE     	R0 R5 ; R0 := R5
	360	[483]	MOVE     	R0 R38 ; R0 := R38
	361	[483]	MOVE     	R0 R55 ; R0 := R55
	362	[483]	MOVE     	R0 R54 ; R0 := R54
	363	[483]	MOVE     	R0 R40 ; R0 := R40
	364	[483]	MOVE     	R0 R48 ; R0 := R48
	365	[483]	MOVE     	R0 R20 ; R0 := R20
	366	[483]	MOVE     	R0 R42 ; R0 := R42
	367	[483]	MOVE     	R0 R43 ; R0 := R43
	368	[483]	MOVE     	R0 R50 ; R0 := R50
	369	[487]	CLOSURE  	R57 10 ; R57 := closure(Function #11)
	370	[487]	MOVE     	R0 R56 ; R0 := R56
	371	[485]	SETGLOBAL	R57 K167 ; ShipReady := R57
	372	[494]	CLOSURE  	R57 11 ; R57 := closure(Function #12)
	373	[600]	CLOSURE  	R58 12 ; R58 := closure(Function #13)
	374	[600]	MOVE     	R0 R53 ; R0 := R53
	375	[600]	MOVE     	R0 R49 ; R0 := R49
	376	[600]	MOVE     	R0 R50 ; R0 := R50
	377	[600]	MOVE     	R0 R57 ; R0 := R57
	378	[600]	MOVE     	R0 R54 ; R0 := R54
	379	[600]	MOVE     	R0 R48 ; R0 := R48
	380	[600]	MOVE     	R0 R44 ; R0 := R44
	381	[496]	SETGLOBAL	R58 K168 ; UpdateLocalCrewShip := R58
	382	[658]	CLOSURE  	R58 13 ; R58 := closure(Function #14)
	383	[658]	MOVE     	R0 R6 ; R0 := R6
	384	[658]	MOVE     	R0 R46 ; R0 := R46
	385	[604]	SETGLOBAL	R58 K169 ; UpdateNoCrewship := R58
	386	[691]	CLOSURE  	R58 14 ; R58 := closure(Function #15)
	387	[691]	MOVE     	R0 R39 ; R0 := R39
	388	[660]	SETGLOBAL	R58 K170 ; SetupInLiset := R58
	389	[809]	CLOSURE  	R58 15 ; R58 := closure(Function #16)
	390	[809]	MOVE     	R0 R55 ; R0 := R55
	391	[809]	MOVE     	R0 R40 ; R0 := R40
	392	[809]	MOVE     	R0 R48 ; R0 := R48
	393	[809]	MOVE     	R0 R56 ; R0 := R56
	394	[809]	MOVE     	R0 R6 ; R0 := R6
	395	[809]	MOVE     	R0 R46 ; R0 := R46
	396	[693]	SETGLOBAL	R58 K171 ; SetupCrewshipHangar := R58
	397	[922]	CLOSURE  	R58 16 ; R58 := closure(Function #17)
	398	[922]	MOVE     	R0 R1 ; R0 := R1
	399	[922]	MOVE     	R0 R5 ; R0 := R5
	400	[922]	MOVE     	R0 R39 ; R0 := R39
	401	[811]	SETGLOBAL	R58 K172 ; BoardShip := R58
	402	[933]	CLOSURE  	R58 17 ; R58 := closure(Function #18)
	403	[937]	CLOSURE  	R59 18 ; R59 := closure(Function #19)
	404	[941]	CLOSURE  	R60 19 ; R60 := closure(Function #20)
	405	[955]	CLOSURE  	R61 20 ; R61 := closure(Function #21)
	406	[955]	MOVE     	R0 R59 ; R0 := R59
	407	[955]	MOVE     	R0 R58 ; R0 := R58
	408	[1079]	CLOSURE  	R62 21 ; R62 := closure(Function #22)
	409	[1079]	MOVE     	R0 R15 ; R0 := R15
	410	[1102]	CLOSURE  	R63 22 ; R63 := closure(Function #23)
	411	[1102]	MOVE     	R0 R15 ; R0 := R15
	412	[1102]	MOVE     	R0 R10 ; R0 := R10
	413	[1158]	CLOSURE  	R64 23 ; R64 := closure(Function #24)
	414	[1158]	MOVE     	R0 R5 ; R0 := R5
	415	[1158]	MOVE     	R0 R1 ; R0 := R1
	416	[1206]	CLOSURE  	R65 24 ; R65 := closure(Function #25)
	417	[1206]	MOVE     	R0 R64 ; R0 := R64
	418	[1206]	MOVE     	R0 R49 ; R0 := R49
	419	[1160]	SETGLOBAL	R65 K173 ; Shutdown := R65
	420	[1236]	CLOSURE  	R65 25 ; R65 := closure(Function #26)
	421	[1236]	MOVE     	R0 R64 ; R0 := R64
	422	[1236]	MOVE     	R0 R1 ; R0 := R1
	423	[1236]	MOVE     	R0 R59 ; R0 := R59
	424	[1236]	MOVE     	R0 R58 ; R0 := R58
	425	[1236]	MOVE     	R0 R60 ; R0 := R60
	426	[1240]	CLOSURE  	R66 26 ; R66 := closure(Function #27)
	427	[1240]	MOVE     	R0 R65 ; R0 := R65
	428	[1238]	SETGLOBAL	R66 K174 ; Close := R66
	429	[1263]	CLOSURE  	R66 27 ; R66 := closure(Function #28)
	430	[1263]	MOVE     	R0 R63 ; R0 := R63
	431	[1263]	MOVE     	R0 R26 ; R0 := R26
	432	[1263]	MOVE     	R0 R9 ; R0 := R9
	433	[1263]	MOVE     	R0 R15 ; R0 := R15
	434	[1263]	MOVE     	R0 R65 ; R0 := R65
	435	[1267]	CLOSURE  	R67 28 ; R67 := closure(Function #29)
	436	[1267]	MOVE     	R0 R66 ; R0 := R66
	437	[1265]	SETGLOBAL	R67 K175 ; GoBack := R67
	438	[1279]	CLOSURE  	R67 29 ; R67 := closure(Function #30)
	439	[1279]	MOVE     	R0 R26 ; R0 := R26
	440	[1279]	MOVE     	R0 R9 ; R0 := R9
	441	[1279]	MOVE     	R0 R67 ; R0 := R67
	442	[1294]	CLOSURE  	R68 30 ; R68 := closure(Function #31)
	443	[1294]	MOVE     	R0 R5 ; R0 := R5
	444	[1342]	CLOSURE  	R69 31 ; R69 := closure(Function #32)
	445	[1342]	MOVE     	R0 R68 ; R0 := R68
	446	[1342]	MOVE     	R0 R3 ; R0 := R3
	447	[1342]	MOVE     	R0 R15 ; R0 := R15
	448	[1342]	MOVE     	R0 R5 ; R0 := R5
	449	[1395]	CLOSURE  	R70 32 ; R70 := closure(Function #33)
	450	[1395]	MOVE     	R0 R15 ; R0 := R15
	451	[1395]	MOVE     	R0 R3 ; R0 := R3
	452	[1395]	MOVE     	R0 R16 ; R0 := R16
	453	[1395]	MOVE     	R0 R26 ; R0 := R26
	454	[1399]	CLOSURE  	R71 33 ; R71 := closure(Function #34)
	455	[1399]	MOVE     	R0 R70 ; R0 := R70
	456	[1397]	SETGLOBAL	R71 K176 ; UpdateButtons := R71
	457	[1427]	CLOSURE  	R71 34 ; R71 := closure(Function #35)
	458	[1427]	MOVE     	R0 R5 ; R0 := R5
	459	[1621]	CLOSURE  	R72 35 ; R72 := closure(Function #36)
	460	[1621]	MOVE     	R0 R16 ; R0 := R16
	461	[1621]	MOVE     	R0 R1 ; R0 := R1
	462	[1621]	MOVE     	R0 R4 ; R0 := R4
	463	[1621]	MOVE     	R0 R8 ; R0 := R8
	464	[1655]	CLOSURE  	R73 36 ; R73 := closure(Function #37)
	465	[1655]	MOVE     	R0 R8 ; R0 := R8
	466	[1655]	MOVE     	R0 R5 ; R0 := R5
	467	[1655]	MOVE     	R0 R4 ; R0 := R4
	468	[1705]	CLOSURE  	R74 37 ; R74 := closure(Function #38)
	469	[1705]	MOVE     	R0 R8 ; R0 := R8
	470	[1705]	MOVE     	R0 R4 ; R0 := R4
	471	[1705]	MOVE     	R0 R5 ; R0 := R5
	472	[1723]	CLOSURE  	R75 38 ; R75 := closure(Function #39)
	473	[1723]	MOVE     	R0 R4 ; R0 := R4
	474	[1723]	MOVE     	R0 R25 ; R0 := R25
	475	[1739]	CLOSURE  	R76 39 ; R76 := closure(Function #40)
	476	[1739]	MOVE     	R0 R72 ; R0 := R72
	477	[1780]	CLOSURE  	R77 40 ; R77 := closure(Function #41)
	478	[1780]	MOVE     	R0 R8 ; R0 := R8
	479	[1780]	MOVE     	R0 R76 ; R0 := R76
	480	[1780]	MOVE     	R0 R4 ; R0 := R4
	481	[1780]	MOVE     	R0 R75 ; R0 := R75
	482	[1780]	MOVE     	R0 R5 ; R0 := R5
	483	[1780]	MOVE     	R0 R71 ; R0 := R71
	484	[1803]	CLOSURE  	R78 41 ; R78 := closure(Function #42)
	485	[1858]	CLOSURE  	R79 42 ; R79 := closure(Function #43)
	486	[1858]	MOVE     	R0 R8 ; R0 := R8
	487	[1858]	MOVE     	R0 R73 ; R0 := R73
	488	[1858]	MOVE     	R0 R74 ; R0 := R74
	489	[1858]	MOVE     	R0 R72 ; R0 := R72
	490	[1858]	MOVE     	R0 R78 ; R0 := R78
	491	[1858]	MOVE     	R0 R4 ; R0 := R4
	492	[1864]	CLOSURE  	R80 43 ; R80 := closure(Function #44)
	493	[1864]	MOVE     	R0 R62 ; R0 := R62
	494	[1864]	MOVE     	R0 R70 ; R0 := R70
	495	[1864]	MOVE     	R0 R11 ; R0 := R11
	496	[1904]	CLOSURE  	R10 44 ; R10 := closure(Function #45)
	497	[1904]	MOVE     	R0 R62 ; R0 := R62
	498	[1904]	MOVE     	R0 R15 ; R0 := R15
	499	[1904]	MOVE     	R0 R74 ; R0 := R74
	500	[1904]	MOVE     	R0 R66 ; R0 := R66
	501	[1904]	MOVE     	R0 R58 ; R0 := R58
	502	[1904]	MOVE     	R0 R12 ; R0 := R12
	503	[1991]	CLOSURE  	R81 45 ; R81 := closure(Function #46)
	504	[1991]	MOVE     	R0 R61 ; R0 := R61
	505	[1991]	MOVE     	R0 R59 ; R0 := R59
	506	[1991]	MOVE     	R0 R58 ; R0 := R58
	507	[1991]	MOVE     	R0 R20 ; R0 := R20
	508	[2028]	CLOSURE  	R82 46 ; R82 := closure(Function #47)
	509	[2028]	MOVE     	R0 R8 ; R0 := R8
	510	[2051]	CLOSURE  	R83 47 ; R83 := closure(Function #48)
	511	[2051]	MOVE     	R0 R8 ; R0 := R8
	512	[2055]	CLOSURE  	R84 48 ; R84 := closure(Function #49)
	513	[2055]	MOVE     	R0 R69 ; R0 := R69
	514	[2053]	SETGLOBAL	R84 K177 ; onViewportSizeChanged := R84
	515	[2058]	CLOSURE  	R84 49 ; R84 := closure(Function #50)
	516	[2057]	SETGLOBAL	R84 K178 ; OnUpdateSessionSettings := R84
	517	[2083]	CLOSURE  	R84 50 ; R84 := closure(Function #51)
	518	[2083]	MOVE     	R0 R1 ; R0 := R1
	519	[2060]	SETGLOBAL	R84 K179 ; OnSaveLoadOutComplete := R84
	520	[2095]	CLOSURE  	R84 51 ; R84 := closure(Function #52)
	521	[2101]	CLOSURE  	R85 52 ; R85 := closure(Function #53)
	522	[2097]	SETGLOBAL	R85 K180 ; SetTopContainerVis := R85
	523	[2118]	CLOSURE  	R85 53 ; R85 := closure(Function #54)
	524	[2135]	CLOSURE  	R86 54 ; R86 := closure(Function #55)
	525	[2135]	MOVE     	R0 R35 ; R0 := R35
	526	[2135]	MOVE     	R0 R37 ; R0 := R37
	527	[2135]	MOVE     	R0 R36 ; R0 := R36
	528	[2135]	MOVE     	R0 R34 ; R0 := R34
	529	[2152]	CLOSURE  	R12 55 ; R12 := closure(Function #56)
	530	[2152]	MOVE     	R0 R85 ; R0 := R85
	531	[2152]	MOVE     	R0 R5 ; R0 := R5
	532	[2152]	MOVE     	R0 R13 ; R0 := R13
	533	[2200]	CLOSURE  	R87 56 ; R87 := closure(Function #57)
	534	[2200]	MOVE     	R0 R27 ; R0 := R27
	535	[2200]	MOVE     	R0 R1 ; R0 := R1
	536	[2200]	MOVE     	R0 R45 ; R0 := R45
	537	[2200]	MOVE     	R0 R29 ; R0 := R29
	538	[2200]	MOVE     	R0 R5 ; R0 := R5
	539	[2200]	MOVE     	R0 R28 ; R0 := R28
	540	[2206]	CLOSURE  	R88 57 ; R88 := closure(Function #58)
	541	[2206]	MOVE     	R0 R87 ; R0 := R87
	542	[2221]	CLOSURE  	R89 58 ; R89 := closure(Function #59)
	543	[2221]	MOVE     	R0 R87 ; R0 := R87
	544	[2221]	MOVE     	R0 R86 ; R0 := R86
	545	[2221]	MOVE     	R0 R84 ; R0 := R84
	546	[2221]	MOVE     	R0 R29 ; R0 := R29
	547	[2231]	CLOSURE  	R90 59 ; R90 := closure(Function #60)
	548	[2231]	MOVE     	R0 R9 ; R0 := R9
	549	[2245]	CLOSURE  	R91 60 ; R91 := closure(Function #61)
	550	[2245]	MOVE     	R0 R5 ; R0 := R5
	551	[2265]	CLOSURE  	R92 61 ; R92 := closure(Function #62)
	552	[2265]	MOVE     	R0 R91 ; R0 := R91
	553	[2265]	MOVE     	R0 R5 ; R0 := R5
	554	[2265]	MOVE     	R0 R66 ; R0 := R66
	555	[2269]	CLOSURE  	R93 62 ; R93 := closure(Function #63)
	556	[2269]	MOVE     	R0 R92 ; R0 := R92
	557	[2267]	SETGLOBAL	R93 K181 ; ConfirmShipText := R93
	558	[2275]	CLOSURE  	R93 63 ; R93 := closure(Function #64)
	559	[2275]	MOVE     	R0 R92 ; R0 := R92
	560	[2271]	SETGLOBAL	R93 K182 ; OSKConfirmShipText := R93
	561	[2284]	CLOSURE  	R93 64 ; R93 := closure(Function #65)
	562	[2284]	MOVE     	R0 R90 ; R0 := R90
	563	[2284]	MOVE     	R0 R1 ; R0 := R1
	564	[2309]	CLOSURE  	R94 65 ; R94 := closure(Function #66)
	565	[2309]	MOVE     	R0 R59 ; R0 := R59
	566	[2309]	MOVE     	R0 R81 ; R0 := R81
	567	[2309]	MOVE     	R0 R58 ; R0 := R58
	568	[2507]	CLOSURE  	R95 66 ; R95 := closure(Function #67)
	569	[2507]	MOVE     	R0 R61 ; R0 := R61
	570	[2507]	MOVE     	R0 R58 ; R0 := R58
	571	[2507]	MOVE     	R0 R59 ; R0 := R59
	572	[2507]	MOVE     	R0 R15 ; R0 := R15
	573	[2507]	MOVE     	R0 R14 ; R0 := R14
	574	[2507]	MOVE     	R0 R93 ; R0 := R93
	575	[2507]	MOVE     	R0 R7 ; R0 := R7
	576	[2507]	MOVE     	R0 R94 ; R0 := R94
	577	[2507]	MOVE     	R0 R89 ; R0 := R89
	578	[2507]	MOVE     	R0 R90 ; R0 := R90
	579	[2507]	MOVE     	R0 R8 ; R0 := R8
	580	[2507]	MOVE     	R0 R79 ; R0 := R79
	581	[2507]	MOVE     	R0 R80 ; R0 := R80
	582	[2507]	MOVE     	R0 R10 ; R0 := R10
	583	[2507]	MOVE     	R0 R78 ; R0 := R78
	584	[2600]	CLOSURE  	R96 67 ; R96 := closure(Function #68)
	585	[2600]	MOVE     	R0 R5 ; R0 := R5
	586	[2600]	MOVE     	R0 R63 ; R0 := R63
	587	[2600]	MOVE     	R0 R67 ; R0 := R67
	588	[2600]	MOVE     	R0 R88 ; R0 := R88
	589	[2600]	MOVE     	R0 R95 ; R0 := R95
	590	[2600]	MOVE     	R0 R9 ; R0 := R9
	591	[2600]	MOVE     	R0 R87 ; R0 := R87
	592	[2600]	MOVE     	R0 R68 ; R0 := R68
	593	[2652]	CLOSURE  	R97 68 ; R97 := closure(Function #69)
	594	[2652]	MOVE     	R0 R8 ; R0 := R8
	595	[2680]	CLOSURE  	R98 69 ; R98 := closure(Function #70)
	596	[2680]	MOVE     	R0 R15 ; R0 := R15
	597	[2680]	MOVE     	R0 R97 ; R0 := R97
	598	[2680]	MOVE     	R0 R29 ; R0 := R29
	599	[2680]	MOVE     	R0 R5 ; R0 := R5
	600	[2812]	CLOSURE  	R99 70 ; R99 := closure(Function #71)
	601	[2812]	MOVE     	R0 R15 ; R0 := R15
	602	[2812]	MOVE     	R0 R8 ; R0 := R8
	603	[2812]	MOVE     	R0 R4 ; R0 := R4
	604	[2812]	MOVE     	R0 R82 ; R0 := R82
	605	[2812]	MOVE     	R0 R83 ; R0 := R83
	606	[2866]	CLOSURE  	R100 71 ; R100 := closure(Function #72)
	607	[2866]	MOVE     	R0 R8 ; R0 := R8
	608	[2866]	MOVE     	R0 R4 ; R0 := R4
	609	[2866]	MOVE     	R0 R82 ; R0 := R82
	610	[2866]	MOVE     	R0 R83 ; R0 := R83
	611	[2882]	CLOSURE  	R101 72 ; R101 := closure(Function #73)
	612	[3020]	CLOSURE  	R102 73 ; R102 := closure(Function #74)
	613	[3020]	MOVE     	R0 R5 ; R0 := R5
	614	[3020]	MOVE     	R0 R15 ; R0 := R15
	615	[3020]	MOVE     	R0 R86 ; R0 := R86
	616	[3020]	MOVE     	R0 R87 ; R0 := R87
	617	[3020]	MOVE     	R0 R84 ; R0 := R84
	618	[3020]	MOVE     	R0 R30 ; R0 := R30
	619	[3020]	MOVE     	R0 R31 ; R0 := R31
	620	[3020]	MOVE     	R0 R33 ; R0 := R33
	621	[3020]	MOVE     	R0 R32 ; R0 := R32
	622	[3020]	MOVE     	R0 R101 ; R0 := R101
	623	[3020]	MOVE     	R0 R9 ; R0 := R9
	624	[3072]	CLOSURE  	R103 74 ; R103 := closure(Function #75)
	625	[3072]	MOVE     	R0 R15 ; R0 := R15
	626	[3072]	MOVE     	R0 R28 ; R0 := R28
	627	[3072]	MOVE     	R0 R16 ; R0 := R16
	628	[3072]	MOVE     	R0 R58 ; R0 := R58
	629	[3072]	MOVE     	R0 R100 ; R0 := R100
	630	[3091]	CLOSURE  	R104 75 ; R104 := closure(Function #76)
	631	[3091]	MOVE     	R0 R15 ; R0 := R15
	632	[3091]	MOVE     	R0 R99 ; R0 := R99
	633	[3112]	CLOSURE  	R105 76 ; R105 := closure(Function #77)
	634	[3112]	MOVE     	R0 R15 ; R0 := R15
	635	[3112]	MOVE     	R0 R99 ; R0 := R99
	636	[3168]	CLOSURE  	R106 77 ; R106 := closure(Function #78)
	637	[3197]	CLOSURE  	R107 78 ; R107 := closure(Function #79)
	638	[3197]	MOVE     	R0 R5 ; R0 := R5
	639	[3197]	MOVE     	R0 R106 ; R0 := R106
	640	[3230]	CLOSURE  	R108 79 ; R108 := closure(Function #80)
	641	[3230]	MOVE     	R0 R107 ; R0 := R107
	642	[3230]	MOVE     	R0 R18 ; R0 := R18
	643	[3230]	MOVE     	R0 R5 ; R0 := R5
	644	[3245]	CLOSURE  	R109 80 ; R109 := closure(Function #81)
	645	[3245]	MOVE     	R0 R0 ; R0 := R0
	646	[3245]	MOVE     	R0 R5 ; R0 := R5
	647	[3273]	CLOSURE  	R110 81 ; R110 := closure(Function #82)
	648	[3273]	MOVE     	R0 R109 ; R0 := R109
	649	[3273]	MOVE     	R0 R71 ; R0 := R71
	650	[3273]	MOVE     	R0 R108 ; R0 := R108
	651	[3353]	CLOSURE  	R111 82 ; R111 := closure(Function #83)
	652	[3353]	MOVE     	R0 R16 ; R0 := R16
	653	[3353]	MOVE     	R0 R15 ; R0 := R15
	654	[3353]	MOVE     	R0 R70 ; R0 := R70
	655	[3353]	MOVE     	R0 R11 ; R0 := R11
	656	[3353]	MOVE     	R0 R5 ; R0 := R5
	657	[3353]	MOVE     	R0 R66 ; R0 := R66
	658	[3353]	MOVE     	R0 R99 ; R0 := R99
	659	[3353]	MOVE     	R0 R80 ; R0 := R80
	660	[3353]	MOVE     	R0 R10 ; R0 := R10
	661	[3353]	MOVE     	R0 R100 ; R0 := R100
	662	[3380]	CLOSURE  	R112 83 ; R112 := closure(Function #84)
	663	[3380]	MOVE     	R0 R111 ; R0 := R111
	664	[3355]	SETGLOBAL	R112 K183 ; OnConfirmEquip := R112
	665	[3384]	CLOSURE  	R112 84 ; R112 := closure(Function #85)
	666	[3384]	MOVE     	R0 R111 ; R0 := R111
	667	[3382]	SETGLOBAL	R112 K184 ; EquipSelectedItem := R112
	668	[3387]	CLOSURE  	R112 85 ; R112 := closure(Function #86)
	669	[3386]	SETGLOBAL	R112 K185 ; ContributionCallback := R112
	670	[3462]	CLOSURE  	R112 86 ; R112 := closure(Function #87)
	671	[3462]	MOVE     	R0 R15 ; R0 := R15
	672	[3462]	MOVE     	R0 R17 ; R0 := R17
	673	[3462]	MOVE     	R0 R82 ; R0 := R82
	674	[3462]	MOVE     	R0 R83 ; R0 := R83
	675	[3462]	MOVE     	R0 R77 ; R0 := R77
	676	[3462]	MOVE     	R0 R80 ; R0 := R80
	677	[3462]	MOVE     	R0 R111 ; R0 := R111
	678	[3489]	CLOSURE  	R113 87 ; R113 := closure(Function #88)
	679	[3489]	MOVE     	R0 R70 ; R0 := R70
	680	[3489]	MOVE     	R0 R11 ; R0 := R11
	681	[3530]	CLOSURE  	R114 88 ; R114 := closure(Function #89)
	682	[3530]	MOVE     	R0 R5 ; R0 := R5
	683	[3530]	MOVE     	R0 R112 ; R0 := R112
	684	[3530]	MOVE     	R0 R17 ; R0 := R17
	685	[3530]	MOVE     	R0 R113 ; R0 := R113
	686	[3540]	CLOSURE  	R115 89 ; R115 := closure(Function #90)
	687	[3532]	SETGLOBAL	R115 K186 ; OnTechStarted := R115
	688	[3551]	CLOSURE  	R115 90 ; R115 := closure(Function #91)
	689	[3542]	SETGLOBAL	R115 K187 ; InstantRepairConfirm := R115
	690	[3569]	CLOSURE  	R115 91 ; R115 := closure(Function #92)
	691	[3569]	MOVE     	R0 R5 ; R0 := R5
	692	[3553]	SETGLOBAL	R115 K188 ; ShowInstantRepairConfirm := R115
	693	[3578]	CLOSURE  	R115 92 ; R115 := closure(Function #93)
	694	[3603]	CLOSURE  	R116 93 ; R116 := closure(Function #94)
	695	[3603]	MOVE     	R0 R115 ; R0 := R115
	696	[3603]	MOVE     	R0 R114 ; R0 := R114
	697	[3580]	SETGLOBAL	R116 K189 ; RepairSelectedItem := R116
	698	[3630]	CLOSURE  	R116 94 ; R116 := closure(Function #95)
	699	[3630]	MOVE     	R0 R15 ; R0 := R15
	700	[3630]	MOVE     	R0 R112 ; R0 := R112
	701	[3630]	MOVE     	R0 R17 ; R0 := R17
	702	[3630]	MOVE     	R0 R113 ; R0 := R113
	703	[3630]	MOVE     	R0 R108 ; R0 := R108
	704	[3605]	SETGLOBAL	R116 K190 ; OnTechClaimed := R116
	705	[3642]	CLOSURE  	R116 95 ; R116 := closure(Function #96)
	706	[3632]	SETGLOBAL	R116 K191 ; RushConfirm := R116
	707	[3654]	CLOSURE  	R116 96 ; R116 := closure(Function #97)
	708	[3644]	SETGLOBAL	R116 K192 ; ClaimConfirm := R116
	709	[3681]	CLOSURE  	R116 97 ; R116 := closure(Function #98)
	710	[3681]	MOVE     	R0 R5 ; R0 := R5
	711	[3656]	SETGLOBAL	R116 K193 ; OnSlotsResults := R116
	712	[3717]	CLOSURE  	R116 98 ; R116 := closure(Function #99)
	713	[3683]	SETGLOBAL	R116 K194 ; OnUpSellInvSlotsConfirmed := R116
	714	[3724]	CLOSURE  	R116 99 ; R116 := closure(Function #100)
	715	[3724]	MOVE     	R0 R1 ; R0 := R1
	716	[3719]	SETGLOBAL	R116 K195 ; OnInvalidBinError := R116
	717	[3760]	CLOSURE  	R116 100 ; R116 := closure(Function #101)
	718	[3760]	MOVE     	R0 R1 ; R0 := R1
	719	[3760]	MOVE     	R0 R5 ; R0 := R5
	720	[3791]	CLOSURE  	R117 101 ; R117 := closure(Function #102)
	721	[3791]	MOVE     	R0 R52 ; R0 := R52
	722	[3791]	MOVE     	R0 R1 ; R0 := R1
	723	[3791]	MOVE     	R0 R116 ; R0 := R116
	724	[3791]	MOVE     	R0 R5 ; R0 := R5
	725	[3795]	CLOSURE  	R118 102 ; R118 := closure(Function #103)
	726	[3795]	MOVE     	R0 R117 ; R0 := R117
	727	[3793]	SETGLOBAL	R118 K196 ; RushSelectedItem := R118
	728	[3799]	CLOSURE  	R118 103 ; R118 := closure(Function #104)
	729	[3799]	MOVE     	R0 R117 ; R0 := R117
	730	[3797]	SETGLOBAL	R118 K197 ; ClaimSelectedItem := R118
	731	[3801]	LOADK    	R118 := 0.000000
	732	[3817]	CLOSURE  	R119 104 ; R119 := closure(Function #105)
	733	[3817]	MOVE     	R0 R118 ; R0 := R118
	734	[3839]	CLOSURE  	R120 105 ; R120 := closure(Function #106)
	735	[3839]	MOVE     	R0 R112 ; R0 := R112
	736	[3839]	MOVE     	R0 R17 ; R0 := R17
	737	[3839]	MOVE     	R0 R108 ; R0 := R108
	738	[3839]	MOVE     	R0 R118 ; R0 := R118
	739	[3839]	MOVE     	R0 R119 ; R0 := R119
	740	[3819]	SETGLOBAL	R120 K198 ; OnSalvageSold := R120
	741	[3874]	CLOSURE  	R120 106 ; R120 := closure(Function #107)
	742	[3874]	MOVE     	R0 R16 ; R0 := R16
	743	[3874]	MOVE     	R0 R69 ; R0 := R69
	744	[3878]	CLOSURE  	R121 107 ; R121 := closure(Function #108)
	745	[3878]	MOVE     	R0 R120 ; R0 := R120
	746	[3876]	SETGLOBAL	R121 K199 ; SellConfirm := R121
	747	[3897]	CLOSURE  	R121 108 ; R121 := closure(Function #109)
	748	[3897]	MOVE     	R0 R5 ; R0 := R5
	749	[3897]	MOVE     	R0 R120 ; R0 := R120
	750	[3880]	SETGLOBAL	R121 K200 ; SellCountConfirm := R121
	751	[3966]	CLOSURE  	R121 109 ; R121 := closure(Function #110)
	752	[3966]	MOVE     	R0 R16 ; R0 := R16
	753	[3966]	MOVE     	R0 R5 ; R0 := R5
	754	[3966]	MOVE     	R0 R8 ; R0 := R8
	755	[3966]	MOVE     	R0 R4 ; R0 := R4
	756	[3966]	MOVE     	R0 R3 ; R0 := R3
	757	[3899]	SETGLOBAL	R121 K201 ; SellSelectedItem := R121
	758	[3973]	CLOSURE  	R121 110 ; R121 := closure(Function #111)
	759	[4035]	CLOSURE  	R122 111 ; R122 := closure(Function #112)
	760	[4035]	MOVE     	R0 R5 ; R0 := R5
	761	[4035]	MOVE     	R0 R112 ; R0 := R112
	762	[4035]	MOVE     	R0 R15 ; R0 := R15
	763	[4035]	MOVE     	R0 R113 ; R0 := R113
	764	[4035]	MOVE     	R0 R99 ; R0 := R99
	765	[4035]	MOVE     	R0 R111 ; R0 := R111
	766	[4035]	MOVE     	R0 R100 ; R0 := R100
	767	[4035]	MOVE     	R0 R108 ; R0 := R108
	768	[4035]	MOVE     	R0 R121 ; R0 := R121
	769	[3975]	SETGLOBAL	R122 K202 ; OnFuseItem := R122
	770	[4057]	CLOSURE  	R122 112 ; R122 := closure(Function #113)
	771	[4057]	MOVE     	R0 R121 ; R0 := R121
	772	[4057]	MOVE     	R0 R5 ; R0 := R5
	773	[4037]	SETGLOBAL	R122 K203 ; ConfirmFuseItem := R122
	774	[4094]	CLOSURE  	R122 113 ; R122 := closure(Function #114)
	775	[4094]	MOVE     	R0 R15 ; R0 := R15
	776	[4123]	CLOSURE  	R123 114 ; R123 := closure(Function #115)
	777	[4180]	CLOSURE  	R124 115 ; R124 := closure(Function #116)
	778	[4180]	MOVE     	R0 R15 ; R0 := R15
	779	[4180]	MOVE     	R0 R5 ; R0 := R5
	780	[4180]	MOVE     	R0 R122 ; R0 := R122
	781	[4180]	MOVE     	R0 R2 ; R0 := R2
	782	[4240]	CLOSURE  	R125 116 ; R125 := closure(Function #117)
	783	[4240]	MOVE     	R0 R124 ; R0 := R124
	784	[4240]	MOVE     	R0 R5 ; R0 := R5
	785	[4240]	MOVE     	R0 R121 ; R0 := R121
	786	[4240]	MOVE     	R0 R123 ; R0 := R123
	787	[4240]	MOVE     	R0 R1 ; R0 := R1
	788	[4252]	CLOSURE  	R126 117 ; R126 := closure(Function #118)
	789	[4252]	MOVE     	R0 R125 ; R0 := R125
	790	[4252]	MOVE     	R0 R121 ; R0 := R121
	791	[4242]	SETGLOBAL	R126 K204 ; FusePreview := R126
	792	[4264]	CLOSURE  	R126 118 ; R126 := closure(Function #119)
	793	[4264]	MOVE     	R0 R2 ; R0 := R2
	794	[4275]	CLOSURE  	R127 119 ; R127 := closure(Function #120)
	795	[4275]	MOVE     	R0 R126 ; R0 := R126
	796	[4275]	MOVE     	R0 R5 ; R0 := R5
	797	[4327]	CLOSURE  	R128 120 ; R128 := closure(Function #121)
	798	[4327]	MOVE     	R0 R2 ; R0 := R2
	799	[4386]	CLOSURE  	R129 121 ; R129 := closure(Function #122)
	800	[4386]	MOVE     	R0 R5 ; R0 := R5
	801	[4386]	MOVE     	R0 R121 ; R0 := R121
	802	[4386]	MOVE     	R0 R21 ; R0 := R21
	803	[4386]	MOVE     	R0 R128 ; R0 := R128
	804	[4386]	MOVE     	R0 R16 ; R0 := R16
	805	[4462]	CLOSURE  	R130 122 ; R130 := closure(Function #123)
	806	[4462]	MOVE     	R0 R23 ; R0 := R23
	807	[4462]	MOVE     	R0 R5 ; R0 := R5
	808	[4462]	MOVE     	R0 R121 ; R0 := R121
	809	[4462]	MOVE     	R0 R24 ; R0 := R24
	810	[4506]	CLOSURE  	R131 123 ; R131 := closure(Function #124)
	811	[4506]	MOVE     	R0 R5 ; R0 := R5
	812	[4506]	MOVE     	R0 R121 ; R0 := R121
	813	[4506]	MOVE     	R0 R130 ; R0 := R130
	814	[4506]	MOVE     	R0 R127 ; R0 := R127
	815	[4506]	MOVE     	R0 R125 ; R0 := R125
	816	[4464]	SETGLOBAL	R131 K205 ; FuseSelectedItem := R131
	817	[4534]	CLOSURE  	R131 124 ; R131 := closure(Function #125)
	818	[4549]	CLOSURE  	R132 125 ; R132 := closure(Function #126)
	819	[4549]	MOVE     	R0 R16 ; R0 := R16
	820	[4549]	MOVE     	R0 R22 ; R0 := R22
	821	[4597]	CLOSURE  	R133 126 ; R133 := closure(Function #127)
	822	[4597]	MOVE     	R0 R76 ; R0 := R76
	823	[4597]	MOVE     	R0 R132 ; R0 := R132
	824	[4597]	MOVE     	R0 R16 ; R0 := R16
	825	[4597]	MOVE     	R0 R4 ; R0 := R4
	826	[4597]	MOVE     	R0 R75 ; R0 := R75
	827	[4597]	MOVE     	R0 R131 ; R0 := R131
	828	[4658]	CLOSURE  	R134 127 ; R134 := closure(Function #128)
	829	[4658]	MOVE     	R0 R129 ; R0 := R129
	830	[4658]	MOVE     	R0 R133 ; R0 := R133
	831	[4658]	MOVE     	R0 R5 ; R0 := R5
	832	[4658]	MOVE     	R0 R121 ; R0 := R121
	833	[4658]	MOVE     	R0 R69 ; R0 := R69
	834	[4658]	MOVE     	R0 R25 ; R0 := R25
	835	[4599]	SETGLOBAL	R134 K206 ; StartFuse := R134
	836	[4668]	CLOSURE  	R134 128 ; R134 := closure(Function #129)
	837	[4660]	SETGLOBAL	R134 K207 ; IdentifiedSalvageAction := R134
	838	[4720]	CLOSURE  	R134 129 ; R134 := closure(Function #130)
	839	[4720]	MOVE     	R0 R112 ; R0 := R112
	840	[4720]	MOVE     	R0 R15 ; R0 := R15
	841	[4720]	MOVE     	R0 R113 ; R0 := R113
	842	[4720]	MOVE     	R0 R129 ; R0 := R129
	843	[4720]	MOVE     	R0 R123 ; R0 := R123
	844	[4720]	MOVE     	R0 R108 ; R0 := R108
	845	[4720]	MOVE     	R0 R5 ; R0 := R5
	846	[4670]	SETGLOBAL	R134 K208 ; OnSalvageIdentified := R134
	847	[4735]	CLOSURE  	R134 130 ; R134 := closure(Function #131)
	848	[4735]	MOVE     	R0 R16 ; R0 := R16
	849	[4722]	SETGLOBAL	R134 K209 ; IdentifySelectedItem := R134
	850	[4755]	CLOSURE  	R134 131 ; R134 := closure(Function #132)
	851	[4755]	MOVE     	R0 R112 ; R0 := R112
	852	[4755]	MOVE     	R0 R17 ; R0 := R17
	853	[4755]	MOVE     	R0 R113 ; R0 := R113
	854	[4755]	MOVE     	R0 R5 ; R0 := R5
	855	[4737]	SETGLOBAL	R134 K210 ; OnTechCancelled := R134
	856	[4766]	CLOSURE  	R134 132 ; R134 := closure(Function #133)
	857	[4757]	SETGLOBAL	R134 K211 ; CancelRepairsConfirm := R134
	858	[4778]	CLOSURE  	R134 133 ; R134 := closure(Function #134)
	859	[4778]	MOVE     	R0 R5 ; R0 := R5
	860	[4768]	SETGLOBAL	R134 K212 ; ShowCancelRepairsConfirm := R134
	861	[4796]	CLOSURE  	R134 134 ; R134 := closure(Function #135)
	862	[4796]	MOVE     	R0 R5 ; R0 := R5
	863	[4796]	MOVE     	R0 R39 ; R0 := R39
	864	[4813]	CLOSURE  	R135 135 ; R135 := closure(Function #136)
	865	[4813]	MOVE     	R0 R131 ; R0 := R131
	866	[4833]	CLOSURE  	R136 136 ; R136 := closure(Function #137)
	867	[4841]	CLOSURE  	R137 137 ; R137 := closure(Function #138)
	868	[4841]	MOVE     	R0 R3 ; R0 := R3
	869	[4841]	MOVE     	R0 R136 ; R0 := R136
	870	[4858]	CLOSURE  	R138 138 ; R138 := closure(Function #139)
	871	[4858]	MOVE     	R0 R15 ; R0 := R15
	872	[4882]	CLOSURE  	R139 139 ; R139 := closure(Function #140)
	873	[4882]	MOVE     	R0 R3 ; R0 := R3
	874	[4882]	MOVE     	R0 R135 ; R0 := R135
	875	[4882]	MOVE     	R0 R47 ; R0 := R47
	876	[4882]	MOVE     	R0 R4 ; R0 := R4
	877	[4882]	MOVE     	R0 R8 ; R0 := R8
	878	[4882]	MOVE     	R0 R15 ; R0 := R15
	879	[4894]	CLOSURE  	R140 140 ; R140 := closure(Function #141)
	880	[4894]	MOVE     	R0 R3 ; R0 := R3
	881	[4894]	MOVE     	R0 R135 ; R0 := R135
	882	[4925]	CLOSURE  	R141 141 ; R141 := closure(Function #142)
	883	[4925]	MOVE     	R0 R16 ; R0 := R16
	884	[4935]	CLOSURE  	R142 142 ; R142 := closure(Function #143)
	885	[4935]	MOVE     	R0 R3 ; R0 := R3
	886	[4935]	MOVE     	R0 R135 ; R0 := R135
	887	[4935]	MOVE     	R0 R141 ; R0 := R141
	888	[5148]	CLOSURE  	R143 143 ; R143 := closure(Function #144)
	889	[5148]	MOVE     	R0 R5 ; R0 := R5
	890	[5148]	MOVE     	R0 R137 ; R0 := R137
	891	[5148]	MOVE     	R0 R139 ; R0 := R139
	892	[5148]	MOVE     	R0 R140 ; R0 := R140
	893	[5148]	MOVE     	R0 R142 ; R0 := R142
	894	[5148]	MOVE     	R0 R11 ; R0 := R11
	895	[5148]	MOVE     	R0 R70 ; R0 := R70
	896	[5148]	MOVE     	R0 R16 ; R0 := R16
	897	[5148]	MOVE     	R0 R111 ; R0 := R111
	898	[5148]	MOVE     	R0 R15 ; R0 := R15
	899	[5148]	MOVE     	R0 R101 ; R0 := R101
	900	[5148]	MOVE     	R0 R25 ; R0 := R25
	901	[5185]	CLOSURE  	R144 144 ; R144 := closure(Function #145)
	902	[5185]	MOVE     	R0 R4 ; R0 := R4
	903	[5185]	MOVE     	R0 R8 ; R0 := R8
	904	[5185]	MOVE     	R0 R70 ; R0 := R70
	905	[5185]	MOVE     	R0 R87 ; R0 := R87
	906	[5185]	MOVE     	R0 R66 ; R0 := R66
	907	[5185]	MOVE     	R0 R81 ; R0 := R81
	908	[5196]	CLOSURE  	R145 145 ; R145 := closure(Function #146)
	909	[5394]	CLOSURE  	R146 146 ; R146 := closure(Function #147)
	910	[5394]	MOVE     	R0 R16 ; R0 := R16
	911	[5394]	MOVE     	R0 R3 ; R0 := R3
	912	[5394]	MOVE     	R0 R136 ; R0 := R136
	913	[5495]	CLOSURE  	R11 147 ; R11 := closure(Function #148)
	914	[5495]	MOVE     	R0 R15 ; R0 := R15
	915	[5495]	MOVE     	R0 R16 ; R0 := R16
	916	[5495]	MOVE     	R0 R1 ; R0 := R1
	917	[5495]	MOVE     	R0 R18 ; R0 := R18
	918	[5495]	MOVE     	R0 R141 ; R0 := R141
	919	[5495]	MOVE     	R0 R5 ; R0 := R5
	920	[5503]	CLOSURE  	R147 148 ; R147 := closure(Function #149)
	921	[5497]	SETGLOBAL	R147 K213 ; CurrencyReleased := R147
	922	[5511]	CLOSURE  	R147 149 ; R147 := closure(Function #150)
	923	[5505]	SETGLOBAL	R147 K214 ; CurrencyPressed := R147
	924	[5519]	CLOSURE  	R147 150 ; R147 := closure(Function #151)
	925	[5513]	SETGLOBAL	R147 K215 ; CurrencyFocused := R147
	926	[5527]	CLOSURE  	R147 151 ; R147 := closure(Function #152)
	927	[5521]	SETGLOBAL	R147 K216 ; CurrencyUnfocused := R147
	928	[5581]	CLOSURE  	R147 152 ; R147 := closure(Function #153)
	929	[5581]	MOVE     	R0 R69 ; R0 := R69
	930	[5581]	MOVE     	R0 R112 ; R0 := R112
	931	[5581]	MOVE     	R0 R17 ; R0 := R17
	932	[5581]	MOVE     	R0 R108 ; R0 := R108
	933	[5581]	MOVE     	R0 R5 ; R0 := R5
	934	[5736]	CLOSURE  	R148 153 ; R148 := closure(Function #154)
	935	[5736]	MOVE     	R0 R1 ; R0 := R1
	936	[5736]	MOVE     	R0 R109 ; R0 := R109
	937	[5736]	MOVE     	R0 R49 ; R0 := R49
	938	[5736]	MOVE     	R0 R5 ; R0 := R5
	939	[5736]	MOVE     	R0 R134 ; R0 := R134
	940	[5736]	MOVE     	R0 R102 ; R0 := R102
	941	[5736]	MOVE     	R0 R96 ; R0 := R96
	942	[5736]	MOVE     	R0 R143 ; R0 := R143
	943	[5736]	MOVE     	R0 R144 ; R0 := R144
	944	[5736]	MOVE     	R0 R145 ; R0 := R145
	945	[5736]	MOVE     	R0 R87 ; R0 := R87
	946	[5736]	MOVE     	R0 R110 ; R0 := R110
	947	[5736]	MOVE     	R0 R103 ; R0 := R103
	948	[5736]	MOVE     	R0 R12 ; R0 := R12
	949	[5736]	MOVE     	R0 R98 ; R0 := R98
	950	[5736]	MOVE     	R0 R95 ; R0 := R95
	951	[5736]	MOVE     	R0 R146 ; R0 := R146
	952	[5736]	MOVE     	R0 R108 ; R0 := R108
	953	[5736]	MOVE     	R0 R69 ; R0 := R69
	954	[5736]	MOVE     	R0 R70 ; R0 := R70
	955	[5736]	MOVE     	R0 R26 ; R0 := R26
	956	[5583]	SETGLOBAL	R148 K217 ; Initialize := R148
	957	[5774]	CLOSURE  	R148 154 ; R148 := closure(Function #155)
	958	[5774]	MOVE     	R0 R114 ; R0 := R114
	959	[5738]	SETGLOBAL	R148 K218 ; Update := R148
	960	[5778]	CLOSURE  	R148 155 ; R148 := closure(Function #156)
	961	[5778]	MOVE     	R0 R110 ; R0 := R110
	962	[5776]	SETGLOBAL	R148 K219 ; OnStyleChangedCallback := R148
	963	[5786]	CLOSURE  	R148 156 ; R148 := closure(Function #157)
	964	[5786]	MOVE     	R0 R5 ; R0 := R5
	965	[5786]	MOVE     	R0 R66 ; R0 := R66
	966	[5780]	SETGLOBAL	R148 K220 ; onKeyDown_MENU_CANCEL := R148
	967	[5790]	CLOSURE  	R148 157 ; R148 := closure(Function #158)
	968	[5788]	SETGLOBAL	R148 K221 ; SupportsThemes := R148
	969	[5796]	CLOSURE  	R148 158 ; R148 := closure(Function #159)
	970	[5792]	SETGLOBAL	R148 K222 ; EquipmentFocused := R148
	971	[5802]	CLOSURE  	R148 159 ; R148 := closure(Function #160)
	972	[5798]	SETGLOBAL	R148 K223 ; EquipmentUnfocused := R148
	973	[5808]	CLOSURE  	R148 160 ; R148 := closure(Function #161)
	974	[5804]	SETGLOBAL	R148 K224 ; EquipmentSelected := R148
	975	[5814]	CLOSURE  	R148 161 ; R148 := closure(Function #162)
	976	[5810]	SETGLOBAL	R148 K225 ; EquipmentPressed := R148
	977	[5820]	CLOSURE  	R148 162 ; R148 := closure(Function #163)
	978	[5816]	SETGLOBAL	R148 K226 ; CategoryFocused := R148
	979	[5826]	CLOSURE  	R148 163 ; R148 := closure(Function #164)
	980	[5822]	SETGLOBAL	R148 K227 ; CategoryUnfocused := R148
	981	[5834]	CLOSURE  	R148 164 ; R148 := closure(Function #165)
	982	[5828]	SETGLOBAL	R148 K228 ; CategoryPressed := R148
	983	[5840]	CLOSURE  	R148 165 ; R148 := closure(Function #166)
	984	[5836]	SETGLOBAL	R148 K229 ; ConfigureTabFocused := R148
	985	[5846]	CLOSURE  	R148 166 ; R148 := closure(Function #167)
	986	[5842]	SETGLOBAL	R148 K230 ; ConfigureTabUnfocused := R148
	987	[5852]	CLOSURE  	R148 167 ; R148 := closure(Function #168)
	988	[5848]	SETGLOBAL	R148 K231 ; ConfigureTabSelected := R148
	989	[5858]	CLOSURE  	R148 168 ; R148 := closure(Function #169)
	990	[5854]	SETGLOBAL	R148 K232 ; ConfigureTabPressed := R148
	991	[5864]	CLOSURE  	R148 169 ; R148 := closure(Function #170)
	992	[5860]	SETGLOBAL	R148 K233 ; InventoryFocused := R148
	993	[5872]	CLOSURE  	R148 170 ; R148 := closure(Function #171)
	994	[5866]	SETGLOBAL	R148 K234 ; InventoryUnfocused := R148
	995	[5878]	CLOSURE  	R148 171 ; R148 := closure(Function #172)
	996	[5874]	SETGLOBAL	R148 K235 ; InventorySelected := R148
	997	[5882]	CLOSURE  	R148 172 ; R148 := closure(Function #173)
	998	[5880]	SETGLOBAL	R148 K236 ; SetTrigger := R148
	999	[5896]	CLOSURE  	R148 173 ; R148 := closure(Function #174)
	1000	[5884]	SETGLOBAL	R148 K237 ; onKeyDown_MENU_MOUSE_Z := R148
	1001	[5907]	CLOSURE  	R148 174 ; R148 := closure(Function #175)
	1002	[5907]	MOVE     	R0 R15 ; R0 := R15
	1003	[5907]	MOVE     	R0 R5 ; R0 := R5
	1004	[5898]	SETGLOBAL	R148 K238 ; onKeyUp_MENU_LTRIGGER2 := R148
	1005	[5918]	CLOSURE  	R148 175 ; R148 := closure(Function #176)
	1006	[5918]	MOVE     	R0 R15 ; R0 := R15
	1007	[5918]	MOVE     	R0 R5 ; R0 := R5
	1008	[5909]	SETGLOBAL	R148 K239 ; onKeyUp_MENU_RTRIGGER2 := R148
	1009	[5935]	CLOSURE  	R148 176 ; R148 := closure(Function #177)
	1010	[5935]	MOVE     	R0 R15 ; R0 := R15
	1011	[5935]	MOVE     	R0 R5 ; R0 := R5
	1012	[5920]	SETGLOBAL	R148 K240 ; onKeyDown_MENU_LTRIGGER2 := R148
	1013	[5950]	CLOSURE  	R148 177 ; R148 := closure(Function #178)
	1014	[5950]	MOVE     	R0 R15 ; R0 := R15
	1015	[5950]	MOVE     	R0 R5 ; R0 := R5
	1016	[5937]	SETGLOBAL	R148 K241 ; onKeyDown_MENU_RTRIGGER2 := R148
	1017	[5967]	CLOSURE  	R148 178 ; R148 := closure(Function #179)
	1018	[5967]	MOVE     	R0 R15 ; R0 := R15
	1019	[5952]	SETGLOBAL	R148 K242 ; onKeyDown_MENU_GENERIC2 := R148
	1020	[5973]	CLOSURE  	R148 179 ; R148 := closure(Function #180)
	1021	[5973]	MOVE     	R0 R88 ; R0 := R88
	1022	[5973]	MOVE     	R0 R95 ; R0 := R95
	1023	[5973]	MOVE     	R0 R70 ; R0 := R70
	1024	[5969]	SETGLOBAL	R148 K243 ; ToggleInteriorCustomization := R148
	1025	[5978]	CLOSURE  	R148 180 ; R148 := closure(Function #181)
	1026	[5978]	MOVE     	R0 R66 ; R0 := R66
	1027	[5975]	SETGLOBAL	R148 K244 ; ChildMovieClosed := R148
	1028	[6074]	CLOSURE  	R9 181 ; R9 := closure(Function #182)
	1029	[6074]	MOVE     	R0 R15 ; R0 := R15
	1030	[6074]	MOVE     	R0 R105 ; R0 := R105
	1031	[6074]	MOVE     	R0 R104 ; R0 := R104
	1032	[6074]	MOVE     	R0 R103 ; R0 := R103
	1033	[6074]	MOVE     	R0 R69 ; R0 := R69
	1034	[6074]	MOVE     	R0 R77 ; R0 := R77
	1035	[6074]	MOVE     	R0 R70 ; R0 := R70
	1036	[6074]	MOVE     	R0 R11 ; R0 := R11
	1037	[6074]	MOVE     	R0 R138 ; R0 := R138
	1038	[6078]	CLOSURE  	R148 182 ; R148 := closure(Function #183)
	1039	[6076]	SETGLOBAL	R148 K245 ; RefreshStats := R148
	1040	[6100]	CLOSURE  	R148 183 ; R148 := closure(Function #184)
	1041	[6100]	MOVE     	R0 R19 ; R0 := R19
	1042	[6100]	MOVE     	R0 R3 ; R0 := R3
	1043	[6080]	SETGLOBAL	R148 K246 ; CapacityFocused := R148
	1044	[6109]	CLOSURE  	R148 184 ; R148 := closure(Function #185)
	1045	[6109]	MOVE     	R0 R19 ; R0 := R19
	1046	[6102]	SETGLOBAL	R148 K247 ; CapacityUnfocused := R148
	1047	[6114]	CLOSURE  	R148 185 ; R148 := closure(Function #186)
	1048	[6114]	MOVE     	R0 R19 ; R0 := R19
	1049	[6114]	MOVE     	R0 R147 ; R0 := R147
	1050	[6111]	SETGLOBAL	R148 K248 ; CapacityPressed := R148
	1051	[6117]	CLOSURE  	R148 186 ; R148 := closure(Function #187)
	1052	[6116]	SETGLOBAL	R148 K249 ; CapacityReleased := R148
	1053	[6123]	CLOSURE  	R148 187 ; R148 := closure(Function #188)
	1054	[6119]	SETGLOBAL	R148 K250 ; StatFocused := R148
	1055	[6127]	CLOSURE  	R148 188 ; R148 := closure(Function #189)
	1056	[6125]	SETGLOBAL	R148 K251 ; StatUnfocused := R148
	1057	[6135]	CLOSURE  	R148 189 ; R148 := closure(Function #190)
	1058	[6129]	SETGLOBAL	R148 K252 ; HideScreenForPlatPurchase := R148
	1059	[6141]	CLOSURE  	R148 190 ; R148 := closure(Function #191)
	1060	[6137]	SETGLOBAL	R148 K253 ; HandleCanBeClosed := R148
	1061	[6145]	CLOSURE  	R148 191 ; R148 := closure(Function #192)
	1062	[6143]	SETGLOBAL	R148 K254 ; onKeyDown_MENU_CLICK := R148
	1063	[6149]	CLOSURE  	R148 192 ; R148 := closure(Function #193)
	1064	[6147]	SETGLOBAL	R148 K255 ; onKeyUp_MENU_CLICK := R148
	1065	[6153]	CLOSURE  	R148 193 ; R148 := closure(Function #194)
	1066	[6151]	SETGLOBAL	R148 K256 ; onKeyDown_MENU_RIGHT_X := R148
	1067	[6157]	CLOSURE  	R148 194 ; R148 := closure(Function #195)
	1068	[6155]	SETGLOBAL	R148 K257 ; onKeyUp_MENU_RIGHT_X := R148
	1069	[6161]	CLOSURE  	R148 195 ; R148 := closure(Function #196)
	1070	[6161]	MOVE     	R0 R65 ; R0 := R65
	1071	[6159]	SETGLOBAL	R148 K258 ; ProfileReduxOpened := R148
	1072	[6161]	RETURN   	R0 1 ; return 


function #1 <?:232,234> (4 instructions, 16 bytes at 00000211322EED60)
0 params, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[233]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[233]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[233]	RETURN   	R0 2 ; return R0 
	4	[234]	RETURN   	R0 1 ; return 

function #2 <?:236,245> (18 instructions, 72 bytes at 00000211322EEE60)
1 param, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[237]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[237]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xc7fcada9]
	3	[237]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[237]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[238]	GETGLOBAL	R2 K2 ; R2 := 0xc8802016
	6	[238]	MOVE     	R3 R1 ; R3 := R1
	7	[238]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	8	[238]	JMP      	16 ; PC := 16
	9	[239]	TEST     	R0 0 ; if not R0 then PC := 14
	10	[239]	JMP      	14 ; PC := 14
	11	[240]	SELF     	R7 R6 K3 ; R8 := R6; R7 := R6[0x383d2e7d]
	12	[240]	CALL     	R7 2 1 ; R7(R8)
	13	[240]	JMP      	16 ; PC := 16
	14	[242]	SELF     	R7 R6 K4 ; R8 := R6; R7 := R6[0xf4e253b6]
	15	[242]	CALL     	R7 2 1 ; R7(R8)
	16	[238]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 9; R4 := R5 end
	17	[243]	JMP      	9 ; PC := 9
	18	[245]	RETURN   	R0 1 ; return 

function #3 <?:247,270> (64 instructions, 256 bytes at 00000211322EEFB0)
2 params, 9 slots, 3 upvalues, 0 locals, 16 constants, 0 functions
	1	[248]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[248]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	3	[248]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[248]	TEST     	R2 0 ; if not R2 then PC := 11
	5	[248]	JMP      	11 ; PC := 11
	6	[249]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[249]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x2a1108a9]
	8	[249]	GETUPVAL 	R3 U1 ; R3 := U1
	9	[249]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[249]	SETGLOBALHASH	R2 K1 ; mShipAvatar := R2
	11	[251]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	12	[251]	GETGLOBAL	R3 K3 ; R3 := mShipSuit
	13	[251]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[251]	TEST     	R2 0 ; if not R2 then PC := 27
	15	[251]	JMP      	27 ; PC := 27
	16	[252]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	17	[252]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	18	[252]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[252]	TEST     	R2 1 ; if R2 then PC := 27
	20	[252]	JMP      	27 ; PC := 27
	21	[253]	GETGLOBAL	R2 K1 ; R2 := mShipAvatar
	22	[253]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xde321e6f]
	23	[253]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[253]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf7d48ee0]
	25	[253]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[253]	SETGLOBALHASH	R2 K3 ; mShipSuit := R2
	27	[257]	TEST     	R1 0 ; if not R1 then PC := 59
	28	[257]	JMP      	59 ; PC := 59
	29	[257]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	30	[257]	GETGLOBAL	R3 K6 ; R3 := mAvatar
	31	[257]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[257]	TEST     	R2 1 ; if R2 then PC := 59
	33	[257]	JMP      	59 ; PC := 59
	34	[258]	GETGLOBAL	R2 K7 ; R2 := 0x25d99d89
	35	[258]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x62c81b76]
	36	[258]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[259]	GETGLOBAL	R3 K6 ; R3 := mAvatar
	38	[260]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xf2deaf69]
	39	[260]	GETGLOBAL	R6 K10 ; R6 := gLotusOperatorAvatarType
	40	[260]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	41	[260]	TEST     	R4 0 ; if not R4 then PC := 53
	42	[260]	JMP      	53 ; PC := 53
	43	[261]	SELF     	R4 R3 K11 ; R5 := R3; R4 := R3[0x5b89142c]
	44	[261]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[262]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	46	[262]	MOVE     	R6 R4 ; R6 := R4
	47	[262]	CALL     	R5 2 2 ; R5 := R5(R6)
	48	[262]	TEST     	R5 1 ; if R5 then PC := 53
	49	[262]	JMP      	53 ; PC := 53
	50	[263]	SELF     	R5 R4 K12 ; R6 := R4; R5 := R4[0xa534c3ac]
	51	[263]	CALL     	R5 2 2 ; R5 := R5(R6)
	52	[263]	MOVE     	R3 R5 ; R3 := R5
	53	[266]	SELF     	R5 R3 K4 ; R6 := R3; R5 := R3[0xde321e6f]
	54	[266]	CALL     	R5 2 2 ; R5 := R5(R6)
	55	[266]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0x1d2dfe4a]
	56	[266]	MOVE     	R7 R2 ; R7 := R2
	57	[266]	LOADK    	R8 := 0.000000
	58	[266]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	59	[269]	GETUPVAL 	R5 U2 ; R5 := U2
	60	[269]	GETTABLE 	R5 R5 K15 ; R5 := R5[0x7bc6247f]
	61	[269]	GETGLOBAL	R6 K3 ; R6 := mShipSuit
	62	[269]	MOVE     	R7 R0 ; R7 := R0
	63	[269]	CALL     	R5 3 1 ; R5(R6,R7)
	64	[270]	RETURN   	R0 1 ; return 

function #4 <?:273,295> (38 instructions, 152 bytes at 00000211322EF150)
0 params, 9 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[274]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[274]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xb321d806]
	3	[274]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[274]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[274]	JMP      	7 ; PC := 7
	6	[275]	RETURN   	R0 1 ; return 
	7	[279]	LOADNIL  	R0 R1 ; R0 := R1 := nil
	8	[281]	GETGLOBAL	R2 K0 ; R2 := 0xe7f2b02f
	9	[281]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x6d0aa187]
	10	[281]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[282]	LOADK    	R3 := 1.000000
	12	[282]	LEN      	R4 R2 ; R4 := # R2
	13	[282]	LOADK    	R5 := 1.000000
	14	[282]	FORPREP  	R3 27 ; R3 -= R5; PC := 27
	15	[283]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	16	[283]	GETTABLE 	R7 R7 K3 ; R7 := R7["isHost"]
	17	[283]	TEST     	R7 0 ; if not R7 then PC := 27
	18	[283]	JMP      	27 ; PC := 27
	19	[284]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	20	[284]	GETTABLE 	R0 R7 K4 ; R0 := R7["loadout"]
	21	[285]	GETUPVAL 	R7 U0 ; R7 := U0
	22	[285]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x4356d102]
	23	[285]	MOVE     	R8 R0 ; R8 := R0
	24	[285]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[285]	MOVE     	R1 R7 ; R1 := R7
	26	[286]	JMP      	28 ; PC := 28
	27	[282]	FORLOOP  	R3 15 ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
	28	[290]	GETGLOBAL	R7 K6 ; R7 := _T
	29	[290]	GETTABLE 	R7 R7 K7 ; R7 := R7["DeferSquadCrewShipLoad"]
	30	[290]	TEST     	R7 0 ; if not R7 then PC := 35
	31	[290]	JMP      	35 ; PC := 35
	32	[291]	GETGLOBAL	R7 K6 ; R7 := _T
	33	[291]	SETTABLE 	R7 K8 R1 ; R7["DeferredSquadCrewShipLoadOut"] := R1
	34	[291]	JMP      	38 ; PC := 38
	35	[293]	GETUPVAL 	R7 U1 ; R7 := U1
	36	[293]	MOVE     	R8 R1 ; R8 := R1
	37	[293]	CALL     	R7 2 1 ; R7(R8)
	38	[295]	RETURN   	R0 1 ; return 

function #5 <?:297,315> (63 instructions, 252 bytes at 0000021121C15B80)
1 param, 13 slots, 0 upvalues, 0 locals, 20 constants, 0 functions
	1	[298]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[299]	TEST     	R0 0 ; if not R0 then PC := 30
	3	[299]	JMP      	30 ; PC := 30
	4	[300]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	5	[300]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xfb64e76c]
	6	[300]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[301]	SELF     	R3 R2 K2 ; R4 := R2; R3 := R2[0x62c81b76]
	8	[301]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[302]	GETTABLE 	R4 R3 K3 ; R4 := R3["mCrewShipLoadOut"]
	10	[303]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	11	[303]	MOVE     	R6 R4 ; R6 := R4
	12	[303]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[303]	TEST     	R5 1 ; if R5 then PC := 27
	14	[303]	JMP      	27 ; PC := 27
	15	[303]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	16	[303]	GETTABLE 	R6 R4 K5 ; R6 := R4["mShip"]
	17	[303]	CALL     	R5 2 2 ; R5 := R5(R6)
	18	[303]	TEST     	R5 1 ; if R5 then PC := 27
	19	[303]	JMP      	27 ; PC := 27
	20	[303]	GETTABLE 	R5 R4 K5 ; R5 := R4["mShip"]
	21	[303]	GETTABLE 	R5 R5 K6 ; R5 := R5["mItemId"]
	22	[303]	GETTABLE 	R5 R5 K7 ; R5 := R5["mId"]
	23	[303]	GETGLOBAL	R6 K8 ; R6 := 0x6c97a788
	24	[303]	GETTABLE 	R6 R6 K9 ; R6 := R6["InvalidItemID"]
	25	[303]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 28
	26	[303]	JMP      	28 ; PC := 28
	27	[303]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 28
	28	[303]	OP_LOADBOOL	R1 1 0 ; R1 := true
	29	[303]	JMP      	62 ; PC := 62
	30	[305]	GETGLOBAL	R5 K10 ; R5 := 0xe7f2b02f
	31	[305]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x6d0aa187]
	32	[305]	CALL     	R5 2 2 ; R5 := R5(R6)
	33	[306]	LOADK    	R6 := 1.000000
	34	[306]	LEN      	R7 R5 ; R7 := # R5
	35	[306]	LOADK    	R8 := 1.000000
	36	[306]	FORPREP  	R6 61 ; R6 -= R8; PC := 61
	37	[307]	GETTABLE 	R10 R5 R9 ; R10 := R5[R9]
	38	[307]	GETTABLE 	R10 R10 K12 ; R10 := R10["isHost"]
	39	[307]	TEST     	R10 0 ; if not R10 then PC := 61
	40	[307]	JMP      	61 ; PC := 61
	41	[308]	GETGLOBAL	R10 K13 ; R10 := cjson
	42	[308]	GETTABLE 	R10 R10 K14 ; R10 := R10[0x7ab914d8]
	43	[308]	GETTABLE 	R11 R5 R9 ; R11 := R5[R9]
	44	[308]	GETTABLE 	R11 R11 K15 ; R11 := R11["loadout"]
	45	[308]	CALL     	R10 2 2 ; R10 := R10(R11)
	46	[309]	GETGLOBAL	R11 K4 ; R11 := 0x7b998233
	47	[309]	GETTABLE 	R12 R10 K16 ; R12 := R10["CrewShipLoadOut"]
	48	[309]	CALL     	R11 2 2 ; R11 := R11(R12)
	49	[309]	TEST     	R11 1 ; if R11 then PC := 59
	50	[309]	JMP      	59 ; PC := 59
	51	[309]	GETTABLE 	R11 R10 K16 ; R11 := R10["CrewShipLoadOut"]
	52	[309]	GETTABLE 	R11 R11 K17 ; R11 := R11["Ship"]
	53	[309]	GETTABLE 	R11 R11 K18 ; R11 := R11["ItemId"]
	54	[309]	GETTABLE 	R11 R11 K19 ; R11 := R11["$oid"]
	55	[309]	GETGLOBAL	R12 K8 ; R12 := 0x6c97a788
	56	[309]	GETTABLE 	R12 R12 K9 ; R12 := R12["InvalidItemID"]
	57	[309]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 60
	58	[309]	JMP      	60 ; PC := 60
	59	[309]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 60
	60	[309]	OP_LOADBOOL	R1 1 0 ; R1 := true
	61	[306]	FORLOOP  	R6 37 ; R6 += R8; if R6 <= R7 then begin PC := 37; R9 := R6 end
	62	[314]	RETURN   	R1 2 ; return R1 
	63	[315]	RETURN   	R0 1 ; return 

function #6 <?:317,320> (13 instructions, 52 bytes at 0000021121C15F80)
3 params, 8 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[318]	DIV      	R3 R2 R1 ; R3 := R2 / R1
	2	[318]	MUL      	R3 R0 R3 ; R3 := R0 * R3
	3	[319]	GETGLOBAL	R4 K0 ; R4 := 0x5bced4c4
	4	[319]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x99675e23]
	5	[319]	GETGLOBAL	R5 K0 ; R5 := 0x5bced4c4
	6	[319]	GETTABLE 	R5 R5 K2 ; R5 := R5[0xac1b386a]
	7	[319]	MOVE     	R6 R0 ; R6 := R0
	8	[319]	MUL      	R7 R0 K3 ; R7 := R0 * 0.500000
	9	[319]	ADD      	R7 R7 R3 ; R7 := R7 + R3
	10	[319]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	11	[319]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	12	[319]	RETURN   	R4 2 ; return R4 
	13	[320]	RETURN   	R0 1 ; return 

function #7 <?:322,383> (110 instructions, 440 bytes at 0000021121C16100)
0 params, 18 slots, 7 upvalues, 0 locals, 26 constants, 0 functions
	1	[324]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[324]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x2a1108a9]
	3	[324]	GETUPVAL 	R1 U1 ; R1 := U1
	4	[324]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[327]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	6	[327]	GETGLOBAL	R2 K2 ; R2 := _T
	7	[327]	GETTABLE 	R2 R2 K3 ; R2 := R2["DojoMgr"]
	8	[327]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[327]	TEST     	R1 1 ; if R1 then PC := 67
	10	[327]	JMP      	67 ; PC := 67
	11	[328]	GETUPVAL 	R1 U2 ; R1 := U2
	12	[328]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa3d5b376]
	13	[328]	CALL     	R1 1 2 ; R1 := R1()
	14	[328]	TEST     	R1 1 ; if R1 then PC := 67
	15	[328]	JMP      	67 ; PC := 67
	16	[330]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	17	[330]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xfb669000]
	18	[330]	GETGLOBAL	R3 K7 ; R3 := gPlayerSpawnType
	19	[330]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	20	[331]	LOADK    	R2 := 1.000000
	21	[331]	LEN      	R3 R1 ; R3 := # R1
	22	[331]	LOADK    	R4 := 1.000000
	23	[331]	FORPREP  	R2 66 ; R2 -= R4; PC := 66
	24	[332]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	25	[333]	GETGLOBAL	R7 K2 ; R7 := _T
	26	[333]	GETTABLE 	R7 R7 K3 ; R7 := R7["DojoMgr"]
	27	[333]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0xd1964243]
	28	[333]	MOVE     	R9 R6 ; R9 := R6
	29	[333]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	30	[334]	GETGLOBAL	R8 K2 ; R8 := _T
	31	[334]	GETTABLE 	R8 R8 K3 ; R8 := R8["DojoMgr"]
	32	[334]	GETTABLE 	R8 R8 K9 ; R8 := R8["mDojo"]
	33	[334]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x5c69b193]
	34	[334]	MOVE     	R10 R7 ; R10 := R7
	35	[334]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	36	[336]	SELF     	R9 R8 K11 ; R10 := R8; R9 := R8[0x56c01834]
	37	[336]	CALL     	R9 2 2 ; R9 := R9(R10)
	38	[336]	TEST     	R9 0 ; if not R9 then PC := 66
	39	[336]	JMP      	66 ; PC := 66
	40	[336]	SELF     	R9 R8 K12 ; R10 := R8; R9 := R8[0x15d63de6]
	41	[336]	CALL     	R9 2 2 ; R9 := R9(R10)
	42	[336]	TEST     	R9 0 ; if not R9 then PC := 66
	43	[336]	JMP      	66 ; PC := 66
	44	[337]	GETGLOBAL	R9 K5 ; R9 := 0x89326c93
	45	[337]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0x78298275]
	46	[337]	CALL     	R9 2 2 ; R9 := R9(R10)
	47	[337]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0x589ef1c1]
	48	[337]	SELF     	R11 R6 K15 ; R12 := R6; R11 := R6[0xd1586535]
	49	[337]	CALL     	R11 2 2 ; R11 := R11(R12)
	50	[337]	SELF     	R12 R6 K16 ; R13 := R6; R12 := R6[0xcb3851b8]
	51	[337]	CALL     	R12 2 0 ; R12,... := R12(R13)
	52	[337]	CALL     	R9 0 1 ; R9(R10,...)
	53	[339]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	54	[339]	MOVE     	R10 R0 ; R10 := R0
	55	[339]	CALL     	R9 2 2 ; R9 := R9(R10)
	56	[339]	TEST     	R9 1 ; if R9 then PC := 61
	57	[339]	JMP      	61 ; PC := 61
	58	[340]	SELF     	R9 R0 K17 ; R10 := R0; R9 := R0[0x768274d6]
	59	[340]	OP_LOADBOOL	R11 0 0 ; R11 := false
	60	[340]	CALL     	R9 3 1 ; R9(R10,R11)
	61	[343]	GETUPVAL 	R9 U0 ; R9 := U0
	62	[343]	GETTABLE 	R9 R9 K18 ; R9 := R9[0xe0cba3ca]
	63	[343]	LOADK    	R10 K19 ; R10 := "/Lotus/Language/Railjack/DryDockNotFinished"
	64	[343]	CALL     	R9 2 1 ; R9(R10)
	65	[345]	RETURN   	R0 1 ; return 
	66	[331]	FORLOOP  	R2 24 ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
	67	[352]	GETGLOBAL	R9 K20 ; R9 := 0xe7f2b02f
	68	[352]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0xb321d806]
	69	[352]	CALL     	R9 2 2 ; R9 := R9(R10)
	70	[360]	GETUPVAL 	R10 U3 ; R10 := U3
	71	[360]	MOVE     	R11 R9 ; R11 := R9
	72	[360]	CALL     	R10 2 2 ; R10 := R10(R11)
	73	[361]	TEST     	R10 1 ; if R10 then PC := 97
	74	[361]	JMP      	97 ; PC := 97
	75	[362]	GETGLOBAL	R11 K5 ; R11 := 0x89326c93
	76	[362]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x78298275]
	77	[362]	CALL     	R11 2 2 ; R11 := R11(R12)
	78	[363]	GETGLOBAL	R12 K5 ; R12 := 0x89326c93
	79	[363]	SELF     	R12 R12 K22 ; R13 := R12; R12 := R12[0x46a0ebf5]
	80	[363]	GETUPVAL 	R14 U4 ; R14 := U4
	81	[363]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	82	[364]	SELF     	R13 R11 K14 ; R14 := R11; R13 := R11[0x589ef1c1]
	83	[364]	SELF     	R15 R12 K15 ; R16 := R12; R15 := R12[0xd1586535]
	84	[364]	CALL     	R15 2 2 ; R15 := R15(R16)
	85	[364]	SELF     	R16 R12 K16 ; R17 := R12; R16 := R12[0xcb3851b8]
	86	[364]	CALL     	R16 2 0 ; R16,... := R16(R17)
	87	[364]	CALL     	R13 0 1 ; R13(R14,...)
	88	[366]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	89	[366]	MOVE     	R14 R0 ; R14 := R0
	90	[366]	CALL     	R13 2 2 ; R13 := R13(R14)
	91	[366]	TEST     	R13 1 ; if R13 then PC := 96
	92	[366]	JMP      	96 ; PC := 96
	93	[367]	SELF     	R13 R0 K17 ; R14 := R0; R13 := R0[0x768274d6]
	94	[367]	OP_LOADBOOL	R15 0 0 ; R15 := false
	95	[367]	CALL     	R13 3 1 ; R13(R14,R15)
	96	[369]	RETURN   	R0 1 ; return 
	97	[374]	TEST     	R9 0 ; if not R9 then PC := 108
	98	[374]	JMP      	108 ; PC := 108
	99	[375]	GETGLOBAL	R13 K5 ; R13 := 0x89326c93
	100	[375]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0xfb64e76c]
	101	[375]	CALL     	R13 2 2 ; R13 := R13(R14)
	102	[376]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0x62c81b76]
	103	[376]	CALL     	R14 2 2 ; R14 := R14(R15)
	104	[377]	GETTABLE 	R15 R14 K25 ; R15 := R14["mCrewShipLoadOut"]
	105	[378]	GETUPVAL 	R16 U5 ; R16 := U5
	106	[378]	MOVE     	R17 R15 ; R17 := R15
	107	[378]	CALL     	R16 2 1 ; R16(R17)
	108	[382]	GETUPVAL 	R16 U6 ; R16 := U6
	109	[382]	CALL     	R16 1 1 ; R16()
	110	[383]	RETURN   	R0 1 ; return 

function #8 <?:385,394> (18 instructions, 72 bytes at 0000021121C16740)
0 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[386]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[386]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6d0aa187]
	3	[386]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[387]	LOADK    	R1 := 1.000000
	5	[387]	LEN      	R2 R0 ; R2 := # R0
	6	[387]	LOADK    	R3 := 1.000000
	7	[387]	FORPREP  	R1 15 ; R1 -= R3; PC := 15
	8	[388]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	9	[388]	GETTABLE 	R5 R5 K2 ; R5 := R5["isHost"]
	10	[388]	TEST     	R5 0 ; if not R5 then PC := 15
	11	[388]	JMP      	15 ; PC := 15
	12	[389]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	13	[389]	GETTABLE 	R5 R5 K3 ; R5 := R5["hubLevel"]
	14	[389]	RETURN   	R5 2 ; return R5 
	15	[387]	FORLOOP  	R1 8 ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
	16	[393]	LOADK    	R5 K4 ; R5 := ""
	17	[393]	RETURN   	R5 2 ; return R5 
	18	[394]	RETURN   	R0 1 ; return 

function #9 <?:397,410> (27 instructions, 108 bytes at 0000021121C16930)
0 params, 4 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[398]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[398]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xb321d806]
	3	[398]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[398]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[398]	JMP      	8 ; PC := 8
	6	[399]	OP_LOADBOOL	R0 1 0 ; R0 := true
	7	[399]	RETURN   	R0 2 ; return R0 
	8	[402]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[402]	CALL     	R0 1 2 ; R0 := R0()
	10	[404]	GETGLOBAL	R1 K2 ; R1 := 0x7f5022cf
	11	[404]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa5c556b9]
	12	[404]	MOVE     	R2 R0 ; R2 := R0
	13	[404]	LOADK    	R3 K4 ; R3 := "DojoHUB"
	14	[404]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[404]	TEST     	R1 0 ; if not R1 then PC := 19
	16	[404]	JMP      	19 ; PC := 19
	17	[405]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[405]	RETURN   	R1 2 ; return R1 
	19	[408]	GETGLOBAL	R1 K0 ; R1 := 0xe7f2b02f
	20	[408]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x199919fe]
	21	[408]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[409]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 25
	23	[409]	JMP      	25 ; PC := 25
	24	[409]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 25
	25	[409]	OP_LOADBOOL	R2 1 0 ; R2 := true
	26	[409]	RETURN   	R2 2 ; return R2 
	27	[410]	RETURN   	R0 1 ; return 

function #10 <?:413,483> (171 instructions, 684 bytes at 0000021121C16B60)
2 params, 29 slots, 10 upvalues, 0 locals, 44 constants, 0 functions
	1	[414]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[414]	LOADK    	R3 K1 ; R3 := "ShipReady"
	3	[414]	CALL     	R2 2 1 ; R2(R3)
	4	[415]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	5	[415]	MOVE     	R3 R0 ; R3 := R0
	6	[415]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[415]	TEST     	R2 1 ; if R2 then PC := 131
	8	[415]	JMP      	131 ; PC := 131
	9	[416]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x5163741e]
	10	[416]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[417]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	12	[417]	MOVE     	R4 R2 ; R4 := R2
	13	[417]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[417]	TEST     	R3 1 ; if R3 then PC := 127
	15	[417]	JMP      	127 ; PC := 127
	16	[418]	GETGLOBAL	R3 K0 ; R3 := 0x3d106989
	17	[418]	LOADK    	R4 K4 ; R4 := "Has ship and owner"
	18	[418]	CALL     	R3 2 1 ; R3(R4)
	19	[420]	GETGLOBAL	R3 K5 ; R3 := ZERO_VECTOR
	20	[421]	GETGLOBAL	R4 K6 ; R4 := ZERO_ROTATION
	21	[422]	GETUPVAL 	R5 U0 ; R5 := U0
	22	[422]	GETTABLE 	R5 R5 K7 ; R5 := R5[0x2a1108a9]
	23	[422]	GETUPVAL 	R6 U1 ; R6 := U1
	24	[422]	GETUPVAL 	R7 U2 ; R7 := U2
	25	[422]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	26	[423]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	27	[423]	MOVE     	R7 R5 ; R7 := R5
	28	[423]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[423]	TEST     	R6 1 ; if R6 then PC := 37
	30	[423]	JMP      	37 ; PC := 37
	31	[424]	SELF     	R6 R5 K8 ; R7 := R5; R6 := R5[0xd1586535]
	32	[424]	CALL     	R6 2 2 ; R6 := R6(R7)
	33	[424]	MOVE     	R3 R6 ; R3 := R6
	34	[425]	SELF     	R6 R5 K9 ; R7 := R5; R6 := R5[0xcb3851b8]
	35	[425]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[425]	MOVE     	R4 R6 ; R4 := R6
	37	[428]	TEST     	R1 1 ; if R1 then PC := 51
	38	[428]	JMP      	51 ; PC := 51
	39	[428]	GETGLOBAL	R6 K10 ; R6 := 0x9b56dc4a
	40	[428]	TEST     	R6 0 ; if not R6 then PC := 51
	41	[428]	JMP      	51 ; PC := 51
	42	[429]	SELF     	R6 R2 K11 ; R7 := R2; R6 := R2[0x589ef1c1]
	43	[429]	MOVE     	R8 R3 ; R8 := R3
	44	[429]	MOVE     	R9 R4 ; R9 := R4
	45	[429]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	46	[430]	SELF     	R6 R2 K12 ; R7 := R2; R6 := R2[0xb2532845]
	47	[430]	GETGLOBAL	R8 K13 ; R8 := 0x0469f296
	48	[430]	LOADK    	R9 K14 ; R9 := "Dock"
	49	[430]	CALL     	R8 2 0 ; R8,... := R8(R9)
	50	[430]	CALL     	R6 0 1 ; R6(R7,...)
	51	[433]	GETUPVAL 	R6 U3 ; R6 := U3
	52	[433]	CALL     	R6 1 2 ; R6 := R6()
	53	[434]	GETGLOBAL	R7 K10 ; R7 := 0x9b56dc4a
	54	[434]	TEST     	R7 0 ; if not R7 then PC := 58
	55	[434]	JMP      	58 ; PC := 58
	56	[434]	TEST     	R6 1 ; if R6 then PC := 61
	57	[434]	JMP      	61 ; PC := 61
	58	[435]	SELF     	R7 R2 K15 ; R8 := R2; R7 := R2[0x768274d6]
	59	[435]	OP_LOADBOOL	R9 0 0 ; R9 := false
	60	[435]	CALL     	R7 3 1 ; R7(R8,R9)
	61	[438]	SELF     	R7 R2 K16 ; R8 := R2; R7 := R2[0x26d544fc]
	62	[438]	GETGLOBAL	R9 K13 ; R9 := 0x0469f296
	63	[438]	LOADK    	R10 K17 ; R10 := "RailJack"
	64	[438]	CALL     	R9 2 0 ; R9,... := R9(R10)
	65	[438]	CALL     	R7 0 1 ; R7(R8,...)
	66	[440]	GETGLOBAL	R7 K18 ; R7 := 0x89326c93
	67	[440]	SELF     	R7 R7 K19 ; R8 := R7; R7 := R7[0xc7fcada9]
	68	[440]	GETUPVAL 	R9 U4 ; R9 := U4
	69	[440]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	70	[441]	GETGLOBAL	R8 K20 ; R8 := 0xc8802016
	71	[441]	MOVE     	R9 R7 ; R9 := R7
	72	[441]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	73	[441]	JMP      	76 ; PC := 76
	74	[442]	SELF     	R13 R12 K21 ; R14 := R12; R13 := R12[0x383d2e7d]
	75	[442]	CALL     	R13 2 1 ; R13(R14)
	76	[441]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 74; R10 := R11 end
	77	[442]	JMP      	74 ; PC := 74
	78	[445]	TEST     	R6 0 ; if not R6 then PC := 83
	79	[445]	JMP      	83 ; PC := 83
	80	[446]	GETUPVAL 	R13 U5 ; R13 := U5
	81	[446]	OP_LOADBOOL	R14 1 0 ; R14 := true
	82	[446]	CALL     	R13 2 1 ; R13(R14)
	83	[449]	GETGLOBAL	R13 K18 ; R13 := 0x89326c93
	84	[449]	SELF     	R13 R13 K19 ; R14 := R13; R13 := R13[0xc7fcada9]
	85	[449]	GETUPVAL 	R15 U6 ; R15 := U6
	86	[449]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	87	[450]	GETGLOBAL	R14 K20 ; R14 := 0xc8802016
	88	[450]	MOVE     	R15 R13 ; R15 := R13
	89	[450]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	90	[450]	JMP      	95 ; PC := 95
	91	[451]	SELF     	R19 R18 K15 ; R20 := R18; R19 := R18[0x768274d6]
	92	[451]	OP_LOADBOOL	R21 0 0 ; R21 := false
	93	[451]	OP_LOADBOOL	R22 0 0 ; R22 := false
	94	[451]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	95	[450]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 91; R16 := R17 end
	96	[451]	JMP      	91 ; PC := 91
	97	[454]	SELF     	R19 R2 K22 ; R20 := R2; R19 := R2[0xb6fd75db]
	98	[454]	GETUPVAL 	R21 U7 ; R21 := U7
	99	[454]	CALL     	R19 3 1 ; R19(R20,R21)
	100	[455]	SELF     	R19 R2 K23 ; R20 := R2; R19 := R2[0xd5f7912b]
	101	[455]	GETGLOBAL	R21 K13 ; R21 := 0x0469f296
	102	[455]	LOADK    	R22 K24 ; R22 := "UpdateLocalCrewShip"
	103	[455]	CALL     	R21 2 2 ; R21 := R21(R22)
	104	[455]	OP_LOADBOOL	R22 0 0 ; R22 := false
	105	[455]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	106	[457]	GETGLOBAL	R19 K18 ; R19 := 0x89326c93
	107	[457]	SELF     	R19 R19 K19 ; R20 := R19; R19 := R19[0xc7fcada9]
	108	[457]	GETUPVAL 	R21 U8 ; R21 := U8
	109	[457]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	110	[458]	GETGLOBAL	R20 K20 ; R20 := 0xc8802016
	111	[458]	MOVE     	R21 R19 ; R21 := R19
	112	[458]	CALL     	R20 2 4 ; R20,R21,R22 := R20(R21)
	113	[458]	JMP      	124 ; PC := 124
	114	[459]	GETGLOBAL	R25 K0 ; R25 := 0x3d106989
	115	[459]	LOADK    	R26 K25 ; R26 := "Running post-init script: "
	116	[459]	GETGLOBAL	R27 K26 ; R27 := 0x64fb1586
	117	[459]	MOVE     	R28 R23 ; R28 := R23
	118	[459]	CALL     	R27 2 2 ; R27 := R27(R28)
	119	[459]	CONCAT   	R26 R26 R27 ; R26 := R26 .. R27
	120	[459]	CALL     	R25 2 1 ; R25(R26)
	121	[460]	SELF     	R25 R24 K27 ; R26 := R24; R25 := R24[0x8eb2112d]
	122	[460]	LOADK    	R27 K28 ; R27 := "Execute"
	123	[460]	CALL     	R25 3 1 ; R25(R26,R27)
	124	[458]	TFORLOOP 	R20 2 ; R23,R24 := R20(R21,R22); if R23 ~= nil then begin PC = 114; R22 := R23 end
	125	[460]	JMP      	114 ; PC := 114
	126	[461]	JMP      	134 ; PC := 134
	127	[463]	GETGLOBAL	R25 K0 ; R25 := 0x3d106989
	128	[463]	LOADK    	R26 K29 ; R26 := "Has ship, but no owner"
	129	[463]	CALL     	R25 2 1 ; R25(R26)
	130	[464]	JMP      	134 ; PC := 134
	131	[466]	GETGLOBAL	R25 K0 ; R25 := 0x3d106989
	132	[466]	LOADK    	R26 K30 ; R26 := "No ship"
	133	[466]	CALL     	R25 2 1 ; R25(R26)
	134	[469]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	135	[469]	SELF     	R25 R25 K32 ; R26 := R25; R25 := R25[0xb321d806]
	136	[469]	CALL     	R25 2 2 ; R25 := R25(R26)
	137	[469]	TEST     	R25 1 ; if R25 then PC := 146
	138	[469]	JMP      	146 ; PC := 146
	139	[470]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	140	[470]	SELF     	R25 R25 K33 ; R26 := R25; R25 := R25[0xb5cc2f76]
	141	[470]	GETGLOBAL	R27 K13 ; R27 := 0x0469f296
	142	[470]	LOADK    	R28 K34 ; R28 := "RJLoadout"
	143	[470]	CALL     	R27 2 2 ; R27 := R27(R28)
	144	[470]	GETUPVAL 	R28 U9 ; R28 := U9
	145	[470]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	146	[473]	GETGLOBAL	R25 K35 ; R25 := _T
	147	[473]	SETTABLE 	R25 K36 R0 ; R25["CrewShip"] := R0
	148	[477]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	149	[477]	SELF     	R25 R25 K32 ; R26 := R25; R25 := R25[0xb321d806]
	150	[477]	CALL     	R25 2 2 ; R25 := R25(R26)
	151	[477]	TEST     	R25 1 ; if R25 then PC := 171
	152	[477]	JMP      	171 ; PC := 171
	153	[478]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	154	[478]	SELF     	R25 R25 K37 ; R26 := R25; R25 := R25[0x6923a4fa]
	155	[478]	CALL     	R25 2 2 ; R25 := R25(R26)
	156	[479]	EQ       	1 R25 K38 ; if R25 == "" then PC := 167
	157	[479]	JMP      	167 ; PC := 167
	158	[479]	TEST     	R1 0 ; if not R1 then PC := 171
	159	[479]	JMP      	171 ; PC := 171
	160	[479]	GETGLOBAL	R26 K39 ; R26 := 0x7f5022cf
	161	[479]	GETTABLE 	R26 R26 K40 ; R26 := R26[0xa5c556b9]
	162	[479]	MOVE     	R27 R25 ; R27 := R25
	163	[479]	LOADK    	R28 K41 ; R28 := "ScenarioEventHub5_HUB"
	164	[479]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	165	[479]	EQ       	0 R26 K42 ; if R26 ~= nil then PC := 171
	166	[479]	JMP      	171 ; PC := 171
	167	[480]	GETGLOBAL	R26 K31 ; R26 := 0xe7f2b02f
	168	[480]	SELF     	R26 R26 K43 ; R27 := R26; R26 := R26[0xf9744f7d]
	169	[480]	OP_LOADBOOL	R28 1 0 ; R28 := true
	170	[480]	CALL     	R26 3 1 ; R26(R27,R28)
	171	[483]	RETURN   	R0 1 ; return 

function #11 <?:485,487> (4 instructions, 16 bytes at 0000021121C17630)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[486]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[486]	MOVE     	R2 R0 ; R2 := R0
	3	[486]	CALL     	R1 2 1 ; R1(R2)
	4	[487]	RETURN   	R0 1 ; return 

function #12 <?:489,494> (19 instructions, 76 bytes at 0000021121C17700)
0 params, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[490]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[490]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[490]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	4	[490]	GETTABLE 	R2 R2 K3 ; R2 := R2["UIMovie_SolarMap"]
	5	[490]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[491]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	7	[491]	MOVE     	R2 R0 ; R2 := R0
	8	[491]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[491]	TEST     	R1 1 ; if R1 then PC := 19
	10	[491]	JMP      	19 ; PC := 19
	11	[492]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0xf56f3887]
	12	[492]	LOADK    	R3 K6 ; R3 := "TransitionOut"
	13	[492]	NEWTABLE 	R4 3 0 ; R4 := {}
	14	[492]	LOADK    	R5 K7 ; R5 := "true"
	15	[492]	LOADK    	R6 K7 ; R6 := "true"
	16	[492]	LOADK    	R7 K7 ; R7 := "true"
	17	[492]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	18	[492]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	19	[494]	RETURN   	R0 1 ; return 

function #13 <?:496,600> (238 instructions, 952 bytes at 0000021121C178E0)
1 param, 26 slots, 7 upvalues, 0 locals, 43 constants, 0 functions
	1	[498]	GETGLOBAL	R1 K0 ; R1 := 0xe7f2b02f
	2	[498]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xb321d806]
	3	[498]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[499]	OP_LOADBOOL	R2 0 0 ; R2 := false
	5	[500]	OP_LOADBOOL	R3 0 0 ; R3 := false
	6	[501]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[501]	CALL     	R4 1 2 ; R4 := R4()
	8	[504]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	9	[504]	MOVE     	R6 R0 ; R6 := R0
	10	[504]	CALL     	R5 2 2 ; R5 := R5(R6)
	11	[504]	TEST     	R5 1 ; if R5 then PC := 238
	12	[504]	JMP      	238 ; PC := 238
	13	[504]	GETGLOBAL	R5 K3 ; R5 := _T
	14	[504]	GETTABLE 	R5 R5 K4 ; R5 := R5["Railjack_FromDojo"]
	15	[504]	TEST     	R5 1 ; if R5 then PC := 238
	16	[504]	JMP      	238 ; PC := 238
	17	[506]	GETGLOBAL	R5 K0 ; R5 := 0xe7f2b02f
	18	[506]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0xb321d806]
	19	[506]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[507]	EQ       	1 R1 R5 ; if R1 == R5 then PC := 28
	21	[507]	JMP      	28 ; PC := 28
	22	[508]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0x768274d6]
	23	[508]	OP_LOADBOOL	R8 0 0 ; R8 := false
	24	[508]	CALL     	R6 3 1 ; R6(R7,R8)
	25	[509]	OP_LOADBOOL	R2 1 0 ; R2 := true
	26	[510]	NOT      	R3 R5 ; R3 := not R5
	27	[510]	JMP      	54 ; PC := 54
	28	[511]	GETGLOBAL	R6 K0 ; R6 := 0xe7f2b02f
	29	[511]	SELF     	R6 R6 K1 ; R7 := R6; R6 := R6[0xb321d806]
	30	[511]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[511]	TEST     	R6 1 ; if R6 then PC := 54
	32	[511]	JMP      	54 ; PC := 54
	33	[511]	GETGLOBAL	R6 K3 ; R6 := _T
	34	[511]	GETTABLE 	R6 R6 K4 ; R6 := R6["Railjack_FromDojo"]
	35	[511]	TEST     	R6 1 ; if R6 then PC := 54
	36	[511]	JMP      	54 ; PC := 54
	37	[512]	GETUPVAL 	R6 U0 ; R6 := U0
	38	[512]	CALL     	R6 1 2 ; R6 := R6()
	39	[513]	EQ       	1 R4 R6 ; if R4 == R6 then PC := 54
	40	[513]	JMP      	54 ; PC := 54
	41	[514]	GETGLOBAL	R7 K6 ; R7 := 0x3d106989
	42	[514]	LOADK    	R8 K7 ; R8 := "Host hub level changed: "
	43	[514]	GETGLOBAL	R9 K8 ; R9 := 0x64fb1586
	44	[514]	MOVE     	R10 R4 ; R10 := R4
	45	[514]	CALL     	R9 2 2 ; R9 := R9(R10)
	46	[514]	LOADK    	R10 K9 ; R10 := ", new: "
	47	[514]	GETGLOBAL	R11 K8 ; R11 := 0x64fb1586
	48	[514]	MOVE     	R12 R6 ; R12 := R6
	49	[514]	CALL     	R11 2 2 ; R11 := R11(R12)
	50	[514]	CONCAT   	R8 R8 R11 ; R8 := R8 .. R9 .. R10 .. R11
	51	[514]	CALL     	R7 2 1 ; R7(R8)
	52	[515]	OP_LOADBOOL	R2 1 0 ; R2 := true
	53	[517]	MOVE     	R4 R6 ; R4 := R6
	54	[521]	MOVE     	R1 R5 ; R1 := R5
	55	[523]	TEST     	R2 0 ; if not R2 then PC := 210
	56	[523]	JMP      	210 ; PC := 210
	57	[525]	OP_LOADBOOL	R7 0 0 ; R7 := false
	58	[526]	GETGLOBAL	R8 K10 ; R8 := 0x89326c93
	59	[526]	SELF     	R8 R8 K11 ; R9 := R8; R8 := R8[0xfb64e76c]
	60	[526]	CALL     	R8 2 2 ; R8 := R8(R9)
	61	[527]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	62	[527]	MOVE     	R10 R8 ; R10 := R8
	63	[527]	CALL     	R9 2 2 ; R9 := R9(R10)
	64	[527]	TEST     	R9 0 ; if not R9 then PC := 74
	65	[527]	JMP      	74 ; PC := 74
	66	[528]	GETGLOBAL	R9 K12 ; R9 := 0xcbd666e1
	67	[528]	LOADK    	R10 := 0.000000
	68	[528]	CALL     	R9 2 1 ; R9(R10)
	69	[529]	GETGLOBAL	R9 K10 ; R9 := 0x89326c93
	70	[529]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0xfb64e76c]
	71	[529]	CALL     	R9 2 2 ; R9 := R9(R10)
	72	[529]	MOVE     	R8 R9 ; R8 := R9
	73	[529]	JMP      	61 ; PC := 61
	74	[532]	TEST     	R5 0 ; if not R5 then PC := 103
	75	[532]	JMP      	103 ; PC := 103
	76	[533]	OP_LOADBOOL	R2 0 0 ; R2 := false
	77	[535]	SELF     	R9 R8 K13 ; R10 := R8; R9 := R8[0x62c81b76]
	78	[535]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[536]	GETTABLE 	R10 R9 K14 ; R10 := R9["mCrewShipLoadOut"]
	80	[537]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	81	[537]	MOVE     	R12 R10 ; R12 := R10
	82	[537]	CALL     	R11 2 2 ; R11 := R11(R12)
	83	[537]	TEST     	R11 1 ; if R11 then PC := 97
	84	[537]	JMP      	97 ; PC := 97
	85	[537]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	86	[537]	GETTABLE 	R12 R10 K15 ; R12 := R10["mShip"]
	87	[537]	CALL     	R11 2 2 ; R11 := R11(R12)
	88	[537]	TEST     	R11 1 ; if R11 then PC := 97
	89	[537]	JMP      	97 ; PC := 97
	90	[537]	GETTABLE 	R11 R10 K15 ; R11 := R10["mShip"]
	91	[537]	GETTABLE 	R11 R11 K16 ; R11 := R11["mItemId"]
	92	[537]	GETTABLE 	R11 R11 K17 ; R11 := R11["mId"]
	93	[537]	GETGLOBAL	R12 K18 ; R12 := 0x6c97a788
	94	[537]	GETTABLE 	R12 R12 K19 ; R12 := R12["InvalidItemID"]
	95	[537]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 98
	96	[537]	JMP      	98 ; PC := 98
	97	[537]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 98
	98	[537]	OP_LOADBOOL	R7 1 0 ; R7 := true
	99	[538]	GETUPVAL 	R11 U1 ; R11 := U1
	100	[538]	MOVE     	R12 R10 ; R12 := R10
	101	[538]	CALL     	R11 2 1 ; R11(R12)
	102	[538]	JMP      	147 ; PC := 147
	103	[540]	GETGLOBAL	R11 K0 ; R11 := 0xe7f2b02f
	104	[540]	SELF     	R11 R11 K20 ; R12 := R11; R11 := R11[0x6d0aa187]
	105	[540]	CALL     	R11 2 2 ; R11 := R11(R12)
	106	[541]	LOADK    	R12 := 1.000000
	107	[541]	LEN      	R13 R11 ; R13 := # R11
	108	[541]	LOADK    	R14 := 1.000000
	109	[541]	FORPREP  	R12 135 ; R12 -= R14; PC := 135
	110	[542]	GETTABLE 	R16 R11 R15 ; R16 := R11[R15]
	111	[542]	GETTABLE 	R16 R16 K21 ; R16 := R16["isHost"]
	112	[542]	TEST     	R16 0 ; if not R16 then PC := 135
	113	[542]	JMP      	135 ; PC := 135
	114	[543]	OP_LOADBOOL	R2 0 0 ; R2 := false
	115	[544]	GETGLOBAL	R16 K22 ; R16 := cjson
	116	[544]	GETTABLE 	R16 R16 K23 ; R16 := R16[0x7ab914d8]
	117	[544]	GETTABLE 	R17 R11 R15 ; R17 := R11[R15]
	118	[544]	GETTABLE 	R17 R17 K24 ; R17 := R17["loadout"]
	119	[544]	CALL     	R16 2 2 ; R16 := R16(R17)
	120	[545]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	121	[545]	GETTABLE 	R18 R16 K25 ; R18 := R16["CrewShipLoadOut"]
	122	[545]	CALL     	R17 2 2 ; R17 := R17(R18)
	123	[545]	TEST     	R17 1 ; if R17 then PC := 133
	124	[545]	JMP      	133 ; PC := 133
	125	[545]	GETTABLE 	R17 R16 K25 ; R17 := R16["CrewShipLoadOut"]
	126	[545]	GETTABLE 	R17 R17 K26 ; R17 := R17["Ship"]
	127	[545]	GETTABLE 	R17 R17 K27 ; R17 := R17["ItemId"]
	128	[545]	GETTABLE 	R17 R17 K28 ; R17 := R17["$oid"]
	129	[545]	GETGLOBAL	R18 K18 ; R18 := 0x6c97a788
	130	[545]	GETTABLE 	R18 R18 K19 ; R18 := R18["InvalidItemID"]
	131	[545]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 134
	132	[545]	JMP      	134 ; PC := 134
	133	[545]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 134
	134	[545]	OP_LOADBOOL	R7 1 0 ; R7 := true
	135	[541]	FORLOOP  	R12 110 ; R12 += R14; if R12 <= R13 then begin PC := 110; R15 := R12 end
	136	[549]	TEST     	R2 1 ; if R2 then PC := 147
	137	[549]	JMP      	147 ; PC := 147
	138	[550]	GETGLOBAL	R17 K0 ; R17 := 0xe7f2b02f
	139	[550]	SELF     	R17 R17 K29 ; R18 := R17; R17 := R17[0xb5cc2f76]
	140	[550]	GETGLOBAL	R19 K30 ; R19 := 0x0469f296
	141	[550]	LOADK    	R20 K31 ; R20 := "RJLoadout"
	142	[550]	CALL     	R19 2 2 ; R19 := R19(R20)
	143	[550]	GETUPVAL 	R20 U2 ; R20 := U2
	144	[550]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	145	[551]	GETUPVAL 	R17 U2 ; R17 := U2
	146	[551]	CALL     	R17 1 1 ; R17()
	147	[555]	TEST     	R2 1 ; if R2 then PC := 210
	148	[555]	JMP      	210 ; PC := 210
	149	[557]	TEST     	R1 1 ; if R1 then PC := 156
	150	[557]	JMP      	156 ; PC := 156
	151	[558]	GETGLOBAL	R17 K6 ; R17 := 0x3d106989
	152	[558]	LOADK    	R18 K32 ; R18 := "Squad client, closing solar map"
	153	[558]	CALL     	R17 2 1 ; R17(R18)
	154	[559]	GETUPVAL 	R17 U3 ; R17 := U3
	155	[559]	CALL     	R17 1 1 ; R17()
	156	[562]	TEST     	R7 0 ; if not R7 then PC := 169
	157	[562]	JMP      	169 ; PC := 169
	158	[562]	GETUPVAL 	R17 U4 ; R17 := U4
	159	[562]	CALL     	R17 1 2 ; R17 := R17()
	160	[562]	TEST     	R17 0 ; if not R17 then PC := 169
	161	[562]	JMP      	169 ; PC := 169
	162	[563]	SELF     	R17 R0 K5 ; R18 := R0; R17 := R0[0x768274d6]
	163	[563]	OP_LOADBOOL	R19 1 0 ; R19 := true
	164	[563]	CALL     	R17 3 1 ; R17(R18,R19)
	165	[564]	GETUPVAL 	R17 U5 ; R17 := U5
	166	[564]	OP_LOADBOOL	R18 1 0 ; R18 := true
	167	[564]	CALL     	R17 2 1 ; R17(R18)
	168	[564]	JMP      	210 ; PC := 210
	169	[567]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	170	[567]	SELF     	R18 R8 K33 ; R19 := R8; R18 := R8[0xbb610e5b]
	171	[567]	CALL     	R18 2 0 ; R18,... := R18(R19)
	172	[567]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	173	[567]	TEST     	R17 1 ; if R17 then PC := 202
	174	[567]	JMP      	202 ; PC := 202
	175	[567]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	176	[567]	SELF     	R18 R8 K33 ; R19 := R8; R18 := R8[0xbb610e5b]
	177	[567]	CALL     	R18 2 2 ; R18 := R18(R19)
	178	[567]	SELF     	R18 R18 K34 ; R19 := R18; R18 := R18[0xde321e6f]
	179	[567]	CALL     	R18 2 2 ; R18 := R18(R19)
	180	[567]	SELF     	R18 R18 K35 ; R19 := R18; R18 := R18[0x33c6e9d3]
	181	[567]	CALL     	R18 2 0 ; R18,... := R18(R19)
	182	[567]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	183	[567]	TEST     	R17 1 ; if R17 then PC := 202
	184	[567]	JMP      	202 ; PC := 202
	185	[568]	GETGLOBAL	R17 K10 ; R17 := 0x89326c93
	186	[568]	SELF     	R17 R17 K36 ; R18 := R17; R17 := R17[0x46a0ebf5]
	187	[568]	GETUPVAL 	R19 U6 ; R19 := U6
	188	[568]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	189	[569]	GETGLOBAL	R18 K2 ; R18 := 0x7b998233
	190	[569]	MOVE     	R19 R17 ; R19 := R17
	191	[569]	CALL     	R18 2 2 ; R18 := R18(R19)
	192	[569]	TEST     	R18 1 ; if R18 then PC := 202
	193	[569]	JMP      	202 ; PC := 202
	194	[570]	SELF     	R18 R8 K33 ; R19 := R8; R18 := R8[0xbb610e5b]
	195	[570]	CALL     	R18 2 2 ; R18 := R18(R19)
	196	[570]	SELF     	R18 R18 K37 ; R19 := R18; R18 := R18[0x589ef1c1]
	197	[570]	SELF     	R20 R17 K38 ; R21 := R17; R20 := R17[0xd1586535]
	198	[570]	CALL     	R20 2 2 ; R20 := R20(R21)
	199	[570]	SELF     	R21 R17 K39 ; R22 := R17; R21 := R17[0xcb3851b8]
	200	[570]	CALL     	R21 2 0 ; R21,... := R21(R22)
	201	[570]	CALL     	R18 0 1 ; R18(R19,...)
	202	[574]	GETGLOBAL	R18 K6 ; R18 := 0x3d106989
	203	[574]	LOADK    	R19 K40 ; R19 := "No RJ, closing solar map"
	204	[574]	CALL     	R18 2 1 ; R18(R19)
	205	[575]	GETUPVAL 	R18 U3 ; R18 := U3
	206	[575]	CALL     	R18 1 1 ; R18()
	207	[577]	GETUPVAL 	R18 U5 ; R18 := U5
	208	[577]	OP_LOADBOOL	R19 0 0 ; R19 := false
	209	[577]	CALL     	R18 2 1 ; R18(R19)
	210	[584]	TEST     	R3 0 ; if not R3 then PC := 234
	211	[584]	JMP      	234 ; PC := 234
	212	[584]	TEST     	R2 1 ; if R2 then PC := 234
	213	[584]	JMP      	234 ; PC := 234
	214	[585]	GETGLOBAL	R18 K0 ; R18 := 0xe7f2b02f
	215	[585]	SELF     	R18 R18 K20 ; R19 := R18; R18 := R18[0x6d0aa187]
	216	[585]	CALL     	R18 2 2 ; R18 := R18(R19)
	217	[586]	LOADK    	R19 := 1.000000
	218	[586]	LEN      	R20 R18 ; R20 := # R18
	219	[586]	LOADK    	R21 := 1.000000
	220	[586]	FORPREP  	R19 227 ; R19 -= R21; PC := 227
	221	[587]	GETTABLE 	R23 R18 R22 ; R23 := R18[R22]
	222	[587]	GETTABLE 	R23 R23 K41 ; R23 := R23["isLocal"]
	223	[587]	TEST     	R23 0 ; if not R23 then PC := 227
	224	[587]	JMP      	227 ; PC := 227
	225	[588]	OP_LOADBOOL	R3 0 0 ; R3 := false
	226	[589]	JMP      	228 ; PC := 228
	227	[586]	FORLOOP  	R19 221 ; R19 += R21; if R19 <= R20 then begin PC := 221; R22 := R19 end
	228	[593]	TEST     	R3 1 ; if R3 then PC := 234
	229	[593]	JMP      	234 ; PC := 234
	230	[594]	GETGLOBAL	R23 K0 ; R23 := 0xe7f2b02f
	231	[594]	SELF     	R23 R23 K42 ; R24 := R23; R23 := R23[0xf9744f7d]
	232	[594]	OP_LOADBOOL	R25 1 0 ; R25 := true
	233	[594]	CALL     	R23 3 1 ; R23(R24,R25)
	234	[598]	GETGLOBAL	R23 K12 ; R23 := 0xcbd666e1
	235	[598]	LOADK    	R24 := 0.000000
	236	[598]	CALL     	R23 2 1 ; R23(R24)
	237	[598]	JMP      	8 ; PC := 8
	238	[600]	RETURN   	R0 1 ; return 

function #14 <?:604,658> (134 instructions, 536 bytes at 0000021121C18530)
0 params, 24 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[605]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[605]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xb321d806]
	3	[605]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[606]	OP_LOADBOOL	R1 0 0 ; R1 := false
	5	[607]	OP_LOADBOOL	R2 0 0 ; R2 := false
	6	[609]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	7	[609]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x0ffec0b9]
	8	[609]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[609]	TEST     	R3 1 ; if R3 then PC := 134
	10	[609]	JMP      	134 ; PC := 134
	11	[609]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	12	[609]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xf2deaf69]
	13	[609]	GETGLOBAL	R5 K5 ; R5 := gLotusHubGameRulesType
	14	[609]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	15	[609]	TEST     	R3 0 ; if not R3 then PC := 134
	16	[609]	JMP      	134 ; PC := 134
	17	[611]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	18	[611]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xd7d79b74]
	19	[611]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[612]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	21	[612]	MOVE     	R5 R3 ; R5 := R3
	22	[612]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[612]	TEST     	R4 1 ; if R4 then PC := 32
	24	[612]	JMP      	32 ; PC := 32
	25	[612]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	26	[612]	SELF     	R5 R3 K8 ; R6 := R3; R5 := R3[0xcd57f819]
	27	[612]	CALL     	R5 2 0 ; R5,... := R5(R6)
	28	[612]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	29	[612]	TEST     	R4 1 ; if R4 then PC := 32
	30	[612]	JMP      	32 ; PC := 32
	31	[613]	JMP      	134 ; PC := 134
	32	[616]	GETGLOBAL	R4 K0 ; R4 := 0xe7f2b02f
	33	[616]	SELF     	R4 R4 K1 ; R5 := R4; R4 := R4[0xb321d806]
	34	[616]	CALL     	R4 2 2 ; R4 := R4(R5)
	35	[617]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 39
	36	[617]	JMP      	39 ; PC := 39
	37	[618]	OP_LOADBOOL	R1 1 0 ; R1 := true
	38	[619]	NOT      	R2 R4 ; R2 := not R4
	39	[622]	MOVE     	R0 R4 ; R0 := R4
	40	[624]	OP_LOADBOOL	R5 0 0 ; R5 := false
	41	[625]	LOADNIL  	R6 R6 ; R6 := nil
	42	[626]	TEST     	R1 0 ; if not R1 then PC := 117
	43	[626]	JMP      	117 ; PC := 117
	44	[627]	GETGLOBAL	R7 K9 ; R7 := 0x89326c93
	45	[627]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xfb64e76c]
	46	[627]	CALL     	R7 2 2 ; R7 := R7(R8)
	47	[628]	TEST     	R4 0 ; if not R4 then PC := 78
	48	[628]	JMP      	78 ; PC := 78
	49	[629]	GETGLOBAL	R8 K7 ; R8 := 0x7b998233
	50	[629]	MOVE     	R9 R7 ; R9 := R7
	51	[629]	CALL     	R8 2 2 ; R8 := R8(R9)
	52	[629]	TEST     	R8 1 ; if R8 then PC := 117
	53	[629]	JMP      	117 ; PC := 117
	54	[630]	OP_LOADBOOL	R1 0 0 ; R1 := false
	55	[632]	SELF     	R8 R7 K11 ; R9 := R7; R8 := R7[0x62c81b76]
	56	[632]	CALL     	R8 2 2 ; R8 := R8(R9)
	57	[633]	GETTABLE 	R6 R8 K12 ; R6 := R8["mCrewShipLoadOut"]
	58	[634]	GETGLOBAL	R9 K7 ; R9 := 0x7b998233
	59	[634]	MOVE     	R10 R6 ; R10 := R6
	60	[634]	CALL     	R9 2 2 ; R9 := R9(R10)
	61	[634]	TEST     	R9 1 ; if R9 then PC := 75
	62	[634]	JMP      	75 ; PC := 75
	63	[634]	GETGLOBAL	R9 K7 ; R9 := 0x7b998233
	64	[634]	GETTABLE 	R10 R6 K13 ; R10 := R6["mShip"]
	65	[634]	CALL     	R9 2 2 ; R9 := R9(R10)
	66	[634]	TEST     	R9 1 ; if R9 then PC := 75
	67	[634]	JMP      	75 ; PC := 75
	68	[634]	GETTABLE 	R9 R6 K13 ; R9 := R6["mShip"]
	69	[634]	GETTABLE 	R9 R9 K14 ; R9 := R9["mItemId"]
	70	[634]	GETTABLE 	R9 R9 K15 ; R9 := R9["mId"]
	71	[634]	GETGLOBAL	R10 K16 ; R10 := 0x6c97a788
	72	[634]	GETTABLE 	R10 R10 K17 ; R10 := R10["InvalidItemID"]
	73	[634]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 76
	74	[634]	JMP      	76 ; PC := 76
	75	[634]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 76
	76	[634]	OP_LOADBOOL	R5 1 0 ; R5 := true
	77	[635]	JMP      	117 ; PC := 117
	78	[637]	GETGLOBAL	R9 K0 ; R9 := 0xe7f2b02f
	79	[637]	SELF     	R9 R9 K18 ; R10 := R9; R9 := R9[0x6d0aa187]
	80	[637]	CALL     	R9 2 2 ; R9 := R9(R10)
	81	[638]	LOADK    	R10 := 1.000000
	82	[638]	LEN      	R11 R9 ; R11 := # R9
	83	[638]	LOADK    	R12 := 1.000000
	84	[638]	FORPREP  	R10 116 ; R10 -= R12; PC := 116
	85	[639]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	86	[639]	GETTABLE 	R14 R14 K19 ; R14 := R14["isHost"]
	87	[639]	TEST     	R14 0 ; if not R14 then PC := 116
	88	[639]	JMP      	116 ; PC := 116
	89	[640]	OP_LOADBOOL	R1 0 0 ; R1 := false
	90	[641]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	91	[641]	GETTABLE 	R14 R14 K20 ; R14 := R14["loadout"]
	92	[642]	GETUPVAL 	R15 U0 ; R15 := U0
	93	[642]	GETTABLE 	R15 R15 K21 ; R15 := R15[0x4356d102]
	94	[642]	MOVE     	R16 R14 ; R16 := R14
	95	[642]	CALL     	R15 2 2 ; R15 := R15(R16)
	96	[642]	MOVE     	R6 R15 ; R6 := R15
	97	[643]	GETGLOBAL	R15 K7 ; R15 := 0x7b998233
	98	[643]	MOVE     	R16 R6 ; R16 := R6
	99	[643]	CALL     	R15 2 2 ; R15 := R15(R16)
	100	[643]	TEST     	R15 1 ; if R15 then PC := 114
	101	[643]	JMP      	114 ; PC := 114
	102	[643]	GETGLOBAL	R15 K7 ; R15 := 0x7b998233
	103	[643]	GETTABLE 	R16 R6 K13 ; R16 := R6["mShip"]
	104	[643]	CALL     	R15 2 2 ; R15 := R15(R16)
	105	[643]	TEST     	R15 1 ; if R15 then PC := 114
	106	[643]	JMP      	114 ; PC := 114
	107	[643]	GETTABLE 	R15 R6 K13 ; R15 := R6["mShip"]
	108	[643]	GETTABLE 	R15 R15 K14 ; R15 := R15["mItemId"]
	109	[643]	GETTABLE 	R15 R15 K15 ; R15 := R15["mId"]
	110	[643]	GETGLOBAL	R16 K16 ; R16 := 0x6c97a788
	111	[643]	GETTABLE 	R16 R16 K17 ; R16 := R16["InvalidItemID"]
	112	[643]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 115
	113	[643]	JMP      	115 ; PC := 115
	114	[643]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 115
	115	[643]	OP_LOADBOOL	R5 1 0 ; R5 := true
	116	[638]	FORLOOP  	R10 85 ; R10 += R12; if R10 <= R11 then begin PC := 85; R13 := R10 end
	117	[649]	TEST     	R1 1 ; if R1 then PC := 130
	118	[649]	JMP      	130 ; PC := 130
	119	[649]	TEST     	R5 0 ; if not R5 then PC := 130
	120	[649]	JMP      	130 ; PC := 130
	121	[650]	OP_LOADBOOL	R15 1 0 ; R15 := true
	122	[651]	OP_LOADBOOL	R16 1 0 ; R16 := true
	123	[652]	SELF     	R17 R3 K22 ; R18 := R3; R17 := R3[0x7691b7fb]
	124	[652]	MOVE     	R19 R6 ; R19 := R6
	125	[652]	MOVE     	R20 R15 ; R20 := R15
	126	[652]	MOVE     	R21 R16 ; R21 := R16
	127	[652]	LOADK    	R22 K23 ; R22 := "ShipReady"
	128	[652]	GETUPVAL 	R23 U1 ; R23 := U1
	129	[652]	CALL     	R17 7 1 ; R17(R18,R19,R20,R21,R22,R23)
	130	[655]	GETGLOBAL	R17 K24 ; R17 := 0xcbd666e1
	131	[655]	LOADK    	R18 K25 ; R18 := 0.100000
	132	[655]	CALL     	R17 2 1 ; R17(R18)
	133	[655]	JMP      	6 ; PC := 6
	134	[658]	RETURN   	R0 1 ; return 

function #15 <?:660,691> (60 instructions, 240 bytes at 0000021121C18BD0)
1 param, 8 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[661]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[661]	SETTABLE 	R1 K1 K2 ; R1["RailjackLoadout_Enabling"] := true
	3	[662]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf4e253b6]
	4	[662]	CALL     	R1 2 1 ; R1(R2)
	5	[664]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	6	[664]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	7	[664]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[664]	TEST     	R1 1 ; if R1 then PC := 15
	9	[664]	JMP      	15 ; PC := 15
	10	[664]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[664]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	12	[664]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[664]	TEST     	R1 0 ; if not R1 then PC := 19
	14	[664]	JMP      	19 ; PC := 19
	15	[665]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	16	[665]	LOADK    	R2 := 0.000000
	17	[665]	CALL     	R1 2 1 ; R1(R2)
	18	[665]	JMP      	5 ; PC := 5
	19	[668]	GETGLOBAL	R1 K5 ; R1 := 0x25d99d89
	20	[668]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x25a6e75e]
	21	[668]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[669]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0x2fdbb24a]
	23	[669]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[670]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0xb895ffa3]
	25	[670]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[671]	LEN      	R4 R3 ; R4 := # R3
	27	[671]	LT       	0 K11 R4 ; if 0.000000 >= R4 then PC := 60
	28	[671]	JMP      	60 ; PC := 60
	29	[674]	LEN      	R4 R2 ; R4 := # R2
	30	[674]	LT       	0 K11 R4 ; if 0.000000 >= R4 then PC := 52
	31	[674]	JMP      	52 ; PC := 52
	32	[676]	LOADNIL  	R4 R4 ; R4 := nil
	33	[677]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	34	[677]	MOVE     	R6 R4 ; R6 := R4
	35	[677]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[677]	TEST     	R5 0 ; if not R5 then PC := 52
	37	[677]	JMP      	52 ; PC := 52
	38	[678]	GETGLOBAL	R5 K6 ; R5 := 0x89326c93
	39	[678]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0x46a0ebf5]
	40	[678]	GETUPVAL 	R7 U0 ; R7 := U0
	41	[678]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	42	[678]	MOVE     	R4 R5 ; R4 := R5
	43	[679]	GETGLOBAL	R5 K0 ; R5 := _T
	44	[679]	GETTABLE 	R5 R5 K13 ; R5 := R5["disableLisetConsoles"]
	45	[679]	TEST     	R5 0 ; if not R5 then PC := 48
	46	[679]	JMP      	48 ; PC := 48
	47	[680]	RETURN   	R0 1 ; return 
	48	[682]	GETGLOBAL	R5 K7 ; R5 := 0xcbd666e1
	49	[682]	LOADK    	R6 := 0.000000
	50	[682]	CALL     	R5 2 1 ; R5(R6)
	51	[682]	JMP      	33 ; PC := 33
	52	[686]	GETGLOBAL	R5 K0 ; R5 := _T
	53	[686]	GETTABLE 	R5 R5 K1 ; R5 := R5["RailjackLoadout_Enabling"]
	54	[686]	TEST     	R5 0 ; if not R5 then PC := 60
	55	[686]	JMP      	60 ; PC := 60
	56	[687]	GETGLOBAL	R5 K0 ; R5 := _T
	57	[687]	SETTABLE 	R5 K1 K14 ; R5["RailjackLoadout_Enabling"] := nil
	58	[688]	SELF     	R5 R0 K15 ; R6 := R0; R5 := R0[0x383d2e7d]
	59	[688]	CALL     	R5 2 1 ; R5(R6)
	60	[691]	RETURN   	R0 1 ; return 

function #16 <?:693,809> (295 instructions, 1180 bytes at 0000021121C18F70)
1 param, 30 slots, 6 upvalues, 0 locals, 57 constants, 0 functions
	1	[695]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[695]	LOADK    	R2 K1 ; R2 := "CREWSHIP: SetupCrewshipHangar"
	3	[695]	CALL     	R1 2 1 ; R1(R2)
	4	[697]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xd1586535]
	5	[697]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[697]	SETUPVAL 	R1 U0 ; U0 := R1
	7	[699]	GETGLOBAL	R1 K3 ; R1 := 0x89326c93
	8	[699]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xc7fcada9]
	9	[699]	GETUPVAL 	R3 U1 ; R3 := U1
	10	[699]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[700]	GETGLOBAL	R2 K5 ; R2 := 0xc8802016
	12	[700]	MOVE     	R3 R1 ; R3 := R1
	13	[700]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	14	[700]	JMP      	17 ; PC := 17
	15	[701]	SELF     	R7 R6 K6 ; R8 := R6; R7 := R6[0xf4e253b6]
	16	[701]	CALL     	R7 2 1 ; R7(R8)
	17	[700]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 15; R4 := R5 end
	18	[701]	JMP      	15 ; PC := 15
	19	[704]	GETUPVAL 	R7 U2 ; R7 := U2
	20	[704]	OP_LOADBOOL	R8 0 0 ; R8 := false
	21	[704]	CALL     	R7 2 1 ; R7(R8)
	22	[706]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	23	[706]	GETGLOBAL	R8 K8 ; R8 := 0xbe190284
	24	[706]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[706]	TEST     	R7 0 ; if not R7 then PC := 31
	26	[706]	JMP      	31 ; PC := 31
	27	[707]	GETGLOBAL	R7 K9 ; R7 := 0xcbd666e1
	28	[707]	LOADK    	R8 := 0.000000
	29	[707]	CALL     	R7 2 1 ; R7(R8)
	30	[707]	JMP      	22 ; PC := 22
	31	[710]	GETGLOBAL	R7 K8 ; R7 := 0xbe190284
	32	[710]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xd7d79b74]
	33	[710]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[712]	GETGLOBAL	R8 K7 ; R8 := 0x7b998233
	35	[712]	MOVE     	R9 R7 ; R9 := R7
	36	[712]	CALL     	R8 2 2 ; R8 := R8(R9)
	37	[712]	TEST     	R8 0 ; if not R8 then PC := 47
	38	[712]	JMP      	47 ; PC := 47
	39	[713]	GETGLOBAL	R8 K9 ; R8 := 0xcbd666e1
	40	[713]	LOADK    	R9 K11 ; R9 := 0.100000
	41	[713]	CALL     	R8 2 1 ; R8(R9)
	42	[714]	GETGLOBAL	R8 K8 ; R8 := 0xbe190284
	43	[714]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xd7d79b74]
	44	[714]	CALL     	R8 2 2 ; R8 := R8(R9)
	45	[714]	MOVE     	R7 R8 ; R7 := R8
	46	[714]	JMP      	34 ; PC := 34
	47	[716]	GETGLOBAL	R8 K0 ; R8 := 0x3d106989
	48	[716]	LOADK    	R9 K12 ; R9 := "HANGAR: Has crewShipMgr"
	49	[716]	CALL     	R8 2 1 ; R8(R9)
	50	[718]	LOADNIL  	R8 R8 ; R8 := nil
	51	[719]	LOADK    	R9 K13 ; R9 := ""
	52	[720]	GETGLOBAL	R10 K3 ; R10 := 0x89326c93
	53	[720]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0xfb64e76c]
	54	[720]	CALL     	R10 2 2 ; R10 := R10(R11)
	55	[721]	GETGLOBAL	R11 K7 ; R11 := 0x7b998233
	56	[721]	MOVE     	R12 R10 ; R12 := R10
	57	[721]	CALL     	R11 2 2 ; R11 := R11(R12)
	58	[721]	TEST     	R11 0 ; if not R11 then PC := 68
	59	[721]	JMP      	68 ; PC := 68
	60	[722]	GETGLOBAL	R11 K9 ; R11 := 0xcbd666e1
	61	[722]	LOADK    	R12 := 0.000000
	62	[722]	CALL     	R11 2 1 ; R11(R12)
	63	[723]	GETGLOBAL	R11 K3 ; R11 := 0x89326c93
	64	[723]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0xfb64e76c]
	65	[723]	CALL     	R11 2 2 ; R11 := R11(R12)
	66	[723]	MOVE     	R10 R11 ; R10 := R11
	67	[723]	JMP      	55 ; PC := 55
	68	[726]	SELF     	R11 R7 K15 ; R12 := R7; R11 := R7[0xcd57f819]
	69	[726]	CALL     	R11 2 2 ; R11 := R11(R12)
	70	[728]	GETGLOBAL	R12 K7 ; R12 := 0x7b998233
	71	[728]	MOVE     	R13 R11 ; R13 := R11
	72	[728]	CALL     	R12 2 2 ; R12 := R12(R13)
	73	[728]	TEST     	R12 1 ; if R12 then PC := 106
	74	[728]	JMP      	106 ; PC := 106
	75	[728]	GETGLOBAL	R12 K16 ; R12 := 0xe7f2b02f
	76	[728]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0xb321d806]
	77	[728]	CALL     	R12 2 2 ; R12 := R12(R13)
	78	[728]	TEST     	R12 1 ; if R12 then PC := 106
	79	[728]	JMP      	106 ; PC := 106
	80	[729]	LOADK    	R12 := 0.000000
	81	[730]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	82	[730]	MOVE     	R14 R11 ; R14 := R11
	83	[730]	CALL     	R13 2 2 ; R13 := R13(R14)
	84	[730]	TEST     	R13 1 ; if R13 then PC := 90
	85	[730]	JMP      	90 ; PC := 90
	86	[730]	SELF     	R13 R11 K18 ; R14 := R11; R13 := R11[0x18d05d30]
	87	[730]	CALL     	R13 2 2 ; R13 := R13(R14)
	88	[730]	TEST     	R13 1 ; if R13 then PC := 103
	89	[730]	JMP      	103 ; PC := 103
	90	[731]	GETGLOBAL	R13 K9 ; R13 := 0xcbd666e1
	91	[731]	LOADK    	R14 := 0.000000
	92	[731]	CALL     	R13 2 1 ; R13(R14)
	93	[732]	SELF     	R13 R7 K15 ; R14 := R7; R13 := R7[0xcd57f819]
	94	[732]	CALL     	R13 2 2 ; R13 := R13(R14)
	95	[732]	MOVE     	R11 R13 ; R11 := R13
	96	[733]	LT       	0 R12 K19 ; if R12 >= 5.000000 then PC := 101
	97	[733]	JMP      	101 ; PC := 101
	98	[734]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	99	[734]	LOADK    	R14 K20 ; R14 := "HANGAR: Waiting for master ship"
	100	[734]	CALL     	R13 2 1 ; R13(R14)
	101	[736]	ADD      	R12 R12 K21 ; R12 := R12 + 1.000000
	102	[736]	JMP      	81 ; PC := 81
	103	[738]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	104	[738]	LOADK    	R14 K22 ; R14 := "HANGAR: Has master ship"
	105	[738]	CALL     	R13 2 1 ; R13(R14)
	106	[741]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	107	[741]	GETGLOBAL	R14 K8 ; R14 := 0xbe190284
	108	[741]	CALL     	R13 2 2 ; R13 := R13(R14)
	109	[741]	TEST     	R13 1 ; if R13 then PC := 117
	110	[741]	JMP      	117 ; PC := 117
	111	[741]	GETGLOBAL	R13 K8 ; R13 := 0xbe190284
	112	[741]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0xf2deaf69]
	113	[741]	GETGLOBAL	R15 K24 ; R15 := gLotusHubGameRulesType
	114	[741]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	115	[741]	TEST     	R13 1 ; if R13 then PC := 121
	116	[741]	JMP      	121 ; PC := 121
	117	[742]	GETGLOBAL	R13 K9 ; R13 := 0xcbd666e1
	118	[742]	LOADK    	R14 := 0.000000
	119	[742]	CALL     	R13 2 1 ; R13(R14)
	120	[742]	JMP      	106 ; PC := 106
	121	[745]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	122	[745]	MOVE     	R14 R11 ; R14 := R11
	123	[745]	CALL     	R13 2 2 ; R13 := R13(R14)
	124	[745]	TEST     	R13 0 ; if not R13 then PC := 131
	125	[745]	JMP      	131 ; PC := 131
	126	[745]	SELF     	R13 R7 K25 ; R14 := R7; R13 := R7[0x381378ec]
	127	[745]	OP_LOADBOOL	R15 1 0 ; R15 := true
	128	[745]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	129	[745]	TEST     	R13 0 ; if not R13 then PC := 164
	130	[745]	JMP      	164 ; PC := 164
	131	[747]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	132	[747]	LOADK    	R14 K26 ; R14 := "HANGAR: Has ship - "
	133	[747]	GETGLOBAL	R15 K27 ; R15 := 0x64fb1586
	134	[747]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	135	[747]	MOVE     	R17 R11 ; R17 := R11
	136	[747]	CALL     	R16 2 2 ; R16 := R16(R17)
	137	[747]	NOT      	R16 R16 ; R16 := not R16
	138	[747]	CALL     	R15 2 2 ; R15 := R15(R16)
	139	[747]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	140	[747]	CALL     	R13 2 1 ; R13(R14)
	141	[748]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	142	[748]	MOVE     	R14 R11 ; R14 := R11
	143	[748]	CALL     	R13 2 2 ; R13 := R13(R14)
	144	[748]	TEST     	R13 1 ; if R13 then PC := 154
	145	[748]	JMP      	154 ; PC := 154
	146	[749]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	147	[749]	LOADK    	R14 K28 ; R14 := "Ship: "
	148	[749]	GETGLOBAL	R15 K27 ; R15 := 0x64fb1586
	149	[749]	SELF     	R16 R11 K29 ; R17 := R11; R16 := R11[0xed4e0128]
	150	[749]	CALL     	R16 2 0 ; R16,... := R16(R17)
	151	[749]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	152	[749]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	153	[749]	CALL     	R13 2 1 ; R13(R14)
	154	[752]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	155	[752]	MOVE     	R14 R11 ; R14 := R11
	156	[752]	CALL     	R13 2 2 ; R13 := R13(R14)
	157	[752]	TEST     	R13 1 ; if R13 then PC := 163
	158	[752]	JMP      	163 ; PC := 163
	159	[753]	GETUPVAL 	R13 U3 ; R13 := U3
	160	[753]	MOVE     	R14 R11 ; R14 := R11
	161	[753]	OP_LOADBOOL	R15 1 0 ; R15 := true
	162	[753]	CALL     	R13 3 1 ; R13(R14,R15)
	163	[756]	RETURN   	R0 1 ; return 
	164	[759]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	165	[759]	MOVE     	R14 R10 ; R14 := R10
	166	[759]	CALL     	R13 2 2 ; R13 := R13(R14)
	167	[759]	TEST     	R13 1 ; if R13 then PC := 204
	168	[759]	JMP      	204 ; PC := 204
	169	[760]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	170	[760]	SELF     	R14 R10 K30 ; R15 := R10; R14 := R10[0xbb610e5b]
	171	[760]	CALL     	R14 2 0 ; R14,... := R14(R15)
	172	[760]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	173	[760]	TEST     	R13 1 ; if R13 then PC := 186
	174	[760]	JMP      	186 ; PC := 186
	175	[760]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	176	[760]	SELF     	R14 R10 K30 ; R15 := R10; R14 := R10[0xbb610e5b]
	177	[760]	CALL     	R14 2 2 ; R14 := R14(R15)
	178	[760]	SELF     	R14 R14 K31 ; R15 := R14; R14 := R14[0xde321e6f]
	179	[760]	CALL     	R14 2 2 ; R14 := R14(R15)
	180	[760]	SELF     	R14 R14 K32 ; R15 := R14; R14 := R14[0x33c6e9d3]
	181	[760]	CALL     	R14 2 0 ; R14,... := R14(R15)
	182	[760]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	183	[760]	TEST     	R13 1 ; if R13 then PC := 186
	184	[760]	JMP      	186 ; PC := 186
	185	[761]	RETURN   	R0 1 ; return 
	186	[763]	SELF     	R13 R10 K33 ; R14 := R10; R13 := R10[0x62c81b76]
	187	[763]	CALL     	R13 2 2 ; R13 := R13(R14)
	188	[764]	GETGLOBAL	R14 K34 ; R14 := _T
	189	[764]	GETTABLE 	R14 R14 K35 ; R14 := R14["RailjackQuest_UseProfileLoadout"]
	190	[764]	TEST     	R14 0 ; if not R14 then PC := 203
	191	[764]	JMP      	203 ; PC := 203
	192	[764]	GETGLOBAL	R14 K7 ; R14 := 0x7b998233
	193	[764]	GETGLOBAL	R15 K36 ; R15 := 0x25d99d89
	194	[764]	CALL     	R14 2 2 ; R14 := R14(R15)
	195	[764]	TEST     	R14 1 ; if R14 then PC := 203
	196	[764]	JMP      	203 ; PC := 203
	197	[768]	GETGLOBAL	R14 K36 ; R14 := 0x25d99d89
	198	[768]	SELF     	R14 R14 K33 ; R15 := R14; R14 := R14[0x62c81b76]
	199	[768]	CALL     	R14 2 2 ; R14 := R14(R15)
	200	[768]	MOVE     	R13 R14 ; R13 := R14
	201	[769]	GETGLOBAL	R14 K34 ; R14 := _T
	202	[769]	SETTABLE 	R14 K35 K37 ; R14["RailjackQuest_UseProfileLoadout"] := nil
	203	[771]	GETTABLE 	R8 R13 K38 ; R8 := R13["mCrewShipLoadOut"]
	204	[774]	GETGLOBAL	R14 K16 ; R14 := 0xe7f2b02f
	205	[774]	SELF     	R14 R14 K17 ; R15 := R14; R14 := R14[0xb321d806]
	206	[774]	CALL     	R14 2 2 ; R14 := R14(R15)
	207	[774]	TEST     	R14 1 ; if R14 then PC := 229
	208	[774]	JMP      	229 ; PC := 229
	209	[776]	GETGLOBAL	R14 K16 ; R14 := 0xe7f2b02f
	210	[776]	SELF     	R14 R14 K39 ; R15 := R14; R14 := R14[0x6d0aa187]
	211	[776]	CALL     	R14 2 2 ; R14 := R14(R15)
	212	[777]	LOADK    	R15 := 1.000000
	213	[777]	LEN      	R16 R14 ; R16 := # R14
	214	[777]	LOADK    	R17 := 1.000000
	215	[777]	FORPREP  	R15 228 ; R15 -= R17; PC := 228
	216	[778]	GETTABLE 	R19 R14 R18 ; R19 := R14[R18]
	217	[778]	GETTABLE 	R19 R19 K40 ; R19 := R19["isHost"]
	218	[778]	TEST     	R19 0 ; if not R19 then PC := 228
	219	[778]	JMP      	228 ; PC := 228
	220	[779]	GETTABLE 	R19 R14 R18 ; R19 := R14[R18]
	221	[779]	GETTABLE 	R9 R19 K41 ; R9 := R19["loadout"]
	222	[780]	GETUPVAL 	R19 U4 ; R19 := U4
	223	[780]	GETTABLE 	R19 R19 K42 ; R19 := R19[0x4356d102]
	224	[780]	MOVE     	R20 R9 ; R20 := R9
	225	[780]	CALL     	R19 2 2 ; R19 := R19(R20)
	226	[780]	MOVE     	R8 R19 ; R8 := R19
	227	[781]	JMP      	229 ; PC := 229
	228	[777]	FORLOOP  	R15 216 ; R15 += R17; if R15 <= R16 then begin PC := 216; R18 := R15 end
	229	[786]	OP_LOADBOOL	R19 1 0 ; R19 := true
	230	[787]	OP_LOADBOOL	R20 1 0 ; R20 := true
	231	[788]	OP_LOADBOOL	R21 0 0 ; R21 := false
	232	[789]	LOADNIL  	R22 R22 ; R22 := nil
	233	[791]	EQ       	1 R8 K37 ; if R8 == nil then PC := 252
	234	[791]	JMP      	252 ; PC := 252
	235	[791]	GETTABLE 	R23 R8 K43 ; R23 := R8["mShip"]
	236	[791]	GETTABLE 	R23 R23 K44 ; R23 := R23["mItemId"]
	237	[791]	GETTABLE 	R23 R23 K45 ; R23 := R23["mId"]
	238	[791]	GETGLOBAL	R24 K46 ; R24 := 0x6c97a788
	239	[791]	GETTABLE 	R24 R24 K47 ; R24 := R24["InvalidItemID"]
	240	[791]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 252
	241	[791]	JMP      	252 ; PC := 252
	242	[792]	SELF     	R23 R7 K48 ; R24 := R7; R23 := R7[0x7691b7fb]
	243	[792]	MOVE     	R25 R8 ; R25 := R8
	244	[792]	MOVE     	R26 R19 ; R26 := R19
	245	[792]	MOVE     	R27 R20 ; R27 := R20
	246	[792]	LOADK    	R28 K49 ; R28 := "ShipReady"
	247	[792]	GETUPVAL 	R29 U5 ; R29 := U5
	248	[792]	CALL     	R23 7 2 ; R23 := R23(R24,R25,R26,R27,R28,R29)
	249	[792]	MOVE     	R22 R23 ; R22 := R23
	250	[793]	OP_LOADBOOL	R21 1 0 ; R21 := true
	251	[793]	JMP      	255 ; PC := 255
	252	[795]	GETGLOBAL	R23 K0 ; R23 := 0x3d106989
	253	[795]	LOADK    	R24 K50 ; R24 := "Has no crewship"
	254	[795]	CALL     	R23 2 1 ; R23(R24)
	255	[798]	GETGLOBAL	R23 K7 ; R23 := 0x7b998233
	256	[798]	MOVE     	R24 R22 ; R24 := R22
	257	[798]	CALL     	R23 2 2 ; R23 := R23(R24)
	258	[798]	TEST     	R23 0 ; if not R23 then PC := 295
	259	[798]	JMP      	295 ; PC := 295
	260	[798]	GETGLOBAL	R23 K7 ; R23 := 0x7b998233
	261	[798]	MOVE     	R24 R11 ; R24 := R11
	262	[798]	CALL     	R23 2 2 ; R23 := R23(R24)
	263	[798]	TEST     	R23 0 ; if not R23 then PC := 295
	264	[798]	JMP      	295 ; PC := 295
	265	[798]	TEST     	R21 1 ; if R21 then PC := 295
	266	[798]	JMP      	295 ; PC := 295
	267	[799]	GETGLOBAL	R23 K3 ; R23 := 0x89326c93
	268	[799]	SELF     	R23 R23 K51 ; R24 := R23; R23 := R23[0x46a0ebf5]
	269	[799]	GETGLOBAL	R25 K52 ; R25 := 0x0469f296
	270	[799]	LOADK    	R26 K53 ; R26 := "RailjackQuestShowParts"
	271	[799]	CALL     	R25 2 0 ; R25,... := R25(R26)
	272	[799]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	273	[800]	GETGLOBAL	R24 K7 ; R24 := 0x7b998233
	274	[800]	MOVE     	R25 R23 ; R25 := R23
	275	[800]	CALL     	R24 2 2 ; R24 := R24(R25)
	276	[800]	TEST     	R24 1 ; if R24 then PC := 281
	277	[800]	JMP      	281 ; PC := 281
	278	[801]	SELF     	R24 R23 K54 ; R25 := R23; R24 := R23[0x8eb2112d]
	279	[801]	LOADK    	R26 K55 ; R26 := "Execute"
	280	[801]	CALL     	R24 3 1 ; R24(R25,R26)
	281	[804]	GETGLOBAL	R24 K3 ; R24 := 0x89326c93
	282	[804]	SELF     	R24 R24 K51 ; R25 := R24; R24 := R24[0x46a0ebf5]
	283	[804]	GETGLOBAL	R26 K52 ; R26 := 0x0469f296
	284	[804]	LOADK    	R27 K56 ; R27 := "MonitorNoCrewship"
	285	[804]	CALL     	R26 2 0 ; R26,... := R26(R27)
	286	[804]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	287	[805]	GETGLOBAL	R25 K7 ; R25 := 0x7b998233
	288	[805]	MOVE     	R26 R24 ; R26 := R24
	289	[805]	CALL     	R25 2 2 ; R25 := R25(R26)
	290	[805]	TEST     	R25 1 ; if R25 then PC := 295
	291	[805]	JMP      	295 ; PC := 295
	292	[806]	SELF     	R25 R24 K54 ; R26 := R24; R25 := R24[0x8eb2112d]
	293	[806]	LOADK    	R27 K55 ; R27 := "Execute"
	294	[806]	CALL     	R25 3 1 ; R25(R26,R27)
	295	[809]	RETURN   	R0 1 ; return 

function #17 <?:811,922> (238 instructions, 952 bytes at 0000021121C19FA0)
1 param, 23 slots, 3 upvalues, 0 locals, 49 constants, 0 functions
	1	[812]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[812]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xfa179823]
	3	[812]	CALL     	R1 1 2 ; R1 := R1()
	4	[812]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[812]	JMP      	7 ; PC := 7
	6	[813]	RETURN   	R0 1 ; return 
	7	[816]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	8	[816]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x78298275]
	9	[816]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[817]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	11	[817]	MOVE     	R3 R1 ; R3 := R1
	12	[817]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[817]	TEST     	R2 0 ; if not R2 then PC := 16
	14	[817]	JMP      	16 ; PC := 16
	15	[818]	RETURN   	R0 1 ; return 
	16	[821]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	17	[821]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xfb64e76c]
	18	[821]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[822]	SELF     	R3 R1 K5 ; R4 := R1; R3 := R1[0xf2deaf69]
	20	[822]	GETGLOBAL	R5 K6 ; R5 := gLotusOperatorAvatarType
	21	[822]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	22	[822]	TEST     	R3 0 ; if not R3 then PC := 40
	23	[822]	JMP      	40 ; PC := 40
	24	[823]	SELF     	R3 R1 K7 ; R4 := R1; R3 := R1[0x5b89142c]
	25	[823]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[824]	SELF     	R4 R1 K8 ; R5 := R1; R4 := R1[0x18f03c5d]
	27	[824]	CALL     	R4 2 1 ; R4(R5)
	28	[825]	SELF     	R4 R1 K5 ; R5 := R1; R4 := R1[0xf2deaf69]
	29	[825]	GETGLOBAL	R6 K6 ; R6 := gLotusOperatorAvatarType
	30	[825]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[825]	TEST     	R4 0 ; if not R4 then PC := 40
	32	[825]	JMP      	40 ; PC := 40
	33	[826]	GETGLOBAL	R4 K9 ; R4 := 0xcbd666e1
	34	[826]	LOADK    	R5 := 0.000000
	35	[826]	CALL     	R4 2 1 ; R4(R5)
	36	[827]	SELF     	R4 R3 K10 ; R5 := R3; R4 := R3[0xbb610e5b]
	37	[827]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[827]	MOVE     	R1 R4 ; R1 := R4
	39	[827]	JMP      	28 ; PC := 28
	40	[831]	GETUPVAL 	R4 U1 ; R4 := U1
	41	[831]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x2a1108a9]
	42	[831]	GETUPVAL 	R5 U2 ; R5 := U2
	43	[831]	SELF     	R6 R1 K12 ; R7 := R1; R6 := R1[0xd1586535]
	44	[831]	CALL     	R6 2 0 ; R6,... := R6(R7)
	45	[831]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	46	[832]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	47	[832]	MOVE     	R6 R4 ; R6 := R4
	48	[832]	CALL     	R5 2 2 ; R5 := R5(R6)
	49	[832]	TEST     	R5 0 ; if not R5 then PC := 52
	50	[832]	JMP      	52 ; PC := 52
	51	[833]	RETURN   	R0 1 ; return 
	52	[836]	SELF     	R5 R4 K13 ; R6 := R4; R5 := R4[0xde321e6f]
	53	[836]	CALL     	R5 2 2 ; R5 := R5(R6)
	54	[836]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xf7d48ee0]
	55	[836]	CALL     	R5 2 2 ; R5 := R5(R6)
	56	[838]	OP_LOADBOOL	R6 0 0 ; R6 := false
	57	[839]	OP_LOADBOOL	R7 1 0 ; R7 := true
	58	[840]	SELF     	R8 R1 K15 ; R9 := R1; R8 := R1[0x5d985c7e]
	59	[840]	GETGLOBAL	R10 K16 ; R10 := 0x3839dc0a
	60	[840]	MOVE     	R11 R6 ; R11 := R6
	61	[840]	LOADK    	R12 := 3.000000
	62	[840]	LOADK    	R13 := 1.000000
	63	[840]	MOVE     	R14 R7 ; R14 := R7
	64	[840]	CALL     	R8 7 1 ; R8(R9,R10,R11,R12,R13,R14)
	65	[842]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	66	[842]	MOVE     	R9 R5 ; R9 := R5
	67	[842]	CALL     	R8 2 2 ; R8 := R8(R9)
	68	[842]	TEST     	R8 1 ; if R8 then PC := 80
	69	[842]	JMP      	80 ; PC := 80
	70	[843]	SELF     	R8 R5 K18 ; R9 := R5; R8 := R5[0x3e9d0b66]
	71	[843]	GETGLOBAL	R10 K19 ; R10 := 0xad2a85b6
	72	[843]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	73	[844]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	74	[844]	MOVE     	R10 R8 ; R10 := R8
	75	[844]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[844]	TEST     	R9 1 ; if R9 then PC := 80
	77	[844]	JMP      	80 ; PC := 80
	78	[845]	SELF     	R9 R8 K20 ; R10 := R8; R9 := R8[0xa52976d2]
	79	[845]	CALL     	R9 2 1 ; R9(R10)
	80	[849]	SELF     	R9 R1 K21 ; R10 := R1; R9 := R1[0x21b4c60e]
	81	[849]	GETGLOBAL	R11 K22 ; R11 := 0x905dde08
	82	[849]	LOADK    	R12 := 2.000000
	83	[849]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	84	[851]	LOADK    	R9 := 0.000000
	85	[852]	LOADK    	R10 := 0.500000
	86	[853]	LOADNIL  	R11 R11 ; R11 := nil
	87	[854]	GETGLOBAL	R12 K1 ; R12 := 0x89326c93
	88	[854]	SELF     	R12 R12 K23 ; R13 := R12; R12 := R12[0x7c1a0374]
	89	[854]	CALL     	R12 2 2 ; R12 := R12(R13)
	90	[855]	LT       	0 R9 K24 ; if R9 >= 1.000000 then PC := 109
	91	[855]	JMP      	109 ; PC := 109
	92	[856]	GETGLOBAL	R13 K25 ; R13 := 0x9bafffe3
	93	[856]	LOADK    	R14 := 0.000000
	94	[856]	LOADK    	R15 := 1.000000
	95	[856]	MOVE     	R16 R9 ; R16 := R9
	96	[856]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	97	[856]	MOVE     	R11 R13 ; R11 := R13
	98	[857]	SELF     	R13 R12 K26 ; R14 := R12; R13 := R12[0xb6df3e50]
	99	[857]	MOVE     	R15 R11 ; R15 := R11
	100	[857]	CALL     	R13 3 1 ; R13(R14,R15)
	101	[858]	GETGLOBAL	R13 K27 ; R13 := 0x67652851
	102	[858]	CALL     	R13 1 2 ; R13 := R13()
	103	[858]	DIV      	R13 R13 R10 ; R13 := R13 / R10
	104	[858]	ADD      	R9 R9 R13 ; R9 := R9 + R13
	105	[859]	GETGLOBAL	R13 K9 ; R13 := 0xcbd666e1
	106	[859]	LOADK    	R14 := 0.000000
	107	[859]	CALL     	R13 2 1 ; R13(R14)
	108	[859]	JMP      	90 ; PC := 90
	109	[862]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	110	[862]	MOVE     	R14 R5 ; R14 := R5
	111	[862]	CALL     	R13 2 2 ; R13 := R13(R14)
	112	[862]	TEST     	R13 1 ; if R13 then PC := 124
	113	[862]	JMP      	124 ; PC := 124
	114	[863]	SELF     	R13 R5 K18 ; R14 := R5; R13 := R5[0x3e9d0b66]
	115	[863]	GETGLOBAL	R15 K19 ; R15 := 0xad2a85b6
	116	[863]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	117	[864]	GETGLOBAL	R14 K3 ; R14 := 0x7b998233
	118	[864]	MOVE     	R15 R13 ; R15 := R13
	119	[864]	CALL     	R14 2 2 ; R14 := R14(R15)
	120	[864]	TEST     	R14 1 ; if R14 then PC := 124
	121	[864]	JMP      	124 ; PC := 124
	122	[865]	SELF     	R14 R13 K28 ; R15 := R13; R14 := R13[0xe9221266]
	123	[865]	CALL     	R14 2 1 ; R14(R15)
	124	[870]	SELF     	R14 R4 K29 ; R15 := R4; R14 := R4[0x6e4f62d7]
	125	[870]	MOVE     	R16 R1 ; R16 := R1
	126	[870]	LOADK    	R17 := 5.000000
	127	[870]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	128	[872]	GETGLOBAL	R14 K1 ; R14 := 0x89326c93
	129	[872]	SELF     	R14 R14 K31 ; R15 := R14; R14 := R14[0x18d05d30]
	130	[872]	CALL     	R14 2 2 ; R14 := R14(R15)
	131	[872]	TEST     	R14 0 ; if not R14 then PC := 136
	132	[872]	JMP      	136 ; PC := 136
	133	[873]	SELF     	R14 R4 K32 ; R15 := R4; R14 := R4[0x166dd705]
	134	[873]	LOADK    	R16 := 1.000000
	135	[873]	CALL     	R14 3 1 ; R14(R15,R16)
	136	[876]	GETUPVAL 	R14 U0 ; R14 := U0
	137	[876]	GETTABLE 	R14 R14 K0 ; R14 := R14[0xfa179823]
	138	[876]	CALL     	R14 1 2 ; R14 := R14()
	139	[876]	TEST     	R14 1 ; if R14 then PC := 145
	140	[876]	JMP      	145 ; PC := 145
	141	[877]	GETGLOBAL	R14 K9 ; R14 := 0xcbd666e1
	142	[877]	LOADK    	R15 := 0.000000
	143	[877]	CALL     	R14 2 1 ; R14(R15)
	144	[877]	JMP      	136 ; PC := 136
	145	[880]	SELF     	R14 R4 K13 ; R15 := R4; R14 := R4[0xde321e6f]
	146	[880]	CALL     	R14 2 2 ; R14 := R14(R15)
	147	[880]	SELF     	R14 R14 K14 ; R15 := R14; R14 := R14[0xf7d48ee0]
	148	[880]	CALL     	R14 2 2 ; R14 := R14(R15)
	149	[882]	GETGLOBAL	R15 K3 ; R15 := 0x7b998233
	150	[882]	MOVE     	R16 R14 ; R16 := R14
	151	[882]	CALL     	R15 2 2 ; R15 := R15(R16)
	152	[882]	TEST     	R15 0 ; if not R15 then PC := 155
	153	[882]	JMP      	155 ; PC := 155
	154	[883]	RETURN   	R0 1 ; return 
	155	[886]	SELF     	R15 R1 K33 ; R16 := R1; R15 := R1[0xbf2cdad3]
	156	[886]	CALL     	R15 2 2 ; R15 := R15(R16)
	157	[886]	TEST     	R15 0 ; if not R15 then PC := 163
	158	[886]	JMP      	163 ; PC := 163
	159	[887]	GETGLOBAL	R15 K9 ; R15 := 0xcbd666e1
	160	[887]	LOADK    	R16 := 0.000000
	161	[887]	CALL     	R15 2 1 ; R15(R16)
	162	[887]	JMP      	155 ; PC := 155
	163	[890]	SELF     	R15 R1 K34 ; R16 := R1; R15 := R1[0x5e651723]
	164	[890]	CALL     	R15 2 2 ; R15 := R15(R16)
	165	[890]	SELF     	R15 R15 K35 ; R16 := R15; R15 := R15[0x420402a9]
	166	[890]	CALL     	R15 2 2 ; R15 := R15(R16)
	167	[890]	TEST     	R15 0 ; if not R15 then PC := 169
	168	[890]	JMP      	169 ; PC := 169
	169	[894]	GETGLOBAL	R15 K1 ; R15 := 0x89326c93
	170	[894]	SELF     	R15 R15 K2 ; R16 := R15; R15 := R15[0x78298275]
	171	[894]	CALL     	R15 2 2 ; R15 := R15(R16)
	172	[896]	GETGLOBAL	R16 K1 ; R16 := 0x89326c93
	173	[896]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x18d05d30]
	174	[896]	CALL     	R16 2 2 ; R16 := R16(R17)
	175	[896]	TEST     	R16 0 ; if not R16 then PC := 214
	176	[896]	JMP      	214 ; PC := 214
	177	[900]	GETGLOBAL	R16 K1 ; R16 := 0x89326c93
	178	[900]	SELF     	R16 R16 K36 ; R17 := R16; R16 := R16[0xdd25e9d1]
	179	[900]	CALL     	R16 2 2 ; R16 := R16(R17)
	180	[901]	GETGLOBAL	R17 K1 ; R17 := 0x89326c93
	181	[901]	SELF     	R17 R17 K37 ; R18 := R17; R17 := R17[0x46a0ebf5]
	182	[901]	GETGLOBAL	R19 K38 ; R19 := 0x0469f296
	183	[901]	LOADK    	R20 K39 ; R20 := "BoardFromDojoCin"
	184	[901]	CALL     	R19 2 0 ; R19,... := R19(R20)
	185	[901]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	186	[902]	GETGLOBAL	R18 K3 ; R18 := 0x7b998233
	187	[902]	MOVE     	R19 R16 ; R19 := R16
	188	[902]	CALL     	R18 2 2 ; R18 := R18(R19)
	189	[902]	TEST     	R18 0 ; if not R18 then PC := 205
	190	[902]	JMP      	205 ; PC := 205
	191	[903]	GETGLOBAL	R18 K3 ; R18 := 0x7b998233
	192	[903]	MOVE     	R19 R17 ; R19 := R17
	193	[903]	CALL     	R18 2 2 ; R18 := R18(R19)
	194	[903]	TEST     	R18 1 ; if R18 then PC := 214
	195	[903]	JMP      	214 ; PC := 214
	196	[904]	SELF     	R18 R15 K40 ; R19 := R15; R18 := R15[0x26d544fc]
	197	[904]	GETGLOBAL	R20 K38 ; R20 := 0x0469f296
	198	[904]	LOADK    	R21 K41 ; R21 := "Tenno"
	199	[904]	CALL     	R20 2 0 ; R20,... := R20(R21)
	200	[904]	CALL     	R18 0 1 ; R18(R19,...)
	201	[905]	SELF     	R18 R17 K42 ; R19 := R17; R18 := R17[0x8eb2112d]
	202	[905]	LOADK    	R20 K43 ; R20 := "StartPlaying"
	203	[905]	CALL     	R18 3 1 ; R18(R19,R20)
	204	[906]	JMP      	214 ; PC := 214
	205	[908]	GETGLOBAL	R18 K44 ; R18 := 0x3d106989
	206	[908]	LOADK    	R19 K45 ; R19 := "BoardShip: playing mission cinematic, skipping"
	207	[908]	CALL     	R18 2 1 ; R18(R19)
	208	[909]	SELF     	R18 R15 K46 ; R19 := R15; R18 := R15[0x589ef1c1]
	209	[909]	SELF     	R20 R17 K12 ; R21 := R17; R20 := R17[0xd1586535]
	210	[909]	CALL     	R20 2 2 ; R20 := R20(R21)
	211	[909]	SELF     	R21 R17 K47 ; R22 := R17; R21 := R17[0xcb3851b8]
	212	[909]	CALL     	R21 2 0 ; R21,... := R21(R22)
	213	[909]	CALL     	R18 0 1 ; R18(R19,...)
	214	[913]	LOADK    	R9 := 0.000000
	215	[914]	LOADK    	R10 K48 ; R10 := 0.300000
	216	[915]	LT       	0 R9 K24 ; if R9 >= 1.000000 then PC := 235
	217	[915]	JMP      	235 ; PC := 235
	218	[916]	GETGLOBAL	R18 K25 ; R18 := 0x9bafffe3
	219	[916]	LOADK    	R19 := 1.000000
	220	[916]	LOADK    	R20 := 0.000000
	221	[916]	MOVE     	R21 R9 ; R21 := R9
	222	[916]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	223	[916]	MOVE     	R11 R18 ; R11 := R18
	224	[917]	SELF     	R18 R12 K26 ; R19 := R12; R18 := R12[0xb6df3e50]
	225	[917]	MOVE     	R20 R11 ; R20 := R11
	226	[917]	CALL     	R18 3 1 ; R18(R19,R20)
	227	[918]	GETGLOBAL	R18 K27 ; R18 := 0x67652851
	228	[918]	CALL     	R18 1 2 ; R18 := R18()
	229	[918]	DIV      	R18 R18 R10 ; R18 := R18 / R10
	230	[918]	ADD      	R9 R9 R18 ; R9 := R9 + R18
	231	[919]	GETGLOBAL	R18 K9 ; R18 := 0xcbd666e1
	232	[919]	LOADK    	R19 := 0.000000
	233	[919]	CALL     	R18 2 1 ; R18(R19)
	234	[919]	JMP      	216 ; PC := 216
	235	[921]	SELF     	R18 R12 K26 ; R19 := R12; R18 := R12[0xb6df3e50]
	236	[921]	LOADK    	R20 := 0.000000
	237	[921]	CALL     	R18 3 1 ; R18(R19,R20)
	238	[922]	RETURN   	R0 1 ; return 

function #18 <?:924,933> (26 instructions, 104 bytes at 000002112B4609C0)
0 params, 2 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[925]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[925]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	3	[925]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[925]	TEST     	R0 0 ; if not R0 then PC := 17
	5	[925]	JMP      	17 ; PC := 17
	6	[926]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[926]	GETGLOBAL	R1 K2 ; R1 := mShipAvatar
	8	[926]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[926]	TEST     	R0 1 ; if R0 then PC := 17
	10	[926]	JMP      	17 ; PC := 17
	11	[927]	GETGLOBAL	R0 K2 ; R0 := mShipAvatar
	12	[927]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xde321e6f]
	13	[927]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[927]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf7d48ee0]
	15	[927]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[927]	SETGLOBALHASH	R0 K1 ; mShipSuit := R0
	17	[930]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	18	[930]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	19	[930]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[930]	TEST     	R0 1 ; if R0 then PC := 26
	21	[930]	JMP      	26 ; PC := 26
	22	[931]	GETGLOBAL	R0 K1 ; R0 := mShipSuit
	23	[931]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x68d708a7]
	24	[931]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	25	[931]	RETURN   	R0 0 ; return R0,... 
	26	[933]	RETURN   	R0 1 ; return 

function #19 <?:935,937> (8 instructions, 32 bytes at 000002112B460BC0)
0 params, 2 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[936]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[936]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x62c81b76]
	3	[936]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[936]	GETTABLE 	R0 R0 K2 ; R0 := R0["mCrewShipLoadOut"]
	5	[936]	GETTABLE 	R0 R0 K3 ; R0 := R0["mShip"]
	6	[936]	GETTABLE 	R0 R0 K4 ; R0 := R0["mInteriorCustomization"]
	7	[936]	RETURN   	R0 2 ; return R0 
	8	[937]	RETURN   	R0 1 ; return 

function #20 <?:939,941> (7 instructions, 28 bytes at 000002112B460D10)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[940]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[940]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x62c81b76]
	3	[940]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[940]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x999c1a14]
	5	[940]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	6	[940]	RETURN   	R0 0 ; return R0,... 
	7	[941]	RETURN   	R0 1 ; return 

function #21 <?:943,955> (25 instructions, 100 bytes at 000002112B460E40)
0 params, 5 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[944]	GETGLOBAL	R0 K0 ; R0 := mInteriorCustomization
	2	[944]	TEST     	R0 0 ; if not R0 then PC := 14
	3	[944]	JMP      	14 ; PC := 14
	4	[945]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[945]	CALL     	R0 1 2 ; R0 := R0()
	6	[946]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	7	[946]	MOVE     	R2 R0 ; R2 := R0
	8	[946]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[946]	TEST     	R1 1 ; if R1 then PC := 25
	10	[946]	JMP      	25 ; PC := 25
	11	[947]	GETTABLE 	R1 R0 K2 ; R1 := R0["mColors"]
	12	[947]	RETURN   	R1 2 ; return R1 
	13	[948]	JMP      	25 ; PC := 25
	14	[950]	GETUPVAL 	R1 U1 ; R1 := U1
	15	[950]	CALL     	R1 1 2 ; R1 := R1()
	16	[951]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	17	[951]	MOVE     	R3 R1 ; R3 := R1
	18	[951]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[951]	TEST     	R2 1 ; if R2 then PC := 25
	20	[951]	JMP      	25 ; PC := 25
	21	[952]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0x8e62760a]
	22	[952]	LOADK    	R4 := 0.000000
	23	[952]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	24	[952]	RETURN   	R2 0 ; return R2,... 
	25	[955]	RETURN   	R0 1 ; return 

function #22 <?:957,1079> (299 instructions, 1196 bytes at 000002112B461030)
1 param, 43 slots, 1 upvalue, 0 locals, 62 constants, 0 functions
	1	[958]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[958]	GETGLOBAL	R2 K1 ; R2 := mShipAvatar
	3	[958]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[958]	TEST     	R1 1 ; if R1 then PC := 11
	5	[958]	JMP      	11 ; PC := 11
	6	[958]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[958]	GETGLOBAL	R2 K2 ; R2 := mShipSuit
	8	[958]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[958]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[958]	JMP      	12 ; PC := 12
	11	[959]	RETURN   	R0 1 ; return 
	12	[962]	GETGLOBAL	R1 K3 ; R1 := mCosmeticsList
	13	[962]	GETTABLE 	R1 R1 K4 ; R1 := R1["CustomizationList"]
	14	[962]	GETTABLE 	R1 R1 K5 ; R1 := R1["mSelectedElement"]
	15	[963]	GETGLOBAL	R2 K6 ; R2 := mActiveState
	16	[963]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[963]	GETTABLE 	R3 R3 K7 ; R3 := R3["EQUIP_INV"]
	18	[963]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 22
	19	[963]	JMP      	22 ; PC := 22
	20	[964]	GETGLOBAL	R2 K8 ; R2 := mEquipment
	21	[964]	GETTABLE 	R1 R2 K5 ; R1 := R2["mSelectedElement"]
	22	[966]	GETTABLE 	R2 R1 K9 ; R2 := R1["mDecal"]
	23	[966]	TEST     	R2 0 ; if not R2 then PC := 115
	24	[966]	JMP      	115 ; PC := 115
	25	[967]	NEWTABLE 	R2 0 0 ; R2 := {}
	26	[968]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	27	[968]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x905bb2bd]
	28	[968]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[969]	LOADK    	R4 := 1.000000
	30	[969]	LEN      	R5 R3 ; R5 := # R3
	31	[969]	LOADK    	R6 := 1.000000
	32	[969]	FORPREP  	R4 51 ; R4 -= R6; PC := 51
	33	[970]	GETGLOBAL	R8 K11 ; R8 := 0x33bdd652
	34	[970]	GETTABLE 	R8 R8 K12 ; R8 := R8[0x23d5322f]
	35	[970]	MOVE     	R9 R2 ; R9 := R2
	36	[970]	GETTABLE 	R10 R3 R7 ; R10 := R3[R7]
	37	[970]	CALL     	R8 3 1 ; R8(R9,R10)
	38	[971]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	39	[971]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x905bb2bd]
	40	[971]	CALL     	R8 2 2 ; R8 := R8(R9)
	41	[972]	LOADK    	R9 := 1.000000
	42	[972]	LEN      	R10 R8 ; R10 := # R8
	43	[972]	LOADK    	R11 := 1.000000
	44	[972]	FORPREP  	R9 50 ; R9 -= R11; PC := 50
	45	[973]	GETGLOBAL	R13 K11 ; R13 := 0x33bdd652
	46	[973]	GETTABLE 	R13 R13 K12 ; R13 := R13[0x23d5322f]
	47	[973]	MOVE     	R14 R2 ; R14 := R2
	48	[973]	GETTABLE 	R15 R8 R12 ; R15 := R8[R12]
	49	[973]	CALL     	R13 3 1 ; R13(R14,R15)
	50	[972]	FORLOOP  	R9 45 ; R9 += R11; if R9 <= R10 then begin PC := 45; R12 := R9 end
	51	[969]	FORLOOP  	R4 33 ; R4 += R6; if R4 <= R5 then begin PC := 33; R7 := R4 end
	52	[976]	LOADK    	R13 := 1.000000
	53	[976]	LEN      	R14 R2 ; R14 := # R2
	54	[976]	LOADK    	R15 := 1.000000
	55	[976]	FORPREP  	R13 113 ; R13 -= R15; PC := 113
	56	[977]	GETTABLE 	R17 R2 R16 ; R17 := R2[R16]
	57	[977]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x819abd48]
	58	[977]	LOADK    	R19 := 0.000000
	59	[977]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	60	[978]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	61	[978]	MOVE     	R19 R17 ; R19 := R17
	62	[978]	CALL     	R18 2 2 ; R18 := R18(R19)
	63	[978]	TEST     	R18 1 ; if R18 then PC := 113
	64	[978]	JMP      	113 ; PC := 113
	65	[978]	SELF     	R18 R17 K14 ; R19 := R17; R18 := R17[0xf2deaf69]
	66	[978]	GETGLOBAL	R20 K15 ; R20 := 0x18661b99
	67	[978]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	68	[978]	TEST     	R18 0 ; if not R18 then PC := 113
	69	[978]	JMP      	113 ; PC := 113
	70	[979]	LOADNIL  	R18 R19 ; R18 := R19 := nil
	71	[981]	EQ       	1 R0 K16 ; if R0 == nil then PC := 76
	72	[981]	JMP      	76 ; PC := 76
	73	[982]	GETTABLE 	R18 R0 K17 ; R18 := R0["Icon"]
	74	[983]	GETTABLE 	R19 R0 K18 ; R19 := R0["StoreItem"]
	75	[983]	JMP      	90 ; PC := 90
	76	[985]	GETTABLE 	R20 R1 K19 ; R20 := R1["ItemSelectionData"]
	77	[985]	GETTABLE 	R19 R20 K20 ; R19 := R20["CurrSelection"]
	78	[986]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	79	[986]	MOVE     	R21 R19 ; R21 := R19
	80	[986]	CALL     	R20 2 2 ; R20 := R20(R21)
	81	[986]	TEST     	R20 1 ; if R20 then PC := 89
	82	[986]	JMP      	89 ; PC := 89
	83	[987]	GETGLOBAL	R20 K21 ; R20 := 0xb009bbc6
	84	[987]	SELF     	R21 R19 K22 ; R22 := R19; R21 := R19[0x056dcf06]
	85	[987]	CALL     	R21 2 0 ; R21,... := R21(R22)
	86	[987]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	87	[987]	MOVE     	R18 R20 ; R18 := R20
	88	[987]	JMP      	90 ; PC := 90
	89	[990]	GETGLOBAL	R18 K23 ; R18 := 0x3894e23c
	90	[993]	GETGLOBAL	R20 K24 ; R20 := 0x6c97a788
	91	[993]	GETTABLE 	R20 R20 K25 ; R20 := R20[0x4b36b274]
	92	[993]	CALL     	R20 1 2 ; R20 := R20()
	93	[994]	EQ       	1 R19 K16 ; if R19 == nil then PC := 98
	94	[994]	JMP      	98 ; PC := 98
	95	[995]	SELF     	R21 R19 K27 ; R22 := R19; R21 := R19[0xf278f8a1]
	96	[995]	CALL     	R21 2 2 ; R21 := R21(R22)
	97	[995]	SETTABLE 	R20 K26 R21 ; R20["mItemType"] := R21
	98	[997]	GETGLOBAL	R21 K24 ; R21 := 0x6c97a788
	99	[997]	GETTABLE 	R21 R21 K28 ; R21 := R21[0x118303e2]
	100	[997]	GETTABLE 	R22 R2 R16 ; R22 := R2[R16]
	101	[997]	MOVE     	R23 R18 ; R23 := R18
	102	[997]	CALL     	R21 3 1 ; R21(R22,R23)
	103	[998]	GETGLOBAL	R21 K29 ; R21 := 0x25d99d89
	104	[998]	SELF     	R21 R21 K30 ; R22 := R21; R21 := R21[0x62c81b76]
	105	[998]	CALL     	R21 2 2 ; R21 := R21(R22)
	106	[998]	SELF     	R21 R21 K31 ; R22 := R21; R21 := R21[0xe7676b10]
	107	[998]	MOVE     	R23 R20 ; R23 := R20
	108	[998]	CALL     	R21 3 1 ; R21(R22,R23)
	109	[999]	GETGLOBAL	R21 K2 ; R21 := mShipSuit
	110	[999]	SELF     	R21 R21 K32 ; R22 := R21; R21 := R21[0x3e4d4598]
	111	[999]	MOVE     	R23 R20 ; R23 := R20
	112	[999]	CALL     	R21 3 1 ; R21(R22,R23)
	113	[976]	FORLOOP  	R13 56 ; R13 += R15; if R13 <= R14 then begin PC := 56; R16 := R13 end
	114	[1001]	JMP      	299 ; PC := 299
	115	[1003]	LOADNIL  	R21 R21 ; R21 := nil
	116	[1004]	GETTABLE 	R22 R1 K33 ; R22 := R1["mSlot"]
	117	[1006]	LOADNIL  	R23 R24 ; R23 := R24 := nil
	118	[1008]	EQ       	1 R0 K16 ; if R0 == nil then PC := 166
	119	[1008]	JMP      	166 ; PC := 166
	120	[1009]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	121	[1009]	GETTABLE 	R26 R0 K34 ; R26 := R0["CustomizationType"]
	122	[1009]	CALL     	R25 2 2 ; R25 := R25(R26)
	123	[1009]	TEST     	R25 1 ; if R25 then PC := 130
	124	[1009]	JMP      	130 ; PC := 130
	125	[1010]	GETTABLE 	R25 R0 K34 ; R25 := R0["CustomizationType"]
	126	[1010]	SELF     	R25 R25 K27 ; R26 := R25; R25 := R25[0xf278f8a1]
	127	[1010]	CALL     	R25 2 2 ; R25 := R25(R26)
	128	[1010]	MOVE     	R23 R25 ; R23 := R25
	129	[1010]	JMP      	159 ; PC := 159
	130	[1011]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	131	[1011]	GETTABLE 	R26 R0 K35 ; R26 := R0["ItemType"]
	132	[1011]	CALL     	R25 2 2 ; R25 := R25(R26)
	133	[1011]	TEST     	R25 1 ; if R25 then PC := 137
	134	[1011]	JMP      	137 ; PC := 137
	135	[1012]	GETTABLE 	R23 R0 K35 ; R23 := R0["ItemType"]
	136	[1012]	JMP      	159 ; PC := 159
	137	[1013]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	138	[1013]	GETTABLE 	R26 R0 K36 ; R26 := R0["Type"]
	139	[1013]	CALL     	R25 2 2 ; R25 := R25(R26)
	140	[1013]	TEST     	R25 1 ; if R25 then PC := 144
	141	[1013]	JMP      	144 ; PC := 144
	142	[1014]	GETTABLE 	R23 R0 K36 ; R23 := R0["Type"]
	143	[1014]	JMP      	159 ; PC := 159
	144	[1015]	GETTABLE 	R25 R0 K37 ; R25 := R0["mPurchasedInfo"]
	145	[1015]	EQ       	1 R25 K16 ; if R25 == nil then PC := 159
	146	[1015]	JMP      	159 ; PC := 159
	147	[1015]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	148	[1015]	GETTABLE 	R26 R0 K37 ; R26 := R0["mPurchasedInfo"]
	149	[1015]	GETTABLE 	R26 R26 K38 ; R26 := R26["UID"]
	150	[1015]	CALL     	R25 2 2 ; R25 := R25(R26)
	151	[1015]	TEST     	R25 1 ; if R25 then PC := 159
	152	[1015]	JMP      	159 ; PC := 159
	153	[1015]	GETTABLE 	R25 R0 K37 ; R25 := R0["mPurchasedInfo"]
	154	[1015]	GETTABLE 	R25 R25 K38 ; R25 := R25["UID"]
	155	[1015]	EQ       	1 R25 K39 ; if R25 == "" then PC := 159
	156	[1015]	JMP      	159 ; PC := 159
	157	[1016]	GETTABLE 	R25 R0 K37 ; R25 := R0["mPurchasedInfo"]
	158	[1016]	GETTABLE 	R23 R25 K38 ; R23 := R25["UID"]
	159	[1019]	GETTABLE 	R25 R0 K40 ; R25 := R0["RawItem"]
	160	[1019]	EQ       	1 R25 K16 ; if R25 == nil then PC := 194
	161	[1019]	JMP      	194 ; PC := 194
	162	[1020]	GETTABLE 	R25 R0 K40 ; R25 := R0["RawItem"]
	163	[1020]	GETTABLE 	R25 R25 K41 ; R25 := R25["Item"]
	164	[1020]	GETTABLE 	R24 R25 K42 ; R24 := R25["mUpgradeFingerprint"]
	165	[1021]	JMP      	194 ; PC := 194
	166	[1023]	LOADNIL  	R25 R25 ; R25 := nil
	167	[1024]	GETTABLE 	R26 R1 K19 ; R26 := R1["ItemSelectionData"]
	168	[1024]	EQ       	1 R26 K16 ; if R26 == nil then PC := 173
	169	[1024]	JMP      	173 ; PC := 173
	170	[1025]	GETTABLE 	R26 R1 K19 ; R26 := R1["ItemSelectionData"]
	171	[1025]	GETTABLE 	R25 R26 K20 ; R25 := R26["CurrSelection"]
	172	[1025]	JMP      	179 ; PC := 179
	173	[1026]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	174	[1026]	GETTABLE 	R27 R1 K43 ; R27 := R1["mStoreItem"]
	175	[1026]	CALL     	R26 2 2 ; R26 := R26(R27)
	176	[1026]	TEST     	R26 1 ; if R26 then PC := 179
	177	[1026]	JMP      	179 ; PC := 179
	178	[1027]	GETTABLE 	R25 R1 K43 ; R25 := R1["mStoreItem"]
	179	[1029]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	180	[1029]	MOVE     	R27 R25 ; R27 := R25
	181	[1029]	CALL     	R26 2 2 ; R26 := R26(R27)
	182	[1029]	TEST     	R26 1 ; if R26 then PC := 189
	183	[1029]	JMP      	189 ; PC := 189
	184	[1030]	GETGLOBAL	R26 K21 ; R26 := 0xb009bbc6
	185	[1030]	SELF     	R27 R25 K27 ; R28 := R25; R27 := R25[0xf278f8a1]
	186	[1030]	CALL     	R27 2 0 ; R27,... := R27(R28)
	187	[1030]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	188	[1030]	MOVE     	R23 R26 ; R23 := R26
	189	[1032]	GETTABLE 	R26 R1 K41 ; R26 := R1["Item"]
	190	[1032]	EQ       	1 R26 K16 ; if R26 == nil then PC := 194
	191	[1032]	JMP      	194 ; PC := 194
	192	[1033]	GETTABLE 	R26 R1 K41 ; R26 := R1["Item"]
	193	[1033]	GETTABLE 	R24 R26 K42 ; R24 := R26["mUpgradeFingerprint"]
	194	[1037]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	195	[1037]	MOVE     	R27 R23 ; R27 := R23
	196	[1037]	CALL     	R26 2 2 ; R26 := R26(R27)
	197	[1037]	TEST     	R26 1 ; if R26 then PC := 238
	198	[1037]	JMP      	238 ; PC := 238
	199	[1038]	GETGLOBAL	R26 K44 ; R26 := 0x89326c93
	200	[1038]	SELF     	R26 R26 K45 ; R27 := R26; R26 := R26[0x765dad71]
	201	[1038]	GETGLOBAL	R28 K21 ; R28 := 0xb009bbc6
	202	[1038]	MOVE     	R29 R23 ; R29 := R23
	203	[1038]	CALL     	R28 2 2 ; R28 := R28(R29)
	204	[1038]	GETGLOBAL	R29 K2 ; R29 := mShipSuit
	205	[1038]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	206	[1038]	MOVE     	R21 R26 ; R21 := R26
	207	[1039]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	208	[1039]	MOVE     	R27 R21 ; R27 := R21
	209	[1039]	CALL     	R26 2 2 ; R26 := R26(R27)
	210	[1039]	TEST     	R26 1 ; if R26 then PC := 235
	211	[1039]	JMP      	235 ; PC := 235
	212	[1039]	EQ       	1 R22 K16 ; if R22 == nil then PC := 235
	213	[1039]	JMP      	235 ; PC := 235
	214	[1040]	GETGLOBAL	R26 K46 ; R26 := 0x3d106989
	215	[1040]	LOADK    	R27 K47 ; R27 := "Created customization of type: "
	216	[1040]	GETGLOBAL	R28 K48 ; R28 := 0x64fb1586
	217	[1040]	SELF     	R29 R21 K49 ; R30 := R21; R29 := R21[0xed4e0128]
	218	[1040]	CALL     	R29 2 0 ; R29,... := R29(R30)
	219	[1040]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	220	[1040]	LOADK    	R29 K50 ; R29 := " for "
	221	[1040]	GETGLOBAL	R30 K48 ; R30 := 0x64fb1586
	222	[1040]	MOVE     	R31 R22 ; R31 := R22
	223	[1040]	CALL     	R30 2 2 ; R30 := R30(R31)
	224	[1040]	CONCAT   	R27 R27 R30 ; R27 := R27 .. R28 .. R29 .. R30
	225	[1040]	CALL     	R26 2 1 ; R26(R27)
	226	[1041]	SELF     	R26 R21 K51 ; R27 := R21; R26 := R21[0x63af7fef]
	227	[1041]	MOVE     	R28 R22 ; R28 := R22
	228	[1041]	CALL     	R26 3 1 ; R26(R27,R28)
	229	[1042]	EQ       	1 R24 K16 ; if R24 == nil then PC := 238
	230	[1042]	JMP      	238 ; PC := 238
	231	[1043]	SELF     	R26 R21 K52 ; R27 := R21; R26 := R21[0x6868f7f8]
	232	[1043]	MOVE     	R28 R24 ; R28 := R24
	233	[1043]	CALL     	R26 3 1 ; R26(R27,R28)
	234	[1044]	JMP      	238 ; PC := 238
	235	[1046]	GETGLOBAL	R26 K46 ; R26 := 0x3d106989
	236	[1046]	LOADK    	R27 K53 ; R27 := "Couldn't make it!"
	237	[1046]	CALL     	R26 2 1 ; R26(R27)
	238	[1050]	EQ       	0 R22 K16 ; if R22 ~= nil then PC := 241
	239	[1050]	JMP      	241 ; PC := 241
	240	[1051]	RETURN   	R0 1 ; return 
	241	[1054]	GETGLOBAL	R26 K2 ; R26 := mShipSuit
	242	[1054]	SELF     	R26 R26 K54 ; R27 := R26; R26 := R26[0x0ad758cb]
	243	[1054]	CALL     	R26 2 2 ; R26 := R26(R27)
	244	[1056]	NEWTABLE 	R27 0 0 ; R27 := {}
	245	[1058]	GETGLOBAL	R28 K55 ; R28 := gLotusSuitCustomizationType
	246	[1060]	LOADK    	R29 := 0.000000
	247	[1060]	SUB      	R30 R26 K56 ; R30 := R26 - 1.000000
	248	[1060]	LOADK    	R31 := 1.000000
	249	[1060]	FORPREP  	R29 273 ; R29 -= R31; PC := 273
	250	[1061]	GETGLOBAL	R33 K2 ; R33 := mShipSuit
	251	[1061]	SELF     	R33 R33 K57 ; R34 := R33; R33 := R33[0xfef27732]
	252	[1061]	MOVE     	R35 R32 ; R35 := R32
	253	[1061]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	254	[1062]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	255	[1062]	MOVE     	R35 R33 ; R35 := R33
	256	[1062]	CALL     	R34 2 2 ; R34 := R34(R35)
	257	[1062]	TEST     	R34 1 ; if R34 then PC := 273
	258	[1062]	JMP      	273 ; PC := 273
	259	[1062]	SELF     	R34 R33 K14 ; R35 := R33; R34 := R33[0xf2deaf69]
	260	[1062]	MOVE     	R36 R28 ; R36 := R28
	261	[1062]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	262	[1062]	TEST     	R34 0 ; if not R34 then PC := 273
	263	[1062]	JMP      	273 ; PC := 273
	264	[1063]	SELF     	R34 R33 K58 ; R35 := R33; R34 := R33[0xf4f49d1b]
	265	[1063]	CALL     	R34 2 2 ; R34 := R34(R35)
	266	[1063]	EQ       	0 R34 R22 ; if R34 ~= R22 then PC := 273
	267	[1063]	JMP      	273 ; PC := 273
	268	[1064]	GETGLOBAL	R34 K11 ; R34 := 0x33bdd652
	269	[1064]	GETTABLE 	R34 R34 K12 ; R34 := R34[0x23d5322f]
	270	[1064]	MOVE     	R35 R27 ; R35 := R27
	271	[1064]	MOVE     	R36 R33 ; R36 := R33
	272	[1064]	CALL     	R34 3 1 ; R34(R35,R36)
	273	[1060]	FORLOOP  	R29 250 ; R29 += R31; if R29 <= R30 then begin PC := 250; R32 := R29 end
	274	[1069]	GETGLOBAL	R34 K59 ; R34 := 0xcfc01047
	275	[1069]	MOVE     	R35 R27 ; R35 := R27
	276	[1069]	CALL     	R34 2 4 ; R34,R35,R36 := R34(R35)
	277	[1069]	JMP      	288 ; PC := 288
	278	[1070]	GETGLOBAL	R39 K0 ; R39 := 0x7b998233
	279	[1070]	MOVE     	R40 R38 ; R40 := R38
	280	[1070]	CALL     	R39 2 2 ; R39 := R39(R40)
	281	[1070]	TEST     	R39 1 ; if R39 then PC := 288
	282	[1070]	JMP      	288 ; PC := 288
	283	[1071]	GETGLOBAL	R39 K2 ; R39 := mShipSuit
	284	[1071]	SELF     	R39 R39 K60 ; R40 := R39; R39 := R39[0x12dd9da2]
	285	[1071]	MOVE     	R41 R38 ; R41 := R38
	286	[1071]	OP_LOADBOOL	R42 1 0 ; R42 := true
	287	[1071]	CALL     	R39 4 1 ; R39(R40,R41,R42)
	288	[1069]	TFORLOOP 	R34 2 ; R37,R38 := R34(R35,R36); if R37 ~= nil then begin PC = 278; R36 := R37 end
	289	[1072]	JMP      	278 ; PC := 278
	290	[1075]	GETGLOBAL	R39 K0 ; R39 := 0x7b998233
	291	[1075]	MOVE     	R40 R21 ; R40 := R21
	292	[1075]	CALL     	R39 2 2 ; R39 := R39(R40)
	293	[1075]	TEST     	R39 1 ; if R39 then PC := 299
	294	[1075]	JMP      	299 ; PC := 299
	295	[1076]	GETGLOBAL	R39 K2 ; R39 := mShipSuit
	296	[1076]	SELF     	R39 R39 K61 ; R40 := R39; R39 := R39[0x5e6704ff]
	297	[1076]	MOVE     	R41 R21 ; R41 := R21
	298	[1076]	CALL     	R39 3 1 ; R39(R40,R41)
	299	[1079]	RETURN   	R0 1 ; return 

function #23 <?:1081,1102> (72 instructions, 288 bytes at 000002112B461F30)
1 param, 9 slots, 2 upvalues, 0 locals, 27 constants, 0 functions
	1	[1082]	GETGLOBAL	R1 K0 ; R1 := mActiveState
	2	[1082]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1082]	GETTABLE 	R2 R2 K1 ; R2 := R2["WEAPON_INV"]
	4	[1082]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 64
	5	[1082]	JMP      	64 ; PC := 64
	6	[1083]	TESTSET  	R1 R0 1 ; if R0 then PC := 10 else R1 := R0 
	7	[1083]	JMP      	10 ; PC := 10
	8	[1083]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	9	[1083]	GETTABLE 	R1 R1 K3 ; R1 := R1["mSelectedElement"]
	10	[1084]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	11	[1084]	MOVE     	R3 R1 ; R3 := R1
	12	[1084]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1084]	TEST     	R2 1 ; if R2 then PC := 72
	14	[1084]	JMP      	72 ; PC := 72
	15	[1084]	GETTABLE 	R2 R1 K5 ; R2 := R1["Slot"]
	16	[1084]	EQ       	1 R2 K6 ; if R2 == nil then PC := 72
	17	[1084]	JMP      	72 ; PC := 72
	18	[1085]	GETGLOBAL	R2 K7 ; R2 := mCurrentShip
	19	[1085]	GETTABLE 	R2 R2 K8 ; R2 := R2["ShipInfo"]
	20	[1085]	TEST     	R2 0 ; if not R2 then PC := 72
	21	[1085]	JMP      	72 ; PC := 72
	22	[1086]	GETGLOBAL	R2 K7 ; R2 := mCurrentShip
	23	[1086]	GETTABLE 	R2 R2 K8 ; R2 := R2["ShipInfo"]
	24	[1086]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x73a8846a]
	25	[1086]	GETTABLE 	R4 R1 K10 ; R4 := R1["Hand"]
	26	[1086]	GETTABLE 	R5 R1 K5 ; R5 := R1["Slot"]
	27	[1086]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	28	[1087]	GETTABLE 	R3 R1 K12 ; R3 := R1["ItemType"]
	29	[1087]	SETTABLE 	R2 K11 R3 ; R2["mItemType"] := R3
	30	[1088]	GETTABLE 	R3 R1 K13 ; R3 := R1["UID"]
	31	[1088]	EQ       	1 R3 K6 ; if R3 == nil then PC := 36
	32	[1088]	JMP      	36 ; PC := 36
	33	[1089]	GETTABLE 	R3 R2 K14 ; R3 := R2["mItemId"]
	34	[1089]	GETTABLE 	R4 R1 K13 ; R4 := R1["UID"]
	35	[1089]	SETTABLE 	R3 K15 R4 ; R3["mId"] := R4
	36	[1091]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	37	[1091]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0x25a6e75e]
	38	[1091]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[1091]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xdf943d05]
	40	[1091]	GETGLOBAL	R5 K7 ; R5 := mCurrentShip
	41	[1091]	GETTABLE 	R5 R5 K19 ; R5 := R5["ID"]
	42	[1091]	GETTABLE 	R6 R1 K10 ; R6 := R1["Hand"]
	43	[1091]	GETTABLE 	R7 R1 K5 ; R7 := R1["Slot"]
	44	[1091]	MOVE     	R8 R2 ; R8 := R2
	45	[1091]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	46	[1092]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	47	[1092]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0x41f4ba99]
	48	[1092]	CALL     	R3 2 1 ; R3(R4)
	49	[1093]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	50	[1093]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0x62c81b76]
	51	[1093]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[1093]	GETTABLE 	R3 R3 K23 ; R3 := R3["mCrewShipLoadOut"]
	53	[1093]	SETGLOBALHASH	R3 K21 ; mCurrentLoadout := R3
	54	[1094]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	55	[1094]	GETGLOBAL	R4 K24 ; R4 := mShipSuit
	56	[1094]	CALL     	R3 2 2 ; R3 := R3(R4)
	57	[1094]	TEST     	R3 1 ; if R3 then PC := 72
	58	[1094]	JMP      	72 ; PC := 72
	59	[1095]	GETGLOBAL	R3 K24 ; R3 := mShipSuit
	60	[1095]	SELF     	R3 R3 K25 ; R4 := R3; R3 := R3[0x364c4d52]
	61	[1095]	GETGLOBAL	R5 K21 ; R5 := mCurrentLoadout
	62	[1095]	CALL     	R3 3 1 ; R3(R4,R5)
	63	[1098]	JMP      	72 ; PC := 72
	64	[1099]	GETGLOBAL	R3 K0 ; R3 := mActiveState
	65	[1099]	GETUPVAL 	R4 U0 ; R4 := U0
	66	[1099]	GETTABLE 	R4 R4 K26 ; R4 := R4["EQUIP_INV"]
	67	[1099]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 72
	68	[1099]	JMP      	72 ; PC := 72
	69	[1100]	GETUPVAL 	R3 U1 ; R3 := U1
	70	[1100]	OP_LOADBOOL	R4 1 0 ; R4 := true
	71	[1100]	CALL     	R3 2 1 ; R3(R4)
	72	[1102]	RETURN   	R0 1 ; return 

function #24 <?:1104,1158> (132 instructions, 528 bytes at 000002112B462450)
2 params, 11 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[1105]	GETGLOBAL	R2 K0 ; R2 := mCleanUpDone
	2	[1105]	TEST     	R2 0 ; if not R2 then PC := 5
	3	[1105]	JMP      	5 ; PC := 5
	4	[1106]	RETURN   	R0 1 ; return 
	5	[1109]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	6	[1109]	GETGLOBAL	R3 K2 ; R3 := mVignetteMovie
	7	[1109]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[1109]	TEST     	R2 0 ; if not R2 then PC := 15
	9	[1109]	JMP      	15 ; PC := 15
	10	[1110]	GETGLOBAL	R2 K3 ; R2 := 0x9ba7909f
	11	[1110]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xbcfb64ab]
	12	[1110]	GETGLOBAL	R4 K5 ; R4 := 0x6e48c770
	13	[1110]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	14	[1110]	SETGLOBALHASH	R2 K2 ; mVignetteMovie := R2
	15	[1112]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	16	[1112]	GETGLOBAL	R3 K2 ; R3 := mVignetteMovie
	17	[1112]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[1112]	TEST     	R2 1 ; if R2 then PC := 35
	19	[1112]	JMP      	35 ; PC := 35
	20	[1113]	GETGLOBAL	R2 K2 ; R2 := mVignetteMovie
	21	[1113]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xf56f3887]
	22	[1113]	LOADK    	R4 K7 ; R4 := "TransitionOut"
	23	[1113]	NEWTABLE 	R5 1 0 ; R5 := {}
	24	[1113]	LOADK    	R6 K8 ; R6 := ""
	25	[1113]	GETUPVAL 	R7 U0 ; R7 := U0
	26	[1113]	GETTABLE 	R7 R7 K9 ; R7 := R7[0x06d055f9]
	27	[1113]	TESTSET  	R8 R0 1 ; if R0 then PC := 30 else R8 := R0 
	28	[1113]	JMP      	30 ; PC := 30
	29	[1113]	MOVE     	R8 R1 ; R8 := R1
	30	[1113]	LOADK    	R9 K10 ; R9 := "true"
	31	[1113]	LOADK    	R10 K11 ; R10 := "false"
	32	[1113]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	33	[1113]	SETLIST  	R5 0 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 0
	34	[1113]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	35	[1116]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	36	[1116]	GETGLOBAL	R3 K12 ; R3 := _T
	37	[1116]	GETTABLE 	R3 R3 K13 ; R3 := R3["DisableUIInput"]
	38	[1116]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[1116]	TEST     	R2 1 ; if R2 then PC := 44
	40	[1116]	JMP      	44 ; PC := 44
	41	[1117]	GETGLOBAL	R2 K12 ; R2 := _T
	42	[1117]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x80172c74]
	43	[1117]	CALL     	R2 1 1 ; R2()
	44	[1120]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	45	[1120]	GETGLOBAL	R3 K15 ; R3 := mChildMovie
	46	[1120]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[1120]	TEST     	R2 1 ; if R2 then PC := 52
	48	[1120]	JMP      	52 ; PC := 52
	49	[1121]	GETGLOBAL	R2 K15 ; R2 := mChildMovie
	50	[1121]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x32302b4a]
	51	[1121]	CALL     	R2 2 1 ; R2(R3)
	52	[1124]	GETGLOBAL	R2 K17 ; R2 := 0xae91e43b
	53	[1124]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xaf5300dc]
	54	[1124]	LOADK    	R4 K19 ; R4 := "Camera"
	55	[1124]	CALL     	R2 3 1 ; R2(R3,R4)
	56	[1126]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	57	[1126]	GETGLOBAL	R3 K20 ; R3 := mAvatar
	58	[1126]	CALL     	R2 2 2 ; R2 := R2(R3)
	59	[1126]	TEST     	R2 1 ; if R2 then PC := 87
	60	[1126]	JMP      	87 ; PC := 87
	61	[1127]	GETGLOBAL	R2 K20 ; R2 := mAvatar
	62	[1127]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x0b4bcfb6]
	63	[1127]	CALL     	R2 2 2 ; R2 := R2(R3)
	64	[1128]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	65	[1128]	MOVE     	R4 R2 ; R4 := R2
	66	[1128]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[1128]	TEST     	R3 1 ; if R3 then PC := 87
	68	[1128]	JMP      	87 ; PC := 87
	69	[1129]	SELF     	R3 R2 K22 ; R4 := R2; R3 := R2[0xa72afc7e]
	70	[1129]	CALL     	R3 2 2 ; R3 := R3(R4)
	71	[1130]	SELF     	R4 R2 K23 ; R5 := R2; R4 := R2[0x68f07b6a]
	72	[1130]	LOADK    	R6 := 0.000000
	73	[1130]	CALL     	R4 3 1 ; R4(R5,R6)
	74	[1131]	SELF     	R4 R2 K24 ; R5 := R2; R4 := R2[0x14c7f7dd]
	75	[1131]	LOADNIL  	R6 R6 ; R6 := nil
	76	[1131]	LOADK    	R7 := 0.000000
	77	[1131]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	78	[1132]	SELF     	R4 R2 K23 ; R5 := R2; R4 := R2[0x68f07b6a]
	79	[1132]	MOVE     	R6 R3 ; R6 := R3
	80	[1132]	CALL     	R4 3 1 ; R4(R5,R6)
	81	[1134]	GETGLOBAL	R4 K25 ; R4 := 0x89326c93
	82	[1134]	SELF     	R4 R4 K26 ; R5 := R4; R4 := R4[0x7c1a0374]
	83	[1134]	CALL     	R4 2 2 ; R4 := R4(R5)
	84	[1134]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0xb6df3e50]
	85	[1134]	LOADK    	R6 := 0.000000
	86	[1134]	CALL     	R4 3 1 ; R4(R5,R6)
	87	[1138]	TEST     	R0 1 ; if R0 then PC := 93
	88	[1138]	JMP      	93 ; PC := 93
	89	[1139]	GETUPVAL 	R4 U0 ; R4 := U0
	90	[1139]	GETTABLE 	R4 R4 K28 ; R4 := R4[0x659d451f]
	91	[1139]	GETGLOBAL	R5 K29 ; R5 := 0xb607efe1
	92	[1139]	CALL     	R4 2 1 ; R4(R5)
	93	[1141]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	94	[1141]	GETGLOBAL	R5 K30 ; R5 := mMenuLoop
	95	[1141]	CALL     	R4 2 2 ; R4 := R4(R5)
	96	[1141]	TEST     	R4 1 ; if R4 then PC := 102
	97	[1141]	JMP      	102 ; PC := 102
	98	[1142]	GETGLOBAL	R4 K30 ; R4 := mMenuLoop
	99	[1142]	SELF     	R4 R4 K31 ; R5 := R4; R4 := R4[0x6cf1e476]
	100	[1142]	OP_LOADBOOL	R6 1 0 ; R6 := true
	101	[1142]	CALL     	R4 3 1 ; R4(R5,R6)
	102	[1144]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	103	[1144]	GETGLOBAL	R5 K32 ; R5 := mMenuMusic
	104	[1144]	CALL     	R4 2 2 ; R4 := R4(R5)
	105	[1144]	TEST     	R4 1 ; if R4 then PC := 111
	106	[1144]	JMP      	111 ; PC := 111
	107	[1145]	GETGLOBAL	R4 K32 ; R4 := mMenuMusic
	108	[1145]	SELF     	R4 R4 K31 ; R5 := R4; R4 := R4[0x6cf1e476]
	109	[1145]	OP_LOADBOOL	R6 1 0 ; R6 := true
	110	[1145]	CALL     	R4 3 1 ; R4(R5,R6)
	111	[1148]	TEST     	R0 0 ; if not R0 then PC := 130
	112	[1148]	JMP      	130 ; PC := 130
	113	[1149]	GETUPVAL 	R4 U1 ; R4 := U1
	114	[1149]	GETTABLE 	R4 R4 K33 ; R4 := R4[0x9e3d3434]
	115	[1149]	OP_LOADBOOL	R5 0 0 ; R5 := false
	116	[1149]	CALL     	R4 2 1 ; R4(R5)
	117	[1151]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	118	[1151]	GETGLOBAL	R5 K12 ; R5 := _T
	119	[1151]	GETTABLE 	R5 R5 K34 ; R5 := R5["mTrigger"]
	120	[1151]	CALL     	R4 2 2 ; R4 := R4(R5)
	121	[1151]	TEST     	R4 1 ; if R4 then PC := 130
	122	[1151]	JMP      	130 ; PC := 130
	123	[1152]	GETGLOBAL	R4 K12 ; R4 := _T
	124	[1152]	GETTABLE 	R4 R4 K34 ; R4 := R4["mTrigger"]
	125	[1152]	SELF     	R4 R4 K35 ; R5 := R4; R4 := R4[0x8eb2112d]
	126	[1152]	LOADK    	R6 K36 ; R6 := "Close"
	127	[1152]	CALL     	R4 3 1 ; R4(R5,R6)
	128	[1153]	GETGLOBAL	R4 K12 ; R4 := _T
	129	[1153]	SETTABLE 	R4 K34 K37 ; R4["mTrigger"] := nil
	130	[1157]	OP_LOADBOOL	R4 1 0 ; R4 := true
	131	[1157]	SETGLOBALHASH	R4 K0 ; mCleanUpDone := R4
	132	[1158]	RETURN   	R0 1 ; return 

function #25 <?:1160,1206> (110 instructions, 440 bytes at 000002112B462BC0)
0 params, 6 slots, 2 upvalues, 0 locals, 31 constants, 0 functions
	1	[1161]	GETGLOBAL	R0 K0 ; R0 := mShuttingDown
	2	[1161]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[1161]	JMP      	5 ; PC := 5
	4	[1162]	RETURN   	R0 1 ; return 
	5	[1164]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[1164]	SETGLOBALHASH	R0 K0 ; mShuttingDown := R0
	7	[1166]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	8	[1166]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xc02f2cb8]
	9	[1166]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[1166]	CALL     	R0 3 1 ; R0(R1,R2)
	11	[1168]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[1168]	OP_LOADBOOL	R1 1 0 ; R1 := true
	13	[1168]	CALL     	R0 2 1 ; R0(R1)
	14	[1170]	GETGLOBAL	R0 K3 ; R0 := _T
	15	[1170]	SETTABLE 	R0 K4 K5 ; R0["gToolTip"] := nil
	16	[1171]	GETGLOBAL	R0 K3 ; R0 := _T
	17	[1171]	SETTABLE 	R0 K6 K5 ; R0["InfoPopup_Data"] := nil
	18	[1172]	GETGLOBAL	R0 K3 ; R0 := _T
	19	[1172]	SETTABLE 	R0 K7 K5 ; R0["InfoPopup_Grid"] := nil
	20	[1174]	GETGLOBAL	R0 K3 ; R0 := _T
	21	[1174]	GETTABLE 	R0 R0 K8 ; R0 := R0["DeferSquadCrewShipLoad"]
	22	[1174]	TEST     	R0 0 ; if not R0 then PC := 34
	23	[1174]	JMP      	34 ; PC := 34
	24	[1174]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	25	[1174]	GETGLOBAL	R1 K3 ; R1 := _T
	26	[1174]	GETTABLE 	R1 R1 K10 ; R1 := R1["DeferredSquadCrewShipLoadOut"]
	27	[1174]	CALL     	R0 2 2 ; R0 := R0(R1)
	28	[1174]	TEST     	R0 1 ; if R0 then PC := 34
	29	[1174]	JMP      	34 ; PC := 34
	30	[1175]	GETUPVAL 	R0 U1 ; R0 := U1
	31	[1175]	GETGLOBAL	R1 K3 ; R1 := _T
	32	[1175]	GETTABLE 	R1 R1 K10 ; R1 := R1["DeferredSquadCrewShipLoadOut"]
	33	[1175]	CALL     	R0 2 1 ; R0(R1)
	34	[1178]	GETGLOBAL	R0 K11 ; R0 := mHandleCanBeClosedCallback
	35	[1178]	EQ       	1 R0 K5 ; if R0 == nil then PC := 42
	36	[1178]	JMP      	42 ; PC := 42
	37	[1179]	GETGLOBAL	R0 K3 ; R0 := _T
	38	[1179]	GETGLOBAL	R1 K11 ; R1 := mHandleCanBeClosedCallback
	39	[1179]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	40	[1179]	OP_LOADBOOL	R1 1 0 ; R1 := true
	41	[1179]	CALL     	R0 2 1 ; R0(R1)
	42	[1182]	GETGLOBAL	R0 K3 ; R0 := _T
	43	[1182]	SETTABLE 	R0 K8 K5 ; R0["DeferSquadCrewShipLoad"] := nil
	44	[1183]	GETGLOBAL	R0 K3 ; R0 := _T
	45	[1183]	SETTABLE 	R0 K10 K5 ; R0["DeferredSquadCrewShipLoadOut"] := nil
	46	[1185]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	47	[1185]	GETGLOBAL	R1 K12 ; R1 := mShipSuit
	48	[1185]	CALL     	R0 2 2 ; R0 := R0(R1)
	49	[1185]	TEST     	R0 1 ; if R0 then PC := 63
	50	[1185]	JMP      	63 ; PC := 63
	51	[1185]	GETGLOBAL	R0 K13 ; R0 := mPrevShipName
	52	[1185]	EQ       	1 R0 K5 ; if R0 == nil then PC := 63
	53	[1185]	JMP      	63 ; PC := 63
	54	[1186]	GETGLOBAL	R0 K12 ; R0 := mShipSuit
	55	[1186]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x8e886a73]
	56	[1186]	GETGLOBAL	R2 K13 ; R2 := mPrevShipName
	57	[1186]	CALL     	R0 3 1 ; R0(R1,R2)
	58	[1187]	GETGLOBAL	R0 K15 ; R0 := 0x9ba7909f
	59	[1187]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x7e17ae26]
	60	[1187]	LOADK    	R2 K17 ; R2 := "UpdateRailjackText"
	61	[1187]	LOADK    	R3 K18 ; R3 := ""
	62	[1187]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	63	[1190]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	64	[1190]	GETGLOBAL	R1 K19 ; R1 := mInventoryGrid
	65	[1190]	CALL     	R0 2 2 ; R0 := R0(R1)
	66	[1190]	TEST     	R0 1 ; if R0 then PC := 89
	67	[1190]	JMP      	89 ; PC := 89
	68	[1191]	GETGLOBAL	R0 K19 ; R0 := mInventoryGrid
	69	[1191]	SELF     	R0 R0 K20 ; R1 := R0; R0 := R0[0xc32ccf2e]
	70	[1191]	CALL     	R0 2 2 ; R0 := R0(R1)
	71	[1192]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	72	[1192]	MOVE     	R2 R0 ; R2 := R0
	73	[1192]	CALL     	R1 2 2 ; R1 := R1(R2)
	74	[1192]	TEST     	R1 1 ; if R1 then PC := 89
	75	[1192]	JMP      	89 ; PC := 89
	76	[1192]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	77	[1192]	GETGLOBAL	R2 K21 ; R2 := 0x25d99d89
	78	[1192]	CALL     	R1 2 2 ; R1 := R1(R2)
	79	[1192]	TEST     	R1 1 ; if R1 then PC := 89
	80	[1192]	JMP      	89 ; PC := 89
	81	[1193]	GETGLOBAL	R1 K22 ; R1 := 0xae91e43b
	82	[1193]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0x492f9da2]
	83	[1193]	CALL     	R1 2 2 ; R1 := R1(R2)
	84	[1194]	GETGLOBAL	R2 K21 ; R2 := 0x25d99d89
	85	[1194]	SELF     	R2 R2 K24 ; R3 := R2; R2 := R2[0x7855ea52]
	86	[1194]	MOVE     	R4 R1 ; R4 := R1
	87	[1194]	MOVE     	R5 R0 ; R5 := R0
	88	[1194]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	89	[1198]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	90	[1198]	GETGLOBAL	R3 K3 ; R3 := _T
	91	[1198]	GETTABLE 	R3 R3 K25 ; R3 := R3["ClearSquadOverlayTitle"]
	92	[1198]	CALL     	R2 2 2 ; R2 := R2(R3)
	93	[1198]	TEST     	R2 1 ; if R2 then PC := 98
	94	[1198]	JMP      	98 ; PC := 98
	95	[1199]	GETGLOBAL	R2 K3 ; R2 := _T
	96	[1199]	GETTABLE 	R2 R2 K26 ; R2 := R2[0xfed37ac5]
	97	[1199]	CALL     	R2 1 1 ; R2()
	98	[1201]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	99	[1201]	GETGLOBAL	R3 K3 ; R3 := _T
	100	[1201]	GETTABLE 	R3 R3 K27 ; R3 := R3["ChangeHubVisCounter"]
	101	[1201]	CALL     	R2 2 2 ; R2 := R2(R3)
	102	[1201]	TEST     	R2 1 ; if R2 then PC := 108
	103	[1201]	JMP      	108 ; PC := 108
	104	[1202]	GETGLOBAL	R2 K3 ; R2 := _T
	105	[1202]	GETTABLE 	R2 R2 K28 ; R2 := R2[0x33cfa273]
	106	[1202]	LOADK    	R3 := -1.000000
	107	[1202]	CALL     	R2 2 1 ; R2(R3)
	108	[1205]	GETGLOBAL	R2 K3 ; R2 := _T
	109	[1205]	SETTABLE 	R2 K29 K30 ; R2["CustomizingCrewship"] := false
	110	[1206]	RETURN   	R0 1 ; return 

function #26 <?:1208,1236> (34 instructions, 136 bytes at 000002112B463230)
1 param, 10 slots, 5 upvalues, 0 locals, 10 constants, 1 function
	1	[1209]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[1209]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[1211]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[1211]	LOADNIL  	R2 R2 ; R2 := nil
	5	[1211]	MOVE     	R3 R0 ; R3 := R0
	6	[1211]	CALL     	R1 3 1 ; R1(R2,R3)
	7	[1213]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	8	[1213]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	9	[1213]	LOADK    	R3 K3 ; R3 := "_root"
	10	[1213]	LOADK    	R4 := 1.000000
	11	[1213]	NEWTABLE 	R5 1 0 ; R5 := {}
	12	[1213]	LOADK    	R6 := 10.000000
	13	[1213]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	14	[1213]	NEWTABLE 	R6 1 0 ; R6 := {}
	15	[1213]	LOADK    	R7 := 0.000000
	16	[1213]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	17	[1213]	LOADK    	R7 K5 ; R7 := 0.200000
	18	[1213]	LOADK    	R8 := 0.000000
	19	[1231]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	20	[1231]	GETUPVAL 	R0 U1 ; R0 := U1
	21	[1231]	GETUPVAL 	R0 U2 ; R0 := U2
	22	[1231]	GETUPVAL 	R0 U3 ; R0 := U3
	23	[1231]	GETUPVAL 	R0 U4 ; R0 := U4
	24	[1213]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	25	[1233]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	26	[1233]	GETGLOBAL	R2 K7 ; R2 := _T
	27	[1233]	GETTABLE 	R2 R2 K8 ; R2 := R2["SetSquadOverlayTitle"]
	28	[1233]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[1233]	TEST     	R1 1 ; if R1 then PC := 34
	30	[1233]	JMP      	34 ; PC := 34
	31	[1234]	GETGLOBAL	R1 K7 ; R1 := _T
	32	[1234]	GETTABLE 	R1 R1 K9 ; R1 := R1[0xdf29a9d6]
	33	[1234]	CALL     	R1 1 1 ; R1()
	34	[1236]	RETURN   	R0 1 ; return 

function #27 <?:1238,1240> (3 instructions, 12 bytes at 000002112B463920)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1239]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1239]	CALL     	R0 1 1 ; R0()
	3	[1240]	RETURN   	R0 1 ; return 

function #28 <?:1242,1263> (52 instructions, 208 bytes at 000002112B4639F0)
4 params, 9 slots, 5 upvalues, 0 locals, 11 constants, 0 functions
	1	[1243]	TEST     	R1 1 ; if R1 then PC := 5
	2	[1243]	JMP      	5 ; PC := 5
	3	[1244]	GETUPVAL 	R4 U0 ; R4 := U0
	4	[1244]	CALL     	R4 1 1 ; R4()
	5	[1246]	GETGLOBAL	R4 K0 ; R4 := mActiveState
	6	[1247]	GETUPVAL 	R5 U1 ; R5 := U1
	7	[1247]	GETGLOBAL	R6 K0 ; R6 := mActiveState
	8	[1247]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	9	[1248]	TEST     	R5 0 ; if not R5 then PC := 49
	10	[1248]	JMP      	49 ; PC := 49
	11	[1248]	TEST     	R2 1 ; if R2 then PC := 49
	12	[1248]	JMP      	49 ; PC := 49
	13	[1249]	TEST     	R1 1 ; if R1 then PC := 18
	14	[1249]	JMP      	18 ; PC := 18
	15	[1250]	GETGLOBAL	R6 K1 ; R6 := mCosmeticsList
	16	[1250]	SELF     	R6 R6 K2 ; R7 := R6; R6 := R6[0x09c8a77d]
	17	[1250]	CALL     	R6 2 1 ; R6(R7)
	18	[1252]	GETUPVAL 	R6 U2 ; R6 := U2
	19	[1252]	MOVE     	R7 R5 ; R7 := R5
	20	[1252]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[1252]	TEST     	R6 1 ; if R6 then PC := 24
	22	[1252]	JMP      	24 ; PC := 24
	23	[1253]	RETURN   	R0 1 ; return 
	24	[1255]	GETUPVAL 	R6 U3 ; R6 := U3
	25	[1255]	GETTABLE 	R6 R6 K3 ; R6 := R6["EQUIPMENT"]
	26	[1255]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 39
	27	[1255]	JMP      	39 ; PC := 39
	28	[1255]	GETUPVAL 	R6 U3 ; R6 := U3
	29	[1255]	GETTABLE 	R6 R6 K4 ; R6 := R6["EQUIP_INV"]
	30	[1255]	EQ       	1 R4 R6 ; if R4 == R6 then PC := 39
	31	[1255]	JMP      	39 ; PC := 39
	32	[1256]	GETGLOBAL	R6 K5 ; R6 := mCategories
	33	[1256]	SELF     	R6 R6 K6 ; R7 := R6; R6 := R6[0x070daa5a]
	34	[1256]	TESTSET  	R8 R0 1 ; if R0 then PC := 37 else R8 := R0 
	35	[1256]	JMP      	37 ; PC := 37
	36	[1256]	LOADK    	R8 := 1.000000
	37	[1256]	CALL     	R6 3 1 ; R6(R7,R8)
	38	[1256]	JMP      	48 ; PC := 48
	39	[1257]	GETGLOBAL	R6 K7 ; R6 := 0x7b998233
	40	[1257]	GETGLOBAL	R7 K8 ; R7 := _T
	41	[1257]	GETTABLE 	R7 R7 K9 ; R7 := R7["SetSquadOverlayTitle"]
	42	[1257]	CALL     	R6 2 2 ; R6 := R6(R7)
	43	[1257]	TEST     	R6 1 ; if R6 then PC := 48
	44	[1257]	JMP      	48 ; PC := 48
	45	[1258]	GETGLOBAL	R6 K8 ; R6 := _T
	46	[1258]	GETTABLE 	R6 R6 K10 ; R6 := R6[0xdf29a9d6]
	47	[1258]	CALL     	R6 1 1 ; R6()
	48	[1260]	RETURN   	R0 1 ; return 
	49	[1262]	GETUPVAL 	R6 U4 ; R6 := U4
	50	[1262]	MOVE     	R7 R3 ; R7 := R3
	51	[1262]	CALL     	R6 2 1 ; R6(R7)
	52	[1263]	RETURN   	R0 1 ; return 

function #29 <?:1265,1267> (11 instructions, 44 bytes at 000002112B463D00)
2 params, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1266]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1266]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	3	[1266]	MOVE     	R4 R0 ; R4 := R0
	4	[1266]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[1266]	LOADNIL  	R4 R4 ; R4 := nil
	6	[1266]	EQ       	1 R1 K1 ; if R1 == "true" then PC := 9
	7	[1266]	JMP      	9 ; PC := 9
	8	[1266]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 9
	9	[1266]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[1266]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[1267]	RETURN   	R0 1 ; return 

function #30 <?:1269,1279> (22 instructions, 88 bytes at 000002112B463E40)
0 params, 5 slots, 3 upvalues, 0 locals, 5 constants, 0 functions
	1	[1270]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1270]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[1270]	GETTABLE 	R1 R1 K2 ; R1 := R1["SetSquadOverlayTitle"]
	4	[1270]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1270]	TEST     	R0 1 ; if R0 then PC := 10
	6	[1270]	JMP      	10 ; PC := 10
	7	[1271]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[1271]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xdf29a9d6]
	9	[1271]	CALL     	R0 1 1 ; R0()
	10	[1274]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[1274]	GETGLOBAL	R1 K4 ; R1 := mActiveState
	12	[1274]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	13	[1275]	TEST     	R0 0 ; if not R0 then PC := 22
	14	[1275]	JMP      	22 ; PC := 22
	15	[1276]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[1276]	MOVE     	R2 R0 ; R2 := R0
	17	[1276]	LOADNIL  	R3 R3 ; R3 := nil
	18	[1276]	OP_LOADBOOL	R4 1 0 ; R4 := true
	19	[1276]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	20	[1277]	GETUPVAL 	R1 U2 ; R1 := U2
	21	[1277]	CALL     	R1 1 1 ; R1()
	22	[1279]	RETURN   	R0 1 ; return 

function #31 <?:1281,1294> (59 instructions, 236 bytes at 000002112B464010)
0 params, 10 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[1282]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1282]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x44537adf]
	3	[1282]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[1282]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	5	[1284]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[1284]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x91a24e4b]
	7	[1284]	LOADK    	R4 K3 ; R4 := "TopLeftContainer.Lines.Right"
	8	[1284]	LOADK    	R5 := 2.000000
	9	[1284]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1284]	TEST     	R2 1 ; if R2 then PC := 13
	11	[1284]	JMP      	13 ; PC := 13
	12	[1284]	LOADK    	R2 := 510.000000
	13	[1284]	ADD      	R2 R2 K4 ; R2 := R2 + 16.000000
	14	[1285]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	15	[1285]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x91a24e4b]
	16	[1285]	LOADK    	R5 K5 ; R5 := "TopRightContainer.Lines.Center"
	17	[1285]	LOADK    	R6 := 2.000000
	18	[1285]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[1285]	TEST     	R3 1 ; if R3 then PC := 22
	20	[1285]	JMP      	22 ; PC := 22
	21	[1285]	LOADK    	R3 K6 ; R3 := 1085.000000
	22	[1286]	SUB      	R4 R3 R2 ; R4 := R3 - R2
	23	[1287]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	24	[1287]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	25	[1287]	LOADK    	R7 K8 ; R7 := "TopRightContainer.Lines.Center.Left"
	26	[1287]	LOADK    	R8 := 0.000000
	27	[1287]	UNM      	R9 R4 ; R9 := ^ R4
	28	[1287]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	29	[1288]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	30	[1288]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	31	[1288]	LOADK    	R7 K9 ; R7 := "TopRightContainer.Lines.Center.Center"
	32	[1288]	LOADK    	R8 := 12.000000
	33	[1288]	MOVE     	R9 R4 ; R9 := R4
	34	[1288]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	35	[1290]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	36	[1290]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x091c120e]
	37	[1290]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[1290]	SUB      	R5 R0 R5 ; R5 := R0 - R5
	39	[1290]	ADD      	R4 R5 K11 ; R4 := R5 + 570.000000
	40	[1291]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	41	[1291]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	42	[1291]	LOADK    	R7 K12 ; R7 := "BottomRightContainer.Lines.Center.Left"
	43	[1291]	LOADK    	R8 := 0.000000
	44	[1291]	UNM      	R9 R4 ; R9 := ^ R4
	45	[1291]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	46	[1292]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	47	[1292]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	48	[1292]	LOADK    	R7 K13 ; R7 := "BottomRightContainer.Lines.Center.Center"
	49	[1292]	LOADK    	R8 := 12.000000
	50	[1292]	MOVE     	R9 R4 ; R9 := R4
	51	[1292]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	52	[1293]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	53	[1293]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	54	[1293]	LOADK    	R7 K14 ; R7 := "BottomRightContainer.Lines.Left"
	55	[1293]	LOADK    	R8 := 0.000000
	56	[1293]	UNM      	R9 R4 ; R9 := ^ R4
	57	[1293]	SUB      	R9 R9 K4 ; R9 := R9 - 16.000000
	58	[1293]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	59	[1294]	RETURN   	R0 1 ; return 

function #32 <?:1296,1342> (173 instructions, 692 bytes at 000002112B4645E0)
2 params, 16 slots, 4 upvalues, 0 locals, 46 constants, 1 function
	1	[1297]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1297]	GETGLOBAL	R3 K1 ; R3 := mAnchorMgr
	3	[1297]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1297]	TEST     	R2 1 ; if R2 then PC := 11
	5	[1297]	JMP      	11 ; PC := 11
	6	[1298]	GETGLOBAL	R2 K1 ; R2 := mAnchorMgr
	7	[1298]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xfaa69527]
	8	[1298]	MOVE     	R4 R0 ; R4 := R0
	9	[1298]	MOVE     	R5 R1 ; R5 := R1
	10	[1298]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[1300]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[1300]	CALL     	R2 1 1 ; R2()
	13	[1302]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	14	[1302]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x91a24e4b]
	15	[1302]	LOADK    	R4 K5 ; R4 := "TopLeftContainer.Inventory.ScrollBar"
	16	[1302]	LOADK    	R5 := 3.000000
	17	[1302]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	18	[1302]	TEST     	R2 1 ; if R2 then PC := 21
	19	[1302]	JMP      	21 ; PC := 21
	20	[1302]	LOADK    	R2 := 265.000000
	21	[1302]	SUB      	R2 R2 K6 ; R2 := R2 - 6.000000
	22	[1303]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	23	[1303]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x91a24e4b]
	24	[1303]	LOADK    	R5 K7 ; R5 := "BottomRightContainer"
	25	[1303]	LOADK    	R6 := 3.000000
	26	[1303]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	27	[1303]	TEST     	R3 1 ; if R3 then PC := 30
	28	[1303]	JMP      	30 ; PC := 30
	29	[1303]	LOADK    	R3 := 790.000000
	30	[1303]	SUB      	R3 R3 R2 ; R3 := R3 - R2
	31	[1304]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	32	[1304]	EQ       	1 R4 K9 ; if R4 == nil then PC := 54
	33	[1304]	JMP      	54 ; PC := 54
	34	[1305]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	35	[1305]	SETTABLE 	R4 K10 R3 ; R4["Height"] := R3
	36	[1306]	GETUPVAL 	R4 U1 ; R4 := U1
	37	[1306]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x27658fab]
	38	[1306]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	39	[1306]	GETGLOBAL	R6 K8 ; R6 := mInventoryGrid
	40	[1306]	CALL     	R4 3 1 ; R4(R5,R6)
	41	[1308]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	42	[1308]	GETTABLE 	R4 R4 K12 ; R4 := R4["mScrollBar"]
	43	[1308]	GETTABLE 	R4 R4 K13 ; R4 := R4["mSmoothScroll"]
	44	[1308]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0xd0f998cd]
	45	[1308]	LOADK    	R6 := 0.000000
	46	[1308]	CALL     	R4 3 1 ; R4(R5,R6)
	47	[1309]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	48	[1309]	GETTABLE 	R4 R4 K12 ; R4 := R4["mScrollBar"]
	49	[1309]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x425b8f0d]
	50	[1309]	ADD      	R6 R3 K16 ; R6 := R3 + 4.000000
	51	[1309]	LOADNIL  	R7 R7 ; R7 := nil
	52	[1309]	OP_LOADBOOL	R8 1 0 ; R8 := true
	53	[1309]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	54	[1312]	GETGLOBAL	R4 K17 ; R4 := mCosmeticsList
	55	[1312]	EQ       	1 R4 K9 ; if R4 == nil then PC := 122
	56	[1312]	JMP      	122 ; PC := 122
	57	[1313]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	58	[1313]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x91a24e4b]
	59	[1313]	LOADK    	R6 K18 ; R6 := "TopLeftContainer.Cosmetics.ItemSelectionPanel.ScrollBar"
	60	[1313]	LOADK    	R7 := 3.000000
	61	[1313]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	62	[1313]	TEST     	R4 1 ; if R4 then PC := 65
	63	[1313]	JMP      	65 ; PC := 65
	64	[1313]	LOADK    	R4 := 228.000000
	65	[1313]	SUB      	R4 R4 K6 ; R4 := R4 - 6.000000
	66	[1314]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	67	[1314]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x91a24e4b]
	68	[1314]	LOADK    	R7 K7 ; R7 := "BottomRightContainer"
	69	[1314]	LOADK    	R8 := 3.000000
	70	[1314]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	71	[1314]	TEST     	R5 1 ; if R5 then PC := 74
	72	[1314]	JMP      	74 ; PC := 74
	73	[1314]	LOADK    	R5 := 790.000000
	74	[1314]	SUB      	R5 R5 R4 ; R5 := R5 - R4
	75	[1315]	GETGLOBAL	R6 K17 ; R6 := mCosmeticsList
	76	[1315]	GETTABLE 	R6 R6 K19 ; R6 := R6["ItemSelectionGrid"]
	77	[1316]	SETTABLE 	R6 K10 R5 ; R6["Height"] := R5
	78	[1318]	GETUPVAL 	R7 U1 ; R7 := U1
	79	[1318]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x27658fab]
	80	[1318]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	81	[1318]	MOVE     	R9 R6 ; R9 := R6
	82	[1318]	CALL     	R7 3 1 ; R7(R8,R9)
	83	[1319]	GETTABLE 	R7 R6 K20 ; R7 := R6["mRowSeparation"]
	84	[1319]	GETTABLE 	R8 R6 K21 ; R8 := R6["mRows"]
	85	[1319]	MUL      	R7 R7 R8 ; R7 := R7 * R8
	86	[1319]	GETTABLE 	R8 R6 K22 ; R8 := R6["ElementDimBuffer"]
	87	[1319]	SUB      	R7 R7 R8 ; R7 := R7 - R8
	88	[1320]	SUB      	R8 R7 R5 ; R8 := R7 - R5
	89	[1320]	ADD      	R8 R8 K24 ; R8 := R8 + 8.000000
	90	[1320]	GETTABLE 	R9 R6 K20 ; R9 := R6["mRowSeparation"]
	91	[1320]	GETTABLE 	R10 R6 K22 ; R10 := R6["ElementDimBuffer"]
	92	[1320]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	93	[1320]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	94	[1320]	SETTABLE 	R6 K23 R8 ; R6["mExtraRowScroll"] := R8
	95	[1321]	GETTABLE 	R8 R6 K12 ; R8 := R6["mScrollBar"]
	96	[1321]	GETTABLE 	R8 R8 K13 ; R8 := R8["mSmoothScroll"]
	97	[1321]	SELF     	R8 R8 K14 ; R9 := R8; R8 := R8[0xd0f998cd]
	98	[1321]	LOADK    	R10 := 0.000000
	99	[1321]	CALL     	R8 3 1 ; R8(R9,R10)
	100	[1322]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	101	[1322]	MOVE     	R0 R5 ; R0 := R5
	102	[1322]	SETTABLE 	R6 K25 R8 ; R6["CalculateScrollBarHeight"] := R8
	103	[1323]	GETTABLE 	R8 R6 K12 ; R8 := R6["mScrollBar"]
	104	[1323]	SELF     	R8 R8 K15 ; R9 := R8; R8 := R8[0x425b8f0d]
	105	[1323]	ADD      	R10 R5 K16 ; R10 := R5 + 4.000000
	106	[1323]	LOADNIL  	R11 R11 ; R11 := nil
	107	[1323]	OP_LOADBOOL	R12 1 0 ; R12 := true
	108	[1323]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	109	[1325]	GETGLOBAL	R8 K26 ; R8 := mActiveState
	110	[1325]	GETUPVAL 	R9 U2 ; R9 := U2
	111	[1325]	GETTABLE 	R9 R9 K27 ; R9 := R9["SKIN_SELECTION"]
	112	[1325]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 119
	113	[1325]	JMP      	119 ; PC := 119
	114	[1325]	GETGLOBAL	R8 K26 ; R8 := mActiveState
	115	[1325]	GETUPVAL 	R9 U2 ; R9 := U2
	116	[1325]	GETTABLE 	R9 R9 K28 ; R9 := R9["ATTACHMENTS"]
	117	[1325]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 121
	118	[1325]	JMP      	121 ; PC := 121
	119	[1326]	MOVE     	R2 R4 ; R2 := R4
	120	[1327]	MOVE     	R3 R5 ; R3 := R5
	121	[1328]	CLOSE    	R4 ; SAVE R4,...
	122	[1331]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	123	[1331]	GETGLOBAL	R5 K29 ; R5 := mChildMovie
	124	[1331]	CALL     	R4 2 2 ; R4 := R4(R5)
	125	[1331]	TEST     	R4 0 ; if not R4 then PC := 173
	126	[1331]	JMP      	173 ; PC := 173
	127	[1332]	DIV      	R4 R3 K30 ; R4 := R3 / 2.000000
	128	[1332]	ADD      	R2 R2 R4 ; R2 := R2 + R4
	129	[1333]	GETUPVAL 	R4 U3 ; R4 := U3
	130	[1333]	GETTABLE 	R4 R4 K31 ; R4 := R4[0xe5e5a417]
	131	[1333]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	132	[1333]	MOVE     	R6 R2 ; R6 := R2
	133	[1333]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	134	[1334]	GETUPVAL 	R5 U3 ; R5 := U3
	135	[1334]	GETTABLE 	R5 R5 K32 ; R5 := R5[0xd718f59b]
	136	[1334]	GETGLOBAL	R6 K3 ; R6 := 0xae91e43b
	137	[1334]	MOVE     	R7 R3 ; R7 := R3
	138	[1334]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	139	[1335]	GETUPVAL 	R6 U3 ; R6 := U3
	140	[1335]	GETTABLE 	R6 R6 K33 ; R6 := R6[0x0db7934d]
	141	[1335]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	142	[1335]	LOADK    	R8 := 5.000000
	143	[1335]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	144	[1336]	GETGLOBAL	R7 K34 ; R7 := 0xcfc01047
	145	[1336]	NEWTABLE 	R8 5 0 ; R8 := {}
	146	[1336]	GETGLOBAL	R9 K35 ; R9 := 0x0f20c9bd
	147	[1336]	GETGLOBAL	R10 K36 ; R10 := 0x5b54ec72
	148	[1336]	GETGLOBAL	R11 K37 ; R11 := 0x09b6dacc
	149	[1336]	GETGLOBAL	R12 K38 ; R12 := 0x0032441c
	150	[1336]	GETTABLE 	R12 R12 K39 ; R12 := R12["UIMaterial_SalvageMaterials"]
	151	[1336]	GETTABLE 	R12 R12 K30 ; R12 := R12[2.000000]
	152	[1336]	GETGLOBAL	R13 K40 ; R13 := 0xbe447565
	153	[1336]	SETLIST  	R8 5 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 5
	154	[1336]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	155	[1336]	JMP      	171 ; PC := 171
	156	[1337]	SELF     	R12 R11 K41 ; R13 := R11; R12 := R11[0x830eea67]
	157	[1337]	GETGLOBAL	R14 K42 ; R14 := 0x6c97a788
	158	[1337]	GETTABLE 	R14 R14 K43 ; R14 := R14["VISIBILITY_CENTER"]
	159	[1337]	MOVE     	R15 R4 ; R15 := R4
	160	[1337]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	161	[1338]	SELF     	R12 R11 K41 ; R13 := R11; R12 := R11[0x830eea67]
	162	[1338]	GETGLOBAL	R14 K42 ; R14 := 0x6c97a788
	163	[1338]	GETTABLE 	R14 R14 K44 ; R14 := R14["VISIBILITY_SIZE"]
	164	[1338]	MOVE     	R15 R5 ; R15 := R5
	165	[1338]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	166	[1339]	SELF     	R12 R11 K41 ; R13 := R11; R12 := R11[0x830eea67]
	167	[1339]	GETGLOBAL	R14 K42 ; R14 := 0x6c97a788
	168	[1339]	GETTABLE 	R14 R14 K45 ; R14 := R14["VISIBILITY_FADE_SIZE"]
	169	[1339]	MOVE     	R15 R6 ; R15 := R6
	170	[1339]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	171	[1336]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 156; R9 := R10 end
	172	[1339]	JMP      	156 ; PC := 156
	173	[1342]	RETURN   	R0 1 ; return 

function #33 <?:1344,1395> (245 instructions, 980 bytes at 000002112B465100)
1 param, 13 slots, 4 upvalues, 0 locals, 55 constants, 4 functions
	1	[1345]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[1345]	SETGLOBALHASH	R1 K0 ; mButtons := R1
	3	[1347]	LOADNIL  	R1 R1 ; R1 := nil
	4	[1348]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	5	[1348]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[1348]	GETTABLE 	R3 R3 K2 ; R3 := R3["EQUIPMENT"]
	7	[1348]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 14
	8	[1348]	JMP      	14 ; PC := 14
	9	[1348]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	10	[1348]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[1348]	GETTABLE 	R3 R3 K3 ; R3 := R3["EQUIP_INV"]
	12	[1348]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 21
	13	[1348]	JMP      	21 ; PC := 21
	14	[1349]	GETUPVAL 	R2 U1 ; R2 := U1
	15	[1349]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	16	[1349]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	17	[1349]	LOADK    	R4 K6 ; R4 := "/Lotus/Language/RailjackHints/Components_"
	18	[1349]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	19	[1349]	MOVE     	R1 R2 ; R1 := R2
	20	[1349]	JMP      	81 ; PC := 81
	21	[1350]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	22	[1350]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[1350]	GETTABLE 	R3 R3 K7 ; R3 := R3["WEAPONS"]
	24	[1350]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 31
	25	[1350]	JMP      	31 ; PC := 31
	26	[1350]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	27	[1350]	GETUPVAL 	R3 U0 ; R3 := U0
	28	[1350]	GETTABLE 	R3 R3 K8 ; R3 := R3["WEAPON_INV"]
	29	[1350]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 38
	30	[1350]	JMP      	38 ; PC := 38
	31	[1351]	GETUPVAL 	R2 U1 ; R2 := U1
	32	[1351]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	33	[1351]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	34	[1351]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/RailjackHints/Armaments_"
	35	[1351]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	36	[1351]	MOVE     	R1 R2 ; R1 := R2
	37	[1351]	JMP      	81 ; PC := 81
	38	[1352]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	39	[1352]	GETUPVAL 	R3 U0 ; R3 := U0
	40	[1352]	GETTABLE 	R3 R3 K10 ; R3 := R3["RESOURCES"]
	41	[1352]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 50
	42	[1352]	JMP      	50 ; PC := 50
	43	[1353]	GETUPVAL 	R2 U1 ; R2 := U1
	44	[1353]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	45	[1353]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	46	[1353]	LOADK    	R4 K11 ; R4 := "/Lotus/Language/RailjackHints/Payload_"
	47	[1353]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	48	[1353]	MOVE     	R1 R2 ; R1 := R2
	49	[1353]	JMP      	81 ; PC := 81
	50	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	51	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	52	[1354]	GETTABLE 	R3 R3 K12 ; R3 := R3["COSMETICS"]
	53	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	54	[1354]	JMP      	75 ; PC := 75
	55	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	56	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	57	[1354]	GETTABLE 	R3 R3 K13 ; R3 := R3["ATTACHMENTS"]
	58	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	59	[1354]	JMP      	75 ; PC := 75
	60	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	61	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	62	[1354]	GETTABLE 	R3 R3 K14 ; R3 := R3["COLOR_PICKER"]
	63	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	64	[1354]	JMP      	75 ; PC := 75
	65	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	66	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	67	[1354]	GETTABLE 	R3 R3 K15 ; R3 := R3["RENAME_SHIP"]
	68	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	69	[1354]	JMP      	75 ; PC := 75
	70	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	71	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	72	[1354]	GETTABLE 	R3 R3 K16 ; R3 := R3["SKIN_SELECTION"]
	73	[1354]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 81
	74	[1354]	JMP      	81 ; PC := 81
	75	[1355]	GETUPVAL 	R2 U1 ; R2 := U1
	76	[1355]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	77	[1355]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	78	[1355]	LOADK    	R4 K17 ; R4 := "/Lotus/Language/RailjackHints/Cosmetics_"
	79	[1355]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	80	[1355]	MOVE     	R1 R2 ; R1 := R2
	81	[1357]	LEN      	R2 R1 ; R2 := # R1
	82	[1357]	LT       	0 K18 R2 ; if 0.000000 >= R2 then PC := 97
	83	[1357]	JMP      	97 ; PC := 97
	84	[1358]	GETGLOBAL	R2 K19 ; R2 := 0x33bdd652
	85	[1358]	GETTABLE 	R2 R2 K20 ; R2 := R2[0x23d5322f]
	86	[1358]	GETGLOBAL	R3 K0 ; R3 := mButtons
	87	[1358]	NEWTABLE 	R4 0 3 ; R4 := {}
	88	[1358]	GETGLOBAL	R5 K5 ; R5 := 0xae91e43b
	89	[1358]	SELF     	R5 R5 K22 ; R6 := R5; R5 := R5[0x42b04007]
	90	[1358]	LOADK    	R7 K23 ; R7 := "<WARNING>"
	91	[1358]	OP_LOADBOOL	R8 1 0 ; R8 := true
	92	[1358]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	93	[1358]	SETTABLE 	R4 K21 R5 ; R4["Label"] := R5
	94	[1358]	SETTABLE 	R4 K24 R1 ; R4["Tips"] := R1
	95	[1358]	SETTABLE 	R4 K25 K26 ; R4["Padding"] := -10.000000
	96	[1358]	CALL     	R2 3 1 ; R2(R3,R4)
	97	[1361]	OP_LOADBOOL	R2 0 0 ; R2 := false
	98	[1362]	GETGLOBAL	R3 K1 ; R3 := mActiveState
	99	[1362]	GETUPVAL 	R4 U0 ; R4 := U0
	100	[1362]	GETTABLE 	R4 R4 K12 ; R4 := R4["COSMETICS"]
	101	[1362]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 124
	102	[1362]	JMP      	124 ; PC := 124
	103	[1363]	LOADK    	R3 K27 ; R3 := "/Lotus/Language/Railjack/ToggleInterior"
	104	[1364]	GETGLOBAL	R4 K28 ; R4 := mInteriorCustomization
	105	[1364]	TEST     	R4 0 ; if not R4 then PC := 110
	106	[1364]	JMP      	110 ; PC := 110
	107	[1365]	MOVE     	R4 R3 ; R4 := R3
	108	[1365]	LOADK    	R5 K29 ; R5 := "Off"
	109	[1365]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	110	[1367]	GETGLOBAL	R4 K19 ; R4 := 0x33bdd652
	111	[1367]	GETTABLE 	R4 R4 K20 ; R4 := R4[0x23d5322f]
	112	[1367]	GETGLOBAL	R5 K0 ; R5 := mButtons
	113	[1367]	NEWTABLE 	R6 0 3 ; R6 := {}
	114	[1367]	SETTABLE 	R6 K21 R3 ; R6["Label"] := R3
	115	[1367]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	116	[1367]	SETTABLE 	R6 K30 R7 ; R6["CallBack"] := R7
	117	[1367]	SETTABLE 	R6 K31 K32 ; R6["CallOut"] := "MENU_LTRIGGER2"
	118	[1367]	CALL     	R4 3 1 ; R4(R5,R6)
	119	[1368]	GETGLOBAL	R4 K33 ; R4 := mCosmeticsList
	120	[1368]	SELF     	R4 R4 K34 ; R5 := R4; R4 := R4[0x1b34b1ec]
	121	[1368]	GETGLOBAL	R6 K0 ; R6 := mButtons
	122	[1368]	CALL     	R4 3 1 ; R4(R5,R6)
	123	[1368]	JMP      	204 ; PC := 204
	124	[1369]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	125	[1369]	GETUPVAL 	R5 U0 ; R5 := U0
	126	[1369]	GETTABLE 	R5 R5 K13 ; R5 := R5["ATTACHMENTS"]
	127	[1369]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 134
	128	[1369]	JMP      	134 ; PC := 134
	129	[1369]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	130	[1369]	GETUPVAL 	R5 U0 ; R5 := U0
	131	[1369]	GETTABLE 	R5 R5 K16 ; R5 := R5["SKIN_SELECTION"]
	132	[1369]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 139
	133	[1369]	JMP      	139 ; PC := 139
	134	[1370]	GETGLOBAL	R4 K33 ; R4 := mCosmeticsList
	135	[1370]	SELF     	R4 R4 K34 ; R5 := R4; R4 := R4[0x1b34b1ec]
	136	[1370]	GETGLOBAL	R6 K0 ; R6 := mButtons
	137	[1370]	CALL     	R4 3 1 ; R4(R5,R6)
	138	[1370]	JMP      	204 ; PC := 204
	139	[1371]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	140	[1371]	GETUPVAL 	R5 U0 ; R5 := U0
	141	[1371]	GETTABLE 	R5 R5 K8 ; R5 := R5["WEAPON_INV"]
	142	[1371]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 149
	143	[1371]	JMP      	149 ; PC := 149
	144	[1371]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	145	[1371]	GETUPVAL 	R5 U0 ; R5 := U0
	146	[1371]	GETTABLE 	R5 R5 K3 ; R5 := R5["EQUIP_INV"]
	147	[1371]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 173
	148	[1371]	JMP      	173 ; PC := 173
	149	[1372]	GETGLOBAL	R4 K35 ; R4 := mInventoryGrid
	150	[1372]	GETTABLE 	R4 R4 K36 ; R4 := R4["mSelectedElement"]
	151	[1373]	GETGLOBAL	R5 K37 ; R5 := 0x7b998233
	152	[1373]	MOVE     	R6 R4 ; R6 := R4
	153	[1373]	CALL     	R5 2 2 ; R5 := R5(R6)
	154	[1373]	NOT      	R5 R5 ; R5 := not R5
	155	[1374]	TEST     	R5 0 ; if not R5 then PC := 171
	156	[1374]	JMP      	171 ; PC := 171
	157	[1374]	GETTABLE 	R6 R4 K38 ; R6 := R4["SalvageState"]
	158	[1374]	GETUPVAL 	R7 U2 ; R7 := U2
	159	[1374]	GETTABLE 	R7 R7 K39 ; R7 := R7["OWNED"]
	160	[1374]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 171
	161	[1374]	JMP      	171 ; PC := 171
	162	[1375]	GETGLOBAL	R6 K19 ; R6 := 0x33bdd652
	163	[1375]	GETTABLE 	R6 R6 K20 ; R6 := R6[0x23d5322f]
	164	[1375]	GETGLOBAL	R7 K0 ; R7 := mButtons
	165	[1375]	NEWTABLE 	R8 0 3 ; R8 := {}
	166	[1375]	SETTABLE 	R8 K21 K40 ; R8["Label"] := "/Lotus/Language/Menu/ItemSelection_Equip"
	167	[1375]	CLOSURE  	R9 1 ; R9 := closure(Function #2)
	168	[1375]	SETTABLE 	R8 K30 R9 ; R8["CallBack"] := R9
	169	[1375]	SETTABLE 	R8 K31 K41 ; R8["CallOut"] := "MENU_SELECT"
	170	[1375]	CALL     	R6 3 1 ; R6(R7,R8)
	171	[1378]	MOVE     	R2 R5 ; R2 := R5
	172	[1378]	JMP      	204 ; PC := 204
	173	[1379]	GETGLOBAL	R6 K1 ; R6 := mActiveState
	174	[1379]	GETUPVAL 	R7 U0 ; R7 := U0
	175	[1379]	GETTABLE 	R7 R7 K7 ; R7 := R7["WEAPONS"]
	176	[1379]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 183
	177	[1379]	JMP      	183 ; PC := 183
	178	[1379]	GETGLOBAL	R6 K1 ; R6 := mActiveState
	179	[1379]	GETUPVAL 	R7 U0 ; R7 := U0
	180	[1379]	GETTABLE 	R7 R7 K2 ; R7 := R7["EQUIPMENT"]
	181	[1379]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 185
	182	[1379]	JMP      	185 ; PC := 185
	183	[1380]	OP_LOADBOOL	R2 1 0 ; R2 := true
	184	[1380]	JMP      	204 ; PC := 204
	185	[1381]	GETGLOBAL	R6 K1 ; R6 := mActiveState
	186	[1381]	GETUPVAL 	R7 U0 ; R7 := U0
	187	[1381]	GETTABLE 	R7 R7 K10 ; R7 := R7["RESOURCES"]
	188	[1381]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 204
	189	[1381]	JMP      	204 ; PC := 204
	190	[1382]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	191	[1382]	GETGLOBAL	R7 K42 ; R7 := mChildMovie
	192	[1382]	CALL     	R6 2 2 ; R6 := R6(R7)
	193	[1382]	TEST     	R6 1 ; if R6 then PC := 204
	194	[1382]	JMP      	204 ; PC := 204
	195	[1383]	GETGLOBAL	R6 K19 ; R6 := 0x33bdd652
	196	[1383]	GETTABLE 	R6 R6 K20 ; R6 := R6[0x23d5322f]
	197	[1383]	GETGLOBAL	R7 K0 ; R7 := mButtons
	198	[1383]	NEWTABLE 	R8 0 3 ; R8 := {}
	199	[1383]	SETTABLE 	R8 K21 K43 ; R8["Label"] := "/Lotus/Language/Railjack/Payload_ForgeAll"
	200	[1383]	CLOSURE  	R9 2 ; R9 := closure(Function #3)
	201	[1383]	SETTABLE 	R8 K30 R9 ; R8["CallBack"] := R9
	202	[1383]	SETTABLE 	R8 K31 K44 ; R8["CallOut"] := "MENU_GENERIC1"
	203	[1383]	CALL     	R6 3 1 ; R6(R7,R8)
	204	[1386]	GETGLOBAL	R6 K45 ; R6 := mStats
	205	[1386]	SELF     	R6 R6 K46 ; R7 := R6; R6 := R6[0x368ad758]
	206	[1386]	MOVE     	R8 R2 ; R8 := R2
	207	[1386]	CALL     	R6 3 1 ; R6(R7,R8)
	208	[1388]	GETUPVAL 	R6 U3 ; R6 := U3
	209	[1388]	GETGLOBAL	R7 K1 ; R7 := mActiveState
	210	[1388]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	211	[1388]	EQ       	0 R6 K47 ; if R6 ~= nil then PC := 214
	212	[1388]	JMP      	214 ; PC := 214
	213	[1388]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 214
	214	[1388]	OP_LOADBOOL	R6 1 0 ; R6 := true
	215	[1389]	TEST     	R6 0 ; if not R6 then PC := 220
	216	[1389]	JMP      	220 ; PC := 220
	217	[1389]	LOADK    	R7 K48 ; R7 := "/Lotus/Language/Menu/Global_Back"
	218	[1389]	TEST     	R7 1 ; if R7 then PC := 221
	219	[1389]	JMP      	221 ; PC := 221
	220	[1389]	LOADK    	R7 K49 ; R7 := "/Lotus/Language/Menu/Exit"
	221	[1390]	GETGLOBAL	R8 K19 ; R8 := 0x33bdd652
	222	[1390]	GETTABLE 	R8 R8 K20 ; R8 := R8[0x23d5322f]
	223	[1390]	GETGLOBAL	R9 K0 ; R9 := mButtons
	224	[1390]	NEWTABLE 	R10 0 3 ; R10 := {}
	225	[1390]	SETTABLE 	R10 K21 R7 ; R10["Label"] := R7
	226	[1390]	CLOSURE  	R11 3 ; R11 := closure(Function #4)
	227	[1390]	SETTABLE 	R10 K30 R11 ; R10["CallBack"] := R11
	228	[1390]	SETTABLE 	R10 K31 K50 ; R10["CallOut"] := "MENU_CANCEL"
	229	[1390]	CALL     	R8 3 1 ; R8(R9,R10)
	230	[1392]	GETGLOBAL	R8 K37 ; R8 := 0x7b998233
	231	[1392]	GETGLOBAL	R9 K51 ; R9 := _T
	232	[1392]	GETTABLE 	R9 R9 K52 ; R9 := R9["SetButtons"]
	233	[1392]	CALL     	R8 2 2 ; R8 := R8(R9)
	234	[1392]	TEST     	R8 1 ; if R8 then PC := 245
	235	[1392]	JMP      	245 ; PC := 245
	236	[1393]	GETGLOBAL	R8 K51 ; R8 := _T
	237	[1393]	GETTABLE 	R8 R8 K53 ; R8 := R8[0x1c5b546f]
	238	[1393]	GETGLOBAL	R9 K5 ; R9 := 0xae91e43b
	239	[1393]	GETGLOBAL	R10 K0 ; R10 := mButtons
	240	[1393]	GETGLOBAL	R11 K54 ; R11 := 0xcd0165a3
	241	[1393]	LOADK    	R12 := 1.000000
	242	[1393]	CALL     	R11 2 2 ; R11 := R11(R12)
	243	[1393]	MOVE     	R12 R0 ; R12 := R0
	244	[1393]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	245	[1395]	RETURN   	R0 1 ; return 

function #34 <?:1397,1399> (7 instructions, 28 bytes at 000002111FDE5470)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1398]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1398]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 5
	3	[1398]	JMP      	5 ; PC := 5
	4	[1398]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 5
	5	[1398]	OP_LOADBOOL	R2 1 0 ; R2 := true
	6	[1398]	CALL     	R1 2 1 ; R1(R2)
	7	[1399]	RETURN   	R0 1 ; return 

function #35 <?:1401,1427> (86 instructions, 344 bytes at 000002111FDE5580)
0 params, 19 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[1402]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1402]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[1402]	LOADK    	R2 K2 ; R2 := "TopLeftContainer.Inventory.Stats"
	4	[1402]	LOADK    	R3 := 11.000000
	5	[1402]	OP_LOADBOOL	R4 0 0 ; R4 := false
	6	[1402]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[1404]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[1404]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x9f57dd7d]
	9	[1404]	GETGLOBAL	R1 K4 ; R1 := mColors
	10	[1404]	GETTABLE 	R1 R1 K5 ; R1 := R1["FloatingContent"]
	11	[1404]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[1405]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[1405]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x9f57dd7d]
	14	[1405]	GETGLOBAL	R2 K4 ; R2 := mColors
	15	[1405]	GETTABLE 	R2 R2 K6 ; R2 := R2["FloatingContentHighlight"]
	16	[1405]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[1406]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	18	[1406]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x42b04007]
	19	[1406]	LOADK    	R4 K8 ; R4 := "<MASTERED>"
	20	[1406]	OP_LOADBOOL	R5 1 0 ; R5 := true
	21	[1406]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	22	[1408]	LOADK    	R3 := 100.000000
	23	[1409]	LOADK    	R4 := 100.000000
	24	[1410]	LOADK    	R5 := 100.000000
	25	[1412]	MOVE     	R6 R4 ; R6 := R4
	26	[1413]	LT       	0 K9 R3 ; if 0.000000 >= R3 then PC := 33
	27	[1413]	JMP      	33 ; PC := 33
	28	[1413]	EQ       	0 R4 R3 ; if R4 ~= R3 then PC := 33
	29	[1413]	JMP      	33 ; PC := 33
	30	[1414]	MOVE     	R7 R2 ; R7 := R2
	31	[1414]	MOVE     	R8 R6 ; R8 := R6
	32	[1414]	CONCAT   	R6 R7 R8 ; R6 := R7 .. R8
	33	[1416]	LOADK    	R7 K10 ; R7 := "<font color=\""
	34	[1416]	MOVE     	R8 R1 ; R8 := R1
	35	[1416]	LOADK    	R9 K11 ; R9 := "\">"
	36	[1416]	MOVE     	R10 R6 ; R10 := R6
	37	[1416]	LOADK    	R11 K12 ; R11 := "/"
	38	[1416]	MOVE     	R12 R3 ; R12 := R3
	39	[1416]	LOADK    	R13 K13 ; R13 := "</font>"
	40	[1416]	CONCAT   	R6 R7 R13 ; R6 := R7 .. R8 .. R9 .. R10 .. R11 .. R12 .. R13
	41	[1417]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	42	[1417]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x42b04007]
	43	[1417]	LOADK    	R9 K14 ; R9 := "/Lotus/Language/Menu/CollectedCount"
	44	[1417]	OP_LOADBOOL	R10 1 0 ; R10 := true
	45	[1417]	NEWTABLE 	R11 0 1 ; R11 := {}
	46	[1417]	SETTABLE 	R11 K15 R6 ; R11["COUNT"] := R6
	47	[1417]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	48	[1417]	MOVE     	R6 R7 ; R6 := R7
	49	[1419]	MOVE     	R7 R5 ; R7 := R5
	50	[1420]	LT       	0 K9 R3 ; if 0.000000 >= R3 then PC := 57
	51	[1420]	JMP      	57 ; PC := 57
	52	[1420]	EQ       	0 R5 R3 ; if R5 ~= R3 then PC := 57
	53	[1420]	JMP      	57 ; PC := 57
	54	[1421]	MOVE     	R8 R2 ; R8 := R2
	55	[1421]	MOVE     	R9 R7 ; R9 := R7
	56	[1421]	CONCAT   	R7 R8 R9 ; R7 := R8 .. R9
	57	[1423]	LOADK    	R8 K10 ; R8 := "<font color=\""
	58	[1423]	MOVE     	R9 R1 ; R9 := R1
	59	[1423]	LOADK    	R10 K11 ; R10 := "\">"
	60	[1423]	MOVE     	R11 R7 ; R11 := R7
	61	[1423]	LOADK    	R12 K12 ; R12 := "/"
	62	[1423]	MOVE     	R13 R3 ; R13 := R3
	63	[1423]	LOADK    	R14 K13 ; R14 := "</font>"
	64	[1423]	CONCAT   	R7 R8 R14 ; R7 := R8 .. R9 .. R10 .. R11 .. R12 .. R13 .. R14
	65	[1424]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	66	[1424]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x42b04007]
	67	[1424]	LOADK    	R10 K16 ; R10 := "/Lotus/Language/Menu/MasteredCount"
	68	[1424]	OP_LOADBOOL	R11 1 0 ; R11 := true
	69	[1424]	NEWTABLE 	R12 0 1 ; R12 := {}
	70	[1424]	SETTABLE 	R12 K15 R7 ; R12["COUNT"] := R7
	71	[1424]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	72	[1424]	MOVE     	R7 R8 ; R7 := R8
	73	[1426]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	74	[1426]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0x5f56eeab]
	75	[1426]	LOADK    	R10 K2 ; R10 := "TopLeftContainer.Inventory.Stats"
	76	[1426]	LOADK    	R11 := 29.000000
	77	[1426]	LOADK    	R12 K18 ; R12 := "<p><font color=\""
	78	[1426]	MOVE     	R13 R0 ; R13 := R0
	79	[1426]	LOADK    	R14 K11 ; R14 := "\">"
	80	[1426]	MOVE     	R15 R6 ; R15 := R6
	81	[1426]	LOADK    	R16 K19 ; R16 := "<br>"
	82	[1426]	MOVE     	R17 R7 ; R17 := R7
	83	[1426]	LOADK    	R18 K20 ; R18 := "</font></p>"
	84	[1426]	CONCAT   	R12 R12 R18 ; R12 := R12 .. R13 .. R14 .. R15 .. R16 .. R17 .. R18
	85	[1426]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	86	[1427]	RETURN   	R0 1 ; return 

function #36 <?:1429,1621> (76 instructions, 304 bytes at 000002111FDE5AF0)
4 params, 22 slots, 4 upvalues, 0 locals, 12 constants, 6 functions
	1	[1432]	NEWTABLE 	R4 0 0 ; R4 := {}
	2	[1433]	LOADK    	R5 := 1.000000
	3	[1433]	GETTABLE 	R6 R0 K0 ; R6 := R0["mElements"]
	4	[1433]	LEN      	R6 R6 ; R6 := # R6
	5	[1433]	LOADK    	R7 := 1.000000
	6	[1433]	FORPREP  	R5 25 ; R5 -= R7; PC := 25
	7	[1434]	GETTABLE 	R9 R0 K0 ; R9 := R0["mElements"]
	8	[1434]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	9	[1435]	GETTABLE 	R10 R9 K1 ; R10 := R9["ItemType"]
	10	[1435]	EQ       	1 R10 K2 ; if R10 == nil then PC := 23
	11	[1435]	JMP      	23 ; PC := 23
	12	[1436]	NEWTABLE 	R10 0 2 ; R10 := {}
	13	[1436]	GETTABLE 	R11 R0 K0 ; R11 := R0["mElements"]
	14	[1436]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	15	[1436]	GETTABLE 	R11 R11 K4 ; R11 := R11["UID"]
	16	[1436]	SETTABLE 	R10 K3 R11 ; R10[0x8f89d633] := R11
	17	[1436]	GETTABLE 	R11 R9 K1 ; R11 := R9["ItemType"]
	18	[1436]	SELF     	R11 R11 K5 ; R12 := R11; R11 := R11[0xed4e0128]
	19	[1436]	CALL     	R11 2 2 ; R11 := R11(R12)
	20	[1436]	SETTABLE 	R10 K1 R11 ; R10["ItemType"] := R11
	21	[1436]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	22	[1436]	JMP      	25 ; PC := 25
	23	[1438]	NEWTABLE 	R10 0 0 ; R10 := {}
	24	[1438]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	25	[1433]	FORLOOP  	R5 7 ; R5 += R7; if R5 <= R6 then begin PC := 7; R8 := R5 end
	26	[1456]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	27	[1456]	MOVE     	R0 R4 ; R0 := R4
	28	[1458]	GETTABLE 	R11 R1 K6 ; R11 := R1["mSlot"]
	29	[1467]	CLOSURE  	R12 1 ; R12 := closure(Function #2)
	30	[1467]	MOVE     	R0 R11 ; R0 := R11
	31	[1477]	CLOSURE  	R13 2 ; R13 := closure(Function #3)
	32	[1481]	CLOSURE  	R14 3 ; R14 := closure(Function #4)
	33	[1483]	NEWTABLE 	R15 0 0 ; R15 := {}
	34	[1488]	CLOSURE  	R16 4 ; R16 := closure(Function #5)
	35	[1488]	MOVE     	R0 R12 ; R0 := R12
	36	[1488]	MOVE     	R0 R13 ; R0 := R13
	37	[1488]	MOVE     	R0 R15 ; R0 := R15
	38	[1490]	GETTABLE 	R17 R1 K7 ; R17 := R1["mProductCategory"]
	39	[1490]	TEST     	R17 1 ; if R17 then PC := 42
	40	[1490]	JMP      	42 ; PC := 42
	41	[1490]	GETTABLE 	R17 R0 K7 ; R17 := R0["mProductCategory"]
	42	[1605]	CLOSURE  	R18 5 ; R18 := closure(Function #6)
	43	[1605]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[1605]	GETUPVAL 	R0 U1 ; R0 := U1
	45	[1605]	MOVE     	R0 R1 ; R0 := R1
	46	[1605]	MOVE     	R0 R17 ; R0 := R17
	47	[1605]	GETUPVAL 	R0 U2 ; R0 := U2
	48	[1605]	GETUPVAL 	R0 U3 ; R0 := U3
	49	[1605]	MOVE     	R0 R15 ; R0 := R15
	50	[1605]	MOVE     	R0 R14 ; R0 := R14
	51	[1605]	MOVE     	R0 R10 ; R0 := R10
	52	[1605]	MOVE     	R0 R0 ; R0 := R0
	53	[1605]	MOVE     	R0 R16 ; R0 := R16
	54	[1607]	MOVE     	R19 R18 ; R19 := R18
	55	[1607]	GETTABLE 	R20 R1 K8 ; R20 := R1["OwnedItems"]
	56	[1607]	CALL     	R19 2 1 ; R19(R20)
	57	[1609]	TEST     	R2 1 ; if R2 then PC := 69
	58	[1609]	JMP      	69 ; PC := 69
	59	[1610]	MOVE     	R19 R18 ; R19 := R18
	60	[1610]	GETTABLE 	R20 R1 K9 ; R20 := R1["SalvageItems"]
	61	[1610]	OP_LOADBOOL	R21 1 0 ; R21 := true
	62	[1610]	CALL     	R19 3 1 ; R19(R20,R21)
	63	[1611]	TEST     	R3 1 ; if R3 then PC := 69
	64	[1611]	JMP      	69 ; PC := 69
	65	[1612]	MOVE     	R19 R18 ; R19 := R18
	66	[1612]	GETTABLE 	R20 R1 K10 ; R20 := R1["RawSalvageItems"]
	67	[1612]	OP_LOADBOOL	R21 1 0 ; R21 := true
	68	[1612]	CALL     	R19 3 1 ; R19(R20,R21)
	69	[1616]	GETTABLE 	R19 R1 K11 ; R19 := R1["AlwaysAvailableItems"]
	70	[1616]	EQ       	1 R19 K2 ; if R19 == nil then PC := 75
	71	[1616]	JMP      	75 ; PC := 75
	72	[1617]	MOVE     	R19 R18 ; R19 := R18
	73	[1617]	GETTABLE 	R20 R1 K11 ; R20 := R1["AlwaysAvailableItems"]
	74	[1617]	CALL     	R19 2 1 ; R19(R20)
	75	[1620]	RETURN   	R15 2 ; return R15 
	76	[1621]	RETURN   	R0 1 ; return 

function #37 <?:1623,1655> (107 instructions, 428 bytes at 000002111FDE7A90)
1 param, 24 slots, 3 upvalues, 0 locals, 27 constants, 0 functions
	1	[1624]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[1625]	GETGLOBAL	R2 K0 ; R2 := 0x25d99d89
	3	[1625]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x25a6e75e]
	4	[1625]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[1625]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xd8dfa041]
	6	[1625]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[1626]	LOADK    	R3 := 1.000000
	8	[1626]	LEN      	R4 R2 ; R4 := # R2
	9	[1626]	LOADK    	R5 := 1.000000
	10	[1626]	FORPREP  	R3 28 ; R3 -= R5; PC := 28
	11	[1627]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	12	[1627]	GETTABLE 	R7 R7 K3 ; R7 := R7["mItemType"]
	13	[1628]	GETGLOBAL	R8 K4 ; R8 := 0x7b998233
	14	[1628]	MOVE     	R9 R7 ; R9 := R7
	15	[1628]	CALL     	R8 2 2 ; R8 := R8(R9)
	16	[1628]	TEST     	R8 1 ; if R8 then PC := 28
	17	[1628]	JMP      	28 ; PC := 28
	18	[1628]	SELF     	R8 R7 K5 ; R9 := R7; R8 := R7[0xf2deaf69]
	19	[1628]	GETGLOBAL	R10 K6 ; R10 := gAvatarImageItemType
	20	[1628]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	21	[1628]	TEST     	R8 0 ; if not R8 then PC := 28
	22	[1628]	JMP      	28 ; PC := 28
	23	[1629]	GETGLOBAL	R8 K7 ; R8 := 0x33bdd652
	24	[1629]	GETTABLE 	R8 R8 K8 ; R8 := R8[0x23d5322f]
	25	[1629]	MOVE     	R9 R1 ; R9 := R1
	26	[1629]	MOVE     	R10 R7 ; R10 := R7
	27	[1629]	CALL     	R8 3 1 ; R8(R9,R10)
	28	[1626]	FORLOOP  	R3 11 ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
	29	[1633]	NEWTABLE 	R8 0 0 ; R8 := {}
	30	[1634]	OP_LOADBOOL	R9 0 0 ; R9 := false
	31	[1635]	GETUPVAL 	R10 U0 ; R10 := U0
	32	[1635]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0xe9cbffa8]
	33	[1635]	GETGLOBAL	R12 K6 ; R12 := gAvatarImageItemType
	34	[1635]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	35	[1636]	LOADK    	R11 := 1.000000
	36	[1636]	LEN      	R12 R10 ; R12 := # R10
	37	[1636]	LOADK    	R13 := 1.000000
	38	[1636]	FORPREP  	R11 105 ; R11 -= R13; PC := 105
	39	[1637]	GETGLOBAL	R15 K10 ; R15 := 0xce225efa
	40	[1637]	LOADK    	R16 := 0.000000
	41	[1637]	CALL     	R15 2 1 ; R15(R16)
	42	[1638]	GETTABLE 	R15 R10 R14 ; R15 := R10[R14]
	43	[1639]	GETGLOBAL	R16 K4 ; R16 := 0x7b998233
	44	[1639]	MOVE     	R17 R15 ; R17 := R15
	45	[1639]	CALL     	R16 2 2 ; R16 := R16(R17)
	46	[1639]	TEST     	R16 1 ; if R16 then PC := 105
	47	[1639]	JMP      	105 ; PC := 105
	48	[1640]	SELF     	R16 R15 K11 ; R17 := R15; R16 := R15[0xf278f8a1]
	49	[1640]	CALL     	R16 2 2 ; R16 := R16(R17)
	50	[1641]	GETGLOBAL	R17 K12 ; R17 := 0x60cce7b4
	51	[1641]	GETGLOBAL	R18 K4 ; R18 := 0x7b998233
	52	[1641]	MOVE     	R19 R16 ; R19 := R16
	53	[1641]	CALL     	R18 2 2 ; R18 := R18(R19)
	54	[1641]	TEST     	R18 1 ; if R18 then PC := 60
	55	[1641]	JMP      	60 ; PC := 60
	56	[1641]	SELF     	R18 R16 K5 ; R19 := R16; R18 := R16[0xf2deaf69]
	57	[1641]	GETGLOBAL	R20 K6 ; R20 := gAvatarImageItemType
	58	[1641]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	59	[1641]	JMP      	62 ; PC := 62
	60	[1641]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 61
	61	[1641]	OP_LOADBOOL	R18 1 0 ; R18 := true
	62	[1641]	CALL     	R17 2 1 ; R17(R18)
	63	[1642]	GETUPVAL 	R17 U1 ; R17 := U1
	64	[1642]	GETTABLE 	R17 R17 K13 ; R17 := R17[0xcf49d84c]
	65	[1642]	MOVE     	R18 R1 ; R18 := R1
	66	[1642]	MOVE     	R19 R16 ; R19 := R16
	67	[1642]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	68	[1642]	TESTSET  	R9 R17 1 ; if R17 then PC := 73 else R9 := R17 
	69	[1642]	JMP      	73 ; PC := 73
	70	[1642]	SELF     	R17 R15 K14 ; R18 := R15; R17 := R15[0x31e559d2]
	71	[1642]	CALL     	R17 2 2 ; R17 := R17(R18)
	72	[1642]	MOVE     	R9 R17 ; R9 := R17
	73	[1643]	TEST     	R9 1 ; if R9 then PC := 79
	74	[1643]	JMP      	79 ; PC := 79
	75	[1643]	SELF     	R17 R15 K15 ; R18 := R15; R17 := R15[0xc055cef8]
	76	[1643]	CALL     	R17 2 2 ; R17 := R17(R18)
	77	[1643]	TEST     	R17 0 ; if not R17 then PC := 105
	78	[1643]	JMP      	105 ; PC := 105
	79	[1644]	GETUPVAL 	R17 U2 ; R17 := U2
	80	[1644]	GETTABLE 	R17 R17 K16 ; R17 := R17[0x08681f50]
	81	[1644]	GETGLOBAL	R18 K17 ; R18 := 0xae91e43b
	82	[1644]	MOVE     	R19 R15 ; R19 := R15
	83	[1644]	NEWTABLE 	R20 0 1 ; R20 := {}
	84	[1644]	GETGLOBAL	R21 K0 ; R21 := 0x25d99d89
	85	[1644]	SETTABLE 	R20 K18 R21 ; R20["GameData"] := R21
	86	[1644]	LOADNIL  	R21 R22 ; R21 := R22 := nil
	87	[1644]	OP_LOADBOOL	R23 1 0 ; R23 := true
	88	[1644]	CALL     	R17 7 2 ; R17 := R17(R18,R19,R20,R21,R22,R23)
	89	[1645]	SETTABLE 	R17 K19 K20 ; R17["Themed"] := true
	90	[1646]	SETTABLE 	R17 K21 R9 ; R17["Owned"] := R9
	91	[1647]	SETTABLE 	R17 K22 R9 ; R17["mPurchased"] := R9
	92	[1648]	GETUPVAL 	R18 U1 ; R18 := U1
	93	[1648]	GETTABLE 	R18 R18 K24 ; R18 := R18[0x06d055f9]
	94	[1648]	GETTABLE 	R19 R17 K21 ; R19 := R17["Owned"]
	95	[1648]	LOADK    	R20 := 1.000000
	96	[1648]	LOADK    	R21 := 0.000000
	97	[1648]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	98	[1648]	SETTABLE 	R17 K23 R18 ; R17[0x000006cd] := R18
	99	[1649]	SETTABLE 	R17 K25 K26 ; R17["HideCountThreshold"] := 0.000000
	100	[1650]	GETGLOBAL	R18 K7 ; R18 := 0x33bdd652
	101	[1650]	GETTABLE 	R18 R18 K8 ; R18 := R18[0x23d5322f]
	102	[1650]	MOVE     	R19 R8 ; R19 := R8
	103	[1650]	MOVE     	R20 R17 ; R20 := R17
	104	[1650]	CALL     	R18 3 1 ; R18(R19,R20)
	105	[1636]	FORLOOP  	R11 39 ; R11 += R13; if R11 <= R12 then begin PC := 39; R14 := R11 end
	106	[1654]	RETURN   	R8 2 ; return R8 
	107	[1655]	RETURN   	R0 1 ; return 

function #38 <?:1657,1705> (126 instructions, 504 bytes at 000002111FDE8060)
1 param, 26 slots, 3 upvalues, 0 locals, 37 constants, 0 functions
	1	[1658]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1658]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1658]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1658]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1658]	JMP      	8 ; PC := 8
	6	[1659]	NEWTABLE 	R1 0 0 ; R1 := {}
	7	[1659]	RETURN   	R1 2 ; return R1 
	8	[1662]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[1663]	GETGLOBAL	R2 K1 ; R2 := 0x7ed0a956
	10	[1663]	LOADK    	R3 K2 ; R3 := "/Lotus/Types/Game/CrewShipCustomization"
	11	[1663]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1664]	GETGLOBAL	R3 K3 ; R3 := 0xb009bbc6
	13	[1664]	LOADK    	R4 K4 ; R4 := "/Lotus/Types/Game/CrewShip/Ships/RailJack"
	14	[1664]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[1665]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0x0911ae7c]
	16	[1665]	MOVE     	R6 R0 ; R6 := R0
	17	[1665]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	18	[1667]	GETUPVAL 	R5 U0 ; R5 := U0
	19	[1667]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0xe39b2ba1]
	20	[1667]	MOVE     	R7 R2 ; R7 := R2
	21	[1667]	MOVE     	R8 R3 ; R8 := R3
	22	[1667]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	23	[1668]	GETGLOBAL	R6 K7 ; R6 := 0x25d99d89
	24	[1668]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x25a6e75e]
	25	[1668]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[1668]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0xe9131614]
	27	[1668]	CALL     	R6 2 2 ; R6 := R6(R7)
	28	[1669]	LOADK    	R7 := 1.000000
	29	[1669]	LEN      	R8 R5 ; R8 := # R5
	30	[1669]	LOADK    	R9 := 1.000000
	31	[1669]	FORPREP  	R7 124 ; R7 -= R9; PC := 124
	32	[1670]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	33	[1671]	SELF     	R12 R11 K10 ; R13 := R11; R12 := R11[0x06e65678]
	34	[1671]	MOVE     	R14 R0 ; R14 := R0
	35	[1671]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	36	[1671]	TEST     	R12 0 ; if not R12 then PC := 124
	37	[1671]	JMP      	124 ; PC := 124
	38	[1672]	SELF     	R12 R11 K11 ; R13 := R11; R12 := R11[0xf278f8a1]
	39	[1672]	CALL     	R12 2 2 ; R12 := R12(R13)
	40	[1673]	LOADNIL  	R13 R13 ; R13 := nil
	41	[1674]	GETGLOBAL	R14 K12 ; R14 := 0xcfc01047
	42	[1674]	MOVE     	R15 R6 ; R15 := R6
	43	[1674]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	44	[1674]	JMP      	50 ; PC := 50
	45	[1675]	GETTABLE 	R19 R18 K13 ; R19 := R18["mItemType"]
	46	[1675]	EQ       	0 R19 R12 ; if R19 ~= R12 then PC := 50
	47	[1675]	JMP      	50 ; PC := 50
	48	[1676]	MOVE     	R13 R18 ; R13 := R18
	49	[1678]	JMP      	52 ; PC := 52
	50	[1674]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 45; R16 := R17 end
	51	[1679]	JMP      	45 ; PC := 45
	52	[1681]	GETUPVAL 	R19 U1 ; R19 := U1
	53	[1681]	GETTABLE 	R19 R19 K14 ; R19 := R19[0x08681f50]
	54	[1681]	GETGLOBAL	R20 K15 ; R20 := 0xae91e43b
	55	[1681]	MOVE     	R21 R11 ; R21 := R11
	56	[1681]	NEWTABLE 	R22 0 2 ; R22 := {}
	57	[1681]	GETGLOBAL	R23 K7 ; R23 := 0x25d99d89
	58	[1681]	SETTABLE 	R22 K16 R23 ; R22["GameData"] := R23
	59	[1681]	SETTABLE 	R22 K17 R13 ; R22["ItemInfo"] := R13
	60	[1681]	LOADNIL  	R23 R24 ; R23 := R24 := nil
	61	[1681]	OP_LOADBOOL	R25 1 0 ; R25 := true
	62	[1681]	CALL     	R19 7 2 ; R19 := R19(R20,R21,R22,R23,R24,R25)
	63	[1682]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	64	[1682]	GETTABLE 	R21 R19 K18 ; R21 := R19["StoreItem"]
	65	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	66	[1682]	TEST     	R20 1 ; if R20 then PC := 124
	67	[1682]	JMP      	124 ; PC := 124
	68	[1682]	GETTABLE 	R20 R19 K18 ; R20 := R19["StoreItem"]
	69	[1682]	SELF     	R20 R20 K19 ; R21 := R20; R20 := R20[0xc055cef8]
	70	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	71	[1682]	TEST     	R20 1 ; if R20 then PC := 83
	72	[1682]	JMP      	83 ; PC := 83
	73	[1682]	GETTABLE 	R20 R19 K18 ; R20 := R19["StoreItem"]
	74	[1682]	SELF     	R20 R20 K20 ; R21 := R20; R20 := R20[0x31e559d2]
	75	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	76	[1682]	TEST     	R20 1 ; if R20 then PC := 83
	77	[1682]	JMP      	83 ; PC := 83
	78	[1682]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	79	[1682]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	80	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	81	[1682]	TEST     	R20 1 ; if R20 then PC := 124
	82	[1682]	JMP      	124 ; PC := 124
	83	[1683]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	84	[1683]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	85	[1683]	CALL     	R20 2 2 ; R20 := R20(R21)
	86	[1683]	TEST     	R20 1 ; if R20 then PC := 101
	87	[1683]	JMP      	101 ; PC := 101
	88	[1684]	SETTABLE 	R19 K22 K23 ; R19["Owned"] := true
	89	[1685]	SETTABLE 	R19 K24 K23 ; R19["mPurchased"] := true
	90	[1686]	NEWTABLE 	R20 0 1 ; R20 := {}
	91	[1686]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	92	[1686]	GETTABLE 	R21 R21 K27 ; R21 := R21["mItemId"]
	93	[1686]	GETTABLE 	R21 R21 K28 ; R21 := R21["mId"]
	94	[1686]	SETTABLE 	R20 K26 R21 ; R20["UID"] := R21
	95	[1686]	SETTABLE 	R19 K25 R20 ; R19["mPurchasedInfo"] := R20
	96	[1687]	NEWTABLE 	R20 0 1 ; R20 := {}
	97	[1687]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	98	[1687]	SETTABLE 	R20 K29 R21 ; R20["Item"] := R21
	99	[1687]	SETTABLE 	R19 K21 R20 ; R19["RawItem"] := R20
	100	[1687]	JMP      	108 ; PC := 108
	101	[1688]	GETTABLE 	R20 R19 K18 ; R20 := R19["StoreItem"]
	102	[1688]	SELF     	R20 R20 K20 ; R21 := R20; R20 := R20[0x31e559d2]
	103	[1688]	CALL     	R20 2 2 ; R20 := R20(R21)
	104	[1688]	TEST     	R20 0 ; if not R20 then PC := 108
	105	[1688]	JMP      	108 ; PC := 108
	106	[1689]	SETTABLE 	R19 K22 K23 ; R19["Owned"] := true
	107	[1690]	SETTABLE 	R19 K24 K23 ; R19["mPurchased"] := true
	108	[1692]	GETUPVAL 	R20 U2 ; R20 := U2
	109	[1692]	GETTABLE 	R20 R20 K31 ; R20 := R20[0x06d055f9]
	110	[1692]	GETTABLE 	R21 R19 K22 ; R21 := R19["Owned"]
	111	[1692]	LOADK    	R22 := 1.000000
	112	[1692]	LOADK    	R23 := 0.000000
	113	[1692]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	114	[1692]	SETTABLE 	R19 K30 R20 ; R19["Count"] := R20
	115	[1693]	SETTABLE 	R19 K32 K33 ; R19["HideCountThreshold"] := 0.000000
	116	[1695]	EQ       	0 R12 R4 ; if R12 ~= R4 then PC := 119
	117	[1695]	JMP      	119 ; PC := 119
	118	[1696]	SETTABLE 	R19 K34 K23 ; R19["IsNone"] := true
	119	[1699]	GETGLOBAL	R20 K35 ; R20 := 0x33bdd652
	120	[1699]	GETTABLE 	R20 R20 K36 ; R20 := R20[0x23d5322f]
	121	[1699]	MOVE     	R21 R1 ; R21 := R1
	122	[1699]	MOVE     	R22 R19 ; R22 := R19
	123	[1699]	CALL     	R20 3 1 ; R20(R21,R22)
	124	[1669]	FORLOOP  	R7 32 ; R7 += R9; if R7 <= R8 then begin PC := 32; R10 := R7 end
	125	[1704]	RETURN   	R1 2 ; return R1 
	126	[1705]	RETURN   	R0 1 ; return 

function #39 <?:1707,1723> (39 instructions, 156 bytes at 000002111FDE8770)
1 param, 5 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[1708]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[1709]	SETTABLE 	R0 K0 K1 ; R0["Tier"] := nil
	3	[1710]	SETTABLE 	R0 K2 K1 ; R0["Brand"] := nil
	4	[1711]	GETTABLE 	R2 R0 K3 ; R2 := R0["Category"]
	5	[1711]	EQ       	1 R2 K5 ; if R2 == 43.000000 then PC := 10
	6	[1711]	JMP      	10 ; PC := 10
	7	[1711]	GETTABLE 	R2 R0 K3 ; R2 := R0["Category"]
	8	[1711]	EQ       	0 R2 K6 ; if R2 ~= 46.000000 then PC := 38
	9	[1711]	JMP      	38 ; PC := 38
	10	[1712]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	11	[1712]	GETTABLE 	R3 R0 K8 ; R3 := R0["StoreItem"]
	12	[1712]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1712]	TEST     	R2 1 ; if R2 then PC := 38
	14	[1712]	JMP      	38 ; PC := 38
	15	[1713]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[1713]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x3bd648a0]
	17	[1713]	GETTABLE 	R3 R0 K8 ; R3 := R0["StoreItem"]
	18	[1713]	GETUPVAL 	R4 U1 ; R4 := U1
	19	[1713]	CALL     	R2 3 3 ; R2,R3 := R2(R3,R4)
	20	[1713]	SETTABLE 	R0 K2 R3 ; R0["Brand"] := R3
	21	[1713]	SETTABLE 	R0 K0 R2 ; R0["Tier"] := R2
	22	[1714]	GETTABLE 	R2 R0 K0 ; R2 := R0["Tier"]
	23	[1714]	EQ       	1 R2 K1 ; if R2 == nil then PC := 30
	24	[1714]	JMP      	30 ; PC := 30
	25	[1715]	GETGLOBAL	R2 K10 ; R2 := 0x33bdd652
	26	[1715]	GETTABLE 	R2 R2 K11 ; R2 := R2[0x23d5322f]
	27	[1715]	MOVE     	R3 R1 ; R3 := R1
	28	[1715]	GETTABLE 	R4 R0 K0 ; R4 := R0["Tier"]
	29	[1715]	CALL     	R2 3 1 ; R2(R3,R4)
	30	[1717]	GETTABLE 	R2 R0 K2 ; R2 := R0["Brand"]
	31	[1717]	EQ       	1 R2 K1 ; if R2 == nil then PC := 38
	32	[1717]	JMP      	38 ; PC := 38
	33	[1718]	GETGLOBAL	R2 K10 ; R2 := 0x33bdd652
	34	[1718]	GETTABLE 	R2 R2 K11 ; R2 := R2[0x23d5322f]
	35	[1718]	MOVE     	R3 R1 ; R3 := R1
	36	[1718]	GETTABLE 	R4 R0 K2 ; R4 := R0["Brand"]
	37	[1718]	CALL     	R2 3 1 ; R2(R3,R4)
	38	[1722]	SETTABLE 	R0 K12 R1 ; R0["Categories"] := R1
	39	[1723]	RETURN   	R0 1 ; return 

function #40 <?:1725,1739> (45 instructions, 180 bytes at 000002111FDE8A70)
4 params, 12 slots, 1 upvalue, 0 locals, 20 constants, 0 functions
	1	[1726]	GETTABLE 	R4 R0 K0 ; R4 := R0["Items"]
	2	[1726]	EQ       	0 R4 K1 ; if R4 ~= nil then PC := 43
	3	[1726]	JMP      	43 ; PC := 43
	4	[1727]	GETTABLE 	R4 R0 K2 ; R4 := R0["mSlot"]
	5	[1727]	EQ       	0 R4 K1 ; if R4 ~= nil then PC := 35
	6	[1727]	JMP      	35 ; PC := 35
	7	[1728]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[1728]	GETGLOBAL	R5 K3 ; R5 := mEquipment
	9	[1728]	MOVE     	R6 R0 ; R6 := R0
	10	[1728]	MOVE     	R7 R2 ; R7 := R2
	11	[1728]	MOVE     	R8 R3 ; R8 := R3
	12	[1728]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	13	[1729]	TEST     	R1 1 ; if R1 then PC := 33
	14	[1729]	JMP      	33 ; PC := 33
	15	[1730]	GETGLOBAL	R5 K4 ; R5 := 0x33bdd652
	16	[1730]	GETTABLE 	R5 R5 K5 ; R5 := R5[0x23d5322f]
	17	[1730]	MOVE     	R6 R4 ; R6 := R4
	18	[1730]	NEWTABLE 	R7 0 8 ; R7 := {}
	19	[1730]	SETTABLE 	R7 K6 K7 ; R7["mEmpty"] := true
	20	[1730]	SETTABLE 	R7 K8 K7 ; R7["IsNone"] := true
	21	[1730]	SETTABLE 	R7 K9 K1 ; R7["mStoreItem"] := nil
	22	[1730]	GETGLOBAL	R8 K11 ; R8 := 0xae91e43b
	23	[1730]	SELF     	R8 R8 K12 ; R9 := R8; R8 := R8[0x42b04007]
	24	[1730]	LOADK    	R10 K13 ; R10 := "/Lotus/Language/Menu/Cosmetics_None"
	25	[1730]	OP_LOADBOOL	R11 0 0 ; R11 := false
	26	[1730]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	27	[1730]	SETTABLE 	R7 K10 R8 ; R7["Name"] := R8
	28	[1730]	SETTABLE 	R7 K14 K15 ; R7["PvpValue"] := 0.000000
	29	[1730]	SETTABLE 	R7 K16 K7 ; R7["mPurchased"] := true
	30	[1730]	SETTABLE 	R7 K17 K18 ; R7["mSortId"] := -10.000000
	31	[1730]	SETTABLE 	R7 K19 K1 ; R7["ItemType"] := nil
	32	[1730]	CALL     	R5 3 1 ; R5(R6,R7)
	33	[1732]	RETURN   	R4 2 ; return R4 
	34	[1732]	JMP      	45 ; PC := 45
	35	[1734]	GETUPVAL 	R5 U0 ; R5 := U0
	36	[1734]	GETGLOBAL	R6 K3 ; R6 := mEquipment
	37	[1734]	MOVE     	R7 R0 ; R7 := R0
	38	[1734]	MOVE     	R8 R2 ; R8 := R2
	39	[1734]	MOVE     	R9 R3 ; R9 := R3
	40	[1734]	TAILCALL 	R5 5 0 ; R5,... := R5(R6,R7,R8,R9)
	41	[1734]	RETURN   	R5 0 ; return R5,... 
	42	[1735]	JMP      	45 ; PC := 45
	43	[1737]	GETTABLE 	R5 R0 K0 ; R5 := R0["Items"]
	44	[1737]	RETURN   	R5 2 ; return R5 
	45	[1739]	RETURN   	R0 1 ; return 

function #41 <?:1741,1780> (98 instructions, 392 bytes at 000002111FDE8DF0)
3 params, 14 slots, 6 upvalues, 0 locals, 27 constants, 0 functions
	1	[1742]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1742]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[1742]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1742]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[1742]	JMP      	7 ; PC := 7
	6	[1743]	RETURN   	R0 1 ; return 
	7	[1746]	GETGLOBAL	R3 K1 ; R3 := mInventoryGrid
	8	[1746]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x7c09c373]
	9	[1746]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[1746]	OP_LOADBOOL	R6 1 0 ; R6 := true
	11	[1746]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	12	[1747]	GETGLOBAL	R3 K1 ; R3 := mInventoryGrid
	13	[1747]	SETTABLE 	R3 K3 K4 ; R3["mPrevSelectedId"] := nil
	14	[1749]	GETUPVAL 	R3 U1 ; R3 := U1
	15	[1749]	MOVE     	R4 R0 ; R4 := R0
	16	[1749]	GETTABLE 	R5 R0 K5 ; R5 := R0["Required"]
	17	[1749]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	18	[1750]	LOADK    	R4 := 1.000000
	19	[1750]	LEN      	R5 R3 ; R5 := # R3
	20	[1750]	LOADK    	R6 := 1.000000
	21	[1750]	FORPREP  	R4 66 ; R4 -= R6; PC := 66
	22	[1751]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	23	[1752]	SETTABLE 	R8 K6 K7 ; R8["SearchCache"] := ""
	24	[1753]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	25	[1753]	GETTABLE 	R10 R8 K8 ; R10 := R8["mStoreItem"]
	26	[1753]	CALL     	R9 2 2 ; R9 := R9(R10)
	27	[1753]	TEST     	R9 1 ; if R9 then PC := 36
	28	[1753]	JMP      	36 ; PC := 36
	29	[1754]	GETUPVAL 	R9 U2 ; R9 := U2
	30	[1754]	GETTABLE 	R9 R9 K9 ; R9 := R9[0x1ac299fb]
	31	[1754]	GETGLOBAL	R10 K10 ; R10 := 0xae91e43b
	32	[1754]	GETTABLE 	R11 R8 K8 ; R11 := R8["mStoreItem"]
	33	[1754]	GETTABLE 	R12 R8 K11 ; R12 := R8["Name"]
	34	[1754]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	35	[1754]	SETTABLE 	R8 K6 R9 ; R8["SearchCache"] := R9
	36	[1757]	GETTABLE 	R9 R8 K12 ; R9 := R8["Polarity"]
	37	[1757]	EQ       	1 R9 K4 ; if R9 == nil then PC := 51
	38	[1757]	JMP      	51 ; PC := 51
	39	[1758]	GETGLOBAL	R9 K13 ; R9 := 0x83e41587
	40	[1758]	GETGLOBAL	R10 K10 ; R10 := 0xae91e43b
	41	[1758]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0x42b04007]
	42	[1758]	GETTABLE 	R12 R8 K12 ; R12 := R8["Polarity"]
	43	[1758]	GETTABLE 	R12 R12 K15 ; R12 := R12["NameTag"]
	44	[1758]	OP_LOADBOOL	R13 0 0 ; R13 := false
	45	[1758]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	46	[1758]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	47	[1758]	LOADK    	R10 K16 ; R10 := " "
	48	[1758]	GETTABLE 	R11 R8 K6 ; R11 := R8["SearchCache"]
	49	[1758]	CONCAT   	R9 R9 R11 ; R9 := R9 .. R10 .. R11
	50	[1758]	SETTABLE 	R8 K6 R9 ; R8["SearchCache"] := R9
	51	[1761]	TEST     	R2 0 ; if not R2 then PC := 58
	52	[1761]	JMP      	58 ; PC := 58
	53	[1761]	GETTABLE 	R9 R8 K17 ; R9 := R8["AlwaysAvailable"]
	54	[1761]	TEST     	R9 0 ; if not R9 then PC := 58
	55	[1761]	JMP      	58 ; PC := 58
	56	[1762]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	57	[1762]	SETTABLE 	R9 K3 R7 ; R9["mPrevSelectedId"] := R7
	58	[1765]	GETUPVAL 	R9 U3 ; R9 := U3
	59	[1765]	MOVE     	R10 R8 ; R10 := R8
	60	[1765]	CALL     	R9 2 1 ; R9(R10)
	61	[1766]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	62	[1766]	SELF     	R9 R9 K18 ; R10 := R9; R9 := R9[0xbad4316f]
	63	[1766]	MOVE     	R11 R8 ; R11 := R8
	64	[1766]	OP_LOADBOOL	R12 1 0 ; R12 := true
	65	[1766]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	66	[1750]	FORLOOP  	R4 22 ; R4 += R6; if R4 <= R5 then begin PC := 22; R7 := R4 end
	67	[1769]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	68	[1769]	SETTABLE 	R9 K19 K4 ; R9["mSelectedElement"] := nil
	69	[1770]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	70	[1770]	SETTABLE 	R9 K20 K4 ; R9["mLastFilterBy"] := nil
	71	[1771]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	72	[1771]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x71e9ac81]
	73	[1771]	LOADNIL  	R11 R11 ; R11 := nil
	74	[1771]	OP_LOADBOOL	R12 1 0 ; R12 := true
	75	[1771]	OP_LOADBOOL	R13 1 0 ; R13 := true
	76	[1771]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	77	[1772]	GETUPVAL 	R9 U4 ; R9 := U4
	78	[1772]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x659d451f]
	79	[1772]	GETGLOBAL	R10 K23 ; R10 := 0x0032441c
	80	[1772]	GETTABLE 	R10 R10 K24 ; R10 := R10["UISound_ButtonSelect"]
	81	[1772]	CALL     	R9 2 1 ; R9(R10)
	82	[1773]	GETUPVAL 	R9 U4 ; R9 := U4
	83	[1773]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x659d451f]
	84	[1773]	GETGLOBAL	R10 K23 ; R10 := 0x0032441c
	85	[1773]	GETTABLE 	R10 R10 K25 ; R10 := R10["UISound_WindowOpen"]
	86	[1773]	CALL     	R9 2 1 ; R9(R10)
	87	[1775]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	88	[1775]	GETTABLE 	R9 R9 K3 ; R9 := R9["mPrevSelectedId"]
	89	[1775]	EQ       	1 R9 K4 ; if R9 == nil then PC := 96
	90	[1775]	JMP      	96 ; PC := 96
	91	[1776]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	92	[1776]	SELF     	R9 R9 K26 ; R10 := R9; R9 := R9[0x070daa5a]
	93	[1776]	GETGLOBAL	R11 K1 ; R11 := mInventoryGrid
	94	[1776]	GETTABLE 	R11 R11 K3 ; R11 := R11["mPrevSelectedId"]
	95	[1776]	CALL     	R9 3 1 ; R9(R10,R11)
	96	[1779]	GETUPVAL 	R9 U5 ; R9 := U5
	97	[1779]	CALL     	R9 1 1 ; R9()
	98	[1780]	RETURN   	R0 1 ; return 

function #42 <?:1782,1803> (39 instructions, 156 bytes at 000002111FDE9380)
1 param, 6 slots, 0 upvalues, 0 locals, 22 constants, 0 functions
	1	[1783]	NEWTABLE 	R1 0 8 ; R1 := {}
	2	[1784]	SETTABLE 	R1 K0 K1 ; R1["mEmpty"] := true
	3	[1785]	SETTABLE 	R1 K2 K1 ; R1["IsNone"] := true
	4	[1786]	SETTABLE 	R1 K3 K4 ; R1["mStoreItem"] := nil
	5	[1787]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	6	[1787]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x42b04007]
	7	[1787]	LOADK    	R4 K8 ; R4 := "/Lotus/Language/Menu/Cosmetics_None"
	8	[1787]	OP_LOADBOOL	R5 0 0 ; R5 := false
	9	[1787]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1787]	SETTABLE 	R1 K5 R2 ; R1["Name"] := R2
	11	[1788]	SETTABLE 	R1 K9 K10 ; R1["PvpValue"] := 0.000000
	12	[1789]	SETTABLE 	R1 K11 K1 ; R1["mPurchased"] := true
	13	[1790]	SETTABLE 	R1 K12 K13 ; R1["mSortId"] := -10.000000
	14	[1791]	SETTABLE 	R1 K14 K4 ; R1["ItemType"] := nil
	15	[1794]	GETTABLE 	R2 R0 K15 ; R2 := R0["mDecal"]
	16	[1794]	TEST     	R2 0 ; if not R2 then PC := 21
	17	[1794]	JMP      	21 ; PC := 21
	18	[1795]	GETGLOBAL	R2 K17 ; R2 := 0x3894e23c
	19	[1795]	SETTABLE 	R1 K16 R2 ; R1["Icon"] := R2
	20	[1795]	JMP      	38 ; PC := 38
	21	[1796]	GETTABLE 	R2 R0 K18 ; R2 := R0["mSlot"]
	22	[1796]	EQ       	1 R2 K4 ; if R2 == nil then PC := 38
	23	[1796]	JMP      	38 ; PC := 38
	24	[1797]	GETGLOBAL	R2 K19 ; R2 := 0x7b998233
	25	[1797]	GETGLOBAL	R3 K20 ; R3 := mShipSuit
	26	[1797]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[1797]	TEST     	R2 1 ; if R2 then PC := 38
	28	[1797]	JMP      	38 ; PC := 38
	29	[1797]	GETGLOBAL	R2 K19 ; R2 := 0x7b998233
	30	[1797]	GETGLOBAL	R3 K20 ; R3 := mShipSuit
	31	[1797]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x0911ae7c]
	32	[1797]	GETTABLE 	R5 R0 K18 ; R5 := R0["mSlot"]
	33	[1797]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	34	[1797]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	35	[1797]	TEST     	R2 1 ; if R2 then PC := 38
	36	[1797]	JMP      	38 ; PC := 38
	37	[1798]	LOADNIL  	R1 R1 ; R1 := nil
	38	[1802]	RETURN   	R1 2 ; return R1 
	39	[1803]	RETURN   	R0 1 ; return 

function #43 <?:1805,1858> (104 instructions, 416 bytes at 00000211132F6A30)
1 param, 13 slots, 6 upvalues, 0 locals, 24 constants, 1 function
	1	[1806]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1806]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1806]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1806]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1806]	JMP      	8 ; PC := 8
	6	[1807]	NEWTABLE 	R1 0 0 ; R1 := {}
	7	[1807]	RETURN   	R1 2 ; return R1 
	8	[1809]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[1810]	GETTABLE 	R2 R0 K1 ; R2 := R0["Items"]
	10	[1810]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 63
	11	[1810]	JMP      	63 ; PC := 63
	12	[1811]	GETTABLE 	R2 R0 K3 ; R2 := R0["mDecal"]
	13	[1811]	TEST     	R2 0 ; if not R2 then PC := 20
	14	[1811]	JMP      	20 ; PC := 20
	15	[1812]	GETUPVAL 	R2 U1 ; R2 := U1
	16	[1812]	MOVE     	R3 R0 ; R3 := R0
	17	[1812]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[1812]	MOVE     	R1 R2 ; R1 := R2
	19	[1812]	JMP      	52 ; PC := 52
	20	[1813]	GETTABLE 	R2 R0 K4 ; R2 := R0["mHullSkin"]
	21	[1813]	TEST     	R2 0 ; if not R2 then PC := 28
	22	[1813]	JMP      	28 ; PC := 28
	23	[1814]	GETUPVAL 	R2 U2 ; R2 := U2
	24	[1814]	GETTABLE 	R3 R0 K5 ; R3 := R0["mSlot"]
	25	[1814]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[1814]	MOVE     	R1 R2 ; R1 := R2
	27	[1814]	JMP      	52 ; PC := 52
	28	[1815]	GETTABLE 	R2 R0 K5 ; R2 := R0["mSlot"]
	29	[1815]	EQ       	1 R2 K2 ; if R2 == nil then PC := 47
	30	[1815]	JMP      	47 ; PC := 47
	31	[1816]	GETTABLE 	R2 R0 K6 ; R2 := R0["mCategory"]
	32	[1816]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 40
	33	[1816]	JMP      	40 ; PC := 40
	34	[1817]	GETUPVAL 	R2 U3 ; R2 := U3
	35	[1817]	GETGLOBAL	R3 K7 ; R3 := mEquipment
	36	[1817]	MOVE     	R4 R0 ; R4 := R0
	37	[1817]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	38	[1817]	MOVE     	R1 R2 ; R1 := R2
	39	[1817]	JMP      	52 ; PC := 52
	40	[1819]	GETUPVAL 	R2 U3 ; R2 := U3
	41	[1819]	GETGLOBAL	R3 K8 ; R3 := mCosmeticsList
	42	[1819]	GETTABLE 	R3 R3 K9 ; R3 := R3["CustomizationList"]
	43	[1819]	MOVE     	R4 R0 ; R4 := R0
	44	[1819]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	45	[1819]	MOVE     	R1 R2 ; R1 := R2
	46	[1820]	JMP      	52 ; PC := 52
	47	[1822]	GETUPVAL 	R2 U3 ; R2 := U3
	48	[1822]	GETGLOBAL	R3 K7 ; R3 := mEquipment
	49	[1822]	MOVE     	R4 R0 ; R4 := R0
	50	[1822]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	51	[1822]	MOVE     	R1 R2 ; R1 := R2
	52	[1825]	GETUPVAL 	R2 U4 ; R2 := U4
	53	[1825]	MOVE     	R3 R0 ; R3 := R0
	54	[1825]	CALL     	R2 2 2 ; R2 := R2(R3)
	55	[1826]	EQ       	1 R2 K2 ; if R2 == nil then PC := 64
	56	[1826]	JMP      	64 ; PC := 64
	57	[1827]	GETGLOBAL	R3 K10 ; R3 := 0x33bdd652
	58	[1827]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x23d5322f]
	59	[1827]	MOVE     	R4 R1 ; R4 := R1
	60	[1827]	MOVE     	R5 R2 ; R5 := R2
	61	[1827]	CALL     	R3 3 1 ; R3(R4,R5)
	62	[1828]	JMP      	64 ; PC := 64
	63	[1830]	GETTABLE 	R1 R0 K1 ; R1 := R0["Items"]
	64	[1833]	GETGLOBAL	R3 K10 ; R3 := 0x33bdd652
	65	[1833]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xf21b1d8e]
	66	[1833]	MOVE     	R4 R1 ; R4 := R1
	67	[1843]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	68	[1833]	CALL     	R3 3 1 ; R3(R4,R5)
	69	[1845]	LOADK    	R3 := 1.000000
	70	[1845]	LEN      	R4 R1 ; R4 := # R1
	71	[1845]	LOADK    	R5 := 1.000000
	72	[1845]	FORPREP  	R3 102 ; R3 -= R5; PC := 102
	73	[1846]	GETTABLE 	R7 R1 R6 ; R7 := R1[R6]
	74	[1847]	SETTABLE 	R7 K13 K14 ; R7["SearchCache"] := ""
	75	[1848]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	76	[1848]	GETTABLE 	R9 R7 K15 ; R9 := R7["StoreItem"]
	77	[1848]	CALL     	R8 2 2 ; R8 := R8(R9)
	78	[1848]	TEST     	R8 1 ; if R8 then PC := 87
	79	[1848]	JMP      	87 ; PC := 87
	80	[1849]	GETUPVAL 	R8 U5 ; R8 := U5
	81	[1849]	GETTABLE 	R8 R8 K16 ; R8 := R8[0x1ac299fb]
	82	[1849]	GETGLOBAL	R9 K17 ; R9 := 0xae91e43b
	83	[1849]	GETTABLE 	R10 R7 K15 ; R10 := R7["StoreItem"]
	84	[1849]	GETTABLE 	R11 R7 K18 ; R11 := R7["Name"]
	85	[1849]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	86	[1849]	SETTABLE 	R7 K13 R8 ; R7[0x00000001] := R8
	87	[1852]	GETTABLE 	R8 R7 K19 ; R8 := R7["Polarity"]
	88	[1852]	EQ       	1 R8 K2 ; if R8 == nil then PC := 102
	89	[1852]	JMP      	102 ; PC := 102
	90	[1853]	GETGLOBAL	R8 K20 ; R8 := 0x83e41587
	91	[1853]	GETGLOBAL	R9 K17 ; R9 := 0xae91e43b
	92	[1853]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x42b04007]
	93	[1853]	GETTABLE 	R11 R7 K19 ; R11 := R7["Polarity"]
	94	[1853]	GETTABLE 	R11 R11 K22 ; R11 := R11["NameTag"]
	95	[1853]	OP_LOADBOOL	R12 0 0 ; R12 := false
	96	[1853]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	97	[1853]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	98	[1853]	LOADK    	R9 K23 ; R9 := " "
	99	[1853]	GETTABLE 	R10 R7 K13 ; R10 := R7["SearchCache"]
	100	[1853]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	101	[1853]	SETTABLE 	R7 K13 R8 ; R7[0x00000001] := R8
	102	[1845]	FORLOOP  	R3 73 ; R3 += R5; if R3 <= R4 then begin PC := 73; R6 := R3 end
	103	[1857]	RETURN   	R1 2 ; return R1 
	104	[1858]	RETURN   	R0 1 ; return 

function #44 <?:1860,1864> (9 instructions, 36 bytes at 00000211132F71D0)
2 params, 4 slots, 3 upvalues, 0 locals, 0 constants, 0 functions
	1	[1861]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1861]	MOVE     	R3 R1 ; R3 := R1
	3	[1861]	CALL     	R2 2 1 ; R2(R3)
	4	[1862]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[1862]	OP_LOADBOOL	R3 1 0 ; R3 := true
	6	[1862]	CALL     	R2 2 1 ; R2(R3)
	7	[1863]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[1863]	CALL     	R2 1 1 ; R2()
	9	[1864]	RETURN   	R0 1 ; return 

function #45 <?:1866,1904> (85 instructions, 340 bytes at 00000211132F72E0)
3 params, 16 slots, 6 upvalues, 0 locals, 22 constants, 0 functions
	1	[1867]	TEST     	R0 0 ; if not R0 then PC := 7
	2	[1867]	JMP      	7 ; PC := 7
	3	[1868]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[1868]	LOADNIL  	R4 R4 ; R4 := nil
	5	[1868]	CALL     	R3 2 1 ; R3(R4)
	6	[1868]	JMP      	85 ; PC := 85
	7	[1870]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[1870]	MOVE     	R4 R2 ; R4 := R2
	9	[1870]	CALL     	R3 2 1 ; R3(R4)
	10	[1872]	GETGLOBAL	R3 K0 ; R3 := mCosmeticsList
	11	[1872]	GETTABLE 	R3 R3 K1 ; R3 := R3["CustomizationList"]
	12	[1872]	GETTABLE 	R3 R3 K2 ; R3 := R3["mSelectedElement"]
	13	[1873]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	14	[1873]	GETUPVAL 	R5 U1 ; R5 := U1
	15	[1873]	GETTABLE 	R5 R5 K4 ; R5 := R5["EQUIP_INV"]
	16	[1873]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 20
	17	[1873]	JMP      	20 ; PC := 20
	18	[1874]	GETGLOBAL	R4 K5 ; R4 := mEquipment
	19	[1874]	GETTABLE 	R3 R4 K2 ; R3 := R4["mSelectedElement"]
	20	[1876]	GETTABLE 	R4 R3 K6 ; R4 := R3["mSlot"]
	21	[1877]	EQ       	1 R4 K7 ; if R4 == nil then PC := 83
	22	[1877]	JMP      	83 ; PC := 83
	23	[1878]	GETGLOBAL	R5 K8 ; R5 := 0x25d99d89
	24	[1878]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x25a6e75e]
	25	[1878]	CALL     	R5 2 2 ; R5 := R5(R6)
	26	[1879]	GETGLOBAL	R6 K10 ; R6 := 0x7b998233
	27	[1879]	MOVE     	R7 R5 ; R7 := R5
	28	[1879]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[1879]	TEST     	R6 1 ; if R6 then PC := 83
	30	[1879]	JMP      	83 ; PC := 83
	31	[1880]	GETTABLE 	R6 R2 K11 ; R6 := R2["mPurchased"]
	32	[1880]	TEST     	R6 1 ; if R6 then PC := 55
	33	[1880]	JMP      	55 ; PC := 55
	34	[1881]	GETUPVAL 	R6 U2 ; R6 := U2
	35	[1881]	MOVE     	R7 R4 ; R7 := R4
	36	[1881]	CALL     	R6 2 2 ; R6 := R6(R7)
	37	[1882]	LOADK    	R7 := 1.000000
	38	[1882]	LEN      	R8 R6 ; R8 := # R6
	39	[1882]	LOADK    	R9 := 1.000000
	40	[1882]	FORPREP  	R7 50 ; R7 -= R9; PC := 50
	41	[1883]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	42	[1883]	GETTABLE 	R11 R11 K12 ; R11 := R11["StoreItem"]
	43	[1883]	GETTABLE 	R12 R2 K12 ; R12 := R2["StoreItem"]
	44	[1883]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 50
	45	[1883]	JMP      	50 ; PC := 50
	46	[1884]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	47	[1884]	GETTABLE 	R11 R11 K13 ; R11 := R11["RawItem"]
	48	[1884]	SETTABLE 	R2 K13 R11 ; R2["RawItem"] := R11
	49	[1885]	JMP      	51 ; PC := 51
	50	[1882]	FORLOOP  	R7 41 ; R7 += R9; if R7 <= R8 then begin PC := 41; R10 := R7 end
	51	[1888]	GETUPVAL 	R11 U3 ; R11 := U3
	52	[1888]	LOADNIL  	R12 R12 ; R12 := nil
	53	[1888]	OP_LOADBOOL	R13 1 0 ; R13 := true
	54	[1888]	CALL     	R11 3 1 ; R11(R12,R13)
	55	[1891]	GETUPVAL 	R11 U4 ; R11 := U4
	56	[1891]	CALL     	R11 1 2 ; R11 := R11()
	57	[1892]	GETTABLE 	R12 R2 K13 ; R12 := R2["RawItem"]
	58	[1892]	TEST     	R12 0 ; if not R12 then PC := 66
	59	[1892]	JMP      	66 ; PC := 66
	60	[1893]	SELF     	R12 R11 K14 ; R13 := R11; R12 := R11[0x569554e7]
	61	[1893]	GETTABLE 	R14 R2 K13 ; R14 := R2["RawItem"]
	62	[1893]	GETTABLE 	R14 R14 K15 ; R14 := R14["Item"]
	63	[1893]	MOVE     	R15 R4 ; R15 := R4
	64	[1893]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	65	[1893]	JMP      	70 ; PC := 70
	66	[1895]	SELF     	R12 R11 K16 ; R13 := R11; R12 := R11[0xedd0b8c3]
	67	[1895]	LOADNIL  	R14 R14 ; R14 := nil
	68	[1895]	MOVE     	R15 R4 ; R15 := R4
	69	[1895]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	70	[1897]	GETGLOBAL	R12 K17 ; R12 := mShipSuit
	71	[1897]	SELF     	R12 R12 K18 ; R13 := R12; R12 := R12[0xaa041663]
	72	[1897]	MOVE     	R14 R11 ; R14 := R11
	73	[1897]	OP_LOADBOOL	R15 0 0 ; R15 := false
	74	[1897]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	75	[1898]	SELF     	R12 R11 K19 ; R13 := R11; R12 := R11[0x61b59a83]
	76	[1898]	GETGLOBAL	R14 K20 ; R14 := mShipAvatar
	77	[1898]	OP_LOADBOOL	R15 0 0 ; R15 := false
	78	[1898]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	79	[1899]	GETGLOBAL	R12 K8 ; R12 := 0x25d99d89
	80	[1899]	SELF     	R12 R12 K21 ; R13 := R12; R12 := R12[0xf225a72d]
	81	[1899]	MOVE     	R14 R11 ; R14 := R11
	82	[1899]	CALL     	R12 3 1 ; R12(R13,R14)
	83	[1902]	GETUPVAL 	R12 U5 ; R12 := U5
	84	[1902]	CALL     	R12 1 1 ; R12()
	85	[1904]	RETURN   	R0 1 ; return 

function #46 <?:1906,1991> (221 instructions, 884 bytes at 00000211132F77C0)
2 params, 33 slots, 4 upvalues, 0 locals, 45 constants, 0 functions
	1	[1907]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1907]	CALL     	R2 1 2 ; R2 := R2()
	3	[1908]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	4	[1908]	MOVE     	R4 R2 ; R4 := R2
	5	[1908]	CALL     	R3 2 2 ; R3 := R3(R4)
	6	[1908]	TEST     	R3 0 ; if not R3 then PC := 9
	7	[1908]	JMP      	9 ; PC := 9
	8	[1909]	RETURN   	R0 1 ; return 
	9	[1912]	MOVE     	R3 R1 ; R3 := R1
	10	[1913]	EQ       	0 R3 K1 ; if R3 ~= nil then PC := 35
	11	[1913]	JMP      	35 ; PC := 35
	12	[1914]	EQ       	0 R0 K3 ; if R0 ~= 7.000000 then PC := 24
	13	[1914]	JMP      	24 ; PC := 24
	14	[1914]	GETGLOBAL	R4 K4 ; R4 := mInteriorCustomization
	15	[1914]	TEST     	R4 0 ; if not R4 then PC := 24
	16	[1914]	JMP      	24 ; PC := 24
	17	[1915]	GETGLOBAL	R4 K5 ; R4 := 0x60130201
	18	[1915]	LOADK    	R5 := 192.000000
	19	[1915]	LOADK    	R6 := 192.000000
	20	[1915]	LOADK    	R7 := 192.000000
	21	[1915]	LOADK    	R8 := 128.000000
	22	[1915]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	23	[1915]	MOVE     	R3 R4 ; R3 := R4
	24	[1917]	EQ       	0 R0 K6 ; if R0 ~= 5.000000 then PC := 35
	25	[1917]	JMP      	35 ; PC := 35
	26	[1918]	GETGLOBAL	R4 K5 ; R4 := 0x60130201
	27	[1918]	LOADK    	R5 := 92.000000
	28	[1918]	LOADK    	R6 := 92.000000
	29	[1918]	LOADK    	R7 := 92.000000
	30	[1918]	LOADK    	R8 := 255.000000
	31	[1918]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	32	[1918]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xa5d5c8f6]
	33	[1918]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[1918]	MOVE     	R3 R4 ; R3 := R4
	35	[1922]	EQ       	1 R3 K1 ; if R3 == nil then PC := 68
	36	[1922]	JMP      	68 ; PC := 68
	37	[1923]	GETGLOBAL	R4 K5 ; R4 := 0x60130201
	38	[1923]	MOVE     	R5 R3 ; R5 := R3
	39	[1923]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[1924]	EQ       	0 R0 K3 ; if R0 ~= 7.000000 then PC := 52
	41	[1924]	JMP      	52 ; PC := 52
	42	[1924]	GETGLOBAL	R5 K4 ; R5 := mInteriorCustomization
	43	[1924]	TEST     	R5 0 ; if not R5 then PC := 52
	44	[1924]	JMP      	52 ; PC := 52
	45	[1925]	GETGLOBAL	R5 K9 ; R5 := 0x5bced4c4
	46	[1925]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x55f27c30]
	47	[1925]	GETGLOBAL	R6 K11 ; R6 := mInteriorWearAndTear
	48	[1925]	MUL      	R6 R6 K12 ; R6 := R6 * 2.540000
	49	[1925]	CALL     	R5 2 2 ; R5 := R5(R6)
	50	[1925]	ADD      	R5 R5 K13 ; R5 := R5 + 1.000000
	51	[1925]	SETTABLE 	R4 K8 R5 ; R4["alpha"] := R5
	52	[1927]	EQ       	0 R0 K6 ; if R0 ~= 5.000000 then PC := 64
	53	[1927]	JMP      	64 ; PC := 64
	54	[1927]	GETGLOBAL	R5 K4 ; R5 := mInteriorCustomization
	55	[1927]	TEST     	R5 1 ; if R5 then PC := 64
	56	[1927]	JMP      	64 ; PC := 64
	57	[1928]	GETGLOBAL	R5 K9 ; R5 := 0x5bced4c4
	58	[1928]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x55f27c30]
	59	[1928]	GETGLOBAL	R6 K14 ; R6 := mWearAndTear
	60	[1928]	MUL      	R6 R6 K12 ; R6 := R6 * 2.540000
	61	[1928]	CALL     	R5 2 2 ; R5 := R5(R6)
	62	[1928]	ADD      	R5 R5 K13 ; R5 := R5 + 1.000000
	63	[1928]	SETTABLE 	R4 K8 R5 ; R4["alpha"] := R5
	64	[1930]	SELF     	R5 R2 K15 ; R6 := R2; R5 := R2[0xa3927fe9]
	65	[1930]	MOVE     	R7 R0 ; R7 := R0
	66	[1930]	MOVE     	R8 R4 ; R8 := R4
	67	[1930]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	68	[1932]	SELF     	R5 R2 K16 ; R6 := R2; R5 := R2[0xfc5d7158]
	69	[1932]	MOVE     	R7 R0 ; R7 := R0
	70	[1932]	EQ       	0 R3 K1 ; if R3 ~= nil then PC := 73
	71	[1932]	JMP      	73 ; PC := 73
	72	[1932]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 73
	73	[1932]	OP_LOADBOOL	R8 1 0 ; R8 := true
	74	[1932]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	75	[1934]	NEWTABLE 	R5 0 0 ; R5 := {}
	76	[1935]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	77	[1935]	GETGLOBAL	R7 K17 ; R7 := 0x89326c93
	78	[1935]	CALL     	R6 2 2 ; R6 := R6(R7)
	79	[1935]	TEST     	R6 1 ; if R6 then PC := 86
	80	[1935]	JMP      	86 ; PC := 86
	81	[1936]	GETGLOBAL	R6 K17 ; R6 := 0x89326c93
	82	[1936]	SELF     	R6 R6 K18 ; R7 := R6; R6 := R6[0xfb669000]
	83	[1936]	GETGLOBAL	R8 K19 ; R8 := gLisetDecorationType
	84	[1936]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	85	[1936]	MOVE     	R5 R6 ; R5 := R6
	86	[1938]	GETGLOBAL	R6 K4 ; R6 := mInteriorCustomization
	87	[1938]	TEST     	R6 0 ; if not R6 then PC := 136
	88	[1938]	JMP      	136 ; PC := 136
	89	[1939]	GETGLOBAL	R6 K20 ; R6 := _T
	90	[1939]	SETTABLE 	R6 K21 K22 ; R6["ApplyPlayerLisetColors"] := true
	91	[1941]	GETGLOBAL	R6 K23 ; R6 := 0xbe190284
	92	[1941]	SELF     	R6 R6 K24 ; R7 := R6; R6 := R6[0xd7d79b74]
	93	[1941]	CALL     	R6 2 2 ; R6 := R6(R7)
	94	[1942]	GETUPVAL 	R7 U1 ; R7 := U1
	95	[1942]	CALL     	R7 1 2 ; R7 := R7()
	96	[1943]	GETUPVAL 	R8 U2 ; R8 := U2
	97	[1943]	CALL     	R8 1 2 ; R8 := R8()
	98	[1944]	LOADK    	R9 := 1.000000
	99	[1944]	LEN      	R10 R5 ; R10 := # R5
	100	[1944]	LOADK    	R11 := 1.000000
	101	[1944]	FORPREP  	R9 134 ; R9 -= R11; PC := 134
	102	[1945]	GETGLOBAL	R13 K25 ; R13 := 0xce225efa
	103	[1945]	LOADK    	R14 := 0.000000
	104	[1945]	CALL     	R13 2 1 ; R13(R14)
	105	[1946]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	106	[1946]	MOVE     	R14 R6 ; R14 := R6
	107	[1946]	CALL     	R13 2 2 ; R13 := R13(R14)
	108	[1946]	TEST     	R13 1 ; if R13 then PC := 134
	109	[1946]	JMP      	134 ; PC := 134
	110	[1947]	SELF     	R13 R6 K26 ; R14 := R6; R13 := R6[0x973c5b4d]
	111	[1947]	GETTABLE 	R15 R5 R12 ; R15 := R5[R12]
	112	[1947]	SELF     	R15 R15 K27 ; R16 := R15; R15 := R15[0xe79e7ef4]
	113	[1947]	CALL     	R15 2 0 ; R15,... := R15(R16)
	114	[1947]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	115	[1948]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	116	[1948]	MOVE     	R15 R13 ; R15 := R13
	117	[1948]	CALL     	R14 2 2 ; R14 := R14(R15)
	118	[1948]	TEST     	R14 1 ; if R14 then PC := 134
	119	[1948]	JMP      	134 ; PC := 134
	120	[1949]	GETTABLE 	R14 R5 R12 ; R14 := R5[R12]
	121	[1949]	SELF     	R14 R14 K28 ; R15 := R14; R14 := R14[0x596f5027]
	122	[1949]	CALL     	R14 2 2 ; R14 := R14(R15)
	123	[1949]	TEST     	R14 0 ; if not R14 then PC := 130
	124	[1949]	JMP      	130 ; PC := 130
	125	[1950]	GETTABLE 	R14 R5 R12 ; R14 := R5[R12]
	126	[1950]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0xbde2634d]
	127	[1950]	MOVE     	R16 R7 ; R16 := R7
	128	[1950]	CALL     	R14 3 1 ; R14(R15,R16)
	129	[1950]	JMP      	134 ; PC := 134
	130	[1952]	SELF     	R14 R8 K30 ; R15 := R8; R14 := R8[0x61b59a83]
	131	[1952]	GETTABLE 	R16 R5 R12 ; R16 := R5[R12]
	132	[1952]	OP_LOADBOOL	R17 0 0 ; R17 := false
	133	[1952]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	134	[1944]	FORLOOP  	R9 102 ; R9 += R11; if R9 <= R10 then begin PC := 102; R12 := R9 end
	135	[1956]	JMP      	221 ; PC := 221
	136	[1958]	GETUPVAL 	R14 U2 ; R14 := U2
	137	[1958]	CALL     	R14 1 2 ; R14 := R14()
	138	[1959]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	139	[1959]	MOVE     	R16 R14 ; R16 := R14
	140	[1959]	CALL     	R15 2 2 ; R15 := R15(R16)
	141	[1959]	TEST     	R15 1 ; if R15 then PC := 214
	142	[1959]	JMP      	214 ; PC := 214
	143	[1960]	LOADK    	R15 := 1.000000
	144	[1960]	LEN      	R16 R5 ; R16 := # R5
	145	[1960]	LOADK    	R17 := 1.000000
	146	[1960]	FORPREP  	R15 159 ; R15 -= R17; PC := 159
	147	[1961]	GETGLOBAL	R19 K25 ; R19 := 0xce225efa
	148	[1961]	LOADK    	R20 := 0.000000
	149	[1961]	CALL     	R19 2 1 ; R19(R20)
	150	[1962]	GETTABLE 	R19 R5 R18 ; R19 := R5[R18]
	151	[1962]	SELF     	R19 R19 K28 ; R20 := R19; R19 := R19[0x596f5027]
	152	[1962]	CALL     	R19 2 2 ; R19 := R19(R20)
	153	[1962]	TEST     	R19 1 ; if R19 then PC := 159
	154	[1962]	JMP      	159 ; PC := 159
	155	[1963]	SELF     	R19 R14 K30 ; R20 := R14; R19 := R14[0x61b59a83]
	156	[1963]	GETTABLE 	R21 R5 R18 ; R21 := R5[R18]
	157	[1963]	OP_LOADBOOL	R22 0 0 ; R22 := false
	158	[1963]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	159	[1960]	FORLOOP  	R15 147 ; R15 += R17; if R15 <= R16 then begin PC := 147; R18 := R15 end
	160	[1967]	SELF     	R19 R14 K31 ; R20 := R14; R19 := R14[0x199edf6e]
	161	[1967]	LOADK    	R21 := 0.000000
	162	[1967]	MOVE     	R22 R2 ; R22 := R2
	163	[1967]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	164	[1968]	GETGLOBAL	R19 K32 ; R19 := mShipSuit
	165	[1968]	SELF     	R19 R19 K33 ; R20 := R19; R19 := R19[0xaa041663]
	166	[1968]	MOVE     	R21 R14 ; R21 := R14
	167	[1968]	OP_LOADBOOL	R22 0 0 ; R22 := false
	168	[1968]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	169	[1969]	EQ       	1 R0 K6 ; if R0 == 5.000000 then PC := 214
	170	[1969]	JMP      	214 ; PC := 214
	171	[1970]	SELF     	R19 R14 K30 ; R20 := R14; R19 := R14[0x61b59a83]
	172	[1970]	GETGLOBAL	R21 K34 ; R21 := mShipAvatar
	173	[1970]	OP_LOADBOOL	R22 0 0 ; R22 := false
	174	[1970]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	175	[1971]	GETGLOBAL	R19 K34 ; R19 := mShipAvatar
	176	[1971]	SELF     	R19 R19 K35 ; R20 := R19; R19 := R19[0xc1595bd5]
	177	[1971]	GETGLOBAL	R21 K36 ; R21 := gLotusEffectDecorationType
	178	[1971]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	179	[1972]	EQ       	1 R0 K37 ; if R0 == 6.000000 then PC := 183
	180	[1972]	JMP      	183 ; PC := 183
	181	[1972]	EQ       	0 R0 K3 ; if R0 ~= 7.000000 then PC := 214
	182	[1972]	JMP      	214 ; PC := 214
	183	[1973]	LOADK    	R20 := 1.000000
	184	[1973]	LEN      	R21 R19 ; R21 := # R19
	185	[1973]	LOADK    	R22 := 1.000000
	186	[1973]	FORPREP  	R20 213 ; R20 -= R22; PC := 213
	187	[1974]	GETGLOBAL	R24 K32 ; R24 := mShipSuit
	188	[1974]	SELF     	R24 R24 K38 ; R25 := R24; R24 := R24[0x22f0b321]
	189	[1974]	GETTABLE 	R26 R19 R23 ; R26 := R19[R23]
	190	[1974]	CALL     	R24 3 1 ; R24(R25,R26)
	191	[1975]	GETTABLE 	R24 R19 R23 ; R24 := R19[R23]
	192	[1975]	SELF     	R24 R24 K35 ; R25 := R24; R24 := R24[0xc1595bd5]
	193	[1975]	GETGLOBAL	R26 K39 ; R26 := gLensFlareType
	194	[1975]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	195	[1976]	LOADK    	R25 := 1.000000
	196	[1976]	LEN      	R26 R24 ; R26 := # R24
	197	[1976]	LOADK    	R27 := 1.000000
	198	[1976]	FORPREP  	R25 203 ; R25 -= R27; PC := 203
	199	[1977]	GETGLOBAL	R29 K32 ; R29 := mShipSuit
	200	[1977]	SELF     	R29 R29 K38 ; R30 := R29; R29 := R29[0x22f0b321]
	201	[1977]	GETTABLE 	R31 R24 R28 ; R31 := R24[R28]
	202	[1977]	CALL     	R29 3 1 ; R29(R30,R31)
	203	[1976]	FORLOOP  	R25 199 ; R25 += R27; if R25 <= R26 then begin PC := 199; R28 := R25 end
	204	[1979]	GETTABLE 	R29 R19 R23 ; R29 := R19[R23]
	205	[1979]	SELF     	R29 R29 K40 ; R30 := R29; R29 := R29[0x08db51de]
	206	[1979]	GETUPVAL 	R31 U3 ; R31 := U3
	207	[1979]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	208	[1979]	TEST     	R29 0 ; if not R29 then PC := 213
	209	[1979]	JMP      	213 ; PC := 213
	210	[1980]	GETTABLE 	R29 R19 R23 ; R29 := R19[R23]
	211	[1980]	SELF     	R29 R29 K41 ; R30 := R29; R29 := R29[0x1db57c6b]
	212	[1980]	CALL     	R29 2 1 ; R29(R30)
	213	[1973]	FORLOOP  	R20 187 ; R20 += R22; if R20 <= R21 then begin PC := 187; R23 := R20 end
	214	[1987]	EQ       	0 R0 K6 ; if R0 ~= 5.000000 then PC := 221
	215	[1987]	JMP      	221 ; PC := 221
	216	[1988]	GETGLOBAL	R29 K42 ; R29 := 0x9ba7909f
	217	[1988]	SELF     	R29 R29 K43 ; R30 := R29; R29 := R29[0x7e17ae26]
	218	[1988]	LOADK    	R31 K44 ; R31 := "SetRailjackTextColor"
	219	[1988]	MOVE     	R32 R3 ; R32 := R3
	220	[1988]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	221	[1991]	RETURN   	R0 1 ; return 

function #47 <?:1993,2028> (78 instructions, 312 bytes at 00000211132F8290)
3 params, 17 slots, 1 upvalue, 0 locals, 33 constants, 0 functions
	1	[1994]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 5
	2	[1994]	JMP      	5 ; PC := 5
	3	[1995]	NEWTABLE 	R3 0 0 ; R3 := {}
	4	[1995]	MOVE     	R2 R3 ; R2 := R3
	5	[1998]	LOADK    	R3 := 1.000000
	6	[1998]	LEN      	R4 R0 ; R4 := # R0
	7	[1998]	LOADK    	R5 := 1.000000
	8	[1998]	FORPREP  	R3 76 ; R3 -= R5; PC := 76
	9	[1999]	GETTABLE 	R7 R0 R6 ; R7 := R0[R6]
	10	[2000]	GETTABLE 	R8 R7 K1 ; R8 := R7["mItemType"]
	11	[2001]	GETTABLE 	R9 R7 K2 ; R9 := R7["mItemId"]
	12	[2001]	GETTABLE 	R9 R9 K3 ; R9 := R9["mId"]
	13	[2003]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	14	[2003]	MOVE     	R11 R8 ; R11 := R8
	15	[2003]	CALL     	R10 2 2 ; R10 := R10(R11)
	16	[2003]	TEST     	R10 1 ; if R10 then PC := 76
	17	[2003]	JMP      	76 ; PC := 76
	18	[2004]	GETUPVAL 	R10 U0 ; R10 := U0
	19	[2004]	SELF     	R10 R10 K5 ; R11 := R10; R10 := R10[0x105074fb]
	20	[2004]	MOVE     	R12 R8 ; R12 := R8
	21	[2004]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	22	[2006]	GETGLOBAL	R11 K4 ; R11 := 0x7b998233
	23	[2006]	MOVE     	R12 R10 ; R12 := R10
	24	[2006]	CALL     	R11 2 2 ; R11 := R11(R12)
	25	[2006]	TEST     	R11 1 ; if R11 then PC := 76
	26	[2006]	JMP      	76 ; PC := 76
	27	[2007]	NEWTABLE 	R11 0 7 ; R11 := {}
	28	[2007]	SETTABLE 	R11 K6 R8 ; R11[0x9bafffe3] := R8
	29	[2007]	SETTABLE 	R11 K7 R10 ; R11["mStoreItem"] := R10
	30	[2007]	GETGLOBAL	R12 K9 ; R12 := 0xae91e43b
	31	[2007]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0x42b04007]
	32	[2007]	GETGLOBAL	R14 K11 ; R14 := 0x64fb1586
	33	[2007]	SELF     	R15 R10 K12 ; R16 := R10; R15 := R10[0xd3a9d01f]
	34	[2007]	CALL     	R15 2 0 ; R15,... := R15(R16)
	35	[2007]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	36	[2007]	OP_LOADBOOL	R15 0 0 ; R15 := false
	37	[2007]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	38	[2007]	SETTABLE 	R11 K8 R12 ; R11["Name"] := R12
	39	[2007]	SETTABLE 	R11 K13 R9 ; R11["UID"] := R9
	40	[2007]	GETTABLE 	R12 R7 K15 ; R12 := R7["mXP"]
	41	[2007]	SETTABLE 	R11 K14 R12 ; R11["Xp"] := R12
	42	[2007]	SETTABLE 	R11 K16 R7 ; R11["Item"] := R7
	43	[2007]	GETTABLE 	R12 R7 K18 ; R12 := R7["mItemCount"]
	44	[2007]	SETTABLE 	R11 K17 R12 ; R11["ItemCount"] := R12
	45	[2009]	GETTABLE 	R12 R7 K19 ; R12 := R7["mModularParts"]
	46	[2009]	LEN      	R12 R12 ; R12 := # R12
	47	[2009]	LT       	0 K20 R12 ; if 0.000000 >= R12 then PC := 55
	48	[2009]	JMP      	55 ; PC := 55
	49	[2010]	GETTABLE 	R12 R7 K19 ; R12 := R7["mModularParts"]
	50	[2010]	SETTABLE 	R11 K19 R12 ; R11["mModularParts"] := R12
	51	[2011]	SELF     	R12 R7 K22 ; R13 := R7; R12 := R7[0xdbfbf6c0]
	52	[2011]	LOADK    	R14 := 3.000000
	53	[2011]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	54	[2011]	SETTABLE 	R11 K21 R12 ; R11["mGild"] := R12
	55	[2014]	GETTABLE 	R12 R7 K24 ; R12 := R7["mItemName"]
	56	[2014]	EQ       	1 R12 K25 ; if R12 == "" then PC := 60
	57	[2014]	JMP      	60 ; PC := 60
	58	[2015]	GETTABLE 	R12 R7 K24 ; R12 := R7["mItemName"]
	59	[2015]	SETTABLE 	R11 K26 R12 ; R11["CustomName"] := R12
	60	[2018]	TEST     	R1 0 ; if not R1 then PC := 71
	61	[2018]	JMP      	71 ; PC := 71
	62	[2018]	GETGLOBAL	R12 K4 ; R12 := 0x7b998233
	63	[2018]	GETGLOBAL	R13 K27 ; R13 := mCrewShipWeaponSkinsLoader
	64	[2018]	CALL     	R12 2 2 ; R12 := R12(R13)
	65	[2018]	TEST     	R12 0 ; if not R12 then PC := 71
	66	[2018]	JMP      	71 ; PC := 71
	67	[2019]	GETGLOBAL	R12 K28 ; R12 := mCrewShipWeaponSkinsToLoad
	68	[2019]	SELF     	R13 R8 K29 ; R14 := R8; R13 := R8[0xed4e0128]
	69	[2019]	CALL     	R13 2 2 ; R13 := R13(R14)
	70	[2019]	SETTABLE 	R12 R13 K30 ; R12[R13] := true
	71	[2022]	GETGLOBAL	R12 K31 ; R12 := 0x33bdd652
	72	[2022]	GETTABLE 	R12 R12 K32 ; R12 := R12[0x23d5322f]
	73	[2022]	MOVE     	R13 R2 ; R13 := R2
	74	[2022]	MOVE     	R14 R11 ; R14 := R11
	75	[2022]	CALL     	R12 3 1 ; R12(R13,R14)
	76	[1998]	FORLOOP  	R3 9 ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
	77	[2027]	RETURN   	R2 2 ; return R2 
	78	[2028]	RETURN   	R0 1 ; return 

function #48 <?:2030,2051> (57 instructions, 228 bytes at 00000211132F87E0)
3 params, 16 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[2031]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 5
	2	[2031]	JMP      	5 ; PC := 5
	3	[2032]	NEWTABLE 	R3 0 0 ; R3 := {}
	4	[2032]	MOVE     	R2 R3 ; R2 := R3
	5	[2035]	LOADK    	R3 := 1.000000
	6	[2035]	LEN      	R4 R0 ; R4 := # R0
	7	[2035]	LOADK    	R5 := 1.000000
	8	[2035]	FORPREP  	R3 55 ; R3 -= R5; PC := 55
	9	[2036]	GETTABLE 	R7 R0 R6 ; R7 := R0[R6]
	10	[2037]	GETTABLE 	R8 R7 K1 ; R8 := R7["mItemType"]
	11	[2039]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	12	[2039]	MOVE     	R10 R8 ; R10 := R8
	13	[2039]	CALL     	R9 2 2 ; R9 := R9(R10)
	14	[2039]	TEST     	R9 1 ; if R9 then PC := 55
	15	[2039]	JMP      	55 ; PC := 55
	16	[2040]	GETUPVAL 	R9 U0 ; R9 := U0
	17	[2040]	SELF     	R9 R9 K3 ; R10 := R9; R9 := R9[0x105074fb]
	18	[2040]	MOVE     	R11 R8 ; R11 := R8
	19	[2040]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	20	[2042]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	21	[2042]	MOVE     	R11 R9 ; R11 := R9
	22	[2042]	CALL     	R10 2 2 ; R10 := R10(R11)
	23	[2042]	TEST     	R10 1 ; if R10 then PC := 55
	24	[2042]	JMP      	55 ; PC := 55
	25	[2042]	SELF     	R10 R9 K4 ; R11 := R9; R10 := R9[0xfe9eb1a5]
	26	[2042]	CALL     	R10 2 2 ; R10 := R10(R11)
	27	[2042]	EQ       	0 R10 R1 ; if R10 ~= R1 then PC := 55
	28	[2042]	JMP      	55 ; PC := 55
	29	[2042]	GETTABLE 	R10 R7 K5 ; R10 := R7["mItemCount"]
	30	[2042]	LT       	0 K6 R10 ; if 0.000000 >= R10 then PC := 55
	31	[2042]	JMP      	55 ; PC := 55
	32	[2043]	NEWTABLE 	R10 0 6 ; R10 := {}
	33	[2043]	SETTABLE 	R10 K7 R8 ; R10["ItemType"] := R8
	34	[2043]	SETTABLE 	R10 K8 R9 ; R10["mStoreItem"] := R9
	35	[2043]	GETGLOBAL	R11 K10 ; R11 := 0xae91e43b
	36	[2043]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x42b04007]
	37	[2043]	GETGLOBAL	R13 K12 ; R13 := 0x64fb1586
	38	[2043]	SELF     	R14 R9 K13 ; R15 := R9; R14 := R9[0xd3a9d01f]
	39	[2043]	CALL     	R14 2 0 ; R14,... := R14(R15)
	40	[2043]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	41	[2043]	OP_LOADBOOL	R14 0 0 ; R14 := false
	42	[2043]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	43	[2043]	SETTABLE 	R10 K9 R11 ; R10["Name"] := R11
	44	[2043]	SETTABLE 	R10 K14 R7 ; R10["Item"] := R7
	45	[2044]	GETTABLE 	R11 R7 K5 ; R11 := R7["mItemCount"]
	46	[2044]	SETTABLE 	R10 K15 R11 ; R10["ItemCount"] := R11
	47	[2044]	GETGLOBAL	R11 K17 ; R11 := 0x6c97a788
	48	[2044]	GETTABLE 	R11 R11 K18 ; R11 := R11["InvalidItemID"]
	49	[2044]	SETTABLE 	R10 K16 R11 ; R10["UID"] := R11
	50	[2045]	GETGLOBAL	R11 K19 ; R11 := 0x33bdd652
	51	[2045]	GETTABLE 	R11 R11 K20 ; R11 := R11[0x23d5322f]
	52	[2045]	MOVE     	R12 R2 ; R12 := R2
	53	[2045]	MOVE     	R13 R10 ; R13 := R10
	54	[2045]	CALL     	R11 3 1 ; R11(R12,R13)
	55	[2035]	FORLOOP  	R3 9 ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
	56	[2050]	RETURN   	R2 2 ; return R2 
	57	[2051]	RETURN   	R0 1 ; return 

function #49 <?:2053,2055> (5 instructions, 20 bytes at 00000211132F8BD0)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2054]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2054]	MOVE     	R3 R0 ; R3 := R0
	3	[2054]	MOVE     	R4 R1 ; R4 := R1
	4	[2054]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2055]	RETURN   	R0 1 ; return 

function #50 <?:2057,2058> (1 instruction, 4 bytes at 00000211132F8CC0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2058]	RETURN   	R0 1 ; return 

function #51 <?:2060,2083> (61 instructions, 244 bytes at 00000211132F8D90)
2 params, 6 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[2061]	TEST     	R0 1 ; if R0 then PC := 3
	2	[2061]	JMP      	3 ; PC := 3
	3	[2064]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[2064]	GETTABLE 	R2 R2 K1 ; R2 := R2["BackgroundMovie"]
	5	[2064]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	6	[2064]	LOADK    	R4 K3 ; R4 := "ShowBlockingMessage"
	7	[2064]	LOADK    	R5 K4 ; R5 := "0"
	8	[2064]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	9	[2065]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[2065]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x8fbd62e4]
	11	[2065]	LOADK    	R3 K6 ; R3 := "OnUpdateSessionSettings"
	12	[2065]	CALL     	R2 2 1 ; R2(R3)
	13	[2067]	GETGLOBAL	R2 K7 ; R2 := 0x25d99d89
	14	[2067]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xdfa0cbbf]
	15	[2067]	CALL     	R2 2 1 ; R2(R3)
	16	[2069]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	17	[2069]	GETGLOBAL	R3 K10 ; R3 := mShipSuit
	18	[2069]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[2069]	TEST     	R2 1 ; if R2 then PC := 44
	20	[2069]	JMP      	44 ; PC := 44
	21	[2070]	GETGLOBAL	R2 K7 ; R2 := 0x25d99d89
	22	[2070]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x62c81b76]
	23	[2070]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[2071]	GETGLOBAL	R3 K10 ; R3 := mShipSuit
	25	[2071]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x62f4c7cf]
	26	[2071]	GETTABLE 	R5 R2 K13 ; R5 := R2["mCrewShipLoadOut"]
	27	[2071]	CALL     	R3 3 1 ; R3(R4,R5)
	28	[2072]	GETGLOBAL	R3 K9 ; R3 := 0x7b998233
	29	[2072]	GETGLOBAL	R4 K14 ; R4 := mShipAvatar
	30	[2072]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[2072]	TEST     	R3 1 ; if R3 then PC := 44
	32	[2072]	JMP      	44 ; PC := 44
	33	[2072]	GETGLOBAL	R3 K9 ; R3 := 0x7b998233
	34	[2072]	GETGLOBAL	R4 K0 ; R4 := _T
	35	[2072]	GETTABLE 	R4 R4 K15 ; R4 := R4["ConvertCapacityToShields"]
	36	[2072]	CALL     	R3 2 2 ; R3 := R3(R4)
	37	[2072]	TEST     	R3 1 ; if R3 then PC := 44
	38	[2072]	JMP      	44 ; PC := 44
	39	[2073]	GETGLOBAL	R3 K0 ; R3 := _T
	40	[2073]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x99417eee]
	41	[2073]	GETGLOBAL	R4 K14 ; R4 := mShipAvatar
	42	[2073]	GETGLOBAL	R5 K10 ; R5 := mShipSuit
	43	[2073]	CALL     	R3 3 1 ; R3(R4,R5)
	44	[2077]	GETGLOBAL	R3 K9 ; R3 := 0x7b998233
	45	[2077]	GETGLOBAL	R4 K0 ; R4 := _T
	46	[2077]	GETTABLE 	R4 R4 K17 ; R4 := R4["mTrigger"]
	47	[2077]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[2077]	TEST     	R3 1 ; if R3 then PC := 58
	49	[2077]	JMP      	58 ; PC := 58
	50	[2078]	GETGLOBAL	R3 K0 ; R3 := _T
	51	[2078]	GETTABLE 	R3 R3 K17 ; R3 := R3["mTrigger"]
	52	[2078]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0x8eb2112d]
	53	[2078]	LOADK    	R5 K19 ; R5 := "Close"
	54	[2078]	CALL     	R3 3 1 ; R3(R4,R5)
	55	[2079]	GETGLOBAL	R3 K0 ; R3 := _T
	56	[2079]	SETTABLE 	R3 K17 K20 ; R3["mTrigger"] := nil
	57	[2079]	JMP      	61 ; PC := 61
	58	[2081]	GETGLOBAL	R3 K21 ; R3 := 0xae91e43b
	59	[2081]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0x32302b4a]
	60	[2081]	CALL     	R3 2 1 ; R3(R4)
	61	[2083]	RETURN   	R0 1 ; return 

function #52 <?:2085,2095> (28 instructions, 112 bytes at 00000211132F91C0)
2 params, 11 slots, 0 upvalues, 0 locals, 9 constants, 1 function
	1	[2086]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[2086]	MOVE     	R3 R0 ; R3 := R0
	3	[2086]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2086]	TEST     	R2 1 ; if R2 then PC := 28
	5	[2086]	JMP      	28 ; PC := 28
	6	[2087]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x1d75805c]
	7	[2087]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2088]	GETGLOBAL	R3 K2 ; R3 := 0x25312c9b
	9	[2088]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	10	[2088]	LOADK    	R5 K4 ; R5 := "TopLeftContainer"
	11	[2088]	LOADK    	R6 := 0.000000
	12	[2088]	NEWTABLE 	R7 1 0 ; R7 := {}
	13	[2093]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	14	[2093]	MOVE     	R0 R0 ; R0 := R0
	15	[2093]	MOVE     	R0 R2 ; R0 := R2
	16	[2093]	MOVE     	R0 R1 ; R0 := R1
	17	[2093]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	18	[2093]	NEWTABLE 	R8 1 0 ; R8 := {}
	19	[2093]	LOADK    	R9 := 1.000000
	20	[2093]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	21	[2093]	GETGLOBAL	R9 K6 ; R9 := 0x5bced4c4
	22	[2093]	GETTABLE 	R9 R9 K7 ; R9 := R9[0xe4a5b3ca]
	23	[2093]	SUB      	R10 R1 R2 ; R10 := R1 - R2
	24	[2093]	CALL     	R9 2 2 ; R9 := R9(R10)
	25	[2093]	MUL      	R9 R9 K8 ; R9 := R9 * 2.500000
	26	[2088]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	27	[2093]	CLOSE    	R2 ; SAVE R2,...
	28	[2095]	RETURN   	R0 1 ; return 

function #53 <?:2097,2101> (17 instructions, 68 bytes at 00000211132F95C0)
1 param, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2098]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[2098]	JMP      	4 ; PC := 4
	3	[2098]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[2098]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[2099]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	6	[2099]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	7	[2099]	LOADK    	R3 K3 ; R3 := "TopLeftContainer"
	8	[2099]	LOADK    	R4 := 11.000000
	9	[2099]	MOVE     	R5 R0 ; R5 := R0
	10	[2099]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	11	[2100]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	12	[2100]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	13	[2100]	LOADK    	R3 K4 ; R3 := "TopRightContainer"
	14	[2100]	LOADK    	R4 := 11.000000
	15	[2100]	MOVE     	R5 R0 ; R5 := R0
	16	[2100]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	17	[2101]	RETURN   	R0 1 ; return 

function #54 <?:2103,2118> (43 instructions, 172 bytes at 00000211132F97B0)
0 params, 5 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[2104]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2104]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	3	[2104]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2104]	TEST     	R0 1 ; if R0 then PC := 41
	5	[2104]	JMP      	41 ; PC := 41
	6	[2105]	GETGLOBAL	R0 K1 ; R0 := mShipSuit
	7	[2105]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x68d708a7]
	8	[2105]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[2105]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5ef3783b]
	10	[2105]	LOADK    	R2 := 6.000000
	11	[2105]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	12	[2106]	GETTABLE 	R1 R0 K5 ; R1 := R0["mItemType"]
	13	[2107]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	14	[2107]	MOVE     	R3 R1 ; R3 := R1
	15	[2107]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[2107]	TEST     	R2 1 ; if R2 then PC := 41
	17	[2107]	JMP      	41 ; PC := 41
	18	[2108]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	19	[2108]	GETGLOBAL	R4 K7 ; R4 := 0xbadb32c0
	20	[2108]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[2108]	TEST     	R2 0 ; if not R2 then PC := 26
	22	[2108]	JMP      	26 ; PC := 26
	23	[2109]	LOADK    	R2 K8 ; R2 := "_Caballero"
	24	[2109]	RETURN   	R2 2 ; return R2 
	25	[2109]	JMP      	41 ; PC := 41
	26	[2110]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	27	[2110]	GETGLOBAL	R4 K9 ; R4 := 0x366fa086
	28	[2110]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	29	[2110]	TEST     	R2 0 ; if not R2 then PC := 34
	30	[2110]	JMP      	34 ; PC := 34
	31	[2111]	LOADK    	R2 K10 ; R2 := "_SunGem"
	32	[2111]	RETURN   	R2 2 ; return R2 
	33	[2111]	JMP      	41 ; PC := 41
	34	[2112]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	35	[2112]	GETGLOBAL	R4 K11 ; R4 := 0xb72600d8
	36	[2112]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	37	[2112]	TEST     	R2 0 ; if not R2 then PC := 41
	38	[2112]	JMP      	41 ; PC := 41
	39	[2113]	LOADK    	R2 K12 ; R2 := "_Ghost"
	40	[2113]	RETURN   	R2 2 ; return R2 
	41	[2117]	LOADK    	R2 K13 ; R2 := ""
	42	[2117]	RETURN   	R2 2 ; return R2 
	43	[2118]	RETURN   	R0 1 ; return 

function #55 <?:2120,2135> (43 instructions, 172 bytes at 00000211132F9B50)
0 params, 5 slots, 4 upvalues, 0 locals, 10 constants, 0 functions
	1	[2121]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2121]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	3	[2121]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2121]	TEST     	R0 1 ; if R0 then PC := 41
	5	[2121]	JMP      	41 ; PC := 41
	6	[2122]	GETGLOBAL	R0 K1 ; R0 := mShipSuit
	7	[2122]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x68d708a7]
	8	[2122]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[2122]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5ef3783b]
	10	[2122]	LOADK    	R2 := 6.000000
	11	[2122]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	12	[2123]	GETTABLE 	R1 R0 K5 ; R1 := R0["mItemType"]
	13	[2124]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	14	[2124]	MOVE     	R3 R1 ; R3 := R1
	15	[2124]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[2124]	TEST     	R2 1 ; if R2 then PC := 41
	17	[2124]	JMP      	41 ; PC := 41
	18	[2125]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	19	[2125]	GETGLOBAL	R4 K7 ; R4 := 0xbadb32c0
	20	[2125]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[2125]	TEST     	R2 0 ; if not R2 then PC := 26
	22	[2125]	JMP      	26 ; PC := 26
	23	[2126]	GETUPVAL 	R2 U0 ; R2 := U0
	24	[2126]	RETURN   	R2 2 ; return R2 
	25	[2126]	JMP      	41 ; PC := 41
	26	[2127]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	27	[2127]	GETGLOBAL	R4 K8 ; R4 := 0xb72600d8
	28	[2127]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	29	[2127]	TEST     	R2 0 ; if not R2 then PC := 34
	30	[2127]	JMP      	34 ; PC := 34
	31	[2128]	GETUPVAL 	R2 U1 ; R2 := U1
	32	[2128]	RETURN   	R2 2 ; return R2 
	33	[2128]	JMP      	41 ; PC := 41
	34	[2129]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	35	[2129]	GETGLOBAL	R4 K9 ; R4 := 0x366fa086
	36	[2129]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	37	[2129]	TEST     	R2 0 ; if not R2 then PC := 41
	38	[2129]	JMP      	41 ; PC := 41
	39	[2130]	GETUPVAL 	R2 U2 ; R2 := U2
	40	[2130]	RETURN   	R2 2 ; return R2 
	41	[2134]	GETUPVAL 	R2 U3 ; R2 := U3
	42	[2134]	RETURN   	R2 2 ; return R2 
	43	[2135]	RETURN   	R0 1 ; return 

function #56 <?:2137,2152> (64 instructions, 256 bytes at 00000211132F9E10)
0 params, 5 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[2138]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2138]	GETGLOBAL	R1 K1 ; R1 := mShipAvatar
	3	[2138]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2138]	TEST     	R0 1 ; if R0 then PC := 64
	5	[2138]	JMP      	64 ; PC := 64
	6	[2139]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[2139]	CALL     	R0 1 2 ; R0 := R0()
	8	[2140]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[2140]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x2a1108a9]
	10	[2140]	LOADK    	R2 K4 ; R2 := "WeaponPathMover"
	11	[2140]	MOVE     	R3 R0 ; R3 := R0
	12	[2140]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	13	[2140]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	14	[2140]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xd1586535]
	15	[2140]	CALL     	R3 2 0 ; R3,... := R3(R4)
	16	[2140]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	17	[2140]	SETGLOBALHASH	R1 K2 ; mWeaponMover := R1
	18	[2141]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	19	[2141]	GETGLOBAL	R2 K2 ; R2 := mWeaponMover
	20	[2141]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[2141]	TEST     	R1 1 ; if R1 then PC := 36
	22	[2141]	JMP      	36 ; PC := 36
	23	[2142]	GETGLOBAL	R1 K2 ; R1 := mWeaponMover
	24	[2142]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5c1f3942]
	25	[2142]	OP_LOADBOOL	R3 1 0 ; R3 := true
	26	[2142]	CALL     	R1 3 1 ; R1(R2,R3)
	27	[2143]	GETGLOBAL	R1 K2 ; R1 := mWeaponMover
	28	[2143]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xd3ac44e0]
	29	[2143]	GETGLOBAL	R3 K8 ; R3 := mEquipment
	30	[2143]	GETTABLE 	R3 R3 K9 ; R3 := R3["mElements"]
	31	[2143]	GETUPVAL 	R4 U2 ; R4 := U2
	32	[2143]	GETTABLE 	R4 R4 K10 ; R4 := R4["ORDINANCE"]
	33	[2143]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	34	[2143]	GETTABLE 	R3 R3 K11 ; R3 := R3["MoverTime"]
	35	[2143]	CALL     	R1 3 1 ; R1(R2,R3)
	36	[2146]	GETUPVAL 	R1 U1 ; R1 := U1
	37	[2146]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x2a1108a9]
	38	[2146]	LOADK    	R2 K13 ; R2 := "CosmeticPathMover"
	39	[2146]	MOVE     	R3 R0 ; R3 := R0
	40	[2146]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	41	[2146]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	42	[2146]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xd1586535]
	43	[2146]	CALL     	R3 2 0 ; R3,... := R3(R4)
	44	[2146]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	45	[2146]	SETGLOBALHASH	R1 K12 ; mCosmeticMover := R1
	46	[2147]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	47	[2147]	GETGLOBAL	R2 K12 ; R2 := mCosmeticMover
	48	[2147]	CALL     	R1 2 2 ; R1 := R1(R2)
	49	[2147]	TEST     	R1 1 ; if R1 then PC := 64
	50	[2147]	JMP      	64 ; PC := 64
	51	[2148]	GETGLOBAL	R1 K12 ; R1 := mCosmeticMover
	52	[2148]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5c1f3942]
	53	[2148]	OP_LOADBOOL	R3 1 0 ; R3 := true
	54	[2148]	CALL     	R1 3 1 ; R1(R2,R3)
	55	[2149]	GETGLOBAL	R1 K12 ; R1 := mCosmeticMover
	56	[2149]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xd3ac44e0]
	57	[2149]	GETGLOBAL	R3 K8 ; R3 := mEquipment
	58	[2149]	GETTABLE 	R3 R3 K9 ; R3 := R3["mElements"]
	59	[2149]	GETUPVAL 	R4 U2 ; R4 := U2
	60	[2149]	GETTABLE 	R4 R4 K10 ; R4 := R4["ORDINANCE"]
	61	[2149]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	62	[2149]	GETTABLE 	R3 R3 K11 ; R3 := R3["MoverTime"]
	63	[2149]	CALL     	R1 3 1 ; R1(R2,R3)
	64	[2152]	RETURN   	R0 1 ; return 

function #57 <?:2154,2200> (115 instructions, 460 bytes at 00000211132FA270)
2 params, 15 slots, 6 upvalues, 0 locals, 23 constants, 2 functions
	1	[2155]	GETGLOBAL	R2 K0 ; R2 := mInteriorCustomization
	2	[2155]	TEST     	R2 0 ; if not R2 then PC := 6
	3	[2155]	JMP      	6 ; PC := 6
	4	[2156]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[2156]	JMP      	18 ; PC := 18
	6	[2157]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 18
	7	[2157]	JMP      	18 ; PC := 18
	8	[2158]	GETUPVAL 	R2 U1 ; R2 := U1
	9	[2158]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xb73d420f]
	10	[2158]	CALL     	R2 1 2 ; R2 := R2()
	11	[2159]	GETUPVAL 	R3 U1 ; R3 := U1
	12	[2159]	GETTABLE 	R3 R3 K3 ; R3 := R3["UI_MODE_IN_SPACE_HUB"]
	13	[2159]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 17
	14	[2159]	JMP      	17 ; PC := 17
	15	[2160]	GETUPVAL 	R0 U2 ; R0 := U2
	16	[2160]	JMP      	18 ; PC := 18
	17	[2162]	GETUPVAL 	R0 U3 ; R0 := U3
	18	[2166]	GETGLOBAL	R3 K4 ; R3 := mCameraTag
	19	[2166]	EQ       	0 R3 R0 ; if R3 ~= R0 then PC := 23
	20	[2166]	JMP      	23 ; PC := 23
	21	[2166]	TEST     	R1 0 ; if not R1 then PC := 113
	22	[2166]	JMP      	113 ; PC := 113
	23	[2166]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	24	[2166]	GETGLOBAL	R4 K6 ; R4 := mShipAvatar
	25	[2166]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[2166]	TEST     	R3 1 ; if R3 then PC := 113
	27	[2166]	JMP      	113 ; PC := 113
	28	[2167]	GETGLOBAL	R3 K7 ; R3 := mAvatar
	29	[2167]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x0b4bcfb6]
	30	[2167]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[2168]	GETGLOBAL	R4 K5 ; R4 := 0x7b998233
	32	[2168]	MOVE     	R5 R3 ; R5 := R3
	33	[2168]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[2168]	TEST     	R4 1 ; if R4 then PC := 112
	35	[2168]	JMP      	112 ; PC := 112
	36	[2169]	LOADNIL  	R4 R4 ; R4 := nil
	37	[2170]	GETGLOBAL	R5 K0 ; R5 := mInteriorCustomization
	38	[2170]	TEST     	R5 0 ; if not R5 then PC := 52
	39	[2170]	JMP      	52 ; PC := 52
	40	[2171]	GETUPVAL 	R5 U4 ; R5 := U4
	41	[2171]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x2a1108a9]
	42	[2171]	MOVE     	R6 R0 ; R6 := R0
	43	[2171]	GETGLOBAL	R7 K10 ; R7 := mShipSuit
	44	[2171]	SELF     	R7 R7 K11 ; R8 := R7; R7 := R7[0x772b791d]
	45	[2171]	GETGLOBAL	R9 K6 ; R9 := mShipAvatar
	46	[2171]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0xd1586535]
	47	[2171]	CALL     	R9 2 0 ; R9,... := R9(R10)
	48	[2171]	CALL     	R7 0 0 ; R7,... := R7(R8,...)
	49	[2171]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	50	[2171]	MOVE     	R4 R5 ; R4 := R5
	51	[2171]	JMP      	60 ; PC := 60
	52	[2173]	GETUPVAL 	R5 U4 ; R5 := U4
	53	[2173]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x2a1108a9]
	54	[2173]	MOVE     	R6 R0 ; R6 := R0
	55	[2173]	GETGLOBAL	R7 K6 ; R7 := mShipAvatar
	56	[2173]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0xd1586535]
	57	[2173]	CALL     	R7 2 0 ; R7,... := R7(R8)
	58	[2173]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	59	[2173]	MOVE     	R4 R5 ; R4 := R5
	60	[2175]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	61	[2175]	MOVE     	R6 R4 ; R6 := R4
	62	[2175]	CALL     	R5 2 2 ; R5 := R5(R6)
	63	[2175]	TEST     	R5 1 ; if R5 then PC := 112
	64	[2175]	JMP      	112 ; PC := 112
	65	[2176]	SETGLOBALHASH	R4 K13 ; mCameraSpot := R4
	66	[2177]	GETGLOBAL	R5 K14 ; R5 := 0x89326c93
	67	[2177]	SELF     	R5 R5 K15 ; R6 := R5; R5 := R5[0x7c1a0374]
	68	[2177]	CALL     	R5 2 2 ; R5 := R5(R6)
	69	[2178]	GETGLOBAL	R6 K4 ; R6 := mCameraTag
	70	[2178]	GETUPVAL 	R7 U0 ; R7 := U0
	71	[2178]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 83
	72	[2178]	JMP      	83 ; PC := 83
	73	[2178]	GETUPVAL 	R6 U0 ; R6 := U0
	74	[2178]	EQ       	1 R0 R6 ; if R0 == R6 then PC := 83
	75	[2178]	JMP      	83 ; PC := 83
	76	[2178]	GETGLOBAL	R6 K4 ; R6 := mCameraTag
	77	[2178]	GETUPVAL 	R7 U5 ; R7 := U5
	78	[2178]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 83
	79	[2178]	JMP      	83 ; PC := 83
	80	[2178]	GETUPVAL 	R6 U5 ; R6 := U5
	81	[2178]	EQ       	0 R0 R6 ; if R0 ~= R6 then PC := 101
	82	[2178]	JMP      	101 ; PC := 101
	83	[2179]	GETGLOBAL	R6 K16 ; R6 := 0x25312c9b
	84	[2179]	GETGLOBAL	R7 K17 ; R7 := 0xae91e43b
	85	[2179]	LOADK    	R8 K18 ; R8 := "Camera"
	86	[2179]	LOADK    	R9 := 2.000000
	87	[2179]	NEWTABLE 	R10 1 0 ; R10 := {}
	88	[2179]	CLOSURE  	R11 0 ; R11 := closure(Function #1)
	89	[2179]	MOVE     	R0 R5 ; R0 := R5
	90	[2179]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	91	[2179]	NEWTABLE 	R11 1 0 ; R11 := {}
	92	[2179]	LOADK    	R12 := 1.000000
	93	[2179]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	94	[2179]	LOADK    	R12 K20 ; R12 := 0.200000
	95	[2179]	LOADK    	R13 := 0.000000
	96	[2189]	CLOSURE  	R14 1 ; R14 := closure(Function #2)
	97	[2189]	MOVE     	R0 R3 ; R0 := R3
	98	[2189]	MOVE     	R0 R5 ; R0 := R5
	99	[2179]	CALL     	R6 9 1 ; R6(R7,R8,R9,R10,R11,R12,R13,R14)
	100	[2189]	JMP      	108 ; PC := 108
	101	[2191]	SELF     	R6 R3 K21 ; R7 := R3; R6 := R3[0x14c7f7dd]
	102	[2191]	GETGLOBAL	R8 K13 ; R8 := mCameraSpot
	103	[2191]	LOADK    	R9 := 0.250000
	104	[2191]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	105	[2192]	SELF     	R6 R5 K22 ; R7 := R5; R6 := R5[0xb6df3e50]
	106	[2192]	LOADK    	R8 := 0.000000
	107	[2192]	CALL     	R6 3 1 ; R6(R7,R8)
	108	[2194]	SETGLOBALHASH	R0 K4 ; mCameraTag := R0
	109	[2195]	OP_LOADBOOL	R6 1 0 ; R6 := true
	110	[2195]	RETURN   	R6 2 ; return R6 
	111	[2195]	CLOSE    	R5 ; SAVE R5,...
	112	[2197]	CLOSE    	R3 ; SAVE R3,...
	113	[2199]	OP_LOADBOOL	R3 0 0 ; R3 := false
	114	[2199]	RETURN   	R3 2 ; return R3 
	115	[2200]	RETURN   	R0 1 ; return 

function #58 <?:2202,2206> (4 instructions, 16 bytes at 00000211132FAE30)
1 param, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2203]	SETGLOBALHASH	R0 K0 ; mInteriorCustomization := R0
	2	[2205]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2205]	CALL     	R1 1 1 ; R1()
	4	[2206]	RETURN   	R0 1 ; return 

function #59 <?:2208,2221> (49 instructions, 196 bytes at 00000211132FAF20)
1 param, 4 slots, 4 upvalues, 0 locals, 9 constants, 0 functions
	1	[2209]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2209]	GETGLOBAL	R2 K1 ; R2 := mCosmeticMover
	3	[2209]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2209]	TEST     	R1 1 ; if R1 then PC := 46
	5	[2209]	JMP      	46 ; PC := 46
	6	[2209]	GETTABLE 	R1 R0 K2 ; R1 := R0["mMoverTime"]
	7	[2209]	EQ       	1 R1 K3 ; if R1 == nil then PC := 46
	8	[2209]	JMP      	46 ; PC := 46
	9	[2210]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2210]	GETUPVAL 	R2 U1 ; R2 := U1
	11	[2210]	CALL     	R2 1 0 ; R2,... := R2()
	12	[2210]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	13	[2210]	TEST     	R1 0 ; if not R1 then PC := 20
	14	[2210]	JMP      	20 ; PC := 20
	15	[2211]	GETGLOBAL	R1 K1 ; R1 := mCosmeticMover
	16	[2211]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd3ac44e0]
	17	[2211]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	18	[2211]	CALL     	R1 3 1 ; R1(R2,R3)
	19	[2211]	JMP      	41 ; PC := 41
	20	[2212]	GETGLOBAL	R1 K5 ; R1 := 0x5bced4c4
	21	[2212]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe4a5b3ca]
	22	[2212]	GETGLOBAL	R2 K1 ; R2 := mCosmeticMover
	23	[2212]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x1d75805c]
	24	[2212]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[2212]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	26	[2212]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	27	[2212]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[2212]	LT       	0 K8 R1 ; if 0.325000 >= R1 then PC := 41
	29	[2212]	JMP      	41 ; PC := 41
	30	[2213]	GETUPVAL 	R1 U0 ; R1 := U0
	31	[2213]	LOADNIL  	R2 R2 ; R2 := nil
	32	[2213]	CALL     	R1 2 1 ; R1(R2)
	33	[2214]	GETUPVAL 	R1 U0 ; R1 := U0
	34	[2214]	GETUPVAL 	R2 U1 ; R2 := U1
	35	[2214]	CALL     	R2 1 0 ; R2,... := R2()
	36	[2214]	CALL     	R1 0 1 ; R1(R2,...)
	37	[2215]	GETGLOBAL	R1 K1 ; R1 := mCosmeticMover
	38	[2215]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd3ac44e0]
	39	[2215]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	40	[2215]	CALL     	R1 3 1 ; R1(R2,R3)
	41	[2217]	GETUPVAL 	R1 U2 ; R1 := U2
	42	[2217]	GETGLOBAL	R2 K1 ; R2 := mCosmeticMover
	43	[2217]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	44	[2217]	CALL     	R1 3 1 ; R1(R2,R3)
	45	[2217]	JMP      	49 ; PC := 49
	46	[2219]	GETUPVAL 	R1 U0 ; R1 := U0
	47	[2219]	GETUPVAL 	R2 U3 ; R2 := U3
	48	[2219]	CALL     	R1 2 1 ; R1(R2)
	49	[2221]	RETURN   	R0 1 ; return 

function #60 <?:2223,2231> (27 instructions, 108 bytes at 00000211132FB210)
1 param, 6 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[2224]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsList
	2	[2224]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomizationList"]
	3	[2224]	SETTABLE 	R1 K2 R0 ; R1["mSelectedElement"] := R0
	4	[2225]	GETTABLE 	R1 R0 K3 ; R1 := R0["mSelectState"]
	5	[2225]	TEST     	R1 0 ; if not R1 then PC := 27
	6	[2225]	JMP      	27 ; PC := 27
	7	[2226]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[2226]	GETTABLE 	R2 R0 K3 ; R2 := R0["mSelectState"]
	9	[2226]	MOVE     	R3 R0 ; R3 := R0
	10	[2226]	CALL     	R1 3 1 ; R1(R2,R3)
	11	[2227]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	12	[2227]	GETGLOBAL	R2 K5 ; R2 := _T
	13	[2227]	GETTABLE 	R2 R2 K6 ; R2 := R2["SetSquadOverlayTitle"]
	14	[2227]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2227]	TEST     	R1 1 ; if R1 then PC := 27
	16	[2227]	JMP      	27 ; PC := 27
	17	[2228]	GETGLOBAL	R1 K5 ; R1 := _T
	18	[2228]	GETTABLE 	R1 R1 K7 ; R1 := R1[0xdf29a9d6]
	19	[2228]	GETGLOBAL	R2 K8 ; R2 := mCategories
	20	[2228]	GETTABLE 	R2 R2 K2 ; R2 := R2["mSelectedElement"]
	21	[2228]	GETTABLE 	R2 R2 K9 ; R2 := R2["Name"]
	22	[2228]	GETGLOBAL	R3 K10 ; R3 := 0x603636ad
	23	[2228]	GETTABLE 	R4 R0 K11 ; R4 := R0["mDefaultText"]
	24	[2228]	NEWTABLE 	R5 0 0 ; R5 := {}
	25	[2228]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	26	[2228]	CALL     	R1 0 1 ; R1(R2,...)
	27	[2231]	RETURN   	R0 1 ; return 

function #61 <?:2233,2245> (31 instructions, 124 bytes at 00000211132FB470)
2 params, 9 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[2234]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2234]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x5d3d561a]
	3	[2234]	MOVE     	R3 R0 ; R3 := R0
	4	[2234]	LOADK    	R4 K1 ; R4 := " &"
	5	[2234]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	6	[2235]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 21
	7	[2235]	JMP      	21 ; PC := 21
	8	[2236]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	9	[2236]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x42b04007]
	10	[2236]	LOADK    	R5 K5 ; R5 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
	11	[2236]	OP_LOADBOOL	R6 0 0 ; R6 := false
	12	[2236]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	13	[2236]	LOADK    	R4 K6 ; R4 := " "
	14	[2236]	GETGLOBAL	R5 K7 ; R5 := 0x68b0afb4
	15	[2236]	MOVE     	R6 R0 ; R6 := R0
	16	[2236]	MOVE     	R7 R2 ; R7 := R2
	17	[2236]	MOVE     	R8 R2 ; R8 := R2
	18	[2236]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	19	[2236]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	20	[2236]	RETURN   	R3 2 ; return R3 
	21	[2239]	GETGLOBAL	R3 K8 ; R3 := 0x09423272
	22	[2239]	MOVE     	R4 R0 ; R4 := R0
	23	[2239]	LOADK    	R5 := 1.000000
	24	[2239]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	25	[2240]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 29
	26	[2240]	JMP      	29 ; PC := 29
	27	[2241]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Menu/Name_Profanity_Error"
	28	[2241]	RETURN   	R4 2 ; return R4 
	29	[2244]	LOADNIL  	R4 R4 ; R4 := nil
	30	[2244]	RETURN   	R4 2 ; return R4 
	31	[2245]	RETURN   	R0 1 ; return 

function #62 <?:2247,2265> (43 instructions, 172 bytes at 00000211132FB6E0)
3 params, 8 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[2248]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	2	[2248]	MOVE     	R4 R2 ; R4 := R2
	3	[2248]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[2248]	EQ       	0 R3 K2 ; if R3 ~= 4.000000 then PC := 39
	5	[2248]	JMP      	39 ; PC := 39
	6	[2249]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	7	[2249]	GETGLOBAL	R4 K4 ; R4 := mShipSuit
	8	[2249]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[2249]	TEST     	R3 1 ; if R3 then PC := 34
	10	[2249]	JMP      	34 ; PC := 34
	11	[2250]	EQ       	0 R0 K5 ; if R0 ~= "" then PC := 18
	12	[2250]	JMP      	18 ; PC := 18
	13	[2251]	GETGLOBAL	R3 K4 ; R3 := mShipSuit
	14	[2251]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x8e886a73]
	15	[2251]	GETGLOBAL	R5 K7 ; R5 := EMPTY_SYMBOL
	16	[2251]	CALL     	R3 3 1 ; R3(R4,R5)
	17	[2251]	JMP      	34 ; PC := 34
	18	[2253]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[2253]	MOVE     	R4 R0 ; R4 := R0
	20	[2253]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[2254]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 30
	22	[2254]	JMP      	30 ; PC := 30
	23	[2255]	GETGLOBAL	R4 K4 ; R4 := mShipSuit
	24	[2255]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x8e886a73]
	25	[2255]	GETGLOBAL	R6 K9 ; R6 := 0x0469f296
	26	[2255]	MOVE     	R7 R0 ; R7 := R0
	27	[2255]	CALL     	R6 2 0 ; R6,... := R6(R7)
	28	[2255]	CALL     	R4 0 1 ; R4(R5,...)
	29	[2255]	JMP      	34 ; PC := 34
	30	[2257]	GETUPVAL 	R4 U1 ; R4 := U1
	31	[2257]	GETTABLE 	R4 R4 K10 ; R4 := R4[0xa53f5e12]
	32	[2257]	MOVE     	R5 R3 ; R5 := R3
	33	[2257]	CALL     	R4 2 1 ; R4(R5)
	34	[2262]	GETGLOBAL	R4 K11 ; R4 := 0x9ba7909f
	35	[2262]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x7e17ae26]
	36	[2262]	LOADK    	R6 K13 ; R6 := "UpdateRailjackText"
	37	[2262]	LOADK    	R7 K5 ; R7 := ""
	38	[2262]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	39	[2264]	GETUPVAL 	R4 U2 ; R4 := U2
	40	[2264]	LOADNIL  	R5 R5 ; R5 := nil
	41	[2264]	OP_LOADBOOL	R6 1 0 ; R6 := true
	42	[2264]	CALL     	R4 3 1 ; R4(R5,R6)
	43	[2265]	RETURN   	R0 1 ; return 

function #63 <?:2267,2269> (6 instructions, 24 bytes at 00000211132FB9E0)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2268]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[2268]	MOVE     	R4 R0 ; R4 := R0
	3	[2268]	MOVE     	R5 R1 ; R5 := R1
	4	[2268]	MOVE     	R6 R2 ; R6 := R2
	5	[2268]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[2269]	RETURN   	R0 1 ; return 

function #64 <?:2271,2275> (8 instructions, 32 bytes at 00000211245DD5C0)
2 params, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[2272]	TEST     	R0 1 ; if R0 then PC := 8
	2	[2272]	JMP      	8 ; PC := 8
	3	[2273]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2273]	MOVE     	R3 R1 ; R3 := R1
	5	[2273]	LOADK    	R4 K0 ; R4 := ""
	6	[2273]	LOADK    	R5 := 4.000000
	7	[2273]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	8	[2275]	RETURN   	R0 1 ; return 

function #65 <?:2277,2284> (25 instructions, 100 bytes at 00000211245DD6E0)
1 param, 9 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[2278]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2278]	MOVE     	R2 R0 ; R2 := R0
	3	[2278]	CALL     	R1 2 1 ; R1(R2)
	4	[2279]	LOADK    	R1 K0 ; R1 := ""
	5	[2280]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	6	[2280]	GETGLOBAL	R3 K2 ; R3 := mShipSuit
	7	[2280]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2280]	TEST     	R2 1 ; if R2 then PC := 16
	9	[2280]	JMP      	16 ; PC := 16
	10	[2281]	GETGLOBAL	R2 K3 ; R2 := 0x64fb1586
	11	[2281]	GETGLOBAL	R3 K2 ; R3 := mShipSuit
	12	[2281]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xd3a9d01f]
	13	[2281]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[2281]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	15	[2281]	MOVE     	R1 R2 ; R1 := R2
	16	[2283]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[2283]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xef3e3165]
	18	[2283]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	19	[2283]	LOADK    	R4 K7 ; R4 := "/Lotus/Language/Railjack/RenameRailjack"
	20	[2283]	MOVE     	R5 R1 ; R5 := R1
	21	[2283]	LOADK    	R6 := 50.000000
	22	[2283]	LOADK    	R7 K8 ; R7 := "ConfirmShipText"
	23	[2283]	LOADK    	R8 K9 ; R8 := "OSKConfirmShipText"
	24	[2283]	CALL     	R2 7 1 ; R2(R3,R4,R5,R6,R7,R8)
	25	[2284]	RETURN   	R0 1 ; return 

function #66 <?:2286,2309> (55 instructions, 220 bytes at 00000211245DD970)
1 param, 10 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[2287]	GETGLOBAL	R1 K0 ; R1 := 0x60130201
	2	[2287]	LOADK    	R2 := 192.000000
	3	[2287]	LOADK    	R3 := 192.000000
	4	[2287]	LOADK    	R4 := 192.000000
	5	[2287]	LOADK    	R5 := 255.000000
	6	[2287]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	7	[2288]	GETGLOBAL	R2 K1 ; R2 := mInteriorCustomization
	8	[2288]	TEST     	R2 0 ; if not R2 then PC := 32
	9	[2288]	JMP      	32 ; PC := 32
	10	[2289]	GETTABLE 	R2 R0 K3 ; R2 := R0["mLabel"]
	11	[2289]	SETGLOBALHASH	R2 K2 ; mInteriorWearAndTear := R2
	12	[2290]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[2290]	CALL     	R2 1 2 ; R2 := R2()
	14	[2291]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	15	[2291]	MOVE     	R4 R2 ; R4 := R2
	16	[2291]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[2291]	TEST     	R3 1 ; if R3 then PC := 26
	18	[2291]	JMP      	26 ; PC := 26
	19	[2292]	GETTABLE 	R3 R2 K5 ; R3 := R2["mColors"]
	20	[2293]	SELF     	R4 R3 K6 ; R5 := R3; R4 := R3[0x697019d0]
	21	[2293]	LOADK    	R6 := 7.000000
	22	[2293]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	23	[2293]	TEST     	R4 0 ; if not R4 then PC := 26
	24	[2293]	JMP      	26 ; PC := 26
	25	[2294]	GETTABLE 	R1 R3 K8 ; R1 := R3["mEnergyColor1"]
	26	[2297]	GETUPVAL 	R4 U1 ; R4 := U1
	27	[2297]	LOADK    	R5 := 7.000000
	28	[2297]	SELF     	R6 R1 K9 ; R7 := R1; R6 := R1[0xa5d5c8f6]
	29	[2297]	CALL     	R6 2 0 ; R6,... := R6(R7)
	30	[2297]	CALL     	R4 0 1 ; R4(R5,...)
	31	[2297]	JMP      	55 ; PC := 55
	32	[2299]	GETTABLE 	R4 R0 K3 ; R4 := R0["mLabel"]
	33	[2299]	SETGLOBALHASH	R4 K10 ; mWearAndTear := R4
	34	[2300]	GETUPVAL 	R4 U2 ; R4 := U2
	35	[2300]	CALL     	R4 1 2 ; R4 := R4()
	36	[2301]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	37	[2301]	MOVE     	R6 R4 ; R6 := R4
	38	[2301]	CALL     	R5 2 2 ; R5 := R5(R6)
	39	[2301]	TEST     	R5 1 ; if R5 then PC := 50
	40	[2301]	JMP      	50 ; PC := 50
	41	[2302]	SELF     	R5 R4 K11 ; R6 := R4; R5 := R4[0x8e62760a]
	42	[2302]	LOADK    	R7 := 0.000000
	43	[2302]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	44	[2303]	SELF     	R6 R5 K6 ; R7 := R5; R6 := R5[0x697019d0]
	45	[2303]	LOADK    	R8 := 5.000000
	46	[2303]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	47	[2303]	TEST     	R6 0 ; if not R6 then PC := 50
	48	[2303]	JMP      	50 ; PC := 50
	49	[2304]	GETTABLE 	R1 R5 K12 ; R1 := R5["mEmissiveColor1"]
	50	[2307]	GETUPVAL 	R6 U1 ; R6 := U1
	51	[2307]	LOADK    	R7 := 5.000000
	52	[2307]	SELF     	R8 R1 K9 ; R9 := R1; R8 := R1[0xa5d5c8f6]
	53	[2307]	CALL     	R8 2 0 ; R8,... := R8(R9)
	54	[2307]	CALL     	R6 0 1 ; R6(R7,...)
	55	[2309]	RETURN   	R0 1 ; return 

function #67 <?:2311,2507> (435 instructions, 1740 bytes at 00000211245DDD00)
0 params, 22 slots, 15 upvalues, 0 locals, 115 constants, 0 functions
	1	[2312]	GETGLOBAL	R0 K0 ; R0 := mCosmeticsList
	2	[2312]	GETTABLE 	R0 R0 K1 ; R0 := R0["CustomizationList"]
	3	[2312]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x7c09c373]
	4	[2312]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[2312]	OP_LOADBOOL	R3 1 0 ; R3 := true
	6	[2312]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	7	[2313]	GETGLOBAL	R0 K0 ; R0 := mCosmeticsList
	8	[2313]	GETTABLE 	R0 R0 K1 ; R0 := R0["CustomizationList"]
	9	[2313]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2313]	CALL     	R1 1 2 ; R1 := R1()
	11	[2313]	SETTABLE 	R0 K3 R1 ; R0["mActiveColors"] := R1
	12	[2314]	GETGLOBAL	R0 K0 ; R0 := mCosmeticsList
	13	[2314]	GETTABLE 	R0 R0 K1 ; R0 := R0["CustomizationList"]
	14	[2314]	SETTABLE 	R0 K4 K6 ; R0["mProductCategory"] := 6.000000
	15	[2316]	GETGLOBAL	R0 K7 ; R0 := 0x7b998233
	16	[2316]	GETGLOBAL	R1 K8 ; R1 := mShipSuit
	17	[2316]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[2316]	TEST     	R0 1 ; if R0 then PC := 25
	19	[2316]	JMP      	25 ; PC := 25
	20	[2316]	GETGLOBAL	R0 K7 ; R0 := 0x7b998233
	21	[2316]	GETGLOBAL	R1 K9 ; R1 := mShipAvatar
	22	[2316]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[2316]	TEST     	R0 0 ; if not R0 then PC := 26
	24	[2316]	JMP      	26 ; PC := 26
	25	[2317]	RETURN   	R0 1 ; return 
	26	[2320]	GETUPVAL 	R0 U1 ; R0 := U1
	27	[2320]	CALL     	R0 1 2 ; R0 := R0()
	28	[2321]	GETGLOBAL	R1 K7 ; R1 := 0x7b998233
	29	[2321]	MOVE     	R2 R0 ; R2 := R0
	30	[2321]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[2321]	TEST     	R1 1 ; if R1 then PC := 48
	32	[2321]	JMP      	48 ; PC := 48
	33	[2322]	SELF     	R1 R0 K10 ; R2 := R0; R1 := R0[0x8e62760a]
	34	[2322]	LOADK    	R3 := 0.000000
	35	[2322]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	36	[2323]	SELF     	R2 R1 K12 ; R3 := R1; R2 := R1[0x697019d0]
	37	[2323]	LOADK    	R4 := 5.000000
	38	[2323]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	39	[2323]	TEST     	R2 0 ; if not R2 then PC := 48
	40	[2323]	JMP      	48 ; PC := 48
	41	[2324]	GETGLOBAL	R2 K14 ; R2 := 0x5bced4c4
	42	[2324]	GETTABLE 	R2 R2 K15 ; R2 := R2[0x55f27c30]
	43	[2324]	GETTABLE 	R3 R1 K16 ; R3 := R1["mEmissiveColor1"]
	44	[2324]	GETTABLE 	R3 R3 K17 ; R3 := R3["alpha"]
	45	[2324]	DIV      	R3 R3 K18 ; R3 := R3 / 2.550000
	46	[2324]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[2324]	SETGLOBALHASH	R2 K13 ; mWearAndTear := R2
	48	[2327]	GETUPVAL 	R2 U2 ; R2 := U2
	49	[2327]	CALL     	R2 1 2 ; R2 := R2()
	50	[2328]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	51	[2328]	MOVE     	R4 R2 ; R4 := R2
	52	[2328]	CALL     	R3 2 2 ; R3 := R3(R4)
	53	[2328]	TEST     	R3 1 ; if R3 then PC := 68
	54	[2328]	JMP      	68 ; PC := 68
	55	[2329]	GETTABLE 	R3 R2 K19 ; R3 := R2["mColors"]
	56	[2330]	SELF     	R4 R3 K12 ; R5 := R3; R4 := R3[0x697019d0]
	57	[2330]	LOADK    	R6 := 7.000000
	58	[2330]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	59	[2330]	TEST     	R4 0 ; if not R4 then PC := 68
	60	[2330]	JMP      	68 ; PC := 68
	61	[2331]	GETGLOBAL	R4 K14 ; R4 := 0x5bced4c4
	62	[2331]	GETTABLE 	R4 R4 K15 ; R4 := R4[0x55f27c30]
	63	[2331]	GETTABLE 	R5 R3 K21 ; R5 := R3["mEnergyColor1"]
	64	[2331]	GETTABLE 	R5 R5 K17 ; R5 := R5["alpha"]
	65	[2331]	DIV      	R5 R5 K18 ; R5 := R5 / 2.550000
	66	[2331]	CALL     	R4 2 2 ; R4 := R4(R5)
	67	[2331]	SETGLOBALHASH	R4 K20 ; mInteriorWearAndTear := R4
	68	[2335]	LOADK    	R4 := 50.000000
	69	[2336]	GETGLOBAL	R5 K13 ; R5 := mWearAndTear
	70	[2337]	GETGLOBAL	R6 K22 ; R6 := mInteriorCustomization
	71	[2337]	TEST     	R6 0 ; if not R6 then PC := 74
	72	[2337]	JMP      	74 ; PC := 74
	73	[2338]	GETGLOBAL	R5 K20 ; R5 := mInteriorWearAndTear
	74	[2341]	NEWTABLE 	R6 13 0 ; R6 := {}
	75	[2341]	NEWTABLE 	R7 0 10 ; R7 := {}
	76	[2343]	GETUPVAL 	R8 U3 ; R8 := U3
	77	[2343]	GETTABLE 	R8 R8 K24 ; R8 := R8["RENAME_SHIP"]
	78	[2343]	SETTABLE 	R7 K23 R8 ; R7["mSelectState"] := R8
	79	[2344]	GETUPVAL 	R8 U4 ; R8 := U4
	80	[2344]	GETTABLE 	R8 R8 K24 ; R8 := R8["RENAME_SHIP"]
	81	[2344]	SETTABLE 	R7 K25 R8 ; R7["mCategory"] := R8
	82	[2345]	SETTABLE 	R7 K26 K27 ; R7["NameTag"] := "/Lotus/Language/Railjack/RenameRailjack"
	83	[2346]	SETTABLE 	R7 K28 K29 ; R7["mExterior"] := true
	84	[2347]	SETTABLE 	R7 K30 K31 ; R7["mMoverTime"] := 0.000000
	85	[2348]	GETGLOBAL	R8 K33 ; R8 := 0x310765c9
	86	[2348]	SETTABLE 	R7 K32 R8 ; R7["DefaultIcon"] := R8
	87	[2349]	SETTABLE 	R7 K34 K35 ; R7["DefaultIconWidth"] := 0.800000
	88	[2350]	SETTABLE 	R7 K36 K35 ; R7["DefaultIconHeight"] := 0.800000
	89	[2351]	GETUPVAL 	R8 U5 ; R8 := U5
	90	[2351]	SETTABLE 	R7 K37 R8 ; R7["mOnReleasedCallback"] := R8
	91	[2352]	GETUPVAL 	R8 U6 ; R8 := U6
	92	[2352]	GETTABLE 	R8 R8 K39 ; R8 := R8["Types"]
	93	[2352]	GETTABLE 	R8 R8 K40 ; R8 := R8["BUTTON"]
	94	[2352]	SETTABLE 	R7 K38 R8 ; R7["Type"] := R8
	95	[2353]	NEWTABLE 	R8 0 7 ; R8 := {}
	96	[2355]	GETUPVAL 	R9 U3 ; R9 := U3
	97	[2355]	GETTABLE 	R9 R9 K41 ; R9 := R9["ATTACHMENTS"]
	98	[2355]	SETTABLE 	R8 K23 R9 ; R8["mSelectState"] := R9
	99	[2356]	GETUPVAL 	R9 U4 ; R9 := U4
	100	[2356]	GETTABLE 	R9 R9 K41 ; R9 := R9["ATTACHMENTS"]
	101	[2356]	SETTABLE 	R8 K25 R9 ; R8["mCategory"] := R9
	102	[2357]	SETTABLE 	R8 K26 K42 ; R8["NameTag"] := "/Lotus/Language/Railjack/Loadout_Decals"
	103	[2358]	SETTABLE 	R8 K28 K29 ; R8["mExterior"] := true
	104	[2359]	SETTABLE 	R8 K30 K43 ; R8["mMoverTime"] := 0.450000
	105	[2360]	GETUPVAL 	R9 U6 ; R9 := U6
	106	[2360]	GETTABLE 	R9 R9 K39 ; R9 := R9["Types"]
	107	[2360]	GETTABLE 	R9 R9 K44 ; R9 := R9["ITEM_SELECTION"]
	108	[2360]	SETTABLE 	R8 K38 R9 ; R8["Type"] := R9
	109	[2361]	SETTABLE 	R8 K45 K29 ; R8["mDecal"] := true
	110	[2362]	NEWTABLE 	R9 0 7 ; R9 := {}
	111	[2364]	GETUPVAL 	R10 U3 ; R10 := U3
	112	[2364]	GETTABLE 	R10 R10 K46 ; R10 := R10["SKIN_SELECTION"]
	113	[2364]	SETTABLE 	R9 K23 R10 ; R9["mSelectState"] := R10
	114	[2365]	GETUPVAL 	R10 U4 ; R10 := U4
	115	[2365]	GETTABLE 	R10 R10 K41 ; R10 := R10["ATTACHMENTS"]
	116	[2365]	SETTABLE 	R9 K25 R10 ; R9["mCategory"] := R10
	117	[2366]	SETTABLE 	R9 K26 K47 ; R9["NameTag"] := "/Lotus/Language/Menu/Store_Skins"
	118	[2367]	SETTABLE 	R9 K28 K29 ; R9["mExterior"] := true
	119	[2368]	GETUPVAL 	R10 U6 ; R10 := U6
	120	[2368]	GETTABLE 	R10 R10 K39 ; R10 := R10["Types"]
	121	[2368]	GETTABLE 	R10 R10 K44 ; R10 := R10["ITEM_SELECTION"]
	122	[2368]	SETTABLE 	R9 K38 R10 ; R9["Type"] := R10
	123	[2369]	SETTABLE 	R9 K48 K6 ; R9["mSlot"] := 6.000000
	124	[2370]	SETTABLE 	R9 K49 K29 ; R9["mHullSkin"] := true
	125	[2371]	NEWTABLE 	R10 0 6 ; R10 := {}
	126	[2373]	GETUPVAL 	R11 U4 ; R11 := U4
	127	[2373]	GETTABLE 	R11 R11 K41 ; R11 := R11["ATTACHMENTS"]
	128	[2373]	SETTABLE 	R10 K25 R11 ; R10["mCategory"] := R11
	129	[2374]	SETTABLE 	R10 K26 K50 ; R10["NameTag"] := "/Lotus/Language/Menu/Orbiter_WearAndTear"
	130	[2375]	GETUPVAL 	R11 U6 ; R11 := U6
	131	[2375]	GETTABLE 	R11 R11 K39 ; R11 := R11["Types"]
	132	[2375]	GETTABLE 	R11 R11 K51 ; R11 := R11["VALUE_SELECTOR"]
	133	[2375]	SETTABLE 	R10 K38 R11 ; R10["Type"] := R11
	134	[2376]	GETUPVAL 	R11 U7 ; R11 := U7
	135	[2376]	SETTABLE 	R10 K52 R11 ; R10["mValueChangedCallback"] := R11
	136	[2377]	SETTABLE 	R10 K53 R5 ; R10["mInitialValue"] := R5
	137	[2378]	SETTABLE 	R10 K54 R4 ; R10["mDefaultValue"] := R4
	138	[2379]	NEWTABLE 	R11 0 6 ; R11 := {}
	139	[2381]	GETUPVAL 	R12 U3 ; R12 := U3
	140	[2381]	GETTABLE 	R12 R12 K55 ; R12 := R12["COLOR_PICKER"]
	141	[2381]	SETTABLE 	R11 K23 R12 ; R11["mSelectState"] := R12
	142	[2382]	GETUPVAL 	R12 U4 ; R12 := U4
	143	[2382]	GETTABLE 	R12 R12 K56 ; R12 := R12["COLORS"]
	144	[2382]	SETTABLE 	R11 K25 R12 ; R11["mCategory"] := R12
	145	[2383]	SETTABLE 	R11 K26 K50 ; R11["NameTag"] := "/Lotus/Language/Menu/Orbiter_WearAndTear"
	146	[2384]	SETTABLE 	R11 K57 K29 ; R11["mInterior"] := true
	147	[2385]	NEWTABLE 	R12 1 0 ; R12 := {}
	148	[2385]	LOADK    	R13 := 7.000000
	149	[2385]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	150	[2385]	SETTABLE 	R11 K58 R12 ; R11["mColorRegions"] := R12
	151	[2386]	GETUPVAL 	R12 U6 ; R12 := U6
	152	[2386]	GETTABLE 	R12 R12 K39 ; R12 := R12["Types"]
	153	[2386]	GETTABLE 	R12 R12 K59 ; R12 := R12["COLOR"]
	154	[2386]	SETTABLE 	R11 K38 R12 ; R11["Type"] := R12
	155	[2387]	NEWTABLE 	R12 0 5 ; R12 := {}
	156	[2389]	GETUPVAL 	R13 U3 ; R13 := U3
	157	[2389]	GETTABLE 	R13 R13 K55 ; R13 := R13["COLOR_PICKER"]
	158	[2389]	SETTABLE 	R12 K23 R13 ; R12["mSelectState"] := R13
	159	[2390]	GETUPVAL 	R13 U4 ; R13 := U4
	160	[2390]	GETTABLE 	R13 R13 K56 ; R13 := R13["COLORS"]
	161	[2390]	SETTABLE 	R12 K25 R13 ; R12["mCategory"] := R13
	162	[2391]	SETTABLE 	R12 K26 K60 ; R12["NameTag"] := "/Lotus/Language/Menu/Arsenal_Primary"
	163	[2392]	NEWTABLE 	R13 1 0 ; R13 := {}
	164	[2392]	LOADK    	R14 := 0.000000
	165	[2392]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	166	[2392]	SETTABLE 	R12 K58 R13 ; R12["mColorRegions"] := R13
	167	[2393]	GETUPVAL 	R13 U6 ; R13 := U6
	168	[2393]	GETTABLE 	R13 R13 K39 ; R13 := R13["Types"]
	169	[2393]	GETTABLE 	R13 R13 K59 ; R13 := R13["COLOR"]
	170	[2393]	SETTABLE 	R12 K38 R13 ; R12["Type"] := R13
	171	[2394]	NEWTABLE 	R13 0 5 ; R13 := {}
	172	[2396]	GETUPVAL 	R14 U3 ; R14 := U3
	173	[2396]	GETTABLE 	R14 R14 K55 ; R14 := R14["COLOR_PICKER"]
	174	[2396]	SETTABLE 	R13 K23 R14 ; R13["mSelectState"] := R14
	175	[2397]	GETUPVAL 	R14 U4 ; R14 := U4
	176	[2397]	GETTABLE 	R14 R14 K56 ; R14 := R14["COLORS"]
	177	[2397]	SETTABLE 	R13 K25 R14 ; R13["mCategory"] := R14
	178	[2398]	SETTABLE 	R13 K26 K61 ; R13["NameTag"] := "/Lotus/Language/Menu/Arsenal_Secondary"
	179	[2399]	NEWTABLE 	R14 1 0 ; R14 := {}
	180	[2399]	LOADK    	R15 := 1.000000
	181	[2399]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	182	[2399]	SETTABLE 	R13 K58 R14 ; R13["mColorRegions"] := R14
	183	[2400]	GETUPVAL 	R14 U6 ; R14 := U6
	184	[2400]	GETTABLE 	R14 R14 K39 ; R14 := R14["Types"]
	185	[2400]	GETTABLE 	R14 R14 K59 ; R14 := R14["COLOR"]
	186	[2400]	SETTABLE 	R13 K38 R14 ; R13["Type"] := R14
	187	[2401]	NEWTABLE 	R14 0 5 ; R14 := {}
	188	[2403]	GETUPVAL 	R15 U3 ; R15 := U3
	189	[2403]	GETTABLE 	R15 R15 K55 ; R15 := R15["COLOR_PICKER"]
	190	[2403]	SETTABLE 	R14 K23 R15 ; R14["mSelectState"] := R15
	191	[2404]	GETUPVAL 	R15 U4 ; R15 := U4
	192	[2404]	GETTABLE 	R15 R15 K56 ; R15 := R15["COLORS"]
	193	[2404]	SETTABLE 	R14 K25 R15 ; R14["mCategory"] := R15
	194	[2405]	SETTABLE 	R14 K26 K62 ; R14["NameTag"] := "/Lotus/Language/Menu/Arsenal_TintColor3"
	195	[2406]	NEWTABLE 	R15 1 0 ; R15 := {}
	196	[2406]	LOADK    	R16 := 2.000000
	197	[2406]	SETLIST  	R15 1 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
	198	[2406]	SETTABLE 	R14 K58 R15 ; R14["mColorRegions"] := R15
	199	[2407]	GETUPVAL 	R15 U6 ; R15 := U6
	200	[2407]	GETTABLE 	R15 R15 K39 ; R15 := R15["Types"]
	201	[2407]	GETTABLE 	R15 R15 K59 ; R15 := R15["COLOR"]
	202	[2407]	SETTABLE 	R14 K38 R15 ; R14["Type"] := R15
	203	[2408]	NEWTABLE 	R15 0 5 ; R15 := {}
	204	[2410]	GETUPVAL 	R16 U3 ; R16 := U3
	205	[2410]	GETTABLE 	R16 R16 K55 ; R16 := R16["COLOR_PICKER"]
	206	[2410]	SETTABLE 	R15 K23 R16 ; R15["mSelectState"] := R16
	207	[2411]	GETUPVAL 	R16 U4 ; R16 := U4
	208	[2411]	GETTABLE 	R16 R16 K56 ; R16 := R16["COLORS"]
	209	[2411]	SETTABLE 	R15 K25 R16 ; R15["mCategory"] := R16
	210	[2412]	SETTABLE 	R15 K26 K63 ; R15["NameTag"] := "/Lotus/Language/Menu/Arsenal_TintColor4"
	211	[2413]	NEWTABLE 	R16 1 0 ; R16 := {}
	212	[2413]	LOADK    	R17 := 3.000000
	213	[2413]	SETLIST  	R16 1 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 1
	214	[2413]	SETTABLE 	R15 K58 R16 ; R15["mColorRegions"] := R16
	215	[2414]	GETUPVAL 	R16 U6 ; R16 := U6
	216	[2414]	GETTABLE 	R16 R16 K39 ; R16 := R16["Types"]
	217	[2414]	GETTABLE 	R16 R16 K59 ; R16 := R16["COLOR"]
	218	[2414]	SETTABLE 	R15 K38 R16 ; R15["Type"] := R16
	219	[2415]	NEWTABLE 	R16 0 5 ; R16 := {}
	220	[2417]	GETUPVAL 	R17 U3 ; R17 := U3
	221	[2417]	GETTABLE 	R17 R17 K55 ; R17 := R17["COLOR_PICKER"]
	222	[2417]	SETTABLE 	R16 K23 R17 ; R16["mSelectState"] := R17
	223	[2418]	GETUPVAL 	R17 U4 ; R17 := U4
	224	[2418]	GETTABLE 	R17 R17 K56 ; R17 := R17["COLORS"]
	225	[2418]	SETTABLE 	R16 K25 R17 ; R16["mCategory"] := R17
	226	[2419]	GETGLOBAL	R17 K22 ; R17 := mInteriorCustomization
	227	[2419]	TEST     	R17 0 ; if not R17 then PC := 232
	228	[2419]	JMP      	232 ; PC := 232
	229	[2419]	LOADK    	R17 K64 ; R17 := "/Lotus/Language/Menu/CustomizeShipLighting"
	230	[2419]	TEST     	R17 1 ; if R17 then PC := 233
	231	[2419]	JMP      	233 ; PC := 233
	232	[2419]	LOADK    	R17 K65 ; R17 := "/Lotus/Language/Menu/CustomizeShipEngine"
	233	[2419]	SETTABLE 	R16 K26 R17 ; R16["NameTag"] := R17
	234	[2420]	NEWTABLE 	R17 1 0 ; R17 := {}
	235	[2420]	LOADK    	R18 := 6.000000
	236	[2420]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	237	[2420]	SETTABLE 	R16 K58 R17 ; R16["mColorRegions"] := R17
	238	[2421]	GETUPVAL 	R17 U6 ; R17 := U6
	239	[2421]	GETTABLE 	R17 R17 K39 ; R17 := R17["Types"]
	240	[2421]	GETTABLE 	R17 R17 K59 ; R17 := R17["COLOR"]
	241	[2421]	SETTABLE 	R16 K38 R17 ; R16["Type"] := R17
	242	[2422]	NEWTABLE 	R17 0 6 ; R17 := {}
	243	[2424]	GETUPVAL 	R18 U3 ; R18 := U3
	244	[2424]	GETTABLE 	R18 R18 K55 ; R18 := R18["COLOR_PICKER"]
	245	[2424]	SETTABLE 	R17 K23 R18 ; R17["mSelectState"] := R18
	246	[2425]	GETUPVAL 	R18 U4 ; R18 := U4
	247	[2425]	GETTABLE 	R18 R18 K56 ; R18 := R18["COLORS"]
	248	[2425]	SETTABLE 	R17 K25 R18 ; R17["mCategory"] := R18
	249	[2426]	SETTABLE 	R17 K26 K66 ; R17["NameTag"] := "/Lotus/Language/Menu/Cosmetics_SecondaryColor"
	250	[2427]	SETTABLE 	R17 K28 K29 ; R17["mExterior"] := true
	251	[2428]	NEWTABLE 	R18 1 0 ; R18 := {}
	252	[2428]	LOADK    	R19 := 7.000000
	253	[2428]	SETLIST  	R18 1 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
	254	[2428]	SETTABLE 	R17 K58 R18 ; R17["mColorRegions"] := R18
	255	[2429]	GETUPVAL 	R18 U6 ; R18 := U6
	256	[2429]	GETTABLE 	R18 R18 K39 ; R18 := R18["Types"]
	257	[2429]	GETTABLE 	R18 R18 K59 ; R18 := R18["COLOR"]
	258	[2429]	SETTABLE 	R17 K38 R18 ; R17["Type"] := R18
	259	[2430]	NEWTABLE 	R18 0 6 ; R18 := {}
	260	[2432]	GETUPVAL 	R19 U3 ; R19 := U3
	261	[2432]	GETTABLE 	R19 R19 K55 ; R19 := R19["COLOR_PICKER"]
	262	[2432]	SETTABLE 	R18 K23 R19 ; R18["mSelectState"] := R19
	263	[2433]	GETUPVAL 	R19 U4 ; R19 := U4
	264	[2433]	GETTABLE 	R19 R19 K56 ; R19 := R19["COLORS"]
	265	[2433]	SETTABLE 	R18 K25 R19 ; R18["mCategory"] := R19
	266	[2434]	SETTABLE 	R18 K26 K67 ; R18["NameTag"] := "/Lotus/Language/Menu/Photobooth_PrimaryTextColor"
	267	[2435]	SETTABLE 	R18 K28 K29 ; R18["mExterior"] := true
	268	[2436]	NEWTABLE 	R19 1 0 ; R19 := {}
	269	[2436]	LOADK    	R20 := 5.000000
	270	[2436]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	271	[2436]	SETTABLE 	R18 K58 R19 ; R18["mColorRegions"] := R19
	272	[2437]	GETUPVAL 	R19 U6 ; R19 := U6
	273	[2437]	GETTABLE 	R19 R19 K39 ; R19 := R19["Types"]
	274	[2437]	GETTABLE 	R19 R19 K59 ; R19 := R19["COLOR"]
	275	[2437]	SETTABLE 	R18 K38 R19 ; R18["Type"] := R19
	276	[2438]	NEWTABLE 	R19 0 4 ; R19 := {}
	277	[2440]	GETUPVAL 	R20 U3 ; R20 := U3
	278	[2440]	GETTABLE 	R20 R20 K55 ; R20 := R20["COLOR_PICKER"]
	279	[2440]	SETTABLE 	R19 K23 R20 ; R19["mSelectState"] := R20
	280	[2441]	GETUPVAL 	R20 U4 ; R20 := U4
	281	[2441]	GETTABLE 	R20 R20 K68 ; R20 := R20["ALL_COLORS"]
	282	[2441]	SETTABLE 	R19 K25 R20 ; R19["mCategory"] := R20
	283	[2442]	SETTABLE 	R19 K26 K69 ; R19["NameTag"] := "/Lotus/Language/Menu/Cosmetics_AllColors"
	284	[2443]	GETUPVAL 	R20 U6 ; R20 := U6
	285	[2443]	GETTABLE 	R20 R20 K39 ; R20 := R20["Types"]
	286	[2443]	GETTABLE 	R20 R20 K59 ; R20 := R20["COLOR"]
	287	[2443]	SETTABLE 	R19 K38 R20 ; R19["Type"] := R20
	288	[2445]	SETLIST  	R6 13 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 13
	289	[2447]	LOADK    	R7 := 1.000000
	290	[2447]	LEN      	R8 R6 ; R8 := # R6
	291	[2447]	LOADK    	R9 := 1.000000
	292	[2447]	FORPREP  	R7 419 ; R7 -= R9; PC := 419
	293	[2448]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	294	[2449]	GETGLOBAL	R12 K22 ; R12 := mInteriorCustomization
	295	[2449]	TEST     	R12 0 ; if not R12 then PC := 300
	296	[2449]	JMP      	300 ; PC := 300
	297	[2449]	GETTABLE 	R12 R11 K28 ; R12 := R11["mExterior"]
	298	[2449]	TEST     	R12 0 ; if not R12 then PC := 306
	299	[2449]	JMP      	306 ; PC := 306
	300	[2449]	GETGLOBAL	R12 K22 ; R12 := mInteriorCustomization
	301	[2449]	TEST     	R12 1 ; if R12 then PC := 419
	302	[2449]	JMP      	419 ; PC := 419
	303	[2449]	GETTABLE 	R12 R11 K57 ; R12 := R11["mInterior"]
	304	[2449]	TEST     	R12 1 ; if R12 then PC := 419
	305	[2449]	JMP      	419 ; PC := 419
	306	[2450]	SETTABLE 	R11 K70 K29 ; R11["mTitleCase"] := true
	307	[2451]	GETUPVAL 	R12 U8 ; R12 := U8
	308	[2451]	SETTABLE 	R11 K71 R12 ; R11["mOnFocusedCallback"] := R12
	309	[2452]	GETTABLE 	R12 R11 K37 ; R12 := R11["mOnReleasedCallback"]
	310	[2452]	TEST     	R12 1 ; if R12 then PC := 313
	311	[2452]	JMP      	313 ; PC := 313
	312	[2452]	GETUPVAL 	R12 U9 ; R12 := U9
	313	[2452]	SETTABLE 	R11 K37 R12 ; R11["mOnReleasedCallback"] := R12
	314	[2454]	GETTABLE 	R12 R11 K25 ; R12 := R11["mCategory"]
	315	[2454]	GETUPVAL 	R13 U4 ; R13 := U4
	316	[2454]	GETTABLE 	R13 R13 K41 ; R13 := R13["ATTACHMENTS"]
	317	[2454]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 391
	318	[2454]	JMP      	391 ; PC := 391
	319	[2455]	LOADNIL  	R12 R13 ; R12 := R13 := nil
	320	[2457]	LOADK    	R14 := 553.000000
	321	[2458]	GETTABLE 	R15 R11 K45 ; R15 := R11["mDecal"]
	322	[2458]	TEST     	R15 0 ; if not R15 then PC := 345
	323	[2458]	JMP      	345 ; PC := 345
	324	[2459]	GETGLOBAL	R15 K72 ; R15 := 0x25d99d89
	325	[2459]	SELF     	R15 R15 K73 ; R16 := R15; R15 := R15[0x62c81b76]
	326	[2459]	CALL     	R15 2 2 ; R15 := R15(R16)
	327	[2459]	SELF     	R15 R15 K74 ; R16 := R15; R15 := R15[0x999c1a14]
	328	[2459]	CALL     	R15 2 2 ; R15 := R15(R16)
	329	[2460]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	330	[2460]	MOVE     	R17 R15 ; R17 := R15
	331	[2460]	CALL     	R16 2 2 ; R16 := R16(R17)
	332	[2460]	TEST     	R16 1 ; if R16 then PC := 374
	333	[2460]	JMP      	374 ; PC := 374
	334	[2460]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	335	[2460]	GETTABLE 	R17 R15 K75 ; R17 := R15["mItemType"]
	336	[2460]	CALL     	R16 2 2 ; R16 := R16(R17)
	337	[2460]	TEST     	R16 1 ; if R16 then PC := 374
	338	[2460]	JMP      	374 ; PC := 374
	339	[2461]	GETUPVAL 	R16 U10 ; R16 := U10
	340	[2461]	SELF     	R16 R16 K76 ; R17 := R16; R16 := R16[0x105074fb]
	341	[2461]	GETTABLE 	R18 R15 K75 ; R18 := R15["mItemType"]
	342	[2461]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	343	[2461]	MOVE     	R12 R16 ; R12 := R16
	344	[2462]	JMP      	374 ; PC := 374
	345	[2463]	GETTABLE 	R16 R11 K48 ; R16 := R11["mSlot"]
	346	[2463]	EQ       	1 R16 K77 ; if R16 == nil then PC := 374
	347	[2463]	JMP      	374 ; PC := 374
	348	[2464]	GETUPVAL 	R16 U10 ; R16 := U10
	349	[2464]	SELF     	R16 R16 K76 ; R17 := R16; R16 := R16[0x105074fb]
	350	[2464]	GETGLOBAL	R18 K8 ; R18 := mShipSuit
	351	[2464]	SELF     	R18 R18 K78 ; R19 := R18; R18 := R18[0x0911ae7c]
	352	[2464]	GETTABLE 	R20 R11 K48 ; R20 := R11["mSlot"]
	353	[2464]	CALL     	R18 3 0 ; R18,... := R18(R19,R20)
	354	[2464]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	355	[2464]	MOVE     	R13 R16 ; R13 := R16
	356	[2465]	GETGLOBAL	R16 K8 ; R16 := mShipSuit
	357	[2465]	SELF     	R16 R16 K79 ; R17 := R16; R16 := R16[0x68d708a7]
	358	[2465]	CALL     	R16 2 2 ; R16 := R16(R17)
	359	[2465]	SELF     	R16 R16 K80 ; R17 := R16; R16 := R16[0x2540510f]
	360	[2465]	GETTABLE 	R18 R11 K48 ; R18 := R11["mSlot"]
	361	[2465]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	362	[2466]	GETGLOBAL	R17 K7 ; R17 := 0x7b998233
	363	[2466]	MOVE     	R18 R16 ; R18 := R16
	364	[2466]	CALL     	R17 2 2 ; R17 := R17(R18)
	365	[2466]	TEST     	R17 0 ; if not R17 then PC := 369
	366	[2466]	JMP      	369 ; PC := 369
	367	[2467]	MOVE     	R12 R13 ; R12 := R13
	368	[2467]	JMP      	374 ; PC := 374
	369	[2469]	GETUPVAL 	R17 U10 ; R17 := U10
	370	[2469]	SELF     	R17 R17 K76 ; R18 := R17; R17 := R17[0x105074fb]
	371	[2469]	MOVE     	R19 R16 ; R19 := R16
	372	[2469]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	373	[2469]	MOVE     	R12 R17 ; R12 := R17
	374	[2473]	NEWTABLE 	R17 0 8 ; R17 := {}
	375	[2475]	GETUPVAL 	R18 U11 ; R18 := U11
	376	[2475]	SETTABLE 	R17 K82 R18 ; R17["GetItemsFunction"] := R18
	377	[2476]	GETUPVAL 	R18 U12 ; R18 := U12
	378	[2476]	SETTABLE 	R17 K83 R18 ; R17["OnItemSelectedFunction"] := R18
	379	[2477]	GETUPVAL 	R18 U13 ; R18 := U13
	380	[2477]	SETTABLE 	R17 K84 R18 ; R17["OnSelectionDoneFunction"] := R18
	381	[2478]	SETTABLE 	R17 K85 R12 ; R17["CurrSelection"] := R12
	382	[2479]	SETTABLE 	R17 K86 R13 ; R17["DefaultSelection"] := R13
	383	[2480]	SETTABLE 	R17 K87 R14 ; R17["GridWidth"] := R14
	384	[2481]	SETTABLE 	R17 K88 K29 ; R17["SkipSort"] := true
	385	[2482]	SETTABLE 	R17 K89 K29 ; R17["HidePrice"] := true
	386	[2483]	SETTABLE 	R11 K81 R17 ; R11["ItemSelectionData"] := R17
	387	[2485]	GETUPVAL 	R17 U14 ; R17 := U14
	388	[2485]	MOVE     	R18 R11 ; R18 := R11
	389	[2485]	CALL     	R17 2 2 ; R17 := R17(R18)
	390	[2485]	SETTABLE 	R11 K90 R17 ; R11["mUnequipItem"] := R17
	391	[2488]	GETTABLE 	R17 R11 K38 ; R17 := R11["Type"]
	392	[2488]	GETUPVAL 	R18 U6 ; R18 := U6
	393	[2488]	GETTABLE 	R18 R18 K39 ; R18 := R18["Types"]
	394	[2488]	GETTABLE 	R18 R18 K44 ; R18 := R18["ITEM_SELECTION"]
	395	[2488]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 413
	396	[2488]	JMP      	413 ; PC := 413
	397	[2489]	SETTABLE 	R11 K91 K29 ; R11["BigButton"] := true
	398	[2490]	SETTABLE 	R11 K92 K93 ; R11["ElementHeight"] := 76.000000
	399	[2491]	SETTABLE 	R11 K94 K95 ; R11["ElementSeparation"] := 3.000000
	400	[2492]	GETGLOBAL	R17 K97 ; R17 := 0x0032441c
	401	[2492]	GETTABLE 	R17 R17 K98 ; R17 := R17["UITexture_SettingsIcons"]
	402	[2492]	GETUPVAL 	R18 U6 ; R18 := U6
	403	[2492]	GETTABLE 	R18 R18 K99 ; R18 := R18["IconTypes"]
	404	[2492]	GETTABLE 	R18 R18 K100 ; R18 := R18["NO_ITEM"]
	405	[2492]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	406	[2492]	SETTABLE 	R11 K96 R17 ; R11["mNoneIcon"] := R17
	407	[2493]	SETTABLE 	R11 K101 K102 ; R11["mNoneIconAlpha"] := 80.000000
	408	[2494]	NEWTABLE 	R17 0 2 ; R17 := {}
	409	[2495]	SETTABLE 	R17 K104 K105 ; R17["X"] := -1.500000
	410	[2496]	SETTABLE 	R17 K106 K31 ; R17["Y"] := 0.000000
	411	[2497]	SETTABLE 	R11 K103 R17 ; R11["IconOffset"] := R17
	412	[2498]	SETTABLE 	R11 K107 K108 ; R11["IconPadding"] := 2.500000
	413	[2501]	GETGLOBAL	R17 K0 ; R17 := mCosmeticsList
	414	[2501]	GETTABLE 	R17 R17 K1 ; R17 := R17["CustomizationList"]
	415	[2501]	SELF     	R17 R17 K109 ; R18 := R17; R17 := R17[0xbad4316f]
	416	[2501]	MOVE     	R19 R11 ; R19 := R11
	417	[2501]	OP_LOADBOOL	R20 1 0 ; R20 := true
	418	[2501]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	419	[2447]	FORLOOP  	R7 293 ; R7 += R9; if R7 <= R8 then begin PC := 293; R10 := R7 end
	420	[2504]	GETGLOBAL	R17 K0 ; R17 := mCosmeticsList
	421	[2504]	GETTABLE 	R17 R17 K1 ; R17 := R17["CustomizationList"]
	422	[2504]	SELF     	R17 R17 K110 ; R18 := R17; R17 := R17[0x71e9ac81]
	423	[2504]	LOADNIL  	R19 R19 ; R19 := nil
	424	[2504]	OP_LOADBOOL	R20 1 0 ; R20 := true
	425	[2504]	OP_LOADBOOL	R21 1 0 ; R21 := true
	426	[2504]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	427	[2506]	GETGLOBAL	R17 K0 ; R17 := mCosmeticsList
	428	[2506]	GETGLOBAL	R18 K0 ; R18 := mCosmeticsList
	429	[2506]	GETTABLE 	R18 R18 K1 ; R18 := R18["CustomizationList"]
	430	[2506]	GETTABLE 	R18 R18 K112 ; R18 := R18["mElements"]
	431	[2506]	GETTABLE 	R18 R18 K113 ; R18 := R18[1.000000]
	432	[2506]	GETTABLE 	R18 R18 K114 ; R18 := R18["mButtons"]
	433	[2506]	LEN      	R18 R18 ; R18 := # R18
	434	[2506]	SETTABLE 	R17 K111 R18 ; R17["mNumButtons"] := R18
	435	[2507]	RETURN   	R0 1 ; return 

function #68 <?:2509,2600> (64 instructions, 256 bytes at 00000211245DF580)
0 params, 8 slots, 8 upvalues, 0 locals, 27 constants, 8 functions
	1	[2510]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[2510]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x42b04007]
	3	[2510]	LOADK    	R2 K2 ; R2 := "/Lotus/Language/Railjack/Railjack"
	4	[2510]	OP_LOADBOOL	R3 0 0 ; R3 := false
	5	[2510]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	6	[2511]	GETGLOBAL	R1 K3 ; R1 := 0x2d0fad09
	7	[2511]	LOADK    	R2 K4 ; R2 := "EE.Interface.Components.List"
	8	[2511]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2512]	GETTABLE 	R2 R1 K6 ; R2 := R1[0x9383bc56]
	10	[2512]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	11	[2512]	LOADK    	R4 K7 ; R4 := "TopLeftContainer.Categories.Category"
	12	[2512]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	13	[2512]	SETGLOBALHASH	R2 K5 ; mCategories := R2
	14	[2513]	GETGLOBAL	R2 K5 ; R2 := mCategories
	15	[2513]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x1e5b5cfe]
	16	[2513]	LOADK    	R4 K9 ; R4 := "ConfigureTabSelected"
	17	[2513]	LOADK    	R5 K10 ; R5 := "ConfigureTabFocused"
	18	[2513]	LOADK    	R6 K11 ; R6 := "ConfigureTabUnfocused"
	19	[2513]	LOADK    	R7 K12 ; R7 := "ConfigureTabPressed"
	20	[2513]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	21	[2514]	GETGLOBAL	R2 K5 ; R2 := mCategories
	22	[2514]	SETTABLE 	R2 K13 K14 ; R2["mForcedHorizontalSeparation"] := 89.000000
	23	[2515]	GETGLOBAL	R2 K5 ; R2 := mCategories
	24	[2515]	SETTABLE 	R2 K15 K16 ; R2["mForcedVerticalSeparation"] := 0.000000
	25	[2516]	GETGLOBAL	R2 K5 ; R2 := mCategories
	26	[2519]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	27	[2519]	SETTABLE 	R2 K17 R3 ; R2["mClipCreatedCallback"] := R3
	28	[2520]	GETGLOBAL	R2 K5 ; R2 := mCategories
	29	[2527]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	30	[2527]	GETUPVAL 	R0 U0 ; R0 := U0
	31	[2527]	SETTABLE 	R2 K18 R3 ; R2["mOnFocusedCallback"] := R3
	32	[2528]	GETGLOBAL	R2 K5 ; R2 := mCategories
	33	[2534]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	34	[2534]	SETTABLE 	R2 K19 R3 ; R2["mOnUnfocusedCallback"] := R3
	35	[2535]	GETGLOBAL	R2 K5 ; R2 := mCategories
	36	[2562]	CLOSURE  	R3 3 ; R3 := closure(Function #4)
	37	[2562]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[2562]	GETUPVAL 	R0 U1 ; R0 := U1
	39	[2562]	GETUPVAL 	R0 U2 ; R0 := U2
	40	[2562]	GETUPVAL 	R0 U3 ; R0 := U3
	41	[2562]	GETUPVAL 	R0 U4 ; R0 := U4
	42	[2562]	GETUPVAL 	R0 U5 ; R0 := U5
	43	[2562]	MOVE     	R0 R0 ; R0 := R0
	44	[2562]	GETUPVAL 	R0 U6 ; R0 := U6
	45	[2562]	SETTABLE 	R2 K20 R3 ; R2["mOnSelectedCallback"] := R3
	46	[2563]	GETGLOBAL	R2 K5 ; R2 := mCategories
	47	[2572]	CLOSURE  	R3 4 ; R3 := closure(Function #5)
	48	[2572]	GETUPVAL 	R0 U0 ; R0 := U0
	49	[2572]	SETTABLE 	R2 K21 R3 ; R2["UpdateFocusedColors"] := R3
	50	[2573]	GETGLOBAL	R2 K5 ; R2 := mCategories
	51	[2581]	CLOSURE  	R3 5 ; R3 := closure(Function #6)
	52	[2581]	SETTABLE 	R2 K22 R3 ; R2["UpdateElementColors"] := R3
	53	[2582]	GETGLOBAL	R2 K5 ; R2 := mCategories
	54	[2595]	CLOSURE  	R3 6 ; R3 := closure(Function #7)
	55	[2595]	GETUPVAL 	R0 U7 ; R0 := U7
	56	[2595]	SETTABLE 	R2 K23 R3 ; R2["mElementDrawCallback"] := R3
	57	[2596]	GETGLOBAL	R2 K5 ; R2 := mCategories
	58	[2598]	CLOSURE  	R3 7 ; R3 := closure(Function #8)
	59	[2598]	SETTABLE 	R2 K24 R3 ; R2["SetupPreInterpolationValues"] := R3
	60	[2599]	GETGLOBAL	R2 K5 ; R2 := mCategories
	61	[2599]	GETGLOBAL	R3 K5 ; R3 := mCategories
	62	[2599]	GETTABLE 	R3 R3 K26 ; R3 := R3["DefaultAlphaInterpolation"]
	63	[2599]	SETTABLE 	R2 K25 R3 ; R2["GetInterpolationProperties"] := R3
	64	[2600]	RETURN   	R0 1 ; return 

function #69 <?:2602,2652> (108 instructions, 432 bytes at 00000211245E1320)
0 params, 20 slots, 1 upvalue, 0 locals, 45 constants, 0 functions
	1	[2603]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[2603]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x25a6e75e]
	3	[2603]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2603]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xb895ffa3]
	5	[2603]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[2604]	LEN      	R1 R0 ; R1 := # R0
	7	[2604]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 10
	8	[2604]	JMP      	10 ; PC := 10
	9	[2605]	RETURN   	R0 1 ; return 
	10	[2608]	GETTABLE 	R1 R0 K4 ; R1 := R0[1.000000]
	11	[2609]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	12	[2609]	MOVE     	R3 R1 ; R3 := R1
	13	[2609]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[2609]	TEST     	R2 0 ; if not R2 then PC := 17
	15	[2609]	JMP      	17 ; PC := 17
	16	[2610]	RETURN   	R0 1 ; return 
	17	[2613]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	18	[2613]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xfb64e76c]
	19	[2613]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[2614]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0xa534c3ac]
	21	[2614]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[2615]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xde321e6f]
	23	[2615]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[2615]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xe85a2361]
	25	[2615]	LOADK    	R6 := 12.000000
	26	[2615]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	27	[2616]	GETGLOBAL	R5 K0 ; R5 := 0x25d99d89
	28	[2616]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0x25a6e75e]
	29	[2616]	CALL     	R5 2 2 ; R5 := R5(R6)
	30	[2617]	LOADK    	R6 := 0.000000
	31	[2618]	SELF     	R7 R5 K12 ; R8 := R5; R7 := R5[0x566259e1]
	32	[2618]	LOADK    	R9 := 7.000000
	33	[2618]	SELF     	R10 R5 K14 ; R11 := R5; R10 := R5[0x4e457768]
	34	[2618]	LOADK    	R12 := 7.000000
	35	[2618]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	36	[2618]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	37	[2619]	GETGLOBAL	R8 K5 ; R8 := 0x7b998233
	38	[2619]	MOVE     	R9 R7 ; R9 := R7
	39	[2619]	CALL     	R8 2 2 ; R8 := R8(R9)
	40	[2619]	TEST     	R8 1 ; if R8 then PC := 51
	41	[2619]	JMP      	51 ; PC := 51
	42	[2620]	SELF     	R8 R7 K15 ; R9 := R7; R8 := R7[0x2abbe722]
	43	[2620]	LOADK    	R10 := 2.000000
	44	[2620]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	45	[2621]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	46	[2621]	MOVE     	R10 R8 ; R10 := R8
	47	[2621]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[2621]	TEST     	R9 1 ; if R9 then PC := 51
	49	[2621]	JMP      	51 ; PC := 51
	50	[2622]	GETTABLE 	R6 R8 K16 ; R6 := R8["mModSlot"]
	51	[2626]	GETGLOBAL	R9 K17 ; R9 := _T
	52	[2626]	SETTABLE 	R9 K18 K4 ; R9["ArsenalState"] := 1.000000
	53	[2627]	GETGLOBAL	R9 K17 ; R9 := _T
	54	[2627]	SETTABLE 	R9 K19 K20 ; R9["upgradeItemCategory"] := 49.000000
	55	[2628]	GETGLOBAL	R9 K17 ; R9 := _T
	56	[2628]	SETTABLE 	R9 K21 K22 ; R9["upgradeItemLot"] := 7.000000
	57	[2629]	GETGLOBAL	R9 K17 ; R9 := _T
	58	[2629]	SETTABLE 	R9 K23 K24 ; R9["upgradeItemSlot"] := 2.000000
	59	[2630]	GETGLOBAL	R9 K17 ; R9 := _T
	60	[2630]	GETTABLE 	R10 R1 K26 ; R10 := R1["mItemId"]
	61	[2630]	GETTABLE 	R10 R10 K27 ; R10 := R10["mId"]
	62	[2630]	SETTABLE 	R9 K25 R10 ; R9["upgradeItemUID"] := R10
	63	[2631]	GETGLOBAL	R9 K17 ; R9 := _T
	64	[2631]	GETGLOBAL	R10 K29 ; R10 := mShipAvatar
	65	[2631]	SETTABLE 	R9 K28 R10 ; R9["RailjackAvatar"] := R10
	66	[2632]	GETGLOBAL	R9 K17 ; R9 := _T
	67	[2632]	SETTABLE 	R9 K30 R3 ; R9["MenuSuitAvatar"] := R3
	68	[2634]	GETGLOBAL	R9 K17 ; R9 := _T
	69	[2634]	NEWTABLE 	R10 0 7 ; R10 := {}
	70	[2635]	GETTABLE 	R11 R1 K33 ; R11 := R1["mItemType"]
	71	[2635]	SETTABLE 	R10 K32 R11 ; R10["type"] := R11
	72	[2636]	GETUPVAL 	R11 U0 ; R11 := U0
	73	[2636]	SELF     	R11 R11 K35 ; R12 := R11; R11 := R11[0x105074fb]
	74	[2636]	GETTABLE 	R13 R1 K33 ; R13 := R1["mItemType"]
	75	[2636]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	76	[2636]	SETTABLE 	R10 K34 R11 ; R10["storeItem"] := R11
	77	[2637]	SETTABLE 	R10 K36 R1 ; R10["info"] := R1
	78	[2638]	SETTABLE 	R10 K37 K38 ; R10["xp"] := 5.000000
	79	[2639]	SETTABLE 	R10 K39 R6 ; R10["configSlot"] := R6
	80	[2640]	SETTABLE 	R10 K40 R4 ; R10["item"] := R4
	81	[2641]	SETTABLE 	R10 K41 K42 ; R10["IsCrewShip"] := true
	82	[2642]	SETTABLE 	R9 K31 R10 ; R9["upgradeItem"] := R10
	83	[2644]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	84	[2644]	GETGLOBAL	R10 K17 ; R10 := _T
	85	[2644]	GETTABLE 	R10 R10 K43 ; R10 := R10["loadoutInProgress"]
	86	[2644]	CALL     	R9 2 2 ; R9 := R9(R10)
	87	[2644]	TEST     	R9 0 ; if not R9 then PC := 106
	88	[2644]	JMP      	106 ; PC := 106
	89	[2645]	GETGLOBAL	R9 K17 ; R9 := _T
	90	[2645]	NEWTABLE 	R10 0 0 ; R10 := {}
	91	[2645]	SETTABLE 	R9 K43 R10 ; R9["loadoutInProgress"] := R10
	92	[2646]	LOADK    	R9 := 0.000000
	93	[2646]	LOADK    	R10 := 9.000000
	94	[2646]	LOADK    	R11 := 1.000000
	95	[2646]	FORPREP  	R9 105 ; R9 -= R11; PC := 105
	96	[2647]	GETGLOBAL	R13 K17 ; R13 := _T
	97	[2647]	GETTABLE 	R13 R13 K43 ; R13 := R13["loadoutInProgress"]
	98	[2647]	SELF     	R14 R5 K12 ; R15 := R5; R14 := R5[0x566259e1]
	99	[2647]	MOVE     	R16 R12 ; R16 := R12
	100	[2647]	SELF     	R17 R5 K14 ; R18 := R5; R17 := R5[0x4e457768]
	101	[2647]	MOVE     	R19 R12 ; R19 := R12
	102	[2647]	CALL     	R17 3 0 ; R17,... := R17(R18,R19)
	103	[2647]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	104	[2647]	SETTABLE 	R13 R12 R14 ; R13[R12] := R14
	105	[2646]	FORLOOP  	R9 96 ; R9 += R11; if R9 <= R10 then begin PC := 96; R12 := R9 end
	106	[2651]	GETGLOBAL	R13 K17 ; R13 := _T
	107	[2651]	SETTABLE 	R13 K44 K42 ; R13["OpenedFromModScreen"] := true
	108	[2652]	RETURN   	R0 1 ; return 

function #70 <?:2654,2680> (167 instructions, 668 bytes at 00000211245E1A10)
0 params, 6 slots, 4 upvalues, 0 locals, 44 constants, 2 functions
	1	[2656]	GETGLOBAL	R0 K0 ; R0 := mLisetMode
	2	[2656]	TEST     	R0 1 ; if R0 then PC := 36
	3	[2656]	JMP      	36 ; PC := 36
	4	[2657]	GETGLOBAL	R0 K1 ; R0 := mCategories
	5	[2657]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	6	[2657]	NEWTABLE 	R2 0 3 ; R2 := {}
	7	[2657]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	8	[2657]	LOADK    	R4 K5 ; R4 := "/Lotus/Language/Railjack/Equipment"
	9	[2657]	NEWTABLE 	R5 0 0 ; R5 := {}
	10	[2657]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	11	[2657]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	12	[2657]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[2657]	GETTABLE 	R3 R3 K7 ; R3 := R3["EQUIPMENT"]
	14	[2657]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	15	[2657]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	16	[2657]	GETTABLE 	R3 R3 K10 ; R3 := R3[1.000000]
	17	[2657]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	18	[2657]	OP_LOADBOOL	R3 1 0 ; R3 := true
	19	[2657]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	20	[2658]	GETGLOBAL	R0 K1 ; R0 := mCategories
	21	[2658]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	22	[2658]	NEWTABLE 	R2 0 3 ; R2 := {}
	23	[2658]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	24	[2658]	LOADK    	R4 K11 ; R4 := "/Lotus/Language/Railjack/BonusWeapons"
	25	[2658]	NEWTABLE 	R5 0 0 ; R5 := {}
	26	[2658]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[2658]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	28	[2658]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[2658]	GETTABLE 	R3 R3 K12 ; R3 := R3["WEAPONS"]
	30	[2658]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	31	[2658]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	32	[2658]	GETTABLE 	R3 R3 K13 ; R3 := R3[2.000000]
	33	[2658]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	34	[2658]	OP_LOADBOOL	R3 1 0 ; R3 := true
	35	[2658]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	36	[2660]	GETGLOBAL	R0 K1 ; R0 := mCategories
	37	[2660]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	38	[2660]	NEWTABLE 	R2 0 5 ; R2 := {}
	39	[2660]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	40	[2660]	LOADK    	R4 K14 ; R4 := "/Lotus/Language/Menu/Loadout_Upgrades"
	41	[2660]	NEWTABLE 	R5 0 0 ; R5 := {}
	42	[2660]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[2660]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	44	[2660]	GETUPVAL 	R3 U0 ; R3 := U0
	45	[2660]	GETTABLE 	R3 R3 K15 ; R3 := R3["SYSTEMS"]
	46	[2660]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	47	[2660]	GETGLOBAL	R3 K17 ; R3 := 0x93a422ee
	48	[2660]	SETTABLE 	R2 K16 R3 ; R2["Screen"] := R3
	49	[2660]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	50	[2660]	GETUPVAL 	R0 U1 ; R0 := U1
	51	[2660]	SETTABLE 	R2 K18 R3 ; R2["SetupFunc"] := R3
	52	[2660]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	53	[2660]	GETTABLE 	R3 R3 K19 ; R3 := R3[4.000000]
	54	[2660]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	55	[2660]	OP_LOADBOOL	R3 1 0 ; R3 := true
	56	[2660]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	57	[2661]	GETGLOBAL	R0 K1 ; R0 := mCategories
	58	[2661]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	59	[2661]	NEWTABLE 	R2 0 4 ; R2 := {}
	60	[2661]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	61	[2661]	LOADK    	R4 K20 ; R4 := "/Lotus/Language/Intrinsics/Intrinsics"
	62	[2661]	NEWTABLE 	R5 0 0 ; R5 := {}
	63	[2661]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	64	[2661]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	65	[2661]	GETUPVAL 	R3 U0 ; R3 := U0
	66	[2661]	GETTABLE 	R3 R3 K21 ; R3 := R3["INTRINSICS"]
	67	[2661]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	68	[2661]	GETGLOBAL	R3 K22 ; R3 := 0x5228d2b2
	69	[2661]	SETTABLE 	R2 K16 R3 ; R2["Screen"] := R3
	70	[2661]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	71	[2661]	GETTABLE 	R3 R3 K23 ; R3 := R3[6.000000]
	72	[2661]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	73	[2661]	OP_LOADBOOL	R3 1 0 ; R3 := true
	74	[2661]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	75	[2662]	GETGLOBAL	R0 K0 ; R0 := mLisetMode
	76	[2662]	TEST     	R0 1 ; if R0 then PC := 114
	77	[2662]	JMP      	114 ; PC := 114
	78	[2663]	GETGLOBAL	R0 K1 ; R0 := mCategories
	79	[2663]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	80	[2663]	NEWTABLE 	R2 0 4 ; R2 := {}
	81	[2663]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	82	[2663]	LOADK    	R4 K24 ; R4 := "/Lotus/Language/Railjack/CrewMgr"
	83	[2663]	NEWTABLE 	R5 0 0 ; R5 := {}
	84	[2663]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	85	[2663]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	86	[2663]	GETUPVAL 	R3 U0 ; R3 := U0
	87	[2663]	GETTABLE 	R3 R3 K25 ; R3 := R3["CREW_MGR"]
	88	[2663]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	89	[2663]	GETGLOBAL	R3 K26 ; R3 := 0xa9fb0c35
	90	[2663]	SETTABLE 	R2 K16 R3 ; R2["Screen"] := R3
	91	[2663]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	92	[2663]	GETTABLE 	R3 R3 K27 ; R3 := R3[7.000000]
	93	[2663]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	94	[2663]	OP_LOADBOOL	R3 1 0 ; R3 := true
	95	[2663]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	96	[2664]	GETGLOBAL	R0 K1 ; R0 := mCategories
	97	[2664]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	98	[2664]	NEWTABLE 	R2 0 4 ; R2 := {}
	99	[2664]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	100	[2664]	LOADK    	R4 K28 ; R4 := "/Lotus/Language/Railjack/Cosmetics"
	101	[2664]	NEWTABLE 	R5 0 0 ; R5 := {}
	102	[2664]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	103	[2664]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	104	[2664]	GETUPVAL 	R3 U0 ; R3 := U0
	105	[2664]	GETTABLE 	R3 R3 K29 ; R3 := R3["COSMETICS"]
	106	[2664]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	107	[2664]	GETUPVAL 	R3 U2 ; R3 := U2
	108	[2664]	SETTABLE 	R2 K30 R3 ; R2["CameraSpot"] := R3
	109	[2664]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	110	[2664]	GETTABLE 	R3 R3 K31 ; R3 := R3[3.000000]
	111	[2664]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	112	[2664]	OP_LOADBOOL	R3 1 0 ; R3 := true
	113	[2664]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	114	[2666]	OP_LOADBOOL	R0 0 0 ; R0 := false
	115	[2666]	TEST     	R0 0 ; if not R0 then PC := 135
	116	[2666]	JMP      	135 ; PC := 135
	117	[2667]	GETGLOBAL	R0 K1 ; R0 := mCategories
	118	[2667]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	119	[2667]	NEWTABLE 	R2 0 3 ; R2 := {}
	120	[2667]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	121	[2667]	LOADK    	R4 K32 ; R4 := "/Lotus/Language/Categories/ARCHWING"
	122	[2667]	NEWTABLE 	R5 0 0 ; R5 := {}
	123	[2667]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	124	[2667]	LOADK    	R4 K33 ; R4 := " DEV MODE"
	125	[2667]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	126	[2667]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	127	[2667]	GETUPVAL 	R3 U0 ; R3 := U0
	128	[2667]	GETTABLE 	R3 R3 K34 ; R3 := R3["ARCHWING"]
	129	[2667]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	130	[2667]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	131	[2667]	GETTABLE 	R3 R3 K35 ; R3 := R3[8.000000]
	132	[2667]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	133	[2667]	OP_LOADBOOL	R3 1 0 ; R3 := true
	134	[2667]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	135	[2670]	GETGLOBAL	R0 K1 ; R0 := mCategories
	136	[2670]	SELF     	R0 R0 K36 ; R1 := R0; R0 := R0[0x71e9ac81]
	137	[2670]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	138	[2670]	OP_LOADBOOL	R4 1 0 ; R4 := true
	139	[2670]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	140	[2671]	GETGLOBAL	R0 K0 ; R0 := mLisetMode
	141	[2671]	TEST     	R0 1 ; if R0 then PC := 147
	142	[2671]	JMP      	147 ; PC := 147
	143	[2671]	GETGLOBAL	R0 K37 ; R0 := _T
	144	[2671]	GETTABLE 	R0 R0 K38 ; R0 := R0["RailjackLoadout_SelectUpgrades"]
	145	[2671]	TEST     	R0 0 ; if not R0 then PC := 163
	146	[2671]	JMP      	163 ; PC := 163
	147	[2672]	GETGLOBAL	R0 K37 ; R0 := _T
	148	[2672]	SETTABLE 	R0 K38 K39 ; R0["RailjackLoadout_SelectUpgrades"] := nil
	149	[2673]	GETUPVAL 	R0 U3 ; R0 := U3
	150	[2673]	GETTABLE 	R0 R0 K40 ; R0 := R0[0x06d055f9]
	151	[2673]	GETGLOBAL	R1 K0 ; R1 := mLisetMode
	152	[2673]	LOADK    	R2 := 1.000000
	153	[2673]	LOADK    	R3 := 3.000000
	154	[2673]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	155	[2676]	GETGLOBAL	R1 K41 ; R1 := mTimerMgr
	156	[2676]	SELF     	R1 R1 K42 ; R2 := R1; R1 := R1[0xbd2e96ea]
	157	[2676]	LOADK    	R3 := 0.000000
	158	[2676]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	159	[2676]	MOVE     	R0 R0 ; R0 := R0
	160	[2676]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	161	[2676]	CLOSE    	R0 ; SAVE R0,...
	162	[2676]	JMP      	167 ; PC := 167
	163	[2678]	GETGLOBAL	R0 K1 ; R0 := mCategories
	164	[2678]	SELF     	R0 R0 K43 ; R1 := R0; R0 := R0[0x070daa5a]
	165	[2678]	LOADK    	R2 := 1.000000
	166	[2678]	CALL     	R0 3 1 ; R0(R1,R2)
	167	[2680]	RETURN   	R0 1 ; return 

function #71 <?:2682,2812> (328 instructions, 1312 bytes at 00000211245E26A0)
2 params, 31 slots, 5 upvalues, 0 locals, 95 constants, 0 functions
	1	[2684]	GETGLOBAL	R3 K0 ; R3 := mActiveState
	2	[2684]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[2684]	GETTABLE 	R4 R4 K1 ; R4 := R4["WEAPONS"]
	4	[2684]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 12
	5	[2684]	JMP      	12 ; PC := 12
	6	[2684]	GETGLOBAL	R3 K0 ; R3 := mActiveState
	7	[2684]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[2684]	GETTABLE 	R4 R4 K2 ; R4 := R4["WEAPON_INV"]
	9	[2684]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 12
	10	[2684]	JMP      	12 ; PC := 12
	11	[2684]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 12
	12	[2684]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[2685]	GETGLOBAL	R4 K3 ; R4 := mCurrentLoadout
	14	[2685]	EQ       	1 R4 K4 ; if R4 == nil then PC := 34
	15	[2685]	JMP      	34 ; PC := 34
	16	[2685]	GETTABLE 	R4 R0 K5 ; R4 := R0["Slot"]
	17	[2685]	EQ       	1 R4 K4 ; if R4 == nil then PC := 34
	18	[2685]	JMP      	34 ; PC := 34
	19	[2686]	TEST     	R3 0 ; if not R3 then PC := 28
	20	[2686]	JMP      	28 ; PC := 28
	21	[2687]	GETGLOBAL	R4 K3 ; R4 := mCurrentLoadout
	22	[2687]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x73a8846a]
	23	[2687]	GETTABLE 	R6 R0 K7 ; R6 := R0["Hand"]
	24	[2687]	GETTABLE 	R7 R0 K5 ; R7 := R0["Slot"]
	25	[2687]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	26	[2687]	MOVE     	R2 R4 ; R2 := R4
	27	[2687]	JMP      	34 ; PC := 34
	28	[2689]	GETGLOBAL	R4 K3 ; R4 := mCurrentLoadout
	29	[2689]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xb61abfd2]
	30	[2689]	GETTABLE 	R6 R0 K9 ; R6 := R0["LoadOutType"]
	31	[2689]	GETTABLE 	R7 R0 K5 ; R7 := R0["Slot"]
	32	[2689]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	33	[2689]	MOVE     	R2 R4 ; R2 := R4
	34	[2692]	EQ       	1 R2 K4 ; if R2 == nil then PC := 328
	35	[2692]	JMP      	328 ; PC := 328
	36	[2693]	SETTABLE 	R0 K10 R2 ; R0["WeaponInfo"] := R2
	37	[2695]	GETTABLE 	R4 R2 K11 ; R4 := R2["mUpgradeType"]
	38	[2695]	SETTABLE 	R0 K11 R4 ; R0["mUpgradeType"] := R4
	39	[2696]	GETTABLE 	R4 R2 K12 ; R4 := R2["mUpgradeFingerprint"]
	40	[2696]	SETTABLE 	R0 K12 R4 ; R0[0x6c97a788] := R4
	41	[2698]	TEST     	R3 0 ; if not R3 then PC := 135
	42	[2698]	JMP      	135 ; PC := 135
	43	[2698]	TEST     	R1 0 ; if not R1 then PC := 135
	44	[2698]	JMP      	135 ; PC := 135
	45	[2698]	GETGLOBAL	R4 K13 ; R4 := 0x7b998233
	46	[2698]	GETTABLE 	R5 R2 K14 ; R5 := R2["mItemType"]
	47	[2698]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[2698]	TEST     	R4 0 ; if not R4 then PC := 135
	49	[2698]	JMP      	135 ; PC := 135
	50	[2699]	LOADNIL  	R4 R4 ; R4 := nil
	51	[2700]	GETGLOBAL	R5 K13 ; R5 := 0x7b998233
	52	[2700]	GETGLOBAL	R6 K15 ; R6 := mShipSuit
	53	[2700]	CALL     	R5 2 2 ; R5 := R5(R6)
	54	[2700]	TEST     	R5 1 ; if R5 then PC := 85
	55	[2700]	JMP      	85 ; PC := 85
	56	[2701]	GETTABLE 	R5 R0 K7 ; R5 := R0["Hand"]
	57	[2701]	EQ       	0 R5 K17 ; if R5 ~= 0.000000 then PC := 75
	58	[2701]	JMP      	75 ; PC := 75
	59	[2702]	GETTABLE 	R5 R0 K5 ; R5 := R0["Slot"]
	60	[2702]	EQ       	0 R5 K17 ; if R5 ~= 0.000000 then PC := 67
	61	[2702]	JMP      	67 ; PC := 67
	62	[2703]	GETGLOBAL	R5 K15 ; R5 := mShipSuit
	63	[2703]	SELF     	R5 R5 K19 ; R6 := R5; R5 := R5[0xb6ef303c]
	64	[2703]	CALL     	R5 2 2 ; R5 := R5(R6)
	65	[2703]	MOVE     	R4 R5 ; R4 := R5
	66	[2703]	JMP      	85 ; PC := 85
	67	[2704]	GETTABLE 	R5 R0 K5 ; R5 := R0["Slot"]
	68	[2704]	EQ       	0 R5 K20 ; if R5 ~= 2.000000 then PC := 85
	69	[2704]	JMP      	85 ; PC := 85
	70	[2705]	GETGLOBAL	R5 K15 ; R5 := mShipSuit
	71	[2705]	SELF     	R5 R5 K21 ; R6 := R5; R5 := R5[0x7ce48d19]
	72	[2705]	CALL     	R5 2 2 ; R5 := R5(R6)
	73	[2705]	MOVE     	R4 R5 ; R4 := R5
	74	[2706]	JMP      	85 ; PC := 85
	75	[2707]	GETTABLE 	R5 R0 K7 ; R5 := R0["Hand"]
	76	[2707]	EQ       	0 R5 K22 ; if R5 ~= 1.000000 then PC := 85
	77	[2707]	JMP      	85 ; PC := 85
	78	[2707]	GETTABLE 	R5 R0 K5 ; R5 := R0["Slot"]
	79	[2707]	EQ       	0 R5 K17 ; if R5 ~= 0.000000 then PC := 85
	80	[2707]	JMP      	85 ; PC := 85
	81	[2708]	GETGLOBAL	R5 K15 ; R5 := mShipSuit
	82	[2708]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0x5ed1d978]
	83	[2708]	CALL     	R5 2 2 ; R5 := R5(R6)
	84	[2708]	MOVE     	R4 R5 ; R4 := R5
	85	[2712]	GETGLOBAL	R5 K13 ; R5 := 0x7b998233
	86	[2712]	MOVE     	R6 R4 ; R6 := R4
	87	[2712]	CALL     	R5 2 2 ; R5 := R5(R6)
	88	[2712]	TEST     	R5 1 ; if R5 then PC := 140
	89	[2712]	JMP      	140 ; PC := 140
	90	[2713]	GETGLOBAL	R5 K18 ; R5 := 0x6c97a788
	91	[2713]	GETTABLE 	R5 R5 K25 ; R5 := R5["InvalidItemID"]
	92	[2713]	SETTABLE 	R0 K24 R5 ; R0["UID"] := R5
	93	[2714]	GETGLOBAL	R5 K27 ; R5 := 0x7ed0a956
	94	[2714]	SELF     	R6 R4 K28 ; R7 := R4; R6 := R4[0xcde10c4a]
	95	[2714]	CALL     	R6 2 2 ; R6 := R6(R7)
	96	[2714]	SELF     	R6 R6 K29 ; R7 := R6; R6 := R6[0xed4e0128]
	97	[2714]	CALL     	R6 2 0 ; R6,... := R6(R7)
	98	[2714]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	99	[2714]	SETTABLE 	R0 K26 R5 ; R0["ItemType"] := R5
	100	[2716]	GETGLOBAL	R5 K30 ; R5 := mCurrentShip
	101	[2716]	GETTABLE 	R5 R5 K31 ; R5 := R5["ShipInfo"]
	102	[2716]	TEST     	R5 0 ; if not R5 then PC := 140
	103	[2716]	JMP      	140 ; PC := 140
	104	[2717]	GETGLOBAL	R5 K30 ; R5 := mCurrentShip
	105	[2717]	GETTABLE 	R5 R5 K31 ; R5 := R5["ShipInfo"]
	106	[2717]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x73a8846a]
	107	[2717]	GETTABLE 	R7 R0 K7 ; R7 := R0["Hand"]
	108	[2717]	GETTABLE 	R8 R0 K5 ; R8 := R0["Slot"]
	109	[2717]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	110	[2718]	GETTABLE 	R6 R5 K32 ; R6 := R5["mItemId"]
	111	[2718]	GETTABLE 	R7 R2 K32 ; R7 := R2["mItemId"]
	112	[2718]	GETTABLE 	R7 R7 K33 ; R7 := R7["mId"]
	113	[2718]	SETTABLE 	R6 K33 R7 ; R6["mId"] := R7
	114	[2719]	GETTABLE 	R6 R0 K26 ; R6 := R0["ItemType"]
	115	[2719]	SETTABLE 	R5 K14 R6 ; R5[0xf278f8a1] := R6
	116	[2720]	GETGLOBAL	R6 K34 ; R6 := 0x25d99d89
	117	[2720]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x25a6e75e]
	118	[2720]	CALL     	R6 2 2 ; R6 := R6(R7)
	119	[2720]	SELF     	R6 R6 K36 ; R7 := R6; R6 := R6[0xdf943d05]
	120	[2720]	GETGLOBAL	R8 K30 ; R8 := mCurrentShip
	121	[2720]	GETTABLE 	R8 R8 K37 ; R8 := R8["ID"]
	122	[2720]	GETTABLE 	R9 R0 K7 ; R9 := R0["Hand"]
	123	[2720]	GETTABLE 	R10 R0 K5 ; R10 := R0["Slot"]
	124	[2720]	MOVE     	R11 R5 ; R11 := R5
	125	[2720]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	126	[2724]	GETGLOBAL	R6 K34 ; R6 := 0x25d99d89
	127	[2724]	SELF     	R6 R6 K38 ; R7 := R6; R6 := R6[0x41f4ba99]
	128	[2724]	CALL     	R6 2 1 ; R6(R7)
	129	[2725]	GETGLOBAL	R6 K34 ; R6 := 0x25d99d89
	130	[2725]	SELF     	R6 R6 K39 ; R7 := R6; R6 := R6[0x62c81b76]
	131	[2725]	CALL     	R6 2 2 ; R6 := R6(R7)
	132	[2725]	GETTABLE 	R6 R6 K40 ; R6 := R6["mCrewShipLoadOut"]
	133	[2725]	SETGLOBALHASH	R6 K3 ; mCurrentLoadout := R6
	134	[2727]	JMP      	140 ; PC := 140
	135	[2729]	GETTABLE 	R6 R2 K32 ; R6 := R2["mItemId"]
	136	[2729]	GETTABLE 	R6 R6 K33 ; R6 := R6["mId"]
	137	[2729]	SETTABLE 	R0 K24 R6 ; R0["UID"] := R6
	138	[2730]	GETTABLE 	R6 R2 K14 ; R6 := R2["mItemType"]
	139	[2730]	SETTABLE 	R0 K26 R6 ; R0["ItemType"] := R6
	140	[2733]	GETTABLE 	R6 R2 K42 ; R6 := R2["mXP"]
	141	[2733]	SETTABLE 	R0 K41 R6 ; R0["Xp"] := R6
	142	[2734]	GETGLOBAL	R6 K44 ; R6 := 0xa94df70b
	143	[2734]	SELF     	R6 R6 K45 ; R7 := R6; R6 := R6[0x8427bf69]
	144	[2734]	GETTABLE 	R8 R0 K41 ; R8 := R0["Xp"]
	145	[2734]	GETTABLE 	R9 R0 K26 ; R9 := R0["ItemType"]
	146	[2734]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	147	[2734]	SETTABLE 	R0 K43 R6 ; R0["Level"] := R6
	148	[2735]	GETGLOBAL	R6 K44 ; R6 := 0xa94df70b
	149	[2735]	SELF     	R6 R6 K46 ; R7 := R6; R6 := R6[0x54c107f9]
	150	[2735]	GETTABLE 	R8 R0 K41 ; R8 := R0["Xp"]
	151	[2735]	GETTABLE 	R9 R0 K26 ; R9 := R0["ItemType"]
	152	[2735]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	153	[2736]	GETGLOBAL	R7 K44 ; R7 := 0xa94df70b
	154	[2736]	SELF     	R7 R7 K47 ; R8 := R7; R7 := R7[0x4d058675]
	155	[2736]	GETTABLE 	R9 R0 K41 ; R9 := R0["Xp"]
	156	[2736]	GETTABLE 	R10 R0 K26 ; R10 := R0["ItemType"]
	157	[2736]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	158	[2737]	GETTABLE 	R8 R0 K41 ; R8 := R0["Xp"]
	159	[2737]	SUB      	R8 R8 R6 ; R8 := R8 - R6
	160	[2737]	SUB      	R9 R7 R6 ; R9 := R7 - R6
	161	[2737]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	162	[2738]	SETTABLE 	R0 K48 R8 ; R0["XpRatio"] := R8
	163	[2739]	GETTABLE 	R9 R0 K43 ; R9 := R0["Level"]
	164	[2739]	GETGLOBAL	R10 K44 ; R10 := 0xa94df70b
	165	[2739]	SELF     	R10 R10 K49 ; R11 := R10; R10 := R10[0x757f0100]
	166	[2739]	GETTABLE 	R12 R0 K26 ; R12 := R0["ItemType"]
	167	[2739]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	168	[2739]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 171
	169	[2739]	JMP      	171 ; PC := 171
	170	[2740]	SETTABLE 	R0 K48 K4 ; R0["XpRatio"] := nil
	171	[2743]	GETUPVAL 	R9 U1 ; R9 := U1
	172	[2743]	SELF     	R9 R9 K51 ; R10 := R9; R9 := R9[0x105074fb]
	173	[2743]	GETTABLE 	R11 R0 K26 ; R11 := R0["ItemType"]
	174	[2743]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	175	[2743]	SETTABLE 	R0 K50 R9 ; R0["mStoreItem"] := R9
	176	[2744]	GETTABLE 	R9 R0 K50 ; R9 := R0["mStoreItem"]
	177	[2744]	EQ       	1 R9 K4 ; if R9 == nil then PC := 201
	178	[2744]	JMP      	201 ; PC := 201
	179	[2745]	GETTABLE 	R9 R0 K50 ; R9 := R0["mStoreItem"]
	180	[2745]	SELF     	R9 R9 K53 ; R10 := R9; R9 := R9[0x54b0d897]
	181	[2745]	CALL     	R9 2 2 ; R9 := R9(R10)
	182	[2745]	SETTABLE 	R0 K52 R9 ; R0["FormFactor"] := R9
	183	[2746]	GETUPVAL 	R9 U2 ; R9 := U2
	184	[2746]	GETTABLE 	R9 R9 K56 ; R9 := R9[0x056dcf06]
	185	[2746]	GETTABLE 	R10 R0 K50 ; R10 := R0["mStoreItem"]
	186	[2746]	OP_LOADBOOL	R11 1 0 ; R11 := true
	187	[2746]	CALL     	R9 3 3 ; R9,R10 := R9(R10,R11)
	188	[2746]	SETTABLE 	R0 K55 R10 ; R0["Themed"] := R10
	189	[2746]	SETTABLE 	R0 K54 R9 ; R0["Icon"] := R9
	190	[2747]	GETGLOBAL	R9 K58 ; R9 := 0xae91e43b
	191	[2747]	SELF     	R9 R9 K59 ; R10 := R9; R9 := R9[0x42b04007]
	192	[2747]	GETTABLE 	R11 R0 K50 ; R11 := R0["mStoreItem"]
	193	[2747]	SELF     	R11 R11 K60 ; R12 := R11; R11 := R11[0xd3a9d01f]
	194	[2747]	CALL     	R11 2 2 ; R11 := R11(R12)
	195	[2747]	SELF     	R11 R11 K61 ; R12 := R11; R11 := R11[0x6d604ba7]
	196	[2747]	CALL     	R11 2 2 ; R11 := R11(R12)
	197	[2747]	OP_LOADBOOL	R12 1 0 ; R12 := true
	198	[2747]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	199	[2747]	SETTABLE 	R0 K57 R9 ; R0["NameOverride"] := R9
	200	[2747]	JMP      	205 ; PC := 205
	201	[2749]	SETTABLE 	R0 K52 K4 ; R0["FormFactor"] := nil
	202	[2750]	SETTABLE 	R0 K54 K4 ; R0["Icon"] := nil
	203	[2751]	SETTABLE 	R0 K55 K4 ; R0["Themed"] := nil
	204	[2752]	SETTABLE 	R0 K57 K4 ; R0["NameOverride"] := nil
	205	[2754]	SETTABLE 	R0 K62 K63 ; R0["mCanEquip"] := true
	206	[2755]	SETTABLE 	R0 K64 K63 ; R0["mCanCustomize"] := true
	207	[2756]	GETTABLE 	R9 R0 K65 ; R9 := R0["mProductCategory"]
	208	[2756]	TEST     	R9 1 ; if R9 then PC := 212
	209	[2756]	JMP      	212 ; PC := 212
	210	[2756]	GETGLOBAL	R9 K66 ; R9 := mEquipment
	211	[2756]	GETTABLE 	R9 R9 K65 ; R9 := R9["mProductCategory"]
	212	[2758]	GETGLOBAL	R10 K34 ; R10 := 0x25d99d89
	213	[2758]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0x25a6e75e]
	214	[2758]	CALL     	R10 2 2 ; R10 := R10(R11)
	215	[2761]	SETTABLE 	R0 K67 K4 ; R0["WeaponCompatibility"] := nil
	216	[2762]	NEWTABLE 	R11 0 0 ; R11 := {}
	217	[2762]	SETTABLE 	R0 K68 R11 ; R0["AlwaysAvailableItems"] := R11
	218	[2764]	GETGLOBAL	R11 K0 ; R11 := mActiveState
	219	[2764]	GETUPVAL 	R12 U0 ; R12 := U0
	220	[2764]	GETTABLE 	R12 R12 K1 ; R12 := R12["WEAPONS"]
	221	[2764]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 255
	222	[2764]	JMP      	255 ; PC := 255
	223	[2765]	GETUPVAL 	R11 U3 ; R11 := U3
	224	[2765]	SELF     	R12 R10 K70 ; R13 := R10; R12 := R10[0xbfba693e]
	225	[2765]	CALL     	R12 2 0 ; R12,... := R12(R13)
	226	[2765]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	227	[2765]	SETTABLE 	R0 K69 R11 ; R0["OwnedItems"] := R11
	228	[2766]	GETUPVAL 	R11 U3 ; R11 := U3
	229	[2766]	SELF     	R12 R10 K72 ; R13 := R10; R12 := R10[0xe600a7f3]
	230	[2766]	CALL     	R12 2 0 ; R12,... := R12(R13)
	231	[2766]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	232	[2766]	SETTABLE 	R0 K71 R11 ; R0["SalvageItems"] := R11
	233	[2767]	GETUPVAL 	R11 U4 ; R11 := U4
	234	[2767]	SELF     	R12 R10 K74 ; R13 := R10; R12 := R10[0xaea1cb86]
	235	[2767]	CALL     	R12 2 2 ; R12 := R12(R13)
	236	[2767]	MOVE     	R13 R9 ; R13 := R9
	237	[2767]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	238	[2767]	SETTABLE 	R0 K73 R11 ; R0["RawSalvageItems"] := R11
	239	[2769]	GETGLOBAL	R11 K75 ; R11 := 0xbe190284
	240	[2769]	SELF     	R11 R11 K76 ; R12 := R11; R11 := R11[0xd7d79b74]
	241	[2769]	CALL     	R11 2 2 ; R11 := R11(R12)
	242	[2770]	GETGLOBAL	R12 K13 ; R12 := 0x7b998233
	243	[2770]	MOVE     	R13 R11 ; R13 := R11
	244	[2770]	CALL     	R12 2 2 ; R12 := R12(R13)
	245	[2770]	TEST     	R12 1 ; if R12 then PC := 265
	246	[2770]	JMP      	265 ; PC := 265
	247	[2771]	SELF     	R12 R11 K77 ; R13 := R11; R12 := R11[0xcd57f819]
	248	[2771]	CALL     	R12 2 2 ; R12 := R12(R13)
	249	[2772]	SELF     	R13 R12 K78 ; R14 := R12; R13 := R12[0xbe8ab12a]
	250	[2772]	GETTABLE 	R15 R0 K7 ; R15 := R0["Hand"]
	251	[2772]	GETTABLE 	R16 R0 K5 ; R16 := R0["Slot"]
	252	[2772]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	253	[2772]	SETTABLE 	R0 K67 R13 ; R0["WeaponCompatibility"] := R13
	254	[2773]	JMP      	265 ; PC := 265
	255	[2775]	GETUPVAL 	R13 U3 ; R13 := U3
	256	[2775]	SELF     	R14 R10 K79 ; R15 := R10; R14 := R10[0x3218c3b0]
	257	[2775]	CALL     	R14 2 2 ; R14 := R14(R15)
	258	[2775]	OP_LOADBOOL	R15 0 0 ; R15 := false
	259	[2776]	GETUPVAL 	R16 U3 ; R16 := U3
	260	[2776]	SELF     	R17 R10 K80 ; R18 := R10; R17 := R10[0x6f7b67d7]
	261	[2776]	CALL     	R17 2 0 ; R17,... := R17(R18)
	262	[2776]	CALL     	R16 0 0 ; R16,... := R16(R17,...)
	263	[2775]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	264	[2776]	SETTABLE 	R0 K69 R13 ; R0["OwnedItems"] := R13
	265	[2779]	GETUPVAL 	R13 U1 ; R13 := U1
	266	[2779]	SELF     	R13 R13 K81 ; R14 := R13; R13 := R13[0xd2120e76]
	267	[2779]	CALL     	R13 2 2 ; R13 := R13(R14)
	268	[2780]	LOADNIL  	R14 R18 ; R14 := R15 := R16 := R17 := R18 := nil
	269	[2785]	LOADK    	R19 := 1.000000
	270	[2785]	LEN      	R20 R13 ; R20 := # R13
	271	[2785]	LOADK    	R21 := 1.000000
	272	[2785]	FORPREP  	R19 327 ; R19 -= R21; PC := 327
	273	[2786]	GETGLOBAL	R23 K82 ; R23 := 0xce225efa
	274	[2786]	LOADK    	R24 := 0.000000
	275	[2786]	CALL     	R23 2 1 ; R23(R24)
	276	[2787]	GETTABLE 	R14 R13 R22 ; R14 := R13[R22]
	277	[2789]	GETGLOBAL	R23 K83 ; R23 := 0x60cce7b4
	278	[2789]	GETGLOBAL	R24 K13 ; R24 := 0x7b998233
	279	[2789]	MOVE     	R25 R14 ; R25 := R14
	280	[2789]	CALL     	R24 2 2 ; R24 := R24(R25)
	281	[2789]	TEST     	R24 1 ; if R24 then PC := 286
	282	[2789]	JMP      	286 ; PC := 286
	283	[2789]	SELF     	R24 R14 K84 ; R25 := R14; R24 := R14[0x31e559d2]
	284	[2789]	CALL     	R24 2 2 ; R24 := R24(R25)
	285	[2789]	JMP      	288 ; PC := 288
	286	[2789]	OP_LOADBOOL	R24 0 1 ; R24 := false; PC := 287
	287	[2789]	OP_LOADBOOL	R24 1 0 ; R24 := true
	288	[2789]	CALL     	R23 2 1 ; R23(R24)
	289	[2790]	SELF     	R23 R14 K85 ; R24 := R14; R23 := R14[0xfe9eb1a5]
	290	[2790]	CALL     	R23 2 2 ; R23 := R23(R24)
	291	[2790]	MOVE     	R15 R23 ; R15 := R23
	292	[2791]	EQ       	0 R15 R9 ; if R15 ~= R9 then PC := 327
	293	[2791]	JMP      	327 ; PC := 327
	294	[2792]	GETGLOBAL	R23 K18 ; R23 := 0x6c97a788
	295	[2792]	GETTABLE 	R23 R23 K86 ; R23 := R23[0xe1f94dee]
	296	[2792]	CALL     	R23 1 2 ; R23 := R23()
	297	[2792]	MOVE     	R16 R23 ; R16 := R23
	298	[2793]	SELF     	R23 R14 K87 ; R24 := R14; R23 := R14[0xf278f8a1]
	299	[2793]	CALL     	R23 2 2 ; R23 := R23(R24)
	300	[2793]	MOVE     	R17 R23 ; R17 := R23
	301	[2794]	GETGLOBAL	R23 K18 ; R23 := 0x6c97a788
	302	[2794]	GETTABLE 	R18 R23 K25 ; R18 := R23["InvalidItemID"]
	303	[2796]	SETTABLE 	R16 K14 R17 ; R16[0xf278f8a1] := R17
	304	[2797]	GETTABLE 	R23 R16 K32 ; R23 := R16["mItemId"]
	305	[2797]	SETTABLE 	R23 K33 R18 ; R23["mId"] := R18
	306	[2799]	GETGLOBAL	R23 K88 ; R23 := 0x33bdd652
	307	[2799]	GETTABLE 	R23 R23 K89 ; R23 := R23[0x23d5322f]
	308	[2799]	GETTABLE 	R24 R0 K68 ; R24 := R0["AlwaysAvailableItems"]
	309	[2799]	NEWTABLE 	R25 0 8 ; R25 := {}
	310	[2800]	SETTABLE 	R25 K26 R17 ; R25["ItemType"] := R17
	311	[2801]	SETTABLE 	R25 K50 R14 ; R25["mStoreItem"] := R14
	312	[2802]	GETGLOBAL	R26 K58 ; R26 := 0xae91e43b
	313	[2802]	SELF     	R26 R26 K59 ; R27 := R26; R26 := R26[0x42b04007]
	314	[2802]	GETGLOBAL	R28 K91 ; R28 := 0x64fb1586
	315	[2802]	SELF     	R29 R14 K60 ; R30 := R14; R29 := R14[0xd3a9d01f]
	316	[2802]	CALL     	R29 2 0 ; R29,... := R29(R30)
	317	[2802]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	318	[2802]	OP_LOADBOOL	R29 1 0 ; R29 := true
	319	[2802]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	320	[2802]	SETTABLE 	R25 K90 R26 ; R25["Name"] := R26
	321	[2803]	SETTABLE 	R25 K24 R18 ; R25["UID"] := R18
	322	[2804]	SETTABLE 	R25 K41 K17 ; R25["Xp"] := 0.000000
	323	[2805]	SETTABLE 	R25 K92 R16 ; R25["Item"] := R16
	324	[2806]	SETTABLE 	R25 K93 K22 ; R25["ItemCount"] := 1.000000
	325	[2807]	SETTABLE 	R25 K94 K63 ; R25["AlwaysAvailable"] := true
	326	[2799]	CALL     	R23 3 1 ; R23(R24,R25)
	327	[2785]	FORLOOP  	R19 273 ; R19 += R21; if R19 <= R20 then begin PC := 273; R22 := R19 end
	328	[2812]	RETURN   	R0 1 ; return 

function #72 <?:2814,2866> (144 instructions, 576 bytes at 0000021124B12C60)
1 param, 24 slots, 4 upvalues, 0 locals, 55 constants, 0 functions
	1	[2815]	GETTABLE 	R1 R0 K1 ; R1 := R0["Item"]
	2	[2815]	GETTABLE 	R1 R1 K2 ; R1 := R1["mItemType"]
	3	[2815]	SETTABLE 	R0 K0 R1 ; R0["ItemType"] := R1
	4	[2816]	GETTABLE 	R1 R0 K1 ; R1 := R0["Item"]
	5	[2816]	GETTABLE 	R1 R1 K4 ; R1 := R1["mItemId"]
	6	[2816]	GETTABLE 	R1 R1 K5 ; R1 := R1["mId"]
	7	[2816]	SETTABLE 	R0 K3 R1 ; R0["UID"] := R1
	8	[2817]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[2817]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x105074fb]
	10	[2817]	GETTABLE 	R3 R0 K0 ; R3 := R0["ItemType"]
	11	[2817]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[2817]	SETTABLE 	R0 K6 R1 ; R0["mStoreItem"] := R1
	13	[2818]	GETTABLE 	R1 R0 K6 ; R1 := R0["mStoreItem"]
	14	[2818]	EQ       	1 R1 K8 ; if R1 == nil then PC := 34
	15	[2818]	JMP      	34 ; PC := 34
	16	[2819]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[2819]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056dcf06]
	18	[2819]	GETTABLE 	R2 R0 K6 ; R2 := R0["mStoreItem"]
	19	[2819]	OP_LOADBOOL	R3 1 0 ; R3 := true
	20	[2819]	CALL     	R1 3 3 ; R1,R2 := R1(R2,R3)
	21	[2819]	SETTABLE 	R0 K10 R2 ; R0[0xf64b7262] := R2
	22	[2819]	SETTABLE 	R0 K9 R1 ; R0[0xae91e43b] := R1
	23	[2820]	GETGLOBAL	R1 K13 ; R1 := 0xae91e43b
	24	[2820]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0x42b04007]
	25	[2820]	GETTABLE 	R3 R0 K6 ; R3 := R0["mStoreItem"]
	26	[2820]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xd3a9d01f]
	27	[2820]	CALL     	R3 2 2 ; R3 := R3(R4)
	28	[2820]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0x6d604ba7]
	29	[2820]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[2820]	OP_LOADBOOL	R4 0 0 ; R4 := false
	31	[2820]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	32	[2820]	SETTABLE 	R0 K12 R1 ; R0["NameOverride"] := R1
	33	[2820]	JMP      	37 ; PC := 37
	34	[2822]	SETTABLE 	R0 K9 K8 ; R0["Icon"] := nil
	35	[2823]	SETTABLE 	R0 K10 K8 ; R0["Themed"] := nil
	36	[2824]	SETTABLE 	R0 K12 K8 ; R0["NameOverride"] := nil
	37	[2827]	GETGLOBAL	R1 K17 ; R1 := 0x25d99d89
	38	[2827]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0x25a6e75e]
	39	[2827]	CALL     	R1 2 2 ; R1 := R1(R2)
	40	[2828]	GETUPVAL 	R2 U2 ; R2 := U2
	41	[2828]	SELF     	R3 R1 K20 ; R4 := R1; R3 := R1[0xdc039065]
	42	[2828]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[2828]	OP_LOADBOOL	R4 1 0 ; R4 := true
	44	[2828]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	45	[2828]	SETTABLE 	R0 K19 R2 ; R0["OwnedItems"] := R2
	46	[2829]	GETUPVAL 	R2 U2 ; R2 := U2
	47	[2829]	SELF     	R3 R1 K22 ; R4 := R1; R3 := R1[0x64e44bdc]
	48	[2829]	CALL     	R3 2 2 ; R3 := R3(R4)
	49	[2829]	OP_LOADBOOL	R4 1 0 ; R4 := true
	50	[2829]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	51	[2829]	SETTABLE 	R0 K21 R2 ; R0["SalvageItems"] := R2
	52	[2830]	GETUPVAL 	R2 U3 ; R2 := U3
	53	[2830]	SELF     	R3 R1 K24 ; R4 := R1; R3 := R1[0xaea1cb86]
	54	[2830]	CALL     	R3 2 2 ; R3 := R3(R4)
	55	[2830]	LOADK    	R4 := 46.000000
	56	[2830]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	57	[2830]	SETTABLE 	R0 K23 R2 ; R0["RawSalvageItems"] := R2
	58	[2833]	SETTABLE 	R0 K26 K8 ; R0["WeaponCompatibility"] := nil
	59	[2834]	NEWTABLE 	R2 0 0 ; R2 := {}
	60	[2834]	SETTABLE 	R0 K27 R2 ; R0["AlwaysAvailableItems"] := R2
	61	[2836]	GETGLOBAL	R2 K28 ; R2 := 0x7b998233
	62	[2836]	GETGLOBAL	R3 K29 ; R3 := mCrewShipWeaponSkinsLoader
	63	[2836]	CALL     	R2 2 2 ; R2 := R2(R3)
	64	[2836]	TEST     	R2 0 ; if not R2 then PC := 83
	65	[2836]	JMP      	83 ; PC := 83
	66	[2837]	NEWTABLE 	R2 0 0 ; R2 := {}
	67	[2838]	GETGLOBAL	R3 K30 ; R3 := 0xcfc01047
	68	[2838]	GETGLOBAL	R4 K31 ; R4 := mCrewShipWeaponSkinsToLoad
	69	[2838]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	70	[2838]	JMP      	76 ; PC := 76
	71	[2839]	GETGLOBAL	R8 K32 ; R8 := 0x33bdd652
	72	[2839]	GETTABLE 	R8 R8 K33 ; R8 := R8[0x23d5322f]
	73	[2839]	MOVE     	R9 R2 ; R9 := R2
	74	[2839]	MOVE     	R10 R6 ; R10 := R6
	75	[2839]	CALL     	R8 3 1 ; R8(R9,R10)
	76	[2838]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 71; R5 := R6 end
	77	[2839]	JMP      	71 ; PC := 71
	78	[2842]	GETGLOBAL	R8 K34 ; R8 := 0xbd496aa1
	79	[2842]	GETTABLE 	R8 R8 K35 ; R8 := R8[0x42645da3]
	80	[2842]	MOVE     	R9 R2 ; R9 := R2
	81	[2842]	CALL     	R8 2 2 ; R8 := R8(R9)
	82	[2842]	SETGLOBALHASH	R8 K29 ; mCrewShipWeaponSkinsLoader := R8
	83	[2845]	GETUPVAL 	R8 U0 ; R8 := U0
	84	[2845]	SELF     	R8 R8 K36 ; R9 := R8; R8 := R8[0xd2120e76]
	85	[2845]	CALL     	R8 2 2 ; R8 := R8(R9)
	86	[2847]	LOADK    	R9 := 1.000000
	87	[2847]	LEN      	R10 R8 ; R10 := # R8
	88	[2847]	LOADK    	R11 := 1.000000
	89	[2847]	FORPREP  	R9 143 ; R9 -= R11; PC := 143
	90	[2848]	GETGLOBAL	R13 K37 ; R13 := 0xce225efa
	91	[2848]	LOADK    	R14 := 0.000000
	92	[2848]	CALL     	R13 2 1 ; R13(R14)
	93	[2849]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	94	[2851]	GETGLOBAL	R14 K38 ; R14 := 0x60cce7b4
	95	[2851]	GETGLOBAL	R15 K28 ; R15 := 0x7b998233
	96	[2851]	MOVE     	R16 R13 ; R16 := R13
	97	[2851]	CALL     	R15 2 2 ; R15 := R15(R16)
	98	[2851]	TEST     	R15 1 ; if R15 then PC := 103
	99	[2851]	JMP      	103 ; PC := 103
	100	[2851]	SELF     	R15 R13 K39 ; R16 := R13; R15 := R13[0x31e559d2]
	101	[2851]	CALL     	R15 2 2 ; R15 := R15(R16)
	102	[2851]	JMP      	105 ; PC := 105
	103	[2851]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 104
	104	[2851]	OP_LOADBOOL	R15 1 0 ; R15 := true
	105	[2851]	CALL     	R14 2 1 ; R14(R15)
	106	[2853]	SELF     	R14 R13 K40 ; R15 := R13; R14 := R13[0xfe9eb1a5]
	107	[2853]	CALL     	R14 2 2 ; R14 := R14(R15)
	108	[2854]	GETGLOBAL	R15 K41 ; R15 := mEquipment
	109	[2854]	GETTABLE 	R15 R15 K42 ; R15 := R15["mProductCategory"]
	110	[2854]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 143
	111	[2854]	JMP      	143 ; PC := 143
	112	[2855]	GETGLOBAL	R15 K43 ; R15 := 0x6c97a788
	113	[2855]	GETTABLE 	R15 R15 K44 ; R15 := R15[0x171c56bf]
	114	[2855]	CALL     	R15 1 2 ; R15 := R15()
	115	[2856]	SELF     	R16 R13 K45 ; R17 := R13; R16 := R13[0xf278f8a1]
	116	[2856]	CALL     	R16 2 2 ; R16 := R16(R17)
	117	[2857]	LOADK    	R17 K46 ; R17 := ""
	118	[2859]	SETTABLE 	R15 K2 R16 ; R15["mItemType"] := R16
	119	[2860]	GETTABLE 	R18 R15 K4 ; R18 := R15["mItemId"]
	120	[2860]	SETTABLE 	R18 K5 R17 ; R18[0x06d055f9] := R17
	121	[2862]	NEWTABLE 	R18 0 8 ; R18 := {}
	122	[2862]	SETTABLE 	R18 K0 R16 ; R18["ItemType"] := R16
	123	[2862]	SETTABLE 	R18 K6 R13 ; R18["mStoreItem"] := R13
	124	[2862]	GETGLOBAL	R19 K13 ; R19 := 0xae91e43b
	125	[2862]	SELF     	R19 R19 K14 ; R20 := R19; R19 := R19[0x42b04007]
	126	[2862]	GETGLOBAL	R21 K48 ; R21 := 0x64fb1586
	127	[2862]	SELF     	R22 R13 K15 ; R23 := R13; R22 := R13[0xd3a9d01f]
	128	[2862]	CALL     	R22 2 0 ; R22,... := R22(R23)
	129	[2862]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	130	[2862]	OP_LOADBOOL	R22 0 0 ; R22 := false
	131	[2862]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	132	[2862]	SETTABLE 	R18 K47 R19 ; R18["Name"] := R19
	133	[2862]	SETTABLE 	R18 K3 R17 ; R18["UID"] := R17
	134	[2862]	SETTABLE 	R18 K49 K50 ; R18["Xp"] := 0.000000
	135	[2862]	SETTABLE 	R18 K1 R15 ; R18["Item"] := R15
	136	[2862]	SETTABLE 	R18 K51 K52 ; R18["ItemCount"] := 1.000000
	137	[2862]	SETTABLE 	R18 K53 K54 ; R18["AlwaysAvailable"] := true
	138	[2863]	GETGLOBAL	R19 K32 ; R19 := 0x33bdd652
	139	[2863]	GETTABLE 	R19 R19 K33 ; R19 := R19[0x23d5322f]
	140	[2863]	GETTABLE 	R20 R0 K27 ; R20 := R0["AlwaysAvailableItems"]
	141	[2863]	MOVE     	R21 R18 ; R21 := R18
	142	[2863]	CALL     	R19 3 1 ; R19(R20,R21)
	143	[2847]	FORLOOP  	R9 90 ; R9 += R11; if R9 <= R10 then begin PC := 90; R12 := R9 end
	144	[2866]	RETURN   	R0 1 ; return 

function #73 <?:2868,2882> (22 instructions, 88 bytes at 0000021124B13510)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[2871]	GETTABLE 	R2 R0 K0 ; R2 := R0["Slot"]
	2	[2871]	EQ       	0 R2 K2 ; if R2 ~= 0.000000 then PC := 17
	3	[2871]	JMP      	17 ; PC := 17
	4	[2872]	GETTABLE 	R2 R0 K3 ; R2 := R0["Hand"]
	5	[2872]	EQ       	0 R2 K2 ; if R2 ~= 0.000000 then PC := 12
	6	[2872]	JMP      	12 ; PC := 12
	7	[2873]	GETGLOBAL	R2 K5 ; R2 := mShipSuit
	8	[2873]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xb6ef303c]
	9	[2873]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[2873]	MOVE     	R1 R2 ; R1 := R2
	11	[2873]	JMP      	21 ; PC := 21
	12	[2875]	GETGLOBAL	R2 K5 ; R2 := mShipSuit
	13	[2875]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x5ed1d978]
	14	[2875]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[2875]	MOVE     	R1 R2 ; R1 := R2
	16	[2876]	JMP      	21 ; PC := 21
	17	[2878]	GETGLOBAL	R2 K5 ; R2 := mShipSuit
	18	[2878]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x7ce48d19]
	19	[2878]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[2878]	MOVE     	R1 R2 ; R1 := R2
	21	[2881]	RETURN   	R1 2 ; return R1 
	22	[2882]	RETURN   	R0 1 ; return 

function #74 <?:2884,3020> (84 instructions, 336 bytes at 0000021124B13720)
0 params, 8 slots, 11 upvalues, 0 locals, 32 constants, 6 functions
	1	[2885]	LOADK    	R0 K0 ; R0 := "TopLeftContainer.Equipment"
	2	[2886]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[2886]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	4	[2886]	MOVE     	R3 R0 ; R3 := R0
	5	[2886]	LOADK    	R4 := 11.000000
	6	[2886]	OP_LOADBOOL	R5 0 0 ; R5 := false
	7	[2886]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	8	[2887]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	9	[2887]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	10	[2887]	LOADK    	R3 K3 ; R3 := "BottomRightContainer.Stats"
	11	[2887]	LOADK    	R4 := 11.000000
	12	[2887]	OP_LOADBOOL	R5 0 0 ; R5 := false
	13	[2887]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	14	[2888]	GETGLOBAL	R1 K4 ; R1 := 0x2d0fad09
	15	[2888]	LOADK    	R2 K5 ; R2 := "EE.Interface.Components.List"
	16	[2888]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[2889]	GETTABLE 	R2 R1 K7 ; R2 := R1[0x9383bc56]
	18	[2889]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	19	[2889]	MOVE     	R4 R0 ; R4 := R0
	20	[2889]	LOADK    	R5 K8 ; R5 := ".Section1"
	21	[2889]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	22	[2889]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[2889]	SETGLOBALHASH	R2 K6 ; mEquipment := R2
	24	[2890]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	25	[2890]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x1e5b5cfe]
	26	[2890]	LOADK    	R4 K10 ; R4 := "EquipmentSelected"
	27	[2890]	LOADK    	R5 K11 ; R5 := "EquipmentFocused"
	28	[2890]	LOADK    	R6 K12 ; R6 := "EquipmentUnfocused"
	29	[2890]	LOADK    	R7 K13 ; R7 := "EquipmentPressed"
	30	[2890]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	31	[2891]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	32	[2891]	SETTABLE 	R2 K14 K15 ; R2["mElementTransitionTime"] := 0.150000
	33	[2892]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	34	[2892]	SETTABLE 	R2 K16 K17 ; R2["mInitialDepth"] := 5000.000000
	35	[2893]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	36	[2893]	SETTABLE 	R2 K18 K19 ; R2["mForcedVerticalSeparation"] := 130.000000
	37	[2894]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	38	[2894]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	39	[2894]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x91a24e4b]
	40	[2894]	GETGLOBAL	R5 K6 ; R5 := mEquipment
	41	[2894]	GETTABLE 	R5 R5 K22 ; R5 := R5["mClipName"]
	42	[2894]	LOADK    	R6 K23 ; R6 := ".SectionIcon"
	43	[2894]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	44	[2894]	LOADK    	R6 := 1.000000
	45	[2894]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	46	[2894]	SETTABLE 	R2 K20 R3 ; R2[0xa73b2ebe] := R3
	47	[2895]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	48	[2910]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	49	[2910]	GETUPVAL 	R0 U0 ; R0 := U0
	50	[2910]	SETTABLE 	R2 K24 R3 ; R2["UpdateFocusedColors"] := R3
	51	[2911]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	52	[2958]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	53	[2958]	GETUPVAL 	R0 U0 ; R0 := U0
	54	[2958]	SETTABLE 	R2 K25 R3 ; R2["mElementDrawCallback"] := R3
	55	[2959]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	56	[2961]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	57	[2961]	SETTABLE 	R2 K26 R3 ; R2["SetupPreInterpolationValues"] := R3
	58	[2962]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	59	[2962]	GETGLOBAL	R3 K6 ; R3 := mEquipment
	60	[2962]	GETTABLE 	R3 R3 K28 ; R3 := R3["DefaultAlphaInterpolation"]
	61	[2962]	SETTABLE 	R2 K27 R3 ; R2["GetInterpolationProperties"] := R3
	62	[2963]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	63	[3003]	CLOSURE  	R3 3 ; R3 := closure(Function #4)
	64	[3003]	GETUPVAL 	R0 U0 ; R0 := U0
	65	[3003]	GETUPVAL 	R0 U1 ; R0 := U1
	66	[3003]	GETUPVAL 	R0 U2 ; R0 := U2
	67	[3003]	GETUPVAL 	R0 U3 ; R0 := U3
	68	[3003]	GETUPVAL 	R0 U4 ; R0 := U4
	69	[3003]	GETUPVAL 	R0 U5 ; R0 := U5
	70	[3003]	GETUPVAL 	R0 U6 ; R0 := U6
	71	[3003]	GETUPVAL 	R0 U7 ; R0 := U7
	72	[3003]	GETUPVAL 	R0 U8 ; R0 := U8
	73	[3003]	GETUPVAL 	R0 U9 ; R0 := U9
	74	[3003]	SETTABLE 	R2 K29 R3 ; R2["mOnFocusedCallback"] := R3
	75	[3004]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	76	[3011]	CLOSURE  	R3 4 ; R3 := closure(Function #5)
	77	[3011]	GETUPVAL 	R0 U1 ; R0 := U1
	78	[3011]	SETTABLE 	R2 K30 R3 ; R2["mOnUnfocusedCallback"] := R3
	79	[3012]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	80	[3019]	CLOSURE  	R3 5 ; R3 := closure(Function #6)
	81	[3019]	GETUPVAL 	R0 U0 ; R0 := U0
	82	[3019]	GETUPVAL 	R0 U10 ; R0 := U10
	83	[3019]	SETTABLE 	R2 K31 R3 ; R2["mOnSelectedCallback"] := R3
	84	[3020]	RETURN   	R0 1 ; return 

function #75 <?:3022,3072> (79 instructions, 316 bytes at 0000021124B16010)
0 params, 6 slots, 5 upvalues, 0 locals, 31 constants, 1 function
	1	[3023]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[3023]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7c09c373]
	3	[3023]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[3023]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[3023]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[3025]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	7	[3025]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3025]	GETTABLE 	R1 R1 K3 ; R1 := R1["EQUIP_INV"]
	9	[3025]	SETTABLE 	R0 K2 R1 ; R0["mOnSelectedState"] := R1
	10	[3026]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	11	[3026]	SETTABLE 	R0 K4 K6 ; R0["mProductCategory"] := 46.000000
	12	[3028]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	13	[3028]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	14	[3028]	NEWTABLE 	R2 0 3 ; R2 := {}
	15	[3028]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	16	[3028]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/BonusShields"
	17	[3028]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3028]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	19	[3028]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	20	[3028]	SETTABLE 	R2 K11 K12 ; R2["MoverTime"] := 0.238000
	21	[3028]	SETTABLE 	R2 K13 K15 ; R2["mSlot"] := 7.000000
	22	[3028]	OP_LOADBOOL	R3 1 0 ; R3 := true
	23	[3028]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	24	[3029]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	25	[3029]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	26	[3029]	NEWTABLE 	R2 0 3 ; R2 := {}
	27	[3029]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	28	[3029]	LOADK    	R4 K16 ; R4 := "/Lotus/Language/Railjack/BonusEngine"
	29	[3029]	NEWTABLE 	R5 0 0 ; R5 := {}
	30	[3029]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	31	[3029]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	32	[3029]	SETTABLE 	R2 K11 K17 ; R2["MoverTime"] := 0.350000
	33	[3029]	SETTABLE 	R2 K13 K18 ; R2["mSlot"] := 8.000000
	34	[3029]	OP_LOADBOOL	R3 1 0 ; R3 := true
	35	[3029]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	36	[3030]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	37	[3030]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	38	[3030]	NEWTABLE 	R2 0 3 ; R2 := {}
	39	[3030]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	40	[3030]	LOADK    	R4 K19 ; R4 := "/Lotus/Language/Railjack/HullMaterials"
	41	[3030]	NEWTABLE 	R5 0 0 ; R5 := {}
	42	[3030]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[3030]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	44	[3030]	SETTABLE 	R2 K11 K20 ; R2["MoverTime"] := 0.450000
	45	[3030]	SETTABLE 	R2 K13 K21 ; R2["mSlot"] := 10.000000
	46	[3030]	OP_LOADBOOL	R3 1 0 ; R3 := true
	47	[3030]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	48	[3031]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	49	[3031]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	50	[3031]	NEWTABLE 	R2 0 4 ; R2 := {}
	51	[3031]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	52	[3031]	LOADK    	R4 K22 ; R4 := "/Lotus/Language/Railjack/ReactorName"
	53	[3031]	NEWTABLE 	R5 0 0 ; R5 := {}
	54	[3031]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	55	[3031]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	56	[3031]	SETTABLE 	R2 K11 K23 ; R2["MoverTime"] := 0.500000
	57	[3031]	SETTABLE 	R2 K13 K24 ; R2["mSlot"] := 9.000000
	58	[3031]	GETUPVAL 	R3 U1 ; R3 := U1
	59	[3031]	SETTABLE 	R2 K25 R3 ; R2["CameraSpot"] := R3
	60	[3031]	OP_LOADBOOL	R3 1 0 ; R3 := true
	61	[3031]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	62	[3033]	GETGLOBAL	R0 K26 ; R0 := mShipSuit
	63	[3033]	SELF     	R0 R0 K27 ; R1 := R0; R0 := R0[0x0ad758cb]
	64	[3033]	CALL     	R0 2 2 ; R0 := R0(R1)
	65	[3033]	SUB      	R0 R0 K28 ; R0 := R0 - 1.000000
	66	[3034]	GETGLOBAL	R1 K0 ; R1 := mEquipment
	67	[3034]	SELF     	R1 R1 K29 ; R2 := R1; R1 := R1[0xea061e98]
	68	[3069]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	69	[3069]	MOVE     	R0 R0 ; R0 := R0
	70	[3069]	GETUPVAL 	R0 U2 ; R0 := U2
	71	[3069]	GETUPVAL 	R0 U3 ; R0 := U3
	72	[3069]	GETUPVAL 	R0 U4 ; R0 := U4
	73	[3034]	CALL     	R1 3 1 ; R1(R2,R3)
	74	[3071]	GETGLOBAL	R1 K0 ; R1 := mEquipment
	75	[3071]	SELF     	R1 R1 K30 ; R2 := R1; R1 := R1[0x71e9ac81]
	76	[3071]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	77	[3071]	OP_LOADBOOL	R5 1 0 ; R5 := true
	78	[3071]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	79	[3072]	RETURN   	R0 1 ; return 

function #76 <?:3074,3091> (69 instructions, 276 bytes at 0000021124B16B40)
0 params, 6 slots, 2 upvalues, 0 locals, 30 constants, 1 function
	1	[3075]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[3075]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7c09c373]
	3	[3075]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[3075]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[3075]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[3077]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	7	[3077]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3077]	GETTABLE 	R1 R1 K3 ; R1 := R1["WEAPON_INV"]
	9	[3077]	SETTABLE 	R0 K2 R1 ; R0["mOnSelectedState"] := R1
	10	[3078]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	11	[3078]	SETTABLE 	R0 K4 K6 ; R0["mProductCategory"] := 43.000000
	12	[3080]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	13	[3080]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	14	[3080]	NEWTABLE 	R2 0 5 ; R2 := {}
	15	[3080]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	16	[3080]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/Pilot"
	17	[3080]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3080]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	19	[3080]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	20	[3080]	SETTABLE 	R2 K11 K12 ; R2["MoverTime"] := 0.000000
	21	[3080]	SETTABLE 	R2 K13 K12 ; R2["Hand"] := 0.000000
	22	[3080]	SETTABLE 	R2 K14 K12 ; R2["Slot"] := 0.000000
	23	[3080]	SETTABLE 	R2 K16 K17 ; R2["Required"] := true
	24	[3080]	OP_LOADBOOL	R3 1 0 ; R3 := true
	25	[3080]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	26	[3081]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	27	[3081]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	28	[3081]	NEWTABLE 	R2 0 5 ; R2 := {}
	29	[3081]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	30	[3081]	LOADK    	R4 K18 ; R4 := "/Lotus/Language/Railjack/Turret"
	31	[3081]	NEWTABLE 	R5 0 0 ; R5 := {}
	32	[3081]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	33	[3081]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	34	[3081]	SETTABLE 	R2 K11 K19 ; R2["MoverTime"] := 0.325000
	35	[3081]	SETTABLE 	R2 K13 K20 ; R2["Hand"] := 1.000000
	36	[3081]	SETTABLE 	R2 K14 K12 ; R2["Slot"] := 0.000000
	37	[3081]	SETTABLE 	R2 K16 K17 ; R2["Required"] := true
	38	[3081]	OP_LOADBOOL	R3 1 0 ; R3 := true
	39	[3081]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	40	[3082]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	41	[3082]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	42	[3082]	NEWTABLE 	R2 0 5 ; R2 := {}
	43	[3082]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	44	[3082]	LOADK    	R4 K21 ; R4 := "/Lotus/Language/Railjack/Ordinance"
	45	[3082]	NEWTABLE 	R5 0 0 ; R5 := {}
	46	[3082]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	47	[3082]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	48	[3082]	SETTABLE 	R2 K11 K22 ; R2["MoverTime"] := 0.500000
	49	[3082]	SETTABLE 	R2 K13 K12 ; R2["Hand"] := 0.000000
	50	[3082]	SETTABLE 	R2 K14 K23 ; R2["Slot"] := 2.000000
	51	[3082]	SETTABLE 	R2 K16 K17 ; R2["Required"] := true
	52	[3082]	OP_LOADBOOL	R3 1 0 ; R3 := true
	53	[3082]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	54	[3084]	GETGLOBAL	R0 K25 ; R0 := 0x25d99d89
	55	[3084]	SELF     	R0 R0 K26 ; R1 := R0; R0 := R0[0x62c81b76]
	56	[3084]	CALL     	R0 2 2 ; R0 := R0(R1)
	57	[3084]	GETTABLE 	R0 R0 K27 ; R0 := R0["mCrewShipLoadOut"]
	58	[3084]	SETGLOBALHASH	R0 K24 ; mCurrentLoadout := R0
	59	[3085]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	60	[3085]	SELF     	R0 R0 K28 ; R1 := R0; R0 := R0[0xea061e98]
	61	[3088]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	62	[3088]	GETUPVAL 	R0 U1 ; R0 := U1
	63	[3085]	CALL     	R0 3 1 ; R0(R1,R2)
	64	[3090]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	65	[3090]	SELF     	R0 R0 K29 ; R1 := R0; R0 := R0[0x71e9ac81]
	66	[3090]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	67	[3090]	OP_LOADBOOL	R4 1 0 ; R4 := true
	68	[3090]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	69	[3091]	RETURN   	R0 1 ; return 

function #77 <?:3093,3112> (82 instructions, 328 bytes at 00000211233CDB80)
0 params, 6 slots, 2 upvalues, 0 locals, 27 constants, 1 function
	1	[3094]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[3094]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7c09c373]
	3	[3094]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[3094]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[3094]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[3096]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	7	[3096]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3096]	GETTABLE 	R1 R1 K3 ; R1 := R1["ARCH_INV"]
	9	[3096]	SETTABLE 	R0 K2 R1 ; R0["mOnSelectedState"] := R1
	10	[3097]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	11	[3097]	SETTABLE 	R0 K4 K5 ; R0["mProductCategory"] := nil
	12	[3099]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	13	[3099]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	14	[3099]	NEWTABLE 	R2 0 1 ; R2 := {}
	15	[3099]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	16	[3099]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/Loadout/Archwing_Wings"
	17	[3099]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3099]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	19	[3099]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	20	[3099]	OP_LOADBOOL	R3 1 0 ; R3 := true
	21	[3099]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	22	[3100]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	23	[3100]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	24	[3100]	NEWTABLE 	R2 0 1 ; R2 := {}
	25	[3100]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	26	[3100]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/BonusEngine"
	27	[3100]	NEWTABLE 	R5 0 0 ; R5 := {}
	28	[3100]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	29	[3100]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	30	[3100]	OP_LOADBOOL	R3 1 0 ; R3 := true
	31	[3100]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	32	[3101]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	33	[3101]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	34	[3101]	NEWTABLE 	R2 0 1 ; R2 := {}
	35	[3101]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	36	[3101]	LOADK    	R4 K11 ; R4 := "/Lotus/Language/Railjack/ReactorName"
	37	[3101]	NEWTABLE 	R5 0 0 ; R5 := {}
	38	[3101]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	39	[3101]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	40	[3101]	OP_LOADBOOL	R3 1 0 ; R3 := true
	41	[3101]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	42	[3102]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	43	[3102]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	44	[3102]	NEWTABLE 	R2 0 4 ; R2 := {}
	45	[3102]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	46	[3102]	LOADK    	R4 K12 ; R4 := "/Lotus/Language/Menu/Loadout_SpaceGun"
	47	[3102]	NEWTABLE 	R5 0 0 ; R5 := {}
	48	[3102]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	49	[3102]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	50	[3102]	SETTABLE 	R2 K13 K15 ; R2["LoadOutType"] := 2.000000
	51	[3102]	SETTABLE 	R2 K16 K15 ; R2["Slot"] := 2.000000
	52	[3102]	SETTABLE 	R2 K4 K18 ; R2["mProductCategory"] := 28.000000
	53	[3102]	OP_LOADBOOL	R3 1 0 ; R3 := true
	54	[3102]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	55	[3103]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	56	[3103]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	57	[3103]	NEWTABLE 	R2 0 4 ; R2 := {}
	58	[3103]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	59	[3103]	LOADK    	R4 K19 ; R4 := "/Lotus/Language/Menu/Loadout_SpaceMelee"
	60	[3103]	NEWTABLE 	R5 0 0 ; R5 := {}
	61	[3103]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	62	[3103]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	63	[3103]	SETTABLE 	R2 K13 K15 ; R2["LoadOutType"] := 2.000000
	64	[3103]	SETTABLE 	R2 K16 K20 ; R2["Slot"] := 3.000000
	65	[3103]	SETTABLE 	R2 K4 K21 ; R2["mProductCategory"] := 29.000000
	66	[3103]	OP_LOADBOOL	R3 1 0 ; R3 := true
	67	[3103]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	68	[3105]	GETGLOBAL	R0 K23 ; R0 := 0x25d99d89
	69	[3105]	SELF     	R0 R0 K24 ; R1 := R0; R0 := R0[0x62c81b76]
	70	[3105]	CALL     	R0 2 2 ; R0 := R0(R1)
	71	[3105]	SETGLOBALHASH	R0 K22 ; mCurrentLoadout := R0
	72	[3106]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	73	[3106]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0xea061e98]
	74	[3109]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	75	[3109]	GETUPVAL 	R0 U1 ; R0 := U1
	76	[3106]	CALL     	R0 3 1 ; R0(R1,R2)
	77	[3111]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	78	[3111]	SELF     	R0 R0 K26 ; R1 := R0; R0 := R0[0x71e9ac81]
	79	[3111]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	80	[3111]	OP_LOADBOOL	R4 1 0 ; R4 := true
	81	[3111]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	82	[3112]	RETURN   	R0 1 ; return 

function #78 <?:3114,3168> (155 instructions, 620 bytes at 00000211233CE290)
1 param, 12 slots, 0 upvalues, 0 locals, 18 constants, 1 function
	1	[3115]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[3115]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xa7ec3e8a]
	3	[3115]	MOVE     	R3 R0 ; R3 := R0
	4	[3115]	LOADK    	R4 K2 ; R4 := ".WarningIcon"
	5	[3115]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	6	[3115]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	7	[3115]	TEST     	R1 0 ; if not R1 then PC := 10
	8	[3115]	JMP      	10 ; PC := 10
	9	[3116]	RETURN   	R0 1 ; return 
	10	[3119]	GETGLOBAL	R1 K3 ; R1 := 0x38f10e85
	11	[3119]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	12	[3119]	MOVE     	R3 R0 ; R3 := R0
	13	[3119]	LOADK    	R4 K4 ; R4 := ".Icon.duplicateMovieClip"
	14	[3119]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	15	[3119]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	16	[3119]	LOADK    	R5 := 1000.000000
	17	[3119]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	18	[3120]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	19	[3120]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x1cb415c1]
	20	[3120]	MOVE     	R3 R0 ; R3 := R0
	21	[3120]	LOADK    	R4 K2 ; R4 := ".WarningIcon"
	22	[3120]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	23	[3120]	GETGLOBAL	R4 K7 ; R4 := 0x4903feff
	24	[3120]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	25	[3121]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	26	[3121]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	27	[3121]	MOVE     	R3 R0 ; R3 := R0
	28	[3121]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	29	[3121]	LOADK    	R5 := 10.000000
	30	[3121]	LOADK    	R6 := 0.000000
	31	[3121]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	32	[3122]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	33	[3122]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	34	[3122]	MOVE     	R3 R0 ; R3 := R0
	35	[3122]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	36	[3122]	LOADK    	R5 := 0.000000
	37	[3122]	LOADK    	R6 := 16.000000
	38	[3122]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	39	[3123]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	40	[3123]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	41	[3123]	MOVE     	R3 R0 ; R3 := R0
	42	[3123]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	43	[3123]	LOADK    	R5 := 1.000000
	44	[3123]	LOADK    	R6 := 12.000000
	45	[3123]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	46	[3124]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	47	[3124]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	48	[3124]	MOVE     	R3 R0 ; R3 := R0
	49	[3124]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	50	[3124]	LOADK    	R5 := 12.000000
	51	[3124]	LOADK    	R6 := 24.000000
	52	[3124]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	53	[3125]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	54	[3125]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	55	[3125]	MOVE     	R3 R0 ; R3 := R0
	56	[3125]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	57	[3125]	LOADK    	R5 := 13.000000
	58	[3125]	LOADK    	R6 := 24.000000
	59	[3125]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	60	[3126]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	61	[3126]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	62	[3126]	MOVE     	R3 R0 ; R3 := R0
	63	[3126]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	64	[3126]	LOADK    	R5 := 9.000000
	65	[3126]	GETGLOBAL	R6 K9 ; R6 := mColors
	66	[3126]	GETTABLE 	R6 R6 K10 ; R6 := R6["FloatingContentHighlight"]
	67	[3126]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	68	[3128]	GETGLOBAL	R1 K3 ; R1 := 0x38f10e85
	69	[3128]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	70	[3128]	MOVE     	R3 R0 ; R3 := R0
	71	[3128]	LOADK    	R4 K4 ; R4 := ".Icon.duplicateMovieClip"
	72	[3128]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	73	[3128]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	74	[3128]	LOADK    	R5 := 999.000000
	75	[3128]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	76	[3129]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	77	[3129]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x1cb415c1]
	78	[3129]	MOVE     	R3 R0 ; R3 := R0
	79	[3129]	LOADK    	R4 K12 ; R4 := ".WarningShadow"
	80	[3129]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	81	[3129]	GETGLOBAL	R4 K13 ; R4 := 0xcb3f5e0a
	82	[3129]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	83	[3130]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	84	[3130]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	85	[3130]	MOVE     	R3 R0 ; R3 := R0
	86	[3130]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	87	[3130]	LOADK    	R5 := 10.000000
	88	[3130]	LOADK    	R6 := 0.000000
	89	[3130]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	90	[3131]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	91	[3131]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	92	[3131]	MOVE     	R3 R0 ; R3 := R0
	93	[3131]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	94	[3131]	LOADK    	R5 := 0.000000
	95	[3131]	LOADK    	R6 := 16.000000
	96	[3131]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	97	[3132]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	98	[3132]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	99	[3132]	MOVE     	R3 R0 ; R3 := R0
	100	[3132]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	101	[3132]	LOADK    	R5 := 1.000000
	102	[3132]	LOADK    	R6 := 12.000000
	103	[3132]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	104	[3133]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	105	[3133]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	106	[3133]	MOVE     	R3 R0 ; R3 := R0
	107	[3133]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	108	[3133]	LOADK    	R5 := 12.000000
	109	[3133]	LOADK    	R6 := 30.000000
	110	[3133]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	111	[3134]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	112	[3134]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	113	[3134]	MOVE     	R3 R0 ; R3 := R0
	114	[3134]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	115	[3134]	LOADK    	R5 := 13.000000
	116	[3134]	LOADK    	R6 := 30.000000
	117	[3134]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	118	[3135]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	119	[3135]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	120	[3135]	MOVE     	R3 R0 ; R3 := R0
	121	[3135]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	122	[3135]	LOADK    	R5 := 9.000000
	123	[3135]	GETGLOBAL	R6 K9 ; R6 := mColors
	124	[3135]	GETTABLE 	R6 R6 K14 ; R6 := R6["Background1"]
	125	[3135]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	126	[3137]	LOADK    	R1 := 50.000000
	127	[3138]	LOADK    	R2 := 100.000000
	128	[3139]	SUB      	R3 R2 R1 ; R3 := R2 - R1
	129	[3139]	DIV      	R3 R3 K15 ; R3 := R3 / 2.000000
	130	[3139]	ADD      	R3 R3 R1 ; R3 := R3 + R1
	131	[3140]	LOADK    	R4 := 40.000000
	132	[3141]	LOADK    	R5 := 80.000000
	133	[3142]	SUB      	R6 R5 R4 ; R6 := R5 - R4
	134	[3142]	DIV      	R6 R6 K15 ; R6 := R6 / 2.000000
	135	[3142]	ADD      	R6 R6 R4 ; R6 := R6 + R4
	136	[3144]	LOADK    	R7 := 0.500000
	137	[3145]	LOADK    	R8 K16 ; R8 := 0.100000
	138	[3146]	LOADK    	R9 K17 ; R9 := 0.300000
	139	[3148]	DIV      	R7 R7 K15 ; R7 := R7 / 2.000000
	140	[3149]	LOADNIL  	R10 R10 ; R10 := nil
	141	[3166]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	142	[3166]	MOVE     	R0 R0 ; R0 := R0
	143	[3166]	MOVE     	R0 R3 ; R0 := R3
	144	[3166]	MOVE     	R0 R7 ; R0 := R7
	145	[3166]	MOVE     	R0 R8 ; R0 := R8
	146	[3166]	MOVE     	R0 R6 ; R0 := R6
	147	[3166]	MOVE     	R0 R2 ; R0 := R2
	148	[3166]	MOVE     	R0 R5 ; R0 := R5
	149	[3166]	MOVE     	R0 R9 ; R0 := R9
	150	[3166]	MOVE     	R0 R1 ; R0 := R1
	151	[3166]	MOVE     	R0 R4 ; R0 := R4
	152	[3166]	MOVE     	R0 R10 ; R0 := R10
	153	[3167]	MOVE     	R11 R10 ; R11 := R10
	154	[3167]	CALL     	R11 1 1 ; R11()
	155	[3168]	RETURN   	R0 1 ; return 

function #79 <?:3170,3197> (124 instructions, 496 bytes at 00000211233CF440)
8 params, 19 slots, 2 upvalues, 0 locals, 21 constants, 0 functions
	1	[3171]	OP_LOADBOOL	R8 0 0 ; R8 := false
	2	[3172]	EQ       	1 R5 K0 ; if R5 == nil then PC := 28
	3	[3172]	JMP      	28 ; PC := 28
	4	[3173]	SUB      	R9 R5 R7 ; R9 := R5 - R7
	5	[3173]	LT       	1 R9 R3 ; if R9 < R3 then PC := 8
	6	[3173]	JMP      	8 ; PC := 8
	7	[3173]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 8
	8	[3173]	OP_LOADBOOL	R8 1 0 ; R8 := true
	9	[3174]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	10	[3174]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0xe261aa96]
	11	[3174]	MOVE     	R11 R0 ; R11 := R0
	12	[3174]	LOADK    	R12 K3 ; R12 := "Name"
	13	[3174]	LOADK    	R13 := 29.000000
	14	[3174]	GETUPVAL 	R14 U0 ; R14 := U0
	15	[3174]	GETTABLE 	R14 R14 K4 ; R14 := R14[0x1142c7a8]
	16	[3174]	MOVE     	R15 R3 ; R15 := R3
	17	[3174]	LOADK    	R16 := 0.000000
	18	[3174]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	19	[3174]	LOADK    	R15 K5 ; R15 := "/"
	20	[3174]	GETUPVAL 	R16 U0 ; R16 := U0
	21	[3174]	GETTABLE 	R16 R16 K4 ; R16 := R16[0x1142c7a8]
	22	[3174]	MOVE     	R17 R5 ; R17 := R5
	23	[3174]	LOADK    	R18 := 0.000000
	24	[3174]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	25	[3174]	CONCAT   	R14 R14 R16 ; R14 := R14 .. R15 .. R16
	26	[3174]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	27	[3174]	JMP      	39 ; PC := 39
	28	[3176]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	29	[3176]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0xe261aa96]
	30	[3176]	MOVE     	R11 R0 ; R11 := R0
	31	[3176]	LOADK    	R12 K3 ; R12 := "Name"
	32	[3176]	LOADK    	R13 := 29.000000
	33	[3176]	GETUPVAL 	R14 U0 ; R14 := U0
	34	[3176]	GETTABLE 	R14 R14 K4 ; R14 := R14[0x1142c7a8]
	35	[3176]	MOVE     	R15 R3 ; R15 := R3
	36	[3176]	LOADK    	R16 := 0.000000
	37	[3176]	CALL     	R14 3 0 ; R14,... := R14(R15,R16)
	38	[3176]	CALL     	R9 0 1 ; R9(R10,...)
	39	[3179]	TEST     	R2 0 ; if not R2 then PC := 86
	40	[3179]	JMP      	86 ; PC := 86
	41	[3180]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	42	[3180]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	43	[3180]	MOVE     	R11 R0 ; R11 := R0
	44	[3180]	LOADK    	R12 K3 ; R12 := "Name"
	45	[3180]	LOADK    	R13 := 76.000000
	46	[3180]	GETGLOBAL	R14 K7 ; R14 := mColors
	47	[3180]	GETTABLE 	R14 R14 K8 ; R14 := R14["Background1"]
	48	[3180]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	49	[3181]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	50	[3181]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	51	[3181]	MOVE     	R11 R0 ; R11 := R0
	52	[3181]	LOADK    	R12 K3 ; R12 := "Name"
	53	[3181]	LOADK    	R13 := 36.000000
	54	[3181]	GETGLOBAL	R14 K7 ; R14 := mColors
	55	[3181]	GETTABLE 	R14 R14 K9 ; R14 := R14["FloatingContentHighlight"]
	56	[3181]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	57	[3182]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	58	[3182]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	59	[3182]	MOVE     	R11 R0 ; R11 := R0
	60	[3182]	LOADK    	R12 K10 ; R12 := "Icon"
	61	[3182]	LOADK    	R13 := 9.000000
	62	[3182]	GETGLOBAL	R14 K7 ; R14 := mColors
	63	[3182]	GETTABLE 	R14 R14 K11 ; R14 := R14["FloatingContent"]
	64	[3182]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	65	[3183]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	66	[3183]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	67	[3183]	MOVE     	R11 R0 ; R11 := R0
	68	[3183]	LOADK    	R12 K10 ; R12 := "Icon"
	69	[3183]	LOADK    	R13 := 12.000000
	70	[3183]	MOVE     	R14 R6 ; R14 := R6
	71	[3183]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	72	[3184]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	73	[3184]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	74	[3184]	MOVE     	R11 R0 ; R11 := R0
	75	[3184]	LOADK    	R12 K10 ; R12 := "Icon"
	76	[3184]	LOADK    	R13 := 13.000000
	77	[3184]	MOVE     	R14 R6 ; R14 := R6
	78	[3184]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	79	[3185]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	80	[3185]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0x1cb415c1]
	81	[3185]	MOVE     	R11 R0 ; R11 := R0
	82	[3185]	LOADK    	R12 K13 ; R12 := ".Icon"
	83	[3185]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	84	[3185]	MOVE     	R12 R4 ; R12 := R4
	85	[3185]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	86	[3188]	TEST     	R8 0 ; if not R8 then PC := 92
	87	[3188]	JMP      	92 ; PC := 92
	88	[3189]	GETUPVAL 	R9 U1 ; R9 := U1
	89	[3189]	MOVE     	R10 R0 ; R10 := R0
	90	[3189]	CALL     	R9 2 1 ; R9(R10)
	91	[3189]	JMP      	124 ; PC := 124
	92	[3191]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	93	[3191]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0xaf5300dc]
	94	[3191]	MOVE     	R11 R0 ; R11 := R0
	95	[3191]	LOADK    	R12 K15 ; R12 := ".WarningIcon"
	96	[3191]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	97	[3191]	CALL     	R9 3 1 ; R9(R10,R11)
	98	[3192]	GETGLOBAL	R9 K16 ; R9 := 0x38f10e85
	99	[3192]	GETGLOBAL	R10 K1 ; R10 := 0xae91e43b
	100	[3192]	MOVE     	R11 R0 ; R11 := R0
	101	[3192]	LOADK    	R12 K17 ; R12 := ".WarningIcon.removeMovieClip"
	102	[3192]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	103	[3192]	CALL     	R9 3 1 ; R9(R10,R11)
	104	[3193]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	105	[3193]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0xaf5300dc]
	106	[3193]	MOVE     	R11 R0 ; R11 := R0
	107	[3193]	LOADK    	R12 K18 ; R12 := ".WarningShadow"
	108	[3193]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	109	[3193]	CALL     	R9 3 1 ; R9(R10,R11)
	110	[3194]	GETGLOBAL	R9 K16 ; R9 := 0x38f10e85
	111	[3194]	GETGLOBAL	R10 K1 ; R10 := 0xae91e43b
	112	[3194]	MOVE     	R11 R0 ; R11 := R0
	113	[3194]	LOADK    	R12 K19 ; R12 := ".WarningShadow.removeMovieClip"
	114	[3194]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	115	[3194]	CALL     	R9 3 1 ; R9(R10,R11)
	116	[3195]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	117	[3195]	SELF     	R9 R9 K20 ; R10 := R9; R9 := R9[0x67bc869f]
	118	[3195]	MOVE     	R11 R0 ; R11 := R0
	119	[3195]	LOADK    	R12 K13 ; R12 := ".Icon"
	120	[3195]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	121	[3195]	LOADK    	R12 := 10.000000
	122	[3195]	LOADK    	R13 := 100.000000
	123	[3195]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	124	[3197]	RETURN   	R0 1 ; return 

function #80 <?:3199,3230> (156 instructions, 624 bytes at 00000211233CFAD0)
1 param, 19 slots, 3 upvalues, 0 locals, 48 constants, 0 functions
	1	[3200]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[3200]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x25a6e75e]
	3	[3200]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3201]	GETGLOBAL	R2 K2 ; R2 := 0xa94df70b
	5	[3201]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x99c4ef3a]
	6	[3201]	LOADK    	R4 := 43.000000
	7	[3201]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[3202]	SELF     	R3 R1 K5 ; R4 := R1; R3 := R1[0xdc039065]
	9	[3202]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[3202]	LEN      	R3 R3 ; R3 := # R3
	11	[3202]	SELF     	R4 R1 K6 ; R5 := R1; R4 := R1[0xbfba693e]
	12	[3202]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[3202]	LEN      	R4 R4 ; R4 := # R4
	14	[3202]	ADD      	R3 R3 R4 ; R3 := R3 + R4
	15	[3203]	GETUPVAL 	R4 U0 ; R4 := U0
	16	[3203]	LOADK    	R5 K7 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Components"
	17	[3203]	LOADK    	R6 K8 ; R6 := "/Lotus/Language/Railjack/ComponentsCapacity"
	18	[3203]	MOVE     	R7 R0 ; R7 := R0
	19	[3203]	MOVE     	R8 R3 ; R8 := R3
	20	[3203]	GETGLOBAL	R9 K9 ; R9 := 0xf00fa6bd
	21	[3203]	GETGLOBAL	R10 K0 ; R10 := 0x25d99d89
	22	[3203]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x25a6e75e]
	23	[3203]	CALL     	R10 2 2 ; R10 := R10(R11)
	24	[3203]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0xb8a2d888]
	25	[3203]	MOVE     	R12 R2 ; R12 := R2
	26	[3203]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	27	[3203]	ADD      	R10 R3 R10 ; R10 := R3 + R10
	28	[3203]	LOADK    	R11 := 46.000000
	29	[3203]	LOADK    	R12 := 1.000000
	30	[3203]	CALL     	R4 9 1 ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
	31	[3205]	SELF     	R4 R1 K11 ; R5 := R1; R4 := R1[0x64e44bdc]
	32	[3205]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[3205]	LEN      	R4 R4 ; R4 := # R4
	34	[3205]	SELF     	R5 R1 K12 ; R6 := R1; R5 := R1[0xe600a7f3]
	35	[3205]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[3205]	LEN      	R5 R5 ; R5 := # R5
	37	[3205]	ADD      	R3 R4 R5 ; R3 := R4 + R5
	38	[3206]	GETUPVAL 	R4 U0 ; R4 := U0
	39	[3206]	LOADK    	R5 K13 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Wreckage"
	40	[3206]	LOADK    	R6 K14 ; R6 := "/Lotus/Language/Railjack/WreckageCapacity"
	41	[3206]	MOVE     	R7 R0 ; R7 := R0
	42	[3206]	MOVE     	R8 R3 ; R8 := R3
	43	[3206]	GETGLOBAL	R9 K15 ; R9 := 0x1df5e886
	44	[3206]	GETUPVAL 	R10 U1 ; R10 := U1
	45	[3206]	LOADK    	R11 := 42.000000
	46	[3206]	LOADK    	R12 := 1.000000
	47	[3206]	CALL     	R4 9 1 ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
	48	[3208]	LOADK    	R3 := 0.000000
	49	[3209]	SELF     	R4 R1 K16 ; R5 := R1; R4 := R1[0xaea1cb86]
	50	[3209]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[3210]	LOADK    	R5 := 1.000000
	52	[3210]	LEN      	R6 R4 ; R6 := # R4
	53	[3210]	LOADK    	R7 := 1.000000
	54	[3210]	FORPREP  	R5 58 ; R5 -= R7; PC := 58
	55	[3211]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	56	[3211]	GETTABLE 	R9 R9 K17 ; R9 := R9["mItemCount"]
	57	[3211]	ADD      	R3 R3 R9 ; R3 := R3 + R9
	58	[3210]	FORLOOP  	R5 55 ; R5 += R7; if R5 <= R6 then begin PC := 55; R8 := R5 end
	59	[3213]	GETUPVAL 	R9 U0 ; R9 := U0
	60	[3213]	LOADK    	R10 K18 ; R10 := "TopLeftContainer.CurrencyBar.Display1.Unidentified"
	61	[3213]	LOADK    	R11 K14 ; R11 := "/Lotus/Language/Railjack/WreckageCapacity"
	62	[3213]	MOVE     	R12 R0 ; R12 := R0
	63	[3213]	MOVE     	R13 R3 ; R13 := R3
	64	[3213]	GETGLOBAL	R14 K19 ; R14 := 0x7accb9a0
	65	[3213]	LOADNIL  	R15 R15 ; R15 := nil
	66	[3213]	LOADK    	R16 := 42.000000
	67	[3213]	LOADK    	R17 := 5.000000
	68	[3213]	CALL     	R9 9 1 ; R9(R10,R11,R12,R13,R14,R15,R16,R17)
	69	[3215]	TEST     	R0 0 ; if not R0 then PC := 156
	70	[3215]	JMP      	156 ; PC := 156
	71	[3216]	GETUPVAL 	R9 U2 ; R9 := U2
	72	[3216]	GETTABLE 	R9 R9 K20 ; R9 := R9[0x8bcd12b6]
	73	[3216]	GETGLOBAL	R10 K21 ; R10 := mColors
	74	[3216]	GETTABLE 	R10 R10 K22 ; R10 := R10["Background1"]
	75	[3216]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[3217]	GETUPVAL 	R10 U2 ; R10 := U2
	77	[3217]	GETTABLE 	R10 R10 K20 ; R10 := R10[0x8bcd12b6]
	78	[3217]	GETGLOBAL	R11 K21 ; R11 := mColors
	79	[3217]	GETTABLE 	R11 R11 K23 ; R11 := R11["FloatingContent"]
	80	[3217]	CALL     	R10 2 2 ; R10 := R10(R11)
	81	[3218]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	82	[3218]	SELF     	R11 R11 K25 ; R12 := R11; R11 := R11[0xd5181643]
	83	[3218]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	84	[3218]	GETGLOBAL	R14 K27 ; R14 := 0xe992de15
	85	[3218]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	86	[3219]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	87	[3219]	SELF     	R11 R11 K28 ; R12 := R11; R11 := R11[0x91e13703]
	88	[3219]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	89	[3219]	LOADK    	R14 K29 ; R14 := "VisibilityCenter"
	90	[3219]	LOADK    	R15 := 0.500000
	91	[3219]	LOADK    	R16 := 0.000000
	92	[3219]	LOADK    	R17 := 0.000000
	93	[3219]	LOADK    	R18 := 0.000000
	94	[3219]	CALL     	R11 8 1 ; R11(R12,R13,R14,R15,R16,R17,R18)
	95	[3220]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	96	[3220]	SELF     	R11 R11 K28 ; R12 := R11; R11 := R11[0x91e13703]
	97	[3220]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	98	[3220]	LOADK    	R14 K30 ; R14 := "RectEdgeColor"
	99	[3220]	GETTABLE 	R15 R10 K31 ; R15 := R10["r"]
	100	[3220]	GETTABLE 	R16 R10 K32 ; R16 := R10["g"]
	101	[3220]	GETTABLE 	R17 R10 K33 ; R17 := R10["b"]
	102	[3220]	LOADK    	R18 K34 ; R18 := 0.300000
	103	[3220]	CALL     	R11 8 1 ; R11(R12,R13,R14,R15,R16,R17,R18)
	104	[3221]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	105	[3221]	SELF     	R11 R11 K28 ; R12 := R11; R11 := R11[0x91e13703]
	106	[3221]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	107	[3221]	LOADK    	R14 K35 ; R14 := "RectInnerColor"
	108	[3221]	GETTABLE 	R15 R9 K31 ; R15 := R9["r"]
	109	[3221]	GETTABLE 	R16 R9 K32 ; R16 := R9["g"]
	110	[3221]	GETTABLE 	R17 R9 K33 ; R17 := R9["b"]
	111	[3221]	LOADK    	R18 K36 ; R18 := 0.700000
	112	[3221]	CALL     	R11 8 1 ; R11(R12,R13,R14,R15,R16,R17,R18)
	113	[3222]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	114	[3222]	SELF     	R11 R11 K37 ; R12 := R11; R11 := R11[0x67bc869f]
	115	[3222]	LOADK    	R13 K38 ; R13 := "TopLeftContainer.CurrencyBar.Display1.Capacity"
	116	[3222]	LOADK    	R14 := 9.000000
	117	[3222]	GETGLOBAL	R15 K21 ; R15 := mColors
	118	[3222]	GETTABLE 	R15 R15 K23 ; R15 := R15["FloatingContent"]
	119	[3222]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	120	[3223]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	121	[3223]	SELF     	R11 R11 K39 ; R12 := R11; R11 := R11[0x5f56eeab]
	122	[3223]	LOADK    	R13 K38 ; R13 := "TopLeftContainer.CurrencyBar.Display1.Capacity"
	123	[3223]	LOADK    	R14 := 29.000000
	124	[3223]	GETGLOBAL	R15 K40 ; R15 := 0x5f0788c4
	125	[3223]	GETGLOBAL	R16 K41 ; R16 := 0x603636ad
	126	[3223]	LOADK    	R17 K42 ; R17 := "/Lotus/Language/Menu/ModsCapacity"
	127	[3223]	NEWTABLE 	R18 0 0 ; R18 := {}
	128	[3223]	CALL     	R16 3 0 ; R16,... := R16(R17,R18)
	129	[3223]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	130	[3223]	LOADK    	R16 K43 ; R16 := ":"
	131	[3223]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	132	[3223]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	133	[3225]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	134	[3225]	SELF     	R11 R11 K44 ; R12 := R11; R11 := R11[0x91a24e4b]
	135	[3225]	LOADK    	R13 K38 ; R13 := "TopLeftContainer.CurrencyBar.Display1.Capacity"
	136	[3225]	LOADK    	R14 := 33.000000
	137	[3225]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	138	[3226]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	139	[3226]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x67bc869f]
	140	[3226]	LOADK    	R14 K7 ; R14 := "TopLeftContainer.CurrencyBar.Display1.Components"
	141	[3226]	LOADK    	R15 := 0.000000
	142	[3226]	ADD      	R16 R11 K45 ; R16 := R11 + 50.000000
	143	[3226]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	144	[3227]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	145	[3227]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x67bc869f]
	146	[3227]	LOADK    	R14 K13 ; R14 := "TopLeftContainer.CurrencyBar.Display1.Wreckage"
	147	[3227]	LOADK    	R15 := 0.000000
	148	[3227]	ADD      	R16 R11 K46 ; R16 := R11 + 130.000000
	149	[3227]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	150	[3228]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	151	[3228]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x67bc869f]
	152	[3228]	LOADK    	R14 K18 ; R14 := "TopLeftContainer.CurrencyBar.Display1.Unidentified"
	153	[3228]	LOADK    	R15 := 0.000000
	154	[3228]	ADD      	R16 R11 K47 ; R16 := R11 + 210.000000
	155	[3228]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	156	[3230]	RETURN   	R0 1 ; return 

function #81 <?:3232,3245> (80 instructions, 320 bytes at 00000211233D0600)
0 params, 4 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[3233]	GETGLOBAL	R0 K0 ; R0 := mColors
	2	[3233]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[3233]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	4	[3233]	LOADK    	R2 := 2.000000
	5	[3233]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[3233]	SETTABLE 	R0 K1 R1 ; R0["Background1Object"] := R1
	7	[3234]	GETGLOBAL	R0 K0 ; R0 := mColors
	8	[3234]	GETGLOBAL	R1 K0 ; R1 := mColors
	9	[3234]	GETTABLE 	R1 R1 K1 ; R1 := R1["Background1Object"]
	10	[3234]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xa5d5c8f6]
	11	[3234]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[3234]	SETTABLE 	R0 K4 R1 ; R0["Background1"] := R1
	13	[3235]	GETGLOBAL	R0 K0 ; R0 := mColors
	14	[3235]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[3235]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	16	[3235]	LOADK    	R2 := 5.000000
	17	[3235]	OP_LOADBOOL	R3 1 0 ; R3 := true
	18	[3235]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	19	[3235]	SETTABLE 	R0 K6 R1 ; R0[0x71e9ac81] := R1
	20	[3236]	GETGLOBAL	R0 K0 ; R0 := mColors
	21	[3236]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[3236]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	23	[3236]	LOADK    	R2 := 6.000000
	24	[3236]	OP_LOADBOOL	R3 1 0 ; R3 := true
	25	[3236]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	26	[3236]	SETTABLE 	R0 K7 R1 ; R0["Content"] := R1
	27	[3237]	GETGLOBAL	R0 K0 ; R0 := mColors
	28	[3237]	GETUPVAL 	R1 U0 ; R1 := U0
	29	[3237]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	30	[3237]	LOADK    	R2 := 9.000000
	31	[3237]	CALL     	R1 2 2 ; R1 := R1(R2)
	32	[3237]	SETTABLE 	R0 K8 R1 ; R0["FloatingContentObject"] := R1
	33	[3238]	GETGLOBAL	R0 K0 ; R0 := mColors
	34	[3238]	GETGLOBAL	R1 K0 ; R1 := mColors
	35	[3238]	GETTABLE 	R1 R1 K8 ; R1 := R1["FloatingContentObject"]
	36	[3238]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xa5d5c8f6]
	37	[3238]	CALL     	R1 2 2 ; R1 := R1(R2)
	38	[3238]	SETTABLE 	R0 K9 R1 ; R0[0x659d451f] := R1
	39	[3239]	GETGLOBAL	R0 K0 ; R0 := mColors
	40	[3239]	GETUPVAL 	R1 U0 ; R1 := U0
	41	[3239]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	42	[3239]	LOADK    	R2 := 10.000000
	43	[3239]	OP_LOADBOOL	R3 0 0 ; R3 := false
	44	[3239]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	45	[3239]	SETTABLE 	R0 K10 R1 ; R0[0xf92b1165] := R1
	46	[3240]	GETGLOBAL	R0 K0 ; R0 := mColors
	47	[3240]	GETGLOBAL	R1 K0 ; R1 := mColors
	48	[3240]	GETTABLE 	R1 R1 K10 ; R1 := R1["FloatingContentHighlightObject"]
	49	[3240]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xa5d5c8f6]
	50	[3240]	CALL     	R1 2 2 ; R1 := R1(R2)
	51	[3240]	SETTABLE 	R0 K11 R1 ; R0[0x9c7414a5] := R1
	52	[3241]	GETGLOBAL	R0 K0 ; R0 := mColors
	53	[3241]	GETUPVAL 	R1 U0 ; R1 := U0
	54	[3241]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	55	[3241]	LOADK    	R2 := 1.000000
	56	[3241]	OP_LOADBOOL	R3 1 0 ; R3 := true
	57	[3241]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	58	[3241]	SETTABLE 	R0 K12 R1 ; R0["BackerHighlight"] := R1
	59	[3242]	GETGLOBAL	R0 K0 ; R0 := mColors
	60	[3242]	GETUPVAL 	R1 U0 ; R1 := U0
	61	[3242]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	62	[3242]	LOADK    	R2 := 12.000000
	63	[3242]	OP_LOADBOOL	R3 1 0 ; R3 := true
	64	[3242]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	65	[3242]	SETTABLE 	R0 K13 R1 ; R0["Negative"] := R1
	66	[3243]	GETGLOBAL	R0 K0 ; R0 := mColors
	67	[3243]	GETUPVAL 	R1 U1 ; R1 := U1
	68	[3243]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x9f57dd7d]
	69	[3243]	GETGLOBAL	R2 K0 ; R2 := mColors
	70	[3243]	GETTABLE 	R2 R2 K9 ; R2 := R2["FloatingContent"]
	71	[3243]	CALL     	R1 2 2 ; R1 := R1(R2)
	72	[3243]	SETTABLE 	R0 K14 R1 ; R0["FloatingContentHex"] := R1
	73	[3244]	GETGLOBAL	R0 K0 ; R0 := mColors
	74	[3244]	GETUPVAL 	R1 U1 ; R1 := U1
	75	[3244]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x9f57dd7d]
	76	[3244]	GETGLOBAL	R2 K0 ; R2 := mColors
	77	[3244]	GETTABLE 	R2 R2 K11 ; R2 := R2["FloatingContentHighlight"]
	78	[3244]	CALL     	R1 2 2 ; R1 := R1(R2)
	79	[3244]	SETTABLE 	R0 K16 R1 ; R0["FloatingContentHighlightHex"] := R1
	80	[3245]	RETURN   	R0 1 ; return 

function #82 <?:3247,3273> (58 instructions, 232 bytes at 00000211233D0A50)
1 param, 6 slots, 3 upvalues, 0 locals, 16 constants, 2 functions
	1	[3248]	TEST     	R0 1 ; if R0 then PC := 5
	2	[3248]	JMP      	5 ; PC := 5
	3	[3249]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[3249]	CALL     	R1 1 1 ; R1()
	5	[3252]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	6	[3252]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	7	[3252]	LOADK    	R3 K2 ; R3 := "TopLeftContainer.Lines"
	8	[3252]	LOADK    	R4 := 9.000000
	9	[3252]	GETGLOBAL	R5 K3 ; R5 := mColors
	10	[3252]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	11	[3252]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	12	[3253]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	13	[3253]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	14	[3253]	LOADK    	R3 K5 ; R3 := "TopRightContainer.UpgradedDecoration"
	15	[3253]	LOADK    	R4 := 9.000000
	16	[3253]	GETGLOBAL	R5 K3 ; R5 := mColors
	17	[3253]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	18	[3253]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	19	[3254]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	20	[3254]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	21	[3254]	LOADK    	R3 K6 ; R3 := "TopRightContainer.Lines"
	22	[3254]	LOADK    	R4 := 9.000000
	23	[3254]	GETGLOBAL	R5 K3 ; R5 := mColors
	24	[3254]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	25	[3254]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	26	[3255]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	27	[3255]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	28	[3255]	LOADK    	R3 K7 ; R3 := "BottomRightContainer.Lines"
	29	[3255]	LOADK    	R4 := 9.000000
	30	[3255]	GETGLOBAL	R5 K3 ; R5 := mColors
	31	[3255]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	32	[3255]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	33	[3257]	GETUPVAL 	R1 U1 ; R1 := U1
	34	[3257]	CALL     	R1 1 1 ; R1()
	35	[3258]	GETUPVAL 	R1 U2 ; R1 := U2
	36	[3258]	OP_LOADBOOL	R2 1 0 ; R2 := true
	37	[3258]	CALL     	R1 2 1 ; R1(R2)
	38	[3260]	GETGLOBAL	R1 K8 ; R1 := mStats
	39	[3260]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x71e9ac81]
	40	[3260]	CALL     	R1 2 1 ; R1(R2)
	41	[3261]	GETGLOBAL	R1 K10 ; R1 := mInventoryGrid
	42	[3261]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x71e9ac81]
	43	[3261]	LOADNIL  	R3 R3 ; R3 := nil
	44	[3261]	OP_LOADBOOL	R4 1 0 ; R4 := true
	45	[3261]	OP_LOADBOOL	R5 1 0 ; R5 := true
	46	[3261]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	47	[3262]	GETGLOBAL	R1 K11 ; R1 := mCosmeticsList
	48	[3262]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xa034c64c]
	49	[3262]	CALL     	R1 2 1 ; R1(R2)
	50	[3264]	GETGLOBAL	R1 K13 ; R1 := mCategories
	51	[3264]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xea061e98]
	52	[3267]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	53	[3264]	CALL     	R1 3 1 ; R1(R2,R3)
	54	[3269]	GETGLOBAL	R1 K15 ; R1 := mEquipment
	55	[3269]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xea061e98]
	56	[3272]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	57	[3269]	CALL     	R1 3 1 ; R1(R2,R3)
	58	[3273]	RETURN   	R0 1 ; return 

function #83 <?:3275,3353> (216 instructions, 864 bytes at 00000211233D1170)
4 params, 17 slots, 10 upvalues, 0 locals, 51 constants, 0 functions
	1	[3276]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[3276]	GETGLOBAL	R5 K1 ; R5 := 0x25d99d89
	3	[3276]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[3276]	TEST     	R4 1 ; if R4 then PC := 11
	5	[3276]	JMP      	11 ; PC := 11
	6	[3276]	GETGLOBAL	R4 K2 ; R4 := mInputBlocked
	7	[3276]	TEST     	R4 1 ; if R4 then PC := 11
	8	[3276]	JMP      	11 ; PC := 11
	9	[3276]	TEST     	R0 1 ; if R0 then PC := 12
	10	[3276]	JMP      	12 ; PC := 12
	11	[3277]	RETURN   	R0 1 ; return 
	12	[3280]	GETTABLE 	R4 R0 K3 ; R4 := R0["SalvageState"]
	13	[3280]	GETUPVAL 	R5 U0 ; R5 := U0
	14	[3280]	GETTABLE 	R5 R5 K4 ; R5 := R5["OWNED"]
	15	[3280]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 20
	16	[3280]	JMP      	20 ; PC := 20
	17	[3280]	TEST     	R2 1 ; if R2 then PC := 20
	18	[3280]	JMP      	20 ; PC := 20
	19	[3281]	RETURN   	R0 1 ; return 
	20	[3284]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 24
	21	[3284]	JMP      	24 ; PC := 24
	22	[3284]	NOT      	R4 R3 ; R4 := not R3
	23	[3284]	JMP      	26 ; PC := 26
	24	[3284]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 25
	25	[3284]	OP_LOADBOOL	R4 1 0 ; R4 := true
	26	[3286]	GETGLOBAL	R5 K6 ; R5 := mActiveState
	27	[3286]	GETUPVAL 	R6 U1 ; R6 := U1
	28	[3286]	GETTABLE 	R6 R6 K7 ; R6 := R6["WEAPON_INV"]
	29	[3286]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 167
	30	[3286]	JMP      	167 ; PC := 167
	31	[3287]	GETUPVAL 	R5 U2 ; R5 := U2
	32	[3287]	OP_LOADBOOL	R6 1 0 ; R6 := true
	33	[3287]	CALL     	R5 2 1 ; R5(R6)
	34	[3288]	GETUPVAL 	R5 U3 ; R5 := U3
	35	[3288]	CALL     	R5 1 1 ; R5()
	36	[3290]	TEST     	R1 1 ; if R1 then PC := 40
	37	[3290]	JMP      	40 ; PC := 40
	38	[3290]	GETGLOBAL	R5 K8 ; R5 := mEquipment
	39	[3290]	GETTABLE 	R1 R5 K9 ; R1 := R5["mSelectedElement"]
	40	[3291]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	41	[3291]	MOVE     	R6 R1 ; R6 := R1
	42	[3291]	CALL     	R5 2 2 ; R5 := R5(R6)
	43	[3291]	TEST     	R5 1 ; if R5 then PC := 152
	44	[3291]	JMP      	152 ; PC := 152
	45	[3291]	GETTABLE 	R5 R1 K10 ; R5 := R1["Slot"]
	46	[3291]	EQ       	1 R5 K5 ; if R5 == nil then PC := 152
	47	[3291]	JMP      	152 ; PC := 152
	48	[3292]	TEST     	R3 1 ; if R3 then PC := 94
	49	[3292]	JMP      	94 ; PC := 94
	50	[3292]	TEST     	R2 1 ; if R2 then PC := 94
	51	[3292]	JMP      	94 ; PC := 94
	52	[3292]	GETTABLE 	R5 R0 K11 ; R5 := R0["AlwaysAvailable"]
	53	[3292]	TEST     	R5 1 ; if R5 then PC := 94
	54	[3292]	JMP      	94 ; PC := 94
	55	[3293]	LOADK    	R5 := 1.000000
	56	[3293]	GETTABLE 	R6 R0 K12 ; R6 := R0["EquippedSlots"]
	57	[3293]	LEN      	R6 R6 ; R6 := # R6
	58	[3293]	LOADK    	R7 := 1.000000
	59	[3293]	FORPREP  	R5 93 ; R5 -= R7; PC := 93
	60	[3294]	GETTABLE 	R9 R1 K10 ; R9 := R1["Slot"]
	61	[3294]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 85
	62	[3294]	JMP      	85 ; PC := 85
	63	[3294]	GETTABLE 	R9 R0 K12 ; R9 := R0["EquippedSlots"]
	64	[3294]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	65	[3294]	TEST     	R9 0 ; if not R9 then PC := 85
	66	[3294]	JMP      	85 ; PC := 85
	67	[3295]	GETGLOBAL	R9 K13 ; R9 := 0x603636ad
	68	[3295]	LOADK    	R10 K14 ; R10 := "/Lotus/Language/Railjack/Loadout_WeaponSwap"
	69	[3295]	NEWTABLE 	R11 0 2 ; R11 := {}
	70	[3295]	GETTABLE 	R12 R0 K16 ; R12 := R0["Name"]
	71	[3295]	SETTABLE 	R11 K15 R12 ; R11["WEAPON_NAME"] := R12
	72	[3295]	GETGLOBAL	R12 K8 ; R12 := mEquipment
	73	[3295]	GETTABLE 	R12 R12 K18 ; R12 := R12["mElements"]
	74	[3295]	GETTABLE 	R12 R12 R8 ; R12 := R12[R8]
	75	[3295]	GETTABLE 	R12 R12 K16 ; R12 := R12["Name"]
	76	[3295]	SETTABLE 	R11 K17 R12 ; R11[0x23d5322f] := R12
	77	[3295]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	78	[3296]	GETUPVAL 	R10 U4 ; R10 := U4
	79	[3296]	GETTABLE 	R10 R10 K19 ; R10 := R10[0xdedfded7]
	80	[3296]	MOVE     	R11 R9 ; R11 := R9
	81	[3296]	LOADK    	R12 K20 ; R12 := "OnConfirmEquip"
	82	[3296]	CALL     	R10 3 1 ; R10(R11,R12)
	83	[3297]	RETURN   	R0 1 ; return 
	84	[3297]	JMP      	93 ; PC := 93
	85	[3298]	GETTABLE 	R10 R0 K12 ; R10 := R0["EquippedSlots"]
	86	[3298]	GETTABLE 	R11 R1 K10 ; R11 := R1["Slot"]
	87	[3298]	GETTABLE 	R10 R10 R11 ; R10 := R10[R11]
	88	[3298]	TEST     	R10 0 ; if not R10 then PC := 93
	89	[3298]	JMP      	93 ; PC := 93
	90	[3299]	GETUPVAL 	R10 U5 ; R10 := U5
	91	[3299]	CALL     	R10 1 1 ; R10()
	92	[3300]	RETURN   	R0 1 ; return 
	93	[3293]	FORLOOP  	R5 60 ; R5 += R7; if R5 <= R6 then begin PC := 60; R8 := R5 end
	94	[3305]	GETGLOBAL	R10 K21 ; R10 := mCurrentShip
	95	[3305]	GETTABLE 	R10 R10 K22 ; R10 := R10["ShipInfo"]
	96	[3305]	TEST     	R10 0 ; if not R10 then PC := 152
	97	[3305]	JMP      	152 ; PC := 152
	98	[3306]	GETGLOBAL	R10 K21 ; R10 := mCurrentShip
	99	[3306]	GETTABLE 	R10 R10 K22 ; R10 := R10["ShipInfo"]
	100	[3306]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0x73a8846a]
	101	[3306]	GETTABLE 	R12 R1 K24 ; R12 := R1["Hand"]
	102	[3306]	GETTABLE 	R13 R1 K10 ; R13 := R1["Slot"]
	103	[3306]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	104	[3307]	GETTABLE 	R11 R0 K25 ; R11 := R0["mPurchasedInfo"]
	105	[3307]	EQ       	1 R11 K5 ; if R11 == nil then PC := 112
	106	[3307]	JMP      	112 ; PC := 112
	107	[3308]	GETTABLE 	R11 R0 K25 ; R11 := R0["mPurchasedInfo"]
	108	[3308]	GETTABLE 	R11 R11 K27 ; R11 := R11["Item"]
	109	[3308]	GETTABLE 	R11 R11 K26 ; R11 := R11["mItemId"]
	110	[3308]	SETTABLE 	R10 K26 R11 ; R10["mItemId"] := R11
	111	[3308]	JMP      	116 ; PC := 116
	112	[3310]	GETTABLE 	R11 R10 K26 ; R11 := R10["mItemId"]
	113	[3310]	GETGLOBAL	R12 K29 ; R12 := 0x6c97a788
	114	[3310]	GETTABLE 	R12 R12 K30 ; R12 := R12["InvalidItemID"]
	115	[3310]	SETTABLE 	R11 K28 R12 ; R11["mId"] := R12
	116	[3313]	GETTABLE 	R11 R0 K32 ; R11 := R0["ItemType"]
	117	[3313]	SETTABLE 	R10 K31 R11 ; R10["mItemType"] := R11
	118	[3314]	GETGLOBAL	R11 K1 ; R11 := 0x25d99d89
	119	[3314]	SELF     	R11 R11 K33 ; R12 := R11; R11 := R11[0x25a6e75e]
	120	[3314]	CALL     	R11 2 2 ; R11 := R11(R12)
	121	[3314]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0xdf943d05]
	122	[3314]	GETGLOBAL	R13 K21 ; R13 := mCurrentShip
	123	[3314]	GETTABLE 	R13 R13 K35 ; R13 := R13["ID"]
	124	[3314]	GETTABLE 	R14 R1 K24 ; R14 := R1["Hand"]
	125	[3314]	GETTABLE 	R15 R1 K10 ; R15 := R1["Slot"]
	126	[3314]	MOVE     	R16 R10 ; R16 := R10
	127	[3314]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	128	[3318]	GETGLOBAL	R11 K1 ; R11 := 0x25d99d89
	129	[3318]	SELF     	R11 R11 K36 ; R12 := R11; R11 := R11[0x41f4ba99]
	130	[3318]	CALL     	R11 2 1 ; R11(R12)
	131	[3319]	GETGLOBAL	R11 K1 ; R11 := 0x25d99d89
	132	[3319]	SELF     	R11 R11 K38 ; R12 := R11; R11 := R11[0x62c81b76]
	133	[3319]	CALL     	R11 2 2 ; R11 := R11(R12)
	134	[3319]	GETTABLE 	R11 R11 K39 ; R11 := R11["mCrewShipLoadOut"]
	135	[3319]	SETGLOBALHASH	R11 K37 ; mCurrentLoadout := R11
	136	[3320]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	137	[3320]	GETGLOBAL	R12 K40 ; R12 := mShipSuit
	138	[3320]	CALL     	R11 2 2 ; R11 := R11(R12)
	139	[3320]	TEST     	R11 1 ; if R11 then PC := 145
	140	[3320]	JMP      	145 ; PC := 145
	141	[3321]	GETGLOBAL	R11 K40 ; R11 := mShipSuit
	142	[3321]	SELF     	R11 R11 K41 ; R12 := R11; R11 := R11[0x364c4d52]
	143	[3321]	GETGLOBAL	R13 K37 ; R13 := mCurrentLoadout
	144	[3321]	CALL     	R11 3 1 ; R11(R12,R13)
	145	[3323]	TEST     	R2 1 ; if R2 then PC := 152
	146	[3323]	JMP      	152 ; PC := 152
	147	[3324]	GETUPVAL 	R11 U6 ; R11 := U6
	148	[3324]	MOVE     	R12 R1 ; R12 := R1
	149	[3324]	CALL     	R11 2 1 ; R11(R12)
	150	[3325]	GETGLOBAL	R11 K42 ; R11 := _T
	151	[3325]	SETTABLE 	R11 K43 K44 ; R11["LoadoutSaveRequired"] := true
	152	[3330]	TEST     	R4 0 ; if not R4 then PC := 204
	153	[3330]	JMP      	204 ; PC := 204
	154	[3330]	TEST     	R2 1 ; if R2 then PC := 204
	155	[3330]	JMP      	204 ; PC := 204
	156	[3331]	GETGLOBAL	R11 K8 ; R11 := mEquipment
	157	[3331]	SELF     	R11 R11 K45 ; R12 := R11; R11 := R11[0x71e9ac81]
	158	[3331]	LOADNIL  	R13 R13 ; R13 := nil
	159	[3331]	OP_LOADBOOL	R14 1 0 ; R14 := true
	160	[3331]	OP_LOADBOOL	R15 1 0 ; R15 := true
	161	[3331]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	162	[3332]	GETUPVAL 	R11 U5 ; R11 := U5
	163	[3332]	LOADNIL  	R12 R12 ; R12 := nil
	164	[3332]	OP_LOADBOOL	R13 1 0 ; R13 := true
	165	[3332]	CALL     	R11 3 1 ; R11(R12,R13)
	166	[3333]	JMP      	204 ; PC := 204
	167	[3334]	GETGLOBAL	R11 K6 ; R11 := mActiveState
	168	[3334]	GETUPVAL 	R12 U1 ; R12 := U1
	169	[3334]	GETTABLE 	R12 R12 K46 ; R12 := R12["EQUIP_INV"]
	170	[3334]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 204
	171	[3334]	JMP      	204 ; PC := 204
	172	[3335]	TEST     	R2 0 ; if not R2 then PC := 179
	173	[3335]	JMP      	179 ; PC := 179
	174	[3336]	GETUPVAL 	R11 U7 ; R11 := U7
	175	[3336]	LOADNIL  	R12 R12 ; R12 := nil
	176	[3336]	MOVE     	R13 R0 ; R13 := R0
	177	[3336]	CALL     	R11 3 1 ; R11(R12,R13)
	178	[3336]	JMP      	204 ; PC := 204
	179	[3338]	GETUPVAL 	R11 U8 ; R11 := U8
	180	[3338]	OP_LOADBOOL	R12 0 0 ; R12 := false
	181	[3338]	LOADNIL  	R13 R13 ; R13 := nil
	182	[3338]	MOVE     	R14 R0 ; R14 := R0
	183	[3338]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	184	[3339]	TEST     	R4 0 ; if not R4 then PC := 204
	185	[3339]	JMP      	204 ; PC := 204
	186	[3340]	GETGLOBAL	R11 K8 ; R11 := mEquipment
	187	[3340]	GETTABLE 	R11 R11 K9 ; R11 := R11["mSelectedElement"]
	188	[3341]	GETTABLE 	R12 R0 K47 ; R12 := R0["RawItem"]
	189	[3341]	GETTABLE 	R12 R12 K27 ; R12 := R12["Item"]
	190	[3341]	SETTABLE 	R11 K27 R12 ; R11["Item"] := R12
	191	[3342]	GETUPVAL 	R12 U9 ; R12 := U9
	192	[3342]	MOVE     	R13 R11 ; R13 := R11
	193	[3342]	CALL     	R12 2 1 ; R12(R13)
	194	[3343]	GETGLOBAL	R12 K8 ; R12 := mEquipment
	195	[3343]	SELF     	R12 R12 K45 ; R13 := R12; R12 := R12[0x71e9ac81]
	196	[3343]	LOADNIL  	R14 R14 ; R14 := nil
	197	[3343]	OP_LOADBOOL	R15 1 0 ; R15 := true
	198	[3343]	OP_LOADBOOL	R16 1 0 ; R16 := true
	199	[3343]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	200	[3344]	GETUPVAL 	R12 U5 ; R12 := U5
	201	[3344]	LOADNIL  	R13 R13 ; R13 := nil
	202	[3344]	OP_LOADBOOL	R14 1 0 ; R14 := true
	203	[3344]	CALL     	R12 3 1 ; R12(R13,R14)
	204	[3349]	TEST     	R3 1 ; if R3 then PC := 216
	205	[3349]	JMP      	216 ; PC := 216
	206	[3349]	TEST     	R2 1 ; if R2 then PC := 216
	207	[3349]	JMP      	216 ; PC := 216
	208	[3350]	GETUPVAL 	R12 U4 ; R12 := U4
	209	[3350]	GETTABLE 	R12 R12 K48 ; R12 := R12[0x659d451f]
	210	[3350]	GETGLOBAL	R13 K49 ; R13 := 0xf92b1165
	211	[3350]	CALL     	R12 2 1 ; R12(R13)
	212	[3351]	GETUPVAL 	R12 U4 ; R12 := U4
	213	[3351]	GETTABLE 	R12 R12 K48 ; R12 := R12[0x659d451f]
	214	[3351]	GETGLOBAL	R13 K50 ; R13 := 0x9c7414a5
	215	[3351]	CALL     	R12 2 1 ; R12(R13)
	216	[3353]	RETURN   	R0 1 ; return 

function #84 <?:3355,3380> (51 instructions, 204 bytes at 00000211233D1D00)
1 param, 14 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[3356]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3356]	MOVE     	R2 R0 ; R2 := R0
	3	[3356]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3356]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 51
	5	[3356]	JMP      	51 ; PC := 51
	6	[3357]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3357]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3358]	EQ       	1 R1 K5 ; if R1 == nil then PC := 51
	9	[3358]	JMP      	51 ; PC := 51
	10	[3360]	LOADNIL  	R2 R2 ; R2 := nil
	11	[3361]	LOADK    	R3 := 1.000000
	12	[3361]	GETTABLE 	R4 R1 K6 ; R4 := R1["EquippedSlots"]
	13	[3361]	LEN      	R4 R4 ; R4 := # R4
	14	[3361]	LOADK    	R5 := 1.000000
	15	[3361]	FORPREP  	R3 22 ; R3 -= R5; PC := 22
	16	[3362]	GETTABLE 	R7 R1 K6 ; R7 := R1["EquippedSlots"]
	17	[3362]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	18	[3362]	TEST     	R7 0 ; if not R7 then PC := 22
	19	[3362]	JMP      	22 ; PC := 22
	20	[3363]	MOVE     	R2 R6 ; R2 := R6
	21	[3364]	JMP      	23 ; PC := 23
	22	[3361]	FORLOOP  	R3 16 ; R3 += R5; if R3 <= R4 then begin PC := 16; R6 := R3 end
	23	[3369]	LOADK    	R7 := 1.000000
	24	[3369]	GETGLOBAL	R8 K3 ; R8 := mInventoryGrid
	25	[3369]	GETTABLE 	R8 R8 K7 ; R8 := R8["mUnfilteredElements"]
	26	[3369]	LEN      	R8 R8 ; R8 := # R8
	27	[3369]	LOADK    	R9 := 1.000000
	28	[3369]	FORPREP  	R7 46 ; R7 -= R9; PC := 46
	29	[3370]	GETGLOBAL	R11 K3 ; R11 := mInventoryGrid
	30	[3370]	GETTABLE 	R11 R11 K7 ; R11 := R11["mUnfilteredElements"]
	31	[3370]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	32	[3370]	GETTABLE 	R11 R11 K8 ; R11 := R11["AlwaysAvailable"]
	33	[3370]	TEST     	R11 0 ; if not R11 then PC := 46
	34	[3370]	JMP      	46 ; PC := 46
	35	[3371]	GETUPVAL 	R11 U0 ; R11 := U0
	36	[3371]	GETGLOBAL	R12 K3 ; R12 := mInventoryGrid
	37	[3371]	GETTABLE 	R12 R12 K7 ; R12 := R12["mUnfilteredElements"]
	38	[3371]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	39	[3371]	GETGLOBAL	R13 K9 ; R13 := mEquipment
	40	[3371]	GETTABLE 	R13 R13 K10 ; R13 := R13["mElements"]
	41	[3371]	GETTABLE 	R13 R13 R2 ; R13 := R13[R2]
	42	[3371]	CALL     	R11 3 1 ; R11(R12,R13)
	43	[3372]	GETTABLE 	R11 R1 K6 ; R11 := R1["EquippedSlots"]
	44	[3372]	SETTABLE 	R11 R2 K11 ; R11[R2] := false
	45	[3373]	JMP      	47 ; PC := 47
	46	[3369]	FORLOOP  	R7 29 ; R7 += R9; if R7 <= R8 then begin PC := 29; R10 := R7 end
	47	[3377]	GETUPVAL 	R11 U0 ; R11 := U0
	48	[3377]	GETGLOBAL	R12 K3 ; R12 := mInventoryGrid
	49	[3377]	GETTABLE 	R12 R12 K4 ; R12 := R12["mSelectedElement"]
	50	[3377]	CALL     	R11 2 1 ; R11(R12)
	51	[3380]	RETURN   	R0 1 ; return 

function #85 <?:3382,3384> (5 instructions, 20 bytes at 00000211233D2020)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[3383]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3383]	GETGLOBAL	R1 K0 ; R1 := mInventoryGrid
	3	[3383]	GETTABLE 	R1 R1 K1 ; R1 := R1["mSelectedElement"]
	4	[3383]	CALL     	R0 2 1 ; R0(R1)
	5	[3384]	RETURN   	R0 1 ; return 

function #86 <?:3386,3387> (1 instruction, 4 bytes at 00000211233D2140)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[3387]	RETURN   	R0 1 ; return 

function #87 <?:3389,3462> (209 instructions, 836 bytes at 00000211233D2210)
1 param, 20 slots, 7 upvalues, 0 locals, 32 constants, 1 function
	1	[3390]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[3392]	GETGLOBAL	R2 K0 ; R2 := 0x25d99d89
	3	[3392]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x25a6e75e]
	4	[3392]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3394]	NEWTABLE 	R3 0 0 ; R3 := {}
	6	[3395]	NEWTABLE 	R4 0 0 ; R4 := {}
	7	[3396]	NEWTABLE 	R5 0 0 ; R5 := {}
	8	[3397]	NEWTABLE 	R6 0 0 ; R6 := {}
	9	[3399]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	10	[3399]	GETUPVAL 	R8 U0 ; R8 := U0
	11	[3399]	GETTABLE 	R8 R8 K3 ; R8 := R8["WEAPON_INV"]
	12	[3399]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 29
	13	[3399]	JMP      	29 ; PC := 29
	14	[3399]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	15	[3399]	GETUPVAL 	R8 U0 ; R8 := U0
	16	[3399]	GETTABLE 	R8 R8 K4 ; R8 := R8["EQUIP_INV"]
	17	[3399]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 29
	18	[3399]	JMP      	29 ; PC := 29
	19	[3399]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	20	[3399]	GETUPVAL 	R8 U0 ; R8 := U0
	21	[3399]	GETTABLE 	R8 R8 K5 ; R8 := R8["ARCH_INV"]
	22	[3399]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 29
	23	[3399]	JMP      	29 ; PC := 29
	24	[3399]	GETUPVAL 	R7 U1 ; R7 := U1
	25	[3399]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	26	[3399]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 29
	27	[3399]	JMP      	29 ; PC := 29
	28	[3401]	RETURN   	R0 1 ; return 
	29	[3404]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	30	[3404]	GETUPVAL 	R8 U0 ; R8 := U0
	31	[3404]	GETTABLE 	R8 R8 K3 ; R8 := R8["WEAPON_INV"]
	32	[3404]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 38
	33	[3404]	JMP      	38 ; PC := 38
	34	[3404]	GETUPVAL 	R7 U1 ; R7 := U1
	35	[3404]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	36	[3404]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 62
	37	[3404]	JMP      	62 ; PC := 62
	38	[3405]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	39	[3405]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	40	[3405]	MOVE     	R8 R3 ; R8 := R3
	41	[3405]	GETUPVAL 	R9 U0 ; R9 := U0
	42	[3405]	GETTABLE 	R9 R9 K3 ; R9 := R9["WEAPON_INV"]
	43	[3405]	CALL     	R7 3 1 ; R7(R8,R9)
	44	[3406]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	45	[3406]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	46	[3406]	MOVE     	R8 R4 ; R8 := R4
	47	[3406]	SELF     	R9 R2 K9 ; R10 := R2; R9 := R2[0xbfba693e]
	48	[3406]	CALL     	R9 2 0 ; R9,... := R9(R10)
	49	[3406]	CALL     	R7 0 1 ; R7(R8,...)
	50	[3407]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	51	[3407]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	52	[3407]	MOVE     	R8 R5 ; R8 := R5
	53	[3407]	SELF     	R9 R2 K10 ; R10 := R2; R9 := R2[0xe600a7f3]
	54	[3407]	CALL     	R9 2 0 ; R9,... := R9(R10)
	55	[3407]	CALL     	R7 0 1 ; R7(R8,...)
	56	[3408]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	57	[3408]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	58	[3408]	MOVE     	R8 R6 ; R8 := R6
	59	[3408]	SELF     	R9 R2 K11 ; R10 := R2; R9 := R2[0xaea1cb86]
	60	[3408]	CALL     	R9 2 0 ; R9,... := R9(R10)
	61	[3408]	CALL     	R7 0 1 ; R7(R8,...)
	62	[3411]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	63	[3411]	GETUPVAL 	R8 U0 ; R8 := U0
	64	[3411]	GETTABLE 	R8 R8 K4 ; R8 := R8["EQUIP_INV"]
	65	[3411]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 71
	66	[3411]	JMP      	71 ; PC := 71
	67	[3411]	GETUPVAL 	R7 U1 ; R7 := U1
	68	[3411]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	69	[3411]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 95
	70	[3411]	JMP      	95 ; PC := 95
	71	[3412]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	72	[3412]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	73	[3412]	MOVE     	R8 R3 ; R8 := R3
	74	[3412]	GETUPVAL 	R9 U0 ; R9 := U0
	75	[3412]	GETTABLE 	R9 R9 K4 ; R9 := R9["EQUIP_INV"]
	76	[3412]	CALL     	R7 3 1 ; R7(R8,R9)
	77	[3413]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	78	[3413]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	79	[3413]	MOVE     	R8 R4 ; R8 := R4
	80	[3413]	SELF     	R9 R2 K12 ; R10 := R2; R9 := R2[0xdc039065]
	81	[3413]	CALL     	R9 2 0 ; R9,... := R9(R10)
	82	[3413]	CALL     	R7 0 1 ; R7(R8,...)
	83	[3414]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	84	[3414]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	85	[3414]	MOVE     	R8 R5 ; R8 := R5
	86	[3414]	SELF     	R9 R2 K13 ; R10 := R2; R9 := R2[0x64e44bdc]
	87	[3414]	CALL     	R9 2 0 ; R9,... := R9(R10)
	88	[3414]	CALL     	R7 0 1 ; R7(R8,...)
	89	[3415]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	90	[3415]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	91	[3415]	MOVE     	R8 R6 ; R8 := R6
	92	[3415]	SELF     	R9 R2 K11 ; R10 := R2; R9 := R2[0xaea1cb86]
	93	[3415]	CALL     	R9 2 0 ; R9,... := R9(R10)
	94	[3415]	CALL     	R7 0 1 ; R7(R8,...)
	95	[3418]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	96	[3418]	GETUPVAL 	R8 U0 ; R8 := U0
	97	[3418]	GETTABLE 	R8 R8 K5 ; R8 := R8["ARCH_INV"]
	98	[3418]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 104
	99	[3418]	JMP      	104 ; PC := 104
	100	[3418]	GETUPVAL 	R7 U1 ; R7 := U1
	101	[3418]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	102	[3418]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 122
	103	[3418]	JMP      	122 ; PC := 122
	104	[3419]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	105	[3419]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	106	[3419]	MOVE     	R8 R3 ; R8 := R3
	107	[3419]	GETUPVAL 	R9 U0 ; R9 := U0
	108	[3419]	GETTABLE 	R9 R9 K5 ; R9 := R9["ARCH_INV"]
	109	[3419]	CALL     	R7 3 1 ; R7(R8,R9)
	110	[3420]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	111	[3420]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	112	[3420]	MOVE     	R8 R4 ; R8 := R4
	113	[3420]	SELF     	R9 R2 K14 ; R10 := R2; R9 := R2[0x6f7b67d7]
	114	[3420]	CALL     	R9 2 0 ; R9,... := R9(R10)
	115	[3420]	CALL     	R7 0 1 ; R7(R8,...)
	116	[3421]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	117	[3421]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	118	[3421]	MOVE     	R8 R4 ; R8 := R4
	119	[3421]	SELF     	R9 R2 K15 ; R10 := R2; R9 := R2[0x3218c3b0]
	120	[3421]	CALL     	R9 2 0 ; R9,... := R9(R10)
	121	[3421]	CALL     	R7 0 1 ; R7(R8,...)
	122	[3424]	LOADNIL  	R7 R7 ; R7 := nil
	123	[3425]	GETUPVAL 	R8 U1 ; R8 := U1
	124	[3425]	GETTABLE 	R8 R8 K16 ; R8 := R8["REPAIR"]
	125	[3425]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 134
	126	[3425]	JMP      	134 ; PC := 134
	127	[3426]	GETTABLE 	R8 R4 K17 ; R8 := R4[1.000000]
	128	[3426]	LEN      	R8 R8 ; R8 := # R8
	129	[3427]	GETTABLE 	R9 R4 K17 ; R9 := R4[1.000000]
	130	[3427]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	131	[3427]	GETTABLE 	R9 R9 K18 ; R9 := R9["mItemId"]
	132	[3427]	GETTABLE 	R7 R9 K19 ; R7 := R9["mId"]
	133	[3427]	JMP      	162 ; PC := 162
	134	[3428]	GETGLOBAL	R9 K20 ; R9 := mInventoryGrid
	135	[3428]	GETTABLE 	R9 R9 K21 ; R9 := R9["mSelectedElement"]
	136	[3428]	EQ       	1 R9 K22 ; if R9 == nil then PC := 162
	137	[3428]	JMP      	162 ; PC := 162
	138	[3429]	GETUPVAL 	R9 U1 ; R9 := U1
	139	[3429]	GETTABLE 	R9 R9 K23 ; R9 := R9["SELL"]
	140	[3429]	EQ       	0 R0 R9 ; if R0 ~= R9 then PC := 150
	141	[3429]	JMP      	150 ; PC := 150
	142	[3430]	GETGLOBAL	R9 K20 ; R9 := mInventoryGrid
	143	[3430]	GETTABLE 	R9 R9 K21 ; R9 := R9["mSelectedElement"]
	144	[3430]	GETTABLE 	R9 R9 K24 ; R9 := R9["EquippedSlots"]
	145	[3430]	GETGLOBAL	R10 K25 ; R10 := mEquipment
	146	[3430]	GETTABLE 	R10 R10 K21 ; R10 := R10["mSelectedElement"]
	147	[3430]	GETTABLE 	R10 R10 K26 ; R10 := R10["Id"]
	148	[3430]	GETTABLE 	R1 R9 R10 ; R1 := R9[R10]
	149	[3430]	JMP      	162 ; PC := 162
	150	[3431]	GETUPVAL 	R9 U1 ; R9 := U1
	151	[3431]	GETTABLE 	R9 R9 K27 ; R9 := R9["CONTRIBUTE"]
	152	[3431]	EQ       	1 R0 R9 ; if R0 == R9 then PC := 158
	153	[3431]	JMP      	158 ; PC := 158
	154	[3431]	GETUPVAL 	R9 U1 ; R9 := U1
	155	[3431]	GETTABLE 	R9 R9 K28 ; R9 := R9["CANCEL"]
	156	[3431]	EQ       	0 R0 R9 ; if R0 ~= R9 then PC := 162
	157	[3431]	JMP      	162 ; PC := 162
	158	[3432]	GETGLOBAL	R9 K20 ; R9 := mInventoryGrid
	159	[3432]	GETTABLE 	R9 R9 K21 ; R9 := R9["mSelectedElement"]
	160	[3432]	GETTABLE 	R9 R9 K29 ; R9 := R9["RawItem"]
	161	[3432]	GETTABLE 	R7 R9 K30 ; R7 := R9["UID"]
	162	[3436]	LOADK    	R9 := 1.000000
	163	[3436]	LEN      	R10 R3 ; R10 := # R3
	164	[3436]	LOADK    	R11 := 1.000000
	165	[3436]	FORPREP  	R9 184 ; R9 -= R11; PC := 184
	166	[3437]	GETTABLE 	R13 R4 R12 ; R13 := R4[R12]
	167	[3438]	GETTABLE 	R14 R5 R12 ; R14 := R5[R12]
	168	[3439]	GETTABLE 	R15 R6 R12 ; R15 := R6[R12]
	169	[3440]	GETTABLE 	R16 R3 R12 ; R16 := R3[R12]
	170	[3441]	GETGLOBAL	R17 K25 ; R17 := mEquipment
	171	[3441]	SELF     	R17 R17 K31 ; R18 := R17; R17 := R17[0xea061e98]
	172	[3452]	CLOSURE  	R19 0 ; R19 := closure(Function #1)
	173	[3452]	GETUPVAL 	R0 U2 ; R0 := U2
	174	[3452]	MOVE     	R0 R13 ; R0 := R13
	175	[3452]	MOVE     	R0 R14 ; R0 := R14
	176	[3452]	GETUPVAL 	R0 U3 ; R0 := U3
	177	[3452]	MOVE     	R0 R15 ; R0 := R15
	178	[3452]	MOVE     	R0 R16 ; R0 := R16
	179	[3452]	GETUPVAL 	R0 U4 ; R0 := U4
	180	[3452]	MOVE     	R0 R7 ; R0 := R7
	181	[3452]	MOVE     	R0 R1 ; R0 := R1
	182	[3441]	CALL     	R17 3 1 ; R17(R18,R19)
	183	[3452]	CLOSE    	R13 ; SAVE R13,...
	184	[3436]	FORLOOP  	R9 166 ; R9 += R11; if R9 <= R10 then begin PC := 166; R12 := R9 end
	185	[3455]	GETUPVAL 	R13 U1 ; R13 := U1
	186	[3455]	GETTABLE 	R13 R13 K23 ; R13 := R13["SELL"]
	187	[3455]	EQ       	1 R0 R13 ; if R0 == R13 then PC := 193
	188	[3455]	JMP      	193 ; PC := 193
	189	[3455]	GETUPVAL 	R13 U1 ; R13 := U1
	190	[3455]	GETTABLE 	R13 R13 K6 ; R13 := R13["SELL_BULK"]
	191	[3455]	EQ       	0 R0 R13 ; if R0 ~= R13 then PC := 203
	192	[3455]	JMP      	203 ; PC := 203
	193	[3455]	GETGLOBAL	R13 K2 ; R13 := mActiveState
	194	[3455]	GETUPVAL 	R14 U0 ; R14 := U0
	195	[3455]	GETTABLE 	R14 R14 K4 ; R14 := R14["EQUIP_INV"]
	196	[3455]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 203
	197	[3455]	JMP      	203 ; PC := 203
	198	[3456]	GETUPVAL 	R13 U5 ; R13 := U5
	199	[3456]	LOADNIL  	R14 R14 ; R14 := nil
	200	[3456]	GETGLOBAL	R15 K20 ; R15 := mInventoryGrid
	201	[3456]	GETTABLE 	R15 R15 K21 ; R15 := R15["mSelectedElement"]
	202	[3456]	CALL     	R13 3 1 ; R13(R14,R15)
	203	[3459]	TEST     	R1 0 ; if not R1 then PC := 209
	204	[3459]	JMP      	209 ; PC := 209
	205	[3460]	GETUPVAL 	R13 U6 ; R13 := U6
	206	[3460]	GETGLOBAL	R14 K20 ; R14 := mInventoryGrid
	207	[3460]	GETTABLE 	R14 R14 K21 ; R14 := R14["mSelectedElement"]
	208	[3460]	CALL     	R13 2 1 ; R13(R14)
	209	[3462]	RETURN   	R0 1 ; return 

function #88 <?:3464,3489> (58 instructions, 232 bytes at 0000021113BA8E10)
1 param, 17 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[3465]	GETGLOBAL	R1 K0 ; R1 := mInventoryGrid
	2	[3465]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x71e9ac81]
	3	[3465]	LOADNIL  	R3 R3 ; R3 := nil
	4	[3465]	OP_LOADBOOL	R4 1 0 ; R4 := true
	5	[3465]	OP_LOADBOOL	R5 1 0 ; R5 := true
	6	[3465]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[3467]	LOADNIL  	R1 R1 ; R1 := nil
	8	[3468]	GETGLOBAL	R2 K2 ; R2 := 0xc8802016
	9	[3468]	GETGLOBAL	R3 K0 ; R3 := mInventoryGrid
	10	[3468]	GETTABLE 	R3 R3 K3 ; R3 := R3["mUnfilteredElements"]
	11	[3468]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	12	[3468]	JMP      	24 ; PC := 24
	13	[3469]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	14	[3469]	GETTABLE 	R8 R6 K5 ; R8 := R6["RawItem"]
	15	[3469]	CALL     	R7 2 2 ; R7 := R7(R8)
	16	[3469]	TEST     	R7 1 ; if R7 then PC := 24
	17	[3469]	JMP      	24 ; PC := 24
	18	[3469]	GETTABLE 	R7 R6 K5 ; R7 := R6["RawItem"]
	19	[3469]	GETTABLE 	R7 R7 K6 ; R7 := R7["UID"]
	20	[3469]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 24
	21	[3469]	JMP      	24 ; PC := 24
	22	[3470]	MOVE     	R1 R6 ; R1 := R6
	23	[3471]	JMP      	26 ; PC := 26
	24	[3468]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 13; R4 := R5 end
	25	[3472]	JMP      	13 ; PC := 13
	26	[3475]	EQ       	1 R1 K7 ; if R1 == nil then PC := 52
	27	[3475]	JMP      	52 ; PC := 52
	28	[3475]	GETTABLE 	R7 R1 K8 ; R7 := R1["mIndex"]
	29	[3475]	EQ       	1 R7 K7 ; if R7 == nil then PC := 52
	30	[3475]	JMP      	52 ; PC := 52
	31	[3476]	GETGLOBAL	R7 K2 ; R7 := 0xc8802016
	32	[3476]	GETGLOBAL	R8 K0 ; R8 := mInventoryGrid
	33	[3476]	GETTABLE 	R8 R8 K9 ; R8 := R8["mElements"]
	34	[3476]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	35	[3476]	JMP      	50 ; PC := 50
	36	[3477]	EQ       	0 R11 R1 ; if R11 ~= R1 then PC := 50
	37	[3477]	JMP      	50 ; PC := 50
	38	[3478]	GETGLOBAL	R12 K0 ; R12 := mInventoryGrid
	39	[3478]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0x967dba12]
	40	[3478]	GETTABLE 	R14 R1 K8 ; R14 := R1["mIndex"]
	41	[3478]	OP_LOADBOOL	R15 1 0 ; R15 := true
	42	[3478]	OP_LOADBOOL	R16 1 0 ; R16 := true
	43	[3478]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	44	[3479]	GETGLOBAL	R12 K0 ; R12 := mInventoryGrid
	45	[3479]	SELF     	R12 R12 K11 ; R13 := R12; R12 := R12[0x77de11fe]
	46	[3479]	GETTABLE 	R14 R1 K8 ; R14 := R1["mIndex"]
	47	[3479]	OP_LOADBOOL	R15 0 0 ; R15 := false
	48	[3479]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	49	[3480]	JMP      	52 ; PC := 52
	50	[3476]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 36; R9 := R10 end
	51	[3481]	JMP      	36 ; PC := 36
	52	[3485]	GETUPVAL 	R12 U0 ; R12 := U0
	53	[3485]	OP_LOADBOOL	R13 1 0 ; R13 := true
	54	[3485]	CALL     	R12 2 1 ; R12(R13)
	55	[3486]	GETUPVAL 	R12 U1 ; R12 := U1
	56	[3486]	CALL     	R12 1 1 ; R12()
	57	[3488]	RETURN   	R1 2 ; return R1 
	58	[3489]	RETURN   	R0 1 ; return 

function #89 <?:3491,3530> (67 instructions, 268 bytes at 0000021113BA9170)
1 param, 11 slots, 4 upvalues, 0 locals, 26 constants, 1 function
	1	[3492]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3492]	GETGLOBAL	R2 K1 ; R2 := 0x0872c3f7
	3	[3492]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3492]	TEST     	R1 0 ; if not R1 then PC := 13
	5	[3492]	JMP      	13 ; PC := 13
	6	[3492]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[3492]	GETGLOBAL	R2 K2 ; R2 := _T
	8	[3492]	GETTABLE 	R2 R2 K3 ; R2 := R2["BackgroundMovie"]
	9	[3492]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[3492]	TEST     	R1 1 ; if R1 then PC := 13
	11	[3492]	JMP      	13 ; PC := 13
	12	[3493]	RETURN   	R0 1 ; return 
	13	[3496]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 39
	14	[3496]	JMP      	39 ; PC := 39
	15	[3497]	GETGLOBAL	R1 K5 ; R1 := mInventoryGrid
	16	[3497]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSelectedElement"]
	17	[3498]	EQ       	1 R1 K4 ; if R1 == nil then PC := 39
	18	[3498]	JMP      	39 ; PC := 39
	19	[3498]	GETTABLE 	R2 R1 K7 ; R2 := R1["RawItem"]
	20	[3498]	EQ       	1 R2 K4 ; if R2 == nil then PC := 39
	21	[3498]	JMP      	39 ; PC := 39
	22	[3499]	GETTABLE 	R2 R1 K7 ; R2 := R1["RawItem"]
	23	[3499]	GETTABLE 	R2 R2 K8 ; R2 := R2["UID"]
	24	[3500]	GETGLOBAL	R3 K9 ; R3 := 0x25d99d89
	25	[3500]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xa94e864c]
	26	[3500]	CALL     	R3 2 2 ; R3 := R3(R4)
	27	[3501]	LOADK    	R4 := 1.000000
	28	[3501]	LEN      	R5 R3 ; R5 := # R3
	29	[3501]	LOADK    	R6 := 1.000000
	30	[3501]	FORPREP  	R4 38 ; R4 -= R6; PC := 38
	31	[3502]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	32	[3502]	GETTABLE 	R8 R8 K11 ; R8 := R8["mCategoryItemId"]
	33	[3502]	GETTABLE 	R8 R8 K12 ; R8 := R8["mId"]
	34	[3502]	EQ       	0 R8 R2 ; if R8 ~= R2 then PC := 38
	35	[3502]	JMP      	38 ; PC := 38
	36	[3503]	GETTABLE 	R0 R3 R7 ; R0 := R3[R7]
	37	[3505]	JMP      	39 ; PC := 39
	38	[3501]	FORLOOP  	R4 31 ; R4 += R6; if R4 <= R5 then begin PC := 31; R7 := R4 end
	39	[3511]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 42
	40	[3511]	JMP      	42 ; PC := 42
	41	[3512]	RETURN   	R0 1 ; return 
	42	[3515]	GETUPVAL 	R8 U0 ; R8 := U0
	43	[3515]	GETTABLE 	R8 R8 K13 ; R8 := R8[0x659d451f]
	44	[3515]	GETGLOBAL	R9 K14 ; R9 := 0x0966be70
	45	[3515]	CALL     	R8 2 1 ; R8(R9)
	46	[3517]	GETGLOBAL	R8 K2 ; R8 := _T
	47	[3525]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	48	[3525]	GETUPVAL 	R0 U1 ; R0 := U1
	49	[3525]	GETUPVAL 	R0 U2 ; R0 := U2
	50	[3525]	GETUPVAL 	R0 U3 ; R0 := U3
	51	[3525]	MOVE     	R0 R0 ; R0 := R0
	52	[3525]	SETTABLE 	R8 K15 R9 ; R8["OnContributionMade"] := R9
	53	[3527]	GETGLOBAL	R8 K2 ; R8 := _T
	54	[3527]	NEWTABLE 	R9 0 4 ; R9 := {}
	55	[3527]	GETTABLE 	R10 R0 K18 ; R10 := R0["mItemType"]
	56	[3527]	SETTABLE 	R9 K17 R10 ; R9["Recipe"] := R10
	57	[3527]	SETTABLE 	R9 K19 R0 ; R9["mTechItem"] := R0
	58	[3527]	SETTABLE 	R9 K20 K15 ; R9["mCallback"] := "OnContributionMade"
	59	[3527]	SETTABLE 	R9 K21 K22 ; R9["mSkipContributeSuccessMsg"] := true
	60	[3527]	SETTABLE 	R8 K16 R9 ; R8["mSelectedElementForContribution"] := R9
	61	[3528]	GETGLOBAL	R8 K2 ; R8 := _T
	62	[3528]	SETTABLE 	R8 K23 K22 ; R8["DojoResearchContribution"] := true
	63	[3529]	GETGLOBAL	R8 K24 ; R8 := 0x9ba7909f
	64	[3529]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x6dd7aa66]
	65	[3529]	GETGLOBAL	R10 K1 ; R10 := 0x0872c3f7
	66	[3529]	CALL     	R8 3 1 ; R8(R9,R10)
	67	[3530]	RETURN   	R0 1 ; return 

function #90 <?:3532,3540> (17 instructions, 68 bytes at 0000021113BA97D0)
2 params, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[3533]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3533]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[3533]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[3533]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3533]	TEST     	R2 1 ; if R2 then PC := 13
	6	[3533]	JMP      	13 ; PC := 13
	7	[3534]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[3534]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[3534]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[3534]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[3534]	LOADK    	R5 K5 ; R5 := "0"
	12	[3534]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[3537]	TEST     	R0 0 ; if not R0 then PC := 17
	14	[3537]	JMP      	17 ; PC := 17
	15	[3538]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[3538]	SETGLOBALHASH	R2 K6 ; mQueueContributionScreen := R2
	17	[3540]	RETURN   	R0 1 ; return 

function #91 <?:3542,3551> (33 instructions, 132 bytes at 0000021113BA99A0)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[3543]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3543]	MOVE     	R2 R0 ; R2 := R0
	3	[3543]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3543]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[3543]	JMP      	33 ; PC := 33
	6	[3544]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3544]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3545]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[3545]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[3545]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[3545]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3545]	TEST     	R2 1 ; if R2 then PC := 20
	13	[3545]	JMP      	20 ; PC := 20
	14	[3546]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[3546]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[3546]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[3546]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[3546]	LOADK    	R5 K10 ; R5 := "2"
	19	[3546]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[3549]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[3549]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[3549]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[3549]	LOADK    	R5 K14 ; R5 := "InstantFinish"
	24	[3549]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[3549]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[3549]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[3549]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[3549]	LOADK    	R8 K17 ; R8 := "OnTechClaimed"
	29	[3549]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[3549]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[3549]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[3549]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[3551]	RETURN   	R0 1 ; return 

function #92 <?:3553,3569> (47 instructions, 188 bytes at 0000021113BA9D10)
0 params, 8 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[3554]	GETGLOBAL	R0 K0 ; R0 := mInventoryGrid
	2	[3554]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[3556]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	4	[3556]	GETTABLE 	R2 R0 K3 ; R2 := R0["SalvageRecipe"]
	5	[3556]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[3556]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[3556]	JMP      	9 ; PC := 9
	8	[3557]	RETURN   	R0 1 ; return 
	9	[3560]	GETGLOBAL	R1 K4 ; R1 := 0x25d99d89
	10	[3560]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x25a6e75e]
	11	[3560]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[3560]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xbadb2a78]
	13	[3560]	GETGLOBAL	R3 K7 ; R3 := 0x19bd9dce
	14	[3560]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[3560]	LE       	0 R1 K8 ; if R1 > 0.000000 then PC := 31
	16	[3560]	JMP      	31 ; PC := 31
	17	[3561]	GETGLOBAL	R1 K9 ; R1 := 0x603636ad
	18	[3561]	LOADK    	R2 K10 ; R2 := "/Lotus/Language/Railjack/InstantRepairSalvageNoFunds"
	19	[3561]	NEWTABLE 	R3 0 1 ; R3 := {}
	20	[3561]	GETGLOBAL	R4 K9 ; R4 := 0x603636ad
	21	[3561]	LOADK    	R5 K12 ; R5 := "/Lotus/Language/Railjack/InstantRepairSalvageItem"
	22	[3561]	NEWTABLE 	R6 0 0 ; R6 := {}
	23	[3561]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	24	[3561]	SETTABLE 	R3 K11 R4 ; R3["CONSUME_TYPE"] := R4
	25	[3561]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	26	[3562]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[3562]	GETTABLE 	R2 R2 K13 ; R2 := R2[0xe0cba3ca]
	28	[3562]	MOVE     	R3 R1 ; R3 := R1
	29	[3562]	CALL     	R2 2 1 ; R2(R3)
	30	[3563]	RETURN   	R0 1 ; return 
	31	[3566]	GETGLOBAL	R2 K9 ; R2 := 0x603636ad
	32	[3566]	LOADK    	R3 K14 ; R3 := "/Lotus/Language/Railjack/InstantRepairSalvageConfirm"
	33	[3566]	NEWTABLE 	R4 0 2 ; R4 := {}
	34	[3566]	GETGLOBAL	R5 K9 ; R5 := 0x603636ad
	35	[3566]	LOADK    	R6 K12 ; R6 := "/Lotus/Language/Railjack/InstantRepairSalvageItem"
	36	[3566]	NEWTABLE 	R7 0 0 ; R7 := {}
	37	[3566]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	38	[3566]	SETTABLE 	R4 K11 R5 ; R4["CONSUME_TYPE"] := R5
	39	[3566]	GETTABLE 	R5 R0 K16 ; R5 := R0["Name"]
	40	[3566]	SETTABLE 	R4 K15 R5 ; R4["ITEM_TYPE"] := R5
	41	[3566]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	42	[3568]	GETUPVAL 	R3 U0 ; R3 := U0
	43	[3568]	GETTABLE 	R3 R3 K17 ; R3 := R3[0xf616a184]
	44	[3568]	MOVE     	R4 R2 ; R4 := R2
	45	[3568]	LOADK    	R5 K18 ; R5 := "InstantRepairConfirm"
	46	[3568]	CALL     	R3 3 1 ; R3(R4,R5)
	47	[3569]	RETURN   	R0 1 ; return 

function #93 <?:3571,3578> (16 instructions, 64 bytes at 0000021113BAA220)
1 param, 7 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3572]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[3572]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xa94e864c]
	3	[3572]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3573]	LOADK    	R2 := 1.000000
	5	[3573]	LEN      	R3 R1 ; R3 := # R1
	6	[3573]	LOADK    	R4 := 1.000000
	7	[3573]	FORPREP  	R2 15 ; R2 -= R4; PC := 15
	8	[3574]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	9	[3574]	GETTABLE 	R6 R6 K2 ; R6 := R6["mCategoryItemId"]
	10	[3574]	GETTABLE 	R6 R6 K3 ; R6 := R6["mId"]
	11	[3574]	EQ       	0 R6 R0 ; if R6 ~= R0 then PC := 15
	12	[3574]	JMP      	15 ; PC := 15
	13	[3575]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	14	[3575]	RETURN   	R6 2 ; return R6 
	15	[3573]	FORLOOP  	R2 8 ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
	16	[3578]	RETURN   	R0 1 ; return 

function #94 <?:3580,3603> (56 instructions, 224 bytes at 0000021113BAA3A0)
0 params, 11 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[3581]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3581]	GETGLOBAL	R1 K1 ; R1 := 0x0872c3f7
	3	[3581]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3581]	TEST     	R0 0 ; if not R0 then PC := 13
	5	[3581]	JMP      	13 ; PC := 13
	6	[3581]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[3581]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[3581]	GETTABLE 	R1 R1 K3 ; R1 := R1["BackgroundMovie"]
	9	[3581]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[3581]	TEST     	R0 1 ; if R0 then PC := 13
	11	[3581]	JMP      	13 ; PC := 13
	12	[3582]	RETURN   	R0 1 ; return 
	13	[3585]	GETGLOBAL	R0 K4 ; R0 := mInventoryGrid
	14	[3585]	GETTABLE 	R0 R0 K5 ; R0 := R0["mSelectedElement"]
	15	[3587]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	16	[3587]	GETTABLE 	R2 R0 K6 ; R2 := R0["SalvageRecipe"]
	17	[3587]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[3587]	TEST     	R1 0 ; if not R1 then PC := 21
	19	[3587]	JMP      	21 ; PC := 21
	20	[3588]	RETURN   	R0 1 ; return 
	21	[3591]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[3591]	GETTABLE 	R2 R0 K7 ; R2 := R0["RawItem"]
	23	[3591]	GETTABLE 	R2 R2 K8 ; R2 := R2["UID"]
	24	[3591]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[3593]	EQ       	0 R1 K9 ; if R1 ~= nil then PC := 53
	26	[3593]	JMP      	53 ; PC := 53
	27	[3594]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	28	[3594]	GETGLOBAL	R3 K2 ; R3 := _T
	29	[3594]	GETTABLE 	R3 R3 K3 ; R3 := R3["BackgroundMovie"]
	30	[3594]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[3594]	TEST     	R2 1 ; if R2 then PC := 39
	32	[3594]	JMP      	39 ; PC := 39
	33	[3595]	GETGLOBAL	R2 K2 ; R2 := _T
	34	[3595]	GETTABLE 	R2 R2 K3 ; R2 := R2["BackgroundMovie"]
	35	[3595]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xe4162eed]
	36	[3595]	LOADK    	R4 K11 ; R4 := "ShowBlockingMessage"
	37	[3595]	LOADK    	R5 K12 ; R5 := "2"
	38	[3595]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	39	[3598]	GETGLOBAL	R2 K13 ; R2 := 0x25d99d89
	40	[3598]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xf2ecd169]
	41	[3598]	GETTABLE 	R4 R0 K6 ; R4 := R0["SalvageRecipe"]
	42	[3598]	LOADK    	R5 K15 ; R5 := "Start"
	43	[3598]	LOADK    	R6 K16 ; R6 := "Personal"
	44	[3598]	GETGLOBAL	R7 K13 ; R7 := 0x25d99d89
	45	[3598]	SELF     	R7 R7 K17 ; R8 := R7; R7 := R7[0x713ce380]
	46	[3598]	CALL     	R7 2 2 ; R7 := R7(R8)
	47	[3598]	LOADK    	R8 K18 ; R8 := "OnTechStarted"
	48	[3598]	GETTABLE 	R9 R0 K19 ; R9 := R0["Category"]
	49	[3598]	GETTABLE 	R10 R0 K7 ; R10 := R0["RawItem"]
	50	[3598]	GETTABLE 	R10 R10 K8 ; R10 := R10["UID"]
	51	[3598]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	52	[3599]	RETURN   	R0 1 ; return 
	53	[3602]	GETUPVAL 	R2 U1 ; R2 := U1
	54	[3602]	MOVE     	R3 R1 ; R3 := R1
	55	[3602]	CALL     	R2 2 1 ; R2(R3)
	56	[3603]	RETURN   	R0 1 ; return 

function #95 <?:3605,3630> (49 instructions, 196 bytes at 0000021113BAA760)
2 params, 7 slots, 5 upvalues, 0 locals, 18 constants, 0 functions
	1	[3606]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3606]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[3606]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[3606]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3606]	TEST     	R2 1 ; if R2 then PC := 13
	6	[3606]	JMP      	13 ; PC := 13
	7	[3607]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[3607]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[3607]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[3607]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[3607]	LOADK    	R5 K5 ; R5 := "0"
	12	[3607]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[3610]	TEST     	R0 0 ; if not R0 then PC := 49
	14	[3610]	JMP      	49 ; PC := 49
	15	[3611]	LOADNIL  	R2 R2 ; R2 := nil
	16	[3612]	GETGLOBAL	R3 K6 ; R3 := cjson
	17	[3612]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x7ab914d8]
	18	[3612]	MOVE     	R4 R1 ; R4 := R1
	19	[3612]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[3613]	GETTABLE 	R4 R3 K8 ; R4 := R3["inventoryChanges"]
	21	[3613]	EQ       	1 R4 K9 ; if R4 == nil then PC := 40
	22	[3613]	JMP      	40 ; PC := 40
	23	[3614]	LOADNIL  	R4 R4 ; R4 := nil
	24	[3615]	GETGLOBAL	R5 K10 ; R5 := mActiveState
	25	[3615]	GETUPVAL 	R6 U0 ; R6 := U0
	26	[3615]	GETTABLE 	R6 R6 K11 ; R6 := R6["WEAPON_INV"]
	27	[3615]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 33
	28	[3615]	JMP      	33 ; PC := 33
	29	[3616]	GETTABLE 	R5 R3 K8 ; R5 := R3["inventoryChanges"]
	30	[3616]	GETTABLE 	R5 R5 K12 ; R5 := R5["CrewShipWeapons"]
	31	[3616]	GETTABLE 	R4 R5 K13 ; R4 := R5[1.000000]
	32	[3616]	JMP      	36 ; PC := 36
	33	[3618]	GETTABLE 	R5 R3 K8 ; R5 := R3["inventoryChanges"]
	34	[3618]	GETTABLE 	R5 R5 K14 ; R5 := R5["CrewShipWeaponSkins"]
	35	[3618]	GETTABLE 	R4 R5 K13 ; R4 := R5[1.000000]
	36	[3620]	EQ       	1 R4 K9 ; if R4 == nil then PC := 40
	37	[3620]	JMP      	40 ; PC := 40
	38	[3621]	GETTABLE 	R5 R4 K15 ; R5 := R4["ItemId"]
	39	[3621]	GETTABLE 	R2 R5 K16 ; R2 := R5["$oid"]
	40	[3625]	GETUPVAL 	R5 U1 ; R5 := U1
	41	[3625]	GETUPVAL 	R6 U2 ; R6 := U2
	42	[3625]	GETTABLE 	R6 R6 K17 ; R6 := R6["REPAIR"]
	43	[3625]	CALL     	R5 2 1 ; R5(R6)
	44	[3627]	GETUPVAL 	R5 U3 ; R5 := U3
	45	[3627]	MOVE     	R6 R2 ; R6 := R2
	46	[3627]	CALL     	R5 2 1 ; R5(R6)
	47	[3628]	GETUPVAL 	R5 U4 ; R5 := U4
	48	[3628]	CALL     	R5 1 1 ; R5()
	49	[3630]	RETURN   	R0 1 ; return 

function #96 <?:3632,3642> (33 instructions, 132 bytes at 0000021113BAABA0)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[3633]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3633]	MOVE     	R2 R0 ; R2 := R0
	3	[3633]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3633]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[3633]	JMP      	33 ; PC := 33
	6	[3634]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3634]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3636]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[3636]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[3636]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[3636]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3636]	TEST     	R2 1 ; if R2 then PC := 20
	13	[3636]	JMP      	20 ; PC := 20
	14	[3637]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[3637]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[3637]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[3637]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[3637]	LOADK    	R5 K10 ; R5 := "2"
	19	[3637]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[3640]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[3640]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[3640]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[3640]	LOADK    	R5 K14 ; R5 := "Rush"
	24	[3640]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[3640]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[3640]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[3640]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[3640]	LOADK    	R8 K17 ; R8 := "OnTechClaimed"
	29	[3640]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[3640]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[3640]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[3640]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[3642]	RETURN   	R0 1 ; return 

function #97 <?:3644,3654> (33 instructions, 132 bytes at 0000021113BAAED0)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[3645]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3645]	MOVE     	R2 R0 ; R2 := R0
	3	[3645]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3645]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[3645]	JMP      	33 ; PC := 33
	6	[3646]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3646]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3648]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[3648]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[3648]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[3648]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3648]	TEST     	R2 1 ; if R2 then PC := 20
	13	[3648]	JMP      	20 ; PC := 20
	14	[3649]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[3649]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[3649]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[3649]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[3649]	LOADK    	R5 K10 ; R5 := "2"
	19	[3649]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[3652]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[3652]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[3652]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[3652]	LOADK    	R5 K14 ; R5 := "Buy"
	24	[3652]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[3652]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[3652]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[3652]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[3652]	LOADK    	R8 K17 ; R8 := "OnTechClaimed"
	29	[3652]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[3652]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[3652]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[3652]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[3654]	RETURN   	R0 1 ; return 

function #98 <?:3656,3681> (77 instructions, 308 bytes at 0000021113BAB200)
2 params, 10 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[3657]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[3657]	SETGLOBALHASH	R2 K0 ; mInputBlocked := R2
	3	[3658]	LOADNIL  	R2 R2 ; R2 := nil
	4	[3658]	SETGLOBALHASH	R2 K1 ; mBinToExpand := R2
	5	[3659]	LOADNIL  	R2 R2 ; R2 := nil
	6	[3659]	SETGLOBALHASH	R2 K2 ; mWebCmd := R2
	7	[3661]	TEST     	R0 0 ; if not R0 then PC := 73
	8	[3661]	JMP      	73 ; PC := 73
	9	[3662]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[3662]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x659d451f]
	11	[3662]	GETGLOBAL	R3 K4 ; R3 := 0x0032441c
	12	[3662]	GETTABLE 	R3 R3 K5 ; R3 := R3["UISound_Purchase"]
	13	[3662]	CALL     	R2 2 1 ; R2(R3)
	14	[3664]	GETGLOBAL	R2 K6 ; R2 := 0x25d99d89
	15	[3664]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x25a6e75e]
	16	[3664]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[3665]	GETGLOBAL	R3 K8 ; R3 := 0xae91e43b
	18	[3665]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x42b04007]
	19	[3665]	LOADK    	R5 K10 ; R5 := "/Lotus/Language/Menu/Crafting_SlotPurchased"
	20	[3665]	OP_LOADBOOL	R6 0 0 ; R6 := false
	21	[3665]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	22	[3665]	LOADK    	R4 K11 ; R4 := "\r\n"
	23	[3665]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	24	[3666]	GETGLOBAL	R4 K12 ; R4 := mRushPrice
	25	[3666]	GETTABLE 	R5 R2 K13 ; R5 := R2["mPremiumCredits"]
	26	[3666]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 40
	27	[3666]	JMP      	40 ; PC := 40
	28	[3667]	MOVE     	R4 R3 ; R4 := R3
	29	[3667]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	30	[3667]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x42b04007]
	31	[3667]	LOADK    	R7 K14 ; R7 := "/Lotus/Language/Railjack/RushSalvage_InsufficientPlatinum"
	32	[3667]	OP_LOADBOOL	R8 0 0 ; R8 := false
	33	[3667]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	34	[3667]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	35	[3668]	GETUPVAL 	R4 U0 ; R4 := U0
	36	[3668]	GETTABLE 	R4 R4 K15 ; R4 := R4[0xe0cba3ca]
	37	[3668]	MOVE     	R5 R3 ; R5 := R3
	38	[3668]	CALL     	R4 2 1 ; R4(R5)
	39	[3668]	JMP      	77 ; PC := 77
	40	[3669]	GETGLOBAL	R4 K12 ; R4 := mRushPrice
	41	[3669]	LT       	0 K16 R4 ; if 0.000000 >= R4 then PC := 60
	42	[3669]	JMP      	60 ; PC := 60
	43	[3670]	GETGLOBAL	R4 K8 ; R4 := 0xae91e43b
	44	[3670]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x42b04007]
	45	[3670]	LOADK    	R6 K17 ; R6 := "/Lotus/Language/Railjack/RushSalvage"
	46	[3670]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[3670]	NEWTABLE 	R8 0 1 ; R8 := {}
	48	[3670]	GETGLOBAL	R9 K12 ; R9 := mRushPrice
	49	[3670]	SETTABLE 	R8 K18 R9 ; R8["RUSH_COST"] := R9
	50	[3670]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	51	[3671]	MOVE     	R5 R3 ; R5 := R3
	52	[3671]	MOVE     	R6 R4 ; R6 := R4
	53	[3671]	CONCAT   	R3 R5 R6 ; R3 := R5 .. R6
	54	[3673]	GETUPVAL 	R5 U0 ; R5 := U0
	55	[3673]	GETTABLE 	R5 R5 K19 ; R5 := R5[0xf616a184]
	56	[3673]	MOVE     	R6 R3 ; R6 := R3
	57	[3673]	LOADK    	R7 K20 ; R7 := "RushConfirm"
	58	[3673]	CALL     	R5 3 1 ; R5(R6,R7)
	59	[3673]	JMP      	77 ; PC := 77
	60	[3675]	MOVE     	R5 R3 ; R5 := R3
	61	[3675]	GETGLOBAL	R6 K8 ; R6 := 0xae91e43b
	62	[3675]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x42b04007]
	63	[3675]	LOADK    	R8 K21 ; R8 := "/Lotus/Language/Railjack/ClaimSalvage"
	64	[3675]	OP_LOADBOOL	R9 0 0 ; R9 := false
	65	[3675]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	66	[3675]	CONCAT   	R3 R5 R6 ; R3 := R5 .. R6
	67	[3676]	GETUPVAL 	R5 U0 ; R5 := U0
	68	[3676]	GETTABLE 	R5 R5 K19 ; R5 := R5[0xf616a184]
	69	[3676]	MOVE     	R6 R3 ; R6 := R3
	70	[3676]	LOADK    	R7 K22 ; R7 := "ClaimConfirm"
	71	[3676]	CALL     	R5 3 1 ; R5(R6,R7)
	72	[3677]	JMP      	77 ; PC := 77
	73	[3679]	GETUPVAL 	R5 U0 ; R5 := U0
	74	[3679]	GETTABLE 	R5 R5 K15 ; R5 := R5[0xe0cba3ca]
	75	[3679]	LOADK    	R6 K23 ; R6 := "/Lotus/Language/Menu/PurchaseFailure"
	76	[3679]	CALL     	R5 2 1 ; R5(R6)
	77	[3681]	RETURN   	R0 1 ; return 

function #99 <?:3683,3717> (150 instructions, 600 bytes at 0000021113BAB810)
1 param, 12 slots, 0 upvalues, 0 locals, 46 constants, 0 functions
	1	[3684]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3684]	MOVE     	R2 R0 ; R2 := R0
	3	[3684]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3684]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 107
	5	[3684]	JMP      	107 ; PC := 107
	6	[3685]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	7	[3685]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x25a6e75e]
	8	[3685]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[3686]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	10	[3686]	GETGLOBAL	R3 K6 ; R3 := 0xcb79539e
	11	[3686]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3686]	TEST     	R2 1 ; if R2 then PC := 48
	13	[3686]	JMP      	48 ; PC := 48
	14	[3687]	GETGLOBAL	R2 K7 ; R2 := mRushPrice
	15	[3687]	LT       	0 K8 R2 ; if 0.000000 >= R2 then PC := 33
	16	[3687]	JMP      	33 ; PC := 33
	17	[3688]	GETGLOBAL	R2 K6 ; R2 := 0xcb79539e
	18	[3688]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x8b8fb8b7]
	19	[3688]	GETGLOBAL	R4 K10 ; R4 := 0x0469f296
	20	[3688]	LOADK    	R5 K11 ; R5 := "SLOT_PROMPT_POPUP"
	21	[3688]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[3688]	LOADK    	R5 K12 ; R5 := "PersonalTech_Rush_"
	23	[3688]	GETGLOBAL	R6 K13 ; R6 := 0x7f5022cf
	24	[3688]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x66edf04f]
	25	[3688]	LOADK    	R7 K15 ; R7 := "REPAIRED_SALVAGE_SLOT"
	26	[3688]	LOADK    	R8 K16 ; R8 := " "
	27	[3688]	LOADK    	R9 K17 ; R9 := "_"
	28	[3688]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	29	[3688]	LOADK    	R7 K18 ; R7 := "_Purchase"
	30	[3688]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	31	[3688]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	32	[3688]	JMP      	48 ; PC := 48
	33	[3690]	GETGLOBAL	R2 K6 ; R2 := 0xcb79539e
	34	[3690]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x8b8fb8b7]
	35	[3690]	GETGLOBAL	R4 K10 ; R4 := 0x0469f296
	36	[3690]	LOADK    	R5 K11 ; R5 := "SLOT_PROMPT_POPUP"
	37	[3690]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[3690]	LOADK    	R5 K19 ; R5 := "PersonalTech_Claim_"
	39	[3690]	GETGLOBAL	R6 K13 ; R6 := 0x7f5022cf
	40	[3690]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x66edf04f]
	41	[3690]	LOADK    	R7 K15 ; R7 := "REPAIRED_SALVAGE_SLOT"
	42	[3690]	LOADK    	R8 K16 ; R8 := " "
	43	[3690]	LOADK    	R9 K17 ; R9 := "_"
	44	[3690]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	45	[3690]	LOADK    	R7 K18 ; R7 := "_Purchase"
	46	[3690]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	47	[3690]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	48	[3693]	GETTABLE 	R2 R1 K20 ; R2 := R1["mPremiumCredits"]
	49	[3693]	GETGLOBAL	R3 K21 ; R3 := 0xa94df70b
	50	[3693]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xd8cdfe4e]
	51	[3693]	GETGLOBAL	R5 K23 ; R5 := mBinToExpand
	52	[3693]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	53	[3693]	LT       	0 R2 R3 ; if R2 >= R3 then PC := 90
	54	[3693]	JMP      	90 ; PC := 90
	55	[3694]	GETGLOBAL	R2 K24 ; R2 := 0xae91e43b
	56	[3694]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x42b04007]
	57	[3694]	LOADK    	R4 K26 ; R4 := "/Lotus/Language/Menu/Global_InsufficientPlatinum"
	58	[3694]	OP_LOADBOOL	R5 1 0 ; R5 := true
	59	[3694]	NEWTABLE 	R6 0 1 ; R6 := {}
	60	[3694]	GETGLOBAL	R7 K24 ; R7 := 0xae91e43b
	61	[3694]	SELF     	R7 R7 K25 ; R8 := R7; R7 := R7[0x42b04007]
	62	[3694]	LOADK    	R9 K28 ; R9 := "/Lotus/Language/Menu/ItemInventory_SlotsSalvage"
	63	[3694]	OP_LOADBOOL	R10 1 0 ; R10 := true
	64	[3694]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	65	[3694]	SETTABLE 	R6 K27 R7 ; R6[0x99c4ef3a] := R7
	66	[3694]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	67	[3695]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	68	[3695]	GETGLOBAL	R4 K29 ; R4 := _T
	69	[3695]	GETTABLE 	R4 R4 K30 ; R4 := R4["BackgroundMovie"]
	70	[3695]	CALL     	R3 2 2 ; R3 := R3(R4)
	71	[3695]	TEST     	R3 1 ; if R3 then PC := 85
	72	[3695]	JMP      	85 ; PC := 85
	73	[3696]	GETGLOBAL	R3 K29 ; R3 := _T
	74	[3696]	GETTABLE 	R3 R3 K30 ; R3 := R3["BackgroundMovie"]
	75	[3696]	SELF     	R3 R3 K31 ; R4 := R3; R3 := R3[0xf56f3887]
	76	[3696]	LOADK    	R5 K32 ; R5 := "ShowInsufficientFundsPopup"
	77	[3696]	NEWTABLE 	R6 5 0 ; R6 := {}
	78	[3696]	LOADK    	R7 K33 ; R7 := "Platinum"
	79	[3696]	LOADK    	R8 K34 ; R8 := "0"
	80	[3696]	MOVE     	R9 R2 ; R9 := R2
	81	[3696]	LOADK    	R10 K35 ; R10 := "true"
	82	[3696]	LOADK    	R11 K36 ; R11 := "CREW_SHIP_SALVAGE_SLOT"
	83	[3696]	SETLIST  	R6 5 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 5
	84	[3696]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	85	[3698]	OP_LOADBOOL	R3 0 0 ; R3 := false
	86	[3698]	SETGLOBALHASH	R3 K37 ; mInputBlocked := R3
	87	[3699]	LOADNIL  	R3 R3 ; R3 := nil
	88	[3699]	SETGLOBALHASH	R3 K23 ; mBinToExpand := R3
	89	[3699]	JMP      	150 ; PC := 150
	90	[3701]	GETGLOBAL	R3 K38 ; R3 := 0x60cce7b4
	91	[3701]	GETGLOBAL	R4 K39 ; R4 := mWebCmd
	92	[3701]	EQ       	1 R4 K40 ; if R4 == nil then PC := 95
	93	[3701]	JMP      	95 ; PC := 95
	94	[3701]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 95
	95	[3701]	OP_LOADBOOL	R4 1 0 ; R4 := true
	96	[3701]	CALL     	R3 2 1 ; R3(R4)
	97	[3702]	GETGLOBAL	R3 K41 ; R3 := 0x6c97a788
	98	[3702]	GETTABLE 	R3 R3 K42 ; R3 := R3[0x2c6cc890]
	99	[3702]	GETGLOBAL	R4 K23 ; R4 := mBinToExpand
	100	[3702]	LOADK    	R5 K43 ; R5 := "OnSlotsResults"
	101	[3702]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	102	[3702]	SETGLOBALHASH	R3 K39 ; mWebCmd := R3
	103	[3703]	GETGLOBAL	R3 K39 ; R3 := mWebCmd
	104	[3703]	SELF     	R3 R3 K44 ; R4 := R3; R3 := R3[0xe4162eed]
	105	[3703]	CALL     	R3 2 1 ; R3(R4)
	106	[3704]	JMP      	150 ; PC := 150
	107	[3706]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	108	[3706]	GETGLOBAL	R4 K6 ; R4 := 0xcb79539e
	109	[3706]	CALL     	R3 2 2 ; R3 := R3(R4)
	110	[3706]	TEST     	R3 1 ; if R3 then PC := 146
	111	[3706]	JMP      	146 ; PC := 146
	112	[3707]	GETGLOBAL	R3 K7 ; R3 := mRushPrice
	113	[3707]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 131
	114	[3707]	JMP      	131 ; PC := 131
	115	[3708]	GETGLOBAL	R3 K6 ; R3 := 0xcb79539e
	116	[3708]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x8b8fb8b7]
	117	[3708]	GETGLOBAL	R5 K10 ; R5 := 0x0469f296
	118	[3708]	LOADK    	R6 K11 ; R6 := "SLOT_PROMPT_POPUP"
	119	[3708]	CALL     	R5 2 2 ; R5 := R5(R6)
	120	[3708]	LOADK    	R6 K12 ; R6 := "PersonalTech_Rush_"
	121	[3708]	GETGLOBAL	R7 K13 ; R7 := 0x7f5022cf
	122	[3708]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x66edf04f]
	123	[3708]	LOADK    	R8 K15 ; R8 := "REPAIRED_SALVAGE_SLOT"
	124	[3708]	LOADK    	R9 K16 ; R9 := " "
	125	[3708]	LOADK    	R10 K17 ; R10 := "_"
	126	[3708]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	127	[3708]	LOADK    	R8 K45 ; R8 := "_Cancel"
	128	[3708]	CONCAT   	R6 R6 R8 ; R6 := R6 .. R7 .. R8
	129	[3708]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	130	[3708]	JMP      	146 ; PC := 146
	131	[3710]	GETGLOBAL	R3 K6 ; R3 := 0xcb79539e
	132	[3710]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x8b8fb8b7]
	133	[3710]	GETGLOBAL	R5 K10 ; R5 := 0x0469f296
	134	[3710]	LOADK    	R6 K11 ; R6 := "SLOT_PROMPT_POPUP"
	135	[3710]	CALL     	R5 2 2 ; R5 := R5(R6)
	136	[3710]	LOADK    	R6 K19 ; R6 := "PersonalTech_Claim_"
	137	[3710]	GETGLOBAL	R7 K13 ; R7 := 0x7f5022cf
	138	[3710]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x66edf04f]
	139	[3710]	LOADK    	R8 K15 ; R8 := "REPAIRED_SALVAGE_SLOT"
	140	[3710]	LOADK    	R9 K16 ; R9 := " "
	141	[3710]	LOADK    	R10 K17 ; R10 := "_"
	142	[3710]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	143	[3710]	LOADK    	R8 K45 ; R8 := "_Cancel"
	144	[3710]	CONCAT   	R6 R6 R8 ; R6 := R6 .. R7 .. R8
	145	[3710]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	146	[3714]	OP_LOADBOOL	R3 0 0 ; R3 := false
	147	[3714]	SETGLOBALHASH	R3 K37 ; mInputBlocked := R3
	148	[3715]	LOADNIL  	R3 R3 ; R3 := nil
	149	[3715]	SETGLOBALHASH	R3 K23 ; mBinToExpand := R3
	150	[3717]	RETURN   	R0 1 ; return 

function #100 <?:3719,3724> (9 instructions, 36 bytes at 0000021113BAC1D0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[3720]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3720]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x2dcaf529]
	3	[3720]	MOVE     	R2 R0 ; R2 := R0
	4	[3720]	CALL     	R1 2 1 ; R1(R2)
	5	[3722]	OP_LOADBOOL	R1 0 0 ; R1 := false
	6	[3722]	SETGLOBALHASH	R1 K1 ; mInputBlocked := R1
	7	[3723]	LOADNIL  	R1 R1 ; R1 := nil
	8	[3723]	SETGLOBALHASH	R1 K2 ; mBinToExpand := R1
	9	[3724]	RETURN   	R0 1 ; return 

function #101 <?:3726,3760> (100 instructions, 400 bytes at 0000021113BAC320)
1 param, 15 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[3727]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[3727]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[3728]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[3728]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xc10bb642]
	5	[3728]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	6	[3728]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x25a6e75e]
	7	[3728]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[3728]	GETGLOBAL	R3 K4 ; R3 := mBinToExpand
	9	[3728]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[3728]	TEST     	R1 1 ; if R1 then PC := 17
	11	[3728]	JMP      	17 ; PC := 17
	12	[3729]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[3729]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x7aef8b7f]
	14	[3729]	LOADK    	R2 K6 ; R2 := "OnInvalidBinError"
	15	[3729]	CALL     	R1 2 1 ; R1(R2)
	16	[3730]	RETURN   	R0 1 ; return 
	17	[3733]	LOADK    	R1 K7 ; R1 := "\r\n"
	18	[3735]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	19	[3735]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x42b04007]
	20	[3735]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Menu/ItemInventory_SlotsSalvage"
	21	[3735]	OP_LOADBOOL	R5 1 0 ; R5 := true
	22	[3735]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	23	[3736]	GETGLOBAL	R3 K11 ; R3 := 0xa94df70b
	24	[3736]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x4ddd3d6e]
	25	[3736]	GETGLOBAL	R5 K4 ; R5 := mBinToExpand
	26	[3736]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[3737]	GETGLOBAL	R4 K11 ; R4 := 0xa94df70b
	28	[3737]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0xd8cdfe4e]
	29	[3737]	GETGLOBAL	R6 K4 ; R6 := mBinToExpand
	30	[3737]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[3739]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	32	[3739]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x42b04007]
	33	[3739]	LOADK    	R7 K14 ; R7 := "/Lotus/Language/Menu/Crafting_InsufficientInventorySpace"
	34	[3739]	OP_LOADBOOL	R8 1 0 ; R8 := true
	35	[3739]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	36	[3740]	GETGLOBAL	R6 K8 ; R6 := 0xae91e43b
	37	[3740]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x42b04007]
	38	[3740]	LOADK    	R8 K15 ; R8 := "/Lotus/Language/Menu/Crafting_InsufficientInventorySpaceUpSell"
	39	[3740]	OP_LOADBOOL	R9 1 0 ; R9 := true
	40	[3740]	NEWTABLE 	R10 0 3 ; R10 := {}
	41	[3740]	SETTABLE 	R10 K16 R3 ; R10["slotCount"] := R3
	42	[3740]	SETTABLE 	R10 K17 R2 ; R10["slotType"] := R2
	43	[3740]	SETTABLE 	R10 K18 R4 ; R10["cost"] := R4
	44	[3740]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	45	[3741]	LOADK    	R7 K19 ; R7 := ""
	46	[3742]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	47	[3742]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0x42b04007]
	48	[3742]	LOADK    	R10 K20 ; R10 := "/Lotus/Language/Menu/Crafting_InsufficientInventorySpaceUpSellButtonText"
	49	[3742]	OP_LOADBOOL	R11 1 0 ; R11 := true
	50	[3742]	NEWTABLE 	R12 0 1 ; R12 := {}
	51	[3742]	SETTABLE 	R12 K18 R4 ; R12["cost"] := R4
	52	[3742]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	53	[3743]	LT       	0 K21 R0 ; if 0.000000 >= R0 then PC := 79
	54	[3743]	JMP      	79 ; PC := 79
	55	[3744]	ADD      	R9 R0 R4 ; R9 := R0 + R4
	56	[3745]	GETGLOBAL	R10 K2 ; R10 := 0x25d99d89
	57	[3745]	SELF     	R10 R10 K3 ; R11 := R10; R10 := R10[0x25a6e75e]
	58	[3745]	CALL     	R10 2 2 ; R10 := R10(R11)
	59	[3745]	GETTABLE 	R10 R10 K22 ; R10 := R10["mPremiumCredits"]
	60	[3745]	LT       	0 R10 R9 ; if R10 >= R9 then PC := 71
	61	[3745]	JMP      	71 ; PC := 71
	62	[3746]	GETGLOBAL	R10 K8 ; R10 := 0xae91e43b
	63	[3746]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0x42b04007]
	64	[3746]	LOADK    	R12 K23 ; R12 := "/Lotus/Language/Railjack/Salvage_UserRushCostWarning"
	65	[3746]	OP_LOADBOOL	R13 1 0 ; R13 := true
	66	[3746]	NEWTABLE 	R14 0 1 ; R14 := {}
	67	[3746]	SETTABLE 	R14 K24 R0 ; R14["credits"] := R0
	68	[3746]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	69	[3746]	MOVE     	R7 R10 ; R7 := R10
	70	[3746]	JMP      	79 ; PC := 79
	71	[3748]	GETGLOBAL	R10 K8 ; R10 := 0xae91e43b
	72	[3748]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0x42b04007]
	73	[3748]	LOADK    	R12 K25 ; R12 := "/Lotus/Language/Railjack/Salvage_UserRushCostWarningCanAfford"
	74	[3748]	OP_LOADBOOL	R13 1 0 ; R13 := true
	75	[3748]	NEWTABLE 	R14 0 1 ; R14 := {}
	76	[3748]	SETTABLE 	R14 K24 R0 ; R14["credits"] := R0
	77	[3748]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	78	[3748]	MOVE     	R7 R10 ; R7 := R10
	79	[3751]	MOVE     	R10 R5 ; R10 := R5
	80	[3751]	MOVE     	R11 R1 ; R11 := R1
	81	[3751]	MOVE     	R12 R6 ; R12 := R6
	82	[3751]	MOVE     	R13 R1 ; R13 := R1
	83	[3751]	MOVE     	R14 R7 ; R14 := R7
	84	[3751]	CONCAT   	R5 R10 R14 ; R5 := R10 .. R11 .. R12 .. R13 .. R14
	85	[3752]	GETGLOBAL	R10 K26 ; R10 := 0x34291f5c
	86	[3752]	GETTABLE 	R10 R10 K27 ; R10 := R10[0xe27b35bb]
	87	[3752]	CALL     	R10 1 2 ; R10 := R10()
	88	[3753]	SETTABLE 	R10 K28 K29 ; R10["dialogType"] := 1.000000
	89	[3754]	SETTABLE 	R10 K30 R5 ; R10["locString"] := R5
	90	[3755]	SETTABLE 	R10 K31 R8 ; R10["firstString"] := R8
	91	[3756]	SETTABLE 	R10 K32 K33 ; R10["secondString"] := "/Menu/Confirm_Item_Cancel"
	92	[3757]	SETGLOBALHASH	R0 K34 ; mRushPrice := R0
	93	[3758]	SELF     	R11 R10 K35 ; R12 := R10; R11 := R10[0xe6ccc5b9]
	94	[3758]	LOADK    	R13 K36 ; R13 := "OnUpSellInvSlotsConfirmed"
	95	[3758]	CALL     	R11 3 1 ; R11(R12,R13)
	96	[3759]	GETUPVAL 	R11 U1 ; R11 := U1
	97	[3759]	GETTABLE 	R11 R11 K37 ; R11 := R11[0xe99b84e7]
	98	[3759]	MOVE     	R12 R10 ; R12 := R10
	99	[3759]	CALL     	R11 2 1 ; R11(R12)
	100	[3760]	RETURN   	R0 1 ; return 

function #102 <?:3762,3791> (72 instructions, 288 bytes at 0000021113BACA30)
1 param, 11 slots, 4 upvalues, 0 locals, 28 constants, 0 functions
	1	[3763]	GETGLOBAL	R1 K0 ; R1 := mInventoryGrid
	2	[3763]	GETTABLE 	R1 R1 K1 ; R1 := R1["mSelectedElement"]
	3	[3765]	LOADK    	R2 := 0.000000
	4	[3766]	TEST     	R0 0 ; if not R0 then PC := 20
	5	[3766]	JMP      	20 ; PC := 20
	6	[3767]	GETGLOBAL	R3 K2 ; R3 := 0xb009bbc6
	7	[3767]	GETTABLE 	R4 R1 K3 ; R4 := R1["SalvageRecipe"]
	8	[3767]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[3769]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[3769]	SELF     	R5 R3 K4 ; R6 := R3; R5 := R3[0x5112cc26]
	11	[3769]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[3769]	SELF     	R6 R3 K5 ; R7 := R3; R6 := R3[0xfd536ae6]
	13	[3769]	CALL     	R6 2 2 ; R6 := R6(R7)
	14	[3769]	GETGLOBAL	R7 K6 ; R7 := 0x34291f5c
	15	[3769]	GETTABLE 	R7 R7 K7 ; R7 := R7[0x397b920f]
	16	[3769]	GETTABLE 	R8 R1 K8 ; R8 := R1["SalvageTimeRemaining"]
	17	[3769]	CALL     	R7 2 0 ; R7,... := R7(R8)
	18	[3769]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	19	[3769]	MOVE     	R2 R4 ; R2 := R4
	20	[3773]	GETUPVAL 	R4 U1 ; R4 := U1
	21	[3773]	GETTABLE 	R4 R4 K9 ; R4 := R4[0x1fdb3a11]
	22	[3773]	GETTABLE 	R5 R1 K10 ; R5 := R1["Category"]
	23	[3773]	LOADK    	R6 := 1.000000
	24	[3773]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	25	[3773]	TEST     	R4 1 ; if R4 then PC := 36
	26	[3773]	JMP      	36 ; PC := 36
	27	[3774]	GETGLOBAL	R4 K12 ; R4 := 0xa94df70b
	28	[3774]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x99c4ef3a]
	29	[3774]	GETTABLE 	R6 R1 K10 ; R6 := R1["Category"]
	30	[3774]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[3774]	SETGLOBALHASH	R4 K11 ; mBinToExpand := R4
	32	[3775]	GETUPVAL 	R4 U2 ; R4 := U2
	33	[3775]	MOVE     	R5 R2 ; R5 := R2
	34	[3775]	CALL     	R4 2 1 ; R4(R5)
	35	[3776]	RETURN   	R0 1 ; return 
	36	[3779]	LT       	0 K14 R2 ; if 0.000000 >= R2 then PC := 67
	37	[3779]	JMP      	67 ; PC := 67
	38	[3780]	GETGLOBAL	R4 K15 ; R4 := 0x25d99d89
	39	[3780]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x25a6e75e]
	40	[3780]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[3781]	GETTABLE 	R5 R4 K17 ; R5 := R4["mPremiumCredits"]
	42	[3781]	LT       	0 R5 R2 ; if R5 >= R2 then PC := 54
	43	[3781]	JMP      	54 ; PC := 54
	44	[3782]	GETGLOBAL	R5 K18 ; R5 := 0xae91e43b
	45	[3782]	SELF     	R5 R5 K19 ; R6 := R5; R5 := R5[0x42b04007]
	46	[3782]	LOADK    	R7 K20 ; R7 := "/Lotus/Language/Railjack/RushSalvage_InsufficientPlatinum"
	47	[3782]	OP_LOADBOOL	R8 0 0 ; R8 := false
	48	[3782]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	49	[3783]	GETUPVAL 	R6 U3 ; R6 := U3
	50	[3783]	GETTABLE 	R6 R6 K21 ; R6 := R6[0xe0cba3ca]
	51	[3783]	MOVE     	R7 R5 ; R7 := R5
	52	[3783]	CALL     	R6 2 1 ; R6(R7)
	53	[3783]	JMP      	72 ; PC := 72
	54	[3785]	GETGLOBAL	R6 K18 ; R6 := 0xae91e43b
	55	[3785]	SELF     	R6 R6 K19 ; R7 := R6; R6 := R6[0x42b04007]
	56	[3785]	LOADK    	R8 K22 ; R8 := "/Lotus/Language/Railjack/RushSalvage"
	57	[3785]	OP_LOADBOOL	R9 1 0 ; R9 := true
	58	[3785]	NEWTABLE 	R10 0 1 ; R10 := {}
	59	[3785]	SETTABLE 	R10 K23 R2 ; R10["RUSH_COST"] := R2
	60	[3785]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	61	[3786]	GETUPVAL 	R7 U3 ; R7 := U3
	62	[3786]	GETTABLE 	R7 R7 K24 ; R7 := R7[0xf616a184]
	63	[3786]	MOVE     	R8 R6 ; R8 := R6
	64	[3786]	LOADK    	R9 K25 ; R9 := "RushConfirm"
	65	[3786]	CALL     	R7 3 1 ; R7(R8,R9)
	66	[3787]	JMP      	72 ; PC := 72
	67	[3789]	GETUPVAL 	R7 U3 ; R7 := U3
	68	[3789]	GETTABLE 	R7 R7 K24 ; R7 := R7[0xf616a184]
	69	[3789]	LOADK    	R8 K26 ; R8 := "/Lotus/Language/Railjack/ClaimSalvage"
	70	[3789]	LOADK    	R9 K27 ; R9 := "ClaimConfirm"
	71	[3789]	CALL     	R7 3 1 ; R7(R8,R9)
	72	[3791]	RETURN   	R0 1 ; return 

function #103 <?:3793,3795> (4 instructions, 16 bytes at 0000021113BACEF0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3794]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3794]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[3794]	CALL     	R0 2 1 ; R0(R1)
	4	[3795]	RETURN   	R0 1 ; return 

function #104 <?:3797,3799> (4 instructions, 16 bytes at 0000021113BACFC0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3798]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3798]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[3798]	CALL     	R0 2 1 ; R0(R1)
	4	[3799]	RETURN   	R0 1 ; return 

function #105 <?:3802,3817> (20 instructions, 80 bytes at 0000021113BAD090)
4 params, 9 slots, 1 upvalue, 0 locals, 6 constants, 1 function
	1	[3803]	GETGLOBAL	R4 K0 ; R4 := 0x5f0788c4
	2	[3803]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	3	[3803]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0x42b04007]
	4	[3803]	MOVE     	R7 R1 ; R7 := R1
	5	[3803]	OP_LOADBOOL	R8 0 0 ; R8 := false
	6	[3803]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	7	[3803]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	8	[3804]	GETGLOBAL	R5 K3 ; R5 := mTimerMgr
	9	[3804]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0xbd2e96ea]
	10	[3804]	GETUPVAL 	R7 U0 ; R7 := U0
	11	[3815]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	12	[3815]	MOVE     	R0 R4 ; R0 := R4
	13	[3815]	MOVE     	R0 R2 ; R0 := R2
	14	[3815]	MOVE     	R0 R3 ; R0 := R3
	15	[3815]	MOVE     	R0 R0 ; R0 := R0
	16	[3804]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	17	[3816]	GETUPVAL 	R5 U0 ; R5 := U0
	18	[3816]	ADD      	R5 R5 K5 ; R5 := R5 + 2.350000
	19	[3816]	SETUPVAL 	R5 U0 ; U0 := R5
	20	[3817]	RETURN   	R0 1 ; return 

function #106 <?:3819,3839> (53 instructions, 212 bytes at 0000021113BAD570)
2 params, 11 slots, 5 upvalues, 0 locals, 17 constants, 0 functions
	1	[3820]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3820]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[3820]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[3820]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3820]	TEST     	R2 1 ; if R2 then PC := 13
	6	[3820]	JMP      	13 ; PC := 13
	7	[3821]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[3821]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[3821]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[3821]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[3821]	LOADK    	R5 K5 ; R5 := "0"
	12	[3821]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[3823]	LOADNIL  	R2 R2 ; R2 := nil
	14	[3823]	SETGLOBALHASH	R2 K6 ; mWebCmd := R2
	15	[3825]	TEST     	R0 0 ; if not R0 then PC := 53
	16	[3825]	JMP      	53 ; PC := 53
	17	[3826]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[3826]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[3826]	GETTABLE 	R3 R3 K7 ; R3 := R3["SELL"]
	20	[3826]	CALL     	R2 2 1 ; R2(R3)
	21	[3827]	GETUPVAL 	R2 U2 ; R2 := U2
	22	[3827]	CALL     	R2 1 1 ; R2()
	23	[3829]	LOADK    	R2 := 0.000000
	24	[3829]	SETUPVAL 	R2 U3 ; U3 := R2
	25	[3831]	LOADK    	R2 := 1.000000
	26	[3831]	GETGLOBAL	R3 K8 ; R3 := mSellInfoItems
	27	[3831]	LEN      	R3 R3 ; R3 := # R3
	28	[3831]	LOADK    	R4 := 1.000000
	29	[3831]	FORPREP  	R2 42 ; R2 -= R4; PC := 42
	30	[3832]	GETUPVAL 	R6 U4 ; R6 := U4
	31	[3832]	GETGLOBAL	R7 K8 ; R7 := mSellInfoItems
	32	[3832]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	33	[3832]	GETTABLE 	R7 R7 K9 ; R7 := R7["StoreItem"]
	34	[3832]	GETGLOBAL	R8 K8 ; R8 := mSellInfoItems
	35	[3832]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	36	[3832]	GETTABLE 	R8 R8 K10 ; R8 := R8["Name"]
	37	[3832]	GETGLOBAL	R9 K8 ; R9 := mSellInfoItems
	38	[3832]	GETTABLE 	R9 R9 R5 ; R9 := R9[R5]
	39	[3832]	GETTABLE 	R9 R9 K11 ; R9 := R9["Count"]
	40	[3832]	LOADK    	R10 := 2.000000
	41	[3832]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	42	[3831]	FORLOOP  	R2 30 ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
	43	[3835]	GETGLOBAL	R6 K12 ; R6 := mSellInfo
	44	[3835]	GETTABLE 	R6 R6 K13 ; R6 := R6["mSellPrice"]
	45	[3835]	LT       	0 K14 R6 ; if 0.000000 >= R6 then PC := 53
	46	[3835]	JMP      	53 ; PC := 53
	47	[3836]	GETUPVAL 	R6 U4 ; R6 := U4
	48	[3836]	GETGLOBAL	R7 K15 ; R7 := 0xb7323fae
	49	[3836]	LOADK    	R8 K16 ; R8 := "/Lotus/Language/Items/FusionBundle"
	50	[3836]	GETGLOBAL	R9 K12 ; R9 := mSellInfo
	51	[3836]	GETTABLE 	R9 R9 K13 ; R9 := R9["mSellPrice"]
	52	[3836]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	53	[3839]	RETURN   	R0 1 ; return 

function #107 <?:3841,3874> (104 instructions, 416 bytes at 0000021113BAD900)
1 param, 9 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[3842]	GETGLOBAL	R1 K0 ; R1 := mScrapCount
	2	[3842]	TEST     	R1 1 ; if R1 then PC := 5
	3	[3842]	JMP      	5 ; PC := 5
	4	[3842]	LOADK    	R1 := 1.000000
	5	[3843]	LOADNIL  	R2 R2 ; R2 := nil
	6	[3843]	SETGLOBALHASH	R2 K0 ; mScrapCount := R2
	7	[3844]	LOADNIL  	R2 R2 ; R2 := nil
	8	[3844]	SETGLOBALHASH	R2 K1 ; mManifestMovie := R2
	9	[3845]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	10	[3845]	GETTABLE 	R2 R2 K3 ; R2 := R2["mSelectedElement"]
	11	[3846]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[3846]	MOVE     	R4 R0 ; R4 := R0
	13	[3846]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[3846]	EQ       	0 R3 K6 ; if R3 ~= 4.000000 then PC := 96
	15	[3846]	JMP      	96 ; PC := 96
	16	[3846]	EQ       	1 R2 K7 ; if R2 == nil then PC := 96
	17	[3846]	JMP      	96 ; PC := 96
	18	[3846]	GETTABLE 	R3 R2 K8 ; R3 := R2["SalvageState"]
	19	[3846]	GETUPVAL 	R4 U0 ; R4 := U0
	20	[3846]	GETTABLE 	R4 R4 K9 ; R4 := R4["UNIDENTIFIED"]
	21	[3846]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 25
	22	[3846]	JMP      	25 ; PC := 25
	23	[3846]	LT       	0 K10 R1 ; if 0.000000 >= R1 then PC := 96
	24	[3846]	JMP      	96 ; PC := 96
	25	[3847]	GETGLOBAL	R3 K12 ; R3 := 0x6c97a788
	26	[3847]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x8ec871cb]
	27	[3847]	CALL     	R3 1 2 ; R3 := R3()
	28	[3847]	SETGLOBALHASH	R3 K11 ; mSellInfo := R3
	29	[3848]	GETGLOBAL	R3 K11 ; R3 := mSellInfo
	30	[3848]	SETTABLE 	R3 K14 K15 ; R3["mSellCurrency"] := 2.000000
	31	[3849]	GETTABLE 	R3 R2 K16 ; R3 := R2["SellingPrice"]
	32	[3851]	GETTABLE 	R4 R2 K8 ; R4 := R2["SalvageState"]
	33	[3851]	GETUPVAL 	R5 U0 ; R5 := U0
	34	[3851]	GETTABLE 	R5 R5 K9 ; R5 := R5["UNIDENTIFIED"]
	35	[3851]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 48
	36	[3851]	JMP      	48 ; PC := 48
	37	[3852]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	38	[3852]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0x6f344425]
	39	[3852]	GETTABLE 	R6 R2 K18 ; R6 := R2["Category"]
	40	[3852]	GETTABLE 	R7 R2 K19 ; R7 := R2["RawItem"]
	41	[3852]	GETTABLE 	R7 R7 K20 ; R7 := R7["ItemType"]
	42	[3852]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0xed4e0128]
	43	[3852]	CALL     	R7 2 2 ; R7 := R7(R8)
	44	[3852]	MOVE     	R8 R1 ; R8 := R1
	45	[3852]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	46	[3853]	MUL      	R3 R3 R1 ; R3 := R3 * R1
	47	[3853]	JMP      	63 ; PC := 63
	48	[3855]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	49	[3855]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0x6f344425]
	50	[3855]	GETTABLE 	R6 R2 K18 ; R6 := R2["Category"]
	51	[3855]	GETTABLE 	R7 R2 K19 ; R7 := R2["RawItem"]
	52	[3855]	GETTABLE 	R7 R7 K22 ; R7 := R7["UID"]
	53	[3855]	LOADK    	R8 := 1.000000
	54	[3855]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	55	[3856]	GETTABLE 	R4 R2 K8 ; R4 := R2["SalvageState"]
	56	[3856]	GETUPVAL 	R5 U0 ; R5 := U0
	57	[3856]	GETTABLE 	R5 R5 K23 ; R5 := R5["OWNED"]
	58	[3856]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 63
	59	[3856]	JMP      	63 ; PC := 63
	60	[3857]	LOADK    	R3 := 0.000000
	61	[3858]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	62	[3858]	SETTABLE 	R4 K14 K6 ; R4["mSellCurrency"] := 4.000000
	63	[3862]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	64	[3862]	GETGLOBAL	R5 K11 ; R5 := mSellInfo
	65	[3862]	GETTABLE 	R5 R5 K24 ; R5 := R5["mSellPrice"]
	66	[3862]	ADD      	R5 R5 R3 ; R5 := R5 + R3
	67	[3862]	SETTABLE 	R4 K24 R5 ; R4["mSellPrice"] := R5
	68	[3863]	GETGLOBAL	R4 K25 ; R4 := 0x7b998233
	69	[3863]	GETGLOBAL	R5 K26 ; R5 := _T
	70	[3863]	GETTABLE 	R5 R5 K27 ; R5 := R5["BackgroundMovie"]
	71	[3863]	CALL     	R4 2 2 ; R4 := R4(R5)
	72	[3863]	TEST     	R4 1 ; if R4 then PC := 80
	73	[3863]	JMP      	80 ; PC := 80
	74	[3864]	GETGLOBAL	R4 K26 ; R4 := _T
	75	[3864]	GETTABLE 	R4 R4 K27 ; R4 := R4["BackgroundMovie"]
	76	[3864]	SELF     	R4 R4 K28 ; R5 := R4; R4 := R4[0xe4162eed]
	77	[3864]	LOADK    	R6 K29 ; R6 := "ShowBlockingMessage"
	78	[3864]	LOADK    	R7 K30 ; R7 := "2"
	79	[3864]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	80	[3867]	GETGLOBAL	R4 K31 ; R4 := 0x60cce7b4
	81	[3867]	GETGLOBAL	R5 K32 ; R5 := mWebCmd
	82	[3867]	EQ       	1 R5 K7 ; if R5 == nil then PC := 85
	83	[3867]	JMP      	85 ; PC := 85
	84	[3867]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 85
	85	[3867]	OP_LOADBOOL	R5 1 0 ; R5 := true
	86	[3867]	CALL     	R4 2 1 ; R4(R5)
	87	[3868]	GETGLOBAL	R4 K12 ; R4 := 0x6c97a788
	88	[3868]	GETTABLE 	R4 R4 K33 ; R4 := R4[0xa128fc07]
	89	[3868]	GETGLOBAL	R5 K11 ; R5 := mSellInfo
	90	[3868]	LOADK    	R6 K34 ; R6 := "OnSalvageSold"
	91	[3868]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	92	[3868]	SETGLOBALHASH	R4 K32 ; mWebCmd := R4
	93	[3869]	GETGLOBAL	R4 K32 ; R4 := mWebCmd
	94	[3869]	SELF     	R4 R4 K28 ; R5 := R4; R4 := R4[0xe4162eed]
	95	[3869]	CALL     	R4 2 1 ; R4(R5)
	96	[3873]	GETUPVAL 	R4 U1 ; R4 := U1
	97	[3873]	GETGLOBAL	R5 K35 ; R5 := 0xae91e43b
	98	[3873]	SELF     	R5 R5 K36 ; R6 := R5; R5 := R5[0x6b837788]
	99	[3873]	CALL     	R5 2 2 ; R5 := R5(R6)
	100	[3873]	GETGLOBAL	R6 K35 ; R6 := 0xae91e43b
	101	[3873]	SELF     	R6 R6 K37 ; R7 := R6; R6 := R6[0xaf9fda9f]
	102	[3873]	CALL     	R6 2 0 ; R6,... := R6(R7)
	103	[3873]	CALL     	R4 0 1 ; R4(R5,...)
	104	[3874]	RETURN   	R0 1 ; return 

function #108 <?:3876,3878> (4 instructions, 16 bytes at 000002112D129BE0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3877]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3877]	MOVE     	R2 R0 ; R2 := R0
	3	[3877]	CALL     	R1 2 1 ; R1(R2)
	4	[3878]	RETURN   	R0 1 ; return 

function #109 <?:3880,3897> (55 instructions, 220 bytes at 000002112D129CB0)
2 params, 10 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[3881]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	2	[3881]	MOVE     	R3 R1 ; R3 := R1
	3	[3881]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[3881]	EQ       	0 R2 K1 ; if R2 ~= 1.000000 then PC := 52
	5	[3881]	JMP      	52 ; PC := 52
	6	[3882]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	7	[3882]	GETTABLE 	R2 R2 K3 ; R2 := R2["mSelectedElement"]
	8	[3883]	EQ       	1 R2 K4 ; if R2 == nil then PC := 52
	9	[3883]	JMP      	52 ; PC := 52
	10	[3884]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	11	[3884]	MOVE     	R4 R0 ; R4 := R0
	12	[3884]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[3884]	SETGLOBALHASH	R3 K5 ; mScrapCount := R3
	14	[3885]	GETGLOBAL	R3 K5 ; R3 := mScrapCount
	15	[3885]	LT       	0 K6 R3 ; if 0.000000 >= R3 then PC := 52
	16	[3885]	JMP      	52 ; PC := 52
	17	[3886]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[3886]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x1142c7a8]
	19	[3886]	GETTABLE 	R4 R2 K8 ; R4 := R2["SellingPrice"]
	20	[3886]	GETGLOBAL	R5 K5 ; R5 := mScrapCount
	21	[3886]	MUL      	R4 R4 R5 ; R4 := R4 * R5
	22	[3886]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[3887]	GETGLOBAL	R4 K5 ; R4 := mScrapCount
	24	[3887]	LT       	0 K1 R4 ; if 1.000000 >= R4 then PC := 39
	25	[3887]	JMP      	39 ; PC := 39
	26	[3888]	MOVE     	R4 R3 ; R4 := R3
	27	[3888]	LOADK    	R5 K9 ; R5 := " ("
	28	[3888]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[3888]	GETTABLE 	R6 R6 K7 ; R6 := R6[0x1142c7a8]
	30	[3888]	GETTABLE 	R7 R2 K8 ; R7 := R2["SellingPrice"]
	31	[3888]	CALL     	R6 2 2 ; R6 := R6(R7)
	32	[3888]	LOADK    	R7 K10 ; R7 := " x "
	33	[3888]	GETUPVAL 	R8 U0 ; R8 := U0
	34	[3888]	GETTABLE 	R8 R8 K7 ; R8 := R8[0x1142c7a8]
	35	[3888]	GETGLOBAL	R9 K5 ; R9 := mScrapCount
	36	[3888]	CALL     	R8 2 2 ; R8 := R8(R9)
	37	[3888]	LOADK    	R9 K11 ; R9 := ")"
	38	[3888]	CONCAT   	R3 R4 R9 ; R3 := R4 .. R5 .. R6 .. R7 .. R8 .. R9
	39	[3890]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	40	[3890]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x42b04007]
	41	[3890]	LOADK    	R6 K14 ; R6 := "/Lotus/Language/Railjack/SellSalvage"
	42	[3890]	OP_LOADBOOL	R7 1 0 ; R7 := true
	43	[3890]	NEWTABLE 	R8 0 1 ; R8 := {}
	44	[3890]	SETTABLE 	R8 K15 R3 ; R8["SELL_VALUE"] := R3
	45	[3890]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	46	[3891]	GETUPVAL 	R5 U0 ; R5 := U0
	47	[3891]	GETTABLE 	R5 R5 K16 ; R5 := R5[0xf616a184]
	48	[3891]	MOVE     	R6 R4 ; R6 := R4
	49	[3891]	LOADK    	R7 K17 ; R7 := "SellConfirm"
	50	[3891]	CALL     	R5 3 1 ; R5(R6,R7)
	51	[3892]	RETURN   	R0 1 ; return 
	52	[3896]	GETUPVAL 	R5 U1 ; R5 := U1
	53	[3896]	LOADK    	R6 := 5.000000
	54	[3896]	CALL     	R5 2 1 ; R5(R6)
	55	[3897]	RETURN   	R0 1 ; return 

function #110 <?:3899,3966> (175 instructions, 700 bytes at 000002112D12A0A0)
0 params, 18 slots, 5 upvalues, 0 locals, 72 constants, 0 functions
	1	[3900]	GETGLOBAL	R0 K0 ; R0 := mInventoryGrid
	2	[3900]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[3902]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 6
	4	[3902]	JMP      	6 ; PC := 6
	5	[3903]	RETURN   	R0 1 ; return 
	6	[3906]	NEWTABLE 	R1 0 0 ; R1 := {}
	7	[3906]	SETGLOBALHASH	R1 K3 ; mSellInfoItems := R1
	8	[3908]	GETTABLE 	R1 R0 K4 ; R1 := R0["SalvageState"]
	9	[3908]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[3908]	GETTABLE 	R2 R2 K5 ; R2 := R2["OWNED"]
	11	[3908]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 119
	12	[3908]	JMP      	119 ; PC := 119
	13	[3909]	GETGLOBAL	R1 K6 ; R1 := mInputBlocked
	14	[3909]	TEST     	R1 1 ; if R1 then PC := 118
	15	[3909]	JMP      	118 ; PC := 118
	16	[3910]	GETGLOBAL	R1 K7 ; R1 := 0xb009bbc6
	17	[3910]	GETTABLE 	R2 R0 K8 ; R2 := R0["SalvageRecipe"]
	18	[3910]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[3912]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	20	[3912]	MOVE     	R3 R1 ; R3 := R1
	21	[3912]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[3912]	TEST     	R2 1 ; if R2 then PC := 118
	23	[3912]	JMP      	118 ; PC := 118
	24	[3913]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	25	[3913]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x42b04007]
	26	[3913]	LOADK    	R4 K12 ; R4 := "/Lotus/Language/Railjack/SellRepairedSalvage"
	27	[3913]	OP_LOADBOOL	R5 0 0 ; R5 := false
	28	[3913]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	29	[3914]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	30	[3914]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x42b04007]
	31	[3914]	LOADK    	R5 K13 ; R5 := "/Lotus/Language/Menu/Crafting_CancelBuildSubtitle"
	32	[3914]	OP_LOADBOOL	R6 0 0 ; R6 := false
	33	[3914]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	34	[3915]	GETUPVAL 	R4 U1 ; R4 := U1
	35	[3915]	GETTABLE 	R4 R4 K14 ; R4 := R4[0x06d055f9]
	36	[3915]	SELF     	R5 R1 K15 ; R6 := R1; R5 := R1[0x5dc6a962]
	37	[3915]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[3915]	SELF     	R6 R1 K16 ; R7 := R1; R6 := R1[0x024d3816]
	39	[3915]	CALL     	R6 2 2 ; R6 := R6(R7)
	40	[3915]	SELF     	R7 R1 K17 ; R8 := R1; R7 := R1[0xfc40d6a1]
	41	[3915]	CALL     	R7 2 0 ; R7,... := R7(R8)
	42	[3915]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	43	[3916]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	44	[3916]	MOVE     	R6 R4 ; R6 := R4
	45	[3916]	CALL     	R5 2 2 ; R5 := R5(R6)
	46	[3916]	TEST     	R5 1 ; if R5 then PC := 100
	47	[3916]	JMP      	100 ; PC := 100
	48	[3917]	LOADK    	R5 := 1.000000
	49	[3917]	LEN      	R6 R4 ; R6 := # R4
	50	[3917]	LOADK    	R7 := 1.000000
	51	[3917]	FORPREP  	R5 99 ; R5 -= R7; PC := 99
	52	[3918]	GETGLOBAL	R9 K18 ; R9 := 0xce225efa
	53	[3918]	LOADK    	R10 := 0.000000
	54	[3918]	CALL     	R9 2 1 ; R9(R10)
	55	[3920]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	56	[3922]	NEWTABLE 	R10 0 0 ; R10 := {}
	57	[3923]	GETUPVAL 	R11 U2 ; R11 := U2
	58	[3923]	SELF     	R11 R11 K19 ; R12 := R11; R11 := R11[0x105074fb]
	59	[3923]	GETTABLE 	R13 R9 K20 ; R13 := R9["mItemType"]
	60	[3923]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	61	[3924]	GETGLOBAL	R12 K9 ; R12 := 0x7b998233
	62	[3924]	MOVE     	R13 R11 ; R13 := R11
	63	[3924]	CALL     	R12 2 2 ; R12 := R12(R13)
	64	[3924]	TEST     	R12 1 ; if R12 then PC := 80
	65	[3924]	JMP      	80 ; PC := 80
	66	[3925]	GETUPVAL 	R12 U3 ; R12 := U3
	67	[3925]	GETTABLE 	R12 R12 K21 ; R12 := R12[0x08681f50]
	68	[3925]	GETGLOBAL	R13 K10 ; R13 := 0xae91e43b
	69	[3925]	MOVE     	R14 R11 ; R14 := R11
	70	[3925]	NEWTABLE 	R15 0 3 ; R15 := {}
	71	[3925]	GETGLOBAL	R16 K23 ; R16 := 0x25d99d89
	72	[3925]	SETTABLE 	R15 K22 R16 ; R15["GameData"] := R16
	73	[3925]	SETTABLE 	R15 K24 K25 ; R15["GetVisibilityMaterial"] := true
	74	[3925]	SETTABLE 	R15 K26 K25 ; R15["DepthTest"] := true
	75	[3925]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	76	[3925]	MOVE     	R10 R12 ; R10 := R12
	77	[3926]	SELF     	R12 R11 K28 ; R13 := R11; R12 := R11[0xfe9eb1a5]
	78	[3926]	CALL     	R12 2 2 ; R12 := R12(R13)
	79	[3926]	SETTABLE 	R10 K27 R12 ; R10[0x7b998233] := R12
	80	[3929]	SETTABLE 	R10 K29 R11 ; R10["StoreItem"] := R11
	81	[3931]	GETGLOBAL	R12 K30 ; R12 := 0x33bdd652
	82	[3931]	GETTABLE 	R12 R12 K31 ; R12 := R12[0x23d5322f]
	83	[3931]	GETGLOBAL	R13 K3 ; R13 := mSellInfoItems
	84	[3931]	NEWTABLE 	R14 0 5 ; R14 := {}
	85	[3931]	GETTABLE 	R15 R10 K32 ; R15 := R10["Name"]
	86	[3931]	SETTABLE 	R14 K32 R15 ; R14["Name"] := R15
	87	[3931]	SETTABLE 	R14 K29 R11 ; R14["StoreItem"] := R11
	88	[3931]	GETGLOBAL	R15 K34 ; R15 := 0x5bced4c4
	89	[3931]	GETTABLE 	R15 R15 K35 ; R15 := R15[0x99675e23]
	90	[3931]	GETTABLE 	R16 R9 K36 ; R16 := R9["mItemCount"]
	91	[3931]	MUL      	R16 R16 K37 ; R16 := R16 * 0.800000
	92	[3931]	CALL     	R15 2 2 ; R15 := R15(R16)
	93	[3931]	SETTABLE 	R14 K33 R15 ; R14[0x7f5022cf] := R15
	94	[3931]	GETTABLE 	R15 R10 K38 ; R15 := R10["Icon"]
	95	[3931]	SETTABLE 	R14 K38 R15 ; R14[0x46e9d221] := R15
	96	[3931]	GETTABLE 	R15 R10 K39 ; R15 := R10["LocalizedDesc"]
	97	[3931]	SETTABLE 	R14 K39 R15 ; R14["LocalizedDesc"] := R15
	98	[3931]	CALL     	R12 3 1 ; R12(R13,R14)
	99	[3917]	FORLOOP  	R5 52 ; R5 += R7; if R5 <= R6 then begin PC := 52; R8 := R5 end
	100	[3935]	GETGLOBAL	R12 K40 ; R12 := _T
	101	[3935]	NEWTABLE 	R13 0 4 ; R13 := {}
	102	[3935]	SETTABLE 	R13 K42 R2 ; R13["TITLE"] := R2
	103	[3935]	SETTABLE 	R13 K43 R3 ; R13["TIP"] := R3
	104	[3935]	GETGLOBAL	R14 K3 ; R14 := mSellInfoItems
	105	[3935]	SETTABLE 	R13 K44 R14 ; R13["mITEMS"] := R14
	106	[3935]	SETTABLE 	R13 K45 K46 ; R13["CONFIRM_LABEL"] := "/Lotus/Language/Menu/ItemSelection_OK"
	107	[3935]	SETTABLE 	R12 K41 R13 ; R12["Manifest"] := R13
	108	[3936]	GETGLOBAL	R12 K10 ; R12 := 0xae91e43b
	109	[3936]	SELF     	R12 R12 K48 ; R13 := R12; R12 := R12[0x1fd6abd0]
	110	[3936]	GETGLOBAL	R14 K49 ; R14 := 0x0e7e9601
	111	[3936]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	112	[3936]	SETGLOBALHASH	R12 K47 ; mManifestMovie := R12
	113	[3937]	GETGLOBAL	R12 K47 ; R12 := mManifestMovie
	114	[3937]	SELF     	R12 R12 K50 ; R13 := R12; R12 := R12[0xe4162eed]
	115	[3937]	LOADK    	R14 K51 ; R14 := "SetCallback"
	116	[3937]	LOADK    	R15 K52 ; R15 := "SellConfirm"
	117	[3937]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	118	[3941]	RETURN   	R0 1 ; return 
	119	[3944]	GETTABLE 	R12 R0 K53 ; R12 := R0["SellingPrice"]
	120	[3944]	EQ       	0 R12 K2 ; if R12 ~= nil then PC := 126
	121	[3944]	JMP      	126 ; PC := 126
	122	[3945]	GETGLOBAL	R12 K54 ; R12 := 0x3d106989
	123	[3945]	LOADK    	R13 K55 ; R13 := "RailjackLoadout: Element has nil SellingPrice, i.e. 0"
	124	[3945]	CALL     	R12 2 1 ; R12(R13)
	125	[3947]	RETURN   	R0 1 ; return 
	126	[3950]	GETTABLE 	R12 R0 K4 ; R12 := R0["SalvageState"]
	127	[3950]	GETUPVAL 	R13 U0 ; R13 := U0
	128	[3950]	GETTABLE 	R13 R13 K56 ; R13 := R13["UNIDENTIFIED"]
	129	[3950]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 162
	130	[3950]	JMP      	162 ; PC := 162
	131	[3950]	GETTABLE 	R12 R0 K33 ; R12 := R0["Count"]
	132	[3950]	LT       	0 K57 R12 ; if 1.000000 >= R12 then PC := 162
	133	[3950]	JMP      	162 ; PC := 162
	134	[3951]	GETGLOBAL	R12 K40 ; R12 := _T
	135	[3951]	NEWTABLE 	R13 0 7 ; R13 := {}
	136	[3952]	GETTABLE 	R14 R0 K32 ; R14 := R0["Name"]
	137	[3952]	SETTABLE 	R13 K32 R14 ; R13["Name"] := R14
	138	[3953]	GETTABLE 	R14 R0 K39 ; R14 := R0["LocalizedDesc"]
	139	[3953]	SETTABLE 	R13 K39 R14 ; R13["LocalizedDesc"] := R14
	140	[3954]	GETTABLE 	R14 R0 K33 ; R14 := R0["Count"]
	141	[3954]	SETTABLE 	R13 K33 R14 ; R13[0x7f5022cf] := R14
	142	[3955]	GETUPVAL 	R14 U4 ; R14 := U4
	143	[3955]	GETTABLE 	R14 R14 K60 ; R14 := R14["LABEL_TYPE_CHECKMARK"]
	144	[3955]	SETTABLE 	R13 K59 R14 ; R13["TagType"] := R14
	145	[3956]	NEWTABLE 	R14 0 2 ; R14 := {}
	146	[3956]	NEWTABLE 	R15 0 1 ; R15 := {}
	147	[3956]	GETUPVAL 	R16 U4 ; R16 := U4
	148	[3956]	GETTABLE 	R16 R16 K64 ; R16 := R16["LABEL_TYPE_ENDO"]
	149	[3956]	SETTABLE 	R15 K63 R16 ; R15["LabelType"] := R16
	150	[3956]	SETTABLE 	R14 K62 R15 ; R14["SellInfo"] := R15
	151	[3956]	SETTABLE 	R14 K65 K25 ; R14["HideOwned"] := true
	152	[3956]	SETTABLE 	R13 K61 R14 ; R13["MetaData"] := R14
	153	[3957]	GETTABLE 	R14 R0 K53 ; R14 := R0["SellingPrice"]
	154	[3957]	SETTABLE 	R13 K53 R14 ; R13["SellingPrice"] := R14
	155	[3958]	SETTABLE 	R13 K66 K67 ; R13["Callback"] := "SellCountConfirm"
	156	[3959]	SETTABLE 	R12 K58 R13 ; R12["InfoPopup_Data"] := R13
	157	[3960]	GETGLOBAL	R12 K10 ; R12 := 0xae91e43b
	158	[3960]	SELF     	R12 R12 K48 ; R13 := R12; R12 := R12[0x1fd6abd0]
	159	[3960]	GETGLOBAL	R14 K68 ; R14 := 0xc2a05c3d
	160	[3960]	CALL     	R12 3 1 ; R12(R13,R14)
	161	[3961]	RETURN   	R0 1 ; return 
	162	[3964]	GETGLOBAL	R12 K10 ; R12 := 0xae91e43b
	163	[3964]	SELF     	R12 R12 K11 ; R13 := R12; R12 := R12[0x42b04007]
	164	[3964]	LOADK    	R14 K69 ; R14 := "/Lotus/Language/Railjack/SellSalvage"
	165	[3964]	OP_LOADBOOL	R15 1 0 ; R15 := true
	166	[3964]	NEWTABLE 	R16 0 1 ; R16 := {}
	167	[3964]	GETTABLE 	R17 R0 K53 ; R17 := R0["SellingPrice"]
	168	[3964]	SETTABLE 	R16 K70 R17 ; R16["SELL_VALUE"] := R17
	169	[3964]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	170	[3965]	GETUPVAL 	R13 U1 ; R13 := U1
	171	[3965]	GETTABLE 	R13 R13 K71 ; R13 := R13[0xf616a184]
	172	[3965]	MOVE     	R14 R12 ; R14 := R12
	173	[3965]	LOADK    	R15 K52 ; R15 := "SellConfirm"
	174	[3965]	CALL     	R13 3 1 ; R13(R14,R15)
	175	[3966]	RETURN   	R0 1 ; return 

function #111 <?:3968,3973> (8 instructions, 32 bytes at 000002112D12AC20)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3969]	SETGLOBALHASH	R0 K0 ; mFuseElement1 := R0
	2	[3970]	LOADNIL  	R0 R0 ; R0 := nil
	3	[3970]	SETGLOBALHASH	R0 K1 ; mFuseElement2 := R0
	4	[3971]	LOADNIL  	R0 R0 ; R0 := nil
	5	[3971]	SETGLOBALHASH	R0 K2 ; mFuseElement3 := R0
	6	[3972]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[3972]	SETGLOBALHASH	R0 K3 ; mEquipAfterFuse := R0
	8	[3973]	RETURN   	R0 1 ; return 

function #112 <?:3975,4035> (119 instructions, 476 bytes at 000002112D12AD60)
2 params, 13 slots, 9 upvalues, 0 locals, 31 constants, 0 functions
	1	[3976]	GETGLOBAL	R2 K0 ; R2 := mInventoryGrid
	2	[3976]	SETTABLE 	R2 K1 K2 ; R2["mSelectedElement"] := nil
	3	[3978]	TEST     	R0 1 ; if R0 then PC := 10
	4	[3978]	JMP      	10 ; PC := 10
	5	[3979]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[3979]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xa53f5e12]
	7	[3979]	LOADK    	R3 K4 ; R3 := "/Lotus/Language/Kingpins/FuseFailed"
	8	[3979]	CALL     	R2 2 1 ; R2(R3)
	9	[3981]	RETURN   	R0 1 ; return 
	10	[3984]	GETUPVAL 	R2 U0 ; R2 := U0
	11	[3984]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x659d451f]
	12	[3984]	GETGLOBAL	R3 K6 ; R3 := 0x0032441c
	13	[3984]	GETTABLE 	R3 R3 K7 ; R3 := R3["UISound_SweetenerTwo"]
	14	[3984]	CALL     	R2 2 1 ; R2(R3)
	15	[3985]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[3985]	GETTABLE 	R2 R2 K8 ; R2 := R2[0xe0cba3ca]
	17	[3985]	LOADK    	R3 K9 ; R3 := "/Lotus/Language/Kingpins/FuseSuccess"
	18	[3985]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[3986]	GETGLOBAL	R3 K10 ; R3 := 0x7b998233
	20	[3986]	MOVE     	R4 R2 ; R4 := R2
	21	[3986]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[3986]	TEST     	R3 1 ; if R3 then PC := 37
	23	[3986]	JMP      	37 ; PC := 37
	24	[3987]	GETUPVAL 	R3 U0 ; R3 := U0
	25	[3987]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x5a22d251]
	26	[3987]	MOVE     	R4 R2 ; R4 := R2
	27	[3987]	GETGLOBAL	R5 K12 ; R5 := 0xfb117b36
	28	[3987]	LOADK    	R6 := 800.000000
	29	[3987]	LOADK    	R7 := 450.000000
	30	[3987]	LOADNIL  	R8 R10 ; R8 := R9 := R10 := nil
	31	[3987]	OP_LOADBOOL	R11 1 0 ; R11 := true
	32	[3987]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	33	[3988]	GETUPVAL 	R3 U0 ; R3 := U0
	34	[3988]	GETTABLE 	R3 R3 K5 ; R3 := R3[0x659d451f]
	35	[3988]	GETGLOBAL	R4 K13 ; R4 := 0xd6075367
	36	[3988]	CALL     	R3 2 1 ; R3(R4)
	37	[3991]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[3991]	CALL     	R3 1 1 ; R3()
	39	[3993]	GETGLOBAL	R3 K14 ; R3 := cjson
	40	[3993]	GETTABLE 	R3 R3 K15 ; R3 := R3[0x7ab914d8]
	41	[3993]	MOVE     	R4 R1 ; R4 := R1
	42	[3993]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[3994]	GETTABLE 	R4 R3 K16 ; R4 := R3["InventoryChanges"]
	44	[3994]	EQ       	1 R4 K2 ; if R4 == nil then PC := 111
	45	[3994]	JMP      	111 ; PC := 111
	46	[3995]	LOADNIL  	R4 R4 ; R4 := nil
	47	[3996]	GETGLOBAL	R5 K17 ; R5 := mActiveState
	48	[3996]	GETUPVAL 	R6 U2 ; R6 := U2
	49	[3996]	GETTABLE 	R6 R6 K18 ; R6 := R6["WEAPON_INV"]
	50	[3996]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 56
	51	[3996]	JMP      	56 ; PC := 56
	52	[3997]	GETTABLE 	R5 R3 K16 ; R5 := R3["InventoryChanges"]
	53	[3997]	GETTABLE 	R5 R5 K19 ; R5 := R5["CrewShipWeapons"]
	54	[3997]	GETTABLE 	R4 R5 K20 ; R4 := R5[1.000000]
	55	[3997]	JMP      	59 ; PC := 59
	56	[3999]	GETTABLE 	R5 R3 K16 ; R5 := R3["InventoryChanges"]
	57	[3999]	GETTABLE 	R5 R5 K21 ; R5 := R5["CrewShipWeaponSkins"]
	58	[3999]	GETTABLE 	R4 R5 K20 ; R4 := R5[1.000000]
	59	[4001]	EQ       	1 R4 K2 ; if R4 == nil then PC := 111
	60	[4001]	JMP      	111 ; PC := 111
	61	[4002]	GETTABLE 	R5 R4 K22 ; R5 := R4["ItemId"]
	62	[4002]	GETTABLE 	R5 R5 K23 ; R5 := R5["$oid"]
	63	[4004]	GETUPVAL 	R6 U3 ; R6 := U3
	64	[4004]	MOVE     	R7 R5 ; R7 := R5
	65	[4004]	CALL     	R6 2 2 ; R6 := R6(R7)
	66	[4006]	GETUPVAL 	R7 U4 ; R7 := U4
	67	[4006]	MOVE     	R8 R6 ; R8 := R6
	68	[4006]	OP_LOADBOOL	R9 1 0 ; R9 := true
	69	[4006]	CALL     	R7 3 1 ; R7(R8,R9)
	70	[4007]	GETGLOBAL	R7 K24 ; R7 := mEquipAfterFuse
	71	[4007]	TEST     	R7 0 ; if not R7 then PC := 111
	72	[4007]	JMP      	111 ; PC := 111
	73	[4008]	OP_LOADBOOL	R7 0 0 ; R7 := false
	74	[4008]	SETGLOBALHASH	R7 K24 ; mEquipAfterFuse := R7
	75	[4010]	GETUPVAL 	R7 U5 ; R7 := U5
	76	[4010]	MOVE     	R8 R6 ; R8 := R6
	77	[4010]	LOADNIL  	R9 R10 ; R9 := R10 := nil
	78	[4010]	OP_LOADBOOL	R11 1 0 ; R11 := true
	79	[4010]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	80	[4011]	GETGLOBAL	R7 K17 ; R7 := mActiveState
	81	[4011]	GETUPVAL 	R8 U2 ; R8 := U2
	82	[4011]	GETTABLE 	R8 R8 K18 ; R8 := R8["WEAPON_INV"]
	83	[4011]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 92
	84	[4011]	JMP      	92 ; PC := 92
	85	[4013]	GETGLOBAL	R7 K25 ; R7 := mEquipment
	86	[4013]	SELF     	R7 R7 K26 ; R8 := R7; R7 := R7[0x71e9ac81]
	87	[4013]	LOADNIL  	R9 R9 ; R9 := nil
	88	[4013]	OP_LOADBOOL	R10 1 0 ; R10 := true
	89	[4013]	OP_LOADBOOL	R11 1 0 ; R11 := true
	90	[4013]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	91	[4013]	JMP      	106 ; PC := 106
	92	[4016]	GETGLOBAL	R7 K25 ; R7 := mEquipment
	93	[4016]	GETTABLE 	R7 R7 K1 ; R7 := R7["mSelectedElement"]
	94	[4017]	GETTABLE 	R8 R6 K28 ; R8 := R6["RawItem"]
	95	[4017]	GETTABLE 	R8 R8 K27 ; R8 := R8["Item"]
	96	[4017]	SETTABLE 	R7 K27 R8 ; R7["Item"] := R8
	97	[4018]	GETUPVAL 	R8 U6 ; R8 := U6
	98	[4018]	MOVE     	R9 R7 ; R9 := R7
	99	[4018]	CALL     	R8 2 1 ; R8(R9)
	100	[4020]	GETGLOBAL	R8 K25 ; R8 := mEquipment
	101	[4020]	SELF     	R8 R8 K26 ; R9 := R8; R8 := R8[0x71e9ac81]
	102	[4020]	LOADNIL  	R10 R10 ; R10 := nil
	103	[4020]	OP_LOADBOOL	R11 1 0 ; R11 := true
	104	[4020]	OP_LOADBOOL	R12 1 0 ; R12 := true
	105	[4020]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	106	[4023]	GETUPVAL 	R8 U1 ; R8 := U1
	107	[4023]	CALL     	R8 1 1 ; R8()
	108	[4025]	GETUPVAL 	R8 U3 ; R8 := U3
	109	[4025]	MOVE     	R9 R5 ; R9 := R5
	110	[4025]	CALL     	R8 2 1 ; R8(R9)
	111	[4030]	GETGLOBAL	R8 K29 ; R8 := mFuseElement2
	112	[4030]	GETTABLE 	R8 R8 K30 ; R8 := R8["Recipe"]
	113	[4030]	EQ       	1 R8 K2 ; if R8 == nil then PC := 117
	114	[4030]	JMP      	117 ; PC := 117
	115	[4031]	GETUPVAL 	R8 U7 ; R8 := U7
	116	[4031]	CALL     	R8 1 1 ; R8()
	117	[4034]	GETUPVAL 	R8 U8 ; R8 := U8
	118	[4034]	CALL     	R8 1 1 ; R8()
	119	[4035]	RETURN   	R0 1 ; return 

function #113 <?:4037,4057> (61 instructions, 244 bytes at 000002112D12B410)
2 params, 8 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[4038]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4038]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	3	[4038]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4038]	TEST     	R2 1 ; if R2 then PC := 8
	5	[4038]	JMP      	8 ; PC := 8
	6	[4038]	EQ       	0 R1 K2 ; if R1 ~= "false" then PC := 11
	7	[4038]	JMP      	11 ; PC := 11
	8	[4039]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[4039]	CALL     	R2 1 1 ; R2()
	10	[4040]	RETURN   	R0 1 ; return 
	11	[4043]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	12	[4043]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x42b04007]
	13	[4043]	LOADK    	R4 K5 ; R4 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponWord"
	14	[4043]	OP_LOADBOOL	R5 0 0 ; R5 := false
	15	[4043]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	16	[4044]	GETGLOBAL	R3 K6 ; R3 := 0x7f5022cf
	17	[4044]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x04981ab3]
	18	[4044]	MOVE     	R4 R0 ; R4 := R0
	19	[4044]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[4044]	GETGLOBAL	R4 K6 ; R4 := 0x7f5022cf
	21	[4044]	GETTABLE 	R4 R4 K7 ; R4 := R4[0x04981ab3]
	22	[4044]	MOVE     	R5 R2 ; R5 := R2
	23	[4044]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[4044]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 55
	25	[4044]	JMP      	55 ; PC := 55
	26	[4045]	GETGLOBAL	R3 K8 ; R3 := 0x6c97a788
	27	[4045]	GETTABLE 	R3 R3 K9 ; R3 := R3[0x0edef15d]
	28	[4045]	CALL     	R3 1 2 ; R3 := R3()
	29	[4047]	GETTABLE 	R4 R3 K10 ; R4 := R3["mPartA"]
	30	[4047]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x46e9d221]
	31	[4047]	GETGLOBAL	R6 K12 ; R6 := mFuseElement1
	32	[4047]	GETTABLE 	R6 R6 K13 ; R6 := R6["UID"]
	33	[4047]	CALL     	R4 3 1 ; R4(R5,R6)
	34	[4048]	GETTABLE 	R4 R3 K14 ; R4 := R3["mPartB"]
	35	[4048]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x46e9d221]
	36	[4048]	GETGLOBAL	R6 K15 ; R6 := mFuseElement2
	37	[4048]	GETTABLE 	R6 R6 K13 ; R6 := R6["UID"]
	38	[4048]	CALL     	R4 3 1 ; R4(R5,R6)
	39	[4049]	GETGLOBAL	R4 K15 ; R4 := mFuseElement2
	40	[4049]	GETTABLE 	R4 R4 K17 ; R4 := R4["Recipe"]
	41	[4049]	SETTABLE 	R3 K16 R4 ; R3["mSourceRecipe"] := R4
	42	[4050]	GETGLOBAL	R4 K19 ; R4 := mFuseElement3
	43	[4050]	GETTABLE 	R4 R4 K20 ; R4 := R4["SubA"]
	44	[4050]	EQ       	1 R4 K21 ; if R4 == true then PC := 47
	45	[4050]	JMP      	47 ; PC := 47
	46	[4050]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 47
	47	[4050]	OP_LOADBOOL	R4 1 0 ; R4 := true
	48	[4050]	SETTABLE 	R3 K18 R4 ; R3["mUseSubroutineA"] := R4
	49	[4052]	GETGLOBAL	R4 K1 ; R4 := 0x25d99d89
	50	[4052]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x126c948e]
	51	[4052]	MOVE     	R6 R3 ; R6 := R3
	52	[4052]	LOADK    	R7 K23 ; R7 := "OnFuseItem"
	53	[4052]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	54	[4052]	JMP      	61 ; PC := 61
	55	[4054]	GETUPVAL 	R4 U1 ; R4 := U1
	56	[4054]	GETTABLE 	R4 R4 K24 ; R4 := R4[0xa53f5e12]
	57	[4054]	LOADK    	R5 K25 ; R5 := "/Lotus/Language/Dojo/VaultContributionDecoIncorrectConfirmWord"
	58	[4054]	CALL     	R4 2 1 ; R4(R5)
	59	[4055]	GETUPVAL 	R4 U0 ; R4 := U0
	60	[4055]	CALL     	R4 1 1 ; R4()
	61	[4057]	RETURN   	R0 1 ; return 

function #114 <?:4059,4094> (72 instructions, 288 bytes at 000002112D12B980)
6 params, 20 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[4060]	GETGLOBAL	R6 K0 ; R6 := mActiveState
	2	[4060]	GETUPVAL 	R7 U0 ; R7 := U0
	3	[4060]	GETTABLE 	R7 R7 K1 ; R7 := R7["WEAPON_INV"]
	4	[4060]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 22
	5	[4060]	JMP      	22 ; PC := 22
	6	[4061]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 13
	7	[4061]	JMP      	13 ; PC := 13
	8	[4061]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 13
	9	[4061]	JMP      	13 ; PC := 13
	10	[4062]	LOADNIL  	R6 R6 ; R6 := nil
	11	[4062]	RETURN   	R6 2 ; return R6 
	12	[4062]	JMP      	22 ; PC := 22
	13	[4063]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 18
	14	[4063]	JMP      	18 ; PC := 18
	15	[4064]	GETTABLE 	R6 R2 K3 ; R6 := R2["Value"]
	16	[4064]	RETURN   	R6 2 ; return R6 
	17	[4064]	JMP      	22 ; PC := 22
	18	[4065]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 22
	19	[4065]	JMP      	22 ; PC := 22
	20	[4066]	GETTABLE 	R6 R0 K3 ; R6 := R0["Value"]
	21	[4066]	RETURN   	R6 2 ; return R6 
	22	[4070]	LOADK    	R6 := 0.000000
	23	[4071]	LOADK    	R7 := 0.000000
	24	[4072]	EQ       	1 R0 K2 ; if R0 == nil then PC := 27
	25	[4072]	JMP      	27 ; PC := 27
	26	[4073]	GETTABLE 	R6 R0 K3 ; R6 := R0["Value"]
	27	[4075]	EQ       	1 R2 K2 ; if R2 == nil then PC := 30
	28	[4075]	JMP      	30 ; PC := 30
	29	[4076]	GETTABLE 	R7 R2 K3 ; R7 := R2["Value"]
	30	[4080]	SELF     	R8 R3 K4 ; R9 := R3; R8 := R3[0x3efe024d]
	31	[4080]	CALL     	R8 2 2 ; R8 := R8(R9)
	32	[4081]	GETGLOBAL	R9 K5 ; R9 := FUSE_MAX_VALUE
	33	[4081]	DIV      	R9 R7 R9 ; R9 := R7 / R9
	34	[4082]	GETGLOBAL	R10 K6 ; R10 := 0x9bafffe3
	35	[4082]	GETTABLE 	R11 R8 K7 ; R11 := R8["minValue"]
	36	[4082]	GETTABLE 	R12 R8 K8 ; R12 := R8["maxValue"]
	37	[4082]	MOVE     	R13 R9 ; R13 := R9
	38	[4082]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	39	[4084]	SELF     	R11 R1 K4 ; R12 := R1; R11 := R1[0x3efe024d]
	40	[4084]	CALL     	R11 2 2 ; R11 := R11(R12)
	41	[4085]	GETGLOBAL	R12 K5 ; R12 := FUSE_MAX_VALUE
	42	[4085]	DIV      	R12 R6 R12 ; R12 := R6 / R12
	43	[4086]	GETGLOBAL	R13 K6 ; R13 := 0x9bafffe3
	44	[4086]	GETTABLE 	R14 R11 K7 ; R14 := R11["minValue"]
	45	[4086]	GETTABLE 	R15 R11 K8 ; R15 := R11["maxValue"]
	46	[4086]	MOVE     	R16 R12 ; R16 := R12
	47	[4086]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	48	[4088]	SUB      	R14 R5 R4 ; R14 := R5 - R4
	49	[4090]	GETGLOBAL	R15 K9 ; R15 := 0x5bced4c4
	50	[4090]	GETTABLE 	R15 R15 K10 ; R15 := R15[0xb62ecfe0]
	51	[4090]	MOVE     	R16 R10 ; R16 := R10
	52	[4090]	MOVE     	R17 R13 ; R17 := R13
	53	[4090]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	54	[4091]	GETGLOBAL	R16 K9 ; R16 := 0x5bced4c4
	55	[4091]	GETTABLE 	R16 R16 K11 ; R16 := R16[0xac1b386a]
	56	[4091]	GETTABLE 	R17 R8 K8 ; R17 := R8["maxValue"]
	57	[4091]	GETGLOBAL	R18 K12 ; R18 := FUSE_MULTIPLIERS
	58	[4091]	ADD      	R19 R14 K13 ; R19 := R14 + 1.000000
	59	[4091]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	60	[4091]	MUL      	R18 R15 R18 ; R18 := R15 * R18
	61	[4091]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	62	[4091]	MOVE     	R15 R16 ; R15 := R16
	63	[4093]	GETTABLE 	R16 R8 K7 ; R16 := R8["minValue"]
	64	[4093]	SUB      	R16 R15 R16 ; R16 := R15 - R16
	65	[4093]	GETTABLE 	R17 R8 K8 ; R17 := R8["maxValue"]
	66	[4093]	GETTABLE 	R18 R8 K7 ; R18 := R8["minValue"]
	67	[4093]	SUB      	R17 R17 R18 ; R17 := R17 - R18
	68	[4093]	DIV      	R16 R16 R17 ; R16 := R16 / R17
	69	[4093]	GETGLOBAL	R17 K5 ; R17 := FUSE_MAX_VALUE
	70	[4093]	MUL      	R16 R16 R17 ; R16 := R16 * R17
	71	[4093]	RETURN   	R16 2 ; return R16 
	72	[4094]	RETURN   	R0 1 ; return 

function #115 <?:4096,4123> (40 instructions, 160 bytes at 000002112D12BD60)
2 params, 14 slots, 0 upvalues, 0 locals, 8 constants, 2 functions
	1	[4097]	LOADK    	R2 K0 ; R2 := "%p*"
	2	[4098]	LOADK    	R3 K1 ; R3 := "%d*"
	3	[4099]	LOADK    	R4 K2 ; R4 := "%.?"
	4	[4100]	LOADK    	R5 K3 ; R5 := "%d+"
	5	[4101]	LOADK    	R6 K4 ; R6 := "[^%s]*"
	6	[4103]	MOVE     	R7 R3 ; R7 := R3
	7	[4103]	MOVE     	R8 R4 ; R8 := R4
	8	[4103]	MOVE     	R9 R5 ; R9 := R5
	9	[4103]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	10	[4104]	MOVE     	R8 R2 ; R8 := R2
	11	[4104]	MOVE     	R9 R7 ; R9 := R7
	12	[4104]	MOVE     	R10 R6 ; R10 := R6
	13	[4104]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	14	[4106]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 29
	15	[4106]	JMP      	29 ; PC := 29
	16	[4107]	NEWTABLE 	R9 0 0 ; R9 := {}
	17	[4108]	GETGLOBAL	R10 K6 ; R10 := 0x7f5022cf
	18	[4108]	GETTABLE 	R10 R10 K7 ; R10 := R10[0x66edf04f]
	19	[4108]	MOVE     	R11 R0 ; R11 := R0
	20	[4108]	MOVE     	R12 R8 ; R12 := R8
	21	[4112]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	22	[4112]	MOVE     	R0 R9 ; R0 := R9
	23	[4108]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	24	[4113]	MOVE     	R11 R10 ; R11 := R10
	25	[4113]	MOVE     	R12 R9 ; R12 := R9
	26	[4113]	RETURN   	R11 3 ; return R11, R12 
	27	[4113]	CLOSE    	R9 ; SAVE R9,...
	28	[4113]	JMP      	40 ; PC := 40
	29	[4115]	LOADK    	R9 := 0.000000
	30	[4116]	GETGLOBAL	R10 K6 ; R10 := 0x7f5022cf
	31	[4116]	GETTABLE 	R10 R10 K7 ; R10 := R10[0x66edf04f]
	32	[4116]	MOVE     	R11 R0 ; R11 := R0
	33	[4116]	MOVE     	R12 R8 ; R12 := R8
	34	[4120]	CLOSURE  	R13 1 ; R13 := closure(Function #2)
	35	[4120]	MOVE     	R0 R9 ; R0 := R9
	36	[4120]	MOVE     	R0 R1 ; R0 := R1
	37	[4116]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	38	[4121]	RETURN   	R10 2 ; return R10 
	39	[4121]	CLOSE    	R9 ; SAVE R9,...
	40	[4123]	RETURN   	R0 1 ; return 

function #116 <?:4125,4180> (159 instructions, 636 bytes at 000002112D12C310)
0 params, 27 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[4126]	GETGLOBAL	R0 K0 ; R0 := mFuseElement1
	2	[4126]	GETTABLE 	R0 R0 K1 ; R0 := R0["Data"]
	3	[4127]	GETGLOBAL	R1 K2 ; R1 := mFuseElement2
	4	[4127]	GETTABLE 	R1 R1 K1 ; R1 := R1["Data"]
	5	[4128]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	6	[4131]	GETGLOBAL	R4 K0 ; R4 := mFuseElement1
	7	[4131]	GETTABLE 	R4 R4 K3 ; R4 := R4["Tier"]
	8	[4132]	GETGLOBAL	R5 K2 ; R5 := mFuseElement2
	9	[4132]	GETTABLE 	R5 R5 K3 ; R5 := R5["Tier"]
	10	[4134]	GETGLOBAL	R6 K0 ; R6 := mFuseElement1
	11	[4134]	GETTABLE 	R6 R6 K4 ; R6 := R6["Upgrade"]
	12	[4135]	GETGLOBAL	R7 K2 ; R7 := mFuseElement2
	13	[4135]	GETTABLE 	R7 R7 K4 ; R7 := R7["Upgrade"]
	14	[4136]	GETGLOBAL	R8 K5 ; R8 := mActiveState
	15	[4136]	GETUPVAL 	R9 U0 ; R9 := U0
	16	[4136]	GETTABLE 	R9 R9 K6 ; R9 := R9["WEAPON_INV"]
	17	[4136]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 48
	18	[4136]	JMP      	48 ; PC := 48
	19	[4137]	GETUPVAL 	R8 U1 ; R8 := U1
	20	[4137]	GETTABLE 	R8 R8 K7 ; R8 := R8[0x06d055f9]
	21	[4137]	EQ       	0 R6 K8 ; if R6 ~= nil then PC := 24
	22	[4137]	JMP      	24 ; PC := 24
	23	[4137]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 24
	24	[4137]	OP_LOADBOOL	R9 1 0 ; R9 := true
	25	[4137]	NEWTABLE 	R10 1 0 ; R10 := {}
	26	[4137]	MOVE     	R11 R6 ; R11 := R6
	27	[4137]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	28	[4137]	NEWTABLE 	R11 1 0 ; R11 := {}
	29	[4137]	MOVE     	R12 R7 ; R12 := R7
	30	[4137]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	31	[4137]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	32	[4138]	GETUPVAL 	R9 U1 ; R9 := U1
	33	[4138]	GETTABLE 	R9 R9 K7 ; R9 := R9[0x06d055f9]
	34	[4138]	EQ       	0 R7 K8 ; if R7 ~= nil then PC := 37
	35	[4138]	JMP      	37 ; PC := 37
	36	[4138]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 37
	37	[4138]	OP_LOADBOOL	R10 1 0 ; R10 := true
	38	[4138]	NEWTABLE 	R11 1 0 ; R11 := {}
	39	[4138]	MOVE     	R12 R7 ; R12 := R7
	40	[4138]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	41	[4138]	NEWTABLE 	R12 1 0 ; R12 := {}
	42	[4138]	MOVE     	R13 R6 ; R13 := R6
	43	[4138]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	44	[4138]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	45	[4139]	MOVE     	R6 R8 ; R6 := R8
	46	[4140]	MOVE     	R7 R9 ; R7 := R9
	47	[4140]	JMP      	54 ; PC := 54
	48	[4142]	SELF     	R10 R6 K9 ; R11 := R6; R10 := R6[0x81d5d906]
	49	[4142]	CALL     	R10 2 2 ; R10 := R10(R11)
	50	[4142]	MOVE     	R6 R10 ; R6 := R10
	51	[4143]	SELF     	R10 R7 K9 ; R11 := R7; R10 := R7[0x81d5d906]
	52	[4143]	CALL     	R10 2 2 ; R10 := R10(R11)
	53	[4143]	MOVE     	R7 R10 ; R7 := R10
	54	[4145]	GETGLOBAL	R10 K10 ; R10 := mFuseElement3
	55	[4145]	GETTABLE 	R10 R10 K11 ; R10 := R10["Flipped"]
	56	[4145]	TEST     	R10 1 ; if R10 then PC := 90
	57	[4145]	JMP      	90 ; PC := 90
	58	[4146]	GETUPVAL 	R10 U1 ; R10 := U1
	59	[4146]	GETTABLE 	R10 R10 K12 ; R10 := R10[0xd6ee7507]
	60	[4146]	MOVE     	R11 R0 ; R11 := R0
	61	[4146]	CALL     	R10 2 2 ; R10 := R10(R11)
	62	[4146]	MOVE     	R2 R10 ; R2 := R10
	63	[4147]	GETGLOBAL	R10 K0 ; R10 := mFuseElement1
	64	[4147]	GETTABLE 	R3 R10 K4 ; R3 := R10["Upgrade"]
	65	[4148]	LOADK    	R10 := 1.000000
	66	[4148]	GETGLOBAL	R11 K13 ; R11 := 0x5bced4c4
	67	[4148]	GETTABLE 	R11 R11 K14 ; R11 := R11[0xb62ecfe0]
	68	[4148]	GETTABLE 	R12 R0 K15 ; R12 := R0["buffs"]
	69	[4148]	LEN      	R12 R12 ; R12 := # R12
	70	[4148]	GETTABLE 	R13 R1 K15 ; R13 := R1["buffs"]
	71	[4148]	LEN      	R13 R13 ; R13 := # R13
	72	[4148]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	73	[4148]	LOADK    	R12 := 1.000000
	74	[4148]	FORPREP  	R10 88 ; R10 -= R12; PC := 88
	75	[4149]	GETTABLE 	R14 R2 K15 ; R14 := R2["buffs"]
	76	[4149]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	77	[4149]	GETUPVAL 	R15 U2 ; R15 := U2
	78	[4149]	GETTABLE 	R16 R1 K15 ; R16 := R1["buffs"]
	79	[4149]	GETTABLE 	R16 R16 R13 ; R16 := R16[R13]
	80	[4149]	GETTABLE 	R17 R7 R13 ; R17 := R7[R13]
	81	[4149]	GETTABLE 	R18 R0 K15 ; R18 := R0["buffs"]
	82	[4149]	GETTABLE 	R18 R18 R13 ; R18 := R18[R13]
	83	[4149]	GETTABLE 	R19 R6 R13 ; R19 := R6[R13]
	84	[4149]	MOVE     	R20 R5 ; R20 := R5
	85	[4149]	MOVE     	R21 R4 ; R21 := R4
	86	[4149]	CALL     	R15 7 2 ; R15 := R15(R16,R17,R18,R19,R20,R21)
	87	[4149]	SETTABLE 	R14 K16 R15 ; R14["Value"] := R15
	88	[4148]	FORLOOP  	R10 75 ; R10 += R12; if R10 <= R11 then begin PC := 75; R13 := R10 end
	89	[4150]	JMP      	121 ; PC := 121
	90	[4152]	GETUPVAL 	R14 U1 ; R14 := U1
	91	[4152]	GETTABLE 	R14 R14 K12 ; R14 := R14[0xd6ee7507]
	92	[4152]	MOVE     	R15 R1 ; R15 := R1
	93	[4152]	CALL     	R14 2 2 ; R14 := R14(R15)
	94	[4152]	MOVE     	R2 R14 ; R2 := R14
	95	[4153]	GETGLOBAL	R14 K2 ; R14 := mFuseElement2
	96	[4153]	GETTABLE 	R3 R14 K4 ; R3 := R14["Upgrade"]
	97	[4154]	LOADK    	R14 := 1.000000
	98	[4154]	GETGLOBAL	R15 K13 ; R15 := 0x5bced4c4
	99	[4154]	GETTABLE 	R15 R15 K14 ; R15 := R15[0xb62ecfe0]
	100	[4154]	GETTABLE 	R16 R0 K15 ; R16 := R0["buffs"]
	101	[4154]	LEN      	R16 R16 ; R16 := # R16
	102	[4154]	GETTABLE 	R17 R1 K15 ; R17 := R1["buffs"]
	103	[4154]	LEN      	R17 R17 ; R17 := # R17
	104	[4154]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	105	[4154]	LOADK    	R16 := 1.000000
	106	[4154]	FORPREP  	R14 120 ; R14 -= R16; PC := 120
	107	[4155]	GETTABLE 	R18 R2 K15 ; R18 := R2["buffs"]
	108	[4155]	GETTABLE 	R18 R18 R17 ; R18 := R18[R17]
	109	[4155]	GETUPVAL 	R19 U2 ; R19 := U2
	110	[4155]	GETTABLE 	R20 R0 K15 ; R20 := R0["buffs"]
	111	[4155]	GETTABLE 	R20 R20 R17 ; R20 := R20[R17]
	112	[4155]	GETTABLE 	R21 R6 R17 ; R21 := R6[R17]
	113	[4155]	GETTABLE 	R22 R1 K15 ; R22 := R1["buffs"]
	114	[4155]	GETTABLE 	R22 R22 R17 ; R22 := R22[R17]
	115	[4155]	GETTABLE 	R23 R7 R17 ; R23 := R7[R17]
	116	[4155]	MOVE     	R24 R4 ; R24 := R4
	117	[4155]	MOVE     	R25 R5 ; R25 := R5
	118	[4155]	CALL     	R19 7 2 ; R19 := R19(R20,R21,R22,R23,R24,R25)
	119	[4155]	SETTABLE 	R18 K16 R19 ; R18["Value"] := R19
	120	[4154]	FORLOOP  	R14 107 ; R14 += R16; if R14 <= R15 then begin PC := 107; R17 := R14 end
	121	[4159]	GETTABLE 	R18 R0 K17 ; R18 := R0["SubroutineIndex"]
	122	[4160]	GETTABLE 	R19 R1 K17 ; R19 := R1["SubroutineIndex"]
	123	[4162]	GETGLOBAL	R20 K10 ; R20 := mFuseElement3
	124	[4162]	GETTABLE 	R20 R20 K18 ; R20 := R20["SubA"]
	125	[4162]	EQ       	1 R20 K8 ; if R20 == nil then PC := 135
	126	[4162]	JMP      	135 ; PC := 135
	127	[4163]	GETGLOBAL	R20 K10 ; R20 := mFuseElement3
	128	[4163]	GETTABLE 	R20 R20 K18 ; R20 := R20["SubA"]
	129	[4163]	TEST     	R20 0 ; if not R20 then PC := 133
	130	[4163]	JMP      	133 ; PC := 133
	131	[4164]	SETTABLE 	R2 K17 R18 ; R2["SubroutineIndex"] := R18
	132	[4164]	JMP      	142 ; PC := 142
	133	[4166]	SETTABLE 	R2 K17 R19 ; R2["SubroutineIndex"] := R19
	134	[4167]	JMP      	142 ; PC := 142
	135	[4168]	EQ       	1 R18 K8 ; if R18 == nil then PC := 139
	136	[4168]	JMP      	139 ; PC := 139
	137	[4169]	SETTABLE 	R2 K17 R18 ; R2["SubroutineIndex"] := R18
	138	[4169]	JMP      	142 ; PC := 142
	139	[4170]	EQ       	1 R19 K8 ; if R19 == nil then PC := 142
	140	[4170]	JMP      	142 ; PC := 142
	141	[4171]	SETTABLE 	R2 K17 R19 ; R2["SubroutineIndex"] := R19
	142	[4174]	GETGLOBAL	R20 K19 ; R20 := cjson
	143	[4174]	GETTABLE 	R20 R20 K20 ; R20 := R20[0xb139d7bc]
	144	[4174]	MOVE     	R21 R2 ; R21 := R2
	145	[4174]	CALL     	R20 2 2 ; R20 := R20(R21)
	146	[4175]	SELF     	R21 R3 K21 ; R22 := R3; R21 := R3[0xce30fcd8]
	147	[4175]	MOVE     	R23 R20 ; R23 := R20
	148	[4175]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	149	[4176]	NEWTABLE 	R22 0 1 ; R22 := {}
	150	[4176]	SETTABLE 	R22 K22 K23 ; R22["mDesc"] := ""
	151	[4177]	GETUPVAL 	R23 U3 ; R23 := U3
	152	[4177]	GETTABLE 	R23 R23 K24 ; R23 := R23[0x41223b3a]
	153	[4177]	MOVE     	R24 R22 ; R24 := R22
	154	[4177]	MOVE     	R25 R21 ; R25 := R21
	155	[4177]	GETGLOBAL	R26 K25 ; R26 := 0xae91e43b
	156	[4177]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	157	[4179]	GETTABLE 	R23 R22 K22 ; R23 := R22["mDesc"]
	158	[4179]	RETURN   	R23 2 ; return R23 
	159	[4180]	RETURN   	R0 1 ; return 

function #117 <?:4182,4240> (145 instructions, 580 bytes at 000002112D12CB10)
0 params, 22 slots, 5 upvalues, 0 locals, 40 constants, 1 function
	1	[4183]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4183]	CALL     	R0 1 2 ; R0 := R0()
	3	[4184]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	4	[4184]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xb62ecfe0]
	5	[4184]	GETGLOBAL	R2 K2 ; R2 := mFuseElement1
	6	[4184]	GETTABLE 	R2 R2 K3 ; R2 := R2["Tier"]
	7	[4184]	GETGLOBAL	R3 K4 ; R3 := mFuseElement2
	8	[4184]	GETTABLE 	R3 R3 K3 ; R3 := R3["Tier"]
	9	[4184]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[4185]	GETGLOBAL	R2 K2 ; R2 := mFuseElement1
	11	[4185]	GETTABLE 	R2 R2 K5 ; R2 := R2["Stats"]
	12	[4185]	EQ       	0 R0 R2 ; if R0 ~= R2 then PC := 18
	13	[4185]	JMP      	18 ; PC := 18
	14	[4185]	GETGLOBAL	R2 K2 ; R2 := mFuseElement1
	15	[4185]	GETTABLE 	R2 R2 K3 ; R2 := R2["Tier"]
	16	[4185]	EQ       	1 R2 R1 ; if R2 == R1 then PC := 26
	17	[4185]	JMP      	26 ; PC := 26
	18	[4185]	GETGLOBAL	R2 K4 ; R2 := mFuseElement2
	19	[4185]	GETTABLE 	R2 R2 K5 ; R2 := R2["Stats"]
	20	[4185]	EQ       	0 R0 R2 ; if R0 ~= R2 then PC := 39
	21	[4185]	JMP      	39 ; PC := 39
	22	[4185]	GETGLOBAL	R2 K4 ; R2 := mFuseElement2
	23	[4185]	GETTABLE 	R2 R2 K3 ; R2 := R2["Tier"]
	24	[4185]	EQ       	0 R2 R1 ; if R2 ~= R1 then PC := 39
	25	[4185]	JMP      	39 ; PC := 39
	26	[4186]	GETUPVAL 	R2 U1 ; R2 := U1
	27	[4186]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xa53f5e12]
	28	[4186]	GETGLOBAL	R3 K7 ; R3 := 0x603636ad
	29	[4186]	LOADK    	R4 K8 ; R4 := "/Lotus/Language/Railjack/FuseCannotImprove"
	30	[4186]	NEWTABLE 	R5 0 1 ; R5 := {}
	31	[4186]	GETGLOBAL	R6 K10 ; R6 := mFuseElement3
	32	[4186]	GETTABLE 	R6 R6 K11 ; R6 := R6["Name"]
	33	[4186]	SETTABLE 	R5 K9 R6 ; R5["ITEM"] := R6
	34	[4186]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	35	[4186]	CALL     	R2 0 1 ; R2(R3,...)
	36	[4187]	GETUPVAL 	R2 U2 ; R2 := U2
	37	[4187]	CALL     	R2 1 1 ; R2()
	38	[4188]	RETURN   	R0 1 ; return 
	39	[4191]	LOADK    	R2 K12 ; R2 := "<font color=\"#FloatingContentHighlight\">"
	40	[4191]	GETGLOBAL	R3 K10 ; R3 := mFuseElement3
	41	[4191]	GETTABLE 	R3 R3 K13 ; R3 := R3["Cost"]
	42	[4191]	LOADK    	R4 K14 ; R4 := "</font>"
	43	[4191]	CONCAT   	R2 R2 R4 ; R2 := R2 .. R3 .. R4
	44	[4193]	GETUPVAL 	R3 U3 ; R3 := U3
	45	[4193]	GETGLOBAL	R4 K2 ; R4 := mFuseElement1
	46	[4193]	GETTABLE 	R4 R4 K5 ; R4 := R4["Stats"]
	47	[4193]	CALL     	R3 2 3 ; R3,R4 := R3(R4)
	48	[4194]	EQ       	1 R3 K15 ; if R3 == "" then PC := 54
	49	[4194]	JMP      	54 ; PC := 54
	50	[4195]	LOADK    	R5 K16 ; R5 := "<br><font face=\"Roboto Regular\" color=\"#Content\">"
	51	[4195]	MOVE     	R6 R3 ; R6 := R3
	52	[4195]	LOADK    	R7 K14 ; R7 := "</font>"
	53	[4195]	CONCAT   	R3 R5 R7 ; R3 := R5 .. R6 .. R7
	54	[4198]	GETUPVAL 	R5 U3 ; R5 := U3
	55	[4198]	GETGLOBAL	R6 K4 ; R6 := mFuseElement2
	56	[4198]	GETTABLE 	R6 R6 K5 ; R6 := R6["Stats"]
	57	[4198]	CALL     	R5 2 3 ; R5,R6 := R5(R6)
	58	[4199]	EQ       	1 R5 K15 ; if R5 == "" then PC := 64
	59	[4199]	JMP      	64 ; PC := 64
	60	[4200]	LOADK    	R7 K16 ; R7 := "<br><font face=\"Roboto Regular\" color=\"#Content\">"
	61	[4200]	MOVE     	R8 R5 ; R8 := R5
	62	[4200]	LOADK    	R9 K14 ; R9 := "</font>"
	63	[4200]	CONCAT   	R5 R7 R9 ; R5 := R7 .. R8 .. R9
	64	[4203]	LOADK    	R7 K16 ; R7 := "<br><font face=\"Roboto Regular\" color=\"#Content\">"
	65	[4204]	GETUPVAL 	R8 U3 ; R8 := U3
	66	[4204]	MOVE     	R9 R0 ; R9 := R0
	67	[4211]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	68	[4211]	MOVE     	R0 R4 ; R0 := R4
	69	[4211]	MOVE     	R0 R6 ; R0 := R6
	70	[4204]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	71	[4212]	LOADK    	R9 K14 ; R9 := "</font>"
	72	[4212]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	73	[4214]	GETGLOBAL	R8 K17 ; R8 := 0xae91e43b
	74	[4214]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0x42b04007]
	75	[4214]	LOADK    	R10 K19 ; R10 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponWord"
	76	[4214]	OP_LOADBOOL	R11 0 0 ; R11 := false
	77	[4214]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	78	[4215]	GETGLOBAL	R9 K17 ; R9 := 0xae91e43b
	79	[4215]	SELF     	R9 R9 K18 ; R10 := R9; R9 := R9[0x42b04007]
	80	[4215]	LOADK    	R11 K20 ; R11 := "/Lotus/Language/Railjack/ConfirmFuseItem"
	81	[4215]	OP_LOADBOOL	R12 1 0 ; R12 := true
	82	[4215]	NEWTABLE 	R13 0 10 ; R13 := {}
	83	[4216]	GETGLOBAL	R14 K2 ; R14 := mFuseElement1
	84	[4216]	GETTABLE 	R14 R14 K11 ; R14 := R14["Name"]
	85	[4216]	SETTABLE 	R13 K21 R14 ; R13["TYPE_ONE"] := R14
	86	[4217]	GETGLOBAL	R14 K4 ; R14 := mFuseElement2
	87	[4217]	GETTABLE 	R14 R14 K11 ; R14 := R14["Name"]
	88	[4217]	SETTABLE 	R13 K22 R14 ; R13["TYPE_TWO"] := R14
	89	[4218]	GETGLOBAL	R14 K10 ; R14 := mFuseElement3
	90	[4218]	GETTABLE 	R14 R14 K11 ; R14 := R14["Name"]
	91	[4218]	SETTABLE 	R13 K23 R14 ; R13["TYPE_THREE"] := R14
	92	[4219]	SETTABLE 	R13 K24 R3 ; R13["STATS_ONE"] := R3
	93	[4220]	SETTABLE 	R13 K25 R5 ; R13["STATS_TWO"] := R5
	94	[4221]	SETTABLE 	R13 K26 R7 ; R13["STATS_THREE"] := R7
	95	[4222]	SETTABLE 	R13 K27 R2 ; R13["COST"] := R2
	96	[4223]	SETTABLE 	R13 K28 R8 ; R13["WORD"] := R8
	97	[4224]	SETTABLE 	R13 K29 K30 ; R13["HIGHLIGHT"] := "<font color=\"#FloatingContentHighlight\"><b>"
	98	[4225]	SETTABLE 	R13 K31 K32 ; R13["HIGHLIGHT_END"] := "</b></font>"
	99	[4215]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	100	[4227]	GETGLOBAL	R10 K17 ; R10 := 0xae91e43b
	101	[4227]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0x42b04007]
	102	[4227]	LOADK    	R12 K33 ; R12 := "/Lotus/Language/Railjack/ConfirmFuseItemConsole1"
	103	[4227]	OP_LOADBOOL	R13 1 0 ; R13 := true
	104	[4227]	NEWTABLE 	R14 0 7 ; R14 := {}
	105	[4228]	GETGLOBAL	R15 K2 ; R15 := mFuseElement1
	106	[4228]	GETTABLE 	R15 R15 K11 ; R15 := R15["Name"]
	107	[4228]	SETTABLE 	R14 K21 R15 ; R14["TYPE_ONE"] := R15
	108	[4229]	GETGLOBAL	R15 K4 ; R15 := mFuseElement2
	109	[4229]	GETTABLE 	R15 R15 K11 ; R15 := R15["Name"]
	110	[4229]	SETTABLE 	R14 K22 R15 ; R14["TYPE_TWO"] := R15
	111	[4230]	GETGLOBAL	R15 K10 ; R15 := mFuseElement3
	112	[4230]	GETTABLE 	R15 R15 K11 ; R15 := R15["Name"]
	113	[4230]	SETTABLE 	R14 K23 R15 ; R14["TYPE_THREE"] := R15
	114	[4231]	SETTABLE 	R14 K24 R3 ; R14["STATS_ONE"] := R3
	115	[4232]	SETTABLE 	R14 K25 R5 ; R14["STATS_TWO"] := R5
	116	[4233]	SETTABLE 	R14 K26 R7 ; R14["STATS_THREE"] := R7
	117	[4234]	SETTABLE 	R14 K27 R2 ; R14["COST"] := R2
	118	[4227]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	119	[4236]	LOADK    	R11 K34 ; R11 := "<font color=\"#FloatingContent\">"
	120	[4236]	MOVE     	R12 R10 ; R12 := R10
	121	[4236]	LOADK    	R13 K14 ; R13 := "</font>"
	122	[4236]	CONCAT   	R10 R11 R13 ; R10 := R11 .. R12 .. R13
	123	[4237]	GETGLOBAL	R11 K17 ; R11 := 0xae91e43b
	124	[4237]	SELF     	R11 R11 K18 ; R12 := R11; R11 := R11[0x42b04007]
	125	[4237]	LOADK    	R13 K35 ; R13 := "/Lotus/Language/Railjack/ConfirmFuseItemConsole2"
	126	[4237]	OP_LOADBOOL	R14 1 0 ; R14 := true
	127	[4237]	NEWTABLE 	R15 0 1 ; R15 := {}
	128	[4237]	SETTABLE 	R15 K28 R8 ; R15["WORD"] := R8
	129	[4237]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	130	[4239]	GETUPVAL 	R12 U4 ; R12 := U4
	131	[4239]	GETTABLE 	R12 R12 K36 ; R12 := R12[0x78a7195b]
	132	[4239]	GETGLOBAL	R13 K17 ; R13 := 0xae91e43b
	133	[4239]	GETGLOBAL	R14 K37 ; R14 := 0x7f5022cf
	134	[4239]	GETTABLE 	R14 R14 K38 ; R14 := R14[0x04981ab3]
	135	[4239]	MOVE     	R15 R8 ; R15 := R8
	136	[4239]	CALL     	R14 2 2 ; R14 := R14(R15)
	137	[4239]	MOVE     	R15 R9 ; R15 := R9
	138	[4239]	MOVE     	R16 R10 ; R16 := R10
	139	[4239]	MOVE     	R17 R11 ; R17 := R11
	140	[4239]	LOADK    	R18 K39 ; R18 := "ConfirmFuseItem"
	141	[4239]	LOADNIL  	R19 R19 ; R19 := nil
	142	[4239]	OP_LOADBOOL	R20 1 0 ; R20 := true
	143	[4239]	LOADK    	R21 := 700.000000
	144	[4239]	CALL     	R12 10 1 ; R12(R13,R14,R15,R16,R17,R18,R19,R20,R21)
	145	[4240]	RETURN   	R0 1 ; return 

function #118 <?:4242,4252> (17 instructions, 68 bytes at 000002112D12D630)
1 param, 2 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[4243]	EQ       	0 R0 K1 ; if R0 ~= 4.000000 then PC := 8
	2	[4243]	JMP      	8 ; PC := 8
	3	[4244]	GETGLOBAL	R1 K2 ; R1 := mFuseElement3
	4	[4244]	SETTABLE 	R1 K3 K4 ; R1["SubA"] := true
	5	[4245]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4245]	CALL     	R1 1 1 ; R1()
	7	[4245]	JMP      	17 ; PC := 17
	8	[4246]	EQ       	0 R0 K5 ; if R0 ~= 6.000000 then PC := 15
	9	[4246]	JMP      	15 ; PC := 15
	10	[4247]	GETGLOBAL	R1 K2 ; R1 := mFuseElement3
	11	[4247]	SETTABLE 	R1 K3 K6 ; R1["SubA"] := false
	12	[4248]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4248]	CALL     	R1 1 1 ; R1()
	14	[4248]	JMP      	17 ; PC := 17
	15	[4250]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[4250]	CALL     	R1 1 1 ; R1()
	17	[4252]	RETURN   	R0 1 ; return 

function #119 <?:4254,4264> (21 instructions, 84 bytes at 000002112D12D800)
2 params, 10 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[4255]	GETTABLE 	R2 R0 K0 ; R2 := R0["buffs"]
	2	[4256]	SETTABLE 	R0 K0 K1 ; R0["buffs"] := nil
	3	[4257]	GETGLOBAL	R3 K2 ; R3 := cjson
	4	[4257]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xb139d7bc]
	5	[4257]	MOVE     	R4 R0 ; R4 := R0
	6	[4257]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[4258]	SETTABLE 	R0 K0 R2 ; R0["buffs"] := R2
	8	[4260]	SELF     	R4 R1 K4 ; R5 := R1; R4 := R1[0xce30fcd8]
	9	[4260]	MOVE     	R6 R3 ; R6 := R3
	10	[4260]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	11	[4261]	NEWTABLE 	R5 0 1 ; R5 := {}
	12	[4261]	SETTABLE 	R5 K5 K6 ; R5["mDesc"] := ""
	13	[4262]	GETUPVAL 	R6 U0 ; R6 := U0
	14	[4262]	GETTABLE 	R6 R6 K7 ; R6 := R6[0x41223b3a]
	15	[4262]	MOVE     	R7 R5 ; R7 := R5
	16	[4262]	MOVE     	R8 R4 ; R8 := R4
	17	[4262]	GETGLOBAL	R9 K8 ; R9 := 0xae91e43b
	18	[4262]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	19	[4263]	GETTABLE 	R6 R5 K5 ; R6 := R5["mDesc"]
	20	[4263]	RETURN   	R6 2 ; return R6 
	21	[4264]	RETURN   	R0 1 ; return 

function #120 <?:4266,4275> (34 instructions, 136 bytes at 000002112D12DA10)
0 params, 7 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[4267]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[4267]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xe27b35bb]
	3	[4267]	CALL     	R0 1 2 ; R0 := R0()
	4	[4268]	SETTABLE 	R0 K2 K3 ; R0["dialogType"] := 5.000000
	5	[4269]	GETGLOBAL	R1 K5 ; R1 := 0x603636ad
	6	[4269]	LOADK    	R2 K6 ; R2 := "/Lotus/Language/Railjack/ConfirmFuseStat"
	7	[4269]	NEWTABLE 	R3 0 2 ; R3 := {}
	8	[4269]	GETUPVAL 	R4 U0 ; R4 := U0
	9	[4269]	GETGLOBAL	R5 K8 ; R5 := mFuseElement1
	10	[4269]	GETTABLE 	R5 R5 K9 ; R5 := R5["Data"]
	11	[4269]	GETGLOBAL	R6 K8 ; R6 := mFuseElement1
	12	[4269]	GETTABLE 	R6 R6 K10 ; R6 := R6["Upgrade"]
	13	[4269]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	14	[4269]	SETTABLE 	R3 K7 R4 ; R3["STATS_ONE"] := R4
	15	[4269]	GETUPVAL 	R4 U0 ; R4 := U0
	16	[4269]	GETGLOBAL	R5 K12 ; R5 := mFuseElement2
	17	[4269]	GETTABLE 	R5 R5 K9 ; R5 := R5["Data"]
	18	[4269]	GETGLOBAL	R6 K12 ; R6 := mFuseElement2
	19	[4269]	GETTABLE 	R6 R6 K10 ; R6 := R6["Upgrade"]
	20	[4269]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	21	[4269]	SETTABLE 	R3 K11 R4 ; R3["STATS_TWO"] := R4
	22	[4269]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	23	[4269]	SETTABLE 	R0 K4 R1 ; R0["locString"] := R1
	24	[4270]	SETTABLE 	R0 K13 K14 ; R0["firstString"] := "/Lotus/Language/Railjack/ConfirmFuseStat1"
	25	[4271]	SETTABLE 	R0 K15 K16 ; R0["secondString"] := "/Lotus/Language/Railjack/ConfirmFuseStat2"
	26	[4272]	SETTABLE 	R0 K17 K18 ; R0["thirdString"] := "/Menu/Confirm_Item_Cancel"
	27	[4273]	SELF     	R1 R0 K19 ; R2 := R0; R1 := R0[0xe6ccc5b9]
	28	[4273]	LOADK    	R3 K20 ; R3 := "FusePreview"
	29	[4273]	CALL     	R1 3 1 ; R1(R2,R3)
	30	[4274]	GETUPVAL 	R1 U1 ; R1 := U1
	31	[4274]	GETTABLE 	R1 R1 K21 ; R1 := R1[0xe99b84e7]
	32	[4274]	MOVE     	R2 R0 ; R2 := R0
	33	[4274]	CALL     	R1 2 1 ; R1(R2)
	34	[4275]	RETURN   	R0 1 ; return 

function #121 <?:4277,4327> (143 instructions, 572 bytes at 000002112D12DD50)
1 param, 18 slots, 1 upvalue, 0 locals, 26 constants, 0 functions
	1	[4280]	GETTABLE 	R3 R0 K0 ; R3 := R0["mUpgradeType"]
	2	[4281]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	3	[4281]	MOVE     	R5 R3 ; R5 := R3
	4	[4281]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[4281]	TEST     	R4 0 ; if not R4 then PC := 12
	6	[4281]	JMP      	12 ; PC := 12
	7	[4281]	GETTABLE 	R4 R0 K2 ; R4 := R0["Item"]
	8	[4281]	EQ       	1 R4 K3 ; if R4 == nil then PC := 12
	9	[4281]	JMP      	12 ; PC := 12
	10	[4282]	GETTABLE 	R4 R0 K2 ; R4 := R0["Item"]
	11	[4282]	GETTABLE 	R3 R4 K0 ; R3 := R4["mUpgradeType"]
	12	[4284]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	13	[4284]	MOVE     	R5 R3 ; R5 := R3
	14	[4284]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4284]	TEST     	R4 0 ; if not R4 then PC := 27
	16	[4284]	JMP      	27 ; PC := 27
	17	[4284]	GETTABLE 	R4 R0 K4 ; R4 := R0["RawItem"]
	18	[4284]	EQ       	1 R4 K3 ; if R4 == nil then PC := 27
	19	[4284]	JMP      	27 ; PC := 27
	20	[4284]	GETTABLE 	R4 R0 K4 ; R4 := R0["RawItem"]
	21	[4284]	GETTABLE 	R4 R4 K2 ; R4 := R4["Item"]
	22	[4284]	EQ       	1 R4 K3 ; if R4 == nil then PC := 27
	23	[4284]	JMP      	27 ; PC := 27
	24	[4285]	GETTABLE 	R4 R0 K4 ; R4 := R0["RawItem"]
	25	[4285]	GETTABLE 	R4 R4 K2 ; R4 := R4["Item"]
	26	[4285]	GETTABLE 	R3 R4 K0 ; R3 := R4["mUpgradeType"]
	27	[4287]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	28	[4287]	MOVE     	R5 R3 ; R5 := R3
	29	[4287]	CALL     	R4 2 2 ; R4 := R4(R5)
	30	[4287]	TEST     	R4 0 ; if not R4 then PC := 37
	31	[4287]	JMP      	37 ; PC := 37
	32	[4288]	GETGLOBAL	R4 K5 ; R4 := 0xb009bbc6
	33	[4288]	GETTABLE 	R5 R0 K6 ; R5 := R0["ItemType"]
	34	[4288]	CALL     	R4 2 2 ; R4 := R4(R5)
	35	[4288]	MOVE     	R1 R4 ; R1 := R4
	36	[4288]	JMP      	51 ; PC := 51
	37	[4290]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	38	[4290]	MOVE     	R5 R3 ; R5 := R3
	39	[4290]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[4290]	TEST     	R4 1 ; if R4 then PC := 51
	41	[4290]	JMP      	51 ; PC := 51
	42	[4291]	GETGLOBAL	R4 K7 ; R4 := 0x6c97a788
	43	[4291]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x1aba4d9e]
	44	[4291]	CALL     	R4 1 2 ; R4 := R4()
	45	[4291]	MOVE     	R2 R4 ; R2 := R4
	46	[4292]	SETTABLE 	R2 K9 R3 ; R2["mItemType"] := R3
	47	[4293]	GETGLOBAL	R4 K5 ; R4 := 0xb009bbc6
	48	[4293]	GETTABLE 	R5 R2 K10 ; R5 := R2["mInstance"]
	49	[4293]	CALL     	R4 2 2 ; R4 := R4(R5)
	50	[4293]	MOVE     	R1 R4 ; R1 := R4
	51	[4297]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	52	[4297]	MOVE     	R5 R1 ; R5 := R1
	53	[4297]	CALL     	R4 2 2 ; R4 := R4(R5)
	54	[4297]	TEST     	R4 1 ; if R4 then PC := 137
	55	[4297]	JMP      	137 ; PC := 137
	56	[4297]	SELF     	R4 R1 K11 ; R5 := R1; R4 := R1[0xf2deaf69]
	57	[4297]	GETGLOBAL	R6 K12 ; R6 := gLotusWeaponUpgradeBaseType
	58	[4297]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	59	[4297]	TEST     	R4 0 ; if not R4 then PC := 137
	60	[4297]	JMP      	137 ; PC := 137
	61	[4298]	GETTABLE 	R4 R0 K13 ; R4 := R0["mUpgradeFingerprint"]
	62	[4299]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 81
	63	[4299]	JMP      	81 ; PC := 81
	64	[4300]	GETTABLE 	R5 R0 K2 ; R5 := R0["Item"]
	65	[4300]	EQ       	1 R5 K3 ; if R5 == nil then PC := 69
	66	[4300]	JMP      	69 ; PC := 69
	67	[4301]	GETTABLE 	R5 R0 K2 ; R5 := R0["Item"]
	68	[4301]	GETTABLE 	R4 R5 K13 ; R4 := R5["mUpgradeFingerprint"]
	69	[4303]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 81
	70	[4303]	JMP      	81 ; PC := 81
	71	[4303]	GETTABLE 	R5 R0 K4 ; R5 := R0["RawItem"]
	72	[4303]	EQ       	1 R5 K3 ; if R5 == nil then PC := 81
	73	[4303]	JMP      	81 ; PC := 81
	74	[4303]	GETTABLE 	R5 R0 K4 ; R5 := R0["RawItem"]
	75	[4303]	GETTABLE 	R5 R5 K2 ; R5 := R5["Item"]
	76	[4303]	EQ       	1 R5 K3 ; if R5 == nil then PC := 81
	77	[4303]	JMP      	81 ; PC := 81
	78	[4304]	GETTABLE 	R5 R0 K4 ; R5 := R0["RawItem"]
	79	[4304]	GETTABLE 	R5 R5 K2 ; R5 := R5["Item"]
	80	[4304]	GETTABLE 	R4 R5 K13 ; R4 := R5["mUpgradeFingerprint"]
	81	[4308]	SELF     	R5 R1 K14 ; R6 := R1; R5 := R1[0xce30fcd8]
	82	[4308]	MOVE     	R7 R4 ; R7 := R4
	83	[4308]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	84	[4309]	NEWTABLE 	R6 0 1 ; R6 := {}
	85	[4309]	SETTABLE 	R6 K15 K16 ; R6["mDesc"] := ""
	86	[4310]	GETUPVAL 	R7 U0 ; R7 := U0
	87	[4310]	GETTABLE 	R7 R7 K17 ; R7 := R7[0x41223b3a]
	88	[4310]	MOVE     	R8 R6 ; R8 := R6
	89	[4310]	MOVE     	R9 R5 ; R9 := R5
	90	[4310]	GETGLOBAL	R10 K18 ; R10 := 0xae91e43b
	91	[4310]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	92	[4312]	GETGLOBAL	R7 K19 ; R7 := cjson
	93	[4312]	GETTABLE 	R7 R7 K20 ; R7 := R7[0x7ab914d8]
	94	[4312]	MOVE     	R8 R4 ; R8 := R4
	95	[4312]	CALL     	R7 2 2 ; R7 := R7(R8)
	96	[4314]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	97	[4314]	MOVE     	R9 R7 ; R9 := R7
	98	[4314]	CALL     	R8 2 2 ; R8 := R8(R9)
	99	[4314]	TEST     	R8 1 ; if R8 then PC := 132
	100	[4314]	JMP      	132 ; PC := 132
	101	[4314]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	102	[4314]	GETTABLE 	R9 R7 K21 ; R9 := R7["buffs"]
	103	[4314]	CALL     	R8 2 2 ; R8 := R8(R9)
	104	[4314]	TEST     	R8 1 ; if R8 then PC := 132
	105	[4314]	JMP      	132 ; PC := 132
	106	[4315]	NEWTABLE 	R8 0 0 ; R8 := {}
	107	[4316]	GETGLOBAL	R9 K22 ; R9 := 0xc8802016
	108	[4316]	GETTABLE 	R10 R7 K21 ; R10 := R7["buffs"]
	109	[4316]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	110	[4316]	JMP      	129 ; PC := 129
	111	[4317]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	112	[4317]	MOVE     	R15 R13 ; R15 := R13
	113	[4317]	CALL     	R14 2 2 ; R14 := R14(R15)
	114	[4317]	TEST     	R14 1 ; if R14 then PC := 129
	115	[4317]	JMP      	129 ; PC := 129
	116	[4317]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	117	[4317]	GETTABLE 	R15 R13 K23 ; R15 := R13["Tag"]
	118	[4317]	CALL     	R14 2 2 ; R14 := R14(R15)
	119	[4317]	TEST     	R14 1 ; if R14 then PC := 129
	120	[4317]	JMP      	129 ; PC := 129
	121	[4317]	GETTABLE 	R14 R13 K23 ; R14 := R13["Tag"]
	122	[4317]	EQ       	1 R14 K16 ; if R14 == "" then PC := 129
	123	[4317]	JMP      	129 ; PC := 129
	124	[4318]	GETGLOBAL	R14 K24 ; R14 := 0x33bdd652
	125	[4318]	GETTABLE 	R14 R14 K25 ; R14 := R14[0x23d5322f]
	126	[4318]	MOVE     	R15 R8 ; R15 := R8
	127	[4318]	MOVE     	R16 R13 ; R16 := R13
	128	[4318]	CALL     	R14 3 1 ; R14(R15,R16)
	129	[4316]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 111; R11 := R12 end
	130	[4319]	JMP      	111 ; PC := 111
	131	[4321]	SETTABLE 	R7 K21 R8 ; R7["buffs"] := R8
	132	[4324]	GETTABLE 	R14 R6 K15 ; R14 := R6["mDesc"]
	133	[4324]	MOVE     	R15 R7 ; R15 := R7
	134	[4324]	MOVE     	R16 R1 ; R16 := R1
	135	[4324]	MOVE     	R17 R2 ; R17 := R2
	136	[4324]	RETURN   	R14 5 ; return R14, R15, R16, R17 
	137	[4326]	LOADK    	R14 K16 ; R14 := ""
	138	[4326]	NEWTABLE 	R15 0 1 ; R15 := {}
	139	[4326]	NEWTABLE 	R16 0 0 ; R16 := {}
	140	[4326]	SETTABLE 	R15 K21 R16 ; R15["buffs"] := R16
	141	[4326]	LOADNIL  	R16 R17 ; R16 := R17 := nil
	142	[4326]	RETURN   	R14 5 ; return R14, R15, R16, R17 
	143	[4327]	RETURN   	R0 1 ; return 

function #122 <?:4329,4386> (111 instructions, 444 bytes at 000002112D12E430)
2 params, 19 slots, 5 upvalues, 0 locals, 32 constants, 0 functions
	1	[4330]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4330]	MOVE     	R3 R0 ; R3 := R0
	3	[4330]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4330]	TEST     	R2 0 ; if not R2 then PC := 13
	5	[4330]	JMP      	13 ; PC := 13
	6	[4331]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[4331]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xa53f5e12]
	8	[4331]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Railjack/InvalidFusionElement"
	9	[4331]	CALL     	R2 2 1 ; R2(R3)
	10	[4332]	GETUPVAL 	R2 U1 ; R2 := U1
	11	[4332]	CALL     	R2 1 1 ; R2()
	12	[4333]	RETURN   	R0 1 ; return 
	13	[4336]	GETTABLE 	R2 R0 K3 ; R2 := R0["ItemType"]
	14	[4337]	GETTABLE 	R3 R0 K4 ; R3 := R0["mPurchasedInfo"]
	15	[4337]	GETTABLE 	R3 R3 K5 ; R3 := R3["UID"]
	16	[4338]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	17	[4338]	MOVE     	R5 R2 ; R5 := R2
	18	[4338]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[4338]	TEST     	R4 1 ; if R4 then PC := 26
	20	[4338]	JMP      	26 ; PC := 26
	21	[4338]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	22	[4338]	MOVE     	R5 R3 ; R5 := R3
	23	[4338]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[4338]	TEST     	R4 0 ; if not R4 then PC := 33
	25	[4338]	JMP      	33 ; PC := 33
	26	[4339]	GETUPVAL 	R4 U0 ; R4 := U0
	27	[4339]	GETTABLE 	R4 R4 K1 ; R4 := R4[0xa53f5e12]
	28	[4339]	LOADK    	R5 K6 ; R5 := "/Lotus/Language/Railjack/InvalidFusionType"
	29	[4339]	CALL     	R4 2 1 ; R4(R5)
	30	[4340]	GETUPVAL 	R4 U1 ; R4 := U1
	31	[4340]	CALL     	R4 1 1 ; R4()
	32	[4341]	RETURN   	R0 1 ; return 
	33	[4344]	SELF     	R4 R2 K7 ; R5 := R2; R4 := R2[0xe223e2b1]
	34	[4344]	CALL     	R4 2 2 ; R4 := R4(R5)
	35	[4345]	OP_LOADBOOL	R5 0 0 ; R5 := false
	36	[4346]	LOADK    	R6 := 1.000000
	37	[4346]	GETUPVAL 	R7 U2 ; R7 := U2
	38	[4346]	LEN      	R7 R7 ; R7 := # R7
	39	[4346]	LOADK    	R8 := 1.000000
	40	[4346]	FORPREP  	R6 51 ; R6 -= R8; PC := 51
	41	[4347]	GETGLOBAL	R10 K8 ; R10 := 0x7f5022cf
	42	[4347]	GETTABLE 	R10 R10 K9 ; R10 := R10[0xa5c556b9]
	43	[4347]	MOVE     	R11 R4 ; R11 := R4
	44	[4347]	GETUPVAL 	R12 U2 ; R12 := U2
	45	[4347]	GETTABLE 	R12 R12 R9 ; R12 := R12[R9]
	46	[4347]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	47	[4347]	EQ       	1 R10 K10 ; if R10 == nil then PC := 51
	48	[4347]	JMP      	51 ; PC := 51
	49	[4348]	OP_LOADBOOL	R5 1 0 ; R5 := true
	50	[4349]	JMP      	52 ; PC := 52
	51	[4346]	FORLOOP  	R6 41 ; R6 += R8; if R6 <= R7 then begin PC := 41; R9 := R6 end
	52	[4352]	TEST     	R5 1 ; if R5 then PC := 61
	53	[4352]	JMP      	61 ; PC := 61
	54	[4353]	GETUPVAL 	R10 U0 ; R10 := U0
	55	[4353]	GETTABLE 	R10 R10 K1 ; R10 := R10[0xa53f5e12]
	56	[4353]	LOADK    	R11 K11 ; R11 := "/Lotus/Language/Railjack/InvalidFusionManufacturer"
	57	[4353]	CALL     	R10 2 1 ; R10(R11)
	58	[4354]	GETUPVAL 	R10 U1 ; R10 := U1
	59	[4354]	CALL     	R10 1 1 ; R10()
	60	[4355]	RETURN   	R0 1 ; return 
	61	[4358]	GETUPVAL 	R10 U3 ; R10 := U3
	62	[4358]	MOVE     	R11 R0 ; R11 := R0
	63	[4358]	CALL     	R10 2 5 ; R10,R11,R12,R13 := R10(R11)
	64	[4359]	TEST     	R1 0 ; if not R1 then PC := 81
	65	[4359]	JMP      	81 ; PC := 81
	66	[4359]	LEN      	R14 R10 ; R14 := # R10
	67	[4359]	EQ       	0 R14 K12 ; if R14 ~= 0.000000 then PC := 81
	68	[4359]	JMP      	81 ; PC := 81
	69	[4360]	GETUPVAL 	R14 U0 ; R14 := U0
	70	[4360]	GETTABLE 	R14 R14 K1 ; R14 := R14[0xa53f5e12]
	71	[4360]	GETGLOBAL	R15 K13 ; R15 := 0x603636ad
	72	[4360]	LOADK    	R16 K14 ; R16 := "/Lotus/Language/Railjack/FuseCannotImprove"
	73	[4360]	NEWTABLE 	R17 0 1 ; R17 := {}
	74	[4360]	GETTABLE 	R18 R0 K16 ; R18 := R0["Name"]
	75	[4360]	SETTABLE 	R17 K15 R18 ; R17["ITEM"] := R18
	76	[4360]	CALL     	R15 3 0 ; R15,... := R15(R16,R17)
	77	[4360]	CALL     	R14 0 1 ; R14(R15,...)
	78	[4361]	GETUPVAL 	R14 U1 ; R14 := U1
	79	[4361]	CALL     	R14 1 1 ; R14()
	80	[4362]	RETURN   	R0 1 ; return 
	81	[4365]	GETTABLE 	R14 R0 K17 ; R14 := R0["SalvageRecipe"]
	82	[4366]	GETTABLE 	R15 R0 K18 ; R15 := R0["SalvageState"]
	83	[4366]	GETUPVAL 	R16 U4 ; R16 := U4
	84	[4366]	GETTABLE 	R16 R16 K19 ; R16 := R16["OWNED"]
	85	[4366]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 88
	86	[4366]	JMP      	88 ; PC := 88
	87	[4367]	LOADNIL  	R14 R14 ; R14 := nil
	88	[4370]	GETGLOBAL	R15 K20 ; R15 := 0xb009bbc6
	89	[4370]	MOVE     	R16 R2 ; R16 := R2
	90	[4370]	CALL     	R15 2 2 ; R15 := R15(R16)
	91	[4370]	SELF     	R15 R15 K21 ; R16 := R15; R15 := R15[0xb24acced]
	92	[4370]	CALL     	R15 2 2 ; R15 := R15(R16)
	93	[4370]	ADD      	R15 R15 K22 ; R15 := R15 + 1.000000
	94	[4373]	GETTABLE 	R16 R0 K24 ; R16 := R0["Equipped"]
	95	[4373]	TEST     	R16 1 ; if R16 then PC := 98
	96	[4373]	JMP      	98 ; PC := 98
	97	[4373]	GETGLOBAL	R16 K23 ; R16 := mEquipAfterFuse
	98	[4373]	SETGLOBALHASH	R16 K23 ; mEquipAfterFuse := R16
	99	[4375]	NEWTABLE 	R16 0 9 ; R16 := {}
	100	[4376]	GETTABLE 	R17 R0 K16 ; R17 := R0["Name"]
	101	[4376]	SETTABLE 	R16 K16 R17 ; R16["Name"] := R17
	102	[4377]	SETTABLE 	R16 K25 R2 ; R16["Type"] := R2
	103	[4378]	SETTABLE 	R16 K5 R3 ; R16["UID"] := R3
	104	[4379]	SETTABLE 	R16 K26 R10 ; R16["Stats"] := R10
	105	[4380]	SETTABLE 	R16 K27 R11 ; R16["Data"] := R11
	106	[4381]	SETTABLE 	R16 K28 R12 ; R16["Upgrade"] := R12
	107	[4382]	SETTABLE 	R16 K29 R13 ; R16["WeaponUpgrade"] := R13
	108	[4383]	SETTABLE 	R16 K30 R14 ; R16["Recipe"] := R14
	109	[4384]	SETTABLE 	R16 K31 R15 ; R16["Tier"] := R15
	110	[4385]	RETURN   	R16 2 ; return R16 
	111	[4386]	RETURN   	R0 1 ; return 

function #123 <?:4388,4462> (223 instructions, 892 bytes at 0000021133CDA770)
0 params, 36 slots, 4 upvalues, 0 locals, 43 constants, 0 functions
	1	[4389]	GETGLOBAL	R0 K0 ; R0 := mFuseElement1
	2	[4389]	GETTABLE 	R0 R0 K1 ; R0 := R0["Tier"]
	3	[4390]	GETGLOBAL	R1 K2 ; R1 := mFuseElement2
	4	[4390]	GETTABLE 	R1 R1 K1 ; R1 := R1["Tier"]
	5	[4391]	LT       	1 R0 R1 ; if R0 < R1 then PC := 8
	6	[4391]	JMP      	8 ; PC := 8
	7	[4391]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 8
	8	[4391]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[4392]	TEST     	R2 0 ; if not R2 then PC := 14
	10	[4392]	JMP      	14 ; PC := 14
	11	[4393]	MOVE     	R3 R1 ; R3 := R1
	12	[4393]	MOVE     	R1 R0 ; R1 := R0
	13	[4393]	MOVE     	R0 R3 ; R0 := R3
	14	[4396]	GETUPVAL 	R3 U0 ; R3 := U0
	15	[4396]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	16	[4396]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	17	[4397]	GETGLOBAL	R4 K3 ; R4 := 0x7b998233
	18	[4397]	GETGLOBAL	R5 K2 ; R5 := mFuseElement2
	19	[4397]	GETTABLE 	R5 R5 K4 ; R5 := R5["Recipe"]
	20	[4397]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[4397]	TEST     	R4 0 ; if not R4 then PC := 69
	22	[4397]	JMP      	69 ; PC := 69
	23	[4398]	EQ       	0 R3 K5 ; if R3 ~= nil then PC := 37
	24	[4398]	JMP      	37 ; PC := 37
	25	[4399]	GETGLOBAL	R4 K6 ; R4 := 0x3d106989
	26	[4399]	LOADK    	R5 K7 ; R5 := "Unexpected item tier, could not calculate fusion cost!"
	27	[4399]	CALL     	R4 2 1 ; R4(R5)
	28	[4400]	GETUPVAL 	R4 U1 ; R4 := U1
	29	[4400]	GETTABLE 	R4 R4 K8 ; R4 := R4[0xa53f5e12]
	30	[4400]	LOADK    	R5 K9 ; R5 := "/Lotus/Language/Kingpins/FuseFailed"
	31	[4400]	CALL     	R4 2 1 ; R4(R5)
	32	[4401]	GETUPVAL 	R4 U2 ; R4 := U2
	33	[4401]	CALL     	R4 1 1 ; R4()
	34	[4402]	LOADNIL  	R4 R4 ; R4 := nil
	35	[4402]	RETURN   	R4 2 ; return R4 
	36	[4402]	JMP      	62 ; PC := 62
	37	[4403]	GETGLOBAL	R4 K10 ; R4 := 0x25d99d89
	38	[4403]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x25a6e75e]
	39	[4403]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[4403]	GETTABLE 	R4 R4 K12 ; R4 := R4["mFusionPoints"]
	41	[4403]	LT       	0 R4 R3 ; if R4 >= R3 then PC := 62
	42	[4403]	JMP      	62 ; PC := 62
	43	[4404]	GETGLOBAL	R4 K13 ; R4 := 0xae91e43b
	44	[4404]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x42b04007]
	45	[4404]	LOADK    	R6 K15 ; R6 := "/Lotus/Language/Menu/FusionPoints"
	46	[4404]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[4404]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	48	[4405]	GETUPVAL 	R5 U1 ; R5 := U1
	49	[4405]	GETTABLE 	R5 R5 K8 ; R5 := R5[0xa53f5e12]
	50	[4405]	GETGLOBAL	R6 K13 ; R6 := 0xae91e43b
	51	[4405]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x42b04007]
	52	[4405]	LOADK    	R8 K16 ; R8 := "/Lotus/Language/Railjack/InsufficientFusionResources"
	53	[4405]	OP_LOADBOOL	R9 1 0 ; R9 := true
	54	[4405]	NEWTABLE 	R10 0 1 ; R10 := {}
	55	[4405]	SETTABLE 	R10 K17 R4 ; R10["ITEM"] := R4
	56	[4405]	CALL     	R6 5 0 ; R6,... := R6(R7,R8,R9,R10)
	57	[4405]	CALL     	R5 0 1 ; R5(R6,...)
	58	[4406]	GETUPVAL 	R5 U2 ; R5 := U2
	59	[4406]	CALL     	R5 1 1 ; R5()
	60	[4407]	LOADNIL  	R5 R5 ; R5 := nil
	61	[4407]	RETURN   	R5 2 ; return R5 
	62	[4409]	LOADK    	R5 K18 ; R5 := "<FUSION_POINTS>"
	63	[4409]	GETUPVAL 	R6 U1 ; R6 := U1
	64	[4409]	GETTABLE 	R6 R6 K19 ; R6 := R6[0x1142c7a8]
	65	[4409]	MOVE     	R7 R3 ; R7 := R3
	66	[4409]	CALL     	R6 2 2 ; R6 := R6(R7)
	67	[4409]	CONCAT   	R3 R5 R6 ; R3 := R5 .. R6
	68	[4409]	JMP      	220 ; PC := 220
	69	[4411]	TEST     	R2 0 ; if not R2 then PC := 82
	70	[4411]	JMP      	82 ; PC := 82
	71	[4412]	GETGLOBAL	R5 K6 ; R5 := 0x3d106989
	72	[4412]	LOADK    	R6 K20 ; R6 := "Scrap cannot be higher tier than built item!"
	73	[4412]	CALL     	R5 2 1 ; R5(R6)
	74	[4413]	GETUPVAL 	R5 U1 ; R5 := U1
	75	[4413]	GETTABLE 	R5 R5 K8 ; R5 := R5[0xa53f5e12]
	76	[4413]	LOADK    	R6 K20 ; R6 := "Scrap cannot be higher tier than built item!"
	77	[4413]	CALL     	R5 2 1 ; R5(R6)
	78	[4414]	GETUPVAL 	R5 U2 ; R5 := U2
	79	[4414]	CALL     	R5 1 1 ; R5()
	80	[4415]	LOADNIL  	R5 R5 ; R5 := nil
	81	[4415]	RETURN   	R5 2 ; return R5 
	82	[4417]	GETGLOBAL	R5 K21 ; R5 := 0xb009bbc6
	83	[4417]	GETGLOBAL	R6 K2 ; R6 := mFuseElement2
	84	[4417]	GETTABLE 	R6 R6 K4 ; R6 := R6["Recipe"]
	85	[4417]	CALL     	R5 2 2 ; R5 := R5(R6)
	86	[4418]	SELF     	R6 R5 K22 ; R7 := R5; R6 := R5[0xfc40d6a1]
	87	[4418]	CALL     	R6 2 2 ; R6 := R6(R7)
	88	[4419]	GETUPVAL 	R7 U3 ; R7 := U3
	89	[4419]	GETTABLE 	R7 R7 R1 ; R7 := R7[R1]
	90	[4419]	GETTABLE 	R7 R7 R0 ; R7 := R7[R0]
	91	[4419]	DIV      	R7 R7 K23 ; R7 := R7 / 100.000000
	92	[4420]	EQ       	0 R7 K5 ; if R7 ~= nil then PC := 105
	93	[4420]	JMP      	105 ; PC := 105
	94	[4421]	GETGLOBAL	R8 K6 ; R8 := 0x3d106989
	95	[4421]	LOADK    	R9 K24 ; R9 := "Unexpected item tier, could not calculate fusion multiplier!"
	96	[4421]	CALL     	R8 2 1 ; R8(R9)
	97	[4422]	GETUPVAL 	R8 U1 ; R8 := U1
	98	[4422]	GETTABLE 	R8 R8 K8 ; R8 := R8[0xa53f5e12]
	99	[4422]	LOADK    	R9 K9 ; R9 := "/Lotus/Language/Kingpins/FuseFailed"
	100	[4422]	CALL     	R8 2 1 ; R8(R9)
	101	[4423]	GETUPVAL 	R8 U2 ; R8 := U2
	102	[4423]	CALL     	R8 1 1 ; R8()
	103	[4424]	LOADNIL  	R8 R8 ; R8 := nil
	104	[4424]	RETURN   	R8 2 ; return R8 
	105	[4427]	GETGLOBAL	R8 K25 ; R8 := 0x5bced4c4
	106	[4427]	GETTABLE 	R8 R8 K26 ; R8 := R8[0x99675e23]
	107	[4427]	SELF     	R9 R5 K27 ; R10 := R5; R9 := R5[0x67bc9d36]
	108	[4427]	CALL     	R9 2 2 ; R9 := R9(R10)
	109	[4427]	MUL      	R9 R7 R9 ; R9 := R7 * R9
	110	[4427]	CALL     	R8 2 2 ; R8 := R8(R9)
	111	[4427]	MOVE     	R3 R8 ; R3 := R8
	112	[4428]	GETGLOBAL	R8 K10 ; R8 := 0x25d99d89
	113	[4428]	SELF     	R8 R8 K28 ; R9 := R8; R8 := R8[0x1e11a6d0]
	114	[4428]	CALL     	R8 2 2 ; R8 := R8(R9)
	115	[4428]	LT       	0 R8 R3 ; if R8 >= R3 then PC := 137
	116	[4428]	JMP      	137 ; PC := 137
	117	[4429]	LOADK    	R8 K29 ; R8 := "<CREDITS>"
	118	[4429]	GETGLOBAL	R9 K30 ; R9 := 0x603636ad
	119	[4429]	LOADK    	R10 K31 ; R10 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	120	[4429]	NEWTABLE 	R11 0 0 ; R11 := {}
	121	[4429]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	122	[4429]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	123	[4430]	GETUPVAL 	R9 U1 ; R9 := U1
	124	[4430]	GETTABLE 	R9 R9 K8 ; R9 := R9[0xa53f5e12]
	125	[4430]	GETGLOBAL	R10 K13 ; R10 := 0xae91e43b
	126	[4430]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0x42b04007]
	127	[4430]	LOADK    	R12 K16 ; R12 := "/Lotus/Language/Railjack/InsufficientFusionResources"
	128	[4430]	OP_LOADBOOL	R13 1 0 ; R13 := true
	129	[4430]	NEWTABLE 	R14 0 1 ; R14 := {}
	130	[4430]	SETTABLE 	R14 K17 R8 ; R14["ITEM"] := R8
	131	[4430]	CALL     	R10 5 0 ; R10,... := R10(R11,R12,R13,R14)
	132	[4430]	CALL     	R9 0 1 ; R9(R10,...)
	133	[4431]	GETUPVAL 	R9 U2 ; R9 := U2
	134	[4431]	CALL     	R9 1 1 ; R9()
	135	[4432]	LOADNIL  	R9 R9 ; R9 := nil
	136	[4432]	RETURN   	R9 2 ; return R9 
	137	[4435]	GETGLOBAL	R9 K10 ; R9 := 0x25d99d89
	138	[4435]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0x25a6e75e]
	139	[4435]	CALL     	R9 2 2 ; R9 := R9(R10)
	140	[4435]	SELF     	R9 R9 K32 ; R10 := R9; R9 := R9[0xf4045b7e]
	141	[4435]	CALL     	R9 2 2 ; R9 := R9(R10)
	142	[4437]	LOADK    	R10 K29 ; R10 := "<CREDITS>"
	143	[4437]	GETUPVAL 	R11 U1 ; R11 := U1
	144	[4437]	GETTABLE 	R11 R11 K19 ; R11 := R11[0x1142c7a8]
	145	[4437]	MOVE     	R12 R3 ; R12 := R3
	146	[4437]	CALL     	R11 2 2 ; R11 := R11(R12)
	147	[4437]	CONCAT   	R3 R10 R11 ; R3 := R10 .. R11
	148	[4438]	GETGLOBAL	R10 K33 ; R10 := 0xc8802016
	149	[4438]	MOVE     	R11 R6 ; R11 := R6
	150	[4438]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	151	[4438]	JMP      	218 ; PC := 218
	152	[4439]	GETGLOBAL	R15 K25 ; R15 := 0x5bced4c4
	153	[4439]	GETTABLE 	R15 R15 K26 ; R15 := R15[0x99675e23]
	154	[4439]	GETTABLE 	R16 R14 K34 ; R16 := R14["mItemCount"]
	155	[4439]	MUL      	R16 R7 R16 ; R16 := R7 * R16
	156	[4439]	CALL     	R15 2 2 ; R15 := R15(R16)
	157	[4440]	GETGLOBAL	R16 K30 ; R16 := 0x603636ad
	158	[4440]	GETGLOBAL	R17 K35 ; R17 := 0x64fb1586
	159	[4440]	GETGLOBAL	R18 K21 ; R18 := 0xb009bbc6
	160	[4440]	GETTABLE 	R19 R14 K36 ; R19 := R14["mItemType"]
	161	[4440]	CALL     	R18 2 2 ; R18 := R18(R19)
	162	[4440]	SELF     	R18 R18 K37 ; R19 := R18; R18 := R18[0xd3a9d01f]
	163	[4440]	CALL     	R18 2 0 ; R18,... := R18(R19)
	164	[4440]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	165	[4440]	NEWTABLE 	R18 0 0 ; R18 := {}
	166	[4440]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	167	[4441]	LOADNIL  	R17 R17 ; R17 := nil
	168	[4442]	GETGLOBAL	R18 K33 ; R18 := 0xc8802016
	169	[4442]	MOVE     	R19 R9 ; R19 := R9
	170	[4442]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	171	[4442]	JMP      	178 ; PC := 178
	172	[4443]	GETTABLE 	R23 R14 K36 ; R23 := R14["mItemType"]
	173	[4443]	GETTABLE 	R24 R22 K36 ; R24 := R22["mItemType"]
	174	[4443]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 178
	175	[4443]	JMP      	178 ; PC := 178
	176	[4444]	MOVE     	R17 R22 ; R17 := R22
	177	[4445]	JMP      	180 ; PC := 180
	178	[4442]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 172; R20 := R21 end
	179	[4446]	JMP      	172 ; PC := 172
	180	[4449]	EQ       	1 R17 K5 ; if R17 == nil then PC := 185
	181	[4449]	JMP      	185 ; PC := 185
	182	[4449]	GETTABLE 	R23 R17 K34 ; R23 := R17["mItemCount"]
	183	[4449]	TEST     	R23 1 ; if R23 then PC := 186
	184	[4449]	JMP      	186 ; PC := 186
	185	[4449]	LOADK    	R23 := 0.000000
	186	[4451]	LT       	0 R23 R15 ; if R23 >= R15 then PC := 209
	187	[4451]	JMP      	209 ; PC := 209
	188	[4452]	GETUPVAL 	R24 U1 ; R24 := U1
	189	[4452]	GETTABLE 	R24 R24 K8 ; R24 := R24[0xa53f5e12]
	190	[4452]	GETGLOBAL	R25 K13 ; R25 := 0xae91e43b
	191	[4452]	SELF     	R25 R25 K14 ; R26 := R25; R25 := R25[0x42b04007]
	192	[4452]	LOADK    	R27 K16 ; R27 := "/Lotus/Language/Railjack/InsufficientFusionResources"
	193	[4452]	OP_LOADBOOL	R28 1 0 ; R28 := true
	194	[4452]	NEWTABLE 	R29 0 1 ; R29 := {}
	195	[4452]	MOVE     	R30 R16 ; R30 := R16
	196	[4452]	LOADK    	R31 K38 ; R31 := " ("
	197	[4452]	MOVE     	R32 R23 ; R32 := R23
	198	[4452]	LOADK    	R33 K39 ; R33 := "/"
	199	[4452]	MOVE     	R34 R15 ; R34 := R15
	200	[4452]	LOADK    	R35 K40 ; R35 := ")"
	201	[4452]	CONCAT   	R30 R30 R35 ; R30 := R30 .. R31 .. R32 .. R33 .. R34 .. R35
	202	[4452]	SETTABLE 	R29 K17 R30 ; R29["ITEM"] := R30
	203	[4452]	CALL     	R25 5 0 ; R25,... := R25(R26,R27,R28,R29)
	204	[4452]	CALL     	R24 0 1 ; R24(R25,...)
	205	[4453]	GETUPVAL 	R24 U2 ; R24 := U2
	206	[4453]	CALL     	R24 1 1 ; R24()
	207	[4454]	LOADNIL  	R24 R24 ; R24 := nil
	208	[4454]	RETURN   	R24 2 ; return R24 
	209	[4457]	MOVE     	R24 R3 ; R24 := R3
	210	[4457]	LOADK    	R25 K41 ; R25 := "</font>, <font color=\"#FloatingContentHighlight\">"
	211	[4457]	GETUPVAL 	R26 U1 ; R26 := U1
	212	[4457]	GETTABLE 	R26 R26 K19 ; R26 := R26[0x1142c7a8]
	213	[4457]	MOVE     	R27 R15 ; R27 := R15
	214	[4457]	CALL     	R26 2 2 ; R26 := R26(R27)
	215	[4457]	LOADK    	R27 K42 ; R27 := " "
	216	[4457]	MOVE     	R28 R16 ; R28 := R16
	217	[4457]	CONCAT   	R3 R24 R28 ; R3 := R24 .. R25 .. R26 .. R27 .. R28
	218	[4438]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 152; R12 := R13 end
	219	[4457]	JMP      	152 ; PC := 152
	220	[4461]	MOVE     	R24 R3 ; R24 := R3
	221	[4461]	MOVE     	R25 R2 ; R25 := R2
	222	[4461]	RETURN   	R24 3 ; return R24, R25 
	223	[4462]	RETURN   	R0 1 ; return 

function #124 <?:4464,4506> (90 instructions, 360 bytes at 0000021133CDB420)
0 params, 7 slots, 5 upvalues, 0 locals, 19 constants, 0 functions
	1	[4465]	GETGLOBAL	R0 K0 ; R0 := mFuseElement2
	2	[4465]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 5
	3	[4465]	JMP      	5 ; PC := 5
	4	[4466]	RETURN   	R0 1 ; return 
	5	[4469]	GETGLOBAL	R0 K2 ; R0 := mFuseElement1
	6	[4469]	GETTABLE 	R0 R0 K3 ; R0 := R0["UID"]
	7	[4469]	GETGLOBAL	R1 K0 ; R1 := mFuseElement2
	8	[4469]	GETTABLE 	R1 R1 K3 ; R1 := R1["UID"]
	9	[4469]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 21
	10	[4469]	JMP      	21 ; PC := 21
	11	[4470]	GETGLOBAL	R0 K4 ; R0 := 0x3d106989
	12	[4470]	LOADK    	R1 K5 ; R1 := "Cannot fuse item with itself!"
	13	[4470]	CALL     	R0 2 1 ; R0(R1)
	14	[4471]	GETUPVAL 	R0 U0 ; R0 := U0
	15	[4471]	GETTABLE 	R0 R0 K6 ; R0 := R0[0xa53f5e12]
	16	[4471]	LOADK    	R1 K7 ; R1 := "/Lotus/Language/Kingpins/FuseFailed"
	17	[4471]	CALL     	R0 2 1 ; R0(R1)
	18	[4472]	GETUPVAL 	R0 U1 ; R0 := U1
	19	[4472]	CALL     	R0 1 1 ; R0()
	20	[4473]	RETURN   	R0 1 ; return 
	21	[4476]	GETGLOBAL	R0 K8 ; R0 := 0x7f5022cf
	22	[4476]	GETTABLE 	R0 R0 K9 ; R0 := R0[0x1a94c9cc]
	23	[4476]	GETGLOBAL	R1 K2 ; R1 := mFuseElement1
	24	[4476]	GETTABLE 	R1 R1 K10 ; R1 := R1["Type"]
	25	[4476]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0xe223e2b1]
	26	[4476]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[4476]	LOADK    	R2 := 1.000000
	28	[4476]	LOADK    	R3 := -2.000000
	29	[4476]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	30	[4477]	GETGLOBAL	R1 K8 ; R1 := 0x7f5022cf
	31	[4477]	GETTABLE 	R1 R1 K9 ; R1 := R1[0x1a94c9cc]
	32	[4477]	GETGLOBAL	R2 K0 ; R2 := mFuseElement2
	33	[4477]	GETTABLE 	R2 R2 K10 ; R2 := R2["Type"]
	34	[4477]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0xe223e2b1]
	35	[4477]	CALL     	R2 2 2 ; R2 := R2(R3)
	36	[4477]	LOADK    	R3 := 1.000000
	37	[4477]	LOADK    	R4 := -2.000000
	38	[4477]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	39	[4478]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 51
	40	[4478]	JMP      	51 ; PC := 51
	41	[4479]	GETGLOBAL	R2 K4 ; R2 := 0x3d106989
	42	[4479]	LOADK    	R3 K12 ; R3 := "Fused items must have the same manufacturer!"
	43	[4479]	CALL     	R2 2 1 ; R2(R3)
	44	[4480]	GETUPVAL 	R2 U0 ; R2 := U0
	45	[4480]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xa53f5e12]
	46	[4480]	LOADK    	R3 K7 ; R3 := "/Lotus/Language/Kingpins/FuseFailed"
	47	[4480]	CALL     	R2 2 1 ; R2(R3)
	48	[4481]	GETUPVAL 	R2 U1 ; R2 := U1
	49	[4481]	CALL     	R2 1 1 ; R2()
	50	[4482]	RETURN   	R0 1 ; return 
	51	[4485]	GETUPVAL 	R2 U2 ; R2 := U2
	52	[4485]	CALL     	R2 1 3 ; R2,R3 := R2()
	53	[4486]	EQ       	0 R2 K1 ; if R2 ~= nil then PC := 56
	54	[4486]	JMP      	56 ; PC := 56
	55	[4487]	RETURN   	R0 1 ; return 
	56	[4490]	GETGLOBAL	R4 K2 ; R4 := mFuseElement1
	57	[4490]	GETTABLE 	R4 R4 K13 ; R4 := R4["Name"]
	58	[4491]	TEST     	R3 0 ; if not R3 then PC := 62
	59	[4491]	JMP      	62 ; PC := 62
	60	[4492]	GETGLOBAL	R5 K0 ; R5 := mFuseElement2
	61	[4492]	GETTABLE 	R4 R5 K13 ; R4 := R5["Name"]
	62	[4495]	NEWTABLE 	R5 0 3 ; R5 := {}
	63	[4496]	SETTABLE 	R5 K13 R4 ; R5["Name"] := R4
	64	[4497]	SETTABLE 	R5 K15 R3 ; R5["Flipped"] := R3
	65	[4498]	SETTABLE 	R5 K16 R2 ; R5["Cost"] := R2
	66	[4499]	SETGLOBALHASH	R5 K14 ; mFuseElement3 := R5
	67	[4501]	GETGLOBAL	R5 K2 ; R5 := mFuseElement1
	68	[4501]	GETTABLE 	R5 R5 K17 ; R5 := R5["Data"]
	69	[4501]	GETTABLE 	R5 R5 K18 ; R5 := R5["SubroutineIndex"]
	70	[4501]	EQ       	1 R5 K1 ; if R5 == nil then PC := 88
	71	[4501]	JMP      	88 ; PC := 88
	72	[4501]	GETGLOBAL	R5 K0 ; R5 := mFuseElement2
	73	[4501]	GETTABLE 	R5 R5 K17 ; R5 := R5["Data"]
	74	[4501]	GETTABLE 	R5 R5 K18 ; R5 := R5["SubroutineIndex"]
	75	[4501]	EQ       	1 R5 K1 ; if R5 == nil then PC := 88
	76	[4501]	JMP      	88 ; PC := 88
	77	[4501]	GETGLOBAL	R5 K2 ; R5 := mFuseElement1
	78	[4501]	GETTABLE 	R5 R5 K17 ; R5 := R5["Data"]
	79	[4501]	GETTABLE 	R5 R5 K18 ; R5 := R5["SubroutineIndex"]
	80	[4501]	GETGLOBAL	R6 K0 ; R6 := mFuseElement2
	81	[4501]	GETTABLE 	R6 R6 K17 ; R6 := R6["Data"]
	82	[4501]	GETTABLE 	R6 R6 K18 ; R6 := R6["SubroutineIndex"]
	83	[4501]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 88
	84	[4501]	JMP      	88 ; PC := 88
	85	[4502]	GETUPVAL 	R5 U3 ; R5 := U3
	86	[4502]	CALL     	R5 1 1 ; R5()
	87	[4502]	JMP      	90 ; PC := 90
	88	[4504]	GETUPVAL 	R5 U4 ; R5 := U4
	89	[4504]	CALL     	R5 1 1 ; R5()
	90	[4506]	RETURN   	R0 1 ; return 

function #125 <?:4508,4534> (54 instructions, 216 bytes at 0000021133CDB9A0)
1 param, 17 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[4509]	GETGLOBAL	R1 K0 ; R1 := mEquipment
	2	[4510]	GETTABLE 	R2 R0 K1 ; R2 := R0["Equipped"]
	3	[4510]	TEST     	R2 0 ; if not R2 then PC := 54
	4	[4510]	JMP      	54 ; PC := 54
	5	[4510]	GETTABLE 	R2 R0 K2 ; R2 := R0["StoreItem"]
	6	[4510]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x31e559d2]
	7	[4510]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[4510]	TEST     	R2 1 ; if R2 then PC := 54
	9	[4510]	JMP      	54 ; PC := 54
	10	[4510]	GETTABLE 	R2 R1 K4 ; R2 := R1["mSelectedElement"]
	11	[4510]	EQ       	1 R2 K5 ; if R2 == nil then PC := 54
	12	[4510]	JMP      	54 ; PC := 54
	13	[4511]	GETTABLE 	R2 R1 K4 ; R2 := R1["mSelectedElement"]
	14	[4511]	GETTABLE 	R2 R2 K6 ; R2 := R2["Id"]
	15	[4512]	OP_LOADBOOL	R3 0 0 ; R3 := false
	16	[4513]	LOADNIL  	R4 R4 ; R4 := nil
	17	[4514]	GETGLOBAL	R5 K7 ; R5 := 0xc8802016
	18	[4514]	GETTABLE 	R6 R0 K8 ; R6 := R0["EquippedSlots"]
	19	[4514]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	20	[4514]	JMP      	27 ; PC := 27
	21	[4515]	TEST     	R9 0 ; if not R9 then PC := 27
	22	[4515]	JMP      	27 ; PC := 27
	23	[4516]	EQ       	0 R8 R2 ; if R8 ~= R2 then PC := 26
	24	[4516]	JMP      	26 ; PC := 26
	25	[4517]	OP_LOADBOOL	R3 1 0 ; R3 := true
	26	[4519]	MOVE     	R4 R8 ; R4 := R8
	27	[4514]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 21; R7 := R8 end
	28	[4520]	JMP      	21 ; PC := 21
	29	[4523]	EQ       	1 R4 K5 ; if R4 == nil then PC := 54
	30	[4523]	JMP      	54 ; PC := 54
	31	[4524]	SELF     	R10 R1 K9 ; R11 := R1; R10 := R1[0xca30dfb6]
	32	[4524]	MOVE     	R12 R4 ; R12 := R4
	33	[4524]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	34	[4525]	EQ       	1 R10 K5 ; if R10 == nil then PC := 54
	35	[4525]	JMP      	54 ; PC := 54
	36	[4526]	TEST     	R3 0 ; if not R3 then PC := 45
	37	[4526]	JMP      	45 ; PC := 45
	38	[4527]	GETGLOBAL	R11 K10 ; R11 := 0xae91e43b
	39	[4527]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x42b04007]
	40	[4527]	LOADK    	R13 K12 ; R13 := "/Lotus/Language/Menu/ItemSelection_Equipped"
	41	[4527]	OP_LOADBOOL	R14 0 0 ; R14 := false
	42	[4527]	TAILCALL 	R11 4 0 ; R11,... := R11(R12,R13,R14)
	43	[4527]	RETURN   	R11 0 ; return R11,... 
	44	[4527]	JMP      	54 ; PC := 54
	45	[4529]	GETGLOBAL	R11 K10 ; R11 := 0xae91e43b
	46	[4529]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x42b04007]
	47	[4529]	LOADK    	R13 K13 ; R13 := "/Lotus/Language/Railjack/Loadout_EquippedOn"
	48	[4529]	OP_LOADBOOL	R14 0 0 ; R14 := false
	49	[4529]	NEWTABLE 	R15 0 1 ; R15 := {}
	50	[4529]	GETTABLE 	R16 R10 K15 ; R16 := R10["Name"]
	51	[4529]	SETTABLE 	R15 K14 R16 ; R15["SLOT"] := R16
	52	[4529]	TAILCALL 	R11 5 0 ; R11,... := R11(R12,R13,R14,R15)
	53	[4529]	RETURN   	R11 0 ; return R11,... 
	54	[4534]	RETURN   	R0 1 ; return 

function #126 <?:4536,4549> (37 instructions, 148 bytes at 0000021133CDBD20)
4 params, 9 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[4537]	LEN      	R4 R0 ; R4 := # R0
	2	[4537]	EQ       	1 R4 K0 ; if R4 == 0.000000 then PC := 7
	3	[4537]	JMP      	7 ; PC := 7
	4	[4537]	LEN      	R4 R2 ; R4 := # R2
	5	[4537]	EQ       	0 R4 K0 ; if R4 ~= 0.000000 then PC := 9
	6	[4537]	JMP      	9 ; PC := 9
	7	[4538]	OP_LOADBOOL	R4 0 0 ; R4 := false
	8	[4538]	RETURN   	R4 2 ; return R4 
	9	[4541]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[4541]	GETTABLE 	R4 R4 K1 ; R4 := R4["OWNED"]
	11	[4541]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 26
	12	[4541]	JMP      	26 ; PC := 26
	13	[4542]	GETUPVAL 	R4 U1 ; R4 := U1
	14	[4542]	GETGLOBAL	R5 K2 ; R5 := 0x7f5022cf
	15	[4542]	GETTABLE 	R5 R5 K3 ; R5 := R5[0x1a94c9cc]
	16	[4542]	MOVE     	R6 R2 ; R6 := R2
	17	[4542]	LOADK    	R7 := -1.000000
	18	[4542]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	19	[4542]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	20	[4543]	EQ       	1 R4 K4 ; if R4 == nil then PC := 24
	21	[4543]	JMP      	24 ; PC := 24
	22	[4543]	LT       	0 R1 R4 ; if R1 >= R4 then PC := 26
	23	[4543]	JMP      	26 ; PC := 26
	24	[4544]	OP_LOADBOOL	R5 0 0 ; R5 := false
	25	[4544]	RETURN   	R5 2 ; return R5 
	26	[4548]	GETGLOBAL	R5 K2 ; R5 := 0x7f5022cf
	27	[4548]	GETTABLE 	R5 R5 K3 ; R5 := R5[0x1a94c9cc]
	28	[4548]	MOVE     	R6 R2 ; R6 := R2
	29	[4548]	LOADK    	R7 := 1.000000
	30	[4548]	LOADK    	R8 := -2.000000
	31	[4548]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	32	[4548]	EQ       	1 R0 R5 ; if R0 == R5 then PC := 35
	33	[4548]	JMP      	35 ; PC := 35
	34	[4548]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 35
	35	[4548]	OP_LOADBOOL	R5 1 0 ; R5 := true
	36	[4548]	RETURN   	R5 2 ; return R5 
	37	[4549]	RETURN   	R0 1 ; return 

function #127 <?:4551,4597> (124 instructions, 496 bytes at 0000021133CDBF70)
1 param, 17 slots, 6 upvalues, 0 locals, 33 constants, 0 functions
	1	[4552]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4552]	MOVE     	R2 R0 ; R2 := R0
	3	[4552]	OP_LOADBOOL	R3 1 0 ; R3 := true
	4	[4552]	OP_LOADBOOL	R4 0 0 ; R4 := false
	5	[4552]	OP_LOADBOOL	R5 1 0 ; R5 := true
	6	[4552]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	7	[4553]	LOADK    	R2 := 1.000000
	8	[4554]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	9	[4554]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x1a94c9cc]
	10	[4554]	GETGLOBAL	R4 K2 ; R4 := mInventoryGrid
	11	[4554]	GETTABLE 	R4 R4 K3 ; R4 := R4["mSelectedElement"]
	12	[4554]	GETTABLE 	R4 R4 K4 ; R4 := R4["ItemType"]
	13	[4554]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xe223e2b1]
	14	[4554]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4554]	LOADK    	R5 := 1.000000
	16	[4554]	LOADK    	R6 := -2.000000
	17	[4554]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	18	[4555]	GETGLOBAL	R4 K2 ; R4 := mInventoryGrid
	19	[4555]	GETTABLE 	R4 R4 K3 ; R4 := R4["mSelectedElement"]
	20	[4555]	GETTABLE 	R4 R4 K6 ; R4 := R4["Tier"]
	21	[4556]	GETGLOBAL	R5 K2 ; R5 := mInventoryGrid
	22	[4556]	GETTABLE 	R5 R5 K3 ; R5 := R5["mSelectedElement"]
	23	[4556]	GETTABLE 	R5 R5 K7 ; R5 := R5["RawItem"]
	24	[4556]	GETTABLE 	R5 R5 K8 ; R5 := R5["UID"]
	25	[4557]	OP_LOADBOOL	R6 0 0 ; R6 := false
	26	[4559]	LOADK    	R7 := 1.000000
	27	[4559]	LEN      	R8 R1 ; R8 := # R1
	28	[4559]	LOADK    	R9 := 1.000000
	29	[4559]	FORPREP  	R7 120 ; R7 -= R9; PC := 120
	30	[4560]	GETTABLE 	R11 R1 R10 ; R11 := R1[R10]
	31	[4561]	GETUPVAL 	R12 U1 ; R12 := U1
	32	[4561]	MOVE     	R13 R3 ; R13 := R3
	33	[4561]	MOVE     	R14 R4 ; R14 := R4
	34	[4561]	GETTABLE 	R15 R11 K4 ; R15 := R11["ItemType"]
	35	[4561]	SELF     	R15 R15 K5 ; R16 := R15; R15 := R15[0xe223e2b1]
	36	[4561]	CALL     	R15 2 2 ; R15 := R15(R16)
	37	[4561]	GETTABLE 	R16 R11 K9 ; R16 := R11["SalvageState"]
	38	[4561]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	39	[4561]	TEST     	R12 0 ; if not R12 then PC := 119
	40	[4561]	JMP      	119 ; PC := 119
	41	[4562]	GETTABLE 	R12 R11 K10 ; R12 := R11["Equipped"]
	42	[4562]	TEST     	R12 1 ; if R12 then PC := 119
	43	[4562]	JMP      	119 ; PC := 119
	44	[4563]	GETTABLE 	R12 R11 K7 ; R12 := R11["RawItem"]
	45	[4563]	GETTABLE 	R12 R12 K8 ; R12 := R12["UID"]
	46	[4563]	EQ       	1 R12 R5 ; if R12 == R5 then PC := 119
	47	[4563]	JMP      	119 ; PC := 119
	48	[4565]	GETTABLE 	R12 R11 K9 ; R12 := R11["SalvageState"]
	49	[4565]	GETUPVAL 	R13 U2 ; R13 := U2
	50	[4565]	GETTABLE 	R13 R13 K11 ; R13 := R13["OWNED"]
	51	[4565]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 61
	52	[4565]	JMP      	61 ; PC := 61
	53	[4565]	GETTABLE 	R12 R11 K9 ; R12 := R11["SalvageState"]
	54	[4565]	GETUPVAL 	R13 U2 ; R13 := U2
	55	[4565]	GETTABLE 	R13 R13 K12 ; R13 := R13["IDENTIFIED"]
	56	[4565]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 61
	57	[4565]	JMP      	61 ; PC := 61
	58	[4565]	GETTABLE 	R12 R11 K13 ; R12 := R11["SalvageProgress"]
	59	[4565]	EQ       	0 R12 K14 ; if R12 ~= 0.000000 then PC := 110
	60	[4565]	JMP      	110 ; PC := 110
	61	[4566]	SETTABLE 	R11 K15 K16 ; R11["SearchCache"] := ""
	62	[4567]	GETGLOBAL	R12 K17 ; R12 := 0x7b998233
	63	[4567]	GETTABLE 	R13 R11 K18 ; R13 := R11["mStoreItem"]
	64	[4567]	CALL     	R12 2 2 ; R12 := R12(R13)
	65	[4567]	TEST     	R12 1 ; if R12 then PC := 74
	66	[4567]	JMP      	74 ; PC := 74
	67	[4568]	GETUPVAL 	R12 U3 ; R12 := U3
	68	[4568]	GETTABLE 	R12 R12 K19 ; R12 := R12[0x1ac299fb]
	69	[4568]	GETGLOBAL	R13 K20 ; R13 := 0xae91e43b
	70	[4568]	GETTABLE 	R14 R11 K18 ; R14 := R11["mStoreItem"]
	71	[4568]	GETTABLE 	R15 R11 K21 ; R15 := R11["Name"]
	72	[4568]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	73	[4568]	SETTABLE 	R11 K15 R12 ; R11["SearchCache"] := R12
	74	[4571]	GETTABLE 	R12 R11 K22 ; R12 := R11["Polarity"]
	75	[4571]	EQ       	1 R12 K23 ; if R12 == nil then PC := 89
	76	[4571]	JMP      	89 ; PC := 89
	77	[4572]	GETGLOBAL	R12 K24 ; R12 := 0x83e41587
	78	[4572]	GETGLOBAL	R13 K20 ; R13 := 0xae91e43b
	79	[4572]	SELF     	R13 R13 K25 ; R14 := R13; R13 := R13[0x42b04007]
	80	[4572]	GETTABLE 	R15 R11 K22 ; R15 := R11["Polarity"]
	81	[4572]	GETTABLE 	R15 R15 K26 ; R15 := R15["NameTag"]
	82	[4572]	OP_LOADBOOL	R16 0 0 ; R16 := false
	83	[4572]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	84	[4572]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	85	[4572]	LOADK    	R13 K27 ; R13 := " "
	86	[4572]	GETTABLE 	R14 R11 K15 ; R14 := R11["SearchCache"]
	87	[4572]	CONCAT   	R12 R12 R14 ; R12 := R12 .. R13 .. R14
	88	[4572]	SETTABLE 	R11 K15 R12 ; R11["SearchCache"] := R12
	89	[4575]	GETUPVAL 	R12 U4 ; R12 := U4
	90	[4575]	MOVE     	R13 R11 ; R13 := R11
	91	[4575]	CALL     	R12 2 1 ; R12(R13)
	92	[4577]	GETUPVAL 	R12 U5 ; R12 := U5
	93	[4577]	MOVE     	R13 R11 ; R13 := R11
	94	[4577]	CALL     	R12 2 2 ; R12 := R12(R13)
	95	[4577]	SETTABLE 	R11 K28 R12 ; R11["LockedTag"] := R12
	96	[4578]	GETTABLE 	R12 R11 K28 ; R12 := R11["LockedTag"]
	97	[4578]	EQ       	0 R12 K23 ; if R12 ~= nil then PC := 100
	98	[4578]	JMP      	100 ; PC := 100
	99	[4578]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 100
	100	[4578]	OP_LOADBOOL	R12 1 0 ; R12 := true
	101	[4578]	SETTABLE 	R11 K29 R12 ; R11["Locked"] := R12
	102	[4579]	SETTABLE 	R11 K30 K31 ; R11["Selected"] := false
	103	[4581]	EQ       	1 R10 R2 ; if R10 == R2 then PC := 108
	104	[4581]	JMP      	108 ; PC := 108
	105	[4582]	GETTABLE 	R12 R1 R10 ; R12 := R1[R10]
	106	[4582]	SETTABLE 	R1 R2 R12 ; R1[R2] := R12
	107	[4583]	SETTABLE 	R1 R10 K23 ; R1[R10] := nil
	108	[4585]	ADD      	R2 R2 K32 ; R2 := R2 + 1.000000
	109	[4585]	JMP      	120 ; PC := 120
	110	[4587]	GETTABLE 	R12 R11 K13 ; R12 := R11["SalvageProgress"]
	111	[4587]	EQ       	1 R12 K23 ; if R12 == nil then PC := 117
	112	[4587]	JMP      	117 ; PC := 117
	113	[4587]	GETTABLE 	R12 R11 K13 ; R12 := R11["SalvageProgress"]
	114	[4587]	LT       	0 K14 R12 ; if 0.000000 >= R12 then PC := 117
	115	[4587]	JMP      	117 ; PC := 117
	116	[4588]	OP_LOADBOOL	R6 1 0 ; R6 := true
	117	[4590]	SETTABLE 	R1 R10 K23 ; R1[R10] := nil
	118	[4591]	JMP      	120 ; PC := 120
	119	[4593]	SETTABLE 	R1 R10 K23 ; R1[R10] := nil
	120	[4559]	FORLOOP  	R7 30 ; R7 += R9; if R7 <= R8 then begin PC := 30; R10 := R7 end
	121	[4596]	MOVE     	R12 R1 ; R12 := R1
	122	[4596]	MOVE     	R13 R6 ; R13 := R6
	123	[4596]	RETURN   	R12 3 ; return R12, R13 
	124	[4597]	RETURN   	R0 1 ; return 

function #128 <?:4599,4658> (91 instructions, 364 bytes at 0000021133CDC620)
0 params, 9 slots, 6 upvalues, 0 locals, 30 constants, 3 functions
	1	[4600]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4600]	GETGLOBAL	R1 K1 ; R1 := mChildMovie
	3	[4600]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4600]	TEST     	R0 1 ; if R0 then PC := 7
	5	[4600]	JMP      	7 ; PC := 7
	6	[4601]	RETURN   	R0 1 ; return 
	7	[4604]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[4604]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	9	[4604]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	10	[4604]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[4604]	SETGLOBALHASH	R0 K2 ; mFuseElement1 := R0
	12	[4606]	GETGLOBAL	R0 K2 ; R0 := mFuseElement1
	13	[4606]	EQ       	0 R0 K5 ; if R0 ~= nil then PC := 16
	14	[4606]	JMP      	16 ; PC := 16
	15	[4607]	RETURN   	R0 1 ; return 
	16	[4610]	GETGLOBAL	R0 K6 ; R0 := mEquipment
	17	[4610]	GETTABLE 	R0 R0 K4 ; R0 := R0["mSelectedElement"]
	18	[4611]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[4611]	MOVE     	R2 R0 ; R2 := R0
	20	[4611]	CALL     	R1 2 3 ; R1,R2 := R1(R2)
	21	[4612]	LEN      	R3 R1 ; R3 := # R1
	22	[4612]	EQ       	0 R3 K7 ; if R3 ~= 0.000000 then PC := 38
	23	[4612]	JMP      	38 ; PC := 38
	24	[4613]	TEST     	R2 0 ; if not R2 then PC := 31
	25	[4613]	JMP      	31 ; PC := 31
	26	[4614]	GETUPVAL 	R3 U2 ; R3 := U2
	27	[4614]	GETTABLE 	R3 R3 K8 ; R3 := R3[0xa53f5e12]
	28	[4614]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/Railjack/CompatibleFusionElementsInProgress"
	29	[4614]	CALL     	R3 2 1 ; R3(R4)
	30	[4614]	JMP      	35 ; PC := 35
	31	[4616]	GETUPVAL 	R3 U2 ; R3 := U2
	32	[4616]	GETTABLE 	R3 R3 K8 ; R3 := R3[0xa53f5e12]
	33	[4616]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/NoCompatibleFusionElements"
	34	[4616]	CALL     	R3 2 1 ; R3(R4)
	35	[4618]	GETUPVAL 	R3 U3 ; R3 := U3
	36	[4618]	CALL     	R3 1 1 ; R3()
	37	[4619]	RETURN   	R0 1 ; return 
	38	[4622]	GETGLOBAL	R3 K11 ; R3 := 0xae91e43b
	39	[4622]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x1fd6abd0]
	40	[4622]	GETGLOBAL	R5 K13 ; R5 := 0x0032441c
	41	[4622]	GETTABLE 	R5 R5 K14 ; R5 := R5["UIMovie_ItemBrowsingMovie"]
	42	[4622]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[4622]	SETGLOBALHASH	R3 K1 ; mChildMovie := R3
	44	[4623]	GETGLOBAL	R3 K15 ; R3 := _T
	45	[4623]	GETTABLE 	R3 R3 K16 ; R3 := R3[0xdf29a9d6]
	46	[4623]	GETTABLE 	R4 R0 K17 ; R4 := R0["Name"]
	47	[4623]	GETGLOBAL	R5 K11 ; R5 := 0xae91e43b
	48	[4623]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0x42b04007]
	49	[4623]	LOADK    	R7 K19 ; R7 := "/Lotus/Language/Railjack/ValenceTransfer"
	50	[4623]	OP_LOADBOOL	R8 0 0 ; R8 := false
	51	[4623]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	52	[4623]	CALL     	R3 0 1 ; R3(R4,...)
	53	[4624]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	54	[4624]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	55	[4624]	LOADK    	R5 K21 ; R5 := "SetRequiredSelections"
	56	[4624]	LOADK    	R6 K22 ; R6 := "1"
	57	[4624]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	58	[4625]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	59	[4625]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	60	[4625]	LOADK    	R5 K23 ; R5 := "SetHideCountThreshold"
	61	[4625]	LOADK    	R6 K22 ; R6 := "1"
	62	[4625]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	63	[4627]	GETGLOBAL	R3 K15 ; R3 := _T
	64	[4638]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	65	[4638]	GETUPVAL 	R0 U0 ; R0 := U0
	66	[4638]	GETUPVAL 	R0 U4 ; R0 := U4
	67	[4638]	SETTABLE 	R3 K24 R4 ; R3["FuseItemSelected"] := R4
	68	[4639]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	69	[4639]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	70	[4639]	LOADK    	R5 K25 ; R5 := "SetCallBack"
	71	[4639]	LOADK    	R6 K24 ; R6 := "FuseItemSelected"
	72	[4639]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	73	[4641]	GETGLOBAL	R3 K15 ; R3 := _T
	74	[4650]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	75	[4650]	GETUPVAL 	R0 U5 ; R0 := U5
	76	[4650]	SETTABLE 	R3 K26 R4 ; R3["GetFuseCategories"] := R4
	77	[4651]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	78	[4651]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	79	[4651]	LOADK    	R5 K27 ; R5 := "SetCategoriesFunction"
	80	[4651]	LOADK    	R6 K26 ; R6 := "GetFuseCategories"
	81	[4651]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	82	[4653]	GETGLOBAL	R3 K15 ; R3 := _T
	83	[4656]	CLOSURE  	R4 2 ; R4 := closure(Function #3)
	84	[4656]	MOVE     	R0 R1 ; R0 := R1
	85	[4656]	SETTABLE 	R3 K28 R4 ; R3["GetFuseItems"] := R4
	86	[4657]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	87	[4657]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	88	[4657]	LOADK    	R5 K29 ; R5 := "SetElementsFunction"
	89	[4657]	LOADK    	R6 K28 ; R6 := "GetFuseItems"
	90	[4657]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	91	[4658]	RETURN   	R0 1 ; return 

function #129 <?:4660,4668> (17 instructions, 68 bytes at 0000021133CDD5D0)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[4661]	EQ       	0 R0 K1 ; if R0 ~= 4.000000 then PC := 9
	2	[4661]	JMP      	9 ; PC := 9
	3	[4662]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	4	[4662]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	5	[4662]	LOADK    	R3 K4 ; R3 := "RepairSelectedItem"
	6	[4662]	LOADK    	R4 K5 ; R4 := ""
	7	[4662]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	8	[4662]	JMP      	17 ; PC := 17
	9	[4663]	EQ       	0 R0 K6 ; if R0 ~= 6.000000 then PC := 17
	10	[4663]	JMP      	17 ; PC := 17
	11	[4664]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	12	[4664]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	13	[4664]	LOADK    	R3 K7 ; R3 := "SellSelectedItem"
	14	[4664]	LOADK    	R4 K5 ; R4 := ""
	15	[4664]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[4664]	JMP      	17 ; PC := 17
	17	[4668]	RETURN   	R0 1 ; return 

function #130 <?:4670,4720> (107 instructions, 428 bytes at 0000021133CDD7B0)
2 params, 14 slots, 7 upvalues, 0 locals, 45 constants, 0 functions
	1	[4671]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4671]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[4671]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[4671]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[4671]	TEST     	R2 1 ; if R2 then PC := 13
	6	[4671]	JMP      	13 ; PC := 13
	7	[4672]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[4672]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[4672]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[4672]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[4672]	LOADK    	R5 K5 ; R5 := "0"
	12	[4672]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[4675]	TEST     	R0 0 ; if not R0 then PC := 107
	14	[4675]	JMP      	107 ; PC := 107
	15	[4676]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[4676]	CALL     	R2 1 1 ; R2()
	17	[4678]	LOADK    	R2 K6 ; R2 := ""
	18	[4679]	LOADK    	R3 K6 ; R3 := ""
	19	[4680]	LOADNIL  	R4 R4 ; R4 := nil
	20	[4681]	GETGLOBAL	R5 K7 ; R5 := cjson
	21	[4681]	GETTABLE 	R5 R5 K8 ; R5 := R5[0x7ab914d8]
	22	[4681]	MOVE     	R6 R1 ; R6 := R1
	23	[4681]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[4682]	GETTABLE 	R6 R5 K9 ; R6 := R5["InventoryChanges"]
	25	[4682]	EQ       	1 R6 K10 ; if R6 == nil then PC := 72
	26	[4682]	JMP      	72 ; PC := 72
	27	[4683]	LOADNIL  	R6 R6 ; R6 := nil
	28	[4684]	GETGLOBAL	R7 K11 ; R7 := mActiveState
	29	[4684]	GETUPVAL 	R8 U1 ; R8 := U1
	30	[4684]	GETTABLE 	R8 R8 K12 ; R8 := R8["WEAPON_INV"]
	31	[4684]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 37
	32	[4684]	JMP      	37 ; PC := 37
	33	[4685]	GETTABLE 	R7 R5 K9 ; R7 := R5["InventoryChanges"]
	34	[4685]	GETTABLE 	R7 R7 K13 ; R7 := R7["CrewShipSalvagedWeapons"]
	35	[4685]	GETTABLE 	R6 R7 K14 ; R6 := R7[1.000000]
	36	[4685]	JMP      	40 ; PC := 40
	37	[4687]	GETTABLE 	R7 R5 K9 ; R7 := R5["InventoryChanges"]
	38	[4687]	GETTABLE 	R7 R7 K15 ; R7 := R7["CrewShipSalvagedWeaponSkins"]
	39	[4687]	GETTABLE 	R6 R7 K14 ; R6 := R7[1.000000]
	40	[4689]	EQ       	1 R6 K10 ; if R6 == nil then PC := 72
	41	[4689]	JMP      	72 ; PC := 72
	42	[4690]	GETTABLE 	R7 R6 K16 ; R7 := R6["ItemId"]
	43	[4690]	GETTABLE 	R7 R7 K17 ; R7 := R7["$oid"]
	44	[4691]	GETUPVAL 	R8 U2 ; R8 := U2
	45	[4691]	MOVE     	R9 R7 ; R9 := R7
	46	[4691]	CALL     	R8 2 2 ; R8 := R8(R9)
	47	[4692]	EQ       	1 R8 K10 ; if R8 == nil then PC := 72
	48	[4692]	JMP      	72 ; PC := 72
	49	[4693]	GETTABLE 	R4 R8 K18 ; R4 := R8["Icon"]
	50	[4694]	GETUPVAL 	R9 U3 ; R9 := U3
	51	[4694]	MOVE     	R10 R8 ; R10 := R8
	52	[4694]	CALL     	R9 2 2 ; R9 := R9(R10)
	53	[4694]	MOVE     	R8 R9 ; R8 := R9
	54	[4695]	EQ       	1 R8 K10 ; if R8 == nil then PC := 72
	55	[4695]	JMP      	72 ; PC := 72
	56	[4696]	GETTABLE 	R2 R8 K19 ; R2 := R8["Name"]
	57	[4697]	GETUPVAL 	R9 U4 ; R9 := U4
	58	[4697]	GETTABLE 	R10 R8 K20 ; R10 := R8["Stats"]
	59	[4697]	CALL     	R9 2 2 ; R9 := R9(R10)
	60	[4697]	MOVE     	R3 R9 ; R3 := R9
	61	[4698]	EQ       	1 R3 K6 ; if R3 == "" then PC := 72
	62	[4698]	JMP      	72 ; PC := 72
	63	[4699]	LOADK    	R9 K21 ; R9 := "<br><font color=\"#Content\">"
	64	[4699]	GETGLOBAL	R10 K22 ; R10 := 0x603636ad
	65	[4699]	LOADK    	R11 K23 ; R11 := "/Lotus/Language/Railjack/RawSalvageIdentified"
	66	[4699]	LOADNIL  	R12 R12 ; R12 := nil
	67	[4699]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	68	[4699]	LOADK    	R11 K24 ; R11 := "<br>"
	69	[4699]	MOVE     	R12 R3 ; R12 := R3
	70	[4699]	LOADK    	R13 K25 ; R13 := "</font>"
	71	[4699]	CONCAT   	R3 R9 R13 ; R3 := R9 .. R10 .. R11 .. R12 .. R13
	72	[4706]	GETUPVAL 	R9 U5 ; R9 := U5
	73	[4706]	CALL     	R9 1 1 ; R9()
	74	[4708]	GETGLOBAL	R9 K26 ; R9 := 0x34291f5c
	75	[4708]	GETTABLE 	R9 R9 K27 ; R9 := R9[0xe27b35bb]
	76	[4708]	CALL     	R9 1 2 ; R9 := R9()
	77	[4709]	SETTABLE 	R9 K28 K29 ; R9["dialogType"] := 5.000000
	78	[4710]	LOADK    	R10 K31 ; R10 := "<font color=\"#FloatingContent\">"
	79	[4710]	MOVE     	R11 R2 ; R11 := R2
	80	[4710]	MOVE     	R12 R3 ; R12 := R3
	81	[4710]	LOADK    	R13 K25 ; R13 := "</font>"
	82	[4710]	CONCAT   	R10 R10 R13 ; R10 := R10 .. R11 .. R12 .. R13
	83	[4710]	SETTABLE 	R9 K30 R10 ; R9["locString"] := R10
	84	[4711]	SETTABLE 	R9 K32 K33 ; R9["firstString"] := "/Lotus/Language/Menu/ItemSelection_Repair"
	85	[4712]	SETTABLE 	R9 K34 K35 ; R9["secondString"] := "/Lotus/Language/Menu/ItemSelection_SellSalvage"
	86	[4713]	SETTABLE 	R9 K36 K37 ; R9["thirdString"] := "/Menu/Continue"
	87	[4714]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	88	[4714]	MOVE     	R11 R4 ; R11 := R4
	89	[4714]	CALL     	R10 2 2 ; R10 := R10(R11)
	90	[4714]	TEST     	R10 1 ; if R10 then PC := 100
	91	[4714]	JMP      	100 ; PC := 100
	92	[4715]	SELF     	R10 R4 K39 ; R11 := R4; R10 := R4[0xed4e0128]
	93	[4715]	CALL     	R10 2 2 ; R10 := R10(R11)
	94	[4715]	LOADK    	R11 K40 ; R11 := ",160,160,20,center,"
	95	[4715]	GETGLOBAL	R12 K41 ; R12 := 0x6cb7abfc
	96	[4715]	SELF     	R12 R12 K39 ; R13 := R12; R12 := R12[0xed4e0128]
	97	[4715]	CALL     	R12 2 2 ; R12 := R12(R13)
	98	[4715]	CONCAT   	R10 R10 R12 ; R10 := R10 .. R11 .. R12
	99	[4715]	SETTABLE 	R9 K38 R10 ; R9["icon"] := R10
	100	[4717]	SELF     	R10 R9 K42 ; R11 := R9; R10 := R9[0xe6ccc5b9]
	101	[4717]	LOADK    	R12 K43 ; R12 := "IdentifiedSalvageAction"
	102	[4717]	CALL     	R10 3 1 ; R10(R11,R12)
	103	[4718]	GETUPVAL 	R10 U6 ; R10 := U6
	104	[4718]	GETTABLE 	R10 R10 K44 ; R10 := R10[0xe99b84e7]
	105	[4718]	MOVE     	R11 R9 ; R11 := R9
	106	[4718]	CALL     	R10 2 1 ; R10(R11)
	107	[4720]	RETURN   	R0 1 ; return 

function #131 <?:4722,4735> (39 instructions, 156 bytes at 0000021133CDE120)
0 params, 5 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[4723]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4723]	GETGLOBAL	R1 K1 ; R1 := 0x0872c3f7
	3	[4723]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4723]	TEST     	R0 0 ; if not R0 then PC := 13
	5	[4723]	JMP      	13 ; PC := 13
	6	[4723]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4723]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[4723]	GETTABLE 	R1 R1 K3 ; R1 := R1["BackgroundMovie"]
	9	[4723]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[4723]	TEST     	R0 1 ; if R0 then PC := 13
	11	[4723]	JMP      	13 ; PC := 13
	12	[4724]	RETURN   	R0 1 ; return 
	13	[4727]	GETGLOBAL	R0 K4 ; R0 := mInventoryGrid
	14	[4727]	GETTABLE 	R0 R0 K5 ; R0 := R0["mSelectedElement"]
	15	[4728]	GETTABLE 	R1 R0 K6 ; R1 := R0["SalvageState"]
	16	[4728]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[4728]	GETTABLE 	R2 R2 K7 ; R2 := R2["UNIDENTIFIED"]
	18	[4728]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 39
	19	[4728]	JMP      	39 ; PC := 39
	20	[4729]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	21	[4729]	GETGLOBAL	R2 K2 ; R2 := _T
	22	[4729]	GETTABLE 	R2 R2 K3 ; R2 := R2["BackgroundMovie"]
	23	[4729]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[4729]	TEST     	R1 1 ; if R1 then PC := 32
	25	[4729]	JMP      	32 ; PC := 32
	26	[4730]	GETGLOBAL	R1 K2 ; R1 := _T
	27	[4730]	GETTABLE 	R1 R1 K3 ; R1 := R1["BackgroundMovie"]
	28	[4730]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xe4162eed]
	29	[4730]	LOADK    	R3 K9 ; R3 := "ShowBlockingMessage"
	30	[4730]	LOADK    	R4 K10 ; R4 := "2"
	31	[4730]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	32	[4733]	GETGLOBAL	R1 K11 ; R1 := 0x25d99d89
	33	[4733]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x46fc0942]
	34	[4733]	GETTABLE 	R3 R0 K13 ; R3 := R0["ItemType"]
	35	[4733]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0xed4e0128]
	36	[4733]	CALL     	R3 2 2 ; R3 := R3(R4)
	37	[4733]	LOADK    	R4 K15 ; R4 := "OnSalvageIdentified"
	38	[4733]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	39	[4735]	RETURN   	R0 1 ; return 

function #132 <?:4737,4755> (42 instructions, 168 bytes at 0000021133CDE420)
2 params, 6 slots, 4 upvalues, 0 locals, 13 constants, 0 functions
	1	[4738]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4738]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[4738]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[4738]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[4738]	TEST     	R2 1 ; if R2 then PC := 13
	6	[4738]	JMP      	13 ; PC := 13
	7	[4739]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[4739]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[4739]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[4739]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[4739]	LOADK    	R5 K5 ; R5 := "0"
	12	[4739]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[4742]	TEST     	R0 0 ; if not R0 then PC := 38
	14	[4742]	JMP      	38 ; PC := 38
	15	[4743]	GETGLOBAL	R2 K6 ; R2 := mInventoryGrid
	16	[4743]	GETTABLE 	R2 R2 K7 ; R2 := R2["mSelectedElement"]
	17	[4744]	LOADNIL  	R3 R3 ; R3 := nil
	18	[4745]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	19	[4745]	MOVE     	R5 R2 ; R5 := R2
	20	[4745]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[4745]	TEST     	R4 1 ; if R4 then PC := 30
	22	[4745]	JMP      	30 ; PC := 30
	23	[4745]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	24	[4745]	GETTABLE 	R5 R2 K8 ; R5 := R2["RawItem"]
	25	[4745]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[4745]	TEST     	R4 1 ; if R4 then PC := 30
	27	[4745]	JMP      	30 ; PC := 30
	28	[4746]	GETTABLE 	R4 R2 K8 ; R4 := R2["RawItem"]
	29	[4746]	GETTABLE 	R3 R4 K9 ; R3 := R4["UID"]
	30	[4749]	GETUPVAL 	R4 U0 ; R4 := U0
	31	[4749]	GETUPVAL 	R5 U1 ; R5 := U1
	32	[4749]	GETTABLE 	R5 R5 K10 ; R5 := R5["CANCEL"]
	33	[4749]	CALL     	R4 2 1 ; R4(R5)
	34	[4751]	GETUPVAL 	R4 U2 ; R4 := U2
	35	[4751]	MOVE     	R5 R3 ; R5 := R3
	36	[4751]	CALL     	R4 2 1 ; R4(R5)
	37	[4751]	JMP      	42 ; PC := 42
	38	[4753]	GETUPVAL 	R4 U3 ; R4 := U3
	39	[4753]	GETTABLE 	R4 R4 K11 ; R4 := R4[0xe0cba3ca]
	40	[4753]	LOADK    	R5 K12 ; R5 := "/Lotus/Language/Menu/PurchaseFailure_UnknownError"
	41	[4753]	CALL     	R4 2 1 ; R4(R5)
	42	[4755]	RETURN   	R0 1 ; return 

function #133 <?:4757,4766> (33 instructions, 132 bytes at 0000021133CDE710)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[4758]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[4758]	MOVE     	R2 R0 ; R2 := R0
	3	[4758]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4758]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[4758]	JMP      	33 ; PC := 33
	6	[4759]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[4759]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[4760]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[4760]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[4760]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[4760]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[4760]	TEST     	R2 1 ; if R2 then PC := 20
	13	[4760]	JMP      	20 ; PC := 20
	14	[4761]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[4761]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[4761]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[4761]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[4761]	LOADK    	R5 K10 ; R5 := "2"
	19	[4761]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[4764]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[4764]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[4764]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[4764]	LOADK    	R5 K14 ; R5 := "Cancel"
	24	[4764]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[4764]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[4764]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[4764]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[4764]	LOADK    	R8 K17 ; R8 := "OnTechCancelled"
	29	[4764]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[4764]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[4764]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[4764]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[4766]	RETURN   	R0 1 ; return 

function #134 <?:4768,4778> (20 instructions, 80 bytes at 0000021133CDEA40)
0 params, 5 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[4769]	GETGLOBAL	R0 K0 ; R0 := mInventoryGrid
	2	[4769]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[4771]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	4	[4771]	GETTABLE 	R2 R0 K3 ; R2 := R0["SalvageRecipe"]
	5	[4771]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[4771]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[4771]	JMP      	9 ; PC := 9
	8	[4772]	RETURN   	R0 1 ; return 
	9	[4775]	GETGLOBAL	R1 K4 ; R1 := 0x603636ad
	10	[4775]	LOADK    	R2 K5 ; R2 := "/Lotus/Language/Railjack/CancelSalvageRepairsConfirm"
	11	[4775]	NEWTABLE 	R3 0 1 ; R3 := {}
	12	[4775]	GETTABLE 	R4 R0 K7 ; R4 := R0["Name"]
	13	[4775]	SETTABLE 	R3 K6 R4 ; R3["ITEM_TYPE"] := R4
	14	[4775]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[4777]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[4777]	GETTABLE 	R2 R2 K8 ; R2 := R2[0xf616a184]
	17	[4777]	MOVE     	R3 R1 ; R3 := R1
	18	[4777]	LOADK    	R4 K9 ; R4 := "CancelRepairsConfirm"
	19	[4777]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[4778]	RETURN   	R0 1 ; return 

function #135 <?:4780,4796> (58 instructions, 232 bytes at 0000021133CDECA0)
0 params, 7 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[4781]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4781]	GETGLOBAL	R1 K1 ; R1 := mAvatar
	3	[4781]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4781]	TEST     	R0 1 ; if R0 then PC := 58
	5	[4781]	JMP      	58 ; PC := 58
	6	[4782]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[4782]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x2a1108a9]
	8	[4782]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[4782]	GETGLOBAL	R2 K1 ; R2 := mAvatar
	10	[4782]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xd1586535]
	11	[4782]	CALL     	R2 2 0 ; R2,... := R2(R3)
	12	[4782]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	13	[4782]	SETGLOBALHASH	R0 K2 ; mShipAvatar := R0
	14	[4783]	LOADNIL  	R0 R0 ; R0 := nil
	15	[4783]	SETGLOBALHASH	R0 K5 ; mShipSuit := R0
	16	[4784]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	17	[4784]	GETGLOBAL	R1 K2 ; R1 := mShipAvatar
	18	[4784]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[4784]	TEST     	R0 1 ; if R0 then PC := 27
	20	[4784]	JMP      	27 ; PC := 27
	21	[4785]	GETGLOBAL	R0 K2 ; R0 := mShipAvatar
	22	[4785]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xde321e6f]
	23	[4785]	CALL     	R0 2 2 ; R0 := R0(R1)
	24	[4786]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0xf7d48ee0]
	25	[4786]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[4786]	SETGLOBALHASH	R1 K5 ; mShipSuit := R1
	27	[4789]	GETGLOBAL	R1 K8 ; R1 := 0x2d0fad09
	28	[4789]	LOADK    	R2 K9 ; R2 := "Lotus.Interface.Components.ThemedStats"
	29	[4789]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[4790]	GETTABLE 	R2 R1 K11 ; R2 := R1[0xae6791ba]
	31	[4790]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	32	[4790]	LOADK    	R4 K13 ; R4 := "BottomRightContainer.Stats"
	33	[4790]	GETGLOBAL	R5 K5 ; R5 := mShipSuit
	34	[4790]	GETGLOBAL	R6 K2 ; R6 := mShipAvatar
	35	[4790]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	36	[4790]	SETGLOBALHASH	R2 K10 ; mStats := R2
	37	[4791]	GETGLOBAL	R2 K10 ; R2 := mStats
	38	[4791]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0x3bc79f4f]
	39	[4791]	LOADK    	R4 K15 ; R4 := "BottomRightContainer.ScrollBar"
	40	[4791]	LOADK    	R5 := 630.000000
	41	[4791]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	42	[4792]	GETGLOBAL	R2 K10 ; R2 := mStats
	43	[4792]	GETTABLE 	R2 R2 K16 ; R2 := R2["mScrollBar"]
	44	[4792]	SETTABLE 	R2 K17 K18 ; R2["mInactiveXOffset"] := -5.000000
	45	[4793]	GETGLOBAL	R2 K10 ; R2 := mStats
	46	[4793]	SETTABLE 	R2 K19 K20 ; R2["mCanFocusStats"] := true
	47	[4794]	GETGLOBAL	R2 K10 ; R2 := mStats
	48	[4794]	GETTABLE 	R2 R2 K16 ; R2 := R2["mScrollBar"]
	49	[4794]	GETGLOBAL	R3 K10 ; R3 := mStats
	50	[4794]	GETTABLE 	R3 R3 K16 ; R3 := R3["mScrollBar"]
	51	[4794]	GETUPVAL 	R4 U0 ; R4 := U0
	52	[4794]	GETTABLE 	R4 R4 K23 ; R4 := R4[0xb5be5d4a]
	53	[4794]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	54	[4794]	LOADK    	R6 K15 ; R6 := "BottomRightContainer.ScrollBar"
	55	[4794]	CALL     	R4 3 3 ; R4,R5 := R4(R5,R6)
	56	[4794]	SETTABLE 	R3 K22 R5 ; R3["mActiveY"] := R5
	57	[4794]	SETTABLE 	R2 K21 R4 ; R2["mActiveX"] := R4
	58	[4796]	RETURN   	R0 1 ; return 

function #136 <?:4798,4813> (43 instructions, 172 bytes at 0000021133CDF110)
2 params, 7 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[4799]	GETTABLE 	R2 R0 K0 ; R2 := R0["Filler"]
	2	[4799]	TEST     	R2 1 ; if R2 then PC := 5
	3	[4799]	JMP      	5 ; PC := 5
	4	[4799]	GETTABLE 	R2 R0 K1 ; R2 := R0["EmptySlot"]
	5	[4800]	TEST     	R2 1 ; if R2 then PC := 12
	6	[4800]	JMP      	12 ; PC := 12
	7	[4800]	GETGLOBAL	R3 K2 ; R3 := mInventoryGrid
	8	[4800]	GETTABLE 	R3 R3 K3 ; R3 := R3["mPrevSelectedId"]
	9	[4800]	GETTABLE 	R4 R0 K4 ; R4 := R0["Id"]
	10	[4800]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 13
	11	[4800]	JMP      	13 ; PC := 13
	12	[4800]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 13
	13	[4800]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[4801]	GETUPVAL 	R4 U0 ; R4 := U0
	15	[4801]	MOVE     	R5 R0 ; R5 := R0
	16	[4801]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[4803]	NEWTABLE 	R5 0 8 ; R5 := {}
	18	[4804]	SETTABLE 	R5 K5 K6 ; R5["HideCountThreshold"] := 1.000000
	19	[4805]	NEWTABLE 	R6 0 1 ; R6 := {}
	20	[4805]	SETTABLE 	R6 K8 K9 ; R6["TagOverride"] := "/Lotus/Language/Menu/Crafting_Owned_Brief"
	21	[4805]	SETTABLE 	R5 K7 R6 ; R5["OwnedInfo"] := R6
	22	[4806]	SETTABLE 	R5 K10 R2 ; R5["IsFiller"] := R2
	23	[4807]	SETTABLE 	R5 K11 R1 ; R5["IsFocused"] := R1
	24	[4808]	SETTABLE 	R5 K12 R3 ; R5["IsSelected"] := R3
	25	[4809]	EQ       	0 R4 K14 ; if R4 ~= nil then PC := 28
	26	[4809]	JMP      	28 ; PC := 28
	27	[4809]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 28
	28	[4809]	OP_LOADBOOL	R6 1 0 ; R6 := true
	29	[4809]	SETTABLE 	R5 K13 R6 ; R5["Locked"] := R6
	30	[4810]	SETTABLE 	R5 K15 R4 ; R5["LockedMsg"] := R4
	31	[4811]	TESTSET  	R6 R1 0 ; if not R1 then PC := 41 else R6 := R1 
	32	[4811]	JMP      	41 ; PC := 41
	33	[4811]	GETTABLE 	R6 R0 K13 ; R6 := R0["Locked"]
	34	[4811]	TEST     	R6 1 ; if R6 then PC := 39
	35	[4811]	JMP      	39 ; PC := 39
	36	[4811]	GETTABLE 	R6 R0 K17 ; R6 := R0["Hidden"]
	37	[4811]	NOT      	R6 R6 ; R6 := not R6
	38	[4811]	JMP      	41 ; PC := 41
	39	[4811]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 40
	40	[4811]	OP_LOADBOOL	R6 1 0 ; R6 := true
	41	[4811]	SETTABLE 	R5 K16 R6 ; R5["ShowInfoPopup"] := R6
	42	[4812]	RETURN   	R5 2 ; return R5 
	43	[4813]	RETURN   	R0 1 ; return 

function #137 <?:4815,4833> (97 instructions, 388 bytes at 0000021133CDF450)
1 param, 7 slots, 0 upvalues, 0 locals, 20 constants, 0 functions
	1	[4816]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[4816]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	3	[4816]	MOVE     	R3 R0 ; R3 := R0
	4	[4816]	LOADK    	R4 K2 ; R4 := ".SalvageProgress.Fill"
	5	[4816]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	6	[4816]	GETGLOBAL	R4 K3 ; R4 := 0xbe447565
	7	[4816]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	8	[4817]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	9	[4817]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	10	[4817]	MOVE     	R3 R0 ; R3 := R0
	11	[4817]	LOADK    	R4 K4 ; R4 := ".SalvageProgress.Backer"
	12	[4817]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	13	[4817]	GETGLOBAL	R4 K3 ; R4 := 0xbe447565
	14	[4817]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	15	[4819]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	16	[4819]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	17	[4819]	MOVE     	R3 R0 ; R3 := R0
	18	[4819]	LOADK    	R4 K6 ; R4 := "SalvageProgress.Backer"
	19	[4819]	LOADK    	R5 := 9.000000
	20	[4819]	GETGLOBAL	R6 K7 ; R6 := mColors
	21	[4819]	GETTABLE 	R6 R6 K8 ; R6 := R6["FloatingContent"]
	22	[4819]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	23	[4820]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	24	[4820]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	25	[4820]	MOVE     	R3 R0 ; R3 := R0
	26	[4820]	LOADK    	R4 K6 ; R4 := "SalvageProgress.Backer"
	27	[4820]	LOADK    	R5 := 10.000000
	28	[4820]	LOADK    	R6 := 20.000000
	29	[4820]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	30	[4821]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	31	[4821]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	32	[4821]	MOVE     	R3 R0 ; R3 := R0
	33	[4821]	LOADK    	R4 K9 ; R4 := "SalvageProgress.Fill"
	34	[4821]	LOADK    	R5 := 9.000000
	35	[4821]	GETGLOBAL	R6 K7 ; R6 := mColors
	36	[4821]	GETTABLE 	R6 R6 K8 ; R6 := R6["FloatingContent"]
	37	[4821]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	38	[4823]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	39	[4823]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	40	[4823]	MOVE     	R3 R0 ; R3 := R0
	41	[4823]	LOADK    	R4 K10 ; R4 := "SalvageProgress.Icon"
	42	[4823]	LOADK    	R5 := 9.000000
	43	[4823]	GETGLOBAL	R6 K7 ; R6 := mColors
	44	[4823]	GETTABLE 	R6 R6 K8 ; R6 := R6["FloatingContent"]
	45	[4823]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	46	[4825]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	47	[4825]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x1cb415c1]
	48	[4825]	MOVE     	R3 R0 ; R3 := R0
	49	[4825]	LOADK    	R4 K12 ; R4 := ".SalvageProgress.FadedBacker"
	50	[4825]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	51	[4825]	GETGLOBAL	R4 K13 ; R4 := 0xc7c2f904
	52	[4825]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	53	[4826]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	54	[4826]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	55	[4826]	MOVE     	R3 R0 ; R3 := R0
	56	[4826]	LOADK    	R4 K14 ; R4 := "SalvageProgress.FadedBacker"
	57	[4826]	LOADK    	R5 := 9.000000
	58	[4826]	GETGLOBAL	R6 K7 ; R6 := mColors
	59	[4826]	GETTABLE 	R6 R6 K15 ; R6 := R6["Background1"]
	60	[4826]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	61	[4827]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	62	[4827]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x1cb415c1]
	63	[4827]	MOVE     	R3 R0 ; R3 := R0
	64	[4827]	LOADK    	R4 K16 ; R4 := ".SalvageProgress.FadedBacker2"
	65	[4827]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	66	[4827]	GETGLOBAL	R4 K13 ; R4 := 0xc7c2f904
	67	[4827]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	68	[4828]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	69	[4828]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	70	[4828]	MOVE     	R3 R0 ; R3 := R0
	71	[4828]	LOADK    	R4 K17 ; R4 := "SalvageProgress.FadedBacker2"
	72	[4828]	LOADK    	R5 := 9.000000
	73	[4828]	GETGLOBAL	R6 K7 ; R6 := mColors
	74	[4828]	GETTABLE 	R6 R6 K15 ; R6 := R6["Background1"]
	75	[4828]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	76	[4830]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	77	[4830]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	78	[4830]	MOVE     	R3 R0 ; R3 := R0
	79	[4830]	LOADK    	R4 K18 ; R4 := ".SalvageProgress.Icon"
	80	[4830]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	81	[4830]	GETGLOBAL	R4 K19 ; R4 := 0x0f20c9bd
	82	[4830]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	83	[4831]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	84	[4831]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	85	[4831]	MOVE     	R3 R0 ; R3 := R0
	86	[4831]	LOADK    	R4 K12 ; R4 := ".SalvageProgress.FadedBacker"
	87	[4831]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	88	[4831]	GETGLOBAL	R4 K19 ; R4 := 0x0f20c9bd
	89	[4831]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	90	[4832]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	91	[4832]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	92	[4832]	MOVE     	R3 R0 ; R3 := R0
	93	[4832]	LOADK    	R4 K16 ; R4 := ".SalvageProgress.FadedBacker2"
	94	[4832]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	95	[4832]	GETGLOBAL	R4 K19 ; R4 := 0x0f20c9bd
	96	[4832]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	97	[4833]	RETURN   	R0 1 ; return 

function #138 <?:4835,4841> (19 instructions, 76 bytes at 0000021118E08BB0)
2 params, 8 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[4836]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4836]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xbf9f30a4]
	3	[4836]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	4	[4836]	GETGLOBAL	R4 K2 ; R4 := mInventoryGrid
	5	[4836]	MOVE     	R5 R0 ; R5 := R0
	6	[4836]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[4838]	GETGLOBAL	R2 K3 ; R2 := 0x38f10e85
	8	[4838]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	9	[4838]	MOVE     	R4 R0 ; R4 := R0
	10	[4838]	LOADK    	R5 K4 ; R5 := ".attachMovie"
	11	[4838]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	12	[4838]	LOADK    	R5 K5 ; R5 := "SalvageProgress"
	13	[4838]	LOADK    	R6 K5 ; R6 := "SalvageProgress"
	14	[4838]	LOADK    	R7 K6 ; R7 := 11234.000000
	15	[4838]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	16	[4840]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[4840]	MOVE     	R3 R0 ; R3 := R0
	18	[4840]	CALL     	R2 2 1 ; R2(R3)
	19	[4841]	RETURN   	R0 1 ; return 

function #139 <?:4843,4858> (36 instructions, 144 bytes at 0000021118E08D80)
1 param, 5 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[4844]	GETGLOBAL	R1 K0 ; R1 := mActiveState
	2	[4844]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4844]	GETTABLE 	R2 R2 K1 ; R2 := R2["WEAPON_INV"]
	4	[4844]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 7
	5	[4844]	JMP      	7 ; PC := 7
	6	[4845]	RETURN   	R0 1 ; return 
	7	[4848]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	8	[4848]	GETTABLE 	R1 R1 K3 ; R1 := R1["mSelectedElement"]
	9	[4848]	GETTABLE 	R1 R1 K4 ; R1 := R1["NameOverride"]
	10	[4849]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 13
	11	[4849]	JMP      	13 ; PC := 13
	12	[4850]	LOADK    	R1 K6 ; R1 := "NONE"
	13	[4852]	EQ       	1 R0 K5 ; if R0 == nil then PC := 30
	14	[4852]	JMP      	30 ; PC := 30
	15	[4852]	GETTABLE 	R2 R0 K7 ; R2 := R0["Equipped"]
	16	[4852]	TEST     	R2 0 ; if not R2 then PC := 25
	17	[4852]	JMP      	25 ; PC := 25
	18	[4852]	GETTABLE 	R2 R0 K8 ; R2 := R0["EquippedSlots"]
	19	[4852]	GETGLOBAL	R3 K2 ; R3 := mEquipment
	20	[4852]	GETTABLE 	R3 R3 K3 ; R3 := R3["mSelectedElement"]
	21	[4852]	GETTABLE 	R3 R3 K9 ; R3 := R3["Id"]
	22	[4852]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	23	[4852]	TEST     	R2 1 ; if R2 then PC := 30
	24	[4852]	JMP      	30 ; PC := 30
	25	[4853]	MOVE     	R2 R1 ; R2 := R1
	26	[4853]	LOADK    	R3 K10 ; R3 := " > "
	27	[4853]	GETTABLE 	R4 R0 K11 ; R4 := R0["Name"]
	28	[4853]	CONCAT   	R1 R2 R4 ; R1 := R2 .. R3 .. R4
	29	[4853]	JMP      	33 ; PC := 33
	30	[4855]	MOVE     	R2 R1 ; R2 := R1
	31	[4855]	LOADK    	R3 K12 ; R3 := " : EQUIPPED"
	32	[4855]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	33	[4857]	GETGLOBAL	R2 K13 ; R2 := 0x3d106989
	34	[4857]	MOVE     	R3 R1 ; R3 := R1
	35	[4857]	CALL     	R2 2 1 ; R2(R3)
	36	[4858]	RETURN   	R0 1 ; return 

function #140 <?:4860,4882> (73 instructions, 292 bytes at 0000021118E090B0)
1 param, 8 slots, 6 upvalues, 0 locals, 29 constants, 0 functions
	1	[4861]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4861]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4861]	JMP      	5 ; PC := 5
	4	[4862]	RETURN   	R0 1 ; return 
	5	[4865]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4865]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb496de90]
	7	[4865]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4865]	GETGLOBAL	R3 K4 ; R3 := mInventoryGrid
	9	[4865]	MOVE     	R4 R0 ; R4 := R0
	10	[4865]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4865]	MOVE     	R6 R0 ; R6 := R0
	12	[4865]	OP_LOADBOOL	R7 1 0 ; R7 := true
	13	[4865]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4865]	CALL     	R1 0 1 ; R1(R2,...)
	15	[4867]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[4867]	CALL     	R1 1 2 ; R1 := R1()
	17	[4868]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	18	[4868]	MOVE     	R3 R1 ; R3 := R1
	19	[4868]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[4868]	TEST     	R2 1 ; if R2 then PC := 73
	21	[4868]	JMP      	73 ; PC := 73
	22	[4868]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	23	[4868]	GETTABLE 	R3 R1 K6 ; R3 := R1["mStoreItem"]
	24	[4868]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[4868]	TEST     	R2 1 ; if R2 then PC := 73
	26	[4868]	JMP      	73 ; PC := 73
	27	[4869]	GETUPVAL 	R2 U3 ; R2 := U3
	28	[4869]	GETTABLE 	R2 R2 K7 ; R2 := R2[0x08681f50]
	29	[4869]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	30	[4869]	GETTABLE 	R4 R1 K6 ; R4 := R1["mStoreItem"]
	31	[4869]	NEWTABLE 	R5 0 3 ; R5 := {}
	32	[4869]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	33	[4869]	SETTABLE 	R5 K8 R6 ; R5["GameData"] := R6
	34	[4869]	NEWTABLE 	R6 0 1 ; R6 := {}
	35	[4869]	GETTABLE 	R7 R1 K11 ; R7 := R1["Item"]
	36	[4869]	TEST     	R7 1 ; if R7 then PC := 39
	37	[4869]	JMP      	39 ; PC := 39
	38	[4869]	GETTABLE 	R7 R1 K12 ; R7 := R1["WeaponInfo"]
	39	[4869]	SETTABLE 	R6 K11 R7 ; R6["Item"] := R7
	40	[4869]	SETTABLE 	R5 K10 R6 ; R5["ItemInfo"] := R6
	41	[4869]	SETTABLE 	R5 K13 K14 ; R5["SalvageRepaired"] := true
	42	[4869]	GETUPVAL 	R6 U4 ; R6 := U4
	43	[4869]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	44	[4870]	GETTABLE 	R3 R1 K15 ; R3 := R1["UID"]
	45	[4870]	SETTABLE 	R2 K15 R3 ; R2["UID"] := R3
	46	[4871]	SETTABLE 	R2 K16 K14 ; R2["AllInOne"] := true
	47	[4874]	GETTABLE 	R3 R2 K17 ; R3 := R2["RawItem"]
	48	[4874]	GETTABLE 	R4 R1 K18 ; R4 := R1["mUpgradeType"]
	49	[4874]	SETTABLE 	R3 K18 R4 ; R3["mUpgradeType"] := R4
	50	[4875]	GETTABLE 	R3 R2 K17 ; R3 := R2["RawItem"]
	51	[4875]	GETTABLE 	R4 R1 K19 ; R4 := R1["mUpgradeFingerprint"]
	52	[4875]	SETTABLE 	R3 K19 R4 ; R3["mUpgradeFingerprint"] := R4
	53	[4877]	GETGLOBAL	R3 K20 ; R3 := _T
	54	[4877]	GETTABLE 	R3 R3 K21 ; R3 := R3[0x0e3bd89d]
	55	[4877]	MOVE     	R4 R2 ; R4 := R2
	56	[4877]	LOADK    	R5 K22 ; R5 := "2"
	57	[4877]	LOADK    	R6 K23 ; R6 := "/Lotus/Language/Menu/Loadout_Installed"
	58	[4877]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	59	[4877]	TEST     	R3 0 ; if not R3 then PC := 73
	60	[4877]	JMP      	73 ; PC := 73
	61	[4878]	GETGLOBAL	R3 K24 ; R3 := mStats
	62	[4878]	GETGLOBAL	R4 K26 ; R4 := mActiveState
	63	[4878]	GETUPVAL 	R5 U5 ; R5 := U5
	64	[4878]	GETTABLE 	R5 R5 K27 ; R5 := R5["WEAPON_INV"]
	65	[4878]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 68
	66	[4878]	JMP      	68 ; PC := 68
	67	[4878]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 68
	68	[4878]	OP_LOADBOOL	R4 1 0 ; R4 := true
	69	[4878]	SETTABLE 	R3 K25 R4 ; R3["mFadeThemedStats"] := R4
	70	[4879]	GETGLOBAL	R3 K24 ; R3 := mStats
	71	[4879]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x71e9ac81]
	72	[4879]	CALL     	R3 2 1 ; R3(R4)
	73	[4882]	RETURN   	R0 1 ; return 

function #141 <?:4884,4894> (22 instructions, 88 bytes at 0000021118E095F0)
1 param, 8 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[4885]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[4885]	SETTABLE 	R1 K1 K2 ; R1["InfoPopup_Data2"] := nil
	3	[4886]	GETGLOBAL	R1 K3 ; R1 := mStats
	4	[4886]	SETTABLE 	R1 K4 K5 ; R1["mFadeThemedStats"] := false
	5	[4887]	GETGLOBAL	R1 K3 ; R1 := mStats
	6	[4887]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x71e9ac81]
	7	[4887]	CALL     	R1 2 1 ; R1(R2)
	8	[4889]	GETTABLE 	R1 R0 K7 ; R1 := R0["mClipName"]
	9	[4889]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 12
	10	[4889]	JMP      	12 ; PC := 12
	11	[4890]	RETURN   	R0 1 ; return 
	12	[4893]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4893]	GETTABLE 	R1 R1 K8 ; R1 := R1[0xb496de90]
	14	[4893]	GETGLOBAL	R2 K9 ; R2 := 0xae91e43b
	15	[4893]	GETGLOBAL	R3 K10 ; R3 := mInventoryGrid
	16	[4893]	MOVE     	R4 R0 ; R4 := R0
	17	[4893]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[4893]	MOVE     	R6 R0 ; R6 := R0
	19	[4893]	OP_LOADBOOL	R7 0 0 ; R7 := false
	20	[4893]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	21	[4893]	CALL     	R1 0 1 ; R1(R2,...)
	22	[4894]	RETURN   	R0 1 ; return 

function #142 <?:4896,4925> (79 instructions, 316 bytes at 0000021118E09820)
2 params, 16 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[4897]	LOADK    	R2 := 0.000000
	2	[4898]	LOADNIL  	R3 R3 ; R3 := nil
	3	[4899]	LOADK    	R4 := 0.000000
	4	[4900]	GETTABLE 	R5 R1 K0 ; R5 := R1["SalvageState"]
	5	[4900]	GETUPVAL 	R6 U0 ; R6 := U0
	6	[4900]	GETTABLE 	R6 R6 K1 ; R6 := R6["IDENTIFIED"]
	7	[4900]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 14
	8	[4900]	JMP      	14 ; PC := 14
	9	[4900]	GETTABLE 	R5 R1 K0 ; R5 := R1["SalvageState"]
	10	[4900]	GETUPVAL 	R6 U0 ; R6 := U0
	11	[4900]	GETTABLE 	R6 R6 K2 ; R6 := R6["AWAITING_FUNDS"]
	12	[4900]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 18
	13	[4900]	JMP      	18 ; PC := 18
	14	[4901]	LOADK    	R2 := 100.000000
	15	[4902]	GETGLOBAL	R3 K3 ; R3 := 0x1df5e886
	16	[4903]	GETTABLE 	R4 R1 K4 ; R4 := R1["SalvageProgress"]
	17	[4903]	JMP      	54 ; PC := 54
	18	[4904]	GETTABLE 	R5 R1 K0 ; R5 := R1["SalvageState"]
	19	[4904]	GETUPVAL 	R6 U0 ; R6 := U0
	20	[4904]	GETTABLE 	R6 R6 K5 ; R6 := R6["AWAITING_COMPLETION"]
	21	[4904]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 37
	22	[4904]	JMP      	37 ; PC := 37
	23	[4905]	LOADK    	R2 := 100.000000
	24	[4906]	GETGLOBAL	R3 K6 ; R3 := 0xfd917bce
	25	[4907]	GETGLOBAL	R5 K7 ; R5 := 0xb009bbc6
	26	[4907]	GETTABLE 	R6 R1 K8 ; R6 := R1["SalvageRecipe"]
	27	[4907]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[4908]	GETGLOBAL	R6 K9 ; R6 := 0x34291f5c
	29	[4908]	GETTABLE 	R6 R6 K10 ; R6 := R6[0x397b920f]
	30	[4908]	GETTABLE 	R7 R1 K11 ; R7 := R1["SalvageTimeRemaining"]
	31	[4908]	CALL     	R6 2 2 ; R6 := R6(R7)
	32	[4909]	SELF     	R7 R5 K12 ; R8 := R5; R7 := R5[0xfd536ae6]
	33	[4909]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[4910]	DIV      	R8 R6 R7 ; R8 := R6 / R7
	35	[4910]	SUB      	R4 K13 R8 ; R4 := 1.000000 - R8
	36	[4910]	JMP      	54 ; PC := 54
	37	[4911]	GETTABLE 	R8 R1 K0 ; R8 := R1["SalvageState"]
	38	[4911]	GETUPVAL 	R9 U0 ; R9 := U0
	39	[4911]	GETTABLE 	R9 R9 K14 ; R9 := R9["COMPLETED"]
	40	[4911]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 46
	41	[4911]	JMP      	46 ; PC := 46
	42	[4912]	LOADK    	R2 := 100.000000
	43	[4913]	GETGLOBAL	R3 K15 ; R3 := 0x006f77b2
	44	[4914]	LOADK    	R4 := 1.000000
	45	[4914]	JMP      	54 ; PC := 54
	46	[4915]	GETTABLE 	R8 R1 K0 ; R8 := R1["SalvageState"]
	47	[4915]	GETUPVAL 	R9 U0 ; R9 := U0
	48	[4915]	GETTABLE 	R9 R9 K16 ; R9 := R9["UNIDENTIFIED"]
	49	[4915]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 54
	50	[4915]	JMP      	54 ; PC := 54
	51	[4916]	LOADK    	R2 := 100.000000
	52	[4917]	GETGLOBAL	R3 K17 ; R3 := 0x7accb9a0
	53	[4918]	LOADK    	R4 := 0.000000
	54	[4921]	GETGLOBAL	R8 K18 ; R8 := 0xae91e43b
	55	[4921]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0xf64b7262]
	56	[4921]	MOVE     	R10 R0 ; R10 := R0
	57	[4921]	LOADK    	R11 K4 ; R11 := "SalvageProgress"
	58	[4921]	LOADK    	R12 := 10.000000
	59	[4921]	MOVE     	R13 R2 ; R13 := R2
	60	[4921]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	61	[4922]	GETGLOBAL	R8 K18 ; R8 := 0xae91e43b
	62	[4922]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0x1cb415c1]
	63	[4922]	MOVE     	R10 R0 ; R10 := R0
	64	[4922]	LOADK    	R11 K21 ; R11 := ".SalvageProgress.Icon"
	65	[4922]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	66	[4922]	MOVE     	R11 R3 ; R11 := R3
	67	[4922]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	68	[4924]	GETGLOBAL	R8 K18 ; R8 := 0xae91e43b
	69	[4924]	SELF     	R8 R8 K22 ; R9 := R8; R8 := R8[0x91e13703]
	70	[4924]	MOVE     	R10 R0 ; R10 := R0
	71	[4924]	LOADK    	R11 K23 ; R11 := ".SalvageProgress.Fill"
	72	[4924]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	73	[4924]	LOADK    	R11 K24 ; R11 := "AlphaTestThreshold"
	74	[4924]	MOVE     	R12 R4 ; R12 := R4
	75	[4924]	LOADK    	R13 := 0.000000
	76	[4924]	LOADK    	R14 := 0.000000
	77	[4924]	LOADK    	R15 := 0.000000
	78	[4924]	CALL     	R8 8 1 ; R8(R9,R10,R11,R12,R13,R14,R15)
	79	[4925]	RETURN   	R0 1 ; return 

function #143 <?:4927,4935> (25 instructions, 100 bytes at 0000021118E09CF0)
1 param, 9 slots, 3 upvalues, 0 locals, 6 constants, 0 functions
	1	[4928]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4928]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4928]	JMP      	5 ; PC := 5
	4	[4929]	RETURN   	R0 1 ; return 
	5	[4932]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4932]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xc339daf7]
	7	[4932]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4932]	GETGLOBAL	R3 K4 ; R3 := mInventoryGrid
	9	[4932]	MOVE     	R4 R0 ; R4 := R0
	10	[4932]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4932]	MOVE     	R6 R0 ; R6 := R0
	12	[4932]	GETGLOBAL	R7 K4 ; R7 := mInventoryGrid
	13	[4932]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xed1ab921]
	14	[4932]	CALL     	R7 2 2 ; R7 := R7(R8)
	15	[4932]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 18
	16	[4932]	JMP      	18 ; PC := 18
	17	[4932]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 18
	18	[4932]	OP_LOADBOOL	R7 1 0 ; R7 := true
	19	[4932]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	20	[4932]	CALL     	R1 0 1 ; R1(R2,...)
	21	[4934]	GETUPVAL 	R1 U2 ; R1 := U2
	22	[4934]	GETTABLE 	R2 R0 K0 ; R2 := R0["mClipName"]
	23	[4934]	MOVE     	R3 R0 ; R3 := R0
	24	[4934]	CALL     	R1 3 1 ; R1(R2,R3)
	25	[4935]	RETURN   	R0 1 ; return 

function #144 <?:4937,5148> (399 instructions, 1596 bytes at 0000021118E09EF0)
0 params, 13 slots, 12 upvalues, 0 locals, 122 constants, 11 functions
	1	[4938]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4938]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4938]	LOADK    	R2 K2 ; R2 := "TopLeftContainer.Inventory.Items"
	4	[4938]	LOADK    	R3 := 1.000000
	5	[4938]	LOADK    	R4 := -60.000000
	6	[4938]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4939]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	8	[4939]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	9	[4939]	LOADK    	R2 K3 ; R2 := "TopLeftContainer.Inventory.ScrollBar"
	10	[4939]	LOADK    	R3 := 1.000000
	11	[4939]	LOADK    	R4 := -124.000000
	12	[4939]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	13	[4941]	GETGLOBAL	R0 K4 ; R0 := 0x2d0fad09
	14	[4941]	LOADK    	R1 K5 ; R1 := "Lotus.Interface.Components.CategorizedGrid"
	15	[4941]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[4942]	GETTABLE 	R1 R0 K7 ; R1 := R0[0x67d7b715]
	17	[4942]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	18	[4942]	LOADK    	R3 K8 ; R3 := "TopLeftContainer.Inventory.Items.Item"
	19	[4942]	LOADK    	R4 := 3.000000
	20	[4942]	LOADK    	R5 := 3.000000
	21	[4942]	LOADK    	R6 K9 ; R6 := "TopLeftContainer.Inventory.Categories.Menu"
	22	[4942]	LOADK    	R7 K10 ; R7 := "TopLeftContainer.Inventory.SearchAndSort.SortMenu"
	23	[4942]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	24	[4942]	SETGLOBALHASH	R1 K6 ; mInventoryGrid := R1
	25	[4943]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	26	[4943]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	27	[4943]	LOADK    	R3 K12 ; R3 := "InventorySelected"
	28	[4943]	LOADK    	R4 K13 ; R4 := "InventoryFocused"
	29	[4943]	LOADK    	R5 K14 ; R5 := "InventoryUnfocused"
	30	[4943]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	31	[4944]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	32	[4944]	SETTABLE 	R1 K15 K16 ; R1["mShowLabels"] := true
	33	[4945]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	34	[4945]	SETTABLE 	R1 K17 K16 ; R1["SkipReinitializePos"] := true
	35	[4946]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	36	[4946]	SETTABLE 	R1 K18 K19 ; R1["Width"] := 500.000000
	37	[4947]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	38	[4947]	SETTABLE 	R1 K20 K21 ; R1["ElementDimBuffer"] := 20.000000
	39	[4948]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	40	[4948]	SETTABLE 	R1 K22 K23 ; R1["ElementWidth"] := 142.000000
	41	[4949]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	42	[4949]	SETTABLE 	R1 K24 K23 ; R1["ElementHeight"] := 142.000000
	43	[4950]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	44	[4950]	GETGLOBAL	R2 K6 ; R2 := mInventoryGrid
	45	[4950]	GETTABLE 	R2 R2 K22 ; R2 := R2["ElementWidth"]
	46	[4950]	DIV      	R2 R2 K26 ; R2 := R2 / 2.000000
	47	[4950]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	48	[4950]	GETTABLE 	R3 R3 K20 ; R3 := R3["ElementDimBuffer"]
	49	[4950]	ADD      	R2 R2 R3 ; R2 := R2 + R3
	50	[4950]	SETTABLE 	R1 K25 R2 ; R1["mScrollBarHorizontalOffset"] := R2
	51	[4951]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	52	[4951]	SETTABLE 	R1 K27 K28 ; R1["mSelectedScale"] := 100.000000
	53	[4952]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	54	[4952]	GETTABLE 	R1 R1 K29 ; R1 := R1["mSortMenu"]
	55	[4952]	SELF     	R1 R1 K30 ; R2 := R1; R1 := R1[0x8d77b2b2]
	56	[4952]	LOADK    	R3 := 239.000000
	57	[4952]	CALL     	R1 3 1 ; R1(R2,R3)
	58	[4953]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	59	[4953]	SETTABLE 	R1 K31 K16 ; R1["mUseCornerForSelected"] := true
	60	[4954]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	61	[4954]	SETTABLE 	R1 K32 K33 ; R1["mSelectElementsOnFocus"] := false
	62	[4955]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	63	[4955]	SETTABLE 	R1 K34 K33 ; R1["mWrapAroundNavigation"] := false
	64	[4956]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	65	[4956]	SETTABLE 	R1 K35 K36 ; R1["mPrevSelectedId"] := nil
	66	[4957]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	67	[4957]	GETTABLE 	R1 R1 K37 ; R1 := R1["mCategoryMenu"]
	68	[4957]	GETUPVAL 	R2 U0 ; R2 := U0
	69	[4957]	GETTABLE 	R2 R2 K39 ; R2 := R2["LEFT_ALIGNED"]
	70	[4957]	SETTABLE 	R1 K38 R2 ; R1["mAlign"] := R2
	71	[4958]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	72	[4958]	GETTABLE 	R1 R1 K37 ; R1 := R1["mCategoryMenu"]
	73	[4958]	SETTABLE 	R1 K40 K16 ; R1["mHideEmptyCategories"] := true
	74	[4959]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	75	[4959]	GETTABLE 	R1 R1 K37 ; R1 := R1["mCategoryMenu"]
	76	[4959]	SETTABLE 	R1 K41 K33 ; R1["mUseOriginalDimensions"] := false
	77	[4960]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	78	[4960]	GETGLOBAL	R2 K43 ; R2 := 0x5b54ec72
	79	[4960]	SETTABLE 	R1 K42 R2 ; R1["RectangleVisibleRangeMaterial"] := R2
	80	[4961]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	81	[4961]	GETGLOBAL	R2 K45 ; R2 := 0x0f20c9bd
	82	[4961]	SETTABLE 	R1 K44 R2 ; R1["VisibleRangeMaterial"] := R2
	83	[4962]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	84	[4962]	GETGLOBAL	R2 K47 ; R2 := 0x09b6dacc
	85	[4962]	SETTABLE 	R1 K46 R2 ; R1["TextVisibleRangeMaterial"] := R2
	86	[4963]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	87	[4963]	SELF     	R1 R1 K48 ; R2 := R1; R1 := R1[0x3bc79f4f]
	88	[4963]	LOADK    	R3 K3 ; R3 := "TopLeftContainer.Inventory.ScrollBar"
	89	[4963]	CALL     	R1 3 1 ; R1(R2,R3)
	90	[4964]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	91	[4964]	SELF     	R1 R1 K49 ; R2 := R1; R1 := R1[0x7220acb6]
	92	[4964]	CALL     	R1 2 1 ; R1(R2)
	93	[4965]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	94	[4965]	GETUPVAL 	R2 U1 ; R2 := U1
	95	[4965]	SETTABLE 	R1 K50 R2 ; R1["mClipCreatedCallback"] := R2
	96	[4966]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	97	[4966]	GETUPVAL 	R2 U2 ; R2 := U2
	98	[4966]	SETTABLE 	R1 K51 R2 ; R1["mOnFocusedCallback"] := R2
	99	[4967]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	100	[4967]	GETUPVAL 	R2 U3 ; R2 := U3
	101	[4967]	SETTABLE 	R1 K52 R2 ; R1["mOnUnfocusedCallback"] := R2
	102	[4968]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	103	[4968]	GETUPVAL 	R2 U4 ; R2 := U4
	104	[4968]	SETTABLE 	R1 K53 R2 ; R1["mElementDrawCallback"] := R2
	105	[4969]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	106	[4969]	GETGLOBAL	R2 K6 ; R2 := mInventoryGrid
	107	[4969]	GETTABLE 	R2 R2 K55 ; R2 := R2["Redraw"]
	108	[4969]	SETTABLE 	R1 K54 R2 ; R1["BaseRedraw"] := R2
	109	[4970]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	110	[4975]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	111	[4975]	GETUPVAL 	R0 U5 ; R0 := U5
	112	[4975]	GETUPVAL 	R0 U6 ; R0 := U6
	113	[4975]	SETTABLE 	R1 K55 R2 ; R1["Redraw"] := R2
	114	[4976]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	115	[5015]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	116	[5015]	GETUPVAL 	R0 U0 ; R0 := U0
	117	[5015]	GETUPVAL 	R0 U4 ; R0 := U4
	118	[5015]	GETUPVAL 	R0 U7 ; R0 := U7
	119	[5015]	GETUPVAL 	R0 U6 ; R0 := U6
	120	[5015]	GETUPVAL 	R0 U5 ; R0 := U5
	121	[5015]	GETUPVAL 	R0 U8 ; R0 := U8
	122	[5015]	GETUPVAL 	R0 U9 ; R0 := U9
	123	[5015]	GETUPVAL 	R0 U10 ; R0 := U10
	124	[5015]	SETTABLE 	R1 K56 R2 ; R1["mOnSelectedCallback"] := R2
	125	[5016]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	126	[5019]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	127	[5019]	GETUPVAL 	R0 U8 ; R0 := U8
	128	[5019]	SETTABLE 	R1 K57 R2 ; R1["mOnDoubleClickCallback"] := R2
	129	[5020]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	130	[5028]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	131	[5028]	SETTABLE 	R1 K58 R2 ; R1["AdditionalFilterFunction"] := R2
	132	[5046]	CLOSURE  	R1 4 ; R1 := closure(Function #5)
	133	[5046]	GETUPVAL 	R0 U7 ; R0 := U7
	134	[5054]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	135	[5056]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	136	[5056]	SELF     	R3 R3 K59 ; R4 := R3; R3 := R3[0xb029c588]
	137	[5056]	NEWTABLE 	R5 0 3 ; R5 := {}
	138	[5056]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	139	[5056]	SELF     	R6 R6 K61 ; R7 := R6; R6 := R6[0x42b04007]
	140	[5056]	LOADK    	R8 K62 ; R8 := "/Lotus/Language/Menu/SortBy_Name"
	141	[5056]	OP_LOADBOOL	R9 0 0 ; R9 := false
	142	[5056]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	143	[5056]	SETTABLE 	R5 K60 R6 ; R5["Name"] := R6
	144	[5056]	SETTABLE 	R5 K63 K64 ; R5["SortId"] := "NAME"
	145	[5063]	CLOSURE  	R6 6 ; R6 := closure(Function #7)
	146	[5063]	MOVE     	R0 R1 ; R0 := R1
	147	[5063]	MOVE     	R0 R2 ; R0 := R2
	148	[5063]	SETTABLE 	R5 K65 R6 ; R5["Attribute"] := R6
	149	[5056]	CALL     	R3 3 1 ; R3(R4,R5)
	150	[5064]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	151	[5064]	SELF     	R3 R3 K59 ; R4 := R3; R3 := R3[0xb029c588]
	152	[5064]	NEWTABLE 	R5 0 3 ; R5 := {}
	153	[5064]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	154	[5064]	SELF     	R6 R6 K61 ; R7 := R6; R6 := R6[0x42b04007]
	155	[5064]	LOADK    	R8 K66 ; R8 := "/Lotus/Language/Menu/SortBy_Level"
	156	[5064]	OP_LOADBOOL	R9 0 0 ; R9 := false
	157	[5064]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	158	[5064]	SETTABLE 	R5 K60 R6 ; R5["Name"] := R6
	159	[5064]	SETTABLE 	R5 K63 K67 ; R5["SortId"] := "MK_TIER"
	160	[5080]	CLOSURE  	R6 7 ; R6 := closure(Function #8)
	161	[5080]	MOVE     	R0 R1 ; R0 := R1
	162	[5080]	MOVE     	R0 R2 ; R0 := R2
	163	[5080]	SETTABLE 	R5 K65 R6 ; R5["Attribute"] := R6
	164	[5064]	CALL     	R3 3 1 ; R3(R4,R5)
	165	[5081]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	166	[5081]	SELF     	R3 R3 K59 ; R4 := R3; R3 := R3[0xb029c588]
	167	[5081]	NEWTABLE 	R5 0 3 ; R5 := {}
	168	[5081]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	169	[5081]	SELF     	R6 R6 K61 ; R7 := R6; R6 := R6[0x42b04007]
	170	[5081]	LOADK    	R8 K68 ; R8 := "/Lotus/Language/Menu/SortBy_Type"
	171	[5081]	OP_LOADBOOL	R9 0 0 ; R9 := false
	172	[5081]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	173	[5081]	SETTABLE 	R5 K60 R6 ; R5["Name"] := R6
	174	[5081]	SETTABLE 	R5 K63 K69 ; R5["SortId"] := "BRAND"
	175	[5092]	CLOSURE  	R6 8 ; R6 := closure(Function #9)
	176	[5092]	MOVE     	R0 R1 ; R0 := R1
	177	[5092]	MOVE     	R0 R2 ; R0 := R2
	178	[5092]	SETTABLE 	R5 K65 R6 ; R5["Attribute"] := R6
	179	[5081]	CALL     	R3 3 1 ; R3(R4,R5)
	180	[5093]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	181	[5093]	SELF     	R3 R3 K70 ; R4 := R3; R3 := R3[0x492f9da2]
	182	[5093]	CALL     	R3 2 2 ; R3 := R3(R4)
	183	[5094]	GETGLOBAL	R4 K71 ; R4 := 0x25d99d89
	184	[5094]	SELF     	R4 R4 K72 ; R5 := R4; R4 := R4[0xb6b7ca1e]
	185	[5094]	MOVE     	R6 R3 ; R6 := R3
	186	[5094]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	187	[5095]	EQ       	0 R4 K73 ; if R4 ~= "" then PC := 190
	188	[5095]	JMP      	190 ; PC := 190
	189	[5096]	LOADK    	R4 K64 ; R4 := "NAME"
	190	[5098]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	191	[5098]	SELF     	R5 R5 K74 ; R6 := R5; R5 := R5[0x60125a4f]
	192	[5098]	MOVE     	R7 R4 ; R7 := R4
	193	[5098]	CALL     	R5 3 1 ; R5(R6,R7)
	194	[5100]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	195	[5100]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	196	[5100]	NEWTABLE 	R7 0 3 ; R7 := {}
	197	[5100]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	198	[5100]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	199	[5100]	LOADK    	R10 K76 ; R10 := "/Lotus/Language/Menu/CategoryAll"
	200	[5100]	OP_LOADBOOL	R11 0 0 ; R11 := false
	201	[5100]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	202	[5100]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	203	[5100]	GETGLOBAL	R8 K78 ; R8 := 0x0032441c
	204	[5100]	GETTABLE 	R8 R8 K79 ; R8 := R8["UICategoryIcon_AllOn"]
	205	[5100]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	206	[5100]	SETTABLE 	R7 K80 K81 ; R7["Category"] := 0.000000
	207	[5100]	CALL     	R5 3 1 ; R5(R6,R7)
	208	[5101]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	209	[5101]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	210	[5101]	NEWTABLE 	R7 0 3 ; R7 := {}
	211	[5101]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	212	[5101]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	213	[5101]	LOADK    	R10 K82 ; R10 := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKI"
	214	[5101]	OP_LOADBOOL	R11 0 0 ; R11 := false
	215	[5101]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	216	[5101]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	217	[5101]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	218	[5101]	GETUPVAL 	R9 U11 ; R9 := U11
	219	[5101]	GETTABLE 	R9 R9 K84 ; R9 := R9["MKI"]
	220	[5101]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	221	[5101]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	222	[5101]	GETUPVAL 	R8 U11 ; R8 := U11
	223	[5101]	GETTABLE 	R8 R8 K84 ; R8 := R8["MKI"]
	224	[5101]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	225	[5101]	CALL     	R5 3 1 ; R5(R6,R7)
	226	[5102]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	227	[5102]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	228	[5102]	NEWTABLE 	R7 0 3 ; R7 := {}
	229	[5102]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	230	[5102]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	231	[5102]	LOADK    	R10 K85 ; R10 := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKII"
	232	[5102]	OP_LOADBOOL	R11 0 0 ; R11 := false
	233	[5102]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	234	[5102]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	235	[5102]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	236	[5102]	GETUPVAL 	R9 U11 ; R9 := U11
	237	[5102]	GETTABLE 	R9 R9 K86 ; R9 := R9["MKII"]
	238	[5102]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	239	[5102]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	240	[5102]	GETUPVAL 	R8 U11 ; R8 := U11
	241	[5102]	GETTABLE 	R8 R8 K86 ; R8 := R8["MKII"]
	242	[5102]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	243	[5102]	CALL     	R5 3 1 ; R5(R6,R7)
	244	[5103]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	245	[5103]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	246	[5103]	NEWTABLE 	R7 0 3 ; R7 := {}
	247	[5103]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	248	[5103]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	249	[5103]	LOADK    	R10 K87 ; R10 := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKIII"
	250	[5103]	OP_LOADBOOL	R11 0 0 ; R11 := false
	251	[5103]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	252	[5103]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	253	[5103]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	254	[5103]	GETUPVAL 	R9 U11 ; R9 := U11
	255	[5103]	GETTABLE 	R9 R9 K88 ; R9 := R9["MKIII"]
	256	[5103]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	257	[5103]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	258	[5103]	GETUPVAL 	R8 U11 ; R8 := U11
	259	[5103]	GETTABLE 	R8 R8 K88 ; R8 := R8["MKIII"]
	260	[5103]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	261	[5103]	CALL     	R5 3 1 ; R5(R6,R7)
	262	[5104]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	263	[5104]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	264	[5104]	NEWTABLE 	R7 0 3 ; R7 := {}
	265	[5104]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	266	[5104]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	267	[5104]	LOADK    	R10 K89 ; R10 := "/Lotus/Language/Menu/AP_TACTIC_RAILJACK"
	268	[5104]	OP_LOADBOOL	R11 0 0 ; R11 := false
	269	[5104]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	270	[5104]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	271	[5104]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	272	[5104]	GETUPVAL 	R9 U11 ; R9 := U11
	273	[5104]	GETTABLE 	R9 R9 K90 ; R9 := R9["LAVAN"]
	274	[5104]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	275	[5104]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	276	[5104]	GETUPVAL 	R8 U11 ; R8 := U11
	277	[5104]	GETTABLE 	R8 R8 K90 ; R8 := R8["LAVAN"]
	278	[5104]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	279	[5104]	CALL     	R5 3 1 ; R5(R6,R7)
	280	[5105]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	281	[5105]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	282	[5105]	NEWTABLE 	R7 0 3 ; R7 := {}
	283	[5105]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	284	[5105]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	285	[5105]	LOADK    	R10 K91 ; R10 := "/Lotus/Language/Menu/AP_ATTACK_RAILJACK"
	286	[5105]	OP_LOADBOOL	R11 0 0 ; R11 := false
	287	[5105]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	288	[5105]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	289	[5105]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	290	[5105]	GETUPVAL 	R9 U11 ; R9 := U11
	291	[5105]	GETTABLE 	R9 R9 K92 ; R9 := R9["VIDAR"]
	292	[5105]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	293	[5105]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	294	[5105]	GETUPVAL 	R8 U11 ; R8 := U11
	295	[5105]	GETTABLE 	R8 R8 K92 ; R8 := R8["VIDAR"]
	296	[5105]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	297	[5105]	CALL     	R5 3 1 ; R5(R6,R7)
	298	[5106]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	299	[5106]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	300	[5106]	NEWTABLE 	R7 0 3 ; R7 := {}
	301	[5106]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	302	[5106]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	303	[5106]	LOADK    	R10 K93 ; R10 := "/Lotus/Language/Menu/AP_DEFENSE_RAILJACK"
	304	[5106]	OP_LOADBOOL	R11 0 0 ; R11 := false
	305	[5106]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	306	[5106]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	307	[5106]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	308	[5106]	GETUPVAL 	R9 U11 ; R9 := U11
	309	[5106]	GETTABLE 	R9 R9 K94 ; R9 := R9["ZEKTI"]
	310	[5106]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	311	[5106]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	312	[5106]	GETUPVAL 	R8 U11 ; R8 := U11
	313	[5106]	GETTABLE 	R8 R8 K94 ; R8 := R8["ZEKTI"]
	314	[5106]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	315	[5106]	CALL     	R5 3 1 ; R5(R6,R7)
	316	[5107]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	317	[5107]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	318	[5107]	NEWTABLE 	R7 0 3 ; R7 := {}
	319	[5107]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	320	[5107]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	321	[5107]	LOADK    	R10 K95 ; R10 := "/Lotus/Language/Menu/AP_UNIVERSAL_RAILJACK"
	322	[5107]	OP_LOADBOOL	R11 0 0 ; R11 := false
	323	[5107]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	324	[5107]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	325	[5107]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	326	[5107]	GETUPVAL 	R9 U11 ; R9 := U11
	327	[5107]	GETTABLE 	R9 R9 K96 ; R9 := R9["SIGMA"]
	328	[5107]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	329	[5107]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	330	[5107]	GETUPVAL 	R8 U11 ; R8 := U11
	331	[5107]	GETTABLE 	R8 R8 K96 ; R8 := R8["SIGMA"]
	332	[5107]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	333	[5107]	CALL     	R5 3 1 ; R5(R6,R7)
	334	[5108]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	335	[5108]	SELF     	R5 R5 K97 ; R6 := R5; R5 := R5[0xabe497fe]
	336	[5108]	LOADK    	R7 := 0.000000
	337	[5108]	CALL     	R5 3 1 ; R5(R6,R7)
	338	[5110]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	339	[5110]	SELF     	R5 R5 K98 ; R6 := R5; R5 := R5[0x71e9ac81]
	340	[5110]	CALL     	R5 2 1 ; R5(R6)
	341	[5112]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	342	[5112]	SELF     	R5 R5 K61 ; R6 := R5; R5 := R5[0x42b04007]
	343	[5112]	LOADK    	R7 K99 ; R7 := "/Lotus/Language/Menu/SearchPrompt"
	344	[5112]	OP_LOADBOOL	R8 0 0 ; R8 := false
	345	[5112]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	346	[5113]	GETGLOBAL	R6 K4 ; R6 := 0x2d0fad09
	347	[5113]	LOADK    	R7 K100 ; R7 := "Lotus.Interface.Components.ThemedInputField"
	348	[5113]	CALL     	R6 2 2 ; R6 := R6(R7)
	349	[5114]	GETTABLE 	R7 R6 K102 ; R7 := R6[0xae6791ba]
	350	[5114]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	351	[5114]	LOADK    	R9 K103 ; R9 := "TopLeftContainer.Inventory.SearchAndSort.SearchBox"
	352	[5114]	LOADNIL  	R10 R11 ; R10 := R11 := nil
	353	[5114]	LOADK    	R12 K104 ; R12 := "<MENU_LTHUMB>"
	354	[5114]	CALL     	R7 6 2 ; R7 := R7(R8,R9,R10,R11,R12)
	355	[5114]	SETGLOBALHASH	R7 K101 ; mSearchBox := R7
	356	[5115]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	357	[5115]	SELF     	R7 R7 K105 ; R8 := R7; R7 := R7[0xf87811f6]
	358	[5115]	GETGLOBAL	R9 K101 ; R9 := mSearchBox
	359	[5115]	GETTABLE 	R9 R9 K106 ; R9 := R9["TYPE"]
	360	[5115]	GETTABLE 	R9 R9 K107 ; R9 := R9["PLAIN"]
	361	[5115]	MOVE     	R10 R5 ; R10 := R5
	362	[5115]	MOVE     	R11 R5 ; R11 := R5
	363	[5115]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	364	[5116]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	365	[5116]	SETTABLE 	R7 K108 K109 ; R7["mMinSize"] := 239.000000
	366	[5117]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	367	[5117]	SETTABLE 	R7 K110 K109 ; R7["mMaxSize"] := 239.000000
	368	[5118]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	369	[5118]	SETTABLE 	R7 K111 K112 ; R7["mTextBuffer"] := 4.000000
	370	[5119]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	371	[5119]	GETGLOBAL	R8 K78 ; R8 := 0x0032441c
	372	[5119]	GETTABLE 	R8 R8 K114 ; R8 := R8["UITexture_Search"]
	373	[5119]	SETTABLE 	R7 K113 R8 ; R7["mAltButtonIcon"] := R8
	374	[5120]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	375	[5120]	SETTABLE 	R7 K115 K16 ; R7["mAltButtonVisible"] := true
	376	[5121]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	377	[5121]	SETTABLE 	R7 K116 K36 ; R7["mUnfocusedUnderlineColorOverride"] := nil
	378	[5122]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	379	[5122]	GETGLOBAL	R8 K101 ; R8 := mSearchBox
	380	[5122]	GETTABLE 	R8 R8 K118 ; R8 := R8["InputFieldTextChanged"]
	381	[5122]	SETTABLE 	R7 K117 R8 ; R7["BaseInputFieldTextChanged"] := R8
	382	[5123]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	383	[5137]	CLOSURE  	R8 9 ; R8 := closure(Function #10)
	384	[5137]	SETTABLE 	R7 K118 R8 ; R7["InputFieldTextChanged"] := R8
	385	[5138]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	386	[5138]	GETGLOBAL	R8 K101 ; R8 := mSearchBox
	387	[5138]	GETTABLE 	R8 R8 K120 ; R8 := R8["OnGamepadTransition"]
	388	[5138]	SETTABLE 	R7 K119 R8 ; R7["BaseOnGamepadTransition"] := R8
	389	[5139]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	390	[5145]	CLOSURE  	R8 10 ; R8 := closure(Function #11)
	391	[5145]	SETTABLE 	R7 K120 R8 ; R7["OnGamepadTransition"] := R8
	392	[5146]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	393	[5146]	SELF     	R7 R7 K121 ; R8 := R7; R7 := R7[0x6e6721d3]
	394	[5146]	LOADK    	R9 K99 ; R9 := "/Lotus/Language/Menu/SearchPrompt"
	395	[5146]	CALL     	R7 3 1 ; R7(R8,R9)
	396	[5147]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	397	[5147]	SELF     	R7 R7 K98 ; R8 := R7; R7 := R7[0x71e9ac81]
	398	[5147]	CALL     	R7 2 1 ; R7(R8)
	399	[5148]	RETURN   	R0 1 ; return 

function #145 <?:5150,5185> (85 instructions, 340 bytes at 0000021118E0D1F0)
0 params, 5 slots, 6 upvalues, 0 locals, 39 constants, 3 functions
	1	[5151]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5151]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x71a5b951]
	3	[5151]	GETUPVAL 	R1 U1 ; R1 := U1
	4	[5151]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	5	[5151]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x25a6e75e]
	6	[5151]	CALL     	R2 2 0 ; R2,... := R2(R3)
	7	[5151]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	8	[5152]	GETGLOBAL	R1 K3 ; R1 := 0x2d0fad09
	9	[5152]	LOADK    	R2 K4 ; R2 := "Lotus.Interface.Components.ThemedCustomizationList"
	10	[5152]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[5153]	GETTABLE 	R2 R1 K6 ; R2 := R1[0xae6791ba]
	12	[5153]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	13	[5153]	LOADK    	R4 K8 ; R4 := "TopLeftContainer.Cosmetics"
	14	[5153]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[5153]	SETGLOBALHASH	R2 K5 ; mCosmeticsList := R2
	16	[5154]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	17	[5154]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	18	[5154]	SETTABLE 	R2 K10 K11 ; R2["mNoneTextOverride"] := "/Lotus/Language/Menu/Cosmetics_None"
	19	[5155]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	20	[5158]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	21	[5158]	GETUPVAL 	R0 U2 ; R0 := U2
	22	[5158]	SETTABLE 	R2 K12 R3 ; R2["StateChangedCallBack"] := R3
	23	[5159]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	24	[5159]	GETGLOBAL	R3 K5 ; R3 := mCosmeticsList
	25	[5159]	GETTABLE 	R3 R3 K14 ; R3 := R3["ResetDefaults"]
	26	[5159]	SETTABLE 	R2 K13 R3 ; R2["_ResetDefaults"] := R3
	27	[5160]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	28	[5164]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	29	[5164]	GETUPVAL 	R0 U3 ; R0 := U3
	30	[5164]	SETTABLE 	R2 K14 R3 ; R2["ResetDefaults"] := R3
	31	[5165]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	32	[5165]	GETGLOBAL	R3 K5 ; R3 := mCosmeticsList
	33	[5165]	GETTABLE 	R3 R3 K16 ; R3 := R3["RandomizeAll"]
	34	[5165]	SETTABLE 	R2 K15 R3 ; R2["_RandomizeAll"] := R3
	35	[5166]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	36	[5170]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	37	[5170]	GETUPVAL 	R0 U3 ; R0 := U3
	38	[5170]	SETTABLE 	R2 K16 R3 ; R2["RandomizeAll"] := R3
	39	[5171]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	40	[5171]	SETTABLE 	R2 K17 K18 ; R2["mShowCosmeticButtons"] := true
	41	[5172]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	42	[5172]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	43	[5172]	SETTABLE 	R2 K19 K18 ; R2["mColorPickerSkipSuitRot"] := true
	44	[5173]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	45	[5173]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	46	[5173]	SETTABLE 	R2 K20 K18 ; R2["mTopTitleForNone"] := true
	47	[5174]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	48	[5174]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	49	[5174]	SETTABLE 	R2 K21 K22 ; R2["mCategorySpacing"] := 10.000000
	50	[5175]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	51	[5175]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	52	[5175]	SETTABLE 	R2 K23 K24 ; R2["mElementWidth"] := 350.000000
	53	[5176]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	54	[5176]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	55	[5176]	SETTABLE 	R2 K25 K26 ; R2["mForcedVerticalSeparation"] := 40.000000
	56	[5177]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	57	[5177]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	58	[5177]	GETUPVAL 	R3 U4 ; R3 := U4
	59	[5177]	SETTABLE 	R2 K27 R3 ; R2["mGoBackCallback"] := R3
	60	[5178]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	61	[5178]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	62	[5178]	GETUPVAL 	R3 U5 ; R3 := U5
	63	[5178]	SETTABLE 	R2 K28 R3 ; R2["mApplyColorCallback"] := R3
	64	[5179]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	65	[5179]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	66	[5179]	SETTABLE 	R2 K29 R0 ; R2["PurchasedItems"] := R0
	67	[5180]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	68	[5180]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	69	[5180]	SETTABLE 	R2 K29 R0 ; R2["PurchasedItems"] := R0
	70	[5181]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	71	[5181]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	72	[5181]	GETGLOBAL	R3 K32 ; R3 := 0x5b54ec72
	73	[5181]	SETTABLE 	R2 K31 R3 ; R2["RectangleVisibleRangeMaterial"] := R3
	74	[5182]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	75	[5182]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	76	[5182]	GETGLOBAL	R3 K34 ; R3 := 0x0f20c9bd
	77	[5182]	SETTABLE 	R2 K33 R3 ; R2["VisibleRangeMaterial"] := R3
	78	[5183]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	79	[5183]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	80	[5183]	GETGLOBAL	R3 K36 ; R3 := 0x09b6dacc
	81	[5183]	SETTABLE 	R2 K35 R3 ; R2["TextVisibleRangeMaterial"] := R3
	82	[5184]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	83	[5184]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	84	[5184]	SETTABLE 	R2 K37 K38 ; R2["mExtraRowScroll"] := 0.600000
	85	[5185]	RETURN   	R0 1 ; return 

function #146 <?:5187,5196> (31 instructions, 124 bytes at 000002111EE992D0)
0 params, 4 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5188]	GETGLOBAL	R0 K1 ; R0 := 0x9ba7909f
	2	[5188]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[5188]	GETGLOBAL	R2 K3 ; R2 := 0x6e48c770
	4	[5188]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[5188]	SETGLOBALHASH	R0 K0 ; mVignetteMovie := R0
	6	[5189]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	7	[5189]	GETGLOBAL	R1 K0 ; R1 := mVignetteMovie
	8	[5189]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[5189]	TEST     	R0 0 ; if not R0 then PC := 16
	10	[5189]	JMP      	16 ; PC := 16
	11	[5190]	GETGLOBAL	R0 K1 ; R0 := 0x9ba7909f
	12	[5190]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xcfba257f]
	13	[5190]	GETGLOBAL	R2 K3 ; R2 := 0x6e48c770
	14	[5190]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	15	[5190]	SETGLOBALHASH	R0 K0 ; mVignetteMovie := R0
	16	[5192]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	17	[5192]	GETGLOBAL	R1 K0 ; R1 := mVignetteMovie
	18	[5192]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[5192]	TEST     	R0 1 ; if R0 then PC := 31
	20	[5192]	JMP      	31 ; PC := 31
	21	[5193]	GETGLOBAL	R0 K0 ; R0 := mVignetteMovie
	22	[5193]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xe4162eed]
	23	[5193]	LOADK    	R2 K7 ; R2 := "EnableColorCorrection"
	24	[5193]	LOADK    	R3 K8 ; R3 := "false"
	25	[5193]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	26	[5194]	GETGLOBAL	R0 K0 ; R0 := mVignetteMovie
	27	[5194]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xe4162eed]
	28	[5194]	LOADK    	R2 K9 ; R2 := "SetHideHud"
	29	[5194]	LOADK    	R3 K8 ; R3 := "false"
	30	[5194]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	31	[5196]	RETURN   	R0 1 ; return 

function #147 <?:5198,5394> (239 instructions, 956 bytes at 000002111EE99530)
0 params, 9 slots, 3 upvalues, 0 locals, 68 constants, 8 functions
	1	[5199]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[5199]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd5181643]
	3	[5199]	LOADK    	R2 K2 ; R2 := "BottomRightContainer.SalvagePanel.Bg"
	4	[5199]	GETGLOBAL	R3 K3 ; R3 := 0x0032441c
	5	[5199]	GETTABLE 	R3 R3 K4 ; R3 := R3["UIMaterial_RectangleNoDepth"]
	6	[5199]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	7	[5200]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	8	[5200]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x91e13703]
	9	[5200]	LOADK    	R2 K2 ; R2 := "BottomRightContainer.SalvagePanel.Bg"
	10	[5200]	LOADK    	R3 K6 ; R3 := "RectInnerColor"
	11	[5200]	GETGLOBAL	R4 K7 ; R4 := mColors
	12	[5200]	GETTABLE 	R4 R4 K8 ; R4 := R4["Background1Object"]
	13	[5200]	GETTABLE 	R4 R4 K9 ; R4 := R4["red"]
	14	[5200]	DIV      	R4 R4 K10 ; R4 := R4 / 255.000000
	15	[5200]	GETGLOBAL	R5 K7 ; R5 := mColors
	16	[5200]	GETTABLE 	R5 R5 K8 ; R5 := R5["Background1Object"]
	17	[5200]	GETTABLE 	R5 R5 K11 ; R5 := R5["green"]
	18	[5200]	DIV      	R5 R5 K10 ; R5 := R5 / 255.000000
	19	[5200]	GETGLOBAL	R6 K7 ; R6 := mColors
	20	[5200]	GETTABLE 	R6 R6 K8 ; R6 := R6["Background1Object"]
	21	[5200]	GETTABLE 	R6 R6 K12 ; R6 := R6["blue"]
	22	[5200]	DIV      	R6 R6 K10 ; R6 := R6 / 255.000000
	23	[5200]	LOADK    	R7 K13 ; R7 := 0.800000
	24	[5200]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	25	[5201]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	26	[5201]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x91e13703]
	27	[5201]	LOADK    	R2 K2 ; R2 := "BottomRightContainer.SalvagePanel.Bg"
	28	[5201]	LOADK    	R3 K14 ; R3 := "RectEdgeColor"
	29	[5201]	GETGLOBAL	R4 K7 ; R4 := mColors
	30	[5201]	GETTABLE 	R4 R4 K15 ; R4 := R4["FloatingContentObject"]
	31	[5201]	GETTABLE 	R4 R4 K9 ; R4 := R4["red"]
	32	[5201]	DIV      	R4 R4 K10 ; R4 := R4 / 255.000000
	33	[5201]	GETGLOBAL	R5 K7 ; R5 := mColors
	34	[5201]	GETTABLE 	R5 R5 K15 ; R5 := R5["FloatingContentObject"]
	35	[5201]	GETTABLE 	R5 R5 K11 ; R5 := R5["green"]
	36	[5201]	DIV      	R5 R5 K10 ; R5 := R5 / 255.000000
	37	[5201]	GETGLOBAL	R6 K7 ; R6 := mColors
	38	[5201]	GETTABLE 	R6 R6 K15 ; R6 := R6["FloatingContentObject"]
	39	[5201]	GETTABLE 	R6 R6 K12 ; R6 := R6["blue"]
	40	[5201]	DIV      	R6 R6 K10 ; R6 := R6 / 255.000000
	41	[5201]	LOADK    	R7 K16 ; R7 := 0.700000
	42	[5201]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	43	[5203]	GETGLOBAL	R0 K17 ; R0 := 0x2d0fad09
	44	[5203]	LOADK    	R1 K18 ; R1 := "Lotus.Interface.Components.ThemedButton"
	45	[5203]	CALL     	R0 2 2 ; R0 := R0(R1)
	46	[5204]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	47	[5204]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	48	[5204]	LOADK    	R3 K21 ; R3 := "BottomRightContainer.SalvagePanel.ScrapBtn"
	49	[5204]	LOADK    	R4 K22 ; R4 := "<FUSION_POINTS_LARGE>"
	50	[5204]	LOADK    	R5 K23 ; R5 := "SellSelectedItem"
	51	[5204]	LOADNIL  	R6 R6 ; R6 := nil
	52	[5204]	OP_LOADBOOL	R7 0 0 ; R7 := false
	53	[5204]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	54	[5204]	SETGLOBALHASH	R1 K19 ; mScrapBtn := R1
	55	[5205]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	56	[5205]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	57	[5206]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	58	[5206]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	59	[5207]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	60	[5207]	SETTABLE 	R1 K28 K29 ; R1["mLabelYOffset"] := -2.000000
	61	[5208]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	62	[5208]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	63	[5208]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	64	[5208]	GETGLOBAL	R4 K19 ; R4 := mScrapBtn
	65	[5208]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	66	[5208]	LOADK    	R5 := 0.000000
	67	[5208]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	68	[5208]	SETTABLE 	R1 K30 R2 ; R1["mInitialX"] := R2
	69	[5209]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	70	[5209]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	71	[5209]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	72	[5209]	GETGLOBAL	R4 K19 ; R4 := mScrapBtn
	73	[5209]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	74	[5209]	LOADK    	R5 := 1.000000
	75	[5209]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	76	[5209]	SETTABLE 	R1 K33 R2 ; R1["mInitialY"] := R2
	77	[5210]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	78	[5210]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	79	[5210]	LOADK    	R3 := 60.000000
	80	[5210]	CALL     	R1 3 1 ; R1(R2,R3)
	81	[5211]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	82	[5249]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	83	[5249]	GETUPVAL 	R0 U0 ; R0 := U0
	84	[5249]	GETUPVAL 	R0 U1 ; R0 := U1
	85	[5249]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	86	[5250]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	87	[5253]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	88	[5253]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	89	[5255]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	90	[5255]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	91	[5255]	LOADK    	R3 K38 ; R3 := "BottomRightContainer.SalvagePanel.TransferBtn"
	92	[5255]	LOADK    	R4 K39 ; R4 := "<TRANSFER>"
	93	[5255]	LOADK    	R5 K40 ; R5 := "StartFuse"
	94	[5255]	LOADNIL  	R6 R6 ; R6 := nil
	95	[5255]	OP_LOADBOOL	R7 0 0 ; R7 := false
	96	[5255]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	97	[5255]	SETGLOBALHASH	R1 K37 ; mTransferBtn := R1
	98	[5256]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	99	[5256]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	100	[5257]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	101	[5257]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	102	[5258]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	103	[5258]	SETTABLE 	R1 K28 K29 ; R1["mLabelYOffset"] := -2.000000
	104	[5259]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	105	[5259]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	106	[5259]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	107	[5259]	GETGLOBAL	R4 K37 ; R4 := mTransferBtn
	108	[5259]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	109	[5259]	LOADK    	R5 := 0.000000
	110	[5259]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	111	[5259]	SETTABLE 	R1 K30 R2 ; R1["mInitialX"] := R2
	112	[5260]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	113	[5260]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	114	[5260]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	115	[5260]	GETGLOBAL	R4 K37 ; R4 := mTransferBtn
	116	[5260]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	117	[5260]	LOADK    	R5 := 1.000000
	118	[5260]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	119	[5260]	SETTABLE 	R1 K33 R2 ; R1["mInitialY"] := R2
	120	[5261]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	121	[5261]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	122	[5261]	LOADK    	R3 := 60.000000
	123	[5261]	CALL     	R1 3 1 ; R1(R2,R3)
	124	[5262]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	125	[5291]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	126	[5291]	GETUPVAL 	R0 U1 ; R0 := U1
	127	[5291]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	128	[5292]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	129	[5295]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	130	[5295]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	131	[5297]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	132	[5297]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	133	[5297]	LOADK    	R3 K42 ; R3 := "BottomRightContainer.SalvagePanel.RepairDroneBtn"
	134	[5297]	LOADK    	R4 K43 ; R4 := "<REPAIR_DRONE>"
	135	[5297]	LOADK    	R5 K44 ; R5 := "ShowInstantRepairConfirm"
	136	[5297]	LOADNIL  	R6 R6 ; R6 := nil
	137	[5297]	OP_LOADBOOL	R7 0 0 ; R7 := false
	138	[5297]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	139	[5297]	SETGLOBALHASH	R1 K41 ; mRushDroneBtn := R1
	140	[5298]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	141	[5298]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	142	[5299]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	143	[5299]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	144	[5300]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	145	[5300]	SETTABLE 	R1 K28 K29 ; R1["mLabelYOffset"] := -2.000000
	146	[5301]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	147	[5301]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	148	[5301]	LOADK    	R3 := 60.000000
	149	[5301]	CALL     	R1 3 1 ; R1(R2,R3)
	150	[5302]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	151	[5335]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	152	[5335]	GETUPVAL 	R0 U1 ; R0 := U1
	153	[5335]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	154	[5336]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	155	[5339]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	156	[5339]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	157	[5341]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	158	[5341]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	159	[5341]	LOADK    	R3 K46 ; R3 := "BottomRightContainer.SalvagePanel.CancelRepairBtn"
	160	[5341]	LOADK    	R4 K47 ; R4 := "<CANCEL_REPAIR>"
	161	[5341]	LOADK    	R5 K48 ; R5 := "ShowCancelRepairsConfirm"
	162	[5341]	LOADNIL  	R6 R6 ; R6 := nil
	163	[5341]	OP_LOADBOOL	R7 0 0 ; R7 := false
	164	[5341]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	165	[5341]	SETGLOBALHASH	R1 K45 ; mCancelRepairBtn := R1
	166	[5342]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	167	[5342]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	168	[5343]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	169	[5343]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	170	[5344]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	171	[5344]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	172	[5344]	LOADK    	R3 := 60.000000
	173	[5344]	CALL     	R1 3 1 ; R1(R2,R3)
	174	[5345]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	175	[5371]	CLOSURE  	R2 6 ; R2 := closure(Function #7)
	176	[5371]	GETUPVAL 	R0 U1 ; R0 := U1
	177	[5371]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	178	[5372]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	179	[5375]	CLOSURE  	R2 7 ; R2 := closure(Function #8)
	180	[5375]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	181	[5377]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	182	[5377]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	183	[5377]	LOADK    	R3 K50 ; R3 := "BottomRightContainer.SalvagePanel.SalvageSpecialBtn"
	184	[5377]	LOADK    	R4 K51 ; R4 := "/Lotus/Language/Menu/ItemSelection_Repair"
	185	[5377]	LOADK    	R5 K52 ; R5 := "RepairDronePressed"
	186	[5377]	LOADNIL  	R6 R6 ; R6 := nil
	187	[5377]	CALL     	R1 6 2 ; R1 := R1(R2,R3,R4,R5,R6)
	188	[5377]	SETGLOBALHASH	R1 K49 ; mSalvageSpecialBtn := R1
	189	[5378]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	190	[5378]	SELF     	R1 R1 K53 ; R2 := R1; R1 := R1[0x4e86c602]
	191	[5378]	OP_LOADBOOL	R3 1 0 ; R3 := true
	192	[5378]	CALL     	R1 3 1 ; R1(R2,R3)
	193	[5379]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	194	[5379]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	195	[5380]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	196	[5380]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	197	[5380]	LOADK    	R3 := 160.000000
	198	[5380]	CALL     	R1 3 1 ; R1(R2,R3)
	199	[5381]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	200	[5381]	SELF     	R1 R1 K54 ; R2 := R1; R1 := R1[0x368ad758]
	201	[5381]	OP_LOADBOOL	R3 1 0 ; R3 := true
	202	[5381]	CALL     	R1 3 1 ; R1(R2,R3)
	203	[5382]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	204	[5382]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x71e9ac81]
	205	[5382]	CALL     	R1 2 1 ; R1(R2)
	206	[5384]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	207	[5384]	SELF     	R1 R1 K56 ; R2 := R1; R1 := R1[0xf64b7262]
	208	[5384]	LOADK    	R3 K57 ; R3 := "BottomRightContainer.SalvagePanel"
	209	[5384]	LOADK    	R4 K58 ; R4 := "Name"
	210	[5384]	LOADK    	R5 := 36.000000
	211	[5384]	GETGLOBAL	R6 K7 ; R6 := mColors
	212	[5384]	GETTABLE 	R6 R6 K59 ; R6 := R6["FloatingContent"]
	213	[5384]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	214	[5386]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	215	[5386]	SELF     	R1 R1 K56 ; R2 := R1; R1 := R1[0xf64b7262]
	216	[5386]	LOADK    	R3 K57 ; R3 := "BottomRightContainer.SalvagePanel"
	217	[5386]	LOADK    	R4 K60 ; R4 := "Status"
	218	[5386]	LOADK    	R5 := 36.000000
	219	[5386]	GETGLOBAL	R6 K7 ; R6 := mColors
	220	[5386]	GETTABLE 	R6 R6 K61 ; R6 := R6["Content"]
	221	[5386]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	222	[5388]	GETUPVAL 	R1 U2 ; R1 := U2
	223	[5388]	LOADK    	R2 K57 ; R2 := "BottomRightContainer.SalvagePanel"
	224	[5388]	CALL     	R1 2 1 ; R1(R2)
	225	[5390]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	226	[5390]	SELF     	R1 R1 K62 ; R2 := R1; R1 := R1[0x1cb415c1]
	227	[5390]	LOADK    	R3 K63 ; R3 := "BottomRightContainer.SalvagePanel.SalvageProgress.Icon"
	228	[5390]	GETGLOBAL	R4 K64 ; R4 := 0x1df5e886
	229	[5390]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	230	[5392]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	231	[5392]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x91e13703]
	232	[5392]	LOADK    	R3 K65 ; R3 := "BottomRightContainer.SalvagePanel.SalvageProgress.Fill"
	233	[5392]	LOADK    	R4 K66 ; R4 := "AlphaTestThreshold"
	234	[5392]	LOADK    	R5 K67 ; R5 := 0.330000
	235	[5392]	LOADK    	R6 := 0.000000
	236	[5392]	LOADK    	R7 := 0.000000
	237	[5392]	LOADK    	R8 := 0.000000
	238	[5392]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	239	[5394]	RETURN   	R0 1 ; return 

function #148 <?:5396,5495> (340 instructions, 1360 bytes at 000002111EE9C130)
0 params, 20 slots, 6 upvalues, 0 locals, 78 constants, 0 functions
	1	[5397]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[5398]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[5399]	LOADK    	R2 K0 ; R2 := ""
	4	[5400]	LOADK    	R3 K0 ; R3 := ""
	5	[5401]	LOADK    	R4 := 160.000000
	6	[5402]	LOADK    	R5 := 0.000000
	7	[5403]	LOADK    	R6 := 0.000000
	8	[5404]	GETGLOBAL	R7 K1 ; R7 := mInventoryGrid
	9	[5404]	GETTABLE 	R7 R7 K2 ; R7 := R7["mSelectedElement"]
	10	[5405]	LOADK    	R8 K0 ; R8 := ""
	11	[5406]	GETGLOBAL	R9 K3 ; R9 := mActiveState
	12	[5406]	GETUPVAL 	R10 U0 ; R10 := U0
	13	[5406]	GETTABLE 	R10 R10 K4 ; R10 := R10["WEAPON_INV"]
	14	[5406]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 21
	15	[5406]	JMP      	21 ; PC := 21
	16	[5406]	GETGLOBAL	R9 K3 ; R9 := mActiveState
	17	[5406]	GETUPVAL 	R10 U0 ; R10 := U0
	18	[5406]	GETTABLE 	R10 R10 K5 ; R10 := R10["EQUIP_INV"]
	19	[5406]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 182
	20	[5406]	JMP      	182 ; PC := 182
	21	[5407]	GETGLOBAL	R9 K6 ; R9 := 0x7b998233
	22	[5407]	MOVE     	R10 R7 ; R10 := R7
	23	[5407]	CALL     	R9 2 2 ; R9 := R9(R10)
	24	[5407]	TEST     	R9 1 ; if R9 then PC := 182
	25	[5407]	JMP      	182 ; PC := 182
	26	[5408]	OP_LOADBOOL	R0 1 0 ; R0 := true
	27	[5409]	GETTABLE 	R9 R7 K7 ; R9 := R7["SalvageState"]
	28	[5409]	GETUPVAL 	R10 U1 ; R10 := U1
	29	[5409]	GETTABLE 	R10 R10 K8 ; R10 := R10["AWAITING_FUNDS"]
	30	[5409]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 35
	31	[5409]	JMP      	35 ; PC := 35
	32	[5409]	GETTABLE 	R9 R7 K9 ; R9 := R7["CanSell"]
	33	[5409]	TEST     	R9 0 ; if not R9 then PC := 41
	34	[5409]	JMP      	41 ; PC := 41
	35	[5409]	GETTABLE 	R9 R7 K7 ; R9 := R7["SalvageState"]
	36	[5409]	GETUPVAL 	R10 U1 ; R10 := U1
	37	[5409]	GETTABLE 	R10 R10 K10 ; R10 := R10["AWAITING_COMPLETION"]
	38	[5409]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 41
	39	[5409]	JMP      	41 ; PC := 41
	40	[5409]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 41
	41	[5409]	OP_LOADBOOL	R9 1 0 ; R9 := true
	42	[5410]	GETTABLE 	R10 R7 K7 ; R10 := R7["SalvageState"]
	43	[5410]	GETUPVAL 	R11 U1 ; R11 := U1
	44	[5410]	GETTABLE 	R11 R11 K11 ; R11 := R11["IDENTIFIED"]
	45	[5410]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 52
	46	[5410]	JMP      	52 ; PC := 52
	47	[5410]	GETTABLE 	R10 R7 K7 ; R10 := R7["SalvageState"]
	48	[5410]	GETUPVAL 	R11 U1 ; R11 := U1
	49	[5410]	GETTABLE 	R11 R11 K8 ; R11 := R11["AWAITING_FUNDS"]
	50	[5410]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 68
	51	[5410]	JMP      	68 ; PC := 68
	52	[5411]	GETGLOBAL	R10 K12 ; R10 := 0xae91e43b
	53	[5411]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0x42b04007]
	54	[5411]	LOADK    	R12 K14 ; R12 := "/Lotus/Language/Railjack/Wreckage_Funding"
	55	[5411]	OP_LOADBOOL	R13 1 0 ; R13 := true
	56	[5411]	NEWTABLE 	R14 0 1 ; R14 := {}
	57	[5411]	GETGLOBAL	R15 K16 ; R15 := 0x5bced4c4
	58	[5411]	GETTABLE 	R15 R15 K17 ; R15 := R15[0x55f27c30]
	59	[5411]	GETTABLE 	R16 R7 K18 ; R16 := R7["SalvageProgress"]
	60	[5411]	MUL      	R16 R16 K19 ; R16 := R16 * 100.000000
	61	[5411]	CALL     	R15 2 2 ; R15 := R15(R16)
	62	[5411]	SETTABLE 	R14 K15 R15 ; R14["PERCENT"] := R15
	63	[5411]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	64	[5411]	MOVE     	R8 R10 ; R8 := R10
	65	[5412]	LOADK    	R2 K20 ; R2 := "/Lotus/Language/Menu/ItemSelection_Repair"
	66	[5413]	LOADK    	R3 K21 ; R3 := "RepairSelectedItem"
	67	[5413]	JMP      	141 ; PC := 141
	68	[5414]	GETTABLE 	R10 R7 K7 ; R10 := R7["SalvageState"]
	69	[5414]	GETUPVAL 	R11 U1 ; R11 := U1
	70	[5414]	GETTABLE 	R11 R11 K10 ; R11 := R11["AWAITING_COMPLETION"]
	71	[5414]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 96
	72	[5414]	JMP      	96 ; PC := 96
	73	[5415]	GETGLOBAL	R10 K22 ; R10 := 0x34291f5c
	74	[5415]	GETTABLE 	R10 R10 K23 ; R10 := R10[0x397b920f]
	75	[5415]	GETTABLE 	R11 R7 K24 ; R11 := R7["SalvageTimeRemaining"]
	76	[5415]	CALL     	R10 2 2 ; R10 := R10(R11)
	77	[5417]	GETGLOBAL	R11 K12 ; R11 := 0xae91e43b
	78	[5417]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x42b04007]
	79	[5417]	LOADK    	R13 K25 ; R13 := "/Lotus/Language/Railjack/Wreckage_Repairing"
	80	[5417]	OP_LOADBOOL	R14 1 0 ; R14 := true
	81	[5417]	NEWTABLE 	R15 0 1 ; R15 := {}
	82	[5417]	GETUPVAL 	R16 U2 ; R16 := U2
	83	[5417]	GETTABLE 	R16 R16 K27 ; R16 := R16[0xcfe63447]
	84	[5417]	GETGLOBAL	R17 K16 ; R17 := 0x5bced4c4
	85	[5417]	GETTABLE 	R17 R17 K28 ; R17 := R17[0xb62ecfe0]
	86	[5417]	LOADK    	R18 := 0.000000
	87	[5417]	MOVE     	R19 R10 ; R19 := R10
	88	[5417]	CALL     	R17 3 0 ; R17,... := R17(R18,R19)
	89	[5417]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	90	[5417]	SETTABLE 	R15 K26 R16 ; R15["TIME"] := R16
	91	[5417]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	92	[5417]	MOVE     	R8 R11 ; R8 := R11
	93	[5418]	LOADK    	R2 K29 ; R2 := "/Lotus/Language/Menu/ItemSelection_Rush"
	94	[5419]	LOADK    	R3 K30 ; R3 := "RushSelectedItem"
	95	[5419]	JMP      	141 ; PC := 141
	96	[5420]	GETTABLE 	R11 R7 K7 ; R11 := R7["SalvageState"]
	97	[5420]	GETUPVAL 	R12 U1 ; R12 := U1
	98	[5420]	GETTABLE 	R12 R12 K31 ; R12 := R12["COMPLETED"]
	99	[5420]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 110
	100	[5420]	JMP      	110 ; PC := 110
	101	[5421]	GETGLOBAL	R11 K12 ; R11 := 0xae91e43b
	102	[5421]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x42b04007]
	103	[5421]	LOADK    	R13 K32 ; R13 := "/Lotus/Language/Railjack/Wreckage_RepairsCompleted"
	104	[5421]	OP_LOADBOOL	R14 1 0 ; R14 := true
	105	[5421]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	106	[5421]	MOVE     	R8 R11 ; R8 := R11
	107	[5422]	LOADK    	R2 K33 ; R2 := "/Lotus/Language/Menu/ItemSelection_Claim"
	108	[5423]	LOADK    	R3 K34 ; R3 := "ClaimSelectedItem"
	109	[5423]	JMP      	141 ; PC := 141
	110	[5424]	GETTABLE 	R11 R7 K7 ; R11 := R7["SalvageState"]
	111	[5424]	GETUPVAL 	R12 U1 ; R12 := U1
	112	[5424]	GETTABLE 	R12 R12 K35 ; R12 := R12["UNIDENTIFIED"]
	113	[5424]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 140
	114	[5424]	JMP      	140 ; PC := 140
	115	[5425]	GETGLOBAL	R11 K12 ; R11 := 0xae91e43b
	116	[5425]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x42b04007]
	117	[5425]	LOADK    	R13 K36 ; R13 := "/Lotus/Language/Railjack/UnidentifiedRawSalvage"
	118	[5425]	OP_LOADBOOL	R14 1 0 ; R14 := true
	119	[5425]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	120	[5425]	MOVE     	R8 R11 ; R8 := R11
	121	[5426]	ADD      	R5 R5 K37 ; R5 := R5 + 70.000000
	122	[5428]	GETGLOBAL	R11 K38 ; R11 := 0x25d99d89
	123	[5428]	SELF     	R11 R11 K39 ; R12 := R11; R11 := R11[0x25a6e75e]
	124	[5428]	CALL     	R11 2 2 ; R11 := R11(R12)
	125	[5429]	SELF     	R12 R11 K40 ; R13 := R11; R12 := R11[0x64e44bdc]
	126	[5429]	CALL     	R12 2 2 ; R12 := R12(R13)
	127	[5429]	LEN      	R12 R12 ; R12 := # R12
	128	[5429]	SELF     	R13 R11 K41 ; R14 := R11; R13 := R11[0xe600a7f3]
	129	[5429]	CALL     	R13 2 2 ; R13 := R13(R14)
	130	[5429]	LEN      	R13 R13 ; R13 := # R13
	131	[5429]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	132	[5431]	GETUPVAL 	R13 U3 ; R13 := U3
	133	[5431]	LE       	0 R13 R12 ; if R13 > R12 then PC := 137
	134	[5431]	JMP      	137 ; PC := 137
	135	[5432]	LOADK    	R2 K42 ; R2 := "/Lotus/Language/Railjack/WreckageLimitReached"
	136	[5432]	JMP      	141 ; PC := 141
	137	[5434]	LOADK    	R2 K43 ; R2 := "/Lotus/Language/Railjack/IdentifyRawSalvage"
	138	[5435]	LOADK    	R3 K44 ; R3 := "IdentifySelectedItem"
	139	[5436]	JMP      	141 ; PC := 141
	140	[5438]	OP_LOADBOOL	R1 1 0 ; R1 := true
	141	[5441]	GETGLOBAL	R13 K45 ; R13 := mScrapBtn
	142	[5441]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0x368ad758]
	143	[5441]	GETTABLE 	R15 R7 K9 ; R15 := R7["CanSell"]
	144	[5441]	CALL     	R13 3 1 ; R13(R14,R15)
	145	[5442]	GETTABLE 	R13 R7 K9 ; R13 := R7["CanSell"]
	146	[5442]	TEST     	R13 1 ; if R13 then PC := 149
	147	[5442]	JMP      	149 ; PC := 149
	148	[5443]	ADD      	R4 R4 K47 ; R4 := R4 + 60.000000
	149	[5446]	GETTABLE 	R13 R7 K9 ; R13 := R7["CanSell"]
	150	[5446]	TEST     	R13 0 ; if not R13 then PC := 164
	151	[5446]	JMP      	164 ; PC := 164
	152	[5446]	GETTABLE 	R13 R7 K7 ; R13 := R7["SalvageState"]
	153	[5446]	GETUPVAL 	R14 U1 ; R14 := U1
	154	[5446]	GETTABLE 	R14 R14 K11 ; R14 := R14["IDENTIFIED"]
	155	[5446]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 163
	156	[5446]	JMP      	163 ; PC := 163
	157	[5446]	GETTABLE 	R13 R7 K7 ; R13 := R7["SalvageState"]
	158	[5446]	GETUPVAL 	R14 U1 ; R14 := U1
	159	[5446]	GETTABLE 	R14 R14 K8 ; R14 := R14["AWAITING_FUNDS"]
	160	[5446]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 163
	161	[5446]	JMP      	163 ; PC := 163
	162	[5446]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 163
	163	[5446]	OP_LOADBOOL	R13 1 0 ; R13 := true
	164	[5447]	GETGLOBAL	R14 K48 ; R14 := mRushDroneBtn
	165	[5447]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	166	[5447]	MOVE     	R16 R13 ; R16 := R13
	167	[5447]	CALL     	R14 3 1 ; R14(R15,R16)
	168	[5448]	TEST     	R13 1 ; if R13 then PC := 171
	169	[5448]	JMP      	171 ; PC := 171
	170	[5449]	ADD      	R4 R4 K37 ; R4 := R4 + 70.000000
	171	[5452]	GETGLOBAL	R14 K49 ; R14 := mCancelRepairBtn
	172	[5452]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	173	[5452]	MOVE     	R16 R9 ; R16 := R9
	174	[5452]	CALL     	R14 3 1 ; R14(R15,R16)
	175	[5453]	TEST     	R9 0 ; if not R9 then PC := 178
	176	[5453]	JMP      	178 ; PC := 178
	177	[5454]	SUB      	R4 R4 K47 ; R4 := R4 - 60.000000
	178	[5457]	GETGLOBAL	R14 K50 ; R14 := mTransferBtn
	179	[5457]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	180	[5457]	MOVE     	R16 R1 ; R16 := R1
	181	[5457]	CALL     	R14 3 1 ; R14(R15,R16)
	182	[5461]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	183	[5461]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0xaade900e]
	184	[5461]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	185	[5461]	LOADK    	R17 := 59.000000
	186	[5461]	MOVE     	R18 R0 ; R18 := R0
	187	[5461]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	188	[5462]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	189	[5462]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0xaade900e]
	190	[5462]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	191	[5462]	LOADK    	R17 := 11.000000
	192	[5462]	MOVE     	R18 R0 ; R18 := R0
	193	[5462]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	194	[5463]	TEST     	R0 0 ; if not R0 then PC := 340
	195	[5463]	JMP      	340 ; PC := 340
	196	[5464]	TEST     	R1 1 ; if R1 then PC := 232
	197	[5464]	JMP      	232 ; PC := 232
	198	[5465]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	199	[5465]	SELF     	R14 R14 K54 ; R15 := R14; R14 := R14[0x8d77b2b2]
	200	[5465]	MOVE     	R16 R4 ; R16 := R4
	201	[5465]	CALL     	R14 3 1 ; R14(R15,R16)
	202	[5466]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	203	[5466]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x9b71e815]
	204	[5466]	MOVE     	R16 R2 ; R16 := R2
	205	[5466]	CALL     	R14 3 1 ; R14(R15,R16)
	206	[5467]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	207	[5467]	SELF     	R14 R14 K56 ; R15 := R14; R14 := R14[0x51cf38e7]
	208	[5467]	MOVE     	R16 R3 ; R16 := R3
	209	[5467]	CALL     	R14 3 1 ; R14(R15,R16)
	210	[5468]	GETUPVAL 	R14 U4 ; R14 := U4
	211	[5468]	LOADK    	R15 K52 ; R15 := "BottomRightContainer.SalvagePanel"
	212	[5468]	MOVE     	R16 R7 ; R16 := R7
	213	[5468]	CALL     	R14 3 1 ; R14(R15,R16)
	214	[5470]	GETUPVAL 	R14 U5 ; R14 := U5
	215	[5470]	GETTABLE 	R14 R14 K57 ; R14 := R14[0xc340ce91]
	216	[5470]	GETGLOBAL	R15 K12 ; R15 := 0xae91e43b
	217	[5470]	LOADK    	R16 K58 ; R16 := "BottomRightContainer.SalvagePanel.Name"
	218	[5470]	GETTABLE 	R17 R7 K59 ; R17 := R7["Name"]
	219	[5470]	LOADK    	R18 K60 ; R18 := "..."
	220	[5470]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	221	[5471]	GETUPVAL 	R14 U5 ; R14 := U5
	222	[5471]	GETTABLE 	R14 R14 K57 ; R14 := R14[0xc340ce91]
	223	[5471]	GETGLOBAL	R15 K12 ; R15 := 0xae91e43b
	224	[5471]	LOADK    	R16 K61 ; R16 := "BottomRightContainer.SalvagePanel.Status"
	225	[5471]	GETGLOBAL	R17 K62 ; R17 := 0x7f5022cf
	226	[5471]	GETTABLE 	R17 R17 K63 ; R17 := R17[0x3f3e4d12]
	227	[5471]	MOVE     	R18 R8 ; R18 := R8
	228	[5471]	CALL     	R17 2 2 ; R17 := R17(R18)
	229	[5471]	LOADK    	R18 K60 ; R18 := "..."
	230	[5471]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	231	[5471]	JMP      	234 ; PC := 234
	232	[5473]	ADD      	R5 R5 K64 ; R5 := R5 + 85.000000
	233	[5474]	ADD      	R6 R6 K65 ; R6 := R6 + 15.000000
	234	[5477]	GETGLOBAL	R14 K45 ; R14 := mScrapBtn
	235	[5477]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x9b71e815]
	236	[5477]	GETUPVAL 	R16 U5 ; R16 := U5
	237	[5477]	GETTABLE 	R16 R16 K66 ; R16 := R16[0x06d055f9]
	238	[5477]	MOVE     	R17 R1 ; R17 := R1
	239	[5477]	LOADK    	R18 K67 ; R18 := "<RECYCLE>"
	240	[5477]	LOADK    	R19 K68 ; R19 := "<FUSION_POINTS_LARGE>"
	241	[5477]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	242	[5477]	CALL     	R14 0 1 ; R14(R15,...)
	243	[5478]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	244	[5478]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	245	[5478]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	246	[5478]	LOADK    	R17 K70 ; R17 := "ScrapBtn"
	247	[5478]	LOADK    	R18 := 0.000000
	248	[5478]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	249	[5478]	GETTABLE 	R19 R19 K71 ; R19 := R19["mInitialX"]
	250	[5478]	ADD      	R19 R19 R5 ; R19 := R19 + R5
	251	[5478]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	252	[5479]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	253	[5479]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	254	[5479]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	255	[5479]	LOADK    	R17 K70 ; R17 := "ScrapBtn"
	256	[5479]	LOADK    	R18 := 1.000000
	257	[5479]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	258	[5479]	GETTABLE 	R19 R19 K72 ; R19 := R19["mInitialY"]
	259	[5479]	ADD      	R19 R19 R6 ; R19 := R19 + R6
	260	[5479]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	261	[5480]	GETTABLE 	R14 R7 K9 ; R14 := R7["CanSell"]
	262	[5480]	TEST     	R14 0 ; if not R14 then PC := 283
	263	[5480]	JMP      	283 ; PC := 283
	264	[5481]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	265	[5481]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	266	[5481]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	267	[5481]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	268	[5481]	LOADK    	R18 := 0.000000
	269	[5481]	GETGLOBAL	R19 K50 ; R19 := mTransferBtn
	270	[5481]	GETTABLE 	R19 R19 K71 ; R19 := R19["mInitialX"]
	271	[5481]	ADD      	R19 R19 R5 ; R19 := R19 + R5
	272	[5481]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	273	[5482]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	274	[5482]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	275	[5482]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	276	[5482]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	277	[5482]	LOADK    	R18 := 1.000000
	278	[5482]	GETGLOBAL	R19 K50 ; R19 := mTransferBtn
	279	[5482]	GETTABLE 	R19 R19 K72 ; R19 := R19["mInitialY"]
	280	[5482]	ADD      	R19 R19 R6 ; R19 := R19 + R6
	281	[5482]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	282	[5482]	JMP      	301 ; PC := 301
	283	[5484]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	284	[5484]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	285	[5484]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	286	[5484]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	287	[5484]	LOADK    	R18 := 0.000000
	288	[5484]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	289	[5484]	GETTABLE 	R19 R19 K71 ; R19 := R19["mInitialX"]
	290	[5484]	ADD      	R19 R19 R5 ; R19 := R19 + R5
	291	[5484]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	292	[5485]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	293	[5485]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	294	[5485]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	295	[5485]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	296	[5485]	LOADK    	R18 := 1.000000
	297	[5485]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	298	[5485]	GETTABLE 	R19 R19 K72 ; R19 := R19["mInitialY"]
	299	[5485]	ADD      	R19 R19 R6 ; R19 := R19 + R6
	300	[5485]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	301	[5488]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	302	[5488]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	303	[5488]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	304	[5488]	LOADK    	R17 K75 ; R17 := "Bg"
	305	[5488]	LOADK    	R18 := 11.000000
	306	[5488]	NOT      	R19 R1 ; R19 := not R1
	307	[5488]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	308	[5489]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	309	[5489]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	310	[5489]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	311	[5489]	LOADK    	R17 K76 ; R17 := "Blurer"
	312	[5489]	LOADK    	R18 := 11.000000
	313	[5489]	NOT      	R19 R1 ; R19 := not R1
	314	[5489]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	315	[5490]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	316	[5490]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	317	[5490]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	318	[5490]	LOADK    	R17 K59 ; R17 := "Name"
	319	[5490]	LOADK    	R18 := 11.000000
	320	[5490]	NOT      	R19 R1 ; R19 := not R1
	321	[5490]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	322	[5491]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	323	[5491]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	324	[5491]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	325	[5491]	LOADK    	R17 K77 ; R17 := "Status"
	326	[5491]	LOADK    	R18 := 11.000000
	327	[5491]	NOT      	R19 R1 ; R19 := not R1
	328	[5491]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	329	[5492]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	330	[5492]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	331	[5492]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	332	[5492]	LOADK    	R17 K18 ; R17 := "SalvageProgress"
	333	[5492]	LOADK    	R18 := 11.000000
	334	[5492]	NOT      	R19 R1 ; R19 := not R1
	335	[5492]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	336	[5493]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	337	[5493]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	338	[5493]	NOT      	R16 R1 ; R16 := not R1
	339	[5493]	CALL     	R14 3 1 ; R14(R15,R16)
	340	[5495]	RETURN   	R0 1 ; return 

function #149 <?:5497,5503> (14 instructions, 56 bytes at 000002111EE9D5D0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5498]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5498]	TEST     	R1 1 ; if R1 then PC := 7
	3	[5498]	JMP      	7 ; PC := 7
	4	[5498]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	5	[5498]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	6	[5498]	JMP      	8 ; PC := 8
	7	[5499]	RETURN   	R0 1 ; return 
	8	[5502]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	9	[5502]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	10	[5502]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[5502]	MOVE     	R4 R0 ; R4 := R0
	12	[5502]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[5502]	CALL     	R1 0 1 ; R1(R2,...)
	14	[5503]	RETURN   	R0 1 ; return 

function #150 <?:5505,5511> (14 instructions, 56 bytes at 000002111EE9D760)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5506]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5506]	TEST     	R1 1 ; if R1 then PC := 7
	3	[5506]	JMP      	7 ; PC := 7
	4	[5506]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	5	[5506]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	6	[5506]	JMP      	8 ; PC := 8
	7	[5507]	RETURN   	R0 1 ; return 
	8	[5510]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	9	[5510]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5319dc]
	10	[5510]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[5510]	MOVE     	R4 R0 ; R4 := R0
	12	[5510]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[5510]	CALL     	R1 0 1 ; R1(R2,...)
	14	[5511]	RETURN   	R0 1 ; return 

function #151 <?:5513,5519> (11 instructions, 44 bytes at 000002111EE9D8F0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5514]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	2	[5514]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[5514]	JMP      	5 ; PC := 5
	4	[5515]	RETURN   	R0 1 ; return 
	5	[5518]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	6	[5518]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	7	[5518]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	8	[5518]	MOVE     	R4 R0 ; R4 := R0
	9	[5518]	CALL     	R3 2 0 ; R3,... := R3(R4)
	10	[5518]	CALL     	R1 0 1 ; R1(R2,...)
	11	[5519]	RETURN   	R0 1 ; return 

function #152 <?:5521,5527> (11 instructions, 44 bytes at 000002111EE9DA50)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5522]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	2	[5522]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[5522]	JMP      	5 ; PC := 5
	4	[5523]	RETURN   	R0 1 ; return 
	5	[5526]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	6	[5526]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	7	[5526]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	8	[5526]	MOVE     	R4 R0 ; R4 := R0
	9	[5526]	CALL     	R3 2 0 ; R3,... := R3(R4)
	10	[5526]	CALL     	R1 0 1 ; R1(R2,...)
	11	[5527]	RETURN   	R0 1 ; return 

function #153 <?:5529,5581> (61 instructions, 244 bytes at 000002111EE9DBB0)
1 param, 7 slots, 5 upvalues, 0 locals, 20 constants, 2 functions
	1	[5530]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5530]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[5530]	GETTABLE 	R2 R2 K2 ; R2 := R2["GetScreenRes"]
	4	[5530]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5530]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[5530]	JMP      	8 ; PC := 8
	7	[5531]	RETURN   	R0 1 ; return 
	8	[5534]	GETGLOBAL	R1 K1 ; R1 := _T
	9	[5534]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x14e3a848]
	10	[5534]	LOADK    	R2 K4 ; R2 := "Inventory"
	11	[5534]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[5535]	GETGLOBAL	R2 K5 ; R2 := 0x9ba7909f
	13	[5535]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x5374b92e]
	14	[5535]	MOVE     	R4 R1 ; R4 := R1
	15	[5535]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[5535]	TEST     	R2 1 ; if R2 then PC := 61
	17	[5535]	JMP      	61 ; PC := 61
	18	[5536]	GETGLOBAL	R2 K1 ; R2 := _T
	19	[5536]	LOADK    	R3 K7 ; R3 := "SellingShip"
	20	[5536]	MOVE     	R4 R0 ; R4 := R0
	21	[5536]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	22	[5536]	SETTABLE 	R2 R3 K8 ; R2[R3] := true
	23	[5537]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	24	[5537]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x1fd6abd0]
	25	[5537]	MOVE     	R4 R1 ; R4 := R1
	26	[5537]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	27	[5537]	SETGLOBALHASH	R2 K9 ; mChildMovie := R2
	28	[5538]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	29	[5538]	GETGLOBAL	R3 K9 ; R3 := mChildMovie
	30	[5538]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[5538]	TEST     	R2 1 ; if R2 then PC := 61
	32	[5538]	JMP      	61 ; PC := 61
	33	[5539]	GETGLOBAL	R2 K1 ; R2 := _T
	34	[5554]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	35	[5554]	GETUPVAL 	R0 U0 ; R0 := U0
	36	[5554]	GETUPVAL 	R0 U1 ; R0 := U1
	37	[5554]	GETUPVAL 	R0 U2 ; R0 := U2
	38	[5554]	GETUPVAL 	R0 U3 ; R0 := U3
	39	[5554]	SETTABLE 	R2 K12 R3 ; R2["OnSellScreenClosed"] := R3
	40	[5555]	GETGLOBAL	R2 K9 ; R2 := mChildMovie
	41	[5555]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0xe4162eed]
	42	[5555]	LOADK    	R4 K14 ; R4 := "SetCallback"
	43	[5555]	LOADK    	R5 K12 ; R5 := "OnSellScreenClosed"
	44	[5555]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	45	[5557]	EQ       	0 R0 K15 ; if R0 ~= "Components" then PC := 61
	46	[5557]	JMP      	61 ; PC := 61
	47	[5558]	GETGLOBAL	R2 K16 ; R2 := 0xb009bbc6
	48	[5558]	GETGLOBAL	R3 K17 ; R3 := 0x59462acb
	49	[5558]	CALL     	R2 2 2 ; R2 := R2(R3)
	50	[5559]	GETGLOBAL	R3 K1 ; R3 := _T
	51	[5576]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	52	[5576]	MOVE     	R0 R2 ; R0 := R2
	53	[5576]	GETUPVAL 	R0 U4 ; R0 := U4
	54	[5576]	SETTABLE 	R3 K18 R4 ; R3["GetExtraInfo"] := R4
	55	[5577]	GETGLOBAL	R3 K9 ; R3 := mChildMovie
	56	[5577]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0xe4162eed]
	57	[5577]	LOADK    	R5 K19 ; R5 := "SetExtraInfoCallback"
	58	[5577]	LOADK    	R6 K18 ; R6 := "GetExtraInfo"
	59	[5577]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	60	[5577]	CLOSE    	R2 ; SAVE R2,...
	61	[5581]	RETURN   	R0 1 ; return 

function #154 <?:5583,5736> (436 instructions, 1744 bytes at 0000021130D14730)
0 params, 32 slots, 21 upvalues, 0 locals, 122 constants, 0 functions
	1	[5584]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[5584]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xc02f2cb8]
	3	[5584]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[5584]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[5586]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[5586]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xb73d420f]
	7	[5586]	CALL     	R0 1 2 ; R0 := R0()
	8	[5587]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[5587]	GETTABLE 	R1 R1 K4 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	10	[5587]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	11	[5587]	JMP      	13 ; PC := 13
	12	[5587]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 13
	13	[5587]	OP_LOADBOOL	R1 1 0 ; R1 := true
	14	[5587]	SETGLOBALHASH	R1 K3 ; mLisetMode := R1
	15	[5589]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[5589]	CALL     	R1 1 1 ; R1()
	17	[5591]	GETGLOBAL	R1 K5 ; R1 := 0x2d0fad09
	18	[5591]	LOADK    	R2 K6 ; R2 := "Lotus.Interface.Libs.TimerMgr"
	19	[5591]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[5592]	GETTABLE 	R2 R1 K8 ; R2 := R1[0xde474187]
	21	[5592]	CALL     	R2 1 2 ; R2 := R2()
	22	[5592]	SETGLOBALHASH	R2 K7 ; mTimerMgr := R2
	23	[5594]	GETGLOBAL	R2 K5 ; R2 := 0x2d0fad09
	24	[5594]	LOADK    	R3 K9 ; R3 := "EE.Interface.AnchorMgr"
	25	[5594]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[5595]	GETTABLE 	R3 R2 K11 ; R3 := R2[0xae6791ba]
	27	[5595]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	28	[5595]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[5595]	SETGLOBALHASH	R3 K10 ; mAnchorMgr := R3
	30	[5596]	GETGLOBAL	R3 K10 ; R3 := mAnchorMgr
	31	[5596]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x20ff29f7]
	32	[5596]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	33	[5596]	LOADK    	R6 K14 ; R6 := "TopLeftContainer"
	34	[5596]	NEWTABLE 	R7 2 0 ; R7 := {}
	35	[5596]	GETGLOBAL	R8 K10 ; R8 := mAnchorMgr
	36	[5596]	GETTABLE 	R8 R8 K15 ; R8 := R8["ANCHOR_H_LEFT"]
	37	[5596]	GETGLOBAL	R9 K10 ; R9 := mAnchorMgr
	38	[5596]	GETTABLE 	R9 R9 K16 ; R9 := R9["ANCHOR_V_TOP"]
	39	[5596]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	40	[5596]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	41	[5597]	GETGLOBAL	R3 K10 ; R3 := mAnchorMgr
	42	[5597]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x20ff29f7]
	43	[5597]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	44	[5597]	LOADK    	R6 K17 ; R6 := "TopRightContainer"
	45	[5597]	NEWTABLE 	R7 2 0 ; R7 := {}
	46	[5597]	GETGLOBAL	R8 K10 ; R8 := mAnchorMgr
	47	[5597]	GETTABLE 	R8 R8 K18 ; R8 := R8["ANCHOR_H_RIGHT"]
	48	[5597]	GETGLOBAL	R9 K10 ; R9 := mAnchorMgr
	49	[5597]	GETTABLE 	R9 R9 K16 ; R9 := R9["ANCHOR_V_TOP"]
	50	[5597]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	51	[5597]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	52	[5598]	GETGLOBAL	R3 K10 ; R3 := mAnchorMgr
	53	[5598]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x20ff29f7]
	54	[5598]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	55	[5598]	LOADK    	R6 K19 ; R6 := "BottomRightContainer"
	56	[5598]	NEWTABLE 	R7 2 0 ; R7 := {}
	57	[5598]	GETGLOBAL	R8 K10 ; R8 := mAnchorMgr
	58	[5598]	GETTABLE 	R8 R8 K18 ; R8 := R8["ANCHOR_H_RIGHT"]
	59	[5598]	GETGLOBAL	R9 K10 ; R9 := mAnchorMgr
	60	[5598]	GETTABLE 	R9 R9 K20 ; R9 := R9["ANCHOR_V_BOTTOM"]
	61	[5598]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	62	[5598]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	63	[5600]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	64	[5600]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	65	[5600]	LOADK    	R5 K22 ; R5 := "TopLeftContainer.Lines.Right"
	66	[5600]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	67	[5600]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	68	[5601]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	69	[5601]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	70	[5601]	LOADK    	R5 K24 ; R5 := "TopRightContainer.Lines.Center.Left"
	71	[5601]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	72	[5601]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	73	[5602]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	74	[5602]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	75	[5602]	LOADK    	R5 K25 ; R5 := "TopRightContainer.Lines.Center.Center"
	76	[5602]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	77	[5602]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	78	[5603]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	79	[5603]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	80	[5603]	LOADK    	R5 K26 ; R5 := "TopRightContainer.Lines.Center.Right"
	81	[5603]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	82	[5603]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	83	[5604]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	84	[5604]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	85	[5604]	LOADK    	R5 K27 ; R5 := "TopRightContainer.Lines.Right"
	86	[5604]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	87	[5604]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	88	[5606]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	89	[5606]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x67bc869f]
	90	[5606]	LOADK    	R5 K29 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Components.Btn"
	91	[5606]	LOADK    	R6 := 85.000000
	92	[5606]	LOADK    	R7 := 1.000000
	93	[5606]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	94	[5607]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	95	[5607]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x67bc869f]
	96	[5607]	LOADK    	R5 K30 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Wreckage.Btn"
	97	[5607]	LOADK    	R6 := 85.000000
	98	[5607]	LOADK    	R7 := 2.000000
	99	[5607]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	100	[5608]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	101	[5608]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x67bc869f]
	102	[5608]	LOADK    	R5 K31 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Unidentified.Btn"
	103	[5608]	LOADK    	R6 := 85.000000
	104	[5608]	LOADK    	R7 := 3.000000
	105	[5608]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	106	[5609]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	107	[5609]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0x1e5b5cfe]
	108	[5609]	LOADK    	R5 K29 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Components.Btn"
	109	[5609]	LOADK    	R6 K33 ; R6 := "CapacityFocused"
	110	[5609]	LOADK    	R7 K34 ; R7 := "CapacityUnfocused"
	111	[5609]	LOADK    	R8 K35 ; R8 := "CapacityReleased"
	112	[5609]	LOADK    	R9 K36 ; R9 := "CapacityPressed"
	113	[5609]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	114	[5610]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	115	[5610]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0x1e5b5cfe]
	116	[5610]	LOADK    	R5 K30 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Wreckage.Btn"
	117	[5610]	LOADK    	R6 K33 ; R6 := "CapacityFocused"
	118	[5610]	LOADK    	R7 K34 ; R7 := "CapacityUnfocused"
	119	[5610]	LOADK    	R8 K35 ; R8 := "CapacityReleased"
	120	[5610]	LOADK    	R9 K36 ; R9 := "CapacityPressed"
	121	[5610]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	122	[5611]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	123	[5611]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0x1e5b5cfe]
	124	[5611]	LOADK    	R5 K31 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Unidentified.Btn"
	125	[5611]	LOADK    	R6 K33 ; R6 := "CapacityFocused"
	126	[5611]	LOADK    	R7 K34 ; R7 := "CapacityUnfocused"
	127	[5611]	LOADK    	R8 K35 ; R8 := "CapacityReleased"
	128	[5611]	LOADK    	R9 K36 ; R9 := "CapacityPressed"
	129	[5611]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	130	[5613]	GETGLOBAL	R3 K37 ; R3 := 0x7b998233
	131	[5613]	GETGLOBAL	R4 K38 ; R4 := _T
	132	[5613]	GETTABLE 	R4 R4 K39 ; R4 := R4["EnableUIInput"]
	133	[5613]	CALL     	R3 2 2 ; R3 := R3(R4)
	134	[5613]	TEST     	R3 1 ; if R3 then PC := 139
	135	[5613]	JMP      	139 ; PC := 139
	136	[5614]	GETGLOBAL	R3 K38 ; R3 := _T
	137	[5614]	GETTABLE 	R3 R3 K40 ; R3 := R3[0x3b0face1]
	138	[5614]	CALL     	R3 1 1 ; R3()
	139	[5617]	GETGLOBAL	R3 K38 ; R3 := _T
	140	[5617]	SETTABLE 	R3 K41 K42 ; R3["DeferSquadCrewShipLoad"] := true
	141	[5619]	GETGLOBAL	R3 K44 ; R3 := 0x89326c93
	142	[5619]	SELF     	R3 R3 K45 ; R4 := R3; R3 := R3[0x78298275]
	143	[5619]	CALL     	R3 2 2 ; R3 := R3(R4)
	144	[5619]	SETGLOBALHASH	R3 K43 ; mAvatar := R3
	145	[5621]	GETGLOBAL	R3 K46 ; R3 := 0x25d99d89
	146	[5621]	SELF     	R3 R3 K47 ; R4 := R3; R3 := R3[0x62c81b76]
	147	[5621]	CALL     	R3 2 2 ; R3 := R3(R4)
	148	[5621]	GETTABLE 	R3 R3 K48 ; R3 := R3["mCrewShipLoadOut"]
	149	[5622]	GETUPVAL 	R4 U2 ; R4 := U2
	150	[5622]	MOVE     	R5 R3 ; R5 := R3
	151	[5622]	OP_LOADBOOL	R6 1 0 ; R6 := true
	152	[5622]	CALL     	R4 3 1 ; R4(R5,R6)
	153	[5624]	GETTABLE 	R4 R3 K49 ; R4 := R3["mShip"]
	154	[5625]	GETTABLE 	R5 R4 K50 ; R5 := R4["mItemName"]
	155	[5627]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	156	[5627]	GETGLOBAL	R7 K51 ; R7 := mShipSuit
	157	[5627]	CALL     	R6 2 2 ; R6 := R6(R7)
	158	[5627]	TEST     	R6 1 ; if R6 then PC := 180
	159	[5627]	JMP      	180 ; PC := 180
	160	[5627]	GETGLOBAL	R6 K52 ; R6 := 0xe7f2b02f
	161	[5627]	SELF     	R6 R6 K53 ; R7 := R6; R6 := R6[0xb321d806]
	162	[5627]	CALL     	R6 2 2 ; R6 := R6(R7)
	163	[5627]	TEST     	R6 1 ; if R6 then PC := 180
	164	[5627]	JMP      	180 ; PC := 180
	165	[5628]	GETGLOBAL	R6 K51 ; R6 := mShipSuit
	166	[5628]	SELF     	R6 R6 K55 ; R7 := R6; R6 := R6[0xd3a9d01f]
	167	[5628]	CALL     	R6 2 2 ; R6 := R6(R7)
	168	[5628]	SETGLOBALHASH	R6 K54 ; mPrevShipName := R6
	169	[5629]	GETGLOBAL	R6 K51 ; R6 := mShipSuit
	170	[5629]	SELF     	R6 R6 K56 ; R7 := R6; R6 := R6[0x8e886a73]
	171	[5629]	GETGLOBAL	R8 K57 ; R8 := 0x0469f296
	172	[5629]	MOVE     	R9 R5 ; R9 := R5
	173	[5629]	CALL     	R8 2 0 ; R8,... := R8(R9)
	174	[5629]	CALL     	R6 0 1 ; R6(R7,...)
	175	[5630]	GETGLOBAL	R6 K58 ; R6 := 0x9ba7909f
	176	[5630]	SELF     	R6 R6 K59 ; R7 := R6; R6 := R6[0x7e17ae26]
	177	[5630]	LOADK    	R8 K60 ; R8 := "UpdateRailjackText"
	178	[5630]	LOADK    	R9 K61 ; R9 := ""
	179	[5630]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	180	[5633]	GETUPVAL 	R6 U0 ; R6 := U0
	181	[5633]	GETTABLE 	R6 R6 K62 ; R6 := R6[0x9e3d3434]
	182	[5633]	OP_LOADBOOL	R7 1 0 ; R7 := true
	183	[5633]	CALL     	R6 2 1 ; R6(R7)
	184	[5634]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	185	[5634]	GETGLOBAL	R7 K38 ; R7 := _T
	186	[5634]	GETTABLE 	R7 R7 K63 ; R7 := R7["ChangeHubVisCounter"]
	187	[5634]	CALL     	R6 2 2 ; R6 := R6(R7)
	188	[5634]	TEST     	R6 1 ; if R6 then PC := 194
	189	[5634]	JMP      	194 ; PC := 194
	190	[5635]	GETGLOBAL	R6 K38 ; R6 := _T
	191	[5635]	GETTABLE 	R6 R6 K64 ; R6 := R6[0x33cfa273]
	192	[5635]	LOADK    	R7 := 1.000000
	193	[5635]	CALL     	R6 2 1 ; R6(R7)
	194	[5639]	GETGLOBAL	R6 K3 ; R6 := mLisetMode
	195	[5639]	TEST     	R6 1 ; if R6 then PC := 227
	196	[5639]	JMP      	227 ; PC := 227
	197	[5639]	GETTABLE 	R6 R3 K49 ; R6 := R3["mShip"]
	198	[5639]	GETTABLE 	R6 R6 K65 ; R6 := R6["mItemId"]
	199	[5639]	GETTABLE 	R6 R6 K66 ; R6 := R6["mId"]
	200	[5639]	GETGLOBAL	R7 K67 ; R7 := 0x6c97a788
	201	[5639]	GETTABLE 	R7 R7 K68 ; R7 := R7["InvalidItemID"]
	202	[5639]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 227
	203	[5639]	JMP      	227 ; PC := 227
	204	[5640]	GETUPVAL 	R6 U3 ; R6 := U3
	205	[5640]	GETTABLE 	R6 R6 K69 ; R6 := R6[0x659d451f]
	206	[5640]	GETGLOBAL	R7 K70 ; R7 := 0x0032441c
	207	[5640]	GETTABLE 	R7 R7 K71 ; R7 := R7["UISound_Error"]
	208	[5640]	CALL     	R6 2 1 ; R6(R7)
	209	[5641]	GETGLOBAL	R6 K72 ; R6 := 0x3d106989
	210	[5641]	LOADK    	R7 K73 ; R7 := "No crewship to configure"
	211	[5641]	CALL     	R6 2 1 ; R6(R7)
	212	[5643]	OP_LOADBOOL	R6 1 0 ; R6 := true
	213	[5643]	SETGLOBALHASH	R6 K74 ; mCloseOnTrigger := R6
	214	[5645]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	215	[5645]	GETGLOBAL	R7 K38 ; R7 := _T
	216	[5645]	GETTABLE 	R7 R7 K75 ; R7 := R7["BackgroundMovie"]
	217	[5645]	CALL     	R6 2 2 ; R6 := R6(R7)
	218	[5645]	TEST     	R6 1 ; if R6 then PC := 226
	219	[5645]	JMP      	226 ; PC := 226
	220	[5646]	GETGLOBAL	R6 K38 ; R6 := _T
	221	[5646]	GETTABLE 	R6 R6 K75 ; R6 := R6["BackgroundMovie"]
	222	[5646]	SELF     	R6 R6 K76 ; R7 := R6; R6 := R6[0xe4162eed]
	223	[5646]	LOADK    	R8 K77 ; R8 := "ShowBlockingMessage"
	224	[5646]	LOADK    	R9 K78 ; R9 := "2"
	225	[5646]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	226	[5649]	RETURN   	R0 1 ; return 
	227	[5652]	SETGLOBALHASH	R3 K79 ; mCurrentLoadout := R3
	228	[5654]	GETGLOBAL	R6 K46 ; R6 := 0x25d99d89
	229	[5654]	SELF     	R6 R6 K80 ; R7 := R6; R6 := R6[0x25a6e75e]
	230	[5654]	CALL     	R6 2 2 ; R6 := R6(R7)
	231	[5655]	NEWTABLE 	R7 0 0 ; R7 := {}
	232	[5655]	SETGLOBALHASH	R7 K81 ; mCurrentShip := R7
	233	[5656]	GETGLOBAL	R7 K81 ; R7 := mCurrentShip
	234	[5656]	SELF     	R8 R6 K83 ; R9 := R6; R8 := R6[0xe8e8a9f7]
	235	[5656]	CALL     	R8 2 2 ; R8 := R8(R9)
	236	[5656]	SETTABLE 	R7 K82 R8 ; R7["ID"] := R8
	237	[5658]	SELF     	R7 R6 K84 ; R8 := R6; R7 := R6[0x2fdbb24a]
	238	[5658]	CALL     	R7 2 2 ; R7 := R7(R8)
	239	[5659]	GETGLOBAL	R8 K81 ; R8 := mCurrentShip
	240	[5659]	GETTABLE 	R8 R8 K82 ; R8 := R8["ID"]
	241	[5659]	GETTABLE 	R8 R8 K66 ; R8 := R8["mId"]
	242	[5660]	GETGLOBAL	R9 K85 ; R9 := 0xc8802016
	243	[5660]	MOVE     	R10 R7 ; R10 := R7
	244	[5660]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	245	[5660]	JMP      	252 ; PC := 252
	246	[5661]	GETTABLE 	R14 R13 K65 ; R14 := R13["mItemId"]
	247	[5662]	GETTABLE 	R15 R14 K66 ; R15 := R14["mId"]
	248	[5663]	EQ       	0 R15 R8 ; if R15 ~= R8 then PC := 252
	249	[5663]	JMP      	252 ; PC := 252
	250	[5664]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	251	[5664]	SETTABLE 	R16 K86 R13 ; R16["ShipInfo"] := R13
	252	[5660]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 246; R11 := R12 end
	253	[5665]	JMP      	246 ; PC := 246
	254	[5668]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	255	[5668]	GETTABLE 	R16 R16 K86 ; R16 := R16["ShipInfo"]
	256	[5668]	EQ       	0 R16 K87 ; if R16 ~= nil then PC := 275
	257	[5668]	JMP      	275 ; PC := 275
	258	[5668]	LEN      	R16 R7 ; R16 := # R7
	259	[5668]	LT       	0 K88 R16 ; if 0.000000 >= R16 then PC := 275
	260	[5668]	JMP      	275 ; PC := 275
	261	[5670]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	262	[5670]	GETGLOBAL	R17 K89 ; R17 := 0x3584dca2
	263	[5670]	GETTABLE 	R18 R7 K90 ; R18 := R7[1.000000]
	264	[5670]	GETTABLE 	R18 R18 K65 ; R18 := R18["mItemId"]
	265	[5670]	GETTABLE 	R18 R18 K66 ; R18 := R18["mId"]
	266	[5670]	CALL     	R17 2 2 ; R17 := R17(R18)
	267	[5670]	SETTABLE 	R16 K82 R17 ; R16["ID"] := R17
	268	[5671]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	269	[5671]	GETTABLE 	R17 R7 K90 ; R17 := R7[1.000000]
	270	[5671]	SETTABLE 	R16 K86 R17 ; R16["ShipInfo"] := R17
	271	[5672]	SELF     	R16 R6 K91 ; R17 := R6; R16 := R6[0xe9d7833b]
	272	[5672]	GETGLOBAL	R18 K81 ; R18 := mCurrentShip
	273	[5672]	GETTABLE 	R18 R18 K82 ; R18 := R18["ID"]
	274	[5672]	CALL     	R16 3 1 ; R16(R17,R18)
	275	[5675]	GETUPVAL 	R16 U4 ; R16 := U4
	276	[5675]	CALL     	R16 1 1 ; R16()
	277	[5676]	GETUPVAL 	R16 U5 ; R16 := U5
	278	[5676]	CALL     	R16 1 1 ; R16()
	279	[5677]	GETUPVAL 	R16 U6 ; R16 := U6
	280	[5677]	CALL     	R16 1 1 ; R16()
	281	[5678]	GETUPVAL 	R16 U7 ; R16 := U7
	282	[5678]	CALL     	R16 1 1 ; R16()
	283	[5679]	GETUPVAL 	R16 U8 ; R16 := U8
	284	[5679]	CALL     	R16 1 1 ; R16()
	285	[5680]	GETUPVAL 	R16 U9 ; R16 := U9
	286	[5680]	CALL     	R16 1 1 ; R16()
	287	[5682]	GETUPVAL 	R16 U10 ; R16 := U10
	288	[5682]	CALL     	R16 1 1 ; R16()
	289	[5683]	GETUPVAL 	R16 U11 ; R16 := U11
	290	[5683]	OP_LOADBOOL	R17 1 0 ; R17 := true
	291	[5683]	CALL     	R16 2 1 ; R16(R17)
	292	[5685]	GETGLOBAL	R16 K3 ; R16 := mLisetMode
	293	[5685]	TEST     	R16 1 ; if R16 then PC := 297
	294	[5685]	JMP      	297 ; PC := 297
	295	[5686]	GETUPVAL 	R16 U12 ; R16 := U12
	296	[5686]	CALL     	R16 1 1 ; R16()
	297	[5688]	GETUPVAL 	R16 U13 ; R16 := U13
	298	[5688]	CALL     	R16 1 1 ; R16()
	299	[5689]	GETUPVAL 	R16 U14 ; R16 := U14
	300	[5689]	CALL     	R16 1 1 ; R16()
	301	[5690]	GETUPVAL 	R16 U15 ; R16 := U15
	302	[5690]	CALL     	R16 1 1 ; R16()
	303	[5691]	GETUPVAL 	R16 U16 ; R16 := U16
	304	[5691]	CALL     	R16 1 1 ; R16()
	305	[5692]	GETUPVAL 	R16 U17 ; R16 := U17
	306	[5692]	OP_LOADBOOL	R17 1 0 ; R17 := true
	307	[5692]	CALL     	R16 2 1 ; R16(R17)
	308	[5694]	GETGLOBAL	R16 K12 ; R16 := 0xae91e43b
	309	[5694]	SELF     	R16 R16 K92 ; R17 := R16; R16 := R16[0x58bec6d6]
	310	[5694]	LOADK    	R18 := 0.000000
	311	[5694]	CALL     	R16 3 1 ; R16(R17,R18)
	312	[5695]	GETGLOBAL	R16 K12 ; R16 := 0xae91e43b
	313	[5695]	SELF     	R16 R16 K28 ; R17 := R16; R16 := R16[0x67bc869f]
	314	[5695]	LOADK    	R18 K93 ; R18 := "_root"
	315	[5695]	LOADK    	R19 := 10.000000
	316	[5695]	LOADK    	R20 := 0.000000
	317	[5695]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	318	[5696]	GETGLOBAL	R16 K94 ; R16 := 0x25312c9b
	319	[5696]	GETGLOBAL	R17 K12 ; R17 := 0xae91e43b
	320	[5696]	LOADK    	R18 K93 ; R18 := "_root"
	321	[5696]	LOADK    	R19 := 0.000000
	322	[5696]	NEWTABLE 	R20 1 0 ; R20 := {}
	323	[5696]	LOADK    	R21 := 10.000000
	324	[5696]	SETLIST  	R20 1 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
	325	[5696]	NEWTABLE 	R21 1 0 ; R21 := {}
	326	[5696]	LOADK    	R22 := 100.000000
	327	[5696]	SETLIST  	R21 1 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
	328	[5696]	LOADK    	R22 K96 ; R22 := 0.350000
	329	[5696]	CALL     	R16 7 1 ; R16(R17,R18,R19,R20,R21,R22)
	330	[5698]	GETUPVAL 	R16 U18 ; R16 := U18
	331	[5698]	GETGLOBAL	R17 K12 ; R17 := 0xae91e43b
	332	[5698]	SELF     	R17 R17 K97 ; R18 := R17; R17 := R17[0x6b837788]
	333	[5698]	CALL     	R17 2 2 ; R17 := R17(R18)
	334	[5698]	GETGLOBAL	R18 K12 ; R18 := 0xae91e43b
	335	[5698]	SELF     	R18 R18 K98 ; R19 := R18; R18 := R18[0xaf9fda9f]
	336	[5698]	CALL     	R18 2 0 ; R18,... := R18(R19)
	337	[5698]	CALL     	R16 0 1 ; R16(R17,...)
	338	[5699]	GETUPVAL 	R16 U19 ; R16 := U19
	339	[5699]	CALL     	R16 1 1 ; R16()
	340	[5701]	GETUPVAL 	R16 U3 ; R16 := U3
	341	[5701]	GETTABLE 	R16 R16 K69 ; R16 := R16[0x659d451f]
	342	[5701]	GETGLOBAL	R17 K99 ; R17 := 0x0856e17d
	343	[5701]	CALL     	R16 2 1 ; R16(R17)
	344	[5702]	GETGLOBAL	R16 K37 ; R16 := 0x7b998233
	345	[5702]	GETGLOBAL	R17 K100 ; R17 := 0x949fbfff
	346	[5702]	CALL     	R16 2 2 ; R16 := R16(R17)
	347	[5702]	TEST     	R16 1 ; if R16 then PC := 357
	348	[5702]	JMP      	357 ; PC := 357
	349	[5702]	GETGLOBAL	R16 K101 ; R16 := mMenuLoop
	350	[5702]	EQ       	0 R16 K87 ; if R16 ~= nil then PC := 357
	351	[5702]	JMP      	357 ; PC := 357
	352	[5703]	GETUPVAL 	R16 U3 ; R16 := U3
	353	[5703]	GETTABLE 	R16 R16 K69 ; R16 := R16[0x659d451f]
	354	[5703]	GETGLOBAL	R17 K100 ; R17 := 0x949fbfff
	355	[5703]	CALL     	R16 2 2 ; R16 := R16(R17)
	356	[5703]	SETGLOBALHASH	R16 K101 ; mMenuLoop := R16
	357	[5705]	GETGLOBAL	R16 K37 ; R16 := 0x7b998233
	358	[5705]	GETGLOBAL	R17 K102 ; R17 := 0xd6e45738
	359	[5705]	CALL     	R16 2 2 ; R16 := R16(R17)
	360	[5705]	TEST     	R16 1 ; if R16 then PC := 370
	361	[5705]	JMP      	370 ; PC := 370
	362	[5705]	GETGLOBAL	R16 K103 ; R16 := mMenuMusic
	363	[5705]	EQ       	0 R16 K87 ; if R16 ~= nil then PC := 370
	364	[5705]	JMP      	370 ; PC := 370
	365	[5706]	GETUPVAL 	R16 U3 ; R16 := U3
	366	[5706]	GETTABLE 	R16 R16 K69 ; R16 := R16[0x659d451f]
	367	[5706]	GETGLOBAL	R17 K102 ; R17 := 0xd6e45738
	368	[5706]	CALL     	R16 2 2 ; R16 := R16(R17)
	369	[5706]	SETGLOBALHASH	R16 K103 ; mMenuMusic := R16
	370	[5711]	GETGLOBAL	R16 K104 ; R16 := 0xcfc01047
	371	[5711]	GETUPVAL 	R17 U20 ; R17 := U20
	372	[5711]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	373	[5711]	JMP      	391 ; PC := 391
	374	[5712]	OP_LOADBOOL	R21 0 0 ; R21 := false
	375	[5713]	GETGLOBAL	R22 K85 ; R22 := 0xc8802016
	376	[5713]	GETGLOBAL	R23 K105 ; R23 := mCategories
	377	[5713]	GETTABLE 	R23 R23 K106 ; R23 := R23["mElements"]
	378	[5713]	CALL     	R22 2 4 ; R22,R23,R24 := R22(R23)
	379	[5713]	JMP      	385 ; PC := 385
	380	[5714]	GETTABLE 	R27 R26 K107 ; R27 := R26["State"]
	381	[5714]	EQ       	0 R27 R20 ; if R27 ~= R20 then PC := 385
	382	[5714]	JMP      	385 ; PC := 385
	383	[5715]	OP_LOADBOOL	R21 1 0 ; R21 := true
	384	[5716]	JMP      	387 ; PC := 387
	385	[5713]	TFORLOOP 	R22 2 ; R25,R26 := R22(R23,R24); if R25 ~= nil then begin PC = 380; R24 := R25 end
	386	[5717]	JMP      	380 ; PC := 380
	387	[5719]	TEST     	R21 1 ; if R21 then PC := 391
	388	[5719]	JMP      	391 ; PC := 391
	389	[5720]	GETUPVAL 	R27 U20 ; R27 := U20
	390	[5720]	SETTABLE 	R27 R19 K87 ; R27[R19] := nil
	391	[5711]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 374; R18 := R19 end
	392	[5721]	JMP      	374 ; PC := 374
	393	[5724]	GETGLOBAL	R27 K46 ; R27 := 0x25d99d89
	394	[5724]	SELF     	R27 R27 K108 ; R28 := R27; R27 := R27[0x21a1810f]
	395	[5724]	GETGLOBAL	R29 K57 ; R29 := 0x0469f296
	396	[5724]	LOADK    	R30 K109 ; R30 := "RailjackDryDockTutorial"
	397	[5724]	CALL     	R29 2 0 ; R29,... := R29(R30)
	398	[5724]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	399	[5724]	TEST     	R27 1 ; if R27 then PC := 434
	400	[5724]	JMP      	434 ; PC := 434
	401	[5724]	GETUPVAL 	R27 U0 ; R27 := U0
	402	[5724]	GETTABLE 	R27 R27 K2 ; R27 := R27[0xb73d420f]
	403	[5724]	CALL     	R27 1 2 ; R27 := R27()
	404	[5724]	GETUPVAL 	R28 U0 ; R28 := U0
	405	[5724]	GETTABLE 	R28 R28 K4 ; R28 := R28["UI_MODE_IN_SPACE_SHIP"]
	406	[5724]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 434
	407	[5724]	JMP      	434 ; PC := 434
	408	[5725]	GETGLOBAL	R27 K110 ; R27 := 0x34291f5c
	409	[5725]	GETTABLE 	R27 R27 K111 ; R27 := R27[0xe27b35bb]
	410	[5725]	CALL     	R27 1 2 ; R27 := R27()
	411	[5726]	SETTABLE 	R27 K112 K88 ; R27["dialogType"] := 0.000000
	412	[5727]	SETTABLE 	R27 K113 K114 ; R27["locString"] := "/Lotus/Language/Railjack/RailjackHelp_DryDock"
	413	[5728]	GETGLOBAL	R28 K37 ; R28 := 0x7b998233
	414	[5728]	GETGLOBAL	R29 K115 ; R29 := 0xa0850db3
	415	[5728]	CALL     	R28 2 2 ; R28 := R28(R29)
	416	[5728]	TEST     	R28 1 ; if R28 then PC := 424
	417	[5728]	JMP      	424 ; PC := 424
	418	[5729]	GETGLOBAL	R28 K115 ; R28 := 0xa0850db3
	419	[5729]	SELF     	R28 R28 K117 ; R29 := R28; R28 := R28[0xed4e0128]
	420	[5729]	CALL     	R28 2 2 ; R28 := R28(R29)
	421	[5729]	LOADK    	R29 K118 ; R29 := ",512,256"
	422	[5729]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	423	[5729]	SETTABLE 	R27 K116 R28 ; R27["icon"] := R28
	424	[5731]	GETUPVAL 	R28 U3 ; R28 := U3
	425	[5731]	GETTABLE 	R28 R28 K119 ; R28 := R28[0xe99b84e7]
	426	[5731]	MOVE     	R29 R27 ; R29 := R27
	427	[5731]	CALL     	R28 2 1 ; R28(R29)
	428	[5732]	GETGLOBAL	R28 K46 ; R28 := 0x25d99d89
	429	[5732]	SELF     	R28 R28 K120 ; R29 := R28; R28 := R28[0xbf6c9575]
	430	[5732]	GETGLOBAL	R30 K57 ; R30 := 0x0469f296
	431	[5732]	LOADK    	R31 K109 ; R31 := "RailjackDryDockTutorial"
	432	[5732]	CALL     	R30 2 0 ; R30,... := R30(R31)
	433	[5732]	CALL     	R28 0 1 ; R28(R29,...)
	434	[5735]	GETGLOBAL	R28 K38 ; R28 := _T
	435	[5735]	SETTABLE 	R28 K121 K42 ; R28["CustomizingCrewship"] := true
	436	[5736]	RETURN   	R0 1 ; return 

function #155 <?:5738,5774> (94 instructions, 376 bytes at 0000021130D16020)
0 params, 7 slots, 1 upvalue, 0 locals, 29 constants, 0 functions
	1	[5739]	GETGLOBAL	R0 K0 ; R0 := 0xb693b6c1
	2	[5739]	CALL     	R0 1 2 ; R0 := R0()
	3	[5740]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	4	[5740]	GETGLOBAL	R2 K2 ; R2 := mTimerMgr
	5	[5740]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[5740]	TEST     	R1 1 ; if R1 then PC := 12
	7	[5740]	JMP      	12 ; PC := 12
	8	[5741]	GETGLOBAL	R1 K2 ; R1 := mTimerMgr
	9	[5741]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfaa69527]
	10	[5741]	MOVE     	R3 R0 ; R3 := R0
	11	[5741]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[5744]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	13	[5744]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x8a8c8d5a]
	14	[5744]	MOVE     	R3 R0 ; R3 := R0
	15	[5744]	CALL     	R1 3 1 ; R1(R2,R3)
	16	[5746]	GETGLOBAL	R1 K6 ; R1 := mCloseOnTrigger
	17	[5746]	TEST     	R1 0 ; if not R1 then PC := 41
	18	[5746]	JMP      	41 ; PC := 41
	19	[5747]	OP_LOADBOOL	R1 0 0 ; R1 := false
	20	[5747]	SETGLOBALHASH	R1 K6 ; mCloseOnTrigger := R1
	21	[5748]	GETGLOBAL	R1 K7 ; R1 := _T
	22	[5748]	GETTABLE 	R1 R1 K8 ; R1 := R1["BackgroundMovie"]
	23	[5748]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xe4162eed]
	24	[5748]	LOADK    	R3 K10 ; R3 := "ShowBlockingMessage"
	25	[5748]	LOADK    	R4 K11 ; R4 := "0"
	26	[5748]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	27	[5750]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	28	[5750]	GETGLOBAL	R2 K7 ; R2 := _T
	29	[5750]	GETTABLE 	R2 R2 K12 ; R2 := R2["mTrigger"]
	30	[5750]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[5750]	TEST     	R1 1 ; if R1 then PC := 40
	32	[5750]	JMP      	40 ; PC := 40
	33	[5751]	GETGLOBAL	R1 K7 ; R1 := _T
	34	[5751]	GETTABLE 	R1 R1 K12 ; R1 := R1["mTrigger"]
	35	[5751]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x8eb2112d]
	36	[5751]	LOADK    	R3 K14 ; R3 := "Close"
	37	[5751]	CALL     	R1 3 1 ; R1(R2,R3)
	38	[5752]	GETGLOBAL	R1 K7 ; R1 := _T
	39	[5752]	SETTABLE 	R1 K12 K15 ; R1["mTrigger"] := nil
	40	[5755]	RETURN   	R0 1 ; return 
	41	[5758]	GETGLOBAL	R1 K16 ; R1 := mCosmeticsList
	42	[5758]	GETTABLE 	R1 R1 K17 ; R1 := R1["CustomizationList"]
	43	[5758]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfaa69527]
	44	[5758]	MOVE     	R3 R0 ; R3 := R0
	45	[5758]	CALL     	R1 3 1 ; R1(R2,R3)
	46	[5760]	GETGLOBAL	R1 K18 ; R1 := mStats
	47	[5760]	EQ       	1 R1 K15 ; if R1 == nil then PC := 87
	48	[5760]	JMP      	87 ; PC := 87
	49	[5760]	GETGLOBAL	R1 K18 ; R1 := mStats
	50	[5760]	GETTABLE 	R1 R1 K19 ; R1 := R1["mScrollBar"]
	51	[5760]	GETTABLE 	R1 R1 K20 ; R1 := R1["mEnabled"]
	52	[5760]	TEST     	R1 0 ; if not R1 then PC := 87
	53	[5760]	JMP      	87 ; PC := 87
	54	[5761]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	55	[5761]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0x91a24e4b]
	56	[5761]	LOADK    	R3 K22 ; R3 := "_root"
	57	[5761]	LOADK    	R4 := 25.000000
	58	[5761]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	59	[5762]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	60	[5762]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x91a24e4b]
	61	[5762]	LOADK    	R4 K22 ; R4 := "_root"
	62	[5762]	LOADK    	R5 := 26.000000
	63	[5762]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	64	[5763]	GETGLOBAL	R3 K18 ; R3 := mStats
	65	[5763]	GETTABLE 	R3 R3 K19 ; R3 := R3["mScrollBar"]
	66	[5763]	GETTABLE 	R3 R3 K23 ; R3 := R3["mActiveX"]
	67	[5763]	SUB      	R3 R3 K24 ; R3 := R3 - 340.000000
	68	[5763]	LT       	0 R3 R1 ; if R3 >= R1 then PC := 75
	69	[5763]	JMP      	75 ; PC := 75
	70	[5763]	GETGLOBAL	R3 K18 ; R3 := mStats
	71	[5763]	GETTABLE 	R3 R3 K19 ; R3 := R3["mScrollBar"]
	72	[5763]	GETTABLE 	R3 R3 K25 ; R3 := R3["mActiveY"]
	73	[5763]	LE       	1 R3 R2 ; if R3 <= R2 then PC := 76
	74	[5763]	JMP      	76 ; PC := 76
	75	[5763]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 76
	76	[5763]	OP_LOADBOOL	R3 1 0 ; R3 := true
	77	[5764]	GETGLOBAL	R4 K18 ; R4 := mStats
	78	[5764]	GETTABLE 	R4 R4 K19 ; R4 := R4["mScrollBar"]
	79	[5764]	GETTABLE 	R4 R4 K26 ; R4 := R4["mActive"]
	80	[5764]	EQ       	1 R4 R3 ; if R4 == R3 then PC := 87
	81	[5764]	JMP      	87 ; PC := 87
	82	[5765]	GETGLOBAL	R4 K18 ; R4 := mStats
	83	[5765]	GETTABLE 	R4 R4 K19 ; R4 := R4["mScrollBar"]
	84	[5765]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x46610c50]
	85	[5765]	MOVE     	R6 R3 ; R6 := R3
	86	[5765]	CALL     	R4 3 1 ; R4(R5,R6)
	87	[5769]	GETGLOBAL	R4 K28 ; R4 := mQueueContributionScreen
	88	[5769]	TEST     	R4 0 ; if not R4 then PC := 94
	89	[5769]	JMP      	94 ; PC := 94
	90	[5770]	OP_LOADBOOL	R4 0 0 ; R4 := false
	91	[5770]	SETGLOBALHASH	R4 K28 ; mQueueContributionScreen := R4
	92	[5772]	GETUPVAL 	R4 U0 ; R4 := U0
	93	[5772]	CALL     	R4 1 1 ; R4()
	94	[5774]	RETURN   	R0 1 ; return 

function #156 <?:5776,5778> (3 instructions, 12 bytes at 0000021130D165B0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5777]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5777]	CALL     	R0 1 1 ; R0()
	3	[5778]	RETURN   	R0 1 ; return 

function #157 <?:5780,5786> (15 instructions, 60 bytes at 0000021130D16680)
0 params, 2 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[5781]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5781]	GETGLOBAL	R1 K1 ; R1 := mChildMovie
	3	[5781]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5781]	TEST     	R0 1 ; if R0 then PC := 8
	5	[5781]	JMP      	8 ; PC := 8
	6	[5782]	LOADNIL  	R0 R0 ; R0 := nil
	7	[5782]	RETURN   	R0 2 ; return R0 
	8	[5784]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[5784]	GETTABLE 	R0 R0 K2 ; R0 := R0[0x659d451f]
	10	[5784]	GETGLOBAL	R1 K3 ; R1 := 0x0032441c
	11	[5784]	GETTABLE 	R1 R1 K4 ; R1 := R1["UISound_ButtonSelect"]
	12	[5784]	CALL     	R0 2 1 ; R0(R1)
	13	[5785]	GETUPVAL 	R0 U1 ; R0 := U1
	14	[5785]	CALL     	R0 1 1 ; R0()
	15	[5786]	RETURN   	R0 1 ; return 

function #158 <?:5788,5790> (3 instructions, 12 bytes at 0000021130D16810)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[5789]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[5789]	RETURN   	R0 2 ; return R0 
	3	[5790]	RETURN   	R0 1 ; return 

function #159 <?:5792,5796> (15 instructions, 60 bytes at 0000021130D168E0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5793]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5793]	TEST     	R1 1 ; if R1 then PC := 15
	3	[5793]	JMP      	15 ; PC := 15
	4	[5793]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5793]	GETGLOBAL	R2 K2 ; R2 := mEquipment
	6	[5793]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5793]	TEST     	R1 1 ; if R1 then PC := 15
	8	[5793]	JMP      	15 ; PC := 15
	9	[5794]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	10	[5794]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	11	[5794]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5794]	MOVE     	R4 R0 ; R4 := R0
	13	[5794]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[5794]	CALL     	R1 0 1 ; R1(R2,...)
	15	[5796]	RETURN   	R0 1 ; return 

function #160 <?:5798,5802> (12 instructions, 48 bytes at 0000021130D16A70)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5799]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5799]	GETGLOBAL	R2 K1 ; R2 := mEquipment
	3	[5799]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5799]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5799]	JMP      	12 ; PC := 12
	6	[5800]	GETGLOBAL	R1 K1 ; R1 := mEquipment
	7	[5800]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[5800]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5800]	MOVE     	R4 R0 ; R4 := R0
	10	[5800]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5800]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5802]	RETURN   	R0 1 ; return 

function #161 <?:5804,5808> (16 instructions, 64 bytes at 0000021130D16BD0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5805]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5805]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5805]	JMP      	16 ; PC := 16
	4	[5805]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5805]	GETGLOBAL	R2 K2 ; R2 := mEquipment
	6	[5805]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5805]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5805]	JMP      	16 ; PC := 16
	9	[5806]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	10	[5806]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	11	[5806]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5806]	MOVE     	R4 R0 ; R4 := R0
	13	[5806]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5806]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5806]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5808]	RETURN   	R0 1 ; return 

function #162 <?:5810,5814> (16 instructions, 64 bytes at 0000021130D16D60)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5811]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5811]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5811]	JMP      	16 ; PC := 16
	4	[5811]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5811]	GETGLOBAL	R2 K2 ; R2 := mEquipment
	6	[5811]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5811]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5811]	JMP      	16 ; PC := 16
	9	[5812]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	10	[5812]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5319dc]
	11	[5812]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5812]	MOVE     	R4 R0 ; R4 := R0
	13	[5812]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5812]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5812]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5814]	RETURN   	R0 1 ; return 

function #163 <?:5816,5820> (17 instructions, 68 bytes at 0000021130D16EF0)
1 param, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5817]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5817]	TEST     	R1 1 ; if R1 then PC := 17
	3	[5817]	JMP      	17 ; PC := 17
	4	[5817]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5817]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	6	[5817]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCategoryMenu"]
	7	[5817]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[5817]	TEST     	R1 1 ; if R1 then PC := 17
	9	[5817]	JMP      	17 ; PC := 17
	10	[5818]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	11	[5818]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCategoryMenu"]
	12	[5818]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xdf42446e]
	13	[5818]	GETGLOBAL	R3 K5 ; R3 := 0x03f57322
	14	[5818]	MOVE     	R4 R0 ; R4 := R0
	15	[5818]	CALL     	R3 2 0 ; R3,... := R3(R4)
	16	[5818]	CALL     	R1 0 1 ; R1(R2,...)
	17	[5820]	RETURN   	R0 1 ; return 

function #164 <?:5822,5826> (14 instructions, 56 bytes at 0000021130D170B0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5823]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5823]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5823]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCategoryMenu"]
	4	[5823]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5823]	TEST     	R1 1 ; if R1 then PC := 14
	6	[5823]	JMP      	14 ; PC := 14
	7	[5824]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	8	[5824]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCategoryMenu"]
	9	[5824]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[5824]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[5824]	MOVE     	R4 R0 ; R4 := R0
	12	[5824]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[5824]	CALL     	R1 0 1 ; R1(R2,...)
	14	[5826]	RETURN   	R0 1 ; return 

function #165 <?:5828,5834> (22 instructions, 88 bytes at 0000021130D17240)
1 param, 5 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[5829]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5829]	TEST     	R1 1 ; if R1 then PC := 22
	3	[5829]	JMP      	22 ; PC := 22
	4	[5829]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5829]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	6	[5829]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCategoryMenu"]
	7	[5829]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[5829]	TEST     	R1 1 ; if R1 then PC := 22
	9	[5829]	JMP      	22 ; PC := 22
	10	[5830]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	11	[5830]	SETTABLE 	R1 K4 K5 ; R1["mPrevSelectedId"] := nil
	12	[5831]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	13	[5831]	SETTABLE 	R1 K6 K5 ; R1["mCurrentElementIndex"] := nil
	14	[5832]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	15	[5832]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCategoryMenu"]
	16	[5832]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x070daa5a]
	17	[5832]	GETGLOBAL	R3 K8 ; R3 := 0x03f57322
	18	[5832]	MOVE     	R4 R0 ; R4 := R0
	19	[5832]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[5832]	OP_LOADBOOL	R4 1 0 ; R4 := true
	21	[5832]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	22	[5834]	RETURN   	R0 1 ; return 

function #166 <?:5836,5840> (15 instructions, 60 bytes at 0000021130D17450)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5837]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5837]	TEST     	R1 1 ; if R1 then PC := 15
	3	[5837]	JMP      	15 ; PC := 15
	4	[5837]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5837]	GETGLOBAL	R2 K2 ; R2 := mCategories
	6	[5837]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5837]	TEST     	R1 1 ; if R1 then PC := 15
	8	[5837]	JMP      	15 ; PC := 15
	9	[5838]	GETGLOBAL	R1 K2 ; R1 := mCategories
	10	[5838]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	11	[5838]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5838]	MOVE     	R4 R0 ; R4 := R0
	13	[5838]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[5838]	CALL     	R1 0 1 ; R1(R2,...)
	15	[5840]	RETURN   	R0 1 ; return 

function #167 <?:5842,5846> (12 instructions, 48 bytes at 0000021130D175E0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5843]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5843]	GETGLOBAL	R2 K1 ; R2 := mCategories
	3	[5843]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5843]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5843]	JMP      	12 ; PC := 12
	6	[5844]	GETGLOBAL	R1 K1 ; R1 := mCategories
	7	[5844]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[5844]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5844]	MOVE     	R4 R0 ; R4 := R0
	10	[5844]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5844]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5846]	RETURN   	R0 1 ; return 

function #168 <?:5848,5852> (16 instructions, 64 bytes at 0000021130D17740)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5849]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5849]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5849]	JMP      	16 ; PC := 16
	4	[5849]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5849]	GETGLOBAL	R2 K2 ; R2 := mCategories
	6	[5849]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5849]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5849]	JMP      	16 ; PC := 16
	9	[5850]	GETGLOBAL	R1 K2 ; R1 := mCategories
	10	[5850]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	11	[5850]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5850]	MOVE     	R4 R0 ; R4 := R0
	13	[5850]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5850]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5850]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5852]	RETURN   	R0 1 ; return 

function #169 <?:5854,5858> (16 instructions, 64 bytes at 0000021130D178D0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5855]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5855]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5855]	JMP      	16 ; PC := 16
	4	[5855]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5855]	GETGLOBAL	R2 K2 ; R2 := mCategories
	6	[5855]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5855]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5855]	JMP      	16 ; PC := 16
	9	[5856]	GETGLOBAL	R1 K2 ; R1 := mCategories
	10	[5856]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5319dc]
	11	[5856]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5856]	MOVE     	R4 R0 ; R4 := R0
	13	[5856]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5856]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5856]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5858]	RETURN   	R0 1 ; return 

function #170 <?:5860,5864> (12 instructions, 48 bytes at 0000021130D17A60)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5861]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5861]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5861]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5861]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5861]	JMP      	12 ; PC := 12
	6	[5862]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	7	[5862]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	8	[5862]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5862]	MOVE     	R4 R0 ; R4 := R0
	10	[5862]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5862]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5864]	RETURN   	R0 1 ; return 

function #171 <?:5866,5872> (16 instructions, 64 bytes at 0000021130D17BC0)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[5867]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5867]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5867]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5867]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5867]	JMP      	12 ; PC := 12
	6	[5868]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	7	[5868]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[5868]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5868]	MOVE     	R4 R0 ; R4 := R0
	10	[5868]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5868]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5870]	GETGLOBAL	R1 K4 ; R1 := _T
	13	[5870]	SETTABLE 	R1 K5 K6 ; R1["InfoPopup_Data"] := nil
	14	[5871]	GETGLOBAL	R1 K4 ; R1 := _T
	15	[5871]	SETTABLE 	R1 K7 K6 ; R1["InfoPopup_Grid"] := nil
	16	[5872]	RETURN   	R0 1 ; return 

function #172 <?:5874,5878> (12 instructions, 48 bytes at 0000021130D17D80)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5875]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5875]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5875]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5875]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5875]	JMP      	12 ; PC := 12
	6	[5876]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	7	[5876]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x070daa5a]
	8	[5876]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5876]	MOVE     	R4 R0 ; R4 := R0
	10	[5876]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5876]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5878]	RETURN   	R0 1 ; return 

function #173 <?:5880,5882> (3 instructions, 12 bytes at 0000021130D17EE0)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[5881]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[5881]	SETTABLE 	R1 K1 R0 ; R1["mTrigger"] := R0
	3	[5882]	RETURN   	R0 1 ; return 

function #174 <?:5884,5896> (55 instructions, 220 bytes at 0000021130D17FE0)
2 params, 6 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[5885]	GETGLOBAL	R2 K0 ; R2 := mInputBlocked
	2	[5885]	TEST     	R2 1 ; if R2 then PC := 9
	3	[5885]	JMP      	9 ; PC := 9
	4	[5885]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	5	[5885]	GETGLOBAL	R3 K2 ; R3 := mChildMovie
	6	[5885]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[5885]	TEST     	R2 1 ; if R2 then PC := 11
	8	[5885]	JMP      	11 ; PC := 11
	9	[5886]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[5886]	RETURN   	R2 2 ; return R2 
	11	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	12	[5889]	EQ       	1 R2 K4 ; if R2 == nil then PC := 38
	13	[5889]	JMP      	38 ; PC := 38
	14	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	15	[5889]	GETTABLE 	R2 R2 K5 ; R2 := R2["mIsVisible"]
	16	[5889]	TEST     	R2 0 ; if not R2 then PC := 38
	17	[5889]	JMP      	38 ; PC := 38
	18	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	19	[5889]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	20	[5889]	GETTABLE 	R2 R2 K7 ; R2 := R2["mEnabled"]
	21	[5889]	TEST     	R2 0 ; if not R2 then PC := 38
	22	[5889]	JMP      	38 ; PC := 38
	23	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	24	[5889]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	25	[5889]	GETTABLE 	R2 R2 K8 ; R2 := R2["mActive"]
	26	[5889]	TEST     	R2 0 ; if not R2 then PC := 38
	27	[5889]	JMP      	38 ; PC := 38
	28	[5890]	GETGLOBAL	R2 K3 ; R2 := mStats
	29	[5890]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	30	[5890]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x30456f58]
	31	[5890]	GETGLOBAL	R4 K10 ; R4 := 0x03f57322
	32	[5890]	MOVE     	R5 R1 ; R5 := R1
	33	[5890]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[5890]	GETGLOBAL	R5 K11 ; R5 := 0x0032441c
	35	[5890]	GETTABLE 	R5 R5 K12 ; R5 := R5["UISound_Scroll"]
	36	[5890]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	37	[5890]	JMP      	53 ; PC := 53
	38	[5892]	GETGLOBAL	R2 K13 ; R2 := mInventoryGrid
	39	[5892]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	40	[5892]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x30456f58]
	41	[5892]	GETGLOBAL	R4 K10 ; R4 := 0x03f57322
	42	[5892]	MOVE     	R5 R1 ; R5 := R1
	43	[5892]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[5892]	GETGLOBAL	R5 K11 ; R5 := 0x0032441c
	45	[5892]	GETTABLE 	R5 R5 K12 ; R5 := R5["UISound_Scroll"]
	46	[5892]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	47	[5893]	GETGLOBAL	R2 K14 ; R2 := mCosmeticsList
	48	[5893]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x8a8eba7f]
	49	[5893]	GETGLOBAL	R4 K10 ; R4 := 0x03f57322
	50	[5893]	MOVE     	R5 R1 ; R5 := R1
	51	[5893]	CALL     	R4 2 0 ; R4,... := R4(R5)
	52	[5893]	CALL     	R2 0 1 ; R2(R3,...)
	53	[5895]	OP_LOADBOOL	R2 0 0 ; R2 := false
	54	[5895]	RETURN   	R2 2 ; return R2 
	55	[5896]	RETURN   	R0 1 ; return 

function #175 <?:5898,5907> (29 instructions, 116 bytes at 0000021130D18360)
0 params, 4 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[5899]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5899]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5899]	JMP      	9 ; PC := 9
	4	[5899]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5899]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5899]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5899]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5899]	JMP      	11 ; PC := 11
	9	[5900]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5900]	RETURN   	R0 2 ; return R0 
	11	[5903]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5903]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5903]	GETTABLE 	R1 R1 K4 ; R1 := R1["WEAPON_INV"]
	14	[5903]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 21
	15	[5903]	JMP      	21 ; PC := 21
	16	[5903]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	17	[5903]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5903]	GETTABLE 	R1 R1 K5 ; R1 := R1["EQUIP_INV"]
	19	[5903]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 27
	20	[5903]	JMP      	27 ; PC := 27
	21	[5904]	GETGLOBAL	R0 K6 ; R0 := mInventoryGrid
	22	[5904]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x0b35b612]
	23	[5904]	GETUPVAL 	R2 U1 ; R2 := U1
	24	[5904]	GETTABLE 	R2 R2 K8 ; R2 := R2["DECREMENT"]
	25	[5904]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[5904]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	27	[5906]	OP_LOADBOOL	R0 1 0 ; R0 := true
	28	[5906]	RETURN   	R0 2 ; return R0 
	29	[5907]	RETURN   	R0 1 ; return 

function #176 <?:5909,5918> (29 instructions, 116 bytes at 0000021130D185B0)
0 params, 4 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[5910]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5910]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5910]	JMP      	9 ; PC := 9
	4	[5910]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5910]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5910]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5910]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5910]	JMP      	11 ; PC := 11
	9	[5911]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5911]	RETURN   	R0 2 ; return R0 
	11	[5914]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5914]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5914]	GETTABLE 	R1 R1 K4 ; R1 := R1["WEAPON_INV"]
	14	[5914]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 21
	15	[5914]	JMP      	21 ; PC := 21
	16	[5914]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	17	[5914]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5914]	GETTABLE 	R1 R1 K5 ; R1 := R1["EQUIP_INV"]
	19	[5914]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 27
	20	[5914]	JMP      	27 ; PC := 27
	21	[5915]	GETGLOBAL	R0 K6 ; R0 := mInventoryGrid
	22	[5915]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x0b35b612]
	23	[5915]	GETUPVAL 	R2 U1 ; R2 := U1
	24	[5915]	GETTABLE 	R2 R2 K8 ; R2 := R2["INCREMENT"]
	25	[5915]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[5915]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	27	[5917]	OP_LOADBOOL	R0 1 0 ; R0 := true
	28	[5917]	RETURN   	R0 2 ; return R0 
	29	[5918]	RETURN   	R0 1 ; return 

function #177 <?:5920,5935> (48 instructions, 192 bytes at 0000021130D18800)
0 params, 4 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[5921]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5921]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5921]	JMP      	9 ; PC := 9
	4	[5921]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5921]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5921]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5921]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5921]	JMP      	11 ; PC := 11
	9	[5922]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5922]	RETURN   	R0 2 ; return R0 
	11	[5925]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5925]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5925]	GETTABLE 	R1 R1 K4 ; R1 := R1["COSMETICS"]
	14	[5925]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 22
	15	[5925]	JMP      	22 ; PC := 22
	16	[5926]	GETGLOBAL	R0 K5 ; R0 := 0xae91e43b
	17	[5926]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xe4162eed]
	18	[5926]	LOADK    	R2 K7 ; R2 := "ToggleInteriorCustomization"
	19	[5926]	LOADK    	R3 K8 ; R3 := ""
	20	[5926]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	21	[5926]	JMP      	46 ; PC := 46
	22	[5927]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	23	[5927]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[5927]	GETTABLE 	R1 R1 K9 ; R1 := R1["WEAPON_INV"]
	25	[5927]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 32
	26	[5927]	JMP      	32 ; PC := 32
	27	[5927]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	28	[5927]	GETUPVAL 	R1 U0 ; R1 := U0
	29	[5927]	GETTABLE 	R1 R1 K10 ; R1 := R1["EQUIP_INV"]
	30	[5927]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 46
	31	[5927]	JMP      	46 ; PC := 46
	32	[5928]	GETGLOBAL	R0 K11 ; R0 := _T
	33	[5928]	SETTABLE 	R0 K12 K13 ; R0["InfoPopup_Data"] := nil
	34	[5929]	GETGLOBAL	R0 K11 ; R0 := _T
	35	[5929]	SETTABLE 	R0 K14 K13 ; R0["InfoPopup_Data2"] := nil
	36	[5930]	GETGLOBAL	R0 K15 ; R0 := mInventoryGrid
	37	[5930]	SETTABLE 	R0 K16 K13 ; R0["mPrevSelectedId"] := nil
	38	[5931]	GETGLOBAL	R0 K15 ; R0 := mInventoryGrid
	39	[5931]	SETTABLE 	R0 K17 K13 ; R0["mCurrentElementIndex"] := nil
	40	[5932]	GETGLOBAL	R0 K15 ; R0 := mInventoryGrid
	41	[5932]	SELF     	R0 R0 K18 ; R1 := R0; R0 := R0[0x0b35b612]
	42	[5932]	GETUPVAL 	R2 U1 ; R2 := U1
	43	[5932]	GETTABLE 	R2 R2 K19 ; R2 := R2["DECREMENT"]
	44	[5932]	OP_LOADBOOL	R3 1 0 ; R3 := true
	45	[5932]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	46	[5934]	OP_LOADBOOL	R0 1 0 ; R0 := true
	47	[5934]	RETURN   	R0 2 ; return R0 
	48	[5935]	RETURN   	R0 1 ; return 

function #178 <?:5937,5950> (37 instructions, 148 bytes at 0000021130D18B80)
0 params, 4 slots, 2 upvalues, 0 locals, 15 constants, 0 functions
	1	[5938]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5938]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5938]	JMP      	9 ; PC := 9
	4	[5938]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5938]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5938]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5938]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5938]	JMP      	11 ; PC := 11
	9	[5939]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5939]	RETURN   	R0 2 ; return R0 
	11	[5942]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5942]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5942]	GETTABLE 	R1 R1 K4 ; R1 := R1["WEAPON_INV"]
	14	[5942]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 21
	15	[5942]	JMP      	21 ; PC := 21
	16	[5942]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	17	[5942]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5942]	GETTABLE 	R1 R1 K5 ; R1 := R1["EQUIP_INV"]
	19	[5942]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 35
	20	[5942]	JMP      	35 ; PC := 35
	21	[5943]	GETGLOBAL	R0 K6 ; R0 := _T
	22	[5943]	SETTABLE 	R0 K7 K8 ; R0["InfoPopup_Data"] := nil
	23	[5944]	GETGLOBAL	R0 K6 ; R0 := _T
	24	[5944]	SETTABLE 	R0 K9 K8 ; R0["InfoPopup_Data2"] := nil
	25	[5945]	GETGLOBAL	R0 K10 ; R0 := mInventoryGrid
	26	[5945]	SETTABLE 	R0 K11 K8 ; R0["mPrevSelectedId"] := nil
	27	[5946]	GETGLOBAL	R0 K10 ; R0 := mInventoryGrid
	28	[5946]	SETTABLE 	R0 K12 K8 ; R0["mCurrentElementIndex"] := nil
	29	[5947]	GETGLOBAL	R0 K10 ; R0 := mInventoryGrid
	30	[5947]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x0b35b612]
	31	[5947]	GETUPVAL 	R2 U1 ; R2 := U1
	32	[5947]	GETTABLE 	R2 R2 K14 ; R2 := R2["INCREMENT"]
	33	[5947]	OP_LOADBOOL	R3 1 0 ; R3 := true
	34	[5947]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	35	[5949]	OP_LOADBOOL	R0 1 0 ; R0 := true
	36	[5949]	RETURN   	R0 2 ; return R0 
	37	[5950]	RETURN   	R0 1 ; return 

function #179 <?:5952,5967> (55 instructions, 220 bytes at 0000021130D18E70)
0 params, 4 slots, 1 upvalue, 0 locals, 15 constants, 1 function
	1	[5953]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5953]	TEST     	R0 1 ; if R0 then PC := 12
	3	[5953]	JMP      	12 ; PC := 12
	4	[5953]	GETGLOBAL	R0 K1 ; R0 := mCosmeticsList
	5	[5953]	EQ       	1 R0 K2 ; if R0 == nil then PC := 12
	6	[5953]	JMP      	12 ; PC := 12
	7	[5953]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	8	[5953]	GETGLOBAL	R1 K4 ; R1 := mChildMovie
	9	[5953]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[5953]	TEST     	R0 1 ; if R0 then PC := 14
	11	[5953]	JMP      	14 ; PC := 14
	12	[5954]	OP_LOADBOOL	R0 0 0 ; R0 := false
	13	[5954]	RETURN   	R0 2 ; return R0 
	14	[5957]	GETGLOBAL	R0 K5 ; R0 := mActiveState
	15	[5957]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[5957]	GETTABLE 	R1 R1 K6 ; R1 := R1["COSMETICS"]
	17	[5957]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 25
	18	[5957]	JMP      	25 ; PC := 25
	19	[5958]	GETGLOBAL	R0 K1 ; R0 := mCosmeticsList
	20	[5958]	GETTABLE 	R0 R0 K7 ; R0 := R0["CustomizationList"]
	21	[5958]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xea061e98]
	22	[5961]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	23	[5958]	CALL     	R0 3 1 ; R0(R1,R2)
	24	[5961]	JMP      	53 ; PC := 53
	25	[5962]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	26	[5962]	GETGLOBAL	R1 K9 ; R1 := mInventoryGrid
	27	[5962]	CALL     	R0 2 2 ; R0 := R0(R1)
	28	[5962]	TEST     	R0 1 ; if R0 then PC := 53
	29	[5962]	JMP      	53 ; PC := 53
	30	[5962]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	31	[5962]	GETGLOBAL	R1 K9 ; R1 := mInventoryGrid
	32	[5962]	GETTABLE 	R1 R1 K10 ; R1 := R1["mSortMenu"]
	33	[5962]	CALL     	R0 2 2 ; R0 := R0(R1)
	34	[5962]	TEST     	R0 1 ; if R0 then PC := 53
	35	[5962]	JMP      	53 ; PC := 53
	36	[5962]	GETGLOBAL	R0 K5 ; R0 := mActiveState
	37	[5962]	GETUPVAL 	R1 U0 ; R1 := U0
	38	[5962]	GETTABLE 	R1 R1 K11 ; R1 := R1["WEAPON_INV"]
	39	[5962]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 46
	40	[5962]	JMP      	46 ; PC := 46
	41	[5962]	GETGLOBAL	R0 K5 ; R0 := mActiveState
	42	[5962]	GETUPVAL 	R1 U0 ; R1 := U0
	43	[5962]	GETTABLE 	R1 R1 K12 ; R1 := R1["EQUIP_INV"]
	44	[5962]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 53
	45	[5962]	JMP      	53 ; PC := 53
	46	[5963]	GETGLOBAL	R0 K9 ; R0 := mInventoryGrid
	47	[5963]	GETTABLE 	R0 R0 K10 ; R0 := R0["mSortMenu"]
	48	[5963]	GETTABLE 	R0 R0 K13 ; R0 := R0["mMainButton"]
	49	[5963]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x52f40f14]
	50	[5963]	OP_LOADBOOL	R2 1 0 ; R2 := true
	51	[5963]	OP_LOADBOOL	R3 1 0 ; R3 := true
	52	[5963]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	53	[5966]	OP_LOADBOOL	R0 1 0 ; R0 := true
	54	[5966]	RETURN   	R0 2 ; return R0 
	55	[5967]	RETURN   	R0 1 ; return 

function #180 <?:5969,5973> (9 instructions, 36 bytes at 0000021130D19300)
0 params, 2 slots, 3 upvalues, 0 locals, 1 constant, 0 functions
	1	[5970]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5970]	GETGLOBAL	R1 K0 ; R1 := mInteriorCustomization
	3	[5970]	NOT      	R1 R1 ; R1 := not R1
	4	[5970]	CALL     	R0 2 1 ; R0(R1)
	5	[5971]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[5971]	CALL     	R0 1 1 ; R0()
	7	[5972]	GETUPVAL 	R0 U2 ; R0 := U2
	8	[5972]	CALL     	R0 1 1 ; R0()
	9	[5973]	RETURN   	R0 1 ; return 

function #181 <?:5975,5978> (9 instructions, 36 bytes at 000002111D430CA0)
1 param, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5976]	SETGLOBALHASH	R1 K0 ; mChildMovie := R1
	2	[5977]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5977]	LOADNIL  	R2 R4 ; R2 := R3 := R4 := nil
	4	[5977]	EQ       	1 R0 K1 ; if R0 == "true" then PC := 7
	5	[5977]	JMP      	7 ; PC := 7
	6	[5977]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 7
	7	[5977]	OP_LOADBOOL	R5 1 0 ; R5 := true
	8	[5977]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	9	[5978]	RETURN   	R0 1 ; return 

function #182 <?:5980,6074> (363 instructions, 1452 bytes at 000002111D430DA0)
3 params, 15 slots, 9 upvalues, 0 locals, 61 constants, 0 functions
	1	[5981]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[5981]	GETGLOBAL	R4 K1 ; R4 := mChildMovie
	3	[5981]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[5981]	TEST     	R3 1 ; if R3 then PC := 16
	5	[5981]	JMP      	16 ; PC := 16
	6	[5982]	TEST     	R2 0 ; if not R2 then PC := 14
	7	[5982]	JMP      	14 ; PC := 14
	8	[5983]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	9	[5983]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x32302b4a]
	10	[5983]	CALL     	R3 2 1 ; R3(R4)
	11	[5984]	LOADNIL  	R3 R3 ; R3 := nil
	12	[5984]	SETGLOBALHASH	R3 K1 ; mChildMovie := R3
	13	[5984]	JMP      	16 ; PC := 16
	14	[5986]	OP_LOADBOOL	R3 0 0 ; R3 := false
	15	[5986]	RETURN   	R3 2 ; return R3 
	16	[5990]	TESTSET  	R3 R0 1 ; if R0 then PC := 20 else R3 := R0 
	17	[5990]	JMP      	20 ; PC := 20
	18	[5990]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[5990]	GETTABLE 	R3 R3 K4 ; R3 := R3["EQUIPMENT"]
	20	[5990]	SETGLOBALHASH	R3 K3 ; mActiveState := R3
	21	[5992]	OP_LOADBOOL	R3 0 0 ; R3 := false
	22	[5993]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	23	[5993]	GETUPVAL 	R5 U0 ; R5 := U0
	24	[5993]	GETTABLE 	R5 R5 K5 ; R5 := R5["ARCHWING"]
	25	[5993]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 31
	26	[5993]	JMP      	31 ; PC := 31
	27	[5994]	OP_LOADBOOL	R3 1 0 ; R3 := true
	28	[5995]	GETUPVAL 	R4 U1 ; R4 := U1
	29	[5995]	CALL     	R4 1 1 ; R4()
	30	[5995]	JMP      	51 ; PC := 51
	31	[5996]	GETGLOBAL	R4 K6 ; R4 := mLisetMode
	32	[5996]	TEST     	R4 1 ; if R4 then PC := 51
	33	[5996]	JMP      	51 ; PC := 51
	34	[5997]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	35	[5997]	GETUPVAL 	R5 U0 ; R5 := U0
	36	[5997]	GETTABLE 	R5 R5 K7 ; R5 := R5["WEAPONS"]
	37	[5997]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 43
	38	[5997]	JMP      	43 ; PC := 43
	39	[5998]	OP_LOADBOOL	R3 1 0 ; R3 := true
	40	[5999]	GETUPVAL 	R4 U2 ; R4 := U2
	41	[5999]	CALL     	R4 1 1 ; R4()
	42	[5999]	JMP      	51 ; PC := 51
	43	[6000]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	44	[6000]	GETUPVAL 	R5 U0 ; R5 := U0
	45	[6000]	GETTABLE 	R5 R5 K4 ; R5 := R5["EQUIPMENT"]
	46	[6000]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 51
	47	[6000]	JMP      	51 ; PC := 51
	48	[6001]	OP_LOADBOOL	R3 1 0 ; R3 := true
	49	[6002]	GETUPVAL 	R4 U3 ; R4 := U3
	50	[6002]	CALL     	R4 1 1 ; R4()
	51	[6006]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	52	[6006]	GETUPVAL 	R5 U0 ; R5 := U0
	53	[6006]	GETTABLE 	R5 R5 K8 ; R5 := R5["WEAPON_INV"]
	54	[6006]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 67
	55	[6006]	JMP      	67 ; PC := 67
	56	[6006]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	57	[6006]	GETUPVAL 	R5 U0 ; R5 := U0
	58	[6006]	GETTABLE 	R5 R5 K9 ; R5 := R5["EQUIP_INV"]
	59	[6006]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 67
	60	[6006]	JMP      	67 ; PC := 67
	61	[6006]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	62	[6006]	GETUPVAL 	R5 U0 ; R5 := U0
	63	[6006]	GETTABLE 	R5 R5 K10 ; R5 := R5["ARCH_INV"]
	64	[6006]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 67
	65	[6006]	JMP      	67 ; PC := 67
	66	[6006]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 67
	67	[6006]	OP_LOADBOOL	R4 1 0 ; R4 := true
	68	[6007]	GETGLOBAL	R5 K11 ; R5 := mSearchBox
	69	[6007]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0x46610c50]
	70	[6007]	MOVE     	R7 R4 ; R7 := R4
	71	[6007]	CALL     	R5 3 1 ; R5(R6,R7)
	72	[6008]	TEST     	R4 0 ; if not R4 then PC := 77
	73	[6008]	JMP      	77 ; PC := 77
	74	[6009]	GETGLOBAL	R5 K11 ; R5 := mSearchBox
	75	[6009]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xb61fb39f]
	76	[6009]	CALL     	R5 2 1 ; R5(R6)
	77	[6012]	GETGLOBAL	R5 K14 ; R5 := _T
	78	[6012]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	79	[6012]	GETUPVAL 	R7 U0 ; R7 := U0
	80	[6012]	GETTABLE 	R7 R7 K8 ; R7 := R7["WEAPON_INV"]
	81	[6012]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 89
	82	[6012]	JMP      	89 ; PC := 89
	83	[6012]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	84	[6012]	GETUPVAL 	R7 U0 ; R7 := U0
	85	[6012]	GETTABLE 	R7 R7 K9 ; R7 := R7["EQUIP_INV"]
	86	[6012]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 89
	87	[6012]	JMP      	89 ; PC := 89
	88	[6012]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 89
	89	[6012]	OP_LOADBOOL	R6 1 0 ; R6 := true
	90	[6012]	SETTABLE 	R5 K15 R6 ; R5["ShowFusionPoints"] := R6
	91	[6014]	TEST     	R4 0 ; if not R4 then PC := 107
	92	[6014]	JMP      	107 ; PC := 107
	93	[6015]	GETUPVAL 	R5 U4 ; R5 := U4
	94	[6015]	GETGLOBAL	R6 K16 ; R6 := 0xae91e43b
	95	[6015]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0x6b837788]
	96	[6015]	CALL     	R6 2 2 ; R6 := R6(R7)
	97	[6015]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	98	[6015]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0xaf9fda9f]
	99	[6015]	CALL     	R7 2 0 ; R7,... := R7(R8)
	100	[6015]	CALL     	R5 0 1 ; R5(R6,...)
	101	[6016]	TEST     	R1 0 ; if not R1 then PC := 125
	102	[6016]	JMP      	125 ; PC := 125
	103	[6017]	GETUPVAL 	R5 U5 ; R5 := U5
	104	[6017]	MOVE     	R6 R1 ; R6 := R1
	105	[6017]	CALL     	R5 2 1 ; R5(R6)
	106	[6018]	JMP      	125 ; PC := 125
	107	[6019]	GETGLOBAL	R5 K3 ; R5 := mActiveState
	108	[6019]	GETUPVAL 	R6 U0 ; R6 := U0
	109	[6019]	GETTABLE 	R6 R6 K19 ; R6 := R6["SKIN_SELECTION"]
	110	[6019]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 117
	111	[6019]	JMP      	117 ; PC := 117
	112	[6019]	GETGLOBAL	R5 K3 ; R5 := mActiveState
	113	[6019]	GETUPVAL 	R6 U0 ; R6 := U0
	114	[6019]	GETTABLE 	R6 R6 K20 ; R6 := R6["ATTACHMENTS"]
	115	[6019]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 125
	116	[6019]	JMP      	125 ; PC := 125
	117	[6020]	GETUPVAL 	R5 U4 ; R5 := U4
	118	[6020]	GETGLOBAL	R6 K16 ; R6 := 0xae91e43b
	119	[6020]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0x6b837788]
	120	[6020]	CALL     	R6 2 2 ; R6 := R6(R7)
	121	[6020]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	122	[6020]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0xaf9fda9f]
	123	[6020]	CALL     	R7 2 0 ; R7,... := R7(R8)
	124	[6020]	CALL     	R5 0 1 ; R5(R6,...)
	125	[6023]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	126	[6023]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	127	[6023]	CALL     	R5 2 2 ; R5 := R5(R6)
	128	[6023]	TEST     	R5 1 ; if R5 then PC := 169
	129	[6023]	JMP      	169 ; PC := 169
	130	[6024]	GETGLOBAL	R5 K22 ; R5 := 0x64fb1586
	131	[6024]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	132	[6024]	GETUPVAL 	R7 U0 ; R7 := U0
	133	[6024]	GETTABLE 	R7 R7 K23 ; R7 := R7["RESOURCES"]
	134	[6024]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 142
	135	[6024]	JMP      	142 ; PC := 142
	136	[6024]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	137	[6024]	GETUPVAL 	R7 U0 ; R7 := U0
	138	[6024]	GETTABLE 	R7 R7 K24 ; R7 := R7["INTRINSICS"]
	139	[6024]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 142
	140	[6024]	JMP      	142 ; PC := 142
	141	[6024]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 142
	142	[6024]	OP_LOADBOOL	R6 1 0 ; R6 := true
	143	[6024]	CALL     	R5 2 2 ; R5 := R5(R6)
	144	[6025]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	145	[6025]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	146	[6025]	LOADK    	R8 K26 ; R8 := "EnableColorCorrection"
	147	[6025]	MOVE     	R9 R5 ; R9 := R5
	148	[6025]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	149	[6026]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	150	[6026]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	151	[6026]	LOADK    	R8 K27 ; R8 := "EnableBackgroundFade"
	152	[6026]	MOVE     	R9 R5 ; R9 := R5
	153	[6026]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	154	[6027]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	155	[6027]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	156	[6027]	LOADK    	R8 K28 ; R8 := "EnableBackgroundBlur"
	157	[6027]	MOVE     	R9 R5 ; R9 := R5
	158	[6027]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	159	[6028]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	160	[6028]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	161	[6028]	LOADK    	R8 K29 ; R8 := "SetAlpha"
	162	[6028]	TEST     	R5 0 ; if not R5 then PC := 167
	163	[6028]	JMP      	167 ; PC := 167
	164	[6028]	LOADK    	R9 K30 ; R9 := "100,0"
	165	[6028]	TEST     	R9 1 ; if R9 then PC := 168
	166	[6028]	JMP      	168 ; PC := 168
	167	[6028]	LOADK    	R9 K31 ; R9 := "50,80"
	168	[6028]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	169	[6031]	TEST     	R1 0 ; if not R1 then PC := 186
	170	[6031]	JMP      	186 ; PC := 186
	171	[6032]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	172	[6032]	GETTABLE 	R7 R1 K32 ; R7 := R1["SetupFunc"]
	173	[6032]	CALL     	R6 2 2 ; R6 := R6(R7)
	174	[6032]	TEST     	R6 1 ; if R6 then PC := 178
	175	[6032]	JMP      	178 ; PC := 178
	176	[6033]	GETTABLE 	R6 R1 K33 ; R6 := R1[0xf5ac0f11]
	177	[6033]	CALL     	R6 1 1 ; R6()
	178	[6035]	GETTABLE 	R6 R1 K34 ; R6 := R1["Screen"]
	179	[6035]	TEST     	R6 0 ; if not R6 then PC := 186
	180	[6035]	JMP      	186 ; PC := 186
	181	[6036]	GETGLOBAL	R6 K16 ; R6 := 0xae91e43b
	182	[6036]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x1fd6abd0]
	183	[6036]	GETTABLE 	R8 R1 K34 ; R8 := R1["Screen"]
	184	[6036]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	185	[6036]	SETGLOBALHASH	R6 K1 ; mChildMovie := R6
	186	[6040]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	187	[6040]	GETGLOBAL	R7 K1 ; R7 := mChildMovie
	188	[6040]	CALL     	R6 2 2 ; R6 := R6(R7)
	189	[6041]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	190	[6041]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0xbc838db9]
	191	[6041]	NOT      	R9 R6 ; R9 := not R6
	192	[6041]	CALL     	R7 3 1 ; R7(R8,R9)
	193	[6042]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	194	[6042]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	195	[6042]	LOADK    	R9 K38 ; R9 := "TopLeftContainer.Equipment"
	196	[6042]	LOADK    	R10 := 11.000000
	197	[6042]	MOVE     	R11 R3 ; R11 := R3
	198	[6042]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	199	[6043]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	200	[6043]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	201	[6043]	LOADK    	R9 K39 ; R9 := "TopLeftContainer.Inventory"
	202	[6043]	LOADK    	R10 := 11.000000
	203	[6043]	MOVE     	R11 R4 ; R11 := R4
	204	[6043]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	205	[6044]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	206	[6044]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	207	[6044]	LOADK    	R9 K40 ; R9 := "TopLeftContainer.Cosmetics"
	208	[6044]	LOADK    	R10 := 11.000000
	209	[6044]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	210	[6044]	GETUPVAL 	R12 U0 ; R12 := U0
	211	[6044]	GETTABLE 	R12 R12 K41 ; R12 := R12["COSMETICS"]
	212	[6044]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 225
	213	[6044]	JMP      	225 ; PC := 225
	214	[6044]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	215	[6044]	GETUPVAL 	R12 U0 ; R12 := U0
	216	[6044]	GETTABLE 	R12 R12 K20 ; R12 := R12["ATTACHMENTS"]
	217	[6044]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 225
	218	[6044]	JMP      	225 ; PC := 225
	219	[6044]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	220	[6044]	GETUPVAL 	R12 U0 ; R12 := U0
	221	[6044]	GETTABLE 	R12 R12 K19 ; R12 := R12["SKIN_SELECTION"]
	222	[6044]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 225
	223	[6044]	JMP      	225 ; PC := 225
	224	[6044]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 225
	225	[6044]	OP_LOADBOOL	R11 1 0 ; R11 := true
	226	[6044]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	227	[6045]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	228	[6045]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	229	[6045]	LOADK    	R9 K42 ; R9 := "TopLeftContainer.CurrencyBar"
	230	[6045]	LOADK    	R10 := 11.000000
	231	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	232	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	233	[6045]	GETTABLE 	R12 R12 K4 ; R12 := R12["EQUIPMENT"]
	234	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	235	[6045]	JMP      	252 ; PC := 252
	236	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	237	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	238	[6045]	GETTABLE 	R12 R12 K7 ; R12 := R12["WEAPONS"]
	239	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	240	[6045]	JMP      	252 ; PC := 252
	241	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	242	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	243	[6045]	GETTABLE 	R12 R12 K8 ; R12 := R12["WEAPON_INV"]
	244	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	245	[6045]	JMP      	252 ; PC := 252
	246	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	247	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	248	[6045]	GETTABLE 	R12 R12 K9 ; R12 := R12["EQUIP_INV"]
	249	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	250	[6045]	JMP      	252 ; PC := 252
	251	[6045]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 252
	252	[6045]	OP_LOADBOOL	R11 1 0 ; R11 := true
	253	[6045]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	254	[6046]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	255	[6046]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	256	[6046]	LOADK    	R9 K43 ; R9 := "TopRightContainer.UpgradedDecoration"
	257	[6046]	LOADK    	R10 := 11.000000
	258	[6046]	MOVE     	R11 R6 ; R11 := R6
	259	[6046]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	260	[6047]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	261	[6047]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	262	[6047]	LOADK    	R9 K44 ; R9 := "BottomRightContainer"
	263	[6047]	LOADK    	R10 := 11.000000
	264	[6047]	MOVE     	R11 R6 ; R11 := R6
	265	[6047]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	266	[6048]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	267	[6048]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	268	[6048]	LOADK    	R9 K45 ; R9 := "BottomRightContainer.Lines"
	269	[6048]	LOADK    	R10 := 11.000000
	270	[6048]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	271	[6048]	GETUPVAL 	R12 U0 ; R12 := U0
	272	[6048]	GETTABLE 	R12 R12 K5 ; R12 := R12["ARCHWING"]
	273	[6048]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 280
	274	[6048]	JMP      	280 ; PC := 280
	275	[6048]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	276	[6048]	GETUPVAL 	R12 U0 ; R12 := U0
	277	[6048]	GETTABLE 	R12 R12 K10 ; R12 := R12["ARCH_INV"]
	278	[6048]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 281
	279	[6048]	JMP      	281 ; PC := 281
	280	[6048]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 281
	281	[6048]	OP_LOADBOOL	R11 1 0 ; R11 := true
	282	[6048]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	283	[6049]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	284	[6049]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	285	[6049]	LOADK    	R9 K46 ; R9 := "BottomRightContainer.Capacity"
	286	[6049]	LOADK    	R10 := 11.000000
	287	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	288	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	289	[6049]	GETTABLE 	R12 R12 K4 ; R12 := R12["EQUIPMENT"]
	290	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	291	[6049]	JMP      	308 ; PC := 308
	292	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	293	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	294	[6049]	GETTABLE 	R12 R12 K7 ; R12 := R12["WEAPONS"]
	295	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	296	[6049]	JMP      	308 ; PC := 308
	297	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	298	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	299	[6049]	GETTABLE 	R12 R12 K8 ; R12 := R12["WEAPON_INV"]
	300	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	301	[6049]	JMP      	308 ; PC := 308
	302	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	303	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	304	[6049]	GETTABLE 	R12 R12 K9 ; R12 := R12["EQUIP_INV"]
	305	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	306	[6049]	JMP      	308 ; PC := 308
	307	[6049]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 308
	308	[6049]	OP_LOADBOOL	R11 1 0 ; R11 := true
	309	[6049]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	310	[6051]	LOADK    	R7 K47 ; R7 := 0.350000
	311	[6052]	LOADK    	R8 := 0.250000
	312	[6053]	LOADK    	R9 K48 ; R9 := 0.200000
	313	[6054]	GETGLOBAL	R10 K3 ; R10 := mActiveState
	314	[6054]	GETUPVAL 	R11 U0 ; R11 := U0
	315	[6054]	GETTABLE 	R11 R11 K49 ; R11 := R11["SYSTEMS"]
	316	[6054]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 320
	317	[6054]	JMP      	320 ; PC := 320
	318	[6055]	LOADK    	R8 := 0.000000
	319	[6056]	LOADK    	R9 := 0.000000
	320	[6058]	GETGLOBAL	R10 K50 ; R10 := 0x62fbce7a
	321	[6058]	SELF     	R10 R10 K51 ; R11 := R10; R10 := R10[0x830eea67]
	322	[6058]	GETGLOBAL	R12 K52 ; R12 := 0x6c97a788
	323	[6058]	GETTABLE 	R12 R12 K53 ; R12 := R12["VISIBILITY_CENTER"]
	324	[6058]	MOVE     	R13 R7 ; R13 := R7
	325	[6058]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	326	[6059]	GETGLOBAL	R10 K50 ; R10 := 0x62fbce7a
	327	[6059]	SELF     	R10 R10 K51 ; R11 := R10; R10 := R10[0x830eea67]
	328	[6059]	GETGLOBAL	R12 K52 ; R12 := 0x6c97a788
	329	[6059]	GETTABLE 	R12 R12 K54 ; R12 := R12["VISIBILITY_SIZE"]
	330	[6059]	MOVE     	R13 R8 ; R13 := R8
	331	[6059]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	332	[6060]	GETGLOBAL	R10 K50 ; R10 := 0x62fbce7a
	333	[6060]	SELF     	R10 R10 K51 ; R11 := R10; R10 := R10[0x830eea67]
	334	[6060]	GETGLOBAL	R12 K52 ; R12 := 0x6c97a788
	335	[6060]	GETTABLE 	R12 R12 K55 ; R12 := R12["VISIBILITY_FADE_SIZE"]
	336	[6060]	MOVE     	R13 R9 ; R13 := R9
	337	[6060]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	338	[6062]	TEST     	R6 0 ; if not R6 then PC := 342
	339	[6062]	JMP      	342 ; PC := 342
	340	[6063]	GETUPVAL 	R10 U6 ; R10 := U6
	341	[6063]	CALL     	R10 1 1 ; R10()
	342	[6066]	GETUPVAL 	R10 U7 ; R10 := U7
	343	[6066]	CALL     	R10 1 1 ; R10()
	344	[6068]	GETUPVAL 	R10 U8 ; R10 := U8
	345	[6068]	CALL     	R10 1 1 ; R10()
	346	[6069]	GETGLOBAL	R10 K56 ; R10 := mStats
	347	[6069]	GETTABLE 	R10 R10 K57 ; R10 := R10["mIsVisible"]
	348	[6069]	TEST     	R10 0 ; if not R10 then PC := 361
	349	[6069]	JMP      	361 ; PC := 361
	350	[6069]	GETGLOBAL	R10 K3 ; R10 := mActiveState
	351	[6069]	GETUPVAL 	R11 U0 ; R11 := U0
	352	[6069]	GETTABLE 	R11 R11 K8 ; R11 := R11["WEAPON_INV"]
	353	[6069]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 361
	354	[6069]	JMP      	361 ; PC := 361
	355	[6070]	GETGLOBAL	R10 K56 ; R10 := mStats
	356	[6070]	SELF     	R10 R10 K58 ; R11 := R10; R10 := R10[0xf87811f6]
	357	[6070]	GETGLOBAL	R12 K59 ; R12 := mShipSuit
	358	[6070]	GETGLOBAL	R13 K60 ; R13 := mShipAvatar
	359	[6070]	OP_LOADBOOL	R14 1 0 ; R14 := true
	360	[6070]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	361	[6073]	OP_LOADBOOL	R10 1 0 ; R10 := true
	362	[6073]	RETURN   	R10 2 ; return R10 
	363	[6074]	RETURN   	R0 1 ; return 

function #183 <?:6076,6078> (6 instructions, 24 bytes at 000002111D431ED0)
0 params, 5 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[6077]	GETGLOBAL	R0 K0 ; R0 := mStats
	2	[6077]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf87811f6]
	3	[6077]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	4	[6077]	OP_LOADBOOL	R4 1 0 ; R4 := true
	5	[6077]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	6	[6078]	RETURN   	R0 1 ; return 

function #184 <?:6080,6100> (58 instructions, 232 bytes at 000002111D431FF0)
1 param, 11 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[6081]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6081]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[6081]	MOVE     	R3 R0 ; R3 := R0
	4	[6081]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6081]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	6	[6083]	NEWTABLE 	R2 0 4 ; R2 := {}
	7	[6084]	SETTABLE 	R2 K1 K2 ; R2["CustomEntry"] := true
	8	[6085]	GETGLOBAL	R3 K4 ; R3 := 0x5f0788c4
	9	[6085]	GETGLOBAL	R4 K5 ; R4 := 0x603636ad
	10	[6085]	LOADK    	R5 K6 ; R5 := "/Lotus/Language/Railjack/ItemInventory_SellingShip"
	11	[6085]	MOVE     	R6 R1 ; R6 := R1
	12	[6085]	LOADK    	R7 K7 ; R7 := "Title"
	13	[6085]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	14	[6085]	NEWTABLE 	R6 0 0 ; R6 := {}
	15	[6085]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	16	[6085]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	17	[6085]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	18	[6086]	GETGLOBAL	R3 K9 ; R3 := 0xae91e43b
	19	[6086]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x42b04007]
	20	[6086]	LOADK    	R5 K6 ; R5 := "/Lotus/Language/Railjack/ItemInventory_SellingShip"
	21	[6086]	MOVE     	R6 R1 ; R6 := R1
	22	[6086]	LOADK    	R7 K11 ; R7 := "Desc"
	23	[6086]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	24	[6086]	OP_LOADBOOL	R6 1 0 ; R6 := true
	25	[6086]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	26	[6086]	SETTABLE 	R2 K8 R3 ; R2["LocalizedDesc"] := R3
	27	[6087]	SETTABLE 	R2 K12 K2 ; R2["TintName"] := true
	28	[6090]	LOADK    	R3 K13 ; R3 := "TopLeftContainer.CurrencyBar.Display1."
	29	[6090]	MOVE     	R4 R1 ; R4 := R1
	30	[6090]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	31	[6091]	GETUPVAL 	R3 U1 ; R3 := U1
	32	[6091]	GETTABLE 	R3 R3 K14 ; R3 := R3[0xfc3fed1f]
	33	[6091]	GETGLOBAL	R4 K9 ; R4 := 0xae91e43b
	34	[6091]	MOVE     	R5 R2 ; R5 := R2
	35	[6092]	GETGLOBAL	R6 K9 ; R6 := 0xae91e43b
	36	[6092]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0x91a24e4b]
	37	[6092]	MOVE     	R8 R1 ; R8 := R1
	38	[6092]	LOADK    	R9 := 2.000000
	39	[6092]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	40	[6093]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	41	[6093]	SELF     	R7 R7 K15 ; R8 := R7; R7 := R7[0x91a24e4b]
	42	[6093]	MOVE     	R9 R1 ; R9 := R1
	43	[6093]	LOADK    	R10 := 3.000000
	44	[6093]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	45	[6094]	LOADK    	R8 := 50.000000
	46	[6095]	LOADK    	R9 := 50.000000
	47	[6091]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	48	[6097]	GETGLOBAL	R3 K16 ; R3 := _T
	49	[6097]	SETTABLE 	R3 K17 R2 ; R3["InfoPopup_Data"] := R2
	50	[6099]	GETGLOBAL	R3 K9 ; R3 := 0xae91e43b
	51	[6099]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xf64b7262]
	52	[6099]	MOVE     	R5 R1 ; R5 := R1
	53	[6099]	LOADK    	R6 K19 ; R6 := "Icon"
	54	[6099]	LOADK    	R7 := 9.000000
	55	[6099]	GETGLOBAL	R8 K20 ; R8 := mColors
	56	[6099]	GETTABLE 	R8 R8 K21 ; R8 := R8["FloatingContentHighlight"]
	57	[6099]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	58	[6100]	RETURN   	R0 1 ; return 

function #185 <?:6102,6109> (19 instructions, 76 bytes at 000002111D4324A0)
1 param, 8 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[6103]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6103]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[6103]	MOVE     	R3 R0 ; R3 := R0
	4	[6103]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6103]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	6	[6105]	GETGLOBAL	R2 K1 ; R2 := _T
	7	[6105]	SETTABLE 	R2 K2 K3 ; R2["InfoPopup_Data"] := nil
	8	[6107]	LOADK    	R2 K4 ; R2 := "TopLeftContainer.CurrencyBar.Display1."
	9	[6107]	MOVE     	R3 R1 ; R3 := R1
	10	[6107]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	11	[6108]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	12	[6108]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xf64b7262]
	13	[6108]	MOVE     	R4 R1 ; R4 := R1
	14	[6108]	LOADK    	R5 K7 ; R5 := "Icon"
	15	[6108]	LOADK    	R6 := 9.000000
	16	[6108]	GETGLOBAL	R7 K8 ; R7 := mColors
	17	[6108]	GETTABLE 	R7 R7 K9 ; R7 := R7["FloatingContent"]
	18	[6108]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	19	[6109]	RETURN   	R0 1 ; return 

function #186 <?:6111,6114> (9 instructions, 36 bytes at 000002111D4326A0)
1 param, 4 slots, 2 upvalues, 0 locals, 1 constant, 0 functions
	1	[6112]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6112]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[6112]	MOVE     	R3 R0 ; R3 := R0
	4	[6112]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6112]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	6	[6113]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[6113]	MOVE     	R3 R1 ; R3 := R1
	8	[6113]	CALL     	R2 2 1 ; R2(R3)
	9	[6114]	RETURN   	R0 1 ; return 

function #187 <?:6116,6117> (1 instruction, 4 bytes at 000002111D4327D0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6117]	RETURN   	R0 1 ; return 

function #188 <?:6119,6123> (15 instructions, 60 bytes at 000002111D4328A0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6120]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6120]	GETGLOBAL	R2 K1 ; R2 := mStats
	3	[6120]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6120]	TEST     	R1 1 ; if R1 then PC := 15
	5	[6120]	JMP      	15 ; PC := 15
	6	[6120]	GETGLOBAL	R1 K2 ; R1 := mInputBlocked
	7	[6120]	TEST     	R1 1 ; if R1 then PC := 15
	8	[6120]	JMP      	15 ; PC := 15
	9	[6121]	GETGLOBAL	R1 K1 ; R1 := mStats
	10	[6121]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe3d8d292]
	11	[6121]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[6121]	MOVE     	R4 R0 ; R4 := R0
	13	[6121]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[6121]	CALL     	R1 0 1 ; R1(R2,...)
	15	[6123]	RETURN   	R0 1 ; return 

function #189 <?:6125,6127> (3 instructions, 12 bytes at 000002111D432A30)
1 param, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[6126]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[6126]	SETTABLE 	R1 K1 K2 ; R1["InfoPopup_Data"] := nil
	3	[6127]	RETURN   	R0 1 ; return 

function #190 <?:6129,6135> (30 instructions, 120 bytes at 000002111D432B40)
1 param, 9 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[6130]	EQ       	0 R0 K0 ; if R0 ~= "true" then PC := 17
	2	[6130]	JMP      	17 ; PC := 17
	3	[6131]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	4	[6131]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[6131]	LOADK    	R3 K3 ; R3 := "_root"
	6	[6131]	LOADK    	R4 := 0.000000
	7	[6131]	NEWTABLE 	R5 1 0 ; R5 := {}
	8	[6131]	LOADK    	R6 := 10.000000
	9	[6131]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	10	[6131]	NEWTABLE 	R6 1 0 ; R6 := {}
	11	[6131]	LOADK    	R7 := 0.000000
	12	[6131]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	13	[6131]	LOADK    	R7 K5 ; R7 := 0.150000
	14	[6131]	LOADK    	R8 := 0.000000
	15	[6131]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	16	[6131]	JMP      	30 ; PC := 30
	17	[6133]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	18	[6133]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	19	[6133]	LOADK    	R3 K3 ; R3 := "_root"
	20	[6133]	LOADK    	R4 := 2.000000
	21	[6133]	NEWTABLE 	R5 1 0 ; R5 := {}
	22	[6133]	LOADK    	R6 := 10.000000
	23	[6133]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	24	[6133]	NEWTABLE 	R6 1 0 ; R6 := {}
	25	[6133]	LOADK    	R7 := 100.000000
	26	[6133]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	27	[6133]	LOADK    	R7 K5 ; R7 := 0.150000
	28	[6133]	LOADK    	R8 := 0.000000
	29	[6133]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	30	[6135]	RETURN   	R0 1 ; return 

function #191 <?:6137,6141> (4 instructions, 16 bytes at 000002111D432D60)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[6138]	SETGLOBALHASH	R0 K0 ; mHandleCanBeClosedCallback := R0
	2	[6140]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[6140]	RETURN   	R1 2 ; return R1 
	4	[6141]	RETURN   	R0 1 ; return 

function #192 <?:6143,6145> (3 instructions, 12 bytes at 000002111D432E50)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6144]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6144]	RETURN   	R0 2 ; return R0 
	3	[6145]	RETURN   	R0 1 ; return 

function #193 <?:6147,6149> (3 instructions, 12 bytes at 000002111D432F20)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6148]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6148]	RETURN   	R0 2 ; return R0 
	3	[6149]	RETURN   	R0 1 ; return 

function #194 <?:6151,6153> (3 instructions, 12 bytes at 000002111D432FF0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6152]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6152]	RETURN   	R0 2 ; return R0 
	3	[6153]	RETURN   	R0 1 ; return 

function #195 <?:6155,6157> (3 instructions, 12 bytes at 000002111D4330C0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6156]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6156]	RETURN   	R0 2 ; return R0 
	3	[6157]	RETURN   	R0 1 ; return 

function #196 <?:6159,6161> (4 instructions, 16 bytes at 000002111D433190)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6160]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6160]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[6160]	CALL     	R0 2 1 ; R0(R1)
	4	[6161]	RETURN   	R0 1 ; return 

main <?:0,0> (1072 instructions, 4288 bytes at 0000021128403AB0)
0+ params, 149 slots, 0 upvalues, 0 locals, 259 constants, 196 functions
	1	[57]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[57]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.UIStyleUtilities"
	3	[57]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[58]	GETGLOBAL	R1 K0 ; R1 := 0x2d0fad09
	5	[58]	LOADK    	R2 K2 ; R2 := "Lotus.Interface.LotusUtilities"
	6	[58]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[59]	GETGLOBAL	R2 K0 ; R2 := 0x2d0fad09
	8	[59]	LOADK    	R3 K3 ; R3 := "Lotus.Interface.CardUtilitiesRedux"
	9	[59]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[60]	GETGLOBAL	R3 K0 ; R3 := 0x2d0fad09
	11	[60]	LOADK    	R4 K4 ; R4 := "Lotus.Interface.UIUtilities"
	12	[60]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[61]	GETGLOBAL	R4 K0 ; R4 := 0x2d0fad09
	14	[61]	LOADK    	R5 K5 ; R5 := "Lotus.Interface.StoreItemUtilities"
	15	[61]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[62]	GETGLOBAL	R5 K0 ; R5 := 0x2d0fad09
	17	[62]	LOADK    	R6 K6 ; R6 := "EE.Interface.Utilities"
	18	[62]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[63]	GETGLOBAL	R6 K0 ; R6 := 0x2d0fad09
	20	[63]	LOADK    	R7 K7 ; R7 := "Lotus.Scripts.Libs.RailjackUtilities"
	21	[63]	CALL     	R6 2 2 ; R6 := R6(R7)
	22	[64]	GETGLOBAL	R7 K0 ; R7 := 0x2d0fad09
	23	[64]	LOADK    	R8 K8 ; R8 := "Lotus.Interface.Components.ThemedCustomizationButton"
	24	[64]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[66]	GETGLOBAL	R8 K9 ; R8 := 0xb009bbc6
	26	[66]	LOADK    	R9 K10 ; R9 := "/Lotus/Types/Game/Store/ProductsManifest"
	27	[66]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[67]	LOADNIL  	R9 R9 ; R9 := nil
	29	[67]	SETGLOBALHASH	R9 K11 ; mTimerMgr := R9
	30	[68]	LOADNIL  	R9 R9 ; R9 := nil
	31	[68]	SETGLOBALHASH	R9 K12 ; mAnchorMgr := R9
	32	[69]	OP_LOADBOOL	R9 0 0 ; R9 := false
	33	[69]	SETGLOBALHASH	R9 K13 ; mLisetMode := R9
	34	[71]	OP_LOADBOOL	R9 0 0 ; R9 := false
	35	[71]	SETGLOBALHASH	R9 K14 ; mInputBlocked := R9
	36	[72]	LOADNIL  	R9 R9 ; R9 := nil
	37	[72]	SETGLOBALHASH	R9 K15 ; mAvatar := R9
	38	[73]	LOADNIL  	R9 R9 ; R9 := nil
	39	[73]	SETGLOBALHASH	R9 K16 ; mCameraSpot := R9
	40	[74]	LOADNIL  	R9 R9 ; R9 := nil
	41	[74]	SETGLOBALHASH	R9 K17 ; mCameraTag := R9
	42	[75]	LOADNIL  	R9 R9 ; R9 := nil
	43	[75]	SETGLOBALHASH	R9 K18 ; mWeaponMover := R9
	44	[76]	LOADNIL  	R9 R9 ; R9 := nil
	45	[76]	SETGLOBALHASH	R9 K19 ; mCosmeticMover := R9
	46	[77]	LOADNIL  	R9 R9 ; R9 := nil
	47	[77]	SETGLOBALHASH	R9 K20 ; mCosmeticsList := R9
	48	[78]	LOADNIL  	R9 R9 ; R9 := nil
	49	[78]	SETGLOBALHASH	R9 K21 ; mInventoryGrid := R9
	50	[79]	LOADNIL  	R9 R9 ; R9 := nil
	51	[79]	SETGLOBALHASH	R9 K22 ; mCategories := R9
	52	[80]	LOADNIL  	R9 R9 ; R9 := nil
	53	[80]	SETGLOBALHASH	R9 K23 ; mEquipment := R9
	54	[81]	NEWTABLE 	R9 0 0 ; R9 := {}
	55	[81]	SETGLOBALHASH	R9 K24 ; mColors := R9
	56	[82]	LOADNIL  	R9 R9 ; R9 := nil
	57	[82]	SETGLOBALHASH	R9 K25 ; mActiveState := R9
	58	[83]	LOADNIL  	R9 R9 ; R9 := nil
	59	[83]	SETGLOBALHASH	R9 K26 ; mStats := R9
	60	[84]	LOADNIL  	R9 R9 ; R9 := nil
	61	[84]	SETGLOBALHASH	R9 K27 ; mCurrentLoadout := R9
	62	[85]	LOADNIL  	R9 R9 ; R9 := nil
	63	[85]	SETGLOBALHASH	R9 K28 ; mCurrentShip := R9
	64	[86]	LOADNIL  	R9 R9 ; R9 := nil
	65	[86]	SETGLOBALHASH	R9 K29 ; mButtons := R9
	66	[87]	LOADNIL  	R9 R9 ; R9 := nil
	67	[87]	SETGLOBALHASH	R9 K30 ; mShipAvatar := R9
	68	[88]	LOADNIL  	R9 R9 ; R9 := nil
	69	[88]	SETGLOBALHASH	R9 K31 ; mShipSuit := R9
	70	[89]	LOADNIL  	R9 R9 ; R9 := nil
	71	[89]	SETGLOBALHASH	R9 K32 ; mPrevShipName := R9
	72	[90]	LOADNIL  	R9 R9 ; R9 := nil
	73	[90]	SETGLOBALHASH	R9 K33 ; mMenuLoop := R9
	74	[91]	LOADNIL  	R9 R9 ; R9 := nil
	75	[91]	SETGLOBALHASH	R9 K34 ; mMenuMusic := R9
	76	[92]	OP_LOADBOOL	R9 0 0 ; R9 := false
	77	[92]	SETGLOBALHASH	R9 K35 ; mInteriorCustomization := R9
	78	[93]	LOADNIL  	R9 R9 ; R9 := nil
	79	[93]	SETGLOBALHASH	R9 K36 ; mChildMovie := R9
	80	[94]	LOADNIL  	R9 R9 ; R9 := nil
	81	[94]	SETGLOBALHASH	R9 K37 ; mVignetteMovie := R9
	82	[95]	LOADK    	R9 := 0.000000
	83	[95]	SETGLOBALHASH	R9 K38 ; mBinToExpand := R9
	84	[96]	LOADNIL  	R9 R9 ; R9 := nil
	85	[96]	SETGLOBALHASH	R9 K39 ; mWebCmd := R9
	86	[97]	OP_LOADBOOL	R9 0 0 ; R9 := false
	87	[97]	SETGLOBALHASH	R9 K40 ; mQueueContributionScreen := R9
	88	[98]	LOADNIL  	R9 R9 ; R9 := nil
	89	[98]	SETGLOBALHASH	R9 K41 ; mRushPrice := R9
	90	[99]	LOADNIL  	R9 R9 ; R9 := nil
	91	[99]	SETGLOBALHASH	R9 K42 ; mManifestMovie := R9
	92	[100]	LOADK    	R9 := 50.000000
	93	[100]	SETGLOBALHASH	R9 K43 ; mWearAndTear := R9
	94	[101]	LOADK    	R9 := 50.000000
	95	[101]	SETGLOBALHASH	R9 K44 ; mInteriorWearAndTear := R9
	96	[102]	NEWTABLE 	R9 0 0 ; R9 := {}
	97	[102]	SETGLOBALHASH	R9 K45 ; mCrewShipWeaponSkinsToLoad := R9
	98	[103]	LOADNIL  	R9 R9 ; R9 := nil
	99	[103]	SETGLOBALHASH	R9 K46 ; mCrewShipWeaponSkinsLoader := R9
	100	[104]	LOADNIL  	R9 R9 ; R9 := nil
	101	[104]	SETGLOBALHASH	R9 K47 ; mScrapBtn := R9
	102	[105]	LOADNIL  	R9 R9 ; R9 := nil
	103	[105]	SETGLOBALHASH	R9 K48 ; mTransferBtn := R9
	104	[106]	LOADNIL  	R9 R9 ; R9 := nil
	105	[106]	SETGLOBALHASH	R9 K49 ; mRushDroneBtn := R9
	106	[107]	LOADNIL  	R9 R9 ; R9 := nil
	107	[107]	SETGLOBALHASH	R9 K50 ; mCancelRepairBtn := R9
	108	[108]	LOADNIL  	R9 R9 ; R9 := nil
	109	[108]	SETGLOBALHASH	R9 K51 ; mSalvageSpecialBtn := R9
	110	[109]	OP_LOADBOOL	R9 0 0 ; R9 := false
	111	[109]	SETGLOBALHASH	R9 K52 ; mCleanUpDone := R9
	112	[110]	OP_LOADBOOL	R9 0 0 ; R9 := false
	113	[110]	SETGLOBALHASH	R9 K53 ; mCloseOnTrigger := R9
	114	[111]	LOADNIL  	R9 R9 ; R9 := nil
	115	[111]	SETGLOBALHASH	R9 K54 ; mHandleCanBeClosedCallback := R9
	116	[112]	OP_LOADBOOL	R9 0 0 ; R9 := false
	117	[112]	SETGLOBALHASH	R9 K55 ; mShuttingDown := R9
	118	[113]	LOADNIL  	R9 R9 ; R9 := nil
	119	[113]	SETGLOBALHASH	R9 K56 ; mCurrencyList := R9
	120	[114]	LOADNIL  	R9 R9 ; R9 := nil
	121	[114]	SETGLOBALHASH	R9 K57 ; mSearchBox := R9
	122	[115]	LOADNIL  	R9 R9 ; R9 := nil
	123	[115]	SETGLOBALHASH	R9 K58 ; mSellInfo := R9
	124	[116]	LOADNIL  	R9 R9 ; R9 := nil
	125	[116]	SETGLOBALHASH	R9 K59 ; mSellInfoItems := R9
	126	[117]	LOADNIL  	R9 R9 ; R9 := nil
	127	[117]	SETGLOBALHASH	R9 K60 ; mScrapCount := R9
	128	[119]	LOADNIL  	R9 R13 ; R9 := R10 := R11 := R12 := R13 := nil
	129	[124]	SETGLOBALHASH	R13 K61 ; mFuseElement1 := R13
	130	[125]	LOADNIL  	R13 R13 ; R13 := nil
	131	[125]	SETGLOBALHASH	R13 K62 ; mFuseElement2 := R13
	132	[126]	LOADNIL  	R13 R13 ; R13 := nil
	133	[126]	SETGLOBALHASH	R13 K63 ; mFuseElement3 := R13
	134	[127]	OP_LOADBOOL	R13 0 0 ; R13 := false
	135	[127]	SETGLOBALHASH	R13 K64 ; mEquipAfterFuse := R13
	136	[128]	NEWTABLE 	R13 3 0 ; R13 := {}
	137	[128]	LOADK    	R14 K66 ; R14 := 1.100000
	138	[128]	LOADK    	R15 K67 ; R15 := 1.050000
	139	[128]	LOADK    	R16 K68 ; R16 := 1.020000
	140	[128]	SETLIST  	R13 3 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
	141	[128]	SETGLOBALHASH	R13 K65 ; FUSE_MULTIPLIERS := R13
	142	[129]	LOADK    	R13 := 1073741824.000000
	143	[129]	SETGLOBALHASH	R13 K69 ; FUSE_MAX_VALUE := R13
	144	[131]	NEWTABLE 	R13 0 4 ; R13 := {}
	145	[131]	SETTABLE 	R13 K70 K71 ; R13["PILOT"] := 1.000000
	146	[131]	SETTABLE 	R13 K72 K73 ; R13["TURRET"] := 2.000000
	147	[131]	SETTABLE 	R13 K74 K75 ; R13["ORDINANCE"] := 3.000000
	148	[131]	SETTABLE 	R13 K76 K77 ; R13["COUNTERMEASURES"] := 4.000000
	149	[132]	NEWTABLE 	R14 0 4 ; R14 := {}
	150	[132]	SETTABLE 	R14 K78 K71 ; R14["RENAME_SHIP"] := 1.000000
	151	[132]	SETTABLE 	R14 K79 K73 ; R14["ATTACHMENTS"] := 2.000000
	152	[132]	SETTABLE 	R14 K80 K75 ; R14["COLORS"] := 3.000000
	153	[132]	SETTABLE 	R14 K81 K77 ; R14["ALL_COLORS"] := 4.000000
	154	[133]	NEWTABLE 	R15 0 15 ; R15 := {}
	155	[133]	SETTABLE 	R15 K82 K71 ; R15["EQUIPMENT"] := 1.000000
	156	[133]	SETTABLE 	R15 K83 K73 ; R15["WEAPONS"] := 2.000000
	157	[133]	SETTABLE 	R15 K84 K75 ; R15["EQUIP_INV"] := 3.000000
	158	[133]	SETTABLE 	R15 K85 K77 ; R15["WEAPON_INV"] := 4.000000
	159	[133]	SETTABLE 	R15 K86 K87 ; R15["COSMETICS"] := 5.000000
	160	[133]	SETTABLE 	R15 K79 K88 ; R15["ATTACHMENTS"] := 6.000000
	161	[133]	SETTABLE 	R15 K89 K90 ; R15["COLOR_PICKER"] := 7.000000
	162	[133]	SETTABLE 	R15 K91 K92 ; R15["SYSTEMS"] := 8.000000
	163	[133]	SETTABLE 	R15 K93 K94 ; R15["RESOURCES"] := 9.000000
	164	[133]	SETTABLE 	R15 K78 K95 ; R15["RENAME_SHIP"] := 10.000000
	165	[133]	SETTABLE 	R15 K96 K97 ; R15["INTRINSICS"] := 11.000000
	166	[133]	SETTABLE 	R15 K98 K99 ; R15["SKIN_SELECTION"] := 12.000000
	167	[133]	SETTABLE 	R15 K100 K101 ; R15["CREW_MGR"] := 13.000000
	168	[133]	SETTABLE 	R15 K102 K103 ; R15["ARCHWING"] := 14.000000
	169	[133]	SETTABLE 	R15 K104 K105 ; R15["ARCH_INV"] := 15.000000
	170	[135]	NEWTABLE 	R16 0 6 ; R16 := {}
	171	[135]	SETTABLE 	R16 K106 K71 ; R16["UNIDENTIFIED"] := 1.000000
	172	[135]	SETTABLE 	R16 K107 K73 ; R16["IDENTIFIED"] := 2.000000
	173	[135]	SETTABLE 	R16 K108 K75 ; R16["AWAITING_FUNDS"] := 3.000000
	174	[135]	SETTABLE 	R16 K109 K77 ; R16["AWAITING_COMPLETION"] := 4.000000
	175	[135]	SETTABLE 	R16 K110 K87 ; R16["COMPLETED"] := 5.000000
	176	[135]	SETTABLE 	R16 K111 K88 ; R16["OWNED"] := 6.000000
	177	[137]	NEWTABLE 	R17 0 5 ; R17 := {}
	178	[137]	SETTABLE 	R17 K112 K71 ; R17["REPAIR"] := 1.000000
	179	[137]	SETTABLE 	R17 K113 K73 ; R17["SELL"] := 2.000000
	180	[137]	SETTABLE 	R17 K114 K75 ; R17["SELL_BULK"] := 3.000000
	181	[137]	SETTABLE 	R17 K115 K77 ; R17["CONTRIBUTE"] := 4.000000
	182	[137]	SETTABLE 	R17 K116 K87 ; R17["CANCEL"] := 5.000000
	183	[139]	LOADK    	R18 := 30.000000
	184	[141]	NEWTABLE 	R19 3 0 ; R19 := {}
	185	[141]	LOADK    	R20 K117 ; R20 := "Components"
	186	[141]	LOADK    	R21 K118 ; R21 := "Wreckage"
	187	[141]	LOADK    	R22 K119 ; R22 := "Unidentified"
	188	[141]	SETLIST  	R19 3 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 3
	189	[143]	GETGLOBAL	R20 K120 ; R20 := 0x0469f296
	190	[143]	LOADK    	R21 K121 ; R21 := "GondolaTube"
	191	[143]	CALL     	R20 2 2 ; R20 := R20(R21)
	192	[145]	NEWTABLE 	R21 3 0 ; R21 := {}
	193	[145]	LOADK    	R22 K122 ; R22 := "Lavan"
	194	[145]	LOADK    	R23 K123 ; R23 := "Vidar"
	195	[145]	LOADK    	R24 K124 ; R24 := "Zekti"
	196	[145]	SETLIST  	R21 3 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 3
	197	[147]	NEWTABLE 	R22 0 3 ; R22 := {}
	198	[147]	SETTABLE 	R22 K125 K71 ; R22["A"] := 1.000000
	199	[147]	SETTABLE 	R22 K126 K73 ; R22["B"] := 2.000000
	200	[147]	SETTABLE 	R22 K127 K75 ; R22["C"] := 3.000000
	201	[149]	NEWTABLE 	R23 3 0 ; R23 := {}
	202	[150]	NEWTABLE 	R24 0 3 ; R24 := {}
	203	[152]	SETTABLE 	R24 K71 K128 ; R24[1.000000] := 400.000000
	204	[153]	SETTABLE 	R24 K73 K129 ; R24[2.000000] := 600.000000
	205	[154]	SETTABLE 	R24 K75 K130 ; R24[3.000000] := 800.000000
	206	[155]	NEWTABLE 	R25 0 2 ; R25 := {}
	207	[157]	SETTABLE 	R25 K73 K131 ; R25[2.000000] := 1200.000000
	208	[158]	SETTABLE 	R25 K75 K132 ; R25[3.000000] := 1600.000000
	209	[159]	NEWTABLE 	R26 0 1 ; R26 := {}
	210	[161]	SETTABLE 	R26 K75 K133 ; R26[3.000000] := 2400.000000
	211	[163]	SETLIST  	R23 3 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 3
	212	[165]	NEWTABLE 	R24 3 0 ; R24 := {}
	213	[166]	NEWTABLE 	R25 0 3 ; R25 := {}
	214	[168]	SETTABLE 	R25 K71 K134 ; R25[1.000000] := 20.000000
	215	[169]	SETTABLE 	R25 K73 K135 ; R25[2.000000] := 30.000000
	216	[170]	SETTABLE 	R25 K75 K136 ; R25[3.000000] := 40.000000
	217	[171]	NEWTABLE 	R26 0 2 ; R26 := {}
	218	[173]	SETTABLE 	R26 K73 K135 ; R26[2.000000] := 30.000000
	219	[174]	SETTABLE 	R26 K75 K136 ; R26[3.000000] := 40.000000
	220	[175]	NEWTABLE 	R27 0 1 ; R27 := {}
	221	[177]	SETTABLE 	R27 K75 K136 ; R27[3.000000] := 40.000000
	222	[179]	SETLIST  	R24 3 1 ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 3
	223	[181]	NEWTABLE 	R25 0 8 ; R25 := {}
	224	[183]	SETTABLE 	R25 K137 K138 ; R25["ALL"] := 0.000000
	225	[184]	SETTABLE 	R25 K139 K71 ; R25["MKI"] := 1.000000
	226	[185]	SETTABLE 	R25 K140 K73 ; R25["MKII"] := 2.000000
	227	[186]	SETTABLE 	R25 K141 K75 ; R25["MKIII"] := 3.000000
	228	[187]	SETTABLE 	R25 K142 K77 ; R25["LAVAN"] := 4.000000
	229	[188]	SETTABLE 	R25 K143 K87 ; R25["VIDAR"] := 5.000000
	230	[189]	SETTABLE 	R25 K144 K88 ; R25["ZEKTI"] := 6.000000
	231	[190]	SETTABLE 	R25 K145 K90 ; R25["SIGMA"] := 7.000000
	232	[193]	NEWTABLE 	R26 0 14 ; R26 := {}
	233	[195]	GETTABLE 	R27 R15 K83 ; R27 := R15["WEAPONS"]
	234	[195]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	235	[195]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	236	[196]	GETTABLE 	R27 R15 K84 ; R27 := R15["EQUIP_INV"]
	237	[196]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	238	[196]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	239	[197]	GETTABLE 	R27 R15 K86 ; R27 := R15["COSMETICS"]
	240	[197]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	241	[197]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	242	[198]	GETTABLE 	R27 R15 K91 ; R27 := R15["SYSTEMS"]
	243	[198]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	244	[198]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	245	[199]	GETTABLE 	R27 R15 K93 ; R27 := R15["RESOURCES"]
	246	[199]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	247	[199]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	248	[200]	GETTABLE 	R27 R15 K96 ; R27 := R15["INTRINSICS"]
	249	[200]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	250	[200]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	251	[201]	GETTABLE 	R27 R15 K100 ; R27 := R15["CREW_MGR"]
	252	[201]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	253	[201]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	254	[202]	GETTABLE 	R27 R15 K102 ; R27 := R15["ARCHWING"]
	255	[202]	GETTABLE 	R28 R15 K82 ; R28 := R15["EQUIPMENT"]
	256	[202]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	257	[203]	GETTABLE 	R27 R15 K104 ; R27 := R15["ARCH_INV"]
	258	[203]	GETTABLE 	R28 R15 K102 ; R28 := R15["ARCHWING"]
	259	[203]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	260	[204]	GETTABLE 	R27 R15 K85 ; R27 := R15["WEAPON_INV"]
	261	[204]	GETTABLE 	R28 R15 K83 ; R28 := R15["WEAPONS"]
	262	[204]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	263	[205]	GETTABLE 	R27 R15 K78 ; R27 := R15["RENAME_SHIP"]
	264	[205]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	265	[205]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	266	[206]	GETTABLE 	R27 R15 K79 ; R27 := R15["ATTACHMENTS"]
	267	[206]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	268	[206]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	269	[207]	GETTABLE 	R27 R15 K89 ; R27 := R15["COLOR_PICKER"]
	270	[207]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	271	[207]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	272	[208]	GETTABLE 	R27 R15 K98 ; R27 := R15["SKIN_SELECTION"]
	273	[208]	GETTABLE 	R28 R15 K86 ; R28 := R15["COSMETICS"]
	274	[208]	SETTABLE 	R26 R27 R28 ; R26[R27] := R28
	275	[210]	GETGLOBAL	R27 K120 ; R27 := 0x0469f296
	276	[210]	LOADK    	R28 K146 ; R28 := "EngineRoomFacingRear"
	277	[210]	CALL     	R27 2 2 ; R27 := R27(R28)
	278	[211]	GETGLOBAL	R28 K120 ; R28 := 0x0469f296
	279	[211]	LOADK    	R29 K147 ; R29 := "EngineRoomUpperFacingFront"
	280	[211]	CALL     	R28 2 2 ; R28 := R28(R29)
	281	[212]	GETGLOBAL	R29 K120 ; R29 := 0x0469f296
	282	[212]	LOADK    	R30 K148 ; R30 := "SideViewCam"
	283	[212]	CALL     	R29 2 2 ; R29 := R29(R30)
	284	[213]	GETGLOBAL	R30 K120 ; R30 := 0x0469f296
	285	[213]	LOADK    	R31 K149 ; R31 := "WeaponPathCam"
	286	[213]	CALL     	R30 2 2 ; R30 := R30(R31)
	287	[214]	GETGLOBAL	R31 K120 ; R31 := 0x0469f296
	288	[214]	LOADK    	R32 K150 ; R32 := "WeaponPathCam_Caballero"
	289	[214]	CALL     	R31 2 2 ; R31 := R31(R32)
	290	[215]	GETGLOBAL	R32 K120 ; R32 := 0x0469f296
	291	[215]	LOADK    	R33 K151 ; R33 := "WeaponPathCam_SunGem"
	292	[215]	CALL     	R32 2 2 ; R32 := R32(R33)
	293	[216]	GETGLOBAL	R33 K120 ; R33 := 0x0469f296
	294	[216]	LOADK    	R34 K152 ; R34 := "WeaponPathCam_Ghost"
	295	[216]	CALL     	R33 2 2 ; R33 := R33(R34)
	296	[217]	GETGLOBAL	R34 K120 ; R34 := 0x0469f296
	297	[217]	LOADK    	R35 K153 ; R35 := "CosmeticPathCam"
	298	[217]	CALL     	R34 2 2 ; R34 := R34(R35)
	299	[218]	GETGLOBAL	R35 K120 ; R35 := 0x0469f296
	300	[218]	LOADK    	R36 K154 ; R36 := "CosmeticPathCam_Caballero"
	301	[218]	CALL     	R35 2 2 ; R35 := R35(R36)
	302	[219]	GETGLOBAL	R36 K120 ; R36 := 0x0469f296
	303	[219]	LOADK    	R37 K155 ; R37 := "CosmeticPathCam_SunGem"
	304	[219]	CALL     	R36 2 2 ; R36 := R36(R37)
	305	[220]	GETGLOBAL	R37 K120 ; R37 := 0x0469f296
	306	[220]	LOADK    	R38 K156 ; R38 := "CosmeticPathCam_Ghost"
	307	[220]	CALL     	R37 2 2 ; R37 := R37(R38)
	308	[221]	GETGLOBAL	R38 K120 ; R38 := 0x0469f296
	309	[221]	LOADK    	R39 K157 ; R39 := "RailjackSpawn"
	310	[221]	CALL     	R38 2 2 ; R38 := R38(R39)
	311	[222]	GETGLOBAL	R39 K120 ; R39 := 0x0469f296
	312	[222]	LOADK    	R40 K158 ; R40 := "RailJackAvatar"
	313	[222]	CALL     	R39 2 2 ; R39 := R39(R40)
	314	[223]	GETGLOBAL	R40 K120 ; R40 := 0x0469f296
	315	[223]	LOADK    	R41 K159 ; R41 := "CrewshipLoadout"
	316	[223]	CALL     	R40 2 2 ; R40 := R40(R41)
	317	[224]	GETGLOBAL	R41 K120 ; R41 := 0x0469f296
	318	[224]	LOADK    	R42 K160 ; R42 := "CrewshipBoardingAction"
	319	[224]	CALL     	R41 2 2 ; R41 := R41(R42)
	320	[225]	GETGLOBAL	R42 K120 ; R42 := 0x0469f296
	321	[225]	LOADK    	R43 K161 ; R43 := "HubIgnoreNearCull"
	322	[225]	CALL     	R42 2 2 ; R42 := R42(R43)
	323	[226]	GETGLOBAL	R43 K120 ; R43 := 0x0469f296
	324	[226]	LOADK    	R44 K162 ; R44 := "RailjackPostInit"
	325	[226]	CALL     	R43 2 2 ; R43 := R43(R44)
	326	[227]	GETGLOBAL	R44 K120 ; R44 := 0x0469f296
	327	[227]	LOADK    	R45 K163 ; R45 := "HangarRefPoint"
	328	[227]	CALL     	R44 2 2 ; R44 := R44(R45)
	329	[228]	GETGLOBAL	R45 K120 ; R45 := 0x0469f296
	330	[228]	LOADK    	R46 K164 ; R46 := "HubRailJackCam"
	331	[228]	CALL     	R45 2 2 ; R45 := R45(R46)
	332	[230]	LOADK    	R46 := 260.000000
	333	[234]	CLOSURE  	R47 0 ; R47 := closure(Function #1)
	334	[245]	CLOSURE  	R48 1 ; R48 := closure(Function #2)
	335	[245]	MOVE     	R0 R41 ; R0 := R41
	336	[270]	CLOSURE  	R49 2 ; R49 := closure(Function #3)
	337	[270]	MOVE     	R0 R5 ; R0 := R5
	338	[270]	MOVE     	R0 R39 ; R0 := R39
	339	[270]	MOVE     	R0 R6 ; R0 := R6
	340	[295]	CLOSURE  	R50 3 ; R50 := closure(Function #4)
	341	[295]	MOVE     	R0 R6 ; R0 := R6
	342	[295]	MOVE     	R0 R49 ; R0 := R49
	343	[315]	CLOSURE  	R51 4 ; R51 := closure(Function #5)
	344	[320]	CLOSURE  	R52 5 ; R52 := closure(Function #6)
	345	[383]	CLOSURE  	R53 6 ; R53 := closure(Function #7)
	346	[383]	MOVE     	R0 R5 ; R0 := R5
	347	[383]	MOVE     	R0 R39 ; R0 := R39
	348	[383]	MOVE     	R0 R6 ; R0 := R6
	349	[383]	MOVE     	R0 R51 ; R0 := R51
	350	[383]	MOVE     	R0 R44 ; R0 := R44
	351	[383]	MOVE     	R0 R49 ; R0 := R49
	352	[383]	MOVE     	R0 R50 ; R0 := R50
	353	[322]	SETGLOBAL	R53 K165 ; RefreshShipLoadOut := R53
	354	[394]	CLOSURE  	R53 7 ; R53 := closure(Function #8)
	355	[410]	CLOSURE  	R54 8 ; R54 := closure(Function #9)
	356	[410]	MOVE     	R0 R53 ; R0 := R53
	357	[412]	GETGLOBAL	R55 K166 ; R55 := ZERO_VECTOR
	358	[483]	CLOSURE  	R56 9 ; R56 := closure(Function #10)
	359	[483]	MOVE     	R0 R5 ; R0 := R5
	360	[483]	MOVE     	R0 R38 ; R0 := R38
	361	[483]	MOVE     	R0 R55 ; R0 := R55
	362	[483]	MOVE     	R0 R54 ; R0 := R54
	363	[483]	MOVE     	R0 R40 ; R0 := R40
	364	[483]	MOVE     	R0 R48 ; R0 := R48
	365	[483]	MOVE     	R0 R20 ; R0 := R20
	366	[483]	MOVE     	R0 R42 ; R0 := R42
	367	[483]	MOVE     	R0 R43 ; R0 := R43
	368	[483]	MOVE     	R0 R50 ; R0 := R50
	369	[487]	CLOSURE  	R57 10 ; R57 := closure(Function #11)
	370	[487]	MOVE     	R0 R56 ; R0 := R56
	371	[485]	SETGLOBAL	R57 K167 ; ShipReady := R57
	372	[494]	CLOSURE  	R57 11 ; R57 := closure(Function #12)
	373	[600]	CLOSURE  	R58 12 ; R58 := closure(Function #13)
	374	[600]	MOVE     	R0 R53 ; R0 := R53
	375	[600]	MOVE     	R0 R49 ; R0 := R49
	376	[600]	MOVE     	R0 R50 ; R0 := R50
	377	[600]	MOVE     	R0 R57 ; R0 := R57
	378	[600]	MOVE     	R0 R54 ; R0 := R54
	379	[600]	MOVE     	R0 R48 ; R0 := R48
	380	[600]	MOVE     	R0 R44 ; R0 := R44
	381	[496]	SETGLOBAL	R58 K168 ; UpdateLocalCrewShip := R58
	382	[658]	CLOSURE  	R58 13 ; R58 := closure(Function #14)
	383	[658]	MOVE     	R0 R6 ; R0 := R6
	384	[658]	MOVE     	R0 R46 ; R0 := R46
	385	[604]	SETGLOBAL	R58 K169 ; UpdateNoCrewship := R58
	386	[691]	CLOSURE  	R58 14 ; R58 := closure(Function #15)
	387	[691]	MOVE     	R0 R39 ; R0 := R39
	388	[660]	SETGLOBAL	R58 K170 ; SetupInLiset := R58
	389	[809]	CLOSURE  	R58 15 ; R58 := closure(Function #16)
	390	[809]	MOVE     	R0 R55 ; R0 := R55
	391	[809]	MOVE     	R0 R40 ; R0 := R40
	392	[809]	MOVE     	R0 R48 ; R0 := R48
	393	[809]	MOVE     	R0 R56 ; R0 := R56
	394	[809]	MOVE     	R0 R6 ; R0 := R6
	395	[809]	MOVE     	R0 R46 ; R0 := R46
	396	[693]	SETGLOBAL	R58 K171 ; SetupCrewshipHangar := R58
	397	[922]	CLOSURE  	R58 16 ; R58 := closure(Function #17)
	398	[922]	MOVE     	R0 R1 ; R0 := R1
	399	[922]	MOVE     	R0 R5 ; R0 := R5
	400	[922]	MOVE     	R0 R39 ; R0 := R39
	401	[811]	SETGLOBAL	R58 K172 ; BoardShip := R58
	402	[933]	CLOSURE  	R58 17 ; R58 := closure(Function #18)
	403	[937]	CLOSURE  	R59 18 ; R59 := closure(Function #19)
	404	[941]	CLOSURE  	R60 19 ; R60 := closure(Function #20)
	405	[955]	CLOSURE  	R61 20 ; R61 := closure(Function #21)
	406	[955]	MOVE     	R0 R59 ; R0 := R59
	407	[955]	MOVE     	R0 R58 ; R0 := R58
	408	[1079]	CLOSURE  	R62 21 ; R62 := closure(Function #22)
	409	[1079]	MOVE     	R0 R15 ; R0 := R15
	410	[1102]	CLOSURE  	R63 22 ; R63 := closure(Function #23)
	411	[1102]	MOVE     	R0 R15 ; R0 := R15
	412	[1102]	MOVE     	R0 R10 ; R0 := R10
	413	[1158]	CLOSURE  	R64 23 ; R64 := closure(Function #24)
	414	[1158]	MOVE     	R0 R5 ; R0 := R5
	415	[1158]	MOVE     	R0 R1 ; R0 := R1
	416	[1206]	CLOSURE  	R65 24 ; R65 := closure(Function #25)
	417	[1206]	MOVE     	R0 R64 ; R0 := R64
	418	[1206]	MOVE     	R0 R49 ; R0 := R49
	419	[1160]	SETGLOBAL	R65 K173 ; Shutdown := R65
	420	[1236]	CLOSURE  	R65 25 ; R65 := closure(Function #26)
	421	[1236]	MOVE     	R0 R64 ; R0 := R64
	422	[1236]	MOVE     	R0 R1 ; R0 := R1
	423	[1236]	MOVE     	R0 R59 ; R0 := R59
	424	[1236]	MOVE     	R0 R58 ; R0 := R58
	425	[1236]	MOVE     	R0 R60 ; R0 := R60
	426	[1240]	CLOSURE  	R66 26 ; R66 := closure(Function #27)
	427	[1240]	MOVE     	R0 R65 ; R0 := R65
	428	[1238]	SETGLOBAL	R66 K174 ; Close := R66
	429	[1263]	CLOSURE  	R66 27 ; R66 := closure(Function #28)
	430	[1263]	MOVE     	R0 R63 ; R0 := R63
	431	[1263]	MOVE     	R0 R26 ; R0 := R26
	432	[1263]	MOVE     	R0 R9 ; R0 := R9
	433	[1263]	MOVE     	R0 R15 ; R0 := R15
	434	[1263]	MOVE     	R0 R65 ; R0 := R65
	435	[1267]	CLOSURE  	R67 28 ; R67 := closure(Function #29)
	436	[1267]	MOVE     	R0 R66 ; R0 := R66
	437	[1265]	SETGLOBAL	R67 K175 ; GoBack := R67
	438	[1279]	CLOSURE  	R67 29 ; R67 := closure(Function #30)
	439	[1279]	MOVE     	R0 R26 ; R0 := R26
	440	[1279]	MOVE     	R0 R9 ; R0 := R9
	441	[1279]	MOVE     	R0 R67 ; R0 := R67
	442	[1294]	CLOSURE  	R68 30 ; R68 := closure(Function #31)
	443	[1294]	MOVE     	R0 R5 ; R0 := R5
	444	[1342]	CLOSURE  	R69 31 ; R69 := closure(Function #32)
	445	[1342]	MOVE     	R0 R68 ; R0 := R68
	446	[1342]	MOVE     	R0 R3 ; R0 := R3
	447	[1342]	MOVE     	R0 R15 ; R0 := R15
	448	[1342]	MOVE     	R0 R5 ; R0 := R5
	449	[1395]	CLOSURE  	R70 32 ; R70 := closure(Function #33)
	450	[1395]	MOVE     	R0 R15 ; R0 := R15
	451	[1395]	MOVE     	R0 R3 ; R0 := R3
	452	[1395]	MOVE     	R0 R16 ; R0 := R16
	453	[1395]	MOVE     	R0 R26 ; R0 := R26
	454	[1399]	CLOSURE  	R71 33 ; R71 := closure(Function #34)
	455	[1399]	MOVE     	R0 R70 ; R0 := R70
	456	[1397]	SETGLOBAL	R71 K176 ; UpdateButtons := R71
	457	[1427]	CLOSURE  	R71 34 ; R71 := closure(Function #35)
	458	[1427]	MOVE     	R0 R5 ; R0 := R5
	459	[1621]	CLOSURE  	R72 35 ; R72 := closure(Function #36)
	460	[1621]	MOVE     	R0 R16 ; R0 := R16
	461	[1621]	MOVE     	R0 R1 ; R0 := R1
	462	[1621]	MOVE     	R0 R4 ; R0 := R4
	463	[1621]	MOVE     	R0 R8 ; R0 := R8
	464	[1655]	CLOSURE  	R73 36 ; R73 := closure(Function #37)
	465	[1655]	MOVE     	R0 R8 ; R0 := R8
	466	[1655]	MOVE     	R0 R5 ; R0 := R5
	467	[1655]	MOVE     	R0 R4 ; R0 := R4
	468	[1705]	CLOSURE  	R74 37 ; R74 := closure(Function #38)
	469	[1705]	MOVE     	R0 R8 ; R0 := R8
	470	[1705]	MOVE     	R0 R4 ; R0 := R4
	471	[1705]	MOVE     	R0 R5 ; R0 := R5
	472	[1723]	CLOSURE  	R75 38 ; R75 := closure(Function #39)
	473	[1723]	MOVE     	R0 R4 ; R0 := R4
	474	[1723]	MOVE     	R0 R25 ; R0 := R25
	475	[1739]	CLOSURE  	R76 39 ; R76 := closure(Function #40)
	476	[1739]	MOVE     	R0 R72 ; R0 := R72
	477	[1780]	CLOSURE  	R77 40 ; R77 := closure(Function #41)
	478	[1780]	MOVE     	R0 R8 ; R0 := R8
	479	[1780]	MOVE     	R0 R76 ; R0 := R76
	480	[1780]	MOVE     	R0 R4 ; R0 := R4
	481	[1780]	MOVE     	R0 R75 ; R0 := R75
	482	[1780]	MOVE     	R0 R5 ; R0 := R5
	483	[1780]	MOVE     	R0 R71 ; R0 := R71
	484	[1803]	CLOSURE  	R78 41 ; R78 := closure(Function #42)
	485	[1858]	CLOSURE  	R79 42 ; R79 := closure(Function #43)
	486	[1858]	MOVE     	R0 R8 ; R0 := R8
	487	[1858]	MOVE     	R0 R73 ; R0 := R73
	488	[1858]	MOVE     	R0 R74 ; R0 := R74
	489	[1858]	MOVE     	R0 R72 ; R0 := R72
	490	[1858]	MOVE     	R0 R78 ; R0 := R78
	491	[1858]	MOVE     	R0 R4 ; R0 := R4
	492	[1864]	CLOSURE  	R80 43 ; R80 := closure(Function #44)
	493	[1864]	MOVE     	R0 R62 ; R0 := R62
	494	[1864]	MOVE     	R0 R70 ; R0 := R70
	495	[1864]	MOVE     	R0 R11 ; R0 := R11
	496	[1904]	CLOSURE  	R10 44 ; R10 := closure(Function #45)
	497	[1904]	MOVE     	R0 R62 ; R0 := R62
	498	[1904]	MOVE     	R0 R15 ; R0 := R15
	499	[1904]	MOVE     	R0 R74 ; R0 := R74
	500	[1904]	MOVE     	R0 R66 ; R0 := R66
	501	[1904]	MOVE     	R0 R58 ; R0 := R58
	502	[1904]	MOVE     	R0 R12 ; R0 := R12
	503	[1991]	CLOSURE  	R81 45 ; R81 := closure(Function #46)
	504	[1991]	MOVE     	R0 R61 ; R0 := R61
	505	[1991]	MOVE     	R0 R59 ; R0 := R59
	506	[1991]	MOVE     	R0 R58 ; R0 := R58
	507	[1991]	MOVE     	R0 R20 ; R0 := R20
	508	[2028]	CLOSURE  	R82 46 ; R82 := closure(Function #47)
	509	[2028]	MOVE     	R0 R8 ; R0 := R8
	510	[2051]	CLOSURE  	R83 47 ; R83 := closure(Function #48)
	511	[2051]	MOVE     	R0 R8 ; R0 := R8
	512	[2055]	CLOSURE  	R84 48 ; R84 := closure(Function #49)
	513	[2055]	MOVE     	R0 R69 ; R0 := R69
	514	[2053]	SETGLOBAL	R84 K177 ; onViewportSizeChanged := R84
	515	[2058]	CLOSURE  	R84 49 ; R84 := closure(Function #50)
	516	[2057]	SETGLOBAL	R84 K178 ; OnUpdateSessionSettings := R84
	517	[2083]	CLOSURE  	R84 50 ; R84 := closure(Function #51)
	518	[2083]	MOVE     	R0 R1 ; R0 := R1
	519	[2060]	SETGLOBAL	R84 K179 ; OnSaveLoadOutComplete := R84
	520	[2095]	CLOSURE  	R84 51 ; R84 := closure(Function #52)
	521	[2101]	CLOSURE  	R85 52 ; R85 := closure(Function #53)
	522	[2097]	SETGLOBAL	R85 K180 ; SetTopContainerVis := R85
	523	[2118]	CLOSURE  	R85 53 ; R85 := closure(Function #54)
	524	[2135]	CLOSURE  	R86 54 ; R86 := closure(Function #55)
	525	[2135]	MOVE     	R0 R35 ; R0 := R35
	526	[2135]	MOVE     	R0 R37 ; R0 := R37
	527	[2135]	MOVE     	R0 R36 ; R0 := R36
	528	[2135]	MOVE     	R0 R34 ; R0 := R34
	529	[2152]	CLOSURE  	R12 55 ; R12 := closure(Function #56)
	530	[2152]	MOVE     	R0 R85 ; R0 := R85
	531	[2152]	MOVE     	R0 R5 ; R0 := R5
	532	[2152]	MOVE     	R0 R13 ; R0 := R13
	533	[2200]	CLOSURE  	R87 56 ; R87 := closure(Function #57)
	534	[2200]	MOVE     	R0 R27 ; R0 := R27
	535	[2200]	MOVE     	R0 R1 ; R0 := R1
	536	[2200]	MOVE     	R0 R45 ; R0 := R45
	537	[2200]	MOVE     	R0 R29 ; R0 := R29
	538	[2200]	MOVE     	R0 R5 ; R0 := R5
	539	[2200]	MOVE     	R0 R28 ; R0 := R28
	540	[2206]	CLOSURE  	R88 57 ; R88 := closure(Function #58)
	541	[2206]	MOVE     	R0 R87 ; R0 := R87
	542	[2221]	CLOSURE  	R89 58 ; R89 := closure(Function #59)
	543	[2221]	MOVE     	R0 R87 ; R0 := R87
	544	[2221]	MOVE     	R0 R86 ; R0 := R86
	545	[2221]	MOVE     	R0 R84 ; R0 := R84
	546	[2221]	MOVE     	R0 R29 ; R0 := R29
	547	[2231]	CLOSURE  	R90 59 ; R90 := closure(Function #60)
	548	[2231]	MOVE     	R0 R9 ; R0 := R9
	549	[2245]	CLOSURE  	R91 60 ; R91 := closure(Function #61)
	550	[2245]	MOVE     	R0 R5 ; R0 := R5
	551	[2265]	CLOSURE  	R92 61 ; R92 := closure(Function #62)
	552	[2265]	MOVE     	R0 R91 ; R0 := R91
	553	[2265]	MOVE     	R0 R5 ; R0 := R5
	554	[2265]	MOVE     	R0 R66 ; R0 := R66
	555	[2269]	CLOSURE  	R93 62 ; R93 := closure(Function #63)
	556	[2269]	MOVE     	R0 R92 ; R0 := R92
	557	[2267]	SETGLOBAL	R93 K181 ; ConfirmShipText := R93
	558	[2275]	CLOSURE  	R93 63 ; R93 := closure(Function #64)
	559	[2275]	MOVE     	R0 R92 ; R0 := R92
	560	[2271]	SETGLOBAL	R93 K182 ; OSKConfirmShipText := R93
	561	[2284]	CLOSURE  	R93 64 ; R93 := closure(Function #65)
	562	[2284]	MOVE     	R0 R90 ; R0 := R90
	563	[2284]	MOVE     	R0 R1 ; R0 := R1
	564	[2309]	CLOSURE  	R94 65 ; R94 := closure(Function #66)
	565	[2309]	MOVE     	R0 R59 ; R0 := R59
	566	[2309]	MOVE     	R0 R81 ; R0 := R81
	567	[2309]	MOVE     	R0 R58 ; R0 := R58
	568	[2507]	CLOSURE  	R95 66 ; R95 := closure(Function #67)
	569	[2507]	MOVE     	R0 R61 ; R0 := R61
	570	[2507]	MOVE     	R0 R58 ; R0 := R58
	571	[2507]	MOVE     	R0 R59 ; R0 := R59
	572	[2507]	MOVE     	R0 R15 ; R0 := R15
	573	[2507]	MOVE     	R0 R14 ; R0 := R14
	574	[2507]	MOVE     	R0 R93 ; R0 := R93
	575	[2507]	MOVE     	R0 R7 ; R0 := R7
	576	[2507]	MOVE     	R0 R94 ; R0 := R94
	577	[2507]	MOVE     	R0 R89 ; R0 := R89
	578	[2507]	MOVE     	R0 R90 ; R0 := R90
	579	[2507]	MOVE     	R0 R8 ; R0 := R8
	580	[2507]	MOVE     	R0 R79 ; R0 := R79
	581	[2507]	MOVE     	R0 R80 ; R0 := R80
	582	[2507]	MOVE     	R0 R10 ; R0 := R10
	583	[2507]	MOVE     	R0 R78 ; R0 := R78
	584	[2600]	CLOSURE  	R96 67 ; R96 := closure(Function #68)
	585	[2600]	MOVE     	R0 R5 ; R0 := R5
	586	[2600]	MOVE     	R0 R63 ; R0 := R63
	587	[2600]	MOVE     	R0 R67 ; R0 := R67
	588	[2600]	MOVE     	R0 R88 ; R0 := R88
	589	[2600]	MOVE     	R0 R95 ; R0 := R95
	590	[2600]	MOVE     	R0 R9 ; R0 := R9
	591	[2600]	MOVE     	R0 R87 ; R0 := R87
	592	[2600]	MOVE     	R0 R68 ; R0 := R68
	593	[2652]	CLOSURE  	R97 68 ; R97 := closure(Function #69)
	594	[2652]	MOVE     	R0 R8 ; R0 := R8
	595	[2680]	CLOSURE  	R98 69 ; R98 := closure(Function #70)
	596	[2680]	MOVE     	R0 R15 ; R0 := R15
	597	[2680]	MOVE     	R0 R97 ; R0 := R97
	598	[2680]	MOVE     	R0 R29 ; R0 := R29
	599	[2680]	MOVE     	R0 R5 ; R0 := R5
	600	[2812]	CLOSURE  	R99 70 ; R99 := closure(Function #71)
	601	[2812]	MOVE     	R0 R15 ; R0 := R15
	602	[2812]	MOVE     	R0 R8 ; R0 := R8
	603	[2812]	MOVE     	R0 R4 ; R0 := R4
	604	[2812]	MOVE     	R0 R82 ; R0 := R82
	605	[2812]	MOVE     	R0 R83 ; R0 := R83
	606	[2866]	CLOSURE  	R100 71 ; R100 := closure(Function #72)
	607	[2866]	MOVE     	R0 R8 ; R0 := R8
	608	[2866]	MOVE     	R0 R4 ; R0 := R4
	609	[2866]	MOVE     	R0 R82 ; R0 := R82
	610	[2866]	MOVE     	R0 R83 ; R0 := R83
	611	[2882]	CLOSURE  	R101 72 ; R101 := closure(Function #73)
	612	[3020]	CLOSURE  	R102 73 ; R102 := closure(Function #74)
	613	[3020]	MOVE     	R0 R5 ; R0 := R5
	614	[3020]	MOVE     	R0 R15 ; R0 := R15
	615	[3020]	MOVE     	R0 R86 ; R0 := R86
	616	[3020]	MOVE     	R0 R87 ; R0 := R87
	617	[3020]	MOVE     	R0 R84 ; R0 := R84
	618	[3020]	MOVE     	R0 R30 ; R0 := R30
	619	[3020]	MOVE     	R0 R31 ; R0 := R31
	620	[3020]	MOVE     	R0 R33 ; R0 := R33
	621	[3020]	MOVE     	R0 R32 ; R0 := R32
	622	[3020]	MOVE     	R0 R101 ; R0 := R101
	623	[3020]	MOVE     	R0 R9 ; R0 := R9
	624	[3072]	CLOSURE  	R103 74 ; R103 := closure(Function #75)
	625	[3072]	MOVE     	R0 R15 ; R0 := R15
	626	[3072]	MOVE     	R0 R28 ; R0 := R28
	627	[3072]	MOVE     	R0 R16 ; R0 := R16
	628	[3072]	MOVE     	R0 R58 ; R0 := R58
	629	[3072]	MOVE     	R0 R100 ; R0 := R100
	630	[3091]	CLOSURE  	R104 75 ; R104 := closure(Function #76)
	631	[3091]	MOVE     	R0 R15 ; R0 := R15
	632	[3091]	MOVE     	R0 R99 ; R0 := R99
	633	[3112]	CLOSURE  	R105 76 ; R105 := closure(Function #77)
	634	[3112]	MOVE     	R0 R15 ; R0 := R15
	635	[3112]	MOVE     	R0 R99 ; R0 := R99
	636	[3168]	CLOSURE  	R106 77 ; R106 := closure(Function #78)
	637	[3197]	CLOSURE  	R107 78 ; R107 := closure(Function #79)
	638	[3197]	MOVE     	R0 R5 ; R0 := R5
	639	[3197]	MOVE     	R0 R106 ; R0 := R106
	640	[3230]	CLOSURE  	R108 79 ; R108 := closure(Function #80)
	641	[3230]	MOVE     	R0 R107 ; R0 := R107
	642	[3230]	MOVE     	R0 R18 ; R0 := R18
	643	[3230]	MOVE     	R0 R5 ; R0 := R5
	644	[3245]	CLOSURE  	R109 80 ; R109 := closure(Function #81)
	645	[3245]	MOVE     	R0 R0 ; R0 := R0
	646	[3245]	MOVE     	R0 R5 ; R0 := R5
	647	[3273]	CLOSURE  	R110 81 ; R110 := closure(Function #82)
	648	[3273]	MOVE     	R0 R109 ; R0 := R109
	649	[3273]	MOVE     	R0 R71 ; R0 := R71
	650	[3273]	MOVE     	R0 R108 ; R0 := R108
	651	[3353]	CLOSURE  	R111 82 ; R111 := closure(Function #83)
	652	[3353]	MOVE     	R0 R16 ; R0 := R16
	653	[3353]	MOVE     	R0 R15 ; R0 := R15
	654	[3353]	MOVE     	R0 R70 ; R0 := R70
	655	[3353]	MOVE     	R0 R11 ; R0 := R11
	656	[3353]	MOVE     	R0 R5 ; R0 := R5
	657	[3353]	MOVE     	R0 R66 ; R0 := R66
	658	[3353]	MOVE     	R0 R99 ; R0 := R99
	659	[3353]	MOVE     	R0 R80 ; R0 := R80
	660	[3353]	MOVE     	R0 R10 ; R0 := R10
	661	[3353]	MOVE     	R0 R100 ; R0 := R100
	662	[3380]	CLOSURE  	R112 83 ; R112 := closure(Function #84)
	663	[3380]	MOVE     	R0 R111 ; R0 := R111
	664	[3355]	SETGLOBAL	R112 K183 ; OnConfirmEquip := R112
	665	[3384]	CLOSURE  	R112 84 ; R112 := closure(Function #85)
	666	[3384]	MOVE     	R0 R111 ; R0 := R111
	667	[3382]	SETGLOBAL	R112 K184 ; EquipSelectedItem := R112
	668	[3387]	CLOSURE  	R112 85 ; R112 := closure(Function #86)
	669	[3386]	SETGLOBAL	R112 K185 ; ContributionCallback := R112
	670	[3462]	CLOSURE  	R112 86 ; R112 := closure(Function #87)
	671	[3462]	MOVE     	R0 R15 ; R0 := R15
	672	[3462]	MOVE     	R0 R17 ; R0 := R17
	673	[3462]	MOVE     	R0 R82 ; R0 := R82
	674	[3462]	MOVE     	R0 R83 ; R0 := R83
	675	[3462]	MOVE     	R0 R77 ; R0 := R77
	676	[3462]	MOVE     	R0 R80 ; R0 := R80
	677	[3462]	MOVE     	R0 R111 ; R0 := R111
	678	[3489]	CLOSURE  	R113 87 ; R113 := closure(Function #88)
	679	[3489]	MOVE     	R0 R70 ; R0 := R70
	680	[3489]	MOVE     	R0 R11 ; R0 := R11
	681	[3530]	CLOSURE  	R114 88 ; R114 := closure(Function #89)
	682	[3530]	MOVE     	R0 R5 ; R0 := R5
	683	[3530]	MOVE     	R0 R112 ; R0 := R112
	684	[3530]	MOVE     	R0 R17 ; R0 := R17
	685	[3530]	MOVE     	R0 R113 ; R0 := R113
	686	[3540]	CLOSURE  	R115 89 ; R115 := closure(Function #90)
	687	[3532]	SETGLOBAL	R115 K186 ; OnTechStarted := R115
	688	[3551]	CLOSURE  	R115 90 ; R115 := closure(Function #91)
	689	[3542]	SETGLOBAL	R115 K187 ; InstantRepairConfirm := R115
	690	[3569]	CLOSURE  	R115 91 ; R115 := closure(Function #92)
	691	[3569]	MOVE     	R0 R5 ; R0 := R5
	692	[3553]	SETGLOBAL	R115 K188 ; ShowInstantRepairConfirm := R115
	693	[3578]	CLOSURE  	R115 92 ; R115 := closure(Function #93)
	694	[3603]	CLOSURE  	R116 93 ; R116 := closure(Function #94)
	695	[3603]	MOVE     	R0 R115 ; R0 := R115
	696	[3603]	MOVE     	R0 R114 ; R0 := R114
	697	[3580]	SETGLOBAL	R116 K189 ; RepairSelectedItem := R116
	698	[3630]	CLOSURE  	R116 94 ; R116 := closure(Function #95)
	699	[3630]	MOVE     	R0 R15 ; R0 := R15
	700	[3630]	MOVE     	R0 R112 ; R0 := R112
	701	[3630]	MOVE     	R0 R17 ; R0 := R17
	702	[3630]	MOVE     	R0 R113 ; R0 := R113
	703	[3630]	MOVE     	R0 R108 ; R0 := R108
	704	[3605]	SETGLOBAL	R116 K190 ; OnTechClaimed := R116
	705	[3642]	CLOSURE  	R116 95 ; R116 := closure(Function #96)
	706	[3632]	SETGLOBAL	R116 K191 ; RushConfirm := R116
	707	[3654]	CLOSURE  	R116 96 ; R116 := closure(Function #97)
	708	[3644]	SETGLOBAL	R116 K192 ; ClaimConfirm := R116
	709	[3681]	CLOSURE  	R116 97 ; R116 := closure(Function #98)
	710	[3681]	MOVE     	R0 R5 ; R0 := R5
	711	[3656]	SETGLOBAL	R116 K193 ; OnSlotsResults := R116
	712	[3717]	CLOSURE  	R116 98 ; R116 := closure(Function #99)
	713	[3683]	SETGLOBAL	R116 K194 ; OnUpSellInvSlotsConfirmed := R116
	714	[3724]	CLOSURE  	R116 99 ; R116 := closure(Function #100)
	715	[3724]	MOVE     	R0 R1 ; R0 := R1
	716	[3719]	SETGLOBAL	R116 K195 ; OnInvalidBinError := R116
	717	[3760]	CLOSURE  	R116 100 ; R116 := closure(Function #101)
	718	[3760]	MOVE     	R0 R1 ; R0 := R1
	719	[3760]	MOVE     	R0 R5 ; R0 := R5
	720	[3791]	CLOSURE  	R117 101 ; R117 := closure(Function #102)
	721	[3791]	MOVE     	R0 R52 ; R0 := R52
	722	[3791]	MOVE     	R0 R1 ; R0 := R1
	723	[3791]	MOVE     	R0 R116 ; R0 := R116
	724	[3791]	MOVE     	R0 R5 ; R0 := R5
	725	[3795]	CLOSURE  	R118 102 ; R118 := closure(Function #103)
	726	[3795]	MOVE     	R0 R117 ; R0 := R117
	727	[3793]	SETGLOBAL	R118 K196 ; RushSelectedItem := R118
	728	[3799]	CLOSURE  	R118 103 ; R118 := closure(Function #104)
	729	[3799]	MOVE     	R0 R117 ; R0 := R117
	730	[3797]	SETGLOBAL	R118 K197 ; ClaimSelectedItem := R118
	731	[3801]	LOADK    	R118 := 0.000000
	732	[3817]	CLOSURE  	R119 104 ; R119 := closure(Function #105)
	733	[3817]	MOVE     	R0 R118 ; R0 := R118
	734	[3839]	CLOSURE  	R120 105 ; R120 := closure(Function #106)
	735	[3839]	MOVE     	R0 R112 ; R0 := R112
	736	[3839]	MOVE     	R0 R17 ; R0 := R17
	737	[3839]	MOVE     	R0 R108 ; R0 := R108
	738	[3839]	MOVE     	R0 R118 ; R0 := R118
	739	[3839]	MOVE     	R0 R119 ; R0 := R119
	740	[3819]	SETGLOBAL	R120 K198 ; OnSalvageSold := R120
	741	[3874]	CLOSURE  	R120 106 ; R120 := closure(Function #107)
	742	[3874]	MOVE     	R0 R16 ; R0 := R16
	743	[3874]	MOVE     	R0 R69 ; R0 := R69
	744	[3878]	CLOSURE  	R121 107 ; R121 := closure(Function #108)
	745	[3878]	MOVE     	R0 R120 ; R0 := R120
	746	[3876]	SETGLOBAL	R121 K199 ; SellConfirm := R121
	747	[3897]	CLOSURE  	R121 108 ; R121 := closure(Function #109)
	748	[3897]	MOVE     	R0 R5 ; R0 := R5
	749	[3897]	MOVE     	R0 R120 ; R0 := R120
	750	[3880]	SETGLOBAL	R121 K200 ; SellCountConfirm := R121
	751	[3966]	CLOSURE  	R121 109 ; R121 := closure(Function #110)
	752	[3966]	MOVE     	R0 R16 ; R0 := R16
	753	[3966]	MOVE     	R0 R5 ; R0 := R5
	754	[3966]	MOVE     	R0 R8 ; R0 := R8
	755	[3966]	MOVE     	R0 R4 ; R0 := R4
	756	[3966]	MOVE     	R0 R3 ; R0 := R3
	757	[3899]	SETGLOBAL	R121 K201 ; SellSelectedItem := R121
	758	[3973]	CLOSURE  	R121 110 ; R121 := closure(Function #111)
	759	[4035]	CLOSURE  	R122 111 ; R122 := closure(Function #112)
	760	[4035]	MOVE     	R0 R5 ; R0 := R5
	761	[4035]	MOVE     	R0 R112 ; R0 := R112
	762	[4035]	MOVE     	R0 R15 ; R0 := R15
	763	[4035]	MOVE     	R0 R113 ; R0 := R113
	764	[4035]	MOVE     	R0 R99 ; R0 := R99
	765	[4035]	MOVE     	R0 R111 ; R0 := R111
	766	[4035]	MOVE     	R0 R100 ; R0 := R100
	767	[4035]	MOVE     	R0 R108 ; R0 := R108
	768	[4035]	MOVE     	R0 R121 ; R0 := R121
	769	[3975]	SETGLOBAL	R122 K202 ; OnFuseItem := R122
	770	[4057]	CLOSURE  	R122 112 ; R122 := closure(Function #113)
	771	[4057]	MOVE     	R0 R121 ; R0 := R121
	772	[4057]	MOVE     	R0 R5 ; R0 := R5
	773	[4037]	SETGLOBAL	R122 K203 ; ConfirmFuseItem := R122
	774	[4094]	CLOSURE  	R122 113 ; R122 := closure(Function #114)
	775	[4094]	MOVE     	R0 R15 ; R0 := R15
	776	[4123]	CLOSURE  	R123 114 ; R123 := closure(Function #115)
	777	[4180]	CLOSURE  	R124 115 ; R124 := closure(Function #116)
	778	[4180]	MOVE     	R0 R15 ; R0 := R15
	779	[4180]	MOVE     	R0 R5 ; R0 := R5
	780	[4180]	MOVE     	R0 R122 ; R0 := R122
	781	[4180]	MOVE     	R0 R2 ; R0 := R2
	782	[4240]	CLOSURE  	R125 116 ; R125 := closure(Function #117)
	783	[4240]	MOVE     	R0 R124 ; R0 := R124
	784	[4240]	MOVE     	R0 R5 ; R0 := R5
	785	[4240]	MOVE     	R0 R121 ; R0 := R121
	786	[4240]	MOVE     	R0 R123 ; R0 := R123
	787	[4240]	MOVE     	R0 R1 ; R0 := R1
	788	[4252]	CLOSURE  	R126 117 ; R126 := closure(Function #118)
	789	[4252]	MOVE     	R0 R125 ; R0 := R125
	790	[4252]	MOVE     	R0 R121 ; R0 := R121
	791	[4242]	SETGLOBAL	R126 K204 ; FusePreview := R126
	792	[4264]	CLOSURE  	R126 118 ; R126 := closure(Function #119)
	793	[4264]	MOVE     	R0 R2 ; R0 := R2
	794	[4275]	CLOSURE  	R127 119 ; R127 := closure(Function #120)
	795	[4275]	MOVE     	R0 R126 ; R0 := R126
	796	[4275]	MOVE     	R0 R5 ; R0 := R5
	797	[4327]	CLOSURE  	R128 120 ; R128 := closure(Function #121)
	798	[4327]	MOVE     	R0 R2 ; R0 := R2
	799	[4386]	CLOSURE  	R129 121 ; R129 := closure(Function #122)
	800	[4386]	MOVE     	R0 R5 ; R0 := R5
	801	[4386]	MOVE     	R0 R121 ; R0 := R121
	802	[4386]	MOVE     	R0 R21 ; R0 := R21
	803	[4386]	MOVE     	R0 R128 ; R0 := R128
	804	[4386]	MOVE     	R0 R16 ; R0 := R16
	805	[4462]	CLOSURE  	R130 122 ; R130 := closure(Function #123)
	806	[4462]	MOVE     	R0 R23 ; R0 := R23
	807	[4462]	MOVE     	R0 R5 ; R0 := R5
	808	[4462]	MOVE     	R0 R121 ; R0 := R121
	809	[4462]	MOVE     	R0 R24 ; R0 := R24
	810	[4506]	CLOSURE  	R131 123 ; R131 := closure(Function #124)
	811	[4506]	MOVE     	R0 R5 ; R0 := R5
	812	[4506]	MOVE     	R0 R121 ; R0 := R121
	813	[4506]	MOVE     	R0 R130 ; R0 := R130
	814	[4506]	MOVE     	R0 R127 ; R0 := R127
	815	[4506]	MOVE     	R0 R125 ; R0 := R125
	816	[4464]	SETGLOBAL	R131 K205 ; FuseSelectedItem := R131
	817	[4534]	CLOSURE  	R131 124 ; R131 := closure(Function #125)
	818	[4549]	CLOSURE  	R132 125 ; R132 := closure(Function #126)
	819	[4549]	MOVE     	R0 R16 ; R0 := R16
	820	[4549]	MOVE     	R0 R22 ; R0 := R22
	821	[4597]	CLOSURE  	R133 126 ; R133 := closure(Function #127)
	822	[4597]	MOVE     	R0 R76 ; R0 := R76
	823	[4597]	MOVE     	R0 R132 ; R0 := R132
	824	[4597]	MOVE     	R0 R16 ; R0 := R16
	825	[4597]	MOVE     	R0 R4 ; R0 := R4
	826	[4597]	MOVE     	R0 R75 ; R0 := R75
	827	[4597]	MOVE     	R0 R131 ; R0 := R131
	828	[4658]	CLOSURE  	R134 127 ; R134 := closure(Function #128)
	829	[4658]	MOVE     	R0 R129 ; R0 := R129
	830	[4658]	MOVE     	R0 R133 ; R0 := R133
	831	[4658]	MOVE     	R0 R5 ; R0 := R5
	832	[4658]	MOVE     	R0 R121 ; R0 := R121
	833	[4658]	MOVE     	R0 R69 ; R0 := R69
	834	[4658]	MOVE     	R0 R25 ; R0 := R25
	835	[4599]	SETGLOBAL	R134 K206 ; StartFuse := R134
	836	[4668]	CLOSURE  	R134 128 ; R134 := closure(Function #129)
	837	[4660]	SETGLOBAL	R134 K207 ; IdentifiedSalvageAction := R134
	838	[4720]	CLOSURE  	R134 129 ; R134 := closure(Function #130)
	839	[4720]	MOVE     	R0 R112 ; R0 := R112
	840	[4720]	MOVE     	R0 R15 ; R0 := R15
	841	[4720]	MOVE     	R0 R113 ; R0 := R113
	842	[4720]	MOVE     	R0 R129 ; R0 := R129
	843	[4720]	MOVE     	R0 R123 ; R0 := R123
	844	[4720]	MOVE     	R0 R108 ; R0 := R108
	845	[4720]	MOVE     	R0 R5 ; R0 := R5
	846	[4670]	SETGLOBAL	R134 K208 ; OnSalvageIdentified := R134
	847	[4735]	CLOSURE  	R134 130 ; R134 := closure(Function #131)
	848	[4735]	MOVE     	R0 R16 ; R0 := R16
	849	[4722]	SETGLOBAL	R134 K209 ; IdentifySelectedItem := R134
	850	[4755]	CLOSURE  	R134 131 ; R134 := closure(Function #132)
	851	[4755]	MOVE     	R0 R112 ; R0 := R112
	852	[4755]	MOVE     	R0 R17 ; R0 := R17
	853	[4755]	MOVE     	R0 R113 ; R0 := R113
	854	[4755]	MOVE     	R0 R5 ; R0 := R5
	855	[4737]	SETGLOBAL	R134 K210 ; OnTechCancelled := R134
	856	[4766]	CLOSURE  	R134 132 ; R134 := closure(Function #133)
	857	[4757]	SETGLOBAL	R134 K211 ; CancelRepairsConfirm := R134
	858	[4778]	CLOSURE  	R134 133 ; R134 := closure(Function #134)
	859	[4778]	MOVE     	R0 R5 ; R0 := R5
	860	[4768]	SETGLOBAL	R134 K212 ; ShowCancelRepairsConfirm := R134
	861	[4796]	CLOSURE  	R134 134 ; R134 := closure(Function #135)
	862	[4796]	MOVE     	R0 R5 ; R0 := R5
	863	[4796]	MOVE     	R0 R39 ; R0 := R39
	864	[4813]	CLOSURE  	R135 135 ; R135 := closure(Function #136)
	865	[4813]	MOVE     	R0 R131 ; R0 := R131
	866	[4833]	CLOSURE  	R136 136 ; R136 := closure(Function #137)
	867	[4841]	CLOSURE  	R137 137 ; R137 := closure(Function #138)
	868	[4841]	MOVE     	R0 R3 ; R0 := R3
	869	[4841]	MOVE     	R0 R136 ; R0 := R136
	870	[4858]	CLOSURE  	R138 138 ; R138 := closure(Function #139)
	871	[4858]	MOVE     	R0 R15 ; R0 := R15
	872	[4882]	CLOSURE  	R139 139 ; R139 := closure(Function #140)
	873	[4882]	MOVE     	R0 R3 ; R0 := R3
	874	[4882]	MOVE     	R0 R135 ; R0 := R135
	875	[4882]	MOVE     	R0 R47 ; R0 := R47
	876	[4882]	MOVE     	R0 R4 ; R0 := R4
	877	[4882]	MOVE     	R0 R8 ; R0 := R8
	878	[4882]	MOVE     	R0 R15 ; R0 := R15
	879	[4894]	CLOSURE  	R140 140 ; R140 := closure(Function #141)
	880	[4894]	MOVE     	R0 R3 ; R0 := R3
	881	[4894]	MOVE     	R0 R135 ; R0 := R135
	882	[4925]	CLOSURE  	R141 141 ; R141 := closure(Function #142)
	883	[4925]	MOVE     	R0 R16 ; R0 := R16
	884	[4935]	CLOSURE  	R142 142 ; R142 := closure(Function #143)
	885	[4935]	MOVE     	R0 R3 ; R0 := R3
	886	[4935]	MOVE     	R0 R135 ; R0 := R135
	887	[4935]	MOVE     	R0 R141 ; R0 := R141
	888	[5148]	CLOSURE  	R143 143 ; R143 := closure(Function #144)
	889	[5148]	MOVE     	R0 R5 ; R0 := R5
	890	[5148]	MOVE     	R0 R137 ; R0 := R137
	891	[5148]	MOVE     	R0 R139 ; R0 := R139
	892	[5148]	MOVE     	R0 R140 ; R0 := R140
	893	[5148]	MOVE     	R0 R142 ; R0 := R142
	894	[5148]	MOVE     	R0 R11 ; R0 := R11
	895	[5148]	MOVE     	R0 R70 ; R0 := R70
	896	[5148]	MOVE     	R0 R16 ; R0 := R16
	897	[5148]	MOVE     	R0 R111 ; R0 := R111
	898	[5148]	MOVE     	R0 R15 ; R0 := R15
	899	[5148]	MOVE     	R0 R101 ; R0 := R101
	900	[5148]	MOVE     	R0 R25 ; R0 := R25
	901	[5185]	CLOSURE  	R144 144 ; R144 := closure(Function #145)
	902	[5185]	MOVE     	R0 R4 ; R0 := R4
	903	[5185]	MOVE     	R0 R8 ; R0 := R8
	904	[5185]	MOVE     	R0 R70 ; R0 := R70
	905	[5185]	MOVE     	R0 R87 ; R0 := R87
	906	[5185]	MOVE     	R0 R66 ; R0 := R66
	907	[5185]	MOVE     	R0 R81 ; R0 := R81
	908	[5196]	CLOSURE  	R145 145 ; R145 := closure(Function #146)
	909	[5394]	CLOSURE  	R146 146 ; R146 := closure(Function #147)
	910	[5394]	MOVE     	R0 R16 ; R0 := R16
	911	[5394]	MOVE     	R0 R3 ; R0 := R3
	912	[5394]	MOVE     	R0 R136 ; R0 := R136
	913	[5495]	CLOSURE  	R11 147 ; R11 := closure(Function #148)
	914	[5495]	MOVE     	R0 R15 ; R0 := R15
	915	[5495]	MOVE     	R0 R16 ; R0 := R16
	916	[5495]	MOVE     	R0 R1 ; R0 := R1
	917	[5495]	MOVE     	R0 R18 ; R0 := R18
	918	[5495]	MOVE     	R0 R141 ; R0 := R141
	919	[5495]	MOVE     	R0 R5 ; R0 := R5
	920	[5503]	CLOSURE  	R147 148 ; R147 := closure(Function #149)
	921	[5497]	SETGLOBAL	R147 K213 ; CurrencyReleased := R147
	922	[5511]	CLOSURE  	R147 149 ; R147 := closure(Function #150)
	923	[5505]	SETGLOBAL	R147 K214 ; CurrencyPressed := R147
	924	[5519]	CLOSURE  	R147 150 ; R147 := closure(Function #151)
	925	[5513]	SETGLOBAL	R147 K215 ; CurrencyFocused := R147
	926	[5527]	CLOSURE  	R147 151 ; R147 := closure(Function #152)
	927	[5521]	SETGLOBAL	R147 K216 ; CurrencyUnfocused := R147
	928	[5581]	CLOSURE  	R147 152 ; R147 := closure(Function #153)
	929	[5581]	MOVE     	R0 R69 ; R0 := R69
	930	[5581]	MOVE     	R0 R112 ; R0 := R112
	931	[5581]	MOVE     	R0 R17 ; R0 := R17
	932	[5581]	MOVE     	R0 R108 ; R0 := R108
	933	[5581]	MOVE     	R0 R5 ; R0 := R5
	934	[5736]	CLOSURE  	R148 153 ; R148 := closure(Function #154)
	935	[5736]	MOVE     	R0 R1 ; R0 := R1
	936	[5736]	MOVE     	R0 R109 ; R0 := R109
	937	[5736]	MOVE     	R0 R49 ; R0 := R49
	938	[5736]	MOVE     	R0 R5 ; R0 := R5
	939	[5736]	MOVE     	R0 R134 ; R0 := R134
	940	[5736]	MOVE     	R0 R102 ; R0 := R102
	941	[5736]	MOVE     	R0 R96 ; R0 := R96
	942	[5736]	MOVE     	R0 R143 ; R0 := R143
	943	[5736]	MOVE     	R0 R144 ; R0 := R144
	944	[5736]	MOVE     	R0 R145 ; R0 := R145
	945	[5736]	MOVE     	R0 R87 ; R0 := R87
	946	[5736]	MOVE     	R0 R110 ; R0 := R110
	947	[5736]	MOVE     	R0 R103 ; R0 := R103
	948	[5736]	MOVE     	R0 R12 ; R0 := R12
	949	[5736]	MOVE     	R0 R98 ; R0 := R98
	950	[5736]	MOVE     	R0 R95 ; R0 := R95
	951	[5736]	MOVE     	R0 R146 ; R0 := R146
	952	[5736]	MOVE     	R0 R108 ; R0 := R108
	953	[5736]	MOVE     	R0 R69 ; R0 := R69
	954	[5736]	MOVE     	R0 R70 ; R0 := R70
	955	[5736]	MOVE     	R0 R26 ; R0 := R26
	956	[5583]	SETGLOBAL	R148 K217 ; Initialize := R148
	957	[5774]	CLOSURE  	R148 154 ; R148 := closure(Function #155)
	958	[5774]	MOVE     	R0 R114 ; R0 := R114
	959	[5738]	SETGLOBAL	R148 K218 ; Update := R148
	960	[5778]	CLOSURE  	R148 155 ; R148 := closure(Function #156)
	961	[5778]	MOVE     	R0 R110 ; R0 := R110
	962	[5776]	SETGLOBAL	R148 K219 ; OnStyleChangedCallback := R148
	963	[5786]	CLOSURE  	R148 156 ; R148 := closure(Function #157)
	964	[5786]	MOVE     	R0 R5 ; R0 := R5
	965	[5786]	MOVE     	R0 R66 ; R0 := R66
	966	[5780]	SETGLOBAL	R148 K220 ; onKeyDown_MENU_CANCEL := R148
	967	[5790]	CLOSURE  	R148 157 ; R148 := closure(Function #158)
	968	[5788]	SETGLOBAL	R148 K221 ; SupportsThemes := R148
	969	[5796]	CLOSURE  	R148 158 ; R148 := closure(Function #159)
	970	[5792]	SETGLOBAL	R148 K222 ; EquipmentFocused := R148
	971	[5802]	CLOSURE  	R148 159 ; R148 := closure(Function #160)
	972	[5798]	SETGLOBAL	R148 K223 ; EquipmentUnfocused := R148
	973	[5808]	CLOSURE  	R148 160 ; R148 := closure(Function #161)
	974	[5804]	SETGLOBAL	R148 K224 ; EquipmentSelected := R148
	975	[5814]	CLOSURE  	R148 161 ; R148 := closure(Function #162)
	976	[5810]	SETGLOBAL	R148 K225 ; EquipmentPressed := R148
	977	[5820]	CLOSURE  	R148 162 ; R148 := closure(Function #163)
	978	[5816]	SETGLOBAL	R148 K226 ; CategoryFocused := R148
	979	[5826]	CLOSURE  	R148 163 ; R148 := closure(Function #164)
	980	[5822]	SETGLOBAL	R148 K227 ; CategoryUnfocused := R148
	981	[5834]	CLOSURE  	R148 164 ; R148 := closure(Function #165)
	982	[5828]	SETGLOBAL	R148 K228 ; CategoryPressed := R148
	983	[5840]	CLOSURE  	R148 165 ; R148 := closure(Function #166)
	984	[5836]	SETGLOBAL	R148 K229 ; ConfigureTabFocused := R148
	985	[5846]	CLOSURE  	R148 166 ; R148 := closure(Function #167)
	986	[5842]	SETGLOBAL	R148 K230 ; ConfigureTabUnfocused := R148
	987	[5852]	CLOSURE  	R148 167 ; R148 := closure(Function #168)
	988	[5848]	SETGLOBAL	R148 K231 ; ConfigureTabSelected := R148
	989	[5858]	CLOSURE  	R148 168 ; R148 := closure(Function #169)
	990	[5854]	SETGLOBAL	R148 K232 ; ConfigureTabPressed := R148
	991	[5864]	CLOSURE  	R148 169 ; R148 := closure(Function #170)
	992	[5860]	SETGLOBAL	R148 K233 ; InventoryFocused := R148
	993	[5872]	CLOSURE  	R148 170 ; R148 := closure(Function #171)
	994	[5866]	SETGLOBAL	R148 K234 ; InventoryUnfocused := R148
	995	[5878]	CLOSURE  	R148 171 ; R148 := closure(Function #172)
	996	[5874]	SETGLOBAL	R148 K235 ; InventorySelected := R148
	997	[5882]	CLOSURE  	R148 172 ; R148 := closure(Function #173)
	998	[5880]	SETGLOBAL	R148 K236 ; SetTrigger := R148
	999	[5896]	CLOSURE  	R148 173 ; R148 := closure(Function #174)
	1000	[5884]	SETGLOBAL	R148 K237 ; onKeyDown_MENU_MOUSE_Z := R148
	1001	[5907]	CLOSURE  	R148 174 ; R148 := closure(Function #175)
	1002	[5907]	MOVE     	R0 R15 ; R0 := R15
	1003	[5907]	MOVE     	R0 R5 ; R0 := R5
	1004	[5898]	SETGLOBAL	R148 K238 ; onKeyUp_MENU_LTRIGGER2 := R148
	1005	[5918]	CLOSURE  	R148 175 ; R148 := closure(Function #176)
	1006	[5918]	MOVE     	R0 R15 ; R0 := R15
	1007	[5918]	MOVE     	R0 R5 ; R0 := R5
	1008	[5909]	SETGLOBAL	R148 K239 ; onKeyUp_MENU_RTRIGGER2 := R148
	1009	[5935]	CLOSURE  	R148 176 ; R148 := closure(Function #177)
	1010	[5935]	MOVE     	R0 R15 ; R0 := R15
	1011	[5935]	MOVE     	R0 R5 ; R0 := R5
	1012	[5920]	SETGLOBAL	R148 K240 ; onKeyDown_MENU_LTRIGGER2 := R148
	1013	[5950]	CLOSURE  	R148 177 ; R148 := closure(Function #178)
	1014	[5950]	MOVE     	R0 R15 ; R0 := R15
	1015	[5950]	MOVE     	R0 R5 ; R0 := R5
	1016	[5937]	SETGLOBAL	R148 K241 ; onKeyDown_MENU_RTRIGGER2 := R148
	1017	[5967]	CLOSURE  	R148 178 ; R148 := closure(Function #179)
	1018	[5967]	MOVE     	R0 R15 ; R0 := R15
	1019	[5952]	SETGLOBAL	R148 K242 ; onKeyDown_MENU_GENERIC2 := R148
	1020	[5973]	CLOSURE  	R148 179 ; R148 := closure(Function #180)
	1021	[5973]	MOVE     	R0 R88 ; R0 := R88
	1022	[5973]	MOVE     	R0 R95 ; R0 := R95
	1023	[5973]	MOVE     	R0 R70 ; R0 := R70
	1024	[5969]	SETGLOBAL	R148 K243 ; ToggleInteriorCustomization := R148
	1025	[5978]	CLOSURE  	R148 180 ; R148 := closure(Function #181)
	1026	[5978]	MOVE     	R0 R66 ; R0 := R66
	1027	[5975]	SETGLOBAL	R148 K244 ; ChildMovieClosed := R148
	1028	[6074]	CLOSURE  	R9 181 ; R9 := closure(Function #182)
	1029	[6074]	MOVE     	R0 R15 ; R0 := R15
	1030	[6074]	MOVE     	R0 R105 ; R0 := R105
	1031	[6074]	MOVE     	R0 R104 ; R0 := R104
	1032	[6074]	MOVE     	R0 R103 ; R0 := R103
	1033	[6074]	MOVE     	R0 R69 ; R0 := R69
	1034	[6074]	MOVE     	R0 R77 ; R0 := R77
	1035	[6074]	MOVE     	R0 R70 ; R0 := R70
	1036	[6074]	MOVE     	R0 R11 ; R0 := R11
	1037	[6074]	MOVE     	R0 R138 ; R0 := R138
	1038	[6078]	CLOSURE  	R148 182 ; R148 := closure(Function #183)
	1039	[6076]	SETGLOBAL	R148 K245 ; RefreshStats := R148
	1040	[6100]	CLOSURE  	R148 183 ; R148 := closure(Function #184)
	1041	[6100]	MOVE     	R0 R19 ; R0 := R19
	1042	[6100]	MOVE     	R0 R3 ; R0 := R3
	1043	[6080]	SETGLOBAL	R148 K246 ; CapacityFocused := R148
	1044	[6109]	CLOSURE  	R148 184 ; R148 := closure(Function #185)
	1045	[6109]	MOVE     	R0 R19 ; R0 := R19
	1046	[6102]	SETGLOBAL	R148 K247 ; CapacityUnfocused := R148
	1047	[6114]	CLOSURE  	R148 185 ; R148 := closure(Function #186)
	1048	[6114]	MOVE     	R0 R19 ; R0 := R19
	1049	[6114]	MOVE     	R0 R147 ; R0 := R147
	1050	[6111]	SETGLOBAL	R148 K248 ; CapacityPressed := R148
	1051	[6117]	CLOSURE  	R148 186 ; R148 := closure(Function #187)
	1052	[6116]	SETGLOBAL	R148 K249 ; CapacityReleased := R148
	1053	[6123]	CLOSURE  	R148 187 ; R148 := closure(Function #188)
	1054	[6119]	SETGLOBAL	R148 K250 ; StatFocused := R148
	1055	[6127]	CLOSURE  	R148 188 ; R148 := closure(Function #189)
	1056	[6125]	SETGLOBAL	R148 K251 ; StatUnfocused := R148
	1057	[6135]	CLOSURE  	R148 189 ; R148 := closure(Function #190)
	1058	[6129]	SETGLOBAL	R148 K252 ; HideScreenForPlatPurchase := R148
	1059	[6141]	CLOSURE  	R148 190 ; R148 := closure(Function #191)
	1060	[6137]	SETGLOBAL	R148 K253 ; HandleCanBeClosed := R148
	1061	[6145]	CLOSURE  	R148 191 ; R148 := closure(Function #192)
	1062	[6143]	SETGLOBAL	R148 K254 ; onKeyDown_MENU_CLICK := R148
	1063	[6149]	CLOSURE  	R148 192 ; R148 := closure(Function #193)
	1064	[6147]	SETGLOBAL	R148 K255 ; onKeyUp_MENU_CLICK := R148
	1065	[6153]	CLOSURE  	R148 193 ; R148 := closure(Function #194)
	1066	[6151]	SETGLOBAL	R148 K256 ; onKeyDown_MENU_RIGHT_X := R148
	1067	[6157]	CLOSURE  	R148 194 ; R148 := closure(Function #195)
	1068	[6155]	SETGLOBAL	R148 K257 ; onKeyUp_MENU_RIGHT_X := R148
	1069	[6161]	CLOSURE  	R148 195 ; R148 := closure(Function #196)
	1070	[6161]	MOVE     	R0 R65 ; R0 := R65
	1071	[6159]	SETGLOBAL	R148 K258 ; ProfileReduxOpened := R148
	1072	[6161]	RETURN   	R0 1 ; return 


function #1 <?:232,234> (4 instructions, 16 bytes at 000002111B409D90)
0 params, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[233]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[233]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[233]	RETURN   	R0 2 ; return R0 
	4	[234]	RETURN   	R0 1 ; return 

function #2 <?:236,245> (18 instructions, 72 bytes at 000002111DB96A00)
1 param, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[237]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[237]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xc7fcada9]
	3	[237]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[237]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[238]	GETGLOBAL	R2 K2 ; R2 := 0xc8802016
	6	[238]	MOVE     	R3 R1 ; R3 := R1
	7	[238]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	8	[238]	JMP      	16 ; PC := 16
	9	[239]	TEST     	R0 0 ; if not R0 then PC := 14
	10	[239]	JMP      	14 ; PC := 14
	11	[240]	SELF     	R7 R6 K3 ; R8 := R6; R7 := R6[0x383d2e7d]
	12	[240]	CALL     	R7 2 1 ; R7(R8)
	13	[240]	JMP      	16 ; PC := 16
	14	[242]	SELF     	R7 R6 K4 ; R8 := R6; R7 := R6[0xf4e253b6]
	15	[242]	CALL     	R7 2 1 ; R7(R8)
	16	[238]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 9; R4 := R5 end
	17	[243]	JMP      	9 ; PC := 9
	18	[245]	RETURN   	R0 1 ; return 

function #3 <?:247,270> (64 instructions, 256 bytes at 000002112B33FB60)
2 params, 9 slots, 3 upvalues, 0 locals, 16 constants, 0 functions
	1	[248]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[248]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	3	[248]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[248]	TEST     	R2 0 ; if not R2 then PC := 11
	5	[248]	JMP      	11 ; PC := 11
	6	[249]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[249]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x2a1108a9]
	8	[249]	GETUPVAL 	R3 U1 ; R3 := U1
	9	[249]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[249]	SETGLOBALHASH	R2 K1 ; mShipAvatar := R2
	11	[251]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	12	[251]	GETGLOBAL	R3 K3 ; R3 := mShipSuit
	13	[251]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[251]	TEST     	R2 0 ; if not R2 then PC := 27
	15	[251]	JMP      	27 ; PC := 27
	16	[252]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	17	[252]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	18	[252]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[252]	TEST     	R2 1 ; if R2 then PC := 27
	20	[252]	JMP      	27 ; PC := 27
	21	[253]	GETGLOBAL	R2 K1 ; R2 := mShipAvatar
	22	[253]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xde321e6f]
	23	[253]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[253]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf7d48ee0]
	25	[253]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[253]	SETGLOBALHASH	R2 K3 ; mShipSuit := R2
	27	[257]	TEST     	R1 0 ; if not R1 then PC := 59
	28	[257]	JMP      	59 ; PC := 59
	29	[257]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	30	[257]	GETGLOBAL	R3 K6 ; R3 := mAvatar
	31	[257]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[257]	TEST     	R2 1 ; if R2 then PC := 59
	33	[257]	JMP      	59 ; PC := 59
	34	[258]	GETGLOBAL	R2 K7 ; R2 := 0x25d99d89
	35	[258]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x62c81b76]
	36	[258]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[259]	GETGLOBAL	R3 K6 ; R3 := mAvatar
	38	[260]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xf2deaf69]
	39	[260]	GETGLOBAL	R6 K10 ; R6 := gLotusOperatorAvatarType
	40	[260]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	41	[260]	TEST     	R4 0 ; if not R4 then PC := 53
	42	[260]	JMP      	53 ; PC := 53
	43	[261]	SELF     	R4 R3 K11 ; R5 := R3; R4 := R3[0x5b89142c]
	44	[261]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[262]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	46	[262]	MOVE     	R6 R4 ; R6 := R4
	47	[262]	CALL     	R5 2 2 ; R5 := R5(R6)
	48	[262]	TEST     	R5 1 ; if R5 then PC := 53
	49	[262]	JMP      	53 ; PC := 53
	50	[263]	SELF     	R5 R4 K12 ; R6 := R4; R5 := R4[0xa534c3ac]
	51	[263]	CALL     	R5 2 2 ; R5 := R5(R6)
	52	[263]	MOVE     	R3 R5 ; R3 := R5
	53	[266]	SELF     	R5 R3 K4 ; R6 := R3; R5 := R3[0xde321e6f]
	54	[266]	CALL     	R5 2 2 ; R5 := R5(R6)
	55	[266]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0x1d2dfe4a]
	56	[266]	MOVE     	R7 R2 ; R7 := R2
	57	[266]	LOADK    	R8 := 0.000000
	58	[266]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	59	[269]	GETUPVAL 	R5 U2 ; R5 := U2
	60	[269]	GETTABLE 	R5 R5 K15 ; R5 := R5[0x7bc6247f]
	61	[269]	GETGLOBAL	R6 K3 ; R6 := mShipSuit
	62	[269]	MOVE     	R7 R0 ; R7 := R0
	63	[269]	CALL     	R5 3 1 ; R5(R6,R7)
	64	[270]	RETURN   	R0 1 ; return 

function #4 <?:273,295> (38 instructions, 152 bytes at 0000021169987F30)
0 params, 9 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[274]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[274]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xb321d806]
	3	[274]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[274]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[274]	JMP      	7 ; PC := 7
	6	[275]	RETURN   	R0 1 ; return 
	7	[279]	LOADNIL  	R0 R1 ; R0 := R1 := nil
	8	[281]	GETGLOBAL	R2 K0 ; R2 := 0xe7f2b02f
	9	[281]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x6d0aa187]
	10	[281]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[282]	LOADK    	R3 := 1.000000
	12	[282]	LEN      	R4 R2 ; R4 := # R2
	13	[282]	LOADK    	R5 := 1.000000
	14	[282]	FORPREP  	R3 27 ; R3 -= R5; PC := 27
	15	[283]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	16	[283]	GETTABLE 	R7 R7 K3 ; R7 := R7["isHost"]
	17	[283]	TEST     	R7 0 ; if not R7 then PC := 27
	18	[283]	JMP      	27 ; PC := 27
	19	[284]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	20	[284]	GETTABLE 	R0 R7 K4 ; R0 := R7["loadout"]
	21	[285]	GETUPVAL 	R7 U0 ; R7 := U0
	22	[285]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x4356d102]
	23	[285]	MOVE     	R8 R0 ; R8 := R0
	24	[285]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[285]	MOVE     	R1 R7 ; R1 := R7
	26	[286]	JMP      	28 ; PC := 28
	27	[282]	FORLOOP  	R3 15 ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
	28	[290]	GETGLOBAL	R7 K6 ; R7 := _T
	29	[290]	GETTABLE 	R7 R7 K7 ; R7 := R7["DeferSquadCrewShipLoad"]
	30	[290]	TEST     	R7 0 ; if not R7 then PC := 35
	31	[290]	JMP      	35 ; PC := 35
	32	[291]	GETGLOBAL	R7 K6 ; R7 := _T
	33	[291]	SETTABLE 	R7 K8 R1 ; R7["DeferredSquadCrewShipLoadOut"] := R1
	34	[291]	JMP      	38 ; PC := 38
	35	[293]	GETUPVAL 	R7 U1 ; R7 := U1
	36	[293]	MOVE     	R8 R1 ; R8 := R1
	37	[293]	CALL     	R7 2 1 ; R7(R8)
	38	[295]	RETURN   	R0 1 ; return 

function #5 <?:297,315> (63 instructions, 252 bytes at 000002117FF368A0)
1 param, 13 slots, 0 upvalues, 0 locals, 20 constants, 0 functions
	1	[298]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[299]	TEST     	R0 0 ; if not R0 then PC := 30
	3	[299]	JMP      	30 ; PC := 30
	4	[300]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	5	[300]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xfb64e76c]
	6	[300]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[301]	SELF     	R3 R2 K2 ; R4 := R2; R3 := R2[0x62c81b76]
	8	[301]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[302]	GETTABLE 	R4 R3 K3 ; R4 := R3["mCrewShipLoadOut"]
	10	[303]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	11	[303]	MOVE     	R6 R4 ; R6 := R4
	12	[303]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[303]	TEST     	R5 1 ; if R5 then PC := 27
	14	[303]	JMP      	27 ; PC := 27
	15	[303]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	16	[303]	GETTABLE 	R6 R4 K5 ; R6 := R4["mShip"]
	17	[303]	CALL     	R5 2 2 ; R5 := R5(R6)
	18	[303]	TEST     	R5 1 ; if R5 then PC := 27
	19	[303]	JMP      	27 ; PC := 27
	20	[303]	GETTABLE 	R5 R4 K5 ; R5 := R4["mShip"]
	21	[303]	GETTABLE 	R5 R5 K6 ; R5 := R5["mItemId"]
	22	[303]	GETTABLE 	R5 R5 K7 ; R5 := R5["mId"]
	23	[303]	GETGLOBAL	R6 K8 ; R6 := 0x6c97a788
	24	[303]	GETTABLE 	R6 R6 K9 ; R6 := R6["InvalidItemID"]
	25	[303]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 28
	26	[303]	JMP      	28 ; PC := 28
	27	[303]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 28
	28	[303]	OP_LOADBOOL	R1 1 0 ; R1 := true
	29	[303]	JMP      	62 ; PC := 62
	30	[305]	GETGLOBAL	R5 K10 ; R5 := 0xe7f2b02f
	31	[305]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x6d0aa187]
	32	[305]	CALL     	R5 2 2 ; R5 := R5(R6)
	33	[306]	LOADK    	R6 := 1.000000
	34	[306]	LEN      	R7 R5 ; R7 := # R5
	35	[306]	LOADK    	R8 := 1.000000
	36	[306]	FORPREP  	R6 61 ; R6 -= R8; PC := 61
	37	[307]	GETTABLE 	R10 R5 R9 ; R10 := R5[R9]
	38	[307]	GETTABLE 	R10 R10 K12 ; R10 := R10["isHost"]
	39	[307]	TEST     	R10 0 ; if not R10 then PC := 61
	40	[307]	JMP      	61 ; PC := 61
	41	[308]	GETGLOBAL	R10 K13 ; R10 := cjson
	42	[308]	GETTABLE 	R10 R10 K14 ; R10 := R10[0x7ab914d8]
	43	[308]	GETTABLE 	R11 R5 R9 ; R11 := R5[R9]
	44	[308]	GETTABLE 	R11 R11 K15 ; R11 := R11["loadout"]
	45	[308]	CALL     	R10 2 2 ; R10 := R10(R11)
	46	[309]	GETGLOBAL	R11 K4 ; R11 := 0x7b998233
	47	[309]	GETTABLE 	R12 R10 K16 ; R12 := R10["CrewShipLoadOut"]
	48	[309]	CALL     	R11 2 2 ; R11 := R11(R12)
	49	[309]	TEST     	R11 1 ; if R11 then PC := 59
	50	[309]	JMP      	59 ; PC := 59
	51	[309]	GETTABLE 	R11 R10 K16 ; R11 := R10["CrewShipLoadOut"]
	52	[309]	GETTABLE 	R11 R11 K17 ; R11 := R11["Ship"]
	53	[309]	GETTABLE 	R11 R11 K18 ; R11 := R11["ItemId"]
	54	[309]	GETTABLE 	R11 R11 K19 ; R11 := R11["$oid"]
	55	[309]	GETGLOBAL	R12 K8 ; R12 := 0x6c97a788
	56	[309]	GETTABLE 	R12 R12 K9 ; R12 := R12["InvalidItemID"]
	57	[309]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 60
	58	[309]	JMP      	60 ; PC := 60
	59	[309]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 60
	60	[309]	OP_LOADBOOL	R1 1 0 ; R1 := true
	61	[306]	FORLOOP  	R6 37 ; R6 += R8; if R6 <= R7 then begin PC := 37; R9 := R6 end
	62	[314]	RETURN   	R1 2 ; return R1 
	63	[315]	RETURN   	R0 1 ; return 

function #6 <?:317,320> (13 instructions, 52 bytes at 000002111A716D40)
3 params, 8 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[318]	DIV      	R3 R2 R1 ; R3 := R2 / R1
	2	[318]	MUL      	R3 R0 R3 ; R3 := R0 * R3
	3	[319]	GETGLOBAL	R4 K0 ; R4 := 0x5bced4c4
	4	[319]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x99675e23]
	5	[319]	GETGLOBAL	R5 K0 ; R5 := 0x5bced4c4
	6	[319]	GETTABLE 	R5 R5 K2 ; R5 := R5[0xac1b386a]
	7	[319]	MOVE     	R6 R0 ; R6 := R0
	8	[319]	MUL      	R7 R0 K3 ; R7 := R0 * 0.500000
	9	[319]	ADD      	R7 R7 R3 ; R7 := R7 + R3
	10	[319]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	11	[319]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	12	[319]	RETURN   	R4 2 ; return R4 
	13	[320]	RETURN   	R0 1 ; return 

function #7 <?:322,383> (110 instructions, 440 bytes at 000002112966F1E0)
0 params, 18 slots, 7 upvalues, 0 locals, 26 constants, 0 functions
	1	[324]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[324]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x2a1108a9]
	3	[324]	GETUPVAL 	R1 U1 ; R1 := U1
	4	[324]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[327]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	6	[327]	GETGLOBAL	R2 K2 ; R2 := _T
	7	[327]	GETTABLE 	R2 R2 K3 ; R2 := R2["DojoMgr"]
	8	[327]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[327]	TEST     	R1 1 ; if R1 then PC := 67
	10	[327]	JMP      	67 ; PC := 67
	11	[328]	GETUPVAL 	R1 U2 ; R1 := U2
	12	[328]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa3d5b376]
	13	[328]	CALL     	R1 1 2 ; R1 := R1()
	14	[328]	TEST     	R1 1 ; if R1 then PC := 67
	15	[328]	JMP      	67 ; PC := 67
	16	[330]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	17	[330]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xfb669000]
	18	[330]	GETGLOBAL	R3 K7 ; R3 := gPlayerSpawnType
	19	[330]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	20	[331]	LOADK    	R2 := 1.000000
	21	[331]	LEN      	R3 R1 ; R3 := # R1
	22	[331]	LOADK    	R4 := 1.000000
	23	[331]	FORPREP  	R2 66 ; R2 -= R4; PC := 66
	24	[332]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	25	[333]	GETGLOBAL	R7 K2 ; R7 := _T
	26	[333]	GETTABLE 	R7 R7 K3 ; R7 := R7["DojoMgr"]
	27	[333]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0xd1964243]
	28	[333]	MOVE     	R9 R6 ; R9 := R6
	29	[333]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	30	[334]	GETGLOBAL	R8 K2 ; R8 := _T
	31	[334]	GETTABLE 	R8 R8 K3 ; R8 := R8["DojoMgr"]
	32	[334]	GETTABLE 	R8 R8 K9 ; R8 := R8["mDojo"]
	33	[334]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x5c69b193]
	34	[334]	MOVE     	R10 R7 ; R10 := R7
	35	[334]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	36	[336]	SELF     	R9 R8 K11 ; R10 := R8; R9 := R8[0x56c01834]
	37	[336]	CALL     	R9 2 2 ; R9 := R9(R10)
	38	[336]	TEST     	R9 0 ; if not R9 then PC := 66
	39	[336]	JMP      	66 ; PC := 66
	40	[336]	SELF     	R9 R8 K12 ; R10 := R8; R9 := R8[0x15d63de6]
	41	[336]	CALL     	R9 2 2 ; R9 := R9(R10)
	42	[336]	TEST     	R9 0 ; if not R9 then PC := 66
	43	[336]	JMP      	66 ; PC := 66
	44	[337]	GETGLOBAL	R9 K5 ; R9 := 0x89326c93
	45	[337]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0x78298275]
	46	[337]	CALL     	R9 2 2 ; R9 := R9(R10)
	47	[337]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0x589ef1c1]
	48	[337]	SELF     	R11 R6 K15 ; R12 := R6; R11 := R6[0xd1586535]
	49	[337]	CALL     	R11 2 2 ; R11 := R11(R12)
	50	[337]	SELF     	R12 R6 K16 ; R13 := R6; R12 := R6[0xcb3851b8]
	51	[337]	CALL     	R12 2 0 ; R12,... := R12(R13)
	52	[337]	CALL     	R9 0 1 ; R9(R10,...)
	53	[339]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	54	[339]	MOVE     	R10 R0 ; R10 := R0
	55	[339]	CALL     	R9 2 2 ; R9 := R9(R10)
	56	[339]	TEST     	R9 1 ; if R9 then PC := 61
	57	[339]	JMP      	61 ; PC := 61
	58	[340]	SELF     	R9 R0 K17 ; R10 := R0; R9 := R0[0x768274d6]
	59	[340]	OP_LOADBOOL	R11 0 0 ; R11 := false
	60	[340]	CALL     	R9 3 1 ; R9(R10,R11)
	61	[343]	GETUPVAL 	R9 U0 ; R9 := U0
	62	[343]	GETTABLE 	R9 R9 K18 ; R9 := R9[0xe0cba3ca]
	63	[343]	LOADK    	R10 K19 ; R10 := "/Lotus/Language/Railjack/DryDockNotFinished"
	64	[343]	CALL     	R9 2 1 ; R9(R10)
	65	[345]	RETURN   	R0 1 ; return 
	66	[331]	FORLOOP  	R2 24 ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
	67	[352]	GETGLOBAL	R9 K20 ; R9 := 0xe7f2b02f
	68	[352]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0xb321d806]
	69	[352]	CALL     	R9 2 2 ; R9 := R9(R10)
	70	[360]	GETUPVAL 	R10 U3 ; R10 := U3
	71	[360]	MOVE     	R11 R9 ; R11 := R9
	72	[360]	CALL     	R10 2 2 ; R10 := R10(R11)
	73	[361]	TEST     	R10 1 ; if R10 then PC := 97
	74	[361]	JMP      	97 ; PC := 97
	75	[362]	GETGLOBAL	R11 K5 ; R11 := 0x89326c93
	76	[362]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x78298275]
	77	[362]	CALL     	R11 2 2 ; R11 := R11(R12)
	78	[363]	GETGLOBAL	R12 K5 ; R12 := 0x89326c93
	79	[363]	SELF     	R12 R12 K22 ; R13 := R12; R12 := R12[0x46a0ebf5]
	80	[363]	GETUPVAL 	R14 U4 ; R14 := U4
	81	[363]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	82	[364]	SELF     	R13 R11 K14 ; R14 := R11; R13 := R11[0x589ef1c1]
	83	[364]	SELF     	R15 R12 K15 ; R16 := R12; R15 := R12[0xd1586535]
	84	[364]	CALL     	R15 2 2 ; R15 := R15(R16)
	85	[364]	SELF     	R16 R12 K16 ; R17 := R12; R16 := R12[0xcb3851b8]
	86	[364]	CALL     	R16 2 0 ; R16,... := R16(R17)
	87	[364]	CALL     	R13 0 1 ; R13(R14,...)
	88	[366]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	89	[366]	MOVE     	R14 R0 ; R14 := R0
	90	[366]	CALL     	R13 2 2 ; R13 := R13(R14)
	91	[366]	TEST     	R13 1 ; if R13 then PC := 96
	92	[366]	JMP      	96 ; PC := 96
	93	[367]	SELF     	R13 R0 K17 ; R14 := R0; R13 := R0[0x768274d6]
	94	[367]	OP_LOADBOOL	R15 0 0 ; R15 := false
	95	[367]	CALL     	R13 3 1 ; R13(R14,R15)
	96	[369]	RETURN   	R0 1 ; return 
	97	[374]	TEST     	R9 0 ; if not R9 then PC := 108
	98	[374]	JMP      	108 ; PC := 108
	99	[375]	GETGLOBAL	R13 K5 ; R13 := 0x89326c93
	100	[375]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0xfb64e76c]
	101	[375]	CALL     	R13 2 2 ; R13 := R13(R14)
	102	[376]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0x62c81b76]
	103	[376]	CALL     	R14 2 2 ; R14 := R14(R15)
	104	[377]	GETTABLE 	R15 R14 K25 ; R15 := R14["mCrewShipLoadOut"]
	105	[378]	GETUPVAL 	R16 U5 ; R16 := U5
	106	[378]	MOVE     	R17 R15 ; R17 := R15
	107	[378]	CALL     	R16 2 1 ; R16(R17)
	108	[382]	GETUPVAL 	R16 U6 ; R16 := U6
	109	[382]	CALL     	R16 1 1 ; R16()
	110	[383]	RETURN   	R0 1 ; return 

function #8 <?:385,394> (18 instructions, 72 bytes at 0000021114087030)
0 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[386]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[386]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6d0aa187]
	3	[386]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[387]	LOADK    	R1 := 1.000000
	5	[387]	LEN      	R2 R0 ; R2 := # R0
	6	[387]	LOADK    	R3 := 1.000000
	7	[387]	FORPREP  	R1 15 ; R1 -= R3; PC := 15
	8	[388]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	9	[388]	GETTABLE 	R5 R5 K2 ; R5 := R5["isHost"]
	10	[388]	TEST     	R5 0 ; if not R5 then PC := 15
	11	[388]	JMP      	15 ; PC := 15
	12	[389]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	13	[389]	GETTABLE 	R5 R5 K3 ; R5 := R5["hubLevel"]
	14	[389]	RETURN   	R5 2 ; return R5 
	15	[387]	FORLOOP  	R1 8 ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
	16	[393]	LOADK    	R5 K4 ; R5 := ""
	17	[393]	RETURN   	R5 2 ; return R5 
	18	[394]	RETURN   	R0 1 ; return 

function #9 <?:397,410> (27 instructions, 108 bytes at 000002111912DCA0)
0 params, 4 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[398]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[398]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xb321d806]
	3	[398]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[398]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[398]	JMP      	8 ; PC := 8
	6	[399]	OP_LOADBOOL	R0 1 0 ; R0 := true
	7	[399]	RETURN   	R0 2 ; return R0 
	8	[402]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[402]	CALL     	R0 1 2 ; R0 := R0()
	10	[404]	GETGLOBAL	R1 K2 ; R1 := 0x7f5022cf
	11	[404]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa5c556b9]
	12	[404]	MOVE     	R2 R0 ; R2 := R0
	13	[404]	LOADK    	R3 K4 ; R3 := "DojoHUB"
	14	[404]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[404]	TEST     	R1 0 ; if not R1 then PC := 19
	16	[404]	JMP      	19 ; PC := 19
	17	[405]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[405]	RETURN   	R1 2 ; return R1 
	19	[408]	GETGLOBAL	R1 K0 ; R1 := 0xe7f2b02f
	20	[408]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x199919fe]
	21	[408]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[409]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 25
	23	[409]	JMP      	25 ; PC := 25
	24	[409]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 25
	25	[409]	OP_LOADBOOL	R2 1 0 ; R2 := true
	26	[409]	RETURN   	R2 2 ; return R2 
	27	[410]	RETURN   	R0 1 ; return 

function #10 <?:413,483> (171 instructions, 684 bytes at 00000211261FBDD0)
2 params, 29 slots, 10 upvalues, 0 locals, 44 constants, 0 functions
	1	[414]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[414]	LOADK    	R3 K1 ; R3 := "ShipReady"
	3	[414]	CALL     	R2 2 1 ; R2(R3)
	4	[415]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	5	[415]	MOVE     	R3 R0 ; R3 := R0
	6	[415]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[415]	TEST     	R2 1 ; if R2 then PC := 131
	8	[415]	JMP      	131 ; PC := 131
	9	[416]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x5163741e]
	10	[416]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[417]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	12	[417]	MOVE     	R4 R2 ; R4 := R2
	13	[417]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[417]	TEST     	R3 1 ; if R3 then PC := 127
	15	[417]	JMP      	127 ; PC := 127
	16	[418]	GETGLOBAL	R3 K0 ; R3 := 0x3d106989
	17	[418]	LOADK    	R4 K4 ; R4 := "Has ship and owner"
	18	[418]	CALL     	R3 2 1 ; R3(R4)
	19	[420]	GETGLOBAL	R3 K5 ; R3 := ZERO_VECTOR
	20	[421]	GETGLOBAL	R4 K6 ; R4 := ZERO_ROTATION
	21	[422]	GETUPVAL 	R5 U0 ; R5 := U0
	22	[422]	GETTABLE 	R5 R5 K7 ; R5 := R5[0x2a1108a9]
	23	[422]	GETUPVAL 	R6 U1 ; R6 := U1
	24	[422]	GETUPVAL 	R7 U2 ; R7 := U2
	25	[422]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	26	[423]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	27	[423]	MOVE     	R7 R5 ; R7 := R5
	28	[423]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[423]	TEST     	R6 1 ; if R6 then PC := 37
	30	[423]	JMP      	37 ; PC := 37
	31	[424]	SELF     	R6 R5 K8 ; R7 := R5; R6 := R5[0xd1586535]
	32	[424]	CALL     	R6 2 2 ; R6 := R6(R7)
	33	[424]	MOVE     	R3 R6 ; R3 := R6
	34	[425]	SELF     	R6 R5 K9 ; R7 := R5; R6 := R5[0xcb3851b8]
	35	[425]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[425]	MOVE     	R4 R6 ; R4 := R6
	37	[428]	TEST     	R1 1 ; if R1 then PC := 51
	38	[428]	JMP      	51 ; PC := 51
	39	[428]	GETGLOBAL	R6 K10 ; R6 := 0x9b56dc4a
	40	[428]	TEST     	R6 0 ; if not R6 then PC := 51
	41	[428]	JMP      	51 ; PC := 51
	42	[429]	SELF     	R6 R2 K11 ; R7 := R2; R6 := R2[0x589ef1c1]
	43	[429]	MOVE     	R8 R3 ; R8 := R3
	44	[429]	MOVE     	R9 R4 ; R9 := R4
	45	[429]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	46	[430]	SELF     	R6 R2 K12 ; R7 := R2; R6 := R2[0xb2532845]
	47	[430]	GETGLOBAL	R8 K13 ; R8 := 0x0469f296
	48	[430]	LOADK    	R9 K14 ; R9 := "Dock"
	49	[430]	CALL     	R8 2 0 ; R8,... := R8(R9)
	50	[430]	CALL     	R6 0 1 ; R6(R7,...)
	51	[433]	GETUPVAL 	R6 U3 ; R6 := U3
	52	[433]	CALL     	R6 1 2 ; R6 := R6()
	53	[434]	GETGLOBAL	R7 K10 ; R7 := 0x9b56dc4a
	54	[434]	TEST     	R7 0 ; if not R7 then PC := 58
	55	[434]	JMP      	58 ; PC := 58
	56	[434]	TEST     	R6 1 ; if R6 then PC := 61
	57	[434]	JMP      	61 ; PC := 61
	58	[435]	SELF     	R7 R2 K15 ; R8 := R2; R7 := R2[0x768274d6]
	59	[435]	OP_LOADBOOL	R9 0 0 ; R9 := false
	60	[435]	CALL     	R7 3 1 ; R7(R8,R9)
	61	[438]	SELF     	R7 R2 K16 ; R8 := R2; R7 := R2[0x26d544fc]
	62	[438]	GETGLOBAL	R9 K13 ; R9 := 0x0469f296
	63	[438]	LOADK    	R10 K17 ; R10 := "RailJack"
	64	[438]	CALL     	R9 2 0 ; R9,... := R9(R10)
	65	[438]	CALL     	R7 0 1 ; R7(R8,...)
	66	[440]	GETGLOBAL	R7 K18 ; R7 := 0x89326c93
	67	[440]	SELF     	R7 R7 K19 ; R8 := R7; R7 := R7[0xc7fcada9]
	68	[440]	GETUPVAL 	R9 U4 ; R9 := U4
	69	[440]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	70	[441]	GETGLOBAL	R8 K20 ; R8 := 0xc8802016
	71	[441]	MOVE     	R9 R7 ; R9 := R7
	72	[441]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	73	[441]	JMP      	76 ; PC := 76
	74	[442]	SELF     	R13 R12 K21 ; R14 := R12; R13 := R12[0x383d2e7d]
	75	[442]	CALL     	R13 2 1 ; R13(R14)
	76	[441]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 74; R10 := R11 end
	77	[442]	JMP      	74 ; PC := 74
	78	[445]	TEST     	R6 0 ; if not R6 then PC := 83
	79	[445]	JMP      	83 ; PC := 83
	80	[446]	GETUPVAL 	R13 U5 ; R13 := U5
	81	[446]	OP_LOADBOOL	R14 1 0 ; R14 := true
	82	[446]	CALL     	R13 2 1 ; R13(R14)
	83	[449]	GETGLOBAL	R13 K18 ; R13 := 0x89326c93
	84	[449]	SELF     	R13 R13 K19 ; R14 := R13; R13 := R13[0xc7fcada9]
	85	[449]	GETUPVAL 	R15 U6 ; R15 := U6
	86	[449]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	87	[450]	GETGLOBAL	R14 K20 ; R14 := 0xc8802016
	88	[450]	MOVE     	R15 R13 ; R15 := R13
	89	[450]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	90	[450]	JMP      	95 ; PC := 95
	91	[451]	SELF     	R19 R18 K15 ; R20 := R18; R19 := R18[0x768274d6]
	92	[451]	OP_LOADBOOL	R21 0 0 ; R21 := false
	93	[451]	OP_LOADBOOL	R22 0 0 ; R22 := false
	94	[451]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	95	[450]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 91; R16 := R17 end
	96	[451]	JMP      	91 ; PC := 91
	97	[454]	SELF     	R19 R2 K22 ; R20 := R2; R19 := R2[0xb6fd75db]
	98	[454]	GETUPVAL 	R21 U7 ; R21 := U7
	99	[454]	CALL     	R19 3 1 ; R19(R20,R21)
	100	[455]	SELF     	R19 R2 K23 ; R20 := R2; R19 := R2[0xd5f7912b]
	101	[455]	GETGLOBAL	R21 K13 ; R21 := 0x0469f296
	102	[455]	LOADK    	R22 K24 ; R22 := "UpdateLocalCrewShip"
	103	[455]	CALL     	R21 2 2 ; R21 := R21(R22)
	104	[455]	OP_LOADBOOL	R22 0 0 ; R22 := false
	105	[455]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	106	[457]	GETGLOBAL	R19 K18 ; R19 := 0x89326c93
	107	[457]	SELF     	R19 R19 K19 ; R20 := R19; R19 := R19[0xc7fcada9]
	108	[457]	GETUPVAL 	R21 U8 ; R21 := U8
	109	[457]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	110	[458]	GETGLOBAL	R20 K20 ; R20 := 0xc8802016
	111	[458]	MOVE     	R21 R19 ; R21 := R19
	112	[458]	CALL     	R20 2 4 ; R20,R21,R22 := R20(R21)
	113	[458]	JMP      	124 ; PC := 124
	114	[459]	GETGLOBAL	R25 K0 ; R25 := 0x3d106989
	115	[459]	LOADK    	R26 K25 ; R26 := "Running post-init script: "
	116	[459]	GETGLOBAL	R27 K26 ; R27 := 0x64fb1586
	117	[459]	MOVE     	R28 R23 ; R28 := R23
	118	[459]	CALL     	R27 2 2 ; R27 := R27(R28)
	119	[459]	CONCAT   	R26 R26 R27 ; R26 := R26 .. R27
	120	[459]	CALL     	R25 2 1 ; R25(R26)
	121	[460]	SELF     	R25 R24 K27 ; R26 := R24; R25 := R24[0x8eb2112d]
	122	[460]	LOADK    	R27 K28 ; R27 := "Execute"
	123	[460]	CALL     	R25 3 1 ; R25(R26,R27)
	124	[458]	TFORLOOP 	R20 2 ; R23,R24 := R20(R21,R22); if R23 ~= nil then begin PC = 114; R22 := R23 end
	125	[460]	JMP      	114 ; PC := 114
	126	[461]	JMP      	134 ; PC := 134
	127	[463]	GETGLOBAL	R25 K0 ; R25 := 0x3d106989
	128	[463]	LOADK    	R26 K29 ; R26 := "Has ship, but no owner"
	129	[463]	CALL     	R25 2 1 ; R25(R26)
	130	[464]	JMP      	134 ; PC := 134
	131	[466]	GETGLOBAL	R25 K0 ; R25 := 0x3d106989
	132	[466]	LOADK    	R26 K30 ; R26 := "No ship"
	133	[466]	CALL     	R25 2 1 ; R25(R26)
	134	[469]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	135	[469]	SELF     	R25 R25 K32 ; R26 := R25; R25 := R25[0xb321d806]
	136	[469]	CALL     	R25 2 2 ; R25 := R25(R26)
	137	[469]	TEST     	R25 1 ; if R25 then PC := 146
	138	[469]	JMP      	146 ; PC := 146
	139	[470]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	140	[470]	SELF     	R25 R25 K33 ; R26 := R25; R25 := R25[0xb5cc2f76]
	141	[470]	GETGLOBAL	R27 K13 ; R27 := 0x0469f296
	142	[470]	LOADK    	R28 K34 ; R28 := "RJLoadout"
	143	[470]	CALL     	R27 2 2 ; R27 := R27(R28)
	144	[470]	GETUPVAL 	R28 U9 ; R28 := U9
	145	[470]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	146	[473]	GETGLOBAL	R25 K35 ; R25 := _T
	147	[473]	SETTABLE 	R25 K36 R0 ; R25["CrewShip"] := R0
	148	[477]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	149	[477]	SELF     	R25 R25 K32 ; R26 := R25; R25 := R25[0xb321d806]
	150	[477]	CALL     	R25 2 2 ; R25 := R25(R26)
	151	[477]	TEST     	R25 1 ; if R25 then PC := 171
	152	[477]	JMP      	171 ; PC := 171
	153	[478]	GETGLOBAL	R25 K31 ; R25 := 0xe7f2b02f
	154	[478]	SELF     	R25 R25 K37 ; R26 := R25; R25 := R25[0x6923a4fa]
	155	[478]	CALL     	R25 2 2 ; R25 := R25(R26)
	156	[479]	EQ       	1 R25 K38 ; if R25 == "" then PC := 167
	157	[479]	JMP      	167 ; PC := 167
	158	[479]	TEST     	R1 0 ; if not R1 then PC := 171
	159	[479]	JMP      	171 ; PC := 171
	160	[479]	GETGLOBAL	R26 K39 ; R26 := 0x7f5022cf
	161	[479]	GETTABLE 	R26 R26 K40 ; R26 := R26[0xa5c556b9]
	162	[479]	MOVE     	R27 R25 ; R27 := R25
	163	[479]	LOADK    	R28 K41 ; R28 := "ScenarioEventHub5_HUB"
	164	[479]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	165	[479]	EQ       	0 R26 K42 ; if R26 ~= nil then PC := 171
	166	[479]	JMP      	171 ; PC := 171
	167	[480]	GETGLOBAL	R26 K31 ; R26 := 0xe7f2b02f
	168	[480]	SELF     	R26 R26 K43 ; R27 := R26; R26 := R26[0xf9744f7d]
	169	[480]	OP_LOADBOOL	R28 1 0 ; R28 := true
	170	[480]	CALL     	R26 3 1 ; R26(R27,R28)
	171	[483]	RETURN   	R0 1 ; return 

function #11 <?:485,487> (4 instructions, 16 bytes at 0000021126A6CC30)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[486]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[486]	MOVE     	R2 R0 ; R2 := R0
	3	[486]	CALL     	R1 2 1 ; R1(R2)
	4	[487]	RETURN   	R0 1 ; return 

function #12 <?:489,494> (19 instructions, 76 bytes at 0000021126A6CCC0)
0 params, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[490]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[490]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[490]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	4	[490]	GETTABLE 	R2 R2 K3 ; R2 := R2["UIMovie_SolarMap"]
	5	[490]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[491]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	7	[491]	MOVE     	R2 R0 ; R2 := R0
	8	[491]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[491]	TEST     	R1 1 ; if R1 then PC := 19
	10	[491]	JMP      	19 ; PC := 19
	11	[492]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0xf56f3887]
	12	[492]	LOADK    	R3 K6 ; R3 := "TransitionOut"
	13	[492]	NEWTABLE 	R4 3 0 ; R4 := {}
	14	[492]	LOADK    	R5 K7 ; R5 := "true"
	15	[492]	LOADK    	R6 K7 ; R6 := "true"
	16	[492]	LOADK    	R7 K7 ; R7 := "true"
	17	[492]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	18	[492]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	19	[494]	RETURN   	R0 1 ; return 

function #13 <?:496,600> (238 instructions, 952 bytes at 0000021127D06560)
1 param, 26 slots, 7 upvalues, 0 locals, 43 constants, 0 functions
	1	[498]	GETGLOBAL	R1 K0 ; R1 := 0xe7f2b02f
	2	[498]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xb321d806]
	3	[498]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[499]	OP_LOADBOOL	R2 0 0 ; R2 := false
	5	[500]	OP_LOADBOOL	R3 0 0 ; R3 := false
	6	[501]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[501]	CALL     	R4 1 2 ; R4 := R4()
	8	[504]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	9	[504]	MOVE     	R6 R0 ; R6 := R0
	10	[504]	CALL     	R5 2 2 ; R5 := R5(R6)
	11	[504]	TEST     	R5 1 ; if R5 then PC := 238
	12	[504]	JMP      	238 ; PC := 238
	13	[504]	GETGLOBAL	R5 K3 ; R5 := _T
	14	[504]	GETTABLE 	R5 R5 K4 ; R5 := R5["Railjack_FromDojo"]
	15	[504]	TEST     	R5 1 ; if R5 then PC := 238
	16	[504]	JMP      	238 ; PC := 238
	17	[506]	GETGLOBAL	R5 K0 ; R5 := 0xe7f2b02f
	18	[506]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0xb321d806]
	19	[506]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[507]	EQ       	1 R1 R5 ; if R1 == R5 then PC := 28
	21	[507]	JMP      	28 ; PC := 28
	22	[508]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0x768274d6]
	23	[508]	OP_LOADBOOL	R8 0 0 ; R8 := false
	24	[508]	CALL     	R6 3 1 ; R6(R7,R8)
	25	[509]	OP_LOADBOOL	R2 1 0 ; R2 := true
	26	[510]	NOT      	R3 R5 ; R3 := not R5
	27	[510]	JMP      	54 ; PC := 54
	28	[511]	GETGLOBAL	R6 K0 ; R6 := 0xe7f2b02f
	29	[511]	SELF     	R6 R6 K1 ; R7 := R6; R6 := R6[0xb321d806]
	30	[511]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[511]	TEST     	R6 1 ; if R6 then PC := 54
	32	[511]	JMP      	54 ; PC := 54
	33	[511]	GETGLOBAL	R6 K3 ; R6 := _T
	34	[511]	GETTABLE 	R6 R6 K4 ; R6 := R6["Railjack_FromDojo"]
	35	[511]	TEST     	R6 1 ; if R6 then PC := 54
	36	[511]	JMP      	54 ; PC := 54
	37	[512]	GETUPVAL 	R6 U0 ; R6 := U0
	38	[512]	CALL     	R6 1 2 ; R6 := R6()
	39	[513]	EQ       	1 R4 R6 ; if R4 == R6 then PC := 54
	40	[513]	JMP      	54 ; PC := 54
	41	[514]	GETGLOBAL	R7 K6 ; R7 := 0x3d106989
	42	[514]	LOADK    	R8 K7 ; R8 := "Host hub level changed: "
	43	[514]	GETGLOBAL	R9 K8 ; R9 := 0x64fb1586
	44	[514]	MOVE     	R10 R4 ; R10 := R4
	45	[514]	CALL     	R9 2 2 ; R9 := R9(R10)
	46	[514]	LOADK    	R10 K9 ; R10 := ", new: "
	47	[514]	GETGLOBAL	R11 K8 ; R11 := 0x64fb1586
	48	[514]	MOVE     	R12 R6 ; R12 := R6
	49	[514]	CALL     	R11 2 2 ; R11 := R11(R12)
	50	[514]	CONCAT   	R8 R8 R11 ; R8 := R8 .. R9 .. R10 .. R11
	51	[514]	CALL     	R7 2 1 ; R7(R8)
	52	[515]	OP_LOADBOOL	R2 1 0 ; R2 := true
	53	[517]	MOVE     	R4 R6 ; R4 := R6
	54	[521]	MOVE     	R1 R5 ; R1 := R5
	55	[523]	TEST     	R2 0 ; if not R2 then PC := 210
	56	[523]	JMP      	210 ; PC := 210
	57	[525]	OP_LOADBOOL	R7 0 0 ; R7 := false
	58	[526]	GETGLOBAL	R8 K10 ; R8 := 0x89326c93
	59	[526]	SELF     	R8 R8 K11 ; R9 := R8; R8 := R8[0xfb64e76c]
	60	[526]	CALL     	R8 2 2 ; R8 := R8(R9)
	61	[527]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	62	[527]	MOVE     	R10 R8 ; R10 := R8
	63	[527]	CALL     	R9 2 2 ; R9 := R9(R10)
	64	[527]	TEST     	R9 0 ; if not R9 then PC := 74
	65	[527]	JMP      	74 ; PC := 74
	66	[528]	GETGLOBAL	R9 K12 ; R9 := 0xcbd666e1
	67	[528]	LOADK    	R10 := 0.000000
	68	[528]	CALL     	R9 2 1 ; R9(R10)
	69	[529]	GETGLOBAL	R9 K10 ; R9 := 0x89326c93
	70	[529]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0xfb64e76c]
	71	[529]	CALL     	R9 2 2 ; R9 := R9(R10)
	72	[529]	MOVE     	R8 R9 ; R8 := R9
	73	[529]	JMP      	61 ; PC := 61
	74	[532]	TEST     	R5 0 ; if not R5 then PC := 103
	75	[532]	JMP      	103 ; PC := 103
	76	[533]	OP_LOADBOOL	R2 0 0 ; R2 := false
	77	[535]	SELF     	R9 R8 K13 ; R10 := R8; R9 := R8[0x62c81b76]
	78	[535]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[536]	GETTABLE 	R10 R9 K14 ; R10 := R9["mCrewShipLoadOut"]
	80	[537]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	81	[537]	MOVE     	R12 R10 ; R12 := R10
	82	[537]	CALL     	R11 2 2 ; R11 := R11(R12)
	83	[537]	TEST     	R11 1 ; if R11 then PC := 97
	84	[537]	JMP      	97 ; PC := 97
	85	[537]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	86	[537]	GETTABLE 	R12 R10 K15 ; R12 := R10["mShip"]
	87	[537]	CALL     	R11 2 2 ; R11 := R11(R12)
	88	[537]	TEST     	R11 1 ; if R11 then PC := 97
	89	[537]	JMP      	97 ; PC := 97
	90	[537]	GETTABLE 	R11 R10 K15 ; R11 := R10["mShip"]
	91	[537]	GETTABLE 	R11 R11 K16 ; R11 := R11["mItemId"]
	92	[537]	GETTABLE 	R11 R11 K17 ; R11 := R11["mId"]
	93	[537]	GETGLOBAL	R12 K18 ; R12 := 0x6c97a788
	94	[537]	GETTABLE 	R12 R12 K19 ; R12 := R12["InvalidItemID"]
	95	[537]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 98
	96	[537]	JMP      	98 ; PC := 98
	97	[537]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 98
	98	[537]	OP_LOADBOOL	R7 1 0 ; R7 := true
	99	[538]	GETUPVAL 	R11 U1 ; R11 := U1
	100	[538]	MOVE     	R12 R10 ; R12 := R10
	101	[538]	CALL     	R11 2 1 ; R11(R12)
	102	[538]	JMP      	147 ; PC := 147
	103	[540]	GETGLOBAL	R11 K0 ; R11 := 0xe7f2b02f
	104	[540]	SELF     	R11 R11 K20 ; R12 := R11; R11 := R11[0x6d0aa187]
	105	[540]	CALL     	R11 2 2 ; R11 := R11(R12)
	106	[541]	LOADK    	R12 := 1.000000
	107	[541]	LEN      	R13 R11 ; R13 := # R11
	108	[541]	LOADK    	R14 := 1.000000
	109	[541]	FORPREP  	R12 135 ; R12 -= R14; PC := 135
	110	[542]	GETTABLE 	R16 R11 R15 ; R16 := R11[R15]
	111	[542]	GETTABLE 	R16 R16 K21 ; R16 := R16["isHost"]
	112	[542]	TEST     	R16 0 ; if not R16 then PC := 135
	113	[542]	JMP      	135 ; PC := 135
	114	[543]	OP_LOADBOOL	R2 0 0 ; R2 := false
	115	[544]	GETGLOBAL	R16 K22 ; R16 := cjson
	116	[544]	GETTABLE 	R16 R16 K23 ; R16 := R16[0x7ab914d8]
	117	[544]	GETTABLE 	R17 R11 R15 ; R17 := R11[R15]
	118	[544]	GETTABLE 	R17 R17 K24 ; R17 := R17["loadout"]
	119	[544]	CALL     	R16 2 2 ; R16 := R16(R17)
	120	[545]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	121	[545]	GETTABLE 	R18 R16 K25 ; R18 := R16["CrewShipLoadOut"]
	122	[545]	CALL     	R17 2 2 ; R17 := R17(R18)
	123	[545]	TEST     	R17 1 ; if R17 then PC := 133
	124	[545]	JMP      	133 ; PC := 133
	125	[545]	GETTABLE 	R17 R16 K25 ; R17 := R16["CrewShipLoadOut"]
	126	[545]	GETTABLE 	R17 R17 K26 ; R17 := R17["Ship"]
	127	[545]	GETTABLE 	R17 R17 K27 ; R17 := R17["ItemId"]
	128	[545]	GETTABLE 	R17 R17 K28 ; R17 := R17["$oid"]
	129	[545]	GETGLOBAL	R18 K18 ; R18 := 0x6c97a788
	130	[545]	GETTABLE 	R18 R18 K19 ; R18 := R18["InvalidItemID"]
	131	[545]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 134
	132	[545]	JMP      	134 ; PC := 134
	133	[545]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 134
	134	[545]	OP_LOADBOOL	R7 1 0 ; R7 := true
	135	[541]	FORLOOP  	R12 110 ; R12 += R14; if R12 <= R13 then begin PC := 110; R15 := R12 end
	136	[549]	TEST     	R2 1 ; if R2 then PC := 147
	137	[549]	JMP      	147 ; PC := 147
	138	[550]	GETGLOBAL	R17 K0 ; R17 := 0xe7f2b02f
	139	[550]	SELF     	R17 R17 K29 ; R18 := R17; R17 := R17[0xb5cc2f76]
	140	[550]	GETGLOBAL	R19 K30 ; R19 := 0x0469f296
	141	[550]	LOADK    	R20 K31 ; R20 := "RJLoadout"
	142	[550]	CALL     	R19 2 2 ; R19 := R19(R20)
	143	[550]	GETUPVAL 	R20 U2 ; R20 := U2
	144	[550]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	145	[551]	GETUPVAL 	R17 U2 ; R17 := U2
	146	[551]	CALL     	R17 1 1 ; R17()
	147	[555]	TEST     	R2 1 ; if R2 then PC := 210
	148	[555]	JMP      	210 ; PC := 210
	149	[557]	TEST     	R1 1 ; if R1 then PC := 156
	150	[557]	JMP      	156 ; PC := 156
	151	[558]	GETGLOBAL	R17 K6 ; R17 := 0x3d106989
	152	[558]	LOADK    	R18 K32 ; R18 := "Squad client, closing solar map"
	153	[558]	CALL     	R17 2 1 ; R17(R18)
	154	[559]	GETUPVAL 	R17 U3 ; R17 := U3
	155	[559]	CALL     	R17 1 1 ; R17()
	156	[562]	TEST     	R7 0 ; if not R7 then PC := 169
	157	[562]	JMP      	169 ; PC := 169
	158	[562]	GETUPVAL 	R17 U4 ; R17 := U4
	159	[562]	CALL     	R17 1 2 ; R17 := R17()
	160	[562]	TEST     	R17 0 ; if not R17 then PC := 169
	161	[562]	JMP      	169 ; PC := 169
	162	[563]	SELF     	R17 R0 K5 ; R18 := R0; R17 := R0[0x768274d6]
	163	[563]	OP_LOADBOOL	R19 1 0 ; R19 := true
	164	[563]	CALL     	R17 3 1 ; R17(R18,R19)
	165	[564]	GETUPVAL 	R17 U5 ; R17 := U5
	166	[564]	OP_LOADBOOL	R18 1 0 ; R18 := true
	167	[564]	CALL     	R17 2 1 ; R17(R18)
	168	[564]	JMP      	210 ; PC := 210
	169	[567]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	170	[567]	SELF     	R18 R8 K33 ; R19 := R8; R18 := R8[0xbb610e5b]
	171	[567]	CALL     	R18 2 0 ; R18,... := R18(R19)
	172	[567]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	173	[567]	TEST     	R17 1 ; if R17 then PC := 202
	174	[567]	JMP      	202 ; PC := 202
	175	[567]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	176	[567]	SELF     	R18 R8 K33 ; R19 := R8; R18 := R8[0xbb610e5b]
	177	[567]	CALL     	R18 2 2 ; R18 := R18(R19)
	178	[567]	SELF     	R18 R18 K34 ; R19 := R18; R18 := R18[0xde321e6f]
	179	[567]	CALL     	R18 2 2 ; R18 := R18(R19)
	180	[567]	SELF     	R18 R18 K35 ; R19 := R18; R18 := R18[0x33c6e9d3]
	181	[567]	CALL     	R18 2 0 ; R18,... := R18(R19)
	182	[567]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	183	[567]	TEST     	R17 1 ; if R17 then PC := 202
	184	[567]	JMP      	202 ; PC := 202
	185	[568]	GETGLOBAL	R17 K10 ; R17 := 0x89326c93
	186	[568]	SELF     	R17 R17 K36 ; R18 := R17; R17 := R17[0x46a0ebf5]
	187	[568]	GETUPVAL 	R19 U6 ; R19 := U6
	188	[568]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	189	[569]	GETGLOBAL	R18 K2 ; R18 := 0x7b998233
	190	[569]	MOVE     	R19 R17 ; R19 := R17
	191	[569]	CALL     	R18 2 2 ; R18 := R18(R19)
	192	[569]	TEST     	R18 1 ; if R18 then PC := 202
	193	[569]	JMP      	202 ; PC := 202
	194	[570]	SELF     	R18 R8 K33 ; R19 := R8; R18 := R8[0xbb610e5b]
	195	[570]	CALL     	R18 2 2 ; R18 := R18(R19)
	196	[570]	SELF     	R18 R18 K37 ; R19 := R18; R18 := R18[0x589ef1c1]
	197	[570]	SELF     	R20 R17 K38 ; R21 := R17; R20 := R17[0xd1586535]
	198	[570]	CALL     	R20 2 2 ; R20 := R20(R21)
	199	[570]	SELF     	R21 R17 K39 ; R22 := R17; R21 := R17[0xcb3851b8]
	200	[570]	CALL     	R21 2 0 ; R21,... := R21(R22)
	201	[570]	CALL     	R18 0 1 ; R18(R19,...)
	202	[574]	GETGLOBAL	R18 K6 ; R18 := 0x3d106989
	203	[574]	LOADK    	R19 K40 ; R19 := "No RJ, closing solar map"
	204	[574]	CALL     	R18 2 1 ; R18(R19)
	205	[575]	GETUPVAL 	R18 U3 ; R18 := U3
	206	[575]	CALL     	R18 1 1 ; R18()
	207	[577]	GETUPVAL 	R18 U5 ; R18 := U5
	208	[577]	OP_LOADBOOL	R19 0 0 ; R19 := false
	209	[577]	CALL     	R18 2 1 ; R18(R19)
	210	[584]	TEST     	R3 0 ; if not R3 then PC := 234
	211	[584]	JMP      	234 ; PC := 234
	212	[584]	TEST     	R2 1 ; if R2 then PC := 234
	213	[584]	JMP      	234 ; PC := 234
	214	[585]	GETGLOBAL	R18 K0 ; R18 := 0xe7f2b02f
	215	[585]	SELF     	R18 R18 K20 ; R19 := R18; R18 := R18[0x6d0aa187]
	216	[585]	CALL     	R18 2 2 ; R18 := R18(R19)
	217	[586]	LOADK    	R19 := 1.000000
	218	[586]	LEN      	R20 R18 ; R20 := # R18
	219	[586]	LOADK    	R21 := 1.000000
	220	[586]	FORPREP  	R19 227 ; R19 -= R21; PC := 227
	221	[587]	GETTABLE 	R23 R18 R22 ; R23 := R18[R22]
	222	[587]	GETTABLE 	R23 R23 K41 ; R23 := R23["isLocal"]
	223	[587]	TEST     	R23 0 ; if not R23 then PC := 227
	224	[587]	JMP      	227 ; PC := 227
	225	[588]	OP_LOADBOOL	R3 0 0 ; R3 := false
	226	[589]	JMP      	228 ; PC := 228
	227	[586]	FORLOOP  	R19 221 ; R19 += R21; if R19 <= R20 then begin PC := 221; R22 := R19 end
	228	[593]	TEST     	R3 1 ; if R3 then PC := 234
	229	[593]	JMP      	234 ; PC := 234
	230	[594]	GETGLOBAL	R23 K0 ; R23 := 0xe7f2b02f
	231	[594]	SELF     	R23 R23 K42 ; R24 := R23; R23 := R23[0xf9744f7d]
	232	[594]	OP_LOADBOOL	R25 1 0 ; R25 := true
	233	[594]	CALL     	R23 3 1 ; R23(R24,R25)
	234	[598]	GETGLOBAL	R23 K12 ; R23 := 0xcbd666e1
	235	[598]	LOADK    	R24 := 0.000000
	236	[598]	CALL     	R23 2 1 ; R23(R24)
	237	[598]	JMP      	8 ; PC := 8
	238	[600]	RETURN   	R0 1 ; return 

function #14 <?:604,658> (134 instructions, 536 bytes at 000002111B634350)
0 params, 24 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[605]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[605]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xb321d806]
	3	[605]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[606]	OP_LOADBOOL	R1 0 0 ; R1 := false
	5	[607]	OP_LOADBOOL	R2 0 0 ; R2 := false
	6	[609]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	7	[609]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x0ffec0b9]
	8	[609]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[609]	TEST     	R3 1 ; if R3 then PC := 134
	10	[609]	JMP      	134 ; PC := 134
	11	[609]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	12	[609]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xf2deaf69]
	13	[609]	GETGLOBAL	R5 K5 ; R5 := gLotusHubGameRulesType
	14	[609]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	15	[609]	TEST     	R3 0 ; if not R3 then PC := 134
	16	[609]	JMP      	134 ; PC := 134
	17	[611]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	18	[611]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xd7d79b74]
	19	[611]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[612]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	21	[612]	MOVE     	R5 R3 ; R5 := R3
	22	[612]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[612]	TEST     	R4 1 ; if R4 then PC := 32
	24	[612]	JMP      	32 ; PC := 32
	25	[612]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	26	[612]	SELF     	R5 R3 K8 ; R6 := R3; R5 := R3[0xcd57f819]
	27	[612]	CALL     	R5 2 0 ; R5,... := R5(R6)
	28	[612]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	29	[612]	TEST     	R4 1 ; if R4 then PC := 32
	30	[612]	JMP      	32 ; PC := 32
	31	[613]	JMP      	134 ; PC := 134
	32	[616]	GETGLOBAL	R4 K0 ; R4 := 0xe7f2b02f
	33	[616]	SELF     	R4 R4 K1 ; R5 := R4; R4 := R4[0xb321d806]
	34	[616]	CALL     	R4 2 2 ; R4 := R4(R5)
	35	[617]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 39
	36	[617]	JMP      	39 ; PC := 39
	37	[618]	OP_LOADBOOL	R1 1 0 ; R1 := true
	38	[619]	NOT      	R2 R4 ; R2 := not R4
	39	[622]	MOVE     	R0 R4 ; R0 := R4
	40	[624]	OP_LOADBOOL	R5 0 0 ; R5 := false
	41	[625]	LOADNIL  	R6 R6 ; R6 := nil
	42	[626]	TEST     	R1 0 ; if not R1 then PC := 117
	43	[626]	JMP      	117 ; PC := 117
	44	[627]	GETGLOBAL	R7 K9 ; R7 := 0x89326c93
	45	[627]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xfb64e76c]
	46	[627]	CALL     	R7 2 2 ; R7 := R7(R8)
	47	[628]	TEST     	R4 0 ; if not R4 then PC := 78
	48	[628]	JMP      	78 ; PC := 78
	49	[629]	GETGLOBAL	R8 K7 ; R8 := 0x7b998233
	50	[629]	MOVE     	R9 R7 ; R9 := R7
	51	[629]	CALL     	R8 2 2 ; R8 := R8(R9)
	52	[629]	TEST     	R8 1 ; if R8 then PC := 117
	53	[629]	JMP      	117 ; PC := 117
	54	[630]	OP_LOADBOOL	R1 0 0 ; R1 := false
	55	[632]	SELF     	R8 R7 K11 ; R9 := R7; R8 := R7[0x62c81b76]
	56	[632]	CALL     	R8 2 2 ; R8 := R8(R9)
	57	[633]	GETTABLE 	R6 R8 K12 ; R6 := R8["mCrewShipLoadOut"]
	58	[634]	GETGLOBAL	R9 K7 ; R9 := 0x7b998233
	59	[634]	MOVE     	R10 R6 ; R10 := R6
	60	[634]	CALL     	R9 2 2 ; R9 := R9(R10)
	61	[634]	TEST     	R9 1 ; if R9 then PC := 75
	62	[634]	JMP      	75 ; PC := 75
	63	[634]	GETGLOBAL	R9 K7 ; R9 := 0x7b998233
	64	[634]	GETTABLE 	R10 R6 K13 ; R10 := R6["mShip"]
	65	[634]	CALL     	R9 2 2 ; R9 := R9(R10)
	66	[634]	TEST     	R9 1 ; if R9 then PC := 75
	67	[634]	JMP      	75 ; PC := 75
	68	[634]	GETTABLE 	R9 R6 K13 ; R9 := R6["mShip"]
	69	[634]	GETTABLE 	R9 R9 K14 ; R9 := R9["mItemId"]
	70	[634]	GETTABLE 	R9 R9 K15 ; R9 := R9["mId"]
	71	[634]	GETGLOBAL	R10 K16 ; R10 := 0x6c97a788
	72	[634]	GETTABLE 	R10 R10 K17 ; R10 := R10["InvalidItemID"]
	73	[634]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 76
	74	[634]	JMP      	76 ; PC := 76
	75	[634]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 76
	76	[634]	OP_LOADBOOL	R5 1 0 ; R5 := true
	77	[635]	JMP      	117 ; PC := 117
	78	[637]	GETGLOBAL	R9 K0 ; R9 := 0xe7f2b02f
	79	[637]	SELF     	R9 R9 K18 ; R10 := R9; R9 := R9[0x6d0aa187]
	80	[637]	CALL     	R9 2 2 ; R9 := R9(R10)
	81	[638]	LOADK    	R10 := 1.000000
	82	[638]	LEN      	R11 R9 ; R11 := # R9
	83	[638]	LOADK    	R12 := 1.000000
	84	[638]	FORPREP  	R10 116 ; R10 -= R12; PC := 116
	85	[639]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	86	[639]	GETTABLE 	R14 R14 K19 ; R14 := R14["isHost"]
	87	[639]	TEST     	R14 0 ; if not R14 then PC := 116
	88	[639]	JMP      	116 ; PC := 116
	89	[640]	OP_LOADBOOL	R1 0 0 ; R1 := false
	90	[641]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	91	[641]	GETTABLE 	R14 R14 K20 ; R14 := R14["loadout"]
	92	[642]	GETUPVAL 	R15 U0 ; R15 := U0
	93	[642]	GETTABLE 	R15 R15 K21 ; R15 := R15[0x4356d102]
	94	[642]	MOVE     	R16 R14 ; R16 := R14
	95	[642]	CALL     	R15 2 2 ; R15 := R15(R16)
	96	[642]	MOVE     	R6 R15 ; R6 := R15
	97	[643]	GETGLOBAL	R15 K7 ; R15 := 0x7b998233
	98	[643]	MOVE     	R16 R6 ; R16 := R6
	99	[643]	CALL     	R15 2 2 ; R15 := R15(R16)
	100	[643]	TEST     	R15 1 ; if R15 then PC := 114
	101	[643]	JMP      	114 ; PC := 114
	102	[643]	GETGLOBAL	R15 K7 ; R15 := 0x7b998233
	103	[643]	GETTABLE 	R16 R6 K13 ; R16 := R6["mShip"]
	104	[643]	CALL     	R15 2 2 ; R15 := R15(R16)
	105	[643]	TEST     	R15 1 ; if R15 then PC := 114
	106	[643]	JMP      	114 ; PC := 114
	107	[643]	GETTABLE 	R15 R6 K13 ; R15 := R6["mShip"]
	108	[643]	GETTABLE 	R15 R15 K14 ; R15 := R15["mItemId"]
	109	[643]	GETTABLE 	R15 R15 K15 ; R15 := R15["mId"]
	110	[643]	GETGLOBAL	R16 K16 ; R16 := 0x6c97a788
	111	[643]	GETTABLE 	R16 R16 K17 ; R16 := R16["InvalidItemID"]
	112	[643]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 115
	113	[643]	JMP      	115 ; PC := 115
	114	[643]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 115
	115	[643]	OP_LOADBOOL	R5 1 0 ; R5 := true
	116	[638]	FORLOOP  	R10 85 ; R10 += R12; if R10 <= R11 then begin PC := 85; R13 := R10 end
	117	[649]	TEST     	R1 1 ; if R1 then PC := 130
	118	[649]	JMP      	130 ; PC := 130
	119	[649]	TEST     	R5 0 ; if not R5 then PC := 130
	120	[649]	JMP      	130 ; PC := 130
	121	[650]	OP_LOADBOOL	R15 1 0 ; R15 := true
	122	[651]	OP_LOADBOOL	R16 1 0 ; R16 := true
	123	[652]	SELF     	R17 R3 K22 ; R18 := R3; R17 := R3[0x7691b7fb]
	124	[652]	MOVE     	R19 R6 ; R19 := R6
	125	[652]	MOVE     	R20 R15 ; R20 := R15
	126	[652]	MOVE     	R21 R16 ; R21 := R16
	127	[652]	LOADK    	R22 K23 ; R22 := "ShipReady"
	128	[652]	GETUPVAL 	R23 U1 ; R23 := U1
	129	[652]	CALL     	R17 7 1 ; R17(R18,R19,R20,R21,R22,R23)
	130	[655]	GETGLOBAL	R17 K24 ; R17 := 0xcbd666e1
	131	[655]	LOADK    	R18 K25 ; R18 := 0.100000
	132	[655]	CALL     	R17 2 1 ; R17(R18)
	133	[655]	JMP      	6 ; PC := 6
	134	[658]	RETURN   	R0 1 ; return 

function #15 <?:660,691> (60 instructions, 240 bytes at 000002111B6343E0)
1 param, 8 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[661]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[661]	SETTABLE 	R1 K1 K2 ; R1["RailjackLoadout_Enabling"] := true
	3	[662]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf4e253b6]
	4	[662]	CALL     	R1 2 1 ; R1(R2)
	5	[664]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	6	[664]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	7	[664]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[664]	TEST     	R1 1 ; if R1 then PC := 15
	9	[664]	JMP      	15 ; PC := 15
	10	[664]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[664]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	12	[664]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[664]	TEST     	R1 0 ; if not R1 then PC := 19
	14	[664]	JMP      	19 ; PC := 19
	15	[665]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	16	[665]	LOADK    	R2 := 0.000000
	17	[665]	CALL     	R1 2 1 ; R1(R2)
	18	[665]	JMP      	5 ; PC := 5
	19	[668]	GETGLOBAL	R1 K5 ; R1 := 0x25d99d89
	20	[668]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x25a6e75e]
	21	[668]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[669]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0x2fdbb24a]
	23	[669]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[670]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0xb895ffa3]
	25	[670]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[671]	LEN      	R4 R3 ; R4 := # R3
	27	[671]	LT       	0 K11 R4 ; if 0.000000 >= R4 then PC := 60
	28	[671]	JMP      	60 ; PC := 60
	29	[674]	LEN      	R4 R2 ; R4 := # R2
	30	[674]	LT       	0 K11 R4 ; if 0.000000 >= R4 then PC := 52
	31	[674]	JMP      	52 ; PC := 52
	32	[676]	LOADNIL  	R4 R4 ; R4 := nil
	33	[677]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	34	[677]	MOVE     	R6 R4 ; R6 := R4
	35	[677]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[677]	TEST     	R5 0 ; if not R5 then PC := 52
	37	[677]	JMP      	52 ; PC := 52
	38	[678]	GETGLOBAL	R5 K6 ; R5 := 0x89326c93
	39	[678]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0x46a0ebf5]
	40	[678]	GETUPVAL 	R7 U0 ; R7 := U0
	41	[678]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	42	[678]	MOVE     	R4 R5 ; R4 := R5
	43	[679]	GETGLOBAL	R5 K0 ; R5 := _T
	44	[679]	GETTABLE 	R5 R5 K13 ; R5 := R5["disableLisetConsoles"]
	45	[679]	TEST     	R5 0 ; if not R5 then PC := 48
	46	[679]	JMP      	48 ; PC := 48
	47	[680]	RETURN   	R0 1 ; return 
	48	[682]	GETGLOBAL	R5 K7 ; R5 := 0xcbd666e1
	49	[682]	LOADK    	R6 := 0.000000
	50	[682]	CALL     	R5 2 1 ; R5(R6)
	51	[682]	JMP      	33 ; PC := 33
	52	[686]	GETGLOBAL	R5 K0 ; R5 := _T
	53	[686]	GETTABLE 	R5 R5 K1 ; R5 := R5["RailjackLoadout_Enabling"]
	54	[686]	TEST     	R5 0 ; if not R5 then PC := 60
	55	[686]	JMP      	60 ; PC := 60
	56	[687]	GETGLOBAL	R5 K0 ; R5 := _T
	57	[687]	SETTABLE 	R5 K1 K14 ; R5["RailjackLoadout_Enabling"] := nil
	58	[688]	SELF     	R5 R0 K15 ; R6 := R0; R5 := R0[0x383d2e7d]
	59	[688]	CALL     	R5 2 1 ; R5(R6)
	60	[691]	RETURN   	R0 1 ; return 

function #16 <?:693,809> (295 instructions, 1180 bytes at 0000021135E21D10)
1 param, 30 slots, 6 upvalues, 0 locals, 57 constants, 0 functions
	1	[695]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[695]	LOADK    	R2 K1 ; R2 := "CREWSHIP: SetupCrewshipHangar"
	3	[695]	CALL     	R1 2 1 ; R1(R2)
	4	[697]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xd1586535]
	5	[697]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[697]	SETUPVAL 	R1 U0 ; U0 := R1
	7	[699]	GETGLOBAL	R1 K3 ; R1 := 0x89326c93
	8	[699]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xc7fcada9]
	9	[699]	GETUPVAL 	R3 U1 ; R3 := U1
	10	[699]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[700]	GETGLOBAL	R2 K5 ; R2 := 0xc8802016
	12	[700]	MOVE     	R3 R1 ; R3 := R1
	13	[700]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	14	[700]	JMP      	17 ; PC := 17
	15	[701]	SELF     	R7 R6 K6 ; R8 := R6; R7 := R6[0xf4e253b6]
	16	[701]	CALL     	R7 2 1 ; R7(R8)
	17	[700]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 15; R4 := R5 end
	18	[701]	JMP      	15 ; PC := 15
	19	[704]	GETUPVAL 	R7 U2 ; R7 := U2
	20	[704]	OP_LOADBOOL	R8 0 0 ; R8 := false
	21	[704]	CALL     	R7 2 1 ; R7(R8)
	22	[706]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	23	[706]	GETGLOBAL	R8 K8 ; R8 := 0xbe190284
	24	[706]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[706]	TEST     	R7 0 ; if not R7 then PC := 31
	26	[706]	JMP      	31 ; PC := 31
	27	[707]	GETGLOBAL	R7 K9 ; R7 := 0xcbd666e1
	28	[707]	LOADK    	R8 := 0.000000
	29	[707]	CALL     	R7 2 1 ; R7(R8)
	30	[707]	JMP      	22 ; PC := 22
	31	[710]	GETGLOBAL	R7 K8 ; R7 := 0xbe190284
	32	[710]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xd7d79b74]
	33	[710]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[712]	GETGLOBAL	R8 K7 ; R8 := 0x7b998233
	35	[712]	MOVE     	R9 R7 ; R9 := R7
	36	[712]	CALL     	R8 2 2 ; R8 := R8(R9)
	37	[712]	TEST     	R8 0 ; if not R8 then PC := 47
	38	[712]	JMP      	47 ; PC := 47
	39	[713]	GETGLOBAL	R8 K9 ; R8 := 0xcbd666e1
	40	[713]	LOADK    	R9 K11 ; R9 := 0.100000
	41	[713]	CALL     	R8 2 1 ; R8(R9)
	42	[714]	GETGLOBAL	R8 K8 ; R8 := 0xbe190284
	43	[714]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xd7d79b74]
	44	[714]	CALL     	R8 2 2 ; R8 := R8(R9)
	45	[714]	MOVE     	R7 R8 ; R7 := R8
	46	[714]	JMP      	34 ; PC := 34
	47	[716]	GETGLOBAL	R8 K0 ; R8 := 0x3d106989
	48	[716]	LOADK    	R9 K12 ; R9 := "HANGAR: Has crewShipMgr"
	49	[716]	CALL     	R8 2 1 ; R8(R9)
	50	[718]	LOADNIL  	R8 R8 ; R8 := nil
	51	[719]	LOADK    	R9 K13 ; R9 := ""
	52	[720]	GETGLOBAL	R10 K3 ; R10 := 0x89326c93
	53	[720]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0xfb64e76c]
	54	[720]	CALL     	R10 2 2 ; R10 := R10(R11)
	55	[721]	GETGLOBAL	R11 K7 ; R11 := 0x7b998233
	56	[721]	MOVE     	R12 R10 ; R12 := R10
	57	[721]	CALL     	R11 2 2 ; R11 := R11(R12)
	58	[721]	TEST     	R11 0 ; if not R11 then PC := 68
	59	[721]	JMP      	68 ; PC := 68
	60	[722]	GETGLOBAL	R11 K9 ; R11 := 0xcbd666e1
	61	[722]	LOADK    	R12 := 0.000000
	62	[722]	CALL     	R11 2 1 ; R11(R12)
	63	[723]	GETGLOBAL	R11 K3 ; R11 := 0x89326c93
	64	[723]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0xfb64e76c]
	65	[723]	CALL     	R11 2 2 ; R11 := R11(R12)
	66	[723]	MOVE     	R10 R11 ; R10 := R11
	67	[723]	JMP      	55 ; PC := 55
	68	[726]	SELF     	R11 R7 K15 ; R12 := R7; R11 := R7[0xcd57f819]
	69	[726]	CALL     	R11 2 2 ; R11 := R11(R12)
	70	[728]	GETGLOBAL	R12 K7 ; R12 := 0x7b998233
	71	[728]	MOVE     	R13 R11 ; R13 := R11
	72	[728]	CALL     	R12 2 2 ; R12 := R12(R13)
	73	[728]	TEST     	R12 1 ; if R12 then PC := 106
	74	[728]	JMP      	106 ; PC := 106
	75	[728]	GETGLOBAL	R12 K16 ; R12 := 0xe7f2b02f
	76	[728]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0xb321d806]
	77	[728]	CALL     	R12 2 2 ; R12 := R12(R13)
	78	[728]	TEST     	R12 1 ; if R12 then PC := 106
	79	[728]	JMP      	106 ; PC := 106
	80	[729]	LOADK    	R12 := 0.000000
	81	[730]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	82	[730]	MOVE     	R14 R11 ; R14 := R11
	83	[730]	CALL     	R13 2 2 ; R13 := R13(R14)
	84	[730]	TEST     	R13 1 ; if R13 then PC := 90
	85	[730]	JMP      	90 ; PC := 90
	86	[730]	SELF     	R13 R11 K18 ; R14 := R11; R13 := R11[0x18d05d30]
	87	[730]	CALL     	R13 2 2 ; R13 := R13(R14)
	88	[730]	TEST     	R13 1 ; if R13 then PC := 103
	89	[730]	JMP      	103 ; PC := 103
	90	[731]	GETGLOBAL	R13 K9 ; R13 := 0xcbd666e1
	91	[731]	LOADK    	R14 := 0.000000
	92	[731]	CALL     	R13 2 1 ; R13(R14)
	93	[732]	SELF     	R13 R7 K15 ; R14 := R7; R13 := R7[0xcd57f819]
	94	[732]	CALL     	R13 2 2 ; R13 := R13(R14)
	95	[732]	MOVE     	R11 R13 ; R11 := R13
	96	[733]	LT       	0 R12 K19 ; if R12 >= 5.000000 then PC := 101
	97	[733]	JMP      	101 ; PC := 101
	98	[734]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	99	[734]	LOADK    	R14 K20 ; R14 := "HANGAR: Waiting for master ship"
	100	[734]	CALL     	R13 2 1 ; R13(R14)
	101	[736]	ADD      	R12 R12 K21 ; R12 := R12 + 1.000000
	102	[736]	JMP      	81 ; PC := 81
	103	[738]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	104	[738]	LOADK    	R14 K22 ; R14 := "HANGAR: Has master ship"
	105	[738]	CALL     	R13 2 1 ; R13(R14)
	106	[741]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	107	[741]	GETGLOBAL	R14 K8 ; R14 := 0xbe190284
	108	[741]	CALL     	R13 2 2 ; R13 := R13(R14)
	109	[741]	TEST     	R13 1 ; if R13 then PC := 117
	110	[741]	JMP      	117 ; PC := 117
	111	[741]	GETGLOBAL	R13 K8 ; R13 := 0xbe190284
	112	[741]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0xf2deaf69]
	113	[741]	GETGLOBAL	R15 K24 ; R15 := gLotusHubGameRulesType
	114	[741]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	115	[741]	TEST     	R13 1 ; if R13 then PC := 121
	116	[741]	JMP      	121 ; PC := 121
	117	[742]	GETGLOBAL	R13 K9 ; R13 := 0xcbd666e1
	118	[742]	LOADK    	R14 := 0.000000
	119	[742]	CALL     	R13 2 1 ; R13(R14)
	120	[742]	JMP      	106 ; PC := 106
	121	[745]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	122	[745]	MOVE     	R14 R11 ; R14 := R11
	123	[745]	CALL     	R13 2 2 ; R13 := R13(R14)
	124	[745]	TEST     	R13 0 ; if not R13 then PC := 131
	125	[745]	JMP      	131 ; PC := 131
	126	[745]	SELF     	R13 R7 K25 ; R14 := R7; R13 := R7[0x381378ec]
	127	[745]	OP_LOADBOOL	R15 1 0 ; R15 := true
	128	[745]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	129	[745]	TEST     	R13 0 ; if not R13 then PC := 164
	130	[745]	JMP      	164 ; PC := 164
	131	[747]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	132	[747]	LOADK    	R14 K26 ; R14 := "HANGAR: Has ship - "
	133	[747]	GETGLOBAL	R15 K27 ; R15 := 0x64fb1586
	134	[747]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	135	[747]	MOVE     	R17 R11 ; R17 := R11
	136	[747]	CALL     	R16 2 2 ; R16 := R16(R17)
	137	[747]	NOT      	R16 R16 ; R16 := not R16
	138	[747]	CALL     	R15 2 2 ; R15 := R15(R16)
	139	[747]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	140	[747]	CALL     	R13 2 1 ; R13(R14)
	141	[748]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	142	[748]	MOVE     	R14 R11 ; R14 := R11
	143	[748]	CALL     	R13 2 2 ; R13 := R13(R14)
	144	[748]	TEST     	R13 1 ; if R13 then PC := 154
	145	[748]	JMP      	154 ; PC := 154
	146	[749]	GETGLOBAL	R13 K0 ; R13 := 0x3d106989
	147	[749]	LOADK    	R14 K28 ; R14 := "Ship: "
	148	[749]	GETGLOBAL	R15 K27 ; R15 := 0x64fb1586
	149	[749]	SELF     	R16 R11 K29 ; R17 := R11; R16 := R11[0xed4e0128]
	150	[749]	CALL     	R16 2 0 ; R16,... := R16(R17)
	151	[749]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	152	[749]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	153	[749]	CALL     	R13 2 1 ; R13(R14)
	154	[752]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	155	[752]	MOVE     	R14 R11 ; R14 := R11
	156	[752]	CALL     	R13 2 2 ; R13 := R13(R14)
	157	[752]	TEST     	R13 1 ; if R13 then PC := 163
	158	[752]	JMP      	163 ; PC := 163
	159	[753]	GETUPVAL 	R13 U3 ; R13 := U3
	160	[753]	MOVE     	R14 R11 ; R14 := R11
	161	[753]	OP_LOADBOOL	R15 1 0 ; R15 := true
	162	[753]	CALL     	R13 3 1 ; R13(R14,R15)
	163	[756]	RETURN   	R0 1 ; return 
	164	[759]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	165	[759]	MOVE     	R14 R10 ; R14 := R10
	166	[759]	CALL     	R13 2 2 ; R13 := R13(R14)
	167	[759]	TEST     	R13 1 ; if R13 then PC := 204
	168	[759]	JMP      	204 ; PC := 204
	169	[760]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	170	[760]	SELF     	R14 R10 K30 ; R15 := R10; R14 := R10[0xbb610e5b]
	171	[760]	CALL     	R14 2 0 ; R14,... := R14(R15)
	172	[760]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	173	[760]	TEST     	R13 1 ; if R13 then PC := 186
	174	[760]	JMP      	186 ; PC := 186
	175	[760]	GETGLOBAL	R13 K7 ; R13 := 0x7b998233
	176	[760]	SELF     	R14 R10 K30 ; R15 := R10; R14 := R10[0xbb610e5b]
	177	[760]	CALL     	R14 2 2 ; R14 := R14(R15)
	178	[760]	SELF     	R14 R14 K31 ; R15 := R14; R14 := R14[0xde321e6f]
	179	[760]	CALL     	R14 2 2 ; R14 := R14(R15)
	180	[760]	SELF     	R14 R14 K32 ; R15 := R14; R14 := R14[0x33c6e9d3]
	181	[760]	CALL     	R14 2 0 ; R14,... := R14(R15)
	182	[760]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	183	[760]	TEST     	R13 1 ; if R13 then PC := 186
	184	[760]	JMP      	186 ; PC := 186
	185	[761]	RETURN   	R0 1 ; return 
	186	[763]	SELF     	R13 R10 K33 ; R14 := R10; R13 := R10[0x62c81b76]
	187	[763]	CALL     	R13 2 2 ; R13 := R13(R14)
	188	[764]	GETGLOBAL	R14 K34 ; R14 := _T
	189	[764]	GETTABLE 	R14 R14 K35 ; R14 := R14["RailjackQuest_UseProfileLoadout"]
	190	[764]	TEST     	R14 0 ; if not R14 then PC := 203
	191	[764]	JMP      	203 ; PC := 203
	192	[764]	GETGLOBAL	R14 K7 ; R14 := 0x7b998233
	193	[764]	GETGLOBAL	R15 K36 ; R15 := 0x25d99d89
	194	[764]	CALL     	R14 2 2 ; R14 := R14(R15)
	195	[764]	TEST     	R14 1 ; if R14 then PC := 203
	196	[764]	JMP      	203 ; PC := 203
	197	[768]	GETGLOBAL	R14 K36 ; R14 := 0x25d99d89
	198	[768]	SELF     	R14 R14 K33 ; R15 := R14; R14 := R14[0x62c81b76]
	199	[768]	CALL     	R14 2 2 ; R14 := R14(R15)
	200	[768]	MOVE     	R13 R14 ; R13 := R14
	201	[769]	GETGLOBAL	R14 K34 ; R14 := _T
	202	[769]	SETTABLE 	R14 K35 K37 ; R14["RailjackQuest_UseProfileLoadout"] := nil
	203	[771]	GETTABLE 	R8 R13 K38 ; R8 := R13["mCrewShipLoadOut"]
	204	[774]	GETGLOBAL	R14 K16 ; R14 := 0xe7f2b02f
	205	[774]	SELF     	R14 R14 K17 ; R15 := R14; R14 := R14[0xb321d806]
	206	[774]	CALL     	R14 2 2 ; R14 := R14(R15)
	207	[774]	TEST     	R14 1 ; if R14 then PC := 229
	208	[774]	JMP      	229 ; PC := 229
	209	[776]	GETGLOBAL	R14 K16 ; R14 := 0xe7f2b02f
	210	[776]	SELF     	R14 R14 K39 ; R15 := R14; R14 := R14[0x6d0aa187]
	211	[776]	CALL     	R14 2 2 ; R14 := R14(R15)
	212	[777]	LOADK    	R15 := 1.000000
	213	[777]	LEN      	R16 R14 ; R16 := # R14
	214	[777]	LOADK    	R17 := 1.000000
	215	[777]	FORPREP  	R15 228 ; R15 -= R17; PC := 228
	216	[778]	GETTABLE 	R19 R14 R18 ; R19 := R14[R18]
	217	[778]	GETTABLE 	R19 R19 K40 ; R19 := R19["isHost"]
	218	[778]	TEST     	R19 0 ; if not R19 then PC := 228
	219	[778]	JMP      	228 ; PC := 228
	220	[779]	GETTABLE 	R19 R14 R18 ; R19 := R14[R18]
	221	[779]	GETTABLE 	R9 R19 K41 ; R9 := R19["loadout"]
	222	[780]	GETUPVAL 	R19 U4 ; R19 := U4
	223	[780]	GETTABLE 	R19 R19 K42 ; R19 := R19[0x4356d102]
	224	[780]	MOVE     	R20 R9 ; R20 := R9
	225	[780]	CALL     	R19 2 2 ; R19 := R19(R20)
	226	[780]	MOVE     	R8 R19 ; R8 := R19
	227	[781]	JMP      	229 ; PC := 229
	228	[777]	FORLOOP  	R15 216 ; R15 += R17; if R15 <= R16 then begin PC := 216; R18 := R15 end
	229	[786]	OP_LOADBOOL	R19 1 0 ; R19 := true
	230	[787]	OP_LOADBOOL	R20 1 0 ; R20 := true
	231	[788]	OP_LOADBOOL	R21 0 0 ; R21 := false
	232	[789]	LOADNIL  	R22 R22 ; R22 := nil
	233	[791]	EQ       	1 R8 K37 ; if R8 == nil then PC := 252
	234	[791]	JMP      	252 ; PC := 252
	235	[791]	GETTABLE 	R23 R8 K43 ; R23 := R8["mShip"]
	236	[791]	GETTABLE 	R23 R23 K44 ; R23 := R23["mItemId"]
	237	[791]	GETTABLE 	R23 R23 K45 ; R23 := R23["mId"]
	238	[791]	GETGLOBAL	R24 K46 ; R24 := 0x6c97a788
	239	[791]	GETTABLE 	R24 R24 K47 ; R24 := R24["InvalidItemID"]
	240	[791]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 252
	241	[791]	JMP      	252 ; PC := 252
	242	[792]	SELF     	R23 R7 K48 ; R24 := R7; R23 := R7[0x7691b7fb]
	243	[792]	MOVE     	R25 R8 ; R25 := R8
	244	[792]	MOVE     	R26 R19 ; R26 := R19
	245	[792]	MOVE     	R27 R20 ; R27 := R20
	246	[792]	LOADK    	R28 K49 ; R28 := "ShipReady"
	247	[792]	GETUPVAL 	R29 U5 ; R29 := U5
	248	[792]	CALL     	R23 7 2 ; R23 := R23(R24,R25,R26,R27,R28,R29)
	249	[792]	MOVE     	R22 R23 ; R22 := R23
	250	[793]	OP_LOADBOOL	R21 1 0 ; R21 := true
	251	[793]	JMP      	255 ; PC := 255
	252	[795]	GETGLOBAL	R23 K0 ; R23 := 0x3d106989
	253	[795]	LOADK    	R24 K50 ; R24 := "Has no crewship"
	254	[795]	CALL     	R23 2 1 ; R23(R24)
	255	[798]	GETGLOBAL	R23 K7 ; R23 := 0x7b998233
	256	[798]	MOVE     	R24 R22 ; R24 := R22
	257	[798]	CALL     	R23 2 2 ; R23 := R23(R24)
	258	[798]	TEST     	R23 0 ; if not R23 then PC := 295
	259	[798]	JMP      	295 ; PC := 295
	260	[798]	GETGLOBAL	R23 K7 ; R23 := 0x7b998233
	261	[798]	MOVE     	R24 R11 ; R24 := R11
	262	[798]	CALL     	R23 2 2 ; R23 := R23(R24)
	263	[798]	TEST     	R23 0 ; if not R23 then PC := 295
	264	[798]	JMP      	295 ; PC := 295
	265	[798]	TEST     	R21 1 ; if R21 then PC := 295
	266	[798]	JMP      	295 ; PC := 295
	267	[799]	GETGLOBAL	R23 K3 ; R23 := 0x89326c93
	268	[799]	SELF     	R23 R23 K51 ; R24 := R23; R23 := R23[0x46a0ebf5]
	269	[799]	GETGLOBAL	R25 K52 ; R25 := 0x0469f296
	270	[799]	LOADK    	R26 K53 ; R26 := "RailjackQuestShowParts"
	271	[799]	CALL     	R25 2 0 ; R25,... := R25(R26)
	272	[799]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	273	[800]	GETGLOBAL	R24 K7 ; R24 := 0x7b998233
	274	[800]	MOVE     	R25 R23 ; R25 := R23
	275	[800]	CALL     	R24 2 2 ; R24 := R24(R25)
	276	[800]	TEST     	R24 1 ; if R24 then PC := 281
	277	[800]	JMP      	281 ; PC := 281
	278	[801]	SELF     	R24 R23 K54 ; R25 := R23; R24 := R23[0x8eb2112d]
	279	[801]	LOADK    	R26 K55 ; R26 := "Execute"
	280	[801]	CALL     	R24 3 1 ; R24(R25,R26)
	281	[804]	GETGLOBAL	R24 K3 ; R24 := 0x89326c93
	282	[804]	SELF     	R24 R24 K51 ; R25 := R24; R24 := R24[0x46a0ebf5]
	283	[804]	GETGLOBAL	R26 K52 ; R26 := 0x0469f296
	284	[804]	LOADK    	R27 K56 ; R27 := "MonitorNoCrewship"
	285	[804]	CALL     	R26 2 0 ; R26,... := R26(R27)
	286	[804]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	287	[805]	GETGLOBAL	R25 K7 ; R25 := 0x7b998233
	288	[805]	MOVE     	R26 R24 ; R26 := R24
	289	[805]	CALL     	R25 2 2 ; R25 := R25(R26)
	290	[805]	TEST     	R25 1 ; if R25 then PC := 295
	291	[805]	JMP      	295 ; PC := 295
	292	[806]	SELF     	R25 R24 K54 ; R26 := R24; R25 := R24[0x8eb2112d]
	293	[806]	LOADK    	R27 K55 ; R27 := "Execute"
	294	[806]	CALL     	R25 3 1 ; R25(R26,R27)
	295	[809]	RETURN   	R0 1 ; return 

function #17 <?:811,922> (238 instructions, 952 bytes at 00000211155AF1B0)
1 param, 23 slots, 3 upvalues, 0 locals, 49 constants, 0 functions
	1	[812]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[812]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xfa179823]
	3	[812]	CALL     	R1 1 2 ; R1 := R1()
	4	[812]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[812]	JMP      	7 ; PC := 7
	6	[813]	RETURN   	R0 1 ; return 
	7	[816]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	8	[816]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x78298275]
	9	[816]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[817]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	11	[817]	MOVE     	R3 R1 ; R3 := R1
	12	[817]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[817]	TEST     	R2 0 ; if not R2 then PC := 16
	14	[817]	JMP      	16 ; PC := 16
	15	[818]	RETURN   	R0 1 ; return 
	16	[821]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	17	[821]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xfb64e76c]
	18	[821]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[822]	SELF     	R3 R1 K5 ; R4 := R1; R3 := R1[0xf2deaf69]
	20	[822]	GETGLOBAL	R5 K6 ; R5 := gLotusOperatorAvatarType
	21	[822]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	22	[822]	TEST     	R3 0 ; if not R3 then PC := 40
	23	[822]	JMP      	40 ; PC := 40
	24	[823]	SELF     	R3 R1 K7 ; R4 := R1; R3 := R1[0x5b89142c]
	25	[823]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[824]	SELF     	R4 R1 K8 ; R5 := R1; R4 := R1[0x18f03c5d]
	27	[824]	CALL     	R4 2 1 ; R4(R5)
	28	[825]	SELF     	R4 R1 K5 ; R5 := R1; R4 := R1[0xf2deaf69]
	29	[825]	GETGLOBAL	R6 K6 ; R6 := gLotusOperatorAvatarType
	30	[825]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[825]	TEST     	R4 0 ; if not R4 then PC := 40
	32	[825]	JMP      	40 ; PC := 40
	33	[826]	GETGLOBAL	R4 K9 ; R4 := 0xcbd666e1
	34	[826]	LOADK    	R5 := 0.000000
	35	[826]	CALL     	R4 2 1 ; R4(R5)
	36	[827]	SELF     	R4 R3 K10 ; R5 := R3; R4 := R3[0xbb610e5b]
	37	[827]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[827]	MOVE     	R1 R4 ; R1 := R4
	39	[827]	JMP      	28 ; PC := 28
	40	[831]	GETUPVAL 	R4 U1 ; R4 := U1
	41	[831]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x2a1108a9]
	42	[831]	GETUPVAL 	R5 U2 ; R5 := U2
	43	[831]	SELF     	R6 R1 K12 ; R7 := R1; R6 := R1[0xd1586535]
	44	[831]	CALL     	R6 2 0 ; R6,... := R6(R7)
	45	[831]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	46	[832]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	47	[832]	MOVE     	R6 R4 ; R6 := R4
	48	[832]	CALL     	R5 2 2 ; R5 := R5(R6)
	49	[832]	TEST     	R5 0 ; if not R5 then PC := 52
	50	[832]	JMP      	52 ; PC := 52
	51	[833]	RETURN   	R0 1 ; return 
	52	[836]	SELF     	R5 R4 K13 ; R6 := R4; R5 := R4[0xde321e6f]
	53	[836]	CALL     	R5 2 2 ; R5 := R5(R6)
	54	[836]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xf7d48ee0]
	55	[836]	CALL     	R5 2 2 ; R5 := R5(R6)
	56	[838]	OP_LOADBOOL	R6 0 0 ; R6 := false
	57	[839]	OP_LOADBOOL	R7 1 0 ; R7 := true
	58	[840]	SELF     	R8 R1 K15 ; R9 := R1; R8 := R1[0x5d985c7e]
	59	[840]	GETGLOBAL	R10 K16 ; R10 := 0x3839dc0a
	60	[840]	MOVE     	R11 R6 ; R11 := R6
	61	[840]	LOADK    	R12 := 3.000000
	62	[840]	LOADK    	R13 := 1.000000
	63	[840]	MOVE     	R14 R7 ; R14 := R7
	64	[840]	CALL     	R8 7 1 ; R8(R9,R10,R11,R12,R13,R14)
	65	[842]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	66	[842]	MOVE     	R9 R5 ; R9 := R5
	67	[842]	CALL     	R8 2 2 ; R8 := R8(R9)
	68	[842]	TEST     	R8 1 ; if R8 then PC := 80
	69	[842]	JMP      	80 ; PC := 80
	70	[843]	SELF     	R8 R5 K18 ; R9 := R5; R8 := R5[0x3e9d0b66]
	71	[843]	GETGLOBAL	R10 K19 ; R10 := 0xad2a85b6
	72	[843]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	73	[844]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	74	[844]	MOVE     	R10 R8 ; R10 := R8
	75	[844]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[844]	TEST     	R9 1 ; if R9 then PC := 80
	77	[844]	JMP      	80 ; PC := 80
	78	[845]	SELF     	R9 R8 K20 ; R10 := R8; R9 := R8[0xa52976d2]
	79	[845]	CALL     	R9 2 1 ; R9(R10)
	80	[849]	SELF     	R9 R1 K21 ; R10 := R1; R9 := R1[0x21b4c60e]
	81	[849]	GETGLOBAL	R11 K22 ; R11 := 0x905dde08
	82	[849]	LOADK    	R12 := 2.000000
	83	[849]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	84	[851]	LOADK    	R9 := 0.000000
	85	[852]	LOADK    	R10 := 0.500000
	86	[853]	LOADNIL  	R11 R11 ; R11 := nil
	87	[854]	GETGLOBAL	R12 K1 ; R12 := 0x89326c93
	88	[854]	SELF     	R12 R12 K23 ; R13 := R12; R12 := R12[0x7c1a0374]
	89	[854]	CALL     	R12 2 2 ; R12 := R12(R13)
	90	[855]	LT       	0 R9 K24 ; if R9 >= 1.000000 then PC := 109
	91	[855]	JMP      	109 ; PC := 109
	92	[856]	GETGLOBAL	R13 K25 ; R13 := 0x9bafffe3
	93	[856]	LOADK    	R14 := 0.000000
	94	[856]	LOADK    	R15 := 1.000000
	95	[856]	MOVE     	R16 R9 ; R16 := R9
	96	[856]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	97	[856]	MOVE     	R11 R13 ; R11 := R13
	98	[857]	SELF     	R13 R12 K26 ; R14 := R12; R13 := R12[0xb6df3e50]
	99	[857]	MOVE     	R15 R11 ; R15 := R11
	100	[857]	CALL     	R13 3 1 ; R13(R14,R15)
	101	[858]	GETGLOBAL	R13 K27 ; R13 := 0x67652851
	102	[858]	CALL     	R13 1 2 ; R13 := R13()
	103	[858]	DIV      	R13 R13 R10 ; R13 := R13 / R10
	104	[858]	ADD      	R9 R9 R13 ; R9 := R9 + R13
	105	[859]	GETGLOBAL	R13 K9 ; R13 := 0xcbd666e1
	106	[859]	LOADK    	R14 := 0.000000
	107	[859]	CALL     	R13 2 1 ; R13(R14)
	108	[859]	JMP      	90 ; PC := 90
	109	[862]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	110	[862]	MOVE     	R14 R5 ; R14 := R5
	111	[862]	CALL     	R13 2 2 ; R13 := R13(R14)
	112	[862]	TEST     	R13 1 ; if R13 then PC := 124
	113	[862]	JMP      	124 ; PC := 124
	114	[863]	SELF     	R13 R5 K18 ; R14 := R5; R13 := R5[0x3e9d0b66]
	115	[863]	GETGLOBAL	R15 K19 ; R15 := 0xad2a85b6
	116	[863]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	117	[864]	GETGLOBAL	R14 K3 ; R14 := 0x7b998233
	118	[864]	MOVE     	R15 R13 ; R15 := R13
	119	[864]	CALL     	R14 2 2 ; R14 := R14(R15)
	120	[864]	TEST     	R14 1 ; if R14 then PC := 124
	121	[864]	JMP      	124 ; PC := 124
	122	[865]	SELF     	R14 R13 K28 ; R15 := R13; R14 := R13[0xe9221266]
	123	[865]	CALL     	R14 2 1 ; R14(R15)
	124	[870]	SELF     	R14 R4 K29 ; R15 := R4; R14 := R4[0x6e4f62d7]
	125	[870]	MOVE     	R16 R1 ; R16 := R1
	126	[870]	LOADK    	R17 := 5.000000
	127	[870]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	128	[872]	GETGLOBAL	R14 K1 ; R14 := 0x89326c93
	129	[872]	SELF     	R14 R14 K31 ; R15 := R14; R14 := R14[0x18d05d30]
	130	[872]	CALL     	R14 2 2 ; R14 := R14(R15)
	131	[872]	TEST     	R14 0 ; if not R14 then PC := 136
	132	[872]	JMP      	136 ; PC := 136
	133	[873]	SELF     	R14 R4 K32 ; R15 := R4; R14 := R4[0x166dd705]
	134	[873]	LOADK    	R16 := 1.000000
	135	[873]	CALL     	R14 3 1 ; R14(R15,R16)
	136	[876]	GETUPVAL 	R14 U0 ; R14 := U0
	137	[876]	GETTABLE 	R14 R14 K0 ; R14 := R14[0xfa179823]
	138	[876]	CALL     	R14 1 2 ; R14 := R14()
	139	[876]	TEST     	R14 1 ; if R14 then PC := 145
	140	[876]	JMP      	145 ; PC := 145
	141	[877]	GETGLOBAL	R14 K9 ; R14 := 0xcbd666e1
	142	[877]	LOADK    	R15 := 0.000000
	143	[877]	CALL     	R14 2 1 ; R14(R15)
	144	[877]	JMP      	136 ; PC := 136
	145	[880]	SELF     	R14 R4 K13 ; R15 := R4; R14 := R4[0xde321e6f]
	146	[880]	CALL     	R14 2 2 ; R14 := R14(R15)
	147	[880]	SELF     	R14 R14 K14 ; R15 := R14; R14 := R14[0xf7d48ee0]
	148	[880]	CALL     	R14 2 2 ; R14 := R14(R15)
	149	[882]	GETGLOBAL	R15 K3 ; R15 := 0x7b998233
	150	[882]	MOVE     	R16 R14 ; R16 := R14
	151	[882]	CALL     	R15 2 2 ; R15 := R15(R16)
	152	[882]	TEST     	R15 0 ; if not R15 then PC := 155
	153	[882]	JMP      	155 ; PC := 155
	154	[883]	RETURN   	R0 1 ; return 
	155	[886]	SELF     	R15 R1 K33 ; R16 := R1; R15 := R1[0xbf2cdad3]
	156	[886]	CALL     	R15 2 2 ; R15 := R15(R16)
	157	[886]	TEST     	R15 0 ; if not R15 then PC := 163
	158	[886]	JMP      	163 ; PC := 163
	159	[887]	GETGLOBAL	R15 K9 ; R15 := 0xcbd666e1
	160	[887]	LOADK    	R16 := 0.000000
	161	[887]	CALL     	R15 2 1 ; R15(R16)
	162	[887]	JMP      	155 ; PC := 155
	163	[890]	SELF     	R15 R1 K34 ; R16 := R1; R15 := R1[0x5e651723]
	164	[890]	CALL     	R15 2 2 ; R15 := R15(R16)
	165	[890]	SELF     	R15 R15 K35 ; R16 := R15; R15 := R15[0x420402a9]
	166	[890]	CALL     	R15 2 2 ; R15 := R15(R16)
	167	[890]	TEST     	R15 0 ; if not R15 then PC := 169
	168	[890]	JMP      	169 ; PC := 169
	169	[894]	GETGLOBAL	R15 K1 ; R15 := 0x89326c93
	170	[894]	SELF     	R15 R15 K2 ; R16 := R15; R15 := R15[0x78298275]
	171	[894]	CALL     	R15 2 2 ; R15 := R15(R16)
	172	[896]	GETGLOBAL	R16 K1 ; R16 := 0x89326c93
	173	[896]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x18d05d30]
	174	[896]	CALL     	R16 2 2 ; R16 := R16(R17)
	175	[896]	TEST     	R16 0 ; if not R16 then PC := 214
	176	[896]	JMP      	214 ; PC := 214
	177	[900]	GETGLOBAL	R16 K1 ; R16 := 0x89326c93
	178	[900]	SELF     	R16 R16 K36 ; R17 := R16; R16 := R16[0xdd25e9d1]
	179	[900]	CALL     	R16 2 2 ; R16 := R16(R17)
	180	[901]	GETGLOBAL	R17 K1 ; R17 := 0x89326c93
	181	[901]	SELF     	R17 R17 K37 ; R18 := R17; R17 := R17[0x46a0ebf5]
	182	[901]	GETGLOBAL	R19 K38 ; R19 := 0x0469f296
	183	[901]	LOADK    	R20 K39 ; R20 := "BoardFromDojoCin"
	184	[901]	CALL     	R19 2 0 ; R19,... := R19(R20)
	185	[901]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	186	[902]	GETGLOBAL	R18 K3 ; R18 := 0x7b998233
	187	[902]	MOVE     	R19 R16 ; R19 := R16
	188	[902]	CALL     	R18 2 2 ; R18 := R18(R19)
	189	[902]	TEST     	R18 0 ; if not R18 then PC := 205
	190	[902]	JMP      	205 ; PC := 205
	191	[903]	GETGLOBAL	R18 K3 ; R18 := 0x7b998233
	192	[903]	MOVE     	R19 R17 ; R19 := R17
	193	[903]	CALL     	R18 2 2 ; R18 := R18(R19)
	194	[903]	TEST     	R18 1 ; if R18 then PC := 214
	195	[903]	JMP      	214 ; PC := 214
	196	[904]	SELF     	R18 R15 K40 ; R19 := R15; R18 := R15[0x26d544fc]
	197	[904]	GETGLOBAL	R20 K38 ; R20 := 0x0469f296
	198	[904]	LOADK    	R21 K41 ; R21 := "Tenno"
	199	[904]	CALL     	R20 2 0 ; R20,... := R20(R21)
	200	[904]	CALL     	R18 0 1 ; R18(R19,...)
	201	[905]	SELF     	R18 R17 K42 ; R19 := R17; R18 := R17[0x8eb2112d]
	202	[905]	LOADK    	R20 K43 ; R20 := "StartPlaying"
	203	[905]	CALL     	R18 3 1 ; R18(R19,R20)
	204	[906]	JMP      	214 ; PC := 214
	205	[908]	GETGLOBAL	R18 K44 ; R18 := 0x3d106989
	206	[908]	LOADK    	R19 K45 ; R19 := "BoardShip: playing mission cinematic, skipping"
	207	[908]	CALL     	R18 2 1 ; R18(R19)
	208	[909]	SELF     	R18 R15 K46 ; R19 := R15; R18 := R15[0x589ef1c1]
	209	[909]	SELF     	R20 R17 K12 ; R21 := R17; R20 := R17[0xd1586535]
	210	[909]	CALL     	R20 2 2 ; R20 := R20(R21)
	211	[909]	SELF     	R21 R17 K47 ; R22 := R17; R21 := R17[0xcb3851b8]
	212	[909]	CALL     	R21 2 0 ; R21,... := R21(R22)
	213	[909]	CALL     	R18 0 1 ; R18(R19,...)
	214	[913]	LOADK    	R9 := 0.000000
	215	[914]	LOADK    	R10 K48 ; R10 := 0.300000
	216	[915]	LT       	0 R9 K24 ; if R9 >= 1.000000 then PC := 235
	217	[915]	JMP      	235 ; PC := 235
	218	[916]	GETGLOBAL	R18 K25 ; R18 := 0x9bafffe3
	219	[916]	LOADK    	R19 := 1.000000
	220	[916]	LOADK    	R20 := 0.000000
	221	[916]	MOVE     	R21 R9 ; R21 := R9
	222	[916]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	223	[916]	MOVE     	R11 R18 ; R11 := R18
	224	[917]	SELF     	R18 R12 K26 ; R19 := R12; R18 := R12[0xb6df3e50]
	225	[917]	MOVE     	R20 R11 ; R20 := R11
	226	[917]	CALL     	R18 3 1 ; R18(R19,R20)
	227	[918]	GETGLOBAL	R18 K27 ; R18 := 0x67652851
	228	[918]	CALL     	R18 1 2 ; R18 := R18()
	229	[918]	DIV      	R18 R18 R10 ; R18 := R18 / R10
	230	[918]	ADD      	R9 R9 R18 ; R9 := R9 + R18
	231	[919]	GETGLOBAL	R18 K9 ; R18 := 0xcbd666e1
	232	[919]	LOADK    	R19 := 0.000000
	233	[919]	CALL     	R18 2 1 ; R18(R19)
	234	[919]	JMP      	216 ; PC := 216
	235	[921]	SELF     	R18 R12 K26 ; R19 := R12; R18 := R12[0xb6df3e50]
	236	[921]	LOADK    	R20 := 0.000000
	237	[921]	CALL     	R18 3 1 ; R18(R19,R20)
	238	[922]	RETURN   	R0 1 ; return 

function #18 <?:924,933> (26 instructions, 104 bytes at 00000211177D8810)
0 params, 2 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[925]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[925]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	3	[925]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[925]	TEST     	R0 0 ; if not R0 then PC := 17
	5	[925]	JMP      	17 ; PC := 17
	6	[926]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[926]	GETGLOBAL	R1 K2 ; R1 := mShipAvatar
	8	[926]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[926]	TEST     	R0 1 ; if R0 then PC := 17
	10	[926]	JMP      	17 ; PC := 17
	11	[927]	GETGLOBAL	R0 K2 ; R0 := mShipAvatar
	12	[927]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xde321e6f]
	13	[927]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[927]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf7d48ee0]
	15	[927]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[927]	SETGLOBALHASH	R0 K1 ; mShipSuit := R0
	17	[930]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	18	[930]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	19	[930]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[930]	TEST     	R0 1 ; if R0 then PC := 26
	21	[930]	JMP      	26 ; PC := 26
	22	[931]	GETGLOBAL	R0 K1 ; R0 := mShipSuit
	23	[931]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x68d708a7]
	24	[931]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	25	[931]	RETURN   	R0 0 ; return R0,... 
	26	[933]	RETURN   	R0 1 ; return 

function #19 <?:935,937> (8 instructions, 32 bytes at 000002117F5C1C30)
0 params, 2 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[936]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[936]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x62c81b76]
	3	[936]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[936]	GETTABLE 	R0 R0 K2 ; R0 := R0["mCrewShipLoadOut"]
	5	[936]	GETTABLE 	R0 R0 K3 ; R0 := R0["mShip"]
	6	[936]	GETTABLE 	R0 R0 K4 ; R0 := R0["mInteriorCustomization"]
	7	[936]	RETURN   	R0 2 ; return R0 
	8	[937]	RETURN   	R0 1 ; return 

function #20 <?:939,941> (7 instructions, 28 bytes at 0000021134D386F0)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[940]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[940]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x62c81b76]
	3	[940]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[940]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x999c1a14]
	5	[940]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	6	[940]	RETURN   	R0 0 ; return R0,... 
	7	[941]	RETURN   	R0 1 ; return 

function #21 <?:943,955> (25 instructions, 100 bytes at 0000021134D38780)
0 params, 5 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[944]	GETGLOBAL	R0 K0 ; R0 := mInteriorCustomization
	2	[944]	TEST     	R0 0 ; if not R0 then PC := 14
	3	[944]	JMP      	14 ; PC := 14
	4	[945]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[945]	CALL     	R0 1 2 ; R0 := R0()
	6	[946]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	7	[946]	MOVE     	R2 R0 ; R2 := R0
	8	[946]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[946]	TEST     	R1 1 ; if R1 then PC := 25
	10	[946]	JMP      	25 ; PC := 25
	11	[947]	GETTABLE 	R1 R0 K2 ; R1 := R0["mColors"]
	12	[947]	RETURN   	R1 2 ; return R1 
	13	[948]	JMP      	25 ; PC := 25
	14	[950]	GETUPVAL 	R1 U1 ; R1 := U1
	15	[950]	CALL     	R1 1 2 ; R1 := R1()
	16	[951]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	17	[951]	MOVE     	R3 R1 ; R3 := R1
	18	[951]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[951]	TEST     	R2 1 ; if R2 then PC := 25
	20	[951]	JMP      	25 ; PC := 25
	21	[952]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0x8e62760a]
	22	[952]	LOADK    	R4 := 0.000000
	23	[952]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	24	[952]	RETURN   	R2 0 ; return R2,... 
	25	[955]	RETURN   	R0 1 ; return 

function #22 <?:957,1079> (299 instructions, 1196 bytes at 0000021163905540)
1 param, 43 slots, 1 upvalue, 0 locals, 62 constants, 0 functions
	1	[958]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[958]	GETGLOBAL	R2 K1 ; R2 := mShipAvatar
	3	[958]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[958]	TEST     	R1 1 ; if R1 then PC := 11
	5	[958]	JMP      	11 ; PC := 11
	6	[958]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[958]	GETGLOBAL	R2 K2 ; R2 := mShipSuit
	8	[958]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[958]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[958]	JMP      	12 ; PC := 12
	11	[959]	RETURN   	R0 1 ; return 
	12	[962]	GETGLOBAL	R1 K3 ; R1 := mCosmeticsList
	13	[962]	GETTABLE 	R1 R1 K4 ; R1 := R1["CustomizationList"]
	14	[962]	GETTABLE 	R1 R1 K5 ; R1 := R1["mSelectedElement"]
	15	[963]	GETGLOBAL	R2 K6 ; R2 := mActiveState
	16	[963]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[963]	GETTABLE 	R3 R3 K7 ; R3 := R3["EQUIP_INV"]
	18	[963]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 22
	19	[963]	JMP      	22 ; PC := 22
	20	[964]	GETGLOBAL	R2 K8 ; R2 := mEquipment
	21	[964]	GETTABLE 	R1 R2 K5 ; R1 := R2["mSelectedElement"]
	22	[966]	GETTABLE 	R2 R1 K9 ; R2 := R1["mDecal"]
	23	[966]	TEST     	R2 0 ; if not R2 then PC := 115
	24	[966]	JMP      	115 ; PC := 115
	25	[967]	NEWTABLE 	R2 0 0 ; R2 := {}
	26	[968]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	27	[968]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x905bb2bd]
	28	[968]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[969]	LOADK    	R4 := 1.000000
	30	[969]	LEN      	R5 R3 ; R5 := # R3
	31	[969]	LOADK    	R6 := 1.000000
	32	[969]	FORPREP  	R4 51 ; R4 -= R6; PC := 51
	33	[970]	GETGLOBAL	R8 K11 ; R8 := 0x33bdd652
	34	[970]	GETTABLE 	R8 R8 K12 ; R8 := R8[0x23d5322f]
	35	[970]	MOVE     	R9 R2 ; R9 := R2
	36	[970]	GETTABLE 	R10 R3 R7 ; R10 := R3[R7]
	37	[970]	CALL     	R8 3 1 ; R8(R9,R10)
	38	[971]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	39	[971]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x905bb2bd]
	40	[971]	CALL     	R8 2 2 ; R8 := R8(R9)
	41	[972]	LOADK    	R9 := 1.000000
	42	[972]	LEN      	R10 R8 ; R10 := # R8
	43	[972]	LOADK    	R11 := 1.000000
	44	[972]	FORPREP  	R9 50 ; R9 -= R11; PC := 50
	45	[973]	GETGLOBAL	R13 K11 ; R13 := 0x33bdd652
	46	[973]	GETTABLE 	R13 R13 K12 ; R13 := R13[0x23d5322f]
	47	[973]	MOVE     	R14 R2 ; R14 := R2
	48	[973]	GETTABLE 	R15 R8 R12 ; R15 := R8[R12]
	49	[973]	CALL     	R13 3 1 ; R13(R14,R15)
	50	[972]	FORLOOP  	R9 45 ; R9 += R11; if R9 <= R10 then begin PC := 45; R12 := R9 end
	51	[969]	FORLOOP  	R4 33 ; R4 += R6; if R4 <= R5 then begin PC := 33; R7 := R4 end
	52	[976]	LOADK    	R13 := 1.000000
	53	[976]	LEN      	R14 R2 ; R14 := # R2
	54	[976]	LOADK    	R15 := 1.000000
	55	[976]	FORPREP  	R13 113 ; R13 -= R15; PC := 113
	56	[977]	GETTABLE 	R17 R2 R16 ; R17 := R2[R16]
	57	[977]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x819abd48]
	58	[977]	LOADK    	R19 := 0.000000
	59	[977]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	60	[978]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	61	[978]	MOVE     	R19 R17 ; R19 := R17
	62	[978]	CALL     	R18 2 2 ; R18 := R18(R19)
	63	[978]	TEST     	R18 1 ; if R18 then PC := 113
	64	[978]	JMP      	113 ; PC := 113
	65	[978]	SELF     	R18 R17 K14 ; R19 := R17; R18 := R17[0xf2deaf69]
	66	[978]	GETGLOBAL	R20 K15 ; R20 := 0x18661b99
	67	[978]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	68	[978]	TEST     	R18 0 ; if not R18 then PC := 113
	69	[978]	JMP      	113 ; PC := 113
	70	[979]	LOADNIL  	R18 R19 ; R18 := R19 := nil
	71	[981]	EQ       	1 R0 K16 ; if R0 == nil then PC := 76
	72	[981]	JMP      	76 ; PC := 76
	73	[982]	GETTABLE 	R18 R0 K17 ; R18 := R0["Icon"]
	74	[983]	GETTABLE 	R19 R0 K18 ; R19 := R0["StoreItem"]
	75	[983]	JMP      	90 ; PC := 90
	76	[985]	GETTABLE 	R20 R1 K19 ; R20 := R1["ItemSelectionData"]
	77	[985]	GETTABLE 	R19 R20 K20 ; R19 := R20["CurrSelection"]
	78	[986]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	79	[986]	MOVE     	R21 R19 ; R21 := R19
	80	[986]	CALL     	R20 2 2 ; R20 := R20(R21)
	81	[986]	TEST     	R20 1 ; if R20 then PC := 89
	82	[986]	JMP      	89 ; PC := 89
	83	[987]	GETGLOBAL	R20 K21 ; R20 := 0xb009bbc6
	84	[987]	SELF     	R21 R19 K22 ; R22 := R19; R21 := R19[0x056dcf06]
	85	[987]	CALL     	R21 2 0 ; R21,... := R21(R22)
	86	[987]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	87	[987]	MOVE     	R18 R20 ; R18 := R20
	88	[987]	JMP      	90 ; PC := 90
	89	[990]	GETGLOBAL	R18 K23 ; R18 := 0x3894e23c
	90	[993]	GETGLOBAL	R20 K24 ; R20 := 0x6c97a788
	91	[993]	GETTABLE 	R20 R20 K25 ; R20 := R20[0x4b36b274]
	92	[993]	CALL     	R20 1 2 ; R20 := R20()
	93	[994]	EQ       	1 R19 K16 ; if R19 == nil then PC := 98
	94	[994]	JMP      	98 ; PC := 98
	95	[995]	SELF     	R21 R19 K27 ; R22 := R19; R21 := R19[0xf278f8a1]
	96	[995]	CALL     	R21 2 2 ; R21 := R21(R22)
	97	[995]	SETTABLE 	R20 K26 R21 ; R20["mItemType"] := R21
	98	[997]	GETGLOBAL	R21 K24 ; R21 := 0x6c97a788
	99	[997]	GETTABLE 	R21 R21 K28 ; R21 := R21[0x118303e2]
	100	[997]	GETTABLE 	R22 R2 R16 ; R22 := R2[R16]
	101	[997]	MOVE     	R23 R18 ; R23 := R18
	102	[997]	CALL     	R21 3 1 ; R21(R22,R23)
	103	[998]	GETGLOBAL	R21 K29 ; R21 := 0x25d99d89
	104	[998]	SELF     	R21 R21 K30 ; R22 := R21; R21 := R21[0x62c81b76]
	105	[998]	CALL     	R21 2 2 ; R21 := R21(R22)
	106	[998]	SELF     	R21 R21 K31 ; R22 := R21; R21 := R21[0xe7676b10]
	107	[998]	MOVE     	R23 R20 ; R23 := R20
	108	[998]	CALL     	R21 3 1 ; R21(R22,R23)
	109	[999]	GETGLOBAL	R21 K2 ; R21 := mShipSuit
	110	[999]	SELF     	R21 R21 K32 ; R22 := R21; R21 := R21[0x3e4d4598]
	111	[999]	MOVE     	R23 R20 ; R23 := R20
	112	[999]	CALL     	R21 3 1 ; R21(R22,R23)
	113	[976]	FORLOOP  	R13 56 ; R13 += R15; if R13 <= R14 then begin PC := 56; R16 := R13 end
	114	[1001]	JMP      	299 ; PC := 299
	115	[1003]	LOADNIL  	R21 R21 ; R21 := nil
	116	[1004]	GETTABLE 	R22 R1 K33 ; R22 := R1["mSlot"]
	117	[1006]	LOADNIL  	R23 R24 ; R23 := R24 := nil
	118	[1008]	EQ       	1 R0 K16 ; if R0 == nil then PC := 166
	119	[1008]	JMP      	166 ; PC := 166
	120	[1009]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	121	[1009]	GETTABLE 	R26 R0 K34 ; R26 := R0["CustomizationType"]
	122	[1009]	CALL     	R25 2 2 ; R25 := R25(R26)
	123	[1009]	TEST     	R25 1 ; if R25 then PC := 130
	124	[1009]	JMP      	130 ; PC := 130
	125	[1010]	GETTABLE 	R25 R0 K34 ; R25 := R0["CustomizationType"]
	126	[1010]	SELF     	R25 R25 K27 ; R26 := R25; R25 := R25[0xf278f8a1]
	127	[1010]	CALL     	R25 2 2 ; R25 := R25(R26)
	128	[1010]	MOVE     	R23 R25 ; R23 := R25
	129	[1010]	JMP      	159 ; PC := 159
	130	[1011]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	131	[1011]	GETTABLE 	R26 R0 K35 ; R26 := R0["ItemType"]
	132	[1011]	CALL     	R25 2 2 ; R25 := R25(R26)
	133	[1011]	TEST     	R25 1 ; if R25 then PC := 137
	134	[1011]	JMP      	137 ; PC := 137
	135	[1012]	GETTABLE 	R23 R0 K35 ; R23 := R0["ItemType"]
	136	[1012]	JMP      	159 ; PC := 159
	137	[1013]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	138	[1013]	GETTABLE 	R26 R0 K36 ; R26 := R0["Type"]
	139	[1013]	CALL     	R25 2 2 ; R25 := R25(R26)
	140	[1013]	TEST     	R25 1 ; if R25 then PC := 144
	141	[1013]	JMP      	144 ; PC := 144
	142	[1014]	GETTABLE 	R23 R0 K36 ; R23 := R0["Type"]
	143	[1014]	JMP      	159 ; PC := 159
	144	[1015]	GETTABLE 	R25 R0 K37 ; R25 := R0["mPurchasedInfo"]
	145	[1015]	EQ       	1 R25 K16 ; if R25 == nil then PC := 159
	146	[1015]	JMP      	159 ; PC := 159
	147	[1015]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	148	[1015]	GETTABLE 	R26 R0 K37 ; R26 := R0["mPurchasedInfo"]
	149	[1015]	GETTABLE 	R26 R26 K38 ; R26 := R26["UID"]
	150	[1015]	CALL     	R25 2 2 ; R25 := R25(R26)
	151	[1015]	TEST     	R25 1 ; if R25 then PC := 159
	152	[1015]	JMP      	159 ; PC := 159
	153	[1015]	GETTABLE 	R25 R0 K37 ; R25 := R0["mPurchasedInfo"]
	154	[1015]	GETTABLE 	R25 R25 K38 ; R25 := R25["UID"]
	155	[1015]	EQ       	1 R25 K39 ; if R25 == "" then PC := 159
	156	[1015]	JMP      	159 ; PC := 159
	157	[1016]	GETTABLE 	R25 R0 K37 ; R25 := R0["mPurchasedInfo"]
	158	[1016]	GETTABLE 	R23 R25 K38 ; R23 := R25["UID"]
	159	[1019]	GETTABLE 	R25 R0 K40 ; R25 := R0["RawItem"]
	160	[1019]	EQ       	1 R25 K16 ; if R25 == nil then PC := 194
	161	[1019]	JMP      	194 ; PC := 194
	162	[1020]	GETTABLE 	R25 R0 K40 ; R25 := R0["RawItem"]
	163	[1020]	GETTABLE 	R25 R25 K41 ; R25 := R25["Item"]
	164	[1020]	GETTABLE 	R24 R25 K42 ; R24 := R25["mUpgradeFingerprint"]
	165	[1021]	JMP      	194 ; PC := 194
	166	[1023]	LOADNIL  	R25 R25 ; R25 := nil
	167	[1024]	GETTABLE 	R26 R1 K19 ; R26 := R1["ItemSelectionData"]
	168	[1024]	EQ       	1 R26 K16 ; if R26 == nil then PC := 173
	169	[1024]	JMP      	173 ; PC := 173
	170	[1025]	GETTABLE 	R26 R1 K19 ; R26 := R1["ItemSelectionData"]
	171	[1025]	GETTABLE 	R25 R26 K20 ; R25 := R26["CurrSelection"]
	172	[1025]	JMP      	179 ; PC := 179
	173	[1026]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	174	[1026]	GETTABLE 	R27 R1 K43 ; R27 := R1["mStoreItem"]
	175	[1026]	CALL     	R26 2 2 ; R26 := R26(R27)
	176	[1026]	TEST     	R26 1 ; if R26 then PC := 179
	177	[1026]	JMP      	179 ; PC := 179
	178	[1027]	GETTABLE 	R25 R1 K43 ; R25 := R1["mStoreItem"]
	179	[1029]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	180	[1029]	MOVE     	R27 R25 ; R27 := R25
	181	[1029]	CALL     	R26 2 2 ; R26 := R26(R27)
	182	[1029]	TEST     	R26 1 ; if R26 then PC := 189
	183	[1029]	JMP      	189 ; PC := 189
	184	[1030]	GETGLOBAL	R26 K21 ; R26 := 0xb009bbc6
	185	[1030]	SELF     	R27 R25 K27 ; R28 := R25; R27 := R25[0xf278f8a1]
	186	[1030]	CALL     	R27 2 0 ; R27,... := R27(R28)
	187	[1030]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	188	[1030]	MOVE     	R23 R26 ; R23 := R26
	189	[1032]	GETTABLE 	R26 R1 K41 ; R26 := R1["Item"]
	190	[1032]	EQ       	1 R26 K16 ; if R26 == nil then PC := 194
	191	[1032]	JMP      	194 ; PC := 194
	192	[1033]	GETTABLE 	R26 R1 K41 ; R26 := R1["Item"]
	193	[1033]	GETTABLE 	R24 R26 K42 ; R24 := R26["mUpgradeFingerprint"]
	194	[1037]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	195	[1037]	MOVE     	R27 R23 ; R27 := R23
	196	[1037]	CALL     	R26 2 2 ; R26 := R26(R27)
	197	[1037]	TEST     	R26 1 ; if R26 then PC := 238
	198	[1037]	JMP      	238 ; PC := 238
	199	[1038]	GETGLOBAL	R26 K44 ; R26 := 0x89326c93
	200	[1038]	SELF     	R26 R26 K45 ; R27 := R26; R26 := R26[0x765dad71]
	201	[1038]	GETGLOBAL	R28 K21 ; R28 := 0xb009bbc6
	202	[1038]	MOVE     	R29 R23 ; R29 := R23
	203	[1038]	CALL     	R28 2 2 ; R28 := R28(R29)
	204	[1038]	GETGLOBAL	R29 K2 ; R29 := mShipSuit
	205	[1038]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	206	[1038]	MOVE     	R21 R26 ; R21 := R26
	207	[1039]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	208	[1039]	MOVE     	R27 R21 ; R27 := R21
	209	[1039]	CALL     	R26 2 2 ; R26 := R26(R27)
	210	[1039]	TEST     	R26 1 ; if R26 then PC := 235
	211	[1039]	JMP      	235 ; PC := 235
	212	[1039]	EQ       	1 R22 K16 ; if R22 == nil then PC := 235
	213	[1039]	JMP      	235 ; PC := 235
	214	[1040]	GETGLOBAL	R26 K46 ; R26 := 0x3d106989
	215	[1040]	LOADK    	R27 K47 ; R27 := "Created customization of type: "
	216	[1040]	GETGLOBAL	R28 K48 ; R28 := 0x64fb1586
	217	[1040]	SELF     	R29 R21 K49 ; R30 := R21; R29 := R21[0xed4e0128]
	218	[1040]	CALL     	R29 2 0 ; R29,... := R29(R30)
	219	[1040]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	220	[1040]	LOADK    	R29 K50 ; R29 := " for "
	221	[1040]	GETGLOBAL	R30 K48 ; R30 := 0x64fb1586
	222	[1040]	MOVE     	R31 R22 ; R31 := R22
	223	[1040]	CALL     	R30 2 2 ; R30 := R30(R31)
	224	[1040]	CONCAT   	R27 R27 R30 ; R27 := R27 .. R28 .. R29 .. R30
	225	[1040]	CALL     	R26 2 1 ; R26(R27)
	226	[1041]	SELF     	R26 R21 K51 ; R27 := R21; R26 := R21[0x63af7fef]
	227	[1041]	MOVE     	R28 R22 ; R28 := R22
	228	[1041]	CALL     	R26 3 1 ; R26(R27,R28)
	229	[1042]	EQ       	1 R24 K16 ; if R24 == nil then PC := 238
	230	[1042]	JMP      	238 ; PC := 238
	231	[1043]	SELF     	R26 R21 K52 ; R27 := R21; R26 := R21[0x6868f7f8]
	232	[1043]	MOVE     	R28 R24 ; R28 := R24
	233	[1043]	CALL     	R26 3 1 ; R26(R27,R28)
	234	[1044]	JMP      	238 ; PC := 238
	235	[1046]	GETGLOBAL	R26 K46 ; R26 := 0x3d106989
	236	[1046]	LOADK    	R27 K53 ; R27 := "Couldn't make it!"
	237	[1046]	CALL     	R26 2 1 ; R26(R27)
	238	[1050]	EQ       	0 R22 K16 ; if R22 ~= nil then PC := 241
	239	[1050]	JMP      	241 ; PC := 241
	240	[1051]	RETURN   	R0 1 ; return 
	241	[1054]	GETGLOBAL	R26 K2 ; R26 := mShipSuit
	242	[1054]	SELF     	R26 R26 K54 ; R27 := R26; R26 := R26[0x0ad758cb]
	243	[1054]	CALL     	R26 2 2 ; R26 := R26(R27)
	244	[1056]	NEWTABLE 	R27 0 0 ; R27 := {}
	245	[1058]	GETGLOBAL	R28 K55 ; R28 := gLotusSuitCustomizationType
	246	[1060]	LOADK    	R29 := 0.000000
	247	[1060]	SUB      	R30 R26 K56 ; R30 := R26 - 1.000000
	248	[1060]	LOADK    	R31 := 1.000000
	249	[1060]	FORPREP  	R29 273 ; R29 -= R31; PC := 273
	250	[1061]	GETGLOBAL	R33 K2 ; R33 := mShipSuit
	251	[1061]	SELF     	R33 R33 K57 ; R34 := R33; R33 := R33[0xfef27732]
	252	[1061]	MOVE     	R35 R32 ; R35 := R32
	253	[1061]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	254	[1062]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	255	[1062]	MOVE     	R35 R33 ; R35 := R33
	256	[1062]	CALL     	R34 2 2 ; R34 := R34(R35)
	257	[1062]	TEST     	R34 1 ; if R34 then PC := 273
	258	[1062]	JMP      	273 ; PC := 273
	259	[1062]	SELF     	R34 R33 K14 ; R35 := R33; R34 := R33[0xf2deaf69]
	260	[1062]	MOVE     	R36 R28 ; R36 := R28
	261	[1062]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	262	[1062]	TEST     	R34 0 ; if not R34 then PC := 273
	263	[1062]	JMP      	273 ; PC := 273
	264	[1063]	SELF     	R34 R33 K58 ; R35 := R33; R34 := R33[0xf4f49d1b]
	265	[1063]	CALL     	R34 2 2 ; R34 := R34(R35)
	266	[1063]	EQ       	0 R34 R22 ; if R34 ~= R22 then PC := 273
	267	[1063]	JMP      	273 ; PC := 273
	268	[1064]	GETGLOBAL	R34 K11 ; R34 := 0x33bdd652
	269	[1064]	GETTABLE 	R34 R34 K12 ; R34 := R34[0x23d5322f]
	270	[1064]	MOVE     	R35 R27 ; R35 := R27
	271	[1064]	MOVE     	R36 R33 ; R36 := R33
	272	[1064]	CALL     	R34 3 1 ; R34(R35,R36)
	273	[1060]	FORLOOP  	R29 250 ; R29 += R31; if R29 <= R30 then begin PC := 250; R32 := R29 end
	274	[1069]	GETGLOBAL	R34 K59 ; R34 := 0xcfc01047
	275	[1069]	MOVE     	R35 R27 ; R35 := R27
	276	[1069]	CALL     	R34 2 4 ; R34,R35,R36 := R34(R35)
	277	[1069]	JMP      	288 ; PC := 288
	278	[1070]	GETGLOBAL	R39 K0 ; R39 := 0x7b998233
	279	[1070]	MOVE     	R40 R38 ; R40 := R38
	280	[1070]	CALL     	R39 2 2 ; R39 := R39(R40)
	281	[1070]	TEST     	R39 1 ; if R39 then PC := 288
	282	[1070]	JMP      	288 ; PC := 288
	283	[1071]	GETGLOBAL	R39 K2 ; R39 := mShipSuit
	284	[1071]	SELF     	R39 R39 K60 ; R40 := R39; R39 := R39[0x12dd9da2]
	285	[1071]	MOVE     	R41 R38 ; R41 := R38
	286	[1071]	OP_LOADBOOL	R42 1 0 ; R42 := true
	287	[1071]	CALL     	R39 4 1 ; R39(R40,R41,R42)
	288	[1069]	TFORLOOP 	R34 2 ; R37,R38 := R34(R35,R36); if R37 ~= nil then begin PC = 278; R36 := R37 end
	289	[1072]	JMP      	278 ; PC := 278
	290	[1075]	GETGLOBAL	R39 K0 ; R39 := 0x7b998233
	291	[1075]	MOVE     	R40 R21 ; R40 := R21
	292	[1075]	CALL     	R39 2 2 ; R39 := R39(R40)
	293	[1075]	TEST     	R39 1 ; if R39 then PC := 299
	294	[1075]	JMP      	299 ; PC := 299
	295	[1076]	GETGLOBAL	R39 K2 ; R39 := mShipSuit
	296	[1076]	SELF     	R39 R39 K61 ; R40 := R39; R39 := R39[0x5e6704ff]
	297	[1076]	MOVE     	R41 R21 ; R41 := R21
	298	[1076]	CALL     	R39 3 1 ; R39(R40,R41)
	299	[1079]	RETURN   	R0 1 ; return 

function #23 <?:1081,1102> (72 instructions, 288 bytes at 00000211639055D0)
1 param, 9 slots, 2 upvalues, 0 locals, 27 constants, 0 functions
	1	[1082]	GETGLOBAL	R1 K0 ; R1 := mActiveState
	2	[1082]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1082]	GETTABLE 	R2 R2 K1 ; R2 := R2["WEAPON_INV"]
	4	[1082]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 64
	5	[1082]	JMP      	64 ; PC := 64
	6	[1083]	TESTSET  	R1 R0 1 ; if R0 then PC := 10 else R1 := R0 
	7	[1083]	JMP      	10 ; PC := 10
	8	[1083]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	9	[1083]	GETTABLE 	R1 R1 K3 ; R1 := R1["mSelectedElement"]
	10	[1084]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	11	[1084]	MOVE     	R3 R1 ; R3 := R1
	12	[1084]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1084]	TEST     	R2 1 ; if R2 then PC := 72
	14	[1084]	JMP      	72 ; PC := 72
	15	[1084]	GETTABLE 	R2 R1 K5 ; R2 := R1["Slot"]
	16	[1084]	EQ       	1 R2 K6 ; if R2 == nil then PC := 72
	17	[1084]	JMP      	72 ; PC := 72
	18	[1085]	GETGLOBAL	R2 K7 ; R2 := mCurrentShip
	19	[1085]	GETTABLE 	R2 R2 K8 ; R2 := R2["ShipInfo"]
	20	[1085]	TEST     	R2 0 ; if not R2 then PC := 72
	21	[1085]	JMP      	72 ; PC := 72
	22	[1086]	GETGLOBAL	R2 K7 ; R2 := mCurrentShip
	23	[1086]	GETTABLE 	R2 R2 K8 ; R2 := R2["ShipInfo"]
	24	[1086]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x73a8846a]
	25	[1086]	GETTABLE 	R4 R1 K10 ; R4 := R1["Hand"]
	26	[1086]	GETTABLE 	R5 R1 K5 ; R5 := R1["Slot"]
	27	[1086]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	28	[1087]	GETTABLE 	R3 R1 K12 ; R3 := R1["ItemType"]
	29	[1087]	SETTABLE 	R2 K11 R3 ; R2["mItemType"] := R3
	30	[1088]	GETTABLE 	R3 R1 K13 ; R3 := R1["UID"]
	31	[1088]	EQ       	1 R3 K6 ; if R3 == nil then PC := 36
	32	[1088]	JMP      	36 ; PC := 36
	33	[1089]	GETTABLE 	R3 R2 K14 ; R3 := R2["mItemId"]
	34	[1089]	GETTABLE 	R4 R1 K13 ; R4 := R1["UID"]
	35	[1089]	SETTABLE 	R3 K15 R4 ; R3["mId"] := R4
	36	[1091]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	37	[1091]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0x25a6e75e]
	38	[1091]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[1091]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xdf943d05]
	40	[1091]	GETGLOBAL	R5 K7 ; R5 := mCurrentShip
	41	[1091]	GETTABLE 	R5 R5 K19 ; R5 := R5["ID"]
	42	[1091]	GETTABLE 	R6 R1 K10 ; R6 := R1["Hand"]
	43	[1091]	GETTABLE 	R7 R1 K5 ; R7 := R1["Slot"]
	44	[1091]	MOVE     	R8 R2 ; R8 := R2
	45	[1091]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	46	[1092]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	47	[1092]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0x41f4ba99]
	48	[1092]	CALL     	R3 2 1 ; R3(R4)
	49	[1093]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	50	[1093]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0x62c81b76]
	51	[1093]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[1093]	GETTABLE 	R3 R3 K23 ; R3 := R3["mCrewShipLoadOut"]
	53	[1093]	SETGLOBALHASH	R3 K21 ; mCurrentLoadout := R3
	54	[1094]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	55	[1094]	GETGLOBAL	R4 K24 ; R4 := mShipSuit
	56	[1094]	CALL     	R3 2 2 ; R3 := R3(R4)
	57	[1094]	TEST     	R3 1 ; if R3 then PC := 72
	58	[1094]	JMP      	72 ; PC := 72
	59	[1095]	GETGLOBAL	R3 K24 ; R3 := mShipSuit
	60	[1095]	SELF     	R3 R3 K25 ; R4 := R3; R3 := R3[0x364c4d52]
	61	[1095]	GETGLOBAL	R5 K21 ; R5 := mCurrentLoadout
	62	[1095]	CALL     	R3 3 1 ; R3(R4,R5)
	63	[1098]	JMP      	72 ; PC := 72
	64	[1099]	GETGLOBAL	R3 K0 ; R3 := mActiveState
	65	[1099]	GETUPVAL 	R4 U0 ; R4 := U0
	66	[1099]	GETTABLE 	R4 R4 K26 ; R4 := R4["EQUIP_INV"]
	67	[1099]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 72
	68	[1099]	JMP      	72 ; PC := 72
	69	[1100]	GETUPVAL 	R3 U1 ; R3 := U1
	70	[1100]	OP_LOADBOOL	R4 1 0 ; R4 := true
	71	[1100]	CALL     	R3 2 1 ; R3(R4)
	72	[1102]	RETURN   	R0 1 ; return 

function #24 <?:1104,1158> (132 instructions, 528 bytes at 000002117FDC5140)
2 params, 11 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[1105]	GETGLOBAL	R2 K0 ; R2 := mCleanUpDone
	2	[1105]	TEST     	R2 0 ; if not R2 then PC := 5
	3	[1105]	JMP      	5 ; PC := 5
	4	[1106]	RETURN   	R0 1 ; return 
	5	[1109]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	6	[1109]	GETGLOBAL	R3 K2 ; R3 := mVignetteMovie
	7	[1109]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[1109]	TEST     	R2 0 ; if not R2 then PC := 15
	9	[1109]	JMP      	15 ; PC := 15
	10	[1110]	GETGLOBAL	R2 K3 ; R2 := 0x9ba7909f
	11	[1110]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xbcfb64ab]
	12	[1110]	GETGLOBAL	R4 K5 ; R4 := 0x6e48c770
	13	[1110]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	14	[1110]	SETGLOBALHASH	R2 K2 ; mVignetteMovie := R2
	15	[1112]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	16	[1112]	GETGLOBAL	R3 K2 ; R3 := mVignetteMovie
	17	[1112]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[1112]	TEST     	R2 1 ; if R2 then PC := 35
	19	[1112]	JMP      	35 ; PC := 35
	20	[1113]	GETGLOBAL	R2 K2 ; R2 := mVignetteMovie
	21	[1113]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xf56f3887]
	22	[1113]	LOADK    	R4 K7 ; R4 := "TransitionOut"
	23	[1113]	NEWTABLE 	R5 1 0 ; R5 := {}
	24	[1113]	LOADK    	R6 K8 ; R6 := ""
	25	[1113]	GETUPVAL 	R7 U0 ; R7 := U0
	26	[1113]	GETTABLE 	R7 R7 K9 ; R7 := R7[0x06d055f9]
	27	[1113]	TESTSET  	R8 R0 1 ; if R0 then PC := 30 else R8 := R0 
	28	[1113]	JMP      	30 ; PC := 30
	29	[1113]	MOVE     	R8 R1 ; R8 := R1
	30	[1113]	LOADK    	R9 K10 ; R9 := "true"
	31	[1113]	LOADK    	R10 K11 ; R10 := "false"
	32	[1113]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	33	[1113]	SETLIST  	R5 0 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 0
	34	[1113]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	35	[1116]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	36	[1116]	GETGLOBAL	R3 K12 ; R3 := _T
	37	[1116]	GETTABLE 	R3 R3 K13 ; R3 := R3["DisableUIInput"]
	38	[1116]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[1116]	TEST     	R2 1 ; if R2 then PC := 44
	40	[1116]	JMP      	44 ; PC := 44
	41	[1117]	GETGLOBAL	R2 K12 ; R2 := _T
	42	[1117]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x80172c74]
	43	[1117]	CALL     	R2 1 1 ; R2()
	44	[1120]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	45	[1120]	GETGLOBAL	R3 K15 ; R3 := mChildMovie
	46	[1120]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[1120]	TEST     	R2 1 ; if R2 then PC := 52
	48	[1120]	JMP      	52 ; PC := 52
	49	[1121]	GETGLOBAL	R2 K15 ; R2 := mChildMovie
	50	[1121]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x32302b4a]
	51	[1121]	CALL     	R2 2 1 ; R2(R3)
	52	[1124]	GETGLOBAL	R2 K17 ; R2 := 0xae91e43b
	53	[1124]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xaf5300dc]
	54	[1124]	LOADK    	R4 K19 ; R4 := "Camera"
	55	[1124]	CALL     	R2 3 1 ; R2(R3,R4)
	56	[1126]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	57	[1126]	GETGLOBAL	R3 K20 ; R3 := mAvatar
	58	[1126]	CALL     	R2 2 2 ; R2 := R2(R3)
	59	[1126]	TEST     	R2 1 ; if R2 then PC := 87
	60	[1126]	JMP      	87 ; PC := 87
	61	[1127]	GETGLOBAL	R2 K20 ; R2 := mAvatar
	62	[1127]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x0b4bcfb6]
	63	[1127]	CALL     	R2 2 2 ; R2 := R2(R3)
	64	[1128]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	65	[1128]	MOVE     	R4 R2 ; R4 := R2
	66	[1128]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[1128]	TEST     	R3 1 ; if R3 then PC := 87
	68	[1128]	JMP      	87 ; PC := 87
	69	[1129]	SELF     	R3 R2 K22 ; R4 := R2; R3 := R2[0xa72afc7e]
	70	[1129]	CALL     	R3 2 2 ; R3 := R3(R4)
	71	[1130]	SELF     	R4 R2 K23 ; R5 := R2; R4 := R2[0x68f07b6a]
	72	[1130]	LOADK    	R6 := 0.000000
	73	[1130]	CALL     	R4 3 1 ; R4(R5,R6)
	74	[1131]	SELF     	R4 R2 K24 ; R5 := R2; R4 := R2[0x14c7f7dd]
	75	[1131]	LOADNIL  	R6 R6 ; R6 := nil
	76	[1131]	LOADK    	R7 := 0.000000
	77	[1131]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	78	[1132]	SELF     	R4 R2 K23 ; R5 := R2; R4 := R2[0x68f07b6a]
	79	[1132]	MOVE     	R6 R3 ; R6 := R3
	80	[1132]	CALL     	R4 3 1 ; R4(R5,R6)
	81	[1134]	GETGLOBAL	R4 K25 ; R4 := 0x89326c93
	82	[1134]	SELF     	R4 R4 K26 ; R5 := R4; R4 := R4[0x7c1a0374]
	83	[1134]	CALL     	R4 2 2 ; R4 := R4(R5)
	84	[1134]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0xb6df3e50]
	85	[1134]	LOADK    	R6 := 0.000000
	86	[1134]	CALL     	R4 3 1 ; R4(R5,R6)
	87	[1138]	TEST     	R0 1 ; if R0 then PC := 93
	88	[1138]	JMP      	93 ; PC := 93
	89	[1139]	GETUPVAL 	R4 U0 ; R4 := U0
	90	[1139]	GETTABLE 	R4 R4 K28 ; R4 := R4[0x659d451f]
	91	[1139]	GETGLOBAL	R5 K29 ; R5 := 0xb607efe1
	92	[1139]	CALL     	R4 2 1 ; R4(R5)
	93	[1141]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	94	[1141]	GETGLOBAL	R5 K30 ; R5 := mMenuLoop
	95	[1141]	CALL     	R4 2 2 ; R4 := R4(R5)
	96	[1141]	TEST     	R4 1 ; if R4 then PC := 102
	97	[1141]	JMP      	102 ; PC := 102
	98	[1142]	GETGLOBAL	R4 K30 ; R4 := mMenuLoop
	99	[1142]	SELF     	R4 R4 K31 ; R5 := R4; R4 := R4[0x6cf1e476]
	100	[1142]	OP_LOADBOOL	R6 1 0 ; R6 := true
	101	[1142]	CALL     	R4 3 1 ; R4(R5,R6)
	102	[1144]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	103	[1144]	GETGLOBAL	R5 K32 ; R5 := mMenuMusic
	104	[1144]	CALL     	R4 2 2 ; R4 := R4(R5)
	105	[1144]	TEST     	R4 1 ; if R4 then PC := 111
	106	[1144]	JMP      	111 ; PC := 111
	107	[1145]	GETGLOBAL	R4 K32 ; R4 := mMenuMusic
	108	[1145]	SELF     	R4 R4 K31 ; R5 := R4; R4 := R4[0x6cf1e476]
	109	[1145]	OP_LOADBOOL	R6 1 0 ; R6 := true
	110	[1145]	CALL     	R4 3 1 ; R4(R5,R6)
	111	[1148]	TEST     	R0 0 ; if not R0 then PC := 130
	112	[1148]	JMP      	130 ; PC := 130
	113	[1149]	GETUPVAL 	R4 U1 ; R4 := U1
	114	[1149]	GETTABLE 	R4 R4 K33 ; R4 := R4[0x9e3d3434]
	115	[1149]	OP_LOADBOOL	R5 0 0 ; R5 := false
	116	[1149]	CALL     	R4 2 1 ; R4(R5)
	117	[1151]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	118	[1151]	GETGLOBAL	R5 K12 ; R5 := _T
	119	[1151]	GETTABLE 	R5 R5 K34 ; R5 := R5["mTrigger"]
	120	[1151]	CALL     	R4 2 2 ; R4 := R4(R5)
	121	[1151]	TEST     	R4 1 ; if R4 then PC := 130
	122	[1151]	JMP      	130 ; PC := 130
	123	[1152]	GETGLOBAL	R4 K12 ; R4 := _T
	124	[1152]	GETTABLE 	R4 R4 K34 ; R4 := R4["mTrigger"]
	125	[1152]	SELF     	R4 R4 K35 ; R5 := R4; R4 := R4[0x8eb2112d]
	126	[1152]	LOADK    	R6 K36 ; R6 := "Close"
	127	[1152]	CALL     	R4 3 1 ; R4(R5,R6)
	128	[1153]	GETGLOBAL	R4 K12 ; R4 := _T
	129	[1153]	SETTABLE 	R4 K34 K37 ; R4["mTrigger"] := nil
	130	[1157]	OP_LOADBOOL	R4 1 0 ; R4 := true
	131	[1157]	SETGLOBALHASH	R4 K0 ; mCleanUpDone := R4
	132	[1158]	RETURN   	R0 1 ; return 

function #25 <?:1160,1206> (110 instructions, 440 bytes at 000002117FDC51D0)
0 params, 6 slots, 2 upvalues, 0 locals, 31 constants, 0 functions
	1	[1161]	GETGLOBAL	R0 K0 ; R0 := mShuttingDown
	2	[1161]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[1161]	JMP      	5 ; PC := 5
	4	[1162]	RETURN   	R0 1 ; return 
	5	[1164]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[1164]	SETGLOBALHASH	R0 K0 ; mShuttingDown := R0
	7	[1166]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	8	[1166]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xc02f2cb8]
	9	[1166]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[1166]	CALL     	R0 3 1 ; R0(R1,R2)
	11	[1168]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[1168]	OP_LOADBOOL	R1 1 0 ; R1 := true
	13	[1168]	CALL     	R0 2 1 ; R0(R1)
	14	[1170]	GETGLOBAL	R0 K3 ; R0 := _T
	15	[1170]	SETTABLE 	R0 K4 K5 ; R0["gToolTip"] := nil
	16	[1171]	GETGLOBAL	R0 K3 ; R0 := _T
	17	[1171]	SETTABLE 	R0 K6 K5 ; R0["InfoPopup_Data"] := nil
	18	[1172]	GETGLOBAL	R0 K3 ; R0 := _T
	19	[1172]	SETTABLE 	R0 K7 K5 ; R0["InfoPopup_Grid"] := nil
	20	[1174]	GETGLOBAL	R0 K3 ; R0 := _T
	21	[1174]	GETTABLE 	R0 R0 K8 ; R0 := R0["DeferSquadCrewShipLoad"]
	22	[1174]	TEST     	R0 0 ; if not R0 then PC := 34
	23	[1174]	JMP      	34 ; PC := 34
	24	[1174]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	25	[1174]	GETGLOBAL	R1 K3 ; R1 := _T
	26	[1174]	GETTABLE 	R1 R1 K10 ; R1 := R1["DeferredSquadCrewShipLoadOut"]
	27	[1174]	CALL     	R0 2 2 ; R0 := R0(R1)
	28	[1174]	TEST     	R0 1 ; if R0 then PC := 34
	29	[1174]	JMP      	34 ; PC := 34
	30	[1175]	GETUPVAL 	R0 U1 ; R0 := U1
	31	[1175]	GETGLOBAL	R1 K3 ; R1 := _T
	32	[1175]	GETTABLE 	R1 R1 K10 ; R1 := R1["DeferredSquadCrewShipLoadOut"]
	33	[1175]	CALL     	R0 2 1 ; R0(R1)
	34	[1178]	GETGLOBAL	R0 K11 ; R0 := mHandleCanBeClosedCallback
	35	[1178]	EQ       	1 R0 K5 ; if R0 == nil then PC := 42
	36	[1178]	JMP      	42 ; PC := 42
	37	[1179]	GETGLOBAL	R0 K3 ; R0 := _T
	38	[1179]	GETGLOBAL	R1 K11 ; R1 := mHandleCanBeClosedCallback
	39	[1179]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	40	[1179]	OP_LOADBOOL	R1 1 0 ; R1 := true
	41	[1179]	CALL     	R0 2 1 ; R0(R1)
	42	[1182]	GETGLOBAL	R0 K3 ; R0 := _T
	43	[1182]	SETTABLE 	R0 K8 K5 ; R0["DeferSquadCrewShipLoad"] := nil
	44	[1183]	GETGLOBAL	R0 K3 ; R0 := _T
	45	[1183]	SETTABLE 	R0 K10 K5 ; R0["DeferredSquadCrewShipLoadOut"] := nil
	46	[1185]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	47	[1185]	GETGLOBAL	R1 K12 ; R1 := mShipSuit
	48	[1185]	CALL     	R0 2 2 ; R0 := R0(R1)
	49	[1185]	TEST     	R0 1 ; if R0 then PC := 63
	50	[1185]	JMP      	63 ; PC := 63
	51	[1185]	GETGLOBAL	R0 K13 ; R0 := mPrevShipName
	52	[1185]	EQ       	1 R0 K5 ; if R0 == nil then PC := 63
	53	[1185]	JMP      	63 ; PC := 63
	54	[1186]	GETGLOBAL	R0 K12 ; R0 := mShipSuit
	55	[1186]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x8e886a73]
	56	[1186]	GETGLOBAL	R2 K13 ; R2 := mPrevShipName
	57	[1186]	CALL     	R0 3 1 ; R0(R1,R2)
	58	[1187]	GETGLOBAL	R0 K15 ; R0 := 0x9ba7909f
	59	[1187]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x7e17ae26]
	60	[1187]	LOADK    	R2 K17 ; R2 := "UpdateRailjackText"
	61	[1187]	LOADK    	R3 K18 ; R3 := ""
	62	[1187]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	63	[1190]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	64	[1190]	GETGLOBAL	R1 K19 ; R1 := mInventoryGrid
	65	[1190]	CALL     	R0 2 2 ; R0 := R0(R1)
	66	[1190]	TEST     	R0 1 ; if R0 then PC := 89
	67	[1190]	JMP      	89 ; PC := 89
	68	[1191]	GETGLOBAL	R0 K19 ; R0 := mInventoryGrid
	69	[1191]	SELF     	R0 R0 K20 ; R1 := R0; R0 := R0[0xc32ccf2e]
	70	[1191]	CALL     	R0 2 2 ; R0 := R0(R1)
	71	[1192]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	72	[1192]	MOVE     	R2 R0 ; R2 := R0
	73	[1192]	CALL     	R1 2 2 ; R1 := R1(R2)
	74	[1192]	TEST     	R1 1 ; if R1 then PC := 89
	75	[1192]	JMP      	89 ; PC := 89
	76	[1192]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	77	[1192]	GETGLOBAL	R2 K21 ; R2 := 0x25d99d89
	78	[1192]	CALL     	R1 2 2 ; R1 := R1(R2)
	79	[1192]	TEST     	R1 1 ; if R1 then PC := 89
	80	[1192]	JMP      	89 ; PC := 89
	81	[1193]	GETGLOBAL	R1 K22 ; R1 := 0xae91e43b
	82	[1193]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0x492f9da2]
	83	[1193]	CALL     	R1 2 2 ; R1 := R1(R2)
	84	[1194]	GETGLOBAL	R2 K21 ; R2 := 0x25d99d89
	85	[1194]	SELF     	R2 R2 K24 ; R3 := R2; R2 := R2[0x7855ea52]
	86	[1194]	MOVE     	R4 R1 ; R4 := R1
	87	[1194]	MOVE     	R5 R0 ; R5 := R0
	88	[1194]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	89	[1198]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	90	[1198]	GETGLOBAL	R3 K3 ; R3 := _T
	91	[1198]	GETTABLE 	R3 R3 K25 ; R3 := R3["ClearSquadOverlayTitle"]
	92	[1198]	CALL     	R2 2 2 ; R2 := R2(R3)
	93	[1198]	TEST     	R2 1 ; if R2 then PC := 98
	94	[1198]	JMP      	98 ; PC := 98
	95	[1199]	GETGLOBAL	R2 K3 ; R2 := _T
	96	[1199]	GETTABLE 	R2 R2 K26 ; R2 := R2[0xfed37ac5]
	97	[1199]	CALL     	R2 1 1 ; R2()
	98	[1201]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	99	[1201]	GETGLOBAL	R3 K3 ; R3 := _T
	100	[1201]	GETTABLE 	R3 R3 K27 ; R3 := R3["ChangeHubVisCounter"]
	101	[1201]	CALL     	R2 2 2 ; R2 := R2(R3)
	102	[1201]	TEST     	R2 1 ; if R2 then PC := 108
	103	[1201]	JMP      	108 ; PC := 108
	104	[1202]	GETGLOBAL	R2 K3 ; R2 := _T
	105	[1202]	GETTABLE 	R2 R2 K28 ; R2 := R2[0x33cfa273]
	106	[1202]	LOADK    	R3 := -1.000000
	107	[1202]	CALL     	R2 2 1 ; R2(R3)
	108	[1205]	GETGLOBAL	R2 K3 ; R2 := _T
	109	[1205]	SETTABLE 	R2 K29 K30 ; R2["CustomizingCrewship"] := false
	110	[1206]	RETURN   	R0 1 ; return 

function #26 <?:1208,1236> (34 instructions, 136 bytes at 00000211154EE480)
1 param, 10 slots, 5 upvalues, 0 locals, 10 constants, 1 function
	1	[1209]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[1209]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[1211]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[1211]	LOADNIL  	R2 R2 ; R2 := nil
	5	[1211]	MOVE     	R3 R0 ; R3 := R0
	6	[1211]	CALL     	R1 3 1 ; R1(R2,R3)
	7	[1213]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	8	[1213]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	9	[1213]	LOADK    	R3 K3 ; R3 := "_root"
	10	[1213]	LOADK    	R4 := 1.000000
	11	[1213]	NEWTABLE 	R5 1 0 ; R5 := {}
	12	[1213]	LOADK    	R6 := 10.000000
	13	[1213]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	14	[1213]	NEWTABLE 	R6 1 0 ; R6 := {}
	15	[1213]	LOADK    	R7 := 0.000000
	16	[1213]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	17	[1213]	LOADK    	R7 K5 ; R7 := 0.200000
	18	[1213]	LOADK    	R8 := 0.000000
	19	[1231]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	20	[1231]	GETUPVAL 	R0 U1 ; R0 := U1
	21	[1231]	GETUPVAL 	R0 U2 ; R0 := U2
	22	[1231]	GETUPVAL 	R0 U3 ; R0 := U3
	23	[1231]	GETUPVAL 	R0 U4 ; R0 := U4
	24	[1213]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	25	[1233]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	26	[1233]	GETGLOBAL	R2 K7 ; R2 := _T
	27	[1233]	GETTABLE 	R2 R2 K8 ; R2 := R2["SetSquadOverlayTitle"]
	28	[1233]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[1233]	TEST     	R1 1 ; if R1 then PC := 34
	30	[1233]	JMP      	34 ; PC := 34
	31	[1234]	GETGLOBAL	R1 K7 ; R1 := _T
	32	[1234]	GETTABLE 	R1 R1 K9 ; R1 := R1[0xdf29a9d6]
	33	[1234]	CALL     	R1 1 1 ; R1()
	34	[1236]	RETURN   	R0 1 ; return 

function #27 <?:1238,1240> (3 instructions, 12 bytes at 00000211222E4A90)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1239]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1239]	CALL     	R0 1 1 ; R0()
	3	[1240]	RETURN   	R0 1 ; return 

function #28 <?:1242,1263> (52 instructions, 208 bytes at 0000021135E1FA20)
4 params, 9 slots, 5 upvalues, 0 locals, 11 constants, 0 functions
	1	[1243]	TEST     	R1 1 ; if R1 then PC := 5
	2	[1243]	JMP      	5 ; PC := 5
	3	[1244]	GETUPVAL 	R4 U0 ; R4 := U0
	4	[1244]	CALL     	R4 1 1 ; R4()
	5	[1246]	GETGLOBAL	R4 K0 ; R4 := mActiveState
	6	[1247]	GETUPVAL 	R5 U1 ; R5 := U1
	7	[1247]	GETGLOBAL	R6 K0 ; R6 := mActiveState
	8	[1247]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	9	[1248]	TEST     	R5 0 ; if not R5 then PC := 49
	10	[1248]	JMP      	49 ; PC := 49
	11	[1248]	TEST     	R2 1 ; if R2 then PC := 49
	12	[1248]	JMP      	49 ; PC := 49
	13	[1249]	TEST     	R1 1 ; if R1 then PC := 18
	14	[1249]	JMP      	18 ; PC := 18
	15	[1250]	GETGLOBAL	R6 K1 ; R6 := mCosmeticsList
	16	[1250]	SELF     	R6 R6 K2 ; R7 := R6; R6 := R6[0x09c8a77d]
	17	[1250]	CALL     	R6 2 1 ; R6(R7)
	18	[1252]	GETUPVAL 	R6 U2 ; R6 := U2
	19	[1252]	MOVE     	R7 R5 ; R7 := R5
	20	[1252]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[1252]	TEST     	R6 1 ; if R6 then PC := 24
	22	[1252]	JMP      	24 ; PC := 24
	23	[1253]	RETURN   	R0 1 ; return 
	24	[1255]	GETUPVAL 	R6 U3 ; R6 := U3
	25	[1255]	GETTABLE 	R6 R6 K3 ; R6 := R6["EQUIPMENT"]
	26	[1255]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 39
	27	[1255]	JMP      	39 ; PC := 39
	28	[1255]	GETUPVAL 	R6 U3 ; R6 := U3
	29	[1255]	GETTABLE 	R6 R6 K4 ; R6 := R6["EQUIP_INV"]
	30	[1255]	EQ       	1 R4 R6 ; if R4 == R6 then PC := 39
	31	[1255]	JMP      	39 ; PC := 39
	32	[1256]	GETGLOBAL	R6 K5 ; R6 := mCategories
	33	[1256]	SELF     	R6 R6 K6 ; R7 := R6; R6 := R6[0x070daa5a]
	34	[1256]	TESTSET  	R8 R0 1 ; if R0 then PC := 37 else R8 := R0 
	35	[1256]	JMP      	37 ; PC := 37
	36	[1256]	LOADK    	R8 := 1.000000
	37	[1256]	CALL     	R6 3 1 ; R6(R7,R8)
	38	[1256]	JMP      	48 ; PC := 48
	39	[1257]	GETGLOBAL	R6 K7 ; R6 := 0x7b998233
	40	[1257]	GETGLOBAL	R7 K8 ; R7 := _T
	41	[1257]	GETTABLE 	R7 R7 K9 ; R7 := R7["SetSquadOverlayTitle"]
	42	[1257]	CALL     	R6 2 2 ; R6 := R6(R7)
	43	[1257]	TEST     	R6 1 ; if R6 then PC := 48
	44	[1257]	JMP      	48 ; PC := 48
	45	[1258]	GETGLOBAL	R6 K8 ; R6 := _T
	46	[1258]	GETTABLE 	R6 R6 K10 ; R6 := R6[0xdf29a9d6]
	47	[1258]	CALL     	R6 1 1 ; R6()
	48	[1260]	RETURN   	R0 1 ; return 
	49	[1262]	GETUPVAL 	R6 U4 ; R6 := U4
	50	[1262]	MOVE     	R7 R3 ; R7 := R3
	51	[1262]	CALL     	R6 2 1 ; R6(R7)
	52	[1263]	RETURN   	R0 1 ; return 

function #29 <?:1265,1267> (11 instructions, 44 bytes at 000002111EAA5B70)
2 params, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1266]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1266]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	3	[1266]	MOVE     	R4 R0 ; R4 := R0
	4	[1266]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[1266]	LOADNIL  	R4 R4 ; R4 := nil
	6	[1266]	EQ       	1 R1 K1 ; if R1 == "true" then PC := 9
	7	[1266]	JMP      	9 ; PC := 9
	8	[1266]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 9
	9	[1266]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[1266]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[1267]	RETURN   	R0 1 ; return 

function #30 <?:1269,1279> (22 instructions, 88 bytes at 000002111EAA5C80)
0 params, 5 slots, 3 upvalues, 0 locals, 5 constants, 0 functions
	1	[1270]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1270]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[1270]	GETTABLE 	R1 R1 K2 ; R1 := R1["SetSquadOverlayTitle"]
	4	[1270]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1270]	TEST     	R0 1 ; if R0 then PC := 10
	6	[1270]	JMP      	10 ; PC := 10
	7	[1271]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[1271]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xdf29a9d6]
	9	[1271]	CALL     	R0 1 1 ; R0()
	10	[1274]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[1274]	GETGLOBAL	R1 K4 ; R1 := mActiveState
	12	[1274]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	13	[1275]	TEST     	R0 0 ; if not R0 then PC := 22
	14	[1275]	JMP      	22 ; PC := 22
	15	[1276]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[1276]	MOVE     	R2 R0 ; R2 := R0
	17	[1276]	LOADNIL  	R3 R3 ; R3 := nil
	18	[1276]	OP_LOADBOOL	R4 1 0 ; R4 := true
	19	[1276]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	20	[1277]	GETUPVAL 	R1 U2 ; R1 := U2
	21	[1277]	CALL     	R1 1 1 ; R1()
	22	[1279]	RETURN   	R0 1 ; return 

function #31 <?:1281,1294> (59 instructions, 236 bytes at 000002112FE27480)
0 params, 10 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[1282]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1282]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x44537adf]
	3	[1282]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[1282]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	5	[1284]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[1284]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x91a24e4b]
	7	[1284]	LOADK    	R4 K3 ; R4 := "TopLeftContainer.Lines.Right"
	8	[1284]	LOADK    	R5 := 2.000000
	9	[1284]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1284]	TEST     	R2 1 ; if R2 then PC := 13
	11	[1284]	JMP      	13 ; PC := 13
	12	[1284]	LOADK    	R2 := 510.000000
	13	[1284]	ADD      	R2 R2 K4 ; R2 := R2 + 16.000000
	14	[1285]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	15	[1285]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x91a24e4b]
	16	[1285]	LOADK    	R5 K5 ; R5 := "TopRightContainer.Lines.Center"
	17	[1285]	LOADK    	R6 := 2.000000
	18	[1285]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[1285]	TEST     	R3 1 ; if R3 then PC := 22
	20	[1285]	JMP      	22 ; PC := 22
	21	[1285]	LOADK    	R3 K6 ; R3 := 1085.000000
	22	[1286]	SUB      	R4 R3 R2 ; R4 := R3 - R2
	23	[1287]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	24	[1287]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	25	[1287]	LOADK    	R7 K8 ; R7 := "TopRightContainer.Lines.Center.Left"
	26	[1287]	LOADK    	R8 := 0.000000
	27	[1287]	UNM      	R9 R4 ; R9 := ^ R4
	28	[1287]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	29	[1288]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	30	[1288]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	31	[1288]	LOADK    	R7 K9 ; R7 := "TopRightContainer.Lines.Center.Center"
	32	[1288]	LOADK    	R8 := 12.000000
	33	[1288]	MOVE     	R9 R4 ; R9 := R4
	34	[1288]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	35	[1290]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	36	[1290]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x091c120e]
	37	[1290]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[1290]	SUB      	R5 R0 R5 ; R5 := R0 - R5
	39	[1290]	ADD      	R4 R5 K11 ; R4 := R5 + 570.000000
	40	[1291]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	41	[1291]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	42	[1291]	LOADK    	R7 K12 ; R7 := "BottomRightContainer.Lines.Center.Left"
	43	[1291]	LOADK    	R8 := 0.000000
	44	[1291]	UNM      	R9 R4 ; R9 := ^ R4
	45	[1291]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	46	[1292]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	47	[1292]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	48	[1292]	LOADK    	R7 K13 ; R7 := "BottomRightContainer.Lines.Center.Center"
	49	[1292]	LOADK    	R8 := 12.000000
	50	[1292]	MOVE     	R9 R4 ; R9 := R4
	51	[1292]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	52	[1293]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	53	[1293]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x67bc869f]
	54	[1293]	LOADK    	R7 K14 ; R7 := "BottomRightContainer.Lines.Left"
	55	[1293]	LOADK    	R8 := 0.000000
	56	[1293]	UNM      	R9 R4 ; R9 := ^ R4
	57	[1293]	SUB      	R9 R9 K4 ; R9 := R9 - 16.000000
	58	[1293]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	59	[1294]	RETURN   	R0 1 ; return 

function #32 <?:1296,1342> (173 instructions, 692 bytes at 0000021119115A90)
2 params, 16 slots, 4 upvalues, 0 locals, 46 constants, 1 function
	1	[1297]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1297]	GETGLOBAL	R3 K1 ; R3 := mAnchorMgr
	3	[1297]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1297]	TEST     	R2 1 ; if R2 then PC := 11
	5	[1297]	JMP      	11 ; PC := 11
	6	[1298]	GETGLOBAL	R2 K1 ; R2 := mAnchorMgr
	7	[1298]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xfaa69527]
	8	[1298]	MOVE     	R4 R0 ; R4 := R0
	9	[1298]	MOVE     	R5 R1 ; R5 := R1
	10	[1298]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[1300]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[1300]	CALL     	R2 1 1 ; R2()
	13	[1302]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	14	[1302]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x91a24e4b]
	15	[1302]	LOADK    	R4 K5 ; R4 := "TopLeftContainer.Inventory.ScrollBar"
	16	[1302]	LOADK    	R5 := 3.000000
	17	[1302]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	18	[1302]	TEST     	R2 1 ; if R2 then PC := 21
	19	[1302]	JMP      	21 ; PC := 21
	20	[1302]	LOADK    	R2 := 265.000000
	21	[1302]	SUB      	R2 R2 K6 ; R2 := R2 - 6.000000
	22	[1303]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	23	[1303]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x91a24e4b]
	24	[1303]	LOADK    	R5 K7 ; R5 := "BottomRightContainer"
	25	[1303]	LOADK    	R6 := 3.000000
	26	[1303]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	27	[1303]	TEST     	R3 1 ; if R3 then PC := 30
	28	[1303]	JMP      	30 ; PC := 30
	29	[1303]	LOADK    	R3 := 790.000000
	30	[1303]	SUB      	R3 R3 R2 ; R3 := R3 - R2
	31	[1304]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	32	[1304]	EQ       	1 R4 K9 ; if R4 == nil then PC := 54
	33	[1304]	JMP      	54 ; PC := 54
	34	[1305]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	35	[1305]	SETTABLE 	R4 K10 R3 ; R4["Height"] := R3
	36	[1306]	GETUPVAL 	R4 U1 ; R4 := U1
	37	[1306]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x27658fab]
	38	[1306]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	39	[1306]	GETGLOBAL	R6 K8 ; R6 := mInventoryGrid
	40	[1306]	CALL     	R4 3 1 ; R4(R5,R6)
	41	[1308]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	42	[1308]	GETTABLE 	R4 R4 K12 ; R4 := R4["mScrollBar"]
	43	[1308]	GETTABLE 	R4 R4 K13 ; R4 := R4["mSmoothScroll"]
	44	[1308]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0xd0f998cd]
	45	[1308]	LOADK    	R6 := 0.000000
	46	[1308]	CALL     	R4 3 1 ; R4(R5,R6)
	47	[1309]	GETGLOBAL	R4 K8 ; R4 := mInventoryGrid
	48	[1309]	GETTABLE 	R4 R4 K12 ; R4 := R4["mScrollBar"]
	49	[1309]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x425b8f0d]
	50	[1309]	ADD      	R6 R3 K16 ; R6 := R3 + 4.000000
	51	[1309]	LOADNIL  	R7 R7 ; R7 := nil
	52	[1309]	OP_LOADBOOL	R8 1 0 ; R8 := true
	53	[1309]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	54	[1312]	GETGLOBAL	R4 K17 ; R4 := mCosmeticsList
	55	[1312]	EQ       	1 R4 K9 ; if R4 == nil then PC := 122
	56	[1312]	JMP      	122 ; PC := 122
	57	[1313]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	58	[1313]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x91a24e4b]
	59	[1313]	LOADK    	R6 K18 ; R6 := "TopLeftContainer.Cosmetics.ItemSelectionPanel.ScrollBar"
	60	[1313]	LOADK    	R7 := 3.000000
	61	[1313]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	62	[1313]	TEST     	R4 1 ; if R4 then PC := 65
	63	[1313]	JMP      	65 ; PC := 65
	64	[1313]	LOADK    	R4 := 228.000000
	65	[1313]	SUB      	R4 R4 K6 ; R4 := R4 - 6.000000
	66	[1314]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	67	[1314]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x91a24e4b]
	68	[1314]	LOADK    	R7 K7 ; R7 := "BottomRightContainer"
	69	[1314]	LOADK    	R8 := 3.000000
	70	[1314]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	71	[1314]	TEST     	R5 1 ; if R5 then PC := 74
	72	[1314]	JMP      	74 ; PC := 74
	73	[1314]	LOADK    	R5 := 790.000000
	74	[1314]	SUB      	R5 R5 R4 ; R5 := R5 - R4
	75	[1315]	GETGLOBAL	R6 K17 ; R6 := mCosmeticsList
	76	[1315]	GETTABLE 	R6 R6 K19 ; R6 := R6["ItemSelectionGrid"]
	77	[1316]	SETTABLE 	R6 K10 R5 ; R6["Height"] := R5
	78	[1318]	GETUPVAL 	R7 U1 ; R7 := U1
	79	[1318]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x27658fab]
	80	[1318]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	81	[1318]	MOVE     	R9 R6 ; R9 := R6
	82	[1318]	CALL     	R7 3 1 ; R7(R8,R9)
	83	[1319]	GETTABLE 	R7 R6 K20 ; R7 := R6["mRowSeparation"]
	84	[1319]	GETTABLE 	R8 R6 K21 ; R8 := R6["mRows"]
	85	[1319]	MUL      	R7 R7 R8 ; R7 := R7 * R8
	86	[1319]	GETTABLE 	R8 R6 K22 ; R8 := R6["ElementDimBuffer"]
	87	[1319]	SUB      	R7 R7 R8 ; R7 := R7 - R8
	88	[1320]	SUB      	R8 R7 R5 ; R8 := R7 - R5
	89	[1320]	ADD      	R8 R8 K24 ; R8 := R8 + 8.000000
	90	[1320]	GETTABLE 	R9 R6 K20 ; R9 := R6["mRowSeparation"]
	91	[1320]	GETTABLE 	R10 R6 K22 ; R10 := R6["ElementDimBuffer"]
	92	[1320]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	93	[1320]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	94	[1320]	SETTABLE 	R6 K23 R8 ; R6["mExtraRowScroll"] := R8
	95	[1321]	GETTABLE 	R8 R6 K12 ; R8 := R6["mScrollBar"]
	96	[1321]	GETTABLE 	R8 R8 K13 ; R8 := R8["mSmoothScroll"]
	97	[1321]	SELF     	R8 R8 K14 ; R9 := R8; R8 := R8[0xd0f998cd]
	98	[1321]	LOADK    	R10 := 0.000000
	99	[1321]	CALL     	R8 3 1 ; R8(R9,R10)
	100	[1322]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	101	[1322]	MOVE     	R0 R5 ; R0 := R5
	102	[1322]	SETTABLE 	R6 K25 R8 ; R6["CalculateScrollBarHeight"] := R8
	103	[1323]	GETTABLE 	R8 R6 K12 ; R8 := R6["mScrollBar"]
	104	[1323]	SELF     	R8 R8 K15 ; R9 := R8; R8 := R8[0x425b8f0d]
	105	[1323]	ADD      	R10 R5 K16 ; R10 := R5 + 4.000000
	106	[1323]	LOADNIL  	R11 R11 ; R11 := nil
	107	[1323]	OP_LOADBOOL	R12 1 0 ; R12 := true
	108	[1323]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	109	[1325]	GETGLOBAL	R8 K26 ; R8 := mActiveState
	110	[1325]	GETUPVAL 	R9 U2 ; R9 := U2
	111	[1325]	GETTABLE 	R9 R9 K27 ; R9 := R9["SKIN_SELECTION"]
	112	[1325]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 119
	113	[1325]	JMP      	119 ; PC := 119
	114	[1325]	GETGLOBAL	R8 K26 ; R8 := mActiveState
	115	[1325]	GETUPVAL 	R9 U2 ; R9 := U2
	116	[1325]	GETTABLE 	R9 R9 K28 ; R9 := R9["ATTACHMENTS"]
	117	[1325]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 121
	118	[1325]	JMP      	121 ; PC := 121
	119	[1326]	MOVE     	R2 R4 ; R2 := R4
	120	[1327]	MOVE     	R3 R5 ; R3 := R5
	121	[1328]	CLOSE    	R4 ; SAVE R4,...
	122	[1331]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	123	[1331]	GETGLOBAL	R5 K29 ; R5 := mChildMovie
	124	[1331]	CALL     	R4 2 2 ; R4 := R4(R5)
	125	[1331]	TEST     	R4 0 ; if not R4 then PC := 173
	126	[1331]	JMP      	173 ; PC := 173
	127	[1332]	DIV      	R4 R3 K30 ; R4 := R3 / 2.000000
	128	[1332]	ADD      	R2 R2 R4 ; R2 := R2 + R4
	129	[1333]	GETUPVAL 	R4 U3 ; R4 := U3
	130	[1333]	GETTABLE 	R4 R4 K31 ; R4 := R4[0xe5e5a417]
	131	[1333]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	132	[1333]	MOVE     	R6 R2 ; R6 := R2
	133	[1333]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	134	[1334]	GETUPVAL 	R5 U3 ; R5 := U3
	135	[1334]	GETTABLE 	R5 R5 K32 ; R5 := R5[0xd718f59b]
	136	[1334]	GETGLOBAL	R6 K3 ; R6 := 0xae91e43b
	137	[1334]	MOVE     	R7 R3 ; R7 := R3
	138	[1334]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	139	[1335]	GETUPVAL 	R6 U3 ; R6 := U3
	140	[1335]	GETTABLE 	R6 R6 K33 ; R6 := R6[0x0db7934d]
	141	[1335]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	142	[1335]	LOADK    	R8 := 5.000000
	143	[1335]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	144	[1336]	GETGLOBAL	R7 K34 ; R7 := 0xcfc01047
	145	[1336]	NEWTABLE 	R8 5 0 ; R8 := {}
	146	[1336]	GETGLOBAL	R9 K35 ; R9 := 0x0f20c9bd
	147	[1336]	GETGLOBAL	R10 K36 ; R10 := 0x5b54ec72
	148	[1336]	GETGLOBAL	R11 K37 ; R11 := 0x09b6dacc
	149	[1336]	GETGLOBAL	R12 K38 ; R12 := 0x0032441c
	150	[1336]	GETTABLE 	R12 R12 K39 ; R12 := R12["UIMaterial_SalvageMaterials"]
	151	[1336]	GETTABLE 	R12 R12 K30 ; R12 := R12[2.000000]
	152	[1336]	GETGLOBAL	R13 K40 ; R13 := 0xbe447565
	153	[1336]	SETLIST  	R8 5 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 5
	154	[1336]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	155	[1336]	JMP      	171 ; PC := 171
	156	[1337]	SELF     	R12 R11 K41 ; R13 := R11; R12 := R11[0x830eea67]
	157	[1337]	GETGLOBAL	R14 K42 ; R14 := 0x6c97a788
	158	[1337]	GETTABLE 	R14 R14 K43 ; R14 := R14["VISIBILITY_CENTER"]
	159	[1337]	MOVE     	R15 R4 ; R15 := R4
	160	[1337]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	161	[1338]	SELF     	R12 R11 K41 ; R13 := R11; R12 := R11[0x830eea67]
	162	[1338]	GETGLOBAL	R14 K42 ; R14 := 0x6c97a788
	163	[1338]	GETTABLE 	R14 R14 K44 ; R14 := R14["VISIBILITY_SIZE"]
	164	[1338]	MOVE     	R15 R5 ; R15 := R5
	165	[1338]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	166	[1339]	SELF     	R12 R11 K41 ; R13 := R11; R12 := R11[0x830eea67]
	167	[1339]	GETGLOBAL	R14 K42 ; R14 := 0x6c97a788
	168	[1339]	GETTABLE 	R14 R14 K45 ; R14 := R14["VISIBILITY_FADE_SIZE"]
	169	[1339]	MOVE     	R15 R6 ; R15 := R6
	170	[1339]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	171	[1336]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 156; R9 := R10 end
	172	[1339]	JMP      	156 ; PC := 156
	173	[1342]	RETURN   	R0 1 ; return 

function #33 <?:1344,1395> (245 instructions, 980 bytes at 000002112DA09CD0)
1 param, 13 slots, 4 upvalues, 0 locals, 55 constants, 4 functions
	1	[1345]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[1345]	SETGLOBALHASH	R1 K0 ; mButtons := R1
	3	[1347]	LOADNIL  	R1 R1 ; R1 := nil
	4	[1348]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	5	[1348]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[1348]	GETTABLE 	R3 R3 K2 ; R3 := R3["EQUIPMENT"]
	7	[1348]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 14
	8	[1348]	JMP      	14 ; PC := 14
	9	[1348]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	10	[1348]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[1348]	GETTABLE 	R3 R3 K3 ; R3 := R3["EQUIP_INV"]
	12	[1348]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 21
	13	[1348]	JMP      	21 ; PC := 21
	14	[1349]	GETUPVAL 	R2 U1 ; R2 := U1
	15	[1349]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	16	[1349]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	17	[1349]	LOADK    	R4 K6 ; R4 := "/Lotus/Language/RailjackHints/Components_"
	18	[1349]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	19	[1349]	MOVE     	R1 R2 ; R1 := R2
	20	[1349]	JMP      	81 ; PC := 81
	21	[1350]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	22	[1350]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[1350]	GETTABLE 	R3 R3 K7 ; R3 := R3["WEAPONS"]
	24	[1350]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 31
	25	[1350]	JMP      	31 ; PC := 31
	26	[1350]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	27	[1350]	GETUPVAL 	R3 U0 ; R3 := U0
	28	[1350]	GETTABLE 	R3 R3 K8 ; R3 := R3["WEAPON_INV"]
	29	[1350]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 38
	30	[1350]	JMP      	38 ; PC := 38
	31	[1351]	GETUPVAL 	R2 U1 ; R2 := U1
	32	[1351]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	33	[1351]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	34	[1351]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/RailjackHints/Armaments_"
	35	[1351]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	36	[1351]	MOVE     	R1 R2 ; R1 := R2
	37	[1351]	JMP      	81 ; PC := 81
	38	[1352]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	39	[1352]	GETUPVAL 	R3 U0 ; R3 := U0
	40	[1352]	GETTABLE 	R3 R3 K10 ; R3 := R3["RESOURCES"]
	41	[1352]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 50
	42	[1352]	JMP      	50 ; PC := 50
	43	[1353]	GETUPVAL 	R2 U1 ; R2 := U1
	44	[1353]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	45	[1353]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	46	[1353]	LOADK    	R4 K11 ; R4 := "/Lotus/Language/RailjackHints/Payload_"
	47	[1353]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	48	[1353]	MOVE     	R1 R2 ; R1 := R2
	49	[1353]	JMP      	81 ; PC := 81
	50	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	51	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	52	[1354]	GETTABLE 	R3 R3 K12 ; R3 := R3["COSMETICS"]
	53	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	54	[1354]	JMP      	75 ; PC := 75
	55	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	56	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	57	[1354]	GETTABLE 	R3 R3 K13 ; R3 := R3["ATTACHMENTS"]
	58	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	59	[1354]	JMP      	75 ; PC := 75
	60	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	61	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	62	[1354]	GETTABLE 	R3 R3 K14 ; R3 := R3["COLOR_PICKER"]
	63	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	64	[1354]	JMP      	75 ; PC := 75
	65	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	66	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	67	[1354]	GETTABLE 	R3 R3 K15 ; R3 := R3["RENAME_SHIP"]
	68	[1354]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 75
	69	[1354]	JMP      	75 ; PC := 75
	70	[1354]	GETGLOBAL	R2 K1 ; R2 := mActiveState
	71	[1354]	GETUPVAL 	R3 U0 ; R3 := U0
	72	[1354]	GETTABLE 	R3 R3 K16 ; R3 := R3["SKIN_SELECTION"]
	73	[1354]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 81
	74	[1354]	JMP      	81 ; PC := 81
	75	[1355]	GETUPVAL 	R2 U1 ; R2 := U1
	76	[1355]	GETTABLE 	R2 R2 K4 ; R2 := R2[0xa7d904b8]
	77	[1355]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	78	[1355]	LOADK    	R4 K17 ; R4 := "/Lotus/Language/RailjackHints/Cosmetics_"
	79	[1355]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	80	[1355]	MOVE     	R1 R2 ; R1 := R2
	81	[1357]	LEN      	R2 R1 ; R2 := # R1
	82	[1357]	LT       	0 K18 R2 ; if 0.000000 >= R2 then PC := 97
	83	[1357]	JMP      	97 ; PC := 97
	84	[1358]	GETGLOBAL	R2 K19 ; R2 := 0x33bdd652
	85	[1358]	GETTABLE 	R2 R2 K20 ; R2 := R2[0x23d5322f]
	86	[1358]	GETGLOBAL	R3 K0 ; R3 := mButtons
	87	[1358]	NEWTABLE 	R4 0 3 ; R4 := {}
	88	[1358]	GETGLOBAL	R5 K5 ; R5 := 0xae91e43b
	89	[1358]	SELF     	R5 R5 K22 ; R6 := R5; R5 := R5[0x42b04007]
	90	[1358]	LOADK    	R7 K23 ; R7 := "<WARNING>"
	91	[1358]	OP_LOADBOOL	R8 1 0 ; R8 := true
	92	[1358]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	93	[1358]	SETTABLE 	R4 K21 R5 ; R4["Label"] := R5
	94	[1358]	SETTABLE 	R4 K24 R1 ; R4["Tips"] := R1
	95	[1358]	SETTABLE 	R4 K25 K26 ; R4["Padding"] := -10.000000
	96	[1358]	CALL     	R2 3 1 ; R2(R3,R4)
	97	[1361]	OP_LOADBOOL	R2 0 0 ; R2 := false
	98	[1362]	GETGLOBAL	R3 K1 ; R3 := mActiveState
	99	[1362]	GETUPVAL 	R4 U0 ; R4 := U0
	100	[1362]	GETTABLE 	R4 R4 K12 ; R4 := R4["COSMETICS"]
	101	[1362]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 124
	102	[1362]	JMP      	124 ; PC := 124
	103	[1363]	LOADK    	R3 K27 ; R3 := "/Lotus/Language/Railjack/ToggleInterior"
	104	[1364]	GETGLOBAL	R4 K28 ; R4 := mInteriorCustomization
	105	[1364]	TEST     	R4 0 ; if not R4 then PC := 110
	106	[1364]	JMP      	110 ; PC := 110
	107	[1365]	MOVE     	R4 R3 ; R4 := R3
	108	[1365]	LOADK    	R5 K29 ; R5 := "Off"
	109	[1365]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	110	[1367]	GETGLOBAL	R4 K19 ; R4 := 0x33bdd652
	111	[1367]	GETTABLE 	R4 R4 K20 ; R4 := R4[0x23d5322f]
	112	[1367]	GETGLOBAL	R5 K0 ; R5 := mButtons
	113	[1367]	NEWTABLE 	R6 0 3 ; R6 := {}
	114	[1367]	SETTABLE 	R6 K21 R3 ; R6["Label"] := R3
	115	[1367]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	116	[1367]	SETTABLE 	R6 K30 R7 ; R6["CallBack"] := R7
	117	[1367]	SETTABLE 	R6 K31 K32 ; R6["CallOut"] := "MENU_LTRIGGER2"
	118	[1367]	CALL     	R4 3 1 ; R4(R5,R6)
	119	[1368]	GETGLOBAL	R4 K33 ; R4 := mCosmeticsList
	120	[1368]	SELF     	R4 R4 K34 ; R5 := R4; R4 := R4[0x1b34b1ec]
	121	[1368]	GETGLOBAL	R6 K0 ; R6 := mButtons
	122	[1368]	CALL     	R4 3 1 ; R4(R5,R6)
	123	[1368]	JMP      	204 ; PC := 204
	124	[1369]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	125	[1369]	GETUPVAL 	R5 U0 ; R5 := U0
	126	[1369]	GETTABLE 	R5 R5 K13 ; R5 := R5["ATTACHMENTS"]
	127	[1369]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 134
	128	[1369]	JMP      	134 ; PC := 134
	129	[1369]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	130	[1369]	GETUPVAL 	R5 U0 ; R5 := U0
	131	[1369]	GETTABLE 	R5 R5 K16 ; R5 := R5["SKIN_SELECTION"]
	132	[1369]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 139
	133	[1369]	JMP      	139 ; PC := 139
	134	[1370]	GETGLOBAL	R4 K33 ; R4 := mCosmeticsList
	135	[1370]	SELF     	R4 R4 K34 ; R5 := R4; R4 := R4[0x1b34b1ec]
	136	[1370]	GETGLOBAL	R6 K0 ; R6 := mButtons
	137	[1370]	CALL     	R4 3 1 ; R4(R5,R6)
	138	[1370]	JMP      	204 ; PC := 204
	139	[1371]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	140	[1371]	GETUPVAL 	R5 U0 ; R5 := U0
	141	[1371]	GETTABLE 	R5 R5 K8 ; R5 := R5["WEAPON_INV"]
	142	[1371]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 149
	143	[1371]	JMP      	149 ; PC := 149
	144	[1371]	GETGLOBAL	R4 K1 ; R4 := mActiveState
	145	[1371]	GETUPVAL 	R5 U0 ; R5 := U0
	146	[1371]	GETTABLE 	R5 R5 K3 ; R5 := R5["EQUIP_INV"]
	147	[1371]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 173
	148	[1371]	JMP      	173 ; PC := 173
	149	[1372]	GETGLOBAL	R4 K35 ; R4 := mInventoryGrid
	150	[1372]	GETTABLE 	R4 R4 K36 ; R4 := R4["mSelectedElement"]
	151	[1373]	GETGLOBAL	R5 K37 ; R5 := 0x7b998233
	152	[1373]	MOVE     	R6 R4 ; R6 := R4
	153	[1373]	CALL     	R5 2 2 ; R5 := R5(R6)
	154	[1373]	NOT      	R5 R5 ; R5 := not R5
	155	[1374]	TEST     	R5 0 ; if not R5 then PC := 171
	156	[1374]	JMP      	171 ; PC := 171
	157	[1374]	GETTABLE 	R6 R4 K38 ; R6 := R4["SalvageState"]
	158	[1374]	GETUPVAL 	R7 U2 ; R7 := U2
	159	[1374]	GETTABLE 	R7 R7 K39 ; R7 := R7["OWNED"]
	160	[1374]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 171
	161	[1374]	JMP      	171 ; PC := 171
	162	[1375]	GETGLOBAL	R6 K19 ; R6 := 0x33bdd652
	163	[1375]	GETTABLE 	R6 R6 K20 ; R6 := R6[0x23d5322f]
	164	[1375]	GETGLOBAL	R7 K0 ; R7 := mButtons
	165	[1375]	NEWTABLE 	R8 0 3 ; R8 := {}
	166	[1375]	SETTABLE 	R8 K21 K40 ; R8["Label"] := "/Lotus/Language/Menu/ItemSelection_Equip"
	167	[1375]	CLOSURE  	R9 1 ; R9 := closure(Function #2)
	168	[1375]	SETTABLE 	R8 K30 R9 ; R8["CallBack"] := R9
	169	[1375]	SETTABLE 	R8 K31 K41 ; R8["CallOut"] := "MENU_SELECT"
	170	[1375]	CALL     	R6 3 1 ; R6(R7,R8)
	171	[1378]	MOVE     	R2 R5 ; R2 := R5
	172	[1378]	JMP      	204 ; PC := 204
	173	[1379]	GETGLOBAL	R6 K1 ; R6 := mActiveState
	174	[1379]	GETUPVAL 	R7 U0 ; R7 := U0
	175	[1379]	GETTABLE 	R7 R7 K7 ; R7 := R7["WEAPONS"]
	176	[1379]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 183
	177	[1379]	JMP      	183 ; PC := 183
	178	[1379]	GETGLOBAL	R6 K1 ; R6 := mActiveState
	179	[1379]	GETUPVAL 	R7 U0 ; R7 := U0
	180	[1379]	GETTABLE 	R7 R7 K2 ; R7 := R7["EQUIPMENT"]
	181	[1379]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 185
	182	[1379]	JMP      	185 ; PC := 185
	183	[1380]	OP_LOADBOOL	R2 1 0 ; R2 := true
	184	[1380]	JMP      	204 ; PC := 204
	185	[1381]	GETGLOBAL	R6 K1 ; R6 := mActiveState
	186	[1381]	GETUPVAL 	R7 U0 ; R7 := U0
	187	[1381]	GETTABLE 	R7 R7 K10 ; R7 := R7["RESOURCES"]
	188	[1381]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 204
	189	[1381]	JMP      	204 ; PC := 204
	190	[1382]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	191	[1382]	GETGLOBAL	R7 K42 ; R7 := mChildMovie
	192	[1382]	CALL     	R6 2 2 ; R6 := R6(R7)
	193	[1382]	TEST     	R6 1 ; if R6 then PC := 204
	194	[1382]	JMP      	204 ; PC := 204
	195	[1383]	GETGLOBAL	R6 K19 ; R6 := 0x33bdd652
	196	[1383]	GETTABLE 	R6 R6 K20 ; R6 := R6[0x23d5322f]
	197	[1383]	GETGLOBAL	R7 K0 ; R7 := mButtons
	198	[1383]	NEWTABLE 	R8 0 3 ; R8 := {}
	199	[1383]	SETTABLE 	R8 K21 K43 ; R8["Label"] := "/Lotus/Language/Railjack/Payload_ForgeAll"
	200	[1383]	CLOSURE  	R9 2 ; R9 := closure(Function #3)
	201	[1383]	SETTABLE 	R8 K30 R9 ; R8["CallBack"] := R9
	202	[1383]	SETTABLE 	R8 K31 K44 ; R8["CallOut"] := "MENU_GENERIC1"
	203	[1383]	CALL     	R6 3 1 ; R6(R7,R8)
	204	[1386]	GETGLOBAL	R6 K45 ; R6 := mStats
	205	[1386]	SELF     	R6 R6 K46 ; R7 := R6; R6 := R6[0x368ad758]
	206	[1386]	MOVE     	R8 R2 ; R8 := R2
	207	[1386]	CALL     	R6 3 1 ; R6(R7,R8)
	208	[1388]	GETUPVAL 	R6 U3 ; R6 := U3
	209	[1388]	GETGLOBAL	R7 K1 ; R7 := mActiveState
	210	[1388]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	211	[1388]	EQ       	0 R6 K47 ; if R6 ~= nil then PC := 214
	212	[1388]	JMP      	214 ; PC := 214
	213	[1388]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 214
	214	[1388]	OP_LOADBOOL	R6 1 0 ; R6 := true
	215	[1389]	TEST     	R6 0 ; if not R6 then PC := 220
	216	[1389]	JMP      	220 ; PC := 220
	217	[1389]	LOADK    	R7 K48 ; R7 := "/Lotus/Language/Menu/Global_Back"
	218	[1389]	TEST     	R7 1 ; if R7 then PC := 221
	219	[1389]	JMP      	221 ; PC := 221
	220	[1389]	LOADK    	R7 K49 ; R7 := "/Lotus/Language/Menu/Exit"
	221	[1390]	GETGLOBAL	R8 K19 ; R8 := 0x33bdd652
	222	[1390]	GETTABLE 	R8 R8 K20 ; R8 := R8[0x23d5322f]
	223	[1390]	GETGLOBAL	R9 K0 ; R9 := mButtons
	224	[1390]	NEWTABLE 	R10 0 3 ; R10 := {}
	225	[1390]	SETTABLE 	R10 K21 R7 ; R10["Label"] := R7
	226	[1390]	CLOSURE  	R11 3 ; R11 := closure(Function #4)
	227	[1390]	SETTABLE 	R10 K30 R11 ; R10["CallBack"] := R11
	228	[1390]	SETTABLE 	R10 K31 K50 ; R10["CallOut"] := "MENU_CANCEL"
	229	[1390]	CALL     	R8 3 1 ; R8(R9,R10)
	230	[1392]	GETGLOBAL	R8 K37 ; R8 := 0x7b998233
	231	[1392]	GETGLOBAL	R9 K51 ; R9 := _T
	232	[1392]	GETTABLE 	R9 R9 K52 ; R9 := R9["SetButtons"]
	233	[1392]	CALL     	R8 2 2 ; R8 := R8(R9)
	234	[1392]	TEST     	R8 1 ; if R8 then PC := 245
	235	[1392]	JMP      	245 ; PC := 245
	236	[1393]	GETGLOBAL	R8 K51 ; R8 := _T
	237	[1393]	GETTABLE 	R8 R8 K53 ; R8 := R8[0x1c5b546f]
	238	[1393]	GETGLOBAL	R9 K5 ; R9 := 0xae91e43b
	239	[1393]	GETGLOBAL	R10 K0 ; R10 := mButtons
	240	[1393]	GETGLOBAL	R11 K54 ; R11 := 0xcd0165a3
	241	[1393]	LOADK    	R12 := 1.000000
	242	[1393]	CALL     	R11 2 2 ; R11 := R11(R12)
	243	[1393]	MOVE     	R12 R0 ; R12 := R0
	244	[1393]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	245	[1395]	RETURN   	R0 1 ; return 

function #34 <?:1397,1399> (7 instructions, 28 bytes at 000002112B273A20)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1398]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1398]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 5
	3	[1398]	JMP      	5 ; PC := 5
	4	[1398]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 5
	5	[1398]	OP_LOADBOOL	R2 1 0 ; R2 := true
	6	[1398]	CALL     	R1 2 1 ; R1(R2)
	7	[1399]	RETURN   	R0 1 ; return 

function #35 <?:1401,1427> (86 instructions, 344 bytes at 0000021192029050)
0 params, 19 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[1402]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1402]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[1402]	LOADK    	R2 K2 ; R2 := "TopLeftContainer.Inventory.Stats"
	4	[1402]	LOADK    	R3 := 11.000000
	5	[1402]	OP_LOADBOOL	R4 0 0 ; R4 := false
	6	[1402]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[1404]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[1404]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x9f57dd7d]
	9	[1404]	GETGLOBAL	R1 K4 ; R1 := mColors
	10	[1404]	GETTABLE 	R1 R1 K5 ; R1 := R1["FloatingContent"]
	11	[1404]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[1405]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[1405]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x9f57dd7d]
	14	[1405]	GETGLOBAL	R2 K4 ; R2 := mColors
	15	[1405]	GETTABLE 	R2 R2 K6 ; R2 := R2["FloatingContentHighlight"]
	16	[1405]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[1406]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	18	[1406]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x42b04007]
	19	[1406]	LOADK    	R4 K8 ; R4 := "<MASTERED>"
	20	[1406]	OP_LOADBOOL	R5 1 0 ; R5 := true
	21	[1406]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	22	[1408]	LOADK    	R3 := 100.000000
	23	[1409]	LOADK    	R4 := 100.000000
	24	[1410]	LOADK    	R5 := 100.000000
	25	[1412]	MOVE     	R6 R4 ; R6 := R4
	26	[1413]	LT       	0 K9 R3 ; if 0.000000 >= R3 then PC := 33
	27	[1413]	JMP      	33 ; PC := 33
	28	[1413]	EQ       	0 R4 R3 ; if R4 ~= R3 then PC := 33
	29	[1413]	JMP      	33 ; PC := 33
	30	[1414]	MOVE     	R7 R2 ; R7 := R2
	31	[1414]	MOVE     	R8 R6 ; R8 := R6
	32	[1414]	CONCAT   	R6 R7 R8 ; R6 := R7 .. R8
	33	[1416]	LOADK    	R7 K10 ; R7 := "<font color=\""
	34	[1416]	MOVE     	R8 R1 ; R8 := R1
	35	[1416]	LOADK    	R9 K11 ; R9 := "\">"
	36	[1416]	MOVE     	R10 R6 ; R10 := R6
	37	[1416]	LOADK    	R11 K12 ; R11 := "/"
	38	[1416]	MOVE     	R12 R3 ; R12 := R3
	39	[1416]	LOADK    	R13 K13 ; R13 := "</font>"
	40	[1416]	CONCAT   	R6 R7 R13 ; R6 := R7 .. R8 .. R9 .. R10 .. R11 .. R12 .. R13
	41	[1417]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	42	[1417]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x42b04007]
	43	[1417]	LOADK    	R9 K14 ; R9 := "/Lotus/Language/Menu/CollectedCount"
	44	[1417]	OP_LOADBOOL	R10 1 0 ; R10 := true
	45	[1417]	NEWTABLE 	R11 0 1 ; R11 := {}
	46	[1417]	SETTABLE 	R11 K15 R6 ; R11["COUNT"] := R6
	47	[1417]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	48	[1417]	MOVE     	R6 R7 ; R6 := R7
	49	[1419]	MOVE     	R7 R5 ; R7 := R5
	50	[1420]	LT       	0 K9 R3 ; if 0.000000 >= R3 then PC := 57
	51	[1420]	JMP      	57 ; PC := 57
	52	[1420]	EQ       	0 R5 R3 ; if R5 ~= R3 then PC := 57
	53	[1420]	JMP      	57 ; PC := 57
	54	[1421]	MOVE     	R8 R2 ; R8 := R2
	55	[1421]	MOVE     	R9 R7 ; R9 := R7
	56	[1421]	CONCAT   	R7 R8 R9 ; R7 := R8 .. R9
	57	[1423]	LOADK    	R8 K10 ; R8 := "<font color=\""
	58	[1423]	MOVE     	R9 R1 ; R9 := R1
	59	[1423]	LOADK    	R10 K11 ; R10 := "\">"
	60	[1423]	MOVE     	R11 R7 ; R11 := R7
	61	[1423]	LOADK    	R12 K12 ; R12 := "/"
	62	[1423]	MOVE     	R13 R3 ; R13 := R3
	63	[1423]	LOADK    	R14 K13 ; R14 := "</font>"
	64	[1423]	CONCAT   	R7 R8 R14 ; R7 := R8 .. R9 .. R10 .. R11 .. R12 .. R13 .. R14
	65	[1424]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	66	[1424]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x42b04007]
	67	[1424]	LOADK    	R10 K16 ; R10 := "/Lotus/Language/Menu/MasteredCount"
	68	[1424]	OP_LOADBOOL	R11 1 0 ; R11 := true
	69	[1424]	NEWTABLE 	R12 0 1 ; R12 := {}
	70	[1424]	SETTABLE 	R12 K15 R7 ; R12["COUNT"] := R7
	71	[1424]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	72	[1424]	MOVE     	R7 R8 ; R7 := R8
	73	[1426]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	74	[1426]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0x5f56eeab]
	75	[1426]	LOADK    	R10 K2 ; R10 := "TopLeftContainer.Inventory.Stats"
	76	[1426]	LOADK    	R11 := 29.000000
	77	[1426]	LOADK    	R12 K18 ; R12 := "<p><font color=\""
	78	[1426]	MOVE     	R13 R0 ; R13 := R0
	79	[1426]	LOADK    	R14 K11 ; R14 := "\">"
	80	[1426]	MOVE     	R15 R6 ; R15 := R6
	81	[1426]	LOADK    	R16 K19 ; R16 := "<br>"
	82	[1426]	MOVE     	R17 R7 ; R17 := R7
	83	[1426]	LOADK    	R18 K20 ; R18 := "</font></p>"
	84	[1426]	CONCAT   	R12 R12 R18 ; R12 := R12 .. R13 .. R14 .. R15 .. R16 .. R17 .. R18
	85	[1426]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	86	[1427]	RETURN   	R0 1 ; return 

function #36 <?:1429,1621> (76 instructions, 304 bytes at 0000021192029130)
4 params, 22 slots, 4 upvalues, 0 locals, 12 constants, 6 functions
	1	[1432]	NEWTABLE 	R4 0 0 ; R4 := {}
	2	[1433]	LOADK    	R5 := 1.000000
	3	[1433]	GETTABLE 	R6 R0 K0 ; R6 := R0["mElements"]
	4	[1433]	LEN      	R6 R6 ; R6 := # R6
	5	[1433]	LOADK    	R7 := 1.000000
	6	[1433]	FORPREP  	R5 25 ; R5 -= R7; PC := 25
	7	[1434]	GETTABLE 	R9 R0 K0 ; R9 := R0["mElements"]
	8	[1434]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	9	[1435]	GETTABLE 	R10 R9 K1 ; R10 := R9["ItemType"]
	10	[1435]	EQ       	1 R10 K2 ; if R10 == nil then PC := 23
	11	[1435]	JMP      	23 ; PC := 23
	12	[1436]	NEWTABLE 	R10 0 2 ; R10 := {}
	13	[1436]	GETTABLE 	R11 R0 K0 ; R11 := R0["mElements"]
	14	[1436]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	15	[1436]	GETTABLE 	R11 R11 K4 ; R11 := R11["UID"]
	16	[1436]	SETTABLE 	R10 K3 R11 ; R10["Id"] := R11
	17	[1436]	GETTABLE 	R11 R9 K1 ; R11 := R9["ItemType"]
	18	[1436]	SELF     	R11 R11 K5 ; R12 := R11; R11 := R11[0xed4e0128]
	19	[1436]	CALL     	R11 2 2 ; R11 := R11(R12)
	20	[1436]	SETTABLE 	R10 K1 R11 ; R10["ItemType"] := R11
	21	[1436]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	22	[1436]	JMP      	25 ; PC := 25
	23	[1438]	NEWTABLE 	R10 0 0 ; R10 := {}
	24	[1438]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	25	[1433]	FORLOOP  	R5 7 ; R5 += R7; if R5 <= R6 then begin PC := 7; R8 := R5 end
	26	[1456]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	27	[1456]	MOVE     	R0 R4 ; R0 := R4
	28	[1458]	GETTABLE 	R11 R1 K6 ; R11 := R1["mSlot"]
	29	[1467]	CLOSURE  	R12 1 ; R12 := closure(Function #2)
	30	[1467]	MOVE     	R0 R11 ; R0 := R11
	31	[1477]	CLOSURE  	R13 2 ; R13 := closure(Function #3)
	32	[1481]	CLOSURE  	R14 3 ; R14 := closure(Function #4)
	33	[1483]	NEWTABLE 	R15 0 0 ; R15 := {}
	34	[1488]	CLOSURE  	R16 4 ; R16 := closure(Function #5)
	35	[1488]	MOVE     	R0 R12 ; R0 := R12
	36	[1488]	MOVE     	R0 R13 ; R0 := R13
	37	[1488]	MOVE     	R0 R15 ; R0 := R15
	38	[1490]	GETTABLE 	R17 R1 K7 ; R17 := R1["mProductCategory"]
	39	[1490]	TEST     	R17 1 ; if R17 then PC := 42
	40	[1490]	JMP      	42 ; PC := 42
	41	[1490]	GETTABLE 	R17 R0 K7 ; R17 := R0["mProductCategory"]
	42	[1605]	CLOSURE  	R18 5 ; R18 := closure(Function #6)
	43	[1605]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[1605]	GETUPVAL 	R0 U1 ; R0 := U1
	45	[1605]	MOVE     	R0 R1 ; R0 := R1
	46	[1605]	MOVE     	R0 R17 ; R0 := R17
	47	[1605]	GETUPVAL 	R0 U2 ; R0 := U2
	48	[1605]	GETUPVAL 	R0 U3 ; R0 := U3
	49	[1605]	MOVE     	R0 R15 ; R0 := R15
	50	[1605]	MOVE     	R0 R14 ; R0 := R14
	51	[1605]	MOVE     	R0 R10 ; R0 := R10
	52	[1605]	MOVE     	R0 R0 ; R0 := R0
	53	[1605]	MOVE     	R0 R16 ; R0 := R16
	54	[1607]	MOVE     	R19 R18 ; R19 := R18
	55	[1607]	GETTABLE 	R20 R1 K8 ; R20 := R1["OwnedItems"]
	56	[1607]	CALL     	R19 2 1 ; R19(R20)
	57	[1609]	TEST     	R2 1 ; if R2 then PC := 69
	58	[1609]	JMP      	69 ; PC := 69
	59	[1610]	MOVE     	R19 R18 ; R19 := R18
	60	[1610]	GETTABLE 	R20 R1 K9 ; R20 := R1["SalvageItems"]
	61	[1610]	OP_LOADBOOL	R21 1 0 ; R21 := true
	62	[1610]	CALL     	R19 3 1 ; R19(R20,R21)
	63	[1611]	TEST     	R3 1 ; if R3 then PC := 69
	64	[1611]	JMP      	69 ; PC := 69
	65	[1612]	MOVE     	R19 R18 ; R19 := R18
	66	[1612]	GETTABLE 	R20 R1 K10 ; R20 := R1["RawSalvageItems"]
	67	[1612]	OP_LOADBOOL	R21 1 0 ; R21 := true
	68	[1612]	CALL     	R19 3 1 ; R19(R20,R21)
	69	[1616]	GETTABLE 	R19 R1 K11 ; R19 := R1["AlwaysAvailableItems"]
	70	[1616]	EQ       	1 R19 K2 ; if R19 == nil then PC := 75
	71	[1616]	JMP      	75 ; PC := 75
	72	[1617]	MOVE     	R19 R18 ; R19 := R18
	73	[1617]	GETTABLE 	R20 R1 K11 ; R20 := R1["AlwaysAvailableItems"]
	74	[1617]	CALL     	R19 2 1 ; R19(R20)
	75	[1620]	RETURN   	R15 2 ; return R15 
	76	[1621]	RETURN   	R0 1 ; return 

function #37 <?:1623,1655> (107 instructions, 428 bytes at 0000021125716860)
1 param, 24 slots, 3 upvalues, 0 locals, 27 constants, 0 functions
	1	[1624]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[1625]	GETGLOBAL	R2 K0 ; R2 := 0x25d99d89
	3	[1625]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x25a6e75e]
	4	[1625]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[1625]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xd8dfa041]
	6	[1625]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[1626]	LOADK    	R3 := 1.000000
	8	[1626]	LEN      	R4 R2 ; R4 := # R2
	9	[1626]	LOADK    	R5 := 1.000000
	10	[1626]	FORPREP  	R3 28 ; R3 -= R5; PC := 28
	11	[1627]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	12	[1627]	GETTABLE 	R7 R7 K3 ; R7 := R7["mItemType"]
	13	[1628]	GETGLOBAL	R8 K4 ; R8 := 0x7b998233
	14	[1628]	MOVE     	R9 R7 ; R9 := R7
	15	[1628]	CALL     	R8 2 2 ; R8 := R8(R9)
	16	[1628]	TEST     	R8 1 ; if R8 then PC := 28
	17	[1628]	JMP      	28 ; PC := 28
	18	[1628]	SELF     	R8 R7 K5 ; R9 := R7; R8 := R7[0xf2deaf69]
	19	[1628]	GETGLOBAL	R10 K6 ; R10 := gAvatarImageItemType
	20	[1628]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	21	[1628]	TEST     	R8 0 ; if not R8 then PC := 28
	22	[1628]	JMP      	28 ; PC := 28
	23	[1629]	GETGLOBAL	R8 K7 ; R8 := 0x33bdd652
	24	[1629]	GETTABLE 	R8 R8 K8 ; R8 := R8[0x23d5322f]
	25	[1629]	MOVE     	R9 R1 ; R9 := R1
	26	[1629]	MOVE     	R10 R7 ; R10 := R7
	27	[1629]	CALL     	R8 3 1 ; R8(R9,R10)
	28	[1626]	FORLOOP  	R3 11 ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
	29	[1633]	NEWTABLE 	R8 0 0 ; R8 := {}
	30	[1634]	OP_LOADBOOL	R9 0 0 ; R9 := false
	31	[1635]	GETUPVAL 	R10 U0 ; R10 := U0
	32	[1635]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0xe9cbffa8]
	33	[1635]	GETGLOBAL	R12 K6 ; R12 := gAvatarImageItemType
	34	[1635]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	35	[1636]	LOADK    	R11 := 1.000000
	36	[1636]	LEN      	R12 R10 ; R12 := # R10
	37	[1636]	LOADK    	R13 := 1.000000
	38	[1636]	FORPREP  	R11 105 ; R11 -= R13; PC := 105
	39	[1637]	GETGLOBAL	R15 K10 ; R15 := 0xce225efa
	40	[1637]	LOADK    	R16 := 0.000000
	41	[1637]	CALL     	R15 2 1 ; R15(R16)
	42	[1638]	GETTABLE 	R15 R10 R14 ; R15 := R10[R14]
	43	[1639]	GETGLOBAL	R16 K4 ; R16 := 0x7b998233
	44	[1639]	MOVE     	R17 R15 ; R17 := R15
	45	[1639]	CALL     	R16 2 2 ; R16 := R16(R17)
	46	[1639]	TEST     	R16 1 ; if R16 then PC := 105
	47	[1639]	JMP      	105 ; PC := 105
	48	[1640]	SELF     	R16 R15 K11 ; R17 := R15; R16 := R15[0xf278f8a1]
	49	[1640]	CALL     	R16 2 2 ; R16 := R16(R17)
	50	[1641]	GETGLOBAL	R17 K12 ; R17 := 0x60cce7b4
	51	[1641]	GETGLOBAL	R18 K4 ; R18 := 0x7b998233
	52	[1641]	MOVE     	R19 R16 ; R19 := R16
	53	[1641]	CALL     	R18 2 2 ; R18 := R18(R19)
	54	[1641]	TEST     	R18 1 ; if R18 then PC := 60
	55	[1641]	JMP      	60 ; PC := 60
	56	[1641]	SELF     	R18 R16 K5 ; R19 := R16; R18 := R16[0xf2deaf69]
	57	[1641]	GETGLOBAL	R20 K6 ; R20 := gAvatarImageItemType
	58	[1641]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	59	[1641]	JMP      	62 ; PC := 62
	60	[1641]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 61
	61	[1641]	OP_LOADBOOL	R18 1 0 ; R18 := true
	62	[1641]	CALL     	R17 2 1 ; R17(R18)
	63	[1642]	GETUPVAL 	R17 U1 ; R17 := U1
	64	[1642]	GETTABLE 	R17 R17 K13 ; R17 := R17[0xcf49d84c]
	65	[1642]	MOVE     	R18 R1 ; R18 := R1
	66	[1642]	MOVE     	R19 R16 ; R19 := R16
	67	[1642]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	68	[1642]	TESTSET  	R9 R17 1 ; if R17 then PC := 73 else R9 := R17 
	69	[1642]	JMP      	73 ; PC := 73
	70	[1642]	SELF     	R17 R15 K14 ; R18 := R15; R17 := R15[0x31e559d2]
	71	[1642]	CALL     	R17 2 2 ; R17 := R17(R18)
	72	[1642]	MOVE     	R9 R17 ; R9 := R17
	73	[1643]	TEST     	R9 1 ; if R9 then PC := 79
	74	[1643]	JMP      	79 ; PC := 79
	75	[1643]	SELF     	R17 R15 K15 ; R18 := R15; R17 := R15[0xc055cef8]
	76	[1643]	CALL     	R17 2 2 ; R17 := R17(R18)
	77	[1643]	TEST     	R17 0 ; if not R17 then PC := 105
	78	[1643]	JMP      	105 ; PC := 105
	79	[1644]	GETUPVAL 	R17 U2 ; R17 := U2
	80	[1644]	GETTABLE 	R17 R17 K16 ; R17 := R17[0x08681f50]
	81	[1644]	GETGLOBAL	R18 K17 ; R18 := 0xae91e43b
	82	[1644]	MOVE     	R19 R15 ; R19 := R15
	83	[1644]	NEWTABLE 	R20 0 1 ; R20 := {}
	84	[1644]	GETGLOBAL	R21 K0 ; R21 := 0x25d99d89
	85	[1644]	SETTABLE 	R20 K18 R21 ; R20["GameData"] := R21
	86	[1644]	LOADNIL  	R21 R22 ; R21 := R22 := nil
	87	[1644]	OP_LOADBOOL	R23 1 0 ; R23 := true
	88	[1644]	CALL     	R17 7 2 ; R17 := R17(R18,R19,R20,R21,R22,R23)
	89	[1645]	SETTABLE 	R17 K19 K20 ; R17["Themed"] := true
	90	[1646]	SETTABLE 	R17 K21 R9 ; R17["Owned"] := R9
	91	[1647]	SETTABLE 	R17 K22 R9 ; R17["mPurchased"] := R9
	92	[1648]	GETUPVAL 	R18 U1 ; R18 := U1
	93	[1648]	GETTABLE 	R18 R18 K24 ; R18 := R18[0x06d055f9]
	94	[1648]	GETTABLE 	R19 R17 K21 ; R19 := R17["Owned"]
	95	[1648]	LOADK    	R20 := 1.000000
	96	[1648]	LOADK    	R21 := 0.000000
	97	[1648]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	98	[1648]	SETTABLE 	R17 K23 R18 ; R17["Count"] := R18
	99	[1649]	SETTABLE 	R17 K25 K26 ; R17["HideCountThreshold"] := 0.000000
	100	[1650]	GETGLOBAL	R18 K7 ; R18 := 0x33bdd652
	101	[1650]	GETTABLE 	R18 R18 K8 ; R18 := R18[0x23d5322f]
	102	[1650]	MOVE     	R19 R8 ; R19 := R8
	103	[1650]	MOVE     	R20 R17 ; R20 := R17
	104	[1650]	CALL     	R18 3 1 ; R18(R19,R20)
	105	[1636]	FORLOOP  	R11 39 ; R11 += R13; if R11 <= R12 then begin PC := 39; R14 := R11 end
	106	[1654]	RETURN   	R8 2 ; return R8 
	107	[1655]	RETURN   	R0 1 ; return 

function #38 <?:1657,1705> (126 instructions, 504 bytes at 00000211257168F0)
1 param, 26 slots, 3 upvalues, 0 locals, 37 constants, 0 functions
	1	[1658]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1658]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1658]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1658]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1658]	JMP      	8 ; PC := 8
	6	[1659]	NEWTABLE 	R1 0 0 ; R1 := {}
	7	[1659]	RETURN   	R1 2 ; return R1 
	8	[1662]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[1663]	GETGLOBAL	R2 K1 ; R2 := 0x7ed0a956
	10	[1663]	LOADK    	R3 K2 ; R3 := "/Lotus/Types/Game/CrewShipCustomization"
	11	[1663]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1664]	GETGLOBAL	R3 K3 ; R3 := 0xb009bbc6
	13	[1664]	LOADK    	R4 K4 ; R4 := "/Lotus/Types/Game/CrewShip/Ships/RailJack"
	14	[1664]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[1665]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0x0911ae7c]
	16	[1665]	MOVE     	R6 R0 ; R6 := R0
	17	[1665]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	18	[1667]	GETUPVAL 	R5 U0 ; R5 := U0
	19	[1667]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0xe39b2ba1]
	20	[1667]	MOVE     	R7 R2 ; R7 := R2
	21	[1667]	MOVE     	R8 R3 ; R8 := R3
	22	[1667]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	23	[1668]	GETGLOBAL	R6 K7 ; R6 := 0x25d99d89
	24	[1668]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x25a6e75e]
	25	[1668]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[1668]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0xe9131614]
	27	[1668]	CALL     	R6 2 2 ; R6 := R6(R7)
	28	[1669]	LOADK    	R7 := 1.000000
	29	[1669]	LEN      	R8 R5 ; R8 := # R5
	30	[1669]	LOADK    	R9 := 1.000000
	31	[1669]	FORPREP  	R7 124 ; R7 -= R9; PC := 124
	32	[1670]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	33	[1671]	SELF     	R12 R11 K10 ; R13 := R11; R12 := R11[0x06e65678]
	34	[1671]	MOVE     	R14 R0 ; R14 := R0
	35	[1671]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	36	[1671]	TEST     	R12 0 ; if not R12 then PC := 124
	37	[1671]	JMP      	124 ; PC := 124
	38	[1672]	SELF     	R12 R11 K11 ; R13 := R11; R12 := R11[0xf278f8a1]
	39	[1672]	CALL     	R12 2 2 ; R12 := R12(R13)
	40	[1673]	LOADNIL  	R13 R13 ; R13 := nil
	41	[1674]	GETGLOBAL	R14 K12 ; R14 := 0xcfc01047
	42	[1674]	MOVE     	R15 R6 ; R15 := R6
	43	[1674]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	44	[1674]	JMP      	50 ; PC := 50
	45	[1675]	GETTABLE 	R19 R18 K13 ; R19 := R18["mItemType"]
	46	[1675]	EQ       	0 R19 R12 ; if R19 ~= R12 then PC := 50
	47	[1675]	JMP      	50 ; PC := 50
	48	[1676]	MOVE     	R13 R18 ; R13 := R18
	49	[1678]	JMP      	52 ; PC := 52
	50	[1674]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 45; R16 := R17 end
	51	[1679]	JMP      	45 ; PC := 45
	52	[1681]	GETUPVAL 	R19 U1 ; R19 := U1
	53	[1681]	GETTABLE 	R19 R19 K14 ; R19 := R19[0x08681f50]
	54	[1681]	GETGLOBAL	R20 K15 ; R20 := 0xae91e43b
	55	[1681]	MOVE     	R21 R11 ; R21 := R11
	56	[1681]	NEWTABLE 	R22 0 2 ; R22 := {}
	57	[1681]	GETGLOBAL	R23 K7 ; R23 := 0x25d99d89
	58	[1681]	SETTABLE 	R22 K16 R23 ; R22["GameData"] := R23
	59	[1681]	SETTABLE 	R22 K17 R13 ; R22["ItemInfo"] := R13
	60	[1681]	LOADNIL  	R23 R24 ; R23 := R24 := nil
	61	[1681]	OP_LOADBOOL	R25 1 0 ; R25 := true
	62	[1681]	CALL     	R19 7 2 ; R19 := R19(R20,R21,R22,R23,R24,R25)
	63	[1682]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	64	[1682]	GETTABLE 	R21 R19 K18 ; R21 := R19["StoreItem"]
	65	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	66	[1682]	TEST     	R20 1 ; if R20 then PC := 124
	67	[1682]	JMP      	124 ; PC := 124
	68	[1682]	GETTABLE 	R20 R19 K18 ; R20 := R19["StoreItem"]
	69	[1682]	SELF     	R20 R20 K19 ; R21 := R20; R20 := R20[0xc055cef8]
	70	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	71	[1682]	TEST     	R20 1 ; if R20 then PC := 83
	72	[1682]	JMP      	83 ; PC := 83
	73	[1682]	GETTABLE 	R20 R19 K18 ; R20 := R19["StoreItem"]
	74	[1682]	SELF     	R20 R20 K20 ; R21 := R20; R20 := R20[0x31e559d2]
	75	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	76	[1682]	TEST     	R20 1 ; if R20 then PC := 83
	77	[1682]	JMP      	83 ; PC := 83
	78	[1682]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	79	[1682]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	80	[1682]	CALL     	R20 2 2 ; R20 := R20(R21)
	81	[1682]	TEST     	R20 1 ; if R20 then PC := 124
	82	[1682]	JMP      	124 ; PC := 124
	83	[1683]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	84	[1683]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	85	[1683]	CALL     	R20 2 2 ; R20 := R20(R21)
	86	[1683]	TEST     	R20 1 ; if R20 then PC := 101
	87	[1683]	JMP      	101 ; PC := 101
	88	[1684]	SETTABLE 	R19 K22 K23 ; R19["Owned"] := true
	89	[1685]	SETTABLE 	R19 K24 K23 ; R19["mPurchased"] := true
	90	[1686]	NEWTABLE 	R20 0 1 ; R20 := {}
	91	[1686]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	92	[1686]	GETTABLE 	R21 R21 K27 ; R21 := R21["mItemId"]
	93	[1686]	GETTABLE 	R21 R21 K28 ; R21 := R21["mId"]
	94	[1686]	SETTABLE 	R20 K26 R21 ; R20["UID"] := R21
	95	[1686]	SETTABLE 	R19 K25 R20 ; R19["mPurchasedInfo"] := R20
	96	[1687]	NEWTABLE 	R20 0 1 ; R20 := {}
	97	[1687]	GETTABLE 	R21 R19 K21 ; R21 := R19["RawItem"]
	98	[1687]	SETTABLE 	R20 K29 R21 ; R20["Item"] := R21
	99	[1687]	SETTABLE 	R19 K21 R20 ; R19["RawItem"] := R20
	100	[1687]	JMP      	108 ; PC := 108
	101	[1688]	GETTABLE 	R20 R19 K18 ; R20 := R19["StoreItem"]
	102	[1688]	SELF     	R20 R20 K20 ; R21 := R20; R20 := R20[0x31e559d2]
	103	[1688]	CALL     	R20 2 2 ; R20 := R20(R21)
	104	[1688]	TEST     	R20 0 ; if not R20 then PC := 108
	105	[1688]	JMP      	108 ; PC := 108
	106	[1689]	SETTABLE 	R19 K22 K23 ; R19["Owned"] := true
	107	[1690]	SETTABLE 	R19 K24 K23 ; R19["mPurchased"] := true
	108	[1692]	GETUPVAL 	R20 U2 ; R20 := U2
	109	[1692]	GETTABLE 	R20 R20 K31 ; R20 := R20[0x06d055f9]
	110	[1692]	GETTABLE 	R21 R19 K22 ; R21 := R19["Owned"]
	111	[1692]	LOADK    	R22 := 1.000000
	112	[1692]	LOADK    	R23 := 0.000000
	113	[1692]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	114	[1692]	SETTABLE 	R19 K30 R20 ; R19["Count"] := R20
	115	[1693]	SETTABLE 	R19 K32 K33 ; R19["HideCountThreshold"] := 0.000000
	116	[1695]	EQ       	0 R12 R4 ; if R12 ~= R4 then PC := 119
	117	[1695]	JMP      	119 ; PC := 119
	118	[1696]	SETTABLE 	R19 K34 K23 ; R19["IsNone"] := true
	119	[1699]	GETGLOBAL	R20 K35 ; R20 := 0x33bdd652
	120	[1699]	GETTABLE 	R20 R20 K36 ; R20 := R20[0x23d5322f]
	121	[1699]	MOVE     	R21 R1 ; R21 := R1
	122	[1699]	MOVE     	R22 R19 ; R22 := R19
	123	[1699]	CALL     	R20 3 1 ; R20(R21,R22)
	124	[1669]	FORLOOP  	R7 32 ; R7 += R9; if R7 <= R8 then begin PC := 32; R10 := R7 end
	125	[1704]	RETURN   	R1 2 ; return R1 
	126	[1705]	RETURN   	R0 1 ; return 

function #39 <?:1707,1723> (39 instructions, 156 bytes at 000002117F0BC320)
1 param, 5 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[1708]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[1709]	SETTABLE 	R0 K0 K1 ; R0["Tier"] := nil
	3	[1710]	SETTABLE 	R0 K2 K1 ; R0["Brand"] := nil
	4	[1711]	GETTABLE 	R2 R0 K3 ; R2 := R0["Category"]
	5	[1711]	EQ       	1 R2 K5 ; if R2 == 43.000000 then PC := 10
	6	[1711]	JMP      	10 ; PC := 10
	7	[1711]	GETTABLE 	R2 R0 K3 ; R2 := R0["Category"]
	8	[1711]	EQ       	0 R2 K6 ; if R2 ~= 46.000000 then PC := 38
	9	[1711]	JMP      	38 ; PC := 38
	10	[1712]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	11	[1712]	GETTABLE 	R3 R0 K8 ; R3 := R0["StoreItem"]
	12	[1712]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1712]	TEST     	R2 1 ; if R2 then PC := 38
	14	[1712]	JMP      	38 ; PC := 38
	15	[1713]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[1713]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x3bd648a0]
	17	[1713]	GETTABLE 	R3 R0 K8 ; R3 := R0["StoreItem"]
	18	[1713]	GETUPVAL 	R4 U1 ; R4 := U1
	19	[1713]	CALL     	R2 3 3 ; R2,R3 := R2(R3,R4)
	20	[1713]	SETTABLE 	R0 K2 R3 ; R0["Brand"] := R3
	21	[1713]	SETTABLE 	R0 K0 R2 ; R0["Tier"] := R2
	22	[1714]	GETTABLE 	R2 R0 K0 ; R2 := R0["Tier"]
	23	[1714]	EQ       	1 R2 K1 ; if R2 == nil then PC := 30
	24	[1714]	JMP      	30 ; PC := 30
	25	[1715]	GETGLOBAL	R2 K10 ; R2 := 0x33bdd652
	26	[1715]	GETTABLE 	R2 R2 K11 ; R2 := R2[0x23d5322f]
	27	[1715]	MOVE     	R3 R1 ; R3 := R1
	28	[1715]	GETTABLE 	R4 R0 K0 ; R4 := R0["Tier"]
	29	[1715]	CALL     	R2 3 1 ; R2(R3,R4)
	30	[1717]	GETTABLE 	R2 R0 K2 ; R2 := R0["Brand"]
	31	[1717]	EQ       	1 R2 K1 ; if R2 == nil then PC := 38
	32	[1717]	JMP      	38 ; PC := 38
	33	[1718]	GETGLOBAL	R2 K10 ; R2 := 0x33bdd652
	34	[1718]	GETTABLE 	R2 R2 K11 ; R2 := R2[0x23d5322f]
	35	[1718]	MOVE     	R3 R1 ; R3 := R1
	36	[1718]	GETTABLE 	R4 R0 K2 ; R4 := R0["Brand"]
	37	[1718]	CALL     	R2 3 1 ; R2(R3,R4)
	38	[1722]	SETTABLE 	R0 K12 R1 ; R0["Categories"] := R1
	39	[1723]	RETURN   	R0 1 ; return 

function #40 <?:1725,1739> (45 instructions, 180 bytes at 00000211040F5620)
4 params, 12 slots, 1 upvalue, 0 locals, 20 constants, 0 functions
	1	[1726]	GETTABLE 	R4 R0 K0 ; R4 := R0["Items"]
	2	[1726]	EQ       	0 R4 K1 ; if R4 ~= nil then PC := 43
	3	[1726]	JMP      	43 ; PC := 43
	4	[1727]	GETTABLE 	R4 R0 K2 ; R4 := R0["mSlot"]
	5	[1727]	EQ       	0 R4 K1 ; if R4 ~= nil then PC := 35
	6	[1727]	JMP      	35 ; PC := 35
	7	[1728]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[1728]	GETGLOBAL	R5 K3 ; R5 := mEquipment
	9	[1728]	MOVE     	R6 R0 ; R6 := R0
	10	[1728]	MOVE     	R7 R2 ; R7 := R2
	11	[1728]	MOVE     	R8 R3 ; R8 := R3
	12	[1728]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	13	[1729]	TEST     	R1 1 ; if R1 then PC := 33
	14	[1729]	JMP      	33 ; PC := 33
	15	[1730]	GETGLOBAL	R5 K4 ; R5 := 0x33bdd652
	16	[1730]	GETTABLE 	R5 R5 K5 ; R5 := R5[0x23d5322f]
	17	[1730]	MOVE     	R6 R4 ; R6 := R4
	18	[1730]	NEWTABLE 	R7 0 8 ; R7 := {}
	19	[1730]	SETTABLE 	R7 K6 K7 ; R7["mEmpty"] := true
	20	[1730]	SETTABLE 	R7 K8 K7 ; R7["IsNone"] := true
	21	[1730]	SETTABLE 	R7 K9 K1 ; R7["mStoreItem"] := nil
	22	[1730]	GETGLOBAL	R8 K11 ; R8 := 0xae91e43b
	23	[1730]	SELF     	R8 R8 K12 ; R9 := R8; R8 := R8[0x42b04007]
	24	[1730]	LOADK    	R10 K13 ; R10 := "/Lotus/Language/Menu/Cosmetics_None"
	25	[1730]	OP_LOADBOOL	R11 0 0 ; R11 := false
	26	[1730]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	27	[1730]	SETTABLE 	R7 K10 R8 ; R7["Name"] := R8
	28	[1730]	SETTABLE 	R7 K14 K15 ; R7["PvpValue"] := 0.000000
	29	[1730]	SETTABLE 	R7 K16 K7 ; R7["mPurchased"] := true
	30	[1730]	SETTABLE 	R7 K17 K18 ; R7["mSortId"] := -10.000000
	31	[1730]	SETTABLE 	R7 K19 K1 ; R7["ItemType"] := nil
	32	[1730]	CALL     	R5 3 1 ; R5(R6,R7)
	33	[1732]	RETURN   	R4 2 ; return R4 
	34	[1732]	JMP      	45 ; PC := 45
	35	[1734]	GETUPVAL 	R5 U0 ; R5 := U0
	36	[1734]	GETGLOBAL	R6 K3 ; R6 := mEquipment
	37	[1734]	MOVE     	R7 R0 ; R7 := R0
	38	[1734]	MOVE     	R8 R2 ; R8 := R2
	39	[1734]	MOVE     	R9 R3 ; R9 := R3
	40	[1734]	TAILCALL 	R5 5 0 ; R5,... := R5(R6,R7,R8,R9)
	41	[1734]	RETURN   	R5 0 ; return R5,... 
	42	[1735]	JMP      	45 ; PC := 45
	43	[1737]	GETTABLE 	R5 R0 K0 ; R5 := R0["Items"]
	44	[1737]	RETURN   	R5 2 ; return R5 
	45	[1739]	RETURN   	R0 1 ; return 

function #41 <?:1741,1780> (98 instructions, 392 bytes at 00000211040ED550)
3 params, 14 slots, 6 upvalues, 0 locals, 27 constants, 0 functions
	1	[1742]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1742]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[1742]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1742]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[1742]	JMP      	7 ; PC := 7
	6	[1743]	RETURN   	R0 1 ; return 
	7	[1746]	GETGLOBAL	R3 K1 ; R3 := mInventoryGrid
	8	[1746]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x7c09c373]
	9	[1746]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[1746]	OP_LOADBOOL	R6 1 0 ; R6 := true
	11	[1746]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	12	[1747]	GETGLOBAL	R3 K1 ; R3 := mInventoryGrid
	13	[1747]	SETTABLE 	R3 K3 K4 ; R3["mPrevSelectedId"] := nil
	14	[1749]	GETUPVAL 	R3 U1 ; R3 := U1
	15	[1749]	MOVE     	R4 R0 ; R4 := R0
	16	[1749]	GETTABLE 	R5 R0 K5 ; R5 := R0["Required"]
	17	[1749]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	18	[1750]	LOADK    	R4 := 1.000000
	19	[1750]	LEN      	R5 R3 ; R5 := # R3
	20	[1750]	LOADK    	R6 := 1.000000
	21	[1750]	FORPREP  	R4 66 ; R4 -= R6; PC := 66
	22	[1751]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	23	[1752]	SETTABLE 	R8 K6 K7 ; R8["SearchCache"] := ""
	24	[1753]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	25	[1753]	GETTABLE 	R10 R8 K8 ; R10 := R8["mStoreItem"]
	26	[1753]	CALL     	R9 2 2 ; R9 := R9(R10)
	27	[1753]	TEST     	R9 1 ; if R9 then PC := 36
	28	[1753]	JMP      	36 ; PC := 36
	29	[1754]	GETUPVAL 	R9 U2 ; R9 := U2
	30	[1754]	GETTABLE 	R9 R9 K9 ; R9 := R9[0x1ac299fb]
	31	[1754]	GETGLOBAL	R10 K10 ; R10 := 0xae91e43b
	32	[1754]	GETTABLE 	R11 R8 K8 ; R11 := R8["mStoreItem"]
	33	[1754]	GETTABLE 	R12 R8 K11 ; R12 := R8["Name"]
	34	[1754]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	35	[1754]	SETTABLE 	R8 K6 R9 ; R8["SearchCache"] := R9
	36	[1757]	GETTABLE 	R9 R8 K12 ; R9 := R8["Polarity"]
	37	[1757]	EQ       	1 R9 K4 ; if R9 == nil then PC := 51
	38	[1757]	JMP      	51 ; PC := 51
	39	[1758]	GETGLOBAL	R9 K13 ; R9 := 0x83e41587
	40	[1758]	GETGLOBAL	R10 K10 ; R10 := 0xae91e43b
	41	[1758]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0x42b04007]
	42	[1758]	GETTABLE 	R12 R8 K12 ; R12 := R8["Polarity"]
	43	[1758]	GETTABLE 	R12 R12 K15 ; R12 := R12["NameTag"]
	44	[1758]	OP_LOADBOOL	R13 0 0 ; R13 := false
	45	[1758]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	46	[1758]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	47	[1758]	LOADK    	R10 K16 ; R10 := " "
	48	[1758]	GETTABLE 	R11 R8 K6 ; R11 := R8["SearchCache"]
	49	[1758]	CONCAT   	R9 R9 R11 ; R9 := R9 .. R10 .. R11
	50	[1758]	SETTABLE 	R8 K6 R9 ; R8["SearchCache"] := R9
	51	[1761]	TEST     	R2 0 ; if not R2 then PC := 58
	52	[1761]	JMP      	58 ; PC := 58
	53	[1761]	GETTABLE 	R9 R8 K17 ; R9 := R8["AlwaysAvailable"]
	54	[1761]	TEST     	R9 0 ; if not R9 then PC := 58
	55	[1761]	JMP      	58 ; PC := 58
	56	[1762]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	57	[1762]	SETTABLE 	R9 K3 R7 ; R9["mPrevSelectedId"] := R7
	58	[1765]	GETUPVAL 	R9 U3 ; R9 := U3
	59	[1765]	MOVE     	R10 R8 ; R10 := R8
	60	[1765]	CALL     	R9 2 1 ; R9(R10)
	61	[1766]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	62	[1766]	SELF     	R9 R9 K18 ; R10 := R9; R9 := R9[0xbad4316f]
	63	[1766]	MOVE     	R11 R8 ; R11 := R8
	64	[1766]	OP_LOADBOOL	R12 1 0 ; R12 := true
	65	[1766]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	66	[1750]	FORLOOP  	R4 22 ; R4 += R6; if R4 <= R5 then begin PC := 22; R7 := R4 end
	67	[1769]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	68	[1769]	SETTABLE 	R9 K19 K4 ; R9["mSelectedElement"] := nil
	69	[1770]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	70	[1770]	SETTABLE 	R9 K20 K4 ; R9["mLastFilterBy"] := nil
	71	[1771]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	72	[1771]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x71e9ac81]
	73	[1771]	LOADNIL  	R11 R11 ; R11 := nil
	74	[1771]	OP_LOADBOOL	R12 1 0 ; R12 := true
	75	[1771]	OP_LOADBOOL	R13 1 0 ; R13 := true
	76	[1771]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	77	[1772]	GETUPVAL 	R9 U4 ; R9 := U4
	78	[1772]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x659d451f]
	79	[1772]	GETGLOBAL	R10 K23 ; R10 := 0x0032441c
	80	[1772]	GETTABLE 	R10 R10 K24 ; R10 := R10["UISound_ButtonSelect"]
	81	[1772]	CALL     	R9 2 1 ; R9(R10)
	82	[1773]	GETUPVAL 	R9 U4 ; R9 := U4
	83	[1773]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x659d451f]
	84	[1773]	GETGLOBAL	R10 K23 ; R10 := 0x0032441c
	85	[1773]	GETTABLE 	R10 R10 K25 ; R10 := R10["UISound_WindowOpen"]
	86	[1773]	CALL     	R9 2 1 ; R9(R10)
	87	[1775]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	88	[1775]	GETTABLE 	R9 R9 K3 ; R9 := R9["mPrevSelectedId"]
	89	[1775]	EQ       	1 R9 K4 ; if R9 == nil then PC := 96
	90	[1775]	JMP      	96 ; PC := 96
	91	[1776]	GETGLOBAL	R9 K1 ; R9 := mInventoryGrid
	92	[1776]	SELF     	R9 R9 K26 ; R10 := R9; R9 := R9[0x070daa5a]
	93	[1776]	GETGLOBAL	R11 K1 ; R11 := mInventoryGrid
	94	[1776]	GETTABLE 	R11 R11 K3 ; R11 := R11["mPrevSelectedId"]
	95	[1776]	CALL     	R9 3 1 ; R9(R10,R11)
	96	[1779]	GETUPVAL 	R9 U5 ; R9 := U5
	97	[1779]	CALL     	R9 1 1 ; R9()
	98	[1780]	RETURN   	R0 1 ; return 

function #42 <?:1782,1803> (39 instructions, 156 bytes at 00000211134D72E0)
1 param, 6 slots, 0 upvalues, 0 locals, 22 constants, 0 functions
	1	[1783]	NEWTABLE 	R1 0 8 ; R1 := {}
	2	[1784]	SETTABLE 	R1 K0 K1 ; R1["mEmpty"] := true
	3	[1785]	SETTABLE 	R1 K2 K1 ; R1["IsNone"] := true
	4	[1786]	SETTABLE 	R1 K3 K4 ; R1["mStoreItem"] := nil
	5	[1787]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	6	[1787]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x42b04007]
	7	[1787]	LOADK    	R4 K8 ; R4 := "/Lotus/Language/Menu/Cosmetics_None"
	8	[1787]	OP_LOADBOOL	R5 0 0 ; R5 := false
	9	[1787]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1787]	SETTABLE 	R1 K5 R2 ; R1["Name"] := R2
	11	[1788]	SETTABLE 	R1 K9 K10 ; R1["PvpValue"] := 0.000000
	12	[1789]	SETTABLE 	R1 K11 K1 ; R1["mPurchased"] := true
	13	[1790]	SETTABLE 	R1 K12 K13 ; R1["mSortId"] := -10.000000
	14	[1791]	SETTABLE 	R1 K14 K4 ; R1["ItemType"] := nil
	15	[1794]	GETTABLE 	R2 R0 K15 ; R2 := R0["mDecal"]
	16	[1794]	TEST     	R2 0 ; if not R2 then PC := 21
	17	[1794]	JMP      	21 ; PC := 21
	18	[1795]	GETGLOBAL	R2 K17 ; R2 := 0x3894e23c
	19	[1795]	SETTABLE 	R1 K16 R2 ; R1["Icon"] := R2
	20	[1795]	JMP      	38 ; PC := 38
	21	[1796]	GETTABLE 	R2 R0 K18 ; R2 := R0["mSlot"]
	22	[1796]	EQ       	1 R2 K4 ; if R2 == nil then PC := 38
	23	[1796]	JMP      	38 ; PC := 38
	24	[1797]	GETGLOBAL	R2 K19 ; R2 := 0x7b998233
	25	[1797]	GETGLOBAL	R3 K20 ; R3 := mShipSuit
	26	[1797]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[1797]	TEST     	R2 1 ; if R2 then PC := 38
	28	[1797]	JMP      	38 ; PC := 38
	29	[1797]	GETGLOBAL	R2 K19 ; R2 := 0x7b998233
	30	[1797]	GETGLOBAL	R3 K20 ; R3 := mShipSuit
	31	[1797]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x0911ae7c]
	32	[1797]	GETTABLE 	R5 R0 K18 ; R5 := R0["mSlot"]
	33	[1797]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	34	[1797]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	35	[1797]	TEST     	R2 1 ; if R2 then PC := 38
	36	[1797]	JMP      	38 ; PC := 38
	37	[1798]	LOADNIL  	R1 R1 ; R1 := nil
	38	[1802]	RETURN   	R1 2 ; return R1 
	39	[1803]	RETURN   	R0 1 ; return 

function #43 <?:1805,1858> (104 instructions, 416 bytes at 0000021116E0D380)
1 param, 13 slots, 6 upvalues, 0 locals, 24 constants, 1 function
	1	[1806]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1806]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1806]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1806]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1806]	JMP      	8 ; PC := 8
	6	[1807]	NEWTABLE 	R1 0 0 ; R1 := {}
	7	[1807]	RETURN   	R1 2 ; return R1 
	8	[1809]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[1810]	GETTABLE 	R2 R0 K1 ; R2 := R0["Items"]
	10	[1810]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 63
	11	[1810]	JMP      	63 ; PC := 63
	12	[1811]	GETTABLE 	R2 R0 K3 ; R2 := R0["mDecal"]
	13	[1811]	TEST     	R2 0 ; if not R2 then PC := 20
	14	[1811]	JMP      	20 ; PC := 20
	15	[1812]	GETUPVAL 	R2 U1 ; R2 := U1
	16	[1812]	MOVE     	R3 R0 ; R3 := R0
	17	[1812]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[1812]	MOVE     	R1 R2 ; R1 := R2
	19	[1812]	JMP      	52 ; PC := 52
	20	[1813]	GETTABLE 	R2 R0 K4 ; R2 := R0["mHullSkin"]
	21	[1813]	TEST     	R2 0 ; if not R2 then PC := 28
	22	[1813]	JMP      	28 ; PC := 28
	23	[1814]	GETUPVAL 	R2 U2 ; R2 := U2
	24	[1814]	GETTABLE 	R3 R0 K5 ; R3 := R0["mSlot"]
	25	[1814]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[1814]	MOVE     	R1 R2 ; R1 := R2
	27	[1814]	JMP      	52 ; PC := 52
	28	[1815]	GETTABLE 	R2 R0 K5 ; R2 := R0["mSlot"]
	29	[1815]	EQ       	1 R2 K2 ; if R2 == nil then PC := 47
	30	[1815]	JMP      	47 ; PC := 47
	31	[1816]	GETTABLE 	R2 R0 K6 ; R2 := R0["mCategory"]
	32	[1816]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 40
	33	[1816]	JMP      	40 ; PC := 40
	34	[1817]	GETUPVAL 	R2 U3 ; R2 := U3
	35	[1817]	GETGLOBAL	R3 K7 ; R3 := mEquipment
	36	[1817]	MOVE     	R4 R0 ; R4 := R0
	37	[1817]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	38	[1817]	MOVE     	R1 R2 ; R1 := R2
	39	[1817]	JMP      	52 ; PC := 52
	40	[1819]	GETUPVAL 	R2 U3 ; R2 := U3
	41	[1819]	GETGLOBAL	R3 K8 ; R3 := mCosmeticsList
	42	[1819]	GETTABLE 	R3 R3 K9 ; R3 := R3["CustomizationList"]
	43	[1819]	MOVE     	R4 R0 ; R4 := R0
	44	[1819]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	45	[1819]	MOVE     	R1 R2 ; R1 := R2
	46	[1820]	JMP      	52 ; PC := 52
	47	[1822]	GETUPVAL 	R2 U3 ; R2 := U3
	48	[1822]	GETGLOBAL	R3 K7 ; R3 := mEquipment
	49	[1822]	MOVE     	R4 R0 ; R4 := R0
	50	[1822]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	51	[1822]	MOVE     	R1 R2 ; R1 := R2
	52	[1825]	GETUPVAL 	R2 U4 ; R2 := U4
	53	[1825]	MOVE     	R3 R0 ; R3 := R0
	54	[1825]	CALL     	R2 2 2 ; R2 := R2(R3)
	55	[1826]	EQ       	1 R2 K2 ; if R2 == nil then PC := 64
	56	[1826]	JMP      	64 ; PC := 64
	57	[1827]	GETGLOBAL	R3 K10 ; R3 := 0x33bdd652
	58	[1827]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x23d5322f]
	59	[1827]	MOVE     	R4 R1 ; R4 := R1
	60	[1827]	MOVE     	R5 R2 ; R5 := R2
	61	[1827]	CALL     	R3 3 1 ; R3(R4,R5)
	62	[1828]	JMP      	64 ; PC := 64
	63	[1830]	GETTABLE 	R1 R0 K1 ; R1 := R0["Items"]
	64	[1833]	GETGLOBAL	R3 K10 ; R3 := 0x33bdd652
	65	[1833]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xf21b1d8e]
	66	[1833]	MOVE     	R4 R1 ; R4 := R1
	67	[1843]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	68	[1833]	CALL     	R3 3 1 ; R3(R4,R5)
	69	[1845]	LOADK    	R3 := 1.000000
	70	[1845]	LEN      	R4 R1 ; R4 := # R1
	71	[1845]	LOADK    	R5 := 1.000000
	72	[1845]	FORPREP  	R3 102 ; R3 -= R5; PC := 102
	73	[1846]	GETTABLE 	R7 R1 R6 ; R7 := R1[R6]
	74	[1847]	SETTABLE 	R7 K13 K14 ; R7["SearchCache"] := ""
	75	[1848]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	76	[1848]	GETTABLE 	R9 R7 K15 ; R9 := R7["StoreItem"]
	77	[1848]	CALL     	R8 2 2 ; R8 := R8(R9)
	78	[1848]	TEST     	R8 1 ; if R8 then PC := 87
	79	[1848]	JMP      	87 ; PC := 87
	80	[1849]	GETUPVAL 	R8 U5 ; R8 := U5
	81	[1849]	GETTABLE 	R8 R8 K16 ; R8 := R8[0x1ac299fb]
	82	[1849]	GETGLOBAL	R9 K17 ; R9 := 0xae91e43b
	83	[1849]	GETTABLE 	R10 R7 K15 ; R10 := R7["StoreItem"]
	84	[1849]	GETTABLE 	R11 R7 K18 ; R11 := R7["Name"]
	85	[1849]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	86	[1849]	SETTABLE 	R7 K13 R8 ; R7["SearchCache"] := R8
	87	[1852]	GETTABLE 	R8 R7 K19 ; R8 := R7["Polarity"]
	88	[1852]	EQ       	1 R8 K2 ; if R8 == nil then PC := 102
	89	[1852]	JMP      	102 ; PC := 102
	90	[1853]	GETGLOBAL	R8 K20 ; R8 := 0x83e41587
	91	[1853]	GETGLOBAL	R9 K17 ; R9 := 0xae91e43b
	92	[1853]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x42b04007]
	93	[1853]	GETTABLE 	R11 R7 K19 ; R11 := R7["Polarity"]
	94	[1853]	GETTABLE 	R11 R11 K22 ; R11 := R11["NameTag"]
	95	[1853]	OP_LOADBOOL	R12 0 0 ; R12 := false
	96	[1853]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	97	[1853]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	98	[1853]	LOADK    	R9 K23 ; R9 := " "
	99	[1853]	GETTABLE 	R10 R7 K13 ; R10 := R7["SearchCache"]
	100	[1853]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	101	[1853]	SETTABLE 	R7 K13 R8 ; R7["SearchCache"] := R8
	102	[1845]	FORLOOP  	R3 73 ; R3 += R5; if R3 <= R4 then begin PC := 73; R6 := R3 end
	103	[1857]	RETURN   	R1 2 ; return R1 
	104	[1858]	RETURN   	R0 1 ; return 

function #44 <?:1860,1864> (9 instructions, 36 bytes at 0000021138A675E0)
2 params, 4 slots, 3 upvalues, 0 locals, 0 constants, 0 functions
	1	[1861]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1861]	MOVE     	R3 R1 ; R3 := R1
	3	[1861]	CALL     	R2 2 1 ; R2(R3)
	4	[1862]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[1862]	OP_LOADBOOL	R3 1 0 ; R3 := true
	6	[1862]	CALL     	R2 2 1 ; R2(R3)
	7	[1863]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[1863]	CALL     	R2 1 1 ; R2()
	9	[1864]	RETURN   	R0 1 ; return 

function #45 <?:1866,1904> (85 instructions, 340 bytes at 0000021104200B70)
3 params, 16 slots, 6 upvalues, 0 locals, 22 constants, 0 functions
	1	[1867]	TEST     	R0 0 ; if not R0 then PC := 7
	2	[1867]	JMP      	7 ; PC := 7
	3	[1868]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[1868]	LOADNIL  	R4 R4 ; R4 := nil
	5	[1868]	CALL     	R3 2 1 ; R3(R4)
	6	[1868]	JMP      	85 ; PC := 85
	7	[1870]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[1870]	MOVE     	R4 R2 ; R4 := R2
	9	[1870]	CALL     	R3 2 1 ; R3(R4)
	10	[1872]	GETGLOBAL	R3 K0 ; R3 := mCosmeticsList
	11	[1872]	GETTABLE 	R3 R3 K1 ; R3 := R3["CustomizationList"]
	12	[1872]	GETTABLE 	R3 R3 K2 ; R3 := R3["mSelectedElement"]
	13	[1873]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	14	[1873]	GETUPVAL 	R5 U1 ; R5 := U1
	15	[1873]	GETTABLE 	R5 R5 K4 ; R5 := R5["EQUIP_INV"]
	16	[1873]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 20
	17	[1873]	JMP      	20 ; PC := 20
	18	[1874]	GETGLOBAL	R4 K5 ; R4 := mEquipment
	19	[1874]	GETTABLE 	R3 R4 K2 ; R3 := R4["mSelectedElement"]
	20	[1876]	GETTABLE 	R4 R3 K6 ; R4 := R3["mSlot"]
	21	[1877]	EQ       	1 R4 K7 ; if R4 == nil then PC := 83
	22	[1877]	JMP      	83 ; PC := 83
	23	[1878]	GETGLOBAL	R5 K8 ; R5 := 0x25d99d89
	24	[1878]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x25a6e75e]
	25	[1878]	CALL     	R5 2 2 ; R5 := R5(R6)
	26	[1879]	GETGLOBAL	R6 K10 ; R6 := 0x7b998233
	27	[1879]	MOVE     	R7 R5 ; R7 := R5
	28	[1879]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[1879]	TEST     	R6 1 ; if R6 then PC := 83
	30	[1879]	JMP      	83 ; PC := 83
	31	[1880]	GETTABLE 	R6 R2 K11 ; R6 := R2["mPurchased"]
	32	[1880]	TEST     	R6 1 ; if R6 then PC := 55
	33	[1880]	JMP      	55 ; PC := 55
	34	[1881]	GETUPVAL 	R6 U2 ; R6 := U2
	35	[1881]	MOVE     	R7 R4 ; R7 := R4
	36	[1881]	CALL     	R6 2 2 ; R6 := R6(R7)
	37	[1882]	LOADK    	R7 := 1.000000
	38	[1882]	LEN      	R8 R6 ; R8 := # R6
	39	[1882]	LOADK    	R9 := 1.000000
	40	[1882]	FORPREP  	R7 50 ; R7 -= R9; PC := 50
	41	[1883]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	42	[1883]	GETTABLE 	R11 R11 K12 ; R11 := R11["StoreItem"]
	43	[1883]	GETTABLE 	R12 R2 K12 ; R12 := R2["StoreItem"]
	44	[1883]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 50
	45	[1883]	JMP      	50 ; PC := 50
	46	[1884]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	47	[1884]	GETTABLE 	R11 R11 K13 ; R11 := R11["RawItem"]
	48	[1884]	SETTABLE 	R2 K13 R11 ; R2["RawItem"] := R11
	49	[1885]	JMP      	51 ; PC := 51
	50	[1882]	FORLOOP  	R7 41 ; R7 += R9; if R7 <= R8 then begin PC := 41; R10 := R7 end
	51	[1888]	GETUPVAL 	R11 U3 ; R11 := U3
	52	[1888]	LOADNIL  	R12 R12 ; R12 := nil
	53	[1888]	OP_LOADBOOL	R13 1 0 ; R13 := true
	54	[1888]	CALL     	R11 3 1 ; R11(R12,R13)
	55	[1891]	GETUPVAL 	R11 U4 ; R11 := U4
	56	[1891]	CALL     	R11 1 2 ; R11 := R11()
	57	[1892]	GETTABLE 	R12 R2 K13 ; R12 := R2["RawItem"]
	58	[1892]	TEST     	R12 0 ; if not R12 then PC := 66
	59	[1892]	JMP      	66 ; PC := 66
	60	[1893]	SELF     	R12 R11 K14 ; R13 := R11; R12 := R11[0x569554e7]
	61	[1893]	GETTABLE 	R14 R2 K13 ; R14 := R2["RawItem"]
	62	[1893]	GETTABLE 	R14 R14 K15 ; R14 := R14["Item"]
	63	[1893]	MOVE     	R15 R4 ; R15 := R4
	64	[1893]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	65	[1893]	JMP      	70 ; PC := 70
	66	[1895]	SELF     	R12 R11 K16 ; R13 := R11; R12 := R11[0xedd0b8c3]
	67	[1895]	LOADNIL  	R14 R14 ; R14 := nil
	68	[1895]	MOVE     	R15 R4 ; R15 := R4
	69	[1895]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	70	[1897]	GETGLOBAL	R12 K17 ; R12 := mShipSuit
	71	[1897]	SELF     	R12 R12 K18 ; R13 := R12; R12 := R12[0xaa041663]
	72	[1897]	MOVE     	R14 R11 ; R14 := R11
	73	[1897]	OP_LOADBOOL	R15 0 0 ; R15 := false
	74	[1897]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	75	[1898]	SELF     	R12 R11 K19 ; R13 := R11; R12 := R11[0x61b59a83]
	76	[1898]	GETGLOBAL	R14 K20 ; R14 := mShipAvatar
	77	[1898]	OP_LOADBOOL	R15 0 0 ; R15 := false
	78	[1898]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	79	[1899]	GETGLOBAL	R12 K8 ; R12 := 0x25d99d89
	80	[1899]	SELF     	R12 R12 K21 ; R13 := R12; R12 := R12[0xf225a72d]
	81	[1899]	MOVE     	R14 R11 ; R14 := R11
	82	[1899]	CALL     	R12 3 1 ; R12(R13,R14)
	83	[1902]	GETUPVAL 	R12 U5 ; R12 := U5
	84	[1902]	CALL     	R12 1 1 ; R12()
	85	[1904]	RETURN   	R0 1 ; return 

function #46 <?:1906,1991> (221 instructions, 884 bytes at 0000021104200C00)
2 params, 33 slots, 4 upvalues, 0 locals, 45 constants, 0 functions
	1	[1907]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1907]	CALL     	R2 1 2 ; R2 := R2()
	3	[1908]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	4	[1908]	MOVE     	R4 R2 ; R4 := R2
	5	[1908]	CALL     	R3 2 2 ; R3 := R3(R4)
	6	[1908]	TEST     	R3 0 ; if not R3 then PC := 9
	7	[1908]	JMP      	9 ; PC := 9
	8	[1909]	RETURN   	R0 1 ; return 
	9	[1912]	MOVE     	R3 R1 ; R3 := R1
	10	[1913]	EQ       	0 R3 K1 ; if R3 ~= nil then PC := 35
	11	[1913]	JMP      	35 ; PC := 35
	12	[1914]	EQ       	0 R0 K3 ; if R0 ~= 7.000000 then PC := 24
	13	[1914]	JMP      	24 ; PC := 24
	14	[1914]	GETGLOBAL	R4 K4 ; R4 := mInteriorCustomization
	15	[1914]	TEST     	R4 0 ; if not R4 then PC := 24
	16	[1914]	JMP      	24 ; PC := 24
	17	[1915]	GETGLOBAL	R4 K5 ; R4 := 0x60130201
	18	[1915]	LOADK    	R5 := 192.000000
	19	[1915]	LOADK    	R6 := 192.000000
	20	[1915]	LOADK    	R7 := 192.000000
	21	[1915]	LOADK    	R8 := 128.000000
	22	[1915]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	23	[1915]	MOVE     	R3 R4 ; R3 := R4
	24	[1917]	EQ       	0 R0 K6 ; if R0 ~= 5.000000 then PC := 35
	25	[1917]	JMP      	35 ; PC := 35
	26	[1918]	GETGLOBAL	R4 K5 ; R4 := 0x60130201
	27	[1918]	LOADK    	R5 := 92.000000
	28	[1918]	LOADK    	R6 := 92.000000
	29	[1918]	LOADK    	R7 := 92.000000
	30	[1918]	LOADK    	R8 := 255.000000
	31	[1918]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	32	[1918]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xa5d5c8f6]
	33	[1918]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[1918]	MOVE     	R3 R4 ; R3 := R4
	35	[1922]	EQ       	1 R3 K1 ; if R3 == nil then PC := 68
	36	[1922]	JMP      	68 ; PC := 68
	37	[1923]	GETGLOBAL	R4 K5 ; R4 := 0x60130201
	38	[1923]	MOVE     	R5 R3 ; R5 := R3
	39	[1923]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[1924]	EQ       	0 R0 K3 ; if R0 ~= 7.000000 then PC := 52
	41	[1924]	JMP      	52 ; PC := 52
	42	[1924]	GETGLOBAL	R5 K4 ; R5 := mInteriorCustomization
	43	[1924]	TEST     	R5 0 ; if not R5 then PC := 52
	44	[1924]	JMP      	52 ; PC := 52
	45	[1925]	GETGLOBAL	R5 K9 ; R5 := 0x5bced4c4
	46	[1925]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x55f27c30]
	47	[1925]	GETGLOBAL	R6 K11 ; R6 := mInteriorWearAndTear
	48	[1925]	MUL      	R6 R6 K12 ; R6 := R6 * 2.540000
	49	[1925]	CALL     	R5 2 2 ; R5 := R5(R6)
	50	[1925]	ADD      	R5 R5 K13 ; R5 := R5 + 1.000000
	51	[1925]	SETTABLE 	R4 K8 R5 ; R4["alpha"] := R5
	52	[1927]	EQ       	0 R0 K6 ; if R0 ~= 5.000000 then PC := 64
	53	[1927]	JMP      	64 ; PC := 64
	54	[1927]	GETGLOBAL	R5 K4 ; R5 := mInteriorCustomization
	55	[1927]	TEST     	R5 1 ; if R5 then PC := 64
	56	[1927]	JMP      	64 ; PC := 64
	57	[1928]	GETGLOBAL	R5 K9 ; R5 := 0x5bced4c4
	58	[1928]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x55f27c30]
	59	[1928]	GETGLOBAL	R6 K14 ; R6 := mWearAndTear
	60	[1928]	MUL      	R6 R6 K12 ; R6 := R6 * 2.540000
	61	[1928]	CALL     	R5 2 2 ; R5 := R5(R6)
	62	[1928]	ADD      	R5 R5 K13 ; R5 := R5 + 1.000000
	63	[1928]	SETTABLE 	R4 K8 R5 ; R4["alpha"] := R5
	64	[1930]	SELF     	R5 R2 K15 ; R6 := R2; R5 := R2[0xa3927fe9]
	65	[1930]	MOVE     	R7 R0 ; R7 := R0
	66	[1930]	MOVE     	R8 R4 ; R8 := R4
	67	[1930]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	68	[1932]	SELF     	R5 R2 K16 ; R6 := R2; R5 := R2[0xfc5d7158]
	69	[1932]	MOVE     	R7 R0 ; R7 := R0
	70	[1932]	EQ       	0 R3 K1 ; if R3 ~= nil then PC := 73
	71	[1932]	JMP      	73 ; PC := 73
	72	[1932]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 73
	73	[1932]	OP_LOADBOOL	R8 1 0 ; R8 := true
	74	[1932]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	75	[1934]	NEWTABLE 	R5 0 0 ; R5 := {}
	76	[1935]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	77	[1935]	GETGLOBAL	R7 K17 ; R7 := 0x89326c93
	78	[1935]	CALL     	R6 2 2 ; R6 := R6(R7)
	79	[1935]	TEST     	R6 1 ; if R6 then PC := 86
	80	[1935]	JMP      	86 ; PC := 86
	81	[1936]	GETGLOBAL	R6 K17 ; R6 := 0x89326c93
	82	[1936]	SELF     	R6 R6 K18 ; R7 := R6; R6 := R6[0xfb669000]
	83	[1936]	GETGLOBAL	R8 K19 ; R8 := gLisetDecorationType
	84	[1936]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	85	[1936]	MOVE     	R5 R6 ; R5 := R6
	86	[1938]	GETGLOBAL	R6 K4 ; R6 := mInteriorCustomization
	87	[1938]	TEST     	R6 0 ; if not R6 then PC := 136
	88	[1938]	JMP      	136 ; PC := 136
	89	[1939]	GETGLOBAL	R6 K20 ; R6 := _T
	90	[1939]	SETTABLE 	R6 K21 K22 ; R6["ApplyPlayerLisetColors"] := true
	91	[1941]	GETGLOBAL	R6 K23 ; R6 := 0xbe190284
	92	[1941]	SELF     	R6 R6 K24 ; R7 := R6; R6 := R6[0xd7d79b74]
	93	[1941]	CALL     	R6 2 2 ; R6 := R6(R7)
	94	[1942]	GETUPVAL 	R7 U1 ; R7 := U1
	95	[1942]	CALL     	R7 1 2 ; R7 := R7()
	96	[1943]	GETUPVAL 	R8 U2 ; R8 := U2
	97	[1943]	CALL     	R8 1 2 ; R8 := R8()
	98	[1944]	LOADK    	R9 := 1.000000
	99	[1944]	LEN      	R10 R5 ; R10 := # R5
	100	[1944]	LOADK    	R11 := 1.000000
	101	[1944]	FORPREP  	R9 134 ; R9 -= R11; PC := 134
	102	[1945]	GETGLOBAL	R13 K25 ; R13 := 0xce225efa
	103	[1945]	LOADK    	R14 := 0.000000
	104	[1945]	CALL     	R13 2 1 ; R13(R14)
	105	[1946]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	106	[1946]	MOVE     	R14 R6 ; R14 := R6
	107	[1946]	CALL     	R13 2 2 ; R13 := R13(R14)
	108	[1946]	TEST     	R13 1 ; if R13 then PC := 134
	109	[1946]	JMP      	134 ; PC := 134
	110	[1947]	SELF     	R13 R6 K26 ; R14 := R6; R13 := R6[0x973c5b4d]
	111	[1947]	GETTABLE 	R15 R5 R12 ; R15 := R5[R12]
	112	[1947]	SELF     	R15 R15 K27 ; R16 := R15; R15 := R15[0xe79e7ef4]
	113	[1947]	CALL     	R15 2 0 ; R15,... := R15(R16)
	114	[1947]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	115	[1948]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	116	[1948]	MOVE     	R15 R13 ; R15 := R13
	117	[1948]	CALL     	R14 2 2 ; R14 := R14(R15)
	118	[1948]	TEST     	R14 1 ; if R14 then PC := 134
	119	[1948]	JMP      	134 ; PC := 134
	120	[1949]	GETTABLE 	R14 R5 R12 ; R14 := R5[R12]
	121	[1949]	SELF     	R14 R14 K28 ; R15 := R14; R14 := R14[0x596f5027]
	122	[1949]	CALL     	R14 2 2 ; R14 := R14(R15)
	123	[1949]	TEST     	R14 0 ; if not R14 then PC := 130
	124	[1949]	JMP      	130 ; PC := 130
	125	[1950]	GETTABLE 	R14 R5 R12 ; R14 := R5[R12]
	126	[1950]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0xbde2634d]
	127	[1950]	MOVE     	R16 R7 ; R16 := R7
	128	[1950]	CALL     	R14 3 1 ; R14(R15,R16)
	129	[1950]	JMP      	134 ; PC := 134
	130	[1952]	SELF     	R14 R8 K30 ; R15 := R8; R14 := R8[0x61b59a83]
	131	[1952]	GETTABLE 	R16 R5 R12 ; R16 := R5[R12]
	132	[1952]	OP_LOADBOOL	R17 0 0 ; R17 := false
	133	[1952]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	134	[1944]	FORLOOP  	R9 102 ; R9 += R11; if R9 <= R10 then begin PC := 102; R12 := R9 end
	135	[1956]	JMP      	221 ; PC := 221
	136	[1958]	GETUPVAL 	R14 U2 ; R14 := U2
	137	[1958]	CALL     	R14 1 2 ; R14 := R14()
	138	[1959]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	139	[1959]	MOVE     	R16 R14 ; R16 := R14
	140	[1959]	CALL     	R15 2 2 ; R15 := R15(R16)
	141	[1959]	TEST     	R15 1 ; if R15 then PC := 214
	142	[1959]	JMP      	214 ; PC := 214
	143	[1960]	LOADK    	R15 := 1.000000
	144	[1960]	LEN      	R16 R5 ; R16 := # R5
	145	[1960]	LOADK    	R17 := 1.000000
	146	[1960]	FORPREP  	R15 159 ; R15 -= R17; PC := 159
	147	[1961]	GETGLOBAL	R19 K25 ; R19 := 0xce225efa
	148	[1961]	LOADK    	R20 := 0.000000
	149	[1961]	CALL     	R19 2 1 ; R19(R20)
	150	[1962]	GETTABLE 	R19 R5 R18 ; R19 := R5[R18]
	151	[1962]	SELF     	R19 R19 K28 ; R20 := R19; R19 := R19[0x596f5027]
	152	[1962]	CALL     	R19 2 2 ; R19 := R19(R20)
	153	[1962]	TEST     	R19 1 ; if R19 then PC := 159
	154	[1962]	JMP      	159 ; PC := 159
	155	[1963]	SELF     	R19 R14 K30 ; R20 := R14; R19 := R14[0x61b59a83]
	156	[1963]	GETTABLE 	R21 R5 R18 ; R21 := R5[R18]
	157	[1963]	OP_LOADBOOL	R22 0 0 ; R22 := false
	158	[1963]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	159	[1960]	FORLOOP  	R15 147 ; R15 += R17; if R15 <= R16 then begin PC := 147; R18 := R15 end
	160	[1967]	SELF     	R19 R14 K31 ; R20 := R14; R19 := R14[0x199edf6e]
	161	[1967]	LOADK    	R21 := 0.000000
	162	[1967]	MOVE     	R22 R2 ; R22 := R2
	163	[1967]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	164	[1968]	GETGLOBAL	R19 K32 ; R19 := mShipSuit
	165	[1968]	SELF     	R19 R19 K33 ; R20 := R19; R19 := R19[0xaa041663]
	166	[1968]	MOVE     	R21 R14 ; R21 := R14
	167	[1968]	OP_LOADBOOL	R22 0 0 ; R22 := false
	168	[1968]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	169	[1969]	EQ       	1 R0 K6 ; if R0 == 5.000000 then PC := 214
	170	[1969]	JMP      	214 ; PC := 214
	171	[1970]	SELF     	R19 R14 K30 ; R20 := R14; R19 := R14[0x61b59a83]
	172	[1970]	GETGLOBAL	R21 K34 ; R21 := mShipAvatar
	173	[1970]	OP_LOADBOOL	R22 0 0 ; R22 := false
	174	[1970]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	175	[1971]	GETGLOBAL	R19 K34 ; R19 := mShipAvatar
	176	[1971]	SELF     	R19 R19 K35 ; R20 := R19; R19 := R19[0xc1595bd5]
	177	[1971]	GETGLOBAL	R21 K36 ; R21 := gLotusEffectDecorationType
	178	[1971]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	179	[1972]	EQ       	1 R0 K37 ; if R0 == 6.000000 then PC := 183
	180	[1972]	JMP      	183 ; PC := 183
	181	[1972]	EQ       	0 R0 K3 ; if R0 ~= 7.000000 then PC := 214
	182	[1972]	JMP      	214 ; PC := 214
	183	[1973]	LOADK    	R20 := 1.000000
	184	[1973]	LEN      	R21 R19 ; R21 := # R19
	185	[1973]	LOADK    	R22 := 1.000000
	186	[1973]	FORPREP  	R20 213 ; R20 -= R22; PC := 213
	187	[1974]	GETGLOBAL	R24 K32 ; R24 := mShipSuit
	188	[1974]	SELF     	R24 R24 K38 ; R25 := R24; R24 := R24[0x22f0b321]
	189	[1974]	GETTABLE 	R26 R19 R23 ; R26 := R19[R23]
	190	[1974]	CALL     	R24 3 1 ; R24(R25,R26)
	191	[1975]	GETTABLE 	R24 R19 R23 ; R24 := R19[R23]
	192	[1975]	SELF     	R24 R24 K35 ; R25 := R24; R24 := R24[0xc1595bd5]
	193	[1975]	GETGLOBAL	R26 K39 ; R26 := gLensFlareType
	194	[1975]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	195	[1976]	LOADK    	R25 := 1.000000
	196	[1976]	LEN      	R26 R24 ; R26 := # R24
	197	[1976]	LOADK    	R27 := 1.000000
	198	[1976]	FORPREP  	R25 203 ; R25 -= R27; PC := 203
	199	[1977]	GETGLOBAL	R29 K32 ; R29 := mShipSuit
	200	[1977]	SELF     	R29 R29 K38 ; R30 := R29; R29 := R29[0x22f0b321]
	201	[1977]	GETTABLE 	R31 R24 R28 ; R31 := R24[R28]
	202	[1977]	CALL     	R29 3 1 ; R29(R30,R31)
	203	[1976]	FORLOOP  	R25 199 ; R25 += R27; if R25 <= R26 then begin PC := 199; R28 := R25 end
	204	[1979]	GETTABLE 	R29 R19 R23 ; R29 := R19[R23]
	205	[1979]	SELF     	R29 R29 K40 ; R30 := R29; R29 := R29[0x08db51de]
	206	[1979]	GETUPVAL 	R31 U3 ; R31 := U3
	207	[1979]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	208	[1979]	TEST     	R29 0 ; if not R29 then PC := 213
	209	[1979]	JMP      	213 ; PC := 213
	210	[1980]	GETTABLE 	R29 R19 R23 ; R29 := R19[R23]
	211	[1980]	SELF     	R29 R29 K41 ; R30 := R29; R29 := R29[0x1db57c6b]
	212	[1980]	CALL     	R29 2 1 ; R29(R30)
	213	[1973]	FORLOOP  	R20 187 ; R20 += R22; if R20 <= R21 then begin PC := 187; R23 := R20 end
	214	[1987]	EQ       	0 R0 K6 ; if R0 ~= 5.000000 then PC := 221
	215	[1987]	JMP      	221 ; PC := 221
	216	[1988]	GETGLOBAL	R29 K42 ; R29 := 0x9ba7909f
	217	[1988]	SELF     	R29 R29 K43 ; R30 := R29; R29 := R29[0x7e17ae26]
	218	[1988]	LOADK    	R31 K44 ; R31 := "SetRailjackTextColor"
	219	[1988]	MOVE     	R32 R3 ; R32 := R3
	220	[1988]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	221	[1991]	RETURN   	R0 1 ; return 

function #47 <?:1993,2028> (78 instructions, 312 bytes at 0000021104200C90)
3 params, 17 slots, 1 upvalue, 0 locals, 33 constants, 0 functions
	1	[1994]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 5
	2	[1994]	JMP      	5 ; PC := 5
	3	[1995]	NEWTABLE 	R3 0 0 ; R3 := {}
	4	[1995]	MOVE     	R2 R3 ; R2 := R3
	5	[1998]	LOADK    	R3 := 1.000000
	6	[1998]	LEN      	R4 R0 ; R4 := # R0
	7	[1998]	LOADK    	R5 := 1.000000
	8	[1998]	FORPREP  	R3 76 ; R3 -= R5; PC := 76
	9	[1999]	GETTABLE 	R7 R0 R6 ; R7 := R0[R6]
	10	[2000]	GETTABLE 	R8 R7 K1 ; R8 := R7["mItemType"]
	11	[2001]	GETTABLE 	R9 R7 K2 ; R9 := R7["mItemId"]
	12	[2001]	GETTABLE 	R9 R9 K3 ; R9 := R9["mId"]
	13	[2003]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	14	[2003]	MOVE     	R11 R8 ; R11 := R8
	15	[2003]	CALL     	R10 2 2 ; R10 := R10(R11)
	16	[2003]	TEST     	R10 1 ; if R10 then PC := 76
	17	[2003]	JMP      	76 ; PC := 76
	18	[2004]	GETUPVAL 	R10 U0 ; R10 := U0
	19	[2004]	SELF     	R10 R10 K5 ; R11 := R10; R10 := R10[0x105074fb]
	20	[2004]	MOVE     	R12 R8 ; R12 := R8
	21	[2004]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	22	[2006]	GETGLOBAL	R11 K4 ; R11 := 0x7b998233
	23	[2006]	MOVE     	R12 R10 ; R12 := R10
	24	[2006]	CALL     	R11 2 2 ; R11 := R11(R12)
	25	[2006]	TEST     	R11 1 ; if R11 then PC := 76
	26	[2006]	JMP      	76 ; PC := 76
	27	[2007]	NEWTABLE 	R11 0 7 ; R11 := {}
	28	[2007]	SETTABLE 	R11 K6 R8 ; R11[0xb71355b8] := R8
	29	[2007]	SETTABLE 	R11 K7 R10 ; R11["mStoreItem"] := R10
	30	[2007]	GETGLOBAL	R12 K9 ; R12 := 0xae91e43b
	31	[2007]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0x42b04007]
	32	[2007]	GETGLOBAL	R14 K11 ; R14 := 0x64fb1586
	33	[2007]	SELF     	R15 R10 K12 ; R16 := R10; R15 := R10[0xd3a9d01f]
	34	[2007]	CALL     	R15 2 0 ; R15,... := R15(R16)
	35	[2007]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	36	[2007]	OP_LOADBOOL	R15 0 0 ; R15 := false
	37	[2007]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	38	[2007]	SETTABLE 	R11 K8 R12 ; R11["Name"] := R12
	39	[2007]	SETTABLE 	R11 K13 R9 ; R11["UID"] := R9
	40	[2007]	GETTABLE 	R12 R7 K15 ; R12 := R7["mXP"]
	41	[2007]	SETTABLE 	R11 K14 R12 ; R11["Xp"] := R12
	42	[2007]	SETTABLE 	R11 K16 R7 ; R11["Item"] := R7
	43	[2007]	GETTABLE 	R12 R7 K18 ; R12 := R7["mItemCount"]
	44	[2007]	SETTABLE 	R11 K17 R12 ; R11["ItemCount"] := R12
	45	[2009]	GETTABLE 	R12 R7 K19 ; R12 := R7["mModularParts"]
	46	[2009]	LEN      	R12 R12 ; R12 := # R12
	47	[2009]	LT       	0 K20 R12 ; if 0.000000 >= R12 then PC := 55
	48	[2009]	JMP      	55 ; PC := 55
	49	[2010]	GETTABLE 	R12 R7 K19 ; R12 := R7["mModularParts"]
	50	[2010]	SETTABLE 	R11 K19 R12 ; R11["mModularParts"] := R12
	51	[2011]	SELF     	R12 R7 K22 ; R13 := R7; R12 := R7[0xdbfbf6c0]
	52	[2011]	LOADK    	R14 := 3.000000
	53	[2011]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	54	[2011]	SETTABLE 	R11 K21 R12 ; R11["mGild"] := R12
	55	[2014]	GETTABLE 	R12 R7 K24 ; R12 := R7["mItemName"]
	56	[2014]	EQ       	1 R12 K25 ; if R12 == "" then PC := 60
	57	[2014]	JMP      	60 ; PC := 60
	58	[2015]	GETTABLE 	R12 R7 K24 ; R12 := R7["mItemName"]
	59	[2015]	SETTABLE 	R11 K26 R12 ; R11["CustomName"] := R12
	60	[2018]	TEST     	R1 0 ; if not R1 then PC := 71
	61	[2018]	JMP      	71 ; PC := 71
	62	[2018]	GETGLOBAL	R12 K4 ; R12 := 0x7b998233
	63	[2018]	GETGLOBAL	R13 K27 ; R13 := mCrewShipWeaponSkinsLoader
	64	[2018]	CALL     	R12 2 2 ; R12 := R12(R13)
	65	[2018]	TEST     	R12 0 ; if not R12 then PC := 71
	66	[2018]	JMP      	71 ; PC := 71
	67	[2019]	GETGLOBAL	R12 K28 ; R12 := mCrewShipWeaponSkinsToLoad
	68	[2019]	SELF     	R13 R8 K29 ; R14 := R8; R13 := R8[0xed4e0128]
	69	[2019]	CALL     	R13 2 2 ; R13 := R13(R14)
	70	[2019]	SETTABLE 	R12 R13 K30 ; R12[R13] := true
	71	[2022]	GETGLOBAL	R12 K31 ; R12 := 0x33bdd652
	72	[2022]	GETTABLE 	R12 R12 K32 ; R12 := R12[0x23d5322f]
	73	[2022]	MOVE     	R13 R2 ; R13 := R2
	74	[2022]	MOVE     	R14 R11 ; R14 := R11
	75	[2022]	CALL     	R12 3 1 ; R12(R13,R14)
	76	[1998]	FORLOOP  	R3 9 ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
	77	[2027]	RETURN   	R2 2 ; return R2 
	78	[2028]	RETURN   	R0 1 ; return 

function #48 <?:2030,2051> (57 instructions, 228 bytes at 000002113884F870)
3 params, 16 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[2031]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 5
	2	[2031]	JMP      	5 ; PC := 5
	3	[2032]	NEWTABLE 	R3 0 0 ; R3 := {}
	4	[2032]	MOVE     	R2 R3 ; R2 := R3
	5	[2035]	LOADK    	R3 := 1.000000
	6	[2035]	LEN      	R4 R0 ; R4 := # R0
	7	[2035]	LOADK    	R5 := 1.000000
	8	[2035]	FORPREP  	R3 55 ; R3 -= R5; PC := 55
	9	[2036]	GETTABLE 	R7 R0 R6 ; R7 := R0[R6]
	10	[2037]	GETTABLE 	R8 R7 K1 ; R8 := R7["mItemType"]
	11	[2039]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	12	[2039]	MOVE     	R10 R8 ; R10 := R8
	13	[2039]	CALL     	R9 2 2 ; R9 := R9(R10)
	14	[2039]	TEST     	R9 1 ; if R9 then PC := 55
	15	[2039]	JMP      	55 ; PC := 55
	16	[2040]	GETUPVAL 	R9 U0 ; R9 := U0
	17	[2040]	SELF     	R9 R9 K3 ; R10 := R9; R9 := R9[0x105074fb]
	18	[2040]	MOVE     	R11 R8 ; R11 := R8
	19	[2040]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	20	[2042]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	21	[2042]	MOVE     	R11 R9 ; R11 := R9
	22	[2042]	CALL     	R10 2 2 ; R10 := R10(R11)
	23	[2042]	TEST     	R10 1 ; if R10 then PC := 55
	24	[2042]	JMP      	55 ; PC := 55
	25	[2042]	SELF     	R10 R9 K4 ; R11 := R9; R10 := R9[0xfe9eb1a5]
	26	[2042]	CALL     	R10 2 2 ; R10 := R10(R11)
	27	[2042]	EQ       	0 R10 R1 ; if R10 ~= R1 then PC := 55
	28	[2042]	JMP      	55 ; PC := 55
	29	[2042]	GETTABLE 	R10 R7 K5 ; R10 := R7["mItemCount"]
	30	[2042]	LT       	0 K6 R10 ; if 0.000000 >= R10 then PC := 55
	31	[2042]	JMP      	55 ; PC := 55
	32	[2043]	NEWTABLE 	R10 0 6 ; R10 := {}
	33	[2043]	SETTABLE 	R10 K7 R8 ; R10["ItemType"] := R8
	34	[2043]	SETTABLE 	R10 K8 R9 ; R10["mStoreItem"] := R9
	35	[2043]	GETGLOBAL	R11 K10 ; R11 := 0xae91e43b
	36	[2043]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x42b04007]
	37	[2043]	GETGLOBAL	R13 K12 ; R13 := 0x64fb1586
	38	[2043]	SELF     	R14 R9 K13 ; R15 := R9; R14 := R9[0xd3a9d01f]
	39	[2043]	CALL     	R14 2 0 ; R14,... := R14(R15)
	40	[2043]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	41	[2043]	OP_LOADBOOL	R14 0 0 ; R14 := false
	42	[2043]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	43	[2043]	SETTABLE 	R10 K9 R11 ; R10["Name"] := R11
	44	[2043]	SETTABLE 	R10 K14 R7 ; R10["Item"] := R7
	45	[2044]	GETTABLE 	R11 R7 K5 ; R11 := R7["mItemCount"]
	46	[2044]	SETTABLE 	R10 K15 R11 ; R10["ItemCount"] := R11
	47	[2044]	GETGLOBAL	R11 K17 ; R11 := 0x6c97a788
	48	[2044]	GETTABLE 	R11 R11 K18 ; R11 := R11["InvalidItemID"]
	49	[2044]	SETTABLE 	R10 K16 R11 ; R10["UID"] := R11
	50	[2045]	GETGLOBAL	R11 K19 ; R11 := 0x33bdd652
	51	[2045]	GETTABLE 	R11 R11 K20 ; R11 := R11[0x23d5322f]
	52	[2045]	MOVE     	R12 R2 ; R12 := R2
	53	[2045]	MOVE     	R13 R10 ; R13 := R10
	54	[2045]	CALL     	R11 3 1 ; R11(R12,R13)
	55	[2035]	FORLOOP  	R3 9 ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
	56	[2050]	RETURN   	R2 2 ; return R2 
	57	[2051]	RETURN   	R0 1 ; return 

function #49 <?:2053,2055> (5 instructions, 20 bytes at 0000021133E2F910)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2054]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2054]	MOVE     	R3 R0 ; R3 := R0
	3	[2054]	MOVE     	R4 R1 ; R4 := R1
	4	[2054]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2055]	RETURN   	R0 1 ; return 

function #50 <?:2057,2058> (1 instruction, 4 bytes at 000002111561DD20)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2058]	RETURN   	R0 1 ; return 

function #51 <?:2060,2083> (61 instructions, 244 bytes at 000002111561DDB0)
2 params, 6 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[2061]	TEST     	R0 1 ; if R0 then PC := 3
	2	[2061]	JMP      	3 ; PC := 3
	3	[2064]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[2064]	GETTABLE 	R2 R2 K1 ; R2 := R2["BackgroundMovie"]
	5	[2064]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	6	[2064]	LOADK    	R4 K3 ; R4 := "ShowBlockingMessage"
	7	[2064]	LOADK    	R5 K4 ; R5 := "0"
	8	[2064]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	9	[2065]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[2065]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x8fbd62e4]
	11	[2065]	LOADK    	R3 K6 ; R3 := "OnUpdateSessionSettings"
	12	[2065]	CALL     	R2 2 1 ; R2(R3)
	13	[2067]	GETGLOBAL	R2 K7 ; R2 := 0x25d99d89
	14	[2067]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xdfa0cbbf]
	15	[2067]	CALL     	R2 2 1 ; R2(R3)
	16	[2069]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	17	[2069]	GETGLOBAL	R3 K10 ; R3 := mShipSuit
	18	[2069]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[2069]	TEST     	R2 1 ; if R2 then PC := 44
	20	[2069]	JMP      	44 ; PC := 44
	21	[2070]	GETGLOBAL	R2 K7 ; R2 := 0x25d99d89
	22	[2070]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x62c81b76]
	23	[2070]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[2071]	GETGLOBAL	R3 K10 ; R3 := mShipSuit
	25	[2071]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x62f4c7cf]
	26	[2071]	GETTABLE 	R5 R2 K13 ; R5 := R2["mCrewShipLoadOut"]
	27	[2071]	CALL     	R3 3 1 ; R3(R4,R5)
	28	[2072]	GETGLOBAL	R3 K9 ; R3 := 0x7b998233
	29	[2072]	GETGLOBAL	R4 K14 ; R4 := mShipAvatar
	30	[2072]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[2072]	TEST     	R3 1 ; if R3 then PC := 44
	32	[2072]	JMP      	44 ; PC := 44
	33	[2072]	GETGLOBAL	R3 K9 ; R3 := 0x7b998233
	34	[2072]	GETGLOBAL	R4 K0 ; R4 := _T
	35	[2072]	GETTABLE 	R4 R4 K15 ; R4 := R4["ConvertCapacityToShields"]
	36	[2072]	CALL     	R3 2 2 ; R3 := R3(R4)
	37	[2072]	TEST     	R3 1 ; if R3 then PC := 44
	38	[2072]	JMP      	44 ; PC := 44
	39	[2073]	GETGLOBAL	R3 K0 ; R3 := _T
	40	[2073]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x99417eee]
	41	[2073]	GETGLOBAL	R4 K14 ; R4 := mShipAvatar
	42	[2073]	GETGLOBAL	R5 K10 ; R5 := mShipSuit
	43	[2073]	CALL     	R3 3 1 ; R3(R4,R5)
	44	[2077]	GETGLOBAL	R3 K9 ; R3 := 0x7b998233
	45	[2077]	GETGLOBAL	R4 K0 ; R4 := _T
	46	[2077]	GETTABLE 	R4 R4 K17 ; R4 := R4["mTrigger"]
	47	[2077]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[2077]	TEST     	R3 1 ; if R3 then PC := 58
	49	[2077]	JMP      	58 ; PC := 58
	50	[2078]	GETGLOBAL	R3 K0 ; R3 := _T
	51	[2078]	GETTABLE 	R3 R3 K17 ; R3 := R3["mTrigger"]
	52	[2078]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0x8eb2112d]
	53	[2078]	LOADK    	R5 K19 ; R5 := "Close"
	54	[2078]	CALL     	R3 3 1 ; R3(R4,R5)
	55	[2079]	GETGLOBAL	R3 K0 ; R3 := _T
	56	[2079]	SETTABLE 	R3 K17 K20 ; R3["mTrigger"] := nil
	57	[2079]	JMP      	61 ; PC := 61
	58	[2081]	GETGLOBAL	R3 K21 ; R3 := 0xae91e43b
	59	[2081]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0x32302b4a]
	60	[2081]	CALL     	R3 2 1 ; R3(R4)
	61	[2083]	RETURN   	R0 1 ; return 

function #52 <?:2085,2095> (28 instructions, 112 bytes at 000002111561DE40)
2 params, 11 slots, 0 upvalues, 0 locals, 9 constants, 1 function
	1	[2086]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[2086]	MOVE     	R3 R0 ; R3 := R0
	3	[2086]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2086]	TEST     	R2 1 ; if R2 then PC := 28
	5	[2086]	JMP      	28 ; PC := 28
	6	[2087]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x1d75805c]
	7	[2087]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2088]	GETGLOBAL	R3 K2 ; R3 := 0x25312c9b
	9	[2088]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	10	[2088]	LOADK    	R5 K4 ; R5 := "TopLeftContainer"
	11	[2088]	LOADK    	R6 := 0.000000
	12	[2088]	NEWTABLE 	R7 1 0 ; R7 := {}
	13	[2093]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	14	[2093]	MOVE     	R0 R0 ; R0 := R0
	15	[2093]	MOVE     	R0 R2 ; R0 := R2
	16	[2093]	MOVE     	R0 R1 ; R0 := R1
	17	[2093]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	18	[2093]	NEWTABLE 	R8 1 0 ; R8 := {}
	19	[2093]	LOADK    	R9 := 1.000000
	20	[2093]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	21	[2093]	GETGLOBAL	R9 K6 ; R9 := 0x5bced4c4
	22	[2093]	GETTABLE 	R9 R9 K7 ; R9 := R9[0xe4a5b3ca]
	23	[2093]	SUB      	R10 R1 R2 ; R10 := R1 - R2
	24	[2093]	CALL     	R9 2 2 ; R9 := R9(R10)
	25	[2093]	MUL      	R9 R9 K8 ; R9 := R9 * 2.500000
	26	[2088]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	27	[2093]	CLOSE    	R2 ; SAVE R2,...
	28	[2095]	RETURN   	R0 1 ; return 

function #53 <?:2097,2101> (17 instructions, 68 bytes at 0000021133D54CB0)
1 param, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2098]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[2098]	JMP      	4 ; PC := 4
	3	[2098]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[2098]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[2099]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	6	[2099]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	7	[2099]	LOADK    	R3 K3 ; R3 := "TopLeftContainer"
	8	[2099]	LOADK    	R4 := 11.000000
	9	[2099]	MOVE     	R5 R0 ; R5 := R0
	10	[2099]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	11	[2100]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	12	[2100]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	13	[2100]	LOADK    	R3 K4 ; R3 := "TopRightContainer"
	14	[2100]	LOADK    	R4 := 11.000000
	15	[2100]	MOVE     	R5 R0 ; R5 := R0
	16	[2100]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	17	[2101]	RETURN   	R0 1 ; return 

function #54 <?:2103,2118> (43 instructions, 172 bytes at 0000021133D54D40)
0 params, 5 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[2104]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2104]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	3	[2104]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2104]	TEST     	R0 1 ; if R0 then PC := 41
	5	[2104]	JMP      	41 ; PC := 41
	6	[2105]	GETGLOBAL	R0 K1 ; R0 := mShipSuit
	7	[2105]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x68d708a7]
	8	[2105]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[2105]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5ef3783b]
	10	[2105]	LOADK    	R2 := 6.000000
	11	[2105]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	12	[2106]	GETTABLE 	R1 R0 K5 ; R1 := R0["mItemType"]
	13	[2107]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	14	[2107]	MOVE     	R3 R1 ; R3 := R1
	15	[2107]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[2107]	TEST     	R2 1 ; if R2 then PC := 41
	17	[2107]	JMP      	41 ; PC := 41
	18	[2108]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	19	[2108]	GETGLOBAL	R4 K7 ; R4 := 0xbadb32c0
	20	[2108]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[2108]	TEST     	R2 0 ; if not R2 then PC := 26
	22	[2108]	JMP      	26 ; PC := 26
	23	[2109]	LOADK    	R2 K8 ; R2 := "_Caballero"
	24	[2109]	RETURN   	R2 2 ; return R2 
	25	[2109]	JMP      	41 ; PC := 41
	26	[2110]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	27	[2110]	GETGLOBAL	R4 K9 ; R4 := 0x366fa086
	28	[2110]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	29	[2110]	TEST     	R2 0 ; if not R2 then PC := 34
	30	[2110]	JMP      	34 ; PC := 34
	31	[2111]	LOADK    	R2 K10 ; R2 := "_SunGem"
	32	[2111]	RETURN   	R2 2 ; return R2 
	33	[2111]	JMP      	41 ; PC := 41
	34	[2112]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	35	[2112]	GETGLOBAL	R4 K11 ; R4 := 0xb72600d8
	36	[2112]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	37	[2112]	TEST     	R2 0 ; if not R2 then PC := 41
	38	[2112]	JMP      	41 ; PC := 41
	39	[2113]	LOADK    	R2 K12 ; R2 := "_Ghost"
	40	[2113]	RETURN   	R2 2 ; return R2 
	41	[2117]	LOADK    	R2 K13 ; R2 := ""
	42	[2117]	RETURN   	R2 2 ; return R2 
	43	[2118]	RETURN   	R0 1 ; return 

function #55 <?:2120,2135> (43 instructions, 172 bytes at 00000211170886A0)
0 params, 5 slots, 4 upvalues, 0 locals, 10 constants, 0 functions
	1	[2121]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2121]	GETGLOBAL	R1 K1 ; R1 := mShipSuit
	3	[2121]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2121]	TEST     	R0 1 ; if R0 then PC := 41
	5	[2121]	JMP      	41 ; PC := 41
	6	[2122]	GETGLOBAL	R0 K1 ; R0 := mShipSuit
	7	[2122]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x68d708a7]
	8	[2122]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[2122]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5ef3783b]
	10	[2122]	LOADK    	R2 := 6.000000
	11	[2122]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	12	[2123]	GETTABLE 	R1 R0 K5 ; R1 := R0["mItemType"]
	13	[2124]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	14	[2124]	MOVE     	R3 R1 ; R3 := R1
	15	[2124]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[2124]	TEST     	R2 1 ; if R2 then PC := 41
	17	[2124]	JMP      	41 ; PC := 41
	18	[2125]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	19	[2125]	GETGLOBAL	R4 K7 ; R4 := 0xbadb32c0
	20	[2125]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[2125]	TEST     	R2 0 ; if not R2 then PC := 26
	22	[2125]	JMP      	26 ; PC := 26
	23	[2126]	GETUPVAL 	R2 U0 ; R2 := U0
	24	[2126]	RETURN   	R2 2 ; return R2 
	25	[2126]	JMP      	41 ; PC := 41
	26	[2127]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	27	[2127]	GETGLOBAL	R4 K8 ; R4 := 0xb72600d8
	28	[2127]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	29	[2127]	TEST     	R2 0 ; if not R2 then PC := 34
	30	[2127]	JMP      	34 ; PC := 34
	31	[2128]	GETUPVAL 	R2 U1 ; R2 := U1
	32	[2128]	RETURN   	R2 2 ; return R2 
	33	[2128]	JMP      	41 ; PC := 41
	34	[2129]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	35	[2129]	GETGLOBAL	R4 K9 ; R4 := 0x366fa086
	36	[2129]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	37	[2129]	TEST     	R2 0 ; if not R2 then PC := 41
	38	[2129]	JMP      	41 ; PC := 41
	39	[2130]	GETUPVAL 	R2 U2 ; R2 := U2
	40	[2130]	RETURN   	R2 2 ; return R2 
	41	[2134]	GETUPVAL 	R2 U3 ; R2 := U3
	42	[2134]	RETURN   	R2 2 ; return R2 
	43	[2135]	RETURN   	R0 1 ; return 

function #56 <?:2137,2152> (64 instructions, 256 bytes at 000002112A9F48C0)
0 params, 5 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[2138]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2138]	GETGLOBAL	R1 K1 ; R1 := mShipAvatar
	3	[2138]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2138]	TEST     	R0 1 ; if R0 then PC := 64
	5	[2138]	JMP      	64 ; PC := 64
	6	[2139]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[2139]	CALL     	R0 1 2 ; R0 := R0()
	8	[2140]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[2140]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x2a1108a9]
	10	[2140]	LOADK    	R2 K4 ; R2 := "WeaponPathMover"
	11	[2140]	MOVE     	R3 R0 ; R3 := R0
	12	[2140]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	13	[2140]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	14	[2140]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xd1586535]
	15	[2140]	CALL     	R3 2 0 ; R3,... := R3(R4)
	16	[2140]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	17	[2140]	SETGLOBALHASH	R1 K2 ; mWeaponMover := R1
	18	[2141]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	19	[2141]	GETGLOBAL	R2 K2 ; R2 := mWeaponMover
	20	[2141]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[2141]	TEST     	R1 1 ; if R1 then PC := 36
	22	[2141]	JMP      	36 ; PC := 36
	23	[2142]	GETGLOBAL	R1 K2 ; R1 := mWeaponMover
	24	[2142]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5c1f3942]
	25	[2142]	OP_LOADBOOL	R3 1 0 ; R3 := true
	26	[2142]	CALL     	R1 3 1 ; R1(R2,R3)
	27	[2143]	GETGLOBAL	R1 K2 ; R1 := mWeaponMover
	28	[2143]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xd3ac44e0]
	29	[2143]	GETGLOBAL	R3 K8 ; R3 := mEquipment
	30	[2143]	GETTABLE 	R3 R3 K9 ; R3 := R3["mElements"]
	31	[2143]	GETUPVAL 	R4 U2 ; R4 := U2
	32	[2143]	GETTABLE 	R4 R4 K10 ; R4 := R4["ORDINANCE"]
	33	[2143]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	34	[2143]	GETTABLE 	R3 R3 K11 ; R3 := R3["MoverTime"]
	35	[2143]	CALL     	R1 3 1 ; R1(R2,R3)
	36	[2146]	GETUPVAL 	R1 U1 ; R1 := U1
	37	[2146]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x2a1108a9]
	38	[2146]	LOADK    	R2 K13 ; R2 := "CosmeticPathMover"
	39	[2146]	MOVE     	R3 R0 ; R3 := R0
	40	[2146]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	41	[2146]	GETGLOBAL	R3 K1 ; R3 := mShipAvatar
	42	[2146]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xd1586535]
	43	[2146]	CALL     	R3 2 0 ; R3,... := R3(R4)
	44	[2146]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	45	[2146]	SETGLOBALHASH	R1 K12 ; mCosmeticMover := R1
	46	[2147]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	47	[2147]	GETGLOBAL	R2 K12 ; R2 := mCosmeticMover
	48	[2147]	CALL     	R1 2 2 ; R1 := R1(R2)
	49	[2147]	TEST     	R1 1 ; if R1 then PC := 64
	50	[2147]	JMP      	64 ; PC := 64
	51	[2148]	GETGLOBAL	R1 K12 ; R1 := mCosmeticMover
	52	[2148]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5c1f3942]
	53	[2148]	OP_LOADBOOL	R3 1 0 ; R3 := true
	54	[2148]	CALL     	R1 3 1 ; R1(R2,R3)
	55	[2149]	GETGLOBAL	R1 K12 ; R1 := mCosmeticMover
	56	[2149]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xd3ac44e0]
	57	[2149]	GETGLOBAL	R3 K8 ; R3 := mEquipment
	58	[2149]	GETTABLE 	R3 R3 K9 ; R3 := R3["mElements"]
	59	[2149]	GETUPVAL 	R4 U2 ; R4 := U2
	60	[2149]	GETTABLE 	R4 R4 K10 ; R4 := R4["ORDINANCE"]
	61	[2149]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	62	[2149]	GETTABLE 	R3 R3 K11 ; R3 := R3["MoverTime"]
	63	[2149]	CALL     	R1 3 1 ; R1(R2,R3)
	64	[2152]	RETURN   	R0 1 ; return 

function #57 <?:2154,2200> (115 instructions, 460 bytes at 0000021137A377A0)
2 params, 15 slots, 6 upvalues, 0 locals, 23 constants, 2 functions
	1	[2155]	GETGLOBAL	R2 K0 ; R2 := mInteriorCustomization
	2	[2155]	TEST     	R2 0 ; if not R2 then PC := 6
	3	[2155]	JMP      	6 ; PC := 6
	4	[2156]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[2156]	JMP      	18 ; PC := 18
	6	[2157]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 18
	7	[2157]	JMP      	18 ; PC := 18
	8	[2158]	GETUPVAL 	R2 U1 ; R2 := U1
	9	[2158]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xb73d420f]
	10	[2158]	CALL     	R2 1 2 ; R2 := R2()
	11	[2159]	GETUPVAL 	R3 U1 ; R3 := U1
	12	[2159]	GETTABLE 	R3 R3 K3 ; R3 := R3["UI_MODE_IN_SPACE_HUB"]
	13	[2159]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 17
	14	[2159]	JMP      	17 ; PC := 17
	15	[2160]	GETUPVAL 	R0 U2 ; R0 := U2
	16	[2160]	JMP      	18 ; PC := 18
	17	[2162]	GETUPVAL 	R0 U3 ; R0 := U3
	18	[2166]	GETGLOBAL	R3 K4 ; R3 := mCameraTag
	19	[2166]	EQ       	0 R3 R0 ; if R3 ~= R0 then PC := 23
	20	[2166]	JMP      	23 ; PC := 23
	21	[2166]	TEST     	R1 0 ; if not R1 then PC := 113
	22	[2166]	JMP      	113 ; PC := 113
	23	[2166]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	24	[2166]	GETGLOBAL	R4 K6 ; R4 := mShipAvatar
	25	[2166]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[2166]	TEST     	R3 1 ; if R3 then PC := 113
	27	[2166]	JMP      	113 ; PC := 113
	28	[2167]	GETGLOBAL	R3 K7 ; R3 := mAvatar
	29	[2167]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x0b4bcfb6]
	30	[2167]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[2168]	GETGLOBAL	R4 K5 ; R4 := 0x7b998233
	32	[2168]	MOVE     	R5 R3 ; R5 := R3
	33	[2168]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[2168]	TEST     	R4 1 ; if R4 then PC := 112
	35	[2168]	JMP      	112 ; PC := 112
	36	[2169]	LOADNIL  	R4 R4 ; R4 := nil
	37	[2170]	GETGLOBAL	R5 K0 ; R5 := mInteriorCustomization
	38	[2170]	TEST     	R5 0 ; if not R5 then PC := 52
	39	[2170]	JMP      	52 ; PC := 52
	40	[2171]	GETUPVAL 	R5 U4 ; R5 := U4
	41	[2171]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x2a1108a9]
	42	[2171]	MOVE     	R6 R0 ; R6 := R0
	43	[2171]	GETGLOBAL	R7 K10 ; R7 := mShipSuit
	44	[2171]	SELF     	R7 R7 K11 ; R8 := R7; R7 := R7[0x772b791d]
	45	[2171]	GETGLOBAL	R9 K6 ; R9 := mShipAvatar
	46	[2171]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0xd1586535]
	47	[2171]	CALL     	R9 2 0 ; R9,... := R9(R10)
	48	[2171]	CALL     	R7 0 0 ; R7,... := R7(R8,...)
	49	[2171]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	50	[2171]	MOVE     	R4 R5 ; R4 := R5
	51	[2171]	JMP      	60 ; PC := 60
	52	[2173]	GETUPVAL 	R5 U4 ; R5 := U4
	53	[2173]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x2a1108a9]
	54	[2173]	MOVE     	R6 R0 ; R6 := R0
	55	[2173]	GETGLOBAL	R7 K6 ; R7 := mShipAvatar
	56	[2173]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0xd1586535]
	57	[2173]	CALL     	R7 2 0 ; R7,... := R7(R8)
	58	[2173]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	59	[2173]	MOVE     	R4 R5 ; R4 := R5
	60	[2175]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	61	[2175]	MOVE     	R6 R4 ; R6 := R4
	62	[2175]	CALL     	R5 2 2 ; R5 := R5(R6)
	63	[2175]	TEST     	R5 1 ; if R5 then PC := 112
	64	[2175]	JMP      	112 ; PC := 112
	65	[2176]	SETGLOBALHASH	R4 K13 ; mCameraSpot := R4
	66	[2177]	GETGLOBAL	R5 K14 ; R5 := 0x89326c93
	67	[2177]	SELF     	R5 R5 K15 ; R6 := R5; R5 := R5[0x7c1a0374]
	68	[2177]	CALL     	R5 2 2 ; R5 := R5(R6)
	69	[2178]	GETGLOBAL	R6 K4 ; R6 := mCameraTag
	70	[2178]	GETUPVAL 	R7 U0 ; R7 := U0
	71	[2178]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 83
	72	[2178]	JMP      	83 ; PC := 83
	73	[2178]	GETUPVAL 	R6 U0 ; R6 := U0
	74	[2178]	EQ       	1 R0 R6 ; if R0 == R6 then PC := 83
	75	[2178]	JMP      	83 ; PC := 83
	76	[2178]	GETGLOBAL	R6 K4 ; R6 := mCameraTag
	77	[2178]	GETUPVAL 	R7 U5 ; R7 := U5
	78	[2178]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 83
	79	[2178]	JMP      	83 ; PC := 83
	80	[2178]	GETUPVAL 	R6 U5 ; R6 := U5
	81	[2178]	EQ       	0 R0 R6 ; if R0 ~= R6 then PC := 101
	82	[2178]	JMP      	101 ; PC := 101
	83	[2179]	GETGLOBAL	R6 K16 ; R6 := 0x25312c9b
	84	[2179]	GETGLOBAL	R7 K17 ; R7 := 0xae91e43b
	85	[2179]	LOADK    	R8 K18 ; R8 := "Camera"
	86	[2179]	LOADK    	R9 := 2.000000
	87	[2179]	NEWTABLE 	R10 1 0 ; R10 := {}
	88	[2179]	CLOSURE  	R11 0 ; R11 := closure(Function #1)
	89	[2179]	MOVE     	R0 R5 ; R0 := R5
	90	[2179]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	91	[2179]	NEWTABLE 	R11 1 0 ; R11 := {}
	92	[2179]	LOADK    	R12 := 1.000000
	93	[2179]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	94	[2179]	LOADK    	R12 K20 ; R12 := 0.200000
	95	[2179]	LOADK    	R13 := 0.000000
	96	[2189]	CLOSURE  	R14 1 ; R14 := closure(Function #2)
	97	[2189]	MOVE     	R0 R3 ; R0 := R3
	98	[2189]	MOVE     	R0 R5 ; R0 := R5
	99	[2179]	CALL     	R6 9 1 ; R6(R7,R8,R9,R10,R11,R12,R13,R14)
	100	[2189]	JMP      	108 ; PC := 108
	101	[2191]	SELF     	R6 R3 K21 ; R7 := R3; R6 := R3[0x14c7f7dd]
	102	[2191]	GETGLOBAL	R8 K13 ; R8 := mCameraSpot
	103	[2191]	LOADK    	R9 := 0.250000
	104	[2191]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	105	[2192]	SELF     	R6 R5 K22 ; R7 := R5; R6 := R5[0xb6df3e50]
	106	[2192]	LOADK    	R8 := 0.000000
	107	[2192]	CALL     	R6 3 1 ; R6(R7,R8)
	108	[2194]	SETGLOBALHASH	R0 K4 ; mCameraTag := R0
	109	[2195]	OP_LOADBOOL	R6 1 0 ; R6 := true
	110	[2195]	RETURN   	R6 2 ; return R6 
	111	[2195]	CLOSE    	R5 ; SAVE R5,...
	112	[2197]	CLOSE    	R3 ; SAVE R3,...
	113	[2199]	OP_LOADBOOL	R3 0 0 ; R3 := false
	114	[2199]	RETURN   	R3 2 ; return R3 
	115	[2200]	RETURN   	R0 1 ; return 

function #58 <?:2202,2206> (4 instructions, 16 bytes at 000002113336A060)
1 param, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2203]	SETGLOBALHASH	R0 K0 ; mInteriorCustomization := R0
	2	[2205]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2205]	CALL     	R1 1 1 ; R1()
	4	[2206]	RETURN   	R0 1 ; return 

function #59 <?:2208,2221> (49 instructions, 196 bytes at 000002113336A0F0)
1 param, 4 slots, 4 upvalues, 0 locals, 9 constants, 0 functions
	1	[2209]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2209]	GETGLOBAL	R2 K1 ; R2 := mCosmeticMover
	3	[2209]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2209]	TEST     	R1 1 ; if R1 then PC := 46
	5	[2209]	JMP      	46 ; PC := 46
	6	[2209]	GETTABLE 	R1 R0 K2 ; R1 := R0["mMoverTime"]
	7	[2209]	EQ       	1 R1 K3 ; if R1 == nil then PC := 46
	8	[2209]	JMP      	46 ; PC := 46
	9	[2210]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2210]	GETUPVAL 	R2 U1 ; R2 := U1
	11	[2210]	CALL     	R2 1 0 ; R2,... := R2()
	12	[2210]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	13	[2210]	TEST     	R1 0 ; if not R1 then PC := 20
	14	[2210]	JMP      	20 ; PC := 20
	15	[2211]	GETGLOBAL	R1 K1 ; R1 := mCosmeticMover
	16	[2211]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd3ac44e0]
	17	[2211]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	18	[2211]	CALL     	R1 3 1 ; R1(R2,R3)
	19	[2211]	JMP      	41 ; PC := 41
	20	[2212]	GETGLOBAL	R1 K5 ; R1 := 0x5bced4c4
	21	[2212]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe4a5b3ca]
	22	[2212]	GETGLOBAL	R2 K1 ; R2 := mCosmeticMover
	23	[2212]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x1d75805c]
	24	[2212]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[2212]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	26	[2212]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	27	[2212]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[2212]	LT       	0 K8 R1 ; if 0.325000 >= R1 then PC := 41
	29	[2212]	JMP      	41 ; PC := 41
	30	[2213]	GETUPVAL 	R1 U0 ; R1 := U0
	31	[2213]	LOADNIL  	R2 R2 ; R2 := nil
	32	[2213]	CALL     	R1 2 1 ; R1(R2)
	33	[2214]	GETUPVAL 	R1 U0 ; R1 := U0
	34	[2214]	GETUPVAL 	R2 U1 ; R2 := U1
	35	[2214]	CALL     	R2 1 0 ; R2,... := R2()
	36	[2214]	CALL     	R1 0 1 ; R1(R2,...)
	37	[2215]	GETGLOBAL	R1 K1 ; R1 := mCosmeticMover
	38	[2215]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd3ac44e0]
	39	[2215]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	40	[2215]	CALL     	R1 3 1 ; R1(R2,R3)
	41	[2217]	GETUPVAL 	R1 U2 ; R1 := U2
	42	[2217]	GETGLOBAL	R2 K1 ; R2 := mCosmeticMover
	43	[2217]	GETTABLE 	R3 R0 K2 ; R3 := R0["mMoverTime"]
	44	[2217]	CALL     	R1 3 1 ; R1(R2,R3)
	45	[2217]	JMP      	49 ; PC := 49
	46	[2219]	GETUPVAL 	R1 U0 ; R1 := U0
	47	[2219]	GETUPVAL 	R2 U3 ; R2 := U3
	48	[2219]	CALL     	R1 2 1 ; R1(R2)
	49	[2221]	RETURN   	R0 1 ; return 

function #60 <?:2223,2231> (27 instructions, 108 bytes at 000002113336A180)
1 param, 6 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[2224]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsList
	2	[2224]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomizationList"]
	3	[2224]	SETTABLE 	R1 K2 R0 ; R1["mSelectedElement"] := R0
	4	[2225]	GETTABLE 	R1 R0 K3 ; R1 := R0["mSelectState"]
	5	[2225]	TEST     	R1 0 ; if not R1 then PC := 27
	6	[2225]	JMP      	27 ; PC := 27
	7	[2226]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[2226]	GETTABLE 	R2 R0 K3 ; R2 := R0["mSelectState"]
	9	[2226]	MOVE     	R3 R0 ; R3 := R0
	10	[2226]	CALL     	R1 3 1 ; R1(R2,R3)
	11	[2227]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	12	[2227]	GETGLOBAL	R2 K5 ; R2 := _T
	13	[2227]	GETTABLE 	R2 R2 K6 ; R2 := R2["SetSquadOverlayTitle"]
	14	[2227]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2227]	TEST     	R1 1 ; if R1 then PC := 27
	16	[2227]	JMP      	27 ; PC := 27
	17	[2228]	GETGLOBAL	R1 K5 ; R1 := _T
	18	[2228]	GETTABLE 	R1 R1 K7 ; R1 := R1[0xdf29a9d6]
	19	[2228]	GETGLOBAL	R2 K8 ; R2 := mCategories
	20	[2228]	GETTABLE 	R2 R2 K2 ; R2 := R2["mSelectedElement"]
	21	[2228]	GETTABLE 	R2 R2 K9 ; R2 := R2["Name"]
	22	[2228]	GETGLOBAL	R3 K10 ; R3 := 0x603636ad
	23	[2228]	GETTABLE 	R4 R0 K11 ; R4 := R0["mDefaultText"]
	24	[2228]	NEWTABLE 	R5 0 0 ; R5 := {}
	25	[2228]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	26	[2228]	CALL     	R1 0 1 ; R1(R2,...)
	27	[2231]	RETURN   	R0 1 ; return 

function #61 <?:2233,2245> (31 instructions, 124 bytes at 000002111929BA50)
2 params, 9 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[2234]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2234]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x5d3d561a]
	3	[2234]	MOVE     	R3 R0 ; R3 := R0
	4	[2234]	LOADK    	R4 K1 ; R4 := " &"
	5	[2234]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	6	[2235]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 21
	7	[2235]	JMP      	21 ; PC := 21
	8	[2236]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	9	[2236]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x42b04007]
	10	[2236]	LOADK    	R5 K5 ; R5 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
	11	[2236]	OP_LOADBOOL	R6 0 0 ; R6 := false
	12	[2236]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	13	[2236]	LOADK    	R4 K6 ; R4 := " "
	14	[2236]	GETGLOBAL	R5 K7 ; R5 := 0x68b0afb4
	15	[2236]	MOVE     	R6 R0 ; R6 := R0
	16	[2236]	MOVE     	R7 R2 ; R7 := R2
	17	[2236]	MOVE     	R8 R2 ; R8 := R2
	18	[2236]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	19	[2236]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	20	[2236]	RETURN   	R3 2 ; return R3 
	21	[2239]	GETGLOBAL	R3 K8 ; R3 := 0x09423272
	22	[2239]	MOVE     	R4 R0 ; R4 := R0
	23	[2239]	LOADK    	R5 := 1.000000
	24	[2239]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	25	[2240]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 29
	26	[2240]	JMP      	29 ; PC := 29
	27	[2241]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Menu/Name_Profanity_Error"
	28	[2241]	RETURN   	R4 2 ; return R4 
	29	[2244]	LOADNIL  	R4 R4 ; R4 := nil
	30	[2244]	RETURN   	R4 2 ; return R4 
	31	[2245]	RETURN   	R0 1 ; return 

function #62 <?:2247,2265> (43 instructions, 172 bytes at 00000211295DD5A0)
3 params, 8 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[2248]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	2	[2248]	MOVE     	R4 R2 ; R4 := R2
	3	[2248]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[2248]	EQ       	0 R3 K2 ; if R3 ~= 4.000000 then PC := 39
	5	[2248]	JMP      	39 ; PC := 39
	6	[2249]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	7	[2249]	GETGLOBAL	R4 K4 ; R4 := mShipSuit
	8	[2249]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[2249]	TEST     	R3 1 ; if R3 then PC := 34
	10	[2249]	JMP      	34 ; PC := 34
	11	[2250]	EQ       	0 R0 K5 ; if R0 ~= "" then PC := 18
	12	[2250]	JMP      	18 ; PC := 18
	13	[2251]	GETGLOBAL	R3 K4 ; R3 := mShipSuit
	14	[2251]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x8e886a73]
	15	[2251]	GETGLOBAL	R5 K7 ; R5 := EMPTY_SYMBOL
	16	[2251]	CALL     	R3 3 1 ; R3(R4,R5)
	17	[2251]	JMP      	34 ; PC := 34
	18	[2253]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[2253]	MOVE     	R4 R0 ; R4 := R0
	20	[2253]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[2254]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 30
	22	[2254]	JMP      	30 ; PC := 30
	23	[2255]	GETGLOBAL	R4 K4 ; R4 := mShipSuit
	24	[2255]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x8e886a73]
	25	[2255]	GETGLOBAL	R6 K9 ; R6 := 0x0469f296
	26	[2255]	MOVE     	R7 R0 ; R7 := R0
	27	[2255]	CALL     	R6 2 0 ; R6,... := R6(R7)
	28	[2255]	CALL     	R4 0 1 ; R4(R5,...)
	29	[2255]	JMP      	34 ; PC := 34
	30	[2257]	GETUPVAL 	R4 U1 ; R4 := U1
	31	[2257]	GETTABLE 	R4 R4 K10 ; R4 := R4[0xa53f5e12]
	32	[2257]	MOVE     	R5 R3 ; R5 := R3
	33	[2257]	CALL     	R4 2 1 ; R4(R5)
	34	[2262]	GETGLOBAL	R4 K11 ; R4 := 0x9ba7909f
	35	[2262]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x7e17ae26]
	36	[2262]	LOADK    	R6 K13 ; R6 := "UpdateRailjackText"
	37	[2262]	LOADK    	R7 K5 ; R7 := ""
	38	[2262]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	39	[2264]	GETUPVAL 	R4 U2 ; R4 := U2
	40	[2264]	LOADNIL  	R5 R5 ; R5 := nil
	41	[2264]	OP_LOADBOOL	R6 1 0 ; R6 := true
	42	[2264]	CALL     	R4 3 1 ; R4(R5,R6)
	43	[2265]	RETURN   	R0 1 ; return 

function #63 <?:2267,2269> (6 instructions, 24 bytes at 00000211347381B0)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2268]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[2268]	MOVE     	R4 R0 ; R4 := R0
	3	[2268]	MOVE     	R5 R1 ; R5 := R1
	4	[2268]	MOVE     	R6 R2 ; R6 := R2
	5	[2268]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[2269]	RETURN   	R0 1 ; return 

function #64 <?:2271,2275> (8 instructions, 32 bytes at 000002112CCC2D70)
2 params, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[2272]	TEST     	R0 1 ; if R0 then PC := 8
	2	[2272]	JMP      	8 ; PC := 8
	3	[2273]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2273]	MOVE     	R3 R1 ; R3 := R1
	5	[2273]	LOADK    	R4 K0 ; R4 := ""
	6	[2273]	LOADK    	R5 := 4.000000
	7	[2273]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	8	[2275]	RETURN   	R0 1 ; return 

function #65 <?:2277,2284> (25 instructions, 100 bytes at 000002112CCC2E00)
1 param, 9 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[2278]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2278]	MOVE     	R2 R0 ; R2 := R0
	3	[2278]	CALL     	R1 2 1 ; R1(R2)
	4	[2279]	LOADK    	R1 K0 ; R1 := ""
	5	[2280]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	6	[2280]	GETGLOBAL	R3 K2 ; R3 := mShipSuit
	7	[2280]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2280]	TEST     	R2 1 ; if R2 then PC := 16
	9	[2280]	JMP      	16 ; PC := 16
	10	[2281]	GETGLOBAL	R2 K3 ; R2 := 0x64fb1586
	11	[2281]	GETGLOBAL	R3 K2 ; R3 := mShipSuit
	12	[2281]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xd3a9d01f]
	13	[2281]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[2281]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	15	[2281]	MOVE     	R1 R2 ; R1 := R2
	16	[2283]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[2283]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xef3e3165]
	18	[2283]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	19	[2283]	LOADK    	R4 K7 ; R4 := "/Lotus/Language/Railjack/RenameRailjack"
	20	[2283]	MOVE     	R5 R1 ; R5 := R1
	21	[2283]	LOADK    	R6 := 50.000000
	22	[2283]	LOADK    	R7 K8 ; R7 := "ConfirmShipText"
	23	[2283]	LOADK    	R8 K9 ; R8 := "OSKConfirmShipText"
	24	[2283]	CALL     	R2 7 1 ; R2(R3,R4,R5,R6,R7,R8)
	25	[2284]	RETURN   	R0 1 ; return 

function #66 <?:2286,2309> (55 instructions, 220 bytes at 000002112CCC2E90)
1 param, 10 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[2287]	GETGLOBAL	R1 K0 ; R1 := 0x60130201
	2	[2287]	LOADK    	R2 := 192.000000
	3	[2287]	LOADK    	R3 := 192.000000
	4	[2287]	LOADK    	R4 := 192.000000
	5	[2287]	LOADK    	R5 := 255.000000
	6	[2287]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	7	[2288]	GETGLOBAL	R2 K1 ; R2 := mInteriorCustomization
	8	[2288]	TEST     	R2 0 ; if not R2 then PC := 32
	9	[2288]	JMP      	32 ; PC := 32
	10	[2289]	GETTABLE 	R2 R0 K3 ; R2 := R0["mLabel"]
	11	[2289]	SETGLOBALHASH	R2 K2 ; mInteriorWearAndTear := R2
	12	[2290]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[2290]	CALL     	R2 1 2 ; R2 := R2()
	14	[2291]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	15	[2291]	MOVE     	R4 R2 ; R4 := R2
	16	[2291]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[2291]	TEST     	R3 1 ; if R3 then PC := 26
	18	[2291]	JMP      	26 ; PC := 26
	19	[2292]	GETTABLE 	R3 R2 K5 ; R3 := R2["mColors"]
	20	[2293]	SELF     	R4 R3 K6 ; R5 := R3; R4 := R3[0x697019d0]
	21	[2293]	LOADK    	R6 := 7.000000
	22	[2293]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	23	[2293]	TEST     	R4 0 ; if not R4 then PC := 26
	24	[2293]	JMP      	26 ; PC := 26
	25	[2294]	GETTABLE 	R1 R3 K8 ; R1 := R3["mEnergyColor1"]
	26	[2297]	GETUPVAL 	R4 U1 ; R4 := U1
	27	[2297]	LOADK    	R5 := 7.000000
	28	[2297]	SELF     	R6 R1 K9 ; R7 := R1; R6 := R1[0xa5d5c8f6]
	29	[2297]	CALL     	R6 2 0 ; R6,... := R6(R7)
	30	[2297]	CALL     	R4 0 1 ; R4(R5,...)
	31	[2297]	JMP      	55 ; PC := 55
	32	[2299]	GETTABLE 	R4 R0 K3 ; R4 := R0["mLabel"]
	33	[2299]	SETGLOBALHASH	R4 K10 ; mWearAndTear := R4
	34	[2300]	GETUPVAL 	R4 U2 ; R4 := U2
	35	[2300]	CALL     	R4 1 2 ; R4 := R4()
	36	[2301]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	37	[2301]	MOVE     	R6 R4 ; R6 := R4
	38	[2301]	CALL     	R5 2 2 ; R5 := R5(R6)
	39	[2301]	TEST     	R5 1 ; if R5 then PC := 50
	40	[2301]	JMP      	50 ; PC := 50
	41	[2302]	SELF     	R5 R4 K11 ; R6 := R4; R5 := R4[0x8e62760a]
	42	[2302]	LOADK    	R7 := 0.000000
	43	[2302]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	44	[2303]	SELF     	R6 R5 K6 ; R7 := R5; R6 := R5[0x697019d0]
	45	[2303]	LOADK    	R8 := 5.000000
	46	[2303]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	47	[2303]	TEST     	R6 0 ; if not R6 then PC := 50
	48	[2303]	JMP      	50 ; PC := 50
	49	[2304]	GETTABLE 	R1 R5 K12 ; R1 := R5["mEmissiveColor1"]
	50	[2307]	GETUPVAL 	R6 U1 ; R6 := U1
	51	[2307]	LOADK    	R7 := 5.000000
	52	[2307]	SELF     	R8 R1 K9 ; R9 := R1; R8 := R1[0xa5d5c8f6]
	53	[2307]	CALL     	R8 2 0 ; R8,... := R8(R9)
	54	[2307]	CALL     	R6 0 1 ; R6(R7,...)
	55	[2309]	RETURN   	R0 1 ; return 

function #67 <?:2311,2507> (435 instructions, 1740 bytes at 000002111DAE52B0)
0 params, 22 slots, 15 upvalues, 0 locals, 115 constants, 0 functions
	1	[2312]	GETGLOBAL	R0 K0 ; R0 := mCosmeticsList
	2	[2312]	GETTABLE 	R0 R0 K1 ; R0 := R0["CustomizationList"]
	3	[2312]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x7c09c373]
	4	[2312]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[2312]	OP_LOADBOOL	R3 1 0 ; R3 := true
	6	[2312]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	7	[2313]	GETGLOBAL	R0 K0 ; R0 := mCosmeticsList
	8	[2313]	GETTABLE 	R0 R0 K1 ; R0 := R0["CustomizationList"]
	9	[2313]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2313]	CALL     	R1 1 2 ; R1 := R1()
	11	[2313]	SETTABLE 	R0 K3 R1 ; R0["mActiveColors"] := R1
	12	[2314]	GETGLOBAL	R0 K0 ; R0 := mCosmeticsList
	13	[2314]	GETTABLE 	R0 R0 K1 ; R0 := R0["CustomizationList"]
	14	[2314]	SETTABLE 	R0 K4 K6 ; R0["mProductCategory"] := 6.000000
	15	[2316]	GETGLOBAL	R0 K7 ; R0 := 0x7b998233
	16	[2316]	GETGLOBAL	R1 K8 ; R1 := mShipSuit
	17	[2316]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[2316]	TEST     	R0 1 ; if R0 then PC := 25
	19	[2316]	JMP      	25 ; PC := 25
	20	[2316]	GETGLOBAL	R0 K7 ; R0 := 0x7b998233
	21	[2316]	GETGLOBAL	R1 K9 ; R1 := mShipAvatar
	22	[2316]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[2316]	TEST     	R0 0 ; if not R0 then PC := 26
	24	[2316]	JMP      	26 ; PC := 26
	25	[2317]	RETURN   	R0 1 ; return 
	26	[2320]	GETUPVAL 	R0 U1 ; R0 := U1
	27	[2320]	CALL     	R0 1 2 ; R0 := R0()
	28	[2321]	GETGLOBAL	R1 K7 ; R1 := 0x7b998233
	29	[2321]	MOVE     	R2 R0 ; R2 := R0
	30	[2321]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[2321]	TEST     	R1 1 ; if R1 then PC := 48
	32	[2321]	JMP      	48 ; PC := 48
	33	[2322]	SELF     	R1 R0 K10 ; R2 := R0; R1 := R0[0x8e62760a]
	34	[2322]	LOADK    	R3 := 0.000000
	35	[2322]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	36	[2323]	SELF     	R2 R1 K12 ; R3 := R1; R2 := R1[0x697019d0]
	37	[2323]	LOADK    	R4 := 5.000000
	38	[2323]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	39	[2323]	TEST     	R2 0 ; if not R2 then PC := 48
	40	[2323]	JMP      	48 ; PC := 48
	41	[2324]	GETGLOBAL	R2 K14 ; R2 := 0x5bced4c4
	42	[2324]	GETTABLE 	R2 R2 K15 ; R2 := R2[0x55f27c30]
	43	[2324]	GETTABLE 	R3 R1 K16 ; R3 := R1["mEmissiveColor1"]
	44	[2324]	GETTABLE 	R3 R3 K17 ; R3 := R3["alpha"]
	45	[2324]	DIV      	R3 R3 K18 ; R3 := R3 / 2.550000
	46	[2324]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[2324]	SETGLOBALHASH	R2 K13 ; mWearAndTear := R2
	48	[2327]	GETUPVAL 	R2 U2 ; R2 := U2
	49	[2327]	CALL     	R2 1 2 ; R2 := R2()
	50	[2328]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	51	[2328]	MOVE     	R4 R2 ; R4 := R2
	52	[2328]	CALL     	R3 2 2 ; R3 := R3(R4)
	53	[2328]	TEST     	R3 1 ; if R3 then PC := 68
	54	[2328]	JMP      	68 ; PC := 68
	55	[2329]	GETTABLE 	R3 R2 K19 ; R3 := R2["mColors"]
	56	[2330]	SELF     	R4 R3 K12 ; R5 := R3; R4 := R3[0x697019d0]
	57	[2330]	LOADK    	R6 := 7.000000
	58	[2330]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	59	[2330]	TEST     	R4 0 ; if not R4 then PC := 68
	60	[2330]	JMP      	68 ; PC := 68
	61	[2331]	GETGLOBAL	R4 K14 ; R4 := 0x5bced4c4
	62	[2331]	GETTABLE 	R4 R4 K15 ; R4 := R4[0x55f27c30]
	63	[2331]	GETTABLE 	R5 R3 K21 ; R5 := R3["mEnergyColor1"]
	64	[2331]	GETTABLE 	R5 R5 K17 ; R5 := R5["alpha"]
	65	[2331]	DIV      	R5 R5 K18 ; R5 := R5 / 2.550000
	66	[2331]	CALL     	R4 2 2 ; R4 := R4(R5)
	67	[2331]	SETGLOBALHASH	R4 K20 ; mInteriorWearAndTear := R4
	68	[2335]	LOADK    	R4 := 50.000000
	69	[2336]	GETGLOBAL	R5 K13 ; R5 := mWearAndTear
	70	[2337]	GETGLOBAL	R6 K22 ; R6 := mInteriorCustomization
	71	[2337]	TEST     	R6 0 ; if not R6 then PC := 74
	72	[2337]	JMP      	74 ; PC := 74
	73	[2338]	GETGLOBAL	R5 K20 ; R5 := mInteriorWearAndTear
	74	[2341]	NEWTABLE 	R6 13 0 ; R6 := {}
	75	[2341]	NEWTABLE 	R7 0 10 ; R7 := {}
	76	[2343]	GETUPVAL 	R8 U3 ; R8 := U3
	77	[2343]	GETTABLE 	R8 R8 K24 ; R8 := R8["RENAME_SHIP"]
	78	[2343]	SETTABLE 	R7 K23 R8 ; R7["mSelectState"] := R8
	79	[2344]	GETUPVAL 	R8 U4 ; R8 := U4
	80	[2344]	GETTABLE 	R8 R8 K24 ; R8 := R8["RENAME_SHIP"]
	81	[2344]	SETTABLE 	R7 K25 R8 ; R7["mCategory"] := R8
	82	[2345]	SETTABLE 	R7 K26 K27 ; R7["NameTag"] := "/Lotus/Language/Railjack/RenameRailjack"
	83	[2346]	SETTABLE 	R7 K28 K29 ; R7["mExterior"] := true
	84	[2347]	SETTABLE 	R7 K30 K31 ; R7["mMoverTime"] := 0.000000
	85	[2348]	GETGLOBAL	R8 K33 ; R8 := 0x310765c9
	86	[2348]	SETTABLE 	R7 K32 R8 ; R7[0x0a000032] := R8
	87	[2349]	SETTABLE 	R7 K34 K35 ; R7["DefaultIconWidth"] := 0.800000
	88	[2350]	SETTABLE 	R7 K36 K35 ; R7["DefaultIconHeight"] := 0.800000
	89	[2351]	GETUPVAL 	R8 U5 ; R8 := U5
	90	[2351]	SETTABLE 	R7 K37 R8 ; R7["mOnReleasedCallback"] := R8
	91	[2352]	GETUPVAL 	R8 U6 ; R8 := U6
	92	[2352]	GETTABLE 	R8 R8 K39 ; R8 := R8["Types"]
	93	[2352]	GETTABLE 	R8 R8 K40 ; R8 := R8["BUTTON"]
	94	[2352]	SETTABLE 	R7 K38 R8 ; R7["Type"] := R8
	95	[2353]	NEWTABLE 	R8 0 7 ; R8 := {}
	96	[2355]	GETUPVAL 	R9 U3 ; R9 := U3
	97	[2355]	GETTABLE 	R9 R9 K41 ; R9 := R9["ATTACHMENTS"]
	98	[2355]	SETTABLE 	R8 K23 R9 ; R8["mSelectState"] := R9
	99	[2356]	GETUPVAL 	R9 U4 ; R9 := U4
	100	[2356]	GETTABLE 	R9 R9 K41 ; R9 := R9["ATTACHMENTS"]
	101	[2356]	SETTABLE 	R8 K25 R9 ; R8["mCategory"] := R9
	102	[2357]	SETTABLE 	R8 K26 K42 ; R8["NameTag"] := "/Lotus/Language/Railjack/Loadout_Decals"
	103	[2358]	SETTABLE 	R8 K28 K29 ; R8["mExterior"] := true
	104	[2359]	SETTABLE 	R8 K30 K43 ; R8["mMoverTime"] := 0.450000
	105	[2360]	GETUPVAL 	R9 U6 ; R9 := U6
	106	[2360]	GETTABLE 	R9 R9 K39 ; R9 := R9["Types"]
	107	[2360]	GETTABLE 	R9 R9 K44 ; R9 := R9["ITEM_SELECTION"]
	108	[2360]	SETTABLE 	R8 K38 R9 ; R8["Type"] := R9
	109	[2361]	SETTABLE 	R8 K45 K29 ; R8["mDecal"] := true
	110	[2362]	NEWTABLE 	R9 0 7 ; R9 := {}
	111	[2364]	GETUPVAL 	R10 U3 ; R10 := U3
	112	[2364]	GETTABLE 	R10 R10 K46 ; R10 := R10["SKIN_SELECTION"]
	113	[2364]	SETTABLE 	R9 K23 R10 ; R9["mSelectState"] := R10
	114	[2365]	GETUPVAL 	R10 U4 ; R10 := U4
	115	[2365]	GETTABLE 	R10 R10 K41 ; R10 := R10["ATTACHMENTS"]
	116	[2365]	SETTABLE 	R9 K25 R10 ; R9["mCategory"] := R10
	117	[2366]	SETTABLE 	R9 K26 K47 ; R9["NameTag"] := "/Lotus/Language/Menu/Store_Skins"
	118	[2367]	SETTABLE 	R9 K28 K29 ; R9["mExterior"] := true
	119	[2368]	GETUPVAL 	R10 U6 ; R10 := U6
	120	[2368]	GETTABLE 	R10 R10 K39 ; R10 := R10["Types"]
	121	[2368]	GETTABLE 	R10 R10 K44 ; R10 := R10["ITEM_SELECTION"]
	122	[2368]	SETTABLE 	R9 K38 R10 ; R9["Type"] := R10
	123	[2369]	SETTABLE 	R9 K48 K6 ; R9["mSlot"] := 6.000000
	124	[2370]	SETTABLE 	R9 K49 K29 ; R9["mHullSkin"] := true
	125	[2371]	NEWTABLE 	R10 0 6 ; R10 := {}
	126	[2373]	GETUPVAL 	R11 U4 ; R11 := U4
	127	[2373]	GETTABLE 	R11 R11 K41 ; R11 := R11["ATTACHMENTS"]
	128	[2373]	SETTABLE 	R10 K25 R11 ; R10["mCategory"] := R11
	129	[2374]	SETTABLE 	R10 K26 K50 ; R10["NameTag"] := "/Lotus/Language/Menu/Orbiter_WearAndTear"
	130	[2375]	GETUPVAL 	R11 U6 ; R11 := U6
	131	[2375]	GETTABLE 	R11 R11 K39 ; R11 := R11["Types"]
	132	[2375]	GETTABLE 	R11 R11 K51 ; R11 := R11["VALUE_SELECTOR"]
	133	[2375]	SETTABLE 	R10 K38 R11 ; R10["Type"] := R11
	134	[2376]	GETUPVAL 	R11 U7 ; R11 := U7
	135	[2376]	SETTABLE 	R10 K52 R11 ; R10["mValueChangedCallback"] := R11
	136	[2377]	SETTABLE 	R10 K53 R5 ; R10["mInitialValue"] := R5
	137	[2378]	SETTABLE 	R10 K54 R4 ; R10["mDefaultValue"] := R4
	138	[2379]	NEWTABLE 	R11 0 6 ; R11 := {}
	139	[2381]	GETUPVAL 	R12 U3 ; R12 := U3
	140	[2381]	GETTABLE 	R12 R12 K55 ; R12 := R12["COLOR_PICKER"]
	141	[2381]	SETTABLE 	R11 K23 R12 ; R11["mSelectState"] := R12
	142	[2382]	GETUPVAL 	R12 U4 ; R12 := U4
	143	[2382]	GETTABLE 	R12 R12 K56 ; R12 := R12["COLORS"]
	144	[2382]	SETTABLE 	R11 K25 R12 ; R11["mCategory"] := R12
	145	[2383]	SETTABLE 	R11 K26 K50 ; R11["NameTag"] := "/Lotus/Language/Menu/Orbiter_WearAndTear"
	146	[2384]	SETTABLE 	R11 K57 K29 ; R11["mInterior"] := true
	147	[2385]	NEWTABLE 	R12 1 0 ; R12 := {}
	148	[2385]	LOADK    	R13 := 7.000000
	149	[2385]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	150	[2385]	SETTABLE 	R11 K58 R12 ; R11["mColorRegions"] := R12
	151	[2386]	GETUPVAL 	R12 U6 ; R12 := U6
	152	[2386]	GETTABLE 	R12 R12 K39 ; R12 := R12["Types"]
	153	[2386]	GETTABLE 	R12 R12 K59 ; R12 := R12["COLOR"]
	154	[2386]	SETTABLE 	R11 K38 R12 ; R11["Type"] := R12
	155	[2387]	NEWTABLE 	R12 0 5 ; R12 := {}
	156	[2389]	GETUPVAL 	R13 U3 ; R13 := U3
	157	[2389]	GETTABLE 	R13 R13 K55 ; R13 := R13["COLOR_PICKER"]
	158	[2389]	SETTABLE 	R12 K23 R13 ; R12["mSelectState"] := R13
	159	[2390]	GETUPVAL 	R13 U4 ; R13 := U4
	160	[2390]	GETTABLE 	R13 R13 K56 ; R13 := R13["COLORS"]
	161	[2390]	SETTABLE 	R12 K25 R13 ; R12["mCategory"] := R13
	162	[2391]	SETTABLE 	R12 K26 K60 ; R12["NameTag"] := "/Lotus/Language/Menu/Arsenal_Primary"
	163	[2392]	NEWTABLE 	R13 1 0 ; R13 := {}
	164	[2392]	LOADK    	R14 := 0.000000
	165	[2392]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	166	[2392]	SETTABLE 	R12 K58 R13 ; R12["mColorRegions"] := R13
	167	[2393]	GETUPVAL 	R13 U6 ; R13 := U6
	168	[2393]	GETTABLE 	R13 R13 K39 ; R13 := R13["Types"]
	169	[2393]	GETTABLE 	R13 R13 K59 ; R13 := R13["COLOR"]
	170	[2393]	SETTABLE 	R12 K38 R13 ; R12["Type"] := R13
	171	[2394]	NEWTABLE 	R13 0 5 ; R13 := {}
	172	[2396]	GETUPVAL 	R14 U3 ; R14 := U3
	173	[2396]	GETTABLE 	R14 R14 K55 ; R14 := R14["COLOR_PICKER"]
	174	[2396]	SETTABLE 	R13 K23 R14 ; R13["mSelectState"] := R14
	175	[2397]	GETUPVAL 	R14 U4 ; R14 := U4
	176	[2397]	GETTABLE 	R14 R14 K56 ; R14 := R14["COLORS"]
	177	[2397]	SETTABLE 	R13 K25 R14 ; R13["mCategory"] := R14
	178	[2398]	SETTABLE 	R13 K26 K61 ; R13["NameTag"] := "/Lotus/Language/Menu/Arsenal_Secondary"
	179	[2399]	NEWTABLE 	R14 1 0 ; R14 := {}
	180	[2399]	LOADK    	R15 := 1.000000
	181	[2399]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	182	[2399]	SETTABLE 	R13 K58 R14 ; R13["mColorRegions"] := R14
	183	[2400]	GETUPVAL 	R14 U6 ; R14 := U6
	184	[2400]	GETTABLE 	R14 R14 K39 ; R14 := R14["Types"]
	185	[2400]	GETTABLE 	R14 R14 K59 ; R14 := R14["COLOR"]
	186	[2400]	SETTABLE 	R13 K38 R14 ; R13["Type"] := R14
	187	[2401]	NEWTABLE 	R14 0 5 ; R14 := {}
	188	[2403]	GETUPVAL 	R15 U3 ; R15 := U3
	189	[2403]	GETTABLE 	R15 R15 K55 ; R15 := R15["COLOR_PICKER"]
	190	[2403]	SETTABLE 	R14 K23 R15 ; R14["mSelectState"] := R15
	191	[2404]	GETUPVAL 	R15 U4 ; R15 := U4
	192	[2404]	GETTABLE 	R15 R15 K56 ; R15 := R15["COLORS"]
	193	[2404]	SETTABLE 	R14 K25 R15 ; R14["mCategory"] := R15
	194	[2405]	SETTABLE 	R14 K26 K62 ; R14["NameTag"] := "/Lotus/Language/Menu/Arsenal_TintColor3"
	195	[2406]	NEWTABLE 	R15 1 0 ; R15 := {}
	196	[2406]	LOADK    	R16 := 2.000000
	197	[2406]	SETLIST  	R15 1 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
	198	[2406]	SETTABLE 	R14 K58 R15 ; R14["mColorRegions"] := R15
	199	[2407]	GETUPVAL 	R15 U6 ; R15 := U6
	200	[2407]	GETTABLE 	R15 R15 K39 ; R15 := R15["Types"]
	201	[2407]	GETTABLE 	R15 R15 K59 ; R15 := R15["COLOR"]
	202	[2407]	SETTABLE 	R14 K38 R15 ; R14["Type"] := R15
	203	[2408]	NEWTABLE 	R15 0 5 ; R15 := {}
	204	[2410]	GETUPVAL 	R16 U3 ; R16 := U3
	205	[2410]	GETTABLE 	R16 R16 K55 ; R16 := R16["COLOR_PICKER"]
	206	[2410]	SETTABLE 	R15 K23 R16 ; R15["mSelectState"] := R16
	207	[2411]	GETUPVAL 	R16 U4 ; R16 := U4
	208	[2411]	GETTABLE 	R16 R16 K56 ; R16 := R16["COLORS"]
	209	[2411]	SETTABLE 	R15 K25 R16 ; R15["mCategory"] := R16
	210	[2412]	SETTABLE 	R15 K26 K63 ; R15["NameTag"] := "/Lotus/Language/Menu/Arsenal_TintColor4"
	211	[2413]	NEWTABLE 	R16 1 0 ; R16 := {}
	212	[2413]	LOADK    	R17 := 3.000000
	213	[2413]	SETLIST  	R16 1 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 1
	214	[2413]	SETTABLE 	R15 K58 R16 ; R15["mColorRegions"] := R16
	215	[2414]	GETUPVAL 	R16 U6 ; R16 := U6
	216	[2414]	GETTABLE 	R16 R16 K39 ; R16 := R16["Types"]
	217	[2414]	GETTABLE 	R16 R16 K59 ; R16 := R16["COLOR"]
	218	[2414]	SETTABLE 	R15 K38 R16 ; R15["Type"] := R16
	219	[2415]	NEWTABLE 	R16 0 5 ; R16 := {}
	220	[2417]	GETUPVAL 	R17 U3 ; R17 := U3
	221	[2417]	GETTABLE 	R17 R17 K55 ; R17 := R17["COLOR_PICKER"]
	222	[2417]	SETTABLE 	R16 K23 R17 ; R16["mSelectState"] := R17
	223	[2418]	GETUPVAL 	R17 U4 ; R17 := U4
	224	[2418]	GETTABLE 	R17 R17 K56 ; R17 := R17["COLORS"]
	225	[2418]	SETTABLE 	R16 K25 R17 ; R16["mCategory"] := R17
	226	[2419]	GETGLOBAL	R17 K22 ; R17 := mInteriorCustomization
	227	[2419]	TEST     	R17 0 ; if not R17 then PC := 232
	228	[2419]	JMP      	232 ; PC := 232
	229	[2419]	LOADK    	R17 K64 ; R17 := "/Lotus/Language/Menu/CustomizeShipLighting"
	230	[2419]	TEST     	R17 1 ; if R17 then PC := 233
	231	[2419]	JMP      	233 ; PC := 233
	232	[2419]	LOADK    	R17 K65 ; R17 := "/Lotus/Language/Menu/CustomizeShipEngine"
	233	[2419]	SETTABLE 	R16 K26 R17 ; R16["NameTag"] := R17
	234	[2420]	NEWTABLE 	R17 1 0 ; R17 := {}
	235	[2420]	LOADK    	R18 := 6.000000
	236	[2420]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	237	[2420]	SETTABLE 	R16 K58 R17 ; R16["mColorRegions"] := R17
	238	[2421]	GETUPVAL 	R17 U6 ; R17 := U6
	239	[2421]	GETTABLE 	R17 R17 K39 ; R17 := R17["Types"]
	240	[2421]	GETTABLE 	R17 R17 K59 ; R17 := R17["COLOR"]
	241	[2421]	SETTABLE 	R16 K38 R17 ; R16["Type"] := R17
	242	[2422]	NEWTABLE 	R17 0 6 ; R17 := {}
	243	[2424]	GETUPVAL 	R18 U3 ; R18 := U3
	244	[2424]	GETTABLE 	R18 R18 K55 ; R18 := R18["COLOR_PICKER"]
	245	[2424]	SETTABLE 	R17 K23 R18 ; R17["mSelectState"] := R18
	246	[2425]	GETUPVAL 	R18 U4 ; R18 := U4
	247	[2425]	GETTABLE 	R18 R18 K56 ; R18 := R18["COLORS"]
	248	[2425]	SETTABLE 	R17 K25 R18 ; R17["mCategory"] := R18
	249	[2426]	SETTABLE 	R17 K26 K66 ; R17["NameTag"] := "/Lotus/Language/Menu/Cosmetics_SecondaryColor"
	250	[2427]	SETTABLE 	R17 K28 K29 ; R17["mExterior"] := true
	251	[2428]	NEWTABLE 	R18 1 0 ; R18 := {}
	252	[2428]	LOADK    	R19 := 7.000000
	253	[2428]	SETLIST  	R18 1 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
	254	[2428]	SETTABLE 	R17 K58 R18 ; R17["mColorRegions"] := R18
	255	[2429]	GETUPVAL 	R18 U6 ; R18 := U6
	256	[2429]	GETTABLE 	R18 R18 K39 ; R18 := R18["Types"]
	257	[2429]	GETTABLE 	R18 R18 K59 ; R18 := R18["COLOR"]
	258	[2429]	SETTABLE 	R17 K38 R18 ; R17["Type"] := R18
	259	[2430]	NEWTABLE 	R18 0 6 ; R18 := {}
	260	[2432]	GETUPVAL 	R19 U3 ; R19 := U3
	261	[2432]	GETTABLE 	R19 R19 K55 ; R19 := R19["COLOR_PICKER"]
	262	[2432]	SETTABLE 	R18 K23 R19 ; R18["mSelectState"] := R19
	263	[2433]	GETUPVAL 	R19 U4 ; R19 := U4
	264	[2433]	GETTABLE 	R19 R19 K56 ; R19 := R19["COLORS"]
	265	[2433]	SETTABLE 	R18 K25 R19 ; R18["mCategory"] := R19
	266	[2434]	SETTABLE 	R18 K26 K67 ; R18["NameTag"] := "/Lotus/Language/Menu/Photobooth_PrimaryTextColor"
	267	[2435]	SETTABLE 	R18 K28 K29 ; R18["mExterior"] := true
	268	[2436]	NEWTABLE 	R19 1 0 ; R19 := {}
	269	[2436]	LOADK    	R20 := 5.000000
	270	[2436]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	271	[2436]	SETTABLE 	R18 K58 R19 ; R18["mColorRegions"] := R19
	272	[2437]	GETUPVAL 	R19 U6 ; R19 := U6
	273	[2437]	GETTABLE 	R19 R19 K39 ; R19 := R19["Types"]
	274	[2437]	GETTABLE 	R19 R19 K59 ; R19 := R19["COLOR"]
	275	[2437]	SETTABLE 	R18 K38 R19 ; R18["Type"] := R19
	276	[2438]	NEWTABLE 	R19 0 4 ; R19 := {}
	277	[2440]	GETUPVAL 	R20 U3 ; R20 := U3
	278	[2440]	GETTABLE 	R20 R20 K55 ; R20 := R20["COLOR_PICKER"]
	279	[2440]	SETTABLE 	R19 K23 R20 ; R19["mSelectState"] := R20
	280	[2441]	GETUPVAL 	R20 U4 ; R20 := U4
	281	[2441]	GETTABLE 	R20 R20 K68 ; R20 := R20["ALL_COLORS"]
	282	[2441]	SETTABLE 	R19 K25 R20 ; R19["mCategory"] := R20
	283	[2442]	SETTABLE 	R19 K26 K69 ; R19["NameTag"] := "/Lotus/Language/Menu/Cosmetics_AllColors"
	284	[2443]	GETUPVAL 	R20 U6 ; R20 := U6
	285	[2443]	GETTABLE 	R20 R20 K39 ; R20 := R20["Types"]
	286	[2443]	GETTABLE 	R20 R20 K59 ; R20 := R20["COLOR"]
	287	[2443]	SETTABLE 	R19 K38 R20 ; R19["Type"] := R20
	288	[2445]	SETLIST  	R6 13 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 13
	289	[2447]	LOADK    	R7 := 1.000000
	290	[2447]	LEN      	R8 R6 ; R8 := # R6
	291	[2447]	LOADK    	R9 := 1.000000
	292	[2447]	FORPREP  	R7 419 ; R7 -= R9; PC := 419
	293	[2448]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	294	[2449]	GETGLOBAL	R12 K22 ; R12 := mInteriorCustomization
	295	[2449]	TEST     	R12 0 ; if not R12 then PC := 300
	296	[2449]	JMP      	300 ; PC := 300
	297	[2449]	GETTABLE 	R12 R11 K28 ; R12 := R11["mExterior"]
	298	[2449]	TEST     	R12 0 ; if not R12 then PC := 306
	299	[2449]	JMP      	306 ; PC := 306
	300	[2449]	GETGLOBAL	R12 K22 ; R12 := mInteriorCustomization
	301	[2449]	TEST     	R12 1 ; if R12 then PC := 419
	302	[2449]	JMP      	419 ; PC := 419
	303	[2449]	GETTABLE 	R12 R11 K57 ; R12 := R11["mInterior"]
	304	[2449]	TEST     	R12 1 ; if R12 then PC := 419
	305	[2449]	JMP      	419 ; PC := 419
	306	[2450]	SETTABLE 	R11 K70 K29 ; R11["mTitleCase"] := true
	307	[2451]	GETUPVAL 	R12 U8 ; R12 := U8
	308	[2451]	SETTABLE 	R11 K71 R12 ; R11["mOnFocusedCallback"] := R12
	309	[2452]	GETTABLE 	R12 R11 K37 ; R12 := R11["mOnReleasedCallback"]
	310	[2452]	TEST     	R12 1 ; if R12 then PC := 313
	311	[2452]	JMP      	313 ; PC := 313
	312	[2452]	GETUPVAL 	R12 U9 ; R12 := U9
	313	[2452]	SETTABLE 	R11 K37 R12 ; R11["mOnReleasedCallback"] := R12
	314	[2454]	GETTABLE 	R12 R11 K25 ; R12 := R11["mCategory"]
	315	[2454]	GETUPVAL 	R13 U4 ; R13 := U4
	316	[2454]	GETTABLE 	R13 R13 K41 ; R13 := R13["ATTACHMENTS"]
	317	[2454]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 391
	318	[2454]	JMP      	391 ; PC := 391
	319	[2455]	LOADNIL  	R12 R13 ; R12 := R13 := nil
	320	[2457]	LOADK    	R14 := 553.000000
	321	[2458]	GETTABLE 	R15 R11 K45 ; R15 := R11["mDecal"]
	322	[2458]	TEST     	R15 0 ; if not R15 then PC := 345
	323	[2458]	JMP      	345 ; PC := 345
	324	[2459]	GETGLOBAL	R15 K72 ; R15 := 0x25d99d89
	325	[2459]	SELF     	R15 R15 K73 ; R16 := R15; R15 := R15[0x62c81b76]
	326	[2459]	CALL     	R15 2 2 ; R15 := R15(R16)
	327	[2459]	SELF     	R15 R15 K74 ; R16 := R15; R15 := R15[0x999c1a14]
	328	[2459]	CALL     	R15 2 2 ; R15 := R15(R16)
	329	[2460]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	330	[2460]	MOVE     	R17 R15 ; R17 := R15
	331	[2460]	CALL     	R16 2 2 ; R16 := R16(R17)
	332	[2460]	TEST     	R16 1 ; if R16 then PC := 374
	333	[2460]	JMP      	374 ; PC := 374
	334	[2460]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	335	[2460]	GETTABLE 	R17 R15 K75 ; R17 := R15["mItemType"]
	336	[2460]	CALL     	R16 2 2 ; R16 := R16(R17)
	337	[2460]	TEST     	R16 1 ; if R16 then PC := 374
	338	[2460]	JMP      	374 ; PC := 374
	339	[2461]	GETUPVAL 	R16 U10 ; R16 := U10
	340	[2461]	SELF     	R16 R16 K76 ; R17 := R16; R16 := R16[0x105074fb]
	341	[2461]	GETTABLE 	R18 R15 K75 ; R18 := R15["mItemType"]
	342	[2461]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	343	[2461]	MOVE     	R12 R16 ; R12 := R16
	344	[2462]	JMP      	374 ; PC := 374
	345	[2463]	GETTABLE 	R16 R11 K48 ; R16 := R11["mSlot"]
	346	[2463]	EQ       	1 R16 K77 ; if R16 == nil then PC := 374
	347	[2463]	JMP      	374 ; PC := 374
	348	[2464]	GETUPVAL 	R16 U10 ; R16 := U10
	349	[2464]	SELF     	R16 R16 K76 ; R17 := R16; R16 := R16[0x105074fb]
	350	[2464]	GETGLOBAL	R18 K8 ; R18 := mShipSuit
	351	[2464]	SELF     	R18 R18 K78 ; R19 := R18; R18 := R18[0x0911ae7c]
	352	[2464]	GETTABLE 	R20 R11 K48 ; R20 := R11["mSlot"]
	353	[2464]	CALL     	R18 3 0 ; R18,... := R18(R19,R20)
	354	[2464]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	355	[2464]	MOVE     	R13 R16 ; R13 := R16
	356	[2465]	GETGLOBAL	R16 K8 ; R16 := mShipSuit
	357	[2465]	SELF     	R16 R16 K79 ; R17 := R16; R16 := R16[0x68d708a7]
	358	[2465]	CALL     	R16 2 2 ; R16 := R16(R17)
	359	[2465]	SELF     	R16 R16 K80 ; R17 := R16; R16 := R16[0x2540510f]
	360	[2465]	GETTABLE 	R18 R11 K48 ; R18 := R11["mSlot"]
	361	[2465]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	362	[2466]	GETGLOBAL	R17 K7 ; R17 := 0x7b998233
	363	[2466]	MOVE     	R18 R16 ; R18 := R16
	364	[2466]	CALL     	R17 2 2 ; R17 := R17(R18)
	365	[2466]	TEST     	R17 0 ; if not R17 then PC := 369
	366	[2466]	JMP      	369 ; PC := 369
	367	[2467]	MOVE     	R12 R13 ; R12 := R13
	368	[2467]	JMP      	374 ; PC := 374
	369	[2469]	GETUPVAL 	R17 U10 ; R17 := U10
	370	[2469]	SELF     	R17 R17 K76 ; R18 := R17; R17 := R17[0x105074fb]
	371	[2469]	MOVE     	R19 R16 ; R19 := R16
	372	[2469]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	373	[2469]	MOVE     	R12 R17 ; R12 := R17
	374	[2473]	NEWTABLE 	R17 0 8 ; R17 := {}
	375	[2475]	GETUPVAL 	R18 U11 ; R18 := U11
	376	[2475]	SETTABLE 	R17 K82 R18 ; R17["GetItemsFunction"] := R18
	377	[2476]	GETUPVAL 	R18 U12 ; R18 := U12
	378	[2476]	SETTABLE 	R17 K83 R18 ; R17["OnItemSelectedFunction"] := R18
	379	[2477]	GETUPVAL 	R18 U13 ; R18 := U13
	380	[2477]	SETTABLE 	R17 K84 R18 ; R17[0x00000004] := R18
	381	[2478]	SETTABLE 	R17 K85 R12 ; R17["CurrSelection"] := R12
	382	[2479]	SETTABLE 	R17 K86 R13 ; R17["DefaultSelection"] := R13
	383	[2480]	SETTABLE 	R17 K87 R14 ; R17["GridWidth"] := R14
	384	[2481]	SETTABLE 	R17 K88 K29 ; R17["SkipSort"] := true
	385	[2482]	SETTABLE 	R17 K89 K29 ; R17["HidePrice"] := true
	386	[2483]	SETTABLE 	R11 K81 R17 ; R11["ItemSelectionData"] := R17
	387	[2485]	GETUPVAL 	R17 U14 ; R17 := U14
	388	[2485]	MOVE     	R18 R11 ; R18 := R11
	389	[2485]	CALL     	R17 2 2 ; R17 := R17(R18)
	390	[2485]	SETTABLE 	R11 K90 R17 ; R11["mUnequipItem"] := R17
	391	[2488]	GETTABLE 	R17 R11 K38 ; R17 := R11["Type"]
	392	[2488]	GETUPVAL 	R18 U6 ; R18 := U6
	393	[2488]	GETTABLE 	R18 R18 K39 ; R18 := R18["Types"]
	394	[2488]	GETTABLE 	R18 R18 K44 ; R18 := R18["ITEM_SELECTION"]
	395	[2488]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 413
	396	[2488]	JMP      	413 ; PC := 413
	397	[2489]	SETTABLE 	R11 K91 K29 ; R11["BigButton"] := true
	398	[2490]	SETTABLE 	R11 K92 K93 ; R11["ElementHeight"] := 76.000000
	399	[2491]	SETTABLE 	R11 K94 K95 ; R11["ElementSeparation"] := 3.000000
	400	[2492]	GETGLOBAL	R17 K97 ; R17 := 0x0032441c
	401	[2492]	GETTABLE 	R17 R17 K98 ; R17 := R17["UITexture_SettingsIcons"]
	402	[2492]	GETUPVAL 	R18 U6 ; R18 := U6
	403	[2492]	GETTABLE 	R18 R18 K99 ; R18 := R18["IconTypes"]
	404	[2492]	GETTABLE 	R18 R18 K100 ; R18 := R18["NO_ITEM"]
	405	[2492]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	406	[2492]	SETTABLE 	R11 K96 R17 ; R11["mNoneIcon"] := R17
	407	[2493]	SETTABLE 	R11 K101 K102 ; R11["mNoneIconAlpha"] := 80.000000
	408	[2494]	NEWTABLE 	R17 0 2 ; R17 := {}
	409	[2495]	SETTABLE 	R17 K104 K105 ; R17["X"] := -1.500000
	410	[2496]	SETTABLE 	R17 K106 K31 ; R17["Y"] := 0.000000
	411	[2497]	SETTABLE 	R11 K103 R17 ; R11[0x00000005] := R17
	412	[2498]	SETTABLE 	R11 K107 K108 ; R11["IconPadding"] := 2.500000
	413	[2501]	GETGLOBAL	R17 K0 ; R17 := mCosmeticsList
	414	[2501]	GETTABLE 	R17 R17 K1 ; R17 := R17["CustomizationList"]
	415	[2501]	SELF     	R17 R17 K109 ; R18 := R17; R17 := R17[0xbad4316f]
	416	[2501]	MOVE     	R19 R11 ; R19 := R11
	417	[2501]	OP_LOADBOOL	R20 1 0 ; R20 := true
	418	[2501]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	419	[2447]	FORLOOP  	R7 293 ; R7 += R9; if R7 <= R8 then begin PC := 293; R10 := R7 end
	420	[2504]	GETGLOBAL	R17 K0 ; R17 := mCosmeticsList
	421	[2504]	GETTABLE 	R17 R17 K1 ; R17 := R17["CustomizationList"]
	422	[2504]	SELF     	R17 R17 K110 ; R18 := R17; R17 := R17[0x71e9ac81]
	423	[2504]	LOADNIL  	R19 R19 ; R19 := nil
	424	[2504]	OP_LOADBOOL	R20 1 0 ; R20 := true
	425	[2504]	OP_LOADBOOL	R21 1 0 ; R21 := true
	426	[2504]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	427	[2506]	GETGLOBAL	R17 K0 ; R17 := mCosmeticsList
	428	[2506]	GETGLOBAL	R18 K0 ; R18 := mCosmeticsList
	429	[2506]	GETTABLE 	R18 R18 K1 ; R18 := R18["CustomizationList"]
	430	[2506]	GETTABLE 	R18 R18 K112 ; R18 := R18["mElements"]
	431	[2506]	GETTABLE 	R18 R18 K113 ; R18 := R18[1.000000]
	432	[2506]	GETTABLE 	R18 R18 K114 ; R18 := R18["mButtons"]
	433	[2506]	LEN      	R18 R18 ; R18 := # R18
	434	[2506]	SETTABLE 	R17 K111 R18 ; R17["mNumButtons"] := R18
	435	[2507]	RETURN   	R0 1 ; return 

function #68 <?:2509,2600> (64 instructions, 256 bytes at 0000021133D7B040)
0 params, 8 slots, 8 upvalues, 0 locals, 27 constants, 8 functions
	1	[2510]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[2510]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x42b04007]
	3	[2510]	LOADK    	R2 K2 ; R2 := "/Lotus/Language/Railjack/Railjack"
	4	[2510]	OP_LOADBOOL	R3 0 0 ; R3 := false
	5	[2510]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	6	[2511]	GETGLOBAL	R1 K3 ; R1 := 0x2d0fad09
	7	[2511]	LOADK    	R2 K4 ; R2 := "EE.Interface.Components.List"
	8	[2511]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2512]	GETTABLE 	R2 R1 K6 ; R2 := R1[0x9383bc56]
	10	[2512]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	11	[2512]	LOADK    	R4 K7 ; R4 := "TopLeftContainer.Categories.Category"
	12	[2512]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	13	[2512]	SETGLOBALHASH	R2 K5 ; mCategories := R2
	14	[2513]	GETGLOBAL	R2 K5 ; R2 := mCategories
	15	[2513]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x1e5b5cfe]
	16	[2513]	LOADK    	R4 K9 ; R4 := "ConfigureTabSelected"
	17	[2513]	LOADK    	R5 K10 ; R5 := "ConfigureTabFocused"
	18	[2513]	LOADK    	R6 K11 ; R6 := "ConfigureTabUnfocused"
	19	[2513]	LOADK    	R7 K12 ; R7 := "ConfigureTabPressed"
	20	[2513]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	21	[2514]	GETGLOBAL	R2 K5 ; R2 := mCategories
	22	[2514]	SETTABLE 	R2 K13 K14 ; R2["mForcedHorizontalSeparation"] := 89.000000
	23	[2515]	GETGLOBAL	R2 K5 ; R2 := mCategories
	24	[2515]	SETTABLE 	R2 K15 K16 ; R2["mForcedVerticalSeparation"] := 0.000000
	25	[2516]	GETGLOBAL	R2 K5 ; R2 := mCategories
	26	[2519]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	27	[2519]	SETTABLE 	R2 K17 R3 ; R2["mClipCreatedCallback"] := R3
	28	[2520]	GETGLOBAL	R2 K5 ; R2 := mCategories
	29	[2527]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	30	[2527]	GETUPVAL 	R0 U0 ; R0 := U0
	31	[2527]	SETTABLE 	R2 K18 R3 ; R2["mOnFocusedCallback"] := R3
	32	[2528]	GETGLOBAL	R2 K5 ; R2 := mCategories
	33	[2534]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	34	[2534]	SETTABLE 	R2 K19 R3 ; R2["mOnUnfocusedCallback"] := R3
	35	[2535]	GETGLOBAL	R2 K5 ; R2 := mCategories
	36	[2562]	CLOSURE  	R3 3 ; R3 := closure(Function #4)
	37	[2562]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[2562]	GETUPVAL 	R0 U1 ; R0 := U1
	39	[2562]	GETUPVAL 	R0 U2 ; R0 := U2
	40	[2562]	GETUPVAL 	R0 U3 ; R0 := U3
	41	[2562]	GETUPVAL 	R0 U4 ; R0 := U4
	42	[2562]	GETUPVAL 	R0 U5 ; R0 := U5
	43	[2562]	MOVE     	R0 R0 ; R0 := R0
	44	[2562]	GETUPVAL 	R0 U6 ; R0 := U6
	45	[2562]	SETTABLE 	R2 K20 R3 ; R2["mOnSelectedCallback"] := R3
	46	[2563]	GETGLOBAL	R2 K5 ; R2 := mCategories
	47	[2572]	CLOSURE  	R3 4 ; R3 := closure(Function #5)
	48	[2572]	GETUPVAL 	R0 U0 ; R0 := U0
	49	[2572]	SETTABLE 	R2 K21 R3 ; R2["UpdateFocusedColors"] := R3
	50	[2573]	GETGLOBAL	R2 K5 ; R2 := mCategories
	51	[2581]	CLOSURE  	R3 5 ; R3 := closure(Function #6)
	52	[2581]	SETTABLE 	R2 K22 R3 ; R2["UpdateElementColors"] := R3
	53	[2582]	GETGLOBAL	R2 K5 ; R2 := mCategories
	54	[2595]	CLOSURE  	R3 6 ; R3 := closure(Function #7)
	55	[2595]	GETUPVAL 	R0 U7 ; R0 := U7
	56	[2595]	SETTABLE 	R2 K23 R3 ; R2["mElementDrawCallback"] := R3
	57	[2596]	GETGLOBAL	R2 K5 ; R2 := mCategories
	58	[2598]	CLOSURE  	R3 7 ; R3 := closure(Function #8)
	59	[2598]	SETTABLE 	R2 K24 R3 ; R2["SetupPreInterpolationValues"] := R3
	60	[2599]	GETGLOBAL	R2 K5 ; R2 := mCategories
	61	[2599]	GETGLOBAL	R3 K5 ; R3 := mCategories
	62	[2599]	GETTABLE 	R3 R3 K26 ; R3 := R3["DefaultAlphaInterpolation"]
	63	[2599]	SETTABLE 	R2 K25 R3 ; R2["GetInterpolationProperties"] := R3
	64	[2600]	RETURN   	R0 1 ; return 

function #69 <?:2602,2652> (108 instructions, 432 bytes at 00000211223055F0)
0 params, 20 slots, 1 upvalue, 0 locals, 45 constants, 0 functions
	1	[2603]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[2603]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x25a6e75e]
	3	[2603]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2603]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xb895ffa3]
	5	[2603]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[2604]	LEN      	R1 R0 ; R1 := # R0
	7	[2604]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 10
	8	[2604]	JMP      	10 ; PC := 10
	9	[2605]	RETURN   	R0 1 ; return 
	10	[2608]	GETTABLE 	R1 R0 K4 ; R1 := R0[1.000000]
	11	[2609]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	12	[2609]	MOVE     	R3 R1 ; R3 := R1
	13	[2609]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[2609]	TEST     	R2 0 ; if not R2 then PC := 17
	15	[2609]	JMP      	17 ; PC := 17
	16	[2610]	RETURN   	R0 1 ; return 
	17	[2613]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	18	[2613]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xfb64e76c]
	19	[2613]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[2614]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0xa534c3ac]
	21	[2614]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[2615]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xde321e6f]
	23	[2615]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[2615]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xe85a2361]
	25	[2615]	LOADK    	R6 := 12.000000
	26	[2615]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	27	[2616]	GETGLOBAL	R5 K0 ; R5 := 0x25d99d89
	28	[2616]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0x25a6e75e]
	29	[2616]	CALL     	R5 2 2 ; R5 := R5(R6)
	30	[2617]	LOADK    	R6 := 0.000000
	31	[2618]	SELF     	R7 R5 K12 ; R8 := R5; R7 := R5[0x566259e1]
	32	[2618]	LOADK    	R9 := 7.000000
	33	[2618]	SELF     	R10 R5 K14 ; R11 := R5; R10 := R5[0x4e457768]
	34	[2618]	LOADK    	R12 := 7.000000
	35	[2618]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	36	[2618]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	37	[2619]	GETGLOBAL	R8 K5 ; R8 := 0x7b998233
	38	[2619]	MOVE     	R9 R7 ; R9 := R7
	39	[2619]	CALL     	R8 2 2 ; R8 := R8(R9)
	40	[2619]	TEST     	R8 1 ; if R8 then PC := 51
	41	[2619]	JMP      	51 ; PC := 51
	42	[2620]	SELF     	R8 R7 K15 ; R9 := R7; R8 := R7[0x2abbe722]
	43	[2620]	LOADK    	R10 := 2.000000
	44	[2620]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	45	[2621]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	46	[2621]	MOVE     	R10 R8 ; R10 := R8
	47	[2621]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[2621]	TEST     	R9 1 ; if R9 then PC := 51
	49	[2621]	JMP      	51 ; PC := 51
	50	[2622]	GETTABLE 	R6 R8 K16 ; R6 := R8["mModSlot"]
	51	[2626]	GETGLOBAL	R9 K17 ; R9 := _T
	52	[2626]	SETTABLE 	R9 K18 K4 ; R9["ArsenalState"] := 1.000000
	53	[2627]	GETGLOBAL	R9 K17 ; R9 := _T
	54	[2627]	SETTABLE 	R9 K19 K20 ; R9["upgradeItemCategory"] := 49.000000
	55	[2628]	GETGLOBAL	R9 K17 ; R9 := _T
	56	[2628]	SETTABLE 	R9 K21 K22 ; R9["upgradeItemLot"] := 7.000000
	57	[2629]	GETGLOBAL	R9 K17 ; R9 := _T
	58	[2629]	SETTABLE 	R9 K23 K24 ; R9["upgradeItemSlot"] := 2.000000
	59	[2630]	GETGLOBAL	R9 K17 ; R9 := _T
	60	[2630]	GETTABLE 	R10 R1 K26 ; R10 := R1["mItemId"]
	61	[2630]	GETTABLE 	R10 R10 K27 ; R10 := R10["mId"]
	62	[2630]	SETTABLE 	R9 K25 R10 ; R9["upgradeItemUID"] := R10
	63	[2631]	GETGLOBAL	R9 K17 ; R9 := _T
	64	[2631]	GETGLOBAL	R10 K29 ; R10 := mShipAvatar
	65	[2631]	SETTABLE 	R9 K28 R10 ; R9["RailjackAvatar"] := R10
	66	[2632]	GETGLOBAL	R9 K17 ; R9 := _T
	67	[2632]	SETTABLE 	R9 K30 R3 ; R9["MenuSuitAvatar"] := R3
	68	[2634]	GETGLOBAL	R9 K17 ; R9 := _T
	69	[2634]	NEWTABLE 	R10 0 7 ; R10 := {}
	70	[2635]	GETTABLE 	R11 R1 K33 ; R11 := R1["mItemType"]
	71	[2635]	SETTABLE 	R10 K32 R11 ; R10["type"] := R11
	72	[2636]	GETUPVAL 	R11 U0 ; R11 := U0
	73	[2636]	SELF     	R11 R11 K35 ; R12 := R11; R11 := R11[0x105074fb]
	74	[2636]	GETTABLE 	R13 R1 K33 ; R13 := R1["mItemType"]
	75	[2636]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	76	[2636]	SETTABLE 	R10 K34 R11 ; R10["storeItem"] := R11
	77	[2637]	SETTABLE 	R10 K36 R1 ; R10["info"] := R1
	78	[2638]	SETTABLE 	R10 K37 K38 ; R10["xp"] := 5.000000
	79	[2639]	SETTABLE 	R10 K39 R6 ; R10["configSlot"] := R6
	80	[2640]	SETTABLE 	R10 K40 R4 ; R10["item"] := R4
	81	[2641]	SETTABLE 	R10 K41 K42 ; R10["IsCrewShip"] := true
	82	[2642]	SETTABLE 	R9 K31 R10 ; R9["upgradeItem"] := R10
	83	[2644]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	84	[2644]	GETGLOBAL	R10 K17 ; R10 := _T
	85	[2644]	GETTABLE 	R10 R10 K43 ; R10 := R10["loadoutInProgress"]
	86	[2644]	CALL     	R9 2 2 ; R9 := R9(R10)
	87	[2644]	TEST     	R9 0 ; if not R9 then PC := 106
	88	[2644]	JMP      	106 ; PC := 106
	89	[2645]	GETGLOBAL	R9 K17 ; R9 := _T
	90	[2645]	NEWTABLE 	R10 0 0 ; R10 := {}
	91	[2645]	SETTABLE 	R9 K43 R10 ; R9["loadoutInProgress"] := R10
	92	[2646]	LOADK    	R9 := 0.000000
	93	[2646]	LOADK    	R10 := 9.000000
	94	[2646]	LOADK    	R11 := 1.000000
	95	[2646]	FORPREP  	R9 105 ; R9 -= R11; PC := 105
	96	[2647]	GETGLOBAL	R13 K17 ; R13 := _T
	97	[2647]	GETTABLE 	R13 R13 K43 ; R13 := R13["loadoutInProgress"]
	98	[2647]	SELF     	R14 R5 K12 ; R15 := R5; R14 := R5[0x566259e1]
	99	[2647]	MOVE     	R16 R12 ; R16 := R12
	100	[2647]	SELF     	R17 R5 K14 ; R18 := R5; R17 := R5[0x4e457768]
	101	[2647]	MOVE     	R19 R12 ; R19 := R12
	102	[2647]	CALL     	R17 3 0 ; R17,... := R17(R18,R19)
	103	[2647]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	104	[2647]	SETTABLE 	R13 R12 R14 ; R13[R12] := R14
	105	[2646]	FORLOOP  	R9 96 ; R9 += R11; if R9 <= R10 then begin PC := 96; R12 := R9 end
	106	[2651]	GETGLOBAL	R13 K17 ; R13 := _T
	107	[2651]	SETTABLE 	R13 K44 K42 ; R13["OpenedFromModScreen"] := true
	108	[2652]	RETURN   	R0 1 ; return 

function #70 <?:2654,2680> (167 instructions, 668 bytes at 000002111419CDE0)
0 params, 6 slots, 4 upvalues, 0 locals, 44 constants, 2 functions
	1	[2656]	GETGLOBAL	R0 K0 ; R0 := mLisetMode
	2	[2656]	TEST     	R0 1 ; if R0 then PC := 36
	3	[2656]	JMP      	36 ; PC := 36
	4	[2657]	GETGLOBAL	R0 K1 ; R0 := mCategories
	5	[2657]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	6	[2657]	NEWTABLE 	R2 0 3 ; R2 := {}
	7	[2657]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	8	[2657]	LOADK    	R4 K5 ; R4 := "/Lotus/Language/Railjack/Equipment"
	9	[2657]	NEWTABLE 	R5 0 0 ; R5 := {}
	10	[2657]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	11	[2657]	SETTABLE 	R2 K3 R3 ; R2[0x0141dd82] := R3
	12	[2657]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[2657]	GETTABLE 	R3 R3 K7 ; R3 := R3["EQUIPMENT"]
	14	[2657]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	15	[2657]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	16	[2657]	GETTABLE 	R3 R3 K10 ; R3 := R3[1.000000]
	17	[2657]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	18	[2657]	OP_LOADBOOL	R3 1 0 ; R3 := true
	19	[2657]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	20	[2658]	GETGLOBAL	R0 K1 ; R0 := mCategories
	21	[2658]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	22	[2658]	NEWTABLE 	R2 0 3 ; R2 := {}
	23	[2658]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	24	[2658]	LOADK    	R4 K11 ; R4 := "/Lotus/Language/Railjack/BonusWeapons"
	25	[2658]	NEWTABLE 	R5 0 0 ; R5 := {}
	26	[2658]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[2658]	SETTABLE 	R2 K3 R3 ; R2[0x0141dd82] := R3
	28	[2658]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[2658]	GETTABLE 	R3 R3 K12 ; R3 := R3["WEAPONS"]
	30	[2658]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	31	[2658]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	32	[2658]	GETTABLE 	R3 R3 K13 ; R3 := R3[2.000000]
	33	[2658]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	34	[2658]	OP_LOADBOOL	R3 1 0 ; R3 := true
	35	[2658]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	36	[2660]	GETGLOBAL	R0 K1 ; R0 := mCategories
	37	[2660]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	38	[2660]	NEWTABLE 	R2 0 5 ; R2 := {}
	39	[2660]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	40	[2660]	LOADK    	R4 K14 ; R4 := "/Lotus/Language/Menu/Loadout_Upgrades"
	41	[2660]	NEWTABLE 	R5 0 0 ; R5 := {}
	42	[2660]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[2660]	SETTABLE 	R2 K3 R3 ; R2[0x0141dd82] := R3
	44	[2660]	GETUPVAL 	R3 U0 ; R3 := U0
	45	[2660]	GETTABLE 	R3 R3 K15 ; R3 := R3["SYSTEMS"]
	46	[2660]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	47	[2660]	GETGLOBAL	R3 K17 ; R3 := 0x93a422ee
	48	[2660]	SETTABLE 	R2 K16 R3 ; R2["Screen"] := R3
	49	[2660]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	50	[2660]	GETUPVAL 	R0 U1 ; R0 := U1
	51	[2660]	SETTABLE 	R2 K18 R3 ; R2["SetupFunc"] := R3
	52	[2660]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	53	[2660]	GETTABLE 	R3 R3 K19 ; R3 := R3[4.000000]
	54	[2660]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	55	[2660]	OP_LOADBOOL	R3 1 0 ; R3 := true
	56	[2660]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	57	[2661]	GETGLOBAL	R0 K1 ; R0 := mCategories
	58	[2661]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	59	[2661]	NEWTABLE 	R2 0 4 ; R2 := {}
	60	[2661]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	61	[2661]	LOADK    	R4 K20 ; R4 := "/Lotus/Language/Intrinsics/Intrinsics"
	62	[2661]	NEWTABLE 	R5 0 0 ; R5 := {}
	63	[2661]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	64	[2661]	SETTABLE 	R2 K3 R3 ; R2[0x0141dd82] := R3
	65	[2661]	GETUPVAL 	R3 U0 ; R3 := U0
	66	[2661]	GETTABLE 	R3 R3 K21 ; R3 := R3["INTRINSICS"]
	67	[2661]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	68	[2661]	GETGLOBAL	R3 K22 ; R3 := 0x5228d2b2
	69	[2661]	SETTABLE 	R2 K16 R3 ; R2["Screen"] := R3
	70	[2661]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	71	[2661]	GETTABLE 	R3 R3 K23 ; R3 := R3[6.000000]
	72	[2661]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	73	[2661]	OP_LOADBOOL	R3 1 0 ; R3 := true
	74	[2661]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	75	[2662]	GETGLOBAL	R0 K0 ; R0 := mLisetMode
	76	[2662]	TEST     	R0 1 ; if R0 then PC := 114
	77	[2662]	JMP      	114 ; PC := 114
	78	[2663]	GETGLOBAL	R0 K1 ; R0 := mCategories
	79	[2663]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	80	[2663]	NEWTABLE 	R2 0 4 ; R2 := {}
	81	[2663]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	82	[2663]	LOADK    	R4 K24 ; R4 := "/Lotus/Language/Railjack/CrewMgr"
	83	[2663]	NEWTABLE 	R5 0 0 ; R5 := {}
	84	[2663]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	85	[2663]	SETTABLE 	R2 K3 R3 ; R2[0x0141dd82] := R3
	86	[2663]	GETUPVAL 	R3 U0 ; R3 := U0
	87	[2663]	GETTABLE 	R3 R3 K25 ; R3 := R3["CREW_MGR"]
	88	[2663]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	89	[2663]	GETGLOBAL	R3 K26 ; R3 := 0xa9fb0c35
	90	[2663]	SETTABLE 	R2 K16 R3 ; R2["Screen"] := R3
	91	[2663]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	92	[2663]	GETTABLE 	R3 R3 K27 ; R3 := R3[7.000000]
	93	[2663]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	94	[2663]	OP_LOADBOOL	R3 1 0 ; R3 := true
	95	[2663]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	96	[2664]	GETGLOBAL	R0 K1 ; R0 := mCategories
	97	[2664]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	98	[2664]	NEWTABLE 	R2 0 4 ; R2 := {}
	99	[2664]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	100	[2664]	LOADK    	R4 K28 ; R4 := "/Lotus/Language/Railjack/Cosmetics"
	101	[2664]	NEWTABLE 	R5 0 0 ; R5 := {}
	102	[2664]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	103	[2664]	SETTABLE 	R2 K3 R3 ; R2[0x0141dd82] := R3
	104	[2664]	GETUPVAL 	R3 U0 ; R3 := U0
	105	[2664]	GETTABLE 	R3 R3 K29 ; R3 := R3["COSMETICS"]
	106	[2664]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	107	[2664]	GETUPVAL 	R3 U2 ; R3 := U2
	108	[2664]	SETTABLE 	R2 K30 R3 ; R2["CameraSpot"] := R3
	109	[2664]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	110	[2664]	GETTABLE 	R3 R3 K31 ; R3 := R3[3.000000]
	111	[2664]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	112	[2664]	OP_LOADBOOL	R3 1 0 ; R3 := true
	113	[2664]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	114	[2666]	OP_LOADBOOL	R0 0 0 ; R0 := false
	115	[2666]	TEST     	R0 0 ; if not R0 then PC := 135
	116	[2666]	JMP      	135 ; PC := 135
	117	[2667]	GETGLOBAL	R0 K1 ; R0 := mCategories
	118	[2667]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbad4316f]
	119	[2667]	NEWTABLE 	R2 0 3 ; R2 := {}
	120	[2667]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	121	[2667]	LOADK    	R4 K32 ; R4 := "/Lotus/Language/Categories/ARCHWING"
	122	[2667]	NEWTABLE 	R5 0 0 ; R5 := {}
	123	[2667]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	124	[2667]	LOADK    	R4 K33 ; R4 := " DEV MODE"
	125	[2667]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	126	[2667]	SETTABLE 	R2 K3 R3 ; R2[0x0141dd82] := R3
	127	[2667]	GETUPVAL 	R3 U0 ; R3 := U0
	128	[2667]	GETTABLE 	R3 R3 K34 ; R3 := R3["ARCHWING"]
	129	[2667]	SETTABLE 	R2 K6 R3 ; R2["State"] := R3
	130	[2667]	GETGLOBAL	R3 K9 ; R3 := 0xf06bb4b0
	131	[2667]	GETTABLE 	R3 R3 K35 ; R3 := R3[8.000000]
	132	[2667]	SETTABLE 	R2 K8 R3 ; R2["Icon"] := R3
	133	[2667]	OP_LOADBOOL	R3 1 0 ; R3 := true
	134	[2667]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	135	[2670]	GETGLOBAL	R0 K1 ; R0 := mCategories
	136	[2670]	SELF     	R0 R0 K36 ; R1 := R0; R0 := R0[0x71e9ac81]
	137	[2670]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	138	[2670]	OP_LOADBOOL	R4 1 0 ; R4 := true
	139	[2670]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	140	[2671]	GETGLOBAL	R0 K0 ; R0 := mLisetMode
	141	[2671]	TEST     	R0 1 ; if R0 then PC := 147
	142	[2671]	JMP      	147 ; PC := 147
	143	[2671]	GETGLOBAL	R0 K37 ; R0 := _T
	144	[2671]	GETTABLE 	R0 R0 K38 ; R0 := R0["RailjackLoadout_SelectUpgrades"]
	145	[2671]	TEST     	R0 0 ; if not R0 then PC := 163
	146	[2671]	JMP      	163 ; PC := 163
	147	[2672]	GETGLOBAL	R0 K37 ; R0 := _T
	148	[2672]	SETTABLE 	R0 K38 K39 ; R0["RailjackLoadout_SelectUpgrades"] := nil
	149	[2673]	GETUPVAL 	R0 U3 ; R0 := U3
	150	[2673]	GETTABLE 	R0 R0 K40 ; R0 := R0[0x06d055f9]
	151	[2673]	GETGLOBAL	R1 K0 ; R1 := mLisetMode
	152	[2673]	LOADK    	R2 := 1.000000
	153	[2673]	LOADK    	R3 := 3.000000
	154	[2673]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	155	[2676]	GETGLOBAL	R1 K41 ; R1 := mTimerMgr
	156	[2676]	SELF     	R1 R1 K42 ; R2 := R1; R1 := R1[0xbd2e96ea]
	157	[2676]	LOADK    	R3 := 0.000000
	158	[2676]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	159	[2676]	MOVE     	R0 R0 ; R0 := R0
	160	[2676]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	161	[2676]	CLOSE    	R0 ; SAVE R0,...
	162	[2676]	JMP      	167 ; PC := 167
	163	[2678]	GETGLOBAL	R0 K1 ; R0 := mCategories
	164	[2678]	SELF     	R0 R0 K43 ; R1 := R0; R0 := R0[0x070daa5a]
	165	[2678]	LOADK    	R2 := 1.000000
	166	[2678]	CALL     	R0 3 1 ; R0(R1,R2)
	167	[2680]	RETURN   	R0 1 ; return 

function #71 <?:2682,2812> (328 instructions, 1312 bytes at 000002112842E150)
2 params, 31 slots, 5 upvalues, 0 locals, 95 constants, 0 functions
	1	[2684]	GETGLOBAL	R3 K0 ; R3 := mActiveState
	2	[2684]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[2684]	GETTABLE 	R4 R4 K1 ; R4 := R4["WEAPONS"]
	4	[2684]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 12
	5	[2684]	JMP      	12 ; PC := 12
	6	[2684]	GETGLOBAL	R3 K0 ; R3 := mActiveState
	7	[2684]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[2684]	GETTABLE 	R4 R4 K2 ; R4 := R4["WEAPON_INV"]
	9	[2684]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 12
	10	[2684]	JMP      	12 ; PC := 12
	11	[2684]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 12
	12	[2684]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[2685]	GETGLOBAL	R4 K3 ; R4 := mCurrentLoadout
	14	[2685]	EQ       	1 R4 K4 ; if R4 == nil then PC := 34
	15	[2685]	JMP      	34 ; PC := 34
	16	[2685]	GETTABLE 	R4 R0 K5 ; R4 := R0["Slot"]
	17	[2685]	EQ       	1 R4 K4 ; if R4 == nil then PC := 34
	18	[2685]	JMP      	34 ; PC := 34
	19	[2686]	TEST     	R3 0 ; if not R3 then PC := 28
	20	[2686]	JMP      	28 ; PC := 28
	21	[2687]	GETGLOBAL	R4 K3 ; R4 := mCurrentLoadout
	22	[2687]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x73a8846a]
	23	[2687]	GETTABLE 	R6 R0 K7 ; R6 := R0["Hand"]
	24	[2687]	GETTABLE 	R7 R0 K5 ; R7 := R0["Slot"]
	25	[2687]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	26	[2687]	MOVE     	R2 R4 ; R2 := R4
	27	[2687]	JMP      	34 ; PC := 34
	28	[2689]	GETGLOBAL	R4 K3 ; R4 := mCurrentLoadout
	29	[2689]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xb61abfd2]
	30	[2689]	GETTABLE 	R6 R0 K9 ; R6 := R0["LoadOutType"]
	31	[2689]	GETTABLE 	R7 R0 K5 ; R7 := R0["Slot"]
	32	[2689]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	33	[2689]	MOVE     	R2 R4 ; R2 := R4
	34	[2692]	EQ       	1 R2 K4 ; if R2 == nil then PC := 328
	35	[2692]	JMP      	328 ; PC := 328
	36	[2693]	SETTABLE 	R0 K10 R2 ; R0["WeaponInfo"] := R2
	37	[2695]	GETTABLE 	R4 R2 K11 ; R4 := R2["mUpgradeType"]
	38	[2695]	SETTABLE 	R0 K11 R4 ; R0["mUpgradeType"] := R4
	39	[2696]	GETTABLE 	R4 R2 K12 ; R4 := R2["mUpgradeFingerprint"]
	40	[2696]	SETTABLE 	R0 K12 R4 ; R0["mUpgradeFingerprint"] := R4
	41	[2698]	TEST     	R3 0 ; if not R3 then PC := 135
	42	[2698]	JMP      	135 ; PC := 135
	43	[2698]	TEST     	R1 0 ; if not R1 then PC := 135
	44	[2698]	JMP      	135 ; PC := 135
	45	[2698]	GETGLOBAL	R4 K13 ; R4 := 0x7b998233
	46	[2698]	GETTABLE 	R5 R2 K14 ; R5 := R2["mItemType"]
	47	[2698]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[2698]	TEST     	R4 0 ; if not R4 then PC := 135
	49	[2698]	JMP      	135 ; PC := 135
	50	[2699]	LOADNIL  	R4 R4 ; R4 := nil
	51	[2700]	GETGLOBAL	R5 K13 ; R5 := 0x7b998233
	52	[2700]	GETGLOBAL	R6 K15 ; R6 := mShipSuit
	53	[2700]	CALL     	R5 2 2 ; R5 := R5(R6)
	54	[2700]	TEST     	R5 1 ; if R5 then PC := 85
	55	[2700]	JMP      	85 ; PC := 85
	56	[2701]	GETTABLE 	R5 R0 K7 ; R5 := R0["Hand"]
	57	[2701]	EQ       	0 R5 K17 ; if R5 ~= 0.000000 then PC := 75
	58	[2701]	JMP      	75 ; PC := 75
	59	[2702]	GETTABLE 	R5 R0 K5 ; R5 := R0["Slot"]
	60	[2702]	EQ       	0 R5 K17 ; if R5 ~= 0.000000 then PC := 67
	61	[2702]	JMP      	67 ; PC := 67
	62	[2703]	GETGLOBAL	R5 K15 ; R5 := mShipSuit
	63	[2703]	SELF     	R5 R5 K19 ; R6 := R5; R5 := R5[0xb6ef303c]
	64	[2703]	CALL     	R5 2 2 ; R5 := R5(R6)
	65	[2703]	MOVE     	R4 R5 ; R4 := R5
	66	[2703]	JMP      	85 ; PC := 85
	67	[2704]	GETTABLE 	R5 R0 K5 ; R5 := R0["Slot"]
	68	[2704]	EQ       	0 R5 K20 ; if R5 ~= 2.000000 then PC := 85
	69	[2704]	JMP      	85 ; PC := 85
	70	[2705]	GETGLOBAL	R5 K15 ; R5 := mShipSuit
	71	[2705]	SELF     	R5 R5 K21 ; R6 := R5; R5 := R5[0x7ce48d19]
	72	[2705]	CALL     	R5 2 2 ; R5 := R5(R6)
	73	[2705]	MOVE     	R4 R5 ; R4 := R5
	74	[2706]	JMP      	85 ; PC := 85
	75	[2707]	GETTABLE 	R5 R0 K7 ; R5 := R0["Hand"]
	76	[2707]	EQ       	0 R5 K22 ; if R5 ~= 1.000000 then PC := 85
	77	[2707]	JMP      	85 ; PC := 85
	78	[2707]	GETTABLE 	R5 R0 K5 ; R5 := R0["Slot"]
	79	[2707]	EQ       	0 R5 K17 ; if R5 ~= 0.000000 then PC := 85
	80	[2707]	JMP      	85 ; PC := 85
	81	[2708]	GETGLOBAL	R5 K15 ; R5 := mShipSuit
	82	[2708]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0x5ed1d978]
	83	[2708]	CALL     	R5 2 2 ; R5 := R5(R6)
	84	[2708]	MOVE     	R4 R5 ; R4 := R5
	85	[2712]	GETGLOBAL	R5 K13 ; R5 := 0x7b998233
	86	[2712]	MOVE     	R6 R4 ; R6 := R4
	87	[2712]	CALL     	R5 2 2 ; R5 := R5(R6)
	88	[2712]	TEST     	R5 1 ; if R5 then PC := 140
	89	[2712]	JMP      	140 ; PC := 140
	90	[2713]	GETGLOBAL	R5 K18 ; R5 := 0x6c97a788
	91	[2713]	GETTABLE 	R5 R5 K25 ; R5 := R5["InvalidItemID"]
	92	[2713]	SETTABLE 	R0 K24 R5 ; R0["UID"] := R5
	93	[2714]	GETGLOBAL	R5 K27 ; R5 := 0x7ed0a956
	94	[2714]	SELF     	R6 R4 K28 ; R7 := R4; R6 := R4[0xcde10c4a]
	95	[2714]	CALL     	R6 2 2 ; R6 := R6(R7)
	96	[2714]	SELF     	R6 R6 K29 ; R7 := R6; R6 := R6[0xed4e0128]
	97	[2714]	CALL     	R6 2 0 ; R6,... := R6(R7)
	98	[2714]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	99	[2714]	SETTABLE 	R0 K26 R5 ; R0["ItemType"] := R5
	100	[2716]	GETGLOBAL	R5 K30 ; R5 := mCurrentShip
	101	[2716]	GETTABLE 	R5 R5 K31 ; R5 := R5["ShipInfo"]
	102	[2716]	TEST     	R5 0 ; if not R5 then PC := 140
	103	[2716]	JMP      	140 ; PC := 140
	104	[2717]	GETGLOBAL	R5 K30 ; R5 := mCurrentShip
	105	[2717]	GETTABLE 	R5 R5 K31 ; R5 := R5["ShipInfo"]
	106	[2717]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x73a8846a]
	107	[2717]	GETTABLE 	R7 R0 K7 ; R7 := R0["Hand"]
	108	[2717]	GETTABLE 	R8 R0 K5 ; R8 := R0["Slot"]
	109	[2717]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	110	[2718]	GETTABLE 	R6 R5 K32 ; R6 := R5["mItemId"]
	111	[2718]	GETTABLE 	R7 R2 K32 ; R7 := R2["mItemId"]
	112	[2718]	GETTABLE 	R7 R7 K33 ; R7 := R7["mId"]
	113	[2718]	SETTABLE 	R6 K33 R7 ; R6["mId"] := R7
	114	[2719]	GETTABLE 	R6 R0 K26 ; R6 := R0["ItemType"]
	115	[2719]	SETTABLE 	R5 K14 R6 ; R5["mItemType"] := R6
	116	[2720]	GETGLOBAL	R6 K34 ; R6 := 0x25d99d89
	117	[2720]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x25a6e75e]
	118	[2720]	CALL     	R6 2 2 ; R6 := R6(R7)
	119	[2720]	SELF     	R6 R6 K36 ; R7 := R6; R6 := R6[0xdf943d05]
	120	[2720]	GETGLOBAL	R8 K30 ; R8 := mCurrentShip
	121	[2720]	GETTABLE 	R8 R8 K37 ; R8 := R8["ID"]
	122	[2720]	GETTABLE 	R9 R0 K7 ; R9 := R0["Hand"]
	123	[2720]	GETTABLE 	R10 R0 K5 ; R10 := R0["Slot"]
	124	[2720]	MOVE     	R11 R5 ; R11 := R5
	125	[2720]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	126	[2724]	GETGLOBAL	R6 K34 ; R6 := 0x25d99d89
	127	[2724]	SELF     	R6 R6 K38 ; R7 := R6; R6 := R6[0x41f4ba99]
	128	[2724]	CALL     	R6 2 1 ; R6(R7)
	129	[2725]	GETGLOBAL	R6 K34 ; R6 := 0x25d99d89
	130	[2725]	SELF     	R6 R6 K39 ; R7 := R6; R6 := R6[0x62c81b76]
	131	[2725]	CALL     	R6 2 2 ; R6 := R6(R7)
	132	[2725]	GETTABLE 	R6 R6 K40 ; R6 := R6["mCrewShipLoadOut"]
	133	[2725]	SETGLOBALHASH	R6 K3 ; mCurrentLoadout := R6
	134	[2727]	JMP      	140 ; PC := 140
	135	[2729]	GETTABLE 	R6 R2 K32 ; R6 := R2["mItemId"]
	136	[2729]	GETTABLE 	R6 R6 K33 ; R6 := R6["mId"]
	137	[2729]	SETTABLE 	R0 K24 R6 ; R0["UID"] := R6
	138	[2730]	GETTABLE 	R6 R2 K14 ; R6 := R2["mItemType"]
	139	[2730]	SETTABLE 	R0 K26 R6 ; R0["ItemType"] := R6
	140	[2733]	GETTABLE 	R6 R2 K42 ; R6 := R2["mXP"]
	141	[2733]	SETTABLE 	R0 K41 R6 ; R0["Xp"] := R6
	142	[2734]	GETGLOBAL	R6 K44 ; R6 := 0xa94df70b
	143	[2734]	SELF     	R6 R6 K45 ; R7 := R6; R6 := R6[0x8427bf69]
	144	[2734]	GETTABLE 	R8 R0 K41 ; R8 := R0["Xp"]
	145	[2734]	GETTABLE 	R9 R0 K26 ; R9 := R0["ItemType"]
	146	[2734]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	147	[2734]	SETTABLE 	R0 K43 R6 ; R0["Level"] := R6
	148	[2735]	GETGLOBAL	R6 K44 ; R6 := 0xa94df70b
	149	[2735]	SELF     	R6 R6 K46 ; R7 := R6; R6 := R6[0x54c107f9]
	150	[2735]	GETTABLE 	R8 R0 K41 ; R8 := R0["Xp"]
	151	[2735]	GETTABLE 	R9 R0 K26 ; R9 := R0["ItemType"]
	152	[2735]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	153	[2736]	GETGLOBAL	R7 K44 ; R7 := 0xa94df70b
	154	[2736]	SELF     	R7 R7 K47 ; R8 := R7; R7 := R7[0x4d058675]
	155	[2736]	GETTABLE 	R9 R0 K41 ; R9 := R0["Xp"]
	156	[2736]	GETTABLE 	R10 R0 K26 ; R10 := R0["ItemType"]
	157	[2736]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	158	[2737]	GETTABLE 	R8 R0 K41 ; R8 := R0["Xp"]
	159	[2737]	SUB      	R8 R8 R6 ; R8 := R8 - R6
	160	[2737]	SUB      	R9 R7 R6 ; R9 := R7 - R6
	161	[2737]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	162	[2738]	SETTABLE 	R0 K48 R8 ; R0["XpRatio"] := R8
	163	[2739]	GETTABLE 	R9 R0 K43 ; R9 := R0["Level"]
	164	[2739]	GETGLOBAL	R10 K44 ; R10 := 0xa94df70b
	165	[2739]	SELF     	R10 R10 K49 ; R11 := R10; R10 := R10[0x757f0100]
	166	[2739]	GETTABLE 	R12 R0 K26 ; R12 := R0["ItemType"]
	167	[2739]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	168	[2739]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 171
	169	[2739]	JMP      	171 ; PC := 171
	170	[2740]	SETTABLE 	R0 K48 K4 ; R0["XpRatio"] := nil
	171	[2743]	GETUPVAL 	R9 U1 ; R9 := U1
	172	[2743]	SELF     	R9 R9 K51 ; R10 := R9; R9 := R9[0x105074fb]
	173	[2743]	GETTABLE 	R11 R0 K26 ; R11 := R0["ItemType"]
	174	[2743]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	175	[2743]	SETTABLE 	R0 K50 R9 ; R0["mStoreItem"] := R9
	176	[2744]	GETTABLE 	R9 R0 K50 ; R9 := R0["mStoreItem"]
	177	[2744]	EQ       	1 R9 K4 ; if R9 == nil then PC := 201
	178	[2744]	JMP      	201 ; PC := 201
	179	[2745]	GETTABLE 	R9 R0 K50 ; R9 := R0["mStoreItem"]
	180	[2745]	SELF     	R9 R9 K53 ; R10 := R9; R9 := R9[0x54b0d897]
	181	[2745]	CALL     	R9 2 2 ; R9 := R9(R10)
	182	[2745]	SETTABLE 	R0 K52 R9 ; R0["FormFactor"] := R9
	183	[2746]	GETUPVAL 	R9 U2 ; R9 := U2
	184	[2746]	GETTABLE 	R9 R9 K56 ; R9 := R9[0x056dcf06]
	185	[2746]	GETTABLE 	R10 R0 K50 ; R10 := R0["mStoreItem"]
	186	[2746]	OP_LOADBOOL	R11 1 0 ; R11 := true
	187	[2746]	CALL     	R9 3 3 ; R9,R10 := R9(R10,R11)
	188	[2746]	SETTABLE 	R0 K55 R10 ; R0["Themed"] := R10
	189	[2746]	SETTABLE 	R0 K54 R9 ; R0["Icon"] := R9
	190	[2747]	GETGLOBAL	R9 K58 ; R9 := 0xae91e43b
	191	[2747]	SELF     	R9 R9 K59 ; R10 := R9; R9 := R9[0x42b04007]
	192	[2747]	GETTABLE 	R11 R0 K50 ; R11 := R0["mStoreItem"]
	193	[2747]	SELF     	R11 R11 K60 ; R12 := R11; R11 := R11[0xd3a9d01f]
	194	[2747]	CALL     	R11 2 2 ; R11 := R11(R12)
	195	[2747]	SELF     	R11 R11 K61 ; R12 := R11; R11 := R11[0x6d604ba7]
	196	[2747]	CALL     	R11 2 2 ; R11 := R11(R12)
	197	[2747]	OP_LOADBOOL	R12 1 0 ; R12 := true
	198	[2747]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	199	[2747]	SETTABLE 	R0 K57 R9 ; R0["NameOverride"] := R9
	200	[2747]	JMP      	205 ; PC := 205
	201	[2749]	SETTABLE 	R0 K52 K4 ; R0["FormFactor"] := nil
	202	[2750]	SETTABLE 	R0 K54 K4 ; R0["Icon"] := nil
	203	[2751]	SETTABLE 	R0 K55 K4 ; R0["Themed"] := nil
	204	[2752]	SETTABLE 	R0 K57 K4 ; R0["NameOverride"] := nil
	205	[2754]	SETTABLE 	R0 K62 K63 ; R0["mCanEquip"] := true
	206	[2755]	SETTABLE 	R0 K64 K63 ; R0["mCanCustomize"] := true
	207	[2756]	GETTABLE 	R9 R0 K65 ; R9 := R0["mProductCategory"]
	208	[2756]	TEST     	R9 1 ; if R9 then PC := 212
	209	[2756]	JMP      	212 ; PC := 212
	210	[2756]	GETGLOBAL	R9 K66 ; R9 := mEquipment
	211	[2756]	GETTABLE 	R9 R9 K65 ; R9 := R9["mProductCategory"]
	212	[2758]	GETGLOBAL	R10 K34 ; R10 := 0x25d99d89
	213	[2758]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0x25a6e75e]
	214	[2758]	CALL     	R10 2 2 ; R10 := R10(R11)
	215	[2761]	SETTABLE 	R0 K67 K4 ; R0["WeaponCompatibility"] := nil
	216	[2762]	NEWTABLE 	R11 0 0 ; R11 := {}
	217	[2762]	SETTABLE 	R0 K68 R11 ; R0["AlwaysAvailableItems"] := R11
	218	[2764]	GETGLOBAL	R11 K0 ; R11 := mActiveState
	219	[2764]	GETUPVAL 	R12 U0 ; R12 := U0
	220	[2764]	GETTABLE 	R12 R12 K1 ; R12 := R12["WEAPONS"]
	221	[2764]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 255
	222	[2764]	JMP      	255 ; PC := 255
	223	[2765]	GETUPVAL 	R11 U3 ; R11 := U3
	224	[2765]	SELF     	R12 R10 K70 ; R13 := R10; R12 := R10[0xbfba693e]
	225	[2765]	CALL     	R12 2 0 ; R12,... := R12(R13)
	226	[2765]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	227	[2765]	SETTABLE 	R0 K69 R11 ; R0["OwnedItems"] := R11
	228	[2766]	GETUPVAL 	R11 U3 ; R11 := U3
	229	[2766]	SELF     	R12 R10 K72 ; R13 := R10; R12 := R10[0xe600a7f3]
	230	[2766]	CALL     	R12 2 0 ; R12,... := R12(R13)
	231	[2766]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	232	[2766]	SETTABLE 	R0 K71 R11 ; R0["SalvageItems"] := R11
	233	[2767]	GETUPVAL 	R11 U4 ; R11 := U4
	234	[2767]	SELF     	R12 R10 K74 ; R13 := R10; R12 := R10[0xaea1cb86]
	235	[2767]	CALL     	R12 2 2 ; R12 := R12(R13)
	236	[2767]	MOVE     	R13 R9 ; R13 := R9
	237	[2767]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	238	[2767]	SETTABLE 	R0 K73 R11 ; R0["RawSalvageItems"] := R11
	239	[2769]	GETGLOBAL	R11 K75 ; R11 := 0xbe190284
	240	[2769]	SELF     	R11 R11 K76 ; R12 := R11; R11 := R11[0xd7d79b74]
	241	[2769]	CALL     	R11 2 2 ; R11 := R11(R12)
	242	[2770]	GETGLOBAL	R12 K13 ; R12 := 0x7b998233
	243	[2770]	MOVE     	R13 R11 ; R13 := R11
	244	[2770]	CALL     	R12 2 2 ; R12 := R12(R13)
	245	[2770]	TEST     	R12 1 ; if R12 then PC := 265
	246	[2770]	JMP      	265 ; PC := 265
	247	[2771]	SELF     	R12 R11 K77 ; R13 := R11; R12 := R11[0xcd57f819]
	248	[2771]	CALL     	R12 2 2 ; R12 := R12(R13)
	249	[2772]	SELF     	R13 R12 K78 ; R14 := R12; R13 := R12[0xbe8ab12a]
	250	[2772]	GETTABLE 	R15 R0 K7 ; R15 := R0["Hand"]
	251	[2772]	GETTABLE 	R16 R0 K5 ; R16 := R0["Slot"]
	252	[2772]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	253	[2772]	SETTABLE 	R0 K67 R13 ; R0["WeaponCompatibility"] := R13
	254	[2773]	JMP      	265 ; PC := 265
	255	[2775]	GETUPVAL 	R13 U3 ; R13 := U3
	256	[2775]	SELF     	R14 R10 K79 ; R15 := R10; R14 := R10[0x3218c3b0]
	257	[2775]	CALL     	R14 2 2 ; R14 := R14(R15)
	258	[2775]	OP_LOADBOOL	R15 0 0 ; R15 := false
	259	[2776]	GETUPVAL 	R16 U3 ; R16 := U3
	260	[2776]	SELF     	R17 R10 K80 ; R18 := R10; R17 := R10[0x6f7b67d7]
	261	[2776]	CALL     	R17 2 0 ; R17,... := R17(R18)
	262	[2776]	CALL     	R16 0 0 ; R16,... := R16(R17,...)
	263	[2775]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	264	[2776]	SETTABLE 	R0 K69 R13 ; R0["OwnedItems"] := R13
	265	[2779]	GETUPVAL 	R13 U1 ; R13 := U1
	266	[2779]	SELF     	R13 R13 K81 ; R14 := R13; R13 := R13[0xd2120e76]
	267	[2779]	CALL     	R13 2 2 ; R13 := R13(R14)
	268	[2780]	LOADNIL  	R14 R18 ; R14 := R15 := R16 := R17 := R18 := nil
	269	[2785]	LOADK    	R19 := 1.000000
	270	[2785]	LEN      	R20 R13 ; R20 := # R13
	271	[2785]	LOADK    	R21 := 1.000000
	272	[2785]	FORPREP  	R19 327 ; R19 -= R21; PC := 327
	273	[2786]	GETGLOBAL	R23 K82 ; R23 := 0xce225efa
	274	[2786]	LOADK    	R24 := 0.000000
	275	[2786]	CALL     	R23 2 1 ; R23(R24)
	276	[2787]	GETTABLE 	R14 R13 R22 ; R14 := R13[R22]
	277	[2789]	GETGLOBAL	R23 K83 ; R23 := 0x60cce7b4
	278	[2789]	GETGLOBAL	R24 K13 ; R24 := 0x7b998233
	279	[2789]	MOVE     	R25 R14 ; R25 := R14
	280	[2789]	CALL     	R24 2 2 ; R24 := R24(R25)
	281	[2789]	TEST     	R24 1 ; if R24 then PC := 286
	282	[2789]	JMP      	286 ; PC := 286
	283	[2789]	SELF     	R24 R14 K84 ; R25 := R14; R24 := R14[0x31e559d2]
	284	[2789]	CALL     	R24 2 2 ; R24 := R24(R25)
	285	[2789]	JMP      	288 ; PC := 288
	286	[2789]	OP_LOADBOOL	R24 0 1 ; R24 := false; PC := 287
	287	[2789]	OP_LOADBOOL	R24 1 0 ; R24 := true
	288	[2789]	CALL     	R23 2 1 ; R23(R24)
	289	[2790]	SELF     	R23 R14 K85 ; R24 := R14; R23 := R14[0xfe9eb1a5]
	290	[2790]	CALL     	R23 2 2 ; R23 := R23(R24)
	291	[2790]	MOVE     	R15 R23 ; R15 := R23
	292	[2791]	EQ       	0 R15 R9 ; if R15 ~= R9 then PC := 327
	293	[2791]	JMP      	327 ; PC := 327
	294	[2792]	GETGLOBAL	R23 K18 ; R23 := 0x6c97a788
	295	[2792]	GETTABLE 	R23 R23 K86 ; R23 := R23[0xe1f94dee]
	296	[2792]	CALL     	R23 1 2 ; R23 := R23()
	297	[2792]	MOVE     	R16 R23 ; R16 := R23
	298	[2793]	SELF     	R23 R14 K87 ; R24 := R14; R23 := R14[0xf278f8a1]
	299	[2793]	CALL     	R23 2 2 ; R23 := R23(R24)
	300	[2793]	MOVE     	R17 R23 ; R17 := R23
	301	[2794]	GETGLOBAL	R23 K18 ; R23 := 0x6c97a788
	302	[2794]	GETTABLE 	R18 R23 K25 ; R18 := R23["InvalidItemID"]
	303	[2796]	SETTABLE 	R16 K14 R17 ; R16["mItemType"] := R17
	304	[2797]	GETTABLE 	R23 R16 K32 ; R23 := R16["mItemId"]
	305	[2797]	SETTABLE 	R23 K33 R18 ; R23["mId"] := R18
	306	[2799]	GETGLOBAL	R23 K88 ; R23 := 0x33bdd652
	307	[2799]	GETTABLE 	R23 R23 K89 ; R23 := R23[0x23d5322f]
	308	[2799]	GETTABLE 	R24 R0 K68 ; R24 := R0["AlwaysAvailableItems"]
	309	[2799]	NEWTABLE 	R25 0 8 ; R25 := {}
	310	[2800]	SETTABLE 	R25 K26 R17 ; R25["ItemType"] := R17
	311	[2801]	SETTABLE 	R25 K50 R14 ; R25["mStoreItem"] := R14
	312	[2802]	GETGLOBAL	R26 K58 ; R26 := 0xae91e43b
	313	[2802]	SELF     	R26 R26 K59 ; R27 := R26; R26 := R26[0x42b04007]
	314	[2802]	GETGLOBAL	R28 K91 ; R28 := 0x64fb1586
	315	[2802]	SELF     	R29 R14 K60 ; R30 := R14; R29 := R14[0xd3a9d01f]
	316	[2802]	CALL     	R29 2 0 ; R29,... := R29(R30)
	317	[2802]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	318	[2802]	OP_LOADBOOL	R29 1 0 ; R29 := true
	319	[2802]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	320	[2802]	SETTABLE 	R25 K90 R26 ; R25["Name"] := R26
	321	[2803]	SETTABLE 	R25 K24 R18 ; R25["UID"] := R18
	322	[2804]	SETTABLE 	R25 K41 K17 ; R25["Xp"] := 0.000000
	323	[2805]	SETTABLE 	R25 K92 R16 ; R25["Item"] := R16
	324	[2806]	SETTABLE 	R25 K93 K22 ; R25["ItemCount"] := 1.000000
	325	[2807]	SETTABLE 	R25 K94 K63 ; R25["AlwaysAvailable"] := true
	326	[2799]	CALL     	R23 3 1 ; R23(R24,R25)
	327	[2785]	FORLOOP  	R19 273 ; R19 += R21; if R19 <= R20 then begin PC := 273; R22 := R19 end
	328	[2812]	RETURN   	R0 1 ; return 

function #72 <?:2814,2866> (144 instructions, 576 bytes at 000002111F016160)
1 param, 24 slots, 4 upvalues, 0 locals, 55 constants, 0 functions
	1	[2815]	GETTABLE 	R1 R0 K1 ; R1 := R0["Item"]
	2	[2815]	GETTABLE 	R1 R1 K2 ; R1 := R1["mItemType"]
	3	[2815]	SETTABLE 	R0 K0 R1 ; R0["ItemType"] := R1
	4	[2816]	GETTABLE 	R1 R0 K1 ; R1 := R0["Item"]
	5	[2816]	GETTABLE 	R1 R1 K4 ; R1 := R1["mItemId"]
	6	[2816]	GETTABLE 	R1 R1 K5 ; R1 := R1["mId"]
	7	[2816]	SETTABLE 	R0 K3 R1 ; R0["UID"] := R1
	8	[2817]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[2817]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x105074fb]
	10	[2817]	GETTABLE 	R3 R0 K0 ; R3 := R0["ItemType"]
	11	[2817]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[2817]	SETTABLE 	R0 K6 R1 ; R0["mStoreItem"] := R1
	13	[2818]	GETTABLE 	R1 R0 K6 ; R1 := R0["mStoreItem"]
	14	[2818]	EQ       	1 R1 K8 ; if R1 == nil then PC := 34
	15	[2818]	JMP      	34 ; PC := 34
	16	[2819]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[2819]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056dcf06]
	18	[2819]	GETTABLE 	R2 R0 K6 ; R2 := R0["mStoreItem"]
	19	[2819]	OP_LOADBOOL	R3 1 0 ; R3 := true
	20	[2819]	CALL     	R1 3 3 ; R1,R2 := R1(R2,R3)
	21	[2819]	SETTABLE 	R0 K10 R2 ; R0["Themed"] := R2
	22	[2819]	SETTABLE 	R0 K9 R1 ; R0[0x00000001] := R1
	23	[2820]	GETGLOBAL	R1 K13 ; R1 := 0xae91e43b
	24	[2820]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0x42b04007]
	25	[2820]	GETTABLE 	R3 R0 K6 ; R3 := R0["mStoreItem"]
	26	[2820]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xd3a9d01f]
	27	[2820]	CALL     	R3 2 2 ; R3 := R3(R4)
	28	[2820]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0x6d604ba7]
	29	[2820]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[2820]	OP_LOADBOOL	R4 0 0 ; R4 := false
	31	[2820]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	32	[2820]	SETTABLE 	R0 K12 R1 ; R0["NameOverride"] := R1
	33	[2820]	JMP      	37 ; PC := 37
	34	[2822]	SETTABLE 	R0 K9 K8 ; R0["Icon"] := nil
	35	[2823]	SETTABLE 	R0 K10 K8 ; R0["Themed"] := nil
	36	[2824]	SETTABLE 	R0 K12 K8 ; R0["NameOverride"] := nil
	37	[2827]	GETGLOBAL	R1 K17 ; R1 := 0x25d99d89
	38	[2827]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0x25a6e75e]
	39	[2827]	CALL     	R1 2 2 ; R1 := R1(R2)
	40	[2828]	GETUPVAL 	R2 U2 ; R2 := U2
	41	[2828]	SELF     	R3 R1 K20 ; R4 := R1; R3 := R1[0xdc039065]
	42	[2828]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[2828]	OP_LOADBOOL	R4 1 0 ; R4 := true
	44	[2828]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	45	[2828]	SETTABLE 	R0 K19 R2 ; R0["OwnedItems"] := R2
	46	[2829]	GETUPVAL 	R2 U2 ; R2 := U2
	47	[2829]	SELF     	R3 R1 K22 ; R4 := R1; R3 := R1[0x64e44bdc]
	48	[2829]	CALL     	R3 2 2 ; R3 := R3(R4)
	49	[2829]	OP_LOADBOOL	R4 1 0 ; R4 := true
	50	[2829]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	51	[2829]	SETTABLE 	R0 K21 R2 ; R0["SalvageItems"] := R2
	52	[2830]	GETUPVAL 	R2 U3 ; R2 := U3
	53	[2830]	SELF     	R3 R1 K24 ; R4 := R1; R3 := R1[0xaea1cb86]
	54	[2830]	CALL     	R3 2 2 ; R3 := R3(R4)
	55	[2830]	LOADK    	R4 := 46.000000
	56	[2830]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	57	[2830]	SETTABLE 	R0 K23 R2 ; R0["RawSalvageItems"] := R2
	58	[2833]	SETTABLE 	R0 K26 K8 ; R0["WeaponCompatibility"] := nil
	59	[2834]	NEWTABLE 	R2 0 0 ; R2 := {}
	60	[2834]	SETTABLE 	R0 K27 R2 ; R0["AlwaysAvailableItems"] := R2
	61	[2836]	GETGLOBAL	R2 K28 ; R2 := 0x7b998233
	62	[2836]	GETGLOBAL	R3 K29 ; R3 := mCrewShipWeaponSkinsLoader
	63	[2836]	CALL     	R2 2 2 ; R2 := R2(R3)
	64	[2836]	TEST     	R2 0 ; if not R2 then PC := 83
	65	[2836]	JMP      	83 ; PC := 83
	66	[2837]	NEWTABLE 	R2 0 0 ; R2 := {}
	67	[2838]	GETGLOBAL	R3 K30 ; R3 := 0xcfc01047
	68	[2838]	GETGLOBAL	R4 K31 ; R4 := mCrewShipWeaponSkinsToLoad
	69	[2838]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	70	[2838]	JMP      	76 ; PC := 76
	71	[2839]	GETGLOBAL	R8 K32 ; R8 := 0x33bdd652
	72	[2839]	GETTABLE 	R8 R8 K33 ; R8 := R8[0x23d5322f]
	73	[2839]	MOVE     	R9 R2 ; R9 := R2
	74	[2839]	MOVE     	R10 R6 ; R10 := R6
	75	[2839]	CALL     	R8 3 1 ; R8(R9,R10)
	76	[2838]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 71; R5 := R6 end
	77	[2839]	JMP      	71 ; PC := 71
	78	[2842]	GETGLOBAL	R8 K34 ; R8 := 0xbd496aa1
	79	[2842]	GETTABLE 	R8 R8 K35 ; R8 := R8[0x42645da3]
	80	[2842]	MOVE     	R9 R2 ; R9 := R2
	81	[2842]	CALL     	R8 2 2 ; R8 := R8(R9)
	82	[2842]	SETGLOBALHASH	R8 K29 ; mCrewShipWeaponSkinsLoader := R8
	83	[2845]	GETUPVAL 	R8 U0 ; R8 := U0
	84	[2845]	SELF     	R8 R8 K36 ; R9 := R8; R8 := R8[0xd2120e76]
	85	[2845]	CALL     	R8 2 2 ; R8 := R8(R9)
	86	[2847]	LOADK    	R9 := 1.000000
	87	[2847]	LEN      	R10 R8 ; R10 := # R8
	88	[2847]	LOADK    	R11 := 1.000000
	89	[2847]	FORPREP  	R9 143 ; R9 -= R11; PC := 143
	90	[2848]	GETGLOBAL	R13 K37 ; R13 := 0xce225efa
	91	[2848]	LOADK    	R14 := 0.000000
	92	[2848]	CALL     	R13 2 1 ; R13(R14)
	93	[2849]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	94	[2851]	GETGLOBAL	R14 K38 ; R14 := 0x60cce7b4
	95	[2851]	GETGLOBAL	R15 K28 ; R15 := 0x7b998233
	96	[2851]	MOVE     	R16 R13 ; R16 := R13
	97	[2851]	CALL     	R15 2 2 ; R15 := R15(R16)
	98	[2851]	TEST     	R15 1 ; if R15 then PC := 103
	99	[2851]	JMP      	103 ; PC := 103
	100	[2851]	SELF     	R15 R13 K39 ; R16 := R13; R15 := R13[0x31e559d2]
	101	[2851]	CALL     	R15 2 2 ; R15 := R15(R16)
	102	[2851]	JMP      	105 ; PC := 105
	103	[2851]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 104
	104	[2851]	OP_LOADBOOL	R15 1 0 ; R15 := true
	105	[2851]	CALL     	R14 2 1 ; R14(R15)
	106	[2853]	SELF     	R14 R13 K40 ; R15 := R13; R14 := R13[0xfe9eb1a5]
	107	[2853]	CALL     	R14 2 2 ; R14 := R14(R15)
	108	[2854]	GETGLOBAL	R15 K41 ; R15 := mEquipment
	109	[2854]	GETTABLE 	R15 R15 K42 ; R15 := R15["mProductCategory"]
	110	[2854]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 143
	111	[2854]	JMP      	143 ; PC := 143
	112	[2855]	GETGLOBAL	R15 K43 ; R15 := 0x6c97a788
	113	[2855]	GETTABLE 	R15 R15 K44 ; R15 := R15[0x171c56bf]
	114	[2855]	CALL     	R15 1 2 ; R15 := R15()
	115	[2856]	SELF     	R16 R13 K45 ; R17 := R13; R16 := R13[0xf278f8a1]
	116	[2856]	CALL     	R16 2 2 ; R16 := R16(R17)
	117	[2857]	LOADK    	R17 K46 ; R17 := ""
	118	[2859]	SETTABLE 	R15 K2 R16 ; R15["mItemType"] := R16
	119	[2860]	GETTABLE 	R18 R15 K4 ; R18 := R15["mItemId"]
	120	[2860]	SETTABLE 	R18 K5 R17 ; R18["mId"] := R17
	121	[2862]	NEWTABLE 	R18 0 8 ; R18 := {}
	122	[2862]	SETTABLE 	R18 K0 R16 ; R18["ItemType"] := R16
	123	[2862]	SETTABLE 	R18 K6 R13 ; R18["mStoreItem"] := R13
	124	[2862]	GETGLOBAL	R19 K13 ; R19 := 0xae91e43b
	125	[2862]	SELF     	R19 R19 K14 ; R20 := R19; R19 := R19[0x42b04007]
	126	[2862]	GETGLOBAL	R21 K48 ; R21 := 0x64fb1586
	127	[2862]	SELF     	R22 R13 K15 ; R23 := R13; R22 := R13[0xd3a9d01f]
	128	[2862]	CALL     	R22 2 0 ; R22,... := R22(R23)
	129	[2862]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	130	[2862]	OP_LOADBOOL	R22 0 0 ; R22 := false
	131	[2862]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	132	[2862]	SETTABLE 	R18 K47 R19 ; R18["Name"] := R19
	133	[2862]	SETTABLE 	R18 K3 R17 ; R18["UID"] := R17
	134	[2862]	SETTABLE 	R18 K49 K50 ; R18["Xp"] := 0.000000
	135	[2862]	SETTABLE 	R18 K1 R15 ; R18["Item"] := R15
	136	[2862]	SETTABLE 	R18 K51 K52 ; R18["ItemCount"] := 1.000000
	137	[2862]	SETTABLE 	R18 K53 K54 ; R18["AlwaysAvailable"] := true
	138	[2863]	GETGLOBAL	R19 K32 ; R19 := 0x33bdd652
	139	[2863]	GETTABLE 	R19 R19 K33 ; R19 := R19[0x23d5322f]
	140	[2863]	GETTABLE 	R20 R0 K27 ; R20 := R0["AlwaysAvailableItems"]
	141	[2863]	MOVE     	R21 R18 ; R21 := R18
	142	[2863]	CALL     	R19 3 1 ; R19(R20,R21)
	143	[2847]	FORLOOP  	R9 90 ; R9 += R11; if R9 <= R10 then begin PC := 90; R12 := R9 end
	144	[2866]	RETURN   	R0 1 ; return 

function #73 <?:2868,2882> (22 instructions, 88 bytes at 000002111F0161F0)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[2871]	GETTABLE 	R2 R0 K0 ; R2 := R0["Slot"]
	2	[2871]	EQ       	0 R2 K2 ; if R2 ~= 0.000000 then PC := 17
	3	[2871]	JMP      	17 ; PC := 17
	4	[2872]	GETTABLE 	R2 R0 K3 ; R2 := R0["Hand"]
	5	[2872]	EQ       	0 R2 K2 ; if R2 ~= 0.000000 then PC := 12
	6	[2872]	JMP      	12 ; PC := 12
	7	[2873]	GETGLOBAL	R2 K5 ; R2 := mShipSuit
	8	[2873]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xb6ef303c]
	9	[2873]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[2873]	MOVE     	R1 R2 ; R1 := R2
	11	[2873]	JMP      	21 ; PC := 21
	12	[2875]	GETGLOBAL	R2 K5 ; R2 := mShipSuit
	13	[2875]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x5ed1d978]
	14	[2875]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[2875]	MOVE     	R1 R2 ; R1 := R2
	16	[2876]	JMP      	21 ; PC := 21
	17	[2878]	GETGLOBAL	R2 K5 ; R2 := mShipSuit
	18	[2878]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x7ce48d19]
	19	[2878]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[2878]	MOVE     	R1 R2 ; R1 := R2
	21	[2881]	RETURN   	R1 2 ; return R1 
	22	[2882]	RETURN   	R0 1 ; return 

function #74 <?:2884,3020> (84 instructions, 336 bytes at 000002111F016280)
0 params, 8 slots, 11 upvalues, 0 locals, 32 constants, 6 functions
	1	[2885]	LOADK    	R0 K0 ; R0 := "TopLeftContainer.Equipment"
	2	[2886]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[2886]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	4	[2886]	MOVE     	R3 R0 ; R3 := R0
	5	[2886]	LOADK    	R4 := 11.000000
	6	[2886]	OP_LOADBOOL	R5 0 0 ; R5 := false
	7	[2886]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	8	[2887]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	9	[2887]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	10	[2887]	LOADK    	R3 K3 ; R3 := "BottomRightContainer.Stats"
	11	[2887]	LOADK    	R4 := 11.000000
	12	[2887]	OP_LOADBOOL	R5 0 0 ; R5 := false
	13	[2887]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	14	[2888]	GETGLOBAL	R1 K4 ; R1 := 0x2d0fad09
	15	[2888]	LOADK    	R2 K5 ; R2 := "EE.Interface.Components.List"
	16	[2888]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[2889]	GETTABLE 	R2 R1 K7 ; R2 := R1[0x9383bc56]
	18	[2889]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	19	[2889]	MOVE     	R4 R0 ; R4 := R0
	20	[2889]	LOADK    	R5 K8 ; R5 := ".Section1"
	21	[2889]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	22	[2889]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[2889]	SETGLOBALHASH	R2 K6 ; mEquipment := R2
	24	[2890]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	25	[2890]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x1e5b5cfe]
	26	[2890]	LOADK    	R4 K10 ; R4 := "EquipmentSelected"
	27	[2890]	LOADK    	R5 K11 ; R5 := "EquipmentFocused"
	28	[2890]	LOADK    	R6 K12 ; R6 := "EquipmentUnfocused"
	29	[2890]	LOADK    	R7 K13 ; R7 := "EquipmentPressed"
	30	[2890]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	31	[2891]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	32	[2891]	SETTABLE 	R2 K14 K15 ; R2["mElementTransitionTime"] := 0.150000
	33	[2892]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	34	[2892]	SETTABLE 	R2 K16 K17 ; R2["mInitialDepth"] := 5000.000000
	35	[2893]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	36	[2893]	SETTABLE 	R2 K18 K19 ; R2["mForcedVerticalSeparation"] := 130.000000
	37	[2894]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	38	[2894]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	39	[2894]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x91a24e4b]
	40	[2894]	GETGLOBAL	R5 K6 ; R5 := mEquipment
	41	[2894]	GETTABLE 	R5 R5 K22 ; R5 := R5["mClipName"]
	42	[2894]	LOADK    	R6 K23 ; R6 := ".SectionIcon"
	43	[2894]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	44	[2894]	LOADK    	R6 := 1.000000
	45	[2894]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	46	[2894]	SETTABLE 	R2 K20 R3 ; R2["mInitialIconY"] := R3
	47	[2895]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	48	[2910]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	49	[2910]	GETUPVAL 	R0 U0 ; R0 := U0
	50	[2910]	SETTABLE 	R2 K24 R3 ; R2["UpdateFocusedColors"] := R3
	51	[2911]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	52	[2958]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	53	[2958]	GETUPVAL 	R0 U0 ; R0 := U0
	54	[2958]	SETTABLE 	R2 K25 R3 ; R2["mElementDrawCallback"] := R3
	55	[2959]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	56	[2961]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	57	[2961]	SETTABLE 	R2 K26 R3 ; R2["SetupPreInterpolationValues"] := R3
	58	[2962]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	59	[2962]	GETGLOBAL	R3 K6 ; R3 := mEquipment
	60	[2962]	GETTABLE 	R3 R3 K28 ; R3 := R3["DefaultAlphaInterpolation"]
	61	[2962]	SETTABLE 	R2 K27 R3 ; R2["GetInterpolationProperties"] := R3
	62	[2963]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	63	[3003]	CLOSURE  	R3 3 ; R3 := closure(Function #4)
	64	[3003]	GETUPVAL 	R0 U0 ; R0 := U0
	65	[3003]	GETUPVAL 	R0 U1 ; R0 := U1
	66	[3003]	GETUPVAL 	R0 U2 ; R0 := U2
	67	[3003]	GETUPVAL 	R0 U3 ; R0 := U3
	68	[3003]	GETUPVAL 	R0 U4 ; R0 := U4
	69	[3003]	GETUPVAL 	R0 U5 ; R0 := U5
	70	[3003]	GETUPVAL 	R0 U6 ; R0 := U6
	71	[3003]	GETUPVAL 	R0 U7 ; R0 := U7
	72	[3003]	GETUPVAL 	R0 U8 ; R0 := U8
	73	[3003]	GETUPVAL 	R0 U9 ; R0 := U9
	74	[3003]	SETTABLE 	R2 K29 R3 ; R2[0x05000036] := R3
	75	[3004]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	76	[3011]	CLOSURE  	R3 4 ; R3 := closure(Function #5)
	77	[3011]	GETUPVAL 	R0 U1 ; R0 := U1
	78	[3011]	SETTABLE 	R2 K30 R3 ; R2["mOnUnfocusedCallback"] := R3
	79	[3012]	GETGLOBAL	R2 K6 ; R2 := mEquipment
	80	[3019]	CLOSURE  	R3 5 ; R3 := closure(Function #6)
	81	[3019]	GETUPVAL 	R0 U0 ; R0 := U0
	82	[3019]	GETUPVAL 	R0 U10 ; R0 := U10
	83	[3019]	SETTABLE 	R2 K31 R3 ; R2["mOnSelectedCallback"] := R3
	84	[3020]	RETURN   	R0 1 ; return 

function #75 <?:3022,3072> (79 instructions, 316 bytes at 0000021135792130)
0 params, 6 slots, 5 upvalues, 0 locals, 31 constants, 1 function
	1	[3023]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[3023]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7c09c373]
	3	[3023]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[3023]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[3023]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[3025]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	7	[3025]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3025]	GETTABLE 	R1 R1 K3 ; R1 := R1["EQUIP_INV"]
	9	[3025]	SETTABLE 	R0 K2 R1 ; R0["mOnSelectedState"] := R1
	10	[3026]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	11	[3026]	SETTABLE 	R0 K4 K6 ; R0["mProductCategory"] := 46.000000
	12	[3028]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	13	[3028]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	14	[3028]	NEWTABLE 	R2 0 3 ; R2 := {}
	15	[3028]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	16	[3028]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/BonusShields"
	17	[3028]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3028]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	19	[3028]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	20	[3028]	SETTABLE 	R2 K11 K12 ; R2["MoverTime"] := 0.238000
	21	[3028]	SETTABLE 	R2 K13 K15 ; R2["mSlot"] := 7.000000
	22	[3028]	OP_LOADBOOL	R3 1 0 ; R3 := true
	23	[3028]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	24	[3029]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	25	[3029]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	26	[3029]	NEWTABLE 	R2 0 3 ; R2 := {}
	27	[3029]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	28	[3029]	LOADK    	R4 K16 ; R4 := "/Lotus/Language/Railjack/BonusEngine"
	29	[3029]	NEWTABLE 	R5 0 0 ; R5 := {}
	30	[3029]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	31	[3029]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	32	[3029]	SETTABLE 	R2 K11 K17 ; R2["MoverTime"] := 0.350000
	33	[3029]	SETTABLE 	R2 K13 K18 ; R2["mSlot"] := 8.000000
	34	[3029]	OP_LOADBOOL	R3 1 0 ; R3 := true
	35	[3029]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	36	[3030]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	37	[3030]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	38	[3030]	NEWTABLE 	R2 0 3 ; R2 := {}
	39	[3030]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	40	[3030]	LOADK    	R4 K19 ; R4 := "/Lotus/Language/Railjack/HullMaterials"
	41	[3030]	NEWTABLE 	R5 0 0 ; R5 := {}
	42	[3030]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[3030]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	44	[3030]	SETTABLE 	R2 K11 K20 ; R2["MoverTime"] := 0.450000
	45	[3030]	SETTABLE 	R2 K13 K21 ; R2["mSlot"] := 10.000000
	46	[3030]	OP_LOADBOOL	R3 1 0 ; R3 := true
	47	[3030]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	48	[3031]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	49	[3031]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	50	[3031]	NEWTABLE 	R2 0 4 ; R2 := {}
	51	[3031]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	52	[3031]	LOADK    	R4 K22 ; R4 := "/Lotus/Language/Railjack/ReactorName"
	53	[3031]	NEWTABLE 	R5 0 0 ; R5 := {}
	54	[3031]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	55	[3031]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	56	[3031]	SETTABLE 	R2 K11 K23 ; R2["MoverTime"] := 0.500000
	57	[3031]	SETTABLE 	R2 K13 K24 ; R2["mSlot"] := 9.000000
	58	[3031]	GETUPVAL 	R3 U1 ; R3 := U1
	59	[3031]	SETTABLE 	R2 K25 R3 ; R2["CameraSpot"] := R3
	60	[3031]	OP_LOADBOOL	R3 1 0 ; R3 := true
	61	[3031]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	62	[3033]	GETGLOBAL	R0 K26 ; R0 := mShipSuit
	63	[3033]	SELF     	R0 R0 K27 ; R1 := R0; R0 := R0[0x0ad758cb]
	64	[3033]	CALL     	R0 2 2 ; R0 := R0(R1)
	65	[3033]	SUB      	R0 R0 K28 ; R0 := R0 - 1.000000
	66	[3034]	GETGLOBAL	R1 K0 ; R1 := mEquipment
	67	[3034]	SELF     	R1 R1 K29 ; R2 := R1; R1 := R1[0xea061e98]
	68	[3069]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	69	[3069]	MOVE     	R0 R0 ; R0 := R0
	70	[3069]	GETUPVAL 	R0 U2 ; R0 := U2
	71	[3069]	GETUPVAL 	R0 U3 ; R0 := U3
	72	[3069]	GETUPVAL 	R0 U4 ; R0 := U4
	73	[3034]	CALL     	R1 3 1 ; R1(R2,R3)
	74	[3071]	GETGLOBAL	R1 K0 ; R1 := mEquipment
	75	[3071]	SELF     	R1 R1 K30 ; R2 := R1; R1 := R1[0x71e9ac81]
	76	[3071]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	77	[3071]	OP_LOADBOOL	R5 1 0 ; R5 := true
	78	[3071]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	79	[3072]	RETURN   	R0 1 ; return 

function #76 <?:3074,3091> (69 instructions, 276 bytes at 000002111BC73210)
0 params, 6 slots, 2 upvalues, 0 locals, 30 constants, 1 function
	1	[3075]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[3075]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7c09c373]
	3	[3075]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[3075]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[3075]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[3077]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	7	[3077]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3077]	GETTABLE 	R1 R1 K3 ; R1 := R1["WEAPON_INV"]
	9	[3077]	SETTABLE 	R0 K2 R1 ; R0["mOnSelectedState"] := R1
	10	[3078]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	11	[3078]	SETTABLE 	R0 K4 K6 ; R0["mProductCategory"] := 43.000000
	12	[3080]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	13	[3080]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	14	[3080]	NEWTABLE 	R2 0 5 ; R2 := {}
	15	[3080]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	16	[3080]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/Pilot"
	17	[3080]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3080]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	19	[3080]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	20	[3080]	SETTABLE 	R2 K11 K12 ; R2["MoverTime"] := 0.000000
	21	[3080]	SETTABLE 	R2 K13 K12 ; R2["Hand"] := 0.000000
	22	[3080]	SETTABLE 	R2 K14 K12 ; R2["Slot"] := 0.000000
	23	[3080]	SETTABLE 	R2 K16 K17 ; R2["Required"] := true
	24	[3080]	OP_LOADBOOL	R3 1 0 ; R3 := true
	25	[3080]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	26	[3081]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	27	[3081]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	28	[3081]	NEWTABLE 	R2 0 5 ; R2 := {}
	29	[3081]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	30	[3081]	LOADK    	R4 K18 ; R4 := "/Lotus/Language/Railjack/Turret"
	31	[3081]	NEWTABLE 	R5 0 0 ; R5 := {}
	32	[3081]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	33	[3081]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	34	[3081]	SETTABLE 	R2 K11 K19 ; R2["MoverTime"] := 0.325000
	35	[3081]	SETTABLE 	R2 K13 K20 ; R2["Hand"] := 1.000000
	36	[3081]	SETTABLE 	R2 K14 K12 ; R2["Slot"] := 0.000000
	37	[3081]	SETTABLE 	R2 K16 K17 ; R2["Required"] := true
	38	[3081]	OP_LOADBOOL	R3 1 0 ; R3 := true
	39	[3081]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	40	[3082]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	41	[3082]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbad4316f]
	42	[3082]	NEWTABLE 	R2 0 5 ; R2 := {}
	43	[3082]	GETGLOBAL	R3 K9 ; R3 := 0x603636ad
	44	[3082]	LOADK    	R4 K21 ; R4 := "/Lotus/Language/Railjack/Ordinance"
	45	[3082]	NEWTABLE 	R5 0 0 ; R5 := {}
	46	[3082]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	47	[3082]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	48	[3082]	SETTABLE 	R2 K11 K22 ; R2["MoverTime"] := 0.500000
	49	[3082]	SETTABLE 	R2 K13 K12 ; R2["Hand"] := 0.000000
	50	[3082]	SETTABLE 	R2 K14 K23 ; R2["Slot"] := 2.000000
	51	[3082]	SETTABLE 	R2 K16 K17 ; R2["Required"] := true
	52	[3082]	OP_LOADBOOL	R3 1 0 ; R3 := true
	53	[3082]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	54	[3084]	GETGLOBAL	R0 K25 ; R0 := 0x25d99d89
	55	[3084]	SELF     	R0 R0 K26 ; R1 := R0; R0 := R0[0x62c81b76]
	56	[3084]	CALL     	R0 2 2 ; R0 := R0(R1)
	57	[3084]	GETTABLE 	R0 R0 K27 ; R0 := R0["mCrewShipLoadOut"]
	58	[3084]	SETGLOBALHASH	R0 K24 ; mCurrentLoadout := R0
	59	[3085]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	60	[3085]	SELF     	R0 R0 K28 ; R1 := R0; R0 := R0[0xea061e98]
	61	[3088]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	62	[3088]	GETUPVAL 	R0 U1 ; R0 := U1
	63	[3085]	CALL     	R0 3 1 ; R0(R1,R2)
	64	[3090]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	65	[3090]	SELF     	R0 R0 K29 ; R1 := R0; R0 := R0[0x71e9ac81]
	66	[3090]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	67	[3090]	OP_LOADBOOL	R4 1 0 ; R4 := true
	68	[3090]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	69	[3091]	RETURN   	R0 1 ; return 

function #77 <?:3093,3112> (82 instructions, 328 bytes at 0000021136A1FF30)
0 params, 6 slots, 2 upvalues, 0 locals, 27 constants, 1 function
	1	[3094]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	2	[3094]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7c09c373]
	3	[3094]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[3094]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[3094]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[3096]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	7	[3096]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3096]	GETTABLE 	R1 R1 K3 ; R1 := R1["ARCH_INV"]
	9	[3096]	SETTABLE 	R0 K2 R1 ; R0["mOnSelectedState"] := R1
	10	[3097]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	11	[3097]	SETTABLE 	R0 K4 K5 ; R0["mProductCategory"] := nil
	12	[3099]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	13	[3099]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	14	[3099]	NEWTABLE 	R2 0 1 ; R2 := {}
	15	[3099]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	16	[3099]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/Loadout/Archwing_Wings"
	17	[3099]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3099]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	19	[3099]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	20	[3099]	OP_LOADBOOL	R3 1 0 ; R3 := true
	21	[3099]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	22	[3100]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	23	[3100]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	24	[3100]	NEWTABLE 	R2 0 1 ; R2 := {}
	25	[3100]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	26	[3100]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/BonusEngine"
	27	[3100]	NEWTABLE 	R5 0 0 ; R5 := {}
	28	[3100]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	29	[3100]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	30	[3100]	OP_LOADBOOL	R3 1 0 ; R3 := true
	31	[3100]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	32	[3101]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	33	[3101]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	34	[3101]	NEWTABLE 	R2 0 1 ; R2 := {}
	35	[3101]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	36	[3101]	LOADK    	R4 K11 ; R4 := "/Lotus/Language/Railjack/ReactorName"
	37	[3101]	NEWTABLE 	R5 0 0 ; R5 := {}
	38	[3101]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	39	[3101]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	40	[3101]	OP_LOADBOOL	R3 1 0 ; R3 := true
	41	[3101]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	42	[3102]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	43	[3102]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	44	[3102]	NEWTABLE 	R2 0 4 ; R2 := {}
	45	[3102]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	46	[3102]	LOADK    	R4 K12 ; R4 := "/Lotus/Language/Menu/Loadout_SpaceGun"
	47	[3102]	NEWTABLE 	R5 0 0 ; R5 := {}
	48	[3102]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	49	[3102]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	50	[3102]	SETTABLE 	R2 K13 K15 ; R2["LoadOutType"] := 2.000000
	51	[3102]	SETTABLE 	R2 K16 K15 ; R2["Slot"] := 2.000000
	52	[3102]	SETTABLE 	R2 K4 K18 ; R2["mProductCategory"] := 28.000000
	53	[3102]	OP_LOADBOOL	R3 1 0 ; R3 := true
	54	[3102]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	55	[3103]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	56	[3103]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbad4316f]
	57	[3103]	NEWTABLE 	R2 0 4 ; R2 := {}
	58	[3103]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	59	[3103]	LOADK    	R4 K19 ; R4 := "/Lotus/Language/Menu/Loadout_SpaceMelee"
	60	[3103]	NEWTABLE 	R5 0 0 ; R5 := {}
	61	[3103]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	62	[3103]	SETTABLE 	R2 K7 R3 ; R2["Name"] := R3
	63	[3103]	SETTABLE 	R2 K13 K15 ; R2["LoadOutType"] := 2.000000
	64	[3103]	SETTABLE 	R2 K16 K20 ; R2["Slot"] := 3.000000
	65	[3103]	SETTABLE 	R2 K4 K21 ; R2["mProductCategory"] := 29.000000
	66	[3103]	OP_LOADBOOL	R3 1 0 ; R3 := true
	67	[3103]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	68	[3105]	GETGLOBAL	R0 K23 ; R0 := 0x25d99d89
	69	[3105]	SELF     	R0 R0 K24 ; R1 := R0; R0 := R0[0x62c81b76]
	70	[3105]	CALL     	R0 2 2 ; R0 := R0(R1)
	71	[3105]	SETGLOBALHASH	R0 K22 ; mCurrentLoadout := R0
	72	[3106]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	73	[3106]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0xea061e98]
	74	[3109]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	75	[3109]	GETUPVAL 	R0 U1 ; R0 := U1
	76	[3106]	CALL     	R0 3 1 ; R0(R1,R2)
	77	[3111]	GETGLOBAL	R0 K0 ; R0 := mEquipment
	78	[3111]	SELF     	R0 R0 K26 ; R1 := R0; R0 := R0[0x71e9ac81]
	79	[3111]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	80	[3111]	OP_LOADBOOL	R4 1 0 ; R4 := true
	81	[3111]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	82	[3112]	RETURN   	R0 1 ; return 

function #78 <?:3114,3168> (155 instructions, 620 bytes at 00000211342A4900)
1 param, 12 slots, 0 upvalues, 0 locals, 18 constants, 1 function
	1	[3115]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[3115]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xa7ec3e8a]
	3	[3115]	MOVE     	R3 R0 ; R3 := R0
	4	[3115]	LOADK    	R4 K2 ; R4 := ".WarningIcon"
	5	[3115]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	6	[3115]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	7	[3115]	TEST     	R1 0 ; if not R1 then PC := 10
	8	[3115]	JMP      	10 ; PC := 10
	9	[3116]	RETURN   	R0 1 ; return 
	10	[3119]	GETGLOBAL	R1 K3 ; R1 := 0x38f10e85
	11	[3119]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	12	[3119]	MOVE     	R3 R0 ; R3 := R0
	13	[3119]	LOADK    	R4 K4 ; R4 := ".Icon.duplicateMovieClip"
	14	[3119]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	15	[3119]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	16	[3119]	LOADK    	R5 := 1000.000000
	17	[3119]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	18	[3120]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	19	[3120]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x1cb415c1]
	20	[3120]	MOVE     	R3 R0 ; R3 := R0
	21	[3120]	LOADK    	R4 K2 ; R4 := ".WarningIcon"
	22	[3120]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	23	[3120]	GETGLOBAL	R4 K7 ; R4 := 0x4903feff
	24	[3120]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	25	[3121]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	26	[3121]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	27	[3121]	MOVE     	R3 R0 ; R3 := R0
	28	[3121]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	29	[3121]	LOADK    	R5 := 10.000000
	30	[3121]	LOADK    	R6 := 0.000000
	31	[3121]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	32	[3122]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	33	[3122]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	34	[3122]	MOVE     	R3 R0 ; R3 := R0
	35	[3122]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	36	[3122]	LOADK    	R5 := 0.000000
	37	[3122]	LOADK    	R6 := 16.000000
	38	[3122]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	39	[3123]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	40	[3123]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	41	[3123]	MOVE     	R3 R0 ; R3 := R0
	42	[3123]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	43	[3123]	LOADK    	R5 := 1.000000
	44	[3123]	LOADK    	R6 := 12.000000
	45	[3123]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	46	[3124]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	47	[3124]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	48	[3124]	MOVE     	R3 R0 ; R3 := R0
	49	[3124]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	50	[3124]	LOADK    	R5 := 12.000000
	51	[3124]	LOADK    	R6 := 24.000000
	52	[3124]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	53	[3125]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	54	[3125]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	55	[3125]	MOVE     	R3 R0 ; R3 := R0
	56	[3125]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	57	[3125]	LOADK    	R5 := 13.000000
	58	[3125]	LOADK    	R6 := 24.000000
	59	[3125]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	60	[3126]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	61	[3126]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	62	[3126]	MOVE     	R3 R0 ; R3 := R0
	63	[3126]	LOADK    	R4 K5 ; R4 := "WarningIcon"
	64	[3126]	LOADK    	R5 := 9.000000
	65	[3126]	GETGLOBAL	R6 K9 ; R6 := mColors
	66	[3126]	GETTABLE 	R6 R6 K10 ; R6 := R6["FloatingContentHighlight"]
	67	[3126]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	68	[3128]	GETGLOBAL	R1 K3 ; R1 := 0x38f10e85
	69	[3128]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	70	[3128]	MOVE     	R3 R0 ; R3 := R0
	71	[3128]	LOADK    	R4 K4 ; R4 := ".Icon.duplicateMovieClip"
	72	[3128]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	73	[3128]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	74	[3128]	LOADK    	R5 := 999.000000
	75	[3128]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	76	[3129]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	77	[3129]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x1cb415c1]
	78	[3129]	MOVE     	R3 R0 ; R3 := R0
	79	[3129]	LOADK    	R4 K12 ; R4 := ".WarningShadow"
	80	[3129]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	81	[3129]	GETGLOBAL	R4 K13 ; R4 := 0xcb3f5e0a
	82	[3129]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	83	[3130]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	84	[3130]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	85	[3130]	MOVE     	R3 R0 ; R3 := R0
	86	[3130]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	87	[3130]	LOADK    	R5 := 10.000000
	88	[3130]	LOADK    	R6 := 0.000000
	89	[3130]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	90	[3131]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	91	[3131]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	92	[3131]	MOVE     	R3 R0 ; R3 := R0
	93	[3131]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	94	[3131]	LOADK    	R5 := 0.000000
	95	[3131]	LOADK    	R6 := 16.000000
	96	[3131]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	97	[3132]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	98	[3132]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	99	[3132]	MOVE     	R3 R0 ; R3 := R0
	100	[3132]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	101	[3132]	LOADK    	R5 := 1.000000
	102	[3132]	LOADK    	R6 := 12.000000
	103	[3132]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	104	[3133]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	105	[3133]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	106	[3133]	MOVE     	R3 R0 ; R3 := R0
	107	[3133]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	108	[3133]	LOADK    	R5 := 12.000000
	109	[3133]	LOADK    	R6 := 30.000000
	110	[3133]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	111	[3134]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	112	[3134]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	113	[3134]	MOVE     	R3 R0 ; R3 := R0
	114	[3134]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	115	[3134]	LOADK    	R5 := 13.000000
	116	[3134]	LOADK    	R6 := 30.000000
	117	[3134]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	118	[3135]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	119	[3135]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf64b7262]
	120	[3135]	MOVE     	R3 R0 ; R3 := R0
	121	[3135]	LOADK    	R4 K11 ; R4 := "WarningShadow"
	122	[3135]	LOADK    	R5 := 9.000000
	123	[3135]	GETGLOBAL	R6 K9 ; R6 := mColors
	124	[3135]	GETTABLE 	R6 R6 K14 ; R6 := R6["Background1"]
	125	[3135]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	126	[3137]	LOADK    	R1 := 50.000000
	127	[3138]	LOADK    	R2 := 100.000000
	128	[3139]	SUB      	R3 R2 R1 ; R3 := R2 - R1
	129	[3139]	DIV      	R3 R3 K15 ; R3 := R3 / 2.000000
	130	[3139]	ADD      	R3 R3 R1 ; R3 := R3 + R1
	131	[3140]	LOADK    	R4 := 40.000000
	132	[3141]	LOADK    	R5 := 80.000000
	133	[3142]	SUB      	R6 R5 R4 ; R6 := R5 - R4
	134	[3142]	DIV      	R6 R6 K15 ; R6 := R6 / 2.000000
	135	[3142]	ADD      	R6 R6 R4 ; R6 := R6 + R4
	136	[3144]	LOADK    	R7 := 0.500000
	137	[3145]	LOADK    	R8 K16 ; R8 := 0.100000
	138	[3146]	LOADK    	R9 K17 ; R9 := 0.300000
	139	[3148]	DIV      	R7 R7 K15 ; R7 := R7 / 2.000000
	140	[3149]	LOADNIL  	R10 R10 ; R10 := nil
	141	[3166]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	142	[3166]	MOVE     	R0 R0 ; R0 := R0
	143	[3166]	MOVE     	R0 R3 ; R0 := R3
	144	[3166]	MOVE     	R0 R7 ; R0 := R7
	145	[3166]	MOVE     	R0 R8 ; R0 := R8
	146	[3166]	MOVE     	R0 R6 ; R0 := R6
	147	[3166]	MOVE     	R0 R2 ; R0 := R2
	148	[3166]	MOVE     	R0 R5 ; R0 := R5
	149	[3166]	MOVE     	R0 R9 ; R0 := R9
	150	[3166]	MOVE     	R0 R1 ; R0 := R1
	151	[3166]	MOVE     	R0 R4 ; R0 := R4
	152	[3166]	MOVE     	R0 R10 ; R0 := R10
	153	[3167]	MOVE     	R11 R10 ; R11 := R10
	154	[3167]	CALL     	R11 1 1 ; R11()
	155	[3168]	RETURN   	R0 1 ; return 

function #79 <?:3170,3197> (124 instructions, 496 bytes at 0000021113E12F60)
8 params, 19 slots, 2 upvalues, 0 locals, 21 constants, 0 functions
	1	[3171]	OP_LOADBOOL	R8 0 0 ; R8 := false
	2	[3172]	EQ       	1 R5 K0 ; if R5 == nil then PC := 28
	3	[3172]	JMP      	28 ; PC := 28
	4	[3173]	SUB      	R9 R5 R7 ; R9 := R5 - R7
	5	[3173]	LT       	1 R9 R3 ; if R9 < R3 then PC := 8
	6	[3173]	JMP      	8 ; PC := 8
	7	[3173]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 8
	8	[3173]	OP_LOADBOOL	R8 1 0 ; R8 := true
	9	[3174]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	10	[3174]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0xe261aa96]
	11	[3174]	MOVE     	R11 R0 ; R11 := R0
	12	[3174]	LOADK    	R12 K3 ; R12 := "Name"
	13	[3174]	LOADK    	R13 := 29.000000
	14	[3174]	GETUPVAL 	R14 U0 ; R14 := U0
	15	[3174]	GETTABLE 	R14 R14 K4 ; R14 := R14[0x1142c7a8]
	16	[3174]	MOVE     	R15 R3 ; R15 := R3
	17	[3174]	LOADK    	R16 := 0.000000
	18	[3174]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	19	[3174]	LOADK    	R15 K5 ; R15 := "/"
	20	[3174]	GETUPVAL 	R16 U0 ; R16 := U0
	21	[3174]	GETTABLE 	R16 R16 K4 ; R16 := R16[0x1142c7a8]
	22	[3174]	MOVE     	R17 R5 ; R17 := R5
	23	[3174]	LOADK    	R18 := 0.000000
	24	[3174]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	25	[3174]	CONCAT   	R14 R14 R16 ; R14 := R14 .. R15 .. R16
	26	[3174]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	27	[3174]	JMP      	39 ; PC := 39
	28	[3176]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	29	[3176]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0xe261aa96]
	30	[3176]	MOVE     	R11 R0 ; R11 := R0
	31	[3176]	LOADK    	R12 K3 ; R12 := "Name"
	32	[3176]	LOADK    	R13 := 29.000000
	33	[3176]	GETUPVAL 	R14 U0 ; R14 := U0
	34	[3176]	GETTABLE 	R14 R14 K4 ; R14 := R14[0x1142c7a8]
	35	[3176]	MOVE     	R15 R3 ; R15 := R3
	36	[3176]	LOADK    	R16 := 0.000000
	37	[3176]	CALL     	R14 3 0 ; R14,... := R14(R15,R16)
	38	[3176]	CALL     	R9 0 1 ; R9(R10,...)
	39	[3179]	TEST     	R2 0 ; if not R2 then PC := 86
	40	[3179]	JMP      	86 ; PC := 86
	41	[3180]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	42	[3180]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	43	[3180]	MOVE     	R11 R0 ; R11 := R0
	44	[3180]	LOADK    	R12 K3 ; R12 := "Name"
	45	[3180]	LOADK    	R13 := 76.000000
	46	[3180]	GETGLOBAL	R14 K7 ; R14 := mColors
	47	[3180]	GETTABLE 	R14 R14 K8 ; R14 := R14["Background1"]
	48	[3180]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	49	[3181]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	50	[3181]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	51	[3181]	MOVE     	R11 R0 ; R11 := R0
	52	[3181]	LOADK    	R12 K3 ; R12 := "Name"
	53	[3181]	LOADK    	R13 := 36.000000
	54	[3181]	GETGLOBAL	R14 K7 ; R14 := mColors
	55	[3181]	GETTABLE 	R14 R14 K9 ; R14 := R14["FloatingContentHighlight"]
	56	[3181]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	57	[3182]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	58	[3182]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	59	[3182]	MOVE     	R11 R0 ; R11 := R0
	60	[3182]	LOADK    	R12 K10 ; R12 := "Icon"
	61	[3182]	LOADK    	R13 := 9.000000
	62	[3182]	GETGLOBAL	R14 K7 ; R14 := mColors
	63	[3182]	GETTABLE 	R14 R14 K11 ; R14 := R14["FloatingContent"]
	64	[3182]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	65	[3183]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	66	[3183]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	67	[3183]	MOVE     	R11 R0 ; R11 := R0
	68	[3183]	LOADK    	R12 K10 ; R12 := "Icon"
	69	[3183]	LOADK    	R13 := 12.000000
	70	[3183]	MOVE     	R14 R6 ; R14 := R6
	71	[3183]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	72	[3184]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	73	[3184]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xf64b7262]
	74	[3184]	MOVE     	R11 R0 ; R11 := R0
	75	[3184]	LOADK    	R12 K10 ; R12 := "Icon"
	76	[3184]	LOADK    	R13 := 13.000000
	77	[3184]	MOVE     	R14 R6 ; R14 := R6
	78	[3184]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	79	[3185]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	80	[3185]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0x1cb415c1]
	81	[3185]	MOVE     	R11 R0 ; R11 := R0
	82	[3185]	LOADK    	R12 K13 ; R12 := ".Icon"
	83	[3185]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	84	[3185]	MOVE     	R12 R4 ; R12 := R4
	85	[3185]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	86	[3188]	TEST     	R8 0 ; if not R8 then PC := 92
	87	[3188]	JMP      	92 ; PC := 92
	88	[3189]	GETUPVAL 	R9 U1 ; R9 := U1
	89	[3189]	MOVE     	R10 R0 ; R10 := R0
	90	[3189]	CALL     	R9 2 1 ; R9(R10)
	91	[3189]	JMP      	124 ; PC := 124
	92	[3191]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	93	[3191]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0xaf5300dc]
	94	[3191]	MOVE     	R11 R0 ; R11 := R0
	95	[3191]	LOADK    	R12 K15 ; R12 := ".WarningIcon"
	96	[3191]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	97	[3191]	CALL     	R9 3 1 ; R9(R10,R11)
	98	[3192]	GETGLOBAL	R9 K16 ; R9 := 0x38f10e85
	99	[3192]	GETGLOBAL	R10 K1 ; R10 := 0xae91e43b
	100	[3192]	MOVE     	R11 R0 ; R11 := R0
	101	[3192]	LOADK    	R12 K17 ; R12 := ".WarningIcon.removeMovieClip"
	102	[3192]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	103	[3192]	CALL     	R9 3 1 ; R9(R10,R11)
	104	[3193]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	105	[3193]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0xaf5300dc]
	106	[3193]	MOVE     	R11 R0 ; R11 := R0
	107	[3193]	LOADK    	R12 K18 ; R12 := ".WarningShadow"
	108	[3193]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	109	[3193]	CALL     	R9 3 1 ; R9(R10,R11)
	110	[3194]	GETGLOBAL	R9 K16 ; R9 := 0x38f10e85
	111	[3194]	GETGLOBAL	R10 K1 ; R10 := 0xae91e43b
	112	[3194]	MOVE     	R11 R0 ; R11 := R0
	113	[3194]	LOADK    	R12 K19 ; R12 := ".WarningShadow.removeMovieClip"
	114	[3194]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	115	[3194]	CALL     	R9 3 1 ; R9(R10,R11)
	116	[3195]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	117	[3195]	SELF     	R9 R9 K20 ; R10 := R9; R9 := R9[0x67bc869f]
	118	[3195]	MOVE     	R11 R0 ; R11 := R0
	119	[3195]	LOADK    	R12 K13 ; R12 := ".Icon"
	120	[3195]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	121	[3195]	LOADK    	R12 := 10.000000
	122	[3195]	LOADK    	R13 := 100.000000
	123	[3195]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	124	[3197]	RETURN   	R0 1 ; return 

function #80 <?:3199,3230> (156 instructions, 624 bytes at 000002112FBDCA70)
1 param, 19 slots, 3 upvalues, 0 locals, 48 constants, 0 functions
	1	[3200]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[3200]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x25a6e75e]
	3	[3200]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3201]	GETGLOBAL	R2 K2 ; R2 := 0xa94df70b
	5	[3201]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x99c4ef3a]
	6	[3201]	LOADK    	R4 := 43.000000
	7	[3201]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[3202]	SELF     	R3 R1 K5 ; R4 := R1; R3 := R1[0xdc039065]
	9	[3202]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[3202]	LEN      	R3 R3 ; R3 := # R3
	11	[3202]	SELF     	R4 R1 K6 ; R5 := R1; R4 := R1[0xbfba693e]
	12	[3202]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[3202]	LEN      	R4 R4 ; R4 := # R4
	14	[3202]	ADD      	R3 R3 R4 ; R3 := R3 + R4
	15	[3203]	GETUPVAL 	R4 U0 ; R4 := U0
	16	[3203]	LOADK    	R5 K7 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Components"
	17	[3203]	LOADK    	R6 K8 ; R6 := "/Lotus/Language/Railjack/ComponentsCapacity"
	18	[3203]	MOVE     	R7 R0 ; R7 := R0
	19	[3203]	MOVE     	R8 R3 ; R8 := R3
	20	[3203]	GETGLOBAL	R9 K9 ; R9 := 0xf00fa6bd
	21	[3203]	GETGLOBAL	R10 K0 ; R10 := 0x25d99d89
	22	[3203]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x25a6e75e]
	23	[3203]	CALL     	R10 2 2 ; R10 := R10(R11)
	24	[3203]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0xb8a2d888]
	25	[3203]	MOVE     	R12 R2 ; R12 := R2
	26	[3203]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	27	[3203]	ADD      	R10 R3 R10 ; R10 := R3 + R10
	28	[3203]	LOADK    	R11 := 46.000000
	29	[3203]	LOADK    	R12 := 1.000000
	30	[3203]	CALL     	R4 9 1 ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
	31	[3205]	SELF     	R4 R1 K11 ; R5 := R1; R4 := R1[0x64e44bdc]
	32	[3205]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[3205]	LEN      	R4 R4 ; R4 := # R4
	34	[3205]	SELF     	R5 R1 K12 ; R6 := R1; R5 := R1[0xe600a7f3]
	35	[3205]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[3205]	LEN      	R5 R5 ; R5 := # R5
	37	[3205]	ADD      	R3 R4 R5 ; R3 := R4 + R5
	38	[3206]	GETUPVAL 	R4 U0 ; R4 := U0
	39	[3206]	LOADK    	R5 K13 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Wreckage"
	40	[3206]	LOADK    	R6 K14 ; R6 := "/Lotus/Language/Railjack/WreckageCapacity"
	41	[3206]	MOVE     	R7 R0 ; R7 := R0
	42	[3206]	MOVE     	R8 R3 ; R8 := R3
	43	[3206]	GETGLOBAL	R9 K15 ; R9 := 0x1df5e886
	44	[3206]	GETUPVAL 	R10 U1 ; R10 := U1
	45	[3206]	LOADK    	R11 := 42.000000
	46	[3206]	LOADK    	R12 := 1.000000
	47	[3206]	CALL     	R4 9 1 ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
	48	[3208]	LOADK    	R3 := 0.000000
	49	[3209]	SELF     	R4 R1 K16 ; R5 := R1; R4 := R1[0xaea1cb86]
	50	[3209]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[3210]	LOADK    	R5 := 1.000000
	52	[3210]	LEN      	R6 R4 ; R6 := # R4
	53	[3210]	LOADK    	R7 := 1.000000
	54	[3210]	FORPREP  	R5 58 ; R5 -= R7; PC := 58
	55	[3211]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	56	[3211]	GETTABLE 	R9 R9 K17 ; R9 := R9["mItemCount"]
	57	[3211]	ADD      	R3 R3 R9 ; R3 := R3 + R9
	58	[3210]	FORLOOP  	R5 55 ; R5 += R7; if R5 <= R6 then begin PC := 55; R8 := R5 end
	59	[3213]	GETUPVAL 	R9 U0 ; R9 := U0
	60	[3213]	LOADK    	R10 K18 ; R10 := "TopLeftContainer.CurrencyBar.Display1.Unidentified"
	61	[3213]	LOADK    	R11 K14 ; R11 := "/Lotus/Language/Railjack/WreckageCapacity"
	62	[3213]	MOVE     	R12 R0 ; R12 := R0
	63	[3213]	MOVE     	R13 R3 ; R13 := R3
	64	[3213]	GETGLOBAL	R14 K19 ; R14 := 0x7accb9a0
	65	[3213]	LOADNIL  	R15 R15 ; R15 := nil
	66	[3213]	LOADK    	R16 := 42.000000
	67	[3213]	LOADK    	R17 := 5.000000
	68	[3213]	CALL     	R9 9 1 ; R9(R10,R11,R12,R13,R14,R15,R16,R17)
	69	[3215]	TEST     	R0 0 ; if not R0 then PC := 156
	70	[3215]	JMP      	156 ; PC := 156
	71	[3216]	GETUPVAL 	R9 U2 ; R9 := U2
	72	[3216]	GETTABLE 	R9 R9 K20 ; R9 := R9[0x8bcd12b6]
	73	[3216]	GETGLOBAL	R10 K21 ; R10 := mColors
	74	[3216]	GETTABLE 	R10 R10 K22 ; R10 := R10["Background1"]
	75	[3216]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[3217]	GETUPVAL 	R10 U2 ; R10 := U2
	77	[3217]	GETTABLE 	R10 R10 K20 ; R10 := R10[0x8bcd12b6]
	78	[3217]	GETGLOBAL	R11 K21 ; R11 := mColors
	79	[3217]	GETTABLE 	R11 R11 K23 ; R11 := R11["FloatingContent"]
	80	[3217]	CALL     	R10 2 2 ; R10 := R10(R11)
	81	[3218]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	82	[3218]	SELF     	R11 R11 K25 ; R12 := R11; R11 := R11[0xd5181643]
	83	[3218]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	84	[3218]	GETGLOBAL	R14 K27 ; R14 := 0xe992de15
	85	[3218]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	86	[3219]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	87	[3219]	SELF     	R11 R11 K28 ; R12 := R11; R11 := R11[0x91e13703]
	88	[3219]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	89	[3219]	LOADK    	R14 K29 ; R14 := "VisibilityCenter"
	90	[3219]	LOADK    	R15 := 0.500000
	91	[3219]	LOADK    	R16 := 0.000000
	92	[3219]	LOADK    	R17 := 0.000000
	93	[3219]	LOADK    	R18 := 0.000000
	94	[3219]	CALL     	R11 8 1 ; R11(R12,R13,R14,R15,R16,R17,R18)
	95	[3220]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	96	[3220]	SELF     	R11 R11 K28 ; R12 := R11; R11 := R11[0x91e13703]
	97	[3220]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	98	[3220]	LOADK    	R14 K30 ; R14 := "RectEdgeColor"
	99	[3220]	GETTABLE 	R15 R10 K31 ; R15 := R10["r"]
	100	[3220]	GETTABLE 	R16 R10 K32 ; R16 := R10["g"]
	101	[3220]	GETTABLE 	R17 R10 K33 ; R17 := R10["b"]
	102	[3220]	LOADK    	R18 K34 ; R18 := 0.300000
	103	[3220]	CALL     	R11 8 1 ; R11(R12,R13,R14,R15,R16,R17,R18)
	104	[3221]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	105	[3221]	SELF     	R11 R11 K28 ; R12 := R11; R11 := R11[0x91e13703]
	106	[3221]	LOADK    	R13 K26 ; R13 := "TopLeftContainer.CurrencyBar.Banner"
	107	[3221]	LOADK    	R14 K35 ; R14 := "RectInnerColor"
	108	[3221]	GETTABLE 	R15 R9 K31 ; R15 := R9["r"]
	109	[3221]	GETTABLE 	R16 R9 K32 ; R16 := R9["g"]
	110	[3221]	GETTABLE 	R17 R9 K33 ; R17 := R9["b"]
	111	[3221]	LOADK    	R18 K36 ; R18 := 0.700000
	112	[3221]	CALL     	R11 8 1 ; R11(R12,R13,R14,R15,R16,R17,R18)
	113	[3222]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	114	[3222]	SELF     	R11 R11 K37 ; R12 := R11; R11 := R11[0x67bc869f]
	115	[3222]	LOADK    	R13 K38 ; R13 := "TopLeftContainer.CurrencyBar.Display1.Capacity"
	116	[3222]	LOADK    	R14 := 9.000000
	117	[3222]	GETGLOBAL	R15 K21 ; R15 := mColors
	118	[3222]	GETTABLE 	R15 R15 K23 ; R15 := R15["FloatingContent"]
	119	[3222]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	120	[3223]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	121	[3223]	SELF     	R11 R11 K39 ; R12 := R11; R11 := R11[0x5f56eeab]
	122	[3223]	LOADK    	R13 K38 ; R13 := "TopLeftContainer.CurrencyBar.Display1.Capacity"
	123	[3223]	LOADK    	R14 := 29.000000
	124	[3223]	GETGLOBAL	R15 K40 ; R15 := 0x5f0788c4
	125	[3223]	GETGLOBAL	R16 K41 ; R16 := 0x603636ad
	126	[3223]	LOADK    	R17 K42 ; R17 := "/Lotus/Language/Menu/ModsCapacity"
	127	[3223]	NEWTABLE 	R18 0 0 ; R18 := {}
	128	[3223]	CALL     	R16 3 0 ; R16,... := R16(R17,R18)
	129	[3223]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	130	[3223]	LOADK    	R16 K43 ; R16 := ":"
	131	[3223]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	132	[3223]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	133	[3225]	GETGLOBAL	R11 K24 ; R11 := 0xae91e43b
	134	[3225]	SELF     	R11 R11 K44 ; R12 := R11; R11 := R11[0x91a24e4b]
	135	[3225]	LOADK    	R13 K38 ; R13 := "TopLeftContainer.CurrencyBar.Display1.Capacity"
	136	[3225]	LOADK    	R14 := 33.000000
	137	[3225]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	138	[3226]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	139	[3226]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x67bc869f]
	140	[3226]	LOADK    	R14 K7 ; R14 := "TopLeftContainer.CurrencyBar.Display1.Components"
	141	[3226]	LOADK    	R15 := 0.000000
	142	[3226]	ADD      	R16 R11 K45 ; R16 := R11 + 50.000000
	143	[3226]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	144	[3227]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	145	[3227]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x67bc869f]
	146	[3227]	LOADK    	R14 K13 ; R14 := "TopLeftContainer.CurrencyBar.Display1.Wreckage"
	147	[3227]	LOADK    	R15 := 0.000000
	148	[3227]	ADD      	R16 R11 K46 ; R16 := R11 + 130.000000
	149	[3227]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	150	[3228]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	151	[3228]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x67bc869f]
	152	[3228]	LOADK    	R14 K18 ; R14 := "TopLeftContainer.CurrencyBar.Display1.Unidentified"
	153	[3228]	LOADK    	R15 := 0.000000
	154	[3228]	ADD      	R16 R11 K47 ; R16 := R11 + 210.000000
	155	[3228]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	156	[3230]	RETURN   	R0 1 ; return 

function #81 <?:3232,3245> (80 instructions, 320 bytes at 00000211259BB820)
0 params, 4 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[3233]	GETGLOBAL	R0 K0 ; R0 := mColors
	2	[3233]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[3233]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	4	[3233]	LOADK    	R2 := 2.000000
	5	[3233]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[3233]	SETTABLE 	R0 K1 R1 ; R0["Background1Object"] := R1
	7	[3234]	GETGLOBAL	R0 K0 ; R0 := mColors
	8	[3234]	GETGLOBAL	R1 K0 ; R1 := mColors
	9	[3234]	GETTABLE 	R1 R1 K1 ; R1 := R1["Background1Object"]
	10	[3234]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xa5d5c8f6]
	11	[3234]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[3234]	SETTABLE 	R0 K4 R1 ; R0["Background1"] := R1
	13	[3235]	GETGLOBAL	R0 K0 ; R0 := mColors
	14	[3235]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[3235]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	16	[3235]	LOADK    	R2 := 5.000000
	17	[3235]	OP_LOADBOOL	R3 1 0 ; R3 := true
	18	[3235]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	19	[3235]	SETTABLE 	R0 K6 R1 ; R0["Background4"] := R1
	20	[3236]	GETGLOBAL	R0 K0 ; R0 := mColors
	21	[3236]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[3236]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	23	[3236]	LOADK    	R2 := 6.000000
	24	[3236]	OP_LOADBOOL	R3 1 0 ; R3 := true
	25	[3236]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	26	[3236]	SETTABLE 	R0 K7 R1 ; R0["Content"] := R1
	27	[3237]	GETGLOBAL	R0 K0 ; R0 := mColors
	28	[3237]	GETUPVAL 	R1 U0 ; R1 := U0
	29	[3237]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	30	[3237]	LOADK    	R2 := 9.000000
	31	[3237]	CALL     	R1 2 2 ; R1 := R1(R2)
	32	[3237]	SETTABLE 	R0 K8 R1 ; R0["FloatingContentObject"] := R1
	33	[3238]	GETGLOBAL	R0 K0 ; R0 := mColors
	34	[3238]	GETGLOBAL	R1 K0 ; R1 := mColors
	35	[3238]	GETTABLE 	R1 R1 K8 ; R1 := R1["FloatingContentObject"]
	36	[3238]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xa5d5c8f6]
	37	[3238]	CALL     	R1 2 2 ; R1 := R1(R2)
	38	[3238]	SETTABLE 	R0 K9 R1 ; R0["FloatingContent"] := R1
	39	[3239]	GETGLOBAL	R0 K0 ; R0 := mColors
	40	[3239]	GETUPVAL 	R1 U0 ; R1 := U0
	41	[3239]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	42	[3239]	LOADK    	R2 := 10.000000
	43	[3239]	OP_LOADBOOL	R3 0 0 ; R3 := false
	44	[3239]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	45	[3239]	SETTABLE 	R0 K10 R1 ; R0["FloatingContentHighlightObject"] := R1
	46	[3240]	GETGLOBAL	R0 K0 ; R0 := mColors
	47	[3240]	GETGLOBAL	R1 K0 ; R1 := mColors
	48	[3240]	GETTABLE 	R1 R1 K10 ; R1 := R1["FloatingContentHighlightObject"]
	49	[3240]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xa5d5c8f6]
	50	[3240]	CALL     	R1 2 2 ; R1 := R1(R2)
	51	[3240]	SETTABLE 	R0 K11 R1 ; R0["FloatingContentHighlight"] := R1
	52	[3241]	GETGLOBAL	R0 K0 ; R0 := mColors
	53	[3241]	GETUPVAL 	R1 U0 ; R1 := U0
	54	[3241]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	55	[3241]	LOADK    	R2 := 1.000000
	56	[3241]	OP_LOADBOOL	R3 1 0 ; R3 := true
	57	[3241]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	58	[3241]	SETTABLE 	R0 K12 R1 ; R0["BackerHighlight"] := R1
	59	[3242]	GETGLOBAL	R0 K0 ; R0 := mColors
	60	[3242]	GETUPVAL 	R1 U0 ; R1 := U0
	61	[3242]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5d10207d]
	62	[3242]	LOADK    	R2 := 12.000000
	63	[3242]	OP_LOADBOOL	R3 1 0 ; R3 := true
	64	[3242]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	65	[3242]	SETTABLE 	R0 K13 R1 ; R0["Negative"] := R1
	66	[3243]	GETGLOBAL	R0 K0 ; R0 := mColors
	67	[3243]	GETUPVAL 	R1 U1 ; R1 := U1
	68	[3243]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x9f57dd7d]
	69	[3243]	GETGLOBAL	R2 K0 ; R2 := mColors
	70	[3243]	GETTABLE 	R2 R2 K9 ; R2 := R2["FloatingContent"]
	71	[3243]	CALL     	R1 2 2 ; R1 := R1(R2)
	72	[3243]	SETTABLE 	R0 K14 R1 ; R0["FloatingContentHex"] := R1
	73	[3244]	GETGLOBAL	R0 K0 ; R0 := mColors
	74	[3244]	GETUPVAL 	R1 U1 ; R1 := U1
	75	[3244]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x9f57dd7d]
	76	[3244]	GETGLOBAL	R2 K0 ; R2 := mColors
	77	[3244]	GETTABLE 	R2 R2 K11 ; R2 := R2["FloatingContentHighlight"]
	78	[3244]	CALL     	R1 2 2 ; R1 := R1(R2)
	79	[3244]	SETTABLE 	R0 K16 R1 ; R0["FloatingContentHighlightHex"] := R1
	80	[3245]	RETURN   	R0 1 ; return 

function #82 <?:3247,3273> (58 instructions, 232 bytes at 000002112277C1A0)
1 param, 6 slots, 3 upvalues, 0 locals, 16 constants, 2 functions
	1	[3248]	TEST     	R0 1 ; if R0 then PC := 5
	2	[3248]	JMP      	5 ; PC := 5
	3	[3249]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[3249]	CALL     	R1 1 1 ; R1()
	5	[3252]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	6	[3252]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	7	[3252]	LOADK    	R3 K2 ; R3 := "TopLeftContainer.Lines"
	8	[3252]	LOADK    	R4 := 9.000000
	9	[3252]	GETGLOBAL	R5 K3 ; R5 := mColors
	10	[3252]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	11	[3252]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	12	[3253]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	13	[3253]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	14	[3253]	LOADK    	R3 K5 ; R3 := "TopRightContainer.UpgradedDecoration"
	15	[3253]	LOADK    	R4 := 9.000000
	16	[3253]	GETGLOBAL	R5 K3 ; R5 := mColors
	17	[3253]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	18	[3253]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	19	[3254]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	20	[3254]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	21	[3254]	LOADK    	R3 K6 ; R3 := "TopRightContainer.Lines"
	22	[3254]	LOADK    	R4 := 9.000000
	23	[3254]	GETGLOBAL	R5 K3 ; R5 := mColors
	24	[3254]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	25	[3254]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	26	[3255]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	27	[3255]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	28	[3255]	LOADK    	R3 K7 ; R3 := "BottomRightContainer.Lines"
	29	[3255]	LOADK    	R4 := 9.000000
	30	[3255]	GETGLOBAL	R5 K3 ; R5 := mColors
	31	[3255]	GETTABLE 	R5 R5 K4 ; R5 := R5["FloatingContent"]
	32	[3255]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	33	[3257]	GETUPVAL 	R1 U1 ; R1 := U1
	34	[3257]	CALL     	R1 1 1 ; R1()
	35	[3258]	GETUPVAL 	R1 U2 ; R1 := U2
	36	[3258]	OP_LOADBOOL	R2 1 0 ; R2 := true
	37	[3258]	CALL     	R1 2 1 ; R1(R2)
	38	[3260]	GETGLOBAL	R1 K8 ; R1 := mStats
	39	[3260]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x71e9ac81]
	40	[3260]	CALL     	R1 2 1 ; R1(R2)
	41	[3261]	GETGLOBAL	R1 K10 ; R1 := mInventoryGrid
	42	[3261]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x71e9ac81]
	43	[3261]	LOADNIL  	R3 R3 ; R3 := nil
	44	[3261]	OP_LOADBOOL	R4 1 0 ; R4 := true
	45	[3261]	OP_LOADBOOL	R5 1 0 ; R5 := true
	46	[3261]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	47	[3262]	GETGLOBAL	R1 K11 ; R1 := mCosmeticsList
	48	[3262]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xa034c64c]
	49	[3262]	CALL     	R1 2 1 ; R1(R2)
	50	[3264]	GETGLOBAL	R1 K13 ; R1 := mCategories
	51	[3264]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xea061e98]
	52	[3267]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	53	[3264]	CALL     	R1 3 1 ; R1(R2,R3)
	54	[3269]	GETGLOBAL	R1 K15 ; R1 := mEquipment
	55	[3269]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xea061e98]
	56	[3272]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	57	[3269]	CALL     	R1 3 1 ; R1(R2,R3)
	58	[3273]	RETURN   	R0 1 ; return 

function #83 <?:3275,3353> (216 instructions, 864 bytes at 0000021191E815F0)
4 params, 17 slots, 10 upvalues, 0 locals, 51 constants, 0 functions
	1	[3276]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[3276]	GETGLOBAL	R5 K1 ; R5 := 0x25d99d89
	3	[3276]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[3276]	TEST     	R4 1 ; if R4 then PC := 11
	5	[3276]	JMP      	11 ; PC := 11
	6	[3276]	GETGLOBAL	R4 K2 ; R4 := mInputBlocked
	7	[3276]	TEST     	R4 1 ; if R4 then PC := 11
	8	[3276]	JMP      	11 ; PC := 11
	9	[3276]	TEST     	R0 1 ; if R0 then PC := 12
	10	[3276]	JMP      	12 ; PC := 12
	11	[3277]	RETURN   	R0 1 ; return 
	12	[3280]	GETTABLE 	R4 R0 K3 ; R4 := R0["SalvageState"]
	13	[3280]	GETUPVAL 	R5 U0 ; R5 := U0
	14	[3280]	GETTABLE 	R5 R5 K4 ; R5 := R5["OWNED"]
	15	[3280]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 20
	16	[3280]	JMP      	20 ; PC := 20
	17	[3280]	TEST     	R2 1 ; if R2 then PC := 20
	18	[3280]	JMP      	20 ; PC := 20
	19	[3281]	RETURN   	R0 1 ; return 
	20	[3284]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 24
	21	[3284]	JMP      	24 ; PC := 24
	22	[3284]	NOT      	R4 R3 ; R4 := not R3
	23	[3284]	JMP      	26 ; PC := 26
	24	[3284]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 25
	25	[3284]	OP_LOADBOOL	R4 1 0 ; R4 := true
	26	[3286]	GETGLOBAL	R5 K6 ; R5 := mActiveState
	27	[3286]	GETUPVAL 	R6 U1 ; R6 := U1
	28	[3286]	GETTABLE 	R6 R6 K7 ; R6 := R6["WEAPON_INV"]
	29	[3286]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 167
	30	[3286]	JMP      	167 ; PC := 167
	31	[3287]	GETUPVAL 	R5 U2 ; R5 := U2
	32	[3287]	OP_LOADBOOL	R6 1 0 ; R6 := true
	33	[3287]	CALL     	R5 2 1 ; R5(R6)
	34	[3288]	GETUPVAL 	R5 U3 ; R5 := U3
	35	[3288]	CALL     	R5 1 1 ; R5()
	36	[3290]	TEST     	R1 1 ; if R1 then PC := 40
	37	[3290]	JMP      	40 ; PC := 40
	38	[3290]	GETGLOBAL	R5 K8 ; R5 := mEquipment
	39	[3290]	GETTABLE 	R1 R5 K9 ; R1 := R5["mSelectedElement"]
	40	[3291]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	41	[3291]	MOVE     	R6 R1 ; R6 := R1
	42	[3291]	CALL     	R5 2 2 ; R5 := R5(R6)
	43	[3291]	TEST     	R5 1 ; if R5 then PC := 152
	44	[3291]	JMP      	152 ; PC := 152
	45	[3291]	GETTABLE 	R5 R1 K10 ; R5 := R1["Slot"]
	46	[3291]	EQ       	1 R5 K5 ; if R5 == nil then PC := 152
	47	[3291]	JMP      	152 ; PC := 152
	48	[3292]	TEST     	R3 1 ; if R3 then PC := 94
	49	[3292]	JMP      	94 ; PC := 94
	50	[3292]	TEST     	R2 1 ; if R2 then PC := 94
	51	[3292]	JMP      	94 ; PC := 94
	52	[3292]	GETTABLE 	R5 R0 K11 ; R5 := R0["AlwaysAvailable"]
	53	[3292]	TEST     	R5 1 ; if R5 then PC := 94
	54	[3292]	JMP      	94 ; PC := 94
	55	[3293]	LOADK    	R5 := 1.000000
	56	[3293]	GETTABLE 	R6 R0 K12 ; R6 := R0["EquippedSlots"]
	57	[3293]	LEN      	R6 R6 ; R6 := # R6
	58	[3293]	LOADK    	R7 := 1.000000
	59	[3293]	FORPREP  	R5 93 ; R5 -= R7; PC := 93
	60	[3294]	GETTABLE 	R9 R1 K10 ; R9 := R1["Slot"]
	61	[3294]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 85
	62	[3294]	JMP      	85 ; PC := 85
	63	[3294]	GETTABLE 	R9 R0 K12 ; R9 := R0["EquippedSlots"]
	64	[3294]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	65	[3294]	TEST     	R9 0 ; if not R9 then PC := 85
	66	[3294]	JMP      	85 ; PC := 85
	67	[3295]	GETGLOBAL	R9 K13 ; R9 := 0x603636ad
	68	[3295]	LOADK    	R10 K14 ; R10 := "/Lotus/Language/Railjack/Loadout_WeaponSwap"
	69	[3295]	NEWTABLE 	R11 0 2 ; R11 := {}
	70	[3295]	GETTABLE 	R12 R0 K16 ; R12 := R0["Name"]
	71	[3295]	SETTABLE 	R11 K15 R12 ; R11["WEAPON_NAME"] := R12
	72	[3295]	GETGLOBAL	R12 K8 ; R12 := mEquipment
	73	[3295]	GETTABLE 	R12 R12 K18 ; R12 := R12["mElements"]
	74	[3295]	GETTABLE 	R12 R12 R8 ; R12 := R12[R8]
	75	[3295]	GETTABLE 	R12 R12 K16 ; R12 := R12["Name"]
	76	[3295]	SETTABLE 	R11 K17 R12 ; R11["SLOT_NAME"] := R12
	77	[3295]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	78	[3296]	GETUPVAL 	R10 U4 ; R10 := U4
	79	[3296]	GETTABLE 	R10 R10 K19 ; R10 := R10[0xdedfded7]
	80	[3296]	MOVE     	R11 R9 ; R11 := R9
	81	[3296]	LOADK    	R12 K20 ; R12 := "OnConfirmEquip"
	82	[3296]	CALL     	R10 3 1 ; R10(R11,R12)
	83	[3297]	RETURN   	R0 1 ; return 
	84	[3297]	JMP      	93 ; PC := 93
	85	[3298]	GETTABLE 	R10 R0 K12 ; R10 := R0["EquippedSlots"]
	86	[3298]	GETTABLE 	R11 R1 K10 ; R11 := R1["Slot"]
	87	[3298]	GETTABLE 	R10 R10 R11 ; R10 := R10[R11]
	88	[3298]	TEST     	R10 0 ; if not R10 then PC := 93
	89	[3298]	JMP      	93 ; PC := 93
	90	[3299]	GETUPVAL 	R10 U5 ; R10 := U5
	91	[3299]	CALL     	R10 1 1 ; R10()
	92	[3300]	RETURN   	R0 1 ; return 
	93	[3293]	FORLOOP  	R5 60 ; R5 += R7; if R5 <= R6 then begin PC := 60; R8 := R5 end
	94	[3305]	GETGLOBAL	R10 K21 ; R10 := mCurrentShip
	95	[3305]	GETTABLE 	R10 R10 K22 ; R10 := R10["ShipInfo"]
	96	[3305]	TEST     	R10 0 ; if not R10 then PC := 152
	97	[3305]	JMP      	152 ; PC := 152
	98	[3306]	GETGLOBAL	R10 K21 ; R10 := mCurrentShip
	99	[3306]	GETTABLE 	R10 R10 K22 ; R10 := R10["ShipInfo"]
	100	[3306]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0x73a8846a]
	101	[3306]	GETTABLE 	R12 R1 K24 ; R12 := R1["Hand"]
	102	[3306]	GETTABLE 	R13 R1 K10 ; R13 := R1["Slot"]
	103	[3306]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	104	[3307]	GETTABLE 	R11 R0 K25 ; R11 := R0["mPurchasedInfo"]
	105	[3307]	EQ       	1 R11 K5 ; if R11 == nil then PC := 112
	106	[3307]	JMP      	112 ; PC := 112
	107	[3308]	GETTABLE 	R11 R0 K25 ; R11 := R0["mPurchasedInfo"]
	108	[3308]	GETTABLE 	R11 R11 K27 ; R11 := R11["Item"]
	109	[3308]	GETTABLE 	R11 R11 K26 ; R11 := R11["mItemId"]
	110	[3308]	SETTABLE 	R10 K26 R11 ; R10[0x0a000032] := R11
	111	[3308]	JMP      	116 ; PC := 116
	112	[3310]	GETTABLE 	R11 R10 K26 ; R11 := R10["mItemId"]
	113	[3310]	GETGLOBAL	R12 K29 ; R12 := 0x6c97a788
	114	[3310]	GETTABLE 	R12 R12 K30 ; R12 := R12["InvalidItemID"]
	115	[3310]	SETTABLE 	R11 K28 R12 ; R11["mId"] := R12
	116	[3313]	GETTABLE 	R11 R0 K32 ; R11 := R0["ItemType"]
	117	[3313]	SETTABLE 	R10 K31 R11 ; R10["mItemType"] := R11
	118	[3314]	GETGLOBAL	R11 K1 ; R11 := 0x25d99d89
	119	[3314]	SELF     	R11 R11 K33 ; R12 := R11; R11 := R11[0x25a6e75e]
	120	[3314]	CALL     	R11 2 2 ; R11 := R11(R12)
	121	[3314]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0xdf943d05]
	122	[3314]	GETGLOBAL	R13 K21 ; R13 := mCurrentShip
	123	[3314]	GETTABLE 	R13 R13 K35 ; R13 := R13["ID"]
	124	[3314]	GETTABLE 	R14 R1 K24 ; R14 := R1["Hand"]
	125	[3314]	GETTABLE 	R15 R1 K10 ; R15 := R1["Slot"]
	126	[3314]	MOVE     	R16 R10 ; R16 := R10
	127	[3314]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	128	[3318]	GETGLOBAL	R11 K1 ; R11 := 0x25d99d89
	129	[3318]	SELF     	R11 R11 K36 ; R12 := R11; R11 := R11[0x41f4ba99]
	130	[3318]	CALL     	R11 2 1 ; R11(R12)
	131	[3319]	GETGLOBAL	R11 K1 ; R11 := 0x25d99d89
	132	[3319]	SELF     	R11 R11 K38 ; R12 := R11; R11 := R11[0x62c81b76]
	133	[3319]	CALL     	R11 2 2 ; R11 := R11(R12)
	134	[3319]	GETTABLE 	R11 R11 K39 ; R11 := R11["mCrewShipLoadOut"]
	135	[3319]	SETGLOBALHASH	R11 K37 ; mCurrentLoadout := R11
	136	[3320]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	137	[3320]	GETGLOBAL	R12 K40 ; R12 := mShipSuit
	138	[3320]	CALL     	R11 2 2 ; R11 := R11(R12)
	139	[3320]	TEST     	R11 1 ; if R11 then PC := 145
	140	[3320]	JMP      	145 ; PC := 145
	141	[3321]	GETGLOBAL	R11 K40 ; R11 := mShipSuit
	142	[3321]	SELF     	R11 R11 K41 ; R12 := R11; R11 := R11[0x364c4d52]
	143	[3321]	GETGLOBAL	R13 K37 ; R13 := mCurrentLoadout
	144	[3321]	CALL     	R11 3 1 ; R11(R12,R13)
	145	[3323]	TEST     	R2 1 ; if R2 then PC := 152
	146	[3323]	JMP      	152 ; PC := 152
	147	[3324]	GETUPVAL 	R11 U6 ; R11 := U6
	148	[3324]	MOVE     	R12 R1 ; R12 := R1
	149	[3324]	CALL     	R11 2 1 ; R11(R12)
	150	[3325]	GETGLOBAL	R11 K42 ; R11 := _T
	151	[3325]	SETTABLE 	R11 K43 K44 ; R11["LoadoutSaveRequired"] := true
	152	[3330]	TEST     	R4 0 ; if not R4 then PC := 204
	153	[3330]	JMP      	204 ; PC := 204
	154	[3330]	TEST     	R2 1 ; if R2 then PC := 204
	155	[3330]	JMP      	204 ; PC := 204
	156	[3331]	GETGLOBAL	R11 K8 ; R11 := mEquipment
	157	[3331]	SELF     	R11 R11 K45 ; R12 := R11; R11 := R11[0x71e9ac81]
	158	[3331]	LOADNIL  	R13 R13 ; R13 := nil
	159	[3331]	OP_LOADBOOL	R14 1 0 ; R14 := true
	160	[3331]	OP_LOADBOOL	R15 1 0 ; R15 := true
	161	[3331]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	162	[3332]	GETUPVAL 	R11 U5 ; R11 := U5
	163	[3332]	LOADNIL  	R12 R12 ; R12 := nil
	164	[3332]	OP_LOADBOOL	R13 1 0 ; R13 := true
	165	[3332]	CALL     	R11 3 1 ; R11(R12,R13)
	166	[3333]	JMP      	204 ; PC := 204
	167	[3334]	GETGLOBAL	R11 K6 ; R11 := mActiveState
	168	[3334]	GETUPVAL 	R12 U1 ; R12 := U1
	169	[3334]	GETTABLE 	R12 R12 K46 ; R12 := R12["EQUIP_INV"]
	170	[3334]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 204
	171	[3334]	JMP      	204 ; PC := 204
	172	[3335]	TEST     	R2 0 ; if not R2 then PC := 179
	173	[3335]	JMP      	179 ; PC := 179
	174	[3336]	GETUPVAL 	R11 U7 ; R11 := U7
	175	[3336]	LOADNIL  	R12 R12 ; R12 := nil
	176	[3336]	MOVE     	R13 R0 ; R13 := R0
	177	[3336]	CALL     	R11 3 1 ; R11(R12,R13)
	178	[3336]	JMP      	204 ; PC := 204
	179	[3338]	GETUPVAL 	R11 U8 ; R11 := U8
	180	[3338]	OP_LOADBOOL	R12 0 0 ; R12 := false
	181	[3338]	LOADNIL  	R13 R13 ; R13 := nil
	182	[3338]	MOVE     	R14 R0 ; R14 := R0
	183	[3338]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	184	[3339]	TEST     	R4 0 ; if not R4 then PC := 204
	185	[3339]	JMP      	204 ; PC := 204
	186	[3340]	GETGLOBAL	R11 K8 ; R11 := mEquipment
	187	[3340]	GETTABLE 	R11 R11 K9 ; R11 := R11["mSelectedElement"]
	188	[3341]	GETTABLE 	R12 R0 K47 ; R12 := R0["RawItem"]
	189	[3341]	GETTABLE 	R12 R12 K27 ; R12 := R12["Item"]
	190	[3341]	SETTABLE 	R11 K27 R12 ; R11["Item"] := R12
	191	[3342]	GETUPVAL 	R12 U9 ; R12 := U9
	192	[3342]	MOVE     	R13 R11 ; R13 := R11
	193	[3342]	CALL     	R12 2 1 ; R12(R13)
	194	[3343]	GETGLOBAL	R12 K8 ; R12 := mEquipment
	195	[3343]	SELF     	R12 R12 K45 ; R13 := R12; R12 := R12[0x71e9ac81]
	196	[3343]	LOADNIL  	R14 R14 ; R14 := nil
	197	[3343]	OP_LOADBOOL	R15 1 0 ; R15 := true
	198	[3343]	OP_LOADBOOL	R16 1 0 ; R16 := true
	199	[3343]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	200	[3344]	GETUPVAL 	R12 U5 ; R12 := U5
	201	[3344]	LOADNIL  	R13 R13 ; R13 := nil
	202	[3344]	OP_LOADBOOL	R14 1 0 ; R14 := true
	203	[3344]	CALL     	R12 3 1 ; R12(R13,R14)
	204	[3349]	TEST     	R3 1 ; if R3 then PC := 216
	205	[3349]	JMP      	216 ; PC := 216
	206	[3349]	TEST     	R2 1 ; if R2 then PC := 216
	207	[3349]	JMP      	216 ; PC := 216
	208	[3350]	GETUPVAL 	R12 U4 ; R12 := U4
	209	[3350]	GETTABLE 	R12 R12 K48 ; R12 := R12[0x659d451f]
	210	[3350]	GETGLOBAL	R13 K49 ; R13 := 0xf92b1165
	211	[3350]	CALL     	R12 2 1 ; R12(R13)
	212	[3351]	GETUPVAL 	R12 U4 ; R12 := U4
	213	[3351]	GETTABLE 	R12 R12 K48 ; R12 := R12[0x659d451f]
	214	[3351]	GETGLOBAL	R13 K50 ; R13 := 0x9c7414a5
	215	[3351]	CALL     	R12 2 1 ; R12(R13)
	216	[3353]	RETURN   	R0 1 ; return 

function #84 <?:3355,3380> (51 instructions, 204 bytes at 0000021131419D40)
1 param, 14 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[3356]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3356]	MOVE     	R2 R0 ; R2 := R0
	3	[3356]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3356]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 51
	5	[3356]	JMP      	51 ; PC := 51
	6	[3357]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3357]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3358]	EQ       	1 R1 K5 ; if R1 == nil then PC := 51
	9	[3358]	JMP      	51 ; PC := 51
	10	[3360]	LOADNIL  	R2 R2 ; R2 := nil
	11	[3361]	LOADK    	R3 := 1.000000
	12	[3361]	GETTABLE 	R4 R1 K6 ; R4 := R1["EquippedSlots"]
	13	[3361]	LEN      	R4 R4 ; R4 := # R4
	14	[3361]	LOADK    	R5 := 1.000000
	15	[3361]	FORPREP  	R3 22 ; R3 -= R5; PC := 22
	16	[3362]	GETTABLE 	R7 R1 K6 ; R7 := R1["EquippedSlots"]
	17	[3362]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	18	[3362]	TEST     	R7 0 ; if not R7 then PC := 22
	19	[3362]	JMP      	22 ; PC := 22
	20	[3363]	MOVE     	R2 R6 ; R2 := R6
	21	[3364]	JMP      	23 ; PC := 23
	22	[3361]	FORLOOP  	R3 16 ; R3 += R5; if R3 <= R4 then begin PC := 16; R6 := R3 end
	23	[3369]	LOADK    	R7 := 1.000000
	24	[3369]	GETGLOBAL	R8 K3 ; R8 := mInventoryGrid
	25	[3369]	GETTABLE 	R8 R8 K7 ; R8 := R8["mUnfilteredElements"]
	26	[3369]	LEN      	R8 R8 ; R8 := # R8
	27	[3369]	LOADK    	R9 := 1.000000
	28	[3369]	FORPREP  	R7 46 ; R7 -= R9; PC := 46
	29	[3370]	GETGLOBAL	R11 K3 ; R11 := mInventoryGrid
	30	[3370]	GETTABLE 	R11 R11 K7 ; R11 := R11["mUnfilteredElements"]
	31	[3370]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	32	[3370]	GETTABLE 	R11 R11 K8 ; R11 := R11["AlwaysAvailable"]
	33	[3370]	TEST     	R11 0 ; if not R11 then PC := 46
	34	[3370]	JMP      	46 ; PC := 46
	35	[3371]	GETUPVAL 	R11 U0 ; R11 := U0
	36	[3371]	GETGLOBAL	R12 K3 ; R12 := mInventoryGrid
	37	[3371]	GETTABLE 	R12 R12 K7 ; R12 := R12["mUnfilteredElements"]
	38	[3371]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	39	[3371]	GETGLOBAL	R13 K9 ; R13 := mEquipment
	40	[3371]	GETTABLE 	R13 R13 K10 ; R13 := R13["mElements"]
	41	[3371]	GETTABLE 	R13 R13 R2 ; R13 := R13[R2]
	42	[3371]	CALL     	R11 3 1 ; R11(R12,R13)
	43	[3372]	GETTABLE 	R11 R1 K6 ; R11 := R1["EquippedSlots"]
	44	[3372]	SETTABLE 	R11 R2 K11 ; R11[R2] := false
	45	[3373]	JMP      	47 ; PC := 47
	46	[3369]	FORLOOP  	R7 29 ; R7 += R9; if R7 <= R8 then begin PC := 29; R10 := R7 end
	47	[3377]	GETUPVAL 	R11 U0 ; R11 := U0
	48	[3377]	GETGLOBAL	R12 K3 ; R12 := mInventoryGrid
	49	[3377]	GETTABLE 	R12 R12 K4 ; R12 := R12["mSelectedElement"]
	50	[3377]	CALL     	R11 2 1 ; R11(R12)
	51	[3380]	RETURN   	R0 1 ; return 

function #85 <?:3382,3384> (5 instructions, 20 bytes at 000002117DFAA170)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[3383]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3383]	GETGLOBAL	R1 K0 ; R1 := mInventoryGrid
	3	[3383]	GETTABLE 	R1 R1 K1 ; R1 := R1["mSelectedElement"]
	4	[3383]	CALL     	R0 2 1 ; R0(R1)
	5	[3384]	RETURN   	R0 1 ; return 

function #86 <?:3386,3387> (1 instruction, 4 bytes at 000002117DFAA200)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[3387]	RETURN   	R0 1 ; return 

function #87 <?:3389,3462> (209 instructions, 836 bytes at 000002117DFAA290)
1 param, 20 slots, 7 upvalues, 0 locals, 32 constants, 1 function
	1	[3390]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[3392]	GETGLOBAL	R2 K0 ; R2 := 0x25d99d89
	3	[3392]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x25a6e75e]
	4	[3392]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3394]	NEWTABLE 	R3 0 0 ; R3 := {}
	6	[3395]	NEWTABLE 	R4 0 0 ; R4 := {}
	7	[3396]	NEWTABLE 	R5 0 0 ; R5 := {}
	8	[3397]	NEWTABLE 	R6 0 0 ; R6 := {}
	9	[3399]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	10	[3399]	GETUPVAL 	R8 U0 ; R8 := U0
	11	[3399]	GETTABLE 	R8 R8 K3 ; R8 := R8["WEAPON_INV"]
	12	[3399]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 29
	13	[3399]	JMP      	29 ; PC := 29
	14	[3399]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	15	[3399]	GETUPVAL 	R8 U0 ; R8 := U0
	16	[3399]	GETTABLE 	R8 R8 K4 ; R8 := R8["EQUIP_INV"]
	17	[3399]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 29
	18	[3399]	JMP      	29 ; PC := 29
	19	[3399]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	20	[3399]	GETUPVAL 	R8 U0 ; R8 := U0
	21	[3399]	GETTABLE 	R8 R8 K5 ; R8 := R8["ARCH_INV"]
	22	[3399]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 29
	23	[3399]	JMP      	29 ; PC := 29
	24	[3399]	GETUPVAL 	R7 U1 ; R7 := U1
	25	[3399]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	26	[3399]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 29
	27	[3399]	JMP      	29 ; PC := 29
	28	[3401]	RETURN   	R0 1 ; return 
	29	[3404]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	30	[3404]	GETUPVAL 	R8 U0 ; R8 := U0
	31	[3404]	GETTABLE 	R8 R8 K3 ; R8 := R8["WEAPON_INV"]
	32	[3404]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 38
	33	[3404]	JMP      	38 ; PC := 38
	34	[3404]	GETUPVAL 	R7 U1 ; R7 := U1
	35	[3404]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	36	[3404]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 62
	37	[3404]	JMP      	62 ; PC := 62
	38	[3405]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	39	[3405]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	40	[3405]	MOVE     	R8 R3 ; R8 := R3
	41	[3405]	GETUPVAL 	R9 U0 ; R9 := U0
	42	[3405]	GETTABLE 	R9 R9 K3 ; R9 := R9["WEAPON_INV"]
	43	[3405]	CALL     	R7 3 1 ; R7(R8,R9)
	44	[3406]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	45	[3406]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	46	[3406]	MOVE     	R8 R4 ; R8 := R4
	47	[3406]	SELF     	R9 R2 K9 ; R10 := R2; R9 := R2[0xbfba693e]
	48	[3406]	CALL     	R9 2 0 ; R9,... := R9(R10)
	49	[3406]	CALL     	R7 0 1 ; R7(R8,...)
	50	[3407]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	51	[3407]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	52	[3407]	MOVE     	R8 R5 ; R8 := R5
	53	[3407]	SELF     	R9 R2 K10 ; R10 := R2; R9 := R2[0xe600a7f3]
	54	[3407]	CALL     	R9 2 0 ; R9,... := R9(R10)
	55	[3407]	CALL     	R7 0 1 ; R7(R8,...)
	56	[3408]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	57	[3408]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	58	[3408]	MOVE     	R8 R6 ; R8 := R6
	59	[3408]	SELF     	R9 R2 K11 ; R10 := R2; R9 := R2[0xaea1cb86]
	60	[3408]	CALL     	R9 2 0 ; R9,... := R9(R10)
	61	[3408]	CALL     	R7 0 1 ; R7(R8,...)
	62	[3411]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	63	[3411]	GETUPVAL 	R8 U0 ; R8 := U0
	64	[3411]	GETTABLE 	R8 R8 K4 ; R8 := R8["EQUIP_INV"]
	65	[3411]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 71
	66	[3411]	JMP      	71 ; PC := 71
	67	[3411]	GETUPVAL 	R7 U1 ; R7 := U1
	68	[3411]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	69	[3411]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 95
	70	[3411]	JMP      	95 ; PC := 95
	71	[3412]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	72	[3412]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	73	[3412]	MOVE     	R8 R3 ; R8 := R3
	74	[3412]	GETUPVAL 	R9 U0 ; R9 := U0
	75	[3412]	GETTABLE 	R9 R9 K4 ; R9 := R9["EQUIP_INV"]
	76	[3412]	CALL     	R7 3 1 ; R7(R8,R9)
	77	[3413]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	78	[3413]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	79	[3413]	MOVE     	R8 R4 ; R8 := R4
	80	[3413]	SELF     	R9 R2 K12 ; R10 := R2; R9 := R2[0xdc039065]
	81	[3413]	CALL     	R9 2 0 ; R9,... := R9(R10)
	82	[3413]	CALL     	R7 0 1 ; R7(R8,...)
	83	[3414]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	84	[3414]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	85	[3414]	MOVE     	R8 R5 ; R8 := R5
	86	[3414]	SELF     	R9 R2 K13 ; R10 := R2; R9 := R2[0x64e44bdc]
	87	[3414]	CALL     	R9 2 0 ; R9,... := R9(R10)
	88	[3414]	CALL     	R7 0 1 ; R7(R8,...)
	89	[3415]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	90	[3415]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	91	[3415]	MOVE     	R8 R6 ; R8 := R6
	92	[3415]	SELF     	R9 R2 K11 ; R10 := R2; R9 := R2[0xaea1cb86]
	93	[3415]	CALL     	R9 2 0 ; R9,... := R9(R10)
	94	[3415]	CALL     	R7 0 1 ; R7(R8,...)
	95	[3418]	GETGLOBAL	R7 K2 ; R7 := mActiveState
	96	[3418]	GETUPVAL 	R8 U0 ; R8 := U0
	97	[3418]	GETTABLE 	R8 R8 K5 ; R8 := R8["ARCH_INV"]
	98	[3418]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 104
	99	[3418]	JMP      	104 ; PC := 104
	100	[3418]	GETUPVAL 	R7 U1 ; R7 := U1
	101	[3418]	GETTABLE 	R7 R7 K6 ; R7 := R7["SELL_BULK"]
	102	[3418]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 122
	103	[3418]	JMP      	122 ; PC := 122
	104	[3419]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	105	[3419]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	106	[3419]	MOVE     	R8 R3 ; R8 := R3
	107	[3419]	GETUPVAL 	R9 U0 ; R9 := U0
	108	[3419]	GETTABLE 	R9 R9 K5 ; R9 := R9["ARCH_INV"]
	109	[3419]	CALL     	R7 3 1 ; R7(R8,R9)
	110	[3420]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	111	[3420]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	112	[3420]	MOVE     	R8 R4 ; R8 := R4
	113	[3420]	SELF     	R9 R2 K14 ; R10 := R2; R9 := R2[0x6f7b67d7]
	114	[3420]	CALL     	R9 2 0 ; R9,... := R9(R10)
	115	[3420]	CALL     	R7 0 1 ; R7(R8,...)
	116	[3421]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	117	[3421]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	118	[3421]	MOVE     	R8 R4 ; R8 := R4
	119	[3421]	SELF     	R9 R2 K15 ; R10 := R2; R9 := R2[0x3218c3b0]
	120	[3421]	CALL     	R9 2 0 ; R9,... := R9(R10)
	121	[3421]	CALL     	R7 0 1 ; R7(R8,...)
	122	[3424]	LOADNIL  	R7 R7 ; R7 := nil
	123	[3425]	GETUPVAL 	R8 U1 ; R8 := U1
	124	[3425]	GETTABLE 	R8 R8 K16 ; R8 := R8["REPAIR"]
	125	[3425]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 134
	126	[3425]	JMP      	134 ; PC := 134
	127	[3426]	GETTABLE 	R8 R4 K17 ; R8 := R4[1.000000]
	128	[3426]	LEN      	R8 R8 ; R8 := # R8
	129	[3427]	GETTABLE 	R9 R4 K17 ; R9 := R4[1.000000]
	130	[3427]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	131	[3427]	GETTABLE 	R9 R9 K18 ; R9 := R9["mItemId"]
	132	[3427]	GETTABLE 	R7 R9 K19 ; R7 := R9["mId"]
	133	[3427]	JMP      	162 ; PC := 162
	134	[3428]	GETGLOBAL	R9 K20 ; R9 := mInventoryGrid
	135	[3428]	GETTABLE 	R9 R9 K21 ; R9 := R9["mSelectedElement"]
	136	[3428]	EQ       	1 R9 K22 ; if R9 == nil then PC := 162
	137	[3428]	JMP      	162 ; PC := 162
	138	[3429]	GETUPVAL 	R9 U1 ; R9 := U1
	139	[3429]	GETTABLE 	R9 R9 K23 ; R9 := R9["SELL"]
	140	[3429]	EQ       	0 R0 R9 ; if R0 ~= R9 then PC := 150
	141	[3429]	JMP      	150 ; PC := 150
	142	[3430]	GETGLOBAL	R9 K20 ; R9 := mInventoryGrid
	143	[3430]	GETTABLE 	R9 R9 K21 ; R9 := R9["mSelectedElement"]
	144	[3430]	GETTABLE 	R9 R9 K24 ; R9 := R9["EquippedSlots"]
	145	[3430]	GETGLOBAL	R10 K25 ; R10 := mEquipment
	146	[3430]	GETTABLE 	R10 R10 K21 ; R10 := R10["mSelectedElement"]
	147	[3430]	GETTABLE 	R10 R10 K26 ; R10 := R10["Id"]
	148	[3430]	GETTABLE 	R1 R9 R10 ; R1 := R9[R10]
	149	[3430]	JMP      	162 ; PC := 162
	150	[3431]	GETUPVAL 	R9 U1 ; R9 := U1
	151	[3431]	GETTABLE 	R9 R9 K27 ; R9 := R9["CONTRIBUTE"]
	152	[3431]	EQ       	1 R0 R9 ; if R0 == R9 then PC := 158
	153	[3431]	JMP      	158 ; PC := 158
	154	[3431]	GETUPVAL 	R9 U1 ; R9 := U1
	155	[3431]	GETTABLE 	R9 R9 K28 ; R9 := R9["CANCEL"]
	156	[3431]	EQ       	0 R0 R9 ; if R0 ~= R9 then PC := 162
	157	[3431]	JMP      	162 ; PC := 162
	158	[3432]	GETGLOBAL	R9 K20 ; R9 := mInventoryGrid
	159	[3432]	GETTABLE 	R9 R9 K21 ; R9 := R9["mSelectedElement"]
	160	[3432]	GETTABLE 	R9 R9 K29 ; R9 := R9["RawItem"]
	161	[3432]	GETTABLE 	R7 R9 K30 ; R7 := R9["UID"]
	162	[3436]	LOADK    	R9 := 1.000000
	163	[3436]	LEN      	R10 R3 ; R10 := # R3
	164	[3436]	LOADK    	R11 := 1.000000
	165	[3436]	FORPREP  	R9 184 ; R9 -= R11; PC := 184
	166	[3437]	GETTABLE 	R13 R4 R12 ; R13 := R4[R12]
	167	[3438]	GETTABLE 	R14 R5 R12 ; R14 := R5[R12]
	168	[3439]	GETTABLE 	R15 R6 R12 ; R15 := R6[R12]
	169	[3440]	GETTABLE 	R16 R3 R12 ; R16 := R3[R12]
	170	[3441]	GETGLOBAL	R17 K25 ; R17 := mEquipment
	171	[3441]	SELF     	R17 R17 K31 ; R18 := R17; R17 := R17[0xea061e98]
	172	[3452]	CLOSURE  	R19 0 ; R19 := closure(Function #1)
	173	[3452]	GETUPVAL 	R0 U2 ; R0 := U2
	174	[3452]	MOVE     	R0 R13 ; R0 := R13
	175	[3452]	MOVE     	R0 R14 ; R0 := R14
	176	[3452]	GETUPVAL 	R0 U3 ; R0 := U3
	177	[3452]	MOVE     	R0 R15 ; R0 := R15
	178	[3452]	MOVE     	R0 R16 ; R0 := R16
	179	[3452]	GETUPVAL 	R0 U4 ; R0 := U4
	180	[3452]	MOVE     	R0 R7 ; R0 := R7
	181	[3452]	MOVE     	R0 R1 ; R0 := R1
	182	[3441]	CALL     	R17 3 1 ; R17(R18,R19)
	183	[3452]	CLOSE    	R13 ; SAVE R13,...
	184	[3436]	FORLOOP  	R9 166 ; R9 += R11; if R9 <= R10 then begin PC := 166; R12 := R9 end
	185	[3455]	GETUPVAL 	R13 U1 ; R13 := U1
	186	[3455]	GETTABLE 	R13 R13 K23 ; R13 := R13["SELL"]
	187	[3455]	EQ       	1 R0 R13 ; if R0 == R13 then PC := 193
	188	[3455]	JMP      	193 ; PC := 193
	189	[3455]	GETUPVAL 	R13 U1 ; R13 := U1
	190	[3455]	GETTABLE 	R13 R13 K6 ; R13 := R13["SELL_BULK"]
	191	[3455]	EQ       	0 R0 R13 ; if R0 ~= R13 then PC := 203
	192	[3455]	JMP      	203 ; PC := 203
	193	[3455]	GETGLOBAL	R13 K2 ; R13 := mActiveState
	194	[3455]	GETUPVAL 	R14 U0 ; R14 := U0
	195	[3455]	GETTABLE 	R14 R14 K4 ; R14 := R14["EQUIP_INV"]
	196	[3455]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 203
	197	[3455]	JMP      	203 ; PC := 203
	198	[3456]	GETUPVAL 	R13 U5 ; R13 := U5
	199	[3456]	LOADNIL  	R14 R14 ; R14 := nil
	200	[3456]	GETGLOBAL	R15 K20 ; R15 := mInventoryGrid
	201	[3456]	GETTABLE 	R15 R15 K21 ; R15 := R15["mSelectedElement"]
	202	[3456]	CALL     	R13 3 1 ; R13(R14,R15)
	203	[3459]	TEST     	R1 0 ; if not R1 then PC := 209
	204	[3459]	JMP      	209 ; PC := 209
	205	[3460]	GETUPVAL 	R13 U6 ; R13 := U6
	206	[3460]	GETGLOBAL	R14 K20 ; R14 := mInventoryGrid
	207	[3460]	GETTABLE 	R14 R14 K21 ; R14 := R14["mSelectedElement"]
	208	[3460]	CALL     	R13 2 1 ; R13(R14)
	209	[3462]	RETURN   	R0 1 ; return 

function #88 <?:3464,3489> (58 instructions, 232 bytes at 0000021136119BE0)
1 param, 17 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[3465]	GETGLOBAL	R1 K0 ; R1 := mInventoryGrid
	2	[3465]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x71e9ac81]
	3	[3465]	LOADNIL  	R3 R3 ; R3 := nil
	4	[3465]	OP_LOADBOOL	R4 1 0 ; R4 := true
	5	[3465]	OP_LOADBOOL	R5 1 0 ; R5 := true
	6	[3465]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[3467]	LOADNIL  	R1 R1 ; R1 := nil
	8	[3468]	GETGLOBAL	R2 K2 ; R2 := 0xc8802016
	9	[3468]	GETGLOBAL	R3 K0 ; R3 := mInventoryGrid
	10	[3468]	GETTABLE 	R3 R3 K3 ; R3 := R3["mUnfilteredElements"]
	11	[3468]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	12	[3468]	JMP      	24 ; PC := 24
	13	[3469]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	14	[3469]	GETTABLE 	R8 R6 K5 ; R8 := R6["RawItem"]
	15	[3469]	CALL     	R7 2 2 ; R7 := R7(R8)
	16	[3469]	TEST     	R7 1 ; if R7 then PC := 24
	17	[3469]	JMP      	24 ; PC := 24
	18	[3469]	GETTABLE 	R7 R6 K5 ; R7 := R6["RawItem"]
	19	[3469]	GETTABLE 	R7 R7 K6 ; R7 := R7["UID"]
	20	[3469]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 24
	21	[3469]	JMP      	24 ; PC := 24
	22	[3470]	MOVE     	R1 R6 ; R1 := R6
	23	[3471]	JMP      	26 ; PC := 26
	24	[3468]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 13; R4 := R5 end
	25	[3472]	JMP      	13 ; PC := 13
	26	[3475]	EQ       	1 R1 K7 ; if R1 == nil then PC := 52
	27	[3475]	JMP      	52 ; PC := 52
	28	[3475]	GETTABLE 	R7 R1 K8 ; R7 := R1["mIndex"]
	29	[3475]	EQ       	1 R7 K7 ; if R7 == nil then PC := 52
	30	[3475]	JMP      	52 ; PC := 52
	31	[3476]	GETGLOBAL	R7 K2 ; R7 := 0xc8802016
	32	[3476]	GETGLOBAL	R8 K0 ; R8 := mInventoryGrid
	33	[3476]	GETTABLE 	R8 R8 K9 ; R8 := R8["mElements"]
	34	[3476]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	35	[3476]	JMP      	50 ; PC := 50
	36	[3477]	EQ       	0 R11 R1 ; if R11 ~= R1 then PC := 50
	37	[3477]	JMP      	50 ; PC := 50
	38	[3478]	GETGLOBAL	R12 K0 ; R12 := mInventoryGrid
	39	[3478]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0x967dba12]
	40	[3478]	GETTABLE 	R14 R1 K8 ; R14 := R1["mIndex"]
	41	[3478]	OP_LOADBOOL	R15 1 0 ; R15 := true
	42	[3478]	OP_LOADBOOL	R16 1 0 ; R16 := true
	43	[3478]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	44	[3479]	GETGLOBAL	R12 K0 ; R12 := mInventoryGrid
	45	[3479]	SELF     	R12 R12 K11 ; R13 := R12; R12 := R12[0x77de11fe]
	46	[3479]	GETTABLE 	R14 R1 K8 ; R14 := R1["mIndex"]
	47	[3479]	OP_LOADBOOL	R15 0 0 ; R15 := false
	48	[3479]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	49	[3480]	JMP      	52 ; PC := 52
	50	[3476]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 36; R9 := R10 end
	51	[3481]	JMP      	36 ; PC := 36
	52	[3485]	GETUPVAL 	R12 U0 ; R12 := U0
	53	[3485]	OP_LOADBOOL	R13 1 0 ; R13 := true
	54	[3485]	CALL     	R12 2 1 ; R12(R13)
	55	[3486]	GETUPVAL 	R12 U1 ; R12 := U1
	56	[3486]	CALL     	R12 1 1 ; R12()
	57	[3488]	RETURN   	R1 2 ; return R1 
	58	[3489]	RETURN   	R0 1 ; return 

function #89 <?:3491,3530> (67 instructions, 268 bytes at 000002112AD74FA0)
1 param, 11 slots, 4 upvalues, 0 locals, 26 constants, 1 function
	1	[3492]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3492]	GETGLOBAL	R2 K1 ; R2 := 0x0872c3f7
	3	[3492]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3492]	TEST     	R1 0 ; if not R1 then PC := 13
	5	[3492]	JMP      	13 ; PC := 13
	6	[3492]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[3492]	GETGLOBAL	R2 K2 ; R2 := _T
	8	[3492]	GETTABLE 	R2 R2 K3 ; R2 := R2["BackgroundMovie"]
	9	[3492]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[3492]	TEST     	R1 1 ; if R1 then PC := 13
	11	[3492]	JMP      	13 ; PC := 13
	12	[3493]	RETURN   	R0 1 ; return 
	13	[3496]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 39
	14	[3496]	JMP      	39 ; PC := 39
	15	[3497]	GETGLOBAL	R1 K5 ; R1 := mInventoryGrid
	16	[3497]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSelectedElement"]
	17	[3498]	EQ       	1 R1 K4 ; if R1 == nil then PC := 39
	18	[3498]	JMP      	39 ; PC := 39
	19	[3498]	GETTABLE 	R2 R1 K7 ; R2 := R1["RawItem"]
	20	[3498]	EQ       	1 R2 K4 ; if R2 == nil then PC := 39
	21	[3498]	JMP      	39 ; PC := 39
	22	[3499]	GETTABLE 	R2 R1 K7 ; R2 := R1["RawItem"]
	23	[3499]	GETTABLE 	R2 R2 K8 ; R2 := R2["UID"]
	24	[3500]	GETGLOBAL	R3 K9 ; R3 := 0x25d99d89
	25	[3500]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xa94e864c]
	26	[3500]	CALL     	R3 2 2 ; R3 := R3(R4)
	27	[3501]	LOADK    	R4 := 1.000000
	28	[3501]	LEN      	R5 R3 ; R5 := # R3
	29	[3501]	LOADK    	R6 := 1.000000
	30	[3501]	FORPREP  	R4 38 ; R4 -= R6; PC := 38
	31	[3502]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	32	[3502]	GETTABLE 	R8 R8 K11 ; R8 := R8["mCategoryItemId"]
	33	[3502]	GETTABLE 	R8 R8 K12 ; R8 := R8["mId"]
	34	[3502]	EQ       	0 R8 R2 ; if R8 ~= R2 then PC := 38
	35	[3502]	JMP      	38 ; PC := 38
	36	[3503]	GETTABLE 	R0 R3 R7 ; R0 := R3[R7]
	37	[3505]	JMP      	39 ; PC := 39
	38	[3501]	FORLOOP  	R4 31 ; R4 += R6; if R4 <= R5 then begin PC := 31; R7 := R4 end
	39	[3511]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 42
	40	[3511]	JMP      	42 ; PC := 42
	41	[3512]	RETURN   	R0 1 ; return 
	42	[3515]	GETUPVAL 	R8 U0 ; R8 := U0
	43	[3515]	GETTABLE 	R8 R8 K13 ; R8 := R8[0x659d451f]
	44	[3515]	GETGLOBAL	R9 K14 ; R9 := 0x0966be70
	45	[3515]	CALL     	R8 2 1 ; R8(R9)
	46	[3517]	GETGLOBAL	R8 K2 ; R8 := _T
	47	[3525]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	48	[3525]	GETUPVAL 	R0 U1 ; R0 := U1
	49	[3525]	GETUPVAL 	R0 U2 ; R0 := U2
	50	[3525]	GETUPVAL 	R0 U3 ; R0 := U3
	51	[3525]	MOVE     	R0 R0 ; R0 := R0
	52	[3525]	SETTABLE 	R8 K15 R9 ; R8["OnContributionMade"] := R9
	53	[3527]	GETGLOBAL	R8 K2 ; R8 := _T
	54	[3527]	NEWTABLE 	R9 0 4 ; R9 := {}
	55	[3527]	GETTABLE 	R10 R0 K18 ; R10 := R0["mItemType"]
	56	[3527]	SETTABLE 	R9 K17 R10 ; R9["Recipe"] := R10
	57	[3527]	SETTABLE 	R9 K19 R0 ; R9["mTechItem"] := R0
	58	[3527]	SETTABLE 	R9 K20 K15 ; R9["mCallback"] := "OnContributionMade"
	59	[3527]	SETTABLE 	R9 K21 K22 ; R9["mSkipContributeSuccessMsg"] := true
	60	[3527]	SETTABLE 	R8 K16 R9 ; R8["mSelectedElementForContribution"] := R9
	61	[3528]	GETGLOBAL	R8 K2 ; R8 := _T
	62	[3528]	SETTABLE 	R8 K23 K22 ; R8["DojoResearchContribution"] := true
	63	[3529]	GETGLOBAL	R8 K24 ; R8 := 0x9ba7909f
	64	[3529]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x6dd7aa66]
	65	[3529]	GETGLOBAL	R10 K1 ; R10 := 0x0872c3f7
	66	[3529]	CALL     	R8 3 1 ; R8(R9,R10)
	67	[3530]	RETURN   	R0 1 ; return 

function #90 <?:3532,3540> (17 instructions, 68 bytes at 000002111F5D9700)
2 params, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[3533]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3533]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[3533]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[3533]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3533]	TEST     	R2 1 ; if R2 then PC := 13
	6	[3533]	JMP      	13 ; PC := 13
	7	[3534]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[3534]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[3534]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[3534]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[3534]	LOADK    	R5 K5 ; R5 := "0"
	12	[3534]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[3537]	TEST     	R0 0 ; if not R0 then PC := 17
	14	[3537]	JMP      	17 ; PC := 17
	15	[3538]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[3538]	SETGLOBALHASH	R2 K6 ; mQueueContributionScreen := R2
	17	[3540]	RETURN   	R0 1 ; return 

function #91 <?:3542,3551> (33 instructions, 132 bytes at 000002111A8ABE60)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[3543]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3543]	MOVE     	R2 R0 ; R2 := R0
	3	[3543]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3543]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[3543]	JMP      	33 ; PC := 33
	6	[3544]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3544]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3545]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[3545]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[3545]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[3545]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3545]	TEST     	R2 1 ; if R2 then PC := 20
	13	[3545]	JMP      	20 ; PC := 20
	14	[3546]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[3546]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[3546]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[3546]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[3546]	LOADK    	R5 K10 ; R5 := "2"
	19	[3546]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[3549]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[3549]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[3549]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[3549]	LOADK    	R5 K14 ; R5 := "InstantFinish"
	24	[3549]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[3549]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[3549]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[3549]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[3549]	LOADK    	R8 K17 ; R8 := "OnTechClaimed"
	29	[3549]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[3549]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[3549]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[3549]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[3551]	RETURN   	R0 1 ; return 

function #92 <?:3553,3569> (47 instructions, 188 bytes at 000002112449F3B0)
0 params, 8 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[3554]	GETGLOBAL	R0 K0 ; R0 := mInventoryGrid
	2	[3554]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[3556]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	4	[3556]	GETTABLE 	R2 R0 K3 ; R2 := R0["SalvageRecipe"]
	5	[3556]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[3556]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[3556]	JMP      	9 ; PC := 9
	8	[3557]	RETURN   	R0 1 ; return 
	9	[3560]	GETGLOBAL	R1 K4 ; R1 := 0x25d99d89
	10	[3560]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x25a6e75e]
	11	[3560]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[3560]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xbadb2a78]
	13	[3560]	GETGLOBAL	R3 K7 ; R3 := 0x19bd9dce
	14	[3560]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[3560]	LE       	0 R1 K8 ; if R1 > 0.000000 then PC := 31
	16	[3560]	JMP      	31 ; PC := 31
	17	[3561]	GETGLOBAL	R1 K9 ; R1 := 0x603636ad
	18	[3561]	LOADK    	R2 K10 ; R2 := "/Lotus/Language/Railjack/InstantRepairSalvageNoFunds"
	19	[3561]	NEWTABLE 	R3 0 1 ; R3 := {}
	20	[3561]	GETGLOBAL	R4 K9 ; R4 := 0x603636ad
	21	[3561]	LOADK    	R5 K12 ; R5 := "/Lotus/Language/Railjack/InstantRepairSalvageItem"
	22	[3561]	NEWTABLE 	R6 0 0 ; R6 := {}
	23	[3561]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	24	[3561]	SETTABLE 	R3 K11 R4 ; R3["CONSUME_TYPE"] := R4
	25	[3561]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	26	[3562]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[3562]	GETTABLE 	R2 R2 K13 ; R2 := R2[0xe0cba3ca]
	28	[3562]	MOVE     	R3 R1 ; R3 := R1
	29	[3562]	CALL     	R2 2 1 ; R2(R3)
	30	[3563]	RETURN   	R0 1 ; return 
	31	[3566]	GETGLOBAL	R2 K9 ; R2 := 0x603636ad
	32	[3566]	LOADK    	R3 K14 ; R3 := "/Lotus/Language/Railjack/InstantRepairSalvageConfirm"
	33	[3566]	NEWTABLE 	R4 0 2 ; R4 := {}
	34	[3566]	GETGLOBAL	R5 K9 ; R5 := 0x603636ad
	35	[3566]	LOADK    	R6 K12 ; R6 := "/Lotus/Language/Railjack/InstantRepairSalvageItem"
	36	[3566]	NEWTABLE 	R7 0 0 ; R7 := {}
	37	[3566]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	38	[3566]	SETTABLE 	R4 K11 R5 ; R4["CONSUME_TYPE"] := R5
	39	[3566]	GETTABLE 	R5 R0 K16 ; R5 := R0["Name"]
	40	[3566]	SETTABLE 	R4 K15 R5 ; R4["ITEM_TYPE"] := R5
	41	[3566]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	42	[3568]	GETUPVAL 	R3 U0 ; R3 := U0
	43	[3568]	GETTABLE 	R3 R3 K17 ; R3 := R3[0xf616a184]
	44	[3568]	MOVE     	R4 R2 ; R4 := R2
	45	[3568]	LOADK    	R5 K18 ; R5 := "InstantRepairConfirm"
	46	[3568]	CALL     	R3 3 1 ; R3(R4,R5)
	47	[3569]	RETURN   	R0 1 ; return 

function #93 <?:3571,3578> (16 instructions, 64 bytes at 0000021125FDF2E0)
1 param, 7 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3572]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[3572]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xa94e864c]
	3	[3572]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3573]	LOADK    	R2 := 1.000000
	5	[3573]	LEN      	R3 R1 ; R3 := # R1
	6	[3573]	LOADK    	R4 := 1.000000
	7	[3573]	FORPREP  	R2 15 ; R2 -= R4; PC := 15
	8	[3574]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	9	[3574]	GETTABLE 	R6 R6 K2 ; R6 := R6["mCategoryItemId"]
	10	[3574]	GETTABLE 	R6 R6 K3 ; R6 := R6["mId"]
	11	[3574]	EQ       	0 R6 R0 ; if R6 ~= R0 then PC := 15
	12	[3574]	JMP      	15 ; PC := 15
	13	[3575]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	14	[3575]	RETURN   	R6 2 ; return R6 
	15	[3573]	FORLOOP  	R2 8 ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
	16	[3578]	RETURN   	R0 1 ; return 

function #94 <?:3580,3603> (56 instructions, 224 bytes at 000002112F024C90)
0 params, 11 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[3581]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3581]	GETGLOBAL	R1 K1 ; R1 := 0x0872c3f7
	3	[3581]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3581]	TEST     	R0 0 ; if not R0 then PC := 13
	5	[3581]	JMP      	13 ; PC := 13
	6	[3581]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[3581]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[3581]	GETTABLE 	R1 R1 K3 ; R1 := R1["BackgroundMovie"]
	9	[3581]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[3581]	TEST     	R0 1 ; if R0 then PC := 13
	11	[3581]	JMP      	13 ; PC := 13
	12	[3582]	RETURN   	R0 1 ; return 
	13	[3585]	GETGLOBAL	R0 K4 ; R0 := mInventoryGrid
	14	[3585]	GETTABLE 	R0 R0 K5 ; R0 := R0["mSelectedElement"]
	15	[3587]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	16	[3587]	GETTABLE 	R2 R0 K6 ; R2 := R0["SalvageRecipe"]
	17	[3587]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[3587]	TEST     	R1 0 ; if not R1 then PC := 21
	19	[3587]	JMP      	21 ; PC := 21
	20	[3588]	RETURN   	R0 1 ; return 
	21	[3591]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[3591]	GETTABLE 	R2 R0 K7 ; R2 := R0["RawItem"]
	23	[3591]	GETTABLE 	R2 R2 K8 ; R2 := R2["UID"]
	24	[3591]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[3593]	EQ       	0 R1 K9 ; if R1 ~= nil then PC := 53
	26	[3593]	JMP      	53 ; PC := 53
	27	[3594]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	28	[3594]	GETGLOBAL	R3 K2 ; R3 := _T
	29	[3594]	GETTABLE 	R3 R3 K3 ; R3 := R3["BackgroundMovie"]
	30	[3594]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[3594]	TEST     	R2 1 ; if R2 then PC := 39
	32	[3594]	JMP      	39 ; PC := 39
	33	[3595]	GETGLOBAL	R2 K2 ; R2 := _T
	34	[3595]	GETTABLE 	R2 R2 K3 ; R2 := R2["BackgroundMovie"]
	35	[3595]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xe4162eed]
	36	[3595]	LOADK    	R4 K11 ; R4 := "ShowBlockingMessage"
	37	[3595]	LOADK    	R5 K12 ; R5 := "2"
	38	[3595]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	39	[3598]	GETGLOBAL	R2 K13 ; R2 := 0x25d99d89
	40	[3598]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xf2ecd169]
	41	[3598]	GETTABLE 	R4 R0 K6 ; R4 := R0["SalvageRecipe"]
	42	[3598]	LOADK    	R5 K15 ; R5 := "Start"
	43	[3598]	LOADK    	R6 K16 ; R6 := "Personal"
	44	[3598]	GETGLOBAL	R7 K13 ; R7 := 0x25d99d89
	45	[3598]	SELF     	R7 R7 K17 ; R8 := R7; R7 := R7[0x713ce380]
	46	[3598]	CALL     	R7 2 2 ; R7 := R7(R8)
	47	[3598]	LOADK    	R8 K18 ; R8 := "OnTechStarted"
	48	[3598]	GETTABLE 	R9 R0 K19 ; R9 := R0["Category"]
	49	[3598]	GETTABLE 	R10 R0 K7 ; R10 := R0["RawItem"]
	50	[3598]	GETTABLE 	R10 R10 K8 ; R10 := R10["UID"]
	51	[3598]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	52	[3599]	RETURN   	R0 1 ; return 
	53	[3602]	GETUPVAL 	R2 U1 ; R2 := U1
	54	[3602]	MOVE     	R3 R1 ; R3 := R1
	55	[3602]	CALL     	R2 2 1 ; R2(R3)
	56	[3603]	RETURN   	R0 1 ; return 

function #95 <?:3605,3630> (49 instructions, 196 bytes at 0000021124C2CFB0)
2 params, 7 slots, 5 upvalues, 0 locals, 18 constants, 0 functions
	1	[3606]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3606]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[3606]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[3606]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3606]	TEST     	R2 1 ; if R2 then PC := 13
	6	[3606]	JMP      	13 ; PC := 13
	7	[3607]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[3607]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[3607]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[3607]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[3607]	LOADK    	R5 K5 ; R5 := "0"
	12	[3607]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[3610]	TEST     	R0 0 ; if not R0 then PC := 49
	14	[3610]	JMP      	49 ; PC := 49
	15	[3611]	LOADNIL  	R2 R2 ; R2 := nil
	16	[3612]	GETGLOBAL	R3 K6 ; R3 := cjson
	17	[3612]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x7ab914d8]
	18	[3612]	MOVE     	R4 R1 ; R4 := R1
	19	[3612]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[3613]	GETTABLE 	R4 R3 K8 ; R4 := R3["inventoryChanges"]
	21	[3613]	EQ       	1 R4 K9 ; if R4 == nil then PC := 40
	22	[3613]	JMP      	40 ; PC := 40
	23	[3614]	LOADNIL  	R4 R4 ; R4 := nil
	24	[3615]	GETGLOBAL	R5 K10 ; R5 := mActiveState
	25	[3615]	GETUPVAL 	R6 U0 ; R6 := U0
	26	[3615]	GETTABLE 	R6 R6 K11 ; R6 := R6["WEAPON_INV"]
	27	[3615]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 33
	28	[3615]	JMP      	33 ; PC := 33
	29	[3616]	GETTABLE 	R5 R3 K8 ; R5 := R3["inventoryChanges"]
	30	[3616]	GETTABLE 	R5 R5 K12 ; R5 := R5["CrewShipWeapons"]
	31	[3616]	GETTABLE 	R4 R5 K13 ; R4 := R5[1.000000]
	32	[3616]	JMP      	36 ; PC := 36
	33	[3618]	GETTABLE 	R5 R3 K8 ; R5 := R3["inventoryChanges"]
	34	[3618]	GETTABLE 	R5 R5 K14 ; R5 := R5["CrewShipWeaponSkins"]
	35	[3618]	GETTABLE 	R4 R5 K13 ; R4 := R5[1.000000]
	36	[3620]	EQ       	1 R4 K9 ; if R4 == nil then PC := 40
	37	[3620]	JMP      	40 ; PC := 40
	38	[3621]	GETTABLE 	R5 R4 K15 ; R5 := R4["ItemId"]
	39	[3621]	GETTABLE 	R2 R5 K16 ; R2 := R5["$oid"]
	40	[3625]	GETUPVAL 	R5 U1 ; R5 := U1
	41	[3625]	GETUPVAL 	R6 U2 ; R6 := U2
	42	[3625]	GETTABLE 	R6 R6 K17 ; R6 := R6["REPAIR"]
	43	[3625]	CALL     	R5 2 1 ; R5(R6)
	44	[3627]	GETUPVAL 	R5 U3 ; R5 := U3
	45	[3627]	MOVE     	R6 R2 ; R6 := R2
	46	[3627]	CALL     	R5 2 1 ; R5(R6)
	47	[3628]	GETUPVAL 	R5 U4 ; R5 := U4
	48	[3628]	CALL     	R5 1 1 ; R5()
	49	[3630]	RETURN   	R0 1 ; return 

function #96 <?:3632,3642> (33 instructions, 132 bytes at 000002111BD18C10)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[3633]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3633]	MOVE     	R2 R0 ; R2 := R0
	3	[3633]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3633]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[3633]	JMP      	33 ; PC := 33
	6	[3634]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3634]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3636]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[3636]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[3636]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[3636]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3636]	TEST     	R2 1 ; if R2 then PC := 20
	13	[3636]	JMP      	20 ; PC := 20
	14	[3637]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[3637]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[3637]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[3637]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[3637]	LOADK    	R5 K10 ; R5 := "2"
	19	[3637]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[3640]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[3640]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[3640]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[3640]	LOADK    	R5 K14 ; R5 := "Rush"
	24	[3640]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[3640]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[3640]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[3640]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[3640]	LOADK    	R8 K17 ; R8 := "OnTechClaimed"
	29	[3640]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[3640]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[3640]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[3640]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[3642]	RETURN   	R0 1 ; return 

function #97 <?:3644,3654> (33 instructions, 132 bytes at 00000211295ED820)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[3645]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3645]	MOVE     	R2 R0 ; R2 := R0
	3	[3645]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3645]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[3645]	JMP      	33 ; PC := 33
	6	[3646]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[3646]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[3648]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[3648]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[3648]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[3648]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3648]	TEST     	R2 1 ; if R2 then PC := 20
	13	[3648]	JMP      	20 ; PC := 20
	14	[3649]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[3649]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[3649]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[3649]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[3649]	LOADK    	R5 K10 ; R5 := "2"
	19	[3649]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[3652]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[3652]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[3652]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[3652]	LOADK    	R5 K14 ; R5 := "Buy"
	24	[3652]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[3652]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[3652]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[3652]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[3652]	LOADK    	R8 K17 ; R8 := "OnTechClaimed"
	29	[3652]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[3652]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[3652]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[3652]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[3654]	RETURN   	R0 1 ; return 

function #98 <?:3656,3681> (77 instructions, 308 bytes at 000002111D8A3260)
2 params, 10 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[3657]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[3657]	SETGLOBALHASH	R2 K0 ; mInputBlocked := R2
	3	[3658]	LOADNIL  	R2 R2 ; R2 := nil
	4	[3658]	SETGLOBALHASH	R2 K1 ; mBinToExpand := R2
	5	[3659]	LOADNIL  	R2 R2 ; R2 := nil
	6	[3659]	SETGLOBALHASH	R2 K2 ; mWebCmd := R2
	7	[3661]	TEST     	R0 0 ; if not R0 then PC := 73
	8	[3661]	JMP      	73 ; PC := 73
	9	[3662]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[3662]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x659d451f]
	11	[3662]	GETGLOBAL	R3 K4 ; R3 := 0x0032441c
	12	[3662]	GETTABLE 	R3 R3 K5 ; R3 := R3["UISound_Purchase"]
	13	[3662]	CALL     	R2 2 1 ; R2(R3)
	14	[3664]	GETGLOBAL	R2 K6 ; R2 := 0x25d99d89
	15	[3664]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x25a6e75e]
	16	[3664]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[3665]	GETGLOBAL	R3 K8 ; R3 := 0xae91e43b
	18	[3665]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x42b04007]
	19	[3665]	LOADK    	R5 K10 ; R5 := "/Lotus/Language/Menu/Crafting_SlotPurchased"
	20	[3665]	OP_LOADBOOL	R6 0 0 ; R6 := false
	21	[3665]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	22	[3665]	LOADK    	R4 K11 ; R4 := "\r\n"
	23	[3665]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	24	[3666]	GETGLOBAL	R4 K12 ; R4 := mRushPrice
	25	[3666]	GETTABLE 	R5 R2 K13 ; R5 := R2["mPremiumCredits"]
	26	[3666]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 40
	27	[3666]	JMP      	40 ; PC := 40
	28	[3667]	MOVE     	R4 R3 ; R4 := R3
	29	[3667]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	30	[3667]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x42b04007]
	31	[3667]	LOADK    	R7 K14 ; R7 := "/Lotus/Language/Railjack/RushSalvage_InsufficientPlatinum"
	32	[3667]	OP_LOADBOOL	R8 0 0 ; R8 := false
	33	[3667]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	34	[3667]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	35	[3668]	GETUPVAL 	R4 U0 ; R4 := U0
	36	[3668]	GETTABLE 	R4 R4 K15 ; R4 := R4[0xe0cba3ca]
	37	[3668]	MOVE     	R5 R3 ; R5 := R3
	38	[3668]	CALL     	R4 2 1 ; R4(R5)
	39	[3668]	JMP      	77 ; PC := 77
	40	[3669]	GETGLOBAL	R4 K12 ; R4 := mRushPrice
	41	[3669]	LT       	0 K16 R4 ; if 0.000000 >= R4 then PC := 60
	42	[3669]	JMP      	60 ; PC := 60
	43	[3670]	GETGLOBAL	R4 K8 ; R4 := 0xae91e43b
	44	[3670]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x42b04007]
	45	[3670]	LOADK    	R6 K17 ; R6 := "/Lotus/Language/Railjack/RushSalvage"
	46	[3670]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[3670]	NEWTABLE 	R8 0 1 ; R8 := {}
	48	[3670]	GETGLOBAL	R9 K12 ; R9 := mRushPrice
	49	[3670]	SETTABLE 	R8 K18 R9 ; R8[0xf12faaed] := R9
	50	[3670]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	51	[3671]	MOVE     	R5 R3 ; R5 := R3
	52	[3671]	MOVE     	R6 R4 ; R6 := R4
	53	[3671]	CONCAT   	R3 R5 R6 ; R3 := R5 .. R6
	54	[3673]	GETUPVAL 	R5 U0 ; R5 := U0
	55	[3673]	GETTABLE 	R5 R5 K19 ; R5 := R5[0xf616a184]
	56	[3673]	MOVE     	R6 R3 ; R6 := R3
	57	[3673]	LOADK    	R7 K20 ; R7 := "RushConfirm"
	58	[3673]	CALL     	R5 3 1 ; R5(R6,R7)
	59	[3673]	JMP      	77 ; PC := 77
	60	[3675]	MOVE     	R5 R3 ; R5 := R3
	61	[3675]	GETGLOBAL	R6 K8 ; R6 := 0xae91e43b
	62	[3675]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x42b04007]
	63	[3675]	LOADK    	R8 K21 ; R8 := "/Lotus/Language/Railjack/ClaimSalvage"
	64	[3675]	OP_LOADBOOL	R9 0 0 ; R9 := false
	65	[3675]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	66	[3675]	CONCAT   	R3 R5 R6 ; R3 := R5 .. R6
	67	[3676]	GETUPVAL 	R5 U0 ; R5 := U0
	68	[3676]	GETTABLE 	R5 R5 K19 ; R5 := R5[0xf616a184]
	69	[3676]	MOVE     	R6 R3 ; R6 := R3
	70	[3676]	LOADK    	R7 K22 ; R7 := "ClaimConfirm"
	71	[3676]	CALL     	R5 3 1 ; R5(R6,R7)
	72	[3677]	JMP      	77 ; PC := 77
	73	[3679]	GETUPVAL 	R5 U0 ; R5 := U0
	74	[3679]	GETTABLE 	R5 R5 K15 ; R5 := R5[0xe0cba3ca]
	75	[3679]	LOADK    	R6 K23 ; R6 := "/Lotus/Language/Menu/PurchaseFailure"
	76	[3679]	CALL     	R5 2 1 ; R5(R6)
	77	[3681]	RETURN   	R0 1 ; return 

function #99 <?:3683,3717> (150 instructions, 600 bytes at 000002113544D7C0)
1 param, 12 slots, 0 upvalues, 0 locals, 46 constants, 0 functions
	1	[3684]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3684]	MOVE     	R2 R0 ; R2 := R0
	3	[3684]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3684]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 107
	5	[3684]	JMP      	107 ; PC := 107
	6	[3685]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	7	[3685]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x25a6e75e]
	8	[3685]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[3686]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	10	[3686]	GETGLOBAL	R3 K6 ; R3 := 0xcb79539e
	11	[3686]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3686]	TEST     	R2 1 ; if R2 then PC := 48
	13	[3686]	JMP      	48 ; PC := 48
	14	[3687]	GETGLOBAL	R2 K7 ; R2 := mRushPrice
	15	[3687]	LT       	0 K8 R2 ; if 0.000000 >= R2 then PC := 33
	16	[3687]	JMP      	33 ; PC := 33
	17	[3688]	GETGLOBAL	R2 K6 ; R2 := 0xcb79539e
	18	[3688]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x8b8fb8b7]
	19	[3688]	GETGLOBAL	R4 K10 ; R4 := 0x0469f296
	20	[3688]	LOADK    	R5 K11 ; R5 := "SLOT_PROMPT_POPUP"
	21	[3688]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[3688]	LOADK    	R5 K12 ; R5 := "PersonalTech_Rush_"
	23	[3688]	GETGLOBAL	R6 K13 ; R6 := 0x7f5022cf
	24	[3688]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x66edf04f]
	25	[3688]	LOADK    	R7 K15 ; R7 := "REPAIRED_SALVAGE_SLOT"
	26	[3688]	LOADK    	R8 K16 ; R8 := " "
	27	[3688]	LOADK    	R9 K17 ; R9 := "_"
	28	[3688]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	29	[3688]	LOADK    	R7 K18 ; R7 := "_Purchase"
	30	[3688]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	31	[3688]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	32	[3688]	JMP      	48 ; PC := 48
	33	[3690]	GETGLOBAL	R2 K6 ; R2 := 0xcb79539e
	34	[3690]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x8b8fb8b7]
	35	[3690]	GETGLOBAL	R4 K10 ; R4 := 0x0469f296
	36	[3690]	LOADK    	R5 K11 ; R5 := "SLOT_PROMPT_POPUP"
	37	[3690]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[3690]	LOADK    	R5 K19 ; R5 := "PersonalTech_Claim_"
	39	[3690]	GETGLOBAL	R6 K13 ; R6 := 0x7f5022cf
	40	[3690]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x66edf04f]
	41	[3690]	LOADK    	R7 K15 ; R7 := "REPAIRED_SALVAGE_SLOT"
	42	[3690]	LOADK    	R8 K16 ; R8 := " "
	43	[3690]	LOADK    	R9 K17 ; R9 := "_"
	44	[3690]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	45	[3690]	LOADK    	R7 K18 ; R7 := "_Purchase"
	46	[3690]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	47	[3690]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	48	[3693]	GETTABLE 	R2 R1 K20 ; R2 := R1["mPremiumCredits"]
	49	[3693]	GETGLOBAL	R3 K21 ; R3 := 0xa94df70b
	50	[3693]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xd8cdfe4e]
	51	[3693]	GETGLOBAL	R5 K23 ; R5 := mBinToExpand
	52	[3693]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	53	[3693]	LT       	0 R2 R3 ; if R2 >= R3 then PC := 90
	54	[3693]	JMP      	90 ; PC := 90
	55	[3694]	GETGLOBAL	R2 K24 ; R2 := 0xae91e43b
	56	[3694]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x42b04007]
	57	[3694]	LOADK    	R4 K26 ; R4 := "/Lotus/Language/Menu/Global_InsufficientPlatinum"
	58	[3694]	OP_LOADBOOL	R5 1 0 ; R5 := true
	59	[3694]	NEWTABLE 	R6 0 1 ; R6 := {}
	60	[3694]	GETGLOBAL	R7 K24 ; R7 := 0xae91e43b
	61	[3694]	SELF     	R7 R7 K25 ; R8 := R7; R7 := R7[0x42b04007]
	62	[3694]	LOADK    	R9 K28 ; R9 := "/Lotus/Language/Menu/ItemInventory_SlotsSalvage"
	63	[3694]	OP_LOADBOOL	R10 1 0 ; R10 := true
	64	[3694]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	65	[3694]	SETTABLE 	R6 K27 R7 ; R6["ITEM"] := R7
	66	[3694]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	67	[3695]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	68	[3695]	GETGLOBAL	R4 K29 ; R4 := _T
	69	[3695]	GETTABLE 	R4 R4 K30 ; R4 := R4["BackgroundMovie"]
	70	[3695]	CALL     	R3 2 2 ; R3 := R3(R4)
	71	[3695]	TEST     	R3 1 ; if R3 then PC := 85
	72	[3695]	JMP      	85 ; PC := 85
	73	[3696]	GETGLOBAL	R3 K29 ; R3 := _T
	74	[3696]	GETTABLE 	R3 R3 K30 ; R3 := R3["BackgroundMovie"]
	75	[3696]	SELF     	R3 R3 K31 ; R4 := R3; R3 := R3[0xf56f3887]
	76	[3696]	LOADK    	R5 K32 ; R5 := "ShowInsufficientFundsPopup"
	77	[3696]	NEWTABLE 	R6 5 0 ; R6 := {}
	78	[3696]	LOADK    	R7 K33 ; R7 := "Platinum"
	79	[3696]	LOADK    	R8 K34 ; R8 := "0"
	80	[3696]	MOVE     	R9 R2 ; R9 := R2
	81	[3696]	LOADK    	R10 K35 ; R10 := "true"
	82	[3696]	LOADK    	R11 K36 ; R11 := "CREW_SHIP_SALVAGE_SLOT"
	83	[3696]	SETLIST  	R6 5 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 5
	84	[3696]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	85	[3698]	OP_LOADBOOL	R3 0 0 ; R3 := false
	86	[3698]	SETGLOBALHASH	R3 K37 ; mInputBlocked := R3
	87	[3699]	LOADNIL  	R3 R3 ; R3 := nil
	88	[3699]	SETGLOBALHASH	R3 K23 ; mBinToExpand := R3
	89	[3699]	JMP      	150 ; PC := 150
	90	[3701]	GETGLOBAL	R3 K38 ; R3 := 0x60cce7b4
	91	[3701]	GETGLOBAL	R4 K39 ; R4 := mWebCmd
	92	[3701]	EQ       	1 R4 K40 ; if R4 == nil then PC := 95
	93	[3701]	JMP      	95 ; PC := 95
	94	[3701]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 95
	95	[3701]	OP_LOADBOOL	R4 1 0 ; R4 := true
	96	[3701]	CALL     	R3 2 1 ; R3(R4)
	97	[3702]	GETGLOBAL	R3 K41 ; R3 := 0x6c97a788
	98	[3702]	GETTABLE 	R3 R3 K42 ; R3 := R3[0x2c6cc890]
	99	[3702]	GETGLOBAL	R4 K23 ; R4 := mBinToExpand
	100	[3702]	LOADK    	R5 K43 ; R5 := "OnSlotsResults"
	101	[3702]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	102	[3702]	SETGLOBALHASH	R3 K39 ; mWebCmd := R3
	103	[3703]	GETGLOBAL	R3 K39 ; R3 := mWebCmd
	104	[3703]	SELF     	R3 R3 K44 ; R4 := R3; R3 := R3[0xe4162eed]
	105	[3703]	CALL     	R3 2 1 ; R3(R4)
	106	[3704]	JMP      	150 ; PC := 150
	107	[3706]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	108	[3706]	GETGLOBAL	R4 K6 ; R4 := 0xcb79539e
	109	[3706]	CALL     	R3 2 2 ; R3 := R3(R4)
	110	[3706]	TEST     	R3 1 ; if R3 then PC := 146
	111	[3706]	JMP      	146 ; PC := 146
	112	[3707]	GETGLOBAL	R3 K7 ; R3 := mRushPrice
	113	[3707]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 131
	114	[3707]	JMP      	131 ; PC := 131
	115	[3708]	GETGLOBAL	R3 K6 ; R3 := 0xcb79539e
	116	[3708]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x8b8fb8b7]
	117	[3708]	GETGLOBAL	R5 K10 ; R5 := 0x0469f296
	118	[3708]	LOADK    	R6 K11 ; R6 := "SLOT_PROMPT_POPUP"
	119	[3708]	CALL     	R5 2 2 ; R5 := R5(R6)
	120	[3708]	LOADK    	R6 K12 ; R6 := "PersonalTech_Rush_"
	121	[3708]	GETGLOBAL	R7 K13 ; R7 := 0x7f5022cf
	122	[3708]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x66edf04f]
	123	[3708]	LOADK    	R8 K15 ; R8 := "REPAIRED_SALVAGE_SLOT"
	124	[3708]	LOADK    	R9 K16 ; R9 := " "
	125	[3708]	LOADK    	R10 K17 ; R10 := "_"
	126	[3708]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	127	[3708]	LOADK    	R8 K45 ; R8 := "_Cancel"
	128	[3708]	CONCAT   	R6 R6 R8 ; R6 := R6 .. R7 .. R8
	129	[3708]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	130	[3708]	JMP      	146 ; PC := 146
	131	[3710]	GETGLOBAL	R3 K6 ; R3 := 0xcb79539e
	132	[3710]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x8b8fb8b7]
	133	[3710]	GETGLOBAL	R5 K10 ; R5 := 0x0469f296
	134	[3710]	LOADK    	R6 K11 ; R6 := "SLOT_PROMPT_POPUP"
	135	[3710]	CALL     	R5 2 2 ; R5 := R5(R6)
	136	[3710]	LOADK    	R6 K19 ; R6 := "PersonalTech_Claim_"
	137	[3710]	GETGLOBAL	R7 K13 ; R7 := 0x7f5022cf
	138	[3710]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x66edf04f]
	139	[3710]	LOADK    	R8 K15 ; R8 := "REPAIRED_SALVAGE_SLOT"
	140	[3710]	LOADK    	R9 K16 ; R9 := " "
	141	[3710]	LOADK    	R10 K17 ; R10 := "_"
	142	[3710]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	143	[3710]	LOADK    	R8 K45 ; R8 := "_Cancel"
	144	[3710]	CONCAT   	R6 R6 R8 ; R6 := R6 .. R7 .. R8
	145	[3710]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	146	[3714]	OP_LOADBOOL	R3 0 0 ; R3 := false
	147	[3714]	SETGLOBALHASH	R3 K37 ; mInputBlocked := R3
	148	[3715]	LOADNIL  	R3 R3 ; R3 := nil
	149	[3715]	SETGLOBALHASH	R3 K23 ; mBinToExpand := R3
	150	[3717]	RETURN   	R0 1 ; return 

function #100 <?:3719,3724> (9 instructions, 36 bytes at 000002111F5505E0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[3720]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3720]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x2dcaf529]
	3	[3720]	MOVE     	R2 R0 ; R2 := R0
	4	[3720]	CALL     	R1 2 1 ; R1(R2)
	5	[3722]	OP_LOADBOOL	R1 0 0 ; R1 := false
	6	[3722]	SETGLOBALHASH	R1 K1 ; mInputBlocked := R1
	7	[3723]	LOADNIL  	R1 R1 ; R1 := nil
	8	[3723]	SETGLOBALHASH	R1 K2 ; mBinToExpand := R1
	9	[3724]	RETURN   	R0 1 ; return 

function #101 <?:3726,3760> (100 instructions, 400 bytes at 0000021130DFB040)
1 param, 15 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[3727]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[3727]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[3728]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[3728]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xc10bb642]
	5	[3728]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	6	[3728]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x25a6e75e]
	7	[3728]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[3728]	GETGLOBAL	R3 K4 ; R3 := mBinToExpand
	9	[3728]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[3728]	TEST     	R1 1 ; if R1 then PC := 17
	11	[3728]	JMP      	17 ; PC := 17
	12	[3729]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[3729]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x7aef8b7f]
	14	[3729]	LOADK    	R2 K6 ; R2 := "OnInvalidBinError"
	15	[3729]	CALL     	R1 2 1 ; R1(R2)
	16	[3730]	RETURN   	R0 1 ; return 
	17	[3733]	LOADK    	R1 K7 ; R1 := "\r\n"
	18	[3735]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	19	[3735]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x42b04007]
	20	[3735]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Menu/ItemInventory_SlotsSalvage"
	21	[3735]	OP_LOADBOOL	R5 1 0 ; R5 := true
	22	[3735]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	23	[3736]	GETGLOBAL	R3 K11 ; R3 := 0xa94df70b
	24	[3736]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x4ddd3d6e]
	25	[3736]	GETGLOBAL	R5 K4 ; R5 := mBinToExpand
	26	[3736]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[3737]	GETGLOBAL	R4 K11 ; R4 := 0xa94df70b
	28	[3737]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0xd8cdfe4e]
	29	[3737]	GETGLOBAL	R6 K4 ; R6 := mBinToExpand
	30	[3737]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[3739]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	32	[3739]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x42b04007]
	33	[3739]	LOADK    	R7 K14 ; R7 := "/Lotus/Language/Menu/Crafting_InsufficientInventorySpace"
	34	[3739]	OP_LOADBOOL	R8 1 0 ; R8 := true
	35	[3739]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	36	[3740]	GETGLOBAL	R6 K8 ; R6 := 0xae91e43b
	37	[3740]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x42b04007]
	38	[3740]	LOADK    	R8 K15 ; R8 := "/Lotus/Language/Menu/Crafting_InsufficientInventorySpaceUpSell"
	39	[3740]	OP_LOADBOOL	R9 1 0 ; R9 := true
	40	[3740]	NEWTABLE 	R10 0 3 ; R10 := {}
	41	[3740]	SETTABLE 	R10 K16 R3 ; R10["slotCount"] := R3
	42	[3740]	SETTABLE 	R10 K17 R2 ; R10["slotType"] := R2
	43	[3740]	SETTABLE 	R10 K18 R4 ; R10["cost"] := R4
	44	[3740]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	45	[3741]	LOADK    	R7 K19 ; R7 := ""
	46	[3742]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	47	[3742]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0x42b04007]
	48	[3742]	LOADK    	R10 K20 ; R10 := "/Lotus/Language/Menu/Crafting_InsufficientInventorySpaceUpSellButtonText"
	49	[3742]	OP_LOADBOOL	R11 1 0 ; R11 := true
	50	[3742]	NEWTABLE 	R12 0 1 ; R12 := {}
	51	[3742]	SETTABLE 	R12 K18 R4 ; R12["cost"] := R4
	52	[3742]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	53	[3743]	LT       	0 K21 R0 ; if 0.000000 >= R0 then PC := 79
	54	[3743]	JMP      	79 ; PC := 79
	55	[3744]	ADD      	R9 R0 R4 ; R9 := R0 + R4
	56	[3745]	GETGLOBAL	R10 K2 ; R10 := 0x25d99d89
	57	[3745]	SELF     	R10 R10 K3 ; R11 := R10; R10 := R10[0x25a6e75e]
	58	[3745]	CALL     	R10 2 2 ; R10 := R10(R11)
	59	[3745]	GETTABLE 	R10 R10 K22 ; R10 := R10["mPremiumCredits"]
	60	[3745]	LT       	0 R10 R9 ; if R10 >= R9 then PC := 71
	61	[3745]	JMP      	71 ; PC := 71
	62	[3746]	GETGLOBAL	R10 K8 ; R10 := 0xae91e43b
	63	[3746]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0x42b04007]
	64	[3746]	LOADK    	R12 K23 ; R12 := "/Lotus/Language/Railjack/Salvage_UserRushCostWarning"
	65	[3746]	OP_LOADBOOL	R13 1 0 ; R13 := true
	66	[3746]	NEWTABLE 	R14 0 1 ; R14 := {}
	67	[3746]	SETTABLE 	R14 K24 R0 ; R14["credits"] := R0
	68	[3746]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	69	[3746]	MOVE     	R7 R10 ; R7 := R10
	70	[3746]	JMP      	79 ; PC := 79
	71	[3748]	GETGLOBAL	R10 K8 ; R10 := 0xae91e43b
	72	[3748]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0x42b04007]
	73	[3748]	LOADK    	R12 K25 ; R12 := "/Lotus/Language/Railjack/Salvage_UserRushCostWarningCanAfford"
	74	[3748]	OP_LOADBOOL	R13 1 0 ; R13 := true
	75	[3748]	NEWTABLE 	R14 0 1 ; R14 := {}
	76	[3748]	SETTABLE 	R14 K24 R0 ; R14["credits"] := R0
	77	[3748]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	78	[3748]	MOVE     	R7 R10 ; R7 := R10
	79	[3751]	MOVE     	R10 R5 ; R10 := R5
	80	[3751]	MOVE     	R11 R1 ; R11 := R1
	81	[3751]	MOVE     	R12 R6 ; R12 := R6
	82	[3751]	MOVE     	R13 R1 ; R13 := R1
	83	[3751]	MOVE     	R14 R7 ; R14 := R7
	84	[3751]	CONCAT   	R5 R10 R14 ; R5 := R10 .. R11 .. R12 .. R13 .. R14
	85	[3752]	GETGLOBAL	R10 K26 ; R10 := 0x34291f5c
	86	[3752]	GETTABLE 	R10 R10 K27 ; R10 := R10[0xe27b35bb]
	87	[3752]	CALL     	R10 1 2 ; R10 := R10()
	88	[3753]	SETTABLE 	R10 K28 K29 ; R10["dialogType"] := 1.000000
	89	[3754]	SETTABLE 	R10 K30 R5 ; R10["locString"] := R5
	90	[3755]	SETTABLE 	R10 K31 R8 ; R10["firstString"] := R8
	91	[3756]	SETTABLE 	R10 K32 K33 ; R10["secondString"] := "/Menu/Confirm_Item_Cancel"
	92	[3757]	SETGLOBALHASH	R0 K34 ; mRushPrice := R0
	93	[3758]	SELF     	R11 R10 K35 ; R12 := R10; R11 := R10[0xe6ccc5b9]
	94	[3758]	LOADK    	R13 K36 ; R13 := "OnUpSellInvSlotsConfirmed"
	95	[3758]	CALL     	R11 3 1 ; R11(R12,R13)
	96	[3759]	GETUPVAL 	R11 U1 ; R11 := U1
	97	[3759]	GETTABLE 	R11 R11 K37 ; R11 := R11[0xe99b84e7]
	98	[3759]	MOVE     	R12 R10 ; R12 := R10
	99	[3759]	CALL     	R11 2 1 ; R11(R12)
	100	[3760]	RETURN   	R0 1 ; return 

function #102 <?:3762,3791> (72 instructions, 288 bytes at 0000021130DFB140)
1 param, 11 slots, 4 upvalues, 0 locals, 28 constants, 0 functions
	1	[3763]	GETGLOBAL	R1 K0 ; R1 := mInventoryGrid
	2	[3763]	GETTABLE 	R1 R1 K1 ; R1 := R1["mSelectedElement"]
	3	[3765]	LOADK    	R2 := 0.000000
	4	[3766]	TEST     	R0 0 ; if not R0 then PC := 20
	5	[3766]	JMP      	20 ; PC := 20
	6	[3767]	GETGLOBAL	R3 K2 ; R3 := 0xb009bbc6
	7	[3767]	GETTABLE 	R4 R1 K3 ; R4 := R1["SalvageRecipe"]
	8	[3767]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[3769]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[3769]	SELF     	R5 R3 K4 ; R6 := R3; R5 := R3[0x5112cc26]
	11	[3769]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[3769]	SELF     	R6 R3 K5 ; R7 := R3; R6 := R3[0xfd536ae6]
	13	[3769]	CALL     	R6 2 2 ; R6 := R6(R7)
	14	[3769]	GETGLOBAL	R7 K6 ; R7 := 0x34291f5c
	15	[3769]	GETTABLE 	R7 R7 K7 ; R7 := R7[0x397b920f]
	16	[3769]	GETTABLE 	R8 R1 K8 ; R8 := R1["SalvageTimeRemaining"]
	17	[3769]	CALL     	R7 2 0 ; R7,... := R7(R8)
	18	[3769]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	19	[3769]	MOVE     	R2 R4 ; R2 := R4
	20	[3773]	GETUPVAL 	R4 U1 ; R4 := U1
	21	[3773]	GETTABLE 	R4 R4 K9 ; R4 := R4[0x1fdb3a11]
	22	[3773]	GETTABLE 	R5 R1 K10 ; R5 := R1["Category"]
	23	[3773]	LOADK    	R6 := 1.000000
	24	[3773]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	25	[3773]	TEST     	R4 1 ; if R4 then PC := 36
	26	[3773]	JMP      	36 ; PC := 36
	27	[3774]	GETGLOBAL	R4 K12 ; R4 := 0xa94df70b
	28	[3774]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x99c4ef3a]
	29	[3774]	GETTABLE 	R6 R1 K10 ; R6 := R1["Category"]
	30	[3774]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[3774]	SETGLOBALHASH	R4 K11 ; mBinToExpand := R4
	32	[3775]	GETUPVAL 	R4 U2 ; R4 := U2
	33	[3775]	MOVE     	R5 R2 ; R5 := R2
	34	[3775]	CALL     	R4 2 1 ; R4(R5)
	35	[3776]	RETURN   	R0 1 ; return 
	36	[3779]	LT       	0 K14 R2 ; if 0.000000 >= R2 then PC := 67
	37	[3779]	JMP      	67 ; PC := 67
	38	[3780]	GETGLOBAL	R4 K15 ; R4 := 0x25d99d89
	39	[3780]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x25a6e75e]
	40	[3780]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[3781]	GETTABLE 	R5 R4 K17 ; R5 := R4["mPremiumCredits"]
	42	[3781]	LT       	0 R5 R2 ; if R5 >= R2 then PC := 54
	43	[3781]	JMP      	54 ; PC := 54
	44	[3782]	GETGLOBAL	R5 K18 ; R5 := 0xae91e43b
	45	[3782]	SELF     	R5 R5 K19 ; R6 := R5; R5 := R5[0x42b04007]
	46	[3782]	LOADK    	R7 K20 ; R7 := "/Lotus/Language/Railjack/RushSalvage_InsufficientPlatinum"
	47	[3782]	OP_LOADBOOL	R8 0 0 ; R8 := false
	48	[3782]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	49	[3783]	GETUPVAL 	R6 U3 ; R6 := U3
	50	[3783]	GETTABLE 	R6 R6 K21 ; R6 := R6[0xe0cba3ca]
	51	[3783]	MOVE     	R7 R5 ; R7 := R5
	52	[3783]	CALL     	R6 2 1 ; R6(R7)
	53	[3783]	JMP      	72 ; PC := 72
	54	[3785]	GETGLOBAL	R6 K18 ; R6 := 0xae91e43b
	55	[3785]	SELF     	R6 R6 K19 ; R7 := R6; R6 := R6[0x42b04007]
	56	[3785]	LOADK    	R8 K22 ; R8 := "/Lotus/Language/Railjack/RushSalvage"
	57	[3785]	OP_LOADBOOL	R9 1 0 ; R9 := true
	58	[3785]	NEWTABLE 	R10 0 1 ; R10 := {}
	59	[3785]	SETTABLE 	R10 K23 R2 ; R10["RUSH_COST"] := R2
	60	[3785]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	61	[3786]	GETUPVAL 	R7 U3 ; R7 := U3
	62	[3786]	GETTABLE 	R7 R7 K24 ; R7 := R7[0xf616a184]
	63	[3786]	MOVE     	R8 R6 ; R8 := R6
	64	[3786]	LOADK    	R9 K25 ; R9 := "RushConfirm"
	65	[3786]	CALL     	R7 3 1 ; R7(R8,R9)
	66	[3787]	JMP      	72 ; PC := 72
	67	[3789]	GETUPVAL 	R7 U3 ; R7 := U3
	68	[3789]	GETTABLE 	R7 R7 K24 ; R7 := R7[0xf616a184]
	69	[3789]	LOADK    	R8 K26 ; R8 := "/Lotus/Language/Railjack/ClaimSalvage"
	70	[3789]	LOADK    	R9 K27 ; R9 := "ClaimConfirm"
	71	[3789]	CALL     	R7 3 1 ; R7(R8,R9)
	72	[3791]	RETURN   	R0 1 ; return 

function #103 <?:3793,3795> (4 instructions, 16 bytes at 0000021114260F40)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3794]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3794]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[3794]	CALL     	R0 2 1 ; R0(R1)
	4	[3795]	RETURN   	R0 1 ; return 

function #104 <?:3797,3799> (4 instructions, 16 bytes at 0000021114260FD0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3798]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3798]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[3798]	CALL     	R0 2 1 ; R0(R1)
	4	[3799]	RETURN   	R0 1 ; return 

function #105 <?:3802,3817> (20 instructions, 80 bytes at 0000021114261060)
4 params, 9 slots, 1 upvalue, 0 locals, 6 constants, 1 function
	1	[3803]	GETGLOBAL	R4 K0 ; R4 := 0x5f0788c4
	2	[3803]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	3	[3803]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0x42b04007]
	4	[3803]	MOVE     	R7 R1 ; R7 := R1
	5	[3803]	OP_LOADBOOL	R8 0 0 ; R8 := false
	6	[3803]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	7	[3803]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	8	[3804]	GETGLOBAL	R5 K3 ; R5 := mTimerMgr
	9	[3804]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0xbd2e96ea]
	10	[3804]	GETUPVAL 	R7 U0 ; R7 := U0
	11	[3815]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	12	[3815]	MOVE     	R0 R4 ; R0 := R4
	13	[3815]	MOVE     	R0 R2 ; R0 := R2
	14	[3815]	MOVE     	R0 R3 ; R0 := R3
	15	[3815]	MOVE     	R0 R0 ; R0 := R0
	16	[3804]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	17	[3816]	GETUPVAL 	R5 U0 ; R5 := U0
	18	[3816]	ADD      	R5 R5 K5 ; R5 := R5 + 2.350000
	19	[3816]	SETUPVAL 	R5 U0 ; U0 := R5
	20	[3817]	RETURN   	R0 1 ; return 

function #106 <?:3819,3839> (53 instructions, 212 bytes at 0000021104213AA0)
2 params, 11 slots, 5 upvalues, 0 locals, 17 constants, 0 functions
	1	[3820]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3820]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[3820]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[3820]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3820]	TEST     	R2 1 ; if R2 then PC := 13
	6	[3820]	JMP      	13 ; PC := 13
	7	[3821]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[3821]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[3821]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[3821]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[3821]	LOADK    	R5 K5 ; R5 := "0"
	12	[3821]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[3823]	LOADNIL  	R2 R2 ; R2 := nil
	14	[3823]	SETGLOBALHASH	R2 K6 ; mWebCmd := R2
	15	[3825]	TEST     	R0 0 ; if not R0 then PC := 53
	16	[3825]	JMP      	53 ; PC := 53
	17	[3826]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[3826]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[3826]	GETTABLE 	R3 R3 K7 ; R3 := R3["SELL"]
	20	[3826]	CALL     	R2 2 1 ; R2(R3)
	21	[3827]	GETUPVAL 	R2 U2 ; R2 := U2
	22	[3827]	CALL     	R2 1 1 ; R2()
	23	[3829]	LOADK    	R2 := 0.000000
	24	[3829]	SETUPVAL 	R2 U3 ; U3 := R2
	25	[3831]	LOADK    	R2 := 1.000000
	26	[3831]	GETGLOBAL	R3 K8 ; R3 := mSellInfoItems
	27	[3831]	LEN      	R3 R3 ; R3 := # R3
	28	[3831]	LOADK    	R4 := 1.000000
	29	[3831]	FORPREP  	R2 42 ; R2 -= R4; PC := 42
	30	[3832]	GETUPVAL 	R6 U4 ; R6 := U4
	31	[3832]	GETGLOBAL	R7 K8 ; R7 := mSellInfoItems
	32	[3832]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	33	[3832]	GETTABLE 	R7 R7 K9 ; R7 := R7["StoreItem"]
	34	[3832]	GETGLOBAL	R8 K8 ; R8 := mSellInfoItems
	35	[3832]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	36	[3832]	GETTABLE 	R8 R8 K10 ; R8 := R8["Name"]
	37	[3832]	GETGLOBAL	R9 K8 ; R9 := mSellInfoItems
	38	[3832]	GETTABLE 	R9 R9 R5 ; R9 := R9[R5]
	39	[3832]	GETTABLE 	R9 R9 K11 ; R9 := R9["Count"]
	40	[3832]	LOADK    	R10 := 2.000000
	41	[3832]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	42	[3831]	FORLOOP  	R2 30 ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
	43	[3835]	GETGLOBAL	R6 K12 ; R6 := mSellInfo
	44	[3835]	GETTABLE 	R6 R6 K13 ; R6 := R6["mSellPrice"]
	45	[3835]	LT       	0 K14 R6 ; if 0.000000 >= R6 then PC := 53
	46	[3835]	JMP      	53 ; PC := 53
	47	[3836]	GETUPVAL 	R6 U4 ; R6 := U4
	48	[3836]	GETGLOBAL	R7 K15 ; R7 := 0xb7323fae
	49	[3836]	LOADK    	R8 K16 ; R8 := "/Lotus/Language/Items/FusionBundle"
	50	[3836]	GETGLOBAL	R9 K12 ; R9 := mSellInfo
	51	[3836]	GETTABLE 	R9 R9 K13 ; R9 := R9["mSellPrice"]
	52	[3836]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	53	[3839]	RETURN   	R0 1 ; return 

function #107 <?:3841,3874> (104 instructions, 416 bytes at 00000211130DFD20)
1 param, 9 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[3842]	GETGLOBAL	R1 K0 ; R1 := mScrapCount
	2	[3842]	TEST     	R1 1 ; if R1 then PC := 5
	3	[3842]	JMP      	5 ; PC := 5
	4	[3842]	LOADK    	R1 := 1.000000
	5	[3843]	LOADNIL  	R2 R2 ; R2 := nil
	6	[3843]	SETGLOBALHASH	R2 K0 ; mScrapCount := R2
	7	[3844]	LOADNIL  	R2 R2 ; R2 := nil
	8	[3844]	SETGLOBALHASH	R2 K1 ; mManifestMovie := R2
	9	[3845]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	10	[3845]	GETTABLE 	R2 R2 K3 ; R2 := R2["mSelectedElement"]
	11	[3846]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[3846]	MOVE     	R4 R0 ; R4 := R0
	13	[3846]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[3846]	EQ       	0 R3 K6 ; if R3 ~= 4.000000 then PC := 96
	15	[3846]	JMP      	96 ; PC := 96
	16	[3846]	EQ       	1 R2 K7 ; if R2 == nil then PC := 96
	17	[3846]	JMP      	96 ; PC := 96
	18	[3846]	GETTABLE 	R3 R2 K8 ; R3 := R2["SalvageState"]
	19	[3846]	GETUPVAL 	R4 U0 ; R4 := U0
	20	[3846]	GETTABLE 	R4 R4 K9 ; R4 := R4["UNIDENTIFIED"]
	21	[3846]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 25
	22	[3846]	JMP      	25 ; PC := 25
	23	[3846]	LT       	0 K10 R1 ; if 0.000000 >= R1 then PC := 96
	24	[3846]	JMP      	96 ; PC := 96
	25	[3847]	GETGLOBAL	R3 K12 ; R3 := 0x6c97a788
	26	[3847]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x8ec871cb]
	27	[3847]	CALL     	R3 1 2 ; R3 := R3()
	28	[3847]	SETGLOBALHASH	R3 K11 ; mSellInfo := R3
	29	[3848]	GETGLOBAL	R3 K11 ; R3 := mSellInfo
	30	[3848]	SETTABLE 	R3 K14 K15 ; R3["mSellCurrency"] := 2.000000
	31	[3849]	GETTABLE 	R3 R2 K16 ; R3 := R2["SellingPrice"]
	32	[3851]	GETTABLE 	R4 R2 K8 ; R4 := R2["SalvageState"]
	33	[3851]	GETUPVAL 	R5 U0 ; R5 := U0
	34	[3851]	GETTABLE 	R5 R5 K9 ; R5 := R5["UNIDENTIFIED"]
	35	[3851]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 48
	36	[3851]	JMP      	48 ; PC := 48
	37	[3852]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	38	[3852]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0x6f344425]
	39	[3852]	GETTABLE 	R6 R2 K18 ; R6 := R2["Category"]
	40	[3852]	GETTABLE 	R7 R2 K19 ; R7 := R2["RawItem"]
	41	[3852]	GETTABLE 	R7 R7 K20 ; R7 := R7["ItemType"]
	42	[3852]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0xed4e0128]
	43	[3852]	CALL     	R7 2 2 ; R7 := R7(R8)
	44	[3852]	MOVE     	R8 R1 ; R8 := R1
	45	[3852]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	46	[3853]	MUL      	R3 R3 R1 ; R3 := R3 * R1
	47	[3853]	JMP      	63 ; PC := 63
	48	[3855]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	49	[3855]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0x6f344425]
	50	[3855]	GETTABLE 	R6 R2 K18 ; R6 := R2["Category"]
	51	[3855]	GETTABLE 	R7 R2 K19 ; R7 := R2["RawItem"]
	52	[3855]	GETTABLE 	R7 R7 K22 ; R7 := R7["UID"]
	53	[3855]	LOADK    	R8 := 1.000000
	54	[3855]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	55	[3856]	GETTABLE 	R4 R2 K8 ; R4 := R2["SalvageState"]
	56	[3856]	GETUPVAL 	R5 U0 ; R5 := U0
	57	[3856]	GETTABLE 	R5 R5 K23 ; R5 := R5["OWNED"]
	58	[3856]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 63
	59	[3856]	JMP      	63 ; PC := 63
	60	[3857]	LOADK    	R3 := 0.000000
	61	[3858]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	62	[3858]	SETTABLE 	R4 K14 K6 ; R4["mSellCurrency"] := 4.000000
	63	[3862]	GETGLOBAL	R4 K11 ; R4 := mSellInfo
	64	[3862]	GETGLOBAL	R5 K11 ; R5 := mSellInfo
	65	[3862]	GETTABLE 	R5 R5 K24 ; R5 := R5["mSellPrice"]
	66	[3862]	ADD      	R5 R5 R3 ; R5 := R5 + R3
	67	[3862]	SETTABLE 	R4 K24 R5 ; R4["mSellPrice"] := R5
	68	[3863]	GETGLOBAL	R4 K25 ; R4 := 0x7b998233
	69	[3863]	GETGLOBAL	R5 K26 ; R5 := _T
	70	[3863]	GETTABLE 	R5 R5 K27 ; R5 := R5["BackgroundMovie"]
	71	[3863]	CALL     	R4 2 2 ; R4 := R4(R5)
	72	[3863]	TEST     	R4 1 ; if R4 then PC := 80
	73	[3863]	JMP      	80 ; PC := 80
	74	[3864]	GETGLOBAL	R4 K26 ; R4 := _T
	75	[3864]	GETTABLE 	R4 R4 K27 ; R4 := R4["BackgroundMovie"]
	76	[3864]	SELF     	R4 R4 K28 ; R5 := R4; R4 := R4[0xe4162eed]
	77	[3864]	LOADK    	R6 K29 ; R6 := "ShowBlockingMessage"
	78	[3864]	LOADK    	R7 K30 ; R7 := "2"
	79	[3864]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	80	[3867]	GETGLOBAL	R4 K31 ; R4 := 0x60cce7b4
	81	[3867]	GETGLOBAL	R5 K32 ; R5 := mWebCmd
	82	[3867]	EQ       	1 R5 K7 ; if R5 == nil then PC := 85
	83	[3867]	JMP      	85 ; PC := 85
	84	[3867]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 85
	85	[3867]	OP_LOADBOOL	R5 1 0 ; R5 := true
	86	[3867]	CALL     	R4 2 1 ; R4(R5)
	87	[3868]	GETGLOBAL	R4 K12 ; R4 := 0x6c97a788
	88	[3868]	GETTABLE 	R4 R4 K33 ; R4 := R4[0xa128fc07]
	89	[3868]	GETGLOBAL	R5 K11 ; R5 := mSellInfo
	90	[3868]	LOADK    	R6 K34 ; R6 := "OnSalvageSold"
	91	[3868]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	92	[3868]	SETGLOBALHASH	R4 K32 ; mWebCmd := R4
	93	[3869]	GETGLOBAL	R4 K32 ; R4 := mWebCmd
	94	[3869]	SELF     	R4 R4 K28 ; R5 := R4; R4 := R4[0xe4162eed]
	95	[3869]	CALL     	R4 2 1 ; R4(R5)
	96	[3873]	GETUPVAL 	R4 U1 ; R4 := U1
	97	[3873]	GETGLOBAL	R5 K35 ; R5 := 0xae91e43b
	98	[3873]	SELF     	R5 R5 K36 ; R6 := R5; R5 := R5[0x6b837788]
	99	[3873]	CALL     	R5 2 2 ; R5 := R5(R6)
	100	[3873]	GETGLOBAL	R6 K35 ; R6 := 0xae91e43b
	101	[3873]	SELF     	R6 R6 K37 ; R7 := R6; R6 := R6[0xaf9fda9f]
	102	[3873]	CALL     	R6 2 0 ; R6,... := R6(R7)
	103	[3873]	CALL     	R4 0 1 ; R4(R5,...)
	104	[3874]	RETURN   	R0 1 ; return 

function #108 <?:3876,3878> (4 instructions, 16 bytes at 0000021119160FC0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3877]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3877]	MOVE     	R2 R0 ; R2 := R0
	3	[3877]	CALL     	R1 2 1 ; R1(R2)
	4	[3878]	RETURN   	R0 1 ; return 

function #109 <?:3880,3897> (55 instructions, 220 bytes at 000002112AF4A240)
2 params, 10 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[3881]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	2	[3881]	MOVE     	R3 R1 ; R3 := R1
	3	[3881]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[3881]	EQ       	0 R2 K1 ; if R2 ~= 1.000000 then PC := 52
	5	[3881]	JMP      	52 ; PC := 52
	6	[3882]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	7	[3882]	GETTABLE 	R2 R2 K3 ; R2 := R2["mSelectedElement"]
	8	[3883]	EQ       	1 R2 K4 ; if R2 == nil then PC := 52
	9	[3883]	JMP      	52 ; PC := 52
	10	[3884]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	11	[3884]	MOVE     	R4 R0 ; R4 := R0
	12	[3884]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[3884]	SETGLOBALHASH	R3 K5 ; mScrapCount := R3
	14	[3885]	GETGLOBAL	R3 K5 ; R3 := mScrapCount
	15	[3885]	LT       	0 K6 R3 ; if 0.000000 >= R3 then PC := 52
	16	[3885]	JMP      	52 ; PC := 52
	17	[3886]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[3886]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x1142c7a8]
	19	[3886]	GETTABLE 	R4 R2 K8 ; R4 := R2["SellingPrice"]
	20	[3886]	GETGLOBAL	R5 K5 ; R5 := mScrapCount
	21	[3886]	MUL      	R4 R4 R5 ; R4 := R4 * R5
	22	[3886]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[3887]	GETGLOBAL	R4 K5 ; R4 := mScrapCount
	24	[3887]	LT       	0 K1 R4 ; if 1.000000 >= R4 then PC := 39
	25	[3887]	JMP      	39 ; PC := 39
	26	[3888]	MOVE     	R4 R3 ; R4 := R3
	27	[3888]	LOADK    	R5 K9 ; R5 := " ("
	28	[3888]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[3888]	GETTABLE 	R6 R6 K7 ; R6 := R6[0x1142c7a8]
	30	[3888]	GETTABLE 	R7 R2 K8 ; R7 := R2["SellingPrice"]
	31	[3888]	CALL     	R6 2 2 ; R6 := R6(R7)
	32	[3888]	LOADK    	R7 K10 ; R7 := " x "
	33	[3888]	GETUPVAL 	R8 U0 ; R8 := U0
	34	[3888]	GETTABLE 	R8 R8 K7 ; R8 := R8[0x1142c7a8]
	35	[3888]	GETGLOBAL	R9 K5 ; R9 := mScrapCount
	36	[3888]	CALL     	R8 2 2 ; R8 := R8(R9)
	37	[3888]	LOADK    	R9 K11 ; R9 := ")"
	38	[3888]	CONCAT   	R3 R4 R9 ; R3 := R4 .. R5 .. R6 .. R7 .. R8 .. R9
	39	[3890]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	40	[3890]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x42b04007]
	41	[3890]	LOADK    	R6 K14 ; R6 := "/Lotus/Language/Railjack/SellSalvage"
	42	[3890]	OP_LOADBOOL	R7 1 0 ; R7 := true
	43	[3890]	NEWTABLE 	R8 0 1 ; R8 := {}
	44	[3890]	SETTABLE 	R8 K15 R3 ; R8["SELL_VALUE"] := R3
	45	[3890]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	46	[3891]	GETUPVAL 	R5 U0 ; R5 := U0
	47	[3891]	GETTABLE 	R5 R5 K16 ; R5 := R5[0xf616a184]
	48	[3891]	MOVE     	R6 R4 ; R6 := R4
	49	[3891]	LOADK    	R7 K17 ; R7 := "SellConfirm"
	50	[3891]	CALL     	R5 3 1 ; R5(R6,R7)
	51	[3892]	RETURN   	R0 1 ; return 
	52	[3896]	GETUPVAL 	R5 U1 ; R5 := U1
	53	[3896]	LOADK    	R6 := 5.000000
	54	[3896]	CALL     	R5 2 1 ; R5(R6)
	55	[3897]	RETURN   	R0 1 ; return 

function #110 <?:3899,3966> (175 instructions, 700 bytes at 00000211357FE520)
0 params, 18 slots, 5 upvalues, 0 locals, 72 constants, 0 functions
	1	[3900]	GETGLOBAL	R0 K0 ; R0 := mInventoryGrid
	2	[3900]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[3902]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 6
	4	[3902]	JMP      	6 ; PC := 6
	5	[3903]	RETURN   	R0 1 ; return 
	6	[3906]	NEWTABLE 	R1 0 0 ; R1 := {}
	7	[3906]	SETGLOBALHASH	R1 K3 ; mSellInfoItems := R1
	8	[3908]	GETTABLE 	R1 R0 K4 ; R1 := R0["SalvageState"]
	9	[3908]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[3908]	GETTABLE 	R2 R2 K5 ; R2 := R2["OWNED"]
	11	[3908]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 119
	12	[3908]	JMP      	119 ; PC := 119
	13	[3909]	GETGLOBAL	R1 K6 ; R1 := mInputBlocked
	14	[3909]	TEST     	R1 1 ; if R1 then PC := 118
	15	[3909]	JMP      	118 ; PC := 118
	16	[3910]	GETGLOBAL	R1 K7 ; R1 := 0xb009bbc6
	17	[3910]	GETTABLE 	R2 R0 K8 ; R2 := R0["SalvageRecipe"]
	18	[3910]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[3912]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	20	[3912]	MOVE     	R3 R1 ; R3 := R1
	21	[3912]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[3912]	TEST     	R2 1 ; if R2 then PC := 118
	23	[3912]	JMP      	118 ; PC := 118
	24	[3913]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	25	[3913]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x42b04007]
	26	[3913]	LOADK    	R4 K12 ; R4 := "/Lotus/Language/Railjack/SellRepairedSalvage"
	27	[3913]	OP_LOADBOOL	R5 0 0 ; R5 := false
	28	[3913]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	29	[3914]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	30	[3914]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x42b04007]
	31	[3914]	LOADK    	R5 K13 ; R5 := "/Lotus/Language/Menu/Crafting_CancelBuildSubtitle"
	32	[3914]	OP_LOADBOOL	R6 0 0 ; R6 := false
	33	[3914]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	34	[3915]	GETUPVAL 	R4 U1 ; R4 := U1
	35	[3915]	GETTABLE 	R4 R4 K14 ; R4 := R4[0x06d055f9]
	36	[3915]	SELF     	R5 R1 K15 ; R6 := R1; R5 := R1[0x5dc6a962]
	37	[3915]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[3915]	SELF     	R6 R1 K16 ; R7 := R1; R6 := R1[0x024d3816]
	39	[3915]	CALL     	R6 2 2 ; R6 := R6(R7)
	40	[3915]	SELF     	R7 R1 K17 ; R8 := R1; R7 := R1[0xfc40d6a1]
	41	[3915]	CALL     	R7 2 0 ; R7,... := R7(R8)
	42	[3915]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	43	[3916]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	44	[3916]	MOVE     	R6 R4 ; R6 := R4
	45	[3916]	CALL     	R5 2 2 ; R5 := R5(R6)
	46	[3916]	TEST     	R5 1 ; if R5 then PC := 100
	47	[3916]	JMP      	100 ; PC := 100
	48	[3917]	LOADK    	R5 := 1.000000
	49	[3917]	LEN      	R6 R4 ; R6 := # R4
	50	[3917]	LOADK    	R7 := 1.000000
	51	[3917]	FORPREP  	R5 99 ; R5 -= R7; PC := 99
	52	[3918]	GETGLOBAL	R9 K18 ; R9 := 0xce225efa
	53	[3918]	LOADK    	R10 := 0.000000
	54	[3918]	CALL     	R9 2 1 ; R9(R10)
	55	[3920]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	56	[3922]	NEWTABLE 	R10 0 0 ; R10 := {}
	57	[3923]	GETUPVAL 	R11 U2 ; R11 := U2
	58	[3923]	SELF     	R11 R11 K19 ; R12 := R11; R11 := R11[0x105074fb]
	59	[3923]	GETTABLE 	R13 R9 K20 ; R13 := R9["mItemType"]
	60	[3923]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	61	[3924]	GETGLOBAL	R12 K9 ; R12 := 0x7b998233
	62	[3924]	MOVE     	R13 R11 ; R13 := R11
	63	[3924]	CALL     	R12 2 2 ; R12 := R12(R13)
	64	[3924]	TEST     	R12 1 ; if R12 then PC := 80
	65	[3924]	JMP      	80 ; PC := 80
	66	[3925]	GETUPVAL 	R12 U3 ; R12 := U3
	67	[3925]	GETTABLE 	R12 R12 K21 ; R12 := R12[0x08681f50]
	68	[3925]	GETGLOBAL	R13 K10 ; R13 := 0xae91e43b
	69	[3925]	MOVE     	R14 R11 ; R14 := R11
	70	[3925]	NEWTABLE 	R15 0 3 ; R15 := {}
	71	[3925]	GETGLOBAL	R16 K23 ; R16 := 0x25d99d89
	72	[3925]	SETTABLE 	R15 K22 R16 ; R15["GameData"] := R16
	73	[3925]	SETTABLE 	R15 K24 K25 ; R15["GetVisibilityMaterial"] := true
	74	[3925]	SETTABLE 	R15 K26 K25 ; R15["DepthTest"] := true
	75	[3925]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	76	[3925]	MOVE     	R10 R12 ; R10 := R12
	77	[3926]	SELF     	R12 R11 K28 ; R13 := R11; R12 := R11[0xfe9eb1a5]
	78	[3926]	CALL     	R12 2 2 ; R12 := R12(R13)
	79	[3926]	SETTABLE 	R10 K27 R12 ; R10["Category"] := R12
	80	[3929]	SETTABLE 	R10 K29 R11 ; R10["StoreItem"] := R11
	81	[3931]	GETGLOBAL	R12 K30 ; R12 := 0x33bdd652
	82	[3931]	GETTABLE 	R12 R12 K31 ; R12 := R12[0x23d5322f]
	83	[3931]	GETGLOBAL	R13 K3 ; R13 := mSellInfoItems
	84	[3931]	NEWTABLE 	R14 0 5 ; R14 := {}
	85	[3931]	GETTABLE 	R15 R10 K32 ; R15 := R10["Name"]
	86	[3931]	SETTABLE 	R14 K32 R15 ; R14["Name"] := R15
	87	[3931]	SETTABLE 	R14 K29 R11 ; R14["StoreItem"] := R11
	88	[3931]	GETGLOBAL	R15 K34 ; R15 := 0x5bced4c4
	89	[3931]	GETTABLE 	R15 R15 K35 ; R15 := R15[0x99675e23]
	90	[3931]	GETTABLE 	R16 R9 K36 ; R16 := R9["mItemCount"]
	91	[3931]	MUL      	R16 R16 K37 ; R16 := R16 * 0.800000
	92	[3931]	CALL     	R15 2 2 ; R15 := R15(R16)
	93	[3931]	SETTABLE 	R14 K33 R15 ; R14["Count"] := R15
	94	[3931]	GETTABLE 	R15 R10 K38 ; R15 := R10["Icon"]
	95	[3931]	SETTABLE 	R14 K38 R15 ; R14["Icon"] := R15
	96	[3931]	GETTABLE 	R15 R10 K39 ; R15 := R10["LocalizedDesc"]
	97	[3931]	SETTABLE 	R14 K39 R15 ; R14["LocalizedDesc"] := R15
	98	[3931]	CALL     	R12 3 1 ; R12(R13,R14)
	99	[3917]	FORLOOP  	R5 52 ; R5 += R7; if R5 <= R6 then begin PC := 52; R8 := R5 end
	100	[3935]	GETGLOBAL	R12 K40 ; R12 := _T
	101	[3935]	NEWTABLE 	R13 0 4 ; R13 := {}
	102	[3935]	SETTABLE 	R13 K42 R2 ; R13["TITLE"] := R2
	103	[3935]	SETTABLE 	R13 K43 R3 ; R13["TIP"] := R3
	104	[3935]	GETGLOBAL	R14 K3 ; R14 := mSellInfoItems
	105	[3935]	SETTABLE 	R13 K44 R14 ; R13["mITEMS"] := R14
	106	[3935]	SETTABLE 	R13 K45 K46 ; R13["CONFIRM_LABEL"] := "/Lotus/Language/Menu/ItemSelection_OK"
	107	[3935]	SETTABLE 	R12 K41 R13 ; R12["Manifest"] := R13
	108	[3936]	GETGLOBAL	R12 K10 ; R12 := 0xae91e43b
	109	[3936]	SELF     	R12 R12 K48 ; R13 := R12; R12 := R12[0x1fd6abd0]
	110	[3936]	GETGLOBAL	R14 K49 ; R14 := 0x0e7e9601
	111	[3936]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	112	[3936]	SETGLOBALHASH	R12 K47 ; mManifestMovie := R12
	113	[3937]	GETGLOBAL	R12 K47 ; R12 := mManifestMovie
	114	[3937]	SELF     	R12 R12 K50 ; R13 := R12; R12 := R12[0xe4162eed]
	115	[3937]	LOADK    	R14 K51 ; R14 := "SetCallback"
	116	[3937]	LOADK    	R15 K52 ; R15 := "SellConfirm"
	117	[3937]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	118	[3941]	RETURN   	R0 1 ; return 
	119	[3944]	GETTABLE 	R12 R0 K53 ; R12 := R0["SellingPrice"]
	120	[3944]	EQ       	0 R12 K2 ; if R12 ~= nil then PC := 126
	121	[3944]	JMP      	126 ; PC := 126
	122	[3945]	GETGLOBAL	R12 K54 ; R12 := 0x3d106989
	123	[3945]	LOADK    	R13 K55 ; R13 := "RailjackLoadout: Element has nil SellingPrice, i.e. 0"
	124	[3945]	CALL     	R12 2 1 ; R12(R13)
	125	[3947]	RETURN   	R0 1 ; return 
	126	[3950]	GETTABLE 	R12 R0 K4 ; R12 := R0["SalvageState"]
	127	[3950]	GETUPVAL 	R13 U0 ; R13 := U0
	128	[3950]	GETTABLE 	R13 R13 K56 ; R13 := R13["UNIDENTIFIED"]
	129	[3950]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 162
	130	[3950]	JMP      	162 ; PC := 162
	131	[3950]	GETTABLE 	R12 R0 K33 ; R12 := R0["Count"]
	132	[3950]	LT       	0 K57 R12 ; if 1.000000 >= R12 then PC := 162
	133	[3950]	JMP      	162 ; PC := 162
	134	[3951]	GETGLOBAL	R12 K40 ; R12 := _T
	135	[3951]	NEWTABLE 	R13 0 7 ; R13 := {}
	136	[3952]	GETTABLE 	R14 R0 K32 ; R14 := R0["Name"]
	137	[3952]	SETTABLE 	R13 K32 R14 ; R13["Name"] := R14
	138	[3953]	GETTABLE 	R14 R0 K39 ; R14 := R0["LocalizedDesc"]
	139	[3953]	SETTABLE 	R13 K39 R14 ; R13["LocalizedDesc"] := R14
	140	[3954]	GETTABLE 	R14 R0 K33 ; R14 := R0["Count"]
	141	[3954]	SETTABLE 	R13 K33 R14 ; R13["Count"] := R14
	142	[3955]	GETUPVAL 	R14 U4 ; R14 := U4
	143	[3955]	GETTABLE 	R14 R14 K60 ; R14 := R14["LABEL_TYPE_CHECKMARK"]
	144	[3955]	SETTABLE 	R13 K59 R14 ; R13["TagType"] := R14
	145	[3956]	NEWTABLE 	R14 0 2 ; R14 := {}
	146	[3956]	NEWTABLE 	R15 0 1 ; R15 := {}
	147	[3956]	GETUPVAL 	R16 U4 ; R16 := U4
	148	[3956]	GETTABLE 	R16 R16 K64 ; R16 := R16["LABEL_TYPE_ENDO"]
	149	[3956]	SETTABLE 	R15 K63 R16 ; R15["LabelType"] := R16
	150	[3956]	SETTABLE 	R14 K62 R15 ; R14["SellInfo"] := R15
	151	[3956]	SETTABLE 	R14 K65 K25 ; R14["HideOwned"] := true
	152	[3956]	SETTABLE 	R13 K61 R14 ; R13["MetaData"] := R14
	153	[3957]	GETTABLE 	R14 R0 K53 ; R14 := R0["SellingPrice"]
	154	[3957]	SETTABLE 	R13 K53 R14 ; R13["SellingPrice"] := R14
	155	[3958]	SETTABLE 	R13 K66 K67 ; R13["Callback"] := "SellCountConfirm"
	156	[3959]	SETTABLE 	R12 K58 R13 ; R12["InfoPopup_Data"] := R13
	157	[3960]	GETGLOBAL	R12 K10 ; R12 := 0xae91e43b
	158	[3960]	SELF     	R12 R12 K48 ; R13 := R12; R12 := R12[0x1fd6abd0]
	159	[3960]	GETGLOBAL	R14 K68 ; R14 := 0xc2a05c3d
	160	[3960]	CALL     	R12 3 1 ; R12(R13,R14)
	161	[3961]	RETURN   	R0 1 ; return 
	162	[3964]	GETGLOBAL	R12 K10 ; R12 := 0xae91e43b
	163	[3964]	SELF     	R12 R12 K11 ; R13 := R12; R12 := R12[0x42b04007]
	164	[3964]	LOADK    	R14 K69 ; R14 := "/Lotus/Language/Railjack/SellSalvage"
	165	[3964]	OP_LOADBOOL	R15 1 0 ; R15 := true
	166	[3964]	NEWTABLE 	R16 0 1 ; R16 := {}
	167	[3964]	GETTABLE 	R17 R0 K53 ; R17 := R0["SellingPrice"]
	168	[3964]	SETTABLE 	R16 K70 R17 ; R16["SELL_VALUE"] := R17
	169	[3964]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	170	[3965]	GETUPVAL 	R13 U1 ; R13 := U1
	171	[3965]	GETTABLE 	R13 R13 K71 ; R13 := R13[0xf616a184]
	172	[3965]	MOVE     	R14 R12 ; R14 := R12
	173	[3965]	LOADK    	R15 K52 ; R15 := "SellConfirm"
	174	[3965]	CALL     	R13 3 1 ; R13(R14,R15)
	175	[3966]	RETURN   	R0 1 ; return 

function #111 <?:3968,3973> (8 instructions, 32 bytes at 0000021130DD5250)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3969]	SETGLOBALHASH	R0 K0 ; mFuseElement1 := R0
	2	[3970]	LOADNIL  	R0 R0 ; R0 := nil
	3	[3970]	SETGLOBALHASH	R0 K1 ; mFuseElement2 := R0
	4	[3971]	LOADNIL  	R0 R0 ; R0 := nil
	5	[3971]	SETGLOBALHASH	R0 K2 ; mFuseElement3 := R0
	6	[3972]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[3972]	SETGLOBALHASH	R0 K3 ; mEquipAfterFuse := R0
	8	[3973]	RETURN   	R0 1 ; return 

function #112 <?:3975,4035> (119 instructions, 476 bytes at 0000021113ABEB00)
2 params, 13 slots, 9 upvalues, 0 locals, 31 constants, 0 functions
	1	[3976]	GETGLOBAL	R2 K0 ; R2 := mInventoryGrid
	2	[3976]	SETTABLE 	R2 K1 K2 ; R2["mSelectedElement"] := nil
	3	[3978]	TEST     	R0 1 ; if R0 then PC := 10
	4	[3978]	JMP      	10 ; PC := 10
	5	[3979]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[3979]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xa53f5e12]
	7	[3979]	LOADK    	R3 K4 ; R3 := "/Lotus/Language/Kingpins/FuseFailed"
	8	[3979]	CALL     	R2 2 1 ; R2(R3)
	9	[3981]	RETURN   	R0 1 ; return 
	10	[3984]	GETUPVAL 	R2 U0 ; R2 := U0
	11	[3984]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x659d451f]
	12	[3984]	GETGLOBAL	R3 K6 ; R3 := 0x0032441c
	13	[3984]	GETTABLE 	R3 R3 K7 ; R3 := R3["UISound_SweetenerTwo"]
	14	[3984]	CALL     	R2 2 1 ; R2(R3)
	15	[3985]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[3985]	GETTABLE 	R2 R2 K8 ; R2 := R2[0xe0cba3ca]
	17	[3985]	LOADK    	R3 K9 ; R3 := "/Lotus/Language/Kingpins/FuseSuccess"
	18	[3985]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[3986]	GETGLOBAL	R3 K10 ; R3 := 0x7b998233
	20	[3986]	MOVE     	R4 R2 ; R4 := R2
	21	[3986]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[3986]	TEST     	R3 1 ; if R3 then PC := 37
	23	[3986]	JMP      	37 ; PC := 37
	24	[3987]	GETUPVAL 	R3 U0 ; R3 := U0
	25	[3987]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x5a22d251]
	26	[3987]	MOVE     	R4 R2 ; R4 := R2
	27	[3987]	GETGLOBAL	R5 K12 ; R5 := 0xfb117b36
	28	[3987]	LOADK    	R6 := 800.000000
	29	[3987]	LOADK    	R7 := 450.000000
	30	[3987]	LOADNIL  	R8 R10 ; R8 := R9 := R10 := nil
	31	[3987]	OP_LOADBOOL	R11 1 0 ; R11 := true
	32	[3987]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	33	[3988]	GETUPVAL 	R3 U0 ; R3 := U0
	34	[3988]	GETTABLE 	R3 R3 K5 ; R3 := R3[0x659d451f]
	35	[3988]	GETGLOBAL	R4 K13 ; R4 := 0xd6075367
	36	[3988]	CALL     	R3 2 1 ; R3(R4)
	37	[3991]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[3991]	CALL     	R3 1 1 ; R3()
	39	[3993]	GETGLOBAL	R3 K14 ; R3 := cjson
	40	[3993]	GETTABLE 	R3 R3 K15 ; R3 := R3[0x7ab914d8]
	41	[3993]	MOVE     	R4 R1 ; R4 := R1
	42	[3993]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[3994]	GETTABLE 	R4 R3 K16 ; R4 := R3["InventoryChanges"]
	44	[3994]	EQ       	1 R4 K2 ; if R4 == nil then PC := 111
	45	[3994]	JMP      	111 ; PC := 111
	46	[3995]	LOADNIL  	R4 R4 ; R4 := nil
	47	[3996]	GETGLOBAL	R5 K17 ; R5 := mActiveState
	48	[3996]	GETUPVAL 	R6 U2 ; R6 := U2
	49	[3996]	GETTABLE 	R6 R6 K18 ; R6 := R6["WEAPON_INV"]
	50	[3996]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 56
	51	[3996]	JMP      	56 ; PC := 56
	52	[3997]	GETTABLE 	R5 R3 K16 ; R5 := R3["InventoryChanges"]
	53	[3997]	GETTABLE 	R5 R5 K19 ; R5 := R5["CrewShipWeapons"]
	54	[3997]	GETTABLE 	R4 R5 K20 ; R4 := R5[1.000000]
	55	[3997]	JMP      	59 ; PC := 59
	56	[3999]	GETTABLE 	R5 R3 K16 ; R5 := R3["InventoryChanges"]
	57	[3999]	GETTABLE 	R5 R5 K21 ; R5 := R5["CrewShipWeaponSkins"]
	58	[3999]	GETTABLE 	R4 R5 K20 ; R4 := R5[1.000000]
	59	[4001]	EQ       	1 R4 K2 ; if R4 == nil then PC := 111
	60	[4001]	JMP      	111 ; PC := 111
	61	[4002]	GETTABLE 	R5 R4 K22 ; R5 := R4["ItemId"]
	62	[4002]	GETTABLE 	R5 R5 K23 ; R5 := R5["$oid"]
	63	[4004]	GETUPVAL 	R6 U3 ; R6 := U3
	64	[4004]	MOVE     	R7 R5 ; R7 := R5
	65	[4004]	CALL     	R6 2 2 ; R6 := R6(R7)
	66	[4006]	GETUPVAL 	R7 U4 ; R7 := U4
	67	[4006]	MOVE     	R8 R6 ; R8 := R6
	68	[4006]	OP_LOADBOOL	R9 1 0 ; R9 := true
	69	[4006]	CALL     	R7 3 1 ; R7(R8,R9)
	70	[4007]	GETGLOBAL	R7 K24 ; R7 := mEquipAfterFuse
	71	[4007]	TEST     	R7 0 ; if not R7 then PC := 111
	72	[4007]	JMP      	111 ; PC := 111
	73	[4008]	OP_LOADBOOL	R7 0 0 ; R7 := false
	74	[4008]	SETGLOBALHASH	R7 K24 ; mEquipAfterFuse := R7
	75	[4010]	GETUPVAL 	R7 U5 ; R7 := U5
	76	[4010]	MOVE     	R8 R6 ; R8 := R6
	77	[4010]	LOADNIL  	R9 R10 ; R9 := R10 := nil
	78	[4010]	OP_LOADBOOL	R11 1 0 ; R11 := true
	79	[4010]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	80	[4011]	GETGLOBAL	R7 K17 ; R7 := mActiveState
	81	[4011]	GETUPVAL 	R8 U2 ; R8 := U2
	82	[4011]	GETTABLE 	R8 R8 K18 ; R8 := R8["WEAPON_INV"]
	83	[4011]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 92
	84	[4011]	JMP      	92 ; PC := 92
	85	[4013]	GETGLOBAL	R7 K25 ; R7 := mEquipment
	86	[4013]	SELF     	R7 R7 K26 ; R8 := R7; R7 := R7[0x71e9ac81]
	87	[4013]	LOADNIL  	R9 R9 ; R9 := nil
	88	[4013]	OP_LOADBOOL	R10 1 0 ; R10 := true
	89	[4013]	OP_LOADBOOL	R11 1 0 ; R11 := true
	90	[4013]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	91	[4013]	JMP      	106 ; PC := 106
	92	[4016]	GETGLOBAL	R7 K25 ; R7 := mEquipment
	93	[4016]	GETTABLE 	R7 R7 K1 ; R7 := R7["mSelectedElement"]
	94	[4017]	GETTABLE 	R8 R6 K28 ; R8 := R6["RawItem"]
	95	[4017]	GETTABLE 	R8 R8 K27 ; R8 := R8["Item"]
	96	[4017]	SETTABLE 	R7 K27 R8 ; R7["Item"] := R8
	97	[4018]	GETUPVAL 	R8 U6 ; R8 := U6
	98	[4018]	MOVE     	R9 R7 ; R9 := R7
	99	[4018]	CALL     	R8 2 1 ; R8(R9)
	100	[4020]	GETGLOBAL	R8 K25 ; R8 := mEquipment
	101	[4020]	SELF     	R8 R8 K26 ; R9 := R8; R8 := R8[0x71e9ac81]
	102	[4020]	LOADNIL  	R10 R10 ; R10 := nil
	103	[4020]	OP_LOADBOOL	R11 1 0 ; R11 := true
	104	[4020]	OP_LOADBOOL	R12 1 0 ; R12 := true
	105	[4020]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	106	[4023]	GETUPVAL 	R8 U1 ; R8 := U1
	107	[4023]	CALL     	R8 1 1 ; R8()
	108	[4025]	GETUPVAL 	R8 U3 ; R8 := U3
	109	[4025]	MOVE     	R9 R5 ; R9 := R5
	110	[4025]	CALL     	R8 2 1 ; R8(R9)
	111	[4030]	GETGLOBAL	R8 K29 ; R8 := mFuseElement2
	112	[4030]	GETTABLE 	R8 R8 K30 ; R8 := R8["Recipe"]
	113	[4030]	EQ       	1 R8 K2 ; if R8 == nil then PC := 117
	114	[4030]	JMP      	117 ; PC := 117
	115	[4031]	GETUPVAL 	R8 U7 ; R8 := U7
	116	[4031]	CALL     	R8 1 1 ; R8()
	117	[4034]	GETUPVAL 	R8 U8 ; R8 := U8
	118	[4034]	CALL     	R8 1 1 ; R8()
	119	[4035]	RETURN   	R0 1 ; return 

function #113 <?:4037,4057> (61 instructions, 244 bytes at 0000021113ABEB90)
2 params, 8 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[4038]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4038]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	3	[4038]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4038]	TEST     	R2 1 ; if R2 then PC := 8
	5	[4038]	JMP      	8 ; PC := 8
	6	[4038]	EQ       	0 R1 K2 ; if R1 ~= "false" then PC := 11
	7	[4038]	JMP      	11 ; PC := 11
	8	[4039]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[4039]	CALL     	R2 1 1 ; R2()
	10	[4040]	RETURN   	R0 1 ; return 
	11	[4043]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	12	[4043]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x42b04007]
	13	[4043]	LOADK    	R4 K5 ; R4 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponWord"
	14	[4043]	OP_LOADBOOL	R5 0 0 ; R5 := false
	15	[4043]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	16	[4044]	GETGLOBAL	R3 K6 ; R3 := 0x7f5022cf
	17	[4044]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x04981ab3]
	18	[4044]	MOVE     	R4 R0 ; R4 := R0
	19	[4044]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[4044]	GETGLOBAL	R4 K6 ; R4 := 0x7f5022cf
	21	[4044]	GETTABLE 	R4 R4 K7 ; R4 := R4[0x04981ab3]
	22	[4044]	MOVE     	R5 R2 ; R5 := R2
	23	[4044]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[4044]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 55
	25	[4044]	JMP      	55 ; PC := 55
	26	[4045]	GETGLOBAL	R3 K8 ; R3 := 0x6c97a788
	27	[4045]	GETTABLE 	R3 R3 K9 ; R3 := R3[0x0edef15d]
	28	[4045]	CALL     	R3 1 2 ; R3 := R3()
	29	[4047]	GETTABLE 	R4 R3 K10 ; R4 := R3["mPartA"]
	30	[4047]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x46e9d221]
	31	[4047]	GETGLOBAL	R6 K12 ; R6 := mFuseElement1
	32	[4047]	GETTABLE 	R6 R6 K13 ; R6 := R6["UID"]
	33	[4047]	CALL     	R4 3 1 ; R4(R5,R6)
	34	[4048]	GETTABLE 	R4 R3 K14 ; R4 := R3["mPartB"]
	35	[4048]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x46e9d221]
	36	[4048]	GETGLOBAL	R6 K15 ; R6 := mFuseElement2
	37	[4048]	GETTABLE 	R6 R6 K13 ; R6 := R6["UID"]
	38	[4048]	CALL     	R4 3 1 ; R4(R5,R6)
	39	[4049]	GETGLOBAL	R4 K15 ; R4 := mFuseElement2
	40	[4049]	GETTABLE 	R4 R4 K17 ; R4 := R4["Recipe"]
	41	[4049]	SETTABLE 	R3 K16 R4 ; R3["mSourceRecipe"] := R4
	42	[4050]	GETGLOBAL	R4 K19 ; R4 := mFuseElement3
	43	[4050]	GETTABLE 	R4 R4 K20 ; R4 := R4["SubA"]
	44	[4050]	EQ       	1 R4 K21 ; if R4 == true then PC := 47
	45	[4050]	JMP      	47 ; PC := 47
	46	[4050]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 47
	47	[4050]	OP_LOADBOOL	R4 1 0 ; R4 := true
	48	[4050]	SETTABLE 	R3 K18 R4 ; R3["mUseSubroutineA"] := R4
	49	[4052]	GETGLOBAL	R4 K1 ; R4 := 0x25d99d89
	50	[4052]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x126c948e]
	51	[4052]	MOVE     	R6 R3 ; R6 := R3
	52	[4052]	LOADK    	R7 K23 ; R7 := "OnFuseItem"
	53	[4052]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	54	[4052]	JMP      	61 ; PC := 61
	55	[4054]	GETUPVAL 	R4 U1 ; R4 := U1
	56	[4054]	GETTABLE 	R4 R4 K24 ; R4 := R4[0xa53f5e12]
	57	[4054]	LOADK    	R5 K25 ; R5 := "/Lotus/Language/Dojo/VaultContributionDecoIncorrectConfirmWord"
	58	[4054]	CALL     	R4 2 1 ; R4(R5)
	59	[4055]	GETUPVAL 	R4 U0 ; R4 := U0
	60	[4055]	CALL     	R4 1 1 ; R4()
	61	[4057]	RETURN   	R0 1 ; return 

function #114 <?:4059,4094> (72 instructions, 288 bytes at 0000021128429F00)
6 params, 20 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[4060]	GETGLOBAL	R6 K0 ; R6 := mActiveState
	2	[4060]	GETUPVAL 	R7 U0 ; R7 := U0
	3	[4060]	GETTABLE 	R7 R7 K1 ; R7 := R7["WEAPON_INV"]
	4	[4060]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 22
	5	[4060]	JMP      	22 ; PC := 22
	6	[4061]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 13
	7	[4061]	JMP      	13 ; PC := 13
	8	[4061]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 13
	9	[4061]	JMP      	13 ; PC := 13
	10	[4062]	LOADNIL  	R6 R6 ; R6 := nil
	11	[4062]	RETURN   	R6 2 ; return R6 
	12	[4062]	JMP      	22 ; PC := 22
	13	[4063]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 18
	14	[4063]	JMP      	18 ; PC := 18
	15	[4064]	GETTABLE 	R6 R2 K3 ; R6 := R2["Value"]
	16	[4064]	RETURN   	R6 2 ; return R6 
	17	[4064]	JMP      	22 ; PC := 22
	18	[4065]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 22
	19	[4065]	JMP      	22 ; PC := 22
	20	[4066]	GETTABLE 	R6 R0 K3 ; R6 := R0["Value"]
	21	[4066]	RETURN   	R6 2 ; return R6 
	22	[4070]	LOADK    	R6 := 0.000000
	23	[4071]	LOADK    	R7 := 0.000000
	24	[4072]	EQ       	1 R0 K2 ; if R0 == nil then PC := 27
	25	[4072]	JMP      	27 ; PC := 27
	26	[4073]	GETTABLE 	R6 R0 K3 ; R6 := R0["Value"]
	27	[4075]	EQ       	1 R2 K2 ; if R2 == nil then PC := 30
	28	[4075]	JMP      	30 ; PC := 30
	29	[4076]	GETTABLE 	R7 R2 K3 ; R7 := R2["Value"]
	30	[4080]	SELF     	R8 R3 K4 ; R9 := R3; R8 := R3[0x3efe024d]
	31	[4080]	CALL     	R8 2 2 ; R8 := R8(R9)
	32	[4081]	GETGLOBAL	R9 K5 ; R9 := FUSE_MAX_VALUE
	33	[4081]	DIV      	R9 R7 R9 ; R9 := R7 / R9
	34	[4082]	GETGLOBAL	R10 K6 ; R10 := 0x9bafffe3
	35	[4082]	GETTABLE 	R11 R8 K7 ; R11 := R8["minValue"]
	36	[4082]	GETTABLE 	R12 R8 K8 ; R12 := R8["maxValue"]
	37	[4082]	MOVE     	R13 R9 ; R13 := R9
	38	[4082]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	39	[4084]	SELF     	R11 R1 K4 ; R12 := R1; R11 := R1[0x3efe024d]
	40	[4084]	CALL     	R11 2 2 ; R11 := R11(R12)
	41	[4085]	GETGLOBAL	R12 K5 ; R12 := FUSE_MAX_VALUE
	42	[4085]	DIV      	R12 R6 R12 ; R12 := R6 / R12
	43	[4086]	GETGLOBAL	R13 K6 ; R13 := 0x9bafffe3
	44	[4086]	GETTABLE 	R14 R11 K7 ; R14 := R11["minValue"]
	45	[4086]	GETTABLE 	R15 R11 K8 ; R15 := R11["maxValue"]
	46	[4086]	MOVE     	R16 R12 ; R16 := R12
	47	[4086]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	48	[4088]	SUB      	R14 R5 R4 ; R14 := R5 - R4
	49	[4090]	GETGLOBAL	R15 K9 ; R15 := 0x5bced4c4
	50	[4090]	GETTABLE 	R15 R15 K10 ; R15 := R15[0xb62ecfe0]
	51	[4090]	MOVE     	R16 R10 ; R16 := R10
	52	[4090]	MOVE     	R17 R13 ; R17 := R13
	53	[4090]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	54	[4091]	GETGLOBAL	R16 K9 ; R16 := 0x5bced4c4
	55	[4091]	GETTABLE 	R16 R16 K11 ; R16 := R16[0xac1b386a]
	56	[4091]	GETTABLE 	R17 R8 K8 ; R17 := R8["maxValue"]
	57	[4091]	GETGLOBAL	R18 K12 ; R18 := FUSE_MULTIPLIERS
	58	[4091]	ADD      	R19 R14 K13 ; R19 := R14 + 1.000000
	59	[4091]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	60	[4091]	MUL      	R18 R15 R18 ; R18 := R15 * R18
	61	[4091]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	62	[4091]	MOVE     	R15 R16 ; R15 := R16
	63	[4093]	GETTABLE 	R16 R8 K7 ; R16 := R8["minValue"]
	64	[4093]	SUB      	R16 R15 R16 ; R16 := R15 - R16
	65	[4093]	GETTABLE 	R17 R8 K8 ; R17 := R8["maxValue"]
	66	[4093]	GETTABLE 	R18 R8 K7 ; R18 := R8["minValue"]
	67	[4093]	SUB      	R17 R17 R18 ; R17 := R17 - R18
	68	[4093]	DIV      	R16 R16 R17 ; R16 := R16 / R17
	69	[4093]	GETGLOBAL	R17 K5 ; R17 := FUSE_MAX_VALUE
	70	[4093]	MUL      	R16 R16 R17 ; R16 := R16 * R17
	71	[4093]	RETURN   	R16 2 ; return R16 
	72	[4094]	RETURN   	R0 1 ; return 

function #115 <?:4096,4123> (40 instructions, 160 bytes at 0000021135FC16E0)
2 params, 14 slots, 0 upvalues, 0 locals, 8 constants, 2 functions
	1	[4097]	LOADK    	R2 K0 ; R2 := "%p*"
	2	[4098]	LOADK    	R3 K1 ; R3 := "%d*"
	3	[4099]	LOADK    	R4 K2 ; R4 := "%.?"
	4	[4100]	LOADK    	R5 K3 ; R5 := "%d+"
	5	[4101]	LOADK    	R6 K4 ; R6 := "[^%s]*"
	6	[4103]	MOVE     	R7 R3 ; R7 := R3
	7	[4103]	MOVE     	R8 R4 ; R8 := R4
	8	[4103]	MOVE     	R9 R5 ; R9 := R5
	9	[4103]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	10	[4104]	MOVE     	R8 R2 ; R8 := R2
	11	[4104]	MOVE     	R9 R7 ; R9 := R7
	12	[4104]	MOVE     	R10 R6 ; R10 := R6
	13	[4104]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	14	[4106]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 29
	15	[4106]	JMP      	29 ; PC := 29
	16	[4107]	NEWTABLE 	R9 0 0 ; R9 := {}
	17	[4108]	GETGLOBAL	R10 K6 ; R10 := 0x7f5022cf
	18	[4108]	GETTABLE 	R10 R10 K7 ; R10 := R10[0x66edf04f]
	19	[4108]	MOVE     	R11 R0 ; R11 := R0
	20	[4108]	MOVE     	R12 R8 ; R12 := R8
	21	[4112]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	22	[4112]	MOVE     	R0 R9 ; R0 := R9
	23	[4108]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	24	[4113]	MOVE     	R11 R10 ; R11 := R10
	25	[4113]	MOVE     	R12 R9 ; R12 := R9
	26	[4113]	RETURN   	R11 3 ; return R11, R12 
	27	[4113]	CLOSE    	R9 ; SAVE R9,...
	28	[4113]	JMP      	40 ; PC := 40
	29	[4115]	LOADK    	R9 := 0.000000
	30	[4116]	GETGLOBAL	R10 K6 ; R10 := 0x7f5022cf
	31	[4116]	GETTABLE 	R10 R10 K7 ; R10 := R10[0x66edf04f]
	32	[4116]	MOVE     	R11 R0 ; R11 := R0
	33	[4116]	MOVE     	R12 R8 ; R12 := R8
	34	[4120]	CLOSURE  	R13 1 ; R13 := closure(Function #2)
	35	[4120]	MOVE     	R0 R9 ; R0 := R9
	36	[4120]	MOVE     	R0 R1 ; R0 := R1
	37	[4116]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	38	[4121]	RETURN   	R10 2 ; return R10 
	39	[4121]	CLOSE    	R9 ; SAVE R9,...
	40	[4123]	RETURN   	R0 1 ; return 

function #116 <?:4125,4180> (159 instructions, 636 bytes at 0000021130BF9750)
0 params, 27 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[4126]	GETGLOBAL	R0 K0 ; R0 := mFuseElement1
	2	[4126]	GETTABLE 	R0 R0 K1 ; R0 := R0["Data"]
	3	[4127]	GETGLOBAL	R1 K2 ; R1 := mFuseElement2
	4	[4127]	GETTABLE 	R1 R1 K1 ; R1 := R1["Data"]
	5	[4128]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	6	[4131]	GETGLOBAL	R4 K0 ; R4 := mFuseElement1
	7	[4131]	GETTABLE 	R4 R4 K3 ; R4 := R4["Tier"]
	8	[4132]	GETGLOBAL	R5 K2 ; R5 := mFuseElement2
	9	[4132]	GETTABLE 	R5 R5 K3 ; R5 := R5["Tier"]
	10	[4134]	GETGLOBAL	R6 K0 ; R6 := mFuseElement1
	11	[4134]	GETTABLE 	R6 R6 K4 ; R6 := R6["Upgrade"]
	12	[4135]	GETGLOBAL	R7 K2 ; R7 := mFuseElement2
	13	[4135]	GETTABLE 	R7 R7 K4 ; R7 := R7["Upgrade"]
	14	[4136]	GETGLOBAL	R8 K5 ; R8 := mActiveState
	15	[4136]	GETUPVAL 	R9 U0 ; R9 := U0
	16	[4136]	GETTABLE 	R9 R9 K6 ; R9 := R9["WEAPON_INV"]
	17	[4136]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 48
	18	[4136]	JMP      	48 ; PC := 48
	19	[4137]	GETUPVAL 	R8 U1 ; R8 := U1
	20	[4137]	GETTABLE 	R8 R8 K7 ; R8 := R8[0x06d055f9]
	21	[4137]	EQ       	0 R6 K8 ; if R6 ~= nil then PC := 24
	22	[4137]	JMP      	24 ; PC := 24
	23	[4137]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 24
	24	[4137]	OP_LOADBOOL	R9 1 0 ; R9 := true
	25	[4137]	NEWTABLE 	R10 1 0 ; R10 := {}
	26	[4137]	MOVE     	R11 R6 ; R11 := R6
	27	[4137]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	28	[4137]	NEWTABLE 	R11 1 0 ; R11 := {}
	29	[4137]	MOVE     	R12 R7 ; R12 := R7
	30	[4137]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	31	[4137]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	32	[4138]	GETUPVAL 	R9 U1 ; R9 := U1
	33	[4138]	GETTABLE 	R9 R9 K7 ; R9 := R9[0x06d055f9]
	34	[4138]	EQ       	0 R7 K8 ; if R7 ~= nil then PC := 37
	35	[4138]	JMP      	37 ; PC := 37
	36	[4138]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 37
	37	[4138]	OP_LOADBOOL	R10 1 0 ; R10 := true
	38	[4138]	NEWTABLE 	R11 1 0 ; R11 := {}
	39	[4138]	MOVE     	R12 R7 ; R12 := R7
	40	[4138]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	41	[4138]	NEWTABLE 	R12 1 0 ; R12 := {}
	42	[4138]	MOVE     	R13 R6 ; R13 := R6
	43	[4138]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	44	[4138]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	45	[4139]	MOVE     	R6 R8 ; R6 := R8
	46	[4140]	MOVE     	R7 R9 ; R7 := R9
	47	[4140]	JMP      	54 ; PC := 54
	48	[4142]	SELF     	R10 R6 K9 ; R11 := R6; R10 := R6[0x81d5d906]
	49	[4142]	CALL     	R10 2 2 ; R10 := R10(R11)
	50	[4142]	MOVE     	R6 R10 ; R6 := R10
	51	[4143]	SELF     	R10 R7 K9 ; R11 := R7; R10 := R7[0x81d5d906]
	52	[4143]	CALL     	R10 2 2 ; R10 := R10(R11)
	53	[4143]	MOVE     	R7 R10 ; R7 := R10
	54	[4145]	GETGLOBAL	R10 K10 ; R10 := mFuseElement3
	55	[4145]	GETTABLE 	R10 R10 K11 ; R10 := R10["Flipped"]
	56	[4145]	TEST     	R10 1 ; if R10 then PC := 90
	57	[4145]	JMP      	90 ; PC := 90
	58	[4146]	GETUPVAL 	R10 U1 ; R10 := U1
	59	[4146]	GETTABLE 	R10 R10 K12 ; R10 := R10[0xd6ee7507]
	60	[4146]	MOVE     	R11 R0 ; R11 := R0
	61	[4146]	CALL     	R10 2 2 ; R10 := R10(R11)
	62	[4146]	MOVE     	R2 R10 ; R2 := R10
	63	[4147]	GETGLOBAL	R10 K0 ; R10 := mFuseElement1
	64	[4147]	GETTABLE 	R3 R10 K4 ; R3 := R10["Upgrade"]
	65	[4148]	LOADK    	R10 := 1.000000
	66	[4148]	GETGLOBAL	R11 K13 ; R11 := 0x5bced4c4
	67	[4148]	GETTABLE 	R11 R11 K14 ; R11 := R11[0xb62ecfe0]
	68	[4148]	GETTABLE 	R12 R0 K15 ; R12 := R0["buffs"]
	69	[4148]	LEN      	R12 R12 ; R12 := # R12
	70	[4148]	GETTABLE 	R13 R1 K15 ; R13 := R1["buffs"]
	71	[4148]	LEN      	R13 R13 ; R13 := # R13
	72	[4148]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	73	[4148]	LOADK    	R12 := 1.000000
	74	[4148]	FORPREP  	R10 88 ; R10 -= R12; PC := 88
	75	[4149]	GETTABLE 	R14 R2 K15 ; R14 := R2["buffs"]
	76	[4149]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	77	[4149]	GETUPVAL 	R15 U2 ; R15 := U2
	78	[4149]	GETTABLE 	R16 R1 K15 ; R16 := R1["buffs"]
	79	[4149]	GETTABLE 	R16 R16 R13 ; R16 := R16[R13]
	80	[4149]	GETTABLE 	R17 R7 R13 ; R17 := R7[R13]
	81	[4149]	GETTABLE 	R18 R0 K15 ; R18 := R0["buffs"]
	82	[4149]	GETTABLE 	R18 R18 R13 ; R18 := R18[R13]
	83	[4149]	GETTABLE 	R19 R6 R13 ; R19 := R6[R13]
	84	[4149]	MOVE     	R20 R5 ; R20 := R5
	85	[4149]	MOVE     	R21 R4 ; R21 := R4
	86	[4149]	CALL     	R15 7 2 ; R15 := R15(R16,R17,R18,R19,R20,R21)
	87	[4149]	SETTABLE 	R14 K16 R15 ; R14["Value"] := R15
	88	[4148]	FORLOOP  	R10 75 ; R10 += R12; if R10 <= R11 then begin PC := 75; R13 := R10 end
	89	[4150]	JMP      	121 ; PC := 121
	90	[4152]	GETUPVAL 	R14 U1 ; R14 := U1
	91	[4152]	GETTABLE 	R14 R14 K12 ; R14 := R14[0xd6ee7507]
	92	[4152]	MOVE     	R15 R1 ; R15 := R1
	93	[4152]	CALL     	R14 2 2 ; R14 := R14(R15)
	94	[4152]	MOVE     	R2 R14 ; R2 := R14
	95	[4153]	GETGLOBAL	R14 K2 ; R14 := mFuseElement2
	96	[4153]	GETTABLE 	R3 R14 K4 ; R3 := R14["Upgrade"]
	97	[4154]	LOADK    	R14 := 1.000000
	98	[4154]	GETGLOBAL	R15 K13 ; R15 := 0x5bced4c4
	99	[4154]	GETTABLE 	R15 R15 K14 ; R15 := R15[0xb62ecfe0]
	100	[4154]	GETTABLE 	R16 R0 K15 ; R16 := R0["buffs"]
	101	[4154]	LEN      	R16 R16 ; R16 := # R16
	102	[4154]	GETTABLE 	R17 R1 K15 ; R17 := R1["buffs"]
	103	[4154]	LEN      	R17 R17 ; R17 := # R17
	104	[4154]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	105	[4154]	LOADK    	R16 := 1.000000
	106	[4154]	FORPREP  	R14 120 ; R14 -= R16; PC := 120
	107	[4155]	GETTABLE 	R18 R2 K15 ; R18 := R2["buffs"]
	108	[4155]	GETTABLE 	R18 R18 R17 ; R18 := R18[R17]
	109	[4155]	GETUPVAL 	R19 U2 ; R19 := U2
	110	[4155]	GETTABLE 	R20 R0 K15 ; R20 := R0["buffs"]
	111	[4155]	GETTABLE 	R20 R20 R17 ; R20 := R20[R17]
	112	[4155]	GETTABLE 	R21 R6 R17 ; R21 := R6[R17]
	113	[4155]	GETTABLE 	R22 R1 K15 ; R22 := R1["buffs"]
	114	[4155]	GETTABLE 	R22 R22 R17 ; R22 := R22[R17]
	115	[4155]	GETTABLE 	R23 R7 R17 ; R23 := R7[R17]
	116	[4155]	MOVE     	R24 R4 ; R24 := R4
	117	[4155]	MOVE     	R25 R5 ; R25 := R5
	118	[4155]	CALL     	R19 7 2 ; R19 := R19(R20,R21,R22,R23,R24,R25)
	119	[4155]	SETTABLE 	R18 K16 R19 ; R18["Value"] := R19
	120	[4154]	FORLOOP  	R14 107 ; R14 += R16; if R14 <= R15 then begin PC := 107; R17 := R14 end
	121	[4159]	GETTABLE 	R18 R0 K17 ; R18 := R0["SubroutineIndex"]
	122	[4160]	GETTABLE 	R19 R1 K17 ; R19 := R1["SubroutineIndex"]
	123	[4162]	GETGLOBAL	R20 K10 ; R20 := mFuseElement3
	124	[4162]	GETTABLE 	R20 R20 K18 ; R20 := R20["SubA"]
	125	[4162]	EQ       	1 R20 K8 ; if R20 == nil then PC := 135
	126	[4162]	JMP      	135 ; PC := 135
	127	[4163]	GETGLOBAL	R20 K10 ; R20 := mFuseElement3
	128	[4163]	GETTABLE 	R20 R20 K18 ; R20 := R20["SubA"]
	129	[4163]	TEST     	R20 0 ; if not R20 then PC := 133
	130	[4163]	JMP      	133 ; PC := 133
	131	[4164]	SETTABLE 	R2 K17 R18 ; R2["SubroutineIndex"] := R18
	132	[4164]	JMP      	142 ; PC := 142
	133	[4166]	SETTABLE 	R2 K17 R19 ; R2["SubroutineIndex"] := R19
	134	[4167]	JMP      	142 ; PC := 142
	135	[4168]	EQ       	1 R18 K8 ; if R18 == nil then PC := 139
	136	[4168]	JMP      	139 ; PC := 139
	137	[4169]	SETTABLE 	R2 K17 R18 ; R2["SubroutineIndex"] := R18
	138	[4169]	JMP      	142 ; PC := 142
	139	[4170]	EQ       	1 R19 K8 ; if R19 == nil then PC := 142
	140	[4170]	JMP      	142 ; PC := 142
	141	[4171]	SETTABLE 	R2 K17 R19 ; R2["SubroutineIndex"] := R19
	142	[4174]	GETGLOBAL	R20 K19 ; R20 := cjson
	143	[4174]	GETTABLE 	R20 R20 K20 ; R20 := R20[0xb139d7bc]
	144	[4174]	MOVE     	R21 R2 ; R21 := R2
	145	[4174]	CALL     	R20 2 2 ; R20 := R20(R21)
	146	[4175]	SELF     	R21 R3 K21 ; R22 := R3; R21 := R3[0xce30fcd8]
	147	[4175]	MOVE     	R23 R20 ; R23 := R20
	148	[4175]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	149	[4176]	NEWTABLE 	R22 0 1 ; R22 := {}
	150	[4176]	SETTABLE 	R22 K22 K23 ; R22["mDesc"] := ""
	151	[4177]	GETUPVAL 	R23 U3 ; R23 := U3
	152	[4177]	GETTABLE 	R23 R23 K24 ; R23 := R23[0x41223b3a]
	153	[4177]	MOVE     	R24 R22 ; R24 := R22
	154	[4177]	MOVE     	R25 R21 ; R25 := R21
	155	[4177]	GETGLOBAL	R26 K25 ; R26 := 0xae91e43b
	156	[4177]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	157	[4179]	GETTABLE 	R23 R22 K22 ; R23 := R22["mDesc"]
	158	[4179]	RETURN   	R23 2 ; return R23 
	159	[4180]	RETURN   	R0 1 ; return 

function #117 <?:4182,4240> (145 instructions, 580 bytes at 000002111CE77060)
0 params, 22 slots, 5 upvalues, 0 locals, 40 constants, 1 function
	1	[4183]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4183]	CALL     	R0 1 2 ; R0 := R0()
	3	[4184]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	4	[4184]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xb62ecfe0]
	5	[4184]	GETGLOBAL	R2 K2 ; R2 := mFuseElement1
	6	[4184]	GETTABLE 	R2 R2 K3 ; R2 := R2["Tier"]
	7	[4184]	GETGLOBAL	R3 K4 ; R3 := mFuseElement2
	8	[4184]	GETTABLE 	R3 R3 K3 ; R3 := R3["Tier"]
	9	[4184]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[4185]	GETGLOBAL	R2 K2 ; R2 := mFuseElement1
	11	[4185]	GETTABLE 	R2 R2 K5 ; R2 := R2["Stats"]
	12	[4185]	EQ       	0 R0 R2 ; if R0 ~= R2 then PC := 18
	13	[4185]	JMP      	18 ; PC := 18
	14	[4185]	GETGLOBAL	R2 K2 ; R2 := mFuseElement1
	15	[4185]	GETTABLE 	R2 R2 K3 ; R2 := R2["Tier"]
	16	[4185]	EQ       	1 R2 R1 ; if R2 == R1 then PC := 26
	17	[4185]	JMP      	26 ; PC := 26
	18	[4185]	GETGLOBAL	R2 K4 ; R2 := mFuseElement2
	19	[4185]	GETTABLE 	R2 R2 K5 ; R2 := R2["Stats"]
	20	[4185]	EQ       	0 R0 R2 ; if R0 ~= R2 then PC := 39
	21	[4185]	JMP      	39 ; PC := 39
	22	[4185]	GETGLOBAL	R2 K4 ; R2 := mFuseElement2
	23	[4185]	GETTABLE 	R2 R2 K3 ; R2 := R2["Tier"]
	24	[4185]	EQ       	0 R2 R1 ; if R2 ~= R1 then PC := 39
	25	[4185]	JMP      	39 ; PC := 39
	26	[4186]	GETUPVAL 	R2 U1 ; R2 := U1
	27	[4186]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xa53f5e12]
	28	[4186]	GETGLOBAL	R3 K7 ; R3 := 0x603636ad
	29	[4186]	LOADK    	R4 K8 ; R4 := "/Lotus/Language/Railjack/FuseCannotImprove"
	30	[4186]	NEWTABLE 	R5 0 1 ; R5 := {}
	31	[4186]	GETGLOBAL	R6 K10 ; R6 := mFuseElement3
	32	[4186]	GETTABLE 	R6 R6 K11 ; R6 := R6["Name"]
	33	[4186]	SETTABLE 	R5 K9 R6 ; R5["ITEM"] := R6
	34	[4186]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	35	[4186]	CALL     	R2 0 1 ; R2(R3,...)
	36	[4187]	GETUPVAL 	R2 U2 ; R2 := U2
	37	[4187]	CALL     	R2 1 1 ; R2()
	38	[4188]	RETURN   	R0 1 ; return 
	39	[4191]	LOADK    	R2 K12 ; R2 := "<font color=\"#FloatingContentHighlight\">"
	40	[4191]	GETGLOBAL	R3 K10 ; R3 := mFuseElement3
	41	[4191]	GETTABLE 	R3 R3 K13 ; R3 := R3["Cost"]
	42	[4191]	LOADK    	R4 K14 ; R4 := "</font>"
	43	[4191]	CONCAT   	R2 R2 R4 ; R2 := R2 .. R3 .. R4
	44	[4193]	GETUPVAL 	R3 U3 ; R3 := U3
	45	[4193]	GETGLOBAL	R4 K2 ; R4 := mFuseElement1
	46	[4193]	GETTABLE 	R4 R4 K5 ; R4 := R4["Stats"]
	47	[4193]	CALL     	R3 2 3 ; R3,R4 := R3(R4)
	48	[4194]	EQ       	1 R3 K15 ; if R3 == "" then PC := 54
	49	[4194]	JMP      	54 ; PC := 54
	50	[4195]	LOADK    	R5 K16 ; R5 := "<br><font face=\"Roboto Regular\" color=\"#Content\">"
	51	[4195]	MOVE     	R6 R3 ; R6 := R3
	52	[4195]	LOADK    	R7 K14 ; R7 := "</font>"
	53	[4195]	CONCAT   	R3 R5 R7 ; R3 := R5 .. R6 .. R7
	54	[4198]	GETUPVAL 	R5 U3 ; R5 := U3
	55	[4198]	GETGLOBAL	R6 K4 ; R6 := mFuseElement2
	56	[4198]	GETTABLE 	R6 R6 K5 ; R6 := R6["Stats"]
	57	[4198]	CALL     	R5 2 3 ; R5,R6 := R5(R6)
	58	[4199]	EQ       	1 R5 K15 ; if R5 == "" then PC := 64
	59	[4199]	JMP      	64 ; PC := 64
	60	[4200]	LOADK    	R7 K16 ; R7 := "<br><font face=\"Roboto Regular\" color=\"#Content\">"
	61	[4200]	MOVE     	R8 R5 ; R8 := R5
	62	[4200]	LOADK    	R9 K14 ; R9 := "</font>"
	63	[4200]	CONCAT   	R5 R7 R9 ; R5 := R7 .. R8 .. R9
	64	[4203]	LOADK    	R7 K16 ; R7 := "<br><font face=\"Roboto Regular\" color=\"#Content\">"
	65	[4204]	GETUPVAL 	R8 U3 ; R8 := U3
	66	[4204]	MOVE     	R9 R0 ; R9 := R0
	67	[4211]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	68	[4211]	MOVE     	R0 R4 ; R0 := R4
	69	[4211]	MOVE     	R0 R6 ; R0 := R6
	70	[4204]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	71	[4212]	LOADK    	R9 K14 ; R9 := "</font>"
	72	[4212]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	73	[4214]	GETGLOBAL	R8 K17 ; R8 := 0xae91e43b
	74	[4214]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0x42b04007]
	75	[4214]	LOADK    	R10 K19 ; R10 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponWord"
	76	[4214]	OP_LOADBOOL	R11 0 0 ; R11 := false
	77	[4214]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	78	[4215]	GETGLOBAL	R9 K17 ; R9 := 0xae91e43b
	79	[4215]	SELF     	R9 R9 K18 ; R10 := R9; R9 := R9[0x42b04007]
	80	[4215]	LOADK    	R11 K20 ; R11 := "/Lotus/Language/Railjack/ConfirmFuseItem"
	81	[4215]	OP_LOADBOOL	R12 1 0 ; R12 := true
	82	[4215]	NEWTABLE 	R13 0 10 ; R13 := {}
	83	[4216]	GETGLOBAL	R14 K2 ; R14 := mFuseElement1
	84	[4216]	GETTABLE 	R14 R14 K11 ; R14 := R14["Name"]
	85	[4216]	SETTABLE 	R13 K21 R14 ; R13["TYPE_ONE"] := R14
	86	[4217]	GETGLOBAL	R14 K4 ; R14 := mFuseElement2
	87	[4217]	GETTABLE 	R14 R14 K11 ; R14 := R14["Name"]
	88	[4217]	SETTABLE 	R13 K22 R14 ; R13["TYPE_TWO"] := R14
	89	[4218]	GETGLOBAL	R14 K10 ; R14 := mFuseElement3
	90	[4218]	GETTABLE 	R14 R14 K11 ; R14 := R14["Name"]
	91	[4218]	SETTABLE 	R13 K23 R14 ; R13["TYPE_THREE"] := R14
	92	[4219]	SETTABLE 	R13 K24 R3 ; R13["STATS_ONE"] := R3
	93	[4220]	SETTABLE 	R13 K25 R5 ; R13["STATS_TWO"] := R5
	94	[4221]	SETTABLE 	R13 K26 R7 ; R13["STATS_THREE"] := R7
	95	[4222]	SETTABLE 	R13 K27 R2 ; R13["COST"] := R2
	96	[4223]	SETTABLE 	R13 K28 R8 ; R13["WORD"] := R8
	97	[4224]	SETTABLE 	R13 K29 K30 ; R13["HIGHLIGHT"] := "<font color=\"#FloatingContentHighlight\"><b>"
	98	[4225]	SETTABLE 	R13 K31 K32 ; R13["HIGHLIGHT_END"] := "</b></font>"
	99	[4215]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	100	[4227]	GETGLOBAL	R10 K17 ; R10 := 0xae91e43b
	101	[4227]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0x42b04007]
	102	[4227]	LOADK    	R12 K33 ; R12 := "/Lotus/Language/Railjack/ConfirmFuseItemConsole1"
	103	[4227]	OP_LOADBOOL	R13 1 0 ; R13 := true
	104	[4227]	NEWTABLE 	R14 0 7 ; R14 := {}
	105	[4228]	GETGLOBAL	R15 K2 ; R15 := mFuseElement1
	106	[4228]	GETTABLE 	R15 R15 K11 ; R15 := R15["Name"]
	107	[4228]	SETTABLE 	R14 K21 R15 ; R14["TYPE_ONE"] := R15
	108	[4229]	GETGLOBAL	R15 K4 ; R15 := mFuseElement2
	109	[4229]	GETTABLE 	R15 R15 K11 ; R15 := R15["Name"]
	110	[4229]	SETTABLE 	R14 K22 R15 ; R14["TYPE_TWO"] := R15
	111	[4230]	GETGLOBAL	R15 K10 ; R15 := mFuseElement3
	112	[4230]	GETTABLE 	R15 R15 K11 ; R15 := R15["Name"]
	113	[4230]	SETTABLE 	R14 K23 R15 ; R14["TYPE_THREE"] := R15
	114	[4231]	SETTABLE 	R14 K24 R3 ; R14["STATS_ONE"] := R3
	115	[4232]	SETTABLE 	R14 K25 R5 ; R14["STATS_TWO"] := R5
	116	[4233]	SETTABLE 	R14 K26 R7 ; R14["STATS_THREE"] := R7
	117	[4234]	SETTABLE 	R14 K27 R2 ; R14["COST"] := R2
	118	[4227]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	119	[4236]	LOADK    	R11 K34 ; R11 := "<font color=\"#FloatingContent\">"
	120	[4236]	MOVE     	R12 R10 ; R12 := R10
	121	[4236]	LOADK    	R13 K14 ; R13 := "</font>"
	122	[4236]	CONCAT   	R10 R11 R13 ; R10 := R11 .. R12 .. R13
	123	[4237]	GETGLOBAL	R11 K17 ; R11 := 0xae91e43b
	124	[4237]	SELF     	R11 R11 K18 ; R12 := R11; R11 := R11[0x42b04007]
	125	[4237]	LOADK    	R13 K35 ; R13 := "/Lotus/Language/Railjack/ConfirmFuseItemConsole2"
	126	[4237]	OP_LOADBOOL	R14 1 0 ; R14 := true
	127	[4237]	NEWTABLE 	R15 0 1 ; R15 := {}
	128	[4237]	SETTABLE 	R15 K28 R8 ; R15["WORD"] := R8
	129	[4237]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	130	[4239]	GETUPVAL 	R12 U4 ; R12 := U4
	131	[4239]	GETTABLE 	R12 R12 K36 ; R12 := R12[0x78a7195b]
	132	[4239]	GETGLOBAL	R13 K17 ; R13 := 0xae91e43b
	133	[4239]	GETGLOBAL	R14 K37 ; R14 := 0x7f5022cf
	134	[4239]	GETTABLE 	R14 R14 K38 ; R14 := R14[0x04981ab3]
	135	[4239]	MOVE     	R15 R8 ; R15 := R8
	136	[4239]	CALL     	R14 2 2 ; R14 := R14(R15)
	137	[4239]	MOVE     	R15 R9 ; R15 := R9
	138	[4239]	MOVE     	R16 R10 ; R16 := R10
	139	[4239]	MOVE     	R17 R11 ; R17 := R11
	140	[4239]	LOADK    	R18 K39 ; R18 := "ConfirmFuseItem"
	141	[4239]	LOADNIL  	R19 R19 ; R19 := nil
	142	[4239]	OP_LOADBOOL	R20 1 0 ; R20 := true
	143	[4239]	LOADK    	R21 := 700.000000
	144	[4239]	CALL     	R12 10 1 ; R12(R13,R14,R15,R16,R17,R18,R19,R20,R21)
	145	[4240]	RETURN   	R0 1 ; return 

function #118 <?:4242,4252> (17 instructions, 68 bytes at 00000211227C86F0)
1 param, 2 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[4243]	EQ       	0 R0 K1 ; if R0 ~= 4.000000 then PC := 8
	2	[4243]	JMP      	8 ; PC := 8
	3	[4244]	GETGLOBAL	R1 K2 ; R1 := mFuseElement3
	4	[4244]	SETTABLE 	R1 K3 K4 ; R1["SubA"] := true
	5	[4245]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4245]	CALL     	R1 1 1 ; R1()
	7	[4245]	JMP      	17 ; PC := 17
	8	[4246]	EQ       	0 R0 K5 ; if R0 ~= 6.000000 then PC := 15
	9	[4246]	JMP      	15 ; PC := 15
	10	[4247]	GETGLOBAL	R1 K2 ; R1 := mFuseElement3
	11	[4247]	SETTABLE 	R1 K3 K6 ; R1["SubA"] := false
	12	[4248]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4248]	CALL     	R1 1 1 ; R1()
	14	[4248]	JMP      	17 ; PC := 17
	15	[4250]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[4250]	CALL     	R1 1 1 ; R1()
	17	[4252]	RETURN   	R0 1 ; return 

function #119 <?:4254,4264> (21 instructions, 84 bytes at 00000211346D2490)
2 params, 10 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[4255]	GETTABLE 	R2 R0 K0 ; R2 := R0["buffs"]
	2	[4256]	SETTABLE 	R0 K0 K1 ; R0["buffs"] := nil
	3	[4257]	GETGLOBAL	R3 K2 ; R3 := cjson
	4	[4257]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xb139d7bc]
	5	[4257]	MOVE     	R4 R0 ; R4 := R0
	6	[4257]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[4258]	SETTABLE 	R0 K0 R2 ; R0["buffs"] := R2
	8	[4260]	SELF     	R4 R1 K4 ; R5 := R1; R4 := R1[0xce30fcd8]
	9	[4260]	MOVE     	R6 R3 ; R6 := R3
	10	[4260]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	11	[4261]	NEWTABLE 	R5 0 1 ; R5 := {}
	12	[4261]	SETTABLE 	R5 K5 K6 ; R5["mDesc"] := ""
	13	[4262]	GETUPVAL 	R6 U0 ; R6 := U0
	14	[4262]	GETTABLE 	R6 R6 K7 ; R6 := R6[0x41223b3a]
	15	[4262]	MOVE     	R7 R5 ; R7 := R5
	16	[4262]	MOVE     	R8 R4 ; R8 := R4
	17	[4262]	GETGLOBAL	R9 K8 ; R9 := 0xae91e43b
	18	[4262]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	19	[4263]	GETTABLE 	R6 R5 K5 ; R6 := R5["mDesc"]
	20	[4263]	RETURN   	R6 2 ; return R6 
	21	[4264]	RETURN   	R0 1 ; return 

function #120 <?:4266,4275> (34 instructions, 136 bytes at 0000021130263780)
0 params, 7 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[4267]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[4267]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xe27b35bb]
	3	[4267]	CALL     	R0 1 2 ; R0 := R0()
	4	[4268]	SETTABLE 	R0 K2 K3 ; R0["dialogType"] := 5.000000
	5	[4269]	GETGLOBAL	R1 K5 ; R1 := 0x603636ad
	6	[4269]	LOADK    	R2 K6 ; R2 := "/Lotus/Language/Railjack/ConfirmFuseStat"
	7	[4269]	NEWTABLE 	R3 0 2 ; R3 := {}
	8	[4269]	GETUPVAL 	R4 U0 ; R4 := U0
	9	[4269]	GETGLOBAL	R5 K8 ; R5 := mFuseElement1
	10	[4269]	GETTABLE 	R5 R5 K9 ; R5 := R5["Data"]
	11	[4269]	GETGLOBAL	R6 K8 ; R6 := mFuseElement1
	12	[4269]	GETTABLE 	R6 R6 K10 ; R6 := R6["Upgrade"]
	13	[4269]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	14	[4269]	SETTABLE 	R3 K7 R4 ; R3["STATS_ONE"] := R4
	15	[4269]	GETUPVAL 	R4 U0 ; R4 := U0
	16	[4269]	GETGLOBAL	R5 K12 ; R5 := mFuseElement2
	17	[4269]	GETTABLE 	R5 R5 K9 ; R5 := R5["Data"]
	18	[4269]	GETGLOBAL	R6 K12 ; R6 := mFuseElement2
	19	[4269]	GETTABLE 	R6 R6 K10 ; R6 := R6["Upgrade"]
	20	[4269]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	21	[4269]	SETTABLE 	R3 K11 R4 ; R3["STATS_TWO"] := R4
	22	[4269]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	23	[4269]	SETTABLE 	R0 K4 R1 ; R0["locString"] := R1
	24	[4270]	SETTABLE 	R0 K13 K14 ; R0["firstString"] := "/Lotus/Language/Railjack/ConfirmFuseStat1"
	25	[4271]	SETTABLE 	R0 K15 K16 ; R0["secondString"] := "/Lotus/Language/Railjack/ConfirmFuseStat2"
	26	[4272]	SETTABLE 	R0 K17 K18 ; R0["thirdString"] := "/Menu/Confirm_Item_Cancel"
	27	[4273]	SELF     	R1 R0 K19 ; R2 := R0; R1 := R0[0xe6ccc5b9]
	28	[4273]	LOADK    	R3 K20 ; R3 := "FusePreview"
	29	[4273]	CALL     	R1 3 1 ; R1(R2,R3)
	30	[4274]	GETUPVAL 	R1 U1 ; R1 := U1
	31	[4274]	GETTABLE 	R1 R1 K21 ; R1 := R1[0xe99b84e7]
	32	[4274]	MOVE     	R2 R0 ; R2 := R0
	33	[4274]	CALL     	R1 2 1 ; R1(R2)
	34	[4275]	RETURN   	R0 1 ; return 

function #121 <?:4277,4327> (143 instructions, 572 bytes at 0000021117015370)
1 param, 18 slots, 1 upvalue, 0 locals, 26 constants, 0 functions
	1	[4280]	GETTABLE 	R3 R0 K0 ; R3 := R0["mUpgradeType"]
	2	[4281]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	3	[4281]	MOVE     	R5 R3 ; R5 := R3
	4	[4281]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[4281]	TEST     	R4 0 ; if not R4 then PC := 12
	6	[4281]	JMP      	12 ; PC := 12
	7	[4281]	GETTABLE 	R4 R0 K2 ; R4 := R0["Item"]
	8	[4281]	EQ       	1 R4 K3 ; if R4 == nil then PC := 12
	9	[4281]	JMP      	12 ; PC := 12
	10	[4282]	GETTABLE 	R4 R0 K2 ; R4 := R0["Item"]
	11	[4282]	GETTABLE 	R3 R4 K0 ; R3 := R4["mUpgradeType"]
	12	[4284]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	13	[4284]	MOVE     	R5 R3 ; R5 := R3
	14	[4284]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4284]	TEST     	R4 0 ; if not R4 then PC := 27
	16	[4284]	JMP      	27 ; PC := 27
	17	[4284]	GETTABLE 	R4 R0 K4 ; R4 := R0["RawItem"]
	18	[4284]	EQ       	1 R4 K3 ; if R4 == nil then PC := 27
	19	[4284]	JMP      	27 ; PC := 27
	20	[4284]	GETTABLE 	R4 R0 K4 ; R4 := R0["RawItem"]
	21	[4284]	GETTABLE 	R4 R4 K2 ; R4 := R4["Item"]
	22	[4284]	EQ       	1 R4 K3 ; if R4 == nil then PC := 27
	23	[4284]	JMP      	27 ; PC := 27
	24	[4285]	GETTABLE 	R4 R0 K4 ; R4 := R0["RawItem"]
	25	[4285]	GETTABLE 	R4 R4 K2 ; R4 := R4["Item"]
	26	[4285]	GETTABLE 	R3 R4 K0 ; R3 := R4["mUpgradeType"]
	27	[4287]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	28	[4287]	MOVE     	R5 R3 ; R5 := R3
	29	[4287]	CALL     	R4 2 2 ; R4 := R4(R5)
	30	[4287]	TEST     	R4 0 ; if not R4 then PC := 37
	31	[4287]	JMP      	37 ; PC := 37
	32	[4288]	GETGLOBAL	R4 K5 ; R4 := 0xb009bbc6
	33	[4288]	GETTABLE 	R5 R0 K6 ; R5 := R0["ItemType"]
	34	[4288]	CALL     	R4 2 2 ; R4 := R4(R5)
	35	[4288]	MOVE     	R1 R4 ; R1 := R4
	36	[4288]	JMP      	51 ; PC := 51
	37	[4290]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	38	[4290]	MOVE     	R5 R3 ; R5 := R3
	39	[4290]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[4290]	TEST     	R4 1 ; if R4 then PC := 51
	41	[4290]	JMP      	51 ; PC := 51
	42	[4291]	GETGLOBAL	R4 K7 ; R4 := 0x6c97a788
	43	[4291]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x1aba4d9e]
	44	[4291]	CALL     	R4 1 2 ; R4 := R4()
	45	[4291]	MOVE     	R2 R4 ; R2 := R4
	46	[4292]	SETTABLE 	R2 K9 R3 ; R2["mItemType"] := R3
	47	[4293]	GETGLOBAL	R4 K5 ; R4 := 0xb009bbc6
	48	[4293]	GETTABLE 	R5 R2 K10 ; R5 := R2["mInstance"]
	49	[4293]	CALL     	R4 2 2 ; R4 := R4(R5)
	50	[4293]	MOVE     	R1 R4 ; R1 := R4
	51	[4297]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	52	[4297]	MOVE     	R5 R1 ; R5 := R1
	53	[4297]	CALL     	R4 2 2 ; R4 := R4(R5)
	54	[4297]	TEST     	R4 1 ; if R4 then PC := 137
	55	[4297]	JMP      	137 ; PC := 137
	56	[4297]	SELF     	R4 R1 K11 ; R5 := R1; R4 := R1[0xf2deaf69]
	57	[4297]	GETGLOBAL	R6 K12 ; R6 := gLotusWeaponUpgradeBaseType
	58	[4297]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	59	[4297]	TEST     	R4 0 ; if not R4 then PC := 137
	60	[4297]	JMP      	137 ; PC := 137
	61	[4298]	GETTABLE 	R4 R0 K13 ; R4 := R0["mUpgradeFingerprint"]
	62	[4299]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 81
	63	[4299]	JMP      	81 ; PC := 81
	64	[4300]	GETTABLE 	R5 R0 K2 ; R5 := R0["Item"]
	65	[4300]	EQ       	1 R5 K3 ; if R5 == nil then PC := 69
	66	[4300]	JMP      	69 ; PC := 69
	67	[4301]	GETTABLE 	R5 R0 K2 ; R5 := R0["Item"]
	68	[4301]	GETTABLE 	R4 R5 K13 ; R4 := R5["mUpgradeFingerprint"]
	69	[4303]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 81
	70	[4303]	JMP      	81 ; PC := 81
	71	[4303]	GETTABLE 	R5 R0 K4 ; R5 := R0["RawItem"]
	72	[4303]	EQ       	1 R5 K3 ; if R5 == nil then PC := 81
	73	[4303]	JMP      	81 ; PC := 81
	74	[4303]	GETTABLE 	R5 R0 K4 ; R5 := R0["RawItem"]
	75	[4303]	GETTABLE 	R5 R5 K2 ; R5 := R5["Item"]
	76	[4303]	EQ       	1 R5 K3 ; if R5 == nil then PC := 81
	77	[4303]	JMP      	81 ; PC := 81
	78	[4304]	GETTABLE 	R5 R0 K4 ; R5 := R0["RawItem"]
	79	[4304]	GETTABLE 	R5 R5 K2 ; R5 := R5["Item"]
	80	[4304]	GETTABLE 	R4 R5 K13 ; R4 := R5["mUpgradeFingerprint"]
	81	[4308]	SELF     	R5 R1 K14 ; R6 := R1; R5 := R1[0xce30fcd8]
	82	[4308]	MOVE     	R7 R4 ; R7 := R4
	83	[4308]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	84	[4309]	NEWTABLE 	R6 0 1 ; R6 := {}
	85	[4309]	SETTABLE 	R6 K15 K16 ; R6["mDesc"] := ""
	86	[4310]	GETUPVAL 	R7 U0 ; R7 := U0
	87	[4310]	GETTABLE 	R7 R7 K17 ; R7 := R7[0x41223b3a]
	88	[4310]	MOVE     	R8 R6 ; R8 := R6
	89	[4310]	MOVE     	R9 R5 ; R9 := R5
	90	[4310]	GETGLOBAL	R10 K18 ; R10 := 0xae91e43b
	91	[4310]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	92	[4312]	GETGLOBAL	R7 K19 ; R7 := cjson
	93	[4312]	GETTABLE 	R7 R7 K20 ; R7 := R7[0x7ab914d8]
	94	[4312]	MOVE     	R8 R4 ; R8 := R4
	95	[4312]	CALL     	R7 2 2 ; R7 := R7(R8)
	96	[4314]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	97	[4314]	MOVE     	R9 R7 ; R9 := R7
	98	[4314]	CALL     	R8 2 2 ; R8 := R8(R9)
	99	[4314]	TEST     	R8 1 ; if R8 then PC := 132
	100	[4314]	JMP      	132 ; PC := 132
	101	[4314]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	102	[4314]	GETTABLE 	R9 R7 K21 ; R9 := R7["buffs"]
	103	[4314]	CALL     	R8 2 2 ; R8 := R8(R9)
	104	[4314]	TEST     	R8 1 ; if R8 then PC := 132
	105	[4314]	JMP      	132 ; PC := 132
	106	[4315]	NEWTABLE 	R8 0 0 ; R8 := {}
	107	[4316]	GETGLOBAL	R9 K22 ; R9 := 0xc8802016
	108	[4316]	GETTABLE 	R10 R7 K21 ; R10 := R7["buffs"]
	109	[4316]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	110	[4316]	JMP      	129 ; PC := 129
	111	[4317]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	112	[4317]	MOVE     	R15 R13 ; R15 := R13
	113	[4317]	CALL     	R14 2 2 ; R14 := R14(R15)
	114	[4317]	TEST     	R14 1 ; if R14 then PC := 129
	115	[4317]	JMP      	129 ; PC := 129
	116	[4317]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	117	[4317]	GETTABLE 	R15 R13 K23 ; R15 := R13["Tag"]
	118	[4317]	CALL     	R14 2 2 ; R14 := R14(R15)
	119	[4317]	TEST     	R14 1 ; if R14 then PC := 129
	120	[4317]	JMP      	129 ; PC := 129
	121	[4317]	GETTABLE 	R14 R13 K23 ; R14 := R13["Tag"]
	122	[4317]	EQ       	1 R14 K16 ; if R14 == "" then PC := 129
	123	[4317]	JMP      	129 ; PC := 129
	124	[4318]	GETGLOBAL	R14 K24 ; R14 := 0x33bdd652
	125	[4318]	GETTABLE 	R14 R14 K25 ; R14 := R14[0x23d5322f]
	126	[4318]	MOVE     	R15 R8 ; R15 := R8
	127	[4318]	MOVE     	R16 R13 ; R16 := R13
	128	[4318]	CALL     	R14 3 1 ; R14(R15,R16)
	129	[4316]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 111; R11 := R12 end
	130	[4319]	JMP      	111 ; PC := 111
	131	[4321]	SETTABLE 	R7 K21 R8 ; R7["buffs"] := R8
	132	[4324]	GETTABLE 	R14 R6 K15 ; R14 := R6["mDesc"]
	133	[4324]	MOVE     	R15 R7 ; R15 := R7
	134	[4324]	MOVE     	R16 R1 ; R16 := R1
	135	[4324]	MOVE     	R17 R2 ; R17 := R2
	136	[4324]	RETURN   	R14 5 ; return R14, R15, R16, R17 
	137	[4326]	LOADK    	R14 K16 ; R14 := ""
	138	[4326]	NEWTABLE 	R15 0 1 ; R15 := {}
	139	[4326]	NEWTABLE 	R16 0 0 ; R16 := {}
	140	[4326]	SETTABLE 	R15 K21 R16 ; R15["buffs"] := R16
	141	[4326]	LOADNIL  	R16 R17 ; R16 := R17 := nil
	142	[4326]	RETURN   	R14 5 ; return R14, R15, R16, R17 
	143	[4327]	RETURN   	R0 1 ; return 

function #122 <?:4329,4386> (111 instructions, 444 bytes at 000002112C2980D0)
2 params, 19 slots, 5 upvalues, 0 locals, 32 constants, 0 functions
	1	[4330]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4330]	MOVE     	R3 R0 ; R3 := R0
	3	[4330]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4330]	TEST     	R2 0 ; if not R2 then PC := 13
	5	[4330]	JMP      	13 ; PC := 13
	6	[4331]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[4331]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xa53f5e12]
	8	[4331]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Railjack/InvalidFusionElement"
	9	[4331]	CALL     	R2 2 1 ; R2(R3)
	10	[4332]	GETUPVAL 	R2 U1 ; R2 := U1
	11	[4332]	CALL     	R2 1 1 ; R2()
	12	[4333]	RETURN   	R0 1 ; return 
	13	[4336]	GETTABLE 	R2 R0 K3 ; R2 := R0["ItemType"]
	14	[4337]	GETTABLE 	R3 R0 K4 ; R3 := R0["mPurchasedInfo"]
	15	[4337]	GETTABLE 	R3 R3 K5 ; R3 := R3["UID"]
	16	[4338]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	17	[4338]	MOVE     	R5 R2 ; R5 := R2
	18	[4338]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[4338]	TEST     	R4 1 ; if R4 then PC := 26
	20	[4338]	JMP      	26 ; PC := 26
	21	[4338]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	22	[4338]	MOVE     	R5 R3 ; R5 := R3
	23	[4338]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[4338]	TEST     	R4 0 ; if not R4 then PC := 33
	25	[4338]	JMP      	33 ; PC := 33
	26	[4339]	GETUPVAL 	R4 U0 ; R4 := U0
	27	[4339]	GETTABLE 	R4 R4 K1 ; R4 := R4[0xa53f5e12]
	28	[4339]	LOADK    	R5 K6 ; R5 := "/Lotus/Language/Railjack/InvalidFusionType"
	29	[4339]	CALL     	R4 2 1 ; R4(R5)
	30	[4340]	GETUPVAL 	R4 U1 ; R4 := U1
	31	[4340]	CALL     	R4 1 1 ; R4()
	32	[4341]	RETURN   	R0 1 ; return 
	33	[4344]	SELF     	R4 R2 K7 ; R5 := R2; R4 := R2[0xe223e2b1]
	34	[4344]	CALL     	R4 2 2 ; R4 := R4(R5)
	35	[4345]	OP_LOADBOOL	R5 0 0 ; R5 := false
	36	[4346]	LOADK    	R6 := 1.000000
	37	[4346]	GETUPVAL 	R7 U2 ; R7 := U2
	38	[4346]	LEN      	R7 R7 ; R7 := # R7
	39	[4346]	LOADK    	R8 := 1.000000
	40	[4346]	FORPREP  	R6 51 ; R6 -= R8; PC := 51
	41	[4347]	GETGLOBAL	R10 K8 ; R10 := 0x7f5022cf
	42	[4347]	GETTABLE 	R10 R10 K9 ; R10 := R10[0xa5c556b9]
	43	[4347]	MOVE     	R11 R4 ; R11 := R4
	44	[4347]	GETUPVAL 	R12 U2 ; R12 := U2
	45	[4347]	GETTABLE 	R12 R12 R9 ; R12 := R12[R9]
	46	[4347]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	47	[4347]	EQ       	1 R10 K10 ; if R10 == nil then PC := 51
	48	[4347]	JMP      	51 ; PC := 51
	49	[4348]	OP_LOADBOOL	R5 1 0 ; R5 := true
	50	[4349]	JMP      	52 ; PC := 52
	51	[4346]	FORLOOP  	R6 41 ; R6 += R8; if R6 <= R7 then begin PC := 41; R9 := R6 end
	52	[4352]	TEST     	R5 1 ; if R5 then PC := 61
	53	[4352]	JMP      	61 ; PC := 61
	54	[4353]	GETUPVAL 	R10 U0 ; R10 := U0
	55	[4353]	GETTABLE 	R10 R10 K1 ; R10 := R10[0xa53f5e12]
	56	[4353]	LOADK    	R11 K11 ; R11 := "/Lotus/Language/Railjack/InvalidFusionManufacturer"
	57	[4353]	CALL     	R10 2 1 ; R10(R11)
	58	[4354]	GETUPVAL 	R10 U1 ; R10 := U1
	59	[4354]	CALL     	R10 1 1 ; R10()
	60	[4355]	RETURN   	R0 1 ; return 
	61	[4358]	GETUPVAL 	R10 U3 ; R10 := U3
	62	[4358]	MOVE     	R11 R0 ; R11 := R0
	63	[4358]	CALL     	R10 2 5 ; R10,R11,R12,R13 := R10(R11)
	64	[4359]	TEST     	R1 0 ; if not R1 then PC := 81
	65	[4359]	JMP      	81 ; PC := 81
	66	[4359]	LEN      	R14 R10 ; R14 := # R10
	67	[4359]	EQ       	0 R14 K12 ; if R14 ~= 0.000000 then PC := 81
	68	[4359]	JMP      	81 ; PC := 81
	69	[4360]	GETUPVAL 	R14 U0 ; R14 := U0
	70	[4360]	GETTABLE 	R14 R14 K1 ; R14 := R14[0xa53f5e12]
	71	[4360]	GETGLOBAL	R15 K13 ; R15 := 0x603636ad
	72	[4360]	LOADK    	R16 K14 ; R16 := "/Lotus/Language/Railjack/FuseCannotImprove"
	73	[4360]	NEWTABLE 	R17 0 1 ; R17 := {}
	74	[4360]	GETTABLE 	R18 R0 K16 ; R18 := R0["Name"]
	75	[4360]	SETTABLE 	R17 K15 R18 ; R17["ITEM"] := R18
	76	[4360]	CALL     	R15 3 0 ; R15,... := R15(R16,R17)
	77	[4360]	CALL     	R14 0 1 ; R14(R15,...)
	78	[4361]	GETUPVAL 	R14 U1 ; R14 := U1
	79	[4361]	CALL     	R14 1 1 ; R14()
	80	[4362]	RETURN   	R0 1 ; return 
	81	[4365]	GETTABLE 	R14 R0 K17 ; R14 := R0["SalvageRecipe"]
	82	[4366]	GETTABLE 	R15 R0 K18 ; R15 := R0["SalvageState"]
	83	[4366]	GETUPVAL 	R16 U4 ; R16 := U4
	84	[4366]	GETTABLE 	R16 R16 K19 ; R16 := R16["OWNED"]
	85	[4366]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 88
	86	[4366]	JMP      	88 ; PC := 88
	87	[4367]	LOADNIL  	R14 R14 ; R14 := nil
	88	[4370]	GETGLOBAL	R15 K20 ; R15 := 0xb009bbc6
	89	[4370]	MOVE     	R16 R2 ; R16 := R2
	90	[4370]	CALL     	R15 2 2 ; R15 := R15(R16)
	91	[4370]	SELF     	R15 R15 K21 ; R16 := R15; R15 := R15[0xb24acced]
	92	[4370]	CALL     	R15 2 2 ; R15 := R15(R16)
	93	[4370]	ADD      	R15 R15 K22 ; R15 := R15 + 1.000000
	94	[4373]	GETTABLE 	R16 R0 K24 ; R16 := R0["Equipped"]
	95	[4373]	TEST     	R16 1 ; if R16 then PC := 98
	96	[4373]	JMP      	98 ; PC := 98
	97	[4373]	GETGLOBAL	R16 K23 ; R16 := mEquipAfterFuse
	98	[4373]	SETGLOBALHASH	R16 K23 ; mEquipAfterFuse := R16
	99	[4375]	NEWTABLE 	R16 0 9 ; R16 := {}
	100	[4376]	GETTABLE 	R17 R0 K16 ; R17 := R0["Name"]
	101	[4376]	SETTABLE 	R16 K16 R17 ; R16["Name"] := R17
	102	[4377]	SETTABLE 	R16 K25 R2 ; R16["Type"] := R2
	103	[4378]	SETTABLE 	R16 K5 R3 ; R16["UID"] := R3
	104	[4379]	SETTABLE 	R16 K26 R10 ; R16["Stats"] := R10
	105	[4380]	SETTABLE 	R16 K27 R11 ; R16["Data"] := R11
	106	[4381]	SETTABLE 	R16 K28 R12 ; R16["Upgrade"] := R12
	107	[4382]	SETTABLE 	R16 K29 R13 ; R16["WeaponUpgrade"] := R13
	108	[4383]	SETTABLE 	R16 K30 R14 ; R16["Recipe"] := R14
	109	[4384]	SETTABLE 	R16 K31 R15 ; R16["Tier"] := R15
	110	[4385]	RETURN   	R16 2 ; return R16 
	111	[4386]	RETURN   	R0 1 ; return 

function #123 <?:4388,4462> (223 instructions, 892 bytes at 00000211239E8230)
0 params, 36 slots, 4 upvalues, 0 locals, 43 constants, 0 functions
	1	[4389]	GETGLOBAL	R0 K0 ; R0 := mFuseElement1
	2	[4389]	GETTABLE 	R0 R0 K1 ; R0 := R0["Tier"]
	3	[4390]	GETGLOBAL	R1 K2 ; R1 := mFuseElement2
	4	[4390]	GETTABLE 	R1 R1 K1 ; R1 := R1["Tier"]
	5	[4391]	LT       	1 R0 R1 ; if R0 < R1 then PC := 8
	6	[4391]	JMP      	8 ; PC := 8
	7	[4391]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 8
	8	[4391]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[4392]	TEST     	R2 0 ; if not R2 then PC := 14
	10	[4392]	JMP      	14 ; PC := 14
	11	[4393]	MOVE     	R3 R1 ; R3 := R1
	12	[4393]	MOVE     	R1 R0 ; R1 := R0
	13	[4393]	MOVE     	R0 R3 ; R0 := R3
	14	[4396]	GETUPVAL 	R3 U0 ; R3 := U0
	15	[4396]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	16	[4396]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	17	[4397]	GETGLOBAL	R4 K3 ; R4 := 0x7b998233
	18	[4397]	GETGLOBAL	R5 K2 ; R5 := mFuseElement2
	19	[4397]	GETTABLE 	R5 R5 K4 ; R5 := R5["Recipe"]
	20	[4397]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[4397]	TEST     	R4 0 ; if not R4 then PC := 69
	22	[4397]	JMP      	69 ; PC := 69
	23	[4398]	EQ       	0 R3 K5 ; if R3 ~= nil then PC := 37
	24	[4398]	JMP      	37 ; PC := 37
	25	[4399]	GETGLOBAL	R4 K6 ; R4 := 0x3d106989
	26	[4399]	LOADK    	R5 K7 ; R5 := "Unexpected item tier, could not calculate fusion cost!"
	27	[4399]	CALL     	R4 2 1 ; R4(R5)
	28	[4400]	GETUPVAL 	R4 U1 ; R4 := U1
	29	[4400]	GETTABLE 	R4 R4 K8 ; R4 := R4[0xa53f5e12]
	30	[4400]	LOADK    	R5 K9 ; R5 := "/Lotus/Language/Kingpins/FuseFailed"
	31	[4400]	CALL     	R4 2 1 ; R4(R5)
	32	[4401]	GETUPVAL 	R4 U2 ; R4 := U2
	33	[4401]	CALL     	R4 1 1 ; R4()
	34	[4402]	LOADNIL  	R4 R4 ; R4 := nil
	35	[4402]	RETURN   	R4 2 ; return R4 
	36	[4402]	JMP      	62 ; PC := 62
	37	[4403]	GETGLOBAL	R4 K10 ; R4 := 0x25d99d89
	38	[4403]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x25a6e75e]
	39	[4403]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[4403]	GETTABLE 	R4 R4 K12 ; R4 := R4["mFusionPoints"]
	41	[4403]	LT       	0 R4 R3 ; if R4 >= R3 then PC := 62
	42	[4403]	JMP      	62 ; PC := 62
	43	[4404]	GETGLOBAL	R4 K13 ; R4 := 0xae91e43b
	44	[4404]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x42b04007]
	45	[4404]	LOADK    	R6 K15 ; R6 := "/Lotus/Language/Menu/FusionPoints"
	46	[4404]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[4404]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	48	[4405]	GETUPVAL 	R5 U1 ; R5 := U1
	49	[4405]	GETTABLE 	R5 R5 K8 ; R5 := R5[0xa53f5e12]
	50	[4405]	GETGLOBAL	R6 K13 ; R6 := 0xae91e43b
	51	[4405]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x42b04007]
	52	[4405]	LOADK    	R8 K16 ; R8 := "/Lotus/Language/Railjack/InsufficientFusionResources"
	53	[4405]	OP_LOADBOOL	R9 1 0 ; R9 := true
	54	[4405]	NEWTABLE 	R10 0 1 ; R10 := {}
	55	[4405]	SETTABLE 	R10 K17 R4 ; R10["ITEM"] := R4
	56	[4405]	CALL     	R6 5 0 ; R6,... := R6(R7,R8,R9,R10)
	57	[4405]	CALL     	R5 0 1 ; R5(R6,...)
	58	[4406]	GETUPVAL 	R5 U2 ; R5 := U2
	59	[4406]	CALL     	R5 1 1 ; R5()
	60	[4407]	LOADNIL  	R5 R5 ; R5 := nil
	61	[4407]	RETURN   	R5 2 ; return R5 
	62	[4409]	LOADK    	R5 K18 ; R5 := "<FUSION_POINTS>"
	63	[4409]	GETUPVAL 	R6 U1 ; R6 := U1
	64	[4409]	GETTABLE 	R6 R6 K19 ; R6 := R6[0x1142c7a8]
	65	[4409]	MOVE     	R7 R3 ; R7 := R3
	66	[4409]	CALL     	R6 2 2 ; R6 := R6(R7)
	67	[4409]	CONCAT   	R3 R5 R6 ; R3 := R5 .. R6
	68	[4409]	JMP      	220 ; PC := 220
	69	[4411]	TEST     	R2 0 ; if not R2 then PC := 82
	70	[4411]	JMP      	82 ; PC := 82
	71	[4412]	GETGLOBAL	R5 K6 ; R5 := 0x3d106989
	72	[4412]	LOADK    	R6 K20 ; R6 := "Scrap cannot be higher tier than built item!"
	73	[4412]	CALL     	R5 2 1 ; R5(R6)
	74	[4413]	GETUPVAL 	R5 U1 ; R5 := U1
	75	[4413]	GETTABLE 	R5 R5 K8 ; R5 := R5[0xa53f5e12]
	76	[4413]	LOADK    	R6 K20 ; R6 := "Scrap cannot be higher tier than built item!"
	77	[4413]	CALL     	R5 2 1 ; R5(R6)
	78	[4414]	GETUPVAL 	R5 U2 ; R5 := U2
	79	[4414]	CALL     	R5 1 1 ; R5()
	80	[4415]	LOADNIL  	R5 R5 ; R5 := nil
	81	[4415]	RETURN   	R5 2 ; return R5 
	82	[4417]	GETGLOBAL	R5 K21 ; R5 := 0xb009bbc6
	83	[4417]	GETGLOBAL	R6 K2 ; R6 := mFuseElement2
	84	[4417]	GETTABLE 	R6 R6 K4 ; R6 := R6["Recipe"]
	85	[4417]	CALL     	R5 2 2 ; R5 := R5(R6)
	86	[4418]	SELF     	R6 R5 K22 ; R7 := R5; R6 := R5[0xfc40d6a1]
	87	[4418]	CALL     	R6 2 2 ; R6 := R6(R7)
	88	[4419]	GETUPVAL 	R7 U3 ; R7 := U3
	89	[4419]	GETTABLE 	R7 R7 R1 ; R7 := R7[R1]
	90	[4419]	GETTABLE 	R7 R7 R0 ; R7 := R7[R0]
	91	[4419]	DIV      	R7 R7 K23 ; R7 := R7 / 100.000000
	92	[4420]	EQ       	0 R7 K5 ; if R7 ~= nil then PC := 105
	93	[4420]	JMP      	105 ; PC := 105
	94	[4421]	GETGLOBAL	R8 K6 ; R8 := 0x3d106989
	95	[4421]	LOADK    	R9 K24 ; R9 := "Unexpected item tier, could not calculate fusion multiplier!"
	96	[4421]	CALL     	R8 2 1 ; R8(R9)
	97	[4422]	GETUPVAL 	R8 U1 ; R8 := U1
	98	[4422]	GETTABLE 	R8 R8 K8 ; R8 := R8[0xa53f5e12]
	99	[4422]	LOADK    	R9 K9 ; R9 := "/Lotus/Language/Kingpins/FuseFailed"
	100	[4422]	CALL     	R8 2 1 ; R8(R9)
	101	[4423]	GETUPVAL 	R8 U2 ; R8 := U2
	102	[4423]	CALL     	R8 1 1 ; R8()
	103	[4424]	LOADNIL  	R8 R8 ; R8 := nil
	104	[4424]	RETURN   	R8 2 ; return R8 
	105	[4427]	GETGLOBAL	R8 K25 ; R8 := 0x5bced4c4
	106	[4427]	GETTABLE 	R8 R8 K26 ; R8 := R8[0x99675e23]
	107	[4427]	SELF     	R9 R5 K27 ; R10 := R5; R9 := R5[0x67bc9d36]
	108	[4427]	CALL     	R9 2 2 ; R9 := R9(R10)
	109	[4427]	MUL      	R9 R7 R9 ; R9 := R7 * R9
	110	[4427]	CALL     	R8 2 2 ; R8 := R8(R9)
	111	[4427]	MOVE     	R3 R8 ; R3 := R8
	112	[4428]	GETGLOBAL	R8 K10 ; R8 := 0x25d99d89
	113	[4428]	SELF     	R8 R8 K28 ; R9 := R8; R8 := R8[0x1e11a6d0]
	114	[4428]	CALL     	R8 2 2 ; R8 := R8(R9)
	115	[4428]	LT       	0 R8 R3 ; if R8 >= R3 then PC := 137
	116	[4428]	JMP      	137 ; PC := 137
	117	[4429]	LOADK    	R8 K29 ; R8 := "<CREDITS>"
	118	[4429]	GETGLOBAL	R9 K30 ; R9 := 0x603636ad
	119	[4429]	LOADK    	R10 K31 ; R10 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	120	[4429]	NEWTABLE 	R11 0 0 ; R11 := {}
	121	[4429]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	122	[4429]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	123	[4430]	GETUPVAL 	R9 U1 ; R9 := U1
	124	[4430]	GETTABLE 	R9 R9 K8 ; R9 := R9[0xa53f5e12]
	125	[4430]	GETGLOBAL	R10 K13 ; R10 := 0xae91e43b
	126	[4430]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0x42b04007]
	127	[4430]	LOADK    	R12 K16 ; R12 := "/Lotus/Language/Railjack/InsufficientFusionResources"
	128	[4430]	OP_LOADBOOL	R13 1 0 ; R13 := true
	129	[4430]	NEWTABLE 	R14 0 1 ; R14 := {}
	130	[4430]	SETTABLE 	R14 K17 R8 ; R14["ITEM"] := R8
	131	[4430]	CALL     	R10 5 0 ; R10,... := R10(R11,R12,R13,R14)
	132	[4430]	CALL     	R9 0 1 ; R9(R10,...)
	133	[4431]	GETUPVAL 	R9 U2 ; R9 := U2
	134	[4431]	CALL     	R9 1 1 ; R9()
	135	[4432]	LOADNIL  	R9 R9 ; R9 := nil
	136	[4432]	RETURN   	R9 2 ; return R9 
	137	[4435]	GETGLOBAL	R9 K10 ; R9 := 0x25d99d89
	138	[4435]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0x25a6e75e]
	139	[4435]	CALL     	R9 2 2 ; R9 := R9(R10)
	140	[4435]	SELF     	R9 R9 K32 ; R10 := R9; R9 := R9[0xf4045b7e]
	141	[4435]	CALL     	R9 2 2 ; R9 := R9(R10)
	142	[4437]	LOADK    	R10 K29 ; R10 := "<CREDITS>"
	143	[4437]	GETUPVAL 	R11 U1 ; R11 := U1
	144	[4437]	GETTABLE 	R11 R11 K19 ; R11 := R11[0x1142c7a8]
	145	[4437]	MOVE     	R12 R3 ; R12 := R3
	146	[4437]	CALL     	R11 2 2 ; R11 := R11(R12)
	147	[4437]	CONCAT   	R3 R10 R11 ; R3 := R10 .. R11
	148	[4438]	GETGLOBAL	R10 K33 ; R10 := 0xc8802016
	149	[4438]	MOVE     	R11 R6 ; R11 := R6
	150	[4438]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	151	[4438]	JMP      	218 ; PC := 218
	152	[4439]	GETGLOBAL	R15 K25 ; R15 := 0x5bced4c4
	153	[4439]	GETTABLE 	R15 R15 K26 ; R15 := R15[0x99675e23]
	154	[4439]	GETTABLE 	R16 R14 K34 ; R16 := R14["mItemCount"]
	155	[4439]	MUL      	R16 R7 R16 ; R16 := R7 * R16
	156	[4439]	CALL     	R15 2 2 ; R15 := R15(R16)
	157	[4440]	GETGLOBAL	R16 K30 ; R16 := 0x603636ad
	158	[4440]	GETGLOBAL	R17 K35 ; R17 := 0x64fb1586
	159	[4440]	GETGLOBAL	R18 K21 ; R18 := 0xb009bbc6
	160	[4440]	GETTABLE 	R19 R14 K36 ; R19 := R14["mItemType"]
	161	[4440]	CALL     	R18 2 2 ; R18 := R18(R19)
	162	[4440]	SELF     	R18 R18 K37 ; R19 := R18; R18 := R18[0xd3a9d01f]
	163	[4440]	CALL     	R18 2 0 ; R18,... := R18(R19)
	164	[4440]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	165	[4440]	NEWTABLE 	R18 0 0 ; R18 := {}
	166	[4440]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	167	[4441]	LOADNIL  	R17 R17 ; R17 := nil
	168	[4442]	GETGLOBAL	R18 K33 ; R18 := 0xc8802016
	169	[4442]	MOVE     	R19 R9 ; R19 := R9
	170	[4442]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	171	[4442]	JMP      	178 ; PC := 178
	172	[4443]	GETTABLE 	R23 R14 K36 ; R23 := R14["mItemType"]
	173	[4443]	GETTABLE 	R24 R22 K36 ; R24 := R22["mItemType"]
	174	[4443]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 178
	175	[4443]	JMP      	178 ; PC := 178
	176	[4444]	MOVE     	R17 R22 ; R17 := R22
	177	[4445]	JMP      	180 ; PC := 180
	178	[4442]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 172; R20 := R21 end
	179	[4446]	JMP      	172 ; PC := 172
	180	[4449]	EQ       	1 R17 K5 ; if R17 == nil then PC := 185
	181	[4449]	JMP      	185 ; PC := 185
	182	[4449]	GETTABLE 	R23 R17 K34 ; R23 := R17["mItemCount"]
	183	[4449]	TEST     	R23 1 ; if R23 then PC := 186
	184	[4449]	JMP      	186 ; PC := 186
	185	[4449]	LOADK    	R23 := 0.000000
	186	[4451]	LT       	0 R23 R15 ; if R23 >= R15 then PC := 209
	187	[4451]	JMP      	209 ; PC := 209
	188	[4452]	GETUPVAL 	R24 U1 ; R24 := U1
	189	[4452]	GETTABLE 	R24 R24 K8 ; R24 := R24[0xa53f5e12]
	190	[4452]	GETGLOBAL	R25 K13 ; R25 := 0xae91e43b
	191	[4452]	SELF     	R25 R25 K14 ; R26 := R25; R25 := R25[0x42b04007]
	192	[4452]	LOADK    	R27 K16 ; R27 := "/Lotus/Language/Railjack/InsufficientFusionResources"
	193	[4452]	OP_LOADBOOL	R28 1 0 ; R28 := true
	194	[4452]	NEWTABLE 	R29 0 1 ; R29 := {}
	195	[4452]	MOVE     	R30 R16 ; R30 := R16
	196	[4452]	LOADK    	R31 K38 ; R31 := " ("
	197	[4452]	MOVE     	R32 R23 ; R32 := R23
	198	[4452]	LOADK    	R33 K39 ; R33 := "/"
	199	[4452]	MOVE     	R34 R15 ; R34 := R15
	200	[4452]	LOADK    	R35 K40 ; R35 := ")"
	201	[4452]	CONCAT   	R30 R30 R35 ; R30 := R30 .. R31 .. R32 .. R33 .. R34 .. R35
	202	[4452]	SETTABLE 	R29 K17 R30 ; R29["ITEM"] := R30
	203	[4452]	CALL     	R25 5 0 ; R25,... := R25(R26,R27,R28,R29)
	204	[4452]	CALL     	R24 0 1 ; R24(R25,...)
	205	[4453]	GETUPVAL 	R24 U2 ; R24 := U2
	206	[4453]	CALL     	R24 1 1 ; R24()
	207	[4454]	LOADNIL  	R24 R24 ; R24 := nil
	208	[4454]	RETURN   	R24 2 ; return R24 
	209	[4457]	MOVE     	R24 R3 ; R24 := R3
	210	[4457]	LOADK    	R25 K41 ; R25 := "</font>, <font color=\"#FloatingContentHighlight\">"
	211	[4457]	GETUPVAL 	R26 U1 ; R26 := U1
	212	[4457]	GETTABLE 	R26 R26 K19 ; R26 := R26[0x1142c7a8]
	213	[4457]	MOVE     	R27 R15 ; R27 := R15
	214	[4457]	CALL     	R26 2 2 ; R26 := R26(R27)
	215	[4457]	LOADK    	R27 K42 ; R27 := " "
	216	[4457]	MOVE     	R28 R16 ; R28 := R16
	217	[4457]	CONCAT   	R3 R24 R28 ; R3 := R24 .. R25 .. R26 .. R27 .. R28
	218	[4438]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 152; R12 := R13 end
	219	[4457]	JMP      	152 ; PC := 152
	220	[4461]	MOVE     	R24 R3 ; R24 := R3
	221	[4461]	MOVE     	R25 R2 ; R25 := R2
	222	[4461]	RETURN   	R24 3 ; return R24, R25 
	223	[4462]	RETURN   	R0 1 ; return 

function #124 <?:4464,4506> (90 instructions, 360 bytes at 0000021119FE6C00)
0 params, 7 slots, 5 upvalues, 0 locals, 19 constants, 0 functions
	1	[4465]	GETGLOBAL	R0 K0 ; R0 := mFuseElement2
	2	[4465]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 5
	3	[4465]	JMP      	5 ; PC := 5
	4	[4466]	RETURN   	R0 1 ; return 
	5	[4469]	GETGLOBAL	R0 K2 ; R0 := mFuseElement1
	6	[4469]	GETTABLE 	R0 R0 K3 ; R0 := R0["UID"]
	7	[4469]	GETGLOBAL	R1 K0 ; R1 := mFuseElement2
	8	[4469]	GETTABLE 	R1 R1 K3 ; R1 := R1["UID"]
	9	[4469]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 21
	10	[4469]	JMP      	21 ; PC := 21
	11	[4470]	GETGLOBAL	R0 K4 ; R0 := 0x3d106989
	12	[4470]	LOADK    	R1 K5 ; R1 := "Cannot fuse item with itself!"
	13	[4470]	CALL     	R0 2 1 ; R0(R1)
	14	[4471]	GETUPVAL 	R0 U0 ; R0 := U0
	15	[4471]	GETTABLE 	R0 R0 K6 ; R0 := R0[0xa53f5e12]
	16	[4471]	LOADK    	R1 K7 ; R1 := "/Lotus/Language/Kingpins/FuseFailed"
	17	[4471]	CALL     	R0 2 1 ; R0(R1)
	18	[4472]	GETUPVAL 	R0 U1 ; R0 := U1
	19	[4472]	CALL     	R0 1 1 ; R0()
	20	[4473]	RETURN   	R0 1 ; return 
	21	[4476]	GETGLOBAL	R0 K8 ; R0 := 0x7f5022cf
	22	[4476]	GETTABLE 	R0 R0 K9 ; R0 := R0[0x1a94c9cc]
	23	[4476]	GETGLOBAL	R1 K2 ; R1 := mFuseElement1
	24	[4476]	GETTABLE 	R1 R1 K10 ; R1 := R1["Type"]
	25	[4476]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0xe223e2b1]
	26	[4476]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[4476]	LOADK    	R2 := 1.000000
	28	[4476]	LOADK    	R3 := -2.000000
	29	[4476]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	30	[4477]	GETGLOBAL	R1 K8 ; R1 := 0x7f5022cf
	31	[4477]	GETTABLE 	R1 R1 K9 ; R1 := R1[0x1a94c9cc]
	32	[4477]	GETGLOBAL	R2 K0 ; R2 := mFuseElement2
	33	[4477]	GETTABLE 	R2 R2 K10 ; R2 := R2["Type"]
	34	[4477]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0xe223e2b1]
	35	[4477]	CALL     	R2 2 2 ; R2 := R2(R3)
	36	[4477]	LOADK    	R3 := 1.000000
	37	[4477]	LOADK    	R4 := -2.000000
	38	[4477]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	39	[4478]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 51
	40	[4478]	JMP      	51 ; PC := 51
	41	[4479]	GETGLOBAL	R2 K4 ; R2 := 0x3d106989
	42	[4479]	LOADK    	R3 K12 ; R3 := "Fused items must have the same manufacturer!"
	43	[4479]	CALL     	R2 2 1 ; R2(R3)
	44	[4480]	GETUPVAL 	R2 U0 ; R2 := U0
	45	[4480]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xa53f5e12]
	46	[4480]	LOADK    	R3 K7 ; R3 := "/Lotus/Language/Kingpins/FuseFailed"
	47	[4480]	CALL     	R2 2 1 ; R2(R3)
	48	[4481]	GETUPVAL 	R2 U1 ; R2 := U1
	49	[4481]	CALL     	R2 1 1 ; R2()
	50	[4482]	RETURN   	R0 1 ; return 
	51	[4485]	GETUPVAL 	R2 U2 ; R2 := U2
	52	[4485]	CALL     	R2 1 3 ; R2,R3 := R2()
	53	[4486]	EQ       	0 R2 K1 ; if R2 ~= nil then PC := 56
	54	[4486]	JMP      	56 ; PC := 56
	55	[4487]	RETURN   	R0 1 ; return 
	56	[4490]	GETGLOBAL	R4 K2 ; R4 := mFuseElement1
	57	[4490]	GETTABLE 	R4 R4 K13 ; R4 := R4["Name"]
	58	[4491]	TEST     	R3 0 ; if not R3 then PC := 62
	59	[4491]	JMP      	62 ; PC := 62
	60	[4492]	GETGLOBAL	R5 K0 ; R5 := mFuseElement2
	61	[4492]	GETTABLE 	R4 R5 K13 ; R4 := R5["Name"]
	62	[4495]	NEWTABLE 	R5 0 3 ; R5 := {}
	63	[4496]	SETTABLE 	R5 K13 R4 ; R5["Name"] := R4
	64	[4497]	SETTABLE 	R5 K15 R3 ; R5["Flipped"] := R3
	65	[4498]	SETTABLE 	R5 K16 R2 ; R5["Cost"] := R2
	66	[4499]	SETGLOBALHASH	R5 K14 ; mFuseElement3 := R5
	67	[4501]	GETGLOBAL	R5 K2 ; R5 := mFuseElement1
	68	[4501]	GETTABLE 	R5 R5 K17 ; R5 := R5["Data"]
	69	[4501]	GETTABLE 	R5 R5 K18 ; R5 := R5["SubroutineIndex"]
	70	[4501]	EQ       	1 R5 K1 ; if R5 == nil then PC := 88
	71	[4501]	JMP      	88 ; PC := 88
	72	[4501]	GETGLOBAL	R5 K0 ; R5 := mFuseElement2
	73	[4501]	GETTABLE 	R5 R5 K17 ; R5 := R5["Data"]
	74	[4501]	GETTABLE 	R5 R5 K18 ; R5 := R5["SubroutineIndex"]
	75	[4501]	EQ       	1 R5 K1 ; if R5 == nil then PC := 88
	76	[4501]	JMP      	88 ; PC := 88
	77	[4501]	GETGLOBAL	R5 K2 ; R5 := mFuseElement1
	78	[4501]	GETTABLE 	R5 R5 K17 ; R5 := R5["Data"]
	79	[4501]	GETTABLE 	R5 R5 K18 ; R5 := R5["SubroutineIndex"]
	80	[4501]	GETGLOBAL	R6 K0 ; R6 := mFuseElement2
	81	[4501]	GETTABLE 	R6 R6 K17 ; R6 := R6["Data"]
	82	[4501]	GETTABLE 	R6 R6 K18 ; R6 := R6["SubroutineIndex"]
	83	[4501]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 88
	84	[4501]	JMP      	88 ; PC := 88
	85	[4502]	GETUPVAL 	R5 U3 ; R5 := U3
	86	[4502]	CALL     	R5 1 1 ; R5()
	87	[4502]	JMP      	90 ; PC := 90
	88	[4504]	GETUPVAL 	R5 U4 ; R5 := U4
	89	[4504]	CALL     	R5 1 1 ; R5()
	90	[4506]	RETURN   	R0 1 ; return 

function #125 <?:4508,4534> (54 instructions, 216 bytes at 0000021131D28400)
1 param, 17 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[4509]	GETGLOBAL	R1 K0 ; R1 := mEquipment
	2	[4510]	GETTABLE 	R2 R0 K1 ; R2 := R0["Equipped"]
	3	[4510]	TEST     	R2 0 ; if not R2 then PC := 54
	4	[4510]	JMP      	54 ; PC := 54
	5	[4510]	GETTABLE 	R2 R0 K2 ; R2 := R0["StoreItem"]
	6	[4510]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x31e559d2]
	7	[4510]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[4510]	TEST     	R2 1 ; if R2 then PC := 54
	9	[4510]	JMP      	54 ; PC := 54
	10	[4510]	GETTABLE 	R2 R1 K4 ; R2 := R1["mSelectedElement"]
	11	[4510]	EQ       	1 R2 K5 ; if R2 == nil then PC := 54
	12	[4510]	JMP      	54 ; PC := 54
	13	[4511]	GETTABLE 	R2 R1 K4 ; R2 := R1["mSelectedElement"]
	14	[4511]	GETTABLE 	R2 R2 K6 ; R2 := R2["Id"]
	15	[4512]	OP_LOADBOOL	R3 0 0 ; R3 := false
	16	[4513]	LOADNIL  	R4 R4 ; R4 := nil
	17	[4514]	GETGLOBAL	R5 K7 ; R5 := 0xc8802016
	18	[4514]	GETTABLE 	R6 R0 K8 ; R6 := R0["EquippedSlots"]
	19	[4514]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	20	[4514]	JMP      	27 ; PC := 27
	21	[4515]	TEST     	R9 0 ; if not R9 then PC := 27
	22	[4515]	JMP      	27 ; PC := 27
	23	[4516]	EQ       	0 R8 R2 ; if R8 ~= R2 then PC := 26
	24	[4516]	JMP      	26 ; PC := 26
	25	[4517]	OP_LOADBOOL	R3 1 0 ; R3 := true
	26	[4519]	MOVE     	R4 R8 ; R4 := R8
	27	[4514]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 21; R7 := R8 end
	28	[4520]	JMP      	21 ; PC := 21
	29	[4523]	EQ       	1 R4 K5 ; if R4 == nil then PC := 54
	30	[4523]	JMP      	54 ; PC := 54
	31	[4524]	SELF     	R10 R1 K9 ; R11 := R1; R10 := R1[0xca30dfb6]
	32	[4524]	MOVE     	R12 R4 ; R12 := R4
	33	[4524]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	34	[4525]	EQ       	1 R10 K5 ; if R10 == nil then PC := 54
	35	[4525]	JMP      	54 ; PC := 54
	36	[4526]	TEST     	R3 0 ; if not R3 then PC := 45
	37	[4526]	JMP      	45 ; PC := 45
	38	[4527]	GETGLOBAL	R11 K10 ; R11 := 0xae91e43b
	39	[4527]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x42b04007]
	40	[4527]	LOADK    	R13 K12 ; R13 := "/Lotus/Language/Menu/ItemSelection_Equipped"
	41	[4527]	OP_LOADBOOL	R14 0 0 ; R14 := false
	42	[4527]	TAILCALL 	R11 4 0 ; R11,... := R11(R12,R13,R14)
	43	[4527]	RETURN   	R11 0 ; return R11,... 
	44	[4527]	JMP      	54 ; PC := 54
	45	[4529]	GETGLOBAL	R11 K10 ; R11 := 0xae91e43b
	46	[4529]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x42b04007]
	47	[4529]	LOADK    	R13 K13 ; R13 := "/Lotus/Language/Railjack/Loadout_EquippedOn"
	48	[4529]	OP_LOADBOOL	R14 0 0 ; R14 := false
	49	[4529]	NEWTABLE 	R15 0 1 ; R15 := {}
	50	[4529]	GETTABLE 	R16 R10 K15 ; R16 := R10["Name"]
	51	[4529]	SETTABLE 	R15 K14 R16 ; R15["SLOT"] := R16
	52	[4529]	TAILCALL 	R11 5 0 ; R11,... := R11(R12,R13,R14,R15)
	53	[4529]	RETURN   	R11 0 ; return R11,... 
	54	[4534]	RETURN   	R0 1 ; return 

function #126 <?:4536,4549> (37 instructions, 148 bytes at 000002113028FEC0)
4 params, 9 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[4537]	LEN      	R4 R0 ; R4 := # R0
	2	[4537]	EQ       	1 R4 K0 ; if R4 == 0.000000 then PC := 7
	3	[4537]	JMP      	7 ; PC := 7
	4	[4537]	LEN      	R4 R2 ; R4 := # R2
	5	[4537]	EQ       	0 R4 K0 ; if R4 ~= 0.000000 then PC := 9
	6	[4537]	JMP      	9 ; PC := 9
	7	[4538]	OP_LOADBOOL	R4 0 0 ; R4 := false
	8	[4538]	RETURN   	R4 2 ; return R4 
	9	[4541]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[4541]	GETTABLE 	R4 R4 K1 ; R4 := R4["OWNED"]
	11	[4541]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 26
	12	[4541]	JMP      	26 ; PC := 26
	13	[4542]	GETUPVAL 	R4 U1 ; R4 := U1
	14	[4542]	GETGLOBAL	R5 K2 ; R5 := 0x7f5022cf
	15	[4542]	GETTABLE 	R5 R5 K3 ; R5 := R5[0x1a94c9cc]
	16	[4542]	MOVE     	R6 R2 ; R6 := R2
	17	[4542]	LOADK    	R7 := -1.000000
	18	[4542]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	19	[4542]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	20	[4543]	EQ       	1 R4 K4 ; if R4 == nil then PC := 24
	21	[4543]	JMP      	24 ; PC := 24
	22	[4543]	LT       	0 R1 R4 ; if R1 >= R4 then PC := 26
	23	[4543]	JMP      	26 ; PC := 26
	24	[4544]	OP_LOADBOOL	R5 0 0 ; R5 := false
	25	[4544]	RETURN   	R5 2 ; return R5 
	26	[4548]	GETGLOBAL	R5 K2 ; R5 := 0x7f5022cf
	27	[4548]	GETTABLE 	R5 R5 K3 ; R5 := R5[0x1a94c9cc]
	28	[4548]	MOVE     	R6 R2 ; R6 := R2
	29	[4548]	LOADK    	R7 := 1.000000
	30	[4548]	LOADK    	R8 := -2.000000
	31	[4548]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	32	[4548]	EQ       	1 R0 R5 ; if R0 == R5 then PC := 35
	33	[4548]	JMP      	35 ; PC := 35
	34	[4548]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 35
	35	[4548]	OP_LOADBOOL	R5 1 0 ; R5 := true
	36	[4548]	RETURN   	R5 2 ; return R5 
	37	[4549]	RETURN   	R0 1 ; return 

function #127 <?:4551,4597> (124 instructions, 496 bytes at 000002112A774EF0)
1 param, 17 slots, 6 upvalues, 0 locals, 33 constants, 0 functions
	1	[4552]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4552]	MOVE     	R2 R0 ; R2 := R0
	3	[4552]	OP_LOADBOOL	R3 1 0 ; R3 := true
	4	[4552]	OP_LOADBOOL	R4 0 0 ; R4 := false
	5	[4552]	OP_LOADBOOL	R5 1 0 ; R5 := true
	6	[4552]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	7	[4553]	LOADK    	R2 := 1.000000
	8	[4554]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	9	[4554]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x1a94c9cc]
	10	[4554]	GETGLOBAL	R4 K2 ; R4 := mInventoryGrid
	11	[4554]	GETTABLE 	R4 R4 K3 ; R4 := R4["mSelectedElement"]
	12	[4554]	GETTABLE 	R4 R4 K4 ; R4 := R4["ItemType"]
	13	[4554]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xe223e2b1]
	14	[4554]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4554]	LOADK    	R5 := 1.000000
	16	[4554]	LOADK    	R6 := -2.000000
	17	[4554]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	18	[4555]	GETGLOBAL	R4 K2 ; R4 := mInventoryGrid
	19	[4555]	GETTABLE 	R4 R4 K3 ; R4 := R4["mSelectedElement"]
	20	[4555]	GETTABLE 	R4 R4 K6 ; R4 := R4["Tier"]
	21	[4556]	GETGLOBAL	R5 K2 ; R5 := mInventoryGrid
	22	[4556]	GETTABLE 	R5 R5 K3 ; R5 := R5["mSelectedElement"]
	23	[4556]	GETTABLE 	R5 R5 K7 ; R5 := R5["RawItem"]
	24	[4556]	GETTABLE 	R5 R5 K8 ; R5 := R5["UID"]
	25	[4557]	OP_LOADBOOL	R6 0 0 ; R6 := false
	26	[4559]	LOADK    	R7 := 1.000000
	27	[4559]	LEN      	R8 R1 ; R8 := # R1
	28	[4559]	LOADK    	R9 := 1.000000
	29	[4559]	FORPREP  	R7 120 ; R7 -= R9; PC := 120
	30	[4560]	GETTABLE 	R11 R1 R10 ; R11 := R1[R10]
	31	[4561]	GETUPVAL 	R12 U1 ; R12 := U1
	32	[4561]	MOVE     	R13 R3 ; R13 := R3
	33	[4561]	MOVE     	R14 R4 ; R14 := R4
	34	[4561]	GETTABLE 	R15 R11 K4 ; R15 := R11["ItemType"]
	35	[4561]	SELF     	R15 R15 K5 ; R16 := R15; R15 := R15[0xe223e2b1]
	36	[4561]	CALL     	R15 2 2 ; R15 := R15(R16)
	37	[4561]	GETTABLE 	R16 R11 K9 ; R16 := R11["SalvageState"]
	38	[4561]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	39	[4561]	TEST     	R12 0 ; if not R12 then PC := 119
	40	[4561]	JMP      	119 ; PC := 119
	41	[4562]	GETTABLE 	R12 R11 K10 ; R12 := R11["Equipped"]
	42	[4562]	TEST     	R12 1 ; if R12 then PC := 119
	43	[4562]	JMP      	119 ; PC := 119
	44	[4563]	GETTABLE 	R12 R11 K7 ; R12 := R11["RawItem"]
	45	[4563]	GETTABLE 	R12 R12 K8 ; R12 := R12["UID"]
	46	[4563]	EQ       	1 R12 R5 ; if R12 == R5 then PC := 119
	47	[4563]	JMP      	119 ; PC := 119
	48	[4565]	GETTABLE 	R12 R11 K9 ; R12 := R11["SalvageState"]
	49	[4565]	GETUPVAL 	R13 U2 ; R13 := U2
	50	[4565]	GETTABLE 	R13 R13 K11 ; R13 := R13["OWNED"]
	51	[4565]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 61
	52	[4565]	JMP      	61 ; PC := 61
	53	[4565]	GETTABLE 	R12 R11 K9 ; R12 := R11["SalvageState"]
	54	[4565]	GETUPVAL 	R13 U2 ; R13 := U2
	55	[4565]	GETTABLE 	R13 R13 K12 ; R13 := R13["IDENTIFIED"]
	56	[4565]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 61
	57	[4565]	JMP      	61 ; PC := 61
	58	[4565]	GETTABLE 	R12 R11 K13 ; R12 := R11["SalvageProgress"]
	59	[4565]	EQ       	0 R12 K14 ; if R12 ~= 0.000000 then PC := 110
	60	[4565]	JMP      	110 ; PC := 110
	61	[4566]	SETTABLE 	R11 K15 K16 ; R11["SearchCache"] := ""
	62	[4567]	GETGLOBAL	R12 K17 ; R12 := 0x7b998233
	63	[4567]	GETTABLE 	R13 R11 K18 ; R13 := R11["mStoreItem"]
	64	[4567]	CALL     	R12 2 2 ; R12 := R12(R13)
	65	[4567]	TEST     	R12 1 ; if R12 then PC := 74
	66	[4567]	JMP      	74 ; PC := 74
	67	[4568]	GETUPVAL 	R12 U3 ; R12 := U3
	68	[4568]	GETTABLE 	R12 R12 K19 ; R12 := R12[0x1ac299fb]
	69	[4568]	GETGLOBAL	R13 K20 ; R13 := 0xae91e43b
	70	[4568]	GETTABLE 	R14 R11 K18 ; R14 := R11["mStoreItem"]
	71	[4568]	GETTABLE 	R15 R11 K21 ; R15 := R11["Name"]
	72	[4568]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	73	[4568]	SETTABLE 	R11 K15 R12 ; R11["SearchCache"] := R12
	74	[4571]	GETTABLE 	R12 R11 K22 ; R12 := R11["Polarity"]
	75	[4571]	EQ       	1 R12 K23 ; if R12 == nil then PC := 89
	76	[4571]	JMP      	89 ; PC := 89
	77	[4572]	GETGLOBAL	R12 K24 ; R12 := 0x83e41587
	78	[4572]	GETGLOBAL	R13 K20 ; R13 := 0xae91e43b
	79	[4572]	SELF     	R13 R13 K25 ; R14 := R13; R13 := R13[0x42b04007]
	80	[4572]	GETTABLE 	R15 R11 K22 ; R15 := R11["Polarity"]
	81	[4572]	GETTABLE 	R15 R15 K26 ; R15 := R15["NameTag"]
	82	[4572]	OP_LOADBOOL	R16 0 0 ; R16 := false
	83	[4572]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	84	[4572]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	85	[4572]	LOADK    	R13 K27 ; R13 := " "
	86	[4572]	GETTABLE 	R14 R11 K15 ; R14 := R11["SearchCache"]
	87	[4572]	CONCAT   	R12 R12 R14 ; R12 := R12 .. R13 .. R14
	88	[4572]	SETTABLE 	R11 K15 R12 ; R11["SearchCache"] := R12
	89	[4575]	GETUPVAL 	R12 U4 ; R12 := U4
	90	[4575]	MOVE     	R13 R11 ; R13 := R11
	91	[4575]	CALL     	R12 2 1 ; R12(R13)
	92	[4577]	GETUPVAL 	R12 U5 ; R12 := U5
	93	[4577]	MOVE     	R13 R11 ; R13 := R11
	94	[4577]	CALL     	R12 2 2 ; R12 := R12(R13)
	95	[4577]	SETTABLE 	R11 K28 R12 ; R11["LockedTag"] := R12
	96	[4578]	GETTABLE 	R12 R11 K28 ; R12 := R11["LockedTag"]
	97	[4578]	EQ       	0 R12 K23 ; if R12 ~= nil then PC := 100
	98	[4578]	JMP      	100 ; PC := 100
	99	[4578]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 100
	100	[4578]	OP_LOADBOOL	R12 1 0 ; R12 := true
	101	[4578]	SETTABLE 	R11 K29 R12 ; R11["Locked"] := R12
	102	[4579]	SETTABLE 	R11 K30 K31 ; R11["Selected"] := false
	103	[4581]	EQ       	1 R10 R2 ; if R10 == R2 then PC := 108
	104	[4581]	JMP      	108 ; PC := 108
	105	[4582]	GETTABLE 	R12 R1 R10 ; R12 := R1[R10]
	106	[4582]	SETTABLE 	R1 R2 R12 ; R1[R2] := R12
	107	[4583]	SETTABLE 	R1 R10 K23 ; R1[R10] := nil
	108	[4585]	ADD      	R2 R2 K32 ; R2 := R2 + 1.000000
	109	[4585]	JMP      	120 ; PC := 120
	110	[4587]	GETTABLE 	R12 R11 K13 ; R12 := R11["SalvageProgress"]
	111	[4587]	EQ       	1 R12 K23 ; if R12 == nil then PC := 117
	112	[4587]	JMP      	117 ; PC := 117
	113	[4587]	GETTABLE 	R12 R11 K13 ; R12 := R11["SalvageProgress"]
	114	[4587]	LT       	0 K14 R12 ; if 0.000000 >= R12 then PC := 117
	115	[4587]	JMP      	117 ; PC := 117
	116	[4588]	OP_LOADBOOL	R6 1 0 ; R6 := true
	117	[4590]	SETTABLE 	R1 R10 K23 ; R1[R10] := nil
	118	[4591]	JMP      	120 ; PC := 120
	119	[4593]	SETTABLE 	R1 R10 K23 ; R1[R10] := nil
	120	[4559]	FORLOOP  	R7 30 ; R7 += R9; if R7 <= R8 then begin PC := 30; R10 := R7 end
	121	[4596]	MOVE     	R12 R1 ; R12 := R1
	122	[4596]	MOVE     	R13 R6 ; R13 := R6
	123	[4596]	RETURN   	R12 3 ; return R12, R13 
	124	[4597]	RETURN   	R0 1 ; return 

function #128 <?:4599,4658> (91 instructions, 364 bytes at 00000211921C6EC0)
0 params, 9 slots, 6 upvalues, 0 locals, 30 constants, 3 functions
	1	[4600]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4600]	GETGLOBAL	R1 K1 ; R1 := mChildMovie
	3	[4600]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4600]	TEST     	R0 1 ; if R0 then PC := 7
	5	[4600]	JMP      	7 ; PC := 7
	6	[4601]	RETURN   	R0 1 ; return 
	7	[4604]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[4604]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	9	[4604]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	10	[4604]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[4604]	SETGLOBALHASH	R0 K2 ; mFuseElement1 := R0
	12	[4606]	GETGLOBAL	R0 K2 ; R0 := mFuseElement1
	13	[4606]	EQ       	0 R0 K5 ; if R0 ~= nil then PC := 16
	14	[4606]	JMP      	16 ; PC := 16
	15	[4607]	RETURN   	R0 1 ; return 
	16	[4610]	GETGLOBAL	R0 K6 ; R0 := mEquipment
	17	[4610]	GETTABLE 	R0 R0 K4 ; R0 := R0["mSelectedElement"]
	18	[4611]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[4611]	MOVE     	R2 R0 ; R2 := R0
	20	[4611]	CALL     	R1 2 3 ; R1,R2 := R1(R2)
	21	[4612]	LEN      	R3 R1 ; R3 := # R1
	22	[4612]	EQ       	0 R3 K7 ; if R3 ~= 0.000000 then PC := 38
	23	[4612]	JMP      	38 ; PC := 38
	24	[4613]	TEST     	R2 0 ; if not R2 then PC := 31
	25	[4613]	JMP      	31 ; PC := 31
	26	[4614]	GETUPVAL 	R3 U2 ; R3 := U2
	27	[4614]	GETTABLE 	R3 R3 K8 ; R3 := R3[0xa53f5e12]
	28	[4614]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/Railjack/CompatibleFusionElementsInProgress"
	29	[4614]	CALL     	R3 2 1 ; R3(R4)
	30	[4614]	JMP      	35 ; PC := 35
	31	[4616]	GETUPVAL 	R3 U2 ; R3 := U2
	32	[4616]	GETTABLE 	R3 R3 K8 ; R3 := R3[0xa53f5e12]
	33	[4616]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Railjack/NoCompatibleFusionElements"
	34	[4616]	CALL     	R3 2 1 ; R3(R4)
	35	[4618]	GETUPVAL 	R3 U3 ; R3 := U3
	36	[4618]	CALL     	R3 1 1 ; R3()
	37	[4619]	RETURN   	R0 1 ; return 
	38	[4622]	GETGLOBAL	R3 K11 ; R3 := 0xae91e43b
	39	[4622]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x1fd6abd0]
	40	[4622]	GETGLOBAL	R5 K13 ; R5 := 0x0032441c
	41	[4622]	GETTABLE 	R5 R5 K14 ; R5 := R5["UIMovie_ItemBrowsingMovie"]
	42	[4622]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[4622]	SETGLOBALHASH	R3 K1 ; mChildMovie := R3
	44	[4623]	GETGLOBAL	R3 K15 ; R3 := _T
	45	[4623]	GETTABLE 	R3 R3 K16 ; R3 := R3[0xdf29a9d6]
	46	[4623]	GETTABLE 	R4 R0 K17 ; R4 := R0["Name"]
	47	[4623]	GETGLOBAL	R5 K11 ; R5 := 0xae91e43b
	48	[4623]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0x42b04007]
	49	[4623]	LOADK    	R7 K19 ; R7 := "/Lotus/Language/Railjack/ValenceTransfer"
	50	[4623]	OP_LOADBOOL	R8 0 0 ; R8 := false
	51	[4623]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	52	[4623]	CALL     	R3 0 1 ; R3(R4,...)
	53	[4624]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	54	[4624]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	55	[4624]	LOADK    	R5 K21 ; R5 := "SetRequiredSelections"
	56	[4624]	LOADK    	R6 K22 ; R6 := "1"
	57	[4624]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	58	[4625]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	59	[4625]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	60	[4625]	LOADK    	R5 K23 ; R5 := "SetHideCountThreshold"
	61	[4625]	LOADK    	R6 K22 ; R6 := "1"
	62	[4625]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	63	[4627]	GETGLOBAL	R3 K15 ; R3 := _T
	64	[4638]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	65	[4638]	GETUPVAL 	R0 U0 ; R0 := U0
	66	[4638]	GETUPVAL 	R0 U4 ; R0 := U4
	67	[4638]	SETTABLE 	R3 K24 R4 ; R3["FuseItemSelected"] := R4
	68	[4639]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	69	[4639]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	70	[4639]	LOADK    	R5 K25 ; R5 := "SetCallBack"
	71	[4639]	LOADK    	R6 K24 ; R6 := "FuseItemSelected"
	72	[4639]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	73	[4641]	GETGLOBAL	R3 K15 ; R3 := _T
	74	[4650]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	75	[4650]	GETUPVAL 	R0 U5 ; R0 := U5
	76	[4650]	SETTABLE 	R3 K26 R4 ; R3["GetFuseCategories"] := R4
	77	[4651]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	78	[4651]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	79	[4651]	LOADK    	R5 K27 ; R5 := "SetCategoriesFunction"
	80	[4651]	LOADK    	R6 K26 ; R6 := "GetFuseCategories"
	81	[4651]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	82	[4653]	GETGLOBAL	R3 K15 ; R3 := _T
	83	[4656]	CLOSURE  	R4 2 ; R4 := closure(Function #3)
	84	[4656]	MOVE     	R0 R1 ; R0 := R1
	85	[4656]	SETTABLE 	R3 K28 R4 ; R3["GetFuseItems"] := R4
	86	[4657]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	87	[4657]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xe4162eed]
	88	[4657]	LOADK    	R5 K29 ; R5 := "SetElementsFunction"
	89	[4657]	LOADK    	R6 K28 ; R6 := "GetFuseItems"
	90	[4657]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	91	[4658]	RETURN   	R0 1 ; return 

function #129 <?:4660,4668> (17 instructions, 68 bytes at 0000021134478250)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[4661]	EQ       	0 R0 K1 ; if R0 ~= 4.000000 then PC := 9
	2	[4661]	JMP      	9 ; PC := 9
	3	[4662]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	4	[4662]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	5	[4662]	LOADK    	R3 K4 ; R3 := "RepairSelectedItem"
	6	[4662]	LOADK    	R4 K5 ; R4 := ""
	7	[4662]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	8	[4662]	JMP      	17 ; PC := 17
	9	[4663]	EQ       	0 R0 K6 ; if R0 ~= 6.000000 then PC := 17
	10	[4663]	JMP      	17 ; PC := 17
	11	[4664]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	12	[4664]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	13	[4664]	LOADK    	R3 K7 ; R3 := "SellSelectedItem"
	14	[4664]	LOADK    	R4 K5 ; R4 := ""
	15	[4664]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[4664]	JMP      	17 ; PC := 17
	17	[4668]	RETURN   	R0 1 ; return 

function #130 <?:4670,4720> (107 instructions, 428 bytes at 000002112D88EE50)
2 params, 14 slots, 7 upvalues, 0 locals, 45 constants, 0 functions
	1	[4671]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4671]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[4671]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[4671]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[4671]	TEST     	R2 1 ; if R2 then PC := 13
	6	[4671]	JMP      	13 ; PC := 13
	7	[4672]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[4672]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[4672]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[4672]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[4672]	LOADK    	R5 K5 ; R5 := "0"
	12	[4672]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[4675]	TEST     	R0 0 ; if not R0 then PC := 107
	14	[4675]	JMP      	107 ; PC := 107
	15	[4676]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[4676]	CALL     	R2 1 1 ; R2()
	17	[4678]	LOADK    	R2 K6 ; R2 := ""
	18	[4679]	LOADK    	R3 K6 ; R3 := ""
	19	[4680]	LOADNIL  	R4 R4 ; R4 := nil
	20	[4681]	GETGLOBAL	R5 K7 ; R5 := cjson
	21	[4681]	GETTABLE 	R5 R5 K8 ; R5 := R5[0x7ab914d8]
	22	[4681]	MOVE     	R6 R1 ; R6 := R1
	23	[4681]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[4682]	GETTABLE 	R6 R5 K9 ; R6 := R5["InventoryChanges"]
	25	[4682]	EQ       	1 R6 K10 ; if R6 == nil then PC := 72
	26	[4682]	JMP      	72 ; PC := 72
	27	[4683]	LOADNIL  	R6 R6 ; R6 := nil
	28	[4684]	GETGLOBAL	R7 K11 ; R7 := mActiveState
	29	[4684]	GETUPVAL 	R8 U1 ; R8 := U1
	30	[4684]	GETTABLE 	R8 R8 K12 ; R8 := R8["WEAPON_INV"]
	31	[4684]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 37
	32	[4684]	JMP      	37 ; PC := 37
	33	[4685]	GETTABLE 	R7 R5 K9 ; R7 := R5["InventoryChanges"]
	34	[4685]	GETTABLE 	R7 R7 K13 ; R7 := R7["CrewShipSalvagedWeapons"]
	35	[4685]	GETTABLE 	R6 R7 K14 ; R6 := R7[1.000000]
	36	[4685]	JMP      	40 ; PC := 40
	37	[4687]	GETTABLE 	R7 R5 K9 ; R7 := R5["InventoryChanges"]
	38	[4687]	GETTABLE 	R7 R7 K15 ; R7 := R7["CrewShipSalvagedWeaponSkins"]
	39	[4687]	GETTABLE 	R6 R7 K14 ; R6 := R7[1.000000]
	40	[4689]	EQ       	1 R6 K10 ; if R6 == nil then PC := 72
	41	[4689]	JMP      	72 ; PC := 72
	42	[4690]	GETTABLE 	R7 R6 K16 ; R7 := R6["ItemId"]
	43	[4690]	GETTABLE 	R7 R7 K17 ; R7 := R7["$oid"]
	44	[4691]	GETUPVAL 	R8 U2 ; R8 := U2
	45	[4691]	MOVE     	R9 R7 ; R9 := R7
	46	[4691]	CALL     	R8 2 2 ; R8 := R8(R9)
	47	[4692]	EQ       	1 R8 K10 ; if R8 == nil then PC := 72
	48	[4692]	JMP      	72 ; PC := 72
	49	[4693]	GETTABLE 	R4 R8 K18 ; R4 := R8["Icon"]
	50	[4694]	GETUPVAL 	R9 U3 ; R9 := U3
	51	[4694]	MOVE     	R10 R8 ; R10 := R8
	52	[4694]	CALL     	R9 2 2 ; R9 := R9(R10)
	53	[4694]	MOVE     	R8 R9 ; R8 := R9
	54	[4695]	EQ       	1 R8 K10 ; if R8 == nil then PC := 72
	55	[4695]	JMP      	72 ; PC := 72
	56	[4696]	GETTABLE 	R2 R8 K19 ; R2 := R8["Name"]
	57	[4697]	GETUPVAL 	R9 U4 ; R9 := U4
	58	[4697]	GETTABLE 	R10 R8 K20 ; R10 := R8["Stats"]
	59	[4697]	CALL     	R9 2 2 ; R9 := R9(R10)
	60	[4697]	MOVE     	R3 R9 ; R3 := R9
	61	[4698]	EQ       	1 R3 K6 ; if R3 == "" then PC := 72
	62	[4698]	JMP      	72 ; PC := 72
	63	[4699]	LOADK    	R9 K21 ; R9 := "<br><font color=\"#Content\">"
	64	[4699]	GETGLOBAL	R10 K22 ; R10 := 0x603636ad
	65	[4699]	LOADK    	R11 K23 ; R11 := "/Lotus/Language/Railjack/RawSalvageIdentified"
	66	[4699]	LOADNIL  	R12 R12 ; R12 := nil
	67	[4699]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	68	[4699]	LOADK    	R11 K24 ; R11 := "<br>"
	69	[4699]	MOVE     	R12 R3 ; R12 := R3
	70	[4699]	LOADK    	R13 K25 ; R13 := "</font>"
	71	[4699]	CONCAT   	R3 R9 R13 ; R3 := R9 .. R10 .. R11 .. R12 .. R13
	72	[4706]	GETUPVAL 	R9 U5 ; R9 := U5
	73	[4706]	CALL     	R9 1 1 ; R9()
	74	[4708]	GETGLOBAL	R9 K26 ; R9 := 0x34291f5c
	75	[4708]	GETTABLE 	R9 R9 K27 ; R9 := R9[0xe27b35bb]
	76	[4708]	CALL     	R9 1 2 ; R9 := R9()
	77	[4709]	SETTABLE 	R9 K28 K29 ; R9["dialogType"] := 5.000000
	78	[4710]	LOADK    	R10 K31 ; R10 := "<font color=\"#FloatingContent\">"
	79	[4710]	MOVE     	R11 R2 ; R11 := R2
	80	[4710]	MOVE     	R12 R3 ; R12 := R3
	81	[4710]	LOADK    	R13 K25 ; R13 := "</font>"
	82	[4710]	CONCAT   	R10 R10 R13 ; R10 := R10 .. R11 .. R12 .. R13
	83	[4710]	SETTABLE 	R9 K30 R10 ; R9["locString"] := R10
	84	[4711]	SETTABLE 	R9 K32 K33 ; R9["firstString"] := "/Lotus/Language/Menu/ItemSelection_Repair"
	85	[4712]	SETTABLE 	R9 K34 K35 ; R9["secondString"] := "/Lotus/Language/Menu/ItemSelection_SellSalvage"
	86	[4713]	SETTABLE 	R9 K36 K37 ; R9["thirdString"] := "/Menu/Continue"
	87	[4714]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	88	[4714]	MOVE     	R11 R4 ; R11 := R4
	89	[4714]	CALL     	R10 2 2 ; R10 := R10(R11)
	90	[4714]	TEST     	R10 1 ; if R10 then PC := 100
	91	[4714]	JMP      	100 ; PC := 100
	92	[4715]	SELF     	R10 R4 K39 ; R11 := R4; R10 := R4[0xed4e0128]
	93	[4715]	CALL     	R10 2 2 ; R10 := R10(R11)
	94	[4715]	LOADK    	R11 K40 ; R11 := ",160,160,20,center,"
	95	[4715]	GETGLOBAL	R12 K41 ; R12 := 0x6cb7abfc
	96	[4715]	SELF     	R12 R12 K39 ; R13 := R12; R12 := R12[0xed4e0128]
	97	[4715]	CALL     	R12 2 2 ; R12 := R12(R13)
	98	[4715]	CONCAT   	R10 R10 R12 ; R10 := R10 .. R11 .. R12
	99	[4715]	SETTABLE 	R9 K38 R10 ; R9["icon"] := R10
	100	[4717]	SELF     	R10 R9 K42 ; R11 := R9; R10 := R9[0xe6ccc5b9]
	101	[4717]	LOADK    	R12 K43 ; R12 := "IdentifiedSalvageAction"
	102	[4717]	CALL     	R10 3 1 ; R10(R11,R12)
	103	[4718]	GETUPVAL 	R10 U6 ; R10 := U6
	104	[4718]	GETTABLE 	R10 R10 K44 ; R10 := R10[0xe99b84e7]
	105	[4718]	MOVE     	R11 R9 ; R11 := R9
	106	[4718]	CALL     	R10 2 1 ; R10(R11)
	107	[4720]	RETURN   	R0 1 ; return 

function #131 <?:4722,4735> (39 instructions, 156 bytes at 0000021191E19E50)
0 params, 5 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[4723]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4723]	GETGLOBAL	R1 K1 ; R1 := 0x0872c3f7
	3	[4723]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4723]	TEST     	R0 0 ; if not R0 then PC := 13
	5	[4723]	JMP      	13 ; PC := 13
	6	[4723]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4723]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[4723]	GETTABLE 	R1 R1 K3 ; R1 := R1["BackgroundMovie"]
	9	[4723]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[4723]	TEST     	R0 1 ; if R0 then PC := 13
	11	[4723]	JMP      	13 ; PC := 13
	12	[4724]	RETURN   	R0 1 ; return 
	13	[4727]	GETGLOBAL	R0 K4 ; R0 := mInventoryGrid
	14	[4727]	GETTABLE 	R0 R0 K5 ; R0 := R0["mSelectedElement"]
	15	[4728]	GETTABLE 	R1 R0 K6 ; R1 := R0["SalvageState"]
	16	[4728]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[4728]	GETTABLE 	R2 R2 K7 ; R2 := R2["UNIDENTIFIED"]
	18	[4728]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 39
	19	[4728]	JMP      	39 ; PC := 39
	20	[4729]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	21	[4729]	GETGLOBAL	R2 K2 ; R2 := _T
	22	[4729]	GETTABLE 	R2 R2 K3 ; R2 := R2["BackgroundMovie"]
	23	[4729]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[4729]	TEST     	R1 1 ; if R1 then PC := 32
	25	[4729]	JMP      	32 ; PC := 32
	26	[4730]	GETGLOBAL	R1 K2 ; R1 := _T
	27	[4730]	GETTABLE 	R1 R1 K3 ; R1 := R1["BackgroundMovie"]
	28	[4730]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xe4162eed]
	29	[4730]	LOADK    	R3 K9 ; R3 := "ShowBlockingMessage"
	30	[4730]	LOADK    	R4 K10 ; R4 := "2"
	31	[4730]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	32	[4733]	GETGLOBAL	R1 K11 ; R1 := 0x25d99d89
	33	[4733]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x46fc0942]
	34	[4733]	GETTABLE 	R3 R0 K13 ; R3 := R0["ItemType"]
	35	[4733]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0xed4e0128]
	36	[4733]	CALL     	R3 2 2 ; R3 := R3(R4)
	37	[4733]	LOADK    	R4 K15 ; R4 := "OnSalvageIdentified"
	38	[4733]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	39	[4735]	RETURN   	R0 1 ; return 

function #132 <?:4737,4755> (42 instructions, 168 bytes at 000002112C7AD430)
2 params, 6 slots, 4 upvalues, 0 locals, 13 constants, 0 functions
	1	[4738]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4738]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[4738]	GETTABLE 	R3 R3 K2 ; R3 := R3["BackgroundMovie"]
	4	[4738]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[4738]	TEST     	R2 1 ; if R2 then PC := 13
	6	[4738]	JMP      	13 ; PC := 13
	7	[4739]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[4739]	GETTABLE 	R2 R2 K2 ; R2 := R2["BackgroundMovie"]
	9	[4739]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xe4162eed]
	10	[4739]	LOADK    	R4 K4 ; R4 := "ShowBlockingMessage"
	11	[4739]	LOADK    	R5 K5 ; R5 := "0"
	12	[4739]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	13	[4742]	TEST     	R0 0 ; if not R0 then PC := 38
	14	[4742]	JMP      	38 ; PC := 38
	15	[4743]	GETGLOBAL	R2 K6 ; R2 := mInventoryGrid
	16	[4743]	GETTABLE 	R2 R2 K7 ; R2 := R2["mSelectedElement"]
	17	[4744]	LOADNIL  	R3 R3 ; R3 := nil
	18	[4745]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	19	[4745]	MOVE     	R5 R2 ; R5 := R2
	20	[4745]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[4745]	TEST     	R4 1 ; if R4 then PC := 30
	22	[4745]	JMP      	30 ; PC := 30
	23	[4745]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	24	[4745]	GETTABLE 	R5 R2 K8 ; R5 := R2["RawItem"]
	25	[4745]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[4745]	TEST     	R4 1 ; if R4 then PC := 30
	27	[4745]	JMP      	30 ; PC := 30
	28	[4746]	GETTABLE 	R4 R2 K8 ; R4 := R2["RawItem"]
	29	[4746]	GETTABLE 	R3 R4 K9 ; R3 := R4["UID"]
	30	[4749]	GETUPVAL 	R4 U0 ; R4 := U0
	31	[4749]	GETUPVAL 	R5 U1 ; R5 := U1
	32	[4749]	GETTABLE 	R5 R5 K10 ; R5 := R5["CANCEL"]
	33	[4749]	CALL     	R4 2 1 ; R4(R5)
	34	[4751]	GETUPVAL 	R4 U2 ; R4 := U2
	35	[4751]	MOVE     	R5 R3 ; R5 := R3
	36	[4751]	CALL     	R4 2 1 ; R4(R5)
	37	[4751]	JMP      	42 ; PC := 42
	38	[4753]	GETUPVAL 	R4 U3 ; R4 := U3
	39	[4753]	GETTABLE 	R4 R4 K11 ; R4 := R4[0xe0cba3ca]
	40	[4753]	LOADK    	R5 K12 ; R5 := "/Lotus/Language/Menu/PurchaseFailure_UnknownError"
	41	[4753]	CALL     	R4 2 1 ; R4(R5)
	42	[4755]	RETURN   	R0 1 ; return 

function #133 <?:4757,4766> (33 instructions, 132 bytes at 0000021128E64BA0)
1 param, 11 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[4758]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[4758]	MOVE     	R2 R0 ; R2 := R0
	3	[4758]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4758]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 33
	5	[4758]	JMP      	33 ; PC := 33
	6	[4759]	GETGLOBAL	R1 K3 ; R1 := mInventoryGrid
	7	[4759]	GETTABLE 	R1 R1 K4 ; R1 := R1["mSelectedElement"]
	8	[4760]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[4760]	GETGLOBAL	R3 K6 ; R3 := _T
	10	[4760]	GETTABLE 	R3 R3 K7 ; R3 := R3["BackgroundMovie"]
	11	[4760]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[4760]	TEST     	R2 1 ; if R2 then PC := 20
	13	[4760]	JMP      	20 ; PC := 20
	14	[4761]	GETGLOBAL	R2 K6 ; R2 := _T
	15	[4761]	GETTABLE 	R2 R2 K7 ; R2 := R2["BackgroundMovie"]
	16	[4761]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[4761]	LOADK    	R4 K9 ; R4 := "ShowBlockingMessage"
	18	[4761]	LOADK    	R5 K10 ; R5 := "2"
	19	[4761]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[4764]	GETGLOBAL	R2 K11 ; R2 := 0x25d99d89
	21	[4764]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2ecd169]
	22	[4764]	GETTABLE 	R4 R1 K13 ; R4 := R1["SalvageRecipe"]
	23	[4764]	LOADK    	R5 K14 ; R5 := "Cancel"
	24	[4764]	LOADK    	R6 K15 ; R6 := "Personal"
	25	[4764]	GETGLOBAL	R7 K11 ; R7 := 0x25d99d89
	26	[4764]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x713ce380]
	27	[4764]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[4764]	LOADK    	R8 K17 ; R8 := "OnTechCancelled"
	29	[4764]	GETTABLE 	R9 R1 K18 ; R9 := R1["Category"]
	30	[4764]	GETTABLE 	R10 R1 K19 ; R10 := R1["RawItem"]
	31	[4764]	GETTABLE 	R10 R10 K20 ; R10 := R10["UID"]
	32	[4764]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	33	[4766]	RETURN   	R0 1 ; return 

function #134 <?:4768,4778> (20 instructions, 80 bytes at 0000021126210EA0)
0 params, 5 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[4769]	GETGLOBAL	R0 K0 ; R0 := mInventoryGrid
	2	[4769]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSelectedElement"]
	3	[4771]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	4	[4771]	GETTABLE 	R2 R0 K3 ; R2 := R0["SalvageRecipe"]
	5	[4771]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[4771]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[4771]	JMP      	9 ; PC := 9
	8	[4772]	RETURN   	R0 1 ; return 
	9	[4775]	GETGLOBAL	R1 K4 ; R1 := 0x603636ad
	10	[4775]	LOADK    	R2 K5 ; R2 := "/Lotus/Language/Railjack/CancelSalvageRepairsConfirm"
	11	[4775]	NEWTABLE 	R3 0 1 ; R3 := {}
	12	[4775]	GETTABLE 	R4 R0 K7 ; R4 := R0["Name"]
	13	[4775]	SETTABLE 	R3 K6 R4 ; R3["ITEM_TYPE"] := R4
	14	[4775]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[4777]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[4777]	GETTABLE 	R2 R2 K8 ; R2 := R2[0xf616a184]
	17	[4777]	MOVE     	R3 R1 ; R3 := R1
	18	[4777]	LOADK    	R4 K9 ; R4 := "CancelRepairsConfirm"
	19	[4777]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[4778]	RETURN   	R0 1 ; return 

function #135 <?:4780,4796> (58 instructions, 232 bytes at 00000211143D1AD0)
0 params, 7 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[4781]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4781]	GETGLOBAL	R1 K1 ; R1 := mAvatar
	3	[4781]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4781]	TEST     	R0 1 ; if R0 then PC := 58
	5	[4781]	JMP      	58 ; PC := 58
	6	[4782]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[4782]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x2a1108a9]
	8	[4782]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[4782]	GETGLOBAL	R2 K1 ; R2 := mAvatar
	10	[4782]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xd1586535]
	11	[4782]	CALL     	R2 2 0 ; R2,... := R2(R3)
	12	[4782]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	13	[4782]	SETGLOBALHASH	R0 K2 ; mShipAvatar := R0
	14	[4783]	LOADNIL  	R0 R0 ; R0 := nil
	15	[4783]	SETGLOBALHASH	R0 K5 ; mShipSuit := R0
	16	[4784]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	17	[4784]	GETGLOBAL	R1 K2 ; R1 := mShipAvatar
	18	[4784]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[4784]	TEST     	R0 1 ; if R0 then PC := 27
	20	[4784]	JMP      	27 ; PC := 27
	21	[4785]	GETGLOBAL	R0 K2 ; R0 := mShipAvatar
	22	[4785]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xde321e6f]
	23	[4785]	CALL     	R0 2 2 ; R0 := R0(R1)
	24	[4786]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0xf7d48ee0]
	25	[4786]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[4786]	SETGLOBALHASH	R1 K5 ; mShipSuit := R1
	27	[4789]	GETGLOBAL	R1 K8 ; R1 := 0x2d0fad09
	28	[4789]	LOADK    	R2 K9 ; R2 := "Lotus.Interface.Components.ThemedStats"
	29	[4789]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[4790]	GETTABLE 	R2 R1 K11 ; R2 := R1[0xae6791ba]
	31	[4790]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	32	[4790]	LOADK    	R4 K13 ; R4 := "BottomRightContainer.Stats"
	33	[4790]	GETGLOBAL	R5 K5 ; R5 := mShipSuit
	34	[4790]	GETGLOBAL	R6 K2 ; R6 := mShipAvatar
	35	[4790]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	36	[4790]	SETGLOBALHASH	R2 K10 ; mStats := R2
	37	[4791]	GETGLOBAL	R2 K10 ; R2 := mStats
	38	[4791]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0x3bc79f4f]
	39	[4791]	LOADK    	R4 K15 ; R4 := "BottomRightContainer.ScrollBar"
	40	[4791]	LOADK    	R5 := 630.000000
	41	[4791]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	42	[4792]	GETGLOBAL	R2 K10 ; R2 := mStats
	43	[4792]	GETTABLE 	R2 R2 K16 ; R2 := R2["mScrollBar"]
	44	[4792]	SETTABLE 	R2 K17 K18 ; R2["mInactiveXOffset"] := -5.000000
	45	[4793]	GETGLOBAL	R2 K10 ; R2 := mStats
	46	[4793]	SETTABLE 	R2 K19 K20 ; R2["mCanFocusStats"] := true
	47	[4794]	GETGLOBAL	R2 K10 ; R2 := mStats
	48	[4794]	GETTABLE 	R2 R2 K16 ; R2 := R2["mScrollBar"]
	49	[4794]	GETGLOBAL	R3 K10 ; R3 := mStats
	50	[4794]	GETTABLE 	R3 R3 K16 ; R3 := R3["mScrollBar"]
	51	[4794]	GETUPVAL 	R4 U0 ; R4 := U0
	52	[4794]	GETTABLE 	R4 R4 K23 ; R4 := R4[0xb5be5d4a]
	53	[4794]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	54	[4794]	LOADK    	R6 K15 ; R6 := "BottomRightContainer.ScrollBar"
	55	[4794]	CALL     	R4 3 3 ; R4,R5 := R4(R5,R6)
	56	[4794]	SETTABLE 	R3 K22 R5 ; R3["mActiveY"] := R5
	57	[4794]	SETTABLE 	R2 K21 R4 ; R2["mActiveX"] := R4
	58	[4796]	RETURN   	R0 1 ; return 

function #136 <?:4798,4813> (43 instructions, 172 bytes at 00000211256F4310)
2 params, 7 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[4799]	GETTABLE 	R2 R0 K0 ; R2 := R0["Filler"]
	2	[4799]	TEST     	R2 1 ; if R2 then PC := 5
	3	[4799]	JMP      	5 ; PC := 5
	4	[4799]	GETTABLE 	R2 R0 K1 ; R2 := R0["EmptySlot"]
	5	[4800]	TEST     	R2 1 ; if R2 then PC := 12
	6	[4800]	JMP      	12 ; PC := 12
	7	[4800]	GETGLOBAL	R3 K2 ; R3 := mInventoryGrid
	8	[4800]	GETTABLE 	R3 R3 K3 ; R3 := R3["mPrevSelectedId"]
	9	[4800]	GETTABLE 	R4 R0 K4 ; R4 := R0["Id"]
	10	[4800]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 13
	11	[4800]	JMP      	13 ; PC := 13
	12	[4800]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 13
	13	[4800]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[4801]	GETUPVAL 	R4 U0 ; R4 := U0
	15	[4801]	MOVE     	R5 R0 ; R5 := R0
	16	[4801]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[4803]	NEWTABLE 	R5 0 8 ; R5 := {}
	18	[4804]	SETTABLE 	R5 K5 K6 ; R5["HideCountThreshold"] := 1.000000
	19	[4805]	NEWTABLE 	R6 0 1 ; R6 := {}
	20	[4805]	SETTABLE 	R6 K8 K9 ; R6["TagOverride"] := "/Lotus/Language/Menu/Crafting_Owned_Brief"
	21	[4805]	SETTABLE 	R5 K7 R6 ; R5["OwnedInfo"] := R6
	22	[4806]	SETTABLE 	R5 K10 R2 ; R5["IsFiller"] := R2
	23	[4807]	SETTABLE 	R5 K11 R1 ; R5["IsFocused"] := R1
	24	[4808]	SETTABLE 	R5 K12 R3 ; R5["IsSelected"] := R3
	25	[4809]	EQ       	0 R4 K14 ; if R4 ~= nil then PC := 28
	26	[4809]	JMP      	28 ; PC := 28
	27	[4809]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 28
	28	[4809]	OP_LOADBOOL	R6 1 0 ; R6 := true
	29	[4809]	SETTABLE 	R5 K13 R6 ; R5["Locked"] := R6
	30	[4810]	SETTABLE 	R5 K15 R4 ; R5["LockedMsg"] := R4
	31	[4811]	TESTSET  	R6 R1 0 ; if not R1 then PC := 41 else R6 := R1 
	32	[4811]	JMP      	41 ; PC := 41
	33	[4811]	GETTABLE 	R6 R0 K13 ; R6 := R0["Locked"]
	34	[4811]	TEST     	R6 1 ; if R6 then PC := 39
	35	[4811]	JMP      	39 ; PC := 39
	36	[4811]	GETTABLE 	R6 R0 K17 ; R6 := R0["Hidden"]
	37	[4811]	NOT      	R6 R6 ; R6 := not R6
	38	[4811]	JMP      	41 ; PC := 41
	39	[4811]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 40
	40	[4811]	OP_LOADBOOL	R6 1 0 ; R6 := true
	41	[4811]	SETTABLE 	R5 K16 R6 ; R5["ShowInfoPopup"] := R6
	42	[4812]	RETURN   	R5 2 ; return R5 
	43	[4813]	RETURN   	R0 1 ; return 

function #137 <?:4815,4833> (97 instructions, 388 bytes at 00000211319B8E10)
1 param, 7 slots, 0 upvalues, 0 locals, 20 constants, 0 functions
	1	[4816]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[4816]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	3	[4816]	MOVE     	R3 R0 ; R3 := R0
	4	[4816]	LOADK    	R4 K2 ; R4 := ".SalvageProgress.Fill"
	5	[4816]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	6	[4816]	GETGLOBAL	R4 K3 ; R4 := 0xbe447565
	7	[4816]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	8	[4817]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	9	[4817]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	10	[4817]	MOVE     	R3 R0 ; R3 := R0
	11	[4817]	LOADK    	R4 K4 ; R4 := ".SalvageProgress.Backer"
	12	[4817]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	13	[4817]	GETGLOBAL	R4 K3 ; R4 := 0xbe447565
	14	[4817]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	15	[4819]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	16	[4819]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	17	[4819]	MOVE     	R3 R0 ; R3 := R0
	18	[4819]	LOADK    	R4 K6 ; R4 := "SalvageProgress.Backer"
	19	[4819]	LOADK    	R5 := 9.000000
	20	[4819]	GETGLOBAL	R6 K7 ; R6 := mColors
	21	[4819]	GETTABLE 	R6 R6 K8 ; R6 := R6["FloatingContent"]
	22	[4819]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	23	[4820]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	24	[4820]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	25	[4820]	MOVE     	R3 R0 ; R3 := R0
	26	[4820]	LOADK    	R4 K6 ; R4 := "SalvageProgress.Backer"
	27	[4820]	LOADK    	R5 := 10.000000
	28	[4820]	LOADK    	R6 := 20.000000
	29	[4820]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	30	[4821]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	31	[4821]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	32	[4821]	MOVE     	R3 R0 ; R3 := R0
	33	[4821]	LOADK    	R4 K9 ; R4 := "SalvageProgress.Fill"
	34	[4821]	LOADK    	R5 := 9.000000
	35	[4821]	GETGLOBAL	R6 K7 ; R6 := mColors
	36	[4821]	GETTABLE 	R6 R6 K8 ; R6 := R6["FloatingContent"]
	37	[4821]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	38	[4823]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	39	[4823]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	40	[4823]	MOVE     	R3 R0 ; R3 := R0
	41	[4823]	LOADK    	R4 K10 ; R4 := "SalvageProgress.Icon"
	42	[4823]	LOADK    	R5 := 9.000000
	43	[4823]	GETGLOBAL	R6 K7 ; R6 := mColors
	44	[4823]	GETTABLE 	R6 R6 K8 ; R6 := R6["FloatingContent"]
	45	[4823]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	46	[4825]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	47	[4825]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x1cb415c1]
	48	[4825]	MOVE     	R3 R0 ; R3 := R0
	49	[4825]	LOADK    	R4 K12 ; R4 := ".SalvageProgress.FadedBacker"
	50	[4825]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	51	[4825]	GETGLOBAL	R4 K13 ; R4 := 0xc7c2f904
	52	[4825]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	53	[4826]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	54	[4826]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	55	[4826]	MOVE     	R3 R0 ; R3 := R0
	56	[4826]	LOADK    	R4 K14 ; R4 := "SalvageProgress.FadedBacker"
	57	[4826]	LOADK    	R5 := 9.000000
	58	[4826]	GETGLOBAL	R6 K7 ; R6 := mColors
	59	[4826]	GETTABLE 	R6 R6 K15 ; R6 := R6["Background1"]
	60	[4826]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	61	[4827]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	62	[4827]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x1cb415c1]
	63	[4827]	MOVE     	R3 R0 ; R3 := R0
	64	[4827]	LOADK    	R4 K16 ; R4 := ".SalvageProgress.FadedBacker2"
	65	[4827]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	66	[4827]	GETGLOBAL	R4 K13 ; R4 := 0xc7c2f904
	67	[4827]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	68	[4828]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	69	[4828]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	70	[4828]	MOVE     	R3 R0 ; R3 := R0
	71	[4828]	LOADK    	R4 K17 ; R4 := "SalvageProgress.FadedBacker2"
	72	[4828]	LOADK    	R5 := 9.000000
	73	[4828]	GETGLOBAL	R6 K7 ; R6 := mColors
	74	[4828]	GETTABLE 	R6 R6 K15 ; R6 := R6["Background1"]
	75	[4828]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	76	[4830]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	77	[4830]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	78	[4830]	MOVE     	R3 R0 ; R3 := R0
	79	[4830]	LOADK    	R4 K18 ; R4 := ".SalvageProgress.Icon"
	80	[4830]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	81	[4830]	GETGLOBAL	R4 K19 ; R4 := 0x0f20c9bd
	82	[4830]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	83	[4831]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	84	[4831]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	85	[4831]	MOVE     	R3 R0 ; R3 := R0
	86	[4831]	LOADK    	R4 K12 ; R4 := ".SalvageProgress.FadedBacker"
	87	[4831]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	88	[4831]	GETGLOBAL	R4 K19 ; R4 := 0x0f20c9bd
	89	[4831]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	90	[4832]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	91	[4832]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xd5181643]
	92	[4832]	MOVE     	R3 R0 ; R3 := R0
	93	[4832]	LOADK    	R4 K16 ; R4 := ".SalvageProgress.FadedBacker2"
	94	[4832]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	95	[4832]	GETGLOBAL	R4 K19 ; R4 := 0x0f20c9bd
	96	[4832]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	97	[4833]	RETURN   	R0 1 ; return 

function #138 <?:4835,4841> (19 instructions, 76 bytes at 0000021135CFAB60)
2 params, 8 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[4836]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4836]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xbf9f30a4]
	3	[4836]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	4	[4836]	GETGLOBAL	R4 K2 ; R4 := mInventoryGrid
	5	[4836]	MOVE     	R5 R0 ; R5 := R0
	6	[4836]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[4838]	GETGLOBAL	R2 K3 ; R2 := 0x38f10e85
	8	[4838]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	9	[4838]	MOVE     	R4 R0 ; R4 := R0
	10	[4838]	LOADK    	R5 K4 ; R5 := ".attachMovie"
	11	[4838]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	12	[4838]	LOADK    	R5 K5 ; R5 := "SalvageProgress"
	13	[4838]	LOADK    	R6 K5 ; R6 := "SalvageProgress"
	14	[4838]	LOADK    	R7 K6 ; R7 := 11234.000000
	15	[4838]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	16	[4840]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[4840]	MOVE     	R3 R0 ; R3 := R0
	18	[4840]	CALL     	R2 2 1 ; R2(R3)
	19	[4841]	RETURN   	R0 1 ; return 

function #139 <?:4843,4858> (36 instructions, 144 bytes at 00000211225ACB20)
1 param, 5 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[4844]	GETGLOBAL	R1 K0 ; R1 := mActiveState
	2	[4844]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4844]	GETTABLE 	R2 R2 K1 ; R2 := R2["WEAPON_INV"]
	4	[4844]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 7
	5	[4844]	JMP      	7 ; PC := 7
	6	[4845]	RETURN   	R0 1 ; return 
	7	[4848]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	8	[4848]	GETTABLE 	R1 R1 K3 ; R1 := R1["mSelectedElement"]
	9	[4848]	GETTABLE 	R1 R1 K4 ; R1 := R1["NameOverride"]
	10	[4849]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 13
	11	[4849]	JMP      	13 ; PC := 13
	12	[4850]	LOADK    	R1 K6 ; R1 := "NONE"
	13	[4852]	EQ       	1 R0 K5 ; if R0 == nil then PC := 30
	14	[4852]	JMP      	30 ; PC := 30
	15	[4852]	GETTABLE 	R2 R0 K7 ; R2 := R0["Equipped"]
	16	[4852]	TEST     	R2 0 ; if not R2 then PC := 25
	17	[4852]	JMP      	25 ; PC := 25
	18	[4852]	GETTABLE 	R2 R0 K8 ; R2 := R0["EquippedSlots"]
	19	[4852]	GETGLOBAL	R3 K2 ; R3 := mEquipment
	20	[4852]	GETTABLE 	R3 R3 K3 ; R3 := R3["mSelectedElement"]
	21	[4852]	GETTABLE 	R3 R3 K9 ; R3 := R3["Id"]
	22	[4852]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	23	[4852]	TEST     	R2 1 ; if R2 then PC := 30
	24	[4852]	JMP      	30 ; PC := 30
	25	[4853]	MOVE     	R2 R1 ; R2 := R1
	26	[4853]	LOADK    	R3 K10 ; R3 := " > "
	27	[4853]	GETTABLE 	R4 R0 K11 ; R4 := R0["Name"]
	28	[4853]	CONCAT   	R1 R2 R4 ; R1 := R2 .. R3 .. R4
	29	[4853]	JMP      	33 ; PC := 33
	30	[4855]	MOVE     	R2 R1 ; R2 := R1
	31	[4855]	LOADK    	R3 K12 ; R3 := " : EQUIPPED"
	32	[4855]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	33	[4857]	GETGLOBAL	R2 K13 ; R2 := 0x3d106989
	34	[4857]	MOVE     	R3 R1 ; R3 := R1
	35	[4857]	CALL     	R2 2 1 ; R2(R3)
	36	[4858]	RETURN   	R0 1 ; return 

function #140 <?:4860,4882> (73 instructions, 292 bytes at 0000021135E1DC20)
1 param, 8 slots, 6 upvalues, 0 locals, 29 constants, 0 functions
	1	[4861]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4861]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4861]	JMP      	5 ; PC := 5
	4	[4862]	RETURN   	R0 1 ; return 
	5	[4865]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4865]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb496de90]
	7	[4865]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4865]	GETGLOBAL	R3 K4 ; R3 := mInventoryGrid
	9	[4865]	MOVE     	R4 R0 ; R4 := R0
	10	[4865]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4865]	MOVE     	R6 R0 ; R6 := R0
	12	[4865]	OP_LOADBOOL	R7 1 0 ; R7 := true
	13	[4865]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4865]	CALL     	R1 0 1 ; R1(R2,...)
	15	[4867]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[4867]	CALL     	R1 1 2 ; R1 := R1()
	17	[4868]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	18	[4868]	MOVE     	R3 R1 ; R3 := R1
	19	[4868]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[4868]	TEST     	R2 1 ; if R2 then PC := 73
	21	[4868]	JMP      	73 ; PC := 73
	22	[4868]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	23	[4868]	GETTABLE 	R3 R1 K6 ; R3 := R1["mStoreItem"]
	24	[4868]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[4868]	TEST     	R2 1 ; if R2 then PC := 73
	26	[4868]	JMP      	73 ; PC := 73
	27	[4869]	GETUPVAL 	R2 U3 ; R2 := U3
	28	[4869]	GETTABLE 	R2 R2 K7 ; R2 := R2[0x08681f50]
	29	[4869]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	30	[4869]	GETTABLE 	R4 R1 K6 ; R4 := R1["mStoreItem"]
	31	[4869]	NEWTABLE 	R5 0 3 ; R5 := {}
	32	[4869]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	33	[4869]	SETTABLE 	R5 K8 R6 ; R5["GameData"] := R6
	34	[4869]	NEWTABLE 	R6 0 1 ; R6 := {}
	35	[4869]	GETTABLE 	R7 R1 K11 ; R7 := R1["Item"]
	36	[4869]	TEST     	R7 1 ; if R7 then PC := 39
	37	[4869]	JMP      	39 ; PC := 39
	38	[4869]	GETTABLE 	R7 R1 K12 ; R7 := R1["WeaponInfo"]
	39	[4869]	SETTABLE 	R6 K11 R7 ; R6["Item"] := R7
	40	[4869]	SETTABLE 	R5 K10 R6 ; R5["ItemInfo"] := R6
	41	[4869]	SETTABLE 	R5 K13 K14 ; R5["SalvageRepaired"] := true
	42	[4869]	GETUPVAL 	R6 U4 ; R6 := U4
	43	[4869]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	44	[4870]	GETTABLE 	R3 R1 K15 ; R3 := R1["UID"]
	45	[4870]	SETTABLE 	R2 K15 R3 ; R2["UID"] := R3
	46	[4871]	SETTABLE 	R2 K16 K14 ; R2["AllInOne"] := true
	47	[4874]	GETTABLE 	R3 R2 K17 ; R3 := R2["RawItem"]
	48	[4874]	GETTABLE 	R4 R1 K18 ; R4 := R1["mUpgradeType"]
	49	[4874]	SETTABLE 	R3 K18 R4 ; R3["mUpgradeType"] := R4
	50	[4875]	GETTABLE 	R3 R2 K17 ; R3 := R2["RawItem"]
	51	[4875]	GETTABLE 	R4 R1 K19 ; R4 := R1["mUpgradeFingerprint"]
	52	[4875]	SETTABLE 	R3 K19 R4 ; R3["mUpgradeFingerprint"] := R4
	53	[4877]	GETGLOBAL	R3 K20 ; R3 := _T
	54	[4877]	GETTABLE 	R3 R3 K21 ; R3 := R3[0x0e3bd89d]
	55	[4877]	MOVE     	R4 R2 ; R4 := R2
	56	[4877]	LOADK    	R5 K22 ; R5 := "2"
	57	[4877]	LOADK    	R6 K23 ; R6 := "/Lotus/Language/Menu/Loadout_Installed"
	58	[4877]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	59	[4877]	TEST     	R3 0 ; if not R3 then PC := 73
	60	[4877]	JMP      	73 ; PC := 73
	61	[4878]	GETGLOBAL	R3 K24 ; R3 := mStats
	62	[4878]	GETGLOBAL	R4 K26 ; R4 := mActiveState
	63	[4878]	GETUPVAL 	R5 U5 ; R5 := U5
	64	[4878]	GETTABLE 	R5 R5 K27 ; R5 := R5["WEAPON_INV"]
	65	[4878]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 68
	66	[4878]	JMP      	68 ; PC := 68
	67	[4878]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 68
	68	[4878]	OP_LOADBOOL	R4 1 0 ; R4 := true
	69	[4878]	SETTABLE 	R3 K25 R4 ; R3["mFadeThemedStats"] := R4
	70	[4879]	GETGLOBAL	R3 K24 ; R3 := mStats
	71	[4879]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x71e9ac81]
	72	[4879]	CALL     	R3 2 1 ; R3(R4)
	73	[4882]	RETURN   	R0 1 ; return 

function #141 <?:4884,4894> (22 instructions, 88 bytes at 0000021135E1DD00)
1 param, 8 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[4885]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[4885]	SETTABLE 	R1 K1 K2 ; R1["InfoPopup_Data2"] := nil
	3	[4886]	GETGLOBAL	R1 K3 ; R1 := mStats
	4	[4886]	SETTABLE 	R1 K4 K5 ; R1["mFadeThemedStats"] := false
	5	[4887]	GETGLOBAL	R1 K3 ; R1 := mStats
	6	[4887]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x71e9ac81]
	7	[4887]	CALL     	R1 2 1 ; R1(R2)
	8	[4889]	GETTABLE 	R1 R0 K7 ; R1 := R0["mClipName"]
	9	[4889]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 12
	10	[4889]	JMP      	12 ; PC := 12
	11	[4890]	RETURN   	R0 1 ; return 
	12	[4893]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4893]	GETTABLE 	R1 R1 K8 ; R1 := R1[0xb496de90]
	14	[4893]	GETGLOBAL	R2 K9 ; R2 := 0xae91e43b
	15	[4893]	GETGLOBAL	R3 K10 ; R3 := mInventoryGrid
	16	[4893]	MOVE     	R4 R0 ; R4 := R0
	17	[4893]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[4893]	MOVE     	R6 R0 ; R6 := R0
	19	[4893]	OP_LOADBOOL	R7 0 0 ; R7 := false
	20	[4893]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	21	[4893]	CALL     	R1 0 1 ; R1(R2,...)
	22	[4894]	RETURN   	R0 1 ; return 

function #142 <?:4896,4925> (79 instructions, 316 bytes at 0000021135BEDA50)
2 params, 16 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[4897]	LOADK    	R2 := 0.000000
	2	[4898]	LOADNIL  	R3 R3 ; R3 := nil
	3	[4899]	LOADK    	R4 := 0.000000
	4	[4900]	GETTABLE 	R5 R1 K0 ; R5 := R1["SalvageState"]
	5	[4900]	GETUPVAL 	R6 U0 ; R6 := U0
	6	[4900]	GETTABLE 	R6 R6 K1 ; R6 := R6["IDENTIFIED"]
	7	[4900]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 14
	8	[4900]	JMP      	14 ; PC := 14
	9	[4900]	GETTABLE 	R5 R1 K0 ; R5 := R1["SalvageState"]
	10	[4900]	GETUPVAL 	R6 U0 ; R6 := U0
	11	[4900]	GETTABLE 	R6 R6 K2 ; R6 := R6["AWAITING_FUNDS"]
	12	[4900]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 18
	13	[4900]	JMP      	18 ; PC := 18
	14	[4901]	LOADK    	R2 := 100.000000
	15	[4902]	GETGLOBAL	R3 K3 ; R3 := 0x1df5e886
	16	[4903]	GETTABLE 	R4 R1 K4 ; R4 := R1["SalvageProgress"]
	17	[4903]	JMP      	54 ; PC := 54
	18	[4904]	GETTABLE 	R5 R1 K0 ; R5 := R1["SalvageState"]
	19	[4904]	GETUPVAL 	R6 U0 ; R6 := U0
	20	[4904]	GETTABLE 	R6 R6 K5 ; R6 := R6["AWAITING_COMPLETION"]
	21	[4904]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 37
	22	[4904]	JMP      	37 ; PC := 37
	23	[4905]	LOADK    	R2 := 100.000000
	24	[4906]	GETGLOBAL	R3 K6 ; R3 := 0xfd917bce
	25	[4907]	GETGLOBAL	R5 K7 ; R5 := 0xb009bbc6
	26	[4907]	GETTABLE 	R6 R1 K8 ; R6 := R1["SalvageRecipe"]
	27	[4907]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[4908]	GETGLOBAL	R6 K9 ; R6 := 0x34291f5c
	29	[4908]	GETTABLE 	R6 R6 K10 ; R6 := R6[0x397b920f]
	30	[4908]	GETTABLE 	R7 R1 K11 ; R7 := R1["SalvageTimeRemaining"]
	31	[4908]	CALL     	R6 2 2 ; R6 := R6(R7)
	32	[4909]	SELF     	R7 R5 K12 ; R8 := R5; R7 := R5[0xfd536ae6]
	33	[4909]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[4910]	DIV      	R8 R6 R7 ; R8 := R6 / R7
	35	[4910]	SUB      	R4 K13 R8 ; R4 := 1.000000 - R8
	36	[4910]	JMP      	54 ; PC := 54
	37	[4911]	GETTABLE 	R8 R1 K0 ; R8 := R1["SalvageState"]
	38	[4911]	GETUPVAL 	R9 U0 ; R9 := U0
	39	[4911]	GETTABLE 	R9 R9 K14 ; R9 := R9["COMPLETED"]
	40	[4911]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 46
	41	[4911]	JMP      	46 ; PC := 46
	42	[4912]	LOADK    	R2 := 100.000000
	43	[4913]	GETGLOBAL	R3 K15 ; R3 := 0x006f77b2
	44	[4914]	LOADK    	R4 := 1.000000
	45	[4914]	JMP      	54 ; PC := 54
	46	[4915]	GETTABLE 	R8 R1 K0 ; R8 := R1["SalvageState"]
	47	[4915]	GETUPVAL 	R9 U0 ; R9 := U0
	48	[4915]	GETTABLE 	R9 R9 K16 ; R9 := R9["UNIDENTIFIED"]
	49	[4915]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 54
	50	[4915]	JMP      	54 ; PC := 54
	51	[4916]	LOADK    	R2 := 100.000000
	52	[4917]	GETGLOBAL	R3 K17 ; R3 := 0x7accb9a0
	53	[4918]	LOADK    	R4 := 0.000000
	54	[4921]	GETGLOBAL	R8 K18 ; R8 := 0xae91e43b
	55	[4921]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0xf64b7262]
	56	[4921]	MOVE     	R10 R0 ; R10 := R0
	57	[4921]	LOADK    	R11 K4 ; R11 := "SalvageProgress"
	58	[4921]	LOADK    	R12 := 10.000000
	59	[4921]	MOVE     	R13 R2 ; R13 := R2
	60	[4921]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	61	[4922]	GETGLOBAL	R8 K18 ; R8 := 0xae91e43b
	62	[4922]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0x1cb415c1]
	63	[4922]	MOVE     	R10 R0 ; R10 := R0
	64	[4922]	LOADK    	R11 K21 ; R11 := ".SalvageProgress.Icon"
	65	[4922]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	66	[4922]	MOVE     	R11 R3 ; R11 := R3
	67	[4922]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	68	[4924]	GETGLOBAL	R8 K18 ; R8 := 0xae91e43b
	69	[4924]	SELF     	R8 R8 K22 ; R9 := R8; R8 := R8[0x91e13703]
	70	[4924]	MOVE     	R10 R0 ; R10 := R0
	71	[4924]	LOADK    	R11 K23 ; R11 := ".SalvageProgress.Fill"
	72	[4924]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	73	[4924]	LOADK    	R11 K24 ; R11 := "AlphaTestThreshold"
	74	[4924]	MOVE     	R12 R4 ; R12 := R4
	75	[4924]	LOADK    	R13 := 0.000000
	76	[4924]	LOADK    	R14 := 0.000000
	77	[4924]	LOADK    	R15 := 0.000000
	78	[4924]	CALL     	R8 8 1 ; R8(R9,R10,R11,R12,R13,R14,R15)
	79	[4925]	RETURN   	R0 1 ; return 

function #143 <?:4927,4935> (25 instructions, 100 bytes at 00000211177E8CD0)
1 param, 9 slots, 3 upvalues, 0 locals, 6 constants, 0 functions
	1	[4928]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4928]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4928]	JMP      	5 ; PC := 5
	4	[4929]	RETURN   	R0 1 ; return 
	5	[4932]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4932]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xc339daf7]
	7	[4932]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4932]	GETGLOBAL	R3 K4 ; R3 := mInventoryGrid
	9	[4932]	MOVE     	R4 R0 ; R4 := R0
	10	[4932]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4932]	MOVE     	R6 R0 ; R6 := R0
	12	[4932]	GETGLOBAL	R7 K4 ; R7 := mInventoryGrid
	13	[4932]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xed1ab921]
	14	[4932]	CALL     	R7 2 2 ; R7 := R7(R8)
	15	[4932]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 18
	16	[4932]	JMP      	18 ; PC := 18
	17	[4932]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 18
	18	[4932]	OP_LOADBOOL	R7 1 0 ; R7 := true
	19	[4932]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	20	[4932]	CALL     	R1 0 1 ; R1(R2,...)
	21	[4934]	GETUPVAL 	R1 U2 ; R1 := U2
	22	[4934]	GETTABLE 	R2 R0 K0 ; R2 := R0["mClipName"]
	23	[4934]	MOVE     	R3 R0 ; R3 := R0
	24	[4934]	CALL     	R1 3 1 ; R1(R2,R3)
	25	[4935]	RETURN   	R0 1 ; return 

function #144 <?:4937,5148> (399 instructions, 1596 bytes at 000002113221FD40)
0 params, 13 slots, 12 upvalues, 0 locals, 122 constants, 11 functions
	1	[4938]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4938]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4938]	LOADK    	R2 K2 ; R2 := "TopLeftContainer.Inventory.Items"
	4	[4938]	LOADK    	R3 := 1.000000
	5	[4938]	LOADK    	R4 := -60.000000
	6	[4938]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4939]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	8	[4939]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	9	[4939]	LOADK    	R2 K3 ; R2 := "TopLeftContainer.Inventory.ScrollBar"
	10	[4939]	LOADK    	R3 := 1.000000
	11	[4939]	LOADK    	R4 := -124.000000
	12	[4939]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	13	[4941]	GETGLOBAL	R0 K4 ; R0 := 0x2d0fad09
	14	[4941]	LOADK    	R1 K5 ; R1 := "Lotus.Interface.Components.CategorizedGrid"
	15	[4941]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[4942]	GETTABLE 	R1 R0 K7 ; R1 := R0[0x67d7b715]
	17	[4942]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	18	[4942]	LOADK    	R3 K8 ; R3 := "TopLeftContainer.Inventory.Items.Item"
	19	[4942]	LOADK    	R4 := 3.000000
	20	[4942]	LOADK    	R5 := 3.000000
	21	[4942]	LOADK    	R6 K9 ; R6 := "TopLeftContainer.Inventory.Categories.Menu"
	22	[4942]	LOADK    	R7 K10 ; R7 := "TopLeftContainer.Inventory.SearchAndSort.SortMenu"
	23	[4942]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	24	[4942]	SETGLOBALHASH	R1 K6 ; mInventoryGrid := R1
	25	[4943]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	26	[4943]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	27	[4943]	LOADK    	R3 K12 ; R3 := "InventorySelected"
	28	[4943]	LOADK    	R4 K13 ; R4 := "InventoryFocused"
	29	[4943]	LOADK    	R5 K14 ; R5 := "InventoryUnfocused"
	30	[4943]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	31	[4944]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	32	[4944]	SETTABLE 	R1 K15 K16 ; R1["mShowLabels"] := true
	33	[4945]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	34	[4945]	SETTABLE 	R1 K17 K16 ; R1["SkipReinitializePos"] := true
	35	[4946]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	36	[4946]	SETTABLE 	R1 K18 K19 ; R1["Width"] := 500.000000
	37	[4947]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	38	[4947]	SETTABLE 	R1 K20 K21 ; R1["ElementDimBuffer"] := 20.000000
	39	[4948]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	40	[4948]	SETTABLE 	R1 K22 K23 ; R1["ElementWidth"] := 142.000000
	41	[4949]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	42	[4949]	SETTABLE 	R1 K24 K23 ; R1["ElementHeight"] := 142.000000
	43	[4950]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	44	[4950]	GETGLOBAL	R2 K6 ; R2 := mInventoryGrid
	45	[4950]	GETTABLE 	R2 R2 K22 ; R2 := R2["ElementWidth"]
	46	[4950]	DIV      	R2 R2 K26 ; R2 := R2 / 2.000000
	47	[4950]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	48	[4950]	GETTABLE 	R3 R3 K20 ; R3 := R3["ElementDimBuffer"]
	49	[4950]	ADD      	R2 R2 R3 ; R2 := R2 + R3
	50	[4950]	SETTABLE 	R1 K25 R2 ; R1["mScrollBarHorizontalOffset"] := R2
	51	[4951]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	52	[4951]	SETTABLE 	R1 K27 K28 ; R1["mSelectedScale"] := 100.000000
	53	[4952]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	54	[4952]	GETTABLE 	R1 R1 K29 ; R1 := R1["mSortMenu"]
	55	[4952]	SELF     	R1 R1 K30 ; R2 := R1; R1 := R1[0x8d77b2b2]
	56	[4952]	LOADK    	R3 := 239.000000
	57	[4952]	CALL     	R1 3 1 ; R1(R2,R3)
	58	[4953]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	59	[4953]	SETTABLE 	R1 K31 K16 ; R1["mUseCornerForSelected"] := true
	60	[4954]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	61	[4954]	SETTABLE 	R1 K32 K33 ; R1["mSelectElementsOnFocus"] := false
	62	[4955]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	63	[4955]	SETTABLE 	R1 K34 K33 ; R1["mWrapAroundNavigation"] := false
	64	[4956]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	65	[4956]	SETTABLE 	R1 K35 K36 ; R1["mPrevSelectedId"] := nil
	66	[4957]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	67	[4957]	GETTABLE 	R1 R1 K37 ; R1 := R1["mCategoryMenu"]
	68	[4957]	GETUPVAL 	R2 U0 ; R2 := U0
	69	[4957]	GETTABLE 	R2 R2 K39 ; R2 := R2["LEFT_ALIGNED"]
	70	[4957]	SETTABLE 	R1 K38 R2 ; R1["mAlign"] := R2
	71	[4958]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	72	[4958]	GETTABLE 	R1 R1 K37 ; R1 := R1["mCategoryMenu"]
	73	[4958]	SETTABLE 	R1 K40 K16 ; R1["mHideEmptyCategories"] := true
	74	[4959]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	75	[4959]	GETTABLE 	R1 R1 K37 ; R1 := R1["mCategoryMenu"]
	76	[4959]	SETTABLE 	R1 K41 K33 ; R1["mUseOriginalDimensions"] := false
	77	[4960]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	78	[4960]	GETGLOBAL	R2 K43 ; R2 := 0x5b54ec72
	79	[4960]	SETTABLE 	R1 K42 R2 ; R1["RectangleVisibleRangeMaterial"] := R2
	80	[4961]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	81	[4961]	GETGLOBAL	R2 K45 ; R2 := 0x0f20c9bd
	82	[4961]	SETTABLE 	R1 K44 R2 ; R1["VisibleRangeMaterial"] := R2
	83	[4962]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	84	[4962]	GETGLOBAL	R2 K47 ; R2 := 0x09b6dacc
	85	[4962]	SETTABLE 	R1 K46 R2 ; R1["TextVisibleRangeMaterial"] := R2
	86	[4963]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	87	[4963]	SELF     	R1 R1 K48 ; R2 := R1; R1 := R1[0x3bc79f4f]
	88	[4963]	LOADK    	R3 K3 ; R3 := "TopLeftContainer.Inventory.ScrollBar"
	89	[4963]	CALL     	R1 3 1 ; R1(R2,R3)
	90	[4964]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	91	[4964]	SELF     	R1 R1 K49 ; R2 := R1; R1 := R1[0x7220acb6]
	92	[4964]	CALL     	R1 2 1 ; R1(R2)
	93	[4965]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	94	[4965]	GETUPVAL 	R2 U1 ; R2 := U1
	95	[4965]	SETTABLE 	R1 K50 R2 ; R1["mClipCreatedCallback"] := R2
	96	[4966]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	97	[4966]	GETUPVAL 	R2 U2 ; R2 := U2
	98	[4966]	SETTABLE 	R1 K51 R2 ; R1["mOnFocusedCallback"] := R2
	99	[4967]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	100	[4967]	GETUPVAL 	R2 U3 ; R2 := U3
	101	[4967]	SETTABLE 	R1 K52 R2 ; R1["mOnUnfocusedCallback"] := R2
	102	[4968]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	103	[4968]	GETUPVAL 	R2 U4 ; R2 := U4
	104	[4968]	SETTABLE 	R1 K53 R2 ; R1["mElementDrawCallback"] := R2
	105	[4969]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	106	[4969]	GETGLOBAL	R2 K6 ; R2 := mInventoryGrid
	107	[4969]	GETTABLE 	R2 R2 K55 ; R2 := R2["Redraw"]
	108	[4969]	SETTABLE 	R1 K54 R2 ; R1["BaseRedraw"] := R2
	109	[4970]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	110	[4975]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	111	[4975]	GETUPVAL 	R0 U5 ; R0 := U5
	112	[4975]	GETUPVAL 	R0 U6 ; R0 := U6
	113	[4975]	SETTABLE 	R1 K55 R2 ; R1["Redraw"] := R2
	114	[4976]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	115	[5015]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	116	[5015]	GETUPVAL 	R0 U0 ; R0 := U0
	117	[5015]	GETUPVAL 	R0 U4 ; R0 := U4
	118	[5015]	GETUPVAL 	R0 U7 ; R0 := U7
	119	[5015]	GETUPVAL 	R0 U6 ; R0 := U6
	120	[5015]	GETUPVAL 	R0 U5 ; R0 := U5
	121	[5015]	GETUPVAL 	R0 U8 ; R0 := U8
	122	[5015]	GETUPVAL 	R0 U9 ; R0 := U9
	123	[5015]	GETUPVAL 	R0 U10 ; R0 := U10
	124	[5015]	SETTABLE 	R1 K56 R2 ; R1["mOnSelectedCallback"] := R2
	125	[5016]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	126	[5019]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	127	[5019]	GETUPVAL 	R0 U8 ; R0 := U8
	128	[5019]	SETTABLE 	R1 K57 R2 ; R1["mOnDoubleClickCallback"] := R2
	129	[5020]	GETGLOBAL	R1 K6 ; R1 := mInventoryGrid
	130	[5028]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	131	[5028]	SETTABLE 	R1 K58 R2 ; R1["AdditionalFilterFunction"] := R2
	132	[5046]	CLOSURE  	R1 4 ; R1 := closure(Function #5)
	133	[5046]	GETUPVAL 	R0 U7 ; R0 := U7
	134	[5054]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	135	[5056]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	136	[5056]	SELF     	R3 R3 K59 ; R4 := R3; R3 := R3[0xb029c588]
	137	[5056]	NEWTABLE 	R5 0 3 ; R5 := {}
	138	[5056]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	139	[5056]	SELF     	R6 R6 K61 ; R7 := R6; R6 := R6[0x42b04007]
	140	[5056]	LOADK    	R8 K62 ; R8 := "/Lotus/Language/Menu/SortBy_Name"
	141	[5056]	OP_LOADBOOL	R9 0 0 ; R9 := false
	142	[5056]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	143	[5056]	SETTABLE 	R5 K60 R6 ; R5["Name"] := R6
	144	[5056]	SETTABLE 	R5 K63 K64 ; R5["SortId"] := "NAME"
	145	[5063]	CLOSURE  	R6 6 ; R6 := closure(Function #7)
	146	[5063]	MOVE     	R0 R1 ; R0 := R1
	147	[5063]	MOVE     	R0 R2 ; R0 := R2
	148	[5063]	SETTABLE 	R5 K65 R6 ; R5["Attribute"] := R6
	149	[5056]	CALL     	R3 3 1 ; R3(R4,R5)
	150	[5064]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	151	[5064]	SELF     	R3 R3 K59 ; R4 := R3; R3 := R3[0xb029c588]
	152	[5064]	NEWTABLE 	R5 0 3 ; R5 := {}
	153	[5064]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	154	[5064]	SELF     	R6 R6 K61 ; R7 := R6; R6 := R6[0x42b04007]
	155	[5064]	LOADK    	R8 K66 ; R8 := "/Lotus/Language/Menu/SortBy_Level"
	156	[5064]	OP_LOADBOOL	R9 0 0 ; R9 := false
	157	[5064]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	158	[5064]	SETTABLE 	R5 K60 R6 ; R5["Name"] := R6
	159	[5064]	SETTABLE 	R5 K63 K67 ; R5["SortId"] := "MK_TIER"
	160	[5080]	CLOSURE  	R6 7 ; R6 := closure(Function #8)
	161	[5080]	MOVE     	R0 R1 ; R0 := R1
	162	[5080]	MOVE     	R0 R2 ; R0 := R2
	163	[5080]	SETTABLE 	R5 K65 R6 ; R5["Attribute"] := R6
	164	[5064]	CALL     	R3 3 1 ; R3(R4,R5)
	165	[5081]	GETGLOBAL	R3 K6 ; R3 := mInventoryGrid
	166	[5081]	SELF     	R3 R3 K59 ; R4 := R3; R3 := R3[0xb029c588]
	167	[5081]	NEWTABLE 	R5 0 3 ; R5 := {}
	168	[5081]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	169	[5081]	SELF     	R6 R6 K61 ; R7 := R6; R6 := R6[0x42b04007]
	170	[5081]	LOADK    	R8 K68 ; R8 := "/Lotus/Language/Menu/SortBy_Type"
	171	[5081]	OP_LOADBOOL	R9 0 0 ; R9 := false
	172	[5081]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	173	[5081]	SETTABLE 	R5 K60 R6 ; R5["Name"] := R6
	174	[5081]	SETTABLE 	R5 K63 K69 ; R5["SortId"] := "BRAND"
	175	[5092]	CLOSURE  	R6 8 ; R6 := closure(Function #9)
	176	[5092]	MOVE     	R0 R1 ; R0 := R1
	177	[5092]	MOVE     	R0 R2 ; R0 := R2
	178	[5092]	SETTABLE 	R5 K65 R6 ; R5["Attribute"] := R6
	179	[5081]	CALL     	R3 3 1 ; R3(R4,R5)
	180	[5093]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	181	[5093]	SELF     	R3 R3 K70 ; R4 := R3; R3 := R3[0x492f9da2]
	182	[5093]	CALL     	R3 2 2 ; R3 := R3(R4)
	183	[5094]	GETGLOBAL	R4 K71 ; R4 := 0x25d99d89
	184	[5094]	SELF     	R4 R4 K72 ; R5 := R4; R4 := R4[0xb6b7ca1e]
	185	[5094]	MOVE     	R6 R3 ; R6 := R3
	186	[5094]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	187	[5095]	EQ       	0 R4 K73 ; if R4 ~= "" then PC := 190
	188	[5095]	JMP      	190 ; PC := 190
	189	[5096]	LOADK    	R4 K64 ; R4 := "NAME"
	190	[5098]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	191	[5098]	SELF     	R5 R5 K74 ; R6 := R5; R5 := R5[0x60125a4f]
	192	[5098]	MOVE     	R7 R4 ; R7 := R4
	193	[5098]	CALL     	R5 3 1 ; R5(R6,R7)
	194	[5100]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	195	[5100]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	196	[5100]	NEWTABLE 	R7 0 3 ; R7 := {}
	197	[5100]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	198	[5100]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	199	[5100]	LOADK    	R10 K76 ; R10 := "/Lotus/Language/Menu/CategoryAll"
	200	[5100]	OP_LOADBOOL	R11 0 0 ; R11 := false
	201	[5100]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	202	[5100]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	203	[5100]	GETGLOBAL	R8 K78 ; R8 := 0x0032441c
	204	[5100]	GETTABLE 	R8 R8 K79 ; R8 := R8["UICategoryIcon_AllOn"]
	205	[5100]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	206	[5100]	SETTABLE 	R7 K80 K81 ; R7["Category"] := 0.000000
	207	[5100]	CALL     	R5 3 1 ; R5(R6,R7)
	208	[5101]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	209	[5101]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	210	[5101]	NEWTABLE 	R7 0 3 ; R7 := {}
	211	[5101]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	212	[5101]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	213	[5101]	LOADK    	R10 K82 ; R10 := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKI"
	214	[5101]	OP_LOADBOOL	R11 0 0 ; R11 := false
	215	[5101]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	216	[5101]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	217	[5101]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	218	[5101]	GETUPVAL 	R9 U11 ; R9 := U11
	219	[5101]	GETTABLE 	R9 R9 K84 ; R9 := R9["MKI"]
	220	[5101]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	221	[5101]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	222	[5101]	GETUPVAL 	R8 U11 ; R8 := U11
	223	[5101]	GETTABLE 	R8 R8 K84 ; R8 := R8["MKI"]
	224	[5101]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	225	[5101]	CALL     	R5 3 1 ; R5(R6,R7)
	226	[5102]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	227	[5102]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	228	[5102]	NEWTABLE 	R7 0 3 ; R7 := {}
	229	[5102]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	230	[5102]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	231	[5102]	LOADK    	R10 K85 ; R10 := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKII"
	232	[5102]	OP_LOADBOOL	R11 0 0 ; R11 := false
	233	[5102]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	234	[5102]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	235	[5102]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	236	[5102]	GETUPVAL 	R9 U11 ; R9 := U11
	237	[5102]	GETTABLE 	R9 R9 K86 ; R9 := R9["MKII"]
	238	[5102]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	239	[5102]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	240	[5102]	GETUPVAL 	R8 U11 ; R8 := U11
	241	[5102]	GETTABLE 	R8 R8 K86 ; R8 := R8["MKII"]
	242	[5102]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	243	[5102]	CALL     	R5 3 1 ; R5(R6,R7)
	244	[5103]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	245	[5103]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	246	[5103]	NEWTABLE 	R7 0 3 ; R7 := {}
	247	[5103]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	248	[5103]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	249	[5103]	LOADK    	R10 K87 ; R10 := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKIII"
	250	[5103]	OP_LOADBOOL	R11 0 0 ; R11 := false
	251	[5103]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	252	[5103]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	253	[5103]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	254	[5103]	GETUPVAL 	R9 U11 ; R9 := U11
	255	[5103]	GETTABLE 	R9 R9 K88 ; R9 := R9["MKIII"]
	256	[5103]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	257	[5103]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	258	[5103]	GETUPVAL 	R8 U11 ; R8 := U11
	259	[5103]	GETTABLE 	R8 R8 K88 ; R8 := R8["MKIII"]
	260	[5103]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	261	[5103]	CALL     	R5 3 1 ; R5(R6,R7)
	262	[5104]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	263	[5104]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	264	[5104]	NEWTABLE 	R7 0 3 ; R7 := {}
	265	[5104]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	266	[5104]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	267	[5104]	LOADK    	R10 K89 ; R10 := "/Lotus/Language/Menu/AP_TACTIC_RAILJACK"
	268	[5104]	OP_LOADBOOL	R11 0 0 ; R11 := false
	269	[5104]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	270	[5104]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	271	[5104]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	272	[5104]	GETUPVAL 	R9 U11 ; R9 := U11
	273	[5104]	GETTABLE 	R9 R9 K90 ; R9 := R9["LAVAN"]
	274	[5104]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	275	[5104]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	276	[5104]	GETUPVAL 	R8 U11 ; R8 := U11
	277	[5104]	GETTABLE 	R8 R8 K90 ; R8 := R8["LAVAN"]
	278	[5104]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	279	[5104]	CALL     	R5 3 1 ; R5(R6,R7)
	280	[5105]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	281	[5105]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	282	[5105]	NEWTABLE 	R7 0 3 ; R7 := {}
	283	[5105]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	284	[5105]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	285	[5105]	LOADK    	R10 K91 ; R10 := "/Lotus/Language/Menu/AP_ATTACK_RAILJACK"
	286	[5105]	OP_LOADBOOL	R11 0 0 ; R11 := false
	287	[5105]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	288	[5105]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	289	[5105]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	290	[5105]	GETUPVAL 	R9 U11 ; R9 := U11
	291	[5105]	GETTABLE 	R9 R9 K92 ; R9 := R9["VIDAR"]
	292	[5105]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	293	[5105]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	294	[5105]	GETUPVAL 	R8 U11 ; R8 := U11
	295	[5105]	GETTABLE 	R8 R8 K92 ; R8 := R8["VIDAR"]
	296	[5105]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	297	[5105]	CALL     	R5 3 1 ; R5(R6,R7)
	298	[5106]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	299	[5106]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	300	[5106]	NEWTABLE 	R7 0 3 ; R7 := {}
	301	[5106]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	302	[5106]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	303	[5106]	LOADK    	R10 K93 ; R10 := "/Lotus/Language/Menu/AP_DEFENSE_RAILJACK"
	304	[5106]	OP_LOADBOOL	R11 0 0 ; R11 := false
	305	[5106]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	306	[5106]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	307	[5106]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	308	[5106]	GETUPVAL 	R9 U11 ; R9 := U11
	309	[5106]	GETTABLE 	R9 R9 K94 ; R9 := R9["ZEKTI"]
	310	[5106]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	311	[5106]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	312	[5106]	GETUPVAL 	R8 U11 ; R8 := U11
	313	[5106]	GETTABLE 	R8 R8 K94 ; R8 := R8["ZEKTI"]
	314	[5106]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	315	[5106]	CALL     	R5 3 1 ; R5(R6,R7)
	316	[5107]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	317	[5107]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x06d36229]
	318	[5107]	NEWTABLE 	R7 0 3 ; R7 := {}
	319	[5107]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	320	[5107]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0x42b04007]
	321	[5107]	LOADK    	R10 K95 ; R10 := "/Lotus/Language/Menu/AP_UNIVERSAL_RAILJACK"
	322	[5107]	OP_LOADBOOL	R11 0 0 ; R11 := false
	323	[5107]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	324	[5107]	SETTABLE 	R7 K60 R8 ; R7["Name"] := R8
	325	[5107]	GETGLOBAL	R8 K83 ; R8 := 0xb6ad5326
	326	[5107]	GETUPVAL 	R9 U11 ; R9 := U11
	327	[5107]	GETTABLE 	R9 R9 K96 ; R9 := R9["SIGMA"]
	328	[5107]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	329	[5107]	SETTABLE 	R7 K77 R8 ; R7["Icon"] := R8
	330	[5107]	GETUPVAL 	R8 U11 ; R8 := U11
	331	[5107]	GETTABLE 	R8 R8 K96 ; R8 := R8["SIGMA"]
	332	[5107]	SETTABLE 	R7 K80 R8 ; R7["Category"] := R8
	333	[5107]	CALL     	R5 3 1 ; R5(R6,R7)
	334	[5108]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	335	[5108]	SELF     	R5 R5 K97 ; R6 := R5; R5 := R5[0xabe497fe]
	336	[5108]	LOADK    	R7 := 0.000000
	337	[5108]	CALL     	R5 3 1 ; R5(R6,R7)
	338	[5110]	GETGLOBAL	R5 K6 ; R5 := mInventoryGrid
	339	[5110]	SELF     	R5 R5 K98 ; R6 := R5; R5 := R5[0x71e9ac81]
	340	[5110]	CALL     	R5 2 1 ; R5(R6)
	341	[5112]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	342	[5112]	SELF     	R5 R5 K61 ; R6 := R5; R5 := R5[0x42b04007]
	343	[5112]	LOADK    	R7 K99 ; R7 := "/Lotus/Language/Menu/SearchPrompt"
	344	[5112]	OP_LOADBOOL	R8 0 0 ; R8 := false
	345	[5112]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	346	[5113]	GETGLOBAL	R6 K4 ; R6 := 0x2d0fad09
	347	[5113]	LOADK    	R7 K100 ; R7 := "Lotus.Interface.Components.ThemedInputField"
	348	[5113]	CALL     	R6 2 2 ; R6 := R6(R7)
	349	[5114]	GETTABLE 	R7 R6 K102 ; R7 := R6[0xae6791ba]
	350	[5114]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	351	[5114]	LOADK    	R9 K103 ; R9 := "TopLeftContainer.Inventory.SearchAndSort.SearchBox"
	352	[5114]	LOADNIL  	R10 R11 ; R10 := R11 := nil
	353	[5114]	LOADK    	R12 K104 ; R12 := "<MENU_LTHUMB>"
	354	[5114]	CALL     	R7 6 2 ; R7 := R7(R8,R9,R10,R11,R12)
	355	[5114]	SETGLOBALHASH	R7 K101 ; mSearchBox := R7
	356	[5115]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	357	[5115]	SELF     	R7 R7 K105 ; R8 := R7; R7 := R7[0xf87811f6]
	358	[5115]	GETGLOBAL	R9 K101 ; R9 := mSearchBox
	359	[5115]	GETTABLE 	R9 R9 K106 ; R9 := R9["TYPE"]
	360	[5115]	GETTABLE 	R9 R9 K107 ; R9 := R9["PLAIN"]
	361	[5115]	MOVE     	R10 R5 ; R10 := R5
	362	[5115]	MOVE     	R11 R5 ; R11 := R5
	363	[5115]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	364	[5116]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	365	[5116]	SETTABLE 	R7 K108 K109 ; R7["mMinSize"] := 239.000000
	366	[5117]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	367	[5117]	SETTABLE 	R7 K110 K109 ; R7["mMaxSize"] := 239.000000
	368	[5118]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	369	[5118]	SETTABLE 	R7 K111 K112 ; R7["mTextBuffer"] := 4.000000
	370	[5119]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	371	[5119]	GETGLOBAL	R8 K78 ; R8 := 0x0032441c
	372	[5119]	GETTABLE 	R8 R8 K114 ; R8 := R8["UITexture_Search"]
	373	[5119]	SETTABLE 	R7 K113 R8 ; R7["mAltButtonIcon"] := R8
	374	[5120]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	375	[5120]	SETTABLE 	R7 K115 K16 ; R7["mAltButtonVisible"] := true
	376	[5121]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	377	[5121]	SETTABLE 	R7 K116 K36 ; R7["mUnfocusedUnderlineColorOverride"] := nil
	378	[5122]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	379	[5122]	GETGLOBAL	R8 K101 ; R8 := mSearchBox
	380	[5122]	GETTABLE 	R8 R8 K118 ; R8 := R8["InputFieldTextChanged"]
	381	[5122]	SETTABLE 	R7 K117 R8 ; R7["BaseInputFieldTextChanged"] := R8
	382	[5123]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	383	[5137]	CLOSURE  	R8 9 ; R8 := closure(Function #10)
	384	[5137]	SETTABLE 	R7 K118 R8 ; R7["InputFieldTextChanged"] := R8
	385	[5138]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	386	[5138]	GETGLOBAL	R8 K101 ; R8 := mSearchBox
	387	[5138]	GETTABLE 	R8 R8 K120 ; R8 := R8["OnGamepadTransition"]
	388	[5138]	SETTABLE 	R7 K119 R8 ; R7["BaseOnGamepadTransition"] := R8
	389	[5139]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	390	[5145]	CLOSURE  	R8 10 ; R8 := closure(Function #11)
	391	[5145]	SETTABLE 	R7 K120 R8 ; R7["OnGamepadTransition"] := R8
	392	[5146]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	393	[5146]	SELF     	R7 R7 K121 ; R8 := R7; R7 := R7[0x6e6721d3]
	394	[5146]	LOADK    	R9 K99 ; R9 := "/Lotus/Language/Menu/SearchPrompt"
	395	[5146]	CALL     	R7 3 1 ; R7(R8,R9)
	396	[5147]	GETGLOBAL	R7 K101 ; R7 := mSearchBox
	397	[5147]	SELF     	R7 R7 K98 ; R8 := R7; R7 := R7[0x71e9ac81]
	398	[5147]	CALL     	R7 2 1 ; R7(R8)
	399	[5148]	RETURN   	R0 1 ; return 

function #145 <?:5150,5185> (85 instructions, 340 bytes at 0000021128935380)
0 params, 5 slots, 6 upvalues, 0 locals, 39 constants, 3 functions
	1	[5151]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5151]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x71a5b951]
	3	[5151]	GETUPVAL 	R1 U1 ; R1 := U1
	4	[5151]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	5	[5151]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x25a6e75e]
	6	[5151]	CALL     	R2 2 0 ; R2,... := R2(R3)
	7	[5151]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	8	[5152]	GETGLOBAL	R1 K3 ; R1 := 0x2d0fad09
	9	[5152]	LOADK    	R2 K4 ; R2 := "Lotus.Interface.Components.ThemedCustomizationList"
	10	[5152]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[5153]	GETTABLE 	R2 R1 K6 ; R2 := R1[0xae6791ba]
	12	[5153]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	13	[5153]	LOADK    	R4 K8 ; R4 := "TopLeftContainer.Cosmetics"
	14	[5153]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[5153]	SETGLOBALHASH	R2 K5 ; mCosmeticsList := R2
	16	[5154]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	17	[5154]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	18	[5154]	SETTABLE 	R2 K10 K11 ; R2["mNoneTextOverride"] := "/Lotus/Language/Menu/Cosmetics_None"
	19	[5155]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	20	[5158]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	21	[5158]	GETUPVAL 	R0 U2 ; R0 := U2
	22	[5158]	SETTABLE 	R2 K12 R3 ; R2["StateChangedCallBack"] := R3
	23	[5159]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	24	[5159]	GETGLOBAL	R3 K5 ; R3 := mCosmeticsList
	25	[5159]	GETTABLE 	R3 R3 K14 ; R3 := R3["ResetDefaults"]
	26	[5159]	SETTABLE 	R2 K13 R3 ; R2["_ResetDefaults"] := R3
	27	[5160]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	28	[5164]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	29	[5164]	GETUPVAL 	R0 U3 ; R0 := U3
	30	[5164]	SETTABLE 	R2 K14 R3 ; R2["ResetDefaults"] := R3
	31	[5165]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	32	[5165]	GETGLOBAL	R3 K5 ; R3 := mCosmeticsList
	33	[5165]	GETTABLE 	R3 R3 K16 ; R3 := R3["RandomizeAll"]
	34	[5165]	SETTABLE 	R2 K15 R3 ; R2["_RandomizeAll"] := R3
	35	[5166]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	36	[5170]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	37	[5170]	GETUPVAL 	R0 U3 ; R0 := U3
	38	[5170]	SETTABLE 	R2 K16 R3 ; R2["RandomizeAll"] := R3
	39	[5171]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	40	[5171]	SETTABLE 	R2 K17 K18 ; R2["mShowCosmeticButtons"] := true
	41	[5172]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	42	[5172]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	43	[5172]	SETTABLE 	R2 K19 K18 ; R2["mColorPickerSkipSuitRot"] := true
	44	[5173]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	45	[5173]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	46	[5173]	SETTABLE 	R2 K20 K18 ; R2["mTopTitleForNone"] := true
	47	[5174]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	48	[5174]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	49	[5174]	SETTABLE 	R2 K21 K22 ; R2["mCategorySpacing"] := 10.000000
	50	[5175]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	51	[5175]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	52	[5175]	SETTABLE 	R2 K23 K24 ; R2["mElementWidth"] := 350.000000
	53	[5176]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	54	[5176]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	55	[5176]	SETTABLE 	R2 K25 K26 ; R2["mForcedVerticalSeparation"] := 40.000000
	56	[5177]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	57	[5177]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	58	[5177]	GETUPVAL 	R3 U4 ; R3 := U4
	59	[5177]	SETTABLE 	R2 K27 R3 ; R2["mGoBackCallback"] := R3
	60	[5178]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	61	[5178]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	62	[5178]	GETUPVAL 	R3 U5 ; R3 := U5
	63	[5178]	SETTABLE 	R2 K28 R3 ; R2[0xb71355b8] := R3
	64	[5179]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	65	[5179]	GETTABLE 	R2 R2 K9 ; R2 := R2["CustomizationList"]
	66	[5179]	SETTABLE 	R2 K29 R0 ; R2["PurchasedItems"] := R0
	67	[5180]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	68	[5180]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	69	[5180]	SETTABLE 	R2 K29 R0 ; R2["PurchasedItems"] := R0
	70	[5181]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	71	[5181]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	72	[5181]	GETGLOBAL	R3 K32 ; R3 := 0x5b54ec72
	73	[5181]	SETTABLE 	R2 K31 R3 ; R2["RectangleVisibleRangeMaterial"] := R3
	74	[5182]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	75	[5182]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	76	[5182]	GETGLOBAL	R3 K34 ; R3 := 0x0f20c9bd
	77	[5182]	SETTABLE 	R2 K33 R3 ; R2["VisibleRangeMaterial"] := R3
	78	[5183]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	79	[5183]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	80	[5183]	GETGLOBAL	R3 K36 ; R3 := 0x09b6dacc
	81	[5183]	SETTABLE 	R2 K35 R3 ; R2["TextVisibleRangeMaterial"] := R3
	82	[5184]	GETGLOBAL	R2 K5 ; R2 := mCosmeticsList
	83	[5184]	GETTABLE 	R2 R2 K30 ; R2 := R2["ItemSelectionGrid"]
	84	[5184]	SETTABLE 	R2 K37 K38 ; R2["mExtraRowScroll"] := 0.600000
	85	[5185]	RETURN   	R0 1 ; return 

function #146 <?:5187,5196> (31 instructions, 124 bytes at 0000021119A7D430)
0 params, 4 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5188]	GETGLOBAL	R0 K1 ; R0 := 0x9ba7909f
	2	[5188]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[5188]	GETGLOBAL	R2 K3 ; R2 := 0x6e48c770
	4	[5188]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[5188]	SETGLOBALHASH	R0 K0 ; mVignetteMovie := R0
	6	[5189]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	7	[5189]	GETGLOBAL	R1 K0 ; R1 := mVignetteMovie
	8	[5189]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[5189]	TEST     	R0 0 ; if not R0 then PC := 16
	10	[5189]	JMP      	16 ; PC := 16
	11	[5190]	GETGLOBAL	R0 K1 ; R0 := 0x9ba7909f
	12	[5190]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xcfba257f]
	13	[5190]	GETGLOBAL	R2 K3 ; R2 := 0x6e48c770
	14	[5190]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	15	[5190]	SETGLOBALHASH	R0 K0 ; mVignetteMovie := R0
	16	[5192]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	17	[5192]	GETGLOBAL	R1 K0 ; R1 := mVignetteMovie
	18	[5192]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[5192]	TEST     	R0 1 ; if R0 then PC := 31
	20	[5192]	JMP      	31 ; PC := 31
	21	[5193]	GETGLOBAL	R0 K0 ; R0 := mVignetteMovie
	22	[5193]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xe4162eed]
	23	[5193]	LOADK    	R2 K7 ; R2 := "EnableColorCorrection"
	24	[5193]	LOADK    	R3 K8 ; R3 := "false"
	25	[5193]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	26	[5194]	GETGLOBAL	R0 K0 ; R0 := mVignetteMovie
	27	[5194]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xe4162eed]
	28	[5194]	LOADK    	R2 K9 ; R2 := "SetHideHud"
	29	[5194]	LOADK    	R3 K8 ; R3 := "false"
	30	[5194]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	31	[5196]	RETURN   	R0 1 ; return 

function #147 <?:5198,5394> (239 instructions, 956 bytes at 00000211287DE880)
0 params, 9 slots, 3 upvalues, 0 locals, 68 constants, 8 functions
	1	[5199]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[5199]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd5181643]
	3	[5199]	LOADK    	R2 K2 ; R2 := "BottomRightContainer.SalvagePanel.Bg"
	4	[5199]	GETGLOBAL	R3 K3 ; R3 := 0x0032441c
	5	[5199]	GETTABLE 	R3 R3 K4 ; R3 := R3["UIMaterial_RectangleNoDepth"]
	6	[5199]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	7	[5200]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	8	[5200]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x91e13703]
	9	[5200]	LOADK    	R2 K2 ; R2 := "BottomRightContainer.SalvagePanel.Bg"
	10	[5200]	LOADK    	R3 K6 ; R3 := "RectInnerColor"
	11	[5200]	GETGLOBAL	R4 K7 ; R4 := mColors
	12	[5200]	GETTABLE 	R4 R4 K8 ; R4 := R4["Background1Object"]
	13	[5200]	GETTABLE 	R4 R4 K9 ; R4 := R4["red"]
	14	[5200]	DIV      	R4 R4 K10 ; R4 := R4 / 255.000000
	15	[5200]	GETGLOBAL	R5 K7 ; R5 := mColors
	16	[5200]	GETTABLE 	R5 R5 K8 ; R5 := R5["Background1Object"]
	17	[5200]	GETTABLE 	R5 R5 K11 ; R5 := R5["green"]
	18	[5200]	DIV      	R5 R5 K10 ; R5 := R5 / 255.000000
	19	[5200]	GETGLOBAL	R6 K7 ; R6 := mColors
	20	[5200]	GETTABLE 	R6 R6 K8 ; R6 := R6["Background1Object"]
	21	[5200]	GETTABLE 	R6 R6 K12 ; R6 := R6["blue"]
	22	[5200]	DIV      	R6 R6 K10 ; R6 := R6 / 255.000000
	23	[5200]	LOADK    	R7 K13 ; R7 := 0.800000
	24	[5200]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	25	[5201]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	26	[5201]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x91e13703]
	27	[5201]	LOADK    	R2 K2 ; R2 := "BottomRightContainer.SalvagePanel.Bg"
	28	[5201]	LOADK    	R3 K14 ; R3 := "RectEdgeColor"
	29	[5201]	GETGLOBAL	R4 K7 ; R4 := mColors
	30	[5201]	GETTABLE 	R4 R4 K15 ; R4 := R4["FloatingContentObject"]
	31	[5201]	GETTABLE 	R4 R4 K9 ; R4 := R4["red"]
	32	[5201]	DIV      	R4 R4 K10 ; R4 := R4 / 255.000000
	33	[5201]	GETGLOBAL	R5 K7 ; R5 := mColors
	34	[5201]	GETTABLE 	R5 R5 K15 ; R5 := R5["FloatingContentObject"]
	35	[5201]	GETTABLE 	R5 R5 K11 ; R5 := R5["green"]
	36	[5201]	DIV      	R5 R5 K10 ; R5 := R5 / 255.000000
	37	[5201]	GETGLOBAL	R6 K7 ; R6 := mColors
	38	[5201]	GETTABLE 	R6 R6 K15 ; R6 := R6["FloatingContentObject"]
	39	[5201]	GETTABLE 	R6 R6 K12 ; R6 := R6["blue"]
	40	[5201]	DIV      	R6 R6 K10 ; R6 := R6 / 255.000000
	41	[5201]	LOADK    	R7 K16 ; R7 := 0.700000
	42	[5201]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	43	[5203]	GETGLOBAL	R0 K17 ; R0 := 0x2d0fad09
	44	[5203]	LOADK    	R1 K18 ; R1 := "Lotus.Interface.Components.ThemedButton"
	45	[5203]	CALL     	R0 2 2 ; R0 := R0(R1)
	46	[5204]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	47	[5204]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	48	[5204]	LOADK    	R3 K21 ; R3 := "BottomRightContainer.SalvagePanel.ScrapBtn"
	49	[5204]	LOADK    	R4 K22 ; R4 := "<FUSION_POINTS_LARGE>"
	50	[5204]	LOADK    	R5 K23 ; R5 := "SellSelectedItem"
	51	[5204]	LOADNIL  	R6 R6 ; R6 := nil
	52	[5204]	OP_LOADBOOL	R7 0 0 ; R7 := false
	53	[5204]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	54	[5204]	SETGLOBALHASH	R1 K19 ; mScrapBtn := R1
	55	[5205]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	56	[5205]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	57	[5206]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	58	[5206]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	59	[5207]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	60	[5207]	SETTABLE 	R1 K28 K29 ; R1["mLabelYOffset"] := -2.000000
	61	[5208]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	62	[5208]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	63	[5208]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	64	[5208]	GETGLOBAL	R4 K19 ; R4 := mScrapBtn
	65	[5208]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	66	[5208]	LOADK    	R5 := 0.000000
	67	[5208]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	68	[5208]	SETTABLE 	R1 K30 R2 ; R1["mInitialX"] := R2
	69	[5209]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	70	[5209]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	71	[5209]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	72	[5209]	GETGLOBAL	R4 K19 ; R4 := mScrapBtn
	73	[5209]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	74	[5209]	LOADK    	R5 := 1.000000
	75	[5209]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	76	[5209]	SETTABLE 	R1 K33 R2 ; R1["mInitialY"] := R2
	77	[5210]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	78	[5210]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	79	[5210]	LOADK    	R3 := 60.000000
	80	[5210]	CALL     	R1 3 1 ; R1(R2,R3)
	81	[5211]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	82	[5249]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	83	[5249]	GETUPVAL 	R0 U0 ; R0 := U0
	84	[5249]	GETUPVAL 	R0 U1 ; R0 := U1
	85	[5249]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	86	[5250]	GETGLOBAL	R1 K19 ; R1 := mScrapBtn
	87	[5253]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	88	[5253]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	89	[5255]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	90	[5255]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	91	[5255]	LOADK    	R3 K38 ; R3 := "BottomRightContainer.SalvagePanel.TransferBtn"
	92	[5255]	LOADK    	R4 K39 ; R4 := "<TRANSFER>"
	93	[5255]	LOADK    	R5 K40 ; R5 := "StartFuse"
	94	[5255]	LOADNIL  	R6 R6 ; R6 := nil
	95	[5255]	OP_LOADBOOL	R7 0 0 ; R7 := false
	96	[5255]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	97	[5255]	SETGLOBALHASH	R1 K37 ; mTransferBtn := R1
	98	[5256]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	99	[5256]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	100	[5257]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	101	[5257]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	102	[5258]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	103	[5258]	SETTABLE 	R1 K28 K29 ; R1["mLabelYOffset"] := -2.000000
	104	[5259]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	105	[5259]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	106	[5259]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	107	[5259]	GETGLOBAL	R4 K37 ; R4 := mTransferBtn
	108	[5259]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	109	[5259]	LOADK    	R5 := 0.000000
	110	[5259]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	111	[5259]	SETTABLE 	R1 K30 R2 ; R1["mInitialX"] := R2
	112	[5260]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	113	[5260]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	114	[5260]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x91a24e4b]
	115	[5260]	GETGLOBAL	R4 K37 ; R4 := mTransferBtn
	116	[5260]	GETTABLE 	R4 R4 K32 ; R4 := R4["mClipName"]
	117	[5260]	LOADK    	R5 := 1.000000
	118	[5260]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	119	[5260]	SETTABLE 	R1 K33 R2 ; R1["mInitialY"] := R2
	120	[5261]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	121	[5261]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	122	[5261]	LOADK    	R3 := 60.000000
	123	[5261]	CALL     	R1 3 1 ; R1(R2,R3)
	124	[5262]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	125	[5291]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	126	[5291]	GETUPVAL 	R0 U1 ; R0 := U1
	127	[5291]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	128	[5292]	GETGLOBAL	R1 K37 ; R1 := mTransferBtn
	129	[5295]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	130	[5295]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	131	[5297]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	132	[5297]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	133	[5297]	LOADK    	R3 K42 ; R3 := "BottomRightContainer.SalvagePanel.RepairDroneBtn"
	134	[5297]	LOADK    	R4 K43 ; R4 := "<REPAIR_DRONE>"
	135	[5297]	LOADK    	R5 K44 ; R5 := "ShowInstantRepairConfirm"
	136	[5297]	LOADNIL  	R6 R6 ; R6 := nil
	137	[5297]	OP_LOADBOOL	R7 0 0 ; R7 := false
	138	[5297]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	139	[5297]	SETGLOBALHASH	R1 K41 ; mRushDroneBtn := R1
	140	[5298]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	141	[5298]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	142	[5299]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	143	[5299]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	144	[5300]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	145	[5300]	SETTABLE 	R1 K28 K29 ; R1["mLabelYOffset"] := -2.000000
	146	[5301]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	147	[5301]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	148	[5301]	LOADK    	R3 := 60.000000
	149	[5301]	CALL     	R1 3 1 ; R1(R2,R3)
	150	[5302]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	151	[5335]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	152	[5335]	GETUPVAL 	R0 U1 ; R0 := U1
	153	[5335]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	154	[5336]	GETGLOBAL	R1 K41 ; R1 := mRushDroneBtn
	155	[5339]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	156	[5339]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	157	[5341]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	158	[5341]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	159	[5341]	LOADK    	R3 K46 ; R3 := "BottomRightContainer.SalvagePanel.CancelRepairBtn"
	160	[5341]	LOADK    	R4 K47 ; R4 := "<CANCEL_REPAIR>"
	161	[5341]	LOADK    	R5 K48 ; R5 := "ShowCancelRepairsConfirm"
	162	[5341]	LOADNIL  	R6 R6 ; R6 := nil
	163	[5341]	OP_LOADBOOL	R7 0 0 ; R7 := false
	164	[5341]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	165	[5341]	SETGLOBALHASH	R1 K45 ; mCancelRepairBtn := R1
	166	[5342]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	167	[5342]	SETTABLE 	R1 K24 K25 ; R1["mHeight"] := 60.000000
	168	[5343]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	169	[5343]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	170	[5344]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	171	[5344]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	172	[5344]	LOADK    	R3 := 60.000000
	173	[5344]	CALL     	R1 3 1 ; R1(R2,R3)
	174	[5345]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	175	[5371]	CLOSURE  	R2 6 ; R2 := closure(Function #7)
	176	[5371]	GETUPVAL 	R0 U1 ; R0 := U1
	177	[5371]	SETTABLE 	R1 K35 R2 ; R1["mOnFocusedCallback"] := R2
	178	[5372]	GETGLOBAL	R1 K45 ; R1 := mCancelRepairBtn
	179	[5375]	CLOSURE  	R2 7 ; R2 := closure(Function #8)
	180	[5375]	SETTABLE 	R1 K36 R2 ; R1["mOnUnfocusedCallback"] := R2
	181	[5377]	GETTABLE 	R1 R0 K20 ; R1 := R0[0xae6791ba]
	182	[5377]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	183	[5377]	LOADK    	R3 K50 ; R3 := "BottomRightContainer.SalvagePanel.SalvageSpecialBtn"
	184	[5377]	LOADK    	R4 K51 ; R4 := "/Lotus/Language/Menu/ItemSelection_Repair"
	185	[5377]	LOADK    	R5 K52 ; R5 := "RepairDronePressed"
	186	[5377]	LOADNIL  	R6 R6 ; R6 := nil
	187	[5377]	CALL     	R1 6 2 ; R1 := R1(R2,R3,R4,R5,R6)
	188	[5377]	SETGLOBALHASH	R1 K49 ; mSalvageSpecialBtn := R1
	189	[5378]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	190	[5378]	SELF     	R1 R1 K53 ; R2 := R1; R1 := R1[0x4e86c602]
	191	[5378]	OP_LOADBOOL	R3 1 0 ; R3 := true
	192	[5378]	CALL     	R1 3 1 ; R1(R2,R3)
	193	[5379]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	194	[5379]	SETTABLE 	R1 K26 K27 ; R1["mInnerAlpha"] := 80.000000
	195	[5380]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	196	[5380]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x8d77b2b2]
	197	[5380]	LOADK    	R3 := 160.000000
	198	[5380]	CALL     	R1 3 1 ; R1(R2,R3)
	199	[5381]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	200	[5381]	SELF     	R1 R1 K54 ; R2 := R1; R1 := R1[0x368ad758]
	201	[5381]	OP_LOADBOOL	R3 1 0 ; R3 := true
	202	[5381]	CALL     	R1 3 1 ; R1(R2,R3)
	203	[5382]	GETGLOBAL	R1 K49 ; R1 := mSalvageSpecialBtn
	204	[5382]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x71e9ac81]
	205	[5382]	CALL     	R1 2 1 ; R1(R2)
	206	[5384]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	207	[5384]	SELF     	R1 R1 K56 ; R2 := R1; R1 := R1[0xf64b7262]
	208	[5384]	LOADK    	R3 K57 ; R3 := "BottomRightContainer.SalvagePanel"
	209	[5384]	LOADK    	R4 K58 ; R4 := "Name"
	210	[5384]	LOADK    	R5 := 36.000000
	211	[5384]	GETGLOBAL	R6 K7 ; R6 := mColors
	212	[5384]	GETTABLE 	R6 R6 K59 ; R6 := R6["FloatingContent"]
	213	[5384]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	214	[5386]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	215	[5386]	SELF     	R1 R1 K56 ; R2 := R1; R1 := R1[0xf64b7262]
	216	[5386]	LOADK    	R3 K57 ; R3 := "BottomRightContainer.SalvagePanel"
	217	[5386]	LOADK    	R4 K60 ; R4 := "Status"
	218	[5386]	LOADK    	R5 := 36.000000
	219	[5386]	GETGLOBAL	R6 K7 ; R6 := mColors
	220	[5386]	GETTABLE 	R6 R6 K61 ; R6 := R6["Content"]
	221	[5386]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	222	[5388]	GETUPVAL 	R1 U2 ; R1 := U2
	223	[5388]	LOADK    	R2 K57 ; R2 := "BottomRightContainer.SalvagePanel"
	224	[5388]	CALL     	R1 2 1 ; R1(R2)
	225	[5390]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	226	[5390]	SELF     	R1 R1 K62 ; R2 := R1; R1 := R1[0x1cb415c1]
	227	[5390]	LOADK    	R3 K63 ; R3 := "BottomRightContainer.SalvagePanel.SalvageProgress.Icon"
	228	[5390]	GETGLOBAL	R4 K64 ; R4 := 0x1df5e886
	229	[5390]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	230	[5392]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	231	[5392]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x91e13703]
	232	[5392]	LOADK    	R3 K65 ; R3 := "BottomRightContainer.SalvagePanel.SalvageProgress.Fill"
	233	[5392]	LOADK    	R4 K66 ; R4 := "AlphaTestThreshold"
	234	[5392]	LOADK    	R5 K67 ; R5 := 0.330000
	235	[5392]	LOADK    	R6 := 0.000000
	236	[5392]	LOADK    	R7 := 0.000000
	237	[5392]	LOADK    	R8 := 0.000000
	238	[5392]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	239	[5394]	RETURN   	R0 1 ; return 

function #148 <?:5396,5495> (340 instructions, 1360 bytes at 000002112D8AA5C0)
0 params, 20 slots, 6 upvalues, 0 locals, 78 constants, 0 functions
	1	[5397]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[5398]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[5399]	LOADK    	R2 K0 ; R2 := ""
	4	[5400]	LOADK    	R3 K0 ; R3 := ""
	5	[5401]	LOADK    	R4 := 160.000000
	6	[5402]	LOADK    	R5 := 0.000000
	7	[5403]	LOADK    	R6 := 0.000000
	8	[5404]	GETGLOBAL	R7 K1 ; R7 := mInventoryGrid
	9	[5404]	GETTABLE 	R7 R7 K2 ; R7 := R7["mSelectedElement"]
	10	[5405]	LOADK    	R8 K0 ; R8 := ""
	11	[5406]	GETGLOBAL	R9 K3 ; R9 := mActiveState
	12	[5406]	GETUPVAL 	R10 U0 ; R10 := U0
	13	[5406]	GETTABLE 	R10 R10 K4 ; R10 := R10["WEAPON_INV"]
	14	[5406]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 21
	15	[5406]	JMP      	21 ; PC := 21
	16	[5406]	GETGLOBAL	R9 K3 ; R9 := mActiveState
	17	[5406]	GETUPVAL 	R10 U0 ; R10 := U0
	18	[5406]	GETTABLE 	R10 R10 K5 ; R10 := R10["EQUIP_INV"]
	19	[5406]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 182
	20	[5406]	JMP      	182 ; PC := 182
	21	[5407]	GETGLOBAL	R9 K6 ; R9 := 0x7b998233
	22	[5407]	MOVE     	R10 R7 ; R10 := R7
	23	[5407]	CALL     	R9 2 2 ; R9 := R9(R10)
	24	[5407]	TEST     	R9 1 ; if R9 then PC := 182
	25	[5407]	JMP      	182 ; PC := 182
	26	[5408]	OP_LOADBOOL	R0 1 0 ; R0 := true
	27	[5409]	GETTABLE 	R9 R7 K7 ; R9 := R7["SalvageState"]
	28	[5409]	GETUPVAL 	R10 U1 ; R10 := U1
	29	[5409]	GETTABLE 	R10 R10 K8 ; R10 := R10["AWAITING_FUNDS"]
	30	[5409]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 35
	31	[5409]	JMP      	35 ; PC := 35
	32	[5409]	GETTABLE 	R9 R7 K9 ; R9 := R7["CanSell"]
	33	[5409]	TEST     	R9 0 ; if not R9 then PC := 41
	34	[5409]	JMP      	41 ; PC := 41
	35	[5409]	GETTABLE 	R9 R7 K7 ; R9 := R7["SalvageState"]
	36	[5409]	GETUPVAL 	R10 U1 ; R10 := U1
	37	[5409]	GETTABLE 	R10 R10 K10 ; R10 := R10["AWAITING_COMPLETION"]
	38	[5409]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 41
	39	[5409]	JMP      	41 ; PC := 41
	40	[5409]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 41
	41	[5409]	OP_LOADBOOL	R9 1 0 ; R9 := true
	42	[5410]	GETTABLE 	R10 R7 K7 ; R10 := R7["SalvageState"]
	43	[5410]	GETUPVAL 	R11 U1 ; R11 := U1
	44	[5410]	GETTABLE 	R11 R11 K11 ; R11 := R11["IDENTIFIED"]
	45	[5410]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 52
	46	[5410]	JMP      	52 ; PC := 52
	47	[5410]	GETTABLE 	R10 R7 K7 ; R10 := R7["SalvageState"]
	48	[5410]	GETUPVAL 	R11 U1 ; R11 := U1
	49	[5410]	GETTABLE 	R11 R11 K8 ; R11 := R11["AWAITING_FUNDS"]
	50	[5410]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 68
	51	[5410]	JMP      	68 ; PC := 68
	52	[5411]	GETGLOBAL	R10 K12 ; R10 := 0xae91e43b
	53	[5411]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0x42b04007]
	54	[5411]	LOADK    	R12 K14 ; R12 := "/Lotus/Language/Railjack/Wreckage_Funding"
	55	[5411]	OP_LOADBOOL	R13 1 0 ; R13 := true
	56	[5411]	NEWTABLE 	R14 0 1 ; R14 := {}
	57	[5411]	GETGLOBAL	R15 K16 ; R15 := 0x5bced4c4
	58	[5411]	GETTABLE 	R15 R15 K17 ; R15 := R15[0x55f27c30]
	59	[5411]	GETTABLE 	R16 R7 K18 ; R16 := R7["SalvageProgress"]
	60	[5411]	MUL      	R16 R16 K19 ; R16 := R16 * 100.000000
	61	[5411]	CALL     	R15 2 2 ; R15 := R15(R16)
	62	[5411]	SETTABLE 	R14 K15 R15 ; R14["PERCENT"] := R15
	63	[5411]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	64	[5411]	MOVE     	R8 R10 ; R8 := R10
	65	[5412]	LOADK    	R2 K20 ; R2 := "/Lotus/Language/Menu/ItemSelection_Repair"
	66	[5413]	LOADK    	R3 K21 ; R3 := "RepairSelectedItem"
	67	[5413]	JMP      	141 ; PC := 141
	68	[5414]	GETTABLE 	R10 R7 K7 ; R10 := R7["SalvageState"]
	69	[5414]	GETUPVAL 	R11 U1 ; R11 := U1
	70	[5414]	GETTABLE 	R11 R11 K10 ; R11 := R11["AWAITING_COMPLETION"]
	71	[5414]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 96
	72	[5414]	JMP      	96 ; PC := 96
	73	[5415]	GETGLOBAL	R10 K22 ; R10 := 0x34291f5c
	74	[5415]	GETTABLE 	R10 R10 K23 ; R10 := R10[0x397b920f]
	75	[5415]	GETTABLE 	R11 R7 K24 ; R11 := R7["SalvageTimeRemaining"]
	76	[5415]	CALL     	R10 2 2 ; R10 := R10(R11)
	77	[5417]	GETGLOBAL	R11 K12 ; R11 := 0xae91e43b
	78	[5417]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x42b04007]
	79	[5417]	LOADK    	R13 K25 ; R13 := "/Lotus/Language/Railjack/Wreckage_Repairing"
	80	[5417]	OP_LOADBOOL	R14 1 0 ; R14 := true
	81	[5417]	NEWTABLE 	R15 0 1 ; R15 := {}
	82	[5417]	GETUPVAL 	R16 U2 ; R16 := U2
	83	[5417]	GETTABLE 	R16 R16 K27 ; R16 := R16[0xcfe63447]
	84	[5417]	GETGLOBAL	R17 K16 ; R17 := 0x5bced4c4
	85	[5417]	GETTABLE 	R17 R17 K28 ; R17 := R17[0xb62ecfe0]
	86	[5417]	LOADK    	R18 := 0.000000
	87	[5417]	MOVE     	R19 R10 ; R19 := R10
	88	[5417]	CALL     	R17 3 0 ; R17,... := R17(R18,R19)
	89	[5417]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	90	[5417]	SETTABLE 	R15 K26 R16 ; R15["TIME"] := R16
	91	[5417]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	92	[5417]	MOVE     	R8 R11 ; R8 := R11
	93	[5418]	LOADK    	R2 K29 ; R2 := "/Lotus/Language/Menu/ItemSelection_Rush"
	94	[5419]	LOADK    	R3 K30 ; R3 := "RushSelectedItem"
	95	[5419]	JMP      	141 ; PC := 141
	96	[5420]	GETTABLE 	R11 R7 K7 ; R11 := R7["SalvageState"]
	97	[5420]	GETUPVAL 	R12 U1 ; R12 := U1
	98	[5420]	GETTABLE 	R12 R12 K31 ; R12 := R12["COMPLETED"]
	99	[5420]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 110
	100	[5420]	JMP      	110 ; PC := 110
	101	[5421]	GETGLOBAL	R11 K12 ; R11 := 0xae91e43b
	102	[5421]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x42b04007]
	103	[5421]	LOADK    	R13 K32 ; R13 := "/Lotus/Language/Railjack/Wreckage_RepairsCompleted"
	104	[5421]	OP_LOADBOOL	R14 1 0 ; R14 := true
	105	[5421]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	106	[5421]	MOVE     	R8 R11 ; R8 := R11
	107	[5422]	LOADK    	R2 K33 ; R2 := "/Lotus/Language/Menu/ItemSelection_Claim"
	108	[5423]	LOADK    	R3 K34 ; R3 := "ClaimSelectedItem"
	109	[5423]	JMP      	141 ; PC := 141
	110	[5424]	GETTABLE 	R11 R7 K7 ; R11 := R7["SalvageState"]
	111	[5424]	GETUPVAL 	R12 U1 ; R12 := U1
	112	[5424]	GETTABLE 	R12 R12 K35 ; R12 := R12["UNIDENTIFIED"]
	113	[5424]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 140
	114	[5424]	JMP      	140 ; PC := 140
	115	[5425]	GETGLOBAL	R11 K12 ; R11 := 0xae91e43b
	116	[5425]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x42b04007]
	117	[5425]	LOADK    	R13 K36 ; R13 := "/Lotus/Language/Railjack/UnidentifiedRawSalvage"
	118	[5425]	OP_LOADBOOL	R14 1 0 ; R14 := true
	119	[5425]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	120	[5425]	MOVE     	R8 R11 ; R8 := R11
	121	[5426]	ADD      	R5 R5 K37 ; R5 := R5 + 70.000000
	122	[5428]	GETGLOBAL	R11 K38 ; R11 := 0x25d99d89
	123	[5428]	SELF     	R11 R11 K39 ; R12 := R11; R11 := R11[0x25a6e75e]
	124	[5428]	CALL     	R11 2 2 ; R11 := R11(R12)
	125	[5429]	SELF     	R12 R11 K40 ; R13 := R11; R12 := R11[0x64e44bdc]
	126	[5429]	CALL     	R12 2 2 ; R12 := R12(R13)
	127	[5429]	LEN      	R12 R12 ; R12 := # R12
	128	[5429]	SELF     	R13 R11 K41 ; R14 := R11; R13 := R11[0xe600a7f3]
	129	[5429]	CALL     	R13 2 2 ; R13 := R13(R14)
	130	[5429]	LEN      	R13 R13 ; R13 := # R13
	131	[5429]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	132	[5431]	GETUPVAL 	R13 U3 ; R13 := U3
	133	[5431]	LE       	0 R13 R12 ; if R13 > R12 then PC := 137
	134	[5431]	JMP      	137 ; PC := 137
	135	[5432]	LOADK    	R2 K42 ; R2 := "/Lotus/Language/Railjack/WreckageLimitReached"
	136	[5432]	JMP      	141 ; PC := 141
	137	[5434]	LOADK    	R2 K43 ; R2 := "/Lotus/Language/Railjack/IdentifyRawSalvage"
	138	[5435]	LOADK    	R3 K44 ; R3 := "IdentifySelectedItem"
	139	[5436]	JMP      	141 ; PC := 141
	140	[5438]	OP_LOADBOOL	R1 1 0 ; R1 := true
	141	[5441]	GETGLOBAL	R13 K45 ; R13 := mScrapBtn
	142	[5441]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0x368ad758]
	143	[5441]	GETTABLE 	R15 R7 K9 ; R15 := R7["CanSell"]
	144	[5441]	CALL     	R13 3 1 ; R13(R14,R15)
	145	[5442]	GETTABLE 	R13 R7 K9 ; R13 := R7["CanSell"]
	146	[5442]	TEST     	R13 1 ; if R13 then PC := 149
	147	[5442]	JMP      	149 ; PC := 149
	148	[5443]	ADD      	R4 R4 K47 ; R4 := R4 + 60.000000
	149	[5446]	GETTABLE 	R13 R7 K9 ; R13 := R7["CanSell"]
	150	[5446]	TEST     	R13 0 ; if not R13 then PC := 164
	151	[5446]	JMP      	164 ; PC := 164
	152	[5446]	GETTABLE 	R13 R7 K7 ; R13 := R7["SalvageState"]
	153	[5446]	GETUPVAL 	R14 U1 ; R14 := U1
	154	[5446]	GETTABLE 	R14 R14 K11 ; R14 := R14["IDENTIFIED"]
	155	[5446]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 163
	156	[5446]	JMP      	163 ; PC := 163
	157	[5446]	GETTABLE 	R13 R7 K7 ; R13 := R7["SalvageState"]
	158	[5446]	GETUPVAL 	R14 U1 ; R14 := U1
	159	[5446]	GETTABLE 	R14 R14 K8 ; R14 := R14["AWAITING_FUNDS"]
	160	[5446]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 163
	161	[5446]	JMP      	163 ; PC := 163
	162	[5446]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 163
	163	[5446]	OP_LOADBOOL	R13 1 0 ; R13 := true
	164	[5447]	GETGLOBAL	R14 K48 ; R14 := mRushDroneBtn
	165	[5447]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	166	[5447]	MOVE     	R16 R13 ; R16 := R13
	167	[5447]	CALL     	R14 3 1 ; R14(R15,R16)
	168	[5448]	TEST     	R13 1 ; if R13 then PC := 171
	169	[5448]	JMP      	171 ; PC := 171
	170	[5449]	ADD      	R4 R4 K37 ; R4 := R4 + 70.000000
	171	[5452]	GETGLOBAL	R14 K49 ; R14 := mCancelRepairBtn
	172	[5452]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	173	[5452]	MOVE     	R16 R9 ; R16 := R9
	174	[5452]	CALL     	R14 3 1 ; R14(R15,R16)
	175	[5453]	TEST     	R9 0 ; if not R9 then PC := 178
	176	[5453]	JMP      	178 ; PC := 178
	177	[5454]	SUB      	R4 R4 K47 ; R4 := R4 - 60.000000
	178	[5457]	GETGLOBAL	R14 K50 ; R14 := mTransferBtn
	179	[5457]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	180	[5457]	MOVE     	R16 R1 ; R16 := R1
	181	[5457]	CALL     	R14 3 1 ; R14(R15,R16)
	182	[5461]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	183	[5461]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0xaade900e]
	184	[5461]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	185	[5461]	LOADK    	R17 := 59.000000
	186	[5461]	MOVE     	R18 R0 ; R18 := R0
	187	[5461]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	188	[5462]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	189	[5462]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0xaade900e]
	190	[5462]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	191	[5462]	LOADK    	R17 := 11.000000
	192	[5462]	MOVE     	R18 R0 ; R18 := R0
	193	[5462]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	194	[5463]	TEST     	R0 0 ; if not R0 then PC := 340
	195	[5463]	JMP      	340 ; PC := 340
	196	[5464]	TEST     	R1 1 ; if R1 then PC := 232
	197	[5464]	JMP      	232 ; PC := 232
	198	[5465]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	199	[5465]	SELF     	R14 R14 K54 ; R15 := R14; R14 := R14[0x8d77b2b2]
	200	[5465]	MOVE     	R16 R4 ; R16 := R4
	201	[5465]	CALL     	R14 3 1 ; R14(R15,R16)
	202	[5466]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	203	[5466]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x9b71e815]
	204	[5466]	MOVE     	R16 R2 ; R16 := R2
	205	[5466]	CALL     	R14 3 1 ; R14(R15,R16)
	206	[5467]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	207	[5467]	SELF     	R14 R14 K56 ; R15 := R14; R14 := R14[0x51cf38e7]
	208	[5467]	MOVE     	R16 R3 ; R16 := R3
	209	[5467]	CALL     	R14 3 1 ; R14(R15,R16)
	210	[5468]	GETUPVAL 	R14 U4 ; R14 := U4
	211	[5468]	LOADK    	R15 K52 ; R15 := "BottomRightContainer.SalvagePanel"
	212	[5468]	MOVE     	R16 R7 ; R16 := R7
	213	[5468]	CALL     	R14 3 1 ; R14(R15,R16)
	214	[5470]	GETUPVAL 	R14 U5 ; R14 := U5
	215	[5470]	GETTABLE 	R14 R14 K57 ; R14 := R14[0xc340ce91]
	216	[5470]	GETGLOBAL	R15 K12 ; R15 := 0xae91e43b
	217	[5470]	LOADK    	R16 K58 ; R16 := "BottomRightContainer.SalvagePanel.Name"
	218	[5470]	GETTABLE 	R17 R7 K59 ; R17 := R7["Name"]
	219	[5470]	LOADK    	R18 K60 ; R18 := "..."
	220	[5470]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	221	[5471]	GETUPVAL 	R14 U5 ; R14 := U5
	222	[5471]	GETTABLE 	R14 R14 K57 ; R14 := R14[0xc340ce91]
	223	[5471]	GETGLOBAL	R15 K12 ; R15 := 0xae91e43b
	224	[5471]	LOADK    	R16 K61 ; R16 := "BottomRightContainer.SalvagePanel.Status"
	225	[5471]	GETGLOBAL	R17 K62 ; R17 := 0x7f5022cf
	226	[5471]	GETTABLE 	R17 R17 K63 ; R17 := R17[0x3f3e4d12]
	227	[5471]	MOVE     	R18 R8 ; R18 := R8
	228	[5471]	CALL     	R17 2 2 ; R17 := R17(R18)
	229	[5471]	LOADK    	R18 K60 ; R18 := "..."
	230	[5471]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	231	[5471]	JMP      	234 ; PC := 234
	232	[5473]	ADD      	R5 R5 K64 ; R5 := R5 + 85.000000
	233	[5474]	ADD      	R6 R6 K65 ; R6 := R6 + 15.000000
	234	[5477]	GETGLOBAL	R14 K45 ; R14 := mScrapBtn
	235	[5477]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x9b71e815]
	236	[5477]	GETUPVAL 	R16 U5 ; R16 := U5
	237	[5477]	GETTABLE 	R16 R16 K66 ; R16 := R16[0x06d055f9]
	238	[5477]	MOVE     	R17 R1 ; R17 := R1
	239	[5477]	LOADK    	R18 K67 ; R18 := "<RECYCLE>"
	240	[5477]	LOADK    	R19 K68 ; R19 := "<FUSION_POINTS_LARGE>"
	241	[5477]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	242	[5477]	CALL     	R14 0 1 ; R14(R15,...)
	243	[5478]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	244	[5478]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	245	[5478]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	246	[5478]	LOADK    	R17 K70 ; R17 := "ScrapBtn"
	247	[5478]	LOADK    	R18 := 0.000000
	248	[5478]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	249	[5478]	GETTABLE 	R19 R19 K71 ; R19 := R19["mInitialX"]
	250	[5478]	ADD      	R19 R19 R5 ; R19 := R19 + R5
	251	[5478]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	252	[5479]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	253	[5479]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	254	[5479]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	255	[5479]	LOADK    	R17 K70 ; R17 := "ScrapBtn"
	256	[5479]	LOADK    	R18 := 1.000000
	257	[5479]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	258	[5479]	GETTABLE 	R19 R19 K72 ; R19 := R19["mInitialY"]
	259	[5479]	ADD      	R19 R19 R6 ; R19 := R19 + R6
	260	[5479]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	261	[5480]	GETTABLE 	R14 R7 K9 ; R14 := R7["CanSell"]
	262	[5480]	TEST     	R14 0 ; if not R14 then PC := 283
	263	[5480]	JMP      	283 ; PC := 283
	264	[5481]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	265	[5481]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	266	[5481]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	267	[5481]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	268	[5481]	LOADK    	R18 := 0.000000
	269	[5481]	GETGLOBAL	R19 K50 ; R19 := mTransferBtn
	270	[5481]	GETTABLE 	R19 R19 K71 ; R19 := R19["mInitialX"]
	271	[5481]	ADD      	R19 R19 R5 ; R19 := R19 + R5
	272	[5481]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	273	[5482]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	274	[5482]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	275	[5482]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	276	[5482]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	277	[5482]	LOADK    	R18 := 1.000000
	278	[5482]	GETGLOBAL	R19 K50 ; R19 := mTransferBtn
	279	[5482]	GETTABLE 	R19 R19 K72 ; R19 := R19["mInitialY"]
	280	[5482]	ADD      	R19 R19 R6 ; R19 := R19 + R6
	281	[5482]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	282	[5482]	JMP      	301 ; PC := 301
	283	[5484]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	284	[5484]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	285	[5484]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	286	[5484]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	287	[5484]	LOADK    	R18 := 0.000000
	288	[5484]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	289	[5484]	GETTABLE 	R19 R19 K71 ; R19 := R19["mInitialX"]
	290	[5484]	ADD      	R19 R19 R5 ; R19 := R19 + R5
	291	[5484]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	292	[5485]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	293	[5485]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xf64b7262]
	294	[5485]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	295	[5485]	LOADK    	R17 K73 ; R17 := "TransferBtn"
	296	[5485]	LOADK    	R18 := 1.000000
	297	[5485]	GETGLOBAL	R19 K45 ; R19 := mScrapBtn
	298	[5485]	GETTABLE 	R19 R19 K72 ; R19 := R19["mInitialY"]
	299	[5485]	ADD      	R19 R19 R6 ; R19 := R19 + R6
	300	[5485]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	301	[5488]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	302	[5488]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	303	[5488]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	304	[5488]	LOADK    	R17 K75 ; R17 := "Bg"
	305	[5488]	LOADK    	R18 := 11.000000
	306	[5488]	NOT      	R19 R1 ; R19 := not R1
	307	[5488]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	308	[5489]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	309	[5489]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	310	[5489]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	311	[5489]	LOADK    	R17 K76 ; R17 := "Blurer"
	312	[5489]	LOADK    	R18 := 11.000000
	313	[5489]	NOT      	R19 R1 ; R19 := not R1
	314	[5489]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	315	[5490]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	316	[5490]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	317	[5490]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	318	[5490]	LOADK    	R17 K59 ; R17 := "Name"
	319	[5490]	LOADK    	R18 := 11.000000
	320	[5490]	NOT      	R19 R1 ; R19 := not R1
	321	[5490]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	322	[5491]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	323	[5491]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	324	[5491]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	325	[5491]	LOADK    	R17 K77 ; R17 := "Status"
	326	[5491]	LOADK    	R18 := 11.000000
	327	[5491]	NOT      	R19 R1 ; R19 := not R1
	328	[5491]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	329	[5492]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	330	[5492]	SELF     	R14 R14 K74 ; R15 := R14; R14 := R14[0xc0a3774b]
	331	[5492]	LOADK    	R16 K52 ; R16 := "BottomRightContainer.SalvagePanel"
	332	[5492]	LOADK    	R17 K18 ; R17 := "SalvageProgress"
	333	[5492]	LOADK    	R18 := 11.000000
	334	[5492]	NOT      	R19 R1 ; R19 := not R1
	335	[5492]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	336	[5493]	GETGLOBAL	R14 K53 ; R14 := mSalvageSpecialBtn
	337	[5493]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x368ad758]
	338	[5493]	NOT      	R16 R1 ; R16 := not R1
	339	[5493]	CALL     	R14 3 1 ; R14(R15,R16)
	340	[5495]	RETURN   	R0 1 ; return 

function #149 <?:5497,5503> (14 instructions, 56 bytes at 000002117F5AA850)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5498]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5498]	TEST     	R1 1 ; if R1 then PC := 7
	3	[5498]	JMP      	7 ; PC := 7
	4	[5498]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	5	[5498]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	6	[5498]	JMP      	8 ; PC := 8
	7	[5499]	RETURN   	R0 1 ; return 
	8	[5502]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	9	[5502]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	10	[5502]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[5502]	MOVE     	R4 R0 ; R4 := R0
	12	[5502]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[5502]	CALL     	R1 0 1 ; R1(R2,...)
	14	[5503]	RETURN   	R0 1 ; return 

function #150 <?:5505,5511> (14 instructions, 56 bytes at 00000211256B6140)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5506]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5506]	TEST     	R1 1 ; if R1 then PC := 7
	3	[5506]	JMP      	7 ; PC := 7
	4	[5506]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	5	[5506]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	6	[5506]	JMP      	8 ; PC := 8
	7	[5507]	RETURN   	R0 1 ; return 
	8	[5510]	GETGLOBAL	R1 K1 ; R1 := mCurrencyList
	9	[5510]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5319dc]
	10	[5510]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[5510]	MOVE     	R4 R0 ; R4 := R0
	12	[5510]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[5510]	CALL     	R1 0 1 ; R1(R2,...)
	14	[5511]	RETURN   	R0 1 ; return 

function #151 <?:5513,5519> (11 instructions, 44 bytes at 00000211318ACE10)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5514]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	2	[5514]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[5514]	JMP      	5 ; PC := 5
	4	[5515]	RETURN   	R0 1 ; return 
	5	[5518]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	6	[5518]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	7	[5518]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	8	[5518]	MOVE     	R4 R0 ; R4 := R0
	9	[5518]	CALL     	R3 2 0 ; R3,... := R3(R4)
	10	[5518]	CALL     	R1 0 1 ; R1(R2,...)
	11	[5519]	RETURN   	R0 1 ; return 

function #152 <?:5521,5527> (11 instructions, 44 bytes at 000002111B5D41F0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5522]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	2	[5522]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[5522]	JMP      	5 ; PC := 5
	4	[5523]	RETURN   	R0 1 ; return 
	5	[5526]	GETGLOBAL	R1 K0 ; R1 := mCurrencyList
	6	[5526]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	7	[5526]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	8	[5526]	MOVE     	R4 R0 ; R4 := R0
	9	[5526]	CALL     	R3 2 0 ; R3,... := R3(R4)
	10	[5526]	CALL     	R1 0 1 ; R1(R2,...)
	11	[5527]	RETURN   	R0 1 ; return 

function #153 <?:5529,5581> (61 instructions, 244 bytes at 000002112C7CB350)
1 param, 7 slots, 5 upvalues, 0 locals, 20 constants, 2 functions
	1	[5530]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5530]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[5530]	GETTABLE 	R2 R2 K2 ; R2 := R2["GetScreenRes"]
	4	[5530]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5530]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[5530]	JMP      	8 ; PC := 8
	7	[5531]	RETURN   	R0 1 ; return 
	8	[5534]	GETGLOBAL	R1 K1 ; R1 := _T
	9	[5534]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x14e3a848]
	10	[5534]	LOADK    	R2 K4 ; R2 := "Inventory"
	11	[5534]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[5535]	GETGLOBAL	R2 K5 ; R2 := 0x9ba7909f
	13	[5535]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x5374b92e]
	14	[5535]	MOVE     	R4 R1 ; R4 := R1
	15	[5535]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[5535]	TEST     	R2 1 ; if R2 then PC := 61
	17	[5535]	JMP      	61 ; PC := 61
	18	[5536]	GETGLOBAL	R2 K1 ; R2 := _T
	19	[5536]	LOADK    	R3 K7 ; R3 := "SellingShip"
	20	[5536]	MOVE     	R4 R0 ; R4 := R0
	21	[5536]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	22	[5536]	SETTABLE 	R2 R3 K8 ; R2[R3] := true
	23	[5537]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	24	[5537]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x1fd6abd0]
	25	[5537]	MOVE     	R4 R1 ; R4 := R1
	26	[5537]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	27	[5537]	SETGLOBALHASH	R2 K9 ; mChildMovie := R2
	28	[5538]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	29	[5538]	GETGLOBAL	R3 K9 ; R3 := mChildMovie
	30	[5538]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[5538]	TEST     	R2 1 ; if R2 then PC := 61
	32	[5538]	JMP      	61 ; PC := 61
	33	[5539]	GETGLOBAL	R2 K1 ; R2 := _T
	34	[5554]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	35	[5554]	GETUPVAL 	R0 U0 ; R0 := U0
	36	[5554]	GETUPVAL 	R0 U1 ; R0 := U1
	37	[5554]	GETUPVAL 	R0 U2 ; R0 := U2
	38	[5554]	GETUPVAL 	R0 U3 ; R0 := U3
	39	[5554]	SETTABLE 	R2 K12 R3 ; R2["OnSellScreenClosed"] := R3
	40	[5555]	GETGLOBAL	R2 K9 ; R2 := mChildMovie
	41	[5555]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0xe4162eed]
	42	[5555]	LOADK    	R4 K14 ; R4 := "SetCallback"
	43	[5555]	LOADK    	R5 K12 ; R5 := "OnSellScreenClosed"
	44	[5555]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	45	[5557]	EQ       	0 R0 K15 ; if R0 ~= "Components" then PC := 61
	46	[5557]	JMP      	61 ; PC := 61
	47	[5558]	GETGLOBAL	R2 K16 ; R2 := 0xb009bbc6
	48	[5558]	GETGLOBAL	R3 K17 ; R3 := 0x59462acb
	49	[5558]	CALL     	R2 2 2 ; R2 := R2(R3)
	50	[5559]	GETGLOBAL	R3 K1 ; R3 := _T
	51	[5576]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	52	[5576]	MOVE     	R0 R2 ; R0 := R2
	53	[5576]	GETUPVAL 	R0 U4 ; R0 := U4
	54	[5576]	SETTABLE 	R3 K18 R4 ; R3["GetExtraInfo"] := R4
	55	[5577]	GETGLOBAL	R3 K9 ; R3 := mChildMovie
	56	[5577]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0xe4162eed]
	57	[5577]	LOADK    	R5 K19 ; R5 := "SetExtraInfoCallback"
	58	[5577]	LOADK    	R6 K18 ; R6 := "GetExtraInfo"
	59	[5577]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	60	[5577]	CLOSE    	R2 ; SAVE R2,...
	61	[5581]	RETURN   	R0 1 ; return 

function #154 <?:5583,5736> (436 instructions, 1744 bytes at 0000021163880D60)
0 params, 32 slots, 21 upvalues, 0 locals, 122 constants, 0 functions
	1	[5584]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[5584]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xc02f2cb8]
	3	[5584]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[5584]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[5586]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[5586]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xb73d420f]
	7	[5586]	CALL     	R0 1 2 ; R0 := R0()
	8	[5587]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[5587]	GETTABLE 	R1 R1 K4 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	10	[5587]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	11	[5587]	JMP      	13 ; PC := 13
	12	[5587]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 13
	13	[5587]	OP_LOADBOOL	R1 1 0 ; R1 := true
	14	[5587]	SETGLOBALHASH	R1 K3 ; mLisetMode := R1
	15	[5589]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[5589]	CALL     	R1 1 1 ; R1()
	17	[5591]	GETGLOBAL	R1 K5 ; R1 := 0x2d0fad09
	18	[5591]	LOADK    	R2 K6 ; R2 := "Lotus.Interface.Libs.TimerMgr"
	19	[5591]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[5592]	GETTABLE 	R2 R1 K8 ; R2 := R1[0xde474187]
	21	[5592]	CALL     	R2 1 2 ; R2 := R2()
	22	[5592]	SETGLOBALHASH	R2 K7 ; mTimerMgr := R2
	23	[5594]	GETGLOBAL	R2 K5 ; R2 := 0x2d0fad09
	24	[5594]	LOADK    	R3 K9 ; R3 := "EE.Interface.AnchorMgr"
	25	[5594]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[5595]	GETTABLE 	R3 R2 K11 ; R3 := R2[0xae6791ba]
	27	[5595]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	28	[5595]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[5595]	SETGLOBALHASH	R3 K10 ; mAnchorMgr := R3
	30	[5596]	GETGLOBAL	R3 K10 ; R3 := mAnchorMgr
	31	[5596]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x20ff29f7]
	32	[5596]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	33	[5596]	LOADK    	R6 K14 ; R6 := "TopLeftContainer"
	34	[5596]	NEWTABLE 	R7 2 0 ; R7 := {}
	35	[5596]	GETGLOBAL	R8 K10 ; R8 := mAnchorMgr
	36	[5596]	GETTABLE 	R8 R8 K15 ; R8 := R8["ANCHOR_H_LEFT"]
	37	[5596]	GETGLOBAL	R9 K10 ; R9 := mAnchorMgr
	38	[5596]	GETTABLE 	R9 R9 K16 ; R9 := R9["ANCHOR_V_TOP"]
	39	[5596]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	40	[5596]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	41	[5597]	GETGLOBAL	R3 K10 ; R3 := mAnchorMgr
	42	[5597]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x20ff29f7]
	43	[5597]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	44	[5597]	LOADK    	R6 K17 ; R6 := "TopRightContainer"
	45	[5597]	NEWTABLE 	R7 2 0 ; R7 := {}
	46	[5597]	GETGLOBAL	R8 K10 ; R8 := mAnchorMgr
	47	[5597]	GETTABLE 	R8 R8 K18 ; R8 := R8["ANCHOR_H_RIGHT"]
	48	[5597]	GETGLOBAL	R9 K10 ; R9 := mAnchorMgr
	49	[5597]	GETTABLE 	R9 R9 K16 ; R9 := R9["ANCHOR_V_TOP"]
	50	[5597]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	51	[5597]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	52	[5598]	GETGLOBAL	R3 K10 ; R3 := mAnchorMgr
	53	[5598]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x20ff29f7]
	54	[5598]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	55	[5598]	LOADK    	R6 K19 ; R6 := "BottomRightContainer"
	56	[5598]	NEWTABLE 	R7 2 0 ; R7 := {}
	57	[5598]	GETGLOBAL	R8 K10 ; R8 := mAnchorMgr
	58	[5598]	GETTABLE 	R8 R8 K18 ; R8 := R8["ANCHOR_H_RIGHT"]
	59	[5598]	GETGLOBAL	R9 K10 ; R9 := mAnchorMgr
	60	[5598]	GETTABLE 	R9 R9 K20 ; R9 := R9["ANCHOR_V_BOTTOM"]
	61	[5598]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	62	[5598]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	63	[5600]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	64	[5600]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	65	[5600]	LOADK    	R5 K22 ; R5 := "TopLeftContainer.Lines.Right"
	66	[5600]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	67	[5600]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	68	[5601]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	69	[5601]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	70	[5601]	LOADK    	R5 K24 ; R5 := "TopRightContainer.Lines.Center.Left"
	71	[5601]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	72	[5601]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	73	[5602]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	74	[5602]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	75	[5602]	LOADK    	R5 K25 ; R5 := "TopRightContainer.Lines.Center.Center"
	76	[5602]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	77	[5602]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	78	[5603]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	79	[5603]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	80	[5603]	LOADK    	R5 K26 ; R5 := "TopRightContainer.Lines.Center.Right"
	81	[5603]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	82	[5603]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	83	[5604]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	84	[5604]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xd5181643]
	85	[5604]	LOADK    	R5 K27 ; R5 := "TopRightContainer.Lines.Right"
	86	[5604]	GETGLOBAL	R6 K23 ; R6 := 0x62fbce7a
	87	[5604]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	88	[5606]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	89	[5606]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x67bc869f]
	90	[5606]	LOADK    	R5 K29 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Components.Btn"
	91	[5606]	LOADK    	R6 := 85.000000
	92	[5606]	LOADK    	R7 := 1.000000
	93	[5606]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	94	[5607]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	95	[5607]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x67bc869f]
	96	[5607]	LOADK    	R5 K30 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Wreckage.Btn"
	97	[5607]	LOADK    	R6 := 85.000000
	98	[5607]	LOADK    	R7 := 2.000000
	99	[5607]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	100	[5608]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	101	[5608]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x67bc869f]
	102	[5608]	LOADK    	R5 K31 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Unidentified.Btn"
	103	[5608]	LOADK    	R6 := 85.000000
	104	[5608]	LOADK    	R7 := 3.000000
	105	[5608]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	106	[5609]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	107	[5609]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0x1e5b5cfe]
	108	[5609]	LOADK    	R5 K29 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Components.Btn"
	109	[5609]	LOADK    	R6 K33 ; R6 := "CapacityFocused"
	110	[5609]	LOADK    	R7 K34 ; R7 := "CapacityUnfocused"
	111	[5609]	LOADK    	R8 K35 ; R8 := "CapacityReleased"
	112	[5609]	LOADK    	R9 K36 ; R9 := "CapacityPressed"
	113	[5609]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	114	[5610]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	115	[5610]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0x1e5b5cfe]
	116	[5610]	LOADK    	R5 K30 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Wreckage.Btn"
	117	[5610]	LOADK    	R6 K33 ; R6 := "CapacityFocused"
	118	[5610]	LOADK    	R7 K34 ; R7 := "CapacityUnfocused"
	119	[5610]	LOADK    	R8 K35 ; R8 := "CapacityReleased"
	120	[5610]	LOADK    	R9 K36 ; R9 := "CapacityPressed"
	121	[5610]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	122	[5611]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	123	[5611]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0x1e5b5cfe]
	124	[5611]	LOADK    	R5 K31 ; R5 := "TopLeftContainer.CurrencyBar.Display1.Unidentified.Btn"
	125	[5611]	LOADK    	R6 K33 ; R6 := "CapacityFocused"
	126	[5611]	LOADK    	R7 K34 ; R7 := "CapacityUnfocused"
	127	[5611]	LOADK    	R8 K35 ; R8 := "CapacityReleased"
	128	[5611]	LOADK    	R9 K36 ; R9 := "CapacityPressed"
	129	[5611]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	130	[5613]	GETGLOBAL	R3 K37 ; R3 := 0x7b998233
	131	[5613]	GETGLOBAL	R4 K38 ; R4 := _T
	132	[5613]	GETTABLE 	R4 R4 K39 ; R4 := R4["EnableUIInput"]
	133	[5613]	CALL     	R3 2 2 ; R3 := R3(R4)
	134	[5613]	TEST     	R3 1 ; if R3 then PC := 139
	135	[5613]	JMP      	139 ; PC := 139
	136	[5614]	GETGLOBAL	R3 K38 ; R3 := _T
	137	[5614]	GETTABLE 	R3 R3 K40 ; R3 := R3[0x3b0face1]
	138	[5614]	CALL     	R3 1 1 ; R3()
	139	[5617]	GETGLOBAL	R3 K38 ; R3 := _T
	140	[5617]	SETTABLE 	R3 K41 K42 ; R3["DeferSquadCrewShipLoad"] := true
	141	[5619]	GETGLOBAL	R3 K44 ; R3 := 0x89326c93
	142	[5619]	SELF     	R3 R3 K45 ; R4 := R3; R3 := R3[0x78298275]
	143	[5619]	CALL     	R3 2 2 ; R3 := R3(R4)
	144	[5619]	SETGLOBALHASH	R3 K43 ; mAvatar := R3
	145	[5621]	GETGLOBAL	R3 K46 ; R3 := 0x25d99d89
	146	[5621]	SELF     	R3 R3 K47 ; R4 := R3; R3 := R3[0x62c81b76]
	147	[5621]	CALL     	R3 2 2 ; R3 := R3(R4)
	148	[5621]	GETTABLE 	R3 R3 K48 ; R3 := R3["mCrewShipLoadOut"]
	149	[5622]	GETUPVAL 	R4 U2 ; R4 := U2
	150	[5622]	MOVE     	R5 R3 ; R5 := R3
	151	[5622]	OP_LOADBOOL	R6 1 0 ; R6 := true
	152	[5622]	CALL     	R4 3 1 ; R4(R5,R6)
	153	[5624]	GETTABLE 	R4 R3 K49 ; R4 := R3["mShip"]
	154	[5625]	GETTABLE 	R5 R4 K50 ; R5 := R4["mItemName"]
	155	[5627]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	156	[5627]	GETGLOBAL	R7 K51 ; R7 := mShipSuit
	157	[5627]	CALL     	R6 2 2 ; R6 := R6(R7)
	158	[5627]	TEST     	R6 1 ; if R6 then PC := 180
	159	[5627]	JMP      	180 ; PC := 180
	160	[5627]	GETGLOBAL	R6 K52 ; R6 := 0xe7f2b02f
	161	[5627]	SELF     	R6 R6 K53 ; R7 := R6; R6 := R6[0xb321d806]
	162	[5627]	CALL     	R6 2 2 ; R6 := R6(R7)
	163	[5627]	TEST     	R6 1 ; if R6 then PC := 180
	164	[5627]	JMP      	180 ; PC := 180
	165	[5628]	GETGLOBAL	R6 K51 ; R6 := mShipSuit
	166	[5628]	SELF     	R6 R6 K55 ; R7 := R6; R6 := R6[0xd3a9d01f]
	167	[5628]	CALL     	R6 2 2 ; R6 := R6(R7)
	168	[5628]	SETGLOBALHASH	R6 K54 ; mPrevShipName := R6
	169	[5629]	GETGLOBAL	R6 K51 ; R6 := mShipSuit
	170	[5629]	SELF     	R6 R6 K56 ; R7 := R6; R6 := R6[0x8e886a73]
	171	[5629]	GETGLOBAL	R8 K57 ; R8 := 0x0469f296
	172	[5629]	MOVE     	R9 R5 ; R9 := R5
	173	[5629]	CALL     	R8 2 0 ; R8,... := R8(R9)
	174	[5629]	CALL     	R6 0 1 ; R6(R7,...)
	175	[5630]	GETGLOBAL	R6 K58 ; R6 := 0x9ba7909f
	176	[5630]	SELF     	R6 R6 K59 ; R7 := R6; R6 := R6[0x7e17ae26]
	177	[5630]	LOADK    	R8 K60 ; R8 := "UpdateRailjackText"
	178	[5630]	LOADK    	R9 K61 ; R9 := ""
	179	[5630]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	180	[5633]	GETUPVAL 	R6 U0 ; R6 := U0
	181	[5633]	GETTABLE 	R6 R6 K62 ; R6 := R6[0x9e3d3434]
	182	[5633]	OP_LOADBOOL	R7 1 0 ; R7 := true
	183	[5633]	CALL     	R6 2 1 ; R6(R7)
	184	[5634]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	185	[5634]	GETGLOBAL	R7 K38 ; R7 := _T
	186	[5634]	GETTABLE 	R7 R7 K63 ; R7 := R7["ChangeHubVisCounter"]
	187	[5634]	CALL     	R6 2 2 ; R6 := R6(R7)
	188	[5634]	TEST     	R6 1 ; if R6 then PC := 194
	189	[5634]	JMP      	194 ; PC := 194
	190	[5635]	GETGLOBAL	R6 K38 ; R6 := _T
	191	[5635]	GETTABLE 	R6 R6 K64 ; R6 := R6[0x33cfa273]
	192	[5635]	LOADK    	R7 := 1.000000
	193	[5635]	CALL     	R6 2 1 ; R6(R7)
	194	[5639]	GETGLOBAL	R6 K3 ; R6 := mLisetMode
	195	[5639]	TEST     	R6 1 ; if R6 then PC := 227
	196	[5639]	JMP      	227 ; PC := 227
	197	[5639]	GETTABLE 	R6 R3 K49 ; R6 := R3["mShip"]
	198	[5639]	GETTABLE 	R6 R6 K65 ; R6 := R6["mItemId"]
	199	[5639]	GETTABLE 	R6 R6 K66 ; R6 := R6["mId"]
	200	[5639]	GETGLOBAL	R7 K67 ; R7 := 0x6c97a788
	201	[5639]	GETTABLE 	R7 R7 K68 ; R7 := R7["InvalidItemID"]
	202	[5639]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 227
	203	[5639]	JMP      	227 ; PC := 227
	204	[5640]	GETUPVAL 	R6 U3 ; R6 := U3
	205	[5640]	GETTABLE 	R6 R6 K69 ; R6 := R6[0x659d451f]
	206	[5640]	GETGLOBAL	R7 K70 ; R7 := 0x0032441c
	207	[5640]	GETTABLE 	R7 R7 K71 ; R7 := R7["UISound_Error"]
	208	[5640]	CALL     	R6 2 1 ; R6(R7)
	209	[5641]	GETGLOBAL	R6 K72 ; R6 := 0x3d106989
	210	[5641]	LOADK    	R7 K73 ; R7 := "No crewship to configure"
	211	[5641]	CALL     	R6 2 1 ; R6(R7)
	212	[5643]	OP_LOADBOOL	R6 1 0 ; R6 := true
	213	[5643]	SETGLOBALHASH	R6 K74 ; mCloseOnTrigger := R6
	214	[5645]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	215	[5645]	GETGLOBAL	R7 K38 ; R7 := _T
	216	[5645]	GETTABLE 	R7 R7 K75 ; R7 := R7["BackgroundMovie"]
	217	[5645]	CALL     	R6 2 2 ; R6 := R6(R7)
	218	[5645]	TEST     	R6 1 ; if R6 then PC := 226
	219	[5645]	JMP      	226 ; PC := 226
	220	[5646]	GETGLOBAL	R6 K38 ; R6 := _T
	221	[5646]	GETTABLE 	R6 R6 K75 ; R6 := R6["BackgroundMovie"]
	222	[5646]	SELF     	R6 R6 K76 ; R7 := R6; R6 := R6[0xe4162eed]
	223	[5646]	LOADK    	R8 K77 ; R8 := "ShowBlockingMessage"
	224	[5646]	LOADK    	R9 K78 ; R9 := "2"
	225	[5646]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	226	[5649]	RETURN   	R0 1 ; return 
	227	[5652]	SETGLOBALHASH	R3 K79 ; mCurrentLoadout := R3
	228	[5654]	GETGLOBAL	R6 K46 ; R6 := 0x25d99d89
	229	[5654]	SELF     	R6 R6 K80 ; R7 := R6; R6 := R6[0x25a6e75e]
	230	[5654]	CALL     	R6 2 2 ; R6 := R6(R7)
	231	[5655]	NEWTABLE 	R7 0 0 ; R7 := {}
	232	[5655]	SETGLOBALHASH	R7 K81 ; mCurrentShip := R7
	233	[5656]	GETGLOBAL	R7 K81 ; R7 := mCurrentShip
	234	[5656]	SELF     	R8 R6 K83 ; R9 := R6; R8 := R6[0xe8e8a9f7]
	235	[5656]	CALL     	R8 2 2 ; R8 := R8(R9)
	236	[5656]	SETTABLE 	R7 K82 R8 ; R7["ID"] := R8
	237	[5658]	SELF     	R7 R6 K84 ; R8 := R6; R7 := R6[0x2fdbb24a]
	238	[5658]	CALL     	R7 2 2 ; R7 := R7(R8)
	239	[5659]	GETGLOBAL	R8 K81 ; R8 := mCurrentShip
	240	[5659]	GETTABLE 	R8 R8 K82 ; R8 := R8["ID"]
	241	[5659]	GETTABLE 	R8 R8 K66 ; R8 := R8["mId"]
	242	[5660]	GETGLOBAL	R9 K85 ; R9 := 0xc8802016
	243	[5660]	MOVE     	R10 R7 ; R10 := R7
	244	[5660]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	245	[5660]	JMP      	252 ; PC := 252
	246	[5661]	GETTABLE 	R14 R13 K65 ; R14 := R13["mItemId"]
	247	[5662]	GETTABLE 	R15 R14 K66 ; R15 := R14["mId"]
	248	[5663]	EQ       	0 R15 R8 ; if R15 ~= R8 then PC := 252
	249	[5663]	JMP      	252 ; PC := 252
	250	[5664]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	251	[5664]	SETTABLE 	R16 K86 R13 ; R16["ShipInfo"] := R13
	252	[5660]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 246; R11 := R12 end
	253	[5665]	JMP      	246 ; PC := 246
	254	[5668]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	255	[5668]	GETTABLE 	R16 R16 K86 ; R16 := R16["ShipInfo"]
	256	[5668]	EQ       	0 R16 K87 ; if R16 ~= nil then PC := 275
	257	[5668]	JMP      	275 ; PC := 275
	258	[5668]	LEN      	R16 R7 ; R16 := # R7
	259	[5668]	LT       	0 K88 R16 ; if 0.000000 >= R16 then PC := 275
	260	[5668]	JMP      	275 ; PC := 275
	261	[5670]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	262	[5670]	GETGLOBAL	R17 K89 ; R17 := 0x3584dca2
	263	[5670]	GETTABLE 	R18 R7 K90 ; R18 := R7[1.000000]
	264	[5670]	GETTABLE 	R18 R18 K65 ; R18 := R18["mItemId"]
	265	[5670]	GETTABLE 	R18 R18 K66 ; R18 := R18["mId"]
	266	[5670]	CALL     	R17 2 2 ; R17 := R17(R18)
	267	[5670]	SETTABLE 	R16 K82 R17 ; R16["ID"] := R17
	268	[5671]	GETGLOBAL	R16 K81 ; R16 := mCurrentShip
	269	[5671]	GETTABLE 	R17 R7 K90 ; R17 := R7[1.000000]
	270	[5671]	SETTABLE 	R16 K86 R17 ; R16["ShipInfo"] := R17
	271	[5672]	SELF     	R16 R6 K91 ; R17 := R6; R16 := R6[0xe9d7833b]
	272	[5672]	GETGLOBAL	R18 K81 ; R18 := mCurrentShip
	273	[5672]	GETTABLE 	R18 R18 K82 ; R18 := R18["ID"]
	274	[5672]	CALL     	R16 3 1 ; R16(R17,R18)
	275	[5675]	GETUPVAL 	R16 U4 ; R16 := U4
	276	[5675]	CALL     	R16 1 1 ; R16()
	277	[5676]	GETUPVAL 	R16 U5 ; R16 := U5
	278	[5676]	CALL     	R16 1 1 ; R16()
	279	[5677]	GETUPVAL 	R16 U6 ; R16 := U6
	280	[5677]	CALL     	R16 1 1 ; R16()
	281	[5678]	GETUPVAL 	R16 U7 ; R16 := U7
	282	[5678]	CALL     	R16 1 1 ; R16()
	283	[5679]	GETUPVAL 	R16 U8 ; R16 := U8
	284	[5679]	CALL     	R16 1 1 ; R16()
	285	[5680]	GETUPVAL 	R16 U9 ; R16 := U9
	286	[5680]	CALL     	R16 1 1 ; R16()
	287	[5682]	GETUPVAL 	R16 U10 ; R16 := U10
	288	[5682]	CALL     	R16 1 1 ; R16()
	289	[5683]	GETUPVAL 	R16 U11 ; R16 := U11
	290	[5683]	OP_LOADBOOL	R17 1 0 ; R17 := true
	291	[5683]	CALL     	R16 2 1 ; R16(R17)
	292	[5685]	GETGLOBAL	R16 K3 ; R16 := mLisetMode
	293	[5685]	TEST     	R16 1 ; if R16 then PC := 297
	294	[5685]	JMP      	297 ; PC := 297
	295	[5686]	GETUPVAL 	R16 U12 ; R16 := U12
	296	[5686]	CALL     	R16 1 1 ; R16()
	297	[5688]	GETUPVAL 	R16 U13 ; R16 := U13
	298	[5688]	CALL     	R16 1 1 ; R16()
	299	[5689]	GETUPVAL 	R16 U14 ; R16 := U14
	300	[5689]	CALL     	R16 1 1 ; R16()
	301	[5690]	GETUPVAL 	R16 U15 ; R16 := U15
	302	[5690]	CALL     	R16 1 1 ; R16()
	303	[5691]	GETUPVAL 	R16 U16 ; R16 := U16
	304	[5691]	CALL     	R16 1 1 ; R16()
	305	[5692]	GETUPVAL 	R16 U17 ; R16 := U17
	306	[5692]	OP_LOADBOOL	R17 1 0 ; R17 := true
	307	[5692]	CALL     	R16 2 1 ; R16(R17)
	308	[5694]	GETGLOBAL	R16 K12 ; R16 := 0xae91e43b
	309	[5694]	SELF     	R16 R16 K92 ; R17 := R16; R16 := R16[0x58bec6d6]
	310	[5694]	LOADK    	R18 := 0.000000
	311	[5694]	CALL     	R16 3 1 ; R16(R17,R18)
	312	[5695]	GETGLOBAL	R16 K12 ; R16 := 0xae91e43b
	313	[5695]	SELF     	R16 R16 K28 ; R17 := R16; R16 := R16[0x67bc869f]
	314	[5695]	LOADK    	R18 K93 ; R18 := "_root"
	315	[5695]	LOADK    	R19 := 10.000000
	316	[5695]	LOADK    	R20 := 0.000000
	317	[5695]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	318	[5696]	GETGLOBAL	R16 K94 ; R16 := 0x25312c9b
	319	[5696]	GETGLOBAL	R17 K12 ; R17 := 0xae91e43b
	320	[5696]	LOADK    	R18 K93 ; R18 := "_root"
	321	[5696]	LOADK    	R19 := 0.000000
	322	[5696]	NEWTABLE 	R20 1 0 ; R20 := {}
	323	[5696]	LOADK    	R21 := 10.000000
	324	[5696]	SETLIST  	R20 1 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
	325	[5696]	NEWTABLE 	R21 1 0 ; R21 := {}
	326	[5696]	LOADK    	R22 := 100.000000
	327	[5696]	SETLIST  	R21 1 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
	328	[5696]	LOADK    	R22 K96 ; R22 := 0.350000
	329	[5696]	CALL     	R16 7 1 ; R16(R17,R18,R19,R20,R21,R22)
	330	[5698]	GETUPVAL 	R16 U18 ; R16 := U18
	331	[5698]	GETGLOBAL	R17 K12 ; R17 := 0xae91e43b
	332	[5698]	SELF     	R17 R17 K97 ; R18 := R17; R17 := R17[0x6b837788]
	333	[5698]	CALL     	R17 2 2 ; R17 := R17(R18)
	334	[5698]	GETGLOBAL	R18 K12 ; R18 := 0xae91e43b
	335	[5698]	SELF     	R18 R18 K98 ; R19 := R18; R18 := R18[0xaf9fda9f]
	336	[5698]	CALL     	R18 2 0 ; R18,... := R18(R19)
	337	[5698]	CALL     	R16 0 1 ; R16(R17,...)
	338	[5699]	GETUPVAL 	R16 U19 ; R16 := U19
	339	[5699]	CALL     	R16 1 1 ; R16()
	340	[5701]	GETUPVAL 	R16 U3 ; R16 := U3
	341	[5701]	GETTABLE 	R16 R16 K69 ; R16 := R16[0x659d451f]
	342	[5701]	GETGLOBAL	R17 K99 ; R17 := 0x0856e17d
	343	[5701]	CALL     	R16 2 1 ; R16(R17)
	344	[5702]	GETGLOBAL	R16 K37 ; R16 := 0x7b998233
	345	[5702]	GETGLOBAL	R17 K100 ; R17 := 0x949fbfff
	346	[5702]	CALL     	R16 2 2 ; R16 := R16(R17)
	347	[5702]	TEST     	R16 1 ; if R16 then PC := 357
	348	[5702]	JMP      	357 ; PC := 357
	349	[5702]	GETGLOBAL	R16 K101 ; R16 := mMenuLoop
	350	[5702]	EQ       	0 R16 K87 ; if R16 ~= nil then PC := 357
	351	[5702]	JMP      	357 ; PC := 357
	352	[5703]	GETUPVAL 	R16 U3 ; R16 := U3
	353	[5703]	GETTABLE 	R16 R16 K69 ; R16 := R16[0x659d451f]
	354	[5703]	GETGLOBAL	R17 K100 ; R17 := 0x949fbfff
	355	[5703]	CALL     	R16 2 2 ; R16 := R16(R17)
	356	[5703]	SETGLOBALHASH	R16 K101 ; mMenuLoop := R16
	357	[5705]	GETGLOBAL	R16 K37 ; R16 := 0x7b998233
	358	[5705]	GETGLOBAL	R17 K102 ; R17 := 0xd6e45738
	359	[5705]	CALL     	R16 2 2 ; R16 := R16(R17)
	360	[5705]	TEST     	R16 1 ; if R16 then PC := 370
	361	[5705]	JMP      	370 ; PC := 370
	362	[5705]	GETGLOBAL	R16 K103 ; R16 := mMenuMusic
	363	[5705]	EQ       	0 R16 K87 ; if R16 ~= nil then PC := 370
	364	[5705]	JMP      	370 ; PC := 370
	365	[5706]	GETUPVAL 	R16 U3 ; R16 := U3
	366	[5706]	GETTABLE 	R16 R16 K69 ; R16 := R16[0x659d451f]
	367	[5706]	GETGLOBAL	R17 K102 ; R17 := 0xd6e45738
	368	[5706]	CALL     	R16 2 2 ; R16 := R16(R17)
	369	[5706]	SETGLOBALHASH	R16 K103 ; mMenuMusic := R16
	370	[5711]	GETGLOBAL	R16 K104 ; R16 := 0xcfc01047
	371	[5711]	GETUPVAL 	R17 U20 ; R17 := U20
	372	[5711]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	373	[5711]	JMP      	391 ; PC := 391
	374	[5712]	OP_LOADBOOL	R21 0 0 ; R21 := false
	375	[5713]	GETGLOBAL	R22 K85 ; R22 := 0xc8802016
	376	[5713]	GETGLOBAL	R23 K105 ; R23 := mCategories
	377	[5713]	GETTABLE 	R23 R23 K106 ; R23 := R23["mElements"]
	378	[5713]	CALL     	R22 2 4 ; R22,R23,R24 := R22(R23)
	379	[5713]	JMP      	385 ; PC := 385
	380	[5714]	GETTABLE 	R27 R26 K107 ; R27 := R26["State"]
	381	[5714]	EQ       	0 R27 R20 ; if R27 ~= R20 then PC := 385
	382	[5714]	JMP      	385 ; PC := 385
	383	[5715]	OP_LOADBOOL	R21 1 0 ; R21 := true
	384	[5716]	JMP      	387 ; PC := 387
	385	[5713]	TFORLOOP 	R22 2 ; R25,R26 := R22(R23,R24); if R25 ~= nil then begin PC = 380; R24 := R25 end
	386	[5717]	JMP      	380 ; PC := 380
	387	[5719]	TEST     	R21 1 ; if R21 then PC := 391
	388	[5719]	JMP      	391 ; PC := 391
	389	[5720]	GETUPVAL 	R27 U20 ; R27 := U20
	390	[5720]	SETTABLE 	R27 R19 K87 ; R27[R19] := nil
	391	[5711]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 374; R18 := R19 end
	392	[5721]	JMP      	374 ; PC := 374
	393	[5724]	GETGLOBAL	R27 K46 ; R27 := 0x25d99d89
	394	[5724]	SELF     	R27 R27 K108 ; R28 := R27; R27 := R27[0x21a1810f]
	395	[5724]	GETGLOBAL	R29 K57 ; R29 := 0x0469f296
	396	[5724]	LOADK    	R30 K109 ; R30 := "RailjackDryDockTutorial"
	397	[5724]	CALL     	R29 2 0 ; R29,... := R29(R30)
	398	[5724]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	399	[5724]	TEST     	R27 1 ; if R27 then PC := 434
	400	[5724]	JMP      	434 ; PC := 434
	401	[5724]	GETUPVAL 	R27 U0 ; R27 := U0
	402	[5724]	GETTABLE 	R27 R27 K2 ; R27 := R27[0xb73d420f]
	403	[5724]	CALL     	R27 1 2 ; R27 := R27()
	404	[5724]	GETUPVAL 	R28 U0 ; R28 := U0
	405	[5724]	GETTABLE 	R28 R28 K4 ; R28 := R28["UI_MODE_IN_SPACE_SHIP"]
	406	[5724]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 434
	407	[5724]	JMP      	434 ; PC := 434
	408	[5725]	GETGLOBAL	R27 K110 ; R27 := 0x34291f5c
	409	[5725]	GETTABLE 	R27 R27 K111 ; R27 := R27[0xe27b35bb]
	410	[5725]	CALL     	R27 1 2 ; R27 := R27()
	411	[5726]	SETTABLE 	R27 K112 K88 ; R27["dialogType"] := 0.000000
	412	[5727]	SETTABLE 	R27 K113 K114 ; R27["locString"] := "/Lotus/Language/Railjack/RailjackHelp_DryDock"
	413	[5728]	GETGLOBAL	R28 K37 ; R28 := 0x7b998233
	414	[5728]	GETGLOBAL	R29 K115 ; R29 := 0xa0850db3
	415	[5728]	CALL     	R28 2 2 ; R28 := R28(R29)
	416	[5728]	TEST     	R28 1 ; if R28 then PC := 424
	417	[5728]	JMP      	424 ; PC := 424
	418	[5729]	GETGLOBAL	R28 K115 ; R28 := 0xa0850db3
	419	[5729]	SELF     	R28 R28 K117 ; R29 := R28; R28 := R28[0xed4e0128]
	420	[5729]	CALL     	R28 2 2 ; R28 := R28(R29)
	421	[5729]	LOADK    	R29 K118 ; R29 := ",512,256"
	422	[5729]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	423	[5729]	SETTABLE 	R27 K116 R28 ; R27["icon"] := R28
	424	[5731]	GETUPVAL 	R28 U3 ; R28 := U3
	425	[5731]	GETTABLE 	R28 R28 K119 ; R28 := R28[0xe99b84e7]
	426	[5731]	MOVE     	R29 R27 ; R29 := R27
	427	[5731]	CALL     	R28 2 1 ; R28(R29)
	428	[5732]	GETGLOBAL	R28 K46 ; R28 := 0x25d99d89
	429	[5732]	SELF     	R28 R28 K120 ; R29 := R28; R28 := R28[0xbf6c9575]
	430	[5732]	GETGLOBAL	R30 K57 ; R30 := 0x0469f296
	431	[5732]	LOADK    	R31 K109 ; R31 := "RailjackDryDockTutorial"
	432	[5732]	CALL     	R30 2 0 ; R30,... := R30(R31)
	433	[5732]	CALL     	R28 0 1 ; R28(R29,...)
	434	[5735]	GETGLOBAL	R28 K38 ; R28 := _T
	435	[5735]	SETTABLE 	R28 K121 K42 ; R28["CustomizingCrewship"] := true
	436	[5736]	RETURN   	R0 1 ; return 

function #155 <?:5738,5774> (94 instructions, 376 bytes at 0000021124DE6880)
0 params, 7 slots, 1 upvalue, 0 locals, 29 constants, 0 functions
	1	[5739]	GETGLOBAL	R0 K0 ; R0 := 0xb693b6c1
	2	[5739]	CALL     	R0 1 2 ; R0 := R0()
	3	[5740]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	4	[5740]	GETGLOBAL	R2 K2 ; R2 := mTimerMgr
	5	[5740]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[5740]	TEST     	R1 1 ; if R1 then PC := 12
	7	[5740]	JMP      	12 ; PC := 12
	8	[5741]	GETGLOBAL	R1 K2 ; R1 := mTimerMgr
	9	[5741]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfaa69527]
	10	[5741]	MOVE     	R3 R0 ; R3 := R0
	11	[5741]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[5744]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	13	[5744]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x8a8c8d5a]
	14	[5744]	MOVE     	R3 R0 ; R3 := R0
	15	[5744]	CALL     	R1 3 1 ; R1(R2,R3)
	16	[5746]	GETGLOBAL	R1 K6 ; R1 := mCloseOnTrigger
	17	[5746]	TEST     	R1 0 ; if not R1 then PC := 41
	18	[5746]	JMP      	41 ; PC := 41
	19	[5747]	OP_LOADBOOL	R1 0 0 ; R1 := false
	20	[5747]	SETGLOBALHASH	R1 K6 ; mCloseOnTrigger := R1
	21	[5748]	GETGLOBAL	R1 K7 ; R1 := _T
	22	[5748]	GETTABLE 	R1 R1 K8 ; R1 := R1["BackgroundMovie"]
	23	[5748]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xe4162eed]
	24	[5748]	LOADK    	R3 K10 ; R3 := "ShowBlockingMessage"
	25	[5748]	LOADK    	R4 K11 ; R4 := "0"
	26	[5748]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	27	[5750]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	28	[5750]	GETGLOBAL	R2 K7 ; R2 := _T
	29	[5750]	GETTABLE 	R2 R2 K12 ; R2 := R2["mTrigger"]
	30	[5750]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[5750]	TEST     	R1 1 ; if R1 then PC := 40
	32	[5750]	JMP      	40 ; PC := 40
	33	[5751]	GETGLOBAL	R1 K7 ; R1 := _T
	34	[5751]	GETTABLE 	R1 R1 K12 ; R1 := R1["mTrigger"]
	35	[5751]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x8eb2112d]
	36	[5751]	LOADK    	R3 K14 ; R3 := "Close"
	37	[5751]	CALL     	R1 3 1 ; R1(R2,R3)
	38	[5752]	GETGLOBAL	R1 K7 ; R1 := _T
	39	[5752]	SETTABLE 	R1 K12 K15 ; R1["mTrigger"] := nil
	40	[5755]	RETURN   	R0 1 ; return 
	41	[5758]	GETGLOBAL	R1 K16 ; R1 := mCosmeticsList
	42	[5758]	GETTABLE 	R1 R1 K17 ; R1 := R1["CustomizationList"]
	43	[5758]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfaa69527]
	44	[5758]	MOVE     	R3 R0 ; R3 := R0
	45	[5758]	CALL     	R1 3 1 ; R1(R2,R3)
	46	[5760]	GETGLOBAL	R1 K18 ; R1 := mStats
	47	[5760]	EQ       	1 R1 K15 ; if R1 == nil then PC := 87
	48	[5760]	JMP      	87 ; PC := 87
	49	[5760]	GETGLOBAL	R1 K18 ; R1 := mStats
	50	[5760]	GETTABLE 	R1 R1 K19 ; R1 := R1["mScrollBar"]
	51	[5760]	GETTABLE 	R1 R1 K20 ; R1 := R1["mEnabled"]
	52	[5760]	TEST     	R1 0 ; if not R1 then PC := 87
	53	[5760]	JMP      	87 ; PC := 87
	54	[5761]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	55	[5761]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0x91a24e4b]
	56	[5761]	LOADK    	R3 K22 ; R3 := "_root"
	57	[5761]	LOADK    	R4 := 25.000000
	58	[5761]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	59	[5762]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	60	[5762]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x91a24e4b]
	61	[5762]	LOADK    	R4 K22 ; R4 := "_root"
	62	[5762]	LOADK    	R5 := 26.000000
	63	[5762]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	64	[5763]	GETGLOBAL	R3 K18 ; R3 := mStats
	65	[5763]	GETTABLE 	R3 R3 K19 ; R3 := R3["mScrollBar"]
	66	[5763]	GETTABLE 	R3 R3 K23 ; R3 := R3["mActiveX"]
	67	[5763]	SUB      	R3 R3 K24 ; R3 := R3 - 340.000000
	68	[5763]	LT       	0 R3 R1 ; if R3 >= R1 then PC := 75
	69	[5763]	JMP      	75 ; PC := 75
	70	[5763]	GETGLOBAL	R3 K18 ; R3 := mStats
	71	[5763]	GETTABLE 	R3 R3 K19 ; R3 := R3["mScrollBar"]
	72	[5763]	GETTABLE 	R3 R3 K25 ; R3 := R3["mActiveY"]
	73	[5763]	LE       	1 R3 R2 ; if R3 <= R2 then PC := 76
	74	[5763]	JMP      	76 ; PC := 76
	75	[5763]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 76
	76	[5763]	OP_LOADBOOL	R3 1 0 ; R3 := true
	77	[5764]	GETGLOBAL	R4 K18 ; R4 := mStats
	78	[5764]	GETTABLE 	R4 R4 K19 ; R4 := R4["mScrollBar"]
	79	[5764]	GETTABLE 	R4 R4 K26 ; R4 := R4["mActive"]
	80	[5764]	EQ       	1 R4 R3 ; if R4 == R3 then PC := 87
	81	[5764]	JMP      	87 ; PC := 87
	82	[5765]	GETGLOBAL	R4 K18 ; R4 := mStats
	83	[5765]	GETTABLE 	R4 R4 K19 ; R4 := R4["mScrollBar"]
	84	[5765]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x46610c50]
	85	[5765]	MOVE     	R6 R3 ; R6 := R3
	86	[5765]	CALL     	R4 3 1 ; R4(R5,R6)
	87	[5769]	GETGLOBAL	R4 K28 ; R4 := mQueueContributionScreen
	88	[5769]	TEST     	R4 0 ; if not R4 then PC := 94
	89	[5769]	JMP      	94 ; PC := 94
	90	[5770]	OP_LOADBOOL	R4 0 0 ; R4 := false
	91	[5770]	SETGLOBALHASH	R4 K28 ; mQueueContributionScreen := R4
	92	[5772]	GETUPVAL 	R4 U0 ; R4 := U0
	93	[5772]	CALL     	R4 1 1 ; R4()
	94	[5774]	RETURN   	R0 1 ; return 

function #156 <?:5776,5778> (3 instructions, 12 bytes at 00000211372C2F50)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5777]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5777]	CALL     	R0 1 1 ; R0()
	3	[5778]	RETURN   	R0 1 ; return 

function #157 <?:5780,5786> (15 instructions, 60 bytes at 00000211372C2FE0)
0 params, 2 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[5781]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5781]	GETGLOBAL	R1 K1 ; R1 := mChildMovie
	3	[5781]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5781]	TEST     	R0 1 ; if R0 then PC := 8
	5	[5781]	JMP      	8 ; PC := 8
	6	[5782]	LOADNIL  	R0 R0 ; R0 := nil
	7	[5782]	RETURN   	R0 2 ; return R0 
	8	[5784]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[5784]	GETTABLE 	R0 R0 K2 ; R0 := R0[0x659d451f]
	10	[5784]	GETGLOBAL	R1 K3 ; R1 := 0x0032441c
	11	[5784]	GETTABLE 	R1 R1 K4 ; R1 := R1["UISound_ButtonSelect"]
	12	[5784]	CALL     	R0 2 1 ; R0(R1)
	13	[5785]	GETUPVAL 	R0 U1 ; R0 := U1
	14	[5785]	CALL     	R0 1 1 ; R0()
	15	[5786]	RETURN   	R0 1 ; return 

function #158 <?:5788,5790> (3 instructions, 12 bytes at 0000021130816A30)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[5789]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[5789]	RETURN   	R0 2 ; return R0 
	3	[5790]	RETURN   	R0 1 ; return 

function #159 <?:5792,5796> (15 instructions, 60 bytes at 0000021130816AC0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5793]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5793]	TEST     	R1 1 ; if R1 then PC := 15
	3	[5793]	JMP      	15 ; PC := 15
	4	[5793]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5793]	GETGLOBAL	R2 K2 ; R2 := mEquipment
	6	[5793]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5793]	TEST     	R1 1 ; if R1 then PC := 15
	8	[5793]	JMP      	15 ; PC := 15
	9	[5794]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	10	[5794]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	11	[5794]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5794]	MOVE     	R4 R0 ; R4 := R0
	13	[5794]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[5794]	CALL     	R1 0 1 ; R1(R2,...)
	15	[5796]	RETURN   	R0 1 ; return 

function #160 <?:5798,5802> (12 instructions, 48 bytes at 000002112F6536D0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5799]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5799]	GETGLOBAL	R2 K1 ; R2 := mEquipment
	3	[5799]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5799]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5799]	JMP      	12 ; PC := 12
	6	[5800]	GETGLOBAL	R1 K1 ; R1 := mEquipment
	7	[5800]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[5800]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5800]	MOVE     	R4 R0 ; R4 := R0
	10	[5800]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5800]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5802]	RETURN   	R0 1 ; return 

function #161 <?:5804,5808> (16 instructions, 64 bytes at 000002112E072570)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5805]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5805]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5805]	JMP      	16 ; PC := 16
	4	[5805]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5805]	GETGLOBAL	R2 K2 ; R2 := mEquipment
	6	[5805]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5805]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5805]	JMP      	16 ; PC := 16
	9	[5806]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	10	[5806]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	11	[5806]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5806]	MOVE     	R4 R0 ; R4 := R0
	13	[5806]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5806]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5806]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5808]	RETURN   	R0 1 ; return 

function #162 <?:5810,5814> (16 instructions, 64 bytes at 000002112829C220)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5811]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5811]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5811]	JMP      	16 ; PC := 16
	4	[5811]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5811]	GETGLOBAL	R2 K2 ; R2 := mEquipment
	6	[5811]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5811]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5811]	JMP      	16 ; PC := 16
	9	[5812]	GETGLOBAL	R1 K2 ; R1 := mEquipment
	10	[5812]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5319dc]
	11	[5812]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5812]	MOVE     	R4 R0 ; R4 := R0
	13	[5812]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5812]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5812]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5814]	RETURN   	R0 1 ; return 

function #163 <?:5816,5820> (17 instructions, 68 bytes at 00000211CA779340)
1 param, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5817]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5817]	TEST     	R1 1 ; if R1 then PC := 17
	3	[5817]	JMP      	17 ; PC := 17
	4	[5817]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5817]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	6	[5817]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCategoryMenu"]
	7	[5817]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[5817]	TEST     	R1 1 ; if R1 then PC := 17
	9	[5817]	JMP      	17 ; PC := 17
	10	[5818]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	11	[5818]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCategoryMenu"]
	12	[5818]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xdf42446e]
	13	[5818]	GETGLOBAL	R3 K5 ; R3 := 0x03f57322
	14	[5818]	MOVE     	R4 R0 ; R4 := R0
	15	[5818]	CALL     	R3 2 0 ; R3,... := R3(R4)
	16	[5818]	CALL     	R1 0 1 ; R1(R2,...)
	17	[5820]	RETURN   	R0 1 ; return 

function #164 <?:5822,5826> (14 instructions, 56 bytes at 0000021135B4D860)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5823]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5823]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5823]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCategoryMenu"]
	4	[5823]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5823]	TEST     	R1 1 ; if R1 then PC := 14
	6	[5823]	JMP      	14 ; PC := 14
	7	[5824]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	8	[5824]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCategoryMenu"]
	9	[5824]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[5824]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[5824]	MOVE     	R4 R0 ; R4 := R0
	12	[5824]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[5824]	CALL     	R1 0 1 ; R1(R2,...)
	14	[5826]	RETURN   	R0 1 ; return 

function #165 <?:5828,5834> (22 instructions, 88 bytes at 00000211347FF550)
1 param, 5 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[5829]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5829]	TEST     	R1 1 ; if R1 then PC := 22
	3	[5829]	JMP      	22 ; PC := 22
	4	[5829]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5829]	GETGLOBAL	R2 K2 ; R2 := mInventoryGrid
	6	[5829]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCategoryMenu"]
	7	[5829]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[5829]	TEST     	R1 1 ; if R1 then PC := 22
	9	[5829]	JMP      	22 ; PC := 22
	10	[5830]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	11	[5830]	SETTABLE 	R1 K4 K5 ; R1["mPrevSelectedId"] := nil
	12	[5831]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	13	[5831]	SETTABLE 	R1 K6 K5 ; R1["mCurrentElementIndex"] := nil
	14	[5832]	GETGLOBAL	R1 K2 ; R1 := mInventoryGrid
	15	[5832]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCategoryMenu"]
	16	[5832]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x070daa5a]
	17	[5832]	GETGLOBAL	R3 K8 ; R3 := 0x03f57322
	18	[5832]	MOVE     	R4 R0 ; R4 := R0
	19	[5832]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[5832]	OP_LOADBOOL	R4 1 0 ; R4 := true
	21	[5832]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	22	[5834]	RETURN   	R0 1 ; return 

function #166 <?:5836,5840> (15 instructions, 60 bytes at 0000021113BEC1A0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5837]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5837]	TEST     	R1 1 ; if R1 then PC := 15
	3	[5837]	JMP      	15 ; PC := 15
	4	[5837]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5837]	GETGLOBAL	R2 K2 ; R2 := mCategories
	6	[5837]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5837]	TEST     	R1 1 ; if R1 then PC := 15
	8	[5837]	JMP      	15 ; PC := 15
	9	[5838]	GETGLOBAL	R1 K2 ; R1 := mCategories
	10	[5838]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	11	[5838]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5838]	MOVE     	R4 R0 ; R4 := R0
	13	[5838]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[5838]	CALL     	R1 0 1 ; R1(R2,...)
	15	[5840]	RETURN   	R0 1 ; return 

function #167 <?:5842,5846> (12 instructions, 48 bytes at 000002112FBEDF60)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5843]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5843]	GETGLOBAL	R2 K1 ; R2 := mCategories
	3	[5843]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5843]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5843]	JMP      	12 ; PC := 12
	6	[5844]	GETGLOBAL	R1 K1 ; R1 := mCategories
	7	[5844]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[5844]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5844]	MOVE     	R4 R0 ; R4 := R0
	10	[5844]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5844]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5846]	RETURN   	R0 1 ; return 

function #168 <?:5848,5852> (16 instructions, 64 bytes at 000002112F3F5E80)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5849]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5849]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5849]	JMP      	16 ; PC := 16
	4	[5849]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5849]	GETGLOBAL	R2 K2 ; R2 := mCategories
	6	[5849]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5849]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5849]	JMP      	16 ; PC := 16
	9	[5850]	GETGLOBAL	R1 K2 ; R1 := mCategories
	10	[5850]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	11	[5850]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5850]	MOVE     	R4 R0 ; R4 := R0
	13	[5850]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5850]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5850]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5852]	RETURN   	R0 1 ; return 

function #169 <?:5854,5858> (16 instructions, 64 bytes at 000002113023BB30)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5855]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[5855]	TEST     	R1 1 ; if R1 then PC := 16
	3	[5855]	JMP      	16 ; PC := 16
	4	[5855]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5855]	GETGLOBAL	R2 K2 ; R2 := mCategories
	6	[5855]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5855]	TEST     	R1 1 ; if R1 then PC := 16
	8	[5855]	JMP      	16 ; PC := 16
	9	[5856]	GETGLOBAL	R1 K2 ; R1 := mCategories
	10	[5856]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5319dc]
	11	[5856]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[5856]	MOVE     	R4 R0 ; R4 := R0
	13	[5856]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[5856]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[5856]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[5858]	RETURN   	R0 1 ; return 

function #170 <?:5860,5864> (12 instructions, 48 bytes at 000002111D896E10)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5861]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5861]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5861]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5861]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5861]	JMP      	12 ; PC := 12
	6	[5862]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	7	[5862]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	8	[5862]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5862]	MOVE     	R4 R0 ; R4 := R0
	10	[5862]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5862]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5864]	RETURN   	R0 1 ; return 

function #171 <?:5866,5872> (16 instructions, 64 bytes at 0000021114F6BAF0)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[5867]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5867]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5867]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5867]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5867]	JMP      	12 ; PC := 12
	6	[5868]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	7	[5868]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[5868]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5868]	MOVE     	R4 R0 ; R4 := R0
	10	[5868]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5868]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5870]	GETGLOBAL	R1 K4 ; R1 := _T
	13	[5870]	SETTABLE 	R1 K5 K6 ; R1["InfoPopup_Data"] := nil
	14	[5871]	GETGLOBAL	R1 K4 ; R1 := _T
	15	[5871]	SETTABLE 	R1 K7 K6 ; R1["InfoPopup_Grid"] := nil
	16	[5872]	RETURN   	R0 1 ; return 

function #172 <?:5874,5878> (12 instructions, 48 bytes at 000002112CF00C20)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5875]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5875]	GETGLOBAL	R2 K1 ; R2 := mInventoryGrid
	3	[5875]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5875]	TEST     	R1 1 ; if R1 then PC := 12
	5	[5875]	JMP      	12 ; PC := 12
	6	[5876]	GETGLOBAL	R1 K1 ; R1 := mInventoryGrid
	7	[5876]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x070daa5a]
	8	[5876]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[5876]	MOVE     	R4 R0 ; R4 := R0
	10	[5876]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[5876]	CALL     	R1 0 1 ; R1(R2,...)
	12	[5878]	RETURN   	R0 1 ; return 

function #173 <?:5880,5882> (3 instructions, 12 bytes at 00000211255713B0)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[5881]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[5881]	SETTABLE 	R1 K1 R0 ; R1["mTrigger"] := R0
	3	[5882]	RETURN   	R0 1 ; return 

function #174 <?:5884,5896> (55 instructions, 220 bytes at 0000021125571440)
2 params, 6 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[5885]	GETGLOBAL	R2 K0 ; R2 := mInputBlocked
	2	[5885]	TEST     	R2 1 ; if R2 then PC := 9
	3	[5885]	JMP      	9 ; PC := 9
	4	[5885]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	5	[5885]	GETGLOBAL	R3 K2 ; R3 := mChildMovie
	6	[5885]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[5885]	TEST     	R2 1 ; if R2 then PC := 11
	8	[5885]	JMP      	11 ; PC := 11
	9	[5886]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[5886]	RETURN   	R2 2 ; return R2 
	11	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	12	[5889]	EQ       	1 R2 K4 ; if R2 == nil then PC := 38
	13	[5889]	JMP      	38 ; PC := 38
	14	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	15	[5889]	GETTABLE 	R2 R2 K5 ; R2 := R2["mIsVisible"]
	16	[5889]	TEST     	R2 0 ; if not R2 then PC := 38
	17	[5889]	JMP      	38 ; PC := 38
	18	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	19	[5889]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	20	[5889]	GETTABLE 	R2 R2 K7 ; R2 := R2["mEnabled"]
	21	[5889]	TEST     	R2 0 ; if not R2 then PC := 38
	22	[5889]	JMP      	38 ; PC := 38
	23	[5889]	GETGLOBAL	R2 K3 ; R2 := mStats
	24	[5889]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	25	[5889]	GETTABLE 	R2 R2 K8 ; R2 := R2["mActive"]
	26	[5889]	TEST     	R2 0 ; if not R2 then PC := 38
	27	[5889]	JMP      	38 ; PC := 38
	28	[5890]	GETGLOBAL	R2 K3 ; R2 := mStats
	29	[5890]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	30	[5890]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x30456f58]
	31	[5890]	GETGLOBAL	R4 K10 ; R4 := 0x03f57322
	32	[5890]	MOVE     	R5 R1 ; R5 := R1
	33	[5890]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[5890]	GETGLOBAL	R5 K11 ; R5 := 0x0032441c
	35	[5890]	GETTABLE 	R5 R5 K12 ; R5 := R5["UISound_Scroll"]
	36	[5890]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	37	[5890]	JMP      	53 ; PC := 53
	38	[5892]	GETGLOBAL	R2 K13 ; R2 := mInventoryGrid
	39	[5892]	GETTABLE 	R2 R2 K6 ; R2 := R2["mScrollBar"]
	40	[5892]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x30456f58]
	41	[5892]	GETGLOBAL	R4 K10 ; R4 := 0x03f57322
	42	[5892]	MOVE     	R5 R1 ; R5 := R1
	43	[5892]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[5892]	GETGLOBAL	R5 K11 ; R5 := 0x0032441c
	45	[5892]	GETTABLE 	R5 R5 K12 ; R5 := R5["UISound_Scroll"]
	46	[5892]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	47	[5893]	GETGLOBAL	R2 K14 ; R2 := mCosmeticsList
	48	[5893]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x8a8eba7f]
	49	[5893]	GETGLOBAL	R4 K10 ; R4 := 0x03f57322
	50	[5893]	MOVE     	R5 R1 ; R5 := R1
	51	[5893]	CALL     	R4 2 0 ; R4,... := R4(R5)
	52	[5893]	CALL     	R2 0 1 ; R2(R3,...)
	53	[5895]	OP_LOADBOOL	R2 0 0 ; R2 := false
	54	[5895]	RETURN   	R2 2 ; return R2 
	55	[5896]	RETURN   	R0 1 ; return 

function #175 <?:5898,5907> (29 instructions, 116 bytes at 00000211255714D0)
0 params, 4 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[5899]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5899]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5899]	JMP      	9 ; PC := 9
	4	[5899]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5899]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5899]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5899]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5899]	JMP      	11 ; PC := 11
	9	[5900]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5900]	RETURN   	R0 2 ; return R0 
	11	[5903]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5903]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5903]	GETTABLE 	R1 R1 K4 ; R1 := R1["WEAPON_INV"]
	14	[5903]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 21
	15	[5903]	JMP      	21 ; PC := 21
	16	[5903]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	17	[5903]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5903]	GETTABLE 	R1 R1 K5 ; R1 := R1["EQUIP_INV"]
	19	[5903]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 27
	20	[5903]	JMP      	27 ; PC := 27
	21	[5904]	GETGLOBAL	R0 K6 ; R0 := mInventoryGrid
	22	[5904]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x0b35b612]
	23	[5904]	GETUPVAL 	R2 U1 ; R2 := U1
	24	[5904]	GETTABLE 	R2 R2 K8 ; R2 := R2["DECREMENT"]
	25	[5904]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[5904]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	27	[5906]	OP_LOADBOOL	R0 1 0 ; R0 := true
	28	[5906]	RETURN   	R0 2 ; return R0 
	29	[5907]	RETURN   	R0 1 ; return 

function #176 <?:5909,5918> (29 instructions, 116 bytes at 0000021104100F90)
0 params, 4 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[5910]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5910]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5910]	JMP      	9 ; PC := 9
	4	[5910]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5910]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5910]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5910]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5910]	JMP      	11 ; PC := 11
	9	[5911]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5911]	RETURN   	R0 2 ; return R0 
	11	[5914]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5914]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5914]	GETTABLE 	R1 R1 K4 ; R1 := R1["WEAPON_INV"]
	14	[5914]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 21
	15	[5914]	JMP      	21 ; PC := 21
	16	[5914]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	17	[5914]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5914]	GETTABLE 	R1 R1 K5 ; R1 := R1["EQUIP_INV"]
	19	[5914]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 27
	20	[5914]	JMP      	27 ; PC := 27
	21	[5915]	GETGLOBAL	R0 K6 ; R0 := mInventoryGrid
	22	[5915]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x0b35b612]
	23	[5915]	GETUPVAL 	R2 U1 ; R2 := U1
	24	[5915]	GETTABLE 	R2 R2 K8 ; R2 := R2["INCREMENT"]
	25	[5915]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[5915]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	27	[5917]	OP_LOADBOOL	R0 1 0 ; R0 := true
	28	[5917]	RETURN   	R0 2 ; return R0 
	29	[5918]	RETURN   	R0 1 ; return 

function #177 <?:5920,5935> (48 instructions, 192 bytes at 000002117F109CC0)
0 params, 4 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[5921]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5921]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5921]	JMP      	9 ; PC := 9
	4	[5921]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5921]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5921]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5921]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5921]	JMP      	11 ; PC := 11
	9	[5922]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5922]	RETURN   	R0 2 ; return R0 
	11	[5925]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5925]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5925]	GETTABLE 	R1 R1 K4 ; R1 := R1["COSMETICS"]
	14	[5925]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 22
	15	[5925]	JMP      	22 ; PC := 22
	16	[5926]	GETGLOBAL	R0 K5 ; R0 := 0xae91e43b
	17	[5926]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xe4162eed]
	18	[5926]	LOADK    	R2 K7 ; R2 := "ToggleInteriorCustomization"
	19	[5926]	LOADK    	R3 K8 ; R3 := ""
	20	[5926]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	21	[5926]	JMP      	46 ; PC := 46
	22	[5927]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	23	[5927]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[5927]	GETTABLE 	R1 R1 K9 ; R1 := R1["WEAPON_INV"]
	25	[5927]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 32
	26	[5927]	JMP      	32 ; PC := 32
	27	[5927]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	28	[5927]	GETUPVAL 	R1 U0 ; R1 := U0
	29	[5927]	GETTABLE 	R1 R1 K10 ; R1 := R1["EQUIP_INV"]
	30	[5927]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 46
	31	[5927]	JMP      	46 ; PC := 46
	32	[5928]	GETGLOBAL	R0 K11 ; R0 := _T
	33	[5928]	SETTABLE 	R0 K12 K13 ; R0["InfoPopup_Data"] := nil
	34	[5929]	GETGLOBAL	R0 K11 ; R0 := _T
	35	[5929]	SETTABLE 	R0 K14 K13 ; R0["InfoPopup_Data2"] := nil
	36	[5930]	GETGLOBAL	R0 K15 ; R0 := mInventoryGrid
	37	[5930]	SETTABLE 	R0 K16 K13 ; R0["mPrevSelectedId"] := nil
	38	[5931]	GETGLOBAL	R0 K15 ; R0 := mInventoryGrid
	39	[5931]	SETTABLE 	R0 K17 K13 ; R0["mCurrentElementIndex"] := nil
	40	[5932]	GETGLOBAL	R0 K15 ; R0 := mInventoryGrid
	41	[5932]	SELF     	R0 R0 K18 ; R1 := R0; R0 := R0[0x0b35b612]
	42	[5932]	GETUPVAL 	R2 U1 ; R2 := U1
	43	[5932]	GETTABLE 	R2 R2 K19 ; R2 := R2["DECREMENT"]
	44	[5932]	OP_LOADBOOL	R3 1 0 ; R3 := true
	45	[5932]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	46	[5934]	OP_LOADBOOL	R0 1 0 ; R0 := true
	47	[5934]	RETURN   	R0 2 ; return R0 
	48	[5935]	RETURN   	R0 1 ; return 

function #178 <?:5937,5950> (37 instructions, 148 bytes at 00000211256ED440)
0 params, 4 slots, 2 upvalues, 0 locals, 15 constants, 0 functions
	1	[5938]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5938]	TEST     	R0 1 ; if R0 then PC := 9
	3	[5938]	JMP      	9 ; PC := 9
	4	[5938]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[5938]	GETGLOBAL	R1 K2 ; R1 := mChildMovie
	6	[5938]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5938]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5938]	JMP      	11 ; PC := 11
	9	[5939]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[5939]	RETURN   	R0 2 ; return R0 
	11	[5942]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	12	[5942]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5942]	GETTABLE 	R1 R1 K4 ; R1 := R1["WEAPON_INV"]
	14	[5942]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 21
	15	[5942]	JMP      	21 ; PC := 21
	16	[5942]	GETGLOBAL	R0 K3 ; R0 := mActiveState
	17	[5942]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5942]	GETTABLE 	R1 R1 K5 ; R1 := R1["EQUIP_INV"]
	19	[5942]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 35
	20	[5942]	JMP      	35 ; PC := 35
	21	[5943]	GETGLOBAL	R0 K6 ; R0 := _T
	22	[5943]	SETTABLE 	R0 K7 K8 ; R0["InfoPopup_Data"] := nil
	23	[5944]	GETGLOBAL	R0 K6 ; R0 := _T
	24	[5944]	SETTABLE 	R0 K9 K8 ; R0["InfoPopup_Data2"] := nil
	25	[5945]	GETGLOBAL	R0 K10 ; R0 := mInventoryGrid
	26	[5945]	SETTABLE 	R0 K11 K8 ; R0["mPrevSelectedId"] := nil
	27	[5946]	GETGLOBAL	R0 K10 ; R0 := mInventoryGrid
	28	[5946]	SETTABLE 	R0 K12 K8 ; R0["mCurrentElementIndex"] := nil
	29	[5947]	GETGLOBAL	R0 K10 ; R0 := mInventoryGrid
	30	[5947]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x0b35b612]
	31	[5947]	GETUPVAL 	R2 U1 ; R2 := U1
	32	[5947]	GETTABLE 	R2 R2 K14 ; R2 := R2["INCREMENT"]
	33	[5947]	OP_LOADBOOL	R3 1 0 ; R3 := true
	34	[5947]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	35	[5949]	OP_LOADBOOL	R0 1 0 ; R0 := true
	36	[5949]	RETURN   	R0 2 ; return R0 
	37	[5950]	RETURN   	R0 1 ; return 

function #179 <?:5952,5967> (55 instructions, 220 bytes at 000002112D04BDC0)
0 params, 4 slots, 1 upvalue, 0 locals, 15 constants, 1 function
	1	[5953]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[5953]	TEST     	R0 1 ; if R0 then PC := 12
	3	[5953]	JMP      	12 ; PC := 12
	4	[5953]	GETGLOBAL	R0 K1 ; R0 := mCosmeticsList
	5	[5953]	EQ       	1 R0 K2 ; if R0 == nil then PC := 12
	6	[5953]	JMP      	12 ; PC := 12
	7	[5953]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	8	[5953]	GETGLOBAL	R1 K4 ; R1 := mChildMovie
	9	[5953]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[5953]	TEST     	R0 1 ; if R0 then PC := 14
	11	[5953]	JMP      	14 ; PC := 14
	12	[5954]	OP_LOADBOOL	R0 0 0 ; R0 := false
	13	[5954]	RETURN   	R0 2 ; return R0 
	14	[5957]	GETGLOBAL	R0 K5 ; R0 := mActiveState
	15	[5957]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[5957]	GETTABLE 	R1 R1 K6 ; R1 := R1["COSMETICS"]
	17	[5957]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 25
	18	[5957]	JMP      	25 ; PC := 25
	19	[5958]	GETGLOBAL	R0 K1 ; R0 := mCosmeticsList
	20	[5958]	GETTABLE 	R0 R0 K7 ; R0 := R0["CustomizationList"]
	21	[5958]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xea061e98]
	22	[5961]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	23	[5958]	CALL     	R0 3 1 ; R0(R1,R2)
	24	[5961]	JMP      	53 ; PC := 53
	25	[5962]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	26	[5962]	GETGLOBAL	R1 K9 ; R1 := mInventoryGrid
	27	[5962]	CALL     	R0 2 2 ; R0 := R0(R1)
	28	[5962]	TEST     	R0 1 ; if R0 then PC := 53
	29	[5962]	JMP      	53 ; PC := 53
	30	[5962]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	31	[5962]	GETGLOBAL	R1 K9 ; R1 := mInventoryGrid
	32	[5962]	GETTABLE 	R1 R1 K10 ; R1 := R1["mSortMenu"]
	33	[5962]	CALL     	R0 2 2 ; R0 := R0(R1)
	34	[5962]	TEST     	R0 1 ; if R0 then PC := 53
	35	[5962]	JMP      	53 ; PC := 53
	36	[5962]	GETGLOBAL	R0 K5 ; R0 := mActiveState
	37	[5962]	GETUPVAL 	R1 U0 ; R1 := U0
	38	[5962]	GETTABLE 	R1 R1 K11 ; R1 := R1["WEAPON_INV"]
	39	[5962]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 46
	40	[5962]	JMP      	46 ; PC := 46
	41	[5962]	GETGLOBAL	R0 K5 ; R0 := mActiveState
	42	[5962]	GETUPVAL 	R1 U0 ; R1 := U0
	43	[5962]	GETTABLE 	R1 R1 K12 ; R1 := R1["EQUIP_INV"]
	44	[5962]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 53
	45	[5962]	JMP      	53 ; PC := 53
	46	[5963]	GETGLOBAL	R0 K9 ; R0 := mInventoryGrid
	47	[5963]	GETTABLE 	R0 R0 K10 ; R0 := R0["mSortMenu"]
	48	[5963]	GETTABLE 	R0 R0 K13 ; R0 := R0["mMainButton"]
	49	[5963]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x52f40f14]
	50	[5963]	OP_LOADBOOL	R2 1 0 ; R2 := true
	51	[5963]	OP_LOADBOOL	R3 1 0 ; R3 := true
	52	[5963]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	53	[5966]	OP_LOADBOOL	R0 1 0 ; R0 := true
	54	[5966]	RETURN   	R0 2 ; return R0 
	55	[5967]	RETURN   	R0 1 ; return 

function #180 <?:5969,5973> (9 instructions, 36 bytes at 00000211182C4BA0)
0 params, 2 slots, 3 upvalues, 0 locals, 1 constant, 0 functions
	1	[5970]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5970]	GETGLOBAL	R1 K0 ; R1 := mInteriorCustomization
	3	[5970]	NOT      	R1 R1 ; R1 := not R1
	4	[5970]	CALL     	R0 2 1 ; R0(R1)
	5	[5971]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[5971]	CALL     	R0 1 1 ; R0()
	7	[5972]	GETUPVAL 	R0 U2 ; R0 := U2
	8	[5972]	CALL     	R0 1 1 ; R0()
	9	[5973]	RETURN   	R0 1 ; return 

function #181 <?:5975,5978> (9 instructions, 36 bytes at 0000021131A33AA0)
1 param, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5976]	SETGLOBALHASH	R1 K0 ; mChildMovie := R1
	2	[5977]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5977]	LOADNIL  	R2 R4 ; R2 := R3 := R4 := nil
	4	[5977]	EQ       	1 R0 K1 ; if R0 == "true" then PC := 7
	5	[5977]	JMP      	7 ; PC := 7
	6	[5977]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 7
	7	[5977]	OP_LOADBOOL	R5 1 0 ; R5 := true
	8	[5977]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	9	[5978]	RETURN   	R0 1 ; return 

function #182 <?:5980,6074> (363 instructions, 1452 bytes at 0000021131A33BB0)
3 params, 15 slots, 9 upvalues, 0 locals, 61 constants, 0 functions
	1	[5981]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[5981]	GETGLOBAL	R4 K1 ; R4 := mChildMovie
	3	[5981]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[5981]	TEST     	R3 1 ; if R3 then PC := 16
	5	[5981]	JMP      	16 ; PC := 16
	6	[5982]	TEST     	R2 0 ; if not R2 then PC := 14
	7	[5982]	JMP      	14 ; PC := 14
	8	[5983]	GETGLOBAL	R3 K1 ; R3 := mChildMovie
	9	[5983]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x32302b4a]
	10	[5983]	CALL     	R3 2 1 ; R3(R4)
	11	[5984]	LOADNIL  	R3 R3 ; R3 := nil
	12	[5984]	SETGLOBALHASH	R3 K1 ; mChildMovie := R3
	13	[5984]	JMP      	16 ; PC := 16
	14	[5986]	OP_LOADBOOL	R3 0 0 ; R3 := false
	15	[5986]	RETURN   	R3 2 ; return R3 
	16	[5990]	TESTSET  	R3 R0 1 ; if R0 then PC := 20 else R3 := R0 
	17	[5990]	JMP      	20 ; PC := 20
	18	[5990]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[5990]	GETTABLE 	R3 R3 K4 ; R3 := R3["EQUIPMENT"]
	20	[5990]	SETGLOBALHASH	R3 K3 ; mActiveState := R3
	21	[5992]	OP_LOADBOOL	R3 0 0 ; R3 := false
	22	[5993]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	23	[5993]	GETUPVAL 	R5 U0 ; R5 := U0
	24	[5993]	GETTABLE 	R5 R5 K5 ; R5 := R5["ARCHWING"]
	25	[5993]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 31
	26	[5993]	JMP      	31 ; PC := 31
	27	[5994]	OP_LOADBOOL	R3 1 0 ; R3 := true
	28	[5995]	GETUPVAL 	R4 U1 ; R4 := U1
	29	[5995]	CALL     	R4 1 1 ; R4()
	30	[5995]	JMP      	51 ; PC := 51
	31	[5996]	GETGLOBAL	R4 K6 ; R4 := mLisetMode
	32	[5996]	TEST     	R4 1 ; if R4 then PC := 51
	33	[5996]	JMP      	51 ; PC := 51
	34	[5997]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	35	[5997]	GETUPVAL 	R5 U0 ; R5 := U0
	36	[5997]	GETTABLE 	R5 R5 K7 ; R5 := R5["WEAPONS"]
	37	[5997]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 43
	38	[5997]	JMP      	43 ; PC := 43
	39	[5998]	OP_LOADBOOL	R3 1 0 ; R3 := true
	40	[5999]	GETUPVAL 	R4 U2 ; R4 := U2
	41	[5999]	CALL     	R4 1 1 ; R4()
	42	[5999]	JMP      	51 ; PC := 51
	43	[6000]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	44	[6000]	GETUPVAL 	R5 U0 ; R5 := U0
	45	[6000]	GETTABLE 	R5 R5 K4 ; R5 := R5["EQUIPMENT"]
	46	[6000]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 51
	47	[6000]	JMP      	51 ; PC := 51
	48	[6001]	OP_LOADBOOL	R3 1 0 ; R3 := true
	49	[6002]	GETUPVAL 	R4 U3 ; R4 := U3
	50	[6002]	CALL     	R4 1 1 ; R4()
	51	[6006]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	52	[6006]	GETUPVAL 	R5 U0 ; R5 := U0
	53	[6006]	GETTABLE 	R5 R5 K8 ; R5 := R5["WEAPON_INV"]
	54	[6006]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 67
	55	[6006]	JMP      	67 ; PC := 67
	56	[6006]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	57	[6006]	GETUPVAL 	R5 U0 ; R5 := U0
	58	[6006]	GETTABLE 	R5 R5 K9 ; R5 := R5["EQUIP_INV"]
	59	[6006]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 67
	60	[6006]	JMP      	67 ; PC := 67
	61	[6006]	GETGLOBAL	R4 K3 ; R4 := mActiveState
	62	[6006]	GETUPVAL 	R5 U0 ; R5 := U0
	63	[6006]	GETTABLE 	R5 R5 K10 ; R5 := R5["ARCH_INV"]
	64	[6006]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 67
	65	[6006]	JMP      	67 ; PC := 67
	66	[6006]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 67
	67	[6006]	OP_LOADBOOL	R4 1 0 ; R4 := true
	68	[6007]	GETGLOBAL	R5 K11 ; R5 := mSearchBox
	69	[6007]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0x46610c50]
	70	[6007]	MOVE     	R7 R4 ; R7 := R4
	71	[6007]	CALL     	R5 3 1 ; R5(R6,R7)
	72	[6008]	TEST     	R4 0 ; if not R4 then PC := 77
	73	[6008]	JMP      	77 ; PC := 77
	74	[6009]	GETGLOBAL	R5 K11 ; R5 := mSearchBox
	75	[6009]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xb61fb39f]
	76	[6009]	CALL     	R5 2 1 ; R5(R6)
	77	[6012]	GETGLOBAL	R5 K14 ; R5 := _T
	78	[6012]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	79	[6012]	GETUPVAL 	R7 U0 ; R7 := U0
	80	[6012]	GETTABLE 	R7 R7 K8 ; R7 := R7["WEAPON_INV"]
	81	[6012]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 89
	82	[6012]	JMP      	89 ; PC := 89
	83	[6012]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	84	[6012]	GETUPVAL 	R7 U0 ; R7 := U0
	85	[6012]	GETTABLE 	R7 R7 K9 ; R7 := R7["EQUIP_INV"]
	86	[6012]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 89
	87	[6012]	JMP      	89 ; PC := 89
	88	[6012]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 89
	89	[6012]	OP_LOADBOOL	R6 1 0 ; R6 := true
	90	[6012]	SETTABLE 	R5 K15 R6 ; R5["ShowFusionPoints"] := R6
	91	[6014]	TEST     	R4 0 ; if not R4 then PC := 107
	92	[6014]	JMP      	107 ; PC := 107
	93	[6015]	GETUPVAL 	R5 U4 ; R5 := U4
	94	[6015]	GETGLOBAL	R6 K16 ; R6 := 0xae91e43b
	95	[6015]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0x6b837788]
	96	[6015]	CALL     	R6 2 2 ; R6 := R6(R7)
	97	[6015]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	98	[6015]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0xaf9fda9f]
	99	[6015]	CALL     	R7 2 0 ; R7,... := R7(R8)
	100	[6015]	CALL     	R5 0 1 ; R5(R6,...)
	101	[6016]	TEST     	R1 0 ; if not R1 then PC := 125
	102	[6016]	JMP      	125 ; PC := 125
	103	[6017]	GETUPVAL 	R5 U5 ; R5 := U5
	104	[6017]	MOVE     	R6 R1 ; R6 := R1
	105	[6017]	CALL     	R5 2 1 ; R5(R6)
	106	[6018]	JMP      	125 ; PC := 125
	107	[6019]	GETGLOBAL	R5 K3 ; R5 := mActiveState
	108	[6019]	GETUPVAL 	R6 U0 ; R6 := U0
	109	[6019]	GETTABLE 	R6 R6 K19 ; R6 := R6["SKIN_SELECTION"]
	110	[6019]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 117
	111	[6019]	JMP      	117 ; PC := 117
	112	[6019]	GETGLOBAL	R5 K3 ; R5 := mActiveState
	113	[6019]	GETUPVAL 	R6 U0 ; R6 := U0
	114	[6019]	GETTABLE 	R6 R6 K20 ; R6 := R6["ATTACHMENTS"]
	115	[6019]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 125
	116	[6019]	JMP      	125 ; PC := 125
	117	[6020]	GETUPVAL 	R5 U4 ; R5 := U4
	118	[6020]	GETGLOBAL	R6 K16 ; R6 := 0xae91e43b
	119	[6020]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0x6b837788]
	120	[6020]	CALL     	R6 2 2 ; R6 := R6(R7)
	121	[6020]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	122	[6020]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0xaf9fda9f]
	123	[6020]	CALL     	R7 2 0 ; R7,... := R7(R8)
	124	[6020]	CALL     	R5 0 1 ; R5(R6,...)
	125	[6023]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	126	[6023]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	127	[6023]	CALL     	R5 2 2 ; R5 := R5(R6)
	128	[6023]	TEST     	R5 1 ; if R5 then PC := 169
	129	[6023]	JMP      	169 ; PC := 169
	130	[6024]	GETGLOBAL	R5 K22 ; R5 := 0x64fb1586
	131	[6024]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	132	[6024]	GETUPVAL 	R7 U0 ; R7 := U0
	133	[6024]	GETTABLE 	R7 R7 K23 ; R7 := R7["RESOURCES"]
	134	[6024]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 142
	135	[6024]	JMP      	142 ; PC := 142
	136	[6024]	GETGLOBAL	R6 K3 ; R6 := mActiveState
	137	[6024]	GETUPVAL 	R7 U0 ; R7 := U0
	138	[6024]	GETTABLE 	R7 R7 K24 ; R7 := R7["INTRINSICS"]
	139	[6024]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 142
	140	[6024]	JMP      	142 ; PC := 142
	141	[6024]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 142
	142	[6024]	OP_LOADBOOL	R6 1 0 ; R6 := true
	143	[6024]	CALL     	R5 2 2 ; R5 := R5(R6)
	144	[6025]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	145	[6025]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	146	[6025]	LOADK    	R8 K26 ; R8 := "EnableColorCorrection"
	147	[6025]	MOVE     	R9 R5 ; R9 := R5
	148	[6025]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	149	[6026]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	150	[6026]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	151	[6026]	LOADK    	R8 K27 ; R8 := "EnableBackgroundFade"
	152	[6026]	MOVE     	R9 R5 ; R9 := R5
	153	[6026]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	154	[6027]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	155	[6027]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	156	[6027]	LOADK    	R8 K28 ; R8 := "EnableBackgroundBlur"
	157	[6027]	MOVE     	R9 R5 ; R9 := R5
	158	[6027]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	159	[6028]	GETGLOBAL	R6 K21 ; R6 := mVignetteMovie
	160	[6028]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0xe4162eed]
	161	[6028]	LOADK    	R8 K29 ; R8 := "SetAlpha"
	162	[6028]	TEST     	R5 0 ; if not R5 then PC := 167
	163	[6028]	JMP      	167 ; PC := 167
	164	[6028]	LOADK    	R9 K30 ; R9 := "100,0"
	165	[6028]	TEST     	R9 1 ; if R9 then PC := 168
	166	[6028]	JMP      	168 ; PC := 168
	167	[6028]	LOADK    	R9 K31 ; R9 := "50,80"
	168	[6028]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	169	[6031]	TEST     	R1 0 ; if not R1 then PC := 186
	170	[6031]	JMP      	186 ; PC := 186
	171	[6032]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	172	[6032]	GETTABLE 	R7 R1 K32 ; R7 := R1["SetupFunc"]
	173	[6032]	CALL     	R6 2 2 ; R6 := R6(R7)
	174	[6032]	TEST     	R6 1 ; if R6 then PC := 178
	175	[6032]	JMP      	178 ; PC := 178
	176	[6033]	GETTABLE 	R6 R1 K33 ; R6 := R1[0xf5ac0f11]
	177	[6033]	CALL     	R6 1 1 ; R6()
	178	[6035]	GETTABLE 	R6 R1 K34 ; R6 := R1["Screen"]
	179	[6035]	TEST     	R6 0 ; if not R6 then PC := 186
	180	[6035]	JMP      	186 ; PC := 186
	181	[6036]	GETGLOBAL	R6 K16 ; R6 := 0xae91e43b
	182	[6036]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x1fd6abd0]
	183	[6036]	GETTABLE 	R8 R1 K34 ; R8 := R1["Screen"]
	184	[6036]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	185	[6036]	SETGLOBALHASH	R6 K1 ; mChildMovie := R6
	186	[6040]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	187	[6040]	GETGLOBAL	R7 K1 ; R7 := mChildMovie
	188	[6040]	CALL     	R6 2 2 ; R6 := R6(R7)
	189	[6041]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	190	[6041]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0xbc838db9]
	191	[6041]	NOT      	R9 R6 ; R9 := not R6
	192	[6041]	CALL     	R7 3 1 ; R7(R8,R9)
	193	[6042]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	194	[6042]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	195	[6042]	LOADK    	R9 K38 ; R9 := "TopLeftContainer.Equipment"
	196	[6042]	LOADK    	R10 := 11.000000
	197	[6042]	MOVE     	R11 R3 ; R11 := R3
	198	[6042]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	199	[6043]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	200	[6043]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	201	[6043]	LOADK    	R9 K39 ; R9 := "TopLeftContainer.Inventory"
	202	[6043]	LOADK    	R10 := 11.000000
	203	[6043]	MOVE     	R11 R4 ; R11 := R4
	204	[6043]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	205	[6044]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	206	[6044]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	207	[6044]	LOADK    	R9 K40 ; R9 := "TopLeftContainer.Cosmetics"
	208	[6044]	LOADK    	R10 := 11.000000
	209	[6044]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	210	[6044]	GETUPVAL 	R12 U0 ; R12 := U0
	211	[6044]	GETTABLE 	R12 R12 K41 ; R12 := R12["COSMETICS"]
	212	[6044]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 225
	213	[6044]	JMP      	225 ; PC := 225
	214	[6044]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	215	[6044]	GETUPVAL 	R12 U0 ; R12 := U0
	216	[6044]	GETTABLE 	R12 R12 K20 ; R12 := R12["ATTACHMENTS"]
	217	[6044]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 225
	218	[6044]	JMP      	225 ; PC := 225
	219	[6044]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	220	[6044]	GETUPVAL 	R12 U0 ; R12 := U0
	221	[6044]	GETTABLE 	R12 R12 K19 ; R12 := R12["SKIN_SELECTION"]
	222	[6044]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 225
	223	[6044]	JMP      	225 ; PC := 225
	224	[6044]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 225
	225	[6044]	OP_LOADBOOL	R11 1 0 ; R11 := true
	226	[6044]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	227	[6045]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	228	[6045]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	229	[6045]	LOADK    	R9 K42 ; R9 := "TopLeftContainer.CurrencyBar"
	230	[6045]	LOADK    	R10 := 11.000000
	231	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	232	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	233	[6045]	GETTABLE 	R12 R12 K4 ; R12 := R12["EQUIPMENT"]
	234	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	235	[6045]	JMP      	252 ; PC := 252
	236	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	237	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	238	[6045]	GETTABLE 	R12 R12 K7 ; R12 := R12["WEAPONS"]
	239	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	240	[6045]	JMP      	252 ; PC := 252
	241	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	242	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	243	[6045]	GETTABLE 	R12 R12 K8 ; R12 := R12["WEAPON_INV"]
	244	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	245	[6045]	JMP      	252 ; PC := 252
	246	[6045]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	247	[6045]	GETUPVAL 	R12 U0 ; R12 := U0
	248	[6045]	GETTABLE 	R12 R12 K9 ; R12 := R12["EQUIP_INV"]
	249	[6045]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 252
	250	[6045]	JMP      	252 ; PC := 252
	251	[6045]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 252
	252	[6045]	OP_LOADBOOL	R11 1 0 ; R11 := true
	253	[6045]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	254	[6046]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	255	[6046]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	256	[6046]	LOADK    	R9 K43 ; R9 := "TopRightContainer.UpgradedDecoration"
	257	[6046]	LOADK    	R10 := 11.000000
	258	[6046]	MOVE     	R11 R6 ; R11 := R6
	259	[6046]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	260	[6047]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	261	[6047]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	262	[6047]	LOADK    	R9 K44 ; R9 := "BottomRightContainer"
	263	[6047]	LOADK    	R10 := 11.000000
	264	[6047]	MOVE     	R11 R6 ; R11 := R6
	265	[6047]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	266	[6048]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	267	[6048]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	268	[6048]	LOADK    	R9 K45 ; R9 := "BottomRightContainer.Lines"
	269	[6048]	LOADK    	R10 := 11.000000
	270	[6048]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	271	[6048]	GETUPVAL 	R12 U0 ; R12 := U0
	272	[6048]	GETTABLE 	R12 R12 K5 ; R12 := R12["ARCHWING"]
	273	[6048]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 280
	274	[6048]	JMP      	280 ; PC := 280
	275	[6048]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	276	[6048]	GETUPVAL 	R12 U0 ; R12 := U0
	277	[6048]	GETTABLE 	R12 R12 K10 ; R12 := R12["ARCH_INV"]
	278	[6048]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 281
	279	[6048]	JMP      	281 ; PC := 281
	280	[6048]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 281
	281	[6048]	OP_LOADBOOL	R11 1 0 ; R11 := true
	282	[6048]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	283	[6049]	GETGLOBAL	R7 K16 ; R7 := 0xae91e43b
	284	[6049]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xaade900e]
	285	[6049]	LOADK    	R9 K46 ; R9 := "BottomRightContainer.Capacity"
	286	[6049]	LOADK    	R10 := 11.000000
	287	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	288	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	289	[6049]	GETTABLE 	R12 R12 K4 ; R12 := R12["EQUIPMENT"]
	290	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	291	[6049]	JMP      	308 ; PC := 308
	292	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	293	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	294	[6049]	GETTABLE 	R12 R12 K7 ; R12 := R12["WEAPONS"]
	295	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	296	[6049]	JMP      	308 ; PC := 308
	297	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	298	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	299	[6049]	GETTABLE 	R12 R12 K8 ; R12 := R12["WEAPON_INV"]
	300	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	301	[6049]	JMP      	308 ; PC := 308
	302	[6049]	GETGLOBAL	R11 K3 ; R11 := mActiveState
	303	[6049]	GETUPVAL 	R12 U0 ; R12 := U0
	304	[6049]	GETTABLE 	R12 R12 K9 ; R12 := R12["EQUIP_INV"]
	305	[6049]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 308
	306	[6049]	JMP      	308 ; PC := 308
	307	[6049]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 308
	308	[6049]	OP_LOADBOOL	R11 1 0 ; R11 := true
	309	[6049]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	310	[6051]	LOADK    	R7 K47 ; R7 := 0.350000
	311	[6052]	LOADK    	R8 := 0.250000
	312	[6053]	LOADK    	R9 K48 ; R9 := 0.200000
	313	[6054]	GETGLOBAL	R10 K3 ; R10 := mActiveState
	314	[6054]	GETUPVAL 	R11 U0 ; R11 := U0
	315	[6054]	GETTABLE 	R11 R11 K49 ; R11 := R11["SYSTEMS"]
	316	[6054]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 320
	317	[6054]	JMP      	320 ; PC := 320
	318	[6055]	LOADK    	R8 := 0.000000
	319	[6056]	LOADK    	R9 := 0.000000
	320	[6058]	GETGLOBAL	R10 K50 ; R10 := 0x62fbce7a
	321	[6058]	SELF     	R10 R10 K51 ; R11 := R10; R10 := R10[0x830eea67]
	322	[6058]	GETGLOBAL	R12 K52 ; R12 := 0x6c97a788
	323	[6058]	GETTABLE 	R12 R12 K53 ; R12 := R12["VISIBILITY_CENTER"]
	324	[6058]	MOVE     	R13 R7 ; R13 := R7
	325	[6058]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	326	[6059]	GETGLOBAL	R10 K50 ; R10 := 0x62fbce7a
	327	[6059]	SELF     	R10 R10 K51 ; R11 := R10; R10 := R10[0x830eea67]
	328	[6059]	GETGLOBAL	R12 K52 ; R12 := 0x6c97a788
	329	[6059]	GETTABLE 	R12 R12 K54 ; R12 := R12["VISIBILITY_SIZE"]
	330	[6059]	MOVE     	R13 R8 ; R13 := R8
	331	[6059]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	332	[6060]	GETGLOBAL	R10 K50 ; R10 := 0x62fbce7a
	333	[6060]	SELF     	R10 R10 K51 ; R11 := R10; R10 := R10[0x830eea67]
	334	[6060]	GETGLOBAL	R12 K52 ; R12 := 0x6c97a788
	335	[6060]	GETTABLE 	R12 R12 K55 ; R12 := R12["VISIBILITY_FADE_SIZE"]
	336	[6060]	MOVE     	R13 R9 ; R13 := R9
	337	[6060]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	338	[6062]	TEST     	R6 0 ; if not R6 then PC := 342
	339	[6062]	JMP      	342 ; PC := 342
	340	[6063]	GETUPVAL 	R10 U6 ; R10 := U6
	341	[6063]	CALL     	R10 1 1 ; R10()
	342	[6066]	GETUPVAL 	R10 U7 ; R10 := U7
	343	[6066]	CALL     	R10 1 1 ; R10()
	344	[6068]	GETUPVAL 	R10 U8 ; R10 := U8
	345	[6068]	CALL     	R10 1 1 ; R10()
	346	[6069]	GETGLOBAL	R10 K56 ; R10 := mStats
	347	[6069]	GETTABLE 	R10 R10 K57 ; R10 := R10["mIsVisible"]
	348	[6069]	TEST     	R10 0 ; if not R10 then PC := 361
	349	[6069]	JMP      	361 ; PC := 361
	350	[6069]	GETGLOBAL	R10 K3 ; R10 := mActiveState
	351	[6069]	GETUPVAL 	R11 U0 ; R11 := U0
	352	[6069]	GETTABLE 	R11 R11 K8 ; R11 := R11["WEAPON_INV"]
	353	[6069]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 361
	354	[6069]	JMP      	361 ; PC := 361
	355	[6070]	GETGLOBAL	R10 K56 ; R10 := mStats
	356	[6070]	SELF     	R10 R10 K58 ; R11 := R10; R10 := R10[0xf87811f6]
	357	[6070]	GETGLOBAL	R12 K59 ; R12 := mShipSuit
	358	[6070]	GETGLOBAL	R13 K60 ; R13 := mShipAvatar
	359	[6070]	OP_LOADBOOL	R14 1 0 ; R14 := true
	360	[6070]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	361	[6073]	OP_LOADBOOL	R10 1 0 ; R10 := true
	362	[6073]	RETURN   	R10 2 ; return R10 
	363	[6074]	RETURN   	R0 1 ; return 

function #183 <?:6076,6078> (6 instructions, 24 bytes at 0000021130242770)
0 params, 5 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[6077]	GETGLOBAL	R0 K0 ; R0 := mStats
	2	[6077]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf87811f6]
	3	[6077]	LOADNIL  	R2 R3 ; R2 := R3 := nil
	4	[6077]	OP_LOADBOOL	R4 1 0 ; R4 := true
	5	[6077]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	6	[6078]	RETURN   	R0 1 ; return 

function #184 <?:6080,6100> (58 instructions, 232 bytes at 0000021130242800)
1 param, 11 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[6081]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6081]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[6081]	MOVE     	R3 R0 ; R3 := R0
	4	[6081]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6081]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	6	[6083]	NEWTABLE 	R2 0 4 ; R2 := {}
	7	[6084]	SETTABLE 	R2 K1 K2 ; R2["CustomEntry"] := true
	8	[6085]	GETGLOBAL	R3 K4 ; R3 := 0x5f0788c4
	9	[6085]	GETGLOBAL	R4 K5 ; R4 := 0x603636ad
	10	[6085]	LOADK    	R5 K6 ; R5 := "/Lotus/Language/Railjack/ItemInventory_SellingShip"
	11	[6085]	MOVE     	R6 R1 ; R6 := R1
	12	[6085]	LOADK    	R7 K7 ; R7 := "Title"
	13	[6085]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	14	[6085]	NEWTABLE 	R6 0 0 ; R6 := {}
	15	[6085]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	16	[6085]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	17	[6085]	SETTABLE 	R2 K3 R3 ; R2["Name"] := R3
	18	[6086]	GETGLOBAL	R3 K9 ; R3 := 0xae91e43b
	19	[6086]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x42b04007]
	20	[6086]	LOADK    	R5 K6 ; R5 := "/Lotus/Language/Railjack/ItemInventory_SellingShip"
	21	[6086]	MOVE     	R6 R1 ; R6 := R1
	22	[6086]	LOADK    	R7 K11 ; R7 := "Desc"
	23	[6086]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	24	[6086]	OP_LOADBOOL	R6 1 0 ; R6 := true
	25	[6086]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	26	[6086]	SETTABLE 	R2 K8 R3 ; R2["LocalizedDesc"] := R3
	27	[6087]	SETTABLE 	R2 K12 K2 ; R2["TintName"] := true
	28	[6090]	LOADK    	R3 K13 ; R3 := "TopLeftContainer.CurrencyBar.Display1."
	29	[6090]	MOVE     	R4 R1 ; R4 := R1
	30	[6090]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	31	[6091]	GETUPVAL 	R3 U1 ; R3 := U1
	32	[6091]	GETTABLE 	R3 R3 K14 ; R3 := R3[0xfc3fed1f]
	33	[6091]	GETGLOBAL	R4 K9 ; R4 := 0xae91e43b
	34	[6091]	MOVE     	R5 R2 ; R5 := R2
	35	[6092]	GETGLOBAL	R6 K9 ; R6 := 0xae91e43b
	36	[6092]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0x91a24e4b]
	37	[6092]	MOVE     	R8 R1 ; R8 := R1
	38	[6092]	LOADK    	R9 := 2.000000
	39	[6092]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	40	[6093]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	41	[6093]	SELF     	R7 R7 K15 ; R8 := R7; R7 := R7[0x91a24e4b]
	42	[6093]	MOVE     	R9 R1 ; R9 := R1
	43	[6093]	LOADK    	R10 := 3.000000
	44	[6093]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	45	[6094]	LOADK    	R8 := 50.000000
	46	[6095]	LOADK    	R9 := 50.000000
	47	[6091]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	48	[6097]	GETGLOBAL	R3 K16 ; R3 := _T
	49	[6097]	SETTABLE 	R3 K17 R2 ; R3["InfoPopup_Data"] := R2
	50	[6099]	GETGLOBAL	R3 K9 ; R3 := 0xae91e43b
	51	[6099]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xf64b7262]
	52	[6099]	MOVE     	R5 R1 ; R5 := R1
	53	[6099]	LOADK    	R6 K19 ; R6 := "Icon"
	54	[6099]	LOADK    	R7 := 9.000000
	55	[6099]	GETGLOBAL	R8 K20 ; R8 := mColors
	56	[6099]	GETTABLE 	R8 R8 K21 ; R8 := R8["FloatingContentHighlight"]
	57	[6099]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	58	[6100]	RETURN   	R0 1 ; return 

function #185 <?:6102,6109> (19 instructions, 76 bytes at 0000021128E7D610)
1 param, 8 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[6103]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6103]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[6103]	MOVE     	R3 R0 ; R3 := R0
	4	[6103]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6103]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	6	[6105]	GETGLOBAL	R2 K1 ; R2 := _T
	7	[6105]	SETTABLE 	R2 K2 K3 ; R2["InfoPopup_Data"] := nil
	8	[6107]	LOADK    	R2 K4 ; R2 := "TopLeftContainer.CurrencyBar.Display1."
	9	[6107]	MOVE     	R3 R1 ; R3 := R1
	10	[6107]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	11	[6108]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	12	[6108]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xf64b7262]
	13	[6108]	MOVE     	R4 R1 ; R4 := R1
	14	[6108]	LOADK    	R5 K7 ; R5 := "Icon"
	15	[6108]	LOADK    	R6 := 9.000000
	16	[6108]	GETGLOBAL	R7 K8 ; R7 := mColors
	17	[6108]	GETTABLE 	R7 R7 K9 ; R7 := R7["FloatingContent"]
	18	[6108]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	19	[6109]	RETURN   	R0 1 ; return 

function #186 <?:6111,6114> (9 instructions, 36 bytes at 000002112F67AA70)
1 param, 4 slots, 2 upvalues, 0 locals, 1 constant, 0 functions
	1	[6112]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6112]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[6112]	MOVE     	R3 R0 ; R3 := R0
	4	[6112]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6112]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	6	[6113]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[6113]	MOVE     	R3 R1 ; R3 := R1
	8	[6113]	CALL     	R2 2 1 ; R2(R3)
	9	[6114]	RETURN   	R0 1 ; return 

function #187 <?:6116,6117> (1 instruction, 4 bytes at 000002112F6C2AB0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6117]	RETURN   	R0 1 ; return 

function #188 <?:6119,6123> (15 instructions, 60 bytes at 000002112F6C2B40)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6120]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6120]	GETGLOBAL	R2 K1 ; R2 := mStats
	3	[6120]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6120]	TEST     	R1 1 ; if R1 then PC := 15
	5	[6120]	JMP      	15 ; PC := 15
	6	[6120]	GETGLOBAL	R1 K2 ; R1 := mInputBlocked
	7	[6120]	TEST     	R1 1 ; if R1 then PC := 15
	8	[6120]	JMP      	15 ; PC := 15
	9	[6121]	GETGLOBAL	R1 K1 ; R1 := mStats
	10	[6121]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe3d8d292]
	11	[6121]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	12	[6121]	MOVE     	R4 R0 ; R4 := R0
	13	[6121]	CALL     	R3 2 0 ; R3,... := R3(R4)
	14	[6121]	CALL     	R1 0 1 ; R1(R2,...)
	15	[6123]	RETURN   	R0 1 ; return 

function #189 <?:6125,6127> (3 instructions, 12 bytes at 000002112EA85850)
1 param, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[6126]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[6126]	SETTABLE 	R1 K1 K2 ; R1["InfoPopup_Data"] := nil
	3	[6127]	RETURN   	R0 1 ; return 

function #190 <?:6129,6135> (30 instructions, 120 bytes at 000002112E4234F0)
1 param, 9 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[6130]	EQ       	0 R0 K0 ; if R0 ~= "true" then PC := 17
	2	[6130]	JMP      	17 ; PC := 17
	3	[6131]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	4	[6131]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[6131]	LOADK    	R3 K3 ; R3 := "_root"
	6	[6131]	LOADK    	R4 := 0.000000
	7	[6131]	NEWTABLE 	R5 1 0 ; R5 := {}
	8	[6131]	LOADK    	R6 := 10.000000
	9	[6131]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	10	[6131]	NEWTABLE 	R6 1 0 ; R6 := {}
	11	[6131]	LOADK    	R7 := 0.000000
	12	[6131]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	13	[6131]	LOADK    	R7 K5 ; R7 := 0.150000
	14	[6131]	LOADK    	R8 := 0.000000
	15	[6131]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	16	[6131]	JMP      	30 ; PC := 30
	17	[6133]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	18	[6133]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	19	[6133]	LOADK    	R3 K3 ; R3 := "_root"
	20	[6133]	LOADK    	R4 := 2.000000
	21	[6133]	NEWTABLE 	R5 1 0 ; R5 := {}
	22	[6133]	LOADK    	R6 := 10.000000
	23	[6133]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	24	[6133]	NEWTABLE 	R6 1 0 ; R6 := {}
	25	[6133]	LOADK    	R7 := 100.000000
	26	[6133]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	27	[6133]	LOADK    	R7 K5 ; R7 := 0.150000
	28	[6133]	LOADK    	R8 := 0.000000
	29	[6133]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	30	[6135]	RETURN   	R0 1 ; return 

function #191 <?:6137,6141> (4 instructions, 16 bytes at 000002111EC4FAF0)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[6138]	SETGLOBALHASH	R0 K0 ; mHandleCanBeClosedCallback := R0
	2	[6140]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[6140]	RETURN   	R1 2 ; return R1 
	4	[6141]	RETURN   	R0 1 ; return 

function #192 <?:6143,6145> (3 instructions, 12 bytes at 000002111EC4FB80)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6144]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6144]	RETURN   	R0 2 ; return R0 
	3	[6145]	RETURN   	R0 1 ; return 

function #193 <?:6147,6149> (3 instructions, 12 bytes at 0000021191817680)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6148]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6148]	RETURN   	R0 2 ; return R0 
	3	[6149]	RETURN   	R0 1 ; return 

function #194 <?:6151,6153> (3 instructions, 12 bytes at 0000021191817710)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6152]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6152]	RETURN   	R0 2 ; return R0 
	3	[6153]	RETURN   	R0 1 ; return 

function #195 <?:6155,6157> (3 instructions, 12 bytes at 00000211918177A0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6156]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[6156]	RETURN   	R0 2 ; return R0 
	3	[6157]	RETURN   	R0 1 ; return 

function #196 <?:6159,6161> (4 instructions, 16 bytes at 000002112DA46B80)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6160]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6160]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[6160]	CALL     	R0 2 1 ; R0(R1)
	4	[6161]	RETURN   	R0 1 ; return 
