
main <?:0,0> (1758 instructions, 7032 bytes at 000002112AC1FF70)
0+ params, 202 slots, 0 upvalues, 0 locals, 346 constants, 300 functions
	1	[121]	GETGLOBAL	R0 K0 ; R0 := 0x7ed0a956
	2	[121]	LOADK    	R1 K1 ; R1 := "/Lotus/Types/Friendly/PlayerControllable/ControllableDrifterTennoAvatar"
	3	[121]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[123]	GETGLOBAL	R1 K2 ; R1 := 0x2d0fad09
	5	[123]	LOADK    	R2 K3 ; R2 := "Lotus.Interface.StoreItemUtilities"
	6	[123]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[124]	GETGLOBAL	R2 K2 ; R2 := 0x2d0fad09
	8	[124]	LOADK    	R3 K4 ; R3 := "Lotus.Interface.LotusUtilities"
	9	[124]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[125]	GETGLOBAL	R3 K2 ; R3 := 0x2d0fad09
	11	[125]	LOADK    	R4 K5 ; R4 := "EE.Interface.Utilities"
	12	[125]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[126]	GETGLOBAL	R4 K2 ; R4 := 0x2d0fad09
	14	[126]	LOADK    	R5 K6 ; R5 := "Lotus.Interface.UIUtilities"
	15	[126]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[127]	GETGLOBAL	R5 K2 ; R5 := 0x2d0fad09
	17	[127]	LOADK    	R6 K7 ; R6 := "Lotus.Interface.LoadoutUtilities"
	18	[127]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[128]	GETGLOBAL	R6 K2 ; R6 := 0x2d0fad09
	20	[128]	LOADK    	R7 K8 ; R7 := "Lotus.Interface.UIStyleUtilities"
	21	[128]	CALL     	R6 2 2 ; R6 := R6(R7)
	22	[129]	GETGLOBAL	R7 K2 ; R7 := 0x2d0fad09
	23	[129]	LOADK    	R8 K9 ; R8 := "Lotus.Interface.Libs.PreviewLinkUtilities"
	24	[129]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[131]	GETGLOBAL	R8 K2 ; R8 := 0x2d0fad09
	26	[131]	LOADK    	R9 K10 ; R9 := "Lotus.Interface.Components.StatCompare"
	27	[131]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[132]	GETGLOBAL	R9 K11 ; R9 := 0xb009bbc6
	29	[132]	LOADK    	R10 K12 ; R10 := "/Lotus/Types/Game/Store/ProductsManifest"
	30	[132]	CALL     	R9 2 2 ; R9 := R9(R10)
	31	[134]	NEWTABLE 	R10 0 0 ; R10 := {}
	32	[134]	SETGLOBALHASH	R10 K13 ; LOADOUT_SLOTS := R10
	33	[135]	LOADNIL  	R10 R10 ; R10 := nil
	34	[135]	SETGLOBALHASH	R10 K14 ; mUpsellHelper := R10
	35	[136]	NEWTABLE 	R10 0 2 ; R10 := {}
	36	[136]	SETTABLE 	R10 K16 K17 ; R10["Current"] := 1.000000
	37	[136]	NEWTABLE 	R11 3 0 ; R11 := {}
	38	[136]	LOADK    	R12 K19 ; R12 := "/Lotus/Language/Menu/Cosmetics_None"
	39	[136]	LOADK    	R13 K20 ; R13 := "/Lotus/Language/Menu/PvpTeam1"
	40	[136]	LOADK    	R14 K21 ; R14 := "/Lotus/Language/Menu/PvpTeam2"
	41	[136]	SETLIST  	R11 3 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 3
	42	[136]	SETTABLE 	R10 K18 R11 ; R10["Types"] := R11
	43	[136]	SETGLOBALHASH	R10 K15 ; mPvpTeams := R10
	44	[137]	NEWTABLE 	R10 0 3 ; R10 := {}
	45	[137]	SETTABLE 	R10 K23 K24 ; R10["mTimerMgr"] := nil
	46	[137]	SETTABLE 	R10 K25 K24 ; R10["mRedrawLoadOutTimerId"] := nil
	47	[137]	SETTABLE 	R10 K26 K24 ; R10["mRedrawItemsGridTimerId"] := nil
	48	[137]	SETGLOBALHASH	R10 K22 ; mTimerTable := R10
	49	[138]	OP_LOADBOOL	R10 0 0 ; R10 := false
	50	[138]	SETGLOBALHASH	R10 K27 ; mInitialized := R10
	51	[139]	OP_LOADBOOL	R10 1 0 ; R10 := true
	52	[139]	SETGLOBALHASH	R10 K28 ; mInputBlocked := R10
	53	[140]	LOADNIL  	R10 R10 ; R10 := nil
	54	[140]	SETGLOBALHASH	R10 K29 ; mPlayerProfile := R10
	55	[141]	LOADNIL  	R10 R10 ; R10 := nil
	56	[141]	SETGLOBALHASH	R10 K30 ; mInventory := R10
	57	[142]	NEWTABLE 	R10 0 0 ; R10 := {}
	58	[142]	SETGLOBALHASH	R10 K31 ; mCurrentLoadout := R10
	59	[143]	NEWTABLE 	R10 0 0 ; R10 := {}
	60	[143]	SETGLOBALHASH	R10 K32 ; mLists := R10
	61	[144]	LOADNIL  	R10 R10 ; R10 := nil
	62	[144]	SETGLOBALHASH	R10 K33 ; mItemsGrid := R10
	63	[145]	LOADNIL  	R10 R10 ; R10 := nil
	64	[145]	SETGLOBALHASH	R10 K34 ; mSortedCosmetics := R10
	65	[146]	NEWTABLE 	R10 0 11 ; R10 := {}
	66	[146]	SETTABLE 	R10 K36 K24 ; R10["rootPos"] := nil
	67	[146]	SETTABLE 	R10 K37 K24 ; R10["forward"] := nil
	68	[146]	SETTABLE 	R10 K38 K39 ; R10["currZoom"] := 0.000000
	69	[146]	SETTABLE 	R10 K40 K41 ; R10["currPan"] := 0.600000
	70	[146]	SETTABLE 	R10 K42 K39 ; R10["clampedPan"] := 0.000000
	71	[146]	SETTABLE 	R10 K43 K41 ; R10["DefaultPan"] := 0.600000
	72	[146]	SETTABLE 	R10 K44 K45 ; R10["MaxPan"] := 0.800000
	73	[146]	SETTABLE 	R10 K46 K47 ; R10["MaxZoom"] := 2.000000
	74	[146]	SETTABLE 	R10 K48 K47 ; R10["LerpScale"] := 2.000000
	75	[146]	SETTABLE 	R10 K49 K50 ; R10["ConstantUpdate"] := true
	76	[146]	SETTABLE 	R10 K51 K39 ; R10["mRightStickZoomValue"] := 0.000000
	77	[146]	SETGLOBALHASH	R10 K35 ; mCameraTable := R10
	78	[147]	NEWTABLE 	R10 0 7 ; R10 := {}
	79	[147]	SETTABLE 	R10 K53 K24 ; R10["Element"] := nil
	80	[147]	SETTABLE 	R10 K54 K24 ; R10["Item"] := nil
	81	[147]	SETTABLE 	R10 K55 K24 ; R10["Cosmetic"] := nil
	82	[147]	SETTABLE 	R10 K56 K24 ; R10["CosmeticItem"] := nil
	83	[147]	SETTABLE 	R10 K57 K24 ; R10["CosmeticPreviousValue"] := nil
	84	[147]	SETTABLE 	R10 K58 K24 ; R10["Consumable"] := nil
	85	[147]	SETTABLE 	R10 K59 K24 ; R10["Emote"] := nil
	86	[147]	SETGLOBALHASH	R10 K52 ; mSelected := R10
	87	[148]	OP_LOADBOOL	R10 0 0 ; R10 := false
	88	[148]	SETGLOBALHASH	R10 K60 ; mViewingConsumables := R10
	89	[149]	NEWTABLE 	R10 0 0 ; R10 := {}
	90	[149]	SETGLOBALHASH	R10 K61 ; mButtons := R10
	91	[150]	NEWTABLE 	R10 0 5 ; R10 := {}
	92	[150]	SETTABLE 	R10 K63 K64 ; R10["Mode"] := 6.000000
	93	[150]	SETTABLE 	R10 K65 K64 ; R10["SuitAppearance"] := 6.000000
	94	[150]	SETTABLE 	R10 K66 K64 ; R10["PvpTeam"] := 6.000000
	95	[150]	SETTABLE 	R10 K67 K64 ; R10["Rotate"] := 6.000000
	96	[150]	SETTABLE 	R10 K68 K64 ; R10["Hints"] := 6.000000
	97	[150]	SETGLOBALHASH	R10 K62 ; mButtonIndices := R10
	98	[151]	NEWTABLE 	R10 0 0 ; R10 := {}
	99	[151]	SETGLOBALHASH	R10 K69 ; mCosmeticsLabels := R10
	100	[152]	LOADNIL  	R10 R10 ; R10 := nil
	101	[152]	SETGLOBALHASH	R10 K70 ; mSuitType := R10
	102	[153]	LOADNIL  	R10 R10 ; R10 := nil
	103	[153]	SETGLOBALHASH	R10 K71 ; mSentinelType := R10
	104	[154]	OP_LOADBOOL	R10 0 0 ; R10 := false
	105	[154]	SETGLOBALHASH	R10 K72 ; mConsumablesChanged := R10
	106	[155]	OP_LOADBOOL	R10 0 0 ; R10 := false
	107	[155]	SETGLOBALHASH	R10 K73 ; mEmotesChanged := R10
	108	[156]	OP_LOADBOOL	R10 0 0 ; R10 := false
	109	[156]	SETGLOBALHASH	R10 K74 ; mSeenRandomizeConfirm := R10
	110	[157]	LOADNIL  	R10 R10 ; R10 := nil
	111	[157]	SETGLOBALHASH	R10 K75 ; mHandleCanBeClosedCallback := R10
	112	[158]	LOADNIL  	R10 R10 ; R10 := nil
	113	[158]	SETGLOBALHASH	R10 K76 ; mChildMovie := R10
	114	[159]	LOADNIL  	R10 R10 ; R10 := nil
	115	[159]	SETGLOBALHASH	R10 K77 ; mEvoMovie := R10
	116	[160]	LOADNIL  	R10 R10 ; R10 := nil
	117	[160]	SETGLOBALHASH	R10 K78 ; mPurchasePopup := R10
	118	[161]	OP_LOADBOOL	R10 0 0 ; R10 := false
	119	[161]	SETGLOBALHASH	R10 K79 ; mRePopulateCosmetics := R10
	120	[162]	OP_LOADBOOL	R10 0 0 ; R10 := false
	121	[162]	SETGLOBALHASH	R10 K80 ; mShowVehicles := R10
	122	[163]	LOADNIL  	R10 R10 ; R10 := nil
	123	[163]	SETGLOBALHASH	R10 K81 ; mPrevSelection := R10
	124	[164]	LOADNIL  	R10 R10 ; R10 := nil
	125	[164]	SETGLOBALHASH	R10 K82 ; mPendingSelection := R10
	126	[165]	LOADNIL  	R10 R10 ; R10 := nil
	127	[165]	SETGLOBALHASH	R10 K83 ; mPendingItems := R10
	128	[166]	LOADNIL  	R10 R10 ; R10 := nil
	129	[167]	NEWTABLE 	R11 0 3 ; R11 := {}
	130	[167]	SETTABLE 	R11 K85 K39 ; R11["LS_NONE"] := 0.000000
	131	[167]	SETTABLE 	R11 K86 K17 ; R11["LS_LOADING"] := 1.000000
	132	[167]	SETTABLE 	R11 K87 K47 ; R11["LS_DONE"] := 2.000000
	133	[167]	SETGLOBALHASH	R11 K84 ; LoaderState := R11
	134	[168]	NEWTABLE 	R11 0 5 ; R11 := {}
	135	[168]	SETTABLE 	R11 K89 K24 ; R11["mSelectionLoader"] := nil
	136	[168]	SETTABLE 	R11 K90 K24 ; R11["mCosmeticsLoader"] := nil
	137	[168]	SETTABLE 	R11 K91 K24 ; R11["mSlotLoader"] := nil
	138	[168]	SETTABLE 	R11 K92 K24 ; R11["mConsumablesLoader"] := nil
	139	[168]	SETTABLE 	R11 K93 K94 ; R11["mQueueEquipItem"] := false
	140	[168]	SETGLOBALHASH	R11 K88 ; mLoaders := R11
	141	[169]	NEWTABLE 	R11 0 3 ; R11 := {}
	142	[169]	NEWTABLE 	R12 0 0 ; R12 := {}
	143	[169]	SETTABLE 	R11 K96 R12 ; R11["Items"] := R12
	144	[169]	NEWTABLE 	R12 0 0 ; R12 := {}
	145	[169]	SETTABLE 	R11 K97 R12 ; R11["SlotInfo"] := R12
	146	[169]	NEWTABLE 	R12 0 0 ; R12 := {}
	147	[169]	SETTABLE 	R11 K98 R12 ; R11["Cosmetics"] := R12
	148	[169]	SETGLOBALHASH	R11 K95 ; mPendingRandomizeInfo := R11
	149	[170]	LOADNIL  	R11 R11 ; R11 := nil
	150	[170]	SETGLOBALHASH	R11 K99 ; mConsumablesInstance := R11
	151	[171]	LOADNIL  	R11 R11 ; R11 := nil
	152	[171]	SETGLOBALHASH	R11 K100 ; mTennoWayInstance := R11
	153	[172]	LOADNIL  	R11 R11 ; R11 := nil
	154	[172]	SETGLOBALHASH	R11 K101 ; mArsenalConsole := R11
	155	[173]	NEWTABLE 	R11 0 3 ; R11 := {}
	156	[173]	SETTABLE 	R11 K103 K104 ; R11["PLATINUM"] := ""
	157	[173]	SETTABLE 	R11 K105 K104 ; R11["REPUTATION"] := ""
	158	[173]	SETTABLE 	R11 K106 K104 ; R11["TIMER"] := ""
	159	[173]	SETGLOBALHASH	R11 K102 ; Icons := R11
	160	[176]	NEWTABLE 	R11 0 7 ; R11 := {}
	161	[176]	SETTABLE 	R11 K107 K17 ; R11["SELECTING_PART"] := 1.000000
	162	[176]	SETTABLE 	R11 K108 K47 ; R11["SWAPPING_ITEM"] := 2.000000
	163	[176]	SETTABLE 	R11 K109 K110 ; R11["CUSTOMIZING_SKINS"] := 3.000000
	164	[176]	SETTABLE 	R11 K111 K112 ; R11["SELECTING_SKINS"] := 4.000000
	165	[176]	SETTABLE 	R11 K113 K114 ; R11["BROWSING_CONSUMABLES"] := 5.000000
	166	[176]	SETTABLE 	R11 K115 K64 ; R11["SELECTING_CONSUMABLES"] := 6.000000
	167	[176]	SETTABLE 	R11 K116 K117 ; R11["BROWSING_WAY_TREE"] := 7.000000
	168	[177]	GETTABLE 	R12 R11 K107 ; R12 := R11["SELECTING_PART"]
	169	[180]	NEWTABLE 	R13 0 3 ; R13 := {}
	170	[180]	SETTABLE 	R13 K16 K17 ; R13["Current"] := 1.000000
	171	[180]	SETTABLE 	R13 K119 K17 ; R13["Queued"] := 1.000000
	172	[180]	SETTABLE 	R13 K120 K24 ; R13["Visible"] := nil
	173	[182]	NEWTABLE 	R14 0 4 ; R14 := {}
	174	[182]	SETTABLE 	R14 K121 K39 ; R14["Time"] := 0.000000
	175	[182]	SETTABLE 	R14 K122 K94 ; R14["DoubleClick"] := false
	176	[182]	SETTABLE 	R14 K123 K94 ; R14["MouseDown"] := false
	177	[182]	SETTABLE 	R14 K124 K94 ; R14["AutoSelect"] := false
	178	[184]	NEWTABLE 	R15 0 0 ; R15 := {}
	179	[186]	NEWTABLE 	R16 0 2 ; R16 := {}
	180	[186]	SETTABLE 	R16 K125 K39 ; R16["X"] := 0.000000
	181	[186]	SETTABLE 	R16 K126 K39 ; R16["Y"] := 0.000000
	182	[187]	NEWTABLE 	R17 0 2 ; R17 := {}
	183	[187]	GETGLOBAL	R18 K127 ; R18 := 0x78ca68a2
	184	[187]	LOADK    	R19 := 0.000000
	185	[187]	LOADK    	R20 K128 ; R20 := 0.150000
	186	[187]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	187	[187]	SETTABLE 	R17 K125 R18 ; R17["X"] := R18
	188	[187]	GETGLOBAL	R18 K127 ; R18 := 0x78ca68a2
	189	[187]	LOADK    	R19 := 0.000000
	190	[187]	LOADK    	R20 K128 ; R20 := 0.150000
	191	[187]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	192	[187]	SETTABLE 	R17 K126 R18 ; R17["Y"] := R18
	193	[189]	LOADNIL  	R18 R18 ; R18 := nil
	194	[190]	NEWTABLE 	R19 0 0 ; R19 := {}
	195	[192]	LOADNIL  	R20 R21 ; R20 := R21 := nil
	196	[195]	NEWTABLE 	R22 0 5 ; R22 := {}
	197	[195]	SETTABLE 	R22 K129 K110 ; R22["PVE_LOADOUTS"] := 3.000000
	198	[195]	SETTABLE 	R22 K130 K112 ; R22["PVP_LOADOUTS"] := 4.000000
	199	[195]	SETTABLE 	R22 K131 K132 ; R22["LOADOUT_NAME_LENGTH"] := 16.000000
	200	[195]	SETTABLE 	R22 K133 K134 ; R22["VS_WIDTH"] := 140.500000
	201	[195]	SETTABLE 	R22 K135 K136 ; R22["DEAD_ZONE"] := 0.200000
	202	[197]	NEWTABLE 	R23 0 4 ; R23 := {}
	203	[197]	SETTABLE 	R23 K137 K138 ; R23["HEIGHT_SELECTED"] := 115.000000
	204	[197]	SETTABLE 	R23 K139 K140 ; R23["HEIGHT_UNSELECTED"] := 63.000000
	205	[197]	SETTABLE 	R23 K141 K142 ; R23["RESIZE_DURATION"] := 0.250000
	206	[197]	SETTABLE 	R23 K143 K47 ; R23["RESIZE_EASE"] := 2.000000
	207	[199]	OP_LOADBOOL	R24 0 0 ; R24 := false
	208	[201]	NEWTABLE 	R25 0 3 ; R25 := {}
	209	[201]	SETTABLE 	R25 K145 K24 ; R25["mCachedStats"] := nil
	210	[201]	SETTABLE 	R25 K146 K24 ; R25["mStatCompare"] := nil
	211	[201]	SETTABLE 	R25 K147 K24 ; R25["mStatCompareScrollBar"] := nil
	212	[203]	LOADK    	R26 := 0.000000
	213	[204]	NEWTABLE 	R27 0 3 ; R27 := {}
	214	[204]	SETTABLE 	R27 K148 K17 ; R27["FALSE"] := 1.000000
	215	[204]	SETTABLE 	R27 K149 K47 ; R27["FRONT"] := 2.000000
	216	[204]	SETTABLE 	R27 K150 K110 ; R27["BACK"] := 3.000000
	217	[205]	GETTABLE 	R28 R27 K148 ; R28 := R27["FALSE"]
	218	[206]	OP_LOADBOOL	R29 0 0 ; R29 := false
	219	[207]	LOADK    	R30 := 0.000000
	220	[209]	LOADNIL  	R31 R31 ; R31 := nil
	221	[210]	LOADK    	R32 := 0.000000
	222	[212]	OP_LOADBOOL	R33 0 0 ; R33 := false
	223	[214]	OP_LOADBOOL	R34 0 0 ; R34 := false
	224	[216]	NEWTABLE 	R35 0 0 ; R35 := {}
	225	[218]	NEWTABLE 	R36 0 5 ; R36 := {}
	226	[218]	GETGLOBAL	R37 K152 ; R37 := 0x0469f296
	227	[218]	LOADK    	R38 K153 ; R38 := "BelowArsenalTeleportTrigger"
	228	[218]	CALL     	R37 2 2 ; R37 := R37(R38)
	229	[218]	SETTABLE 	R36 K151 R37 ; R36["TELEPORT_TRIGGER"] := R37
	230	[218]	GETGLOBAL	R37 K152 ; R37 := 0x0469f296
	231	[218]	LOADK    	R38 K155 ; R38 := "EmissiveTintColorHi"
	232	[218]	CALL     	R37 2 2 ; R37 := R37(R38)
	233	[218]	SETTABLE 	R36 K154 R37 ; R36["SYM_EMISSIVE_TINT_COLOR_HI"] := R37
	234	[218]	SETTABLE 	R36 K156 K157 ; R36["ARSENAL_CAMERA"] := "ArsenalCamera"
	235	[218]	GETGLOBAL	R37 K152 ; R37 := 0x0469f296
	236	[218]	LOADK    	R38 K159 ; R38 := "ArchwingTeleportPos"
	237	[218]	CALL     	R37 2 2 ; R37 := R37(R38)
	238	[218]	SETTABLE 	R36 K158 R37 ; R36["ARCHWING_WAYPOINT"] := R37
	239	[218]	SETTABLE 	R36 K160 K161 ; R36["ARCHWING_CAMERA"] := "ArchwingCamera"
	240	[219]	NEWTABLE 	R37 0 11 ; R37 := {}
	241	[219]	SETTABLE 	R37 K162 K163 ; R37["StatListYPos"] := 950.000000
	242	[220]	SETTABLE 	R37 K164 K24 ; R37["CosmeticDescOrigWidth"] := nil
	243	[221]	SETTABLE 	R37 K165 K39 ; R37["DefaultSuitRotationOffset"] := 0.000000
	244	[222]	SETTABLE 	R37 K166 K167 ; R37["DefaultArchwingRotationOffset"] := 180.000000
	245	[223]	SETTABLE 	R37 K168 K169 ; R37["DefaultSentinelRotationOffset"] := 90.000000
	246	[224]	SETTABLE 	R37 K170 K24 ; R37["OriginalLabelY"] := nil
	247	[225]	SETTABLE 	R37 K171 K24 ; R37["FullXpBarWidth"] := nil
	248	[226]	SETTABLE 	R37 K172 K39 ; R37["KDriveSlot"] := 0.000000
	249	[227]	SETTABLE 	R37 K173 K174 ; R37["ArchwingWaypointFindRadius"] := 200.000000
	250	[228]	SETTABLE 	R37 K175 K94 ; R37["CanEquipHeavyWeapons"] := false
	251	[229]	SETTABLE 	R37 K176 K94 ; R37["CanEquipMech"] := false
	252	[231]	LOADNIL  	R38 R38 ; R38 := nil
	253	[232]	OP_LOADBOOL	R39 0 0 ; R39 := false
	254	[234]	OP_LOADBOOL	R40 0 0 ; R40 := false
	255	[236]	LOADK    	R41 := 0.000000
	256	[237]	LOADNIL  	R42 R42 ; R42 := nil
	257	[239]	OP_LOADBOOL	R43 1 0 ; R43 := true
	258	[240]	LOADK    	R44 K104 ; R44 := ""
	259	[242]	OP_LOADBOOL	R45 0 0 ; R45 := false
	260	[244]	LOADNIL  	R46 R46 ; R46 := nil
	261	[245]	OP_LOADBOOL	R47 0 0 ; R47 := false
	262	[247]	OP_LOADBOOL	R48 0 0 ; R48 := false
	263	[249]	LOADK    	R49 := 2.000000
	264	[251]	NEWTABLE 	R50 0 2 ; R50 := {}
	265	[251]	SETTABLE 	R50 K125 K39 ; R50["X"] := 0.000000
	266	[251]	SETTABLE 	R50 K126 K39 ; R50["Y"] := 0.000000
	267	[253]	GETGLOBAL	R51 K0 ; R51 := 0x7ed0a956
	268	[253]	LOADK    	R52 K177 ; R52 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	269	[253]	CALL     	R51 2 2 ; R51 := R51(R52)
	270	[255]	LOADNIL  	R52 R52 ; R52 := nil
	271	[257]	NEWTABLE 	R53 0 5 ; R53 := {}
	272	[258]	SETTABLE 	R53 K178 K39 ; R53["Timer"] := 0.000000
	273	[259]	SETTABLE 	R53 K179 K39 ; R53["StartTime"] := 0.000000
	274	[260]	SETTABLE 	R53 K180 K39 ; R53["FadeInTime"] := 0.000000
	275	[261]	SETTABLE 	R53 K181 K39 ; R53["FadeOutTime"] := 0.000000
	276	[267]	CLOSURE  	R54 0 ; R54 := closure(Function #1)
	277	[267]	SETTABLE 	R53 K182 R54 ; R53["Start"] := R54
	278	[270]	NEWTABLE 	R54 0 6 ; R54 := {}
	279	[272]	SETTABLE 	R54 K183 K94 ; R54["UmbraUnlocked"] := false
	280	[273]	SETTABLE 	R54 K184 K94 ; R54["UmbraMeleeUnlocked"] := false
	281	[274]	SETTABLE 	R54 K185 K94 ; R54["SacrificeQuestInputBlocked"] := false
	282	[275]	SETTABLE 	R54 K186 K94 ; R54["EquipmentChangesBlocked"] := false
	283	[276]	SETTABLE 	R54 K187 K94 ; R54["ArchwingUnlocked"] := false
	284	[277]	SETTABLE 	R54 K188 K94 ; R54["NewWarCompleted"] := false
	285	[280]	NEWTABLE 	R55 0 0 ; R55 := {}
	286	[281]	LOADNIL  	R56 R61 ; R56 := R57 := R58 := R59 := R60 := R61 := nil
	287	[329]	CLOSURE  	R10 1 ; R10 := closure(Function #2)
	288	[333]	CLOSURE  	R62 2 ; R62 := closure(Function #3)
	289	[333]	MOVE     	R0 R54 ; R0 := R54
	290	[337]	CLOSURE  	R63 3 ; R63 := closure(Function #4)
	291	[337]	MOVE     	R0 R62 ; R0 := R62
	292	[335]	SETGLOBAL	R63 K189 ; IsInputBlocked := R63
	293	[343]	CLOSURE  	R63 4 ; R63 := closure(Function #5)
	294	[339]	SETGLOBAL	R63 K190 ; OnLobbyReady := R63
	295	[354]	CLOSURE  	R63 5 ; R63 := closure(Function #6)
	296	[365]	CLOSURE  	R64 6 ; R64 := closure(Function #7)
	297	[365]	MOVE     	R0 R13 ; R0 := R13
	298	[369]	CLOSURE  	R65 7 ; R65 := closure(Function #8)
	299	[369]	MOVE     	R0 R52 ; R0 := R52
	300	[369]	MOVE     	R0 R2 ; R0 := R2
	301	[371]	LOADNIL  	R66 R66 ; R66 := nil
	302	[409]	CLOSURE  	R67 8 ; R67 := closure(Function #9)
	303	[409]	MOVE     	R0 R15 ; R0 := R15
	304	[409]	MOVE     	R0 R3 ; R0 := R3
	305	[409]	MOVE     	R0 R8 ; R0 := R8
	306	[426]	CLOSURE  	R68 9 ; R68 := closure(Function #10)
	307	[437]	CLOSURE  	R69 10 ; R69 := closure(Function #11)
	308	[437]	MOVE     	R0 R3 ; R0 := R3
	309	[449]	CLOSURE  	R70 11 ; R70 := closure(Function #12)
	310	[449]	MOVE     	R0 R52 ; R0 := R52
	311	[449]	MOVE     	R0 R2 ; R0 := R2
	312	[456]	CLOSURE  	R71 12 ; R71 := closure(Function #13)
	313	[456]	MOVE     	R0 R12 ; R0 := R12
	314	[456]	MOVE     	R0 R3 ; R0 := R3
	315	[456]	MOVE     	R0 R11 ; R0 := R11
	316	[456]	SETTABLE 	R55 K191 R71 ; R55["UpdateRightCallout"] := R71
	317	[468]	CLOSURE  	R71 13 ; R71 := closure(Function #14)
	318	[468]	MOVE     	R0 R52 ; R0 := R52
	319	[468]	MOVE     	R0 R2 ; R0 := R2
	320	[468]	MOVE     	R0 R36 ; R0 := R36
	321	[468]	MOVE     	R0 R37 ; R0 := R37
	322	[468]	SETTABLE 	R55 K192 R71 ; R55["GetArchwingWaypoint"] := R71
	323	[520]	CLOSURE  	R71 14 ; R71 := closure(Function #15)
	324	[520]	MOVE     	R0 R55 ; R0 := R55
	325	[520]	MOVE     	R0 R3 ; R0 := R3
	326	[588]	CLOSURE  	R72 15 ; R72 := closure(Function #16)
	327	[588]	MOVE     	R0 R55 ; R0 := R55
	328	[588]	MOVE     	R0 R3 ; R0 := R3
	329	[588]	MOVE     	R0 R13 ; R0 := R13
	330	[588]	MOVE     	R0 R67 ; R0 := R67
	331	[597]	CLOSURE  	R73 16 ; R73 := closure(Function #17)
	332	[597]	MOVE     	R0 R49 ; R0 := R49
	333	[597]	SETTABLE 	R55 K193 R73 ; R55["RefreshPetView"] := R73
	334	[916]	CLOSURE  	R73 17 ; R73 := closure(Function #18)
	335	[916]	MOVE     	R0 R3 ; R0 := R3
	336	[916]	MOVE     	R0 R2 ; R0 := R2
	337	[916]	MOVE     	R0 R51 ; R0 := R51
	338	[916]	MOVE     	R0 R13 ; R0 := R13
	339	[916]	MOVE     	R0 R67 ; R0 := R67
	340	[916]	MOVE     	R0 R68 ; R0 := R68
	341	[916]	MOVE     	R0 R52 ; R0 := R52
	342	[916]	MOVE     	R0 R71 ; R0 := R71
	343	[916]	MOVE     	R0 R72 ; R0 := R72
	344	[916]	MOVE     	R0 R69 ; R0 := R69
	345	[916]	MOVE     	R0 R70 ; R0 := R70
	346	[916]	MOVE     	R0 R55 ; R0 := R55
	347	[918]	LOADNIL  	R74 R74 ; R74 := nil
	348	[941]	CLOSURE  	R75 18 ; R75 := closure(Function #19)
	349	[941]	MOVE     	R0 R74 ; R0 := R74
	350	[949]	CLOSURE  	R76 19 ; R76 := closure(Function #20)
	351	[970]	CLOSURE  	R77 20 ; R77 := closure(Function #21)
	352	[970]	MOVE     	R0 R76 ; R0 := R76
	353	[970]	MOVE     	R0 R3 ; R0 := R3
	354	[994]	CLOSURE  	R78 21 ; R78 := closure(Function #22)
	355	[994]	SETTABLE 	R55 K194 R78 ; R55["ShowPurchaseSuccessPopup"] := R78
	356	[1008]	CLOSURE  	R78 22 ; R78 := closure(Function #23)
	357	[1019]	CLOSURE  	R79 23 ; R79 := closure(Function #24)
	358	[1027]	CLOSURE  	R80 24 ; R80 := closure(Function #25)
	359	[1039]	CLOSURE  	R81 25 ; R81 := closure(Function #26)
	360	[1039]	MOVE     	R0 R9 ; R0 := R9
	361	[1098]	CLOSURE  	R82 26 ; R82 := closure(Function #27)
	362	[1098]	MOVE     	R0 R82 ; R0 := R82
	363	[1107]	CLOSURE  	R83 27 ; R83 := closure(Function #28)
	364	[1107]	MOVE     	R0 R3 ; R0 := R3
	365	[1112]	CLOSURE  	R84 28 ; R84 := closure(Function #29)
	366	[1117]	CLOSURE  	R85 29 ; R85 := closure(Function #30)
	367	[1121]	CLOSURE  	R86 30 ; R86 := closure(Function #31)
	368	[1121]	SETTABLE 	R55 K195 R86 ; R55["InApartment"] := R86
	369	[1259]	CLOSURE  	R86 31 ; R86 := closure(Function #32)
	370	[1259]	MOVE     	R0 R65 ; R0 := R65
	371	[1259]	MOVE     	R0 R55 ; R0 := R55
	372	[1259]	MOVE     	R0 R2 ; R0 := R2
	373	[1259]	MOVE     	R0 R3 ; R0 := R3
	374	[1259]	MOVE     	R0 R37 ; R0 := R37
	375	[1290]	CLOSURE  	R87 32 ; R87 := closure(Function #33)
	376	[1290]	MOVE     	R0 R68 ; R0 := R68
	377	[2075]	CLOSURE  	R88 33 ; R88 := closure(Function #34)
	378	[2075]	MOVE     	R0 R36 ; R0 := R36
	379	[2075]	MOVE     	R0 R3 ; R0 := R3
	380	[2075]	MOVE     	R0 R42 ; R0 := R42
	381	[2075]	MOVE     	R0 R73 ; R0 := R73
	382	[2075]	MOVE     	R0 R13 ; R0 := R13
	383	[2075]	MOVE     	R0 R37 ; R0 := R37
	384	[2075]	MOVE     	R0 R68 ; R0 := R68
	385	[2075]	MOVE     	R0 R12 ; R0 := R12
	386	[2075]	MOVE     	R0 R11 ; R0 := R11
	387	[2075]	MOVE     	R0 R52 ; R0 := R52
	388	[2075]	MOVE     	R0 R2 ; R0 := R2
	389	[2075]	MOVE     	R0 R28 ; R0 := R28
	390	[2075]	MOVE     	R0 R27 ; R0 := R27
	391	[2075]	MOVE     	R0 R87 ; R0 := R87
	392	[2075]	MOVE     	R0 R55 ; R0 := R55
	393	[2075]	MOVE     	R0 R48 ; R0 := R48
	394	[2075]	MOVE     	R0 R86 ; R0 := R86
	395	[2085]	CLOSURE  	R89 34 ; R89 := closure(Function #35)
	396	[2135]	CLOSURE  	R90 35 ; R90 := closure(Function #36)
	397	[2143]	CLOSURE  	R91 36 ; R91 := closure(Function #37)
	398	[2143]	MOVE     	R0 R90 ; R0 := R90
	399	[2152]	CLOSURE  	R92 37 ; R92 := closure(Function #38)
	400	[2152]	MOVE     	R0 R91 ; R0 := R91
	401	[2270]	CLOSURE  	R93 38 ; R93 := closure(Function #39)
	402	[2270]	MOVE     	R0 R37 ; R0 := R37
	403	[2283]	CLOSURE  	R94 39 ; R94 := closure(Function #40)
	404	[2351]	CLOSURE  	R95 40 ; R95 := closure(Function #41)
	405	[2351]	MOVE     	R0 R94 ; R0 := R94
	406	[2351]	MOVE     	R0 R93 ; R0 := R93
	407	[2351]	MOVE     	R0 R3 ; R0 := R3
	408	[2351]	MOVE     	R0 R19 ; R0 := R19
	409	[2446]	CLOSURE  	R96 41 ; R96 := closure(Function #42)
	410	[2446]	MOVE     	R0 R3 ; R0 := R3
	411	[2446]	MOVE     	R0 R96 ; R0 := R96
	412	[2446]	MOVE     	R0 R90 ; R0 := R90
	413	[2446]	MOVE     	R0 R93 ; R0 := R93
	414	[2446]	MOVE     	R0 R28 ; R0 := R28
	415	[2446]	MOVE     	R0 R27 ; R0 := R27
	416	[2493]	CLOSURE  	R97 42 ; R97 := closure(Function #43)
	417	[2493]	MOVE     	R0 R37 ; R0 := R37
	418	[2493]	MOVE     	R0 R28 ; R0 := R28
	419	[2493]	MOVE     	R0 R27 ; R0 := R27
	420	[2508]	CLOSURE  	R98 43 ; R98 := closure(Function #44)
	421	[2508]	MOVE     	R0 R68 ; R0 := R68
	422	[2515]	CLOSURE  	R99 44 ; R99 := closure(Function #45)
	423	[2515]	MOVE     	R0 R3 ; R0 := R3
	424	[2515]	MOVE     	R0 R12 ; R0 := R12
	425	[2515]	MOVE     	R0 R13 ; R0 := R13
	426	[2515]	MOVE     	R0 R11 ; R0 := R11
	427	[2521]	CLOSURE  	R100 45 ; R100 := closure(Function #46)
	428	[2521]	MOVE     	R0 R3 ; R0 := R3
	429	[2521]	MOVE     	R0 R12 ; R0 := R12
	430	[2521]	MOVE     	R0 R11 ; R0 := R11
	431	[2521]	MOVE     	R0 R13 ; R0 := R13
	432	[2564]	CLOSURE  	R101 46 ; R101 := closure(Function #47)
	433	[2564]	MOVE     	R0 R11 ; R0 := R11
	434	[2564]	MOVE     	R0 R3 ; R0 := R3
	435	[2564]	SETTABLE 	R55 K196 R101 ; R55["RefreshLoadoutList"] := R101
	436	[2908]	CLOSURE  	R101 47 ; R101 := closure(Function #48)
	437	[2908]	MOVE     	R0 R54 ; R0 := R54
	438	[2908]	MOVE     	R0 R3 ; R0 := R3
	439	[2908]	MOVE     	R0 R11 ; R0 := R11
	440	[2908]	MOVE     	R0 R55 ; R0 := R55
	441	[2908]	MOVE     	R0 R66 ; R0 := R66
	442	[2908]	MOVE     	R0 R96 ; R0 := R96
	443	[2908]	MOVE     	R0 R73 ; R0 := R73
	444	[2908]	MOVE     	R0 R13 ; R0 := R13
	445	[2908]	MOVE     	R0 R46 ; R0 := R46
	446	[2908]	MOVE     	R0 R88 ; R0 := R88
	447	[2908]	MOVE     	R0 R83 ; R0 := R83
	448	[2908]	MOVE     	R0 R99 ; R0 := R99
	449	[2908]	MOVE     	R0 R100 ; R0 := R100
	450	[2908]	MOVE     	R0 R90 ; R0 := R90
	451	[2908]	MOVE     	R0 R89 ; R0 := R89
	452	[2908]	MOVE     	R0 R87 ; R0 := R87
	453	[2908]	MOVE     	R0 R78 ; R0 := R78
	454	[2908]	MOVE     	R0 R20 ; R0 := R20
	455	[2908]	MOVE     	R0 R21 ; R0 := R21
	456	[2908]	MOVE     	R0 R75 ; R0 := R75
	457	[2908]	MOVE     	R0 R12 ; R0 := R12
	458	[2929]	CLOSURE  	R102 48 ; R102 := closure(Function #49)
	459	[2935]	CLOSURE  	R103 49 ; R103 := closure(Function #50)
	460	[2935]	SETTABLE 	R55 K197 R103 ; R55["UpdateZoom"] := R103
	461	[2972]	CLOSURE  	R103 50 ; R103 := closure(Function #51)
	462	[2972]	MOVE     	R0 R3 ; R0 := R3
	463	[2972]	MOVE     	R0 R14 ; R0 := R14
	464	[2972]	MOVE     	R0 R2 ; R0 := R2
	465	[2972]	MOVE     	R0 R55 ; R0 := R55
	466	[2972]	SETTABLE 	R55 K198 R103 ; R55["UpdateSuit"] := R103
	467	[3029]	CLOSURE  	R103 51 ; R103 := closure(Function #52)
	468	[3029]	MOVE     	R0 R3 ; R0 := R3
	469	[3029]	MOVE     	R0 R13 ; R0 := R13
	470	[3114]	CLOSURE  	R104 52 ; R104 := closure(Function #53)
	471	[3114]	MOVE     	R0 R3 ; R0 := R3
	472	[3114]	MOVE     	R0 R13 ; R0 := R13
	473	[3120]	CLOSURE  	R105 53 ; R105 := closure(Function #54)
	474	[3116]	SETGLOBAL	R105 K199 ; RestorePetVis := R105
	475	[3168]	CLOSURE  	R105 54 ; R105 := closure(Function #55)
	476	[3168]	MOVE     	R0 R104 ; R0 := R104
	477	[3168]	MOVE     	R0 R103 ; R0 := R103
	478	[3478]	CLOSURE  	R106 55 ; R106 := closure(Function #56)
	479	[3478]	MOVE     	R0 R36 ; R0 := R36
	480	[3478]	MOVE     	R0 R52 ; R0 := R52
	481	[3478]	MOVE     	R0 R2 ; R0 := R2
	482	[3478]	MOVE     	R0 R105 ; R0 := R105
	483	[3478]	MOVE     	R0 R102 ; R0 := R102
	484	[3478]	MOVE     	R0 R65 ; R0 := R65
	485	[3478]	MOVE     	R0 R3 ; R0 := R3
	486	[3478]	MOVE     	R0 R55 ; R0 := R55
	487	[3478]	MOVE     	R0 R43 ; R0 := R43
	488	[3478]	MOVE     	R0 R73 ; R0 := R73
	489	[3478]	MOVE     	R0 R46 ; R0 := R46
	490	[3478]	MOVE     	R0 R0 ; R0 := R0
	491	[3170]	SETGLOBAL	R106 K200 ; Shutdown := R106
	492	[3489]	CLOSURE  	R106 56 ; R106 := closure(Function #57)
	493	[3500]	CLOSURE  	R107 57 ; R107 := closure(Function #58)
	494	[3510]	CLOSURE  	R108 58 ; R108 := closure(Function #59)
	495	[3526]	CLOSURE  	R109 59 ; R109 := closure(Function #60)
	496	[3526]	MOVE     	R0 R13 ; R0 := R13
	497	[3526]	SETTABLE 	R55 K201 R109 ; R55["SetSpaceMode"] := R109
	498	[3561]	CLOSURE  	R109 60 ; R109 := closure(Function #61)
	499	[3561]	MOVE     	R0 R2 ; R0 := R2
	500	[3561]	MOVE     	R0 R55 ; R0 := R55
	501	[3561]	MOVE     	R0 R65 ; R0 := R65
	502	[3561]	MOVE     	R0 R107 ; R0 := R107
	503	[3561]	MOVE     	R0 R108 ; R0 := R108
	504	[3528]	SETGLOBAL	R109 K202 ; OnSaveLoadOutComplete := R109
	505	[3564]	CLOSURE  	R109 61 ; R109 := closure(Function #62)
	506	[3563]	SETGLOBAL	R109 K203 ; OnUpdateSessionSettings := R109
	507	[3676]	CLOSURE  	R109 62 ; R109 := closure(Function #63)
	508	[3676]	MOVE     	R0 R3 ; R0 := R3
	509	[3676]	MOVE     	R0 R52 ; R0 := R52
	510	[3676]	MOVE     	R0 R2 ; R0 := R2
	511	[3676]	MOVE     	R0 R70 ; R0 := R70
	512	[3676]	MOVE     	R0 R12 ; R0 := R12
	513	[3676]	MOVE     	R0 R11 ; R0 := R11
	514	[3676]	MOVE     	R0 R96 ; R0 := R96
	515	[3676]	MOVE     	R0 R39 ; R0 := R39
	516	[3676]	MOVE     	R0 R65 ; R0 := R65
	517	[3676]	MOVE     	R0 R107 ; R0 := R107
	518	[3676]	MOVE     	R0 R108 ; R0 := R108
	519	[3676]	MOVE     	R0 R45 ; R0 := R45
	520	[3676]	MOVE     	R0 R74 ; R0 := R74
	521	[3730]	CLOSURE  	R110 63 ; R110 := closure(Function #64)
	522	[3730]	MOVE     	R0 R3 ; R0 := R3
	523	[3753]	CLOSURE  	R111 64 ; R111 := closure(Function #65)
	524	[3753]	MOVE     	R0 R25 ; R0 := R25
	525	[3753]	MOVE     	R0 R4 ; R0 := R4
	526	[3795]	CLOSURE  	R112 65 ; R112 := closure(Function #66)
	527	[3795]	MOVE     	R0 R3 ; R0 := R3
	528	[3795]	MOVE     	R0 R25 ; R0 := R25
	529	[3795]	MOVE     	R0 R111 ; R0 := R111
	530	[3854]	CLOSURE  	R113 66 ; R113 := closure(Function #67)
	531	[3854]	MOVE     	R0 R68 ; R0 := R68
	532	[3854]	MOVE     	R0 R2 ; R0 := R2
	533	[3854]	MOVE     	R0 R37 ; R0 := R37
	534	[4117]	CLOSURE  	R114 67 ; R114 := closure(Function #68)
	535	[4117]	MOVE     	R0 R12 ; R0 := R12
	536	[4117]	MOVE     	R0 R11 ; R0 := R11
	537	[4117]	MOVE     	R0 R68 ; R0 := R68
	538	[4117]	MOVE     	R0 R63 ; R0 := R63
	539	[4117]	MOVE     	R0 R3 ; R0 := R3
	540	[4117]	MOVE     	R0 R67 ; R0 := R67
	541	[4117]	MOVE     	R0 R13 ; R0 := R13
	542	[4117]	MOVE     	R0 R8 ; R0 := R8
	543	[4117]	MOVE     	R0 R25 ; R0 := R25
	544	[4117]	MOVE     	R0 R61 ; R0 := R61
	545	[4117]	MOVE     	R0 R112 ; R0 := R112
	546	[4190]	CLOSURE  	R115 68 ; R115 := closure(Function #69)
	547	[4190]	MOVE     	R0 R23 ; R0 := R23
	548	[4190]	MOVE     	R0 R18 ; R0 := R18
	549	[4190]	MOVE     	R0 R3 ; R0 := R3
	550	[4208]	CLOSURE  	R116 69 ; R116 := closure(Function #70)
	551	[4208]	MOVE     	R0 R23 ; R0 := R23
	552	[4208]	MOVE     	R0 R115 ; R0 := R115
	553	[4225]	CLOSURE  	R117 70 ; R117 := closure(Function #71)
	554	[4225]	MOVE     	R0 R55 ; R0 := R55
	555	[4225]	MOVE     	R0 R12 ; R0 := R12
	556	[4225]	MOVE     	R0 R11 ; R0 := R11
	557	[4225]	MOVE     	R0 R114 ; R0 := R114
	558	[4238]	CLOSURE  	R118 71 ; R118 := closure(Function #72)
	559	[4238]	MOVE     	R0 R23 ; R0 := R23
	560	[4238]	MOVE     	R0 R115 ; R0 := R115
	561	[4238]	MOVE     	R0 R25 ; R0 := R25
	562	[4238]	MOVE     	R0 R117 ; R0 := R117
	563	[4247]	CLOSURE  	R119 72 ; R119 := closure(Function #73)
	564	[4240]	SETGLOBAL	R119 K204 ; RollOutSubButton := R119
	565	[4259]	CLOSURE  	R119 73 ; R119 := closure(Function #74)
	566	[4259]	MOVE     	R0 R62 ; R0 := R62
	567	[4259]	MOVE     	R0 R3 ; R0 := R3
	568	[4249]	SETGLOBAL	R119 K205 ; RollOverSubButton := R119
	569	[4272]	CLOSURE  	R119 74 ; R119 := closure(Function #75)
	570	[4280]	CLOSURE  	R120 75 ; R120 := closure(Function #76)
	571	[4291]	CLOSURE  	R121 76 ; R121 := closure(Function #77)
	572	[4345]	CLOSURE  	R122 77 ; R122 := closure(Function #78)
	573	[4345]	MOVE     	R0 R3 ; R0 := R3
	574	[4345]	MOVE     	R0 R13 ; R0 := R13
	575	[4372]	CLOSURE  	R123 78 ; R123 := closure(Function #79)
	576	[4372]	MOVE     	R0 R25 ; R0 := R25
	577	[4372]	MOVE     	R0 R8 ; R0 := R8
	578	[4391]	CLOSURE  	R124 79 ; R124 := closure(Function #80)
	579	[4391]	MOVE     	R0 R21 ; R0 := R21
	580	[4405]	CLOSURE  	R125 80 ; R125 := closure(Function #81)
	581	[4405]	MOVE     	R0 R81 ; R0 := R81
	582	[4405]	MOVE     	R0 R1 ; R0 := R1
	583	[4484]	CLOSURE  	R126 81 ; R126 := closure(Function #82)
	584	[4511]	CLOSURE  	R127 82 ; R127 := closure(Function #83)
	585	[4537]	CLOSURE  	R128 83 ; R128 := closure(Function #84)
	586	[4537]	MOVE     	R0 R13 ; R0 := R13
	587	[4537]	MOVE     	R0 R3 ; R0 := R3
	588	[4563]	CLOSURE  	R129 84 ; R129 := closure(Function #85)
	589	[4563]	MOVE     	R0 R3 ; R0 := R3
	590	[4563]	MOVE     	R0 R13 ; R0 := R13
	591	[4563]	MOVE     	R0 R59 ; R0 := R59
	592	[4563]	MOVE     	R0 R58 ; R0 := R58
	593	[4569]	CLOSURE  	R130 85 ; R130 := closure(Function #86)
	594	[4565]	SETGLOBAL	R130 K206 ; CategoryFocused := R130
	595	[4575]	CLOSURE  	R130 86 ; R130 := closure(Function #87)
	596	[4571]	SETGLOBAL	R130 K207 ; CategoryUnfocused := R130
	597	[4581]	CLOSURE  	R130 87 ; R130 := closure(Function #88)
	598	[4577]	SETGLOBAL	R130 K208 ; CategoryPressed := R130
	599	[4591]	CLOSURE  	R130 88 ; R130 := closure(Function #89)
	600	[4591]	SETTABLE 	R55 K209 R130 ; R55["HideXp"] := R130
	601	[5116]	CLOSURE  	R130 89 ; R130 := closure(Function #90)
	602	[5116]	MOVE     	R0 R62 ; R0 := R62
	603	[5116]	MOVE     	R0 R12 ; R0 := R12
	604	[5116]	MOVE     	R0 R11 ; R0 := R11
	605	[5116]	MOVE     	R0 R18 ; R0 := R18
	606	[5116]	MOVE     	R0 R55 ; R0 := R55
	607	[5116]	MOVE     	R0 R116 ; R0 := R116
	608	[5116]	MOVE     	R0 R3 ; R0 := R3
	609	[5116]	MOVE     	R0 R88 ; R0 := R88
	610	[5116]	MOVE     	R0 R110 ; R0 := R110
	611	[5116]	MOVE     	R0 R25 ; R0 := R25
	612	[5116]	MOVE     	R0 R118 ; R0 := R118
	613	[5116]	MOVE     	R0 R23 ; R0 := R23
	614	[5116]	MOVE     	R0 R65 ; R0 := R65
	615	[5116]	MOVE     	R0 R32 ; R0 := R32
	616	[5116]	MOVE     	R0 R1 ; R0 := R1
	617	[5116]	MOVE     	R0 R125 ; R0 := R125
	618	[5116]	MOVE     	R0 R115 ; R0 := R115
	619	[5116]	MOVE     	R0 R122 ; R0 := R122
	620	[5116]	MOVE     	R0 R126 ; R0 := R126
	621	[5116]	MOVE     	R0 R2 ; R0 := R2
	622	[5116]	MOVE     	R0 R121 ; R0 := R121
	623	[5116]	MOVE     	R0 R40 ; R0 := R40
	624	[5116]	MOVE     	R0 R37 ; R0 := R37
	625	[5116]	MOVE     	R0 R119 ; R0 := R119
	626	[5116]	MOVE     	R0 R120 ; R0 := R120
	627	[5116]	MOVE     	R0 R13 ; R0 := R13
	628	[5138]	CLOSURE  	R131 90 ; R131 := closure(Function #91)
	629	[5138]	MOVE     	R0 R28 ; R0 := R28
	630	[5138]	MOVE     	R0 R27 ; R0 := R27
	631	[5138]	SETTABLE 	R55 K210 R131 ; R55["CanPanZoom"] := R131
	632	[5164]	CLOSURE  	R131 91 ; R131 := closure(Function #92)
	633	[5164]	SETTABLE 	R55 K211 R131 ; R55["UpdateCameraDestPos"] := R131
	634	[5204]	CLOSURE  	R131 92 ; R131 := closure(Function #93)
	635	[5204]	MOVE     	R0 R55 ; R0 := R55
	636	[5204]	MOVE     	R0 R2 ; R0 := R2
	637	[5204]	SETTABLE 	R55 K212 R131 ; R55["RefreshStatsParagraph"] := R131
	638	[5260]	CLOSURE  	R131 93 ; R131 := closure(Function #94)
	639	[5260]	MOVE     	R0 R55 ; R0 := R55
	640	[5260]	MOVE     	R0 R81 ; R0 := R81
	641	[5260]	MOVE     	R0 R1 ; R0 := R1
	642	[5260]	MOVE     	R0 R9 ; R0 := R9
	643	[5260]	MOVE     	R0 R82 ; R0 := R82
	644	[5300]	CLOSURE  	R132 94 ; R132 := closure(Function #95)
	645	[5300]	MOVE     	R0 R3 ; R0 := R3
	646	[5306]	CLOSURE  	R133 95 ; R133 := closure(Function #96)
	647	[5302]	SETGLOBAL	R133 K213 ; ConfirmWeaponRetrieve := R133
	648	[5318]	CLOSURE  	R133 96 ; R133 := closure(Function #97)
	649	[5318]	MOVE     	R0 R3 ; R0 := R3
	650	[5308]	SETGLOBAL	R133 K214 ; ShowItemUnlockDialog := R133
	651	[5507]	CLOSURE  	R133 97 ; R133 := closure(Function #98)
	652	[5507]	MOVE     	R0 R63 ; R0 := R63
	653	[5507]	MOVE     	R0 R90 ; R0 := R90
	654	[5507]	MOVE     	R0 R92 ; R0 := R92
	655	[5507]	MOVE     	R0 R91 ; R0 := R91
	656	[5507]	MOVE     	R0 R18 ; R0 := R18
	657	[5507]	MOVE     	R0 R81 ; R0 := R81
	658	[5507]	MOVE     	R0 R79 ; R0 := R79
	659	[5507]	MOVE     	R0 R55 ; R0 := R55
	660	[5507]	MOVE     	R0 R114 ; R0 := R114
	661	[5560]	CLOSURE  	R134 98 ; R134 := closure(Function #99)
	662	[5560]	MOVE     	R0 R3 ; R0 := R3
	663	[5560]	MOVE     	R0 R55 ; R0 := R55
	664	[5560]	MOVE     	R0 R38 ; R0 := R38
	665	[5560]	MOVE     	R0 R56 ; R0 := R56
	666	[5509]	SETGLOBAL	R134 K215 ; OnUpgradeApplied := R134
	667	[5570]	CLOSURE  	R134 99 ; R134 := closure(Function #100)
	668	[5570]	MOVE     	R0 R38 ; R0 := R38
	669	[5562]	SETGLOBAL	R134 K216 ; OnConfirmUnlockFeature := R134
	670	[5580]	CLOSURE  	R134 100 ; R134 := closure(Function #101)
	671	[5580]	MOVE     	R0 R38 ; R0 := R38
	672	[5580]	MOVE     	R0 R3 ; R0 := R3
	673	[5572]	SETGLOBAL	R134 K217 ; OnBuyFeatureItem := R134
	674	[6042]	CLOSURE  	R56 101 ; R56 := closure(Function #102)
	675	[6042]	MOVE     	R0 R62 ; R0 := R62
	676	[6042]	MOVE     	R0 R54 ; R0 := R54
	677	[6042]	MOVE     	R0 R12 ; R0 := R12
	678	[6042]	MOVE     	R0 R11 ; R0 := R11
	679	[6042]	MOVE     	R0 R24 ; R0 := R24
	680	[6042]	MOVE     	R0 R3 ; R0 := R3
	681	[6042]	MOVE     	R0 R18 ; R0 := R18
	682	[6042]	MOVE     	R0 R38 ; R0 := R38
	683	[6042]	MOVE     	R0 R5 ; R0 := R5
	684	[6042]	MOVE     	R0 R131 ; R0 := R131
	685	[6042]	MOVE     	R0 R101 ; R0 := R101
	686	[6042]	MOVE     	R0 R80 ; R0 := R80
	687	[6042]	MOVE     	R0 R31 ; R0 := R31
	688	[6042]	MOVE     	R0 R52 ; R0 := R52
	689	[6042]	MOVE     	R0 R2 ; R0 := R2
	690	[6042]	MOVE     	R0 R104 ; R0 := R104
	691	[6042]	MOVE     	R0 R55 ; R0 := R55
	692	[6042]	MOVE     	R0 R103 ; R0 := R103
	693	[6042]	MOVE     	R0 R56 ; R0 := R56
	694	[6042]	MOVE     	R0 R116 ; R0 := R116
	695	[6042]	MOVE     	R0 R96 ; R0 := R96
	696	[6042]	MOVE     	R0 R28 ; R0 := R28
	697	[6042]	MOVE     	R0 R27 ; R0 := R27
	698	[6042]	MOVE     	R0 R81 ; R0 := R81
	699	[6042]	MOVE     	R0 R133 ; R0 := R133
	700	[6042]	MOVE     	R0 R132 ; R0 := R132
	701	[6042]	MOVE     	R0 R73 ; R0 := R73
	702	[6042]	MOVE     	R0 R13 ; R0 := R13
	703	[6042]	MOVE     	R0 R46 ; R0 := R46
	704	[6042]	MOVE     	R0 R65 ; R0 := R65
	705	[6042]	MOVE     	R0 R32 ; R0 := R32
	706	[6042]	MOVE     	R0 R88 ; R0 := R88
	707	[6042]	MOVE     	R0 R97 ; R0 := R97
	708	[6042]	MOVE     	R0 R98 ; R0 := R98
	709	[6042]	MOVE     	R0 R118 ; R0 := R118
	710	[6062]	CLOSURE  	R134 102 ; R134 := closure(Function #103)
	711	[6062]	MOVE     	R0 R131 ; R0 := R131
	712	[6075]	CLOSURE  	R135 103 ; R135 := closure(Function #104)
	713	[6075]	MOVE     	R0 R3 ; R0 := R3
	714	[6064]	SETGLOBAL	R135 K218 ; RoamOrMature := R135
	715	[6095]	CLOSURE  	R135 104 ; R135 := closure(Function #105)
	716	[6095]	MOVE     	R0 R31 ; R0 := R31
	717	[6095]	MOVE     	R0 R134 ; R0 := R134
	718	[6095]	MOVE     	R0 R101 ; R0 := R101
	719	[6095]	MOVE     	R0 R11 ; R0 := R11
	720	[6095]	MOVE     	R0 R80 ; R0 := R80
	721	[6077]	SETGLOBAL	R135 K219 ; ConfirmRoamPet := R135
	722	[6116]	CLOSURE  	R135 105 ; R135 := closure(Function #106)
	723	[6116]	MOVE     	R0 R134 ; R0 := R134
	724	[6116]	MOVE     	R0 R31 ; R0 := R31
	725	[6116]	MOVE     	R0 R101 ; R0 := R101
	726	[6116]	MOVE     	R0 R11 ; R0 := R11
	727	[6116]	MOVE     	R0 R80 ; R0 := R80
	728	[6097]	SETGLOBAL	R135 K220 ; ConfirmMaturePet := R135
	729	[6146]	CLOSURE  	R135 106 ; R135 := closure(Function #107)
	730	[6146]	MOVE     	R0 R31 ; R0 := R31
	731	[6146]	MOVE     	R0 R13 ; R0 := R13
	732	[6146]	MOVE     	R0 R70 ; R0 := R70
	733	[6159]	CLOSURE  	R136 107 ; R136 := closure(Function #108)
	734	[6159]	MOVE     	R0 R3 ; R0 := R3
	735	[6159]	MOVE     	R0 R55 ; R0 := R55
	736	[6159]	MOVE     	R0 R31 ; R0 := R31
	737	[6159]	MOVE     	R0 R104 ; R0 := R104
	738	[6148]	SETGLOBAL	R136 K221 ; OnMaturePetResults := R136
	739	[6178]	CLOSURE  	R136 108 ; R136 := closure(Function #109)
	740	[6178]	MOVE     	R0 R3 ; R0 := R3
	741	[6178]	MOVE     	R0 R135 ; R0 := R135
	742	[6178]	MOVE     	R0 R31 ; R0 := R31
	743	[6161]	SETGLOBAL	R136 K222 ; OnRetrievePetFromStasisResults := R136
	744	[6458]	CLOSURE  	R136 109 ; R136 := closure(Function #110)
	745	[6458]	MOVE     	R0 R52 ; R0 := R52
	746	[6458]	MOVE     	R0 R2 ; R0 := R2
	747	[6458]	MOVE     	R0 R31 ; R0 := R31
	748	[6458]	MOVE     	R0 R13 ; R0 := R13
	749	[6458]	MOVE     	R0 R70 ; R0 := R70
	750	[6458]	MOVE     	R0 R81 ; R0 := R81
	751	[6458]	MOVE     	R0 R37 ; R0 := R37
	752	[6458]	MOVE     	R0 R9 ; R0 := R9
	753	[6458]	MOVE     	R0 R3 ; R0 := R3
	754	[6458]	SETTABLE 	R55 K223 R136 ; R55["GetItems"] := R136
	755	[6474]	CLOSURE  	R136 110 ; R136 := closure(Function #111)
	756	[6474]	MOVE     	R0 R13 ; R0 := R13
	757	[6478]	CLOSURE  	R137 111 ; R137 := closure(Function #112)
	758	[6788]	CLOSURE  	R138 112 ; R138 := closure(Function #113)
	759	[6788]	MOVE     	R0 R9 ; R0 := R9
	760	[6788]	MOVE     	R0 R136 ; R0 := R136
	761	[6788]	MOVE     	R0 R1 ; R0 := R1
	762	[6788]	MOVE     	R0 R2 ; R0 := R2
	763	[6788]	MOVE     	R0 R54 ; R0 := R54
	764	[6788]	MOVE     	R0 R81 ; R0 := R81
	765	[6788]	MOVE     	R0 R137 ; R0 := R137
	766	[6788]	MOVE     	R0 R3 ; R0 := R3
	767	[6788]	MOVE     	R0 R5 ; R0 := R5
	768	[6788]	MOVE     	R0 R12 ; R0 := R12
	769	[6788]	MOVE     	R0 R11 ; R0 := R11
	770	[6788]	MOVE     	R0 R21 ; R0 := R21
	771	[6798]	CLOSURE  	R139 113 ; R139 := closure(Function #114)
	772	[6813]	CLOSURE  	R140 114 ; R140 := closure(Function #115)
	773	[6813]	SETTABLE 	R55 K224 R140 ; R55["CanUseExtraColors"] := R140
	774	[6843]	CLOSURE  	R140 115 ; R140 := closure(Function #116)
	775	[7109]	CLOSURE  	R141 116 ; R141 := closure(Function #117)
	776	[7109]	MOVE     	R0 R113 ; R0 := R113
	777	[7109]	MOVE     	R0 R9 ; R0 := R9
	778	[7109]	MOVE     	R0 R140 ; R0 := R140
	779	[7109]	MOVE     	R0 R1 ; R0 := R1
	780	[7109]	MOVE     	R0 R2 ; R0 := R2
	781	[7109]	MOVE     	R0 R5 ; R0 := R5
	782	[7109]	MOVE     	R0 R55 ; R0 := R55
	783	[7109]	MOVE     	R0 R96 ; R0 := R96
	784	[7222]	CLOSURE  	R142 117 ; R142 := closure(Function #118)
	785	[7222]	MOVE     	R0 R12 ; R0 := R12
	786	[7222]	MOVE     	R0 R11 ; R0 := R11
	787	[7222]	MOVE     	R0 R55 ; R0 := R55
	788	[7222]	MOVE     	R0 R131 ; R0 := R131
	789	[7222]	MOVE     	R0 R56 ; R0 := R56
	790	[7222]	MOVE     	R0 R138 ; R0 := R138
	791	[7222]	MOVE     	R0 R141 ; R0 := R141
	792	[7222]	MOVE     	R0 R139 ; R0 := R139
	793	[7222]	MOVE     	R0 R133 ; R0 := R133
	794	[7227]	CLOSURE  	R143 118 ; R143 := closure(Function #119)
	795	[7224]	SETGLOBAL	R143 K225 ; OnDetailedViewComplete := R143
	796	[7251]	CLOSURE  	R143 119 ; R143 := closure(Function #120)
	797	[7251]	MOVE     	R0 R2 ; R0 := R2
	798	[7251]	MOVE     	R0 R3 ; R0 := R3
	799	[7251]	MOVE     	R0 R62 ; R0 := R62
	800	[7251]	MOVE     	R0 R142 ; R0 := R142
	801	[7265]	CLOSURE  	R144 120 ; R144 := closure(Function #121)
	802	[7315]	CLOSURE  	R61 121 ; R61 := closure(Function #122)
	803	[7315]	MOVE     	R0 R3 ; R0 := R3
	804	[7315]	MOVE     	R0 R40 ; R0 := R40
	805	[7315]	MOVE     	R0 R37 ; R0 := R37
	806	[7552]	CLOSURE  	R145 122 ; R145 := closure(Function #123)
	807	[7552]	MOVE     	R0 R37 ; R0 := R37
	808	[7552]	MOVE     	R0 R96 ; R0 := R96
	809	[7552]	MOVE     	R0 R63 ; R0 := R63
	810	[7552]	MOVE     	R0 R30 ; R0 := R30
	811	[7552]	MOVE     	R0 R70 ; R0 := R70
	812	[7552]	MOVE     	R0 R61 ; R0 := R61
	813	[7552]	MOVE     	R0 R144 ; R0 := R144
	814	[7559]	CLOSURE  	R146 123 ; R146 := closure(Function #124)
	815	[7559]	MOVE     	R0 R61 ; R0 := R61
	816	[7554]	SETGLOBAL	R146 K226 ; SetChallengeProgressDesc := R146
	817	[7565]	CLOSURE  	R146 124 ; R146 := closure(Function #125)
	818	[7561]	SETGLOBAL	R146 K227 ; GetSelectedItemSlot := R146
	819	[7578]	CLOSURE  	R146 125 ; R146 := closure(Function #126)
	820	[7901]	CLOSURE  	R147 126 ; R147 := closure(Function #127)
	821	[7901]	MOVE     	R0 R70 ; R0 := R70
	822	[7901]	MOVE     	R0 R52 ; R0 := R52
	823	[7901]	MOVE     	R0 R2 ; R0 := R2
	824	[7901]	MOVE     	R0 R86 ; R0 := R86
	825	[7901]	MOVE     	R0 R37 ; R0 := R37
	826	[7901]	MOVE     	R0 R68 ; R0 := R68
	827	[7901]	MOVE     	R0 R104 ; R0 := R104
	828	[7901]	MOVE     	R0 R103 ; R0 := R103
	829	[7901]	MOVE     	R0 R73 ; R0 := R73
	830	[7901]	MOVE     	R0 R55 ; R0 := R55
	831	[7901]	MOVE     	R0 R32 ; R0 := R32
	832	[7901]	MOVE     	R0 R3 ; R0 := R3
	833	[7901]	MOVE     	R0 R87 ; R0 := R87
	834	[8061]	CLOSURE  	R148 127 ; R148 := closure(Function #128)
	835	[8061]	MOVE     	R0 R12 ; R0 := R12
	836	[8061]	MOVE     	R0 R11 ; R0 := R11
	837	[8061]	MOVE     	R0 R1 ; R0 := R1
	838	[8061]	MOVE     	R0 R3 ; R0 := R3
	839	[8061]	MOVE     	R0 R143 ; R0 := R143
	840	[8061]	MOVE     	R0 R78 ; R0 := R78
	841	[8061]	MOVE     	R0 R14 ; R0 := R14
	842	[8061]	MOVE     	R0 R56 ; R0 := R56
	843	[8061]	MOVE     	R0 R73 ; R0 := R73
	844	[8061]	MOVE     	R0 R13 ; R0 := R13
	845	[8061]	MOVE     	R0 R46 ; R0 := R46
	846	[8061]	MOVE     	R0 R88 ; R0 := R88
	847	[8061]	MOVE     	R0 R145 ; R0 := R145
	848	[8061]	MOVE     	R0 R79 ; R0 := R79
	849	[8061]	MOVE     	R0 R114 ; R0 := R114
	850	[8061]	MOVE     	R0 R112 ; R0 := R112
	851	[8061]	MOVE     	R0 R25 ; R0 := R25
	852	[8061]	MOVE     	R0 R147 ; R0 := R147
	853	[8061]	MOVE     	R0 R4 ; R0 := R4
	854	[8061]	MOVE     	R0 R80 ; R0 := R80
	855	[8100]	CLOSURE  	R149 128 ; R149 := closure(Function #129)
	856	[8100]	MOVE     	R0 R2 ; R0 := R2
	857	[8100]	MOVE     	R0 R149 ; R0 := R149
	858	[8120]	CLOSURE  	R150 129 ; R150 := closure(Function #130)
	859	[8120]	MOVE     	R0 R3 ; R0 := R3
	860	[8140]	CLOSURE  	R151 130 ; R151 := closure(Function #131)
	861	[8140]	MOVE     	R0 R3 ; R0 := R3
	862	[8144]	CLOSURE  	R152 131 ; R152 := closure(Function #132)
	863	[8144]	MOVE     	R0 R13 ; R0 := R13
	864	[8144]	SETTABLE 	R55 K228 R152 ; R55["InHeavyWeaponSlot"] := R152
	865	[8878]	CLOSURE  	R152 132 ; R152 := closure(Function #133)
	866	[8878]	MOVE     	R0 R3 ; R0 := R3
	867	[8878]	MOVE     	R0 R12 ; R0 := R12
	868	[8878]	MOVE     	R0 R11 ; R0 := R11
	869	[8878]	MOVE     	R0 R40 ; R0 := R40
	870	[8878]	MOVE     	R0 R14 ; R0 := R14
	871	[8878]	MOVE     	R0 R146 ; R0 := R146
	872	[8878]	MOVE     	R0 R78 ; R0 := R78
	873	[8878]	MOVE     	R0 R1 ; R0 := R1
	874	[8878]	MOVE     	R0 R2 ; R0 := R2
	875	[8878]	MOVE     	R0 R18 ; R0 := R18
	876	[8878]	MOVE     	R0 R21 ; R0 := R21
	877	[8878]	MOVE     	R0 R55 ; R0 := R55
	878	[8878]	MOVE     	R0 R151 ; R0 := R151
	879	[8878]	MOVE     	R0 R149 ; R0 := R149
	880	[8947]	CLOSURE  	R153 133 ; R153 := closure(Function #134)
	881	[8947]	MOVE     	R0 R40 ; R0 := R40
	882	[8947]	MOVE     	R0 R3 ; R0 := R3
	883	[8947]	MOVE     	R0 R126 ; R0 := R126
	884	[8947]	MOVE     	R0 R2 ; R0 := R2
	885	[8947]	MOVE     	R0 R9 ; R0 := R9
	886	[8947]	MOVE     	R0 R94 ; R0 := R94
	887	[8947]	MOVE     	R0 R127 ; R0 := R127
	888	[8947]	MOVE     	R0 R96 ; R0 := R96
	889	[8947]	MOVE     	R0 R55 ; R0 := R55
	890	[9005]	CLOSURE  	R154 134 ; R154 := closure(Function #135)
	891	[9005]	MOVE     	R0 R93 ; R0 := R93
	892	[9005]	MOVE     	R0 R90 ; R0 := R90
	893	[9005]	MOVE     	R0 R95 ; R0 := R95
	894	[9005]	MOVE     	R0 R65 ; R0 := R65
	895	[9005]	MOVE     	R0 R32 ; R0 := R32
	896	[9005]	MOVE     	R0 R55 ; R0 := R55
	897	[9005]	MOVE     	R0 R87 ; R0 := R87
	898	[9005]	MOVE     	R0 R73 ; R0 := R73
	899	[9005]	MOVE     	R0 R13 ; R0 := R13
	900	[9005]	MOVE     	R0 R94 ; R0 := R94
	901	[9005]	MOVE     	R0 R3 ; R0 := R3
	902	[9005]	SETTABLE 	R55 K229 R154 ; R55["OnDefaultColor"] := R154
	903	[9048]	CLOSURE  	R154 135 ; R154 := closure(Function #136)
	904	[9048]	MOVE     	R0 R94 ; R0 := R94
	905	[9048]	MOVE     	R0 R93 ; R0 := R93
	906	[9048]	MOVE     	R0 R3 ; R0 := R3
	907	[9048]	MOVE     	R0 R55 ; R0 := R55
	908	[9201]	CLOSURE  	R155 136 ; R155 := closure(Function #137)
	909	[9201]	MOVE     	R0 R12 ; R0 := R12
	910	[9201]	MOVE     	R0 R11 ; R0 := R11
	911	[9201]	MOVE     	R0 R28 ; R0 := R28
	912	[9201]	MOVE     	R0 R27 ; R0 := R27
	913	[9201]	MOVE     	R0 R90 ; R0 := R90
	914	[9201]	MOVE     	R0 R92 ; R0 := R92
	915	[9243]	CLOSURE  	R156 137 ; R156 := closure(Function #138)
	916	[9243]	MOVE     	R0 R94 ; R0 := R94
	917	[9243]	MOVE     	R0 R96 ; R0 := R96
	918	[9243]	MOVE     	R0 R55 ; R0 := R55
	919	[9335]	CLOSURE  	R157 138 ; R157 := closure(Function #139)
	920	[9335]	MOVE     	R0 R90 ; R0 := R90
	921	[9335]	MOVE     	R0 R22 ; R0 := R22
	922	[9335]	MOVE     	R0 R155 ; R0 := R155
	923	[9387]	CLOSURE  	R158 139 ; R158 := closure(Function #140)
	924	[9387]	MOVE     	R0 R40 ; R0 := R40
	925	[9387]	MOVE     	R0 R3 ; R0 := R3
	926	[9387]	MOVE     	R0 R90 ; R0 := R90
	927	[9387]	MOVE     	R0 R93 ; R0 := R93
	928	[9387]	MOVE     	R0 R94 ; R0 := R94
	929	[9387]	MOVE     	R0 R127 ; R0 := R127
	930	[9387]	MOVE     	R0 R95 ; R0 := R95
	931	[9387]	MOVE     	R0 R55 ; R0 := R55
	932	[9453]	CLOSURE  	R159 140 ; R159 := closure(Function #141)
	933	[9453]	MOVE     	R0 R12 ; R0 := R12
	934	[9453]	MOVE     	R0 R11 ; R0 := R11
	935	[9453]	MOVE     	R0 R56 ; R0 := R56
	936	[9453]	MOVE     	R0 R153 ; R0 := R153
	937	[9453]	MOVE     	R0 R158 ; R0 := R158
	938	[9515]	CLOSURE  	R160 141 ; R160 := closure(Function #142)
	939	[9515]	MOVE     	R0 R159 ; R0 := R159
	940	[9515]	MOVE     	R0 R3 ; R0 := R3
	941	[9528]	CLOSURE  	R161 142 ; R161 := closure(Function #143)
	942	[9528]	MOVE     	R0 R3 ; R0 := R3
	943	[9528]	MOVE     	R0 R160 ; R0 := R160
	944	[9532]	CLOSURE  	R162 143 ; R162 := closure(Function #144)
	945	[9532]	MOVE     	R0 R161 ; R0 := R161
	946	[9530]	SETGLOBAL	R162 K230 ; RandomizeCosmetics := R162
	947	[9540]	CLOSURE  	R162 144 ; R162 := closure(Function #145)
	948	[9540]	MOVE     	R0 R161 ; R0 := R161
	949	[9534]	SETGLOBAL	R162 K231 ; OnRandomizeConfirm := R162
	950	[9639]	CLOSURE  	R162 145 ; R162 := closure(Function #146)
	951	[9639]	MOVE     	R0 R13 ; R0 := R13
	952	[9639]	MOVE     	R0 R3 ; R0 := R3
	953	[9639]	MOVE     	R0 R90 ; R0 := R90
	954	[9639]	MOVE     	R0 R93 ; R0 := R93
	955	[9639]	MOVE     	R0 R126 ; R0 := R126
	956	[9639]	MOVE     	R0 R127 ; R0 := R127
	957	[9639]	MOVE     	R0 R95 ; R0 := R95
	958	[9639]	MOVE     	R0 R55 ; R0 := R55
	959	[9649]	CLOSURE  	R163 146 ; R163 := closure(Function #147)
	960	[9649]	MOVE     	R0 R14 ; R0 := R14
	961	[9649]	MOVE     	R0 R9 ; R0 := R9
	962	[9713]	CLOSURE  	R164 147 ; R164 := closure(Function #148)
	963	[9713]	MOVE     	R0 R19 ; R0 := R19
	964	[9713]	MOVE     	R0 R90 ; R0 := R90
	965	[9713]	MOVE     	R0 R73 ; R0 := R73
	966	[9713]	MOVE     	R0 R13 ; R0 := R13
	967	[9713]	MOVE     	R0 R65 ; R0 := R65
	968	[9713]	MOVE     	R0 R32 ; R0 := R32
	969	[9713]	MOVE     	R0 R2 ; R0 := R2
	970	[9713]	MOVE     	R0 R14 ; R0 := R14
	971	[9713]	MOVE     	R0 R28 ; R0 := R28
	972	[9713]	MOVE     	R0 R27 ; R0 := R27
	973	[9713]	MOVE     	R0 R97 ; R0 := R97
	974	[9713]	MOVE     	R0 R98 ; R0 := R98
	975	[9713]	MOVE     	R0 R87 ; R0 := R87
	976	[9713]	SETTABLE 	R55 K232 R164 ; R55["ExitColorPicker"] := R164
	977	[10346]	CLOSURE  	R164 148 ; R164 := closure(Function #149)
	978	[10346]	MOVE     	R0 R55 ; R0 := R55
	979	[10346]	MOVE     	R0 R12 ; R0 := R12
	980	[10346]	MOVE     	R0 R37 ; R0 := R37
	981	[10346]	MOVE     	R0 R3 ; R0 := R3
	982	[10346]	MOVE     	R0 R153 ; R0 := R153
	983	[10346]	MOVE     	R0 R154 ; R0 := R154
	984	[10346]	MOVE     	R0 R156 ; R0 := R156
	985	[10346]	MOVE     	R0 R101 ; R0 := R101
	986	[10346]	MOVE     	R0 R11 ; R0 := R11
	987	[10346]	MOVE     	R0 R138 ; R0 := R138
	988	[10346]	MOVE     	R0 R94 ; R0 := R94
	989	[10346]	MOVE     	R0 R39 ; R0 := R39
	990	[10346]	MOVE     	R0 R2 ; R0 := R2
	991	[10346]	MOVE     	R0 R96 ; R0 := R96
	992	[10346]	MOVE     	R0 R78 ; R0 := R78
	993	[10346]	MOVE     	R0 R28 ; R0 := R28
	994	[10346]	MOVE     	R0 R27 ; R0 := R27
	995	[10346]	MOVE     	R0 R97 ; R0 := R97
	996	[10346]	MOVE     	R0 R98 ; R0 := R98
	997	[10346]	MOVE     	R0 R81 ; R0 := R81
	998	[10346]	MOVE     	R0 R9 ; R0 := R9
	999	[10346]	MOVE     	R0 R1 ; R0 := R1
	1000	[10346]	MOVE     	R0 R90 ; R0 := R90
	1001	[10346]	MOVE     	R0 R119 ; R0 := R119
	1002	[10346]	MOVE     	R0 R22 ; R0 := R22
	1003	[10430]	CLOSURE  	R165 149 ; R165 := closure(Function #150)
	1004	[10430]	MOVE     	R0 R12 ; R0 := R12
	1005	[10430]	MOVE     	R0 R11 ; R0 := R11
	1006	[10430]	MOVE     	R0 R3 ; R0 := R3
	1007	[10430]	MOVE     	R0 R82 ; R0 := R82
	1008	[10430]	MOVE     	R0 R95 ; R0 := R95
	1009	[10430]	MOVE     	R0 R73 ; R0 := R73
	1010	[10430]	MOVE     	R0 R13 ; R0 := R13
	1011	[10430]	MOVE     	R0 R46 ; R0 := R46
	1012	[10430]	MOVE     	R0 R65 ; R0 := R65
	1013	[10430]	MOVE     	R0 R32 ; R0 := R32
	1014	[10430]	MOVE     	R0 R55 ; R0 := R55
	1015	[10430]	MOVE     	R0 R87 ; R0 := R87
	1016	[10515]	CLOSURE  	R166 150 ; R166 := closure(Function #151)
	1017	[10515]	MOVE     	R0 R64 ; R0 := R64
	1018	[10515]	MOVE     	R0 R52 ; R0 := R52
	1019	[10515]	MOVE     	R0 R2 ; R0 := R2
	1020	[10515]	MOVE     	R0 R104 ; R0 := R104
	1021	[10515]	MOVE     	R0 R103 ; R0 := R103
	1022	[10515]	MOVE     	R0 R55 ; R0 := R55
	1023	[10515]	MOVE     	R0 R3 ; R0 := R3
	1024	[10519]	CLOSURE  	R167 151 ; R167 := closure(Function #152)
	1025	[10519]	MOVE     	R0 R55 ; R0 := R55
	1026	[10517]	SETGLOBAL	R167 K233 ; RefreshLoadout := R167
	1027	[10548]	CLOSURE  	R167 152 ; R167 := closure(Function #153)
	1028	[10548]	MOVE     	R0 R12 ; R0 := R12
	1029	[10548]	MOVE     	R0 R11 ; R0 := R11
	1030	[10548]	MOVE     	R0 R3 ; R0 := R3
	1031	[10548]	MOVE     	R0 R13 ; R0 := R13
	1032	[10548]	MOVE     	R0 R166 ; R0 := R166
	1033	[10548]	MOVE     	R0 R2 ; R0 := R2
	1034	[10548]	MOVE     	R0 R64 ; R0 := R64
	1035	[10552]	CLOSURE  	R168 153 ; R168 := closure(Function #154)
	1036	[10552]	MOVE     	R0 R167 ; R0 := R167
	1037	[10550]	SETGLOBAL	R168 K234 ; OpenLoadoutSelection := R168
	1038	[10590]	CLOSURE  	R168 154 ; R168 := closure(Function #155)
	1039	[10590]	MOVE     	R0 R12 ; R0 := R12
	1040	[10590]	MOVE     	R0 R11 ; R0 := R11
	1041	[10590]	MOVE     	R0 R20 ; R0 := R20
	1042	[10590]	MOVE     	R0 R167 ; R0 := R167
	1043	[10590]	MOVE     	R0 R3 ; R0 := R3
	1044	[10596]	CLOSURE  	R169 155 ; R169 := closure(Function #156)
	1045	[10596]	MOVE     	R0 R12 ; R0 := R12
	1046	[10596]	MOVE     	R0 R11 ; R0 := R11
	1047	[10596]	MOVE     	R0 R167 ; R0 := R167
	1048	[10592]	SETGLOBAL	R169 K235 ; onKeyDown_MENU_RTHUMB := R169
	1049	[10629]	CLOSURE  	R169 156 ; R169 := closure(Function #157)
	1050	[10629]	MOVE     	R0 R101 ; R0 := R101
	1051	[10629]	MOVE     	R0 R11 ; R0 := R11
	1052	[10629]	MOVE     	R0 R55 ; R0 := R55
	1053	[10629]	MOVE     	R0 R138 ; R0 := R138
	1054	[10629]	MOVE     	R0 R3 ; R0 := R3
	1055	[10649]	CLOSURE  	R170 157 ; R170 := closure(Function #158)
	1056	[10649]	MOVE     	R0 R53 ; R0 := R53
	1057	[10649]	MOVE     	R0 R101 ; R0 := R101
	1058	[10649]	MOVE     	R0 R11 ; R0 := R11
	1059	[10649]	MOVE     	R0 R12 ; R0 := R12
	1060	[10649]	MOVE     	R0 R55 ; R0 := R55
	1061	[10653]	CLOSURE  	R171 158 ; R171 := closure(Function #159)
	1062	[10653]	MOVE     	R0 R169 ; R0 := R169
	1063	[10657]	CLOSURE  	R172 159 ; R172 := closure(Function #160)
	1064	[10657]	MOVE     	R0 R169 ; R0 := R169
	1065	[10669]	CLOSURE  	R173 160 ; R173 := closure(Function #161)
	1066	[10669]	MOVE     	R0 R34 ; R0 := R34
	1067	[10669]	MOVE     	R0 R55 ; R0 := R55
	1068	[10659]	SETGLOBAL	R173 K236 ; OnPvpDefaultLoadoutCreated := R173
	1069	[10726]	CLOSURE  	R173 161 ; R173 := closure(Function #162)
	1070	[10726]	MOVE     	R0 R34 ; R0 := R34
	1071	[10726]	MOVE     	R0 R2 ; R0 := R2
	1072	[10726]	MOVE     	R0 R55 ; R0 := R55
	1073	[10814]	CLOSURE  	R174 162 ; R174 := closure(Function #163)
	1074	[10814]	MOVE     	R0 R12 ; R0 := R12
	1075	[10814]	MOVE     	R0 R11 ; R0 := R11
	1076	[10814]	MOVE     	R0 R146 ; R0 := R146
	1077	[10814]	MOVE     	R0 R56 ; R0 := R56
	1078	[10814]	MOVE     	R0 R116 ; R0 := R116
	1079	[10814]	MOVE     	R0 R118 ; R0 := R118
	1080	[10814]	MOVE     	R0 R73 ; R0 := R73
	1081	[10814]	MOVE     	R0 R13 ; R0 := R13
	1082	[10814]	MOVE     	R0 R46 ; R0 := R46
	1083	[10814]	MOVE     	R0 R55 ; R0 := R55
	1084	[10814]	MOVE     	R0 R52 ; R0 := R52
	1085	[10814]	MOVE     	R0 R2 ; R0 := R2
	1086	[10814]	MOVE     	R0 R32 ; R0 := R32
	1087	[10814]	MOVE     	R0 R131 ; R0 := R131
	1088	[10819]	CLOSURE  	R175 163 ; R175 := closure(Function #164)
	1089	[10816]	SETGLOBAL	R175 K237 ; FocusAbiltySet := R175
	1090	[10883]	CLOSURE  	R175 164 ; R175 := closure(Function #165)
	1091	[10883]	MOVE     	R0 R2 ; R0 := R2
	1092	[10821]	SETGLOBAL	R175 K238 ; UpdateFocusSlot := R175
	1093	[11049]	CLOSURE  	R58 165 ; R58 := closure(Function #166)
	1094	[11049]	MOVE     	R0 R2 ; R0 := R2
	1095	[11049]	MOVE     	R0 R51 ; R0 := R51
	1096	[11049]	MOVE     	R0 R55 ; R0 := R55
	1097	[11049]	MOVE     	R0 R13 ; R0 := R13
	1098	[11049]	MOVE     	R0 R37 ; R0 := R37
	1099	[11049]	MOVE     	R0 R174 ; R0 := R174
	1100	[11107]	CLOSURE  	R175 166 ; R175 := closure(Function #167)
	1101	[11107]	MOVE     	R0 R37 ; R0 := R37
	1102	[11113]	CLOSURE  	R176 167 ; R176 := closure(Function #168)
	1103	[11113]	MOVE     	R0 R101 ; R0 := R101
	1104	[11113]	MOVE     	R0 R11 ; R0 := R11
	1105	[11113]	MOVE     	R0 R138 ; R0 := R138
	1106	[11166]	CLOSURE  	R177 168 ; R177 := closure(Function #169)
	1107	[11166]	MOVE     	R0 R176 ; R0 := R176
	1108	[11166]	MOVE     	R0 R9 ; R0 := R9
	1109	[11166]	MOVE     	R0 R1 ; R0 := R1
	1110	[11919]	CLOSURE  	R178 169 ; R178 := closure(Function #170)
	1111	[11919]	MOVE     	R0 R141 ; R0 := R141
	1112	[11919]	MOVE     	R0 R3 ; R0 := R3
	1113	[11919]	MOVE     	R0 R55 ; R0 := R55
	1114	[11919]	MOVE     	R0 R113 ; R0 := R113
	1115	[11919]	MOVE     	R0 R136 ; R0 := R136
	1116	[11919]	MOVE     	R0 R139 ; R0 := R139
	1117	[11919]	MOVE     	R0 R1 ; R0 := R1
	1118	[11919]	MOVE     	R0 R90 ; R0 := R90
	1119	[11919]	MOVE     	R0 R73 ; R0 := R73
	1120	[11919]	MOVE     	R0 R13 ; R0 := R13
	1121	[11919]	MOVE     	R0 R126 ; R0 := R126
	1122	[11919]	MOVE     	R0 R127 ; R0 := R127
	1123	[11919]	MOVE     	R0 R157 ; R0 := R157
	1124	[11919]	MOVE     	R0 R92 ; R0 := R92
	1125	[11919]	MOVE     	R0 R162 ; R0 := R162
	1126	[11919]	MOVE     	R0 R158 ; R0 := R158
	1127	[11919]	MOVE     	R0 R95 ; R0 := R95
	1128	[11919]	MOVE     	R0 R150 ; R0 := R150
	1129	[11919]	MOVE     	R0 R20 ; R0 := R20
	1130	[11926]	CLOSURE  	R179 170 ; R179 := closure(Function #171)
	1131	[11921]	SETGLOBAL	R179 K239 ; VSFocus := R179
	1132	[11936]	CLOSURE  	R179 171 ; R179 := closure(Function #172)
	1133	[11936]	MOVE     	R0 R26 ; R0 := R26
	1134	[11950]	CLOSURE  	R180 172 ; R180 := closure(Function #173)
	1135	[11950]	MOVE     	R0 R28 ; R0 := R28
	1136	[11950]	MOVE     	R0 R27 ; R0 := R27
	1137	[11950]	MOVE     	R0 R29 ; R0 := R29
	1138	[11954]	CLOSURE  	R181 173 ; R181 := closure(Function #174)
	1139	[11954]	MOVE     	R0 R179 ; R0 := R179
	1140	[11952]	SETGLOBAL	R181 K240 ; VSActivateSlider := R181
	1141	[11968]	CLOSURE  	R181 174 ; R181 := closure(Function #175)
	1142	[11968]	MOVE     	R0 R180 ; R0 := R180
	1143	[11968]	MOVE     	R0 R26 ; R0 := R26
	1144	[11978]	CLOSURE  	R182 175 ; R182 := closure(Function #176)
	1145	[11978]	MOVE     	R0 R181 ; R0 := R181
	1146	[11970]	SETGLOBAL	R182 K241 ; VSDecrement := R182
	1147	[11988]	CLOSURE  	R182 176 ; R182 := closure(Function #177)
	1148	[11988]	MOVE     	R0 R181 ; R0 := R181
	1149	[11980]	SETGLOBAL	R182 K242 ; VSIncrement := R182
	1150	[12018]	CLOSURE  	R182 177 ; R182 := closure(Function #178)
	1151	[12018]	MOVE     	R0 R3 ; R0 := R3
	1152	[12018]	MOVE     	R0 R180 ; R0 := R180
	1153	[12018]	MOVE     	R0 R22 ; R0 := R22
	1154	[12018]	MOVE     	R0 R26 ; R0 := R26
	1155	[12018]	MOVE     	R0 R179 ; R0 := R179
	1156	[11990]	SETGLOBAL	R182 K243 ; VSGoTo := R182
	1157	[12029]	CLOSURE  	R182 178 ; R182 := closure(Function #179)
	1158	[12033]	CLOSURE  	R183 179 ; R183 := closure(Function #180)
	1159	[12033]	MOVE     	R0 R182 ; R0 := R182
	1160	[12031]	SETGLOBAL	R183 K244 ; VSReset := R183
	1161	[12086]	CLOSURE  	R183 180 ; R183 := closure(Function #181)
	1162	[12086]	MOVE     	R0 R26 ; R0 := R26
	1163	[12086]	MOVE     	R0 R14 ; R0 := R14
	1164	[12086]	MOVE     	R0 R182 ; R0 := R182
	1165	[12086]	MOVE     	R0 R180 ; R0 := R180
	1166	[12086]	MOVE     	R0 R22 ; R0 := R22
	1167	[12086]	MOVE     	R0 R3 ; R0 := R3
	1168	[12223]	CLOSURE  	R184 181 ; R184 := closure(Function #182)
	1169	[12223]	MOVE     	R0 R13 ; R0 := R13
	1170	[12223]	MOVE     	R0 R3 ; R0 := R3
	1171	[12223]	MOVE     	R0 R48 ; R0 := R48
	1172	[12223]	MOVE     	R0 R52 ; R0 := R52
	1173	[12223]	MOVE     	R0 R2 ; R0 := R2
	1174	[12223]	MOVE     	R0 R78 ; R0 := R78
	1175	[12223]	MOVE     	R0 R73 ; R0 := R73
	1176	[12223]	MOVE     	R0 R46 ; R0 := R46
	1177	[12223]	MOVE     	R0 R55 ; R0 := R55
	1178	[12223]	MOVE     	R0 R36 ; R0 := R36
	1179	[12223]	SETTABLE 	R55 K245 R184 ; R55["UpdateSpaceMode"] := R184
	1180	[12235]	CLOSURE  	R184 182 ; R184 := closure(Function #183)
	1181	[12235]	MOVE     	R0 R2 ; R0 := R2
	1182	[12235]	MOVE     	R0 R9 ; R0 := R9
	1183	[12286]	CLOSURE  	R185 183 ; R185 := closure(Function #184)
	1184	[12286]	MOVE     	R0 R64 ; R0 := R64
	1185	[12286]	MOVE     	R0 R58 ; R0 := R58
	1186	[12286]	MOVE     	R0 R41 ; R0 := R41
	1187	[12286]	MOVE     	R0 R2 ; R0 := R2
	1188	[12286]	MOVE     	R0 R13 ; R0 := R13
	1189	[12286]	MOVE     	R0 R40 ; R0 := R40
	1190	[12286]	MOVE     	R0 R50 ; R0 := R50
	1191	[12286]	SETTABLE 	R55 K246 R185 ; R55["RefreshCurrentLoadout"] := R185
	1192	[12323]	CLOSURE  	R185 184 ; R185 := closure(Function #185)
	1193	[12323]	MOVE     	R0 R13 ; R0 := R13
	1194	[12323]	MOVE     	R0 R128 ; R0 := R128
	1195	[12323]	MOVE     	R0 R173 ; R0 := R173
	1196	[12323]	MOVE     	R0 R55 ; R0 := R55
	1197	[12323]	MOVE     	R0 R99 ; R0 := R99
	1198	[12323]	MOVE     	R0 R100 ; R0 := R100
	1199	[12323]	MOVE     	R0 R78 ; R0 := R78
	1200	[12323]	SETTABLE 	R55 K247 R185 ; R55["SetState"] := R185
	1201	[12343]	CLOSURE  	R59 185 ; R59 := closure(Function #186)
	1202	[12343]	MOVE     	R0 R14 ; R0 := R14
	1203	[12343]	MOVE     	R0 R13 ; R0 := R13
	1204	[12343]	MOVE     	R0 R184 ; R0 := R184
	1205	[12343]	MOVE     	R0 R3 ; R0 := R3
	1206	[12343]	MOVE     	R0 R53 ; R0 := R53
	1207	[12343]	MOVE     	R0 R55 ; R0 := R55
	1208	[12345]	NEWTABLE 	R185 0 3 ; R185 := {}
	1209	[12346]	SETTABLE 	R185 K248 K24 ; R185["mMoveUpdateDelay"] := nil
	1210	[12416]	CLOSURE  	R186 186 ; R186 := closure(Function #187)
	1211	[12416]	MOVE     	R0 R52 ; R0 := R52
	1212	[12416]	MOVE     	R0 R2 ; R0 := R2
	1213	[12416]	MOVE     	R0 R37 ; R0 := R37
	1214	[12416]	SETTABLE 	R185 K249 R186 ; R185["OnMovedToPosition"] := R186
	1215	[12498]	CLOSURE  	R186 187 ; R186 := closure(Function #188)
	1216	[12498]	MOVE     	R0 R0 ; R0 := R0
	1217	[12498]	MOVE     	R0 R2 ; R0 := R2
	1218	[12498]	MOVE     	R0 R55 ; R0 := R55
	1219	[12498]	SETTABLE 	R185 K250 R186 ; R185["ShowPowerSuitHideOperator"] := R186
	1220	[12522]	CLOSURE  	R186 188 ; R186 := closure(Function #189)
	1221	[12522]	MOVE     	R0 R55 ; R0 := R55
	1222	[12890]	CLOSURE  	R187 189 ; R187 := closure(Function #190)
	1223	[12890]	MOVE     	R0 R21 ; R0 := R21
	1224	[12890]	MOVE     	R0 R20 ; R0 := R20
	1225	[12890]	MOVE     	R0 R106 ; R0 := R106
	1226	[12890]	MOVE     	R0 R53 ; R0 := R53
	1227	[12890]	MOVE     	R0 R60 ; R0 := R60
	1228	[12890]	MOVE     	R0 R25 ; R0 := R25
	1229	[12890]	MOVE     	R0 R57 ; R0 := R57
	1230	[12890]	MOVE     	R0 R117 ; R0 := R117
	1231	[12890]	MOVE     	R0 R12 ; R0 := R12
	1232	[12890]	MOVE     	R0 R11 ; R0 := R11
	1233	[12890]	MOVE     	R0 R55 ; R0 := R55
	1234	[12890]	MOVE     	R0 R14 ; R0 := R14
	1235	[12890]	MOVE     	R0 R3 ; R0 := R3
	1236	[12890]	MOVE     	R0 R24 ; R0 := R24
	1237	[12890]	MOVE     	R0 R13 ; R0 := R13
	1238	[12890]	MOVE     	R0 R17 ; R0 := R17
	1239	[12890]	MOVE     	R0 R56 ; R0 := R56
	1240	[12890]	MOVE     	R0 R47 ; R0 := R47
	1241	[12890]	MOVE     	R0 R52 ; R0 := R52
	1242	[12890]	MOVE     	R0 R2 ; R0 := R2
	1243	[12890]	MOVE     	R0 R88 ; R0 := R88
	1244	[12890]	MOVE     	R0 R18 ; R0 := R18
	1245	[12890]	MOVE     	R0 R65 ; R0 := R65
	1246	[12890]	MOVE     	R0 R32 ; R0 := R32
	1247	[12890]	MOVE     	R0 R39 ; R0 := R39
	1248	[12890]	MOVE     	R0 R89 ; R0 := R89
	1249	[12890]	MOVE     	R0 R177 ; R0 := R177
	1250	[12890]	MOVE     	R0 R178 ; R0 := R178
	1251	[12890]	MOVE     	R0 R183 ; R0 := R183
	1252	[12890]	MOVE     	R0 R28 ; R0 := R28
	1253	[12890]	MOVE     	R0 R27 ; R0 := R27
	1254	[12890]	MOVE     	R0 R29 ; R0 := R29
	1255	[12890]	MOVE     	R0 R155 ; R0 := R155
	1256	[12890]	MOVE     	R0 R26 ; R0 := R26
	1257	[12890]	MOVE     	R0 R33 ; R0 := R33
	1258	[12890]	MOVE     	R0 R0 ; R0 := R0
	1259	[12890]	MOVE     	R0 R185 ; R0 := R185
	1260	[12890]	MOVE     	R0 R68 ; R0 := R68
	1261	[12890]	MOVE     	R0 R30 ; R0 := R30
	1262	[12890]	MOVE     	R0 R135 ; R0 := R135
	1263	[12890]	MOVE     	R0 R186 ; R0 := R186
	1264	[12524]	SETGLOBAL	R187 K251 ; Update := R187
	1265	[12896]	CLOSURE  	R187 190 ; R187 := closure(Function #191)
	1266	[12896]	MOVE     	R0 R20 ; R0 := R20
	1267	[12892]	SETGLOBAL	R187 K252 ; ConfigItemFocused := R187
	1268	[12902]	CLOSURE  	R187 191 ; R187 := closure(Function #192)
	1269	[12902]	MOVE     	R0 R20 ; R0 := R20
	1270	[12898]	SETGLOBAL	R187 K253 ; ConfigItemUnfocused := R187
	1271	[12909]	CLOSURE  	R187 192 ; R187 := closure(Function #193)
	1272	[12909]	MOVE     	R0 R62 ; R0 := R62
	1273	[12909]	MOVE     	R0 R20 ; R0 := R20
	1274	[12909]	MOVE     	R0 R3 ; R0 := R3
	1275	[12904]	SETGLOBAL	R187 K254 ; ConfigItemSelected := R187
	1276	[12915]	CLOSURE  	R187 193 ; R187 := closure(Function #194)
	1277	[12915]	MOVE     	R0 R62 ; R0 := R62
	1278	[12915]	MOVE     	R0 R20 ; R0 := R20
	1279	[12911]	SETGLOBAL	R187 K255 ; ConfigItemPressed := R187
	1280	[12925]	CLOSURE  	R187 194 ; R187 := closure(Function #195)
	1281	[12925]	MOVE     	R0 R20 ; R0 := R20
	1282	[12927]	LOADK    	R188 K256 ; R188 := "RefreshConfigsMenu"
	1283	[12964]	CLOSURE  	R189 195 ; R189 := closure(Function #196)
	1284	[12964]	MOVE     	R0 R20 ; R0 := R20
	1285	[12964]	MOVE     	R0 R5 ; R0 := R5
	1286	[12964]	MOVE     	R0 R84 ; R0 := R84
	1287	[12964]	MOVE     	R0 R85 ; R0 := R85
	1288	[12964]	MOVE     	R0 R187 ; R0 := R187
	1289	[12964]	SETTABLE 	R55 R188 R189 ; R55[R188] := R189
	1290	[13161]	CLOSURE  	R188 196 ; R188 := closure(Function #197)
	1291	[13161]	MOVE     	R0 R20 ; R0 := R20
	1292	[13161]	MOVE     	R0 R3 ; R0 := R3
	1293	[13161]	MOVE     	R0 R4 ; R0 := R4
	1294	[13161]	MOVE     	R0 R38 ; R0 := R38
	1295	[13161]	MOVE     	R0 R5 ; R0 := R5
	1296	[13161]	MOVE     	R0 R165 ; R0 := R165
	1297	[13161]	MOVE     	R0 R55 ; R0 := R55
	1298	[13161]	MOVE     	R0 R131 ; R0 := R131
	1299	[13174]	CLOSURE  	R189 197 ; R189 := closure(Function #198)
	1300	[13174]	MOVE     	R0 R64 ; R0 := R64
	1301	[13174]	MOVE     	R0 R166 ; R0 := R166
	1302	[13163]	SETGLOBAL	R189 K257 ; OnNewPreset := R189
	1303	[13178]	CLOSURE  	R189 198 ; R189 := closure(Function #199)
	1304	[13178]	MOVE     	R0 R22 ; R0 := R22
	1305	[13176]	SETGLOBAL	R189 K258 ; UpdateMaxLoadouts := R189
	1306	[13204]	CLOSURE  	R189 199 ; R189 := closure(Function #200)
	1307	[13204]	MOVE     	R0 R13 ; R0 := R13
	1308	[13204]	MOVE     	R0 R55 ; R0 := R55
	1309	[13208]	CLOSURE  	R190 200 ; R190 := closure(Function #201)
	1310	[13208]	MOVE     	R0 R189 ; R0 := R189
	1311	[13206]	SETGLOBAL	R190 K259 ; OpenAbilityProgression := R190
	1312	[13233]	CLOSURE  	R190 201 ; R190 := closure(Function #202)
	1313	[13210]	SETGLOBAL	R190 K260 ; CloseAbilityProgression := R190
	1314	[13238]	CLOSURE  	R190 202 ; R190 := closure(Function #203)
	1315	[13238]	MOVE     	R0 R59 ; R0 := R59
	1316	[13341]	CLOSURE  	R191 203 ; R191 := closure(Function #204)
	1317	[13341]	MOVE     	R0 R73 ; R0 := R73
	1318	[13341]	MOVE     	R0 R186 ; R0 := R186
	1319	[13341]	MOVE     	R0 R78 ; R0 := R78
	1320	[13346]	CLOSURE  	R192 204 ; R192 := closure(Function #205)
	1321	[13346]	MOVE     	R0 R3 ; R0 := R3
	1322	[13346]	MOVE     	R0 R14 ; R0 := R14
	1323	[13355]	CLOSURE  	R193 205 ; R193 := closure(Function #206)
	1324	[13355]	MOVE     	R0 R78 ; R0 := R78
	1325	[13355]	MOVE     	R0 R73 ; R0 := R73
	1326	[13395]	CLOSURE  	R194 206 ; R194 := closure(Function #207)
	1327	[13395]	MOVE     	R0 R2 ; R0 := R2
	1328	[13395]	MOVE     	R0 R18 ; R0 := R18
	1329	[13395]	MOVE     	R0 R23 ; R0 := R23
	1330	[13395]	MOVE     	R0 R115 ; R0 := R115
	1331	[13395]	MOVE     	R0 R3 ; R0 := R3
	1332	[13395]	MOVE     	R0 R12 ; R0 := R12
	1333	[13395]	MOVE     	R0 R11 ; R0 := R11
	1334	[13395]	MOVE     	R0 R194 ; R0 := R194
	1335	[13915]	CLOSURE  	R195 207 ; R195 := closure(Function #208)
	1336	[13915]	MOVE     	R0 R40 ; R0 := R40
	1337	[13915]	MOVE     	R0 R52 ; R0 := R52
	1338	[13915]	MOVE     	R0 R2 ; R0 := R2
	1339	[13915]	MOVE     	R0 R50 ; R0 := R50
	1340	[13915]	MOVE     	R0 R36 ; R0 := R36
	1341	[13915]	MOVE     	R0 R10 ; R0 := R10
	1342	[13915]	MOVE     	R0 R148 ; R0 := R148
	1343	[13915]	MOVE     	R0 R159 ; R0 := R159
	1344	[13915]	MOVE     	R0 R174 ; R0 := R174
	1345	[13915]	MOVE     	R0 R101 ; R0 := R101
	1346	[13915]	MOVE     	R0 R11 ; R0 := R11
	1347	[13915]	MOVE     	R0 R3 ; R0 := R3
	1348	[13915]	MOVE     	R0 R35 ; R0 := R35
	1349	[13915]	MOVE     	R0 R6 ; R0 := R6
	1350	[13915]	MOVE     	R0 R170 ; R0 := R170
	1351	[13915]	MOVE     	R0 R191 ; R0 := R191
	1352	[13915]	MOVE     	R0 R171 ; R0 := R171
	1353	[13915]	MOVE     	R0 R172 ; R0 := R172
	1354	[13915]	MOVE     	R0 R37 ; R0 := R37
	1355	[13915]	MOVE     	R0 R66 ; R0 := R66
	1356	[13915]	MOVE     	R0 R22 ; R0 := R22
	1357	[13915]	MOVE     	R0 R70 ; R0 := R70
	1358	[13915]	MOVE     	R0 R0 ; R0 := R0
	1359	[13915]	MOVE     	R0 R63 ; R0 := R63
	1360	[13915]	MOVE     	R0 R33 ; R0 := R33
	1361	[13915]	MOVE     	R0 R156 ; R0 := R156
	1362	[13915]	MOVE     	R0 R190 ; R0 := R190
	1363	[13915]	MOVE     	R0 R193 ; R0 := R193
	1364	[13915]	MOVE     	R0 R192 ; R0 := R192
	1365	[13915]	MOVE     	R0 R4 ; R0 := R4
	1366	[13915]	MOVE     	R0 R78 ; R0 := R78
	1367	[13915]	MOVE     	R0 R188 ; R0 := R188
	1368	[13915]	MOVE     	R0 R152 ; R0 := R152
	1369	[13915]	MOVE     	R0 R130 ; R0 := R130
	1370	[13915]	MOVE     	R0 R129 ; R0 := R129
	1371	[13915]	MOVE     	R0 R164 ; R0 := R164
	1372	[13915]	MOVE     	R0 R175 ; R0 := R175
	1373	[13915]	MOVE     	R0 R123 ; R0 := R123
	1374	[13915]	MOVE     	R0 R124 ; R0 := R124
	1375	[13915]	MOVE     	R0 R55 ; R0 := R55
	1376	[13915]	MOVE     	R0 R80 ; R0 := R80
	1377	[13915]	MOVE     	R0 R194 ; R0 := R194
	1378	[13915]	MOVE     	R0 R75 ; R0 := R75
	1379	[13915]	MOVE     	R0 R102 ; R0 := R102
	1380	[13915]	MOVE     	R0 R45 ; R0 := R45
	1381	[13915]	MOVE     	R0 R54 ; R0 := R54
	1382	[13915]	MOVE     	R0 R65 ; R0 := R65
	1383	[13397]	SETGLOBAL	R195 K261 ; Initialize := R195
	1384	[13919]	CLOSURE  	R195 208 ; R195 := closure(Function #209)
	1385	[13917]	SETGLOBAL	R195 K262 ; OnChildScreenClosed := R195
	1386	[13923]	CLOSURE  	R195 209 ; R195 := closure(Function #210)
	1387	[13923]	MOVE     	R0 R109 ; R0 := R109
	1388	[13921]	SETGLOBAL	R195 K263 ; Close := R195
	1389	[13940]	CLOSURE  	R195 210 ; R195 := closure(Function #211)
	1390	[13940]	MOVE     	R0 R109 ; R0 := R109
	1391	[13940]	MOVE     	R0 R106 ; R0 := R106
	1392	[13925]	SETGLOBAL	R195 K264 ; TransitionOut := R195
	1393	[13944]	CLOSURE  	R195 211 ; R195 := closure(Function #212)
	1394	[13944]	MOVE     	R0 R109 ; R0 := R109
	1395	[13942]	SETGLOBAL	R195 K265 ; ExitScreen := R195
	1396	[13956]	CLOSURE  	R60 212 ; R60 := closure(Function #213)
	1397	[13956]	MOVE     	R0 R2 ; R0 := R2
	1398	[13956]	MOVE     	R0 R62 ; R0 := R62
	1399	[13956]	MOVE     	R0 R12 ; R0 := R12
	1400	[13956]	MOVE     	R0 R11 ; R0 := R11
	1401	[13956]	MOVE     	R0 R54 ; R0 := R54
	1402	[14056]	CLOSURE  	R57 213 ; R57 := closure(Function #214)
	1403	[14056]	MOVE     	R0 R60 ; R0 := R60
	1404	[14056]	MOVE     	R0 R3 ; R0 := R3
	1405	[14056]	MOVE     	R0 R2 ; R0 := R2
	1406	[14056]	MOVE     	R0 R37 ; R0 := R37
	1407	[14056]	MOVE     	R0 R43 ; R0 := R43
	1408	[14060]	CLOSURE  	R195 214 ; R195 := closure(Function #215)
	1409	[14060]	MOVE     	R0 R57 ; R0 := R57
	1410	[14058]	SETGLOBAL	R195 K266 ; Mod := R195
	1411	[14071]	CLOSURE  	R195 215 ; R195 := closure(Function #216)
	1412	[14071]	MOVE     	R0 R62 ; R0 := R62
	1413	[14071]	MOVE     	R0 R12 ; R0 := R12
	1414	[14071]	MOVE     	R0 R11 ; R0 := R11
	1415	[14071]	MOVE     	R0 R54 ; R0 := R54
	1416	[14071]	MOVE     	R0 R101 ; R0 := R101
	1417	[14071]	MOVE     	R0 R55 ; R0 := R55
	1418	[14071]	MOVE     	R0 R138 ; R0 := R138
	1419	[14075]	CLOSURE  	R196 216 ; R196 := closure(Function #217)
	1420	[14075]	MOVE     	R0 R195 ; R0 := R195
	1421	[14073]	SETGLOBAL	R196 K267 ; Swap := R196
	1422	[14082]	CLOSURE  	R196 217 ; R196 := closure(Function #218)
	1423	[14082]	MOVE     	R0 R62 ; R0 := R62
	1424	[14082]	MOVE     	R0 R12 ; R0 := R12
	1425	[14082]	MOVE     	R0 R11 ; R0 := R11
	1426	[14082]	MOVE     	R0 R101 ; R0 := R101
	1427	[14086]	CLOSURE  	R197 218 ; R197 := closure(Function #219)
	1428	[14086]	MOVE     	R0 R196 ; R0 := R196
	1429	[14084]	SETGLOBAL	R197 K98 ; Cosmetics := R197
	1430	[14091]	CLOSURE  	R197 219 ; R197 := closure(Function #220)
	1431	[14091]	MOVE     	R0 R56 ; R0 := R56
	1432	[14088]	SETGLOBAL	R197 K268 ; EquipItem := R197
	1433	[14095]	CLOSURE  	R197 220 ; R197 := closure(Function #221)
	1434	[14095]	MOVE     	R0 R143 ; R0 := R143
	1435	[14093]	SETGLOBAL	R197 K269 ; BuyItem := R197
	1436	[14141]	CLOSURE  	R197 221 ; R197 := closure(Function #222)
	1437	[14141]	MOVE     	R0 R62 ; R0 := R62
	1438	[14141]	MOVE     	R0 R12 ; R0 := R12
	1439	[14141]	MOVE     	R0 R11 ; R0 := R11
	1440	[14141]	MOVE     	R0 R195 ; R0 := R195
	1441	[14141]	MOVE     	R0 R14 ; R0 := R14
	1442	[14097]	SETGLOBAL	R197 K270 ; onKeyUp_MENU_SELECT := R197
	1443	[14158]	CLOSURE  	R197 222 ; R197 := closure(Function #223)
	1444	[14158]	MOVE     	R0 R62 ; R0 := R62
	1445	[14158]	MOVE     	R0 R12 ; R0 := R12
	1446	[14158]	MOVE     	R0 R11 ; R0 := R11
	1447	[14158]	MOVE     	R0 R196 ; R0 := R196
	1448	[14143]	SETGLOBAL	R197 K271 ; onKeyUp_MENU_GENERIC1 := R197
	1449	[14173]	CLOSURE  	R197 223 ; R197 := closure(Function #224)
	1450	[14173]	MOVE     	R0 R62 ; R0 := R62
	1451	[14173]	MOVE     	R0 R12 ; R0 := R12
	1452	[14173]	MOVE     	R0 R11 ; R0 := R11
	1453	[14173]	MOVE     	R0 R57 ; R0 := R57
	1454	[14160]	SETGLOBAL	R197 K272 ; onKeyUp_MENU_GENERIC2 := R197
	1455	[14179]	CLOSURE  	R197 224 ; R197 := closure(Function #225)
	1456	[14179]	MOVE     	R0 R62 ; R0 := R62
	1457	[14179]	MOVE     	R0 R12 ; R0 := R12
	1458	[14179]	MOVE     	R0 R11 ; R0 := R11
	1459	[14175]	SETGLOBAL	R197 K273 ; onKeyDown_MENU_GENERIC2 := R197
	1460	[14188]	CLOSURE  	R197 225 ; R197 := closure(Function #226)
	1461	[14188]	MOVE     	R0 R62 ; R0 := R62
	1462	[14182]	SETGLOBAL	R197 K274 ; onKeyDown_MENU_RTRIGGER1 := R197
	1463	[14204]	CLOSURE  	R197 226 ; R197 := closure(Function #227)
	1464	[14204]	MOVE     	R0 R62 ; R0 := R62
	1465	[14204]	MOVE     	R0 R12 ; R0 := R12
	1466	[14204]	MOVE     	R0 R11 ; R0 := R11
	1467	[14204]	MOVE     	R0 R189 ; R0 := R189
	1468	[14190]	SETGLOBAL	R197 K275 ; onKeyUp_MENU_RTRIGGER1 := R197
	1469	[14218]	CLOSURE  	R197 227 ; R197 := closure(Function #228)
	1470	[14218]	MOVE     	R0 R62 ; R0 := R62
	1471	[14218]	MOVE     	R0 R21 ; R0 := R21
	1472	[14218]	MOVE     	R0 R190 ; R0 := R190
	1473	[14206]	SETGLOBAL	R197 K276 ; onKeyUp_MENU_LTHUMB := R197
	1474	[14241]	CLOSURE  	R197 228 ; R197 := closure(Function #229)
	1475	[14301]	CLOSURE  	R198 229 ; R198 := closure(Function #230)
	1476	[14301]	MOVE     	R0 R90 ; R0 := R90
	1477	[14301]	MOVE     	R0 R197 ; R0 := R197
	1478	[14301]	MOVE     	R0 R28 ; R0 := R28
	1479	[14301]	MOVE     	R0 R27 ; R0 := R27
	1480	[14301]	MOVE     	R0 R73 ; R0 := R73
	1481	[14301]	MOVE     	R0 R13 ; R0 := R13
	1482	[14301]	MOVE     	R0 R46 ; R0 := R46
	1483	[14301]	MOVE     	R0 R65 ; R0 := R65
	1484	[14301]	MOVE     	R0 R32 ; R0 := R32
	1485	[14301]	MOVE     	R0 R55 ; R0 := R55
	1486	[14301]	MOVE     	R0 R101 ; R0 := R101
	1487	[14301]	MOVE     	R0 R11 ; R0 := R11
	1488	[14301]	MOVE     	R0 R118 ; R0 := R118
	1489	[14301]	MOVE     	R0 R80 ; R0 := R80
	1490	[14303]	LOADK    	R199 K277 ; R199 := "_GoBack"
	1491	[14503]	CLOSURE  	R200 230 ; R200 := closure(Function #231)
	1492	[14503]	MOVE     	R0 R62 ; R0 := R62
	1493	[14503]	MOVE     	R0 R12 ; R0 := R12
	1494	[14503]	MOVE     	R0 R11 ; R0 := R11
	1495	[14503]	MOVE     	R0 R13 ; R0 := R13
	1496	[14503]	MOVE     	R0 R3 ; R0 := R3
	1497	[14503]	MOVE     	R0 R109 ; R0 := R109
	1498	[14503]	MOVE     	R0 R59 ; R0 := R59
	1499	[14503]	MOVE     	R0 R53 ; R0 := R53
	1500	[14503]	MOVE     	R0 R101 ; R0 := R101
	1501	[14503]	MOVE     	R0 R118 ; R0 := R118
	1502	[14503]	MOVE     	R0 R80 ; R0 := R80
	1503	[14503]	MOVE     	R0 R198 ; R0 := R198
	1504	[14503]	MOVE     	R0 R78 ; R0 := R78
	1505	[14503]	MOVE     	R0 R73 ; R0 := R73
	1506	[14503]	MOVE     	R0 R46 ; R0 := R46
	1507	[14503]	MOVE     	R0 R55 ; R0 := R55
	1508	[14503]	MOVE     	R0 R87 ; R0 := R87
	1509	[14503]	MOVE     	R0 R52 ; R0 := R52
	1510	[14503]	MOVE     	R0 R2 ; R0 := R2
	1511	[14503]	MOVE     	R0 R70 ; R0 := R70
	1512	[14503]	MOVE     	R0 R105 ; R0 := R105
	1513	[14503]	MOVE     	R0 R32 ; R0 := R32
	1514	[14503]	MOVE     	R0 R86 ; R0 := R86
	1515	[14503]	MOVE     	R0 R114 ; R0 := R114
	1516	[14503]	MOVE     	R0 R28 ; R0 := R28
	1517	[14503]	MOVE     	R0 R27 ; R0 := R27
	1518	[14503]	MOVE     	R0 R97 ; R0 := R97
	1519	[14503]	MOVE     	R0 R98 ; R0 := R98
	1520	[14503]	MOVE     	R0 R79 ; R0 := R79
	1521	[14503]	SETTABLE 	R55 R199 R200 ; R55[R199] := R200
	1522	[14508]	CLOSURE  	R199 231 ; R199 := closure(Function #232)
	1523	[14508]	MOVE     	R0 R55 ; R0 := R55
	1524	[14508]	MOVE     	R0 R3 ; R0 := R3
	1525	[14505]	SETGLOBAL	R199 K278 ; GoBack := R199
	1526	[14520]	CLOSURE  	R199 232 ; R199 := closure(Function #233)
	1527	[14520]	MOVE     	R0 R62 ; R0 := R62
	1528	[14520]	MOVE     	R0 R12 ; R0 := R12
	1529	[14520]	MOVE     	R0 R11 ; R0 := R11
	1530	[14520]	MOVE     	R0 R55 ; R0 := R55
	1531	[14510]	SETGLOBAL	R199 K279 ; onKeyDown_MENU_CANCEL := R199
	1532	[14536]	CLOSURE  	R199 233 ; R199 := closure(Function #234)
	1533	[14536]	MOVE     	R0 R66 ; R0 := R66
	1534	[14536]	MOVE     	R0 R25 ; R0 := R25
	1535	[14536]	MOVE     	R0 R151 ; R0 := R151
	1536	[14536]	MOVE     	R0 R150 ; R0 := R150
	1537	[14522]	SETGLOBAL	R199 K280 ; onViewportSizeChanged := R199
	1538	[14549]	CLOSURE  	R199 234 ; R199 := closure(Function #235)
	1539	[14549]	MOVE     	R0 R15 ; R0 := R15
	1540	[14549]	MOVE     	R0 R4 ; R0 := R4
	1541	[14538]	SETGLOBAL	R199 K281 ; AbilityRollOver := R199
	1542	[14553]	CLOSURE  	R199 235 ; R199 := closure(Function #236)
	1543	[14551]	SETGLOBAL	R199 K282 ; AbilityRollOut := R199
	1544	[14557]	CLOSURE  	R199 236 ; R199 := closure(Function #237)
	1545	[14557]	MOVE     	R0 R3 ; R0 := R3
	1546	[14555]	SETGLOBAL	R199 K283 ; RollOver := R199
	1547	[14563]	CLOSURE  	R199 237 ; R199 := closure(Function #238)
	1548	[14559]	SETGLOBAL	R199 K284 ; MenuItemFocused := R199
	1549	[14569]	CLOSURE  	R199 238 ; R199 := closure(Function #239)
	1550	[14565]	SETGLOBAL	R199 K285 ; MenuItemUnfocused := R199
	1551	[14575]	CLOSURE  	R199 239 ; R199 := closure(Function #240)
	1552	[14575]	MOVE     	R0 R62 ; R0 := R62
	1553	[14571]	SETGLOBAL	R199 K286 ; MenuItemPressed := R199
	1554	[14581]	CLOSURE  	R199 240 ; R199 := closure(Function #241)
	1555	[14577]	SETGLOBAL	R199 K287 ; CosmeticsItemFocused := R199
	1556	[14587]	CLOSURE  	R199 241 ; R199 := closure(Function #242)
	1557	[14583]	SETGLOBAL	R199 K288 ; CosmeticsItemUnfocused := R199
	1558	[14593]	CLOSURE  	R199 242 ; R199 := closure(Function #243)
	1559	[14593]	MOVE     	R0 R62 ; R0 := R62
	1560	[14589]	SETGLOBAL	R199 K289 ; CosmeticsItemPressed := R199
	1561	[14599]	CLOSURE  	R199 243 ; R199 := closure(Function #244)
	1562	[14595]	SETGLOBAL	R199 K290 ; DropDownArrowPressed := R199
	1563	[14605]	CLOSURE  	R199 244 ; R199 := closure(Function #245)
	1564	[14601]	SETGLOBAL	R199 K291 ; DropDownArrowFocused := R199
	1565	[14611]	CLOSURE  	R199 245 ; R199 := closure(Function #246)
	1566	[14607]	SETGLOBAL	R199 K292 ; DropDownArrowUnfocused := R199
	1567	[14617]	CLOSURE  	R199 246 ; R199 := closure(Function #247)
	1568	[14613]	SETGLOBAL	R199 K293 ; SortByFocused := R199
	1569	[14623]	CLOSURE  	R199 247 ; R199 := closure(Function #248)
	1570	[14619]	SETGLOBAL	R199 K294 ; SortByUnfocused := R199
	1571	[14629]	CLOSURE  	R199 248 ; R199 := closure(Function #249)
	1572	[14629]	MOVE     	R0 R62 ; R0 := R62
	1573	[14625]	SETGLOBAL	R199 K295 ; SortByPressed := R199
	1574	[14633]	CLOSURE  	R199 249 ; R199 := closure(Function #250)
	1575	[14633]	MOVE     	R0 R14 ; R0 := R14
	1576	[14631]	SETGLOBAL	R199 K296 ; onKeyDown_MENU_CLICK := R199
	1577	[14641]	CLOSURE  	R199 250 ; R199 := closure(Function #251)
	1578	[14641]	MOVE     	R0 R14 ; R0 := R14
	1579	[14641]	MOVE     	R0 R62 ; R0 := R62
	1580	[14635]	SETGLOBAL	R199 K297 ; onKeyUp_MENU_CLICK := R199
	1581	[14652]	CLOSURE  	R199 251 ; R199 := closure(Function #252)
	1582	[14652]	MOVE     	R0 R14 ; R0 := R14
	1583	[14643]	SETGLOBAL	R199 K298 ; onKeyDown_MENU_RIGHT_X := R199
	1584	[14654]	LOADK    	R199 K299 ; R199 := "GetScrollBar"
	1585	[14664]	CLOSURE  	R200 252 ; R200 := closure(Function #253)
	1586	[14664]	MOVE     	R0 R25 ; R0 := R25
	1587	[14664]	MOVE     	R0 R55 ; R0 := R55
	1588	[14664]	MOVE     	R0 R12 ; R0 := R12
	1589	[14664]	MOVE     	R0 R11 ; R0 := R11
	1590	[14664]	SETTABLE 	R55 R199 R200 ; R55[R199] := R200
	1591	[14675]	CLOSURE  	R199 253 ; R199 := closure(Function #254)
	1592	[14675]	MOVE     	R0 R14 ; R0 := R14
	1593	[14666]	SETGLOBAL	R199 K300 ; onKeyUp_MENU_RIGHT_X := R199
	1594	[14688]	CLOSURE  	R199 254 ; R199 := closure(Function #255)
	1595	[14688]	MOVE     	R0 R55 ; R0 := R55
	1596	[14688]	MOVE     	R0 R62 ; R0 := R62
	1597	[14693]	CLOSURE  	R200 255 ; R200 := closure(Function #256)
	1598	[14693]	MOVE     	R0 R199 ; R0 := R199
	1599	[14690]	SETGLOBAL	R200 K301 ; onKeyDown_MENU_RIGHT_Y := R200
	1600	[14698]	CLOSURE  	R200 256 ; R200 := closure(Function #257)
	1601	[14698]	MOVE     	R0 R199 ; R0 := R199
	1602	[14695]	SETGLOBAL	R200 K302 ; onKeyUp_MENU_RIGHT_Y := R200
	1603	[14700]	LOADK    	R200 K303 ; R200 := "IsMouseInStatCompare"
	1604	[14711]	CLOSURE  	R201 257 ; R201 := closure(Function #258)
	1605	[14711]	MOVE     	R0 R3 ; R0 := R3
	1606	[14711]	SETTABLE 	R55 R200 R201 ; R55[R200] := R201
	1607	[14713]	LOADK    	R200 K304 ; R200 := "IsMouseInItemGrid"
	1608	[14727]	CLOSURE  	R201 258 ; R201 := closure(Function #259)
	1609	[14727]	SETTABLE 	R55 R200 R201 ; R55[R200] := R201
	1610	[14729]	LOADK    	R200 K305 ; R200 := "IsMouseInCosmeticsList"
	1611	[14743]	CLOSURE  	R201 259 ; R201 := closure(Function #260)
	1612	[14743]	MOVE     	R0 R3 ; R0 := R3
	1613	[14743]	SETTABLE 	R55 R200 R201 ; R55[R200] := R201
	1614	[14760]	CLOSURE  	R200 260 ; R200 := closure(Function #261)
	1615	[14760]	MOVE     	R0 R62 ; R0 := R62
	1616	[14760]	MOVE     	R0 R55 ; R0 := R55
	1617	[14745]	SETGLOBAL	R200 K306 ; onKeyDown_MENU_MOUSE_Z := R200
	1618	[14765]	CLOSURE  	R200 261 ; R200 := closure(Function #262)
	1619	[14765]	MOVE     	R0 R168 ; R0 := R168
	1620	[14762]	SETGLOBAL	R200 K307 ; onKeyDown_MENU_LTRIGGER2 := R200
	1621	[14770]	CLOSURE  	R200 262 ; R200 := closure(Function #263)
	1622	[14770]	MOVE     	R0 R168 ; R0 := R168
	1623	[14767]	SETGLOBAL	R200 K308 ; onKeyDown_MENU_RTRIGGER2 := R200
	1624	[14776]	CLOSURE  	R200 263 ; R200 := closure(Function #264)
	1625	[14772]	SETGLOBAL	R200 K309 ; ItemFocused := R200
	1626	[14782]	CLOSURE  	R200 264 ; R200 := closure(Function #265)
	1627	[14778]	SETGLOBAL	R200 K310 ; ItemUnfocused := R200
	1628	[14788]	CLOSURE  	R200 265 ; R200 := closure(Function #266)
	1629	[14788]	MOVE     	R0 R62 ; R0 := R62
	1630	[14784]	SETGLOBAL	R200 K311 ; ItemSelected := R200
	1631	[14794]	CLOSURE  	R200 266 ; R200 := closure(Function #267)
	1632	[14794]	MOVE     	R0 R62 ; R0 := R62
	1633	[14790]	SETGLOBAL	R200 K312 ; ItemPressed := R200
	1634	[14800]	CLOSURE  	R200 267 ; R200 := closure(Function #268)
	1635	[14796]	SETGLOBAL	R200 K313 ; ItemReleasedOutside := R200
	1636	[14821]	CLOSURE  	R200 268 ; R200 := closure(Function #269)
	1637	[14821]	MOVE     	R0 R7 ; R0 := R7
	1638	[14821]	MOVE     	R0 R44 ; R0 := R44
	1639	[14821]	MOVE     	R0 R35 ; R0 := R35
	1640	[14821]	MOVE     	R0 R3 ; R0 := R3
	1641	[14802]	SETGLOBAL	R200 K314 ; TopBtnFocused := R200
	1642	[14833]	CLOSURE  	R200 269 ; R200 := closure(Function #270)
	1643	[14833]	MOVE     	R0 R35 ; R0 := R35
	1644	[14823]	SETGLOBAL	R200 K315 ; TopBtnUnfocused := R200
	1645	[14885]	CLOSURE  	R200 270 ; R200 := closure(Function #271)
	1646	[14885]	MOVE     	R0 R3 ; R0 := R3
	1647	[14885]	MOVE     	R0 R163 ; R0 := R163
	1648	[14885]	MOVE     	R0 R7 ; R0 := R7
	1649	[14885]	MOVE     	R0 R44 ; R0 := R44
	1650	[14835]	SETGLOBAL	R200 K316 ; TopBtnPressed := R200
	1651	[14888]	CLOSURE  	R200 271 ; R200 := closure(Function #272)
	1652	[14887]	SETGLOBAL	R200 K317 ; ConfirmPopup := R200
	1653	[14902]	CLOSURE  	R200 272 ; R200 := closure(Function #273)
	1654	[14902]	MOVE     	R0 R76 ; R0 := R76
	1655	[14902]	MOVE     	R0 R55 ; R0 := R55
	1656	[14902]	MOVE     	R0 R77 ; R0 := R77
	1657	[14891]	SETGLOBAL	R200 K318 ; OnPurchaseResults := R200
	1658	[14909]	CLOSURE  	R200 273 ; R200 := closure(Function #274)
	1659	[14909]	MOVE     	R0 R12 ; R0 := R12
	1660	[14909]	MOVE     	R0 R11 ; R0 := R11
	1661	[14909]	MOVE     	R0 R16 ; R0 := R16
	1662	[14904]	SETGLOBAL	R200 K319 ; onKeyDown_MENU_X := R200
	1663	[14916]	CLOSURE  	R200 274 ; R200 := closure(Function #275)
	1664	[14916]	MOVE     	R0 R12 ; R0 := R12
	1665	[14916]	MOVE     	R0 R11 ; R0 := R11
	1666	[14916]	MOVE     	R0 R16 ; R0 := R16
	1667	[14911]	SETGLOBAL	R200 K320 ; onKeyUp_MENU_X := R200
	1668	[14923]	CLOSURE  	R200 275 ; R200 := closure(Function #276)
	1669	[14923]	MOVE     	R0 R12 ; R0 := R12
	1670	[14923]	MOVE     	R0 R11 ; R0 := R11
	1671	[14923]	MOVE     	R0 R16 ; R0 := R16
	1672	[14918]	SETGLOBAL	R200 K321 ; onKeyDown_MENU_Y := R200
	1673	[14930]	CLOSURE  	R200 276 ; R200 := closure(Function #277)
	1674	[14930]	MOVE     	R0 R12 ; R0 := R12
	1675	[14930]	MOVE     	R0 R11 ; R0 := R11
	1676	[14930]	MOVE     	R0 R16 ; R0 := R16
	1677	[14925]	SETGLOBAL	R200 K322 ; onKeyUp_MENU_Y := R200
	1678	[14945]	CLOSURE  	R200 277 ; R200 := closure(Function #278)
	1679	[14945]	MOVE     	R0 R13 ; R0 := R13
	1680	[14945]	MOVE     	R0 R55 ; R0 := R55
	1681	[14945]	MOVE     	R0 R109 ; R0 := R109
	1682	[14932]	SETGLOBAL	R200 K323 ; HandleCanBeClosed := R200
	1683	[14958]	CLOSURE  	R200 278 ; R200 := closure(Function #279)
	1684	[14958]	MOVE     	R0 R64 ; R0 := R64
	1685	[14947]	SETGLOBAL	R200 K324 ; PresetNameCallback := R200
	1686	[14964]	CLOSURE  	R200 279 ; R200 := closure(Function #280)
	1687	[14960]	SETGLOBAL	R200 K325 ; SetTrigger := R200
	1688	[14978]	CLOSURE  	R200 280 ; R200 := closure(Function #281)
	1689	[14978]	MOVE     	R0 R3 ; R0 := R3
	1690	[14966]	SETGLOBAL	R200 K326 ; LoadoutUIConsoleEntered := R200
	1691	[14990]	CLOSURE  	R200 281 ; R200 := closure(Function #282)
	1692	[14990]	MOVE     	R0 R3 ; R0 := R3
	1693	[14980]	SETGLOBAL	R200 K327 ; LoadoutUIConsoleExited := R200
	1694	[15000]	CLOSURE  	R200 282 ; R200 := closure(Function #283)
	1695	[14992]	SETGLOBAL	R200 K328 ; FadeDown := R200
	1696	[15010]	CLOSURE  	R200 283 ; R200 := closure(Function #284)
	1697	[15002]	SETGLOBAL	R200 K329 ; FadeUp := R200
	1698	[15012]	LOADK    	R200 K330 ; R200 := "_GetUpgradeItem"
	1699	[15077]	CLOSURE  	R201 284 ; R201 := closure(Function #285)
	1700	[15077]	MOVE     	R0 R68 ; R0 := R68
	1701	[15077]	SETTABLE 	R55 R200 R201 ; R55[R200] := R201
	1702	[15079]	LOADK    	R200 K331 ; R200 := "_CacheCurrentStats"
	1703	[15161]	CLOSURE  	R201 285 ; R201 := closure(Function #286)
	1704	[15161]	MOVE     	R0 R55 ; R0 := R55
	1705	[15161]	MOVE     	R0 R25 ; R0 := R25
	1706	[15161]	MOVE     	R0 R3 ; R0 := R3
	1707	[15161]	MOVE     	R0 R63 ; R0 := R63
	1708	[15161]	MOVE     	R0 R13 ; R0 := R13
	1709	[15161]	MOVE     	R0 R8 ; R0 := R8
	1710	[15161]	MOVE     	R0 R12 ; R0 := R12
	1711	[15161]	MOVE     	R0 R11 ; R0 := R11
	1712	[15161]	SETTABLE 	R55 R200 R201 ; R55[R200] := R201
	1713	[15166]	CLOSURE  	R200 286 ; R200 := closure(Function #287)
	1714	[15166]	MOVE     	R0 R3 ; R0 := R3
	1715	[15163]	SETGLOBAL	R200 K332 ; RollOverArrow := R200
	1716	[15170]	CLOSURE  	R200 287 ; R200 := closure(Function #288)
	1717	[15168]	SETGLOBAL	R200 K333 ; RollOutArrow := R200
	1718	[15177]	CLOSURE  	R200 288 ; R200 := closure(Function #289)
	1719	[15177]	MOVE     	R0 R62 ; R0 := R62
	1720	[15172]	SETGLOBAL	R200 K334 ; onKeyDown_HIDE_PAUSE_MENU := R200
	1721	[15187]	CLOSURE  	R200 289 ; R200 := closure(Function #290)
	1722	[15187]	MOVE     	R0 R62 ; R0 := R62
	1723	[15187]	MOVE     	R0 R168 ; R0 := R168
	1724	[15179]	SETGLOBAL	R200 K335 ; PressArrow := R200
	1725	[15230]	CLOSURE  	R200 290 ; R200 := closure(Function #291)
	1726	[15230]	MOVE     	R0 R12 ; R0 := R12
	1727	[15230]	MOVE     	R0 R11 ; R0 := R11
	1728	[15230]	MOVE     	R0 R1 ; R0 := R1
	1729	[15189]	SETGLOBAL	R200 K336 ; IconCacheFlushed := R200
	1730	[15239]	CLOSURE  	R200 291 ; R200 := closure(Function #292)
	1731	[15232]	SETGLOBAL	R200 K337 ; SetPhotoBoothArsenal := R200
	1732	[15266]	CLOSURE  	R200 292 ; R200 := closure(Function #293)
	1733	[15266]	MOVE     	R0 R12 ; R0 := R12
	1734	[15266]	MOVE     	R0 R11 ; R0 := R11
	1735	[15266]	MOVE     	R0 R14 ; R0 := R14
	1736	[15266]	MOVE     	R0 R55 ; R0 := R55
	1737	[15266]	MOVE     	R0 R20 ; R0 := R20
	1738	[15241]	SETGLOBAL	R200 K338 ; OnGamepadTransition := R200
	1739	[15271]	CLOSURE  	R200 293 ; R200 := closure(Function #294)
	1740	[15271]	MOVE     	R0 R54 ; R0 := R54
	1741	[15268]	SETGLOBAL	R200 K339 ; SacrificeQuestBlockInput := R200
	1742	[15279]	CLOSURE  	R200 294 ; R200 := closure(Function #295)
	1743	[15273]	SETGLOBAL	R200 K340 ; HideScreenForPlatPurchase := R200
	1744	[15295]	CLOSURE  	R200 295 ; R200 := closure(Function #296)
	1745	[15295]	MOVE     	R0 R47 ; R0 := R47
	1746	[15281]	SETGLOBAL	R200 K341 ; OnAppearanceCopied := R200
	1747	[15299]	CLOSURE  	R200 296 ; R200 := closure(Function #297)
	1748	[15297]	SETGLOBAL	R200 K342 ; StatSelected := R200
	1749	[15310]	CLOSURE  	R200 297 ; R200 := closure(Function #298)
	1750	[15310]	MOVE     	R0 R25 ; R0 := R25
	1751	[15310]	MOVE     	R0 R111 ; R0 := R111
	1752	[15301]	SETGLOBAL	R200 K343 ; StatFocused := R200
	1753	[15321]	CLOSURE  	R200 298 ; R200 := closure(Function #299)
	1754	[15321]	MOVE     	R0 R25 ; R0 := R25
	1755	[15312]	SETGLOBAL	R200 K344 ; StatUnfocused := R200
	1756	[15325]	CLOSURE  	R200 299 ; R200 := closure(Function #300)
	1757	[15323]	SETGLOBAL	R200 K345 ; StatPressed := R200
	1758	[15325]	RETURN   	R0 1 ; return 


function #1 <?:262,267> (17 instructions, 68 bytes at 000002112CCE9260)
4 params, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[263]	TESTSET  	R4 R1 1 ; if R1 then PC := 4 else R4 := R1 
	2	[263]	JMP      	4 ; PC := 4
	3	[263]	LOADK    	R4 K1 ; R4 := 0.300000
	4	[263]	SETTABLE 	R0 K0 R4 ; R0["Timer"] := R4
	5	[264]	GETTABLE 	R4 R0 K0 ; R4 := R0["Timer"]
	6	[264]	SETTABLE 	R0 K2 R4 ; R0["StartTime"] := R4
	7	[265]	TESTSET  	R4 R2 1 ; if R2 then PC := 10 else R4 := R2 
	8	[265]	JMP      	10 ; PC := 10
	9	[265]	LOADK    	R4 := 0.000000
	10	[265]	SETTABLE 	R0 K3 R4 ; R0["FadeInTime"] := R4
	11	[266]	TESTSET  	R4 R3 1 ; if R3 then PC := 16 else R4 := R3 
	12	[266]	JMP      	16 ; PC := 16
	13	[266]	TESTSET  	R4 R2 1 ; if R2 then PC := 16 else R4 := R2 
	14	[266]	JMP      	16 ; PC := 16
	15	[266]	LOADK    	R4 K5 ; R4 := 0.100000
	16	[266]	SETTABLE 	R0 K4 R4 ; R0["FadeOutTime"] := R4
	17	[267]	RETURN   	R0 1 ; return 

function #2 <?:288,329> (17 instructions, 68 bytes at 000002112CCE9420)
1 param, 3 slots, 0 upvalues, 0 locals, 11 constants, 4 functions
	1	[289]	NEWTABLE 	R1 0 8 ; R1 := {}
	2	[291]	SETTABLE 	R1 K0 K1 ; R1["mResLoader"] := nil
	3	[292]	GETGLOBAL	R2 K3 ; R2 := LoaderState
	4	[292]	GETTABLE 	R2 R2 K4 ; R2 := R2["LS_NONE"]
	5	[292]	SETTABLE 	R1 K2 R2 ; R1["mState"] := R2
	6	[293]	SETTABLE 	R1 K5 R0 ; R1["mCallback"] := R0
	7	[294]	SETTABLE 	R1 K6 K1 ; R1["mItems"] := nil
	8	[299]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	9	[299]	SETTABLE 	R1 K7 R2 ; R1["Load"] := R2
	10	[316]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	11	[316]	SETTABLE 	R1 K8 R2 ; R1[0xbe190284] := R2
	12	[322]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	13	[322]	SETTABLE 	R1 K9 R2 ; R1[0x23ddc82a] := R2
	14	[327]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	15	[327]	SETTABLE 	R1 K10 R2 ; R1["Pin"] := R2
	16	[328]	RETURN   	R1 2 ; return R1 
	17	[329]	RETURN   	R0 1 ; return 

function #3 <?:331,333> (7 instructions, 28 bytes at 000002112CCE9DF0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[332]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[332]	TEST     	R0 1 ; if R0 then PC := 6
	3	[332]	JMP      	6 ; PC := 6
	4	[332]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[332]	GETTABLE 	R0 R0 K1 ; R0 := R0["SacrificeQuestInputBlocked"]
	6	[332]	RETURN   	R0 2 ; return R0 
	7	[333]	RETURN   	R0 1 ; return 

function #4 <?:335,337> (4 instructions, 16 bytes at 000002112CCE9F10)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[336]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[336]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[336]	RETURN   	R0 0 ; return R0,... 
	4	[337]	RETURN   	R0 1 ; return 

function #5 <?:339,343> (6 instructions, 24 bytes at 000002112CCE9FE0)
1 param, 3 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[340]	TEST     	R0 1 ; if R0 then PC := 6
	2	[340]	JMP      	6 ; PC := 6
	3	[341]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	4	[341]	LOADK    	R2 K1 ; R2 := "Photobooth session hosting failed"
	5	[341]	CALL     	R1 2 1 ; R1(R2)
	6	[343]	RETURN   	R0 1 ; return 

function #6 <?:345,354> (28 instructions, 112 bytes at 000002112CCEA100)
0 params, 3 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[346]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[346]	GETTABLE 	R0 R0 K1 ; R0 := R0["InSimulacrum"]
	3	[346]	TEST     	R0 0 ; if not R0 then PC := 26
	4	[346]	JMP      	26 ; PC := 26
	5	[346]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	6	[346]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	7	[346]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[346]	TEST     	R0 1 ; if R0 then PC := 26
	9	[346]	JMP      	26 ; PC := 26
	10	[346]	GETGLOBAL	R0 K3 ; R0 := 0xbe190284
	11	[346]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf2deaf69]
	12	[346]	GETGLOBAL	R2 K5 ; R2 := gLotusSandBoxGameRulesType
	13	[346]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	14	[346]	TEST     	R0 0 ; if not R0 then PC := 26
	15	[346]	JMP      	26 ; PC := 26
	16	[347]	GETGLOBAL	R0 K6 ; R0 := 0x89326c93
	17	[347]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x18d05d30]
	18	[347]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[347]	TEST     	R0 0 ; if not R0 then PC := 24
	20	[347]	JMP      	24 ; PC := 24
	21	[348]	LOADK    	R0 := 3.000000
	22	[348]	RETURN   	R0 2 ; return R0 
	23	[348]	JMP      	26 ; PC := 26
	24	[350]	LOADK    	R0 := 4.000000
	25	[350]	RETURN   	R0 2 ; return R0 
	26	[353]	LOADK    	R0 := 0.000000
	27	[353]	RETURN   	R0 2 ; return R0 
	28	[354]	RETURN   	R0 1 ; return 

function #7 <?:356,365> (14 instructions, 56 bytes at 000002112CCEA320)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[357]	LOADK    	R0 := 0.000000
	2	[358]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[358]	GETTABLE 	R1 R1 K1 ; R1 := R1["Current"]
	4	[358]	EQ       	0 R1 K2 ; if R1 ~= 3.000000 then PC := 8
	5	[358]	JMP      	8 ; PC := 8
	6	[359]	LOADK    	R0 := 2.000000
	7	[359]	JMP      	13 ; PC := 13
	8	[360]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[360]	GETTABLE 	R1 R1 K1 ; R1 := R1["Current"]
	10	[360]	EQ       	0 R1 K3 ; if R1 ~= 2.000000 then PC := 13
	11	[360]	JMP      	13 ; PC := 13
	12	[361]	LOADK    	R0 := 3.000000
	13	[364]	RETURN   	R0 2 ; return R0 
	14	[365]	RETURN   	R0 1 ; return 

function #8 <?:367,369> (14 instructions, 56 bytes at 000002112CCEA4A0)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[368]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[368]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[368]	GETTABLE 	R1 R1 K0 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	4	[368]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 11
	5	[368]	JMP      	11 ; PC := 11
	6	[368]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[368]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x23ddc82a]
	8	[368]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[368]	NOT      	R0 R0 ; R0 := not R0
	10	[368]	JMP      	13 ; PC := 13
	11	[368]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 12
	12	[368]	OP_LOADBOOL	R0 1 0 ; R0 := true
	13	[368]	RETURN   	R0 2 ; return R0 
	14	[369]	RETURN   	R0 1 ; return 

function #9 <?:373,409> (86 instructions, 344 bytes at 000002112CCEA610)
4 params, 15 slots, 3 upvalues, 0 locals, 22 constants, 0 functions
	1	[374]	NEWTABLE 	R4 0 0 ; R4 := {}
	2	[376]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	3	[376]	MOVE     	R6 R1 ; R6 := R1
	4	[376]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[376]	TEST     	R5 0 ; if not R5 then PC := 9
	6	[376]	JMP      	9 ; PC := 9
	7	[377]	LOADNIL  	R5 R5 ; R5 := nil
	8	[377]	RETURN   	R5 2 ; return R5 
	9	[380]	NEWTABLE 	R5 0 0 ; R5 := {}
	10	[380]	SETUPVAL 	R5 U0 ; U0 := R5
	11	[382]	SELF     	R5 R1 K1 ; R6 := R1; R5 := R1[0xde321e6f]
	12	[382]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[383]	GETUPVAL 	R6 U1 ; R6 := U1
	14	[383]	GETTABLE 	R6 R6 K2 ; R6 := R6[0x06d055f9]
	15	[383]	SELF     	R7 R5 K3 ; R8 := R5; R7 := R5[0xac03381f]
	16	[383]	CALL     	R7 2 2 ; R7 := R7(R8)
	17	[383]	SELF     	R8 R5 K4 ; R9 := R5; R8 := R5[0x2303a280]
	18	[383]	CALL     	R8 2 2 ; R8 := R8(R9)
	19	[383]	SELF     	R9 R5 K5 ; R10 := R5; R9 := R5[0xf7d48ee0]
	20	[383]	CALL     	R9 2 0 ; R9,... := R9(R10)
	21	[383]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	22	[384]	TEST     	R3 0 ; if not R3 then PC := 39
	23	[384]	JMP      	39 ; PC := 39
	24	[385]	GETUPVAL 	R7 U2 ; R7 := U2
	25	[385]	GETTABLE 	R7 R7 K6 ; R7 := R7[0xe6e9dfc9]
	26	[385]	MOVE     	R8 R0 ; R8 := R0
	27	[385]	LOADNIL  	R9 R9 ; R9 := nil
	28	[385]	MOVE     	R10 R6 ; R10 := R6
	29	[385]	GETGLOBAL	R11 K7 ; R11 := _T
	30	[385]	GETTABLE 	R11 R11 K8 ; R11 := R11["ArsenalState"]
	31	[385]	EQ       	1 R11 K10 ; if R11 == 2.000000 then PC := 34
	32	[385]	JMP      	34 ; PC := 34
	33	[385]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 34
	34	[385]	OP_LOADBOOL	R11 1 0 ; R11 := true
	35	[385]	LOADNIL  	R12 R12 ; R12 := nil
	36	[385]	CALL     	R7 6 2 ; R7 := R7(R8,R9,R10,R11,R12)
	37	[385]	MOVE     	R4 R7 ; R4 := R7
	38	[385]	JMP      	53 ; PC := 53
	39	[387]	GETUPVAL 	R7 U2 ; R7 := U2
	40	[387]	GETTABLE 	R7 R7 K6 ; R7 := R7[0xe6e9dfc9]
	41	[387]	MOVE     	R8 R0 ; R8 := R0
	42	[387]	MOVE     	R9 R1 ; R9 := R1
	43	[387]	MOVE     	R10 R6 ; R10 := R6
	44	[387]	GETGLOBAL	R11 K7 ; R11 := _T
	45	[387]	GETTABLE 	R11 R11 K8 ; R11 := R11["ArsenalState"]
	46	[387]	EQ       	1 R11 K10 ; if R11 == 2.000000 then PC := 49
	47	[387]	JMP      	49 ; PC := 49
	48	[387]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 49
	49	[387]	OP_LOADBOOL	R11 1 0 ; R11 := true
	50	[387]	LOADNIL  	R12 R12 ; R12 := nil
	51	[387]	CALL     	R7 6 2 ; R7 := R7(R8,R9,R10,R11,R12)
	52	[387]	MOVE     	R4 R7 ; R4 := R7
	53	[390]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	54	[390]	MOVE     	R8 R6 ; R8 := R6
	55	[390]	CALL     	R7 2 2 ; R7 := R7(R8)
	56	[390]	TEST     	R7 1 ; if R7 then PC := 84
	57	[390]	JMP      	84 ; PC := 84
	58	[391]	LOADNIL  	R7 R7 ; R7 := nil
	59	[392]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	60	[392]	GETGLOBAL	R9 K11 ; R9 := mPlayerProfile
	61	[392]	CALL     	R8 2 2 ; R8 := R8(R9)
	62	[392]	TEST     	R8 1 ; if R8 then PC := 70
	63	[392]	JMP      	70 ; PC := 70
	64	[393]	GETGLOBAL	R8 K11 ; R8 := mPlayerProfile
	65	[393]	SELF     	R8 R8 K12 ; R9 := R8; R8 := R8[0x40e9c32b]
	66	[393]	CALL     	R8 2 2 ; R8 := R8(R9)
	67	[394]	SELF     	R9 R8 K13 ; R10 := R8; R9 := R8[0xa39afcfe]
	68	[394]	CALL     	R9 2 2 ; R9 := R9(R10)
	69	[394]	MOVE     	R7 R9 ; R7 := R9
	70	[396]	LOADK    	R9 := 1.000000
	71	[396]	LOADK    	R10 := 4.000000
	72	[396]	LOADK    	R11 := 1.000000
	73	[396]	FORPREP  	R9 83 ; R9 -= R11; PC := 83
	74	[397]	NEWTABLE 	R13 0 5 ; R13 := {}
	75	[398]	SETTABLE 	R13 K14 K15 ; R13["IsAbility"] := true
	76	[399]	SETTABLE 	R13 K16 K15 ; R13["CustomEntry"] := true
	77	[400]	SETTABLE 	R13 K17 R6 ; R13["Suit"] := R6
	78	[401]	SUB      	R14 R12 K19 ; R14 := R12 - 1.000000
	79	[401]	SETTABLE 	R13 K18 R14 ; R13[0xc1a84a4b] := R14
	80	[402]	SETTABLE 	R13 K20 R7 ; R13[0x7b998233] := R7
	81	[404]	GETUPVAL 	R14 U0 ; R14 := U0
	82	[404]	SETTABLE 	R14 R12 R13 ; R14[R12] := R13
	83	[396]	FORLOOP  	R9 74 ; R9 += R11; if R9 <= R10 then begin PC := 74; R12 := R9 end
	84	[408]	GETTABLE 	R14 R4 K21 ; R14 := R4["mStats"]
	85	[408]	RETURN   	R14 2 ; return R14 
	86	[409]	RETURN   	R0 1 ; return 

function #10 <?:411,426> (34 instructions, 136 bytes at 000002112CCEAAF0)
1 param, 2 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[412]	EQ       	0 R0 K1 ; if R0 ~= 0.000000 then PC := 6
	2	[412]	JMP      	6 ; PC := 6
	3	[413]	LOADK    	R1 := 3.000000
	4	[413]	RETURN   	R1 2 ; return R1 
	5	[413]	JMP      	32 ; PC := 32
	6	[414]	EQ       	0 R0 K3 ; if R0 ~= 2.000000 then PC := 11
	7	[414]	JMP      	11 ; PC := 11
	8	[415]	LOADK    	R1 := 1.000000
	9	[415]	RETURN   	R1 2 ; return R1 
	10	[415]	JMP      	32 ; PC := 32
	11	[416]	EQ       	0 R0 K4 ; if R0 ~= 1.000000 then PC := 16
	12	[416]	JMP      	16 ; PC := 16
	13	[417]	LOADK    	R1 := 0.000000
	14	[417]	RETURN   	R1 2 ; return R1 
	15	[417]	JMP      	32 ; PC := 32
	16	[418]	EQ       	0 R0 K5 ; if R0 ~= 3.000000 then PC := 21
	17	[418]	JMP      	21 ; PC := 21
	18	[419]	LOADK    	R1 := 5.000000
	19	[419]	RETURN   	R1 2 ; return R1 
	20	[419]	JMP      	32 ; PC := 32
	21	[420]	EQ       	1 R0 K6 ; if R0 == 5.000000 then PC := 25
	22	[420]	JMP      	25 ; PC := 25
	23	[420]	EQ       	0 R0 K7 ; if R0 ~= 6.000000 then PC := 28
	24	[420]	JMP      	28 ; PC := 28
	25	[421]	LOADK    	R1 := 7.000000
	26	[421]	RETURN   	R1 2 ; return R1 
	27	[421]	JMP      	32 ; PC := 32
	28	[422]	EQ       	0 R0 K8 ; if R0 ~= 4.000000 then PC := 32
	29	[422]	JMP      	32 ; PC := 32
	30	[423]	LOADK    	R1 := 10.000000
	31	[423]	RETURN   	R1 2 ; return R1 
	32	[425]	LOADNIL  	R1 R1 ; R1 := nil
	33	[425]	RETURN   	R1 2 ; return R1 
	34	[426]	RETURN   	R0 1 ; return 

function #11 <?:428,437> (25 instructions, 100 bytes at 000002112CCEAD60)
0 params, 3 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[429]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[429]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xa9882367]
	3	[429]	LOADK    	R1 K1 ; R1 := "MoaInteractionAction"
	4	[429]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[430]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[430]	MOVE     	R2 R0 ; R2 := R0
	7	[430]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[430]	TEST     	R1 1 ; if R1 then PC := 25
	9	[430]	JMP      	25 ; PC := 25
	10	[431]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	11	[431]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	12	[431]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[431]	TEST     	R1 1 ; if R1 then PC := 23
	14	[431]	JMP      	23 ; PC := 23
	15	[431]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	16	[431]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x9f91f49d]
	17	[431]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[431]	TEST     	R1 0 ; if not R1 then PC := 23
	19	[431]	JMP      	23 ; PC := 23
	20	[432]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0x383d2e7d]
	21	[432]	CALL     	R1 2 1 ; R1(R2)
	22	[432]	JMP      	25 ; PC := 25
	23	[434]	SELF     	R1 R0 K6 ; R2 := R0; R1 := R0[0xf4e253b6]
	24	[434]	CALL     	R1 2 1 ; R1(R2)
	25	[437]	RETURN   	R0 1 ; return 

function #12 <?:439,449> (25 instructions, 100 bytes at 000002112CCEAF70)
1 param, 5 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[440]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[440]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[440]	GETTABLE 	R2 R2 K0 ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
	4	[440]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 20
	5	[440]	JMP      	20 ; PC := 20
	6	[441]	GETGLOBAL	R1 K1 ; R1 := _T
	7	[441]	GETTABLE 	R1 R1 K2 ; R1 := R1["MenuSuitAvatar"]
	8	[442]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	9	[442]	MOVE     	R3 R1 ; R3 := R1
	10	[442]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[442]	TEST     	R2 1 ; if R2 then PC := 18
	12	[442]	JMP      	18 ; PC := 18
	13	[443]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xde321e6f]
	14	[443]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[443]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x2676deee]
	16	[443]	TAILCALL 	R2 2 0 ; R2,... := R2(R3)
	17	[443]	RETURN   	R2 0 ; return R2,... 
	18	[445]	LOADNIL  	R2 R2 ; R2 := nil
	19	[445]	RETURN   	R2 2 ; return R2 
	20	[448]	GETGLOBAL	R2 K6 ; R2 := 0xbe190284
	21	[448]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x7cf8123f]
	22	[448]	MOVE     	R4 R0 ; R4 := R0
	23	[448]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	24	[448]	RETURN   	R2 0 ; return R2,... 
	25	[449]	RETURN   	R0 1 ; return 

function #13 <?:451,456> (19 instructions, 76 bytes at 000002112CCEB190)
1 param, 8 slots, 3 upvalues, 0 locals, 8 constants, 0 functions
	1	[452]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 4
	2	[452]	JMP      	4 ; PC := 4
	3	[453]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[455]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	5	[455]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x20b98db3]
	6	[455]	LOADK    	R3 K3 ; R3 := "MenuPanel.Right.Tf.text"
	7	[455]	GETUPVAL 	R4 U1 ; R4 := U1
	8	[455]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x06d055f9]
	9	[455]	GETUPVAL 	R5 U2 ; R5 := U2
	10	[455]	GETTABLE 	R5 R5 K5 ; R5 := R5["SELECTING_PART"]
	11	[455]	EQ       	1 R0 R5 ; if R0 == R5 then PC := 14
	12	[455]	JMP      	14 ; PC := 14
	13	[455]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 14
	14	[455]	OP_LOADBOOL	R5 1 0 ; R5 := true
	15	[455]	LOADK    	R6 K6 ; R6 := "<MENU_RTHUMB>"
	16	[455]	LOADK    	R7 K7 ; R7 := "<MENU_RTRIGGER2>"
	17	[455]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	18	[455]	CALL     	R1 0 1 ; R1(R2,...)
	19	[456]	RETURN   	R0 1 ; return 

function #14 <?:458,468> (24 instructions, 96 bytes at 000002112CCEB370)
1 param, 8 slots, 4 upvalues, 0 locals, 6 constants, 0 functions
	1	[461]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[461]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[461]	GETTABLE 	R3 R3 K0 ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
	4	[461]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 13
	5	[461]	JMP      	13 ; PC := 13
	6	[462]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	7	[462]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x46a0ebf5]
	8	[462]	GETUPVAL 	R4 U2 ; R4 := U2
	9	[462]	GETTABLE 	R4 R4 K3 ; R4 := R4["ARCHWING_WAYPOINT"]
	10	[462]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	11	[462]	MOVE     	R1 R2 ; R1 := R2
	12	[462]	JMP      	23 ; PC := 23
	13	[464]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	14	[464]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x462c251c]
	15	[464]	GETUPVAL 	R4 U2 ; R4 := U2
	16	[464]	GETTABLE 	R4 R4 K3 ; R4 := R4["ARCHWING_WAYPOINT"]
	17	[464]	MOVE     	R5 R0 ; R5 := R0
	18	[464]	LOADK    	R6 := 0.000000
	19	[464]	GETUPVAL 	R7 U3 ; R7 := U3
	20	[464]	GETTABLE 	R7 R7 K5 ; R7 := R7["ArchwingWaypointFindRadius"]
	21	[464]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	22	[464]	MOVE     	R1 R2 ; R1 := R2
	23	[467]	RETURN   	R1 2 ; return R1 
	24	[468]	RETURN   	R0 1 ; return 

function #15 <?:470,520> (205 instructions, 820 bytes at 000002112CCEB550)
2 params, 22 slots, 2 upvalues, 0 locals, 48 constants, 0 functions
	1	[472]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xc1a84a4b]
	2	[472]	LOADK    	R4 := 6.000000
	3	[472]	LOADK    	R5 := 0.000000
	4	[472]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	5	[474]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	6	[474]	GETGLOBAL	R4 K3 ; R4 := _T
	7	[474]	GETTABLE 	R4 R4 K4 ; R4 := R4["KDriveAvatar"]
	8	[474]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[474]	TEST     	R3 0 ; if not R3 then PC := 111
	10	[474]	JMP      	111 ; PC := 111
	11	[475]	GETTABLE 	R3 R2 K5 ; R3 := R2["mItem"]
	12	[475]	GETTABLE 	R3 R3 K6 ; R3 := R3["mModularParts"]
	13	[475]	LEN      	R3 R3 ; R3 := # R3
	14	[475]	LT       	0 K7 R3 ; if 0.000000 >= R3 then PC := 111
	15	[475]	JMP      	111 ; PC := 111
	16	[476]	GETGLOBAL	R3 K8 ; R3 := 0x88efc25e
	17	[476]	GETGLOBAL	R4 K9 ; R4 := 0xdac9387c
	18	[476]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[477]	GETGLOBAL	R4 K10 ; R4 := 0x00046924
	20	[477]	GETGLOBAL	R5 K3 ; R5 := _T
	21	[477]	GETTABLE 	R5 R5 K11 ; R5 := R5["DEFAULT_SUIT_ROTATION"]
	22	[477]	LOADK    	R6 := 0.000000
	23	[477]	LOADK    	R7 := 0.000000
	24	[477]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	25	[478]	SELF     	R5 R1 K12 ; R6 := R1; R5 := R1[0xd1586535]
	26	[478]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[478]	GETGLOBAL	R6 K13 ; R6 := 0xa421af95
	28	[478]	LOADK    	R7 := 0.000000
	29	[478]	LOADK    	R8 K14 ; R8 := 1.050000
	30	[478]	LOADK    	R9 := 0.000000
	31	[478]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	32	[478]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	33	[479]	GETUPVAL 	R6 U0 ; R6 := U0
	34	[479]	GETTABLE 	R6 R6 K15 ; R6 := R6[0x09b8fbee]
	35	[479]	SELF     	R7 R1 K12 ; R8 := R1; R7 := R1[0xd1586535]
	36	[479]	CALL     	R7 2 0 ; R7,... := R7(R8)
	37	[479]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	38	[480]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	39	[480]	MOVE     	R8 R6 ; R8 := R6
	40	[480]	CALL     	R7 2 2 ; R7 := R7(R8)
	41	[480]	TEST     	R7 1 ; if R7 then PC := 51
	42	[480]	JMP      	51 ; PC := 51
	43	[481]	SELF     	R7 R6 K12 ; R8 := R6; R7 := R6[0xd1586535]
	44	[481]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[481]	GETGLOBAL	R8 K13 ; R8 := 0xa421af95
	46	[481]	LOADK    	R9 := 0.000000
	47	[481]	LOADK    	R10 := 1.250000
	48	[481]	LOADK    	R11 := 0.000000
	49	[481]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	50	[481]	ADD      	R5 R7 R8 ; R5 := R7 + R8
	51	[483]	GETGLOBAL	R7 K3 ; R7 := _T
	52	[483]	GETGLOBAL	R8 K16 ; R8 := 0x89326c93
	53	[483]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0x05909209]
	54	[483]	MOVE     	R10 R3 ; R10 := R3
	55	[483]	MOVE     	R11 R5 ; R11 := R5
	56	[483]	MOVE     	R12 R4 ; R12 := R4
	57	[483]	MOVE     	R13 R1 ; R13 := R1
	58	[483]	MOVE     	R14 R1 ; R14 := R1
	59	[483]	GETUPVAL 	R15 U1 ; R15 := U1
	60	[483]	GETTABLE 	R15 R15 K18 ; R15 := R15[0x06d055f9]
	61	[483]	GETGLOBAL	R16 K16 ; R16 := 0x89326c93
	62	[483]	SELF     	R16 R16 K19 ; R17 := R16; R16 := R16[0x18d05d30]
	63	[483]	CALL     	R16 2 2 ; R16 := R16(R17)
	64	[483]	LOADK    	R17 := 3.000000
	65	[483]	LOADK    	R18 := 4.000000
	66	[483]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	67	[483]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	68	[483]	SETTABLE 	R7 K4 R8 ; R7["KDriveAvatar"] := R8
	69	[484]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	70	[484]	GETGLOBAL	R8 K3 ; R8 := _T
	71	[484]	GETTABLE 	R8 R8 K4 ; R8 := R8["KDriveAvatar"]
	72	[484]	CALL     	R7 2 2 ; R7 := R7(R8)
	73	[484]	TEST     	R7 1 ; if R7 then PC := 111
	74	[484]	JMP      	111 ; PC := 111
	75	[485]	GETGLOBAL	R7 K3 ; R7 := _T
	76	[485]	GETTABLE 	R7 R7 K4 ; R7 := R7["KDriveAvatar"]
	77	[485]	SELF     	R7 R7 K20 ; R8 := R7; R7 := R7[0x6667e5d4]
	78	[485]	OP_LOADBOOL	R9 1 0 ; R9 := true
	79	[485]	CALL     	R7 3 1 ; R7(R8,R9)
	80	[486]	GETGLOBAL	R7 K3 ; R7 := _T
	81	[486]	GETTABLE 	R7 R7 K4 ; R7 := R7["KDriveAvatar"]
	82	[486]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0x044b7be8]
	83	[486]	OP_LOADBOOL	R9 1 0 ; R9 := true
	84	[486]	CALL     	R7 3 1 ; R7(R8,R9)
	85	[487]	GETGLOBAL	R7 K3 ; R7 := _T
	86	[487]	GETTABLE 	R7 R7 K4 ; R7 := R7["KDriveAvatar"]
	87	[487]	SELF     	R7 R7 K22 ; R8 := R7; R7 := R7[0xd749da12]
	88	[487]	OP_LOADBOOL	R9 0 0 ; R9 := false
	89	[487]	CALL     	R7 3 1 ; R7(R8,R9)
	90	[488]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	91	[488]	GETGLOBAL	R8 K3 ; R8 := _T
	92	[488]	GETTABLE 	R8 R8 K23 ; R8 := R8["suitTable"]
	93	[488]	CALL     	R7 2 2 ; R7 := R7(R8)
	94	[488]	TEST     	R7 1 ; if R7 then PC := 111
	95	[488]	JMP      	111 ; PC := 111
	96	[488]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	97	[488]	GETGLOBAL	R8 K3 ; R8 := _T
	98	[488]	GETTABLE 	R8 R8 K23 ; R8 := R8["suitTable"]
	99	[488]	GETTABLE 	R8 R8 K24 ; R8 := R8["positions"]
	100	[488]	CALL     	R7 2 2 ; R7 := R7(R8)
	101	[488]	TEST     	R7 1 ; if R7 then PC := 111
	102	[488]	JMP      	111 ; PC := 111
	103	[489]	GETGLOBAL	R7 K3 ; R7 := _T
	104	[489]	GETTABLE 	R7 R7 K23 ; R7 := R7["suitTable"]
	105	[489]	GETTABLE 	R7 R7 K24 ; R7 := R7["positions"]
	106	[489]	GETGLOBAL	R8 K3 ; R8 := _T
	107	[489]	GETTABLE 	R8 R8 K4 ; R8 := R8["KDriveAvatar"]
	108	[489]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x388577d5]
	109	[489]	CALL     	R8 2 2 ; R8 := R8(R9)
	110	[489]	SETTABLE 	R7 R8 R5 ; R7[R8] := R5
	111	[495]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	112	[495]	GETGLOBAL	R8 K3 ; R8 := _T
	113	[495]	GETTABLE 	R8 R8 K4 ; R8 := R8["KDriveAvatar"]
	114	[495]	CALL     	R7 2 2 ; R7 := R7(R8)
	115	[495]	TEST     	R7 1 ; if R7 then PC := 205
	116	[495]	JMP      	205 ; PC := 205
	117	[496]	GETGLOBAL	R7 K3 ; R7 := _T
	118	[496]	GETTABLE 	R7 R7 K4 ; R7 := R7["KDriveAvatar"]
	119	[496]	SELF     	R7 R7 K26 ; R8 := R7; R7 := R7[0xde321e6f]
	120	[496]	CALL     	R7 2 2 ; R7 := R7(R8)
	121	[497]	SELF     	R8 R7 K27 ; R9 := R7; R8 := R7[0x374b084a]
	122	[497]	CALL     	R8 2 1 ; R8(R9)
	123	[498]	SELF     	R8 R7 K28 ; R9 := R7; R8 := R7[0xf596420f]
	124	[498]	CALL     	R8 2 1 ; R8(R9)
	125	[499]	GETGLOBAL	R8 K3 ; R8 := _T
	126	[499]	GETTABLE 	R8 R8 K4 ; R8 := R8["KDriveAvatar"]
	127	[499]	SELF     	R8 R8 K29 ; R9 := R8; R8 := R8[0x511d26b8]
	128	[499]	GETGLOBAL	R10 K8 ; R10 := 0x88efc25e
	129	[499]	GETGLOBAL	R11 K30 ; R11 := 0x26072944
	130	[499]	CALL     	R10 2 2 ; R10 := R10(R11)
	131	[499]	OP_LOADBOOL	R11 0 0 ; R11 := false
	132	[499]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	133	[500]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	134	[500]	MOVE     	R10 R8 ; R10 := R8
	135	[500]	CALL     	R9 2 2 ; R9 := R9(R10)
	136	[500]	TEST     	R9 1 ; if R9 then PC := 187
	137	[500]	JMP      	187 ; PC := 187
	138	[501]	GETTABLE 	R9 R2 K31 ; R9 := R2["mAttachedUpgrades"]
	139	[502]	GETGLOBAL	R10 K32 ; R10 := 0xc8802016
	140	[502]	MOVE     	R11 R9 ; R11 := R9
	141	[502]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	142	[502]	JMP      	161 ; PC := 161
	143	[503]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	144	[503]	GETTABLE 	R16 R14 K33 ; R16 := R14["mItemType"]
	145	[503]	CALL     	R15 2 2 ; R15 := R15(R16)
	146	[503]	TEST     	R15 1 ; if R15 then PC := 161
	147	[503]	JMP      	161 ; PC := 161
	148	[504]	GETGLOBAL	R15 K16 ; R15 := 0x89326c93
	149	[504]	SELF     	R15 R15 K34 ; R16 := R15; R15 := R15[0x765dad71]
	150	[504]	GETGLOBAL	R17 K8 ; R17 := 0x88efc25e
	151	[504]	GETTABLE 	R18 R14 K33 ; R18 := R14["mItemType"]
	152	[504]	CALL     	R17 2 2 ; R17 := R17(R18)
	153	[504]	MOVE     	R18 R8 ; R18 := R8
	154	[504]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	155	[505]	SELF     	R16 R15 K35 ; R17 := R15; R16 := R15[0x6868f7f8]
	156	[505]	GETTABLE 	R18 R14 K36 ; R18 := R14["mUpgradeFingerprint"]
	157	[505]	CALL     	R16 3 1 ; R16(R17,R18)
	158	[506]	SELF     	R16 R8 K37 ; R17 := R8; R16 := R8[0x5e6704ff]
	159	[506]	MOVE     	R18 R15 ; R18 := R15
	160	[506]	CALL     	R16 3 1 ; R16(R17,R18)
	161	[502]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 143; R12 := R13 end
	162	[507]	JMP      	143 ; PC := 143
	163	[509]	SELF     	R16 R8 K38 ; R17 := R8; R16 := R8[0xa6101f7e]
	164	[509]	GETTABLE 	R18 R2 K5 ; R18 := R2["mItem"]
	165	[509]	GETTABLE 	R18 R18 K6 ; R18 := R18["mModularParts"]
	166	[509]	GETTABLE 	R19 R2 K5 ; R19 := R2["mItem"]
	167	[509]	SELF     	R19 R19 K39 ; R20 := R19; R19 := R19[0xdbfbf6c0]
	168	[509]	LOADK    	R21 := 3.000000
	169	[509]	CALL     	R19 3 0 ; R19,... := R19(R20,R21)
	170	[509]	CALL     	R16 0 1 ; R16(R17,...)
	171	[510]	GETGLOBAL	R16 K2 ; R16 := 0x7b998233
	172	[510]	GETGLOBAL	R17 K40 ; R17 := 0x25d99d89
	173	[510]	CALL     	R16 2 2 ; R16 := R16(R17)
	174	[510]	TEST     	R16 1 ; if R16 then PC := 187
	175	[510]	JMP      	187 ; PC := 187
	176	[511]	GETTABLE 	R16 R2 K5 ; R16 := R2["mItem"]
	177	[511]	SELF     	R16 R16 K41 ; R17 := R16; R16 := R16[0x68d708a7]
	178	[511]	CALL     	R16 2 2 ; R16 := R16(R17)
	179	[512]	SELF     	R17 R8 K42 ; R18 := R8; R17 := R8[0xaa041663]
	180	[512]	MOVE     	R19 R16 ; R19 := R16
	181	[512]	CALL     	R17 3 1 ; R17(R18,R19)
	182	[513]	SELF     	R17 R16 K43 ; R18 := R16; R17 := R16[0x61b59a83]
	183	[513]	GETGLOBAL	R19 K3 ; R19 := _T
	184	[513]	GETTABLE 	R19 R19 K4 ; R19 := R19["KDriveAvatar"]
	185	[513]	OP_LOADBOOL	R20 0 0 ; R20 := false
	186	[513]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	187	[516]	GETGLOBAL	R17 K3 ; R17 := _T
	188	[516]	GETTABLE 	R17 R17 K4 ; R17 := R17["KDriveAvatar"]
	189	[516]	SELF     	R17 R17 K21 ; R18 := R17; R17 := R17[0x044b7be8]
	190	[516]	OP_LOADBOOL	R19 1 0 ; R19 := true
	191	[516]	CALL     	R17 3 1 ; R17(R18,R19)
	192	[517]	GETGLOBAL	R17 K3 ; R17 := _T
	193	[517]	GETTABLE 	R17 R17 K4 ; R17 := R17["KDriveAvatar"]
	194	[517]	SELF     	R17 R17 K44 ; R18 := R17; R17 := R17[0x768274d6]
	195	[517]	OP_LOADBOOL	R19 0 0 ; R19 := false
	196	[517]	OP_LOADBOOL	R20 1 0 ; R20 := true
	197	[517]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	198	[518]	GETGLOBAL	R17 K3 ; R17 := _T
	199	[518]	GETTABLE 	R17 R17 K4 ; R17 := R17["KDriveAvatar"]
	200	[518]	SELF     	R17 R17 K45 ; R18 := R17; R17 := R17[0x3273ba96]
	201	[518]	GETGLOBAL	R19 K46 ; R19 := 0x0469f296
	202	[518]	LOADK    	R20 K47 ; R20 := "HubIgnoreNearCull"
	203	[518]	CALL     	R19 2 0 ; R19,... := R19(R20)
	204	[518]	CALL     	R17 0 1 ; R17(R18,...)
	205	[520]	RETURN   	R0 1 ; return 

function #16 <?:522,588> (252 instructions, 1008 bytes at 000002112CCEBFD0)
2 params, 22 slots, 4 upvalues, 0 locals, 61 constants, 0 functions
	1	[523]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xc1a84a4b]
	2	[523]	LOADK    	R4 := 8.000000
	3	[523]	LOADK    	R5 := 0.000000
	4	[523]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	5	[525]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	6	[525]	GETGLOBAL	R4 K3 ; R4 := _T
	7	[525]	GETTABLE 	R4 R4 K4 ; R4 := R4["MechAvatar"]
	8	[525]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[525]	TEST     	R3 0 ; if not R3 then PC := 113
	10	[525]	JMP      	113 ; PC := 113
	11	[526]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	12	[526]	GETTABLE 	R4 R2 K5 ; R4 := R2["mItem"]
	13	[526]	GETTABLE 	R4 R4 K6 ; R4 := R4["mItemType"]
	14	[526]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[526]	TEST     	R3 1 ; if R3 then PC := 113
	16	[526]	JMP      	113 ; PC := 113
	17	[527]	GETGLOBAL	R3 K7 ; R3 := 0x88efc25e
	18	[527]	GETGLOBAL	R4 K8 ; R4 := 0x6658d5be
	19	[527]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[528]	GETGLOBAL	R4 K9 ; R4 := 0x00046924
	21	[528]	GETGLOBAL	R5 K3 ; R5 := _T
	22	[528]	GETTABLE 	R5 R5 K10 ; R5 := R5["DEFAULT_SUIT_ROTATION"]
	23	[528]	LOADK    	R6 := 0.000000
	24	[528]	LOADK    	R7 := 0.000000
	25	[528]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	26	[529]	SELF     	R5 R1 K11 ; R6 := R1; R5 := R1[0xd1586535]
	27	[529]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[530]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[530]	GETTABLE 	R6 R6 K12 ; R6 := R6[0x09b8fbee]
	30	[530]	SELF     	R7 R1 K11 ; R8 := R1; R7 := R1[0xd1586535]
	31	[530]	CALL     	R7 2 0 ; R7,... := R7(R8)
	32	[530]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	33	[531]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	34	[531]	MOVE     	R8 R6 ; R8 := R6
	35	[531]	CALL     	R7 2 2 ; R7 := R7(R8)
	36	[531]	TEST     	R7 1 ; if R7 then PC := 46
	37	[531]	JMP      	46 ; PC := 46
	38	[532]	SELF     	R7 R6 K11 ; R8 := R6; R7 := R6[0xd1586535]
	39	[532]	CALL     	R7 2 2 ; R7 := R7(R8)
	40	[532]	GETGLOBAL	R8 K13 ; R8 := 0xa421af95
	41	[532]	LOADK    	R9 := 0.000000
	42	[532]	LOADK    	R10 := -2.000000
	43	[532]	LOADK    	R11 K14 ; R11 := 1.350000
	44	[532]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	45	[532]	ADD      	R5 R7 R8 ; R5 := R7 + R8
	46	[535]	GETGLOBAL	R7 K3 ; R7 := _T
	47	[535]	GETGLOBAL	R8 K15 ; R8 := 0x89326c93
	48	[535]	SELF     	R8 R8 K16 ; R9 := R8; R8 := R8[0x05909209]
	49	[535]	MOVE     	R10 R3 ; R10 := R3
	50	[535]	MOVE     	R11 R5 ; R11 := R5
	51	[535]	MOVE     	R12 R4 ; R12 := R4
	52	[535]	MOVE     	R13 R1 ; R13 := R1
	53	[535]	MOVE     	R14 R1 ; R14 := R1
	54	[535]	GETUPVAL 	R15 U1 ; R15 := U1
	55	[535]	GETTABLE 	R15 R15 K17 ; R15 := R15[0x06d055f9]
	56	[535]	GETGLOBAL	R16 K15 ; R16 := 0x89326c93
	57	[535]	SELF     	R16 R16 K18 ; R17 := R16; R16 := R16[0x18d05d30]
	58	[535]	CALL     	R16 2 2 ; R16 := R16(R17)
	59	[535]	LOADK    	R17 := 3.000000
	60	[535]	LOADK    	R18 := 4.000000
	61	[535]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	62	[535]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	63	[535]	SETTABLE 	R7 K4 R8 ; R7["MechAvatar"] := R8
	64	[536]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	65	[536]	GETGLOBAL	R8 K3 ; R8 := _T
	66	[536]	GETTABLE 	R8 R8 K4 ; R8 := R8["MechAvatar"]
	67	[536]	CALL     	R7 2 2 ; R7 := R7(R8)
	68	[536]	TEST     	R7 1 ; if R7 then PC := 113
	69	[536]	JMP      	113 ; PC := 113
	70	[537]	GETGLOBAL	R7 K3 ; R7 := _T
	71	[537]	GETTABLE 	R7 R7 K4 ; R7 := R7["MechAvatar"]
	72	[537]	SELF     	R7 R7 K20 ; R8 := R7; R7 := R7[0x0cca925a]
	73	[537]	GETGLOBAL	R9 K21 ; R9 := 0x0469f296
	74	[537]	LOADK    	R10 K22 ; R10 := "TENNO"
	75	[537]	CALL     	R9 2 0 ; R9,... := R9(R10)
	76	[537]	CALL     	R7 0 1 ; R7(R8,...)
	77	[538]	GETGLOBAL	R7 K3 ; R7 := _T
	78	[538]	GETTABLE 	R7 R7 K4 ; R7 := R7["MechAvatar"]
	79	[538]	SELF     	R7 R7 K23 ; R8 := R7; R7 := R7[0x6667e5d4]
	80	[538]	OP_LOADBOOL	R9 1 0 ; R9 := true
	81	[538]	CALL     	R7 3 1 ; R7(R8,R9)
	82	[539]	GETGLOBAL	R7 K3 ; R7 := _T
	83	[539]	GETTABLE 	R7 R7 K4 ; R7 := R7["MechAvatar"]
	84	[539]	SELF     	R7 R7 K24 ; R8 := R7; R7 := R7[0x044b7be8]
	85	[539]	OP_LOADBOOL	R9 1 0 ; R9 := true
	86	[539]	CALL     	R7 3 1 ; R7(R8,R9)
	87	[540]	GETGLOBAL	R7 K3 ; R7 := _T
	88	[540]	GETTABLE 	R7 R7 K4 ; R7 := R7["MechAvatar"]
	89	[540]	SELF     	R7 R7 K25 ; R8 := R7; R7 := R7[0xd749da12]
	90	[540]	OP_LOADBOOL	R9 0 0 ; R9 := false
	91	[540]	CALL     	R7 3 1 ; R7(R8,R9)
	92	[541]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	93	[541]	GETGLOBAL	R8 K3 ; R8 := _T
	94	[541]	GETTABLE 	R8 R8 K26 ; R8 := R8["suitTable"]
	95	[541]	CALL     	R7 2 2 ; R7 := R7(R8)
	96	[541]	TEST     	R7 1 ; if R7 then PC := 113
	97	[541]	JMP      	113 ; PC := 113
	98	[541]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	99	[541]	GETGLOBAL	R8 K3 ; R8 := _T
	100	[541]	GETTABLE 	R8 R8 K26 ; R8 := R8["suitTable"]
	101	[541]	GETTABLE 	R8 R8 K27 ; R8 := R8["positions"]
	102	[541]	CALL     	R7 2 2 ; R7 := R7(R8)
	103	[541]	TEST     	R7 1 ; if R7 then PC := 113
	104	[541]	JMP      	113 ; PC := 113
	105	[542]	GETGLOBAL	R7 K3 ; R7 := _T
	106	[542]	GETTABLE 	R7 R7 K26 ; R7 := R7["suitTable"]
	107	[542]	GETTABLE 	R7 R7 K27 ; R7 := R7["positions"]
	108	[542]	GETGLOBAL	R8 K3 ; R8 := _T
	109	[542]	GETTABLE 	R8 R8 K4 ; R8 := R8["MechAvatar"]
	110	[542]	SELF     	R8 R8 K28 ; R9 := R8; R8 := R8[0x388577d5]
	111	[542]	CALL     	R8 2 2 ; R8 := R8(R9)
	112	[542]	SETTABLE 	R7 R8 R5 ; R7[R8] := R5
	113	[548]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	114	[548]	GETGLOBAL	R8 K3 ; R8 := _T
	115	[548]	GETTABLE 	R8 R8 K4 ; R8 := R8["MechAvatar"]
	116	[548]	CALL     	R7 2 2 ; R7 := R7(R8)
	117	[548]	TEST     	R7 1 ; if R7 then PC := 252
	118	[548]	JMP      	252 ; PC := 252
	119	[549]	GETGLOBAL	R7 K3 ; R7 := _T
	120	[549]	GETTABLE 	R7 R7 K4 ; R7 := R7["MechAvatar"]
	121	[549]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0xde321e6f]
	122	[549]	CALL     	R7 2 2 ; R7 := R7(R8)
	123	[550]	SELF     	R8 R7 K30 ; R9 := R7; R8 := R7[0x374b084a]
	124	[550]	CALL     	R8 2 1 ; R8(R9)
	125	[551]	SELF     	R8 R7 K31 ; R9 := R7; R8 := R7[0xf596420f]
	126	[551]	CALL     	R8 2 1 ; R8(R9)
	127	[553]	SELF     	R8 R7 K32 ; R9 := R7; R8 := R7[0x1d2dfe4a]
	128	[553]	MOVE     	R10 R0 ; R10 := R0
	129	[553]	LOADK    	R11 := 8.000000
	130	[553]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	131	[555]	SELF     	R8 R7 K33 ; R9 := R7; R8 := R7[0xf7d48ee0]
	132	[555]	CALL     	R8 2 2 ; R8 := R8(R9)
	133	[556]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	134	[556]	MOVE     	R10 R8 ; R10 := R8
	135	[556]	CALL     	R9 2 2 ; R9 := R9(R10)
	136	[556]	TEST     	R9 1 ; if R9 then PC := 221
	137	[556]	JMP      	221 ; PC := 221
	138	[557]	LOADK    	R9 := 5.000000
	139	[557]	LOADK    	R10 := 6.000000
	140	[557]	LOADK    	R11 := 1.000000
	141	[557]	FORPREP  	R9 220 ; R9 -= R11; PC := 220
	142	[558]	SELF     	R13 R8 K34 ; R14 := R8; R13 := R8[0x4a5d8c86]
	143	[558]	MOVE     	R15 R12 ; R15 := R12
	144	[558]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	145	[559]	GETTABLE 	R14 R13 K6 ; R14 := R13["mItemType"]
	146	[560]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	147	[560]	MOVE     	R16 R14 ; R16 := R14
	148	[560]	CALL     	R15 2 2 ; R15 := R15(R16)
	149	[560]	TEST     	R15 1 ; if R15 then PC := 220
	150	[560]	JMP      	220 ; PC := 220
	151	[560]	SELF     	R15 R14 K35 ; R16 := R14; R15 := R14[0xf2deaf69]
	152	[560]	GETGLOBAL	R17 K36 ; R17 := gPowerSuitType
	153	[560]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	154	[560]	TEST     	R15 1 ; if R15 then PC := 220
	155	[560]	JMP      	220 ; PC := 220
	156	[561]	SELF     	R15 R7 K37 ; R16 := R7; R15 := R7[0x9c596606]
	157	[561]	MOVE     	R17 R0 ; R17 := R0
	158	[561]	LOADK    	R18 := 8.000000
	159	[561]	MOVE     	R19 R12 ; R19 := R12
	160	[561]	OP_LOADBOOL	R20 1 0 ; R20 := true
	161	[561]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	162	[563]	GETUPVAL 	R15 U2 ; R15 := U2
	163	[563]	GETTABLE 	R15 R15 K38 ; R15 := R15["Current"]
	164	[563]	EQ       	0 R15 K39 ; if R15 ~= 3.000000 then PC := 220
	165	[563]	JMP      	220 ; PC := 220
	166	[564]	GETUPVAL 	R15 U3 ; R15 := U3
	167	[564]	GETGLOBAL	R16 K40 ; R16 := 0xae91e43b
	168	[564]	GETGLOBAL	R17 K3 ; R17 := _T
	169	[564]	GETTABLE 	R17 R17 K4 ; R17 := R17["MechAvatar"]
	170	[564]	GETGLOBAL	R18 K41 ; R18 := mLists
	171	[564]	GETTABLE 	R18 R18 K42 ; R18 := R18["mLoadOutList"]
	172	[564]	GETTABLE 	R18 R18 K43 ; R18 := R18["mElements"]
	173	[564]	GETTABLE 	R18 R18 K44 ; R18 := R18[1.000000]
	174	[564]	OP_LOADBOOL	R19 0 0 ; R19 := false
	175	[564]	CALL     	R15 5 2 ; R15 := R15(R16,R17,R18,R19)
	176	[566]	GETTABLE 	R16 R13 K45 ; R16 := R13["mAbilityIndex"]
	177	[568]	SELF     	R17 R8 K46 ; R18 := R8; R17 := R8[0xd836367c]
	178	[568]	CALL     	R17 2 2 ; R17 := R17(R18)
	179	[568]	LT       	0 R16 R17 ; if R16 >= R17 then PC := 220
	180	[568]	JMP      	220 ; PC := 220
	181	[569]	EQ       	0 R12 K47 ; if R12 ~= 5.000000 then PC := 201
	182	[569]	JMP      	201 ; PC := 201
	183	[569]	GETGLOBAL	R17 K41 ; R17 := mLists
	184	[569]	GETTABLE 	R17 R17 K42 ; R17 := R17["mLoadOutList"]
	185	[569]	GETTABLE 	R17 R17 K48 ; R17 := R17["SpecialASlotId"]
	186	[569]	EQ       	1 R17 K49 ; if R17 == nil then PC := 201
	187	[569]	JMP      	201 ; PC := 201
	188	[570]	GETGLOBAL	R17 K41 ; R17 := mLists
	189	[570]	GETTABLE 	R17 R17 K42 ; R17 := R17["mLoadOutList"]
	190	[570]	GETTABLE 	R17 R17 K43 ; R17 := R17["mElements"]
	191	[570]	GETGLOBAL	R18 K41 ; R18 := mLists
	192	[570]	GETTABLE 	R18 R18 K42 ; R18 := R18["mLoadOutList"]
	193	[570]	GETTABLE 	R18 R18 K48 ; R18 := R18["SpecialASlotId"]
	194	[570]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	195	[570]	LOADK    	R18 K51 ; R18 := "AbilityIcon"
	196	[570]	ADD      	R19 R16 K44 ; R19 := R16 + 1.000000
	197	[570]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	198	[570]	GETTABLE 	R18 R15 R18 ; R18 := R15[R18]
	199	[570]	SETTABLE 	R17 K50 R18 ; R17["SpecialIcon"] := R18
	200	[570]	JMP      	220 ; PC := 220
	201	[571]	EQ       	0 R12 K52 ; if R12 ~= 6.000000 then PC := 220
	202	[571]	JMP      	220 ; PC := 220
	203	[571]	GETGLOBAL	R17 K41 ; R17 := mLists
	204	[571]	GETTABLE 	R17 R17 K42 ; R17 := R17["mLoadOutList"]
	205	[571]	GETTABLE 	R17 R17 K53 ; R17 := R17["SpecialBSlotId"]
	206	[571]	EQ       	1 R17 K49 ; if R17 == nil then PC := 220
	207	[571]	JMP      	220 ; PC := 220
	208	[572]	GETGLOBAL	R17 K41 ; R17 := mLists
	209	[572]	GETTABLE 	R17 R17 K42 ; R17 := R17["mLoadOutList"]
	210	[572]	GETTABLE 	R17 R17 K43 ; R17 := R17["mElements"]
	211	[572]	GETGLOBAL	R18 K41 ; R18 := mLists
	212	[572]	GETTABLE 	R18 R18 K42 ; R18 := R18["mLoadOutList"]
	213	[572]	GETTABLE 	R18 R18 K53 ; R18 := R18["SpecialBSlotId"]
	214	[572]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	215	[572]	LOADK    	R18 K51 ; R18 := "AbilityIcon"
	216	[572]	ADD      	R19 R16 K44 ; R19 := R16 + 1.000000
	217	[572]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	218	[572]	GETTABLE 	R18 R15 R18 ; R18 := R15[R18]
	219	[572]	SETTABLE 	R17 K50 R18 ; R17["SpecialIcon"] := R18
	220	[557]	FORLOOP  	R9 142 ; R9 += R11; if R9 <= R10 then begin PC := 142; R12 := R9 end
	221	[581]	GETGLOBAL	R17 K3 ; R17 := _T
	222	[581]	GETTABLE 	R17 R17 K4 ; R17 := R17["MechAvatar"]
	223	[581]	SELF     	R17 R17 K54 ; R18 := R17; R17 := R17[0x511d26b8]
	224	[581]	GETGLOBAL	R19 K7 ; R19 := 0x88efc25e
	225	[581]	GETGLOBAL	R20 K55 ; R20 := 0x3369a6b1
	226	[581]	CALL     	R19 2 2 ; R19 := R19(R20)
	227	[581]	OP_LOADBOOL	R20 0 0 ; R20 := false
	228	[581]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	229	[582]	SELF     	R17 R7 K56 ; R18 := R7; R17 := R7[0xc69087f6]
	230	[582]	LOADK    	R19 := 10.000000
	231	[582]	LOADK    	R20 := 0.000000
	232	[582]	LOADK    	R21 := 2.000000
	233	[582]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	234	[584]	GETGLOBAL	R17 K3 ; R17 := _T
	235	[584]	GETTABLE 	R17 R17 K4 ; R17 := R17["MechAvatar"]
	236	[584]	SELF     	R17 R17 K24 ; R18 := R17; R17 := R17[0x044b7be8]
	237	[584]	OP_LOADBOOL	R19 1 0 ; R19 := true
	238	[584]	CALL     	R17 3 1 ; R17(R18,R19)
	239	[585]	GETGLOBAL	R17 K3 ; R17 := _T
	240	[585]	GETTABLE 	R17 R17 K4 ; R17 := R17["MechAvatar"]
	241	[585]	SELF     	R17 R17 K58 ; R18 := R17; R17 := R17[0x768274d6]
	242	[585]	OP_LOADBOOL	R19 0 0 ; R19 := false
	243	[585]	OP_LOADBOOL	R20 1 0 ; R20 := true
	244	[585]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	245	[586]	GETGLOBAL	R17 K3 ; R17 := _T
	246	[586]	GETTABLE 	R17 R17 K4 ; R17 := R17["MechAvatar"]
	247	[586]	SELF     	R17 R17 K59 ; R18 := R17; R17 := R17[0x3273ba96]
	248	[586]	GETGLOBAL	R19 K21 ; R19 := 0x0469f296
	249	[586]	LOADK    	R20 K60 ; R20 := "HubIgnoreNearCull"
	250	[586]	CALL     	R19 2 0 ; R19,... := R19(R20)
	251	[586]	CALL     	R17 0 1 ; R17(R18,...)
	252	[588]	RETURN   	R0 1 ; return 

function #17 <?:590,597> (14 instructions, 56 bytes at 00000211132FFE10)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[591]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[591]	MOVE     	R2 R0 ; R2 := R0
	3	[591]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[591]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[591]	JMP      	7 ; PC := 7
	6	[592]	RETURN   	R0 1 ; return 
	7	[595]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x768274d6]
	8	[595]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[595]	OP_LOADBOOL	R4 1 0 ; R4 := true
	10	[595]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	11	[596]	GETGLOBAL	R1 K2 ; R1 := _T
	12	[596]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[596]	SETTABLE 	R1 K3 R2 ; R1["refreshPetView"] := R2
	14	[597]	RETURN   	R0 1 ; return 

function #18 <?:599,916> (1078 instructions, 4312 bytes at 00000211132FFFD0)
3 params, 53 slots, 12 upvalues, 0 locals, 156 constants, 0 functions
	1	[600]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[600]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x06d055f9]
	3	[600]	MOVE     	R4 R0 ; R4 := R0
	4	[600]	LOADK    	R5 := 3.000000
	5	[600]	LOADK    	R6 := 0.000000
	6	[600]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	7	[602]	GETGLOBAL	R4 K2 ; R4 := 0x25d99d89
	8	[602]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x62c81b76]
	9	[602]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[604]	GETGLOBAL	R5 K4 ; R5 := 0xbe190284
	11	[604]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0x417eba72]
	12	[604]	MOVE     	R7 R4 ; R7 := R4
	13	[604]	CALL     	R5 3 1 ; R5(R6,R7)
	14	[606]	GETGLOBAL	R5 K6 ; R5 := _T
	15	[606]	GETTABLE 	R5 R5 K7 ; R5 := R5["MenuSuitAvatar"]
	16	[607]	SELF     	R6 R5 K8 ; R7 := R5; R6 := R5[0xde321e6f]
	17	[607]	CALL     	R6 2 2 ; R6 := R6(R7)
	18	[608]	SELF     	R7 R6 K9 ; R8 := R6; R7 := R6[0xf7d48ee0]
	19	[608]	CALL     	R7 2 2 ; R7 := R7(R8)
	20	[609]	LOADNIL  	R8 R8 ; R8 := nil
	21	[611]	GETGLOBAL	R9 K6 ; R9 := _T
	22	[611]	GETTABLE 	R9 R9 K10 ; R9 := R9["mSpecialSuitMode"]
	23	[612]	GETGLOBAL	R10 K6 ; R10 := _T
	24	[612]	SETTABLE 	R10 K10 K11 ; R10["mSpecialSuitMode"] := nil
	25	[614]	LOADNIL  	R10 R10 ; R10 := nil
	26	[615]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	27	[615]	MOVE     	R12 R7 ; R12 := R7
	28	[615]	CALL     	R11 2 2 ; R11 := R11(R12)
	29	[615]	TEST     	R11 1 ; if R11 then PC := 150
	30	[615]	JMP      	150 ; PC := 150
	31	[615]	TEST     	R2 1 ; if R2 then PC := 150
	32	[615]	JMP      	150 ; PC := 150
	33	[616]	SELF     	R11 R7 K13 ; R12 := R7; R11 := R7[0xed4e0128]
	34	[616]	CALL     	R11 2 2 ; R11 := R11(R12)
	35	[616]	MOVE     	R8 R11 ; R8 := R11
	36	[617]	SELF     	R11 R7 K14 ; R12 := R7; R11 := R7[0xf2deaf69]
	37	[617]	GETGLOBAL	R13 K15 ; R13 := 0xb5afcb89
	38	[617]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	39	[617]	TEST     	R11 0 ; if not R11 then PC := 53
	40	[617]	JMP      	53 ; PC := 53
	41	[618]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	42	[618]	GETGLOBAL	R12 K6 ; R12 := _T
	43	[618]	GETTABLE 	R12 R12 K16 ; R12 := R12["DRAGON_IsPeltEnabled"]
	44	[618]	CALL     	R11 2 2 ; R11 := R11(R12)
	45	[618]	TEST     	R11 1 ; if R11 then PC := 150
	46	[618]	JMP      	150 ; PC := 150
	47	[619]	GETGLOBAL	R11 K6 ; R11 := _T
	48	[619]	GETTABLE 	R11 R11 K17 ; R11 := R11[0xb3bbbb5e]
	49	[619]	MOVE     	R12 R5 ; R12 := R5
	50	[619]	CALL     	R11 2 2 ; R11 := R11(R12)
	51	[619]	MOVE     	R10 R11 ; R10 := R11
	52	[620]	JMP      	150 ; PC := 150
	53	[621]	SELF     	R11 R7 K14 ; R12 := R7; R11 := R7[0xf2deaf69]
	54	[621]	GETGLOBAL	R13 K18 ; R13 := 0xe3ae0932
	55	[621]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	56	[621]	TEST     	R11 0 ; if not R11 then PC := 75
	57	[621]	JMP      	75 ; PC := 75
	58	[622]	GETGLOBAL	R11 K19 ; R11 := 0x2d0fad09
	59	[622]	LOADK    	R12 K20 ; R12 := "Lotus.Scripts.Effects.Polarity"
	60	[622]	CALL     	R11 2 2 ; R11 := R11(R12)
	61	[623]	GETTABLE 	R12 R11 K21 ; R12 := R11[0x224c9cb2]
	62	[623]	MOVE     	R13 R7 ; R13 := R7
	63	[623]	CALL     	R12 2 2 ; R12 := R12(R13)
	64	[623]	TEST     	R12 0 ; if not R12 then PC := 68
	65	[623]	JMP      	68 ; PC := 68
	66	[624]	OP_LOADBOOL	R10 1 0 ; R10 := true
	67	[624]	JMP      	150 ; PC := 150
	68	[625]	GETTABLE 	R12 R11 K22 ; R12 := R11[0x7d2b2507]
	69	[625]	MOVE     	R13 R7 ; R13 := R7
	70	[625]	CALL     	R12 2 2 ; R12 := R12(R13)
	71	[625]	TEST     	R12 0 ; if not R12 then PC := 150
	72	[625]	JMP      	150 ; PC := 150
	73	[626]	OP_LOADBOOL	R10 0 0 ; R10 := false
	74	[627]	JMP      	150 ; PC := 150
	75	[628]	SELF     	R12 R7 K14 ; R13 := R7; R12 := R7[0xf2deaf69]
	76	[628]	GETGLOBAL	R14 K23 ; R14 := 0x68564c44
	77	[628]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	78	[628]	TEST     	R12 0 ; if not R12 then PC := 105
	79	[628]	JMP      	105 ; PC := 105
	80	[629]	GETGLOBAL	R12 K12 ; R12 := 0x7b998233
	81	[629]	GETGLOBAL	R13 K6 ; R13 := _T
	82	[629]	GETTABLE 	R13 R13 K24 ; R13 := R13["INFESTED_DecoState"]
	83	[629]	CALL     	R12 2 2 ; R12 := R12(R13)
	84	[629]	TEST     	R12 1 ; if R12 then PC := 150
	85	[629]	JMP      	150 ; PC := 150
	86	[630]	SELF     	R12 R5 K25 ; R13 := R5; R12 := R5[0x388577d5]
	87	[630]	CALL     	R12 2 2 ; R12 := R12(R13)
	88	[631]	GETGLOBAL	R13 K12 ; R13 := 0x7b998233
	89	[631]	GETGLOBAL	R14 K6 ; R14 := _T
	90	[631]	GETTABLE 	R14 R14 K24 ; R14 := R14["INFESTED_DecoState"]
	91	[631]	GETTABLE 	R14 R14 R12 ; R14 := R14[R12]
	92	[631]	CALL     	R13 2 2 ; R13 := R13(R14)
	93	[631]	TEST     	R13 1 ; if R13 then PC := 150
	94	[631]	JMP      	150 ; PC := 150
	95	[632]	LOADNIL  	R13 R13 ; R13 := nil
	96	[633]	GETGLOBAL	R14 K26 ; R14 := 0x4ec73e73
	97	[633]	GETGLOBAL	R15 K6 ; R15 := _T
	98	[633]	GETTABLE 	R15 R15 K24 ; R15 := R15["INFESTED_DecoState"]
	99	[633]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	100	[633]	GETTABLE 	R15 R15 K27 ; R15 := R15["openDecos"]
	101	[633]	CALL     	R14 2 3 ; R14,R15 := R14(R15)
	102	[633]	MOVE     	R10 R15 ; R10 := R15
	103	[633]	MOVE     	R13 R14 ; R13 := R14
	104	[635]	JMP      	150 ; PC := 150
	105	[636]	SELF     	R14 R7 K14 ; R15 := R7; R14 := R7[0xf2deaf69]
	106	[636]	GETGLOBAL	R16 K28 ; R16 := 0x6dcacb87
	107	[636]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	108	[636]	TEST     	R14 0 ; if not R14 then PC := 136
	109	[636]	JMP      	136 ; PC := 136
	110	[637]	GETGLOBAL	R14 K12 ; R14 := 0x7b998233
	111	[637]	GETGLOBAL	R15 K6 ; R15 := _T
	112	[637]	GETTABLE 	R15 R15 K29 ; R15 := R15["KHORA_CurrentMode"]
	113	[637]	CALL     	R14 2 2 ; R14 := R14(R15)
	114	[637]	TEST     	R14 1 ; if R14 then PC := 150
	115	[637]	JMP      	150 ; PC := 150
	116	[638]	SELF     	R14 R5 K25 ; R15 := R5; R14 := R5[0x388577d5]
	117	[638]	CALL     	R14 2 2 ; R14 := R14(R15)
	118	[639]	GETGLOBAL	R15 K12 ; R15 := 0x7b998233
	119	[639]	GETGLOBAL	R16 K6 ; R16 := _T
	120	[639]	GETTABLE 	R16 R16 K29 ; R16 := R16["KHORA_CurrentMode"]
	121	[639]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	122	[639]	CALL     	R15 2 2 ; R15 := R15(R16)
	123	[639]	TEST     	R15 1 ; if R15 then PC := 150
	124	[639]	JMP      	150 ; PC := 150
	125	[640]	NEWTABLE 	R15 1 0 ; R15 := {}
	126	[640]	GETGLOBAL	R16 K6 ; R16 := _T
	127	[640]	GETTABLE 	R16 R16 K29 ; R16 := R16["KHORA_CurrentMode"]
	128	[640]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	129	[640]	GETGLOBAL	R17 K6 ; R17 := _T
	130	[640]	GETTABLE 	R17 R17 K30 ; R17 := R17[0xb1b8ab73]
	131	[640]	MOVE     	R18 R7 ; R18 := R7
	132	[640]	CALL     	R17 2 0 ; R17,... := R17(R18)
	133	[640]	SETLIST  	R15 0 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 0
	134	[640]	MOVE     	R10 R15 ; R10 := R15
	135	[642]	JMP      	150 ; PC := 150
	136	[643]	SELF     	R15 R7 K14 ; R16 := R7; R15 := R7[0xf2deaf69]
	137	[643]	GETGLOBAL	R17 K31 ; R17 := 0x2ccd2c30
	138	[643]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	139	[643]	TEST     	R15 0 ; if not R15 then PC := 150
	140	[643]	JMP      	150 ; PC := 150
	141	[644]	GETGLOBAL	R15 K6 ; R15 := _T
	142	[644]	GETTABLE 	R15 R15 K32 ; R15 := R15["RUNNER_DecoState"]
	143	[644]	EQ       	1 R15 K11 ; if R15 == nil then PC := 150
	144	[644]	JMP      	150 ; PC := 150
	145	[645]	GETGLOBAL	R15 K6 ; R15 := _T
	146	[645]	GETTABLE 	R15 R15 K33 ; R15 := R15[0x7fab9289]
	147	[645]	MOVE     	R16 R5 ; R16 := R5
	148	[645]	CALL     	R15 2 2 ; R15 := R15(R16)
	149	[645]	MOVE     	R10 R15 ; R10 := R15
	150	[650]	EQ       	0 R1 K34 ; if R1 ~= true then PC := 156
	151	[650]	JMP      	156 ; PC := 156
	152	[651]	SELF     	R15 R6 K35 ; R16 := R6; R15 := R6[0x374b084a]
	153	[651]	CALL     	R15 2 1 ; R15(R16)
	154	[652]	SELF     	R15 R6 K36 ; R16 := R6; R15 := R6[0xf596420f]
	155	[652]	CALL     	R15 2 1 ; R15(R16)
	156	[655]	SELF     	R15 R6 K37 ; R16 := R6; R15 := R6[0xb4af1972]
	157	[655]	OP_LOADBOOL	R17 1 0 ; R17 := true
	158	[655]	CALL     	R15 3 1 ; R15(R16,R17)
	159	[656]	SELF     	R15 R6 K38 ; R16 := R6; R15 := R6[0x1d2dfe4a]
	160	[656]	MOVE     	R17 R4 ; R17 := R4
	161	[656]	MOVE     	R18 R3 ; R18 := R3
	162	[656]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	163	[657]	GETGLOBAL	R15 K12 ; R15 := 0x7b998233
	164	[657]	GETGLOBAL	R16 K6 ; R16 := _T
	165	[657]	GETTABLE 	R16 R16 K39 ; R16 := R16["KDriveAvatar"]
	166	[657]	CALL     	R15 2 2 ; R15 := R15(R16)
	167	[657]	TEST     	R15 1 ; if R15 then PC := 175
	168	[657]	JMP      	175 ; PC := 175
	169	[657]	GETGLOBAL	R15 K6 ; R15 := _T
	170	[657]	GETTABLE 	R15 R15 K39 ; R15 := R15["KDriveAvatar"]
	171	[657]	SELF     	R15 R15 K40 ; R16 := R15; R15 := R15[0xd4cc05b4]
	172	[657]	CALL     	R15 2 2 ; R15 := R15(R16)
	173	[657]	TEST     	R15 1 ; if R15 then PC := 191
	174	[657]	JMP      	191 ; PC := 191
	175	[658]	GETGLOBAL	R15 K12 ; R15 := 0x7b998233
	176	[658]	GETGLOBAL	R16 K6 ; R16 := _T
	177	[658]	GETTABLE 	R16 R16 K41 ; R16 := R16["MechAvatar"]
	178	[658]	CALL     	R15 2 2 ; R15 := R15(R16)
	179	[658]	TEST     	R15 1 ; if R15 then PC := 187
	180	[658]	JMP      	187 ; PC := 187
	181	[658]	GETGLOBAL	R15 K6 ; R15 := _T
	182	[658]	GETTABLE 	R15 R15 K41 ; R15 := R15["MechAvatar"]
	183	[658]	SELF     	R15 R15 K40 ; R16 := R15; R15 := R15[0xd4cc05b4]
	184	[658]	CALL     	R15 2 2 ; R15 := R15(R16)
	185	[658]	TEST     	R15 1 ; if R15 then PC := 191
	186	[658]	JMP      	191 ; PC := 191
	187	[659]	SELF     	R15 R5 K42 ; R16 := R5; R15 := R5[0x768274d6]
	188	[659]	OP_LOADBOOL	R17 1 0 ; R17 := true
	189	[659]	OP_LOADBOOL	R18 1 0 ; R18 := true
	190	[659]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	191	[661]	SELF     	R15 R5 K43 ; R16 := R5; R15 := R5[0x5b89142c]
	192	[661]	CALL     	R15 2 2 ; R15 := R15(R16)
	193	[661]	SELF     	R15 R15 K44 ; R16 := R15; R15 := R15[0xe5586395]
	194	[661]	MOVE     	R17 R4 ; R17 := R4
	195	[661]	CALL     	R15 3 1 ; R15(R16,R17)
	196	[663]	EQ       	0 R3 K45 ; if R3 ~= 0.000000 then PC := 238
	197	[663]	JMP      	238 ; PC := 238
	198	[664]	GETUPVAL 	R15 U1 ; R15 := U1
	199	[664]	GETTABLE 	R15 R15 K46 ; R15 := R15[0x8e7c3b5e]
	200	[664]	GETGLOBAL	R16 K2 ; R16 := 0x25d99d89
	201	[664]	CALL     	R15 2 3 ; R15,R16 := R15(R16)
	202	[665]	GETGLOBAL	R17 K12 ; R17 := 0x7b998233
	203	[665]	MOVE     	R18 R15 ; R18 := R15
	204	[665]	CALL     	R17 2 2 ; R17 := R17(R18)
	205	[665]	TEST     	R17 1 ; if R17 then PC := 238
	206	[665]	JMP      	238 ; PC := 238
	207	[665]	GETUPVAL 	R17 U2 ; R17 := U2
	208	[665]	EQ       	0 R15 R17 ; if R15 ~= R17 then PC := 238
	209	[665]	JMP      	238 ; PC := 238
	210	[666]	LE       	0 K47 R16 ; if 15.000000 > R16 then PC := 238
	211	[666]	JMP      	238 ; PC := 238
	212	[667]	GETGLOBAL	R17 K2 ; R17 := 0x25d99d89
	213	[667]	SELF     	R17 R17 K48 ; R18 := R17; R17 := R17[0x25a6e75e]
	214	[667]	CALL     	R17 2 2 ; R17 := R17(R18)
	215	[667]	SELF     	R17 R17 K49 ; R18 := R17; R17 := R17[0xbadb2a78]
	216	[667]	GETGLOBAL	R19 K50 ; R19 := 0x7ed0a956
	217	[667]	LOADK    	R20 K51 ; R20 := "/Lotus/Weapons/Orokin/BallasSword/BallasSwordWeapon"
	218	[667]	CALL     	R19 2 0 ; R19,... := R19(R20)
	219	[667]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	220	[667]	EQ       	0 R17 K45 ; if R17 ~= 0.000000 then PC := 238
	221	[667]	JMP      	238 ; PC := 238
	222	[668]	SELF     	R17 R5 K52 ; R18 := R5; R17 := R5[0x511d26b8]
	223	[668]	GETGLOBAL	R19 K53 ; R19 := 0x88efc25e
	224	[668]	LOADK    	R20 K54 ; R20 := "/Lotus/Weapons/Orokin/BallasSword/TNWQuestBallasSwordWeapon"
	225	[668]	CALL     	R19 2 2 ; R19 := R19(R20)
	226	[668]	OP_LOADBOOL	R20 1 0 ; R20 := true
	227	[668]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	228	[669]	GETGLOBAL	R18 K12 ; R18 := 0x7b998233
	229	[669]	MOVE     	R19 R17 ; R19 := R17
	230	[669]	CALL     	R18 2 2 ; R18 := R18(R19)
	231	[669]	TEST     	R18 1 ; if R18 then PC := 233
	232	[669]	JMP      	233 ; PC := 233
	233	[672]	SELF     	R18 R5 K8 ; R19 := R5; R18 := R5[0xde321e6f]
	234	[672]	CALL     	R18 2 2 ; R18 := R18(R19)
	235	[672]	SELF     	R18 R18 K55 ; R19 := R18; R18 := R18[0xa65fc8a8]
	236	[672]	OP_LOADBOOL	R20 1 0 ; R20 := true
	237	[672]	CALL     	R18 3 1 ; R18(R19,R20)
	238	[678]	SELF     	R18 R6 K9 ; R19 := R6; R18 := R6[0xf7d48ee0]
	239	[678]	CALL     	R18 2 2 ; R18 := R18(R19)
	240	[678]	MOVE     	R7 R18 ; R7 := R18
	241	[679]	GETGLOBAL	R18 K12 ; R18 := 0x7b998233
	242	[679]	MOVE     	R19 R7 ; R19 := R7
	243	[679]	CALL     	R18 2 2 ; R18 := R18(R19)
	244	[679]	TEST     	R18 1 ; if R18 then PC := 732
	245	[679]	JMP      	732 ; PC := 732
	246	[679]	TEST     	R2 1 ; if R2 then PC := 732
	247	[679]	JMP      	732 ; PC := 732
	248	[681]	SELF     	R18 R7 K13 ; R19 := R7; R18 := R7[0xed4e0128]
	249	[681]	CALL     	R18 2 2 ; R18 := R18(R19)
	250	[681]	EQ       	1 R18 R8 ; if R18 == R8 then PC := 253
	251	[681]	JMP      	253 ; PC := 253
	252	[681]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 253
	253	[681]	OP_LOADBOOL	R18 1 0 ; R18 := true
	254	[682]	TEST     	R18 0 ; if not R18 then PC := 360
	255	[682]	JMP      	360 ; PC := 360
	256	[683]	SELF     	R19 R7 K14 ; R20 := R7; R19 := R7[0xf2deaf69]
	257	[683]	GETGLOBAL	R21 K15 ; R21 := 0xb5afcb89
	258	[683]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	259	[683]	TEST     	R19 0 ; if not R19 then PC := 275
	260	[683]	JMP      	275 ; PC := 275
	261	[683]	EQ       	0 R10 K56 ; if R10 ~= false then PC := 275
	262	[683]	JMP      	275 ; PC := 275
	263	[684]	GETGLOBAL	R19 K12 ; R19 := 0x7b998233
	264	[684]	GETGLOBAL	R20 K6 ; R20 := _T
	265	[684]	GETTABLE 	R20 R20 K57 ; R20 := R20["DRAGON_EnablePelt"]
	266	[684]	CALL     	R19 2 2 ; R19 := R19(R20)
	267	[684]	TEST     	R19 1 ; if R19 then PC := 360
	268	[684]	JMP      	360 ; PC := 360
	269	[685]	GETGLOBAL	R19 K6 ; R19 := _T
	270	[685]	GETTABLE 	R19 R19 K58 ; R19 := R19[0xc50e8842]
	271	[685]	MOVE     	R20 R5 ; R20 := R5
	272	[685]	OP_LOADBOOL	R21 0 0 ; R21 := false
	273	[685]	CALL     	R19 3 1 ; R19(R20,R21)
	274	[686]	JMP      	360 ; PC := 360
	275	[687]	SELF     	R19 R7 K14 ; R20 := R7; R19 := R7[0xf2deaf69]
	276	[687]	GETGLOBAL	R21 K18 ; R21 := 0xe3ae0932
	277	[687]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	278	[687]	TEST     	R19 0 ; if not R19 then PC := 295
	279	[687]	JMP      	295 ; PC := 295
	280	[687]	EQ       	1 R10 K11 ; if R10 == nil then PC := 295
	281	[687]	JMP      	295 ; PC := 295
	282	[688]	GETGLOBAL	R19 K19 ; R19 := 0x2d0fad09
	283	[688]	LOADK    	R20 K20 ; R20 := "Lotus.Scripts.Effects.Polarity"
	284	[688]	CALL     	R19 2 2 ; R19 := R19(R20)
	285	[689]	TEST     	R10 0 ; if not R10 then PC := 291
	286	[689]	JMP      	291 ; PC := 291
	287	[690]	GETTABLE 	R20 R19 K59 ; R20 := R19[0xade98bab]
	288	[690]	MOVE     	R21 R7 ; R21 := R7
	289	[690]	CALL     	R20 2 1 ; R20(R21)
	290	[690]	JMP      	360 ; PC := 360
	291	[692]	GETTABLE 	R20 R19 K60 ; R20 := R19[0x3be7a1fc]
	292	[692]	MOVE     	R21 R7 ; R21 := R7
	293	[692]	CALL     	R20 2 1 ; R20(R21)
	294	[693]	JMP      	360 ; PC := 360
	295	[694]	SELF     	R20 R7 K14 ; R21 := R7; R20 := R7[0xf2deaf69]
	296	[694]	GETGLOBAL	R22 K23 ; R22 := 0x68564c44
	297	[694]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	298	[694]	TEST     	R20 0 ; if not R20 then PC := 315
	299	[694]	JMP      	315 ; PC := 315
	300	[694]	EQ       	0 R10 K34 ; if R10 ~= true then PC := 315
	301	[694]	JMP      	315 ; PC := 315
	302	[695]	GETGLOBAL	R20 K12 ; R20 := 0x7b998233
	303	[695]	GETGLOBAL	R21 K6 ; R21 := _T
	304	[695]	GETTABLE 	R21 R21 K24 ; R21 := R21["INFESTED_DecoState"]
	305	[695]	CALL     	R20 2 2 ; R20 := R20(R21)
	306	[695]	TEST     	R20 1 ; if R20 then PC := 360
	307	[695]	JMP      	360 ; PC := 360
	308	[696]	GETGLOBAL	R20 K6 ; R20 := _T
	309	[696]	GETTABLE 	R20 R20 K61 ; R20 := R20[0x8095dfb5]
	310	[696]	MOVE     	R21 R5 ; R21 := R5
	311	[696]	OP_LOADBOOL	R22 1 0 ; R22 := true
	312	[696]	OP_LOADBOOL	R23 1 0 ; R23 := true
	313	[696]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	314	[697]	JMP      	360 ; PC := 360
	315	[698]	SELF     	R20 R7 K14 ; R21 := R7; R20 := R7[0xf2deaf69]
	316	[698]	GETGLOBAL	R22 K28 ; R22 := 0x6dcacb87
	317	[698]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	318	[698]	TEST     	R20 0 ; if not R20 then PC := 343
	319	[698]	JMP      	343 ; PC := 343
	320	[698]	GETGLOBAL	R20 K6 ; R20 := _T
	321	[698]	GETTABLE 	R20 R20 K62 ; R20 := R20["KHORA_SetMode"]
	322	[698]	EQ       	1 R20 K11 ; if R20 == nil then PC := 343
	323	[698]	JMP      	343 ; PC := 343
	324	[698]	EQ       	1 R10 K11 ; if R10 == nil then PC := 343
	325	[698]	JMP      	343 ; PC := 343
	326	[699]	GETGLOBAL	R20 K6 ; R20 := _T
	327	[699]	GETTABLE 	R20 R20 K63 ; R20 := R20[0xea9ef043]
	328	[699]	MOVE     	R21 R7 ; R21 := R7
	329	[699]	GETTABLE 	R22 R10 K64 ; R22 := R10[1.000000]
	330	[699]	CALL     	R20 3 1 ; R20(R21,R22)
	331	[700]	GETGLOBAL	R20 K6 ; R20 := _T
	332	[700]	GETTABLE 	R20 R20 K65 ; R20 := R20[0x9d4f5aaf]
	333	[700]	MOVE     	R21 R7 ; R21 := R7
	334	[700]	GETTABLE 	R22 R10 K66 ; R22 := R10[2.000000]
	335	[700]	CALL     	R20 3 1 ; R20(R21,R22)
	336	[701]	GETGLOBAL	R20 K6 ; R20 := _T
	337	[701]	GETTABLE 	R20 R20 K67 ; R20 := R20["KHORA_CurrentDissolve"]
	338	[701]	SELF     	R21 R5 K25 ; R22 := R5; R21 := R5[0x388577d5]
	339	[701]	CALL     	R21 2 2 ; R21 := R21(R22)
	340	[701]	GETTABLE 	R22 R10 K66 ; R22 := R10[2.000000]
	341	[701]	SETTABLE 	R20 R21 R22 ; R20[R21] := R22
	342	[701]	JMP      	360 ; PC := 360
	343	[702]	SELF     	R20 R7 K14 ; R21 := R7; R20 := R7[0xf2deaf69]
	344	[702]	GETGLOBAL	R22 K31 ; R22 := 0x2ccd2c30
	345	[702]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	346	[702]	TEST     	R20 0 ; if not R20 then PC := 360
	347	[702]	JMP      	360 ; PC := 360
	348	[702]	EQ       	0 R10 K34 ; if R10 ~= true then PC := 360
	349	[702]	JMP      	360 ; PC := 360
	350	[703]	GETGLOBAL	R20 K6 ; R20 := _T
	351	[703]	GETTABLE 	R20 R20 K68 ; R20 := R20["RUNNER_SetDecoState"]
	352	[703]	EQ       	1 R20 K11 ; if R20 == nil then PC := 360
	353	[703]	JMP      	360 ; PC := 360
	354	[704]	GETGLOBAL	R20 K6 ; R20 := _T
	355	[704]	GETTABLE 	R20 R20 K69 ; R20 := R20[0x3ef5c227]
	356	[704]	MOVE     	R21 R5 ; R21 := R5
	357	[704]	OP_LOADBOOL	R22 1 0 ; R22 := true
	358	[704]	OP_LOADBOOL	R23 1 0 ; R23 := true
	359	[704]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	360	[709]	LOADNIL  	R20 R20 ; R20 := nil
	361	[710]	MOVE     	R21 R6 ; R21 := R6
	362	[711]	SELF     	R22 R7 K14 ; R23 := R7; R22 := R7[0xf2deaf69]
	363	[711]	GETGLOBAL	R24 K28 ; R24 := 0x6dcacb87
	364	[711]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	365	[711]	TEST     	R22 1 ; if R22 then PC := 377
	366	[711]	JMP      	377 ; PC := 377
	367	[711]	SELF     	R22 R7 K14 ; R23 := R7; R22 := R7[0xf2deaf69]
	368	[711]	GETGLOBAL	R24 K70 ; R24 := 0xda46ae79
	369	[711]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	370	[711]	TEST     	R22 1 ; if R22 then PC := 377
	371	[711]	JMP      	377 ; PC := 377
	372	[711]	SELF     	R22 R7 K14 ; R23 := R7; R22 := R7[0xf2deaf69]
	373	[711]	GETGLOBAL	R24 K71 ; R24 := 0x2c86a0ee
	374	[711]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	375	[711]	TEST     	R22 0 ; if not R22 then PC := 590
	376	[711]	JMP      	590 ; PC := 590
	377	[712]	GETGLOBAL	R22 K6 ; R22 := _T
	378	[712]	GETUPVAL 	R23 U0 ; R23 := U0
	379	[712]	GETTABLE 	R23 R23 K0 ; R23 := R23[0x06d055f9]
	380	[712]	MOVE     	R24 R9 ; R24 := R9
	381	[712]	OP_LOADBOOL	R25 1 0 ; R25 := true
	382	[712]	OP_LOADBOOL	R26 0 0 ; R26 := false
	383	[712]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	384	[712]	SETTABLE 	R22 K10 R23 ; R22["mSpecialSuitMode"] := R23
	385	[715]	LOADNIL  	R22 R22 ; R22 := nil
	386	[716]	SELF     	R23 R7 K14 ; R24 := R7; R23 := R7[0xf2deaf69]
	387	[716]	GETGLOBAL	R25 K28 ; R25 := 0x6dcacb87
	388	[716]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	389	[716]	TEST     	R23 0 ; if not R23 then PC := 396
	390	[716]	JMP      	396 ; PC := 396
	391	[717]	GETGLOBAL	R23 K53 ; R23 := 0x88efc25e
	392	[717]	GETGLOBAL	R24 K72 ; R24 := 0xb75541f5
	393	[717]	CALL     	R23 2 2 ; R23 := R23(R24)
	394	[717]	MOVE     	R22 R23 ; R22 := R23
	395	[717]	JMP      	411 ; PC := 411
	396	[718]	SELF     	R23 R7 K14 ; R24 := R7; R23 := R7[0xf2deaf69]
	397	[718]	GETGLOBAL	R25 K71 ; R25 := 0x2c86a0ee
	398	[718]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	399	[718]	TEST     	R23 0 ; if not R23 then PC := 406
	400	[718]	JMP      	406 ; PC := 406
	401	[719]	GETGLOBAL	R23 K53 ; R23 := 0x88efc25e
	402	[719]	GETGLOBAL	R24 K73 ; R24 := 0x2c71998f
	403	[719]	CALL     	R23 2 2 ; R23 := R23(R24)
	404	[719]	MOVE     	R22 R23 ; R22 := R23
	405	[719]	JMP      	411 ; PC := 411
	406	[721]	GETGLOBAL	R23 K53 ; R23 := 0x88efc25e
	407	[721]	SELF     	R24 R5 K74 ; R25 := R5; R24 := R5[0xcde10c4a]
	408	[721]	CALL     	R24 2 0 ; R24,... := R24(R25)
	409	[721]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	410	[721]	MOVE     	R22 R23 ; R22 := R23
	411	[724]	GETGLOBAL	R23 K12 ; R23 := 0x7b998233
	412	[724]	GETGLOBAL	R24 K6 ; R24 := _T
	413	[724]	GETTABLE 	R24 R24 K75 ; R24 := R24["SpecialSuitAvatar"]
	414	[724]	CALL     	R23 2 2 ; R23 := R23(R24)
	415	[724]	TEST     	R23 1 ; if R23 then PC := 430
	416	[724]	JMP      	430 ; PC := 430
	417	[724]	GETGLOBAL	R23 K6 ; R23 := _T
	418	[724]	GETTABLE 	R23 R23 K75 ; R23 := R23["SpecialSuitAvatar"]
	419	[724]	SELF     	R23 R23 K74 ; R24 := R23; R23 := R23[0xcde10c4a]
	420	[724]	CALL     	R23 2 2 ; R23 := R23(R24)
	421	[724]	EQ       	1 R23 R22 ; if R23 == R22 then PC := 430
	422	[724]	JMP      	430 ; PC := 430
	423	[725]	GETGLOBAL	R23 K76 ; R23 := 0x89326c93
	424	[725]	SELF     	R23 R23 K77 ; R24 := R23; R23 := R23[0x59c96e77]
	425	[725]	GETGLOBAL	R25 K6 ; R25 := _T
	426	[725]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	427	[725]	CALL     	R23 3 1 ; R23(R24,R25)
	428	[726]	GETGLOBAL	R23 K6 ; R23 := _T
	429	[726]	SETTABLE 	R23 K75 K11 ; R23["SpecialSuitAvatar"] := nil
	430	[729]	GETGLOBAL	R23 K12 ; R23 := 0x7b998233
	431	[729]	GETGLOBAL	R24 K6 ; R24 := _T
	432	[729]	GETTABLE 	R24 R24 K75 ; R24 := R24["SpecialSuitAvatar"]
	433	[729]	CALL     	R23 2 2 ; R23 := R23(R24)
	434	[729]	TEST     	R23 0 ; if not R23 then PC := 498
	435	[729]	JMP      	498 ; PC := 498
	436	[730]	GETGLOBAL	R23 K78 ; R23 := 0x00046924
	437	[730]	GETGLOBAL	R24 K6 ; R24 := _T
	438	[730]	GETTABLE 	R24 R24 K79 ; R24 := R24["DEFAULT_SUIT_ROTATION"]
	439	[730]	LOADK    	R25 := 0.000000
	440	[730]	LOADK    	R26 := 0.000000
	441	[730]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	442	[731]	GETGLOBAL	R24 K80 ; R24 := mArsenalConsole
	443	[731]	SELF     	R24 R24 K81 ; R25 := R24; R24 := R24[0xd1586535]
	444	[731]	CALL     	R24 2 2 ; R24 := R24(R25)
	445	[732]	GETTABLE 	R25 R24 K82 ; R25 := R24["y"]
	446	[732]	SUB      	R25 R25 K83 ; R25 := R25 - 0.670000
	447	[732]	SETTABLE 	R24 K82 R25 ; R24["y"] := R25
	448	[734]	GETGLOBAL	R25 K6 ; R25 := _T
	449	[734]	GETGLOBAL	R26 K76 ; R26 := 0x89326c93
	450	[734]	SELF     	R26 R26 K84 ; R27 := R26; R26 := R26[0x05909209]
	451	[734]	MOVE     	R28 R22 ; R28 := R22
	452	[734]	MOVE     	R29 R24 ; R29 := R24
	453	[734]	MOVE     	R30 R23 ; R30 := R23
	454	[734]	MOVE     	R31 R5 ; R31 := R5
	455	[734]	MOVE     	R32 R5 ; R32 := R5
	456	[734]	GETUPVAL 	R33 U0 ; R33 := U0
	457	[734]	GETTABLE 	R33 R33 K0 ; R33 := R33[0x06d055f9]
	458	[734]	GETGLOBAL	R34 K76 ; R34 := 0x89326c93
	459	[734]	SELF     	R34 R34 K85 ; R35 := R34; R34 := R34[0x18d05d30]
	460	[734]	CALL     	R34 2 2 ; R34 := R34(R35)
	461	[734]	LOADK    	R35 := 3.000000
	462	[734]	LOADK    	R36 := 4.000000
	463	[734]	CALL     	R33 4 0 ; R33,... := R33(R34,R35,R36)
	464	[734]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	465	[734]	SETTABLE 	R25 K75 R26 ; R25["SpecialSuitAvatar"] := R26
	466	[735]	GETGLOBAL	R25 K6 ; R25 := _T
	467	[735]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	468	[735]	SELF     	R25 R25 K14 ; R26 := R25; R25 := R25[0xf2deaf69]
	469	[735]	GETGLOBAL	R27 K86 ; R27 := gLotusSentinelAvatarType
	470	[735]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	471	[735]	TEST     	R25 0 ; if not R25 then PC := 483
	472	[735]	JMP      	483 ; PC := 483
	473	[736]	GETGLOBAL	R25 K6 ; R25 := _T
	474	[736]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	475	[736]	SELF     	R25 R25 K87 ; R26 := R25; R25 := R25[0xc5d49e69]
	476	[736]	MOVE     	R27 R5 ; R27 := R5
	477	[736]	CALL     	R25 3 1 ; R25(R26,R27)
	478	[737]	GETGLOBAL	R25 K6 ; R25 := _T
	479	[737]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	480	[737]	SELF     	R25 R25 K88 ; R26 := R25; R25 := R25[0x23d6100a]
	481	[737]	OP_LOADBOOL	R27 0 0 ; R27 := false
	482	[737]	CALL     	R25 3 1 ; R25(R26,R27)
	483	[739]	GETGLOBAL	R25 K6 ; R25 := _T
	484	[739]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	485	[739]	SELF     	R25 R25 K89 ; R26 := R25; R25 := R25[0x044b7be8]
	486	[739]	OP_LOADBOOL	R27 1 0 ; R27 := true
	487	[739]	CALL     	R25 3 1 ; R25(R26,R27)
	488	[740]	GETGLOBAL	R25 K6 ; R25 := _T
	489	[740]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	490	[740]	SELF     	R25 R25 K90 ; R26 := R25; R25 := R25[0x2abc8ecd]
	491	[740]	OP_LOADBOOL	R27 0 0 ; R27 := false
	492	[740]	CALL     	R25 3 1 ; R25(R26,R27)
	493	[741]	GETGLOBAL	R25 K6 ; R25 := _T
	494	[741]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	495	[741]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xd749da12]
	496	[741]	OP_LOADBOOL	R27 0 0 ; R27 := false
	497	[741]	CALL     	R25 3 1 ; R25(R26,R27)
	498	[744]	GETGLOBAL	R25 K6 ; R25 := _T
	499	[744]	GETTABLE 	R25 R25 K75 ; R25 := R25["SpecialSuitAvatar"]
	500	[744]	SELF     	R25 R25 K8 ; R26 := R25; R25 := R25[0xde321e6f]
	501	[744]	CALL     	R25 2 2 ; R25 := R25(R26)
	502	[745]	SELF     	R26 R25 K92 ; R27 := R25; R26 := R25[0x3606abef]
	503	[745]	SELF     	R28 R6 K93 ; R29 := R6; R28 := R6[0x18a82453]
	504	[745]	CALL     	R28 2 0 ; R28,... := R28(R29)
	505	[745]	CALL     	R26 0 1 ; R26(R27,...)
	506	[747]	SELF     	R26 R7 K14 ; R27 := R7; R26 := R7[0xf2deaf69]
	507	[747]	GETGLOBAL	R28 K70 ; R28 := 0xda46ae79
	508	[747]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	509	[747]	TEST     	R26 0 ; if not R26 then PC := 512
	510	[747]	JMP      	512 ; PC := 512
	511	[748]	MOVE     	R21 R25 ; R21 := R25
	512	[751]	SELF     	R26 R25 K94 ; R27 := R25; R26 := R25[0x9c596606]
	513	[751]	MOVE     	R28 R4 ; R28 := R4
	514	[751]	MOVE     	R29 R3 ; R29 := R3
	515	[751]	LOADK    	R30 := 5.000000
	516	[751]	OP_LOADBOOL	R31 1 0 ; R31 := true
	517	[751]	CALL     	R26 6 1 ; R26(R27,R28,R29,R30,R31)
	518	[752]	SELF     	R26 R25 K9 ; R27 := R25; R26 := R25[0xf7d48ee0]
	519	[752]	CALL     	R26 2 2 ; R26 := R26(R27)
	520	[753]	GETGLOBAL	R27 K12 ; R27 := 0x7b998233
	521	[753]	MOVE     	R28 R26 ; R28 := R26
	522	[753]	CALL     	R27 2 2 ; R27 := R27(R28)
	523	[753]	TEST     	R27 1 ; if R27 then PC := 554
	524	[753]	JMP      	554 ; PC := 554
	525	[754]	GETGLOBAL	R27 K6 ; R27 := _T
	526	[754]	GETTABLE 	R27 R27 K7 ; R27 := R27["MenuSuitAvatar"]
	527	[754]	SELF     	R27 R27 K8 ; R28 := R27; R27 := R27[0xde321e6f]
	528	[754]	CALL     	R27 2 2 ; R27 := R27(R28)
	529	[754]	SELF     	R27 R27 K95 ; R28 := R27; R27 := R27[0x38d29025]
	530	[754]	MOVE     	R29 R26 ; R29 := R26
	531	[754]	CALL     	R27 3 1 ; R27(R28,R29)
	532	[756]	LOADK    	R27 := 5.000000
	533	[756]	LOADK    	R28 := 6.000000
	534	[756]	LOADK    	R29 := 1.000000
	535	[756]	FORPREP  	R27 553 ; R27 -= R29; PC := 553
	536	[757]	SELF     	R31 R26 K96 ; R32 := R26; R31 := R26[0x4a5d8c86]
	537	[757]	MOVE     	R33 R30 ; R33 := R30
	538	[757]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	539	[757]	GETTABLE 	R31 R31 K97 ; R31 := R31["mItemType"]
	540	[759]	GETGLOBAL	R32 K12 ; R32 := 0x7b998233
	541	[759]	MOVE     	R33 R31 ; R33 := R31
	542	[759]	CALL     	R32 2 2 ; R32 := R32(R33)
	543	[759]	TEST     	R32 1 ; if R32 then PC := 553
	544	[759]	JMP      	553 ; PC := 553
	545	[760]	GETGLOBAL	R32 K6 ; R32 := _T
	546	[760]	GETTABLE 	R32 R32 K75 ; R32 := R32["SpecialSuitAvatar"]
	547	[760]	SELF     	R32 R32 K52 ; R33 := R32; R32 := R32[0x511d26b8]
	548	[760]	GETGLOBAL	R34 K53 ; R34 := 0x88efc25e
	549	[760]	MOVE     	R35 R31 ; R35 := R31
	550	[760]	CALL     	R34 2 2 ; R34 := R34(R35)
	551	[760]	OP_LOADBOOL	R35 1 0 ; R35 := true
	552	[760]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	553	[756]	FORLOOP  	R27 536 ; R27 += R29; if R27 <= R28 then begin PC := 536; R30 := R27 end
	554	[765]	GETUPVAL 	R32 U3 ; R32 := U3
	555	[765]	GETTABLE 	R32 R32 K98 ; R32 := R32["Current"]
	556	[765]	EQ       	1 R32 K99 ; if R32 == 3.000000 then PC := 632
	557	[765]	JMP      	632 ; PC := 632
	558	[765]	GETGLOBAL	R32 K100 ; R32 := mLists
	559	[765]	GETTABLE 	R32 R32 K101 ; R32 := R32["mLoadOutList"]
	560	[765]	GETTABLE 	R32 R32 K102 ; R32 := R32["SpecialASlotId"]
	561	[765]	EQ       	1 R32 K11 ; if R32 == nil then PC := 632
	562	[765]	JMP      	632 ; PC := 632
	563	[766]	SELF     	R32 R7 K96 ; R33 := R7; R32 := R7[0x4a5d8c86]
	564	[766]	LOADK    	R34 := 5.000000
	565	[766]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	566	[767]	GETUPVAL 	R33 U4 ; R33 := U4
	567	[767]	GETGLOBAL	R34 K103 ; R34 := 0xae91e43b
	568	[767]	MOVE     	R35 R5 ; R35 := R5
	569	[767]	GETGLOBAL	R36 K100 ; R36 := mLists
	570	[767]	GETTABLE 	R36 R36 K101 ; R36 := R36["mLoadOutList"]
	571	[767]	GETTABLE 	R36 R36 K104 ; R36 := R36["mElements"]
	572	[767]	GETTABLE 	R36 R36 K64 ; R36 := R36[1.000000]
	573	[767]	OP_LOADBOOL	R37 0 0 ; R37 := false
	574	[767]	CALL     	R33 5 2 ; R33 := R33(R34,R35,R36,R37)
	575	[767]	MOVE     	R20 R33 ; R20 := R33
	576	[768]	GETGLOBAL	R33 K100 ; R33 := mLists
	577	[768]	GETTABLE 	R33 R33 K101 ; R33 := R33["mLoadOutList"]
	578	[768]	GETTABLE 	R33 R33 K104 ; R33 := R33["mElements"]
	579	[768]	GETGLOBAL	R34 K100 ; R34 := mLists
	580	[768]	GETTABLE 	R34 R34 K101 ; R34 := R34["mLoadOutList"]
	581	[768]	GETTABLE 	R34 R34 K102 ; R34 := R34["SpecialASlotId"]
	582	[768]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	583	[768]	LOADK    	R34 K106 ; R34 := "AbilityIcon"
	584	[768]	GETTABLE 	R35 R32 K107 ; R35 := R32["mAbilityIndex"]
	585	[768]	ADD      	R35 R35 K64 ; R35 := R35 + 1.000000
	586	[768]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	587	[768]	GETTABLE 	R34 R20 R34 ; R34 := R20[R34]
	588	[768]	SETTABLE 	R33 K105 R34 ; R33["SpecialIcon"] := R34
	589	[769]	JMP      	632 ; PC := 632
	590	[771]	GETGLOBAL	R33 K12 ; R33 := 0x7b998233
	591	[771]	GETGLOBAL	R34 K6 ; R34 := _T
	592	[771]	GETTABLE 	R34 R34 K75 ; R34 := R34["SpecialSuitAvatar"]
	593	[771]	CALL     	R33 2 2 ; R33 := R33(R34)
	594	[771]	TEST     	R33 1 ; if R33 then PC := 606
	595	[771]	JMP      	606 ; PC := 606
	596	[772]	GETGLOBAL	R33 K76 ; R33 := 0x89326c93
	597	[772]	SELF     	R33 R33 K77 ; R34 := R33; R33 := R33[0x59c96e77]
	598	[772]	GETGLOBAL	R35 K6 ; R35 := _T
	599	[772]	GETTABLE 	R35 R35 K75 ; R35 := R35["SpecialSuitAvatar"]
	600	[772]	CALL     	R33 3 1 ; R33(R34,R35)
	601	[773]	GETGLOBAL	R33 K6 ; R33 := _T
	602	[773]	SETTABLE 	R33 K75 K11 ; R33["SpecialSuitAvatar"] := nil
	603	[774]	SELF     	R33 R5 K90 ; R34 := R5; R33 := R5[0x2abc8ecd]
	604	[774]	OP_LOADBOOL	R35 1 0 ; R35 := true
	605	[774]	CALL     	R33 3 1 ; R33(R34,R35)
	606	[777]	GETGLOBAL	R33 K100 ; R33 := mLists
	607	[777]	GETTABLE 	R33 R33 K101 ; R33 := R33["mLoadOutList"]
	608	[777]	GETTABLE 	R33 R33 K102 ; R33 := R33["SpecialASlotId"]
	609	[777]	EQ       	1 R33 K11 ; if R33 == nil then PC := 619
	610	[777]	JMP      	619 ; PC := 619
	611	[778]	GETGLOBAL	R33 K100 ; R33 := mLists
	612	[778]	GETTABLE 	R33 R33 K101 ; R33 := R33["mLoadOutList"]
	613	[778]	GETTABLE 	R33 R33 K104 ; R33 := R33["mElements"]
	614	[778]	GETGLOBAL	R34 K100 ; R34 := mLists
	615	[778]	GETTABLE 	R34 R34 K101 ; R34 := R34["mLoadOutList"]
	616	[778]	GETTABLE 	R34 R34 K102 ; R34 := R34["SpecialASlotId"]
	617	[778]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	618	[778]	SETTABLE 	R33 K105 K11 ; R33["SpecialIcon"] := nil
	619	[780]	GETGLOBAL	R33 K100 ; R33 := mLists
	620	[780]	GETTABLE 	R33 R33 K101 ; R33 := R33["mLoadOutList"]
	621	[780]	GETTABLE 	R33 R33 K108 ; R33 := R33["SpecialBSlotId"]
	622	[780]	EQ       	1 R33 K11 ; if R33 == nil then PC := 632
	623	[780]	JMP      	632 ; PC := 632
	624	[781]	GETGLOBAL	R33 K100 ; R33 := mLists
	625	[781]	GETTABLE 	R33 R33 K101 ; R33 := R33["mLoadOutList"]
	626	[781]	GETTABLE 	R33 R33 K104 ; R33 := R33["mElements"]
	627	[781]	GETGLOBAL	R34 K100 ; R34 := mLists
	628	[781]	GETTABLE 	R34 R34 K101 ; R34 := R34["mLoadOutList"]
	629	[781]	GETTABLE 	R34 R34 K108 ; R34 := R34["SpecialBSlotId"]
	630	[781]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	631	[781]	SETTABLE 	R33 K105 K11 ; R33["SpecialIcon"] := nil
	632	[785]	LOADK    	R33 := 5.000000
	633	[785]	LOADK    	R34 := 6.000000
	634	[785]	LOADK    	R35 := 1.000000
	635	[785]	FORPREP  	R33 731 ; R33 -= R35; PC := 731
	636	[786]	SELF     	R37 R7 K96 ; R38 := R7; R37 := R7[0x4a5d8c86]
	637	[786]	MOVE     	R39 R36 ; R39 := R36
	638	[786]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	639	[787]	GETTABLE 	R38 R37 K97 ; R38 := R37["mItemType"]
	640	[788]	GETGLOBAL	R39 K12 ; R39 := 0x7b998233
	641	[788]	MOVE     	R40 R38 ; R40 := R38
	642	[788]	CALL     	R39 2 2 ; R39 := R39(R40)
	643	[788]	TEST     	R39 1 ; if R39 then PC := 731
	644	[788]	JMP      	731 ; PC := 731
	645	[788]	SELF     	R39 R38 K14 ; R40 := R38; R39 := R38[0xf2deaf69]
	646	[788]	GETGLOBAL	R41 K109 ; R41 := gPowerSuitType
	647	[788]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	648	[788]	TEST     	R39 1 ; if R39 then PC := 731
	649	[788]	JMP      	731 ; PC := 731
	650	[789]	SELF     	R39 R21 K94 ; R40 := R21; R39 := R21[0x9c596606]
	651	[789]	MOVE     	R41 R4 ; R41 := R4
	652	[789]	MOVE     	R42 R3 ; R42 := R3
	653	[789]	MOVE     	R43 R36 ; R43 := R36
	654	[789]	OP_LOADBOOL	R44 1 0 ; R44 := true
	655	[789]	CALL     	R39 6 1 ; R39(R40,R41,R42,R43,R44)
	656	[791]	SELF     	R39 R38 K14 ; R40 := R38; R39 := R38[0xf2deaf69]
	657	[791]	GETGLOBAL	R41 K110 ; R41 := gLotusCustomAimWeaponType
	658	[791]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	659	[791]	TEST     	R39 1 ; if R39 then PC := 671
	660	[791]	JMP      	671 ; PC := 671
	661	[792]	SELF     	R39 R7 K14 ; R40 := R7; R39 := R7[0xf2deaf69]
	662	[792]	GETGLOBAL	R41 K111 ; R41 := 0xf773e9d4
	663	[792]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	664	[792]	TEST     	R39 1 ; if R39 then PC := 671
	665	[792]	JMP      	671 ; PC := 671
	666	[794]	SELF     	R39 R21 K112 ; R40 := R21; R39 := R21[0x0eeedfea]
	667	[794]	GETUPVAL 	R41 U5 ; R41 := U5
	668	[794]	MOVE     	R42 R36 ; R42 := R36
	669	[794]	CALL     	R41 2 0 ; R41,... := R41(R42)
	670	[794]	CALL     	R39 0 1 ; R39(R40,...)
	671	[797]	GETUPVAL 	R39 U3 ; R39 := U3
	672	[797]	GETTABLE 	R39 R39 K98 ; R39 := R39["Current"]
	673	[797]	EQ       	1 R39 K99 ; if R39 == 3.000000 then PC := 731
	674	[797]	JMP      	731 ; PC := 731
	675	[798]	EQ       	0 R20 K11 ; if R20 ~= nil then PC := 687
	676	[798]	JMP      	687 ; PC := 687
	677	[799]	GETUPVAL 	R39 U4 ; R39 := U4
	678	[799]	GETGLOBAL	R40 K103 ; R40 := 0xae91e43b
	679	[799]	MOVE     	R41 R5 ; R41 := R5
	680	[799]	GETGLOBAL	R42 K100 ; R42 := mLists
	681	[799]	GETTABLE 	R42 R42 K101 ; R42 := R42["mLoadOutList"]
	682	[799]	GETTABLE 	R42 R42 K104 ; R42 := R42["mElements"]
	683	[799]	GETTABLE 	R42 R42 K64 ; R42 := R42[1.000000]
	684	[799]	OP_LOADBOOL	R43 0 0 ; R43 := false
	685	[799]	CALL     	R39 5 2 ; R39 := R39(R40,R41,R42,R43)
	686	[799]	MOVE     	R20 R39 ; R20 := R39
	687	[802]	GETTABLE 	R39 R37 K107 ; R39 := R37["mAbilityIndex"]
	688	[804]	SELF     	R40 R7 K113 ; R41 := R7; R40 := R7[0xd836367c]
	689	[804]	CALL     	R40 2 2 ; R40 := R40(R41)
	690	[804]	LT       	0 R39 R40 ; if R39 >= R40 then PC := 731
	691	[804]	JMP      	731 ; PC := 731
	692	[805]	EQ       	0 R36 K114 ; if R36 ~= 5.000000 then PC := 712
	693	[805]	JMP      	712 ; PC := 712
	694	[805]	GETGLOBAL	R40 K100 ; R40 := mLists
	695	[805]	GETTABLE 	R40 R40 K101 ; R40 := R40["mLoadOutList"]
	696	[805]	GETTABLE 	R40 R40 K102 ; R40 := R40["SpecialASlotId"]
	697	[805]	EQ       	1 R40 K11 ; if R40 == nil then PC := 712
	698	[805]	JMP      	712 ; PC := 712
	699	[806]	GETGLOBAL	R40 K100 ; R40 := mLists
	700	[806]	GETTABLE 	R40 R40 K101 ; R40 := R40["mLoadOutList"]
	701	[806]	GETTABLE 	R40 R40 K104 ; R40 := R40["mElements"]
	702	[806]	GETGLOBAL	R41 K100 ; R41 := mLists
	703	[806]	GETTABLE 	R41 R41 K101 ; R41 := R41["mLoadOutList"]
	704	[806]	GETTABLE 	R41 R41 K102 ; R41 := R41["SpecialASlotId"]
	705	[806]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	706	[806]	LOADK    	R41 K106 ; R41 := "AbilityIcon"
	707	[806]	ADD      	R42 R39 K64 ; R42 := R39 + 1.000000
	708	[806]	CONCAT   	R41 R41 R42 ; R41 := R41 .. R42
	709	[806]	GETTABLE 	R41 R20 R41 ; R41 := R20[R41]
	710	[806]	SETTABLE 	R40 K105 R41 ; R40["SpecialIcon"] := R41
	711	[806]	JMP      	731 ; PC := 731
	712	[807]	EQ       	0 R36 K115 ; if R36 ~= 6.000000 then PC := 731
	713	[807]	JMP      	731 ; PC := 731
	714	[807]	GETGLOBAL	R40 K100 ; R40 := mLists
	715	[807]	GETTABLE 	R40 R40 K101 ; R40 := R40["mLoadOutList"]
	716	[807]	GETTABLE 	R40 R40 K108 ; R40 := R40["SpecialBSlotId"]
	717	[807]	EQ       	1 R40 K11 ; if R40 == nil then PC := 731
	718	[807]	JMP      	731 ; PC := 731
	719	[808]	GETGLOBAL	R40 K100 ; R40 := mLists
	720	[808]	GETTABLE 	R40 R40 K101 ; R40 := R40["mLoadOutList"]
	721	[808]	GETTABLE 	R40 R40 K104 ; R40 := R40["mElements"]
	722	[808]	GETGLOBAL	R41 K100 ; R41 := mLists
	723	[808]	GETTABLE 	R41 R41 K101 ; R41 := R41["mLoadOutList"]
	724	[808]	GETTABLE 	R41 R41 K108 ; R41 := R41["SpecialBSlotId"]
	725	[808]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	726	[808]	LOADK    	R41 K106 ; R41 := "AbilityIcon"
	727	[808]	ADD      	R42 R39 K64 ; R42 := R39 + 1.000000
	728	[808]	CONCAT   	R41 R41 R42 ; R41 := R41 .. R42
	729	[808]	GETTABLE 	R41 R20 R41 ; R41 := R20[R41]
	730	[808]	SETTABLE 	R40 K105 R41 ; R40["SpecialIcon"] := R41
	731	[785]	FORLOOP  	R33 636 ; R33 += R35; if R33 <= R34 then begin PC := 636; R36 := R33 end
	732	[816]	SELF     	R40 R6 K116 ; R41 := R6; R40 := R6[0xfaa69527]
	733	[816]	LOADK    	R42 := 0.000000
	734	[816]	CALL     	R40 3 1 ; R40(R41,R42)
	735	[818]	TEST     	R0 0 ; if not R0 then PC := 749
	736	[818]	JMP      	749 ; PC := 749
	737	[818]	GETGLOBAL	R40 K117 ; R40 := mPvpTeams
	738	[818]	GETTABLE 	R40 R40 K98 ; R40 := R40["Current"]
	739	[818]	EQ       	1 R40 K64 ; if R40 == 1.000000 then PC := 749
	740	[818]	JMP      	749 ; PC := 749
	741	[819]	GETUPVAL 	R40 U1 ; R40 := U1
	742	[819]	GETTABLE 	R40 R40 K118 ; R40 := R40[0xa99c33fd]
	743	[819]	GETGLOBAL	R41 K6 ; R41 := _T
	744	[819]	GETTABLE 	R41 R41 K7 ; R41 := R41["MenuSuitAvatar"]
	745	[819]	GETGLOBAL	R42 K117 ; R42 := mPvpTeams
	746	[819]	GETTABLE 	R42 R42 K98 ; R42 := R42["Current"]
	747	[819]	SUB      	R42 R42 K64 ; R42 := R42 - 1.000000
	748	[819]	CALL     	R40 3 1 ; R40(R41,R42)
	749	[822]	LOADNIL  	R40 R40 ; R40 := nil
	750	[823]	GETGLOBAL	R41 K12 ; R41 := 0x7b998233
	751	[823]	GETGLOBAL	R42 K6 ; R42 := _T
	752	[823]	GETTABLE 	R42 R42 K7 ; R42 := R42["MenuSuitAvatar"]
	753	[823]	CALL     	R41 2 2 ; R41 := R41(R42)
	754	[823]	TEST     	R41 1 ; if R41 then PC := 763
	755	[823]	JMP      	763 ; PC := 763
	756	[824]	GETGLOBAL	R41 K6 ; R41 := _T
	757	[824]	GETTABLE 	R41 R41 K7 ; R41 := R41["MenuSuitAvatar"]
	758	[824]	SELF     	R41 R41 K8 ; R42 := R41; R41 := R41[0xde321e6f]
	759	[824]	CALL     	R41 2 2 ; R41 := R41(R42)
	760	[824]	SELF     	R41 R41 K119 ; R42 := R41; R41 := R41[0x2676deee]
	761	[824]	CALL     	R41 2 2 ; R41 := R41(R42)
	762	[824]	MOVE     	R40 R41 ; R40 := R41
	763	[826]	GETGLOBAL	R41 K12 ; R41 := 0x7b998233
	764	[826]	GETGLOBAL	R42 K6 ; R42 := _T
	765	[826]	GETTABLE 	R42 R42 K120 ; R42 := R42["MenuSentinel"]
	766	[826]	CALL     	R41 2 2 ; R41 := R41(R42)
	767	[826]	TEST     	R41 1 ; if R41 then PC := 780
	768	[826]	JMP      	780 ; PC := 780
	769	[826]	GETUPVAL 	R41 U6 ; R41 := U6
	770	[826]	GETUPVAL 	R42 U1 ; R42 := U1
	771	[826]	GETTABLE 	R42 R42 K121 ; R42 := R42["UI_MODE_IN_SPACE_SHIP"]
	772	[826]	EQ       	1 R41 R42 ; if R41 == R42 then PC := 780
	773	[826]	JMP      	780 ; PC := 780
	774	[827]	GETGLOBAL	R41 K6 ; R41 := _T
	775	[827]	GETTABLE 	R41 R41 K120 ; R41 := R41["MenuSentinel"]
	776	[827]	SELF     	R41 R41 K42 ; R42 := R41; R41 := R41[0x768274d6]
	777	[827]	OP_LOADBOOL	R43 0 0 ; R43 := false
	778	[827]	OP_LOADBOOL	R44 1 0 ; R44 := true
	779	[827]	CALL     	R41 4 1 ; R41(R42,R43,R44)
	780	[829]	GETGLOBAL	R41 K6 ; R41 := _T
	781	[829]	SETTABLE 	R41 K120 R40 ; R41["MenuSentinel"] := R40
	782	[830]	GETGLOBAL	R41 K12 ; R41 := 0x7b998233
	783	[830]	GETGLOBAL	R42 K6 ; R42 := _T
	784	[830]	GETTABLE 	R42 R42 K120 ; R42 := R42["MenuSentinel"]
	785	[830]	CALL     	R41 2 2 ; R41 := R41(R42)
	786	[830]	TEST     	R41 1 ; if R41 then PC := 816
	787	[830]	JMP      	816 ; PC := 816
	788	[831]	GETGLOBAL	R41 K6 ; R41 := _T
	789	[831]	GETTABLE 	R41 R41 K120 ; R41 := R41["MenuSentinel"]
	790	[831]	SELF     	R41 R41 K91 ; R42 := R41; R41 := R41[0xd749da12]
	791	[831]	OP_LOADBOOL	R43 0 0 ; R43 := false
	792	[831]	CALL     	R41 3 1 ; R41(R42,R43)
	793	[833]	GETGLOBAL	R41 K6 ; R41 := _T
	794	[833]	GETTABLE 	R41 R41 K122 ; R41 := R41["InSimulacrum"]
	795	[833]	TEST     	R41 0 ; if not R41 then PC := 816
	796	[833]	JMP      	816 ; PC := 816
	797	[834]	GETGLOBAL	R41 K6 ; R41 := _T
	798	[834]	GETTABLE 	R41 R41 K120 ; R41 := R41["MenuSentinel"]
	799	[834]	SELF     	R41 R41 K88 ; R42 := R41; R41 := R41[0x23d6100a]
	800	[834]	OP_LOADBOOL	R43 0 0 ; R43 := false
	801	[834]	CALL     	R41 3 1 ; R41(R42,R43)
	802	[835]	GETGLOBAL	R41 K6 ; R41 := _T
	803	[835]	GETTABLE 	R41 R41 K120 ; R41 := R41["MenuSentinel"]
	804	[835]	SELF     	R41 R41 K8 ; R42 := R41; R41 := R41[0xde321e6f]
	805	[835]	CALL     	R41 2 2 ; R41 := R41(R42)
	806	[835]	SELF     	R41 R41 K9 ; R42 := R41; R41 := R41[0xf7d48ee0]
	807	[835]	CALL     	R41 2 2 ; R41 := R41(R42)
	808	[836]	GETGLOBAL	R42 K12 ; R42 := 0x7b998233
	809	[836]	MOVE     	R43 R41 ; R43 := R41
	810	[836]	CALL     	R42 2 2 ; R42 := R42(R43)
	811	[836]	TEST     	R42 1 ; if R42 then PC := 816
	812	[836]	JMP      	816 ; PC := 816
	813	[837]	SELF     	R42 R41 K123 ; R43 := R41; R42 := R41[0x1bf26251]
	814	[837]	OP_LOADBOOL	R44 0 0 ; R44 := false
	815	[837]	CALL     	R42 3 1 ; R42(R43,R44)
	816	[842]	GETGLOBAL	R42 K12 ; R42 := 0x7b998233
	817	[842]	GETGLOBAL	R43 K6 ; R43 := _T
	818	[842]	GETTABLE 	R43 R43 K120 ; R43 := R43["MenuSentinel"]
	819	[842]	CALL     	R42 2 2 ; R42 := R42(R43)
	820	[842]	TEST     	R42 1 ; if R42 then PC := 829
	821	[842]	JMP      	829 ; PC := 829
	822	[843]	GETGLOBAL	R42 K6 ; R42 := _T
	823	[843]	GETTABLE 	R42 R42 K120 ; R42 := R42["MenuSentinel"]
	824	[843]	SELF     	R42 R42 K124 ; R43 := R42; R42 := R42[0x1ac1655c]
	825	[843]	CALL     	R42 2 2 ; R42 := R42(R43)
	826	[843]	SELF     	R42 R42 K125 ; R43 := R42; R42 := R42[0x35577788]
	827	[843]	OP_LOADBOOL	R44 0 0 ; R44 := false
	828	[843]	CALL     	R42 3 1 ; R42(R43,R44)
	829	[846]	GETUPVAL 	R42 U7 ; R42 := U7
	830	[846]	MOVE     	R43 R4 ; R43 := R4
	831	[846]	MOVE     	R44 R5 ; R44 := R5
	832	[846]	CALL     	R42 3 1 ; R42(R43,R44)
	833	[847]	GETUPVAL 	R42 U8 ; R42 := U8
	834	[847]	MOVE     	R43 R4 ; R43 := R4
	835	[847]	MOVE     	R44 R5 ; R44 := R5
	836	[847]	CALL     	R42 3 1 ; R42(R43,R44)
	837	[848]	GETUPVAL 	R42 U9 ; R42 := U9
	838	[848]	CALL     	R42 1 1 ; R42()
	839	[850]	GETUPVAL 	R42 U10 ; R42 := U10
	840	[850]	LOADK    	R43 := 3.000000
	841	[850]	CALL     	R42 2 2 ; R42 := R42(R43)
	842	[851]	GETGLOBAL	R43 K12 ; R43 := 0x7b998233
	843	[851]	MOVE     	R44 R42 ; R44 := R42
	844	[851]	CALL     	R43 2 2 ; R43 := R43(R44)
	845	[851]	TEST     	R43 1 ; if R43 then PC := 852
	846	[851]	JMP      	852 ; PC := 852
	847	[852]	SELF     	R43 R42 K126 ; R44 := R42; R43 := R42[0x3273ba96]
	848	[852]	GETGLOBAL	R45 K127 ; R45 := 0x0469f296
	849	[852]	LOADK    	R46 K128 ; R46 := "HubIgnoreNearCull"
	850	[852]	CALL     	R45 2 0 ; R45,... := R45(R46)
	851	[852]	CALL     	R43 0 1 ; R43(R44,...)
	852	[855]	GETUPVAL 	R43 U6 ; R43 := U6
	853	[855]	GETUPVAL 	R44 U1 ; R44 := U1
	854	[855]	GETTABLE 	R44 R44 K121 ; R44 := R44["UI_MODE_IN_SPACE_SHIP"]
	855	[855]	EQ       	1 R43 R44 ; if R43 == R44 then PC := 998
	856	[855]	JMP      	998 ; PC := 998
	857	[855]	GETGLOBAL	R43 K12 ; R43 := 0x7b998233
	858	[855]	MOVE     	R44 R40 ; R44 := R40
	859	[855]	CALL     	R43 2 2 ; R43 := R43(R44)
	860	[855]	TEST     	R43 1 ; if R43 then PC := 998
	861	[855]	JMP      	998 ; PC := 998
	862	[856]	GETGLOBAL	R43 K6 ; R43 := _T
	863	[856]	GETTABLE 	R43 R43 K122 ; R43 := R43["InSimulacrum"]
	864	[856]	TEST     	R43 1 ; if R43 then PC := 870
	865	[856]	JMP      	870 ; PC := 870
	866	[856]	GETGLOBAL	R43 K6 ; R43 := _T
	867	[856]	GETTABLE 	R43 R43 K129 ; R43 := R43["InDojo"]
	868	[856]	TEST     	R43 0 ; if not R43 then PC := 998
	869	[856]	JMP      	998 ; PC := 998
	870	[857]	GETGLOBAL	R43 K12 ; R43 := 0x7b998233
	871	[857]	GETGLOBAL	R44 K2 ; R44 := 0x25d99d89
	872	[857]	CALL     	R43 2 2 ; R43 := R43(R44)
	873	[857]	TEST     	R43 1 ; if R43 then PC := 879
	874	[857]	JMP      	879 ; PC := 879
	875	[857]	GETGLOBAL	R43 K2 ; R43 := 0x25d99d89
	876	[857]	SELF     	R43 R43 K130 ; R44 := R43; R43 := R43[0x3c6b0324]
	877	[857]	CALL     	R43 2 2 ; R43 := R43(R44)
	878	[857]	JMP      	881 ; PC := 881
	879	[857]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 880
	880	[857]	OP_LOADBOOL	R43 1 0 ; R43 := true
	881	[858]	GETGLOBAL	R44 K12 ; R44 := 0x7b998233
	882	[858]	GETGLOBAL	R45 K2 ; R45 := 0x25d99d89
	883	[858]	CALL     	R44 2 2 ; R44 := R44(R45)
	884	[858]	TEST     	R44 1 ; if R44 then PC := 890
	885	[858]	JMP      	890 ; PC := 890
	886	[858]	GETGLOBAL	R44 K2 ; R44 := 0x25d99d89
	887	[858]	SELF     	R44 R44 K131 ; R45 := R44; R44 := R44[0x9f91f49d]
	888	[858]	CALL     	R44 2 2 ; R44 := R44(R45)
	889	[858]	JMP      	892 ; PC := 892
	890	[858]	OP_LOADBOOL	R44 0 1 ; R44 := false; PC := 891
	891	[858]	OP_LOADBOOL	R44 1 0 ; R44 := true
	892	[859]	TEST     	R43 1 ; if R43 then PC := 896
	893	[859]	JMP      	896 ; PC := 896
	894	[859]	TEST     	R44 0 ; if not R44 then PC := 906
	895	[859]	JMP      	906 ; PC := 906
	896	[859]	GETGLOBAL	R45 K12 ; R45 := 0x7b998233
	897	[859]	SELF     	R46 R40 K132 ; R47 := R40; R46 := R40[0xfa9e477f]
	898	[859]	CALL     	R46 2 0 ; R46,... := R46(R47)
	899	[859]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	900	[859]	TEST     	R45 1 ; if R45 then PC := 906
	901	[859]	JMP      	906 ; PC := 906
	902	[860]	SELF     	R45 R40 K132 ; R46 := R40; R45 := R40[0xfa9e477f]
	903	[860]	CALL     	R45 2 2 ; R45 := R45(R46)
	904	[860]	SELF     	R45 R45 K133 ; R46 := R45; R45 := R45[0x4094b424]
	905	[860]	CALL     	R45 2 1 ; R45(R46)
	906	[862]	LOADNIL  	R45 R45 ; R45 := nil
	907	[863]	GETGLOBAL	R46 K12 ; R46 := 0x7b998233
	908	[863]	GETGLOBAL	R47 K80 ; R47 := mArsenalConsole
	909	[863]	CALL     	R46 2 2 ; R46 := R46(R47)
	910	[863]	TEST     	R46 1 ; if R46 then PC := 922
	911	[863]	JMP      	922 ; PC := 922
	912	[864]	GETGLOBAL	R46 K76 ; R46 := 0x89326c93
	913	[864]	SELF     	R46 R46 K134 ; R47 := R46; R46 := R46[0xc7b81e8d]
	914	[864]	GETGLOBAL	R48 K127 ; R48 := 0x0469f296
	915	[864]	LOADK    	R49 K135 ; R49 := "CompanionArsenalSpot"
	916	[864]	CALL     	R48 2 2 ; R48 := R48(R49)
	917	[864]	GETGLOBAL	R49 K80 ; R49 := mArsenalConsole
	918	[864]	SELF     	R49 R49 K81 ; R50 := R49; R49 := R49[0xd1586535]
	919	[864]	CALL     	R49 2 0 ; R49,... := R49(R50)
	920	[864]	CALL     	R46 0 2 ; R46 := R46(R47,...)
	921	[864]	MOVE     	R45 R46 ; R45 := R46
	922	[866]	GETGLOBAL	R46 K12 ; R46 := 0x7b998233
	923	[866]	MOVE     	R47 R45 ; R47 := R45
	924	[866]	CALL     	R46 2 2 ; R46 := R46(R47)
	925	[866]	TEST     	R46 1 ; if R46 then PC := 998
	926	[866]	JMP      	998 ; PC := 998
	927	[867]	TEST     	R43 1 ; if R43 then PC := 931
	928	[867]	JMP      	931 ; PC := 931
	929	[867]	TEST     	R44 0 ; if not R44 then PC := 941
	930	[867]	JMP      	941 ; PC := 941
	931	[867]	GETGLOBAL	R46 K12 ; R46 := 0x7b998233
	932	[867]	SELF     	R47 R40 K132 ; R48 := R40; R47 := R40[0xfa9e477f]
	933	[867]	CALL     	R47 2 0 ; R47,... := R47(R48)
	934	[867]	CALL     	R46 0 2 ; R46 := R46(R47,...)
	935	[867]	TEST     	R46 1 ; if R46 then PC := 941
	936	[867]	JMP      	941 ; PC := 941
	937	[868]	SELF     	R46 R40 K132 ; R47 := R40; R46 := R40[0xfa9e477f]
	938	[868]	CALL     	R46 2 2 ; R46 := R46(R47)
	939	[868]	SELF     	R46 R46 K133 ; R47 := R46; R46 := R46[0x4094b424]
	940	[868]	CALL     	R46 2 1 ; R46(R47)
	941	[870]	GETGLOBAL	R46 K12 ; R46 := 0x7b998233
	942	[870]	GETGLOBAL	R47 K6 ; R47 := _T
	943	[870]	GETTABLE 	R47 R47 K136 ; R47 := R47["suitTable"]
	944	[870]	CALL     	R46 2 2 ; R46 := R46(R47)
	945	[870]	TEST     	R46 1 ; if R46 then PC := 961
	946	[870]	JMP      	961 ; PC := 961
	947	[870]	GETGLOBAL	R46 K12 ; R46 := 0x7b998233
	948	[870]	GETGLOBAL	R47 K137 ; R47 := mSelected
	949	[870]	GETTABLE 	R47 R47 K138 ; R47 := R47["Element"]
	950	[870]	CALL     	R46 2 2 ; R46 := R46(R47)
	951	[870]	TEST     	R46 1 ; if R46 then PC := 961
	952	[870]	JMP      	961 ; PC := 961
	953	[870]	GETGLOBAL	R46 K137 ; R46 := mSelected
	954	[870]	GETTABLE 	R46 R46 K138 ; R46 := R46["Element"]
	955	[870]	GETTABLE 	R46 R46 K139 ; R46 := R46["LoadOutType"]
	956	[870]	EQ       	0 R46 K64 ; if R46 ~= 1.000000 then PC := 961
	957	[870]	JMP      	961 ; PC := 961
	958	[871]	GETGLOBAL	R46 K6 ; R46 := _T
	959	[871]	GETTABLE 	R46 R46 K136 ; R46 := R46["suitTable"]
	960	[871]	SETTABLE 	R46 K140 K141 ; R46["queuedTeleport"] := 0.050000
	961	[873]	SELF     	R46 R45 K81 ; R47 := R45; R46 := R45[0xd1586535]
	962	[873]	CALL     	R46 2 2 ; R46 := R46(R47)
	963	[874]	TEST     	R43 1 ; if R43 then PC := 970
	964	[874]	JMP      	970 ; PC := 970
	965	[874]	TEST     	R44 1 ; if R44 then PC := 970
	966	[874]	JMP      	970 ; PC := 970
	967	[875]	GETTABLE 	R47 R46 K82 ; R47 := R46["y"]
	968	[875]	ADD      	R47 R47 K142 ; R47 := R47 + 1.500000
	969	[875]	SETTABLE 	R46 K82 R47 ; R46["y"] := R47
	970	[878]	GETGLOBAL	R47 K12 ; R47 := 0x7b998233
	971	[878]	GETGLOBAL	R48 K6 ; R48 := _T
	972	[878]	GETTABLE 	R48 R48 K136 ; R48 := R48["suitTable"]
	973	[878]	CALL     	R47 2 2 ; R47 := R47(R48)
	974	[878]	TEST     	R47 1 ; if R47 then PC := 993
	975	[878]	JMP      	993 ; PC := 993
	976	[879]	GETGLOBAL	R47 K12 ; R47 := 0x7b998233
	977	[879]	GETGLOBAL	R48 K6 ; R48 := _T
	978	[879]	GETTABLE 	R48 R48 K136 ; R48 := R48["suitTable"]
	979	[879]	GETTABLE 	R48 R48 K143 ; R48 := R48["positions"]
	980	[879]	CALL     	R47 2 2 ; R47 := R47(R48)
	981	[879]	TEST     	R47 0 ; if not R47 then PC := 987
	982	[879]	JMP      	987 ; PC := 987
	983	[880]	GETGLOBAL	R47 K6 ; R47 := _T
	984	[880]	GETTABLE 	R47 R47 K136 ; R47 := R47["suitTable"]
	985	[880]	NEWTABLE 	R48 0 0 ; R48 := {}
	986	[880]	SETTABLE 	R47 K143 R48 ; R47["positions"] := R48
	987	[882]	GETGLOBAL	R47 K6 ; R47 := _T
	988	[882]	GETTABLE 	R47 R47 K136 ; R47 := R47["suitTable"]
	989	[882]	GETTABLE 	R47 R47 K143 ; R47 := R47["positions"]
	990	[882]	SELF     	R48 R40 K25 ; R49 := R40; R48 := R40[0x388577d5]
	991	[882]	CALL     	R48 2 2 ; R48 := R48(R49)
	992	[882]	SETTABLE 	R47 R48 R46 ; R47[R48] := R46
	993	[884]	SELF     	R47 R40 K144 ; R48 := R40; R47 := R40[0x589ef1c1]
	994	[884]	MOVE     	R49 R46 ; R49 := R46
	995	[884]	SELF     	R50 R45 K145 ; R51 := R45; R50 := R45[0xcb3851b8]
	996	[884]	CALL     	R50 2 0 ; R50,... := R50(R51)
	997	[884]	CALL     	R47 0 1 ; R47(R48,...)
	998	[889]	GETUPVAL 	R47 U6 ; R47 := U6
	999	[889]	GETUPVAL 	R48 U1 ; R48 := U1
	1000	[889]	GETTABLE 	R48 R48 K121 ; R48 := R48["UI_MODE_IN_SPACE_SHIP"]
	1001	[889]	EQ       	0 R47 R48 ; if R47 ~= R48 then PC := 1067
	1002	[889]	JMP      	1067 ; PC := 1067
	1003	[890]	GETGLOBAL	R47 K4 ; R47 := 0xbe190284
	1004	[890]	SELF     	R47 R47 K146 ; R48 := R47; R47 := R47[0x7cf8123f]
	1005	[890]	LOADK    	R49 := 1.000000
	1006	[890]	CALL     	R47 3 2 ; R47 := R47(R48,R49)
	1007	[891]	GETGLOBAL	R48 K12 ; R48 := 0x7b998233
	1008	[891]	MOVE     	R49 R47 ; R49 := R47
	1009	[891]	CALL     	R48 2 2 ; R48 := R48(R49)
	1010	[891]	TEST     	R48 1 ; if R48 then PC := 1025
	1011	[891]	JMP      	1025 ; PC := 1025
	1012	[892]	TEST     	R2 0 ; if not R2 then PC := 1021
	1013	[892]	JMP      	1021 ; PC := 1021
	1014	[893]	SELF     	R48 R47 K147 ; R49 := R47; R48 := R47[0xd5f7912b]
	1015	[893]	GETGLOBAL	R50 K127 ; R50 := 0x0469f296
	1016	[893]	LOADK    	R51 K148 ; R51 := "RestorePetVis"
	1017	[893]	CALL     	R50 2 2 ; R50 := R50(R51)
	1018	[893]	OP_LOADBOOL	R51 0 0 ; R51 := false
	1019	[893]	CALL     	R48 4 1 ; R48(R49,R50,R51)
	1020	[893]	JMP      	1025 ; PC := 1025
	1021	[895]	GETUPVAL 	R48 U11 ; R48 := U11
	1022	[895]	GETTABLE 	R48 R48 K149 ; R48 := R48[0x705e38df]
	1023	[895]	MOVE     	R49 R47 ; R49 := R47
	1024	[895]	CALL     	R48 2 1 ; R48(R49)
	1025	[898]	GETGLOBAL	R48 K12 ; R48 := 0x7b998233
	1026	[898]	MOVE     	R49 R42 ; R49 := R42
	1027	[898]	CALL     	R48 2 2 ; R48 := R48(R49)
	1028	[898]	TEST     	R48 1 ; if R48 then PC := 1067
	1029	[898]	JMP      	1067 ; PC := 1067
	1030	[899]	GETGLOBAL	R48 K12 ; R48 := 0x7b998233
	1031	[899]	GETGLOBAL	R49 K6 ; R49 := _T
	1032	[899]	GETTABLE 	R49 R49 K136 ; R49 := R49["suitTable"]
	1033	[899]	CALL     	R48 2 2 ; R48 := R48(R49)
	1034	[899]	TEST     	R48 1 ; if R48 then PC := 1067
	1035	[899]	JMP      	1067 ; PC := 1067
	1036	[900]	GETGLOBAL	R48 K12 ; R48 := 0x7b998233
	1037	[900]	GETGLOBAL	R49 K6 ; R49 := _T
	1038	[900]	GETTABLE 	R49 R49 K136 ; R49 := R49["suitTable"]
	1039	[900]	GETTABLE 	R49 R49 K143 ; R49 := R49["positions"]
	1040	[900]	CALL     	R48 2 2 ; R48 := R48(R49)
	1041	[900]	TEST     	R48 0 ; if not R48 then PC := 1047
	1042	[900]	JMP      	1047 ; PC := 1047
	1043	[901]	GETGLOBAL	R48 K6 ; R48 := _T
	1044	[901]	GETTABLE 	R48 R48 K136 ; R48 := R48["suitTable"]
	1045	[901]	NEWTABLE 	R49 0 0 ; R49 := {}
	1046	[901]	SETTABLE 	R48 K143 R49 ; R48["positions"] := R49
	1047	[903]	GETUPVAL 	R48 U0 ; R48 := U0
	1048	[903]	GETTABLE 	R48 R48 K150 ; R48 := R48[0xa9882367]
	1049	[903]	LOADK    	R49 K151 ; R49 := "MoaSpawnControl"
	1050	[903]	CALL     	R48 2 2 ; R48 := R48(R49)
	1051	[904]	GETGLOBAL	R49 K12 ; R49 := 0x7b998233
	1052	[904]	MOVE     	R50 R48 ; R50 := R48
	1053	[904]	CALL     	R49 2 2 ; R49 := R49(R50)
	1054	[904]	TEST     	R49 1 ; if R49 then PC := 1067
	1055	[904]	JMP      	1067 ; PC := 1067
	1056	[905]	SELF     	R49 R48 K81 ; R50 := R48; R49 := R48[0xd1586535]
	1057	[905]	CALL     	R49 2 2 ; R49 := R49(R50)
	1058	[906]	GETTABLE 	R50 R49 K82 ; R50 := R49["y"]
	1059	[906]	ADD      	R50 R50 K152 ; R50 := R50 + 1.650000
	1060	[906]	SETTABLE 	R49 K82 R50 ; R49["y"] := R50
	1061	[907]	GETGLOBAL	R50 K6 ; R50 := _T
	1062	[907]	GETTABLE 	R50 R50 K136 ; R50 := R50["suitTable"]
	1063	[907]	GETTABLE 	R50 R50 K143 ; R50 := R50["positions"]
	1064	[907]	SELF     	R51 R42 K25 ; R52 := R42; R51 := R42[0x388577d5]
	1065	[907]	CALL     	R51 2 2 ; R51 := R51(R52)
	1066	[907]	SETTABLE 	R50 R51 R49 ; R50[R51] := R49
	1067	[913]	GETGLOBAL	R50 K6 ; R50 := _T
	1068	[913]	GETTABLE 	R50 R50 K153 ; R50 := R50["LoadoutSaveRequired"]
	1069	[913]	TEST     	R50 0 ; if not R50 then PC := 1078
	1070	[913]	JMP      	1078 ; PC := 1078
	1071	[913]	GETGLOBAL	R50 K6 ; R50 := _T
	1072	[913]	GETTABLE 	R50 R50 K122 ; R50 := R50["InSimulacrum"]
	1073	[913]	TEST     	R50 1 ; if R50 then PC := 1078
	1074	[913]	JMP      	1078 ; PC := 1078
	1075	[914]	GETGLOBAL	R50 K154 ; R50 := 0xe7f2b02f
	1076	[914]	SELF     	R50 R50 K155 ; R51 := R50; R50 := R50[0xcf1bf52a]
	1077	[914]	CALL     	R50 2 1 ; R50(R51)
	1078	[916]	RETURN   	R0 1 ; return 

function #19 <?:920,941> (38 instructions, 152 bytes at 0000021113302E50)
1 param, 7 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[921]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[921]	GETGLOBAL	R2 K1 ; R2 := 0xcb79539e
	3	[921]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[921]	TEST     	R1 1 ; if R1 then PC := 38
	5	[921]	JMP      	38 ; PC := 38
	6	[922]	MOVE     	R1 R0 ; R1 := R0
	7	[923]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 10
	8	[923]	JMP      	10 ; PC := 10
	9	[924]	LOADK    	R1 K3 ; R1 := "MAIN"
	10	[927]	GETUPVAL 	R2 U0 ; R2 := U0
	11	[927]	EQ       	0 R2 R1 ; if R2 ~= R1 then PC := 14
	12	[927]	JMP      	14 ; PC := 14
	13	[928]	RETURN   	R0 1 ; return 
	14	[931]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[931]	TEST     	R2 0 ; if not R2 then PC := 26
	16	[931]	JMP      	26 ; PC := 26
	17	[932]	GETGLOBAL	R2 K1 ; R2 := 0xcb79539e
	18	[932]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xa9188a47]
	19	[932]	GETGLOBAL	R4 K5 ; R4 := 0x0469f296
	20	[932]	LOADK    	R5 K6 ; R5 := "IN_SHIP_VIEW_TIME"
	21	[932]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[932]	LOADK    	R5 K7 ; R5 := "EQUIPMENT_ARSENAL_"
	23	[932]	GETUPVAL 	R6 U0 ; R6 := U0
	24	[932]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	25	[932]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	26	[935]	SETUPVAL 	R1 U0 ; U0 := R1
	27	[937]	TEST     	R1 0 ; if not R1 then PC := 38
	28	[937]	JMP      	38 ; PC := 38
	29	[938]	GETGLOBAL	R2 K1 ; R2 := 0xcb79539e
	30	[938]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xa9136b2f]
	31	[938]	GETGLOBAL	R4 K5 ; R4 := 0x0469f296
	32	[938]	LOADK    	R5 K6 ; R5 := "IN_SHIP_VIEW_TIME"
	33	[938]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[938]	LOADK    	R5 K7 ; R5 := "EQUIPMENT_ARSENAL_"
	35	[938]	MOVE     	R6 R1 ; R6 := R1
	36	[938]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	37	[938]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	38	[941]	RETURN   	R0 1 ; return 

function #20 <?:943,949> (13 instructions, 52 bytes at 0000021113303120)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[944]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[944]	GETGLOBAL	R1 K1 ; R1 := mPurchasePopup
	3	[944]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[944]	TEST     	R0 1 ; if R0 then PC := 11
	5	[944]	JMP      	11 ; PC := 11
	6	[945]	GETGLOBAL	R0 K1 ; R0 := mPurchasePopup
	7	[945]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x32302b4a]
	8	[945]	CALL     	R0 2 1 ; R0(R1)
	9	[946]	LOADNIL  	R0 R0 ; R0 := nil
	10	[946]	SETGLOBALHASH	R0 K1 ; mPurchasePopup := R0
	11	[948]	OP_LOADBOOL	R0 0 0 ; R0 := false
	12	[948]	SETGLOBALHASH	R0 K3 ; mInputBlocked := R0
	13	[949]	RETURN   	R0 1 ; return 

function #21 <?:951,970> (27 instructions, 108 bytes at 00000211133032A0)
3 params, 7 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[952]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[952]	CALL     	R3 1 1 ; R3()
	3	[953]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 6
	4	[953]	JMP      	6 ; PC := 6
	5	[954]	LOADK    	R2 K1 ; R2 := "ConfirmPopup"
	6	[957]	GETGLOBAL	R3 K2 ; R3 := 0x34291f5c
	7	[957]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xe27b35bb]
	8	[957]	CALL     	R3 1 2 ; R3 := R3()
	9	[958]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 13
	10	[958]	JMP      	13 ; PC := 13
	11	[959]	SETTABLE 	R3 K5 K6 ; R3["dialogType"] := 4.000000
	12	[959]	JMP      	18 ; PC := 18
	13	[960]	EQ       	0 R1 K7 ; if R1 ~= 1.000000 then PC := 17
	14	[960]	JMP      	17 ; PC := 17
	15	[961]	SETTABLE 	R3 K5 K4 ; R3["dialogType"] := 0.000000
	16	[961]	JMP      	18 ; PC := 18
	17	[963]	SETTABLE 	R3 K5 K7 ; R3["dialogType"] := 1.000000
	18	[966]	SETTABLE 	R3 K8 R0 ; R3["locString"] := R0
	19	[967]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xe6ccc5b9]
	20	[967]	MOVE     	R6 R2 ; R6 := R2
	21	[967]	CALL     	R4 3 1 ; R4(R5,R6)
	22	[969]	GETUPVAL 	R4 U1 ; R4 := U1
	23	[969]	GETTABLE 	R4 R4 K11 ; R4 := R4[0xe99b84e7]
	24	[969]	MOVE     	R5 R3 ; R5 := R3
	25	[969]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[969]	SETGLOBALHASH	R4 K10 ; mPurchasePopup := R4
	27	[970]	RETURN   	R0 1 ; return 

function #22 <?:972,994> (35 instructions, 140 bytes at 0000021113303500)
0 params, 4 slots, 0 upvalues, 0 locals, 13 constants, 1 function
	1	[973]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[973]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[973]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[973]	TEST     	R0 1 ; if R0 then PC := 33
	5	[973]	JMP      	33 ; PC := 33
	6	[974]	GETGLOBAL	R0 K2 ; R0 := _T
	7	[974]	GETTABLE 	R0 R0 K3 ; R0 := R0["BackgroundMovie"]
	8	[974]	EQ       	1 R0 K4 ; if R0 == nil then PC := 16
	9	[974]	JMP      	16 ; PC := 16
	10	[975]	GETGLOBAL	R0 K2 ; R0 := _T
	11	[975]	GETTABLE 	R0 R0 K3 ; R0 := R0["BackgroundMovie"]
	12	[975]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xe4162eed]
	13	[975]	LOADK    	R2 K6 ; R2 := "ShowPurchaseCelebration"
	14	[975]	LOADK    	R3 K7 ; R3 := ""
	15	[975]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	16	[978]	GETGLOBAL	R0 K2 ; R0 := _T
	17	[978]	GETTABLE 	R0 R0 K8 ; R0 := R0["ForegroundMovie"]
	18	[978]	TEST     	R0 0 ; if not R0 then PC := 26
	19	[978]	JMP      	26 ; PC := 26
	20	[979]	GETGLOBAL	R0 K2 ; R0 := _T
	21	[979]	GETTABLE 	R0 R0 K8 ; R0 := R0["ForegroundMovie"]
	22	[979]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xe4162eed]
	23	[979]	LOADK    	R2 K9 ; R2 := "PopulatePlayerInfo"
	24	[979]	LOADK    	R3 K7 ; R3 := ""
	25	[979]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	26	[981]	GETGLOBAL	R0 K10 ; R0 := mLists
	27	[981]	GETTABLE 	R0 R0 K11 ; R0 := R0["mLoadOutList"]
	28	[981]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x71e9ac81]
	29	[988]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	30	[981]	CALL     	R0 3 1 ; R0(R1,R2)
	31	[990]	OP_LOADBOOL	R0 1 0 ; R0 := true
	32	[990]	RETURN   	R0 2 ; return R0 
	33	[993]	OP_LOADBOOL	R0 0 0 ; R0 := false
	34	[993]	RETURN   	R0 2 ; return R0 
	35	[994]	RETURN   	R0 1 ; return 

function #23 <?:996,1008> (40 instructions, 160 bytes at 0000021113303A20)
0 params, 11 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[997]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[998]	GETGLOBAL	R1 K0 ; R1 := mButtons
	3	[998]	LEN      	R1 R1 ; R1 := # R1
	4	[998]	LOADK    	R2 := 1.000000
	5	[998]	LOADK    	R3 := -1.000000
	6	[998]	FORPREP  	R1 27 ; R1 -= R3; PC := 27
	7	[999]	GETGLOBAL	R5 K0 ; R5 := mButtons
	8	[999]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	9	[1000]	GETTABLE 	R6 R5 K1 ; R6 := R5["mVisible"]
	10	[1000]	TEST     	R6 0 ; if not R6 then PC := 27
	11	[1000]	JMP      	27 ; PC := 27
	12	[1001]	GETGLOBAL	R6 K2 ; R6 := 0x33bdd652
	13	[1001]	GETTABLE 	R6 R6 K3 ; R6 := R6[0x23d5322f]
	14	[1001]	MOVE     	R7 R0 ; R7 := R0
	15	[1001]	NEWTABLE 	R8 0 5 ; R8 := {}
	16	[1001]	GETTABLE 	R9 R5 K5 ; R9 := R5["mLabel"]
	17	[1001]	SETTABLE 	R8 K4 R9 ; R8["Label"] := R9
	18	[1001]	GETTABLE 	R9 R5 K7 ; R9 := R5["mCallback"]
	19	[1001]	SETTABLE 	R8 K6 R9 ; R8["CallBack"] := R9
	20	[1001]	GETTABLE 	R9 R5 K9 ; R9 := R5["mCallout"]
	21	[1001]	SETTABLE 	R8 K8 R9 ; R8["CallOut"] := R9
	22	[1001]	GETTABLE 	R9 R5 K10 ; R9 := R5["Tips"]
	23	[1001]	SETTABLE 	R8 K10 R9 ; R8["Tips"] := R9
	24	[1001]	GETTABLE 	R9 R5 K11 ; R9 := R5["Padding"]
	25	[1001]	SETTABLE 	R8 K11 R9 ; R8["Padding"] := R9
	26	[1001]	CALL     	R6 3 1 ; R6(R7,R8)
	27	[998]	FORLOOP  	R1 7 ; R1 += R3; if R1 <= R2 then begin PC := 7; R4 := R1 end
	28	[1005]	GETGLOBAL	R6 K12 ; R6 := _T
	29	[1005]	GETTABLE 	R6 R6 K13 ; R6 := R6["SetButtons"]
	30	[1005]	TEST     	R6 0 ; if not R6 then PC := 40
	31	[1005]	JMP      	40 ; PC := 40
	32	[1006]	GETGLOBAL	R6 K12 ; R6 := _T
	33	[1006]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x1c5b546f]
	34	[1006]	GETGLOBAL	R7 K15 ; R7 := 0xae91e43b
	35	[1006]	MOVE     	R8 R0 ; R8 := R0
	36	[1006]	GETGLOBAL	R9 K16 ; R9 := 0xcd0165a3
	37	[1006]	LOADK    	R10 := 1.000000
	38	[1006]	CALL     	R9 2 0 ; R9,... := R9(R10)
	39	[1006]	CALL     	R6 0 1 ; R6(R7,...)
	40	[1008]	RETURN   	R0 1 ; return 

function #24 <?:1011,1019> (43 instructions, 172 bytes at 0000021113303D30)
1 param, 3 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[1012]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1012]	MOVE     	R2 R0 ; R2 := R0
	3	[1012]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1012]	TEST     	R1 1 ; if R1 then PC := 17
	5	[1012]	JMP      	17 ; PC := 17
	6	[1012]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[1012]	GETGLOBAL	R2 K1 ; R2 := mSelected
	8	[1012]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	9	[1012]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1012]	TEST     	R1 1 ; if R1 then PC := 17
	11	[1012]	JMP      	17 ; PC := 17
	12	[1012]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	13	[1012]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	14	[1012]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[1012]	TEST     	R1 0 ; if not R1 then PC := 19
	16	[1012]	JMP      	19 ; PC := 19
	17	[1013]	OP_LOADBOOL	R1 0 0 ; R1 := false
	18	[1013]	RETURN   	R1 2 ; return R1 
	19	[1017]	GETGLOBAL	R1 K1 ; R1 := mSelected
	20	[1017]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	21	[1017]	GETTABLE 	R1 R1 K4 ; R1 := R1["LoadOutType"]
	22	[1017]	EQ       	0 R1 K6 ; if R1 ~= 1.000000 then PC := 33
	23	[1017]	JMP      	33 ; PC := 33
	24	[1017]	GETGLOBAL	R1 K1 ; R1 := mSelected
	25	[1017]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	26	[1017]	GETTABLE 	R1 R1 K7 ; R1 := R1["LoadOutId"]
	27	[1017]	EQ       	0 R1 K8 ; if R1 ~= 0.000000 then PC := 33
	28	[1017]	JMP      	33 ; PC := 33
	29	[1017]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	30	[1017]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x3c6b0324]
	31	[1017]	CALL     	R1 2 2 ; R1 := R1(R2)
	32	[1017]	JMP      	35 ; PC := 35
	33	[1017]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 34
	34	[1017]	OP_LOADBOOL	R1 1 0 ; R1 := true
	35	[1018]	TESTSET  	R2 R1 0 ; if not R1 then PC := 42 else R2 := R1 
	36	[1018]	JMP      	42 ; PC := 42
	37	[1018]	GETTABLE 	R2 R0 K10 ; R2 := R0["Slot"]
	38	[1018]	EQ       	1 R2 K11 ; if R2 == 6.000000 then PC := 41
	39	[1018]	JMP      	41 ; PC := 41
	40	[1018]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 41
	41	[1018]	OP_LOADBOOL	R2 1 0 ; R2 := true
	42	[1018]	RETURN   	R2 2 ; return R2 
	43	[1019]	RETURN   	R0 1 ; return 

function #25 <?:1021,1027> (26 instructions, 104 bytes at 0000021113304010)
1 param, 6 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[1022]	TEST     	R0 0 ; if not R0 then PC := 20
	2	[1022]	JMP      	20 ; PC := 20
	3	[1022]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	4	[1022]	GETGLOBAL	R2 K1 ; R2 := mSelected
	5	[1022]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	6	[1022]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1022]	TEST     	R1 1 ; if R1 then PC := 20
	8	[1022]	JMP      	20 ; PC := 20
	9	[1022]	GETGLOBAL	R1 K1 ; R1 := mSelected
	10	[1022]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	11	[1022]	GETTABLE 	R1 R1 K3 ; R1 := R1["LoadOutType"]
	12	[1022]	EQ       	1 R1 K5 ; if R1 == 4.000000 then PC := 19
	13	[1022]	JMP      	19 ; PC := 19
	14	[1022]	GETGLOBAL	R1 K1 ; R1 := mSelected
	15	[1022]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	16	[1022]	GETTABLE 	R1 R1 K3 ; R1 := R1["LoadOutType"]
	17	[1022]	EQ       	0 R1 K6 ; if R1 ~= 6.000000 then PC := 20
	18	[1022]	JMP      	20 ; PC := 20
	19	[1023]	RETURN   	R0 1 ; return 
	20	[1026]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	21	[1026]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xaade900e]
	22	[1026]	LOADK    	R3 K9 ; R3 := "EquippedTitle"
	23	[1026]	LOADK    	R4 := 11.000000
	24	[1026]	MOVE     	R5 R0 ; R5 := R0
	25	[1026]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	26	[1027]	RETURN   	R0 1 ; return 

function #26 <?:1029,1039> (20 instructions, 80 bytes at 0000021113304290)
1 param, 4 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1030]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1030]	MOVE     	R2 R0 ; R2 := R0
	3	[1030]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1030]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1030]	JMP      	8 ; PC := 8
	6	[1031]	LOADNIL  	R1 R1 ; R1 := nil
	7	[1031]	RETURN   	R1 2 ; return R1 
	8	[1034]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	9	[1034]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[1034]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1034]	TEST     	R1 0 ; if not R1 then PC := 15
	12	[1034]	JMP      	15 ; PC := 15
	13	[1035]	LOADNIL  	R1 R1 ; R1 := nil
	14	[1035]	RETURN   	R1 2 ; return R1 
	15	[1038]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[1038]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x105074fb]
	17	[1038]	MOVE     	R3 R0 ; R3 := R0
	18	[1038]	TAILCALL 	R1 3 0 ; R1,... := R1(R2,R3)
	19	[1038]	RETURN   	R1 0 ; return R1,... 
	20	[1039]	RETURN   	R0 1 ; return 

function #27 <?:1041,1098> (123 instructions, 492 bytes at 0000021113304410)
3 params, 21 slots, 1 upvalue, 0 locals, 22 constants, 1 function
	1	[1042]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1042]	GETGLOBAL	R4 K1 ; R4 := mInventory
	3	[1042]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1042]	TEST     	R3 0 ; if not R3 then PC := 8
	5	[1042]	JMP      	8 ; PC := 8
	6	[1043]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	7	[1043]	RETURN   	R3 3 ; return R3, R4 
	8	[1046]	GETTABLE 	R3 R0 K2 ; R3 := R0["EquippedItem"]
	9	[1046]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x68d708a7]
	10	[1046]	GETTABLE 	R5 R0 K4 ; R5 := R0["mCustSlot"]
	11	[1046]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	12	[1047]	GETTABLE 	R4 R0 K2 ; R4 := R0["EquippedItem"]
	13	[1047]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xe04650ad]
	14	[1047]	GETTABLE 	R6 R0 K4 ; R6 := R0["mCustSlot"]
	15	[1047]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	16	[1049]	TEST     	R1 0 ; if not R1 then PC := 34
	17	[1049]	JMP      	34 ; PC := 34
	18	[1058]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	19	[1058]	MOVE     	R0 R3 ; R0 := R3
	20	[1060]	EQ       	1 R2 K6 ; if R2 == nil then PC := 26
	21	[1060]	JMP      	26 ; PC := 26
	22	[1061]	MOVE     	R6 R5 ; R6 := R5
	23	[1061]	MOVE     	R7 R2 ; R7 := R2
	24	[1061]	CALL     	R6 2 1 ; R6(R7)
	25	[1061]	JMP      	34 ; PC := 34
	26	[1064]	LOADK    	R6 := 0.000000
	27	[1064]	LOADK    	R7 := 20.000000
	28	[1064]	LOADK    	R8 := 1.000000
	29	[1064]	FORPREP  	R6 33 ; R6 -= R8; PC := 33
	30	[1065]	MOVE     	R10 R5 ; R10 := R5
	31	[1065]	MOVE     	R11 R9 ; R11 := R9
	32	[1065]	CALL     	R10 2 1 ; R10(R11)
	33	[1064]	FORLOOP  	R6 30 ; R6 += R8; if R6 <= R7 then begin PC := 30; R9 := R6 end
	34	[1070]	GETTABLE 	R10 R0 K8 ; R10 := R0["LoadOutId"]
	35	[1070]	GETGLOBAL	R11 K7 ; R11 := 0x6c97a788
	36	[1070]	GETTABLE 	R11 R11 K9 ; R11 := R11["NUM_NORMAL_LOADOUT_SLOTS"]
	37	[1070]	LE       	0 R11 R10 ; if R11 > R10 then PC := 120
	38	[1070]	JMP      	120 ; PC := 120
	39	[1071]	GETGLOBAL	R10 K10 ; R10 := mLists
	40	[1071]	GETTABLE 	R10 R10 K11 ; R10 := R10["mLoadOutList"]
	41	[1071]	GETTABLE 	R10 R10 K12 ; R10 := R10["SuitSlotId"]
	42	[1071]	EQ       	1 R10 K6 ; if R10 == nil then PC := 120
	43	[1071]	JMP      	120 ; PC := 120
	44	[1072]	GETGLOBAL	R10 K10 ; R10 := mLists
	45	[1072]	GETTABLE 	R10 R10 K11 ; R10 := R10["mLoadOutList"]
	46	[1072]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0xca30dfb6]
	47	[1072]	GETGLOBAL	R12 K10 ; R12 := mLists
	48	[1072]	GETTABLE 	R12 R12 K11 ; R12 := R12["mLoadOutList"]
	49	[1072]	GETTABLE 	R12 R12 K12 ; R12 := R12["SuitSlotId"]
	50	[1072]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	51	[1073]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	52	[1073]	MOVE     	R12 R10 ; R12 := R10
	53	[1073]	CALL     	R11 2 2 ; R11 := R11(R12)
	54	[1073]	TEST     	R11 1 ; if R11 then PC := 120
	55	[1073]	JMP      	120 ; PC := 120
	56	[1074]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	57	[1074]	GETTABLE 	R12 R10 K14 ; R12 := R10["Customization"]
	58	[1074]	CALL     	R11 2 2 ; R11 := R11(R12)
	59	[1074]	TEST     	R11 0 ; if not R11 then PC := 68
	60	[1074]	JMP      	68 ; PC := 68
	61	[1075]	GETUPVAL 	R11 U0 ; R11 := U0
	62	[1075]	MOVE     	R12 R10 ; R12 := R10
	63	[1075]	MOVE     	R13 R1 ; R13 := R1
	64	[1075]	MOVE     	R14 R2 ; R14 := R2
	65	[1075]	CALL     	R11 4 3 ; R11,R12 := R11(R12,R13,R14)
	66	[1075]	SETTABLE 	R10 K15 R12 ; R10["BackupCustomization"] := R12
	67	[1075]	SETTABLE 	R10 K14 R11 ; R10["Customization"] := R11
	68	[1078]	GETTABLE 	R11 R10 K14 ; R11 := R10["Customization"]
	69	[1078]	SELF     	R11 R11 K16 ; R12 := R11; R11 := R11[0x8e62760a]
	70	[1078]	LOADK    	R13 := 0.000000
	71	[1078]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	72	[1079]	SELF     	R12 R11 K17 ; R13 := R11; R12 := R11[0x697019d0]
	73	[1079]	LOADK    	R14 := 6.000000
	74	[1079]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	75	[1079]	TEST     	R12 0 ; if not R12 then PC := 94
	76	[1079]	JMP      	94 ; PC := 94
	77	[1080]	SELF     	R12 R3 K16 ; R13 := R3; R12 := R3[0x8e62760a]
	78	[1080]	LOADK    	R14 := 0.000000
	79	[1080]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	80	[1081]	SELF     	R13 R12 K18 ; R14 := R12; R13 := R12[0xa3927fe9]
	81	[1081]	LOADK    	R15 := 6.000000
	82	[1081]	SELF     	R16 R11 K19 ; R17 := R11; R16 := R11[0x5d10207d]
	83	[1081]	LOADK    	R18 := 6.000000
	84	[1081]	CALL     	R16 3 0 ; R16,... := R16(R17,R18)
	85	[1081]	CALL     	R13 0 1 ; R13(R14,...)
	86	[1082]	SELF     	R13 R12 K20 ; R14 := R12; R13 := R12[0xfc5d7158]
	87	[1082]	LOADK    	R15 := 6.000000
	88	[1082]	OP_LOADBOOL	R16 1 0 ; R16 := true
	89	[1082]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	90	[1083]	SELF     	R13 R3 K21 ; R14 := R3; R13 := R3[0x199edf6e]
	91	[1083]	LOADK    	R15 := 0.000000
	92	[1083]	MOVE     	R16 R12 ; R16 := R12
	93	[1083]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	94	[1086]	GETTABLE 	R13 R10 K15 ; R13 := R10["BackupCustomization"]
	95	[1086]	SELF     	R13 R13 K16 ; R14 := R13; R13 := R13[0x8e62760a]
	96	[1086]	LOADK    	R15 := 0.000000
	97	[1086]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	98	[1087]	SELF     	R14 R13 K17 ; R15 := R13; R14 := R13[0x697019d0]
	99	[1087]	LOADK    	R16 := 6.000000
	100	[1087]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	101	[1087]	TEST     	R14 0 ; if not R14 then PC := 120
	102	[1087]	JMP      	120 ; PC := 120
	103	[1088]	SELF     	R14 R4 K16 ; R15 := R4; R14 := R4[0x8e62760a]
	104	[1088]	LOADK    	R16 := 0.000000
	105	[1088]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	106	[1089]	SELF     	R15 R14 K18 ; R16 := R14; R15 := R14[0xa3927fe9]
	107	[1089]	LOADK    	R17 := 6.000000
	108	[1089]	SELF     	R18 R13 K19 ; R19 := R13; R18 := R13[0x5d10207d]
	109	[1089]	LOADK    	R20 := 6.000000
	110	[1089]	CALL     	R18 3 0 ; R18,... := R18(R19,R20)
	111	[1089]	CALL     	R15 0 1 ; R15(R16,...)
	112	[1090]	SELF     	R15 R14 K20 ; R16 := R14; R15 := R14[0xfc5d7158]
	113	[1090]	LOADK    	R17 := 6.000000
	114	[1090]	OP_LOADBOOL	R18 1 0 ; R18 := true
	115	[1090]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	116	[1091]	SELF     	R15 R4 K21 ; R16 := R4; R15 := R4[0x199edf6e]
	117	[1091]	LOADK    	R17 := 0.000000
	118	[1091]	MOVE     	R18 R14 ; R18 := R14
	119	[1091]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	120	[1097]	MOVE     	R15 R3 ; R15 := R3
	121	[1097]	MOVE     	R16 R4 ; R16 := R4
	122	[1097]	RETURN   	R15 3 ; return R15, R16 
	123	[1098]	RETURN   	R0 1 ; return 

function #28 <?:1100,1107> (40 instructions, 160 bytes at 000002112B46AE50)
1 param, 12 slots, 1 upvalue, 0 locals, 6 constants, 1 function
	1	[1101]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1101]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x06d055f9]
	3	[1101]	MOVE     	R2 R0 ; R2 := R0
	4	[1101]	LOADK    	R3 := 100.000000
	5	[1101]	LOADK    	R4 := 60.000000
	6	[1101]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	7	[1102]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[1102]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x06d055f9]
	9	[1102]	MOVE     	R3 R0 ; R3 := R0
	10	[1102]	LOADK    	R4 := 100.000000
	11	[1102]	LOADK    	R5 := 0.000000
	12	[1102]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	13	[1103]	TEST     	R0 0 ; if not R0 then PC := 21
	14	[1103]	JMP      	21 ; PC := 21
	15	[1104]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	16	[1104]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0xaade900e]
	17	[1104]	LOADK    	R5 K3 ; R5 := "GearSetup"
	18	[1104]	LOADK    	R6 := 11.000000
	19	[1104]	OP_LOADBOOL	R7 1 0 ; R7 := true
	20	[1104]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	21	[1106]	GETGLOBAL	R3 K4 ; R3 := 0x25312c9b
	22	[1106]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	23	[1106]	LOADK    	R5 K3 ; R5 := "GearSetup"
	24	[1106]	LOADK    	R6 := 0.000000
	25	[1106]	NEWTABLE 	R7 3 0 ; R7 := {}
	26	[1106]	LOADK    	R8 := 5.000000
	27	[1106]	LOADK    	R9 := 6.000000
	28	[1106]	LOADK    	R10 := 10.000000
	29	[1106]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	30	[1106]	NEWTABLE 	R8 3 0 ; R8 := {}
	31	[1106]	MOVE     	R9 R1 ; R9 := R1
	32	[1106]	MOVE     	R10 R1 ; R10 := R1
	33	[1106]	MOVE     	R11 R2 ; R11 := R2
	34	[1106]	SETLIST  	R8 3 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 3
	35	[1106]	LOADK    	R9 := 0.250000
	36	[1106]	LOADK    	R10 := 0.000000
	37	[1106]	CLOSURE  	R11 0 ; R11 := closure(Function #1)
	38	[1106]	MOVE     	R0 R0 ; R0 := R0
	39	[1106]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	40	[1107]	RETURN   	R0 1 ; return 

function #29 <?:1109,1112> (45 instructions, 180 bytes at 000002112B46B240)
0 params, 3 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[1110]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1110]	GETGLOBAL	R1 K1 ; R1 := mSelected
	3	[1110]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	4	[1110]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1110]	TEST     	R0 1 ; if R0 then PC := 42
	6	[1110]	JMP      	42 ; PC := 42
	7	[1110]	GETGLOBAL	R0 K1 ; R0 := mSelected
	8	[1110]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	9	[1110]	GETTABLE 	R0 R0 K3 ; R0 := R0["LoadOutType"]
	10	[1110]	EQ       	0 R0 K5 ; if R0 ~= 0.000000 then PC := 42
	11	[1110]	JMP      	42 ; PC := 42
	12	[1110]	GETGLOBAL	R0 K1 ; R0 := mSelected
	13	[1110]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	14	[1110]	GETTABLE 	R0 R0 K6 ; R0 := R0["LoadOutId"]
	15	[1110]	EQ       	0 R0 K5 ; if R0 ~= 0.000000 then PC := 42
	16	[1110]	JMP      	42 ; PC := 42
	17	[1111]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	18	[1111]	GETGLOBAL	R1 K7 ; R1 := mSuitType
	19	[1111]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[1111]	TEST     	R0 1 ; if R0 then PC := 42
	21	[1111]	JMP      	42 ; PC := 42
	22	[1111]	GETGLOBAL	R0 K7 ; R0 := mSuitType
	23	[1111]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xf2deaf69]
	24	[1111]	GETGLOBAL	R2 K9 ; R2 := 0x94f36ee7
	25	[1111]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	26	[1111]	TEST     	R0 0 ; if not R0 then PC := 44
	27	[1111]	JMP      	44 ; PC := 44
	28	[1111]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	29	[1111]	GETGLOBAL	R1 K10 ; R1 := 0xe7f2b02f
	30	[1111]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x565be9ee]
	31	[1111]	CALL     	R1 2 0 ; R1,... := R1(R2)
	32	[1111]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	33	[1111]	TEST     	R0 1 ; if R0 then PC := 44
	34	[1111]	JMP      	44 ; PC := 44
	35	[1111]	GETGLOBAL	R0 K10 ; R0 := 0xe7f2b02f
	36	[1111]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0x565be9ee]
	37	[1111]	CALL     	R0 2 2 ; R0 := R0(R1)
	38	[1111]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x3b013073]
	39	[1111]	CALL     	R0 2 2 ; R0 := R0(R1)
	40	[1111]	LE       	1 R0 K13 ; if R0 <= 1.000000 then PC := 43
	41	[1111]	JMP      	43 ; PC := 43
	42	[1111]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 43
	43	[1111]	OP_LOADBOOL	R0 1 0 ; R0 := true
	44	[1111]	RETURN   	R0 2 ; return R0 
	45	[1112]	RETURN   	R0 1 ; return 

function #30 <?:1114,1117> (51 instructions, 204 bytes at 000002112B46B560)
0 params, 3 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[1115]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1115]	GETGLOBAL	R1 K1 ; R1 := mSelected
	3	[1115]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	4	[1115]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1115]	TEST     	R0 1 ; if R0 then PC := 48
	6	[1115]	JMP      	48 ; PC := 48
	7	[1115]	GETGLOBAL	R0 K1 ; R0 := mSelected
	8	[1115]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	9	[1115]	GETTABLE 	R0 R0 K3 ; R0 := R0["LoadOutType"]
	10	[1115]	EQ       	0 R0 K5 ; if R0 ~= 1.000000 then PC := 48
	11	[1115]	JMP      	48 ; PC := 48
	12	[1115]	GETGLOBAL	R0 K1 ; R0 := mSelected
	13	[1115]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	14	[1115]	GETTABLE 	R0 R0 K6 ; R0 := R0["LoadOutId"]
	15	[1115]	EQ       	0 R0 K7 ; if R0 ~= 0.000000 then PC := 48
	16	[1115]	JMP      	48 ; PC := 48
	17	[1116]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	18	[1116]	GETGLOBAL	R1 K8 ; R1 := mSentinelType
	19	[1116]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[1116]	TEST     	R0 1 ; if R0 then PC := 48
	21	[1116]	JMP      	48 ; PC := 48
	22	[1116]	GETGLOBAL	R0 K8 ; R0 := mSentinelType
	23	[1116]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xf2deaf69]
	24	[1116]	GETGLOBAL	R2 K10 ; R2 := 0xbdb864c7
	25	[1116]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	26	[1116]	TEST     	R0 1 ; if R0 then PC := 34
	27	[1116]	JMP      	34 ; PC := 34
	28	[1116]	GETGLOBAL	R0 K8 ; R0 := mSentinelType
	29	[1116]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xf2deaf69]
	30	[1116]	GETGLOBAL	R2 K11 ; R2 := 0xb71841e2
	31	[1116]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	32	[1116]	TEST     	R0 0 ; if not R0 then PC := 50
	33	[1116]	JMP      	50 ; PC := 50
	34	[1116]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	35	[1116]	GETGLOBAL	R1 K12 ; R1 := 0xe7f2b02f
	36	[1116]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x565be9ee]
	37	[1116]	CALL     	R1 2 0 ; R1,... := R1(R2)
	38	[1116]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	39	[1116]	TEST     	R0 1 ; if R0 then PC := 50
	40	[1116]	JMP      	50 ; PC := 50
	41	[1116]	GETGLOBAL	R0 K12 ; R0 := 0xe7f2b02f
	42	[1116]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x565be9ee]
	43	[1116]	CALL     	R0 2 2 ; R0 := R0(R1)
	44	[1116]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x3b013073]
	45	[1116]	CALL     	R0 2 2 ; R0 := R0(R1)
	46	[1116]	LE       	1 R0 K5 ; if R0 <= 1.000000 then PC := 49
	47	[1116]	JMP      	49 ; PC := 49
	48	[1116]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 49
	49	[1116]	OP_LOADBOOL	R0 1 0 ; R0 := true
	50	[1116]	RETURN   	R0 2 ; return R0 
	51	[1117]	RETURN   	R0 1 ; return 

function #31 <?:1119,1121> (11 instructions, 44 bytes at 000002112B46B8B0)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1120]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[1120]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf2deaf69]
	3	[1120]	GETGLOBAL	R2 K2 ; R2 := gLotusAttractModeGameRulesType
	4	[1120]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[1120]	TEST     	R0 0 ; if not R0 then PC := 10
	6	[1120]	JMP      	10 ; PC := 10
	7	[1120]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	8	[1120]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x23ddc82a]
	9	[1120]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[1120]	RETURN   	R0 2 ; return R0 
	11	[1121]	RETURN   	R0 1 ; return 

function #32 <?:1123,1259> (458 instructions, 1832 bytes at 000002112B46BA10)
1 param, 28 slots, 5 upvalues, 0 locals, 62 constants, 0 functions
	1	[1124]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	2	[1124]	GETTABLE 	R1 R1 K1 ; R1 := R1["orgPosition"]
	3	[1125]	GETGLOBAL	R2 K2 ; R2 := 0x00046924
	4	[1125]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	5	[1125]	GETTABLE 	R3 R3 K3 ; R3 := R3["orgRotation"]
	6	[1125]	GETTABLE 	R3 R3 K4 ; R3 := R3["heading"]
	7	[1125]	GETGLOBAL	R4 K0 ; R4 := mCameraTable
	8	[1125]	GETTABLE 	R4 R4 K3 ; R4 := R4["orgRotation"]
	9	[1125]	GETTABLE 	R4 R4 K5 ; R4 := R4["pitch"]
	10	[1125]	GETGLOBAL	R5 K0 ; R5 := mCameraTable
	11	[1125]	GETTABLE 	R5 R5 K3 ; R5 := R5["orgRotation"]
	12	[1125]	GETTABLE 	R5 R5 K6 ; R5 := R5["bank"]
	13	[1125]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	14	[1126]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	15	[1126]	GETTABLE 	R3 R3 K7 ; R3 := R3["orgFOV"]
	16	[1128]	GETUPVAL 	R4 U0 ; R4 := U0
	17	[1128]	CALL     	R4 1 2 ; R4 := R4()
	18	[1128]	TEST     	R4 1 ; if R4 then PC := 195
	19	[1128]	JMP      	195 ; PC := 195
	20	[1128]	GETUPVAL 	R4 U1 ; R4 := U1
	21	[1128]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x7a04c21d]
	22	[1128]	CALL     	R4 1 2 ; R4 := R4()
	23	[1128]	TEST     	R4 1 ; if R4 then PC := 195
	24	[1128]	JMP      	195 ; PC := 195
	25	[1129]	GETGLOBAL	R4 K9 ; R4 := _T
	26	[1129]	GETTABLE 	R4 R4 K10 ; R4 := R4["MenuSentinel"]
	27	[1130]	GETGLOBAL	R5 K11 ; R5 := 0x7b998233
	28	[1130]	MOVE     	R6 R4 ; R6 := R4
	29	[1130]	CALL     	R5 2 2 ; R5 := R5(R6)
	30	[1130]	TEST     	R5 0 ; if not R5 then PC := 60
	31	[1130]	JMP      	60 ; PC := 60
	32	[1130]	GETGLOBAL	R5 K9 ; R5 := _T
	33	[1130]	GETTABLE 	R5 R5 K12 ; R5 := R5["InSimulacrum"]
	34	[1130]	TEST     	R5 1 ; if R5 then PC := 60
	35	[1130]	JMP      	60 ; PC := 60
	36	[1131]	GETGLOBAL	R5 K13 ; R5 := 0x89326c93
	37	[1131]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xfb64e76c]
	38	[1131]	CALL     	R5 2 2 ; R5 := R5(R6)
	39	[1132]	GETGLOBAL	R6 K11 ; R6 := 0x7b998233
	40	[1132]	MOVE     	R7 R5 ; R7 := R5
	41	[1132]	CALL     	R6 2 2 ; R6 := R6(R7)
	42	[1132]	TEST     	R6 1 ; if R6 then PC := 60
	43	[1132]	JMP      	60 ; PC := 60
	44	[1133]	SELF     	R6 R5 K15 ; R7 := R5; R6 := R5[0xa534c3ac]
	45	[1133]	CALL     	R6 2 2 ; R6 := R6(R7)
	46	[1134]	GETGLOBAL	R7 K11 ; R7 := 0x7b998233
	47	[1134]	MOVE     	R8 R6 ; R8 := R6
	48	[1134]	CALL     	R7 2 2 ; R7 := R7(R8)
	49	[1134]	TEST     	R7 1 ; if R7 then PC := 60
	50	[1134]	JMP      	60 ; PC := 60
	51	[1135]	GETGLOBAL	R7 K9 ; R7 := _T
	52	[1135]	SELF     	R8 R6 K16 ; R9 := R6; R8 := R6[0xde321e6f]
	53	[1135]	CALL     	R8 2 2 ; R8 := R8(R9)
	54	[1135]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0x2676deee]
	55	[1135]	CALL     	R8 2 2 ; R8 := R8(R9)
	56	[1135]	SETTABLE 	R7 K10 R8 ; R7["MenuSentinel"] := R8
	57	[1136]	GETGLOBAL	R7 K9 ; R7 := _T
	58	[1136]	GETTABLE 	R4 R7 K10 ; R4 := R7["MenuSentinel"]
	59	[1137]	LOADK    	R0 := 0.000000
	60	[1141]	GETGLOBAL	R7 K11 ; R7 := 0x7b998233
	61	[1141]	MOVE     	R8 R4 ; R8 := R4
	62	[1141]	CALL     	R7 2 2 ; R7 := R7(R8)
	63	[1141]	TEST     	R7 1 ; if R7 then PC := 421
	64	[1141]	JMP      	421 ; PC := 421
	65	[1142]	GETGLOBAL	R7 K19 ; R7 := 0x5bced4c4
	66	[1142]	GETTABLE 	R7 R7 K20 ; R7 := R7[0x3eda26fc]
	67	[1142]	GETGLOBAL	R8 K19 ; R8 := 0x5bced4c4
	68	[1142]	GETTABLE 	R8 R8 K21 ; R8 := R8[0xdde5c6a1]
	69	[1142]	GETGLOBAL	R9 K9 ; R9 := _T
	70	[1142]	GETTABLE 	R9 R9 K22 ; R9 := R9["DEFAULT_SUIT_ROTATION"]
	71	[1142]	CALL     	R8 2 0 ; R8,... := R8(R9)
	72	[1142]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	73	[1143]	GETGLOBAL	R8 K19 ; R8 := 0x5bced4c4
	74	[1143]	GETTABLE 	R8 R8 K23 ; R8 := R8[0x00fa6bf1]
	75	[1143]	GETGLOBAL	R9 K19 ; R9 := 0x5bced4c4
	76	[1143]	GETTABLE 	R9 R9 K21 ; R9 := R9[0xdde5c6a1]
	77	[1143]	GETGLOBAL	R10 K9 ; R10 := _T
	78	[1143]	GETTABLE 	R10 R10 K22 ; R10 := R10["DEFAULT_SUIT_ROTATION"]
	79	[1143]	CALL     	R9 2 0 ; R9,... := R9(R10)
	80	[1143]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	81	[1144]	EQ       	1 R0 K24 ; if R0 == 1.000000 then PC := 85
	82	[1144]	JMP      	85 ; PC := 85
	83	[1144]	EQ       	0 R0 K25 ; if R0 ~= 2.000000 then PC := 126
	84	[1144]	JMP      	126 ; PC := 126
	85	[1145]	GETGLOBAL	R9 K9 ; R9 := _T
	86	[1145]	GETTABLE 	R9 R9 K12 ; R9 := R9["InSimulacrum"]
	87	[1145]	TEST     	R9 1 ; if R9 then PC := 94
	88	[1145]	JMP      	94 ; PC := 94
	89	[1145]	GETUPVAL 	R9 U2 ; R9 := U2
	90	[1145]	GETTABLE 	R9 R9 K26 ; R9 := R9[0xcf1fcba4]
	91	[1145]	CALL     	R9 1 2 ; R9 := R9()
	92	[1145]	TEST     	R9 0 ; if not R9 then PC := 104
	93	[1145]	JMP      	104 ; PC := 104
	94	[1145]	GETGLOBAL	R9 K11 ; R9 := 0x7b998233
	95	[1145]	SELF     	R10 R4 K27 ; R11 := R4; R10 := R4[0xfa9e477f]
	96	[1145]	CALL     	R10 2 0 ; R10,... := R10(R11)
	97	[1145]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	98	[1145]	TEST     	R9 1 ; if R9 then PC := 104
	99	[1145]	JMP      	104 ; PC := 104
	100	[1146]	SELF     	R9 R4 K27 ; R10 := R4; R9 := R4[0xfa9e477f]
	101	[1146]	CALL     	R9 2 2 ; R9 := R9(R10)
	102	[1146]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x4094b424]
	103	[1146]	CALL     	R9 2 1 ; R9(R10)
	104	[1148]	GETGLOBAL	R9 K29 ; R9 := 0xa421af95
	105	[1148]	MUL      	R10 K30 R7 ; R10 := 3.500000 * R7
	106	[1148]	LOADK    	R11 K31 ; R11 := 0.700000
	107	[1148]	MUL      	R12 K30 R8 ; R12 := 3.500000 * R8
	108	[1148]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	109	[1149]	SELF     	R10 R4 K32 ; R11 := R4; R10 := R4[0xd1586535]
	110	[1149]	CALL     	R10 2 2 ; R10 := R10(R11)
	111	[1149]	ADD      	R1 R10 R9 ; R1 := R10 + R9
	112	[1150]	GETGLOBAL	R10 K33 ; R10 := 0x20b7f774
	113	[1150]	MOVE     	R11 R1 ; R11 := R1
	114	[1150]	SELF     	R12 R4 K32 ; R13 := R4; R12 := R4[0xd1586535]
	115	[1150]	CALL     	R12 2 2 ; R12 := R12(R13)
	116	[1150]	GETGLOBAL	R13 K29 ; R13 := 0xa421af95
	117	[1150]	LOADK    	R14 := 0.000000
	118	[1150]	LOADK    	R15 K31 ; R15 := 0.700000
	119	[1150]	LOADK    	R16 := 0.000000
	120	[1150]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	121	[1150]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	122	[1150]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	123	[1150]	MOVE     	R2 R10 ; R2 := R10
	124	[1151]	LOADK    	R3 := 40.000000
	125	[1151]	JMP      	421 ; PC := 421
	126	[1152]	EQ       	0 R0 K34 ; if R0 ~= 0.000000 then PC := 150
	127	[1152]	JMP      	150 ; PC := 150
	128	[1153]	GETGLOBAL	R10 K29 ; R10 := 0xa421af95
	129	[1153]	MUL      	R11 K25 R7 ; R11 := 2.000000 * R7
	130	[1153]	LOADK    	R12 K35 ; R12 := 0.300000
	131	[1153]	MUL      	R13 K25 R8 ; R13 := 2.000000 * R8
	132	[1153]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	133	[1154]	SELF     	R11 R4 K32 ; R12 := R4; R11 := R4[0xd1586535]
	134	[1154]	CALL     	R11 2 2 ; R11 := R11(R12)
	135	[1154]	ADD      	R1 R11 R10 ; R1 := R11 + R10
	136	[1155]	GETGLOBAL	R11 K33 ; R11 := 0x20b7f774
	137	[1155]	MOVE     	R12 R1 ; R12 := R1
	138	[1155]	SELF     	R13 R4 K32 ; R14 := R4; R13 := R4[0xd1586535]
	139	[1155]	CALL     	R13 2 2 ; R13 := R13(R14)
	140	[1155]	GETGLOBAL	R14 K29 ; R14 := 0xa421af95
	141	[1155]	LOADK    	R15 := 0.000000
	142	[1155]	LOADK    	R16 K35 ; R16 := 0.300000
	143	[1155]	LOADK    	R17 := 0.000000
	144	[1155]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	145	[1155]	ADD      	R13 R13 R14 ; R13 := R13 + R14
	146	[1155]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	147	[1155]	MOVE     	R2 R11 ; R2 := R11
	148	[1156]	LOADK    	R3 := 23.000000
	149	[1156]	JMP      	421 ; PC := 421
	150	[1157]	EQ       	1 R0 K36 ; if R0 == 3.000000 then PC := 154
	151	[1157]	JMP      	154 ; PC := 154
	152	[1157]	EQ       	0 R0 K37 ; if R0 ~= 4.000000 then PC := 421
	153	[1157]	JMP      	421 ; PC := 421
	154	[1158]	GETGLOBAL	R11 K9 ; R11 := _T
	155	[1158]	GETTABLE 	R11 R11 K12 ; R11 := R11["InSimulacrum"]
	156	[1158]	TEST     	R11 1 ; if R11 then PC := 163
	157	[1158]	JMP      	163 ; PC := 163
	158	[1158]	GETUPVAL 	R11 U2 ; R11 := U2
	159	[1158]	GETTABLE 	R11 R11 K26 ; R11 := R11[0xcf1fcba4]
	160	[1158]	CALL     	R11 1 2 ; R11 := R11()
	161	[1158]	TEST     	R11 0 ; if not R11 then PC := 173
	162	[1158]	JMP      	173 ; PC := 173
	163	[1158]	GETGLOBAL	R11 K11 ; R11 := 0x7b998233
	164	[1158]	SELF     	R12 R4 K27 ; R13 := R4; R12 := R4[0xfa9e477f]
	165	[1158]	CALL     	R12 2 0 ; R12,... := R12(R13)
	166	[1158]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	167	[1158]	TEST     	R11 1 ; if R11 then PC := 173
	168	[1158]	JMP      	173 ; PC := 173
	169	[1159]	SELF     	R11 R4 K27 ; R12 := R4; R11 := R4[0xfa9e477f]
	170	[1159]	CALL     	R11 2 2 ; R11 := R11(R12)
	171	[1159]	SELF     	R11 R11 K28 ; R12 := R11; R11 := R11[0x4094b424]
	172	[1159]	CALL     	R11 2 1 ; R11(R12)
	173	[1161]	GETGLOBAL	R11 K29 ; R11 := 0xa421af95
	174	[1161]	MUL      	R12 K38 R7 ; R12 := 5.000000 * R7
	175	[1161]	LOADK    	R13 := 1.000000
	176	[1161]	MUL      	R14 K38 R8 ; R14 := 5.000000 * R8
	177	[1161]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	178	[1162]	SELF     	R12 R4 K32 ; R13 := R4; R12 := R4[0xd1586535]
	179	[1162]	CALL     	R12 2 2 ; R12 := R12(R13)
	180	[1162]	ADD      	R1 R12 R11 ; R1 := R12 + R11
	181	[1163]	GETGLOBAL	R12 K33 ; R12 := 0x20b7f774
	182	[1163]	MOVE     	R13 R1 ; R13 := R1
	183	[1163]	SELF     	R14 R4 K32 ; R15 := R4; R14 := R4[0xd1586535]
	184	[1163]	CALL     	R14 2 2 ; R14 := R14(R15)
	185	[1163]	GETGLOBAL	R15 K29 ; R15 := 0xa421af95
	186	[1163]	LOADK    	R16 := 0.000000
	187	[1163]	LOADK    	R17 := 1.000000
	188	[1163]	LOADK    	R18 := -0.500000
	189	[1163]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	190	[1163]	ADD      	R14 R14 R15 ; R14 := R14 + R15
	191	[1163]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	192	[1163]	MOVE     	R2 R12 ; R2 := R12
	193	[1164]	LOADK    	R3 := 23.000000
	194	[1166]	JMP      	421 ; PC := 421
	195	[1168]	EQ       	1 R0 K24 ; if R0 == 1.000000 then PC := 199
	196	[1168]	JMP      	199 ; PC := 199
	197	[1168]	EQ       	0 R0 K25 ; if R0 ~= 2.000000 then PC := 241
	198	[1168]	JMP      	241 ; PC := 241
	199	[1169]	GETUPVAL 	R12 U3 ; R12 := U3
	200	[1169]	GETTABLE 	R12 R12 K39 ; R12 := R12[0xa9882367]
	201	[1169]	LOADK    	R13 K40 ; R13 := "KubrowPuppySpawnControl"
	202	[1169]	CALL     	R12 2 2 ; R12 := R12(R13)
	203	[1170]	GETGLOBAL	R13 K11 ; R13 := 0x7b998233
	204	[1170]	MOVE     	R14 R12 ; R14 := R12
	205	[1170]	CALL     	R13 2 2 ; R13 := R13(R14)
	206	[1170]	TEST     	R13 1 ; if R13 then PC := 421
	207	[1170]	JMP      	421 ; PC := 421
	208	[1171]	GETGLOBAL	R13 K29 ; R13 := 0xa421af95
	209	[1171]	LOADK    	R14 := -2.500000
	210	[1171]	LOADK    	R15 K41 ; R15 := 1.900000
	211	[1171]	LOADK    	R16 := 2.500000
	212	[1171]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	213	[1172]	GETUPVAL 	R14 U1 ; R14 := U1
	214	[1172]	GETTABLE 	R14 R14 K8 ; R14 := R14[0x7a04c21d]
	215	[1172]	CALL     	R14 1 2 ; R14 := R14()
	216	[1172]	TEST     	R14 0 ; if not R14 then PC := 224
	217	[1172]	JMP      	224 ; PC := 224
	218	[1173]	GETGLOBAL	R14 K29 ; R14 := 0xa421af95
	219	[1173]	LOADK    	R15 := -4.000000
	220	[1173]	LOADK    	R16 K41 ; R16 := 1.900000
	221	[1173]	LOADK    	R17 := -2.500000
	222	[1173]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	223	[1173]	MOVE     	R13 R14 ; R13 := R14
	224	[1175]	SELF     	R14 R12 K32 ; R15 := R12; R14 := R12[0xd1586535]
	225	[1175]	CALL     	R14 2 2 ; R14 := R14(R15)
	226	[1175]	ADD      	R1 R14 R13 ; R1 := R14 + R13
	227	[1176]	GETGLOBAL	R14 K33 ; R14 := 0x20b7f774
	228	[1176]	MOVE     	R15 R1 ; R15 := R1
	229	[1176]	SELF     	R16 R12 K32 ; R17 := R12; R16 := R12[0xd1586535]
	230	[1176]	CALL     	R16 2 0 ; R16,... := R16(R17)
	231	[1176]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	232	[1176]	MOVE     	R2 R14 ; R2 := R14
	233	[1177]	GETTABLE 	R14 R2 K5 ; R14 := R2["pitch"]
	234	[1177]	SUB      	R14 R14 K42 ; R14 := R14 - 9.000000
	235	[1177]	SETTABLE 	R2 K5 R14 ; R2["pitch"] := R14
	236	[1178]	GETTABLE 	R14 R2 K4 ; R14 := R2["heading"]
	237	[1178]	SUB      	R14 R14 K43 ; R14 := R14 - 8.000000
	238	[1178]	SETTABLE 	R2 K4 R14 ; R2["heading"] := R14
	239	[1179]	LOADK    	R3 := 40.000000
	240	[1180]	JMP      	421 ; PC := 421
	241	[1181]	EQ       	0 R0 K34 ; if R0 ~= 0.000000 then PC := 294
	242	[1181]	JMP      	294 ; PC := 294
	243	[1182]	GETUPVAL 	R14 U3 ; R14 := U3
	244	[1182]	GETTABLE 	R14 R14 K39 ; R14 := R14[0xa9882367]
	245	[1182]	LOADK    	R15 K44 ; R15 := "SentinelSpawnControl"
	246	[1182]	CALL     	R14 2 2 ; R14 := R14(R15)
	247	[1183]	GETGLOBAL	R15 K11 ; R15 := 0x7b998233
	248	[1183]	MOVE     	R16 R14 ; R16 := R14
	249	[1183]	CALL     	R15 2 2 ; R15 := R15(R16)
	250	[1183]	TEST     	R15 1 ; if R15 then PC := 421
	251	[1183]	JMP      	421 ; PC := 421
	252	[1184]	GETGLOBAL	R15 K29 ; R15 := 0xa421af95
	253	[1184]	LOADK    	R16 := 2.000000
	254	[1184]	LOADK    	R17 K45 ; R17 := 0.100000
	255	[1184]	LOADK    	R18 := 2.000000
	256	[1184]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	257	[1185]	GETGLOBAL	R16 K29 ; R16 := 0xa421af95
	258	[1185]	LOADK    	R17 := 0.250000
	259	[1185]	LOADK    	R18 := 0.000000
	260	[1185]	LOADK    	R19 := 0.000000
	261	[1185]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	262	[1186]	GETUPVAL 	R17 U1 ; R17 := U1
	263	[1186]	GETTABLE 	R17 R17 K8 ; R17 := R17[0x7a04c21d]
	264	[1186]	CALL     	R17 1 2 ; R17 := R17()
	265	[1186]	TEST     	R17 0 ; if not R17 then PC := 279
	266	[1186]	JMP      	279 ; PC := 279
	267	[1187]	GETGLOBAL	R17 K29 ; R17 := 0xa421af95
	268	[1187]	LOADK    	R18 := 4.000000
	269	[1187]	LOADK    	R19 K46 ; R19 := 0.400000
	270	[1187]	LOADK    	R20 := 2.000000
	271	[1187]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	272	[1187]	MOVE     	R15 R17 ; R15 := R17
	273	[1188]	GETGLOBAL	R17 K29 ; R17 := 0xa421af95
	274	[1188]	LOADK    	R18 := 0.500000
	275	[1188]	LOADK    	R19 := 0.000000
	276	[1188]	LOADK    	R20 := 0.000000
	277	[1188]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	278	[1188]	MOVE     	R16 R17 ; R16 := R17
	279	[1190]	SELF     	R17 R14 K32 ; R18 := R14; R17 := R14[0xd1586535]
	280	[1190]	CALL     	R17 2 2 ; R17 := R17(R18)
	281	[1190]	ADD      	R1 R17 R15 ; R1 := R17 + R15
	282	[1191]	GETGLOBAL	R17 K33 ; R17 := 0x20b7f774
	283	[1191]	MOVE     	R18 R1 ; R18 := R1
	284	[1191]	SELF     	R19 R14 K32 ; R20 := R14; R19 := R14[0xd1586535]
	285	[1191]	CALL     	R19 2 2 ; R19 := R19(R20)
	286	[1191]	ADD      	R19 R19 R16 ; R19 := R19 + R16
	287	[1191]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	288	[1191]	MOVE     	R2 R17 ; R2 := R17
	289	[1192]	GETTABLE 	R17 R2 K5 ; R17 := R2["pitch"]
	290	[1192]	SUB      	R17 R17 K38 ; R17 := R17 - 5.000000
	291	[1192]	SETTABLE 	R2 K5 R17 ; R2["pitch"] := R17
	292	[1193]	LOADK    	R3 := 25.000000
	293	[1194]	JMP      	421 ; PC := 421
	294	[1195]	EQ       	0 R0 K36 ; if R0 ~= 3.000000 then PC := 378
	295	[1195]	JMP      	378 ; PC := 378
	296	[1196]	GETUPVAL 	R17 U3 ; R17 := U3
	297	[1196]	GETTABLE 	R17 R17 K39 ; R17 := R17[0xa9882367]
	298	[1196]	LOADK    	R18 K47 ; R18 := "MoaSpawnControl"
	299	[1196]	CALL     	R17 2 2 ; R17 := R17(R18)
	300	[1197]	GETGLOBAL	R18 K11 ; R18 := 0x7b998233
	301	[1197]	MOVE     	R19 R17 ; R19 := R17
	302	[1197]	CALL     	R18 2 2 ; R18 := R18(R19)
	303	[1197]	TEST     	R18 1 ; if R18 then PC := 421
	304	[1197]	JMP      	421 ; PC := 421
	305	[1198]	GETGLOBAL	R18 K29 ; R18 := 0xa421af95
	306	[1198]	LOADK    	R19 := 2.000000
	307	[1198]	LOADK    	R20 := 2.000000
	308	[1198]	LOADK    	R21 := 2.000000
	309	[1198]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	310	[1200]	GETGLOBAL	R19 K9 ; R19 := _T
	311	[1200]	GETTABLE 	R19 R19 K10 ; R19 := R19["MenuSentinel"]
	312	[1201]	LOADNIL  	R20 R20 ; R20 := nil
	313	[1202]	GETUPVAL 	R21 U1 ; R21 := U1
	314	[1202]	GETTABLE 	R21 R21 K8 ; R21 := R21[0x7a04c21d]
	315	[1202]	CALL     	R21 1 2 ; R21 := R21()
	316	[1202]	TEST     	R21 0 ; if not R21 then PC := 333
	317	[1202]	JMP      	333 ; PC := 333
	318	[1203]	GETGLOBAL	R21 K29 ; R21 := 0xa421af95
	319	[1203]	LOADK    	R22 := 3.000000
	320	[1203]	LOADK    	R23 := 3.000000
	321	[1203]	LOADK    	R24 := -5.000000
	322	[1203]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	323	[1203]	MOVE     	R18 R21 ; R18 := R21
	324	[1204]	SELF     	R21 R17 K32 ; R22 := R17; R21 := R17[0xd1586535]
	325	[1204]	CALL     	R21 2 2 ; R21 := R21(R22)
	326	[1204]	GETGLOBAL	R22 K29 ; R22 := 0xa421af95
	327	[1204]	LOADK    	R23 K48 ; R23 := 0.200000
	328	[1204]	LOADK    	R24 := 2.500000
	329	[1204]	LOADK    	R25 K49 ; R25 := -1.200000
	330	[1204]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	331	[1204]	ADD      	R20 R21 R22 ; R20 := R21 + R22
	332	[1204]	JMP      	360 ; PC := 360
	333	[1206]	GETGLOBAL	R21 K11 ; R21 := 0x7b998233
	334	[1206]	MOVE     	R22 R19 ; R22 := R19
	335	[1206]	CALL     	R21 2 2 ; R21 := R21(R22)
	336	[1206]	TEST     	R21 1 ; if R21 then PC := 343
	337	[1206]	JMP      	343 ; PC := 343
	338	[1206]	SELF     	R21 R19 K50 ; R22 := R19; R21 := R19[0xf2deaf69]
	339	[1206]	GETGLOBAL	R23 K51 ; R23 := gLotusMoaPetAvatarType
	340	[1206]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	341	[1206]	TEST     	R21 1 ; if R21 then PC := 352
	342	[1206]	JMP      	352 ; PC := 352
	343	[1207]	SELF     	R21 R17 K32 ; R22 := R17; R21 := R17[0xd1586535]
	344	[1207]	CALL     	R21 2 2 ; R21 := R21(R22)
	345	[1207]	GETGLOBAL	R22 K29 ; R22 := 0xa421af95
	346	[1207]	LOADK    	R23 := 0.500000
	347	[1207]	LOADK    	R24 := 2.500000
	348	[1207]	LOADK    	R25 := 0.000000
	349	[1207]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	350	[1207]	ADD      	R20 R21 R22 ; R20 := R21 + R22
	351	[1207]	JMP      	360 ; PC := 360
	352	[1209]	SELF     	R21 R19 K52 ; R22 := R19; R21 := R19[0xebfba9e4]
	353	[1209]	CALL     	R21 2 2 ; R21 := R21(R22)
	354	[1209]	GETGLOBAL	R22 K29 ; R22 := 0xa421af95
	355	[1209]	LOADK    	R23 K46 ; R23 := 0.400000
	356	[1209]	LOADK    	R24 := 0.000000
	357	[1209]	LOADK    	R25 := 0.000000
	358	[1209]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	359	[1209]	ADD      	R20 R21 R22 ; R20 := R21 + R22
	360	[1213]	SELF     	R21 R17 K32 ; R22 := R17; R21 := R17[0xd1586535]
	361	[1213]	CALL     	R21 2 2 ; R21 := R21(R22)
	362	[1213]	ADD      	R1 R21 R18 ; R1 := R21 + R18
	363	[1215]	GETGLOBAL	R21 K33 ; R21 := 0x20b7f774
	364	[1215]	MOVE     	R22 R1 ; R22 := R1
	365	[1215]	MOVE     	R23 R20 ; R23 := R20
	366	[1215]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	367	[1215]	MOVE     	R2 R21 ; R2 := R21
	368	[1217]	GETGLOBAL	R21 K11 ; R21 := 0x7b998233
	369	[1217]	MOVE     	R22 R19 ; R22 := R19
	370	[1217]	CALL     	R21 2 2 ; R21 := R21(R22)
	371	[1217]	TEST     	R21 0 ; if not R21 then PC := 376
	372	[1217]	JMP      	376 ; PC := 376
	373	[1218]	GETTABLE 	R21 R2 K5 ; R21 := R2["pitch"]
	374	[1218]	SUB      	R21 R21 K53 ; R21 := R21 - 18.000000
	375	[1218]	SETTABLE 	R2 K5 R21 ; R2["pitch"] := R21
	376	[1220]	LOADK    	R3 := 25.000000
	377	[1221]	JMP      	421 ; PC := 421
	378	[1222]	EQ       	0 R0 K37 ; if R0 ~= 4.000000 then PC := 421
	379	[1222]	JMP      	421 ; PC := 421
	380	[1223]	GETUPVAL 	R21 U3 ; R21 := U3
	381	[1223]	GETTABLE 	R21 R21 K39 ; R21 := R21[0xa9882367]
	382	[1223]	LOADK    	R22 K47 ; R22 := "MoaSpawnControl"
	383	[1223]	CALL     	R21 2 2 ; R21 := R21(R22)
	384	[1224]	GETGLOBAL	R22 K11 ; R22 := 0x7b998233
	385	[1224]	MOVE     	R23 R21 ; R23 := R21
	386	[1224]	CALL     	R22 2 2 ; R22 := R22(R23)
	387	[1224]	TEST     	R22 1 ; if R22 then PC := 421
	388	[1224]	JMP      	421 ; PC := 421
	389	[1225]	GETGLOBAL	R22 K29 ; R22 := 0xa421af95
	390	[1225]	LOADK    	R23 := 3.000000
	391	[1225]	LOADK    	R24 := 2.000000
	392	[1225]	LOADK    	R25 := 3.000000
	393	[1225]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	394	[1227]	SELF     	R23 R21 K32 ; R24 := R21; R23 := R21[0xd1586535]
	395	[1227]	CALL     	R23 2 2 ; R23 := R23(R24)
	396	[1227]	GETGLOBAL	R24 K29 ; R24 := 0xa421af95
	397	[1227]	LOADK    	R25 := 0.500000
	398	[1227]	LOADK    	R26 := 2.500000
	399	[1227]	LOADK    	R27 := 0.000000
	400	[1227]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	401	[1227]	ADD      	R23 R23 R24 ; R23 := R23 + R24
	402	[1229]	SELF     	R24 R21 K32 ; R25 := R21; R24 := R21[0xd1586535]
	403	[1229]	CALL     	R24 2 2 ; R24 := R24(R25)
	404	[1229]	ADD      	R1 R24 R22 ; R1 := R24 + R22
	405	[1231]	GETGLOBAL	R24 K33 ; R24 := 0x20b7f774
	406	[1231]	MOVE     	R25 R1 ; R25 := R1
	407	[1231]	MOVE     	R26 R23 ; R26 := R23
	408	[1231]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	409	[1231]	MOVE     	R2 R24 ; R2 := R24
	410	[1233]	GETGLOBAL	R24 K9 ; R24 := _T
	411	[1233]	GETTABLE 	R24 R24 K10 ; R24 := R24["MenuSentinel"]
	412	[1234]	GETGLOBAL	R25 K11 ; R25 := 0x7b998233
	413	[1234]	MOVE     	R26 R24 ; R26 := R24
	414	[1234]	CALL     	R25 2 2 ; R25 := R25(R26)
	415	[1234]	TEST     	R25 0 ; if not R25 then PC := 420
	416	[1234]	JMP      	420 ; PC := 420
	417	[1235]	GETTABLE 	R25 R2 K5 ; R25 := R2["pitch"]
	418	[1235]	SUB      	R25 R25 K53 ; R25 := R25 - 18.000000
	419	[1235]	SETTABLE 	R2 K5 R25 ; R2["pitch"] := R25
	420	[1237]	LOADK    	R3 := 25.000000
	421	[1243]	GETGLOBAL	R25 K9 ; R25 := _T
	422	[1243]	GETTABLE 	R25 R25 K12 ; R25 := R25["InSimulacrum"]
	423	[1243]	TEST     	R25 1 ; if R25 then PC := 430
	424	[1243]	JMP      	430 ; PC := 430
	425	[1243]	GETUPVAL 	R25 U2 ; R25 := U2
	426	[1243]	GETTABLE 	R25 R25 K26 ; R25 := R25[0xcf1fcba4]
	427	[1243]	CALL     	R25 1 2 ; R25 := R25()
	428	[1243]	TEST     	R25 0 ; if not R25 then PC := 433
	429	[1243]	JMP      	433 ; PC := 433
	430	[1244]	GETGLOBAL	R25 K9 ; R25 := _T
	431	[1244]	SETTABLE 	R25 K54 K34 ; R25["SENTINEL_DEFAULT_ROTATION"] := 0.000000
	432	[1244]	JMP      	444 ; PC := 444
	433	[1245]	EQ       	1 R0 K34 ; if R0 == 0.000000 then PC := 437
	434	[1245]	JMP      	437 ; PC := 437
	435	[1245]	EQ       	0 R0 K36 ; if R0 ~= 3.000000 then PC := 442
	436	[1245]	JMP      	442 ; PC := 442
	437	[1246]	GETGLOBAL	R25 K9 ; R25 := _T
	438	[1246]	GETUPVAL 	R26 U4 ; R26 := U4
	439	[1246]	GETTABLE 	R26 R26 K55 ; R26 := R26["DefaultSentinelRotationOffset"]
	440	[1246]	SETTABLE 	R25 K54 R26 ; R25["SENTINEL_DEFAULT_ROTATION"] := R26
	441	[1246]	JMP      	444 ; PC := 444
	442	[1248]	GETGLOBAL	R25 K9 ; R25 := _T
	443	[1248]	SETTABLE 	R25 K54 K34 ; R25["SENTINEL_DEFAULT_ROTATION"] := 0.000000
	444	[1252]	GETGLOBAL	R25 K0 ; R25 := mCameraTable
	445	[1252]	SETTABLE 	R25 K56 K25 ; R25["LerpScale"] := 2.000000
	446	[1254]	GETGLOBAL	R25 K0 ; R25 := mCameraTable
	447	[1254]	SETTABLE 	R25 K57 R1 ; R25["destPos"] := R1
	448	[1255]	GETGLOBAL	R25 K0 ; R25 := mCameraTable
	449	[1255]	SETTABLE 	R25 K58 R2 ; R25["destRot"] := R2
	450	[1256]	GETGLOBAL	R25 K0 ; R25 := mCameraTable
	451	[1256]	GETGLOBAL	R26 K2 ; R26 := 0x00046924
	452	[1256]	CALL     	R26 1 2 ; R26 := R26()
	453	[1256]	SETTABLE 	R25 K59 R26 ; R25["biasRot"] := R26
	454	[1257]	GETGLOBAL	R25 K0 ; R25 := mCameraTable
	455	[1257]	SETTABLE 	R25 K60 K24 ; R25["attenFov"] := 1.000000
	456	[1258]	GETGLOBAL	R25 K0 ; R25 := mCameraTable
	457	[1258]	SETTABLE 	R25 K61 R3 ; R25["destFov"] := R3
	458	[1259]	RETURN   	R0 1 ; return 

function #33 <?:1261,1290> (82 instructions, 328 bytes at 000002112B46CD80)
3 params, 11 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[1262]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1262]	MOVE     	R4 R0 ; R4 := R0
	3	[1262]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1262]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[1262]	JMP      	7 ; PC := 7
	6	[1263]	RETURN   	R0 1 ; return 
	7	[1266]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[1266]	MOVE     	R4 R2 ; R4 := R2
	9	[1266]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[1267]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	11	[1267]	MOVE     	R5 R3 ; R5 := R3
	12	[1267]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[1267]	TEST     	R4 0 ; if not R4 then PC := 16
	14	[1267]	JMP      	16 ; PC := 16
	15	[1268]	RETURN   	R0 1 ; return 
	16	[1271]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0xde321e6f]
	17	[1271]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[1272]	SELF     	R5 R4 K2 ; R6 := R4; R5 := R4[0x8205b296]
	19	[1272]	LOADK    	R7 := 0.000000
	20	[1272]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	21	[1273]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	22	[1273]	MOVE     	R7 R5 ; R7 := R5
	23	[1273]	CALL     	R6 2 2 ; R6 := R6(R7)
	24	[1273]	TEST     	R6 1 ; if R6 then PC := 31
	25	[1273]	JMP      	31 ; PC := 31
	26	[1273]	SELF     	R6 R5 K4 ; R7 := R5; R6 := R5[0xf2deaf69]
	27	[1273]	GETGLOBAL	R8 K5 ; R8 := gLotusMeleeWeaponType
	28	[1273]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	29	[1273]	TEST     	R6 1 ; if R6 then PC := 32
	30	[1273]	JMP      	32 ; PC := 32
	31	[1274]	RETURN   	R0 1 ; return 
	32	[1277]	EQ       	1 R2 K7 ; if R2 == 3.000000 then PC := 39
	33	[1277]	JMP      	39 ; PC := 39
	34	[1277]	GETGLOBAL	R6 K6 ; R6 := 0x6c97a788
	35	[1277]	GETTABLE 	R6 R6 K8 ; R6 := R6["NUM_NORMAL_LOADOUT_SLOTS"]
	36	[1277]	LE       	1 R6 R2 ; if R6 <= R2 then PC := 39
	37	[1277]	JMP      	39 ; PC := 39
	38	[1277]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 39
	39	[1277]	OP_LOADBOOL	R6 1 0 ; R6 := true
	40	[1278]	SELF     	R7 R5 K9 ; R8 := R5; R7 := R5[0xa779cba7]
	41	[1278]	CALL     	R7 2 2 ; R7 := R7(R8)
	42	[1278]	EQ       	1 R7 K10 ; if R7 == 18.000000 then PC := 48
	43	[1278]	JMP      	48 ; PC := 48
	44	[1278]	SELF     	R7 R5 K9 ; R8 := R5; R7 := R5[0xa779cba7]
	45	[1278]	CALL     	R7 2 2 ; R7 := R7(R8)
	46	[1278]	EQ       	0 R7 K11 ; if R7 ~= 13.000000 then PC := 50
	47	[1278]	JMP      	50 ; PC := 50
	48	[1279]	OP_LOADBOOL	R6 0 0 ; R6 := false
	49	[1279]	JMP      	73 ; PC := 73
	50	[1280]	GETGLOBAL	R7 K12 ; R7 := mLists
	51	[1280]	GETTABLE 	R7 R7 K13 ; R7 := R7["mCosmeticsList"]
	52	[1280]	GETTABLE 	R7 R7 K14 ; R7 := R7["mCurrLevel"]
	53	[1280]	GETGLOBAL	R8 K12 ; R8 := mLists
	54	[1280]	GETTABLE 	R8 R8 K13 ; R8 := R8["mCosmeticsList"]
	55	[1280]	GETTABLE 	R8 R8 K15 ; R8 := R8["HOLSTER_STYLE"]
	56	[1280]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 66
	57	[1280]	JMP      	66 ; PC := 66
	58	[1280]	GETGLOBAL	R7 K12 ; R7 := mLists
	59	[1280]	GETTABLE 	R7 R7 K13 ; R7 := R7["mCosmeticsList"]
	60	[1280]	GETTABLE 	R7 R7 K14 ; R7 := R7["mCurrLevel"]
	61	[1280]	GETGLOBAL	R8 K12 ; R8 := mLists
	62	[1280]	GETTABLE 	R8 R8 K13 ; R8 := R8["mCosmeticsList"]
	63	[1280]	GETTABLE 	R8 R8 K16 ; R8 := R8["HOLSTER_CUSTOMIZATION"]
	64	[1280]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 68
	65	[1280]	JMP      	68 ; PC := 68
	66	[1281]	OP_LOADBOOL	R6 0 0 ; R6 := false
	67	[1281]	JMP      	73 ; PC := 73
	68	[1282]	EQ       	1 R1 K17 ; if R1 == 4.000000 then PC := 72
	69	[1282]	JMP      	72 ; PC := 72
	70	[1282]	EQ       	0 R1 K18 ; if R1 ~= 6.000000 then PC := 73
	71	[1282]	JMP      	73 ; PC := 73
	72	[1283]	OP_LOADBOOL	R6 0 0 ; R6 := false
	73	[1286]	SELF     	R7 R5 K19 ; R8 := R5; R7 := R5[0x9f3c821d]
	74	[1286]	MOVE     	R9 R6 ; R9 := R6
	75	[1286]	OP_LOADBOOL	R10 1 0 ; R10 := true
	76	[1286]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	77	[1287]	SELF     	R7 R4 K20 ; R8 := R4; R7 := R4[0x4d29b3a5]
	78	[1287]	LOADK    	R9 := 0.000000
	79	[1287]	LOADK    	R10 := 0.000000
	80	[1287]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	81	[1289]	RETURN   	R6 2 ; return R6 
	82	[1290]	RETURN   	R0 1 ; return 

function #34 <?:1292,2075> (2308 instructions, 9232 bytes at 000002112B46D2F0)
4 params, 153 slots, 17 upvalues, 0 locals, 213 constants, 0 functions
	1	[1293]	EQ       	1 R3 K0 ; if R3 == true then PC := 4
	2	[1293]	JMP      	4 ; PC := 4
	3	[1293]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 4
	4	[1293]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[1295]	EQ       	0 R0 K2 ; if R0 ~= 1.000000 then PC := 8
	6	[1295]	JMP      	8 ; PC := 8
	7	[1295]	JMP      	8 ; PC := 8
	8	[1302]	LOADNIL  	R4 R4 ; R4 := nil
	9	[1303]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	10	[1303]	GETGLOBAL	R6 K4 ; R6 := mArsenalConsole
	11	[1303]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[1303]	TEST     	R5 1 ; if R5 then PC := 18
	13	[1303]	JMP      	18 ; PC := 18
	14	[1304]	GETGLOBAL	R5 K4 ; R5 := mArsenalConsole
	15	[1304]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xd1586535]
	16	[1304]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[1304]	MOVE     	R4 R5 ; R4 := R5
	18	[1307]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	19	[1307]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	20	[1307]	GETTABLE 	R6 R6 K7 ; R6 := R6["rootNodeEntity"]
	21	[1307]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[1307]	TEST     	R5 0 ; if not R5 then PC := 82
	23	[1307]	JMP      	82 ; PC := 82
	24	[1308]	GETGLOBAL	R5 K6 ; R5 := mCameraTable
	25	[1308]	GETUPVAL 	R6 U0 ; R6 := U0
	26	[1308]	GETTABLE 	R6 R6 K9 ; R6 := R6["ARSENAL_CAMERA"]
	27	[1308]	SETTABLE 	R5 K8 R6 ; R5["cameraTag"] := R6
	28	[1309]	GETGLOBAL	R5 K6 ; R5 := mCameraTable
	29	[1309]	GETUPVAL 	R6 U1 ; R6 := U1
	30	[1309]	GETTABLE 	R6 R6 K11 ; R6 := R6[0x2a1108a9]
	31	[1309]	GETUPVAL 	R7 U0 ; R7 := U0
	32	[1309]	GETTABLE 	R7 R7 K9 ; R7 := R7["ARSENAL_CAMERA"]
	33	[1309]	MOVE     	R8 R4 ; R8 := R4
	34	[1309]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	35	[1309]	SETTABLE 	R5 K10 R6 ; R5["camera"] := R6
	36	[1310]	GETGLOBAL	R5 K6 ; R5 := mCameraTable
	37	[1310]	GETGLOBAL	R6 K12 ; R6 := _T
	38	[1310]	GETTABLE 	R6 R6 K13 ; R6 := R6["MenuSuitAvatar"]
	39	[1310]	SETTABLE 	R5 K7 R6 ; R5["rootNodeEntity"] := R6
	40	[1311]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	41	[1311]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	42	[1311]	GETTABLE 	R6 R6 K10 ; R6 := R6["camera"]
	43	[1311]	CALL     	R5 2 2 ; R5 := R5(R6)
	44	[1311]	TEST     	R5 1 ; if R5 then PC := 65
	45	[1311]	JMP      	65 ; PC := 65
	46	[1312]	GETGLOBAL	R5 K6 ; R5 := mCameraTable
	47	[1312]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	48	[1312]	GETTABLE 	R6 R6 K10 ; R6 := R6["camera"]
	49	[1312]	SELF     	R6 R6 K5 ; R7 := R6; R6 := R6[0xd1586535]
	50	[1312]	CALL     	R6 2 2 ; R6 := R6(R7)
	51	[1312]	SETTABLE 	R5 K14 R6 ; R5["orgPosition"] := R6
	52	[1313]	GETGLOBAL	R5 K6 ; R5 := mCameraTable
	53	[1313]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	54	[1313]	GETTABLE 	R6 R6 K10 ; R6 := R6["camera"]
	55	[1313]	SELF     	R6 R6 K16 ; R7 := R6; R6 := R6[0xcb3851b8]
	56	[1313]	CALL     	R6 2 2 ; R6 := R6(R7)
	57	[1313]	SETTABLE 	R5 K15 R6 ; R5["orgRotation"] := R6
	58	[1314]	GETGLOBAL	R5 K6 ; R5 := mCameraTable
	59	[1314]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	60	[1314]	GETTABLE 	R6 R6 K10 ; R6 := R6["camera"]
	61	[1314]	SELF     	R6 R6 K18 ; R7 := R6; R6 := R6[0xaac2f3a5]
	62	[1314]	CALL     	R6 2 2 ; R6 := R6(R7)
	63	[1314]	SETTABLE 	R5 K17 R6 ; R5["orgFOV"] := R6
	64	[1314]	JMP      	82 ; PC := 82
	65	[1316]	GETGLOBAL	R5 K12 ; R5 := _T
	66	[1316]	GETTABLE 	R5 R5 K13 ; R5 := R5["MenuSuitAvatar"]
	67	[1317]	GETGLOBAL	R6 K3 ; R6 := 0x7b998233
	68	[1317]	MOVE     	R7 R5 ; R7 := R5
	69	[1317]	CALL     	R6 2 2 ; R6 := R6(R7)
	70	[1317]	TEST     	R6 1 ; if R6 then PC := 82
	71	[1317]	JMP      	82 ; PC := 82
	72	[1318]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	73	[1318]	SELF     	R7 R5 K5 ; R8 := R5; R7 := R5[0xd1586535]
	74	[1318]	CALL     	R7 2 2 ; R7 := R7(R8)
	75	[1318]	SETTABLE 	R6 K14 R7 ; R6["orgPosition"] := R7
	76	[1319]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	77	[1319]	SELF     	R7 R5 K16 ; R8 := R5; R7 := R5[0xcb3851b8]
	78	[1319]	CALL     	R7 2 2 ; R7 := R7(R8)
	79	[1319]	SETTABLE 	R6 K15 R7 ; R6["orgRotation"] := R7
	80	[1320]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	81	[1320]	SETTABLE 	R6 K17 K19 ; R6["orgFOV"] := 90.000000
	82	[1325]	GETGLOBAL	R6 K6 ; R6 := mCameraTable
	83	[1325]	GETTABLE 	R6 R6 K14 ; R6 := R6["orgPosition"]
	84	[1326]	GETGLOBAL	R7 K20 ; R7 := 0x00046924
	85	[1326]	GETGLOBAL	R8 K6 ; R8 := mCameraTable
	86	[1326]	GETTABLE 	R8 R8 K15 ; R8 := R8["orgRotation"]
	87	[1326]	GETTABLE 	R8 R8 K21 ; R8 := R8["heading"]
	88	[1326]	GETGLOBAL	R9 K6 ; R9 := mCameraTable
	89	[1326]	GETTABLE 	R9 R9 K15 ; R9 := R9["orgRotation"]
	90	[1326]	GETTABLE 	R9 R9 K22 ; R9 := R9["pitch"]
	91	[1326]	GETGLOBAL	R10 K6 ; R10 := mCameraTable
	92	[1326]	GETTABLE 	R10 R10 K15 ; R10 := R10["orgRotation"]
	93	[1326]	GETTABLE 	R10 R10 K23 ; R10 := R10["bank"]
	94	[1326]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	95	[1327]	GETGLOBAL	R8 K6 ; R8 := mCameraTable
	96	[1327]	GETTABLE 	R8 R8 K17 ; R8 := R8["orgFOV"]
	97	[1329]	GETGLOBAL	R9 K6 ; R9 := mCameraTable
	98	[1329]	GETTABLE 	R9 R9 K7 ; R9 := R9["rootNodeEntity"]
	99	[1330]	GETGLOBAL	R10 K3 ; R10 := 0x7b998233
	100	[1330]	MOVE     	R11 R9 ; R11 := R9
	101	[1330]	CALL     	R10 2 2 ; R10 := R10(R11)
	102	[1330]	TEST     	R10 0 ; if not R10 then PC := 105
	103	[1330]	JMP      	105 ; PC := 105
	104	[1331]	RETURN   	R0 1 ; return 
	105	[1334]	SELF     	R10 R9 K24 ; R11 := R9; R10 := R9[0xde321e6f]
	106	[1334]	CALL     	R10 2 2 ; R10 := R10(R11)
	107	[1335]	SELF     	R11 R10 K25 ; R12 := R10; R11 := R10[0x8205b296]
	108	[1335]	LOADK    	R13 := 0.000000
	109	[1335]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	110	[1337]	EQ       	1 R0 K27 ; if R0 == 4.000000 then PC := 127
	111	[1337]	JMP      	127 ; PC := 127
	112	[1337]	GETUPVAL 	R12 U2 ; R12 := U2
	113	[1337]	EQ       	1 R12 K28 ; if R12 == nil then PC := 127
	114	[1337]	JMP      	127 ; PC := 127
	115	[1338]	SELF     	R12 R10 K29 ; R13 := R10; R12 := R10[0xf596420f]
	116	[1338]	CALL     	R12 2 1 ; R12(R13)
	117	[1339]	GETUPVAL 	R12 U3 ; R12 := U3
	118	[1339]	GETUPVAL 	R13 U4 ; R13 := U4
	119	[1339]	GETTABLE 	R13 R13 K30 ; R13 := R13["Current"]
	120	[1339]	EQ       	1 R13 K31 ; if R13 == 2.000000 then PC := 123
	121	[1339]	JMP      	123 ; PC := 123
	122	[1339]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 123
	123	[1339]	OP_LOADBOOL	R13 1 0 ; R13 := true
	124	[1339]	CALL     	R12 2 1 ; R12(R13)
	125	[1340]	LOADNIL  	R12 R12 ; R12 := nil
	126	[1340]	SETUPVAL 	R12 U2 ; U2 := R12
	127	[1343]	OP_LOADBOOL	R12 1 0 ; R12 := true
	128	[1344]	GETGLOBAL	R13 K12 ; R13 := _T
	129	[1344]	GETTABLE 	R13 R13 K32 ; R13 := R13["mSpecialSuitMode"]
	130	[1344]	EQ       	1 R13 K28 ; if R13 == nil then PC := 195
	131	[1344]	JMP      	195 ; PC := 195
	132	[1345]	GETGLOBAL	R13 K12 ; R13 := _T
	133	[1345]	SETTABLE 	R13 K32 K33 ; R13["mSpecialSuitMode"] := false
	134	[1346]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	135	[1346]	GETGLOBAL	R14 K34 ; R14 := mSuitType
	136	[1346]	CALL     	R13 2 2 ; R13 := R13(R14)
	137	[1346]	TEST     	R13 1 ; if R13 then PC := 180
	138	[1346]	JMP      	180 ; PC := 180
	139	[1346]	GETUPVAL 	R13 U4 ; R13 := U4
	140	[1346]	GETTABLE 	R13 R13 K30 ; R13 := R13["Current"]
	141	[1346]	EQ       	1 R13 K2 ; if R13 == 1.000000 then PC := 147
	142	[1346]	JMP      	147 ; PC := 147
	143	[1346]	GETUPVAL 	R13 U4 ; R13 := U4
	144	[1346]	GETTABLE 	R13 R13 K30 ; R13 := R13["Current"]
	145	[1346]	EQ       	0 R13 K31 ; if R13 ~= 2.000000 then PC := 180
	146	[1346]	JMP      	180 ; PC := 180
	147	[1347]	GETGLOBAL	R13 K34 ; R13 := mSuitType
	148	[1347]	SELF     	R13 R13 K35 ; R14 := R13; R13 := R13[0xf2deaf69]
	149	[1347]	GETGLOBAL	R15 K36 ; R15 := 0x6dcacb87
	150	[1347]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	151	[1347]	TEST     	R13 1 ; if R13 then PC := 159
	152	[1347]	JMP      	159 ; PC := 159
	153	[1347]	GETGLOBAL	R13 K34 ; R13 := mSuitType
	154	[1347]	SELF     	R13 R13 K35 ; R14 := R13; R13 := R13[0xf2deaf69]
	155	[1347]	GETGLOBAL	R15 K37 ; R15 := 0x2c86a0ee
	156	[1347]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	157	[1347]	TEST     	R13 0 ; if not R13 then PC := 166
	158	[1347]	JMP      	166 ; PC := 166
	159	[1348]	GETGLOBAL	R13 K12 ; R13 := _T
	160	[1348]	EQ       	1 R1 K38 ; if R1 == 5.000000 then PC := 163
	161	[1348]	JMP      	163 ; PC := 163
	162	[1348]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 163
	163	[1348]	OP_LOADBOOL	R14 1 0 ; R14 := true
	164	[1348]	SETTABLE 	R13 K32 R14 ; R13["mSpecialSuitMode"] := R14
	165	[1348]	JMP      	180 ; PC := 180
	166	[1349]	GETGLOBAL	R13 K34 ; R13 := mSuitType
	167	[1349]	SELF     	R13 R13 K35 ; R14 := R13; R13 := R13[0xf2deaf69]
	168	[1349]	GETGLOBAL	R15 K39 ; R15 := 0xda46ae79
	169	[1349]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	170	[1349]	TEST     	R13 0 ; if not R13 then PC := 180
	171	[1349]	JMP      	180 ; PC := 180
	172	[1350]	GETGLOBAL	R13 K12 ; R13 := _T
	173	[1350]	EQ       	1 R1 K38 ; if R1 == 5.000000 then PC := 178
	174	[1350]	JMP      	178 ; PC := 178
	175	[1350]	EQ       	1 R1 K40 ; if R1 == 6.000000 then PC := 178
	176	[1350]	JMP      	178 ; PC := 178
	177	[1350]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 178
	178	[1350]	OP_LOADBOOL	R14 1 0 ; R14 := true
	179	[1350]	SETTABLE 	R13 K32 R14 ; R13["mSpecialSuitMode"] := R14
	180	[1354]	GETGLOBAL	R13 K12 ; R13 := _T
	181	[1354]	GETTABLE 	R13 R13 K32 ; R13 := R13["mSpecialSuitMode"]
	182	[1354]	NOT      	R12 R13 ; R12 := not R13
	183	[1355]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	184	[1355]	GETGLOBAL	R14 K12 ; R14 := _T
	185	[1355]	GETTABLE 	R14 R14 K41 ; R14 := R14["SpecialSuitAvatar"]
	186	[1355]	CALL     	R13 2 2 ; R13 := R13(R14)
	187	[1355]	TEST     	R13 1 ; if R13 then PC := 195
	188	[1355]	JMP      	195 ; PC := 195
	189	[1356]	GETGLOBAL	R13 K12 ; R13 := _T
	190	[1356]	GETTABLE 	R13 R13 K41 ; R13 := R13["SpecialSuitAvatar"]
	191	[1356]	SELF     	R13 R13 K42 ; R14 := R13; R13 := R13[0x2abc8ecd]
	192	[1356]	GETGLOBAL	R15 K12 ; R15 := _T
	193	[1356]	GETTABLE 	R15 R15 K32 ; R15 := R15["mSpecialSuitMode"]
	194	[1356]	CALL     	R13 3 1 ; R13(R14,R15)
	195	[1360]	GETGLOBAL	R13 K12 ; R13 := _T
	196	[1360]	GETUPVAL 	R14 U5 ; R14 := U5
	197	[1360]	GETTABLE 	R14 R14 K44 ; R14 := R14["KDriveSlot"]
	198	[1360]	EQ       	0 R1 R14 ; if R1 ~= R14 then PC := 202
	199	[1360]	JMP      	202 ; PC := 202
	200	[1360]	EQ       	1 R0 K40 ; if R0 == 6.000000 then PC := 203
	201	[1360]	JMP      	203 ; PC := 203
	202	[1360]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 203
	203	[1360]	OP_LOADBOOL	R14 1 0 ; R14 := true
	204	[1360]	SETTABLE 	R13 K43 R14 ; R13["mKDriveSuitMode"] := R14
	205	[1361]	TEST     	R12 0 ; if not R12 then PC := 210
	206	[1361]	JMP      	210 ; PC := 210
	207	[1361]	GETGLOBAL	R13 K12 ; R13 := _T
	208	[1361]	GETTABLE 	R13 R13 K43 ; R13 := R13["mKDriveSuitMode"]
	209	[1361]	NOT      	R12 R13 ; R12 := not R13
	210	[1362]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	211	[1362]	GETGLOBAL	R14 K12 ; R14 := _T
	212	[1362]	GETTABLE 	R14 R14 K45 ; R14 := R14["KDriveAvatar"]
	213	[1362]	CALL     	R13 2 2 ; R13 := R13(R14)
	214	[1362]	TEST     	R13 1 ; if R13 then PC := 223
	215	[1362]	JMP      	223 ; PC := 223
	216	[1363]	GETGLOBAL	R13 K12 ; R13 := _T
	217	[1363]	GETTABLE 	R13 R13 K45 ; R13 := R13["KDriveAvatar"]
	218	[1363]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0x768274d6]
	219	[1363]	GETGLOBAL	R15 K12 ; R15 := _T
	220	[1363]	GETTABLE 	R15 R15 K43 ; R15 := R15["mKDriveSuitMode"]
	221	[1363]	OP_LOADBOOL	R16 1 0 ; R16 := true
	222	[1363]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	223	[1366]	GETGLOBAL	R13 K12 ; R13 := _T
	224	[1366]	EQ       	1 R0 K48 ; if R0 == 8.000000 then PC := 227
	225	[1366]	JMP      	227 ; PC := 227
	226	[1366]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 227
	227	[1366]	OP_LOADBOOL	R14 1 0 ; R14 := true
	228	[1366]	SETTABLE 	R13 K47 R14 ; R13["mMechaSuitMode"] := R14
	229	[1367]	TEST     	R12 0 ; if not R12 then PC := 234
	230	[1367]	JMP      	234 ; PC := 234
	231	[1367]	GETGLOBAL	R13 K12 ; R13 := _T
	232	[1367]	GETTABLE 	R13 R13 K47 ; R13 := R13["mMechaSuitMode"]
	233	[1367]	NOT      	R12 R13 ; R12 := not R13
	234	[1368]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	235	[1368]	GETGLOBAL	R14 K12 ; R14 := _T
	236	[1368]	GETTABLE 	R14 R14 K49 ; R14 := R14["MechAvatar"]
	237	[1368]	CALL     	R13 2 2 ; R13 := R13(R14)
	238	[1368]	TEST     	R13 1 ; if R13 then PC := 247
	239	[1368]	JMP      	247 ; PC := 247
	240	[1369]	GETGLOBAL	R13 K12 ; R13 := _T
	241	[1369]	GETTABLE 	R13 R13 K49 ; R13 := R13["MechAvatar"]
	242	[1369]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0x768274d6]
	243	[1369]	GETGLOBAL	R15 K12 ; R15 := _T
	244	[1369]	GETTABLE 	R15 R15 K47 ; R15 := R15["mMechaSuitMode"]
	245	[1369]	OP_LOADBOOL	R16 1 0 ; R16 := true
	246	[1369]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	247	[1372]	SELF     	R13 R9 K42 ; R14 := R9; R13 := R9[0x2abc8ecd]
	248	[1372]	MOVE     	R15 R12 ; R15 := R12
	249	[1372]	CALL     	R13 3 1 ; R13(R14,R15)
	250	[1374]	GETGLOBAL	R13 K12 ; R13 := _T
	251	[1374]	GETTABLE 	R13 R13 K50 ; R13 := R13["MenuSentinel"]
	252	[1375]	GETGLOBAL	R14 K3 ; R14 := 0x7b998233
	253	[1375]	MOVE     	R15 R13 ; R15 := R13
	254	[1375]	CALL     	R14 2 2 ; R14 := R14(R15)
	255	[1375]	TEST     	R14 1 ; if R14 then PC := 264
	256	[1375]	JMP      	264 ; PC := 264
	257	[1376]	EQ       	1 R0 K2 ; if R0 == 1.000000 then PC := 260
	258	[1376]	JMP      	260 ; PC := 260
	259	[1376]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 260
	260	[1376]	OP_LOADBOOL	R14 1 0 ; R14 := true
	261	[1377]	SELF     	R15 R13 K51 ; R16 := R13; R15 := R13[0x044b7be8]
	262	[1377]	MOVE     	R17 R14 ; R17 := R14
	263	[1377]	CALL     	R15 3 1 ; R15(R16,R17)
	264	[1380]	GETGLOBAL	R15 K3 ; R15 := 0x7b998233
	265	[1380]	GETGLOBAL	R16 K12 ; R16 := _T
	266	[1380]	GETTABLE 	R16 R16 K52 ; R16 := R16["suitTable"]
	267	[1380]	CALL     	R15 2 2 ; R15 := R15(R16)
	268	[1380]	TEST     	R15 1 ; if R15 then PC := 276
	269	[1380]	JMP      	276 ; PC := 276
	270	[1381]	GETGLOBAL	R15 K12 ; R15 := _T
	271	[1381]	GETTABLE 	R15 R15 K52 ; R15 := R15["suitTable"]
	272	[1381]	SETTABLE 	R15 K53 K54 ; R15["lerpRotY"] := 0.000000
	273	[1382]	GETGLOBAL	R15 K12 ; R15 := _T
	274	[1382]	GETTABLE 	R15 R15 K52 ; R15 := R15["suitTable"]
	275	[1382]	SETTABLE 	R15 K55 K54 ; R15["lerpRotZ"] := 0.000000
	276	[1385]	EQ       	1 R1 K28 ; if R1 == nil then PC := 279
	277	[1385]	JMP      	279 ; PC := 279
	278	[1385]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 279
	279	[1385]	OP_LOADBOOL	R15 1 0 ; R15 := true
	280	[1386]	EQ       	1 R1 K54 ; if R1 == 0.000000 then PC := 283
	281	[1386]	JMP      	283 ; PC := 283
	282	[1386]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 283
	283	[1386]	OP_LOADBOOL	R16 1 0 ; R16 := true
	284	[1387]	EQ       	1 R1 K31 ; if R1 == 2.000000 then PC := 289
	285	[1387]	JMP      	289 ; PC := 289
	286	[1387]	EQ       	1 R1 K27 ; if R1 == 4.000000 then PC := 289
	287	[1387]	JMP      	289 ; PC := 289
	288	[1387]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 289
	289	[1387]	OP_LOADBOOL	R17 1 0 ; R17 := true
	290	[1388]	EQ       	1 R1 K2 ; if R1 == 1.000000 then PC := 293
	291	[1388]	JMP      	293 ; PC := 293
	292	[1388]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 293
	293	[1388]	OP_LOADBOOL	R18 1 0 ; R18 := true
	294	[1389]	EQ       	1 R1 K56 ; if R1 == 3.000000 then PC := 297
	295	[1389]	JMP      	297 ; PC := 297
	296	[1389]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 297
	297	[1389]	OP_LOADBOOL	R19 1 0 ; R19 := true
	298	[1390]	EQ       	1 R0 K57 ; if R0 == 7.000000 then PC := 301
	299	[1390]	JMP      	301 ; PC := 301
	300	[1390]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 301
	301	[1390]	OP_LOADBOOL	R20 1 0 ; R20 := true
	302	[1391]	LOADNIL  	R21 R21 ; R21 := nil
	303	[1392]	GETUPVAL 	R22 U6 ; R22 := U6
	304	[1392]	MOVE     	R23 R1 ; R23 := R1
	305	[1392]	CALL     	R22 2 2 ; R22 := R22(R23)
	306	[1394]	TEST     	R22 0 ; if not R22 then PC := 681
	307	[1394]	JMP      	681 ; PC := 681
	308	[1395]	GETGLOBAL	R23 K12 ; R23 := _T
	309	[1395]	GETTABLE 	R23 R23 K32 ; R23 := R23["mSpecialSuitMode"]
	310	[1395]	TEST     	R23 0 ; if not R23 then PC := 401
	311	[1395]	JMP      	401 ; PC := 401
	312	[1396]	SELF     	R23 R10 K58 ; R24 := R10; R23 := R10[0xf7d48ee0]
	313	[1396]	CALL     	R23 2 2 ; R23 := R23(R24)
	314	[1397]	LOADNIL  	R24 R24 ; R24 := nil
	315	[1398]	GETGLOBAL	R25 K3 ; R25 := 0x7b998233
	316	[1398]	MOVE     	R26 R23 ; R26 := R23
	317	[1398]	CALL     	R25 2 2 ; R25 := R25(R26)
	318	[1398]	TEST     	R25 1 ; if R25 then PC := 324
	319	[1398]	JMP      	324 ; PC := 324
	320	[1399]	SELF     	R25 R23 K59 ; R26 := R23; R25 := R23[0x4a5d8c86]
	321	[1399]	MOVE     	R27 R1 ; R27 := R1
	322	[1399]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	323	[1399]	GETTABLE 	R24 R25 K60 ; R24 := R25["mItemType"]
	324	[1402]	GETGLOBAL	R25 K3 ; R25 := 0x7b998233
	325	[1402]	GETGLOBAL	R26 K12 ; R26 := _T
	326	[1402]	GETTABLE 	R26 R26 K41 ; R26 := R26["SpecialSuitAvatar"]
	327	[1402]	CALL     	R25 2 2 ; R25 := R25(R26)
	328	[1402]	TEST     	R25 1 ; if R25 then PC := 643
	329	[1402]	JMP      	643 ; PC := 643
	330	[1403]	GETGLOBAL	R25 K12 ; R25 := _T
	331	[1403]	GETTABLE 	R9 R25 K41 ; R9 := R25["SpecialSuitAvatar"]
	332	[1404]	SELF     	R25 R9 K24 ; R26 := R9; R25 := R9[0xde321e6f]
	333	[1404]	CALL     	R25 2 2 ; R25 := R25(R26)
	334	[1404]	MOVE     	R10 R25 ; R10 := R25
	335	[1406]	GETGLOBAL	R25 K3 ; R25 := 0x7b998233
	336	[1406]	MOVE     	R26 R24 ; R26 := R24
	337	[1406]	CALL     	R25 2 2 ; R25 := R25(R26)
	338	[1406]	TEST     	R25 1 ; if R25 then PC := 345
	339	[1406]	JMP      	345 ; PC := 345
	340	[1406]	SELF     	R25 R24 K35 ; R26 := R24; R25 := R24[0xf2deaf69]
	341	[1406]	GETGLOBAL	R27 K61 ; R27 := gPowerSuitType
	342	[1406]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	343	[1406]	TEST     	R25 0 ; if not R25 then PC := 365
	344	[1406]	JMP      	365 ; PC := 365
	345	[1407]	LOADK    	R22 := 3.000000
	346	[1408]	SELF     	R25 R10 K62 ; R26 := R10; R25 := R10[0xe85a2361]
	347	[1408]	MOVE     	R27 R22 ; R27 := R22
	348	[1408]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	349	[1408]	MOVE     	R21 R25 ; R21 := R25
	350	[1410]	GETUPVAL 	R25 U6 ; R25 := U6
	351	[1410]	MOVE     	R26 R1 ; R26 := R1
	352	[1410]	CALL     	R25 2 2 ; R25 := R25(R26)
	353	[1411]	SELF     	R26 R10 K62 ; R27 := R10; R26 := R10[0xe85a2361]
	354	[1411]	MOVE     	R28 R25 ; R28 := R25
	355	[1411]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	356	[1412]	GETGLOBAL	R27 K3 ; R27 := 0x7b998233
	357	[1412]	MOVE     	R28 R26 ; R28 := R26
	358	[1412]	CALL     	R27 2 2 ; R27 := R27(R28)
	359	[1412]	TEST     	R27 1 ; if R27 then PC := 643
	360	[1412]	JMP      	643 ; PC := 643
	361	[1413]	SELF     	R27 R10 K63 ; R28 := R10; R27 := R10[0x0eeedfea]
	362	[1413]	MOVE     	R29 R25 ; R29 := R25
	363	[1413]	CALL     	R27 3 1 ; R27(R28,R29)
	364	[1414]	JMP      	643 ; PC := 643
	365	[1416]	SELF     	R27 R10 K62 ; R28 := R10; R27 := R10[0xe85a2361]
	366	[1416]	MOVE     	R29 R22 ; R29 := R22
	367	[1416]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	368	[1416]	MOVE     	R21 R27 ; R21 := R27
	369	[1418]	LOADNIL  	R27 R27 ; R27 := nil
	370	[1419]	GETGLOBAL	R28 K3 ; R28 := 0x7b998233
	371	[1419]	MOVE     	R29 R21 ; R29 := R21
	372	[1419]	CALL     	R28 2 2 ; R28 := R28(R29)
	373	[1419]	TEST     	R28 1 ; if R28 then PC := 378
	374	[1419]	JMP      	378 ; PC := 378
	375	[1420]	SELF     	R28 R21 K64 ; R29 := R21; R28 := R21[0xcde10c4a]
	376	[1420]	CALL     	R28 2 2 ; R28 := R28(R29)
	377	[1420]	MOVE     	R27 R28 ; R27 := R28
	378	[1423]	EQ       	1 R24 R27 ; if R24 == R27 then PC := 643
	379	[1423]	JMP      	643 ; PC := 643
	380	[1424]	GETGLOBAL	R28 K3 ; R28 := 0x7b998233
	381	[1424]	MOVE     	R29 R21 ; R29 := R21
	382	[1424]	CALL     	R28 2 2 ; R28 := R28(R29)
	383	[1424]	TEST     	R28 1 ; if R28 then PC := 388
	384	[1424]	JMP      	388 ; PC := 388
	385	[1425]	SELF     	R28 R10 K63 ; R29 := R10; R28 := R10[0x0eeedfea]
	386	[1425]	MOVE     	R30 R22 ; R30 := R22
	387	[1425]	CALL     	R28 3 1 ; R28(R29,R30)
	388	[1428]	GETGLOBAL	R28 K3 ; R28 := 0x7b998233
	389	[1428]	MOVE     	R29 R24 ; R29 := R24
	390	[1428]	CALL     	R28 2 2 ; R28 := R28(R29)
	391	[1428]	TEST     	R28 1 ; if R28 then PC := 396
	392	[1428]	JMP      	396 ; PC := 396
	393	[1429]	SELF     	R28 R10 K65 ; R29 := R10; R28 := R10[0x3c8da6e7]
	394	[1429]	MOVE     	R30 R24 ; R30 := R24
	395	[1429]	CALL     	R28 3 1 ; R28(R29,R30)
	396	[1432]	SELF     	R28 R10 K62 ; R29 := R10; R28 := R10[0xe85a2361]
	397	[1432]	MOVE     	R30 R22 ; R30 := R22
	398	[1432]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	399	[1432]	MOVE     	R21 R28 ; R21 := R28
	400	[1435]	JMP      	643 ; PC := 643
	401	[1436]	GETUPVAL 	R28 U5 ; R28 := U5
	402	[1436]	GETTABLE 	R28 R28 K44 ; R28 := R28["KDriveSlot"]
	403	[1436]	EQ       	0 R1 R28 ; if R1 ~= R28 then PC := 421
	404	[1436]	JMP      	421 ; PC := 421
	405	[1436]	EQ       	0 R0 K40 ; if R0 ~= 6.000000 then PC := 421
	406	[1436]	JMP      	421 ; PC := 421
	407	[1437]	GETGLOBAL	R28 K3 ; R28 := 0x7b998233
	408	[1437]	GETGLOBAL	R29 K12 ; R29 := _T
	409	[1437]	GETTABLE 	R29 R29 K45 ; R29 := R29["KDriveAvatar"]
	410	[1437]	CALL     	R28 2 2 ; R28 := R28(R29)
	411	[1437]	TEST     	R28 1 ; if R28 then PC := 643
	412	[1437]	JMP      	643 ; PC := 643
	413	[1438]	GETGLOBAL	R28 K12 ; R28 := _T
	414	[1438]	GETTABLE 	R28 R28 K45 ; R28 := R28["KDriveAvatar"]
	415	[1438]	SELF     	R28 R28 K24 ; R29 := R28; R28 := R28[0xde321e6f]
	416	[1438]	CALL     	R28 2 2 ; R28 := R28(R29)
	417	[1438]	SELF     	R28 R28 K58 ; R29 := R28; R28 := R28[0xf7d48ee0]
	418	[1438]	CALL     	R28 2 2 ; R28 := R28(R29)
	419	[1438]	MOVE     	R21 R28 ; R21 := R28
	420	[1439]	JMP      	643 ; PC := 643
	421	[1440]	EQ       	0 R0 K48 ; if R0 ~= 8.000000 then PC := 500
	422	[1440]	JMP      	500 ; PC := 500
	423	[1441]	GETGLOBAL	R28 K12 ; R28 := _T
	424	[1441]	GETTABLE 	R28 R28 K49 ; R28 := R28["MechAvatar"]
	425	[1442]	GETGLOBAL	R29 K3 ; R29 := 0x7b998233
	426	[1442]	MOVE     	R30 R28 ; R30 := R28
	427	[1442]	CALL     	R29 2 2 ; R29 := R29(R30)
	428	[1442]	TEST     	R29 1 ; if R29 then PC := 643
	429	[1442]	JMP      	643 ; PC := 643
	430	[1443]	SELF     	R29 R28 K24 ; R30 := R28; R29 := R28[0xde321e6f]
	431	[1443]	CALL     	R29 2 2 ; R29 := R29(R30)
	432	[1444]	SELF     	R30 R29 K62 ; R31 := R29; R30 := R29[0xe85a2361]
	433	[1444]	MOVE     	R32 R22 ; R32 := R22
	434	[1444]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	435	[1444]	MOVE     	R21 R30 ; R21 := R30
	436	[1445]	EQ       	1 R1 K54 ; if R1 == 0.000000 then PC := 445
	437	[1445]	JMP      	445 ; PC := 445
	438	[1445]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 445
	439	[1445]	JMP      	445 ; PC := 445
	440	[1446]	SELF     	R30 R29 K66 ; R31 := R29; R30 := R29[0xc69087f6]
	441	[1446]	MOVE     	R32 R22 ; R32 := R22
	442	[1446]	LOADK    	R33 := 0.000000
	443	[1446]	LOADK    	R34 := 2.000000
	444	[1446]	CALL     	R30 5 1 ; R30(R31,R32,R33,R34)
	445	[1449]	SELF     	R30 R29 K58 ; R31 := R29; R30 := R29[0xf7d48ee0]
	446	[1449]	CALL     	R30 2 2 ; R30 := R30(R31)
	447	[1450]	EQ       	1 R1 K38 ; if R1 == 5.000000 then PC := 451
	448	[1450]	JMP      	451 ; PC := 451
	449	[1450]	EQ       	0 R1 K40 ; if R1 ~= 6.000000 then PC := 493
	450	[1450]	JMP      	493 ; PC := 493
	451	[1451]	LOADNIL  	R31 R31 ; R31 := nil
	452	[1452]	GETGLOBAL	R32 K3 ; R32 := 0x7b998233
	453	[1452]	MOVE     	R33 R30 ; R33 := R30
	454	[1452]	CALL     	R32 2 2 ; R32 := R32(R33)
	455	[1452]	TEST     	R32 1 ; if R32 then PC := 461
	456	[1452]	JMP      	461 ; PC := 461
	457	[1453]	SELF     	R32 R30 K59 ; R33 := R30; R32 := R30[0x4a5d8c86]
	458	[1453]	MOVE     	R34 R1 ; R34 := R1
	459	[1453]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	460	[1453]	GETTABLE 	R31 R32 K60 ; R31 := R32["mItemType"]
	461	[1456]	LOADNIL  	R32 R32 ; R32 := nil
	462	[1457]	GETGLOBAL	R33 K3 ; R33 := 0x7b998233
	463	[1457]	MOVE     	R34 R21 ; R34 := R21
	464	[1457]	CALL     	R33 2 2 ; R33 := R33(R34)
	465	[1457]	TEST     	R33 1 ; if R33 then PC := 470
	466	[1457]	JMP      	470 ; PC := 470
	467	[1458]	SELF     	R33 R21 K64 ; R34 := R21; R33 := R21[0xcde10c4a]
	468	[1458]	CALL     	R33 2 2 ; R33 := R33(R34)
	469	[1458]	MOVE     	R32 R33 ; R32 := R33
	470	[1461]	EQ       	1 R31 R32 ; if R31 == R32 then PC := 643
	471	[1461]	JMP      	643 ; PC := 643
	472	[1462]	GETGLOBAL	R33 K3 ; R33 := 0x7b998233
	473	[1462]	MOVE     	R34 R21 ; R34 := R21
	474	[1462]	CALL     	R33 2 2 ; R33 := R33(R34)
	475	[1462]	TEST     	R33 1 ; if R33 then PC := 480
	476	[1462]	JMP      	480 ; PC := 480
	477	[1463]	SELF     	R33 R29 K63 ; R34 := R29; R33 := R29[0x0eeedfea]
	478	[1463]	MOVE     	R35 R22 ; R35 := R22
	479	[1463]	CALL     	R33 3 1 ; R33(R34,R35)
	480	[1466]	GETGLOBAL	R33 K3 ; R33 := 0x7b998233
	481	[1466]	MOVE     	R34 R31 ; R34 := R31
	482	[1466]	CALL     	R33 2 2 ; R33 := R33(R34)
	483	[1466]	TEST     	R33 1 ; if R33 then PC := 488
	484	[1466]	JMP      	488 ; PC := 488
	485	[1467]	SELF     	R33 R29 K65 ; R34 := R29; R33 := R29[0x3c8da6e7]
	486	[1467]	MOVE     	R35 R31 ; R35 := R31
	487	[1467]	CALL     	R33 3 1 ; R33(R34,R35)
	488	[1470]	SELF     	R33 R29 K62 ; R34 := R29; R33 := R29[0xe85a2361]
	489	[1470]	MOVE     	R35 R22 ; R35 := R22
	490	[1470]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	491	[1470]	MOVE     	R21 R33 ; R21 := R33
	492	[1471]	JMP      	643 ; PC := 643
	493	[1473]	GETUPVAL 	R33 U6 ; R33 := U6
	494	[1473]	LOADK    	R34 := 5.000000
	495	[1473]	CALL     	R33 2 2 ; R33 := R33(R34)
	496	[1474]	SELF     	R34 R29 K63 ; R35 := R29; R34 := R29[0x0eeedfea]
	497	[1474]	MOVE     	R36 R33 ; R36 := R33
	498	[1474]	CALL     	R34 3 1 ; R34(R35,R36)
	499	[1476]	JMP      	643 ; PC := 643
	500	[1478]	EQ       	0 R0 K57 ; if R0 ~= 7.000000 then PC := 503
	501	[1478]	JMP      	503 ; PC := 503
	502	[1479]	LOADK    	R22 := 11.000000
	503	[1481]	SELF     	R34 R10 K62 ; R35 := R10; R34 := R10[0xe85a2361]
	504	[1481]	MOVE     	R36 R22 ; R36 := R22
	505	[1481]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	506	[1481]	MOVE     	R21 R34 ; R21 := R34
	507	[1482]	GETGLOBAL	R34 K3 ; R34 := 0x7b998233
	508	[1482]	MOVE     	R35 R21 ; R35 := R21
	509	[1482]	CALL     	R34 2 2 ; R34 := R34(R35)
	510	[1482]	TEST     	R34 0 ; if not R34 then PC := 522
	511	[1482]	JMP      	522 ; PC := 522
	512	[1482]	EQ       	0 R1 K27 ; if R1 ~= 4.000000 then PC := 522
	513	[1482]	JMP      	522 ; PC := 522
	514	[1483]	SELF     	R34 R10 K65 ; R35 := R10; R34 := R10[0x3c8da6e7]
	515	[1483]	GETTABLE 	R36 R2 K67 ; R36 := R2["Type"]
	516	[1483]	MOVE     	R37 R1 ; R37 := R1
	517	[1483]	CALL     	R34 4 1 ; R34(R35,R36,R37)
	518	[1484]	SELF     	R34 R10 K62 ; R35 := R10; R34 := R10[0xe85a2361]
	519	[1484]	MOVE     	R36 R22 ; R36 := R22
	520	[1484]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	521	[1484]	MOVE     	R21 R34 ; R21 := R34
	522	[1487]	SELF     	R34 R10 K58 ; R35 := R10; R34 := R10[0xf7d48ee0]
	523	[1487]	CALL     	R34 2 2 ; R34 := R34(R35)
	524	[1488]	EQ       	1 R1 K38 ; if R1 == 5.000000 then PC := 528
	525	[1488]	JMP      	528 ; PC := 528
	526	[1488]	EQ       	0 R1 K40 ; if R1 ~= 6.000000 then PC := 570
	527	[1488]	JMP      	570 ; PC := 570
	528	[1489]	LOADNIL  	R35 R35 ; R35 := nil
	529	[1490]	GETGLOBAL	R36 K3 ; R36 := 0x7b998233
	530	[1490]	MOVE     	R37 R34 ; R37 := R34
	531	[1490]	CALL     	R36 2 2 ; R36 := R36(R37)
	532	[1490]	TEST     	R36 1 ; if R36 then PC := 538
	533	[1490]	JMP      	538 ; PC := 538
	534	[1491]	SELF     	R36 R34 K59 ; R37 := R34; R36 := R34[0x4a5d8c86]
	535	[1491]	MOVE     	R38 R1 ; R38 := R1
	536	[1491]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	537	[1491]	GETTABLE 	R35 R36 K60 ; R35 := R36["mItemType"]
	538	[1494]	LOADNIL  	R36 R36 ; R36 := nil
	539	[1495]	GETGLOBAL	R37 K3 ; R37 := 0x7b998233
	540	[1495]	MOVE     	R38 R21 ; R38 := R21
	541	[1495]	CALL     	R37 2 2 ; R37 := R37(R38)
	542	[1495]	TEST     	R37 1 ; if R37 then PC := 547
	543	[1495]	JMP      	547 ; PC := 547
	544	[1496]	SELF     	R37 R21 K64 ; R38 := R21; R37 := R21[0xcde10c4a]
	545	[1496]	CALL     	R37 2 2 ; R37 := R37(R38)
	546	[1496]	MOVE     	R36 R37 ; R36 := R37
	547	[1499]	EQ       	1 R35 R36 ; if R35 == R36 then PC := 643
	548	[1499]	JMP      	643 ; PC := 643
	549	[1500]	GETGLOBAL	R37 K3 ; R37 := 0x7b998233
	550	[1500]	MOVE     	R38 R21 ; R38 := R21
	551	[1500]	CALL     	R37 2 2 ; R37 := R37(R38)
	552	[1500]	TEST     	R37 1 ; if R37 then PC := 557
	553	[1500]	JMP      	557 ; PC := 557
	554	[1501]	SELF     	R37 R10 K63 ; R38 := R10; R37 := R10[0x0eeedfea]
	555	[1501]	MOVE     	R39 R22 ; R39 := R22
	556	[1501]	CALL     	R37 3 1 ; R37(R38,R39)
	557	[1504]	GETGLOBAL	R37 K3 ; R37 := 0x7b998233
	558	[1504]	MOVE     	R38 R35 ; R38 := R35
	559	[1504]	CALL     	R37 2 2 ; R37 := R37(R38)
	560	[1504]	TEST     	R37 1 ; if R37 then PC := 565
	561	[1504]	JMP      	565 ; PC := 565
	562	[1505]	SELF     	R37 R10 K65 ; R38 := R10; R37 := R10[0x3c8da6e7]
	563	[1505]	MOVE     	R39 R35 ; R39 := R35
	564	[1505]	CALL     	R37 3 1 ; R37(R38,R39)
	565	[1508]	SELF     	R37 R10 K62 ; R38 := R10; R37 := R10[0xe85a2361]
	566	[1508]	MOVE     	R39 R22 ; R39 := R22
	567	[1508]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	568	[1508]	MOVE     	R21 R37 ; R21 := R37
	569	[1509]	JMP      	643 ; PC := 643
	570	[1511]	EQ       	1 R0 K2 ; if R0 == 1.000000 then PC := 643
	571	[1511]	JMP      	643 ; PC := 643
	572	[1512]	EQ       	0 R1 K54 ; if R1 ~= 0.000000 then PC := 576
	573	[1512]	JMP      	576 ; PC := 576
	574	[1512]	EQ       	0 R0 K57 ; if R0 ~= 7.000000 then PC := 643
	575	[1512]	JMP      	643 ; PC := 643
	576	[1514]	LOADK    	R37 := 5.000000
	577	[1514]	LOADK    	R38 := 6.000000
	578	[1514]	LOADK    	R39 := 1.000000
	579	[1514]	FORPREP  	R37 609 ; R37 -= R39; PC := 609
	580	[1515]	GETUPVAL 	R41 U6 ; R41 := U6
	581	[1515]	MOVE     	R42 R40 ; R42 := R40
	582	[1515]	CALL     	R41 2 2 ; R41 := R41(R42)
	583	[1516]	SELF     	R42 R10 K62 ; R43 := R10; R42 := R10[0xe85a2361]
	584	[1516]	MOVE     	R44 R41 ; R44 := R41
	585	[1516]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	586	[1518]	GETGLOBAL	R43 K3 ; R43 := 0x7b998233
	587	[1518]	MOVE     	R44 R42 ; R44 := R42
	588	[1518]	CALL     	R43 2 2 ; R43 := R43(R44)
	589	[1518]	TEST     	R43 1 ; if R43 then PC := 609
	590	[1518]	JMP      	609 ; PC := 609
	591	[1519]	SELF     	R43 R42 K35 ; R44 := R42; R43 := R42[0xf2deaf69]
	592	[1519]	GETGLOBAL	R45 K68 ; R45 := gLotusCustomAimWeaponType
	593	[1519]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	594	[1519]	TEST     	R43 1 ; if R43 then PC := 609
	595	[1519]	JMP      	609 ; PC := 609
	596	[1520]	GETGLOBAL	R43 K3 ; R43 := 0x7b998233
	597	[1520]	MOVE     	R44 R34 ; R44 := R34
	598	[1520]	CALL     	R43 2 2 ; R43 := R43(R44)
	599	[1520]	TEST     	R43 1 ; if R43 then PC := 606
	600	[1520]	JMP      	606 ; PC := 606
	601	[1520]	SELF     	R43 R34 K35 ; R44 := R34; R43 := R34[0xf2deaf69]
	602	[1520]	GETGLOBAL	R45 K69 ; R45 := 0xf773e9d4
	603	[1520]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	604	[1520]	TEST     	R43 1 ; if R43 then PC := 609
	605	[1520]	JMP      	609 ; PC := 609
	606	[1522]	SELF     	R43 R10 K63 ; R44 := R10; R43 := R10[0x0eeedfea]
	607	[1522]	MOVE     	R45 R41 ; R45 := R41
	608	[1522]	CALL     	R43 3 1 ; R43(R44,R45)
	609	[1514]	FORLOOP  	R37 580 ; R37 += R39; if R37 <= R38 then begin PC := 580; R40 := R37 end
	610	[1526]	GETGLOBAL	R43 K12 ; R43 := _T
	611	[1526]	GETTABLE 	R43 R43 K70 ; R43 := R43["ArsenalState"]
	612	[1526]	EQ       	0 R43 K56 ; if R43 ~= 3.000000 then PC := 643
	613	[1526]	JMP      	643 ; PC := 643
	614	[1527]	EQ       	0 R1 K27 ; if R1 ~= 4.000000 then PC := 629
	615	[1527]	JMP      	629 ; PC := 629
	616	[1527]	GETGLOBAL	R43 K3 ; R43 := 0x7b998233
	617	[1527]	MOVE     	R44 R2 ; R44 := R2
	618	[1527]	CALL     	R43 2 2 ; R43 := R43(R44)
	619	[1527]	TEST     	R43 1 ; if R43 then PC := 629
	620	[1527]	JMP      	629 ; PC := 629
	621	[1528]	SELF     	R43 R10 K71 ; R44 := R10; R43 := R10[0xab98dbf5]
	622	[1528]	GETTABLE 	R45 R2 K72 ; R45 := R2["UID"]
	623	[1528]	MOVE     	R46 R0 ; R46 := R0
	624	[1528]	MOVE     	R47 R1 ; R47 := R1
	625	[1528]	CALL     	R43 5 2 ; R43 := R43(R44,R45,R46,R47)
	626	[1529]	EQ       	1 R43 R21 ; if R43 == R21 then PC := 643
	627	[1529]	JMP      	643 ; PC := 643
	628	[1533]	JMP      	643 ; PC := 643
	629	[1534]	EQ       	0 R1 K31 ; if R1 ~= 2.000000 then PC := 643
	630	[1534]	JMP      	643 ; PC := 643
	631	[1534]	GETGLOBAL	R44 K3 ; R44 := 0x7b998233
	632	[1534]	MOVE     	R45 R2 ; R45 := R2
	633	[1534]	CALL     	R44 2 2 ; R44 := R44(R45)
	634	[1534]	TEST     	R44 1 ; if R44 then PC := 643
	635	[1534]	JMP      	643 ; PC := 643
	636	[1535]	SELF     	R44 R10 K71 ; R45 := R10; R44 := R10[0xab98dbf5]
	637	[1535]	GETTABLE 	R46 R2 K72 ; R46 := R2["UID"]
	638	[1535]	MOVE     	R47 R0 ; R47 := R0
	639	[1535]	MOVE     	R48 R1 ; R48 := R1
	640	[1535]	CALL     	R44 5 2 ; R44 := R44(R45,R46,R47,R48)
	641	[1536]	EQ       	1 R44 R21 ; if R44 == R21 then PC := 643
	642	[1536]	JMP      	643 ; PC := 643
	643	[1546]	GETGLOBAL	R45 K3 ; R45 := 0x7b998233
	644	[1546]	MOVE     	R46 R21 ; R46 := R21
	645	[1546]	CALL     	R45 2 2 ; R45 := R45(R46)
	646	[1546]	TEST     	R45 1 ; if R45 then PC := 681
	647	[1546]	JMP      	681 ; PC := 681
	648	[1547]	TEST     	R16 1 ; if R16 then PC := 654
	649	[1547]	JMP      	654 ; PC := 654
	650	[1547]	SELF     	R45 R21 K35 ; R46 := R21; R45 := R21[0xf2deaf69]
	651	[1547]	GETGLOBAL	R47 K61 ; R47 := gPowerSuitType
	652	[1547]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	653	[1547]	MOVE     	R16 R45 ; R16 := R45
	654	[1548]	TEST     	R17 1 ; if R17 then PC := 669
	655	[1548]	JMP      	669 ; PC := 669
	656	[1548]	SELF     	R45 R21 K35 ; R46 := R21; R45 := R21[0xf2deaf69]
	657	[1548]	GETGLOBAL	R47 K73 ; R47 := 0x7ed0a956
	658	[1548]	LOADK    	R48 K74 ; R48 := "/Lotus/Weapons/Tenno/LotusLongGun"
	659	[1548]	CALL     	R47 2 0 ; R47,... := R47(R48)
	660	[1548]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	661	[1548]	TESTSET  	R17 R45 1 ; if R45 then PC := 669 else R17 := R45 
	662	[1548]	JMP      	669 ; PC := 669
	663	[1548]	SELF     	R45 R21 K35 ; R46 := R21; R45 := R21[0xf2deaf69]
	664	[1548]	GETGLOBAL	R47 K73 ; R47 := 0x7ed0a956
	665	[1548]	LOADK    	R48 K75 ; R48 := "/Lotus/Weapons/Tenno/Archwing/Primary/ArchGun"
	666	[1548]	CALL     	R47 2 0 ; R47,... := R47(R48)
	667	[1548]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	668	[1548]	MOVE     	R17 R45 ; R17 := R45
	669	[1549]	TEST     	R18 1 ; if R18 then PC := 675
	670	[1549]	JMP      	675 ; PC := 675
	671	[1549]	SELF     	R45 R21 K35 ; R46 := R21; R45 := R21[0xf2deaf69]
	672	[1549]	GETGLOBAL	R47 K76 ; R47 := gLotusPistolType
	673	[1549]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	674	[1549]	MOVE     	R18 R45 ; R18 := R45
	675	[1550]	TEST     	R19 1 ; if R19 then PC := 681
	676	[1550]	JMP      	681 ; PC := 681
	677	[1550]	SELF     	R45 R21 K35 ; R46 := R21; R45 := R21[0xf2deaf69]
	678	[1550]	GETGLOBAL	R47 K77 ; R47 := gLotusMeleeWeaponType
	679	[1550]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	680	[1550]	MOVE     	R19 R45 ; R19 := R45
	681	[1554]	EQ       	1 R0 K54 ; if R0 == 0.000000 then PC := 685
	682	[1554]	JMP      	685 ; PC := 685
	683	[1554]	EQ       	0 R0 K56 ; if R0 ~= 3.000000 then PC := 1304
	684	[1554]	JMP      	1304 ; PC := 1304
	685	[1555]	GETGLOBAL	R45 K78 ; R45 := 0x5bced4c4
	686	[1555]	GETTABLE 	R45 R45 K79 ; R45 := R45[0x3eda26fc]
	687	[1555]	GETGLOBAL	R46 K78 ; R46 := 0x5bced4c4
	688	[1555]	GETTABLE 	R46 R46 K80 ; R46 := R46[0xdde5c6a1]
	689	[1555]	GETGLOBAL	R47 K12 ; R47 := _T
	690	[1555]	GETTABLE 	R47 R47 K81 ; R47 := R47["DEFAULT_SUIT_ROTATION"]
	691	[1555]	CALL     	R46 2 0 ; R46,... := R46(R47)
	692	[1555]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	693	[1556]	GETGLOBAL	R46 K78 ; R46 := 0x5bced4c4
	694	[1556]	GETTABLE 	R46 R46 K82 ; R46 := R46[0x00fa6bf1]
	695	[1556]	GETGLOBAL	R47 K78 ; R47 := 0x5bced4c4
	696	[1556]	GETTABLE 	R47 R47 K80 ; R47 := R47[0xdde5c6a1]
	697	[1556]	GETGLOBAL	R48 K12 ; R48 := _T
	698	[1556]	GETTABLE 	R48 R48 K81 ; R48 := R48["DEFAULT_SUIT_ROTATION"]
	699	[1556]	CALL     	R47 2 0 ; R47,... := R47(R48)
	700	[1556]	CALL     	R46 0 2 ; R46 := R46(R47,...)
	701	[1558]	TEST     	R15 0 ; if not R15 then PC := 767
	702	[1558]	JMP      	767 ; PC := 767
	703	[1558]	GETUPVAL 	R47 U7 ; R47 := U7
	704	[1558]	GETUPVAL 	R48 U8 ; R48 := U8
	705	[1558]	GETTABLE 	R48 R48 K83 ; R48 := R48["BROWSING_WAY_TREE"]
	706	[1558]	EQ       	0 R47 R48 ; if R47 ~= R48 then PC := 767
	707	[1558]	JMP      	767 ; PC := 767
	708	[1559]	GETGLOBAL	R47 K84 ; R47 := 0xa421af95
	709	[1559]	LOADK    	R48 := 0.000000
	710	[1559]	LOADK    	R49 K85 ; R49 := 1.700000
	711	[1559]	LOADK    	R50 := 0.000000
	712	[1559]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	713	[1560]	MOVE     	R48 R47 ; R48 := R47
	714	[1561]	GETGLOBAL	R49 K86 ; R49 := 0x89326c93
	715	[1561]	SELF     	R49 R49 K87 ; R50 := R49; R49 := R49[0xfb64e76c]
	716	[1561]	CALL     	R49 2 2 ; R49 := R49(R50)
	717	[1562]	SELF     	R50 R49 K88 ; R51 := R49; R50 := R49[0x5578d98b]
	718	[1562]	CALL     	R50 2 2 ; R50 := R50(R51)
	719	[1563]	GETUPVAL 	R51 U9 ; R51 := U9
	720	[1563]	GETUPVAL 	R52 U10 ; R52 := U10
	721	[1563]	GETTABLE 	R52 R52 K89 ; R52 := R52["UI_MODE_IN_SPACE_SHIP"]
	722	[1563]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 744
	723	[1563]	JMP      	744 ; PC := 744
	724	[1563]	GETGLOBAL	R51 K3 ; R51 := 0x7b998233
	725	[1563]	MOVE     	R52 R50 ; R52 := R50
	726	[1563]	CALL     	R51 2 2 ; R51 := R51(R52)
	727	[1563]	TEST     	R51 1 ; if R51 then PC := 744
	728	[1563]	JMP      	744 ; PC := 744
	729	[1564]	SELF     	R51 R50 K90 ; R52 := R50; R51 := R50[0x003c792f]
	730	[1564]	GETGLOBAL	R53 K91 ; R53 := 0x0469f296
	731	[1564]	LOADK    	R54 K92 ; R54 := "GAME_C1_HEAD1"
	732	[1564]	CALL     	R53 2 0 ; R53,... := R53(R54)
	733	[1564]	CALL     	R51 0 2 ; R51 := R51(R52,...)
	734	[1564]	MOVE     	R47 R51 ; R47 := R51
	735	[1565]	GETTABLE 	R51 R47 K93 ; R51 := R47["y"]
	736	[1565]	SUB      	R51 R51 K94 ; R51 := R51 - 0.020000
	737	[1565]	SETTABLE 	R47 K93 R51 ; R47["y"] := R51
	738	[1566]	GETGLOBAL	R51 K95 ; R51 := 0xf6c6e505
	739	[1566]	SELF     	R52 R50 K96 ; R53 := R50; R52 := R50[0x5280b883]
	740	[1566]	CALL     	R52 2 0 ; R52,... := R52(R53)
	741	[1566]	CALL     	R51 0 2 ; R51 := R51(R52,...)
	742	[1566]	MUL      	R48 R51 K97 ; R48 := R51 * 0.740000
	743	[1566]	JMP      	758 ; PC := 758
	744	[1568]	SELF     	R51 R9 K90 ; R52 := R9; R51 := R9[0x003c792f]
	745	[1568]	GETGLOBAL	R53 K91 ; R53 := 0x0469f296
	746	[1568]	LOADK    	R54 K92 ; R54 := "GAME_C1_HEAD1"
	747	[1568]	CALL     	R53 2 0 ; R53,... := R53(R54)
	748	[1568]	CALL     	R51 0 2 ; R51 := R51(R52,...)
	749	[1568]	MOVE     	R47 R51 ; R47 := R51
	750	[1569]	GETTABLE 	R51 R47 K93 ; R51 := R47["y"]
	751	[1569]	SUB      	R51 R51 K98 ; R51 := R51 - 0.050000
	752	[1569]	SETTABLE 	R47 K93 R51 ; R47["y"] := R51
	753	[1570]	GETGLOBAL	R51 K95 ; R51 := 0xf6c6e505
	754	[1570]	SELF     	R52 R9 K96 ; R53 := R9; R52 := R9[0x5280b883]
	755	[1570]	CALL     	R52 2 0 ; R52,... := R52(R53)
	756	[1570]	CALL     	R51 0 2 ; R51 := R51(R52,...)
	757	[1570]	MOVE     	R48 R51 ; R48 := R51
	758	[1573]	SETTABLE 	R48 K93 K54 ; R48["y"] := 0.000000
	759	[1575]	ADD      	R6 R47 R48 ; R6 := R47 + R48
	760	[1576]	GETGLOBAL	R51 K99 ; R51 := 0x20b7f774
	761	[1576]	MOVE     	R52 R6 ; R52 := R6
	762	[1576]	MOVE     	R53 R47 ; R53 := R47
	763	[1576]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	764	[1576]	MOVE     	R7 R51 ; R7 := R51
	765	[1577]	LOADK    	R8 := 35.000000
	766	[1577]	JMP      	2162 ; PC := 2162
	767	[1578]	TEST     	R16 1 ; if R16 then PC := 771
	768	[1578]	JMP      	771 ; PC := 771
	769	[1578]	TEST     	R15 0 ; if not R15 then PC := 887
	770	[1578]	JMP      	887 ; PC := 887
	771	[1579]	GETUPVAL 	R51 U11 ; R51 := U11
	772	[1579]	GETUPVAL 	R52 U12 ; R52 := U12
	773	[1579]	GETTABLE 	R52 R52 K100 ; R52 := R52["FALSE"]
	774	[1579]	EQ       	1 R51 R52 ; if R51 == R52 then PC := 801
	775	[1579]	JMP      	801 ; PC := 801
	776	[1581]	GETGLOBAL	R51 K84 ; R51 := 0xa421af95
	777	[1581]	MUL      	R52 K101 R45 ; R52 := 1.500000 * R45
	778	[1581]	LOADK    	R53 K102 ; R53 := 1.400000
	779	[1581]	MUL      	R54 K101 R46 ; R54 := 1.500000 * R46
	780	[1581]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	781	[1582]	GETGLOBAL	R52 K6 ; R52 := mCameraTable
	782	[1582]	GETTABLE 	R52 R52 K7 ; R52 := R52["rootNodeEntity"]
	783	[1582]	SELF     	R52 R52 K5 ; R53 := R52; R52 := R52[0xd1586535]
	784	[1582]	CALL     	R52 2 2 ; R52 := R52(R53)
	785	[1582]	ADD      	R6 R52 R51 ; R6 := R52 + R51
	786	[1583]	GETGLOBAL	R52 K84 ; R52 := 0xa421af95
	787	[1583]	LOADK    	R53 := 0.000000
	788	[1583]	LOADK    	R54 K103 ; R54 := 1.300000
	789	[1583]	LOADK    	R55 := 0.000000
	790	[1583]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	791	[1584]	GETGLOBAL	R53 K99 ; R53 := 0x20b7f774
	792	[1584]	MOVE     	R54 R6 ; R54 := R6
	793	[1584]	GETGLOBAL	R55 K6 ; R55 := mCameraTable
	794	[1584]	GETTABLE 	R55 R55 K7 ; R55 := R55["rootNodeEntity"]
	795	[1584]	SELF     	R55 R55 K5 ; R56 := R55; R55 := R55[0xd1586535]
	796	[1584]	CALL     	R55 2 2 ; R55 := R55(R56)
	797	[1584]	ADD      	R55 R55 R52 ; R55 := R55 + R52
	798	[1584]	CALL     	R53 3 2 ; R53 := R53(R54,R55)
	799	[1584]	MOVE     	R7 R53 ; R7 := R53
	800	[1584]	JMP      	882 ; PC := 882
	801	[1586]	LOADK    	R53 := 0.000000
	802	[1587]	GETGLOBAL	R54 K3 ; R54 := 0x7b998233
	803	[1587]	MOVE     	R55 R21 ; R55 := R21
	804	[1587]	CALL     	R54 2 2 ; R54 := R54(R55)
	805	[1587]	TEST     	R54 1 ; if R54 then PC := 858
	806	[1587]	JMP      	858 ; PC := 858
	807	[1588]	SELF     	R54 R21 K104 ; R55 := R21; R54 := R21[0x0ad758cb]
	808	[1588]	CALL     	R54 2 2 ; R54 := R54(R55)
	809	[1590]	LOADK    	R55 := 0.000000
	810	[1590]	SUB      	R56 R54 K2 ; R56 := R54 - 1.000000
	811	[1590]	LOADK    	R57 := 1.000000
	812	[1590]	FORPREP  	R55 857 ; R55 -= R57; PC := 857
	813	[1591]	SELF     	R59 R21 K105 ; R60 := R21; R59 := R21[0xfef27732]
	814	[1591]	MOVE     	R61 R58 ; R61 := R58
	815	[1591]	CALL     	R59 3 2 ; R59 := R59(R60,R61)
	816	[1592]	GETGLOBAL	R60 K3 ; R60 := 0x7b998233
	817	[1592]	MOVE     	R61 R59 ; R61 := R59
	818	[1592]	CALL     	R60 2 2 ; R60 := R60(R61)
	819	[1592]	TEST     	R60 1 ; if R60 then PC := 857
	820	[1592]	JMP      	857 ; PC := 857
	821	[1592]	SELF     	R60 R59 K35 ; R61 := R59; R60 := R59[0xf2deaf69]
	822	[1592]	GETGLOBAL	R62 K106 ; R62 := 0x9166d883
	823	[1592]	CALL     	R60 3 2 ; R60 := R60(R61,R62)
	824	[1592]	TEST     	R60 0 ; if not R60 then PC := 857
	825	[1592]	JMP      	857 ; PC := 857
	826	[1592]	SELF     	R60 R59 K107 ; R61 := R59; R60 := R59[0xf4f49d1b]
	827	[1592]	CALL     	R60 2 2 ; R60 := R60(R61)
	828	[1592]	EQ       	0 R60 K38 ; if R60 ~= 5.000000 then PC := 857
	829	[1592]	JMP      	857 ; PC := 857
	830	[1593]	NEWTABLE 	R60 3 0 ; R60 := {}
	831	[1594]	GETGLOBAL	R61 K73 ; R61 := 0x7ed0a956
	832	[1594]	LOADK    	R62 K108 ; R62 := "/Lotus/Upgrades/Skins/Fairy/FairyNobleAnims"
	833	[1594]	CALL     	R61 2 2 ; R61 := R61(R62)
	834	[1595]	GETGLOBAL	R62 K73 ; R62 := 0x7ed0a956
	835	[1595]	LOADK    	R63 K109 ; R63 := "/Lotus/Upgrades/Skins/Fairy/FairyAgileAnims"
	836	[1595]	CALL     	R62 2 2 ; R62 := R62(R63)
	837	[1596]	GETGLOBAL	R63 K73 ; R63 := 0x7ed0a956
	838	[1596]	LOADK    	R64 K110 ; R64 := "/Lotus/Upgrades/Skins/Sentient/SentientAgileAnims"
	839	[1596]	CALL     	R63 2 2 ; R63 := R63(R64)
	840	[1597]	GETGLOBAL	R64 K73 ; R64 := 0x7ed0a956
	841	[1597]	LOADK    	R65 K111 ; R65 := "/Lotus/Upgrades/Skins/Sentient/SentientNobleAnims"
	842	[1597]	CALL     	R64 2 0 ; R64,... := R64(R65)
	843	[1598]	SETLIST  	R60 0 1 ; R60[(1-1)*FPF+i] := R(60+i), 1 <= i <= 0
	844	[1599]	LOADK    	R61 := 1.000000
	845	[1599]	LEN      	R62 R60 ; R62 := # R60
	846	[1599]	LOADK    	R63 := 1.000000
	847	[1599]	FORPREP  	R61 855 ; R61 -= R63; PC := 855
	848	[1600]	SELF     	R65 R59 K35 ; R66 := R59; R65 := R59[0xf2deaf69]
	849	[1600]	GETTABLE 	R67 R60 R64 ; R67 := R60[R64]
	850	[1600]	CALL     	R65 3 2 ; R65 := R65(R66,R67)
	851	[1600]	TEST     	R65 0 ; if not R65 then PC := 855
	852	[1600]	JMP      	855 ; PC := 855
	853	[1601]	LOADK    	R53 K112 ; R53 := 0.300000
	854	[1603]	JMP      	858 ; PC := 858
	855	[1599]	FORLOOP  	R61 848 ; R61 += R63; if R61 <= R62 then begin PC := 848; R64 := R61 end
	856	[1607]	JMP      	858 ; PC := 858
	857	[1590]	FORLOOP  	R55 813 ; R55 += R57; if R55 <= R56 then begin PC := 813; R58 := R55 end
	858	[1612]	GETGLOBAL	R65 K84 ; R65 := 0xa421af95
	859	[1612]	MUL      	R66 K113 R45 ; R66 := 3.500000 * R45
	860	[1612]	ADD      	R67 K114 R53 ; R67 := 1.100000 + R53
	861	[1612]	MUL      	R68 K113 R46 ; R68 := 3.500000 * R46
	862	[1612]	CALL     	R65 4 2 ; R65 := R65(R66,R67,R68)
	863	[1613]	GETGLOBAL	R66 K6 ; R66 := mCameraTable
	864	[1613]	GETTABLE 	R66 R66 K7 ; R66 := R66["rootNodeEntity"]
	865	[1613]	SELF     	R66 R66 K5 ; R67 := R66; R66 := R66[0xd1586535]
	866	[1613]	CALL     	R66 2 2 ; R66 := R66(R67)
	867	[1613]	ADD      	R6 R66 R65 ; R6 := R66 + R65
	868	[1614]	GETGLOBAL	R66 K84 ; R66 := 0xa421af95
	869	[1614]	LOADK    	R67 := 0.000000
	870	[1614]	ADD      	R68 K115 R53 ; R68 := 0.900000 + R53
	871	[1614]	LOADK    	R69 := 0.000000
	872	[1614]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	873	[1615]	GETGLOBAL	R67 K99 ; R67 := 0x20b7f774
	874	[1615]	MOVE     	R68 R6 ; R68 := R6
	875	[1615]	GETGLOBAL	R69 K6 ; R69 := mCameraTable
	876	[1615]	GETTABLE 	R69 R69 K7 ; R69 := R69["rootNodeEntity"]
	877	[1615]	SELF     	R69 R69 K5 ; R70 := R69; R69 := R69[0xd1586535]
	878	[1615]	CALL     	R69 2 2 ; R69 := R69(R70)
	879	[1615]	ADD      	R69 R69 R66 ; R69 := R69 + R66
	880	[1615]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	881	[1615]	MOVE     	R7 R67 ; R7 := R67
	882	[1617]	GETTABLE 	R67 R7 K21 ; R67 := R7["heading"]
	883	[1617]	SUB      	R67 R67 K57 ; R67 := R67 - 7.000000
	884	[1617]	SETTABLE 	R7 K21 R67 ; R7["heading"] := R67
	885	[1618]	LOADK    	R8 := 35.000000
	886	[1618]	JMP      	2162 ; PC := 2162
	887	[1619]	GETGLOBAL	R67 K116 ; R67 := mLists
	888	[1619]	GETTABLE 	R67 R67 K117 ; R67 := R67["mCosmeticsList"]
	889	[1619]	GETTABLE 	R67 R67 K118 ; R67 := R67["mCurrLevel"]
	890	[1619]	GETGLOBAL	R68 K116 ; R68 := mLists
	891	[1619]	GETTABLE 	R68 R68 K117 ; R68 := R68["mCosmeticsList"]
	892	[1619]	GETTABLE 	R68 R68 K119 ; R68 := R68["HOLSTER_STYLE"]
	893	[1619]	EQ       	1 R67 R68 ; if R67 == R68 then PC := 903
	894	[1619]	JMP      	903 ; PC := 903
	895	[1619]	GETGLOBAL	R67 K116 ; R67 := mLists
	896	[1619]	GETTABLE 	R67 R67 K117 ; R67 := R67["mCosmeticsList"]
	897	[1619]	GETTABLE 	R67 R67 K118 ; R67 := R67["mCurrLevel"]
	898	[1619]	GETGLOBAL	R68 K116 ; R68 := mLists
	899	[1619]	GETTABLE 	R68 R68 K117 ; R68 := R68["mCosmeticsList"]
	900	[1619]	GETTABLE 	R68 R68 K120 ; R68 := R68["HOLSTER_CUSTOMIZATION"]
	901	[1619]	EQ       	0 R67 R68 ; if R67 ~= R68 then PC := 926
	902	[1619]	JMP      	926 ; PC := 926
	903	[1620]	SELF     	R67 R9 K90 ; R68 := R9; R67 := R9[0x003c792f]
	904	[1620]	GETGLOBAL	R69 K91 ; R69 := 0x0469f296
	905	[1620]	LOADK    	R70 K121 ; R70 := "GAME_C1_RIFLEATTACH"
	906	[1620]	CALL     	R69 2 0 ; R69,... := R69(R70)
	907	[1620]	CALL     	R67 0 2 ; R67 := R67(R68,...)
	908	[1622]	GETGLOBAL	R68 K84 ; R68 := 0xa421af95
	909	[1622]	MUL      	R69 K31 R45 ; R69 := 2.000000 * R45
	910	[1622]	LOADK    	R70 := 0.000000
	911	[1622]	MUL      	R71 K31 R46 ; R71 := 2.000000 * R46
	912	[1622]	CALL     	R68 4 2 ; R68 := R68(R69,R70,R71)
	913	[1623]	ADD      	R6 R67 R68 ; R6 := R67 + R68
	914	[1624]	GETGLOBAL	R69 K84 ; R69 := 0xa421af95
	915	[1624]	CALL     	R69 1 2 ; R69 := R69()
	916	[1625]	GETGLOBAL	R70 K99 ; R70 := 0x20b7f774
	917	[1625]	MOVE     	R71 R6 ; R71 := R6
	918	[1625]	ADD      	R72 R67 R69 ; R72 := R67 + R69
	919	[1625]	CALL     	R70 3 2 ; R70 := R70(R71,R72)
	920	[1625]	MOVE     	R7 R70 ; R7 := R70
	921	[1626]	GETTABLE 	R70 R7 K21 ; R70 := R7["heading"]
	922	[1626]	SUB      	R70 R70 K38 ; R70 := R70 - 5.000000
	923	[1626]	SETTABLE 	R7 K21 R70 ; R7["heading"] := R70
	924	[1627]	LOADK    	R8 := 40.000000
	925	[1627]	JMP      	2162 ; PC := 2162
	926	[1628]	TEST     	R17 0 ; if not R17 then PC := 986
	927	[1628]	JMP      	986 ; PC := 986
	928	[1629]	OP_LOADBOOL	R70 1 0 ; R70 := true
	929	[1630]	EQ       	1 R21 K28 ; if R21 == nil then PC := 938
	930	[1630]	JMP      	938 ; PC := 938
	931	[1631]	SELF     	R71 R21 K122 ; R72 := R21; R71 := R21[0x988945eb]
	932	[1631]	CALL     	R71 2 2 ; R71 := R71(R72)
	933	[1631]	TESTSET  	R70 R71 1 ; if R71 then PC := 938 else R70 := R71 
	934	[1631]	JMP      	938 ; PC := 938
	935	[1631]	SELF     	R71 R21 K123 ; R72 := R21; R71 := R21[0xeead91ce]
	936	[1631]	CALL     	R71 2 2 ; R71 := R71(R72)
	937	[1631]	NOT      	R70 R71 ; R70 := not R71
	938	[1634]	SELF     	R71 R9 K90 ; R72 := R9; R71 := R9[0x003c792f]
	939	[1634]	GETGLOBAL	R73 K91 ; R73 := 0x0469f296
	940	[1634]	LOADK    	R74 K124 ; R74 := "GAME_R1_WEAPON1"
	941	[1634]	CALL     	R73 2 0 ; R73,... := R73(R74)
	942	[1634]	CALL     	R71 0 2 ; R71 := R71(R72,...)
	943	[1635]	TEST     	R70 0 ; if not R70 then PC := 952
	944	[1635]	JMP      	952 ; PC := 952
	945	[1636]	SELF     	R72 R9 K90 ; R73 := R9; R72 := R9[0x003c792f]
	946	[1636]	GETGLOBAL	R74 K91 ; R74 := 0x0469f296
	947	[1636]	LOADK    	R75 K125 ; R75 := "GAME_L1_WEAPON1"
	948	[1636]	CALL     	R74 2 0 ; R74,... := R74(R75)
	949	[1636]	CALL     	R72 0 2 ; R72 := R72(R73,...)
	950	[1636]	ADD      	R72 R71 R72 ; R72 := R71 + R72
	951	[1636]	DIV      	R71 R72 K31 ; R71 := R72 / 2.000000
	952	[1639]	GETUPVAL 	R72 U1 ; R72 := U1
	953	[1639]	GETTABLE 	R72 R72 K126 ; R72 := R72[0x06d055f9]
	954	[1639]	EQ       	1 R1 K27 ; if R1 == 4.000000 then PC := 957
	955	[1639]	JMP      	957 ; PC := 957
	956	[1639]	OP_LOADBOOL	R73 0 1 ; R73 := false; PC := 957
	957	[1639]	OP_LOADBOOL	R73 1 0 ; R73 := true
	958	[1639]	LOADK    	R74 := 3.000000
	959	[1639]	LOADK    	R75 := 2.000000
	960	[1639]	CALL     	R72 4 2 ; R72 := R72(R73,R74,R75)
	961	[1640]	GETGLOBAL	R73 K84 ; R73 := 0xa421af95
	962	[1640]	MUL      	R74 K31 R45 ; R74 := 2.000000 * R45
	963	[1640]	LOADK    	R75 := 0.000000
	964	[1640]	MUL      	R76 R72 R46 ; R76 := R72 * R46
	965	[1640]	CALL     	R73 4 2 ; R73 := R73(R74,R75,R76)
	966	[1641]	ADD      	R6 R71 R73 ; R6 := R71 + R73
	967	[1642]	GETGLOBAL	R74 K84 ; R74 := 0xa421af95
	968	[1642]	CALL     	R74 1 2 ; R74 := R74()
	969	[1643]	GETGLOBAL	R75 K99 ; R75 := 0x20b7f774
	970	[1643]	MOVE     	R76 R6 ; R76 := R6
	971	[1643]	ADD      	R77 R71 R74 ; R77 := R71 + R74
	972	[1643]	CALL     	R75 3 2 ; R75 := R75(R76,R77)
	973	[1643]	MOVE     	R7 R75 ; R7 := R75
	974	[1644]	GETTABLE 	R75 R7 K21 ; R75 := R7["heading"]
	975	[1644]	SUB      	R75 R75 K38 ; R75 := R75 - 5.000000
	976	[1644]	SETTABLE 	R7 K21 R75 ; R7["heading"] := R75
	977	[1645]	LOADK    	R8 := 40.000000
	978	[1647]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 2162
	979	[1647]	JMP      	2162 ; PC := 2162
	980	[1648]	SELF     	R75 R10 K66 ; R76 := R10; R75 := R10[0xc69087f6]
	981	[1648]	MOVE     	R77 R22 ; R77 := R22
	982	[1648]	LOADK    	R78 := 0.000000
	983	[1648]	LOADK    	R79 := 2.000000
	984	[1648]	CALL     	R75 5 1 ; R75(R76,R77,R78,R79)
	985	[1649]	JMP      	2162 ; PC := 2162
	986	[1650]	TEST     	R18 0 ; if not R18 then PC := 1050
	987	[1650]	JMP      	1050 ; PC := 1050
	988	[1651]	OP_LOADBOOL	R75 0 0 ; R75 := false
	989	[1652]	EQ       	1 R21 K28 ; if R21 == nil then PC := 1005
	990	[1652]	JMP      	1005 ; PC := 1005
	991	[1653]	SELF     	R76 R21 K122 ; R77 := R21; R76 := R21[0x988945eb]
	992	[1653]	CALL     	R76 2 2 ; R76 := R76(R77)
	993	[1653]	TESTSET  	R75 R76 1 ; if R76 then PC := 1005 else R75 := R76 
	994	[1653]	JMP      	1005 ; PC := 1005
	995	[1653]	SELF     	R76 R21 K123 ; R77 := R21; R76 := R21[0xeead91ce]
	996	[1653]	CALL     	R76 2 2 ; R76 := R76(R77)
	997	[1653]	TEST     	R76 0 ; if not R76 then PC := 1004
	998	[1653]	JMP      	1004 ; PC := 1004
	999	[1653]	SELF     	R76 R21 K127 ; R77 := R21; R76 := R21[0xb9700060]
	1000	[1653]	CALL     	R76 2 2 ; R76 := R76(R77)
	1001	[1653]	MOVE     	R75 R76 ; R75 := R76
	1002	[1653]	JMP      	1005 ; PC := 1005
	1003	[1653]	OP_LOADBOOL	R75 0 1 ; R75 := false; PC := 1004
	1004	[1653]	OP_LOADBOOL	R75 1 0 ; R75 := true
	1005	[1656]	SELF     	R76 R9 K90 ; R77 := R9; R76 := R9[0x003c792f]
	1006	[1656]	GETGLOBAL	R78 K91 ; R78 := 0x0469f296
	1007	[1656]	LOADK    	R79 K124 ; R79 := "GAME_R1_WEAPON1"
	1008	[1656]	CALL     	R78 2 0 ; R78,... := R78(R79)
	1009	[1656]	CALL     	R76 0 2 ; R76 := R76(R77,...)
	1010	[1657]	GETGLOBAL	R77 K84 ; R77 := 0xa421af95
	1011	[1657]	MUL      	R78 K128 R45 ; R78 := 1.450000 * R45
	1012	[1657]	LOADK    	R79 := 0.000000
	1013	[1657]	MUL      	R80 K128 R46 ; R80 := 1.450000 * R46
	1014	[1657]	CALL     	R77 4 2 ; R77 := R77(R78,R79,R80)
	1015	[1658]	TEST     	R75 0 ; if not R75 then PC := 1030
	1016	[1658]	JMP      	1030 ; PC := 1030
	1017	[1659]	SELF     	R78 R9 K90 ; R79 := R9; R78 := R9[0x003c792f]
	1018	[1659]	GETGLOBAL	R80 K91 ; R80 := 0x0469f296
	1019	[1659]	LOADK    	R81 K125 ; R81 := "GAME_L1_WEAPON1"
	1020	[1659]	CALL     	R80 2 0 ; R80,... := R80(R81)
	1021	[1659]	CALL     	R78 0 2 ; R78 := R78(R79,...)
	1022	[1659]	ADD      	R78 R76 R78 ; R78 := R76 + R78
	1023	[1659]	DIV      	R76 R78 K31 ; R76 := R78 / 2.000000
	1024	[1660]	GETGLOBAL	R78 K84 ; R78 := 0xa421af95
	1025	[1660]	MUL      	R79 K31 R45 ; R79 := 2.000000 * R45
	1026	[1660]	LOADK    	R80 := 0.000000
	1027	[1660]	MUL      	R81 K31 R46 ; R81 := 2.000000 * R46
	1028	[1660]	CALL     	R78 4 2 ; R78 := R78(R79,R80,R81)
	1029	[1660]	MOVE     	R77 R78 ; R77 := R78
	1030	[1663]	ADD      	R6 R76 R77 ; R6 := R76 + R77
	1031	[1664]	GETGLOBAL	R78 K84 ; R78 := 0xa421af95
	1032	[1664]	CALL     	R78 1 2 ; R78 := R78()
	1033	[1665]	GETGLOBAL	R79 K99 ; R79 := 0x20b7f774
	1034	[1665]	MOVE     	R80 R6 ; R80 := R6
	1035	[1665]	ADD      	R81 R76 R78 ; R81 := R76 + R78
	1036	[1665]	CALL     	R79 3 2 ; R79 := R79(R80,R81)
	1037	[1665]	MOVE     	R7 R79 ; R7 := R79
	1038	[1666]	GETTABLE 	R79 R7 K21 ; R79 := R7["heading"]
	1039	[1666]	SUB      	R79 R79 K38 ; R79 := R79 - 5.000000
	1040	[1666]	SETTABLE 	R7 K21 R79 ; R7["heading"] := R79
	1041	[1667]	LOADK    	R8 := 40.000000
	1042	[1669]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 2162
	1043	[1669]	JMP      	2162 ; PC := 2162
	1044	[1670]	SELF     	R79 R10 K66 ; R80 := R10; R79 := R10[0xc69087f6]
	1045	[1670]	MOVE     	R81 R22 ; R81 := R22
	1046	[1670]	LOADK    	R82 := 0.000000
	1047	[1670]	LOADK    	R83 := 2.000000
	1048	[1670]	CALL     	R79 5 1 ; R79(R80,R81,R82,R83)
	1049	[1671]	JMP      	2162 ; PC := 2162
	1050	[1672]	TEST     	R20 0 ; if not R20 then PC := 1082
	1051	[1672]	JMP      	1082 ; PC := 1082
	1052	[1673]	SELF     	R79 R9 K90 ; R80 := R9; R79 := R9[0x003c792f]
	1053	[1673]	GETGLOBAL	R81 K91 ; R81 := 0x0469f296
	1054	[1673]	LOADK    	R82 K124 ; R82 := "GAME_R1_WEAPON1"
	1055	[1673]	CALL     	R81 2 0 ; R81,... := R81(R82)
	1056	[1673]	CALL     	R79 0 2 ; R79 := R79(R80,...)
	1057	[1674]	GETGLOBAL	R80 K84 ; R80 := 0xa421af95
	1058	[1674]	MUL      	R81 K128 R45 ; R81 := 1.450000 * R45
	1059	[1674]	LOADK    	R82 := 0.000000
	1060	[1674]	MUL      	R83 K128 R46 ; R83 := 1.450000 * R46
	1061	[1674]	CALL     	R80 4 2 ; R80 := R80(R81,R82,R83)
	1062	[1676]	ADD      	R6 R79 R80 ; R6 := R79 + R80
	1063	[1677]	GETGLOBAL	R81 K84 ; R81 := 0xa421af95
	1064	[1677]	CALL     	R81 1 2 ; R81 := R81()
	1065	[1678]	GETGLOBAL	R82 K99 ; R82 := 0x20b7f774
	1066	[1678]	MOVE     	R83 R6 ; R83 := R6
	1067	[1678]	ADD      	R84 R79 R81 ; R84 := R79 + R81
	1068	[1678]	CALL     	R82 3 2 ; R82 := R82(R83,R84)
	1069	[1678]	MOVE     	R7 R82 ; R7 := R82
	1070	[1679]	GETTABLE 	R82 R7 K21 ; R82 := R7["heading"]
	1071	[1679]	SUB      	R82 R82 K38 ; R82 := R82 - 5.000000
	1072	[1679]	SETTABLE 	R7 K21 R82 ; R7["heading"] := R82
	1073	[1680]	LOADK    	R8 := 40.000000
	1074	[1682]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 2162
	1075	[1682]	JMP      	2162 ; PC := 2162
	1076	[1683]	SELF     	R82 R10 K66 ; R83 := R10; R82 := R10[0xc69087f6]
	1077	[1683]	MOVE     	R84 R22 ; R84 := R22
	1078	[1683]	LOADK    	R85 := 0.000000
	1079	[1683]	LOADK    	R86 := 2.000000
	1080	[1683]	CALL     	R82 5 1 ; R82(R83,R84,R85,R86)
	1081	[1684]	JMP      	2162 ; PC := 2162
	1082	[1685]	TEST     	R19 0 ; if not R19 then PC := 2162
	1083	[1685]	JMP      	2162 ; PC := 2162
	1084	[1686]	LOADK    	R82 := -1.000000
	1085	[1687]	EQ       	1 R21 K28 ; if R21 == nil then PC := 1090
	1086	[1687]	JMP      	1090 ; PC := 1090
	1087	[1688]	SELF     	R83 R21 K129 ; R84 := R21; R83 := R21[0xa779cba7]
	1088	[1688]	CALL     	R83 2 2 ; R83 := R83(R84)
	1089	[1688]	MOVE     	R82 R83 ; R82 := R83
	1090	[1690]	OP_LOADBOOL	R83 1 0 ; R83 := true
	1091	[1691]	EQ       	1 R82 K27 ; if R82 == 4.000000 then PC := 1095
	1092	[1691]	JMP      	1095 ; PC := 1095
	1093	[1691]	EQ       	0 R82 K57 ; if R82 ~= 7.000000 then PC := 1096
	1094	[1691]	JMP      	1096 ; PC := 1096
	1095	[1692]	OP_LOADBOOL	R83 0 0 ; R83 := false
	1096	[1695]	SELF     	R84 R9 K90 ; R85 := R9; R84 := R9[0x003c792f]
	1097	[1695]	GETGLOBAL	R86 K91 ; R86 := 0x0469f296
	1098	[1695]	LOADK    	R87 K124 ; R87 := "GAME_R1_WEAPON1"
	1099	[1695]	CALL     	R86 2 0 ; R86,... := R86(R87)
	1100	[1695]	CALL     	R84 0 2 ; R84 := R84(R85,...)
	1101	[1696]	TEST     	R83 0 ; if not R83 then PC := 1110
	1102	[1696]	JMP      	1110 ; PC := 1110
	1103	[1697]	SELF     	R85 R9 K90 ; R86 := R9; R85 := R9[0x003c792f]
	1104	[1697]	GETGLOBAL	R87 K91 ; R87 := 0x0469f296
	1105	[1697]	LOADK    	R88 K125 ; R88 := "GAME_L1_WEAPON1"
	1106	[1697]	CALL     	R87 2 0 ; R87,... := R87(R88)
	1107	[1697]	CALL     	R85 0 2 ; R85 := R85(R86,...)
	1108	[1697]	ADD      	R85 R84 R85 ; R85 := R84 + R85
	1109	[1697]	DIV      	R84 R85 K31 ; R84 := R85 / 2.000000
	1110	[1699]	GETGLOBAL	R85 K84 ; R85 := 0xa421af95
	1111	[1699]	MUL      	R86 K31 R45 ; R86 := 2.000000 * R45
	1112	[1699]	LOADK    	R87 := 0.000000
	1113	[1699]	MUL      	R88 K31 R46 ; R88 := 2.000000 * R46
	1114	[1699]	CALL     	R85 4 2 ; R85 := R85(R86,R87,R88)
	1115	[1700]	GETGLOBAL	R86 K84 ; R86 := 0xa421af95
	1116	[1700]	CALL     	R86 1 2 ; R86 := R86()
	1117	[1701]	GETGLOBAL	R87 K12 ; R87 := _T
	1118	[1701]	GETTABLE 	R87 R87 K32 ; R87 := R87["mSpecialSuitMode"]
	1119	[1701]	TEST     	R87 0 ; if not R87 then PC := 1134
	1120	[1701]	JMP      	1134 ; PC := 1134
	1121	[1703]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1122	[1703]	MUL      	R88 K31 R45 ; R88 := 2.000000 * R45
	1123	[1703]	LOADK    	R89 := -0.500000
	1124	[1703]	MUL      	R90 K56 R46 ; R90 := 3.000000 * R46
	1125	[1703]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1126	[1703]	MOVE     	R85 R87 ; R85 := R87
	1127	[1704]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1128	[1704]	LOADK    	R88 := 0.000000
	1129	[1704]	LOADK    	R89 K130 ; R89 := -0.200000
	1130	[1704]	LOADK    	R90 := 0.000000
	1131	[1704]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1132	[1704]	MOVE     	R86 R87 ; R86 := R87
	1133	[1704]	JMP      	1198 ; PC := 1198
	1134	[1705]	EQ       	1 R82 K131 ; if R82 == 9.000000 then PC := 1138
	1135	[1705]	JMP      	1138 ; PC := 1138
	1136	[1705]	EQ       	0 R82 K132 ; if R82 ~= 11.000000 then PC := 1151
	1137	[1705]	JMP      	1151 ; PC := 1151
	1138	[1706]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1139	[1706]	MUL      	R88 K133 R45 ; R88 := 2.500000 * R45
	1140	[1706]	LOADK    	R89 := 0.500000
	1141	[1706]	MUL      	R90 K133 R46 ; R90 := 2.500000 * R46
	1142	[1706]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1143	[1706]	MOVE     	R85 R87 ; R85 := R87
	1144	[1707]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1145	[1707]	LOADK    	R88 := 0.000000
	1146	[1707]	LOADK    	R89 K112 ; R89 := 0.300000
	1147	[1707]	LOADK    	R90 := 0.000000
	1148	[1707]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1149	[1707]	MOVE     	R86 R87 ; R86 := R87
	1150	[1707]	JMP      	1198 ; PC := 1198
	1151	[1708]	EQ       	0 R82 K56 ; if R82 ~= 3.000000 then PC := 1160
	1152	[1708]	JMP      	1160 ; PC := 1160
	1153	[1709]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1154	[1709]	MUL      	R88 K133 R45 ; R88 := 2.500000 * R45
	1155	[1709]	LOADK    	R89 := 0.000000
	1156	[1709]	MUL      	R90 K133 R46 ; R90 := 2.500000 * R46
	1157	[1709]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1158	[1709]	MOVE     	R85 R87 ; R85 := R87
	1159	[1709]	JMP      	1198 ; PC := 1198
	1160	[1710]	EQ       	1 R82 K134 ; if R82 == 15.000000 then PC := 1168
	1161	[1710]	JMP      	1168 ; PC := 1168
	1162	[1710]	EQ       	1 R82 K135 ; if R82 == 13.000000 then PC := 1168
	1163	[1710]	JMP      	1168 ; PC := 1168
	1164	[1710]	EQ       	1 R82 K38 ; if R82 == 5.000000 then PC := 1168
	1165	[1710]	JMP      	1168 ; PC := 1168
	1166	[1710]	EQ       	0 R82 K136 ; if R82 ~= 23.000000 then PC := 1181
	1167	[1710]	JMP      	1181 ; PC := 1181
	1168	[1711]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1169	[1711]	MUL      	R88 K31 R45 ; R88 := 2.000000 * R45
	1170	[1711]	LOADK    	R89 := -0.500000
	1171	[1711]	MUL      	R90 K31 R46 ; R90 := 2.000000 * R46
	1172	[1711]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1173	[1711]	MOVE     	R85 R87 ; R85 := R87
	1174	[1712]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1175	[1712]	LOADK    	R88 := 0.000000
	1176	[1712]	LOADK    	R89 K130 ; R89 := -0.200000
	1177	[1712]	LOADK    	R90 := 0.000000
	1178	[1712]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1179	[1712]	MOVE     	R86 R87 ; R86 := R87
	1180	[1712]	JMP      	1198 ; PC := 1198
	1181	[1713]	EQ       	0 R82 K27 ; if R82 ~= 4.000000 then PC := 1190
	1182	[1713]	JMP      	1190 ; PC := 1190
	1183	[1714]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1184	[1714]	MUL      	R88 K101 R45 ; R88 := 1.500000 * R45
	1185	[1714]	LOADK    	R89 := 0.000000
	1186	[1714]	MUL      	R90 K101 R46 ; R90 := 1.500000 * R46
	1187	[1714]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1188	[1714]	MOVE     	R85 R87 ; R85 := R87
	1189	[1714]	JMP      	1198 ; PC := 1198
	1190	[1715]	EQ       	0 R82 K137 ; if R82 ~= 18.000000 then PC := 1198
	1191	[1715]	JMP      	1198 ; PC := 1198
	1192	[1716]	GETGLOBAL	R87 K84 ; R87 := 0xa421af95
	1193	[1716]	MUL      	R88 K31 R45 ; R88 := 2.000000 * R45
	1194	[1716]	LOADK    	R89 K112 ; R89 := 0.300000
	1195	[1716]	MUL      	R90 K31 R46 ; R90 := 2.000000 * R46
	1196	[1716]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	1197	[1716]	MOVE     	R85 R87 ; R85 := R87
	1198	[1718]	ADD      	R6 R84 R85 ; R6 := R84 + R85
	1199	[1719]	GETGLOBAL	R87 K99 ; R87 := 0x20b7f774
	1200	[1719]	MOVE     	R88 R6 ; R88 := R6
	1201	[1719]	ADD      	R89 R84 R86 ; R89 := R84 + R86
	1202	[1719]	CALL     	R87 3 2 ; R87 := R87(R88,R89)
	1203	[1719]	MOVE     	R7 R87 ; R7 := R87
	1204	[1720]	EQ       	0 R82 K27 ; if R82 ~= 4.000000 then PC := 1210
	1205	[1720]	JMP      	1210 ; PC := 1210
	1206	[1721]	GETTABLE 	R87 R7 K21 ; R87 := R7["heading"]
	1207	[1721]	SUB      	R87 R87 K138 ; R87 := R87 - 10.000000
	1208	[1721]	SETTABLE 	R7 K21 R87 ; R7["heading"] := R87
	1209	[1721]	JMP      	1244 ; PC := 1244
	1210	[1722]	EQ       	1 R82 K134 ; if R82 == 15.000000 then PC := 1244
	1211	[1722]	JMP      	1244 ; PC := 1244
	1212	[1722]	EQ       	1 R82 K135 ; if R82 == 13.000000 then PC := 1244
	1213	[1722]	JMP      	1244 ; PC := 1244
	1214	[1722]	EQ       	1 R82 K131 ; if R82 == 9.000000 then PC := 1244
	1215	[1722]	JMP      	1244 ; PC := 1244
	1216	[1722]	EQ       	1 R82 K132 ; if R82 == 11.000000 then PC := 1244
	1217	[1722]	JMP      	1244 ; PC := 1244
	1218	[1722]	EQ       	1 R82 K38 ; if R82 == 5.000000 then PC := 1244
	1219	[1722]	JMP      	1244 ; PC := 1244
	1220	[1722]	EQ       	1 R82 K136 ; if R82 == 23.000000 then PC := 1244
	1221	[1722]	JMP      	1244 ; PC := 1244
	1222	[1723]	LOADNIL  	R87 R87 ; R87 := nil
	1223	[1724]	EQ       	1 R21 K28 ; if R21 == nil then PC := 1235
	1224	[1724]	JMP      	1235 ; PC := 1235
	1225	[1725]	SELF     	R88 R21 K139 ; R89 := R21; R88 := R21[0xe3ca779e]
	1226	[1725]	CALL     	R88 2 2 ; R88 := R88(R89)
	1227	[1726]	GETGLOBAL	R89 K3 ; R89 := 0x7b998233
	1228	[1726]	MOVE     	R90 R88 ; R90 := R88
	1229	[1726]	CALL     	R89 2 2 ; R89 := R89(R90)
	1230	[1726]	TEST     	R89 1 ; if R89 then PC := 1235
	1231	[1726]	JMP      	1235 ; PC := 1235
	1232	[1727]	SELF     	R89 R88 K140 ; R90 := R88; R89 := R88[0xed4e0128]
	1233	[1727]	CALL     	R89 2 2 ; R89 := R89(R90)
	1234	[1727]	MOVE     	R87 R89 ; R87 := R89
	1235	[1731]	EQ       	0 R87 K141 ; if R87 ~= "SwordWhipMeleeTree" then PC := 1241
	1236	[1731]	JMP      	1241 ; PC := 1241
	1237	[1732]	GETTABLE 	R89 R7 K21 ; R89 := R7["heading"]
	1238	[1732]	ADD      	R89 R89 K31 ; R89 := R89 + 2.000000
	1239	[1732]	SETTABLE 	R7 K21 R89 ; R7["heading"] := R89
	1240	[1732]	JMP      	1244 ; PC := 1244
	1241	[1734]	GETTABLE 	R89 R7 K21 ; R89 := R7["heading"]
	1242	[1734]	SUB      	R89 R89 K57 ; R89 := R89 - 7.000000
	1243	[1734]	SETTABLE 	R7 K21 R89 ; R7["heading"] := R89
	1244	[1737]	LOADK    	R8 := 40.000000
	1245	[1739]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 1288
	1246	[1739]	JMP      	1288 ; PC := 1288
	1247	[1739]	GETGLOBAL	R89 K116 ; R89 := mLists
	1248	[1739]	GETTABLE 	R89 R89 K117 ; R89 := R89["mCosmeticsList"]
	1249	[1739]	GETTABLE 	R89 R89 K118 ; R89 := R89["mCurrLevel"]
	1250	[1739]	GETGLOBAL	R90 K116 ; R90 := mLists
	1251	[1739]	GETTABLE 	R90 R90 K117 ; R90 := R90["mCosmeticsList"]
	1252	[1739]	GETTABLE 	R90 R90 K119 ; R90 := R90["HOLSTER_STYLE"]
	1253	[1739]	EQ       	1 R89 R90 ; if R89 == R90 then PC := 1288
	1254	[1739]	JMP      	1288 ; PC := 1288
	1255	[1739]	GETGLOBAL	R89 K116 ; R89 := mLists
	1256	[1739]	GETTABLE 	R89 R89 K117 ; R89 := R89["mCosmeticsList"]
	1257	[1739]	GETTABLE 	R89 R89 K118 ; R89 := R89["mCurrLevel"]
	1258	[1739]	GETGLOBAL	R90 K116 ; R90 := mLists
	1259	[1739]	GETTABLE 	R90 R90 K117 ; R90 := R90["mCosmeticsList"]
	1260	[1739]	GETTABLE 	R90 R90 K120 ; R90 := R90["HOLSTER_CUSTOMIZATION"]
	1261	[1739]	EQ       	1 R89 R90 ; if R89 == R90 then PC := 1288
	1262	[1739]	JMP      	1288 ; PC := 1288
	1263	[1740]	SELF     	R89 R10 K66 ; R90 := R10; R89 := R10[0xc69087f6]
	1264	[1740]	MOVE     	R91 R22 ; R91 := R22
	1265	[1740]	LOADK    	R92 := 0.000000
	1266	[1740]	LOADK    	R93 := 2.000000
	1267	[1740]	CALL     	R89 5 1 ; R89(R90,R91,R92,R93)
	1268	[1742]	GETGLOBAL	R89 K3 ; R89 := 0x7b998233
	1269	[1742]	MOVE     	R90 R21 ; R90 := R21
	1270	[1742]	CALL     	R89 2 2 ; R89 := R89(R90)
	1271	[1742]	TEST     	R89 1 ; if R89 then PC := 1288
	1272	[1742]	JMP      	1288 ; PC := 1288
	1273	[1743]	SELF     	R89 R10 K142 ; R90 := R10; R89 := R10[0xfaa69527]
	1274	[1743]	LOADK    	R91 := 0.000000
	1275	[1743]	CALL     	R89 3 1 ; R89(R90,R91)
	1276	[1745]	GETUPVAL 	R89 U13 ; R89 := U13
	1277	[1745]	MOVE     	R90 R9 ; R90 := R9
	1278	[1745]	MOVE     	R91 R0 ; R91 := R0
	1279	[1745]	MOVE     	R92 R1 ; R92 := R1
	1280	[1745]	CALL     	R89 4 2 ; R89 := R89(R90,R91,R92)
	1281	[1745]	TEST     	R89 0 ; if not R89 then PC := 1288
	1282	[1745]	JMP      	1288 ; PC := 1288
	1283	[1746]	SELF     	R89 R21 K143 ; R90 := R21; R89 := R21[0x167f2e76]
	1284	[1746]	GETGLOBAL	R91 K91 ; R91 := 0x0469f296
	1285	[1746]	LOADK    	R92 K144 ; R92 := "WeaponForceOpen"
	1286	[1746]	CALL     	R91 2 0 ; R91,... := R91(R92)
	1287	[1746]	CALL     	R89 0 1 ; R89(R90,...)
	1288	[1751]	SELF     	R89 R10 K25 ; R90 := R10; R89 := R10[0x8205b296]
	1289	[1751]	LOADK    	R91 := 3.000000
	1290	[1751]	CALL     	R89 3 2 ; R89 := R89(R90,R91)
	1291	[1752]	EQ       	1 R89 R21 ; if R89 == R21 then PC := 2162
	1292	[1752]	JMP      	2162 ; PC := 2162
	1293	[1752]	GETGLOBAL	R90 K3 ; R90 := 0x7b998233
	1294	[1752]	MOVE     	R91 R89 ; R91 := R89
	1295	[1752]	CALL     	R90 2 2 ; R90 := R90(R91)
	1296	[1752]	TEST     	R90 1 ; if R90 then PC := 2162
	1297	[1752]	JMP      	2162 ; PC := 2162
	1298	[1753]	SELF     	R90 R10 K145 ; R91 := R10; R90 := R10[0x54732cc7]
	1299	[1753]	SELF     	R92 R89 K146 ; R93 := R89; R92 := R89[0xb5d09c91]
	1300	[1753]	CALL     	R92 2 2 ; R92 := R92(R93)
	1301	[1753]	LOADK    	R93 := 2.000000
	1302	[1753]	CALL     	R90 4 1 ; R90(R91,R92,R93)
	1303	[1755]	JMP      	2162 ; PC := 2162
	1304	[1756]	EQ       	0 R0 K40 ; if R0 ~= 6.000000 then PC := 1460
	1305	[1756]	JMP      	1460 ; PC := 1460
	1306	[1757]	GETGLOBAL	R90 K78 ; R90 := 0x5bced4c4
	1307	[1757]	GETTABLE 	R90 R90 K79 ; R90 := R90[0x3eda26fc]
	1308	[1757]	GETGLOBAL	R91 K78 ; R91 := 0x5bced4c4
	1309	[1757]	GETTABLE 	R91 R91 K80 ; R91 := R91[0xdde5c6a1]
	1310	[1757]	GETGLOBAL	R92 K12 ; R92 := _T
	1311	[1757]	GETTABLE 	R92 R92 K147 ; R92 := R92["ARCHWING_DEFAULT_ROTATION"]
	1312	[1757]	CALL     	R91 2 0 ; R91,... := R91(R92)
	1313	[1757]	CALL     	R90 0 2 ; R90 := R90(R91,...)
	1314	[1758]	GETGLOBAL	R91 K78 ; R91 := 0x5bced4c4
	1315	[1758]	GETTABLE 	R91 R91 K82 ; R91 := R91[0x00fa6bf1]
	1316	[1758]	GETGLOBAL	R92 K78 ; R92 := 0x5bced4c4
	1317	[1758]	GETTABLE 	R92 R92 K80 ; R92 := R92[0xdde5c6a1]
	1318	[1758]	GETGLOBAL	R93 K12 ; R93 := _T
	1319	[1758]	GETTABLE 	R93 R93 K147 ; R93 := R93["ARCHWING_DEFAULT_ROTATION"]
	1320	[1758]	CALL     	R92 2 0 ; R92,... := R92(R93)
	1321	[1758]	CALL     	R91 0 2 ; R91 := R91(R92,...)
	1322	[1759]	GETGLOBAL	R92 K84 ; R92 := 0xa421af95
	1323	[1759]	MUL      	R93 K148 R90 ; R93 := 3.750000 * R90
	1324	[1759]	LOADK    	R94 := 0.750000
	1325	[1759]	MUL      	R95 K148 R91 ; R95 := 3.750000 * R91
	1326	[1759]	CALL     	R92 4 2 ; R92 := R92(R93,R94,R95)
	1327	[1760]	GETGLOBAL	R93 K6 ; R93 := mCameraTable
	1328	[1760]	GETTABLE 	R93 R93 K7 ; R93 := R93["rootNodeEntity"]
	1329	[1760]	SELF     	R93 R93 K5 ; R94 := R93; R93 := R93[0xd1586535]
	1330	[1760]	CALL     	R93 2 2 ; R93 := R93(R94)
	1331	[1761]	GETGLOBAL	R94 K3 ; R94 := 0x7b998233
	1332	[1761]	GETGLOBAL	R95 K12 ; R95 := _T
	1333	[1761]	GETTABLE 	R95 R95 K45 ; R95 := R95["KDriveAvatar"]
	1334	[1761]	CALL     	R94 2 2 ; R94 := R94(R95)
	1335	[1761]	TEST     	R94 1 ; if R94 then PC := 1343
	1336	[1761]	JMP      	1343 ; PC := 1343
	1337	[1762]	GETGLOBAL	R94 K12 ; R94 := _T
	1338	[1762]	GETTABLE 	R94 R94 K45 ; R94 := R94["KDriveAvatar"]
	1339	[1762]	SELF     	R94 R94 K5 ; R95 := R94; R94 := R94[0xd1586535]
	1340	[1762]	CALL     	R94 2 2 ; R94 := R94(R95)
	1341	[1762]	MOVE     	R93 R94 ; R93 := R94
	1342	[1762]	JMP      	1355 ; PC := 1355
	1343	[1764]	GETUPVAL 	R94 U14 ; R94 := U14
	1344	[1764]	GETTABLE 	R94 R94 K149 ; R94 := R94[0x09b8fbee]
	1345	[1764]	MOVE     	R95 R93 ; R95 := R93
	1346	[1764]	CALL     	R94 2 2 ; R94 := R94(R95)
	1347	[1765]	GETGLOBAL	R95 K3 ; R95 := 0x7b998233
	1348	[1765]	MOVE     	R96 R94 ; R96 := R94
	1349	[1765]	CALL     	R95 2 2 ; R95 := R95(R96)
	1350	[1765]	TEST     	R95 1 ; if R95 then PC := 1355
	1351	[1765]	JMP      	1355 ; PC := 1355
	1352	[1766]	SELF     	R95 R94 K5 ; R96 := R94; R95 := R94[0xd1586535]
	1353	[1766]	CALL     	R95 2 2 ; R95 := R95(R96)
	1354	[1766]	MOVE     	R93 R95 ; R93 := R95
	1355	[1770]	GETGLOBAL	R95 K3 ; R95 := 0x7b998233
	1356	[1770]	MOVE     	R96 R21 ; R96 := R21
	1357	[1770]	CALL     	R95 2 2 ; R95 := R95(R96)
	1358	[1770]	TEST     	R95 1 ; if R95 then PC := 1363
	1359	[1770]	JMP      	1363 ; PC := 1363
	1360	[1770]	SELF     	R95 R21 K150 ; R96 := R21; R95 := R21[0xaa69837b]
	1361	[1770]	CALL     	R95 2 2 ; R95 := R95(R96)
	1362	[1770]	JMP      	1365 ; PC := 1365
	1363	[1770]	OP_LOADBOOL	R95 0 1 ; R95 := false; PC := 1364
	1364	[1770]	OP_LOADBOOL	R95 1 0 ; R95 := true
	1365	[1772]	TEST     	R95 0 ; if not R95 then PC := 1373
	1366	[1772]	JMP      	1373 ; PC := 1373
	1367	[1773]	GETGLOBAL	R96 K84 ; R96 := 0xa421af95
	1368	[1773]	LOADK    	R97 := 0.000000
	1369	[1773]	LOADK    	R98 K130 ; R98 := -0.200000
	1370	[1773]	LOADK    	R99 := 0.000000
	1371	[1773]	CALL     	R96 4 2 ; R96 := R96(R97,R98,R99)
	1372	[1773]	ADD      	R93 R93 R96 ; R93 := R93 + R96
	1373	[1776]	ADD      	R6 R93 R92 ; R6 := R93 + R92
	1374	[1778]	GETGLOBAL	R96 K12 ; R96 := _T
	1375	[1778]	GETTABLE 	R96 R96 K52 ; R96 := R96["suitTable"]
	1376	[1778]	SETTABLE 	R96 K55 K151 ; R96["lerpRotZ"] := 180.000000
	1377	[1780]	GETGLOBAL	R96 K84 ; R96 := 0xa421af95
	1378	[1780]	LOADK    	R97 := 0.250000
	1379	[1780]	LOADK    	R98 K152 ; R98 := 0.200000
	1380	[1780]	LOADK    	R99 K153 ; R99 := -0.300000
	1381	[1780]	CALL     	R96 4 2 ; R96 := R96(R97,R98,R99)
	1382	[1781]	GETUPVAL 	R97 U9 ; R97 := U9
	1383	[1781]	GETUPVAL 	R98 U10 ; R98 := U10
	1384	[1781]	GETTABLE 	R98 R98 K89 ; R98 := R98["UI_MODE_IN_SPACE_SHIP"]
	1385	[1781]	EQ       	0 R97 R98 ; if R97 ~= R98 then PC := 1389
	1386	[1781]	JMP      	1389 ; PC := 1389
	1387	[1782]	SETTABLE 	R96 K154 K153 ; R96["x"] := -0.300000
	1388	[1782]	JMP      	1399 ; PC := 1399
	1389	[1783]	GETUPVAL 	R97 U10 ; R97 := U10
	1390	[1783]	GETTABLE 	R97 R97 K155 ; R97 := R97[0xcf1fcba4]
	1391	[1783]	CALL     	R97 1 2 ; R97 := R97()
	1392	[1783]	TEST     	R97 0 ; if not R97 then PC := 1398
	1393	[1783]	JMP      	1398 ; PC := 1398
	1394	[1784]	SETTABLE 	R96 K154 K112 ; R96["x"] := 0.300000
	1395	[1785]	SETTABLE 	R96 K156 K157 ; R96["z"] := -1.000000
	1396	[1786]	SETTABLE 	R96 K93 K158 ; R96["y"] := -0.100000
	1397	[1786]	JMP      	1399 ; PC := 1399
	1398	[1789]	SETTABLE 	R96 K154 K153 ; R96["x"] := -0.300000
	1399	[1794]	GETGLOBAL	R97 K99 ; R97 := 0x20b7f774
	1400	[1794]	MOVE     	R98 R6 ; R98 := R6
	1401	[1794]	ADD      	R99 R93 R96 ; R99 := R93 + R96
	1402	[1794]	CALL     	R97 3 2 ; R97 := R97(R98,R99)
	1403	[1794]	MOVE     	R7 R97 ; R7 := R97
	1404	[1795]	LOADK    	R8 := 35.000000
	1405	[1796]	GETUPVAL 	R97 U11 ; R97 := U11
	1406	[1796]	GETUPVAL 	R98 U12 ; R98 := U12
	1407	[1796]	GETTABLE 	R98 R98 K100 ; R98 := R98["FALSE"]
	1408	[1796]	EQ       	1 R97 R98 ; if R97 == R98 then PC := 1447
	1409	[1796]	JMP      	1447 ; PC := 1447
	1410	[1797]	TEST     	R95 0 ; if not R95 then PC := 1419
	1411	[1797]	JMP      	1419 ; PC := 1419
	1412	[1798]	GETGLOBAL	R97 K12 ; R97 := _T
	1413	[1798]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1414	[1798]	SETTABLE 	R97 K53 K54 ; R97["lerpRotY"] := 0.000000
	1415	[1799]	GETGLOBAL	R97 K12 ; R97 := _T
	1416	[1799]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1417	[1799]	SETTABLE 	R97 K55 K54 ; R97["lerpRotZ"] := 0.000000
	1418	[1799]	JMP      	2162 ; PC := 2162
	1419	[1800]	GETUPVAL 	R97 U10 ; R97 := U10
	1420	[1800]	GETTABLE 	R97 R97 K155 ; R97 := R97[0xcf1fcba4]
	1421	[1800]	CALL     	R97 1 2 ; R97 := R97()
	1422	[1800]	TEST     	R97 0 ; if not R97 then PC := 1428
	1423	[1800]	JMP      	1428 ; PC := 1428
	1424	[1801]	GETGLOBAL	R97 K12 ; R97 := _T
	1425	[1801]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1426	[1801]	SETTABLE 	R97 K53 K159 ; R97["lerpRotY"] := 270.000000
	1427	[1801]	JMP      	2162 ; PC := 2162
	1428	[1803]	GETUPVAL 	R97 U9 ; R97 := U9
	1429	[1803]	GETUPVAL 	R98 U10 ; R98 := U10
	1430	[1803]	GETTABLE 	R98 R98 K89 ; R98 := R98["UI_MODE_IN_SPACE_SHIP"]
	1431	[1803]	EQ       	0 R97 R98 ; if R97 ~= R98 then PC := 1440
	1432	[1803]	JMP      	1440 ; PC := 1440
	1433	[1804]	GETGLOBAL	R97 K12 ; R97 := _T
	1434	[1804]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1435	[1804]	SETTABLE 	R97 K53 K159 ; R97["lerpRotY"] := 270.000000
	1436	[1805]	GETGLOBAL	R97 K12 ; R97 := _T
	1437	[1805]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1438	[1805]	SETTABLE 	R97 K55 K54 ; R97["lerpRotZ"] := 0.000000
	1439	[1805]	JMP      	2162 ; PC := 2162
	1440	[1807]	GETGLOBAL	R97 K12 ; R97 := _T
	1441	[1807]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1442	[1807]	SETTABLE 	R97 K53 K159 ; R97["lerpRotY"] := 270.000000
	1443	[1808]	GETGLOBAL	R97 K12 ; R97 := _T
	1444	[1808]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1445	[1808]	SETTABLE 	R97 K55 K159 ; R97["lerpRotZ"] := 270.000000
	1446	[1809]	JMP      	2162 ; PC := 2162
	1447	[1811]	TEST     	R95 0 ; if not R95 then PC := 1456
	1448	[1811]	JMP      	1456 ; PC := 1456
	1449	[1812]	GETGLOBAL	R97 K12 ; R97 := _T
	1450	[1812]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1451	[1812]	SETTABLE 	R97 K53 K54 ; R97["lerpRotY"] := 0.000000
	1452	[1813]	GETGLOBAL	R97 K12 ; R97 := _T
	1453	[1813]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1454	[1813]	SETTABLE 	R97 K55 K54 ; R97["lerpRotZ"] := 0.000000
	1455	[1813]	JMP      	2162 ; PC := 2162
	1456	[1815]	GETGLOBAL	R97 K12 ; R97 := _T
	1457	[1815]	GETTABLE 	R97 R97 K52 ; R97 := R97["suitTable"]
	1458	[1815]	SETTABLE 	R97 K53 K160 ; R97["lerpRotY"] := -70.000000
	1459	[1817]	JMP      	2162 ; PC := 2162
	1460	[1818]	EQ       	0 R0 K31 ; if R0 ~= 2.000000 then PC := 1632
	1461	[1818]	JMP      	1632 ; PC := 1632
	1462	[1819]	GETGLOBAL	R97 K78 ; R97 := 0x5bced4c4
	1463	[1819]	GETTABLE 	R97 R97 K79 ; R97 := R97[0x3eda26fc]
	1464	[1819]	GETGLOBAL	R98 K78 ; R98 := 0x5bced4c4
	1465	[1819]	GETTABLE 	R98 R98 K80 ; R98 := R98[0xdde5c6a1]
	1466	[1819]	GETGLOBAL	R99 K12 ; R99 := _T
	1467	[1819]	GETTABLE 	R99 R99 K147 ; R99 := R99["ARCHWING_DEFAULT_ROTATION"]
	1468	[1819]	CALL     	R98 2 0 ; R98,... := R98(R99)
	1469	[1819]	CALL     	R97 0 2 ; R97 := R97(R98,...)
	1470	[1820]	GETGLOBAL	R98 K78 ; R98 := 0x5bced4c4
	1471	[1820]	GETTABLE 	R98 R98 K82 ; R98 := R98[0x00fa6bf1]
	1472	[1820]	GETGLOBAL	R99 K78 ; R99 := 0x5bced4c4
	1473	[1820]	GETTABLE 	R99 R99 K80 ; R99 := R99[0xdde5c6a1]
	1474	[1820]	GETGLOBAL	R100 K12 ; R100 := _T
	1475	[1820]	GETTABLE 	R100 R100 K147 ; R100 := R100["ARCHWING_DEFAULT_ROTATION"]
	1476	[1820]	CALL     	R99 2 0 ; R99,... := R99(R100)
	1477	[1820]	CALL     	R98 0 2 ; R98 := R98(R99,...)
	1478	[1821]	TEST     	R16 0 ; if not R16 then PC := 1517
	1479	[1821]	JMP      	1517 ; PC := 1517
	1480	[1822]	GETGLOBAL	R99 K84 ; R99 := 0xa421af95
	1481	[1822]	MUL      	R100 K148 R97 ; R100 := 3.750000 * R97
	1482	[1822]	LOADK    	R101 := 0.250000
	1483	[1822]	MUL      	R102 K148 R98 ; R102 := 3.750000 * R98
	1484	[1822]	CALL     	R99 4 2 ; R99 := R99(R100,R101,R102)
	1485	[1823]	GETGLOBAL	R100 K6 ; R100 := mCameraTable
	1486	[1823]	GETTABLE 	R100 R100 K7 ; R100 := R100["rootNodeEntity"]
	1487	[1823]	SELF     	R100 R100 K5 ; R101 := R100; R100 := R100[0xd1586535]
	1488	[1823]	CALL     	R100 2 2 ; R100 := R100(R101)
	1489	[1823]	ADD      	R6 R100 R99 ; R6 := R100 + R99
	1490	[1824]	GETGLOBAL	R100 K84 ; R100 := 0xa421af95
	1491	[1824]	LOADK    	R101 := 0.250000
	1492	[1824]	LOADK    	R102 := 0.000000
	1493	[1824]	LOADK    	R103 := 0.000000
	1494	[1824]	CALL     	R100 4 2 ; R100 := R100(R101,R102,R103)
	1495	[1825]	GETUPVAL 	R101 U9 ; R101 := U9
	1496	[1825]	GETUPVAL 	R102 U10 ; R102 := U10
	1497	[1825]	GETTABLE 	R102 R102 K89 ; R102 := R102["UI_MODE_IN_SPACE_SHIP"]
	1498	[1825]	EQ       	0 R101 R102 ; if R101 ~= R102 then PC := 1506
	1499	[1825]	JMP      	1506 ; PC := 1506
	1500	[1826]	GETGLOBAL	R101 K84 ; R101 := 0xa421af95
	1501	[1826]	LOADK    	R102 := -0.250000
	1502	[1826]	LOADK    	R103 := 0.000000
	1503	[1826]	LOADK    	R104 := 0.000000
	1504	[1826]	CALL     	R101 4 2 ; R101 := R101(R102,R103,R104)
	1505	[1826]	MOVE     	R100 R101 ; R100 := R101
	1506	[1828]	GETGLOBAL	R101 K99 ; R101 := 0x20b7f774
	1507	[1828]	MOVE     	R102 R6 ; R102 := R6
	1508	[1828]	GETGLOBAL	R103 K6 ; R103 := mCameraTable
	1509	[1828]	GETTABLE 	R103 R103 K7 ; R103 := R103["rootNodeEntity"]
	1510	[1828]	SELF     	R103 R103 K5 ; R104 := R103; R103 := R103[0xd1586535]
	1511	[1828]	CALL     	R103 2 2 ; R103 := R103(R104)
	1512	[1828]	ADD      	R103 R103 R100 ; R103 := R103 + R100
	1513	[1828]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	1514	[1828]	MOVE     	R7 R101 ; R7 := R101
	1515	[1829]	LOADK    	R8 := 35.000000
	1516	[1829]	JMP      	2162 ; PC := 2162
	1517	[1830]	TEST     	R17 0 ; if not R17 then PC := 1565
	1518	[1830]	JMP      	1565 ; PC := 1565
	1519	[1831]	OP_LOADBOOL	R101 1 0 ; R101 := true
	1520	[1832]	EQ       	1 R21 K28 ; if R21 == nil then PC := 1529
	1521	[1832]	JMP      	1529 ; PC := 1529
	1522	[1833]	SELF     	R102 R21 K122 ; R103 := R21; R102 := R21[0x988945eb]
	1523	[1833]	CALL     	R102 2 2 ; R102 := R102(R103)
	1524	[1833]	TESTSET  	R101 R102 1 ; if R102 then PC := 1529 else R101 := R102 
	1525	[1833]	JMP      	1529 ; PC := 1529
	1526	[1833]	SELF     	R102 R21 K123 ; R103 := R21; R102 := R21[0xeead91ce]
	1527	[1833]	CALL     	R102 2 2 ; R102 := R102(R103)
	1528	[1833]	NOT      	R101 R102 ; R101 := not R102
	1529	[1836]	SELF     	R102 R9 K90 ; R103 := R9; R102 := R9[0x003c792f]
	1530	[1836]	GETGLOBAL	R104 K91 ; R104 := 0x0469f296
	1531	[1836]	LOADK    	R105 K124 ; R105 := "GAME_R1_WEAPON1"
	1532	[1836]	CALL     	R104 2 0 ; R104,... := R104(R105)
	1533	[1836]	CALL     	R102 0 2 ; R102 := R102(R103,...)
	1534	[1837]	TEST     	R101 0 ; if not R101 then PC := 1543
	1535	[1837]	JMP      	1543 ; PC := 1543
	1536	[1838]	SELF     	R103 R9 K90 ; R104 := R9; R103 := R9[0x003c792f]
	1537	[1838]	GETGLOBAL	R105 K91 ; R105 := 0x0469f296
	1538	[1838]	LOADK    	R106 K125 ; R106 := "GAME_L1_WEAPON1"
	1539	[1838]	CALL     	R105 2 0 ; R105,... := R105(R106)
	1540	[1838]	CALL     	R103 0 2 ; R103 := R103(R104,...)
	1541	[1838]	ADD      	R103 R102 R103 ; R103 := R102 + R103
	1542	[1838]	DIV      	R102 R103 K31 ; R102 := R103 / 2.000000
	1543	[1841]	GETGLOBAL	R103 K84 ; R103 := 0xa421af95
	1544	[1841]	MUL      	R104 K56 R97 ; R104 := 3.000000 * R97
	1545	[1841]	LOADK    	R105 := 0.000000
	1546	[1841]	MUL      	R106 K56 R98 ; R106 := 3.000000 * R98
	1547	[1841]	CALL     	R103 4 2 ; R103 := R103(R104,R105,R106)
	1548	[1842]	ADD      	R6 R102 R103 ; R6 := R102 + R103
	1549	[1843]	GETGLOBAL	R104 K84 ; R104 := 0xa421af95
	1550	[1843]	CALL     	R104 1 2 ; R104 := R104()
	1551	[1844]	GETGLOBAL	R105 K99 ; R105 := 0x20b7f774
	1552	[1844]	MOVE     	R106 R6 ; R106 := R6
	1553	[1844]	ADD      	R107 R102 R104 ; R107 := R102 + R104
	1554	[1844]	CALL     	R105 3 2 ; R105 := R105(R106,R107)
	1555	[1844]	MOVE     	R7 R105 ; R7 := R105
	1556	[1846]	LOADK    	R8 := 40.000000
	1557	[1847]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 2162
	1558	[1847]	JMP      	2162 ; PC := 2162
	1559	[1848]	SELF     	R105 R10 K66 ; R106 := R10; R105 := R10[0xc69087f6]
	1560	[1848]	MOVE     	R107 R22 ; R107 := R22
	1561	[1848]	LOADK    	R108 := 0.000000
	1562	[1848]	LOADK    	R109 := 2.000000
	1563	[1848]	CALL     	R105 5 1 ; R105(R106,R107,R108,R109)
	1564	[1849]	JMP      	2162 ; PC := 2162
	1565	[1850]	TEST     	R19 0 ; if not R19 then PC := 2162
	1566	[1850]	JMP      	2162 ; PC := 2162
	1567	[1851]	LOADK    	R105 := -1.000000
	1568	[1852]	EQ       	1 R21 K28 ; if R21 == nil then PC := 1573
	1569	[1852]	JMP      	1573 ; PC := 1573
	1570	[1853]	SELF     	R106 R21 K129 ; R107 := R21; R106 := R21[0xa779cba7]
	1571	[1853]	CALL     	R106 2 2 ; R106 := R106(R107)
	1572	[1853]	MOVE     	R105 R106 ; R105 := R106
	1573	[1855]	OP_LOADBOOL	R106 0 0 ; R106 := false
	1574	[1856]	EQ       	1 R105 K40 ; if R105 == 6.000000 then PC := 1580
	1575	[1856]	JMP      	1580 ; PC := 1580
	1576	[1856]	EQ       	1 R105 K54 ; if R105 == 0.000000 then PC := 1580
	1577	[1856]	JMP      	1580 ; PC := 1580
	1578	[1856]	EQ       	0 R105 K2 ; if R105 ~= 1.000000 then PC := 1581
	1579	[1856]	JMP      	1581 ; PC := 1581
	1580	[1857]	OP_LOADBOOL	R106 1 0 ; R106 := true
	1581	[1860]	SELF     	R107 R9 K90 ; R108 := R9; R107 := R9[0x003c792f]
	1582	[1860]	GETGLOBAL	R109 K91 ; R109 := 0x0469f296
	1583	[1860]	LOADK    	R110 K124 ; R110 := "GAME_R1_WEAPON1"
	1584	[1860]	CALL     	R109 2 0 ; R109,... := R109(R110)
	1585	[1860]	CALL     	R107 0 2 ; R107 := R107(R108,...)
	1586	[1861]	TEST     	R106 0 ; if not R106 then PC := 1595
	1587	[1861]	JMP      	1595 ; PC := 1595
	1588	[1862]	SELF     	R108 R9 K90 ; R109 := R9; R108 := R9[0x003c792f]
	1589	[1862]	GETGLOBAL	R110 K91 ; R110 := 0x0469f296
	1590	[1862]	LOADK    	R111 K125 ; R111 := "GAME_L1_WEAPON1"
	1591	[1862]	CALL     	R110 2 0 ; R110,... := R110(R111)
	1592	[1862]	CALL     	R108 0 2 ; R108 := R108(R109,...)
	1593	[1862]	ADD      	R108 R107 R108 ; R108 := R107 + R108
	1594	[1862]	DIV      	R107 R108 K31 ; R107 := R108 / 2.000000
	1595	[1864]	GETGLOBAL	R108 K84 ; R108 := 0xa421af95
	1596	[1864]	MUL      	R109 K161 R97 ; R109 := 2.700000 * R97
	1597	[1864]	LOADK    	R110 := 0.000000
	1598	[1864]	MUL      	R111 K161 R98 ; R111 := 2.700000 * R98
	1599	[1864]	CALL     	R108 4 2 ; R108 := R108(R109,R110,R111)
	1600	[1865]	GETGLOBAL	R109 K84 ; R109 := 0xa421af95
	1601	[1865]	CALL     	R109 1 2 ; R109 := R109()
	1602	[1866]	ADD      	R6 R107 R108 ; R6 := R107 + R108
	1603	[1867]	GETGLOBAL	R110 K99 ; R110 := 0x20b7f774
	1604	[1867]	MOVE     	R111 R6 ; R111 := R6
	1605	[1867]	ADD      	R112 R107 R109 ; R112 := R107 + R109
	1606	[1867]	CALL     	R110 3 2 ; R110 := R110(R111,R112)
	1607	[1867]	MOVE     	R7 R110 ; R7 := R110
	1608	[1868]	GETTABLE 	R110 R7 K21 ; R110 := R7["heading"]
	1609	[1868]	SUB      	R110 R110 K57 ; R110 := R110 - 7.000000
	1610	[1868]	SETTABLE 	R7 K21 R110 ; R7["heading"] := R110
	1611	[1869]	LOADK    	R8 := 40.000000
	1612	[1870]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 1619
	1613	[1870]	JMP      	1619 ; PC := 1619
	1614	[1871]	SELF     	R110 R10 K66 ; R111 := R10; R110 := R10[0xc69087f6]
	1615	[1871]	MOVE     	R112 R22 ; R112 := R22
	1616	[1871]	LOADK    	R113 := 0.000000
	1617	[1871]	LOADK    	R114 := 2.000000
	1618	[1871]	CALL     	R110 5 1 ; R110(R111,R112,R113,R114)
	1619	[1875]	GETUPVAL 	R110 U15 ; R110 := U15
	1620	[1875]	TEST     	R110 0 ; if not R110 then PC := 2162
	1621	[1875]	JMP      	2162 ; PC := 2162
	1622	[1875]	EQ       	1 R21 K28 ; if R21 == nil then PC := 2162
	1623	[1875]	JMP      	2162 ; PC := 2162
	1624	[1876]	SELF     	R110 R21 K162 ; R111 := R21; R110 := R21[0x72d56f6b]
	1625	[1876]	CALL     	R110 2 2 ; R110 := R110(R111)
	1626	[1877]	SELF     	R111 R110 K163 ; R112 := R110; R111 := R110[0x2d90ee66]
	1627	[1877]	LOADK    	R113 := 17.000000
	1628	[1877]	CALL     	R111 3 1 ; R111(R112,R113)
	1629	[1878]	OP_LOADBOOL	R111 0 0 ; R111 := false
	1630	[1878]	SETUPVAL 	R111 U15 ; U15 := R111
	1631	[1880]	JMP      	2162 ; PC := 2162
	1632	[1881]	EQ       	0 R0 K2 ; if R0 ~= 1.000000 then PC := 1824
	1633	[1881]	JMP      	1824 ; PC := 1824
	1634	[1882]	GETGLOBAL	R111 K3 ; R111 := 0x7b998233
	1635	[1882]	GETGLOBAL	R112 K164 ; R112 := mSelected
	1636	[1882]	GETTABLE 	R112 R112 K165 ; R112 := R112["Element"]
	1637	[1882]	CALL     	R111 2 2 ; R111 := R111(R112)
	1638	[1882]	TEST     	R111 1 ; if R111 then PC := 1645
	1639	[1882]	JMP      	1645 ; PC := 1645
	1640	[1882]	GETGLOBAL	R111 K3 ; R111 := 0x7b998233
	1641	[1882]	GETGLOBAL	R112 K164 ; R112 := mSelected
	1642	[1882]	GETTABLE 	R112 R112 K165 ; R112 := R112["Element"]
	1643	[1882]	GETTABLE 	R112 R112 K166 ; R112 := R112["mStoreItem"]
	1644	[1882]	CALL     	R111 2 2 ; R111 := R111(R112)
	1645	[1883]	GETUPVAL 	R112 U7 ; R112 := U7
	1646	[1883]	GETUPVAL 	R113 U8 ; R113 := U8
	1647	[1883]	GETTABLE 	R113 R113 K167 ; R113 := R113["SWAPPING_ITEM"]
	1648	[1883]	EQ       	0 R112 R113 ; if R112 ~= R113 then PC := 1663
	1649	[1883]	JMP      	1663 ; PC := 1663
	1650	[1883]	GETGLOBAL	R112 K3 ; R112 := 0x7b998233
	1651	[1883]	GETGLOBAL	R113 K164 ; R113 := mSelected
	1652	[1883]	GETTABLE 	R113 R113 K168 ; R113 := R113["Item"]
	1653	[1883]	CALL     	R112 2 2 ; R112 := R112(R113)
	1654	[1883]	TEST     	R112 1 ; if R112 then PC := 1664
	1655	[1883]	JMP      	1664 ; PC := 1664
	1656	[1883]	GETGLOBAL	R112 K3 ; R112 := 0x7b998233
	1657	[1883]	GETGLOBAL	R113 K164 ; R113 := mSelected
	1658	[1883]	GETTABLE 	R113 R113 K168 ; R113 := R113["Item"]
	1659	[1883]	GETTABLE 	R113 R113 K166 ; R113 := R113["mStoreItem"]
	1660	[1883]	CALL     	R112 2 2 ; R112 := R112(R113)
	1661	[1883]	JMP      	1664 ; PC := 1664
	1662	[1883]	OP_LOADBOOL	R112 0 1 ; R112 := false; PC := 1663
	1663	[1883]	OP_LOADBOOL	R112 1 0 ; R112 := true
	1664	[1884]	GETUPVAL 	R113 U9 ; R113 := U9
	1665	[1884]	GETUPVAL 	R114 U10 ; R114 := U10
	1666	[1884]	GETTABLE 	R114 R114 K89 ; R114 := R114["UI_MODE_IN_SPACE_SHIP"]
	1667	[1884]	EQ       	1 R113 R114 ; if R113 == R114 then PC := 1720
	1668	[1884]	JMP      	1720 ; PC := 1720
	1669	[1884]	TEST     	R111 0 ; if not R111 then PC := 1720
	1670	[1884]	JMP      	1720 ; PC := 1720
	1671	[1884]	TEST     	R112 0 ; if not R112 then PC := 1720
	1672	[1884]	JMP      	1720 ; PC := 1720
	1673	[1885]	GETGLOBAL	R113 K12 ; R113 := _T
	1674	[1885]	SETTABLE 	R113 K169 K33 ; R113["mSentinelMode"] := false
	1675	[1886]	GETGLOBAL	R113 K78 ; R113 := 0x5bced4c4
	1676	[1886]	GETTABLE 	R113 R113 K79 ; R113 := R113[0x3eda26fc]
	1677	[1886]	GETGLOBAL	R114 K78 ; R114 := 0x5bced4c4
	1678	[1886]	GETTABLE 	R114 R114 K80 ; R114 := R114[0xdde5c6a1]
	1679	[1886]	GETGLOBAL	R115 K12 ; R115 := _T
	1680	[1886]	GETTABLE 	R115 R115 K81 ; R115 := R115["DEFAULT_SUIT_ROTATION"]
	1681	[1886]	CALL     	R114 2 0 ; R114,... := R114(R115)
	1682	[1886]	CALL     	R113 0 2 ; R113 := R113(R114,...)
	1683	[1887]	GETGLOBAL	R114 K78 ; R114 := 0x5bced4c4
	1684	[1887]	GETTABLE 	R114 R114 K82 ; R114 := R114[0x00fa6bf1]
	1685	[1887]	GETGLOBAL	R115 K78 ; R115 := 0x5bced4c4
	1686	[1887]	GETTABLE 	R115 R115 K80 ; R115 := R115[0xdde5c6a1]
	1687	[1887]	GETGLOBAL	R116 K12 ; R116 := _T
	1688	[1887]	GETTABLE 	R116 R116 K81 ; R116 := R116["DEFAULT_SUIT_ROTATION"]
	1689	[1887]	CALL     	R115 2 0 ; R115,... := R115(R116)
	1690	[1887]	CALL     	R114 0 2 ; R114 := R114(R115,...)
	1691	[1888]	GETGLOBAL	R115 K84 ; R115 := 0xa421af95
	1692	[1888]	MUL      	R116 K113 R113 ; R116 := 3.500000 * R113
	1693	[1888]	LOADK    	R117 K114 ; R117 := 1.100000
	1694	[1888]	MUL      	R118 K113 R114 ; R118 := 3.500000 * R114
	1695	[1888]	CALL     	R115 4 2 ; R115 := R115(R116,R117,R118)
	1696	[1889]	GETGLOBAL	R116 K6 ; R116 := mCameraTable
	1697	[1889]	GETTABLE 	R116 R116 K7 ; R116 := R116["rootNodeEntity"]
	1698	[1889]	SELF     	R116 R116 K5 ; R117 := R116; R116 := R116[0xd1586535]
	1699	[1889]	CALL     	R116 2 2 ; R116 := R116(R117)
	1700	[1889]	ADD      	R6 R116 R115 ; R6 := R116 + R115
	1701	[1890]	GETGLOBAL	R116 K84 ; R116 := 0xa421af95
	1702	[1890]	LOADK    	R117 := 0.000000
	1703	[1890]	LOADK    	R118 K115 ; R118 := 0.900000
	1704	[1890]	LOADK    	R119 := 0.000000
	1705	[1890]	CALL     	R116 4 2 ; R116 := R116(R117,R118,R119)
	1706	[1891]	GETGLOBAL	R117 K99 ; R117 := 0x20b7f774
	1707	[1891]	MOVE     	R118 R6 ; R118 := R6
	1708	[1891]	GETGLOBAL	R119 K6 ; R119 := mCameraTable
	1709	[1891]	GETTABLE 	R119 R119 K7 ; R119 := R119["rootNodeEntity"]
	1710	[1891]	SELF     	R119 R119 K5 ; R120 := R119; R119 := R119[0xd1586535]
	1711	[1891]	CALL     	R119 2 2 ; R119 := R119(R120)
	1712	[1891]	ADD      	R119 R119 R116 ; R119 := R119 + R116
	1713	[1891]	CALL     	R117 3 2 ; R117 := R117(R118,R119)
	1714	[1891]	MOVE     	R7 R117 ; R7 := R117
	1715	[1892]	GETTABLE 	R117 R7 K21 ; R117 := R7["heading"]
	1716	[1892]	SUB      	R117 R117 K57 ; R117 := R117 - 7.000000
	1717	[1892]	SETTABLE 	R7 K21 R117 ; R7["heading"] := R117
	1718	[1893]	LOADK    	R8 := 35.000000
	1719	[1893]	JMP      	2162 ; PC := 2162
	1720	[1895]	GETGLOBAL	R117 K12 ; R117 := _T
	1721	[1895]	SETTABLE 	R117 K169 K0 ; R117["mSentinelMode"] := true
	1722	[1896]	GETGLOBAL	R117 K3 ; R117 := 0x7b998233
	1723	[1896]	GETGLOBAL	R118 K170 ; R118 := 0x25d99d89
	1724	[1896]	CALL     	R117 2 2 ; R117 := R117(R118)
	1725	[1896]	TEST     	R117 1 ; if R117 then PC := 1819
	1726	[1896]	JMP      	1819 ; PC := 1819
	1727	[1897]	GETUPVAL 	R117 U7 ; R117 := U7
	1728	[1897]	GETUPVAL 	R118 U8 ; R118 := U8
	1729	[1897]	GETTABLE 	R118 R118 K167 ; R118 := R118["SWAPPING_ITEM"]
	1730	[1897]	EQ       	0 R117 R118 ; if R117 ~= R118 then PC := 1765
	1731	[1897]	JMP      	1765 ; PC := 1765
	1732	[1898]	GETGLOBAL	R117 K3 ; R117 := 0x7b998233
	1733	[1898]	GETGLOBAL	R118 K164 ; R118 := mSelected
	1734	[1898]	GETTABLE 	R118 R118 K168 ; R118 := R118["Item"]
	1735	[1898]	CALL     	R117 2 2 ; R117 := R117(R118)
	1736	[1898]	TEST     	R117 1 ; if R117 then PC := 1822
	1737	[1898]	JMP      	1822 ; PC := 1822
	1738	[1899]	LOADNIL  	R117 R117 ; R117 := nil
	1739	[1900]	GETGLOBAL	R118 K164 ; R118 := mSelected
	1740	[1900]	GETTABLE 	R118 R118 K168 ; R118 := R118["Item"]
	1741	[1900]	GETTABLE 	R118 R118 K171 ; R118 := R118["mPetType"]
	1742	[1900]	EQ       	0 R118 K28 ; if R118 ~= nil then PC := 1758
	1743	[1900]	JMP      	1758 ; PC := 1758
	1744	[1901]	GETUPVAL 	R118 U1 ; R118 := U1
	1745	[1901]	GETTABLE 	R118 R118 K126 ; R118 := R118[0x06d055f9]
	1746	[1901]	GETGLOBAL	R119 K12 ; R119 := _T
	1747	[1901]	GETTABLE 	R119 R119 K172 ; R119 := R119["arsenalPetType"]
	1748	[1901]	EQ       	0 R119 K28 ; if R119 ~= nil then PC := 1751
	1749	[1901]	JMP      	1751 ; PC := 1751
	1750	[1901]	OP_LOADBOOL	R119 0 1 ; R119 := false; PC := 1751
	1751	[1901]	OP_LOADBOOL	R119 1 0 ; R119 := true
	1752	[1901]	GETGLOBAL	R120 K12 ; R120 := _T
	1753	[1901]	GETTABLE 	R120 R120 K172 ; R120 := R120["arsenalPetType"]
	1754	[1901]	LOADK    	R121 := 0.000000
	1755	[1901]	CALL     	R118 4 2 ; R118 := R118(R119,R120,R121)
	1756	[1901]	MOVE     	R117 R118 ; R117 := R118
	1757	[1901]	JMP      	1761 ; PC := 1761
	1758	[1903]	GETGLOBAL	R118 K164 ; R118 := mSelected
	1759	[1903]	GETTABLE 	R118 R118 K168 ; R118 := R118["Item"]
	1760	[1903]	GETTABLE 	R117 R118 K171 ; R117 := R118["mPetType"]
	1761	[1905]	GETUPVAL 	R118 U16 ; R118 := U16
	1762	[1905]	MOVE     	R119 R117 ; R119 := R117
	1763	[1905]	CALL     	R118 2 1 ; R118(R119)
	1764	[1906]	JMP      	1822 ; PC := 1822
	1765	[1907]	GETGLOBAL	R118 K170 ; R118 := 0x25d99d89
	1766	[1907]	SELF     	R118 R118 K173 ; R119 := R118; R118 := R118[0x3c6b0324]
	1767	[1907]	CALL     	R118 2 2 ; R118 := R118(R119)
	1768	[1907]	TEST     	R118 0 ; if not R118 then PC := 1774
	1769	[1907]	JMP      	1774 ; PC := 1774
	1770	[1908]	GETUPVAL 	R118 U16 ; R118 := U16
	1771	[1908]	LOADK    	R119 := 1.000000
	1772	[1908]	CALL     	R118 2 1 ; R118(R119)
	1773	[1908]	JMP      	1822 ; PC := 1822
	1774	[1909]	GETGLOBAL	R118 K170 ; R118 := 0x25d99d89
	1775	[1909]	SELF     	R118 R118 K174 ; R119 := R118; R118 := R118[0x9f91f49d]
	1776	[1909]	CALL     	R118 2 2 ; R118 := R118(R119)
	1777	[1909]	TEST     	R118 0 ; if not R118 then PC := 1815
	1778	[1909]	JMP      	1815 ; PC := 1815
	1779	[1910]	GETGLOBAL	R118 K3 ; R118 := 0x7b998233
	1780	[1910]	MOVE     	R119 R13 ; R119 := R13
	1781	[1910]	CALL     	R118 2 2 ; R118 := R118(R119)
	1782	[1910]	TEST     	R118 1 ; if R118 then PC := 1811
	1783	[1910]	JMP      	1811 ; PC := 1811
	1784	[1910]	GETGLOBAL	R118 K3 ; R118 := 0x7b998233
	1785	[1910]	SELF     	R119 R13 K24 ; R120 := R13; R119 := R13[0xde321e6f]
	1786	[1910]	CALL     	R119 2 0 ; R119,... := R119(R120)
	1787	[1910]	CALL     	R118 0 2 ; R118 := R118(R119,...)
	1788	[1910]	TEST     	R118 1 ; if R118 then PC := 1811
	1789	[1910]	JMP      	1811 ; PC := 1811
	1790	[1910]	GETGLOBAL	R118 K3 ; R118 := 0x7b998233
	1791	[1910]	SELF     	R119 R13 K24 ; R120 := R13; R119 := R13[0xde321e6f]
	1792	[1910]	CALL     	R119 2 2 ; R119 := R119(R120)
	1793	[1910]	SELF     	R119 R119 K58 ; R120 := R119; R119 := R119[0xf7d48ee0]
	1794	[1910]	CALL     	R119 2 0 ; R119,... := R119(R120)
	1795	[1910]	CALL     	R118 0 2 ; R118 := R118(R119,...)
	1796	[1910]	TEST     	R118 1 ; if R118 then PC := 1811
	1797	[1910]	JMP      	1811 ; PC := 1811
	1798	[1910]	SELF     	R118 R13 K24 ; R119 := R13; R118 := R13[0xde321e6f]
	1799	[1910]	CALL     	R118 2 2 ; R118 := R118(R119)
	1800	[1910]	SELF     	R118 R118 K58 ; R119 := R118; R118 := R118[0xf7d48ee0]
	1801	[1910]	CALL     	R118 2 2 ; R118 := R118(R119)
	1802	[1910]	SELF     	R118 R118 K35 ; R119 := R118; R118 := R118[0xf2deaf69]
	1803	[1910]	GETGLOBAL	R120 K175 ; R120 := 0xb506ff82
	1804	[1910]	CALL     	R118 3 2 ; R118 := R118(R119,R120)
	1805	[1910]	TEST     	R118 0 ; if not R118 then PC := 1811
	1806	[1910]	JMP      	1811 ; PC := 1811
	1807	[1911]	GETUPVAL 	R118 U16 ; R118 := U16
	1808	[1911]	LOADK    	R119 := 4.000000
	1809	[1911]	CALL     	R118 2 1 ; R118(R119)
	1810	[1911]	JMP      	1822 ; PC := 1822
	1811	[1913]	GETUPVAL 	R118 U16 ; R118 := U16
	1812	[1913]	LOADK    	R119 := 3.000000
	1813	[1913]	CALL     	R118 2 1 ; R118(R119)
	1814	[1914]	JMP      	1822 ; PC := 1822
	1815	[1916]	GETUPVAL 	R118 U16 ; R118 := U16
	1816	[1916]	LOADK    	R119 := 0.000000
	1817	[1916]	CALL     	R118 2 1 ; R118(R119)
	1818	[1917]	JMP      	1822 ; PC := 1822
	1819	[1919]	GETUPVAL 	R118 U16 ; R118 := U16
	1820	[1919]	LOADK    	R119 := 0.000000
	1821	[1919]	CALL     	R118 2 1 ; R118(R119)
	1822	[1921]	RETURN   	R0 1 ; return 
	1823	[1922]	JMP      	2162 ; PC := 2162
	1824	[1923]	EQ       	0 R0 K27 ; if R0 ~= 4.000000 then PC := 1950
	1825	[1923]	JMP      	1950 ; PC := 1950
	1826	[1924]	OP_LOADBOOL	R118 1 0 ; R118 := true
	1827	[1924]	SETUPVAL 	R118 U2 ; U2 := R118
	1828	[1926]	GETGLOBAL	R118 K78 ; R118 := 0x5bced4c4
	1829	[1926]	GETTABLE 	R118 R118 K79 ; R118 := R118[0x3eda26fc]
	1830	[1926]	GETGLOBAL	R119 K78 ; R119 := 0x5bced4c4
	1831	[1926]	GETTABLE 	R119 R119 K80 ; R119 := R119[0xdde5c6a1]
	1832	[1926]	GETGLOBAL	R120 K12 ; R120 := _T
	1833	[1926]	GETTABLE 	R120 R120 K81 ; R120 := R120["DEFAULT_SUIT_ROTATION"]
	1834	[1926]	CALL     	R119 2 0 ; R119,... := R119(R120)
	1835	[1926]	CALL     	R118 0 2 ; R118 := R118(R119,...)
	1836	[1927]	GETGLOBAL	R119 K78 ; R119 := 0x5bced4c4
	1837	[1927]	GETTABLE 	R119 R119 K82 ; R119 := R119[0x00fa6bf1]
	1838	[1927]	GETGLOBAL	R120 K78 ; R120 := 0x5bced4c4
	1839	[1927]	GETTABLE 	R120 R120 K80 ; R120 := R120[0xdde5c6a1]
	1840	[1927]	GETGLOBAL	R121 K12 ; R121 := _T
	1841	[1927]	GETTABLE 	R121 R121 K81 ; R121 := R121["DEFAULT_SUIT_ROTATION"]
	1842	[1927]	CALL     	R120 2 0 ; R120,... := R120(R121)
	1843	[1927]	CALL     	R119 0 2 ; R119 := R119(R120,...)
	1844	[1928]	GETGLOBAL	R120 K84 ; R120 := 0xa421af95
	1845	[1928]	MUL      	R121 K113 R118 ; R121 := 3.500000 * R118
	1846	[1928]	LOADK    	R122 K114 ; R122 := 1.100000
	1847	[1928]	MUL      	R123 K113 R119 ; R123 := 3.500000 * R119
	1848	[1928]	CALL     	R120 4 2 ; R120 := R120(R121,R122,R123)
	1849	[1929]	GETGLOBAL	R121 K6 ; R121 := mCameraTable
	1850	[1929]	GETTABLE 	R121 R121 K7 ; R121 := R121["rootNodeEntity"]
	1851	[1929]	SELF     	R121 R121 K5 ; R122 := R121; R121 := R121[0xd1586535]
	1852	[1929]	CALL     	R121 2 2 ; R121 := R121(R122)
	1853	[1929]	ADD      	R6 R121 R120 ; R6 := R121 + R120
	1854	[1930]	GETGLOBAL	R121 K84 ; R121 := 0xa421af95
	1855	[1930]	LOADK    	R122 := 0.000000
	1856	[1930]	LOADK    	R123 K115 ; R123 := 0.900000
	1857	[1930]	LOADK    	R124 := 0.000000
	1858	[1930]	CALL     	R121 4 2 ; R121 := R121(R122,R123,R124)
	1859	[1931]	GETGLOBAL	R122 K99 ; R122 := 0x20b7f774
	1860	[1931]	MOVE     	R123 R6 ; R123 := R6
	1861	[1931]	GETGLOBAL	R124 K6 ; R124 := mCameraTable
	1862	[1931]	GETTABLE 	R124 R124 K7 ; R124 := R124["rootNodeEntity"]
	1863	[1931]	SELF     	R124 R124 K5 ; R125 := R124; R124 := R124[0xd1586535]
	1864	[1931]	CALL     	R124 2 2 ; R124 := R124(R125)
	1865	[1931]	ADD      	R124 R124 R121 ; R124 := R124 + R121
	1866	[1931]	CALL     	R122 3 2 ; R122 := R122(R123,R124)
	1867	[1931]	MOVE     	R7 R122 ; R7 := R122
	1868	[1932]	GETTABLE 	R122 R7 K21 ; R122 := R7["heading"]
	1869	[1932]	SUB      	R122 R122 K57 ; R122 := R122 - 7.000000
	1870	[1932]	SETTABLE 	R7 K21 R122 ; R7["heading"] := R122
	1871	[1933]	LOADK    	R8 := 35.000000
	1872	[1935]	GETGLOBAL	R122 K164 ; R122 := mSelected
	1873	[1935]	GETTABLE 	R122 R122 K165 ; R122 := R122["Element"]
	1874	[1935]	EQ       	1 R122 K28 ; if R122 == nil then PC := 2162
	1875	[1935]	JMP      	2162 ; PC := 2162
	1876	[1935]	GETGLOBAL	R122 K3 ; R122 := 0x7b998233
	1877	[1935]	GETGLOBAL	R123 K164 ; R123 := mSelected
	1878	[1935]	GETTABLE 	R123 R123 K165 ; R123 := R123["Element"]
	1879	[1935]	GETTABLE 	R123 R123 K176 ; R123 := R123["EquippedItem"]
	1880	[1935]	CALL     	R122 2 2 ; R122 := R122(R123)
	1881	[1935]	TEST     	R122 1 ; if R122 then PC := 2162
	1882	[1935]	JMP      	2162 ; PC := 2162
	1883	[1936]	SELF     	R122 R10 K62 ; R123 := R10; R122 := R10[0xe85a2361]
	1884	[1936]	LOADK    	R124 := 5.000000
	1885	[1936]	CALL     	R122 3 2 ; R122 := R122(R123,R124)
	1886	[1938]	GETGLOBAL	R123 K3 ; R123 := 0x7b998233
	1887	[1938]	MOVE     	R124 R122 ; R124 := R122
	1888	[1938]	CALL     	R123 2 2 ; R123 := R123(R124)
	1889	[1938]	TEST     	R123 1 ; if R123 then PC := 1899
	1890	[1938]	JMP      	1899 ; PC := 1899
	1891	[1938]	SELF     	R123 R122 K64 ; R124 := R122; R123 := R122[0xcde10c4a]
	1892	[1938]	CALL     	R123 2 2 ; R123 := R123(R124)
	1893	[1938]	GETGLOBAL	R124 K164 ; R124 := mSelected
	1894	[1938]	GETTABLE 	R124 R124 K165 ; R124 := R124["Element"]
	1895	[1938]	GETTABLE 	R124 R124 K176 ; R124 := R124["EquippedItem"]
	1896	[1938]	GETTABLE 	R124 R124 K60 ; R124 := R124["mItemType"]
	1897	[1938]	EQ       	1 R123 R124 ; if R123 == R124 then PC := 1946
	1898	[1938]	JMP      	1946 ; PC := 1946
	1899	[1940]	SELF     	R123 R10 K29 ; R124 := R10; R123 := R10[0xf596420f]
	1900	[1940]	CALL     	R123 2 1 ; R123(R124)
	1901	[1941]	SELF     	R123 R10 K177 ; R124 := R10; R123 := R10[0x1d2dfe4a]
	1902	[1941]	GETGLOBAL	R125 K170 ; R125 := 0x25d99d89
	1903	[1941]	SELF     	R125 R125 K178 ; R126 := R125; R125 := R125[0x62c81b76]
	1904	[1941]	CALL     	R125 2 2 ; R125 := R125(R126)
	1905	[1941]	LOADK    	R126 := 4.000000
	1906	[1941]	CALL     	R123 4 1 ; R123(R124,R125,R126)
	1907	[1942]	GETGLOBAL	R123 K86 ; R123 := 0x89326c93
	1908	[1942]	SELF     	R123 R123 K179 ; R124 := R123; R123 := R123[0x18d05d30]
	1909	[1942]	CALL     	R123 2 2 ; R123 := R123(R124)
	1910	[1942]	TEST     	R123 1 ; if R123 then PC := 1917
	1911	[1942]	JMP      	1917 ; PC := 1917
	1912	[1943]	SELF     	R123 R10 K66 ; R124 := R10; R123 := R10[0xc69087f6]
	1913	[1943]	LOADK    	R125 := 5.000000
	1914	[1943]	LOADK    	R126 := 0.000000
	1915	[1943]	LOADK    	R127 := 2.000000
	1916	[1943]	CALL     	R123 5 1 ; R123(R124,R125,R126,R127)
	1917	[1946]	SELF     	R123 R9 K180 ; R124 := R9; R123 := R9[0xc1595bd5]
	1918	[1946]	GETGLOBAL	R125 K181 ; R125 := 0xd0550e92
	1919	[1946]	CALL     	R123 3 2 ; R123 := R123(R124,R125)
	1920	[1947]	LOADK    	R124 := 1.000000
	1921	[1947]	LEN      	R125 R123 ; R125 := # R123
	1922	[1947]	LOADK    	R126 := 1.000000
	1923	[1947]	FORPREP  	R124 1928 ; R124 -= R126; PC := 1928
	1924	[1948]	GETGLOBAL	R128 K86 ; R128 := 0x89326c93
	1925	[1948]	SELF     	R128 R128 K182 ; R129 := R128; R128 := R128[0x59c96e77]
	1926	[1948]	GETTABLE 	R130 R123 R127 ; R130 := R123[R127]
	1927	[1948]	CALL     	R128 3 1 ; R128(R129,R130)
	1928	[1947]	FORLOOP  	R124 1924 ; R124 += R126; if R124 <= R125 then begin PC := 1924; R127 := R124 end
	1929	[1951]	GETGLOBAL	R128 K183 ; R128 := mPvpTeams
	1930	[1951]	GETTABLE 	R128 R128 K30 ; R128 := R128["Current"]
	1931	[1951]	EQ       	1 R128 K2 ; if R128 == 1.000000 then PC := 1940
	1932	[1951]	JMP      	1940 ; PC := 1940
	1933	[1952]	GETUPVAL 	R128 U10 ; R128 := U10
	1934	[1952]	GETTABLE 	R128 R128 K184 ; R128 := R128[0xa99c33fd]
	1935	[1952]	MOVE     	R129 R9 ; R129 := R9
	1936	[1952]	GETGLOBAL	R130 K183 ; R130 := mPvpTeams
	1937	[1952]	GETTABLE 	R130 R130 K30 ; R130 := R130["Current"]
	1938	[1952]	SUB      	R130 R130 K2 ; R130 := R130 - 1.000000
	1939	[1952]	CALL     	R128 3 1 ; R128(R129,R130)
	1940	[1955]	GETGLOBAL	R128 K185 ; R128 := 0xb009bbc6
	1941	[1955]	LOADK    	R129 K186 ; R129 := "/Lotus/Upgrades/Skins/PvP/Lunaro/LunaroTeamArmband"
	1942	[1955]	CALL     	R128 2 2 ; R128 := R128(R129)
	1943	[1956]	SELF     	R129 R10 K187 ; R130 := R10; R129 := R10[0x599a8e07]
	1944	[1956]	MOVE     	R131 R128 ; R131 := R128
	1945	[1956]	CALL     	R129 3 1 ; R129(R130,R131)
	1946	[1960]	SELF     	R129 R9 K188 ; R130 := R9; R129 := R9[0x0aebaa10]
	1947	[1960]	GETGLOBAL	R131 K189 ; R131 := 0x80cbdfd6
	1948	[1960]	CALL     	R129 3 1 ; R129(R130,R131)
	1949	[1961]	JMP      	2162 ; PC := 2162
	1950	[1962]	EQ       	0 R0 K57 ; if R0 ~= 7.000000 then PC := 2000
	1951	[1962]	JMP      	2000 ; PC := 2000
	1952	[1963]	GETGLOBAL	R129 K12 ; R129 := _T
	1953	[1963]	SETTABLE 	R129 K169 K33 ; R129["mSentinelMode"] := false
	1954	[1964]	GETGLOBAL	R129 K78 ; R129 := 0x5bced4c4
	1955	[1964]	GETTABLE 	R129 R129 K79 ; R129 := R129[0x3eda26fc]
	1956	[1964]	GETGLOBAL	R130 K78 ; R130 := 0x5bced4c4
	1957	[1964]	GETTABLE 	R130 R130 K80 ; R130 := R130[0xdde5c6a1]
	1958	[1964]	GETGLOBAL	R131 K12 ; R131 := _T
	1959	[1964]	GETTABLE 	R131 R131 K81 ; R131 := R131["DEFAULT_SUIT_ROTATION"]
	1960	[1964]	CALL     	R130 2 0 ; R130,... := R130(R131)
	1961	[1964]	CALL     	R129 0 2 ; R129 := R129(R130,...)
	1962	[1965]	GETGLOBAL	R130 K78 ; R130 := 0x5bced4c4
	1963	[1965]	GETTABLE 	R130 R130 K82 ; R130 := R130[0x00fa6bf1]
	1964	[1965]	GETGLOBAL	R131 K78 ; R131 := 0x5bced4c4
	1965	[1965]	GETTABLE 	R131 R131 K80 ; R131 := R131[0xdde5c6a1]
	1966	[1965]	GETGLOBAL	R132 K12 ; R132 := _T
	1967	[1965]	GETTABLE 	R132 R132 K81 ; R132 := R132["DEFAULT_SUIT_ROTATION"]
	1968	[1965]	CALL     	R131 2 0 ; R131,... := R131(R132)
	1969	[1965]	CALL     	R130 0 2 ; R130 := R130(R131,...)
	1970	[1966]	SELF     	R131 R9 K90 ; R132 := R9; R131 := R9[0x003c792f]
	1971	[1966]	GETGLOBAL	R133 K91 ; R133 := 0x0469f296
	1972	[1966]	LOADK    	R134 K124 ; R134 := "GAME_R1_WEAPON1"
	1973	[1966]	CALL     	R133 2 0 ; R133,... := R133(R134)
	1974	[1966]	CALL     	R131 0 2 ; R131 := R131(R132,...)
	1975	[1967]	GETGLOBAL	R132 K84 ; R132 := 0xa421af95
	1976	[1967]	MUL      	R133 K128 R129 ; R133 := 1.450000 * R129
	1977	[1967]	LOADK    	R134 := 0.000000
	1978	[1967]	MUL      	R135 K128 R130 ; R135 := 1.450000 * R130
	1979	[1967]	CALL     	R132 4 2 ; R132 := R132(R133,R134,R135)
	1980	[1969]	ADD      	R6 R131 R132 ; R6 := R131 + R132
	1981	[1970]	GETGLOBAL	R133 K84 ; R133 := 0xa421af95
	1982	[1970]	CALL     	R133 1 2 ; R133 := R133()
	1983	[1971]	GETGLOBAL	R134 K99 ; R134 := 0x20b7f774
	1984	[1971]	MOVE     	R135 R6 ; R135 := R6
	1985	[1971]	ADD      	R136 R131 R133 ; R136 := R131 + R133
	1986	[1971]	CALL     	R134 3 2 ; R134 := R134(R135,R136)
	1987	[1971]	MOVE     	R7 R134 ; R7 := R134
	1988	[1972]	GETTABLE 	R134 R7 K21 ; R134 := R7["heading"]
	1989	[1972]	SUB      	R134 R134 K38 ; R134 := R134 - 5.000000
	1990	[1972]	SETTABLE 	R7 K21 R134 ; R7["heading"] := R134
	1991	[1973]	LOADK    	R8 := 45.000000
	1992	[1974]	EQ       	1 R11 R21 ; if R11 == R21 then PC := 2162
	1993	[1974]	JMP      	2162 ; PC := 2162
	1994	[1975]	SELF     	R134 R10 K66 ; R135 := R10; R134 := R10[0xc69087f6]
	1995	[1975]	MOVE     	R136 R22 ; R136 := R22
	1996	[1975]	LOADK    	R137 := 0.000000
	1997	[1975]	LOADK    	R138 := 2.000000
	1998	[1975]	CALL     	R134 5 1 ; R134(R135,R136,R137,R138)
	1999	[1976]	JMP      	2162 ; PC := 2162
	2000	[1977]	EQ       	0 R0 K48 ; if R0 ~= 8.000000 then PC := 2091
	2001	[1977]	JMP      	2091 ; PC := 2091
	2002	[1978]	GETGLOBAL	R134 K78 ; R134 := 0x5bced4c4
	2003	[1978]	GETTABLE 	R134 R134 K79 ; R134 := R134[0x3eda26fc]
	2004	[1978]	GETGLOBAL	R135 K78 ; R135 := 0x5bced4c4
	2005	[1978]	GETTABLE 	R135 R135 K80 ; R135 := R135[0xdde5c6a1]
	2006	[1978]	GETGLOBAL	R136 K12 ; R136 := _T
	2007	[1978]	GETTABLE 	R136 R136 K147 ; R136 := R136["ARCHWING_DEFAULT_ROTATION"]
	2008	[1978]	CALL     	R135 2 0 ; R135,... := R135(R136)
	2009	[1978]	CALL     	R134 0 2 ; R134 := R134(R135,...)
	2010	[1979]	GETGLOBAL	R135 K78 ; R135 := 0x5bced4c4
	2011	[1979]	GETTABLE 	R135 R135 K82 ; R135 := R135[0x00fa6bf1]
	2012	[1979]	GETGLOBAL	R136 K78 ; R136 := 0x5bced4c4
	2013	[1979]	GETTABLE 	R136 R136 K80 ; R136 := R136[0xdde5c6a1]
	2014	[1979]	GETGLOBAL	R137 K12 ; R137 := _T
	2015	[1979]	GETTABLE 	R137 R137 K147 ; R137 := R137["ARCHWING_DEFAULT_ROTATION"]
	2016	[1979]	CALL     	R136 2 0 ; R136,... := R136(R137)
	2017	[1979]	CALL     	R135 0 2 ; R135 := R135(R136,...)
	2018	[1980]	GETGLOBAL	R136 K84 ; R136 := 0xa421af95
	2019	[1980]	MUL      	R137 K148 R134 ; R137 := 3.750000 * R134
	2020	[1980]	LOADK    	R138 := 0.750000
	2021	[1980]	MUL      	R139 K190 R135 ; R139 := 6.750000 * R135
	2022	[1980]	CALL     	R136 4 2 ; R136 := R136(R137,R138,R139)
	2023	[1981]	GETGLOBAL	R137 K6 ; R137 := mCameraTable
	2024	[1981]	GETTABLE 	R137 R137 K7 ; R137 := R137["rootNodeEntity"]
	2025	[1981]	SELF     	R137 R137 K5 ; R138 := R137; R137 := R137[0xd1586535]
	2026	[1981]	CALL     	R137 2 2 ; R137 := R137(R138)
	2027	[1982]	GETGLOBAL	R138 K3 ; R138 := 0x7b998233
	2028	[1982]	GETGLOBAL	R139 K12 ; R139 := _T
	2029	[1982]	GETTABLE 	R139 R139 K49 ; R139 := R139["MechAvatar"]
	2030	[1982]	CALL     	R138 2 2 ; R138 := R138(R139)
	2031	[1982]	TEST     	R138 1 ; if R138 then PC := 2044
	2032	[1982]	JMP      	2044 ; PC := 2044
	2033	[1983]	GETGLOBAL	R138 K12 ; R138 := _T
	2034	[1983]	GETTABLE 	R138 R138 K49 ; R138 := R138["MechAvatar"]
	2035	[1983]	SELF     	R138 R138 K5 ; R139 := R138; R138 := R138[0xd1586535]
	2036	[1983]	CALL     	R138 2 2 ; R138 := R138(R139)
	2037	[1983]	GETGLOBAL	R139 K84 ; R139 := 0xa421af95
	2038	[1983]	LOADK    	R140 := 0.000000
	2039	[1983]	LOADK    	R141 := 2.000000
	2040	[1983]	LOADK    	R142 := 0.000000
	2041	[1983]	CALL     	R139 4 2 ; R139 := R139(R140,R141,R142)
	2042	[1983]	ADD      	R137 R138 R139 ; R137 := R138 + R139
	2043	[1983]	JMP      	2061 ; PC := 2061
	2044	[1985]	GETUPVAL 	R138 U14 ; R138 := U14
	2045	[1985]	GETTABLE 	R138 R138 K149 ; R138 := R138[0x09b8fbee]
	2046	[1985]	MOVE     	R139 R137 ; R139 := R137
	2047	[1985]	CALL     	R138 2 2 ; R138 := R138(R139)
	2048	[1986]	GETGLOBAL	R139 K3 ; R139 := 0x7b998233
	2049	[1986]	MOVE     	R140 R138 ; R140 := R138
	2050	[1986]	CALL     	R139 2 2 ; R139 := R139(R140)
	2051	[1986]	TEST     	R139 1 ; if R139 then PC := 2061
	2052	[1986]	JMP      	2061 ; PC := 2061
	2053	[1987]	SELF     	R139 R138 K5 ; R140 := R138; R139 := R138[0xd1586535]
	2054	[1987]	CALL     	R139 2 2 ; R139 := R139(R140)
	2055	[1987]	GETGLOBAL	R140 K84 ; R140 := 0xa421af95
	2056	[1987]	LOADK    	R141 := 0.000000
	2057	[1987]	LOADK    	R142 := 2.000000
	2058	[1987]	LOADK    	R143 := -3.000000
	2059	[1987]	CALL     	R140 4 2 ; R140 := R140(R141,R142,R143)
	2060	[1987]	ADD      	R137 R139 R140 ; R137 := R139 + R140
	2061	[1991]	ADD      	R6 R137 R136 ; R6 := R137 + R136
	2062	[1993]	GETGLOBAL	R139 K84 ; R139 := 0xa421af95
	2063	[1993]	LOADK    	R140 := 0.250000
	2064	[1993]	LOADK    	R141 K152 ; R141 := 0.200000
	2065	[1993]	LOADK    	R142 K153 ; R142 := -0.300000
	2066	[1993]	CALL     	R139 4 2 ; R139 := R139(R140,R141,R142)
	2067	[1994]	GETUPVAL 	R140 U9 ; R140 := U9
	2068	[1994]	GETUPVAL 	R141 U10 ; R141 := U10
	2069	[1994]	GETTABLE 	R141 R141 K89 ; R141 := R141["UI_MODE_IN_SPACE_SHIP"]
	2070	[1994]	EQ       	0 R140 R141 ; if R140 ~= R141 then PC := 2074
	2071	[1994]	JMP      	2074 ; PC := 2074
	2072	[1995]	SETTABLE 	R139 K154 K153 ; R139["x"] := -0.300000
	2073	[1995]	JMP      	2084 ; PC := 2084
	2074	[1996]	GETUPVAL 	R140 U10 ; R140 := U10
	2075	[1996]	GETTABLE 	R140 R140 K155 ; R140 := R140[0xcf1fcba4]
	2076	[1996]	CALL     	R140 1 2 ; R140 := R140()
	2077	[1996]	TEST     	R140 0 ; if not R140 then PC := 2083
	2078	[1996]	JMP      	2083 ; PC := 2083
	2079	[1997]	SETTABLE 	R139 K154 K112 ; R139["x"] := 0.300000
	2080	[1998]	SETTABLE 	R139 K156 K157 ; R139["z"] := -1.000000
	2081	[1999]	SETTABLE 	R139 K93 K158 ; R139["y"] := -0.100000
	2082	[1999]	JMP      	2084 ; PC := 2084
	2083	[2002]	SETTABLE 	R139 K154 K153 ; R139["x"] := -0.300000
	2084	[2007]	GETGLOBAL	R140 K99 ; R140 := 0x20b7f774
	2085	[2007]	MOVE     	R141 R6 ; R141 := R6
	2086	[2007]	ADD      	R142 R137 R139 ; R142 := R137 + R139
	2087	[2007]	CALL     	R140 3 2 ; R140 := R140(R141,R142)
	2088	[2007]	MOVE     	R7 R140 ; R7 := R140
	2089	[2008]	LOADK    	R8 := 35.000000
	2090	[2008]	JMP      	2162 ; PC := 2162
	2091	[2010]	GETUPVAL 	R140 U9 ; R140 := U9
	2092	[2010]	GETUPVAL 	R141 U10 ; R141 := U10
	2093	[2010]	GETTABLE 	R141 R141 K89 ; R141 := R141["UI_MODE_IN_SPACE_SHIP"]
	2094	[2010]	EQ       	1 R140 R141 ; if R140 == R141 then PC := 2116
	2095	[2010]	JMP      	2116 ; PC := 2116
	2096	[2010]	GETGLOBAL	R140 K12 ; R140 := _T
	2097	[2010]	GETTABLE 	R140 R140 K169 ; R140 := R140["mSentinelMode"]
	2098	[2010]	TEST     	R140 0 ; if not R140 then PC := 2116
	2099	[2010]	JMP      	2116 ; PC := 2116
	2100	[2011]	GETGLOBAL	R140 K3 ; R140 := 0x7b998233
	2101	[2011]	GETGLOBAL	R141 K12 ; R141 := _T
	2102	[2011]	GETTABLE 	R141 R141 K52 ; R141 := R141["suitTable"]
	2103	[2011]	CALL     	R140 2 2 ; R140 := R140(R141)
	2104	[2011]	TEST     	R140 1 ; if R140 then PC := 2116
	2105	[2011]	JMP      	2116 ; PC := 2116
	2106	[2012]	GETGLOBAL	R140 K12 ; R140 := _T
	2107	[2012]	GETTABLE 	R140 R140 K52 ; R140 := R140["suitTable"]
	2108	[2012]	GETGLOBAL	R141 K12 ; R141 := _T
	2109	[2012]	GETTABLE 	R141 R141 K81 ; R141 := R141["DEFAULT_SUIT_ROTATION"]
	2110	[2012]	SETTABLE 	R140 K191 R141 ; R140["desiredRot"] := R141
	2111	[2013]	GETGLOBAL	R140 K12 ; R140 := _T
	2112	[2013]	GETTABLE 	R140 R140 K52 ; R140 := R140["suitTable"]
	2113	[2013]	GETGLOBAL	R141 K12 ; R141 := _T
	2114	[2013]	GETTABLE 	R141 R141 K81 ; R141 := R141["DEFAULT_SUIT_ROTATION"]
	2115	[2013]	SETTABLE 	R140 K192 R141 ; R140["lerpRot"] := R141
	2116	[2016]	GETGLOBAL	R140 K12 ; R140 := _T
	2117	[2016]	SETTABLE 	R140 K169 K33 ; R140["mSentinelMode"] := false
	2118	[2017]	GETGLOBAL	R140 K78 ; R140 := 0x5bced4c4
	2119	[2017]	GETTABLE 	R140 R140 K79 ; R140 := R140[0x3eda26fc]
	2120	[2017]	GETGLOBAL	R141 K78 ; R141 := 0x5bced4c4
	2121	[2017]	GETTABLE 	R141 R141 K80 ; R141 := R141[0xdde5c6a1]
	2122	[2017]	GETGLOBAL	R142 K12 ; R142 := _T
	2123	[2017]	GETTABLE 	R142 R142 K81 ; R142 := R142["DEFAULT_SUIT_ROTATION"]
	2124	[2017]	CALL     	R141 2 0 ; R141,... := R141(R142)
	2125	[2017]	CALL     	R140 0 2 ; R140 := R140(R141,...)
	2126	[2018]	GETGLOBAL	R141 K78 ; R141 := 0x5bced4c4
	2127	[2018]	GETTABLE 	R141 R141 K82 ; R141 := R141[0x00fa6bf1]
	2128	[2018]	GETGLOBAL	R142 K78 ; R142 := 0x5bced4c4
	2129	[2018]	GETTABLE 	R142 R142 K80 ; R142 := R142[0xdde5c6a1]
	2130	[2018]	GETGLOBAL	R143 K12 ; R143 := _T
	2131	[2018]	GETTABLE 	R143 R143 K81 ; R143 := R143["DEFAULT_SUIT_ROTATION"]
	2132	[2018]	CALL     	R142 2 0 ; R142,... := R142(R143)
	2133	[2018]	CALL     	R141 0 2 ; R141 := R141(R142,...)
	2134	[2019]	GETGLOBAL	R142 K84 ; R142 := 0xa421af95
	2135	[2019]	MUL      	R143 K113 R140 ; R143 := 3.500000 * R140
	2136	[2019]	LOADK    	R144 K114 ; R144 := 1.100000
	2137	[2019]	MUL      	R145 K113 R141 ; R145 := 3.500000 * R141
	2138	[2019]	CALL     	R142 4 2 ; R142 := R142(R143,R144,R145)
	2139	[2020]	GETGLOBAL	R143 K6 ; R143 := mCameraTable
	2140	[2020]	GETTABLE 	R143 R143 K7 ; R143 := R143["rootNodeEntity"]
	2141	[2020]	SELF     	R143 R143 K5 ; R144 := R143; R143 := R143[0xd1586535]
	2142	[2020]	CALL     	R143 2 2 ; R143 := R143(R144)
	2143	[2020]	ADD      	R6 R143 R142 ; R6 := R143 + R142
	2144	[2021]	GETGLOBAL	R143 K84 ; R143 := 0xa421af95
	2145	[2021]	LOADK    	R144 := 0.000000
	2146	[2021]	LOADK    	R145 K115 ; R145 := 0.900000
	2147	[2021]	LOADK    	R146 := 0.000000
	2148	[2021]	CALL     	R143 4 2 ; R143 := R143(R144,R145,R146)
	2149	[2022]	GETGLOBAL	R144 K99 ; R144 := 0x20b7f774
	2150	[2022]	MOVE     	R145 R6 ; R145 := R6
	2151	[2022]	GETGLOBAL	R146 K6 ; R146 := mCameraTable
	2152	[2022]	GETTABLE 	R146 R146 K7 ; R146 := R146["rootNodeEntity"]
	2153	[2022]	SELF     	R146 R146 K5 ; R147 := R146; R146 := R146[0xd1586535]
	2154	[2022]	CALL     	R146 2 2 ; R146 := R146(R147)
	2155	[2022]	ADD      	R146 R146 R143 ; R146 := R146 + R143
	2156	[2022]	CALL     	R144 3 2 ; R144 := R144(R145,R146)
	2157	[2022]	MOVE     	R7 R144 ; R7 := R144
	2158	[2023]	GETTABLE 	R144 R7 K21 ; R144 := R7["heading"]
	2159	[2023]	SUB      	R144 R144 K57 ; R144 := R144 - 7.000000
	2160	[2023]	SETTABLE 	R7 K21 R144 ; R7["heading"] := R144
	2161	[2024]	LOADK    	R8 := 35.000000
	2162	[2026]	SELF     	R144 R9 K193 ; R145 := R9; R144 := R9[0x30eb0cc3]
	2163	[2026]	LOADK    	R146 := 0.000000
	2164	[2026]	OP_LOADBOOL	R147 0 0 ; R147 := false
	2165	[2026]	CALL     	R144 4 1 ; R144(R145,R146,R147)
	2166	[2028]	TEST     	R19 1 ; if R19 then PC := 2178
	2167	[2028]	JMP      	2178 ; PC := 2178
	2168	[2028]	GETGLOBAL	R144 K3 ; R144 := 0x7b998233
	2169	[2028]	MOVE     	R145 R11 ; R145 := R11
	2170	[2028]	CALL     	R144 2 2 ; R144 := R144(R145)
	2171	[2028]	TEST     	R144 1 ; if R144 then PC := 2183
	2172	[2028]	JMP      	2183 ; PC := 2183
	2173	[2028]	SELF     	R144 R11 K35 ; R145 := R11; R144 := R11[0xf2deaf69]
	2174	[2028]	GETGLOBAL	R146 K77 ; R146 := gLotusMeleeWeaponType
	2175	[2028]	CALL     	R144 3 2 ; R144 := R144(R145,R146)
	2176	[2028]	TEST     	R144 0 ; if not R144 then PC := 2183
	2177	[2028]	JMP      	2183 ; PC := 2183
	2178	[2029]	GETUPVAL 	R144 U13 ; R144 := U13
	2179	[2029]	MOVE     	R145 R9 ; R145 := R9
	2180	[2029]	MOVE     	R146 R0 ; R146 := R0
	2181	[2029]	MOVE     	R147 R1 ; R147 := R1
	2182	[2029]	CALL     	R144 4 1 ; R144(R145,R146,R147)
	2183	[2032]	OP_LOADBOOL	R144 1 0 ; R144 := true
	2184	[2033]	GETUPVAL 	R145 U14 ; R145 := U14
	2185	[2033]	GETTABLE 	R145 R145 K149 ; R145 := R145[0x09b8fbee]
	2186	[2033]	SELF     	R146 R9 K5 ; R147 := R9; R146 := R9[0xd1586535]
	2187	[2033]	CALL     	R146 2 0 ; R146,... := R146(R147)
	2188	[2033]	CALL     	R145 0 2 ; R145 := R145(R146,...)
	2189	[2035]	EQ       	1 R0 K31 ; if R0 == 2.000000 then PC := 2193
	2190	[2035]	JMP      	2193 ; PC := 2193
	2191	[2035]	EQ       	0 R0 K40 ; if R0 ~= 6.000000 then PC := 2210
	2192	[2035]	JMP      	2210 ; PC := 2210
	2193	[2036]	GETUPVAL 	R146 U9 ; R146 := U9
	2194	[2036]	GETUPVAL 	R147 U10 ; R147 := U10
	2195	[2036]	GETTABLE 	R147 R147 K89 ; R147 := R147["UI_MODE_IN_SPACE_SHIP"]
	2196	[2036]	EQ       	0 R146 R147 ; if R146 ~= R147 then PC := 2210
	2197	[2036]	JMP      	2210 ; PC := 2210
	2198	[2037]	GETGLOBAL	R146 K3 ; R146 := 0x7b998233
	2199	[2037]	MOVE     	R147 R145 ; R147 := R145
	2200	[2037]	CALL     	R146 2 2 ; R146 := R146(R147)
	2201	[2038]	TEST     	R146 1 ; if R146 then PC := 2210
	2202	[2038]	JMP      	2210 ; PC := 2210
	2203	[2038]	GETGLOBAL	R146 K6 ; R146 := mCameraTable
	2204	[2038]	GETTABLE 	R146 R146 K8 ; R146 := R146["cameraTag"]
	2205	[2038]	GETUPVAL 	R147 U0 ; R147 := U0
	2206	[2038]	GETTABLE 	R147 R147 K194 ; R147 := R147["ARCHWING_CAMERA"]
	2207	[2038]	EQ       	1 R146 R147 ; if R146 == R147 then PC := 2210
	2208	[2038]	JMP      	2210 ; PC := 2210
	2209	[2039]	OP_LOADBOOL	R144 0 0 ; R144 := false
	2210	[2042]	TEST     	R144 0 ; if not R144 then PC := 2308
	2211	[2042]	JMP      	2308 ; PC := 2308
	2212	[2043]	OP_LOADBOOL	R146 0 0 ; R146 := false
	2213	[2044]	OP_LOADBOOL	R147 0 0 ; R147 := false
	2214	[2045]	GETGLOBAL	R148 K3 ; R148 := 0x7b998233
	2215	[2045]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2216	[2045]	GETTABLE 	R149 R149 K10 ; R149 := R149["camera"]
	2217	[2045]	CALL     	R148 2 2 ; R148 := R148(R149)
	2218	[2045]	TEST     	R148 1 ; if R148 then PC := 2258
	2219	[2045]	JMP      	2258 ; PC := 2258
	2220	[2046]	GETGLOBAL	R148 K6 ; R148 := mCameraTable
	2221	[2046]	GETTABLE 	R148 R148 K10 ; R148 := R148["camera"]
	2222	[2046]	SELF     	R148 R148 K5 ; R149 := R148; R148 := R148[0xd1586535]
	2223	[2046]	CALL     	R148 2 2 ; R148 := R148(R149)
	2224	[2047]	GETGLOBAL	R149 K195 ; R149 := 0x03ea2485
	2225	[2047]	MOVE     	R150 R148 ; R150 := R148
	2226	[2047]	MOVE     	R151 R6 ; R151 := R6
	2227	[2047]	CALL     	R149 3 2 ; R149 := R149(R150,R151)
	2228	[2047]	LT       	1 K138 R149 ; if 10.000000 < R149 then PC := 2231
	2229	[2047]	JMP      	2231 ; PC := 2231
	2230	[2047]	OP_LOADBOOL	R146 0 1 ; R146 := false; PC := 2231
	2231	[2047]	OP_LOADBOOL	R146 1 0 ; R146 := true
	2232	[2048]	GETGLOBAL	R149 K3 ; R149 := 0x7b998233
	2233	[2048]	GETGLOBAL	R150 K6 ; R150 := mCameraTable
	2234	[2048]	GETTABLE 	R150 R150 K196 ; R150 := R150["destRot"]
	2235	[2048]	CALL     	R149 2 2 ; R149 := R149(R150)
	2236	[2048]	TEST     	R149 1 ; if R149 then PC := 2256
	2237	[2048]	JMP      	2256 ; PC := 2256
	2238	[2048]	GETGLOBAL	R149 K3 ; R149 := 0x7b998233
	2239	[2048]	MOVE     	R150 R7 ; R150 := R7
	2240	[2048]	CALL     	R149 2 2 ; R149 := R149(R150)
	2241	[2048]	TEST     	R149 1 ; if R149 then PC := 2256
	2242	[2048]	JMP      	2256 ; PC := 2256
	2243	[2048]	GETGLOBAL	R149 K197 ; R149 := 0xbf52f20f
	2244	[2048]	GETGLOBAL	R150 K95 ; R150 := 0xf6c6e505
	2245	[2048]	GETGLOBAL	R151 K6 ; R151 := mCameraTable
	2246	[2048]	GETTABLE 	R151 R151 K10 ; R151 := R151["camera"]
	2247	[2048]	SELF     	R151 R151 K16 ; R152 := R151; R151 := R151[0xcb3851b8]
	2248	[2048]	CALL     	R151 2 0 ; R151,... := R151(R152)
	2249	[2048]	CALL     	R150 0 2 ; R150 := R150(R151,...)
	2250	[2048]	GETGLOBAL	R151 K95 ; R151 := 0xf6c6e505
	2251	[2048]	MOVE     	R152 R7 ; R152 := R7
	2252	[2048]	CALL     	R151 2 0 ; R151,... := R151(R152)
	2253	[2048]	CALL     	R149 0 2 ; R149 := R149(R150,...)
	2254	[2048]	LT       	1 K198 R149 ; if 120.000000 < R149 then PC := 2257
	2255	[2048]	JMP      	2257 ; PC := 2257
	2256	[2048]	OP_LOADBOOL	R147 0 1 ; R147 := false; PC := 2257
	2257	[2048]	OP_LOADBOOL	R147 1 0 ; R147 := true
	2258	[2050]	TEST     	R146 1 ; if R146 then PC := 2262
	2259	[2050]	JMP      	2262 ; PC := 2262
	2260	[2050]	TEST     	R147 0 ; if not R147 then PC := 2265
	2261	[2050]	JMP      	2265 ; PC := 2265
	2262	[2052]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2263	[2052]	SETTABLE 	R149 K199 K200 ; R149["LerpScale"] := 1000.000000
	2264	[2052]	JMP      	2267 ; PC := 2267
	2265	[2054]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2266	[2054]	SETTABLE 	R149 K199 K31 ; R149["LerpScale"] := 2.000000
	2267	[2057]	TEST     	R3 1 ; if R3 then PC := 2287
	2268	[2057]	JMP      	2287 ; PC := 2287
	2269	[2058]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2270	[2058]	GETUPVAL 	R150 U14 ; R150 := U14
	2271	[2058]	GETTABLE 	R150 R150 K202 ; R150 := R150[0x9598c404]
	2272	[2058]	CALL     	R150 1 2 ; R150 := R150()
	2273	[2058]	NOT      	R150 R150 ; R150 := not R150
	2274	[2058]	SETTABLE 	R149 K201 R150 ; R149["ConstantUpdate"] := R150
	2275	[2059]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2276	[2059]	GETTABLE 	R149 R149 K201 ; R149 := R149["ConstantUpdate"]
	2277	[2059]	TEST     	R149 0 ; if not R149 then PC := 2287
	2278	[2059]	JMP      	2287 ; PC := 2287
	2279	[2060]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2280	[2060]	SETTABLE 	R149 K203 K54 ; R149["currZoom"] := 0.000000
	2281	[2061]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2282	[2061]	SETTABLE 	R149 K204 K54 ; R149["clampedPan"] := 0.000000
	2283	[2062]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2284	[2062]	GETGLOBAL	R150 K6 ; R150 := mCameraTable
	2285	[2062]	GETTABLE 	R150 R150 K206 ; R150 := R150["DefaultPan"]
	2286	[2062]	SETTABLE 	R149 K205 R150 ; R149["currPan"] := R150
	2287	[2065]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2288	[2065]	SETTABLE 	R149 K207 K28 ; R149["forward"] := nil
	2289	[2066]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2290	[2066]	SETTABLE 	R149 K208 R6 ; R149["destPos"] := R6
	2291	[2067]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2292	[2067]	GETTABLE 	R149 R149 K201 ; R149 := R149["ConstantUpdate"]
	2293	[2067]	TEST     	R149 1 ; if R149 then PC := 2298
	2294	[2067]	JMP      	2298 ; PC := 2298
	2295	[2068]	GETUPVAL 	R149 U14 ; R149 := U14
	2296	[2068]	GETTABLE 	R149 R149 K209 ; R149 := R149[0x7027aec6]
	2297	[2068]	CALL     	R149 1 1 ; R149()
	2298	[2070]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2299	[2070]	SETTABLE 	R149 K196 R7 ; R149["destRot"] := R7
	2300	[2071]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2301	[2071]	GETGLOBAL	R150 K20 ; R150 := 0x00046924
	2302	[2071]	CALL     	R150 1 2 ; R150 := R150()
	2303	[2071]	SETTABLE 	R149 K210 R150 ; R149["biasRot"] := R150
	2304	[2072]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2305	[2072]	SETTABLE 	R149 K211 K2 ; R149["attenFov"] := 1.000000
	2306	[2073]	GETGLOBAL	R149 K6 ; R149 := mCameraTable
	2307	[2073]	SETTABLE 	R149 K212 R8 ; R149["destFov"] := R8
	2308	[2075]	RETURN   	R0 1 ; return 

function #35 <?:2077,2085> (26 instructions, 104 bytes at 000002112B46FB40)
0 params, 5 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[2078]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2078]	GETGLOBAL	R1 K1 ; R1 := mLists
	3	[2078]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	4	[2078]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[2078]	TEST     	R0 1 ; if R0 then PC := 14
	6	[2078]	JMP      	14 ; PC := 14
	7	[2079]	GETGLOBAL	R0 K1 ; R0 := mLists
	8	[2079]	GETTABLE 	R0 R0 K2 ; R0 := R0["mCosmeticsList"]
	9	[2079]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x7c09c373]
	10	[2079]	CALL     	R0 2 1 ; R0(R1)
	11	[2080]	GETGLOBAL	R0 K1 ; R0 := mLists
	12	[2080]	GETTABLE 	R0 R0 K2 ; R0 := R0["mCosmeticsList"]
	13	[2080]	SETTABLE 	R0 K4 K5 ; R0["mLastFocused"] := nil
	14	[2083]	GETGLOBAL	R0 K6 ; R0 := 0xae91e43b
	15	[2083]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xaade900e]
	16	[2083]	LOADK    	R2 K8 ; R2 := "CosmeticsMenu"
	17	[2083]	LOADK    	R3 := 11.000000
	18	[2083]	OP_LOADBOOL	R4 0 0 ; R4 := false
	19	[2083]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	20	[2084]	GETGLOBAL	R0 K6 ; R0 := 0xae91e43b
	21	[2084]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xaade900e]
	22	[2084]	LOADK    	R2 K9 ; R2 := "CosmeticsMenuScrollBar"
	23	[2084]	LOADK    	R3 := 11.000000
	24	[2084]	OP_LOADBOOL	R4 0 0 ; R4 := false
	25	[2084]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	26	[2085]	RETURN   	R0 1 ; return 

function #36 <?:2087,2135> (144 instructions, 576 bytes at 000002112B46FE40)
2 params, 7 slots, 0 upvalues, 0 locals, 23 constants, 0 functions
	1	[2088]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[2088]	GETTABLE 	R2 R2 K1 ; R2 := R2["MenuSuitAvatar"]
	3	[2089]	EQ       	0 R0 K3 ; if R0 ~= 8.000000 then PC := 7
	4	[2089]	JMP      	7 ; PC := 7
	5	[2090]	GETGLOBAL	R3 K0 ; R3 := _T
	6	[2090]	GETTABLE 	R2 R3 K4 ; R2 := R3["MechAvatar"]
	7	[2093]	EQ       	0 R1 K5 ; if R1 ~= 0.000000 then PC := 68
	8	[2093]	JMP      	68 ; PC := 68
	9	[2094]	EQ       	0 R0 K6 ; if R0 ~= 1.000000 then PC := 24
	10	[2094]	JMP      	24 ; PC := 24
	11	[2095]	GETGLOBAL	R3 K0 ; R3 := _T
	12	[2095]	GETTABLE 	R3 R3 K7 ; R3 := R3["MenuSentinel"]
	13	[2096]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	14	[2096]	MOVE     	R5 R3 ; R5 := R3
	15	[2096]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[2096]	TEST     	R4 1 ; if R4 then PC := 142
	17	[2096]	JMP      	142 ; PC := 142
	18	[2097]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xde321e6f]
	19	[2097]	CALL     	R4 2 2 ; R4 := R4(R5)
	20	[2097]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xf7d48ee0]
	21	[2097]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[2097]	RETURN   	R4 2 ; return R4 
	23	[2098]	JMP      	142 ; PC := 142
	24	[2099]	EQ       	0 R0 K11 ; if R0 ~= 6.000000 then PC := 40
	25	[2099]	JMP      	40 ; PC := 40
	26	[2100]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	27	[2100]	GETGLOBAL	R5 K0 ; R5 := _T
	28	[2100]	GETTABLE 	R5 R5 K12 ; R5 := R5["KDriveAvatar"]
	29	[2100]	CALL     	R4 2 2 ; R4 := R4(R5)
	30	[2100]	TEST     	R4 1 ; if R4 then PC := 142
	31	[2100]	JMP      	142 ; PC := 142
	32	[2101]	GETGLOBAL	R4 K0 ; R4 := _T
	33	[2101]	GETTABLE 	R4 R4 K12 ; R4 := R4["KDriveAvatar"]
	34	[2101]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0xde321e6f]
	35	[2101]	CALL     	R4 2 2 ; R4 := R4(R5)
	36	[2101]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xf7d48ee0]
	37	[2101]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[2101]	RETURN   	R4 2 ; return R4 
	39	[2102]	JMP      	142 ; PC := 142
	40	[2103]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	41	[2103]	MOVE     	R5 R2 ; R5 := R2
	42	[2103]	CALL     	R4 2 2 ; R4 := R4(R5)
	43	[2103]	TEST     	R4 1 ; if R4 then PC := 142
	44	[2103]	JMP      	142 ; PC := 142
	45	[2104]	EQ       	0 R0 K13 ; if R0 ~= 2.000000 then PC := 53
	46	[2104]	JMP      	53 ; PC := 53
	47	[2105]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	48	[2105]	CALL     	R4 2 2 ; R4 := R4(R5)
	49	[2105]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x2303a280]
	50	[2105]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[2105]	RETURN   	R4 2 ; return R4 
	52	[2105]	JMP      	142 ; PC := 142
	53	[2106]	EQ       	0 R0 K15 ; if R0 ~= 7.000000 then PC := 62
	54	[2106]	JMP      	62 ; PC := 62
	55	[2107]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	56	[2107]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[2107]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe85a2361]
	58	[2107]	LOADK    	R6 := 11.000000
	59	[2107]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	60	[2107]	RETURN   	R4 2 ; return R4 
	61	[2107]	JMP      	142 ; PC := 142
	62	[2109]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	63	[2109]	CALL     	R4 2 2 ; R4 := R4(R5)
	64	[2109]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xf7d48ee0]
	65	[2109]	CALL     	R4 2 2 ; R4 := R4(R5)
	66	[2109]	RETURN   	R4 2 ; return R4 
	67	[2111]	JMP      	142 ; PC := 142
	68	[2112]	GETGLOBAL	R4 K0 ; R4 := _T
	69	[2112]	GETTABLE 	R4 R4 K18 ; R4 := R4["mSpecialSuitMode"]
	70	[2112]	TEST     	R4 0 ; if not R4 then PC := 91
	71	[2112]	JMP      	91 ; PC := 91
	72	[2113]	GETGLOBAL	R4 K0 ; R4 := _T
	73	[2113]	GETTABLE 	R2 R4 K19 ; R2 := R4["SpecialSuitAvatar"]
	74	[2115]	EQ       	0 R1 K20 ; if R1 ~= 5.000000 then PC := 82
	75	[2115]	JMP      	82 ; PC := 82
	76	[2116]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	77	[2116]	CALL     	R4 2 2 ; R4 := R4(R5)
	78	[2116]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xf7d48ee0]
	79	[2116]	CALL     	R4 2 2 ; R4 := R4(R5)
	80	[2116]	RETURN   	R4 2 ; return R4 
	81	[2116]	JMP      	142 ; PC := 142
	82	[2117]	EQ       	0 R1 K11 ; if R1 ~= 6.000000 then PC := 142
	83	[2117]	JMP      	142 ; PC := 142
	84	[2118]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	85	[2118]	CALL     	R4 2 2 ; R4 := R4(R5)
	86	[2118]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe85a2361]
	87	[2118]	LOADK    	R6 := 7.000000
	88	[2118]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	89	[2118]	RETURN   	R4 2 ; return R4 
	90	[2119]	JMP      	142 ; PC := 142
	91	[2120]	EQ       	1 R1 K20 ; if R1 == 5.000000 then PC := 95
	92	[2120]	JMP      	95 ; PC := 95
	93	[2120]	EQ       	0 R1 K11 ; if R1 ~= 6.000000 then PC := 102
	94	[2120]	JMP      	102 ; PC := 102
	95	[2121]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	96	[2121]	CALL     	R4 2 2 ; R4 := R4(R5)
	97	[2121]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe85a2361]
	98	[2121]	LOADK    	R6 := 7.000000
	99	[2121]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	100	[2121]	RETURN   	R4 2 ; return R4 
	101	[2121]	JMP      	142 ; PC := 142
	102	[2122]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	103	[2122]	MOVE     	R5 R2 ; R5 := R2
	104	[2122]	CALL     	R4 2 2 ; R4 := R4(R5)
	105	[2122]	TEST     	R4 1 ; if R4 then PC := 142
	106	[2122]	JMP      	142 ; PC := 142
	107	[2123]	EQ       	0 R1 K13 ; if R1 ~= 2.000000 then PC := 116
	108	[2123]	JMP      	116 ; PC := 116
	109	[2124]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	110	[2124]	CALL     	R4 2 2 ; R4 := R4(R5)
	111	[2124]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe85a2361]
	112	[2124]	LOADK    	R6 := 1.000000
	113	[2124]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	114	[2124]	RETURN   	R4 2 ; return R4 
	115	[2124]	JMP      	142 ; PC := 142
	116	[2125]	EQ       	0 R1 K6 ; if R1 ~= 1.000000 then PC := 125
	117	[2125]	JMP      	125 ; PC := 125
	118	[2126]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	119	[2126]	CALL     	R4 2 2 ; R4 := R4(R5)
	120	[2126]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe85a2361]
	121	[2126]	LOADK    	R6 := 0.000000
	122	[2126]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	123	[2126]	RETURN   	R4 2 ; return R4 
	124	[2126]	JMP      	142 ; PC := 142
	125	[2127]	EQ       	0 R1 K21 ; if R1 ~= 3.000000 then PC := 134
	126	[2127]	JMP      	134 ; PC := 134
	127	[2128]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	128	[2128]	CALL     	R4 2 2 ; R4 := R4(R5)
	129	[2128]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe85a2361]
	130	[2128]	LOADK    	R6 := 5.000000
	131	[2128]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	132	[2128]	RETURN   	R4 2 ; return R4 
	133	[2128]	JMP      	142 ; PC := 142
	134	[2129]	EQ       	0 R1 K22 ; if R1 ~= 4.000000 then PC := 142
	135	[2129]	JMP      	142 ; PC := 142
	136	[2130]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xde321e6f]
	137	[2130]	CALL     	R4 2 2 ; R4 := R4(R5)
	138	[2130]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe85a2361]
	139	[2130]	LOADK    	R6 := 10.000000
	140	[2130]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	141	[2130]	RETURN   	R4 2 ; return R4 
	142	[2134]	LOADNIL  	R4 R4 ; R4 := nil
	143	[2134]	RETURN   	R4 2 ; return R4 
	144	[2135]	RETURN   	R0 1 ; return 

function #37 <?:2137,2143> (18 instructions, 72 bytes at 000002112B470120)
1 param, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[2138]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2138]	GETTABLE 	R2 R0 K0 ; R2 := R0["LoadOutType"]
	3	[2138]	GETTABLE 	R3 R0 K1 ; R3 := R0["LoadOutId"]
	4	[2138]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[2139]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	6	[2139]	MOVE     	R3 R1 ; R3 := R1
	7	[2139]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2139]	TEST     	R2 1 ; if R2 then PC := 16
	9	[2139]	JMP      	16 ; PC := 16
	10	[2140]	GETGLOBAL	R2 K3 ; R2 := 0xb009bbc6
	11	[2140]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0x0911ae7c]
	12	[2140]	LOADK    	R5 := 2.000000
	13	[2140]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	14	[2140]	TAILCALL 	R2 0 0 ; R2,... := R2(R3,...)
	15	[2140]	RETURN   	R2 0 ; return R2,... 
	16	[2142]	LOADNIL  	R2 R2 ; R2 := nil
	17	[2142]	RETURN   	R2 2 ; return R2 
	18	[2143]	RETURN   	R0 1 ; return 

function #38 <?:2145,2152> (17 instructions, 68 bytes at 000002112CC8E0F0)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[2146]	GETGLOBAL	R1 K0 ; R1 := 0xb009bbc6
	2	[2146]	GETTABLE 	R2 R0 K1 ; R2 := R0["Customization"]
	3	[2146]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x2540510f]
	4	[2146]	LOADK    	R4 := 2.000000
	5	[2146]	CALL     	R2 3 0 ; R2,... := R2(R3,R4)
	6	[2146]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	7	[2148]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	8	[2148]	MOVE     	R3 R1 ; R3 := R1
	9	[2148]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[2148]	TEST     	R2 0 ; if not R2 then PC := 16
	11	[2148]	JMP      	16 ; PC := 16
	12	[2149]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[2149]	MOVE     	R3 R0 ; R3 := R0
	14	[2149]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[2149]	MOVE     	R1 R2 ; R1 := R2
	16	[2151]	RETURN   	R1 2 ; return R1 
	17	[2152]	RETURN   	R0 1 ; return 

function #39 <?:2154,2270> (308 instructions, 1232 bytes at 000002112CC8E2A0)
3 params, 37 slots, 1 upvalue, 0 locals, 34 constants, 0 functions
	1	[2155]	GETGLOBAL	R3 K0 ; R3 := _T
	2	[2155]	GETTABLE 	R3 R3 K1 ; R3 := R3["MenuSuitAvatar"]
	3	[2156]	NEWTABLE 	R4 0 0 ; R4 := {}
	4	[2157]	OP_LOADBOOL	R5 0 0 ; R5 := false
	5	[2158]	EQ       	0 R0 K3 ; if R0 ~= 1.000000 then PC := 60
	6	[2158]	JMP      	60 ; PC := 60
	7	[2159]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 305
	8	[2159]	JMP      	305 ; PC := 305
	9	[2160]	GETGLOBAL	R6 K0 ; R6 := _T
	10	[2160]	GETTABLE 	R6 R6 K5 ; R6 := R6["MenuSentinel"]
	11	[2161]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	12	[2161]	MOVE     	R8 R6 ; R8 := R6
	13	[2161]	CALL     	R7 2 2 ; R7 := R7(R8)
	14	[2161]	TEST     	R7 1 ; if R7 then PC := 305
	15	[2161]	JMP      	305 ; PC := 305
	16	[2162]	SELF     	R7 R6 K7 ; R8 := R6; R7 := R6[0xde321e6f]
	17	[2162]	CALL     	R7 2 2 ; R7 := R7(R8)
	18	[2162]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0xf7d48ee0]
	19	[2162]	CALL     	R7 2 2 ; R7 := R7(R8)
	20	[2163]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	21	[2163]	MOVE     	R9 R2 ; R9 := R2
	22	[2163]	CALL     	R8 2 2 ; R8 := R8(R9)
	23	[2163]	TEST     	R8 1 ; if R8 then PC := 36
	24	[2163]	JMP      	36 ; PC := 36
	25	[2163]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	26	[2163]	MOVE     	R9 R7 ; R9 := R7
	27	[2163]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[2163]	TEST     	R8 1 ; if R8 then PC := 41
	29	[2163]	JMP      	41 ; PC := 41
	30	[2163]	SELF     	R8 R7 K9 ; R9 := R7; R8 := R7[0xf2deaf69]
	31	[2163]	SELF     	R10 R2 K10 ; R11 := R2; R10 := R2[0xcde10c4a]
	32	[2163]	CALL     	R10 2 0 ; R10,... := R10(R11)
	33	[2163]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	34	[2163]	TEST     	R8 0 ; if not R8 then PC := 41
	35	[2163]	JMP      	41 ; PC := 41
	36	[2164]	GETGLOBAL	R8 K11 ; R8 := 0x33bdd652
	37	[2164]	GETTABLE 	R8 R8 K12 ; R8 := R8[0x23d5322f]
	38	[2164]	MOVE     	R9 R4 ; R9 := R4
	39	[2164]	MOVE     	R10 R6 ; R10 := R6
	40	[2164]	CALL     	R8 3 1 ; R8(R9,R10)
	41	[2166]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	42	[2166]	MOVE     	R9 R7 ; R9 := R7
	43	[2166]	CALL     	R8 2 2 ; R8 := R8(R9)
	44	[2166]	TEST     	R8 1 ; if R8 then PC := 58
	45	[2166]	JMP      	58 ; PC := 58
	46	[2166]	SELF     	R8 R7 K9 ; R9 := R7; R8 := R7[0xf2deaf69]
	47	[2166]	GETGLOBAL	R10 K13 ; R10 := 0x88980f4f
	48	[2166]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	49	[2166]	TEST     	R8 1 ; if R8 then PC := 56
	50	[2166]	JMP      	56 ; PC := 56
	51	[2166]	SELF     	R8 R7 K9 ; R9 := R7; R8 := R7[0xf2deaf69]
	52	[2166]	GETGLOBAL	R10 K14 ; R10 := 0xb506ff82
	53	[2166]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	54	[2166]	TEST     	R8 0 ; if not R8 then PC := 58
	55	[2166]	JMP      	58 ; PC := 58
	56	[2167]	OP_LOADBOOL	R5 0 0 ; R5 := false
	57	[2167]	JMP      	305 ; PC := 305
	58	[2169]	OP_LOADBOOL	R5 1 0 ; R5 := true
	59	[2172]	JMP      	305 ; PC := 305
	60	[2174]	GETUPVAL 	R8 U0 ; R8 := U0
	61	[2174]	GETTABLE 	R8 R8 K15 ; R8 := R8["KDriveSlot"]
	62	[2174]	EQ       	0 R1 R8 ; if R1 ~= R8 then PC := 81
	63	[2174]	JMP      	81 ; PC := 81
	64	[2174]	EQ       	0 R0 K16 ; if R0 ~= 6.000000 then PC := 81
	65	[2174]	JMP      	81 ; PC := 81
	66	[2175]	GETGLOBAL	R8 K0 ; R8 := _T
	67	[2175]	GETTABLE 	R3 R8 K17 ; R3 := R8["KDriveAvatar"]
	68	[2176]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	69	[2176]	MOVE     	R9 R3 ; R9 := R3
	70	[2176]	CALL     	R8 2 2 ; R8 := R8(R9)
	71	[2176]	TEST     	R8 1 ; if R8 then PC := 81
	72	[2176]	JMP      	81 ; PC := 81
	73	[2177]	GETGLOBAL	R8 K11 ; R8 := 0x33bdd652
	74	[2177]	GETTABLE 	R8 R8 K12 ; R8 := R8[0x23d5322f]
	75	[2177]	MOVE     	R9 R4 ; R9 := R4
	76	[2177]	MOVE     	R10 R3 ; R10 := R3
	77	[2177]	CALL     	R8 3 1 ; R8(R9,R10)
	78	[2178]	MOVE     	R8 R4 ; R8 := R4
	79	[2178]	MOVE     	R9 R5 ; R9 := R5
	80	[2178]	RETURN   	R8 3 ; return R8, R9 
	81	[2182]	EQ       	0 R0 K18 ; if R0 ~= 8.000000 then PC := 100
	82	[2182]	JMP      	100 ; PC := 100
	83	[2183]	GETGLOBAL	R8 K0 ; R8 := _T
	84	[2183]	GETTABLE 	R3 R8 K19 ; R3 := R8["MechAvatar"]
	85	[2184]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	86	[2184]	MOVE     	R9 R3 ; R9 := R3
	87	[2184]	CALL     	R8 2 2 ; R8 := R8(R9)
	88	[2184]	TEST     	R8 1 ; if R8 then PC := 100
	89	[2184]	JMP      	100 ; PC := 100
	90	[2184]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 100
	91	[2184]	JMP      	100 ; PC := 100
	92	[2185]	GETGLOBAL	R8 K11 ; R8 := 0x33bdd652
	93	[2185]	GETTABLE 	R8 R8 K12 ; R8 := R8[0x23d5322f]
	94	[2185]	MOVE     	R9 R4 ; R9 := R4
	95	[2185]	MOVE     	R10 R3 ; R10 := R3
	96	[2185]	CALL     	R8 3 1 ; R8(R9,R10)
	97	[2186]	MOVE     	R8 R4 ; R8 := R4
	98	[2186]	MOVE     	R9 R5 ; R9 := R5
	99	[2186]	RETURN   	R8 3 ; return R8, R9 
	100	[2190]	EQ       	1 R1 K4 ; if R1 == 0.000000 then PC := 108
	101	[2190]	JMP      	108 ; PC := 108
	102	[2190]	EQ       	0 R1 K20 ; if R1 ~= 5.000000 then PC := 220
	103	[2190]	JMP      	220 ; PC := 220
	104	[2190]	GETGLOBAL	R8 K0 ; R8 := _T
	105	[2190]	GETTABLE 	R8 R8 K21 ; R8 := R8["mSpecialSuitMode"]
	106	[2190]	TEST     	R8 0 ; if not R8 then PC := 220
	107	[2190]	JMP      	220 ; PC := 220
	108	[2191]	EQ       	0 R1 K20 ; if R1 ~= 5.000000 then PC := 120
	109	[2191]	JMP      	120 ; PC := 120
	110	[2192]	GETGLOBAL	R8 K0 ; R8 := _T
	111	[2192]	GETTABLE 	R3 R8 K22 ; R3 := R8["SpecialSuitAvatar"]
	112	[2193]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	113	[2193]	MOVE     	R9 R3 ; R9 := R3
	114	[2193]	CALL     	R8 2 2 ; R8 := R8(R9)
	115	[2193]	TEST     	R8 0 ; if not R8 then PC := 120
	116	[2193]	JMP      	120 ; PC := 120
	117	[2194]	MOVE     	R8 R4 ; R8 := R4
	118	[2194]	MOVE     	R9 R5 ; R9 := R5
	119	[2194]	RETURN   	R8 3 ; return R8, R9 
	120	[2198]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	121	[2198]	MOVE     	R9 R3 ; R9 := R3
	122	[2198]	CALL     	R8 2 2 ; R8 := R8(R9)
	123	[2198]	TEST     	R8 1 ; if R8 then PC := 305
	124	[2198]	JMP      	305 ; PC := 305
	125	[2199]	SELF     	R8 R3 K7 ; R9 := R3; R8 := R3[0xde321e6f]
	126	[2199]	CALL     	R8 2 2 ; R8 := R8(R9)
	127	[2200]	EQ       	0 R0 K23 ; if R0 ~= 7.000000 then PC := 157
	128	[2200]	JMP      	157 ; PC := 157
	129	[2201]	SELF     	R9 R8 K24 ; R10 := R8; R9 := R8[0xe85a2361]
	130	[2201]	LOADK    	R11 := 11.000000
	131	[2201]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	132	[2202]	GETGLOBAL	R10 K6 ; R10 := 0x7b998233
	133	[2202]	MOVE     	R11 R9 ; R11 := R9
	134	[2202]	CALL     	R10 2 2 ; R10 := R10(R11)
	135	[2202]	TEST     	R10 1 ; if R10 then PC := 305
	136	[2202]	JMP      	305 ; PC := 305
	137	[2203]	LOADK    	R10 := 0.000000
	138	[2203]	LOADK    	R11 := 3.000000
	139	[2203]	LOADK    	R12 := 1.000000
	140	[2203]	FORPREP  	R10 155 ; R10 -= R12; PC := 155
	141	[2204]	SELF     	R14 R9 K26 ; R15 := R9; R14 := R9[0x92c56c50]
	142	[2204]	LOADK    	R16 := 1.000000
	143	[2204]	MOVE     	R17 R13 ; R17 := R13
	144	[2204]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	145	[2205]	GETGLOBAL	R15 K6 ; R15 := 0x7b998233
	146	[2205]	MOVE     	R16 R14 ; R16 := R14
	147	[2205]	CALL     	R15 2 2 ; R15 := R15(R16)
	148	[2205]	TEST     	R15 1 ; if R15 then PC := 155
	149	[2205]	JMP      	155 ; PC := 155
	150	[2206]	GETGLOBAL	R15 K11 ; R15 := 0x33bdd652
	151	[2206]	GETTABLE 	R15 R15 K12 ; R15 := R15[0x23d5322f]
	152	[2206]	MOVE     	R16 R4 ; R16 := R4
	153	[2206]	MOVE     	R17 R14 ; R17 := R14
	154	[2206]	CALL     	R15 3 1 ; R15(R16,R17)
	155	[2203]	FORLOOP  	R10 141 ; R10 += R12; if R10 <= R11 then begin PC := 141; R13 := R10 end
	156	[2209]	JMP      	305 ; PC := 305
	157	[2211]	SELF     	R15 R8 K8 ; R16 := R8; R15 := R8[0xf7d48ee0]
	158	[2211]	CALL     	R15 2 2 ; R15 := R15(R16)
	159	[2212]	GETGLOBAL	R16 K6 ; R16 := 0x7b998233
	160	[2212]	MOVE     	R17 R15 ; R17 := R15
	161	[2212]	CALL     	R16 2 2 ; R16 := R16(R17)
	162	[2212]	TEST     	R16 1 ; if R16 then PC := 305
	163	[2212]	JMP      	305 ; PC := 305
	164	[2212]	GETGLOBAL	R16 K6 ; R16 := 0x7b998233
	165	[2212]	MOVE     	R17 R2 ; R17 := R2
	166	[2212]	CALL     	R16 2 2 ; R16 := R16(R17)
	167	[2212]	TEST     	R16 1 ; if R16 then PC := 175
	168	[2212]	JMP      	175 ; PC := 175
	169	[2212]	SELF     	R16 R15 K9 ; R17 := R15; R16 := R15[0xf2deaf69]
	170	[2212]	SELF     	R18 R2 K10 ; R19 := R2; R18 := R2[0xcde10c4a]
	171	[2212]	CALL     	R18 2 0 ; R18,... := R18(R19)
	172	[2212]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	173	[2212]	TEST     	R16 0 ; if not R16 then PC := 305
	174	[2212]	JMP      	305 ; PC := 305
	175	[2213]	GETGLOBAL	R16 K11 ; R16 := 0x33bdd652
	176	[2213]	GETTABLE 	R16 R16 K12 ; R16 := R16[0x23d5322f]
	177	[2213]	MOVE     	R17 R4 ; R17 := R4
	178	[2213]	MOVE     	R18 R3 ; R18 := R3
	179	[2213]	CALL     	R16 3 1 ; R16(R17,R18)
	180	[2215]	SELF     	R16 R15 K9 ; R17 := R15; R16 := R15[0xf2deaf69]
	181	[2215]	GETGLOBAL	R18 K27 ; R18 := 0xf773e9d4
	182	[2215]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	183	[2215]	TEST     	R16 0 ; if not R16 then PC := 218
	184	[2215]	JMP      	218 ; PC := 218
	185	[2215]	GETGLOBAL	R16 K6 ; R16 := 0x7b998233
	186	[2215]	SELF     	R17 R8 K28 ; R18 := R8; R17 := R8[0xbb4a3d82]
	187	[2215]	CALL     	R17 2 0 ; R17,... := R17(R18)
	188	[2215]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	189	[2215]	TEST     	R16 1 ; if R16 then PC := 218
	190	[2215]	JMP      	218 ; PC := 218
	191	[2217]	SELF     	R16 R8 K24 ; R17 := R8; R16 := R8[0xe85a2361]
	192	[2217]	LOADK    	R18 := 7.000000
	193	[2217]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	194	[2218]	GETGLOBAL	R17 K6 ; R17 := 0x7b998233
	195	[2218]	MOVE     	R18 R16 ; R18 := R16
	196	[2218]	CALL     	R17 2 2 ; R17 := R17(R18)
	197	[2218]	TEST     	R17 1 ; if R17 then PC := 218
	198	[2218]	JMP      	218 ; PC := 218
	199	[2219]	LOADK    	R17 := 0.000000
	200	[2219]	LOADK    	R18 := 3.000000
	201	[2219]	LOADK    	R19 := 1.000000
	202	[2219]	FORPREP  	R17 217 ; R17 -= R19; PC := 217
	203	[2220]	SELF     	R21 R16 K26 ; R22 := R16; R21 := R16[0x92c56c50]
	204	[2220]	LOADK    	R23 := 1.000000
	205	[2220]	MOVE     	R24 R20 ; R24 := R20
	206	[2220]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	207	[2221]	GETGLOBAL	R22 K6 ; R22 := 0x7b998233
	208	[2221]	MOVE     	R23 R21 ; R23 := R21
	209	[2221]	CALL     	R22 2 2 ; R22 := R22(R23)
	210	[2221]	TEST     	R22 1 ; if R22 then PC := 217
	211	[2221]	JMP      	217 ; PC := 217
	212	[2222]	GETGLOBAL	R22 K11 ; R22 := 0x33bdd652
	213	[2222]	GETTABLE 	R22 R22 K12 ; R22 := R22[0x23d5322f]
	214	[2222]	MOVE     	R23 R4 ; R23 := R4
	215	[2222]	MOVE     	R24 R21 ; R24 := R21
	216	[2222]	CALL     	R22 3 1 ; R22(R23,R24)
	217	[2219]	FORLOOP  	R17 203 ; R17 += R19; if R17 <= R18 then begin PC := 203; R20 := R17 end
	218	[2227]	OP_LOADBOOL	R5 1 0 ; R5 := true
	219	[2230]	JMP      	305 ; PC := 305
	220	[2232]	LOADK    	R22 := 0.000000
	221	[2233]	EQ       	0 R1 K29 ; if R1 ~= 2.000000 then PC := 225
	222	[2233]	JMP      	225 ; PC := 225
	223	[2234]	LOADK    	R22 := 1.000000
	224	[2234]	JMP      	244 ; PC := 244
	225	[2235]	EQ       	0 R1 K30 ; if R1 ~= 3.000000 then PC := 229
	226	[2235]	JMP      	229 ; PC := 229
	227	[2236]	LOADK    	R22 := 5.000000
	228	[2236]	JMP      	244 ; PC := 244
	229	[2237]	EQ       	1 R1 K20 ; if R1 == 5.000000 then PC := 233
	230	[2237]	JMP      	233 ; PC := 233
	231	[2237]	EQ       	0 R1 K16 ; if R1 ~= 6.000000 then PC := 241
	232	[2237]	JMP      	241 ; PC := 241
	233	[2238]	GETGLOBAL	R23 K0 ; R23 := _T
	234	[2238]	GETTABLE 	R23 R23 K21 ; R23 := R23["mSpecialSuitMode"]
	235	[2238]	TEST     	R23 0 ; if not R23 then PC := 239
	236	[2238]	JMP      	239 ; PC := 239
	237	[2239]	GETGLOBAL	R23 K0 ; R23 := _T
	238	[2239]	GETTABLE 	R3 R23 K22 ; R3 := R23["SpecialSuitAvatar"]
	239	[2241]	LOADK    	R22 := 7.000000
	240	[2241]	JMP      	244 ; PC := 244
	241	[2242]	EQ       	0 R1 K31 ; if R1 ~= 4.000000 then PC := 244
	242	[2242]	JMP      	244 ; PC := 244
	243	[2243]	LOADK    	R22 := 10.000000
	244	[2246]	GETGLOBAL	R23 K6 ; R23 := 0x7b998233
	245	[2246]	MOVE     	R24 R3 ; R24 := R3
	246	[2246]	CALL     	R23 2 2 ; R23 := R23(R24)
	247	[2246]	TEST     	R23 1 ; if R23 then PC := 305
	248	[2246]	JMP      	305 ; PC := 305
	249	[2247]	SELF     	R23 R3 K7 ; R24 := R3; R23 := R3[0xde321e6f]
	250	[2247]	CALL     	R23 2 2 ; R23 := R23(R24)
	251	[2247]	SELF     	R23 R23 K24 ; R24 := R23; R23 := R23[0xe85a2361]
	252	[2247]	MOVE     	R25 R22 ; R25 := R22
	253	[2247]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	254	[2248]	GETGLOBAL	R24 K6 ; R24 := 0x7b998233
	255	[2248]	MOVE     	R25 R23 ; R25 := R23
	256	[2248]	CALL     	R24 2 2 ; R24 := R24(R25)
	257	[2248]	TEST     	R24 1 ; if R24 then PC := 305
	258	[2248]	JMP      	305 ; PC := 305
	259	[2248]	GETGLOBAL	R24 K6 ; R24 := 0x7b998233
	260	[2248]	MOVE     	R25 R2 ; R25 := R2
	261	[2248]	CALL     	R24 2 2 ; R24 := R24(R25)
	262	[2248]	TEST     	R24 1 ; if R24 then PC := 270
	263	[2248]	JMP      	270 ; PC := 270
	264	[2248]	SELF     	R24 R23 K9 ; R25 := R23; R24 := R23[0xf2deaf69]
	265	[2248]	SELF     	R26 R2 K10 ; R27 := R2; R26 := R2[0xcde10c4a]
	266	[2248]	CALL     	R26 2 0 ; R26,... := R26(R27)
	267	[2248]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	268	[2248]	TEST     	R24 0 ; if not R24 then PC := 305
	269	[2248]	JMP      	305 ; PC := 305
	270	[2249]	LOADK    	R24 := 0.000000
	271	[2249]	LOADK    	R25 := 3.000000
	272	[2249]	LOADK    	R26 := 1.000000
	273	[2249]	FORPREP  	R24 288 ; R24 -= R26; PC := 288
	274	[2250]	SELF     	R28 R23 K26 ; R29 := R23; R28 := R23[0x92c56c50]
	275	[2250]	LOADK    	R30 := 1.000000
	276	[2250]	MOVE     	R31 R27 ; R31 := R27
	277	[2250]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	278	[2251]	GETGLOBAL	R29 K6 ; R29 := 0x7b998233
	279	[2251]	MOVE     	R30 R28 ; R30 := R28
	280	[2251]	CALL     	R29 2 2 ; R29 := R29(R30)
	281	[2251]	TEST     	R29 1 ; if R29 then PC := 288
	282	[2251]	JMP      	288 ; PC := 288
	283	[2252]	GETGLOBAL	R29 K11 ; R29 := 0x33bdd652
	284	[2252]	GETTABLE 	R29 R29 K12 ; R29 := R29[0x23d5322f]
	285	[2252]	MOVE     	R30 R4 ; R30 := R4
	286	[2252]	MOVE     	R31 R28 ; R31 := R28
	287	[2252]	CALL     	R29 3 1 ; R29(R30,R31)
	288	[2249]	FORLOOP  	R24 274 ; R24 += R26; if R24 <= R25 then begin PC := 274; R27 := R24 end
	289	[2256]	EQ       	1 R1 K30 ; if R1 == 3.000000 then PC := 305
	290	[2256]	JMP      	305 ; PC := 305
	291	[2257]	SELF     	R29 R23 K32 ; R30 := R23; R29 := R23[0x4037ae58]
	292	[2257]	CALL     	R29 2 2 ; R29 := R29(R30)
	293	[2258]	EQ       	1 R29 K33 ; if R29 == nil then PC := 305
	294	[2258]	JMP      	305 ; PC := 305
	295	[2259]	LOADK    	R30 := 1.000000
	296	[2259]	LEN      	R31 R29 ; R31 := # R29
	297	[2259]	LOADK    	R32 := 1.000000
	298	[2259]	FORPREP  	R30 304 ; R30 -= R32; PC := 304
	299	[2260]	GETGLOBAL	R34 K11 ; R34 := 0x33bdd652
	300	[2260]	GETTABLE 	R34 R34 K12 ; R34 := R34[0x23d5322f]
	301	[2260]	MOVE     	R35 R4 ; R35 := R4
	302	[2260]	GETTABLE 	R36 R29 R33 ; R36 := R29[R33]
	303	[2260]	CALL     	R34 3 1 ; R34(R35,R36)
	304	[2259]	FORLOOP  	R30 299 ; R30 += R32; if R30 <= R31 then begin PC := 299; R33 := R30 end
	305	[2269]	MOVE     	R34 R4 ; R34 := R4
	306	[2269]	MOVE     	R35 R5 ; R35 := R5
	307	[2269]	RETURN   	R34 3 ; return R34, R35 
	308	[2270]	RETURN   	R0 1 ; return 

function #40 <?:2272,2283> (32 instructions, 128 bytes at 000002112CC8EF20)
0 params, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[2273]	LOADK    	R0 := 2.000000
	2	[2274]	GETGLOBAL	R1 K1 ; R1 := mLists
	3	[2274]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	4	[2274]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCurrLevel"]
	5	[2274]	GETGLOBAL	R2 K1 ; R2 := mLists
	6	[2274]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCosmeticsList"]
	7	[2274]	GETTABLE 	R2 R2 K4 ; R2 := R2["DEFAULT"]
	8	[2274]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 12
	9	[2274]	JMP      	12 ; PC := 12
	10	[2275]	LOADK    	R0 := 0.000000
	11	[2275]	JMP      	31 ; PC := 31
	12	[2276]	GETGLOBAL	R1 K1 ; R1 := mLists
	13	[2276]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	14	[2276]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCurrLevel"]
	15	[2276]	GETGLOBAL	R2 K1 ; R2 := mLists
	16	[2276]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCosmeticsList"]
	17	[2276]	GETTABLE 	R2 R2 K5 ; R2 := R2["ATTACHMENTS"]
	18	[2276]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 22
	19	[2276]	JMP      	22 ; PC := 22
	20	[2277]	LOADK    	R0 := 1.000000
	21	[2277]	JMP      	31 ; PC := 31
	22	[2278]	GETGLOBAL	R1 K1 ; R1 := mLists
	23	[2278]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	24	[2278]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCurrLevel"]
	25	[2278]	GETGLOBAL	R2 K1 ; R2 := mLists
	26	[2278]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCosmeticsList"]
	27	[2278]	GETTABLE 	R2 R2 K6 ; R2 := R2["SYANDANAS"]
	28	[2278]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 31
	29	[2278]	JMP      	31 ; PC := 31
	30	[2279]	LOADK    	R0 := 3.000000
	31	[2282]	RETURN   	R0 2 ; return R0 
	32	[2283]	RETURN   	R0 1 ; return 

function #41 <?:2285,2351> (58 instructions, 232 bytes at 000002112CC8F150)
0 params, 11 slots, 4 upvalues, 0 locals, 16 constants, 2 functions
	1	[2286]	GETGLOBAL	R0 K0 ; R0 := mSelected
	2	[2286]	GETTABLE 	R0 R0 K1 ; R0 := R0["Element"]
	3	[2286]	EQ       	1 R0 K2 ; if R0 == nil then PC := 58
	4	[2286]	JMP      	58 ; PC := 58
	5	[2287]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[2287]	CALL     	R0 1 2 ; R0 := R0()
	7	[2289]	GETGLOBAL	R1 K0 ; R1 := mSelected
	8	[2289]	GETTABLE 	R1 R1 K1 ; R1 := R1["Element"]
	9	[2289]	GETTABLE 	R1 R1 K3 ; R1 := R1["EquippedItem"]
	10	[2289]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x68d708a7]
	11	[2289]	GETGLOBAL	R3 K0 ; R3 := mSelected
	12	[2289]	GETTABLE 	R3 R3 K1 ; R3 := R3["Element"]
	13	[2289]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCustSlot"]
	14	[2289]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[2290]	EQ       	0 R0 K7 ; if R0 ~= 0.000000 then PC := 44
	16	[2290]	JMP      	44 ; PC := 44
	17	[2291]	GETGLOBAL	R2 K8 ; R2 := 0x7b998233
	18	[2291]	MOVE     	R3 R1 ; R3 := R1
	19	[2291]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[2291]	TEST     	R2 1 ; if R2 then PC := 44
	21	[2291]	JMP      	44 ; PC := 44
	22	[2292]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[2292]	GETGLOBAL	R3 K0 ; R3 := mSelected
	24	[2292]	GETTABLE 	R3 R3 K1 ; R3 := R3["Element"]
	25	[2292]	GETTABLE 	R3 R3 K9 ; R3 := R3["LoadOutType"]
	26	[2292]	GETGLOBAL	R4 K0 ; R4 := mSelected
	27	[2292]	GETTABLE 	R4 R4 K1 ; R4 := R4["Element"]
	28	[2292]	GETTABLE 	R4 R4 K10 ; R4 := R4["LoadOutId"]
	29	[2292]	CALL     	R2 3 3 ; R2,R3 := R2(R3,R4)
	30	[2293]	SELF     	R4 R1 K11 ; R5 := R1; R4 := R1[0x1adf884d]
	31	[2293]	MOVE     	R6 R0 ; R6 := R0
	32	[2293]	GETUPVAL 	R7 U2 ; R7 := U2
	33	[2293]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x06d055f9]
	34	[2293]	LEN      	R8 R2 ; R8 := # R2
	35	[2293]	LT       	1 K7 R8 ; if 0.000000 < R8 then PC := 38
	36	[2293]	JMP      	38 ; PC := 38
	37	[2293]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 38
	38	[2293]	OP_LOADBOOL	R8 1 0 ; R8 := true
	39	[2293]	LEN      	R9 R2 ; R9 := # R2
	40	[2293]	GETTABLE 	R9 R2 R9 ; R9 := R2[R9]
	41	[2293]	LOADNIL  	R10 R10 ; R10 := nil
	42	[2293]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	43	[2293]	CALL     	R4 0 1 ; R4(R5,...)
	44	[2337]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	45	[2337]	GETUPVAL 	R0 U3 ; R0 := U3
	46	[2337]	MOVE     	R0 R1 ; R0 := R1
	47	[2337]	MOVE     	R0 R0 ; R0 := R0
	48	[2339]	NEWTABLE 	R5 0 0 ; R5 := {}
	49	[2339]	SETUPVAL 	R5 U3 ; U3 := R5
	50	[2340]	GETGLOBAL	R5 K13 ; R5 := mLists
	51	[2340]	GETTABLE 	R5 R5 K14 ; R5 := R5["mCosmeticsList"]
	52	[2340]	SELF     	R5 R5 K15 ; R6 := R5; R5 := R5[0xea061e98]
	53	[2349]	CLOSURE  	R7 1 ; R7 := closure(Function #2)
	54	[2349]	MOVE     	R0 R0 ; R0 := R0
	55	[2349]	MOVE     	R0 R4 ; R0 := R4
	56	[2340]	CALL     	R5 3 1 ; R5(R6,R7)
	57	[2349]	CLOSE    	R0 ; SAVE R0,...
	58	[2351]	RETURN   	R0 1 ; return 

function #42 <?:2353,2446> (289 instructions, 1156 bytes at 000002112CC8FFB0)
5 params, 35 slots, 6 upvalues, 0 locals, 60 constants, 1 function
	1	[2354]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[2354]	MOVE     	R6 R1 ; R6 := R1
	3	[2354]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[2354]	TEST     	R5 1 ; if R5 then PC := 14
	5	[2354]	JMP      	14 ; PC := 14
	6	[2354]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	7	[2354]	GETGLOBAL	R6 K1 ; R6 := mSelected
	8	[2354]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	9	[2354]	CALL     	R5 2 2 ; R5 := R5(R6)
	10	[2354]	TEST     	R5 1 ; if R5 then PC := 14
	11	[2354]	JMP      	14 ; PC := 14
	12	[2354]	EQ       	0 R0 K3 ; if R0 ~= nil then PC := 15
	13	[2354]	JMP      	15 ; PC := 15
	14	[2355]	RETURN   	R0 1 ; return 
	15	[2358]	GETGLOBAL	R5 K1 ; R5 := mSelected
	16	[2358]	GETTABLE 	R5 R5 K2 ; R5 := R5["Element"]
	17	[2358]	GETTABLE 	R5 R5 K4 ; R5 := R5["LoadOutId"]
	18	[2358]	EQ       	0 R5 K6 ; if R5 ~= 0.000000 then PC := 68
	19	[2358]	JMP      	68 ; PC := 68
	20	[2358]	EQ       	0 R0 K7 ; if R0 ~= 6.000000 then PC := 68
	21	[2358]	JMP      	68 ; PC := 68
	22	[2359]	GETGLOBAL	R5 K5 ; R5 := 0x6c97a788
	23	[2359]	GETTABLE 	R5 R5 K8 ; R5 := R5["NUM_NORMAL_LOADOUT_SLOTS"]
	24	[2359]	LOADK    	R6 := 7.000000
	25	[2359]	LOADK    	R7 := 1.000000
	26	[2359]	FORPREP  	R5 67 ; R5 -= R7; PC := 67
	27	[2360]	GETGLOBAL	R9 K1 ; R9 := mSelected
	28	[2360]	GETTABLE 	R9 R9 K2 ; R9 := R9["Element"]
	29	[2361]	GETUPVAL 	R10 U0 ; R10 := U0
	30	[2361]	GETTABLE 	R10 R10 K9 ; R10 := R10[0x06d055f9]
	31	[2361]	EQ       	1 R8 K10 ; if R8 == 5.000000 then PC := 34
	32	[2361]	JMP      	34 ; PC := 34
	33	[2361]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 34
	34	[2361]	OP_LOADBOOL	R11 1 0 ; R11 := true
	35	[2361]	GETGLOBAL	R12 K11 ; R12 := mLists
	36	[2361]	GETTABLE 	R12 R12 K12 ; R12 := R12["mLoadOutList"]
	37	[2361]	GETTABLE 	R12 R12 K13 ; R12 := R12["SpecialASlotId"]
	38	[2361]	GETGLOBAL	R13 K11 ; R13 := mLists
	39	[2361]	GETTABLE 	R13 R13 K12 ; R13 := R13["mLoadOutList"]
	40	[2361]	GETTABLE 	R13 R13 K14 ; R13 := R13["SpecialBSlotId"]
	41	[2361]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	42	[2362]	GETGLOBAL	R11 K1 ; R11 := mSelected
	43	[2362]	GETGLOBAL	R12 K11 ; R12 := mLists
	44	[2362]	GETTABLE 	R12 R12 K12 ; R12 := R12["mLoadOutList"]
	45	[2362]	SELF     	R12 R12 K15 ; R13 := R12; R12 := R12[0xca30dfb6]
	46	[2362]	MOVE     	R14 R10 ; R14 := R10
	47	[2362]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	48	[2362]	SETTABLE 	R11 K2 R12 ; R11["Element"] := R12
	49	[2363]	GETGLOBAL	R11 K1 ; R11 := mSelected
	50	[2363]	GETTABLE 	R11 R11 K2 ; R11 := R11["Element"]
	51	[2363]	EQ       	1 R11 K3 ; if R11 == nil then PC := 65
	52	[2363]	JMP      	65 ; PC := 65
	53	[2363]	GETGLOBAL	R11 K1 ; R11 := mSelected
	54	[2363]	GETTABLE 	R11 R11 K2 ; R11 := R11["Element"]
	55	[2363]	GETTABLE 	R11 R11 K16 ; R11 := R11["EquippedItem"]
	56	[2363]	EQ       	1 R11 K3 ; if R11 == nil then PC := 65
	57	[2363]	JMP      	65 ; PC := 65
	58	[2364]	GETUPVAL 	R11 U1 ; R11 := U1
	59	[2364]	MOVE     	R12 R0 ; R12 := R0
	60	[2364]	MOVE     	R13 R1 ; R13 := R1
	61	[2364]	MOVE     	R14 R2 ; R14 := R2
	62	[2364]	LOADNIL  	R15 R15 ; R15 := nil
	63	[2364]	OP_LOADBOOL	R16 1 0 ; R16 := true
	64	[2364]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	65	[2366]	GETGLOBAL	R11 K1 ; R11 := mSelected
	66	[2366]	SETTABLE 	R11 K2 R9 ; R11["Element"] := R9
	67	[2359]	FORLOOP  	R5 27 ; R5 += R7; if R5 <= R6 then begin PC := 27; R8 := R5 end
	68	[2370]	GETGLOBAL	R11 K17 ; R11 := 0x60130201
	69	[2370]	MOVE     	R12 R1 ; R12 := R1
	70	[2370]	CALL     	R11 2 2 ; R11 := R11(R12)
	71	[2371]	GETGLOBAL	R12 K1 ; R12 := mSelected
	72	[2371]	GETTABLE 	R12 R12 K2 ; R12 := R12["Element"]
	73	[2371]	GETTABLE 	R12 R12 K18 ; R12 := R12["Customization"]
	74	[2372]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	75	[2372]	MOVE     	R14 R12 ; R14 := R12
	76	[2372]	CALL     	R13 2 2 ; R13 := R13(R14)
	77	[2372]	TEST     	R13 1 ; if R13 then PC := 289
	78	[2372]	JMP      	289 ; PC := 289
	79	[2373]	SELF     	R13 R12 K19 ; R14 := R12; R13 := R12[0x8e62760a]
	80	[2373]	MOVE     	R15 R2 ; R15 := R2
	81	[2373]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	82	[2374]	EQ       	0 R0 K7 ; if R0 ~= 6.000000 then PC := 86
	83	[2374]	JMP      	86 ; PC := 86
	84	[2375]	SETTABLE 	R11 K20 K21 ; R11["alpha"] := 255.000000
	85	[2375]	JMP      	91 ; PC := 91
	86	[2377]	SELF     	R14 R13 K22 ; R15 := R13; R14 := R13[0x5d10207d]
	87	[2377]	MOVE     	R16 R0 ; R16 := R0
	88	[2377]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	89	[2377]	GETTABLE 	R14 R14 K20 ; R14 := R14["alpha"]
	90	[2377]	SETTABLE 	R11 K20 R14 ; R11["alpha"] := R14
	91	[2379]	SELF     	R14 R13 K23 ; R15 := R13; R14 := R13[0xa3927fe9]
	92	[2379]	MOVE     	R16 R0 ; R16 := R0
	93	[2379]	MOVE     	R17 R11 ; R17 := R11
	94	[2379]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	95	[2380]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xfc5d7158]
	96	[2380]	MOVE     	R16 R0 ; R16 := R0
	97	[2380]	OP_LOADBOOL	R17 1 0 ; R17 := true
	98	[2380]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	99	[2381]	SELF     	R14 R12 K25 ; R15 := R12; R14 := R12[0x199edf6e]
	100	[2381]	MOVE     	R16 R2 ; R16 := R2
	101	[2381]	MOVE     	R17 R13 ; R17 := R13
	102	[2381]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	103	[2385]	TEST     	R4 1 ; if R4 then PC := 138
	104	[2385]	JMP      	138 ; PC := 138
	105	[2385]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	106	[2385]	GETGLOBAL	R15 K1 ; R15 := mSelected
	107	[2385]	GETTABLE 	R15 R15 K26 ; R15 := R15["Cosmetic"]
	108	[2385]	CALL     	R14 2 2 ; R14 := R14(R15)
	109	[2385]	TEST     	R14 1 ; if R14 then PC := 124
	110	[2385]	JMP      	124 ; PC := 124
	111	[2385]	GETGLOBAL	R14 K1 ; R14 := mSelected
	112	[2385]	GETTABLE 	R14 R14 K26 ; R14 := R14["Cosmetic"]
	113	[2385]	GETTABLE 	R14 R14 K27 ; R14 := R14["PetTrait"]
	114	[2385]	EQ       	1 R14 K3 ; if R14 == nil then PC := 124
	115	[2385]	JMP      	124 ; PC := 124
	116	[2385]	GETGLOBAL	R14 K11 ; R14 := mLists
	117	[2385]	GETTABLE 	R14 R14 K28 ; R14 := R14["mCosmeticsList"]
	118	[2385]	GETTABLE 	R14 R14 K29 ; R14 := R14["mCurrLevel"]
	119	[2385]	GETGLOBAL	R15 K11 ; R15 := mLists
	120	[2385]	GETTABLE 	R15 R15 K28 ; R15 := R15["mCosmeticsList"]
	121	[2385]	GETTABLE 	R15 R15 K30 ; R15 := R15["ATTACHMENTS"]
	122	[2385]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 138
	123	[2385]	JMP      	138 ; PC := 138
	124	[2386]	GETGLOBAL	R14 K11 ; R14 := mLists
	125	[2386]	GETTABLE 	R14 R14 K28 ; R14 := R14["mCosmeticsList"]
	126	[2386]	SELF     	R14 R14 K31 ; R15 := R14; R14 := R14[0xea061e98]
	127	[2397]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	128	[2397]	MOVE     	R0 R0 ; R0 := R0
	129	[2397]	MOVE     	R0 R11 ; R0 := R11
	130	[2386]	CALL     	R14 3 1 ; R14(R15,R16)
	131	[2398]	GETGLOBAL	R14 K11 ; R14 := mLists
	132	[2398]	GETTABLE 	R14 R14 K28 ; R14 := R14["mCosmeticsList"]
	133	[2398]	SELF     	R14 R14 K32 ; R15 := R14; R14 := R14[0x71e9ac81]
	134	[2398]	LOADNIL  	R16 R16 ; R16 := nil
	135	[2398]	OP_LOADBOOL	R17 0 0 ; R17 := false
	136	[2398]	OP_LOADBOOL	R18 1 0 ; R18 := true
	137	[2398]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	138	[2400]	GETUPVAL 	R14 U2 ; R14 := U2
	139	[2400]	GETGLOBAL	R15 K1 ; R15 := mSelected
	140	[2400]	GETTABLE 	R15 R15 K2 ; R15 := R15["Element"]
	141	[2400]	GETTABLE 	R15 R15 K33 ; R15 := R15["LoadOutType"]
	142	[2400]	GETGLOBAL	R16 K1 ; R16 := mSelected
	143	[2400]	GETTABLE 	R16 R16 K2 ; R16 := R16["Element"]
	144	[2400]	GETTABLE 	R16 R16 K4 ; R16 := R16["LoadOutId"]
	145	[2400]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	146	[2401]	GETUPVAL 	R15 U3 ; R15 := U3
	147	[2401]	GETGLOBAL	R16 K1 ; R16 := mSelected
	148	[2401]	GETTABLE 	R16 R16 K2 ; R16 := R16["Element"]
	149	[2401]	GETTABLE 	R16 R16 K33 ; R16 := R16["LoadOutType"]
	150	[2401]	GETGLOBAL	R17 K1 ; R17 := mSelected
	151	[2401]	GETTABLE 	R17 R17 K2 ; R17 := R17["Element"]
	152	[2401]	GETTABLE 	R17 R17 K4 ; R17 := R17["LoadOutId"]
	153	[2401]	CALL     	R15 3 3 ; R15,R16 := R15(R16,R17)
	154	[2402]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	155	[2402]	MOVE     	R18 R14 ; R18 := R14
	156	[2402]	CALL     	R17 2 2 ; R17 := R17(R18)
	157	[2402]	TEST     	R17 1 ; if R17 then PC := 163
	158	[2402]	JMP      	163 ; PC := 163
	159	[2403]	SELF     	R17 R14 K34 ; R18 := R14; R17 := R14[0xaa041663]
	160	[2403]	MOVE     	R19 R12 ; R19 := R12
	161	[2403]	OP_LOADBOOL	R20 0 0 ; R20 := false
	162	[2403]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	163	[2405]	LOADK    	R17 := 1.000000
	164	[2405]	LEN      	R18 R15 ; R18 := # R15
	165	[2405]	LOADK    	R19 := 1.000000
	166	[2405]	FORPREP  	R17 265 ; R17 -= R19; PC := 265
	167	[2406]	GETTABLE 	R21 R15 R20 ; R21 := R15[R20]
	168	[2407]	SELF     	R22 R12 K35 ; R23 := R12; R22 := R12[0x61b59a83]
	169	[2407]	MOVE     	R24 R21 ; R24 := R21
	170	[2407]	MOVE     	R25 R16 ; R25 := R16
	171	[2407]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	172	[2409]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	173	[2409]	MOVE     	R23 R14 ; R23 := R14
	174	[2409]	CALL     	R22 2 2 ; R22 := R22(R23)
	175	[2409]	TEST     	R22 1 ; if R22 then PC := 179
	176	[2409]	JMP      	179 ; PC := 179
	177	[2409]	EQ       	1 R0 K7 ; if R0 == 6.000000 then PC := 181
	178	[2409]	JMP      	181 ; PC := 181
	179	[2409]	EQ       	0 R0 K36 ; if R0 ~= 7.000000 then PC := 202
	180	[2409]	JMP      	202 ; PC := 202
	181	[2410]	SELF     	R22 R14 K37 ; R23 := R14; R22 := R14[0x22d4e696]
	182	[2410]	MOVE     	R24 R12 ; R24 := R12
	183	[2410]	CALL     	R22 3 1 ; R22(R23,R24)
	184	[2412]	GETUPVAL 	R22 U0 ; R22 := U0
	185	[2412]	GETTABLE 	R22 R22 K38 ; R22 := R22[0x2a1108a9]
	186	[2412]	LOADK    	R23 K39 ; R23 := "ArsenalEffectsCanvas"
	187	[2412]	SELF     	R24 R21 K40 ; R25 := R21; R24 := R21[0xd1586535]
	188	[2412]	CALL     	R24 2 0 ; R24,... := R24(R25)
	189	[2412]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	190	[2413]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	191	[2413]	MOVE     	R24 R22 ; R24 := R22
	192	[2413]	CALL     	R23 2 2 ; R23 := R23(R24)
	193	[2413]	TEST     	R23 1 ; if R23 then PC := 202
	194	[2413]	JMP      	202 ; PC := 202
	195	[2414]	SELF     	R23 R14 K41 ; R24 := R14; R23 := R14[0x0a33ea4a]
	196	[2414]	MOVE     	R25 R22 ; R25 := R22
	197	[2414]	MOVE     	R26 R12 ; R26 := R12
	198	[2414]	MOVE     	R27 R2 ; R27 := R2
	199	[2414]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	200	[2415]	SELF     	R23 R22 K42 ; R24 := R22; R23 := R22[0x1db57c6b]
	201	[2415]	CALL     	R23 2 1 ; R23(R24)
	202	[2419]	GETGLOBAL	R23 K1 ; R23 := mSelected
	203	[2419]	GETTABLE 	R23 R23 K2 ; R23 := R23["Element"]
	204	[2419]	GETTABLE 	R23 R23 K4 ; R23 := R23["LoadOutId"]
	205	[2419]	EQ       	0 R23 K6 ; if R23 ~= 0.000000 then PC := 265
	206	[2419]	JMP      	265 ; PC := 265
	207	[2419]	EQ       	0 R2 K43 ; if R2 ~= 2.000000 then PC := 265
	208	[2419]	JMP      	265 ; PC := 265
	209	[2419]	GETUPVAL 	R23 U4 ; R23 := U4
	210	[2419]	GETUPVAL 	R24 U5 ; R24 := U5
	211	[2419]	GETTABLE 	R24 R24 K44 ; R24 := R24["FALSE"]
	212	[2419]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 265
	213	[2419]	JMP      	265 ; PC := 265
	214	[2420]	SELF     	R23 R21 K45 ; R24 := R21; R23 := R21[0xf2deaf69]
	215	[2420]	GETGLOBAL	R25 K46 ; R25 := gBaseAvatarType
	216	[2420]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	217	[2420]	TEST     	R23 0 ; if not R23 then PC := 265
	218	[2420]	JMP      	265 ; PC := 265
	219	[2421]	SELF     	R23 R21 K47 ; R24 := R21; R23 := R21[0xde321e6f]
	220	[2421]	CALL     	R23 2 2 ; R23 := R23(R24)
	221	[2421]	SELF     	R23 R23 K48 ; R24 := R23; R23 := R23[0xf7d48ee0]
	222	[2421]	CALL     	R23 2 2 ; R23 := R23(R24)
	223	[2422]	GETGLOBAL	R24 K0 ; R24 := 0x7b998233
	224	[2422]	MOVE     	R25 R23 ; R25 := R23
	225	[2422]	CALL     	R24 2 2 ; R24 := R24(R25)
	226	[2422]	TEST     	R24 1 ; if R24 then PC := 265
	227	[2422]	JMP      	265 ; PC := 265
	228	[2423]	SELF     	R24 R23 K49 ; R25 := R23; R24 := R23[0x0ad758cb]
	229	[2423]	CALL     	R24 2 2 ; R24 := R24(R25)
	230	[2424]	LOADK    	R25 := 0.000000
	231	[2424]	SUB      	R26 R24 K50 ; R26 := R24 - 1.000000
	232	[2424]	LOADK    	R27 := 1.000000
	233	[2424]	FORPREP  	R25 264 ; R25 -= R27; PC := 264
	234	[2425]	SELF     	R29 R23 K51 ; R30 := R23; R29 := R23[0xfef27732]
	235	[2425]	MOVE     	R31 R28 ; R31 := R28
	236	[2425]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	237	[2427]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	238	[2427]	MOVE     	R31 R29 ; R31 := R29
	239	[2427]	CALL     	R30 2 2 ; R30 := R30(R31)
	240	[2427]	TEST     	R30 1 ; if R30 then PC := 264
	241	[2427]	JMP      	264 ; PC := 264
	242	[2428]	SELF     	R30 R29 K45 ; R31 := R29; R30 := R29[0xf2deaf69]
	243	[2428]	GETGLOBAL	R32 K52 ; R32 := gLotusSigilType
	244	[2428]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	245	[2428]	TEST     	R30 0 ; if not R30 then PC := 253
	246	[2428]	JMP      	253 ; PC := 253
	247	[2429]	SELF     	R30 R23 K34 ; R31 := R23; R30 := R23[0xaa041663]
	248	[2429]	MOVE     	R32 R12 ; R32 := R12
	249	[2429]	OP_LOADBOOL	R33 0 0 ; R33 := false
	250	[2429]	CALL     	R30 4 1 ; R30(R31,R32,R33)
	251	[2430]	SELF     	R30 R29 K53 ; R31 := R29; R30 := R29[0x4ece5f10]
	252	[2430]	CALL     	R30 2 1 ; R30(R31)
	253	[2432]	SELF     	R30 R29 K45 ; R31 := R29; R30 := R29[0xf2deaf69]
	254	[2432]	GETGLOBAL	R32 K54 ; R32 := gLotusHoverboardStickerType
	255	[2432]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	256	[2432]	TEST     	R30 0 ; if not R30 then PC := 264
	257	[2432]	JMP      	264 ; PC := 264
	258	[2433]	SELF     	R30 R23 K34 ; R31 := R23; R30 := R23[0xaa041663]
	259	[2433]	MOVE     	R32 R12 ; R32 := R12
	260	[2433]	OP_LOADBOOL	R33 0 0 ; R33 := false
	261	[2433]	CALL     	R30 4 1 ; R30(R31,R32,R33)
	262	[2434]	SELF     	R30 R29 K55 ; R31 := R29; R30 := R29[0xb6edddc0]
	263	[2434]	CALL     	R30 2 1 ; R30(R31)
	264	[2424]	FORLOOP  	R25 234 ; R25 += R27; if R25 <= R26 then begin PC := 234; R28 := R25 end
	265	[2405]	FORLOOP  	R17 167 ; R17 += R19; if R17 <= R18 then begin PC := 167; R20 := R17 end
	266	[2443]	GETGLOBAL	R30 K1 ; R30 := mSelected
	267	[2443]	GETTABLE 	R30 R30 K2 ; R30 := R30["Element"]
	268	[2443]	GETTABLE 	R30 R30 K16 ; R30 := R30["EquippedItem"]
	269	[2443]	SELF     	R30 R30 K34 ; R31 := R30; R30 := R30[0xaa041663]
	270	[2443]	GETGLOBAL	R32 K1 ; R32 := mSelected
	271	[2443]	GETTABLE 	R32 R32 K2 ; R32 := R32["Element"]
	272	[2443]	GETTABLE 	R32 R32 K18 ; R32 := R32["Customization"]
	273	[2443]	GETGLOBAL	R33 K1 ; R33 := mSelected
	274	[2443]	GETTABLE 	R33 R33 K2 ; R33 := R33["Element"]
	275	[2443]	GETTABLE 	R33 R33 K56 ; R33 := R33["mCustSlot"]
	276	[2443]	CALL     	R30 4 1 ; R30(R31,R32,R33)
	277	[2444]	GETGLOBAL	R30 K57 ; R30 := mInventory
	278	[2444]	SELF     	R30 R30 K58 ; R31 := R30; R30 := R30[0x9b051033]
	279	[2444]	GETGLOBAL	R32 K1 ; R32 := mSelected
	280	[2444]	GETTABLE 	R32 R32 K2 ; R32 := R32["Element"]
	281	[2444]	GETTABLE 	R32 R32 K59 ; R32 := R32["UID"]
	282	[2444]	GETGLOBAL	R33 K1 ; R33 := mSelected
	283	[2444]	GETTABLE 	R33 R33 K2 ; R33 := R33["Element"]
	284	[2444]	GETTABLE 	R33 R33 K56 ; R33 := R33["mCustSlot"]
	285	[2444]	GETGLOBAL	R34 K1 ; R34 := mSelected
	286	[2444]	GETTABLE 	R34 R34 K2 ; R34 := R34["Element"]
	287	[2444]	GETTABLE 	R34 R34 K18 ; R34 := R34["Customization"]
	288	[2444]	CALL     	R30 5 1 ; R30(R31,R32,R33,R34)
	289	[2446]	RETURN   	R0 1 ; return 

function #43 <?:2448,2493> (145 instructions, 580 bytes at 000002111CB90DB0)
0 params, 15 slots, 3 upvalues, 0 locals, 40 constants, 0 functions
	1	[2449]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2449]	GETTABLE 	R0 R0 K1 ; R0 := R0["MenuSuitAvatar"]
	3	[2450]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[2451]	OP_LOADBOOL	R2 0 0 ; R2 := false
	5	[2452]	GETGLOBAL	R3 K2 ; R3 := mSelected
	6	[2452]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	7	[2452]	GETTABLE 	R3 R3 K4 ; R3 := R3["LoadOutType"]
	8	[2452]	EQ       	0 R3 K6 ; if R3 ~= 6.000000 then PC := 21
	9	[2452]	JMP      	21 ; PC := 21
	10	[2452]	GETGLOBAL	R3 K2 ; R3 := mSelected
	11	[2452]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	12	[2452]	GETTABLE 	R3 R3 K7 ; R3 := R3["LoadOutId"]
	13	[2452]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[2452]	GETTABLE 	R4 R4 K8 ; R4 := R4["KDriveSlot"]
	15	[2452]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 21
	16	[2452]	JMP      	21 ; PC := 21
	17	[2453]	GETGLOBAL	R3 K0 ; R3 := _T
	18	[2453]	GETTABLE 	R0 R3 K9 ; R0 := R3["KDriveAvatar"]
	19	[2454]	OP_LOADBOOL	R1 1 0 ; R1 := true
	20	[2454]	JMP      	29 ; PC := 29
	21	[2455]	GETGLOBAL	R3 K2 ; R3 := mSelected
	22	[2455]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	23	[2455]	GETTABLE 	R3 R3 K4 ; R3 := R3["LoadOutType"]
	24	[2455]	EQ       	0 R3 K10 ; if R3 ~= 8.000000 then PC := 29
	25	[2455]	JMP      	29 ; PC := 29
	26	[2456]	GETGLOBAL	R3 K0 ; R3 := _T
	27	[2456]	GETTABLE 	R0 R3 K11 ; R0 := R3["MechAvatar"]
	28	[2457]	OP_LOADBOOL	R2 1 0 ; R2 := true
	29	[2460]	GETUPVAL 	R3 U1 ; R3 := U1
	30	[2460]	GETUPVAL 	R4 U2 ; R4 := U2
	31	[2460]	GETTABLE 	R4 R4 K12 ; R4 := R4["FRONT"]
	32	[2460]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 47
	33	[2460]	JMP      	47 ; PC := 47
	34	[2461]	SELF     	R3 R0 K13 ; R4 := R0; R3 := R0[0xde321e6f]
	35	[2461]	CALL     	R3 2 2 ; R3 := R3(R4)
	36	[2461]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0x4703255b]
	37	[2461]	LOADK    	R5 := 1.000000
	38	[2461]	LOADK    	R6 := 2.000000
	39	[2461]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	40	[2462]	SELF     	R3 R0 K13 ; R4 := R0; R3 := R0[0xde321e6f]
	41	[2462]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[2462]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0x4703255b]
	43	[2462]	LOADK    	R5 := 0.000000
	44	[2462]	LOADK    	R6 := 2.000000
	45	[2462]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	46	[2462]	JMP      	92 ; PC := 92
	47	[2463]	GETUPVAL 	R3 U1 ; R3 := U1
	48	[2463]	GETUPVAL 	R4 U2 ; R4 := U2
	49	[2463]	GETTABLE 	R4 R4 K16 ; R4 := R4["BACK"]
	50	[2463]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 92
	51	[2463]	JMP      	92 ; PC := 92
	52	[2464]	TEST     	R1 0 ; if not R1 then PC := 58
	53	[2464]	JMP      	58 ; PC := 58
	54	[2465]	GETGLOBAL	R3 K0 ; R3 := _T
	55	[2465]	GETTABLE 	R3 R3 K17 ; R3 := R3["suitTable"]
	56	[2465]	SETTABLE 	R3 K18 K19 ; R3["desiredRot"] := 170.000000
	57	[2465]	JMP      	67 ; PC := 67
	58	[2466]	TEST     	R2 0 ; if not R2 then PC := 64
	59	[2466]	JMP      	64 ; PC := 64
	60	[2467]	GETGLOBAL	R3 K0 ; R3 := _T
	61	[2467]	GETTABLE 	R3 R3 K17 ; R3 := R3["suitTable"]
	62	[2467]	SETTABLE 	R3 K18 K19 ; R3["desiredRot"] := 170.000000
	63	[2467]	JMP      	67 ; PC := 67
	64	[2469]	GETGLOBAL	R3 K0 ; R3 := _T
	65	[2469]	GETTABLE 	R3 R3 K17 ; R3 := R3["suitTable"]
	66	[2469]	SETTABLE 	R3 K18 K19 ; R3["desiredRot"] := 170.000000
	67	[2471]	GETGLOBAL	R3 K0 ; R3 := _T
	68	[2471]	GETTABLE 	R3 R3 K17 ; R3 := R3["suitTable"]
	69	[2471]	GETGLOBAL	R4 K21 ; R4 := 0x00046924
	70	[2471]	CALL     	R4 1 2 ; R4 := R4()
	71	[2471]	SETTABLE 	R3 K20 R4 ; R3["lerpHead"] := R4
	72	[2473]	SELF     	R3 R0 K13 ; R4 := R0; R3 := R0[0xde321e6f]
	73	[2473]	CALL     	R3 2 2 ; R3 := R3(R4)
	74	[2473]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xc69087f6]
	75	[2473]	LOADK    	R5 := 1.000000
	76	[2473]	LOADK    	R6 := 0.000000
	77	[2473]	LOADK    	R7 := 2.000000
	78	[2473]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	79	[2474]	SELF     	R3 R0 K13 ; R4 := R0; R3 := R0[0xde321e6f]
	80	[2474]	CALL     	R3 2 2 ; R3 := R3(R4)
	81	[2474]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xc69087f6]
	82	[2474]	LOADK    	R5 := 5.000000
	83	[2474]	LOADK    	R6 := 3.000000
	84	[2474]	LOADK    	R7 := 2.000000
	85	[2474]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	86	[2475]	SELF     	R3 R0 K13 ; R4 := R0; R3 := R0[0xde321e6f]
	87	[2475]	CALL     	R3 2 2 ; R3 := R3(R4)
	88	[2475]	SELF     	R3 R3 K23 ; R4 := R3; R3 := R3[0x35b09371]
	89	[2475]	LOADK    	R5 := 5.000000
	90	[2475]	OP_LOADBOOL	R6 1 0 ; R6 := true
	91	[2475]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	92	[2478]	SELF     	R3 R0 K13 ; R4 := R0; R3 := R0[0xde321e6f]
	93	[2478]	CALL     	R3 2 2 ; R3 := R3(R4)
	94	[2478]	SELF     	R3 R3 K24 ; R4 := R3; R3 := R3[0xf7d48ee0]
	95	[2478]	CALL     	R3 2 2 ; R3 := R3(R4)
	96	[2479]	SELF     	R4 R3 K25 ; R5 := R3; R4 := R3[0x0ad758cb]
	97	[2479]	CALL     	R4 2 2 ; R4 := R4(R5)
	98	[2481]	LOADK    	R5 := 0.000000
	99	[2481]	SUB      	R6 R4 K26 ; R6 := R4 - 1.000000
	100	[2481]	LOADK    	R7 := 1.000000
	101	[2481]	FORPREP  	R5 126 ; R5 -= R7; PC := 126
	102	[2482]	SELF     	R9 R3 K27 ; R10 := R3; R9 := R3[0xfef27732]
	103	[2482]	MOVE     	R11 R8 ; R11 := R8
	104	[2482]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	105	[2483]	GETGLOBAL	R10 K28 ; R10 := 0x7b998233
	106	[2483]	MOVE     	R11 R9 ; R11 := R9
	107	[2483]	CALL     	R10 2 2 ; R10 := R10(R11)
	108	[2483]	TEST     	R10 1 ; if R10 then PC := 126
	109	[2483]	JMP      	126 ; PC := 126
	110	[2483]	SELF     	R10 R9 K29 ; R11 := R9; R10 := R9[0xf2deaf69]
	111	[2483]	GETGLOBAL	R12 K30 ; R12 := 0x9166d883
	112	[2483]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	113	[2483]	TEST     	R10 0 ; if not R10 then PC := 126
	114	[2483]	JMP      	126 ; PC := 126
	115	[2483]	SELF     	R10 R9 K31 ; R11 := R9; R10 := R9[0xf4f49d1b]
	116	[2483]	CALL     	R10 2 2 ; R10 := R10(R11)
	117	[2483]	EQ       	0 R10 K32 ; if R10 ~= 5.000000 then PC := 126
	118	[2483]	JMP      	126 ; PC := 126
	119	[2484]	SELF     	R10 R3 K33 ; R11 := R3; R10 := R3[0x12dd9da2]
	120	[2484]	MOVE     	R12 R9 ; R12 := R9
	121	[2484]	CALL     	R10 3 1 ; R10(R11,R12)
	122	[2485]	GETGLOBAL	R10 K34 ; R10 := 0x89326c93
	123	[2485]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0x59c96e77]
	124	[2485]	MOVE     	R12 R9 ; R12 := R9
	125	[2485]	CALL     	R10 3 1 ; R10(R11,R12)
	126	[2481]	FORLOOP  	R5 102 ; R5 += R7; if R5 <= R6 then begin PC := 102; R8 := R5 end
	127	[2489]	GETGLOBAL	R10 K28 ; R10 := 0x7b998233
	128	[2489]	GETGLOBAL	R11 K36 ; R11 := mCameraTable
	129	[2489]	CALL     	R10 2 2 ; R10 := R10(R11)
	130	[2489]	TEST     	R10 1 ; if R10 then PC := 145
	131	[2489]	JMP      	145 ; PC := 145
	132	[2489]	TEST     	R1 1 ; if R1 then PC := 145
	133	[2489]	JMP      	145 ; PC := 145
	134	[2489]	TEST     	R2 1 ; if R2 then PC := 145
	135	[2489]	JMP      	145 ; PC := 145
	136	[2490]	GETGLOBAL	R10 K36 ; R10 := mCameraTable
	137	[2490]	SETTABLE 	R10 K37 K38 ; R10["attenFov"] := 0.500000
	138	[2491]	GETGLOBAL	R10 K36 ; R10 := mCameraTable
	139	[2491]	GETGLOBAL	R11 K21 ; R11 := 0x00046924
	140	[2491]	LOADK    	R12 := 4.500000
	141	[2491]	LOADK    	R13 := -5.000000
	142	[2491]	LOADK    	R14 := 0.000000
	143	[2491]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	144	[2491]	SETTABLE 	R10 K39 R11 ; R10["biasRot"] := R11
	145	[2493]	RETURN   	R0 1 ; return 

function #44 <?:2495,2508> (39 instructions, 156 bytes at 000002111CB91590)
0 params, 7 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[2496]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2496]	GETGLOBAL	R1 K1 ; R1 := mSelected
	3	[2496]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	4	[2496]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[2496]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[2496]	JMP      	8 ; PC := 8
	7	[2497]	RETURN   	R0 1 ; return 
	8	[2500]	GETGLOBAL	R0 K3 ; R0 := _T
	9	[2500]	GETTABLE 	R0 R0 K4 ; R0 := R0["MenuSuitAvatar"]
	10	[2502]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[2502]	GETGLOBAL	R2 K1 ; R2 := mSelected
	12	[2502]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	13	[2502]	GETTABLE 	R2 R2 K5 ; R2 := R2["LoadOutId"]
	14	[2502]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2504]	SELF     	R2 R0 K6 ; R3 := R0; R2 := R0[0xde321e6f]
	16	[2504]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[2504]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x881b6b90]
	18	[2504]	LOADK    	R4 := 0.000000
	19	[2504]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	20	[2505]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	21	[2505]	MOVE     	R4 R2 ; R4 := R2
	22	[2505]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[2505]	TEST     	R3 1 ; if R3 then PC := 39
	24	[2505]	JMP      	39 ; PC := 39
	25	[2505]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x53c3399f]
	26	[2505]	CALL     	R3 2 2 ; R3 := R3(R4)
	27	[2505]	EQ       	1 R3 K10 ; if R3 == 0.000000 then PC := 33
	28	[2505]	JMP      	33 ; PC := 33
	29	[2505]	SELF     	R3 R2 K11 ; R4 := R2; R3 := R2[0xb5d09c91]
	30	[2505]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[2505]	EQ       	1 R3 R1 ; if R3 == R1 then PC := 39
	32	[2505]	JMP      	39 ; PC := 39
	33	[2506]	SELF     	R3 R0 K6 ; R4 := R0; R3 := R0[0xde321e6f]
	34	[2506]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[2506]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x54732cc7]
	36	[2506]	SELF     	R5 R2 K11 ; R6 := R2; R5 := R2[0xb5d09c91]
	37	[2506]	CALL     	R5 2 0 ; R5,... := R5(R6)
	38	[2506]	CALL     	R3 0 1 ; R3(R4,...)
	39	[2508]	RETURN   	R0 1 ; return 

function #45 <?:2510,2515> (25 instructions, 100 bytes at 000002111CB91860)
1 param, 5 slots, 4 upvalues, 0 locals, 7 constants, 0 functions
	1	[2511]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2511]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x06d055f9]
	3	[2511]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 6
	4	[2511]	JMP      	6 ; PC := 6
	5	[2511]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 6
	6	[2511]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[2511]	MOVE     	R3 R0 ; R3 := R0
	8	[2511]	GETUPVAL 	R4 U1 ; R4 := U1
	9	[2511]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	10	[2513]	GETUPVAL 	R2 U2 ; R2 := U2
	11	[2513]	GETTABLE 	R2 R2 K2 ; R2 := R2["Current"]
	12	[2513]	EQ       	0 R2 K4 ; if R2 ~= 2.000000 then PC := 22
	13	[2513]	JMP      	22 ; PC := 22
	14	[2514]	GETUPVAL 	R2 U3 ; R2 := U3
	15	[2514]	GETTABLE 	R2 R2 K5 ; R2 := R2["CUSTOMIZING_SKINS"]
	16	[2514]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 23
	17	[2514]	JMP      	23 ; PC := 23
	18	[2514]	GETUPVAL 	R2 U3 ; R2 := U3
	19	[2514]	GETTABLE 	R2 R2 K6 ; R2 := R2["SELECTING_PART"]
	20	[2514]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 23
	21	[2514]	JMP      	23 ; PC := 23
	22	[2514]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 23
	23	[2514]	OP_LOADBOOL	R2 1 0 ; R2 := true
	24	[2514]	RETURN   	R2 2 ; return R2 
	25	[2515]	RETURN   	R0 1 ; return 

function #46 <?:2517,2521> (29 instructions, 116 bytes at 000002111CB91A70)
1 param, 5 slots, 4 upvalues, 0 locals, 9 constants, 0 functions
	1	[2518]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2518]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x06d055f9]
	3	[2518]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 6
	4	[2518]	JMP      	6 ; PC := 6
	5	[2518]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 6
	6	[2518]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[2518]	MOVE     	R3 R0 ; R3 := R0
	8	[2518]	GETUPVAL 	R4 U1 ; R4 := U1
	9	[2518]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	10	[2520]	GETUPVAL 	R2 U2 ; R2 := U2
	11	[2520]	GETTABLE 	R2 R2 K2 ; R2 := R2["SELECTING_PART"]
	12	[2520]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 18
	13	[2520]	JMP      	18 ; PC := 18
	14	[2520]	GETUPVAL 	R2 U2 ; R2 := U2
	15	[2520]	GETTABLE 	R2 R2 K3 ; R2 := R2["BROWSING_WAY_TREE"]
	16	[2520]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 26
	17	[2520]	JMP      	26 ; PC := 26
	18	[2520]	GETGLOBAL	R2 K4 ; R2 := _T
	19	[2520]	GETTABLE 	R2 R2 K5 ; R2 := R2["ArsenalPvPOnlyReturnConsole"]
	20	[2520]	EQ       	0 R2 K1 ; if R2 ~= nil then PC := 26
	21	[2520]	JMP      	26 ; PC := 26
	22	[2520]	GETUPVAL 	R2 U3 ; R2 := U3
	23	[2520]	GETTABLE 	R2 R2 K6 ; R2 := R2["Current"]
	24	[2520]	EQ       	0 R2 K8 ; if R2 ~= 2.000000 then PC := 27
	25	[2520]	JMP      	27 ; PC := 27
	26	[2520]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 27
	27	[2520]	OP_LOADBOOL	R2 1 0 ; R2 := true
	28	[2520]	RETURN   	R2 2 ; return R2 
	29	[2521]	RETURN   	R0 1 ; return 

function #47 <?:2523,2564> (51 instructions, 204 bytes at 000002111CB91CC0)
2 params, 8 slots, 2 upvalues, 0 locals, 10 constants, 1 function
	1	[2524]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2524]	GETTABLE 	R2 R2 K0 ; R2 := R2["SWAPPING_ITEM"]
	3	[2524]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 14
	4	[2524]	JMP      	14 ; PC := 14
	5	[2524]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[2524]	GETTABLE 	R2 R2 K1 ; R2 := R2["SELECTING_SKINS"]
	7	[2524]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 14
	8	[2524]	JMP      	14 ; PC := 14
	9	[2524]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[2524]	GETTABLE 	R2 R2 K2 ; R2 := R2["SELECTING_CONSUMABLES"]
	11	[2524]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 14
	12	[2524]	JMP      	14 ; PC := 14
	13	[2524]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 14
	14	[2524]	OP_LOADBOOL	R2 1 0 ; R2 := true
	15	[2525]	GETUPVAL 	R3 U1 ; R3 := U1
	16	[2525]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x06d055f9]
	17	[2525]	MOVE     	R4 R2 ; R4 := R2
	18	[2525]	LOADK    	R5 := 198.000000
	19	[2525]	LOADK    	R6 := 240.000000
	20	[2525]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	21	[2525]	GETUPVAL 	R4 U1 ; R4 := U1
	22	[2525]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x06d055f9]
	23	[2525]	GETGLOBAL	R5 K4 ; R5 := mLists
	24	[2525]	GETTABLE 	R5 R5 K5 ; R5 := R5["mCosmeticsList"]
	25	[2525]	GETTABLE 	R5 R5 K6 ; R5 := R5["mCurrLevel"]
	26	[2525]	GETGLOBAL	R6 K4 ; R6 := mLists
	27	[2525]	GETTABLE 	R6 R6 K5 ; R6 := R6["mCosmeticsList"]
	28	[2525]	GETTABLE 	R6 R6 K7 ; R6 := R6["DEFAULT"]
	29	[2525]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 36
	30	[2525]	JMP      	36 ; PC := 36
	31	[2525]	GETUPVAL 	R5 U0 ; R5 := U0
	32	[2525]	GETTABLE 	R5 R5 K1 ; R5 := R5["SELECTING_SKINS"]
	33	[2525]	EQ       	1 R0 R5 ; if R0 == R5 then PC := 36
	34	[2525]	JMP      	36 ; PC := 36
	35	[2525]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 36
	36	[2525]	OP_LOADBOOL	R5 1 0 ; R5 := true
	37	[2525]	LOADK    	R6 := -20.000000
	38	[2525]	LOADK    	R7 := -60.000000
	39	[2525]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	40	[2525]	ADD      	R3 R3 R4 ; R3 := R3 + R4
	41	[2526]	GETGLOBAL	R4 K4 ; R4 := mLists
	42	[2526]	GETTABLE 	R4 R4 K8 ; R4 := R4["mLoadOutList"]
	43	[2526]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0xea061e98]
	44	[2563]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	45	[2563]	MOVE     	R0 R1 ; R0 := R1
	46	[2563]	MOVE     	R0 R0 ; R0 := R0
	47	[2563]	GETUPVAL 	R0 U0 ; R0 := U0
	48	[2563]	GETUPVAL 	R0 U1 ; R0 := U1
	49	[2563]	MOVE     	R0 R3 ; R0 := R3
	50	[2526]	CALL     	R4 3 1 ; R4(R5,R6)
	51	[2564]	RETURN   	R0 1 ; return 

function #48 <?:2566,2908> (1283 instructions, 5132 bytes at 000002111CB92E00)
1 param, 47 slots, 21 upvalues, 0 locals, 181 constants, 2 functions
	1	[2567]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2567]	GETTABLE 	R1 R1 K0 ; R1 := R1["EquipmentChangesBlocked"]
	3	[2567]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[2567]	JMP      	6 ; PC := 6
	5	[2568]	RETURN   	R0 1 ; return 
	6	[2570]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[2570]	SETGLOBALHASH	R1 K1 ; mInputBlocked := R1
	8	[2571]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[2571]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x659d451f]
	10	[2571]	GETGLOBAL	R2 K3 ; R2 := 0x0032441c
	11	[2571]	GETTABLE 	R2 R2 K4 ; R2 := R2["UISound_Select"]
	12	[2571]	CALL     	R1 2 1 ; R1(R2)
	13	[2573]	GETUPVAL 	R1 U2 ; R1 := U2
	14	[2573]	GETTABLE 	R1 R1 K5 ; R1 := R1["SWAPPING_ITEM"]
	15	[2573]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 26
	16	[2573]	JMP      	26 ; PC := 26
	17	[2573]	GETUPVAL 	R1 U2 ; R1 := U2
	18	[2573]	GETTABLE 	R1 R1 K6 ; R1 := R1["SELECTING_SKINS"]
	19	[2573]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 26
	20	[2573]	JMP      	26 ; PC := 26
	21	[2573]	GETUPVAL 	R1 U2 ; R1 := U2
	22	[2573]	GETTABLE 	R1 R1 K7 ; R1 := R1["SELECTING_CONSUMABLES"]
	23	[2573]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 26
	24	[2573]	JMP      	26 ; PC := 26
	25	[2573]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 26
	26	[2573]	OP_LOADBOOL	R1 1 0 ; R1 := true
	27	[2574]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	28	[2574]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x80dc5f76]
	29	[2574]	CALL     	R2 2 1 ; R2(R3)
	30	[2575]	GETUPVAL 	R2 U3 ; R2 := U3
	31	[2575]	GETTABLE 	R2 R2 K10 ; R2 := R2[0x18e56c6b]
	32	[2575]	MOVE     	R3 R0 ; R3 := R0
	33	[2575]	CALL     	R2 2 1 ; R2(R3)
	34	[2577]	GETUPVAL 	R2 U2 ; R2 := U2
	35	[2577]	GETTABLE 	R2 R2 K11 ; R2 := R2["SELECTING_PART"]
	36	[2577]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 50
	37	[2577]	JMP      	50 ; PC := 50
	38	[2577]	GETGLOBAL	R2 K12 ; R2 := 0x7b998233
	39	[2577]	GETGLOBAL	R3 K13 ; R3 := mEvoMovie
	40	[2577]	CALL     	R2 2 2 ; R2 := R2(R3)
	41	[2577]	TEST     	R2 1 ; if R2 then PC := 50
	42	[2577]	JMP      	50 ; PC := 50
	43	[2578]	GETGLOBAL	R2 K13 ; R2 := mEvoMovie
	44	[2578]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xe4162eed]
	45	[2578]	LOADK    	R4 K15 ; R4 := "Close"
	46	[2578]	LOADK    	R5 K16 ; R5 := ""
	47	[2578]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	48	[2579]	LOADNIL  	R2 R2 ; R2 := nil
	49	[2579]	SETGLOBALHASH	R2 K13 ; mEvoMovie := R2
	50	[2582]	GETUPVAL 	R2 U2 ; R2 := U2
	51	[2582]	GETTABLE 	R2 R2 K17 ; R2 := R2["BROWSING_WAY_TREE"]
	52	[2582]	EQ       	0 R0 R2 ; if R0 ~= R2 then PC := 55
	53	[2582]	JMP      	55 ; PC := 55
	54	[2582]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 55
	55	[2582]	OP_LOADBOOL	R2 1 0 ; R2 := true
	56	[2583]	GETGLOBAL	R3 K8 ; R3 := 0xae91e43b
	57	[2583]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xaade900e]
	58	[2583]	LOADK    	R5 K19 ; R5 := "LeftFade"
	59	[2583]	LOADK    	R6 := 11.000000
	60	[2583]	MOVE     	R7 R2 ; R7 := R2
	61	[2583]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	62	[2584]	GETGLOBAL	R3 K8 ; R3 := 0xae91e43b
	63	[2584]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xaade900e]
	64	[2584]	LOADK    	R5 K20 ; R5 := "RightFade"
	65	[2584]	LOADK    	R6 := 11.000000
	66	[2584]	MOVE     	R7 R2 ; R7 := R2
	67	[2584]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	68	[2585]	GETGLOBAL	R3 K8 ; R3 := 0xae91e43b
	69	[2585]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xaade900e]
	70	[2585]	LOADK    	R5 K21 ; R5 := "MenuPanel"
	71	[2585]	LOADK    	R6 := 11.000000
	72	[2585]	MOVE     	R7 R2 ; R7 := R2
	73	[2585]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	74	[2587]	GETGLOBAL	R3 K8 ; R3 := 0xae91e43b
	75	[2587]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xaade900e]
	76	[2587]	LOADK    	R5 K22 ; R5 := "LoadoutCategories"
	77	[2587]	LOADK    	R6 := 11.000000
	78	[2587]	GETUPVAL 	R7 U2 ; R7 := U2
	79	[2587]	GETTABLE 	R7 R7 K11 ; R7 := R7["SELECTING_PART"]
	80	[2587]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 83
	81	[2587]	JMP      	83 ; PC := 83
	82	[2587]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 83
	83	[2587]	OP_LOADBOOL	R7 1 0 ; R7 := true
	84	[2587]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	85	[2588]	GETGLOBAL	R3 K8 ; R3 := 0xae91e43b
	86	[2588]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xaade900e]
	87	[2588]	LOADK    	R5 K23 ; R5 := "MenuPanel.Label"
	88	[2588]	LOADK    	R6 := 11.000000
	89	[2588]	GETUPVAL 	R7 U2 ; R7 := U2
	90	[2588]	GETTABLE 	R7 R7 K11 ; R7 := R7["SELECTING_PART"]
	91	[2588]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 94
	92	[2588]	JMP      	94 ; PC := 94
	93	[2588]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 94
	94	[2588]	OP_LOADBOOL	R7 1 0 ; R7 := true
	95	[2588]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	96	[2589]	GETUPVAL 	R3 U2 ; R3 := U2
	97	[2589]	GETTABLE 	R3 R3 K24 ; R3 := R3["CUSTOMIZING_SKINS"]
	98	[2589]	EQ       	1 R0 R3 ; if R0 == R3 then PC := 101
	99	[2589]	JMP      	101 ; PC := 101
	100	[2589]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 101
	101	[2589]	OP_LOADBOOL	R3 1 0 ; R3 := true
	102	[2590]	GETUPVAL 	R4 U2 ; R4 := U2
	103	[2590]	GETTABLE 	R4 R4 K24 ; R4 := R4["CUSTOMIZING_SKINS"]
	104	[2590]	EQ       	0 R0 R4 ; if R0 ~= R4 then PC := 122
	105	[2590]	JMP      	122 ; PC := 122
	106	[2590]	GETGLOBAL	R4 K12 ; R4 := 0x7b998233
	107	[2590]	GETGLOBAL	R5 K25 ; R5 := mSelected
	108	[2590]	GETTABLE 	R5 R5 K26 ; R5 := R5["Element"]
	109	[2590]	CALL     	R4 2 2 ; R4 := R4(R5)
	110	[2590]	TEST     	R4 1 ; if R4 then PC := 122
	111	[2590]	JMP      	122 ; PC := 122
	112	[2590]	GETGLOBAL	R4 K25 ; R4 := mSelected
	113	[2590]	GETTABLE 	R4 R4 K26 ; R4 := R4["Element"]
	114	[2590]	GETTABLE 	R4 R4 K27 ; R4 := R4["LoadOutType"]
	115	[2590]	EQ       	0 R4 K29 ; if R4 ~= 0.000000 then PC := 122
	116	[2590]	JMP      	122 ; PC := 122
	117	[2590]	GETGLOBAL	R4 K25 ; R4 := mSelected
	118	[2590]	GETTABLE 	R4 R4 K26 ; R4 := R4["Element"]
	119	[2590]	GETTABLE 	R4 R4 K30 ; R4 := R4["LoadOutId"]
	120	[2590]	EQ       	1 R4 K29 ; if R4 == 0.000000 then PC := 123
	121	[2590]	JMP      	123 ; PC := 123
	122	[2590]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 123
	123	[2590]	OP_LOADBOOL	R4 1 0 ; R4 := true
	124	[2591]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	125	[2591]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0xaade900e]
	126	[2591]	LOADK    	R7 K31 ; R7 := "LinkBtn"
	127	[2591]	LOADK    	R8 := 11.000000
	128	[2591]	MOVE     	R9 R3 ; R9 := R3
	129	[2591]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	130	[2592]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	131	[2592]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0xaade900e]
	132	[2592]	LOADK    	R7 K32 ; R7 := "CapturaBtn"
	133	[2592]	LOADK    	R8 := 11.000000
	134	[2592]	MOVE     	R9 R4 ; R9 := R4
	135	[2592]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	136	[2593]	GETUPVAL 	R5 U1 ; R5 := U1
	137	[2593]	GETTABLE 	R5 R5 K33 ; R5 := R5[0x06d055f9]
	138	[2593]	MOVE     	R6 R4 ; R6 := R4
	139	[2593]	LOADK    	R7 := 65.000000
	140	[2593]	LOADK    	R8 := 0.000000
	141	[2593]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	142	[2593]	GETUPVAL 	R6 U1 ; R6 := U1
	143	[2593]	GETTABLE 	R6 R6 K33 ; R6 := R6[0x06d055f9]
	144	[2593]	MOVE     	R7 R3 ; R7 := R3
	145	[2593]	LOADK    	R8 := 65.000000
	146	[2593]	LOADK    	R9 := 0.000000
	147	[2593]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	148	[2593]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	149	[2593]	SUB      	R5 K34 R5 ; R5 := 1777.000000 - R5
	150	[2594]	TEST     	R3 0 ; if not R3 then PC := 164
	151	[2594]	JMP      	164 ; PC := 164
	152	[2595]	GETUPVAL 	R6 U1 ; R6 := U1
	153	[2595]	GETTABLE 	R6 R6 K33 ; R6 := R6[0x06d055f9]
	154	[2595]	MOVE     	R7 R4 ; R7 := R4
	155	[2595]	LOADK    	R8 := 65.000000
	156	[2595]	LOADK    	R9 := 0.000000
	157	[2595]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	158	[2595]	SUB      	R6 K34 R6 ; R6 := 1777.000000 - R6
	159	[2596]	GETUPVAL 	R7 U4 ; R7 := U4
	160	[2596]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0x4bc5dc8b]
	161	[2596]	LOADK    	R9 K31 ; R9 := "LinkBtn"
	162	[2596]	MOVE     	R10 R6 ; R10 := R6
	163	[2596]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	164	[2598]	GETUPVAL 	R7 U4 ; R7 := U4
	165	[2598]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0x4bc5dc8b]
	166	[2598]	LOADK    	R9 K36 ; R9 := "ClipLinkBtn"
	167	[2598]	MOVE     	R10 R5 ; R10 := R5
	168	[2598]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	169	[2599]	GETUPVAL 	R7 U4 ; R7 := U4
	170	[2599]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0xfaa69527]
	171	[2599]	GETGLOBAL	R9 K8 ; R9 := 0xae91e43b
	172	[2599]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x6b837788]
	173	[2599]	CALL     	R9 2 2 ; R9 := R9(R10)
	174	[2599]	GETGLOBAL	R10 K8 ; R10 := 0xae91e43b
	175	[2599]	SELF     	R10 R10 K39 ; R11 := R10; R10 := R10[0xaf9fda9f]
	176	[2599]	CALL     	R10 2 0 ; R10,... := R10(R11)
	177	[2599]	CALL     	R7 0 1 ; R7(R8,...)
	178	[2601]	GETUPVAL 	R7 U2 ; R7 := U2
	179	[2601]	GETTABLE 	R7 R7 K24 ; R7 := R7["CUSTOMIZING_SKINS"]
	180	[2601]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 187
	181	[2601]	JMP      	187 ; PC := 187
	182	[2601]	GETUPVAL 	R7 U2 ; R7 := U2
	183	[2601]	GETTABLE 	R7 R7 K11 ; R7 := R7["SELECTING_PART"]
	184	[2601]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 187
	185	[2601]	JMP      	187 ; PC := 187
	186	[2601]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 187
	187	[2601]	OP_LOADBOOL	R7 1 0 ; R7 := true
	188	[2602]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	189	[2602]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xaade900e]
	190	[2602]	LOADK    	R10 K40 ; R10 := "MenuPanel.Left"
	191	[2602]	LOADK    	R11 := 11.000000
	192	[2602]	GETGLOBAL	R12 K41 ; R12 := 0x34291f5c
	193	[2602]	GETTABLE 	R12 R12 K42 ; R12 := R12[0x1467d5f4]
	194	[2602]	CALL     	R12 1 2 ; R12 := R12()
	195	[2602]	TEST     	R12 0 ; if not R12 then PC := 203
	196	[2602]	JMP      	203 ; PC := 203
	197	[2602]	GETUPVAL 	R12 U2 ; R12 := U2
	198	[2602]	GETTABLE 	R12 R12 K24 ; R12 := R12["CUSTOMIZING_SKINS"]
	199	[2602]	EQ       	1 R0 R12 ; if R0 == R12 then PC := 202
	200	[2602]	JMP      	202 ; PC := 202
	201	[2602]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 202
	202	[2602]	OP_LOADBOOL	R12 1 0 ; R12 := true
	203	[2602]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	204	[2603]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	205	[2603]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xaade900e]
	206	[2603]	LOADK    	R10 K43 ; R10 := "MenuPanel.Right"
	207	[2603]	LOADK    	R11 := 11.000000
	208	[2603]	GETGLOBAL	R12 K41 ; R12 := 0x34291f5c
	209	[2603]	GETTABLE 	R12 R12 K42 ; R12 := R12[0x1467d5f4]
	210	[2603]	CALL     	R12 1 2 ; R12 := R12()
	211	[2603]	TEST     	R12 0 ; if not R12 then PC := 214
	212	[2603]	JMP      	214 ; PC := 214
	213	[2603]	MOVE     	R12 R7 ; R12 := R7
	214	[2603]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	215	[2604]	GETUPVAL 	R8 U3 ; R8 := U3
	216	[2604]	GETTABLE 	R8 R8 K44 ; R8 := R8[0x75598285]
	217	[2604]	MOVE     	R9 R0 ; R9 := R0
	218	[2604]	CALL     	R8 2 1 ; R8(R9)
	219	[2607]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	220	[2607]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xaade900e]
	221	[2607]	LOADK    	R10 K45 ; R10 := "MenuPanel.LeftArrow"
	222	[2607]	LOADK    	R11 := 11.000000
	223	[2607]	GETGLOBAL	R12 K41 ; R12 := 0x34291f5c
	224	[2607]	GETTABLE 	R12 R12 K42 ; R12 := R12[0x1467d5f4]
	225	[2607]	CALL     	R12 1 2 ; R12 := R12()
	226	[2607]	TEST     	R12 1 ; if R12 then PC := 232
	227	[2607]	JMP      	232 ; PC := 232
	228	[2607]	GETUPVAL 	R12 U2 ; R12 := U2
	229	[2607]	GETTABLE 	R12 R12 K24 ; R12 := R12["CUSTOMIZING_SKINS"]
	230	[2607]	EQ       	1 R0 R12 ; if R0 == R12 then PC := 233
	231	[2607]	JMP      	233 ; PC := 233
	232	[2607]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 233
	233	[2607]	OP_LOADBOOL	R12 1 0 ; R12 := true
	234	[2607]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	235	[2608]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	236	[2608]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xaade900e]
	237	[2608]	LOADK    	R10 K46 ; R10 := "MenuPanel.RightArrow"
	238	[2608]	LOADK    	R11 := 11.000000
	239	[2608]	GETGLOBAL	R12 K41 ; R12 := 0x34291f5c
	240	[2608]	GETTABLE 	R12 R12 K42 ; R12 := R12[0x1467d5f4]
	241	[2608]	CALL     	R12 1 2 ; R12 := R12()
	242	[2608]	TEST     	R12 1 ; if R12 then PC := 246
	243	[2608]	JMP      	246 ; PC := 246
	244	[2608]	MOVE     	R12 R7 ; R12 := R7
	245	[2608]	JMP      	248 ; PC := 248
	246	[2608]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 247
	247	[2608]	OP_LOADBOOL	R12 1 0 ; R12 := true
	248	[2608]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	249	[2610]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	250	[2610]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xaade900e]
	251	[2610]	LOADK    	R10 K47 ; R10 := "MenuPanel.SelectLoadoutBtn"
	252	[2610]	LOADK    	R11 := 59.000000
	253	[2610]	GETGLOBAL	R12 K41 ; R12 := 0x34291f5c
	254	[2610]	GETTABLE 	R12 R12 K42 ; R12 := R12[0x1467d5f4]
	255	[2610]	CALL     	R12 1 2 ; R12 := R12()
	256	[2610]	TEST     	R12 1 ; if R12 then PC := 262
	257	[2610]	JMP      	262 ; PC := 262
	258	[2610]	GETUPVAL 	R12 U2 ; R12 := U2
	259	[2610]	GETTABLE 	R12 R12 K11 ; R12 := R12["SELECTING_PART"]
	260	[2610]	EQ       	1 R0 R12 ; if R0 == R12 then PC := 263
	261	[2610]	JMP      	263 ; PC := 263
	262	[2610]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 263
	263	[2610]	OP_LOADBOOL	R12 1 0 ; R12 := true
	264	[2610]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	265	[2612]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	266	[2612]	SELF     	R8 R8 K48 ; R9 := R8; R8 := R8[0x5f56eeab]
	267	[2612]	LOADK    	R10 K49 ; R10 := "CosmeticDesc"
	268	[2612]	LOADK    	R11 := 29.000000
	269	[2612]	LOADK    	R12 K16 ; R12 := ""
	270	[2612]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	271	[2614]	GETUPVAL 	R8 U2 ; R8 := U2
	272	[2614]	GETTABLE 	R8 R8 K5 ; R8 := R8["SWAPPING_ITEM"]
	273	[2614]	EQ       	1 R0 R8 ; if R0 == R8 then PC := 292
	274	[2614]	JMP      	292 ; PC := 292
	275	[2615]	GETGLOBAL	R8 K50 ; R8 := mButtons
	276	[2615]	GETTABLE 	R8 R8 K51 ; R8 := R8[2.000000]
	277	[2615]	SETTABLE 	R8 K52 K53 ; R8["mVisible"] := false
	278	[2616]	GETGLOBAL	R8 K54 ; R8 := mItemsGrid
	279	[2616]	SELF     	R8 R8 K55 ; R9 := R8; R8 := R8[0x7c09c373]
	280	[2616]	OP_LOADBOOL	R10 1 0 ; R10 := true
	281	[2616]	OP_LOADBOOL	R11 1 0 ; R11 := true
	282	[2616]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	283	[2617]	GETGLOBAL	R8 K54 ; R8 := mItemsGrid
	284	[2617]	SELF     	R8 R8 K56 ; R9 := R8; R8 := R8[0x71e9ac81]
	285	[2617]	CALL     	R8 2 1 ; R8(R9)
	286	[2618]	GETGLOBAL	R8 K8 ; R8 := 0xae91e43b
	287	[2618]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xaade900e]
	288	[2618]	LOADK    	R10 K57 ; R10 := "Item"
	289	[2618]	LOADK    	R11 := 59.000000
	290	[2618]	OP_LOADBOOL	R12 0 0 ; R12 := false
	291	[2618]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	292	[2621]	GETGLOBAL	R8 K50 ; R8 := mButtons
	293	[2621]	GETGLOBAL	R9 K58 ; R9 := mButtonIndices
	294	[2621]	GETTABLE 	R9 R9 K59 ; R9 := R9["Rotate"]
	295	[2621]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	296	[2621]	EQ       	1 R8 K60 ; if R8 == nil then PC := 327
	297	[2621]	JMP      	327 ; PC := 327
	298	[2622]	GETGLOBAL	R8 K41 ; R8 := 0x34291f5c
	299	[2622]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x1467d5f4]
	300	[2622]	CALL     	R8 1 2 ; R8 := R8()
	301	[2622]	TEST     	R8 0 ; if not R8 then PC := 313
	302	[2622]	JMP      	313 ; PC := 313
	303	[2622]	GETUPVAL 	R8 U2 ; R8 := U2
	304	[2622]	GETTABLE 	R8 R8 K5 ; R8 := R8["SWAPPING_ITEM"]
	305	[2622]	EQ       	1 R0 R8 ; if R0 == R8 then PC := 312
	306	[2622]	JMP      	312 ; PC := 312
	307	[2622]	GETUPVAL 	R8 U2 ; R8 := U2
	308	[2622]	GETTABLE 	R8 R8 K6 ; R8 := R8["SELECTING_SKINS"]
	309	[2622]	EQ       	1 R0 R8 ; if R0 == R8 then PC := 312
	310	[2622]	JMP      	312 ; PC := 312
	311	[2622]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 312
	312	[2622]	OP_LOADBOOL	R8 1 0 ; R8 := true
	313	[2623]	GETGLOBAL	R9 K50 ; R9 := mButtons
	314	[2623]	GETGLOBAL	R10 K58 ; R10 := mButtonIndices
	315	[2623]	GETTABLE 	R10 R10 K59 ; R10 := R10["Rotate"]
	316	[2623]	GETTABLE 	R9 R9 R10 ; R9 := R9[R10]
	317	[2623]	SETTABLE 	R9 K52 R8 ; R9["mVisible"] := R8
	318	[2624]	TEST     	R8 1 ; if R8 then PC := 327
	319	[2624]	JMP      	327 ; PC := 327
	320	[2625]	GETGLOBAL	R9 K50 ; R9 := mButtons
	321	[2625]	GETGLOBAL	R10 K58 ; R10 := mButtonIndices
	322	[2625]	GETTABLE 	R10 R10 K59 ; R10 := R10["Rotate"]
	323	[2625]	GETTABLE 	R9 R9 R10 ; R9 := R9[R10]
	324	[2625]	GETTABLE 	R9 R9 K61 ; R9 := R9[0x7ca0d7fa]
	325	[2625]	OP_LOADBOOL	R10 0 0 ; R10 := false
	326	[2625]	CALL     	R9 2 1 ; R9(R10)
	327	[2629]	GETUPVAL 	R9 U2 ; R9 := U2
	328	[2629]	GETTABLE 	R9 R9 K6 ; R9 := R9["SELECTING_SKINS"]
	329	[2629]	EQ       	1 R0 R9 ; if R0 == R9 then PC := 434
	330	[2629]	JMP      	434 ; PC := 434
	331	[2629]	GETGLOBAL	R9 K25 ; R9 := mSelected
	332	[2629]	GETTABLE 	R9 R9 K62 ; R9 := R9["CosmeticItem"]
	333	[2629]	EQ       	1 R9 K60 ; if R9 == nil then PC := 434
	334	[2629]	JMP      	434 ; PC := 434
	335	[2629]	GETGLOBAL	R9 K25 ; R9 := mSelected
	336	[2629]	GETTABLE 	R9 R9 K63 ; R9 := R9["Cosmetic"]
	337	[2629]	EQ       	1 R9 K60 ; if R9 == nil then PC := 434
	338	[2629]	JMP      	434 ; PC := 434
	339	[2630]	GETGLOBAL	R9 K25 ; R9 := mSelected
	340	[2630]	GETTABLE 	R9 R9 K63 ; R9 := R9["Cosmetic"]
	341	[2630]	GETTABLE 	R9 R9 K64 ; R9 := R9["PetTrait"]
	342	[2630]	TEST     	R9 0 ; if not R9 then PC := 367
	343	[2630]	JMP      	367 ; PC := 367
	344	[2630]	GETGLOBAL	R9 K25 ; R9 := mSelected
	345	[2630]	GETTABLE 	R9 R9 K63 ; R9 := R9["Cosmetic"]
	346	[2630]	GETTABLE 	R9 R9 K65 ; R9 := R9["Attribute"]
	347	[2630]	TEST     	R9 0 ; if not R9 then PC := 367
	348	[2630]	JMP      	367 ; PC := 367
	349	[2631]	GETGLOBAL	R9 K25 ; R9 := mSelected
	350	[2631]	GETTABLE 	R9 R9 K66 ; R9 := R9["CosmeticPreviousValue"]
	351	[2631]	EQ       	1 R9 K60 ; if R9 == nil then PC := 364
	352	[2631]	JMP      	364 ; PC := 364
	353	[2632]	GETUPVAL 	R9 U5 ; R9 := U5
	354	[2632]	GETGLOBAL	R10 K25 ; R10 := mSelected
	355	[2632]	GETTABLE 	R10 R10 K63 ; R10 := R10["Cosmetic"]
	356	[2632]	GETTABLE 	R10 R10 K65 ; R10 := R10["Attribute"]
	357	[2632]	GETGLOBAL	R11 K25 ; R11 := mSelected
	358	[2632]	GETTABLE 	R11 R11 K66 ; R11 := R11["CosmeticPreviousValue"]
	359	[2632]	SELF     	R11 R11 K67 ; R12 := R11; R11 := R11[0xa5d5c8f6]
	360	[2632]	CALL     	R11 2 2 ; R11 := R11(R12)
	361	[2632]	LOADK    	R12 := 0.000000
	362	[2632]	LOADNIL  	R13 R13 ; R13 := nil
	363	[2632]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	364	[2634]	GETGLOBAL	R9 K25 ; R9 := mSelected
	365	[2634]	SETTABLE 	R9 K66 K60 ; R9["CosmeticPreviousValue"] := nil
	366	[2634]	JMP      	434 ; PC := 434
	367	[2635]	GETGLOBAL	R9 K12 ; R9 := 0x7b998233
	368	[2635]	GETGLOBAL	R10 K25 ; R10 := mSelected
	369	[2635]	GETTABLE 	R10 R10 K26 ; R10 := R10["Element"]
	370	[2635]	CALL     	R9 2 2 ; R9 := R9(R10)
	371	[2635]	TEST     	R9 1 ; if R9 then PC := 434
	372	[2635]	JMP      	434 ; PC := 434
	373	[2636]	GETGLOBAL	R9 K25 ; R9 := mSelected
	374	[2636]	GETTABLE 	R9 R9 K26 ; R9 := R9["Element"]
	375	[2636]	GETTABLE 	R9 R9 K68 ; R9 := R9["Customization"]
	376	[2636]	SELF     	R9 R9 K69 ; R10 := R9; R9 := R9[0x2540510f]
	377	[2636]	GETGLOBAL	R11 K25 ; R11 := mSelected
	378	[2636]	GETTABLE 	R11 R11 K63 ; R11 := R11["Cosmetic"]
	379	[2636]	GETTABLE 	R11 R11 K70 ; R11 := R11["Slot"]
	380	[2636]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	381	[2637]	GETGLOBAL	R10 K71 ; R10 := _T
	382	[2637]	GETTABLE 	R10 R10 K72 ; R10 := R10["MenuSuitAvatar"]
	383	[2638]	GETGLOBAL	R11 K25 ; R11 := mSelected
	384	[2638]	GETTABLE 	R11 R11 K62 ; R11 := R11["CosmeticItem"]
	385	[2638]	GETTABLE 	R11 R11 K73 ; R11 := R11["Type"]
	386	[2638]	EQ       	1 R9 R11 ; if R9 == R11 then PC := 434
	387	[2638]	JMP      	434 ; PC := 434
	388	[2638]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	389	[2638]	GETGLOBAL	R12 K74 ; R12 := 0x25d99d89
	390	[2638]	CALL     	R11 2 2 ; R11 := R11(R12)
	391	[2638]	TEST     	R11 1 ; if R11 then PC := 434
	392	[2638]	JMP      	434 ; PC := 434
	393	[2639]	GETGLOBAL	R11 K25 ; R11 := mSelected
	394	[2639]	GETTABLE 	R11 R11 K26 ; R11 := R11["Element"]
	395	[2639]	GETTABLE 	R11 R11 K27 ; R11 := R11["LoadOutType"]
	396	[2639]	EQ       	0 R11 K75 ; if R11 ~= 4.000000 then PC := 403
	397	[2639]	JMP      	403 ; PC := 403
	398	[2640]	SELF     	R11 R10 K76 ; R12 := R10; R11 := R10[0xde321e6f]
	399	[2640]	CALL     	R11 2 2 ; R11 := R11(R12)
	400	[2640]	SELF     	R11 R11 K77 ; R12 := R11; R11 := R11[0xf596420f]
	401	[2640]	CALL     	R11 2 1 ; R11(R12)
	402	[2640]	JMP      	434 ; PC := 434
	403	[2642]	SELF     	R11 R10 K76 ; R12 := R10; R11 := R10[0xde321e6f]
	404	[2642]	CALL     	R11 2 2 ; R11 := R11(R12)
	405	[2642]	SELF     	R11 R11 K78 ; R12 := R11; R11 := R11[0x374b084a]
	406	[2642]	CALL     	R11 2 1 ; R11(R12)
	407	[2643]	GETUPVAL 	R11 U6 ; R11 := U6
	408	[2643]	GETUPVAL 	R12 U7 ; R12 := U7
	409	[2643]	GETTABLE 	R12 R12 K79 ; R12 := R12["Current"]
	410	[2643]	EQ       	1 R12 K51 ; if R12 == 2.000000 then PC := 413
	411	[2643]	JMP      	413 ; PC := 413
	412	[2643]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 413
	413	[2643]	OP_LOADBOOL	R12 1 0 ; R12 := true
	414	[2643]	CALL     	R11 2 1 ; R11(R12)
	415	[2644]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	416	[2644]	GETUPVAL 	R12 U8 ; R12 := U8
	417	[2644]	CALL     	R11 2 2 ; R11 := R11(R12)
	418	[2644]	TEST     	R11 0 ; if not R11 then PC := 424
	419	[2644]	JMP      	424 ; PC := 424
	420	[2645]	SELF     	R11 R10 K76 ; R12 := R10; R11 := R10[0xde321e6f]
	421	[2645]	CALL     	R11 2 2 ; R11 := R11(R12)
	422	[2645]	SELF     	R11 R11 K80 ; R12 := R11; R11 := R11[0x0c277ae1]
	423	[2645]	CALL     	R11 2 1 ; R11(R12)
	424	[2647]	GETUPVAL 	R11 U9 ; R11 := U9
	425	[2647]	GETGLOBAL	R12 K25 ; R12 := mSelected
	426	[2647]	GETTABLE 	R12 R12 K26 ; R12 := R12["Element"]
	427	[2647]	GETTABLE 	R12 R12 K27 ; R12 := R12["LoadOutType"]
	428	[2647]	GETGLOBAL	R13 K25 ; R13 := mSelected
	429	[2647]	GETTABLE 	R13 R13 K26 ; R13 := R13["Element"]
	430	[2647]	GETTABLE 	R13 R13 K30 ; R13 := R13["LoadOutId"]
	431	[2647]	GETGLOBAL	R14 K25 ; R14 := mSelected
	432	[2647]	GETTABLE 	R14 R14 K26 ; R14 := R14["Element"]
	433	[2647]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	434	[2653]	GETUPVAL 	R11 U10 ; R11 := U10
	435	[2653]	GETUPVAL 	R12 U2 ; R12 := U2
	436	[2653]	GETTABLE 	R12 R12 K81 ; R12 := R12["BROWSING_CONSUMABLES"]
	437	[2653]	EQ       	1 R0 R12 ; if R0 == R12 then PC := 440
	438	[2653]	JMP      	440 ; PC := 440
	439	[2653]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 440
	440	[2653]	OP_LOADBOOL	R12 1 0 ; R12 := true
	441	[2653]	CALL     	R11 2 1 ; R11(R12)
	442	[2654]	GETUPVAL 	R11 U2 ; R11 := U2
	443	[2654]	GETTABLE 	R11 R11 K7 ; R11 := R11["SELECTING_CONSUMABLES"]
	444	[2654]	EQ       	1 R0 R11 ; if R0 == R11 then PC := 450
	445	[2654]	JMP      	450 ; PC := 450
	446	[2655]	GETGLOBAL	R11 K25 ; R11 := mSelected
	447	[2655]	SETTABLE 	R11 K82 K60 ; R11["Consumable"] := nil
	448	[2656]	GETGLOBAL	R11 K25 ; R11 := mSelected
	449	[2656]	SETTABLE 	R11 K83 K60 ; R11["Emote"] := nil
	450	[2659]	GETGLOBAL	R11 K50 ; R11 := mButtons
	451	[2659]	GETGLOBAL	R12 K58 ; R12 := mButtonIndices
	452	[2659]	GETTABLE 	R12 R12 K84 ; R12 := R12["SuitAppearance"]
	453	[2659]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	454	[2659]	SETTABLE 	R11 K52 K53 ; R11["mVisible"] := false
	455	[2660]	GETGLOBAL	R11 K50 ; R11 := mButtons
	456	[2660]	GETGLOBAL	R12 K58 ; R12 := mButtonIndices
	457	[2660]	GETTABLE 	R12 R12 K85 ; R12 := R12["PvpTeam"]
	458	[2660]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	459	[2660]	GETUPVAL 	R12 U11 ; R12 := U11
	460	[2660]	MOVE     	R13 R0 ; R13 := R0
	461	[2660]	CALL     	R12 2 2 ; R12 := R12(R13)
	462	[2660]	SETTABLE 	R11 K52 R12 ; R11["mVisible"] := R12
	463	[2661]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	464	[2661]	GETGLOBAL	R12 K50 ; R12 := mButtons
	465	[2661]	GETGLOBAL	R13 K58 ; R13 := mButtonIndices
	466	[2661]	GETTABLE 	R13 R13 K86 ; R13 := R13["Mode"]
	467	[2661]	GETTABLE 	R12 R12 R13 ; R12 := R12[R13]
	468	[2661]	CALL     	R11 2 2 ; R11 := R11(R12)
	469	[2661]	TEST     	R11 1 ; if R11 then PC := 479
	470	[2661]	JMP      	479 ; PC := 479
	471	[2662]	GETGLOBAL	R11 K50 ; R11 := mButtons
	472	[2662]	GETGLOBAL	R12 K58 ; R12 := mButtonIndices
	473	[2662]	GETTABLE 	R12 R12 K86 ; R12 := R12["Mode"]
	474	[2662]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	475	[2662]	GETUPVAL 	R12 U12 ; R12 := U12
	476	[2662]	MOVE     	R13 R0 ; R13 := R0
	477	[2662]	CALL     	R12 2 2 ; R12 := R12(R13)
	478	[2662]	SETTABLE 	R11 K52 R12 ; R11["mVisible"] := R12
	479	[2665]	GETUPVAL 	R11 U2 ; R11 := U2
	480	[2665]	GETTABLE 	R11 R11 K24 ; R11 := R11["CUSTOMIZING_SKINS"]
	481	[2665]	EQ       	1 R0 R11 ; if R0 == R11 then PC := 487
	482	[2665]	JMP      	487 ; PC := 487
	483	[2665]	GETUPVAL 	R11 U2 ; R11 := U2
	484	[2665]	GETTABLE 	R11 R11 K6 ; R11 := R11["SELECTING_SKINS"]
	485	[2665]	EQ       	0 R0 R11 ; if R0 ~= R11 then PC := 828
	486	[2665]	JMP      	828 ; PC := 828
	487	[2666]	GETGLOBAL	R11 K87 ; R11 := mLists
	488	[2666]	GETTABLE 	R11 R11 K88 ; R11 := R11["mCosmeticsList"]
	489	[2666]	SELF     	R11 R11 K89 ; R12 := R11; R11 := R11[0xea061e98]
	490	[2690]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	491	[2690]	MOVE     	R0 R0 ; R0 := R0
	492	[2690]	GETUPVAL 	R0 U2 ; R0 := U2
	493	[2666]	CALL     	R11 3 1 ; R11(R12,R13)
	494	[2692]	GETUPVAL 	R11 U2 ; R11 := U2
	495	[2692]	GETTABLE 	R11 R11 K6 ; R11 := R11["SELECTING_SKINS"]
	496	[2692]	EQ       	0 R0 R11 ; if R0 ~= R11 then PC := 504
	497	[2692]	JMP      	504 ; PC := 504
	498	[2693]	GETGLOBAL	R11 K8 ; R11 := 0xae91e43b
	499	[2693]	SELF     	R11 R11 K18 ; R12 := R11; R11 := R11[0xaade900e]
	500	[2693]	LOADK    	R13 K90 ; R13 := "CosmeticsMenuScrollBar"
	501	[2693]	LOADK    	R14 := 11.000000
	502	[2693]	OP_LOADBOOL	R15 0 0 ; R15 := false
	503	[2693]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	504	[2696]	GETUPVAL 	R11 U2 ; R11 := U2
	505	[2696]	GETTABLE 	R11 R11 K24 ; R11 := R11["CUSTOMIZING_SKINS"]
	506	[2696]	EQ       	0 R0 R11 ; if R0 ~= R11 then PC := 814
	507	[2696]	JMP      	814 ; PC := 814
	508	[2696]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	509	[2696]	GETGLOBAL	R12 K25 ; R12 := mSelected
	510	[2696]	GETTABLE 	R12 R12 K26 ; R12 := R12["Element"]
	511	[2696]	CALL     	R11 2 2 ; R11 := R11(R12)
	512	[2696]	TEST     	R11 1 ; if R11 then PC := 814
	513	[2696]	JMP      	814 ; PC := 814
	514	[2697]	GETGLOBAL	R11 K71 ; R11 := _T
	515	[2697]	GETTABLE 	R11 R11 K72 ; R11 := R11["MenuSuitAvatar"]
	516	[2698]	SELF     	R12 R11 K91 ; R13 := R11; R12 := R11[0x2e9b92e3]
	517	[2698]	LOADK    	R14 := 1.000000
	518	[2698]	CALL     	R12 3 1 ; R12(R13,R14)
	519	[2700]	OP_LOADBOOL	R12 1 0 ; R12 := true
	520	[2700]	SETGLOBALHASH	R12 K92 ; mRePopulateCosmetics := R12
	521	[2702]	GETGLOBAL	R12 K25 ; R12 := mSelected
	522	[2702]	GETTABLE 	R12 R12 K26 ; R12 := R12["Element"]
	523	[2702]	GETTABLE 	R12 R12 K93 ; R12 := R12["LunaroArenaEntry"]
	524	[2702]	TEST     	R12 0 ; if not R12 then PC := 527
	525	[2702]	JMP      	527 ; PC := 527
	526	[2702]	JMP      	814 ; PC := 814
	527	[2704]	GETGLOBAL	R12 K25 ; R12 := mSelected
	528	[2704]	GETTABLE 	R12 R12 K26 ; R12 := R12["Element"]
	529	[2704]	GETTABLE 	R12 R12 K30 ; R12 := R12["LoadOutId"]
	530	[2704]	EQ       	0 R12 K29 ; if R12 ~= 0.000000 then PC := 814
	531	[2704]	JMP      	814 ; PC := 814
	532	[2704]	GETGLOBAL	R12 K25 ; R12 := mSelected
	533	[2704]	GETTABLE 	R12 R12 K26 ; R12 := R12["Element"]
	534	[2704]	GETTABLE 	R12 R12 K27 ; R12 := R12["LoadOutType"]
	535	[2704]	EQ       	1 R12 K94 ; if R12 == 7.000000 then PC := 814
	536	[2704]	JMP      	814 ; PC := 814
	537	[2705]	GETGLOBAL	R12 K12 ; R12 := 0x7b998233
	538	[2705]	GETUPVAL 	R13 U8 ; R13 := U8
	539	[2705]	CALL     	R12 2 2 ; R12 := R12(R13)
	540	[2705]	TEST     	R12 0 ; if not R12 then PC := 607
	541	[2705]	JMP      	607 ; PC := 607
	542	[2706]	SELF     	R12 R11 K76 ; R13 := R11; R12 := R11[0xde321e6f]
	543	[2706]	CALL     	R12 2 2 ; R12 := R12(R13)
	544	[2707]	SELF     	R13 R12 K95 ; R14 := R12; R13 := R12[0xc533c156]
	545	[2707]	LOADK    	R15 := 0.000000
	546	[2707]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	547	[2707]	SETUPVAL 	R13 U8 ; U8 := R13
	548	[2709]	OP_LOADBOOL	R13 0 0 ; R13 := false
	549	[2710]	SELF     	R14 R12 K96 ; R15 := R12; R14 := R12[0xf7d48ee0]
	550	[2710]	CALL     	R14 2 2 ; R14 := R14(R15)
	551	[2711]	GETGLOBAL	R15 K12 ; R15 := 0x7b998233
	552	[2711]	MOVE     	R16 R14 ; R16 := R14
	553	[2711]	CALL     	R15 2 2 ; R15 := R15(R16)
	554	[2711]	TEST     	R15 1 ; if R15 then PC := 594
	555	[2711]	JMP      	594 ; PC := 594
	556	[2712]	SELF     	R15 R12 K97 ; R16 := R12; R15 := R12[0x8205b296]
	557	[2712]	LOADK    	R17 := 0.000000
	558	[2712]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	559	[2714]	GETGLOBAL	R16 K12 ; R16 := 0x7b998233
	560	[2714]	MOVE     	R17 R15 ; R17 := R15
	561	[2714]	CALL     	R16 2 2 ; R16 := R16(R17)
	562	[2714]	TEST     	R16 1 ; if R16 then PC := 594
	563	[2714]	JMP      	594 ; PC := 594
	564	[2715]	SELF     	R16 R15 K98 ; R17 := R15; R16 := R15[0xf2deaf69]
	565	[2715]	GETGLOBAL	R18 K99 ; R18 := gLotusCustomAimWeaponType
	566	[2715]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	567	[2715]	TEST     	R16 1 ; if R16 then PC := 594
	568	[2715]	JMP      	594 ; PC := 594
	569	[2716]	SELF     	R16 R14 K98 ; R17 := R14; R16 := R14[0xf2deaf69]
	570	[2716]	GETGLOBAL	R18 K100 ; R18 := 0xf773e9d4
	571	[2716]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	572	[2716]	TEST     	R16 1 ; if R16 then PC := 594
	573	[2716]	JMP      	594 ; PC := 594
	574	[2718]	LOADK    	R16 := 5.000000
	575	[2718]	LOADK    	R17 := 6.000000
	576	[2718]	LOADK    	R18 := 1.000000
	577	[2718]	FORPREP  	R16 593 ; R16 -= R18; PC := 593
	578	[2719]	SELF     	R20 R14 K101 ; R21 := R14; R20 := R14[0x4a5d8c86]
	579	[2719]	MOVE     	R22 R19 ; R22 := R19
	580	[2719]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	581	[2720]	GETGLOBAL	R21 K12 ; R21 := 0x7b998233
	582	[2720]	GETTABLE 	R22 R20 K102 ; R22 := R20["mItemType"]
	583	[2720]	CALL     	R21 2 2 ; R21 := R21(R22)
	584	[2720]	TEST     	R21 1 ; if R21 then PC := 593
	585	[2720]	JMP      	593 ; PC := 593
	586	[2720]	GETTABLE 	R21 R20 K102 ; R21 := R20["mItemType"]
	587	[2720]	SELF     	R22 R15 K103 ; R23 := R15; R22 := R15[0xcde10c4a]
	588	[2720]	CALL     	R22 2 2 ; R22 := R22(R23)
	589	[2720]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 593
	590	[2720]	JMP      	593 ; PC := 593
	591	[2721]	OP_LOADBOOL	R13 1 0 ; R13 := true
	592	[2722]	JMP      	594 ; PC := 594
	593	[2718]	FORLOOP  	R16 578 ; R16 += R18; if R16 <= R17 then begin PC := 578; R19 := R16 end
	594	[2728]	TEST     	R13 0 ; if not R13 then PC := 600
	595	[2728]	JMP      	600 ; PC := 600
	596	[2729]	SELF     	R21 R12 K104 ; R22 := R12; R21 := R12[0x0eeedfea]
	597	[2729]	GETUPVAL 	R23 U8 ; R23 := U8
	598	[2729]	CALL     	R21 3 1 ; R21(R22,R23)
	599	[2729]	JMP      	604 ; PC := 604
	600	[2731]	SELF     	R21 R12 K105 ; R22 := R12; R21 := R12[0x54732cc7]
	601	[2731]	GETUPVAL 	R23 U8 ; R23 := U8
	602	[2731]	LOADK    	R24 := 2.000000
	603	[2731]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	604	[2734]	SELF     	R21 R12 K106 ; R22 := R12; R21 := R12[0x0b5ec5b5]
	605	[2734]	OP_LOADBOOL	R23 0 0 ; R23 := false
	606	[2734]	CALL     	R21 3 1 ; R21(R22,R23)
	607	[2737]	GETUPVAL 	R21 U13 ; R21 := U13
	608	[2737]	GETGLOBAL	R22 K25 ; R22 := mSelected
	609	[2737]	GETTABLE 	R22 R22 K26 ; R22 := R22["Element"]
	610	[2737]	GETTABLE 	R22 R22 K27 ; R22 := R22["LoadOutType"]
	611	[2737]	GETGLOBAL	R23 K25 ; R23 := mSelected
	612	[2737]	GETTABLE 	R23 R23 K26 ; R23 := R23["Element"]
	613	[2737]	GETTABLE 	R23 R23 K30 ; R23 := R23["LoadOutId"]
	614	[2737]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	615	[2738]	GETGLOBAL	R22 K12 ; R22 := 0x7b998233
	616	[2738]	MOVE     	R23 R21 ; R23 := R21
	617	[2738]	CALL     	R22 2 2 ; R22 := R22(R23)
	618	[2738]	TEST     	R22 1 ; if R22 then PC := 814
	619	[2738]	JMP      	814 ; PC := 814
	620	[2739]	SELF     	R22 R21 K98 ; R23 := R21; R22 := R21[0xf2deaf69]
	621	[2739]	GETGLOBAL	R24 K107 ; R24 := 0xb5afcb89
	622	[2739]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	623	[2739]	TEST     	R22 0 ; if not R22 then PC := 644
	624	[2739]	JMP      	644 ; PC := 644
	625	[2740]	GETGLOBAL	R22 K50 ; R22 := mButtons
	626	[2740]	GETGLOBAL	R23 K58 ; R23 := mButtonIndices
	627	[2740]	GETTABLE 	R23 R23 K84 ; R23 := R23["SuitAppearance"]
	628	[2740]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	629	[2740]	SETTABLE 	R22 K52 K108 ; R22["mVisible"] := true
	630	[2741]	GETGLOBAL	R22 K50 ; R22 := mButtons
	631	[2741]	GETGLOBAL	R23 K58 ; R23 := mButtonIndices
	632	[2741]	GETTABLE 	R23 R23 K84 ; R23 := R23["SuitAppearance"]
	633	[2741]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	634	[2741]	GETGLOBAL	R23 K110 ; R23 := 0x7f5022cf
	635	[2741]	GETTABLE 	R23 R23 K111 ; R23 := R23[0x3f3e4d12]
	636	[2741]	GETGLOBAL	R24 K8 ; R24 := 0xae91e43b
	637	[2741]	SELF     	R24 R24 K112 ; R25 := R24; R24 := R24[0x42b04007]
	638	[2741]	LOADK    	R26 K113 ; R26 := "/Lotus/Language/Suits/SentientAbilityName"
	639	[2741]	OP_LOADBOOL	R27 0 0 ; R27 := false
	640	[2741]	CALL     	R24 4 0 ; R24,... := R24(R25,R26,R27)
	641	[2741]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	642	[2741]	SETTABLE 	R22 K109 R23 ; R22["mLabel"] := R23
	643	[2741]	JMP      	814 ; PC := 814
	644	[2742]	SELF     	R22 R21 K98 ; R23 := R21; R22 := R21[0xf2deaf69]
	645	[2742]	GETGLOBAL	R24 K114 ; R24 := 0xe3ae0932
	646	[2742]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	647	[2742]	TEST     	R22 0 ; if not R22 then PC := 668
	648	[2742]	JMP      	668 ; PC := 668
	649	[2743]	GETGLOBAL	R22 K50 ; R22 := mButtons
	650	[2743]	GETGLOBAL	R23 K58 ; R23 := mButtonIndices
	651	[2743]	GETTABLE 	R23 R23 K84 ; R23 := R23["SuitAppearance"]
	652	[2743]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	653	[2743]	SETTABLE 	R22 K52 K108 ; R22["mVisible"] := true
	654	[2744]	GETGLOBAL	R22 K50 ; R22 := mButtons
	655	[2744]	GETGLOBAL	R23 K58 ; R23 := mButtonIndices
	656	[2744]	GETTABLE 	R23 R23 K84 ; R23 := R23["SuitAppearance"]
	657	[2744]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	658	[2744]	GETGLOBAL	R23 K110 ; R23 := 0x7f5022cf
	659	[2744]	GETTABLE 	R23 R23 K111 ; R23 := R23[0x3f3e4d12]
	660	[2744]	GETGLOBAL	R24 K8 ; R24 := 0xae91e43b
	661	[2744]	SELF     	R24 R24 K112 ; R25 := R24; R24 := R24[0x42b04007]
	662	[2744]	LOADK    	R26 K115 ; R26 := "/Lotus/Language/Suits/YinYangSwitchAbilityName"
	663	[2744]	OP_LOADBOOL	R27 0 0 ; R27 := false
	664	[2744]	CALL     	R24 4 0 ; R24,... := R24(R25,R26,R27)
	665	[2744]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	666	[2744]	SETTABLE 	R22 K109 R23 ; R22["mLabel"] := R23
	667	[2744]	JMP      	814 ; PC := 814
	668	[2745]	SELF     	R22 R21 K98 ; R23 := R21; R22 := R21[0xf2deaf69]
	669	[2745]	GETGLOBAL	R24 K116 ; R24 := 0x68564c44
	670	[2745]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	671	[2745]	TEST     	R22 0 ; if not R22 then PC := 692
	672	[2745]	JMP      	692 ; PC := 692
	673	[2746]	GETGLOBAL	R22 K50 ; R22 := mButtons
	674	[2746]	GETGLOBAL	R23 K58 ; R23 := mButtonIndices
	675	[2746]	GETTABLE 	R23 R23 K84 ; R23 := R23["SuitAppearance"]
	676	[2746]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	677	[2746]	SETTABLE 	R22 K52 K108 ; R22["mVisible"] := true
	678	[2747]	GETGLOBAL	R22 K50 ; R22 := mButtons
	679	[2747]	GETGLOBAL	R23 K58 ; R23 := mButtonIndices
	680	[2747]	GETTABLE 	R23 R23 K84 ; R23 := R23["SuitAppearance"]
	681	[2747]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	682	[2747]	GETGLOBAL	R23 K110 ; R23 := 0x7f5022cf
	683	[2747]	GETTABLE 	R23 R23 K111 ; R23 := R23[0x3f3e4d12]
	684	[2747]	GETGLOBAL	R24 K8 ; R24 := 0xae91e43b
	685	[2747]	SELF     	R24 R24 K112 ; R25 := R24; R24 := R24[0x42b04007]
	686	[2747]	LOADK    	R26 K117 ; R26 := "/Lotus/Language/Suits/InfestationAdaptation"
	687	[2747]	OP_LOADBOOL	R27 0 0 ; R27 := false
	688	[2747]	CALL     	R24 4 0 ; R24,... := R24(R25,R26,R27)
	689	[2747]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	690	[2747]	SETTABLE 	R22 K109 R23 ; R22["mLabel"] := R23
	691	[2747]	JMP      	814 ; PC := 814
	692	[2751]	SELF     	R22 R21 K98 ; R23 := R21; R22 := R21[0xf2deaf69]
	693	[2751]	GETGLOBAL	R24 K118 ; R24 := 0x6dcacb87
	694	[2751]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	695	[2751]	TEST     	R22 0 ; if not R22 then PC := 761
	696	[2751]	JMP      	761 ; PC := 761
	697	[2752]	LOADK    	R22 := 0.000000
	698	[2753]	LOADK    	R23 := 0.000000
	699	[2754]	GETGLOBAL	R24 K12 ; R24 := 0x7b998233
	700	[2754]	GETGLOBAL	R25 K71 ; R25 := _T
	701	[2754]	GETTABLE 	R25 R25 K119 ; R25 := R25["KHORA_CurrentMode"]
	702	[2754]	CALL     	R24 2 2 ; R24 := R24(R25)
	703	[2754]	TEST     	R24 1 ; if R24 then PC := 724
	704	[2754]	JMP      	724 ; PC := 724
	705	[2754]	GETGLOBAL	R24 K12 ; R24 := 0x7b998233
	706	[2754]	GETGLOBAL	R25 K71 ; R25 := _T
	707	[2754]	GETTABLE 	R25 R25 K119 ; R25 := R25["KHORA_CurrentMode"]
	708	[2754]	SELF     	R26 R11 K120 ; R27 := R11; R26 := R11[0x388577d5]
	709	[2754]	CALL     	R26 2 2 ; R26 := R26(R27)
	710	[2754]	GETTABLE 	R25 R25 R26 ; R25 := R25[R26]
	711	[2754]	CALL     	R24 2 2 ; R24 := R24(R25)
	712	[2754]	TEST     	R24 1 ; if R24 then PC := 724
	713	[2754]	JMP      	724 ; PC := 724
	714	[2755]	GETGLOBAL	R24 K71 ; R24 := _T
	715	[2755]	GETTABLE 	R24 R24 K119 ; R24 := R24["KHORA_CurrentMode"]
	716	[2755]	SELF     	R25 R11 K120 ; R26 := R11; R25 := R11[0x388577d5]
	717	[2755]	CALL     	R25 2 2 ; R25 := R25(R26)
	718	[2755]	GETTABLE 	R22 R24 R25 ; R22 := R24[R25]
	719	[2756]	GETGLOBAL	R24 K71 ; R24 := _T
	720	[2756]	GETTABLE 	R24 R24 K121 ; R24 := R24[0xb1b8ab73]
	721	[2756]	MOVE     	R25 R21 ; R25 := R21
	722	[2756]	CALL     	R24 2 2 ; R24 := R24(R25)
	723	[2756]	MOVE     	R23 R24 ; R23 := R24
	724	[2759]	LT       	0 K29 R23 ; if 0.000000 >= R23 then PC := 740
	725	[2759]	JMP      	740 ; PC := 740
	726	[2760]	GETGLOBAL	R24 K50 ; R24 := mButtons
	727	[2760]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	728	[2760]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	729	[2760]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	730	[2760]	GETGLOBAL	R25 K110 ; R25 := 0x7f5022cf
	731	[2760]	GETTABLE 	R25 R25 K111 ; R25 := R25[0x3f3e4d12]
	732	[2760]	GETGLOBAL	R26 K8 ; R26 := 0xae91e43b
	733	[2760]	SELF     	R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
	734	[2760]	LOADK    	R28 K122 ; R28 := "/Lotus/Language/Suits/KhoraKavatModeNone"
	735	[2760]	OP_LOADBOOL	R29 1 0 ; R29 := true
	736	[2760]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	737	[2760]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	738	[2760]	SETTABLE 	R24 K109 R25 ; R24["mLabel"] := R25
	739	[2760]	JMP      	755 ; PC := 755
	740	[2762]	GETGLOBAL	R24 K50 ; R24 := mButtons
	741	[2762]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	742	[2762]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	743	[2762]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	744	[2762]	GETGLOBAL	R25 K110 ; R25 := 0x7f5022cf
	745	[2762]	GETTABLE 	R25 R25 K111 ; R25 := R25[0x3f3e4d12]
	746	[2762]	GETGLOBAL	R26 K8 ; R26 := 0xae91e43b
	747	[2762]	SELF     	R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
	748	[2762]	LOADK    	R28 K123 ; R28 := "/Lotus/Language/Suits/KhoraKavatMode"
	749	[2762]	MOVE     	R29 R22 ; R29 := R22
	750	[2762]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	751	[2762]	OP_LOADBOOL	R29 1 0 ; R29 := true
	752	[2762]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	753	[2762]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	754	[2762]	SETTABLE 	R24 K109 R25 ; R24["mLabel"] := R25
	755	[2765]	GETGLOBAL	R24 K50 ; R24 := mButtons
	756	[2765]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	757	[2765]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	758	[2765]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	759	[2765]	SETTABLE 	R24 K52 K108 ; R24["mVisible"] := true
	760	[2765]	JMP      	814 ; PC := 814
	761	[2766]	SELF     	R24 R21 K98 ; R25 := R21; R24 := R21[0xf2deaf69]
	762	[2766]	GETGLOBAL	R26 K124 ; R26 := 0x2ccd2c30
	763	[2766]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	764	[2766]	TEST     	R24 0 ; if not R24 then PC := 785
	765	[2766]	JMP      	785 ; PC := 785
	766	[2767]	GETGLOBAL	R24 K50 ; R24 := mButtons
	767	[2767]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	768	[2767]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	769	[2767]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	770	[2767]	SETTABLE 	R24 K52 K108 ; R24["mVisible"] := true
	771	[2768]	GETGLOBAL	R24 K50 ; R24 := mButtons
	772	[2768]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	773	[2768]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	774	[2768]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	775	[2768]	GETGLOBAL	R25 K110 ; R25 := 0x7f5022cf
	776	[2768]	GETTABLE 	R25 R25 K111 ; R25 := R25[0x3f3e4d12]
	777	[2768]	GETGLOBAL	R26 K8 ; R26 := 0xae91e43b
	778	[2768]	SELF     	R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
	779	[2768]	LOADK    	R28 K125 ; R28 := "/Lotus/Language/Suits/RunnerRedlineAbilityName"
	780	[2768]	OP_LOADBOOL	R29 0 0 ; R29 := false
	781	[2768]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	782	[2768]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	783	[2768]	SETTABLE 	R24 K109 R25 ; R24["mLabel"] := R25
	784	[2768]	JMP      	814 ; PC := 814
	785	[2769]	SELF     	R24 R21 K98 ; R25 := R21; R24 := R21[0xf2deaf69]
	786	[2769]	GETGLOBAL	R26 K126 ; R26 := 0x969b8384
	787	[2769]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	788	[2769]	TEST     	R24 0 ; if not R24 then PC := 809
	789	[2769]	JMP      	809 ; PC := 809
	790	[2770]	GETGLOBAL	R24 K50 ; R24 := mButtons
	791	[2770]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	792	[2770]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	793	[2770]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	794	[2770]	SETTABLE 	R24 K52 K108 ; R24["mVisible"] := true
	795	[2771]	GETGLOBAL	R24 K50 ; R24 := mButtons
	796	[2771]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	797	[2771]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	798	[2771]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	799	[2771]	GETGLOBAL	R25 K110 ; R25 := 0x7f5022cf
	800	[2771]	GETTABLE 	R25 R25 K111 ; R25 := R25[0x3f3e4d12]
	801	[2771]	GETGLOBAL	R26 K8 ; R26 := 0xae91e43b
	802	[2771]	SELF     	R26 R26 K112 ; R27 := R26; R26 := R26[0x42b04007]
	803	[2771]	LOADK    	R28 K127 ; R28 := "/Lotus/Language/Suits/BrokenFrameMode_Broken"
	804	[2771]	OP_LOADBOOL	R29 0 0 ; R29 := false
	805	[2771]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	806	[2771]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	807	[2771]	SETTABLE 	R24 K109 R25 ; R24["mLabel"] := R25
	808	[2771]	JMP      	814 ; PC := 814
	809	[2773]	GETGLOBAL	R24 K50 ; R24 := mButtons
	810	[2773]	GETGLOBAL	R25 K58 ; R25 := mButtonIndices
	811	[2773]	GETTABLE 	R25 R25 K84 ; R25 := R25["SuitAppearance"]
	812	[2773]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	813	[2773]	SETTABLE 	R24 K52 K53 ; R24["mVisible"] := false
	814	[2779]	LOADK    	R24 := 1.000000
	815	[2779]	LOADK    	R25 := 4.000000
	816	[2779]	LOADK    	R26 := 1.000000
	817	[2779]	FORPREP  	R24 826 ; R24 -= R26; PC := 826
	818	[2780]	GETGLOBAL	R28 K8 ; R28 := 0xae91e43b
	819	[2780]	SELF     	R28 R28 K18 ; R29 := R28; R28 := R28[0xaade900e]
	820	[2780]	LOADK    	R30 K128 ; R30 := "Ability"
	821	[2780]	MOVE     	R31 R27 ; R31 := R27
	822	[2780]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	823	[2780]	LOADK    	R31 := 11.000000
	824	[2780]	OP_LOADBOOL	R32 0 0 ; R32 := false
	825	[2780]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	826	[2779]	FORLOOP  	R24 818 ; R24 += R26; if R24 <= R25 then begin PC := 818; R27 := R24 end
	827	[2781]	JMP      	1018 ; PC := 1018
	828	[2783]	GETGLOBAL	R28 K25 ; R28 := mSelected
	829	[2783]	SETTABLE 	R28 K63 K60 ; R28["Cosmetic"] := nil
	830	[2784]	GETUPVAL 	R28 U14 ; R28 := U14
	831	[2784]	CALL     	R28 1 1 ; R28()
	832	[2786]	GETGLOBAL	R28 K71 ; R28 := _T
	833	[2786]	GETTABLE 	R28 R28 K72 ; R28 := R28["MenuSuitAvatar"]
	834	[2787]	GETGLOBAL	R29 K12 ; R29 := 0x7b998233
	835	[2787]	MOVE     	R30 R28 ; R30 := R28
	836	[2787]	CALL     	R29 2 2 ; R29 := R29(R30)
	837	[2787]	TEST     	R29 1 ; if R29 then PC := 1018
	838	[2787]	JMP      	1018 ; PC := 1018
	839	[2788]	SELF     	R29 R28 K91 ; R30 := R28; R29 := R28[0x2e9b92e3]
	840	[2788]	LOADK    	R31 := 0.000000
	841	[2788]	CALL     	R29 3 1 ; R29(R30,R31)
	842	[2790]	GETGLOBAL	R29 K12 ; R29 := 0x7b998233
	843	[2790]	GETUPVAL 	R30 U8 ; R30 := U8
	844	[2790]	CALL     	R29 2 2 ; R29 := R29(R30)
	845	[2790]	TEST     	R29 1 ; if R29 then PC := 870
	846	[2790]	JMP      	870 ; PC := 870
	847	[2791]	SELF     	R29 R28 K76 ; R30 := R28; R29 := R28[0xde321e6f]
	848	[2791]	CALL     	R29 2 2 ; R29 := R29(R30)
	849	[2791]	SELF     	R29 R29 K106 ; R30 := R29; R29 := R29[0x0b5ec5b5]
	850	[2791]	OP_LOADBOOL	R31 1 0 ; R31 := true
	851	[2791]	CALL     	R29 3 1 ; R29(R30,R31)
	852	[2792]	SELF     	R29 R28 K76 ; R30 := R28; R29 := R28[0xde321e6f]
	853	[2792]	CALL     	R29 2 2 ; R29 := R29(R30)
	854	[2792]	SELF     	R29 R29 K129 ; R30 := R29; R29 := R29[0xc69087f6]
	855	[2792]	GETUPVAL 	R31 U8 ; R31 := U8
	856	[2792]	LOADK    	R32 := 0.000000
	857	[2792]	LOADK    	R33 := 2.000000
	858	[2792]	CALL     	R29 5 1 ; R29(R30,R31,R32,R33)
	859	[2793]	GETUPVAL 	R29 U8 ; R29 := U8
	860	[2793]	EQ       	0 R29 K130 ; if R29 ~= 5.000000 then PC := 868
	861	[2793]	JMP      	868 ; PC := 868
	862	[2794]	GETUPVAL 	R29 U15 ; R29 := U15
	863	[2794]	MOVE     	R30 R28 ; R30 := R28
	864	[2794]	GETGLOBAL	R31 K25 ; R31 := mSelected
	865	[2794]	GETTABLE 	R31 R31 K26 ; R31 := R31["Element"]
	866	[2794]	GETTABLE 	R31 R31 K27 ; R31 := R31["LoadOutType"]
	867	[2794]	CALL     	R29 3 1 ; R29(R30,R31)
	868	[2797]	LOADNIL  	R29 R29 ; R29 := nil
	869	[2797]	SETUPVAL 	R29 U8 ; U8 := R29
	870	[2799]	SELF     	R29 R28 K76 ; R30 := R28; R29 := R28[0xde321e6f]
	871	[2799]	CALL     	R29 2 2 ; R29 := R29(R30)
	872	[2799]	SELF     	R29 R29 K96 ; R30 := R29; R29 := R29[0xf7d48ee0]
	873	[2799]	CALL     	R29 2 2 ; R29 := R29(R30)
	874	[2800]	GETGLOBAL	R30 K12 ; R30 := 0x7b998233
	875	[2800]	MOVE     	R31 R29 ; R31 := R29
	876	[2800]	CALL     	R30 2 2 ; R30 := R30(R31)
	877	[2800]	TEST     	R30 1 ; if R30 then PC := 1018
	878	[2800]	JMP      	1018 ; PC := 1018
	879	[2801]	SELF     	R30 R29 K98 ; R31 := R29; R30 := R29[0xf2deaf69]
	880	[2801]	GETGLOBAL	R32 K107 ; R32 := 0xb5afcb89
	881	[2801]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	882	[2801]	TEST     	R30 0 ; if not R30 then PC := 896
	883	[2801]	JMP      	896 ; PC := 896
	884	[2802]	GETGLOBAL	R30 K12 ; R30 := 0x7b998233
	885	[2802]	GETGLOBAL	R31 K71 ; R31 := _T
	886	[2802]	GETTABLE 	R31 R31 K131 ; R31 := R31["DRAGON_EnablePelt"]
	887	[2802]	CALL     	R30 2 2 ; R30 := R30(R31)
	888	[2802]	TEST     	R30 1 ; if R30 then PC := 1018
	889	[2802]	JMP      	1018 ; PC := 1018
	890	[2803]	GETGLOBAL	R30 K71 ; R30 := _T
	891	[2803]	GETTABLE 	R30 R30 K132 ; R30 := R30[0xc50e8842]
	892	[2803]	MOVE     	R31 R28 ; R31 := R28
	893	[2803]	OP_LOADBOOL	R32 1 0 ; R32 := true
	894	[2803]	CALL     	R30 3 1 ; R30(R31,R32)
	895	[2804]	JMP      	1018 ; PC := 1018
	896	[2805]	SELF     	R30 R29 K98 ; R31 := R29; R30 := R29[0xf2deaf69]
	897	[2805]	GETGLOBAL	R32 K114 ; R32 := 0xe3ae0932
	898	[2805]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	899	[2805]	TEST     	R30 0 ; if not R30 then PC := 918
	900	[2805]	JMP      	918 ; PC := 918
	901	[2806]	GETGLOBAL	R30 K133 ; R30 := 0x2d0fad09
	902	[2806]	LOADK    	R31 K134 ; R31 := "Lotus.Scripts.Effects.Polarity"
	903	[2806]	CALL     	R30 2 2 ; R30 := R30(R31)
	904	[2807]	GETTABLE 	R31 R30 K135 ; R31 := R30[0x224c9cb2]
	905	[2807]	MOVE     	R32 R29 ; R32 := R29
	906	[2807]	CALL     	R31 2 2 ; R31 := R31(R32)
	907	[2807]	TEST     	R31 1 ; if R31 then PC := 914
	908	[2807]	JMP      	914 ; PC := 914
	909	[2807]	GETTABLE 	R31 R30 K136 ; R31 := R30[0x7d2b2507]
	910	[2807]	MOVE     	R32 R29 ; R32 := R29
	911	[2807]	CALL     	R31 2 2 ; R31 := R31(R32)
	912	[2807]	TEST     	R31 0 ; if not R31 then PC := 1018
	913	[2807]	JMP      	1018 ; PC := 1018
	914	[2808]	GETTABLE 	R31 R30 K137 ; R31 := R30[0x09118c8b]
	915	[2808]	MOVE     	R32 R29 ; R32 := R29
	916	[2808]	CALL     	R31 2 1 ; R31(R32)
	917	[2809]	JMP      	1018 ; PC := 1018
	918	[2810]	SELF     	R31 R29 K98 ; R32 := R29; R31 := R29[0xf2deaf69]
	919	[2810]	GETGLOBAL	R33 K116 ; R33 := 0x68564c44
	920	[2810]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	921	[2810]	TEST     	R31 0 ; if not R31 then PC := 946
	922	[2810]	JMP      	946 ; PC := 946
	923	[2811]	GETGLOBAL	R31 K12 ; R31 := 0x7b998233
	924	[2811]	GETGLOBAL	R32 K71 ; R32 := _T
	925	[2811]	GETTABLE 	R32 R32 K138 ; R32 := R32["INFESTED_DecoState"]
	926	[2811]	CALL     	R31 2 2 ; R31 := R31(R32)
	927	[2811]	TEST     	R31 1 ; if R31 then PC := 1018
	928	[2811]	JMP      	1018 ; PC := 1018
	929	[2811]	GETGLOBAL	R31 K12 ; R31 := 0x7b998233
	930	[2811]	GETGLOBAL	R32 K139 ; R32 := 0xbe190284
	931	[2811]	CALL     	R31 2 2 ; R31 := R31(R32)
	932	[2811]	TEST     	R31 1 ; if R31 then PC := 940
	933	[2811]	JMP      	940 ; PC := 940
	934	[2811]	GETGLOBAL	R31 K139 ; R31 := 0xbe190284
	935	[2811]	SELF     	R31 R31 K98 ; R32 := R31; R31 := R31[0xf2deaf69]
	936	[2811]	GETGLOBAL	R33 K140 ; R33 := gLotusPhotoBoothGameRulesType
	937	[2811]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	938	[2811]	TEST     	R31 1 ; if R31 then PC := 1018
	939	[2811]	JMP      	1018 ; PC := 1018
	940	[2813]	GETGLOBAL	R31 K71 ; R31 := _T
	941	[2813]	GETTABLE 	R31 R31 K141 ; R31 := R31[0x8095dfb5]
	942	[2813]	MOVE     	R32 R28 ; R32 := R28
	943	[2813]	OP_LOADBOOL	R33 0 0 ; R33 := false
	944	[2813]	CALL     	R31 3 1 ; R31(R32,R33)
	945	[2814]	JMP      	1018 ; PC := 1018
	946	[2815]	SELF     	R31 R29 K98 ; R32 := R29; R31 := R29[0xf2deaf69]
	947	[2815]	GETGLOBAL	R33 K118 ; R33 := 0x6dcacb87
	948	[2815]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	949	[2815]	TEST     	R31 0 ; if not R31 then PC := 977
	950	[2815]	JMP      	977 ; PC := 977
	951	[2816]	GETGLOBAL	R31 K12 ; R31 := 0x7b998233
	952	[2816]	GETGLOBAL	R32 K71 ; R32 := _T
	953	[2816]	GETTABLE 	R32 R32 K142 ; R32 := R32["KHORA_SetMode"]
	954	[2816]	CALL     	R31 2 2 ; R31 := R31(R32)
	955	[2816]	TEST     	R31 1 ; if R31 then PC := 1018
	956	[2816]	JMP      	1018 ; PC := 1018
	957	[2817]	GETGLOBAL	R31 K71 ; R31 := _T
	958	[2817]	GETTABLE 	R31 R31 K143 ; R31 := R31[0xea9ef043]
	959	[2817]	MOVE     	R32 R29 ; R32 := R29
	960	[2817]	LOADK    	R33 := 0.000000
	961	[2817]	CALL     	R31 3 1 ; R31(R32,R33)
	962	[2818]	GETGLOBAL	R31 K71 ; R31 := _T
	963	[2818]	GETTABLE 	R31 R31 K144 ; R31 := R31[0x9d4f5aaf]
	964	[2818]	MOVE     	R32 R29 ; R32 := R29
	965	[2818]	LOADK    	R33 := 1.000000
	966	[2818]	CALL     	R31 3 1 ; R31(R32,R33)
	967	[2819]	GETGLOBAL	R31 K71 ; R31 := _T
	968	[2819]	GETTABLE 	R31 R31 K145 ; R31 := R31["KHORA_CurrentDissolve"]
	969	[2819]	SELF     	R32 R28 K120 ; R33 := R28; R32 := R28[0x388577d5]
	970	[2819]	CALL     	R32 2 2 ; R32 := R32(R33)
	971	[2819]	GETGLOBAL	R33 K71 ; R33 := _T
	972	[2819]	GETTABLE 	R33 R33 K121 ; R33 := R33[0xb1b8ab73]
	973	[2819]	MOVE     	R34 R29 ; R34 := R29
	974	[2819]	CALL     	R33 2 2 ; R33 := R33(R34)
	975	[2819]	SETTABLE 	R31 R32 R33 ; R31[R32] := R33
	976	[2820]	JMP      	1018 ; PC := 1018
	977	[2821]	SELF     	R31 R29 K98 ; R32 := R29; R31 := R29[0xf2deaf69]
	978	[2821]	GETGLOBAL	R33 K124 ; R33 := 0x2ccd2c30
	979	[2821]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	980	[2821]	TEST     	R31 0 ; if not R31 then PC := 1003
	981	[2821]	JMP      	1003 ; PC := 1003
	982	[2822]	GETGLOBAL	R31 K71 ; R31 := _T
	983	[2822]	GETTABLE 	R31 R31 K146 ; R31 := R31["RUNNER_SetDecoState"]
	984	[2822]	EQ       	1 R31 K60 ; if R31 == nil then PC := 1018
	985	[2822]	JMP      	1018 ; PC := 1018
	986	[2822]	GETGLOBAL	R31 K12 ; R31 := 0x7b998233
	987	[2822]	GETGLOBAL	R32 K139 ; R32 := 0xbe190284
	988	[2822]	CALL     	R31 2 2 ; R31 := R31(R32)
	989	[2822]	TEST     	R31 1 ; if R31 then PC := 997
	990	[2822]	JMP      	997 ; PC := 997
	991	[2822]	GETGLOBAL	R31 K139 ; R31 := 0xbe190284
	992	[2822]	SELF     	R31 R31 K98 ; R32 := R31; R31 := R31[0xf2deaf69]
	993	[2822]	GETGLOBAL	R33 K140 ; R33 := gLotusPhotoBoothGameRulesType
	994	[2822]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	995	[2822]	TEST     	R31 1 ; if R31 then PC := 1018
	996	[2822]	JMP      	1018 ; PC := 1018
	997	[2824]	GETGLOBAL	R31 K71 ; R31 := _T
	998	[2824]	GETTABLE 	R31 R31 K147 ; R31 := R31[0x3ef5c227]
	999	[2824]	MOVE     	R32 R28 ; R32 := R28
	1000	[2824]	OP_LOADBOOL	R33 0 0 ; R33 := false
	1001	[2824]	CALL     	R31 3 1 ; R31(R32,R33)
	1002	[2825]	JMP      	1018 ; PC := 1018
	1003	[2826]	SELF     	R31 R29 K98 ; R32 := R29; R31 := R29[0xf2deaf69]
	1004	[2826]	GETGLOBAL	R33 K126 ; R33 := 0x969b8384
	1005	[2826]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	1006	[2826]	TEST     	R31 0 ; if not R31 then PC := 1018
	1007	[2826]	JMP      	1018 ; PC := 1018
	1008	[2827]	GETGLOBAL	R31 K71 ; R31 := _T
	1009	[2827]	GETTABLE 	R31 R31 K148 ; R31 := R31["BROKEN_SetDecoVisibility"]
	1010	[2827]	TEST     	R31 0 ; if not R31 then PC := 1018
	1011	[2827]	JMP      	1018 ; PC := 1018
	1012	[2828]	GETGLOBAL	R31 K71 ; R31 := _T
	1013	[2828]	GETTABLE 	R31 R31 K149 ; R31 := R31[0xf627ed0d]
	1014	[2828]	MOVE     	R32 R28 ; R32 := R28
	1015	[2828]	OP_LOADBOOL	R33 1 0 ; R33 := true
	1016	[2828]	LOADK    	R34 := 0.250000
	1017	[2828]	CALL     	R31 4 1 ; R31(R32,R33,R34)
	1018	[2835]	GETUPVAL 	R31 U2 ; R31 := U2
	1019	[2835]	GETTABLE 	R31 R31 K11 ; R31 := R31["SELECTING_PART"]
	1020	[2835]	EQ       	1 R0 R31 ; if R0 == R31 then PC := 1026
	1021	[2835]	JMP      	1026 ; PC := 1026
	1022	[2835]	GETUPVAL 	R31 U2 ; R31 := U2
	1023	[2835]	GETTABLE 	R31 R31 K17 ; R31 := R31["BROWSING_WAY_TREE"]
	1024	[2835]	EQ       	0 R0 R31 ; if R0 ~= R31 then PC := 1055
	1025	[2835]	JMP      	1055 ; PC := 1055
	1026	[2837]	OP_LOADBOOL	R31 0 0 ; R31 := false
	1027	[2837]	SETGLOBALHASH	R31 K150 ; mSeenRandomizeConfirm := R31
	1028	[2839]	GETGLOBAL	R31 K87 ; R31 := mLists
	1029	[2839]	GETTABLE 	R31 R31 K88 ; R31 := R31["mCosmeticsList"]
	1030	[2839]	EQ       	1 R31 K60 ; if R31 == nil then PC := 1041
	1031	[2839]	JMP      	1041 ; PC := 1041
	1032	[2841]	GETGLOBAL	R31 K151 ; R31 := 0xcfc01047
	1033	[2841]	GETGLOBAL	R32 K87 ; R32 := mLists
	1034	[2841]	GETTABLE 	R32 R32 K88 ; R32 := R32["mCosmeticsList"]
	1035	[2841]	GETTABLE 	R32 R32 K152 ; R32 := R32["mLevels"]
	1036	[2841]	CALL     	R31 2 4 ; R31,R32,R33 := R31(R32)
	1037	[2841]	JMP      	1039 ; PC := 1039
	1038	[2842]	SETTABLE 	R35 K153 K60 ; R35["mSavedIndex"] := nil
	1039	[2841]	TFORLOOP 	R31 2 ; R34,R35 := R31(R32,R33); if R34 ~= nil then begin PC = 1038; R33 := R34 end
	1040	[2842]	JMP      	1038 ; PC := 1038
	1041	[2845]	LOADK    	R36 K154 ; R36 := "/Lotus/Language/Menu/Exit"
	1042	[2846]	GETUPVAL 	R37 U7 ; R37 := U7
	1043	[2846]	GETTABLE 	R37 R37 K79 ; R37 := R37["Current"]
	1044	[2846]	EQ       	0 R37 K51 ; if R37 ~= 2.000000 then PC := 1051
	1045	[2846]	JMP      	1051 ; PC := 1051
	1046	[2846]	GETGLOBAL	R37 K71 ; R37 := _T
	1047	[2846]	GETTABLE 	R37 R37 K155 ; R37 := R37["ArsenalPvPOnlyReturnConsole"]
	1048	[2846]	EQ       	0 R37 K60 ; if R37 ~= nil then PC := 1051
	1049	[2846]	JMP      	1051 ; PC := 1051
	1050	[2847]	LOADK    	R36 K156 ; R36 := "/Lotus/Language/Menu/Loadout_PVE"
	1051	[2849]	GETGLOBAL	R37 K50 ; R37 := mButtons
	1052	[2849]	GETTABLE 	R37 R37 K157 ; R37 := R37[1.000000]
	1053	[2849]	SETTABLE 	R37 K109 R36 ; R37["mLabel"] := R36
	1054	[2849]	JMP      	1058 ; PC := 1058
	1055	[2851]	GETGLOBAL	R37 K50 ; R37 := mButtons
	1056	[2851]	GETTABLE 	R37 R37 K157 ; R37 := R37[1.000000]
	1057	[2851]	SETTABLE 	R37 K109 K158 ; R37["mLabel"] := "/Lotus/Language/Menu/Global_Back"
	1058	[2854]	GETUPVAL 	R37 U2 ; R37 := U2
	1059	[2854]	GETTABLE 	R37 R37 K24 ; R37 := R37["CUSTOMIZING_SKINS"]
	1060	[2854]	EQ       	0 R0 R37 ; if R0 ~= R37 then PC := 1075
	1061	[2854]	JMP      	1075 ; PC := 1075
	1062	[2854]	GETGLOBAL	R37 K87 ; R37 := mLists
	1063	[2854]	GETTABLE 	R37 R37 K88 ; R37 := R37["mCosmeticsList"]
	1064	[2854]	EQ       	1 R37 K60 ; if R37 == nil then PC := 1075
	1065	[2854]	JMP      	1075 ; PC := 1075
	1066	[2854]	GETGLOBAL	R37 K87 ; R37 := mLists
	1067	[2854]	GETTABLE 	R37 R37 K88 ; R37 := R37["mCosmeticsList"]
	1068	[2854]	GETTABLE 	R37 R37 K159 ; R37 := R37["mCurrLevel"]
	1069	[2854]	EQ       	0 R37 K157 ; if R37 ~= 1.000000 then PC := 1075
	1070	[2854]	JMP      	1075 ; PC := 1075
	1071	[2855]	GETGLOBAL	R37 K50 ; R37 := mButtons
	1072	[2855]	GETTABLE 	R37 R37 K130 ; R37 := R37[5.000000]
	1073	[2855]	SETTABLE 	R37 K52 K108 ; R37["mVisible"] := true
	1074	[2855]	JMP      	1078 ; PC := 1078
	1075	[2857]	GETGLOBAL	R37 K50 ; R37 := mButtons
	1076	[2857]	GETTABLE 	R37 R37 K130 ; R37 := R37[5.000000]
	1077	[2857]	SETTABLE 	R37 K52 K53 ; R37["mVisible"] := false
	1078	[2860]	GETGLOBAL	R37 K50 ; R37 := mButtons
	1079	[2860]	GETTABLE 	R37 R37 K160 ; R37 := R37[3.000000]
	1080	[2860]	SETTABLE 	R37 K52 K53 ; R37["mVisible"] := false
	1081	[2861]	GETUPVAL 	R37 U16 ; R37 := U16
	1082	[2861]	CALL     	R37 1 1 ; R37()
	1083	[2863]	GETGLOBAL	R37 K161 ; R37 := 0x25312c9b
	1084	[2863]	GETGLOBAL	R38 K8 ; R38 := 0xae91e43b
	1085	[2863]	LOADK    	R39 K162 ; R39 := "ScrollBar"
	1086	[2863]	LOADK    	R40 := 0.000000
	1087	[2863]	NEWTABLE 	R41 1 0 ; R41 := {}
	1088	[2863]	LOADK    	R42 := 10.000000
	1089	[2863]	SETLIST  	R41 1 1 ; R41[(1-1)*FPF+i] := R(41+i), 1 <= i <= 1
	1090	[2863]	NEWTABLE 	R42 0 0 ; R42 := {}
	1091	[2863]	GETUPVAL 	R43 U1 ; R43 := U1
	1092	[2863]	GETTABLE 	R43 R43 K33 ; R43 := R43[0x06d055f9]
	1093	[2863]	GETUPVAL 	R44 U2 ; R44 := U2
	1094	[2863]	GETTABLE 	R44 R44 K5 ; R44 := R44["SWAPPING_ITEM"]
	1095	[2863]	EQ       	1 R0 R44 ; if R0 == R44 then PC := 1106
	1096	[2863]	JMP      	1106 ; PC := 1106
	1097	[2863]	GETUPVAL 	R44 U2 ; R44 := U2
	1098	[2863]	GETTABLE 	R44 R44 K6 ; R44 := R44["SELECTING_SKINS"]
	1099	[2863]	EQ       	1 R0 R44 ; if R0 == R44 then PC := 1106
	1100	[2863]	JMP      	1106 ; PC := 1106
	1101	[2863]	GETUPVAL 	R44 U2 ; R44 := U2
	1102	[2863]	GETTABLE 	R44 R44 K7 ; R44 := R44["SELECTING_CONSUMABLES"]
	1103	[2863]	EQ       	1 R0 R44 ; if R0 == R44 then PC := 1106
	1104	[2863]	JMP      	1106 ; PC := 1106
	1105	[2863]	OP_LOADBOOL	R44 0 1 ; R44 := false; PC := 1106
	1106	[2863]	OP_LOADBOOL	R44 1 0 ; R44 := true
	1107	[2863]	LOADK    	R45 := 100.000000
	1108	[2863]	LOADK    	R46 := 0.000000
	1109	[2863]	CALL     	R43 4 0 ; R43,... := R43(R44,R45,R46)
	1110	[2863]	SETLIST  	R42 0 1 ; R42[(1-1)*FPF+i] := R(42+i), 1 <= i <= 0
	1111	[2863]	LOADK    	R43 K164 ; R43 := 0.200000
	1112	[2863]	CALL     	R37 7 1 ; R37(R38,R39,R40,R41,R42,R43)
	1113	[2865]	GETGLOBAL	R37 K25 ; R37 := mSelected
	1114	[2865]	SETTABLE 	R37 K57 K60 ; R37["Item"] := nil
	1115	[2867]	GETGLOBAL	R37 K8 ; R37 := 0xae91e43b
	1116	[2867]	SELF     	R37 R37 K18 ; R38 := R37; R37 := R37[0xaade900e]
	1117	[2867]	LOADK    	R39 K165 ; R39 := "ItemGridBG"
	1118	[2867]	LOADK    	R40 := 11.000000
	1119	[2867]	GETUPVAL 	R41 U1 ; R41 := U1
	1120	[2867]	GETTABLE 	R41 R41 K33 ; R41 := R41[0x06d055f9]
	1121	[2867]	GETUPVAL 	R42 U2 ; R42 := U2
	1122	[2867]	GETTABLE 	R42 R42 K5 ; R42 := R42["SWAPPING_ITEM"]
	1123	[2867]	EQ       	1 R0 R42 ; if R0 == R42 then PC := 1126
	1124	[2867]	JMP      	1126 ; PC := 1126
	1125	[2867]	OP_LOADBOOL	R42 0 1 ; R42 := false; PC := 1126
	1126	[2867]	OP_LOADBOOL	R42 1 0 ; R42 := true
	1127	[2867]	OP_LOADBOOL	R43 1 0 ; R43 := true
	1128	[2867]	OP_LOADBOOL	R44 0 0 ; R44 := false
	1129	[2867]	CALL     	R41 4 0 ; R41,... := R41(R42,R43,R44)
	1130	[2867]	CALL     	R37 0 1 ; R37(R38,...)
	1131	[2869]	GETUPVAL 	R37 U3 ; R37 := U3
	1132	[2869]	GETTABLE 	R37 R37 K166 ; R37 := R37[0x7d70c833]
	1133	[2869]	CALL     	R37 1 1 ; R37()
	1134	[2870]	GETUPVAL 	R37 U17 ; R37 := U17
	1135	[2870]	SELF     	R37 R37 K89 ; R38 := R37; R37 := R37[0xea061e98]
	1136	[2873]	CLOSURE  	R39 1 ; R39 := closure(Function #2)
	1137	[2873]	MOVE     	R0 R0 ; R0 := R0
	1138	[2873]	GETUPVAL 	R0 U2 ; R0 := U2
	1139	[2870]	CALL     	R37 3 1 ; R37(R38,R39)
	1140	[2875]	GETGLOBAL	R37 K8 ; R37 := 0xae91e43b
	1141	[2875]	SELF     	R37 R37 K18 ; R38 := R37; R37 := R37[0xaade900e]
	1142	[2875]	LOADK    	R39 K167 ; R39 := "MenuPanel.Bg"
	1143	[2875]	LOADK    	R40 := 11.000000
	1144	[2875]	TEST     	R1 1 ; if R1 then PC := 1168
	1145	[2875]	JMP      	1168 ; PC := 1168
	1146	[2875]	GETUPVAL 	R41 U2 ; R41 := U2
	1147	[2875]	GETTABLE 	R41 R41 K81 ; R41 := R41["BROWSING_CONSUMABLES"]
	1148	[2875]	EQ       	1 R0 R41 ; if R0 == R41 then PC := 1168
	1149	[2875]	JMP      	1168 ; PC := 1168
	1150	[2875]	GETUPVAL 	R41 U2 ; R41 := U2
	1151	[2875]	GETTABLE 	R41 R41 K24 ; R41 := R41["CUSTOMIZING_SKINS"]
	1152	[2875]	EQ       	0 R0 R41 ; if R0 ~= R41 then PC := 1169
	1153	[2875]	JMP      	1169 ; PC := 1169
	1154	[2875]	GETGLOBAL	R41 K12 ; R41 := 0x7b998233
	1155	[2875]	GETGLOBAL	R42 K87 ; R42 := mLists
	1156	[2875]	GETTABLE 	R42 R42 K88 ; R42 := R42["mCosmeticsList"]
	1157	[2875]	CALL     	R41 2 2 ; R41 := R41(R42)
	1158	[2875]	TEST     	R41 1 ; if R41 then PC := 1168
	1159	[2875]	JMP      	1168 ; PC := 1168
	1160	[2875]	GETGLOBAL	R41 K87 ; R41 := mLists
	1161	[2875]	GETTABLE 	R41 R41 K88 ; R41 := R41["mCosmeticsList"]
	1162	[2875]	GETTABLE 	R41 R41 K159 ; R41 := R41["mCurrLevel"]
	1163	[2875]	GETGLOBAL	R42 K87 ; R42 := mLists
	1164	[2875]	GETTABLE 	R42 R42 K88 ; R42 := R42["mCosmeticsList"]
	1165	[2875]	GETTABLE 	R42 R42 K168 ; R42 := R42["DEFAULT"]
	1166	[2875]	EQ       	1 R41 R42 ; if R41 == R42 then PC := 1169
	1167	[2875]	JMP      	1169 ; PC := 1169
	1168	[2875]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 1169
	1169	[2875]	OP_LOADBOOL	R41 1 0 ; R41 := true
	1170	[2875]	CALL     	R37 5 1 ; R37(R38,R39,R40,R41)
	1171	[2877]	GETUPVAL 	R37 U2 ; R37 := U2
	1172	[2877]	GETTABLE 	R37 R37 K5 ; R37 := R37["SWAPPING_ITEM"]
	1173	[2877]	EQ       	1 R0 R37 ; if R0 == R37 then PC := 1176
	1174	[2877]	JMP      	1176 ; PC := 1176
	1175	[2877]	OP_LOADBOOL	R37 0 1 ; R37 := false; PC := 1176
	1176	[2877]	OP_LOADBOOL	R37 1 0 ; R37 := true
	1177	[2878]	GETUPVAL 	R38 U18 ; R38 := U18
	1178	[2878]	SELF     	R38 R38 K169 ; R39 := R38; R38 := R38[0x368ad758]
	1179	[2878]	MOVE     	R40 R1 ; R40 := R1
	1180	[2878]	CALL     	R38 3 1 ; R38(R39,R40)
	1181	[2879]	GETGLOBAL	R38 K8 ; R38 := 0xae91e43b
	1182	[2879]	SELF     	R38 R38 K170 ; R39 := R38; R38 := R38[0x67bc869f]
	1183	[2879]	GETGLOBAL	R40 K54 ; R40 := mItemsGrid
	1184	[2879]	GETTABLE 	R40 R40 K171 ; R40 := R40["mSortClipName"]
	1185	[2879]	LOADK    	R41 := 10.000000
	1186	[2879]	GETUPVAL 	R42 U1 ; R42 := U1
	1187	[2879]	GETTABLE 	R42 R42 K33 ; R42 := R42[0x06d055f9]
	1188	[2879]	MOVE     	R43 R37 ; R43 := R37
	1189	[2879]	LOADK    	R44 := 100.000000
	1190	[2879]	LOADK    	R45 := 0.000000
	1191	[2879]	CALL     	R42 4 0 ; R42,... := R42(R43,R44,R45)
	1192	[2879]	CALL     	R38 0 1 ; R38(R39,...)
	1193	[2880]	GETGLOBAL	R38 K8 ; R38 := 0xae91e43b
	1194	[2880]	SELF     	R38 R38 K18 ; R39 := R38; R38 := R38[0xaade900e]
	1195	[2880]	GETGLOBAL	R40 K54 ; R40 := mItemsGrid
	1196	[2880]	GETTABLE 	R40 R40 K171 ; R40 := R40["mSortClipName"]
	1197	[2880]	LOADK    	R41 := 59.000000
	1198	[2880]	MOVE     	R42 R37 ; R42 := R37
	1199	[2880]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	1200	[2881]	GETGLOBAL	R38 K8 ; R38 := 0xae91e43b
	1201	[2881]	SELF     	R38 R38 K18 ; R39 := R38; R38 := R38[0xaade900e]
	1202	[2881]	LOADK    	R40 K172 ; R40 := "SearchSortBg"
	1203	[2881]	LOADK    	R41 := 11.000000
	1204	[2881]	MOVE     	R42 R1 ; R42 := R1
	1205	[2881]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	1206	[2882]	TEST     	R1 0 ; if not R1 then PC := 1219
	1207	[2882]	JMP      	1219 ; PC := 1219
	1208	[2883]	GETGLOBAL	R38 K8 ; R38 := 0xae91e43b
	1209	[2883]	SELF     	R38 R38 K170 ; R39 := R38; R38 := R38[0x67bc869f]
	1210	[2883]	LOADK    	R40 K172 ; R40 := "SearchSortBg"
	1211	[2883]	LOADK    	R41 := 12.000000
	1212	[2883]	GETUPVAL 	R42 U1 ; R42 := U1
	1213	[2883]	GETTABLE 	R42 R42 K33 ; R42 := R42[0x06d055f9]
	1214	[2883]	MOVE     	R43 R37 ; R43 := R37
	1215	[2883]	LOADK    	R44 := 825.000000
	1216	[2883]	LOADK    	R45 := 380.000000
	1217	[2883]	CALL     	R42 4 0 ; R42,... := R42(R43,R44,R45)
	1218	[2883]	CALL     	R38 0 1 ; R38(R39,...)
	1219	[2886]	LOADNIL  	R38 R38 ; R38 := nil
	1220	[2887]	GETUPVAL 	R39 U2 ; R39 := U2
	1221	[2887]	GETTABLE 	R39 R39 K5 ; R39 := R39["SWAPPING_ITEM"]
	1222	[2887]	EQ       	0 R0 R39 ; if R0 ~= R39 then PC := 1226
	1223	[2887]	JMP      	1226 ; PC := 1226
	1224	[2888]	LOADK    	R38 K173 ; R38 := "WEAPON"
	1225	[2888]	JMP      	1279 ; PC := 1279
	1226	[2889]	GETUPVAL 	R39 U2 ; R39 := U2
	1227	[2889]	GETTABLE 	R39 R39 K6 ; R39 := R39["SELECTING_SKINS"]
	1228	[2889]	EQ       	0 R0 R39 ; if R0 ~= R39 then PC := 1232
	1229	[2889]	JMP      	1232 ; PC := 1232
	1230	[2890]	LOADK    	R38 K174 ; R38 := "SKINS"
	1231	[2890]	JMP      	1279 ; PC := 1279
	1232	[2891]	GETUPVAL 	R39 U2 ; R39 := U2
	1233	[2891]	GETTABLE 	R39 R39 K24 ; R39 := R39["CUSTOMIZING_SKINS"]
	1234	[2891]	EQ       	0 R0 R39 ; if R0 ~= R39 then PC := 1248
	1235	[2891]	JMP      	1248 ; PC := 1248
	1236	[2892]	LOADK    	R38 K175 ; R38 := "APPEARANCE"
	1237	[2893]	GETUPVAL 	R39 U1 ; R39 := U1
	1238	[2893]	GETTABLE 	R39 R39 K2 ; R39 := R39[0x659d451f]
	1239	[2893]	GETGLOBAL	R40 K3 ; R40 := 0x0032441c
	1240	[2893]	GETTABLE 	R40 R40 K176 ; R40 := R40["UISound_ButtonSelect"]
	1241	[2893]	CALL     	R39 2 1 ; R39(R40)
	1242	[2894]	GETUPVAL 	R39 U1 ; R39 := U1
	1243	[2894]	GETTABLE 	R39 R39 K2 ; R39 := R39[0x659d451f]
	1244	[2894]	GETGLOBAL	R40 K3 ; R40 := 0x0032441c
	1245	[2894]	GETTABLE 	R40 R40 K177 ; R40 := R40["UISound_WindowOpen"]
	1246	[2894]	CALL     	R39 2 1 ; R39(R40)
	1247	[2894]	JMP      	1279 ; PC := 1279
	1248	[2895]	GETUPVAL 	R39 U2 ; R39 := U2
	1249	[2895]	GETTABLE 	R39 R39 K7 ; R39 := R39["SELECTING_CONSUMABLES"]
	1250	[2895]	EQ       	0 R0 R39 ; if R0 ~= R39 then PC := 1264
	1251	[2895]	JMP      	1264 ; PC := 1264
	1252	[2896]	LOADK    	R38 K178 ; R38 := "CONSUMABLES_SELECTION"
	1253	[2897]	GETUPVAL 	R39 U1 ; R39 := U1
	1254	[2897]	GETTABLE 	R39 R39 K2 ; R39 := R39[0x659d451f]
	1255	[2897]	GETGLOBAL	R40 K3 ; R40 := 0x0032441c
	1256	[2897]	GETTABLE 	R40 R40 K176 ; R40 := R40["UISound_ButtonSelect"]
	1257	[2897]	CALL     	R39 2 1 ; R39(R40)
	1258	[2898]	GETUPVAL 	R39 U1 ; R39 := U1
	1259	[2898]	GETTABLE 	R39 R39 K2 ; R39 := R39[0x659d451f]
	1260	[2898]	GETGLOBAL	R40 K3 ; R40 := 0x0032441c
	1261	[2898]	GETTABLE 	R40 R40 K177 ; R40 := R40["UISound_WindowOpen"]
	1262	[2898]	CALL     	R39 2 1 ; R39(R40)
	1263	[2898]	JMP      	1279 ; PC := 1279
	1264	[2899]	GETUPVAL 	R39 U2 ; R39 := U2
	1265	[2899]	GETTABLE 	R39 R39 K81 ; R39 := R39["BROWSING_CONSUMABLES"]
	1266	[2899]	EQ       	0 R0 R39 ; if R0 ~= R39 then PC := 1279
	1267	[2899]	JMP      	1279 ; PC := 1279
	1268	[2900]	LOADK    	R38 K179 ; R38 := "CONSUMABLES_BROWSE"
	1269	[2901]	GETUPVAL 	R39 U1 ; R39 := U1
	1270	[2901]	GETTABLE 	R39 R39 K2 ; R39 := R39[0x659d451f]
	1271	[2901]	GETGLOBAL	R40 K3 ; R40 := 0x0032441c
	1272	[2901]	GETTABLE 	R40 R40 K176 ; R40 := R40["UISound_ButtonSelect"]
	1273	[2901]	CALL     	R39 2 1 ; R39(R40)
	1274	[2902]	GETUPVAL 	R39 U1 ; R39 := U1
	1275	[2902]	GETTABLE 	R39 R39 K2 ; R39 := R39[0x659d451f]
	1276	[2902]	GETGLOBAL	R40 K3 ; R40 := 0x0032441c
	1277	[2902]	GETTABLE 	R40 R40 K180 ; R40 := R40["UISound_DialogOpen"]
	1278	[2902]	CALL     	R39 2 1 ; R39(R40)
	1279	[2905]	GETUPVAL 	R39 U19 ; R39 := U19
	1280	[2905]	MOVE     	R40 R38 ; R40 := R38
	1281	[2905]	CALL     	R39 2 1 ; R39(R40)
	1282	[2907]	SETUPVAL 	R0 U20 ; U20 := R0
	1283	[2908]	RETURN   	R0 1 ; return 

function #49 <?:2910,2929> (28 instructions, 112 bytes at 000002112B423E30)
1 param, 7 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2912]	LOADK    	R1 := 6.000000
	2	[2914]	TEST     	R0 1 ; if R0 then PC := 5
	3	[2914]	JMP      	5 ; PC := 5
	4	[2915]	LOADK    	R1 := -1.000000
	5	[2918]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	6	[2918]	GETGLOBAL	R3 K1 ; R3 := 0x89326c93
	7	[2918]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2918]	TEST     	R2 1 ; if R2 then PC := 28
	9	[2918]	JMP      	28 ; PC := 28
	10	[2919]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	11	[2919]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x78298275]
	12	[2919]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2921]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	14	[2921]	MOVE     	R4 R2 ; R4 := R2
	15	[2921]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[2921]	TEST     	R3 1 ; if R3 then PC := 28
	17	[2921]	JMP      	28 ; PC := 28
	18	[2922]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x0b4bcfb6]
	19	[2922]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[2924]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	21	[2924]	MOVE     	R5 R3 ; R5 := R3
	22	[2924]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[2924]	TEST     	R4 1 ; if R4 then PC := 28
	24	[2924]	JMP      	28 ; PC := 28
	25	[2925]	SELF     	R4 R3 K4 ; R5 := R3; R4 := R3[0x1c3568a5]
	26	[2925]	MOVE     	R6 R1 ; R6 := R1
	27	[2925]	CALL     	R4 3 1 ; R4(R5,R6)
	28	[2929]	RETURN   	R0 1 ; return 

function #50 <?:2931,2935> (21 instructions, 84 bytes at 000002112B424020)
1 param, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[2932]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	2	[2932]	GETGLOBAL	R2 K2 ; R2 := 0x42dcc9f5
	3	[2932]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	4	[2932]	GETTABLE 	R3 R3 K1 ; R3 := R3["currZoom"]
	5	[2932]	ADD      	R3 R3 R0 ; R3 := R3 + R0
	6	[2932]	LOADK    	R4 := 0.000000
	7	[2932]	GETGLOBAL	R5 K0 ; R5 := mCameraTable
	8	[2932]	GETTABLE 	R5 R5 K3 ; R5 := R5["MaxZoom"]
	9	[2932]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[2932]	SETTABLE 	R1 K1 R2 ; R1["currZoom"] := R2
	11	[2933]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	12	[2933]	GETTABLE 	R1 R1 K1 ; R1 := R1["currZoom"]
	13	[2933]	GETGLOBAL	R2 K0 ; R2 := mCameraTable
	14	[2933]	GETTABLE 	R2 R2 K3 ; R2 := R2["MaxZoom"]
	15	[2933]	DIV      	R1 R1 R2 ; R1 := R1 / R2
	16	[2934]	GETGLOBAL	R2 K0 ; R2 := mCameraTable
	17	[2934]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	18	[2934]	GETTABLE 	R3 R3 K5 ; R3 := R3["MaxPan"]
	19	[2934]	MUL      	R3 R3 R1 ; R3 := R3 * R1
	20	[2934]	SETTABLE 	R2 K4 R3 ; R2["clampedPan"] := R3
	21	[2935]	RETURN   	R0 1 ; return 

function #51 <?:2937,2972> (130 instructions, 520 bytes at 000002112B424200)
3 params, 11 slots, 4 upvalues, 0 locals, 33 constants, 0 functions
	1	[2938]	MOVE     	R3 R2 ; R3 := R2
	2	[2939]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	3	[2939]	MOVE     	R5 R3 ; R5 := R3
	4	[2939]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[2939]	TEST     	R4 0 ; if not R4 then PC := 41
	6	[2939]	JMP      	41 ; PC := 41
	7	[2940]	GETGLOBAL	R4 K1 ; R4 := _T
	8	[2940]	GETTABLE 	R3 R4 K2 ; R3 := R4["MenuSuitAvatar"]
	9	[2941]	GETGLOBAL	R4 K1 ; R4 := _T
	10	[2941]	GETTABLE 	R4 R4 K3 ; R4 := R4["mKDriveSuitMode"]
	11	[2941]	TEST     	R4 0 ; if not R4 then PC := 16
	12	[2941]	JMP      	16 ; PC := 16
	13	[2942]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[2942]	GETTABLE 	R3 R4 K4 ; R3 := R4["KDriveAvatar"]
	15	[2942]	JMP      	41 ; PC := 41
	16	[2943]	GETGLOBAL	R4 K1 ; R4 := _T
	17	[2943]	GETTABLE 	R4 R4 K5 ; R4 := R4["mMechaSuitMode"]
	18	[2943]	TEST     	R4 0 ; if not R4 then PC := 33
	19	[2943]	JMP      	33 ; PC := 33
	20	[2944]	GETGLOBAL	R4 K1 ; R4 := _T
	21	[2944]	GETTABLE 	R3 R4 K6 ; R3 := R4["MechAvatar"]
	22	[2945]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	23	[2945]	MOVE     	R5 R3 ; R5 := R3
	24	[2945]	CALL     	R4 2 2 ; R4 := R4(R5)
	25	[2945]	TEST     	R4 1 ; if R4 then PC := 41
	26	[2945]	JMP      	41 ; PC := 41
	27	[2946]	SELF     	R4 R3 K7 ; R5 := R3; R4 := R3[0xb2532845]
	28	[2946]	GETGLOBAL	R6 K8 ; R6 := 0x0469f296
	29	[2946]	LOADK    	R7 K9 ; R7 := "DisableFootIK"
	30	[2946]	CALL     	R6 2 0 ; R6,... := R6(R7)
	31	[2946]	CALL     	R4 0 1 ; R4(R5,...)
	32	[2947]	JMP      	41 ; PC := 41
	33	[2948]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	34	[2948]	MOVE     	R5 R3 ; R5 := R3
	35	[2948]	CALL     	R4 2 2 ; R4 := R4(R5)
	36	[2948]	TEST     	R4 1 ; if R4 then PC := 41
	37	[2948]	JMP      	41 ; PC := 41
	38	[2949]	SELF     	R4 R3 K10 ; R5 := R3; R4 := R3[0x841b1f39]
	39	[2949]	OP_LOADBOOL	R6 0 0 ; R6 := false
	40	[2949]	CALL     	R4 3 1 ; R4(R5,R6)
	41	[2953]	GETUPVAL 	R4 U0 ; R4 := U0
	42	[2953]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x06d055f9]
	43	[2953]	EQ       	0 R0 K12 ; if R0 ~= nil then PC := 46
	44	[2953]	JMP      	46 ; PC := 46
	45	[2953]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 46
	46	[2953]	OP_LOADBOOL	R5 1 0 ; R5 := true
	47	[2953]	MOVE     	R6 R0 ; R6 := R0
	48	[2953]	GETUPVAL 	R7 U1 ; R7 := U1
	49	[2953]	GETTABLE 	R7 R7 K13 ; R7 := R7["MouseDown"]
	50	[2953]	TEST     	R7 1 ; if R7 then PC := 58
	51	[2953]	JMP      	58 ; PC := 58
	52	[2953]	GETGLOBAL	R7 K14 ; R7 := mCameraTable
	53	[2953]	GETTABLE 	R7 R7 K15 ; R7 := R7["mRightStickZoomValue"]
	54	[2953]	EQ       	0 R7 K16 ; if R7 ~= 0.000000 then PC := 57
	55	[2953]	JMP      	57 ; PC := 57
	56	[2953]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 57
	57	[2953]	OP_LOADBOOL	R7 1 0 ; R7 := true
	58	[2953]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	59	[2953]	MOVE     	R0 R4 ; R0 := R4
	60	[2954]	GETUPVAL 	R4 U2 ; R4 := U2
	61	[2954]	GETTABLE 	R4 R4 K17 ; R4 := R4[0xd4c67576]
	62	[2954]	GETGLOBAL	R5 K18 ; R5 := 0xae91e43b
	63	[2954]	MOVE     	R6 R3 ; R6 := R3
	64	[2954]	MOVE     	R7 R0 ; R7 := R0
	65	[2954]	MOVE     	R8 R1 ; R8 := R1
	66	[2954]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	67	[2956]	GETGLOBAL	R4 K14 ; R4 := mCameraTable
	68	[2956]	GETTABLE 	R4 R4 K19 ; R4 := R4["ConstantUpdate"]
	69	[2956]	TEST     	R4 1 ; if R4 then PC := 130
	70	[2956]	JMP      	130 ; PC := 130
	71	[2957]	TEST     	R0 0 ; if not R0 then PC := 130
	72	[2957]	JMP      	130 ; PC := 130
	73	[2959]	GETGLOBAL	R4 K1 ; R4 := _T
	74	[2959]	GETTABLE 	R4 R4 K20 ; R4 := R4["suitTable"]
	75	[2959]	GETTABLE 	R4 R4 K21 ; R4 := R4["myDiff"]
	76	[2959]	EQ       	1 R4 K12 ; if R4 == nil then PC := 130
	77	[2959]	JMP      	130 ; PC := 130
	78	[2959]	GETGLOBAL	R4 K14 ; R4 := mCameraTable
	79	[2959]	GETTABLE 	R4 R4 K22 ; R4 := R4["currZoom"]
	80	[2959]	EQ       	1 R4 K16 ; if R4 == 0.000000 then PC := 130
	81	[2959]	JMP      	130 ; PC := 130
	82	[2960]	GETGLOBAL	R4 K14 ; R4 := mCameraTable
	83	[2960]	GETTABLE 	R4 R4 K15 ; R4 := R4["mRightStickZoomValue"]
	84	[2960]	EQ       	1 R4 K16 ; if R4 == 0.000000 then PC := 111
	85	[2960]	JMP      	111 ; PC := 111
	86	[2961]	GETUPVAL 	R4 U3 ; R4 := U3
	87	[2961]	GETTABLE 	R4 R4 K23 ; R4 := R4[0x8375cf88]
	88	[2961]	GETGLOBAL	R5 K14 ; R5 := mCameraTable
	89	[2961]	GETTABLE 	R5 R5 K15 ; R5 := R5["mRightStickZoomValue"]
	90	[2961]	CALL     	R4 2 1 ; R4(R5)
	91	[2962]	GETGLOBAL	R4 K18 ; R4 := 0xae91e43b
	92	[2962]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0x91a24e4b]
	93	[2962]	LOADK    	R6 K25 ; R6 := "_root"
	94	[2962]	LOADK    	R7 := 26.000000
	95	[2962]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	96	[2963]	GETGLOBAL	R5 K18 ; R5 := 0xae91e43b
	97	[2963]	SELF     	R5 R5 K26 ; R6 := R5; R5 := R5[0xaf9fda9f]
	98	[2963]	CALL     	R5 2 2 ; R5 := R5(R6)
	99	[2964]	GETGLOBAL	R6 K14 ; R6 := mCameraTable
	100	[2964]	DIV      	R7 R4 R5 ; R7 := R4 / R5
	101	[2964]	GETGLOBAL	R8 K14 ; R8 := mCameraTable
	102	[2964]	GETTABLE 	R8 R8 K28 ; R8 := R8["clampedPan"]
	103	[2964]	MUL      	R8 R8 K29 ; R8 := R8 * 2.000000
	104	[2964]	UNM      	R8 R8 ; R8 := ^ R8
	105	[2964]	MUL      	R7 R7 R8 ; R7 := R7 * R8
	106	[2964]	GETGLOBAL	R8 K14 ; R8 := mCameraTable
	107	[2964]	GETTABLE 	R8 R8 K28 ; R8 := R8["clampedPan"]
	108	[2964]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	109	[2964]	SETTABLE 	R6 K27 R7 ; R6["currPan"] := R7
	110	[2964]	JMP      	127 ; PC := 127
	111	[2966]	GETGLOBAL	R6 K14 ; R6 := mCameraTable
	112	[2966]	GETGLOBAL	R7 K30 ; R7 := 0x42dcc9f5
	113	[2966]	GETGLOBAL	R8 K14 ; R8 := mCameraTable
	114	[2966]	GETTABLE 	R8 R8 K27 ; R8 := R8["currPan"]
	115	[2966]	GETGLOBAL	R9 K1 ; R9 := _T
	116	[2966]	GETTABLE 	R9 R9 K20 ; R9 := R9["suitTable"]
	117	[2966]	GETTABLE 	R9 R9 K21 ; R9 := R9["myDiff"]
	118	[2966]	MUL      	R9 R9 K31 ; R9 := R9 * 0.002500
	119	[2966]	SUB      	R8 R8 R9 ; R8 := R8 - R9
	120	[2966]	GETGLOBAL	R9 K14 ; R9 := mCameraTable
	121	[2966]	GETTABLE 	R9 R9 K28 ; R9 := R9["clampedPan"]
	122	[2966]	UNM      	R9 R9 ; R9 := ^ R9
	123	[2966]	GETGLOBAL	R10 K14 ; R10 := mCameraTable
	124	[2966]	GETTABLE 	R10 R10 K28 ; R10 := R10["clampedPan"]
	125	[2966]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	126	[2966]	SETTABLE 	R6 K27 R7 ; R6["currPan"] := R7
	127	[2968]	GETUPVAL 	R6 U3 ; R6 := U3
	128	[2968]	GETTABLE 	R6 R6 K32 ; R6 := R6[0x7027aec6]
	129	[2968]	CALL     	R6 1 1 ; R6()
	130	[2972]	RETURN   	R0 1 ; return 

function #52 <?:2974,3029> (146 instructions, 584 bytes at 000002112B424930)
2 params, 20 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[2975]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[2975]	MOVE     	R3 R0 ; R3 := R0
	3	[2975]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2975]	TEST     	R2 1 ; if R2 then PC := 11
	5	[2975]	JMP      	11 ; PC := 11
	6	[2975]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[2975]	MOVE     	R3 R1 ; R3 := R1
	8	[2975]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[2975]	TEST     	R2 0 ; if not R2 then PC := 12
	10	[2975]	JMP      	12 ; PC := 12
	11	[2976]	RETURN   	R0 1 ; return 
	12	[2979]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	13	[2979]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x7cf8123f]
	14	[2979]	LOADK    	R4 := 3.000000
	15	[2979]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[2981]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	17	[2981]	MOVE     	R4 R2 ; R4 := R2
	18	[2981]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[2981]	TEST     	R3 1 ; if R3 then PC := 26
	20	[2981]	JMP      	26 ; PC := 26
	21	[2982]	GETGLOBAL	R3 K4 ; R3 := 0x89326c93
	22	[2982]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x59c96e77]
	23	[2982]	MOVE     	R5 R2 ; R5 := R2
	24	[2982]	CALL     	R3 3 1 ; R3(R4,R5)
	25	[2983]	LOADNIL  	R2 R2 ; R2 := nil
	26	[2986]	GETGLOBAL	R3 K6 ; R3 := ZERO_VECTOR
	27	[2987]	GETGLOBAL	R4 K7 ; R4 := ZERO_ROTATION
	28	[2989]	GETUPVAL 	R5 U0 ; R5 := U0
	29	[2989]	GETTABLE 	R5 R5 K8 ; R5 := R5[0xa9882367]
	30	[2989]	LOADK    	R6 K9 ; R6 := "MoaSpawnControl"
	31	[2989]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[2990]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	33	[2990]	MOVE     	R7 R5 ; R7 := R5
	34	[2990]	CALL     	R6 2 2 ; R6 := R6(R7)
	35	[2990]	TEST     	R6 1 ; if R6 then PC := 48
	36	[2990]	JMP      	48 ; PC := 48
	37	[2991]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xd1586535]
	38	[2991]	CALL     	R6 2 2 ; R6 := R6(R7)
	39	[2991]	GETGLOBAL	R7 K11 ; R7 := 0xa421af95
	40	[2991]	LOADK    	R8 := 0.000000
	41	[2991]	LOADK    	R9 := 1.000000
	42	[2991]	LOADK    	R10 := 0.000000
	43	[2991]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	44	[2991]	ADD      	R3 R6 R7 ; R3 := R6 + R7
	45	[2992]	SELF     	R6 R5 K12 ; R7 := R5; R6 := R5[0xcb3851b8]
	46	[2992]	CALL     	R6 2 2 ; R6 := R6(R7)
	47	[2992]	MOVE     	R4 R6 ; R4 := R6
	48	[2995]	SELF     	R6 R1 K13 ; R7 := R1; R6 := R1[0xf2deaf69]
	49	[2995]	GETGLOBAL	R8 K14 ; R8 := 0x88980f4f
	50	[2995]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	51	[2996]	GETUPVAL 	R7 U0 ; R7 := U0
	52	[2996]	GETTABLE 	R7 R7 K15 ; R7 := R7[0x06d055f9]
	53	[2996]	MOVE     	R8 R6 ; R8 := R6
	54	[2996]	GETGLOBAL	R9 K16 ; R9 := 0x807c8690
	55	[2996]	GETGLOBAL	R10 K17 ; R10 := 0xf6ecd485
	56	[2996]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	57	[2998]	GETGLOBAL	R8 K4 ; R8 := 0x89326c93
	58	[2998]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0x29ef273d]
	59	[2998]	CALL     	R8 2 2 ; R8 := R8(R9)
	60	[2998]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x6cd833c5]
	61	[2998]	GETGLOBAL	R10 K20 ; R10 := 0x88efc25e
	62	[2998]	MOVE     	R11 R7 ; R11 := R7
	63	[2998]	CALL     	R10 2 2 ; R10 := R10(R11)
	64	[2998]	MOVE     	R11 R3 ; R11 := R3
	65	[2998]	MOVE     	R12 R4 ; R12 := R4
	66	[2998]	GETGLOBAL	R13 K21 ; R13 := 0x0469f296
	67	[2998]	CALL     	R13 1 2 ; R13 := R13()
	68	[2998]	LOADK    	R14 := 0.000000
	69	[2998]	OP_LOADBOOL	R15 1 0 ; R15 := true
	70	[2998]	CALL     	R8 8 2 ; R8 := R8(R9,R10,R11,R12,R13,R14,R15)
	71	[3000]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	72	[3000]	MOVE     	R10 R8 ; R10 := R8
	73	[3000]	CALL     	R9 2 2 ; R9 := R9(R10)
	74	[3000]	TEST     	R9 0 ; if not R9 then PC := 77
	75	[3000]	JMP      	77 ; PC := 77
	76	[3001]	RETURN   	R0 1 ; return 
	77	[3004]	SELF     	R9 R8 K22 ; R10 := R8; R9 := R8[0xbb610e5b]
	78	[3004]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[3004]	MOVE     	R2 R9 ; R2 := R9
	80	[3006]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	81	[3006]	MOVE     	R10 R2 ; R10 := R2
	82	[3006]	CALL     	R9 2 2 ; R9 := R9(R10)
	83	[3006]	TEST     	R9 1 ; if R9 then PC := 123
	84	[3006]	JMP      	123 ; PC := 123
	85	[3007]	SELF     	R9 R0 K23 ; R10 := R0; R9 := R0[0x68d708a7]
	86	[3007]	LOADK    	R11 := 0.000000
	87	[3007]	GETGLOBAL	R12 K24 ; R12 := mInventory
	88	[3007]	SELF     	R12 R12 K25 ; R13 := R12; R12 := R12[0xe9131614]
	89	[3007]	CALL     	R12 2 0 ; R12,... := R12(R13)
	90	[3007]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	91	[3008]	GETGLOBAL	R10 K20 ; R10 := 0x88efc25e
	92	[3008]	MOVE     	R11 R1 ; R11 := R1
	93	[3008]	CALL     	R10 2 2 ; R10 := R10(R11)
	94	[3009]	SELF     	R11 R2 K26 ; R12 := R2; R11 := R2[0x511d26b8]
	95	[3009]	MOVE     	R13 R10 ; R13 := R10
	96	[3009]	OP_LOADBOOL	R14 1 0 ; R14 := true
	97	[3009]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	98	[3010]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	99	[3010]	MOVE     	R13 R11 ; R13 := R11
	100	[3010]	CALL     	R12 2 2 ; R12 := R12(R13)
	101	[3010]	TEST     	R12 1 ; if R12 then PC := 123
	102	[3010]	JMP      	123 ; PC := 123
	103	[3011]	SELF     	R12 R11 K27 ; R13 := R11; R12 := R11[0xaa041663]
	104	[3011]	MOVE     	R14 R9 ; R14 := R9
	105	[3011]	CALL     	R12 3 1 ; R12(R13,R14)
	106	[3012]	GETTABLE 	R12 R0 K28 ; R12 := R0["mModularParts"]
	107	[3012]	EQ       	1 R12 K29 ; if R12 == nil then PC := 114
	108	[3012]	JMP      	114 ; PC := 114
	109	[3013]	OP_LOADBOOL	R12 1 0 ; R12 := true
	110	[3014]	SELF     	R13 R11 K30 ; R14 := R11; R13 := R11[0xa6101f7e]
	111	[3014]	GETTABLE 	R15 R0 K28 ; R15 := R0["mModularParts"]
	112	[3014]	MOVE     	R16 R12 ; R16 := R12
	113	[3014]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	114	[3017]	SELF     	R13 R11 K31 ; R14 := R11; R13 := R11[0x1bf26251]
	115	[3017]	OP_LOADBOOL	R15 0 0 ; R15 := false
	116	[3017]	CALL     	R13 3 1 ; R13(R14,R15)
	117	[3018]	SELF     	R13 R2 K32 ; R14 := R2; R13 := R2[0x40d138a2]
	118	[3018]	GETGLOBAL	R15 K33 ; R15 := 0x25d99d89
	119	[3018]	SELF     	R15 R15 K34 ; R16 := R15; R15 := R15[0x62c81b76]
	120	[3018]	CALL     	R15 2 2 ; R15 := R15(R16)
	121	[3018]	MOVE     	R16 R11 ; R16 := R11
	122	[3018]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	123	[3022]	GETGLOBAL	R13 K1 ; R13 := 0xbe190284
	124	[3022]	SELF     	R13 R13 K2 ; R14 := R13; R13 := R13[0x7cf8123f]
	125	[3022]	LOADK    	R15 := 0.000000
	126	[3022]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	127	[3023]	GETGLOBAL	R14 K1 ; R14 := 0xbe190284
	128	[3023]	SELF     	R14 R14 K2 ; R15 := R14; R14 := R14[0x7cf8123f]
	129	[3023]	LOADK    	R16 := 1.000000
	130	[3023]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	131	[3024]	GETGLOBAL	R15 K1 ; R15 := 0xbe190284
	132	[3024]	SELF     	R15 R15 K35 ; R16 := R15; R15 := R15[0x1e0f3010]
	133	[3024]	MOVE     	R17 R13 ; R17 := R13
	134	[3024]	MOVE     	R18 R14 ; R18 := R14
	135	[3024]	MOVE     	R19 R2 ; R19 := R2
	136	[3024]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	137	[3025]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	138	[3025]	GETUPVAL 	R16 U1 ; R16 := U1
	139	[3025]	CALL     	R15 2 2 ; R15 := R15(R16)
	140	[3025]	TEST     	R15 1 ; if R15 then PC := 146
	141	[3025]	JMP      	146 ; PC := 146
	142	[3026]	GETUPVAL 	R15 U1 ; R15 := U1
	143	[3026]	SETTABLE 	R15 K36 R14 ; R15[0xcbd666e1] := R14
	144	[3027]	GETUPVAL 	R15 U1 ; R15 := U1
	145	[3027]	SETTABLE 	R15 K37 R8 ; R15["petAgent"] := R8
	146	[3029]	RETURN   	R0 1 ; return 

function #53 <?:3031,3114> (255 instructions, 1020 bytes at 000002112B425130)
2 params, 25 slots, 2 upvalues, 0 locals, 57 constants, 0 functions
	1	[3032]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3032]	MOVE     	R3 R0 ; R3 := R0
	3	[3032]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[3032]	TEST     	R2 1 ; if R2 then PC := 11
	5	[3032]	JMP      	11 ; PC := 11
	6	[3032]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[3032]	MOVE     	R3 R1 ; R3 := R1
	8	[3032]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[3032]	TEST     	R2 0 ; if not R2 then PC := 12
	10	[3032]	JMP      	12 ; PC := 12
	11	[3033]	RETURN   	R0 1 ; return 
	12	[3036]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	13	[3036]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x7cf8123f]
	14	[3036]	LOADK    	R4 := 1.000000
	15	[3036]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[3038]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	17	[3038]	MOVE     	R4 R2 ; R4 := R2
	18	[3038]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[3038]	TEST     	R3 1 ; if R3 then PC := 26
	20	[3038]	JMP      	26 ; PC := 26
	21	[3039]	GETGLOBAL	R3 K4 ; R3 := 0x89326c93
	22	[3039]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x59c96e77]
	23	[3039]	MOVE     	R5 R2 ; R5 := R2
	24	[3039]	CALL     	R3 3 1 ; R3(R4,R5)
	25	[3040]	LOADNIL  	R2 R2 ; R2 := nil
	26	[3043]	GETGLOBAL	R3 K6 ; R3 := ZERO_VECTOR
	27	[3044]	GETGLOBAL	R4 K7 ; R4 := ZERO_ROTATION
	28	[3046]	GETUPVAL 	R5 U0 ; R5 := U0
	29	[3046]	GETTABLE 	R5 R5 K8 ; R5 := R5[0xa9882367]
	30	[3046]	LOADK    	R6 K9 ; R6 := "KubrowSpawnControl"
	31	[3046]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[3047]	GETUPVAL 	R6 U0 ; R6 := U0
	33	[3047]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xa9882367]
	34	[3047]	LOADK    	R7 K10 ; R7 := "KubrowPuppySpawnControl"
	35	[3047]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[3048]	GETUPVAL 	R7 U0 ; R7 := U0
	37	[3048]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x06d055f9]
	38	[3048]	GETTABLE 	R8 R0 K12 ; R8 := R0["mDetails"]
	39	[3048]	GETTABLE 	R8 R8 K13 ; R8 := R8["mIsPuppy"]
	40	[3048]	MOVE     	R9 R6 ; R9 := R6
	41	[3048]	MOVE     	R10 R5 ; R10 := R5
	42	[3048]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	43	[3050]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	44	[3050]	MOVE     	R9 R7 ; R9 := R7
	45	[3050]	CALL     	R8 2 2 ; R8 := R8(R9)
	46	[3050]	TEST     	R8 1 ; if R8 then PC := 54
	47	[3050]	JMP      	54 ; PC := 54
	48	[3051]	SELF     	R8 R7 K14 ; R9 := R7; R8 := R7[0xd1586535]
	49	[3051]	CALL     	R8 2 2 ; R8 := R8(R9)
	50	[3051]	MOVE     	R3 R8 ; R3 := R8
	51	[3052]	SELF     	R8 R7 K15 ; R9 := R7; R8 := R7[0xcb3851b8]
	52	[3052]	CALL     	R8 2 2 ; R8 := R8(R9)
	53	[3052]	MOVE     	R4 R8 ; R4 := R8
	54	[3055]	SELF     	R8 R1 K16 ; R9 := R1; R8 := R1[0xf2deaf69]
	55	[3055]	GETGLOBAL	R10 K17 ; R10 := 0xb9a9a904
	56	[3055]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	57	[3056]	SELF     	R9 R1 K16 ; R10 := R1; R9 := R1[0xf2deaf69]
	58	[3056]	GETGLOBAL	R11 K18 ; R11 := 0x2c2fbbf0
	59	[3056]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	60	[3057]	LOADNIL  	R10 R10 ; R10 := nil
	61	[3059]	GETUPVAL 	R11 U0 ; R11 := U0
	62	[3059]	GETTABLE 	R11 R11 K11 ; R11 := R11[0x06d055f9]
	63	[3059]	GETTABLE 	R12 R0 K12 ; R12 := R0["mDetails"]
	64	[3059]	GETTABLE 	R12 R12 K13 ; R12 := R12["mIsPuppy"]
	65	[3060]	GETUPVAL 	R13 U0 ; R13 := U0
	66	[3060]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x06d055f9]
	67	[3060]	MOVE     	R14 R8 ; R14 := R8
	68	[3060]	GETGLOBAL	R15 K19 ; R15 := 0x70114ff1
	69	[3060]	GETGLOBAL	R16 K20 ; R16 := 0x4ea3e9ad
	70	[3060]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	71	[3061]	GETUPVAL 	R14 U0 ; R14 := U0
	72	[3061]	GETTABLE 	R14 R14 K11 ; R14 := R14[0x06d055f9]
	73	[3061]	MOVE     	R15 R8 ; R15 := R8
	74	[3061]	GETGLOBAL	R16 K21 ; R16 := 0xb99ad96f
	75	[3061]	GETGLOBAL	R17 K22 ; R17 := 0xefc2e7cb
	76	[3061]	CALL     	R14 4 0 ; R14,... := R14(R15,R16,R17)
	77	[3059]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	78	[3062]	MOVE     	R10 R11 ; R10 := R11
	79	[3064]	GETGLOBAL	R11 K4 ; R11 := 0x89326c93
	80	[3064]	SELF     	R11 R11 K23 ; R12 := R11; R11 := R11[0x29ef273d]
	81	[3064]	CALL     	R11 2 2 ; R11 := R11(R12)
	82	[3064]	SELF     	R11 R11 K24 ; R12 := R11; R11 := R11[0x6cd833c5]
	83	[3064]	GETGLOBAL	R13 K25 ; R13 := 0x88efc25e
	84	[3064]	MOVE     	R14 R10 ; R14 := R10
	85	[3064]	CALL     	R13 2 2 ; R13 := R13(R14)
	86	[3064]	MOVE     	R14 R3 ; R14 := R3
	87	[3064]	MOVE     	R15 R4 ; R15 := R4
	88	[3064]	GETGLOBAL	R16 K26 ; R16 := 0x0469f296
	89	[3064]	CALL     	R16 1 2 ; R16 := R16()
	90	[3064]	LOADK    	R17 := 0.000000
	91	[3064]	OP_LOADBOOL	R18 1 0 ; R18 := true
	92	[3064]	CALL     	R11 8 2 ; R11 := R11(R12,R13,R14,R15,R16,R17,R18)
	93	[3066]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	94	[3066]	MOVE     	R13 R11 ; R13 := R11
	95	[3066]	CALL     	R12 2 2 ; R12 := R12(R13)
	96	[3066]	TEST     	R12 0 ; if not R12 then PC := 99
	97	[3066]	JMP      	99 ; PC := 99
	98	[3067]	RETURN   	R0 1 ; return 
	99	[3070]	SELF     	R12 R11 K27 ; R13 := R11; R12 := R11[0xbb610e5b]
	100	[3070]	CALL     	R12 2 2 ; R12 := R12(R13)
	101	[3070]	MOVE     	R2 R12 ; R2 := R12
	102	[3072]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	103	[3072]	MOVE     	R13 R2 ; R13 := R2
	104	[3072]	CALL     	R12 2 2 ; R12 := R12(R13)
	105	[3072]	TEST     	R12 1 ; if R12 then PC := 232
	106	[3072]	JMP      	232 ; PC := 232
	107	[3073]	GETGLOBAL	R12 K28 ; R12 := _T
	108	[3073]	GETUPVAL 	R13 U0 ; R13 := U0
	109	[3073]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x06d055f9]
	110	[3073]	GETTABLE 	R14 R0 K12 ; R14 := R0["mDetails"]
	111	[3073]	GETTABLE 	R14 R14 K13 ; R14 := R14["mIsPuppy"]
	112	[3073]	TEST     	R14 0 ; if not R14 then PC := 115
	113	[3073]	JMP      	115 ; PC := 115
	114	[3073]	MOVE     	R14 R9 ; R14 := R9
	115	[3073]	MOVE     	R15 R2 ; R15 := R2
	116	[3073]	LOADNIL  	R16 R16 ; R16 := nil
	117	[3073]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	118	[3073]	SETTABLE 	R12 K29 R13 ; R12["chargerPuppy"] := R13
	119	[3074]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	120	[3074]	MOVE     	R13 R7 ; R13 := R7
	121	[3074]	CALL     	R12 2 2 ; R12 := R12(R13)
	122	[3074]	TEST     	R12 1 ; if R12 then PC := 152
	123	[3074]	JMP      	152 ; PC := 152
	124	[3075]	MOVE     	R12 R3 ; R12 := R3
	125	[3076]	GETGLOBAL	R13 K30 ; R13 := 0xa421af95
	126	[3076]	CALL     	R13 1 2 ; R13 := R13()
	127	[3077]	GETGLOBAL	R14 K4 ; R14 := 0x89326c93
	128	[3077]	SELF     	R14 R14 K31 ; R15 := R14; R14 := R14[0xbd5d0ec1]
	129	[3077]	GETGLOBAL	R16 K30 ; R16 := 0xa421af95
	130	[3077]	LOADK    	R17 := 0.000000
	131	[3077]	LOADK    	R18 K32 ; R18 := 0.200000
	132	[3077]	LOADK    	R19 := 0.000000
	133	[3077]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	134	[3077]	ADD      	R16 R12 R16 ; R16 := R12 + R16
	135	[3077]	GETGLOBAL	R17 K30 ; R17 := 0xa421af95
	136	[3077]	LOADK    	R18 := 0.000000
	137	[3077]	LOADK    	R19 := 1.000000
	138	[3077]	LOADK    	R20 := 0.000000
	139	[3077]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	140	[3077]	SUB      	R17 R12 R17 ; R17 := R12 - R17
	141	[3077]	LOADNIL  	R18 R19 ; R18 := R19 := nil
	142	[3077]	MOVE     	R20 R13 ; R20 := R13
	143	[3077]	CALL     	R14 7 2 ; R14 := R14(R15,R16,R17,R18,R19,R20)
	144	[3077]	TEST     	R14 0 ; if not R14 then PC := 147
	145	[3077]	JMP      	147 ; PC := 147
	146	[3078]	MOVE     	R12 R13 ; R12 := R13
	147	[3080]	SELF     	R14 R2 K33 ; R15 := R2; R14 := R2[0x589ef1c1]
	148	[3080]	MOVE     	R16 R12 ; R16 := R12
	149	[3080]	SELF     	R17 R7 K15 ; R18 := R7; R17 := R7[0xcb3851b8]
	150	[3080]	CALL     	R17 2 0 ; R17,... := R17(R18)
	151	[3080]	CALL     	R14 0 1 ; R14(R15,...)
	152	[3083]	SELF     	R14 R2 K34 ; R15 := R2; R14 := R2[0xb2532845]
	153	[3083]	GETGLOBAL	R16 K26 ; R16 := 0x0469f296
	154	[3083]	LOADK    	R17 K35 ; R17 := "StandUp"
	155	[3083]	CALL     	R16 2 0 ; R16,... := R16(R17)
	156	[3083]	CALL     	R14 0 1 ; R14(R15,...)
	157	[3084]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	158	[3084]	GETGLOBAL	R15 K28 ; R15 := _T
	159	[3084]	GETTABLE 	R15 R15 K36 ; R15 := R15["petCommands"]
	160	[3084]	CALL     	R14 2 2 ; R14 := R14(R15)
	161	[3084]	TEST     	R14 1 ; if R14 then PC := 173
	162	[3084]	JMP      	173 ; PC := 173
	163	[3085]	GETGLOBAL	R14 K28 ; R14 := _T
	164	[3085]	GETTABLE 	R14 R14 K36 ; R14 := R14["petCommands"]
	165	[3085]	GETTABLE 	R14 R14 K37 ; R14 := R14[0x3abee2fa]
	166	[3085]	GETUPVAL 	R15 U0 ; R15 := U0
	167	[3085]	GETTABLE 	R15 R15 K8 ; R15 := R15[0xa9882367]
	168	[3085]	LOADK    	R16 K9 ; R16 := "KubrowSpawnControl"
	169	[3085]	CALL     	R15 2 2 ; R15 := R15(R16)
	170	[3085]	LOADNIL  	R16 R16 ; R16 := nil
	171	[3085]	OP_LOADBOOL	R17 1 0 ; R17 := true
	172	[3085]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	173	[3088]	SELF     	R14 R0 K38 ; R15 := R0; R14 := R0[0x68d708a7]
	174	[3088]	LOADK    	R16 := 0.000000
	175	[3088]	GETGLOBAL	R17 K39 ; R17 := mInventory
	176	[3088]	SELF     	R17 R17 K40 ; R18 := R17; R17 := R17[0xe9131614]
	177	[3088]	CALL     	R17 2 0 ; R17,... := R17(R18)
	178	[3088]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	179	[3089]	GETGLOBAL	R15 K25 ; R15 := 0x88efc25e
	180	[3089]	MOVE     	R16 R1 ; R16 := R1
	181	[3089]	CALL     	R15 2 2 ; R15 := R15(R16)
	182	[3090]	SELF     	R16 R2 K41 ; R17 := R2; R16 := R2[0x511d26b8]
	183	[3090]	MOVE     	R18 R15 ; R18 := R15
	184	[3090]	OP_LOADBOOL	R19 1 0 ; R19 := true
	185	[3090]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	186	[3091]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	187	[3091]	MOVE     	R18 R16 ; R18 := R16
	188	[3091]	CALL     	R17 2 2 ; R17 := R17(R18)
	189	[3091]	TEST     	R17 1 ; if R17 then PC := 232
	190	[3091]	JMP      	232 ; PC := 232
	191	[3092]	SELF     	R17 R2 K42 ; R18 := R2; R17 := R2[0xb3b74ab3]
	192	[3092]	GETTABLE 	R19 R0 K12 ; R19 := R0["mDetails"]
	193	[3092]	CALL     	R17 3 1 ; R17(R18,R19)
	194	[3093]	GETTABLE 	R17 R0 K12 ; R17 := R0["mDetails"]
	195	[3093]	GETTABLE 	R17 R17 K13 ; R17 := R17["mIsPuppy"]
	196	[3093]	TEST     	R17 1 ; if R17 then PC := 208
	197	[3093]	JMP      	208 ; PC := 208
	198	[3093]	SELF     	R17 R15 K16 ; R18 := R15; R17 := R15[0xf2deaf69]
	199	[3093]	GETGLOBAL	R19 K43 ; R19 := 0xf541be71
	200	[3093]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	201	[3093]	TEST     	R17 1 ; if R17 then PC := 208
	202	[3093]	JMP      	208 ; PC := 208
	203	[3093]	SELF     	R17 R15 K16 ; R18 := R15; R17 := R15[0xf2deaf69]
	204	[3093]	GETGLOBAL	R19 K44 ; R19 := 0xda203692
	205	[3093]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	206	[3093]	TEST     	R17 0 ; if not R17 then PC := 212
	207	[3093]	JMP      	212 ; PC := 212
	208	[3094]	SELF     	R17 R16 K45 ; R18 := R16; R17 := R16[0x7c595670]
	209	[3094]	GETTABLE 	R19 R0 K12 ; R19 := R0["mDetails"]
	210	[3094]	GETTABLE 	R19 R19 K13 ; R19 := R19["mIsPuppy"]
	211	[3094]	CALL     	R17 3 1 ; R17(R18,R19)
	212	[3096]	SELF     	R17 R16 K46 ; R18 := R16; R17 := R16[0xaa041663]
	213	[3096]	MOVE     	R19 R14 ; R19 := R14
	214	[3096]	CALL     	R17 3 1 ; R17(R18,R19)
	215	[3097]	GETTABLE 	R17 R0 K47 ; R17 := R0["mModularParts"]
	216	[3097]	EQ       	1 R17 K48 ; if R17 == nil then PC := 223
	217	[3097]	JMP      	223 ; PC := 223
	218	[3098]	OP_LOADBOOL	R17 1 0 ; R17 := true
	219	[3099]	SELF     	R18 R16 K49 ; R19 := R16; R18 := R16[0xa6101f7e]
	220	[3099]	GETTABLE 	R20 R0 K47 ; R20 := R0["mModularParts"]
	221	[3099]	MOVE     	R21 R17 ; R21 := R17
	222	[3099]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	223	[3102]	SELF     	R18 R16 K50 ; R19 := R16; R18 := R16[0x1bf26251]
	224	[3102]	OP_LOADBOOL	R20 0 0 ; R20 := false
	225	[3102]	CALL     	R18 3 1 ; R18(R19,R20)
	226	[3103]	SELF     	R18 R2 K51 ; R19 := R2; R18 := R2[0x40d138a2]
	227	[3103]	GETGLOBAL	R20 K52 ; R20 := 0x25d99d89
	228	[3103]	SELF     	R20 R20 K53 ; R21 := R20; R20 := R20[0x62c81b76]
	229	[3103]	CALL     	R20 2 2 ; R20 := R20(R21)
	230	[3103]	MOVE     	R21 R16 ; R21 := R16
	231	[3103]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	232	[3107]	GETGLOBAL	R18 K1 ; R18 := 0xbe190284
	233	[3107]	SELF     	R18 R18 K2 ; R19 := R18; R18 := R18[0x7cf8123f]
	234	[3107]	LOADK    	R20 := 0.000000
	235	[3107]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	236	[3108]	GETGLOBAL	R19 K1 ; R19 := 0xbe190284
	237	[3108]	SELF     	R19 R19 K2 ; R20 := R19; R19 := R19[0x7cf8123f]
	238	[3108]	LOADK    	R21 := 3.000000
	239	[3108]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	240	[3109]	GETGLOBAL	R20 K1 ; R20 := 0xbe190284
	241	[3109]	SELF     	R20 R20 K54 ; R21 := R20; R20 := R20[0x1e0f3010]
	242	[3109]	MOVE     	R22 R18 ; R22 := R18
	243	[3109]	MOVE     	R23 R2 ; R23 := R2
	244	[3109]	MOVE     	R24 R19 ; R24 := R19
	245	[3109]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	246	[3110]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	247	[3110]	GETUPVAL 	R21 U1 ; R21 := U1
	248	[3110]	CALL     	R20 2 2 ; R20 := R20(R21)
	249	[3110]	TEST     	R20 1 ; if R20 then PC := 255
	250	[3110]	JMP      	255 ; PC := 255
	251	[3111]	GETUPVAL 	R20 U1 ; R20 := U1
	252	[3111]	SETTABLE 	R20 K55 R2 ; R20["petAvatar"] := R2
	253	[3112]	GETUPVAL 	R20 U1 ; R20 := U1
	254	[3112]	SETTABLE 	R20 K56 R11 ; R20["petAgent"] := R11
	255	[3114]	RETURN   	R0 1 ; return 

function #54 <?:3116,3120> (12 instructions, 48 bytes at 000002112B425D80)
1 param, 5 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[3117]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0x768274d6]
	2	[3117]	OP_LOADBOOL	R3 0 0 ; R3 := false
	3	[3117]	OP_LOADBOOL	R4 1 0 ; R4 := true
	4	[3117]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	5	[3118]	GETGLOBAL	R1 K1 ; R1 := 0xcbd666e1
	6	[3118]	LOADK    	R2 := 0.000000
	7	[3118]	CALL     	R1 2 1 ; R1(R2)
	8	[3119]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0x768274d6]
	9	[3119]	OP_LOADBOOL	R3 1 0 ; R3 := true
	10	[3119]	OP_LOADBOOL	R4 1 0 ; R4 := true
	11	[3119]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	12	[3120]	RETURN   	R0 1 ; return 

function #55 <?:3122,3168> (116 instructions, 464 bytes at 000002112B425EC0)
0 params, 25 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[3123]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3123]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[3123]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3123]	TEST     	R0 1 ; if R0 then PC := 11
	5	[3123]	JMP      	11 ; PC := 11
	6	[3123]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[3123]	GETGLOBAL	R1 K2 ; R1 := mInventory
	8	[3123]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[3123]	TEST     	R0 0 ; if not R0 then PC := 12
	10	[3123]	JMP      	12 ; PC := 12
	11	[3124]	RETURN   	R0 1 ; return 
	12	[3127]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	13	[3127]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x3c6b0324]
	14	[3127]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[3128]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	16	[3128]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x9f91f49d]
	17	[3128]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[3129]	TEST     	R0 0 ; if not R0 then PC := 49
	19	[3129]	JMP      	49 ; PC := 49
	20	[3130]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	21	[3130]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x62c81b76]
	22	[3130]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[3131]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0xb61abfd2]
	24	[3131]	LOADK    	R5 := 1.000000
	25	[3131]	LOADK    	R6 := 0.000000
	26	[3131]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	27	[3132]	GETGLOBAL	R4 K2 ; R4 := mInventory
	28	[3132]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xa855881a]
	29	[3132]	CALL     	R4 2 2 ; R4 := R4(R5)
	30	[3133]	LOADK    	R5 := 1.000000
	31	[3133]	LEN      	R6 R4 ; R6 := # R4
	32	[3133]	LOADK    	R7 := 1.000000
	33	[3133]	FORPREP  	R5 47 ; R5 -= R7; PC := 47
	34	[3134]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	35	[3134]	GETTABLE 	R9 R9 K9 ; R9 := R9["mItemId"]
	36	[3134]	GETTABLE 	R9 R9 K10 ; R9 := R9["mId"]
	37	[3134]	GETTABLE 	R10 R3 K9 ; R10 := R3["mItemId"]
	38	[3134]	GETTABLE 	R10 R10 K10 ; R10 := R10["mId"]
	39	[3134]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 47
	40	[3134]	JMP      	47 ; PC := 47
	41	[3135]	GETUPVAL 	R9 U0 ; R9 := U0
	42	[3135]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	43	[3135]	GETTABLE 	R11 R4 R8 ; R11 := R4[R8]
	44	[3135]	GETTABLE 	R11 R11 K11 ; R11 := R11["mItemType"]
	45	[3135]	CALL     	R9 3 1 ; R9(R10,R11)
	46	[3136]	JMP      	79 ; PC := 79
	47	[3133]	FORLOOP  	R5 34 ; R5 += R7; if R5 <= R6 then begin PC := 34; R8 := R5 end
	48	[3138]	JMP      	79 ; PC := 79
	49	[3139]	TEST     	R1 0 ; if not R1 then PC := 79
	50	[3139]	JMP      	79 ; PC := 79
	51	[3140]	GETGLOBAL	R9 K1 ; R9 := 0x25d99d89
	52	[3140]	SELF     	R9 R9 K5 ; R10 := R9; R9 := R9[0x62c81b76]
	53	[3140]	CALL     	R9 2 2 ; R9 := R9(R10)
	54	[3141]	SELF     	R10 R9 K6 ; R11 := R9; R10 := R9[0xb61abfd2]
	55	[3141]	LOADK    	R12 := 1.000000
	56	[3141]	LOADK    	R13 := 0.000000
	57	[3141]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	58	[3142]	GETGLOBAL	R11 K2 ; R11 := mInventory
	59	[3142]	SELF     	R11 R11 K12 ; R12 := R11; R11 := R11[0x91a3eddf]
	60	[3142]	CALL     	R11 2 2 ; R11 := R11(R12)
	61	[3143]	LOADK    	R12 := 1.000000
	62	[3143]	LEN      	R13 R11 ; R13 := # R11
	63	[3143]	LOADK    	R14 := 1.000000
	64	[3143]	FORPREP  	R12 78 ; R12 -= R14; PC := 78
	65	[3144]	GETTABLE 	R16 R11 R15 ; R16 := R11[R15]
	66	[3144]	GETTABLE 	R16 R16 K9 ; R16 := R16["mItemId"]
	67	[3144]	GETTABLE 	R16 R16 K10 ; R16 := R16["mId"]
	68	[3144]	GETTABLE 	R17 R10 K9 ; R17 := R10["mItemId"]
	69	[3144]	GETTABLE 	R17 R17 K10 ; R17 := R17["mId"]
	70	[3144]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 78
	71	[3144]	JMP      	78 ; PC := 78
	72	[3145]	GETUPVAL 	R16 U1 ; R16 := U1
	73	[3145]	GETTABLE 	R17 R11 R15 ; R17 := R11[R15]
	74	[3145]	GETTABLE 	R18 R11 R15 ; R18 := R11[R15]
	75	[3145]	GETTABLE 	R18 R18 K11 ; R18 := R18["mItemType"]
	76	[3145]	CALL     	R16 3 1 ; R16(R17,R18)
	77	[3146]	JMP      	79 ; PC := 79
	78	[3143]	FORLOOP  	R12 65 ; R12 += R14; if R12 <= R13 then begin PC := 65; R15 := R12 end
	79	[3151]	TEST     	R0 1 ; if R0 then PC := 116
	80	[3151]	JMP      	116 ; PC := 116
	81	[3152]	GETGLOBAL	R16 K2 ; R16 := mInventory
	82	[3152]	SELF     	R16 R16 K8 ; R17 := R16; R16 := R16[0xa855881a]
	83	[3152]	CALL     	R16 2 2 ; R16 := R16(R17)
	84	[3153]	LOADK    	R17 := 1.000000
	85	[3153]	LEN      	R18 R16 ; R18 := # R16
	86	[3153]	LOADK    	R19 := 1.000000
	87	[3153]	FORPREP  	R17 100 ; R17 -= R19; PC := 100
	88	[3154]	GETTABLE 	R21 R16 R20 ; R21 := R16[R20]
	89	[3154]	GETTABLE 	R21 R21 K13 ; R21 := R21["mDetails"]
	90	[3154]	GETTABLE 	R21 R21 K14 ; R21 := R21["mStatus"]
	91	[3154]	EQ       	1 R21 K15 ; if R21 == 3.000000 then PC := 100
	92	[3154]	JMP      	100 ; PC := 100
	93	[3155]	GETUPVAL 	R21 U0 ; R21 := U0
	94	[3155]	GETTABLE 	R22 R16 R20 ; R22 := R16[R20]
	95	[3155]	GETTABLE 	R23 R16 R20 ; R23 := R16[R20]
	96	[3155]	GETTABLE 	R23 R23 K11 ; R23 := R23["mItemType"]
	97	[3155]	CALL     	R21 3 1 ; R21(R22,R23)
	98	[3156]	OP_LOADBOOL	R0 1 0 ; R0 := true
	99	[3157]	JMP      	101 ; PC := 101
	100	[3153]	FORLOOP  	R17 88 ; R17 += R19; if R17 <= R18 then begin PC := 88; R20 := R17 end
	101	[3161]	TEST     	R0 1 ; if R0 then PC := 116
	102	[3161]	JMP      	116 ; PC := 116
	103	[3162]	GETGLOBAL	R21 K16 ; R21 := 0xbe190284
	104	[3162]	SELF     	R21 R21 K17 ; R22 := R21; R21 := R21[0x7cf8123f]
	105	[3162]	LOADK    	R23 := 1.000000
	106	[3162]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	107	[3163]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	108	[3163]	MOVE     	R23 R21 ; R23 := R21
	109	[3163]	CALL     	R22 2 2 ; R22 := R22(R23)
	110	[3163]	TEST     	R22 1 ; if R22 then PC := 116
	111	[3163]	JMP      	116 ; PC := 116
	112	[3164]	GETGLOBAL	R22 K18 ; R22 := 0x89326c93
	113	[3164]	SELF     	R22 R22 K19 ; R23 := R22; R22 := R22[0x59c96e77]
	114	[3164]	MOVE     	R24 R21 ; R24 := R21
	115	[3164]	CALL     	R22 3 1 ; R22(R23,R24)
	116	[3168]	RETURN   	R0 1 ; return 

function #56 <?:3170,3478> (846 instructions, 3384 bytes at 000002112B426460)
0 params, 43 slots, 12 upvalues, 0 locals, 142 constants, 0 functions
	1	[3171]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[3171]	SETTABLE 	R0 K1 K2 ; R0["ConsumablesElements"] := nil
	3	[3172]	GETGLOBAL	R0 K0 ; R0 := _T
	4	[3172]	SETTABLE 	R0 K3 K2 ; R0["EmotesElements"] := nil
	5	[3173]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[3173]	SETTABLE 	R0 K4 K2 ; R0["InfoPopup_Data"] := nil
	7	[3174]	GETGLOBAL	R0 K0 ; R0 := _T
	8	[3174]	SETTABLE 	R0 K5 K2 ; R0["CurrentSearchTerm"] := nil
	9	[3176]	GETGLOBAL	R0 K6 ; R0 := 0x89326c93
	10	[3176]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x46a0ebf5]
	11	[3176]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[3176]	GETTABLE 	R2 R2 K8 ; R2 := R2["TELEPORT_TRIGGER"]
	13	[3176]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	14	[3177]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	15	[3177]	MOVE     	R2 R0 ; R2 := R0
	16	[3177]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[3177]	TEST     	R1 1 ; if R1 then PC := 21
	18	[3177]	JMP      	21 ; PC := 21
	19	[3178]	SELF     	R1 R0 K10 ; R2 := R0; R1 := R0[0x383d2e7d]
	20	[3178]	CALL     	R1 2 1 ; R1(R2)
	21	[3181]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	22	[3181]	GETGLOBAL	R2 K11 ; R2 := mEvoMovie
	23	[3181]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[3181]	TEST     	R1 1 ; if R1 then PC := 31
	25	[3181]	JMP      	31 ; PC := 31
	26	[3182]	GETGLOBAL	R1 K11 ; R1 := mEvoMovie
	27	[3182]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xe4162eed]
	28	[3182]	LOADK    	R3 K13 ; R3 := "Close"
	29	[3182]	LOADK    	R4 K14 ; R4 := ""
	30	[3182]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	31	[3185]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	32	[3185]	GETGLOBAL	R2 K0 ; R2 := _T
	33	[3185]	GETTABLE 	R2 R2 K15 ; R2 := R2["IsInScreenStack"]
	34	[3185]	CALL     	R1 2 2 ; R1 := R1(R2)
	35	[3185]	TEST     	R1 1 ; if R1 then PC := 52
	36	[3185]	JMP      	52 ; PC := 52
	37	[3185]	GETGLOBAL	R1 K0 ; R1 := _T
	38	[3185]	GETTABLE 	R1 R1 K16 ; R1 := R1[0x1c5b5b33]
	39	[3185]	LOADK    	R2 K17 ; R2 := "LoadOut"
	40	[3185]	CALL     	R1 2 2 ; R1 := R1(R2)
	41	[3185]	TEST     	R1 0 ; if not R1 then PC := 52
	42	[3185]	JMP      	52 ; PC := 52
	43	[3185]	GETGLOBAL	R1 K0 ; R1 := _T
	44	[3185]	GETTABLE 	R1 R1 K16 ; R1 := R1[0x1c5b5b33]
	45	[3185]	LOADK    	R2 K18 ; R2 := "UpgradeCards"
	46	[3185]	CALL     	R1 2 2 ; R1 := R1(R2)
	47	[3185]	TEST     	R1 1 ; if R1 then PC := 52
	48	[3185]	JMP      	52 ; PC := 52
	49	[3188]	GETGLOBAL	R1 K0 ; R1 := _T
	50	[3188]	GETTABLE 	R1 R1 K19 ; R1 := R1[0x021c8cce]
	51	[3188]	CALL     	R1 1 1 ; R1()
	52	[3191]	GETGLOBAL	R1 K0 ; R1 := _T
	53	[3191]	GETTABLE 	R1 R1 K20 ; R1 := R1["MenuSuitAvatar"]
	54	[3192]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	55	[3192]	MOVE     	R3 R1 ; R3 := R1
	56	[3192]	CALL     	R2 2 2 ; R2 := R2(R3)
	57	[3192]	TEST     	R2 1 ; if R2 then PC := 369
	58	[3192]	JMP      	369 ; PC := 369
	59	[3192]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	60	[3192]	GETGLOBAL	R3 K21 ; R3 := 0xbe190284
	61	[3192]	CALL     	R2 2 2 ; R2 := R2(R3)
	62	[3192]	TEST     	R2 1 ; if R2 then PC := 369
	63	[3192]	JMP      	369 ; PC := 369
	64	[3192]	GETGLOBAL	R2 K0 ; R2 := _T
	65	[3192]	GETTABLE 	R2 R2 K16 ; R2 := R2[0x1c5b5b33]
	66	[3192]	LOADK    	R3 K17 ; R3 := "LoadOut"
	67	[3192]	CALL     	R2 2 2 ; R2 := R2(R3)
	68	[3192]	TEST     	R2 1 ; if R2 then PC := 369
	69	[3192]	JMP      	369 ; PC := 369
	70	[3193]	GETGLOBAL	R2 K0 ; R2 := _T
	71	[3193]	SETTABLE 	R2 K22 R1 ; R2["ArsenalAvatar"] := R1
	72	[3194]	SELF     	R2 R1 K23 ; R3 := R1; R2 := R1[0x768274d6]
	73	[3194]	OP_LOADBOOL	R4 0 0 ; R4 := false
	74	[3194]	OP_LOADBOOL	R5 1 0 ; R5 := true
	75	[3194]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	76	[3196]	GETGLOBAL	R2 K0 ; R2 := _T
	77	[3196]	GETTABLE 	R2 R2 K24 ; R2 := R2["MenuSentinel"]
	78	[3197]	GETGLOBAL	R3 K9 ; R3 := 0x7b998233
	79	[3197]	MOVE     	R4 R2 ; R4 := R2
	80	[3197]	CALL     	R3 2 2 ; R3 := R3(R4)
	81	[3197]	TEST     	R3 1 ; if R3 then PC := 90
	82	[3197]	JMP      	90 ; PC := 90
	83	[3198]	SELF     	R3 R2 K23 ; R4 := R2; R3 := R2[0x768274d6]
	84	[3198]	OP_LOADBOOL	R5 0 0 ; R5 := false
	85	[3198]	OP_LOADBOOL	R6 1 0 ; R6 := true
	86	[3198]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	87	[3199]	SELF     	R3 R2 K25 ; R4 := R2; R3 := R2[0x044b7be8]
	88	[3199]	OP_LOADBOOL	R5 0 0 ; R5 := false
	89	[3199]	CALL     	R3 3 1 ; R3(R4,R5)
	90	[3202]	GETGLOBAL	R3 K6 ; R3 := 0x89326c93
	91	[3202]	SELF     	R3 R3 K26 ; R4 := R3; R3 := R3[0xfb64e76c]
	92	[3202]	CALL     	R3 2 2 ; R3 := R3(R4)
	93	[3203]	GETGLOBAL	R4 K9 ; R4 := 0x7b998233
	94	[3203]	MOVE     	R5 R3 ; R5 := R3
	95	[3203]	CALL     	R4 2 2 ; R4 := R4(R5)
	96	[3203]	TEST     	R4 1 ; if R4 then PC := 183
	97	[3203]	JMP      	183 ; PC := 183
	98	[3204]	SELF     	R4 R3 K27 ; R5 := R3; R4 := R3[0xa534c3ac]
	99	[3204]	CALL     	R4 2 2 ; R4 := R4(R5)
	100	[3205]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	101	[3205]	MOVE     	R6 R4 ; R6 := R4
	102	[3205]	CALL     	R5 2 2 ; R5 := R5(R6)
	103	[3205]	TEST     	R5 1 ; if R5 then PC := 106
	104	[3205]	JMP      	106 ; PC := 106
	105	[3206]	MOVE     	R1 R4 ; R1 := R4
	106	[3209]	GETGLOBAL	R5 K21 ; R5 := 0xbe190284
	107	[3209]	SELF     	R5 R5 K28 ; R6 := R5; R5 := R5[0xf2deaf69]
	108	[3209]	GETGLOBAL	R7 K29 ; R7 := gLotusPhotoBoothGameRulesType
	109	[3209]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	110	[3209]	TEST     	R5 0 ; if not R5 then PC := 171
	111	[3209]	JMP      	171 ; PC := 171
	112	[3211]	SELF     	R5 R1 K30 ; R6 := R1; R5 := R1[0xde321e6f]
	113	[3211]	CALL     	R5 2 2 ; R5 := R5(R6)
	114	[3211]	SELF     	R5 R5 K31 ; R6 := R5; R5 := R5[0xf7d48ee0]
	115	[3211]	CALL     	R5 2 2 ; R5 := R5(R6)
	116	[3212]	SELF     	R6 R5 K28 ; R7 := R5; R6 := R5[0xf2deaf69]
	117	[3212]	GETGLOBAL	R8 K32 ; R8 := 0x68564c44
	118	[3212]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	119	[3212]	TEST     	R6 0 ; if not R6 then PC := 154
	120	[3212]	JMP      	154 ; PC := 154
	121	[3212]	GETGLOBAL	R6 K9 ; R6 := 0x7b998233
	122	[3212]	GETGLOBAL	R7 K0 ; R7 := _T
	123	[3212]	GETTABLE 	R7 R7 K33 ; R7 := R7["INFESTED_DecoState"]
	124	[3212]	CALL     	R6 2 2 ; R6 := R6(R7)
	125	[3212]	TEST     	R6 1 ; if R6 then PC := 154
	126	[3212]	JMP      	154 ; PC := 154
	127	[3212]	GETGLOBAL	R6 K9 ; R6 := 0x7b998233
	128	[3212]	GETGLOBAL	R7 K0 ; R7 := _T
	129	[3212]	GETTABLE 	R7 R7 K33 ; R7 := R7["INFESTED_DecoState"]
	130	[3212]	GETGLOBAL	R8 K0 ; R8 := _T
	131	[3212]	GETTABLE 	R8 R8 K20 ; R8 := R8["MenuSuitAvatar"]
	132	[3212]	SELF     	R8 R8 K34 ; R9 := R8; R8 := R8[0x388577d5]
	133	[3212]	CALL     	R8 2 2 ; R8 := R8(R9)
	134	[3212]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	135	[3212]	CALL     	R6 2 2 ; R6 := R6(R7)
	136	[3212]	TEST     	R6 1 ; if R6 then PC := 154
	137	[3212]	JMP      	154 ; PC := 154
	138	[3213]	GETGLOBAL	R6 K35 ; R6 := 0x4ec73e73
	139	[3213]	GETGLOBAL	R7 K0 ; R7 := _T
	140	[3213]	GETTABLE 	R7 R7 K33 ; R7 := R7["INFESTED_DecoState"]
	141	[3213]	GETGLOBAL	R8 K0 ; R8 := _T
	142	[3213]	GETTABLE 	R8 R8 K20 ; R8 := R8["MenuSuitAvatar"]
	143	[3213]	SELF     	R8 R8 K34 ; R9 := R8; R8 := R8[0x388577d5]
	144	[3213]	CALL     	R8 2 2 ; R8 := R8(R9)
	145	[3213]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	146	[3213]	GETTABLE 	R7 R7 K36 ; R7 := R7["openDecos"]
	147	[3213]	CALL     	R6 2 3 ; R6,R7 := R6(R7)
	148	[3214]	GETGLOBAL	R8 K0 ; R8 := _T
	149	[3214]	GETTABLE 	R8 R8 K37 ; R8 := R8[0x8095dfb5]
	150	[3214]	MOVE     	R9 R1 ; R9 := R1
	151	[3214]	MOVE     	R10 R7 ; R10 := R7
	152	[3214]	CALL     	R8 3 1 ; R8(R9,R10)
	153	[3214]	JMP      	171 ; PC := 171
	154	[3215]	SELF     	R8 R5 K28 ; R9 := R5; R8 := R5[0xf2deaf69]
	155	[3215]	GETGLOBAL	R10 K38 ; R10 := 0x2ccd2c30
	156	[3215]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	157	[3215]	TEST     	R8 0 ; if not R8 then PC := 171
	158	[3215]	JMP      	171 ; PC := 171
	159	[3215]	GETGLOBAL	R8 K0 ; R8 := _T
	160	[3215]	GETTABLE 	R8 R8 K39 ; R8 := R8["RUNNER_DecoState"]
	161	[3215]	EQ       	1 R8 K2 ; if R8 == nil then PC := 171
	162	[3215]	JMP      	171 ; PC := 171
	163	[3216]	GETGLOBAL	R8 K0 ; R8 := _T
	164	[3216]	GETTABLE 	R8 R8 K40 ; R8 := R8[0x3ef5c227]
	165	[3216]	MOVE     	R9 R1 ; R9 := R1
	166	[3216]	GETGLOBAL	R10 K0 ; R10 := _T
	167	[3216]	GETTABLE 	R10 R10 K41 ; R10 := R10[0x7fab9289]
	168	[3216]	MOVE     	R11 R1 ; R11 := R1
	169	[3216]	CALL     	R10 2 0 ; R10,... := R10(R11)
	170	[3216]	CALL     	R8 0 1 ; R8(R9,...)
	171	[3220]	GETGLOBAL	R8 K0 ; R8 := _T
	172	[3220]	GETTABLE 	R8 R8 K42 ; R8 := R8["WRAITH_ForceBackToWraith"]
	173	[3220]	TEST     	R8 0 ; if not R8 then PC := 181
	174	[3220]	JMP      	181 ; PC := 181
	175	[3221]	GETGLOBAL	R8 K0 ; R8 := _T
	176	[3221]	GETTABLE 	R8 R8 K43 ; R8 := R8[0xcb159ef4]
	177	[3221]	SELF     	R9 R3 K44 ; R10 := R3; R9 := R3[0xbb610e5b]
	178	[3221]	CALL     	R9 2 2 ; R9 := R9(R10)
	179	[3221]	OP_LOADBOOL	R10 1 0 ; R10 := true
	180	[3221]	CALL     	R8 3 1 ; R8(R9,R10)
	181	[3224]	GETGLOBAL	R8 K0 ; R8 := _T
	182	[3224]	SETTABLE 	R8 K20 R1 ; R8["MenuSuitAvatar"] := R1
	183	[3227]	GETGLOBAL	R8 K9 ; R8 := 0x7b998233
	184	[3227]	MOVE     	R9 R1 ; R9 := R1
	185	[3227]	CALL     	R8 2 2 ; R8 := R8(R9)
	186	[3227]	TEST     	R8 1 ; if R8 then PC := 192
	187	[3227]	JMP      	192 ; PC := 192
	188	[3228]	SELF     	R8 R1 K23 ; R9 := R1; R8 := R1[0x768274d6]
	189	[3228]	OP_LOADBOOL	R10 1 0 ; R10 := true
	190	[3228]	OP_LOADBOOL	R11 1 0 ; R11 := true
	191	[3228]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	192	[3231]	GETGLOBAL	R8 K0 ; R8 := _T
	193	[3231]	GETTABLE 	R8 R8 K45 ; R8 := R8["LoadoutSaveRequired"]
	194	[3231]	TEST     	R8 1 ; if R8 then PC := 204
	195	[3231]	JMP      	204 ; PC := 204
	196	[3231]	GETGLOBAL	R8 K0 ; R8 := _T
	197	[3231]	GETTABLE 	R8 R8 K46 ; R8 := R8["SimulacrumFocusSchoolChanged"]
	198	[3231]	TEST     	R8 1 ; if R8 then PC := 204
	199	[3231]	JMP      	204 ; PC := 204
	200	[3231]	GETGLOBAL	R8 K0 ; R8 := _T
	201	[3231]	GETTABLE 	R8 R8 K47 ; R8 := R8["upgradeItemLot"]
	202	[3231]	EQ       	0 R8 K49 ; if R8 ~= 4.000000 then PC := 283
	203	[3231]	JMP      	283 ; PC := 283
	204	[3232]	GETGLOBAL	R8 K0 ; R8 := _T
	205	[3232]	GETTABLE 	R8 R8 K47 ; R8 := R8["upgradeItemLot"]
	206	[3232]	EQ       	0 R8 K49 ; if R8 ~= 4.000000 then PC := 236
	207	[3232]	JMP      	236 ; PC := 236
	208	[3233]	GETGLOBAL	R8 K6 ; R8 := 0x89326c93
	209	[3233]	SELF     	R8 R8 K50 ; R9 := R8; R8 := R8[0xfb669000]
	210	[3233]	GETGLOBAL	R10 K51 ; R10 := 0xd0550e92
	211	[3233]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	212	[3234]	LOADK    	R9 := 1.000000
	213	[3234]	LEN      	R10 R8 ; R10 := # R8
	214	[3234]	LOADK    	R11 := 1.000000
	215	[3234]	FORPREP  	R9 220 ; R9 -= R11; PC := 220
	216	[3235]	GETGLOBAL	R13 K6 ; R13 := 0x89326c93
	217	[3235]	SELF     	R13 R13 K52 ; R14 := R13; R13 := R13[0x59c96e77]
	218	[3235]	GETTABLE 	R15 R8 R12 ; R15 := R8[R12]
	219	[3235]	CALL     	R13 3 1 ; R13(R14,R15)
	220	[3234]	FORLOOP  	R9 216 ; R9 += R11; if R9 <= R10 then begin PC := 216; R12 := R9 end
	221	[3238]	GETGLOBAL	R13 K6 ; R13 := 0x89326c93
	222	[3238]	SELF     	R13 R13 K50 ; R14 := R13; R13 := R13[0xfb669000]
	223	[3238]	GETGLOBAL	R15 K53 ; R15 := 0x7ed0a956
	224	[3238]	LOADK    	R16 K54 ; R16 := "/Lotus/Weapons/Tenno/Speedball/AttractBallTrigger"
	225	[3238]	CALL     	R15 2 0 ; R15,... := R15(R16)
	226	[3238]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	227	[3239]	LOADK    	R14 := 1.000000
	228	[3239]	LEN      	R15 R13 ; R15 := # R13
	229	[3239]	LOADK    	R16 := 1.000000
	230	[3239]	FORPREP  	R14 235 ; R14 -= R16; PC := 235
	231	[3240]	GETGLOBAL	R18 K6 ; R18 := 0x89326c93
	232	[3240]	SELF     	R18 R18 K52 ; R19 := R18; R18 := R18[0x59c96e77]
	233	[3240]	GETTABLE 	R20 R13 R17 ; R20 := R13[R17]
	234	[3240]	CALL     	R18 3 1 ; R18(R19,R20)
	235	[3239]	FORLOOP  	R14 231 ; R14 += R16; if R14 <= R15 then begin PC := 231; R17 := R14 end
	236	[3244]	GETGLOBAL	R18 K9 ; R18 := 0x7b998233
	237	[3244]	MOVE     	R19 R3 ; R19 := R3
	238	[3244]	CALL     	R18 2 2 ; R18 := R18(R19)
	239	[3244]	TEST     	R18 1 ; if R18 then PC := 273
	240	[3244]	JMP      	273 ; PC := 273
	241	[3244]	GETGLOBAL	R18 K21 ; R18 := 0xbe190284
	242	[3244]	SELF     	R18 R18 K28 ; R19 := R18; R18 := R18[0xf2deaf69]
	243	[3244]	GETGLOBAL	R20 K55 ; R20 := gLotusSandBoxGameRulesType
	244	[3244]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	245	[3244]	TEST     	R18 0 ; if not R18 then PC := 273
	246	[3244]	JMP      	273 ; PC := 273
	247	[3244]	GETGLOBAL	R18 K0 ; R18 := _T
	248	[3244]	GETTABLE 	R18 R18 K56 ; R18 := R18["InSimulacrum"]
	249	[3244]	TEST     	R18 0 ; if not R18 then PC := 273
	250	[3244]	JMP      	273 ; PC := 273
	251	[3245]	SELF     	R18 R3 K57 ; R19 := R3; R18 := R3[0xbe524b27]
	252	[3245]	CALL     	R18 2 2 ; R18 := R18(R19)
	253	[3246]	GETGLOBAL	R19 K9 ; R19 := 0x7b998233
	254	[3246]	MOVE     	R20 R18 ; R20 := R18
	255	[3246]	CALL     	R19 2 2 ; R19 := R19(R20)
	256	[3246]	TEST     	R19 1 ; if R19 then PC := 273
	257	[3246]	JMP      	273 ; PC := 273
	258	[3247]	SELF     	R19 R18 K58 ; R20 := R18; R19 := R18[0x80563238]
	259	[3247]	CALL     	R19 2 2 ; R19 := R19(R20)
	260	[3248]	GETGLOBAL	R20 K9 ; R20 := 0x7b998233
	261	[3248]	MOVE     	R21 R19 ; R21 := R19
	262	[3248]	CALL     	R20 2 2 ; R20 := R20(R21)
	263	[3248]	TEST     	R20 1 ; if R20 then PC := 273
	264	[3248]	JMP      	273 ; PC := 273
	265	[3249]	GETGLOBAL	R20 K21 ; R20 := 0xbe190284
	266	[3249]	SELF     	R20 R20 K59 ; R21 := R20; R20 := R20[0x20d53ac3]
	267	[3249]	MOVE     	R22 R3 ; R22 := R3
	268	[3249]	SELF     	R23 R19 K60 ; R24 := R19; R23 := R19[0x62c81b76]
	269	[3249]	CALL     	R23 2 0 ; R23,... := R23(R24)
	270	[3249]	CALL     	R20 0 1 ; R20(R21,...)
	271	[3250]	GETGLOBAL	R20 K0 ; R20 := _T
	272	[3250]	SETTABLE 	R20 K45 K2 ; R20["LoadoutSaveRequired"] := nil
	273	[3255]	GETGLOBAL	R20 K9 ; R20 := 0x7b998233
	274	[3255]	MOVE     	R21 R1 ; R21 := R1
	275	[3255]	CALL     	R20 2 2 ; R20 := R20(R21)
	276	[3255]	TEST     	R20 1 ; if R20 then PC := 283
	277	[3255]	JMP      	283 ; PC := 283
	278	[3256]	SELF     	R20 R1 K61 ; R21 := R1; R20 := R1[0x1ac1655c]
	279	[3256]	CALL     	R20 2 2 ; R20 := R20(R21)
	280	[3256]	SELF     	R20 R20 K62 ; R21 := R20; R20 := R20[0xecd0f9d3]
	281	[3256]	OP_LOADBOOL	R22 0 0 ; R22 := false
	282	[3256]	CALL     	R20 3 1 ; R20(R21,R22)
	283	[3260]	GETUPVAL 	R20 U1 ; R20 := U1
	284	[3260]	GETUPVAL 	R21 U2 ; R21 := U2
	285	[3260]	GETTABLE 	R21 R21 K63 ; R21 := R21["UI_MODE_IN_SPACE_SHIP"]
	286	[3260]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 290
	287	[3260]	JMP      	290 ; PC := 290
	288	[3261]	GETUPVAL 	R20 U3 ; R20 := U3
	289	[3261]	CALL     	R20 1 1 ; R20()
	290	[3265]	GETGLOBAL	R20 K9 ; R20 := 0x7b998233
	291	[3265]	MOVE     	R21 R2 ; R21 := R2
	292	[3265]	CALL     	R20 2 2 ; R20 := R20(R21)
	293	[3265]	TEST     	R20 1 ; if R20 then PC := 304
	294	[3265]	JMP      	304 ; PC := 304
	295	[3265]	SELF     	R20 R2 K28 ; R21 := R2; R20 := R2[0xf2deaf69]
	296	[3265]	GETGLOBAL	R22 K64 ; R22 := gPetAvatarType
	297	[3265]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	298	[3265]	TEST     	R20 0 ; if not R20 then PC := 304
	299	[3265]	JMP      	304 ; PC := 304
	300	[3266]	SELF     	R20 R2 K23 ; R21 := R2; R20 := R2[0x768274d6]
	301	[3266]	OP_LOADBOOL	R22 1 0 ; R22 := true
	302	[3266]	OP_LOADBOOL	R23 1 0 ; R23 := true
	303	[3266]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	304	[3269]	GETGLOBAL	R20 K9 ; R20 := 0x7b998233
	305	[3269]	MOVE     	R21 R1 ; R21 := R1
	306	[3269]	CALL     	R20 2 2 ; R20 := R20(R21)
	307	[3269]	TEST     	R20 1 ; if R20 then PC := 358
	308	[3269]	JMP      	358 ; PC := 358
	309	[3271]	OP_LOADBOOL	R20 1 0 ; R20 := true
	310	[3272]	GETGLOBAL	R21 K9 ; R21 := 0x7b998233
	311	[3272]	GETGLOBAL	R22 K65 ; R22 := 0x25d99d89
	312	[3272]	CALL     	R21 2 2 ; R21 := R21(R22)
	313	[3272]	TEST     	R21 1 ; if R21 then PC := 329
	314	[3272]	JMP      	329 ; PC := 329
	315	[3273]	GETGLOBAL	R21 K65 ; R21 := 0x25d99d89
	316	[3273]	SELF     	R21 R21 K60 ; R22 := R21; R21 := R21[0x62c81b76]
	317	[3273]	CALL     	R21 2 2 ; R21 := R21(R22)
	318	[3274]	SELF     	R22 R21 K66 ; R23 := R21; R22 := R21[0x8af486d8]
	319	[3274]	CALL     	R22 2 2 ; R22 := R22(R23)
	320	[3274]	TEST     	R22 0 ; if not R22 then PC := 329
	321	[3274]	JMP      	329 ; PC := 329
	322	[3275]	GETUPVAL 	R22 U1 ; R22 := U1
	323	[3275]	GETUPVAL 	R23 U2 ; R23 := U2
	324	[3275]	GETTABLE 	R23 R23 K63 ; R23 := R23["UI_MODE_IN_SPACE_SHIP"]
	325	[3275]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 328
	326	[3275]	JMP      	328 ; PC := 328
	327	[3275]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 328
	328	[3275]	OP_LOADBOOL	R20 1 0 ; R20 := true
	329	[3279]	SELF     	R22 R1 K30 ; R23 := R1; R22 := R1[0xde321e6f]
	330	[3279]	CALL     	R22 2 2 ; R22 := R22(R23)
	331	[3279]	SELF     	R22 R22 K67 ; R23 := R22; R22 := R22[0x2676deee]
	332	[3279]	CALL     	R22 2 2 ; R22 := R22(R23)
	333	[3279]	MOVE     	R2 R22 ; R2 := R22
	334	[3280]	GETGLOBAL	R22 K0 ; R22 := _T
	335	[3280]	SETTABLE 	R22 K24 R2 ; R22["MenuSentinel"] := R2
	336	[3281]	GETGLOBAL	R22 K9 ; R22 := 0x7b998233
	337	[3281]	MOVE     	R23 R2 ; R23 := R2
	338	[3281]	CALL     	R22 2 2 ; R22 := R22(R23)
	339	[3281]	TEST     	R22 1 ; if R22 then PC := 355
	340	[3281]	JMP      	355 ; PC := 355
	341	[3281]	TEST     	R20 0 ; if not R20 then PC := 355
	342	[3281]	JMP      	355 ; PC := 355
	343	[3282]	SELF     	R22 R2 K23 ; R23 := R2; R22 := R2[0x768274d6]
	344	[3282]	OP_LOADBOOL	R24 1 0 ; R24 := true
	345	[3282]	OP_LOADBOOL	R25 1 0 ; R25 := true
	346	[3282]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	347	[3283]	SELF     	R22 R2 K61 ; R23 := R2; R22 := R2[0x1ac1655c]
	348	[3283]	CALL     	R22 2 2 ; R22 := R22(R23)
	349	[3283]	SELF     	R22 R22 K68 ; R23 := R22; R22 := R22[0x35577788]
	350	[3283]	OP_LOADBOOL	R24 1 0 ; R24 := true
	351	[3283]	CALL     	R22 3 1 ; R22(R23,R24)
	352	[3284]	SELF     	R22 R2 K25 ; R23 := R2; R22 := R2[0x044b7be8]
	353	[3284]	OP_LOADBOOL	R24 0 0 ; R24 := false
	354	[3284]	CALL     	R22 3 1 ; R22(R23,R24)
	355	[3287]	SELF     	R22 R1 K25 ; R23 := R1; R22 := R1[0x044b7be8]
	356	[3287]	OP_LOADBOOL	R24 0 0 ; R24 := false
	357	[3287]	CALL     	R22 3 1 ; R22(R23,R24)
	358	[3290]	GETGLOBAL	R22 K9 ; R22 := 0x7b998233
	359	[3290]	GETGLOBAL	R23 K0 ; R23 := _T
	360	[3290]	GETTABLE 	R23 R23 K22 ; R23 := R23["ArsenalAvatar"]
	361	[3290]	CALL     	R22 2 2 ; R22 := R22(R23)
	362	[3290]	TEST     	R22 1 ; if R22 then PC := 369
	363	[3290]	JMP      	369 ; PC := 369
	364	[3291]	GETGLOBAL	R22 K6 ; R22 := 0x89326c93
	365	[3291]	SELF     	R22 R22 K52 ; R23 := R22; R22 := R22[0x59c96e77]
	366	[3291]	GETGLOBAL	R24 K0 ; R24 := _T
	367	[3291]	GETTABLE 	R24 R24 K22 ; R24 := R24["ArsenalAvatar"]
	368	[3291]	CALL     	R22 3 1 ; R22(R23,R24)
	369	[3295]	GETGLOBAL	R22 K9 ; R22 := 0x7b998233
	370	[3295]	GETGLOBAL	R23 K69 ; R23 := mConsumablesInstance
	371	[3295]	CALL     	R22 2 2 ; R22 := R22(R23)
	372	[3295]	TEST     	R22 1 ; if R22 then PC := 377
	373	[3295]	JMP      	377 ; PC := 377
	374	[3296]	GETGLOBAL	R22 K69 ; R22 := mConsumablesInstance
	375	[3296]	SELF     	R22 R22 K70 ; R23 := R22; R22 := R22[0x32302b4a]
	376	[3296]	CALL     	R22 2 1 ; R22(R23)
	377	[3299]	GETGLOBAL	R22 K9 ; R22 := 0x7b998233
	378	[3299]	GETGLOBAL	R23 K71 ; R23 := mTennoWayInstance
	379	[3299]	CALL     	R22 2 2 ; R22 := R22(R23)
	380	[3299]	TEST     	R22 1 ; if R22 then PC := 385
	381	[3299]	JMP      	385 ; PC := 385
	382	[3300]	GETGLOBAL	R22 K71 ; R22 := mTennoWayInstance
	383	[3300]	SELF     	R22 R22 K70 ; R23 := R22; R22 := R22[0x32302b4a]
	384	[3300]	CALL     	R22 2 1 ; R22(R23)
	385	[3303]	GETUPVAL 	R22 U4 ; R22 := U4
	386	[3303]	OP_LOADBOOL	R23 0 0 ; R23 := false
	387	[3303]	CALL     	R22 2 1 ; R22(R23)
	388	[3305]	GETGLOBAL	R22 K9 ; R22 := 0x7b998233
	389	[3305]	GETGLOBAL	R23 K21 ; R23 := 0xbe190284
	390	[3305]	CALL     	R22 2 2 ; R22 := R22(R23)
	391	[3305]	TEST     	R22 1 ; if R22 then PC := 398
	392	[3305]	JMP      	398 ; PC := 398
	393	[3306]	GETGLOBAL	R22 K21 ; R22 := 0xbe190284
	394	[3306]	SELF     	R22 R22 K72 ; R23 := R22; R22 := R22[0xc02f2cb8]
	395	[3306]	OP_LOADBOOL	R24 0 0 ; R24 := false
	396	[3306]	OP_LOADBOOL	R25 1 0 ; R25 := true
	397	[3306]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	398	[3309]	GETUPVAL 	R22 U5 ; R22 := U5
	399	[3309]	CALL     	R22 1 2 ; R22 := R22()
	400	[3309]	TEST     	R22 1 ; if R22 then PC := 408
	401	[3309]	JMP      	408 ; PC := 408
	402	[3309]	GETGLOBAL	R22 K0 ; R22 := _T
	403	[3309]	GETTABLE 	R22 R22 K73 ; R22 := R22["previousConsoleTag"]
	404	[3309]	EQ       	0 R22 K74 ; if R22 ~= "Arsenal" then PC := 408
	405	[3309]	JMP      	408 ; PC := 408
	406	[3310]	GETGLOBAL	R22 K0 ; R22 := _T
	407	[3310]	SETTABLE 	R22 K73 K2 ; R22["previousConsoleTag"] := nil
	408	[3313]	GETGLOBAL	R22 K0 ; R22 := _T
	409	[3313]	GETTABLE 	R22 R22 K45 ; R22 := R22["LoadoutSaveRequired"]
	410	[3313]	TEST     	R22 0 ; if not R22 then PC := 419
	411	[3313]	JMP      	419 ; PC := 419
	412	[3313]	GETGLOBAL	R22 K0 ; R22 := _T
	413	[3313]	GETTABLE 	R22 R22 K56 ; R22 := R22["InSimulacrum"]
	414	[3313]	TEST     	R22 1 ; if R22 then PC := 419
	415	[3313]	JMP      	419 ; PC := 419
	416	[3317]	GETGLOBAL	R22 K75 ; R22 := 0xe7f2b02f
	417	[3317]	SELF     	R22 R22 K76 ; R23 := R22; R22 := R22[0xcf1bf52a]
	418	[3317]	CALL     	R22 2 1 ; R22(R23)
	419	[3320]	LOADNIL  	R22 R22 ; R22 := nil
	420	[3321]	GETGLOBAL	R23 K9 ; R23 := 0x7b998233
	421	[3321]	GETGLOBAL	R24 K77 ; R24 := mArsenalConsole
	422	[3321]	CALL     	R23 2 2 ; R23 := R23(R24)
	423	[3321]	TEST     	R23 1 ; if R23 then PC := 429
	424	[3321]	JMP      	429 ; PC := 429
	425	[3322]	GETGLOBAL	R23 K77 ; R23 := mArsenalConsole
	426	[3322]	SELF     	R23 R23 K78 ; R24 := R23; R23 := R23[0xd1586535]
	427	[3322]	CALL     	R23 2 2 ; R23 := R23(R24)
	428	[3322]	MOVE     	R22 R23 ; R22 := R23
	429	[3325]	GETUPVAL 	R23 U6 ; R23 := U6
	430	[3325]	GETTABLE 	R23 R23 K79 ; R23 := R23[0x2a1108a9]
	431	[3325]	LOADK    	R24 K80 ; R24 := "OnExitedArsenal"
	432	[3325]	MOVE     	R25 R22 ; R25 := R22
	433	[3325]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	434	[3326]	GETGLOBAL	R24 K9 ; R24 := 0x7b998233
	435	[3326]	MOVE     	R25 R23 ; R25 := R23
	436	[3326]	CALL     	R24 2 2 ; R24 := R24(R25)
	437	[3326]	TEST     	R24 1 ; if R24 then PC := 442
	438	[3326]	JMP      	442 ; PC := 442
	439	[3327]	SELF     	R24 R23 K81 ; R25 := R23; R24 := R23[0x8eb2112d]
	440	[3327]	LOADK    	R26 K82 ; R26 := "Execute"
	441	[3327]	CALL     	R24 3 1 ; R24(R25,R26)
	442	[3330]	GETGLOBAL	R24 K83 ; R24 := 0x9ba7909f
	443	[3330]	SELF     	R24 R24 K84 ; R25 := R24; R24 := R24[0xbcfb64ab]
	444	[3330]	GETGLOBAL	R26 K85 ; R26 := 0x10179b0e
	445	[3330]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	446	[3331]	GETGLOBAL	R25 K9 ; R25 := 0x7b998233
	447	[3331]	MOVE     	R26 R24 ; R26 := R24
	448	[3331]	CALL     	R25 2 2 ; R25 := R25(R26)
	449	[3331]	TEST     	R25 1 ; if R25 then PC := 454
	450	[3331]	JMP      	454 ; PC := 454
	451	[3332]	SELF     	R25 R24 K86 ; R26 := R24; R25 := R24[0x41d3c627]
	452	[3332]	OP_LOADBOOL	R27 0 0 ; R27 := false
	453	[3332]	CALL     	R25 3 1 ; R25(R26,R27)
	454	[3335]	GETGLOBAL	R25 K0 ; R25 := _T
	455	[3335]	SETTABLE 	R25 K87 K2 ; R25["gToolTip"] := nil
	456	[3336]	GETGLOBAL	R25 K0 ; R25 := _T
	457	[3336]	SETTABLE 	R25 K88 K2 ; R25["SlideAbilityScreen"] := nil
	458	[3338]	GETGLOBAL	R25 K0 ; R25 := _T
	459	[3338]	GETTABLE 	R25 R25 K89 ; R25 := R25["loadoutInProgress"]
	460	[3338]	EQ       	0 R25 K2 ; if R25 ~= nil then PC := 484
	461	[3338]	JMP      	484 ; PC := 484
	462	[3342]	GETGLOBAL	R25 K0 ; R25 := _T
	463	[3342]	SETTABLE 	R25 K90 K2 ; R25["ArsenalPvPOnlyReturnConsole"] := nil
	464	[3344]	GETGLOBAL	R25 K0 ; R25 := _T
	465	[3344]	GETTABLE 	R25 R25 K91 ; R25 := R25["Arsenal_ReturnToNemesis"]
	466	[3344]	TEST     	R25 0 ; if not R25 then PC := 484
	467	[3344]	JMP      	484 ; PC := 484
	468	[3345]	GETGLOBAL	R25 K9 ; R25 := 0x7b998233
	469	[3345]	GETGLOBAL	R26 K92 ; R26 := 0x96540e3a
	470	[3345]	CALL     	R25 2 2 ; R25 := R25(R26)
	471	[3345]	TEST     	R25 1 ; if R25 then PC := 482
	472	[3345]	JMP      	482 ; PC := 482
	473	[3345]	GETGLOBAL	R25 K9 ; R25 := 0x7b998233
	474	[3345]	GETGLOBAL	R26 K83 ; R26 := 0x9ba7909f
	475	[3345]	CALL     	R25 2 2 ; R25 := R25(R26)
	476	[3345]	TEST     	R25 1 ; if R25 then PC := 482
	477	[3345]	JMP      	482 ; PC := 482
	478	[3346]	GETGLOBAL	R25 K83 ; R25 := 0x9ba7909f
	479	[3346]	SELF     	R25 R25 K93 ; R26 := R25; R25 := R25[0xcfba257f]
	480	[3346]	GETGLOBAL	R27 K92 ; R27 := 0x96540e3a
	481	[3346]	CALL     	R25 3 1 ; R25(R26,R27)
	482	[3349]	GETGLOBAL	R25 K0 ; R25 := _T
	483	[3349]	SETTABLE 	R25 K91 K2 ; R25["Arsenal_ReturnToNemesis"] := nil
	484	[3354]	GETGLOBAL	R25 K0 ; R25 := _T
	485	[3354]	GETTABLE 	R25 R25 K94 ; R25 := R25["ArsenalState"]
	486	[3354]	EQ       	1 R25 K95 ; if R25 == 3.000000 then PC := 542
	487	[3354]	JMP      	542 ; PC := 542
	488	[3354]	GETGLOBAL	R25 K0 ; R25 := _T
	489	[3354]	GETTABLE 	R25 R25 K96 ; R25 := R25["suitTable"]
	490	[3354]	TEST     	R25 0 ; if not R25 then PC := 542
	491	[3354]	JMP      	542 ; PC := 542
	492	[3354]	GETGLOBAL	R25 K9 ; R25 := 0x7b998233
	493	[3354]	GETGLOBAL	R26 K21 ; R26 := 0xbe190284
	494	[3354]	CALL     	R25 2 2 ; R25 := R25(R26)
	495	[3354]	TEST     	R25 1 ; if R25 then PC := 542
	496	[3354]	JMP      	542 ; PC := 542
	497	[3354]	GETGLOBAL	R25 K21 ; R25 := 0xbe190284
	498	[3354]	SELF     	R25 R25 K28 ; R26 := R25; R25 := R25[0xf2deaf69]
	499	[3354]	GETGLOBAL	R27 K29 ; R27 := gLotusPhotoBoothGameRulesType
	500	[3354]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	501	[3354]	TEST     	R25 1 ; if R25 then PC := 542
	502	[3354]	JMP      	542 ; PC := 542
	503	[3355]	GETGLOBAL	R25 K0 ; R25 := _T
	504	[3355]	GETTABLE 	R25 R25 K97 ; R25 := R25["mSpecialSuitMode"]
	505	[3356]	GETGLOBAL	R26 K0 ; R26 := _T
	506	[3356]	SETTABLE 	R26 K97 K2 ; R26["mSpecialSuitMode"] := nil
	507	[3358]	GETGLOBAL	R26 K0 ; R26 := _T
	508	[3358]	GETTABLE 	R26 R26 K96 ; R26 := R26["suitTable"]
	509	[3358]	GETGLOBAL	R27 K0 ; R27 := _T
	510	[3358]	GETTABLE 	R27 R27 K99 ; R27 := R27["DEFAULT_SUIT_ROTATION"]
	511	[3358]	SETTABLE 	R26 K98 R27 ; R26["desiredRot"] := R27
	512	[3359]	GETGLOBAL	R26 K0 ; R26 := _T
	513	[3359]	GETTABLE 	R26 R26 K96 ; R26 := R26["suitTable"]
	514	[3359]	GETGLOBAL	R27 K0 ; R27 := _T
	515	[3359]	GETTABLE 	R27 R27 K96 ; R27 := R27["suitTable"]
	516	[3359]	GETTABLE 	R27 R27 K98 ; R27 := R27["desiredRot"]
	517	[3359]	SETTABLE 	R26 K100 R27 ; R26["lerpRot"] := R27
	518	[3360]	GETGLOBAL	R26 K0 ; R26 := _T
	519	[3360]	GETTABLE 	R26 R26 K96 ; R26 := R26["suitTable"]
	520	[3360]	GETGLOBAL	R27 K102 ; R27 := 0x00046924
	521	[3360]	CALL     	R27 1 2 ; R27 := R27()
	522	[3360]	SETTABLE 	R26 K101 R27 ; R26["lerpHead"] := R27
	523	[3361]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	524	[3361]	GETGLOBAL	R27 K6 ; R27 := 0x89326c93
	525	[3361]	CALL     	R26 2 2 ; R26 := R26(R27)
	526	[3361]	TEST     	R26 1 ; if R26 then PC := 538
	527	[3361]	JMP      	538 ; PC := 538
	528	[3361]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	529	[3361]	MOVE     	R27 R1 ; R27 := R1
	530	[3361]	CALL     	R26 2 2 ; R26 := R26(R27)
	531	[3361]	TEST     	R26 1 ; if R26 then PC := 538
	532	[3361]	JMP      	538 ; PC := 538
	533	[3363]	GETUPVAL 	R26 U7 ; R26 := U7
	534	[3363]	GETTABLE 	R26 R26 K103 ; R26 := R26[0xd4c67576]
	535	[3363]	LOADNIL  	R27 R28 ; R27 := R28 := nil
	536	[3363]	MOVE     	R29 R1 ; R29 := R1
	537	[3363]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	538	[3365]	GETGLOBAL	R26 K0 ; R26 := _T
	539	[3365]	SETTABLE 	R26 K96 K2 ; R26["suitTable"] := nil
	540	[3367]	GETGLOBAL	R26 K0 ; R26 := _T
	541	[3367]	SETTABLE 	R26 K97 R25 ; R26["mSpecialSuitMode"] := R25
	542	[3370]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	543	[3370]	GETGLOBAL	R27 K104 ; R27 := mChildMovie
	544	[3370]	CALL     	R26 2 2 ; R26 := R26(R27)
	545	[3370]	TEST     	R26 1 ; if R26 then PC := 550
	546	[3370]	JMP      	550 ; PC := 550
	547	[3371]	GETGLOBAL	R26 K104 ; R26 := mChildMovie
	548	[3371]	SELF     	R26 R26 K70 ; R27 := R26; R26 := R26[0x32302b4a]
	549	[3371]	CALL     	R26 2 1 ; R26(R27)
	550	[3376]	GETGLOBAL	R26 K0 ; R26 := _T
	551	[3376]	GETUPVAL 	R27 U6 ; R27 := U6
	552	[3376]	GETTABLE 	R27 R27 K106 ; R27 := R27[0x06d055f9]
	553	[3376]	GETGLOBAL	R28 K0 ; R28 := _T
	554	[3376]	GETTABLE 	R28 R28 K16 ; R28 := R28[0x1c5b5b33]
	555	[3376]	LOADK    	R29 K17 ; R29 := "LoadOut"
	556	[3376]	CALL     	R28 2 2 ; R28 := R28(R29)
	557	[3376]	OP_LOADBOOL	R29 1 0 ; R29 := true
	558	[3376]	LOADNIL  	R30 R30 ; R30 := nil
	559	[3376]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	560	[3376]	SETTABLE 	R26 K105 R27 ; R26["mLoadoutInPosition"] := R27
	561	[3378]	GETUPVAL 	R26 U8 ; R26 := U8
	562	[3378]	TEST     	R26 0 ; if not R26 then PC := 567
	563	[3378]	JMP      	567 ; PC := 567
	564	[3379]	GETGLOBAL	R26 K0 ; R26 := _T
	565	[3379]	GETTABLE 	R26 R26 K107 ; R26 := R26[0x80172c74]
	566	[3379]	CALL     	R26 1 1 ; R26()
	567	[3382]	GETGLOBAL	R26 K0 ; R26 := _T
	568	[3382]	SETTABLE 	R26 K108 K109 ; R26["maximumSyndicateScarfIntensity"] := false
	569	[3383]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	570	[3383]	MOVE     	R27 R1 ; R27 := R1
	571	[3383]	CALL     	R26 2 2 ; R26 := R26(R27)
	572	[3383]	TEST     	R26 1 ; if R26 then PC := 647
	573	[3383]	JMP      	647 ; PC := 647
	574	[3383]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	575	[3383]	GETGLOBAL	R27 K6 ; R27 := 0x89326c93
	576	[3383]	CALL     	R26 2 2 ; R26 := R26(R27)
	577	[3383]	TEST     	R26 1 ; if R26 then PC := 647
	578	[3383]	JMP      	647 ; PC := 647
	579	[3383]	GETGLOBAL	R26 K6 ; R26 := 0x89326c93
	580	[3383]	SELF     	R26 R26 K110 ; R27 := R26; R26 := R26[0x18d05d30]
	581	[3383]	CALL     	R26 2 2 ; R26 := R26(R27)
	582	[3383]	TEST     	R26 0 ; if not R26 then PC := 647
	583	[3383]	JMP      	647 ; PC := 647
	584	[3383]	GETGLOBAL	R26 K6 ; R26 := 0x89326c93
	585	[3383]	SELF     	R26 R26 K111 ; R27 := R26; R26 := R26[0xd8140b94]
	586	[3383]	CALL     	R26 2 2 ; R26 := R26(R27)
	587	[3383]	TEST     	R26 0 ; if not R26 then PC := 647
	588	[3383]	JMP      	647 ; PC := 647
	589	[3383]	GETGLOBAL	R26 K0 ; R26 := _T
	590	[3383]	GETTABLE 	R26 R26 K56 ; R26 := R26["InSimulacrum"]
	591	[3383]	TEST     	R26 0 ; if not R26 then PC := 604
	592	[3383]	JMP      	604 ; PC := 604
	593	[3383]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	594	[3383]	GETGLOBAL	R27 K21 ; R27 := 0xbe190284
	595	[3383]	CALL     	R26 2 2 ; R26 := R26(R27)
	596	[3383]	TEST     	R26 1 ; if R26 then PC := 647
	597	[3383]	JMP      	647 ; PC := 647
	598	[3383]	GETGLOBAL	R26 K21 ; R26 := 0xbe190284
	599	[3383]	SELF     	R26 R26 K28 ; R27 := R26; R26 := R26[0xf2deaf69]
	600	[3383]	GETGLOBAL	R28 K55 ; R28 := gLotusSandBoxGameRulesType
	601	[3383]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	602	[3383]	TEST     	R26 1 ; if R26 then PC := 647
	603	[3383]	JMP      	647 ; PC := 647
	604	[3384]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	605	[3384]	GETGLOBAL	R27 K65 ; R27 := 0x25d99d89
	606	[3384]	CALL     	R26 2 2 ; R26 := R26(R27)
	607	[3384]	TEST     	R26 1 ; if R26 then PC := 627
	608	[3384]	JMP      	627 ; PC := 627
	609	[3384]	GETGLOBAL	R26 K0 ; R26 := _T
	610	[3384]	GETTABLE 	R26 R26 K89 ; R26 := R26["loadoutInProgress"]
	611	[3384]	EQ       	0 R26 K2 ; if R26 ~= nil then PC := 627
	612	[3384]	JMP      	627 ; PC := 627
	613	[3385]	GETUPVAL 	R26 U9 ; R26 := U9
	614	[3385]	OP_LOADBOOL	R27 0 0 ; R27 := false
	615	[3385]	OP_LOADBOOL	R28 1 0 ; R28 := true
	616	[3385]	OP_LOADBOOL	R29 1 0 ; R29 := true
	617	[3385]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	618	[3387]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	619	[3387]	GETUPVAL 	R27 U10 ; R27 := U10
	620	[3387]	CALL     	R26 2 2 ; R26 := R26(R27)
	621	[3387]	TEST     	R26 0 ; if not R26 then PC := 627
	622	[3387]	JMP      	627 ; PC := 627
	623	[3388]	SELF     	R26 R1 K30 ; R27 := R1; R26 := R1[0xde321e6f]
	624	[3388]	CALL     	R26 2 2 ; R26 := R26(R27)
	625	[3388]	SELF     	R26 R26 K112 ; R27 := R26; R26 := R26[0x0c277ae1]
	626	[3388]	CALL     	R26 2 1 ; R26(R27)
	627	[3391]	GETGLOBAL	R26 K0 ; R26 := _T
	628	[3391]	GETTABLE 	R26 R26 K56 ; R26 := R26["InSimulacrum"]
	629	[3391]	TEST     	R26 1 ; if R26 then PC := 644
	630	[3391]	JMP      	644 ; PC := 644
	631	[3391]	GETGLOBAL	R26 K0 ; R26 := _T
	632	[3391]	GETTABLE 	R26 R26 K89 ; R26 := R26["loadoutInProgress"]
	633	[3391]	TEST     	R26 0 ; if not R26 then PC := 639
	634	[3391]	JMP      	639 ; PC := 639
	635	[3391]	GETGLOBAL	R26 K0 ; R26 := _T
	636	[3391]	GETTABLE 	R26 R26 K47 ; R26 := R26["upgradeItemLot"]
	637	[3391]	EQ       	1 R26 K113 ; if R26 == 2.000000 then PC := 644
	638	[3391]	JMP      	644 ; PC := 644
	639	[3392]	SELF     	R26 R1 K30 ; R27 := R1; R26 := R1[0xde321e6f]
	640	[3392]	CALL     	R26 2 2 ; R26 := R26(R27)
	641	[3392]	SELF     	R26 R26 K114 ; R27 := R26; R26 := R26[0xc7154a44]
	642	[3392]	OP_LOADBOOL	R28 0 0 ; R28 := false
	643	[3392]	CALL     	R26 3 1 ; R26(R27,R28)
	644	[3394]	SELF     	R26 R1 K115 ; R27 := R1; R26 := R1[0xf4a0a8d5]
	645	[3394]	OP_LOADBOOL	R28 1 0 ; R28 := true
	646	[3394]	CALL     	R26 3 1 ; R26(R27,R28)
	647	[3397]	GETGLOBAL	R26 K0 ; R26 := _T
	648	[3397]	GETTABLE 	R26 R26 K116 ; R26 := R26["ForegroundMovie"]
	649	[3397]	TEST     	R26 0 ; if not R26 then PC := 653
	650	[3397]	JMP      	653 ; PC := 653
	651	[3398]	GETGLOBAL	R26 K0 ; R26 := _T
	652	[3398]	SETTABLE 	R26 K117 K109 ; R26["ForceHideLobbyStatusMessage"] := false
	653	[3401]	GETUPVAL 	R26 U2 ; R26 := U2
	654	[3401]	GETTABLE 	R26 R26 K118 ; R26 := R26[0xcf1fcba4]
	655	[3401]	CALL     	R26 1 2 ; R26 := R26()
	656	[3401]	TEST     	R26 0 ; if not R26 then PC := 660
	657	[3401]	JMP      	660 ; PC := 660
	658	[3402]	GETGLOBAL	R26 K0 ; R26 := _T
	659	[3402]	SETTABLE 	R26 K119 K109 ; R26["HubArsenalOpen"] := false
	660	[3404]	GETGLOBAL	R26 K0 ; R26 := _T
	661	[3404]	SETTABLE 	R26 K120 K109 ; R26["ArsenalOpen"] := false
	662	[3405]	GETUPVAL 	R26 U2 ; R26 := U2
	663	[3405]	GETTABLE 	R26 R26 K121 ; R26 := R26[0x9e3d3434]
	664	[3405]	OP_LOADBOOL	R27 0 0 ; R27 := false
	665	[3405]	CALL     	R26 2 1 ; R26(R27)
	666	[3407]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	667	[3407]	GETGLOBAL	R27 K21 ; R27 := 0xbe190284
	668	[3407]	CALL     	R26 2 2 ; R26 := R26(R27)
	669	[3407]	TEST     	R26 1 ; if R26 then PC := 675
	670	[3407]	JMP      	675 ; PC := 675
	671	[3408]	GETGLOBAL	R26 K21 ; R26 := 0xbe190284
	672	[3408]	SELF     	R26 R26 K122 ; R27 := R26; R26 := R26[0x919b1925]
	673	[3408]	OP_LOADBOOL	R28 0 0 ; R28 := false
	674	[3408]	CALL     	R26 3 1 ; R26(R27,R28)
	675	[3411]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	676	[3411]	GETGLOBAL	R27 K123 ; R27 := mItemsGrid
	677	[3411]	CALL     	R26 2 2 ; R26 := R26(R27)
	678	[3411]	TEST     	R26 1 ; if R26 then PC := 701
	679	[3411]	JMP      	701 ; PC := 701
	680	[3411]	GETGLOBAL	R26 K9 ; R26 := 0x7b998233
	681	[3411]	GETGLOBAL	R27 K65 ; R27 := 0x25d99d89
	682	[3411]	CALL     	R26 2 2 ; R26 := R26(R27)
	683	[3411]	TEST     	R26 1 ; if R26 then PC := 701
	684	[3411]	JMP      	701 ; PC := 701
	685	[3412]	GETGLOBAL	R26 K123 ; R26 := mItemsGrid
	686	[3412]	SELF     	R26 R26 K124 ; R27 := R26; R26 := R26[0xc32ccf2e]
	687	[3412]	CALL     	R26 2 2 ; R26 := R26(R27)
	688	[3413]	GETGLOBAL	R27 K9 ; R27 := 0x7b998233
	689	[3413]	MOVE     	R28 R26 ; R28 := R26
	690	[3413]	CALL     	R27 2 2 ; R27 := R27(R28)
	691	[3413]	TEST     	R27 1 ; if R27 then PC := 701
	692	[3413]	JMP      	701 ; PC := 701
	693	[3414]	GETGLOBAL	R27 K125 ; R27 := 0xae91e43b
	694	[3414]	SELF     	R27 R27 K126 ; R28 := R27; R27 := R27[0x492f9da2]
	695	[3414]	CALL     	R27 2 2 ; R27 := R27(R28)
	696	[3415]	GETGLOBAL	R28 K65 ; R28 := 0x25d99d89
	697	[3415]	SELF     	R28 R28 K127 ; R29 := R28; R28 := R28[0x7855ea52]
	698	[3415]	MOVE     	R30 R27 ; R30 := R27
	699	[3415]	MOVE     	R31 R26 ; R31 := R26
	700	[3415]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	701	[3419]	GETGLOBAL	R28 K9 ; R28 := 0x7b998233
	702	[3419]	MOVE     	R29 R1 ; R29 := R1
	703	[3419]	CALL     	R28 2 2 ; R28 := R28(R29)
	704	[3419]	TEST     	R28 1 ; if R28 then PC := 723
	705	[3419]	JMP      	723 ; PC := 723
	706	[3419]	GETGLOBAL	R28 K9 ; R28 := 0x7b998233
	707	[3419]	GETGLOBAL	R29 K6 ; R29 := 0x89326c93
	708	[3419]	CALL     	R28 2 2 ; R28 := R28(R29)
	709	[3419]	TEST     	R28 1 ; if R28 then PC := 723
	710	[3419]	JMP      	723 ; PC := 723
	711	[3420]	SELF     	R28 R1 K128 ; R29 := R1; R28 := R1[0xc1595bd5]
	712	[3420]	GETGLOBAL	R30 K51 ; R30 := 0xd0550e92
	713	[3420]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	714	[3421]	LOADK    	R29 := 1.000000
	715	[3421]	LEN      	R30 R28 ; R30 := # R28
	716	[3421]	LOADK    	R31 := 1.000000
	717	[3421]	FORPREP  	R29 722 ; R29 -= R31; PC := 722
	718	[3422]	GETGLOBAL	R33 K6 ; R33 := 0x89326c93
	719	[3422]	SELF     	R33 R33 K52 ; R34 := R33; R33 := R33[0x59c96e77]
	720	[3422]	GETTABLE 	R35 R28 R32 ; R35 := R28[R32]
	721	[3422]	CALL     	R33 3 1 ; R33(R34,R35)
	722	[3421]	FORLOOP  	R29 718 ; R29 += R31; if R29 <= R30 then begin PC := 718; R32 := R29 end
	723	[3426]	GETGLOBAL	R33 K9 ; R33 := 0x7b998233
	724	[3426]	GETGLOBAL	R34 K0 ; R34 := _T
	725	[3426]	GETTABLE 	R34 R34 K129 ; R34 := R34["BackgroundMovie"]
	726	[3426]	CALL     	R33 2 2 ; R33 := R33(R34)
	727	[3426]	TEST     	R33 1 ; if R33 then PC := 735
	728	[3426]	JMP      	735 ; PC := 735
	729	[3427]	GETGLOBAL	R33 K0 ; R33 := _T
	730	[3427]	GETTABLE 	R33 R33 K129 ; R33 := R33["BackgroundMovie"]
	731	[3427]	SELF     	R33 R33 K12 ; R34 := R33; R33 := R33[0xe4162eed]
	732	[3427]	LOADK    	R35 K130 ; R35 := "ShowBlockingMessage"
	733	[3427]	LOADK    	R36 K131 ; R36 := "0"
	734	[3427]	CALL     	R33 4 1 ; R33(R34,R35,R36)
	735	[3430]	GETGLOBAL	R33 K0 ; R33 := _T
	736	[3430]	GETTABLE 	R33 R33 K89 ; R33 := R33["loadoutInProgress"]
	737	[3430]	EQ       	0 R33 K2 ; if R33 ~= nil then PC := 815
	738	[3430]	JMP      	815 ; PC := 815
	739	[3430]	GETGLOBAL	R33 K9 ; R33 := 0x7b998233
	740	[3430]	GETGLOBAL	R34 K6 ; R34 := 0x89326c93
	741	[3430]	CALL     	R33 2 2 ; R33 := R33(R34)
	742	[3430]	TEST     	R33 1 ; if R33 then PC := 815
	743	[3430]	JMP      	815 ; PC := 815
	744	[3433]	GETGLOBAL	R33 K0 ; R33 := _T
	745	[3433]	SETTABLE 	R33 K132 K2 ; R33["SelectedLoadOutPart"] := nil
	746	[3436]	GETGLOBAL	R33 K6 ; R33 := 0x89326c93
	747	[3436]	SELF     	R33 R33 K26 ; R34 := R33; R33 := R33[0xfb64e76c]
	748	[3436]	CALL     	R33 2 2 ; R33 := R33(R34)
	749	[3437]	GETGLOBAL	R34 K9 ; R34 := 0x7b998233
	750	[3437]	MOVE     	R35 R33 ; R35 := R33
	751	[3437]	CALL     	R34 2 2 ; R34 := R34(R35)
	752	[3437]	TEST     	R34 1 ; if R34 then PC := 815
	753	[3437]	JMP      	815 ; PC := 815
	754	[3438]	SELF     	R34 R33 K133 ; R35 := R33; R34 := R33[0x5578d98b]
	755	[3438]	CALL     	R34 2 2 ; R34 := R34(R35)
	756	[3440]	GETGLOBAL	R35 K9 ; R35 := 0x7b998233
	757	[3440]	MOVE     	R36 R34 ; R36 := R34
	758	[3440]	CALL     	R35 2 2 ; R35 := R35(R36)
	759	[3440]	TEST     	R35 0 ; if not R35 then PC := 771
	760	[3440]	JMP      	771 ; PC := 771
	761	[3441]	SELF     	R35 R33 K44 ; R36 := R33; R35 := R33[0xbb610e5b]
	762	[3441]	CALL     	R35 2 2 ; R35 := R35(R36)
	763	[3441]	SELF     	R35 R35 K28 ; R36 := R35; R35 := R35[0xf2deaf69]
	764	[3441]	GETUPVAL 	R37 U11 ; R37 := U11
	765	[3441]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	766	[3441]	TEST     	R35 0 ; if not R35 then PC := 771
	767	[3441]	JMP      	771 ; PC := 771
	768	[3442]	SELF     	R35 R33 K44 ; R36 := R33; R35 := R33[0xbb610e5b]
	769	[3442]	CALL     	R35 2 2 ; R35 := R35(R36)
	770	[3442]	MOVE     	R34 R35 ; R34 := R35
	771	[3445]	GETGLOBAL	R35 K9 ; R35 := 0x7b998233
	772	[3445]	MOVE     	R36 R34 ; R36 := R34
	773	[3445]	CALL     	R35 2 2 ; R35 := R35(R36)
	774	[3445]	TEST     	R35 1 ; if R35 then PC := 815
	775	[3445]	JMP      	815 ; PC := 815
	776	[3445]	SELF     	R35 R33 K44 ; R36 := R33; R35 := R33[0xbb610e5b]
	777	[3445]	CALL     	R35 2 2 ; R35 := R35(R36)
	778	[3445]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 815
	779	[3445]	JMP      	815 ; PC := 815
	780	[3446]	SELF     	R35 R34 K134 ; R36 := R34; R35 := R34[0x01bab237]
	781	[3446]	CALL     	R35 2 2 ; R35 := R35(R36)
	782	[3446]	TEST     	R35 1 ; if R35 then PC := 787
	783	[3446]	JMP      	787 ; PC := 787
	784	[3447]	SELF     	R35 R34 K23 ; R36 := R34; R35 := R34[0x768274d6]
	785	[3447]	OP_LOADBOOL	R37 1 0 ; R37 := true
	786	[3447]	CALL     	R35 3 1 ; R35(R36,R37)
	787	[3449]	GETGLOBAL	R35 K9 ; R35 := 0x7b998233
	788	[3449]	MOVE     	R36 R1 ; R36 := R1
	789	[3449]	CALL     	R35 2 2 ; R35 := R35(R36)
	790	[3449]	TEST     	R35 1 ; if R35 then PC := 799
	791	[3449]	JMP      	799 ; PC := 799
	792	[3450]	SELF     	R35 R1 K135 ; R36 := R1; R35 := R1[0x5d985c7e]
	793	[3450]	GETGLOBAL	R37 K136 ; R37 := 0x364c85e6
	794	[3450]	OP_LOADBOOL	R38 0 0 ; R38 := false
	795	[3450]	LOADK    	R39 := 2.000000
	796	[3450]	LOADK    	R40 := 3.000000
	797	[3450]	OP_LOADBOOL	R41 1 0 ; R41 := true
	798	[3450]	CALL     	R35 7 1 ; R35(R36,R37,R38,R39,R40,R41)
	799	[3453]	SELF     	R35 R34 K28 ; R36 := R34; R35 := R34[0xf2deaf69]
	800	[3453]	GETUPVAL 	R37 U11 ; R37 := U11
	801	[3453]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	802	[3453]	TEST     	R35 0 ; if not R35 then PC := 815
	803	[3453]	JMP      	815 ; PC := 815
	804	[3454]	SELF     	R35 R33 K27 ; R36 := R33; R35 := R33[0xa534c3ac]
	805	[3454]	CALL     	R35 2 2 ; R35 := R35(R36)
	806	[3455]	GETGLOBAL	R36 K9 ; R36 := 0x7b998233
	807	[3455]	MOVE     	R37 R35 ; R37 := R35
	808	[3455]	CALL     	R36 2 2 ; R36 := R36(R37)
	809	[3455]	TEST     	R36 1 ; if R36 then PC := 815
	810	[3455]	JMP      	815 ; PC := 815
	811	[3456]	SELF     	R36 R35 K23 ; R37 := R35; R36 := R35[0x768274d6]
	812	[3456]	OP_LOADBOOL	R38 0 0 ; R38 := false
	813	[3456]	OP_LOADBOOL	R39 0 0 ; R39 := false
	814	[3456]	CALL     	R36 4 1 ; R36(R37,R38,R39)
	815	[3463]	GETGLOBAL	R36 K9 ; R36 := 0x7b998233
	816	[3463]	GETGLOBAL	R37 K138 ; R37 := 0x83f4e77c
	817	[3463]	CALL     	R36 2 2 ; R36 := R36(R37)
	818	[3463]	TEST     	R36 1 ; if R36 then PC := 846
	819	[3463]	JMP      	846 ; PC := 846
	820	[3463]	GETGLOBAL	R36 K9 ; R36 := 0x7b998233
	821	[3463]	GETGLOBAL	R37 K6 ; R37 := 0x89326c93
	822	[3463]	CALL     	R36 2 2 ; R36 := R36(R37)
	823	[3463]	TEST     	R36 1 ; if R36 then PC := 846
	824	[3463]	JMP      	846 ; PC := 846
	825	[3464]	GETGLOBAL	R36 K6 ; R36 := 0x89326c93
	826	[3464]	SELF     	R36 R36 K26 ; R37 := R36; R36 := R36[0xfb64e76c]
	827	[3464]	CALL     	R36 2 2 ; R36 := R36(R37)
	828	[3465]	GETGLOBAL	R37 K138 ; R37 := 0x83f4e77c
	829	[3465]	SELF     	R37 R37 K139 ; R38 := R37; R37 := R37[0xd3c6feca]
	830	[3465]	CALL     	R37 2 2 ; R37 := R37(R38)
	831	[3466]	GETGLOBAL	R38 K9 ; R38 := 0x7b998233
	832	[3466]	MOVE     	R39 R37 ; R39 := R37
	833	[3466]	CALL     	R38 2 2 ; R38 := R38(R39)
	834	[3466]	TEST     	R38 1 ; if R38 then PC := 846
	835	[3466]	JMP      	846 ; PC := 846
	836	[3466]	GETGLOBAL	R38 K9 ; R38 := 0x7b998233
	837	[3466]	MOVE     	R39 R36 ; R39 := R36
	838	[3466]	CALL     	R38 2 2 ; R38 := R38(R39)
	839	[3466]	TEST     	R38 1 ; if R38 then PC := 846
	840	[3466]	JMP      	846 ; PC := 846
	841	[3467]	SELF     	R38 R37 K140 ; R39 := R37; R38 := R37[0x1be972b8]
	842	[3467]	MOVE     	R40 R36 ; R40 := R36
	843	[3467]	GETGLOBAL	R41 K141 ; R41 := 0xf3a45924
	844	[3467]	LOADNIL  	R42 R42 ; R42 := nil
	845	[3467]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	846	[3478]	RETURN   	R0 1 ; return 

function #57 <?:3480,3489> (26 instructions, 104 bytes at 000002112B427360)
0 params, 9 slots, 0 upvalues, 0 locals, 7 constants, 1 function
	1	[3481]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[3481]	GETTABLE 	R0 R0 K1 ; R0 := R0["SetButtons"]
	3	[3481]	TEST     	R0 0 ; if not R0 then PC := 10
	4	[3481]	JMP      	10 ; PC := 10
	5	[3482]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[3482]	GETTABLE 	R0 R0 K2 ; R0 := R0[0x1c5b546f]
	7	[3482]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	8	[3482]	LOADNIL  	R2 R2 ; R2 := nil
	9	[3482]	CALL     	R0 3 1 ; R0(R1,R2)
	10	[3485]	GETGLOBAL	R0 K4 ; R0 := 0x25312c9b
	11	[3485]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	12	[3485]	LOADK    	R2 K5 ; R2 := "_root"
	13	[3485]	LOADK    	R3 := 0.000000
	14	[3485]	NEWTABLE 	R4 2 0 ; R4 := {}
	15	[3485]	LOADK    	R5 := 10.000000
	16	[3485]	LOADK    	R6 := 4.000000
	17	[3485]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	18	[3485]	NEWTABLE 	R5 2 0 ; R5 := {}
	19	[3485]	LOADK    	R6 := 0.000000
	20	[3485]	LOADK    	R7 := -10000.000000
	21	[3485]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	22	[3485]	LOADK    	R6 := 0.250000
	23	[3485]	LOADK    	R7 := 0.000000
	24	[3488]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	25	[3485]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	26	[3489]	RETURN   	R0 1 ; return 

function #58 <?:3491,3500> (27 instructions, 108 bytes at 000002112B427690)
0 params, 3 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[3492]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3492]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[3492]	GETTABLE 	R1 R1 K2 ; R1 := R1["SpecialSuitAvatar"]
	4	[3492]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[3492]	TEST     	R0 1 ; if R0 then PC := 25
	6	[3492]	JMP      	25 ; PC := 25
	7	[3493]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	8	[3493]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x59c96e77]
	9	[3493]	GETGLOBAL	R2 K1 ; R2 := _T
	10	[3493]	GETTABLE 	R2 R2 K2 ; R2 := R2["SpecialSuitAvatar"]
	11	[3493]	CALL     	R0 3 1 ; R0(R1,R2)
	12	[3494]	GETGLOBAL	R0 K1 ; R0 := _T
	13	[3494]	SETTABLE 	R0 K2 K5 ; R0["SpecialSuitAvatar"] := nil
	14	[3495]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	15	[3495]	GETGLOBAL	R1 K1 ; R1 := _T
	16	[3495]	GETTABLE 	R1 R1 K6 ; R1 := R1["MenuSuitAvatar"]
	17	[3495]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[3495]	TEST     	R0 1 ; if R0 then PC := 25
	19	[3495]	JMP      	25 ; PC := 25
	20	[3496]	GETGLOBAL	R0 K1 ; R0 := _T
	21	[3496]	GETTABLE 	R0 R0 K6 ; R0 := R0["MenuSuitAvatar"]
	22	[3496]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x2abc8ecd]
	23	[3496]	OP_LOADBOOL	R2 1 0 ; R2 := true
	24	[3496]	CALL     	R0 3 1 ; R0(R1,R2)
	25	[3499]	GETGLOBAL	R0 K1 ; R0 := _T
	26	[3499]	SETTABLE 	R0 K8 K5 ; R0["mSpecialSuitMode"] := nil
	27	[3500]	RETURN   	R0 1 ; return 

function #59 <?:3502,3510> (25 instructions, 100 bytes at 000002112B4278C0)
0 params, 3 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[3503]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3503]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[3503]	GETTABLE 	R1 R1 K2 ; R1 := R1["KDriveAvatar"]
	4	[3503]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[3503]	TEST     	R0 1 ; if R0 then PC := 25
	6	[3503]	JMP      	25 ; PC := 25
	7	[3504]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	8	[3504]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x59c96e77]
	9	[3504]	GETGLOBAL	R2 K1 ; R2 := _T
	10	[3504]	GETTABLE 	R2 R2 K2 ; R2 := R2["KDriveAvatar"]
	11	[3504]	CALL     	R0 3 1 ; R0(R1,R2)
	12	[3505]	GETGLOBAL	R0 K1 ; R0 := _T
	13	[3505]	SETTABLE 	R0 K2 K5 ; R0["KDriveAvatar"] := nil
	14	[3506]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	15	[3506]	GETGLOBAL	R1 K1 ; R1 := _T
	16	[3506]	GETTABLE 	R1 R1 K6 ; R1 := R1["MenuSuitAvatar"]
	17	[3506]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[3506]	TEST     	R0 1 ; if R0 then PC := 25
	19	[3506]	JMP      	25 ; PC := 25
	20	[3507]	GETGLOBAL	R0 K1 ; R0 := _T
	21	[3507]	GETTABLE 	R0 R0 K6 ; R0 := R0["MenuSuitAvatar"]
	22	[3507]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x2abc8ecd]
	23	[3507]	OP_LOADBOOL	R2 1 0 ; R2 := true
	24	[3507]	CALL     	R0 3 1 ; R0(R1,R2)
	25	[3510]	RETURN   	R0 1 ; return 

function #60 <?:3512,3526> (48 instructions, 192 bytes at 00000211303D1790)
2 params, 6 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[3513]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[3514]	EQ       	1 R1 K0 ; if R1 == nil then PC := 6
	3	[3514]	JMP      	6 ; PC := 6
	4	[3515]	MOVE     	R2 R1 ; R2 := R1
	5	[3515]	JMP      	43 ; PC := 43
	6	[3517]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[3517]	GETTABLE 	R3 R3 K1 ; R3 := R3["Current"]
	8	[3517]	EQ       	1 R3 K3 ; if R3 == 3.000000 then PC := 11
	9	[3517]	JMP      	11 ; PC := 11
	10	[3517]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 11
	11	[3517]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[3518]	GETGLOBAL	R3 K4 ; R3 := mSelected
	13	[3518]	GETTABLE 	R3 R3 K5 ; R3 := R3["Element"]
	14	[3518]	EQ       	1 R3 K0 ; if R3 == nil then PC := 31
	15	[3518]	JMP      	31 ; PC := 31
	16	[3519]	TEST     	R2 0 ; if not R2 then PC := 30
	17	[3519]	JMP      	30 ; PC := 30
	18	[3519]	GETGLOBAL	R3 K4 ; R3 := mSelected
	19	[3519]	GETTABLE 	R3 R3 K5 ; R3 := R3["Element"]
	20	[3519]	GETTABLE 	R3 R3 K6 ; R3 := R3["LoadOutId"]
	21	[3519]	EQ       	0 R3 K7 ; if R3 ~= 4.000000 then PC := 29
	22	[3519]	JMP      	29 ; PC := 29
	23	[3519]	GETGLOBAL	R3 K4 ; R3 := mSelected
	24	[3519]	GETTABLE 	R3 R3 K5 ; R3 := R3["Element"]
	25	[3519]	GETTABLE 	R3 R3 K8 ; R3 := R3["LoadOutType"]
	26	[3519]	EQ       	1 R3 K9 ; if R3 == 8.000000 then PC := 29
	27	[3519]	JMP      	29 ; PC := 29
	28	[3519]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 29
	29	[3519]	OP_LOADBOOL	R2 1 0 ; R2 := true
	30	[3519]	JMP      	43 ; PC := 43
	31	[3520]	GETGLOBAL	R3 K10 ; R3 := _T
	32	[3520]	GETTABLE 	R3 R3 K11 ; R3 := R3["upgradeItemSlot"]
	33	[3520]	EQ       	1 R3 K0 ; if R3 == nil then PC := 43
	34	[3520]	JMP      	43 ; PC := 43
	35	[3521]	TEST     	R2 0 ; if not R2 then PC := 43
	36	[3521]	JMP      	43 ; PC := 43
	37	[3521]	GETGLOBAL	R3 K10 ; R3 := _T
	38	[3521]	GETTABLE 	R3 R3 K11 ; R3 := R3["upgradeItemSlot"]
	39	[3521]	EQ       	0 R3 K7 ; if R3 ~= 4.000000 then PC := 42
	40	[3521]	JMP      	42 ; PC := 42
	41	[3521]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 42
	42	[3521]	OP_LOADBOOL	R2 1 0 ; R2 := true
	43	[3525]	SELF     	R3 R0 K12 ; R4 := R0; R3 := R0[0xde321e6f]
	44	[3525]	CALL     	R3 2 2 ; R3 := R3(R4)
	45	[3525]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0xcfd657f3]
	46	[3525]	MOVE     	R5 R2 ; R5 := R2
	47	[3525]	CALL     	R3 3 1 ; R3(R4,R5)
	48	[3526]	RETURN   	R0 1 ; return 

function #61 <?:3528,3561> (81 instructions, 324 bytes at 00000211303D1AB0)
2 params, 7 slots, 5 upvalues, 0 locals, 22 constants, 0 functions
	1	[3529]	TEST     	R0 1 ; if R0 then PC := 3
	2	[3529]	JMP      	3 ; PC := 3
	3	[3537]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	4	[3537]	GETGLOBAL	R3 K1 ; R3 := 0xbe190284
	5	[3537]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3537]	TEST     	R2 1 ; if R2 then PC := 19
	7	[3537]	JMP      	19 ; PC := 19
	8	[3537]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	9	[3537]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xf2deaf69]
	10	[3537]	GETGLOBAL	R4 K3 ; R4 := gLotusPhotoBoothGameRulesType
	11	[3537]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	12	[3537]	TEST     	R2 0 ; if not R2 then PC := 19
	13	[3537]	JMP      	19 ; PC := 19
	14	[3537]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	15	[3537]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x3c903e33]
	16	[3537]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[3537]	TEST     	R2 1 ; if R2 then PC := 23
	18	[3537]	JMP      	23 ; PC := 23
	19	[3538]	GETUPVAL 	R2 U0 ; R2 := U0
	20	[3538]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x8fbd62e4]
	21	[3538]	LOADK    	R3 K6 ; R3 := "OnUpdateSessionSettings"
	22	[3538]	CALL     	R2 2 1 ; R2(R3)
	23	[3541]	GETGLOBAL	R2 K7 ; R2 := _T
	24	[3541]	GETTABLE 	R2 R2 K8 ; R2 := R2["MenuSuitAvatar"]
	25	[3542]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	26	[3542]	MOVE     	R4 R2 ; R4 := R2
	27	[3542]	CALL     	R3 2 2 ; R3 := R3(R4)
	28	[3542]	TEST     	R3 1 ; if R3 then PC := 54
	29	[3542]	JMP      	54 ; PC := 54
	30	[3543]	GETUPVAL 	R3 U1 ; R3 := U1
	31	[3543]	GETTABLE 	R3 R3 K9 ; R3 := R3[0xcfd657f3]
	32	[3543]	MOVE     	R4 R2 ; R4 := R2
	33	[3543]	OP_LOADBOOL	R5 0 0 ; R5 := false
	34	[3543]	CALL     	R3 3 1 ; R3(R4,R5)
	35	[3544]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[3544]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xcf1fcba4]
	37	[3544]	CALL     	R3 1 2 ; R3 := R3()
	38	[3544]	TEST     	R3 0 ; if not R3 then PC := 54
	39	[3544]	JMP      	54 ; PC := 54
	40	[3546]	LOADK    	R3 K11 ; R3 := "{\"loadout\":"
	41	[3546]	GETGLOBAL	R4 K1 ; R4 := 0xbe190284
	42	[3546]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0xe08c150e]
	43	[3546]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[3546]	LOADK    	R5 K13 ; R5 := "}"
	45	[3546]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	46	[3547]	GETGLOBAL	R4 K1 ; R4 := 0xbe190284
	47	[3547]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x83bfaed0]
	48	[3547]	MOVE     	R6 R3 ; R6 := R3
	49	[3547]	CALL     	R4 3 1 ; R4(R5,R6)
	50	[3548]	GETGLOBAL	R4 K1 ; R4 := 0xbe190284
	51	[3548]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x6dd14378]
	52	[3548]	MOVE     	R6 R2 ; R6 := R2
	53	[3548]	CALL     	R4 3 1 ; R4(R5,R6)
	54	[3552]	GETGLOBAL	R4 K16 ; R4 := mHandleCanBeClosedCallback
	55	[3552]	EQ       	1 R4 K17 ; if R4 == nil then PC := 65
	56	[3552]	JMP      	65 ; PC := 65
	57	[3553]	GETGLOBAL	R4 K7 ; R4 := _T
	58	[3553]	GETGLOBAL	R5 K16 ; R5 := mHandleCanBeClosedCallback
	59	[3553]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	60	[3553]	OP_LOADBOOL	R5 1 0 ; R5 := true
	61	[3553]	CALL     	R4 2 1 ; R4(R5)
	62	[3554]	LOADNIL  	R4 R4 ; R4 := nil
	63	[3554]	SETGLOBALHASH	R4 K16 ; mHandleCanBeClosedCallback := R4
	64	[3554]	JMP      	81 ; PC := 81
	65	[3556]	GETGLOBAL	R4 K7 ; R4 := _T
	66	[3556]	GETTABLE 	R4 R4 K18 ; R4 := R4[0x4e4e6b0c]
	67	[3556]	LOADK    	R5 := 1.000000
	68	[3556]	GETUPVAL 	R6 U2 ; R6 := U2
	69	[3556]	CALL     	R6 1 2 ; R6 := R6()
	70	[3556]	NOT      	R6 R6 ; R6 := not R6
	71	[3556]	CALL     	R4 3 1 ; R4(R5,R6)
	72	[3557]	GETGLOBAL	R4 K7 ; R4 := _T
	73	[3557]	GETTABLE 	R4 R4 K19 ; R4 := R4["mTrigger"]
	74	[3557]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0x8eb2112d]
	75	[3557]	LOADK    	R6 K21 ; R6 := "Close"
	76	[3557]	CALL     	R4 3 1 ; R4(R5,R6)
	77	[3558]	GETUPVAL 	R4 U3 ; R4 := U3
	78	[3558]	CALL     	R4 1 1 ; R4()
	79	[3559]	GETUPVAL 	R4 U4 ; R4 := U4
	80	[3559]	CALL     	R4 1 1 ; R4()
	81	[3561]	RETURN   	R0 1 ; return 

function #62 <?:3563,3564> (1 instruction, 4 bytes at 00000211303D1F70)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[3564]	RETURN   	R0 1 ; return 

function #63 <?:3566,3676> (311 instructions, 1244 bytes at 00000211303D2040)
0 params, 12 slots, 13 upvalues, 0 locals, 73 constants, 0 functions
	1	[3568]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[3568]	GETTABLE 	R0 R0 K1 ; R0 := R0["QuestProgressWaitingForUpgradesScreen"]
	3	[3568]	TEST     	R0 0 ; if not R0 then PC := 10
	4	[3568]	JMP      	10 ; PC := 10
	5	[3569]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[3569]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xe0cba3ca]
	7	[3569]	LOADK    	R1 K3 ; R1 := "/Lotus/Language/Menu/QuestModScreenRequired"
	8	[3569]	CALL     	R0 2 1 ; R0(R1)
	9	[3570]	RETURN   	R0 1 ; return 
	10	[3573]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	11	[3573]	GETGLOBAL	R1 K0 ; R1 := _T
	12	[3573]	GETTABLE 	R1 R1 K5 ; R1 := R1["MenuSuitAvatar"]
	13	[3573]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[3573]	TEST     	R0 1 ; if R0 then PC := 21
	15	[3573]	JMP      	21 ; PC := 21
	16	[3574]	GETGLOBAL	R0 K0 ; R0 := _T
	17	[3574]	GETTABLE 	R0 R0 K5 ; R0 := R0["MenuSuitAvatar"]
	18	[3574]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x044b7be8]
	19	[3574]	OP_LOADBOOL	R2 0 0 ; R2 := false
	20	[3574]	CALL     	R0 3 1 ; R0(R1,R2)
	21	[3577]	GETGLOBAL	R0 K0 ; R0 := _T
	22	[3577]	GETTABLE 	R0 R0 K7 ; R0 := R0["ForegroundMovie"]
	23	[3577]	TEST     	R0 0 ; if not R0 then PC := 35
	24	[3577]	JMP      	35 ; PC := 35
	25	[3577]	GETGLOBAL	R0 K0 ; R0 := _T
	26	[3577]	GETTABLE 	R0 R0 K8 ; R0 := R0["CanShowPlayTypeDropDown"]
	27	[3577]	TEST     	R0 0 ; if not R0 then PC := 35
	28	[3577]	JMP      	35 ; PC := 35
	29	[3578]	GETGLOBAL	R0 K0 ; R0 := _T
	30	[3578]	GETTABLE 	R0 R0 K7 ; R0 := R0["ForegroundMovie"]
	31	[3578]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xe4162eed]
	32	[3578]	LOADK    	R2 K10 ; R2 := "TogglePlayTypeDropDown"
	33	[3578]	LOADK    	R3 K11 ; R3 := "true"
	34	[3578]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	35	[3581]	GETUPVAL 	R0 U0 ; R0 := U0
	36	[3581]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	37	[3581]	GETGLOBAL	R1 K13 ; R1 := 0x0032441c
	38	[3581]	GETTABLE 	R1 R1 K14 ; R1 := R1["UISound_GridOpenTwo"]
	39	[3581]	CALL     	R0 2 1 ; R0(R1)
	40	[3582]	GETUPVAL 	R0 U0 ; R0 := U0
	41	[3582]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	42	[3582]	GETGLOBAL	R1 K13 ; R1 := 0x0032441c
	43	[3582]	GETTABLE 	R1 R1 K15 ; R1 := R1["UISound_DialogClose"]
	44	[3582]	CALL     	R0 2 1 ; R0(R1)
	45	[3584]	OP_LOADBOOL	R0 1 0 ; R0 := true
	46	[3584]	SETGLOBALHASH	R0 K16 ; mInputBlocked := R0
	47	[3586]	OP_LOADBOOL	R0 1 0 ; R0 := true
	48	[3587]	OP_LOADBOOL	R1 1 0 ; R1 := true
	49	[3589]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	50	[3589]	GETGLOBAL	R3 K17 ; R3 := 0x25d99d89
	51	[3589]	CALL     	R2 2 2 ; R2 := R2(R3)
	52	[3589]	TEST     	R2 1 ; if R2 then PC := 91
	53	[3589]	JMP      	91 ; PC := 91
	54	[3589]	GETUPVAL 	R2 U1 ; R2 := U1
	55	[3589]	GETUPVAL 	R3 U2 ; R3 := U2
	56	[3589]	GETTABLE 	R3 R3 K18 ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
	57	[3589]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 91
	58	[3589]	JMP      	91 ; PC := 91
	59	[3590]	GETGLOBAL	R2 K17 ; R2 := 0x25d99d89
	60	[3590]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0x62c81b76]
	61	[3590]	CALL     	R2 2 2 ; R2 := R2(R3)
	62	[3591]	SELF     	R3 R2 K20 ; R4 := R2; R3 := R2[0x8af486d8]
	63	[3591]	CALL     	R3 2 2 ; R3 := R3(R4)
	64	[3591]	TEST     	R3 0 ; if not R3 then PC := 69
	65	[3591]	JMP      	69 ; PC := 69
	66	[3592]	OP_LOADBOOL	R0 0 0 ; R0 := false
	67	[3593]	OP_LOADBOOL	R1 0 0 ; R1 := false
	68	[3593]	JMP      	91 ; PC := 91
	69	[3594]	SELF     	R3 R2 K21 ; R4 := R2; R3 := R2[0x5ea7c3b1]
	70	[3594]	CALL     	R3 2 2 ; R3 := R3(R4)
	71	[3594]	TEST     	R3 0 ; if not R3 then PC := 75
	72	[3594]	JMP      	75 ; PC := 75
	73	[3595]	OP_LOADBOOL	R0 0 0 ; R0 := false
	74	[3595]	JMP      	91 ; PC := 91
	75	[3597]	OP_LOADBOOL	R1 0 0 ; R1 := false
	76	[3598]	SELF     	R3 R2 K22 ; R4 := R2; R3 := R2[0xb61abfd2]
	77	[3598]	LOADK    	R5 := 1.000000
	78	[3598]	LOADK    	R6 := 0.000000
	79	[3598]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	80	[3599]	GETTABLE 	R4 R3 K24 ; R4 := R3["mItemId"]
	81	[3599]	GETGLOBAL	R5 K23 ; R5 := 0x6c97a788
	82	[3599]	GETTABLE 	R5 R5 K25 ; R5 := R5["InvalidItemID"]
	83	[3599]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 90
	84	[3599]	JMP      	90 ; PC := 90
	85	[3599]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	86	[3599]	GETTABLE 	R5 R3 K26 ; R5 := R3["mItemType"]
	87	[3599]	CALL     	R4 2 2 ; R4 := R4(R5)
	88	[3599]	TEST     	R4 0 ; if not R4 then PC := 91
	89	[3599]	JMP      	91 ; PC := 91
	90	[3600]	OP_LOADBOOL	R0 0 0 ; R0 := false
	91	[3605]	GETUPVAL 	R4 U3 ; R4 := U3
	92	[3605]	LOADK    	R5 := 0.000000
	93	[3605]	CALL     	R4 2 2 ; R4 := R4(R5)
	94	[3606]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	95	[3606]	MOVE     	R6 R4 ; R6 := R4
	96	[3606]	CALL     	R5 2 2 ; R5 := R5(R6)
	97	[3606]	TEST     	R5 1 ; if R5 then PC := 103
	98	[3606]	JMP      	103 ; PC := 103
	99	[3607]	SELF     	R5 R4 K27 ; R6 := R4; R5 := R4[0x768274d6]
	100	[3607]	MOVE     	R7 R0 ; R7 := R0
	101	[3607]	OP_LOADBOOL	R8 1 0 ; R8 := true
	102	[3607]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	103	[3610]	GETUPVAL 	R5 U3 ; R5 := U3
	104	[3610]	LOADK    	R6 := 3.000000
	105	[3610]	CALL     	R5 2 2 ; R5 := R5(R6)
	106	[3611]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	107	[3611]	MOVE     	R7 R5 ; R7 := R5
	108	[3611]	CALL     	R6 2 2 ; R6 := R6(R7)
	109	[3611]	TEST     	R6 1 ; if R6 then PC := 115
	110	[3611]	JMP      	115 ; PC := 115
	111	[3612]	SELF     	R6 R5 K27 ; R7 := R5; R6 := R5[0x768274d6]
	112	[3612]	MOVE     	R8 R1 ; R8 := R1
	113	[3612]	OP_LOADBOOL	R9 1 0 ; R9 := true
	114	[3612]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	115	[3615]	GETGLOBAL	R6 K0 ; R6 := _T
	116	[3615]	GETTABLE 	R6 R6 K28 ; R6 := R6["domeState"]
	117	[3615]	TEST     	R6 0 ; if not R6 then PC := 124
	118	[3615]	JMP      	124 ; PC := 124
	119	[3615]	GETGLOBAL	R6 K0 ; R6 := _T
	120	[3615]	GETTABLE 	R6 R6 K28 ; R6 := R6["domeState"]
	121	[3615]	GETTABLE 	R6 R6 K29 ; R6 := R6["closed"]
	122	[3615]	TEST     	R6 1 ; if R6 then PC := 137
	123	[3615]	JMP      	137 ; PC := 137
	124	[3616]	GETUPVAL 	R6 U3 ; R6 := U3
	125	[3616]	LOADK    	R7 := 1.000000
	126	[3616]	CALL     	R6 2 2 ; R6 := R6(R7)
	127	[3617]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	128	[3617]	MOVE     	R8 R6 ; R8 := R6
	129	[3617]	CALL     	R7 2 2 ; R7 := R7(R8)
	130	[3617]	TEST     	R7 1 ; if R7 then PC := 137
	131	[3617]	JMP      	137 ; PC := 137
	132	[3618]	SELF     	R7 R6 K30 ; R8 := R6; R7 := R6[0xb2532845]
	133	[3618]	GETGLOBAL	R9 K31 ; R9 := 0x0469f296
	134	[3618]	LOADK    	R10 K32 ; R10 := "Release"
	135	[3618]	CALL     	R9 2 0 ; R9,... := R9(R10)
	136	[3618]	CALL     	R7 0 1 ; R7(R8,...)
	137	[3621]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	138	[3621]	GETGLOBAL	R8 K0 ; R8 := _T
	139	[3621]	GETTABLE 	R8 R8 K33 ; R8 := R8["petCommands"]
	140	[3621]	CALL     	R7 2 2 ; R7 := R7(R8)
	141	[3621]	TEST     	R7 1 ; if R7 then PC := 147
	142	[3621]	JMP      	147 ; PC := 147
	143	[3622]	GETGLOBAL	R7 K0 ; R7 := _T
	144	[3622]	GETTABLE 	R7 R7 K33 ; R7 := R7["petCommands"]
	145	[3622]	GETTABLE 	R7 R7 K34 ; R7 := R7[0xea0b3661]
	146	[3622]	CALL     	R7 1 1 ; R7()
	147	[3625]	GETUPVAL 	R7 U4 ; R7 := U4
	148	[3625]	GETUPVAL 	R8 U5 ; R8 := U5
	149	[3625]	GETTABLE 	R8 R8 K35 ; R8 := R8["SELECTING_SKINS"]
	150	[3625]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 181
	151	[3625]	JMP      	181 ; PC := 181
	152	[3625]	GETGLOBAL	R7 K36 ; R7 := mSelected
	153	[3625]	GETTABLE 	R7 R7 K37 ; R7 := R7["Cosmetic"]
	154	[3625]	EQ       	1 R7 K38 ; if R7 == nil then PC := 181
	155	[3625]	JMP      	181 ; PC := 181
	156	[3625]	GETGLOBAL	R7 K36 ; R7 := mSelected
	157	[3625]	GETTABLE 	R7 R7 K39 ; R7 := R7["CosmeticPreviousValue"]
	158	[3625]	EQ       	1 R7 K38 ; if R7 == nil then PC := 181
	159	[3625]	JMP      	181 ; PC := 181
	160	[3626]	GETGLOBAL	R7 K36 ; R7 := mSelected
	161	[3626]	GETTABLE 	R7 R7 K37 ; R7 := R7["Cosmetic"]
	162	[3626]	GETTABLE 	R7 R7 K40 ; R7 := R7["PetTrait"]
	163	[3626]	TEST     	R7 0 ; if not R7 then PC := 181
	164	[3626]	JMP      	181 ; PC := 181
	165	[3626]	GETGLOBAL	R7 K36 ; R7 := mSelected
	166	[3626]	GETTABLE 	R7 R7 K37 ; R7 := R7["Cosmetic"]
	167	[3626]	GETTABLE 	R7 R7 K41 ; R7 := R7["Attribute"]
	168	[3626]	TEST     	R7 0 ; if not R7 then PC := 181
	169	[3626]	JMP      	181 ; PC := 181
	170	[3627]	GETUPVAL 	R7 U6 ; R7 := U6
	171	[3627]	GETGLOBAL	R8 K36 ; R8 := mSelected
	172	[3627]	GETTABLE 	R8 R8 K37 ; R8 := R8["Cosmetic"]
	173	[3627]	GETTABLE 	R8 R8 K41 ; R8 := R8["Attribute"]
	174	[3627]	GETGLOBAL	R9 K36 ; R9 := mSelected
	175	[3627]	GETTABLE 	R9 R9 K39 ; R9 := R9["CosmeticPreviousValue"]
	176	[3627]	SELF     	R9 R9 K42 ; R10 := R9; R9 := R9[0xa5d5c8f6]
	177	[3627]	CALL     	R9 2 2 ; R9 := R9(R10)
	178	[3627]	LOADK    	R10 := 0.000000
	179	[3627]	LOADNIL  	R11 R11 ; R11 := nil
	180	[3627]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	181	[3631]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	182	[3631]	GETGLOBAL	R8 K43 ; R8 := mChildMovie
	183	[3631]	CALL     	R7 2 2 ; R7 := R7(R8)
	184	[3631]	TEST     	R7 1 ; if R7 then PC := 194
	185	[3631]	JMP      	194 ; PC := 194
	186	[3631]	GETUPVAL 	R7 U7 ; R7 := U7
	187	[3631]	TEST     	R7 0 ; if not R7 then PC := 194
	188	[3631]	JMP      	194 ; PC := 194
	189	[3633]	GETGLOBAL	R7 K43 ; R7 := mChildMovie
	190	[3633]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0xe4162eed]
	191	[3633]	LOADK    	R9 K44 ; R9 := "Close"
	192	[3633]	LOADK    	R10 K45 ; R10 := ""
	193	[3633]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	194	[3636]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	195	[3636]	GETGLOBAL	R8 K17 ; R8 := 0x25d99d89
	196	[3636]	CALL     	R7 2 2 ; R7 := R7(R8)
	197	[3636]	TEST     	R7 1 ; if R7 then PC := 215
	198	[3636]	JMP      	215 ; PC := 215
	199	[3637]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	200	[3637]	GETGLOBAL	R8 K46 ; R8 := 0xbe190284
	201	[3637]	CALL     	R7 2 2 ; R7 := R7(R8)
	202	[3637]	TEST     	R7 1 ; if R7 then PC := 210
	203	[3637]	JMP      	210 ; PC := 210
	204	[3638]	GETGLOBAL	R7 K0 ; R7 := _T
	205	[3638]	GETGLOBAL	R8 K0 ; R8 := _T
	206	[3638]	GETTABLE 	R8 R8 K5 ; R8 := R8["MenuSuitAvatar"]
	207	[3638]	SETTABLE 	R7 K47 R8 ; R7["ArsenalAvatar"] := R8
	208	[3639]	GETGLOBAL	R7 K0 ; R7 := _T
	209	[3639]	SETTABLE 	R7 K48 K49 ; R7["useArsenalAvatar"] := true
	210	[3641]	GETGLOBAL	R7 K17 ; R7 := 0x25d99d89
	211	[3641]	SELF     	R7 R7 K50 ; R8 := R7; R7 := R7[0xb6e2ab0d]
	212	[3641]	LOADK    	R9 K51 ; R9 := "OnSaveLoadOutComplete"
	213	[3641]	CALL     	R7 3 1 ; R7(R8,R9)
	214	[3641]	JMP      	227 ; PC := 227
	215	[3643]	GETGLOBAL	R7 K0 ; R7 := _T
	216	[3643]	GETTABLE 	R7 R7 K52 ; R7 := R7[0x4e4e6b0c]
	217	[3643]	LOADK    	R8 := 1.000000
	218	[3643]	GETUPVAL 	R9 U8 ; R9 := U8
	219	[3643]	CALL     	R9 1 2 ; R9 := R9()
	220	[3643]	NOT      	R9 R9 ; R9 := not R9
	221	[3643]	CALL     	R7 3 1 ; R7(R8,R9)
	222	[3644]	GETGLOBAL	R7 K0 ; R7 := _T
	223	[3644]	GETTABLE 	R7 R7 K53 ; R7 := R7["mTrigger"]
	224	[3644]	SELF     	R7 R7 K54 ; R8 := R7; R7 := R7[0x8eb2112d]
	225	[3644]	LOADK    	R9 K44 ; R9 := "Close"
	226	[3644]	CALL     	R7 3 1 ; R7(R8,R9)
	227	[3647]	GETUPVAL 	R7 U9 ; R7 := U9
	228	[3647]	CALL     	R7 1 1 ; R7()
	229	[3648]	GETUPVAL 	R7 U10 ; R7 := U10
	230	[3648]	CALL     	R7 1 1 ; R7()
	231	[3650]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	232	[3650]	GETGLOBAL	R8 K0 ; R8 := _T
	233	[3650]	GETTABLE 	R8 R8 K5 ; R8 := R8["MenuSuitAvatar"]
	234	[3650]	CALL     	R7 2 2 ; R7 := R7(R8)
	235	[3650]	TEST     	R7 1 ; if R7 then PC := 244
	236	[3650]	JMP      	244 ; PC := 244
	237	[3651]	GETGLOBAL	R7 K0 ; R7 := _T
	238	[3651]	GETTABLE 	R7 R7 K5 ; R7 := R7["MenuSuitAvatar"]
	239	[3651]	SELF     	R7 R7 K55 ; R8 := R7; R7 := R7[0xde321e6f]
	240	[3651]	CALL     	R7 2 2 ; R7 := R7(R8)
	241	[3651]	SELF     	R7 R7 K56 ; R8 := R7; R7 := R7[0xb4af1972]
	242	[3651]	OP_LOADBOOL	R9 1 0 ; R9 := true
	243	[3651]	CALL     	R7 3 1 ; R7(R8,R9)
	244	[3653]	GETGLOBAL	R7 K0 ; R7 := _T
	245	[3653]	SETTABLE 	R7 K57 K49 ; R7["PetNameNeedsUpdate"] := true
	246	[3654]	GETGLOBAL	R7 K0 ; R7 := _T
	247	[3654]	SETTABLE 	R7 K58 K59 ; R7["mSentinelMode"] := false
	248	[3656]	GETGLOBAL	R7 K0 ; R7 := _T
	249	[3656]	GETTABLE 	R7 R7 K60 ; R7 := R7["InSimulacrum"]
	250	[3656]	TEST     	R7 0 ; if not R7 then PC := 255
	251	[3656]	JMP      	255 ; PC := 255
	252	[3656]	GETUPVAL 	R7 U11 ; R7 := U11
	253	[3656]	TEST     	R7 0 ; if not R7 then PC := 257
	254	[3656]	JMP      	257 ; PC := 257
	255	[3657]	GETGLOBAL	R7 K0 ; R7 := _T
	256	[3657]	SETTABLE 	R7 K61 K38 ; R7["LoadoutSaveRequired"] := nil
	257	[3660]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	258	[3660]	GETGLOBAL	R8 K62 ; R8 := 0xcb79539e
	259	[3660]	CALL     	R7 2 2 ; R7 := R7(R8)
	260	[3660]	TEST     	R7 1 ; if R7 then PC := 283
	261	[3660]	JMP      	283 ; PC := 283
	262	[3661]	GETUPVAL 	R7 U12 ; R7 := U12
	263	[3661]	TEST     	R7 0 ; if not R7 then PC := 276
	264	[3661]	JMP      	276 ; PC := 276
	265	[3662]	GETGLOBAL	R7 K62 ; R7 := 0xcb79539e
	266	[3662]	SELF     	R7 R7 K63 ; R8 := R7; R7 := R7[0xa9188a47]
	267	[3662]	GETGLOBAL	R9 K31 ; R9 := 0x0469f296
	268	[3662]	LOADK    	R10 K64 ; R10 := "IN_SHIP_VIEW_TIME"
	269	[3662]	CALL     	R9 2 2 ; R9 := R9(R10)
	270	[3662]	LOADK    	R10 K65 ; R10 := "EQUIPMENT_ARSENAL_"
	271	[3662]	GETUPVAL 	R11 U12 ; R11 := U12
	272	[3662]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	273	[3662]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	274	[3663]	LOADNIL  	R7 R7 ; R7 := nil
	275	[3663]	SETUPVAL 	R7 U12 ; U12 := R7
	276	[3665]	GETGLOBAL	R7 K62 ; R7 := 0xcb79539e
	277	[3665]	SELF     	R7 R7 K63 ; R8 := R7; R7 := R7[0xa9188a47]
	278	[3665]	GETGLOBAL	R9 K31 ; R9 := 0x0469f296
	279	[3665]	LOADK    	R10 K64 ; R10 := "IN_SHIP_VIEW_TIME"
	280	[3665]	CALL     	R9 2 2 ; R9 := R9(R10)
	281	[3665]	LOADK    	R10 K66 ; R10 := "EQUIPMENT_ARSENAL_MAIN"
	282	[3665]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	283	[3668]	GETGLOBAL	R7 K0 ; R7 := _T
	284	[3668]	GETTABLE 	R7 R7 K67 ; R7 := R7["BackgroundMovie"]
	285	[3668]	EQ       	1 R7 K38 ; if R7 == nil then PC := 311
	286	[3668]	JMP      	311 ; PC := 311
	287	[3669]	GETUPVAL 	R7 U2 ; R7 := U2
	288	[3669]	GETTABLE 	R7 R7 K68 ; R7 := R7[0x23ddc82a]
	289	[3669]	CALL     	R7 1 2 ; R7 := R7()
	290	[3669]	TEST     	R7 0 ; if not R7 then PC := 299
	291	[3669]	JMP      	299 ; PC := 299
	292	[3670]	GETGLOBAL	R7 K0 ; R7 := _T
	293	[3670]	GETTABLE 	R7 R7 K67 ; R7 := R7["BackgroundMovie"]
	294	[3670]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0xe4162eed]
	295	[3670]	LOADK    	R9 K69 ; R9 := "UpdateApartmentDisplayWarframe"
	296	[3670]	LOADK    	R10 K70 ; R10 := "false"
	297	[3670]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	298	[3670]	JMP      	305 ; PC := 305
	299	[3672]	GETGLOBAL	R7 K0 ; R7 := _T
	300	[3672]	GETTABLE 	R7 R7 K67 ; R7 := R7["BackgroundMovie"]
	301	[3672]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0xe4162eed]
	302	[3672]	LOADK    	R9 K71 ; R9 := "UpdateShipFavouriteWarframe"
	303	[3672]	LOADK    	R10 K70 ; R10 := "false"
	304	[3672]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	305	[3674]	GETGLOBAL	R7 K0 ; R7 := _T
	306	[3674]	GETTABLE 	R7 R7 K67 ; R7 := R7["BackgroundMovie"]
	307	[3674]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0xe4162eed]
	308	[3674]	LOADK    	R9 K72 ; R9 := "ClosePod"
	309	[3674]	LOADK    	R10 K45 ; R10 := ""
	310	[3674]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	311	[3676]	RETURN   	R0 1 ; return 

function #64 <?:3678,3730> (190 instructions, 760 bytes at 00000211303D2FF0)
1 param, 14 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[3679]	GETTABLE 	R1 R0 K0 ; R1 := R0["LoadOutId"]
	2	[3679]	EQ       	1 R1 K1 ; if R1 == nil then PC := 190
	3	[3679]	JMP      	190 ; PC := 190
	4	[3679]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[3679]	GETGLOBAL	R2 K3 ; R2 := _T
	6	[3679]	GETTABLE 	R2 R2 K4 ; R2 := R2["MenuSuitAvatar"]
	7	[3679]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[3679]	TEST     	R1 1 ; if R1 then PC := 190
	9	[3679]	JMP      	190 ; PC := 190
	10	[3680]	GETGLOBAL	R1 K3 ; R1 := _T
	11	[3680]	GETTABLE 	R1 R1 K4 ; R1 := R1["MenuSuitAvatar"]
	12	[3681]	MOVE     	R2 R1 ; R2 := R1
	13	[3682]	LOADNIL  	R3 R3 ; R3 := nil
	14	[3683]	GETTABLE 	R4 R0 K0 ; R4 := R0["LoadOutId"]
	15	[3683]	EQ       	0 R4 K6 ; if R4 ~= 1.000000 then PC := 38
	16	[3683]	JMP      	38 ; PC := 38
	17	[3684]	SELF     	R4 R1 K7 ; R5 := R1; R4 := R1[0xde321e6f]
	18	[3684]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[3684]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xe85a2361]
	20	[3684]	LOADK    	R6 := 0.000000
	21	[3684]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	22	[3685]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	23	[3685]	MOVE     	R6 R4 ; R6 := R4
	24	[3685]	CALL     	R5 2 2 ; R5 := R5(R6)
	25	[3685]	TEST     	R5 1 ; if R5 then PC := 172
	26	[3685]	JMP      	172 ; PC := 172
	27	[3686]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x92c56c50]
	28	[3686]	LOADK    	R7 := 1.000000
	29	[3686]	LOADK    	R8 := 0.000000
	30	[3686]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	31	[3686]	MOVE     	R2 R5 ; R2 := R5
	32	[3687]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x92c56c50]
	33	[3687]	LOADK    	R7 := 1.000000
	34	[3687]	LOADK    	R8 := 1.000000
	35	[3687]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	36	[3687]	MOVE     	R3 R5 ; R3 := R5
	37	[3688]	JMP      	172 ; PC := 172
	38	[3689]	GETTABLE 	R5 R0 K11 ; R5 := R0["LoadOutType"]
	39	[3689]	EQ       	1 R5 K12 ; if R5 == 0.000000 then PC := 44
	40	[3689]	JMP      	44 ; PC := 44
	41	[3689]	GETTABLE 	R5 R0 K11 ; R5 := R0["LoadOutType"]
	42	[3689]	EQ       	0 R5 K13 ; if R5 ~= 2.000000 then PC := 81
	43	[3689]	JMP      	81 ; PC := 81
	44	[3689]	GETTABLE 	R5 R0 K0 ; R5 := R0["LoadOutId"]
	45	[3689]	EQ       	1 R5 K13 ; if R5 == 2.000000 then PC := 50
	46	[3689]	JMP      	50 ; PC := 50
	47	[3689]	GETTABLE 	R5 R0 K0 ; R5 := R0["LoadOutId"]
	48	[3689]	EQ       	0 R5 K14 ; if R5 ~= 4.000000 then PC := 81
	49	[3689]	JMP      	81 ; PC := 81
	50	[3690]	GETUPVAL 	R5 U0 ; R5 := U0
	51	[3690]	GETTABLE 	R5 R5 K15 ; R5 := R5[0x06d055f9]
	52	[3690]	GETTABLE 	R6 R0 K0 ; R6 := R0["LoadOutId"]
	53	[3690]	EQ       	1 R6 K13 ; if R6 == 2.000000 then PC := 56
	54	[3690]	JMP      	56 ; PC := 56
	55	[3690]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 56
	56	[3690]	OP_LOADBOOL	R6 1 0 ; R6 := true
	57	[3690]	LOADK    	R7 := 1.000000
	58	[3690]	LOADK    	R8 := 10.000000
	59	[3690]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	60	[3691]	SELF     	R6 R1 K7 ; R7 := R1; R6 := R1[0xde321e6f]
	61	[3691]	CALL     	R6 2 2 ; R6 := R6(R7)
	62	[3691]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0xe85a2361]
	63	[3691]	MOVE     	R8 R5 ; R8 := R5
	64	[3691]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	65	[3692]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	66	[3692]	MOVE     	R8 R6 ; R8 := R6
	67	[3692]	CALL     	R7 2 2 ; R7 := R7(R8)
	68	[3692]	TEST     	R7 1 ; if R7 then PC := 172
	69	[3692]	JMP      	172 ; PC := 172
	70	[3693]	SELF     	R7 R6 K10 ; R8 := R6; R7 := R6[0x92c56c50]
	71	[3693]	LOADK    	R9 := 1.000000
	72	[3693]	LOADK    	R10 := 0.000000
	73	[3693]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	74	[3693]	MOVE     	R2 R7 ; R2 := R7
	75	[3694]	SELF     	R7 R6 K10 ; R8 := R6; R7 := R6[0x92c56c50]
	76	[3694]	LOADK    	R9 := 1.000000
	77	[3694]	LOADK    	R10 := 1.000000
	78	[3694]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	79	[3694]	MOVE     	R3 R7 ; R3 := R7
	80	[3695]	JMP      	172 ; PC := 172
	81	[3696]	GETTABLE 	R7 R0 K11 ; R7 := R0["LoadOutType"]
	82	[3696]	EQ       	1 R7 K12 ; if R7 == 0.000000 then PC := 87
	83	[3696]	JMP      	87 ; PC := 87
	84	[3696]	GETTABLE 	R7 R0 K11 ; R7 := R0["LoadOutType"]
	85	[3696]	EQ       	0 R7 K13 ; if R7 ~= 2.000000 then PC := 111
	86	[3696]	JMP      	111 ; PC := 111
	87	[3696]	GETTABLE 	R7 R0 K0 ; R7 := R0["LoadOutId"]
	88	[3696]	EQ       	0 R7 K16 ; if R7 ~= 3.000000 then PC := 111
	89	[3696]	JMP      	111 ; PC := 111
	90	[3697]	SELF     	R7 R1 K7 ; R8 := R1; R7 := R1[0xde321e6f]
	91	[3697]	CALL     	R7 2 2 ; R7 := R7(R8)
	92	[3697]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0xe85a2361]
	93	[3697]	LOADK    	R9 := 5.000000
	94	[3697]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	95	[3698]	GETGLOBAL	R8 K2 ; R8 := 0x7b998233
	96	[3698]	MOVE     	R9 R7 ; R9 := R7
	97	[3698]	CALL     	R8 2 2 ; R8 := R8(R9)
	98	[3698]	TEST     	R8 1 ; if R8 then PC := 172
	99	[3698]	JMP      	172 ; PC := 172
	100	[3699]	SELF     	R8 R7 K10 ; R9 := R7; R8 := R7[0x92c56c50]
	101	[3699]	LOADK    	R10 := 1.000000
	102	[3699]	LOADK    	R11 := 0.000000
	103	[3699]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	104	[3699]	MOVE     	R2 R8 ; R2 := R8
	105	[3700]	SELF     	R8 R7 K10 ; R9 := R7; R8 := R7[0x92c56c50]
	106	[3700]	LOADK    	R10 := 1.000000
	107	[3700]	LOADK    	R11 := 1.000000
	108	[3700]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	109	[3700]	MOVE     	R3 R8 ; R3 := R8
	110	[3701]	JMP      	172 ; PC := 172
	111	[3702]	GETTABLE 	R8 R0 K11 ; R8 := R0["LoadOutType"]
	112	[3702]	EQ       	0 R8 K6 ; if R8 ~= 1.000000 then PC := 117
	113	[3702]	JMP      	117 ; PC := 117
	114	[3703]	GETGLOBAL	R8 K3 ; R8 := _T
	115	[3703]	GETTABLE 	R2 R8 K17 ; R2 := R8["MenuSentinel"]
	116	[3703]	JMP      	172 ; PC := 172
	117	[3704]	GETTABLE 	R8 R0 K0 ; R8 := R0["LoadOutId"]
	118	[3704]	EQ       	0 R8 K18 ; if R8 ~= 5.000000 then PC := 149
	119	[3704]	JMP      	149 ; PC := 149
	120	[3705]	GETGLOBAL	R8 K3 ; R8 := _T
	121	[3705]	GETTABLE 	R8 R8 K19 ; R8 := R8["mSpecialSuitMode"]
	122	[3705]	TEST     	R8 0 ; if not R8 then PC := 128
	123	[3705]	JMP      	128 ; PC := 128
	124	[3706]	GETGLOBAL	R8 K3 ; R8 := _T
	125	[3706]	GETTABLE 	R1 R8 K20 ; R1 := R8["SpecialSuitAvatar"]
	126	[3707]	MOVE     	R2 R1 ; R2 := R1
	127	[3707]	JMP      	172 ; PC := 172
	128	[3709]	SELF     	R8 R1 K7 ; R9 := R1; R8 := R1[0xde321e6f]
	129	[3709]	CALL     	R8 2 2 ; R8 := R8(R9)
	130	[3709]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0xe85a2361]
	131	[3709]	LOADK    	R10 := 7.000000
	132	[3709]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	133	[3710]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	134	[3710]	MOVE     	R10 R8 ; R10 := R8
	135	[3710]	CALL     	R9 2 2 ; R9 := R9(R10)
	136	[3710]	TEST     	R9 1 ; if R9 then PC := 172
	137	[3710]	JMP      	172 ; PC := 172
	138	[3711]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0x92c56c50]
	139	[3711]	LOADK    	R11 := 1.000000
	140	[3711]	LOADK    	R12 := 0.000000
	141	[3711]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	142	[3711]	MOVE     	R2 R9 ; R2 := R9
	143	[3712]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0x92c56c50]
	144	[3712]	LOADK    	R11 := 1.000000
	145	[3712]	LOADK    	R12 := 1.000000
	146	[3712]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	147	[3712]	MOVE     	R3 R9 ; R3 := R9
	148	[3714]	JMP      	172 ; PC := 172
	149	[3715]	GETTABLE 	R9 R0 K0 ; R9 := R0["LoadOutId"]
	150	[3715]	EQ       	0 R9 K21 ; if R9 ~= 6.000000 then PC := 172
	151	[3715]	JMP      	172 ; PC := 172
	152	[3716]	SELF     	R9 R1 K7 ; R10 := R1; R9 := R1[0xde321e6f]
	153	[3716]	CALL     	R9 2 2 ; R9 := R9(R10)
	154	[3716]	SELF     	R9 R9 K8 ; R10 := R9; R9 := R9[0xe85a2361]
	155	[3716]	LOADK    	R11 := 7.000000
	156	[3716]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	157	[3717]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	158	[3717]	MOVE     	R11 R9 ; R11 := R9
	159	[3717]	CALL     	R10 2 2 ; R10 := R10(R11)
	160	[3717]	TEST     	R10 1 ; if R10 then PC := 172
	161	[3717]	JMP      	172 ; PC := 172
	162	[3718]	SELF     	R10 R9 K10 ; R11 := R9; R10 := R9[0x92c56c50]
	163	[3718]	LOADK    	R12 := 1.000000
	164	[3718]	LOADK    	R13 := 0.000000
	165	[3718]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	166	[3718]	MOVE     	R2 R10 ; R2 := R10
	167	[3719]	SELF     	R10 R9 K10 ; R11 := R9; R10 := R9[0x92c56c50]
	168	[3719]	LOADK    	R12 := 1.000000
	169	[3719]	LOADK    	R13 := 1.000000
	170	[3719]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	171	[3719]	MOVE     	R3 R10 ; R3 := R10
	172	[3723]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	173	[3723]	MOVE     	R11 R2 ; R11 := R2
	174	[3723]	CALL     	R10 2 2 ; R10 := R10(R11)
	175	[3723]	TEST     	R10 1 ; if R10 then PC := 181
	176	[3723]	JMP      	181 ; PC := 181
	177	[3724]	SELF     	R10 R2 K22 ; R11 := R2; R10 := R2[0x47901f07]
	178	[3724]	GETGLOBAL	R12 K23 ; R12 := 0xd5276cb9
	179	[3724]	GETGLOBAL	R13 K24 ; R13 := EMPTY_SYMBOL
	180	[3724]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	181	[3726]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	182	[3726]	MOVE     	R11 R3 ; R11 := R3
	183	[3726]	CALL     	R10 2 2 ; R10 := R10(R11)
	184	[3726]	TEST     	R10 1 ; if R10 then PC := 190
	185	[3726]	JMP      	190 ; PC := 190
	186	[3727]	SELF     	R10 R3 K22 ; R11 := R3; R10 := R3[0x47901f07]
	187	[3727]	GETGLOBAL	R12 K23 ; R12 := 0xd5276cb9
	188	[3727]	GETGLOBAL	R13 K24 ; R13 := EMPTY_SYMBOL
	189	[3727]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	190	[3730]	RETURN   	R0 1 ; return 

function #65 <?:3732,3753> (57 instructions, 228 bytes at 00000211303D3840)
1 param, 13 slots, 2 upvalues, 0 locals, 18 constants, 0 functions
	1	[3733]	TEST     	R0 1 ; if R0 then PC := 6
	2	[3733]	JMP      	6 ; PC := 6
	3	[3733]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[3733]	GETTABLE 	R1 R1 K0 ; R1 := R1["mStatCompare"]
	5	[3733]	GETTABLE 	R0 R1 K1 ; R0 := R1["TipIndex"]
	6	[3734]	EQ       	1 R0 K2 ; if R0 == nil then PC := 57
	7	[3734]	JMP      	57 ; PC := 57
	8	[3735]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[3735]	GETTABLE 	R1 R1 K0 ; R1 := R1["mStatCompare"]
	10	[3735]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x5465f8f3]
	11	[3735]	MOVE     	R3 R0 ; R3 := R0
	12	[3735]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	13	[3736]	EQ       	1 R1 K2 ; if R1 == nil then PC := 57
	14	[3736]	JMP      	57 ; PC := 57
	15	[3736]	GETTABLE 	R2 R1 K4 ; R2 := R1["Current"]
	16	[3736]	GETTABLE 	R2 R2 K5 ; R2 := R2["ToolTip"]
	17	[3736]	EQ       	1 R2 K2 ; if R2 == nil then PC := 57
	18	[3736]	JMP      	57 ; PC := 57
	19	[3737]	GETUPVAL 	R2 U0 ; R2 := U0
	20	[3737]	GETTABLE 	R2 R2 K0 ; R2 := R2["mStatCompare"]
	21	[3737]	SETTABLE 	R2 K1 R0 ; R2[0x26072944] := R0
	22	[3738]	NEWTABLE 	R2 0 3 ; R2 := {}
	23	[3739]	SETTABLE 	R2 K6 K7 ; R2["CustomEntry"] := true
	24	[3740]	GETTABLE 	R3 R1 K9 ; R3 := R1["Label"]
	25	[3740]	SETTABLE 	R2 K8 R3 ; R2["Name"] := R3
	26	[3741]	GETTABLE 	R3 R1 K4 ; R3 := R1["Current"]
	27	[3741]	GETTABLE 	R3 R3 K5 ; R3 := R3["ToolTip"]
	28	[3741]	SETTABLE 	R2 K10 R3 ; R2[0xcde10c4a] := R3
	29	[3744]	GETUPVAL 	R3 U1 ; R3 := U1
	30	[3744]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xfc3fed1f]
	31	[3744]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	32	[3744]	MOVE     	R5 R2 ; R5 := R2
	33	[3745]	GETGLOBAL	R6 K12 ; R6 := 0xae91e43b
	34	[3745]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0x91a24e4b]
	35	[3745]	GETTABLE 	R8 R1 K14 ; R8 := R1["mClipName"]
	36	[3745]	LOADK    	R9 := 2.000000
	37	[3745]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	38	[3746]	GETGLOBAL	R7 K12 ; R7 := 0xae91e43b
	39	[3746]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0x91a24e4b]
	40	[3746]	GETTABLE 	R9 R1 K14 ; R9 := R1["mClipName"]
	41	[3746]	LOADK    	R10 := 3.000000
	42	[3746]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	43	[3747]	GETGLOBAL	R8 K12 ; R8 := 0xae91e43b
	44	[3747]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x91a24e4b]
	45	[3747]	GETTABLE 	R10 R1 K14 ; R10 := R1["mClipName"]
	46	[3747]	LOADK    	R11 := 12.000000
	47	[3747]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	48	[3747]	SUB      	R8 R8 K15 ; R8 := R8 - 50.000000
	49	[3748]	GETGLOBAL	R9 K12 ; R9 := 0xae91e43b
	50	[3748]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0x91a24e4b]
	51	[3748]	GETTABLE 	R11 R1 K14 ; R11 := R1["mClipName"]
	52	[3748]	LOADK    	R12 := 13.000000
	53	[3748]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	54	[3744]	CALL     	R3 0 1 ; R3(R4,...)
	55	[3750]	GETGLOBAL	R3 K16 ; R3 := _T
	56	[3750]	SETTABLE 	R3 K17 R2 ; R3["InfoPopup_Data"] := R2
	57	[3753]	RETURN   	R0 1 ; return 

function #66 <?:3755,3795> (211 instructions, 844 bytes at 00000211303D3C00)
2 params, 13 slots, 3 upvalues, 0 locals, 45 constants, 0 functions
	1	[3756]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	2	[3756]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x91a24e4b]
	3	[3756]	LOADK    	R4 K2 ; R4 := "CosmeticDesc"
	4	[3756]	LOADK    	R5 := 34.000000
	5	[3756]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	6	[3757]	LOADK    	R3 := 0.000000
	7	[3758]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	8	[3758]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x5b0290d2]
	9	[3758]	LOADK    	R6 K4 ; R6 := "EquippedTitle"
	10	[3758]	LOADK    	R7 := 11.000000
	11	[3758]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	12	[3758]	TEST     	R4 0 ; if not R4 then PC := 20
	13	[3758]	JMP      	20 ; PC := 20
	14	[3759]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	15	[3759]	SELF     	R4 R4 K1 ; R5 := R4; R4 := R4[0x91a24e4b]
	16	[3759]	LOADK    	R6 K4 ; R6 := "EquippedTitle"
	17	[3759]	LOADK    	R7 := 34.000000
	18	[3759]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	19	[3759]	MOVE     	R3 R4 ; R3 := R4
	20	[3762]	GETUPVAL 	R4 U0 ; R4 := U0
	21	[3762]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x06d055f9]
	22	[3762]	GETGLOBAL	R5 K6 ; R5 := 0x7b998233
	23	[3762]	MOVE     	R6 R0 ; R6 := R0
	24	[3762]	CALL     	R5 2 2 ; R5 := R5(R6)
	25	[3762]	TEST     	R5 1 ; if R5 then PC := 30
	26	[3762]	JMP      	30 ; PC := 30
	27	[3762]	GETTABLE 	R5 R0 K7 ; R5 := R0["LoadOutId"]
	28	[3762]	EQ       	1 R5 K9 ; if R5 == 0.000000 then PC := 31
	29	[3762]	JMP      	31 ; PC := 31
	30	[3762]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 31
	31	[3762]	OP_LOADBOOL	R5 1 0 ; R5 := true
	32	[3762]	LOADK    	R6 := 425.000000
	33	[3762]	LOADK    	R7 := 800.000000
	34	[3762]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	35	[3763]	GETUPVAL 	R5 U1 ; R5 := U1
	36	[3763]	GETTABLE 	R5 R5 K10 ; R5 := R5["mStatCompare"]
	37	[3763]	ADD      	R6 R2 R3 ; R6 := R2 + R3
	38	[3763]	ADD      	R6 R6 K12 ; R6 := R6 + 50.000000
	39	[3763]	SUB      	R6 R4 R6 ; R6 := R4 - R6
	40	[3763]	SETTABLE 	R5 K11 R6 ; R5[0x765dad71] := R6
	41	[3764]	GETGLOBAL	R5 K6 ; R5 := 0x7b998233
	42	[3764]	GETGLOBAL	R6 K13 ; R6 := mEvoMovie
	43	[3764]	CALL     	R5 2 2 ; R5 := R5(R6)
	44	[3764]	TEST     	R5 1 ; if R5 then PC := 60
	45	[3764]	JMP      	60 ; PC := 60
	46	[3765]	GETGLOBAL	R5 K13 ; R5 := mEvoMovie
	47	[3765]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xe4162eed]
	48	[3765]	LOADK    	R7 K15 ; R7 := "ArsenalModeYOffset"
	49	[3765]	GETGLOBAL	R8 K16 ; R8 := 0x64fb1586
	50	[3765]	SUB      	R9 R2 K17 ; R9 := R2 - 35.000000
	51	[3765]	CALL     	R8 2 0 ; R8,... := R8(R9)
	52	[3765]	CALL     	R5 0 1 ; R5(R6,...)
	53	[3766]	GETUPVAL 	R5 U1 ; R5 := U1
	54	[3766]	GETTABLE 	R5 R5 K10 ; R5 := R5["mStatCompare"]
	55	[3766]	GETUPVAL 	R6 U1 ; R6 := U1
	56	[3766]	GETTABLE 	R6 R6 K10 ; R6 := R6["mStatCompare"]
	57	[3766]	GETTABLE 	R6 R6 K11 ; R6 := R6["mMaxHeight"]
	58	[3766]	SUB      	R6 R6 K18 ; R6 := R6 - 270.000000
	59	[3766]	SETTABLE 	R5 K11 R6 ; R5[0x765dad71] := R6
	60	[3769]	GETUPVAL 	R5 U1 ; R5 := U1
	61	[3769]	GETTABLE 	R5 R5 K10 ; R5 := R5["mStatCompare"]
	62	[3769]	SETTABLE 	R5 K19 R1 ; R5[0x5f56eeab] := R1
	63	[3770]	GETUPVAL 	R5 U1 ; R5 := U1
	64	[3770]	GETTABLE 	R5 R5 K10 ; R5 := R5["mStatCompare"]
	65	[3770]	SELF     	R5 R5 K20 ; R6 := R5; R5 := R5[0x71e9ac81]
	66	[3770]	CALL     	R5 2 1 ; R5(R6)
	67	[3772]	GETUPVAL 	R5 U1 ; R5 := U1
	68	[3772]	GETTABLE 	R5 R5 K10 ; R5 := R5["mStatCompare"]
	69	[3772]	GETUPVAL 	R6 U1 ; R6 := U1
	70	[3772]	GETTABLE 	R6 R6 K10 ; R6 := R6["mStatCompare"]
	71	[3772]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0xf95e8229]
	72	[3772]	CALL     	R6 2 2 ; R6 := R6(R7)
	73	[3772]	SETTABLE 	R5 K21 R6 ; R5["mRawHeight"] := R6
	74	[3773]	GETUPVAL 	R5 U1 ; R5 := U1
	75	[3773]	GETTABLE 	R5 R5 K10 ; R5 := R5["mStatCompare"]
	76	[3773]	GETGLOBAL	R6 K24 ; R6 := 0x5bced4c4
	77	[3773]	GETTABLE 	R6 R6 K25 ; R6 := R6[0xac1b386a]
	78	[3773]	GETUPVAL 	R7 U1 ; R7 := U1
	79	[3773]	GETTABLE 	R7 R7 K10 ; R7 := R7["mStatCompare"]
	80	[3773]	GETTABLE 	R7 R7 K21 ; R7 := R7["mRawHeight"]
	81	[3773]	GETUPVAL 	R8 U1 ; R8 := U1
	82	[3773]	GETTABLE 	R8 R8 K10 ; R8 := R8["mStatCompare"]
	83	[3773]	GETTABLE 	R8 R8 K11 ; R8 := R8["mMaxHeight"]
	84	[3773]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	85	[3773]	SETTABLE 	R5 K23 R6 ; R5[0x6728fd22] := R6
	86	[3774]	GETUPVAL 	R5 U1 ; R5 := U1
	87	[3774]	GETTABLE 	R5 R5 K10 ; R5 := R5["mStatCompare"]
	88	[3774]	GETTABLE 	R5 R5 K23 ; R5 := R5["mListHeight"]
	89	[3774]	ADD      	R5 R5 K26 ; R5 := R5 + 10.000000
	90	[3775]	GETUPVAL 	R6 U1 ; R6 := U1
	91	[3775]	GETTABLE 	R6 R6 K10 ; R6 := R6["mStatCompare"]
	92	[3775]	GETUPVAL 	R7 U1 ; R7 := U1
	93	[3775]	GETTABLE 	R7 R7 K10 ; R7 := R7["mStatCompare"]
	94	[3775]	GETTABLE 	R7 R7 K28 ; R7 := R7["mInitListYPos"]
	95	[3775]	GETUPVAL 	R8 U1 ; R8 := U1
	96	[3775]	GETTABLE 	R8 R8 K10 ; R8 := R8["mStatCompare"]
	97	[3775]	GETTABLE 	R8 R8 K23 ; R8 := R8["mListHeight"]
	98	[3775]	SUB      	R7 R7 R8 ; R7 := R7 - R8
	99	[3775]	SETTABLE 	R6 K27 R7 ; R6[0xdbfbf6c0] := R7
	100	[3776]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	101	[3776]	SELF     	R6 R6 K29 ; R7 := R6; R6 := R6[0x67bc869f]
	102	[3776]	LOADK    	R8 K30 ; R8 := "StatContainer.List"
	103	[3776]	LOADK    	R9 := 1.000000
	104	[3776]	GETUPVAL 	R10 U1 ; R10 := U1
	105	[3776]	GETTABLE 	R10 R10 K10 ; R10 := R10["mStatCompare"]
	106	[3776]	GETTABLE 	R10 R10 K27 ; R10 := R10["mListYPos"]
	107	[3776]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	108	[3777]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	109	[3777]	SELF     	R6 R6 K29 ; R7 := R6; R6 := R6[0x67bc869f]
	110	[3777]	LOADK    	R8 K31 ; R8 := "StatContainer.Mask"
	111	[3777]	LOADK    	R9 := 1.000000
	112	[3777]	GETUPVAL 	R10 U1 ; R10 := U1
	113	[3777]	GETTABLE 	R10 R10 K10 ; R10 := R10["mStatCompare"]
	114	[3777]	GETTABLE 	R10 R10 K27 ; R10 := R10["mListYPos"]
	115	[3777]	SUB      	R10 R10 K32 ; R10 := R10 - 1.000000
	116	[3777]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	117	[3778]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	118	[3778]	SELF     	R6 R6 K29 ; R7 := R6; R6 := R6[0x67bc869f]
	119	[3778]	LOADK    	R8 K33 ; R8 := "StatContainer.ScrollBarContainer"
	120	[3778]	LOADK    	R9 := 1.000000
	121	[3778]	GETUPVAL 	R10 U1 ; R10 := U1
	122	[3778]	GETTABLE 	R10 R10 K10 ; R10 := R10["mStatCompare"]
	123	[3778]	GETTABLE 	R10 R10 K27 ; R10 := R10["mListYPos"]
	124	[3778]	SUB      	R10 R10 K34 ; R10 := R10 - 5.000000
	125	[3778]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	126	[3779]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	127	[3779]	SELF     	R6 R6 K1 ; R7 := R6; R6 := R6[0x91a24e4b]
	128	[3779]	LOADK    	R8 K4 ; R8 := "EquippedTitle"
	129	[3779]	LOADK    	R9 := 34.000000
	130	[3779]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	131	[3780]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	132	[3780]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0x67bc869f]
	133	[3780]	LOADK    	R9 K4 ; R9 := "EquippedTitle"
	134	[3780]	LOADK    	R10 := 1.000000
	135	[3780]	GETUPVAL 	R11 U1 ; R11 := U1
	136	[3780]	GETTABLE 	R11 R11 K10 ; R11 := R11["mStatCompare"]
	137	[3780]	GETTABLE 	R11 R11 K35 ; R11 := R11["mContainerYPos"]
	138	[3780]	ADD      	R12 R5 K34 ; R12 := R5 + 5.000000
	139	[3780]	SUB      	R11 R11 R12 ; R11 := R11 - R12
	140	[3780]	SUB      	R11 R11 R6 ; R11 := R11 - R6
	141	[3780]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	142	[3781]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	143	[3781]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0x67bc869f]
	144	[3781]	LOADK    	R9 K36 ; R9 := "StatContainer.Bg"
	145	[3781]	LOADK    	R10 := 13.000000
	146	[3781]	MOVE     	R11 R5 ; R11 := R5
	147	[3781]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	148	[3782]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	149	[3782]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0x67bc869f]
	150	[3782]	LOADK    	R9 K37 ; R9 := "StatContainer.Blurer"
	151	[3782]	LOADK    	R10 := 13.000000
	152	[3782]	MOVE     	R11 R5 ; R11 := R5
	153	[3782]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	154	[3783]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	155	[3783]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0x67bc869f]
	156	[3783]	LOADK    	R9 K31 ; R9 := "StatContainer.Mask"
	157	[3783]	LOADK    	R10 := 13.000000
	158	[3783]	GETUPVAL 	R11 U1 ; R11 := U1
	159	[3783]	GETTABLE 	R11 R11 K10 ; R11 := R11["mStatCompare"]
	160	[3783]	GETTABLE 	R11 R11 K23 ; R11 := R11["mListHeight"]
	161	[3783]	ADD      	R11 R11 K34 ; R11 := R11 + 5.000000
	162	[3783]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	163	[3785]	GETUPVAL 	R7 U1 ; R7 := U1
	164	[3785]	GETTABLE 	R7 R7 K10 ; R7 := R7["mStatCompare"]
	165	[3785]	GETTABLE 	R7 R7 K21 ; R7 := R7["mRawHeight"]
	166	[3785]	GETUPVAL 	R8 U1 ; R8 := U1
	167	[3785]	GETTABLE 	R8 R8 K10 ; R8 := R8["mStatCompare"]
	168	[3785]	GETTABLE 	R8 R8 K11 ; R8 := R8["mMaxHeight"]
	169	[3785]	LT       	1 R8 R7 ; if R8 < R7 then PC := 172
	170	[3785]	JMP      	172 ; PC := 172
	171	[3785]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 172
	172	[3785]	OP_LOADBOOL	R7 1 0 ; R7 := true
	173	[3786]	GETUPVAL 	R8 U1 ; R8 := U1
	174	[3786]	GETTABLE 	R8 R8 K38 ; R8 := R8["mStatCompareScrollBar"]
	175	[3786]	SELF     	R8 R8 K39 ; R9 := R8; R8 := R8[0x44aa79ac]
	176	[3786]	LOADK    	R10 := 0.000000
	177	[3786]	OP_LOADBOOL	R11 0 0 ; R11 := false
	178	[3786]	OP_LOADBOOL	R12 1 0 ; R12 := true
	179	[3786]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	180	[3787]	GETUPVAL 	R8 U1 ; R8 := U1
	181	[3787]	GETTABLE 	R8 R8 K38 ; R8 := R8["mStatCompareScrollBar"]
	182	[3787]	SELF     	R8 R8 K40 ; R9 := R8; R8 := R8[0x0077d753]
	183	[3787]	MOVE     	R10 R7 ; R10 := R7
	184	[3787]	CALL     	R8 3 1 ; R8(R9,R10)
	185	[3788]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	186	[3788]	SELF     	R8 R8 K41 ; R9 := R8; R8 := R8[0xaade900e]
	187	[3788]	LOADK    	R10 K33 ; R10 := "StatContainer.ScrollBarContainer"
	188	[3788]	LOADK    	R11 := 11.000000
	189	[3788]	MOVE     	R12 R7 ; R12 := R7
	190	[3788]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	191	[3789]	TEST     	R7 0 ; if not R7 then PC := 209
	192	[3789]	JMP      	209 ; PC := 209
	193	[3790]	GETUPVAL 	R8 U1 ; R8 := U1
	194	[3790]	GETTABLE 	R8 R8 K38 ; R8 := R8["mStatCompareScrollBar"]
	195	[3790]	GETUPVAL 	R9 U1 ; R9 := U1
	196	[3790]	GETTABLE 	R9 R9 K10 ; R9 := R9["mStatCompare"]
	197	[3790]	GETTABLE 	R9 R9 K21 ; R9 := R9["mRawHeight"]
	198	[3790]	GETUPVAL 	R10 U1 ; R10 := U1
	199	[3790]	GETTABLE 	R10 R10 K10 ; R10 := R10["mStatCompare"]
	200	[3790]	GETTABLE 	R10 R10 K11 ; R10 := R10["mMaxHeight"]
	201	[3790]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	202	[3790]	DIV      	R9 K43 R9 ; R9 := 40.000000 / R9
	203	[3790]	SETTABLE 	R8 K42 R9 ; R8[0x00000001] := R9
	204	[3791]	GETUPVAL 	R8 U1 ; R8 := U1
	205	[3791]	GETTABLE 	R8 R8 K38 ; R8 := R8["mStatCompareScrollBar"]
	206	[3791]	SELF     	R8 R8 K44 ; R9 := R8; R8 := R8[0x425b8f0d]
	207	[3791]	MOVE     	R10 R5 ; R10 := R5
	208	[3791]	CALL     	R8 3 1 ; R8(R9,R10)
	209	[3794]	GETUPVAL 	R8 U2 ; R8 := U2
	210	[3794]	CALL     	R8 1 1 ; R8()
	211	[3795]	RETURN   	R0 1 ; return 

function #67 <?:3797,3854> (126 instructions, 504 bytes at 00000211303D4630)
3 params, 11 slots, 3 upvalues, 0 locals, 29 constants, 0 functions
	1	[3798]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[3799]	LOADNIL  	R4 R4 ; R4 := nil
	3	[3800]	GETUPVAL 	R5 U0 ; R5 := U0
	4	[3800]	MOVE     	R6 R1 ; R6 := R1
	5	[3800]	CALL     	R5 2 2 ; R5 := R5(R6)
	6	[3801]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 15
	7	[3801]	JMP      	15 ; PC := 15
	8	[3802]	EQ       	0 R2 K2 ; if R2 ~= 2.000000 then PC := 12
	9	[3802]	JMP      	12 ; PC := 12
	10	[3803]	LOADK    	R5 := 6.000000
	11	[3803]	JMP      	15 ; PC := 15
	12	[3804]	EQ       	0 R2 K4 ; if R2 ~= 7.000000 then PC := 15
	13	[3804]	JMP      	15 ; PC := 15
	14	[3805]	LOADK    	R5 := 11.000000
	15	[3810]	LOADNIL  	R6 R6 ; R6 := nil
	16	[3811]	GETGLOBAL	R7 K5 ; R7 := _T
	17	[3811]	GETTABLE 	R7 R7 K6 ; R7 := R7["mMechaSuitMode"]
	18	[3811]	TEST     	R7 0 ; if not R7 then PC := 29
	19	[3811]	JMP      	29 ; PC := 29
	20	[3811]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	21	[3811]	GETGLOBAL	R8 K5 ; R8 := _T
	22	[3811]	GETTABLE 	R8 R8 K8 ; R8 := R8["MechAvatar"]
	23	[3811]	CALL     	R7 2 2 ; R7 := R7(R8)
	24	[3811]	TEST     	R7 1 ; if R7 then PC := 29
	25	[3811]	JMP      	29 ; PC := 29
	26	[3812]	GETGLOBAL	R7 K5 ; R7 := _T
	27	[3812]	GETTABLE 	R6 R7 K8 ; R6 := R7["MechAvatar"]
	28	[3812]	JMP      	66 ; PC := 66
	29	[3813]	GETGLOBAL	R7 K5 ; R7 := _T
	30	[3813]	GETTABLE 	R7 R7 K9 ; R7 := R7["mSpecialSuitMode"]
	31	[3813]	TEST     	R7 0 ; if not R7 then PC := 39
	32	[3813]	JMP      	39 ; PC := 39
	33	[3814]	GETGLOBAL	R7 K5 ; R7 := _T
	34	[3814]	GETTABLE 	R6 R7 K10 ; R6 := R7["SpecialSuitAvatar"]
	35	[3815]	EQ       	0 R1 K11 ; if R1 ~= 5.000000 then PC := 66
	36	[3815]	JMP      	66 ; PC := 66
	37	[3816]	LOADK    	R5 := 3.000000
	38	[3817]	JMP      	66 ; PC := 66
	39	[3818]	GETGLOBAL	R7 K5 ; R7 := _T
	40	[3818]	GETTABLE 	R7 R7 K12 ; R7 := R7["mSentinelMode"]
	41	[3818]	TEST     	R7 0 ; if not R7 then PC := 55
	42	[3818]	JMP      	55 ; PC := 55
	43	[3819]	GETGLOBAL	R7 K5 ; R7 := _T
	44	[3819]	GETTABLE 	R6 R7 K13 ; R6 := R7["MenuSentinel"]
	45	[3820]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	46	[3820]	MOVE     	R8 R6 ; R8 := R6
	47	[3820]	CALL     	R7 2 2 ; R7 := R7(R8)
	48	[3820]	TEST     	R7 0 ; if not R7 then PC := 66
	49	[3820]	JMP      	66 ; PC := 66
	50	[3821]	GETUPVAL 	R7 U1 ; R7 := U1
	51	[3821]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x0b3c7eed]
	52	[3821]	CALL     	R7 1 2 ; R7 := R7()
	53	[3821]	MOVE     	R6 R7 ; R6 := R7
	54	[3822]	JMP      	66 ; PC := 66
	55	[3824]	GETGLOBAL	R7 K5 ; R7 := _T
	56	[3824]	GETTABLE 	R6 R7 K15 ; R6 := R7["MenuSuitAvatar"]
	57	[3825]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	58	[3825]	MOVE     	R8 R6 ; R8 := R6
	59	[3825]	CALL     	R7 2 2 ; R7 := R7(R8)
	60	[3825]	TEST     	R7 0 ; if not R7 then PC := 66
	61	[3825]	JMP      	66 ; PC := 66
	62	[3826]	GETUPVAL 	R7 U1 ; R7 := U1
	63	[3826]	GETTABLE 	R7 R7 K16 ; R7 := R7[0x6ef45ebc]
	64	[3826]	CALL     	R7 1 2 ; R7 := R7()
	65	[3826]	MOVE     	R6 R7 ; R6 := R7
	66	[3830]	GETGLOBAL	R7 K17 ; R7 := 0x26072944
	67	[3830]	EQ       	0 R0 R7 ; if R0 ~= R7 then PC := 76
	68	[3830]	JMP      	76 ; PC := 76
	69	[3830]	GETUPVAL 	R7 U2 ; R7 := U2
	70	[3830]	GETTABLE 	R7 R7 K18 ; R7 := R7["KDriveSlot"]
	71	[3830]	EQ       	0 R1 R7 ; if R1 ~= R7 then PC := 76
	72	[3830]	JMP      	76 ; PC := 76
	73	[3831]	GETGLOBAL	R7 K5 ; R7 := _T
	74	[3831]	GETTABLE 	R6 R7 K19 ; R6 := R7["KDriveAvatar"]
	75	[3832]	LOADK    	R5 := 3.000000
	76	[3836]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	77	[3836]	MOVE     	R8 R6 ; R8 := R6
	78	[3836]	CALL     	R7 2 2 ; R7 := R7(R8)
	79	[3836]	TEST     	R7 1 ; if R7 then PC := 89
	80	[3836]	JMP      	89 ; PC := 89
	81	[3836]	EQ       	1 R5 K20 ; if R5 == nil then PC := 89
	82	[3836]	JMP      	89 ; PC := 89
	83	[3837]	SELF     	R7 R6 K21 ; R8 := R6; R7 := R6[0xde321e6f]
	84	[3837]	CALL     	R7 2 2 ; R7 := R7(R8)
	85	[3837]	SELF     	R7 R7 K22 ; R8 := R7; R7 := R7[0xe85a2361]
	86	[3837]	MOVE     	R9 R5 ; R9 := R5
	87	[3837]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	88	[3837]	MOVE     	R4 R7 ; R4 := R7
	89	[3841]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	90	[3841]	MOVE     	R8 R4 ; R8 := R4
	91	[3841]	CALL     	R7 2 2 ; R7 := R7(R8)
	92	[3841]	TEST     	R7 1 ; if R7 then PC := 125
	93	[3841]	JMP      	125 ; PC := 125
	94	[3842]	SELF     	R7 R0 K23 ; R8 := R0; R7 := R0[0xf2deaf69]
	95	[3842]	GETGLOBAL	R9 K24 ; R9 := gLotusHybridWeaponType
	96	[3842]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	97	[3842]	TEST     	R7 0 ; if not R7 then PC := 116
	98	[3842]	JMP      	116 ; PC := 116
	99	[3843]	SELF     	R7 R4 K25 ; R8 := R4; R7 := R4[0x53ef4cf8]
	100	[3843]	CALL     	R7 2 2 ; R7 := R7(R8)
	101	[3844]	GETGLOBAL	R8 K7 ; R8 := 0x7b998233
	102	[3844]	MOVE     	R9 R7 ; R9 := R7
	103	[3844]	CALL     	R8 2 2 ; R8 := R8(R9)
	104	[3844]	TEST     	R8 1 ; if R8 then PC := 125
	105	[3844]	JMP      	125 ; PC := 125
	106	[3844]	SELF     	R8 R7 K26 ; R9 := R7; R8 := R7[0xcde10c4a]
	107	[3844]	CALL     	R8 2 2 ; R8 := R8(R9)
	108	[3844]	EQ       	0 R8 R0 ; if R8 ~= R0 then PC := 125
	109	[3844]	JMP      	125 ; PC := 125
	110	[3845]	GETGLOBAL	R8 K27 ; R8 := 0x33bdd652
	111	[3845]	GETTABLE 	R8 R8 K28 ; R8 := R8[0x23d5322f]
	112	[3845]	MOVE     	R9 R3 ; R9 := R3
	113	[3845]	MOVE     	R10 R4 ; R10 := R4
	114	[3845]	CALL     	R8 3 1 ; R8(R9,R10)
	115	[3846]	JMP      	125 ; PC := 125
	116	[3848]	SELF     	R8 R4 K26 ; R9 := R4; R8 := R4[0xcde10c4a]
	117	[3848]	CALL     	R8 2 2 ; R8 := R8(R9)
	118	[3848]	EQ       	0 R8 R0 ; if R8 ~= R0 then PC := 125
	119	[3848]	JMP      	125 ; PC := 125
	120	[3849]	GETGLOBAL	R8 K27 ; R8 := 0x33bdd652
	121	[3849]	GETTABLE 	R8 R8 K28 ; R8 := R8[0x23d5322f]
	122	[3849]	MOVE     	R9 R3 ; R9 := R3
	123	[3849]	MOVE     	R10 R4 ; R10 := R4
	124	[3849]	CALL     	R8 3 1 ; R8(R9,R10)
	125	[3853]	RETURN   	R3 2 ; return R3 
	126	[3854]	RETURN   	R0 1 ; return 

function #68 <?:3856,4117> (904 instructions, 3616 bytes at 00000211303D4CC0)
2 params, 52 slots, 11 upvalues, 0 locals, 105 constants, 2 functions
	1	[3858]	OP_LOADBOOL	R3 0 0 ; R3 := false
	2	[3859]	LOADNIL  	R4 R4 ; R4 := nil
	3	[3861]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	4	[3861]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0xaade900e]
	5	[3861]	LOADK    	R7 K2 ; R7 := "StatContainer"
	6	[3861]	LOADK    	R8 := 11.000000
	7	[3861]	OP_LOADBOOL	R9 1 0 ; R9 := true
	8	[3861]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	9	[3863]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	10	[3863]	GETGLOBAL	R6 K4 ; R6 := 0x25d99d89
	11	[3863]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[3863]	TEST     	R5 1 ; if R5 then PC := 19
	13	[3863]	JMP      	19 ; PC := 19
	14	[3863]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	15	[3863]	MOVE     	R6 R0 ; R6 := R0
	16	[3863]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[3863]	TEST     	R5 0 ; if not R5 then PC := 20
	18	[3863]	JMP      	20 ; PC := 20
	19	[3864]	RETURN   	R0 1 ; return 
	20	[3868]	GETTABLE 	R5 R0 K5 ; R5 := R0["LoadOutType"]
	21	[3868]	EQ       	1 R5 K7 ; if R5 == 4.000000 then PC := 411
	22	[3868]	JMP      	411 ; PC := 411
	23	[3868]	GETTABLE 	R5 R0 K5 ; R5 := R0["LoadOutType"]
	24	[3868]	EQ       	1 R5 K8 ; if R5 == 6.000000 then PC := 411
	25	[3868]	JMP      	411 ; PC := 411
	26	[3869]	GETUPVAL 	R5 U0 ; R5 := U0
	27	[3869]	GETUPVAL 	R6 U1 ; R6 := U1
	28	[3869]	GETTABLE 	R6 R6 K9 ; R6 := R6["SWAPPING_ITEM"]
	29	[3869]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 41
	30	[3869]	JMP      	41 ; PC := 41
	31	[3869]	GETGLOBAL	R5 K10 ; R5 := mSelected
	32	[3869]	GETTABLE 	R5 R5 K11 ; R5 := R5["Element"]
	33	[3869]	GETTABLE 	R5 R5 K5 ; R5 := R5["LoadOutType"]
	34	[3869]	EQ       	1 R5 K7 ; if R5 == 4.000000 then PC := 411
	35	[3869]	JMP      	411 ; PC := 411
	36	[3869]	GETGLOBAL	R5 K10 ; R5 := mSelected
	37	[3869]	GETTABLE 	R5 R5 K11 ; R5 := R5["Element"]
	38	[3869]	GETTABLE 	R5 R5 K5 ; R5 := R5["LoadOutType"]
	39	[3869]	EQ       	1 R5 K8 ; if R5 == 6.000000 then PC := 411
	40	[3869]	JMP      	411 ; PC := 411
	41	[3871]	GETTABLE 	R5 R0 K12 ; R5 := R0["EquippedItem"]
	42	[3871]	EQ       	1 R5 K13 ; if R5 == nil then PC := 276
	43	[3871]	JMP      	276 ; PC := 276
	44	[3872]	GETUPVAL 	R5 U0 ; R5 := U0
	45	[3872]	GETUPVAL 	R6 U1 ; R6 := U1
	46	[3872]	GETTABLE 	R6 R6 K9 ; R6 := R6["SWAPPING_ITEM"]
	47	[3872]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 115
	48	[3872]	JMP      	115 ; PC := 115
	49	[3873]	GETTABLE 	R5 R0 K12 ; R5 := R0["EquippedItem"]
	50	[3873]	GETTABLE 	R2 R5 K14 ; R2 := R5["mItemType"]
	51	[3874]	SELF     	R5 R2 K15 ; R6 := R2; R5 := R2[0xf2deaf69]
	52	[3874]	GETGLOBAL	R7 K16 ; R7 := gLotusHybridWeaponType
	53	[3874]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	54	[3874]	TEST     	R5 0 ; if not R5 then PC := 411
	55	[3874]	JMP      	411 ; PC := 411
	56	[3874]	GETGLOBAL	R5 K10 ; R5 := mSelected
	57	[3874]	GETTABLE 	R5 R5 K17 ; R5 := R5["Item"]
	58	[3874]	GETTABLE 	R5 R5 K18 ; R5 := R5["Type"]
	59	[3874]	GETGLOBAL	R6 K10 ; R6 := mSelected
	60	[3874]	GETTABLE 	R6 R6 K11 ; R6 := R6["Element"]
	61	[3874]	GETTABLE 	R6 R6 K18 ; R6 := R6["Type"]
	62	[3874]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 411
	63	[3874]	JMP      	411 ; PC := 411
	64	[3874]	GETGLOBAL	R5 K10 ; R5 := mSelected
	65	[3874]	GETTABLE 	R5 R5 K17 ; R5 := R5["Item"]
	66	[3874]	GETTABLE 	R5 R5 K19 ; R5 := R5["mPurchasedInfo"]
	67	[3874]	TEST     	R5 0 ; if not R5 then PC := 411
	68	[3874]	JMP      	411 ; PC := 411
	69	[3874]	GETGLOBAL	R5 K10 ; R5 := mSelected
	70	[3874]	GETTABLE 	R5 R5 K17 ; R5 := R5["Item"]
	71	[3874]	GETTABLE 	R5 R5 K19 ; R5 := R5["mPurchasedInfo"]
	72	[3874]	GETTABLE 	R5 R5 K20 ; R5 := R5["UID"]
	73	[3874]	GETGLOBAL	R6 K10 ; R6 := mSelected
	74	[3874]	GETTABLE 	R6 R6 K11 ; R6 := R6["Element"]
	75	[3874]	GETTABLE 	R6 R6 K20 ; R6 := R6["UID"]
	76	[3874]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 411
	77	[3874]	JMP      	411 ; PC := 411
	78	[3875]	NEWTABLE 	R5 0 2 ; R5 := {}
	79	[3875]	GETGLOBAL	R6 K10 ; R6 := mSelected
	80	[3875]	GETTABLE 	R6 R6 K11 ; R6 := R6["Element"]
	81	[3875]	GETTABLE 	R6 R6 K21 ; R6 := R6["LoadOutId"]
	82	[3875]	SETTABLE 	R5 K21 R6 ; R5["LoadOutId"] := R6
	83	[3875]	GETGLOBAL	R6 K10 ; R6 := mSelected
	84	[3875]	GETTABLE 	R6 R6 K11 ; R6 := R6["Element"]
	85	[3875]	GETTABLE 	R6 R6 K5 ; R6 := R6["LoadOutType"]
	86	[3875]	SETTABLE 	R5 K5 R6 ; R5["LoadOutType"] := R6
	87	[3876]	GETUPVAL 	R6 U2 ; R6 := U2
	88	[3876]	GETTABLE 	R7 R5 K21 ; R7 := R5["LoadOutId"]
	89	[3876]	CALL     	R6 2 2 ; R6 := R6(R7)
	90	[3877]	TEST     	R6 1 ; if R6 then PC := 94
	91	[3877]	JMP      	94 ; PC := 94
	92	[3878]	LOADNIL  	R7 R7 ; R7 := nil
	93	[3878]	RETURN   	R7 2 ; return R7 
	94	[3880]	GETGLOBAL	R7 K22 ; R7 := _T
	95	[3880]	GETTABLE 	R4 R7 K23 ; R4 := R7["MenuSuitAvatar"]
	96	[3881]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xde321e6f]
	97	[3881]	CALL     	R7 2 2 ; R7 := R7(R8)
	98	[3881]	SELF     	R7 R7 K25 ; R8 := R7; R7 := R7[0xab8f64c8]
	99	[3881]	GETGLOBAL	R9 K4 ; R9 := 0x25d99d89
	100	[3881]	SELF     	R9 R9 K26 ; R10 := R9; R9 := R9[0x62c81b76]
	101	[3881]	CALL     	R9 2 2 ; R9 := R9(R10)
	102	[3881]	GETTABLE 	R10 R5 K5 ; R10 := R5["LoadOutType"]
	103	[3881]	GETTABLE 	R11 R5 K21 ; R11 := R5["LoadOutId"]
	104	[3881]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	105	[3882]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xde321e6f]
	106	[3882]	CALL     	R7 2 2 ; R7 := R7(R8)
	107	[3882]	SELF     	R7 R7 K27 ; R8 := R7; R7 := R7[0xe85a2361]
	108	[3882]	MOVE     	R9 R6 ; R9 := R6
	109	[3882]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	110	[3882]	MOVE     	R2 R7 ; R2 := R7
	111	[3883]	SELF     	R7 R2 K28 ; R8 := R2; R7 := R2[0xcde10c4a]
	112	[3883]	CALL     	R7 2 2 ; R7 := R7(R8)
	113	[3883]	MOVE     	R2 R7 ; R2 := R7
	114	[3884]	JMP      	411 ; PC := 411
	115	[3886]	GETGLOBAL	R7 K22 ; R7 := _T
	116	[3886]	GETTABLE 	R7 R7 K29 ; R7 := R7["mMechaSuitMode"]
	117	[3886]	TEST     	R7 0 ; if not R7 then PC := 128
	118	[3886]	JMP      	128 ; PC := 128
	119	[3886]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	120	[3886]	GETGLOBAL	R8 K22 ; R8 := _T
	121	[3886]	GETTABLE 	R8 R8 K30 ; R8 := R8["MechAvatar"]
	122	[3886]	CALL     	R7 2 2 ; R7 := R7(R8)
	123	[3886]	TEST     	R7 1 ; if R7 then PC := 128
	124	[3886]	JMP      	128 ; PC := 128
	125	[3887]	GETGLOBAL	R7 K22 ; R7 := _T
	126	[3887]	GETTABLE 	R4 R7 K30 ; R4 := R7["MechAvatar"]
	127	[3887]	JMP      	130 ; PC := 130
	128	[3889]	GETGLOBAL	R7 K22 ; R7 := _T
	129	[3889]	GETTABLE 	R4 R7 K23 ; R4 := R7["MenuSuitAvatar"]
	130	[3892]	GETTABLE 	R7 R0 K5 ; R7 := R0["LoadOutType"]
	131	[3892]	EQ       	0 R7 K31 ; if R7 ~= 1.000000 then PC := 167
	132	[3892]	JMP      	167 ; PC := 167
	133	[3893]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	134	[3893]	GETGLOBAL	R8 K22 ; R8 := _T
	135	[3893]	GETTABLE 	R8 R8 K23 ; R8 := R8["MenuSuitAvatar"]
	136	[3893]	CALL     	R7 2 2 ; R7 := R7(R8)
	137	[3893]	TEST     	R7 1 ; if R7 then PC := 146
	138	[3893]	JMP      	146 ; PC := 146
	139	[3894]	GETGLOBAL	R7 K22 ; R7 := _T
	140	[3894]	GETTABLE 	R7 R7 K23 ; R7 := R7["MenuSuitAvatar"]
	141	[3894]	SELF     	R7 R7 K24 ; R8 := R7; R7 := R7[0xde321e6f]
	142	[3894]	CALL     	R7 2 2 ; R7 := R7(R8)
	143	[3894]	SELF     	R7 R7 K32 ; R8 := R7; R7 := R7[0x2676deee]
	144	[3894]	CALL     	R7 2 2 ; R7 := R7(R8)
	145	[3894]	MOVE     	R4 R7 ; R4 := R7
	146	[3896]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	147	[3896]	MOVE     	R8 R4 ; R8 := R4
	148	[3896]	CALL     	R7 2 2 ; R7 := R7(R8)
	149	[3896]	TEST     	R7 1 ; if R7 then PC := 411
	150	[3896]	JMP      	411 ; PC := 411
	151	[3897]	GETTABLE 	R7 R0 K21 ; R7 := R0["LoadOutId"]
	152	[3897]	EQ       	0 R7 K33 ; if R7 ~= 0.000000 then PC := 160
	153	[3897]	JMP      	160 ; PC := 160
	154	[3898]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xde321e6f]
	155	[3898]	CALL     	R7 2 2 ; R7 := R7(R8)
	156	[3898]	SELF     	R7 R7 K34 ; R8 := R7; R7 := R7[0xf7d48ee0]
	157	[3898]	CALL     	R7 2 2 ; R7 := R7(R8)
	158	[3898]	MOVE     	R2 R7 ; R2 := R7
	159	[3898]	JMP      	411 ; PC := 411
	160	[3900]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xde321e6f]
	161	[3900]	CALL     	R7 2 2 ; R7 := R7(R8)
	162	[3900]	SELF     	R7 R7 K27 ; R8 := R7; R7 := R7[0xe85a2361]
	163	[3900]	LOADK    	R9 := 1.000000
	164	[3900]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	165	[3900]	MOVE     	R2 R7 ; R2 := R7
	166	[3902]	JMP      	411 ; PC := 411
	167	[3903]	GETTABLE 	R7 R0 K21 ; R7 := R0["LoadOutId"]
	168	[3903]	EQ       	0 R7 K33 ; if R7 ~= 0.000000 then PC := 190
	169	[3903]	JMP      	190 ; PC := 190
	170	[3904]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	171	[3904]	MOVE     	R8 R4 ; R8 := R4
	172	[3904]	CALL     	R7 2 2 ; R7 := R7(R8)
	173	[3904]	TEST     	R7 1 ; if R7 then PC := 411
	174	[3904]	JMP      	411 ; PC := 411
	175	[3905]	GETTABLE 	R7 R0 K5 ; R7 := R0["LoadOutType"]
	176	[3905]	EQ       	0 R7 K36 ; if R7 ~= 2.000000 then PC := 184
	177	[3905]	JMP      	184 ; PC := 184
	178	[3906]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xde321e6f]
	179	[3906]	CALL     	R7 2 2 ; R7 := R7(R8)
	180	[3906]	SELF     	R7 R7 K37 ; R8 := R7; R7 := R7[0x2303a280]
	181	[3906]	CALL     	R7 2 2 ; R7 := R7(R8)
	182	[3906]	MOVE     	R2 R7 ; R2 := R7
	183	[3906]	JMP      	411 ; PC := 411
	184	[3908]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xde321e6f]
	185	[3908]	CALL     	R7 2 2 ; R7 := R7(R8)
	186	[3908]	SELF     	R7 R7 K34 ; R8 := R7; R7 := R7[0xf7d48ee0]
	187	[3908]	CALL     	R7 2 2 ; R7 := R7(R8)
	188	[3908]	MOVE     	R2 R7 ; R2 := R7
	189	[3910]	JMP      	411 ; PC := 411
	190	[3911]	GETGLOBAL	R7 K22 ; R7 := _T
	191	[3911]	GETTABLE 	R7 R7 K38 ; R7 := R7["mSpecialSuitMode"]
	192	[3911]	TEST     	R7 0 ; if not R7 then PC := 222
	193	[3911]	JMP      	222 ; PC := 222
	194	[3912]	GETGLOBAL	R7 K22 ; R7 := _T
	195	[3912]	GETTABLE 	R4 R7 K39 ; R4 := R7["SpecialSuitAvatar"]
	196	[3914]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	197	[3914]	MOVE     	R8 R4 ; R8 := R4
	198	[3914]	CALL     	R7 2 2 ; R7 := R7(R8)
	199	[3914]	TEST     	R7 1 ; if R7 then PC := 411
	200	[3914]	JMP      	411 ; PC := 411
	201	[3915]	GETTABLE 	R7 R0 K21 ; R7 := R0["LoadOutId"]
	202	[3915]	EQ       	0 R7 K40 ; if R7 ~= 5.000000 then PC := 210
	203	[3915]	JMP      	210 ; PC := 210
	204	[3916]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xde321e6f]
	205	[3916]	CALL     	R7 2 2 ; R7 := R7(R8)
	206	[3916]	SELF     	R7 R7 K34 ; R8 := R7; R7 := R7[0xf7d48ee0]
	207	[3916]	CALL     	R7 2 2 ; R7 := R7(R8)
	208	[3916]	MOVE     	R2 R7 ; R2 := R7
	209	[3916]	JMP      	411 ; PC := 411
	210	[3918]	GETUPVAL 	R7 U2 ; R7 := U2
	211	[3918]	GETTABLE 	R8 R0 K21 ; R8 := R0["LoadOutId"]
	212	[3918]	CALL     	R7 2 2 ; R7 := R7(R8)
	213	[3919]	TEST     	R7 0 ; if not R7 then PC := 411
	214	[3919]	JMP      	411 ; PC := 411
	215	[3920]	SELF     	R8 R4 K24 ; R9 := R4; R8 := R4[0xde321e6f]
	216	[3920]	CALL     	R8 2 2 ; R8 := R8(R9)
	217	[3920]	SELF     	R8 R8 K27 ; R9 := R8; R8 := R8[0xe85a2361]
	218	[3920]	MOVE     	R10 R7 ; R10 := R7
	219	[3920]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	220	[3920]	MOVE     	R2 R8 ; R2 := R8
	221	[3923]	JMP      	411 ; PC := 411
	222	[3924]	GETTABLE 	R8 R0 K21 ; R8 := R0["LoadOutId"]
	223	[3924]	EQ       	0 R8 K7 ; if R8 ~= 4.000000 then PC := 237
	224	[3924]	JMP      	237 ; PC := 237
	225	[3925]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	226	[3925]	MOVE     	R9 R4 ; R9 := R4
	227	[3925]	CALL     	R8 2 2 ; R8 := R8(R9)
	228	[3925]	TEST     	R8 1 ; if R8 then PC := 411
	229	[3925]	JMP      	411 ; PC := 411
	230	[3926]	SELF     	R8 R4 K24 ; R9 := R4; R8 := R4[0xde321e6f]
	231	[3926]	CALL     	R8 2 2 ; R8 := R8(R9)
	232	[3926]	SELF     	R8 R8 K27 ; R9 := R8; R8 := R8[0xe85a2361]
	233	[3926]	LOADK    	R10 := 10.000000
	234	[3926]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	235	[3926]	MOVE     	R2 R8 ; R2 := R8
	236	[3927]	JMP      	411 ; PC := 411
	237	[3929]	GETUPVAL 	R8 U2 ; R8 := U2
	238	[3929]	GETTABLE 	R9 R0 K21 ; R9 := R0["LoadOutId"]
	239	[3929]	CALL     	R8 2 2 ; R8 := R8(R9)
	240	[3930]	TEST     	R8 1 ; if R8 then PC := 244
	241	[3930]	JMP      	244 ; PC := 244
	242	[3931]	LOADNIL  	R9 R9 ; R9 := nil
	243	[3931]	RETURN   	R9 2 ; return R9 
	244	[3934]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	245	[3934]	MOVE     	R10 R4 ; R10 := R4
	246	[3934]	CALL     	R9 2 2 ; R9 := R9(R10)
	247	[3934]	TEST     	R9 1 ; if R9 then PC := 255
	248	[3934]	JMP      	255 ; PC := 255
	249	[3935]	SELF     	R9 R4 K24 ; R10 := R4; R9 := R4[0xde321e6f]
	250	[3935]	CALL     	R9 2 2 ; R9 := R9(R10)
	251	[3935]	SELF     	R9 R9 K27 ; R10 := R9; R9 := R9[0xe85a2361]
	252	[3935]	MOVE     	R11 R8 ; R11 := R8
	253	[3935]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	254	[3935]	MOVE     	R2 R9 ; R2 := R9
	255	[3937]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	256	[3937]	MOVE     	R10 R2 ; R10 := R2
	257	[3937]	CALL     	R9 2 2 ; R9 := R9(R10)
	258	[3937]	TEST     	R9 1 ; if R9 then PC := 411
	259	[3937]	JMP      	411 ; PC := 411
	260	[3937]	SELF     	R9 R2 K15 ; R10 := R2; R9 := R2[0xf2deaf69]
	261	[3937]	GETGLOBAL	R11 K16 ; R11 := gLotusHybridWeaponType
	262	[3937]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	263	[3937]	TEST     	R9 0 ; if not R9 then PC := 411
	264	[3937]	JMP      	411 ; PC := 411
	265	[3938]	GETTABLE 	R9 R0 K12 ; R9 := R0["EquippedItem"]
	266	[3938]	SELF     	R9 R9 K41 ; R10 := R9; R9 := R9[0x111df904]
	267	[3938]	MOVE     	R11 R4 ; R11 := R4
	268	[3938]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	269	[3939]	GETGLOBAL	R10 K3 ; R10 := 0x7b998233
	270	[3939]	MOVE     	R11 R9 ; R11 := R9
	271	[3939]	CALL     	R10 2 2 ; R10 := R10(R11)
	272	[3939]	TEST     	R10 1 ; if R10 then PC := 411
	273	[3939]	JMP      	411 ; PC := 411
	274	[3940]	MOVE     	R2 R9 ; R2 := R9
	275	[3944]	JMP      	411 ; PC := 411
	276	[3945]	GETTABLE 	R10 R0 K42 ; R10 := R0["mStoreItem"]
	277	[3945]	EQ       	1 R10 K13 ; if R10 == nil then PC := 411
	278	[3945]	JMP      	411 ; PC := 411
	279	[3946]	GETTABLE 	R10 R0 K42 ; R10 := R0["mStoreItem"]
	280	[3946]	SELF     	R10 R10 K43 ; R11 := R10; R10 := R10[0xf278f8a1]
	281	[3946]	CALL     	R10 2 2 ; R10 := R10(R11)
	282	[3946]	MOVE     	R2 R10 ; R2 := R10
	283	[3947]	SELF     	R10 R2 K15 ; R11 := R2; R10 := R2[0xf2deaf69]
	284	[3947]	GETGLOBAL	R12 K16 ; R12 := gLotusHybridWeaponType
	285	[3947]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	286	[3947]	TEST     	R10 0 ; if not R10 then PC := 411
	287	[3947]	JMP      	411 ; PC := 411
	288	[3948]	GETTABLE 	R10 R0 K19 ; R10 := R0["mPurchasedInfo"]
	289	[3948]	TEST     	R10 0 ; if not R10 then PC := 389
	290	[3948]	JMP      	389 ; PC := 389
	291	[3950]	GETGLOBAL	R10 K22 ; R10 := _T
	292	[3950]	GETTABLE 	R4 R10 K23 ; R4 := R10["MenuSuitAvatar"]
	293	[3951]	NEWTABLE 	R10 0 0 ; R10 := {}
	294	[3952]	GETTABLE 	R11 R0 K19 ; R11 := R0["mPurchasedInfo"]
	295	[3952]	GETTABLE 	R11 R11 K20 ; R11 := R11["UID"]
	296	[3952]	SETTABLE 	R10 K20 R11 ; R10["UID"] := R11
	297	[3953]	SETTABLE 	R10 K44 K33 ; R10["mModSlot"] := 0.000000
	298	[3954]	SETTABLE 	R10 K45 K33 ; R10["mCustSlot"] := 0.000000
	299	[3955]	GETGLOBAL	R11 K10 ; R11 := mSelected
	300	[3955]	GETTABLE 	R11 R11 K11 ; R11 := R11["Element"]
	301	[3955]	GETTABLE 	R11 R11 K21 ; R11 := R11["LoadOutId"]
	302	[3955]	SETTABLE 	R10 K21 R11 ; R10["LoadOutId"] := R11
	303	[3956]	GETGLOBAL	R11 K10 ; R11 := mSelected
	304	[3956]	GETTABLE 	R11 R11 K11 ; R11 := R11["Element"]
	305	[3956]	GETTABLE 	R11 R11 K5 ; R11 := R11["LoadOutType"]
	306	[3956]	SETTABLE 	R10 K5 R11 ; R10["LoadOutType"] := R11
	307	[3957]	GETUPVAL 	R11 U2 ; R11 := U2
	308	[3957]	GETTABLE 	R12 R10 K21 ; R12 := R10["LoadOutId"]
	309	[3957]	CALL     	R11 2 2 ; R11 := R11(R12)
	310	[3958]	TEST     	R11 1 ; if R11 then PC := 314
	311	[3958]	JMP      	314 ; PC := 314
	312	[3959]	LOADNIL  	R12 R12 ; R12 := nil
	313	[3959]	RETURN   	R12 2 ; return R12 
	314	[3961]	GETGLOBAL	R12 K46 ; R12 := mCurrentLoadout
	315	[3961]	GETTABLE 	R13 R10 K5 ; R13 := R10["LoadOutType"]
	316	[3961]	GETTABLE 	R12 R12 R13 ; R12 := R12[R13]
	317	[3961]	SELF     	R12 R12 K47 ; R13 := R12; R12 := R12[0x2abbe722]
	318	[3961]	GETTABLE 	R14 R10 K21 ; R14 := R10["LoadOutId"]
	319	[3961]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	320	[3962]	NEWTABLE 	R13 0 3 ; R13 := {}
	321	[3962]	GETTABLE 	R14 R12 K48 ; R14 := R12["mItemId"]
	322	[3962]	GETTABLE 	R14 R14 K49 ; R14 := R14["mId"]
	323	[3962]	SETTABLE 	R13 K20 R14 ; R13["UID"] := R14
	324	[3962]	GETTABLE 	R14 R12 K44 ; R14 := R12["mModSlot"]
	325	[3962]	SETTABLE 	R13 K44 R14 ; R13["mModSlot"] := R14
	326	[3962]	GETTABLE 	R14 R12 K45 ; R14 := R12["mCustSlot"]
	327	[3962]	SETTABLE 	R13 K45 R14 ; R13["mCustSlot"] := R14
	328	[3963]	GETTABLE 	R14 R12 K48 ; R14 := R12["mItemId"]
	329	[3963]	GETTABLE 	R15 R10 K20 ; R15 := R10["UID"]
	330	[3963]	SETTABLE 	R14 K49 R15 ; R14["mId"] := R15
	331	[3964]	GETTABLE 	R14 R10 K44 ; R14 := R10["mModSlot"]
	332	[3964]	SETTABLE 	R12 K44 R14 ; R12["mModSlot"] := R14
	333	[3965]	GETTABLE 	R14 R10 K45 ; R14 := R10["mCustSlot"]
	334	[3965]	SETTABLE 	R12 K45 R14 ; R12["mCustSlot"] := R14
	335	[3967]	GETGLOBAL	R14 K46 ; R14 := mCurrentLoadout
	336	[3967]	GETTABLE 	R15 R10 K5 ; R15 := R10["LoadOutType"]
	337	[3967]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	338	[3967]	SELF     	R14 R14 K50 ; R15 := R14; R14 := R14[0xffca321e]
	339	[3967]	GETTABLE 	R16 R10 K21 ; R16 := R10["LoadOutId"]
	340	[3967]	MOVE     	R17 R12 ; R17 := R12
	341	[3967]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	342	[3968]	GETGLOBAL	R14 K4 ; R14 := 0x25d99d89
	343	[3968]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0x400b84a1]
	344	[3968]	GETTABLE 	R16 R10 K5 ; R16 := R10["LoadOutType"]
	345	[3968]	GETGLOBAL	R17 K46 ; R17 := mCurrentLoadout
	346	[3968]	GETTABLE 	R18 R10 K5 ; R18 := R10["LoadOutType"]
	347	[3968]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	348	[3968]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	349	[3969]	SELF     	R14 R4 K24 ; R15 := R4; R14 := R4[0xde321e6f]
	350	[3969]	CALL     	R14 2 2 ; R14 := R14(R15)
	351	[3969]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0xab8f64c8]
	352	[3969]	GETGLOBAL	R16 K4 ; R16 := 0x25d99d89
	353	[3969]	SELF     	R16 R16 K26 ; R17 := R16; R16 := R16[0x62c81b76]
	354	[3969]	CALL     	R16 2 2 ; R16 := R16(R17)
	355	[3969]	GETTABLE 	R17 R10 K5 ; R17 := R10["LoadOutType"]
	356	[3969]	GETTABLE 	R18 R10 K21 ; R18 := R10["LoadOutId"]
	357	[3969]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	358	[3970]	SELF     	R14 R4 K24 ; R15 := R4; R14 := R4[0xde321e6f]
	359	[3970]	CALL     	R14 2 2 ; R14 := R14(R15)
	360	[3970]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0xe85a2361]
	361	[3970]	MOVE     	R16 R11 ; R16 := R11
	362	[3970]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	363	[3970]	MOVE     	R2 R14 ; R2 := R14
	364	[3971]	SELF     	R14 R2 K28 ; R15 := R2; R14 := R2[0xcde10c4a]
	365	[3971]	CALL     	R14 2 2 ; R14 := R14(R15)
	366	[3971]	MOVE     	R2 R14 ; R2 := R14
	367	[3974]	GETTABLE 	R14 R12 K48 ; R14 := R12["mItemId"]
	368	[3974]	GETTABLE 	R15 R13 K20 ; R15 := R13["UID"]
	369	[3974]	SETTABLE 	R14 K49 R15 ; R14["mId"] := R15
	370	[3975]	GETTABLE 	R14 R13 K44 ; R14 := R13["mModSlot"]
	371	[3975]	SETTABLE 	R12 K44 R14 ; R12["mModSlot"] := R14
	372	[3976]	GETTABLE 	R14 R13 K45 ; R14 := R13["mCustSlot"]
	373	[3976]	SETTABLE 	R12 K45 R14 ; R12["mCustSlot"] := R14
	374	[3977]	GETGLOBAL	R14 K46 ; R14 := mCurrentLoadout
	375	[3977]	GETTABLE 	R15 R10 K5 ; R15 := R10["LoadOutType"]
	376	[3977]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	377	[3977]	SELF     	R14 R14 K50 ; R15 := R14; R14 := R14[0xffca321e]
	378	[3977]	GETTABLE 	R16 R10 K21 ; R16 := R10["LoadOutId"]
	379	[3977]	MOVE     	R17 R12 ; R17 := R12
	380	[3977]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	381	[3978]	GETGLOBAL	R14 K4 ; R14 := 0x25d99d89
	382	[3978]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0x400b84a1]
	383	[3978]	GETTABLE 	R16 R10 K5 ; R16 := R10["LoadOutType"]
	384	[3978]	GETGLOBAL	R17 K46 ; R17 := mCurrentLoadout
	385	[3978]	GETTABLE 	R18 R10 K5 ; R18 := R10["LoadOutType"]
	386	[3978]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	387	[3978]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	388	[3978]	JMP      	411 ; PC := 411
	389	[3980]	GETGLOBAL	R14 K52 ; R14 := 0x89326c93
	390	[3980]	SELF     	R14 R14 K53 ; R15 := R14; R14 := R14[0x765dad71]
	391	[3980]	GETGLOBAL	R16 K54 ; R16 := 0x88efc25e
	392	[3980]	MOVE     	R17 R2 ; R17 := R2
	393	[3980]	CALL     	R16 2 2 ; R16 := R16(R17)
	394	[3980]	GETGLOBAL	R17 K22 ; R17 := _T
	395	[3980]	GETTABLE 	R17 R17 K23 ; R17 := R17["MenuSuitAvatar"]
	396	[3980]	GETUPVAL 	R18 U3 ; R18 := U3
	397	[3980]	CALL     	R18 1 0 ; R18,... := R18()
	398	[3980]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	399	[3981]	GETGLOBAL	R15 K3 ; R15 := 0x7b998233
	400	[3981]	MOVE     	R16 R14 ; R16 := R14
	401	[3981]	CALL     	R15 2 2 ; R15 := R15(R16)
	402	[3981]	TEST     	R15 1 ; if R15 then PC := 411
	403	[3981]	JMP      	411 ; PC := 411
	404	[3982]	SELF     	R15 R14 K55 ; R16 := R14; R15 := R14[0x18d9daed]
	405	[3982]	CALL     	R15 2 2 ; R15 := R15(R16)
	406	[3982]	MOVE     	R2 R15 ; R2 := R15
	407	[3983]	GETGLOBAL	R15 K52 ; R15 := 0x89326c93
	408	[3983]	SELF     	R15 R15 K56 ; R16 := R15; R15 := R15[0x59c96e77]
	409	[3983]	MOVE     	R17 R14 ; R17 := R14
	410	[3983]	CALL     	R15 3 1 ; R15(R16,R17)
	411	[3990]	GETGLOBAL	R15 K3 ; R15 := 0x7b998233
	412	[3990]	MOVE     	R16 R2 ; R16 := R2
	413	[3990]	CALL     	R15 2 2 ; R15 := R15(R16)
	414	[3990]	TEST     	R15 0 ; if not R15 then PC := 458
	415	[3990]	JMP      	458 ; PC := 458
	416	[3991]	LOADK    	R15 := 1.000000
	417	[3991]	LOADK    	R16 := 4.000000
	418	[3991]	LOADK    	R17 := 1.000000
	419	[3991]	FORPREP  	R15 438 ; R15 -= R17; PC := 438
	420	[3992]	GETGLOBAL	R19 K57 ; R19 := 0x25312c9b
	421	[3992]	GETGLOBAL	R20 K0 ; R20 := 0xae91e43b
	422	[3992]	LOADK    	R21 K58 ; R21 := "Ability"
	423	[3992]	MOVE     	R22 R18 ; R22 := R18
	424	[3992]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	425	[3992]	LOADK    	R22 := 8.000000
	426	[3992]	NEWTABLE 	R23 1 0 ; R23 := {}
	427	[3992]	LOADK    	R24 := 10.000000
	428	[3992]	SETLIST  	R23 1 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 1
	429	[3992]	NEWTABLE 	R24 1 0 ; R24 := {}
	430	[3992]	LOADK    	R25 := 0.000000
	431	[3992]	SETLIST  	R24 1 1 ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 1
	432	[3992]	LOADK    	R25 K60 ; R25 := 0.200000
	433	[3992]	LOADK    	R26 := 0.000000
	434	[3992]	CLOSURE  	R27 0 ; R27 := closure(Function #1)
	435	[3992]	MOVE     	R0 R18 ; R0 := R18
	436	[3992]	CALL     	R19 9 1 ; R19(R20,R21,R22,R23,R24,R25,R26,R27)
	437	[3992]	CLOSE    	R18 ; SAVE R18,...
	438	[3991]	FORLOOP  	R15 420 ; R15 += R17; if R15 <= R16 then begin PC := 420; R18 := R15 end
	439	[3994]	GETGLOBAL	R18 K0 ; R18 := 0xae91e43b
	440	[3994]	SELF     	R18 R18 K61 ; R19 := R18; R18 := R18[0x5f56eeab]
	441	[3994]	LOADK    	R20 K62 ; R20 := "CosmeticDesc"
	442	[3994]	LOADK    	R21 := 29.000000
	443	[3994]	LOADK    	R22 K63 ; R22 := ""
	444	[3994]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	445	[3995]	GETGLOBAL	R18 K0 ; R18 := 0xae91e43b
	446	[3995]	SELF     	R18 R18 K1 ; R19 := R18; R18 := R18[0xaade900e]
	447	[3995]	LOADK    	R20 K2 ; R20 := "StatContainer"
	448	[3995]	LOADK    	R21 := 11.000000
	449	[3995]	OP_LOADBOOL	R22 0 0 ; R22 := false
	450	[3995]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	451	[3996]	GETGLOBAL	R18 K0 ; R18 := 0xae91e43b
	452	[3996]	SELF     	R18 R18 K1 ; R19 := R18; R18 := R18[0xaade900e]
	453	[3996]	LOADK    	R20 K64 ; R20 := "EquippedTitle"
	454	[3996]	LOADK    	R21 := 11.000000
	455	[3996]	OP_LOADBOOL	R22 0 0 ; R22 := false
	456	[3996]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	457	[3997]	RETURN   	R0 1 ; return 
	458	[4000]	OP_LOADBOOL	R18 0 0 ; R18 := false
	459	[4001]	GETGLOBAL	R19 K65 ; R19 := 0x6728fd22
	460	[4001]	MOVE     	R20 R2 ; R20 := R2
	461	[4001]	CALL     	R19 2 2 ; R19 := R19(R20)
	462	[4001]	TEST     	R19 0 ; if not R19 then PC := 650
	463	[4001]	JMP      	650 ; PC := 650
	464	[4002]	GETGLOBAL	R19 K10 ; R19 := mSelected
	465	[4002]	GETTABLE 	R19 R19 K11 ; R19 := R19["Element"]
	466	[4002]	GETTABLE 	R19 R19 K21 ; R19 := R19["LoadOutId"]
	467	[4002]	EQ       	1 R19 K33 ; if R19 == 0.000000 then PC := 528
	468	[4002]	JMP      	528 ; PC := 528
	469	[4006]	GETGLOBAL	R19 K52 ; R19 := 0x89326c93
	470	[4006]	SELF     	R19 R19 K53 ; R20 := R19; R19 := R19[0x765dad71]
	471	[4006]	GETGLOBAL	R21 K54 ; R21 := 0x88efc25e
	472	[4006]	MOVE     	R22 R2 ; R22 := R2
	473	[4006]	CALL     	R21 2 2 ; R21 := R21(R22)
	474	[4006]	GETGLOBAL	R22 K22 ; R22 := _T
	475	[4006]	GETTABLE 	R22 R22 K23 ; R22 := R22["MenuSuitAvatar"]
	476	[4006]	GETUPVAL 	R23 U3 ; R23 := U3
	477	[4006]	CALL     	R23 1 0 ; R23,... := R23()
	478	[4006]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	479	[4006]	MOVE     	R2 R19 ; R2 := R19
	480	[4007]	GETGLOBAL	R19 K3 ; R19 := 0x7b998233
	481	[4007]	MOVE     	R20 R2 ; R20 := R2
	482	[4007]	CALL     	R19 2 2 ; R19 := R19(R20)
	483	[4007]	TEST     	R19 1 ; if R19 then PC := 526
	484	[4007]	JMP      	526 ; PC := 526
	485	[4008]	SELF     	R19 R2 K66 ; R20 := R2; R19 := R2[0x054e3c19]
	486	[4008]	GETGLOBAL	R21 K22 ; R21 := _T
	487	[4008]	GETTABLE 	R21 R21 K23 ; R21 := R21["MenuSuitAvatar"]
	488	[4008]	CALL     	R19 3 1 ; R19(R20,R21)
	489	[4009]	GETTABLE 	R19 R0 K12 ; R19 := R0["EquippedItem"]
	490	[4009]	EQ       	1 R19 K13 ; if R19 == nil then PC := 506
	491	[4009]	JMP      	506 ; PC := 506
	492	[4010]	GETTABLE 	R19 R0 K12 ; R19 := R0["EquippedItem"]
	493	[4010]	GETTABLE 	R19 R19 K67 ; R19 := R19["mModularParts"]
	494	[4010]	LEN      	R19 R19 ; R19 := # R19
	495	[4010]	LT       	0 K33 R19 ; if 0.000000 >= R19 then PC := 526
	496	[4010]	JMP      	526 ; PC := 526
	497	[4011]	SELF     	R19 R2 K68 ; R20 := R2; R19 := R2[0xa6101f7e]
	498	[4011]	GETTABLE 	R21 R0 K12 ; R21 := R0["EquippedItem"]
	499	[4011]	GETTABLE 	R21 R21 K67 ; R21 := R21["mModularParts"]
	500	[4011]	GETTABLE 	R22 R0 K12 ; R22 := R0["EquippedItem"]
	501	[4011]	SELF     	R22 R22 K69 ; R23 := R22; R22 := R22[0xdbfbf6c0]
	502	[4011]	LOADK    	R24 := 3.000000
	503	[4011]	CALL     	R22 3 0 ; R22,... := R22(R23,R24)
	504	[4011]	CALL     	R19 0 1 ; R19(R20,...)
	505	[4012]	JMP      	526 ; PC := 526
	506	[4013]	GETTABLE 	R19 R0 K42 ; R19 := R0["mStoreItem"]
	507	[4013]	EQ       	1 R19 K13 ; if R19 == nil then PC := 526
	508	[4013]	JMP      	526 ; PC := 526
	509	[4014]	GETTABLE 	R19 R0 K67 ; R19 := R0["mModularParts"]
	510	[4014]	LEN      	R19 R19 ; R19 := # R19
	511	[4014]	LT       	0 K33 R19 ; if 0.000000 >= R19 then PC := 526
	512	[4014]	JMP      	526 ; PC := 526
	513	[4015]	GETUPVAL 	R19 U4 ; R19 := U4
	514	[4015]	GETTABLE 	R19 R19 K70 ; R19 := R19[0x06d055f9]
	515	[4015]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	516	[4015]	GETTABLE 	R21 R0 K71 ; R21 := R0["mGild"]
	517	[4015]	CALL     	R20 2 2 ; R20 := R20(R21)
	518	[4015]	NOT      	R20 R20 ; R20 := not R20
	519	[4015]	GETTABLE 	R21 R0 K71 ; R21 := R0["mGild"]
	520	[4015]	OP_LOADBOOL	R22 0 0 ; R22 := false
	521	[4015]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	522	[4016]	SELF     	R20 R2 K68 ; R21 := R2; R20 := R2[0xa6101f7e]
	523	[4016]	GETTABLE 	R22 R0 K67 ; R22 := R0["mModularParts"]
	524	[4016]	MOVE     	R23 R19 ; R23 := R19
	525	[4016]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	526	[4020]	OP_LOADBOOL	R18 1 0 ; R18 := true
	527	[4020]	JMP      	650 ; PC := 650
	528	[4022]	SELF     	R20 R2 K15 ; R21 := R2; R20 := R2[0xf2deaf69]
	529	[4022]	GETGLOBAL	R22 K72 ; R22 := 0x88980f4f
	530	[4022]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	531	[4022]	TEST     	R20 1 ; if R20 then PC := 538
	532	[4022]	JMP      	538 ; PC := 538
	533	[4022]	SELF     	R20 R2 K15 ; R21 := R2; R20 := R2[0xf2deaf69]
	534	[4022]	GETGLOBAL	R22 K73 ; R22 := 0xb506ff82
	535	[4022]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	536	[4022]	TEST     	R20 0 ; if not R20 then PC := 571
	537	[4022]	JMP      	571 ; PC := 571
	538	[4022]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	539	[4022]	GETGLOBAL	R21 K22 ; R21 := _T
	540	[4022]	GETTABLE 	R21 R21 K23 ; R21 := R21["MenuSuitAvatar"]
	541	[4022]	CALL     	R20 2 2 ; R20 := R20(R21)
	542	[4022]	TEST     	R20 1 ; if R20 then PC := 571
	543	[4022]	JMP      	571 ; PC := 571
	544	[4023]	GETGLOBAL	R20 K22 ; R20 := _T
	545	[4023]	GETTABLE 	R20 R20 K23 ; R20 := R20["MenuSuitAvatar"]
	546	[4023]	SELF     	R20 R20 K24 ; R21 := R20; R20 := R20[0xde321e6f]
	547	[4023]	CALL     	R20 2 2 ; R20 := R20(R21)
	548	[4023]	SELF     	R20 R20 K32 ; R21 := R20; R20 := R20[0x2676deee]
	549	[4023]	CALL     	R20 2 2 ; R20 := R20(R21)
	550	[4023]	MOVE     	R4 R20 ; R4 := R20
	551	[4024]	GETGLOBAL	R20 K52 ; R20 := 0x89326c93
	552	[4024]	SELF     	R20 R20 K53 ; R21 := R20; R20 := R20[0x765dad71]
	553	[4024]	GETGLOBAL	R22 K54 ; R22 := 0x88efc25e
	554	[4024]	MOVE     	R23 R2 ; R23 := R2
	555	[4024]	CALL     	R22 2 2 ; R22 := R22(R23)
	556	[4024]	MOVE     	R23 R4 ; R23 := R4
	557	[4024]	GETUPVAL 	R24 U3 ; R24 := U3
	558	[4024]	CALL     	R24 1 0 ; R24,... := R24()
	559	[4024]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	560	[4024]	MOVE     	R2 R20 ; R2 := R20
	561	[4025]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	562	[4025]	MOVE     	R21 R2 ; R21 := R2
	563	[4025]	CALL     	R20 2 2 ; R20 := R20(R21)
	564	[4025]	TEST     	R20 1 ; if R20 then PC := 569
	565	[4025]	JMP      	569 ; PC := 569
	566	[4026]	SELF     	R20 R2 K66 ; R21 := R2; R20 := R2[0x054e3c19]
	567	[4026]	MOVE     	R22 R4 ; R22 := R4
	568	[4026]	CALL     	R20 3 1 ; R20(R21,R22)
	569	[4028]	OP_LOADBOOL	R18 1 0 ; R18 := true
	570	[4028]	JMP      	608 ; PC := 608
	571	[4029]	SELF     	R20 R2 K15 ; R21 := R2; R20 := R2[0xf2deaf69]
	572	[4029]	GETGLOBAL	R22 K74 ; R22 := 0x3219bb07
	573	[4029]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	574	[4029]	TEST     	R20 0 ; if not R20 then PC := 604
	575	[4029]	JMP      	604 ; PC := 604
	576	[4029]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	577	[4029]	GETGLOBAL	R21 K22 ; R21 := _T
	578	[4029]	GETTABLE 	R21 R21 K23 ; R21 := R21["MenuSuitAvatar"]
	579	[4029]	CALL     	R20 2 2 ; R20 := R20(R21)
	580	[4029]	TEST     	R20 1 ; if R20 then PC := 604
	581	[4029]	JMP      	604 ; PC := 604
	582	[4030]	GETGLOBAL	R20 K52 ; R20 := 0x89326c93
	583	[4030]	SELF     	R20 R20 K53 ; R21 := R20; R20 := R20[0x765dad71]
	584	[4030]	GETGLOBAL	R22 K54 ; R22 := 0x88efc25e
	585	[4030]	MOVE     	R23 R2 ; R23 := R2
	586	[4030]	CALL     	R22 2 2 ; R22 := R22(R23)
	587	[4030]	GETGLOBAL	R23 K22 ; R23 := _T
	588	[4030]	GETTABLE 	R23 R23 K23 ; R23 := R23["MenuSuitAvatar"]
	589	[4030]	GETUPVAL 	R24 U3 ; R24 := U3
	590	[4030]	CALL     	R24 1 0 ; R24,... := R24()
	591	[4030]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	592	[4030]	MOVE     	R2 R20 ; R2 := R20
	593	[4031]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	594	[4031]	MOVE     	R21 R2 ; R21 := R2
	595	[4031]	CALL     	R20 2 2 ; R20 := R20(R21)
	596	[4031]	TEST     	R20 1 ; if R20 then PC := 602
	597	[4031]	JMP      	602 ; PC := 602
	598	[4032]	SELF     	R20 R2 K66 ; R21 := R2; R20 := R2[0x054e3c19]
	599	[4032]	GETGLOBAL	R22 K22 ; R22 := _T
	600	[4032]	GETTABLE 	R22 R22 K23 ; R22 := R22["MenuSuitAvatar"]
	601	[4032]	CALL     	R20 3 1 ; R20(R21,R22)
	602	[4034]	OP_LOADBOOL	R18 1 0 ; R18 := true
	603	[4034]	JMP      	608 ; PC := 608
	604	[4036]	GETGLOBAL	R20 K75 ; R20 := 0xb009bbc6
	605	[4036]	MOVE     	R21 R2 ; R21 := R2
	606	[4036]	CALL     	R20 2 2 ; R20 := R20(R21)
	607	[4036]	MOVE     	R2 R20 ; R2 := R20
	608	[4038]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	609	[4038]	MOVE     	R21 R2 ; R21 := R2
	610	[4038]	CALL     	R20 2 2 ; R20 := R20(R21)
	611	[4038]	TEST     	R20 1 ; if R20 then PC := 650
	612	[4038]	JMP      	650 ; PC := 650
	613	[4039]	GETTABLE 	R20 R0 K12 ; R20 := R0["EquippedItem"]
	614	[4039]	EQ       	1 R20 K13 ; if R20 == nil then PC := 630
	615	[4039]	JMP      	630 ; PC := 630
	616	[4040]	GETTABLE 	R20 R0 K12 ; R20 := R0["EquippedItem"]
	617	[4040]	GETTABLE 	R20 R20 K67 ; R20 := R20["mModularParts"]
	618	[4040]	LEN      	R20 R20 ; R20 := # R20
	619	[4040]	LT       	0 K33 R20 ; if 0.000000 >= R20 then PC := 650
	620	[4040]	JMP      	650 ; PC := 650
	621	[4041]	SELF     	R20 R2 K68 ; R21 := R2; R20 := R2[0xa6101f7e]
	622	[4041]	GETTABLE 	R22 R0 K12 ; R22 := R0["EquippedItem"]
	623	[4041]	GETTABLE 	R22 R22 K67 ; R22 := R22["mModularParts"]
	624	[4041]	GETTABLE 	R23 R0 K12 ; R23 := R0["EquippedItem"]
	625	[4041]	SELF     	R23 R23 K69 ; R24 := R23; R23 := R23[0xdbfbf6c0]
	626	[4041]	LOADK    	R25 := 3.000000
	627	[4041]	CALL     	R23 3 0 ; R23,... := R23(R24,R25)
	628	[4041]	CALL     	R20 0 1 ; R20(R21,...)
	629	[4042]	JMP      	650 ; PC := 650
	630	[4043]	GETTABLE 	R20 R0 K42 ; R20 := R0["mStoreItem"]
	631	[4043]	EQ       	1 R20 K13 ; if R20 == nil then PC := 650
	632	[4043]	JMP      	650 ; PC := 650
	633	[4044]	GETTABLE 	R20 R0 K67 ; R20 := R0["mModularParts"]
	634	[4044]	LEN      	R20 R20 ; R20 := # R20
	635	[4044]	LT       	0 K33 R20 ; if 0.000000 >= R20 then PC := 650
	636	[4044]	JMP      	650 ; PC := 650
	637	[4045]	GETUPVAL 	R20 U4 ; R20 := U4
	638	[4045]	GETTABLE 	R20 R20 K70 ; R20 := R20[0x06d055f9]
	639	[4045]	GETGLOBAL	R21 K3 ; R21 := 0x7b998233
	640	[4045]	GETTABLE 	R22 R0 K71 ; R22 := R0["mGild"]
	641	[4045]	CALL     	R21 2 2 ; R21 := R21(R22)
	642	[4045]	NOT      	R21 R21 ; R21 := not R21
	643	[4045]	GETTABLE 	R22 R0 K71 ; R22 := R0["mGild"]
	644	[4045]	OP_LOADBOOL	R23 0 0 ; R23 := false
	645	[4045]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	646	[4046]	SELF     	R21 R2 K68 ; R22 := R2; R21 := R2[0xa6101f7e]
	647	[4046]	GETTABLE 	R23 R0 K67 ; R23 := R0["mModularParts"]
	648	[4046]	MOVE     	R24 R20 ; R24 := R20
	649	[4046]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	650	[4054]	GETGLOBAL	R21 K3 ; R21 := 0x7b998233
	651	[4054]	MOVE     	R22 R2 ; R22 := R2
	652	[4054]	CALL     	R21 2 2 ; R21 := R21(R22)
	653	[4054]	TEST     	R21 0 ; if not R21 then PC := 656
	654	[4054]	JMP      	656 ; PC := 656
	655	[4055]	RETURN   	R0 1 ; return 
	656	[4058]	LOADNIL  	R21 R21 ; R21 := nil
	657	[4060]	SELF     	R22 R2 K15 ; R23 := R2; R22 := R2[0xf2deaf69]
	658	[4060]	GETGLOBAL	R24 K76 ; R24 := gPowerSuitType
	659	[4060]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	660	[4060]	TEST     	R22 0 ; if not R22 then PC := 671
	661	[4060]	JMP      	671 ; PC := 671
	662	[4061]	OP_LOADBOOL	R3 1 0 ; R3 := true
	663	[4062]	GETUPVAL 	R22 U5 ; R22 := U5
	664	[4062]	GETGLOBAL	R23 K0 ; R23 := 0xae91e43b
	665	[4062]	MOVE     	R24 R4 ; R24 := R4
	666	[4062]	MOVE     	R25 R0 ; R25 := R0
	667	[4062]	MOVE     	R26 R1 ; R26 := R1
	668	[4062]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	669	[4062]	MOVE     	R21 R22 ; R21 := R22
	670	[4062]	JMP      	678 ; PC := 678
	671	[4064]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	672	[4064]	MOVE     	R23 R4 ; R23 := R4
	673	[4064]	CALL     	R22 2 2 ; R22 := R22(R23)
	674	[4064]	TEST     	R22 0 ; if not R22 then PC := 678
	675	[4064]	JMP      	678 ; PC := 678
	676	[4065]	GETGLOBAL	R22 K22 ; R22 := _T
	677	[4065]	GETTABLE 	R4 R22 K23 ; R4 := R22["MenuSuitAvatar"]
	678	[4069]	OP_LOADBOOL	R22 0 0 ; R22 := false
	679	[4070]	NEWTABLE 	R23 4 0 ; R23 := {}
	680	[4070]	OP_LOADBOOL	R24 0 0 ; R24 := false
	681	[4070]	OP_LOADBOOL	R25 0 0 ; R25 := false
	682	[4070]	OP_LOADBOOL	R26 0 0 ; R26 := false
	683	[4070]	OP_LOADBOOL	R27 0 0 ; R27 := false
	684	[4070]	SETLIST  	R23 4 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 4
	685	[4072]	OP_LOADBOOL	R24 0 0 ; R24 := false
	686	[4073]	GETGLOBAL	R25 K77 ; R25 := 0xc8802016
	687	[4073]	GETGLOBAL	R26 K78 ; R26 := mLists
	688	[4073]	GETTABLE 	R26 R26 K79 ; R26 := R26["mLoadOutList"]
	689	[4073]	GETTABLE 	R26 R26 K80 ; R26 := R26["mElements"]
	690	[4073]	CALL     	R25 2 4 ; R25,R26,R27 := R25(R26)
	691	[4073]	JMP      	709 ; PC := 709
	692	[4075]	GETTABLE 	R30 R29 K5 ; R30 := R29["LoadOutType"]
	693	[4075]	EQ       	0 R30 K31 ; if R30 ~= 1.000000 then PC := 709
	694	[4075]	JMP      	709 ; PC := 709
	695	[4075]	GETTABLE 	R30 R29 K21 ; R30 := R29["LoadOutId"]
	696	[4075]	EQ       	0 R30 K33 ; if R30 ~= 0.000000 then PC := 709
	697	[4075]	JMP      	709 ; PC := 709
	698	[4075]	GETTABLE 	R30 R29 K20 ; R30 := R29["UID"]
	699	[4075]	GETGLOBAL	R31 K6 ; R31 := 0x6c97a788
	700	[4075]	GETTABLE 	R31 R31 K81 ; R31 := R31["InvalidItemID"]
	701	[4075]	EQ       	1 R30 R31 ; if R30 == R31 then PC := 709
	702	[4075]	JMP      	709 ; PC := 709
	703	[4075]	GETGLOBAL	R30 K4 ; R30 := 0x25d99d89
	704	[4075]	SELF     	R30 R30 K82 ; R31 := R30; R30 := R30[0x3c6b0324]
	705	[4075]	CALL     	R30 2 2 ; R30 := R30(R31)
	706	[4075]	TEST     	R30 1 ; if R30 then PC := 709
	707	[4075]	JMP      	709 ; PC := 709
	708	[4076]	OP_LOADBOOL	R24 1 0 ; R24 := true
	709	[4073]	TFORLOOP 	R25 2 ; R28,R29 := R25(R26,R27); if R28 ~= nil then begin PC = 692; R27 := R28 end
	710	[4077]	JMP      	692 ; PC := 692
	711	[4080]	TEST     	R3 0 ; if not R3 then PC := 815
	712	[4080]	JMP      	815 ; PC := 815
	713	[4080]	GETGLOBAL	R30 K3 ; R30 := 0x7b998233
	714	[4080]	MOVE     	R31 R21 ; R31 := R21
	715	[4080]	CALL     	R30 2 2 ; R30 := R30(R31)
	716	[4080]	TEST     	R30 1 ; if R30 then PC := 815
	717	[4080]	JMP      	815 ; PC := 815
	718	[4080]	GETUPVAL 	R30 U0 ; R30 := U0
	719	[4080]	GETUPVAL 	R31 U1 ; R31 := U1
	720	[4080]	GETTABLE 	R31 R31 K9 ; R31 := R31["SWAPPING_ITEM"]
	721	[4080]	EQ       	1 R30 R31 ; if R30 == R31 then PC := 815
	722	[4080]	JMP      	815 ; PC := 815
	723	[4080]	GETUPVAL 	R30 U0 ; R30 := U0
	724	[4080]	GETUPVAL 	R31 U1 ; R31 := U1
	725	[4080]	GETTABLE 	R31 R31 K83 ; R31 := R31["SELECTING_SKINS"]
	726	[4080]	EQ       	1 R30 R31 ; if R30 == R31 then PC := 815
	727	[4080]	JMP      	815 ; PC := 815
	728	[4080]	GETTABLE 	R30 R0 K5 ; R30 := R0["LoadOutType"]
	729	[4080]	EQ       	1 R30 K31 ; if R30 == 1.000000 then PC := 815
	730	[4080]	JMP      	815 ; PC := 815
	731	[4080]	GETTABLE 	R30 R0 K5 ; R30 := R0["LoadOutType"]
	732	[4080]	EQ       	1 R30 K8 ; if R30 == 6.000000 then PC := 815
	733	[4080]	JMP      	815 ; PC := 815
	734	[4081]	LOADK    	R30 := 1.000000
	735	[4081]	LOADK    	R31 := 4.000000
	736	[4081]	LOADK    	R32 := 1.000000
	737	[4081]	FORPREP  	R30 814 ; R30 -= R32; PC := 814
	738	[4082]	LOADK    	R34 K58 ; R34 := "Ability"
	739	[4082]	MOVE     	R35 R33 ; R35 := R33
	740	[4082]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	741	[4082]	GETTABLE 	R34 R21 R34 ; R34 := R21[R34]
	742	[4082]	TEST     	R34 0 ; if not R34 then PC := 814
	743	[4082]	JMP      	814 ; PC := 814
	744	[4083]	SETTABLE 	R23 R33 K84 ; R23[R33] := true
	745	[4084]	OP_LOADBOOL	R22 1 0 ; R22 := true
	746	[4085]	GETGLOBAL	R34 K85 ; R34 := 0x7f5022cf
	747	[4085]	GETTABLE 	R34 R34 K86 ; R34 := R34[0x3f3e4d12]
	748	[4085]	LOADK    	R35 K58 ; R35 := "Ability"
	749	[4085]	MOVE     	R36 R33 ; R36 := R33
	750	[4085]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	751	[4085]	GETTABLE 	R35 R21 R35 ; R35 := R21[R35]
	752	[4085]	CALL     	R34 2 2 ; R34 := R34(R35)
	753	[4086]	LOADK    	R35 K87 ; R35 := "AbilityIcon"
	754	[4086]	MOVE     	R36 R33 ; R36 := R33
	755	[4086]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	756	[4086]	GETTABLE 	R35 R21 R35 ; R35 := R21[R35]
	757	[4087]	GETGLOBAL	R36 K0 ; R36 := 0xae91e43b
	758	[4087]	SELF     	R36 R36 K88 ; R37 := R36; R36 := R36[0x1e5b5cfe]
	759	[4087]	LOADK    	R38 K58 ; R38 := "Ability"
	760	[4087]	MOVE     	R39 R33 ; R39 := R33
	761	[4087]	LOADK    	R40 K89 ; R40 := ".Btn"
	762	[4087]	CONCAT   	R38 R38 R40 ; R38 := R38 .. R39 .. R40
	763	[4087]	LOADK    	R39 K90 ; R39 := "AbilityRollOver"
	764	[4087]	LOADK    	R40 K91 ; R40 := "AbilityRollOut"
	765	[4087]	LOADNIL  	R41 R42 ; R41 := R42 := nil
	766	[4087]	CALL     	R36 7 1 ; R36(R37,R38,R39,R40,R41,R42)
	767	[4088]	GETGLOBAL	R36 K0 ; R36 := 0xae91e43b
	768	[4088]	SELF     	R36 R36 K92 ; R37 := R36; R36 := R36[0x67bc869f]
	769	[4088]	LOADK    	R38 K58 ; R38 := "Ability"
	770	[4088]	MOVE     	R39 R33 ; R39 := R33
	771	[4088]	LOADK    	R40 K89 ; R40 := ".Btn"
	772	[4088]	CONCAT   	R38 R38 R40 ; R38 := R38 .. R39 .. R40
	773	[4088]	LOADK    	R39 := 85.000000
	774	[4088]	MOVE     	R40 R33 ; R40 := R33
	775	[4088]	CALL     	R36 5 1 ; R36(R37,R38,R39,R40)
	776	[4089]	GETGLOBAL	R36 K0 ; R36 := 0xae91e43b
	777	[4089]	SELF     	R36 R36 K61 ; R37 := R36; R36 := R36[0x5f56eeab]
	778	[4089]	LOADK    	R38 K58 ; R38 := "Ability"
	779	[4089]	MOVE     	R39 R33 ; R39 := R33
	780	[4089]	LOADK    	R40 K93 ; R40 := ".Label"
	781	[4089]	CONCAT   	R38 R38 R40 ; R38 := R38 .. R39 .. R40
	782	[4089]	LOADK    	R39 := 29.000000
	783	[4089]	MOVE     	R40 R34 ; R40 := R34
	784	[4089]	CALL     	R36 5 1 ; R36(R37,R38,R39,R40)
	785	[4090]	GETGLOBAL	R36 K0 ; R36 := 0xae91e43b
	786	[4090]	SELF     	R36 R36 K94 ; R37 := R36; R36 := R36[0x1cb415c1]
	787	[4090]	LOADK    	R38 K58 ; R38 := "Ability"
	788	[4090]	MOVE     	R39 R33 ; R39 := R33
	789	[4090]	LOADK    	R40 K95 ; R40 := ".Icon"
	790	[4090]	CONCAT   	R38 R38 R40 ; R38 := R38 .. R39 .. R40
	791	[4090]	MOVE     	R39 R35 ; R39 := R35
	792	[4090]	CALL     	R36 4 1 ; R36(R37,R38,R39)
	793	[4091]	GETGLOBAL	R36 K0 ; R36 := 0xae91e43b
	794	[4091]	SELF     	R36 R36 K96 ; R37 := R36; R36 := R36[0xf64b7262]
	795	[4091]	LOADK    	R38 K58 ; R38 := "Ability"
	796	[4091]	MOVE     	R39 R33 ; R39 := R33
	797	[4091]	CONCAT   	R38 R38 R39 ; R38 := R38 .. R39
	798	[4091]	LOADK    	R39 K97 ; R39 := "Icon"
	799	[4091]	LOADK    	R40 := 10.000000
	800	[4091]	LOADK    	R41 := 40.000000
	801	[4091]	CALL     	R36 6 1 ; R36(R37,R38,R39,R40,R41)
	802	[4092]	GETGLOBAL	R36 K0 ; R36 := 0xae91e43b
	803	[4092]	SELF     	R36 R36 K98 ; R37 := R36; R36 := R36[0x91e13703]
	804	[4092]	LOADK    	R38 K58 ; R38 := "Ability"
	805	[4092]	MOVE     	R39 R33 ; R39 := R33
	806	[4092]	LOADK    	R40 K95 ; R40 := ".Icon"
	807	[4092]	CONCAT   	R38 R38 R40 ; R38 := R38 .. R39 .. R40
	808	[4092]	LOADK    	R39 K99 ; R39 := "PixelateBias"
	809	[4092]	LOADK    	R40 := 1.000000
	810	[4092]	LOADK    	R41 := 1.000000
	811	[4092]	LOADK    	R42 := 0.000000
	812	[4092]	LOADK    	R43 := 0.000000
	813	[4092]	CALL     	R36 8 1 ; R36(R37,R38,R39,R40,R41,R42,R43)
	814	[4081]	FORLOOP  	R30 738 ; R30 += R32; if R30 <= R31 then begin PC := 738; R33 := R30 end
	815	[4097]	GETUPVAL 	R36 U6 ; R36 := U6
	816	[4097]	GETTABLE 	R36 R36 K100 ; R36 := R36["Current"]
	817	[4097]	EQ       	0 R36 K101 ; if R36 ~= 3.000000 then PC := 828
	818	[4097]	JMP      	828 ; PC := 828
	819	[4097]	GETGLOBAL	R36 K10 ; R36 := mSelected
	820	[4097]	GETTABLE 	R36 R36 K11 ; R36 := R36["Element"]
	821	[4097]	EQ       	1 R36 K13 ; if R36 == nil then PC := 828
	822	[4097]	JMP      	828 ; PC := 828
	823	[4097]	GETGLOBAL	R36 K10 ; R36 := mSelected
	824	[4097]	GETTABLE 	R36 R36 K11 ; R36 := R36["Element"]
	825	[4097]	GETTABLE 	R36 R36 K21 ; R36 := R36["LoadOutId"]
	826	[4097]	EQ       	1 R36 K7 ; if R36 == 4.000000 then PC := 829
	827	[4097]	JMP      	829 ; PC := 829
	828	[4097]	OP_LOADBOOL	R36 0 1 ; R36 := false; PC := 829
	829	[4097]	OP_LOADBOOL	R36 1 0 ; R36 := true
	830	[4098]	GETUPVAL 	R37 U7 ; R37 := U7
	831	[4098]	GETTABLE 	R37 R37 K102 ; R37 := R37[0x0ed5e9ac]
	832	[4098]	MOVE     	R38 R2 ; R38 := R2
	833	[4098]	MOVE     	R39 R4 ; R39 := R4
	834	[4098]	OP_LOADBOOL	R40 0 0 ; R40 := false
	835	[4098]	GETUPVAL 	R41 U0 ; R41 := U0
	836	[4098]	GETUPVAL 	R42 U1 ; R42 := U1
	837	[4098]	GETTABLE 	R42 R42 K9 ; R42 := R42["SWAPPING_ITEM"]
	838	[4098]	EQ       	0 R41 R42 ; if R41 ~= R42 then PC := 841
	839	[4098]	JMP      	841 ; PC := 841
	840	[4098]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 841
	841	[4098]	OP_LOADBOOL	R41 1 0 ; R41 := true
	842	[4098]	MOVE     	R42 R36 ; R42 := R36
	843	[4098]	CALL     	R37 6 2 ; R37 := R37(R38,R39,R40,R41,R42)
	844	[4099]	EQ       	1 R37 K13 ; if R37 == nil then PC := 853
	845	[4099]	JMP      	853 ; PC := 853
	846	[4100]	GETUPVAL 	R38 U7 ; R38 := U7
	847	[4100]	GETTABLE 	R38 R38 K103 ; R38 := R38[0xa5370868]
	848	[4100]	GETUPVAL 	R39 U8 ; R39 := U8
	849	[4100]	GETTABLE 	R39 R39 K104 ; R39 := R39["mCachedStats"]
	850	[4100]	MOVE     	R40 R37 ; R40 := R37
	851	[4100]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	852	[4100]	MOVE     	R37 R38 ; R37 := R38
	853	[4103]	TEST     	R22 0 ; if not R22 then PC := 862
	854	[4103]	JMP      	862 ; PC := 862
	855	[4104]	GETGLOBAL	R38 K0 ; R38 := 0xae91e43b
	856	[4104]	SELF     	R38 R38 K61 ; R39 := R38; R38 := R38[0x5f56eeab]
	857	[4104]	LOADK    	R40 K62 ; R40 := "CosmeticDesc"
	858	[4104]	LOADK    	R41 := 29.000000
	859	[4104]	LOADK    	R42 K63 ; R42 := ""
	860	[4104]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	861	[4104]	JMP      	865 ; PC := 865
	862	[4106]	GETUPVAL 	R38 U9 ; R38 := U9
	863	[4106]	MOVE     	R39 R0 ; R39 := R0
	864	[4106]	CALL     	R38 2 1 ; R38(R39)
	865	[4108]	GETUPVAL 	R38 U10 ; R38 := U10
	866	[4108]	MOVE     	R39 R0 ; R39 := R0
	867	[4108]	MOVE     	R40 R37 ; R40 := R37
	868	[4108]	CALL     	R38 3 1 ; R38(R39,R40)
	869	[4110]	LOADK    	R38 := 1.000000
	870	[4110]	LOADK    	R39 := 4.000000
	871	[4110]	LOADK    	R40 := 1.000000
	872	[4110]	FORPREP  	R38 897 ; R38 -= R40; PC := 897
	873	[4111]	GETGLOBAL	R42 K57 ; R42 := 0x25312c9b
	874	[4111]	GETGLOBAL	R43 K0 ; R43 := 0xae91e43b
	875	[4111]	LOADK    	R44 K58 ; R44 := "Ability"
	876	[4111]	MOVE     	R45 R41 ; R45 := R41
	877	[4111]	CONCAT   	R44 R44 R45 ; R44 := R44 .. R45
	878	[4111]	LOADK    	R45 := 8.000000
	879	[4111]	NEWTABLE 	R46 1 0 ; R46 := {}
	880	[4111]	LOADK    	R47 := 10.000000
	881	[4111]	SETLIST  	R46 1 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 1
	882	[4111]	NEWTABLE 	R47 0 0 ; R47 := {}
	883	[4111]	GETUPVAL 	R48 U4 ; R48 := U4
	884	[4111]	GETTABLE 	R48 R48 K70 ; R48 := R48[0x06d055f9]
	885	[4111]	GETTABLE 	R49 R23 R41 ; R49 := R23[R41]
	886	[4111]	LOADK    	R50 := 100.000000
	887	[4111]	LOADK    	R51 := 0.000000
	888	[4111]	CALL     	R48 4 0 ; R48,... := R48(R49,R50,R51)
	889	[4111]	SETLIST  	R47 0 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 0
	890	[4111]	LOADK    	R48 K60 ; R48 := 0.200000
	891	[4111]	LOADK    	R49 := 0.000000
	892	[4111]	CLOSURE  	R50 1 ; R50 := closure(Function #2)
	893	[4111]	MOVE     	R0 R41 ; R0 := R41
	894	[4111]	MOVE     	R0 R23 ; R0 := R23
	895	[4111]	CALL     	R42 9 1 ; R42(R43,R44,R45,R46,R47,R48,R49,R50)
	896	[4111]	CLOSE    	R41 ; SAVE R41,...
	897	[4110]	FORLOOP  	R38 873 ; R38 += R40; if R38 <= R39 then begin PC := 873; R41 := R38 end
	898	[4114]	TEST     	R18 0 ; if not R18 then PC := 904
	899	[4114]	JMP      	904 ; PC := 904
	900	[4115]	GETGLOBAL	R41 K52 ; R41 := 0x89326c93
	901	[4115]	SELF     	R41 R41 K56 ; R42 := R41; R41 := R41[0x59c96e77]
	902	[4115]	MOVE     	R43 R2 ; R43 := R2
	903	[4115]	CALL     	R41 3 1 ; R41(R42,R43)
	904	[4117]	RETURN   	R0 1 ; return 

function #69 <?:4119,4190> (207 instructions, 828 bytes at 00000211303D56B0)
1 param, 17 slots, 3 upvalues, 0 locals, 43 constants, 0 functions
	1	[4120]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4120]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4120]	JMP      	5 ; PC := 5
	4	[4123]	RETURN   	R0 1 ; return 
	5	[4126]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	6	[4126]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x91a24e4b]
	7	[4126]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	8	[4126]	LOADK    	R4 K4 ; R4 := ".Back"
	9	[4126]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	10	[4126]	LOADK    	R4 := 13.000000
	11	[4126]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	12	[4128]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 15
	13	[4128]	JMP      	15 ; PC := 15
	14	[4129]	RETURN   	R0 1 ; return 
	15	[4132]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[4132]	GETTABLE 	R2 R2 K5 ; R2 := R2["HEIGHT_UNSELECTED"]
	17	[4132]	SUB      	R2 R1 R2 ; R2 := R1 - R2
	18	[4132]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[4132]	GETTABLE 	R3 R3 K6 ; R3 := R3["HEIGHT_SELECTED"]
	20	[4132]	GETUPVAL 	R4 U0 ; R4 := U0
	21	[4132]	GETTABLE 	R4 R4 K5 ; R4 := R4["HEIGHT_UNSELECTED"]
	22	[4132]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	23	[4132]	DIV      	R2 R2 R3 ; R2 := R2 / R3
	24	[4133]	LOADK    	R3 K7 ; R3 := 1.520000
	25	[4134]	GETTABLE 	R4 R0 K8 ; R4 := R0["EmotesEntry"]
	26	[4134]	TEST     	R4 1 ; if R4 then PC := 31
	27	[4134]	JMP      	31 ; PC := 31
	28	[4134]	GETTABLE 	R4 R0 K9 ; R4 := R0["MandachordEntry"]
	29	[4134]	TEST     	R4 0 ; if not R4 then PC := 35
	30	[4134]	JMP      	35 ; PC := 35
	31	[4134]	GETGLOBAL	R4 K10 ; R4 := 0x0032441c
	32	[4134]	GETTABLE 	R4 R4 K11 ; R4 := R4["UIColor_DarkGrey"]
	33	[4134]	TEST     	R4 1 ; if R4 then PC := 37
	34	[4134]	JMP      	37 ; PC := 37
	35	[4134]	GETGLOBAL	R4 K10 ; R4 := 0x0032441c
	36	[4134]	GETTABLE 	R4 R4 K12 ; R4 := R4["UIColor_White"]
	37	[4135]	GETGLOBAL	R5 K13 ; R5 := 0x7b998233
	38	[4135]	GETTABLE 	R6 R0 K14 ; R6 := R0["SpecialIcon"]
	39	[4135]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[4135]	TEST     	R5 1 ; if R5 then PC := 60
	41	[4135]	JMP      	60 ; PC := 60
	42	[4136]	LOADK    	R2 := 1.000000
	43	[4137]	GETUPVAL 	R5 U1 ; R5 := U1
	44	[4137]	EQ       	1 R5 K1 ; if R5 == nil then PC := 54
	45	[4137]	JMP      	54 ; PC := 54
	46	[4137]	GETUPVAL 	R5 U1 ; R5 := U1
	47	[4137]	GETTABLE 	R5 R5 K15 ; R5 := R5["Id"]
	48	[4137]	GETTABLE 	R6 R0 K15 ; R6 := R0["Id"]
	49	[4137]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 54
	50	[4137]	JMP      	54 ; PC := 54
	51	[4137]	GETTABLE 	R5 R0 K16 ; R5 := R0["FocusEntry"]
	52	[4137]	TEST     	R5 0 ; if not R5 then PC := 60
	53	[4137]	JMP      	60 ; PC := 60
	54	[4138]	GETTABLE 	R5 R0 K17 ; R5 := R0["LoadOutId"]
	55	[4138]	EQ       	1 R5 K1 ; if R5 == nil then PC := 58
	56	[4138]	JMP      	58 ; PC := 58
	57	[4139]	LOADK    	R3 := 1.000000
	58	[4141]	GETGLOBAL	R5 K10 ; R5 := 0x0032441c
	59	[4141]	GETTABLE 	R4 R5 K11 ; R4 := R5["UIColor_DarkGrey"]
	60	[4144]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	61	[4144]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0xf64b7262]
	62	[4144]	GETTABLE 	R7 R0 K0 ; R7 := R0["mClipName"]
	63	[4144]	LOADK    	R8 K19 ; R8 := "Icon"
	64	[4144]	LOADK    	R9 := 9.000000
	65	[4144]	MOVE     	R10 R4 ; R10 := R4
	66	[4144]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	67	[4145]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	68	[4145]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0xf64b7262]
	69	[4145]	GETTABLE 	R7 R0 K0 ; R7 := R0["mClipName"]
	70	[4145]	LOADK    	R8 K19 ; R8 := "Icon"
	71	[4145]	LOADK    	R9 := 10.000000
	72	[4145]	GETGLOBAL	R10 K20 ; R10 := 0x42dcc9f5
	73	[4145]	MUL      	R11 R2 K21 ; R11 := R2 * 200.000000
	74	[4145]	LOADK    	R12 := 0.000000
	75	[4145]	LOADK    	R13 := 100.000000
	76	[4145]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	77	[4145]	CALL     	R5 0 1 ; R5(R6,...)
	78	[4147]	MOVE     	R5 R1 ; R5 := R1
	79	[4148]	LOADK    	R6 := 0.000000
	80	[4149]	GETTABLE 	R7 R0 K22 ; R7 := R0["IconScale"]
	81	[4149]	EQ       	1 R7 K1 ; if R7 == nil then PC := 86
	82	[4149]	JMP      	86 ; PC := 86
	83	[4150]	GETTABLE 	R7 R0 K22 ; R7 := R0["IconScale"]
	84	[4150]	MUL      	R5 R5 R7 ; R5 := R5 * R7
	85	[4150]	JMP      	99 ; PC := 99
	86	[4152]	GETTABLE 	R7 R0 K17 ; R7 := R0["LoadOutId"]
	87	[4152]	EQ       	0 R7 K1 ; if R7 ~= nil then PC := 90
	88	[4152]	JMP      	90 ; PC := 90
	89	[4153]	MUL      	R5 R5 K23 ; R5 := R5 * 0.750000
	90	[4155]	GETTABLE 	R7 R0 K24 ; R7 := R0["XpRatio"]
	91	[4155]	EQ       	1 R7 K1 ; if R7 == nil then PC := 95
	92	[4155]	JMP      	95 ; PC := 95
	93	[4156]	SUB      	R5 R5 K25 ; R5 := R5 - 6.000000
	94	[4157]	SUB      	R6 R6 K26 ; R6 := R6 - 4.000000
	95	[4159]	GETTABLE 	R7 R0 K8 ; R7 := R0["EmotesEntry"]
	96	[4159]	TEST     	R7 0 ; if not R7 then PC := 99
	97	[4159]	JMP      	99 ; PC := 99
	98	[4160]	MUL      	R5 R5 K27 ; R5 := R5 * 0.900000
	99	[4164]	GETUPVAL 	R7 U2 ; R7 := U2
	100	[4164]	GETTABLE 	R7 R7 K28 ; R7 := R7[0x06d055f9]
	101	[4164]	GETTABLE 	R8 R0 K16 ; R8 := R0["FocusEntry"]
	102	[4164]	TEST     	R8 1 ; if R8 then PC := 111
	103	[4164]	JMP      	111 ; PC := 111
	104	[4164]	GETTABLE 	R8 R0 K8 ; R8 := R0["EmotesEntry"]
	105	[4164]	TEST     	R8 1 ; if R8 then PC := 111
	106	[4164]	JMP      	111 ; PC := 111
	107	[4164]	GETTABLE 	R8 R0 K9 ; R8 := R0["MandachordEntry"]
	108	[4164]	TEST     	R8 1 ; if R8 then PC := 111
	109	[4164]	JMP      	111 ; PC := 111
	110	[4164]	GETTABLE 	R8 R0 K29 ; R8 := R0["Themed"]
	111	[4164]	MOVE     	R9 R5 ; R9 := R5
	112	[4164]	MUL      	R10 R5 R3 ; R10 := R5 * R3
	113	[4164]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	114	[4165]	GETUPVAL 	R8 U2 ; R8 := U2
	115	[4165]	GETTABLE 	R8 R8 K28 ; R8 := R8[0x06d055f9]
	116	[4165]	GETTABLE 	R9 R0 K8 ; R9 := R0["EmotesEntry"]
	117	[4165]	TEST     	R9 1 ; if R9 then PC := 120
	118	[4165]	JMP      	120 ; PC := 120
	119	[4165]	GETTABLE 	R9 R0 K16 ; R9 := R0["FocusEntry"]
	120	[4165]	MUL      	R10 R5 K30 ; R10 := R5 * 1.700000
	121	[4165]	MOVE     	R11 R7 ; R11 := R7
	122	[4165]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	123	[4165]	MUL      	R8 R8 K31 ; R8 := R8 * 0.500000
	124	[4166]	GETTABLE 	R9 R0 K17 ; R9 := R0["LoadOutId"]
	125	[4166]	TEST     	R9 0 ; if not R9 then PC := 143
	126	[4166]	JMP      	143 ; PC := 143
	127	[4166]	GETTABLE 	R9 R0 K17 ; R9 := R0["LoadOutId"]
	128	[4166]	GETGLOBAL	R10 K32 ; R10 := 0x6c97a788
	129	[4166]	GETTABLE 	R10 R10 K33 ; R10 := R10["NUM_NORMAL_LOADOUT_SLOTS"]
	130	[4166]	LE       	0 R10 R9 ; if R10 > R9 then PC := 143
	131	[4166]	JMP      	143 ; PC := 143
	132	[4169]	GETUPVAL 	R9 U1 ; R9 := U1
	133	[4169]	EQ       	1 R9 K1 ; if R9 == nil then PC := 142
	134	[4169]	JMP      	142 ; PC := 142
	135	[4169]	GETUPVAL 	R9 U1 ; R9 := U1
	136	[4169]	GETTABLE 	R9 R9 K15 ; R9 := R9["Id"]
	137	[4169]	GETTABLE 	R10 R0 K15 ; R10 := R0["Id"]
	138	[4169]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 142
	139	[4169]	JMP      	142 ; PC := 142
	140	[4170]	SETTABLE 	R0 K34 K1 ; R0["IconXScale"] := nil
	141	[4170]	JMP      	143 ; PC := 143
	142	[4172]	SETTABLE 	R0 K34 K35 ; R0["IconXScale"] := 0.350000
	143	[4175]	GETTABLE 	R9 R0 K34 ; R9 := R0["IconXScale"]
	144	[4175]	EQ       	1 R9 K1 ; if R9 == nil then PC := 149
	145	[4175]	JMP      	149 ; PC := 149
	146	[4176]	GETTABLE 	R9 R0 K34 ; R9 := R0["IconXScale"]
	147	[4176]	MUL      	R9 R8 R9 ; R9 := R8 * R9
	148	[4176]	ADD      	R8 R8 R9 ; R8 := R8 + R9
	149	[4178]	SUB      	R9 K36 R8 ; R9 := 384.000000 - R8
	150	[4179]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	151	[4179]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0xf64b7262]
	152	[4179]	GETTABLE 	R12 R0 K0 ; R12 := R0["mClipName"]
	153	[4179]	LOADK    	R13 K19 ; R13 := "Icon"
	154	[4179]	LOADK    	R14 := 0.000000
	155	[4179]	MOVE     	R15 R9 ; R15 := R9
	156	[4179]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	157	[4180]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	158	[4180]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0xf64b7262]
	159	[4180]	GETTABLE 	R12 R0 K0 ; R12 := R0["mClipName"]
	160	[4180]	LOADK    	R13 K19 ; R13 := "Icon"
	161	[4180]	LOADK    	R14 := 1.000000
	162	[4180]	MOVE     	R15 R6 ; R15 := R6
	163	[4180]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	164	[4181]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	165	[4181]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0xf64b7262]
	166	[4181]	GETTABLE 	R12 R0 K0 ; R12 := R0["mClipName"]
	167	[4181]	LOADK    	R13 K19 ; R13 := "Icon"
	168	[4181]	LOADK    	R14 := 12.000000
	169	[4181]	MOVE     	R15 R7 ; R15 := R7
	170	[4181]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	171	[4182]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	172	[4182]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0xf64b7262]
	173	[4182]	GETTABLE 	R12 R0 K0 ; R12 := R0["mClipName"]
	174	[4182]	LOADK    	R13 K19 ; R13 := "Icon"
	175	[4182]	LOADK    	R14 := 13.000000
	176	[4182]	MOVE     	R15 R5 ; R15 := R5
	177	[4182]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	178	[4184]	GETTABLE 	R10 R0 K37 ; R10 := R0["TopTitle"]
	179	[4184]	EQ       	1 R10 K1 ; if R10 == nil then PC := 193
	180	[4184]	JMP      	193 ; PC := 193
	181	[4185]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	182	[4185]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0xf64b7262]
	183	[4185]	GETTABLE 	R12 R0 K0 ; R12 := R0["mClipName"]
	184	[4185]	LOADK    	R13 K37 ; R13 := "TopTitle"
	185	[4185]	LOADK    	R14 := 1.000000
	186	[4185]	GETUPVAL 	R15 U2 ; R15 := U2
	187	[4185]	GETTABLE 	R15 R15 K38 ; R15 := R15[0x74a11ec6]
	188	[4185]	MUL      	R16 R1 K31 ; R16 := R1 * 0.500000
	189	[4185]	UNM      	R16 R16 ; R16 := ^ R16
	190	[4185]	SUB      	R16 R16 K39 ; R16 := R16 - 14.000000
	191	[4185]	CALL     	R15 2 0 ; R15,... := R15(R16)
	192	[4185]	CALL     	R10 0 1 ; R10(R11,...)
	193	[4187]	GETTABLE 	R10 R0 K40 ; R10 := R0["HasBottomLine"]
	194	[4187]	TEST     	R10 0 ; if not R10 then PC := 207
	195	[4187]	JMP      	207 ; PC := 207
	196	[4188]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	197	[4188]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0xf64b7262]
	198	[4188]	GETTABLE 	R12 R0 K0 ; R12 := R0["mClipName"]
	199	[4188]	LOADK    	R13 K41 ; R13 := "BottomLine"
	200	[4188]	LOADK    	R14 := 1.000000
	201	[4188]	GETUPVAL 	R15 U2 ; R15 := U2
	202	[4188]	GETTABLE 	R15 R15 K38 ; R15 := R15[0x74a11ec6]
	203	[4188]	MUL      	R16 R1 K31 ; R16 := R1 * 0.500000
	204	[4188]	ADD      	R16 R16 K42 ; R16 := R16 + 7.000000
	205	[4188]	CALL     	R15 2 0 ; R15,... := R15(R16)
	206	[4188]	CALL     	R10 0 1 ; R10(R11,...)
	207	[4190]	RETURN   	R0 1 ; return 

function #70 <?:4192,4208> (97 instructions, 388 bytes at 0000021132269610)
1 param, 15 slots, 2 upvalues, 0 locals, 18 constants, 2 functions
	1	[4193]	EQ       	1 R0 K0 ; if R0 == nil then PC := 6
	2	[4193]	JMP      	6 ; PC := 6
	3	[4193]	GETTABLE 	R1 R0 K1 ; R1 := R0["mClipName"]
	4	[4193]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 7
	5	[4193]	JMP      	7 ; PC := 7
	6	[4194]	RETURN   	R0 1 ; return 
	7	[4196]	GETTABLE 	R1 R0 K1 ; R1 := R0["mClipName"]
	8	[4197]	LOADK    	R2 := 1.000000
	9	[4197]	LOADK    	R3 := 4.000000
	10	[4197]	LOADK    	R4 := 1.000000
	11	[4197]	FORPREP  	R2 44 ; R2 -= R4; PC := 44
	12	[4198]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	13	[4198]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0xaade900e]
	14	[4198]	GETTABLE 	R8 R0 K1 ; R8 := R0["mClipName"]
	15	[4198]	LOADK    	R9 K4 ; R9 := ".Btn"
	16	[4198]	MOVE     	R10 R5 ; R10 := R5
	17	[4198]	LOADK    	R11 K4 ; R11 := ".Btn"
	18	[4198]	CONCAT   	R8 R8 R11 ; R8 := R8 .. R9 .. R10 .. R11
	19	[4198]	LOADK    	R9 := 59.000000
	20	[4198]	OP_LOADBOOL	R10 0 0 ; R10 := false
	21	[4198]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	22	[4199]	GETGLOBAL	R6 K5 ; R6 := 0x25312c9b
	23	[4199]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	24	[4199]	GETTABLE 	R8 R0 K1 ; R8 := R0["mClipName"]
	25	[4199]	LOADK    	R9 K4 ; R9 := ".Btn"
	26	[4199]	MOVE     	R10 R5 ; R10 := R5
	27	[4199]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	28	[4199]	GETUPVAL 	R9 U0 ; R9 := U0
	29	[4199]	GETTABLE 	R9 R9 K6 ; R9 := R9["RESIZE_EASE"]
	30	[4199]	NEWTABLE 	R10 1 0 ; R10 := {}
	31	[4199]	LOADK    	R11 := 10.000000
	32	[4199]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	33	[4199]	NEWTABLE 	R11 1 0 ; R11 := {}
	34	[4199]	LOADK    	R12 := 0.000000
	35	[4199]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	36	[4199]	GETUPVAL 	R12 U0 ; R12 := U0
	37	[4199]	GETTABLE 	R12 R12 K7 ; R12 := R12["RESIZE_DURATION"]
	38	[4199]	LOADK    	R13 := 0.000000
	39	[4199]	CLOSURE  	R14 0 ; R14 := closure(Function #1)
	40	[4199]	MOVE     	R0 R1 ; R0 := R1
	41	[4199]	MOVE     	R0 R5 ; R0 := R5
	42	[4199]	CALL     	R6 9 1 ; R6(R7,R8,R9,R10,R11,R12,R13,R14)
	43	[4199]	CLOSE    	R5 ; SAVE R5,...
	44	[4197]	FORLOOP  	R2 12 ; R2 += R4; if R2 <= R3 then begin PC := 12; R5 := R2 end
	45	[4202]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	46	[4202]	GETTABLE 	R6 R0 K9 ; R6 := R0["SpecialIcon"]
	47	[4202]	CALL     	R5 2 2 ; R5 := R5(R6)
	48	[4202]	TEST     	R5 1 ; if R5 then PC := 57
	49	[4202]	JMP      	57 ; PC := 57
	50	[4203]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	51	[4203]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x1cb415c1]
	52	[4203]	GETTABLE 	R7 R0 K1 ; R7 := R0["mClipName"]
	53	[4203]	LOADK    	R8 K11 ; R8 := ".Icon"
	54	[4203]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	55	[4203]	GETTABLE 	R8 R0 K9 ; R8 := R0["SpecialIcon"]
	56	[4203]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	57	[4206]	GETGLOBAL	R5 K5 ; R5 := 0x25312c9b
	58	[4206]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	59	[4206]	GETTABLE 	R7 R0 K1 ; R7 := R0["mClipName"]
	60	[4206]	LOADK    	R8 K12 ; R8 := ".Back"
	61	[4206]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	62	[4206]	GETUPVAL 	R8 U0 ; R8 := U0
	63	[4206]	GETTABLE 	R8 R8 K6 ; R8 := R8["RESIZE_EASE"]
	64	[4206]	NEWTABLE 	R9 2 0 ; R9 := {}
	65	[4206]	LOADK    	R10 K13 ; R10 := "_height"
	66	[4206]	CLOSURE  	R11 1 ; R11 := closure(Function #2)
	67	[4206]	GETUPVAL 	R0 U1 ; R0 := U1
	68	[4206]	MOVE     	R0 R0 ; R0 := R0
	69	[4206]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	70	[4206]	NEWTABLE 	R10 2 0 ; R10 := {}
	71	[4206]	GETUPVAL 	R11 U0 ; R11 := U0
	72	[4206]	GETTABLE 	R11 R11 K14 ; R11 := R11["HEIGHT_UNSELECTED"]
	73	[4206]	LOADK    	R12 := 1.000000
	74	[4206]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	75	[4206]	GETUPVAL 	R11 U0 ; R11 := U0
	76	[4206]	GETTABLE 	R11 R11 K7 ; R11 := R11["RESIZE_DURATION"]
	77	[4206]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	78	[4207]	GETGLOBAL	R5 K5 ; R5 := 0x25312c9b
	79	[4207]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	80	[4207]	GETTABLE 	R7 R0 K1 ; R7 := R0["mClipName"]
	81	[4207]	LOADK    	R8 K15 ; R8 := ".LevelProgress"
	82	[4207]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	83	[4207]	GETUPVAL 	R8 U0 ; R8 := U0
	84	[4207]	GETTABLE 	R8 R8 K6 ; R8 := R8["RESIZE_EASE"]
	85	[4207]	NEWTABLE 	R9 1 0 ; R9 := {}
	86	[4207]	LOADK    	R10 := 1.000000
	87	[4207]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	88	[4207]	NEWTABLE 	R10 1 0 ; R10 := {}
	89	[4207]	GETUPVAL 	R11 U0 ; R11 := U0
	90	[4207]	GETTABLE 	R11 R11 K14 ; R11 := R11["HEIGHT_UNSELECTED"]
	91	[4207]	MUL      	R11 R11 K16 ; R11 := R11 * 0.500000
	92	[4207]	SUB      	R11 R11 K17 ; R11 := R11 - 5.000000
	93	[4207]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	94	[4207]	GETUPVAL 	R11 U0 ; R11 := U0
	95	[4207]	GETTABLE 	R11 R11 K7 ; R11 := R11["RESIZE_DURATION"]
	96	[4207]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	97	[4208]	RETURN   	R0 1 ; return 

function #71 <?:4210,4225> (48 instructions, 192 bytes at 0000021132269D90)
1 param, 5 slots, 4 upvalues, 0 locals, 17 constants, 0 functions
	1	[4211]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[4211]	GETTABLE 	R2 R0 K2 ; R2 := R0["LoadOutType"]
	3	[4211]	SETTABLE 	R1 K1 R2 ; R1["upgradeItemLot"] := R2
	4	[4212]	GETGLOBAL	R1 K0 ; R1 := _T
	5	[4212]	GETTABLE 	R2 R0 K4 ; R2 := R0["LoadOutId"]
	6	[4212]	SETTABLE 	R1 K3 R2 ; R1["upgradeItemSlot"] := R2
	7	[4213]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4213]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xb2cd8e7b]
	9	[4213]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[4213]	MOVE     	R3 R0 ; R3 := R0
	11	[4213]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[4215]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	13	[4215]	GETGLOBAL	R2 K7 ; R2 := mEvoMovie
	14	[4215]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[4215]	TEST     	R1 0 ; if not R1 then PC := 44
	16	[4215]	JMP      	44 ; PC := 44
	17	[4215]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[4215]	GETUPVAL 	R2 U2 ; R2 := U2
	19	[4215]	GETTABLE 	R2 R2 K8 ; R2 := R2["SELECTING_PART"]
	20	[4215]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 44
	21	[4215]	JMP      	44 ; PC := 44
	22	[4216]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[4216]	GETTABLE 	R1 R1 K9 ; R1 := R1[0x517d4a58]
	24	[4216]	CALL     	R1 1 2 ; R1 := R1()
	25	[4217]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	26	[4217]	MOVE     	R3 R1 ; R3 := R1
	27	[4217]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[4217]	TEST     	R2 1 ; if R2 then PC := 44
	29	[4217]	JMP      	44 ; PC := 44
	30	[4217]	SELF     	R2 R1 K10 ; R3 := R1; R2 := R1[0xc49a5a08]
	31	[4217]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[4217]	TEST     	R2 0 ; if not R2 then PC := 44
	33	[4217]	JMP      	44 ; PC := 44
	34	[4218]	GETGLOBAL	R2 K0 ; R2 := _T
	35	[4218]	SETTABLE 	R2 K11 K12 ; R2["ZarimanEvolution_DioramaMode"] := false
	36	[4219]	GETGLOBAL	R2 K0 ; R2 := _T
	37	[4219]	GETTABLE 	R3 R0 K4 ; R3 := R0["LoadOutId"]
	38	[4219]	SETTABLE 	R2 K13 R3 ; R2["ZarimanEvolution_WeaponSlot"] := R3
	39	[4220]	GETGLOBAL	R2 K14 ; R2 := 0xae91e43b
	40	[4220]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x1fd6abd0]
	41	[4220]	GETGLOBAL	R4 K16 ; R4 := 0x695f3674
	42	[4220]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	43	[4220]	SETGLOBALHASH	R2 K7 ; mEvoMovie := R2
	44	[4224]	GETUPVAL 	R2 U3 ; R2 := U3
	45	[4224]	MOVE     	R3 R0 ; R3 := R0
	46	[4224]	OP_LOADBOOL	R4 0 0 ; R4 := false
	47	[4224]	CALL     	R2 3 1 ; R2(R3,R4)
	48	[4225]	RETURN   	R0 1 ; return 

function #72 <?:4227,4238> (59 instructions, 236 bytes at 000002113226A0E0)
1 param, 9 slots, 4 upvalues, 0 locals, 19 constants, 1 function
	1	[4228]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4228]	GETTABLE 	R2 R0 K1 ; R2 := R0["SpecialIcon"]
	3	[4228]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4228]	TEST     	R1 1 ; if R1 then PC := 11
	5	[4228]	JMP      	11 ; PC := 11
	6	[4229]	GETGLOBAL	R1 K2 ; R1 := mLists
	7	[4229]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	8	[4229]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x101bab76]
	9	[4229]	MOVE     	R2 R0 ; R2 := R0
	10	[4229]	CALL     	R1 2 1 ; R1(R2)
	11	[4231]	GETGLOBAL	R1 K5 ; R1 := 0x25312c9b
	12	[4231]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	13	[4231]	GETTABLE 	R3 R0 K7 ; R3 := R0["mClipName"]
	14	[4231]	LOADK    	R4 K8 ; R4 := ".Back"
	15	[4231]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	16	[4231]	GETUPVAL 	R4 U0 ; R4 := U0
	17	[4231]	GETTABLE 	R4 R4 K9 ; R4 := R4["RESIZE_EASE"]
	18	[4231]	NEWTABLE 	R5 2 0 ; R5 := {}
	19	[4231]	LOADK    	R6 K10 ; R6 := "_height"
	20	[4231]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	21	[4231]	GETUPVAL 	R0 U1 ; R0 := U1
	22	[4231]	MOVE     	R0 R0 ; R0 := R0
	23	[4231]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	24	[4231]	NEWTABLE 	R6 2 0 ; R6 := {}
	25	[4231]	GETUPVAL 	R7 U0 ; R7 := U0
	26	[4231]	GETTABLE 	R7 R7 K11 ; R7 := R7["HEIGHT_SELECTED"]
	27	[4231]	LOADK    	R8 := 1.000000
	28	[4231]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	29	[4231]	GETUPVAL 	R7 U0 ; R7 := U0
	30	[4231]	GETTABLE 	R7 R7 K12 ; R7 := R7["RESIZE_DURATION"]
	31	[4231]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	32	[4233]	GETUPVAL 	R1 U2 ; R1 := U2
	33	[4233]	GETTABLE 	R1 R1 K13 ; R1 := R1["mStatCompare"]
	34	[4233]	GETTABLE 	R1 R1 K14 ; R1 := R1["mUpdateQueued"]
	35	[4233]	EQ       	0 R1 K15 ; if R1 ~= 0.000000 then PC := 40
	36	[4233]	JMP      	40 ; PC := 40
	37	[4234]	GETUPVAL 	R1 U3 ; R1 := U3
	38	[4234]	MOVE     	R2 R0 ; R2 := R0
	39	[4234]	CALL     	R1 2 1 ; R1(R2)
	40	[4237]	GETGLOBAL	R1 K5 ; R1 := 0x25312c9b
	41	[4237]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	42	[4237]	GETTABLE 	R3 R0 K7 ; R3 := R0["mClipName"]
	43	[4237]	LOADK    	R4 K16 ; R4 := ".LevelProgress"
	44	[4237]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	45	[4237]	GETUPVAL 	R4 U0 ; R4 := U0
	46	[4237]	GETTABLE 	R4 R4 K9 ; R4 := R4["RESIZE_EASE"]
	47	[4237]	NEWTABLE 	R5 1 0 ; R5 := {}
	48	[4237]	LOADK    	R6 := 1.000000
	49	[4237]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	50	[4237]	NEWTABLE 	R6 1 0 ; R6 := {}
	51	[4237]	GETUPVAL 	R7 U0 ; R7 := U0
	52	[4237]	GETTABLE 	R7 R7 K11 ; R7 := R7["HEIGHT_SELECTED"]
	53	[4237]	MUL      	R7 R7 K17 ; R7 := R7 * 0.500000
	54	[4237]	SUB      	R7 R7 K18 ; R7 := R7 - 5.000000
	55	[4237]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	56	[4237]	GETUPVAL 	R7 U0 ; R7 := U0
	57	[4237]	GETTABLE 	R7 R7 K12 ; R7 := R7["RESIZE_DURATION"]
	58	[4237]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	59	[4238]	RETURN   	R0 1 ; return 

function #73 <?:4240,4247> (43 instructions, 172 bytes at 000002113226A5E0)
2 params, 9 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[4241]	GETGLOBAL	R2 K0 ; R2 := 0x7f5022cf
	2	[4241]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x41e2ae25]
	3	[4241]	MOVE     	R3 R1 ; R3 := R1
	4	[4241]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[4242]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	6	[4242]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x1a94c9cc]
	7	[4242]	MOVE     	R4 R1 ; R4 := R1
	8	[4242]	LOADK    	R5 := 1.000000
	9	[4242]	SUB      	R6 R2 K3 ; R6 := R2 - 4.000000
	10	[4242]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	11	[4242]	MOVE     	R1 R3 ; R1 := R3
	12	[4243]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	13	[4243]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xf64b7262]
	14	[4243]	MOVE     	R5 R1 ; R5 := R1
	15	[4243]	LOADK    	R6 K6 ; R6 := "Btn"
	16	[4243]	LOADK    	R7 := 10.000000
	17	[4243]	LOADK    	R8 := 15.000000
	18	[4243]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	19	[4244]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	20	[4244]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xf64b7262]
	21	[4244]	MOVE     	R5 R1 ; R5 := R1
	22	[4244]	LOADK    	R6 K6 ; R6 := "Btn"
	23	[4244]	LOADK    	R7 := 9.000000
	24	[4244]	GETGLOBAL	R8 K7 ; R8 := 0x0032441c
	25	[4244]	GETTABLE 	R8 R8 K8 ; R8 := R8["UIColor_White"]
	26	[4244]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	27	[4245]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	28	[4245]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xf64b7262]
	29	[4245]	MOVE     	R5 R1 ; R5 := R1
	30	[4245]	LOADK    	R6 K9 ; R6 := "Outline"
	31	[4245]	LOADK    	R7 := 9.000000
	32	[4245]	GETGLOBAL	R8 K7 ; R8 := 0x0032441c
	33	[4245]	GETTABLE 	R8 R8 K8 ; R8 := R8["UIColor_White"]
	34	[4245]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	35	[4246]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	36	[4246]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xf64b7262]
	37	[4246]	MOVE     	R5 R1 ; R5 := R1
	38	[4246]	LOADK    	R6 K10 ; R6 := "Label"
	39	[4246]	LOADK    	R7 := 36.000000
	40	[4246]	GETGLOBAL	R8 K7 ; R8 := 0x0032441c
	41	[4246]	GETTABLE 	R8 R8 K8 ; R8 := R8["UIColor_White"]
	42	[4246]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	43	[4247]	RETURN   	R0 1 ; return 

function #74 <?:4249,4259> (52 instructions, 208 bytes at 000002113226A8B0)
2 params, 9 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[4250]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4250]	CALL     	R2 1 2 ; R2 := R2()
	3	[4250]	TEST     	R2 1 ; if R2 then PC := 52
	4	[4250]	JMP      	52 ; PC := 52
	5	[4251]	GETGLOBAL	R2 K0 ; R2 := 0x7f5022cf
	6	[4251]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x41e2ae25]
	7	[4251]	MOVE     	R3 R1 ; R3 := R1
	8	[4251]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[4252]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	10	[4252]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x1a94c9cc]
	11	[4252]	MOVE     	R4 R1 ; R4 := R1
	12	[4252]	LOADK    	R5 := 1.000000
	13	[4252]	SUB      	R6 R2 K3 ; R6 := R2 - 4.000000
	14	[4252]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	15	[4252]	MOVE     	R1 R3 ; R1 := R3
	16	[4253]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[4253]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x659d451f]
	18	[4253]	GETGLOBAL	R4 K5 ; R4 := 0x0032441c
	19	[4253]	GETTABLE 	R4 R4 K6 ; R4 := R4["UISound_Focus"]
	20	[4253]	CALL     	R3 2 1 ; R3(R4)
	21	[4254]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	22	[4254]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xf64b7262]
	23	[4254]	MOVE     	R5 R1 ; R5 := R1
	24	[4254]	LOADK    	R6 K9 ; R6 := "Btn"
	25	[4254]	LOADK    	R7 := 10.000000
	26	[4254]	LOADK    	R8 := 90.000000
	27	[4254]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	28	[4255]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	29	[4255]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xf64b7262]
	30	[4255]	MOVE     	R5 R1 ; R5 := R1
	31	[4255]	LOADK    	R6 K9 ; R6 := "Btn"
	32	[4255]	LOADK    	R7 := 9.000000
	33	[4255]	GETGLOBAL	R8 K5 ; R8 := 0x0032441c
	34	[4255]	GETTABLE 	R8 R8 K10 ; R8 := R8["UIColor_Yellow"]
	35	[4255]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	36	[4256]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	37	[4256]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xf64b7262]
	38	[4256]	MOVE     	R5 R1 ; R5 := R1
	39	[4256]	LOADK    	R6 K11 ; R6 := "Outline"
	40	[4256]	LOADK    	R7 := 9.000000
	41	[4256]	GETGLOBAL	R8 K5 ; R8 := 0x0032441c
	42	[4256]	GETTABLE 	R8 R8 K10 ; R8 := R8["UIColor_Yellow"]
	43	[4256]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	44	[4257]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	45	[4257]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xf64b7262]
	46	[4257]	MOVE     	R5 R1 ; R5 := R1
	47	[4257]	LOADK    	R6 K12 ; R6 := "Label"
	48	[4257]	LOADK    	R7 := 36.000000
	49	[4257]	GETGLOBAL	R8 K5 ; R8 := 0x0032441c
	50	[4257]	GETTABLE 	R8 R8 K13 ; R8 := R8["UIColor_DarkGrey"]
	51	[4257]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	52	[4259]	RETURN   	R0 1 ; return 

function #75 <?:4261,4272> (71 instructions, 284 bytes at 000002113226ABF0)
3 params, 14 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[4262]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	2	[4262]	SELF     	R3 R3 K1 ; R4 := R3; R3 := R3[0xaade900e]
	3	[4262]	MOVE     	R5 R0 ; R5 := R0
	4	[4262]	LOADK    	R6 := 11.000000
	5	[4262]	OP_LOADBOOL	R7 1 0 ; R7 := true
	6	[4262]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	7	[4263]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	8	[4263]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x20b98db3]
	9	[4263]	MOVE     	R5 R0 ; R5 := R0
	10	[4263]	LOADK    	R6 K3 ; R6 := ".Label.text"
	11	[4263]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	12	[4263]	MOVE     	R6 R1 ; R6 := R1
	13	[4263]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	14	[4264]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	15	[4264]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x91a24e4b]
	16	[4264]	MOVE     	R5 R0 ; R5 := R0
	17	[4264]	LOADK    	R6 K5 ; R6 := ".Label"
	18	[4264]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	19	[4264]	LOADK    	R6 := 33.000000
	20	[4264]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	21	[4265]	SUB      	R4 R2 R3 ; R4 := R2 - R3
	22	[4265]	MUL      	R4 R4 K6 ; R4 := R4 * 0.500000
	23	[4267]	GETGLOBAL	R5 K7 ; R5 := 0x5bced4c4
	24	[4267]	GETTABLE 	R5 R5 K8 ; R5 := R5[0xb62ecfe0]
	25	[4267]	SUB      	R6 R4 K9 ; R6 := R4 - 40.000000
	26	[4267]	LOADK    	R7 := 2.000000
	27	[4267]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	28	[4267]	MOVE     	R4 R5 ; R4 := R5
	29	[4268]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	30	[4268]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf64b7262]
	31	[4268]	MOVE     	R7 R0 ; R7 := R0
	32	[4268]	LOADK    	R8 K11 ; R8 := "LineLeft"
	33	[4268]	LOADK    	R9 := 12.000000
	34	[4268]	MOVE     	R10 R4 ; R10 := R4
	35	[4268]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	36	[4269]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	37	[4269]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf64b7262]
	38	[4269]	MOVE     	R7 R0 ; R7 := R0
	39	[4269]	LOADK    	R8 K12 ; R8 := "LineLeftCap"
	40	[4269]	LOADK    	R9 := 0.000000
	41	[4269]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	42	[4269]	SELF     	R10 R10 K4 ; R11 := R10; R10 := R10[0x91a24e4b]
	43	[4269]	MOVE     	R12 R0 ; R12 := R0
	44	[4269]	LOADK    	R13 K13 ; R13 := ".LineLeft"
	45	[4269]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	46	[4269]	LOADK    	R13 := 0.000000
	47	[4269]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	48	[4269]	ADD      	R10 R10 R4 ; R10 := R10 + R4
	49	[4269]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	50	[4270]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	51	[4270]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf64b7262]
	52	[4270]	MOVE     	R7 R0 ; R7 := R0
	53	[4270]	LOADK    	R8 K14 ; R8 := "LineRight"
	54	[4270]	LOADK    	R9 := 12.000000
	55	[4270]	MOVE     	R10 R4 ; R10 := R4
	56	[4270]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	57	[4271]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	58	[4271]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf64b7262]
	59	[4271]	MOVE     	R7 R0 ; R7 := R0
	60	[4271]	LOADK    	R8 K15 ; R8 := "LineRightCap"
	61	[4271]	LOADK    	R9 := 0.000000
	62	[4271]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	63	[4271]	SELF     	R10 R10 K4 ; R11 := R10; R10 := R10[0x91a24e4b]
	64	[4271]	MOVE     	R12 R0 ; R12 := R0
	65	[4271]	LOADK    	R13 K16 ; R13 := ".LineRight"
	66	[4271]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	67	[4271]	LOADK    	R13 := 0.000000
	68	[4271]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	69	[4271]	SUB      	R10 R10 R4 ; R10 := R10 - R4
	70	[4271]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	71	[4272]	RETURN   	R0 1 ; return 

function #76 <?:4274,4280> (33 instructions, 132 bytes at 000002113226B000)
0 params, 3 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[4275]	GETGLOBAL	R0 K0 ; R0 := mLists
	2	[4275]	GETTABLE 	R0 R0 K1 ; R0 := R0["mLoadOutList"]
	3	[4275]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xca30dfb6]
	4	[4275]	GETGLOBAL	R2 K0 ; R2 := mLists
	5	[4275]	GETTABLE 	R2 R2 K1 ; R2 := R2["mLoadOutList"]
	6	[4275]	GETTABLE 	R2 R2 K3 ; R2 := R2["PetSlotId"]
	7	[4275]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	8	[4276]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	9	[4276]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	10	[4276]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[4276]	TEST     	R1 1 ; if R1 then PC := 18
	12	[4276]	JMP      	18 ; PC := 18
	13	[4276]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	14	[4276]	MOVE     	R2 R0 ; R2 := R0
	15	[4276]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[4276]	TEST     	R1 0 ; if not R1 then PC := 20
	17	[4276]	JMP      	20 ; PC := 20
	18	[4277]	OP_LOADBOOL	R1 0 0 ; R1 := false
	19	[4277]	RETURN   	R1 2 ; return R1 
	20	[4279]	GETTABLE 	R1 R0 K6 ; R1 := R0["UID"]
	21	[4279]	GETGLOBAL	R2 K7 ; R2 := 0x6c97a788
	22	[4279]	GETTABLE 	R2 R2 K8 ; R2 := R2["InvalidItemID"]
	23	[4279]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 30
	24	[4279]	JMP      	30 ; PC := 30
	25	[4279]	GETGLOBAL	R1 K5 ; R1 := 0x25d99d89
	26	[4279]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x3c6b0324]
	27	[4279]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[4279]	NOT      	R1 R1 ; R1 := not R1
	29	[4279]	JMP      	32 ; PC := 32
	30	[4279]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 31
	31	[4279]	OP_LOADBOOL	R1 1 0 ; R1 := true
	32	[4279]	RETURN   	R1 2 ; return R1 
	33	[4280]	RETURN   	R0 1 ; return 

function #77 <?:4282,4291> (35 instructions, 140 bytes at 000002113226B2C0)
0 params, 3 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[4283]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4283]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[4283]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4283]	TEST     	R0 1 ; if R0 then PC := 13
	5	[4283]	JMP      	13 ; PC := 13
	6	[4283]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4283]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	8	[4283]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xa1c390fe]
	9	[4283]	CALL     	R1 2 0 ; R1,... := R1(R2)
	10	[4283]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	11	[4283]	TEST     	R0 0 ; if not R0 then PC := 15
	12	[4283]	JMP      	15 ; PC := 15
	13	[4284]	OP_LOADBOOL	R0 0 0 ; R0 := false
	14	[4284]	RETURN   	R0 2 ; return R0 
	15	[4286]	GETGLOBAL	R0 K3 ; R0 := mLists
	16	[4286]	GETTABLE 	R0 R0 K4 ; R0 := R0["mLoadOutList"]
	17	[4286]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xca30dfb6]
	18	[4286]	GETGLOBAL	R2 K3 ; R2 := mLists
	19	[4286]	GETTABLE 	R2 R2 K4 ; R2 := R2["mLoadOutList"]
	20	[4286]	GETTABLE 	R2 R2 K6 ; R2 := R2["FocusSlotId"]
	21	[4286]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	22	[4287]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	23	[4287]	MOVE     	R2 R0 ; R2 := R0
	24	[4287]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[4287]	TEST     	R1 0 ; if not R1 then PC := 29
	26	[4287]	JMP      	29 ; PC := 29
	27	[4288]	OP_LOADBOOL	R1 0 0 ; R1 := false
	28	[4288]	RETURN   	R1 2 ; return R1 
	29	[4290]	GETTABLE 	R1 R0 K7 ; R1 := R0["SubTitle"]
	30	[4290]	EQ       	0 R1 K8 ; if R1 ~= nil then PC := 33
	31	[4290]	JMP      	33 ; PC := 33
	32	[4290]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 33
	33	[4290]	OP_LOADBOOL	R1 1 0 ; R1 := true
	34	[4290]	RETURN   	R1 2 ; return R1 
	35	[4291]	RETURN   	R0 1 ; return 

function #78 <?:4293,4345> (159 instructions, 636 bytes at 000002113226B570)
1 param, 14 slots, 2 upvalues, 0 locals, 32 constants, 0 functions
	1	[4294]	GETGLOBAL	R1 K0 ; R1 := mLists
	2	[4294]	GETTABLE 	R1 R1 K1 ; R1 := R1["mLoadOutList"]
	3	[4294]	GETTABLE 	R1 R1 K2 ; R1 := R1["SuitSlotId"]
	4	[4294]	EQ       	0 R1 K3 ; if R1 ~= nil then PC := 8
	5	[4294]	JMP      	8 ; PC := 8
	6	[4295]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[4295]	RETURN   	R1 2 ; return R1 
	8	[4298]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[4298]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x06d055f9]
	10	[4298]	EQ       	1 R0 K6 ; if R0 == 5.000000 then PC := 13
	11	[4298]	JMP      	13 ; PC := 13
	12	[4298]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 13
	13	[4298]	OP_LOADBOOL	R2 1 0 ; R2 := true
	14	[4298]	GETGLOBAL	R3 K0 ; R3 := mLists
	15	[4298]	GETTABLE 	R3 R3 K1 ; R3 := R3["mLoadOutList"]
	16	[4298]	GETTABLE 	R3 R3 K7 ; R3 := R3["SpecialASlotId"]
	17	[4298]	GETGLOBAL	R4 K0 ; R4 := mLists
	18	[4298]	GETTABLE 	R4 R4 K1 ; R4 := R4["mLoadOutList"]
	19	[4298]	GETTABLE 	R4 R4 K8 ; R4 := R4["SpecialBSlotId"]
	20	[4298]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	21	[4299]	GETGLOBAL	R2 K0 ; R2 := mLists
	22	[4299]	GETTABLE 	R2 R2 K1 ; R2 := R2["mLoadOutList"]
	23	[4299]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0xca30dfb6]
	24	[4299]	MOVE     	R4 R1 ; R4 := R1
	25	[4299]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	26	[4300]	GETGLOBAL	R3 K10 ; R3 := 0x7b998233
	27	[4300]	MOVE     	R4 R2 ; R4 := R2
	28	[4300]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[4300]	TEST     	R3 1 ; if R3 then PC := 40
	30	[4300]	JMP      	40 ; PC := 40
	31	[4300]	GETTABLE 	R3 R2 K11 ; R3 := R2["OwnedItems"]
	32	[4300]	LEN      	R3 R3 ; R3 := # R3
	33	[4300]	LE       	1 R3 K12 ; if R3 <= 0.000000 then PC := 40
	34	[4300]	JMP      	40 ; PC := 40
	35	[4300]	GETGLOBAL	R3 K10 ; R3 := 0x7b998233
	36	[4300]	GETTABLE 	R4 R2 K13 ; R4 := R2["EquippedItem"]
	37	[4300]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[4300]	TEST     	R3 0 ; if not R3 then PC := 42
	39	[4300]	JMP      	42 ; PC := 42
	40	[4301]	OP_LOADBOOL	R3 0 0 ; R3 := false
	41	[4301]	RETURN   	R3 2 ; return R3 
	42	[4304]	GETUPVAL 	R3 U1 ; R3 := U1
	43	[4304]	GETTABLE 	R3 R3 K14 ; R3 := R3["Current"]
	44	[4305]	LOADNIL  	R4 R4 ; R4 := nil
	45	[4306]	EQ       	0 R3 K15 ; if R3 ~= 3.000000 then PC := 56
	46	[4306]	JMP      	56 ; PC := 56
	47	[4307]	GETGLOBAL	R5 K0 ; R5 := mLists
	48	[4307]	GETTABLE 	R5 R5 K1 ; R5 := R5["mLoadOutList"]
	49	[4307]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0xca30dfb6]
	50	[4307]	GETGLOBAL	R7 K0 ; R7 := mLists
	51	[4307]	GETTABLE 	R7 R7 K1 ; R7 := R7["mLoadOutList"]
	52	[4307]	GETTABLE 	R7 R7 K16 ; R7 := R7["MechSuitSlotId"]
	53	[4307]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	54	[4307]	MOVE     	R4 R5 ; R4 := R5
	55	[4307]	JMP      	64 ; PC := 64
	56	[4309]	GETGLOBAL	R5 K0 ; R5 := mLists
	57	[4309]	GETTABLE 	R5 R5 K1 ; R5 := R5["mLoadOutList"]
	58	[4309]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0xca30dfb6]
	59	[4309]	GETGLOBAL	R7 K0 ; R7 := mLists
	60	[4309]	GETTABLE 	R7 R7 K1 ; R7 := R7["mLoadOutList"]
	61	[4309]	GETTABLE 	R7 R7 K2 ; R7 := R7["SuitSlotId"]
	62	[4309]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	63	[4309]	MOVE     	R4 R5 ; R4 := R5
	64	[4312]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 68
	65	[4312]	JMP      	68 ; PC := 68
	66	[4313]	OP_LOADBOOL	R5 0 0 ; R5 := false
	67	[4313]	RETURN   	R5 2 ; return R5 
	68	[4316]	GETGLOBAL	R5 K17 ; R5 := 0xb009bbc6
	69	[4316]	GETTABLE 	R6 R4 K13 ; R6 := R4["EquippedItem"]
	70	[4316]	GETTABLE 	R6 R6 K18 ; R6 := R6["mItemType"]
	71	[4316]	CALL     	R5 2 2 ; R5 := R5(R6)
	72	[4317]	GETGLOBAL	R6 K10 ; R6 := 0x7b998233
	73	[4317]	MOVE     	R7 R5 ; R7 := R5
	74	[4317]	CALL     	R6 2 2 ; R6 := R6(R7)
	75	[4317]	TEST     	R6 0 ; if not R6 then PC := 79
	76	[4317]	JMP      	79 ; PC := 79
	77	[4318]	OP_LOADBOOL	R6 0 0 ; R6 := false
	78	[4318]	RETURN   	R6 2 ; return R6 
	79	[4321]	SELF     	R6 R5 K19 ; R7 := R5; R6 := R5[0x4a5d8c86]
	80	[4321]	MOVE     	R8 R0 ; R8 := R0
	81	[4321]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	82	[4322]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	83	[4322]	GETTABLE 	R8 R6 K18 ; R8 := R6["mItemType"]
	84	[4322]	CALL     	R7 2 2 ; R7 := R7(R8)
	85	[4322]	TEST     	R7 0 ; if not R7 then PC := 89
	86	[4322]	JMP      	89 ; PC := 89
	87	[4323]	OP_LOADBOOL	R7 0 0 ; R7 := false
	88	[4323]	RETURN   	R7 2 ; return R7 
	89	[4327]	SELF     	R7 R5 K20 ; R8 := R5; R7 := R5[0xf2deaf69]
	90	[4327]	GETGLOBAL	R9 K21 ; R9 := 0x6dcacb87
	91	[4327]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	92	[4327]	TEST     	R7 1 ; if R7 then PC := 129
	93	[4327]	JMP      	129 ; PC := 129
	94	[4327]	GETTABLE 	R7 R6 K22 ; R7 := R6["mAbilityIndex"]
	95	[4327]	SELF     	R8 R5 K23 ; R9 := R5; R8 := R5[0x9352eaa9]
	96	[4327]	CALL     	R8 2 2 ; R8 := R8(R9)
	97	[4327]	LT       	0 R7 R8 ; if R7 >= R8 then PC := 129
	98	[4327]	JMP      	129 ; PC := 129
	99	[4328]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	100	[4328]	MOVE     	R8 R4 ; R8 := R4
	101	[4328]	CALL     	R7 2 2 ; R7 := R7(R8)
	102	[4328]	TEST     	R7 1 ; if R7 then PC := 129
	103	[4328]	JMP      	129 ; PC := 129
	104	[4328]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	105	[4328]	GETTABLE 	R8 R4 K13 ; R8 := R4["EquippedItem"]
	106	[4328]	CALL     	R7 2 2 ; R7 := R7(R8)
	107	[4328]	TEST     	R7 1 ; if R7 then PC := 129
	108	[4328]	JMP      	129 ; PC := 129
	109	[4328]	GETTABLE 	R7 R4 K13 ; R7 := R4["EquippedItem"]
	110	[4328]	GETTABLE 	R7 R7 K24 ; R7 := R7["mPolarized"]
	111	[4328]	LE       	0 R7 K12 ; if R7 > 0.000000 then PC := 129
	112	[4328]	JMP      	129 ; PC := 129
	113	[4329]	SELF     	R7 R5 K25 ; R8 := R5; R7 := R5[0x798d990e]
	114	[4329]	GETTABLE 	R9 R6 K22 ; R9 := R6["mAbilityIndex"]
	115	[4329]	LOADK    	R10 := 1.000000
	116	[4329]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	117	[4330]	GETTABLE 	R8 R4 K13 ; R8 := R4["EquippedItem"]
	118	[4330]	GETTABLE 	R8 R8 K26 ; R8 := R8["mXP"]
	119	[4330]	GETGLOBAL	R9 K27 ; R9 := 0xa94df70b
	120	[4330]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x1c1ded06]
	121	[4330]	MOVE     	R11 R7 ; R11 := R7
	122	[4330]	SELF     	R12 R5 K29 ; R13 := R5; R12 := R5[0xcde10c4a]
	123	[4330]	CALL     	R12 2 0 ; R12,... := R12(R13)
	124	[4330]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	125	[4330]	LT       	0 R8 R9 ; if R8 >= R9 then PC := 129
	126	[4330]	JMP      	129 ; PC := 129
	127	[4332]	OP_LOADBOOL	R8 0 0 ; R8 := false
	128	[4332]	RETURN   	R8 2 ; return R8 
	129	[4337]	SELF     	R8 R5 K20 ; R9 := R5; R8 := R5[0xf2deaf69]
	130	[4337]	GETGLOBAL	R10 K30 ; R10 := 0xf773e9d4
	131	[4337]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	132	[4337]	TEST     	R8 0 ; if not R8 then PC := 157
	133	[4337]	JMP      	157 ; PC := 157
	134	[4337]	GETGLOBAL	R8 K0 ; R8 := mLists
	135	[4337]	GETTABLE 	R8 R8 K1 ; R8 := R8["mLoadOutList"]
	136	[4337]	GETTABLE 	R8 R8 K31 ; R8 := R8["MeleeSlotId"]
	137	[4337]	EQ       	1 R8 K3 ; if R8 == nil then PC := 157
	138	[4337]	JMP      	157 ; PC := 157
	139	[4338]	GETGLOBAL	R8 K0 ; R8 := mLists
	140	[4338]	GETTABLE 	R8 R8 K1 ; R8 := R8["mLoadOutList"]
	141	[4338]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0xca30dfb6]
	142	[4338]	GETGLOBAL	R10 K0 ; R10 := mLists
	143	[4338]	GETTABLE 	R10 R10 K1 ; R10 := R10["mLoadOutList"]
	144	[4338]	GETTABLE 	R10 R10 K31 ; R10 := R10["MeleeSlotId"]
	145	[4338]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	146	[4339]	GETTABLE 	R9 R8 K13 ; R9 := R8["EquippedItem"]
	147	[4339]	EQ       	1 R9 K3 ; if R9 == nil then PC := 157
	148	[4339]	JMP      	157 ; PC := 157
	149	[4339]	GETGLOBAL	R9 K10 ; R9 := 0x7b998233
	150	[4339]	GETTABLE 	R10 R8 K13 ; R10 := R8["EquippedItem"]
	151	[4339]	GETTABLE 	R10 R10 K18 ; R10 := R10["mItemType"]
	152	[4339]	CALL     	R9 2 2 ; R9 := R9(R10)
	153	[4339]	TEST     	R9 1 ; if R9 then PC := 157
	154	[4339]	JMP      	157 ; PC := 157
	155	[4340]	OP_LOADBOOL	R9 0 0 ; R9 := false
	156	[4340]	RETURN   	R9 2 ; return R9 
	157	[4344]	OP_LOADBOOL	R9 1 0 ; R9 := true
	158	[4344]	RETURN   	R9 2 ; return R9 
	159	[4345]	RETURN   	R0 1 ; return 

function #79 <?:4347,4372> (80 instructions, 320 bytes at 000002113226BDB0)
0 params, 7 slots, 2 upvalues, 0 locals, 29 constants, 1 function
	1	[4348]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4348]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[4348]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xae6791ba]
	4	[4348]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[4348]	LOADK    	R3 K3 ; R3 := "StatContainer.List.StatRow"
	6	[4348]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	7	[4348]	SETTABLE 	R0 K0 R1 ; R0["mStatCompare"] := R1
	8	[4349]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[4349]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompare"]
	10	[4349]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	11	[4349]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x91a24e4b]
	12	[4349]	LOADK    	R3 K6 ; R3 := "StatContainer"
	13	[4349]	LOADK    	R4 := 1.000000
	14	[4349]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	15	[4349]	SETTABLE 	R0 K4 R1 ; R0["mContainerYPos"] := R1
	16	[4350]	GETUPVAL 	R0 U0 ; R0 := U0
	17	[4350]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompare"]
	18	[4350]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	19	[4350]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x91a24e4b]
	20	[4350]	LOADK    	R3 K8 ; R3 := "StatContainer.List"
	21	[4350]	LOADK    	R4 := 1.000000
	22	[4350]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	23	[4350]	SETTABLE 	R0 K7 R1 ; R0["mInitListYPos"] := R1
	24	[4351]	GETUPVAL 	R0 U0 ; R0 := U0
	25	[4351]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompare"]
	26	[4351]	SETTABLE 	R0 K9 K10 ; R0["mListYPos"] := 0.000000
	27	[4352]	GETUPVAL 	R0 U0 ; R0 := U0
	28	[4352]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompare"]
	29	[4352]	SETTABLE 	R0 K11 K10 ; R0["mRawHeight"] := 0.000000
	30	[4353]	GETUPVAL 	R0 U0 ; R0 := U0
	31	[4353]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompare"]
	32	[4353]	SETTABLE 	R0 K12 K10 ; R0["mListHeight"] := 0.000000
	33	[4354]	GETUPVAL 	R0 U0 ; R0 := U0
	34	[4354]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompare"]
	35	[4354]	SETTABLE 	R0 K13 K14 ; R0["mMaxHeight"] := 500.000000
	36	[4357]	GETUPVAL 	R0 U0 ; R0 := U0
	37	[4357]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompare"]
	38	[4357]	SETTABLE 	R0 K15 K10 ; R0["mUpdateQueued"] := 0.000000
	39	[4359]	GETGLOBAL	R0 K16 ; R0 := 0x2d0fad09
	40	[4359]	LOADK    	R1 K17 ; R1 := "EE.Interface.Components.ScrollBar"
	41	[4359]	CALL     	R0 2 2 ; R0 := R0(R1)
	42	[4360]	GETUPVAL 	R1 U0 ; R1 := U0
	43	[4360]	GETTABLE 	R2 R0 K19 ; R2 := R0[0x3b3ea08c]
	44	[4360]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	45	[4360]	LOADK    	R4 K20 ; R4 := "StatContainer.ScrollBarContainer.ScrollBar"
	46	[4360]	LOADK    	R5 := 100.000000
	47	[4360]	LOADK    	R6 := 0.500000
	48	[4360]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	49	[4360]	SETTABLE 	R1 K18 R2 ; R1[0x80100e46] := R2
	50	[4361]	GETUPVAL 	R1 U0 ; R1 := U0
	51	[4361]	GETTABLE 	R1 R1 K18 ; R1 := R1["mStatCompareScrollBar"]
	52	[4364]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	53	[4364]	GETUPVAL 	R0 U0 ; R0 := U0
	54	[4364]	SETTABLE 	R1 K21 R2 ; R1["mScrollValueChangedCallback"] := R2
	55	[4365]	GETUPVAL 	R1 U0 ; R1 := U0
	56	[4365]	GETTABLE 	R1 R1 K18 ; R1 := R1["mStatCompareScrollBar"]
	57	[4365]	SETTABLE 	R1 K22 K10 ; R1["mRightStickScrollYValue"] := 0.000000
	58	[4366]	GETUPVAL 	R1 U0 ; R1 := U0
	59	[4366]	GETTABLE 	R1 R1 K18 ; R1 := R1["mStatCompareScrollBar"]
	60	[4366]	SETTABLE 	R1 K23 K24 ; R1["mEnableSmoothScroll"] := true
	61	[4367]	GETUPVAL 	R1 U0 ; R1 := U0
	62	[4367]	GETTABLE 	R1 R1 K18 ; R1 := R1["mStatCompareScrollBar"]
	63	[4367]	SELF     	R1 R1 K25 ; R2 := R1; R1 := R1[0x0077d753]
	64	[4367]	OP_LOADBOOL	R3 0 0 ; R3 := false
	65	[4367]	CALL     	R1 3 1 ; R1(R2,R3)
	66	[4368]	GETUPVAL 	R1 U0 ; R1 := U0
	67	[4368]	GETTABLE 	R1 R1 K18 ; R1 := R1["mStatCompareScrollBar"]
	68	[4368]	SELF     	R1 R1 K26 ; R2 := R1; R1 := R1[0xe91c55ec]
	69	[4368]	CALL     	R1 2 1 ; R1(R2)
	70	[4369]	GETUPVAL 	R1 U0 ; R1 := U0
	71	[4369]	GETTABLE 	R1 R1 K18 ; R1 := R1["mStatCompareScrollBar"]
	72	[4369]	SELF     	R1 R1 K27 ; R2 := R1; R1 := R1[0x687ae094]
	73	[4369]	CALL     	R1 2 1 ; R1(R2)
	74	[4371]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	75	[4371]	SELF     	R1 R1 K28 ; R2 := R1; R1 := R1[0xaade900e]
	76	[4371]	LOADK    	R3 K6 ; R3 := "StatContainer"
	77	[4371]	LOADK    	R4 := 11.000000
	78	[4371]	OP_LOADBOOL	R5 0 0 ; R5 := false
	79	[4371]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	80	[4372]	RETURN   	R0 1 ; return 

function #80 <?:4374,4391> (38 instructions, 152 bytes at 000002113226C4B0)
0 params, 6 slots, 1 upvalue, 0 locals, 14 constants, 1 function
	1	[4375]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[4375]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.Components.SearchBox"
	3	[4375]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4376]	GETTABLE 	R1 R0 K2 ; R1 := R0[0xae6791ba]
	5	[4376]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	6	[4376]	LOADK    	R3 K4 ; R3 := "SearchBox"
	7	[4376]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	8	[4376]	SETUPVAL 	R1 U0 ; U0 := R1
	9	[4377]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[4385]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	11	[4385]	SETTABLE 	R1 K5 R2 ; R1[0x00000000] := R2
	12	[4386]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4386]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x687ae094]
	14	[4386]	CALL     	R1 2 1 ; R1(R2)
	15	[4387]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[4387]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x368ad758]
	17	[4387]	OP_LOADBOOL	R3 0 0 ; R3 := false
	18	[4387]	CALL     	R1 3 1 ; R1(R2,R3)
	19	[4388]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	20	[4388]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xaade900e]
	21	[4388]	LOADK    	R3 K9 ; R3 := "SearchSortBg"
	22	[4388]	LOADK    	R4 := 11.000000
	23	[4388]	OP_LOADBOOL	R5 0 0 ; R5 := false
	24	[4388]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	25	[4389]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	26	[4389]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x67bc869f]
	27	[4389]	LOADK    	R3 K11 ; R3 := "SearchSortBg.Bg"
	28	[4389]	LOADK    	R4 := 9.000000
	29	[4389]	GETGLOBAL	R5 K12 ; R5 := 0x0032441c
	30	[4389]	GETTABLE 	R5 R5 K13 ; R5 := R5["UIColor_DarkGrey"]
	31	[4389]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	32	[4390]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	33	[4390]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x67bc869f]
	34	[4390]	LOADK    	R3 K11 ; R3 := "SearchSortBg.Bg"
	35	[4390]	LOADK    	R4 := 10.000000
	36	[4390]	LOADK    	R5 := 50.000000
	37	[4390]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	38	[4391]	RETURN   	R0 1 ; return 

function #81 <?:4393,4405> (29 instructions, 116 bytes at 0000021113BB18B0)
2 params, 9 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[4394]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x5ef3783b]
	2	[4394]	MOVE     	R4 R1 ; R4 := R1
	3	[4394]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	4	[4395]	LOADNIL  	R3 R3 ; R3 := nil
	5	[4396]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[4397]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	7	[4397]	MOVE     	R6 R2 ; R6 := R2
	8	[4397]	CALL     	R5 2 2 ; R5 := R5(R6)
	9	[4397]	TEST     	R5 1 ; if R5 then PC := 26
	10	[4397]	JMP      	26 ; PC := 26
	11	[4398]	GETUPVAL 	R5 U0 ; R5 := U0
	12	[4398]	GETTABLE 	R6 R2 K2 ; R6 := R2["mItemType"]
	13	[4398]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[4399]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	15	[4399]	MOVE     	R7 R5 ; R7 := R5
	16	[4399]	CALL     	R6 2 2 ; R6 := R6(R7)
	17	[4399]	TEST     	R6 1 ; if R6 then PC := 26
	18	[4399]	JMP      	26 ; PC := 26
	19	[4400]	GETUPVAL 	R6 U1 ; R6 := U1
	20	[4400]	GETTABLE 	R6 R6 K3 ; R6 := R6[0x056dcf06]
	21	[4400]	MOVE     	R7 R5 ; R7 := R5
	22	[4400]	OP_LOADBOOL	R8 1 0 ; R8 := true
	23	[4400]	CALL     	R6 3 3 ; R6,R7 := R6(R7,R8)
	24	[4400]	MOVE     	R4 R7 ; R4 := R7
	25	[4400]	MOVE     	R3 R6 ; R3 := R6
	26	[4404]	MOVE     	R6 R3 ; R6 := R3
	27	[4404]	MOVE     	R7 R4 ; R7 := R4
	28	[4404]	RETURN   	R6 3 ; return R6, R7 
	29	[4405]	RETURN   	R0 1 ; return 

function #82 <?:4407,4484> (129 instructions, 516 bytes at 0000021113BB1AB0)
1 param, 6 slots, 0 upvalues, 0 locals, 25 constants, 0 functions
	1	[4408]	GETTABLE 	R1 R0 K0 ; R1 := R0["Type"]
	2	[4409]	GETTABLE 	R2 R0 K1 ; R2 := R0["Customization"]
	3	[4409]	TEST     	R2 0 ; if not R2 then PC := 9
	4	[4409]	JMP      	9 ; PC := 9
	5	[4409]	GETTABLE 	R2 R0 K1 ; R2 := R0["Customization"]
	6	[4409]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x2540510f]
	7	[4409]	LOADK    	R4 := 0.000000
	8	[4409]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[4410]	NEWTABLE 	R3 0 0 ; R3 := {}
	10	[4414]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	11	[4414]	LOADK    	R5 K5 ; R5 := "/Lotus/Powersuits/Berserker/BerserkerMelee"
	12	[4414]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[4414]	EQ       	1 R1 R4 ; if R1 == R4 then PC := 128
	14	[4414]	JMP      	128 ; PC := 128
	15	[4415]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	16	[4415]	LOADK    	R5 K6 ; R5 := "/Lotus/Powersuits/Berserker/BerserkerMeleePrime"
	17	[4415]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[4415]	EQ       	1 R1 R4 ; if R1 == R4 then PC := 128
	19	[4415]	JMP      	128 ; PC := 128
	20	[4416]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	21	[4416]	LOADK    	R5 K7 ; R5 := "/Lotus/Powersuits/Pacifist/PacifistFist"
	22	[4416]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[4416]	EQ       	1 R1 R4 ; if R1 == R4 then PC := 128
	24	[4416]	JMP      	128 ; PC := 128
	25	[4417]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	26	[4417]	LOADK    	R5 K8 ; R5 := "/Lotus/Powersuits/Wraith/ReaperMeleeWeapon"
	27	[4417]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[4417]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 31
	29	[4417]	JMP      	31 ; PC := 31
	30	[4418]	JMP      	128 ; PC := 128
	31	[4422]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	32	[4422]	LOADK    	R5 K9 ; R5 := "/Lotus/Upgrades/Skins/Cowgirl/MesaDeluxeArmGunSkin"
	33	[4422]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[4422]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 40
	35	[4422]	JMP      	40 ; PC := 40
	36	[4423]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	37	[4424]	SETTABLE 	R3 K12 K11 ; R3[2.000000] := true
	38	[4425]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	39	[4425]	JMP      	128 ; PC := 128
	40	[4426]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	41	[4426]	LOADK    	R5 K14 ; R5 := "/Lotus/Upgrades/Skins/Cowgirl/MesaDeluxeV2ArmGunSkin"
	42	[4426]	CALL     	R4 2 2 ; R4 := R4(R5)
	43	[4426]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 52
	44	[4426]	JMP      	52 ; PC := 52
	45	[4427]	SETTABLE 	R3 K15 K11 ; R3[0.000000] := true
	46	[4428]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	47	[4429]	SETTABLE 	R3 K12 K11 ; R3[2.000000] := true
	48	[4430]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	49	[4431]	SETTABLE 	R3 K16 K11 ; R3[4.000000] := true
	50	[4432]	SETTABLE 	R3 K17 K11 ; R3[5.000000] := true
	51	[4432]	JMP      	128 ; PC := 128
	52	[4433]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	53	[4433]	LOADK    	R5 K18 ; R5 := "/Lotus/Powersuits/Cowgirl/SlingerPistols"
	54	[4433]	CALL     	R4 2 2 ; R4 := R4(R5)
	55	[4433]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 61
	56	[4433]	JMP      	61 ; PC := 61
	57	[4434]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	58	[4435]	SETTABLE 	R3 K16 K11 ; R3[4.000000] := true
	59	[4436]	SETTABLE 	R3 K17 K11 ; R3[5.000000] := true
	60	[4436]	JMP      	128 ; PC := 128
	61	[4437]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	62	[4437]	LOADK    	R5 K19 ; R5 := "/Lotus/Powersuits/Cowgirl/PrimeSlingerPistols"
	63	[4437]	CALL     	R4 2 2 ; R4 := R4(R5)
	64	[4437]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 72
	65	[4437]	JMP      	72 ; PC := 72
	66	[4438]	SETTABLE 	R3 K15 K11 ; R3[0.000000] := true
	67	[4439]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	68	[4440]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	69	[4441]	SETTABLE 	R3 K16 K11 ; R3[4.000000] := true
	70	[4442]	SETTABLE 	R3 K17 K11 ; R3[5.000000] := true
	71	[4442]	JMP      	128 ; PC := 128
	72	[4445]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	73	[4445]	LOADK    	R5 K20 ; R5 := "/Lotus/Upgrades/Skins/MonkeyKing/WukongDeluxeStaffSkin"
	74	[4445]	CALL     	R4 2 2 ; R4 := R4(R5)
	75	[4445]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 82
	76	[4445]	JMP      	82 ; PC := 82
	77	[4446]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	78	[4447]	SETTABLE 	R3 K12 K11 ; R3[2.000000] := true
	79	[4448]	SETTABLE 	R3 K16 K11 ; R3[4.000000] := true
	80	[4449]	SETTABLE 	R3 K17 K11 ; R3[5.000000] := true
	81	[4449]	JMP      	128 ; PC := 128
	82	[4450]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	83	[4450]	LOADK    	R5 K21 ; R5 := "/Lotus/Powersuits/MonkeyKing/MonkeyKingStaff"
	84	[4450]	CALL     	R4 2 2 ; R4 := R4(R5)
	85	[4450]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 93
	86	[4450]	JMP      	93 ; PC := 93
	87	[4451]	SETTABLE 	R3 K15 K11 ; R3[0.000000] := true
	88	[4452]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	89	[4453]	SETTABLE 	R3 K12 K11 ; R3[2.000000] := true
	90	[4454]	SETTABLE 	R3 K16 K11 ; R3[4.000000] := true
	91	[4455]	SETTABLE 	R3 K17 K11 ; R3[5.000000] := true
	92	[4455]	JMP      	128 ; PC := 128
	93	[4456]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	94	[4456]	LOADK    	R5 K22 ; R5 := "/Lotus/Powersuits/MonkeyKing/WukongPrimeStaff"
	95	[4456]	CALL     	R4 2 2 ; R4 := R4(R5)
	96	[4456]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 103
	97	[4456]	JMP      	103 ; PC := 103
	98	[4457]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	99	[4458]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	100	[4459]	SETTABLE 	R3 K16 K11 ; R3[4.000000] := true
	101	[4460]	SETTABLE 	R3 K17 K11 ; R3[5.000000] := true
	102	[4460]	JMP      	128 ; PC := 128
	103	[4463]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	104	[4463]	LOADK    	R5 K23 ; R5 := "/Lotus/Upgrades/Skins/IronFrame/ShieldDeluxeBlastSkin"
	105	[4463]	CALL     	R4 2 2 ; R4 := R4(R5)
	106	[4463]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 113
	107	[4463]	JMP      	113 ; PC := 113
	108	[4464]	SETTABLE 	R3 K15 K11 ; R3[0.000000] := true
	109	[4465]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	110	[4466]	SETTABLE 	R3 K12 K11 ; R3[2.000000] := true
	111	[4467]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	112	[4467]	JMP      	128 ; PC := 128
	113	[4468]	GETGLOBAL	R4 K4 ; R4 := 0x7ed0a956
	114	[4468]	LOADK    	R5 K24 ; R5 := "/Lotus/Powersuits/IronFrame/BlastWeapon"
	115	[4468]	CALL     	R4 2 2 ; R4 := R4(R5)
	116	[4468]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 122
	117	[4468]	JMP      	122 ; PC := 122
	118	[4469]	SETTABLE 	R3 K15 K11 ; R3[0.000000] := true
	119	[4470]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	120	[4471]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	121	[4471]	JMP      	128 ; PC := 128
	122	[4475]	SETTABLE 	R3 K15 K11 ; R3[0.000000] := true
	123	[4476]	SETTABLE 	R3 K10 K11 ; R3[1.000000] := true
	124	[4477]	SETTABLE 	R3 K12 K11 ; R3[2.000000] := true
	125	[4478]	SETTABLE 	R3 K13 K11 ; R3[3.000000] := true
	126	[4479]	SETTABLE 	R3 K16 K11 ; R3[4.000000] := true
	127	[4480]	SETTABLE 	R3 K17 K11 ; R3[5.000000] := true
	128	[4483]	RETURN   	R3 2 ; return R3 
	129	[4484]	RETURN   	R0 1 ; return 

function #83 <?:4486,4511> (75 instructions, 300 bytes at 0000021113BB2590)
1 param, 4 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[4487]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4487]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[4487]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[4487]	GETTABLE 	R2 R2 K3 ; R2 := R2["EquippedItem"]
	5	[4487]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[4487]	TEST     	R1 0 ; if not R1 then PC := 10
	7	[4487]	JMP      	10 ; PC := 10
	8	[4488]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[4488]	RETURN   	R1 2 ; return R1 
	10	[4491]	GETGLOBAL	R1 K1 ; R1 := mSelected
	11	[4491]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	12	[4491]	GETTABLE 	R1 R1 K3 ; R1 := R1["EquippedItem"]
	13	[4491]	GETTABLE 	R1 R1 K4 ; R1 := R1["mPolarized"]
	14	[4491]	EQ       	1 R1 K5 ; if R1 == nil then PC := 22
	15	[4491]	JMP      	22 ; PC := 22
	16	[4491]	GETGLOBAL	R1 K1 ; R1 := mSelected
	17	[4491]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	18	[4491]	GETTABLE 	R1 R1 K3 ; R1 := R1["EquippedItem"]
	19	[4491]	GETTABLE 	R1 R1 K4 ; R1 := R1["mPolarized"]
	20	[4491]	LE       	0 R1 K6 ; if R1 > 0.000000 then PC := 31
	21	[4491]	JMP      	31 ; PC := 31
	22	[4492]	GETGLOBAL	R1 K1 ; R1 := mSelected
	23	[4492]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	24	[4492]	GETTABLE 	R1 R1 K7 ; R1 := R1["LoadOutType"]
	25	[4492]	EQ       	0 R1 K9 ; if R1 ~= 7.000000 then PC := 29
	26	[4492]	JMP      	29 ; PC := 29
	27	[4493]	OP_LOADBOOL	R1 1 0 ; R1 := true
	28	[4493]	RETURN   	R1 2 ; return R1 
	29	[4495]	OP_LOADBOOL	R1 0 0 ; R1 := false
	30	[4495]	RETURN   	R1 2 ; return R1 
	31	[4498]	GETGLOBAL	R1 K1 ; R1 := mSelected
	32	[4498]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	33	[4498]	GETTABLE 	R1 R1 K7 ; R1 := R1["LoadOutType"]
	34	[4499]	EQ       	1 R1 K6 ; if R1 == 0.000000 then PC := 48
	35	[4499]	JMP      	48 ; PC := 48
	36	[4500]	EQ       	1 R1 K10 ; if R1 == 3.000000 then PC := 48
	37	[4500]	JMP      	48 ; PC := 48
	38	[4501]	EQ       	1 R1 K11 ; if R1 == 2.000000 then PC := 48
	39	[4501]	JMP      	48 ; PC := 48
	40	[4502]	EQ       	1 R1 K12 ; if R1 == 1.000000 then PC := 48
	41	[4502]	JMP      	48 ; PC := 48
	42	[4503]	EQ       	1 R1 K13 ; if R1 == 6.000000 then PC := 48
	43	[4503]	JMP      	48 ; PC := 48
	44	[4504]	EQ       	1 R1 K14 ; if R1 == 8.000000 then PC := 48
	45	[4504]	JMP      	48 ; PC := 48
	46	[4505]	OP_LOADBOOL	R2 0 0 ; R2 := false
	47	[4505]	RETURN   	R2 2 ; return R2 
	48	[4508]	GETGLOBAL	R2 K15 ; R2 := mLists
	49	[4508]	GETTABLE 	R2 R2 K16 ; R2 := R2["mCosmeticsList"]
	50	[4508]	GETTABLE 	R2 R2 K17 ; R2 := R2["mCurrLevel"]
	51	[4508]	GETGLOBAL	R3 K15 ; R3 := mLists
	52	[4508]	GETTABLE 	R3 R3 K16 ; R3 := R3["mCosmeticsList"]
	53	[4508]	GETTABLE 	R3 R3 K18 ; R3 := R3["DEFAULT"]
	54	[4508]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 73
	55	[4508]	JMP      	73 ; PC := 73
	56	[4509]	GETGLOBAL	R2 K15 ; R2 := mLists
	57	[4509]	GETTABLE 	R2 R2 K16 ; R2 := R2["mCosmeticsList"]
	58	[4509]	GETTABLE 	R2 R2 K17 ; R2 := R2["mCurrLevel"]
	59	[4509]	GETGLOBAL	R3 K15 ; R3 := mLists
	60	[4509]	GETTABLE 	R3 R3 K16 ; R3 := R3["mCosmeticsList"]
	61	[4509]	GETTABLE 	R3 R3 K19 ; R3 := R3["ATTACHMENTS"]
	62	[4509]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 73
	63	[4509]	JMP      	73 ; PC := 73
	64	[4510]	GETGLOBAL	R2 K15 ; R2 := mLists
	65	[4510]	GETTABLE 	R2 R2 K16 ; R2 := R2["mCosmeticsList"]
	66	[4510]	GETTABLE 	R2 R2 K17 ; R2 := R2["mCurrLevel"]
	67	[4510]	GETGLOBAL	R3 K15 ; R3 := mLists
	68	[4510]	GETTABLE 	R3 R3 K16 ; R3 := R3["mCosmeticsList"]
	69	[4510]	GETTABLE 	R3 R3 K20 ; R3 := R3["SYANDANAS"]
	70	[4510]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 73
	71	[4510]	JMP      	73 ; PC := 73
	72	[4510]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 73
	73	[4510]	OP_LOADBOOL	R2 1 0 ; R2 := true
	74	[4510]	RETURN   	R2 2 ; return R2 
	75	[4511]	RETURN   	R0 1 ; return 

function #84 <?:4513,4537> (80 instructions, 320 bytes at 0000021113BB2A00)
0 params, 6 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[4514]	GETGLOBAL	R0 K0 ; R0 := mLists
	2	[4514]	GETTABLE 	R0 R0 K1 ; R0 := R0["mLoadOutCategories"]
	3	[4515]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x7c09c373]
	4	[4515]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[4515]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[4515]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	7	[4517]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4517]	GETTABLE 	R1 R1 K3 ; R1 := R1["Current"]
	9	[4518]	EQ       	0 R1 K5 ; if R1 ~= 3.000000 then PC := 12
	10	[4518]	JMP      	12 ; PC := 12
	11	[4519]	LOADK    	R1 := 1.000000
	12	[4521]	SELF     	R2 R0 K6 ; R3 := R0; R2 := R0[0xbad4316f]
	13	[4521]	NEWTABLE 	R4 0 4 ; R4 := {}
	14	[4521]	SETTABLE 	R4 K7 K8 ; R4["Name"] := "[HC] TENNO"
	15	[4521]	SETTABLE 	R4 K9 R1 ; R4["ArsenalState"] := R1
	16	[4521]	GETTABLE 	R5 R0 K11 ; R5 := R0["mStates"]
	17	[4521]	GETTABLE 	R5 R5 K12 ; R5 := R5["TENNO"]
	18	[4521]	SETTABLE 	R4 K10 R5 ; R4["Id"] := R5
	19	[4521]	GETGLOBAL	R5 K14 ; R5 := 0x1feaefa7
	20	[4521]	SETTABLE 	R4 K13 R5 ; R4["Icon"] := R5
	21	[4521]	OP_LOADBOOL	R5 1 0 ; R5 := true
	22	[4521]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	23	[4522]	GETUPVAL 	R2 U0 ; R2 := U0
	24	[4522]	GETTABLE 	R2 R2 K3 ; R2 := R2["Current"]
	25	[4522]	EQ       	1 R2 K15 ; if R2 == 2.000000 then PC := 50
	26	[4522]	JMP      	50 ; PC := 50
	27	[4523]	SELF     	R2 R0 K6 ; R3 := R0; R2 := R0[0xbad4316f]
	28	[4523]	NEWTABLE 	R4 0 4 ; R4 := {}
	29	[4523]	SETTABLE 	R4 K7 K16 ; R4["Name"] := "[HC] COMPANION"
	30	[4523]	SETTABLE 	R4 K9 K17 ; R4["ArsenalState"] := 1.000000
	31	[4523]	GETTABLE 	R5 R0 K11 ; R5 := R0["mStates"]
	32	[4523]	GETTABLE 	R5 R5 K18 ; R5 := R5["COMPANION"]
	33	[4523]	SETTABLE 	R4 K10 R5 ; R4["Id"] := R5
	34	[4523]	GETGLOBAL	R5 K19 ; R5 := 0x0032441c
	35	[4523]	GETTABLE 	R5 R5 K20 ; R5 := R5["UICategoryIcon_SentinelOn"]
	36	[4523]	SETTABLE 	R4 K13 R5 ; R4["Icon"] := R5
	37	[4523]	OP_LOADBOOL	R5 1 0 ; R5 := true
	38	[4523]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	39	[4524]	SELF     	R2 R0 K6 ; R3 := R0; R2 := R0[0xbad4316f]
	40	[4524]	NEWTABLE 	R4 0 4 ; R4 := {}
	41	[4524]	SETTABLE 	R4 K7 K21 ; R4["Name"] := "[HC] GEAR"
	42	[4524]	SETTABLE 	R4 K9 K17 ; R4["ArsenalState"] := 1.000000
	43	[4524]	GETTABLE 	R5 R0 K11 ; R5 := R0["mStates"]
	44	[4524]	GETTABLE 	R5 R5 K22 ; R5 := R5["GEAR"]
	45	[4524]	SETTABLE 	R4 K10 R5 ; R4["Id"] := R5
	46	[4524]	GETGLOBAL	R5 K23 ; R5 := 0x0c87f090
	47	[4524]	SETTABLE 	R4 K13 R5 ; R4["Icon"] := R5
	48	[4524]	OP_LOADBOOL	R5 1 0 ; R5 := true
	49	[4524]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	50	[4526]	GETGLOBAL	R2 K24 ; R2 := mShowVehicles
	51	[4526]	TEST     	R2 0 ; if not R2 then PC := 65
	52	[4526]	JMP      	65 ; PC := 65
	53	[4527]	SELF     	R2 R0 K6 ; R3 := R0; R2 := R0[0xbad4316f]
	54	[4527]	NEWTABLE 	R4 0 4 ; R4 := {}
	55	[4527]	SETTABLE 	R4 K7 K25 ; R4["Name"] := "[HC] VEHICLES"
	56	[4527]	SETTABLE 	R4 K9 K5 ; R4["ArsenalState"] := 3.000000
	57	[4527]	GETTABLE 	R5 R0 K11 ; R5 := R0["mStates"]
	58	[4527]	GETTABLE 	R5 R5 K26 ; R5 := R5["VEHICLES"]
	59	[4527]	SETTABLE 	R4 K10 R5 ; R4["Id"] := R5
	60	[4527]	GETGLOBAL	R5 K19 ; R5 := 0x0032441c
	61	[4527]	GETTABLE 	R5 R5 K27 ; R5 := R5["UICategoryIcon_VehiclesOn"]
	62	[4527]	SETTABLE 	R4 K13 R5 ; R4["Icon"] := R5
	63	[4527]	OP_LOADBOOL	R5 1 0 ; R5 := true
	64	[4527]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	65	[4530]	GETUPVAL 	R2 U1 ; R2 := U1
	66	[4530]	GETTABLE 	R2 R2 K28 ; R2 := R2[0x74a11ec6]
	67	[4530]	SELF     	R3 R0 K29 ; R4 := R0; R3 := R0[0x5fbddc1a]
	68	[4530]	CALL     	R3 2 2 ; R3 := R3(R4)
	69	[4530]	DIV      	R3 K30 R3 ; R3 := 415.000000 / R3
	70	[4530]	CALL     	R2 2 2 ; R2 := R2(R3)
	71	[4531]	ADD      	R3 R2 K17 ; R3 := R2 + 1.000000
	72	[4531]	SETTABLE 	R0 K31 R3 ; R0[0x6c97a788] := R3
	73	[4532]	SETTABLE 	R0 K32 R2 ; R0["mMinWidth"] := R2
	74	[4534]	SELF     	R3 R0 K33 ; R4 := R0; R3 := R0[0x71e9ac81]
	75	[4534]	CALL     	R3 2 1 ; R3(R4)
	76	[4535]	SETTABLE 	R0 K34 K35 ; R0["mQueueInstantReposition"] := true
	77	[4536]	SELF     	R3 R0 K36 ; R4 := R0; R3 := R0[0x070daa5a]
	78	[4536]	GETTABLE 	R5 R0 K37 ; R5 := R0["mState"]
	79	[4536]	CALL     	R3 3 1 ; R3(R4,R5)
	80	[4537]	RETURN   	R0 1 ; return 

function #85 <?:4539,4563> (49 instructions, 196 bytes at 0000021113BB3160)
0 params, 5 slots, 4 upvalues, 0 locals, 28 constants, 1 function
	1	[4540]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[4540]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.Components.ThemedCategoriesMenu"
	3	[4540]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4541]	GETGLOBAL	R1 K2 ; R1 := mLists
	5	[4541]	GETTABLE 	R2 R0 K4 ; R2 := R0[0xae6791ba]
	6	[4541]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	7	[4541]	LOADK    	R4 K6 ; R4 := "LoadoutCategories"
	8	[4541]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[4541]	SETTABLE 	R1 K3 R2 ; R1["mLoadOutCategories"] := R2
	10	[4542]	GETGLOBAL	R1 K2 ; R1 := mLists
	11	[4542]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	12	[4542]	NEWTABLE 	R2 0 4 ; R2 := {}
	13	[4542]	SETTABLE 	R2 K8 K9 ; R2["TENNO"] := 1.000000
	14	[4542]	SETTABLE 	R2 K10 K11 ; R2["COMPANION"] := 2.000000
	15	[4542]	SETTABLE 	R2 K12 K13 ; R2["GEAR"] := 3.000000
	16	[4542]	SETTABLE 	R2 K14 K15 ; R2["VEHICLES"] := 4.000000
	17	[4542]	SETTABLE 	R1 K7 R2 ; R1["mStates"] := R2
	18	[4543]	GETGLOBAL	R1 K2 ; R1 := mLists
	19	[4543]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	20	[4543]	GETGLOBAL	R2 K2 ; R2 := mLists
	21	[4543]	GETTABLE 	R2 R2 K3 ; R2 := R2["mLoadOutCategories"]
	22	[4543]	GETTABLE 	R2 R2 K7 ; R2 := R2["mStates"]
	23	[4543]	GETTABLE 	R2 R2 K8 ; R2 := R2["TENNO"]
	24	[4543]	SETTABLE 	R1 K16 R2 ; R1["mState"] := R2
	25	[4544]	GETGLOBAL	R1 K2 ; R1 := mLists
	26	[4544]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	27	[4544]	SETTABLE 	R1 K17 K18 ; R1["mShowCurrentSelectionLabel"] := false
	28	[4545]	GETGLOBAL	R1 K2 ; R1 := mLists
	29	[4545]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	30	[4545]	GETUPVAL 	R2 U0 ; R2 := U0
	31	[4545]	GETTABLE 	R2 R2 K20 ; R2 := R2["LEFT_ALIGNED"]
	32	[4545]	SETTABLE 	R1 K19 R2 ; R1["mAlign"] := R2
	33	[4546]	GETGLOBAL	R1 K2 ; R1 := mLists
	34	[4546]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	35	[4546]	SETTABLE 	R1 K21 K22 ; R1["mForcedHorizontalSeparation"] := 76.000000
	36	[4547]	GETGLOBAL	R1 K2 ; R1 := mLists
	37	[4547]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	38	[4547]	SETTABLE 	R1 K23 K24 ; R1["mMinWidth"] := 75.000000
	39	[4548]	GETGLOBAL	R1 K2 ; R1 := mLists
	40	[4548]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	41	[4548]	SETTABLE 	R1 K25 K26 ; R1["mMinHeight"] := 55.000000
	42	[4549]	GETGLOBAL	R1 K2 ; R1 := mLists
	43	[4549]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutCategories"]
	44	[4562]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	45	[4562]	GETUPVAL 	R0 U1 ; R0 := U1
	46	[4562]	GETUPVAL 	R0 U2 ; R0 := U2
	47	[4562]	GETUPVAL 	R0 U3 ; R0 := U3
	48	[4562]	SETTABLE 	R1 K27 R2 ; R1["mOnSelectedCallback"] := R2
	49	[4563]	RETURN   	R0 1 ; return 

function #86 <?:4565,4569> (14 instructions, 56 bytes at 0000021113BB37B0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[4566]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4566]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[4566]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutCategories"]
	4	[4566]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4566]	TEST     	R1 1 ; if R1 then PC := 14
	6	[4566]	JMP      	14 ; PC := 14
	7	[4567]	GETGLOBAL	R1 K1 ; R1 := mLists
	8	[4567]	GETTABLE 	R1 R1 K2 ; R1 := R1["mLoadOutCategories"]
	9	[4567]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[4567]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[4567]	MOVE     	R4 R0 ; R4 := R0
	12	[4567]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[4567]	CALL     	R1 0 1 ; R1(R2,...)
	14	[4569]	RETURN   	R0 1 ; return 

function #87 <?:4571,4575> (14 instructions, 56 bytes at 0000021113BB3940)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[4572]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4572]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[4572]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutCategories"]
	4	[4572]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4572]	TEST     	R1 1 ; if R1 then PC := 14
	6	[4572]	JMP      	14 ; PC := 14
	7	[4573]	GETGLOBAL	R1 K1 ; R1 := mLists
	8	[4573]	GETTABLE 	R1 R1 K2 ; R1 := R1["mLoadOutCategories"]
	9	[4573]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[4573]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[4573]	MOVE     	R4 R0 ; R4 := R0
	12	[4573]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[4573]	CALL     	R1 0 1 ; R1(R2,...)
	14	[4575]	RETURN   	R0 1 ; return 

function #88 <?:4577,4581> (18 instructions, 72 bytes at 0000021113BB3AD0)
1 param, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[4578]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4578]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[4578]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutCategories"]
	4	[4578]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4578]	TEST     	R1 1 ; if R1 then PC := 18
	6	[4578]	JMP      	18 ; PC := 18
	7	[4578]	GETGLOBAL	R1 K3 ; R1 := mInputBlocked
	8	[4578]	TEST     	R1 1 ; if R1 then PC := 18
	9	[4578]	JMP      	18 ; PC := 18
	10	[4579]	GETGLOBAL	R1 K1 ; R1 := mLists
	11	[4579]	GETTABLE 	R1 R1 K2 ; R1 := R1["mLoadOutCategories"]
	12	[4579]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x070daa5a]
	13	[4579]	GETGLOBAL	R3 K5 ; R3 := 0x03f57322
	14	[4579]	MOVE     	R4 R0 ; R4 := R0
	15	[4579]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[4579]	OP_LOADBOOL	R4 1 0 ; R4 := true
	17	[4579]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[4581]	RETURN   	R0 1 ; return 

function #89 <?:4583,4591> (30 instructions, 120 bytes at 0000021113BB3C90)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[4584]	GETTABLE 	R1 R0 K0 ; R1 := R0["LoadOutType"]
	2	[4584]	EQ       	1 R1 K1 ; if R1 == nil then PC := 7
	3	[4584]	JMP      	7 ; PC := 7
	4	[4584]	GETTABLE 	R1 R0 K0 ; R1 := R0["LoadOutType"]
	5	[4584]	EQ       	1 R1 K3 ; if R1 == 7.000000 then PC := 8
	6	[4584]	JMP      	8 ; PC := 8
	7	[4584]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 8
	8	[4584]	OP_LOADBOOL	R1 1 0 ; R1 := true
	9	[4585]	GETTABLE 	R2 R0 K4 ; R2 := R0["Type"]
	10	[4585]	EQ       	1 R2 K1 ; if R2 == nil then PC := 17
	11	[4585]	JMP      	17 ; PC := 17
	12	[4585]	GETTABLE 	R2 R0 K4 ; R2 := R0["Type"]
	13	[4585]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	14	[4585]	GETGLOBAL	R4 K6 ; R4 := 0x30b62636
	15	[4585]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[4585]	JMP      	19 ; PC := 19
	17	[4585]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 18
	18	[4585]	OP_LOADBOOL	R2 1 0 ; R2 := true
	19	[4586]	TEST     	R1 1 ; if R1 then PC := 26
	20	[4586]	JMP      	26 ; PC := 26
	21	[4586]	TEST     	R2 1 ; if R2 then PC := 26
	22	[4586]	JMP      	26 ; PC := 26
	23	[4586]	GETTABLE 	R3 R0 K7 ; R3 := R0["MandachordEntry"]
	24	[4586]	TEST     	R3 0 ; if not R3 then PC := 28
	25	[4586]	JMP      	28 ; PC := 28
	26	[4587]	OP_LOADBOOL	R3 1 0 ; R3 := true
	27	[4587]	RETURN   	R3 2 ; return R3 
	28	[4590]	OP_LOADBOOL	R3 0 0 ; R3 := false
	29	[4590]	RETURN   	R3 2 ; return R3 
	30	[4591]	RETURN   	R0 1 ; return 

function #90 <?:4593,5116> (120 instructions, 480 bytes at 0000021113BB3ED0)
0 params, 6 slots, 26 upvalues, 0 locals, 31 constants, 10 functions
	1	[4594]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[4594]	LOADK    	R1 K1 ; R1 := "EE.Interface.Components.List"
	3	[4594]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4595]	GETGLOBAL	R1 K2 ; R1 := mLists
	5	[4595]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x9383bc56]
	6	[4595]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	7	[4595]	LOADK    	R4 K6 ; R4 := "MenuItem"
	8	[4595]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[4595]	SETTABLE 	R1 K3 R2 ; R1["mLoadOutList"] := R2
	10	[4596]	GETGLOBAL	R1 K2 ; R1 := mLists
	11	[4596]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	12	[4596]	SETTABLE 	R1 K7 K8 ; R1["mForcedVerticalSeparation"] := 68.000000
	13	[4597]	GETGLOBAL	R1 K2 ; R1 := mLists
	14	[4597]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	15	[4597]	SETTABLE 	R1 K9 K10 ; R1["mTransitionInDeltaY"] := 0.000000
	16	[4598]	GETGLOBAL	R1 K2 ; R1 := mLists
	17	[4598]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	18	[4598]	SETTABLE 	R1 K11 K10 ; R1["mTransitionOutDeltaY"] := 0.000000
	19	[4599]	GETGLOBAL	R1 K2 ; R1 := mLists
	20	[4599]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	21	[4599]	SETTABLE 	R1 K12 K13 ; R1["mWrapAroundNavigation"] := true
	22	[4600]	GETGLOBAL	R1 K2 ; R1 := mLists
	23	[4600]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	24	[4600]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	25	[4600]	LOADK    	R3 K15 ; R3 := "MenuItemPressed"
	26	[4600]	LOADK    	R4 K16 ; R4 := "MenuItemFocused"
	27	[4600]	LOADK    	R5 K17 ; R5 := "MenuItemUnfocused"
	28	[4600]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	29	[4601]	GETGLOBAL	R1 K2 ; R1 := mLists
	30	[4601]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	31	[4654]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	32	[4654]	GETUPVAL 	R0 U0 ; R0 := U0
	33	[4654]	GETUPVAL 	R0 U1 ; R0 := U1
	34	[4654]	GETUPVAL 	R0 U2 ; R0 := U2
	35	[4654]	GETUPVAL 	R0 U3 ; R0 := U3
	36	[4654]	GETUPVAL 	R0 U4 ; R0 := U4
	37	[4654]	GETUPVAL 	R0 U5 ; R0 := U5
	38	[4654]	GETUPVAL 	R0 U6 ; R0 := U6
	39	[4654]	GETUPVAL 	R0 U7 ; R0 := U7
	40	[4654]	GETUPVAL 	R0 U8 ; R0 := U8
	41	[4654]	GETUPVAL 	R0 U9 ; R0 := U9
	42	[4654]	GETUPVAL 	R0 U10 ; R0 := U10
	43	[4654]	GETUPVAL 	R0 U11 ; R0 := U11
	44	[4654]	SETTABLE 	R1 K18 R2 ; R1[0xbd496aa1] := R2
	45	[4655]	GETGLOBAL	R1 K2 ; R1 := mLists
	46	[4655]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	47	[4665]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	48	[4665]	SETTABLE 	R1 K19 R2 ; R1["mOnUnfocusedCallback"] := R2
	49	[4666]	GETGLOBAL	R1 K2 ; R1 := mLists
	50	[4666]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	51	[4680]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	52	[4680]	SETTABLE 	R1 K20 R2 ; R1["RepositionButtons"] := R2
	53	[4681]	GETGLOBAL	R1 K2 ; R1 := mLists
	54	[4681]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	55	[4733]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	56	[4733]	GETUPVAL 	R0 U3 ; R0 := U3
	57	[4733]	GETUPVAL 	R0 U5 ; R0 := U5
	58	[4733]	GETUPVAL 	R0 U7 ; R0 := U7
	59	[4733]	GETUPVAL 	R0 U12 ; R0 := U12
	60	[4733]	GETUPVAL 	R0 U13 ; R0 := U13
	61	[4733]	SETTABLE 	R1 K21 R2 ; R1["mOnSelectedCallback"] := R2
	62	[4734]	GETGLOBAL	R1 K2 ; R1 := mLists
	63	[4734]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	64	[4778]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	65	[4778]	GETUPVAL 	R0 U14 ; R0 := U14
	66	[4778]	GETUPVAL 	R0 U15 ; R0 := U15
	67	[4778]	GETUPVAL 	R0 U16 ; R0 := U16
	68	[4778]	SETTABLE 	R1 K22 R2 ; R1["RefreshElementIcon"] := R2
	69	[4779]	GETGLOBAL	R1 K2 ; R1 := mLists
	70	[4779]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	71	[5056]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	72	[5056]	GETUPVAL 	R0 U3 ; R0 := U3
	73	[5056]	GETUPVAL 	R0 U4 ; R0 := U4
	74	[5056]	GETUPVAL 	R0 U17 ; R0 := U17
	75	[5056]	GETUPVAL 	R0 U18 ; R0 := U18
	76	[5056]	GETUPVAL 	R0 U19 ; R0 := U19
	77	[5056]	GETUPVAL 	R0 U20 ; R0 := U20
	78	[5056]	GETUPVAL 	R0 U11 ; R0 := U11
	79	[5056]	GETUPVAL 	R0 U21 ; R0 := U21
	80	[5056]	GETUPVAL 	R0 U6 ; R0 := U6
	81	[5056]	GETUPVAL 	R0 U22 ; R0 := U22
	82	[5056]	GETUPVAL 	R0 U23 ; R0 := U23
	83	[5056]	GETUPVAL 	R0 U24 ; R0 := U24
	84	[5056]	GETUPVAL 	R0 U25 ; R0 := U25
	85	[5056]	GETUPVAL 	R0 U16 ; R0 := U16
	86	[5056]	SETTABLE 	R1 K23 R2 ; R1["mElementDrawCallback"] := R2
	87	[5057]	GETGLOBAL	R1 K2 ; R1 := mLists
	88	[5057]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	89	[5059]	CLOSURE  	R2 6 ; R2 := closure(Function #7)
	90	[5059]	SETTABLE 	R1 K24 R2 ; R1["SetupPreInterpolationValues"] := R2
	91	[5060]	GETGLOBAL	R1 K2 ; R1 := mLists
	92	[5060]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	93	[5060]	GETGLOBAL	R2 K2 ; R2 := mLists
	94	[5060]	GETTABLE 	R2 R2 K3 ; R2 := R2["mLoadOutList"]
	95	[5060]	GETTABLE 	R2 R2 K26 ; R2 := R2["DefaultAlphaInterpolation"]
	96	[5060]	SETTABLE 	R1 K25 R2 ; R1["GetInterpolationProperties"] := R2
	97	[5061]	GETGLOBAL	R1 K2 ; R1 := mLists
	98	[5061]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	99	[5061]	GETGLOBAL	R2 K2 ; R2 := mLists
	100	[5061]	GETTABLE 	R2 R2 K3 ; R2 := R2["mLoadOutList"]
	101	[5061]	GETTABLE 	R2 R2 K28 ; R2 := R2["CalculateY"]
	102	[5061]	SETTABLE 	R1 K27 R2 ; R1["_LoadOutList_CalculateY"] := R2
	103	[5062]	GETGLOBAL	R1 K2 ; R1 := mLists
	104	[5062]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	105	[5102]	CLOSURE  	R2 7 ; R2 := closure(Function #8)
	106	[5102]	GETUPVAL 	R0 U25 ; R0 := U25
	107	[5102]	GETUPVAL 	R0 U20 ; R0 := U20
	108	[5102]	GETUPVAL 	R0 U17 ; R0 := U17
	109	[5102]	GETUPVAL 	R0 U11 ; R0 := U11
	110	[5102]	GETUPVAL 	R0 U3 ; R0 := U3
	111	[5102]	SETTABLE 	R1 K28 R2 ; R1["CalculateY"] := R2
	112	[5103]	GETGLOBAL	R1 K2 ; R1 := mLists
	113	[5103]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	114	[5106]	CLOSURE  	R2 8 ; R2 := closure(Function #9)
	115	[5106]	SETTABLE 	R1 K29 R2 ; R1["OnElementTransitionStarted"] := R2
	116	[5107]	GETGLOBAL	R1 K2 ; R1 := mLists
	117	[5107]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	118	[5115]	CLOSURE  	R2 9 ; R2 := closure(Function #10)
	119	[5115]	SETTABLE 	R1 K30 R2 ; R1["OnElementTransitionEnded"] := R2
	120	[5116]	RETURN   	R0 1 ; return 

function #91 <?:5118,5138> (25 instructions, 100 bytes at 0000021113B6C3C0)
0 params, 3 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[5120]	GETGLOBAL	R0 K0 ; R0 := mSelected
	2	[5120]	GETTABLE 	R0 R0 K1 ; R0 := R0["Element"]
	3	[5129]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 7
	4	[5129]	JMP      	7 ; PC := 7
	5	[5130]	OP_LOADBOOL	R1 0 0 ; R1 := false
	6	[5130]	RETURN   	R1 2 ; return R1 
	7	[5133]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[5133]	GETUPVAL 	R2 U1 ; R2 := U1
	9	[5133]	GETTABLE 	R2 R2 K3 ; R2 := R2["FALSE"]
	10	[5133]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 23
	11	[5133]	JMP      	23 ; PC := 23
	12	[5133]	GETTABLE 	R1 R0 K4 ; R1 := R0["LoadOutId"]
	13	[5133]	EQ       	0 R1 K6 ; if R1 ~= 0.000000 then PC := 23
	14	[5133]	JMP      	23 ; PC := 23
	15	[5133]	GETTABLE 	R1 R0 K7 ; R1 := R0["LoadOutType"]
	16	[5133]	EQ       	1 R1 K6 ; if R1 == 0.000000 then PC := 21
	17	[5133]	JMP      	21 ; PC := 21
	18	[5133]	GETTABLE 	R1 R0 K7 ; R1 := R0["LoadOutType"]
	19	[5133]	EQ       	0 R1 K8 ; if R1 ~= 3.000000 then PC := 23
	20	[5133]	JMP      	23 ; PC := 23
	21	[5134]	OP_LOADBOOL	R1 1 0 ; R1 := true
	22	[5134]	RETURN   	R1 2 ; return R1 
	23	[5137]	OP_LOADBOOL	R1 0 0 ; R1 := false
	24	[5137]	RETURN   	R1 2 ; return R1 
	25	[5138]	RETURN   	R0 1 ; return 

function #92 <?:5140,5164> (81 instructions, 324 bytes at 0000021113B6C5F0)
0 params, 9 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[5141]	GETGLOBAL	R0 K0 ; R0 := mCameraTable
	2	[5141]	GETTABLE 	R0 R0 K1 ; R0 := R0["destPos"]
	3	[5141]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 6
	4	[5141]	JMP      	6 ; PC := 6
	5	[5142]	RETURN   	R0 1 ; return 
	6	[5145]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	7	[5145]	GETGLOBAL	R1 K4 ; R1 := _T
	8	[5145]	GETTABLE 	R1 R1 K5 ; R1 := R1["MenuSuitAvatar"]
	9	[5145]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[5145]	TEST     	R0 1 ; if R0 then PC := 31
	11	[5145]	JMP      	31 ; PC := 31
	12	[5146]	GETGLOBAL	R0 K4 ; R0 := _T
	13	[5146]	GETTABLE 	R0 R0 K5 ; R0 := R0["MenuSuitAvatar"]
	14	[5146]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x003c792f]
	15	[5146]	GETGLOBAL	R2 K7 ; R2 := 0x0469f296
	16	[5146]	LOADK    	R3 K8 ; R3 := "GAME_C1_ROOT"
	17	[5146]	CALL     	R2 2 0 ; R2,... := R2(R3)
	18	[5146]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	19	[5147]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	20	[5147]	GETTABLE 	R1 R1 K9 ; R1 := R1["rootPos"]
	21	[5147]	EQ       	1 R1 K2 ; if R1 == nil then PC := 27
	22	[5147]	JMP      	27 ; PC := 27
	23	[5147]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	24	[5147]	GETTABLE 	R1 R1 K9 ; R1 := R1["rootPos"]
	25	[5147]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 31
	26	[5147]	JMP      	31 ; PC := 31
	27	[5150]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	28	[5150]	SETTABLE 	R1 K10 K2 ; R1["forward"] := nil
	29	[5151]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	30	[5151]	SETTABLE 	R1 K9 R0 ; R1["rootPos"] := R0
	31	[5155]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	32	[5155]	GETTABLE 	R1 R1 K10 ; R1 := R1["forward"]
	33	[5155]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 56
	34	[5155]	JMP      	56 ; PC := 56
	35	[5156]	GETGLOBAL	R1 K0 ; R1 := mCameraTable
	36	[5156]	GETTABLE 	R1 R1 K9 ; R1 := R1["rootPos"]
	37	[5156]	GETGLOBAL	R2 K11 ; R2 := 0xa421af95
	38	[5156]	LOADK    	R3 := 0.000000
	39	[5156]	LOADK    	R4 K12 ; R4 := 0.900000
	40	[5156]	LOADK    	R5 := 0.000000
	41	[5156]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	42	[5156]	ADD      	R1 R1 R2 ; R1 := R1 + R2
	43	[5157]	GETGLOBAL	R2 K0 ; R2 := mCameraTable
	44	[5157]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	45	[5157]	GETTABLE 	R3 R3 K1 ; R3 := R3["destPos"]
	46	[5157]	SETTABLE 	R2 K13 R3 ; R2["zoomMin"] := R3
	47	[5158]	GETGLOBAL	R2 K0 ; R2 := mCameraTable
	48	[5158]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	49	[5158]	GETTABLE 	R3 R3 K1 ; R3 := R3["destPos"]
	50	[5158]	SUB      	R3 R1 R3 ; R3 := R1 - R3
	51	[5158]	SETTABLE 	R2 K10 R3 ; R2["forward"] := R3
	52	[5159]	GETGLOBAL	R2 K14 ; R2 := 0xc2892f65
	53	[5159]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	54	[5159]	GETTABLE 	R3 R3 K10 ; R3 := R3["forward"]
	55	[5159]	CALL     	R2 2 1 ; R2(R3)
	56	[5162]	GETGLOBAL	R2 K15 ; R2 := 0x42dcc9f5
	57	[5162]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	58	[5162]	GETTABLE 	R3 R3 K16 ; R3 := R3["currPan"]
	59	[5162]	GETGLOBAL	R4 K0 ; R4 := mCameraTable
	60	[5162]	GETTABLE 	R4 R4 K17 ; R4 := R4["clampedPan"]
	61	[5162]	UNM      	R4 R4 ; R4 := ^ R4
	62	[5162]	GETGLOBAL	R5 K0 ; R5 := mCameraTable
	63	[5162]	GETTABLE 	R5 R5 K17 ; R5 := R5["clampedPan"]
	64	[5162]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	65	[5163]	GETGLOBAL	R3 K0 ; R3 := mCameraTable
	66	[5163]	GETGLOBAL	R4 K0 ; R4 := mCameraTable
	67	[5163]	GETTABLE 	R4 R4 K13 ; R4 := R4["zoomMin"]
	68	[5163]	GETGLOBAL	R5 K0 ; R5 := mCameraTable
	69	[5163]	GETTABLE 	R5 R5 K10 ; R5 := R5["forward"]
	70	[5163]	GETGLOBAL	R6 K0 ; R6 := mCameraTable
	71	[5163]	GETTABLE 	R6 R6 K18 ; R6 := R6["currZoom"]
	72	[5163]	MUL      	R5 R5 R6 ; R5 := R5 * R6
	73	[5163]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	74	[5163]	GETGLOBAL	R5 K11 ; R5 := 0xa421af95
	75	[5163]	LOADK    	R6 := 0.000000
	76	[5163]	MOVE     	R7 R2 ; R7 := R2
	77	[5163]	LOADK    	R8 := 0.000000
	78	[5163]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	79	[5163]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	80	[5163]	SETTABLE 	R3 K1 R4 ; R3["destPos"] := R4
	81	[5164]	RETURN   	R0 1 ; return 

function #93 <?:5166,5204> (127 instructions, 508 bytes at 0000021113B6CAB0)
1 param, 13 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[5167]	SETTABLE 	R0 K0 K1 ; R0["StatsParagraph"] := ""
	2	[5168]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	3	[5168]	GETTABLE 	R2 R0 K3 ; R2 := R0["Type"]
	4	[5168]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5168]	TEST     	R1 1 ; if R1 then PC := 121
	6	[5168]	JMP      	121 ; PC := 121
	7	[5169]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[5170]	GETTABLE 	R2 R0 K4 ; R2 := R0["LoadOutId"]
	9	[5171]	EQ       	1 R2 K6 ; if R2 == 0.000000 then PC := 17
	10	[5171]	JMP      	17 ; PC := 17
	11	[5171]	EQ       	1 R2 K7 ; if R2 == 2.000000 then PC := 17
	12	[5171]	JMP      	17 ; PC := 17
	13	[5171]	EQ       	1 R2 K8 ; if R2 == 1.000000 then PC := 17
	14	[5171]	JMP      	17 ; PC := 17
	15	[5171]	EQ       	0 R2 K9 ; if R2 ~= 3.000000 then PC := 26
	16	[5171]	JMP      	26 ; PC := 26
	17	[5172]	GETTABLE 	R3 R0 K10 ; R3 := R0["EquippedItem"]
	18	[5172]	EQ       	1 R3 K11 ; if R3 == nil then PC := 26
	19	[5172]	JMP      	26 ; PC := 26
	20	[5172]	GETTABLE 	R3 R0 K10 ; R3 := R0["EquippedItem"]
	21	[5172]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xba568eef]
	22	[5172]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[5172]	TEST     	R3 0 ; if not R3 then PC := 26
	24	[5172]	JMP      	26 ; PC := 26
	25	[5173]	OP_LOADBOOL	R1 1 0 ; R1 := true
	26	[5177]	GETUPVAL 	R3 U0 ; R3 := U0
	27	[5177]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x6fba4466]
	28	[5177]	MOVE     	R4 R0 ; R4 := R0
	29	[5177]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[5178]	TEST     	R3 0 ; if not R3 then PC := 33
	31	[5178]	JMP      	33 ; PC := 33
	32	[5178]	JMP      	127 ; PC := 127
	33	[5179]	TEST     	R1 0 ; if not R1 then PC := 62
	34	[5179]	JMP      	62 ; PC := 62
	35	[5180]	GETGLOBAL	R4 K14 ; R4 := 0x34291f5c
	36	[5180]	GETTABLE 	R4 R4 K15 ; R4 := R4[0x397b920f]
	37	[5180]	GETTABLE 	R5 R0 K10 ; R5 := R0["EquippedItem"]
	38	[5180]	GETTABLE 	R5 R5 K16 ; R5 := R5["mExpiry"]
	39	[5180]	GETTABLE 	R5 R5 K17 ; R5 := R5["sec"]
	40	[5180]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[5181]	LOADNIL  	R5 R5 ; R5 := nil
	42	[5182]	LE       	0 R4 K6 ; if R4 > 0.000000 then PC := 51
	43	[5182]	JMP      	51 ; PC := 51
	44	[5183]	GETGLOBAL	R6 K18 ; R6 := 0xae91e43b
	45	[5183]	SELF     	R6 R6 K19 ; R7 := R6; R6 := R6[0x42b04007]
	46	[5183]	LOADK    	R8 K20 ; R8 := "/Lotus/Language/Menu/Expired"
	47	[5183]	OP_LOADBOOL	R9 0 0 ; R9 := false
	48	[5183]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	49	[5183]	MOVE     	R5 R6 ; R5 := R6
	50	[5183]	JMP      	56 ; PC := 56
	51	[5185]	GETUPVAL 	R6 U1 ; R6 := U1
	52	[5185]	GETTABLE 	R6 R6 K21 ; R6 := R6[0x10e5bb7a]
	53	[5185]	MOVE     	R7 R4 ; R7 := R4
	54	[5185]	CALL     	R6 2 2 ; R6 := R6(R7)
	55	[5185]	MOVE     	R5 R6 ; R5 := R6
	56	[5187]	GETGLOBAL	R6 K22 ; R6 := Icons
	57	[5187]	GETTABLE 	R6 R6 K23 ; R6 := R6["TIMER"]
	58	[5187]	MOVE     	R7 R5 ; R7 := R5
	59	[5187]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	60	[5187]	SETTABLE 	R0 K0 R6 ; R0["StatsParagraph"] := R6
	61	[5187]	JMP      	127 ; PC := 127
	62	[5188]	GETTABLE 	R6 R0 K24 ; R6 := R0["Level"]
	63	[5188]	GETGLOBAL	R7 K25 ; R7 := 0xa94df70b
	64	[5188]	SELF     	R7 R7 K26 ; R8 := R7; R7 := R7[0x757f0100]
	65	[5188]	GETTABLE 	R9 R0 K3 ; R9 := R0["Type"]
	66	[5188]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	67	[5188]	LE       	0 R7 R6 ; if R7 > R6 then PC := 96
	68	[5188]	JMP      	96 ; PC := 96
	69	[5189]	GETGLOBAL	R6 K18 ; R6 := 0xae91e43b
	70	[5189]	SELF     	R6 R6 K19 ; R7 := R6; R6 := R6[0x42b04007]
	71	[5189]	LOADK    	R8 K27 ; R8 := "/Lotus/Language/Ranks/MaxRank"
	72	[5189]	OP_LOADBOOL	R9 0 0 ; R9 := false
	73	[5189]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	74	[5189]	SETTABLE 	R0 K0 R6 ; R0["StatsParagraph"] := R6
	75	[5191]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	76	[5191]	GETTABLE 	R7 R0 K10 ; R7 := R0["EquippedItem"]
	77	[5191]	GETTABLE 	R7 R7 K28 ; R7 := R7["mFocusLens"]
	78	[5191]	CALL     	R6 2 2 ; R6 := R6(R7)
	79	[5191]	TEST     	R6 1 ; if R6 then PC := 127
	80	[5191]	JMP      	127 ; PC := 127
	81	[5192]	GETUPVAL 	R6 U1 ; R6 := U1
	82	[5192]	GETTABLE 	R6 R6 K29 ; R6 := R6[0x12afd099]
	83	[5192]	GETTABLE 	R7 R0 K10 ; R7 := R0["EquippedItem"]
	84	[5192]	GETTABLE 	R7 R7 K28 ; R7 := R7["mFocusLens"]
	85	[5192]	CALL     	R6 2 2 ; R6 := R6(R7)
	86	[5194]	GETTABLE 	R7 R0 K0 ; R7 := R0["StatsParagraph"]
	87	[5194]	LOADK    	R8 K30 ; R8 := " "
	88	[5194]	GETGLOBAL	R9 K18 ; R9 := 0xae91e43b
	89	[5194]	SELF     	R9 R9 K19 ; R10 := R9; R9 := R9[0x42b04007]
	90	[5194]	GETTABLE 	R11 R6 K31 ; R11 := R6["LensTag"]
	91	[5194]	OP_LOADBOOL	R12 1 0 ; R12 := true
	92	[5194]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	93	[5194]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	94	[5194]	SETTABLE 	R0 K0 R7 ; R0["StatsParagraph"] := R7
	95	[5195]	JMP      	127 ; PC := 127
	96	[5196]	GETTABLE 	R7 R0 K24 ; R7 := R0["Level"]
	97	[5196]	LT       	0 K6 R7 ; if 0.000000 >= R7 then PC := 111
	98	[5196]	JMP      	111 ; PC := 111
	99	[5197]	GETGLOBAL	R7 K32 ; R7 := 0x5f0788c4
	100	[5197]	GETGLOBAL	R8 K18 ; R8 := 0xae91e43b
	101	[5197]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x42b04007]
	102	[5197]	LOADK    	R10 K33 ; R10 := "/Lotus/Language/Menu/Arsenal_Rank"
	103	[5197]	OP_LOADBOOL	R11 0 0 ; R11 := false
	104	[5197]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	105	[5197]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	106	[5197]	LOADK    	R8 K30 ; R8 := " "
	107	[5197]	GETTABLE 	R9 R0 K24 ; R9 := R0["Level"]
	108	[5197]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	109	[5197]	SETTABLE 	R0 K0 R7 ; R0["StatsParagraph"] := R7
	110	[5197]	JMP      	127 ; PC := 127
	111	[5198]	GETTABLE 	R7 R0 K34 ; R7 := R0["LoadOutType"]
	112	[5198]	EQ       	1 R7 K35 ; if R7 == 4.000000 then PC := 127
	113	[5198]	JMP      	127 ; PC := 127
	114	[5199]	GETGLOBAL	R7 K18 ; R7 := 0xae91e43b
	115	[5199]	SELF     	R7 R7 K19 ; R8 := R7; R7 := R7[0x42b04007]
	116	[5199]	LOADK    	R9 K36 ; R9 := "/Lotus/Language/Ranks/Rank0"
	117	[5199]	OP_LOADBOOL	R10 0 0 ; R10 := false
	118	[5199]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	119	[5199]	SETTABLE 	R0 K0 R7 ; R0["StatsParagraph"] := R7
	120	[5200]	JMP      	127 ; PC := 127
	121	[5202]	GETGLOBAL	R7 K18 ; R7 := 0xae91e43b
	122	[5202]	SELF     	R7 R7 K19 ; R8 := R7; R7 := R7[0x42b04007]
	123	[5202]	GETTABLE 	R9 R0 K37 ; R9 := R0["Title"]
	124	[5202]	OP_LOADBOOL	R10 0 0 ; R10 := false
	125	[5202]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	126	[5202]	SETTABLE 	R0 K0 R7 ; R0["StatsParagraph"] := R7
	127	[5204]	RETURN   	R0 1 ; return 

function #94 <?:5206,5260> (123 instructions, 492 bytes at 0000021113B6D1D0)
1 param, 14 slots, 5 upvalues, 0 locals, 38 constants, 0 functions
	1	[5207]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5207]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[5207]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5207]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[5207]	JMP      	7 ; PC := 7
	6	[5208]	RETURN   	R0 1 ; return 
	7	[5211]	GETTABLE 	R1 R0 K2 ; R1 := R0["UID"]
	8	[5211]	GETGLOBAL	R2 K3 ; R2 := 0x6c97a788
	9	[5211]	GETTABLE 	R2 R2 K4 ; R2 := R2["InvalidItemID"]
	10	[5211]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 102
	11	[5211]	JMP      	102 ; PC := 102
	12	[5212]	LOADK    	R1 := 1.000000
	13	[5212]	GETTABLE 	R2 R0 K5 ; R2 := R0["OwnedItems"]
	14	[5212]	LEN      	R2 R2 ; R2 := # R2
	15	[5212]	LOADK    	R3 := 1.000000
	16	[5212]	FORPREP  	R1 100 ; R1 -= R3; PC := 100
	17	[5213]	GETTABLE 	R5 R0 K5 ; R5 := R0["OwnedItems"]
	18	[5213]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	19	[5214]	GETTABLE 	R6 R5 K2 ; R6 := R5["UID"]
	20	[5214]	GETTABLE 	R7 R0 K2 ; R7 := R0["UID"]
	21	[5214]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 100
	22	[5214]	JMP      	100 ; PC := 100
	23	[5215]	GETTABLE 	R6 R5 K6 ; R6 := R5["Type"]
	24	[5215]	SETTABLE 	R0 K6 R6 ; R0["Type"] := R6
	25	[5216]	GETTABLE 	R6 R5 K7 ; R6 := R5["Xp"]
	26	[5216]	SETTABLE 	R0 K7 R6 ; R0["Xp"] := R6
	27	[5217]	GETGLOBAL	R6 K9 ; R6 := 0xa94df70b
	28	[5217]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x8427bf69]
	29	[5217]	GETTABLE 	R8 R0 K7 ; R8 := R0["Xp"]
	30	[5217]	GETTABLE 	R9 R0 K6 ; R9 := R0["Type"]
	31	[5217]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	32	[5217]	SETTABLE 	R0 K8 R6 ; R0["Level"] := R6
	33	[5218]	GETGLOBAL	R6 K1 ; R6 := 0x25d99d89
	34	[5218]	SELF     	R6 R6 K12 ; R7 := R6; R6 := R6[0x62c81b76]
	35	[5218]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[5218]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0xc9f592a7]
	37	[5218]	GETTABLE 	R8 R0 K14 ; R8 := R0["LoadOutType"]
	38	[5218]	GETTABLE 	R9 R0 K15 ; R9 := R0["LoadOutId"]
	39	[5218]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	40	[5218]	SETTABLE 	R0 K11 R6 ; R0["PvpValue"] := R6
	41	[5219]	GETTABLE 	R6 R5 K17 ; R6 := R5["Item"]
	42	[5219]	SETTABLE 	R0 K16 R6 ; R0["EquippedItem"] := R6
	43	[5221]	GETTABLE 	R6 R0 K7 ; R6 := R0["Xp"]
	44	[5222]	GETGLOBAL	R7 K9 ; R7 := 0xa94df70b
	45	[5222]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0x54c107f9]
	46	[5222]	GETTABLE 	R9 R0 K7 ; R9 := R0["Xp"]
	47	[5222]	GETTABLE 	R10 R0 K6 ; R10 := R0["Type"]
	48	[5222]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	49	[5223]	GETGLOBAL	R8 K9 ; R8 := 0xa94df70b
	50	[5223]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x4d058675]
	51	[5223]	GETTABLE 	R10 R0 K7 ; R10 := R0["Xp"]
	52	[5223]	GETTABLE 	R11 R0 K6 ; R11 := R0["Type"]
	53	[5223]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	54	[5224]	SUB      	R9 R6 R7 ; R9 := R6 - R7
	55	[5224]	SUB      	R10 R8 R7 ; R10 := R8 - R7
	56	[5224]	DIV      	R9 R9 R10 ; R9 := R9 / R10
	57	[5225]	SETTABLE 	R0 K20 R9 ; R0["XpRatio"] := R9
	58	[5227]	GETGLOBAL	R10 K9 ; R10 := 0xa94df70b
	59	[5227]	SELF     	R10 R10 K21 ; R11 := R10; R10 := R10[0x84fb4327]
	60	[5227]	GETTABLE 	R12 R0 K6 ; R12 := R0["Type"]
	61	[5227]	GETTABLE 	R13 R0 K16 ; R13 := R0["EquippedItem"]
	62	[5227]	GETTABLE 	R13 R13 K22 ; R13 := R13["mPolarized"]
	63	[5227]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	64	[5228]	GETGLOBAL	R11 K23 ; R11 := 0x5bced4c4
	65	[5228]	GETTABLE 	R11 R11 K24 ; R11 := R11[0xac1b386a]
	66	[5228]	MOVE     	R12 R10 ; R12 := R10
	67	[5228]	GETTABLE 	R13 R0 K8 ; R13 := R0["Level"]
	68	[5228]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	69	[5228]	SETTABLE 	R0 K8 R11 ; R0["Level"] := R11
	70	[5229]	GETTABLE 	R11 R0 K8 ; R11 := R0["Level"]
	71	[5229]	EQ       	1 R11 R10 ; if R11 == R10 then PC := 82
	72	[5229]	JMP      	82 ; PC := 82
	73	[5229]	GETTABLE 	R11 R0 K14 ; R11 := R0["LoadOutType"]
	74	[5229]	EQ       	1 R11 K25 ; if R11 == 4.000000 then PC := 82
	75	[5229]	JMP      	82 ; PC := 82
	76	[5229]	GETUPVAL 	R11 U0 ; R11 := U0
	77	[5229]	GETTABLE 	R11 R11 K26 ; R11 := R11[0x6fba4466]
	78	[5229]	MOVE     	R12 R0 ; R12 := R0
	79	[5229]	CALL     	R11 2 2 ; R11 := R11(R12)
	80	[5229]	TEST     	R11 0 ; if not R11 then PC := 83
	81	[5229]	JMP      	83 ; PC := 83
	82	[5230]	SETTABLE 	R0 K20 K27 ; R0["XpRatio"] := nil
	83	[5233]	GETUPVAL 	R11 U1 ; R11 := U1
	84	[5233]	GETTABLE 	R12 R5 K6 ; R12 := R5["Type"]
	85	[5233]	CALL     	R11 2 2 ; R11 := R11(R12)
	86	[5233]	SETTABLE 	R0 K28 R11 ; R0["mStoreItem"] := R11
	87	[5234]	GETTABLE 	R11 R5 K30 ; R11 := R5["CustomName"]
	88	[5234]	SETTABLE 	R0 K29 R11 ; R0["mDisplayName"] := R11
	89	[5236]	SETTABLE 	R0 K31 K27 ; R0["Icon"] := nil
	90	[5237]	GETTABLE 	R11 R5 K32 ; R11 := R5["mModularParts"]
	91	[5237]	EQ       	1 R11 K27 ; if R11 == nil then PC := 110
	92	[5237]	JMP      	110 ; PC := 110
	93	[5238]	GETUPVAL 	R11 U2 ; R11 := U2
	94	[5238]	GETTABLE 	R11 R11 K33 ; R11 := R11[0xda20bf25]
	95	[5238]	GETTABLE 	R12 R5 K32 ; R12 := R5["mModularParts"]
	96	[5238]	GETUPVAL 	R13 U3 ; R13 := U3
	97	[5238]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	98	[5238]	SETTABLE 	R0 K31 R11 ; R0["Icon"] := R11
	99	[5241]	JMP      	110 ; PC := 110
	100	[5212]	FORLOOP  	R1 17 ; R1 += R3; if R1 <= R2 then begin PC := 17; R4 := R1 end
	101	[5243]	JMP      	110 ; PC := 110
	102	[5245]	SETTABLE 	R0 K6 K27 ; R0["Type"] := nil
	103	[5246]	SETTABLE 	R0 K7 K34 ; R0["Xp"] := 0.000000
	104	[5247]	SETTABLE 	R0 K20 K27 ; R0["XpRatio"] := nil
	105	[5248]	SETTABLE 	R0 K8 K34 ; R0["Level"] := 0.000000
	106	[5249]	SETTABLE 	R0 K11 K34 ; R0["PvpValue"] := 0.000000
	107	[5250]	SETTABLE 	R0 K16 K27 ; R0["EquippedItem"] := nil
	108	[5251]	SETTABLE 	R0 K28 K27 ; R0["mStoreItem"] := nil
	109	[5252]	SETTABLE 	R0 K31 K27 ; R0["Icon"] := nil
	110	[5255]	GETUPVAL 	R11 U0 ; R11 := U0
	111	[5255]	GETTABLE 	R11 R11 K35 ; R11 := R11[0x8027b42a]
	112	[5255]	MOVE     	R12 R0 ; R12 := R0
	113	[5255]	CALL     	R11 2 1 ; R11(R12)
	114	[5257]	GETTABLE 	R11 R0 K16 ; R11 := R0["EquippedItem"]
	115	[5257]	EQ       	1 R11 K27 ; if R11 == nil then PC := 123
	116	[5257]	JMP      	123 ; PC := 123
	117	[5258]	GETUPVAL 	R11 U4 ; R11 := U4
	118	[5258]	MOVE     	R12 R0 ; R12 := R0
	119	[5258]	OP_LOADBOOL	R13 1 0 ; R13 := true
	120	[5258]	CALL     	R11 3 3 ; R11,R12 := R11(R12,R13)
	121	[5258]	SETTABLE 	R0 K37 R12 ; R0["BackupCustomization"] := R12
	122	[5258]	SETTABLE 	R0 K36 R11 ; R0["Customization"] := R11
	123	[5260]	RETURN   	R0 1 ; return 

function #95 <?:5262,5300> (79 instructions, 316 bytes at 0000021113B6D8D0)
1 param, 9 slots, 1 upvalue, 0 locals, 22 constants, 0 functions
	1	[5263]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5263]	MOVE     	R2 R0 ; R2 := R0
	3	[5263]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5263]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[5263]	JMP      	8 ; PC := 8
	6	[5264]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[5264]	RETURN   	R1 2 ; return R1 
	8	[5267]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf278f8a1]
	9	[5267]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[5269]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	11	[5269]	MOVE     	R3 R1 ; R3 := R1
	12	[5269]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[5269]	TEST     	R2 0 ; if not R2 then PC := 17
	14	[5269]	JMP      	17 ; PC := 17
	15	[5270]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[5270]	RETURN   	R2 2 ; return R2 
	17	[5274]	LOADNIL  	R2 R2 ; R2 := nil
	18	[5275]	SELF     	R3 R1 K2 ; R4 := R1; R3 := R1[0xf2deaf69]
	19	[5275]	GETGLOBAL	R5 K3 ; R5 := 0xa3d702be
	20	[5275]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	21	[5275]	TEST     	R3 0 ; if not R3 then PC := 30
	22	[5275]	JMP      	30 ; PC := 30
	23	[5276]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	24	[5276]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x42b04007]
	25	[5276]	LOADK    	R5 K6 ; R5 := "/Lotus/Language/Items/GearTackleboxOnly"
	26	[5276]	OP_LOADBOOL	R6 0 0 ; R6 := false
	27	[5276]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	28	[5276]	MOVE     	R2 R3 ; R2 := R3
	29	[5276]	JMP      	41 ; PC := 41
	30	[5277]	SELF     	R3 R1 K2 ; R4 := R1; R3 := R1[0xf2deaf69]
	31	[5277]	GETGLOBAL	R5 K7 ; R5 := 0xe56e60c6
	32	[5277]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	33	[5277]	TEST     	R3 0 ; if not R3 then PC := 41
	34	[5277]	JMP      	41 ; PC := 41
	35	[5278]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	36	[5278]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x42b04007]
	37	[5278]	LOADK    	R5 K8 ; R5 := "/Lotus/Language/Items/GearHuntingOnly"
	38	[5278]	OP_LOADBOOL	R6 0 0 ; R6 := false
	39	[5278]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	40	[5278]	MOVE     	R2 R3 ; R2 := R3
	41	[5281]	EQ       	1 R2 K9 ; if R2 == nil then PC := 49
	42	[5281]	JMP      	49 ; PC := 49
	43	[5282]	GETUPVAL 	R3 U0 ; R3 := U0
	44	[5282]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xe0cba3ca]
	45	[5282]	MOVE     	R4 R2 ; R4 := R2
	46	[5282]	CALL     	R3 2 1 ; R3(R4)
	47	[5283]	OP_LOADBOOL	R3 0 0 ; R3 := false
	48	[5283]	RETURN   	R3 2 ; return R3 
	49	[5288]	GETGLOBAL	R3 K11 ; R3 := 0x7ed0a956
	50	[5288]	LOADK    	R4 K12 ; R4 := "/Lotus/Types/Restoratives/HeavyWeaponSummon"
	51	[5288]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[5289]	EQ       	0 R1 R3 ; if R1 ~= R3 then PC := 77
	53	[5289]	JMP      	77 ; PC := 77
	54	[5290]	GETGLOBAL	R4 K13 ; R4 := 0x25d99d89
	55	[5290]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x62c81b76]
	56	[5290]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[5291]	SELF     	R5 R4 K15 ; R6 := R4; R5 := R4[0xb61abfd2]
	58	[5291]	LOADK    	R7 := 0.000000
	59	[5291]	LOADK    	R8 := 4.000000
	60	[5291]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	61	[5292]	GETTABLE 	R6 R5 K17 ; R6 := R5["mItemId"]
	62	[5292]	GETGLOBAL	R7 K16 ; R7 := 0x6c97a788
	63	[5292]	GETTABLE 	R7 R7 K18 ; R7 := R7["InvalidItemID"]
	64	[5292]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 71
	65	[5292]	JMP      	71 ; PC := 71
	66	[5292]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	67	[5292]	GETTABLE 	R7 R5 K19 ; R7 := R5["mItemType"]
	68	[5292]	CALL     	R6 2 2 ; R6 := R6(R7)
	69	[5292]	TEST     	R6 0 ; if not R6 then PC := 77
	70	[5292]	JMP      	77 ; PC := 77
	71	[5293]	GETUPVAL 	R6 U0 ; R6 := U0
	72	[5293]	GETTABLE 	R6 R6 K20 ; R6 := R6[0xa53f5e12]
	73	[5293]	LOADK    	R7 K21 ; R7 := "/Lotus/Language/Items/Gear_HeavyWeaponNotEquipped"
	74	[5293]	CALL     	R6 2 1 ; R6(R7)
	75	[5295]	OP_LOADBOOL	R6 0 0 ; R6 := false
	76	[5295]	RETURN   	R6 2 ; return R6 
	77	[5299]	OP_LOADBOOL	R6 1 0 ; R6 := true
	78	[5299]	RETURN   	R6 2 ; return R6 
	79	[5300]	RETURN   	R0 1 ; return 

function #96 <?:5302,5306> (9 instructions, 36 bytes at 0000021113B6DE70)
1 param, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[5303]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[5303]	MOVE     	R2 R0 ; R2 := R0
	3	[5303]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5303]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 9
	5	[5303]	JMP      	9 ; PC := 9
	6	[5304]	GETGLOBAL	R1 K3 ; R1 := _T
	7	[5304]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x297e93ca]
	8	[5304]	CALL     	R1 1 1 ; R1()
	9	[5306]	RETURN   	R0 1 ; return 

function #97 <?:5308,5318> (29 instructions, 116 bytes at 0000021113B6DFE0)
0 params, 4 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[5309]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5309]	GETGLOBAL	R1 K1 ; R1 := mSelected
	3	[5309]	GETTABLE 	R1 R1 K2 ; R1 := R1["Item"]
	4	[5309]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5309]	TEST     	R0 1 ; if R0 then PC := 29
	6	[5309]	JMP      	29 ; PC := 29
	7	[5310]	GETGLOBAL	R0 K3 ; R0 := 0x34291f5c
	8	[5310]	GETTABLE 	R0 R0 K4 ; R0 := R0[0xe27b35bb]
	9	[5310]	CALL     	R0 1 2 ; R0 := R0()
	10	[5311]	SETTABLE 	R0 K5 K6 ; R0["dialogType"] := 1.000000
	11	[5312]	GETGLOBAL	R1 K1 ; R1 := mSelected
	12	[5312]	GETTABLE 	R1 R1 K2 ; R1 := R1["Item"]
	13	[5312]	GETTABLE 	R1 R1 K8 ; R1 := R1["mLockDetail"]
	14	[5312]	SETTABLE 	R0 K7 R1 ; R0["locString"] := R1
	15	[5313]	GETGLOBAL	R1 K1 ; R1 := mSelected
	16	[5313]	GETTABLE 	R1 R1 K2 ; R1 := R1["Item"]
	17	[5313]	GETTABLE 	R1 R1 K10 ; R1 := R1["mUnlockTag"]
	18	[5313]	SETTABLE 	R0 K9 R1 ; R0["firstString"] := R1
	19	[5314]	SETTABLE 	R0 K11 K12 ; R0["secondString"] := "/Menu/Confirm_Item_Ok"
	20	[5315]	SELF     	R1 R0 K13 ; R2 := R0; R1 := R0[0xe6ccc5b9]
	21	[5315]	GETGLOBAL	R3 K1 ; R3 := mSelected
	22	[5315]	GETTABLE 	R3 R3 K2 ; R3 := R3["Item"]
	23	[5315]	GETTABLE 	R3 R3 K14 ; R3 := R3["mUnlockCallback"]
	24	[5315]	CALL     	R1 3 1 ; R1(R2,R3)
	25	[5316]	GETUPVAL 	R1 U0 ; R1 := U0
	26	[5316]	GETTABLE 	R1 R1 K15 ; R1 := R1[0xe99b84e7]
	27	[5316]	MOVE     	R2 R0 ; R2 := R0
	28	[5316]	CALL     	R1 2 1 ; R1(R2)
	29	[5318]	RETURN   	R0 1 ; return 

function #98 <?:5320,5507> (779 instructions, 3116 bytes at 0000021113B6E360)
0 params, 37 slots, 9 upvalues, 0 locals, 92 constants, 0 functions
	1	[5321]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5321]	GETGLOBAL	R1 K1 ; R1 := mSelected
	3	[5321]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	4	[5321]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5321]	TEST     	R0 1 ; if R0 then PC := 754
	6	[5321]	JMP      	754 ; PC := 754
	7	[5321]	GETGLOBAL	R0 K1 ; R0 := mSelected
	8	[5321]	GETTABLE 	R0 R0 K3 ; R0 := R0["Cosmetic"]
	9	[5321]	GETTABLE 	R0 R0 K4 ; R0 := R0["PetTrait"]
	10	[5321]	TEST     	R0 0 ; if not R0 then PC := 17
	11	[5321]	JMP      	17 ; PC := 17
	12	[5321]	GETGLOBAL	R0 K1 ; R0 := mSelected
	13	[5321]	GETTABLE 	R0 R0 K3 ; R0 := R0["Cosmetic"]
	14	[5321]	GETTABLE 	R0 R0 K5 ; R0 := R0["Attribute"]
	15	[5321]	TEST     	R0 1 ; if R0 then PC := 754
	16	[5321]	JMP      	754 ; PC := 754
	17	[5322]	GETGLOBAL	R0 K1 ; R0 := mSelected
	18	[5322]	GETTABLE 	R0 R0 K3 ; R0 := R0["Cosmetic"]
	19	[5322]	GETTABLE 	R0 R0 K6 ; R0 := R0["Slot"]
	20	[5322]	EQ       	1 R0 K7 ; if R0 == nil then PC := 31
	21	[5322]	JMP      	31 ; PC := 31
	22	[5323]	GETGLOBAL	R0 K1 ; R0 := mSelected
	23	[5323]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	24	[5323]	GETTABLE 	R0 R0 K8 ; R0 := R0["Customization"]
	25	[5323]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xedd0b8c3]
	26	[5323]	LOADNIL  	R2 R2 ; R2 := nil
	27	[5323]	GETGLOBAL	R3 K1 ; R3 := mSelected
	28	[5323]	GETTABLE 	R3 R3 K3 ; R3 := R3["Cosmetic"]
	29	[5323]	GETTABLE 	R3 R3 K6 ; R3 := R3["Slot"]
	30	[5323]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	31	[5325]	LOADNIL  	R0 R0 ; R0 := nil
	32	[5326]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	33	[5326]	GETGLOBAL	R2 K1 ; R2 := mSelected
	34	[5326]	GETTABLE 	R2 R2 K10 ; R2 := R2["Item"]
	35	[5326]	GETTABLE 	R2 R2 K11 ; R2 := R2["CustomizationType"]
	36	[5326]	CALL     	R1 2 2 ; R1 := R1(R2)
	37	[5326]	TEST     	R1 1 ; if R1 then PC := 48
	38	[5326]	JMP      	48 ; PC := 48
	39	[5327]	GETGLOBAL	R1 K12 ; R1 := 0xb009bbc6
	40	[5327]	GETGLOBAL	R2 K1 ; R2 := mSelected
	41	[5327]	GETTABLE 	R2 R2 K10 ; R2 := R2["Item"]
	42	[5327]	GETTABLE 	R2 R2 K11 ; R2 := R2["CustomizationType"]
	43	[5327]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0xf278f8a1]
	44	[5327]	CALL     	R2 2 0 ; R2,... := R2(R3)
	45	[5327]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	46	[5327]	MOVE     	R0 R1 ; R0 := R1
	47	[5327]	JMP      	88 ; PC := 88
	48	[5328]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	49	[5328]	GETGLOBAL	R2 K1 ; R2 := mSelected
	50	[5328]	GETTABLE 	R2 R2 K10 ; R2 := R2["Item"]
	51	[5328]	GETTABLE 	R2 R2 K14 ; R2 := R2["Type"]
	52	[5328]	CALL     	R1 2 2 ; R1 := R1(R2)
	53	[5328]	TEST     	R1 1 ; if R1 then PC := 62
	54	[5328]	JMP      	62 ; PC := 62
	55	[5329]	GETGLOBAL	R1 K12 ; R1 := 0xb009bbc6
	56	[5329]	GETGLOBAL	R2 K1 ; R2 := mSelected
	57	[5329]	GETTABLE 	R2 R2 K10 ; R2 := R2["Item"]
	58	[5329]	GETTABLE 	R2 R2 K14 ; R2 := R2["Type"]
	59	[5329]	CALL     	R1 2 2 ; R1 := R1(R2)
	60	[5329]	MOVE     	R0 R1 ; R0 := R1
	61	[5329]	JMP      	88 ; PC := 88
	62	[5330]	GETGLOBAL	R1 K1 ; R1 := mSelected
	63	[5330]	GETTABLE 	R1 R1 K10 ; R1 := R1["Item"]
	64	[5330]	GETTABLE 	R1 R1 K15 ; R1 := R1["mPurchasedInfo"]
	65	[5330]	EQ       	1 R1 K7 ; if R1 == nil then PC := 88
	66	[5330]	JMP      	88 ; PC := 88
	67	[5330]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	68	[5330]	GETGLOBAL	R2 K1 ; R2 := mSelected
	69	[5330]	GETTABLE 	R2 R2 K10 ; R2 := R2["Item"]
	70	[5330]	GETTABLE 	R2 R2 K15 ; R2 := R2["mPurchasedInfo"]
	71	[5330]	GETTABLE 	R2 R2 K16 ; R2 := R2["UID"]
	72	[5330]	CALL     	R1 2 2 ; R1 := R1(R2)
	73	[5330]	TEST     	R1 1 ; if R1 then PC := 88
	74	[5330]	JMP      	88 ; PC := 88
	75	[5330]	GETGLOBAL	R1 K1 ; R1 := mSelected
	76	[5330]	GETTABLE 	R1 R1 K10 ; R1 := R1["Item"]
	77	[5330]	GETTABLE 	R1 R1 K15 ; R1 := R1["mPurchasedInfo"]
	78	[5330]	GETTABLE 	R1 R1 K16 ; R1 := R1["UID"]
	79	[5330]	EQ       	1 R1 K17 ; if R1 == "" then PC := 88
	80	[5330]	JMP      	88 ; PC := 88
	81	[5331]	GETGLOBAL	R1 K12 ; R1 := 0xb009bbc6
	82	[5331]	GETGLOBAL	R2 K1 ; R2 := mSelected
	83	[5331]	GETTABLE 	R2 R2 K10 ; R2 := R2["Item"]
	84	[5331]	GETTABLE 	R2 R2 K15 ; R2 := R2["mPurchasedInfo"]
	85	[5331]	GETTABLE 	R2 R2 K16 ; R2 := R2["UID"]
	86	[5331]	CALL     	R1 2 2 ; R1 := R1(R2)
	87	[5331]	MOVE     	R0 R1 ; R0 := R1
	88	[5334]	GETGLOBAL	R1 K1 ; R1 := mSelected
	89	[5334]	GETTABLE 	R1 R1 K3 ; R1 := R1["Cosmetic"]
	90	[5334]	GETTABLE 	R1 R1 K6 ; R1 := R1["Slot"]
	91	[5334]	EQ       	1 R1 K7 ; if R1 == nil then PC := 121
	92	[5334]	JMP      	121 ; PC := 121
	93	[5335]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	94	[5335]	GETGLOBAL	R2 K1 ; R2 := mSelected
	95	[5335]	GETTABLE 	R2 R2 K10 ; R2 := R2["Item"]
	96	[5335]	GETTABLE 	R2 R2 K18 ; R2 := R2["Skin"]
	97	[5335]	CALL     	R1 2 2 ; R1 := R1(R2)
	98	[5335]	TEST     	R1 1 ; if R1 then PC := 112
	99	[5335]	JMP      	112 ; PC := 112
	100	[5336]	GETGLOBAL	R1 K1 ; R1 := mSelected
	101	[5336]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	102	[5336]	GETTABLE 	R1 R1 K8 ; R1 := R1["Customization"]
	103	[5336]	SELF     	R1 R1 K19 ; R2 := R1; R1 := R1[0x569554e7]
	104	[5336]	GETGLOBAL	R3 K1 ; R3 := mSelected
	105	[5336]	GETTABLE 	R3 R3 K10 ; R3 := R3["Item"]
	106	[5336]	GETTABLE 	R3 R3 K18 ; R3 := R3["Skin"]
	107	[5336]	GETGLOBAL	R4 K1 ; R4 := mSelected
	108	[5336]	GETTABLE 	R4 R4 K3 ; R4 := R4["Cosmetic"]
	109	[5336]	GETTABLE 	R4 R4 K6 ; R4 := R4["Slot"]
	110	[5336]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	111	[5336]	JMP      	121 ; PC := 121
	112	[5338]	GETGLOBAL	R1 K1 ; R1 := mSelected
	113	[5338]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	114	[5338]	GETTABLE 	R1 R1 K8 ; R1 := R1["Customization"]
	115	[5338]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xedd0b8c3]
	116	[5338]	MOVE     	R3 R0 ; R3 := R0
	117	[5338]	GETGLOBAL	R4 K1 ; R4 := mSelected
	118	[5338]	GETTABLE 	R4 R4 K3 ; R4 := R4["Cosmetic"]
	119	[5338]	GETTABLE 	R4 R4 K6 ; R4 := R4["Slot"]
	120	[5338]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	121	[5341]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	122	[5341]	MOVE     	R2 R0 ; R2 := R0
	123	[5341]	CALL     	R1 2 2 ; R1 := R1(R2)
	124	[5341]	TEST     	R1 1 ; if R1 then PC := 201
	125	[5341]	JMP      	201 ; PC := 201
	126	[5341]	SELF     	R1 R0 K20 ; R2 := R0; R1 := R0[0xf2deaf69]
	127	[5341]	GETGLOBAL	R3 K21 ; R3 := gLotusSuitCustomizationType
	128	[5341]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	129	[5341]	TEST     	R1 0 ; if not R1 then PC := 201
	130	[5341]	JMP      	201 ; PC := 201
	131	[5342]	LOADK    	R1 := 0.000000
	132	[5342]	LOADK    	R2 := 20.000000
	133	[5342]	LOADK    	R3 := 1.000000
	134	[5342]	FORPREP  	R1 200 ; R1 -= R3; PC := 200
	135	[5343]	GETGLOBAL	R5 K12 ; R5 := 0xb009bbc6
	136	[5343]	SELF     	R6 R0 K23 ; R7 := R0; R6 := R0[0xb8ef5b34]
	137	[5343]	MOVE     	R8 R4 ; R8 := R4
	138	[5343]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	139	[5343]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	140	[5344]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	141	[5344]	MOVE     	R7 R5 ; R7 := R5
	142	[5344]	CALL     	R6 2 2 ; R6 := R6(R7)
	143	[5344]	TEST     	R6 0 ; if not R6 then PC := 188
	144	[5344]	JMP      	188 ; PC := 188
	145	[5346]	GETGLOBAL	R6 K1 ; R6 := mSelected
	146	[5346]	GETTABLE 	R6 R6 K3 ; R6 := R6["Cosmetic"]
	147	[5346]	GETTABLE 	R6 R6 K6 ; R6 := R6["Slot"]
	148	[5346]	EQ       	0 R6 K24 ; if R6 ~= 7.000000 then PC := 188
	149	[5346]	JMP      	188 ; PC := 188
	150	[5346]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	151	[5346]	GETGLOBAL	R7 K1 ; R7 := mSelected
	152	[5346]	GETTABLE 	R7 R7 K2 ; R7 := R7["Element"]
	153	[5346]	GETTABLE 	R7 R7 K14 ; R7 := R7["Type"]
	154	[5346]	CALL     	R6 2 2 ; R6 := R6(R7)
	155	[5346]	TEST     	R6 1 ; if R6 then PC := 188
	156	[5346]	JMP      	188 ; PC := 188
	157	[5346]	GETGLOBAL	R6 K1 ; R6 := mSelected
	158	[5346]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	159	[5346]	GETTABLE 	R6 R6 K14 ; R6 := R6["Type"]
	160	[5346]	SELF     	R6 R6 K20 ; R7 := R6; R6 := R6[0xf2deaf69]
	161	[5346]	GETGLOBAL	R8 K25 ; R8 := 0x01302fb0
	162	[5346]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	163	[5346]	TEST     	R6 0 ; if not R6 then PC := 188
	164	[5346]	JMP      	188 ; PC := 188
	165	[5347]	EQ       	0 R4 K26 ; if R4 ~= 9.000000 then PC := 177
	166	[5347]	JMP      	177 ; PC := 177
	167	[5348]	GETGLOBAL	R6 K12 ; R6 := 0xb009bbc6
	168	[5348]	GETGLOBAL	R7 K1 ; R7 := mSelected
	169	[5348]	GETTABLE 	R7 R7 K2 ; R7 := R7["Element"]
	170	[5348]	GETTABLE 	R7 R7 K27 ; R7 := R7["EquippedItem"]
	171	[5348]	GETTABLE 	R7 R7 K28 ; R7 := R7["mDetails"]
	172	[5348]	GETTABLE 	R7 R7 K29 ; R7 := R7["mDominantTraits"]
	173	[5348]	GETTABLE 	R7 R7 K30 ; R7 := R7["mHead"]
	174	[5348]	CALL     	R6 2 2 ; R6 := R6(R7)
	175	[5348]	MOVE     	R5 R6 ; R5 := R6
	176	[5348]	JMP      	188 ; PC := 188
	177	[5349]	EQ       	0 R4 K31 ; if R4 ~= 10.000000 then PC := 188
	178	[5349]	JMP      	188 ; PC := 188
	179	[5350]	GETGLOBAL	R6 K12 ; R6 := 0xb009bbc6
	180	[5350]	GETGLOBAL	R7 K1 ; R7 := mSelected
	181	[5350]	GETTABLE 	R7 R7 K2 ; R7 := R7["Element"]
	182	[5350]	GETTABLE 	R7 R7 K27 ; R7 := R7["EquippedItem"]
	183	[5350]	GETTABLE 	R7 R7 K28 ; R7 := R7["mDetails"]
	184	[5350]	GETTABLE 	R7 R7 K29 ; R7 := R7["mDominantTraits"]
	185	[5350]	GETTABLE 	R7 R7 K32 ; R7 := R7["mTail"]
	186	[5350]	CALL     	R6 2 2 ; R6 := R6(R7)
	187	[5350]	MOVE     	R5 R6 ; R5 := R6
	188	[5354]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	189	[5354]	MOVE     	R7 R5 ; R7 := R5
	190	[5354]	CALL     	R6 2 2 ; R6 := R6(R7)
	191	[5354]	TEST     	R6 1 ; if R6 then PC := 200
	192	[5354]	JMP      	200 ; PC := 200
	193	[5355]	GETGLOBAL	R6 K1 ; R6 := mSelected
	194	[5355]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	195	[5355]	GETTABLE 	R6 R6 K8 ; R6 := R6["Customization"]
	196	[5355]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0xedd0b8c3]
	197	[5355]	MOVE     	R8 R5 ; R8 := R5
	198	[5355]	MOVE     	R9 R4 ; R9 := R4
	199	[5355]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	200	[5342]	FORLOOP  	R1 135 ; R1 += R3; if R1 <= R2 then begin PC := 135; R4 := R1 end
	201	[5359]	GETGLOBAL	R6 K1 ; R6 := mSelected
	202	[5359]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	203	[5359]	GETTABLE 	R6 R6 K27 ; R6 := R6["EquippedItem"]
	204	[5359]	EQ       	1 R6 K7 ; if R6 == nil then PC := 688
	205	[5359]	JMP      	688 ; PC := 688
	206	[5361]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	207	[5361]	GETGLOBAL	R7 K1 ; R7 := mSelected
	208	[5361]	CALL     	R6 2 2 ; R6 := R6(R7)
	209	[5361]	TEST     	R6 1 ; if R6 then PC := 458
	210	[5361]	JMP      	458 ; PC := 458
	211	[5361]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	212	[5361]	GETGLOBAL	R7 K1 ; R7 := mSelected
	213	[5361]	GETTABLE 	R7 R7 K2 ; R7 := R7["Element"]
	214	[5361]	CALL     	R6 2 2 ; R6 := R6(R7)
	215	[5361]	TEST     	R6 1 ; if R6 then PC := 458
	216	[5361]	JMP      	458 ; PC := 458
	217	[5362]	LOADNIL  	R6 R6 ; R6 := nil
	218	[5363]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	219	[5363]	GETGLOBAL	R8 K1 ; R8 := mSelected
	220	[5363]	GETTABLE 	R8 R8 K10 ; R8 := R8["Item"]
	221	[5363]	CALL     	R7 2 2 ; R7 := R7(R8)
	222	[5363]	TEST     	R7 1 ; if R7 then PC := 281
	223	[5363]	JMP      	281 ; PC := 281
	224	[5364]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	225	[5364]	GETGLOBAL	R8 K1 ; R8 := mSelected
	226	[5364]	GETTABLE 	R8 R8 K10 ; R8 := R8["Item"]
	227	[5364]	GETTABLE 	R8 R8 K11 ; R8 := R8["CustomizationType"]
	228	[5364]	CALL     	R7 2 2 ; R7 := R7(R8)
	229	[5364]	TEST     	R7 1 ; if R7 then PC := 240
	230	[5364]	JMP      	240 ; PC := 240
	231	[5365]	GETGLOBAL	R7 K12 ; R7 := 0xb009bbc6
	232	[5365]	GETGLOBAL	R8 K1 ; R8 := mSelected
	233	[5365]	GETTABLE 	R8 R8 K10 ; R8 := R8["Item"]
	234	[5365]	GETTABLE 	R8 R8 K11 ; R8 := R8["CustomizationType"]
	235	[5365]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0xf278f8a1]
	236	[5365]	CALL     	R8 2 0 ; R8,... := R8(R9)
	237	[5365]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	238	[5365]	MOVE     	R6 R7 ; R6 := R7
	239	[5365]	JMP      	300 ; PC := 300
	240	[5366]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	241	[5366]	GETGLOBAL	R8 K1 ; R8 := mSelected
	242	[5366]	GETTABLE 	R8 R8 K10 ; R8 := R8["Item"]
	243	[5366]	GETTABLE 	R8 R8 K14 ; R8 := R8["Type"]
	244	[5366]	CALL     	R7 2 2 ; R7 := R7(R8)
	245	[5366]	TEST     	R7 1 ; if R7 then PC := 254
	246	[5366]	JMP      	254 ; PC := 254
	247	[5367]	GETGLOBAL	R7 K12 ; R7 := 0xb009bbc6
	248	[5367]	GETGLOBAL	R8 K1 ; R8 := mSelected
	249	[5367]	GETTABLE 	R8 R8 K10 ; R8 := R8["Item"]
	250	[5367]	GETTABLE 	R8 R8 K14 ; R8 := R8["Type"]
	251	[5367]	CALL     	R7 2 2 ; R7 := R7(R8)
	252	[5367]	MOVE     	R6 R7 ; R6 := R7
	253	[5367]	JMP      	300 ; PC := 300
	254	[5368]	GETGLOBAL	R7 K1 ; R7 := mSelected
	255	[5368]	GETTABLE 	R7 R7 K10 ; R7 := R7["Item"]
	256	[5368]	GETTABLE 	R7 R7 K15 ; R7 := R7["mPurchasedInfo"]
	257	[5368]	EQ       	1 R7 K7 ; if R7 == nil then PC := 300
	258	[5368]	JMP      	300 ; PC := 300
	259	[5368]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	260	[5368]	GETGLOBAL	R8 K1 ; R8 := mSelected
	261	[5368]	GETTABLE 	R8 R8 K10 ; R8 := R8["Item"]
	262	[5368]	GETTABLE 	R8 R8 K15 ; R8 := R8["mPurchasedInfo"]
	263	[5368]	GETTABLE 	R8 R8 K16 ; R8 := R8["UID"]
	264	[5368]	CALL     	R7 2 2 ; R7 := R7(R8)
	265	[5368]	TEST     	R7 1 ; if R7 then PC := 300
	266	[5368]	JMP      	300 ; PC := 300
	267	[5368]	GETGLOBAL	R7 K1 ; R7 := mSelected
	268	[5368]	GETTABLE 	R7 R7 K10 ; R7 := R7["Item"]
	269	[5368]	GETTABLE 	R7 R7 K15 ; R7 := R7["mPurchasedInfo"]
	270	[5368]	GETTABLE 	R7 R7 K16 ; R7 := R7["UID"]
	271	[5368]	EQ       	1 R7 K17 ; if R7 == "" then PC := 300
	272	[5368]	JMP      	300 ; PC := 300
	273	[5369]	GETGLOBAL	R7 K12 ; R7 := 0xb009bbc6
	274	[5369]	GETGLOBAL	R8 K1 ; R8 := mSelected
	275	[5369]	GETTABLE 	R8 R8 K10 ; R8 := R8["Item"]
	276	[5369]	GETTABLE 	R8 R8 K15 ; R8 := R8["mPurchasedInfo"]
	277	[5369]	GETTABLE 	R8 R8 K16 ; R8 := R8["UID"]
	278	[5369]	CALL     	R7 2 2 ; R7 := R7(R8)
	279	[5369]	MOVE     	R6 R7 ; R6 := R7
	280	[5370]	JMP      	300 ; PC := 300
	281	[5371]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	282	[5371]	GETGLOBAL	R8 K1 ; R8 := mSelected
	283	[5371]	GETTABLE 	R8 R8 K33 ; R8 := R8["CosmeticItem"]
	284	[5371]	CALL     	R7 2 2 ; R7 := R7(R8)
	285	[5371]	TEST     	R7 1 ; if R7 then PC := 300
	286	[5371]	JMP      	300 ; PC := 300
	287	[5371]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	288	[5371]	GETGLOBAL	R8 K1 ; R8 := mSelected
	289	[5371]	GETTABLE 	R8 R8 K33 ; R8 := R8["CosmeticItem"]
	290	[5371]	GETTABLE 	R8 R8 K14 ; R8 := R8["Type"]
	291	[5371]	CALL     	R7 2 2 ; R7 := R7(R8)
	292	[5371]	TEST     	R7 1 ; if R7 then PC := 300
	293	[5371]	JMP      	300 ; PC := 300
	294	[5372]	GETGLOBAL	R7 K12 ; R7 := 0xb009bbc6
	295	[5372]	GETGLOBAL	R8 K1 ; R8 := mSelected
	296	[5372]	GETTABLE 	R8 R8 K33 ; R8 := R8["CosmeticItem"]
	297	[5372]	GETTABLE 	R8 R8 K14 ; R8 := R8["Type"]
	298	[5372]	CALL     	R7 2 2 ; R7 := R7(R8)
	299	[5372]	MOVE     	R6 R7 ; R6 := R7
	300	[5375]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	301	[5375]	MOVE     	R8 R6 ; R8 := R6
	302	[5375]	CALL     	R7 2 2 ; R7 := R7(R8)
	303	[5375]	TEST     	R7 1 ; if R7 then PC := 458
	304	[5375]	JMP      	458 ; PC := 458
	305	[5375]	SELF     	R7 R6 K20 ; R8 := R6; R7 := R6[0xf2deaf69]
	306	[5375]	GETGLOBAL	R9 K34 ; R9 := 0x9166d883
	307	[5375]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	308	[5375]	TEST     	R7 0 ; if not R7 then PC := 458
	309	[5375]	JMP      	458 ; PC := 458
	310	[5376]	LOADNIL  	R7 R7 ; R7 := nil
	311	[5377]	GETGLOBAL	R8 K1 ; R8 := mSelected
	312	[5377]	GETTABLE 	R8 R8 K2 ; R8 := R8["Element"]
	313	[5377]	GETTABLE 	R8 R8 K35 ; R8 := R8["LoadOutType"]
	314	[5377]	EQ       	0 R8 K36 ; if R8 ~= 1.000000 then PC := 319
	315	[5377]	JMP      	319 ; PC := 319
	316	[5378]	GETGLOBAL	R8 K37 ; R8 := _T
	317	[5378]	GETTABLE 	R7 R8 K38 ; R7 := R8["MenuSentinel"]
	318	[5378]	JMP      	321 ; PC := 321
	319	[5380]	GETGLOBAL	R8 K37 ; R8 := _T
	320	[5380]	GETTABLE 	R7 R8 K39 ; R7 := R8["MenuSuitAvatar"]
	321	[5383]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	322	[5383]	MOVE     	R9 R7 ; R9 := R7
	323	[5383]	CALL     	R8 2 2 ; R8 := R8(R9)
	324	[5383]	TEST     	R8 1 ; if R8 then PC := 458
	325	[5383]	JMP      	458 ; PC := 458
	326	[5384]	LOADNIL  	R8 R8 ; R8 := nil
	327	[5385]	GETGLOBAL	R9 K1 ; R9 := mSelected
	328	[5385]	GETTABLE 	R9 R9 K2 ; R9 := R9["Element"]
	329	[5385]	GETTABLE 	R9 R9 K40 ; R9 := R9["LoadOutId"]
	330	[5385]	EQ       	0 R9 K41 ; if R9 ~= 0.000000 then PC := 350
	331	[5385]	JMP      	350 ; PC := 350
	332	[5386]	SELF     	R9 R7 K42 ; R10 := R7; R9 := R7[0xde321e6f]
	333	[5386]	CALL     	R9 2 2 ; R9 := R9(R10)
	334	[5386]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0xac03381f]
	335	[5386]	CALL     	R9 2 2 ; R9 := R9(R10)
	336	[5386]	TEST     	R9 0 ; if not R9 then PC := 344
	337	[5386]	JMP      	344 ; PC := 344
	338	[5387]	SELF     	R9 R7 K42 ; R10 := R7; R9 := R7[0xde321e6f]
	339	[5387]	CALL     	R9 2 2 ; R9 := R9(R10)
	340	[5387]	SELF     	R9 R9 K44 ; R10 := R9; R9 := R9[0x2303a280]
	341	[5387]	CALL     	R9 2 2 ; R9 := R9(R10)
	342	[5387]	MOVE     	R8 R9 ; R8 := R9
	343	[5387]	JMP      	400 ; PC := 400
	344	[5389]	SELF     	R9 R7 K42 ; R10 := R7; R9 := R7[0xde321e6f]
	345	[5389]	CALL     	R9 2 2 ; R9 := R9(R10)
	346	[5389]	SELF     	R9 R9 K45 ; R10 := R9; R9 := R9[0xf7d48ee0]
	347	[5389]	CALL     	R9 2 2 ; R9 := R9(R10)
	348	[5389]	MOVE     	R8 R9 ; R8 := R9
	349	[5390]	JMP      	400 ; PC := 400
	350	[5391]	GETGLOBAL	R9 K1 ; R9 := mSelected
	351	[5391]	GETTABLE 	R9 R9 K2 ; R9 := R9["Element"]
	352	[5391]	GETTABLE 	R9 R9 K40 ; R9 := R9["LoadOutId"]
	353	[5391]	EQ       	0 R9 K46 ; if R9 ~= 2.000000 then PC := 378
	354	[5391]	JMP      	378 ; PC := 378
	355	[5392]	SELF     	R9 R7 K42 ; R10 := R7; R9 := R7[0xde321e6f]
	356	[5392]	CALL     	R9 2 2 ; R9 := R9(R10)
	357	[5392]	SELF     	R9 R9 K47 ; R10 := R9; R9 := R9[0xe85a2361]
	358	[5392]	LOADK    	R11 := 1.000000
	359	[5392]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	360	[5392]	MOVE     	R8 R9 ; R8 := R9
	361	[5393]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	362	[5393]	MOVE     	R10 R8 ; R10 := R8
	363	[5393]	CALL     	R9 2 2 ; R9 := R9(R10)
	364	[5393]	TEST     	R9 0 ; if not R9 then PC := 400
	365	[5393]	JMP      	400 ; PC := 400
	366	[5393]	GETGLOBAL	R9 K1 ; R9 := mSelected
	367	[5393]	GETTABLE 	R9 R9 K2 ; R9 := R9["Element"]
	368	[5393]	GETTABLE 	R9 R9 K35 ; R9 := R9["LoadOutType"]
	369	[5393]	EQ       	0 R9 K36 ; if R9 ~= 1.000000 then PC := 400
	370	[5393]	JMP      	400 ; PC := 400
	371	[5394]	SELF     	R9 R7 K42 ; R10 := R7; R9 := R7[0xde321e6f]
	372	[5394]	CALL     	R9 2 2 ; R9 := R9(R10)
	373	[5394]	SELF     	R9 R9 K47 ; R10 := R9; R9 := R9[0xe85a2361]
	374	[5394]	LOADK    	R11 := 0.000000
	375	[5394]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	376	[5394]	MOVE     	R8 R9 ; R8 := R9
	377	[5395]	JMP      	400 ; PC := 400
	378	[5396]	GETGLOBAL	R9 K1 ; R9 := mSelected
	379	[5396]	GETTABLE 	R9 R9 K2 ; R9 := R9["Element"]
	380	[5396]	GETTABLE 	R9 R9 K40 ; R9 := R9["LoadOutId"]
	381	[5396]	EQ       	0 R9 K36 ; if R9 ~= 1.000000 then PC := 390
	382	[5396]	JMP      	390 ; PC := 390
	383	[5397]	SELF     	R9 R7 K42 ; R10 := R7; R9 := R7[0xde321e6f]
	384	[5397]	CALL     	R9 2 2 ; R9 := R9(R10)
	385	[5397]	SELF     	R9 R9 K47 ; R10 := R9; R9 := R9[0xe85a2361]
	386	[5397]	LOADK    	R11 := 0.000000
	387	[5397]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	388	[5397]	MOVE     	R8 R9 ; R8 := R9
	389	[5397]	JMP      	400 ; PC := 400
	390	[5398]	GETGLOBAL	R9 K1 ; R9 := mSelected
	391	[5398]	GETTABLE 	R9 R9 K2 ; R9 := R9["Element"]
	392	[5398]	GETTABLE 	R9 R9 K40 ; R9 := R9["LoadOutId"]
	393	[5398]	EQ       	0 R9 K49 ; if R9 ~= 3.000000 then PC := 400
	394	[5398]	JMP      	400 ; PC := 400
	395	[5399]	SELF     	R9 R7 K42 ; R10 := R7; R9 := R7[0xde321e6f]
	396	[5399]	CALL     	R9 2 2 ; R9 := R9(R10)
	397	[5399]	SELF     	R9 R9 K50 ; R10 := R9; R9 := R9[0xbb4a3d82]
	398	[5399]	CALL     	R9 2 2 ; R9 := R9(R10)
	399	[5399]	MOVE     	R8 R9 ; R8 := R9
	400	[5402]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	401	[5402]	MOVE     	R10 R8 ; R10 := R8
	402	[5402]	CALL     	R9 2 2 ; R9 := R9(R10)
	403	[5402]	TEST     	R9 1 ; if R9 then PC := 458
	404	[5402]	JMP      	458 ; PC := 458
	405	[5403]	LOADK    	R9 := 0.000000
	406	[5403]	LOADK    	R10 := 20.000000
	407	[5403]	LOADK    	R11 := 1.000000
	408	[5403]	FORPREP  	R9 457 ; R9 -= R11; PC := 457
	409	[5404]	SELF     	R13 R6 K51 ; R14 := R6; R13 := R6[0x68eb5c84]
	410	[5404]	MOVE     	R15 R12 ; R15 := R12
	411	[5404]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	412	[5405]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	413	[5405]	MOVE     	R15 R13 ; R15 := R13
	414	[5405]	CALL     	R14 2 2 ; R14 := R14(R15)
	415	[5405]	TEST     	R14 1 ; if R14 then PC := 457
	416	[5405]	JMP      	457 ; PC := 457
	417	[5406]	SELF     	R14 R8 K52 ; R15 := R8; R14 := R8[0x0911ae7c]
	418	[5406]	MOVE     	R16 R12 ; R16 := R12
	419	[5406]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	420	[5407]	GETGLOBAL	R15 K1 ; R15 := mSelected
	421	[5407]	GETTABLE 	R15 R15 K2 ; R15 := R15["Element"]
	422	[5407]	GETTABLE 	R15 R15 K8 ; R15 := R15["Customization"]
	423	[5407]	SELF     	R15 R15 K53 ; R16 := R15; R15 := R15[0x2540510f]
	424	[5407]	MOVE     	R17 R12 ; R17 := R12
	425	[5407]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	426	[5408]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	427	[5408]	MOVE     	R17 R15 ; R17 := R15
	428	[5408]	CALL     	R16 2 2 ; R16 := R16(R17)
	429	[5408]	TEST     	R16 1 ; if R16 then PC := 433
	430	[5408]	JMP      	433 ; PC := 433
	431	[5408]	EQ       	0 R15 R14 ; if R15 ~= R14 then PC := 457
	432	[5408]	JMP      	457 ; PC := 457
	433	[5410]	GETGLOBAL	R16 K54 ; R16 := 0x89326c93
	434	[5410]	SELF     	R16 R16 K55 ; R17 := R16; R16 := R16[0x765dad71]
	435	[5410]	GETGLOBAL	R18 K56 ; R18 := 0x88efc25e
	436	[5410]	MOVE     	R19 R13 ; R19 := R13
	437	[5410]	CALL     	R18 2 2 ; R18 := R18(R19)
	438	[5410]	MOVE     	R19 R8 ; R19 := R8
	439	[5410]	GETUPVAL 	R20 U0 ; R20 := U0
	440	[5410]	CALL     	R20 1 0 ; R20,... := R20()
	441	[5410]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	442	[5411]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	443	[5411]	MOVE     	R18 R16 ; R18 := R16
	444	[5411]	CALL     	R17 2 2 ; R17 := R17(R18)
	445	[5411]	TEST     	R17 1 ; if R17 then PC := 457
	446	[5411]	JMP      	457 ; PC := 457
	447	[5412]	SELF     	R17 R16 K57 ; R18 := R16; R17 := R16[0x63af7fef]
	448	[5412]	MOVE     	R19 R12 ; R19 := R12
	449	[5412]	CALL     	R17 3 1 ; R17(R18,R19)
	450	[5413]	GETGLOBAL	R17 K1 ; R17 := mSelected
	451	[5413]	GETTABLE 	R17 R17 K2 ; R17 := R17["Element"]
	452	[5413]	GETTABLE 	R17 R17 K8 ; R17 := R17["Customization"]
	453	[5413]	SELF     	R17 R17 K9 ; R18 := R17; R17 := R17[0xedd0b8c3]
	454	[5413]	MOVE     	R19 R16 ; R19 := R16
	455	[5413]	MOVE     	R20 R12 ; R20 := R12
	456	[5413]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	457	[5403]	FORLOOP  	R9 409 ; R9 += R11; if R9 <= R10 then begin PC := 409; R12 := R9 end
	458	[5423]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	459	[5423]	GETGLOBAL	R18 K1 ; R18 := mSelected
	460	[5423]	GETTABLE 	R18 R18 K2 ; R18 := R18["Element"]
	461	[5423]	GETTABLE 	R18 R18 K14 ; R18 := R18["Type"]
	462	[5423]	CALL     	R17 2 2 ; R17 := R17(R18)
	463	[5423]	TEST     	R17 1 ; if R17 then PC := 659
	464	[5423]	JMP      	659 ; PC := 659
	465	[5424]	GETGLOBAL	R17 K1 ; R17 := mSelected
	466	[5424]	GETTABLE 	R17 R17 K2 ; R17 := R17["Element"]
	467	[5424]	GETTABLE 	R17 R17 K40 ; R17 := R17["LoadOutId"]
	468	[5424]	EQ       	0 R17 K49 ; if R17 ~= 3.000000 then PC := 622
	469	[5424]	JMP      	622 ; PC := 622
	470	[5424]	GETGLOBAL	R17 K1 ; R17 := mSelected
	471	[5424]	GETTABLE 	R17 R17 K3 ; R17 := R17["Cosmetic"]
	472	[5424]	GETTABLE 	R17 R17 K6 ; R17 := R17["Slot"]
	473	[5424]	EQ       	0 R17 K41 ; if R17 ~= 0.000000 then PC := 622
	474	[5424]	JMP      	622 ; PC := 622
	475	[5426]	LOADNIL  	R17 R17 ; R17 := nil
	476	[5427]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	477	[5427]	GETGLOBAL	R19 K1 ; R19 := mSelected
	478	[5427]	GETTABLE 	R19 R19 K2 ; R19 := R19["Element"]
	479	[5427]	GETTABLE 	R19 R19 K14 ; R19 := R19["Type"]
	480	[5427]	CALL     	R18 2 2 ; R18 := R18(R19)
	481	[5427]	TEST     	R18 1 ; if R18 then PC := 513
	482	[5427]	JMP      	513 ; PC := 513
	483	[5427]	GETGLOBAL	R18 K1 ; R18 := mSelected
	484	[5427]	GETTABLE 	R18 R18 K2 ; R18 := R18["Element"]
	485	[5427]	GETTABLE 	R18 R18 K14 ; R18 := R18["Type"]
	486	[5427]	SELF     	R18 R18 K20 ; R19 := R18; R18 := R18[0xf2deaf69]
	487	[5427]	GETGLOBAL	R20 K58 ; R20 := gLotusHybridWeaponType
	488	[5427]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	489	[5427]	TEST     	R18 0 ; if not R18 then PC := 513
	490	[5427]	JMP      	513 ; PC := 513
	491	[5428]	GETGLOBAL	R18 K37 ; R18 := _T
	492	[5428]	GETTABLE 	R18 R18 K39 ; R18 := R18["MenuSuitAvatar"]
	493	[5429]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	494	[5429]	MOVE     	R20 R18 ; R20 := R18
	495	[5429]	CALL     	R19 2 2 ; R19 := R19(R20)
	496	[5429]	TEST     	R19 1 ; if R19 then PC := 519
	497	[5429]	JMP      	519 ; PC := 519
	498	[5430]	SELF     	R19 R18 K42 ; R20 := R18; R19 := R18[0xde321e6f]
	499	[5430]	CALL     	R19 2 2 ; R19 := R19(R20)
	500	[5430]	SELF     	R19 R19 K50 ; R20 := R19; R19 := R19[0xbb4a3d82]
	501	[5430]	CALL     	R19 2 2 ; R19 := R19(R20)
	502	[5431]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	503	[5431]	MOVE     	R21 R19 ; R21 := R19
	504	[5431]	CALL     	R20 2 2 ; R20 := R20(R21)
	505	[5431]	TEST     	R20 1 ; if R20 then PC := 519
	506	[5431]	JMP      	519 ; PC := 519
	507	[5432]	GETGLOBAL	R20 K12 ; R20 := 0xb009bbc6
	508	[5432]	SELF     	R21 R19 K59 ; R22 := R19; R21 := R19[0xcde10c4a]
	509	[5432]	CALL     	R21 2 0 ; R21,... := R21(R22)
	510	[5432]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	511	[5432]	MOVE     	R17 R20 ; R17 := R20
	512	[5434]	JMP      	519 ; PC := 519
	513	[5436]	GETGLOBAL	R20 K12 ; R20 := 0xb009bbc6
	514	[5436]	GETGLOBAL	R21 K1 ; R21 := mSelected
	515	[5436]	GETTABLE 	R21 R21 K2 ; R21 := R21["Element"]
	516	[5436]	GETTABLE 	R21 R21 K14 ; R21 := R21["Type"]
	517	[5436]	CALL     	R20 2 2 ; R20 := R20(R21)
	518	[5436]	MOVE     	R17 R20 ; R17 := R20
	519	[5439]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	520	[5439]	MOVE     	R21 R17 ; R21 := R17
	521	[5439]	CALL     	R20 2 2 ; R20 := R20(R21)
	522	[5439]	TEST     	R20 1 ; if R20 then PC := 659
	523	[5439]	JMP      	659 ; PC := 659
	524	[5439]	SELF     	R20 R17 K20 ; R21 := R17; R20 := R17[0xf2deaf69]
	525	[5439]	GETGLOBAL	R22 K60 ; R22 := gLotusMeleeWeaponType
	526	[5439]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	527	[5439]	TEST     	R20 0 ; if not R20 then PC := 659
	528	[5439]	JMP      	659 ; PC := 659
	529	[5440]	LOADNIL  	R20 R20 ; R20 := nil
	530	[5441]	GETUPVAL 	R21 U1 ; R21 := U1
	531	[5441]	GETGLOBAL	R22 K1 ; R22 := mSelected
	532	[5441]	GETTABLE 	R22 R22 K2 ; R22 := R22["Element"]
	533	[5441]	GETTABLE 	R22 R22 K40 ; R22 := R22["LoadOutId"]
	534	[5441]	GETGLOBAL	R23 K1 ; R23 := mSelected
	535	[5441]	GETTABLE 	R23 R23 K2 ; R23 := R23["Element"]
	536	[5441]	GETTABLE 	R23 R23 K40 ; R23 := R23["LoadOutId"]
	537	[5441]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	538	[5442]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	539	[5442]	MOVE     	R23 R21 ; R23 := R21
	540	[5442]	CALL     	R22 2 2 ; R22 := R22(R23)
	541	[5442]	TEST     	R22 1 ; if R22 then PC := 546
	542	[5442]	JMP      	546 ; PC := 546
	543	[5443]	SELF     	R22 R21 K61 ; R23 := R21; R22 := R21[0xde7a1002]
	544	[5443]	CALL     	R22 2 2 ; R22 := R22(R23)
	545	[5443]	MOVE     	R20 R22 ; R20 := R22
	546	[5446]	LOADNIL  	R22 R22 ; R22 := nil
	547	[5447]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	548	[5447]	MOVE     	R24 R0 ; R24 := R0
	549	[5447]	CALL     	R23 2 2 ; R23 := R23(R24)
	550	[5447]	TEST     	R23 1 ; if R23 then PC := 556
	551	[5447]	JMP      	556 ; PC := 556
	552	[5447]	SELF     	R23 R0 K20 ; R24 := R0; R23 := R0[0xf2deaf69]
	553	[5447]	GETGLOBAL	R25 K21 ; R25 := gLotusSuitCustomizationType
	554	[5447]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	555	[5447]	JMP      	558 ; PC := 558
	556	[5447]	OP_LOADBOOL	R23 0 1 ; R23 := false; PC := 557
	557	[5447]	OP_LOADBOOL	R23 1 0 ; R23 := true
	558	[5448]	TEST     	R23 0 ; if not R23 then PC := 568
	559	[5448]	JMP      	568 ; PC := 568
	560	[5448]	SELF     	R24 R0 K62 ; R25 := R0; R24 := R0[0x33cc84eb]
	561	[5448]	CALL     	R24 2 2 ; R24 := R24(R25)
	562	[5448]	TEST     	R24 0 ; if not R24 then PC := 568
	563	[5448]	JMP      	568 ; PC := 568
	564	[5449]	SELF     	R24 R0 K63 ; R25 := R0; R24 := R0[0xa779cba7]
	565	[5449]	CALL     	R24 2 2 ; R24 := R24(R25)
	566	[5449]	MOVE     	R22 R24 ; R22 := R24
	567	[5449]	JMP      	582 ; PC := 582
	568	[5450]	GETGLOBAL	R24 K0 ; R24 := 0x7b998233
	569	[5450]	MOVE     	R25 R20 ; R25 := R20
	570	[5450]	CALL     	R24 2 2 ; R24 := R24(R25)
	571	[5450]	TEST     	R24 1 ; if R24 then PC := 579
	572	[5450]	JMP      	579 ; PC := 579
	573	[5451]	GETGLOBAL	R24 K22 ; R24 := 0x6c97a788
	574	[5451]	GETTABLE 	R24 R24 K64 ; R24 := R24[0x0958852e]
	575	[5451]	MOVE     	R25 R20 ; R25 := R20
	576	[5451]	CALL     	R24 2 2 ; R24 := R24(R25)
	577	[5451]	MOVE     	R22 R24 ; R22 := R24
	578	[5451]	JMP      	582 ; PC := 582
	579	[5453]	SELF     	R24 R17 K63 ; R25 := R17; R24 := R17[0xa779cba7]
	580	[5453]	CALL     	R24 2 2 ; R24 := R24(R25)
	581	[5453]	MOVE     	R22 R24 ; R22 := R24
	582	[5456]	GETUPVAL 	R24 U2 ; R24 := U2
	583	[5456]	GETGLOBAL	R25 K1 ; R25 := mSelected
	584	[5456]	GETTABLE 	R25 R25 K2 ; R25 := R25["Element"]
	585	[5456]	CALL     	R24 2 2 ; R24 := R24(R25)
	586	[5457]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	587	[5457]	MOVE     	R26 R24 ; R26 := R24
	588	[5457]	CALL     	R25 2 2 ; R25 := R25(R26)
	589	[5457]	TEST     	R25 1 ; if R25 then PC := 659
	590	[5457]	JMP      	659 ; PC := 659
	591	[5457]	SELF     	R25 R24 K65 ; R26 := R24; R25 := R24[0x6ca47e92]
	592	[5457]	MOVE     	R27 R22 ; R27 := R22
	593	[5457]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	594	[5457]	TEST     	R25 1 ; if R25 then PC := 659
	595	[5457]	JMP      	659 ; PC := 659
	596	[5458]	LOADNIL  	R25 R25 ; R25 := nil
	597	[5459]	TEST     	R23 0 ; if not R23 then PC := 604
	598	[5459]	JMP      	604 ; PC := 604
	599	[5460]	SELF     	R26 R0 K51 ; R27 := R0; R26 := R0[0x68eb5c84]
	600	[5460]	LOADK    	R28 := 2.000000
	601	[5460]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	602	[5460]	MOVE     	R25 R26 ; R25 := R26
	603	[5460]	JMP      	609 ; PC := 609
	604	[5462]	GETUPVAL 	R26 U3 ; R26 := U3
	605	[5462]	GETGLOBAL	R27 K1 ; R27 := mSelected
	606	[5462]	GETTABLE 	R27 R27 K2 ; R27 := R27["Element"]
	607	[5462]	CALL     	R26 2 2 ; R26 := R26(R27)
	608	[5462]	MOVE     	R25 R26 ; R25 := R26
	609	[5465]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	610	[5465]	MOVE     	R27 R25 ; R27 := R25
	611	[5465]	CALL     	R26 2 2 ; R26 := R26(R27)
	612	[5465]	TEST     	R26 1 ; if R26 then PC := 659
	613	[5465]	JMP      	659 ; PC := 659
	614	[5466]	GETGLOBAL	R26 K1 ; R26 := mSelected
	615	[5466]	GETTABLE 	R26 R26 K2 ; R26 := R26["Element"]
	616	[5466]	GETTABLE 	R26 R26 K8 ; R26 := R26["Customization"]
	617	[5466]	SELF     	R26 R26 K9 ; R27 := R26; R26 := R26[0xedd0b8c3]
	618	[5466]	MOVE     	R28 R25 ; R28 := R25
	619	[5466]	LOADK    	R29 := 2.000000
	620	[5466]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	621	[5469]	JMP      	659 ; PC := 659
	622	[5470]	GETGLOBAL	R26 K1 ; R26 := mSelected
	623	[5470]	GETTABLE 	R26 R26 K3 ; R26 := R26["Cosmetic"]
	624	[5470]	GETTABLE 	R26 R26 K6 ; R26 := R26["Slot"]
	625	[5470]	EQ       	0 R26 K24 ; if R26 ~= 7.000000 then PC := 659
	626	[5470]	JMP      	659 ; PC := 659
	627	[5472]	GETGLOBAL	R26 K1 ; R26 := mSelected
	628	[5472]	GETTABLE 	R26 R26 K2 ; R26 := R26["Element"]
	629	[5472]	GETTABLE 	R26 R26 K8 ; R26 := R26["Customization"]
	630	[5472]	SELF     	R26 R26 K53 ; R27 := R26; R26 := R26[0x2540510f]
	631	[5472]	LOADK    	R28 := 8.000000
	632	[5472]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	633	[5473]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	634	[5473]	MOVE     	R28 R26 ; R28 := R26
	635	[5473]	CALL     	R27 2 2 ; R27 := R27(R28)
	636	[5473]	TEST     	R27 1 ; if R27 then PC := 659
	637	[5473]	JMP      	659 ; PC := 659
	638	[5474]	SELF     	R27 R26 K20 ; R28 := R26; R27 := R26[0xf2deaf69]
	639	[5474]	GETGLOBAL	R29 K66 ; R29 := 0x7ed0a956
	640	[5474]	LOADK    	R30 K67 ; R30 := "/Lotus/Upgrades/Skins/Catbrows/Armor/CatbrowArmorEmpty"
	641	[5474]	CALL     	R29 2 0 ; R29,... := R29(R30)
	642	[5474]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	643	[5474]	TEST     	R27 1 ; if R27 then PC := 652
	644	[5474]	JMP      	652 ; PC := 652
	645	[5474]	SELF     	R27 R26 K20 ; R28 := R26; R27 := R26[0xf2deaf69]
	646	[5474]	GETGLOBAL	R29 K66 ; R29 := 0x7ed0a956
	647	[5474]	LOADK    	R30 K68 ; R30 := "/Lotus/Upgrades/Skins/Kubrows/Armor/KubrowArmorEmpty"
	648	[5474]	CALL     	R29 2 0 ; R29,... := R29(R30)
	649	[5474]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	650	[5474]	TEST     	R27 0 ; if not R27 then PC := 659
	651	[5474]	JMP      	659 ; PC := 659
	652	[5475]	GETGLOBAL	R27 K1 ; R27 := mSelected
	653	[5475]	GETTABLE 	R27 R27 K2 ; R27 := R27["Element"]
	654	[5475]	GETTABLE 	R27 R27 K8 ; R27 := R27["Customization"]
	655	[5475]	SELF     	R27 R27 K9 ; R28 := R27; R27 := R27[0xedd0b8c3]
	656	[5475]	LOADNIL  	R29 R29 ; R29 := nil
	657	[5475]	LOADK    	R30 := 8.000000
	658	[5475]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	659	[5480]	GETGLOBAL	R27 K1 ; R27 := mSelected
	660	[5480]	GETTABLE 	R27 R27 K2 ; R27 := R27["Element"]
	661	[5480]	GETTABLE 	R27 R27 K27 ; R27 := R27["EquippedItem"]
	662	[5480]	SELF     	R27 R27 K69 ; R28 := R27; R27 := R27[0xaa041663]
	663	[5480]	GETGLOBAL	R29 K1 ; R29 := mSelected
	664	[5480]	GETTABLE 	R29 R29 K2 ; R29 := R29["Element"]
	665	[5480]	GETTABLE 	R29 R29 K8 ; R29 := R29["Customization"]
	666	[5480]	GETGLOBAL	R30 K1 ; R30 := mSelected
	667	[5480]	GETTABLE 	R30 R30 K2 ; R30 := R30["Element"]
	668	[5480]	GETTABLE 	R30 R30 K70 ; R30 := R30["mCustSlot"]
	669	[5480]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	670	[5481]	GETGLOBAL	R27 K71 ; R27 := mInventory
	671	[5481]	SELF     	R27 R27 K72 ; R28 := R27; R27 := R27[0x9b051033]
	672	[5481]	GETGLOBAL	R29 K1 ; R29 := mSelected
	673	[5481]	GETTABLE 	R29 R29 K2 ; R29 := R29["Element"]
	674	[5481]	GETTABLE 	R29 R29 K16 ; R29 := R29["UID"]
	675	[5481]	GETGLOBAL	R30 K1 ; R30 := mSelected
	676	[5481]	GETTABLE 	R30 R30 K2 ; R30 := R30["Element"]
	677	[5481]	GETTABLE 	R30 R30 K70 ; R30 := R30["mCustSlot"]
	678	[5481]	GETGLOBAL	R31 K1 ; R31 := mSelected
	679	[5481]	GETTABLE 	R31 R31 K2 ; R31 := R31["Element"]
	680	[5481]	GETTABLE 	R31 R31 K8 ; R31 := R31["Customization"]
	681	[5481]	CALL     	R27 5 1 ; R27(R28,R29,R30,R31)
	682	[5482]	GETGLOBAL	R27 K73 ; R27 := mLists
	683	[5482]	GETTABLE 	R27 R27 K74 ; R27 := R27["mLoadOutList"]
	684	[5482]	GETTABLE 	R27 R27 K75 ; R27 := R27[0x101bab76]
	685	[5482]	GETGLOBAL	R28 K1 ; R28 := mSelected
	686	[5482]	GETTABLE 	R28 R28 K2 ; R28 := R28["Element"]
	687	[5482]	CALL     	R27 2 1 ; R27(R28)
	688	[5485]	GETGLOBAL	R27 K1 ; R27 := mSelected
	689	[5485]	GETTABLE 	R27 R27 K2 ; R27 := R27["Element"]
	690	[5485]	GETTABLE 	R27 R27 K8 ; R27 := R27["Customization"]
	691	[5485]	SELF     	R27 R27 K53 ; R28 := R27; R27 := R27[0x2540510f]
	692	[5485]	LOADK    	R29 := 0.000000
	693	[5485]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	694	[5486]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	695	[5486]	MOVE     	R29 R27 ; R29 := R27
	696	[5486]	CALL     	R28 2 2 ; R28 := R28(R29)
	697	[5486]	TEST     	R28 1 ; if R28 then PC := 748
	698	[5486]	JMP      	748 ; PC := 748
	699	[5486]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	700	[5486]	GETUPVAL 	R29 U4 ; R29 := U4
	701	[5486]	CALL     	R28 2 2 ; R28 := R28(R29)
	702	[5486]	TEST     	R28 1 ; if R28 then PC := 748
	703	[5486]	JMP      	748 ; PC := 748
	704	[5486]	GETUPVAL 	R28 U4 ; R28 := U4
	705	[5486]	GETTABLE 	R28 R28 K40 ; R28 := R28["LoadOutId"]
	706	[5486]	EQ       	0 R28 K41 ; if R28 ~= 0.000000 then PC := 748
	707	[5486]	JMP      	748 ; PC := 748
	708	[5487]	GETUPVAL 	R28 U5 ; R28 := U5
	709	[5487]	MOVE     	R29 R27 ; R29 := R27
	710	[5487]	CALL     	R28 2 2 ; R28 := R28(R29)
	711	[5488]	GETGLOBAL	R29 K0 ; R29 := 0x7b998233
	712	[5488]	MOVE     	R30 R28 ; R30 := R28
	713	[5488]	CALL     	R29 2 2 ; R29 := R29(R30)
	714	[5488]	TEST     	R29 1 ; if R29 then PC := 754
	715	[5488]	JMP      	754 ; PC := 754
	716	[5489]	GETGLOBAL	R29 K76 ; R29 := 0xae91e43b
	717	[5489]	SELF     	R29 R29 K77 ; R30 := R29; R29 := R29[0x42b04007]
	718	[5489]	GETGLOBAL	R31 K78 ; R31 := 0x64fb1586
	719	[5489]	SELF     	R32 R28 K79 ; R33 := R28; R32 := R28[0xd3a9d01f]
	720	[5489]	CALL     	R32 2 0 ; R32,... := R32(R33)
	721	[5489]	CALL     	R31 0 2 ; R31 := R31(R32,...)
	722	[5489]	OP_LOADBOOL	R32 0 0 ; R32 := false
	723	[5489]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	724	[5490]	GETGLOBAL	R30 K76 ; R30 := 0xae91e43b
	725	[5490]	SELF     	R30 R30 K77 ; R31 := R30; R30 := R30[0x42b04007]
	726	[5490]	GETGLOBAL	R32 K78 ; R32 := 0x64fb1586
	727	[5490]	SELF     	R33 R28 K80 ; R34 := R28; R33 := R28[0x5ba460ac]
	728	[5490]	CALL     	R33 2 0 ; R33,... := R33(R34)
	729	[5490]	CALL     	R32 0 2 ; R32 := R32(R33,...)
	730	[5490]	OP_LOADBOOL	R33 0 0 ; R33 := false
	731	[5490]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	732	[5491]	LOADK    	R31 K81 ; R31 := "<p><font face=\"Noto Sans\"><b>"
	733	[5491]	GETGLOBAL	R32 K82 ; R32 := 0x7f5022cf
	734	[5491]	GETTABLE 	R32 R32 K83 ; R32 := R32[0x3f3e4d12]
	735	[5491]	MOVE     	R33 R29 ; R33 := R29
	736	[5491]	CALL     	R32 2 2 ; R32 := R32(R33)
	737	[5491]	LOADK    	R33 K84 ; R33 := "</b><br>"
	738	[5491]	MOVE     	R34 R30 ; R34 := R30
	739	[5491]	LOADK    	R35 K85 ; R35 := "</font></p>"
	740	[5491]	CONCAT   	R31 R31 R35 ; R31 := R31 .. R32 .. R33 .. R34 .. R35
	741	[5492]	GETGLOBAL	R32 K76 ; R32 := 0xae91e43b
	742	[5492]	SELF     	R32 R32 K86 ; R33 := R32; R32 := R32[0x5f56eeab]
	743	[5492]	LOADK    	R34 K87 ; R34 := "CosmeticDesc"
	744	[5492]	LOADK    	R35 := 29.000000
	745	[5492]	MOVE     	R36 R31 ; R36 := R31
	746	[5492]	CALL     	R32 5 1 ; R32(R33,R34,R35,R36)
	747	[5493]	JMP      	754 ; PC := 754
	748	[5495]	GETGLOBAL	R32 K76 ; R32 := 0xae91e43b
	749	[5495]	SELF     	R32 R32 K86 ; R33 := R32; R32 := R32[0x5f56eeab]
	750	[5495]	LOADK    	R34 K87 ; R34 := "CosmeticDesc"
	751	[5495]	LOADK    	R35 := 29.000000
	752	[5495]	LOADK    	R36 K17 ; R36 := ""
	753	[5495]	CALL     	R32 5 1 ; R32(R33,R34,R35,R36)
	754	[5499]	GETGLOBAL	R32 K73 ; R32 := mLists
	755	[5499]	GETTABLE 	R32 R32 K88 ; R32 := R32["mCosmeticsList"]
	756	[5499]	GETTABLE 	R32 R32 K89 ; R32 := R32[0xb15e6aca]
	757	[5499]	GETGLOBAL	R33 K1 ; R33 := mSelected
	758	[5499]	GETTABLE 	R33 R33 K3 ; R33 := R33["Cosmetic"]
	759	[5499]	CALL     	R32 2 1 ; R32(R33)
	760	[5501]	GETGLOBAL	R32 K1 ; R32 := mSelected
	761	[5501]	SETTABLE 	R32 K90 K7 ; R32["CosmeticPreviousValue"] := nil
	762	[5503]	GETUPVAL 	R32 U6 ; R32 := U6
	763	[5503]	GETGLOBAL	R33 K1 ; R33 := mSelected
	764	[5503]	GETTABLE 	R33 R33 K3 ; R33 := R33["Cosmetic"]
	765	[5503]	CALL     	R32 2 2 ; R32 := R32(R33)
	766	[5503]	TEST     	R32 0 ; if not R32 then PC := 779
	767	[5503]	JMP      	779 ; PC := 779
	768	[5504]	GETUPVAL 	R32 U7 ; R32 := U7
	769	[5504]	GETTABLE 	R32 R32 K91 ; R32 := R32[0xb2cd8e7b]
	770	[5504]	OP_LOADBOOL	R33 0 0 ; R33 := false
	771	[5504]	GETGLOBAL	R34 K1 ; R34 := mSelected
	772	[5504]	GETTABLE 	R34 R34 K2 ; R34 := R34["Element"]
	773	[5504]	CALL     	R32 3 1 ; R32(R33,R34)
	774	[5505]	GETUPVAL 	R32 U8 ; R32 := U8
	775	[5505]	GETGLOBAL	R33 K1 ; R33 := mSelected
	776	[5505]	GETTABLE 	R33 R33 K2 ; R33 := R33["Element"]
	777	[5505]	OP_LOADBOOL	R34 0 0 ; R34 := false
	778	[5505]	CALL     	R32 3 1 ; R32(R33,R34)
	779	[5507]	RETURN   	R0 1 ; return 

function #99 <?:5509,5560> (168 instructions, 672 bytes at 0000021130D1ED60)
2 params, 12 slots, 4 upvalues, 0 locals, 45 constants, 0 functions
	1	[5510]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[5510]	GETTABLE 	R2 R2 K1 ; R2 := R2["BackgroundMovie"]
	3	[5510]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	4	[5510]	LOADK    	R4 K3 ; R4 := "ShowBlockingMessage"
	5	[5510]	LOADK    	R5 K4 ; R5 := "0"
	6	[5510]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[5512]	TEST     	R0 0 ; if not R0 then PC := 162
	8	[5512]	JMP      	162 ; PC := 162
	9	[5513]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[5513]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x659d451f]
	11	[5513]	GETGLOBAL	R3 K6 ; R3 := 0x0032441c
	12	[5513]	GETTABLE 	R3 R3 K7 ; R3 := R3["UISound_SweetenerTwo"]
	13	[5513]	CALL     	R2 2 1 ; R2(R3)
	14	[5514]	GETGLOBAL	R2 K8 ; R2 := mSelected
	15	[5514]	GETTABLE 	R2 R2 K9 ; R2 := R2["Element"]
	16	[5514]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[5514]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x866fb296]
	18	[5514]	GETGLOBAL	R4 K8 ; R4 := mSelected
	19	[5514]	GETTABLE 	R4 R4 K9 ; R4 := R4["Element"]
	20	[5514]	GETTABLE 	R4 R4 K12 ; R4 := R4["LoadOutType"]
	21	[5514]	GETGLOBAL	R5 K8 ; R5 := mSelected
	22	[5514]	GETTABLE 	R5 R5 K9 ; R5 := R5["Element"]
	23	[5514]	GETTABLE 	R5 R5 K13 ; R5 := R5["LoadOutId"]
	24	[5514]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	25	[5514]	SETTABLE 	R2 K10 R3 ; R2["OwnedItems"] := R3
	26	[5515]	GETGLOBAL	R2 K8 ; R2 := mSelected
	27	[5515]	GETTABLE 	R2 R2 K9 ; R2 := R2["Element"]
	28	[5515]	GETTABLE 	R2 R2 K13 ; R2 := R2["LoadOutId"]
	29	[5515]	EQ       	0 R2 K15 ; if R2 ~= 4.000000 then PC := 95
	30	[5515]	JMP      	95 ; PC := 95
	31	[5516]	GETGLOBAL	R2 K16 ; R2 := mLists
	32	[5516]	GETTABLE 	R2 R2 K17 ; R2 := R2["mLoadOutList"]
	33	[5516]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xca30dfb6]
	34	[5516]	GETGLOBAL	R4 K16 ; R4 := mLists
	35	[5516]	GETTABLE 	R4 R4 K17 ; R4 := R4["mLoadOutList"]
	36	[5516]	GETTABLE 	R4 R4 K19 ; R4 := R4["PrimarySlotId"]
	37	[5516]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	38	[5517]	GETGLOBAL	R3 K20 ; R3 := 0x7b998233
	39	[5517]	MOVE     	R4 R2 ; R4 := R2
	40	[5517]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[5517]	TEST     	R3 1 ; if R3 then PC := 64
	42	[5517]	JMP      	64 ; PC := 64
	43	[5520]	GETUPVAL 	R3 U1 ; R3 := U1
	44	[5520]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x866fb296]
	45	[5520]	GETTABLE 	R4 R2 K12 ; R4 := R2["LoadOutType"]
	46	[5520]	GETTABLE 	R5 R2 K13 ; R5 := R2["LoadOutId"]
	47	[5520]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	48	[5520]	SETTABLE 	R2 K10 R3 ; R2["OwnedItems"] := R3
	49	[5521]	GETGLOBAL	R3 K20 ; R3 := 0x7b998233
	50	[5521]	GETTABLE 	R4 R2 K21 ; R4 := R2["EquippedItem"]
	51	[5521]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[5521]	TEST     	R3 1 ; if R3 then PC := 64
	53	[5521]	JMP      	64 ; PC := 64
	54	[5521]	GETTABLE 	R3 R2 K22 ; R3 := R2["UID"]
	55	[5521]	GETUPVAL 	R4 U2 ; R4 := U2
	56	[5521]	GETTABLE 	R4 R4 K23 ; R4 := R4["mItemId"]
	57	[5521]	GETTABLE 	R4 R4 K24 ; R4 := R4["mId"]
	58	[5521]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 64
	59	[5521]	JMP      	64 ; PC := 64
	60	[5522]	GETTABLE 	R3 R2 K21 ; R3 := R2["EquippedItem"]
	61	[5522]	GETUPVAL 	R4 U2 ; R4 := U2
	62	[5522]	GETTABLE 	R4 R4 K26 ; R4 := R4["mItemFeatures"]
	63	[5522]	SETTABLE 	R3 K25 R4 ; R3["mFeatures"] := R4
	64	[5528]	GETGLOBAL	R3 K16 ; R3 := mLists
	65	[5528]	GETTABLE 	R3 R3 K17 ; R3 := R3["mLoadOutList"]
	66	[5528]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xca30dfb6]
	67	[5528]	GETUPVAL 	R5 U0 ; R5 := U0
	68	[5528]	GETTABLE 	R5 R5 K27 ; R5 := R5[0x06d055f9]
	69	[5528]	GETGLOBAL	R6 K8 ; R6 := mSelected
	70	[5528]	GETTABLE 	R6 R6 K9 ; R6 := R6["Element"]
	71	[5528]	GETTABLE 	R6 R6 K12 ; R6 := R6["LoadOutType"]
	72	[5528]	EQ       	1 R6 K28 ; if R6 == 8.000000 then PC := 75
	73	[5528]	JMP      	75 ; PC := 75
	74	[5528]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 75
	75	[5528]	OP_LOADBOOL	R6 1 0 ; R6 := true
	76	[5528]	GETGLOBAL	R7 K16 ; R7 := mLists
	77	[5528]	GETTABLE 	R7 R7 K17 ; R7 := R7["mLoadOutList"]
	78	[5528]	GETTABLE 	R7 R7 K29 ; R7 := R7["HeavyGunSlotId"]
	79	[5528]	GETGLOBAL	R8 K16 ; R8 := mLists
	80	[5528]	GETTABLE 	R8 R8 K17 ; R8 := R8["mLoadOutList"]
	81	[5528]	GETTABLE 	R8 R8 K30 ; R8 := R8["MechGunSlotId"]
	82	[5528]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	83	[5528]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	84	[5529]	GETGLOBAL	R4 K20 ; R4 := 0x7b998233
	85	[5529]	MOVE     	R5 R3 ; R5 := R3
	86	[5529]	CALL     	R4 2 2 ; R4 := R4(R5)
	87	[5529]	TEST     	R4 1 ; if R4 then PC := 95
	88	[5529]	JMP      	95 ; PC := 95
	89	[5530]	GETUPVAL 	R4 U1 ; R4 := U1
	90	[5530]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x866fb296]
	91	[5530]	GETTABLE 	R5 R3 K12 ; R5 := R3["LoadOutType"]
	92	[5530]	GETTABLE 	R6 R3 K13 ; R6 := R3["LoadOutId"]
	93	[5530]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	94	[5530]	SETTABLE 	R3 K10 R4 ; R3["OwnedItems"] := R4
	95	[5534]	GETGLOBAL	R4 K20 ; R4 := 0x7b998233
	96	[5534]	GETUPVAL 	R5 U2 ; R5 := U2
	97	[5534]	CALL     	R4 2 2 ; R4 := R4(R5)
	98	[5534]	TEST     	R4 1 ; if R4 then PC := 148
	99	[5534]	JMP      	148 ; PC := 148
	100	[5535]	GETGLOBAL	R4 K8 ; R4 := mSelected
	101	[5535]	GETTABLE 	R4 R4 K31 ; R4 := R4["Item"]
	102	[5535]	EQ       	1 R4 K32 ; if R4 == nil then PC := 118
	103	[5535]	JMP      	118 ; PC := 118
	104	[5536]	GETGLOBAL	R4 K8 ; R4 := mSelected
	105	[5536]	GETTABLE 	R4 R4 K31 ; R4 := R4["Item"]
	106	[5536]	GETTABLE 	R4 R4 K33 ; R4 := R4["RawItem"]
	107	[5536]	GETGLOBAL	R5 K34 ; R5 := 0x25d99d89
	108	[5536]	SELF     	R5 R5 K35 ; R6 := R5; R5 := R5[0x25a6e75e]
	109	[5536]	CALL     	R5 2 2 ; R5 := R5(R6)
	110	[5536]	SELF     	R5 R5 K36 ; R6 := R5; R5 := R5[0xc70965fe]
	111	[5536]	GETGLOBAL	R7 K8 ; R7 := mSelected
	112	[5536]	GETTABLE 	R7 R7 K31 ; R7 := R7["Item"]
	113	[5536]	GETTABLE 	R7 R7 K33 ; R7 := R7["RawItem"]
	114	[5536]	GETTABLE 	R7 R7 K22 ; R7 := R7["UID"]
	115	[5536]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	116	[5536]	SETTABLE 	R4 K31 R5 ; R4["Item"] := R5
	117	[5536]	JMP      	148 ; PC := 148
	118	[5537]	GETGLOBAL	R4 K8 ; R4 := mSelected
	119	[5537]	GETTABLE 	R4 R4 K9 ; R4 := R4["Element"]
	120	[5537]	GETTABLE 	R4 R4 K22 ; R4 := R4["UID"]
	121	[5537]	GETGLOBAL	R5 K14 ; R5 := 0x6c97a788
	122	[5537]	GETTABLE 	R5 R5 K37 ; R5 := R5["InvalidItemID"]
	123	[5537]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 148
	124	[5537]	JMP      	148 ; PC := 148
	125	[5538]	LOADK    	R4 := 1.000000
	126	[5538]	GETGLOBAL	R5 K8 ; R5 := mSelected
	127	[5538]	GETTABLE 	R5 R5 K9 ; R5 := R5["Element"]
	128	[5538]	GETTABLE 	R5 R5 K10 ; R5 := R5["OwnedItems"]
	129	[5538]	LEN      	R5 R5 ; R5 := # R5
	130	[5538]	LOADK    	R6 := 1.000000
	131	[5538]	FORPREP  	R4 147 ; R4 -= R6; PC := 147
	132	[5539]	GETGLOBAL	R8 K8 ; R8 := mSelected
	133	[5539]	GETTABLE 	R8 R8 K9 ; R8 := R8["Element"]
	134	[5539]	GETTABLE 	R8 R8 K10 ; R8 := R8["OwnedItems"]
	135	[5539]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	136	[5540]	GETTABLE 	R9 R8 K22 ; R9 := R8["UID"]
	137	[5540]	GETGLOBAL	R10 K8 ; R10 := mSelected
	138	[5540]	GETTABLE 	R10 R10 K9 ; R10 := R10["Element"]
	139	[5540]	GETTABLE 	R10 R10 K22 ; R10 := R10["UID"]
	140	[5540]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 147
	141	[5540]	JMP      	147 ; PC := 147
	142	[5541]	GETGLOBAL	R9 K8 ; R9 := mSelected
	143	[5541]	GETTABLE 	R9 R9 K9 ; R9 := R9["Element"]
	144	[5541]	GETTABLE 	R10 R8 K31 ; R10 := R8["Item"]
	145	[5541]	SETTABLE 	R9 K21 R10 ; R9["EquippedItem"] := R10
	146	[5543]	JMP      	148 ; PC := 148
	147	[5538]	FORLOOP  	R4 132 ; R4 += R6; if R4 <= R5 then begin PC := 132; R7 := R4 end
	148	[5549]	GETUPVAL 	R9 U2 ; R9 := U2
	149	[5549]	GETTABLE 	R9 R9 K38 ; R9 := R9["mOperations"]
	150	[5549]	GETTABLE 	R9 R9 K39 ; R9 := R9[1.000000]
	151	[5549]	GETTABLE 	R9 R9 K40 ; R9 := R9["mOperationType"]
	152	[5550]	EQ       	0 R9 K41 ; if R9 ~= 11.000000 then PC := 157
	153	[5550]	JMP      	157 ; PC := 157
	154	[5551]	GETUPVAL 	R10 U1 ; R10 := U1
	155	[5551]	GETTABLE 	R10 R10 K42 ; R10 := R10[0x7d70c833]
	156	[5551]	CALL     	R10 1 1 ; R10()
	157	[5554]	LOADNIL  	R10 R10 ; R10 := nil
	158	[5554]	SETUPVAL 	R10 U2 ; U2 := R10
	159	[5555]	GETUPVAL 	R10 U3 ; R10 := U3
	160	[5555]	CALL     	R10 1 1 ; R10()
	161	[5555]	JMP      	168 ; PC := 168
	162	[5557]	GETUPVAL 	R10 U0 ; R10 := U0
	163	[5557]	GETTABLE 	R10 R10 K43 ; R10 := R10[0xe0cba3ca]
	164	[5557]	LOADK    	R11 K44 ; R11 := "/Lotus/Language/Menu/Loadout_ApplyFailed"
	165	[5557]	CALL     	R10 2 1 ; R10(R11)
	166	[5558]	LOADNIL  	R10 R10 ; R10 := nil
	167	[5558]	SETUPVAL 	R10 U2 ; U2 := R10
	168	[5560]	RETURN   	R0 1 ; return 

function #100 <?:5562,5570> (30 instructions, 120 bytes at 0000021130D1F6F0)
1 param, 5 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[5563]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[5563]	MOVE     	R2 R0 ; R2 := R0
	3	[5563]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5563]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 28
	5	[5563]	JMP      	28 ; PC := 28
	6	[5563]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	7	[5563]	GETGLOBAL	R2 K4 ; R2 := 0x25d99d89
	8	[5563]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[5563]	TEST     	R1 1 ; if R1 then PC := 28
	10	[5563]	JMP      	28 ; PC := 28
	11	[5563]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	12	[5563]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[5563]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[5563]	TEST     	R1 1 ; if R1 then PC := 28
	15	[5563]	JMP      	28 ; PC := 28
	16	[5564]	GETGLOBAL	R1 K4 ; R1 := 0x25d99d89
	17	[5564]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xa7d9c1da]
	18	[5564]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[5564]	LOADK    	R4 K6 ; R4 := "OnUpgradeApplied"
	20	[5564]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	21	[5566]	GETGLOBAL	R1 K7 ; R1 := _T
	22	[5566]	GETTABLE 	R1 R1 K8 ; R1 := R1["BackgroundMovie"]
	23	[5566]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xe4162eed]
	24	[5566]	LOADK    	R3 K10 ; R3 := "ShowBlockingMessage"
	25	[5566]	LOADK    	R4 K11 ; R4 := "2"
	26	[5566]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	27	[5566]	JMP      	30 ; PC := 30
	28	[5568]	LOADNIL  	R1 R1 ; R1 := nil
	29	[5568]	SETUPVAL 	R1 U0 ; U0 := R1
	30	[5570]	RETURN   	R0 1 ; return 

function #101 <?:5572,5580> (27 instructions, 108 bytes at 0000021130D1F970)
1 param, 6 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[5573]	EQ       	0 R0 K0 ; if R0 ~= "true" then PC := 21
	2	[5573]	JMP      	21 ; PC := 21
	3	[5574]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	4	[5574]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[5574]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[5574]	TEST     	R1 1 ; if R1 then PC := 27
	7	[5574]	JMP      	27 ; PC := 27
	8	[5574]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[5574]	GETTABLE 	R1 R1 K2 ; R1 := R1["mOperations"]
	10	[5574]	LEN      	R1 R1 ; R1 := # R1
	11	[5574]	LE       	0 K3 R1 ; if 1.000000 > R1 then PC := 27
	12	[5574]	JMP      	27 ; PC := 27
	13	[5575]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	14	[5575]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	15	[5575]	LOADK    	R3 K6 ; R3 := "OnConfirmUnlockFeature"
	16	[5575]	GETGLOBAL	R4 K7 ; R4 := 0x64fb1586
	17	[5575]	LOADK    	R5 := 4.000000
	18	[5575]	CALL     	R4 2 0 ; R4,... := R4(R5)
	19	[5575]	CALL     	R1 0 1 ; R1(R2,...)
	20	[5576]	JMP      	27 ; PC := 27
	21	[5577]	EQ       	0 R0 K9 ; if R0 ~= "false" then PC := 27
	22	[5577]	JMP      	27 ; PC := 27
	23	[5578]	GETUPVAL 	R1 U1 ; R1 := U1
	24	[5578]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xe0cba3ca]
	25	[5578]	LOADK    	R2 K11 ; R2 := "/Lotus/Language/Menu/Global_PurchaseFailed"
	26	[5578]	CALL     	R1 2 1 ; R1(R2)
	27	[5580]	RETURN   	R0 1 ; return 

function #102 <?:5582,6042> (1436 instructions, 5744 bytes at 0000021130D1FBD0)
2 params, 67 slots, 35 upvalues, 0 locals, 202 constants, 1 function
	1	[5583]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5583]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	3	[5583]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5583]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[5583]	JMP      	7 ; PC := 7
	6	[5584]	RETURN   	R0 1 ; return 
	7	[5587]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[5587]	CALL     	R2 1 2 ; R2 := R2()
	9	[5587]	TEST     	R2 1 ; if R2 then PC := 1409
	10	[5587]	JMP      	1409 ; PC := 1409
	11	[5587]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	12	[5587]	GETGLOBAL	R3 K2 ; R3 := mSelected
	13	[5587]	GETTABLE 	R3 R3 K3 ; R3 := R3["Item"]
	14	[5587]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[5587]	TEST     	R2 1 ; if R2 then PC := 1409
	16	[5587]	JMP      	1409 ; PC := 1409
	17	[5587]	GETUPVAL 	R2 U1 ; R2 := U1
	18	[5587]	GETTABLE 	R2 R2 K4 ; R2 := R2["EquipmentChangesBlocked"]
	19	[5587]	TEST     	R2 1 ; if R2 then PC := 1409
	20	[5587]	JMP      	1409 ; PC := 1409
	21	[5588]	OP_LOADBOOL	R2 0 0 ; R2 := false
	22	[5589]	OP_LOADBOOL	R3 0 0 ; R3 := false
	23	[5590]	GETGLOBAL	R4 K5 ; R4 := _T
	24	[5590]	GETTABLE 	R4 R4 K6 ; R4 := R4["LoadoutSaveRequired"]
	25	[5591]	GETGLOBAL	R5 K5 ; R5 := _T
	26	[5591]	SETTABLE 	R5 K6 K7 ; R5["LoadoutSaveRequired"] := true
	27	[5592]	GETUPVAL 	R5 U2 ; R5 := U2
	28	[5592]	GETUPVAL 	R6 U3 ; R6 := U3
	29	[5592]	GETTABLE 	R6 R6 K8 ; R6 := R6["SWAPPING_ITEM"]
	30	[5592]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 762
	31	[5592]	JMP      	762 ; PC := 762
	32	[5592]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	33	[5592]	GETGLOBAL	R6 K2 ; R6 := mSelected
	34	[5592]	GETTABLE 	R6 R6 K9 ; R6 := R6["Element"]
	35	[5592]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[5592]	TEST     	R5 1 ; if R5 then PC := 762
	37	[5592]	JMP      	762 ; PC := 762
	38	[5595]	GETGLOBAL	R5 K10 ; R5 := 0x6c97a788
	39	[5595]	GETTABLE 	R5 R5 K11 ; R5 := R5["InvalidItemID"]
	40	[5596]	GETGLOBAL	R6 K2 ; R6 := mSelected
	41	[5596]	GETTABLE 	R6 R6 K3 ; R6 := R6["Item"]
	42	[5596]	GETTABLE 	R6 R6 K12 ; R6 := R6["mPurchasedInfo"]
	43	[5596]	EQ       	1 R6 K13 ; if R6 == nil then PC := 49
	44	[5596]	JMP      	49 ; PC := 49
	45	[5597]	GETGLOBAL	R6 K2 ; R6 := mSelected
	46	[5597]	GETTABLE 	R6 R6 K3 ; R6 := R6["Item"]
	47	[5597]	GETTABLE 	R6 R6 K12 ; R6 := R6["mPurchasedInfo"]
	48	[5597]	GETTABLE 	R5 R6 K14 ; R5 := R6["UID"]
	49	[5600]	GETGLOBAL	R6 K1 ; R6 := 0x25d99d89
	50	[5600]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0xf84d3744]
	51	[5600]	MOVE     	R8 R5 ; R8 := R5
	52	[5600]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	53	[5600]	TEST     	R6 0 ; if not R6 then PC := 60
	54	[5600]	JMP      	60 ; PC := 60
	55	[5601]	GETGLOBAL	R6 K5 ; R6 := _T
	56	[5601]	SETTABLE 	R6 K6 R4 ; R6["LoadoutSaveRequired"] := R4
	57	[5602]	OP_LOADBOOL	R6 1 0 ; R6 := true
	58	[5602]	SETUPVAL 	R6 U4 ; U4 := R6
	59	[5603]	RETURN   	R0 1 ; return 
	60	[5606]	GETGLOBAL	R6 K2 ; R6 := mSelected
	61	[5606]	GETTABLE 	R6 R6 K3 ; R6 := R6["Item"]
	62	[5606]	GETTABLE 	R6 R6 K16 ; R6 := R6["mFirstOption"]
	63	[5606]	TEST     	R6 0 ; if not R6 then PC := 113
	64	[5606]	JMP      	113 ; PC := 113
	65	[5607]	GETGLOBAL	R6 K17 ; R6 := 0x34291f5c
	66	[5607]	GETTABLE 	R6 R6 K18 ; R6 := R6[0xe27b35bb]
	67	[5607]	CALL     	R6 1 2 ; R6 := R6()
	68	[5608]	GETGLOBAL	R7 K2 ; R7 := mSelected
	69	[5608]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	70	[5608]	GETTABLE 	R7 R7 K19 ; R7 := R7["mSecondOption"]
	71	[5608]	TEST     	R7 0 ; if not R7 then PC := 93
	72	[5608]	JMP      	93 ; PC := 93
	73	[5609]	SETTABLE 	R6 K20 K21 ; R6["dialogType"] := 5.000000
	74	[5610]	GETGLOBAL	R7 K2 ; R7 := mSelected
	75	[5610]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	76	[5610]	GETTABLE 	R7 R7 K23 ; R7 := R7["mOptionDesc"]
	77	[5610]	SETTABLE 	R6 K22 R7 ; R6[0xd08c3966] := R7
	78	[5611]	GETGLOBAL	R7 K2 ; R7 := mSelected
	79	[5611]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	80	[5611]	GETTABLE 	R7 R7 K16 ; R7 := R7["mFirstOption"]
	81	[5611]	SETTABLE 	R6 K24 R7 ; R6[0xc8802016] := R7
	82	[5612]	GETGLOBAL	R7 K2 ; R7 := mSelected
	83	[5612]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	84	[5612]	GETTABLE 	R7 R7 K19 ; R7 := R7["mSecondOption"]
	85	[5612]	SETTABLE 	R6 K25 R7 ; R6[0x33bdd652] := R7
	86	[5613]	SETTABLE 	R6 K26 K27 ; R6["thirdString"] := "/Menu/Confirm_Item_Cancel"
	87	[5614]	SELF     	R7 R6 K28 ; R8 := R6; R7 := R6[0xe6ccc5b9]
	88	[5614]	GETGLOBAL	R9 K2 ; R9 := mSelected
	89	[5614]	GETTABLE 	R9 R9 K3 ; R9 := R9["Item"]
	90	[5614]	GETTABLE 	R9 R9 K29 ; R9 := R9["mCallback"]
	91	[5614]	CALL     	R7 3 1 ; R7(R8,R9)
	92	[5614]	JMP      	108 ; PC := 108
	93	[5616]	SETTABLE 	R6 K20 K30 ; R6["dialogType"] := 1.000000
	94	[5617]	GETGLOBAL	R7 K2 ; R7 := mSelected
	95	[5617]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	96	[5617]	GETTABLE 	R7 R7 K23 ; R7 := R7["mOptionDesc"]
	97	[5617]	SETTABLE 	R6 K22 R7 ; R6[0xd08c3966] := R7
	98	[5618]	GETGLOBAL	R7 K2 ; R7 := mSelected
	99	[5618]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	100	[5618]	GETTABLE 	R7 R7 K16 ; R7 := R7["mFirstOption"]
	101	[5618]	SETTABLE 	R6 K24 R7 ; R6[0xc8802016] := R7
	102	[5619]	SETTABLE 	R6 K25 K27 ; R6["secondString"] := "/Menu/Confirm_Item_Cancel"
	103	[5620]	SELF     	R7 R6 K28 ; R8 := R6; R7 := R6[0xe6ccc5b9]
	104	[5620]	GETGLOBAL	R9 K2 ; R9 := mSelected
	105	[5620]	GETTABLE 	R9 R9 K3 ; R9 := R9["Item"]
	106	[5620]	GETTABLE 	R9 R9 K29 ; R9 := R9["mCallback"]
	107	[5620]	CALL     	R7 3 1 ; R7(R8,R9)
	108	[5622]	GETUPVAL 	R7 U5 ; R7 := U5
	109	[5622]	GETTABLE 	R7 R7 K31 ; R7 := R7[0xe99b84e7]
	110	[5622]	MOVE     	R8 R6 ; R8 := R6
	111	[5622]	CALL     	R7 2 1 ; R7(R8)
	112	[5623]	RETURN   	R0 1 ; return 
	113	[5626]	GETGLOBAL	R7 K2 ; R7 := mSelected
	114	[5626]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	115	[5626]	GETTABLE 	R7 R7 K32 ; R7 := R7["mLockDetail"]
	116	[5626]	TEST     	R7 0 ; if not R7 then PC := 136
	117	[5626]	JMP      	136 ; PC := 136
	118	[5627]	GETGLOBAL	R7 K2 ; R7 := mSelected
	119	[5627]	GETTABLE 	R7 R7 K3 ; R7 := R7["Item"]
	120	[5627]	GETTABLE 	R7 R7 K33 ; R7 := R7["mUnlockCallback"]
	121	[5627]	TEST     	R7 0 ; if not R7 then PC := 129
	122	[5627]	JMP      	129 ; PC := 129
	123	[5628]	GETGLOBAL	R7 K34 ; R7 := 0xae91e43b
	124	[5628]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0xe4162eed]
	125	[5628]	LOADK    	R9 K36 ; R9 := "ShowItemUnlockDialog"
	126	[5628]	LOADK    	R10 K37 ; R10 := ""
	127	[5628]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	128	[5628]	JMP      	135 ; PC := 135
	129	[5630]	GETUPVAL 	R7 U5 ; R7 := U5
	130	[5630]	GETTABLE 	R7 R7 K38 ; R7 := R7[0xe0cba3ca]
	131	[5630]	GETGLOBAL	R8 K2 ; R8 := mSelected
	132	[5630]	GETTABLE 	R8 R8 K3 ; R8 := R8["Item"]
	133	[5630]	GETTABLE 	R8 R8 K32 ; R8 := R8["mLockDetail"]
	134	[5630]	CALL     	R7 2 1 ; R7(R8)
	135	[5632]	RETURN   	R0 1 ; return 
	136	[5635]	GETUPVAL 	R7 U6 ; R7 := U6
	137	[5635]	GETTABLE 	R7 R7 K39 ; R7 := R7["LoadOutType"]
	138	[5636]	GETGLOBAL	R8 K2 ; R8 := mSelected
	139	[5636]	GETTABLE 	R8 R8 K3 ; R8 := R8["Item"]
	140	[5636]	GETTABLE 	R8 R8 K40 ; R8 := R8["LoadOutId"]
	141	[5636]	EQ       	0 R8 K41 ; if R8 ~= 4.000000 then PC := 252
	142	[5636]	JMP      	252 ; PC := 252
	143	[5636]	EQ       	1 R7 K42 ; if R7 == 8.000000 then PC := 252
	144	[5636]	JMP      	252 ; PC := 252
	145	[5636]	GETGLOBAL	R8 K2 ; R8 := mSelected
	146	[5636]	GETTABLE 	R8 R8 K3 ; R8 := R8["Item"]
	147	[5636]	GETTABLE 	R8 R8 K43 ; R8 := R8["RawItem"]
	148	[5636]	GETTABLE 	R8 R8 K3 ; R8 := R8["Item"]
	149	[5636]	SELF     	R8 R8 K44 ; R9 := R8; R8 := R8[0xdbfbf6c0]
	150	[5636]	LOADK    	R10 := 2.000000
	151	[5636]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	152	[5636]	TEST     	R8 1 ; if R8 then PC := 252
	153	[5636]	JMP      	252 ; PC := 252
	154	[5637]	GETGLOBAL	R8 K2 ; R8 := mSelected
	155	[5637]	GETTABLE 	R8 R8 K3 ; R8 := R8["Item"]
	156	[5637]	GETTABLE 	R8 R8 K43 ; R8 := R8["RawItem"]
	157	[5638]	GETUPVAL 	R9 U5 ; R9 := U5
	158	[5638]	GETTABLE 	R9 R9 K45 ; R9 := R9[0x06d055f9]
	159	[5638]	GETGLOBAL	R10 K5 ; R10 := _T
	160	[5638]	GETTABLE 	R10 R10 K46 ; R10 := R10["mMechaSuitMode"]
	161	[5638]	GETGLOBAL	R11 K5 ; R11 := _T
	162	[5638]	GETTABLE 	R11 R11 K47 ; R11 := R11["MechAvatar"]
	163	[5638]	GETGLOBAL	R12 K5 ; R12 := _T
	164	[5638]	GETTABLE 	R12 R12 K48 ; R12 := R12["MenuSuitAvatar"]
	165	[5638]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	166	[5639]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	167	[5639]	MOVE     	R11 R8 ; R11 := R8
	168	[5639]	CALL     	R10 2 2 ; R10 := R10(R11)
	169	[5639]	TEST     	R10 1 ; if R10 then PC := 186
	170	[5639]	JMP      	186 ; PC := 186
	171	[5639]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	172	[5639]	GETTABLE 	R11 R8 K3 ; R11 := R8["Item"]
	173	[5639]	CALL     	R10 2 2 ; R10 := R10(R11)
	174	[5639]	TEST     	R10 1 ; if R10 then PC := 186
	175	[5639]	JMP      	186 ; PC := 186
	176	[5639]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	177	[5639]	GETGLOBAL	R11 K1 ; R11 := 0x25d99d89
	178	[5639]	CALL     	R10 2 2 ; R10 := R10(R11)
	179	[5639]	TEST     	R10 1 ; if R10 then PC := 186
	180	[5639]	JMP      	186 ; PC := 186
	181	[5639]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	182	[5639]	MOVE     	R11 R9 ; R11 := R9
	183	[5639]	CALL     	R10 2 2 ; R10 := R10(R11)
	184	[5639]	TEST     	R10 0 ; if not R10 then PC := 194
	185	[5639]	JMP      	194 ; PC := 194
	186	[5640]	GETUPVAL 	R10 U5 ; R10 := U5
	187	[5640]	GETTABLE 	R10 R10 K38 ; R10 := R10[0xe0cba3ca]
	188	[5640]	LOADK    	R11 K49 ; R11 := "/Lotus/Language/Menu/Loadout_ApplyFailed"
	189	[5640]	CALL     	R10 2 1 ; R10(R11)
	190	[5641]	GETGLOBAL	R10 K50 ; R10 := 0x3d106989
	191	[5641]	LOADK    	R11 K51 ; R11 := "Failed to upgrade item, missing owned item."
	192	[5641]	CALL     	R10 2 1 ; R10(R11)
	193	[5642]	RETURN   	R0 1 ; return 
	194	[5644]	SELF     	R10 R9 K52 ; R11 := R9; R10 := R9[0xde321e6f]
	195	[5644]	CALL     	R10 2 2 ; R10 := R10(R11)
	196	[5644]	SELF     	R10 R10 K53 ; R11 := R10; R10 := R10[0xe85a2361]
	197	[5644]	LOADK    	R12 := 10.000000
	198	[5644]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	199	[5645]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	200	[5645]	MOVE     	R12 R10 ; R12 := R10
	201	[5645]	CALL     	R11 2 2 ; R11 := R11(R12)
	202	[5645]	TEST     	R11 0 ; if not R11 then PC := 205
	203	[5645]	JMP      	205 ; PC := 205
	204	[5646]	RETURN   	R0 1 ; return 
	205	[5649]	GETTABLE 	R11 R8 K3 ; R11 := R8["Item"]
	206	[5649]	SELF     	R11 R11 K44 ; R12 := R11; R11 := R11[0xdbfbf6c0]
	207	[5649]	LOADK    	R13 := 0.000000
	208	[5649]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	209	[5649]	TEST     	R11 0 ; if not R11 then PC := 220
	210	[5649]	JMP      	220 ; PC := 220
	211	[5650]	GETUPVAL 	R11 U8 ; R11 := U8
	212	[5650]	GETTABLE 	R11 R11 K54 ; R11 := R11[0xc5e71a15]
	213	[5650]	GETTABLE 	R12 R8 K3 ; R12 := R8["Item"]
	214	[5650]	MOVE     	R13 R10 ; R13 := R10
	215	[5650]	LOADK    	R14 := 2.000000
	216	[5650]	LOADK    	R15 := 28.000000
	217	[5650]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	218	[5650]	SETUPVAL 	R11 U7 ; U7 := R11
	219	[5650]	JMP      	228 ; PC := 228
	220	[5652]	GETUPVAL 	R11 U8 ; R11 := U8
	221	[5652]	GETTABLE 	R11 R11 K54 ; R11 := R11[0xc5e71a15]
	222	[5652]	GETTABLE 	R12 R8 K3 ; R12 := R8["Item"]
	223	[5652]	MOVE     	R13 R10 ; R13 := R10
	224	[5652]	LOADK    	R14 := 0.000000
	225	[5652]	LOADK    	R15 := 28.000000
	226	[5652]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	227	[5652]	SETUPVAL 	R11 U7 ; U7 := R11
	228	[5655]	GETUPVAL 	R11 U8 ; R11 := U8
	229	[5655]	GETTABLE 	R11 R11 K55 ; R11 := R11[0x60c655fc]
	230	[5655]	GETUPVAL 	R12 U7 ; R12 := U7
	231	[5655]	LOADK    	R13 K56 ; R13 := "OnConfirmUnlockFeature"
	232	[5655]	GETGLOBAL	R14 K34 ; R14 := 0xae91e43b
	233	[5655]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	234	[5656]	EQ       	0 R11 K57 ; if R11 ~= false then PC := 247
	235	[5656]	JMP      	247 ; PC := 247
	236	[5657]	GETUPVAL 	R12 U8 ; R12 := U8
	237	[5657]	GETTABLE 	R12 R12 K58 ; R12 := R12[0xa3064de9]
	238	[5657]	GETUPVAL 	R13 U7 ; R13 := U7
	239	[5657]	LOADK    	R14 K59 ; R14 := "OnBuyFeatureItem"
	240	[5657]	GETGLOBAL	R15 K34 ; R15 := 0xae91e43b
	241	[5657]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	242	[5657]	TEST     	R12 1 ; if R12 then PC := 251
	243	[5657]	JMP      	251 ; PC := 251
	244	[5658]	LOADNIL  	R12 R12 ; R12 := nil
	245	[5658]	SETUPVAL 	R12 U7 ; U7 := R12
	246	[5659]	JMP      	251 ; PC := 251
	247	[5660]	EQ       	0 R11 K13 ; if R11 ~= nil then PC := 251
	248	[5660]	JMP      	251 ; PC := 251
	249	[5661]	LOADNIL  	R12 R12 ; R12 := nil
	250	[5661]	SETUPVAL 	R12 U7 ; U7 := R12
	251	[5664]	RETURN   	R0 1 ; return 
	252	[5667]	GETGLOBAL	R12 K2 ; R12 := mSelected
	253	[5667]	GETTABLE 	R12 R12 K9 ; R12 := R12["Element"]
	254	[5667]	GETTABLE 	R12 R12 K14 ; R12 := R12["UID"]
	255	[5667]	EQ       	1 R12 R5 ; if R12 == R5 then PC := 263
	256	[5667]	JMP      	263 ; PC := 263
	257	[5668]	GETGLOBAL	R12 K2 ; R12 := mSelected
	258	[5668]	GETTABLE 	R12 R12 K9 ; R12 := R12["Element"]
	259	[5668]	SETTABLE 	R12 K60 K61 ; R12["mModSlot"] := 0.000000
	260	[5669]	GETGLOBAL	R12 K2 ; R12 := mSelected
	261	[5669]	GETTABLE 	R12 R12 K9 ; R12 := R12["Element"]
	262	[5669]	SETTABLE 	R12 K62 K61 ; R12["mCustSlot"] := 0.000000
	263	[5672]	GETGLOBAL	R12 K2 ; R12 := mSelected
	264	[5672]	GETTABLE 	R12 R12 K9 ; R12 := R12["Element"]
	265	[5672]	SETTABLE 	R12 K14 R5 ; R12["UID"] := R5
	266	[5674]	GETGLOBAL	R12 K63 ; R12 := mCurrentLoadout
	267	[5674]	GETGLOBAL	R13 K2 ; R13 := mSelected
	268	[5674]	GETTABLE 	R13 R13 K9 ; R13 := R13["Element"]
	269	[5674]	GETTABLE 	R13 R13 K39 ; R13 := R13["LoadOutType"]
	270	[5674]	GETTABLE 	R12 R12 R13 ; R12 := R12[R13]
	271	[5674]	SELF     	R12 R12 K64 ; R13 := R12; R12 := R12[0x2abbe722]
	272	[5674]	GETGLOBAL	R14 K2 ; R14 := mSelected
	273	[5674]	GETTABLE 	R14 R14 K9 ; R14 := R14["Element"]
	274	[5674]	GETTABLE 	R14 R14 K40 ; R14 := R14["LoadOutId"]
	275	[5674]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	276	[5675]	GETTABLE 	R13 R12 K65 ; R13 := R12["mItemId"]
	277	[5675]	GETGLOBAL	R14 K2 ; R14 := mSelected
	278	[5675]	GETTABLE 	R14 R14 K9 ; R14 := R14["Element"]
	279	[5675]	GETTABLE 	R14 R14 K14 ; R14 := R14["UID"]
	280	[5675]	SETTABLE 	R13 K66 R14 ; R13["mId"] := R14
	281	[5676]	GETGLOBAL	R13 K2 ; R13 := mSelected
	282	[5676]	GETTABLE 	R13 R13 K9 ; R13 := R13["Element"]
	283	[5676]	GETTABLE 	R13 R13 K60 ; R13 := R13["mModSlot"]
	284	[5676]	SETTABLE 	R12 K60 R13 ; R12["mModSlot"] := R13
	285	[5677]	GETGLOBAL	R13 K2 ; R13 := mSelected
	286	[5677]	GETTABLE 	R13 R13 K9 ; R13 := R13["Element"]
	287	[5677]	GETTABLE 	R13 R13 K62 ; R13 := R13["mCustSlot"]
	288	[5677]	SETTABLE 	R12 K62 R13 ; R12["mCustSlot"] := R13
	289	[5678]	GETGLOBAL	R13 K63 ; R13 := mCurrentLoadout
	290	[5678]	GETGLOBAL	R14 K2 ; R14 := mSelected
	291	[5678]	GETTABLE 	R14 R14 K9 ; R14 := R14["Element"]
	292	[5678]	GETTABLE 	R14 R14 K39 ; R14 := R14["LoadOutType"]
	293	[5678]	GETTABLE 	R13 R13 R14 ; R13 := R13[R14]
	294	[5678]	SELF     	R13 R13 K67 ; R14 := R13; R13 := R13[0xffca321e]
	295	[5678]	GETGLOBAL	R15 K2 ; R15 := mSelected
	296	[5678]	GETTABLE 	R15 R15 K9 ; R15 := R15["Element"]
	297	[5678]	GETTABLE 	R15 R15 K40 ; R15 := R15["LoadOutId"]
	298	[5678]	MOVE     	R16 R12 ; R16 := R12
	299	[5678]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	300	[5680]	GETGLOBAL	R13 K68 ; R13 := mInventory
	301	[5680]	SELF     	R13 R13 K69 ; R14 := R13; R13 := R13[0x6beb8ae1]
	302	[5680]	GETGLOBAL	R15 K2 ; R15 := mSelected
	303	[5680]	GETTABLE 	R15 R15 K9 ; R15 := R15["Element"]
	304	[5680]	GETTABLE 	R15 R15 K39 ; R15 := R15["LoadOutType"]
	305	[5680]	GETGLOBAL	R16 K63 ; R16 := mCurrentLoadout
	306	[5680]	GETGLOBAL	R17 K2 ; R17 := mSelected
	307	[5680]	GETTABLE 	R17 R17 K9 ; R17 := R17["Element"]
	308	[5680]	GETTABLE 	R17 R17 K39 ; R17 := R17["LoadOutType"]
	309	[5680]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	310	[5680]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	311	[5682]	GETGLOBAL	R13 K1 ; R13 := 0x25d99d89
	312	[5682]	SELF     	R13 R13 K70 ; R14 := R13; R13 := R13[0x400b84a1]
	313	[5682]	GETGLOBAL	R15 K2 ; R15 := mSelected
	314	[5682]	GETTABLE 	R15 R15 K9 ; R15 := R15["Element"]
	315	[5682]	GETTABLE 	R15 R15 K39 ; R15 := R15["LoadOutType"]
	316	[5682]	GETGLOBAL	R16 K63 ; R16 := mCurrentLoadout
	317	[5682]	GETGLOBAL	R17 K2 ; R17 := mSelected
	318	[5682]	GETTABLE 	R17 R17 K9 ; R17 := R17["Element"]
	319	[5682]	GETTABLE 	R17 R17 K39 ; R17 := R17["LoadOutType"]
	320	[5682]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	321	[5682]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	322	[5683]	OP_LOADBOOL	R3 1 0 ; R3 := true
	323	[5685]	GETUPVAL 	R13 U9 ; R13 := U9
	324	[5685]	GETGLOBAL	R14 K2 ; R14 := mSelected
	325	[5685]	GETTABLE 	R14 R14 K9 ; R14 := R14["Element"]
	326	[5685]	CALL     	R13 2 1 ; R13(R14)
	327	[5687]	OP_LOADBOOL	R13 1 0 ; R13 := true
	328	[5687]	SETGLOBALHASH	R13 K71 ; mInputBlocked := R13
	329	[5688]	GETGLOBAL	R13 K72 ; R13 := mLists
	330	[5688]	GETTABLE 	R13 R13 K73 ; R13 := R13["mLoadOutList"]
	331	[5688]	SELF     	R13 R13 K74 ; R14 := R13; R13 := R13[0xea061e98]
	332	[5688]	GETGLOBAL	R15 K72 ; R15 := mLists
	333	[5688]	GETTABLE 	R15 R15 K73 ; R15 := R15["mLoadOutList"]
	334	[5688]	GETTABLE 	R15 R15 K75 ; R15 := R15["mElementDrawCallback"]
	335	[5688]	CALL     	R13 3 1 ; R13(R14,R15)
	336	[5689]	GETUPVAL 	R13 U10 ; R13 := U10
	337	[5689]	GETUPVAL 	R14 U3 ; R14 := U3
	338	[5689]	GETTABLE 	R14 R14 K76 ; R14 := R14["SELECTING_PART"]
	339	[5689]	CALL     	R13 2 1 ; R13(R14)
	340	[5690]	GETGLOBAL	R13 K72 ; R13 := mLists
	341	[5690]	GETTABLE 	R13 R13 K73 ; R13 := R13["mLoadOutList"]
	342	[5690]	GETTABLE 	R13 R13 K77 ; R13 := R13[0xad85f085]
	343	[5690]	GETGLOBAL	R14 K2 ; R14 := mSelected
	344	[5690]	GETTABLE 	R14 R14 K9 ; R14 := R14["Element"]
	345	[5690]	CALL     	R13 2 1 ; R13(R14)
	346	[5691]	OP_LOADBOOL	R2 1 0 ; R2 := true
	347	[5692]	GETUPVAL 	R13 U11 ; R13 := U11
	348	[5692]	OP_LOADBOOL	R14 0 0 ; R14 := false
	349	[5692]	CALL     	R13 2 1 ; R13(R14)
	350	[5694]	GETGLOBAL	R13 K2 ; R13 := mSelected
	351	[5694]	GETTABLE 	R13 R13 K9 ; R13 := R13["Element"]
	352	[5694]	GETTABLE 	R13 R13 K39 ; R13 := R13["LoadOutType"]
	353	[5694]	EQ       	0 R13 K30 ; if R13 ~= 1.000000 then PC := 362
	354	[5694]	JMP      	362 ; PC := 362
	355	[5694]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	356	[5694]	GETGLOBAL	R14 K78 ; R14 := mSentinelType
	357	[5694]	CALL     	R13 2 2 ; R13 := R13(R14)
	358	[5694]	TEST     	R13 1 ; if R13 then PC := 362
	359	[5694]	JMP      	362 ; PC := 362
	360	[5695]	GETGLOBAL	R13 K5 ; R13 := _T
	361	[5695]	SETTABLE 	R13 K79 K7 ; R13["mSentinelMode"] := true
	362	[5698]	GETGLOBAL	R13 K2 ; R13 := mSelected
	363	[5698]	GETTABLE 	R13 R13 K9 ; R13 := R13["Element"]
	364	[5698]	GETTABLE 	R13 R13 K39 ; R13 := R13["LoadOutType"]
	365	[5698]	EQ       	0 R13 K30 ; if R13 ~= 1.000000 then PC := 571
	366	[5698]	JMP      	571 ; PC := 571
	367	[5698]	GETGLOBAL	R13 K2 ; R13 := mSelected
	368	[5698]	GETTABLE 	R13 R13 K9 ; R13 := R13["Element"]
	369	[5698]	GETTABLE 	R13 R13 K40 ; R13 := R13["LoadOutId"]
	370	[5698]	EQ       	0 R13 K61 ; if R13 ~= 0.000000 then PC := 571
	371	[5698]	JMP      	571 ; PC := 571
	372	[5698]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	373	[5698]	GETGLOBAL	R14 K78 ; R14 := mSentinelType
	374	[5698]	CALL     	R13 2 2 ; R13 := R13(R14)
	375	[5698]	TEST     	R13 1 ; if R13 then PC := 571
	376	[5698]	JMP      	571 ; PC := 571
	377	[5699]	GETGLOBAL	R13 K78 ; R13 := mSentinelType
	378	[5699]	SELF     	R13 R13 K80 ; R14 := R13; R13 := R13[0xf2deaf69]
	379	[5699]	GETGLOBAL	R15 K81 ; R15 := gPetPowerSuitType
	380	[5699]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	381	[5699]	TEST     	R13 0 ; if not R13 then PC := 432
	382	[5699]	JMP      	432 ; PC := 432
	383	[5700]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	384	[5700]	GETUPVAL 	R14 U12 ; R14 := U12
	385	[5700]	CALL     	R13 2 2 ; R13 := R13(R14)
	386	[5700]	TEST     	R13 1 ; if R13 then PC := 393
	387	[5700]	JMP      	393 ; PC := 393
	388	[5700]	GETUPVAL 	R13 U12 ; R13 := U12
	389	[5700]	GETTABLE 	R13 R13 K65 ; R13 := R13["mItemId"]
	390	[5700]	GETTABLE 	R13 R13 K66 ; R13 := R13["mId"]
	391	[5700]	EQ       	1 R5 R13 ; if R5 == R13 then PC := 1229
	392	[5700]	JMP      	1229 ; PC := 1229
	393	[5701]	GETUPVAL 	R13 U13 ; R13 := U13
	394	[5701]	GETUPVAL 	R14 U14 ; R14 := U14
	395	[5701]	GETTABLE 	R14 R14 K82 ; R14 := R14["UI_MODE_IN_SPACE_SHIP"]
	396	[5701]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 426
	397	[5701]	JMP      	426 ; PC := 426
	398	[5702]	GETGLOBAL	R13 K68 ; R13 := mInventory
	399	[5702]	SELF     	R13 R13 K83 ; R14 := R13; R13 := R13[0xa855881a]
	400	[5702]	CALL     	R13 2 2 ; R13 := R13(R14)
	401	[5703]	LOADK    	R14 := 1.000000
	402	[5703]	LEN      	R15 R13 ; R15 := # R13
	403	[5703]	LOADK    	R16 := 1.000000
	404	[5703]	FORPREP  	R14 417 ; R14 -= R16; PC := 417
	405	[5704]	GETTABLE 	R18 R13 R17 ; R18 := R13[R17]
	406	[5704]	GETTABLE 	R18 R18 K65 ; R18 := R18["mItemId"]
	407	[5704]	GETTABLE 	R18 R18 K66 ; R18 := R18["mId"]
	408	[5704]	EQ       	0 R5 R18 ; if R5 ~= R18 then PC := 417
	409	[5704]	JMP      	417 ; PC := 417
	410	[5705]	GETUPVAL 	R18 U15 ; R18 := U15
	411	[5705]	GETTABLE 	R19 R13 R17 ; R19 := R13[R17]
	412	[5705]	GETGLOBAL	R20 K2 ; R20 := mSelected
	413	[5705]	GETTABLE 	R20 R20 K9 ; R20 := R20["Element"]
	414	[5705]	GETTABLE 	R20 R20 K84 ; R20 := R20["Type"]
	415	[5705]	CALL     	R18 3 1 ; R18(R19,R20)
	416	[5706]	JMP      	418 ; PC := 418
	417	[5703]	FORLOOP  	R14 405 ; R14 += R16; if R14 <= R15 then begin PC := 405; R17 := R14 end
	418	[5710]	GETGLOBAL	R18 K85 ; R18 := 0xbe190284
	419	[5710]	SELF     	R18 R18 K86 ; R19 := R18; R18 := R18[0x7cf8123f]
	420	[5710]	LOADK    	R20 := 1.000000
	421	[5710]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	422	[5711]	GETUPVAL 	R19 U16 ; R19 := U16
	423	[5711]	GETTABLE 	R19 R19 K87 ; R19 := R19[0x705e38df]
	424	[5711]	MOVE     	R20 R18 ; R20 := R18
	425	[5711]	CALL     	R19 2 1 ; R19(R20)
	426	[5713]	GETGLOBAL	R19 K1 ; R19 := 0x25d99d89
	427	[5713]	SELF     	R19 R19 K88 ; R20 := R19; R19 := R19[0xd03a1fb0]
	428	[5713]	MOVE     	R21 R5 ; R21 := R5
	429	[5713]	LOADK    	R22 K89 ; R22 := "OnRetrievePetFromStasisResults"
	430	[5713]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	431	[5714]	JMP      	1229 ; PC := 1229
	432	[5716]	GETGLOBAL	R19 K63 ; R19 := mCurrentLoadout
	433	[5716]	GETTABLE 	R19 R19 K30 ; R19 := R19[1.000000]
	434	[5716]	SELF     	R19 R19 K64 ; R20 := R19; R19 := R19[0x2abbe722]
	435	[5716]	LOADK    	R21 := 2.000000
	436	[5716]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	437	[5716]	MOVE     	R12 R19 ; R12 := R19
	438	[5718]	GETGLOBAL	R19 K78 ; R19 := mSentinelType
	439	[5718]	SELF     	R19 R19 K80 ; R20 := R19; R19 := R19[0xf2deaf69]
	440	[5718]	GETGLOBAL	R21 K90 ; R21 := 0x70b83a36
	441	[5718]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	442	[5718]	TEST     	R19 0 ; if not R19 then PC := 469
	443	[5718]	JMP      	469 ; PC := 469
	444	[5718]	GETUPVAL 	R19 U13 ; R19 := U13
	445	[5718]	GETUPVAL 	R20 U14 ; R20 := U14
	446	[5718]	GETTABLE 	R20 R20 K82 ; R20 := R20["UI_MODE_IN_SPACE_SHIP"]
	447	[5718]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 469
	448	[5718]	JMP      	469 ; PC := 469
	449	[5719]	GETGLOBAL	R19 K68 ; R19 := mInventory
	450	[5719]	SELF     	R19 R19 K91 ; R20 := R19; R19 := R19[0x91a3eddf]
	451	[5719]	CALL     	R19 2 2 ; R19 := R19(R20)
	452	[5720]	LOADK    	R20 := 1.000000
	453	[5720]	LEN      	R21 R19 ; R21 := # R19
	454	[5720]	LOADK    	R22 := 1.000000
	455	[5720]	FORPREP  	R20 468 ; R20 -= R22; PC := 468
	456	[5721]	GETTABLE 	R24 R19 R23 ; R24 := R19[R23]
	457	[5721]	GETTABLE 	R24 R24 K65 ; R24 := R24["mItemId"]
	458	[5721]	GETTABLE 	R24 R24 K66 ; R24 := R24["mId"]
	459	[5721]	EQ       	0 R5 R24 ; if R5 ~= R24 then PC := 468
	460	[5721]	JMP      	468 ; PC := 468
	461	[5722]	GETUPVAL 	R24 U17 ; R24 := U17
	462	[5722]	GETTABLE 	R25 R19 R23 ; R25 := R19[R23]
	463	[5722]	GETGLOBAL	R26 K2 ; R26 := mSelected
	464	[5722]	GETTABLE 	R26 R26 K9 ; R26 := R26["Element"]
	465	[5722]	GETTABLE 	R26 R26 K84 ; R26 := R26["Type"]
	466	[5722]	CALL     	R24 3 1 ; R24(R25,R26)
	467	[5723]	JMP      	469 ; PC := 469
	468	[5720]	FORLOOP  	R20 456 ; R20 += R22; if R20 <= R21 then begin PC := 456; R23 := R20 end
	469	[5728]	GETGLOBAL	R24 K92 ; R24 := 0xb009bbc6
	470	[5728]	GETGLOBAL	R25 K78 ; R25 := mSentinelType
	471	[5728]	CALL     	R24 2 2 ; R24 := R24(R25)
	472	[5730]	GETGLOBAL	R25 K72 ; R25 := mLists
	473	[5730]	GETTABLE 	R25 R25 K73 ; R25 := R25["mLoadOutList"]
	474	[5730]	SELF     	R25 R25 K93 ; R26 := R25; R25 := R25[0xca30dfb6]
	475	[5730]	GETGLOBAL	R27 K2 ; R27 := mSelected
	476	[5730]	GETTABLE 	R27 R27 K9 ; R27 := R27["Element"]
	477	[5730]	GETTABLE 	R27 R27 K94 ; R27 := R27["Id"]
	478	[5730]	ADD      	R27 R27 K30 ; R27 := R27 + 1.000000
	479	[5730]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	480	[5732]	GETGLOBAL	R26 K68 ; R26 := mInventory
	481	[5732]	SELF     	R26 R26 K95 ; R27 := R26; R26 := R26[0xa2c6d8b7]
	482	[5732]	CALL     	R26 2 2 ; R26 := R26(R27)
	483	[5733]	GETTABLE 	R27 R12 K65 ; R27 := R12["mItemId"]
	484	[5733]	GETTABLE 	R27 R27 K66 ; R27 := R27["mId"]
	485	[5733]	GETTABLE 	R28 R25 K14 ; R28 := R25["UID"]
	486	[5733]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 489
	487	[5733]	JMP      	489 ; PC := 489
	488	[5733]	OP_LOADBOOL	R27 0 1 ; R27 := false; PC := 489
	489	[5733]	OP_LOADBOOL	R27 1 0 ; R27 := true
	490	[5734]	LOADNIL  	R28 R28 ; R28 := nil
	491	[5735]	GETGLOBAL	R29 K96 ; R29 := 0xc8802016
	492	[5735]	MOVE     	R30 R26 ; R30 := R26
	493	[5735]	CALL     	R29 2 4 ; R29,R30,R31 := R29(R30)
	494	[5735]	JMP      	525 ; PC := 525
	495	[5736]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	496	[5736]	MOVE     	R35 R33 ; R35 := R33
	497	[5736]	CALL     	R34 2 2 ; R34 := R34(R35)
	498	[5736]	TEST     	R34 1 ; if R34 then PC := 525
	499	[5736]	JMP      	525 ; PC := 525
	500	[5737]	EQ       	0 R28 K13 ; if R28 ~= nil then PC := 508
	501	[5737]	JMP      	508 ; PC := 508
	502	[5737]	SELF     	R34 R24 K97 ; R35 := R24; R34 := R24[0x24b8c21f]
	503	[5737]	GETTABLE 	R36 R33 K98 ; R36 := R33["mItemType"]
	504	[5737]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	505	[5737]	TEST     	R34 0 ; if not R34 then PC := 508
	506	[5737]	JMP      	508 ; PC := 508
	507	[5738]	MOVE     	R28 R33 ; R28 := R33
	508	[5741]	GETTABLE 	R34 R33 K65 ; R34 := R33["mItemId"]
	509	[5741]	GETTABLE 	R34 R34 K66 ; R34 := R34["mId"]
	510	[5741]	GETTABLE 	R35 R12 K65 ; R35 := R12["mItemId"]
	511	[5741]	GETTABLE 	R35 R35 K66 ; R35 := R35["mId"]
	512	[5741]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 520
	513	[5741]	JMP      	520 ; PC := 520
	514	[5741]	SELF     	R34 R24 K97 ; R35 := R24; R34 := R24[0x24b8c21f]
	515	[5741]	GETTABLE 	R36 R33 K98 ; R36 := R33["mItemType"]
	516	[5741]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	517	[5741]	TEST     	R34 1 ; if R34 then PC := 520
	518	[5741]	JMP      	520 ; PC := 520
	519	[5742]	OP_LOADBOOL	R27 0 0 ; R27 := false
	520	[5745]	TEST     	R27 1 ; if R27 then PC := 525
	521	[5745]	JMP      	525 ; PC := 525
	522	[5745]	EQ       	1 R28 K13 ; if R28 == nil then PC := 525
	523	[5745]	JMP      	525 ; PC := 525
	524	[5746]	JMP      	527 ; PC := 527
	525	[5735]	TFORLOOP 	R29 2 ; R32,R33 := R29(R30,R31); if R32 ~= nil then begin PC = 495; R31 := R32 end
	526	[5748]	JMP      	495 ; PC := 495
	527	[5751]	TEST     	R27 1 ; if R27 then PC := 567
	528	[5751]	JMP      	567 ; PC := 567
	529	[5753]	GETGLOBAL	R34 K2 ; R34 := mSelected
	530	[5753]	GETTABLE 	R34 R34 K9 ; R34 := R34["Element"]
	531	[5754]	GETGLOBAL	R35 K2 ; R35 := mSelected
	532	[5754]	SETTABLE 	R35 K9 R25 ; R35["Element"] := R25
	533	[5756]	NEWTABLE 	R35 0 0 ; R35 := {}
	534	[5757]	EQ       	1 R28 K13 ; if R28 == nil then PC := 540
	535	[5757]	JMP      	540 ; PC := 540
	536	[5758]	GETTABLE 	R36 R28 K65 ; R36 := R28["mItemId"]
	537	[5758]	GETTABLE 	R36 R36 K66 ; R36 := R36["mId"]
	538	[5758]	SETTABLE 	R35 K14 R36 ; R35["UID"] := R36
	539	[5758]	JMP      	543 ; PC := 543
	540	[5760]	GETGLOBAL	R36 K10 ; R36 := 0x6c97a788
	541	[5760]	GETTABLE 	R36 R36 K11 ; R36 := R36["InvalidItemID"]
	542	[5760]	SETTABLE 	R35 K14 R36 ; R35["UID"] := R36
	543	[5763]	GETGLOBAL	R36 K2 ; R36 := mSelected
	544	[5763]	NEWTABLE 	R37 0 1 ; R37 := {}
	545	[5763]	SETTABLE 	R37 K12 R35 ; R37["mPurchasedInfo"] := R35
	546	[5763]	SETTABLE 	R36 K3 R37 ; R36["Item"] := R37
	547	[5765]	OP_LOADBOOL	R36 0 0 ; R36 := false
	548	[5765]	SETGLOBALHASH	R36 K71 ; mInputBlocked := R36
	549	[5766]	GETUPVAL 	R36 U3 ; R36 := U3
	550	[5766]	GETTABLE 	R36 R36 K8 ; R36 := R36["SWAPPING_ITEM"]
	551	[5766]	SETUPVAL 	R36 U2 ; U2 := R36
	552	[5767]	GETUPVAL 	R36 U18 ; R36 := U18
	553	[5767]	LOADNIL  	R37 R37 ; R37 := nil
	554	[5767]	OP_LOADBOOL	R38 1 0 ; R38 := true
	555	[5767]	CALL     	R36 3 1 ; R36(R37,R38)
	556	[5768]	OP_LOADBOOL	R36 1 0 ; R36 := true
	557	[5768]	SETGLOBALHASH	R36 K71 ; mInputBlocked := R36
	558	[5770]	GETUPVAL 	R36 U19 ; R36 := U19
	559	[5770]	GETGLOBAL	R37 K2 ; R37 := mSelected
	560	[5770]	GETTABLE 	R37 R37 K9 ; R37 := R37["Element"]
	561	[5770]	CALL     	R36 2 1 ; R36(R37)
	562	[5772]	GETGLOBAL	R36 K2 ; R36 := mSelected
	563	[5772]	SETTABLE 	R36 K9 R34 ; R36["Element"] := R34
	564	[5773]	GETGLOBAL	R36 K2 ; R36 := mSelected
	565	[5773]	SETTABLE 	R36 K3 K13 ; R36["Item"] := nil
	566	[5773]	JMP      	1229 ; PC := 1229
	567	[5776]	GETUPVAL 	R36 U9 ; R36 := U9
	568	[5776]	MOVE     	R37 R25 ; R37 := R25
	569	[5776]	CALL     	R36 2 1 ; R36(R37)
	570	[5778]	JMP      	1229 ; PC := 1229
	571	[5779]	GETGLOBAL	R36 K2 ; R36 := mSelected
	572	[5779]	GETTABLE 	R36 R36 K9 ; R36 := R36["Element"]
	573	[5779]	GETTABLE 	R36 R36 K39 ; R36 := R36["LoadOutType"]
	574	[5779]	EQ       	1 R36 K61 ; if R36 == 0.000000 then PC := 586
	575	[5779]	JMP      	586 ; PC := 586
	576	[5779]	GETGLOBAL	R36 K2 ; R36 := mSelected
	577	[5779]	GETTABLE 	R36 R36 K9 ; R36 := R36["Element"]
	578	[5779]	GETTABLE 	R36 R36 K39 ; R36 := R36["LoadOutType"]
	579	[5779]	EQ       	1 R36 K99 ; if R36 == 3.000000 then PC := 586
	580	[5779]	JMP      	586 ; PC := 586
	581	[5779]	GETGLOBAL	R36 K2 ; R36 := mSelected
	582	[5779]	GETTABLE 	R36 R36 K9 ; R36 := R36["Element"]
	583	[5779]	GETTABLE 	R36 R36 K39 ; R36 := R36["LoadOutType"]
	584	[5779]	EQ       	0 R36 K42 ; if R36 ~= 8.000000 then PC := 1229
	585	[5779]	JMP      	1229 ; PC := 1229
	586	[5779]	GETGLOBAL	R36 K2 ; R36 := mSelected
	587	[5779]	GETTABLE 	R36 R36 K9 ; R36 := R36["Element"]
	588	[5779]	GETTABLE 	R36 R36 K40 ; R36 := R36["LoadOutId"]
	589	[5779]	EQ       	0 R36 K61 ; if R36 ~= 0.000000 then PC := 1229
	590	[5779]	JMP      	1229 ; PC := 1229
	591	[5780]	LOADK    	R36 := 5.000000
	592	[5780]	LOADK    	R37 := 6.000000
	593	[5780]	LOADK    	R38 := 1.000000
	594	[5780]	FORPREP  	R36 720 ; R36 -= R38; PC := 720
	595	[5781]	GETGLOBAL	R40 K63 ; R40 := mCurrentLoadout
	596	[5781]	GETGLOBAL	R41 K2 ; R41 := mSelected
	597	[5781]	GETTABLE 	R41 R41 K9 ; R41 := R41["Element"]
	598	[5781]	GETTABLE 	R41 R41 K39 ; R41 := R41["LoadOutType"]
	599	[5781]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	600	[5781]	SELF     	R40 R40 K64 ; R41 := R40; R40 := R40[0x2abbe722]
	601	[5781]	MOVE     	R42 R39 ; R42 := R39
	602	[5781]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	603	[5781]	MOVE     	R12 R40 ; R12 := R40
	604	[5782]	GETUPVAL 	R40 U5 ; R40 := U5
	605	[5782]	GETTABLE 	R40 R40 K45 ; R40 := R40[0x06d055f9]
	606	[5782]	EQ       	1 R39 K21 ; if R39 == 5.000000 then PC := 609
	607	[5782]	JMP      	609 ; PC := 609
	608	[5782]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 609
	609	[5782]	OP_LOADBOOL	R41 1 0 ; R41 := true
	610	[5782]	GETGLOBAL	R42 K72 ; R42 := mLists
	611	[5782]	GETTABLE 	R42 R42 K73 ; R42 := R42["mLoadOutList"]
	612	[5782]	GETTABLE 	R42 R42 K100 ; R42 := R42["SpecialASlotId"]
	613	[5782]	GETGLOBAL	R43 K72 ; R43 := mLists
	614	[5782]	GETTABLE 	R43 R43 K73 ; R43 := R43["mLoadOutList"]
	615	[5782]	GETTABLE 	R43 R43 K101 ; R43 := R43["SpecialBSlotId"]
	616	[5782]	CALL     	R40 4 2 ; R40 := R40(R41,R42,R43)
	617	[5783]	GETGLOBAL	R41 K72 ; R41 := mLists
	618	[5783]	GETTABLE 	R41 R41 K73 ; R41 := R41["mLoadOutList"]
	619	[5783]	SELF     	R41 R41 K93 ; R42 := R41; R41 := R41[0xca30dfb6]
	620	[5783]	MOVE     	R43 R40 ; R43 := R40
	621	[5783]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	622	[5784]	GETGLOBAL	R42 K10 ; R42 := 0x6c97a788
	623	[5784]	GETTABLE 	R42 R42 K11 ; R42 := R42["InvalidItemID"]
	624	[5785]	EQ       	1 R41 K13 ; if R41 == nil then PC := 632
	625	[5785]	JMP      	632 ; PC := 632
	626	[5785]	GETTABLE 	R43 R41 K102 ; R43 := R41["EquippedItem"]
	627	[5785]	EQ       	1 R43 K13 ; if R43 == nil then PC := 632
	628	[5785]	JMP      	632 ; PC := 632
	629	[5786]	GETTABLE 	R43 R41 K102 ; R43 := R41["EquippedItem"]
	630	[5786]	GETTABLE 	R43 R43 K65 ; R43 := R43["mItemId"]
	631	[5786]	GETTABLE 	R42 R43 K66 ; R42 := R43["mId"]
	632	[5789]	GETTABLE 	R43 R12 K65 ; R43 := R12["mItemId"]
	633	[5789]	GETTABLE 	R43 R43 K66 ; R43 := R43["mId"]
	634	[5789]	EQ       	1 R42 R43 ; if R42 == R43 then PC := 711
	635	[5789]	JMP      	711 ; PC := 711
	636	[5790]	GETGLOBAL	R43 K2 ; R43 := mSelected
	637	[5790]	GETTABLE 	R43 R43 K9 ; R43 := R43["Element"]
	638	[5791]	GETGLOBAL	R44 K2 ; R44 := mSelected
	639	[5791]	SETTABLE 	R44 K9 R41 ; R44["Element"] := R41
	640	[5792]	GETGLOBAL	R44 K2 ; R44 := mSelected
	641	[5792]	NEWTABLE 	R45 0 1 ; R45 := {}
	642	[5792]	NEWTABLE 	R46 0 1 ; R46 := {}
	643	[5792]	GETTABLE 	R47 R12 K65 ; R47 := R12["mItemId"]
	644	[5792]	GETTABLE 	R47 R47 K66 ; R47 := R47["mId"]
	645	[5792]	SETTABLE 	R46 K14 R47 ; R46["UID"] := R47
	646	[5792]	SETTABLE 	R45 K12 R46 ; R45["mPurchasedInfo"] := R46
	647	[5792]	SETTABLE 	R44 K3 R45 ; R44["Item"] := R45
	648	[5794]	GETTABLE 	R44 R12 K65 ; R44 := R12["mItemId"]
	649	[5794]	GETTABLE 	R44 R44 K66 ; R44 := R44["mId"]
	650	[5794]	GETGLOBAL	R45 K10 ; R45 := 0x6c97a788
	651	[5794]	GETTABLE 	R45 R45 K11 ; R45 := R45["InvalidItemID"]
	652	[5794]	EQ       	1 R44 R45 ; if R44 == R45 then PC := 666
	653	[5794]	JMP      	666 ; PC := 666
	654	[5795]	GETGLOBAL	R44 K2 ; R44 := mSelected
	655	[5795]	GETTABLE 	R44 R44 K9 ; R44 := R44["Element"]
	656	[5795]	GETUPVAL 	R45 U16 ; R45 := U16
	657	[5795]	GETTABLE 	R45 R45 K104 ; R45 := R45[0x866fb296]
	658	[5795]	GETGLOBAL	R46 K2 ; R46 := mSelected
	659	[5795]	GETTABLE 	R46 R46 K9 ; R46 := R46["Element"]
	660	[5795]	GETTABLE 	R46 R46 K39 ; R46 := R46["LoadOutType"]
	661	[5795]	GETGLOBAL	R47 K2 ; R47 := mSelected
	662	[5795]	GETTABLE 	R47 R47 K9 ; R47 := R47["Element"]
	663	[5795]	GETTABLE 	R47 R47 K40 ; R47 := R47["LoadOutId"]
	664	[5795]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	665	[5795]	SETTABLE 	R44 K103 R45 ; R44["OwnedItems"] := R45
	666	[5798]	OP_LOADBOOL	R44 0 0 ; R44 := false
	667	[5798]	SETGLOBALHASH	R44 K71 ; mInputBlocked := R44
	668	[5799]	GETUPVAL 	R44 U3 ; R44 := U3
	669	[5799]	GETTABLE 	R44 R44 K8 ; R44 := R44["SWAPPING_ITEM"]
	670	[5799]	SETUPVAL 	R44 U2 ; U2 := R44
	671	[5800]	GETUPVAL 	R44 U18 ; R44 := U18
	672	[5800]	LOADNIL  	R45 R45 ; R45 := nil
	673	[5800]	OP_LOADBOOL	R46 1 0 ; R46 := true
	674	[5800]	CALL     	R44 3 1 ; R44(R45,R46)
	675	[5801]	OP_LOADBOOL	R44 1 0 ; R44 := true
	676	[5801]	SETGLOBALHASH	R44 K71 ; mInputBlocked := R44
	677	[5803]	GETUPVAL 	R44 U19 ; R44 := U19
	678	[5803]	GETGLOBAL	R45 K2 ; R45 := mSelected
	679	[5803]	GETTABLE 	R45 R45 K9 ; R45 := R45["Element"]
	680	[5803]	CALL     	R44 2 1 ; R44(R45)
	681	[5805]	GETTABLE 	R44 R12 K65 ; R44 := R12["mItemId"]
	682	[5805]	GETTABLE 	R44 R44 K66 ; R44 := R44["mId"]
	683	[5805]	GETGLOBAL	R45 K10 ; R45 := 0x6c97a788
	684	[5805]	GETTABLE 	R45 R45 K11 ; R45 := R45["InvalidItemID"]
	685	[5805]	EQ       	0 R44 R45 ; if R44 ~= R45 then PC := 699
	686	[5805]	JMP      	699 ; PC := 699
	687	[5806]	GETGLOBAL	R44 K2 ; R44 := mSelected
	688	[5806]	GETTABLE 	R44 R44 K9 ; R44 := R44["Element"]
	689	[5806]	GETUPVAL 	R45 U16 ; R45 := U16
	690	[5806]	GETTABLE 	R45 R45 K104 ; R45 := R45[0x866fb296]
	691	[5806]	GETGLOBAL	R46 K2 ; R46 := mSelected
	692	[5806]	GETTABLE 	R46 R46 K9 ; R46 := R46["Element"]
	693	[5806]	GETTABLE 	R46 R46 K39 ; R46 := R46["LoadOutType"]
	694	[5806]	GETGLOBAL	R47 K2 ; R47 := mSelected
	695	[5806]	GETTABLE 	R47 R47 K9 ; R47 := R47["Element"]
	696	[5806]	GETTABLE 	R47 R47 K40 ; R47 := R47["LoadOutId"]
	697	[5806]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	698	[5806]	SETTABLE 	R44 K103 R45 ; R44["OwnedItems"] := R45
	699	[5809]	GETGLOBAL	R44 K2 ; R44 := mSelected
	700	[5809]	SETTABLE 	R44 K9 R43 ; R44["Element"] := R43
	701	[5810]	GETGLOBAL	R44 K2 ; R44 := mSelected
	702	[5810]	SETTABLE 	R44 K3 K13 ; R44["Item"] := nil
	703	[5812]	GETGLOBAL	R44 K72 ; R44 := mLists
	704	[5812]	GETTABLE 	R44 R44 K73 ; R44 := R44["mLoadOutList"]
	705	[5812]	SELF     	R44 R44 K74 ; R45 := R44; R44 := R44[0xea061e98]
	706	[5812]	GETGLOBAL	R46 K72 ; R46 := mLists
	707	[5812]	GETTABLE 	R46 R46 K73 ; R46 := R46["mLoadOutList"]
	708	[5812]	GETTABLE 	R46 R46 K75 ; R46 := R46["mElementDrawCallback"]
	709	[5812]	CALL     	R44 3 1 ; R44(R45,R46)
	710	[5812]	JMP      	720 ; PC := 720
	711	[5813]	EQ       	1 R42 K37 ; if R42 == "" then PC := 720
	712	[5813]	JMP      	720 ; PC := 720
	713	[5813]	GETGLOBAL	R44 K10 ; R44 := 0x6c97a788
	714	[5813]	GETTABLE 	R44 R44 K11 ; R44 := R44["InvalidItemID"]
	715	[5813]	EQ       	1 R42 R44 ; if R42 == R44 then PC := 720
	716	[5813]	JMP      	720 ; PC := 720
	717	[5814]	GETUPVAL 	R44 U9 ; R44 := U9
	718	[5814]	MOVE     	R45 R41 ; R45 := R41
	719	[5814]	CALL     	R44 2 1 ; R44(R45)
	720	[5780]	FORLOOP  	R36 595 ; R36 += R38; if R36 <= R37 then begin PC := 595; R39 := R36 end
	721	[5818]	GETGLOBAL	R44 K5 ; R44 := _T
	722	[5818]	GETTABLE 	R44 R44 K105 ; R44 := R44["bloodshedSigil"]
	723	[5818]	EQ       	1 R44 K13 ; if R44 == nil then PC := 741
	724	[5818]	JMP      	741 ; PC := 741
	725	[5819]	GETGLOBAL	R44 K106 ; R44 := 0x89326c93
	726	[5819]	SELF     	R44 R44 K107 ; R45 := R44; R44 := R44[0xded7d5cd]
	727	[5819]	CALL     	R44 2 2 ; R44 := R44(R45)
	728	[5819]	GETTABLE 	R44 R44 K30 ; R44 := R44[1.000000]
	729	[5819]	SELF     	R44 R44 K108 ; R45 := R44; R44 := R44[0x5ca33548]
	730	[5819]	CALL     	R44 2 2 ; R44 := R44(R45)
	731	[5820]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	732	[5820]	GETGLOBAL	R46 K5 ; R46 := _T
	733	[5820]	GETTABLE 	R46 R46 K105 ; R46 := R46["bloodshedSigil"]
	734	[5820]	GETTABLE 	R46 R46 R44 ; R46 := R46[R44]
	735	[5820]	CALL     	R45 2 2 ; R45 := R45(R46)
	736	[5820]	TEST     	R45 1 ; if R45 then PC := 741
	737	[5820]	JMP      	741 ; PC := 741
	738	[5821]	GETGLOBAL	R45 K5 ; R45 := _T
	739	[5821]	GETTABLE 	R45 R45 K105 ; R45 := R45["bloodshedSigil"]
	740	[5821]	SETTABLE 	R45 R44 K61 ; R45[R44] := 0.000000
	741	[5825]	GETGLOBAL	R45 K5 ; R45 := _T
	742	[5825]	GETTABLE 	R45 R45 K109 ; R45 := R45["Arsenal_ForceUmbraUnlock"]
	743	[5825]	TEST     	R45 0 ; if not R45 then PC := 1229
	744	[5825]	JMP      	1229 ; PC := 1229
	745	[5825]	GETGLOBAL	R45 K5 ; R45 := _T
	746	[5825]	GETTABLE 	R45 R45 K110 ; R45 := R45["Arsenal_ForceUmbraSwordUnlock"]
	747	[5825]	TEST     	R45 1 ; if R45 then PC := 1229
	748	[5825]	JMP      	1229 ; PC := 1229
	749	[5825]	GETGLOBAL	R45 K2 ; R45 := mSelected
	750	[5825]	GETTABLE 	R45 R45 K9 ; R45 := R45["Element"]
	751	[5825]	GETTABLE 	R45 R45 K84 ; R45 := R45["Type"]
	752	[5825]	GETGLOBAL	R46 K111 ; R46 := 0xfba12602
	753	[5825]	EQ       	0 R45 R46 ; if R45 ~= R46 then PC := 1229
	754	[5825]	JMP      	1229 ; PC := 1229
	755	[5826]	GETGLOBAL	R45 K5 ; R45 := _T
	756	[5826]	SETTABLE 	R45 K112 K7 ; R45["ExcaliburUmbraEquipped"] := true
	757	[5827]	GETUPVAL 	R45 U1 ; R45 := U1
	758	[5827]	SETTABLE 	R45 K4 K7 ; R45["EquipmentChangesBlocked"] := true
	759	[5828]	GETUPVAL 	R45 U1 ; R45 := U1
	760	[5828]	SETTABLE 	R45 K113 K7 ; R45["SacrificeQuestInputBlocked"] := true
	761	[5830]	JMP      	1229 ; PC := 1229
	762	[5831]	GETUPVAL 	R45 U2 ; R45 := U2
	763	[5831]	GETUPVAL 	R46 U3 ; R46 := U3
	764	[5831]	GETTABLE 	R46 R46 K114 ; R46 := R46["SELECTING_SKINS"]
	765	[5831]	EQ       	0 R45 R46 ; if R45 ~= R46 then PC := 1033
	766	[5831]	JMP      	1033 ; PC := 1033
	767	[5831]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	768	[5831]	GETGLOBAL	R46 K2 ; R46 := mSelected
	769	[5831]	GETTABLE 	R46 R46 K9 ; R46 := R46["Element"]
	770	[5831]	CALL     	R45 2 2 ; R45 := R45(R46)
	771	[5831]	TEST     	R45 1 ; if R45 then PC := 1033
	772	[5831]	JMP      	1033 ; PC := 1033
	773	[5832]	GETGLOBAL	R45 K2 ; R45 := mSelected
	774	[5832]	GETTABLE 	R45 R45 K9 ; R45 := R45["Element"]
	775	[5832]	GETTABLE 	R45 R45 K115 ; R45 := R45["LunaroArenaEntry"]
	776	[5832]	TEST     	R45 0 ; if not R45 then PC := 786
	777	[5832]	JMP      	786 ; PC := 786
	778	[5834]	GETGLOBAL	R45 K68 ; R45 := mInventory
	779	[5834]	GETTABLE 	R45 R45 K116 ; R45 := R45["mArenaCustomization"]
	780	[5834]	SELF     	R45 R45 K117 ; R46 := R45; R45 := R45[0x68877f1b]
	781	[5834]	GETGLOBAL	R47 K2 ; R47 := mSelected
	782	[5834]	GETTABLE 	R47 R47 K118 ; R47 := R47["CosmeticItem"]
	783	[5834]	GETTABLE 	R47 R47 K84 ; R47 := R47["Type"]
	784	[5834]	CALL     	R45 3 1 ; R45(R46,R47)
	785	[5834]	JMP      	1026 ; PC := 1026
	786	[5836]	GETGLOBAL	R45 K2 ; R45 := mSelected
	787	[5836]	GETTABLE 	R45 R45 K119 ; R45 := R45["Cosmetic"]
	788	[5836]	GETTABLE 	R45 R45 K120 ; R45 := R45["PetTrait"]
	789	[5836]	TEST     	R45 0 ; if not R45 then PC := 807
	790	[5836]	JMP      	807 ; PC := 807
	791	[5836]	GETGLOBAL	R45 K2 ; R45 := mSelected
	792	[5836]	GETTABLE 	R45 R45 K119 ; R45 := R45["Cosmetic"]
	793	[5836]	GETTABLE 	R45 R45 K121 ; R45 := R45["Attribute"]
	794	[5836]	TEST     	R45 0 ; if not R45 then PC := 807
	795	[5836]	JMP      	807 ; PC := 807
	796	[5837]	GETUPVAL 	R45 U20 ; R45 := U20
	797	[5837]	GETGLOBAL	R46 K2 ; R46 := mSelected
	798	[5837]	GETTABLE 	R46 R46 K119 ; R46 := R46["Cosmetic"]
	799	[5837]	GETTABLE 	R46 R46 K121 ; R46 := R46["Attribute"]
	800	[5837]	GETGLOBAL	R47 K2 ; R47 := mSelected
	801	[5837]	GETTABLE 	R47 R47 K3 ; R47 := R47["Item"]
	802	[5837]	GETTABLE 	R47 R47 K122 ; R47 := R47["PetTintColor"]
	803	[5837]	LOADK    	R48 := 0.000000
	804	[5837]	LOADNIL  	R49 R49 ; R49 := nil
	805	[5837]	CALL     	R45 5 1 ; R45(R46,R47,R48,R49)
	806	[5837]	JMP      	1024 ; PC := 1024
	807	[5839]	GETGLOBAL	R45 K2 ; R45 := mSelected
	808	[5839]	GETTABLE 	R45 R45 K9 ; R45 := R45["Element"]
	809	[5839]	GETTABLE 	R45 R45 K39 ; R45 := R45["LoadOutType"]
	810	[5839]	EQ       	1 R45 K61 ; if R45 == 0.000000 then PC := 817
	811	[5839]	JMP      	817 ; PC := 817
	812	[5839]	GETGLOBAL	R45 K2 ; R45 := mSelected
	813	[5839]	GETTABLE 	R45 R45 K9 ; R45 := R45["Element"]
	814	[5839]	GETTABLE 	R45 R45 K39 ; R45 := R45["LoadOutType"]
	815	[5839]	EQ       	0 R45 K99 ; if R45 ~= 3.000000 then PC := 910
	816	[5839]	JMP      	910 ; PC := 910
	817	[5840]	GETGLOBAL	R45 K2 ; R45 := mSelected
	818	[5840]	GETTABLE 	R45 R45 K9 ; R45 := R45["Element"]
	819	[5840]	GETTABLE 	R45 R45 K40 ; R45 := R45["LoadOutId"]
	820	[5840]	EQ       	0 R45 K61 ; if R45 ~= 0.000000 then PC := 910
	821	[5840]	JMP      	910 ; PC := 910
	822	[5841]	GETGLOBAL	R45 K2 ; R45 := mSelected
	823	[5841]	GETTABLE 	R45 R45 K119 ; R45 := R45["Cosmetic"]
	824	[5841]	GETTABLE 	R45 R45 K123 ; R45 := R45["Slot"]
	825	[5841]	EQ       	0 R45 K61 ; if R45 ~= 0.000000 then PC := 910
	826	[5841]	JMP      	910 ; PC := 910
	827	[5842]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	828	[5842]	GETGLOBAL	R46 K124 ; R46 := mPendingSelection
	829	[5842]	CALL     	R45 2 2 ; R45 := R45(R46)
	830	[5842]	TEST     	R45 1 ; if R45 then PC := 836
	831	[5842]	JMP      	836 ; PC := 836
	832	[5845]	GETGLOBAL	R45 K125 ; R45 := mLoaders
	833	[5845]	SETTABLE 	R45 K126 K7 ; R45["mQueueEquipItem"] := true
	834	[5847]	OP_LOADBOOL	R45 1 0 ; R45 := true
	835	[5847]	RETURN   	R45 2 ; return R45 
	836	[5852]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	837	[5852]	GETGLOBAL	R46 K2 ; R46 := mSelected
	838	[5852]	GETTABLE 	R46 R46 K118 ; R46 := R46["CosmeticItem"]
	839	[5852]	CALL     	R45 2 2 ; R45 := R45(R46)
	840	[5852]	TEST     	R45 1 ; if R45 then PC := 910
	841	[5852]	JMP      	910 ; PC := 910
	842	[5852]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	843	[5852]	GETGLOBAL	R46 K2 ; R46 := mSelected
	844	[5852]	GETTABLE 	R46 R46 K118 ; R46 := R46["CosmeticItem"]
	845	[5852]	GETTABLE 	R46 R46 K127 ; R46 := R46["Skin"]
	846	[5852]	CALL     	R45 2 2 ; R45 := R45(R46)
	847	[5852]	TEST     	R45 1 ; if R45 then PC := 910
	848	[5852]	JMP      	910 ; PC := 910
	849	[5853]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	850	[5853]	GETGLOBAL	R46 K2 ; R46 := mSelected
	851	[5853]	GETTABLE 	R46 R46 K118 ; R46 := R46["CosmeticItem"]
	852	[5853]	GETTABLE 	R46 R46 K127 ; R46 := R46["Skin"]
	853	[5853]	GETTABLE 	R46 R46 K128 ; R46 := R46["mInstance"]
	854	[5853]	CALL     	R45 2 2 ; R45 := R45(R46)
	855	[5853]	TEST     	R45 1 ; if R45 then PC := 910
	856	[5853]	JMP      	910 ; PC := 910
	857	[5854]	GETGLOBAL	R45 K2 ; R45 := mSelected
	858	[5854]	GETTABLE 	R45 R45 K118 ; R45 := R45["CosmeticItem"]
	859	[5854]	GETTABLE 	R45 R45 K127 ; R45 := R45["Skin"]
	860	[5854]	GETTABLE 	R45 R45 K128 ; R45 := R45["mInstance"]
	861	[5854]	SELF     	R45 R45 K129 ; R46 := R45; R45 := R45[0x0ad758cb]
	862	[5854]	CALL     	R45 2 2 ; R45 := R45(R46)
	863	[5854]	LT       	0 K61 R45 ; if 0.000000 >= R45 then PC := 910
	864	[5854]	JMP      	910 ; PC := 910
	865	[5855]	GETGLOBAL	R45 K68 ; R45 := mInventory
	866	[5855]	SELF     	R45 R45 K130 ; R46 := R45; R45 := R45[0x2f30b8db]
	867	[5855]	GETGLOBAL	R47 K2 ; R47 := mSelected
	868	[5855]	GETTABLE 	R47 R47 K9 ; R47 := R47["Element"]
	869	[5855]	GETTABLE 	R47 R47 K102 ; R47 := R47["EquippedItem"]
	870	[5855]	GETTABLE 	R47 R47 K65 ; R47 := R47["mItemId"]
	871	[5855]	GETTABLE 	R47 R47 K66 ; R47 := R47["mId"]
	872	[5855]	GETGLOBAL	R48 K2 ; R48 := mSelected
	873	[5855]	GETTABLE 	R48 R48 K9 ; R48 := R48["Element"]
	874	[5855]	GETTABLE 	R48 R48 K60 ; R48 := R48["mModSlot"]
	875	[5855]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	876	[5856]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	877	[5856]	MOVE     	R47 R45 ; R47 := R45
	878	[5856]	CALL     	R46 2 2 ; R46 := R46(R47)
	879	[5856]	TEST     	R46 1 ; if R46 then PC := 910
	880	[5856]	JMP      	910 ; PC := 910
	881	[5857]	LOADK    	R46 := 0.000000
	882	[5858]	GETGLOBAL	R47 K131 ; R47 := 0x7ed0a956
	883	[5858]	LOADK    	R48 K132 ; R48 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
	884	[5858]	CALL     	R47 2 2 ; R47 := R47(R48)
	885	[5859]	LOADK    	R48 := 1.000000
	886	[5859]	LEN      	R49 R45 ; R49 := # R45
	887	[5859]	LOADK    	R50 := 1.000000
	888	[5859]	FORPREP  	R48 903 ; R48 -= R50; PC := 903
	889	[5860]	GETGLOBAL	R52 K0 ; R52 := 0x7b998233
	890	[5860]	GETTABLE 	R53 R45 R51 ; R53 := R45[R51]
	891	[5860]	GETTABLE 	R53 R53 K98 ; R53 := R53["mItemType"]
	892	[5860]	CALL     	R52 2 2 ; R52 := R52(R53)
	893	[5860]	TEST     	R52 1 ; if R52 then PC := 903
	894	[5860]	JMP      	903 ; PC := 903
	895	[5860]	GETTABLE 	R52 R45 R51 ; R52 := R45[R51]
	896	[5860]	GETTABLE 	R52 R52 K98 ; R52 := R52["mItemType"]
	897	[5860]	SELF     	R52 R52 K80 ; R53 := R52; R52 := R52[0xf2deaf69]
	898	[5860]	MOVE     	R54 R47 ; R54 := R47
	899	[5860]	CALL     	R52 3 2 ; R52 := R52(R53,R54)
	900	[5860]	TEST     	R52 0 ; if not R52 then PC := 903
	901	[5860]	JMP      	903 ; PC := 903
	902	[5861]	ADD      	R46 R46 K30 ; R46 := R46 + 1.000000
	903	[5859]	FORLOOP  	R48 889 ; R48 += R50; if R48 <= R49 then begin PC := 889; R51 := R48 end
	904	[5865]	LE       	0 K133 R46 ; if 2.000000 > R46 then PC := 910
	905	[5865]	JMP      	910 ; PC := 910
	906	[5866]	GETUPVAL 	R52 U5 ; R52 := U5
	907	[5866]	GETTABLE 	R52 R52 K38 ; R52 := R52[0xe0cba3ca]
	908	[5866]	LOADK    	R53 K134 ; R53 := "/Lotus/Language/Menu/ArcaneHelmet_EquipError"
	909	[5866]	CALL     	R52 2 1 ; R52(R53)
	910	[5872]	GETUPVAL 	R52 U21 ; R52 := U21
	911	[5872]	GETUPVAL 	R53 U22 ; R53 := U22
	912	[5872]	GETTABLE 	R53 R53 K135 ; R53 := R53["FALSE"]
	913	[5872]	EQ       	1 R52 R53 ; if R52 == R53 then PC := 1024
	914	[5872]	JMP      	1024 ; PC := 1024
	915	[5872]	GETGLOBAL	R52 K0 ; R52 := 0x7b998233
	916	[5872]	GETGLOBAL	R53 K2 ; R53 := mSelected
	917	[5872]	GETTABLE 	R53 R53 K3 ; R53 := R53["Item"]
	918	[5872]	GETTABLE 	R53 R53 K84 ; R53 := R53["Type"]
	919	[5872]	CALL     	R52 2 2 ; R52 := R52(R53)
	920	[5872]	TEST     	R52 1 ; if R52 then PC := 1024
	921	[5872]	JMP      	1024 ; PC := 1024
	922	[5872]	GETGLOBAL	R52 K2 ; R52 := mSelected
	923	[5872]	GETTABLE 	R52 R52 K3 ; R52 := R52["Item"]
	924	[5872]	GETTABLE 	R52 R52 K84 ; R52 := R52["Type"]
	925	[5872]	SELF     	R52 R52 K80 ; R53 := R52; R52 := R52[0xf2deaf69]
	926	[5872]	GETGLOBAL	R54 K136 ; R54 := gLotusSigilType
	927	[5872]	CALL     	R52 3 2 ; R52 := R52(R53,R54)
	928	[5872]	TEST     	R52 1 ; if R52 then PC := 938
	929	[5872]	JMP      	938 ; PC := 938
	930	[5872]	GETGLOBAL	R52 K2 ; R52 := mSelected
	931	[5872]	GETTABLE 	R52 R52 K3 ; R52 := R52["Item"]
	932	[5872]	GETTABLE 	R52 R52 K84 ; R52 := R52["Type"]
	933	[5872]	SELF     	R52 R52 K80 ; R53 := R52; R52 := R52[0xf2deaf69]
	934	[5872]	GETGLOBAL	R54 K137 ; R54 := gLotusHoverboardStickerType
	935	[5872]	CALL     	R52 3 2 ; R52 := R52(R53,R54)
	936	[5872]	TEST     	R52 0 ; if not R52 then PC := 1024
	937	[5872]	JMP      	1024 ; PC := 1024
	938	[5873]	GETGLOBAL	R52 K92 ; R52 := 0xb009bbc6
	939	[5873]	GETGLOBAL	R53 K2 ; R53 := mSelected
	940	[5873]	GETTABLE 	R53 R53 K3 ; R53 := R53["Item"]
	941	[5873]	GETTABLE 	R53 R53 K84 ; R53 := R53["Type"]
	942	[5873]	CALL     	R52 2 2 ; R52 := R52(R53)
	943	[5873]	SELF     	R52 R52 K138 ; R53 := R52; R52 := R52[0x07408254]
	944	[5873]	CALL     	R52 2 2 ; R52 := R52(R53)
	945	[5875]	GETGLOBAL	R53 K0 ; R53 := 0x7b998233
	946	[5875]	MOVE     	R54 R52 ; R54 := R52
	947	[5875]	CALL     	R53 2 2 ; R53 := R53(R54)
	948	[5875]	TEST     	R53 1 ; if R53 then PC := 1024
	949	[5875]	JMP      	1024 ; PC := 1024
	950	[5876]	LOADNIL  	R53 R53 ; R53 := nil
	951	[5878]	GETUPVAL 	R54 U21 ; R54 := U21
	952	[5878]	GETUPVAL 	R55 U22 ; R55 := U22
	953	[5878]	GETTABLE 	R55 R55 K139 ; R55 := R55["FRONT"]
	954	[5878]	EQ       	0 R54 R55 ; if R54 ~= R55 then PC := 964
	955	[5878]	JMP      	964 ; PC := 964
	956	[5879]	GETGLOBAL	R54 K2 ; R54 := mSelected
	957	[5879]	GETTABLE 	R54 R54 K9 ; R54 := R54["Element"]
	958	[5879]	GETTABLE 	R54 R54 K140 ; R54 := R54["Customization"]
	959	[5879]	SELF     	R54 R54 K141 ; R55 := R54; R54 := R54[0x2540510f]
	960	[5879]	LOADK    	R56 := 13.000000
	961	[5879]	CALL     	R54 3 2 ; R54 := R54(R55,R56)
	962	[5879]	MOVE     	R53 R54 ; R53 := R54
	963	[5879]	JMP      	976 ; PC := 976
	964	[5880]	GETUPVAL 	R54 U21 ; R54 := U21
	965	[5880]	GETUPVAL 	R55 U22 ; R55 := U22
	966	[5880]	GETTABLE 	R55 R55 K142 ; R55 := R55["BACK"]
	967	[5880]	EQ       	0 R54 R55 ; if R54 ~= R55 then PC := 976
	968	[5880]	JMP      	976 ; PC := 976
	969	[5881]	GETGLOBAL	R54 K2 ; R54 := mSelected
	970	[5881]	GETTABLE 	R54 R54 K9 ; R54 := R54["Element"]
	971	[5881]	GETTABLE 	R54 R54 K140 ; R54 := R54["Customization"]
	972	[5881]	SELF     	R54 R54 K141 ; R55 := R54; R54 := R54[0x2540510f]
	973	[5881]	LOADK    	R56 := 12.000000
	974	[5881]	CALL     	R54 3 2 ; R54 := R54(R55,R56)
	975	[5881]	MOVE     	R53 R54 ; R53 := R54
	976	[5884]	GETGLOBAL	R54 K0 ; R54 := 0x7b998233
	977	[5884]	MOVE     	R55 R53 ; R55 := R53
	978	[5884]	CALL     	R54 2 2 ; R54 := R54(R55)
	979	[5884]	TEST     	R54 1 ; if R54 then PC := 1024
	980	[5884]	JMP      	1024 ; PC := 1024
	981	[5885]	GETGLOBAL	R54 K92 ; R54 := 0xb009bbc6
	982	[5885]	MOVE     	R55 R53 ; R55 := R53
	983	[5885]	CALL     	R54 2 2 ; R54 := R54(R55)
	984	[5885]	SELF     	R54 R54 K138 ; R55 := R54; R54 := R54[0x07408254]
	985	[5885]	CALL     	R54 2 2 ; R54 := R54(R55)
	986	[5886]	GETGLOBAL	R55 K0 ; R55 := 0x7b998233
	987	[5886]	MOVE     	R56 R54 ; R56 := R54
	988	[5886]	CALL     	R55 2 2 ; R55 := R55(R56)
	989	[5886]	TEST     	R55 1 ; if R55 then PC := 1024
	990	[5886]	JMP      	1024 ; PC := 1024
	991	[5887]	LOADK    	R55 K37 ; R55 := ""
	992	[5888]	GETUPVAL 	R56 U23 ; R56 := U23
	993	[5888]	MOVE     	R57 R53 ; R57 := R53
	994	[5888]	CALL     	R56 2 2 ; R56 := R56(R57)
	995	[5889]	GETGLOBAL	R57 K0 ; R57 := 0x7b998233
	996	[5889]	MOVE     	R58 R56 ; R58 := R56
	997	[5889]	CALL     	R57 2 2 ; R57 := R57(R58)
	998	[5889]	TEST     	R57 1 ; if R57 then PC := 1009
	999	[5889]	JMP      	1009 ; PC := 1009
	1000	[5890]	GETGLOBAL	R57 K34 ; R57 := 0xae91e43b
	1001	[5890]	SELF     	R57 R57 K143 ; R58 := R57; R57 := R57[0x42b04007]
	1002	[5890]	GETGLOBAL	R59 K144 ; R59 := 0x64fb1586
	1003	[5890]	SELF     	R60 R56 K145 ; R61 := R56; R60 := R56[0xd3a9d01f]
	1004	[5890]	CALL     	R60 2 0 ; R60,... := R60(R61)
	1005	[5890]	CALL     	R59 0 2 ; R59 := R59(R60,...)
	1006	[5890]	OP_LOADBOOL	R60 0 0 ; R60 := false
	1007	[5890]	CALL     	R57 4 2 ; R57 := R57(R58,R59,R60)
	1008	[5890]	MOVE     	R55 R57 ; R55 := R57
	1009	[5893]	GETUPVAL 	R57 U5 ; R57 := U5
	1010	[5893]	GETTABLE 	R57 R57 K38 ; R57 := R57[0xe0cba3ca]
	1011	[5893]	GETGLOBAL	R58 K34 ; R58 := 0xae91e43b
	1012	[5893]	SELF     	R58 R58 K143 ; R59 := R58; R58 := R58[0x42b04007]
	1013	[5893]	LOADK    	R60 K146 ; R60 := "/Lotus/Language/Menu/Cosmetics_SigilFactionError"
	1014	[5893]	OP_LOADBOOL	R61 0 0 ; R61 := false
	1015	[5893]	NEWTABLE 	R62 0 2 ; R62 := {}
	1016	[5893]	GETGLOBAL	R63 K2 ; R63 := mSelected
	1017	[5893]	GETTABLE 	R63 R63 K3 ; R63 := R63["Item"]
	1018	[5893]	GETTABLE 	R63 R63 K148 ; R63 := R63["Name"]
	1019	[5893]	SETTABLE 	R62 K147 R63 ; R62["SELECTED_SIGIL"] := R63
	1020	[5893]	SETTABLE 	R62 K149 R55 ; R62[0x00000000] := R55
	1021	[5893]	CALL     	R58 5 0 ; R58,... := R58(R59,R60,R61,R62)
	1022	[5893]	CALL     	R57 0 1 ; R57(R58,...)
	1023	[5894]	RETURN   	R0 1 ; return 
	1024	[5901]	GETUPVAL 	R57 U24 ; R57 := U24
	1025	[5901]	CALL     	R57 1 1 ; R57()
	1026	[5904]	OP_LOADBOOL	R57 1 0 ; R57 := true
	1027	[5904]	SETGLOBALHASH	R57 K71 ; mInputBlocked := R57
	1028	[5906]	GETUPVAL 	R57 U10 ; R57 := U10
	1029	[5906]	GETUPVAL 	R58 U3 ; R58 := U3
	1030	[5906]	GETTABLE 	R58 R58 K150 ; R58 := R58["CUSTOMIZING_SKINS"]
	1031	[5906]	CALL     	R57 2 1 ; R57(R58)
	1032	[5906]	JMP      	1229 ; PC := 1229
	1033	[5907]	GETUPVAL 	R57 U2 ; R57 := U2
	1034	[5907]	GETUPVAL 	R58 U3 ; R58 := U3
	1035	[5907]	GETTABLE 	R58 R58 K151 ; R58 := R58["SELECTING_CONSUMABLES"]
	1036	[5907]	EQ       	0 R57 R58 ; if R57 ~= R58 then PC := 1229
	1037	[5907]	JMP      	1229 ; PC := 1229
	1038	[5907]	GETGLOBAL	R57 K2 ; R57 := mSelected
	1039	[5907]	GETTABLE 	R57 R57 K3 ; R57 := R57["Item"]
	1040	[5907]	GETTABLE 	R57 R57 K152 ; R57 := R57["mPurchased"]
	1041	[5907]	TEST     	R57 0 ; if not R57 then PC := 1229
	1042	[5907]	JMP      	1229 ; PC := 1229
	1043	[5908]	OP_LOADBOOL	R57 1 0 ; R57 := true
	1044	[5908]	SETGLOBALHASH	R57 K71 ; mInputBlocked := R57
	1045	[5910]	GETGLOBAL	R57 K2 ; R57 := mSelected
	1046	[5910]	GETTABLE 	R57 R57 K3 ; R57 := R57["Item"]
	1047	[5910]	GETTABLE 	R57 R57 K84 ; R57 := R57["Type"]
	1048	[5911]	GETGLOBAL	R58 K2 ; R58 := mSelected
	1049	[5911]	GETTABLE 	R58 R58 K3 ; R58 := R58["Item"]
	1050	[5911]	GETTABLE 	R58 R58 K153 ; R58 := R58["mStoreItem"]
	1051	[5912]	OP_LOADBOOL	R59 0 0 ; R59 := false
	1052	[5913]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1053	[5913]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1054	[5913]	EQ       	1 R60 K13 ; if R60 == nil then PC := 1140
	1055	[5913]	JMP      	1140 ; PC := 1140
	1056	[5914]	OP_LOADBOOL	R60 1 0 ; R60 := true
	1057	[5914]	SETGLOBALHASH	R60 K155 ; mConsumablesChanged := R60
	1058	[5916]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1059	[5916]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1060	[5916]	SETTABLE 	R60 K156 K13 ; R60["HasRechargeUpgrade"] := nil
	1061	[5917]	GETGLOBAL	R60 K0 ; R60 := 0x7b998233
	1062	[5917]	MOVE     	R61 R57 ; R61 := R57
	1063	[5917]	CALL     	R60 2 2 ; R60 := R60(R61)
	1064	[5917]	NOT      	R59 R60 ; R59 := not R60
	1065	[5918]	TEST     	R59 0 ; if not R59 then PC := 1118
	1066	[5918]	JMP      	1118 ; PC := 1118
	1067	[5918]	GETUPVAL 	R60 U25 ; R60 := U25
	1068	[5918]	MOVE     	R61 R58 ; R61 := R58
	1069	[5918]	CALL     	R60 2 2 ; R60 := R60(R61)
	1070	[5918]	TEST     	R60 0 ; if not R60 then PC := 1118
	1071	[5918]	JMP      	1118 ; PC := 1118
	1072	[5919]	OP_LOADBOOL	R59 0 0 ; R59 := false
	1073	[5920]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1074	[5920]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1075	[5920]	GETGLOBAL	R61 K2 ; R61 := mSelected
	1076	[5920]	GETTABLE 	R61 R61 K3 ; R61 := R61["Item"]
	1077	[5920]	GETTABLE 	R61 R61 K148 ; R61 := R61["Name"]
	1078	[5920]	SETTABLE 	R60 K148 R61 ; R60["Name"] := R61
	1079	[5921]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1080	[5921]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1081	[5921]	SETTABLE 	R60 K84 R57 ; R60["Type"] := R57
	1082	[5922]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1083	[5922]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1084	[5922]	SETTABLE 	R60 K153 R58 ; R60["mStoreItem"] := R58
	1085	[5923]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1086	[5923]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1087	[5923]	GETGLOBAL	R61 K2 ; R61 := mSelected
	1088	[5923]	GETTABLE 	R61 R61 K3 ; R61 := R61["Item"]
	1089	[5923]	GETTABLE 	R61 R61 K157 ; R61 := R61["Icon"]
	1090	[5923]	SETTABLE 	R60 K157 R61 ; R60["Icon"] := R61
	1091	[5924]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1092	[5924]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1093	[5924]	SETTABLE 	R60 K158 K7 ; R60["mForceRedraw"] := true
	1094	[5925]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1095	[5925]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1096	[5925]	SETTABLE 	R60 K159 K57 ; R60["Filler"] := false
	1097	[5926]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1098	[5926]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1099	[5926]	SETTABLE 	R60 K160 K61 ; R60["Count"] := 0.000000
	1100	[5927]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1101	[5927]	GETTABLE 	R60 R60 K3 ; R60 := R60["Item"]
	1102	[5927]	GETTABLE 	R60 R60 K12 ; R60 := R60["mPurchasedInfo"]
	1103	[5927]	EQ       	1 R60 K13 ; if R60 == nil then PC := 1172
	1104	[5927]	JMP      	1172 ; PC := 1172
	1105	[5928]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1106	[5928]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1107	[5928]	GETGLOBAL	R61 K161 ; R61 := 0x5bced4c4
	1108	[5928]	GETTABLE 	R61 R61 K162 ; R61 := R61[0xac1b386a]
	1109	[5928]	GETGLOBAL	R62 K2 ; R62 := mSelected
	1110	[5928]	GETTABLE 	R62 R62 K3 ; R62 := R62["Item"]
	1111	[5928]	GETTABLE 	R62 R62 K12 ; R62 := R62["mPurchasedInfo"]
	1112	[5928]	GETTABLE 	R62 R62 K163 ; R62 := R62["ItemCount"]
	1113	[5928]	SELF     	R63 R58 K164 ; R64 := R58; R63 := R58[0x1c030fa3]
	1114	[5928]	CALL     	R63 2 0 ; R63,... := R63(R64)
	1115	[5928]	CALL     	R61 0 2 ; R61 := R61(R62,...)
	1116	[5928]	SETTABLE 	R60 K160 R61 ; R60["Count"] := R61
	1117	[5929]	JMP      	1172 ; PC := 1172
	1118	[5931]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1119	[5931]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1120	[5931]	SETTABLE 	R60 K148 K13 ; R60["Name"] := nil
	1121	[5932]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1122	[5932]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1123	[5932]	SETTABLE 	R60 K84 K13 ; R60["Type"] := nil
	1124	[5933]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1125	[5933]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1126	[5933]	SETTABLE 	R60 K153 K13 ; R60["mStoreItem"] := nil
	1127	[5934]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1128	[5934]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1129	[5934]	SETTABLE 	R60 K157 K13 ; R60["Icon"] := nil
	1130	[5935]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1131	[5935]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1132	[5935]	SETTABLE 	R60 K158 K7 ; R60["mForceRedraw"] := true
	1133	[5936]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1134	[5936]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1135	[5936]	SETTABLE 	R60 K159 K7 ; R60["Filler"] := true
	1136	[5937]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1137	[5937]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1138	[5937]	SETTABLE 	R60 K160 K61 ; R60["Count"] := 0.000000
	1139	[5938]	JMP      	1172 ; PC := 1172
	1140	[5939]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1141	[5939]	GETTABLE 	R60 R60 K165 ; R60 := R60["Emote"]
	1142	[5939]	EQ       	1 R60 K13 ; if R60 == nil then PC := 1172
	1143	[5939]	JMP      	1172 ; PC := 1172
	1144	[5940]	OP_LOADBOOL	R60 1 0 ; R60 := true
	1145	[5940]	SETGLOBALHASH	R60 K166 ; mEmotesChanged := R60
	1146	[5942]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1147	[5942]	GETTABLE 	R60 R60 K165 ; R60 := R60["Emote"]
	1148	[5942]	GETUPVAL 	R61 U5 ; R61 := U5
	1149	[5942]	GETTABLE 	R61 R61 K45 ; R61 := R61[0x06d055f9]
	1150	[5942]	EQ       	1 R57 K13 ; if R57 == nil then PC := 1153
	1151	[5942]	JMP      	1153 ; PC := 1153
	1152	[5942]	OP_LOADBOOL	R62 0 1 ; R62 := false; PC := 1153
	1153	[5942]	OP_LOADBOOL	R62 1 0 ; R62 := true
	1154	[5942]	LOADNIL  	R63 R63 ; R63 := nil
	1155	[5942]	MOVE     	R64 R58 ; R64 := R58
	1156	[5942]	CALL     	R61 4 2 ; R61 := R61(R62,R63,R64)
	1157	[5942]	SETTABLE 	R60 K153 R61 ; R60["mStoreItem"] := R61
	1158	[5943]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1159	[5943]	GETTABLE 	R60 R60 K165 ; R60 := R60["Emote"]
	1160	[5943]	SETTABLE 	R60 K84 R57 ; R60["Type"] := R57
	1161	[5945]	GETGLOBAL	R60 K0 ; R60 := 0x7b998233
	1162	[5945]	GETGLOBAL	R61 K5 ; R61 := _T
	1163	[5945]	GETTABLE 	R61 R61 K48 ; R61 := R61["MenuSuitAvatar"]
	1164	[5945]	CALL     	R60 2 2 ; R60 := R60(R61)
	1165	[5945]	TEST     	R60 1 ; if R60 then PC := 1172
	1166	[5945]	JMP      	1172 ; PC := 1172
	1167	[5946]	GETGLOBAL	R60 K5 ; R60 := _T
	1168	[5946]	GETTABLE 	R60 R60 K48 ; R60 := R60["MenuSuitAvatar"]
	1169	[5946]	SELF     	R60 R60 K167 ; R61 := R60; R60 := R60[0xb13134f8]
	1170	[5946]	LOADNIL  	R62 R62 ; R62 := nil
	1171	[5946]	CALL     	R60 3 1 ; R60(R61,R62)
	1172	[5950]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1173	[5950]	GETTABLE 	R60 R60 K154 ; R60 := R60["Consumable"]
	1174	[5950]	TEST     	R60 1 ; if R60 then PC := 1178
	1175	[5950]	JMP      	1178 ; PC := 1178
	1176	[5950]	GETGLOBAL	R60 K2 ; R60 := mSelected
	1177	[5950]	GETTABLE 	R60 R60 K165 ; R60 := R60["Emote"]
	1178	[5952]	TEST     	R59 0 ; if not R59 then PC := 1185
	1179	[5952]	JMP      	1185 ; PC := 1185
	1180	[5953]	GETGLOBAL	R61 K5 ; R61 := _T
	1181	[5953]	GETTABLE 	R61 R61 K168 ; R61 := R61[0xc85e4018]
	1182	[5953]	NEWTABLE 	R62 0 0 ; R62 := {}
	1183	[5953]	CALL     	R61 2 1 ; R61(R62)
	1184	[5953]	JMP      	1224 ; PC := 1224
	1185	[5954]	GETGLOBAL	R61 K0 ; R61 := 0x7b998233
	1186	[5954]	GETTABLE 	R62 R60 K84 ; R62 := R60["Type"]
	1187	[5954]	CALL     	R61 2 2 ; R61 := R61(R62)
	1188	[5954]	TEST     	R61 0 ; if not R61 then PC := 1197
	1189	[5954]	JMP      	1197 ; PC := 1197
	1190	[5955]	GETGLOBAL	R61 K5 ; R61 := _T
	1191	[5955]	GETTABLE 	R61 R61 K168 ; R61 := R61[0xc85e4018]
	1192	[5955]	NEWTABLE 	R62 1 0 ; R62 := {}
	1193	[5955]	MOVE     	R63 R60 ; R63 := R60
	1194	[5955]	SETLIST  	R62 1 1 ; R62[(1-1)*FPF+i] := R(62+i), 1 <= i <= 1
	1195	[5955]	CALL     	R61 2 1 ; R61(R62)
	1196	[5955]	JMP      	1224 ; PC := 1224
	1197	[5957]	GETGLOBAL	R61 K0 ; R61 := 0x7b998233
	1198	[5957]	GETGLOBAL	R62 K5 ; R62 := _T
	1199	[5957]	GETTABLE 	R62 R62 K169 ; R62 := R62["BackgroundMovie"]
	1200	[5957]	CALL     	R61 2 2 ; R61 := R61(R62)
	1201	[5957]	TEST     	R61 1 ; if R61 then PC := 1209
	1202	[5957]	JMP      	1209 ; PC := 1209
	1203	[5958]	GETGLOBAL	R61 K5 ; R61 := _T
	1204	[5958]	GETTABLE 	R61 R61 K169 ; R61 := R61["BackgroundMovie"]
	1205	[5958]	SELF     	R61 R61 K35 ; R62 := R61; R61 := R61[0xe4162eed]
	1206	[5958]	LOADK    	R63 K170 ; R63 := "ShowBlockingMessage"
	1207	[5958]	LOADK    	R64 K171 ; R64 := "1"
	1208	[5958]	CALL     	R61 4 1 ; R61(R62,R63,R64)
	1209	[5961]	GETGLOBAL	R61 K125 ; R61 := mLoaders
	1210	[5961]	GETTABLE 	R61 R61 K172 ; R61 := R61["mConsumablesLoader"]
	1211	[5961]	SELF     	R61 R61 K173 ; R62 := R61; R61 := R61[0x5a7aac67]
	1212	[5961]	CALL     	R61 2 1 ; R61(R62)
	1213	[5962]	GETGLOBAL	R61 K125 ; R61 := mLoaders
	1214	[5962]	GETTABLE 	R61 R61 K172 ; R61 := R61["mConsumablesLoader"]
	1215	[5962]	SELF     	R61 R61 K174 ; R62 := R61; R61 := R61[0x2f86cf1e]
	1216	[5962]	NEWTABLE 	R63 0 0 ; R63 := {}
	1217	[5962]	GETTABLE 	R64 R60 K84 ; R64 := R60["Type"]
	1218	[5962]	SELF     	R64 R64 K175 ; R65 := R64; R64 := R64[0xed4e0128]
	1219	[5962]	CALL     	R64 2 0 ; R64,... := R64(R65)
	1220	[5962]	SETLIST  	R63 0 1 ; R63[(1-1)*FPF+i] := R(63+i), 1 <= i <= 0
	1221	[5962]	OP_LOADBOOL	R64 1 0 ; R64 := true
	1222	[5962]	CALL     	R61 4 1 ; R61(R62,R63,R64)
	1223	[5964]	RETURN   	R0 1 ; return 
	1224	[5967]	GETUPVAL 	R61 U10 ; R61 := U10
	1225	[5967]	GETUPVAL 	R62 U3 ; R62 := U3
	1226	[5967]	GETTABLE 	R62 R62 K176 ; R62 := R62["BROWSING_CONSUMABLES"]
	1227	[5967]	CALL     	R61 2 1 ; R61(R62)
	1228	[5969]	RETURN   	R0 1 ; return 
	1229	[5973]	TEST     	R3 1 ; if R3 then PC := 1263
	1230	[5973]	JMP      	1263 ; PC := 1263
	1231	[5973]	GETUPVAL 	R61 U2 ; R61 := U2
	1232	[5973]	GETUPVAL 	R62 U3 ; R62 := U3
	1233	[5973]	GETTABLE 	R62 R62 K151 ; R62 := R62["SELECTING_CONSUMABLES"]
	1234	[5973]	EQ       	1 R61 R62 ; if R61 == R62 then PC := 1263
	1235	[5973]	JMP      	1263 ; PC := 1263
	1236	[5973]	GETUPVAL 	R61 U2 ; R61 := U2
	1237	[5973]	GETUPVAL 	R62 U3 ; R62 := U3
	1238	[5973]	GETTABLE 	R62 R62 K176 ; R62 := R62["BROWSING_CONSUMABLES"]
	1239	[5973]	EQ       	1 R61 R62 ; if R61 == R62 then PC := 1263
	1240	[5973]	JMP      	1263 ; PC := 1263
	1241	[5973]	GETGLOBAL	R61 K0 ; R61 := 0x7b998233
	1242	[5973]	GETGLOBAL	R62 K2 ; R62 := mSelected
	1243	[5973]	GETTABLE 	R62 R62 K9 ; R62 := R62["Element"]
	1244	[5973]	CALL     	R61 2 2 ; R61 := R61(R62)
	1245	[5973]	TEST     	R61 1 ; if R61 then PC := 1263
	1246	[5973]	JMP      	1263 ; PC := 1263
	1247	[5973]	GETGLOBAL	R61 K2 ; R61 := mSelected
	1248	[5973]	GETTABLE 	R61 R61 K9 ; R61 := R61["Element"]
	1249	[5973]	GETTABLE 	R61 R61 K115 ; R61 := R61["LunaroArenaEntry"]
	1250	[5973]	TEST     	R61 1 ; if R61 then PC := 1263
	1251	[5973]	JMP      	1263 ; PC := 1263
	1252	[5974]	GETGLOBAL	R61 K1 ; R61 := 0x25d99d89
	1253	[5974]	SELF     	R61 R61 K70 ; R62 := R61; R61 := R61[0x400b84a1]
	1254	[5974]	GETGLOBAL	R63 K2 ; R63 := mSelected
	1255	[5974]	GETTABLE 	R63 R63 K9 ; R63 := R63["Element"]
	1256	[5974]	GETTABLE 	R63 R63 K39 ; R63 := R63["LoadOutType"]
	1257	[5974]	GETGLOBAL	R64 K63 ; R64 := mCurrentLoadout
	1258	[5974]	GETGLOBAL	R65 K2 ; R65 := mSelected
	1259	[5974]	GETTABLE 	R65 R65 K9 ; R65 := R65["Element"]
	1260	[5974]	GETTABLE 	R65 R65 K39 ; R65 := R65["LoadOutType"]
	1261	[5974]	GETTABLE 	R64 R64 R65 ; R64 := R64[R65]
	1262	[5974]	CALL     	R61 4 1 ; R61(R62,R63,R64)
	1263	[5977]	GETGLOBAL	R61 K5 ; R61 := _T
	1264	[5977]	GETTABLE 	R61 R61 K48 ; R61 := R61["MenuSuitAvatar"]
	1265	[5978]	GETUPVAL 	R62 U26 ; R62 := U26
	1266	[5978]	GETUPVAL 	R63 U27 ; R63 := U27
	1267	[5978]	GETTABLE 	R63 R63 K177 ; R63 := R63["Current"]
	1268	[5978]	EQ       	1 R63 K133 ; if R63 == 2.000000 then PC := 1271
	1269	[5978]	JMP      	1271 ; PC := 1271
	1270	[5978]	OP_LOADBOOL	R63 0 1 ; R63 := false; PC := 1271
	1271	[5978]	OP_LOADBOOL	R63 1 0 ; R63 := true
	1272	[5978]	OP_LOADBOOL	R64 1 0 ; R64 := true
	1273	[5978]	CALL     	R62 3 1 ; R62(R63,R64)
	1274	[5979]	GETGLOBAL	R62 K0 ; R62 := 0x7b998233
	1275	[5979]	GETUPVAL 	R63 U28 ; R63 := U28
	1276	[5979]	CALL     	R62 2 2 ; R62 := R62(R63)
	1277	[5979]	TEST     	R62 0 ; if not R62 then PC := 1283
	1278	[5979]	JMP      	1283 ; PC := 1283
	1279	[5980]	SELF     	R62 R61 K52 ; R63 := R61; R62 := R61[0xde321e6f]
	1280	[5980]	CALL     	R62 2 2 ; R62 := R62(R63)
	1281	[5980]	SELF     	R62 R62 K178 ; R63 := R62; R62 := R62[0x0c277ae1]
	1282	[5980]	CALL     	R62 2 1 ; R62(R63)
	1283	[5983]	GETUPVAL 	R62 U29 ; R62 := U29
	1284	[5983]	CALL     	R62 1 2 ; R62 := R62()
	1285	[5983]	TEST     	R62 1 ; if R62 then PC := 1306
	1286	[5983]	JMP      	1306 ; PC := 1306
	1287	[5984]	GETGLOBAL	R62 K5 ; R62 := _T
	1288	[5984]	GETTABLE 	R62 R62 K79 ; R62 := R62["mSentinelMode"]
	1289	[5984]	TEST     	R62 0 ; if not R62 then PC := 1306
	1290	[5984]	JMP      	1306 ; PC := 1306
	1291	[5985]	GETGLOBAL	R62 K1 ; R62 := 0x25d99d89
	1292	[5985]	SELF     	R62 R62 K179 ; R63 := R62; R62 := R62[0x3c6b0324]
	1293	[5985]	CALL     	R62 2 2 ; R62 := R62(R63)
	1294	[5985]	TEST     	R62 1 ; if R62 then PC := 1301
	1295	[5985]	JMP      	1301 ; PC := 1301
	1296	[5985]	GETGLOBAL	R62 K1 ; R62 := 0x25d99d89
	1297	[5985]	SELF     	R62 R62 K180 ; R63 := R62; R62 := R62[0x9f91f49d]
	1298	[5985]	CALL     	R62 2 2 ; R62 := R62(R63)
	1299	[5985]	TEST     	R62 0 ; if not R62 then PC := 1306
	1300	[5985]	JMP      	1306 ; PC := 1306
	1301	[5986]	LOADK    	R62 := 2.000000
	1302	[5986]	SETUPVAL 	R62 U30 ; U30 := R62
	1303	[5987]	GETUPVAL 	R62 U16 ; R62 := U16
	1304	[5987]	GETTABLE 	R62 R62 K181 ; R62 := R62[0xd4c67576]
	1305	[5987]	CALL     	R62 1 1 ; R62()
	1306	[5991]	GETGLOBAL	R62 K2 ; R62 := mSelected
	1307	[5991]	GETTABLE 	R62 R62 K9 ; R62 := R62["Element"]
	1308	[5991]	EQ       	1 R62 K13 ; if R62 == nil then PC := 1320
	1309	[5991]	JMP      	1320 ; PC := 1320
	1310	[5992]	GETUPVAL 	R62 U31 ; R62 := U31
	1311	[5992]	GETGLOBAL	R63 K2 ; R63 := mSelected
	1312	[5992]	GETTABLE 	R63 R63 K9 ; R63 := R63["Element"]
	1313	[5992]	GETTABLE 	R63 R63 K39 ; R63 := R63["LoadOutType"]
	1314	[5992]	GETGLOBAL	R64 K2 ; R64 := mSelected
	1315	[5992]	GETTABLE 	R64 R64 K9 ; R64 := R64["Element"]
	1316	[5992]	GETTABLE 	R64 R64 K40 ; R64 := R64["LoadOutId"]
	1317	[5992]	GETGLOBAL	R65 K2 ; R65 := mSelected
	1318	[5992]	GETTABLE 	R65 R65 K9 ; R65 := R65["Element"]
	1319	[5992]	CALL     	R62 4 1 ; R62(R63,R64,R65)
	1320	[5995]	GETUPVAL 	R62 U16 ; R62 := U16
	1321	[5995]	GETTABLE 	R62 R62 K182 ; R62 := R62[0xcfd657f3]
	1322	[5995]	MOVE     	R63 R61 ; R63 := R61
	1323	[5995]	CALL     	R62 2 1 ; R62(R63)
	1324	[5997]	GETUPVAL 	R62 U21 ; R62 := U21
	1325	[5997]	GETUPVAL 	R63 U22 ; R63 := U22
	1326	[5997]	GETTABLE 	R63 R63 K139 ; R63 := R63["FRONT"]
	1327	[5997]	EQ       	1 R62 R63 ; if R62 == R63 then PC := 1334
	1328	[5997]	JMP      	1334 ; PC := 1334
	1329	[5997]	GETUPVAL 	R62 U21 ; R62 := U21
	1330	[5997]	GETUPVAL 	R63 U22 ; R63 := U22
	1331	[5997]	GETTABLE 	R63 R63 K142 ; R63 := R63["BACK"]
	1332	[5997]	EQ       	0 R62 R63 ; if R62 ~= R63 then PC := 1337
	1333	[5997]	JMP      	1337 ; PC := 1337
	1334	[5998]	GETUPVAL 	R62 U32 ; R62 := U32
	1335	[5998]	CALL     	R62 1 1 ; R62()
	1336	[5998]	JMP      	1355 ; PC := 1355
	1337	[5999]	GETGLOBAL	R62 K72 ; R62 := mLists
	1338	[5999]	GETTABLE 	R62 R62 K183 ; R62 := R62["mCosmeticsList"]
	1339	[5999]	GETTABLE 	R62 R62 K184 ; R62 := R62["mCurrLevel"]
	1340	[5999]	GETGLOBAL	R63 K72 ; R63 := mLists
	1341	[5999]	GETTABLE 	R63 R63 K183 ; R63 := R63["mCosmeticsList"]
	1342	[5999]	GETTABLE 	R63 R63 K185 ; R63 := R63["HOLSTER_STYLE"]
	1343	[5999]	EQ       	1 R62 R63 ; if R62 == R63 then PC := 1353
	1344	[5999]	JMP      	1353 ; PC := 1353
	1345	[5999]	GETGLOBAL	R62 K72 ; R62 := mLists
	1346	[5999]	GETTABLE 	R62 R62 K183 ; R62 := R62["mCosmeticsList"]
	1347	[5999]	GETTABLE 	R62 R62 K184 ; R62 := R62["mCurrLevel"]
	1348	[5999]	GETGLOBAL	R63 K72 ; R63 := mLists
	1349	[5999]	GETTABLE 	R63 R63 K183 ; R63 := R63["mCosmeticsList"]
	1350	[5999]	GETTABLE 	R63 R63 K186 ; R63 := R63["HOLSTER_CUSTOMIZATION"]
	1351	[5999]	EQ       	0 R62 R63 ; if R62 ~= R63 then PC := 1355
	1352	[5999]	JMP      	1355 ; PC := 1355
	1353	[6000]	GETUPVAL 	R62 U33 ; R62 := U33
	1354	[6000]	CALL     	R62 1 1 ; R62()
	1355	[6003]	TEST     	R2 0 ; if not R2 then PC := 1361
	1356	[6003]	JMP      	1361 ; PC := 1361
	1357	[6004]	GETUPVAL 	R62 U34 ; R62 := U34
	1358	[6004]	GETGLOBAL	R63 K2 ; R63 := mSelected
	1359	[6004]	GETTABLE 	R63 R63 K9 ; R63 := R63["Element"]
	1360	[6004]	CALL     	R62 2 1 ; R62(R63)
	1361	[6008]	GETGLOBAL	R62 K0 ; R62 := 0x7b998233
	1362	[6008]	GETGLOBAL	R63 K5 ; R63 := _T
	1363	[6008]	GETTABLE 	R63 R63 K48 ; R63 := R63["MenuSuitAvatar"]
	1364	[6008]	CALL     	R62 2 2 ; R62 := R62(R63)
	1365	[6008]	TEST     	R62 1 ; if R62 then PC := 1375
	1366	[6008]	JMP      	1375 ; PC := 1375
	1367	[6009]	GETGLOBAL	R62 K5 ; R62 := _T
	1368	[6009]	GETGLOBAL	R63 K5 ; R63 := _T
	1369	[6009]	GETTABLE 	R63 R63 K48 ; R63 := R63["MenuSuitAvatar"]
	1370	[6009]	SELF     	R63 R63 K52 ; R64 := R63; R63 := R63[0xde321e6f]
	1371	[6009]	CALL     	R63 2 2 ; R63 := R63(R64)
	1372	[6009]	SELF     	R63 R63 K188 ; R64 := R63; R63 := R63[0x2676deee]
	1373	[6009]	CALL     	R63 2 2 ; R63 := R63(R64)
	1374	[6009]	SETTABLE 	R62 K187 R63 ; R62["MenuSentinel"] := R63
	1375	[6012]	GETGLOBAL	R62 K0 ; R62 := 0x7b998233
	1376	[6012]	GETGLOBAL	R63 K5 ; R63 := _T
	1377	[6012]	GETTABLE 	R63 R63 K187 ; R63 := R63["MenuSentinel"]
	1378	[6012]	CALL     	R62 2 2 ; R62 := R62(R63)
	1379	[6012]	TEST     	R62 1 ; if R62 then PC := 1409
	1380	[6012]	JMP      	1409 ; PC := 1409
	1381	[6013]	GETGLOBAL	R62 K5 ; R62 := _T
	1382	[6013]	GETTABLE 	R62 R62 K187 ; R62 := R62["MenuSentinel"]
	1383	[6013]	SELF     	R62 R62 K189 ; R63 := R62; R62 := R62[0xd749da12]
	1384	[6013]	OP_LOADBOOL	R64 0 0 ; R64 := false
	1385	[6013]	CALL     	R62 3 1 ; R62(R63,R64)
	1386	[6015]	GETGLOBAL	R62 K5 ; R62 := _T
	1387	[6015]	GETTABLE 	R62 R62 K190 ; R62 := R62["InSimulacrum"]
	1388	[6015]	TEST     	R62 0 ; if not R62 then PC := 1409
	1389	[6015]	JMP      	1409 ; PC := 1409
	1390	[6016]	GETGLOBAL	R62 K5 ; R62 := _T
	1391	[6016]	GETTABLE 	R62 R62 K187 ; R62 := R62["MenuSentinel"]
	1392	[6016]	SELF     	R62 R62 K191 ; R63 := R62; R62 := R62[0x23d6100a]
	1393	[6016]	OP_LOADBOOL	R64 0 0 ; R64 := false
	1394	[6016]	CALL     	R62 3 1 ; R62(R63,R64)
	1395	[6017]	GETGLOBAL	R62 K5 ; R62 := _T
	1396	[6017]	GETTABLE 	R62 R62 K187 ; R62 := R62["MenuSentinel"]
	1397	[6017]	SELF     	R62 R62 K52 ; R63 := R62; R62 := R62[0xde321e6f]
	1398	[6017]	CALL     	R62 2 2 ; R62 := R62(R63)
	1399	[6017]	SELF     	R62 R62 K192 ; R63 := R62; R62 := R62[0xf7d48ee0]
	1400	[6017]	CALL     	R62 2 2 ; R62 := R62(R63)
	1401	[6018]	GETGLOBAL	R63 K0 ; R63 := 0x7b998233
	1402	[6018]	MOVE     	R64 R62 ; R64 := R62
	1403	[6018]	CALL     	R63 2 2 ; R63 := R63(R64)
	1404	[6018]	TEST     	R63 1 ; if R63 then PC := 1409
	1405	[6018]	JMP      	1409 ; PC := 1409
	1406	[6019]	SELF     	R63 R62 K193 ; R64 := R62; R63 := R62[0x1bf26251]
	1407	[6019]	OP_LOADBOOL	R65 0 0 ; R65 := false
	1408	[6019]	CALL     	R63 3 1 ; R63(R64,R65)
	1409	[6025]	GETGLOBAL	R63 K1 ; R63 := 0x25d99d89
	1410	[6025]	SELF     	R63 R63 K194 ; R64 := R63; R63 := R63[0x121ec068]
	1411	[6025]	CALL     	R63 2 1 ; R63(R64)
	1412	[6027]	NEWTABLE 	R63 0 0 ; R63 := {}
	1413	[6028]	GETGLOBAL	R64 K72 ; R64 := mLists
	1414	[6028]	GETTABLE 	R64 R64 K73 ; R64 := R64["mLoadOutList"]
	1415	[6028]	SELF     	R64 R64 K74 ; R65 := R64; R64 := R64[0xea061e98]
	1416	[6036]	CLOSURE  	R66 0 ; R66 := closure(Function #1)
	1417	[6036]	MOVE     	R0 R63 ; R0 := R63
	1418	[6028]	CALL     	R64 3 1 ; R64(R65,R66)
	1419	[6037]	GETGLOBAL	R64 K125 ; R64 := mLoaders
	1420	[6037]	GETTABLE 	R64 R64 K195 ; R64 := R64["mSlotLoader"]
	1421	[6037]	SELF     	R64 R64 K196 ; R65 := R64; R64 := R64[0x4a749835]
	1422	[6037]	MOVE     	R66 R63 ; R66 := R63
	1423	[6037]	CALL     	R64 3 1 ; R64(R65,R66)
	1424	[6039]	TEST     	R1 1 ; if R1 then PC := 1436
	1425	[6039]	JMP      	1436 ; PC := 1436
	1426	[6039]	GETGLOBAL	R64 K197 ; R64 := mPendingRandomizeInfo
	1427	[6039]	GETTABLE 	R64 R64 K198 ; R64 := R64["Items"]
	1428	[6039]	LEN      	R64 R64 ; R64 := # R64
	1429	[6039]	EQ       	0 R64 K61 ; if R64 ~= 0.000000 then PC := 1436
	1430	[6039]	JMP      	1436 ; PC := 1436
	1431	[6040]	GETUPVAL 	R64 U5 ; R64 := U5
	1432	[6040]	GETTABLE 	R64 R64 K199 ; R64 := R64[0x659d451f]
	1433	[6040]	GETGLOBAL	R65 K200 ; R65 := 0x0032441c
	1434	[6040]	GETTABLE 	R65 R65 K201 ; R65 := R65["UISound_SweetenerTwo"]
	1435	[6040]	CALL     	R64 2 1 ; R64(R65)
	1436	[6042]	RETURN   	R0 1 ; return 

function #103 <?:6044,6062> (79 instructions, 316 bytes at 0000021130D22540)
1 param, 7 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[6045]	GETGLOBAL	R1 K0 ; R1 := mCurrentLoadout
	2	[6045]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[6045]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[6045]	GETTABLE 	R2 R2 K3 ; R2 := R2["LoadOutType"]
	5	[6045]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	6	[6045]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x2abbe722]
	7	[6045]	GETGLOBAL	R3 K1 ; R3 := mSelected
	8	[6045]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	9	[6045]	GETTABLE 	R3 R3 K5 ; R3 := R3["LoadOutId"]
	10	[6045]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[6046]	TEST     	R0 0 ; if not R0 then PC := 21
	12	[6046]	JMP      	21 ; PC := 21
	13	[6047]	GETTABLE 	R2 R1 K6 ; R2 := R1["mItemId"]
	14	[6047]	SETTABLE 	R2 K7 K8 ; R2["mId"] := ""
	15	[6048]	GETGLOBAL	R2 K1 ; R2 := mSelected
	16	[6048]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	17	[6048]	GETGLOBAL	R3 K10 ; R3 := 0x6c97a788
	18	[6048]	GETTABLE 	R3 R3 K11 ; R3 := R3["InvalidItemID"]
	19	[6048]	SETTABLE 	R2 K9 R3 ; R2[0x6c97a788] := R3
	20	[6048]	JMP      	42 ; PC := 42
	21	[6050]	GETGLOBAL	R2 K1 ; R2 := mSelected
	22	[6050]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	23	[6050]	GETGLOBAL	R3 K1 ; R3 := mSelected
	24	[6050]	GETTABLE 	R3 R3 K12 ; R3 := R3["Item"]
	25	[6050]	GETTABLE 	R3 R3 K13 ; R3 := R3["RawItem"]
	26	[6050]	GETTABLE 	R3 R3 K9 ; R3 := R3["UID"]
	27	[6050]	SETTABLE 	R2 K9 R3 ; R2[0x6c97a788] := R3
	28	[6051]	GETTABLE 	R2 R1 K6 ; R2 := R1["mItemId"]
	29	[6051]	GETGLOBAL	R3 K1 ; R3 := mSelected
	30	[6051]	GETTABLE 	R3 R3 K12 ; R3 := R3["Item"]
	31	[6051]	GETTABLE 	R3 R3 K13 ; R3 := R3["RawItem"]
	32	[6051]	GETTABLE 	R3 R3 K9 ; R3 := R3["UID"]
	33	[6051]	SETTABLE 	R2 K7 R3 ; R2["mId"] := R3
	34	[6052]	GETGLOBAL	R2 K1 ; R2 := mSelected
	35	[6052]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	36	[6052]	GETTABLE 	R2 R2 K14 ; R2 := R2["mModSlot"]
	37	[6052]	SETTABLE 	R1 K14 R2 ; R1[0xfa9e477f] := R2
	38	[6053]	GETGLOBAL	R2 K1 ; R2 := mSelected
	39	[6053]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	40	[6053]	GETTABLE 	R2 R2 K15 ; R2 := R2["mCustSlot"]
	41	[6053]	SETTABLE 	R1 K15 R2 ; R1["mCustSlot"] := R2
	42	[6055]	GETGLOBAL	R2 K0 ; R2 := mCurrentLoadout
	43	[6055]	GETGLOBAL	R3 K1 ; R3 := mSelected
	44	[6055]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	45	[6055]	GETTABLE 	R3 R3 K3 ; R3 := R3["LoadOutType"]
	46	[6055]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	47	[6055]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0xffca321e]
	48	[6055]	GETGLOBAL	R4 K1 ; R4 := mSelected
	49	[6055]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	50	[6055]	GETTABLE 	R4 R4 K5 ; R4 := R4["LoadOutId"]
	51	[6055]	MOVE     	R5 R1 ; R5 := R1
	52	[6055]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	53	[6057]	GETGLOBAL	R2 K17 ; R2 := mInventory
	54	[6057]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0x6beb8ae1]
	55	[6057]	GETGLOBAL	R4 K1 ; R4 := mSelected
	56	[6057]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	57	[6057]	GETTABLE 	R4 R4 K3 ; R4 := R4["LoadOutType"]
	58	[6057]	GETGLOBAL	R5 K0 ; R5 := mCurrentLoadout
	59	[6057]	GETGLOBAL	R6 K1 ; R6 := mSelected
	60	[6057]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	61	[6057]	GETTABLE 	R6 R6 K3 ; R6 := R6["LoadOutType"]
	62	[6057]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	63	[6057]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	64	[6059]	GETGLOBAL	R2 K19 ; R2 := 0x25d99d89
	65	[6059]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0x400b84a1]
	66	[6059]	GETGLOBAL	R4 K1 ; R4 := mSelected
	67	[6059]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	68	[6059]	GETTABLE 	R4 R4 K3 ; R4 := R4["LoadOutType"]
	69	[6059]	GETGLOBAL	R5 K0 ; R5 := mCurrentLoadout
	70	[6059]	GETGLOBAL	R6 K1 ; R6 := mSelected
	71	[6059]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	72	[6059]	GETTABLE 	R6 R6 K3 ; R6 := R6["LoadOutType"]
	73	[6059]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	74	[6059]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	75	[6061]	GETUPVAL 	R2 U0 ; R2 := U0
	76	[6061]	GETGLOBAL	R3 K1 ; R3 := mSelected
	77	[6061]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	78	[6061]	CALL     	R2 2 1 ; R2(R3)
	79	[6062]	RETURN   	R0 1 ; return 

function #104 <?:6064,6075> (40 instructions, 160 bytes at 000002111CFC9780)
1 param, 8 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[6065]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[6065]	MOVE     	R2 R0 ; R2 := R0
	3	[6065]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6065]	MOVE     	R0 R1 ; R0 := R1
	5	[6066]	EQ       	0 R0 K2 ; if R0 ~= 4.000000 then PC := 23
	6	[6066]	JMP      	23 ; PC := 23
	7	[6068]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	8	[6068]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x42b04007]
	9	[6068]	LOADK    	R3 K5 ; R3 := "/Lotus/Language/Menu/ConfirmRoamPet"
	10	[6068]	OP_LOADBOOL	R4 0 0 ; R4 := false
	11	[6068]	NEWTABLE 	R5 0 1 ; R5 := {}
	12	[6068]	GETGLOBAL	R6 K7 ; R6 := mSelected
	13	[6068]	GETTABLE 	R6 R6 K8 ; R6 := R6["Item"]
	14	[6068]	GETTABLE 	R6 R6 K9 ; R6 := R6["Name"]
	15	[6068]	SETTABLE 	R5 K6 R6 ; R5[0x5f6897e6] := R6
	16	[6068]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	17	[6069]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[6069]	GETTABLE 	R2 R2 K10 ; R2 := R2[0xdedfded7]
	19	[6069]	MOVE     	R3 R1 ; R3 := R1
	20	[6069]	LOADK    	R4 K11 ; R4 := "ConfirmRoamPet"
	21	[6069]	CALL     	R2 3 1 ; R2(R3,R4)
	22	[6069]	JMP      	40 ; PC := 40
	23	[6070]	EQ       	0 R0 K12 ; if R0 ~= 6.000000 then PC := 40
	24	[6070]	JMP      	40 ; PC := 40
	25	[6072]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	26	[6072]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x42b04007]
	27	[6072]	LOADK    	R4 K13 ; R4 := "/Lotus/Language/Menu/ConfirmMaturePet"
	28	[6072]	OP_LOADBOOL	R5 0 0 ; R5 := false
	29	[6072]	NEWTABLE 	R6 0 1 ; R6 := {}
	30	[6072]	GETGLOBAL	R7 K7 ; R7 := mSelected
	31	[6072]	GETTABLE 	R7 R7 K8 ; R7 := R7["Item"]
	32	[6072]	GETTABLE 	R7 R7 K9 ; R7 := R7["Name"]
	33	[6072]	SETTABLE 	R6 K6 R7 ; R6[0x5f6897e6] := R7
	34	[6072]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	35	[6073]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[6073]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xdedfded7]
	37	[6073]	MOVE     	R4 R2 ; R4 := R2
	38	[6073]	LOADK    	R5 K14 ; R5 := "ConfirmMaturePet"
	39	[6073]	CALL     	R3 3 1 ; R3(R4,R5)
	40	[6075]	RETURN   	R0 1 ; return 

function #105 <?:6077,6095> (60 instructions, 240 bytes at 000002111CFC9A70)
1 param, 5 slots, 5 upvalues, 0 locals, 23 constants, 0 functions
	1	[6078]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[6078]	MOVE     	R2 R0 ; R2 := R0
	3	[6078]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6078]	MOVE     	R0 R1 ; R0 := R1
	5	[6079]	EQ       	0 R0 K2 ; if R0 ~= 4.000000 then PC := 60
	6	[6079]	JMP      	60 ; PC := 60
	7	[6080]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[6080]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[6080]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[6080]	TEST     	R1 1 ; if R1 then PC := 21
	11	[6080]	JMP      	21 ; PC := 21
	12	[6080]	GETGLOBAL	R1 K4 ; R1 := mSelected
	13	[6080]	GETTABLE 	R1 R1 K5 ; R1 := R1["Item"]
	14	[6080]	GETTABLE 	R1 R1 K6 ; R1 := R1["RawItem"]
	15	[6080]	GETTABLE 	R1 R1 K7 ; R1 := R1["UID"]
	16	[6080]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[6080]	GETTABLE 	R2 R2 K8 ; R2 := R2["mItemId"]
	18	[6080]	GETTABLE 	R2 R2 K9 ; R2 := R2["mId"]
	19	[6080]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 29
	20	[6080]	JMP      	29 ; PC := 29
	21	[6081]	GETGLOBAL	R1 K10 ; R1 := 0x25d99d89
	22	[6081]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0xd03a1fb0]
	23	[6081]	GETGLOBAL	R3 K4 ; R3 := mSelected
	24	[6081]	GETTABLE 	R3 R3 K5 ; R3 := R3["Item"]
	25	[6081]	GETTABLE 	R3 R3 K6 ; R3 := R3["RawItem"]
	26	[6081]	GETTABLE 	R3 R3 K7 ; R3 := R3["UID"]
	27	[6081]	LOADK    	R4 K12 ; R4 := "OnRetrievePetFromStasisResults"
	28	[6081]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	29	[6084]	GETGLOBAL	R1 K10 ; R1 := 0x25d99d89
	30	[6084]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x3c6b0324]
	31	[6084]	CALL     	R1 2 2 ; R1 := R1(R2)
	32	[6084]	TEST     	R1 0 ; if not R1 then PC := 37
	33	[6084]	JMP      	37 ; PC := 37
	34	[6085]	GETUPVAL 	R1 U1 ; R1 := U1
	35	[6085]	OP_LOADBOOL	R2 1 0 ; R2 := true
	36	[6085]	CALL     	R1 2 1 ; R1(R2)
	37	[6088]	GETGLOBAL	R1 K14 ; R1 := 0xe7f2b02f
	38	[6088]	SELF     	R1 R1 K15 ; R2 := R1; R1 := R1[0xcf1bf52a]
	39	[6088]	CALL     	R1 2 1 ; R1(R2)
	40	[6090]	GETGLOBAL	R1 K16 ; R1 := mLists
	41	[6090]	GETTABLE 	R1 R1 K17 ; R1 := R1["mLoadOutList"]
	42	[6090]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0xea061e98]
	43	[6090]	GETGLOBAL	R3 K16 ; R3 := mLists
	44	[6090]	GETTABLE 	R3 R3 K17 ; R3 := R3["mLoadOutList"]
	45	[6090]	GETTABLE 	R3 R3 K19 ; R3 := R3["mElementDrawCallback"]
	46	[6090]	CALL     	R1 3 1 ; R1(R2,R3)
	47	[6091]	GETUPVAL 	R1 U2 ; R1 := U2
	48	[6091]	GETUPVAL 	R2 U3 ; R2 := U3
	49	[6091]	GETTABLE 	R2 R2 K20 ; R2 := R2["SELECTING_PART"]
	50	[6091]	CALL     	R1 2 1 ; R1(R2)
	51	[6092]	GETGLOBAL	R1 K16 ; R1 := mLists
	52	[6092]	GETTABLE 	R1 R1 K17 ; R1 := R1["mLoadOutList"]
	53	[6092]	GETTABLE 	R1 R1 K21 ; R1 := R1[0xad85f085]
	54	[6092]	GETGLOBAL	R2 K4 ; R2 := mSelected
	55	[6092]	GETTABLE 	R2 R2 K22 ; R2 := R2["Element"]
	56	[6092]	CALL     	R1 2 1 ; R1(R2)
	57	[6093]	GETUPVAL 	R1 U4 ; R1 := U4
	58	[6093]	OP_LOADBOOL	R2 0 0 ; R2 := false
	59	[6093]	CALL     	R1 2 1 ; R1(R2)
	60	[6095]	RETURN   	R0 1 ; return 

function #106 <?:6097,6116> (64 instructions, 256 bytes at 000002111CFC9E80)
1 param, 5 slots, 5 upvalues, 0 locals, 27 constants, 0 functions
	1	[6098]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[6098]	MOVE     	R2 R0 ; R2 := R0
	3	[6098]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6098]	MOVE     	R0 R1 ; R0 := R1
	5	[6099]	EQ       	0 R0 K2 ; if R0 ~= 4.000000 then PC := 64
	6	[6099]	JMP      	64 ; PC := 64
	7	[6100]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[6100]	CALL     	R1 1 1 ; R1()
	9	[6102]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	10	[6102]	GETUPVAL 	R2 U1 ; R2 := U1
	11	[6102]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[6102]	TEST     	R1 1 ; if R1 then PC := 23
	13	[6102]	JMP      	23 ; PC := 23
	14	[6102]	GETGLOBAL	R1 K4 ; R1 := mSelected
	15	[6102]	GETTABLE 	R1 R1 K5 ; R1 := R1["Item"]
	16	[6102]	GETTABLE 	R1 R1 K6 ; R1 := R1["RawItem"]
	17	[6102]	GETTABLE 	R1 R1 K7 ; R1 := R1["UID"]
	18	[6102]	GETUPVAL 	R2 U1 ; R2 := U1
	19	[6102]	GETTABLE 	R2 R2 K8 ; R2 := R2["mItemId"]
	20	[6102]	GETTABLE 	R2 R2 K9 ; R2 := R2["mId"]
	21	[6102]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 34
	22	[6102]	JMP      	34 ; PC := 34
	23	[6103]	GETGLOBAL	R1 K10 ; R1 := _T
	24	[6103]	SETTABLE 	R1 K11 K12 ; R1["maturePet"] := true
	25	[6104]	GETGLOBAL	R1 K13 ; R1 := 0x25d99d89
	26	[6104]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xd03a1fb0]
	27	[6104]	GETGLOBAL	R3 K4 ; R3 := mSelected
	28	[6104]	GETTABLE 	R3 R3 K5 ; R3 := R3["Item"]
	29	[6104]	GETTABLE 	R3 R3 K6 ; R3 := R3["RawItem"]
	30	[6104]	GETTABLE 	R3 R3 K7 ; R3 := R3["UID"]
	31	[6104]	LOADK    	R4 K15 ; R4 := "OnRetrievePetFromStasisResults"
	32	[6104]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	33	[6104]	JMP      	41 ; PC := 41
	34	[6106]	GETGLOBAL	R1 K13 ; R1 := 0x25d99d89
	35	[6106]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0x7ff980d7]
	36	[6106]	GETUPVAL 	R3 U1 ; R3 := U1
	37	[6106]	GETTABLE 	R3 R3 K8 ; R3 := R3["mItemId"]
	38	[6106]	GETTABLE 	R3 R3 K9 ; R3 := R3["mId"]
	39	[6106]	LOADK    	R4 K17 ; R4 := "OnMaturePetResults"
	40	[6106]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	41	[6109]	GETGLOBAL	R1 K18 ; R1 := 0xe7f2b02f
	42	[6109]	SELF     	R1 R1 K19 ; R2 := R1; R1 := R1[0xcf1bf52a]
	43	[6109]	CALL     	R1 2 1 ; R1(R2)
	44	[6111]	GETGLOBAL	R1 K20 ; R1 := mLists
	45	[6111]	GETTABLE 	R1 R1 K21 ; R1 := R1["mLoadOutList"]
	46	[6111]	SELF     	R1 R1 K22 ; R2 := R1; R1 := R1[0xea061e98]
	47	[6111]	GETGLOBAL	R3 K20 ; R3 := mLists
	48	[6111]	GETTABLE 	R3 R3 K21 ; R3 := R3["mLoadOutList"]
	49	[6111]	GETTABLE 	R3 R3 K23 ; R3 := R3["mElementDrawCallback"]
	50	[6111]	CALL     	R1 3 1 ; R1(R2,R3)
	51	[6112]	GETUPVAL 	R1 U2 ; R1 := U2
	52	[6112]	GETUPVAL 	R2 U3 ; R2 := U3
	53	[6112]	GETTABLE 	R2 R2 K24 ; R2 := R2["SELECTING_PART"]
	54	[6112]	CALL     	R1 2 1 ; R1(R2)
	55	[6113]	GETGLOBAL	R1 K20 ; R1 := mLists
	56	[6113]	GETTABLE 	R1 R1 K21 ; R1 := R1["mLoadOutList"]
	57	[6113]	GETTABLE 	R1 R1 K25 ; R1 := R1[0xad85f085]
	58	[6113]	GETGLOBAL	R2 K4 ; R2 := mSelected
	59	[6113]	GETTABLE 	R2 R2 K26 ; R2 := R2["Element"]
	60	[6113]	CALL     	R1 2 1 ; R1(R2)
	61	[6114]	GETUPVAL 	R1 U4 ; R1 := U4
	62	[6114]	OP_LOADBOOL	R2 0 0 ; R2 := false
	63	[6114]	CALL     	R1 2 1 ; R1(R2)
	64	[6116]	RETURN   	R0 1 ; return 

function #107 <?:6118,6146> (81 instructions, 324 bytes at 000002111CFCA330)
0 params, 9 slots, 3 upvalues, 0 locals, 20 constants, 0 functions
	1	[6119]	GETGLOBAL	R0 K0 ; R0 := mInventory
	2	[6119]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xa855881a]
	3	[6119]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[6120]	LOADK    	R1 := 1.000000
	5	[6120]	LEN      	R2 R0 ; R2 := # R0
	6	[6120]	LOADK    	R3 := 1.000000
	7	[6120]	FORPREP  	R1 32 ; R1 -= R3; PC := 32
	8	[6121]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	9	[6121]	GETTABLE 	R5 R5 K2 ; R5 := R5["mDetails"]
	10	[6121]	GETTABLE 	R5 R5 K3 ; R5 := R5["mStatus"]
	11	[6121]	EQ       	0 R5 K5 ; if R5 ~= 2.000000 then PC := 32
	12	[6121]	JMP      	32 ; PC := 32
	13	[6122]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	14	[6122]	SETUPVAL 	R5 U0 ; U0 := R5
	15	[6123]	GETUPVAL 	R5 U1 ; R5 := U1
	16	[6123]	GETUPVAL 	R6 U2 ; R6 := U2
	17	[6123]	LOADK    	R7 := 1.000000
	18	[6123]	CALL     	R6 2 2 ; R6 := R6(R7)
	19	[6123]	SETTABLE 	R5 K6 R6 ; R5["petAvatar"] := R6
	20	[6124]	GETGLOBAL	R5 K7 ; R5 := 0x7b998233
	21	[6124]	GETUPVAL 	R6 U1 ; R6 := U1
	22	[6124]	GETTABLE 	R6 R6 K6 ; R6 := R6["petAvatar"]
	23	[6124]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[6124]	TEST     	R5 1 ; if R5 then PC := 32
	25	[6124]	JMP      	32 ; PC := 32
	26	[6125]	GETUPVAL 	R5 U1 ; R5 := U1
	27	[6125]	GETUPVAL 	R6 U1 ; R6 := U1
	28	[6125]	GETTABLE 	R6 R6 K6 ; R6 := R6["petAvatar"]
	29	[6125]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0xfa9e477f]
	30	[6125]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[6125]	SETTABLE 	R5 K8 R6 ; R5["petAgent"] := R6
	32	[6120]	FORLOOP  	R1 8 ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
	33	[6131]	GETGLOBAL	R5 K7 ; R5 := 0x7b998233
	34	[6131]	GETGLOBAL	R6 K10 ; R6 := _T
	35	[6131]	GETTABLE 	R6 R6 K11 ; R6 := R6["MenuSuitAvatar"]
	36	[6131]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[6131]	TEST     	R5 1 ; if R5 then PC := 47
	38	[6131]	JMP      	47 ; PC := 47
	39	[6132]	GETGLOBAL	R5 K10 ; R5 := _T
	40	[6132]	GETGLOBAL	R6 K10 ; R6 := _T
	41	[6132]	GETTABLE 	R6 R6 K11 ; R6 := R6["MenuSuitAvatar"]
	42	[6132]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0xde321e6f]
	43	[6132]	CALL     	R6 2 2 ; R6 := R6(R7)
	44	[6132]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x2676deee]
	45	[6132]	CALL     	R6 2 2 ; R6 := R6(R7)
	46	[6132]	SETTABLE 	R5 K12 R6 ; R5["MenuSentinel"] := R6
	47	[6135]	GETGLOBAL	R5 K7 ; R5 := 0x7b998233
	48	[6135]	GETGLOBAL	R6 K10 ; R6 := _T
	49	[6135]	GETTABLE 	R6 R6 K12 ; R6 := R6["MenuSentinel"]
	50	[6135]	CALL     	R5 2 2 ; R5 := R5(R6)
	51	[6135]	TEST     	R5 1 ; if R5 then PC := 81
	52	[6135]	JMP      	81 ; PC := 81
	53	[6136]	GETGLOBAL	R5 K10 ; R5 := _T
	54	[6136]	GETTABLE 	R5 R5 K12 ; R5 := R5["MenuSentinel"]
	55	[6136]	SELF     	R5 R5 K15 ; R6 := R5; R5 := R5[0xd749da12]
	56	[6136]	OP_LOADBOOL	R7 0 0 ; R7 := false
	57	[6136]	CALL     	R5 3 1 ; R5(R6,R7)
	58	[6138]	GETGLOBAL	R5 K10 ; R5 := _T
	59	[6138]	GETTABLE 	R5 R5 K16 ; R5 := R5["InSimulacrum"]
	60	[6138]	TEST     	R5 0 ; if not R5 then PC := 81
	61	[6138]	JMP      	81 ; PC := 81
	62	[6139]	GETGLOBAL	R5 K10 ; R5 := _T
	63	[6139]	GETTABLE 	R5 R5 K12 ; R5 := R5["MenuSentinel"]
	64	[6139]	SELF     	R5 R5 K17 ; R6 := R5; R5 := R5[0x23d6100a]
	65	[6139]	OP_LOADBOOL	R7 0 0 ; R7 := false
	66	[6139]	CALL     	R5 3 1 ; R5(R6,R7)
	67	[6140]	GETGLOBAL	R5 K10 ; R5 := _T
	68	[6140]	GETTABLE 	R5 R5 K12 ; R5 := R5["MenuSentinel"]
	69	[6140]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xde321e6f]
	70	[6140]	CALL     	R5 2 2 ; R5 := R5(R6)
	71	[6140]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0xf7d48ee0]
	72	[6140]	CALL     	R5 2 2 ; R5 := R5(R6)
	73	[6141]	GETGLOBAL	R6 K7 ; R6 := 0x7b998233
	74	[6141]	MOVE     	R7 R5 ; R7 := R5
	75	[6141]	CALL     	R6 2 2 ; R6 := R6(R7)
	76	[6141]	TEST     	R6 1 ; if R6 then PC := 81
	77	[6141]	JMP      	81 ; PC := 81
	78	[6142]	SELF     	R6 R5 K19 ; R7 := R5; R6 := R5[0x1bf26251]
	79	[6142]	OP_LOADBOOL	R8 0 0 ; R8 := false
	80	[6142]	CALL     	R6 3 1 ; R6(R7,R8)
	81	[6146]	RETURN   	R0 1 ; return 

function #108 <?:6148,6159> (29 instructions, 116 bytes at 000002111CFCA7D0)
2 params, 5 slots, 4 upvalues, 0 locals, 9 constants, 0 functions
	1	[6149]	TEST     	R0 1 ; if R0 then PC := 11
	2	[6149]	JMP      	11 ; PC := 11
	3	[6150]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	4	[6150]	MOVE     	R3 R1 ; R3 := R1
	5	[6150]	CALL     	R2 2 1 ; R2(R3)
	6	[6151]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[6151]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xe0cba3ca]
	8	[6151]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/CraftingErrorText_UnknownError"
	9	[6151]	CALL     	R2 2 1 ; R2(R3)
	10	[6151]	JMP      	29 ; PC := 29
	11	[6153]	GETUPVAL 	R2 U1 ; R2 := U1
	12	[6153]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x5f6897e6]
	13	[6153]	CALL     	R2 1 1 ; R2()
	14	[6154]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	15	[6154]	GETUPVAL 	R3 U2 ; R3 := U2
	16	[6154]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[6154]	TEST     	R2 1 ; if R2 then PC := 24
	18	[6154]	JMP      	24 ; PC := 24
	19	[6155]	GETUPVAL 	R2 U3 ; R2 := U3
	20	[6155]	GETUPVAL 	R3 U2 ; R3 := U2
	21	[6155]	GETUPVAL 	R4 U2 ; R4 := U2
	22	[6155]	GETTABLE 	R4 R4 K5 ; R4 := R4["mItemType"]
	23	[6155]	CALL     	R2 3 1 ; R2(R3,R4)
	24	[6157]	GETUPVAL 	R2 U0 ; R2 := U0
	25	[6157]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x659d451f]
	26	[6157]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	27	[6157]	GETTABLE 	R3 R3 K8 ; R3 := R3["UISound_SweetenerTwo"]
	28	[6157]	CALL     	R2 2 1 ; R2(R3)
	29	[6159]	RETURN   	R0 1 ; return 

function #109 <?:6161,6178> (37 instructions, 148 bytes at 000002111CFCAA20)
2 params, 7 slots, 3 upvalues, 0 locals, 15 constants, 0 functions
	1	[6162]	TEST     	R0 1 ; if R0 then PC := 11
	2	[6162]	JMP      	11 ; PC := 11
	3	[6163]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	4	[6163]	MOVE     	R3 R1 ; R3 := R1
	5	[6163]	CALL     	R2 2 1 ; R2(R3)
	6	[6164]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[6164]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xe0cba3ca]
	8	[6164]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/CraftingErrorText_UnknownError"
	9	[6164]	CALL     	R2 2 1 ; R2(R3)
	10	[6164]	JMP      	37 ; PC := 37
	11	[6166]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[6166]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xa9882367]
	13	[6166]	LOADK    	R3 K4 ; R3 := "CheckPetReadyScriptTrigger"
	14	[6166]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[6167]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	16	[6167]	MOVE     	R4 R2 ; R4 := R2
	17	[6167]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[6167]	TEST     	R3 1 ; if R3 then PC := 22
	19	[6167]	JMP      	22 ; PC := 22
	20	[6168]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0xd91e1179]
	21	[6168]	CALL     	R3 2 1 ; R3(R4)
	22	[6171]	GETUPVAL 	R3 U1 ; R3 := U1
	23	[6171]	CALL     	R3 1 1 ; R3()
	24	[6173]	GETGLOBAL	R3 K7 ; R3 := _T
	25	[6173]	GETTABLE 	R3 R3 K8 ; R3 := R3["maturePet"]
	26	[6173]	TEST     	R3 0 ; if not R3 then PC := 37
	27	[6173]	JMP      	37 ; PC := 37
	28	[6174]	GETGLOBAL	R3 K9 ; R3 := 0x25d99d89
	29	[6174]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x7ff980d7]
	30	[6174]	GETUPVAL 	R5 U2 ; R5 := U2
	31	[6174]	GETTABLE 	R5 R5 K11 ; R5 := R5["mItemId"]
	32	[6174]	GETTABLE 	R5 R5 K12 ; R5 := R5["mId"]
	33	[6174]	LOADK    	R6 K13 ; R6 := "OnMaturePetResults"
	34	[6174]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	35	[6175]	GETGLOBAL	R3 K7 ; R3 := _T
	36	[6175]	SETTABLE 	R3 K8 K14 ; R3["maturePet"] := nil
	37	[6178]	RETURN   	R0 1 ; return 

function #110 <?:6180,6458> (657 instructions, 2628 bytes at 000002111CFCAD10)
2 params, 78 slots, 9 upvalues, 0 locals, 122 constants, 1 function
	1	[6181]	NEWTABLE 	R2 0 0 ; R2 := {}
	2	[6182]	NEWTABLE 	R3 0 0 ; R3 := {}
	3	[6183]	GETGLOBAL	R4 K0 ; R4 := mPlayerProfile
	4	[6183]	SELF     	R4 R4 K1 ; R5 := R4; R4 := R4[0x537ac148]
	5	[6183]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[6184]	NEWTABLE 	R5 0 0 ; R5 := {}
	7	[6185]	NEWTABLE 	R6 0 1 ; R6 := {}
	8	[6185]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	9	[6185]	SETTABLE 	R6 K2 R7 ; R6["GetID"] := R7
	10	[6187]	EQ       	1 R0 K4 ; if R0 == 0.000000 then PC := 14
	11	[6187]	JMP      	14 ; PC := 14
	12	[6187]	EQ       	0 R0 K5 ; if R0 ~= 3.000000 then PC := 63
	13	[6187]	JMP      	63 ; PC := 63
	14	[6188]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 22
	15	[6188]	JMP      	22 ; PC := 22
	16	[6189]	GETGLOBAL	R7 K6 ; R7 := mInventory
	17	[6189]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x21a3da0c]
	18	[6189]	CALL     	R7 2 2 ; R7 := R7(R8)
	19	[6189]	MOVE     	R2 R7 ; R2 := R7
	20	[6190]	GETTABLE 	R5 R4 K8 ; R5 := R4["mPowerSuits"]
	21	[6190]	JMP      	484 ; PC := 484
	22	[6191]	EQ       	0 R1 K5 ; if R1 ~= 3.000000 then PC := 30
	23	[6191]	JMP      	30 ; PC := 30
	24	[6192]	GETGLOBAL	R7 K6 ; R7 := mInventory
	25	[6192]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0x0bf14f02]
	26	[6192]	CALL     	R7 2 2 ; R7 := R7(R8)
	27	[6192]	MOVE     	R2 R7 ; R2 := R7
	28	[6193]	GETTABLE 	R5 R4 K10 ; R5 := R4["mMeleeWeapons"]
	29	[6193]	JMP      	484 ; PC := 484
	30	[6194]	EQ       	0 R1 K11 ; if R1 ~= 2.000000 then PC := 38
	31	[6194]	JMP      	38 ; PC := 38
	32	[6195]	GETGLOBAL	R7 K6 ; R7 := mInventory
	33	[6195]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0x57d88957]
	34	[6195]	CALL     	R7 2 2 ; R7 := R7(R8)
	35	[6195]	MOVE     	R2 R7 ; R2 := R7
	36	[6196]	GETTABLE 	R5 R4 K13 ; R5 := R4["mLongGuns"]
	37	[6196]	JMP      	484 ; PC := 484
	38	[6197]	EQ       	0 R1 K14 ; if R1 ~= 1.000000 then PC := 46
	39	[6197]	JMP      	46 ; PC := 46
	40	[6198]	GETGLOBAL	R7 K6 ; R7 := mInventory
	41	[6198]	SELF     	R7 R7 K15 ; R8 := R7; R7 := R7[0x215bf396]
	42	[6198]	CALL     	R7 2 2 ; R7 := R7(R8)
	43	[6198]	MOVE     	R2 R7 ; R2 := R7
	44	[6199]	GETTABLE 	R5 R4 K16 ; R5 := R4["mPistols"]
	45	[6199]	JMP      	484 ; PC := 484
	46	[6200]	EQ       	0 R1 K17 ; if R1 ~= 4.000000 then PC := 54
	47	[6200]	JMP      	54 ; PC := 54
	48	[6201]	GETGLOBAL	R7 K6 ; R7 := mInventory
	49	[6201]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0x6f7b67d7]
	50	[6201]	CALL     	R7 2 2 ; R7 := R7(R8)
	51	[6201]	MOVE     	R2 R7 ; R2 := R7
	52	[6202]	GETTABLE 	R5 R4 K19 ; R5 := R4["mSpaceGuns"]
	53	[6202]	JMP      	484 ; PC := 484
	54	[6203]	EQ       	1 R1 K20 ; if R1 == 5.000000 then PC := 58
	55	[6203]	JMP      	58 ; PC := 58
	56	[6203]	EQ       	0 R1 K21 ; if R1 ~= 6.000000 then PC := 484
	57	[6203]	JMP      	484 ; PC := 484
	58	[6204]	GETGLOBAL	R7 K6 ; R7 := mInventory
	59	[6204]	SELF     	R7 R7 K22 ; R8 := R7; R7 := R7[0x375c296b]
	60	[6204]	CALL     	R7 2 2 ; R7 := R7(R8)
	61	[6204]	MOVE     	R2 R7 ; R2 := R7
	62	[6205]	JMP      	484 ; PC := 484
	63	[6206]	EQ       	0 R0 K14 ; if R0 ~= 1.000000 then PC := 317
	64	[6206]	JMP      	317 ; PC := 317
	65	[6207]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 311
	66	[6207]	JMP      	311 ; PC := 311
	67	[6208]	GETGLOBAL	R7 K6 ; R7 := mInventory
	68	[6208]	SELF     	R7 R7 K23 ; R8 := R7; R7 := R7[0x2a207127]
	69	[6208]	CALL     	R7 2 2 ; R7 := R7(R8)
	70	[6208]	MOVE     	R2 R7 ; R2 := R7
	71	[6209]	GETTABLE 	R5 R4 K24 ; R5 := R4["mSentinels"]
	72	[6210]	TEST     	R2 1 ; if R2 then PC := 76
	73	[6210]	JMP      	76 ; PC := 76
	74	[6211]	NEWTABLE 	R7 0 0 ; R7 := {}
	75	[6211]	MOVE     	R2 R7 ; R2 := R7
	76	[6214]	TEST     	R5 1 ; if R5 then PC := 80
	77	[6214]	JMP      	80 ; PC := 80
	78	[6215]	NEWTABLE 	R7 0 0 ; R7 := {}
	79	[6215]	MOVE     	R5 R7 ; R5 := R7
	80	[6218]	GETGLOBAL	R7 K6 ; R7 := mInventory
	81	[6218]	SELF     	R7 R7 K25 ; R8 := R7; R7 := R7[0x91a3eddf]
	82	[6218]	CALL     	R7 2 2 ; R7 := R7(R8)
	83	[6219]	LOADK    	R8 := 1.000000
	84	[6219]	LEN      	R9 R7 ; R9 := # R7
	85	[6219]	LOADK    	R10 := 1.000000
	86	[6219]	FORPREP  	R8 92 ; R8 -= R10; PC := 92
	87	[6220]	GETGLOBAL	R12 K26 ; R12 := 0x33bdd652
	88	[6220]	GETTABLE 	R12 R12 K27 ; R12 := R12[0x23d5322f]
	89	[6220]	MOVE     	R13 R2 ; R13 := R2
	90	[6220]	GETTABLE 	R14 R7 R11 ; R14 := R7[R11]
	91	[6220]	CALL     	R12 3 1 ; R12(R13,R14)
	92	[6219]	FORLOOP  	R8 87 ; R8 += R10; if R8 <= R9 then begin PC := 87; R11 := R8 end
	93	[6223]	GETTABLE 	R12 R4 K28 ; R12 := R4["mMoaPets"]
	94	[6225]	LOADK    	R13 := 1.000000
	95	[6225]	LEN      	R14 R12 ; R14 := # R12
	96	[6225]	LOADK    	R15 := 1.000000
	97	[6225]	FORPREP  	R13 103 ; R13 -= R15; PC := 103
	98	[6226]	GETGLOBAL	R17 K26 ; R17 := 0x33bdd652
	99	[6226]	GETTABLE 	R17 R17 K27 ; R17 := R17[0x23d5322f]
	100	[6226]	MOVE     	R18 R5 ; R18 := R5
	101	[6226]	GETTABLE 	R19 R12 R16 ; R19 := R12[R16]
	102	[6226]	CALL     	R17 3 1 ; R17(R18,R19)
	103	[6225]	FORLOOP  	R13 98 ; R13 += R15; if R13 <= R14 then begin PC := 98; R16 := R13 end
	104	[6229]	GETTABLE 	R17 R4 K29 ; R17 := R4["mKubrowPets"]
	105	[6231]	LOADK    	R18 := 1.000000
	106	[6231]	LEN      	R19 R17 ; R19 := # R17
	107	[6231]	LOADK    	R20 := 1.000000
	108	[6231]	FORPREP  	R18 114 ; R18 -= R20; PC := 114
	109	[6232]	GETGLOBAL	R22 K26 ; R22 := 0x33bdd652
	110	[6232]	GETTABLE 	R22 R22 K27 ; R22 := R22[0x23d5322f]
	111	[6232]	MOVE     	R23 R5 ; R23 := R5
	112	[6232]	GETTABLE 	R24 R17 R21 ; R24 := R17[R21]
	113	[6232]	CALL     	R22 3 1 ; R22(R23,R24)
	114	[6231]	FORLOOP  	R18 109 ; R18 += R20; if R18 <= R19 then begin PC := 109; R21 := R18 end
	115	[6235]	GETGLOBAL	R22 K6 ; R22 := mInventory
	116	[6235]	SELF     	R22 R22 K30 ; R23 := R22; R22 := R22[0xa855881a]
	117	[6235]	CALL     	R22 2 2 ; R22 := R22(R23)
	118	[6236]	OP_LOADBOOL	R23 0 0 ; R23 := false
	119	[6237]	OP_LOADBOOL	R24 0 0 ; R24 := false
	120	[6238]	LOADK    	R25 := 1.000000
	121	[6238]	LEN      	R26 R22 ; R26 := # R22
	122	[6238]	LOADK    	R27 := 1.000000
	123	[6238]	FORPREP  	R25 144 ; R25 -= R27; PC := 144
	124	[6241]	GETTABLE 	R29 R22 R28 ; R29 := R22[R28]
	125	[6241]	GETTABLE 	R29 R29 K31 ; R29 := R29["mDetails"]
	126	[6241]	GETTABLE 	R29 R29 K32 ; R29 := R29["mStatus"]
	127	[6241]	EQ       	1 R29 K4 ; if R29 == 0.000000 then PC := 134
	128	[6241]	JMP      	134 ; PC := 134
	129	[6242]	GETTABLE 	R29 R22 R28 ; R29 := R22[R28]
	130	[6242]	GETTABLE 	R29 R29 K31 ; R29 := R29["mDetails"]
	131	[6242]	GETTABLE 	R29 R29 K32 ; R29 := R29["mStatus"]
	132	[6242]	EQ       	0 R29 K14 ; if R29 ~= 1.000000 then PC := 137
	133	[6242]	JMP      	137 ; PC := 137
	134	[6245]	OP_LOADBOOL	R23 1 0 ; R23 := true
	135	[6246]	JMP      	145 ; PC := 145
	136	[6246]	JMP      	144 ; PC := 144
	137	[6247]	GETTABLE 	R29 R22 R28 ; R29 := R22[R28]
	138	[6247]	GETTABLE 	R29 R29 K31 ; R29 := R29["mDetails"]
	139	[6247]	GETTABLE 	R29 R29 K32 ; R29 := R29["mStatus"]
	140	[6247]	EQ       	0 R29 K17 ; if R29 ~= 4.000000 then PC := 144
	141	[6247]	JMP      	144 ; PC := 144
	142	[6248]	OP_LOADBOOL	R24 1 0 ; R24 := true
	143	[6249]	JMP      	145 ; PC := 145
	144	[6238]	FORLOOP  	R25 124 ; R25 += R27; if R25 <= R26 then begin PC := 124; R28 := R25 end
	145	[6253]	LOADK    	R29 := 1.000000
	146	[6253]	LEN      	R30 R22 ; R30 := # R22
	147	[6253]	LOADK    	R31 := 1.000000
	148	[6253]	FORPREP  	R29 309 ; R29 -= R31; PC := 309
	149	[6256]	GETTABLE 	R33 R22 R32 ; R33 := R22[R32]
	150	[6256]	GETTABLE 	R33 R33 K31 ; R33 := R33["mDetails"]
	151	[6256]	GETTABLE 	R33 R33 K32 ; R33 := R33["mStatus"]
	152	[6256]	EQ       	1 R33 K4 ; if R33 == 0.000000 then PC := 309
	153	[6256]	JMP      	309 ; PC := 309
	154	[6257]	GETTABLE 	R33 R22 R32 ; R33 := R22[R32]
	155	[6257]	GETTABLE 	R33 R33 K31 ; R33 := R33["mDetails"]
	156	[6257]	GETTABLE 	R33 R33 K32 ; R33 := R33["mStatus"]
	157	[6257]	EQ       	1 R33 K14 ; if R33 == 1.000000 then PC := 309
	158	[6257]	JMP      	309 ; PC := 309
	159	[6258]	GETTABLE 	R33 R22 R32 ; R33 := R22[R32]
	160	[6258]	GETTABLE 	R33 R33 K31 ; R33 := R33["mDetails"]
	161	[6258]	GETTABLE 	R33 R33 K32 ; R33 := R33["mStatus"]
	162	[6258]	EQ       	1 R33 K17 ; if R33 == 4.000000 then PC := 309
	163	[6258]	JMP      	309 ; PC := 309
	164	[6259]	GETTABLE 	R33 R22 R32 ; R33 := R22[R32]
	165	[6259]	GETTABLE 	R33 R33 K31 ; R33 := R33["mDetails"]
	166	[6259]	GETTABLE 	R33 R33 K33 ; R33 := R33["mIsPuppy"]
	167	[6259]	TEST     	R33 0 ; if not R33 then PC := 174
	168	[6259]	JMP      	174 ; PC := 174
	169	[6259]	GETUPVAL 	R33 U0 ; R33 := U0
	170	[6259]	GETUPVAL 	R34 U1 ; R34 := U1
	171	[6259]	GETTABLE 	R34 R34 K34 ; R34 := R34["UI_MODE_IN_SPACE_SHIP"]
	172	[6259]	EQ       	0 R33 R34 ; if R33 ~= R34 then PC := 309
	173	[6259]	JMP      	309 ; PC := 309
	174	[6262]	GETTABLE 	R33 R22 R32 ; R33 := R22[R32]
	175	[6262]	GETTABLE 	R33 R33 K31 ; R33 := R33["mDetails"]
	176	[6262]	GETTABLE 	R33 R33 K32 ; R33 := R33["mStatus"]
	177	[6262]	EQ       	0 R33 K11 ; if R33 ~= 2.000000 then PC := 198
	178	[6262]	JMP      	198 ; PC := 198
	179	[6263]	GETTABLE 	R33 R22 R32 ; R33 := R22[R32]
	180	[6263]	SETUPVAL 	R33 U2 ; U2 := R33
	181	[6264]	GETUPVAL 	R33 U3 ; R33 := U3
	182	[6264]	GETUPVAL 	R34 U4 ; R34 := U4
	183	[6264]	LOADK    	R35 := 1.000000
	184	[6264]	CALL     	R34 2 2 ; R34 := R34(R35)
	185	[6264]	SETTABLE 	R33 K35 R34 ; R33["petAvatar"] := R34
	186	[6265]	GETGLOBAL	R33 K36 ; R33 := 0x7b998233
	187	[6265]	GETUPVAL 	R34 U3 ; R34 := U3
	188	[6265]	GETTABLE 	R34 R34 K35 ; R34 := R34["petAvatar"]
	189	[6265]	CALL     	R33 2 2 ; R33 := R33(R34)
	190	[6265]	TEST     	R33 1 ; if R33 then PC := 198
	191	[6265]	JMP      	198 ; PC := 198
	192	[6266]	GETUPVAL 	R33 U3 ; R33 := U3
	193	[6266]	GETUPVAL 	R34 U3 ; R34 := U3
	194	[6266]	GETTABLE 	R34 R34 K35 ; R34 := R34["petAvatar"]
	195	[6266]	SELF     	R34 R34 K38 ; R35 := R34; R34 := R34[0xfa9e477f]
	196	[6266]	CALL     	R34 2 2 ; R34 := R34(R35)
	197	[6266]	SETTABLE 	R33 K37 R34 ; R33["petAgent"] := R34
	198	[6269]	GETTABLE 	R33 R22 R32 ; R33 := R22[R32]
	199	[6269]	GETTABLE 	R33 R33 K31 ; R33 := R33["mDetails"]
	200	[6269]	GETTABLE 	R33 R33 K39 ; R33 := R33["mName"]
	201	[6270]	GETTABLE 	R34 R22 R32 ; R34 := R22[R32]
	202	[6270]	GETTABLE 	R34 R34 K31 ; R34 := R34["mDetails"]
	203	[6270]	SELF     	R34 R34 K40 ; R35 := R34; R34 := R34[0x4d3e1844]
	204	[6270]	CALL     	R34 2 2 ; R34 := R34(R35)
	205	[6270]	TEST     	R34 0 ; if not R34 then PC := 231
	206	[6270]	JMP      	231 ; PC := 231
	207	[6270]	GETGLOBAL	R34 K36 ; R34 := 0x7b998233
	208	[6270]	GETTABLE 	R35 R22 R32 ; R35 := R22[R32]
	209	[6270]	GETTABLE 	R35 R35 K41 ; R35 := R35["mItemType"]
	210	[6270]	CALL     	R34 2 2 ; R34 := R34(R35)
	211	[6270]	TEST     	R34 1 ; if R34 then PC := 231
	212	[6270]	JMP      	231 ; PC := 231
	213	[6271]	GETUPVAL 	R34 U5 ; R34 := U5
	214	[6271]	GETTABLE 	R35 R22 R32 ; R35 := R22[R32]
	215	[6271]	GETTABLE 	R35 R35 K41 ; R35 := R35["mItemType"]
	216	[6271]	CALL     	R34 2 2 ; R34 := R34(R35)
	217	[6272]	GETGLOBAL	R35 K36 ; R35 := 0x7b998233
	218	[6272]	MOVE     	R36 R34 ; R36 := R34
	219	[6272]	CALL     	R35 2 2 ; R35 := R35(R36)
	220	[6272]	TEST     	R35 1 ; if R35 then PC := 231
	221	[6272]	JMP      	231 ; PC := 231
	222	[6273]	GETGLOBAL	R35 K42 ; R35 := 0xae91e43b
	223	[6273]	SELF     	R35 R35 K43 ; R36 := R35; R35 := R35[0x42b04007]
	224	[6273]	GETGLOBAL	R37 K44 ; R37 := 0x64fb1586
	225	[6273]	SELF     	R38 R34 K45 ; R39 := R34; R38 := R34[0xd3a9d01f]
	226	[6273]	CALL     	R38 2 0 ; R38,... := R38(R39)
	227	[6273]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	228	[6273]	OP_LOADBOOL	R38 0 0 ; R38 := false
	229	[6273]	CALL     	R35 4 2 ; R35 := R35(R36,R37,R38)
	230	[6273]	MOVE     	R33 R35 ; R33 := R35
	231	[6276]	GETGLOBAL	R35 K26 ; R35 := 0x33bdd652
	232	[6276]	GETTABLE 	R35 R35 K27 ; R35 := R35[0x23d5322f]
	233	[6276]	MOVE     	R36 R2 ; R36 := R2
	234	[6276]	GETTABLE 	R37 R22 R32 ; R37 := R22[R32]
	235	[6276]	CALL     	R35 3 1 ; R35(R36,R37)
	236	[6277]	NEWTABLE 	R35 0 1 ; R35 := {}
	237	[6277]	SETTABLE 	R35 K46 R33 ; R35["Name"] := R33
	238	[6278]	TEST     	R23 0 ; if not R23 then PC := 248
	239	[6278]	JMP      	248 ; PC := 248
	240	[6279]	GETGLOBAL	R36 K42 ; R36 := 0xae91e43b
	241	[6279]	SELF     	R36 R36 K43 ; R37 := R36; R36 := R36[0x42b04007]
	242	[6279]	LOADK    	R38 K48 ; R38 := "/Lotus/Language/Menu/KubrowLockedDetails_Incubation"
	243	[6279]	OP_LOADBOOL	R39 0 0 ; R39 := false
	244	[6279]	NEWTABLE 	R40 0 0 ; R40 := {}
	245	[6279]	CALL     	R36 5 2 ; R36 := R36(R37,R38,R39,R40)
	246	[6279]	SETTABLE 	R35 K47 R36 ; R35["LockDetail"] := R36
	247	[6279]	JMP      	305 ; PC := 305
	248	[6280]	TEST     	R24 0 ; if not R24 then PC := 258
	249	[6280]	JMP      	258 ; PC := 258
	250	[6281]	GETGLOBAL	R36 K42 ; R36 := 0xae91e43b
	251	[6281]	SELF     	R36 R36 K43 ; R37 := R36; R36 := R36[0x42b04007]
	252	[6281]	LOADK    	R38 K49 ; R38 := "/Lotus/Language/Pets/KubrowLockedDetails_Distilling"
	253	[6281]	OP_LOADBOOL	R39 0 0 ; R39 := false
	254	[6281]	NEWTABLE 	R40 0 0 ; R40 := {}
	255	[6281]	CALL     	R36 5 2 ; R36 := R36(R37,R38,R39,R40)
	256	[6281]	SETTABLE 	R35 K47 R36 ; R35["LockDetail"] := R36
	257	[6281]	JMP      	305 ; PC := 305
	258	[6282]	GETTABLE 	R36 R22 R32 ; R36 := R22[R32]
	259	[6282]	GETTABLE 	R36 R36 K31 ; R36 := R36["mDetails"]
	260	[6282]	GETTABLE 	R36 R36 K33 ; R36 := R36["mIsPuppy"]
	261	[6282]	TEST     	R36 0 ; if not R36 then PC := 275
	262	[6282]	JMP      	275 ; PC := 275
	263	[6283]	GETGLOBAL	R36 K42 ; R36 := 0xae91e43b
	264	[6283]	SELF     	R36 R36 K43 ; R37 := R36; R36 := R36[0x42b04007]
	265	[6283]	LOADK    	R38 K51 ; R38 := "/Lotus/Language/Menu/KubrowIsPuppy_Desc"
	266	[6283]	OP_LOADBOOL	R39 0 0 ; R39 := false
	267	[6283]	NEWTABLE 	R40 0 1 ; R40 := {}
	268	[6283]	SETTABLE 	R40 K52 R33 ; R40["NAME"] := R33
	269	[6283]	CALL     	R36 5 2 ; R36 := R36(R37,R38,R39,R40)
	270	[6283]	SETTABLE 	R35 K50 R36 ; R35["OptionDesc"] := R36
	271	[6284]	SETTABLE 	R35 K53 K54 ; R35["FirstOption"] := "/Lotus/Language/Menu/KubrowDetails_Roam"
	272	[6285]	SETTABLE 	R35 K55 K56 ; R35["SecondOption"] := "/Lotus/Language/Menu/KubrowDetails_Mature"
	273	[6286]	SETTABLE 	R35 K57 K58 ; R35["Callback"] := "RoamOrMature"
	274	[6286]	JMP      	305 ; PC := 305
	275	[6287]	GETTABLE 	R36 R22 R32 ; R36 := R22[R32]
	276	[6287]	GETTABLE 	R36 R36 K31 ; R36 := R36["mDetails"]
	277	[6287]	GETTABLE 	R36 R36 K59 ; R36 := R36["mHasCollar"]
	278	[6287]	TEST     	R36 1 ; if R36 then PC := 291
	279	[6287]	JMP      	291 ; PC := 291
	280	[6288]	GETGLOBAL	R36 K42 ; R36 := 0xae91e43b
	281	[6288]	SELF     	R36 R36 K43 ; R37 := R36; R36 := R36[0x42b04007]
	282	[6288]	LOADK    	R38 K60 ; R38 := "/Lotus/Language/Pets/KubrowNoCollar_Desc"
	283	[6288]	OP_LOADBOOL	R39 0 0 ; R39 := false
	284	[6288]	NEWTABLE 	R40 0 1 ; R40 := {}
	285	[6288]	SETTABLE 	R40 K52 R33 ; R40["NAME"] := R33
	286	[6288]	CALL     	R36 5 2 ; R36 := R36(R37,R38,R39,R40)
	287	[6288]	SETTABLE 	R35 K50 R36 ; R35["OptionDesc"] := R36
	288	[6289]	SETTABLE 	R35 K53 K54 ; R35["FirstOption"] := "/Lotus/Language/Menu/KubrowDetails_Roam"
	289	[6290]	SETTABLE 	R35 K57 K61 ; R35["Callback"] := "ConfirmRoamPet"
	290	[6290]	JMP      	305 ; PC := 305
	291	[6291]	GETTABLE 	R36 R22 R32 ; R36 := R22[R32]
	292	[6291]	GETTABLE 	R36 R36 K31 ; R36 := R36["mDetails"]
	293	[6291]	GETTABLE 	R36 R36 K32 ; R36 := R36["mStatus"]
	294	[6291]	EQ       	0 R36 K17 ; if R36 ~= 4.000000 then PC := 305
	295	[6291]	JMP      	305 ; PC := 305
	296	[6292]	SETTABLE 	R35 K62 K63 ; R35["LockTag"] := "/Lotus/Language/Menu/KubrowLocked_Imprinting"
	297	[6293]	GETGLOBAL	R36 K42 ; R36 := 0xae91e43b
	298	[6293]	SELF     	R36 R36 K43 ; R37 := R36; R36 := R36[0x42b04007]
	299	[6293]	LOADK    	R38 K64 ; R38 := "/Lotus/Language/Menu/KubrowLockedDetails_Imprinting"
	300	[6293]	OP_LOADBOOL	R39 0 0 ; R39 := false
	301	[6293]	NEWTABLE 	R40 0 1 ; R40 := {}
	302	[6293]	SETTABLE 	R40 K52 R33 ; R40["NAME"] := R33
	303	[6293]	CALL     	R36 5 2 ; R36 := R36(R37,R38,R39,R40)
	304	[6293]	SETTABLE 	R35 K47 R36 ; R35["LockDetail"] := R36
	305	[6295]	GETTABLE 	R36 R22 R32 ; R36 := R22[R32]
	306	[6295]	GETTABLE 	R36 R36 K65 ; R36 := R36["mItemId"]
	307	[6295]	GETTABLE 	R36 R36 K66 ; R36 := R36["mId"]
	308	[6295]	SETTABLE 	R3 R36 R35 ; R3[R36] := R35
	309	[6253]	FORLOOP  	R29 149 ; R29 += R31; if R29 <= R30 then begin PC := 149; R32 := R29 end
	310	[6297]	JMP      	484 ; PC := 484
	311	[6299]	GETGLOBAL	R36 K6 ; R36 := mInventory
	312	[6299]	SELF     	R36 R36 K67 ; R37 := R36; R36 := R36[0xa2c6d8b7]
	313	[6299]	CALL     	R36 2 2 ; R36 := R36(R37)
	314	[6299]	MOVE     	R2 R36 ; R2 := R36
	315	[6300]	GETTABLE 	R5 R4 K68 ; R5 := R4["mSentinelWeapons"]
	316	[6301]	JMP      	484 ; PC := 484
	317	[6302]	EQ       	0 R0 K11 ; if R0 ~= 2.000000 then PC := 343
	318	[6302]	JMP      	343 ; PC := 343
	319	[6303]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 327
	320	[6303]	JMP      	327 ; PC := 327
	321	[6304]	GETGLOBAL	R36 K6 ; R36 := mInventory
	322	[6304]	SELF     	R36 R36 K69 ; R37 := R36; R36 := R36[0x4bb8609a]
	323	[6304]	CALL     	R36 2 2 ; R36 := R36(R37)
	324	[6304]	MOVE     	R2 R36 ; R2 := R36
	325	[6305]	GETTABLE 	R5 R4 K70 ; R5 := R4["mSpaceSuits"]
	326	[6305]	JMP      	484 ; PC := 484
	327	[6306]	EQ       	0 R1 K5 ; if R1 ~= 3.000000 then PC := 335
	328	[6306]	JMP      	335 ; PC := 335
	329	[6307]	GETGLOBAL	R36 K6 ; R36 := mInventory
	330	[6307]	SELF     	R36 R36 K71 ; R37 := R36; R36 := R36[0x3218c3b0]
	331	[6307]	CALL     	R36 2 2 ; R36 := R36(R37)
	332	[6307]	MOVE     	R2 R36 ; R2 := R36
	333	[6308]	GETTABLE 	R5 R4 K72 ; R5 := R4["mSpaceMelee"]
	334	[6308]	JMP      	484 ; PC := 484
	335	[6309]	EQ       	0 R1 K11 ; if R1 ~= 2.000000 then PC := 484
	336	[6309]	JMP      	484 ; PC := 484
	337	[6310]	GETGLOBAL	R36 K6 ; R36 := mInventory
	338	[6310]	SELF     	R36 R36 K18 ; R37 := R36; R36 := R36[0x6f7b67d7]
	339	[6310]	CALL     	R36 2 2 ; R36 := R36(R37)
	340	[6310]	MOVE     	R2 R36 ; R2 := R36
	341	[6311]	GETTABLE 	R5 R4 K19 ; R5 := R4["mSpaceGuns"]
	342	[6312]	JMP      	484 ; PC := 484
	343	[6313]	EQ       	0 R0 K17 ; if R0 ~= 4.000000 then PC := 352
	344	[6313]	JMP      	352 ; PC := 352
	345	[6314]	EQ       	0 R1 K5 ; if R1 ~= 3.000000 then PC := 484
	346	[6314]	JMP      	484 ; PC := 484
	347	[6315]	GETGLOBAL	R36 K6 ; R36 := mInventory
	348	[6315]	SELF     	R36 R36 K73 ; R37 := R36; R36 := R36[0x4fed7a1b]
	349	[6315]	CALL     	R36 2 2 ; R36 := R36(R37)
	350	[6315]	MOVE     	R2 R36 ; R2 := R36
	351	[6316]	JMP      	484 ; PC := 484
	352	[6317]	EQ       	0 R0 K21 ; if R0 ~= 6.000000 then PC := 363
	353	[6317]	JMP      	363 ; PC := 363
	354	[6318]	GETUPVAL 	R36 U6 ; R36 := U6
	355	[6318]	GETTABLE 	R36 R36 K74 ; R36 := R36["KDriveSlot"]
	356	[6318]	EQ       	0 R1 R36 ; if R1 ~= R36 then PC := 484
	357	[6318]	JMP      	484 ; PC := 484
	358	[6319]	GETGLOBAL	R36 K6 ; R36 := mInventory
	359	[6319]	SELF     	R36 R36 K75 ; R37 := R36; R36 := R36[0x738deb95]
	360	[6319]	CALL     	R36 2 2 ; R36 := R36(R37)
	361	[6319]	MOVE     	R2 R36 ; R2 := R36
	362	[6320]	JMP      	484 ; PC := 484
	363	[6321]	EQ       	0 R0 K76 ; if R0 ~= 7.000000 then PC := 372
	364	[6321]	JMP      	372 ; PC := 372
	365	[6322]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 484
	366	[6322]	JMP      	484 ; PC := 484
	367	[6323]	GETGLOBAL	R36 K6 ; R36 := mInventory
	368	[6323]	SELF     	R36 R36 K77 ; R37 := R36; R36 := R36[0x8d6f4300]
	369	[6323]	CALL     	R36 2 2 ; R36 := R36(R37)
	370	[6323]	MOVE     	R2 R36 ; R2 := R36
	371	[6324]	JMP      	484 ; PC := 484
	372	[6325]	EQ       	0 R0 K78 ; if R0 ~= 8.000000 then PC := 397
	373	[6325]	JMP      	397 ; PC := 397
	374	[6326]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 381
	375	[6326]	JMP      	381 ; PC := 381
	376	[6327]	GETGLOBAL	R36 K6 ; R36 := mInventory
	377	[6327]	SELF     	R36 R36 K79 ; R37 := R36; R36 := R36[0xfab085e3]
	378	[6327]	CALL     	R36 2 2 ; R36 := R36(R37)
	379	[6327]	MOVE     	R2 R36 ; R2 := R36
	380	[6327]	JMP      	484 ; PC := 484
	381	[6328]	EQ       	0 R1 K17 ; if R1 ~= 4.000000 then PC := 388
	382	[6328]	JMP      	388 ; PC := 388
	383	[6329]	GETGLOBAL	R36 K6 ; R36 := mInventory
	384	[6329]	SELF     	R36 R36 K18 ; R37 := R36; R36 := R36[0x6f7b67d7]
	385	[6329]	CALL     	R36 2 2 ; R36 := R36(R37)
	386	[6329]	MOVE     	R2 R36 ; R2 := R36
	387	[6329]	JMP      	484 ; PC := 484
	388	[6330]	EQ       	1 R1 K20 ; if R1 == 5.000000 then PC := 392
	389	[6330]	JMP      	392 ; PC := 392
	390	[6330]	EQ       	0 R1 K21 ; if R1 ~= 6.000000 then PC := 484
	391	[6330]	JMP      	484 ; PC := 484
	392	[6331]	GETGLOBAL	R36 K6 ; R36 := mInventory
	393	[6331]	SELF     	R36 R36 K22 ; R37 := R36; R36 := R36[0x375c296b]
	394	[6331]	CALL     	R36 2 2 ; R36 := R36(R37)
	395	[6331]	MOVE     	R2 R36 ; R2 := R36
	396	[6332]	JMP      	484 ; PC := 484
	397	[6333]	EQ       	1 R1 K80 ; if R1 == "CONSUMABLES" then PC := 401
	398	[6333]	JMP      	401 ; PC := 401
	399	[6333]	EQ       	0 R1 K81 ; if R1 ~= "EMOTES" then PC := 484
	400	[6333]	JMP      	484 ; PC := 484
	401	[6334]	GETUPVAL 	R36 U7 ; R36 := U7
	402	[6334]	SELF     	R36 R36 K82 ; R37 := R36; R36 := R36[0xe9cbffa8]
	403	[6334]	GETUPVAL 	R38 U8 ; R38 := U8
	404	[6334]	GETTABLE 	R38 R38 K83 ; R38 := R38[0x06d055f9]
	405	[6334]	EQ       	1 R1 K80 ; if R1 == "CONSUMABLES" then PC := 408
	406	[6334]	JMP      	408 ; PC := 408
	407	[6334]	OP_LOADBOOL	R39 0 1 ; R39 := false; PC := 408
	408	[6334]	OP_LOADBOOL	R39 1 0 ; R39 := true
	409	[6334]	GETGLOBAL	R40 K84 ; R40 := gGearItemType
	410	[6334]	GETGLOBAL	R41 K85 ; R41 := gEmoteType
	411	[6334]	CALL     	R38 4 0 ; R38,... := R38(R39,R40,R41)
	412	[6334]	CALL     	R36 0 2 ; R36 := R36(R37,...)
	413	[6335]	GETUPVAL 	R37 U8 ; R37 := U8
	414	[6335]	GETTABLE 	R37 R37 K83 ; R37 := R37[0x06d055f9]
	415	[6335]	EQ       	1 R1 K80 ; if R1 == "CONSUMABLES" then PC := 418
	416	[6335]	JMP      	418 ; PC := 418
	417	[6335]	OP_LOADBOOL	R38 0 1 ; R38 := false; PC := 418
	418	[6335]	OP_LOADBOOL	R38 1 0 ; R38 := true
	419	[6335]	GETGLOBAL	R39 K6 ; R39 := mInventory
	420	[6335]	SELF     	R39 R39 K86 ; R40 := R39; R39 := R39[0x51a64e2e]
	421	[6335]	CALL     	R39 2 2 ; R39 := R39(R40)
	422	[6335]	GETGLOBAL	R40 K6 ; R40 := mInventory
	423	[6335]	SELF     	R40 R40 K87 ; R41 := R40; R40 := R40[0xd8dfa041]
	424	[6335]	CALL     	R40 2 0 ; R40,... := R40(R41)
	425	[6335]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	426	[6337]	NEWTABLE 	R38 0 0 ; R38 := {}
	427	[6337]	MOVE     	R2 R38 ; R2 := R38
	428	[6339]	GETGLOBAL	R38 K36 ; R38 := 0x7b998233
	429	[6339]	MOVE     	R39 R36 ; R39 := R36
	430	[6339]	CALL     	R38 2 2 ; R38 := R38(R39)
	431	[6339]	TEST     	R38 1 ; if R38 then PC := 484
	432	[6339]	JMP      	484 ; PC := 484
	433	[6340]	GETGLOBAL	R38 K88 ; R38 := 0xc8802016
	434	[6340]	MOVE     	R39 R36 ; R39 := R36
	435	[6340]	CALL     	R38 2 4 ; R38,R39,R40 := R38(R39)
	436	[6340]	JMP      	482 ; PC := 482
	437	[6341]	SELF     	R43 R42 K89 ; R44 := R42; R43 := R42[0x31e559d2]
	438	[6341]	CALL     	R43 2 2 ; R43 := R43(R44)
	439	[6342]	GETUPVAL 	R44 U8 ; R44 := U8
	440	[6342]	GETTABLE 	R44 R44 K83 ; R44 := R44[0x06d055f9]
	441	[6342]	MOVE     	R45 R43 ; R45 := R43
	442	[6342]	LOADK    	R46 := 1.000000
	443	[6342]	LOADK    	R47 := 0.000000
	444	[6342]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	445	[6343]	SELF     	R45 R42 K90 ; R46 := R42; R45 := R42[0xf278f8a1]
	446	[6343]	CALL     	R45 2 2 ; R45 := R45(R46)
	447	[6345]	TEST     	R43 1 ; if R43 then PC := 461
	448	[6345]	JMP      	461 ; PC := 461
	449	[6346]	GETGLOBAL	R46 K88 ; R46 := 0xc8802016
	450	[6346]	MOVE     	R47 R37 ; R47 := R37
	451	[6346]	CALL     	R46 2 4 ; R46,R47,R48 := R46(R47)
	452	[6346]	JMP      	459 ; PC := 459
	453	[6347]	GETTABLE 	R51 R50 K41 ; R51 := R50["mItemType"]
	454	[6347]	EQ       	0 R51 R45 ; if R51 ~= R45 then PC := 459
	455	[6347]	JMP      	459 ; PC := 459
	456	[6348]	OP_LOADBOOL	R43 1 0 ; R43 := true
	457	[6349]	GETTABLE 	R44 R50 K91 ; R44 := R50["mItemCount"]
	458	[6351]	JMP      	461 ; PC := 461
	459	[6346]	TFORLOOP 	R46 2 ; R49,R50 := R46(R47,R48); if R49 ~= nil then begin PC = 453; R48 := R49 end
	460	[6352]	JMP      	453 ; PC := 453
	461	[6356]	TEST     	R43 0 ; if not R43 then PC := 482
	462	[6356]	JMP      	482 ; PC := 482
	463	[6356]	EQ       	0 R1 K80 ; if R1 ~= "CONSUMABLES" then PC := 471
	464	[6356]	JMP      	471 ; PC := 471
	465	[6356]	GETUPVAL 	R51 U1 ; R51 := U1
	466	[6356]	GETTABLE 	R51 R51 K92 ; R51 := R51[0x3ed4ce26]
	467	[6356]	MOVE     	R52 R45 ; R52 := R45
	468	[6356]	CALL     	R51 2 2 ; R51 := R51(R52)
	469	[6356]	TEST     	R51 1 ; if R51 then PC := 482
	470	[6356]	JMP      	482 ; PC := 482
	471	[6357]	NEWTABLE 	R51 0 2 ; R51 := {}
	472	[6357]	SETTABLE 	R51 K41 R45 ; R51["mItemType"] := R45
	473	[6357]	SETTABLE 	R51 K65 R6 ; R51["mItemId"] := R6
	474	[6358]	EQ       	0 R1 K80 ; if R1 ~= "CONSUMABLES" then PC := 477
	475	[6358]	JMP      	477 ; PC := 477
	476	[6359]	SETTABLE 	R51 K91 R44 ; R51["mItemCount"] := R44
	477	[6362]	GETGLOBAL	R52 K26 ; R52 := 0x33bdd652
	478	[6362]	GETTABLE 	R52 R52 K27 ; R52 := R52[0x23d5322f]
	479	[6362]	MOVE     	R53 R2 ; R53 := R2
	480	[6362]	MOVE     	R54 R51 ; R54 := R51
	481	[6362]	CALL     	R52 3 1 ; R52(R53,R54)
	482	[6340]	TFORLOOP 	R38 2 ; R41,R42 := R38(R39,R40); if R41 ~= nil then begin PC = 437; R40 := R41 end
	483	[6363]	JMP      	437 ; PC := 437
	484	[6368]	NEWTABLE 	R52 0 0 ; R52 := {}
	485	[6369]	GETGLOBAL	R53 K36 ; R53 := 0x7b998233
	486	[6369]	MOVE     	R54 R2 ; R54 := R2
	487	[6369]	CALL     	R53 2 2 ; R53 := R53(R54)
	488	[6369]	TEST     	R53 1 ; if R53 then PC := 656
	489	[6369]	JMP      	656 ; PC := 656
	490	[6369]	LEN      	R53 R2 ; R53 := # R2
	491	[6369]	LT       	0 K4 R53 ; if 0.000000 >= R53 then PC := 656
	492	[6369]	JMP      	656 ; PC := 656
	493	[6372]	NEWTABLE 	R53 0 0 ; R53 := {}
	494	[6374]	LOADK    	R54 := 1.000000
	495	[6374]	LEN      	R55 R5 ; R55 := # R5
	496	[6374]	LOADK    	R56 := 1.000000
	497	[6374]	FORPREP  	R54 504 ; R54 -= R56; PC := 504
	498	[6375]	GETTABLE 	R58 R5 R57 ; R58 := R5[R57]
	499	[6375]	GETTABLE 	R58 R58 K93 ; R58 := R58["type"]
	500	[6375]	SELF     	R58 R58 K94 ; R59 := R58; R58 := R58[0xed4e0128]
	501	[6375]	CALL     	R58 2 2 ; R58 := R58(R59)
	502	[6376]	GETTABLE 	R59 R5 R57 ; R59 := R5[R57]
	503	[6376]	SETTABLE 	R53 R58 R59 ; R53[R58] := R59
	504	[6374]	FORLOOP  	R54 498 ; R54 += R56; if R54 <= R55 then begin PC := 498; R57 := R54 end
	505	[6379]	GETGLOBAL	R59 K95 ; R59 := 0x7ed0a956
	506	[6379]	LOADK    	R60 K96 ; R60 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
	507	[6379]	CALL     	R59 2 2 ; R59 := R59(R60)
	508	[6380]	LOADK    	R60 := 1.000000
	509	[6380]	LEN      	R61 R2 ; R61 := # R2
	510	[6380]	LOADK    	R62 := 1.000000
	511	[6380]	FORPREP  	R60 655 ; R60 -= R62; PC := 655
	512	[6381]	GETTABLE 	R64 R2 R63 ; R64 := R2[R63]
	513	[6382]	GETTABLE 	R65 R64 K41 ; R65 := R64["mItemType"]
	514	[6383]	GETTABLE 	R66 R64 K65 ; R66 := R64["mItemId"]
	515	[6383]	SELF     	R66 R66 K97 ; R67 := R66; R66 := R66[0xf537cfc7]
	516	[6383]	CALL     	R66 2 2 ; R66 := R66(R67)
	517	[6385]	GETGLOBAL	R67 K36 ; R67 := 0x7b998233
	518	[6385]	MOVE     	R68 R65 ; R68 := R65
	519	[6385]	CALL     	R67 2 2 ; R67 := R67(R68)
	520	[6385]	TEST     	R67 1 ; if R67 then PC := 655
	521	[6385]	JMP      	655 ; PC := 655
	522	[6387]	EQ       	1 R65 R59 ; if R65 == R59 then PC := 655
	523	[6387]	JMP      	655 ; PC := 655
	524	[6388]	GETUPVAL 	R67 U5 ; R67 := U5
	525	[6388]	MOVE     	R68 R65 ; R68 := R65
	526	[6388]	CALL     	R67 2 2 ; R67 := R67(R68)
	527	[6390]	GETGLOBAL	R68 K36 ; R68 := 0x7b998233
	528	[6390]	MOVE     	R69 R67 ; R69 := R67
	529	[6390]	CALL     	R68 2 2 ; R68 := R68(R69)
	530	[6390]	TEST     	R68 1 ; if R68 then PC := 655
	531	[6390]	JMP      	655 ; PC := 655
	532	[6391]	NEWTABLE 	R68 0 7 ; R68 := {}
	533	[6391]	SETTABLE 	R68 K98 R65 ; R68["Type"] := R65
	534	[6391]	SETTABLE 	R68 K99 R67 ; R68["mStoreItem"] := R67
	535	[6391]	GETGLOBAL	R69 K42 ; R69 := 0xae91e43b
	536	[6391]	SELF     	R69 R69 K43 ; R70 := R69; R69 := R69[0x42b04007]
	537	[6391]	GETGLOBAL	R71 K44 ; R71 := 0x64fb1586
	538	[6391]	SELF     	R72 R67 K45 ; R73 := R67; R72 := R67[0xd3a9d01f]
	539	[6391]	CALL     	R72 2 0 ; R72,... := R72(R73)
	540	[6391]	CALL     	R71 0 2 ; R71 := R71(R72,...)
	541	[6391]	OP_LOADBOOL	R72 0 0 ; R72 := false
	542	[6391]	CALL     	R69 4 2 ; R69 := R69(R70,R71,R72)
	543	[6391]	SETTABLE 	R68 K46 R69 ; R68["Name"] := R69
	544	[6391]	SETTABLE 	R68 K100 R66 ; R68["UID"] := R66
	545	[6391]	GETTABLE 	R69 R64 K102 ; R69 := R64["mXP"]
	546	[6391]	SETTABLE 	R68 K101 R69 ; R68["Xp"] := R69
	547	[6391]	SETTABLE 	R68 K103 R64 ; R68["Item"] := R64
	548	[6391]	GETTABLE 	R69 R64 K91 ; R69 := R64["mItemCount"]
	549	[6391]	SETTABLE 	R68 K104 R69 ; R68["ItemCount"] := R69
	550	[6392]	GETTABLE 	R69 R3 R66 ; R69 := R3[R66]
	551	[6392]	EQ       	1 R69 K105 ; if R69 == nil then PC := 572
	552	[6392]	JMP      	572 ; PC := 572
	553	[6393]	GETTABLE 	R69 R3 R66 ; R69 := R3[R66]
	554	[6394]	GETTABLE 	R70 R69 K46 ; R70 := R69["Name"]
	555	[6394]	SETTABLE 	R68 K106 R70 ; R68["CustomName"] := R70
	556	[6395]	GETTABLE 	R70 R69 K62 ; R70 := R69["LockTag"]
	557	[6395]	SETTABLE 	R68 K62 R70 ; R68["LockTag"] := R70
	558	[6396]	GETTABLE 	R70 R69 K47 ; R70 := R69["LockDetail"]
	559	[6396]	SETTABLE 	R68 K47 R70 ; R68["LockDetail"] := R70
	560	[6397]	GETTABLE 	R70 R69 K50 ; R70 := R69["OptionDesc"]
	561	[6397]	SETTABLE 	R68 K50 R70 ; R68["OptionDesc"] := R70
	562	[6398]	GETTABLE 	R70 R69 K53 ; R70 := R69["FirstOption"]
	563	[6398]	SETTABLE 	R68 K53 R70 ; R68["FirstOption"] := R70
	564	[6399]	GETTABLE 	R70 R69 K55 ; R70 := R69["SecondOption"]
	565	[6399]	SETTABLE 	R68 K55 R70 ; R68["SecondOption"] := R70
	566	[6400]	GETTABLE 	R70 R69 K57 ; R70 := R69["Callback"]
	567	[6400]	SETTABLE 	R68 K57 R70 ; R68["Callback"] := R70
	568	[6401]	GETTABLE 	R70 R69 K107 ; R70 := R69["UnlockTag"]
	569	[6401]	SETTABLE 	R68 K107 R70 ; R68["UnlockTag"] := R70
	570	[6402]	GETTABLE 	R70 R69 K108 ; R70 := R69["UnlockCallback"]
	571	[6402]	SETTABLE 	R68 K108 R70 ; R68["UnlockCallback"] := R70
	572	[6405]	SELF     	R70 R65 K94 ; R71 := R65; R70 := R65[0xed4e0128]
	573	[6405]	CALL     	R70 2 2 ; R70 := R70(R71)
	574	[6406]	GETTABLE 	R71 R53 R70 ; R71 := R53[R70]
	575	[6407]	EQ       	1 R71 K105 ; if R71 == nil then PC := 580
	576	[6407]	JMP      	580 ; PC := 580
	577	[6408]	GETTABLE 	R72 R71 K110 ; R72 := R71["equipTime"]
	578	[6408]	SETTABLE 	R68 K109 R72 ; R68["Usage"] := R72
	579	[6408]	JMP      	581 ; PC := 581
	580	[6410]	SETTABLE 	R68 K109 K4 ; R68["Usage"] := 0.000000
	581	[6413]	GETTABLE 	R72 R64 K111 ; R72 := R64["mModularParts"]
	582	[6413]	LEN      	R72 R72 ; R72 := # R72
	583	[6413]	LT       	0 K4 R72 ; if 0.000000 >= R72 then PC := 618
	584	[6413]	JMP      	618 ; PC := 618
	585	[6414]	GETTABLE 	R72 R64 K111 ; R72 := R64["mModularParts"]
	586	[6414]	SETTABLE 	R68 K111 R72 ; R68["mModularParts"] := R72
	587	[6415]	GETTABLE 	R72 R64 K112 ; R72 := R64["mGild"]
	588	[6415]	SETTABLE 	R68 K112 R72 ; R68["mGild"] := R72
	589	[6417]	LOADNIL  	R72 R72 ; R72 := nil
	590	[6418]	EQ       	1 R1 K14 ; if R1 == 1.000000 then PC := 594
	591	[6418]	JMP      	594 ; PC := 594
	592	[6418]	EQ       	0 R1 K11 ; if R1 ~= 2.000000 then PC := 597
	593	[6418]	JMP      	597 ; PC := 597
	594	[6420]	GETTABLE 	R73 R68 K111 ; R73 := R68["mModularParts"]
	595	[6420]	GETTABLE 	R72 R73 K14 ; R72 := R73[1.000000]
	596	[6420]	JMP      	606 ; PC := 606
	597	[6421]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 602
	598	[6421]	JMP      	602 ; PC := 602
	599	[6423]	GETTABLE 	R73 R68 K111 ; R73 := R68["mModularParts"]
	600	[6423]	GETTABLE 	R72 R73 K11 ; R72 := R73[2.000000]
	601	[6423]	JMP      	606 ; PC := 606
	602	[6426]	GETTABLE 	R73 R68 K111 ; R73 := R68["mModularParts"]
	603	[6426]	GETTABLE 	R74 R68 K111 ; R74 := R68["mModularParts"]
	604	[6426]	LEN      	R74 R74 ; R74 := # R74
	605	[6426]	GETTABLE 	R72 R73 R74 ; R72 := R73[R74]
	606	[6429]	GETGLOBAL	R73 K36 ; R73 := 0x7b998233
	607	[6429]	MOVE     	R74 R72 ; R74 := R72
	608	[6429]	CALL     	R73 2 2 ; R73 := R73(R74)
	609	[6429]	TEST     	R73 1 ; if R73 then PC := 618
	610	[6429]	JMP      	618 ; PC := 618
	611	[6430]	SELF     	R73 R72 K94 ; R74 := R72; R73 := R72[0xed4e0128]
	612	[6430]	CALL     	R73 2 2 ; R73 := R73(R74)
	613	[6430]	GETTABLE 	R71 R53 R73 ; R71 := R53[R73]
	614	[6431]	EQ       	1 R71 K105 ; if R71 == nil then PC := 618
	615	[6431]	JMP      	618 ; PC := 618
	616	[6432]	GETTABLE 	R73 R71 K110 ; R73 := R71["equipTime"]
	617	[6432]	SETTABLE 	R68 K109 R73 ; R68["Usage"] := R73
	618	[6437]	GETTABLE 	R73 R64 K113 ; R73 := R64["mItemName"]
	619	[6437]	EQ       	1 R73 K114 ; if R73 == "" then PC := 623
	620	[6437]	JMP      	623 ; PC := 623
	621	[6438]	GETTABLE 	R73 R64 K113 ; R73 := R64["mItemName"]
	622	[6438]	SETTABLE 	R68 K106 R73 ; R68["CustomName"] := R73
	623	[6441]	GETGLOBAL	R73 K36 ; R73 := 0x7b998233
	624	[6441]	GETTABLE 	R74 R64 K115 ; R74 := R64["mUpgradeType"]
	625	[6441]	CALL     	R73 2 2 ; R73 := R73(R74)
	626	[6441]	TEST     	R73 1 ; if R73 then PC := 648
	627	[6441]	JMP      	648 ; PC := 648
	628	[6441]	GETTABLE 	R73 R68 K106 ; R73 := R68["CustomName"]
	629	[6441]	EQ       	1 R73 K105 ; if R73 == nil then PC := 648
	630	[6441]	JMP      	648 ; PC := 648
	631	[6442]	LOADK    	R73 K116 ; R73 := "<KUVA_LICH> "
	632	[6443]	GETGLOBAL	R74 K117 ; R74 := 0x7f5022cf
	633	[6443]	GETTABLE 	R74 R74 K118 ; R74 := R74[0xa5c556b9]
	634	[6443]	MOVE     	R75 R70 ; R75 := R70
	635	[6443]	LOADK    	R76 K119 ; R76 := "/Corpus/"
	636	[6443]	CALL     	R74 3 2 ; R74 := R74(R75,R76)
	637	[6443]	TEST     	R74 0 ; if not R74 then PC := 640
	638	[6443]	JMP      	640 ; PC := 640
	639	[6444]	LOADK    	R73 K120 ; R73 := "<CORPUS_LICH> "
	640	[6446]	GETGLOBAL	R74 K42 ; R74 := 0xae91e43b
	641	[6446]	SELF     	R74 R74 K43 ; R75 := R74; R74 := R74[0x42b04007]
	642	[6446]	MOVE     	R76 R73 ; R76 := R73
	643	[6446]	OP_LOADBOOL	R77 1 0 ; R77 := true
	644	[6446]	CALL     	R74 4 2 ; R74 := R74(R75,R76,R77)
	645	[6446]	GETTABLE 	R75 R68 K106 ; R75 := R68["CustomName"]
	646	[6446]	CONCAT   	R74 R74 R75 ; R74 := R74 .. R75
	647	[6446]	SETTABLE 	R68 K106 R74 ; R68["CustomName"] := R74
	648	[6449]	GETTABLE 	R74 R64 K121 ; R74 := R64["mPolarized"]
	649	[6449]	SETTABLE 	R68 K121 R74 ; R68["mPolarized"] := R74
	650	[6451]	GETGLOBAL	R74 K26 ; R74 := 0x33bdd652
	651	[6451]	GETTABLE 	R74 R74 K27 ; R74 := R74[0x23d5322f]
	652	[6451]	MOVE     	R75 R52 ; R75 := R52
	653	[6451]	MOVE     	R76 R68 ; R76 := R68
	654	[6451]	CALL     	R74 3 1 ; R74(R75,R76)
	655	[6380]	FORLOOP  	R60 512 ; R60 += R62; if R60 <= R61 then begin PC := 512; R63 := R60 end
	656	[6457]	RETURN   	R52 2 ; return R52 
	657	[6458]	RETURN   	R0 1 ; return 

function #111 <?:6460,6474> (36 instructions, 144 bytes at 000002111CFCD3A0)
1 param, 3 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[6462]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6462]	MOVE     	R2 R0 ; R2 := R0
	3	[6462]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6462]	TEST     	R1 1 ; if R1 then PC := 34
	5	[6462]	JMP      	34 ; PC := 34
	6	[6463]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xfe9eb1a5]
	7	[6463]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[6463]	EQ       	0 R1 K3 ; if R1 ~= 41.000000 then PC := 12
	9	[6463]	JMP      	12 ; PC := 12
	10	[6464]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[6464]	RETURN   	R1 2 ; return R1 
	12	[6469]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[6469]	GETTABLE 	R1 R1 K4 ; R1 := R1["Current"]
	14	[6469]	EQ       	1 R1 K6 ; if R1 == 1.000000 then PC := 20
	15	[6469]	JMP      	20 ; PC := 20
	16	[6469]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[6469]	GETTABLE 	R1 R1 K4 ; R1 := R1["Current"]
	18	[6469]	EQ       	0 R1 K7 ; if R1 ~= 3.000000 then PC := 24
	19	[6469]	JMP      	24 ; PC := 24
	20	[6469]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x8170d7d9]
	21	[6469]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[6469]	TEST     	R1 1 ; if R1 then PC := 33
	23	[6469]	JMP      	33 ; PC := 33
	24	[6469]	GETUPVAL 	R1 U0 ; R1 := U0
	25	[6469]	GETTABLE 	R1 R1 K4 ; R1 := R1["Current"]
	26	[6469]	EQ       	0 R1 K9 ; if R1 ~= 2.000000 then PC := 31
	27	[6469]	JMP      	31 ; PC := 31
	28	[6469]	SELF     	R1 R0 K10 ; R2 := R0; R1 := R0[0x9470f5c2]
	29	[6469]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[6470]	JMP      	33 ; PC := 33
	31	[6470]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 32
	32	[6470]	OP_LOADBOOL	R1 1 0 ; R1 := true
	33	[6470]	RETURN   	R1 2 ; return R1 
	34	[6473]	OP_LOADBOOL	R1 0 0 ; R1 := false
	35	[6473]	RETURN   	R1 2 ; return R1 
	36	[6474]	RETURN   	R0 1 ; return 

function #112 <?:6476,6478> (12 instructions, 48 bytes at 0000021130CD4530)
2 params, 8 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6477]	MOVE     	R2 R0 ; R2 := R0
	2	[6477]	LOADK    	R3 K0 ; R3 := "\r\n\r\n\r\n"
	3	[6477]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	4	[6477]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x42b04007]
	5	[6477]	LOADK    	R6 K3 ; R6 := "<ENHANCER>"
	6	[6477]	OP_LOADBOOL	R7 1 0 ; R7 := true
	7	[6477]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	8	[6477]	LOADK    	R5 K4 ; R5 := "\r\n"
	9	[6477]	MOVE     	R6 R1 ; R6 := R1
	10	[6477]	CONCAT   	R2 R2 R6 ; R2 := R2 .. R3 .. R4 .. R5 .. R6
	11	[6477]	RETURN   	R2 2 ; return R2 
	12	[6478]	RETURN   	R0 1 ; return 

function #113 <?:6480,6788> (807 instructions, 3228 bytes at 0000021130CD46A0)
1 param, 57 slots, 12 upvalues, 0 locals, 159 constants, 1 function
	1	[6481]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6481]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[6481]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6481]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[6481]	JMP      	7 ; PC := 7
	6	[6482]	RETURN   	R0 1 ; return 
	7	[6484]	NEWTABLE 	R1 0 0 ; R1 := {}
	8	[6516]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	9	[6516]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[6516]	GETUPVAL 	R0 U2 ; R0 := U2
	11	[6516]	GETUPVAL 	R0 U3 ; R0 := U3
	12	[6516]	GETUPVAL 	R0 U4 ; R0 := U4
	13	[6516]	MOVE     	R0 R1 ; R0 := R1
	14	[6518]	LOADNIL  	R3 R3 ; R3 := nil
	15	[6519]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	16	[6519]	GETGLOBAL	R5 K1 ; R5 := mSentinelType
	17	[6519]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[6519]	TEST     	R4 1 ; if R4 then PC := 24
	19	[6519]	JMP      	24 ; PC := 24
	20	[6520]	GETGLOBAL	R4 K2 ; R4 := 0xb009bbc6
	21	[6520]	GETGLOBAL	R5 K1 ; R5 := mSentinelType
	22	[6520]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[6520]	MOVE     	R3 R4 ; R3 := R4
	24	[6523]	GETTABLE 	R4 R0 K3 ; R4 := R0["Items"]
	25	[6523]	EQ       	0 R4 K4 ; if R4 ~= nil then PC := 395
	26	[6523]	JMP      	395 ; PC := 395
	27	[6524]	GETUPVAL 	R4 U0 ; R4 := U0
	28	[6524]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x06ad312d]
	29	[6524]	CALL     	R4 2 2 ; R4 := R4(R5)
	30	[6525]	GETTABLE 	R5 R0 K6 ; R5 := R0["OwnedItems"]
	31	[6527]	LEN      	R6 R5 ; R6 := # R5
	32	[6528]	LOADK    	R7 := 1.000000
	33	[6528]	MOVE     	R8 R6 ; R8 := R6
	34	[6528]	LOADK    	R9 := 1.000000
	35	[6528]	FORPREP  	R7 246 ; R7 -= R9; PC := 246
	36	[6529]	GETGLOBAL	R11 K7 ; R11 := 0xce225efa
	37	[6529]	LOADK    	R12 := 0.000000
	38	[6529]	CALL     	R11 2 1 ; R11(R12)
	39	[6530]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	40	[6531]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	41	[6531]	MOVE     	R13 R11 ; R13 := R11
	42	[6531]	CALL     	R12 2 2 ; R12 := R12(R13)
	43	[6531]	TEST     	R12 1 ; if R12 then PC := 246
	44	[6531]	JMP      	246 ; PC := 246
	45	[6532]	GETTABLE 	R12 R11 K8 ; R12 := R11["Type"]
	46	[6533]	GETUPVAL 	R13 U5 ; R13 := U5
	47	[6533]	MOVE     	R14 R12 ; R14 := R12
	48	[6533]	CALL     	R13 2 2 ; R13 := R13(R14)
	49	[6535]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	50	[6535]	MOVE     	R15 R13 ; R15 := R13
	51	[6535]	CALL     	R14 2 2 ; R14 := R14(R15)
	52	[6535]	TEST     	R14 1 ; if R14 then PC := 246
	53	[6535]	JMP      	246 ; PC := 246
	54	[6536]	OP_LOADBOOL	R14 1 0 ; R14 := true
	55	[6537]	SELF     	R15 R13 K9 ; R16 := R13; R15 := R13[0xfe9eb1a5]
	56	[6537]	CALL     	R15 2 2 ; R15 := R15(R16)
	57	[6538]	GETUPVAL 	R16 U2 ; R16 := U2
	58	[6538]	GETTABLE 	R16 R16 K10 ; R16 := R16[0x08681f50]
	59	[6538]	GETGLOBAL	R17 K11 ; R17 := 0xae91e43b
	60	[6538]	MOVE     	R18 R13 ; R18 := R13
	61	[6538]	NEWTABLE 	R19 0 2 ; R19 := {}
	62	[6538]	SETTABLE 	R19 K12 R11 ; R19["ItemInfo"] := R11
	63	[6538]	GETGLOBAL	R20 K14 ; R20 := 0x25d99d89
	64	[6538]	SETTABLE 	R19 K13 R20 ; R19["GameData"] := R20
	65	[6538]	GETUPVAL 	R20 U0 ; R20 := U0
	66	[6538]	LOADNIL  	R21 R21 ; R21 := nil
	67	[6538]	OP_LOADBOOL	R22 1 0 ; R22 := true
	68	[6538]	CALL     	R16 7 2 ; R16 := R16(R17,R18,R19,R20,R21,R22)
	69	[6540]	EQ       	1 R15 K16 ; if R15 == 0.000000 then PC := 75
	70	[6540]	JMP      	75 ; PC := 75
	71	[6541]	EQ       	1 R15 K17 ; if R15 == 1.000000 then PC := 75
	72	[6541]	JMP      	75 ; PC := 75
	73	[6542]	EQ       	0 R15 K18 ; if R15 ~= 5.000000 then PC := 87
	74	[6542]	JMP      	87 ; PC := 87
	75	[6544]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	76	[6544]	GETGLOBAL	R18 K19 ; R18 := mSuitType
	77	[6544]	CALL     	R17 2 2 ; R17 := R17(R18)
	78	[6544]	TEST     	R17 1 ; if R17 then PC := 112
	79	[6544]	JMP      	112 ; PC := 112
	80	[6544]	SELF     	R17 R12 K20 ; R18 := R12; R17 := R12[0xf2deaf69]
	81	[6544]	GETGLOBAL	R19 K21 ; R19 := gLotusWeaponType
	82	[6544]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	83	[6544]	TEST     	R17 1 ; if R17 then PC := 112
	84	[6544]	JMP      	112 ; PC := 112
	85	[6546]	OP_LOADBOOL	R14 0 0 ; R14 := false
	86	[6547]	JMP      	112 ; PC := 112
	87	[6548]	EQ       	0 R15 K22 ; if R15 ~= 16.000000 then PC := 112
	88	[6548]	JMP      	112 ; PC := 112
	89	[6549]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	90	[6549]	GETGLOBAL	R18 K1 ; R18 := mSentinelType
	91	[6549]	CALL     	R17 2 2 ; R17 := R17(R18)
	92	[6549]	TEST     	R17 1 ; if R17 then PC := 101
	93	[6549]	JMP      	101 ; PC := 101
	94	[6549]	SELF     	R17 R12 K20 ; R18 := R12; R17 := R12[0xf2deaf69]
	95	[6549]	GETGLOBAL	R19 K21 ; R19 := gLotusWeaponType
	96	[6549]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	97	[6549]	TEST     	R17 1 ; if R17 then PC := 101
	98	[6549]	JMP      	101 ; PC := 101
	99	[6551]	OP_LOADBOOL	R14 0 0 ; R14 := false
	100	[6551]	JMP      	112 ; PC := 112
	101	[6552]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	102	[6552]	MOVE     	R18 R3 ; R18 := R3
	103	[6552]	CALL     	R17 2 2 ; R17 := R17(R18)
	104	[6552]	TEST     	R17 1 ; if R17 then PC := 112
	105	[6552]	JMP      	112 ; PC := 112
	106	[6552]	SELF     	R17 R3 K23 ; R18 := R3; R17 := R3[0x24b8c21f]
	107	[6552]	MOVE     	R19 R12 ; R19 := R12
	108	[6552]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	109	[6552]	TEST     	R17 1 ; if R17 then PC := 112
	110	[6552]	JMP      	112 ; PC := 112
	111	[6553]	OP_LOADBOOL	R14 0 0 ; R14 := false
	112	[6557]	TEST     	R14 0 ; if not R14 then PC := 246
	113	[6557]	JMP      	246 ; PC := 246
	114	[6558]	LOADK    	R17 := 0.000000
	115	[6559]	GETTABLE 	R18 R11 K24 ; R18 := R11["Xp"]
	116	[6559]	EQ       	1 R18 K4 ; if R18 == nil then PC := 127
	117	[6559]	JMP      	127 ; PC := 127
	118	[6559]	GETTABLE 	R18 R11 K8 ; R18 := R11["Type"]
	119	[6559]	EQ       	1 R18 K4 ; if R18 == nil then PC := 127
	120	[6559]	JMP      	127 ; PC := 127
	121	[6560]	GETGLOBAL	R18 K25 ; R18 := 0xa94df70b
	122	[6560]	SELF     	R18 R18 K26 ; R19 := R18; R18 := R18[0x8427bf69]
	123	[6560]	GETTABLE 	R20 R11 K24 ; R20 := R11["Xp"]
	124	[6560]	GETTABLE 	R21 R11 K8 ; R21 := R11["Type"]
	125	[6560]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	126	[6560]	MOVE     	R17 R18 ; R17 := R18
	127	[6563]	SETTABLE 	R16 K27 R13 ; R16["mStoreItem"] := R13
	128	[6564]	SETTABLE 	R16 K28 K29 ; R16["mPurchased"] := true
	129	[6565]	SETTABLE 	R16 K30 R11 ; R16["mPurchasedInfo"] := R11
	130	[6566]	LEN      	R18 R1 ; R18 := # R1
	131	[6566]	SETTABLE 	R16 K31 R18 ; R16["mSortId"] := R18
	132	[6567]	GETTABLE 	R18 R0 K32 ; R18 := R0["LoadOutId"]
	133	[6567]	SETTABLE 	R16 K32 R18 ; R16["LoadOutId"] := R18
	134	[6569]	GETTABLE 	R18 R11 K33 ; R18 := R11["CustomName"]
	135	[6569]	TEST     	R18 0 ; if not R18 then PC := 142
	136	[6569]	JMP      	142 ; PC := 142
	137	[6570]	GETGLOBAL	R18 K35 ; R18 := 0x7f5022cf
	138	[6570]	GETTABLE 	R18 R18 K36 ; R18 := R18[0x3f3e4d12]
	139	[6570]	GETTABLE 	R19 R11 K33 ; R19 := R11["CustomName"]
	140	[6570]	CALL     	R18 2 2 ; R18 := R18(R19)
	141	[6570]	SETTABLE 	R16 K34 R18 ; R16["Name"] := R18
	142	[6572]	GETTABLE 	R18 R11 K37 ; R18 := R11["EnhancedDesc"]
	143	[6572]	TEST     	R18 0 ; if not R18 then PC := 150
	144	[6572]	JMP      	150 ; PC := 150
	145	[6573]	GETUPVAL 	R18 U6 ; R18 := U6
	146	[6573]	GETTABLE 	R19 R16 K38 ; R19 := R16["LocalizedDesc"]
	147	[6573]	GETTABLE 	R20 R11 K37 ; R20 := R11["EnhancedDesc"]
	148	[6573]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	149	[6573]	SETTABLE 	R16 K38 R18 ; R16["LocalizedDesc"] := R18
	150	[6575]	GETTABLE 	R18 R16 K32 ; R18 := R16["LoadOutId"]
	151	[6575]	TEST     	R18 0 ; if not R18 then PC := 208
	152	[6575]	JMP      	208 ; PC := 208
	153	[6575]	GETTABLE 	R18 R11 K39 ; R18 := R11["Item"]
	154	[6575]	TEST     	R18 0 ; if not R18 then PC := 208
	155	[6575]	JMP      	208 ; PC := 208
	156	[6575]	GETTABLE 	R18 R11 K8 ; R18 := R11["Type"]
	157	[6575]	SELF     	R18 R18 K20 ; R19 := R18; R18 := R18[0xf2deaf69]
	158	[6575]	GETGLOBAL	R20 K40 ; R20 := 0xb9a9a904
	159	[6575]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	160	[6575]	TEST     	R18 1 ; if R18 then PC := 208
	161	[6575]	JMP      	208 ; PC := 208
	162	[6576]	GETUPVAL 	R18 U7 ; R18 := U7
	163	[6576]	GETTABLE 	R18 R18 K41 ; R18 := R18[0x06d055f9]
	164	[6576]	GETTABLE 	R19 R11 K8 ; R19 := R11["Type"]
	165	[6576]	SELF     	R19 R19 K20 ; R20 := R19; R19 := R19[0xf2deaf69]
	166	[6576]	GETGLOBAL	R21 K42 ; R21 := 0x01302fb0
	167	[6576]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	168	[6576]	LOADK    	R20 := 9.000000
	169	[6577]	GETUPVAL 	R21 U7 ; R21 := U7
	170	[6577]	GETTABLE 	R21 R21 K41 ; R21 := R21[0x06d055f9]
	171	[6577]	GETTABLE 	R22 R16 K32 ; R22 := R16["LoadOutId"]
	172	[6577]	EQ       	1 R22 K16 ; if R22 == 0.000000 then PC := 175
	173	[6577]	JMP      	175 ; PC := 175
	174	[6577]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 175
	175	[6577]	OP_LOADBOOL	R22 1 0 ; R22 := true
	176	[6577]	LOADK    	R23 := 7.000000
	177	[6577]	LOADK    	R24 := 0.000000
	178	[6577]	CALL     	R21 4 0 ; R21,... := R21(R22,R23,R24)
	179	[6576]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	180	[6578]	GETUPVAL 	R19 U2 ; R19 := U2
	181	[6578]	GETTABLE 	R19 R19 K44 ; R19 := R19[0xca5df72e]
	182	[6578]	GETUPVAL 	R20 U0 ; R20 := U0
	183	[6578]	GETGLOBAL	R21 K45 ; R21 := mInventory
	184	[6578]	GETTABLE 	R22 R11 K39 ; R22 := R11["Item"]
	185	[6578]	MOVE     	R23 R18 ; R23 := R18
	186	[6578]	OP_LOADBOOL	R24 1 0 ; R24 := true
	187	[6578]	CALL     	R19 6 3 ; R19,R20 := R19(R20,R21,R22,R23,R24)
	188	[6579]	GETUPVAL 	R21 U7 ; R21 := U7
	189	[6579]	GETTABLE 	R21 R21 K41 ; R21 := R21[0x06d055f9]
	190	[6579]	EQ       	1 R19 K4 ; if R19 == nil then PC := 193
	191	[6579]	JMP      	193 ; PC := 193
	192	[6579]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 193
	193	[6579]	OP_LOADBOOL	R22 1 0 ; R22 := true
	194	[6579]	GETTABLE 	R23 R16 K46 ; R23 := R16["Icon"]
	195	[6579]	MOVE     	R24 R19 ; R24 := R19
	196	[6579]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	197	[6579]	SETTABLE 	R16 K46 R21 ; R16["Icon"] := R21
	198	[6580]	GETUPVAL 	R21 U7 ; R21 := U7
	199	[6580]	GETTABLE 	R21 R21 K41 ; R21 := R21[0x06d055f9]
	200	[6580]	EQ       	1 R19 K4 ; if R19 == nil then PC := 203
	201	[6580]	JMP      	203 ; PC := 203
	202	[6580]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 203
	203	[6580]	OP_LOADBOOL	R22 1 0 ; R22 := true
	204	[6580]	GETTABLE 	R23 R16 K47 ; R23 := R16["Themed"]
	205	[6580]	MOVE     	R24 R20 ; R24 := R20
	206	[6580]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	207	[6580]	SETTABLE 	R16 K47 R21 ; R16["Themed"] := R21
	208	[6583]	GETTABLE 	R21 R11 K49 ; R21 := R11["OptionDesc"]
	209	[6583]	SETTABLE 	R16 K48 R21 ; R16["mOptionDesc"] := R21
	210	[6584]	GETTABLE 	R21 R11 K51 ; R21 := R11["FirstOption"]
	211	[6584]	SETTABLE 	R16 K50 R21 ; R16["mFirstOption"] := R21
	212	[6585]	GETTABLE 	R21 R11 K53 ; R21 := R11["SecondOption"]
	213	[6585]	SETTABLE 	R16 K52 R21 ; R16["mSecondOption"] := R21
	214	[6586]	GETTABLE 	R21 R11 K55 ; R21 := R11["Callback"]
	215	[6586]	SETTABLE 	R16 K54 R21 ; R16["mCallback"] := R21
	216	[6587]	GETTABLE 	R21 R11 K57 ; R21 := R11["LockTag"]
	217	[6587]	SETTABLE 	R16 K56 R21 ; R16["mLockTag"] := R21
	218	[6588]	GETTABLE 	R21 R11 K59 ; R21 := R11["LockDetail"]
	219	[6588]	SETTABLE 	R16 K58 R21 ; R16["mLockDetail"] := R21
	220	[6589]	GETTABLE 	R21 R11 K61 ; R21 := R11["UnlockTag"]
	221	[6589]	SETTABLE 	R16 K60 R21 ; R16["mUnlockTag"] := R21
	222	[6590]	GETTABLE 	R21 R11 K63 ; R21 := R11["UnlockCallback"]
	223	[6590]	SETTABLE 	R16 K62 R21 ; R16["mUnlockCallback"] := R21
	224	[6591]	GETTABLE 	R21 R11 K64 ; R21 := R11["mModularParts"]
	225	[6591]	SETTABLE 	R16 K64 R21 ; R16["mModularParts"] := R21
	226	[6592]	GETTABLE 	R21 R11 K65 ; R21 := R11["mItemName"]
	227	[6592]	SETTABLE 	R16 K65 R21 ; R16["mItemName"] := R21
	228	[6593]	GETGLOBAL	R21 K0 ; R21 := 0x7b998233
	229	[6593]	GETTABLE 	R22 R11 K39 ; R22 := R11["Item"]
	230	[6593]	CALL     	R21 2 2 ; R21 := R21(R22)
	231	[6593]	TEST     	R21 1 ; if R21 then PC := 243
	232	[6593]	JMP      	243 ; PC := 243
	233	[6594]	GETTABLE 	R21 R11 K39 ; R21 := R11["Item"]
	234	[6594]	SELF     	R21 R21 K67 ; R22 := R21; R21 := R21[0xdbfbf6c0]
	235	[6594]	LOADK    	R23 := 3.000000
	236	[6594]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	237	[6594]	SETTABLE 	R16 K66 R21 ; R16["mGild"] := R21
	238	[6595]	GETTABLE 	R21 R11 K39 ; R21 := R11["Item"]
	239	[6595]	SELF     	R21 R21 K67 ; R22 := R21; R21 := R21[0xdbfbf6c0]
	240	[6595]	LOADK    	R23 := 2.000000
	241	[6595]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	242	[6595]	SETTABLE 	R16 K68 R21 ; R16["mHeavyWeaponUnlocked"] := R21
	243	[6597]	MOVE     	R21 R2 ; R21 := R2
	244	[6597]	MOVE     	R22 R16 ; R22 := R16
	245	[6597]	CALL     	R21 2 1 ; R21(R22)
	246	[6528]	FORLOOP  	R7 36 ; R7 += R9; if R7 <= R8 then begin PC := 36; R10 := R7 end
	247	[6606]	GETTABLE 	R21 R0 K32 ; R21 := R0["LoadOutId"]
	248	[6606]	EQ       	1 R21 K69 ; if R21 == 4.000000 then PC := 396
	249	[6606]	JMP      	396 ; PC := 396
	250	[6608]	GETTABLE 	R21 R0 K70 ; R21 := R0["StoreItemId"]
	251	[6609]	EQ       	1 R21 K71 ; if R21 == 39.000000 then PC := 255
	252	[6609]	JMP      	255 ; PC := 255
	253	[6609]	EQ       	0 R21 K72 ; if R21 ~= 24.000000 then PC := 256
	254	[6609]	JMP      	256 ; PC := 256
	255	[6613]	LOADK    	R21 := 15.000000
	256	[6615]	LOADK    	R22 := 1.000000
	257	[6615]	LEN      	R23 R4 ; R23 := # R4
	258	[6615]	LOADK    	R24 := 1.000000
	259	[6615]	FORPREP  	R22 393 ; R22 -= R24; PC := 393
	260	[6616]	GETGLOBAL	R26 K7 ; R26 := 0xce225efa
	261	[6616]	LOADK    	R27 := 0.000000
	262	[6616]	CALL     	R26 2 1 ; R26(R27)
	263	[6617]	GETTABLE 	R26 R4 R25 ; R26 := R4[R25]
	264	[6618]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	265	[6618]	MOVE     	R28 R26 ; R28 := R26
	266	[6618]	CALL     	R27 2 2 ; R27 := R27(R28)
	267	[6618]	TEST     	R27 1 ; if R27 then PC := 393
	268	[6618]	JMP      	393 ; PC := 393
	269	[6619]	SELF     	R27 R26 K9 ; R28 := R26; R27 := R26[0xfe9eb1a5]
	270	[6619]	CALL     	R27 2 2 ; R27 := R27(R28)
	271	[6620]	EQ       	0 R27 R21 ; if R27 ~= R21 then PC := 393
	272	[6620]	JMP      	393 ; PC := 393
	273	[6621]	OP_LOADBOOL	R28 1 0 ; R28 := true
	274	[6622]	LOADK    	R29 := 1.000000
	275	[6622]	MOVE     	R30 R6 ; R30 := R6
	276	[6622]	LOADK    	R31 := 1.000000
	277	[6622]	FORPREP  	R29 284 ; R29 -= R31; PC := 284
	278	[6623]	GETTABLE 	R33 R5 R32 ; R33 := R5[R32]
	279	[6623]	GETTABLE 	R33 R33 K27 ; R33 := R33["mStoreItem"]
	280	[6623]	EQ       	0 R26 R33 ; if R26 ~= R33 then PC := 284
	281	[6623]	JMP      	284 ; PC := 284
	282	[6624]	OP_LOADBOOL	R28 0 0 ; R28 := false
	283	[6625]	JMP      	285 ; PC := 285
	284	[6622]	FORLOOP  	R29 278 ; R29 += R31; if R29 <= R30 then begin PC := 278; R32 := R29 end
	285	[6629]	TEST     	R28 0 ; if not R28 then PC := 368
	286	[6629]	JMP      	368 ; PC := 368
	287	[6630]	GETUPVAL 	R33 U2 ; R33 := U2
	288	[6630]	GETTABLE 	R33 R33 K73 ; R33 := R33[0xcac502bd]
	289	[6630]	MOVE     	R34 R26 ; R34 := R26
	290	[6630]	CALL     	R33 2 2 ; R33 := R33(R34)
	291	[6631]	SELF     	R34 R26 K74 ; R35 := R26; R34 := R26[0xc055cef8]
	292	[6631]	CALL     	R34 2 2 ; R34 := R34(R35)
	293	[6631]	TEST     	R34 0 ; if not R34 then PC := 307
	294	[6631]	JMP      	307 ; PC := 307
	295	[6631]	TEST     	R33 0 ; if not R33 then PC := 307
	296	[6631]	JMP      	307 ; PC := 307
	297	[6631]	GETUPVAL 	R34 U2 ; R34 := U2
	298	[6631]	GETTABLE 	R34 R34 K75 ; R34 := R34[0xc20f37ad]
	299	[6631]	MOVE     	R35 R26 ; R35 := R26
	300	[6631]	CALL     	R34 2 2 ; R34 := R34(R35)
	301	[6631]	TEST     	R34 0 ; if not R34 then PC := 308
	302	[6631]	JMP      	308 ; PC := 308
	303	[6631]	GETUPVAL 	R34 U4 ; R34 := U4
	304	[6631]	GETTABLE 	R34 R34 K76 ; R34 := R34["NewWarCompleted"]
	305	[6631]	TEST     	R34 1 ; if R34 then PC := 308
	306	[6631]	JMP      	308 ; PC := 308
	307	[6632]	OP_LOADBOOL	R28 0 0 ; R28 := false
	308	[6635]	EQ       	1 R27 K16 ; if R27 == 0.000000 then PC := 314
	309	[6635]	JMP      	314 ; PC := 314
	310	[6636]	EQ       	1 R27 K17 ; if R27 == 1.000000 then PC := 314
	311	[6636]	JMP      	314 ; PC := 314
	312	[6637]	EQ       	0 R27 K18 ; if R27 ~= 5.000000 then PC := 334
	313	[6637]	JMP      	334 ; PC := 334
	314	[6639]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	315	[6639]	GETGLOBAL	R35 K19 ; R35 := mSuitType
	316	[6639]	CALL     	R34 2 2 ; R34 := R34(R35)
	317	[6639]	TEST     	R34 1 ; if R34 then PC := 368
	318	[6639]	JMP      	368 ; PC := 368
	319	[6639]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	320	[6639]	SELF     	R35 R26 K77 ; R36 := R26; R35 := R26[0xf278f8a1]
	321	[6639]	CALL     	R35 2 0 ; R35,... := R35(R36)
	322	[6639]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	323	[6639]	TEST     	R34 1 ; if R34 then PC := 368
	324	[6639]	JMP      	368 ; PC := 368
	325	[6639]	SELF     	R34 R26 K77 ; R35 := R26; R34 := R26[0xf278f8a1]
	326	[6639]	CALL     	R34 2 2 ; R34 := R34(R35)
	327	[6639]	SELF     	R34 R34 K20 ; R35 := R34; R34 := R34[0xf2deaf69]
	328	[6639]	GETGLOBAL	R36 K21 ; R36 := gLotusWeaponType
	329	[6639]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	330	[6639]	TEST     	R34 1 ; if R34 then PC := 368
	331	[6639]	JMP      	368 ; PC := 368
	332	[6641]	OP_LOADBOOL	R28 0 0 ; R28 := false
	333	[6642]	JMP      	368 ; PC := 368
	334	[6643]	EQ       	0 R27 K22 ; if R27 ~= 16.000000 then PC := 368
	335	[6643]	JMP      	368 ; PC := 368
	336	[6644]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	337	[6644]	GETGLOBAL	R35 K1 ; R35 := mSentinelType
	338	[6644]	CALL     	R34 2 2 ; R34 := R34(R35)
	339	[6644]	TEST     	R34 1 ; if R34 then PC := 356
	340	[6644]	JMP      	356 ; PC := 356
	341	[6644]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	342	[6644]	SELF     	R35 R26 K77 ; R36 := R26; R35 := R26[0xf278f8a1]
	343	[6644]	CALL     	R35 2 0 ; R35,... := R35(R36)
	344	[6644]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	345	[6644]	TEST     	R34 1 ; if R34 then PC := 356
	346	[6644]	JMP      	356 ; PC := 356
	347	[6644]	SELF     	R34 R26 K77 ; R35 := R26; R34 := R26[0xf278f8a1]
	348	[6644]	CALL     	R34 2 2 ; R34 := R34(R35)
	349	[6644]	SELF     	R34 R34 K20 ; R35 := R34; R34 := R34[0xf2deaf69]
	350	[6644]	GETGLOBAL	R36 K21 ; R36 := gLotusWeaponType
	351	[6644]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	352	[6644]	TEST     	R34 1 ; if R34 then PC := 356
	353	[6644]	JMP      	356 ; PC := 356
	354	[6646]	OP_LOADBOOL	R28 0 0 ; R28 := false
	355	[6646]	JMP      	368 ; PC := 368
	356	[6647]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	357	[6647]	MOVE     	R35 R3 ; R35 := R3
	358	[6647]	CALL     	R34 2 2 ; R34 := R34(R35)
	359	[6647]	TEST     	R34 1 ; if R34 then PC := 368
	360	[6647]	JMP      	368 ; PC := 368
	361	[6647]	SELF     	R34 R3 K23 ; R35 := R3; R34 := R3[0x24b8c21f]
	362	[6647]	SELF     	R36 R26 K77 ; R37 := R26; R36 := R26[0xf278f8a1]
	363	[6647]	CALL     	R36 2 0 ; R36,... := R36(R37)
	364	[6647]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	365	[6647]	TEST     	R34 1 ; if R34 then PC := 368
	366	[6647]	JMP      	368 ; PC := 368
	367	[6648]	OP_LOADBOOL	R28 0 0 ; R28 := false
	368	[6653]	TEST     	R28 0 ; if not R28 then PC := 393
	369	[6653]	JMP      	393 ; PC := 393
	370	[6654]	GETUPVAL 	R34 U2 ; R34 := U2
	371	[6654]	GETTABLE 	R34 R34 K10 ; R34 := R34[0x08681f50]
	372	[6654]	GETGLOBAL	R35 K11 ; R35 := 0xae91e43b
	373	[6654]	MOVE     	R36 R26 ; R36 := R26
	374	[6654]	NEWTABLE 	R37 0 1 ; R37 := {}
	375	[6654]	GETGLOBAL	R38 K14 ; R38 := 0x25d99d89
	376	[6654]	SETTABLE 	R37 K13 R38 ; R37["GameData"] := R38
	377	[6654]	LOADNIL  	R38 R39 ; R38 := R39 := nil
	378	[6654]	OP_LOADBOOL	R40 1 0 ; R40 := true
	379	[6654]	CALL     	R34 7 2 ; R34 := R34(R35,R36,R37,R38,R39,R40)
	380	[6655]	GETUPVAL 	R35 U3 ; R35 := U3
	381	[6655]	GETTABLE 	R35 R35 K78 ; R35 := R35[0xcd71f5a1]
	382	[6655]	MOVE     	R36 R26 ; R36 := R26
	383	[6655]	CALL     	R35 2 2 ; R35 := R35(R36)
	384	[6656]	SETTABLE 	R34 K27 R26 ; R34["mStoreItem"] := R26
	385	[6657]	SETTABLE 	R34 K79 K16 ; R34["Rank"] := 0.000000
	386	[6658]	SETTABLE 	R34 K80 R35 ; R34["Sale"] := R35
	387	[6659]	SETTABLE 	R34 K28 K81 ; R34["mPurchased"] := false
	388	[6660]	LEN      	R36 R1 ; R36 := # R1
	389	[6660]	SETTABLE 	R34 K31 R36 ; R34["mSortId"] := R36
	390	[6661]	MOVE     	R36 R2 ; R36 := R2
	391	[6661]	MOVE     	R37 R34 ; R37 := R34
	392	[6661]	CALL     	R36 2 1 ; R36(R37)
	393	[6615]	FORLOOP  	R22 260 ; R22 += R24; if R22 <= R23 then begin PC := 260; R25 := R22 end
	394	[6666]	JMP      	396 ; PC := 396
	395	[6668]	GETTABLE 	R1 R0 K3 ; R1 := R0["Items"]
	396	[6671]	GETGLOBAL	R36 K82 ; R36 := _T
	397	[6671]	GETTABLE 	R36 R36 K83 ; R36 := R36["MenuSuitAvatar"]
	398	[6672]	NEWTABLE 	R37 3 0 ; R37 := {}
	399	[6672]	LOADK    	R38 := 0.000000
	400	[6672]	LOADK    	R39 := 1.000000
	401	[6672]	LOADK    	R40 := 5.000000
	402	[6672]	SETLIST  	R37 3 1 ; R37[(1-1)*FPF+i] := R(37+i), 1 <= i <= 3
	403	[6673]	LOADK    	R38 := 0.000000
	404	[6674]	LOADK    	R39 := 1.000000
	405	[6674]	LEN      	R40 R37 ; R40 := # R37
	406	[6674]	LOADK    	R41 := 1.000000
	407	[6674]	FORPREP  	R39 423 ; R39 -= R41; PC := 423
	408	[6675]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	409	[6675]	MOVE     	R44 R36 ; R44 := R36
	410	[6675]	CALL     	R43 2 2 ; R43 := R43(R44)
	411	[6675]	TEST     	R43 1 ; if R43 then PC := 423
	412	[6675]	JMP      	423 ; PC := 423
	413	[6675]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	414	[6675]	SELF     	R44 R36 K84 ; R45 := R36; R44 := R36[0xde321e6f]
	415	[6675]	CALL     	R44 2 2 ; R44 := R44(R45)
	416	[6675]	SELF     	R44 R44 K85 ; R45 := R44; R44 := R44[0xe85a2361]
	417	[6675]	GETTABLE 	R46 R37 R42 ; R46 := R37[R42]
	418	[6675]	CALL     	R44 3 0 ; R44,... := R44(R45,R46)
	419	[6675]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	420	[6675]	TEST     	R43 1 ; if R43 then PC := 423
	421	[6675]	JMP      	423 ; PC := 423
	422	[6676]	ADD      	R38 R38 K17 ; R38 := R38 + 1.000000
	423	[6674]	FORLOOP  	R39 408 ; R39 += R41; if R39 <= R40 then begin PC := 408; R42 := R39 end
	424	[6682]	GETTABLE 	R43 R0 K32 ; R43 := R0["LoadOutId"]
	425	[6682]	EQ       	1 R43 K4 ; if R43 == nil then PC := 450
	426	[6682]	JMP      	450 ; PC := 450
	427	[6683]	GETTABLE 	R43 R0 K32 ; R43 := R0["LoadOutId"]
	428	[6683]	EQ       	1 R43 K69 ; if R43 == 4.000000 then PC := 450
	429	[6683]	JMP      	450 ; PC := 450
	430	[6684]	LT       	0 K17 R38 ; if 1.000000 >= R38 then PC := 450
	431	[6684]	JMP      	450 ; PC := 450
	432	[6684]	GETTABLE 	R43 R0 K32 ; R43 := R0["LoadOutId"]
	433	[6684]	EQ       	0 R43 K16 ; if R43 ~= 0.000000 then PC := 438
	434	[6684]	JMP      	438 ; PC := 438
	435	[6684]	GETTABLE 	R43 R0 K86 ; R43 := R0["LoadOutType"]
	436	[6684]	EQ       	0 R43 K17 ; if R43 ~= 1.000000 then PC := 450
	437	[6684]	JMP      	450 ; PC := 450
	438	[6685]	GETTABLE 	R43 R0 K86 ; R43 := R0["LoadOutType"]
	439	[6685]	EQ       	1 R43 K87 ; if R43 == 2.000000 then PC := 450
	440	[6685]	JMP      	450 ; PC := 450
	441	[6686]	GETTABLE 	R43 R0 K86 ; R43 := R0["LoadOutType"]
	442	[6686]	EQ       	1 R43 K69 ; if R43 == 4.000000 then PC := 450
	443	[6686]	JMP      	450 ; PC := 450
	444	[6687]	GETTABLE 	R43 R0 K86 ; R43 := R0["LoadOutType"]
	445	[6687]	EQ       	1 R43 K88 ; if R43 == 6.000000 then PC := 450
	446	[6687]	JMP      	450 ; PC := 450
	447	[6688]	GETTABLE 	R43 R0 K86 ; R43 := R0["LoadOutType"]
	448	[6688]	EQ       	0 R43 K89 ; if R43 ~= 8.000000 then PC := 461
	449	[6688]	JMP      	461 ; PC := 461
	450	[6692]	GETGLOBAL	R43 K90 ; R43 := mSelected
	451	[6692]	GETTABLE 	R43 R43 K91 ; R43 := R43["Emote"]
	452	[6692]	EQ       	0 R43 K4 ; if R43 ~= nil then PC := 461
	453	[6692]	JMP      	461 ; PC := 461
	454	[6692]	GETGLOBAL	R43 K90 ; R43 := mSelected
	455	[6692]	GETTABLE 	R43 R43 K92 ; R43 := R43["Consumable"]
	456	[6692]	EQ       	0 R43 K4 ; if R43 ~= nil then PC := 461
	457	[6692]	JMP      	461 ; PC := 461
	458	[6696]	GETTABLE 	R43 R0 K86 ; R43 := R0["LoadOutType"]
	459	[6696]	EQ       	0 R43 K17 ; if R43 ~= 1.000000 then PC := 478
	460	[6696]	JMP      	478 ; PC := 478
	461	[6699]	GETGLOBAL	R43 K93 ; R43 := 0x33bdd652
	462	[6699]	GETTABLE 	R43 R43 K94 ; R43 := R43[0x23d5322f]
	463	[6699]	MOVE     	R44 R1 ; R44 := R1
	464	[6699]	NEWTABLE 	R45 0 7 ; R45 := {}
	465	[6699]	SETTABLE 	R45 K95 K29 ; R45["mEmpty"] := true
	466	[6699]	SETTABLE 	R45 K27 K4 ; R45["mStoreItem"] := nil
	467	[6699]	GETGLOBAL	R46 K11 ; R46 := 0xae91e43b
	468	[6699]	SELF     	R46 R46 K96 ; R47 := R46; R46 := R46[0x42b04007]
	469	[6699]	LOADK    	R48 K97 ; R48 := "/Lotus/Language/Menu/Cosmetics_None"
	470	[6699]	OP_LOADBOOL	R49 0 0 ; R49 := false
	471	[6699]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	472	[6699]	SETTABLE 	R45 K34 R46 ; R45["Name"] := R46
	473	[6699]	SETTABLE 	R45 K98 K16 ; R45["PvpValue"] := 0.000000
	474	[6699]	SETTABLE 	R45 K28 K29 ; R45["mPurchased"] := true
	475	[6699]	SETTABLE 	R45 K31 K99 ; R45["mSortId"] := -10.000000
	476	[6699]	SETTABLE 	R45 K8 K4 ; R45["Type"] := nil
	477	[6699]	CALL     	R43 3 1 ; R43(R44,R45)
	478	[6702]	LOADNIL  	R43 R43 ; R43 := nil
	479	[6704]	LOADK    	R44 := 1.000000
	480	[6704]	LEN      	R45 R1 ; R45 := # R1
	481	[6704]	LOADK    	R46 := 1.000000
	482	[6704]	FORPREP  	R44 754 ; R44 -= R46; PC := 754
	483	[6705]	GETTABLE 	R48 R1 R47 ; R48 := R1[R47]
	484	[6706]	SETTABLE 	R48 K100 K101 ; R48["SearchCache"] := ""
	485	[6707]	GETTABLE 	R49 R48 K95 ; R49 := R48["mEmpty"]
	486	[6707]	TEST     	R49 0 ; if not R49 then PC := 497
	487	[6707]	JMP      	497 ; PC := 497
	488	[6708]	GETGLOBAL	R49 K102 ; R49 := 0x83e41587
	489	[6708]	GETGLOBAL	R50 K11 ; R50 := 0xae91e43b
	490	[6708]	SELF     	R50 R50 K96 ; R51 := R50; R50 := R50[0x42b04007]
	491	[6708]	LOADK    	R52 K97 ; R52 := "/Lotus/Language/Menu/Cosmetics_None"
	492	[6708]	OP_LOADBOOL	R53 0 0 ; R53 := false
	493	[6708]	CALL     	R50 4 0 ; R50,... := R50(R51,R52,R53)
	494	[6708]	CALL     	R49 0 2 ; R49 := R49(R50,...)
	495	[6708]	SETTABLE 	R48 K100 R49 ; R48["SearchCache"] := R49
	496	[6708]	JMP      	510 ; PC := 510
	497	[6709]	GETGLOBAL	R49 K0 ; R49 := 0x7b998233
	498	[6709]	GETTABLE 	R50 R48 K27 ; R50 := R48["mStoreItem"]
	499	[6709]	CALL     	R49 2 2 ; R49 := R49(R50)
	500	[6709]	TEST     	R49 1 ; if R49 then PC := 510
	501	[6709]	JMP      	510 ; PC := 510
	502	[6710]	GETUPVAL 	R49 U2 ; R49 := U2
	503	[6710]	GETTABLE 	R49 R49 K103 ; R49 := R49[0x1ac299fb]
	504	[6710]	GETGLOBAL	R50 K11 ; R50 := 0xae91e43b
	505	[6710]	GETTABLE 	R51 R48 K27 ; R51 := R48["mStoreItem"]
	506	[6710]	GETTABLE 	R52 R48 K34 ; R52 := R48["Name"]
	507	[6710]	GETTABLE 	R53 R48 K104 ; R53 := R48["SearchTags"]
	508	[6710]	CALL     	R49 5 2 ; R49 := R49(R50,R51,R52,R53)
	509	[6710]	SETTABLE 	R48 K100 R49 ; R48["SearchCache"] := R49
	510	[6713]	GETTABLE 	R49 R48 K105 ; R49 := R48["Polarity"]
	511	[6713]	EQ       	1 R49 K4 ; if R49 == nil then PC := 525
	512	[6713]	JMP      	525 ; PC := 525
	513	[6714]	GETGLOBAL	R49 K102 ; R49 := 0x83e41587
	514	[6714]	GETGLOBAL	R50 K11 ; R50 := 0xae91e43b
	515	[6714]	SELF     	R50 R50 K96 ; R51 := R50; R50 := R50[0x42b04007]
	516	[6714]	GETTABLE 	R52 R48 K105 ; R52 := R48["Polarity"]
	517	[6714]	GETTABLE 	R52 R52 K106 ; R52 := R52["NameTag"]
	518	[6714]	OP_LOADBOOL	R53 0 0 ; R53 := false
	519	[6714]	CALL     	R50 4 0 ; R50,... := R50(R51,R52,R53)
	520	[6714]	CALL     	R49 0 2 ; R49 := R49(R50,...)
	521	[6714]	LOADK    	R50 K107 ; R50 := " "
	522	[6714]	GETTABLE 	R51 R48 K100 ; R51 := R48["SearchCache"]
	523	[6714]	CONCAT   	R49 R49 R51 ; R49 := R49 .. R50 .. R51
	524	[6714]	SETTABLE 	R48 K100 R49 ; R48["SearchCache"] := R49
	525	[6717]	GETGLOBAL	R49 K0 ; R49 := 0x7b998233
	526	[6717]	GETTABLE 	R50 R48 K8 ; R50 := R48["Type"]
	527	[6717]	CALL     	R49 2 2 ; R49 := R49(R50)
	528	[6717]	TEST     	R49 1 ; if R49 then PC := 555
	529	[6717]	JMP      	555 ; PC := 555
	530	[6717]	GETTABLE 	R49 R48 K8 ; R49 := R48["Type"]
	531	[6717]	SELF     	R49 R49 K20 ; R50 := R49; R49 := R49[0xf2deaf69]
	532	[6717]	GETGLOBAL	R51 K108 ; R51 := gLotusSigilType
	533	[6717]	CALL     	R49 3 2 ; R49 := R49(R50,R51)
	534	[6717]	TEST     	R49 0 ; if not R49 then PC := 555
	535	[6717]	JMP      	555 ; PC := 555
	536	[6718]	GETTABLE 	R49 R48 K27 ; R49 := R48["mStoreItem"]
	537	[6718]	SELF     	R49 R49 K109 ; R50 := R49; R49 := R49[0xe1c86d38]
	538	[6718]	CALL     	R49 2 2 ; R49 := R49(R50)
	539	[6718]	SUB      	R49 R49 K17 ; R49 := R49 - 1.000000
	540	[6719]	LT       	0 K16 R49 ; if 0.000000 >= R49 then PC := 555
	541	[6719]	JMP      	555 ; PC := 555
	542	[6720]	GETTABLE 	R50 R48 K34 ; R50 := R48["Name"]
	543	[6720]	LOADK    	R51 K110 ; R51 := " (+"
	544	[6720]	GETUPVAL 	R52 U7 ; R52 := U7
	545	[6720]	GETTABLE 	R52 R52 K111 ; R52 := R52[0x74a11ec6]
	546	[6720]	MUL      	R53 R49 K112 ; R53 := R49 * 100.000000
	547	[6720]	CALL     	R52 2 2 ; R52 := R52(R53)
	548	[6720]	LOADK    	R53 K113 ; R53 := "%"
	549	[6720]	GETGLOBAL	R54 K114 ; R54 := Icons
	550	[6720]	GETTABLE 	R54 R54 K115 ; R54 := R54["REPUTATION"]
	551	[6720]	LOADK    	R55 K116 ; R55 := ")"
	552	[6720]	CONCAT   	R50 R50 R55 ; R50 := R50 .. R51 .. R52 .. R53 .. R54 .. R55
	553	[6720]	SETTABLE 	R48 K34 R50 ; R48["Name"] := R50
	554	[6721]	SETTABLE 	R48 K117 K29 ; R48["IsSyndicateSigil"] := true
	555	[6725]	GETTABLE 	R50 R48 K8 ; R50 := R48["Type"]
	556	[6725]	EQ       	1 R50 K4 ; if R50 == nil then PC := 563
	557	[6725]	JMP      	563 ; PC := 563
	558	[6725]	GETTABLE 	R50 R48 K8 ; R50 := R48["Type"]
	559	[6725]	SELF     	R50 R50 K20 ; R51 := R50; R50 := R50[0xf2deaf69]
	560	[6725]	GETGLOBAL	R52 K118 ; R52 := gPetPowerSuitType
	561	[6725]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	562	[6725]	JMP      	565 ; PC := 565
	563	[6725]	OP_LOADBOOL	R50 0 1 ; R50 := false; PC := 564
	564	[6725]	OP_LOADBOOL	R50 1 0 ; R50 := true
	565	[6726]	TEST     	R50 0 ; if not R50 then PC := 585
	566	[6726]	JMP      	585 ; PC := 585
	567	[6726]	GETGLOBAL	R51 K0 ; R51 := 0x7b998233
	568	[6726]	GETTABLE 	R52 R48 K30 ; R52 := R48["mPurchasedInfo"]
	569	[6726]	CALL     	R51 2 2 ; R51 := R51(R52)
	570	[6726]	TEST     	R51 1 ; if R51 then PC := 585
	571	[6726]	JMP      	585 ; PC := 585
	572	[6726]	GETGLOBAL	R51 K0 ; R51 := 0x7b998233
	573	[6726]	GETTABLE 	R52 R48 K30 ; R52 := R48["mPurchasedInfo"]
	574	[6726]	GETTABLE 	R52 R52 K39 ; R52 := R52["Item"]
	575	[6726]	CALL     	R51 2 2 ; R51 := R51(R52)
	576	[6726]	TEST     	R51 1 ; if R51 then PC := 585
	577	[6726]	JMP      	585 ; PC := 585
	578	[6727]	GETUPVAL 	R51 U8 ; R51 := U8
	579	[6727]	GETTABLE 	R51 R51 K120 ; R51 := R51[0x44a40cdc]
	580	[6727]	GETGLOBAL	R52 K11 ; R52 := 0xae91e43b
	581	[6727]	GETTABLE 	R53 R48 K30 ; R53 := R48["mPurchasedInfo"]
	582	[6727]	GETTABLE 	R53 R53 K39 ; R53 := R53["Item"]
	583	[6727]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	584	[6727]	SETTABLE 	R48 K119 R51 ; R48["PetGenderBreedInfo"] := R51
	585	[6730]	GETGLOBAL	R51 K121 ; R51 := mItemsGrid
	586	[6730]	SELF     	R51 R51 K122 ; R52 := R51; R51 := R51[0xbad4316f]
	587	[6730]	MOVE     	R53 R48 ; R53 := R48
	588	[6730]	OP_LOADBOOL	R54 1 0 ; R54 := true
	589	[6730]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	590	[6732]	EQ       	0 R43 K4 ; if R43 ~= nil then PC := 754
	591	[6732]	JMP      	754 ; PC := 754
	592	[6733]	GETTABLE 	R51 R48 K28 ; R51 := R48["mPurchased"]
	593	[6733]	TEST     	R51 0 ; if not R51 then PC := 732
	594	[6733]	JMP      	732 ; PC := 732
	595	[6733]	GETTABLE 	R51 R48 K30 ; R51 := R48["mPurchasedInfo"]
	596	[6733]	EQ       	1 R51 K4 ; if R51 == nil then PC := 732
	597	[6733]	JMP      	732 ; PC := 732
	598	[6734]	GETGLOBAL	R51 K90 ; R51 := mSelected
	599	[6734]	GETTABLE 	R51 R51 K39 ; R51 := R51["Item"]
	600	[6734]	EQ       	1 R51 K4 ; if R51 == nil then PC := 606
	601	[6734]	JMP      	606 ; PC := 606
	602	[6735]	GETGLOBAL	R51 K90 ; R51 := mSelected
	603	[6735]	GETTABLE 	R51 R51 K39 ; R51 := R51["Item"]
	604	[6735]	GETTABLE 	R43 R51 K123 ; R43 := R51["Id"]
	605	[6735]	JMP      	754 ; PC := 754
	606	[6736]	GETGLOBAL	R51 K90 ; R51 := mSelected
	607	[6736]	GETTABLE 	R51 R51 K92 ; R51 := R51["Consumable"]
	608	[6736]	EQ       	1 R51 K4 ; if R51 == nil then PC := 619
	609	[6736]	JMP      	619 ; PC := 619
	610	[6737]	GETTABLE 	R51 R48 K30 ; R51 := R48["mPurchasedInfo"]
	611	[6737]	GETTABLE 	R51 R51 K8 ; R51 := R51["Type"]
	612	[6737]	GETGLOBAL	R52 K90 ; R52 := mSelected
	613	[6737]	GETTABLE 	R52 R52 K92 ; R52 := R52["Consumable"]
	614	[6737]	GETTABLE 	R52 R52 K8 ; R52 := R52["Type"]
	615	[6737]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 754
	616	[6737]	JMP      	754 ; PC := 754
	617	[6738]	GETTABLE 	R43 R48 K123 ; R43 := R48["Id"]
	618	[6739]	JMP      	754 ; PC := 754
	619	[6740]	GETGLOBAL	R51 K90 ; R51 := mSelected
	620	[6740]	GETTABLE 	R51 R51 K91 ; R51 := R51["Emote"]
	621	[6740]	EQ       	1 R51 K4 ; if R51 == nil then PC := 632
	622	[6740]	JMP      	632 ; PC := 632
	623	[6741]	GETTABLE 	R51 R48 K30 ; R51 := R48["mPurchasedInfo"]
	624	[6741]	GETTABLE 	R51 R51 K8 ; R51 := R51["Type"]
	625	[6741]	GETGLOBAL	R52 K90 ; R52 := mSelected
	626	[6741]	GETTABLE 	R52 R52 K91 ; R52 := R52["Emote"]
	627	[6741]	GETTABLE 	R52 R52 K8 ; R52 := R52["Type"]
	628	[6741]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 754
	629	[6741]	JMP      	754 ; PC := 754
	630	[6742]	GETTABLE 	R43 R48 K123 ; R43 := R48["Id"]
	631	[6743]	JMP      	754 ; PC := 754
	632	[6744]	GETUPVAL 	R51 U9 ; R51 := U9
	633	[6744]	GETUPVAL 	R52 U10 ; R52 := U10
	634	[6744]	GETTABLE 	R52 R52 K124 ; R52 := R52["SWAPPING_ITEM"]
	635	[6744]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 652
	636	[6744]	JMP      	652 ; PC := 652
	637	[6744]	GETGLOBAL	R51 K0 ; R51 := 0x7b998233
	638	[6744]	GETGLOBAL	R52 K90 ; R52 := mSelected
	639	[6744]	GETTABLE 	R52 R52 K125 ; R52 := R52["Element"]
	640	[6744]	CALL     	R51 2 2 ; R51 := R51(R52)
	641	[6744]	TEST     	R51 1 ; if R51 then PC := 652
	642	[6744]	JMP      	652 ; PC := 652
	643	[6744]	GETTABLE 	R51 R48 K30 ; R51 := R48["mPurchasedInfo"]
	644	[6744]	GETTABLE 	R51 R51 K126 ; R51 := R51["UID"]
	645	[6744]	GETGLOBAL	R52 K90 ; R52 := mSelected
	646	[6744]	GETTABLE 	R52 R52 K125 ; R52 := R52["Element"]
	647	[6744]	GETTABLE 	R52 R52 K126 ; R52 := R52["UID"]
	648	[6744]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 652
	649	[6744]	JMP      	652 ; PC := 652
	650	[6745]	GETTABLE 	R43 R48 K123 ; R43 := R48["Id"]
	651	[6745]	JMP      	754 ; PC := 754
	652	[6746]	GETUPVAL 	R51 U9 ; R51 := U9
	653	[6746]	GETUPVAL 	R52 U10 ; R52 := U10
	654	[6746]	GETTABLE 	R52 R52 K127 ; R52 := R52["SELECTING_SKINS"]
	655	[6746]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 754
	656	[6746]	JMP      	754 ; PC := 754
	657	[6747]	GETGLOBAL	R51 K0 ; R51 := 0x7b998233
	658	[6747]	GETGLOBAL	R52 K90 ; R52 := mSelected
	659	[6747]	GETTABLE 	R52 R52 K125 ; R52 := R52["Element"]
	660	[6747]	CALL     	R51 2 2 ; R51 := R51(R52)
	661	[6747]	TEST     	R51 1 ; if R51 then PC := 672
	662	[6747]	JMP      	672 ; PC := 672
	663	[6747]	GETGLOBAL	R51 K90 ; R51 := mSelected
	664	[6747]	GETTABLE 	R51 R51 K125 ; R51 := R51["Element"]
	665	[6747]	GETTABLE 	R51 R51 K128 ; R51 := R51["LunaroArenaEntry"]
	666	[6747]	TEST     	R51 0 ; if not R51 then PC := 672
	667	[6747]	JMP      	672 ; PC := 672
	668	[6748]	GETGLOBAL	R51 K129 ; R51 := 0x3d106989
	669	[6748]	LOADK    	R52 K130 ; R52 := "yay"
	670	[6748]	CALL     	R51 2 1 ; R51(R52)
	671	[6748]	JMP      	754 ; PC := 754
	672	[6750]	GETGLOBAL	R51 K90 ; R51 := mSelected
	673	[6750]	GETTABLE 	R51 R51 K131 ; R51 := R51["Cosmetic"]
	674	[6750]	GETTABLE 	R51 R51 K132 ; R51 := R51["PetTrait"]
	675	[6750]	TEST     	R51 0 ; if not R51 then PC := 694
	676	[6750]	JMP      	694 ; PC := 694
	677	[6750]	GETGLOBAL	R51 K90 ; R51 := mSelected
	678	[6750]	GETTABLE 	R51 R51 K131 ; R51 := R51["Cosmetic"]
	679	[6750]	GETTABLE 	R51 R51 K133 ; R51 := R51["Attribute"]
	680	[6750]	TEST     	R51 0 ; if not R51 then PC := 694
	681	[6750]	JMP      	694 ; PC := 694
	682	[6751]	GETTABLE 	R51 R48 K134 ; R51 := R48["PetTintColor"]
	683	[6751]	EQ       	1 R51 K4 ; if R51 == nil then PC := 754
	684	[6751]	JMP      	754 ; PC := 754
	685	[6751]	GETTABLE 	R51 R48 K134 ; R51 := R48["PetTintColor"]
	686	[6751]	GETGLOBAL	R52 K90 ; R52 := mSelected
	687	[6751]	GETTABLE 	R52 R52 K135 ; R52 := R52["CosmeticPreviousValue"]
	688	[6751]	SELF     	R52 R52 K136 ; R53 := R52; R52 := R52[0xa5d5c8f6]
	689	[6751]	CALL     	R52 2 2 ; R52 := R52(R53)
	690	[6751]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 754
	691	[6751]	JMP      	754 ; PC := 754
	692	[6752]	GETTABLE 	R43 R48 K123 ; R43 := R48["Id"]
	693	[6753]	JMP      	754 ; PC := 754
	694	[6754]	GETGLOBAL	R51 K0 ; R51 := 0x7b998233
	695	[6754]	GETGLOBAL	R52 K90 ; R52 := mSelected
	696	[6754]	GETTABLE 	R52 R52 K125 ; R52 := R52["Element"]
	697	[6754]	CALL     	R51 2 2 ; R51 := R51(R52)
	698	[6754]	TEST     	R51 1 ; if R51 then PC := 754
	699	[6754]	JMP      	754 ; PC := 754
	700	[6755]	GETGLOBAL	R51 K90 ; R51 := mSelected
	701	[6755]	GETTABLE 	R51 R51 K125 ; R51 := R51["Element"]
	702	[6755]	GETTABLE 	R51 R51 K137 ; R51 := R51["Customization"]
	703	[6755]	SELF     	R51 R51 K138 ; R52 := R51; R51 := R51[0x5ef3783b]
	704	[6755]	GETGLOBAL	R53 K90 ; R53 := mSelected
	705	[6755]	GETTABLE 	R53 R53 K131 ; R53 := R53["Cosmetic"]
	706	[6755]	GETTABLE 	R53 R53 K139 ; R53 := R53["Slot"]
	707	[6755]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	708	[6757]	GETTABLE 	R52 R51 K140 ; R52 := R51["mItemId"]
	709	[6757]	GETTABLE 	R52 R52 K141 ; R52 := R52["mId"]
	710	[6757]	GETTABLE 	R53 R48 K30 ; R53 := R48["mPurchasedInfo"]
	711	[6757]	GETTABLE 	R53 R53 K126 ; R53 := R53["UID"]
	712	[6757]	EQ       	1 R52 R53 ; if R52 == R53 then PC := 730
	713	[6757]	JMP      	730 ; PC := 730
	714	[6758]	GETTABLE 	R52 R51 K140 ; R52 := R51["mItemId"]
	715	[6758]	GETTABLE 	R52 R52 K141 ; R52 := R52["mId"]
	716	[6758]	EQ       	0 R52 K101 ; if R52 ~= "" then PC := 754
	717	[6758]	JMP      	754 ; PC := 754
	718	[6758]	GETGLOBAL	R52 K0 ; R52 := 0x7b998233
	719	[6758]	GETTABLE 	R53 R51 K142 ; R53 := R51["mItemType"]
	720	[6758]	CALL     	R52 2 2 ; R52 := R52(R53)
	721	[6758]	TEST     	R52 1 ; if R52 then PC := 754
	722	[6758]	JMP      	754 ; PC := 754
	723	[6758]	GETTABLE 	R52 R51 K142 ; R52 := R51["mItemType"]
	724	[6758]	SELF     	R52 R52 K143 ; R53 := R52; R52 := R52[0xed4e0128]
	725	[6758]	CALL     	R52 2 2 ; R52 := R52(R53)
	726	[6758]	GETTABLE 	R53 R48 K30 ; R53 := R48["mPurchasedInfo"]
	727	[6758]	GETTABLE 	R53 R53 K126 ; R53 := R53["UID"]
	728	[6758]	EQ       	0 R52 R53 ; if R52 ~= R53 then PC := 754
	729	[6758]	JMP      	754 ; PC := 754
	730	[6759]	GETTABLE 	R43 R48 K123 ; R43 := R48["Id"]
	731	[6763]	JMP      	754 ; PC := 754
	732	[6764]	GETTABLE 	R52 R48 K8 ; R52 := R48["Type"]
	733	[6764]	EQ       	0 R52 K4 ; if R52 ~= nil then PC := 754
	734	[6764]	JMP      	754 ; PC := 754
	735	[6765]	GETGLOBAL	R52 K90 ; R52 := mSelected
	736	[6765]	GETTABLE 	R52 R52 K92 ; R52 := R52["Consumable"]
	737	[6765]	EQ       	1 R52 K4 ; if R52 == nil then PC := 744
	738	[6765]	JMP      	744 ; PC := 744
	739	[6765]	GETGLOBAL	R52 K90 ; R52 := mSelected
	740	[6765]	GETTABLE 	R52 R52 K92 ; R52 := R52["Consumable"]
	741	[6765]	GETTABLE 	R52 R52 K8 ; R52 := R52["Type"]
	742	[6765]	EQ       	1 R52 K4 ; if R52 == nil then PC := 753
	743	[6765]	JMP      	753 ; PC := 753
	744	[6766]	GETGLOBAL	R52 K90 ; R52 := mSelected
	745	[6766]	GETTABLE 	R52 R52 K91 ; R52 := R52["Emote"]
	746	[6766]	EQ       	1 R52 K4 ; if R52 == nil then PC := 754
	747	[6766]	JMP      	754 ; PC := 754
	748	[6766]	GETGLOBAL	R52 K90 ; R52 := mSelected
	749	[6766]	GETTABLE 	R52 R52 K91 ; R52 := R52["Emote"]
	750	[6766]	GETTABLE 	R52 R52 K8 ; R52 := R52["Type"]
	751	[6766]	EQ       	0 R52 K4 ; if R52 ~= nil then PC := 754
	752	[6766]	JMP      	754 ; PC := 754
	753	[6768]	GETTABLE 	R43 R48 K123 ; R43 := R48["Id"]
	754	[6704]	FORLOOP  	R44 483 ; R44 += R46; if R44 <= R45 then begin PC := 483; R47 := R44 end
	755	[6773]	GETGLOBAL	R52 K121 ; R52 := mItemsGrid
	756	[6773]	GETUPVAL 	R53 U7 ; R53 := U7
	757	[6773]	GETTABLE 	R53 R53 K41 ; R53 := R53[0x06d055f9]
	758	[6773]	EQ       	1 R43 K4 ; if R43 == nil then PC := 761
	759	[6773]	JMP      	761 ; PC := 761
	760	[6773]	OP_LOADBOOL	R54 0 1 ; R54 := false; PC := 761
	761	[6773]	OP_LOADBOOL	R54 1 0 ; R54 := true
	762	[6773]	LOADK    	R55 := 1.000000
	763	[6773]	MOVE     	R56 R43 ; R56 := R43
	764	[6773]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	765	[6773]	SETTABLE 	R52 K144 R53 ; R52["mEquippedItemId"] := R53
	766	[6775]	GETGLOBAL	R52 K11 ; R52 := 0xae91e43b
	767	[6775]	SELF     	R52 R52 K145 ; R53 := R52; R52 := R52[0x5f56eeab]
	768	[6775]	GETUPVAL 	R54 U11 ; R54 := U11
	769	[6775]	GETTABLE 	R54 R54 K146 ; R54 := R54["mClipName"]
	770	[6775]	LOADK    	R55 K147 ; R55 := ".FilterText"
	771	[6775]	CONCAT   	R54 R54 R55 ; R54 := R54 .. R55
	772	[6775]	LOADK    	R55 := 29.000000
	773	[6775]	LOADK    	R56 K101 ; R56 := ""
	774	[6775]	CALL     	R52 5 1 ; R52(R53,R54,R55,R56)
	775	[6776]	GETUPVAL 	R52 U11 ; R52 := U11
	776	[6776]	SETTABLE 	R52 K148 K4 ; R52["mSearchTerm"] := nil
	777	[6777]	GETUPVAL 	R52 U11 ; R52 := U11
	778	[6777]	SETTABLE 	R52 K149 K4 ; R52["mLowerSearchTerm"] := nil
	779	[6778]	GETGLOBAL	R52 K82 ; R52 := _T
	780	[6778]	SETTABLE 	R52 K150 K4 ; R52["CurrentSearchTerm"] := nil
	781	[6779]	GETGLOBAL	R52 K121 ; R52 := mItemsGrid
	782	[6779]	SETTABLE 	R52 K151 K4 ; R52["mLastFilterBy"] := nil
	783	[6780]	GETGLOBAL	R52 K121 ; R52 := mItemsGrid
	784	[6780]	SELF     	R52 R52 K152 ; R53 := R52; R52 := R52[0x71e9ac81]
	785	[6780]	CALL     	R52 2 1 ; R52(R53)
	786	[6781]	GETGLOBAL	R52 K121 ; R52 := mItemsGrid
	787	[6781]	GETTABLE 	R52 R52 K153 ; R52 := R52["mIndexOnRedraw"]
	788	[6781]	EQ       	1 R52 K4 ; if R52 == nil then PC := 797
	789	[6781]	JMP      	797 ; PC := 797
	790	[6782]	GETGLOBAL	R52 K121 ; R52 := mItemsGrid
	791	[6782]	SELF     	R52 R52 K154 ; R53 := R52; R52 := R52[0x77de11fe]
	792	[6782]	GETGLOBAL	R54 K121 ; R54 := mItemsGrid
	793	[6782]	GETTABLE 	R54 R54 K153 ; R54 := R54["mIndexOnRedraw"]
	794	[6782]	CALL     	R52 3 1 ; R52(R53,R54)
	795	[6784]	GETGLOBAL	R52 K121 ; R52 := mItemsGrid
	796	[6784]	SETTABLE 	R52 K153 K4 ; R52["mIndexOnRedraw"] := nil
	797	[6786]	GETUPVAL 	R52 U7 ; R52 := U7
	798	[6786]	GETTABLE 	R52 R52 K155 ; R52 := R52[0x659d451f]
	799	[6786]	GETGLOBAL	R53 K156 ; R53 := 0x0032441c
	800	[6786]	GETTABLE 	R53 R53 K157 ; R53 := R53["UISound_ButtonSelect"]
	801	[6786]	CALL     	R52 2 1 ; R52(R53)
	802	[6787]	GETUPVAL 	R52 U7 ; R52 := U7
	803	[6787]	GETTABLE 	R52 R52 K155 ; R52 := R52[0x659d451f]
	804	[6787]	GETGLOBAL	R53 K156 ; R53 := 0x0032441c
	805	[6787]	GETTABLE 	R53 R53 K158 ; R53 := R53["UISound_WindowOpen"]
	806	[6787]	CALL     	R52 2 1 ; R52(R53)
	807	[6788]	RETURN   	R0 1 ; return 

function #114 <?:6790,6798> (24 instructions, 96 bytes at 0000021130CD72D0)
2 params, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6791]	GETTABLE 	R2 R0 K0 ; R2 := R0["mSlotCompatibilityOverrides"]
	2	[6791]	TEST     	R2 0 ; if not R2 then PC := 8
	3	[6791]	JMP      	8 ; PC := 8
	4	[6792]	GETTABLE 	R2 R0 K0 ; R2 := R0["mSlotCompatibilityOverrides"]
	5	[6792]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	6	[6792]	RETURN   	R2 2 ; return R2 
	7	[6792]	JMP      	24 ; PC := 24
	8	[6793]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	9	[6793]	GETTABLE 	R3 R0 K2 ; R3 := R0["CustomizationType"]
	10	[6793]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[6793]	TEST     	R2 1 ; if R2 then PC := 19
	12	[6793]	JMP      	19 ; PC := 19
	13	[6794]	GETTABLE 	R2 R0 K2 ; R2 := R0["CustomizationType"]
	14	[6794]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x06e65678]
	15	[6794]	MOVE     	R4 R1 ; R4 := R1
	16	[6794]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	17	[6794]	RETURN   	R2 2 ; return R2 
	18	[6794]	JMP      	24 ; PC := 24
	19	[6796]	GETTABLE 	R2 R0 K4 ; R2 := R0["mStoreItem"]
	20	[6796]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x06e65678]
	21	[6796]	MOVE     	R4 R1 ; R4 := R1
	22	[6796]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[6796]	RETURN   	R2 2 ; return R2 
	24	[6798]	RETURN   	R0 1 ; return 

function #115 <?:6800,6813> (30 instructions, 120 bytes at 0000021130CD74F0)
1 param, 9 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6801]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6801]	MOVE     	R2 R0 ; R2 := R0
	3	[6801]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6801]	TEST     	R1 1 ; if R1 then PC := 28
	5	[6801]	JMP      	28 ; PC := 28
	6	[6802]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x2540510f]
	7	[6802]	LOADK    	R3 := 7.000000
	8	[6802]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[6803]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	10	[6803]	MOVE     	R3 R1 ; R3 := R1
	11	[6803]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[6803]	TEST     	R2 1 ; if R2 then PC := 28
	13	[6803]	JMP      	28 ; PC := 28
	14	[6804]	LOADK    	R2 := 1.000000
	15	[6804]	GETGLOBAL	R3 K3 ; R3 := 0x52a3d23b
	16	[6804]	LEN      	R3 R3 ; R3 := # R3
	17	[6804]	LOADK    	R4 := 1.000000
	18	[6804]	FORPREP  	R2 27 ; R2 -= R4; PC := 27
	19	[6805]	SELF     	R6 R1 K4 ; R7 := R1; R6 := R1[0xf2deaf69]
	20	[6805]	GETGLOBAL	R8 K3 ; R8 := 0x52a3d23b
	21	[6805]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	22	[6805]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	23	[6805]	TEST     	R6 0 ; if not R6 then PC := 27
	24	[6805]	JMP      	27 ; PC := 27
	25	[6806]	OP_LOADBOOL	R6 1 0 ; R6 := true
	26	[6806]	RETURN   	R6 2 ; return R6 
	27	[6804]	FORLOOP  	R2 19 ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
	28	[6812]	OP_LOADBOOL	R6 0 0 ; R6 := false
	29	[6812]	RETURN   	R6 2 ; return R6 
	30	[6813]	RETURN   	R0 1 ; return 

function #116 <?:6815,6843> (80 instructions, 320 bytes at 0000021130CD7700)
4 params, 8 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[6816]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[6816]	MOVE     	R5 R0 ; R5 := R0
	3	[6816]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[6816]	TEST     	R4 1 ; if R4 then PC := 8
	5	[6816]	JMP      	8 ; PC := 8
	6	[6816]	TEST     	R3 1 ; if R3 then PC := 10
	7	[6816]	JMP      	10 ; PC := 10
	8	[6817]	OP_LOADBOOL	R4 1 0 ; R4 := true
	9	[6817]	RETURN   	R4 2 ; return R4 
	10	[6820]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x06e65678]
	11	[6820]	LOADK    	R6 := 16.000000
	12	[6820]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	13	[6820]	TEST     	R4 0 ; if not R4 then PC := 22
	14	[6820]	JMP      	22 ; PC := 22
	15	[6820]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xf2deaf69]
	16	[6820]	GETGLOBAL	R6 K4 ; R6 := 0x26072944
	17	[6820]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	18	[6820]	TEST     	R4 0 ; if not R4 then PC := 22
	19	[6820]	JMP      	22 ; PC := 22
	20	[6821]	OP_LOADBOOL	R4 0 0 ; R4 := false
	21	[6821]	RETURN   	R4 2 ; return R4 
	22	[6824]	TEST     	R2 1 ; if R2 then PC := 26
	23	[6824]	JMP      	26 ; PC := 26
	24	[6825]	OP_LOADBOOL	R4 1 0 ; R4 := true
	25	[6825]	RETURN   	R4 2 ; return R4 
	26	[6828]	GETGLOBAL	R4 K5 ; R4 := _T
	27	[6828]	GETTABLE 	R4 R4 K6 ; R4 := R4["mSpecialSuitMode"]
	28	[6828]	TEST     	R4 1 ; if R4 then PC := 34
	29	[6828]	JMP      	34 ; PC := 34
	30	[6829]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x06e65678]
	31	[6829]	LOADK    	R6 := 0.000000
	32	[6829]	TAILCALL 	R4 3 0 ; R4,... := R4(R5,R6)
	33	[6829]	RETURN   	R4 0 ; return R4,... 
	34	[6832]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xf2deaf69]
	35	[6832]	GETGLOBAL	R6 K7 ; R6 := 0x7ed0a956
	36	[6832]	LOADK    	R7 K8 ; R7 := "/Lotus/Powersuits/Khora/Kavat/KhoraKavatPowerSuit"
	37	[6832]	CALL     	R6 2 0 ; R6,... := R6(R7)
	38	[6832]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	39	[6832]	TEST     	R4 0 ; if not R4 then PC := 47
	40	[6832]	JMP      	47 ; PC := 47
	41	[6833]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x06e65678]
	42	[6833]	LOADK    	R6 := 8.000000
	43	[6833]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	44	[6833]	NOT      	R4 R4 ; R4 := not R4
	45	[6833]	RETURN   	R4 2 ; return R4 
	46	[6833]	JMP      	78 ; PC := 78
	47	[6834]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xf2deaf69]
	48	[6834]	GETGLOBAL	R6 K7 ; R6 := 0x7ed0a956
	49	[6834]	LOADK    	R7 K9 ; R7 := "/Lotus/Powersuits/Wraith/ReaperBaseSuit"
	50	[6834]	CALL     	R6 2 0 ; R6,... := R6(R7)
	51	[6834]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	52	[6834]	TEST     	R4 0 ; if not R4 then PC := 69
	53	[6834]	JMP      	69 ; PC := 69
	54	[6835]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x06e65678]
	55	[6835]	LOADK    	R6 := 0.000000
	56	[6835]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	57	[6835]	TEST     	R4 1 ; if R4 then PC := 67
	58	[6835]	JMP      	67 ; PC := 67
	59	[6836]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x06e65678]
	60	[6836]	LOADK    	R6 := 7.000000
	61	[6836]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	62	[6836]	TEST     	R4 1 ; if R4 then PC := 67
	63	[6836]	JMP      	67 ; PC := 67
	64	[6837]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x06e65678]
	65	[6837]	LOADK    	R6 := 16.000000
	66	[6837]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	67	[6837]	RETURN   	R4 2 ; return R4 
	68	[6837]	JMP      	78 ; PC := 78
	69	[6838]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xf2deaf69]
	70	[6838]	GETGLOBAL	R6 K7 ; R6 := 0x7ed0a956
	71	[6838]	LOADK    	R7 K10 ; R7 := "/Lotus/Powersuits/Yareli/BoardBaseSuit"
	72	[6838]	CALL     	R6 2 0 ; R6,... := R6(R7)
	73	[6838]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	74	[6838]	TEST     	R4 0 ; if not R4 then PC := 78
	75	[6838]	JMP      	78 ; PC := 78
	76	[6839]	OP_LOADBOOL	R4 0 0 ; R4 := false
	77	[6839]	RETURN   	R4 2 ; return R4 
	78	[6842]	OP_LOADBOOL	R4 1 0 ; R4 := true
	79	[6842]	RETURN   	R4 2 ; return R4 
	80	[6843]	RETURN   	R0 1 ; return 

function #117 <?:6845,7109> (728 instructions, 2912 bytes at 0000021130CD7B40)
0 params, 99 slots, 8 upvalues, 0 locals, 115 constants, 0 functions
	1	[6846]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[6846]	GETGLOBAL	R1 K1 ; R1 := mSelected
	3	[6846]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	4	[6846]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[6846]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[6846]	JMP      	8 ; PC := 8
	7	[6847]	RETURN   	R0 1 ; return 
	8	[6850]	NEWTABLE 	R0 0 0 ; R0 := {}
	9	[6851]	GETGLOBAL	R1 K1 ; R1 := mSelected
	10	[6851]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	11	[6853]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	12	[6853]	GETTABLE 	R3 R1 K3 ; R3 := R1["EquippedItem"]
	13	[6853]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[6853]	TEST     	R2 1 ; if R2 then PC := 36
	15	[6853]	JMP      	36 ; PC := 36
	16	[6853]	GETTABLE 	R2 R1 K3 ; R2 := R1["EquippedItem"]
	17	[6853]	GETTABLE 	R2 R2 K4 ; R2 := R2["mModularParts"]
	18	[6853]	LEN      	R2 R2 ; R2 := # R2
	19	[6853]	LT       	0 K5 R2 ; if 0.000000 >= R2 then PC := 36
	20	[6853]	JMP      	36 ; PC := 36
	21	[6854]	NEWTABLE 	R2 0 0 ; R2 := {}
	22	[6855]	GETGLOBAL	R3 K6 ; R3 := 0xc8802016
	23	[6855]	GETTABLE 	R4 R1 K3 ; R4 := R1["EquippedItem"]
	24	[6855]	GETTABLE 	R4 R4 K4 ; R4 := R4["mModularParts"]
	25	[6855]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	26	[6855]	JMP      	34 ; PC := 34
	27	[6856]	GETGLOBAL	R8 K7 ; R8 := 0x33bdd652
	28	[6856]	GETTABLE 	R8 R8 K8 ; R8 := R8[0x23d5322f]
	29	[6856]	MOVE     	R9 R2 ; R9 := R2
	30	[6856]	GETGLOBAL	R10 K9 ; R10 := 0x88efc25e
	31	[6856]	MOVE     	R11 R7 ; R11 := R7
	32	[6856]	CALL     	R10 2 0 ; R10,... := R10(R11)
	33	[6856]	CALL     	R8 0 1 ; R8(R9,...)
	34	[6855]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 27; R5 := R6 end
	35	[6856]	JMP      	27 ; PC := 27
	36	[6859]	GETUPVAL 	R8 U0 ; R8 := U0
	37	[6859]	GETTABLE 	R9 R1 K10 ; R9 := R1["Type"]
	38	[6859]	GETTABLE 	R10 R1 K11 ; R10 := R1["LoadOutId"]
	39	[6859]	GETTABLE 	R11 R1 K12 ; R11 := R1["LoadOutType"]
	40	[6859]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	41	[6860]	GETTABLE 	R9 R1 K11 ; R9 := R1["LoadOutId"]
	42	[6860]	EQ       	1 R9 K14 ; if R9 == 5.000000 then PC := 48
	43	[6860]	JMP      	48 ; PC := 48
	44	[6860]	GETTABLE 	R9 R1 K11 ; R9 := R1["LoadOutId"]
	45	[6860]	EQ       	1 R9 K15 ; if R9 == 6.000000 then PC := 48
	46	[6860]	JMP      	48 ; PC := 48
	47	[6860]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 48
	48	[6860]	OP_LOADBOOL	R9 1 0 ; R9 := true
	49	[6861]	GETGLOBAL	R10 K16 ; R10 := mInventory
	50	[6861]	SELF     	R10 R10 K17 ; R11 := R10; R10 := R10[0xe9131614]
	51	[6861]	CALL     	R10 2 2 ; R10 := R10(R11)
	52	[6863]	TESTSET  	R11 R9 0 ; if not R9 then PC := 65 else R11 := R9 
	53	[6863]	JMP      	65 ; PC := 65
	54	[6863]	GETGLOBAL	R11 K18 ; R11 := _T
	55	[6863]	GETTABLE 	R11 R11 K19 ; R11 := R11["mSpecialSuitMode"]
	56	[6863]	TEST     	R11 0 ; if not R11 then PC := 65
	57	[6863]	JMP      	65 ; PC := 65
	58	[6863]	GETGLOBAL	R11 K1 ; R11 := mSelected
	59	[6863]	GETTABLE 	R11 R11 K2 ; R11 := R11["Element"]
	60	[6863]	GETTABLE 	R11 R11 K3 ; R11 := R11["EquippedItem"]
	61	[6863]	GETTABLE 	R11 R11 K20 ; R11 := R11["mItemType"]
	62	[6863]	SELF     	R11 R11 K21 ; R12 := R11; R11 := R11[0xf2deaf69]
	63	[6863]	GETGLOBAL	R13 K22 ; R13 := gPetPowerSuitType
	64	[6863]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	65	[6865]	NEWTABLE 	R12 0 0 ; R12 := {}
	66	[6866]	NEWTABLE 	R13 0 1 ; R13 := {}
	67	[6866]	GETGLOBAL	R14 K24 ; R14 := 0x25d99d89
	68	[6866]	SETTABLE 	R13 K23 R14 ; R13["GameData"] := R14
	69	[6867]	LOADNIL  	R14 R14 ; R14 := nil
	70	[6868]	NEWTABLE 	R15 0 0 ; R15 := {}
	71	[6870]	GETGLOBAL	R16 K6 ; R16 := 0xc8802016
	72	[6870]	MOVE     	R17 R8 ; R17 := R8
	73	[6870]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	74	[6870]	JMP      	511 ; PC := 511
	75	[6871]	SELF     	R21 R20 K25 ; R22 := R20; R21 := R20[0xcde10c4a]
	76	[6871]	CALL     	R21 2 2 ; R21 := R21(R22)
	77	[6873]	SELF     	R22 R20 K21 ; R23 := R20; R22 := R20[0xf2deaf69]
	78	[6873]	GETGLOBAL	R24 K26 ; R24 := gLotusWeaponType
	79	[6873]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	80	[6873]	TEST     	R22 0 ; if not R22 then PC := 108
	81	[6873]	JMP      	108 ; PC := 108
	82	[6873]	SELF     	R22 R20 K27 ; R23 := R20; R22 := R20[0x81f3a598]
	83	[6873]	CALL     	R22 2 2 ; R22 := R22(R23)
	84	[6873]	TEST     	R22 0 ; if not R22 then PC := 108
	85	[6873]	JMP      	108 ; PC := 108
	86	[6873]	SELF     	R22 R20 K28 ; R23 := R20; R22 := R20[0x9208afa1]
	87	[6873]	CALL     	R22 2 2 ; R22 := R22(R23)
	88	[6873]	EQ       	1 R22 R21 ; if R22 == R21 then PC := 108
	89	[6873]	JMP      	108 ; PC := 108
	90	[6874]	GETGLOBAL	R22 K7 ; R22 := 0x33bdd652
	91	[6874]	GETTABLE 	R22 R22 K8 ; R22 := R22[0x23d5322f]
	92	[6874]	MOVE     	R23 R15 ; R23 := R15
	93	[6874]	MOVE     	R24 R21 ; R24 := R21
	94	[6874]	CALL     	R22 3 1 ; R22(R23,R24)
	95	[6875]	GETGLOBAL	R22 K7 ; R22 := 0x33bdd652
	96	[6875]	GETTABLE 	R22 R22 K8 ; R22 := R22[0x23d5322f]
	97	[6875]	MOVE     	R23 R15 ; R23 := R15
	98	[6875]	SELF     	R24 R20 K28 ; R25 := R20; R24 := R20[0x9208afa1]
	99	[6875]	CALL     	R24 2 0 ; R24,... := R24(R25)
	100	[6875]	CALL     	R22 0 1 ; R22(R23,...)
	101	[6876]	GETUPVAL 	R22 U1 ; R22 := U1
	102	[6876]	SELF     	R22 R22 K29 ; R23 := R22; R22 := R22[0xd6f0c641]
	103	[6876]	GETGLOBAL	R24 K30 ; R24 := 0x9166d883
	104	[6876]	MOVE     	R25 R20 ; R25 := R20
	105	[6876]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	106	[6876]	MOVE     	R14 R22 ; R14 := R22
	107	[6876]	JMP      	132 ; PC := 132
	108	[6878]	GETGLOBAL	R22 K7 ; R22 := 0x33bdd652
	109	[6878]	GETTABLE 	R22 R22 K8 ; R22 := R22[0x23d5322f]
	110	[6878]	MOVE     	R23 R15 ; R23 := R15
	111	[6878]	MOVE     	R24 R21 ; R24 := R21
	112	[6878]	CALL     	R22 3 1 ; R22(R23,R24)
	113	[6879]	TEST     	R11 0 ; if not R11 then PC := 125
	114	[6879]	JMP      	125 ; PC := 125
	115	[6879]	SELF     	R22 R20 K31 ; R23 := R20; R22 := R20[0x6df09e59]
	116	[6879]	CALL     	R22 2 2 ; R22 := R22(R23)
	117	[6879]	TEST     	R22 0 ; if not R22 then PC := 125
	118	[6879]	JMP      	125 ; PC := 125
	119	[6881]	GETGLOBAL	R22 K7 ; R22 := 0x33bdd652
	120	[6881]	GETTABLE 	R22 R22 K8 ; R22 := R22[0x23d5322f]
	121	[6881]	MOVE     	R23 R15 ; R23 := R15
	122	[6881]	SELF     	R24 R21 K32 ; R25 := R21; R24 := R21[0x33abee92]
	123	[6881]	CALL     	R24 2 0 ; R24,... := R24(R25)
	124	[6881]	CALL     	R22 0 1 ; R22(R23,...)
	125	[6884]	GETUPVAL 	R22 U1 ; R22 := U1
	126	[6884]	SELF     	R22 R22 K33 ; R23 := R22; R22 := R22[0xe39b2ba1]
	127	[6884]	GETGLOBAL	R24 K30 ; R24 := 0x9166d883
	128	[6884]	SELF     	R25 R20 K25 ; R26 := R20; R25 := R20[0xcde10c4a]
	129	[6884]	CALL     	R25 2 0 ; R25,... := R25(R26)
	130	[6884]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	131	[6884]	MOVE     	R14 R22 ; R14 := R22
	132	[6887]	LOADNIL  	R22 R22 ; R22 := nil
	133	[6888]	SELF     	R23 R20 K21 ; R24 := R20; R23 := R20[0xf2deaf69]
	134	[6888]	GETGLOBAL	R25 K34 ; R25 := gLotusMeleeWeaponType
	135	[6888]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	136	[6888]	TEST     	R23 0 ; if not R23 then PC := 141
	137	[6888]	JMP      	141 ; PC := 141
	138	[6889]	SELF     	R23 R20 K35 ; R24 := R20; R23 := R20[0xa779cba7]
	139	[6889]	CALL     	R23 2 2 ; R23 := R23(R24)
	140	[6889]	MOVE     	R22 R23 ; R22 := R23
	141	[6892]	GETGLOBAL	R23 K6 ; R23 := 0xc8802016
	142	[6892]	MOVE     	R24 R10 ; R24 := R10
	143	[6892]	CALL     	R23 2 4 ; R23,R24,R25 := R23(R24)
	144	[6892]	JMP      	262 ; PC := 262
	145	[6893]	GETGLOBAL	R28 K36 ; R28 := 0xce225efa
	146	[6893]	LOADK    	R29 := 0.000000
	147	[6893]	CALL     	R28 2 1 ; R28(R29)
	148	[6894]	GETUPVAL 	R28 U1 ; R28 := U1
	149	[6894]	SELF     	R28 R28 K37 ; R29 := R28; R28 := R28[0x5458ba4c]
	150	[6894]	GETTABLE 	R30 R27 K20 ; R30 := R27["mItemType"]
	151	[6894]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	152	[6895]	GETGLOBAL	R29 K0 ; R29 := 0x7b998233
	153	[6895]	MOVE     	R30 R28 ; R30 := R28
	154	[6895]	CALL     	R29 2 2 ; R29 := R29(R30)
	155	[6895]	TEST     	R29 1 ; if R29 then PC := 262
	156	[6895]	JMP      	262 ; PC := 262
	157	[6898]	GETTABLE 	R29 R27 K20 ; R29 := R27["mItemType"]
	158	[6898]	SELF     	R29 R29 K21 ; R30 := R29; R29 := R29[0xf2deaf69]
	159	[6898]	GETGLOBAL	R31 K38 ; R31 := gLotusSuitCustomizationType
	160	[6898]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	161	[6899]	OP_LOADBOOL	R30 1 0 ; R30 := true
	162	[6900]	EQ       	1 R22 K39 ; if R22 == nil then PC := 170
	163	[6900]	JMP      	170 ; PC := 170
	164	[6900]	TEST     	R29 0 ; if not R29 then PC := 170
	165	[6900]	JMP      	170 ; PC := 170
	166	[6901]	SELF     	R31 R28 K40 ; R32 := R28; R31 := R28[0x6ca47e92]
	167	[6901]	MOVE     	R33 R22 ; R33 := R22
	168	[6901]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	169	[6901]	MOVE     	R30 R31 ; R30 := R31
	170	[6904]	GETUPVAL 	R31 U2 ; R31 := U2
	171	[6904]	MOVE     	R32 R20 ; R32 := R20
	172	[6904]	MOVE     	R33 R28 ; R33 := R28
	173	[6904]	MOVE     	R34 R9 ; R34 := R9
	174	[6904]	MOVE     	R35 R29 ; R35 := R29
	175	[6904]	CALL     	R31 5 2 ; R31 := R31(R32,R33,R34,R35)
	176	[6906]	TEST     	R30 0 ; if not R30 then PC := 262
	177	[6906]	JMP      	262 ; PC := 262
	178	[6906]	TEST     	R31 0 ; if not R31 then PC := 262
	179	[6906]	JMP      	262 ; PC := 262
	180	[6907]	OP_LOADBOOL	R32 0 0 ; R32 := false
	181	[6908]	GETGLOBAL	R33 K6 ; R33 := 0xc8802016
	182	[6908]	MOVE     	R34 R15 ; R34 := R15
	183	[6908]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	184	[6908]	JMP      	200 ; PC := 200
	185	[6909]	SELF     	R38 R28 K41 ; R39 := R28; R38 := R28[0x29ba1d84]
	186	[6909]	CALL     	R38 2 2 ; R38 := R38(R39)
	187	[6910]	TEST     	R11 0 ; if not R11 then PC := 191
	188	[6910]	JMP      	191 ; PC := 191
	189	[6910]	EQ       	1 R37 R38 ; if R37 == R38 then PC := 198
	190	[6910]	JMP      	198 ; PC := 198
	191	[6910]	TEST     	R11 1 ; if R11 then PC := 200
	192	[6910]	JMP      	200 ; PC := 200
	193	[6910]	SELF     	R39 R37 K21 ; R40 := R37; R39 := R37[0xf2deaf69]
	194	[6910]	MOVE     	R41 R38 ; R41 := R38
	195	[6910]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	196	[6910]	TEST     	R39 0 ; if not R39 then PC := 200
	197	[6910]	JMP      	200 ; PC := 200
	198	[6911]	OP_LOADBOOL	R32 1 0 ; R32 := true
	199	[6912]	JMP      	202 ; PC := 202
	200	[6908]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 185; R35 := R36 end
	201	[6913]	JMP      	185 ; PC := 185
	202	[6915]	TEST     	R32 0 ; if not R32 then PC := 262
	203	[6915]	JMP      	262 ; PC := 262
	204	[6916]	GETUPVAL 	R39 U3 ; R39 := U3
	205	[6916]	GETTABLE 	R39 R39 K42 ; R39 := R39[0x08681f50]
	206	[6916]	GETGLOBAL	R40 K43 ; R40 := 0xae91e43b
	207	[6916]	MOVE     	R41 R28 ; R41 := R28
	208	[6916]	MOVE     	R42 R13 ; R42 := R13
	209	[6916]	LOADNIL  	R43 R44 ; R43 := R44 := nil
	210	[6916]	OP_LOADBOOL	R45 1 0 ; R45 := true
	211	[6916]	CALL     	R39 7 2 ; R39 := R39(R40,R41,R42,R43,R44,R45)
	212	[6917]	LOADK    	R40 K44 ; R40 := ""
	213	[6919]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	214	[6919]	GETTABLE 	R42 R39 K45 ; R42 := R39["LocalizedDesc"]
	215	[6919]	CALL     	R41 2 2 ; R41 := R41(R42)
	216	[6919]	TEST     	R41 0 ; if not R41 then PC := 219
	217	[6919]	JMP      	219 ; PC := 219
	218	[6920]	SETTABLE 	R39 K45 K44 ; R39["LocalizedDesc"] := ""
	219	[6923]	GETTABLE 	R41 R27 K46 ; R41 := R27["mUpgradeInstance"]
	220	[6923]	EQ       	1 R41 K39 ; if R41 == nil then PC := 228
	221	[6923]	JMP      	228 ; PC := 228
	222	[6924]	GETTABLE 	R41 R27 K46 ; R41 := R27["mUpgradeInstance"]
	223	[6924]	SELF     	R41 R41 K47 ; R42 := R41; R41 := R41[0x2d74952a]
	224	[6924]	SELF     	R43 R27 K48 ; R44 := R27; R43 := R27[0x20c79262]
	225	[6924]	CALL     	R43 2 0 ; R43,... := R43(R44)
	226	[6924]	CALL     	R41 0 2 ; R41 := R41(R42,...)
	227	[6924]	MOVE     	R40 R41 ; R40 := R41
	228	[6927]	EQ       	1 R40 K44 ; if R40 == "" then PC := 241
	229	[6927]	JMP      	241 ; PC := 241
	230	[6929]	GETTABLE 	R41 R39 K45 ; R41 := R39["LocalizedDesc"]
	231	[6929]	LOADK    	R42 K49 ; R42 := "\r\n\r\n\r\n"
	232	[6929]	GETGLOBAL	R43 K43 ; R43 := 0xae91e43b
	233	[6929]	SELF     	R43 R43 K50 ; R44 := R43; R43 := R43[0x42b04007]
	234	[6929]	LOADK    	R45 K51 ; R45 := "<ENHANCER>"
	235	[6929]	OP_LOADBOOL	R46 1 0 ; R46 := true
	236	[6929]	CALL     	R43 4 2 ; R43 := R43(R44,R45,R46)
	237	[6929]	LOADK    	R44 K52 ; R44 := "\r\n"
	238	[6929]	MOVE     	R45 R40 ; R45 := R40
	239	[6929]	CONCAT   	R41 R41 R45 ; R41 := R41 .. R42 .. R43 .. R44 .. R45
	240	[6929]	SETTABLE 	R39 K45 R41 ; R39["LocalizedDesc"] := R41
	241	[6932]	SETTABLE 	R39 K53 R28 ; R39["mStoreItem"] := R28
	242	[6933]	SELF     	R41 R27 K55 ; R42 := R27; R41 := R27[0xd186922b]
	243	[6933]	CALL     	R41 2 2 ; R41 := R41(R42)
	244	[6933]	SETTABLE 	R39 K54 R41 ; R39["Name"] := R41
	245	[6934]	SETTABLE 	R39 K56 R27 ; R39["Skin"] := R27
	246	[6935]	SETTABLE 	R39 K57 K58 ; R39["mPurchased"] := true
	247	[6936]	NEWTABLE 	R41 0 1 ; R41 := {}
	248	[6936]	GETTABLE 	R42 R27 K61 ; R42 := R27["mItemId"]
	249	[6936]	GETTABLE 	R42 R42 K62 ; R42 := R42["mId"]
	250	[6936]	SETTABLE 	R41 K60 R42 ; R41["UID"] := R42
	251	[6936]	SETTABLE 	R39 K59 R41 ; R39["mPurchasedInfo"] := R41
	252	[6937]	LEN      	R41 R0 ; R41 := # R0
	253	[6937]	SETTABLE 	R39 K63 R41 ; R39["mSortId"] := R41
	254	[6938]	GETGLOBAL	R41 K7 ; R41 := 0x33bdd652
	255	[6938]	GETTABLE 	R41 R41 K8 ; R41 := R41[0x23d5322f]
	256	[6938]	MOVE     	R42 R0 ; R42 := R0
	257	[6938]	MOVE     	R43 R39 ; R43 := R39
	258	[6938]	CALL     	R41 3 1 ; R41(R42,R43)
	259	[6939]	SELF     	R41 R28 K64 ; R42 := R28; R41 := R28[0xed4e0128]
	260	[6939]	CALL     	R41 2 2 ; R41 := R41(R42)
	261	[6939]	SETTABLE 	R12 R41 K58 ; R12[R41] := true
	262	[6892]	TFORLOOP 	R23 2 ; R26,R27 := R23(R24,R25); if R26 ~= nil then begin PC = 145; R25 := R26 end
	263	[6942]	JMP      	145 ; PC := 145
	264	[6946]	GETGLOBAL	R41 K6 ; R41 := 0xc8802016
	265	[6946]	MOVE     	R42 R14 ; R42 := R14
	266	[6946]	CALL     	R41 2 4 ; R41,R42,R43 := R41(R42)
	267	[6946]	JMP      	509 ; PC := 509
	268	[6947]	GETGLOBAL	R46 K36 ; R46 := 0xce225efa
	269	[6947]	LOADK    	R47 := 0.000000
	270	[6947]	CALL     	R46 2 1 ; R46(R47)
	271	[6949]	SELF     	R46 R45 K65 ; R47 := R45; R46 := R45[0xf278f8a1]
	272	[6949]	CALL     	R46 2 2 ; R46 := R46(R47)
	273	[6950]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	274	[6950]	MOVE     	R48 R46 ; R48 := R46
	275	[6950]	CALL     	R47 2 2 ; R47 := R47(R48)
	276	[6950]	TEST     	R47 1 ; if R47 then PC := 509
	277	[6950]	JMP      	509 ; PC := 509
	278	[6952]	SELF     	R47 R45 K64 ; R48 := R45; R47 := R45[0xed4e0128]
	279	[6952]	CALL     	R47 2 2 ; R47 := R47(R48)
	280	[6953]	GETTABLE 	R48 R12 R47 ; R48 := R12[R47]
	281	[6953]	EQ       	0 R48 K39 ; if R48 ~= nil then PC := 284
	282	[6953]	JMP      	284 ; PC := 284
	283	[6953]	OP_LOADBOOL	R48 0 1 ; R48 := false; PC := 284
	284	[6953]	OP_LOADBOOL	R48 1 0 ; R48 := true
	285	[6954]	TEST     	R48 1 ; if R48 then PC := 509
	286	[6954]	JMP      	509 ; PC := 509
	287	[6955]	OP_LOADBOOL	R49 1 0 ; R49 := true
	288	[6956]	EQ       	1 R22 K39 ; if R22 == nil then PC := 294
	289	[6956]	JMP      	294 ; PC := 294
	290	[6957]	SELF     	R50 R45 K40 ; R51 := R45; R50 := R45[0x6ca47e92]
	291	[6957]	MOVE     	R52 R22 ; R52 := R22
	292	[6957]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	293	[6957]	MOVE     	R49 R50 ; R49 := R50
	294	[6960]	GETUPVAL 	R50 U2 ; R50 := U2
	295	[6960]	MOVE     	R51 R20 ; R51 := R20
	296	[6960]	MOVE     	R52 R45 ; R52 := R45
	297	[6960]	MOVE     	R53 R9 ; R53 := R9
	298	[6960]	OP_LOADBOOL	R54 1 0 ; R54 := true
	299	[6960]	CALL     	R50 5 2 ; R50 := R50(R51,R52,R53,R54)
	300	[6961]	NOT      	R51 R11 ; R51 := not R11
	301	[6962]	TEST     	R11 0 ; if not R11 then PC := 315
	302	[6962]	JMP      	315 ; PC := 315
	303	[6963]	GETGLOBAL	R52 K6 ; R52 := 0xc8802016
	304	[6963]	MOVE     	R53 R15 ; R53 := R15
	305	[6963]	CALL     	R52 2 4 ; R52,R53,R54 := R52(R53)
	306	[6963]	JMP      	313 ; PC := 313
	307	[6964]	SELF     	R57 R45 K41 ; R58 := R45; R57 := R45[0x29ba1d84]
	308	[6964]	CALL     	R57 2 2 ; R57 := R57(R58)
	309	[6965]	EQ       	0 R56 R57 ; if R56 ~= R57 then PC := 313
	310	[6965]	JMP      	313 ; PC := 313
	311	[6966]	OP_LOADBOOL	R51 1 0 ; R51 := true
	312	[6967]	JMP      	315 ; PC := 315
	313	[6963]	TFORLOOP 	R52 2 ; R55,R56 := R52(R53,R54); if R55 ~= nil then begin PC = 307; R54 := R55 end
	314	[6968]	JMP      	307 ; PC := 307
	315	[6972]	TEST     	R49 0 ; if not R49 then PC := 509
	316	[6972]	JMP      	509 ; PC := 509
	317	[6972]	TEST     	R50 0 ; if not R50 then PC := 509
	318	[6972]	JMP      	509 ; PC := 509
	319	[6972]	TEST     	R51 0 ; if not R51 then PC := 509
	320	[6972]	JMP      	509 ; PC := 509
	321	[6973]	SELF     	R58 R45 K66 ; R59 := R45; R58 := R45[0x31e559d2]
	322	[6973]	CALL     	R58 2 2 ; R58 := R58(R59)
	323	[6973]	TEST     	R58 0 ; if not R58 then PC := 446
	324	[6973]	JMP      	446 ; PC := 446
	325	[6974]	LOADK    	R58 := 1.000000
	326	[6975]	SELF     	R59 R20 K21 ; R60 := R20; R59 := R20[0xf2deaf69]
	327	[6975]	SELF     	R61 R45 K41 ; R62 := R45; R61 := R45[0x29ba1d84]
	328	[6975]	CALL     	R61 2 0 ; R61,... := R61(R62)
	329	[6975]	CALL     	R59 0 2 ; R59 := R59(R60,...)
	330	[6975]	TEST     	R59 1 ; if R59 then PC := 349
	331	[6975]	JMP      	349 ; PC := 349
	332	[6976]	LOADK    	R58 := 0.000000
	333	[6977]	SELF     	R59 R20 K21 ; R60 := R20; R59 := R20[0xf2deaf69]
	334	[6977]	SELF     	R61 R45 K67 ; R62 := R45; R61 := R45[0xb6525e9d]
	335	[6977]	CALL     	R61 2 0 ; R61,... := R61(R62)
	336	[6977]	CALL     	R59 0 2 ; R59 := R59(R60,...)
	337	[6977]	TEST     	R59 0 ; if not R59 then PC := 349
	338	[6977]	JMP      	349 ; PC := 349
	339	[6978]	GETGLOBAL	R59 K16 ; R59 := mInventory
	340	[6978]	SELF     	R59 R59 K68 ; R60 := R59; R59 := R59[0x4c265dc6]
	341	[6978]	MOVE     	R61 R45 ; R61 := R45
	342	[6978]	CALL     	R59 3 2 ; R59 := R59(R60,R61)
	343	[6978]	TEST     	R59 0 ; if not R59 then PC := 346
	344	[6978]	JMP      	346 ; PC := 346
	345	[6979]	LOADK    	R58 := 1.000000
	346	[6981]	EQ       	0 R58 K5 ; if R58 ~= 0.000000 then PC := 349
	347	[6981]	JMP      	349 ; PC := 349
	348	[6982]	LOADK    	R58 := 2.000000
	349	[6987]	EQ       	0 R58 K69 ; if R58 ~= 1.000000 then PC := 382
	350	[6987]	JMP      	382 ; PC := 382
	351	[6988]	GETUPVAL 	R59 U3 ; R59 := U3
	352	[6988]	GETTABLE 	R59 R59 K42 ; R59 := R59[0x08681f50]
	353	[6988]	GETGLOBAL	R60 K43 ; R60 := 0xae91e43b
	354	[6988]	MOVE     	R61 R45 ; R61 := R45
	355	[6988]	MOVE     	R62 R13 ; R62 := R13
	356	[6988]	LOADNIL  	R63 R64 ; R63 := R64 := nil
	357	[6988]	OP_LOADBOOL	R65 1 0 ; R65 := true
	358	[6988]	CALL     	R59 7 2 ; R59 := R59(R60,R61,R62,R63,R64,R65)
	359	[6989]	SETTABLE 	R59 K57 K58 ; R59["mPurchased"] := true
	360	[6990]	SETTABLE 	R59 K53 R45 ; R59["mStoreItem"] := R45
	361	[6991]	SELF     	R60 R45 K70 ; R61 := R45; R60 := R45[0xd3a9d01f]
	362	[6991]	CALL     	R60 2 2 ; R60 := R60(R61)
	363	[6991]	GETGLOBAL	R61 K71 ; R61 := 0x0469f296
	364	[6991]	LOADK    	R62 K72 ; R62 := "/Lotus/Language/Menu/Cosmetics_None"
	365	[6991]	CALL     	R61 2 2 ; R61 := R61(R62)
	366	[6991]	EQ       	0 R60 R61 ; if R60 ~= R61 then PC := 369
	367	[6991]	JMP      	369 ; PC := 369
	368	[6992]	SETTABLE 	R59 K73 K58 ; R59["mEmpty"] := true
	369	[6994]	NEWTABLE 	R60 0 1 ; R60 := {}
	370	[6994]	GETTABLE 	R61 R59 K74 ; R61 := R59["FullName"]
	371	[6994]	SETTABLE 	R60 K60 R61 ; R60["UID"] := R61
	372	[6994]	SETTABLE 	R59 K59 R60 ; R59["mPurchasedInfo"] := R60
	373	[6995]	LEN      	R60 R0 ; R60 := # R0
	374	[6995]	SETTABLE 	R59 K63 R60 ; R59["mSortId"] := R60
	375	[6996]	GETGLOBAL	R60 K7 ; R60 := 0x33bdd652
	376	[6996]	GETTABLE 	R60 R60 K8 ; R60 := R60[0x23d5322f]
	377	[6996]	MOVE     	R61 R0 ; R61 := R0
	378	[6996]	MOVE     	R62 R59 ; R62 := R59
	379	[6996]	CALL     	R60 3 1 ; R60(R61,R62)
	380	[6998]	SETTABLE 	R12 R47 K58 ; R12[R47] := true
	381	[6998]	JMP      	509 ; PC := 509
	382	[6999]	EQ       	0 R58 K75 ; if R58 ~= 2.000000 then PC := 509
	383	[6999]	JMP      	509 ; PC := 509
	384	[7001]	SELF     	R60 R45 K76 ; R61 := R45; R60 := R45[0xbb90e4fe]
	385	[7001]	CALL     	R60 2 2 ; R60 := R60(R61)
	386	[7002]	GETUPVAL 	R61 U1 ; R61 := U1
	387	[7002]	SELF     	R61 R61 K37 ; R62 := R61; R61 := R61[0x5458ba4c]
	388	[7002]	MOVE     	R63 R60 ; R63 := R60
	389	[7002]	CALL     	R61 3 2 ; R61 := R61(R62,R63)
	390	[7004]	GETGLOBAL	R62 K0 ; R62 := 0x7b998233
	391	[7004]	MOVE     	R63 R61 ; R63 := R61
	392	[7004]	CALL     	R62 2 2 ; R62 := R62(R63)
	393	[7004]	TEST     	R62 0 ; if not R62 then PC := 415
	394	[7004]	JMP      	415 ; PC := 415
	395	[7005]	GETGLOBAL	R62 K0 ; R62 := 0x7b998233
	396	[7005]	MOVE     	R63 R60 ; R63 := R60
	397	[7005]	CALL     	R62 2 2 ; R62 := R62(R63)
	398	[7005]	TEST     	R62 0 ; if not R62 then PC := 408
	399	[7005]	JMP      	408 ; PC := 408
	400	[7006]	GETGLOBAL	R62 K77 ; R62 := 0x3d106989
	401	[7006]	LOADK    	R63 K78 ; R63 := "StoreItem: "
	402	[7006]	SELF     	R64 R45 K64 ; R65 := R45; R64 := R45[0xed4e0128]
	403	[7006]	CALL     	R64 2 2 ; R64 := R64(R65)
	404	[7006]	LOADK    	R65 K79 ; R65 := " has a GenericCompatible but no GenericRequirement."
	405	[7006]	CONCAT   	R63 R63 R65 ; R63 := R63 .. R64 .. R65
	406	[7006]	CALL     	R62 2 1 ; R62(R63)
	407	[7006]	JMP      	509 ; PC := 509
	408	[7008]	GETGLOBAL	R62 K77 ; R62 := 0x3d106989
	409	[7008]	LOADK    	R63 K80 ; R63 := "Could not find store item for "
	410	[7008]	SELF     	R64 R60 K64 ; R65 := R60; R64 := R60[0xed4e0128]
	411	[7008]	CALL     	R64 2 2 ; R64 := R64(R65)
	412	[7008]	CONCAT   	R63 R63 R64 ; R63 := R63 .. R64
	413	[7008]	CALL     	R62 2 1 ; R62(R63)
	414	[7009]	JMP      	509 ; PC := 509
	415	[7010]	GETUPVAL 	R62 U3 ; R62 := U3
	416	[7010]	GETTABLE 	R62 R62 K81 ; R62 := R62[0xcac502bd]
	417	[7010]	MOVE     	R63 R61 ; R63 := R61
	418	[7010]	CALL     	R62 2 2 ; R62 := R62(R63)
	419	[7010]	TEST     	R62 0 ; if not R62 then PC := 509
	420	[7010]	JMP      	509 ; PC := 509
	421	[7011]	GETUPVAL 	R62 U3 ; R62 := U3
	422	[7011]	GETTABLE 	R62 R62 K42 ; R62 := R62[0x08681f50]
	423	[7011]	GETGLOBAL	R63 K43 ; R63 := 0xae91e43b
	424	[7011]	MOVE     	R64 R61 ; R64 := R61
	425	[7011]	MOVE     	R65 R13 ; R65 := R13
	426	[7011]	LOADNIL  	R66 R67 ; R66 := R67 := nil
	427	[7011]	OP_LOADBOOL	R68 1 0 ; R68 := true
	428	[7011]	CALL     	R62 7 2 ; R62 := R62(R63,R64,R65,R66,R67,R68)
	429	[7012]	SETTABLE 	R62 K82 R45 ; R62["CustomizationType"] := R45
	430	[7013]	SETTABLE 	R62 K57 K83 ; R62["mPurchased"] := false
	431	[7014]	SETTABLE 	R62 K53 R61 ; R62["mStoreItem"] := R61
	432	[7015]	NEWTABLE 	R63 0 1 ; R63 := {}
	433	[7015]	SELF     	R64 R61 K64 ; R65 := R61; R64 := R61[0xed4e0128]
	434	[7015]	CALL     	R64 2 2 ; R64 := R64(R65)
	435	[7015]	SETTABLE 	R63 K60 R64 ; R63["UID"] := R64
	436	[7015]	SETTABLE 	R62 K59 R63 ; R62["mPurchasedInfo"] := R63
	437	[7016]	LEN      	R63 R0 ; R63 := # R0
	438	[7016]	SETTABLE 	R62 K63 R63 ; R62["mSortId"] := R63
	439	[7017]	GETGLOBAL	R63 K7 ; R63 := 0x33bdd652
	440	[7017]	GETTABLE 	R63 R63 K8 ; R63 := R63[0x23d5322f]
	441	[7017]	MOVE     	R64 R0 ; R64 := R0
	442	[7017]	MOVE     	R65 R62 ; R65 := R62
	443	[7017]	CALL     	R63 3 1 ; R63(R64,R65)
	444	[7018]	SETTABLE 	R12 R47 K58 ; R12[R47] := true
	445	[7020]	JMP      	509 ; PC := 509
	446	[7022]	GETUPVAL 	R63 U4 ; R63 := U4
	447	[7022]	GETTABLE 	R63 R63 K84 ; R63 := R63[0xcd71f5a1]
	448	[7022]	MOVE     	R64 R45 ; R64 := R45
	449	[7022]	CALL     	R63 2 2 ; R63 := R63(R64)
	450	[7023]	SELF     	R64 R45 K85 ; R65 := R45; R64 := R45[0xc055cef8]
	451	[7023]	CALL     	R64 2 2 ; R64 := R64(R65)
	452	[7023]	TEST     	R64 1 ; if R64 then PC := 459
	453	[7023]	JMP      	459 ; PC := 459
	454	[7023]	GETGLOBAL	R64 K0 ; R64 := 0x7b998233
	455	[7023]	MOVE     	R65 R63 ; R65 := R63
	456	[7023]	CALL     	R64 2 2 ; R64 := R64(R65)
	457	[7023]	TEST     	R64 1 ; if R64 then PC := 464
	458	[7023]	JMP      	464 ; PC := 464
	459	[7023]	GETUPVAL 	R64 U3 ; R64 := U3
	460	[7023]	GETTABLE 	R64 R64 K81 ; R64 := R64[0xcac502bd]
	461	[7023]	MOVE     	R65 R45 ; R65 := R45
	462	[7023]	CALL     	R64 2 2 ; R64 := R64(R65)
	463	[7023]	JMP      	466 ; PC := 466
	464	[7023]	OP_LOADBOOL	R64 0 1 ; R64 := false; PC := 465
	465	[7023]	OP_LOADBOOL	R64 1 0 ; R64 := true
	466	[7024]	OP_LOADBOOL	R65 0 0 ; R65 := false
	467	[7025]	TEST     	R64 1 ; if R64 then PC := 487
	468	[7025]	JMP      	487 ; PC := 487
	469	[7025]	SELF     	R66 R45 K85 ; R67 := R45; R66 := R45[0xc055cef8]
	470	[7025]	CALL     	R66 2 2 ; R66 := R66(R67)
	471	[7025]	TEST     	R66 1 ; if R66 then PC := 487
	472	[7025]	JMP      	487 ; PC := 487
	473	[7025]	GETGLOBAL	R66 K0 ; R66 := 0x7b998233
	474	[7025]	GETGLOBAL	R67 K86 ; R67 := mUpsellHelper
	475	[7025]	CALL     	R66 2 2 ; R66 := R66(R67)
	476	[7025]	TEST     	R66 1 ; if R66 then PC := 487
	477	[7025]	JMP      	487 ; PC := 487
	478	[7028]	GETUPVAL 	R66 U5 ; R66 := U5
	479	[7028]	GETTABLE 	R66 R66 K87 ; R66 := R66[0x433e45de]
	480	[7028]	MOVE     	R67 R45 ; R67 := R45
	481	[7028]	GETGLOBAL	R68 K86 ; R68 := mUpsellHelper
	482	[7028]	CALL     	R66 3 2 ; R66 := R66(R67,R68)
	483	[7028]	MOVE     	R64 R66 ; R64 := R66
	484	[7029]	TEST     	R64 0 ; if not R64 then PC := 487
	485	[7029]	JMP      	487 ; PC := 487
	486	[7030]	OP_LOADBOOL	R65 1 0 ; R65 := true
	487	[7033]	TEST     	R64 0 ; if not R64 then PC := 509
	488	[7033]	JMP      	509 ; PC := 509
	489	[7034]	GETUPVAL 	R66 U3 ; R66 := U3
	490	[7034]	GETTABLE 	R66 R66 K42 ; R66 := R66[0x08681f50]
	491	[7034]	GETGLOBAL	R67 K43 ; R67 := 0xae91e43b
	492	[7034]	MOVE     	R68 R45 ; R68 := R45
	493	[7034]	MOVE     	R69 R13 ; R69 := R13
	494	[7034]	LOADNIL  	R70 R71 ; R70 := R71 := nil
	495	[7034]	OP_LOADBOOL	R72 1 0 ; R72 := true
	496	[7034]	CALL     	R66 7 2 ; R66 := R66(R67,R68,R69,R70,R71,R72)
	497	[7035]	SETTABLE 	R66 K57 K83 ; R66["mPurchased"] := false
	498	[7036]	SETTABLE 	R66 K53 R45 ; R66["mStoreItem"] := R45
	499	[7037]	LEN      	R67 R0 ; R67 := # R0
	500	[7037]	SETTABLE 	R66 K63 R67 ; R66["mSortId"] := R67
	501	[7038]	SETTABLE 	R66 K88 R63 ; R66["Sale"] := R63
	502	[7039]	SETTABLE 	R66 K89 R65 ; R66["BundleOnly"] := R65
	503	[7040]	GETGLOBAL	R67 K7 ; R67 := 0x33bdd652
	504	[7040]	GETTABLE 	R67 R67 K8 ; R67 := R67[0x23d5322f]
	505	[7040]	MOVE     	R68 R0 ; R68 := R0
	506	[7040]	MOVE     	R69 R66 ; R69 := R66
	507	[7040]	CALL     	R67 3 1 ; R67(R68,R69)
	508	[7041]	SETTABLE 	R12 R47 K58 ; R12[R47] := true
	509	[6946]	TFORLOOP 	R41 2 ; R44,R45 := R41(R42,R43); if R44 ~= nil then begin PC = 268; R43 := R44 end
	510	[7046]	JMP      	268 ; PC := 268
	511	[6870]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 75; R18 := R19 end
	512	[7047]	JMP      	75 ; PC := 75
	513	[7051]	GETGLOBAL	R67 K1 ; R67 := mSelected
	514	[7051]	GETTABLE 	R67 R67 K2 ; R67 := R67["Element"]
	515	[7051]	GETTABLE 	R67 R67 K12 ; R67 := R67["LoadOutType"]
	516	[7051]	EQ       	0 R67 K69 ; if R67 ~= 1.000000 then PC := 533
	517	[7051]	JMP      	533 ; PC := 533
	518	[7051]	GETGLOBAL	R67 K1 ; R67 := mSelected
	519	[7051]	GETTABLE 	R67 R67 K2 ; R67 := R67["Element"]
	520	[7051]	GETTABLE 	R67 R67 K11 ; R67 := R67["LoadOutId"]
	521	[7051]	EQ       	0 R67 K5 ; if R67 ~= 0.000000 then PC := 533
	522	[7051]	JMP      	533 ; PC := 533
	523	[7051]	GETGLOBAL	R67 K0 ; R67 := 0x7b998233
	524	[7051]	GETGLOBAL	R68 K24 ; R68 := 0x25d99d89
	525	[7051]	CALL     	R67 2 2 ; R67 := R67(R68)
	526	[7051]	TEST     	R67 1 ; if R67 then PC := 533
	527	[7051]	JMP      	533 ; PC := 533
	528	[7051]	GETGLOBAL	R67 K24 ; R67 := 0x25d99d89
	529	[7051]	SELF     	R67 R67 K90 ; R68 := R67; R67 := R67[0x3c6b0324]
	530	[7051]	CALL     	R67 2 2 ; R67 := R67(R68)
	531	[7051]	TEST     	R67 1 ; if R67 then PC := 534
	532	[7051]	JMP      	534 ; PC := 534
	533	[7051]	MOVE     	R67 R11 ; R67 := R11
	534	[7052]	TEST     	R67 0 ; if not R67 then PC := 706
	535	[7052]	JMP      	706 ; PC := 706
	536	[7053]	NEWTABLE 	R68 0 0 ; R68 := {}
	537	[7055]	GETGLOBAL	R69 K0 ; R69 := 0x7b998233
	538	[7055]	GETGLOBAL	R70 K1 ; R70 := mSelected
	539	[7055]	GETTABLE 	R70 R70 K2 ; R70 := R70["Element"]
	540	[7055]	GETTABLE 	R70 R70 K10 ; R70 := R70["Type"]
	541	[7055]	CALL     	R69 2 2 ; R69 := R69(R70)
	542	[7055]	TEST     	R69 1 ; if R69 then PC := 551
	543	[7055]	JMP      	551 ; PC := 551
	544	[7055]	GETGLOBAL	R69 K1 ; R69 := mSelected
	545	[7055]	GETTABLE 	R69 R69 K2 ; R69 := R69["Element"]
	546	[7055]	GETTABLE 	R69 R69 K10 ; R69 := R69["Type"]
	547	[7055]	SELF     	R69 R69 K21 ; R70 := R69; R69 := R69[0xf2deaf69]
	548	[7055]	GETGLOBAL	R71 K91 ; R71 := 0x01302fb0
	549	[7055]	CALL     	R69 3 2 ; R69 := R69(R70,R71)
	550	[7055]	JMP      	553 ; PC := 553
	551	[7055]	OP_LOADBOOL	R69 0 1 ; R69 := false; PC := 552
	552	[7055]	OP_LOADBOOL	R69 1 0 ; R69 := true
	553	[7056]	GETGLOBAL	R70 K0 ; R70 := 0x7b998233
	554	[7056]	GETGLOBAL	R71 K1 ; R71 := mSelected
	555	[7056]	GETTABLE 	R71 R71 K2 ; R71 := R71["Element"]
	556	[7056]	GETTABLE 	R71 R71 K10 ; R71 := R71["Type"]
	557	[7056]	CALL     	R70 2 2 ; R70 := R70(R71)
	558	[7056]	TEST     	R70 1 ; if R70 then PC := 567
	559	[7056]	JMP      	567 ; PC := 567
	560	[7056]	GETGLOBAL	R70 K1 ; R70 := mSelected
	561	[7056]	GETTABLE 	R70 R70 K2 ; R70 := R70["Element"]
	562	[7056]	GETTABLE 	R70 R70 K10 ; R70 := R70["Type"]
	563	[7056]	SELF     	R70 R70 K21 ; R71 := R70; R70 := R70[0xf2deaf69]
	564	[7056]	GETGLOBAL	R72 K92 ; R72 := 0x5bc0a754
	565	[7056]	CALL     	R70 3 2 ; R70 := R70(R71,R72)
	566	[7056]	JMP      	569 ; PC := 569
	567	[7056]	OP_LOADBOOL	R70 0 1 ; R70 := false; PC := 568
	568	[7056]	OP_LOADBOOL	R70 1 0 ; R70 := true
	569	[7057]	GETGLOBAL	R71 K0 ; R71 := 0x7b998233
	570	[7057]	GETGLOBAL	R72 K1 ; R72 := mSelected
	571	[7057]	GETTABLE 	R72 R72 K2 ; R72 := R72["Element"]
	572	[7057]	GETTABLE 	R72 R72 K10 ; R72 := R72["Type"]
	573	[7057]	CALL     	R71 2 2 ; R71 := R71(R72)
	574	[7057]	TEST     	R71 1 ; if R71 then PC := 583
	575	[7057]	JMP      	583 ; PC := 583
	576	[7057]	GETGLOBAL	R71 K1 ; R71 := mSelected
	577	[7057]	GETTABLE 	R71 R71 K2 ; R71 := R71["Element"]
	578	[7057]	GETTABLE 	R71 R71 K10 ; R71 := R71["Type"]
	579	[7057]	SELF     	R71 R71 K21 ; R72 := R71; R71 := R71[0xf2deaf69]
	580	[7057]	GETGLOBAL	R73 K93 ; R73 := 0xf541be71
	581	[7057]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	582	[7057]	JMP      	585 ; PC := 585
	583	[7057]	OP_LOADBOOL	R71 0 1 ; R71 := false; PC := 584
	584	[7057]	OP_LOADBOOL	R71 1 0 ; R71 := true
	585	[7059]	GETUPVAL 	R72 U6 ; R72 := U6
	586	[7059]	GETTABLE 	R72 R72 K94 ; R72 := R72[0xb68bba03]
	587	[7059]	GETGLOBAL	R73 K1 ; R73 := mSelected
	588	[7059]	GETTABLE 	R73 R73 K2 ; R73 := R73["Element"]
	589	[7059]	GETTABLE 	R73 R73 K95 ; R73 := R73["Customization"]
	590	[7059]	CALL     	R72 2 2 ; R72 := R72(R73)
	591	[7060]	GETGLOBAL	R73 K0 ; R73 := 0x7b998233
	592	[7060]	GETGLOBAL	R74 K1 ; R74 := mSelected
	593	[7060]	GETTABLE 	R74 R74 K96 ; R74 := R74["Cosmetic"]
	594	[7060]	CALL     	R73 2 2 ; R73 := R73(R74)
	595	[7060]	TEST     	R73 1 ; if R73 then PC := 623
	596	[7060]	JMP      	623 ; PC := 623
	597	[7060]	GETGLOBAL	R73 K1 ; R73 := mSelected
	598	[7060]	GETTABLE 	R73 R73 K96 ; R73 := R73["Cosmetic"]
	599	[7060]	GETTABLE 	R73 R73 K97 ; R73 := R73["PetTrait"]
	600	[7060]	EQ       	0 R73 K98 ; if R73 ~= "mFurPattern" then PC := 623
	601	[7060]	JMP      	623 ; PC := 623
	602	[7060]	TEST     	R72 1 ; if R72 then PC := 623
	603	[7060]	JMP      	623 ; PC := 623
	604	[7060]	TEST     	R69 1 ; if R69 then PC := 623
	605	[7060]	JMP      	623 ; PC := 623
	606	[7060]	TEST     	R70 1 ; if R70 then PC := 623
	607	[7060]	JMP      	623 ; PC := 623
	608	[7063]	GETGLOBAL	R73 K24 ; R73 := 0x25d99d89
	609	[7063]	SELF     	R73 R73 K99 ; R74 := R73; R73 := R73[0x62c81b76]
	610	[7063]	CALL     	R73 2 2 ; R73 := R73(R74)
	611	[7063]	GETTABLE 	R73 R73 K100 ; R73 := R73["mKubrowPetDetails"]
	612	[7063]	GETTABLE 	R73 R73 K101 ; R73 := R73["mDominantTraits"]
	613	[7064]	GETGLOBAL	R74 K102 ; R74 := 0xb009bbc6
	614	[7064]	GETTABLE 	R75 R73 K103 ; R75 := R73["mEyeColor"]
	615	[7064]	CALL     	R74 2 2 ; R74 := R74(R75)
	616	[7065]	GETUPVAL 	R75 U7 ; R75 := U7
	617	[7065]	LOADK    	R76 := 3.000000
	618	[7065]	SELF     	R77 R74 K104 ; R78 := R74; R77 := R74[0x5d10207d]
	619	[7065]	CALL     	R77 2 2 ; R77 := R77(R78)
	620	[7065]	LOADK    	R78 := 0.000000
	621	[7065]	LOADNIL  	R79 R79 ; R79 := nil
	622	[7065]	CALL     	R75 5 1 ; R75(R76,R77,R78,R79)
	623	[7068]	GETGLOBAL	R75 K105 ; R75 := 0xcfc01047
	624	[7068]	GETGLOBAL	R76 K16 ; R76 := mInventory
	625	[7068]	SELF     	R76 R76 K106 ; R77 := R76; R76 := R76[0xd8dfa041]
	626	[7068]	CALL     	R76 2 0 ; R76,... := R76(R77)
	627	[7068]	CALL     	R75 0 4 ; R75,R76,R77 := R75(R76,...)
	628	[7068]	JMP      	640 ; PC := 640
	629	[7069]	GETTABLE 	R80 R79 K20 ; R80 := R79["mItemType"]
	630	[7069]	SELF     	R80 R80 K21 ; R81 := R80; R80 := R80[0xf2deaf69]
	631	[7069]	GETGLOBAL	R82 K107 ; R82 := 0xef60ddef
	632	[7069]	CALL     	R80 3 2 ; R80 := R80(R81,R82)
	633	[7069]	TEST     	R80 0 ; if not R80 then PC := 640
	634	[7069]	JMP      	640 ; PC := 640
	635	[7070]	GETGLOBAL	R80 K7 ; R80 := 0x33bdd652
	636	[7070]	GETTABLE 	R80 R80 K8 ; R80 := R80[0x23d5322f]
	637	[7070]	MOVE     	R81 R68 ; R81 := R68
	638	[7070]	GETTABLE 	R82 R79 K20 ; R82 := R79["mItemType"]
	639	[7070]	CALL     	R80 3 1 ; R80(R81,R82)
	640	[7068]	TFORLOOP 	R75 2 ; R78,R79 := R75(R76,R77); if R78 ~= nil then begin PC = 629; R77 := R78 end
	641	[7071]	JMP      	629 ; PC := 629
	642	[7074]	GETGLOBAL	R80 K6 ; R80 := 0xc8802016
	643	[7074]	MOVE     	R81 R68 ; R81 := R68
	644	[7074]	CALL     	R80 2 4 ; R80,R81,R82 := R80(R81)
	645	[7074]	JMP      	704 ; PC := 704
	646	[7075]	GETUPVAL 	R85 U1 ; R85 := U1
	647	[7075]	SELF     	R85 R85 K37 ; R86 := R85; R85 := R85[0x5458ba4c]
	648	[7075]	MOVE     	R87 R84 ; R87 := R84
	649	[7075]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	650	[7077]	GETGLOBAL	R86 K0 ; R86 := 0x7b998233
	651	[7077]	MOVE     	R87 R85 ; R87 := R85
	652	[7077]	CALL     	R86 2 2 ; R86 := R86(R87)
	653	[7077]	TEST     	R86 1 ; if R86 then PC := 704
	654	[7077]	JMP      	704 ; PC := 704
	655	[7078]	GETGLOBAL	R86 K102 ; R86 := 0xb009bbc6
	656	[7078]	MOVE     	R87 R84 ; R87 := R84
	657	[7078]	CALL     	R86 2 2 ; R86 := R86(R87)
	658	[7079]	SELF     	R87 R86 K104 ; R88 := R86; R87 := R86[0x5d10207d]
	659	[7079]	CALL     	R87 2 2 ; R87 := R87(R88)
	660	[7080]	GETUPVAL 	R88 U3 ; R88 := U3
	661	[7080]	GETTABLE 	R88 R88 K42 ; R88 := R88[0x08681f50]
	662	[7080]	GETGLOBAL	R89 K43 ; R89 := 0xae91e43b
	663	[7080]	MOVE     	R90 R85 ; R90 := R85
	664	[7080]	MOVE     	R91 R13 ; R91 := R13
	665	[7080]	LOADNIL  	R92 R93 ; R92 := R93 := nil
	666	[7080]	OP_LOADBOOL	R94 1 0 ; R94 := true
	667	[7080]	CALL     	R88 7 2 ; R88 := R88(R89,R90,R91,R92,R93,R94)
	668	[7081]	SETTABLE 	R88 K57 K58 ; R88["mPurchased"] := true
	669	[7082]	NEWTABLE 	R89 0 1 ; R89 := {}
	670	[7082]	GETTABLE 	R90 R88 K74 ; R90 := R88["FullName"]
	671	[7082]	SETTABLE 	R89 K60 R90 ; R89["UID"] := R90
	672	[7082]	SETTABLE 	R88 K59 R89 ; R88["mPurchasedInfo"] := R89
	673	[7083]	SETTABLE 	R88 K53 R85 ; R88["mStoreItem"] := R85
	674	[7084]	NEWTABLE 	R89 0 0 ; R89 := {}
	675	[7084]	SETTABLE 	R88 K108 R89 ; R88["mSlotCompatibilityOverrides"] := R89
	676	[7085]	LEN      	R89 R0 ; R89 := # R0
	677	[7085]	SETTABLE 	R88 K63 R89 ; R88["mSortId"] := R89
	678	[7086]	SELF     	R89 R87 K110 ; R90 := R87; R89 := R87[0xa5d5c8f6]
	679	[7086]	CALL     	R89 2 2 ; R89 := R89(R90)
	680	[7086]	SETTABLE 	R88 K109 R89 ; R88["PetTintColor"] := R89
	681	[7088]	GETTABLE 	R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
	682	[7088]	SETTABLE 	R89 K69 K58 ; R89[1.000000] := true
	683	[7089]	GETTABLE 	R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
	684	[7089]	SETTABLE 	R89 K111 K58 ; R89[9.000000] := true
	685	[7090]	GETTABLE 	R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
	686	[7090]	SETTABLE 	R89 K75 K58 ; R89[2.000000] := true
	687	[7092]	TEST     	R69 1 ; if R69 then PC := 695
	688	[7092]	JMP      	695 ; PC := 695
	689	[7092]	TEST     	R71 1 ; if R71 then PC := 695
	690	[7092]	JMP      	695 ; PC := 695
	691	[7092]	TEST     	R70 1 ; if R70 then PC := 695
	692	[7092]	JMP      	695 ; PC := 695
	693	[7092]	TEST     	R72 0 ; if not R72 then PC := 699
	694	[7092]	JMP      	699 ; PC := 699
	695	[7093]	GETTABLE 	R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
	696	[7093]	SETTABLE 	R89 K112 K58 ; R89[10.000000] := true
	697	[7094]	GETTABLE 	R89 R88 K108 ; R89 := R88["mSlotCompatibilityOverrides"]
	698	[7094]	SETTABLE 	R89 K113 K58 ; R89[11.000000] := true
	699	[7097]	GETGLOBAL	R89 K7 ; R89 := 0x33bdd652
	700	[7097]	GETTABLE 	R89 R89 K8 ; R89 := R89[0x23d5322f]
	701	[7097]	MOVE     	R90 R0 ; R90 := R0
	702	[7097]	MOVE     	R91 R88 ; R91 := R88
	703	[7097]	CALL     	R89 3 1 ; R89(R90,R91)
	704	[7074]	TFORLOOP 	R80 2 ; R83,R84 := R80(R81,R82); if R83 ~= nil then begin PC = 646; R82 := R83 end
	705	[7098]	JMP      	646 ; PC := 646
	706	[7102]	LOADK    	R89 := 1.000000
	707	[7102]	LEN      	R90 R0 ; R90 := # R0
	708	[7102]	LOADK    	R91 := 1.000000
	709	[7102]	FORPREP  	R89 726 ; R89 -= R91; PC := 726
	710	[7103]	GETTABLE 	R93 R0 R92 ; R93 := R0[R92]
	711	[7103]	GETTABLE 	R93 R93 K54 ; R93 := R93["Name"]
	712	[7103]	EQ       	0 R93 K39 ; if R93 ~= nil then PC := 726
	713	[7103]	JMP      	726 ; PC := 726
	714	[7104]	GETTABLE 	R93 R0 R92 ; R93 := R0[R92]
	715	[7104]	GETGLOBAL	R94 K43 ; R94 := 0xae91e43b
	716	[7104]	SELF     	R94 R94 K50 ; R95 := R94; R94 := R94[0x42b04007]
	717	[7104]	GETGLOBAL	R96 K114 ; R96 := 0x64fb1586
	718	[7104]	GETTABLE 	R97 R0 R92 ; R97 := R0[R92]
	719	[7104]	GETTABLE 	R97 R97 K53 ; R97 := R97["mStoreItem"]
	720	[7104]	SELF     	R97 R97 K70 ; R98 := R97; R97 := R97[0xd3a9d01f]
	721	[7104]	CALL     	R97 2 0 ; R97,... := R97(R98)
	722	[7104]	CALL     	R96 0 2 ; R96 := R96(R97,...)
	723	[7104]	OP_LOADBOOL	R97 1 0 ; R97 := true
	724	[7104]	CALL     	R94 4 2 ; R94 := R94(R95,R96,R97)
	725	[7104]	SETTABLE 	R93 K54 R94 ; R93["Name"] := R94
	726	[7102]	FORLOOP  	R89 710 ; R89 += R91; if R89 <= R90 then begin PC := 710; R92 := R89 end
	727	[7108]	RETURN   	R0 2 ; return R0 
	728	[7109]	RETURN   	R0 1 ; return 

function #118 <?:7111,7222> (366 instructions, 1464 bytes at 0000021130CD8F70)
3 params, 42 slots, 9 upvalues, 0 locals, 47 constants, 0 functions
	1	[7112]	OP_LOADBOOL	R3 0 0 ; R3 := false
	2	[7112]	SETGLOBALHASH	R3 K0 ; mInputBlocked := R3
	3	[7113]	EQ       	1 R0 K1 ; if R0 == nil then PC := 358
	4	[7113]	JMP      	358 ; PC := 358
	5	[7113]	TEST     	R2 0 ; if not R2 then PC := 8
	6	[7113]	JMP      	8 ; PC := 8
	7	[7113]	JMP      	358 ; PC := 358
	8	[7115]	TEST     	R0 0 ; if not R0 then PC := 358
	9	[7115]	JMP      	358 ; PC := 358
	10	[7116]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[7116]	GETUPVAL 	R4 U1 ; R4 := U1
	12	[7116]	GETTABLE 	R4 R4 K2 ; R4 := R4["SWAPPING_ITEM"]
	13	[7116]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 115
	14	[7116]	JMP      	115 ; PC := 115
	15	[7117]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	16	[7117]	GETGLOBAL	R4 K4 ; R4 := mSelected
	17	[7117]	GETTABLE 	R4 R4 K5 ; R4 := R4["Element"]
	18	[7117]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[7117]	TEST     	R3 1 ; if R3 then PC := 358
	20	[7117]	JMP      	358 ; PC := 358
	21	[7118]	GETGLOBAL	R3 K4 ; R3 := mSelected
	22	[7118]	GETTABLE 	R3 R3 K5 ; R3 := R3["Element"]
	23	[7118]	GETUPVAL 	R4 U2 ; R4 := U2
	24	[7118]	GETTABLE 	R4 R4 K7 ; R4 := R4[0x866fb296]
	25	[7118]	GETGLOBAL	R5 K4 ; R5 := mSelected
	26	[7118]	GETTABLE 	R5 R5 K5 ; R5 := R5["Element"]
	27	[7118]	GETTABLE 	R5 R5 K8 ; R5 := R5["LoadOutType"]
	28	[7118]	GETGLOBAL	R6 K4 ; R6 := mSelected
	29	[7118]	GETTABLE 	R6 R6 K5 ; R6 := R6["Element"]
	30	[7118]	GETTABLE 	R6 R6 K9 ; R6 := R6["LoadOutId"]
	31	[7118]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	32	[7118]	SETTABLE 	R3 K6 R4 ; R3["OwnedItems"] := R4
	33	[7121]	GETGLOBAL	R3 K4 ; R3 := mSelected
	34	[7121]	GETTABLE 	R3 R3 K5 ; R3 := R3["Element"]
	35	[7121]	GETTABLE 	R3 R3 K8 ; R3 := R3["LoadOutType"]
	36	[7121]	EQ       	0 R3 K11 ; if R3 ~= 1.000000 then PC := 59
	37	[7121]	JMP      	59 ; PC := 59
	38	[7121]	GETGLOBAL	R3 K4 ; R3 := mSelected
	39	[7121]	GETTABLE 	R3 R3 K5 ; R3 := R3["Element"]
	40	[7121]	GETTABLE 	R3 R3 K9 ; R3 := R3["LoadOutId"]
	41	[7121]	EQ       	0 R3 K12 ; if R3 ~= 0.000000 then PC := 59
	42	[7121]	JMP      	59 ; PC := 59
	43	[7122]	GETGLOBAL	R3 K13 ; R3 := mLists
	44	[7122]	GETTABLE 	R3 R3 K14 ; R3 := R3["mLoadOutList"]
	45	[7122]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xca30dfb6]
	46	[7122]	GETGLOBAL	R5 K4 ; R5 := mSelected
	47	[7122]	GETTABLE 	R5 R5 K5 ; R5 := R5["Element"]
	48	[7122]	GETTABLE 	R5 R5 K16 ; R5 := R5["Id"]
	49	[7122]	ADD      	R5 R5 K11 ; R5 := R5 + 1.000000
	50	[7122]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	51	[7123]	GETUPVAL 	R4 U2 ; R4 := U2
	52	[7123]	GETTABLE 	R4 R4 K7 ; R4 := R4[0x866fb296]
	53	[7123]	GETGLOBAL	R5 K4 ; R5 := mSelected
	54	[7123]	GETTABLE 	R5 R5 K5 ; R5 := R5["Element"]
	55	[7123]	GETTABLE 	R5 R5 K8 ; R5 := R5["LoadOutType"]
	56	[7123]	LOADK    	R6 := 2.000000
	57	[7123]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	58	[7123]	SETTABLE 	R3 K6 R4 ; R3["OwnedItems"] := R4
	59	[7126]	GETUPVAL 	R4 U3 ; R4 := U3
	60	[7126]	GETGLOBAL	R5 K4 ; R5 := mSelected
	61	[7126]	GETTABLE 	R5 R5 K5 ; R5 := R5["Element"]
	62	[7126]	CALL     	R4 2 1 ; R4(R5)
	63	[7127]	LOADK    	R4 := 1.000000
	64	[7127]	GETGLOBAL	R5 K4 ; R5 := mSelected
	65	[7127]	GETTABLE 	R5 R5 K5 ; R5 := R5["Element"]
	66	[7127]	GETTABLE 	R5 R5 K6 ; R5 := R5["OwnedItems"]
	67	[7127]	LEN      	R5 R5 ; R5 := # R5
	68	[7127]	LOADK    	R6 := 1.000000
	69	[7127]	FORPREP  	R4 96 ; R4 -= R6; PC := 96
	70	[7128]	GETGLOBAL	R8 K4 ; R8 := mSelected
	71	[7128]	GETTABLE 	R8 R8 K17 ; R8 := R8["Item"]
	72	[7128]	GETTABLE 	R8 R8 K18 ; R8 := R8["mPurchased"]
	73	[7128]	TEST     	R8 1 ; if R8 then PC := 96
	74	[7128]	JMP      	96 ; PC := 96
	75	[7128]	GETGLOBAL	R8 K4 ; R8 := mSelected
	76	[7128]	GETTABLE 	R8 R8 K5 ; R8 := R8["Element"]
	77	[7128]	GETTABLE 	R8 R8 K6 ; R8 := R8["OwnedItems"]
	78	[7128]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	79	[7128]	GETTABLE 	R8 R8 K19 ; R8 := R8["Type"]
	80	[7128]	GETGLOBAL	R9 K4 ; R9 := mSelected
	81	[7128]	GETTABLE 	R9 R9 K17 ; R9 := R9["Item"]
	82	[7128]	GETTABLE 	R9 R9 K19 ; R9 := R9["Type"]
	83	[7128]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 96
	84	[7128]	JMP      	96 ; PC := 96
	85	[7129]	GETGLOBAL	R8 K4 ; R8 := mSelected
	86	[7129]	GETTABLE 	R8 R8 K17 ; R8 := R8["Item"]
	87	[7129]	GETGLOBAL	R9 K4 ; R9 := mSelected
	88	[7129]	GETTABLE 	R9 R9 K5 ; R9 := R9["Element"]
	89	[7129]	GETTABLE 	R9 R9 K6 ; R9 := R9["OwnedItems"]
	90	[7129]	GETTABLE 	R9 R9 R7 ; R9 := R9[R7]
	91	[7129]	SETTABLE 	R8 K20 R9 ; R8["mPurchasedInfo"] := R9
	92	[7130]	GETGLOBAL	R8 K4 ; R8 := mSelected
	93	[7130]	GETTABLE 	R8 R8 K17 ; R8 := R8["Item"]
	94	[7130]	SETTABLE 	R8 K18 K21 ; R8["mPurchased"] := true
	95	[7131]	JMP      	97 ; PC := 97
	96	[7127]	FORLOOP  	R4 70 ; R4 += R6; if R4 <= R5 then begin PC := 70; R7 := R4 end
	97	[7134]	GETGLOBAL	R8 K4 ; R8 := mSelected
	98	[7134]	GETTABLE 	R8 R8 K17 ; R8 := R8["Item"]
	99	[7134]	GETTABLE 	R8 R8 K20 ; R8 := R8["mPurchasedInfo"]
	100	[7134]	EQ       	1 R8 K1 ; if R8 == nil then PC := 105
	101	[7134]	JMP      	105 ; PC := 105
	102	[7135]	GETUPVAL 	R8 U4 ; R8 := U4
	103	[7135]	CALL     	R8 1 1 ; R8()
	104	[7135]	JMP      	358 ; PC := 358
	105	[7137]	GETGLOBAL	R8 K22 ; R8 := mItemsGrid
	106	[7137]	SELF     	R8 R8 K23 ; R9 := R8; R8 := R8[0x7c09c373]
	107	[7137]	OP_LOADBOOL	R10 1 0 ; R10 := true
	108	[7137]	OP_LOADBOOL	R11 1 0 ; R11 := true
	109	[7137]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	110	[7138]	GETUPVAL 	R8 U5 ; R8 := U5
	111	[7138]	GETGLOBAL	R9 K4 ; R9 := mSelected
	112	[7138]	GETTABLE 	R9 R9 K5 ; R9 := R9["Element"]
	113	[7138]	CALL     	R8 2 1 ; R8(R9)
	114	[7140]	JMP      	358 ; PC := 358
	115	[7141]	GETUPVAL 	R8 U0 ; R8 := U0
	116	[7141]	GETUPVAL 	R9 U1 ; R9 := U1
	117	[7141]	GETTABLE 	R9 R9 K24 ; R9 := R9["SELECTING_SKINS"]
	118	[7141]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 280
	119	[7141]	JMP      	280 ; PC := 280
	120	[7142]	GETUPVAL 	R8 U6 ; R8 := U6
	121	[7142]	CALL     	R8 1 2 ; R8 := R8()
	122	[7145]	LOADK    	R9 := 1.000000
	123	[7145]	GETGLOBAL	R10 K13 ; R10 := mLists
	124	[7145]	GETTABLE 	R10 R10 K25 ; R10 := R10["mCosmeticsList"]
	125	[7145]	GETTABLE 	R10 R10 K26 ; R10 := R10["mElements"]
	126	[7145]	LEN      	R10 R10 ; R10 := # R10
	127	[7145]	LOADK    	R11 := 1.000000
	128	[7145]	FORPREP  	R9 142 ; R9 -= R11; PC := 142
	129	[7146]	GETGLOBAL	R13 K13 ; R13 := mLists
	130	[7146]	GETTABLE 	R13 R13 K25 ; R13 := R13["mCosmeticsList"]
	131	[7146]	GETTABLE 	R13 R13 K26 ; R13 := R13["mElements"]
	132	[7146]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	133	[7146]	GETTABLE 	R13 R13 K27 ; R13 := R13["Items"]
	134	[7146]	EQ       	1 R13 K1 ; if R13 == nil then PC := 142
	135	[7146]	JMP      	142 ; PC := 142
	136	[7147]	GETGLOBAL	R13 K13 ; R13 := mLists
	137	[7147]	GETTABLE 	R13 R13 K25 ; R13 := R13["mCosmeticsList"]
	138	[7147]	GETTABLE 	R13 R13 K26 ; R13 := R13["mElements"]
	139	[7147]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	140	[7147]	NEWTABLE 	R14 0 0 ; R14 := {}
	141	[7147]	SETTABLE 	R13 K27 R14 ; R13["Items"] := R14
	142	[7145]	FORLOOP  	R9 129 ; R9 += R11; if R9 <= R10 then begin PC := 129; R12 := R9 end
	143	[7151]	GETGLOBAL	R13 K4 ; R13 := mSelected
	144	[7151]	GETTABLE 	R13 R13 K17 ; R13 := R13["Item"]
	145	[7151]	GETTABLE 	R13 R13 K28 ; R13 := R13["SetItems"]
	146	[7152]	LOADK    	R14 := 1.000000
	147	[7152]	LEN      	R15 R8 ; R15 := # R8
	148	[7152]	LOADK    	R16 := 1.000000
	149	[7152]	FORPREP  	R14 261 ; R14 -= R16; PC := 261
	150	[7153]	GETGLOBAL	R18 K29 ; R18 := 0xce225efa
	151	[7153]	LOADK    	R19 := 0.000000
	152	[7153]	CALL     	R18 2 1 ; R18(R19)
	153	[7154]	LOADK    	R18 := 0.000000
	154	[7154]	LOADK    	R19 := 20.000000
	155	[7154]	LOADK    	R20 := 1.000000
	156	[7154]	FORPREP  	R18 194 ; R18 -= R20; PC := 194
	157	[7155]	GETUPVAL 	R22 U7 ; R22 := U7
	158	[7155]	GETTABLE 	R23 R8 R17 ; R23 := R8[R17]
	159	[7155]	MOVE     	R24 R21 ; R24 := R21
	160	[7155]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	161	[7155]	TEST     	R22 0 ; if not R22 then PC := 194
	162	[7155]	JMP      	194 ; PC := 194
	163	[7156]	LOADK    	R22 := 1.000000
	164	[7156]	GETGLOBAL	R23 K13 ; R23 := mLists
	165	[7156]	GETTABLE 	R23 R23 K25 ; R23 := R23["mCosmeticsList"]
	166	[7156]	GETTABLE 	R23 R23 K26 ; R23 := R23["mElements"]
	167	[7156]	LEN      	R23 R23 ; R23 := # R23
	168	[7156]	LOADK    	R24 := 1.000000
	169	[7156]	FORPREP  	R22 193 ; R22 -= R24; PC := 193
	170	[7157]	GETGLOBAL	R26 K13 ; R26 := mLists
	171	[7157]	GETTABLE 	R26 R26 K25 ; R26 := R26["mCosmeticsList"]
	172	[7157]	GETTABLE 	R26 R26 K26 ; R26 := R26["mElements"]
	173	[7157]	GETTABLE 	R26 R26 R25 ; R26 := R26[R25]
	174	[7157]	EQ       	1 R26 K1 ; if R26 == nil then PC := 193
	175	[7157]	JMP      	193 ; PC := 193
	176	[7157]	GETGLOBAL	R26 K13 ; R26 := mLists
	177	[7157]	GETTABLE 	R26 R26 K25 ; R26 := R26["mCosmeticsList"]
	178	[7157]	GETTABLE 	R26 R26 K26 ; R26 := R26["mElements"]
	179	[7157]	GETTABLE 	R26 R26 R25 ; R26 := R26[R25]
	180	[7157]	GETTABLE 	R26 R26 K30 ; R26 := R26["Slot"]
	181	[7157]	EQ       	0 R26 R21 ; if R26 ~= R21 then PC := 193
	182	[7157]	JMP      	193 ; PC := 193
	183	[7158]	GETGLOBAL	R26 K31 ; R26 := 0x33bdd652
	184	[7158]	GETTABLE 	R26 R26 K32 ; R26 := R26[0x23d5322f]
	185	[7158]	GETGLOBAL	R27 K13 ; R27 := mLists
	186	[7158]	GETTABLE 	R27 R27 K25 ; R27 := R27["mCosmeticsList"]
	187	[7158]	GETTABLE 	R27 R27 K26 ; R27 := R27["mElements"]
	188	[7158]	GETTABLE 	R27 R27 R25 ; R27 := R27[R25]
	189	[7158]	GETTABLE 	R27 R27 K27 ; R27 := R27["Items"]
	190	[7158]	GETTABLE 	R28 R8 R17 ; R28 := R8[R17]
	191	[7158]	CALL     	R26 3 1 ; R26(R27,R28)
	192	[7159]	JMP      	194 ; PC := 194
	193	[7156]	FORLOOP  	R22 170 ; R22 += R24; if R22 <= R23 then begin PC := 170; R25 := R22 end
	194	[7154]	FORLOOP  	R18 157 ; R18 += R20; if R18 <= R19 then begin PC := 157; R21 := R18 end
	195	[7165]	GETGLOBAL	R26 K4 ; R26 := mSelected
	196	[7165]	GETTABLE 	R26 R26 K17 ; R26 := R26["Item"]
	197	[7165]	GETTABLE 	R26 R26 K18 ; R26 := R26["mPurchased"]
	198	[7165]	TEST     	R26 1 ; if R26 then PC := 220
	199	[7165]	JMP      	220 ; PC := 220
	200	[7165]	GETTABLE 	R26 R8 R17 ; R26 := R8[R17]
	201	[7165]	GETTABLE 	R26 R26 K19 ; R26 := R26["Type"]
	202	[7165]	GETGLOBAL	R27 K4 ; R27 := mSelected
	203	[7165]	GETTABLE 	R27 R27 K17 ; R27 := R27["Item"]
	204	[7165]	GETTABLE 	R27 R27 K19 ; R27 := R27["Type"]
	205	[7165]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 220
	206	[7165]	JMP      	220 ; PC := 220
	207	[7167]	GETGLOBAL	R26 K4 ; R26 := mSelected
	208	[7167]	GETTABLE 	R26 R26 K17 ; R26 := R26["Item"]
	209	[7167]	GETTABLE 	R27 R8 R17 ; R27 := R8[R17]
	210	[7167]	GETTABLE 	R27 R27 K33 ; R27 := R27["Skin"]
	211	[7167]	SETTABLE 	R26 K33 R27 ; R26["Skin"] := R27
	212	[7168]	GETGLOBAL	R26 K4 ; R26 := mSelected
	213	[7168]	GETTABLE 	R26 R26 K17 ; R26 := R26["Item"]
	214	[7168]	GETTABLE 	R27 R8 R17 ; R27 := R8[R17]
	215	[7168]	GETTABLE 	R27 R27 K20 ; R27 := R27["mPurchasedInfo"]
	216	[7168]	SETTABLE 	R26 K20 R27 ; R26["mPurchasedInfo"] := R27
	217	[7169]	GETGLOBAL	R26 K4 ; R26 := mSelected
	218	[7169]	GETTABLE 	R26 R26 K17 ; R26 := R26["Item"]
	219	[7169]	SETTABLE 	R26 K18 K21 ; R26["mPurchased"] := true
	220	[7172]	EQ       	1 R13 K1 ; if R13 == nil then PC := 261
	221	[7172]	JMP      	261 ; PC := 261
	222	[7173]	GETGLOBAL	R26 K4 ; R26 := mSelected
	223	[7173]	GETTABLE 	R26 R26 K17 ; R26 := R26["Item"]
	224	[7174]	GETGLOBAL	R27 K4 ; R27 := mSelected
	225	[7174]	GETTABLE 	R27 R27 K34 ; R27 := R27["Cosmetic"]
	226	[7174]	GETTABLE 	R27 R27 K30 ; R27 := R27["Slot"]
	227	[7175]	GETGLOBAL	R28 K35 ; R28 := 0xc8802016
	228	[7175]	MOVE     	R29 R13 ; R29 := R13
	229	[7175]	CALL     	R28 2 4 ; R28,R29,R30 := R28(R29)
	230	[7175]	JMP      	259 ; PC := 259
	231	[7176]	GETTABLE 	R33 R32 K18 ; R33 := R32["mPurchased"]
	232	[7176]	TEST     	R33 1 ; if R33 then PC := 259
	233	[7176]	JMP      	259 ; PC := 259
	234	[7176]	GETTABLE 	R33 R8 R17 ; R33 := R8[R17]
	235	[7176]	GETTABLE 	R33 R33 K19 ; R33 := R33["Type"]
	236	[7176]	GETTABLE 	R34 R32 K19 ; R34 := R32["Type"]
	237	[7176]	EQ       	0 R33 R34 ; if R33 ~= R34 then PC := 259
	238	[7176]	JMP      	259 ; PC := 259
	239	[7177]	GETTABLE 	R33 R8 R17 ; R33 := R8[R17]
	240	[7177]	GETTABLE 	R33 R33 K33 ; R33 := R33["Skin"]
	241	[7177]	SETTABLE 	R32 K33 R33 ; R32["Skin"] := R33
	242	[7178]	GETTABLE 	R33 R8 R17 ; R33 := R8[R17]
	243	[7178]	GETTABLE 	R33 R33 K20 ; R33 := R33["mPurchasedInfo"]
	244	[7178]	SETTABLE 	R32 K20 R33 ; R32["mPurchasedInfo"] := R33
	245	[7179]	SETTABLE 	R32 K18 K21 ; R32["mPurchased"] := true
	246	[7181]	GETGLOBAL	R33 K4 ; R33 := mSelected
	247	[7181]	SETTABLE 	R33 K17 R32 ; R33["Item"] := R32
	248	[7182]	GETGLOBAL	R33 K4 ; R33 := mSelected
	249	[7182]	GETTABLE 	R33 R33 K34 ; R33 := R33["Cosmetic"]
	250	[7182]	GETTABLE 	R34 R32 K36 ; R34 := R32["CosmeticSlot"]
	251	[7182]	SETTABLE 	R33 K30 R34 ; R33["Slot"] := R34
	252	[7183]	GETUPVAL 	R33 U8 ; R33 := U8
	253	[7183]	CALL     	R33 1 1 ; R33()
	254	[7184]	GETGLOBAL	R33 K4 ; R33 := mSelected
	255	[7184]	SETTABLE 	R33 K17 R26 ; R33["Item"] := R26
	256	[7185]	GETGLOBAL	R33 K4 ; R33 := mSelected
	257	[7185]	GETTABLE 	R33 R33 K34 ; R33 := R33["Cosmetic"]
	258	[7185]	SETTABLE 	R33 K30 R27 ; R33["Slot"] := R27
	259	[7175]	TFORLOOP 	R28 2 ; R31,R32 := R28(R29,R30); if R31 ~= nil then begin PC = 231; R30 := R31 end
	260	[7186]	JMP      	231 ; PC := 231
	261	[7152]	FORLOOP  	R14 150 ; R14 += R16; if R14 <= R15 then begin PC := 150; R17 := R14 end
	262	[7190]	GETGLOBAL	R33 K4 ; R33 := mSelected
	263	[7190]	GETTABLE 	R33 R33 K17 ; R33 := R33["Item"]
	264	[7190]	GETTABLE 	R33 R33 K20 ; R33 := R33["mPurchasedInfo"]
	265	[7190]	EQ       	1 R33 K1 ; if R33 == nil then PC := 270
	266	[7190]	JMP      	270 ; PC := 270
	267	[7191]	GETUPVAL 	R33 U4 ; R33 := U4
	268	[7191]	CALL     	R33 1 1 ; R33()
	269	[7191]	JMP      	358 ; PC := 358
	270	[7193]	GETGLOBAL	R33 K22 ; R33 := mItemsGrid
	271	[7193]	SELF     	R33 R33 K23 ; R34 := R33; R33 := R33[0x7c09c373]
	272	[7193]	OP_LOADBOOL	R35 1 0 ; R35 := true
	273	[7193]	OP_LOADBOOL	R36 1 0 ; R36 := true
	274	[7193]	CALL     	R33 4 1 ; R33(R34,R35,R36)
	275	[7194]	GETUPVAL 	R33 U5 ; R33 := U5
	276	[7194]	GETGLOBAL	R34 K4 ; R34 := mSelected
	277	[7194]	GETTABLE 	R34 R34 K34 ; R34 := R34["Cosmetic"]
	278	[7194]	CALL     	R33 2 1 ; R33(R34)
	279	[7195]	JMP      	358 ; PC := 358
	280	[7196]	GETUPVAL 	R33 U0 ; R33 := U0
	281	[7196]	GETUPVAL 	R34 U1 ; R34 := U1
	282	[7196]	GETTABLE 	R34 R34 K37 ; R34 := R34["SELECTING_CONSUMABLES"]
	283	[7196]	EQ       	0 R33 R34 ; if R33 ~= R34 then PC := 358
	284	[7196]	JMP      	358 ; PC := 358
	285	[7196]	GETGLOBAL	R33 K4 ; R33 := mSelected
	286	[7196]	GETTABLE 	R33 R33 K38 ; R33 := R33["Consumable"]
	287	[7196]	EQ       	1 R33 K1 ; if R33 == nil then PC := 358
	288	[7196]	JMP      	358 ; PC := 358
	289	[7197]	GETUPVAL 	R33 U2 ; R33 := U2
	290	[7197]	GETTABLE 	R33 R33 K7 ; R33 := R33[0x866fb296]
	291	[7197]	LOADNIL  	R34 R34 ; R34 := nil
	292	[7197]	LOADK    	R35 K39 ; R35 := "CONSUMABLES"
	293	[7197]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	294	[7198]	GETGLOBAL	R34 K4 ; R34 := mSelected
	295	[7198]	GETTABLE 	R34 R34 K38 ; R34 := R34["Consumable"]
	296	[7198]	SETTABLE 	R34 K6 R33 ; R34["OwnedItems"] := R33
	297	[7199]	LOADK    	R34 := 1.000000
	298	[7199]	LEN      	R35 R33 ; R35 := # R33
	299	[7199]	LOADK    	R36 := 1.000000
	300	[7199]	FORPREP  	R34 336 ; R34 -= R36; PC := 336
	301	[7200]	GETGLOBAL	R38 K4 ; R38 := mSelected
	302	[7200]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	303	[7200]	EQ       	1 R38 K1 ; if R38 == nil then PC := 336
	304	[7200]	JMP      	336 ; PC := 336
	305	[7200]	GETGLOBAL	R38 K4 ; R38 := mSelected
	306	[7200]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	307	[7200]	GETTABLE 	R38 R38 K19 ; R38 := R38["Type"]
	308	[7200]	GETTABLE 	R39 R33 R37 ; R39 := R33[R37]
	309	[7200]	GETTABLE 	R39 R39 K19 ; R39 := R39["Type"]
	310	[7200]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 336
	311	[7200]	JMP      	336 ; PC := 336
	312	[7201]	GETGLOBAL	R38 K4 ; R38 := mSelected
	313	[7201]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	314	[7201]	SETTABLE 	R38 K18 K21 ; R38["mPurchased"] := true
	315	[7202]	GETGLOBAL	R38 K4 ; R38 := mSelected
	316	[7202]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	317	[7202]	GETTABLE 	R38 R38 K20 ; R38 := R38["mPurchasedInfo"]
	318	[7202]	EQ       	0 R38 K1 ; if R38 ~= nil then PC := 329
	319	[7202]	JMP      	329 ; PC := 329
	320	[7203]	GETGLOBAL	R38 K4 ; R38 := mSelected
	321	[7203]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	322	[7203]	NEWTABLE 	R39 0 1 ; R39 := {}
	323	[7203]	GETTABLE 	R40 R33 R37 ; R40 := R33[R37]
	324	[7203]	GETTABLE 	R40 R40 K19 ; R40 := R40["Type"]
	325	[7203]	SELF     	R40 R40 K41 ; R41 := R40; R40 := R40[0xed4e0128]
	326	[7203]	CALL     	R40 2 2 ; R40 := R40(R41)
	327	[7203]	SETTABLE 	R39 K40 R40 ; R39["UID"] := R40
	328	[7203]	SETTABLE 	R38 K20 R39 ; R38["mPurchasedInfo"] := R39
	329	[7205]	GETGLOBAL	R38 K4 ; R38 := mSelected
	330	[7205]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	331	[7205]	GETTABLE 	R38 R38 K20 ; R38 := R38["mPurchasedInfo"]
	332	[7205]	GETTABLE 	R39 R33 R37 ; R39 := R33[R37]
	333	[7205]	GETTABLE 	R39 R39 K42 ; R39 := R39["ItemCount"]
	334	[7205]	SETTABLE 	R38 K42 R39 ; R38[0x09000032] := R39
	335	[7207]	JMP      	337 ; PC := 337
	336	[7199]	FORLOOP  	R34 301 ; R34 += R36; if R34 <= R35 then begin PC := 301; R37 := R34 end
	337	[7210]	GETGLOBAL	R38 K4 ; R38 := mSelected
	338	[7210]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	339	[7210]	EQ       	1 R38 K1 ; if R38 == nil then PC := 349
	340	[7210]	JMP      	349 ; PC := 349
	341	[7210]	GETGLOBAL	R38 K4 ; R38 := mSelected
	342	[7210]	GETTABLE 	R38 R38 K17 ; R38 := R38["Item"]
	343	[7210]	GETTABLE 	R38 R38 K20 ; R38 := R38["mPurchasedInfo"]
	344	[7210]	EQ       	1 R38 K1 ; if R38 == nil then PC := 349
	345	[7210]	JMP      	349 ; PC := 349
	346	[7211]	GETUPVAL 	R38 U4 ; R38 := U4
	347	[7211]	CALL     	R38 1 1 ; R38()
	348	[7211]	JMP      	358 ; PC := 358
	349	[7213]	GETGLOBAL	R38 K22 ; R38 := mItemsGrid
	350	[7213]	SELF     	R38 R38 K23 ; R39 := R38; R38 := R38[0x7c09c373]
	351	[7213]	OP_LOADBOOL	R40 1 0 ; R40 := true
	352	[7213]	OP_LOADBOOL	R41 1 0 ; R41 := true
	353	[7213]	CALL     	R38 4 1 ; R38(R39,R40,R41)
	354	[7214]	GETUPVAL 	R38 U5 ; R38 := U5
	355	[7214]	GETGLOBAL	R39 K4 ; R39 := mSelected
	356	[7214]	GETTABLE 	R39 R39 K38 ; R39 := R39["Consumable"]
	357	[7214]	CALL     	R38 2 1 ; R38(R39)
	358	[7219]	GETGLOBAL	R38 K43 ; R38 := mChildMovie
	359	[7219]	EQ       	1 R38 K1 ; if R38 == nil then PC := 366
	360	[7219]	JMP      	366 ; PC := 366
	361	[7220]	GETGLOBAL	R38 K43 ; R38 := mChildMovie
	362	[7220]	SELF     	R38 R38 K44 ; R39 := R38; R38 := R38[0xe4162eed]
	363	[7220]	LOADK    	R40 K45 ; R40 := "TransitionOut"
	364	[7220]	LOADK    	R41 K46 ; R41 := ""
	365	[7220]	CALL     	R38 4 1 ; R38(R39,R40,R41)
	366	[7222]	RETURN   	R0 1 ; return 

function #119 <?:7224,7227> (4 instructions, 16 bytes at 0000021130CD9950)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[7225]	SETGLOBALHASH	R1 K0 ; mChildMovie := R1
	2	[7226]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[7226]	SETGLOBALHASH	R1 K1 ; mInputBlocked := R1
	4	[7227]	RETURN   	R0 1 ; return 

function #120 <?:7229,7251> (80 instructions, 320 bytes at 0000021130B94570)
0 params, 4 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[7230]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7230]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[7230]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7230]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[7230]	JMP      	7 ; PC := 7
	6	[7231]	RETURN   	R0 1 ; return 
	7	[7234]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	8	[7234]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x4ae54c32]
	9	[7234]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[7234]	GETTABLE 	R2 R2 K3 ; R2 := R2["SF_MARKET_TIER_ONE"]
	11	[7234]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	12	[7234]	TEST     	R0 1 ; if R0 then PC := 19
	13	[7234]	JMP      	19 ; PC := 19
	14	[7235]	GETUPVAL 	R0 U1 ; R0 := U1
	15	[7235]	GETTABLE 	R0 R0 K4 ; R0 := R0[0xe0cba3ca]
	16	[7235]	LOADK    	R1 K5 ; R1 := "/Lotus/Language/Menu/Global_PurchaseFailedModuleRequired"
	17	[7235]	CALL     	R0 2 1 ; R0(R1)
	18	[7236]	RETURN   	R0 1 ; return 
	19	[7239]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[7239]	CALL     	R0 1 2 ; R0 := R0()
	21	[7239]	TEST     	R0 1 ; if R0 then PC := 80
	22	[7239]	JMP      	80 ; PC := 80
	23	[7239]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	24	[7239]	GETGLOBAL	R1 K6 ; R1 := mSelected
	25	[7239]	GETTABLE 	R1 R1 K7 ; R1 := R1["Item"]
	26	[7239]	CALL     	R0 2 2 ; R0 := R0(R1)
	27	[7239]	TEST     	R0 1 ; if R0 then PC := 80
	28	[7239]	JMP      	80 ; PC := 80
	29	[7239]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	30	[7239]	GETGLOBAL	R1 K6 ; R1 := mSelected
	31	[7239]	GETTABLE 	R1 R1 K7 ; R1 := R1["Item"]
	32	[7239]	GETTABLE 	R1 R1 K8 ; R1 := R1["mStoreItem"]
	33	[7239]	CALL     	R0 2 2 ; R0 := R0(R1)
	34	[7239]	TEST     	R0 1 ; if R0 then PC := 80
	35	[7239]	JMP      	80 ; PC := 80
	36	[7239]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	37	[7239]	GETGLOBAL	R1 K9 ; R1 := 0x0032441c
	38	[7239]	GETTABLE 	R1 R1 K10 ; R1 := R1["UIMovie_DetailedPurchaseDialog"]
	39	[7239]	CALL     	R0 2 2 ; R0 := R0(R1)
	40	[7239]	TEST     	R0 1 ; if R0 then PC := 80
	41	[7239]	JMP      	80 ; PC := 80
	42	[7240]	OP_LOADBOOL	R0 1 0 ; R0 := true
	43	[7240]	SETGLOBALHASH	R0 K11 ; mInputBlocked := R0
	44	[7242]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	45	[7242]	GETGLOBAL	R1 K12 ; R1 := mChildMovie
	46	[7242]	CALL     	R0 2 2 ; R0 := R0(R1)
	47	[7242]	TEST     	R0 1 ; if R0 then PC := 52
	48	[7242]	JMP      	52 ; PC := 52
	49	[7243]	GETGLOBAL	R0 K12 ; R0 := mChildMovie
	50	[7243]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x32302b4a]
	51	[7243]	CALL     	R0 2 1 ; R0(R1)
	52	[7246]	GETGLOBAL	R0 K14 ; R0 := _T
	53	[7246]	SETTABLE 	R0 K15 K16 ; R0["marketDetailedViewParms"] := nil
	54	[7247]	GETGLOBAL	R0 K14 ; R0 := _T
	55	[7247]	NEWTABLE 	R1 0 2 ; R1 := {}
	56	[7247]	NEWTABLE 	R2 0 2 ; R2 := {}
	57	[7247]	GETGLOBAL	R3 K6 ; R3 := mSelected
	58	[7247]	GETTABLE 	R3 R3 K7 ; R3 := R3["Item"]
	59	[7247]	GETTABLE 	R3 R3 K8 ; R3 := R3["mStoreItem"]
	60	[7247]	SETTABLE 	R2 K18 R3 ; R2["StoreItem"] := R3
	61	[7247]	GETGLOBAL	R3 K6 ; R3 := mSelected
	62	[7247]	GETTABLE 	R3 R3 K7 ; R3 := R3["Item"]
	63	[7247]	GETTABLE 	R3 R3 K19 ; R3 := R3["Sale"]
	64	[7247]	SETTABLE 	R2 K19 R3 ; R2["Sale"] := R3
	65	[7247]	SETTABLE 	R1 K17 R2 ; R1["ITEM"] := R2
	66	[7247]	GETUPVAL 	R2 U3 ; R2 := U3
	67	[7247]	SETTABLE 	R1 K20 R2 ; R1["CALLBACK"] := R2
	68	[7247]	SETTABLE 	R0 K15 R1 ; R0["marketDetailedViewParms"] := R1
	69	[7248]	GETGLOBAL	R0 K21 ; R0 := 0xae91e43b
	70	[7248]	SELF     	R0 R0 K22 ; R1 := R0; R0 := R0[0x1fd6abd0]
	71	[7248]	GETGLOBAL	R2 K9 ; R2 := 0x0032441c
	72	[7248]	GETTABLE 	R2 R2 K10 ; R2 := R2["UIMovie_DetailedPurchaseDialog"]
	73	[7248]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	74	[7248]	SETGLOBALHASH	R0 K12 ; mChildMovie := R0
	75	[7249]	GETGLOBAL	R0 K12 ; R0 := mChildMovie
	76	[7249]	SELF     	R0 R0 K23 ; R1 := R0; R0 := R0[0xe4162eed]
	77	[7249]	LOADK    	R2 K24 ; R2 := "SetExitCallback"
	78	[7249]	LOADK    	R3 K25 ; R3 := "OnDetailedViewComplete"
	79	[7249]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	80	[7251]	RETURN   	R0 1 ; return 

function #121 <?:7253,7265> (35 instructions, 140 bytes at 0000021130B94AC0)
0 params, 6 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[7254]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[7254]	GETTABLE 	R0 R0 K1 ; R0 := R0["MenuSuitAvatar"]
	3	[7255]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	4	[7255]	MOVE     	R2 R0 ; R2 := R0
	5	[7255]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[7255]	TEST     	R1 1 ; if R1 then PC := 35
	7	[7255]	JMP      	35 ; PC := 35
	8	[7256]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xde321e6f]
	9	[7256]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[7256]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xbb4a3d82]
	11	[7256]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[7257]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	13	[7257]	MOVE     	R3 R1 ; R3 := R1
	14	[7257]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[7257]	TEST     	R2 1 ; if R2 then PC := 35
	16	[7257]	JMP      	35 ; PC := 35
	17	[7258]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xf2deaf69]
	18	[7258]	GETGLOBAL	R4 K6 ; R4 := 0x7ed0a956
	19	[7258]	LOADK    	R5 K7 ; R5 := "/Lotus/Weapons/Tenno/Melee/LotusNunchaku"
	20	[7258]	CALL     	R4 2 0 ; R4,... := R4(R5)
	21	[7258]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	22	[7258]	TEST     	R2 0 ; if not R2 then PC := 30
	23	[7258]	JMP      	30 ; PC := 30
	24	[7259]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0x167f2e76]
	25	[7259]	GETGLOBAL	R4 K9 ; R4 := 0x0469f296
	26	[7259]	LOADK    	R5 K10 ; R5 := "NunchakuBlockIdle"
	27	[7259]	CALL     	R4 2 0 ; R4,... := R4(R5)
	28	[7259]	CALL     	R2 0 1 ; R2(R3,...)
	29	[7259]	JMP      	35 ; PC := 35
	30	[7261]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0x167f2e76]
	31	[7261]	GETGLOBAL	R4 K9 ; R4 := 0x0469f296
	32	[7261]	LOADK    	R5 K11 ; R5 := "WeaponForceOpen"
	33	[7261]	CALL     	R4 2 0 ; R4,... := R4(R5)
	34	[7261]	CALL     	R2 0 1 ; R2(R3,...)
	35	[7265]	RETURN   	R0 1 ; return 

function #122 <?:7267,7315> (156 instructions, 624 bytes at 0000021130B94DC0)
2 params, 22 slots, 3 upvalues, 0 locals, 31 constants, 0 functions
	1	[7268]	EQ       	1 R0 K0 ; if R0 == nil then PC := 150
	2	[7268]	JMP      	150 ; PC := 150
	3	[7268]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[7268]	GETTABLE 	R3 R0 K2 ; R3 := R0["mStoreItem"]
	5	[7268]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[7268]	TEST     	R2 1 ; if R2 then PC := 150
	7	[7268]	JMP      	150 ; PC := 150
	8	[7269]	GETTABLE 	R2 R0 K3 ; R2 := R0["Name"]
	9	[7270]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 21
	10	[7270]	JMP      	21 ; PC := 21
	11	[7271]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	12	[7271]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x42b04007]
	13	[7271]	GETGLOBAL	R5 K6 ; R5 := 0x64fb1586
	14	[7271]	GETTABLE 	R6 R0 K2 ; R6 := R0["mStoreItem"]
	15	[7271]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xd3a9d01f]
	16	[7271]	CALL     	R6 2 0 ; R6,... := R6(R7)
	17	[7271]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	18	[7271]	OP_LOADBOOL	R6 1 0 ; R6 := true
	19	[7271]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	20	[7271]	MOVE     	R2 R3 ; R2 := R3
	21	[7273]	GETTABLE 	R3 R0 K8 ; R3 := R0["LocalizedDesc"]
	22	[7274]	EQ       	0 R3 K0 ; if R3 ~= nil then PC := 34
	23	[7274]	JMP      	34 ; PC := 34
	24	[7275]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	25	[7275]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x42b04007]
	26	[7275]	GETGLOBAL	R6 K6 ; R6 := 0x64fb1586
	27	[7275]	GETTABLE 	R7 R0 K2 ; R7 := R0["mStoreItem"]
	28	[7275]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0x5ba460ac]
	29	[7275]	CALL     	R7 2 0 ; R7,... := R7(R8)
	30	[7275]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	31	[7275]	OP_LOADBOOL	R7 1 0 ; R7 := true
	32	[7275]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	33	[7275]	MOVE     	R3 R4 ; R3 := R4
	34	[7278]	GETUPVAL 	R4 U0 ; R4 := U0
	35	[7278]	GETTABLE 	R4 R4 K10 ; R4 := R4[0x06d055f9]
	36	[7278]	GETUPVAL 	R5 U1 ; R5 := U1
	37	[7278]	LOADK    	R6 K11 ; R6 := "Arial Unicode MS"
	38	[7278]	LOADK    	R7 K12 ; R7 := "Noto Sans"
	39	[7278]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	40	[7279]	LOADK    	R5 := 18.000000
	41	[7280]	GETUPVAL 	R6 U2 ; R6 := U2
	42	[7280]	GETTABLE 	R6 R6 K13 ; R6 := R6["CosmeticDescOrigWidth"]
	43	[7280]	EQ       	1 R6 K0 ; if R6 == nil then PC := 114
	44	[7280]	JMP      	114 ; PC := 114
	45	[7281]	GETGLOBAL	R6 K4 ; R6 := 0xae91e43b
	46	[7281]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x91a24e4b]
	47	[7281]	LOADK    	R8 K15 ; R8 := "CosmeticDesc"
	48	[7281]	LOADK    	R9 := 12.000000
	49	[7281]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	50	[7282]	GETUPVAL 	R7 U2 ; R7 := U2
	51	[7282]	GETTABLE 	R7 R7 K13 ; R7 := R7["CosmeticDescOrigWidth"]
	52	[7282]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 73
	53	[7282]	JMP      	73 ; PC := 73
	54	[7283]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	55	[7283]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x67bc869f]
	56	[7283]	LOADK    	R9 K15 ; R9 := "CosmeticDesc"
	57	[7283]	LOADK    	R10 := 5.000000
	58	[7283]	LOADK    	R11 := 100.000000
	59	[7283]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	60	[7284]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	61	[7284]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x67bc869f]
	62	[7284]	LOADK    	R9 K15 ; R9 := "CosmeticDesc"
	63	[7284]	LOADK    	R10 := 6.000000
	64	[7284]	LOADK    	R11 := 100.000000
	65	[7284]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	66	[7285]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	67	[7285]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x67bc869f]
	68	[7285]	LOADK    	R9 K15 ; R9 := "CosmeticDesc"
	69	[7285]	LOADK    	R10 := 12.000000
	70	[7285]	GETUPVAL 	R11 U2 ; R11 := U2
	71	[7285]	GETTABLE 	R11 R11 K13 ; R11 := R11["CosmeticDescOrigWidth"]
	72	[7285]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	73	[7288]	GETGLOBAL	R7 K17 ; R7 := 0xc8802016
	74	[7288]	GETGLOBAL	R8 K18 ; R8 := 0x4c2b1f7e
	75	[7288]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	76	[7288]	JMP      	112 ; PC := 112
	77	[7289]	GETTABLE 	R12 R0 K2 ; R12 := R0["mStoreItem"]
	78	[7289]	EQ       	0 R12 R11 ; if R12 ~= R11 then PC := 112
	79	[7289]	JMP      	112 ; PC := 112
	80	[7290]	LOADK    	R4 K11 ; R4 := "Arial Unicode MS"
	81	[7291]	LOADK    	R5 := 12.000000
	82	[7292]	GETGLOBAL	R12 K4 ; R12 := 0xae91e43b
	83	[7292]	SELF     	R12 R12 K19 ; R13 := R12; R12 := R12[0x6b837788]
	84	[7292]	CALL     	R12 2 2 ; R12 := R12(R13)
	85	[7293]	GETGLOBAL	R13 K4 ; R13 := 0xae91e43b
	86	[7293]	SELF     	R13 R13 K20 ; R14 := R13; R13 := R13[0x091c120e]
	87	[7293]	CALL     	R13 2 2 ; R13 := R13(R14)
	88	[7294]	LT       	0 R12 R13 ; if R12 >= R13 then PC := 114
	89	[7294]	JMP      	114 ; PC := 114
	90	[7295]	DIV      	R14 R13 R12 ; R14 := R13 / R12
	91	[7296]	GETGLOBAL	R15 K4 ; R15 := 0xae91e43b
	92	[7296]	SELF     	R15 R15 K16 ; R16 := R15; R15 := R15[0x67bc869f]
	93	[7296]	LOADK    	R17 K15 ; R17 := "CosmeticDesc"
	94	[7296]	LOADK    	R18 := 5.000000
	95	[7296]	MUL      	R19 K21 R14 ; R19 := 100.000000 * R14
	96	[7296]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	97	[7297]	GETGLOBAL	R15 K4 ; R15 := 0xae91e43b
	98	[7297]	SELF     	R15 R15 K16 ; R16 := R15; R15 := R15[0x67bc869f]
	99	[7297]	LOADK    	R17 K15 ; R17 := "CosmeticDesc"
	100	[7297]	LOADK    	R18 := 6.000000
	101	[7297]	MUL      	R19 K21 R14 ; R19 := 100.000000 * R14
	102	[7297]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	103	[7298]	GETGLOBAL	R15 K4 ; R15 := 0xae91e43b
	104	[7298]	SELF     	R15 R15 K16 ; R16 := R15; R15 := R15[0x67bc869f]
	105	[7298]	LOADK    	R17 K15 ; R17 := "CosmeticDesc"
	106	[7298]	LOADK    	R18 := 12.000000
	107	[7298]	GETUPVAL 	R19 U2 ; R19 := U2
	108	[7298]	GETTABLE 	R19 R19 K13 ; R19 := R19["CosmeticDescOrigWidth"]
	109	[7298]	DIV      	R19 R19 R14 ; R19 := R19 / R14
	110	[7298]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	111	[7300]	JMP      	114 ; PC := 114
	112	[7288]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 77; R9 := R10 end
	113	[7301]	JMP      	77 ; PC := 77
	114	[7304]	LEN      	R15 R1 ; R15 := # R1
	115	[7304]	LT       	0 K22 R15 ; if 0.000000 >= R15 then PC := 120
	116	[7304]	JMP      	120 ; PC := 120
	117	[7305]	MOVE     	R15 R3 ; R15 := R3
	118	[7305]	MOVE     	R16 R1 ; R16 := R1
	119	[7305]	CONCAT   	R3 R15 R16 ; R3 := R15 .. R16
	120	[7307]	LOADK    	R15 K23 ; R15 := "<p><font face=\""
	121	[7307]	MOVE     	R16 R4 ; R16 := R4
	122	[7307]	LOADK    	R17 K24 ; R17 := "\"><b>"
	123	[7307]	GETGLOBAL	R18 K25 ; R18 := 0x7f5022cf
	124	[7307]	GETTABLE 	R18 R18 K26 ; R18 := R18[0x3f3e4d12]
	125	[7307]	MOVE     	R19 R2 ; R19 := R2
	126	[7307]	CALL     	R18 2 2 ; R18 := R18(R19)
	127	[7307]	LOADK    	R19 K27 ; R19 := "</b><br>"
	128	[7307]	MOVE     	R20 R3 ; R20 := R3
	129	[7307]	LOADK    	R21 K28 ; R21 := "</font></p>"
	130	[7307]	CONCAT   	R15 R15 R21 ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21
	131	[7309]	GETGLOBAL	R16 K4 ; R16 := 0xae91e43b
	132	[7309]	SELF     	R16 R16 K29 ; R17 := R16; R16 := R16[0x5f56eeab]
	133	[7309]	LOADK    	R18 K15 ; R18 := "CosmeticDesc"
	134	[7309]	LOADK    	R19 := 41.000000
	135	[7309]	MOVE     	R20 R4 ; R20 := R4
	136	[7309]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	137	[7310]	GETGLOBAL	R16 K4 ; R16 := 0xae91e43b
	138	[7310]	SELF     	R16 R16 K16 ; R17 := R16; R16 := R16[0x67bc869f]
	139	[7310]	LOADK    	R18 K15 ; R18 := "CosmeticDesc"
	140	[7310]	LOADK    	R19 := 42.000000
	141	[7310]	MOVE     	R20 R5 ; R20 := R5
	142	[7310]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	143	[7311]	GETGLOBAL	R16 K4 ; R16 := 0xae91e43b
	144	[7311]	SELF     	R16 R16 K29 ; R17 := R16; R16 := R16[0x5f56eeab]
	145	[7311]	LOADK    	R18 K15 ; R18 := "CosmeticDesc"
	146	[7311]	LOADK    	R19 := 29.000000
	147	[7311]	MOVE     	R20 R15 ; R20 := R15
	148	[7311]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	149	[7311]	JMP      	156 ; PC := 156
	150	[7313]	GETGLOBAL	R16 K4 ; R16 := 0xae91e43b
	151	[7313]	SELF     	R16 R16 K29 ; R17 := R16; R16 := R16[0x5f56eeab]
	152	[7313]	LOADK    	R18 K15 ; R18 := "CosmeticDesc"
	153	[7313]	LOADK    	R19 := 29.000000
	154	[7313]	LOADK    	R20 K30 ; R20 := ""
	155	[7313]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	156	[7315]	RETURN   	R0 1 ; return 

function #123 <?:7317,7552> (737 instructions, 2948 bytes at 0000021130B95550)
1 param, 61 slots, 7 upvalues, 0 locals, 87 constants, 0 functions
	1	[7318]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7318]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[7318]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[7318]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7318]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[7318]	JMP      	8 ; PC := 8
	7	[7319]	RETURN   	R0 1 ; return 
	8	[7322]	LOADNIL  	R1 R1 ; R1 := nil
	9	[7324]	GETGLOBAL	R2 K1 ; R2 := mSelected
	10	[7324]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	11	[7324]	GETTABLE 	R2 R2 K3 ; R2 := R2["LoadOutType"]
	12	[7324]	EQ       	0 R2 K5 ; if R2 ~= 8.000000 then PC := 23
	13	[7324]	JMP      	23 ; PC := 23
	14	[7324]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	15	[7324]	GETGLOBAL	R3 K6 ; R3 := _T
	16	[7324]	GETTABLE 	R3 R3 K7 ; R3 := R3["MechAvatar"]
	17	[7324]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[7324]	TEST     	R2 1 ; if R2 then PC := 23
	19	[7324]	JMP      	23 ; PC := 23
	20	[7325]	GETGLOBAL	R2 K6 ; R2 := _T
	21	[7325]	GETTABLE 	R1 R2 K7 ; R1 := R2["MechAvatar"]
	22	[7325]	JMP      	55 ; PC := 55
	23	[7326]	GETGLOBAL	R2 K1 ; R2 := mSelected
	24	[7326]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	25	[7326]	GETTABLE 	R2 R2 K3 ; R2 := R2["LoadOutType"]
	26	[7326]	EQ       	0 R2 K8 ; if R2 ~= 1.000000 then PC := 31
	27	[7326]	JMP      	31 ; PC := 31
	28	[7327]	GETGLOBAL	R2 K6 ; R2 := _T
	29	[7327]	GETTABLE 	R1 R2 K9 ; R1 := R2["MenuSentinel"]
	30	[7327]	JMP      	55 ; PC := 55
	31	[7328]	GETGLOBAL	R2 K6 ; R2 := _T
	32	[7328]	GETTABLE 	R2 R2 K10 ; R2 := R2["mSpecialSuitMode"]
	33	[7328]	TEST     	R2 0 ; if not R2 then PC := 38
	34	[7328]	JMP      	38 ; PC := 38
	35	[7329]	GETGLOBAL	R2 K6 ; R2 := _T
	36	[7329]	GETTABLE 	R1 R2 K11 ; R1 := R2["SpecialSuitAvatar"]
	37	[7329]	JMP      	55 ; PC := 55
	38	[7330]	GETGLOBAL	R2 K1 ; R2 := mSelected
	39	[7330]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	40	[7330]	GETTABLE 	R2 R2 K12 ; R2 := R2["LoadOutId"]
	41	[7330]	GETUPVAL 	R3 U0 ; R3 := U0
	42	[7330]	GETTABLE 	R3 R3 K13 ; R3 := R3["KDriveSlot"]
	43	[7330]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 53
	44	[7330]	JMP      	53 ; PC := 53
	45	[7330]	GETGLOBAL	R2 K1 ; R2 := mSelected
	46	[7330]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	47	[7330]	GETTABLE 	R2 R2 K3 ; R2 := R2["LoadOutType"]
	48	[7330]	EQ       	0 R2 K14 ; if R2 ~= 6.000000 then PC := 53
	49	[7330]	JMP      	53 ; PC := 53
	50	[7331]	GETGLOBAL	R2 K6 ; R2 := _T
	51	[7331]	GETTABLE 	R1 R2 K15 ; R1 := R2["KDriveAvatar"]
	52	[7331]	JMP      	55 ; PC := 55
	53	[7333]	GETGLOBAL	R2 K6 ; R2 := _T
	54	[7333]	GETTABLE 	R1 R2 K16 ; R1 := R2["MenuSuitAvatar"]
	55	[7336]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	56	[7336]	MOVE     	R3 R1 ; R3 := R1
	57	[7336]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[7336]	TEST     	R2 0 ; if not R2 then PC := 61
	59	[7336]	JMP      	61 ; PC := 61
	60	[7337]	RETURN   	R0 1 ; return 
	61	[7340]	LOADNIL  	R2 R2 ; R2 := nil
	62	[7341]	GETGLOBAL	R3 K1 ; R3 := mSelected
	63	[7341]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	64	[7341]	GETTABLE 	R3 R3 K12 ; R3 := R3["LoadOutId"]
	65	[7341]	EQ       	0 R3 K17 ; if R3 ~= 0.000000 then PC := 97
	66	[7341]	JMP      	97 ; PC := 97
	67	[7342]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	68	[7342]	CALL     	R3 2 2 ; R3 := R3(R4)
	69	[7342]	SELF     	R3 R3 K19 ; R4 := R3; R3 := R3[0xac03381f]
	70	[7342]	CALL     	R3 2 2 ; R3 := R3(R4)
	71	[7342]	TEST     	R3 0 ; if not R3 then PC := 79
	72	[7342]	JMP      	79 ; PC := 79
	73	[7343]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	74	[7343]	CALL     	R3 2 2 ; R3 := R3(R4)
	75	[7343]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0x2303a280]
	76	[7343]	CALL     	R3 2 2 ; R3 := R3(R4)
	77	[7343]	MOVE     	R2 R3 ; R2 := R3
	78	[7343]	JMP      	176 ; PC := 176
	79	[7344]	GETGLOBAL	R3 K1 ; R3 := mSelected
	80	[7344]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	81	[7344]	GETTABLE 	R3 R3 K3 ; R3 := R3["LoadOutType"]
	82	[7344]	EQ       	0 R3 K21 ; if R3 ~= 7.000000 then PC := 91
	83	[7344]	JMP      	91 ; PC := 91
	84	[7345]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	85	[7345]	CALL     	R3 2 2 ; R3 := R3(R4)
	86	[7345]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xe85a2361]
	87	[7345]	LOADK    	R5 := 11.000000
	88	[7345]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	89	[7345]	MOVE     	R2 R3 ; R2 := R3
	90	[7345]	JMP      	176 ; PC := 176
	91	[7347]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	92	[7347]	CALL     	R3 2 2 ; R3 := R3(R4)
	93	[7347]	SELF     	R3 R3 K24 ; R4 := R3; R3 := R3[0xf7d48ee0]
	94	[7347]	CALL     	R3 2 2 ; R3 := R3(R4)
	95	[7347]	MOVE     	R2 R3 ; R2 := R3
	96	[7348]	JMP      	176 ; PC := 176
	97	[7349]	GETGLOBAL	R3 K1 ; R3 := mSelected
	98	[7349]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	99	[7349]	GETTABLE 	R3 R3 K12 ; R3 := R3["LoadOutId"]
	100	[7349]	EQ       	0 R3 K25 ; if R3 ~= 2.000000 then PC := 125
	101	[7349]	JMP      	125 ; PC := 125
	102	[7350]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	103	[7350]	CALL     	R3 2 2 ; R3 := R3(R4)
	104	[7350]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xe85a2361]
	105	[7350]	LOADK    	R5 := 1.000000
	106	[7350]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	107	[7350]	MOVE     	R2 R3 ; R2 := R3
	108	[7351]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	109	[7351]	MOVE     	R4 R2 ; R4 := R2
	110	[7351]	CALL     	R3 2 2 ; R3 := R3(R4)
	111	[7351]	TEST     	R3 0 ; if not R3 then PC := 176
	112	[7351]	JMP      	176 ; PC := 176
	113	[7351]	GETGLOBAL	R3 K1 ; R3 := mSelected
	114	[7351]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	115	[7351]	GETTABLE 	R3 R3 K3 ; R3 := R3["LoadOutType"]
	116	[7351]	EQ       	0 R3 K8 ; if R3 ~= 1.000000 then PC := 176
	117	[7351]	JMP      	176 ; PC := 176
	118	[7352]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	119	[7352]	CALL     	R3 2 2 ; R3 := R3(R4)
	120	[7352]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xe85a2361]
	121	[7352]	LOADK    	R5 := 0.000000
	122	[7352]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	123	[7352]	MOVE     	R2 R3 ; R2 := R3
	124	[7353]	JMP      	176 ; PC := 176
	125	[7354]	GETGLOBAL	R3 K1 ; R3 := mSelected
	126	[7354]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	127	[7354]	GETTABLE 	R3 R3 K12 ; R3 := R3["LoadOutId"]
	128	[7354]	EQ       	0 R3 K8 ; if R3 ~= 1.000000 then PC := 137
	129	[7354]	JMP      	137 ; PC := 137
	130	[7355]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	131	[7355]	CALL     	R3 2 2 ; R3 := R3(R4)
	132	[7355]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xe85a2361]
	133	[7355]	LOADK    	R5 := 0.000000
	134	[7355]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	135	[7355]	MOVE     	R2 R3 ; R2 := R3
	136	[7355]	JMP      	176 ; PC := 176
	137	[7356]	GETGLOBAL	R3 K1 ; R3 := mSelected
	138	[7356]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	139	[7356]	GETTABLE 	R3 R3 K12 ; R3 := R3["LoadOutId"]
	140	[7356]	EQ       	0 R3 K26 ; if R3 ~= 3.000000 then PC := 148
	141	[7356]	JMP      	148 ; PC := 148
	142	[7357]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	143	[7357]	CALL     	R3 2 2 ; R3 := R3(R4)
	144	[7357]	SELF     	R3 R3 K27 ; R4 := R3; R3 := R3[0xbb4a3d82]
	145	[7357]	CALL     	R3 2 2 ; R3 := R3(R4)
	146	[7357]	MOVE     	R2 R3 ; R2 := R3
	147	[7357]	JMP      	176 ; PC := 176
	148	[7358]	GETGLOBAL	R3 K1 ; R3 := mSelected
	149	[7358]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	150	[7358]	GETTABLE 	R3 R3 K12 ; R3 := R3["LoadOutId"]
	151	[7358]	GETGLOBAL	R4 K4 ; R4 := 0x6c97a788
	152	[7358]	GETTABLE 	R4 R4 K28 ; R4 := R4["NUM_NORMAL_LOADOUT_SLOTS"]
	153	[7358]	LE       	0 R4 R3 ; if R4 > R3 then PC := 176
	154	[7358]	JMP      	176 ; PC := 176
	155	[7359]	GETGLOBAL	R3 K6 ; R3 := _T
	156	[7359]	GETTABLE 	R3 R3 K10 ; R3 := R3["mSpecialSuitMode"]
	157	[7359]	TEST     	R3 0 ; if not R3 then PC := 170
	158	[7359]	JMP      	170 ; PC := 170
	159	[7359]	GETGLOBAL	R3 K1 ; R3 := mSelected
	160	[7359]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	161	[7359]	GETTABLE 	R3 R3 K12 ; R3 := R3["LoadOutId"]
	162	[7359]	EQ       	0 R3 K29 ; if R3 ~= 5.000000 then PC := 170
	163	[7359]	JMP      	170 ; PC := 170
	164	[7360]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	165	[7360]	CALL     	R3 2 2 ; R3 := R3(R4)
	166	[7360]	SELF     	R3 R3 K24 ; R4 := R3; R3 := R3[0xf7d48ee0]
	167	[7360]	CALL     	R3 2 2 ; R3 := R3(R4)
	168	[7360]	MOVE     	R2 R3 ; R2 := R3
	169	[7360]	JMP      	176 ; PC := 176
	170	[7362]	SELF     	R3 R1 K18 ; R4 := R1; R3 := R1[0xde321e6f]
	171	[7362]	CALL     	R3 2 2 ; R3 := R3(R4)
	172	[7362]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xe85a2361]
	173	[7362]	LOADK    	R5 := 7.000000
	174	[7362]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	175	[7362]	MOVE     	R2 R3 ; R2 := R3
	176	[7366]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	177	[7366]	MOVE     	R4 R2 ; R4 := R2
	178	[7366]	CALL     	R3 2 2 ; R3 := R3(R4)
	179	[7366]	TEST     	R3 0 ; if not R3 then PC := 182
	180	[7366]	JMP      	182 ; PC := 182
	181	[7367]	RETURN   	R0 1 ; return 
	182	[7370]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	183	[7370]	GETTABLE 	R4 R0 K30 ; R4 := R0["PetTintColor"]
	184	[7370]	CALL     	R3 2 2 ; R3 := R3(R4)
	185	[7370]	TEST     	R3 1 ; if R3 then PC := 194
	186	[7370]	JMP      	194 ; PC := 194
	187	[7372]	GETUPVAL 	R3 U1 ; R3 := U1
	188	[7372]	GETTABLE 	R4 R0 K31 ; R4 := R0["Attribute"]
	189	[7372]	GETTABLE 	R5 R0 K30 ; R5 := R0["PetTintColor"]
	190	[7372]	LOADK    	R6 := 0.000000
	191	[7372]	LOADNIL  	R7 R7 ; R7 := nil
	192	[7372]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	193	[7373]	RETURN   	R0 1 ; return 
	194	[7376]	LOADNIL  	R3 R3 ; R3 := nil
	195	[7377]	GETTABLE 	R4 R0 K32 ; R4 := R0["CosmeticSlot"]
	196	[7379]	LOADNIL  	R5 R5 ; R5 := nil
	197	[7380]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	198	[7380]	GETTABLE 	R7 R0 K33 ; R7 := R0["CustomizationType"]
	199	[7380]	CALL     	R6 2 2 ; R6 := R6(R7)
	200	[7380]	TEST     	R6 1 ; if R6 then PC := 207
	201	[7380]	JMP      	207 ; PC := 207
	202	[7381]	GETTABLE 	R6 R0 K33 ; R6 := R0["CustomizationType"]
	203	[7381]	SELF     	R6 R6 K34 ; R7 := R6; R6 := R6[0xf278f8a1]
	204	[7381]	CALL     	R6 2 2 ; R6 := R6(R7)
	205	[7381]	MOVE     	R5 R6 ; R5 := R6
	206	[7381]	JMP      	229 ; PC := 229
	207	[7382]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	208	[7382]	GETTABLE 	R7 R0 K35 ; R7 := R0["Type"]
	209	[7382]	CALL     	R6 2 2 ; R6 := R6(R7)
	210	[7382]	TEST     	R6 1 ; if R6 then PC := 214
	211	[7382]	JMP      	214 ; PC := 214
	212	[7383]	GETTABLE 	R5 R0 K35 ; R5 := R0["Type"]
	213	[7383]	JMP      	229 ; PC := 229
	214	[7384]	GETTABLE 	R6 R0 K36 ; R6 := R0["mPurchasedInfo"]
	215	[7384]	EQ       	1 R6 K37 ; if R6 == nil then PC := 229
	216	[7384]	JMP      	229 ; PC := 229
	217	[7384]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	218	[7384]	GETTABLE 	R7 R0 K36 ; R7 := R0["mPurchasedInfo"]
	219	[7384]	GETTABLE 	R7 R7 K38 ; R7 := R7["UID"]
	220	[7384]	CALL     	R6 2 2 ; R6 := R6(R7)
	221	[7384]	TEST     	R6 1 ; if R6 then PC := 229
	222	[7384]	JMP      	229 ; PC := 229
	223	[7384]	GETTABLE 	R6 R0 K36 ; R6 := R0["mPurchasedInfo"]
	224	[7384]	GETTABLE 	R6 R6 K38 ; R6 := R6["UID"]
	225	[7384]	EQ       	1 R6 K39 ; if R6 == "" then PC := 229
	226	[7384]	JMP      	229 ; PC := 229
	227	[7385]	GETTABLE 	R6 R0 K36 ; R6 := R0["mPurchasedInfo"]
	228	[7385]	GETTABLE 	R5 R6 K38 ; R5 := R6["UID"]
	229	[7388]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	230	[7388]	MOVE     	R7 R5 ; R7 := R5
	231	[7388]	CALL     	R6 2 2 ; R6 := R6(R7)
	232	[7388]	TEST     	R6 1 ; if R6 then PC := 258
	233	[7388]	JMP      	258 ; PC := 258
	234	[7389]	GETGLOBAL	R6 K40 ; R6 := 0x89326c93
	235	[7389]	SELF     	R6 R6 K41 ; R7 := R6; R6 := R6[0x765dad71]
	236	[7389]	GETGLOBAL	R8 K42 ; R8 := 0xb009bbc6
	237	[7389]	MOVE     	R9 R5 ; R9 := R5
	238	[7389]	CALL     	R8 2 2 ; R8 := R8(R9)
	239	[7389]	MOVE     	R9 R2 ; R9 := R2
	240	[7389]	GETUPVAL 	R10 U2 ; R10 := U2
	241	[7389]	CALL     	R10 1 0 ; R10,... := R10()
	242	[7389]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	243	[7389]	MOVE     	R3 R6 ; R3 := R6
	244	[7390]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	245	[7390]	MOVE     	R7 R3 ; R7 := R3
	246	[7390]	CALL     	R6 2 2 ; R6 := R6(R7)
	247	[7390]	TEST     	R6 1 ; if R6 then PC := 255
	248	[7390]	JMP      	255 ; PC := 255
	249	[7390]	EQ       	1 R4 K37 ; if R4 == nil then PC := 255
	250	[7390]	JMP      	255 ; PC := 255
	251	[7391]	SELF     	R6 R3 K43 ; R7 := R3; R6 := R3[0x63af7fef]
	252	[7391]	MOVE     	R8 R4 ; R8 := R4
	253	[7391]	CALL     	R6 3 1 ; R6(R7,R8)
	254	[7391]	JMP      	258 ; PC := 258
	255	[7393]	GETGLOBAL	R6 K44 ; R6 := 0x3d106989
	256	[7393]	LOADK    	R7 K45 ; R7 := "Couldn't make it!"
	257	[7393]	CALL     	R6 2 1 ; R6(R7)
	258	[7397]	EQ       	0 R4 K37 ; if R4 ~= nil then PC := 261
	259	[7397]	JMP      	261 ; PC := 261
	260	[7398]	RETURN   	R0 1 ; return 
	261	[7401]	SELF     	R6 R2 K46 ; R7 := R2; R6 := R2[0x0ad758cb]
	262	[7401]	CALL     	R6 2 2 ; R6 := R6(R7)
	263	[7403]	NEWTABLE 	R7 0 0 ; R7 := {}
	264	[7405]	LOADK    	R8 := 0.000000
	265	[7405]	SUB      	R9 R6 K8 ; R9 := R6 - 1.000000
	266	[7405]	LOADK    	R10 := 1.000000
	267	[7405]	FORPREP  	R8 574 ; R8 -= R10; PC := 574
	268	[7406]	SELF     	R12 R2 K47 ; R13 := R2; R12 := R2[0xfef27732]
	269	[7406]	MOVE     	R14 R11 ; R14 := R11
	270	[7406]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	271	[7407]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	272	[7407]	MOVE     	R14 R12 ; R14 := R12
	273	[7407]	CALL     	R13 2 2 ; R13 := R13(R14)
	274	[7407]	TEST     	R13 1 ; if R13 then PC := 574
	275	[7407]	JMP      	574 ; PC := 574
	276	[7407]	SELF     	R13 R12 K48 ; R14 := R12; R13 := R12[0xf2deaf69]
	277	[7407]	GETGLOBAL	R15 K49 ; R15 := 0x9166d883
	278	[7407]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	279	[7407]	TEST     	R13 0 ; if not R13 then PC := 574
	280	[7407]	JMP      	574 ; PC := 574
	281	[7408]	SELF     	R13 R12 K50 ; R14 := R12; R13 := R12[0xf4f49d1b]
	282	[7408]	CALL     	R13 2 2 ; R13 := R13(R14)
	283	[7408]	EQ       	0 R13 R4 ; if R13 ~= R4 then PC := 520
	284	[7408]	JMP      	520 ; PC := 520
	285	[7409]	GETGLOBAL	R13 K51 ; R13 := 0x33bdd652
	286	[7409]	GETTABLE 	R13 R13 K52 ; R13 := R13[0x23d5322f]
	287	[7409]	MOVE     	R14 R7 ; R14 := R7
	288	[7409]	MOVE     	R15 R12 ; R15 := R12
	289	[7409]	CALL     	R13 3 1 ; R13(R14,R15)
	290	[7411]	LOADK    	R13 := 0.000000
	291	[7411]	LOADK    	R14 := 20.000000
	292	[7411]	LOADK    	R15 := 1.000000
	293	[7411]	FORPREP  	R13 420 ; R13 -= R15; PC := 420
	294	[7412]	EQ       	1 R16 R4 ; if R16 == R4 then PC := 420
	295	[7412]	JMP      	420 ; PC := 420
	296	[7413]	SELF     	R17 R12 K53 ; R18 := R12; R17 := R12[0x68eb5c84]
	297	[7413]	MOVE     	R19 R16 ; R19 := R16
	298	[7413]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	299	[7414]	LOADNIL  	R18 R18 ; R18 := nil
	300	[7415]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	301	[7415]	MOVE     	R20 R3 ; R20 := R3
	302	[7415]	CALL     	R19 2 2 ; R19 := R19(R20)
	303	[7415]	TEST     	R19 1 ; if R19 then PC := 309
	304	[7415]	JMP      	309 ; PC := 309
	305	[7416]	SELF     	R19 R3 K53 ; R20 := R3; R19 := R3[0x68eb5c84]
	306	[7416]	MOVE     	R21 R16 ; R21 := R16
	307	[7416]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	308	[7416]	MOVE     	R18 R19 ; R18 := R19
	309	[7418]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	310	[7418]	MOVE     	R20 R17 ; R20 := R17
	311	[7418]	CALL     	R19 2 2 ; R19 := R19(R20)
	312	[7418]	TEST     	R19 0 ; if not R19 then PC := 319
	313	[7418]	JMP      	319 ; PC := 319
	314	[7418]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	315	[7418]	MOVE     	R20 R18 ; R20 := R18
	316	[7418]	CALL     	R19 2 2 ; R19 := R19(R20)
	317	[7418]	TEST     	R19 1 ; if R19 then PC := 420
	318	[7418]	JMP      	420 ; PC := 420
	319	[7419]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	320	[7419]	MOVE     	R20 R17 ; R20 := R17
	321	[7419]	CALL     	R19 2 2 ; R19 := R19(R20)
	322	[7419]	TEST     	R19 0 ; if not R19 then PC := 333
	323	[7419]	JMP      	333 ; PC := 333
	324	[7420]	GETGLOBAL	R19 K42 ; R19 := 0xb009bbc6
	325	[7420]	GETGLOBAL	R20 K1 ; R20 := mSelected
	326	[7420]	GETTABLE 	R20 R20 K2 ; R20 := R20["Element"]
	327	[7420]	GETTABLE 	R20 R20 K35 ; R20 := R20["Type"]
	328	[7420]	CALL     	R19 2 2 ; R19 := R19(R20)
	329	[7420]	SELF     	R19 R19 K54 ; R20 := R19; R19 := R19[0x0911ae7c]
	330	[7420]	MOVE     	R21 R16 ; R21 := R16
	331	[7420]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	332	[7420]	MOVE     	R17 R19 ; R17 := R19
	333	[7423]	GETGLOBAL	R19 K1 ; R19 := mSelected
	334	[7423]	GETTABLE 	R19 R19 K2 ; R19 := R19["Element"]
	335	[7423]	GETTABLE 	R19 R19 K55 ; R19 := R19["Customization"]
	336	[7423]	SELF     	R19 R19 K56 ; R20 := R19; R19 := R19[0x2540510f]
	337	[7423]	MOVE     	R21 R16 ; R21 := R16
	338	[7423]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	339	[7424]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	340	[7424]	MOVE     	R21 R19 ; R21 := R19
	341	[7424]	CALL     	R20 2 2 ; R20 := R20(R21)
	342	[7424]	TEST     	R20 1 ; if R20 then PC := 348
	343	[7424]	JMP      	348 ; PC := 348
	344	[7424]	EQ       	1 R17 R19 ; if R17 == R19 then PC := 347
	345	[7424]	JMP      	347 ; PC := 347
	346	[7424]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 347
	347	[7424]	OP_LOADBOOL	R20 1 0 ; R20 := true
	348	[7426]	TEST     	R20 0 ; if not R20 then PC := 420
	349	[7426]	JMP      	420 ; PC := 420
	350	[7428]	LOADK    	R21 := 0.000000
	351	[7428]	SUB      	R22 R6 K8 ; R22 := R6 - 1.000000
	352	[7428]	LOADK    	R23 := 1.000000
	353	[7428]	FORPREP  	R21 380 ; R21 -= R23; PC := 380
	354	[7429]	SELF     	R25 R2 K47 ; R26 := R2; R25 := R2[0xfef27732]
	355	[7429]	MOVE     	R27 R24 ; R27 := R24
	356	[7429]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	357	[7430]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	358	[7430]	MOVE     	R27 R25 ; R27 := R25
	359	[7430]	CALL     	R26 2 2 ; R26 := R26(R27)
	360	[7430]	TEST     	R26 1 ; if R26 then PC := 380
	361	[7430]	JMP      	380 ; PC := 380
	362	[7430]	SELF     	R26 R25 K48 ; R27 := R25; R26 := R25[0xf2deaf69]
	363	[7430]	GETGLOBAL	R28 K49 ; R28 := 0x9166d883
	364	[7430]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	365	[7430]	TEST     	R26 0 ; if not R26 then PC := 380
	366	[7430]	JMP      	380 ; PC := 380
	367	[7431]	SELF     	R26 R25 K50 ; R27 := R25; R26 := R25[0xf4f49d1b]
	368	[7431]	CALL     	R26 2 2 ; R26 := R26(R27)
	369	[7431]	EQ       	0 R26 R16 ; if R26 ~= R16 then PC := 380
	370	[7431]	JMP      	380 ; PC := 380
	371	[7431]	SELF     	R26 R25 K57 ; R27 := R25; R26 := R25[0xcde10c4a]
	372	[7431]	CALL     	R26 2 2 ; R26 := R26(R27)
	373	[7431]	EQ       	0 R26 R17 ; if R26 ~= R17 then PC := 380
	374	[7431]	JMP      	380 ; PC := 380
	375	[7432]	GETGLOBAL	R26 K51 ; R26 := 0x33bdd652
	376	[7432]	GETTABLE 	R26 R26 K52 ; R26 := R26[0x23d5322f]
	377	[7432]	MOVE     	R27 R7 ; R27 := R7
	378	[7432]	MOVE     	R28 R25 ; R28 := R25
	379	[7432]	CALL     	R26 3 1 ; R26(R27,R28)
	380	[7428]	FORLOOP  	R21 354 ; R21 += R23; if R21 <= R22 then begin PC := 354; R24 := R21 end
	381	[7438]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	382	[7438]	MOVE     	R27 R18 ; R27 := R18
	383	[7438]	CALL     	R26 2 2 ; R26 := R26(R27)
	384	[7438]	TEST     	R26 0 ; if not R26 then PC := 395
	385	[7438]	JMP      	395 ; PC := 395
	386	[7439]	GETGLOBAL	R26 K42 ; R26 := 0xb009bbc6
	387	[7439]	GETGLOBAL	R27 K1 ; R27 := mSelected
	388	[7439]	GETTABLE 	R27 R27 K2 ; R27 := R27["Element"]
	389	[7439]	GETTABLE 	R27 R27 K35 ; R27 := R27["Type"]
	390	[7439]	CALL     	R26 2 2 ; R26 := R26(R27)
	391	[7439]	SELF     	R26 R26 K54 ; R27 := R26; R26 := R26[0x0911ae7c]
	392	[7439]	MOVE     	R28 R16 ; R28 := R16
	393	[7439]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	394	[7439]	MOVE     	R18 R26 ; R18 := R26
	395	[7442]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	396	[7442]	MOVE     	R27 R18 ; R27 := R18
	397	[7442]	CALL     	R26 2 2 ; R26 := R26(R27)
	398	[7442]	TEST     	R26 1 ; if R26 then PC := 420
	399	[7442]	JMP      	420 ; PC := 420
	400	[7443]	GETGLOBAL	R26 K40 ; R26 := 0x89326c93
	401	[7443]	SELF     	R26 R26 K41 ; R27 := R26; R26 := R26[0x765dad71]
	402	[7443]	GETGLOBAL	R28 K58 ; R28 := 0x88efc25e
	403	[7443]	MOVE     	R29 R18 ; R29 := R18
	404	[7443]	CALL     	R28 2 2 ; R28 := R28(R29)
	405	[7443]	MOVE     	R29 R2 ; R29 := R2
	406	[7443]	GETUPVAL 	R30 U2 ; R30 := U2
	407	[7443]	CALL     	R30 1 0 ; R30,... := R30()
	408	[7443]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	409	[7444]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	410	[7444]	MOVE     	R28 R26 ; R28 := R26
	411	[7444]	CALL     	R27 2 2 ; R27 := R27(R28)
	412	[7444]	TEST     	R27 1 ; if R27 then PC := 420
	413	[7444]	JMP      	420 ; PC := 420
	414	[7445]	SELF     	R27 R26 K43 ; R28 := R26; R27 := R26[0x63af7fef]
	415	[7445]	MOVE     	R29 R16 ; R29 := R16
	416	[7445]	CALL     	R27 3 1 ; R27(R28,R29)
	417	[7446]	SELF     	R27 R2 K59 ; R28 := R2; R27 := R2[0x5e6704ff]
	418	[7446]	MOVE     	R29 R26 ; R29 := R26
	419	[7446]	CALL     	R27 3 1 ; R27(R28,R29)
	420	[7411]	FORLOOP  	R13 294 ; R13 += R15; if R13 <= R14 then begin PC := 294; R16 := R13 end
	421	[7454]	LOADK    	R27 := 0.000000
	422	[7454]	LOADK    	R28 := 20.000000
	423	[7454]	LOADK    	R29 := 1.000000
	424	[7454]	FORPREP  	R27 519 ; R27 -= R29; PC := 519
	425	[7455]	SELF     	R31 R12 K60 ; R32 := R12; R31 := R12[0xb8ef5b34]
	426	[7455]	MOVE     	R33 R30 ; R33 := R30
	427	[7455]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	428	[7456]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	429	[7456]	MOVE     	R33 R31 ; R33 := R31
	430	[7456]	CALL     	R32 2 2 ; R32 := R32(R33)
	431	[7456]	TEST     	R32 1 ; if R32 then PC := 519
	432	[7456]	JMP      	519 ; PC := 519
	433	[7458]	LOADK    	R32 := 0.000000
	434	[7458]	SUB      	R33 R6 K8 ; R33 := R6 - 1.000000
	435	[7458]	LOADK    	R34 := 1.000000
	436	[7458]	FORPREP  	R32 459 ; R32 -= R34; PC := 459
	437	[7459]	SELF     	R36 R2 K47 ; R37 := R2; R36 := R2[0xfef27732]
	438	[7459]	MOVE     	R38 R35 ; R38 := R35
	439	[7459]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	440	[7460]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	441	[7460]	MOVE     	R38 R36 ; R38 := R36
	442	[7460]	CALL     	R37 2 2 ; R37 := R37(R38)
	443	[7460]	TEST     	R37 1 ; if R37 then PC := 459
	444	[7460]	JMP      	459 ; PC := 459
	445	[7460]	SELF     	R37 R36 K48 ; R38 := R36; R37 := R36[0xf2deaf69]
	446	[7460]	GETGLOBAL	R39 K49 ; R39 := 0x9166d883
	447	[7460]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	448	[7460]	TEST     	R37 0 ; if not R37 then PC := 459
	449	[7460]	JMP      	459 ; PC := 459
	450	[7461]	SELF     	R37 R36 K50 ; R38 := R36; R37 := R36[0xf4f49d1b]
	451	[7461]	CALL     	R37 2 2 ; R37 := R37(R38)
	452	[7461]	EQ       	0 R37 R30 ; if R37 ~= R30 then PC := 459
	453	[7461]	JMP      	459 ; PC := 459
	454	[7462]	GETGLOBAL	R37 K51 ; R37 := 0x33bdd652
	455	[7462]	GETTABLE 	R37 R37 K52 ; R37 := R37[0x23d5322f]
	456	[7462]	MOVE     	R38 R7 ; R38 := R7
	457	[7462]	MOVE     	R39 R36 ; R39 := R36
	458	[7462]	CALL     	R37 3 1 ; R37(R38,R39)
	459	[7458]	FORLOOP  	R32 437 ; R32 += R34; if R32 <= R33 then begin PC := 437; R35 := R32 end
	460	[7467]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	461	[7467]	MOVE     	R38 R3 ; R38 := R3
	462	[7467]	CALL     	R37 2 2 ; R37 := R37(R38)
	463	[7467]	TEST     	R37 1 ; if R37 then PC := 472
	464	[7467]	JMP      	472 ; PC := 472
	465	[7467]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	466	[7467]	SELF     	R38 R3 K60 ; R39 := R3; R38 := R3[0xb8ef5b34]
	467	[7467]	MOVE     	R40 R30 ; R40 := R30
	468	[7467]	CALL     	R38 3 0 ; R38,... := R38(R39,R40)
	469	[7467]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	470	[7467]	TEST     	R37 0 ; if not R37 then PC := 519
	471	[7467]	JMP      	519 ; PC := 519
	472	[7468]	GETGLOBAL	R37 K1 ; R37 := mSelected
	473	[7468]	GETTABLE 	R37 R37 K2 ; R37 := R37["Element"]
	474	[7468]	GETTABLE 	R37 R37 K55 ; R37 := R37["Customization"]
	475	[7468]	SELF     	R37 R37 K56 ; R38 := R37; R37 := R37[0x2540510f]
	476	[7468]	MOVE     	R39 R30 ; R39 := R30
	477	[7468]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	478	[7469]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	479	[7469]	MOVE     	R39 R37 ; R39 := R37
	480	[7469]	CALL     	R38 2 2 ; R38 := R38(R39)
	481	[7469]	TEST     	R38 1 ; if R38 then PC := 485
	482	[7469]	JMP      	485 ; PC := 485
	483	[7469]	EQ       	0 R37 R31 ; if R37 ~= R31 then PC := 494
	484	[7469]	JMP      	494 ; PC := 494
	485	[7470]	GETGLOBAL	R38 K42 ; R38 := 0xb009bbc6
	486	[7470]	GETGLOBAL	R39 K1 ; R39 := mSelected
	487	[7470]	GETTABLE 	R39 R39 K2 ; R39 := R39["Element"]
	488	[7470]	GETTABLE 	R39 R39 K35 ; R39 := R39["Type"]
	489	[7470]	CALL     	R38 2 2 ; R38 := R38(R39)
	490	[7470]	SELF     	R38 R38 K54 ; R39 := R38; R38 := R38[0x0911ae7c]
	491	[7470]	MOVE     	R40 R30 ; R40 := R30
	492	[7470]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	493	[7470]	MOVE     	R37 R38 ; R37 := R38
	494	[7472]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	495	[7472]	MOVE     	R39 R37 ; R39 := R37
	496	[7472]	CALL     	R38 2 2 ; R38 := R38(R39)
	497	[7472]	TEST     	R38 1 ; if R38 then PC := 519
	498	[7472]	JMP      	519 ; PC := 519
	499	[7473]	GETGLOBAL	R38 K40 ; R38 := 0x89326c93
	500	[7473]	SELF     	R38 R38 K41 ; R39 := R38; R38 := R38[0x765dad71]
	501	[7473]	GETGLOBAL	R40 K58 ; R40 := 0x88efc25e
	502	[7473]	MOVE     	R41 R37 ; R41 := R37
	503	[7473]	CALL     	R40 2 2 ; R40 := R40(R41)
	504	[7473]	MOVE     	R41 R2 ; R41 := R2
	505	[7473]	GETUPVAL 	R42 U2 ; R42 := U2
	506	[7473]	CALL     	R42 1 0 ; R42,... := R42()
	507	[7473]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	508	[7474]	GETGLOBAL	R39 K0 ; R39 := 0x7b998233
	509	[7474]	MOVE     	R40 R38 ; R40 := R38
	510	[7474]	CALL     	R39 2 2 ; R39 := R39(R40)
	511	[7474]	TEST     	R39 1 ; if R39 then PC := 519
	512	[7474]	JMP      	519 ; PC := 519
	513	[7475]	SELF     	R39 R38 K43 ; R40 := R38; R39 := R38[0x63af7fef]
	514	[7475]	MOVE     	R41 R30 ; R41 := R30
	515	[7475]	CALL     	R39 3 1 ; R39(R40,R41)
	516	[7476]	SELF     	R39 R2 K59 ; R40 := R2; R39 := R2[0x5e6704ff]
	517	[7476]	MOVE     	R41 R38 ; R41 := R38
	518	[7476]	CALL     	R39 3 1 ; R39(R40,R41)
	519	[7454]	FORLOOP  	R27 425 ; R27 += R29; if R27 <= R28 then begin PC := 425; R30 := R27 end
	520	[7484]	GETGLOBAL	R39 K0 ; R39 := 0x7b998233
	521	[7484]	MOVE     	R40 R3 ; R40 := R3
	522	[7484]	CALL     	R39 2 2 ; R39 := R39(R40)
	523	[7484]	TEST     	R39 1 ; if R39 then PC := 574
	524	[7484]	JMP      	574 ; PC := 574
	525	[7485]	LOADK    	R39 := 0.000000
	526	[7485]	LOADK    	R40 := 20.000000
	527	[7485]	LOADK    	R41 := 1.000000
	528	[7485]	FORPREP  	R39 573 ; R39 -= R41; PC := 573
	529	[7486]	SELF     	R43 R3 K60 ; R44 := R3; R43 := R3[0xb8ef5b34]
	530	[7486]	MOVE     	R45 R42 ; R45 := R42
	531	[7486]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	532	[7487]	SELF     	R44 R3 K53 ; R45 := R3; R44 := R3[0x68eb5c84]
	533	[7487]	MOVE     	R46 R42 ; R46 := R42
	534	[7487]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	535	[7488]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	536	[7488]	MOVE     	R46 R43 ; R46 := R43
	537	[7488]	CALL     	R45 2 2 ; R45 := R45(R46)
	538	[7488]	TEST     	R45 1 ; if R45 then PC := 551
	539	[7488]	JMP      	551 ; PC := 551
	540	[7488]	SELF     	R45 R12 K50 ; R46 := R12; R45 := R12[0xf4f49d1b]
	541	[7488]	CALL     	R45 2 2 ; R45 := R45(R46)
	542	[7488]	EQ       	0 R45 R42 ; if R45 ~= R42 then PC := 551
	543	[7488]	JMP      	551 ; PC := 551
	544	[7489]	GETGLOBAL	R45 K51 ; R45 := 0x33bdd652
	545	[7489]	GETTABLE 	R45 R45 K52 ; R45 := R45[0x23d5322f]
	546	[7489]	MOVE     	R46 R7 ; R46 := R7
	547	[7489]	MOVE     	R47 R12 ; R47 := R12
	548	[7489]	CALL     	R45 3 1 ; R45(R46,R47)
	549	[7490]	JMP      	574 ; PC := 574
	550	[7490]	JMP      	573 ; PC := 573
	551	[7491]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	552	[7491]	MOVE     	R46 R44 ; R46 := R44
	553	[7491]	CALL     	R45 2 2 ; R45 := R45(R46)
	554	[7491]	TEST     	R45 1 ; if R45 then PC := 573
	555	[7491]	JMP      	573 ; PC := 573
	556	[7491]	SELF     	R45 R12 K50 ; R46 := R12; R45 := R12[0xf4f49d1b]
	557	[7491]	CALL     	R45 2 2 ; R45 := R45(R46)
	558	[7491]	EQ       	0 R45 R42 ; if R45 ~= R42 then PC := 573
	559	[7491]	JMP      	573 ; PC := 573
	560	[7491]	SELF     	R45 R12 K57 ; R46 := R12; R45 := R12[0xcde10c4a]
	561	[7491]	CALL     	R45 2 2 ; R45 := R45(R46)
	562	[7491]	SELF     	R46 R2 K54 ; R47 := R2; R46 := R2[0x0911ae7c]
	563	[7491]	MOVE     	R48 R42 ; R48 := R42
	564	[7491]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	565	[7491]	EQ       	0 R45 R46 ; if R45 ~= R46 then PC := 573
	566	[7491]	JMP      	573 ; PC := 573
	567	[7492]	GETGLOBAL	R45 K51 ; R45 := 0x33bdd652
	568	[7492]	GETTABLE 	R45 R45 K52 ; R45 := R45[0x23d5322f]
	569	[7492]	MOVE     	R46 R7 ; R46 := R7
	570	[7492]	MOVE     	R47 R12 ; R47 := R12
	571	[7492]	CALL     	R45 3 1 ; R45(R46,R47)
	572	[7493]	JMP      	574 ; PC := 574
	573	[7485]	FORLOOP  	R39 529 ; R39 += R41; if R39 <= R40 then begin PC := 529; R42 := R39 end
	574	[7405]	FORLOOP  	R8 268 ; R8 += R10; if R8 <= R9 then begin PC := 268; R11 := R8 end
	575	[7500]	GETGLOBAL	R45 K61 ; R45 := 0xcfc01047
	576	[7500]	MOVE     	R46 R7 ; R46 := R7
	577	[7500]	CALL     	R45 2 4 ; R45,R46,R47 := R45(R46)
	578	[7500]	JMP      	591 ; PC := 591
	579	[7501]	GETGLOBAL	R50 K0 ; R50 := 0x7b998233
	580	[7501]	MOVE     	R51 R49 ; R51 := R49
	581	[7501]	CALL     	R50 2 2 ; R50 := R50(R51)
	582	[7501]	TEST     	R50 1 ; if R50 then PC := 591
	583	[7501]	JMP      	591 ; PC := 591
	584	[7502]	SELF     	R50 R2 K62 ; R51 := R2; R50 := R2[0x12dd9da2]
	585	[7502]	MOVE     	R52 R49 ; R52 := R49
	586	[7502]	CALL     	R50 3 1 ; R50(R51,R52)
	587	[7503]	GETGLOBAL	R50 K40 ; R50 := 0x89326c93
	588	[7503]	SELF     	R50 R50 K63 ; R51 := R50; R50 := R50[0x59c96e77]
	589	[7503]	MOVE     	R52 R49 ; R52 := R49
	590	[7503]	CALL     	R50 3 1 ; R50(R51,R52)
	591	[7500]	TFORLOOP 	R45 2 ; R48,R49 := R45(R46,R47); if R48 ~= nil then begin PC = 579; R47 := R48 end
	592	[7504]	JMP      	579 ; PC := 579
	593	[7507]	GETGLOBAL	R50 K0 ; R50 := 0x7b998233
	594	[7507]	MOVE     	R51 R3 ; R51 := R3
	595	[7507]	CALL     	R50 2 2 ; R50 := R50(R51)
	596	[7507]	TEST     	R50 1 ; if R50 then PC := 717
	597	[7507]	JMP      	717 ; PC := 717
	598	[7508]	SELF     	R50 R2 K59 ; R51 := R2; R50 := R2[0x5e6704ff]
	599	[7508]	MOVE     	R52 R3 ; R52 := R3
	600	[7508]	CALL     	R50 3 1 ; R50(R51,R52)
	601	[7510]	LOADK    	R50 := 0.000000
	602	[7510]	LOADK    	R51 := 20.000000
	603	[7510]	LOADK    	R52 := 1.000000
	604	[7510]	FORPREP  	R50 681 ; R50 -= R52; PC := 681
	605	[7511]	GETGLOBAL	R54 K42 ; R54 := 0xb009bbc6
	606	[7511]	SELF     	R55 R3 K60 ; R56 := R3; R55 := R3[0xb8ef5b34]
	607	[7511]	MOVE     	R57 R53 ; R57 := R53
	608	[7511]	CALL     	R55 3 0 ; R55,... := R55(R56,R57)
	609	[7511]	CALL     	R54 0 2 ; R54 := R54(R55,...)
	610	[7512]	GETGLOBAL	R55 K0 ; R55 := 0x7b998233
	611	[7512]	MOVE     	R56 R54 ; R56 := R54
	612	[7512]	CALL     	R55 2 2 ; R55 := R55(R56)
	613	[7512]	TEST     	R55 0 ; if not R55 then PC := 658
	614	[7512]	JMP      	658 ; PC := 658
	615	[7514]	GETGLOBAL	R55 K1 ; R55 := mSelected
	616	[7514]	GETTABLE 	R55 R55 K64 ; R55 := R55["Cosmetic"]
	617	[7514]	GETTABLE 	R55 R55 K65 ; R55 := R55["Slot"]
	618	[7514]	EQ       	0 R55 K21 ; if R55 ~= 7.000000 then PC := 658
	619	[7514]	JMP      	658 ; PC := 658
	620	[7514]	GETGLOBAL	R55 K0 ; R55 := 0x7b998233
	621	[7514]	GETGLOBAL	R56 K1 ; R56 := mSelected
	622	[7514]	GETTABLE 	R56 R56 K2 ; R56 := R56["Element"]
	623	[7514]	GETTABLE 	R56 R56 K35 ; R56 := R56["Type"]
	624	[7514]	CALL     	R55 2 2 ; R55 := R55(R56)
	625	[7514]	TEST     	R55 1 ; if R55 then PC := 658
	626	[7514]	JMP      	658 ; PC := 658
	627	[7514]	GETGLOBAL	R55 K1 ; R55 := mSelected
	628	[7514]	GETTABLE 	R55 R55 K2 ; R55 := R55["Element"]
	629	[7514]	GETTABLE 	R55 R55 K35 ; R55 := R55["Type"]
	630	[7514]	SELF     	R55 R55 K48 ; R56 := R55; R55 := R55[0xf2deaf69]
	631	[7514]	GETGLOBAL	R57 K66 ; R57 := 0x01302fb0
	632	[7514]	CALL     	R55 3 2 ; R55 := R55(R56,R57)
	633	[7514]	TEST     	R55 0 ; if not R55 then PC := 658
	634	[7514]	JMP      	658 ; PC := 658
	635	[7515]	EQ       	0 R53 K67 ; if R53 ~= 9.000000 then PC := 647
	636	[7515]	JMP      	647 ; PC := 647
	637	[7516]	GETGLOBAL	R55 K42 ; R55 := 0xb009bbc6
	638	[7516]	GETGLOBAL	R56 K1 ; R56 := mSelected
	639	[7516]	GETTABLE 	R56 R56 K2 ; R56 := R56["Element"]
	640	[7516]	GETTABLE 	R56 R56 K68 ; R56 := R56["EquippedItem"]
	641	[7516]	GETTABLE 	R56 R56 K69 ; R56 := R56["mDetails"]
	642	[7516]	GETTABLE 	R56 R56 K70 ; R56 := R56["mDominantTraits"]
	643	[7516]	GETTABLE 	R56 R56 K71 ; R56 := R56["mHead"]
	644	[7516]	CALL     	R55 2 2 ; R55 := R55(R56)
	645	[7516]	MOVE     	R54 R55 ; R54 := R55
	646	[7516]	JMP      	658 ; PC := 658
	647	[7517]	EQ       	0 R53 K72 ; if R53 ~= 10.000000 then PC := 658
	648	[7517]	JMP      	658 ; PC := 658
	649	[7518]	GETGLOBAL	R55 K42 ; R55 := 0xb009bbc6
	650	[7518]	GETGLOBAL	R56 K1 ; R56 := mSelected
	651	[7518]	GETTABLE 	R56 R56 K2 ; R56 := R56["Element"]
	652	[7518]	GETTABLE 	R56 R56 K68 ; R56 := R56["EquippedItem"]
	653	[7518]	GETTABLE 	R56 R56 K69 ; R56 := R56["mDetails"]
	654	[7518]	GETTABLE 	R56 R56 K70 ; R56 := R56["mDominantTraits"]
	655	[7518]	GETTABLE 	R56 R56 K73 ; R56 := R56["mTail"]
	656	[7518]	CALL     	R55 2 2 ; R55 := R55(R56)
	657	[7518]	MOVE     	R54 R55 ; R54 := R55
	658	[7523]	GETGLOBAL	R55 K0 ; R55 := 0x7b998233
	659	[7523]	MOVE     	R56 R54 ; R56 := R54
	660	[7523]	CALL     	R55 2 2 ; R55 := R55(R56)
	661	[7523]	TEST     	R55 1 ; if R55 then PC := 681
	662	[7523]	JMP      	681 ; PC := 681
	663	[7524]	GETGLOBAL	R55 K40 ; R55 := 0x89326c93
	664	[7524]	SELF     	R55 R55 K41 ; R56 := R55; R55 := R55[0x765dad71]
	665	[7524]	MOVE     	R57 R54 ; R57 := R54
	666	[7524]	MOVE     	R58 R2 ; R58 := R2
	667	[7524]	GETUPVAL 	R59 U2 ; R59 := U2
	668	[7524]	CALL     	R59 1 0 ; R59,... := R59()
	669	[7524]	CALL     	R55 0 2 ; R55 := R55(R56,...)
	670	[7525]	GETGLOBAL	R56 K0 ; R56 := 0x7b998233
	671	[7525]	MOVE     	R57 R55 ; R57 := R55
	672	[7525]	CALL     	R56 2 2 ; R56 := R56(R57)
	673	[7525]	TEST     	R56 1 ; if R56 then PC := 681
	674	[7525]	JMP      	681 ; PC := 681
	675	[7526]	SELF     	R56 R55 K43 ; R57 := R55; R56 := R55[0x63af7fef]
	676	[7526]	MOVE     	R58 R53 ; R58 := R53
	677	[7526]	CALL     	R56 3 1 ; R56(R57,R58)
	678	[7527]	SELF     	R56 R2 K59 ; R57 := R2; R56 := R2[0x5e6704ff]
	679	[7527]	MOVE     	R58 R55 ; R58 := R55
	680	[7527]	CALL     	R56 3 1 ; R56(R57,R58)
	681	[7510]	FORLOOP  	R50 605 ; R50 += R52; if R50 <= R51 then begin PC := 605; R53 := R50 end
	682	[7532]	GETGLOBAL	R56 K74 ; R56 := mLists
	683	[7532]	GETTABLE 	R56 R56 K75 ; R56 := R56["mCosmeticsList"]
	684	[7532]	GETTABLE 	R56 R56 K76 ; R56 := R56["mCurrLevel"]
	685	[7532]	GETGLOBAL	R57 K74 ; R57 := mLists
	686	[7532]	GETTABLE 	R57 R57 K75 ; R57 := R57["mCosmeticsList"]
	687	[7532]	GETTABLE 	R57 R57 K77 ; R57 := R57["HOLSTER_STYLE"]
	688	[7532]	EQ       	1 R56 R57 ; if R56 == R57 then PC := 698
	689	[7532]	JMP      	698 ; PC := 698
	690	[7532]	GETGLOBAL	R56 K74 ; R56 := mLists
	691	[7532]	GETTABLE 	R56 R56 K75 ; R56 := R56["mCosmeticsList"]
	692	[7532]	GETTABLE 	R56 R56 K76 ; R56 := R56["mCurrLevel"]
	693	[7532]	GETGLOBAL	R57 K74 ; R57 := mLists
	694	[7532]	GETTABLE 	R57 R57 K75 ; R57 := R57["mCosmeticsList"]
	695	[7532]	GETTABLE 	R57 R57 K78 ; R57 := R57["HOLSTER_CUSTOMIZATION"]
	696	[7532]	EQ       	0 R56 R57 ; if R56 ~= R57 then PC := 700
	697	[7532]	JMP      	700 ; PC := 700
	698	[7533]	LOADK    	R56 := 4.000000
	699	[7533]	SETUPVAL 	R56 U3 ; U3 := R56
	700	[7536]	SELF     	R56 R3 K48 ; R57 := R3; R56 := R3[0xf2deaf69]
	701	[7536]	GETGLOBAL	R58 K79 ; R58 := gLotusMoaPetPersonalityType
	702	[7536]	CALL     	R56 3 2 ; R56 := R56(R57,R58)
	703	[7536]	TEST     	R56 0 ; if not R56 then PC := 717
	704	[7536]	JMP      	717 ; PC := 717
	705	[7537]	GETUPVAL 	R56 U4 ; R56 := U4
	706	[7537]	LOADK    	R57 := 3.000000
	707	[7537]	CALL     	R56 2 2 ; R56 := R56(R57)
	708	[7538]	GETGLOBAL	R57 K0 ; R57 := 0x7b998233
	709	[7538]	MOVE     	R58 R56 ; R58 := R56
	710	[7538]	CALL     	R57 2 2 ; R57 := R57(R58)
	711	[7538]	TEST     	R57 1 ; if R57 then PC := 717
	712	[7538]	JMP      	717 ; PC := 717
	713	[7539]	SELF     	R57 R56 K80 ; R58 := R56; R57 := R56[0x929a9715]
	714	[7539]	LOADK    	R59 := 5.000000
	715	[7539]	OP_LOADBOOL	R60 1 0 ; R60 := true
	716	[7539]	CALL     	R57 4 1 ; R57(R58,R59,R60)
	717	[7544]	GETUPVAL 	R57 U5 ; R57 := U5
	718	[7544]	MOVE     	R58 R0 ; R58 := R0
	719	[7544]	CALL     	R57 2 1 ; R57(R58)
	720	[7546]	SELF     	R57 R2 K81 ; R58 := R2; R57 := R2[0xc4f8c7f7]
	721	[7546]	MOVE     	R59 R1 ; R59 := R1
	722	[7546]	CALL     	R57 3 1 ; R57(R58,R59)
	723	[7547]	SELF     	R57 R2 K82 ; R58 := R2; R57 := R2[0xdfb47e85]
	724	[7547]	MOVE     	R59 R1 ; R59 := R1
	725	[7547]	CALL     	R57 3 1 ; R57(R58,R59)
	726	[7549]	SELF     	R57 R2 K48 ; R58 := R2; R57 := R2[0xf2deaf69]
	727	[7549]	GETGLOBAL	R59 K83 ; R59 := gLotusMeleeWeaponType
	728	[7549]	CALL     	R57 3 2 ; R57 := R57(R58,R59)
	729	[7549]	TEST     	R57 0 ; if not R57 then PC := 737
	730	[7549]	JMP      	737 ; PC := 737
	731	[7550]	GETGLOBAL	R57 K84 ; R57 := mTimerTable
	732	[7550]	GETTABLE 	R57 R57 K85 ; R57 := R57["mTimerMgr"]
	733	[7550]	SELF     	R57 R57 K86 ; R58 := R57; R57 := R57[0xbd2e96ea]
	734	[7550]	LOADK    	R59 := 0.000000
	735	[7550]	GETUPVAL 	R60 U6 ; R60 := U6
	736	[7550]	CALL     	R57 4 1 ; R57(R58,R59,R60)
	737	[7552]	RETURN   	R0 1 ; return 

function #124 <?:7554,7559> (20 instructions, 80 bytes at 0000021130B972A0)
1 param, 6 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[7555]	LEN      	R1 R0 ; R1 := # R0
	2	[7555]	LT       	0 K0 R1 ; if 0.000000 >= R1 then PC := 20
	3	[7555]	JMP      	20 ; PC := 20
	4	[7556]	LOADK    	R1 K1 ; R1 := "<br><br><b>"
	5	[7556]	GETGLOBAL	R2 K2 ; R2 := 0x7f5022cf
	6	[7556]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x3f3e4d12]
	7	[7556]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	8	[7556]	LOADK    	R4 K5 ; R4 := "/EE_Menus/Challenges_Progress"
	9	[7556]	NEWTABLE 	R5 0 0 ; R5 := {}
	10	[7556]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	11	[7556]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	12	[7556]	LOADK    	R3 K6 ; R3 := "</b><br>"
	13	[7556]	MOVE     	R4 R0 ; R4 := R0
	14	[7556]	CONCAT   	R0 R1 R4 ; R0 := R1 .. R2 .. R3 .. R4
	15	[7557]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[7557]	GETGLOBAL	R2 K7 ; R2 := mSelected
	17	[7557]	GETTABLE 	R2 R2 K8 ; R2 := R2["Item"]
	18	[7557]	MOVE     	R3 R0 ; R3 := R0
	19	[7557]	CALL     	R1 3 1 ; R1(R2,R3)
	20	[7559]	RETURN   	R0 1 ; return 

function #125 <?:7561,7565> (13 instructions, 52 bytes at 0000021130B97490)
0 params, 2 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[7562]	GETGLOBAL	R0 K0 ; R0 := mSelected
	2	[7562]	EQ       	1 R0 K1 ; if R0 == nil then PC := 13
	3	[7562]	JMP      	13 ; PC := 13
	4	[7562]	GETGLOBAL	R0 K0 ; R0 := mSelected
	5	[7562]	GETTABLE 	R0 R0 K2 ; R0 := R0["Item"]
	6	[7562]	EQ       	1 R0 K1 ; if R0 == nil then PC := 13
	7	[7562]	JMP      	13 ; PC := 13
	8	[7563]	GETGLOBAL	R0 K3 ; R0 := _T
	9	[7563]	GETGLOBAL	R1 K0 ; R1 := mSelected
	10	[7563]	GETTABLE 	R1 R1 K2 ; R1 := R1["Item"]
	11	[7563]	GETTABLE 	R1 R1 K5 ; R1 := R1["CosmeticSlot"]
	12	[7563]	SETTABLE 	R0 K4 R1 ; R0["LoadOutSelectedSlot"] := R1
	13	[7565]	RETURN   	R0 1 ; return 

function #126 <?:7567,7578> (61 instructions, 244 bytes at 0000021130B97630)
1 param, 9 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[7568]	GETGLOBAL	R1 K0 ; R1 := mSelected
	2	[7568]	GETTABLE 	R1 R1 K1 ; R1 := R1["Item"]
	3	[7568]	EQ       	1 R1 K2 ; if R1 == nil then PC := 31
	4	[7568]	JMP      	31 ; PC := 31
	5	[7569]	GETGLOBAL	R1 K0 ; R1 := mSelected
	6	[7569]	GETTABLE 	R1 R1 K1 ; R1 := R1["Item"]
	7	[7569]	SETGLOBALHASH	R1 K3 ; mPrevSelection := R1
	8	[7570]	GETGLOBAL	R1 K0 ; R1 := mSelected
	9	[7570]	GETTABLE 	R1 R1 K1 ; R1 := R1["Item"]
	10	[7570]	GETTABLE 	R1 R1 K4 ; R1 := R1["mClipName"]
	11	[7570]	EQ       	1 R1 K2 ; if R1 == nil then PC := 31
	12	[7570]	JMP      	31 ; PC := 31
	13	[7571]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	14	[7571]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x91e13703]
	15	[7571]	GETGLOBAL	R3 K3 ; R3 := mPrevSelection
	16	[7571]	GETTABLE 	R3 R3 K4 ; R3 := R3["mClipName"]
	17	[7571]	LOADK    	R4 K7 ; R4 := ".Background"
	18	[7571]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	19	[7571]	LOADK    	R4 K8 ; R4 := "RectInnerColor"
	20	[7571]	GETGLOBAL	R5 K9 ; R5 := 0x0032441c
	21	[7571]	GETTABLE 	R5 R5 K10 ; R5 := R5["UIColorObject_White"]
	22	[7571]	GETTABLE 	R5 R5 K11 ; R5 := R5["r"]
	23	[7571]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	24	[7571]	GETTABLE 	R6 R6 K10 ; R6 := R6["UIColorObject_White"]
	25	[7571]	GETTABLE 	R6 R6 K12 ; R6 := R6["g"]
	26	[7571]	GETGLOBAL	R7 K9 ; R7 := 0x0032441c
	27	[7571]	GETTABLE 	R7 R7 K10 ; R7 := R7["UIColorObject_White"]
	28	[7571]	GETTABLE 	R7 R7 K13 ; R7 := R7["b"]
	29	[7571]	LOADK    	R8 K14 ; R8 := 0.100000
	30	[7571]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	31	[7574]	GETGLOBAL	R1 K0 ; R1 := mSelected
	32	[7574]	SETTABLE 	R1 K1 R0 ; R1["Item"] := R0
	33	[7575]	GETGLOBAL	R1 K0 ; R1 := mSelected
	34	[7575]	GETTABLE 	R1 R1 K1 ; R1 := R1["Item"]
	35	[7575]	EQ       	1 R1 K2 ; if R1 == nil then PC := 61
	36	[7575]	JMP      	61 ; PC := 61
	37	[7575]	GETGLOBAL	R1 K0 ; R1 := mSelected
	38	[7575]	GETTABLE 	R1 R1 K1 ; R1 := R1["Item"]
	39	[7575]	GETTABLE 	R1 R1 K4 ; R1 := R1["mClipName"]
	40	[7575]	EQ       	1 R1 K2 ; if R1 == nil then PC := 61
	41	[7575]	JMP      	61 ; PC := 61
	42	[7576]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	43	[7576]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x91e13703]
	44	[7576]	GETGLOBAL	R3 K0 ; R3 := mSelected
	45	[7576]	GETTABLE 	R3 R3 K1 ; R3 := R3["Item"]
	46	[7576]	GETTABLE 	R3 R3 K4 ; R3 := R3["mClipName"]
	47	[7576]	LOADK    	R4 K7 ; R4 := ".Background"
	48	[7576]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	49	[7576]	LOADK    	R4 K8 ; R4 := "RectInnerColor"
	50	[7576]	GETGLOBAL	R5 K9 ; R5 := 0x0032441c
	51	[7576]	GETTABLE 	R5 R5 K10 ; R5 := R5["UIColorObject_White"]
	52	[7576]	GETTABLE 	R5 R5 K11 ; R5 := R5["r"]
	53	[7576]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	54	[7576]	GETTABLE 	R6 R6 K10 ; R6 := R6["UIColorObject_White"]
	55	[7576]	GETTABLE 	R6 R6 K12 ; R6 := R6["g"]
	56	[7576]	GETGLOBAL	R7 K9 ; R7 := 0x0032441c
	57	[7576]	GETTABLE 	R7 R7 K10 ; R7 := R7["UIColorObject_White"]
	58	[7576]	GETTABLE 	R7 R7 K13 ; R7 := R7["b"]
	59	[7576]	LOADK    	R8 K15 ; R8 := 0.400000
	60	[7576]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	61	[7578]	RETURN   	R0 1 ; return 

function #127 <?:7580,7901> (1133 instructions, 4532 bytes at 0000021130B979F0)
1 param, 53 slots, 13 upvalues, 0 locals, 115 constants, 0 functions
	1	[7581]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7581]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[7581]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7581]	TEST     	R1 1 ; if R1 then PC := 12
	5	[7581]	JMP      	12 ; PC := 12
	6	[7581]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[7581]	GETGLOBAL	R2 K2 ; R2 := mSelected
	8	[7581]	GETTABLE 	R2 R2 K3 ; R2 := R2["Element"]
	9	[7581]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[7581]	TEST     	R1 0 ; if not R1 then PC := 13
	11	[7581]	JMP      	13 ; PC := 13
	12	[7582]	RETURN   	R0 1 ; return 
	13	[7585]	LOADNIL  	R1 R1 ; R1 := nil
	14	[7587]	GETGLOBAL	R2 K2 ; R2 := mSelected
	15	[7587]	GETTABLE 	R2 R2 K3 ; R2 := R2["Element"]
	16	[7587]	GETTABLE 	R2 R2 K4 ; R2 := R2["LoadOutType"]
	17	[7587]	EQ       	0 R2 K6 ; if R2 ~= 8.000000 then PC := 28
	18	[7587]	JMP      	28 ; PC := 28
	19	[7587]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	20	[7587]	GETGLOBAL	R3 K7 ; R3 := _T
	21	[7587]	GETTABLE 	R3 R3 K8 ; R3 := R3["MechAvatar"]
	22	[7587]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[7587]	TEST     	R2 1 ; if R2 then PC := 28
	24	[7587]	JMP      	28 ; PC := 28
	25	[7588]	GETGLOBAL	R2 K7 ; R2 := _T
	26	[7588]	GETTABLE 	R1 R2 K8 ; R1 := R2["MechAvatar"]
	27	[7588]	JMP      	178 ; PC := 178
	28	[7589]	GETGLOBAL	R2 K2 ; R2 := mSelected
	29	[7589]	GETTABLE 	R2 R2 K3 ; R2 := R2["Element"]
	30	[7589]	GETTABLE 	R2 R2 K4 ; R2 := R2["LoadOutType"]
	31	[7589]	EQ       	0 R2 K9 ; if R2 ~= 1.000000 then PC := 161
	32	[7589]	JMP      	161 ; PC := 161
	33	[7590]	GETUPVAL 	R2 U0 ; R2 := U0
	34	[7590]	LOADK    	R3 := 0.000000
	35	[7590]	CALL     	R2 2 2 ; R2 := R2(R3)
	36	[7591]	GETUPVAL 	R3 U0 ; R3 := U0
	37	[7591]	LOADK    	R4 := 3.000000
	38	[7591]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[7593]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	40	[7593]	MOVE     	R5 R2 ; R5 := R2
	41	[7593]	CALL     	R4 2 2 ; R4 := R4(R5)
	42	[7593]	TEST     	R4 1 ; if R4 then PC := 48
	43	[7593]	JMP      	48 ; PC := 48
	44	[7594]	SELF     	R4 R2 K10 ; R5 := R2; R4 := R2[0x768274d6]
	45	[7594]	OP_LOADBOOL	R6 0 0 ; R6 := false
	46	[7594]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[7594]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	48	[7597]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	49	[7597]	MOVE     	R5 R3 ; R5 := R3
	50	[7597]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[7597]	TEST     	R4 1 ; if R4 then PC := 57
	52	[7597]	JMP      	57 ; PC := 57
	53	[7598]	SELF     	R4 R3 K10 ; R5 := R3; R4 := R3[0x768274d6]
	54	[7598]	OP_LOADBOOL	R6 0 0 ; R6 := false
	55	[7598]	OP_LOADBOOL	R7 1 0 ; R7 := true
	56	[7598]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	57	[7601]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	58	[7601]	GETGLOBAL	R5 K2 ; R5 := mSelected
	59	[7601]	GETTABLE 	R5 R5 K11 ; R5 := R5["Item"]
	60	[7601]	GETTABLE 	R5 R5 K12 ; R5 := R5["Type"]
	61	[7601]	CALL     	R4 2 2 ; R4 := R4(R5)
	62	[7601]	TEST     	R4 0 ; if not R4 then PC := 65
	63	[7601]	JMP      	65 ; PC := 65
	64	[7602]	RETURN   	R0 1 ; return 
	65	[7605]	OP_LOADBOOL	R4 0 0 ; R4 := false
	66	[7606]	GETGLOBAL	R5 K2 ; R5 := mSelected
	67	[7606]	GETTABLE 	R5 R5 K11 ; R5 := R5["Item"]
	68	[7606]	GETTABLE 	R5 R5 K12 ; R5 := R5["Type"]
	69	[7606]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xf2deaf69]
	70	[7606]	GETGLOBAL	R7 K14 ; R7 := 0x88980f4f
	71	[7606]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	72	[7606]	TEST     	R5 1 ; if R5 then PC := 82
	73	[7606]	JMP      	82 ; PC := 82
	74	[7606]	GETGLOBAL	R5 K2 ; R5 := mSelected
	75	[7606]	GETTABLE 	R5 R5 K11 ; R5 := R5["Item"]
	76	[7606]	GETTABLE 	R5 R5 K12 ; R5 := R5["Type"]
	77	[7606]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xf2deaf69]
	78	[7606]	GETGLOBAL	R7 K15 ; R7 := 0xb506ff82
	79	[7606]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	80	[7606]	TEST     	R5 0 ; if not R5 then PC := 84
	81	[7606]	JMP      	84 ; PC := 84
	82	[7607]	OP_LOADBOOL	R4 1 0 ; R4 := true
	83	[7607]	JMP      	105 ; PC := 105
	84	[7608]	GETGLOBAL	R5 K2 ; R5 := mSelected
	85	[7608]	GETTABLE 	R5 R5 K3 ; R5 := R5["Element"]
	86	[7608]	GETTABLE 	R5 R5 K16 ; R5 := R5["LoadOutId"]
	87	[7608]	EQ       	0 R5 K17 ; if R5 ~= 2.000000 then PC := 105
	88	[7608]	JMP      	105 ; PC := 105
	89	[7608]	GETGLOBAL	R5 K18 ; R5 := mSentinelType
	90	[7608]	EQ       	1 R5 K19 ; if R5 == nil then PC := 105
	91	[7608]	JMP      	105 ; PC := 105
	92	[7608]	GETGLOBAL	R5 K18 ; R5 := mSentinelType
	93	[7608]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xf2deaf69]
	94	[7608]	GETGLOBAL	R7 K14 ; R7 := 0x88980f4f
	95	[7608]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	96	[7608]	TEST     	R5 1 ; if R5 then PC := 104
	97	[7608]	JMP      	104 ; PC := 104
	98	[7608]	GETGLOBAL	R5 K18 ; R5 := mSentinelType
	99	[7608]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xf2deaf69]
	100	[7608]	GETGLOBAL	R7 K15 ; R7 := 0xb506ff82
	101	[7608]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	102	[7608]	TEST     	R5 0 ; if not R5 then PC := 105
	103	[7608]	JMP      	105 ; PC := 105
	104	[7609]	OP_LOADBOOL	R4 1 0 ; R4 := true
	105	[7612]	GETUPVAL 	R5 U1 ; R5 := U1
	106	[7612]	GETUPVAL 	R6 U2 ; R6 := U2
	107	[7612]	GETTABLE 	R6 R6 K20 ; R6 := R6["UI_MODE_IN_SPACE_SHIP"]
	108	[7612]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 118
	109	[7612]	JMP      	118 ; PC := 118
	110	[7612]	GETGLOBAL	R5 K2 ; R5 := mSelected
	111	[7612]	GETTABLE 	R5 R5 K11 ; R5 := R5["Item"]
	112	[7612]	GETTABLE 	R5 R5 K12 ; R5 := R5["Type"]
	113	[7612]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xf2deaf69]
	114	[7612]	GETGLOBAL	R7 K21 ; R7 := gPetPowerSuitType
	115	[7612]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	116	[7612]	TEST     	R5 1 ; if R5 then PC := 148
	117	[7612]	JMP      	148 ; PC := 148
	118	[7613]	TEST     	R4 0 ; if not R4 then PC := 134
	119	[7613]	JMP      	134 ; PC := 134
	120	[7613]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	121	[7613]	MOVE     	R6 R3 ; R6 := R3
	122	[7613]	CALL     	R5 2 2 ; R5 := R5(R6)
	123	[7613]	TEST     	R5 1 ; if R5 then PC := 134
	124	[7613]	JMP      	134 ; PC := 134
	125	[7614]	MOVE     	R1 R3 ; R1 := R3
	126	[7615]	SELF     	R5 R1 K10 ; R6 := R1; R5 := R1[0x768274d6]
	127	[7615]	OP_LOADBOOL	R7 1 0 ; R7 := true
	128	[7615]	OP_LOADBOOL	R8 1 0 ; R8 := true
	129	[7615]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	130	[7616]	GETUPVAL 	R5 U3 ; R5 := U3
	131	[7616]	LOADK    	R6 := 3.000000
	132	[7616]	CALL     	R5 2 1 ; R5(R6)
	133	[7616]	JMP      	178 ; PC := 178
	134	[7617]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	135	[7617]	MOVE     	R6 R2 ; R6 := R2
	136	[7617]	CALL     	R5 2 2 ; R5 := R5(R6)
	137	[7617]	TEST     	R5 1 ; if R5 then PC := 178
	138	[7617]	JMP      	178 ; PC := 178
	139	[7618]	MOVE     	R1 R2 ; R1 := R2
	140	[7619]	SELF     	R5 R1 K10 ; R6 := R1; R5 := R1[0x768274d6]
	141	[7619]	OP_LOADBOOL	R7 1 0 ; R7 := true
	142	[7619]	OP_LOADBOOL	R8 1 0 ; R8 := true
	143	[7619]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	144	[7620]	GETUPVAL 	R5 U3 ; R5 := U3
	145	[7620]	LOADK    	R6 := 0.000000
	146	[7620]	CALL     	R5 2 1 ; R5(R6)
	147	[7621]	JMP      	178 ; PC := 178
	148	[7622]	GETGLOBAL	R5 K2 ; R5 := mSelected
	149	[7622]	GETTABLE 	R5 R5 K11 ; R5 := R5["Item"]
	150	[7622]	GETTABLE 	R5 R5 K12 ; R5 := R5["Type"]
	151	[7622]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xf2deaf69]
	152	[7622]	GETGLOBAL	R7 K21 ; R7 := gPetPowerSuitType
	153	[7622]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	154	[7622]	TEST     	R5 0 ; if not R5 then PC := 178
	155	[7622]	JMP      	178 ; PC := 178
	156	[7623]	MOVE     	R1 R2 ; R1 := R2
	157	[7624]	GETUPVAL 	R5 U3 ; R5 := U3
	158	[7624]	LOADK    	R6 := 1.000000
	159	[7624]	CALL     	R5 2 1 ; R5(R6)
	160	[7625]	JMP      	178 ; PC := 178
	161	[7626]	GETGLOBAL	R5 K2 ; R5 := mSelected
	162	[7626]	GETTABLE 	R5 R5 K3 ; R5 := R5["Element"]
	163	[7626]	GETTABLE 	R5 R5 K4 ; R5 := R5["LoadOutType"]
	164	[7626]	EQ       	0 R5 K22 ; if R5 ~= 6.000000 then PC := 176
	165	[7626]	JMP      	176 ; PC := 176
	166	[7626]	GETGLOBAL	R5 K2 ; R5 := mSelected
	167	[7626]	GETTABLE 	R5 R5 K3 ; R5 := R5["Element"]
	168	[7626]	GETTABLE 	R5 R5 K16 ; R5 := R5["LoadOutId"]
	169	[7626]	GETUPVAL 	R6 U4 ; R6 := U4
	170	[7626]	GETTABLE 	R6 R6 K23 ; R6 := R6["KDriveSlot"]
	171	[7626]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 176
	172	[7626]	JMP      	176 ; PC := 176
	173	[7627]	GETGLOBAL	R5 K7 ; R5 := _T
	174	[7627]	GETTABLE 	R1 R5 K24 ; R1 := R5["KDriveAvatar"]
	175	[7627]	JMP      	178 ; PC := 178
	176	[7629]	GETGLOBAL	R5 K7 ; R5 := _T
	177	[7629]	GETTABLE 	R1 R5 K25 ; R1 := R5["MenuSuitAvatar"]
	178	[7632]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	179	[7632]	MOVE     	R6 R1 ; R6 := R1
	180	[7632]	CALL     	R5 2 2 ; R5 := R5(R6)
	181	[7632]	TEST     	R5 0 ; if not R5 then PC := 194
	182	[7632]	JMP      	194 ; PC := 194
	183	[7632]	GETUPVAL 	R5 U1 ; R5 := U1
	184	[7632]	GETUPVAL 	R6 U2 ; R6 := U2
	185	[7632]	GETTABLE 	R6 R6 K20 ; R6 := R6["UI_MODE_IN_SPACE_SHIP"]
	186	[7632]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 193
	187	[7632]	JMP      	193 ; PC := 193
	188	[7632]	GETGLOBAL	R5 K2 ; R5 := mSelected
	189	[7632]	GETTABLE 	R5 R5 K3 ; R5 := R5["Element"]
	190	[7632]	GETTABLE 	R5 R5 K4 ; R5 := R5["LoadOutType"]
	191	[7632]	EQ       	1 R5 K9 ; if R5 == 1.000000 then PC := 194
	192	[7632]	JMP      	194 ; PC := 194
	193	[7633]	RETURN   	R0 1 ; return 
	194	[7637]	GETUPVAL 	R5 U5 ; R5 := U5
	195	[7637]	GETGLOBAL	R6 K2 ; R6 := mSelected
	196	[7637]	GETTABLE 	R6 R6 K3 ; R6 := R6["Element"]
	197	[7637]	GETTABLE 	R6 R6 K16 ; R6 := R6["LoadOutId"]
	198	[7637]	CALL     	R5 2 2 ; R5 := R5(R6)
	199	[7638]	LOADNIL  	R6 R6 ; R6 := nil
	200	[7640]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	201	[7640]	MOVE     	R8 R1 ; R8 := R1
	202	[7640]	CALL     	R7 2 2 ; R7 := R7(R8)
	203	[7640]	TEST     	R7 1 ; if R7 then PC := 229
	204	[7640]	JMP      	229 ; PC := 229
	205	[7641]	EQ       	1 R5 K9 ; if R5 == 1.000000 then PC := 213
	206	[7641]	JMP      	213 ; PC := 213
	207	[7642]	SELF     	R7 R1 K27 ; R8 := R1; R7 := R1[0xde321e6f]
	208	[7642]	CALL     	R7 2 2 ; R7 := R7(R8)
	209	[7642]	SELF     	R7 R7 K28 ; R8 := R7; R7 := R7[0x35b09371]
	210	[7642]	LOADK    	R9 := 1.000000
	211	[7642]	OP_LOADBOOL	R10 1 0 ; R10 := true
	212	[7642]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	213	[7645]	EQ       	1 R5 K29 ; if R5 == 0.000000 then PC := 221
	214	[7645]	JMP      	221 ; PC := 221
	215	[7646]	SELF     	R7 R1 K27 ; R8 := R1; R7 := R1[0xde321e6f]
	216	[7646]	CALL     	R7 2 2 ; R7 := R7(R8)
	217	[7646]	SELF     	R7 R7 K28 ; R8 := R7; R7 := R7[0x35b09371]
	218	[7646]	LOADK    	R9 := 0.000000
	219	[7646]	OP_LOADBOOL	R10 1 0 ; R10 := true
	220	[7646]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	221	[7649]	EQ       	1 R5 K30 ; if R5 == 5.000000 then PC := 229
	222	[7649]	JMP      	229 ; PC := 229
	223	[7650]	SELF     	R7 R1 K27 ; R8 := R1; R7 := R1[0xde321e6f]
	224	[7650]	CALL     	R7 2 2 ; R7 := R7(R8)
	225	[7650]	SELF     	R7 R7 K28 ; R8 := R7; R7 := R7[0x35b09371]
	226	[7650]	LOADK    	R9 := 5.000000
	227	[7650]	OP_LOADBOOL	R10 1 0 ; R10 := true
	228	[7650]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	229	[7654]	LOADNIL  	R7 R7 ; R7 := nil
	230	[7656]	GETGLOBAL	R8 K2 ; R8 := mSelected
	231	[7656]	GETTABLE 	R8 R8 K11 ; R8 := R8["Item"]
	232	[7656]	GETTABLE 	R8 R8 K31 ; R8 := R8["mPurchased"]
	233	[7656]	EQ       	0 R8 K32 ; if R8 ~= true then PC := 531
	234	[7656]	JMP      	531 ; PC := 531
	235	[7657]	LOADNIL  	R8 R8 ; R8 := nil
	236	[7659]	GETGLOBAL	R9 K2 ; R9 := mSelected
	237	[7659]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	238	[7659]	GETTABLE 	R9 R9 K4 ; R9 := R9["LoadOutType"]
	239	[7659]	EQ       	1 R9 K29 ; if R9 == 0.000000 then PC := 246
	240	[7659]	JMP      	246 ; PC := 246
	241	[7659]	GETGLOBAL	R9 K2 ; R9 := mSelected
	242	[7659]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	243	[7659]	GETTABLE 	R9 R9 K4 ; R9 := R9["LoadOutType"]
	244	[7659]	EQ       	0 R9 K33 ; if R9 ~= 3.000000 then PC := 296
	245	[7659]	JMP      	296 ; PC := 296
	246	[7660]	GETGLOBAL	R9 K2 ; R9 := mSelected
	247	[7660]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	248	[7660]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	249	[7660]	EQ       	0 R9 K29 ; if R9 ~= 0.000000 then PC := 256
	250	[7660]	JMP      	256 ; PC := 256
	251	[7661]	GETGLOBAL	R9 K34 ; R9 := mInventory
	252	[7661]	SELF     	R9 R9 K35 ; R10 := R9; R9 := R9[0x21a3da0c]
	253	[7661]	CALL     	R9 2 2 ; R9 := R9(R10)
	254	[7661]	MOVE     	R8 R9 ; R8 := R9
	255	[7661]	JMP      	436 ; PC := 436
	256	[7662]	GETGLOBAL	R9 K2 ; R9 := mSelected
	257	[7662]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	258	[7662]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	259	[7662]	EQ       	0 R9 K33 ; if R9 ~= 3.000000 then PC := 266
	260	[7662]	JMP      	266 ; PC := 266
	261	[7663]	GETGLOBAL	R9 K34 ; R9 := mInventory
	262	[7663]	SELF     	R9 R9 K36 ; R10 := R9; R9 := R9[0x0bf14f02]
	263	[7663]	CALL     	R9 2 2 ; R9 := R9(R10)
	264	[7663]	MOVE     	R8 R9 ; R8 := R9
	265	[7663]	JMP      	436 ; PC := 436
	266	[7664]	GETGLOBAL	R9 K2 ; R9 := mSelected
	267	[7664]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	268	[7664]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	269	[7664]	EQ       	0 R9 K17 ; if R9 ~= 2.000000 then PC := 276
	270	[7664]	JMP      	276 ; PC := 276
	271	[7665]	GETGLOBAL	R9 K34 ; R9 := mInventory
	272	[7665]	SELF     	R9 R9 K37 ; R10 := R9; R9 := R9[0x57d88957]
	273	[7665]	CALL     	R9 2 2 ; R9 := R9(R10)
	274	[7665]	MOVE     	R8 R9 ; R8 := R9
	275	[7665]	JMP      	436 ; PC := 436
	276	[7666]	GETGLOBAL	R9 K2 ; R9 := mSelected
	277	[7666]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	278	[7666]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	279	[7666]	EQ       	0 R9 K38 ; if R9 ~= 4.000000 then PC := 286
	280	[7666]	JMP      	286 ; PC := 286
	281	[7667]	GETGLOBAL	R9 K34 ; R9 := mInventory
	282	[7667]	SELF     	R9 R9 K39 ; R10 := R9; R9 := R9[0x6f7b67d7]
	283	[7667]	CALL     	R9 2 2 ; R9 := R9(R10)
	284	[7667]	MOVE     	R8 R9 ; R8 := R9
	285	[7667]	JMP      	436 ; PC := 436
	286	[7668]	GETGLOBAL	R9 K2 ; R9 := mSelected
	287	[7668]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	288	[7668]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	289	[7668]	EQ       	0 R9 K9 ; if R9 ~= 1.000000 then PC := 436
	290	[7668]	JMP      	436 ; PC := 436
	291	[7669]	GETGLOBAL	R9 K34 ; R9 := mInventory
	292	[7669]	SELF     	R9 R9 K40 ; R10 := R9; R9 := R9[0x215bf396]
	293	[7669]	CALL     	R9 2 2 ; R9 := R9(R10)
	294	[7669]	MOVE     	R8 R9 ; R8 := R9
	295	[7670]	JMP      	436 ; PC := 436
	296	[7671]	GETGLOBAL	R9 K2 ; R9 := mSelected
	297	[7671]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	298	[7671]	GETTABLE 	R9 R9 K4 ; R9 := R9["LoadOutType"]
	299	[7671]	EQ       	0 R9 K9 ; if R9 ~= 1.000000 then PC := 360
	300	[7671]	JMP      	360 ; PC := 360
	301	[7672]	GETGLOBAL	R9 K2 ; R9 := mSelected
	302	[7672]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	303	[7672]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	304	[7672]	EQ       	0 R9 K29 ; if R9 ~= 0.000000 then PC := 350
	305	[7672]	JMP      	350 ; PC := 350
	306	[7673]	GETUPVAL 	R9 U1 ; R9 := U1
	307	[7673]	GETUPVAL 	R10 U2 ; R10 := U2
	308	[7673]	GETTABLE 	R10 R10 K20 ; R10 := R10["UI_MODE_IN_SPACE_SHIP"]
	309	[7673]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 324
	310	[7673]	JMP      	324 ; PC := 324
	311	[7673]	GETGLOBAL	R9 K2 ; R9 := mSelected
	312	[7673]	GETTABLE 	R9 R9 K11 ; R9 := R9["Item"]
	313	[7673]	GETTABLE 	R9 R9 K12 ; R9 := R9["Type"]
	314	[7673]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0xf2deaf69]
	315	[7673]	GETGLOBAL	R11 K21 ; R11 := gPetPowerSuitType
	316	[7673]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	317	[7673]	TEST     	R9 0 ; if not R9 then PC := 324
	318	[7673]	JMP      	324 ; PC := 324
	319	[7674]	GETGLOBAL	R9 K34 ; R9 := mInventory
	320	[7674]	SELF     	R9 R9 K41 ; R10 := R9; R9 := R9[0xa855881a]
	321	[7674]	CALL     	R9 2 2 ; R9 := R9(R10)
	322	[7674]	MOVE     	R8 R9 ; R8 := R9
	323	[7674]	JMP      	436 ; PC := 436
	324	[7675]	GETGLOBAL	R9 K2 ; R9 := mSelected
	325	[7675]	GETTABLE 	R9 R9 K11 ; R9 := R9["Item"]
	326	[7675]	GETTABLE 	R9 R9 K12 ; R9 := R9["Type"]
	327	[7675]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0xf2deaf69]
	328	[7675]	GETGLOBAL	R11 K14 ; R11 := 0x88980f4f
	329	[7675]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	330	[7675]	TEST     	R9 1 ; if R9 then PC := 340
	331	[7675]	JMP      	340 ; PC := 340
	332	[7675]	GETGLOBAL	R9 K2 ; R9 := mSelected
	333	[7675]	GETTABLE 	R9 R9 K11 ; R9 := R9["Item"]
	334	[7675]	GETTABLE 	R9 R9 K12 ; R9 := R9["Type"]
	335	[7675]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0xf2deaf69]
	336	[7675]	GETGLOBAL	R11 K15 ; R11 := 0xb506ff82
	337	[7675]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	338	[7675]	TEST     	R9 0 ; if not R9 then PC := 345
	339	[7675]	JMP      	345 ; PC := 345
	340	[7676]	GETGLOBAL	R9 K34 ; R9 := mInventory
	341	[7676]	SELF     	R9 R9 K42 ; R10 := R9; R9 := R9[0x91a3eddf]
	342	[7676]	CALL     	R9 2 2 ; R9 := R9(R10)
	343	[7676]	MOVE     	R8 R9 ; R8 := R9
	344	[7676]	JMP      	436 ; PC := 436
	345	[7678]	GETGLOBAL	R9 K34 ; R9 := mInventory
	346	[7678]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x2a207127]
	347	[7678]	CALL     	R9 2 2 ; R9 := R9(R10)
	348	[7678]	MOVE     	R8 R9 ; R8 := R9
	349	[7679]	JMP      	436 ; PC := 436
	350	[7680]	GETGLOBAL	R9 K2 ; R9 := mSelected
	351	[7680]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	352	[7680]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	353	[7680]	EQ       	0 R9 K17 ; if R9 ~= 2.000000 then PC := 436
	354	[7680]	JMP      	436 ; PC := 436
	355	[7681]	GETGLOBAL	R9 K34 ; R9 := mInventory
	356	[7681]	SELF     	R9 R9 K44 ; R10 := R9; R9 := R9[0xa2c6d8b7]
	357	[7681]	CALL     	R9 2 2 ; R9 := R9(R10)
	358	[7681]	MOVE     	R8 R9 ; R8 := R9
	359	[7682]	JMP      	436 ; PC := 436
	360	[7683]	GETGLOBAL	R9 K2 ; R9 := mSelected
	361	[7683]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	362	[7683]	GETTABLE 	R9 R9 K4 ; R9 := R9["LoadOutType"]
	363	[7683]	EQ       	0 R9 K17 ; if R9 ~= 2.000000 then PC := 395
	364	[7683]	JMP      	395 ; PC := 395
	365	[7684]	GETGLOBAL	R9 K2 ; R9 := mSelected
	366	[7684]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	367	[7684]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	368	[7684]	EQ       	0 R9 K29 ; if R9 ~= 0.000000 then PC := 375
	369	[7684]	JMP      	375 ; PC := 375
	370	[7685]	GETGLOBAL	R9 K34 ; R9 := mInventory
	371	[7685]	SELF     	R9 R9 K45 ; R10 := R9; R9 := R9[0x4bb8609a]
	372	[7685]	CALL     	R9 2 2 ; R9 := R9(R10)
	373	[7685]	MOVE     	R8 R9 ; R8 := R9
	374	[7685]	JMP      	436 ; PC := 436
	375	[7686]	GETGLOBAL	R9 K2 ; R9 := mSelected
	376	[7686]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	377	[7686]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	378	[7686]	EQ       	0 R9 K33 ; if R9 ~= 3.000000 then PC := 385
	379	[7686]	JMP      	385 ; PC := 385
	380	[7687]	GETGLOBAL	R9 K34 ; R9 := mInventory
	381	[7687]	SELF     	R9 R9 K46 ; R10 := R9; R9 := R9[0x3218c3b0]
	382	[7687]	CALL     	R9 2 2 ; R9 := R9(R10)
	383	[7687]	MOVE     	R8 R9 ; R8 := R9
	384	[7687]	JMP      	436 ; PC := 436
	385	[7688]	GETGLOBAL	R9 K2 ; R9 := mSelected
	386	[7688]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	387	[7688]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	388	[7688]	EQ       	0 R9 K17 ; if R9 ~= 2.000000 then PC := 436
	389	[7688]	JMP      	436 ; PC := 436
	390	[7689]	GETGLOBAL	R9 K34 ; R9 := mInventory
	391	[7689]	SELF     	R9 R9 K39 ; R10 := R9; R9 := R9[0x6f7b67d7]
	392	[7689]	CALL     	R9 2 2 ; R9 := R9(R10)
	393	[7689]	MOVE     	R8 R9 ; R8 := R9
	394	[7690]	JMP      	436 ; PC := 436
	395	[7691]	GETGLOBAL	R9 K2 ; R9 := mSelected
	396	[7691]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	397	[7691]	GETTABLE 	R9 R9 K4 ; R9 := R9["LoadOutType"]
	398	[7691]	EQ       	0 R9 K22 ; if R9 ~= 6.000000 then PC := 412
	399	[7691]	JMP      	412 ; PC := 412
	400	[7692]	GETGLOBAL	R9 K2 ; R9 := mSelected
	401	[7692]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	402	[7692]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	403	[7692]	GETUPVAL 	R10 U4 ; R10 := U4
	404	[7692]	GETTABLE 	R10 R10 K23 ; R10 := R10["KDriveSlot"]
	405	[7692]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 436
	406	[7692]	JMP      	436 ; PC := 436
	407	[7693]	GETGLOBAL	R9 K34 ; R9 := mInventory
	408	[7693]	SELF     	R9 R9 K47 ; R10 := R9; R9 := R9[0x738deb95]
	409	[7693]	CALL     	R9 2 2 ; R9 := R9(R10)
	410	[7693]	MOVE     	R8 R9 ; R8 := R9
	411	[7694]	JMP      	436 ; PC := 436
	412	[7695]	GETGLOBAL	R9 K2 ; R9 := mSelected
	413	[7695]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	414	[7695]	GETTABLE 	R9 R9 K4 ; R9 := R9["LoadOutType"]
	415	[7695]	EQ       	0 R9 K6 ; if R9 ~= 8.000000 then PC := 436
	416	[7695]	JMP      	436 ; PC := 436
	417	[7696]	GETGLOBAL	R9 K2 ; R9 := mSelected
	418	[7696]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	419	[7696]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	420	[7696]	EQ       	0 R9 K29 ; if R9 ~= 0.000000 then PC := 427
	421	[7696]	JMP      	427 ; PC := 427
	422	[7697]	GETGLOBAL	R9 K34 ; R9 := mInventory
	423	[7697]	SELF     	R9 R9 K48 ; R10 := R9; R9 := R9[0xfab085e3]
	424	[7697]	CALL     	R9 2 2 ; R9 := R9(R10)
	425	[7697]	MOVE     	R8 R9 ; R8 := R9
	426	[7697]	JMP      	436 ; PC := 436
	427	[7698]	GETGLOBAL	R9 K2 ; R9 := mSelected
	428	[7698]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	429	[7698]	GETTABLE 	R9 R9 K16 ; R9 := R9["LoadOutId"]
	430	[7698]	EQ       	0 R9 K38 ; if R9 ~= 4.000000 then PC := 436
	431	[7698]	JMP      	436 ; PC := 436
	432	[7699]	GETGLOBAL	R9 K34 ; R9 := mInventory
	433	[7699]	SELF     	R9 R9 K39 ; R10 := R9; R9 := R9[0x6f7b67d7]
	434	[7699]	CALL     	R9 2 2 ; R9 := R9(R10)
	435	[7699]	MOVE     	R8 R9 ; R8 := R9
	436	[7703]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	437	[7703]	MOVE     	R10 R8 ; R10 := R8
	438	[7703]	CALL     	R9 2 2 ; R9 := R9(R10)
	439	[7703]	TEST     	R9 0 ; if not R9 then PC := 442
	440	[7703]	JMP      	442 ; PC := 442
	441	[7704]	RETURN   	R0 1 ; return 
	442	[7707]	GETGLOBAL	R9 K49 ; R9 := 0xc8802016
	443	[7707]	MOVE     	R10 R8 ; R10 := R8
	444	[7707]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	445	[7707]	JMP      	529 ; PC := 529
	446	[7708]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	447	[7708]	GETGLOBAL	R15 K2 ; R15 := mSelected
	448	[7708]	GETTABLE 	R15 R15 K11 ; R15 := R15["Item"]
	449	[7708]	GETTABLE 	R15 R15 K50 ; R15 := R15["mStoreItem"]
	450	[7708]	CALL     	R14 2 2 ; R14 := R14(R15)
	451	[7708]	TEST     	R14 1 ; if R14 then PC := 529
	452	[7708]	JMP      	529 ; PC := 529
	453	[7708]	GETTABLE 	R14 R13 K51 ; R14 := R13["mItemType"]
	454	[7708]	GETGLOBAL	R15 K2 ; R15 := mSelected
	455	[7708]	GETTABLE 	R15 R15 K11 ; R15 := R15["Item"]
	456	[7708]	GETTABLE 	R15 R15 K50 ; R15 := R15["mStoreItem"]
	457	[7708]	SELF     	R15 R15 K52 ; R16 := R15; R15 := R15[0xf278f8a1]
	458	[7708]	CALL     	R15 2 2 ; R15 := R15(R16)
	459	[7708]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 529
	460	[7708]	JMP      	529 ; PC := 529
	461	[7708]	GETTABLE 	R14 R13 K53 ; R14 := R13["mItemId"]
	462	[7708]	GETTABLE 	R14 R14 K54 ; R14 := R14["mId"]
	463	[7708]	GETGLOBAL	R15 K2 ; R15 := mSelected
	464	[7708]	GETTABLE 	R15 R15 K11 ; R15 := R15["Item"]
	465	[7708]	GETTABLE 	R15 R15 K55 ; R15 := R15["mPurchasedInfo"]
	466	[7708]	GETTABLE 	R15 R15 K56 ; R15 := R15["UID"]
	467	[7708]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 529
	468	[7708]	JMP      	529 ; PC := 529
	469	[7709]	LOADK    	R14 := 0.000000
	470	[7710]	GETGLOBAL	R15 K2 ; R15 := mSelected
	471	[7710]	GETTABLE 	R15 R15 K3 ; R15 := R15["Element"]
	472	[7710]	GETTABLE 	R15 R15 K56 ; R15 := R15["UID"]
	473	[7710]	GETGLOBAL	R16 K2 ; R16 := mSelected
	474	[7710]	GETTABLE 	R16 R16 K11 ; R16 := R16["Item"]
	475	[7710]	GETTABLE 	R16 R16 K55 ; R16 := R16["mPurchasedInfo"]
	476	[7710]	GETTABLE 	R16 R16 K56 ; R16 := R16["UID"]
	477	[7710]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 482
	478	[7710]	JMP      	482 ; PC := 482
	479	[7711]	GETGLOBAL	R15 K2 ; R15 := mSelected
	480	[7711]	GETTABLE 	R15 R15 K3 ; R15 := R15["Element"]
	481	[7711]	GETTABLE 	R14 R15 K57 ; R14 := R15["mCustSlot"]
	482	[7713]	SELF     	R15 R13 K58 ; R16 := R13; R15 := R13[0x68d708a7]
	483	[7713]	MOVE     	R17 R14 ; R17 := R14
	484	[7713]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	485	[7713]	MOVE     	R7 R15 ; R7 := R15
	486	[7714]	GETGLOBAL	R15 K34 ; R15 := mInventory
	487	[7714]	SELF     	R15 R15 K59 ; R16 := R15; R15 := R15[0xe9131614]
	488	[7714]	CALL     	R15 2 2 ; R15 := R15(R16)
	489	[7718]	LOADK    	R16 := 0.000000
	490	[7718]	LOADK    	R17 := 20.000000
	491	[7718]	LOADK    	R18 := 1.000000
	492	[7718]	FORPREP  	R16 527 ; R16 -= R18; PC := 527
	493	[7719]	SELF     	R20 R7 K60 ; R21 := R7; R20 := R7[0x5ef3783b]
	494	[7719]	MOVE     	R22 R19 ; R22 := R19
	495	[7719]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	496	[7722]	GETGLOBAL	R21 K0 ; R21 := 0x7b998233
	497	[7722]	MOVE     	R22 R20 ; R22 := R20
	498	[7722]	CALL     	R21 2 2 ; R21 := R21(R22)
	499	[7722]	TEST     	R21 1 ; if R21 then PC := 527
	500	[7722]	JMP      	527 ; PC := 527
	501	[7722]	GETTABLE 	R21 R20 K53 ; R21 := R20["mItemId"]
	502	[7722]	GETTABLE 	R21 R21 K54 ; R21 := R21["mId"]
	503	[7722]	EQ       	1 R21 K61 ; if R21 == "" then PC := 527
	504	[7722]	JMP      	527 ; PC := 527
	505	[7722]	GETGLOBAL	R21 K0 ; R21 := 0x7b998233
	506	[7722]	GETTABLE 	R22 R20 K51 ; R22 := R20["mItemType"]
	507	[7722]	CALL     	R21 2 2 ; R21 := R21(R22)
	508	[7722]	TEST     	R21 0 ; if not R21 then PC := 527
	509	[7722]	JMP      	527 ; PC := 527
	510	[7723]	LOADK    	R21 := 1.000000
	511	[7723]	LEN      	R22 R15 ; R22 := # R15
	512	[7723]	LOADK    	R23 := 1.000000
	513	[7723]	FORPREP  	R21 526 ; R21 -= R23; PC := 526
	514	[7724]	GETTABLE 	R25 R15 R24 ; R25 := R15[R24]
	515	[7724]	GETTABLE 	R25 R25 K53 ; R25 := R25["mItemId"]
	516	[7724]	GETTABLE 	R25 R25 K54 ; R25 := R25["mId"]
	517	[7724]	GETTABLE 	R26 R20 K53 ; R26 := R20["mItemId"]
	518	[7724]	GETTABLE 	R26 R26 K54 ; R26 := R26["mId"]
	519	[7724]	EQ       	0 R25 R26 ; if R25 ~= R26 then PC := 526
	520	[7724]	JMP      	526 ; PC := 526
	521	[7725]	SELF     	R25 R7 K62 ; R26 := R7; R25 := R7[0x569554e7]
	522	[7725]	GETTABLE 	R27 R15 R24 ; R27 := R15[R24]
	523	[7725]	MOVE     	R28 R19 ; R28 := R19
	524	[7725]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	525	[7726]	JMP      	527 ; PC := 527
	526	[7723]	FORLOOP  	R21 514 ; R21 += R23; if R21 <= R22 then begin PC := 514; R24 := R21 end
	527	[7718]	FORLOOP  	R16 493 ; R16 += R18; if R16 <= R17 then begin PC := 493; R19 := R16 end
	528	[7732]	JMP      	531 ; PC := 531
	529	[7707]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 446; R11 := R12 end
	530	[7733]	JMP      	446 ; PC := 446
	531	[7737]	GETGLOBAL	R25 K63 ; R25 := 0xb009bbc6
	532	[7737]	GETGLOBAL	R26 K2 ; R26 := mSelected
	533	[7737]	GETTABLE 	R26 R26 K11 ; R26 := R26["Item"]
	534	[7737]	GETTABLE 	R26 R26 K12 ; R26 := R26["Type"]
	535	[7737]	CALL     	R25 2 2 ; R25 := R25(R26)
	536	[7737]	MOVE     	R6 R25 ; R6 := R25
	537	[7738]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	538	[7738]	MOVE     	R26 R6 ; R26 := R6
	539	[7738]	CALL     	R25 2 2 ; R25 := R25(R26)
	540	[7738]	TEST     	R25 0 ; if not R25 then PC := 554
	541	[7738]	JMP      	554 ; PC := 554
	542	[7739]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	543	[7739]	MOVE     	R26 R1 ; R26 := R1
	544	[7739]	CALL     	R25 2 2 ; R25 := R25(R26)
	545	[7739]	TEST     	R25 1 ; if R25 then PC := 553
	546	[7739]	JMP      	553 ; PC := 553
	547	[7741]	SELF     	R25 R1 K27 ; R26 := R1; R25 := R1[0xde321e6f]
	548	[7741]	CALL     	R25 2 2 ; R25 := R25(R26)
	549	[7741]	SELF     	R25 R25 K28 ; R26 := R25; R25 := R25[0x35b09371]
	550	[7741]	MOVE     	R27 R5 ; R27 := R5
	551	[7741]	OP_LOADBOOL	R28 1 0 ; R28 := true
	552	[7741]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	553	[7744]	RETURN   	R0 1 ; return 
	554	[7747]	GETGLOBAL	R25 K2 ; R25 := mSelected
	555	[7747]	GETTABLE 	R25 R25 K3 ; R25 := R25["Element"]
	556	[7747]	GETTABLE 	R25 R25 K16 ; R25 := R25["LoadOutId"]
	557	[7747]	EQ       	0 R25 K29 ; if R25 ~= 0.000000 then PC := 798
	558	[7747]	JMP      	798 ; PC := 798
	559	[7747]	GETGLOBAL	R25 K2 ; R25 := mSelected
	560	[7747]	GETTABLE 	R25 R25 K3 ; R25 := R25["Element"]
	561	[7747]	GETTABLE 	R25 R25 K4 ; R25 := R25["LoadOutType"]
	562	[7747]	EQ       	0 R25 K9 ; if R25 ~= 1.000000 then PC := 798
	563	[7747]	JMP      	798 ; PC := 798
	564	[7747]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	565	[7747]	GETGLOBAL	R26 K2 ; R26 := mSelected
	566	[7747]	GETTABLE 	R26 R26 K11 ; R26 := R26["Item"]
	567	[7747]	GETTABLE 	R26 R26 K55 ; R26 := R26["mPurchasedInfo"]
	568	[7747]	CALL     	R25 2 2 ; R25 := R25(R26)
	569	[7747]	TEST     	R25 1 ; if R25 then PC := 798
	570	[7747]	JMP      	798 ; PC := 798
	571	[7748]	GETGLOBAL	R25 K64 ; R25 := mCurrentLoadout
	572	[7749]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	573	[7749]	GETGLOBAL	R27 K2 ; R27 := mSelected
	574	[7749]	GETTABLE 	R27 R27 K3 ; R27 := R27["Element"]
	575	[7749]	CALL     	R26 2 2 ; R26 := R26(R27)
	576	[7749]	TEST     	R26 1 ; if R26 then PC := 1110
	577	[7749]	JMP      	1110 ; PC := 1110
	578	[7750]	GETGLOBAL	R26 K2 ; R26 := mSelected
	579	[7750]	GETTABLE 	R26 R26 K3 ; R26 := R26["Element"]
	580	[7750]	GETTABLE 	R26 R26 K4 ; R26 := R26["LoadOutType"]
	581	[7750]	GETTABLE 	R26 R25 R26 ; R26 := R25[R26]
	582	[7750]	SELF     	R26 R26 K65 ; R27 := R26; R26 := R26[0x2abbe722]
	583	[7750]	GETGLOBAL	R28 K2 ; R28 := mSelected
	584	[7750]	GETTABLE 	R28 R28 K3 ; R28 := R28["Element"]
	585	[7750]	GETTABLE 	R28 R28 K16 ; R28 := R28["LoadOutId"]
	586	[7750]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	587	[7751]	GETTABLE 	R27 R26 K53 ; R27 := R26["mItemId"]
	588	[7751]	GETGLOBAL	R28 K2 ; R28 := mSelected
	589	[7751]	GETTABLE 	R28 R28 K11 ; R28 := R28["Item"]
	590	[7751]	GETTABLE 	R28 R28 K55 ; R28 := R28["mPurchasedInfo"]
	591	[7751]	GETTABLE 	R28 R28 K56 ; R28 := R28["UID"]
	592	[7751]	SETTABLE 	R27 K54 R28 ; R27["mId"] := R28
	593	[7752]	SETTABLE 	R26 K57 K29 ; R26["mCustSlot"] := 0.000000
	594	[7753]	GETGLOBAL	R27 K2 ; R27 := mSelected
	595	[7753]	GETTABLE 	R27 R27 K3 ; R27 := R27["Element"]
	596	[7753]	GETTABLE 	R27 R27 K4 ; R27 := R27["LoadOutType"]
	597	[7753]	GETTABLE 	R27 R25 R27 ; R27 := R25[R27]
	598	[7753]	SELF     	R27 R27 K66 ; R28 := R27; R27 := R27[0xffca321e]
	599	[7753]	GETGLOBAL	R29 K2 ; R29 := mSelected
	600	[7753]	GETTABLE 	R29 R29 K3 ; R29 := R29["Element"]
	601	[7753]	GETTABLE 	R29 R29 K16 ; R29 := R29["LoadOutId"]
	602	[7753]	MOVE     	R30 R26 ; R30 := R26
	603	[7753]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	604	[7754]	GETGLOBAL	R27 K1 ; R27 := 0x25d99d89
	605	[7754]	SELF     	R27 R27 K67 ; R28 := R27; R27 := R27[0x400b84a1]
	606	[7754]	GETGLOBAL	R29 K2 ; R29 := mSelected
	607	[7754]	GETTABLE 	R29 R29 K3 ; R29 := R29["Element"]
	608	[7754]	GETTABLE 	R29 R29 K4 ; R29 := R29["LoadOutType"]
	609	[7754]	GETGLOBAL	R30 K2 ; R30 := mSelected
	610	[7754]	GETTABLE 	R30 R30 K3 ; R30 := R30["Element"]
	611	[7754]	GETTABLE 	R30 R30 K4 ; R30 := R30["LoadOutType"]
	612	[7754]	GETTABLE 	R30 R25 R30 ; R30 := R25[R30]
	613	[7754]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	614	[7756]	GETGLOBAL	R27 K2 ; R27 := mSelected
	615	[7756]	GETTABLE 	R27 R27 K11 ; R27 := R27["Item"]
	616	[7756]	GETTABLE 	R27 R27 K12 ; R27 := R27["Type"]
	617	[7756]	SELF     	R27 R27 K13 ; R28 := R27; R27 := R27[0xf2deaf69]
	618	[7756]	GETGLOBAL	R29 K21 ; R29 := gPetPowerSuitType
	619	[7756]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	620	[7757]	GETGLOBAL	R28 K2 ; R28 := mSelected
	621	[7757]	GETTABLE 	R28 R28 K11 ; R28 := R28["Item"]
	622	[7757]	GETTABLE 	R28 R28 K12 ; R28 := R28["Type"]
	623	[7757]	SELF     	R28 R28 K13 ; R29 := R28; R28 := R28[0xf2deaf69]
	624	[7757]	GETGLOBAL	R30 K68 ; R30 := 0x70b83a36
	625	[7757]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	626	[7758]	GETUPVAL 	R29 U1 ; R29 := U1
	627	[7758]	GETUPVAL 	R30 U2 ; R30 := U2
	628	[7758]	GETTABLE 	R30 R30 K20 ; R30 := R30["UI_MODE_IN_SPACE_SHIP"]
	629	[7758]	EQ       	0 R29 R30 ; if R29 ~= R30 then PC := 684
	630	[7758]	JMP      	684 ; PC := 684
	631	[7759]	TEST     	R27 0 ; if not R27 then PC := 658
	632	[7759]	JMP      	658 ; PC := 658
	633	[7760]	GETGLOBAL	R29 K34 ; R29 := mInventory
	634	[7760]	SELF     	R29 R29 K41 ; R30 := R29; R29 := R29[0xa855881a]
	635	[7760]	CALL     	R29 2 2 ; R29 := R29(R30)
	636	[7761]	LOADK    	R30 := 1.000000
	637	[7761]	LEN      	R31 R29 ; R31 := # R29
	638	[7761]	LOADK    	R32 := 1.000000
	639	[7761]	FORPREP  	R30 656 ; R30 -= R32; PC := 656
	640	[7762]	GETGLOBAL	R34 K2 ; R34 := mSelected
	641	[7762]	GETTABLE 	R34 R34 K11 ; R34 := R34["Item"]
	642	[7762]	GETTABLE 	R34 R34 K55 ; R34 := R34["mPurchasedInfo"]
	643	[7762]	GETTABLE 	R34 R34 K56 ; R34 := R34["UID"]
	644	[7762]	GETTABLE 	R35 R29 R33 ; R35 := R29[R33]
	645	[7762]	GETTABLE 	R35 R35 K53 ; R35 := R35["mItemId"]
	646	[7762]	GETTABLE 	R35 R35 K54 ; R35 := R35["mId"]
	647	[7762]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 656
	648	[7762]	JMP      	656 ; PC := 656
	649	[7763]	GETUPVAL 	R34 U6 ; R34 := U6
	650	[7763]	GETTABLE 	R35 R29 R33 ; R35 := R29[R33]
	651	[7763]	GETGLOBAL	R36 K2 ; R36 := mSelected
	652	[7763]	GETTABLE 	R36 R36 K11 ; R36 := R36["Item"]
	653	[7763]	GETTABLE 	R36 R36 K12 ; R36 := R36["Type"]
	654	[7763]	CALL     	R34 3 1 ; R34(R35,R36)
	655	[7764]	JMP      	684 ; PC := 684
	656	[7761]	FORLOOP  	R30 640 ; R30 += R32; if R30 <= R31 then begin PC := 640; R33 := R30 end
	657	[7766]	JMP      	684 ; PC := 684
	658	[7767]	TEST     	R28 0 ; if not R28 then PC := 684
	659	[7767]	JMP      	684 ; PC := 684
	660	[7768]	GETGLOBAL	R34 K34 ; R34 := mInventory
	661	[7768]	SELF     	R34 R34 K42 ; R35 := R34; R34 := R34[0x91a3eddf]
	662	[7768]	CALL     	R34 2 2 ; R34 := R34(R35)
	663	[7769]	LOADK    	R35 := 1.000000
	664	[7769]	LEN      	R36 R34 ; R36 := # R34
	665	[7769]	LOADK    	R37 := 1.000000
	666	[7769]	FORPREP  	R35 683 ; R35 -= R37; PC := 683
	667	[7770]	GETGLOBAL	R39 K2 ; R39 := mSelected
	668	[7770]	GETTABLE 	R39 R39 K11 ; R39 := R39["Item"]
	669	[7770]	GETTABLE 	R39 R39 K55 ; R39 := R39["mPurchasedInfo"]
	670	[7770]	GETTABLE 	R39 R39 K56 ; R39 := R39["UID"]
	671	[7770]	GETTABLE 	R40 R34 R38 ; R40 := R34[R38]
	672	[7770]	GETTABLE 	R40 R40 K53 ; R40 := R40["mItemId"]
	673	[7770]	GETTABLE 	R40 R40 K54 ; R40 := R40["mId"]
	674	[7770]	EQ       	0 R39 R40 ; if R39 ~= R40 then PC := 683
	675	[7770]	JMP      	683 ; PC := 683
	676	[7771]	GETUPVAL 	R39 U7 ; R39 := U7
	677	[7771]	GETTABLE 	R40 R34 R38 ; R40 := R34[R38]
	678	[7771]	GETGLOBAL	R41 K2 ; R41 := mSelected
	679	[7771]	GETTABLE 	R41 R41 K11 ; R41 := R41["Item"]
	680	[7771]	GETTABLE 	R41 R41 K12 ; R41 := R41["Type"]
	681	[7771]	CALL     	R39 3 1 ; R39(R40,R41)
	682	[7772]	JMP      	684 ; PC := 684
	683	[7769]	FORLOOP  	R35 667 ; R35 += R37; if R35 <= R36 then begin PC := 667; R38 := R35 end
	684	[7778]	GETUPVAL 	R39 U8 ; R39 := U8
	685	[7778]	OP_LOADBOOL	R40 0 0 ; R40 := false
	686	[7778]	CALL     	R39 2 1 ; R39(R40)
	687	[7780]	TEST     	R27 0 ; if not R27 then PC := 712
	688	[7780]	JMP      	712 ; PC := 712
	689	[7781]	LOADNIL  	R39 R39 ; R39 := nil
	690	[7782]	GETUPVAL 	R40 U1 ; R40 := U1
	691	[7782]	GETUPVAL 	R41 U2 ; R41 := U2
	692	[7782]	GETTABLE 	R41 R41 K20 ; R41 := R41["UI_MODE_IN_SPACE_SHIP"]
	693	[7782]	EQ       	0 R40 R41 ; if R40 ~= R41 then PC := 701
	694	[7782]	JMP      	701 ; PC := 701
	695	[7783]	GETGLOBAL	R40 K69 ; R40 := 0xbe190284
	696	[7783]	SELF     	R40 R40 K70 ; R41 := R40; R40 := R40[0x7cf8123f]
	697	[7783]	LOADK    	R42 := 1.000000
	698	[7783]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	699	[7783]	MOVE     	R39 R40 ; R39 := R40
	700	[7783]	JMP      	708 ; PC := 708
	701	[7785]	GETGLOBAL	R40 K7 ; R40 := _T
	702	[7785]	GETTABLE 	R40 R40 K25 ; R40 := R40["MenuSuitAvatar"]
	703	[7785]	SELF     	R40 R40 K27 ; R41 := R40; R40 := R40[0xde321e6f]
	704	[7785]	CALL     	R40 2 2 ; R40 := R40(R41)
	705	[7785]	SELF     	R40 R40 K71 ; R41 := R40; R40 := R40[0x2676deee]
	706	[7785]	CALL     	R40 2 2 ; R40 := R40(R41)
	707	[7785]	MOVE     	R39 R40 ; R39 := R40
	708	[7788]	GETUPVAL 	R40 U9 ; R40 := U9
	709	[7788]	GETTABLE 	R40 R40 K72 ; R40 := R40[0x705e38df]
	710	[7788]	MOVE     	R41 R39 ; R41 := R39
	711	[7788]	CALL     	R40 2 1 ; R40(R41)
	712	[7791]	GETGLOBAL	R40 K7 ; R40 := _T
	713	[7791]	SETTABLE 	R40 K73 K32 ; R40["mSentinelMode"] := true
	714	[7792]	GETGLOBAL	R40 K0 ; R40 := 0x7b998233
	715	[7792]	GETGLOBAL	R41 K1 ; R41 := 0x25d99d89
	716	[7792]	CALL     	R40 2 2 ; R40 := R40(R41)
	717	[7792]	TEST     	R40 1 ; if R40 then PC := 770
	718	[7792]	JMP      	770 ; PC := 770
	719	[7793]	GETGLOBAL	R40 K1 ; R40 := 0x25d99d89
	720	[7793]	SELF     	R40 R40 K74 ; R41 := R40; R40 := R40[0x3c6b0324]
	721	[7793]	CALL     	R40 2 2 ; R40 := R40(R41)
	722	[7793]	TEST     	R40 1 ; if R40 then PC := 732
	723	[7793]	JMP      	732 ; PC := 732
	724	[7793]	GETGLOBAL	R40 K2 ; R40 := mSelected
	725	[7793]	GETTABLE 	R40 R40 K11 ; R40 := R40["Item"]
	726	[7793]	GETTABLE 	R40 R40 K12 ; R40 := R40["Type"]
	727	[7793]	SELF     	R40 R40 K13 ; R41 := R40; R40 := R40[0xf2deaf69]
	728	[7793]	GETGLOBAL	R42 K21 ; R42 := gPetPowerSuitType
	729	[7793]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	730	[7793]	TEST     	R40 0 ; if not R40 then PC := 736
	731	[7793]	JMP      	736 ; PC := 736
	732	[7794]	GETGLOBAL	R40 K2 ; R40 := mSelected
	733	[7794]	GETTABLE 	R40 R40 K11 ; R40 := R40["Item"]
	734	[7794]	SETTABLE 	R40 K75 K9 ; R40["mPetType"] := 1.000000
	735	[7794]	JMP      	768 ; PC := 768
	736	[7795]	GETGLOBAL	R40 K1 ; R40 := 0x25d99d89
	737	[7795]	SELF     	R40 R40 K76 ; R41 := R40; R40 := R40[0x9f91f49d]
	738	[7795]	CALL     	R40 2 2 ; R40 := R40(R41)
	739	[7795]	TEST     	R40 1 ; if R40 then PC := 749
	740	[7795]	JMP      	749 ; PC := 749
	741	[7795]	GETGLOBAL	R40 K2 ; R40 := mSelected
	742	[7795]	GETTABLE 	R40 R40 K11 ; R40 := R40["Item"]
	743	[7795]	GETTABLE 	R40 R40 K12 ; R40 := R40["Type"]
	744	[7795]	SELF     	R40 R40 K13 ; R41 := R40; R40 := R40[0xf2deaf69]
	745	[7795]	GETGLOBAL	R42 K68 ; R42 := 0x70b83a36
	746	[7795]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	747	[7795]	TEST     	R40 0 ; if not R40 then PC := 765
	748	[7795]	JMP      	765 ; PC := 765
	749	[7796]	GETGLOBAL	R40 K2 ; R40 := mSelected
	750	[7796]	GETTABLE 	R40 R40 K11 ; R40 := R40["Item"]
	751	[7796]	GETTABLE 	R40 R40 K12 ; R40 := R40["Type"]
	752	[7796]	SELF     	R40 R40 K13 ; R41 := R40; R40 := R40[0xf2deaf69]
	753	[7796]	GETGLOBAL	R42 K14 ; R42 := 0x88980f4f
	754	[7796]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	755	[7796]	TEST     	R40 0 ; if not R40 then PC := 761
	756	[7796]	JMP      	761 ; PC := 761
	757	[7797]	GETGLOBAL	R40 K2 ; R40 := mSelected
	758	[7797]	GETTABLE 	R40 R40 K11 ; R40 := R40["Item"]
	759	[7797]	SETTABLE 	R40 K75 K33 ; R40["mPetType"] := 3.000000
	760	[7797]	JMP      	768 ; PC := 768
	761	[7799]	GETGLOBAL	R40 K2 ; R40 := mSelected
	762	[7799]	GETTABLE 	R40 R40 K11 ; R40 := R40["Item"]
	763	[7799]	SETTABLE 	R40 K75 K38 ; R40["mPetType"] := 4.000000
	764	[7800]	JMP      	768 ; PC := 768
	765	[7802]	GETGLOBAL	R40 K2 ; R40 := mSelected
	766	[7802]	GETTABLE 	R40 R40 K11 ; R40 := R40["Item"]
	767	[7802]	SETTABLE 	R40 K75 K29 ; R40["mPetType"] := 0.000000
	768	[7804]	LOADK    	R40 := 1.500000
	769	[7804]	SETUPVAL 	R40 U10 ; U10 := R40
	770	[7807]	GETTABLE 	R40 R26 K53 ; R40 := R26["mItemId"]
	771	[7807]	GETGLOBAL	R41 K2 ; R41 := mSelected
	772	[7807]	GETTABLE 	R41 R41 K3 ; R41 := R41["Element"]
	773	[7807]	GETTABLE 	R41 R41 K56 ; R41 := R41["UID"]
	774	[7807]	SETTABLE 	R40 K54 R41 ; R40["mId"] := R41
	775	[7808]	GETGLOBAL	R40 K64 ; R40 := mCurrentLoadout
	776	[7808]	GETGLOBAL	R41 K2 ; R41 := mSelected
	777	[7808]	GETTABLE 	R41 R41 K3 ; R41 := R41["Element"]
	778	[7808]	GETTABLE 	R41 R41 K4 ; R41 := R41["LoadOutType"]
	779	[7808]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	780	[7808]	SELF     	R40 R40 K66 ; R41 := R40; R40 := R40[0xffca321e]
	781	[7808]	GETGLOBAL	R42 K2 ; R42 := mSelected
	782	[7808]	GETTABLE 	R42 R42 K3 ; R42 := R42["Element"]
	783	[7808]	GETTABLE 	R42 R42 K16 ; R42 := R42["LoadOutId"]
	784	[7808]	MOVE     	R43 R26 ; R43 := R26
	785	[7808]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	786	[7809]	GETGLOBAL	R40 K1 ; R40 := 0x25d99d89
	787	[7809]	SELF     	R40 R40 K67 ; R41 := R40; R40 := R40[0x400b84a1]
	788	[7809]	GETGLOBAL	R42 K2 ; R42 := mSelected
	789	[7809]	GETTABLE 	R42 R42 K3 ; R42 := R42["Element"]
	790	[7809]	GETTABLE 	R42 R42 K4 ; R42 := R42["LoadOutType"]
	791	[7809]	GETGLOBAL	R43 K64 ; R43 := mCurrentLoadout
	792	[7809]	GETGLOBAL	R44 K2 ; R44 := mSelected
	793	[7809]	GETTABLE 	R44 R44 K3 ; R44 := R44["Element"]
	794	[7809]	GETTABLE 	R44 R44 K4 ; R44 := R44["LoadOutType"]
	795	[7809]	GETTABLE 	R43 R43 R44 ; R43 := R43[R44]
	796	[7809]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	797	[7810]	JMP      	1110 ; PC := 1110
	798	[7812]	GETUPVAL 	R40 U1 ; R40 := U1
	799	[7812]	GETUPVAL 	R41 U2 ; R41 := U2
	800	[7812]	GETTABLE 	R41 R41 K20 ; R41 := R41["UI_MODE_IN_SPACE_SHIP"]
	801	[7812]	EQ       	1 R40 R41 ; if R40 == R41 then PC := 904
	802	[7812]	JMP      	904 ; PC := 904
	803	[7812]	GETGLOBAL	R40 K2 ; R40 := mSelected
	804	[7812]	GETTABLE 	R40 R40 K3 ; R40 := R40["Element"]
	805	[7812]	GETTABLE 	R40 R40 K4 ; R40 := R40["LoadOutType"]
	806	[7812]	EQ       	0 R40 K9 ; if R40 ~= 1.000000 then PC := 904
	807	[7812]	JMP      	904 ; PC := 904
	808	[7814]	GETUPVAL 	R40 U11 ; R40 := U11
	809	[7814]	GETTABLE 	R40 R40 K77 ; R40 := R40[0x06d055f9]
	810	[7814]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	811	[7814]	GETGLOBAL	R42 K7 ; R42 := _T
	812	[7814]	GETTABLE 	R42 R42 K25 ; R42 := R42["MenuSuitAvatar"]
	813	[7814]	CALL     	R41 2 2 ; R41 := R41(R42)
	814	[7814]	LOADNIL  	R42 R42 ; R42 := nil
	815	[7814]	GETGLOBAL	R43 K7 ; R43 := _T
	816	[7814]	GETTABLE 	R43 R43 K25 ; R43 := R43["MenuSuitAvatar"]
	817	[7814]	SELF     	R43 R43 K27 ; R44 := R43; R43 := R43[0xde321e6f]
	818	[7814]	CALL     	R43 2 0 ; R43,... := R43(R44)
	819	[7814]	CALL     	R40 0 2 ; R40 := R40(R41,...)
	820	[7816]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	821	[7816]	GETGLOBAL	R42 K7 ; R42 := _T
	822	[7816]	GETTABLE 	R42 R42 K25 ; R42 := R42["MenuSuitAvatar"]
	823	[7816]	CALL     	R41 2 2 ; R41 := R41(R42)
	824	[7816]	TEST     	R41 1 ; if R41 then PC := 837
	825	[7816]	JMP      	837 ; PC := 837
	826	[7816]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	827	[7816]	MOVE     	R42 R40 ; R42 := R40
	828	[7816]	CALL     	R41 2 2 ; R41 := R41(R42)
	829	[7816]	TEST     	R41 1 ; if R41 then PC := 837
	830	[7816]	JMP      	837 ; PC := 837
	831	[7817]	SELF     	R41 R40 K78 ; R42 := R40; R41 := R40[0x62259cca]
	832	[7817]	CALL     	R41 2 1 ; R41(R42)
	833	[7818]	GETUPVAL 	R41 U0 ; R41 := U0
	834	[7818]	LOADK    	R42 := 0.000000
	835	[7818]	CALL     	R41 2 2 ; R41 := R41(R42)
	836	[7818]	MOVE     	R1 R41 ; R1 := R41
	837	[7820]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	838	[7820]	MOVE     	R42 R1 ; R42 := R1
	839	[7820]	CALL     	R41 2 2 ; R41 := R41(R42)
	840	[7820]	TEST     	R41 0 ; if not R41 then PC := 843
	841	[7820]	JMP      	843 ; PC := 843
	842	[7821]	RETURN   	R0 1 ; return 
	843	[7823]	GETGLOBAL	R41 K7 ; R41 := _T
	844	[7823]	SETTABLE 	R41 K79 R1 ; R41["MenuSentinel"] := R1
	845	[7824]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	846	[7824]	SELF     	R42 R1 K80 ; R43 := R1; R42 := R1[0x020d4331]
	847	[7824]	CALL     	R42 2 0 ; R42,... := R42(R43)
	848	[7824]	CALL     	R41 0 2 ; R41 := R41(R42,...)
	849	[7824]	TEST     	R41 1 ; if R41 then PC := 904
	850	[7824]	JMP      	904 ; PC := 904
	851	[7825]	GETGLOBAL	R41 K7 ; R41 := _T
	852	[7825]	GETTABLE 	R41 R41 K81 ; R41 := R41["InSimulacrum"]
	853	[7825]	TEST     	R41 0 ; if not R41 then PC := 904
	854	[7825]	JMP      	904 ; PC := 904
	855	[7826]	LOADNIL  	R41 R41 ; R41 := nil
	856	[7827]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	857	[7827]	GETGLOBAL	R43 K82 ; R43 := mArsenalConsole
	858	[7827]	CALL     	R42 2 2 ; R42 := R42(R43)
	859	[7827]	TEST     	R42 1 ; if R42 then PC := 871
	860	[7827]	JMP      	871 ; PC := 871
	861	[7828]	GETGLOBAL	R42 K83 ; R42 := 0x89326c93
	862	[7828]	SELF     	R42 R42 K84 ; R43 := R42; R42 := R42[0xc7b81e8d]
	863	[7828]	GETGLOBAL	R44 K85 ; R44 := 0x0469f296
	864	[7828]	LOADK    	R45 K86 ; R45 := "CompanionArsenalSpot"
	865	[7828]	CALL     	R44 2 2 ; R44 := R44(R45)
	866	[7828]	GETGLOBAL	R45 K82 ; R45 := mArsenalConsole
	867	[7828]	SELF     	R45 R45 K87 ; R46 := R45; R45 := R45[0xd1586535]
	868	[7828]	CALL     	R45 2 0 ; R45,... := R45(R46)
	869	[7828]	CALL     	R42 0 2 ; R42 := R42(R43,...)
	870	[7828]	MOVE     	R41 R42 ; R41 := R42
	871	[7830]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	872	[7830]	MOVE     	R43 R41 ; R43 := R41
	873	[7830]	CALL     	R42 2 2 ; R42 := R42(R43)
	874	[7830]	TEST     	R42 1 ; if R42 then PC := 904
	875	[7830]	JMP      	904 ; PC := 904
	876	[7831]	SELF     	R42 R41 K87 ; R43 := R41; R42 := R41[0xd1586535]
	877	[7831]	CALL     	R42 2 2 ; R42 := R42(R43)
	878	[7831]	GETGLOBAL	R43 K88 ; R43 := 0xa421af95
	879	[7831]	LOADK    	R44 := 0.000000
	880	[7831]	LOADK    	R45 := 1.500000
	881	[7831]	LOADK    	R46 := 0.000000
	882	[7831]	CALL     	R43 4 2 ; R43 := R43(R44,R45,R46)
	883	[7831]	ADD      	R42 R42 R43 ; R42 := R42 + R43
	884	[7832]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	885	[7832]	GETGLOBAL	R44 K7 ; R44 := _T
	886	[7832]	GETTABLE 	R44 R44 K89 ; R44 := R44["suitTable"]
	887	[7832]	CALL     	R43 2 2 ; R43 := R43(R44)
	888	[7832]	TEST     	R43 1 ; if R43 then PC := 899
	889	[7832]	JMP      	899 ; PC := 899
	890	[7833]	GETGLOBAL	R43 K7 ; R43 := _T
	891	[7833]	GETTABLE 	R43 R43 K89 ; R43 := R43["suitTable"]
	892	[7833]	SETTABLE 	R43 K90 K91 ; R43["queuedTeleport"] := 0.050000
	893	[7834]	GETGLOBAL	R43 K7 ; R43 := _T
	894	[7834]	GETTABLE 	R43 R43 K89 ; R43 := R43["suitTable"]
	895	[7834]	GETTABLE 	R43 R43 K92 ; R43 := R43["positions"]
	896	[7834]	SELF     	R44 R1 K93 ; R45 := R1; R44 := R1[0x388577d5]
	897	[7834]	CALL     	R44 2 2 ; R44 := R44(R45)
	898	[7834]	SETTABLE 	R43 R44 R42 ; R43[R44] := R42
	899	[7836]	SELF     	R43 R1 K94 ; R44 := R1; R43 := R1[0x589ef1c1]
	900	[7836]	MOVE     	R45 R42 ; R45 := R42
	901	[7836]	SELF     	R46 R41 K95 ; R47 := R41; R46 := R41[0xcb3851b8]
	902	[7836]	CALL     	R46 2 0 ; R46,... := R46(R47)
	903	[7836]	CALL     	R43 0 1 ; R43(R44,...)
	904	[7842]	OP_LOADBOOL	R43 0 0 ; R43 := false
	905	[7843]	GETGLOBAL	R44 K96 ; R44 := mPrevSelection
	906	[7843]	EQ       	1 R44 K19 ; if R44 == nil then PC := 944
	907	[7843]	JMP      	944 ; PC := 944
	908	[7843]	GETGLOBAL	R44 K96 ; R44 := mPrevSelection
	909	[7843]	GETTABLE 	R44 R44 K55 ; R44 := R44["mPurchasedInfo"]
	910	[7843]	EQ       	1 R44 K19 ; if R44 == nil then PC := 944
	911	[7843]	JMP      	944 ; PC := 944
	912	[7843]	GETGLOBAL	R44 K96 ; R44 := mPrevSelection
	913	[7843]	GETTABLE 	R44 R44 K55 ; R44 := R44["mPurchasedInfo"]
	914	[7843]	GETTABLE 	R44 R44 K56 ; R44 := R44["UID"]
	915	[7843]	EQ       	1 R44 K19 ; if R44 == nil then PC := 944
	916	[7843]	JMP      	944 ; PC := 944
	917	[7843]	GETGLOBAL	R44 K2 ; R44 := mSelected
	918	[7843]	GETTABLE 	R44 R44 K11 ; R44 := R44["Item"]
	919	[7843]	EQ       	1 R44 K19 ; if R44 == nil then PC := 944
	920	[7843]	JMP      	944 ; PC := 944
	921	[7843]	GETGLOBAL	R44 K2 ; R44 := mSelected
	922	[7843]	GETTABLE 	R44 R44 K11 ; R44 := R44["Item"]
	923	[7843]	GETTABLE 	R44 R44 K55 ; R44 := R44["mPurchasedInfo"]
	924	[7843]	EQ       	1 R44 K19 ; if R44 == nil then PC := 944
	925	[7843]	JMP      	944 ; PC := 944
	926	[7843]	GETGLOBAL	R44 K2 ; R44 := mSelected
	927	[7843]	GETTABLE 	R44 R44 K11 ; R44 := R44["Item"]
	928	[7843]	GETTABLE 	R44 R44 K55 ; R44 := R44["mPurchasedInfo"]
	929	[7843]	GETTABLE 	R44 R44 K56 ; R44 := R44["UID"]
	930	[7843]	EQ       	1 R44 K19 ; if R44 == nil then PC := 944
	931	[7843]	JMP      	944 ; PC := 944
	932	[7844]	GETGLOBAL	R44 K96 ; R44 := mPrevSelection
	933	[7844]	GETTABLE 	R44 R44 K55 ; R44 := R44["mPurchasedInfo"]
	934	[7844]	GETTABLE 	R44 R44 K56 ; R44 := R44["UID"]
	935	[7844]	GETGLOBAL	R45 K2 ; R45 := mSelected
	936	[7844]	GETTABLE 	R45 R45 K11 ; R45 := R45["Item"]
	937	[7844]	GETTABLE 	R45 R45 K55 ; R45 := R45["mPurchasedInfo"]
	938	[7844]	GETTABLE 	R45 R45 K56 ; R45 := R45["UID"]
	939	[7844]	EQ       	0 R44 R45 ; if R44 ~= R45 then PC := 942
	940	[7844]	JMP      	942 ; PC := 942
	941	[7844]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 942
	942	[7844]	OP_LOADBOOL	R43 1 0 ; R43 := true
	943	[7844]	JMP      	970 ; PC := 970
	944	[7846]	SELF     	R44 R1 K27 ; R45 := R1; R44 := R1[0xde321e6f]
	945	[7846]	CALL     	R44 2 2 ; R44 := R44(R45)
	946	[7846]	SELF     	R44 R44 K97 ; R45 := R44; R44 := R44[0xe85a2361]
	947	[7846]	GETUPVAL 	R46 U11 ; R46 := U11
	948	[7846]	GETTABLE 	R46 R46 K77 ; R46 := R46[0x06d055f9]
	949	[7846]	EQ       	1 R5 K19 ; if R5 == nil then PC := 952
	950	[7846]	JMP      	952 ; PC := 952
	951	[7846]	OP_LOADBOOL	R47 0 1 ; R47 := false; PC := 952
	952	[7846]	OP_LOADBOOL	R47 1 0 ; R47 := true
	953	[7846]	LOADK    	R48 := 3.000000
	954	[7846]	MOVE     	R49 R5 ; R49 := R5
	955	[7846]	CALL     	R46 4 0 ; R46,... := R46(R47,R48,R49)
	956	[7846]	CALL     	R44 0 2 ; R44 := R44(R45,...)
	957	[7847]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	958	[7847]	MOVE     	R46 R44 ; R46 := R44
	959	[7847]	CALL     	R45 2 2 ; R45 := R45(R46)
	960	[7847]	TESTSET  	R43 R45 1 ; if R45 then PC := 970 else R43 := R45 
	961	[7847]	JMP      	970 ; PC := 970
	962	[7847]	SELF     	R45 R44 K98 ; R46 := R44; R45 := R44[0xcde10c4a]
	963	[7847]	CALL     	R45 2 2 ; R45 := R45(R46)
	964	[7847]	SELF     	R46 R6 K98 ; R47 := R6; R46 := R6[0xcde10c4a]
	965	[7847]	CALL     	R46 2 2 ; R46 := R46(R47)
	966	[7847]	EQ       	0 R45 R46 ; if R45 ~= R46 then PC := 969
	967	[7847]	JMP      	969 ; PC := 969
	968	[7847]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 969
	969	[7847]	OP_LOADBOOL	R43 1 0 ; R43 := true
	970	[7850]	LOADNIL  	R45 R45 ; R45 := nil
	971	[7851]	TEST     	R43 0 ; if not R43 then PC := 1003
	972	[7851]	JMP      	1003 ; PC := 1003
	973	[7852]	GETGLOBAL	R46 K83 ; R46 := 0x89326c93
	974	[7852]	SELF     	R46 R46 K99 ; R47 := R46; R46 := R46[0x765dad71]
	975	[7852]	MOVE     	R48 R6 ; R48 := R6
	976	[7852]	MOVE     	R49 R1 ; R49 := R1
	977	[7852]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	978	[7852]	MOVE     	R45 R46 ; R45 := R46
	979	[7854]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	980	[7854]	MOVE     	R47 R45 ; R47 := R45
	981	[7854]	CALL     	R46 2 2 ; R46 := R46(R47)
	982	[7854]	TEST     	R46 1 ; if R46 then PC := 995
	983	[7854]	JMP      	995 ; PC := 995
	984	[7854]	GETTABLE 	R46 R0 K100 ; R46 := R0["RawItem"]
	985	[7854]	EQ       	1 R46 K19 ; if R46 == nil then PC := 995
	986	[7854]	JMP      	995 ; PC := 995
	987	[7855]	GETGLOBAL	R46 K101 ; R46 := 0x3584dca2
	988	[7855]	CALL     	R46 1 2 ; R46 := R46()
	989	[7856]	GETTABLE 	R47 R0 K100 ; R47 := R0["RawItem"]
	990	[7856]	GETTABLE 	R47 R47 K56 ; R47 := R47["UID"]
	991	[7856]	SETTABLE 	R46 K54 R47 ; R46["mId"] := R47
	992	[7857]	SELF     	R47 R45 K102 ; R48 := R45; R47 := R45[0x05a6a906]
	993	[7857]	MOVE     	R49 R46 ; R49 := R46
	994	[7857]	CALL     	R47 3 1 ; R47(R48,R49)
	995	[7860]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	996	[7860]	MOVE     	R48 R7 ; R48 := R7
	997	[7860]	CALL     	R47 2 2 ; R47 := R47(R48)
	998	[7860]	TEST     	R47 1 ; if R47 then PC := 1003
	999	[7860]	JMP      	1003 ; PC := 1003
	1000	[7861]	SELF     	R47 R45 K103 ; R48 := R45; R47 := R45[0xaa041663]
	1001	[7861]	MOVE     	R49 R7 ; R49 := R7
	1002	[7861]	CALL     	R47 3 1 ; R47(R48,R49)
	1003	[7865]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1004	[7865]	MOVE     	R48 R45 ; R48 := R45
	1005	[7865]	CALL     	R47 2 2 ; R47 := R47(R48)
	1006	[7865]	TEST     	R47 1 ; if R47 then PC := 1032
	1007	[7865]	JMP      	1032 ; PC := 1032
	1008	[7866]	SELF     	R47 R1 K27 ; R48 := R1; R47 := R1[0xde321e6f]
	1009	[7866]	CALL     	R47 2 2 ; R47 := R47(R48)
	1010	[7866]	SELF     	R47 R47 K104 ; R48 := R47; R47 := R47[0x511d26b8]
	1011	[7866]	MOVE     	R49 R45 ; R49 := R45
	1012	[7866]	OP_LOADBOOL	R50 1 0 ; R50 := true
	1013	[7866]	CALL     	R47 4 1 ; R47(R48,R49,R50)
	1014	[7869]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1015	[7869]	MOVE     	R48 R45 ; R48 := R45
	1016	[7869]	CALL     	R47 2 2 ; R47 := R47(R48)
	1017	[7869]	TEST     	R47 1 ; if R47 then PC := 1032
	1018	[7869]	JMP      	1032 ; PC := 1032
	1019	[7869]	SELF     	R47 R45 K105 ; R48 := R45; R47 := R45[0xb5d09c91]
	1020	[7869]	CALL     	R47 2 2 ; R47 := R47(R48)
	1021	[7869]	EQ       	1 R47 R5 ; if R47 == R5 then PC := 1032
	1022	[7869]	JMP      	1032 ; PC := 1032
	1023	[7869]	EQ       	0 R5 K106 ; if R5 ~= 10.000000 then PC := 1032
	1024	[7869]	JMP      	1032 ; PC := 1032
	1025	[7870]	SELF     	R47 R1 K27 ; R48 := R1; R47 := R1[0xde321e6f]
	1026	[7870]	CALL     	R47 2 2 ; R47 := R47(R48)
	1027	[7870]	SELF     	R47 R47 K107 ; R48 := R47; R47 := R47[0x447665bf]
	1028	[7870]	MOVE     	R49 R5 ; R49 := R5
	1029	[7870]	SELF     	R50 R45 K105 ; R51 := R45; R50 := R45[0xb5d09c91]
	1030	[7870]	CALL     	R50 2 0 ; R50,... := R50(R51)
	1031	[7870]	CALL     	R47 0 1 ; R47(R48,...)
	1032	[7874]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1033	[7874]	MOVE     	R48 R45 ; R48 := R45
	1034	[7874]	CALL     	R47 2 2 ; R47 := R47(R48)
	1035	[7874]	TEST     	R47 1 ; if R47 then PC := 1052
	1036	[7874]	JMP      	1052 ; PC := 1052
	1037	[7874]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1038	[7874]	GETGLOBAL	R48 K2 ; R48 := mSelected
	1039	[7874]	GETTABLE 	R48 R48 K11 ; R48 := R48["Item"]
	1040	[7874]	GETTABLE 	R48 R48 K108 ; R48 := R48["mModularParts"]
	1041	[7874]	CALL     	R47 2 2 ; R47 := R47(R48)
	1042	[7874]	TEST     	R47 1 ; if R47 then PC := 1052
	1043	[7874]	JMP      	1052 ; PC := 1052
	1044	[7875]	SELF     	R47 R45 K109 ; R48 := R45; R47 := R45[0xa6101f7e]
	1045	[7875]	GETGLOBAL	R49 K2 ; R49 := mSelected
	1046	[7875]	GETTABLE 	R49 R49 K11 ; R49 := R49["Item"]
	1047	[7875]	GETTABLE 	R49 R49 K108 ; R49 := R49["mModularParts"]
	1048	[7875]	GETGLOBAL	R50 K2 ; R50 := mSelected
	1049	[7875]	GETTABLE 	R50 R50 K11 ; R50 := R50["Item"]
	1050	[7875]	GETTABLE 	R50 R50 K110 ; R50 := R50["mGild"]
	1051	[7875]	CALL     	R47 4 1 ; R47(R48,R49,R50)
	1052	[7878]	LOADNIL  	R47 R47 ; R47 := nil
	1053	[7879]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	1054	[7879]	MOVE     	R49 R1 ; R49 := R1
	1055	[7879]	CALL     	R48 2 2 ; R48 := R48(R49)
	1056	[7879]	TEST     	R48 1 ; if R48 then PC := 1092
	1057	[7879]	JMP      	1092 ; PC := 1092
	1058	[7879]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	1059	[7879]	SELF     	R49 R1 K27 ; R50 := R1; R49 := R1[0xde321e6f]
	1060	[7879]	CALL     	R49 2 0 ; R49,... := R49(R50)
	1061	[7879]	CALL     	R48 0 2 ; R48 := R48(R49,...)
	1062	[7879]	TEST     	R48 1 ; if R48 then PC := 1092
	1063	[7879]	JMP      	1092 ; PC := 1092
	1064	[7880]	GETGLOBAL	R48 K2 ; R48 := mSelected
	1065	[7880]	GETTABLE 	R48 R48 K3 ; R48 := R48["Element"]
	1066	[7880]	GETTABLE 	R48 R48 K16 ; R48 := R48["LoadOutId"]
	1067	[7880]	EQ       	0 R48 K29 ; if R48 ~= 0.000000 then PC := 1086
	1068	[7880]	JMP      	1086 ; PC := 1086
	1069	[7881]	GETGLOBAL	R48 K2 ; R48 := mSelected
	1070	[7881]	GETTABLE 	R48 R48 K3 ; R48 := R48["Element"]
	1071	[7881]	GETTABLE 	R48 R48 K4 ; R48 := R48["LoadOutType"]
	1072	[7881]	EQ       	0 R48 K17 ; if R48 ~= 2.000000 then PC := 1080
	1073	[7881]	JMP      	1080 ; PC := 1080
	1074	[7882]	SELF     	R48 R1 K27 ; R49 := R1; R48 := R1[0xde321e6f]
	1075	[7882]	CALL     	R48 2 2 ; R48 := R48(R49)
	1076	[7882]	SELF     	R48 R48 K111 ; R49 := R48; R48 := R48[0x2303a280]
	1077	[7882]	CALL     	R48 2 2 ; R48 := R48(R49)
	1078	[7882]	MOVE     	R47 R48 ; R47 := R48
	1079	[7882]	JMP      	1092 ; PC := 1092
	1080	[7884]	SELF     	R48 R1 K27 ; R49 := R1; R48 := R1[0xde321e6f]
	1081	[7884]	CALL     	R48 2 2 ; R48 := R48(R49)
	1082	[7884]	SELF     	R48 R48 K112 ; R49 := R48; R48 := R48[0xf7d48ee0]
	1083	[7884]	CALL     	R48 2 2 ; R48 := R48(R49)
	1084	[7884]	MOVE     	R47 R48 ; R47 := R48
	1085	[7885]	JMP      	1092 ; PC := 1092
	1086	[7887]	SELF     	R48 R1 K27 ; R49 := R1; R48 := R1[0xde321e6f]
	1087	[7887]	CALL     	R48 2 2 ; R48 := R48(R49)
	1088	[7887]	SELF     	R48 R48 K113 ; R49 := R48; R48 := R48[0x881b6b90]
	1089	[7887]	LOADK    	R50 := 0.000000
	1090	[7887]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	1091	[7887]	MOVE     	R47 R48 ; R47 := R48
	1092	[7891]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	1093	[7891]	MOVE     	R49 R45 ; R49 := R45
	1094	[7891]	CALL     	R48 2 2 ; R48 := R48(R49)
	1095	[7891]	TEST     	R48 0 ; if not R48 then PC := 1110
	1096	[7891]	JMP      	1110 ; PC := 1110
	1097	[7891]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	1098	[7891]	MOVE     	R49 R7 ; R49 := R7
	1099	[7891]	CALL     	R48 2 2 ; R48 := R48(R49)
	1100	[7891]	TEST     	R48 1 ; if R48 then PC := 1110
	1101	[7891]	JMP      	1110 ; PC := 1110
	1102	[7891]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	1103	[7891]	MOVE     	R49 R47 ; R49 := R47
	1104	[7891]	CALL     	R48 2 2 ; R48 := R48(R49)
	1105	[7891]	TEST     	R48 1 ; if R48 then PC := 1110
	1106	[7891]	JMP      	1110 ; PC := 1110
	1107	[7892]	SELF     	R48 R47 K103 ; R49 := R47; R48 := R47[0xaa041663]
	1108	[7892]	MOVE     	R50 R7 ; R50 := R7
	1109	[7892]	CALL     	R48 3 1 ; R48(R49,R50)
	1110	[7896]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	1111	[7896]	MOVE     	R49 R1 ; R49 := R1
	1112	[7896]	CALL     	R48 2 2 ; R48 := R48(R49)
	1113	[7896]	TEST     	R48 1 ; if R48 then PC := 1124
	1114	[7896]	JMP      	1124 ; PC := 1124
	1115	[7896]	TEST     	R5 0 ; if not R5 then PC := 1124
	1116	[7896]	JMP      	1124 ; PC := 1124
	1117	[7897]	SELF     	R48 R1 K27 ; R49 := R1; R48 := R1[0xde321e6f]
	1118	[7897]	CALL     	R48 2 2 ; R48 := R48(R49)
	1119	[7897]	SELF     	R48 R48 K114 ; R49 := R48; R48 := R48[0xc69087f6]
	1120	[7897]	MOVE     	R50 R5 ; R50 := R5
	1121	[7897]	LOADK    	R51 := 0.000000
	1122	[7897]	LOADK    	R52 := 2.000000
	1123	[7897]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1124	[7900]	GETUPVAL 	R48 U12 ; R48 := U12
	1125	[7900]	MOVE     	R49 R1 ; R49 := R1
	1126	[7900]	GETGLOBAL	R50 K2 ; R50 := mSelected
	1127	[7900]	GETTABLE 	R50 R50 K3 ; R50 := R50["Element"]
	1128	[7900]	GETTABLE 	R50 R50 K4 ; R50 := R50["LoadOutType"]
	1129	[7900]	GETGLOBAL	R51 K2 ; R51 := mSelected
	1130	[7900]	GETTABLE 	R51 R51 K3 ; R51 := R51["Element"]
	1131	[7900]	GETTABLE 	R51 R51 K16 ; R51 := R51["LoadOutId"]
	1132	[7900]	CALL     	R48 4 1 ; R48(R49,R50,R51)
	1133	[7901]	RETURN   	R0 1 ; return 

function #128 <?:7903,8061> (574 instructions, 2296 bytes at 0000021130B981C0)
1 param, 32 slots, 20 upvalues, 0 locals, 86 constants, 1 function
	1	[7904]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[7904]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x1467d5f4]
	3	[7904]	CALL     	R1 1 2 ; R1 := R1()
	4	[7905]	GETGLOBAL	R2 K2 ; R2 := mSelected
	5	[7905]	GETTABLE 	R2 R2 K3 ; R2 := R2["Emote"]
	6	[7905]	EQ       	1 R2 K4 ; if R2 == nil then PC := 15
	7	[7905]	JMP      	15 ; PC := 15
	8	[7905]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[7905]	GETUPVAL 	R3 U1 ; R3 := U1
	10	[7905]	GETTABLE 	R3 R3 K5 ; R3 := R3["SELECTING_CONSUMABLES"]
	11	[7905]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 15
	12	[7905]	JMP      	15 ; PC := 15
	13	[7905]	MOVE     	R2 R1 ; R2 := R1
	14	[7905]	JMP      	17 ; PC := 17
	15	[7905]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 16
	16	[7905]	OP_LOADBOOL	R2 1 0 ; R2 := true
	17	[7906]	GETTABLE 	R3 R0 K6 ; R3 := R0["mPurchased"]
	18	[7906]	TEST     	R3 0 ; if not R3 then PC := 36
	19	[7906]	JMP      	36 ; PC := 36
	20	[7906]	GETGLOBAL	R3 K2 ; R3 := mSelected
	21	[7906]	GETTABLE 	R3 R3 K7 ; R3 := R3["Element"]
	22	[7906]	EQ       	1 R3 K4 ; if R3 == nil then PC := 34
	23	[7906]	JMP      	34 ; PC := 34
	24	[7906]	GETTABLE 	R3 R0 K8 ; R3 := R0["mPurchasedInfo"]
	25	[7906]	EQ       	1 R3 K4 ; if R3 == nil then PC := 34
	26	[7906]	JMP      	34 ; PC := 34
	27	[7906]	GETTABLE 	R3 R0 K8 ; R3 := R0["mPurchasedInfo"]
	28	[7906]	GETTABLE 	R3 R3 K9 ; R3 := R3["UID"]
	29	[7906]	GETGLOBAL	R4 K2 ; R4 := mSelected
	30	[7906]	GETTABLE 	R4 R4 K7 ; R4 := R4["Element"]
	31	[7906]	GETTABLE 	R4 R4 K9 ; R4 := R4["UID"]
	32	[7906]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 35
	33	[7906]	JMP      	35 ; PC := 35
	34	[7906]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 35
	35	[7906]	OP_LOADBOOL	R3 1 0 ; R3 := true
	36	[7907]	GETTABLE 	R4 R0 K6 ; R4 := R0["mPurchased"]
	37	[7907]	TEST     	R4 0 ; if not R4 then PC := 48
	38	[7907]	JMP      	48 ; PC := 48
	39	[7907]	GETUPVAL 	R4 U0 ; R4 := U0
	40	[7907]	GETUPVAL 	R5 U1 ; R5 := U1
	41	[7907]	GETTABLE 	R5 R5 K5 ; R5 := R5["SELECTING_CONSUMABLES"]
	42	[7907]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 47
	43	[7907]	JMP      	47 ; PC := 47
	44	[7907]	MOVE     	R4 R2 ; R4 := R2
	45	[7907]	JMP      	48 ; PC := 48
	46	[7907]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 47
	47	[7907]	OP_LOADBOOL	R4 1 0 ; R4 := true
	48	[7908]	GETUPVAL 	R5 U2 ; R5 := U2
	49	[7908]	GETTABLE 	R5 R5 K10 ; R5 := R5[0xcac502bd]
	50	[7908]	GETTABLE 	R6 R0 K11 ; R6 := R0["mStoreItem"]
	51	[7908]	CALL     	R5 2 2 ; R5 := R5(R6)
	52	[7908]	TEST     	R5 1 ; if R5 then PC := 55
	53	[7908]	JMP      	55 ; PC := 55
	54	[7908]	GETTABLE 	R5 R0 K12 ; R5 := R0["BundleOnly"]
	55	[7911]	GETGLOBAL	R6 K0 ; R6 := 0x34291f5c
	56	[7911]	GETTABLE 	R6 R6 K1 ; R6 := R6[0x1467d5f4]
	57	[7911]	CALL     	R6 1 2 ; R6 := R6()
	58	[7911]	TEST     	R6 0 ; if not R6 then PC := 74
	59	[7911]	JMP      	74 ; PC := 74
	60	[7911]	GETUPVAL 	R6 U0 ; R6 := U0
	61	[7911]	GETUPVAL 	R7 U1 ; R7 := U1
	62	[7911]	GETTABLE 	R7 R7 K13 ; R7 := R7["SWAPPING_ITEM"]
	63	[7911]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 73
	64	[7911]	JMP      	73 ; PC := 73
	65	[7911]	GETUPVAL 	R6 U0 ; R6 := U0
	66	[7911]	GETUPVAL 	R7 U1 ; R7 := U1
	67	[7911]	GETTABLE 	R7 R7 K14 ; R7 := R7["SELECTING_SKINS"]
	68	[7911]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 73
	69	[7911]	JMP      	73 ; PC := 73
	70	[7911]	MOVE     	R6 R2 ; R6 := R2
	71	[7911]	JMP      	74 ; PC := 74
	72	[7911]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 73
	73	[7911]	OP_LOADBOOL	R6 1 0 ; R6 := true
	74	[7912]	LOADK    	R7 K15 ; R7 := "/Lotus/Language/OstronCrafting/Crafting_Preview_NoIcon"
	75	[7913]	TEST     	R6 1 ; if R6 then PC := 87
	76	[7913]	JMP      	87 ; PC := 87
	77	[7914]	TEST     	R4 0 ; if not R4 then PC := 81
	78	[7914]	JMP      	81 ; PC := 81
	79	[7915]	LOADK    	R7 K16 ; R7 := "/Lotus/Language/Menu/ItemSelection_Equip"
	80	[7915]	JMP      	87 ; PC := 87
	81	[7916]	GETTABLE 	R8 R0 K12 ; R8 := R0["BundleOnly"]
	82	[7916]	TEST     	R8 0 ; if not R8 then PC := 86
	83	[7916]	JMP      	86 ; PC := 86
	84	[7917]	LOADK    	R7 K15 ; R7 := "/Lotus/Language/OstronCrafting/Crafting_Preview_NoIcon"
	85	[7917]	JMP      	87 ; PC := 87
	86	[7919]	LOADK    	R7 K17 ; R7 := "/Lotus/Language/Menu/Global_BuyItem"
	87	[7922]	GETGLOBAL	R8 K18 ; R8 := mButtons
	88	[7922]	GETTABLE 	R8 R8 K19 ; R8 := R8[2.000000]
	89	[7922]	SETTABLE 	R8 K20 R7 ; R8["mLabel"] := R7
	90	[7923]	GETGLOBAL	R8 K18 ; R8 := mButtons
	91	[7923]	GETTABLE 	R8 R8 K19 ; R8 := R8[2.000000]
	92	[7923]	GETUPVAL 	R9 U3 ; R9 := U3
	93	[7923]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x06d055f9]
	94	[7923]	TEST     	R6 1 ; if R6 then PC := 104
	95	[7923]	JMP      	104 ; PC := 104
	96	[7923]	GETUPVAL 	R10 U0 ; R10 := U0
	97	[7923]	GETUPVAL 	R11 U1 ; R11 := U1
	98	[7923]	GETTABLE 	R11 R11 K5 ; R11 := R11["SELECTING_CONSUMABLES"]
	99	[7923]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 105
	100	[7923]	JMP      	105 ; PC := 105
	101	[7923]	GETTABLE 	R10 R0 K6 ; R10 := R0["mPurchased"]
	102	[7923]	NOT      	R10 R10 ; R10 := not R10
	103	[7923]	JMP      	106 ; PC := 106
	104	[7923]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 105
	105	[7923]	OP_LOADBOOL	R10 1 0 ; R10 := true
	106	[7923]	LOADK    	R11 K23 ; R11 := "MENU_SELECT"
	107	[7923]	LOADK    	R12 K24 ; R12 := "MENU_GENERIC1"
	108	[7923]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	109	[7923]	SETTABLE 	R8 K21 R9 ; R8["mCallout"] := R9
	110	[7924]	GETGLOBAL	R8 K18 ; R8 := mButtons
	111	[7924]	GETTABLE 	R8 R8 K19 ; R8 := R8[2.000000]
	112	[7930]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	113	[7930]	MOVE     	R0 R4 ; R0 := R4
	114	[7930]	GETUPVAL 	R0 U4 ; R0 := U4
	115	[7930]	SETTABLE 	R8 K25 R9 ; R8["mCallback"] := R9
	116	[7932]	LOADK    	R8 K16 ; R8 := "/Lotus/Language/Menu/ItemSelection_Equip"
	117	[7933]	TEST     	R6 0 ; if not R6 then PC := 126
	118	[7933]	JMP      	126 ; PC := 126
	119	[7934]	GETUPVAL 	R9 U3 ; R9 := U3
	120	[7934]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x06d055f9]
	121	[7934]	MOVE     	R10 R4 ; R10 := R4
	122	[7934]	LOADK    	R11 K16 ; R11 := "/Lotus/Language/Menu/ItemSelection_Equip"
	123	[7934]	LOADK    	R12 K17 ; R12 := "/Lotus/Language/Menu/Global_BuyItem"
	124	[7934]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	125	[7934]	MOVE     	R8 R9 ; R8 := R9
	126	[7936]	GETGLOBAL	R9 K18 ; R9 := mButtons
	127	[7936]	GETTABLE 	R9 R9 K26 ; R9 := R9[3.000000]
	128	[7936]	SETTABLE 	R9 K20 R8 ; R9["mLabel"] := R8
	129	[7937]	GETGLOBAL	R9 K18 ; R9 := mButtons
	130	[7937]	GETTABLE 	R9 R9 K26 ; R9 := R9[3.000000]
	131	[7937]	TESTSET  	R10 R6 1 ; if R6 then PC := 143 else R10 := R6 
	132	[7937]	JMP      	143 ; PC := 143
	133	[7937]	GETTABLE 	R10 R0 K6 ; R10 := R0["mPurchased"]
	134	[7937]	TEST     	R10 0 ; if not R10 then PC := 143
	135	[7937]	JMP      	143 ; PC := 143
	136	[7937]	GETUPVAL 	R10 U0 ; R10 := U0
	137	[7937]	GETUPVAL 	R11 U1 ; R11 := U1
	138	[7937]	GETTABLE 	R11 R11 K5 ; R11 := R11["SELECTING_CONSUMABLES"]
	139	[7937]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 142
	140	[7937]	JMP      	142 ; PC := 142
	141	[7937]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 142
	142	[7937]	OP_LOADBOOL	R10 1 0 ; R10 := true
	143	[7937]	SETTABLE 	R9 K27 R10 ; R9["mVisible"] := R10
	144	[7938]	GETGLOBAL	R9 K18 ; R9 := mButtons
	145	[7938]	GETTABLE 	R9 R9 K26 ; R9 := R9[3.000000]
	146	[7938]	SETTABLE 	R9 K21 K23 ; R9["mCallout"] := "MENU_SELECT"
	147	[7940]	GETUPVAL 	R9 U0 ; R9 := U0
	148	[7940]	GETUPVAL 	R10 U1 ; R10 := U1
	149	[7940]	GETTABLE 	R10 R10 K5 ; R10 := R10["SELECTING_CONSUMABLES"]
	150	[7940]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 159
	151	[7940]	JMP      	159 ; PC := 159
	152	[7941]	GETGLOBAL	R9 K18 ; R9 := mButtons
	153	[7941]	GETTABLE 	R9 R9 K19 ; R9 := R9[2.000000]
	154	[7941]	TESTSET  	R10 R4 1 ; if R4 then PC := 157 else R10 := R4 
	155	[7941]	JMP      	157 ; PC := 157
	156	[7941]	MOVE     	R10 R5 ; R10 := R5
	157	[7941]	SETTABLE 	R9 K27 R10 ; R9["mVisible"] := R10
	158	[7941]	JMP      	169 ; PC := 169
	159	[7943]	GETGLOBAL	R9 K18 ; R9 := mButtons
	160	[7943]	GETTABLE 	R9 R9 K19 ; R9 := R9[2.000000]
	161	[7943]	GETTABLE 	R10 R0 K28 ; R10 := R0["mEmpty"]
	162	[7943]	TEST     	R10 1 ; if R10 then PC := 168
	163	[7943]	JMP      	168 ; PC := 168
	164	[7943]	GETGLOBAL	R10 K29 ; R10 := 0x7b998233
	165	[7943]	GETTABLE 	R11 R0 K11 ; R11 := R0["mStoreItem"]
	166	[7943]	CALL     	R10 2 2 ; R10 := R10(R11)
	167	[7943]	NOT      	R10 R10 ; R10 := not R10
	168	[7943]	SETTABLE 	R9 K27 R10 ; R9["mVisible"] := R10
	169	[7946]	GETUPVAL 	R9 U5 ; R9 := U5
	170	[7946]	CALL     	R9 1 1 ; R9()
	171	[7948]	GETGLOBAL	R9 K30 ; R9 := 0x55156ff7
	172	[7948]	CALL     	R9 1 2 ; R9 := R9()
	173	[7949]	OP_LOADBOOL	R10 0 0 ; R10 := false
	174	[7951]	TEST     	R1 0 ; if not R1 then PC := 180
	175	[7951]	JMP      	180 ; PC := 180
	176	[7951]	GETUPVAL 	R11 U6 ; R11 := U6
	177	[7951]	GETTABLE 	R11 R11 K31 ; R11 := R11["AutoSelect"]
	178	[7951]	TEST     	R11 1 ; if R11 then PC := 197
	179	[7951]	JMP      	197 ; PC := 197
	180	[7952]	TEST     	R1 1 ; if R1 then PC := 239
	181	[7952]	JMP      	239 ; PC := 239
	182	[7952]	GETUPVAL 	R11 U6 ; R11 := U6
	183	[7952]	GETTABLE 	R11 R11 K32 ; R11 := R11["DoubleClick"]
	184	[7952]	TEST     	R11 1 ; if R11 then PC := 197
	185	[7952]	JMP      	197 ; PC := 197
	186	[7952]	GETGLOBAL	R11 K33 ; R11 := mPrevSelection
	187	[7952]	EQ       	1 R11 K4 ; if R11 == nil then PC := 239
	188	[7952]	JMP      	239 ; PC := 239
	189	[7952]	GETGLOBAL	R11 K33 ; R11 := mPrevSelection
	190	[7952]	EQ       	0 R11 R0 ; if R11 ~= R0 then PC := 239
	191	[7952]	JMP      	239 ; PC := 239
	192	[7952]	GETUPVAL 	R11 U6 ; R11 := U6
	193	[7952]	GETTABLE 	R11 R11 K34 ; R11 := R11["Time"]
	194	[7952]	SUB      	R11 R9 R11 ; R11 := R9 - R11
	195	[7952]	LT       	0 R11 K35 ; if R11 >= 0.500000 then PC := 239
	196	[7952]	JMP      	239 ; PC := 239
	197	[7954]	GETUPVAL 	R11 U6 ; R11 := U6
	198	[7954]	SETTABLE 	R11 K34 K36 ; R11["Time"] := 0.000000
	199	[7955]	GETUPVAL 	R11 U6 ; R11 := U6
	200	[7955]	SETTABLE 	R11 K32 K37 ; R11["DoubleClick"] := false
	201	[7956]	GETUPVAL 	R11 U6 ; R11 := U6
	202	[7956]	SETTABLE 	R11 K31 K37 ; R11["AutoSelect"] := false
	203	[7958]	GETTABLE 	R11 R0 K6 ; R11 := R0["mPurchased"]
	204	[7958]	TEST     	R11 0 ; if not R11 then PC := 234
	205	[7958]	JMP      	234 ; PC := 234
	206	[7959]	GETGLOBAL	R11 K29 ; R11 := 0x7b998233
	207	[7959]	GETGLOBAL	R12 K2 ; R12 := mSelected
	208	[7959]	GETTABLE 	R12 R12 K38 ; R12 := R12["Item"]
	209	[7959]	CALL     	R11 2 2 ; R11 := R11(R12)
	210	[7959]	TEST     	R11 1 ; if R11 then PC := 228
	211	[7959]	JMP      	228 ; PC := 228
	212	[7959]	GETGLOBAL	R11 K2 ; R11 := mSelected
	213	[7959]	GETTABLE 	R11 R11 K38 ; R11 := R11["Item"]
	214	[7959]	GETTABLE 	R11 R11 K39 ; R11 := R11["LoadOutId"]
	215	[7959]	EQ       	0 R11 K41 ; if R11 ~= 4.000000 then PC := 228
	216	[7959]	JMP      	228 ; PC := 228
	217	[7959]	GETGLOBAL	R11 K2 ; R11 := mSelected
	218	[7959]	GETTABLE 	R11 R11 K38 ; R11 := R11["Item"]
	219	[7959]	GETTABLE 	R11 R11 K42 ; R11 := R11["RawItem"]
	220	[7959]	GETTABLE 	R11 R11 K38 ; R11 := R11["Item"]
	221	[7959]	SELF     	R11 R11 K43 ; R12 := R11; R11 := R11[0xdbfbf6c0]
	222	[7959]	LOADK    	R13 := 2.000000
	223	[7959]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	224	[7959]	TEST     	R11 1 ; if R11 then PC := 228
	225	[7959]	JMP      	228 ; PC := 228
	226	[7962]	OP_LOADBOOL	R10 1 0 ; R10 := true
	227	[7962]	JMP      	239 ; PC := 239
	228	[7963]	GETUPVAL 	R11 U7 ; R11 := U7
	229	[7963]	CALL     	R11 1 2 ; R11 := R11()
	230	[7963]	TEST     	R11 1 ; if R11 then PC := 239
	231	[7963]	JMP      	239 ; PC := 239
	232	[7964]	RETURN   	R0 1 ; return 
	233	[7965]	JMP      	239 ; PC := 239
	234	[7966]	TEST     	R5 0 ; if not R5 then PC := 239
	235	[7966]	JMP      	239 ; PC := 239
	236	[7967]	GETUPVAL 	R11 U4 ; R11 := U4
	237	[7967]	CALL     	R11 1 1 ; R11()
	238	[7968]	RETURN   	R0 1 ; return 
	239	[7972]	GETUPVAL 	R11 U6 ; R11 := U6
	240	[7972]	GETGLOBAL	R12 K30 ; R12 := 0x55156ff7
	241	[7972]	CALL     	R12 1 2 ; R12 := R12()
	242	[7972]	SETTABLE 	R11 K34 R12 ; R11[0x741d078c] := R12
	243	[7973]	GETUPVAL 	R11 U6 ; R11 := U6
	244	[7973]	SETTABLE 	R11 K32 K37 ; R11["DoubleClick"] := false
	245	[7975]	GETUPVAL 	R11 U0 ; R11 := U0
	246	[7975]	GETUPVAL 	R12 U1 ; R12 := U1
	247	[7975]	GETTABLE 	R12 R12 K14 ; R12 := R12["SELECTING_SKINS"]
	248	[7975]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 344
	249	[7975]	JMP      	344 ; PC := 344
	250	[7976]	GETGLOBAL	R11 K29 ; R11 := 0x7b998233
	251	[7976]	GETGLOBAL	R12 K2 ; R12 := mSelected
	252	[7976]	GETTABLE 	R12 R12 K44 ; R12 := R12["CosmeticItem"]
	253	[7976]	CALL     	R11 2 2 ; R11 := R11(R12)
	254	[7976]	TEST     	R11 1 ; if R11 then PC := 303
	255	[7976]	JMP      	303 ; PC := 303
	256	[7976]	GETGLOBAL	R11 K2 ; R11 := mSelected
	257	[7976]	GETTABLE 	R11 R11 K44 ; R11 := R11["CosmeticItem"]
	258	[7976]	GETTABLE 	R11 R11 K45 ; R11 := R11["appliedSet"]
	259	[7976]	EQ       	0 R11 K46 ; if R11 ~= true then PC := 303
	260	[7976]	JMP      	303 ; PC := 303
	261	[7976]	GETGLOBAL	R11 K2 ; R11 := mSelected
	262	[7976]	GETTABLE 	R11 R11 K44 ; R11 := R11["CosmeticItem"]
	263	[7976]	GETTABLE 	R11 R11 K47 ; R11 := R11["Type"]
	264	[7976]	GETTABLE 	R12 R0 K47 ; R12 := R0["Type"]
	265	[7976]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 303
	266	[7976]	JMP      	303 ; PC := 303
	267	[7977]	GETGLOBAL	R11 K2 ; R11 := mSelected
	268	[7977]	GETTABLE 	R11 R11 K44 ; R11 := R11["CosmeticItem"]
	269	[7977]	SETTABLE 	R11 K45 K37 ; R11["appliedSet"] := false
	270	[7978]	GETGLOBAL	R11 K48 ; R11 := _T
	271	[7978]	GETTABLE 	R11 R11 K49 ; R11 := R11["MenuSuitAvatar"]
	272	[7979]	SELF     	R12 R11 K50 ; R13 := R11; R12 := R11[0xde321e6f]
	273	[7979]	CALL     	R12 2 2 ; R12 := R12(R13)
	274	[7979]	SELF     	R12 R12 K51 ; R13 := R12; R12 := R12[0x374b084a]
	275	[7979]	CALL     	R12 2 1 ; R12(R13)
	276	[7980]	GETUPVAL 	R12 U8 ; R12 := U8
	277	[7980]	GETUPVAL 	R13 U9 ; R13 := U9
	278	[7980]	GETTABLE 	R13 R13 K52 ; R13 := R13["Current"]
	279	[7980]	EQ       	1 R13 K19 ; if R13 == 2.000000 then PC := 282
	280	[7980]	JMP      	282 ; PC := 282
	281	[7980]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 282
	282	[7980]	OP_LOADBOOL	R13 1 0 ; R13 := true
	283	[7980]	CALL     	R12 2 1 ; R12(R13)
	284	[7981]	GETGLOBAL	R12 K29 ; R12 := 0x7b998233
	285	[7981]	GETUPVAL 	R13 U10 ; R13 := U10
	286	[7981]	CALL     	R12 2 2 ; R12 := R12(R13)
	287	[7981]	TEST     	R12 0 ; if not R12 then PC := 293
	288	[7981]	JMP      	293 ; PC := 293
	289	[7982]	SELF     	R12 R11 K50 ; R13 := R11; R12 := R11[0xde321e6f]
	290	[7982]	CALL     	R12 2 2 ; R12 := R12(R13)
	291	[7982]	SELF     	R12 R12 K53 ; R13 := R12; R12 := R12[0x0c277ae1]
	292	[7982]	CALL     	R12 2 1 ; R12(R13)
	293	[7984]	GETUPVAL 	R12 U11 ; R12 := U11
	294	[7984]	GETGLOBAL	R13 K2 ; R13 := mSelected
	295	[7984]	GETTABLE 	R13 R13 K7 ; R13 := R13["Element"]
	296	[7984]	GETTABLE 	R13 R13 K54 ; R13 := R13["LoadOutType"]
	297	[7984]	GETGLOBAL	R14 K2 ; R14 := mSelected
	298	[7984]	GETTABLE 	R14 R14 K7 ; R14 := R14["Element"]
	299	[7984]	GETTABLE 	R14 R14 K39 ; R14 := R14["LoadOutId"]
	300	[7984]	GETGLOBAL	R15 K2 ; R15 := mSelected
	301	[7984]	GETTABLE 	R15 R15 K7 ; R15 := R15["Element"]
	302	[7984]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	303	[7987]	GETUPVAL 	R12 U12 ; R12 := U12
	304	[7987]	MOVE     	R13 R0 ; R13 := R0
	305	[7987]	CALL     	R12 2 1 ; R12(R13)
	306	[7989]	GETTABLE 	R12 R0 K6 ; R12 := R0["mPurchased"]
	307	[7989]	TEST     	R12 1 ; if R12 then PC := 322
	308	[7989]	JMP      	322 ; PC := 322
	309	[7989]	GETTABLE 	R12 R0 K55 ; R12 := R0["SetItems"]
	310	[7989]	EQ       	1 R12 K4 ; if R12 == nil then PC := 322
	311	[7989]	JMP      	322 ; PC := 322
	312	[7990]	GETGLOBAL	R12 K56 ; R12 := 0xc8802016
	313	[7990]	GETTABLE 	R13 R0 K55 ; R13 := R0["SetItems"]
	314	[7990]	CALL     	R12 2 4 ; R12,R13,R14 := R12(R13)
	315	[7990]	JMP      	320 ; PC := 320
	316	[7991]	GETUPVAL 	R17 U12 ; R17 := U12
	317	[7991]	MOVE     	R18 R16 ; R18 := R16
	318	[7991]	CALL     	R17 2 1 ; R17(R18)
	319	[7992]	SETTABLE 	R0 K45 K46 ; R0["appliedSet"] := true
	320	[7990]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 316; R14 := R15 end
	321	[7992]	JMP      	316 ; PC := 316
	322	[7995]	GETGLOBAL	R17 K2 ; R17 := mSelected
	323	[7995]	SETTABLE 	R17 K44 R0 ; R17["CosmeticItem"] := R0
	324	[7997]	GETUPVAL 	R17 U13 ; R17 := U13
	325	[7997]	GETGLOBAL	R18 K2 ; R18 := mSelected
	326	[7997]	GETTABLE 	R18 R18 K57 ; R18 := R18["Cosmetic"]
	327	[7997]	CALL     	R17 2 2 ; R17 := R17(R18)
	328	[7997]	TEST     	R17 0 ; if not R17 then PC := 336
	329	[7997]	JMP      	336 ; PC := 336
	330	[7998]	GETUPVAL 	R17 U14 ; R17 := U14
	331	[7998]	GETGLOBAL	R18 K2 ; R18 := mSelected
	332	[7998]	GETTABLE 	R18 R18 K7 ; R18 := R18["Element"]
	333	[7998]	OP_LOADBOOL	R19 0 0 ; R19 := false
	334	[7998]	CALL     	R17 3 1 ; R17(R18,R19)
	335	[7998]	JMP      	553 ; PC := 553
	336	[8000]	GETUPVAL 	R17 U15 ; R17 := U15
	337	[8000]	GETGLOBAL	R18 K2 ; R18 := mSelected
	338	[8000]	GETTABLE 	R18 R18 K7 ; R18 := R18["Element"]
	339	[8000]	GETUPVAL 	R19 U16 ; R19 := U16
	340	[8000]	GETTABLE 	R19 R19 K58 ; R19 := R19["mStatCompare"]
	341	[8000]	GETTABLE 	R19 R19 K59 ; R19 := R19["mStats"]
	342	[8000]	CALL     	R17 3 1 ; R17(R18,R19)
	343	[8001]	JMP      	553 ; PC := 553
	344	[8002]	GETUPVAL 	R17 U0 ; R17 := U0
	345	[8002]	GETUPVAL 	R18 U1 ; R18 := U1
	346	[8002]	GETTABLE 	R18 R18 K13 ; R18 := R18["SWAPPING_ITEM"]
	347	[8002]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 516
	348	[8002]	JMP      	516 ; PC := 516
	349	[8003]	GETUPVAL 	R17 U17 ; R17 := U17
	350	[8003]	MOVE     	R18 R0 ; R18 := R0
	351	[8003]	CALL     	R17 2 1 ; R17(R18)
	352	[8005]	GETGLOBAL	R17 K29 ; R17 := 0x7b998233
	353	[8005]	GETGLOBAL	R18 K60 ; R18 := 0x25d99d89
	354	[8005]	CALL     	R17 2 2 ; R17 := R17(R18)
	355	[8005]	TEST     	R17 1 ; if R17 then PC := 553
	356	[8005]	JMP      	553 ; PC := 553
	357	[8005]	GETGLOBAL	R17 K29 ; R17 := 0x7b998233
	358	[8005]	GETGLOBAL	R18 K2 ; R18 := mSelected
	359	[8005]	GETTABLE 	R18 R18 K7 ; R18 := R18["Element"]
	360	[8005]	CALL     	R17 2 2 ; R17 := R17(R18)
	361	[8005]	TEST     	R17 1 ; if R17 then PC := 553
	362	[8005]	JMP      	553 ; PC := 553
	363	[8006]	LOADK    	R17 K61 ; R17 := ""
	364	[8007]	GETGLOBAL	R18 K2 ; R18 := mSelected
	365	[8007]	GETTABLE 	R18 R18 K7 ; R18 := R18["Element"]
	366	[8007]	GETTABLE 	R18 R18 K62 ; R18 := R18["mDisplayName"]
	367	[8007]	EQ       	1 R18 K4 ; if R18 == nil then PC := 373
	368	[8007]	JMP      	373 ; PC := 373
	369	[8008]	GETGLOBAL	R18 K2 ; R18 := mSelected
	370	[8008]	GETTABLE 	R18 R18 K7 ; R18 := R18["Element"]
	371	[8008]	GETTABLE 	R17 R18 K62 ; R17 := R18["mDisplayName"]
	372	[8008]	JMP      	392 ; PC := 392
	373	[8009]	GETGLOBAL	R18 K29 ; R18 := 0x7b998233
	374	[8009]	GETGLOBAL	R19 K2 ; R19 := mSelected
	375	[8009]	GETTABLE 	R19 R19 K7 ; R19 := R19["Element"]
	376	[8009]	GETTABLE 	R19 R19 K11 ; R19 := R19["mStoreItem"]
	377	[8009]	CALL     	R18 2 2 ; R18 := R18(R19)
	378	[8009]	TEST     	R18 1 ; if R18 then PC := 392
	379	[8009]	JMP      	392 ; PC := 392
	380	[8010]	GETGLOBAL	R18 K63 ; R18 := 0xae91e43b
	381	[8010]	SELF     	R18 R18 K64 ; R19 := R18; R18 := R18[0x42b04007]
	382	[8010]	GETGLOBAL	R20 K65 ; R20 := 0x64fb1586
	383	[8010]	GETGLOBAL	R21 K2 ; R21 := mSelected
	384	[8010]	GETTABLE 	R21 R21 K7 ; R21 := R21["Element"]
	385	[8010]	GETTABLE 	R21 R21 K11 ; R21 := R21["mStoreItem"]
	386	[8010]	SELF     	R21 R21 K66 ; R22 := R21; R21 := R21[0xd3a9d01f]
	387	[8010]	CALL     	R21 2 0 ; R21,... := R21(R22)
	388	[8010]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	389	[8010]	OP_LOADBOOL	R21 1 0 ; R21 := true
	390	[8010]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	391	[8010]	MOVE     	R17 R18 ; R17 := R18
	392	[8012]	GETGLOBAL	R18 K67 ; R18 := 0x5f0788c4
	393	[8012]	MOVE     	R19 R17 ; R19 := R17
	394	[8012]	CALL     	R18 2 2 ; R18 := R18(R19)
	395	[8012]	MOVE     	R17 R18 ; R17 := R18
	396	[8014]	GETGLOBAL	R18 K29 ; R18 := 0x7b998233
	397	[8014]	GETGLOBAL	R19 K2 ; R19 := mSelected
	398	[8014]	GETTABLE 	R19 R19 K7 ; R19 := R19["Element"]
	399	[8014]	GETTABLE 	R19 R19 K68 ; R19 := R19["EquippedItem"]
	400	[8014]	CALL     	R18 2 2 ; R18 := R18(R19)
	401	[8014]	TEST     	R18 1 ; if R18 then PC := 425
	402	[8014]	JMP      	425 ; PC := 425
	403	[8014]	GETGLOBAL	R18 K29 ; R18 := 0x7b998233
	404	[8014]	GETGLOBAL	R19 K2 ; R19 := mSelected
	405	[8014]	GETTABLE 	R19 R19 K7 ; R19 := R19["Element"]
	406	[8014]	GETTABLE 	R19 R19 K68 ; R19 := R19["EquippedItem"]
	407	[8014]	GETTABLE 	R19 R19 K69 ; R19 := R19["mUpgradeType"]
	408	[8014]	CALL     	R18 2 2 ; R18 := R18(R19)
	409	[8014]	TEST     	R18 1 ; if R18 then PC := 425
	410	[8014]	JMP      	425 ; PC := 425
	411	[8015]	GETUPVAL 	R18 U18 ; R18 := U18
	412	[8015]	GETTABLE 	R18 R18 K70 ; R18 := R18[0x52e49221]
	413	[8015]	GETGLOBAL	R19 K63 ; R19 := 0xae91e43b
	414	[8015]	GETGLOBAL	R20 K2 ; R20 := mSelected
	415	[8015]	GETTABLE 	R20 R20 K7 ; R20 := R20["Element"]
	416	[8015]	GETTABLE 	R20 R20 K68 ; R20 := R20["EquippedItem"]
	417	[8015]	OP_LOADBOOL	R21 0 0 ; R21 := false
	418	[8015]	OP_LOADBOOL	R22 1 0 ; R22 := true
	419	[8015]	CALL     	R18 5 4 ; R18,R19,R20 := R18(R19,R20,R21,R22)
	420	[8016]	MOVE     	R21 R17 ; R21 := R17
	421	[8016]	LOADK    	R22 K71 ; R22 := " ("
	422	[8016]	MOVE     	R23 R18 ; R23 := R18
	423	[8016]	LOADK    	R24 K72 ; R24 := ")"
	424	[8016]	CONCAT   	R17 R21 R24 ; R17 := R21 .. R22 .. R23 .. R24
	425	[8019]	GETGLOBAL	R21 K29 ; R21 := 0x7b998233
	426	[8019]	GETGLOBAL	R22 K2 ; R22 := mSelected
	427	[8019]	GETTABLE 	R22 R22 K7 ; R22 := R22["Element"]
	428	[8019]	GETTABLE 	R22 R22 K11 ; R22 := R22["mStoreItem"]
	429	[8019]	CALL     	R21 2 2 ; R21 := R21(R22)
	430	[8019]	TEST     	R21 1 ; if R21 then PC := 448
	431	[8019]	JMP      	448 ; PC := 448
	432	[8020]	MOVE     	R21 R17 ; R21 := R17
	433	[8020]	LOADK    	R22 K73 ; R22 := " : "
	434	[8020]	GETGLOBAL	R23 K67 ; R23 := 0x5f0788c4
	435	[8020]	GETGLOBAL	R24 K63 ; R24 := 0xae91e43b
	436	[8020]	SELF     	R24 R24 K64 ; R25 := R24; R24 := R24[0x42b04007]
	437	[8020]	LOADK    	R26 K74 ; R26 := "/Lotus/Language/Menu/ItemSelection_Equipped"
	438	[8020]	OP_LOADBOOL	R27 0 0 ; R27 := false
	439	[8020]	CALL     	R24 4 0 ; R24,... := R24(R25,R26,R27)
	440	[8020]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	441	[8020]	CONCAT   	R21 R21 R23 ; R21 := R21 .. R22 .. R23
	442	[8021]	GETGLOBAL	R22 K63 ; R22 := 0xae91e43b
	443	[8021]	SELF     	R22 R22 K75 ; R23 := R22; R22 := R22[0x20b98db3]
	444	[8021]	LOADK    	R24 K76 ; R24 := "EquippedTitle.text"
	445	[8021]	MOVE     	R25 R21 ; R25 := R21
	446	[8021]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	447	[8021]	JMP      	453 ; PC := 453
	448	[8023]	GETGLOBAL	R22 K63 ; R22 := 0xae91e43b
	449	[8023]	SELF     	R22 R22 K75 ; R23 := R22; R22 := R22[0x20b98db3]
	450	[8023]	LOADK    	R24 K76 ; R24 := "EquippedTitle.text"
	451	[8023]	LOADK    	R25 K61 ; R25 := ""
	452	[8023]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	453	[8026]	GETGLOBAL	R22 K67 ; R22 := 0x5f0788c4
	454	[8026]	GETTABLE 	R23 R0 K77 ; R23 := R0["Name"]
	455	[8026]	CALL     	R22 2 2 ; R22 := R22(R23)
	456	[8027]	GETGLOBAL	R23 K29 ; R23 := 0x7b998233
	457	[8027]	GETTABLE 	R24 R0 K42 ; R24 := R0["RawItem"]
	458	[8027]	CALL     	R23 2 2 ; R23 := R23(R24)
	459	[8027]	TEST     	R23 1 ; if R23 then PC := 487
	460	[8027]	JMP      	487 ; PC := 487
	461	[8027]	GETGLOBAL	R23 K29 ; R23 := 0x7b998233
	462	[8027]	GETTABLE 	R24 R0 K42 ; R24 := R0["RawItem"]
	463	[8027]	GETTABLE 	R24 R24 K38 ; R24 := R24["Item"]
	464	[8027]	CALL     	R23 2 2 ; R23 := R23(R24)
	465	[8027]	TEST     	R23 1 ; if R23 then PC := 487
	466	[8027]	JMP      	487 ; PC := 487
	467	[8027]	GETGLOBAL	R23 K29 ; R23 := 0x7b998233
	468	[8027]	GETTABLE 	R24 R0 K42 ; R24 := R0["RawItem"]
	469	[8027]	GETTABLE 	R24 R24 K38 ; R24 := R24["Item"]
	470	[8027]	GETTABLE 	R24 R24 K69 ; R24 := R24["mUpgradeType"]
	471	[8027]	CALL     	R23 2 2 ; R23 := R23(R24)
	472	[8027]	TEST     	R23 1 ; if R23 then PC := 487
	473	[8027]	JMP      	487 ; PC := 487
	474	[8028]	GETUPVAL 	R23 U18 ; R23 := U18
	475	[8028]	GETTABLE 	R23 R23 K70 ; R23 := R23[0x52e49221]
	476	[8028]	GETGLOBAL	R24 K63 ; R24 := 0xae91e43b
	477	[8028]	GETTABLE 	R25 R0 K42 ; R25 := R0["RawItem"]
	478	[8028]	GETTABLE 	R25 R25 K38 ; R25 := R25["Item"]
	479	[8028]	OP_LOADBOOL	R26 0 0 ; R26 := false
	480	[8028]	OP_LOADBOOL	R27 1 0 ; R27 := true
	481	[8028]	CALL     	R23 5 4 ; R23,R24,R25 := R23(R24,R25,R26,R27)
	482	[8029]	MOVE     	R26 R22 ; R26 := R22
	483	[8029]	LOADK    	R27 K71 ; R27 := " ("
	484	[8029]	MOVE     	R28 R23 ; R28 := R23
	485	[8029]	LOADK    	R29 K72 ; R29 := ")"
	486	[8029]	CONCAT   	R22 R26 R29 ; R22 := R26 .. R27 .. R28 .. R29
	487	[8032]	TEST     	R3 1 ; if R3 then PC := 508
	488	[8032]	JMP      	508 ; PC := 508
	489	[8033]	GETGLOBAL	R26 K2 ; R26 := mSelected
	490	[8033]	GETTABLE 	R26 R26 K7 ; R26 := R26["Element"]
	491	[8033]	GETTABLE 	R26 R26 K11 ; R26 := R26["mStoreItem"]
	492	[8033]	TEST     	R26 0 ; if not R26 then PC := 503
	493	[8033]	JMP      	503 ; PC := 503
	494	[8034]	GETGLOBAL	R26 K63 ; R26 := 0xae91e43b
	495	[8034]	SELF     	R26 R26 K75 ; R27 := R26; R26 := R26[0x20b98db3]
	496	[8034]	LOADK    	R28 K76 ; R28 := "EquippedTitle.text"
	497	[8034]	MOVE     	R29 R17 ; R29 := R17
	498	[8034]	LOADK    	R30 K78 ; R30 := "\r\n > \r\n"
	499	[8034]	MOVE     	R31 R22 ; R31 := R22
	500	[8034]	CONCAT   	R29 R29 R31 ; R29 := R29 .. R30 .. R31
	501	[8034]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	502	[8034]	JMP      	508 ; PC := 508
	503	[8036]	GETGLOBAL	R26 K63 ; R26 := 0xae91e43b
	504	[8036]	SELF     	R26 R26 K75 ; R27 := R26; R26 := R26[0x20b98db3]
	505	[8036]	LOADK    	R28 K76 ; R28 := "EquippedTitle.text"
	506	[8036]	MOVE     	R29 R22 ; R29 := R22
	507	[8036]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	508	[8040]	GETUPVAL 	R26 U19 ; R26 := U19
	509	[8040]	OP_LOADBOOL	R27 1 0 ; R27 := true
	510	[8040]	CALL     	R26 2 1 ; R26(R27)
	511	[8041]	GETUPVAL 	R26 U14 ; R26 := U14
	512	[8041]	MOVE     	R27 R0 ; R27 := R0
	513	[8041]	OP_LOADBOOL	R28 0 0 ; R28 := false
	514	[8041]	CALL     	R26 3 1 ; R26(R27,R28)
	515	[8042]	JMP      	553 ; PC := 553
	516	[8043]	GETUPVAL 	R26 U0 ; R26 := U0
	517	[8043]	GETUPVAL 	R27 U1 ; R27 := U1
	518	[8043]	GETTABLE 	R27 R27 K5 ; R27 := R27["SELECTING_CONSUMABLES"]
	519	[8043]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 553
	520	[8043]	JMP      	553 ; PC := 553
	521	[8044]	GETGLOBAL	R26 K2 ; R26 := mSelected
	522	[8044]	GETTABLE 	R26 R26 K3 ; R26 := R26["Emote"]
	523	[8044]	EQ       	1 R26 K4 ; if R26 == nil then PC := 553
	524	[8044]	JMP      	553 ; PC := 553
	525	[8044]	GETGLOBAL	R26 K29 ; R26 := 0x7b998233
	526	[8044]	GETGLOBAL	R27 K48 ; R27 := _T
	527	[8044]	GETTABLE 	R27 R27 K49 ; R27 := R27["MenuSuitAvatar"]
	528	[8044]	CALL     	R26 2 2 ; R26 := R26(R27)
	529	[8044]	TEST     	R26 1 ; if R26 then PC := 553
	530	[8044]	JMP      	553 ; PC := 553
	531	[8045]	GETGLOBAL	R26 K29 ; R26 := 0x7b998233
	532	[8045]	GETGLOBAL	R27 K2 ; R27 := mSelected
	533	[8045]	GETTABLE 	R27 R27 K38 ; R27 := R27["Item"]
	534	[8045]	GETTABLE 	R27 R27 K47 ; R27 := R27["Type"]
	535	[8045]	CALL     	R26 2 2 ; R26 := R26(R27)
	536	[8045]	TEST     	R26 0 ; if not R26 then PC := 544
	537	[8045]	JMP      	544 ; PC := 544
	538	[8046]	GETGLOBAL	R26 K48 ; R26 := _T
	539	[8046]	GETTABLE 	R26 R26 K49 ; R26 := R26["MenuSuitAvatar"]
	540	[8046]	SELF     	R26 R26 K79 ; R27 := R26; R26 := R26[0xb13134f8]
	541	[8046]	LOADNIL  	R28 R28 ; R28 := nil
	542	[8046]	CALL     	R26 3 1 ; R26(R27,R28)
	543	[8046]	JMP      	553 ; PC := 553
	544	[8048]	GETGLOBAL	R26 K48 ; R26 := _T
	545	[8048]	GETTABLE 	R26 R26 K49 ; R26 := R26["MenuSuitAvatar"]
	546	[8048]	SELF     	R26 R26 K79 ; R27 := R26; R26 := R26[0xb13134f8]
	547	[8048]	GETGLOBAL	R28 K80 ; R28 := 0xb009bbc6
	548	[8048]	GETGLOBAL	R29 K2 ; R29 := mSelected
	549	[8048]	GETTABLE 	R29 R29 K38 ; R29 := R29["Item"]
	550	[8048]	GETTABLE 	R29 R29 K47 ; R29 := R29["Type"]
	551	[8048]	CALL     	R28 2 0 ; R28,... := R28(R29)
	552	[8048]	CALL     	R26 0 1 ; R26(R27,...)
	553	[8054]	GETGLOBAL	R26 K29 ; R26 := 0x7b998233
	554	[8054]	GETGLOBAL	R27 K81 ; R27 := 0xcb79539e
	555	[8054]	CALL     	R26 2 2 ; R26 := R26(R27)
	556	[8054]	TEST     	R26 1 ; if R26 then PC := 570
	557	[8054]	JMP      	570 ; PC := 570
	558	[8054]	GETTABLE 	R26 R0 K6 ; R26 := R0["mPurchased"]
	559	[8054]	TEST     	R26 1 ; if R26 then PC := 570
	560	[8054]	JMP      	570 ; PC := 570
	561	[8055]	GETGLOBAL	R26 K81 ; R26 := 0xcb79539e
	562	[8055]	SELF     	R26 R26 K82 ; R27 := R26; R26 := R26[0x8b8fb8b7]
	563	[8055]	GETGLOBAL	R28 K83 ; R28 := 0x0469f296
	564	[8055]	LOADK    	R29 K84 ; R29 := "ITEM_VIEWED_ARSENAL"
	565	[8055]	CALL     	R28 2 2 ; R28 := R28(R29)
	566	[8055]	GETTABLE 	R29 R0 K11 ; R29 := R0["mStoreItem"]
	567	[8055]	SELF     	R29 R29 K85 ; R30 := R29; R29 := R29[0xed4e0128]
	568	[8055]	CALL     	R29 2 0 ; R29,... := R29(R30)
	569	[8055]	CALL     	R26 0 1 ; R26(R27,...)
	570	[8058]	TEST     	R10 0 ; if not R10 then PC := 574
	571	[8058]	JMP      	574 ; PC := 574
	572	[8059]	GETUPVAL 	R26 U7 ; R26 := U7
	573	[8059]	CALL     	R26 1 1 ; R26()
	574	[8061]	RETURN   	R0 1 ; return 

function #129 <?:8063,8100> (34 instructions, 136 bytes at 0000021127CD7120)
0 params, 5 slots, 2 upvalues, 0 locals, 9 constants, 1 function
	1	[8064]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8064]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[8064]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8064]	TEST     	R0 1 ; if R0 then PC := 26
	5	[8064]	JMP      	26 ; PC := 26
	6	[8065]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[8065]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x25a6e75e]
	8	[8065]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[8066]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	10	[8066]	MOVE     	R2 R0 ; R2 := R0
	11	[8066]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[8066]	TEST     	R1 1 ; if R1 then PC := 25
	13	[8066]	JMP      	25 ; PC := 25
	14	[8066]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[8066]	GETGLOBAL	R2 K3 ; R2 := mItemsGrid
	16	[8066]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[8066]	TEST     	R1 1 ; if R1 then PC := 25
	18	[8066]	JMP      	25 ; PC := 25
	19	[8067]	GETGLOBAL	R1 K3 ; R1 := mItemsGrid
	20	[8067]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x741d078c]
	21	[8096]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	22	[8096]	MOVE     	R0 R0 ; R0 := R0
	23	[8096]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[8067]	CALL     	R1 3 1 ; R1(R2,R3)
	25	[8097]	CLOSE    	R0 ; SAVE R0,...
	26	[8099]	GETGLOBAL	R0 K5 ; R0 := mTimerTable
	27	[8099]	GETGLOBAL	R1 K5 ; R1 := mTimerTable
	28	[8099]	GETTABLE 	R1 R1 K7 ; R1 := R1["mTimerMgr"]
	29	[8099]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xbd2e96ea]
	30	[8099]	LOADK    	R3 := 1.000000
	31	[8099]	GETUPVAL 	R4 U1 ; R4 := U1
	32	[8099]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	33	[8099]	SETTABLE 	R0 K6 R1 ; R0["mRedrawItemsGridTimerId"] := R1
	34	[8100]	RETURN   	R0 1 ; return 

function #130 <?:8102,8120> (62 instructions, 248 bytes at 0000021127CD78E0)
0 params, 15 slots, 1 upvalue, 0 locals, 22 constants, 0 functions
	1	[8103]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8103]	GETGLOBAL	R1 K1 ; R1 := mLists
	3	[8103]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	4	[8103]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[8103]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[8103]	JMP      	8 ; PC := 8
	7	[8104]	RETURN   	R0 1 ; return 
	8	[8107]	GETGLOBAL	R0 K1 ; R0 := mLists
	9	[8107]	GETTABLE 	R0 R0 K3 ; R0 := R0["mCosmeticsScrollBar"]
	10	[8107]	GETTABLE 	R0 R0 K4 ; R0 := R0["mHeight"]
	11	[8108]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[8108]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xd718f59b]
	13	[8108]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	14	[8108]	MOVE     	R3 R0 ; R3 := R0
	15	[8108]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	16	[8109]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[8109]	GETTABLE 	R2 R2 K7 ; R2 := R2[0x0db7934d]
	18	[8109]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	19	[8109]	LOADK    	R4 := 5.000000
	20	[8109]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[8110]	GETGLOBAL	R3 K1 ; R3 := mLists
	22	[8110]	GETTABLE 	R3 R3 K2 ; R3 := R3["mCosmeticsList"]
	23	[8110]	GETTABLE 	R3 R3 K8 ; R3 := R3["mInitListYPos"]
	24	[8110]	GETGLOBAL	R4 K1 ; R4 := mLists
	25	[8110]	GETTABLE 	R4 R4 K2 ; R4 := R4["mCosmeticsList"]
	26	[8110]	GETTABLE 	R4 R4 K9 ; R4 := R4["mInitialY"]
	27	[8110]	ADD      	R3 R3 R4 ; R3 := R3 + R4
	28	[8110]	SUB      	R3 R3 K10 ; R3 := R3 - 37.000000
	29	[8111]	GETUPVAL 	R4 U0 ; R4 := U0
	30	[8111]	GETTABLE 	R4 R4 K11 ; R4 := R4[0xe5e5a417]
	31	[8111]	GETGLOBAL	R5 K6 ; R5 := 0xae91e43b
	32	[8111]	DIV      	R6 R0 K12 ; R6 := R0 / 2.000000
	33	[8111]	ADD      	R6 R3 R6 ; R6 := R3 + R6
	34	[8111]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	35	[8113]	NEWTABLE 	R5 4 0 ; R5 := {}
	36	[8113]	GETGLOBAL	R6 K13 ; R6 := 0x7cf8742c
	37	[8113]	GETGLOBAL	R7 K14 ; R7 := 0x8e826993
	38	[8113]	GETGLOBAL	R8 K15 ; R8 := 0xc1607267
	39	[8113]	GETGLOBAL	R9 K16 ; R9 := 0x0d7545ad
	40	[8113]	SETLIST  	R5 4 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 4
	41	[8114]	LOADK    	R6 := 1.000000
	42	[8114]	LEN      	R7 R5 ; R7 := # R5
	43	[8114]	LOADK    	R8 := 1.000000
	44	[8114]	FORPREP  	R6 61 ; R6 -= R8; PC := 61
	45	[8115]	GETTABLE 	R10 R5 R9 ; R10 := R5[R9]
	46	[8116]	SELF     	R11 R10 K17 ; R12 := R10; R11 := R10[0x830eea67]
	47	[8116]	GETGLOBAL	R13 K18 ; R13 := 0x6c97a788
	48	[8116]	GETTABLE 	R13 R13 K19 ; R13 := R13["VISIBILITY_SIZE"]
	49	[8116]	MOVE     	R14 R1 ; R14 := R1
	50	[8116]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	51	[8117]	SELF     	R11 R10 K17 ; R12 := R10; R11 := R10[0x830eea67]
	52	[8117]	GETGLOBAL	R13 K18 ; R13 := 0x6c97a788
	53	[8117]	GETTABLE 	R13 R13 K20 ; R13 := R13["VISIBILITY_CENTER"]
	54	[8117]	MOVE     	R14 R4 ; R14 := R4
	55	[8117]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	56	[8118]	SELF     	R11 R10 K17 ; R12 := R10; R11 := R10[0x830eea67]
	57	[8118]	GETGLOBAL	R13 K18 ; R13 := 0x6c97a788
	58	[8118]	GETTABLE 	R13 R13 K21 ; R13 := R13["VISIBILITY_FADE_SIZE"]
	59	[8118]	MOVE     	R14 R2 ; R14 := R2
	60	[8118]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	61	[8114]	FORLOOP  	R6 45 ; R6 += R8; if R6 <= R7 then begin PC := 45; R9 := R6 end
	62	[8120]	RETURN   	R0 1 ; return 

function #131 <?:8122,8140> (82 instructions, 328 bytes at 0000021127CD7D40)
0 params, 9 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[8123]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8123]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	3	[8123]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8123]	TEST     	R0 1 ; if R0 then PC := 66
	5	[8123]	JMP      	66 ; PC := 66
	6	[8124]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[8124]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xd718f59b]
	8	[8124]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	9	[8124]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	10	[8124]	GETTABLE 	R2 R2 K4 ; R2 := R2["mScrollBar"]
	11	[8124]	GETTABLE 	R2 R2 K5 ; R2 := R2["mHeight"]
	12	[8124]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	13	[8125]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[8125]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe5e5a417]
	15	[8125]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	16	[8125]	LOADK    	R3 := 605.000000
	17	[8125]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	18	[8127]	GETGLOBAL	R2 K7 ; R2 := 0xae09323f
	19	[8127]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	20	[8127]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	21	[8127]	GETTABLE 	R4 R4 K10 ; R4 := R4["VISIBILITY_SIZE"]
	22	[8127]	MOVE     	R5 R0 ; R5 := R0
	23	[8127]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	24	[8128]	GETGLOBAL	R2 K7 ; R2 := 0xae09323f
	25	[8128]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	26	[8128]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	27	[8128]	GETTABLE 	R4 R4 K11 ; R4 := R4["VISIBILITY_CENTER"]
	28	[8128]	MOVE     	R5 R1 ; R5 := R1
	29	[8128]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	30	[8129]	GETGLOBAL	R2 K12 ; R2 := 0x7e155d6a
	31	[8129]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	32	[8129]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	33	[8129]	GETTABLE 	R4 R4 K10 ; R4 := R4["VISIBILITY_SIZE"]
	34	[8129]	MOVE     	R5 R0 ; R5 := R0
	35	[8129]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	36	[8130]	GETGLOBAL	R2 K12 ; R2 := 0x7e155d6a
	37	[8130]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	38	[8130]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	39	[8130]	GETTABLE 	R4 R4 K11 ; R4 := R4["VISIBILITY_CENTER"]
	40	[8130]	MOVE     	R5 R1 ; R5 := R1
	41	[8130]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	42	[8131]	GETGLOBAL	R2 K13 ; R2 := 0x119fdfe2
	43	[8131]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	44	[8131]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	45	[8131]	GETTABLE 	R4 R4 K10 ; R4 := R4["VISIBILITY_SIZE"]
	46	[8131]	MOVE     	R5 R0 ; R5 := R0
	47	[8131]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	48	[8132]	GETGLOBAL	R2 K13 ; R2 := 0x119fdfe2
	49	[8132]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	50	[8132]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	51	[8132]	GETTABLE 	R4 R4 K11 ; R4 := R4["VISIBILITY_CENTER"]
	52	[8132]	MOVE     	R5 R1 ; R5 := R1
	53	[8132]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	54	[8133]	GETGLOBAL	R2 K14 ; R2 := 0x2c424c91
	55	[8133]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	56	[8133]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	57	[8133]	GETTABLE 	R4 R4 K10 ; R4 := R4["VISIBILITY_SIZE"]
	58	[8133]	MOVE     	R5 R0 ; R5 := R0
	59	[8133]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	60	[8134]	GETGLOBAL	R2 K14 ; R2 := 0x2c424c91
	61	[8134]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x830eea67]
	62	[8134]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	63	[8134]	GETTABLE 	R4 R4 K11 ; R4 := R4["VISIBILITY_CENTER"]
	64	[8134]	MOVE     	R5 R1 ; R5 := R1
	65	[8134]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	66	[8137]	GETUPVAL 	R2 U0 ; R2 := U0
	67	[8137]	GETTABLE 	R2 R2 K15 ; R2 := R2[0x44537adf]
	68	[8137]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	69	[8137]	CALL     	R2 2 3 ; R2,R3 := R2(R3)
	70	[8138]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	71	[8138]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x67bc869f]
	72	[8138]	LOADK    	R6 K17 ; R6 := "LeftFade"
	73	[8138]	LOADK    	R7 := 13.000000
	74	[8138]	MOVE     	R8 R3 ; R8 := R3
	75	[8138]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	76	[8139]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	77	[8139]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x67bc869f]
	78	[8139]	LOADK    	R6 K18 ; R6 := "RightFade"
	79	[8139]	LOADK    	R7 := 13.000000
	80	[8139]	MOVE     	R8 R3 ; R8 := R3
	81	[8139]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	82	[8140]	RETURN   	R0 1 ; return 

function #132 <?:8142,8144> (22 instructions, 88 bytes at 0000021127CD81D0)
0 params, 2 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[8143]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8143]	GETTABLE 	R0 R0 K0 ; R0 := R0["Current"]
	3	[8143]	EQ       	0 R0 K2 ; if R0 ~= 3.000000 then PC := 19
	4	[8143]	JMP      	19 ; PC := 19
	5	[8143]	GETGLOBAL	R0 K3 ; R0 := mSelected
	6	[8143]	GETTABLE 	R0 R0 K4 ; R0 := R0["Element"]
	7	[8143]	EQ       	1 R0 K5 ; if R0 == nil then PC := 19
	8	[8143]	JMP      	19 ; PC := 19
	9	[8143]	GETGLOBAL	R0 K3 ; R0 := mSelected
	10	[8143]	GETTABLE 	R0 R0 K4 ; R0 := R0["Element"]
	11	[8143]	GETTABLE 	R0 R0 K6 ; R0 := R0["LoadOutId"]
	12	[8143]	EQ       	0 R0 K7 ; if R0 ~= 4.000000 then PC := 19
	13	[8143]	JMP      	19 ; PC := 19
	14	[8143]	GETGLOBAL	R0 K3 ; R0 := mSelected
	15	[8143]	GETTABLE 	R0 R0 K4 ; R0 := R0["Element"]
	16	[8143]	GETTABLE 	R0 R0 K8 ; R0 := R0["LoadOutType"]
	17	[8143]	EQ       	0 R0 K9 ; if R0 ~= 8.000000 then PC := 20
	18	[8143]	JMP      	20 ; PC := 20
	19	[8143]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 20
	20	[8143]	OP_LOADBOOL	R0 1 0 ; R0 := true
	21	[8143]	RETURN   	R0 2 ; return R0 
	22	[8144]	RETURN   	R0 1 ; return 

function #133 <?:8146,8878> (249 instructions, 996 bytes at 0000021127CD83F0)
0 params, 10 slots, 14 upvalues, 0 locals, 81 constants, 14 functions
	1	[8147]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[8147]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.Components.CategorizedGrid"
	3	[8147]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8148]	GETTABLE 	R1 R0 K3 ; R1 := R0[0x67d7b715]
	5	[8148]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	6	[8148]	LOADK    	R3 K5 ; R3 := "Item"
	7	[8148]	LOADK    	R4 := 4.000000
	8	[8148]	LOADK    	R5 := 3.000000
	9	[8148]	LOADNIL  	R6 R6 ; R6 := nil
	10	[8148]	LOADK    	R7 K6 ; R7 := "SortMenu"
	11	[8148]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	12	[8148]	SETGLOBALHASH	R1 K2 ; mItemsGrid := R1
	13	[8149]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	14	[8149]	SETTABLE 	R1 K7 K8 ; R1["mFilterBy"] := 0.000000
	15	[8150]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	16	[8150]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	17	[8150]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x91a24e4b]
	18	[8150]	LOADK    	R4 K11 ; R4 := "Item.Name.Tf"
	19	[8150]	LOADK    	R5 := 1.000000
	20	[8150]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	21	[8150]	SETTABLE 	R1 K9 R2 ; R1["mOriginalNameY"] := R2
	22	[8151]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	23	[8151]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	24	[8151]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x91a24e4b]
	25	[8151]	LOADK    	R4 K11 ; R4 := "Item.Name.Tf"
	26	[8151]	LOADK    	R5 := 34.000000
	27	[8151]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	28	[8151]	SETTABLE 	R1 K12 R2 ; R1["mOriginalNameHeight"] := R2
	29	[8152]	GETGLOBAL	R1 K13 ; R1 := 0x34291f5c
	30	[8152]	GETTABLE 	R1 R1 K14 ; R1 := R1[0xe6b41adb]
	31	[8152]	CALL     	R1 1 2 ; R1 := R1()
	32	[8152]	TEST     	R1 0 ; if not R1 then PC := 44
	33	[8152]	JMP      	44 ; PC := 44
	34	[8153]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	35	[8153]	SELF     	R1 R1 K15 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	36	[8153]	LOADK    	R3 K16 ; R3 := "ItemSelected"
	37	[8153]	LOADK    	R4 K17 ; R4 := "ItemFocused"
	38	[8153]	LOADK    	R5 K18 ; R5 := "ItemUnfocused"
	39	[8153]	LOADK    	R6 K19 ; R6 := "ItemPressed"
	40	[8153]	LOADNIL  	R7 R8 ; R7 := R8 := nil
	41	[8153]	LOADK    	R9 K20 ; R9 := "ItemReleasedOutside"
	42	[8153]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	43	[8153]	JMP      	50 ; PC := 50
	44	[8155]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	45	[8155]	SELF     	R1 R1 K15 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	46	[8155]	LOADK    	R3 K16 ; R3 := "ItemSelected"
	47	[8155]	LOADK    	R4 K17 ; R4 := "ItemFocused"
	48	[8155]	LOADK    	R5 K18 ; R5 := "ItemUnfocused"
	49	[8155]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	50	[8157]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	51	[8157]	SETTABLE 	R1 K21 K22 ; R1["mColumnSeparation"] := 205.000000
	52	[8158]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	53	[8158]	SETTABLE 	R1 K23 K24 ; R1["mRowSeparation"] := 195.000000
	54	[8159]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	55	[8159]	SELF     	R1 R1 K25 ; R2 := R1; R1 := R1[0x3bc79f4f]
	56	[8159]	LOADK    	R3 K26 ; R3 := "ScrollBar"
	57	[8159]	LOADK    	R4 := -10.000000
	58	[8159]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	59	[8160]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	60	[8160]	SELF     	R1 R1 K27 ; R2 := R1; R1 := R1[0x7220acb6]
	61	[8160]	CALL     	R1 2 1 ; R1(R2)
	62	[8161]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	63	[8161]	SETTABLE 	R1 K28 K29 ; R1["mInitialDepth"] := 2000.000000
	64	[8162]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	65	[8162]	SETTABLE 	R1 K30 K8 ; R1["mElementDelayTime"] := 0.000000
	66	[8163]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	67	[8163]	SETTABLE 	R1 K31 K32 ; R1["mSelectElementsOnFocus"] := false
	68	[8164]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	69	[8164]	SETTABLE 	R1 K33 K34 ; R1["mAddFillerElements"] := true
	70	[8165]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	71	[8165]	SETTABLE 	R1 K35 K32 ; R1["mDiegeticMode"] := false
	72	[8166]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	73	[8166]	SETTABLE 	R1 K36 K37 ; R1["mSelectedScale"] := 100.000000
	74	[8167]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	75	[8167]	SETTABLE 	R1 K38 K39 ; R1["mScrollBarHorizontalOffset"] := nil
	76	[8168]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	77	[8168]	SETTABLE 	R1 K40 K39 ; R1["mSortMenuHorizontalOffset"] := nil
	78	[8169]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	79	[8169]	SETTABLE 	R1 K41 K39 ; R1["mSortMenuVerticalOffset"] := nil
	80	[8170]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	81	[8170]	SETTABLE 	R1 K42 K8 ; R1["mSmoothScrollExtraSpace"] := 0.000000
	82	[8171]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	83	[8171]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	84	[8171]	GETTABLE 	R2 R2 K44 ; R2 := R2["SetSortBy_Internal"]
	85	[8171]	SETTABLE 	R1 K43 R2 ; R1["_ItemsGrid_SetSortBy_Internal"] := R2
	86	[8172]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	87	[8172]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	88	[8172]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x91a24e4b]
	89	[8172]	LOADK    	R4 K46 ; R4 := "Item.Btn"
	90	[8172]	LOADK    	R5 := 12.000000
	91	[8172]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	92	[8172]	SETTABLE 	R1 K45 R2 ; R1["mElementWidth"] := R2
	93	[8173]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	94	[8173]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	95	[8173]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x91a24e4b]
	96	[8173]	LOADK    	R4 K46 ; R4 := "Item.Btn"
	97	[8173]	LOADK    	R5 := 13.000000
	98	[8173]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	99	[8173]	SETTABLE 	R1 K47 R2 ; R1["mElementHeight"] := R2
	100	[8174]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	101	[8181]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	102	[8181]	SETTABLE 	R1 K44 R2 ; R1["SetSortBy_Internal"] := R2
	103	[8182]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	104	[8182]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	105	[8182]	GETTABLE 	R2 R2 K49 ; R2 := R2["OnFilteredElementsReady"]
	106	[8182]	SETTABLE 	R1 K48 R2 ; R1["_ItemsGrid_OnFilteredElementsReady"] := R2
	107	[8183]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	108	[8204]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	109	[8204]	SETTABLE 	R1 K49 R2 ; R1["OnFilteredElementsReady"] := R2
	110	[8205]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	111	[8216]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	112	[8216]	GETUPVAL 	R0 U0 ; R0 := U0
	113	[8216]	SETTABLE 	R1 K50 R2 ; R1["mOnFocusedCallback"] := R2
	114	[8217]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	115	[8227]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	116	[8227]	SETTABLE 	R1 K51 R2 ; R1["mOnUnfocusedCallback"] := R2
	117	[8228]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	118	[8340]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	119	[8340]	GETUPVAL 	R0 U1 ; R0 := U1
	120	[8340]	GETUPVAL 	R0 U2 ; R0 := U2
	121	[8340]	GETUPVAL 	R0 U0 ; R0 := U0
	122	[8340]	GETUPVAL 	R0 U3 ; R0 := U3
	123	[8340]	GETUPVAL 	R0 U4 ; R0 := U4
	124	[8340]	GETUPVAL 	R0 U5 ; R0 := U5
	125	[8340]	GETUPVAL 	R0 U6 ; R0 := U6
	126	[8340]	SETTABLE 	R1 K52 R2 ; R1["mOnSelectedCallback"] := R2
	127	[8341]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	128	[8688]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	129	[8688]	GETUPVAL 	R0 U7 ; R0 := U7
	130	[8688]	GETUPVAL 	R0 U0 ; R0 := U0
	131	[8688]	GETUPVAL 	R0 U8 ; R0 := U8
	132	[8688]	GETUPVAL 	R0 U1 ; R0 := U1
	133	[8688]	GETUPVAL 	R0 U2 ; R0 := U2
	134	[8688]	GETUPVAL 	R0 U9 ; R0 := U9
	135	[8688]	GETUPVAL 	R0 U3 ; R0 := U3
	136	[8688]	SETTABLE 	R1 K53 R2 ; R1["mElementDrawCallback"] := R2
	137	[8689]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	138	[8689]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	139	[8689]	GETTABLE 	R2 R2 K55 ; R2 := R2["FocusElementInDirection"]
	140	[8689]	SETTABLE 	R1 K54 R2 ; R1["_mItemsGrid_FocusElementInDirection"] := R2
	141	[8690]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	142	[8708]	CLOSURE  	R2 6 ; R2 := closure(Function #7)
	143	[8708]	SETTABLE 	R1 K55 R2 ; R1["FocusElementInDirection"] := R2
	144	[8710]	GETGLOBAL	R1 K2 ; R1 := mItemsGrid
	145	[8719]	CLOSURE  	R2 7 ; R2 := closure(Function #8)
	146	[8719]	GETUPVAL 	R0 U10 ; R0 := U10
	147	[8719]	SETTABLE 	R1 K56 R2 ; R1["AdditionalFilterFunction"] := R2
	148	[8721]	GETGLOBAL	R1 K57 ; R1 := mTimerTable
	149	[8721]	GETTABLE 	R1 R1 K58 ; R1 := R1["mRedrawItemsGridTimerId"]
	150	[8721]	EQ       	1 R1 K39 ; if R1 == nil then PC := 158
	151	[8721]	JMP      	158 ; PC := 158
	152	[8722]	GETGLOBAL	R1 K57 ; R1 := mTimerTable
	153	[8722]	GETTABLE 	R1 R1 K59 ; R1 := R1["mTimerMgr"]
	154	[8722]	SELF     	R1 R1 K60 ; R2 := R1; R1 := R1[0x775c858b]
	155	[8722]	GETGLOBAL	R3 K57 ; R3 := mTimerTable
	156	[8722]	GETTABLE 	R3 R3 K58 ; R3 := R3["mRedrawItemsGridTimerId"]
	157	[8722]	CALL     	R1 3 1 ; R1(R2,R3)
	158	[8751]	CLOSURE  	R1 8 ; R1 := closure(Function #9)
	159	[8751]	GETUPVAL 	R0 U0 ; R0 := U0
	160	[8751]	GETUPVAL 	R0 U11 ; R0 := U11
	161	[8754]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	162	[8754]	SELF     	R2 R2 K61 ; R3 := R2; R2 := R2[0xb029c588]
	163	[8754]	NEWTABLE 	R4 0 3 ; R4 := {}
	164	[8754]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	165	[8754]	SELF     	R5 R5 K63 ; R6 := R5; R5 := R5[0x42b04007]
	166	[8754]	LOADK    	R7 K64 ; R7 := "/Lotus/Language/Menu/SortBy_Name"
	167	[8754]	OP_LOADBOOL	R8 0 0 ; R8 := false
	168	[8754]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	169	[8754]	SETTABLE 	R4 K62 R5 ; R4["Name"] := R5
	170	[8754]	SETTABLE 	R4 K65 K66 ; R4["SortId"] := "NAME"
	171	[8768]	CLOSURE  	R5 9 ; R5 := closure(Function #10)
	172	[8768]	MOVE     	R0 R1 ; R0 := R1
	173	[8768]	SETTABLE 	R4 K67 R5 ; R4["Attribute"] := R5
	174	[8754]	CALL     	R2 3 1 ; R2(R3,R4)
	175	[8771]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	176	[8771]	SELF     	R2 R2 K61 ; R3 := R2; R2 := R2[0xb029c588]
	177	[8771]	NEWTABLE 	R4 0 3 ; R4 := {}
	178	[8771]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	179	[8771]	SELF     	R5 R5 K63 ; R6 := R5; R5 := R5[0x42b04007]
	180	[8771]	LOADK    	R7 K68 ; R7 := "/Lotus/Language/Menu/SortBy_Level"
	181	[8771]	OP_LOADBOOL	R8 0 0 ; R8 := false
	182	[8771]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	183	[8771]	SETTABLE 	R4 K62 R5 ; R4["Name"] := R5
	184	[8771]	SETTABLE 	R4 K65 K69 ; R4["SortId"] := "RANK"
	185	[8785]	CLOSURE  	R5 10 ; R5 := closure(Function #11)
	186	[8785]	MOVE     	R0 R1 ; R0 := R1
	187	[8785]	SETTABLE 	R4 K67 R5 ; R4["Attribute"] := R5
	188	[8771]	CALL     	R2 3 1 ; R2(R3,R4)
	189	[8788]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	190	[8788]	SELF     	R2 R2 K61 ; R3 := R2; R2 := R2[0xb029c588]
	191	[8788]	NEWTABLE 	R4 0 3 ; R4 := {}
	192	[8788]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	193	[8788]	SELF     	R5 R5 K63 ; R6 := R5; R5 := R5[0x42b04007]
	194	[8788]	LOADK    	R7 K70 ; R7 := "/Lotus/Language/Menu/SortBy_FormaCount"
	195	[8788]	OP_LOADBOOL	R8 0 0 ; R8 := false
	196	[8788]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	197	[8788]	SETTABLE 	R4 K62 R5 ; R4["Name"] := R5
	198	[8788]	SETTABLE 	R4 K65 K71 ; R4["SortId"] := "FORMA"
	199	[8808]	CLOSURE  	R5 11 ; R5 := closure(Function #12)
	200	[8808]	MOVE     	R0 R1 ; R0 := R1
	201	[8808]	SETTABLE 	R4 K67 R5 ; R4["Attribute"] := R5
	202	[8788]	CALL     	R2 3 1 ; R2(R3,R4)
	203	[8810]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	204	[8810]	SELF     	R2 R2 K61 ; R3 := R2; R2 := R2[0xb029c588]
	205	[8810]	NEWTABLE 	R4 0 3 ; R4 := {}
	206	[8810]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	207	[8810]	SELF     	R5 R5 K63 ; R6 := R5; R5 := R5[0x42b04007]
	208	[8810]	LOADK    	R7 K72 ; R7 := "/Lotus/Language/Menu/SortBy_Usage"
	209	[8810]	OP_LOADBOOL	R8 0 0 ; R8 := false
	210	[8810]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	211	[8810]	SETTABLE 	R4 K62 R5 ; R4["Name"] := R5
	212	[8810]	SETTABLE 	R4 K65 K73 ; R4["SortId"] := "USAGE"
	213	[8828]	CLOSURE  	R5 12 ; R5 := closure(Function #13)
	214	[8828]	MOVE     	R0 R1 ; R0 := R1
	215	[8828]	SETTABLE 	R4 K67 R5 ; R4["Attribute"] := R5
	216	[8810]	CALL     	R2 3 1 ; R2(R3,R4)
	217	[8830]	GETGLOBAL	R2 K2 ; R2 := mItemsGrid
	218	[8830]	SELF     	R2 R2 K61 ; R3 := R2; R2 := R2[0xb029c588]
	219	[8830]	NEWTABLE 	R4 0 3 ; R4 := {}
	220	[8830]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	221	[8830]	SELF     	R5 R5 K63 ; R6 := R5; R5 := R5[0x42b04007]
	222	[8830]	LOADK    	R7 K74 ; R7 := "/Lotus/Language/Menu/Loadout_Lens"
	223	[8830]	OP_LOADBOOL	R8 0 0 ; R8 := false
	224	[8830]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	225	[8830]	SETTABLE 	R4 K62 R5 ; R4["Name"] := R5
	226	[8830]	SETTABLE 	R4 K65 K75 ; R4["SortId"] := "LENS"
	227	[8865]	CLOSURE  	R5 13 ; R5 := closure(Function #14)
	228	[8865]	MOVE     	R0 R1 ; R0 := R1
	229	[8865]	SETTABLE 	R4 K67 R5 ; R4["Attribute"] := R5
	230	[8830]	CALL     	R2 3 1 ; R2(R3,R4)
	231	[8867]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	232	[8867]	SELF     	R2 R2 K76 ; R3 := R2; R2 := R2[0x492f9da2]
	233	[8867]	CALL     	R2 2 2 ; R2 := R2(R3)
	234	[8868]	GETGLOBAL	R3 K77 ; R3 := 0x25d99d89
	235	[8868]	SELF     	R3 R3 K78 ; R4 := R3; R3 := R3[0xb6b7ca1e]
	236	[8868]	MOVE     	R5 R2 ; R5 := R2
	237	[8868]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	238	[8869]	EQ       	0 R3 K79 ; if R3 ~= "" then PC := 241
	239	[8869]	JMP      	241 ; PC := 241
	240	[8870]	LOADK    	R3 K66 ; R3 := "NAME"
	241	[8873]	GETGLOBAL	R4 K2 ; R4 := mItemsGrid
	242	[8873]	SELF     	R4 R4 K80 ; R5 := R4; R4 := R4[0x60125a4f]
	243	[8873]	MOVE     	R6 R3 ; R6 := R3
	244	[8873]	CALL     	R4 3 1 ; R4(R5,R6)
	245	[8875]	GETUPVAL 	R4 U12 ; R4 := U12
	246	[8875]	CALL     	R4 1 1 ; R4()
	247	[8877]	GETUPVAL 	R4 U13 ; R4 := U13
	248	[8877]	CALL     	R4 1 1 ; R4()
	249	[8878]	RETURN   	R0 1 ; return 

function #134 <?:8880,8947> (102 instructions, 408 bytes at 000002111DF8FDF0)
1 param, 19 slots, 9 upvalues, 0 locals, 21 constants, 1 function
	1	[8881]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8881]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[8881]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[8881]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8881]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[8881]	JMP      	8 ; PC := 8
	7	[8882]	RETURN   	R0 1 ; return 
	8	[8885]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[8885]	TEST     	R1 0 ; if not R1 then PC := 23
	10	[8885]	JMP      	23 ; PC := 23
	11	[8885]	GETGLOBAL	R1 K1 ; R1 := mSelected
	12	[8885]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	13	[8885]	GETTABLE 	R1 R1 K3 ; R1 := R1["EquippedItem"]
	14	[8885]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xba568eef]
	15	[8885]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[8885]	TEST     	R1 0 ; if not R1 then PC := 23
	17	[8885]	JMP      	23 ; PC := 23
	18	[8886]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[8886]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xe0cba3ca]
	20	[8886]	LOADK    	R2 K6 ; R2 := "/Lotus/Language/Changyou/CannotColourTimeLimitedEquipment"
	21	[8886]	CALL     	R1 2 1 ; R1(R2)
	22	[8887]	RETURN   	R0 1 ; return 
	23	[8890]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	24	[8890]	GETGLOBAL	R2 K7 ; R2 := 0x9000ff2a
	25	[8890]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[8890]	TEST     	R1 0 ; if not R1 then PC := 29
	27	[8890]	JMP      	29 ; PC := 29
	28	[8891]	RETURN   	R0 1 ; return 
	29	[8894]	NEWTABLE 	R1 0 0 ; R1 := {}
	30	[8895]	LOADNIL  	R2 R2 ; R2 := nil
	31	[8896]	GETGLOBAL	R3 K1 ; R3 := mSelected
	32	[8896]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	33	[8896]	GETTABLE 	R3 R3 K8 ; R3 := R3["LoadOutId"]
	34	[8896]	GETGLOBAL	R4 K9 ; R4 := 0x6c97a788
	35	[8896]	GETTABLE 	R4 R4 K10 ; R4 := R4["NUM_NORMAL_LOADOUT_SLOTS"]
	36	[8896]	LE       	0 R4 R3 ; if R4 > R3 then PC := 43
	37	[8896]	JMP      	43 ; PC := 43
	38	[8897]	GETUPVAL 	R3 U2 ; R3 := U2
	39	[8897]	GETGLOBAL	R4 K1 ; R4 := mSelected
	40	[8897]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	41	[8897]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[8897]	MOVE     	R2 R3 ; R2 := R3
	43	[8899]	GETUPVAL 	R3 U3 ; R3 := U3
	44	[8899]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xd3fed720]
	45	[8899]	GETUPVAL 	R4 U4 ; R4 := U4
	46	[8899]	OP_LOADBOOL	R5 1 0 ; R5 := true
	47	[8899]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	48	[8900]	GETUPVAL 	R5 U1 ; R5 := U1
	49	[8900]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x06d055f9]
	50	[8900]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	51	[8900]	MOVE     	R7 R0 ; R7 := R0
	52	[8900]	CALL     	R6 2 2 ; R6 := R6(R7)
	53	[8900]	GETUPVAL 	R7 U5 ; R7 := U5
	54	[8900]	CALL     	R7 1 2 ; R7 := R7()
	55	[8900]	MOVE     	R8 R0 ; R8 := R0
	56	[8900]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	57	[8901]	LEN      	R6 R3 ; R6 := # R3
	58	[8902]	TEST     	R4 1 ; if R4 then PC := 61
	59	[8902]	JMP      	61 ; PC := 61
	60	[8903]	ADD      	R6 R6 K13 ; R6 := R6 + 1.000000
	61	[8934]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	62	[8934]	MOVE     	R0 R3 ; R0 := R3
	63	[8934]	MOVE     	R0 R1 ; R0 := R1
	64	[8936]	LOADK    	R8 := 0.000000
	65	[8936]	LOADK    	R9 := 7.000000
	66	[8936]	LOADK    	R10 := 1.000000
	67	[8936]	FORPREP  	R8 93 ; R8 -= R10; PC := 93
	68	[8937]	EQ       	1 R2 K14 ; if R2 == nil then PC := 73
	69	[8937]	JMP      	73 ; PC := 73
	70	[8937]	GETTABLE 	R12 R2 R11 ; R12 := R2[R11]
	71	[8937]	TEST     	R12 0 ; if not R12 then PC := 93
	72	[8937]	JMP      	93 ; PC := 93
	73	[8938]	EQ       	0 R11 K15 ; if R11 ~= 7.000000 then PC := 81
	74	[8938]	JMP      	81 ; PC := 81
	75	[8938]	GETUPVAL 	R12 U6 ; R12 := U6
	76	[8938]	GETGLOBAL	R13 K1 ; R13 := mSelected
	77	[8938]	GETTABLE 	R13 R13 K2 ; R13 := R13["Element"]
	78	[8938]	CALL     	R12 2 2 ; R12 := R12(R13)
	79	[8938]	TEST     	R12 0 ; if not R12 then PC := 93
	80	[8938]	JMP      	93 ; PC := 93
	81	[8939]	MOVE     	R12 R7 ; R12 := R7
	82	[8939]	GETGLOBAL	R13 K16 ; R13 := 0x55730e1a
	83	[8939]	LOADK    	R14 := 1.000000
	84	[8939]	MOVE     	R15 R6 ; R15 := R6
	85	[8939]	CALL     	R13 3 0 ; R13,... := R13(R14,R15)
	86	[8939]	CALL     	R12 0 3 ; R12,R13 := R12(R13,...)
	87	[8940]	GETUPVAL 	R14 U7 ; R14 := U7
	88	[8940]	MOVE     	R15 R11 ; R15 := R11
	89	[8940]	MOVE     	R16 R12 ; R16 := R12
	90	[8940]	MOVE     	R17 R5 ; R17 := R5
	91	[8940]	MOVE     	R18 R13 ; R18 := R13
	92	[8940]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	93	[8936]	FORLOOP  	R8 68 ; R8 += R10; if R8 <= R9 then begin PC := 68; R11 := R8 end
	94	[8945]	GETUPVAL 	R14 U8 ; R14 := U8
	95	[8945]	GETTABLE 	R14 R14 K17 ; R14 := R14[0xf6edf3bb]
	96	[8945]	CALL     	R14 1 1 ; R14()
	97	[8946]	GETUPVAL 	R14 U1 ; R14 := U1
	98	[8946]	GETTABLE 	R14 R14 K18 ; R14 := R14[0x659d451f]
	99	[8946]	GETGLOBAL	R15 K19 ; R15 := 0x0032441c
	100	[8946]	GETTABLE 	R15 R15 K20 ; R15 := R15["UISound_ButtonSelect"]
	101	[8946]	CALL     	R14 2 1 ; R14(R15)
	102	[8947]	RETURN   	R0 1 ; return 

function #135 <?:8949,9005> (183 instructions, 732 bytes at 000002111DF906E0)
1 param, 18 slots, 11 upvalues, 0 locals, 42 constants, 0 functions
	1	[8950]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8950]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[8950]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[8950]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8950]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[8950]	JMP      	8 ; PC := 8
	7	[8951]	RETURN   	R0 1 ; return 
	8	[8954]	GETGLOBAL	R1 K1 ; R1 := mSelected
	9	[8954]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	10	[8954]	GETTABLE 	R1 R1 K3 ; R1 := R1["Customization"]
	11	[8956]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	12	[8956]	MOVE     	R3 R1 ; R3 := R1
	13	[8956]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[8956]	TEST     	R2 1 ; if R2 then PC := 73
	15	[8956]	JMP      	73 ; PC := 73
	16	[8957]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[8957]	GETGLOBAL	R3 K1 ; R3 := mSelected
	18	[8957]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	19	[8957]	GETTABLE 	R3 R3 K4 ; R3 := R3["LoadOutType"]
	20	[8957]	GETGLOBAL	R4 K1 ; R4 := mSelected
	21	[8957]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	22	[8957]	GETTABLE 	R4 R4 K5 ; R4 := R4["LoadOutId"]
	23	[8957]	CALL     	R2 3 3 ; R2,R3 := R2(R3,R4)
	24	[8959]	GETUPVAL 	R4 U1 ; R4 := U1
	25	[8959]	GETGLOBAL	R5 K1 ; R5 := mSelected
	26	[8959]	GETTABLE 	R5 R5 K2 ; R5 := R5["Element"]
	27	[8959]	GETTABLE 	R5 R5 K4 ; R5 := R5["LoadOutType"]
	28	[8959]	GETGLOBAL	R6 K1 ; R6 := mSelected
	29	[8959]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	30	[8959]	GETTABLE 	R6 R6 K5 ; R6 := R6["LoadOutId"]
	31	[8959]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	32	[8960]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	33	[8960]	MOVE     	R6 R4 ; R6 := R4
	34	[8960]	CALL     	R5 2 2 ; R5 := R5(R6)
	35	[8960]	TEST     	R5 1 ; if R5 then PC := 41
	36	[8960]	JMP      	41 ; PC := 41
	37	[8961]	SELF     	R5 R4 K6 ; R6 := R4; R5 := R4[0xaa041663]
	38	[8961]	MOVE     	R7 R1 ; R7 := R1
	39	[8961]	OP_LOADBOOL	R8 0 0 ; R8 := false
	40	[8961]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	41	[8964]	LEN      	R5 R2 ; R5 := # R2
	42	[8964]	LOADK    	R6 := 1.000000
	43	[8964]	LOADK    	R7 := -1.000000
	44	[8964]	FORPREP  	R5 49 ; R5 -= R7; PC := 49
	45	[8965]	SELF     	R9 R1 K7 ; R10 := R1; R9 := R1[0x61b59a83]
	46	[8965]	GETTABLE 	R11 R2 R8 ; R11 := R2[R8]
	47	[8965]	MOVE     	R12 R3 ; R12 := R3
	48	[8965]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	49	[8964]	FORLOOP  	R5 45 ; R5 += R7; if R5 <= R6 then begin PC := 45; R8 := R5 end
	50	[8968]	GETGLOBAL	R9 K8 ; R9 := _T
	51	[8968]	SETTABLE 	R9 K9 K10 ; R9["LoadoutSaveRequired"] := true
	52	[8970]	GETGLOBAL	R9 K1 ; R9 := mSelected
	53	[8970]	GETTABLE 	R9 R9 K2 ; R9 := R9["Element"]
	54	[8970]	GETTABLE 	R9 R9 K11 ; R9 := R9["EquippedItem"]
	55	[8970]	SELF     	R9 R9 K6 ; R10 := R9; R9 := R9[0xaa041663]
	56	[8970]	MOVE     	R11 R1 ; R11 := R1
	57	[8970]	GETGLOBAL	R12 K1 ; R12 := mSelected
	58	[8970]	GETTABLE 	R12 R12 K2 ; R12 := R12["Element"]
	59	[8970]	GETTABLE 	R12 R12 K12 ; R12 := R12["mCustSlot"]
	60	[8970]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	61	[8971]	GETGLOBAL	R9 K13 ; R9 := mInventory
	62	[8971]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0x9b051033]
	63	[8971]	GETGLOBAL	R11 K1 ; R11 := mSelected
	64	[8971]	GETTABLE 	R11 R11 K2 ; R11 := R11["Element"]
	65	[8971]	GETTABLE 	R11 R11 K15 ; R11 := R11["UID"]
	66	[8971]	GETGLOBAL	R12 K1 ; R12 := mSelected
	67	[8971]	GETTABLE 	R12 R12 K2 ; R12 := R12["Element"]
	68	[8971]	GETTABLE 	R12 R12 K12 ; R12 := R12["mCustSlot"]
	69	[8971]	MOVE     	R13 R1 ; R13 := R1
	70	[8971]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	71	[8973]	GETUPVAL 	R9 U2 ; R9 := U2
	72	[8973]	CALL     	R9 1 1 ; R9()
	73	[8976]	EQ       	1 R0 K16 ; if R0 == nil then PC := 77
	74	[8976]	JMP      	77 ; PC := 77
	75	[8976]	EQ       	0 R0 K10 ; if R0 ~= true then PC := 84
	76	[8976]	JMP      	84 ; PC := 84
	77	[8977]	GETGLOBAL	R9 K17 ; R9 := mLists
	78	[8977]	GETTABLE 	R9 R9 K18 ; R9 := R9["mCosmeticsList"]
	79	[8977]	SELF     	R9 R9 K19 ; R10 := R9; R9 := R9[0x71e9ac81]
	80	[8977]	LOADNIL  	R11 R11 ; R11 := nil
	81	[8977]	OP_LOADBOOL	R12 1 0 ; R12 := true
	82	[8977]	OP_LOADBOOL	R13 1 0 ; R13 := true
	83	[8977]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	84	[8980]	GETGLOBAL	R9 K20 ; R9 := 0x25d99d89
	85	[8980]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x400b84a1]
	86	[8980]	GETGLOBAL	R11 K1 ; R11 := mSelected
	87	[8980]	GETTABLE 	R11 R11 K2 ; R11 := R11["Element"]
	88	[8980]	GETTABLE 	R11 R11 K4 ; R11 := R11["LoadOutType"]
	89	[8980]	GETGLOBAL	R12 K22 ; R12 := mCurrentLoadout
	90	[8980]	GETGLOBAL	R13 K1 ; R13 := mSelected
	91	[8980]	GETTABLE 	R13 R13 K2 ; R13 := R13["Element"]
	92	[8980]	GETTABLE 	R13 R13 K4 ; R13 := R13["LoadOutType"]
	93	[8980]	GETTABLE 	R12 R12 R13 ; R12 := R12[R13]
	94	[8980]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	95	[8981]	GETGLOBAL	R9 K8 ; R9 := _T
	96	[8981]	GETTABLE 	R9 R9 K23 ; R9 := R9["MenuSuitAvatar"]
	97	[8982]	GETUPVAL 	R10 U3 ; R10 := U3
	98	[8982]	CALL     	R10 1 2 ; R10 := R10()
	99	[8982]	TEST     	R10 1 ; if R10 then PC := 120
	100	[8982]	JMP      	120 ; PC := 120
	101	[8982]	GETGLOBAL	R10 K8 ; R10 := _T
	102	[8982]	GETTABLE 	R10 R10 K24 ; R10 := R10["mSentinelMode"]
	103	[8982]	TEST     	R10 0 ; if not R10 then PC := 120
	104	[8982]	JMP      	120 ; PC := 120
	105	[8982]	GETGLOBAL	R10 K20 ; R10 := 0x25d99d89
	106	[8982]	SELF     	R10 R10 K25 ; R11 := R10; R10 := R10[0x3c6b0324]
	107	[8982]	CALL     	R10 2 2 ; R10 := R10(R11)
	108	[8982]	TEST     	R10 1 ; if R10 then PC := 115
	109	[8982]	JMP      	115 ; PC := 115
	110	[8982]	GETGLOBAL	R10 K20 ; R10 := 0x25d99d89
	111	[8982]	SELF     	R10 R10 K26 ; R11 := R10; R10 := R10[0x9f91f49d]
	112	[8982]	CALL     	R10 2 2 ; R10 := R10(R11)
	113	[8982]	TEST     	R10 0 ; if not R10 then PC := 120
	114	[8982]	JMP      	120 ; PC := 120
	115	[8983]	LOADK    	R10 := 1.000000
	116	[8983]	SETUPVAL 	R10 U4 ; U4 := R10
	117	[8984]	GETUPVAL 	R10 U5 ; R10 := U5
	118	[8984]	GETTABLE 	R10 R10 K27 ; R10 := R10[0xd4c67576]
	119	[8984]	CALL     	R10 1 1 ; R10()
	120	[8987]	GETUPVAL 	R10 U6 ; R10 := U6
	121	[8987]	MOVE     	R11 R9 ; R11 := R9
	122	[8987]	GETGLOBAL	R12 K1 ; R12 := mSelected
	123	[8987]	GETTABLE 	R12 R12 K2 ; R12 := R12["Element"]
	124	[8987]	GETTABLE 	R12 R12 K4 ; R12 := R12["LoadOutType"]
	125	[8987]	GETGLOBAL	R13 K1 ; R13 := mSelected
	126	[8987]	GETTABLE 	R13 R13 K2 ; R13 := R13["Element"]
	127	[8987]	GETTABLE 	R13 R13 K5 ; R13 := R13["LoadOutId"]
	128	[8987]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	129	[8989]	GETUPVAL 	R10 U7 ; R10 := U7
	130	[8989]	GETUPVAL 	R11 U8 ; R11 := U8
	131	[8989]	GETTABLE 	R11 R11 K28 ; R11 := R11["Current"]
	132	[8989]	EQ       	1 R11 K30 ; if R11 == 2.000000 then PC := 135
	133	[8989]	JMP      	135 ; PC := 135
	134	[8989]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 135
	135	[8989]	OP_LOADBOOL	R11 1 0 ; R11 := true
	136	[8989]	CALL     	R10 2 1 ; R10(R11)
	137	[8991]	GETGLOBAL	R10 K1 ; R10 := mSelected
	138	[8991]	GETTABLE 	R10 R10 K2 ; R10 := R10["Element"]
	139	[8991]	GETTABLE 	R10 R10 K5 ; R10 := R10["LoadOutId"]
	140	[8991]	GETGLOBAL	R11 K29 ; R11 := 0x6c97a788
	141	[8991]	GETTABLE 	R11 R11 K31 ; R11 := R11["NUM_NORMAL_LOADOUT_SLOTS"]
	142	[8991]	LE       	0 R11 R10 ; if R11 > R10 then PC := 178
	143	[8991]	JMP      	178 ; PC := 178
	144	[8994]	SELF     	R10 R9 K32 ; R11 := R9; R10 := R9[0xde321e6f]
	145	[8994]	CALL     	R10 2 2 ; R10 := R10(R11)
	146	[8995]	SELF     	R11 R10 K33 ; R12 := R10; R11 := R10[0xab98dbf5]
	147	[8995]	GETGLOBAL	R13 K1 ; R13 := mSelected
	148	[8995]	GETTABLE 	R13 R13 K2 ; R13 := R13["Element"]
	149	[8995]	GETTABLE 	R13 R13 K11 ; R13 := R13["EquippedItem"]
	150	[8995]	GETTABLE 	R13 R13 K34 ; R13 := R13["mItemId"]
	151	[8995]	GETTABLE 	R13 R13 K35 ; R13 := R13["mId"]
	152	[8995]	GETGLOBAL	R14 K1 ; R14 := mSelected
	153	[8995]	GETTABLE 	R14 R14 K2 ; R14 := R14["Element"]
	154	[8995]	GETTABLE 	R14 R14 K4 ; R14 := R14["LoadOutType"]
	155	[8995]	GETGLOBAL	R15 K1 ; R15 := mSelected
	156	[8995]	GETTABLE 	R15 R15 K2 ; R15 := R15["Element"]
	157	[8995]	GETTABLE 	R15 R15 K5 ; R15 := R15["LoadOutId"]
	158	[8995]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	159	[8997]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	160	[8997]	MOVE     	R13 R11 ; R13 := R11
	161	[8997]	CALL     	R12 2 2 ; R12 := R12(R13)
	162	[8997]	TEST     	R12 1 ; if R12 then PC := 178
	163	[8997]	JMP      	178 ; PC := 178
	164	[8998]	GETUPVAL 	R12 U9 ; R12 := U9
	165	[8998]	CALL     	R12 1 2 ; R12 := R12()
	166	[8999]	SELF     	R13 R11 K36 ; R14 := R11; R13 := R11[0x68d708a7]
	167	[8999]	CALL     	R13 2 2 ; R13 := R13(R14)
	168	[8999]	SELF     	R13 R13 K37 ; R14 := R13; R13 := R13[0x8e62760a]
	169	[8999]	MOVE     	R15 R12 ; R15 := R12
	170	[8999]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	171	[9000]	GETGLOBAL	R14 K1 ; R14 := mSelected
	172	[9000]	GETTABLE 	R14 R14 K2 ; R14 := R14["Element"]
	173	[9000]	GETTABLE 	R14 R14 K3 ; R14 := R14["Customization"]
	174	[9000]	SELF     	R14 R14 K38 ; R15 := R14; R14 := R14[0x199edf6e]
	175	[9000]	MOVE     	R16 R12 ; R16 := R12
	176	[9000]	MOVE     	R17 R13 ; R17 := R13
	177	[9000]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	178	[9004]	GETUPVAL 	R14 U10 ; R14 := U10
	179	[9004]	GETTABLE 	R14 R14 K39 ; R14 := R14[0x659d451f]
	180	[9004]	GETGLOBAL	R15 K40 ; R15 := 0x0032441c
	181	[9004]	GETTABLE 	R15 R15 K41 ; R15 := R15["UISound_ItemTipSection"]
	182	[9004]	CALL     	R14 2 1 ; R14(R15)
	183	[9005]	RETURN   	R0 1 ; return 

function #136 <?:9007,9048> (94 instructions, 376 bytes at 000002111DF91000)
1 param, 15 slots, 4 upvalues, 0 locals, 19 constants, 0 functions
	1	[9008]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[9008]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[9008]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[9008]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[9008]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[9008]	JMP      	8 ; PC := 8
	7	[9009]	RETURN   	R0 1 ; return 
	8	[9012]	GETGLOBAL	R1 K1 ; R1 := mSelected
	9	[9012]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	10	[9012]	GETTABLE 	R1 R1 K3 ; R1 := R1["Customization"]
	11	[9013]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[9013]	CALL     	R2 1 2 ; R2 := R2()
	13	[9014]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	14	[9014]	MOVE     	R4 R1 ; R4 := R1
	15	[9014]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[9014]	TEST     	R3 1 ; if R3 then PC := 90
	17	[9014]	JMP      	90 ; PC := 90
	18	[9015]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[9015]	GETGLOBAL	R4 K1 ; R4 := mSelected
	20	[9015]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	21	[9015]	GETTABLE 	R4 R4 K4 ; R4 := R4["LoadOutType"]
	22	[9015]	GETGLOBAL	R5 K1 ; R5 := mSelected
	23	[9015]	GETTABLE 	R5 R5 K2 ; R5 := R5["Element"]
	24	[9015]	GETTABLE 	R5 R5 K5 ; R5 := R5["LoadOutId"]
	25	[9015]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	26	[9017]	LOADNIL  	R5 R6 ; R5 := R6 := nil
	27	[9018]	GETGLOBAL	R7 K1 ; R7 := mSelected
	28	[9018]	GETTABLE 	R7 R7 K2 ; R7 := R7["Element"]
	29	[9018]	GETTABLE 	R7 R7 K5 ; R7 := R7["LoadOutId"]
	30	[9018]	GETGLOBAL	R8 K6 ; R8 := 0x6c97a788
	31	[9018]	GETTABLE 	R8 R8 K7 ; R8 := R8["NUM_NORMAL_LOADOUT_SLOTS"]
	32	[9018]	LE       	0 R8 R7 ; if R8 > R7 then PC := 49
	33	[9018]	JMP      	49 ; PC := 49
	34	[9020]	SELF     	R7 R1 K8 ; R8 := R1; R7 := R1[0x8e62760a]
	35	[9020]	MOVE     	R9 R2 ; R9 := R2
	36	[9020]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	37	[9021]	SELF     	R8 R7 K9 ; R9 := R7; R8 := R7[0x697019d0]
	38	[9021]	LOADK    	R10 := 6.000000
	39	[9021]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	40	[9021]	TEST     	R8 0 ; if not R8 then PC := 43
	41	[9021]	JMP      	43 ; PC := 43
	42	[9022]	GETTABLE 	R5 R7 K10 ; R5 := R7["mEnergyColor"]
	43	[9024]	SELF     	R8 R7 K9 ; R9 := R7; R8 := R7[0x697019d0]
	44	[9024]	LOADK    	R10 := 7.000000
	45	[9024]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	46	[9024]	TEST     	R8 0 ; if not R8 then PC := 49
	47	[9024]	JMP      	49 ; PC := 49
	48	[9025]	GETTABLE 	R6 R7 K11 ; R6 := R7["mEnergyColor1"]
	49	[9029]	SELF     	R8 R1 K12 ; R9 := R1; R8 := R1[0x1adf884d]
	50	[9029]	MOVE     	R10 R2 ; R10 := R2
	51	[9029]	GETUPVAL 	R11 U2 ; R11 := U2
	52	[9029]	GETTABLE 	R11 R11 K13 ; R11 := R11[0x06d055f9]
	53	[9029]	EQ       	0 R2 K14 ; if R2 ~= 0.000000 then PC := 58
	54	[9029]	JMP      	58 ; PC := 58
	55	[9029]	LEN      	R12 R3 ; R12 := # R3
	56	[9029]	LT       	1 K14 R12 ; if 0.000000 < R12 then PC := 59
	57	[9029]	JMP      	59 ; PC := 59
	58	[9029]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 59
	59	[9029]	OP_LOADBOOL	R12 1 0 ; R12 := true
	60	[9029]	LEN      	R13 R3 ; R13 := # R3
	61	[9029]	GETTABLE 	R13 R3 R13 ; R13 := R3[R13]
	62	[9029]	LOADNIL  	R14 R14 ; R14 := nil
	63	[9029]	CALL     	R11 4 0 ; R11,... := R11(R12,R13,R14)
	64	[9029]	CALL     	R8 0 1 ; R8(R9,...)
	65	[9031]	EQ       	0 R5 K15 ; if R5 ~= nil then PC := 69
	66	[9031]	JMP      	69 ; PC := 69
	67	[9031]	EQ       	1 R6 K15 ; if R6 == nil then PC := 90
	68	[9031]	JMP      	90 ; PC := 90
	69	[9032]	SELF     	R8 R1 K8 ; R9 := R1; R8 := R1[0x8e62760a]
	70	[9032]	MOVE     	R10 R2 ; R10 := R2
	71	[9032]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	72	[9033]	EQ       	1 R5 K15 ; if R5 == nil then PC := 79
	73	[9033]	JMP      	79 ; PC := 79
	74	[9034]	SETTABLE 	R8 K10 R5 ; R8["mEnergyColor"] := R5
	75	[9035]	SELF     	R9 R8 K16 ; R10 := R8; R9 := R8[0xfc5d7158]
	76	[9035]	LOADK    	R11 := 6.000000
	77	[9035]	OP_LOADBOOL	R12 1 0 ; R12 := true
	78	[9035]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	79	[9038]	EQ       	1 R6 K15 ; if R6 == nil then PC := 86
	80	[9038]	JMP      	86 ; PC := 86
	81	[9039]	SETTABLE 	R8 K11 R6 ; R8["mEnergyColor1"] := R6
	82	[9040]	SELF     	R9 R8 K16 ; R10 := R8; R9 := R8[0xfc5d7158]
	83	[9040]	LOADK    	R11 := 7.000000
	84	[9040]	OP_LOADBOOL	R12 1 0 ; R12 := true
	85	[9040]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	86	[9043]	SELF     	R9 R1 K17 ; R10 := R1; R9 := R1[0x199edf6e]
	87	[9043]	MOVE     	R11 R2 ; R11 := R2
	88	[9043]	MOVE     	R12 R8 ; R12 := R8
	89	[9043]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	90	[9047]	GETUPVAL 	R9 U3 ; R9 := U3
	91	[9047]	GETTABLE 	R9 R9 K18 ; R9 := R9[0xba296217]
	92	[9047]	MOVE     	R10 R0 ; R10 := R0
	93	[9047]	CALL     	R9 2 1 ; R9(R10)
	94	[9048]	RETURN   	R0 1 ; return 

function #137 <?:9050,9201> (536 instructions, 2144 bytes at 000002111DF914F0)
1 param, 33 slots, 6 upvalues, 0 locals, 77 constants, 0 functions
	1	[9051]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[9051]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[9051]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[9051]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[9051]	TEST     	R1 1 ; if R1 then PC := 25
	6	[9051]	JMP      	25 ; PC := 25
	7	[9051]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	8	[9051]	GETGLOBAL	R2 K1 ; R2 := mSelected
	9	[9051]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	10	[9051]	GETTABLE 	R2 R2 K3 ; R2 := R2["Type"]
	11	[9051]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[9051]	TEST     	R1 1 ; if R1 then PC := 25
	13	[9051]	JMP      	25 ; PC := 25
	14	[9051]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[9051]	GETGLOBAL	R2 K4 ; R2 := mLists
	16	[9051]	GETTABLE 	R2 R2 K5 ; R2 := R2["mCosmeticsList"]
	17	[9051]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[9051]	TEST     	R1 1 ; if R1 then PC := 25
	19	[9051]	JMP      	25 ; PC := 25
	20	[9051]	GETUPVAL 	R1 U0 ; R1 := U0
	21	[9051]	GETUPVAL 	R2 U1 ; R2 := U1
	22	[9051]	GETTABLE 	R2 R2 K6 ; R2 := R2["CUSTOMIZING_SKINS"]
	23	[9051]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 26
	24	[9051]	JMP      	26 ; PC := 26
	25	[9052]	RETURN   	R0 1 ; return 
	26	[9055]	GETGLOBAL	R1 K4 ; R1 := mLists
	27	[9055]	GETTABLE 	R1 R1 K5 ; R1 := R1["mCosmeticsList"]
	28	[9055]	GETTABLE 	R1 R1 K7 ; R1 := R1["mCurrLevel"]
	29	[9055]	GETGLOBAL	R2 K4 ; R2 := mLists
	30	[9055]	GETTABLE 	R2 R2 K5 ; R2 := R2["mCosmeticsList"]
	31	[9055]	GETTABLE 	R2 R2 K8 ; R2 := R2["FRONTSIGIL"]
	32	[9055]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 42
	33	[9055]	JMP      	42 ; PC := 42
	34	[9055]	GETGLOBAL	R1 K4 ; R1 := mLists
	35	[9055]	GETTABLE 	R1 R1 K5 ; R1 := R1["mCosmeticsList"]
	36	[9055]	GETTABLE 	R1 R1 K7 ; R1 := R1["mCurrLevel"]
	37	[9055]	GETGLOBAL	R2 K4 ; R2 := mLists
	38	[9055]	GETTABLE 	R2 R2 K5 ; R2 := R2["mCosmeticsList"]
	39	[9055]	GETTABLE 	R2 R2 K9 ; R2 := R2["BACKSIGIL"]
	40	[9055]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 281
	41	[9055]	JMP      	281 ; PC := 281
	42	[9056]	GETGLOBAL	R1 K10 ; R1 := 0x7ed0a956
	43	[9056]	LOADK    	R2 K11 ; R2 := "/Lotus/Types/Game/PowerSuit"
	44	[9056]	CALL     	R1 2 2 ; R1 := R1(R2)
	45	[9058]	GETGLOBAL	R2 K1 ; R2 := mSelected
	46	[9058]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	47	[9058]	GETTABLE 	R2 R2 K3 ; R2 := R2["Type"]
	48	[9058]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xf2deaf69]
	49	[9058]	MOVE     	R4 R1 ; R4 := R1
	50	[9058]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	51	[9058]	TEST     	R2 0 ; if not R2 then PC := 536
	52	[9058]	JMP      	536 ; PC := 536
	53	[9058]	GETUPVAL 	R2 U2 ; R2 := U2
	54	[9058]	GETUPVAL 	R3 U3 ; R3 := U3
	55	[9058]	GETTABLE 	R3 R3 K13 ; R3 := R3["FALSE"]
	56	[9058]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 536
	57	[9058]	JMP      	536 ; PC := 536
	58	[9059]	GETGLOBAL	R2 K4 ; R2 := mLists
	59	[9059]	GETTABLE 	R2 R2 K5 ; R2 := R2["mCosmeticsList"]
	60	[9059]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xca30dfb6]
	61	[9059]	GETGLOBAL	R4 K15 ; R4 := 0x03f57322
	62	[9059]	MOVE     	R5 R0 ; R5 := R0
	63	[9059]	CALL     	R4 2 0 ; R4,... := R4(R5)
	64	[9059]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	65	[9060]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	66	[9060]	MOVE     	R4 R2 ; R4 := R2
	67	[9060]	CALL     	R3 2 2 ; R3 := R3(R4)
	68	[9060]	TEST     	R3 0 ; if not R3 then PC := 71
	69	[9060]	JMP      	71 ; PC := 71
	70	[9061]	RETURN   	R0 1 ; return 
	71	[9064]	GETGLOBAL	R3 K1 ; R3 := mSelected
	72	[9064]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	73	[9064]	GETTABLE 	R3 R3 K16 ; R3 := R3["Customization"]
	74	[9065]	SELF     	R4 R3 K17 ; R5 := R3; R4 := R3[0x8e62760a]
	75	[9065]	LOADK    	R6 := 2.000000
	76	[9065]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	77	[9068]	OP_LOADBOOL	R5 1 0 ; R5 := true
	78	[9069]	GETTABLE 	R6 R2 K19 ; R6 := R2["PositionX"]
	79	[9069]	EQ       	1 R6 K20 ; if R6 == nil then PC := 93
	80	[9069]	JMP      	93 ; PC := 93
	81	[9070]	SELF     	R6 R4 K21 ; R7 := R4; R6 := R4[0x5d10207d]
	82	[9070]	GETTABLE 	R8 R2 K22 ; R8 := R2["Attribute"]
	83	[9070]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	84	[9070]	GETGLOBAL	R7 K24 ; R7 := 0x42dcc9f5
	85	[9070]	GETTABLE 	R8 R2 K25 ; R8 := R2["Value"]
	86	[9070]	MUL      	R8 R8 K26 ; R8 := R8 * 255.000000
	87	[9070]	LOADK    	R9 := 0.000000
	88	[9070]	LOADK    	R10 := 255.000000
	89	[9070]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	90	[9070]	SUB      	R7 K26 R7 ; R7 := 255.000000 - R7
	91	[9070]	SETTABLE 	R6 K23 R7 ; R6["red"] := R7
	92	[9070]	JMP      	167 ; PC := 167
	93	[9071]	GETTABLE 	R6 R2 K27 ; R6 := R2["PositionY"]
	94	[9071]	EQ       	1 R6 K20 ; if R6 == nil then PC := 108
	95	[9071]	JMP      	108 ; PC := 108
	96	[9072]	SELF     	R6 R4 K21 ; R7 := R4; R6 := R4[0x5d10207d]
	97	[9072]	GETTABLE 	R8 R2 K22 ; R8 := R2["Attribute"]
	98	[9072]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	99	[9072]	GETGLOBAL	R7 K24 ; R7 := 0x42dcc9f5
	100	[9072]	GETTABLE 	R8 R2 K25 ; R8 := R2["Value"]
	101	[9072]	MUL      	R8 R8 K26 ; R8 := R8 * 255.000000
	102	[9072]	LOADK    	R9 := 0.000000
	103	[9072]	LOADK    	R10 := 255.000000
	104	[9072]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	105	[9072]	SUB      	R7 K26 R7 ; R7 := 255.000000 - R7
	106	[9072]	SETTABLE 	R6 K28 R7 ; R6["green"] := R7
	107	[9072]	JMP      	167 ; PC := 167
	108	[9073]	GETTABLE 	R6 R2 K29 ; R6 := R2["ScaleX"]
	109	[9073]	EQ       	1 R6 K20 ; if R6 == nil then PC := 122
	110	[9073]	JMP      	122 ; PC := 122
	111	[9074]	SELF     	R6 R4 K21 ; R7 := R4; R6 := R4[0x5d10207d]
	112	[9074]	GETTABLE 	R8 R2 K22 ; R8 := R2["Attribute"]
	113	[9074]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	114	[9074]	GETGLOBAL	R7 K24 ; R7 := 0x42dcc9f5
	115	[9074]	GETTABLE 	R8 R2 K25 ; R8 := R2["Value"]
	116	[9074]	MUL      	R8 R8 K26 ; R8 := R8 * 255.000000
	117	[9074]	LOADK    	R9 := 0.000000
	118	[9074]	LOADK    	R10 := 255.000000
	119	[9074]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	120	[9074]	SETTABLE 	R6 K30 R7 ; R6["blue"] := R7
	121	[9074]	JMP      	167 ; PC := 167
	122	[9075]	GETTABLE 	R6 R2 K31 ; R6 := R2["ScaleY"]
	123	[9075]	EQ       	1 R6 K20 ; if R6 == nil then PC := 136
	124	[9075]	JMP      	136 ; PC := 136
	125	[9076]	SELF     	R6 R4 K21 ; R7 := R4; R6 := R4[0x5d10207d]
	126	[9076]	GETTABLE 	R8 R2 K22 ; R8 := R2["Attribute"]
	127	[9076]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	128	[9076]	GETGLOBAL	R7 K24 ; R7 := 0x42dcc9f5
	129	[9076]	GETTABLE 	R8 R2 K25 ; R8 := R2["Value"]
	130	[9076]	MUL      	R8 R8 K26 ; R8 := R8 * 255.000000
	131	[9076]	LOADK    	R9 := 0.000000
	132	[9076]	LOADK    	R10 := 255.000000
	133	[9076]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	134	[9076]	SETTABLE 	R6 K32 R7 ; R6["alpha"] := R7
	135	[9076]	JMP      	167 ; PC := 167
	136	[9077]	GETTABLE 	R6 R2 K33 ; R6 := R2["Alpha"]
	137	[9077]	EQ       	1 R6 K20 ; if R6 == nil then PC := 151
	138	[9077]	JMP      	151 ; PC := 151
	139	[9078]	SELF     	R6 R4 K21 ; R7 := R4; R6 := R4[0x5d10207d]
	140	[9078]	GETTABLE 	R8 R2 K22 ; R8 := R2["Attribute"]
	141	[9078]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	142	[9078]	GETTABLE 	R7 R2 K33 ; R7 := R2["Alpha"]
	143	[9078]	GETGLOBAL	R8 K24 ; R8 := 0x42dcc9f5
	144	[9078]	GETTABLE 	R9 R2 K25 ; R9 := R2["Value"]
	145	[9078]	MUL      	R9 R9 K26 ; R9 := R9 * 255.000000
	146	[9078]	LOADK    	R10 := 0.000000
	147	[9078]	LOADK    	R11 := 255.000000
	148	[9078]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	149	[9078]	SETTABLE 	R6 R7 R8 ; R6[R7] := R8
	150	[9078]	JMP      	167 ; PC := 167
	151	[9079]	GETTABLE 	R6 R2 K34 ; R6 := R2["Rotation"]
	152	[9079]	EQ       	1 R6 K20 ; if R6 == nil then PC := 166
	153	[9079]	JMP      	166 ; PC := 166
	154	[9080]	SELF     	R6 R4 K21 ; R7 := R4; R6 := R4[0x5d10207d]
	155	[9080]	GETTABLE 	R8 R2 K22 ; R8 := R2["Attribute"]
	156	[9080]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	157	[9080]	GETTABLE 	R7 R2 K34 ; R7 := R2["Rotation"]
	158	[9080]	GETGLOBAL	R8 K24 ; R8 := 0x42dcc9f5
	159	[9080]	GETTABLE 	R9 R2 K25 ; R9 := R2["Value"]
	160	[9080]	MUL      	R9 R9 K26 ; R9 := R9 * 255.000000
	161	[9080]	LOADK    	R10 := 0.000000
	162	[9080]	LOADK    	R11 := 255.000000
	163	[9080]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	164	[9080]	SETTABLE 	R6 R7 R8 ; R6[R7] := R8
	165	[9080]	JMP      	167 ; PC := 167
	166	[9082]	OP_LOADBOOL	R5 0 0 ; R5 := false
	167	[9084]	TEST     	R5 0 ; if not R5 then PC := 173
	168	[9084]	JMP      	173 ; PC := 173
	169	[9085]	SELF     	R6 R4 K35 ; R7 := R4; R6 := R4[0xfc5d7158]
	170	[9085]	GETTABLE 	R8 R2 K22 ; R8 := R2["Attribute"]
	171	[9085]	OP_LOADBOOL	R9 1 0 ; R9 := true
	172	[9085]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	173	[9088]	SELF     	R6 R3 K36 ; R7 := R3; R6 := R3[0x199edf6e]
	174	[9088]	LOADK    	R8 := 2.000000
	175	[9088]	MOVE     	R9 R4 ; R9 := R4
	176	[9088]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	177	[9090]	GETGLOBAL	R6 K38 ; R6 := 0x60130201
	178	[9090]	SELF     	R7 R4 K21 ; R8 := R4; R7 := R4[0x5d10207d]
	179	[9090]	GETTABLE 	R9 R2 K22 ; R9 := R2["Attribute"]
	180	[9090]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	181	[9090]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	182	[9090]	SETTABLE 	R2 K37 R6 ; R2["Color"] := R6
	183	[9092]	GETUPVAL 	R6 U4 ; R6 := U4
	184	[9092]	GETGLOBAL	R7 K1 ; R7 := mSelected
	185	[9092]	GETTABLE 	R7 R7 K2 ; R7 := R7["Element"]
	186	[9092]	GETTABLE 	R7 R7 K39 ; R7 := R7["LoadOutType"]
	187	[9092]	GETGLOBAL	R8 K1 ; R8 := mSelected
	188	[9092]	GETTABLE 	R8 R8 K2 ; R8 := R8["Element"]
	189	[9092]	GETTABLE 	R8 R8 K40 ; R8 := R8["LoadOutId"]
	190	[9092]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	191	[9093]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	192	[9093]	MOVE     	R8 R6 ; R8 := R6
	193	[9093]	CALL     	R7 2 2 ; R7 := R7(R8)
	194	[9093]	TEST     	R7 1 ; if R7 then PC := 268
	195	[9093]	JMP      	268 ; PC := 268
	196	[9094]	SELF     	R7 R6 K41 ; R8 := R6; R7 := R6[0x5163741e]
	197	[9094]	CALL     	R7 2 2 ; R7 := R7(R8)
	198	[9095]	SELF     	R8 R7 K42 ; R9 := R7; R8 := R7[0xde321e6f]
	199	[9095]	CALL     	R8 2 2 ; R8 := R8(R9)
	200	[9095]	SELF     	R8 R8 K43 ; R9 := R8; R8 := R8[0xf7d48ee0]
	201	[9095]	CALL     	R8 2 2 ; R8 := R8(R9)
	202	[9096]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	203	[9096]	MOVE     	R10 R8 ; R10 := R8
	204	[9096]	CALL     	R9 2 2 ; R9 := R9(R10)
	205	[9096]	TEST     	R9 1 ; if R9 then PC := 268
	206	[9096]	JMP      	268 ; PC := 268
	207	[9097]	SELF     	R9 R8 K44 ; R10 := R8; R9 := R8[0x0ad758cb]
	208	[9097]	CALL     	R9 2 2 ; R9 := R9(R10)
	209	[9098]	LOADK    	R10 := 0.000000
	210	[9098]	SUB      	R11 R9 K45 ; R11 := R9 - 1.000000
	211	[9098]	LOADK    	R12 := 1.000000
	212	[9098]	FORPREP  	R10 267 ; R10 -= R12; PC := 267
	213	[9099]	SELF     	R14 R8 K46 ; R15 := R8; R14 := R8[0xfef27732]
	214	[9099]	MOVE     	R16 R13 ; R16 := R13
	215	[9099]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	216	[9100]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	217	[9100]	MOVE     	R16 R14 ; R16 := R14
	218	[9100]	CALL     	R15 2 2 ; R15 := R15(R16)
	219	[9100]	TEST     	R15 1 ; if R15 then PC := 267
	220	[9100]	JMP      	267 ; PC := 267
	221	[9100]	SELF     	R15 R14 K12 ; R16 := R14; R15 := R14[0xf2deaf69]
	222	[9100]	GETGLOBAL	R17 K47 ; R17 := gLotusSigilType
	223	[9100]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	224	[9100]	TEST     	R15 1 ; if R15 then PC := 231
	225	[9100]	JMP      	231 ; PC := 231
	226	[9100]	SELF     	R15 R14 K12 ; R16 := R14; R15 := R14[0xf2deaf69]
	227	[9100]	GETGLOBAL	R17 K48 ; R17 := gLotusHoverboardStickerType
	228	[9100]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	229	[9100]	TEST     	R15 0 ; if not R15 then PC := 267
	230	[9100]	JMP      	267 ; PC := 267
	231	[9101]	SELF     	R15 R6 K49 ; R16 := R6; R15 := R6[0x68d708a7]
	232	[9101]	CALL     	R15 2 2 ; R15 := R15(R16)
	233	[9103]	SELF     	R16 R15 K50 ; R17 := R15; R16 := R15[0x7d8337fc]
	234	[9103]	LOADK    	R18 := 1.000000
	235	[9103]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	236	[9103]	GETTABLE 	R16 R16 K51 ; R16 := R16["mEmblemName"]
	237	[9104]	SELF     	R17 R3 K50 ; R18 := R3; R17 := R3[0x7d8337fc]
	238	[9104]	LOADK    	R19 := 1.000000
	239	[9104]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	240	[9104]	SETTABLE 	R17 K51 R16 ; R17["mEmblemName"] := R16
	241	[9106]	SELF     	R17 R15 K50 ; R18 := R15; R17 := R15[0x7d8337fc]
	242	[9106]	LOADK    	R19 := 2.000000
	243	[9106]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	244	[9106]	GETTABLE 	R17 R17 K51 ; R17 := R17["mEmblemName"]
	245	[9107]	SELF     	R18 R3 K50 ; R19 := R3; R18 := R3[0x7d8337fc]
	246	[9107]	LOADK    	R20 := 2.000000
	247	[9107]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	248	[9107]	SETTABLE 	R18 K51 R17 ; R18["mEmblemName"] := R17
	249	[9109]	SELF     	R18 R6 K52 ; R19 := R6; R18 := R6[0xaa041663]
	250	[9109]	MOVE     	R20 R3 ; R20 := R3
	251	[9109]	OP_LOADBOOL	R21 0 0 ; R21 := false
	252	[9109]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	253	[9110]	SELF     	R18 R14 K12 ; R19 := R14; R18 := R14[0xf2deaf69]
	254	[9110]	GETGLOBAL	R20 K47 ; R20 := gLotusSigilType
	255	[9110]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	256	[9110]	TEST     	R18 0 ; if not R18 then PC := 260
	257	[9110]	JMP      	260 ; PC := 260
	258	[9111]	SELF     	R18 R14 K53 ; R19 := R14; R18 := R14[0x4ece5f10]
	259	[9111]	CALL     	R18 2 1 ; R18(R19)
	260	[9113]	SELF     	R18 R14 K12 ; R19 := R14; R18 := R14[0xf2deaf69]
	261	[9113]	GETGLOBAL	R20 K48 ; R20 := gLotusHoverboardStickerType
	262	[9113]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	263	[9113]	TEST     	R18 0 ; if not R18 then PC := 267
	264	[9113]	JMP      	267 ; PC := 267
	265	[9114]	SELF     	R18 R14 K54 ; R19 := R14; R18 := R14[0xb6edddc0]
	266	[9114]	CALL     	R18 2 1 ; R18(R19)
	267	[9098]	FORLOOP  	R10 213 ; R10 += R12; if R10 <= R11 then begin PC := 213; R13 := R10 end
	268	[9122]	GETGLOBAL	R18 K55 ; R18 := mInventory
	269	[9122]	SELF     	R18 R18 K56 ; R19 := R18; R18 := R18[0x9b051033]
	270	[9122]	GETGLOBAL	R20 K1 ; R20 := mSelected
	271	[9122]	GETTABLE 	R20 R20 K2 ; R20 := R20["Element"]
	272	[9122]	GETTABLE 	R20 R20 K57 ; R20 := R20["UID"]
	273	[9122]	GETGLOBAL	R21 K1 ; R21 := mSelected
	274	[9122]	GETTABLE 	R21 R21 K2 ; R21 := R21["Element"]
	275	[9122]	GETTABLE 	R21 R21 K58 ; R21 := R21["mCustSlot"]
	276	[9122]	GETGLOBAL	R22 K1 ; R22 := mSelected
	277	[9122]	GETTABLE 	R22 R22 K2 ; R22 := R22["Element"]
	278	[9122]	GETTABLE 	R22 R22 K16 ; R22 := R22["Customization"]
	279	[9122]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	280	[9123]	JMP      	536 ; PC := 536
	281	[9124]	GETGLOBAL	R18 K4 ; R18 := mLists
	282	[9124]	GETTABLE 	R18 R18 K5 ; R18 := R18["mCosmeticsList"]
	283	[9124]	GETTABLE 	R18 R18 K7 ; R18 := R18["mCurrLevel"]
	284	[9124]	GETGLOBAL	R19 K4 ; R19 := mLists
	285	[9124]	GETTABLE 	R19 R19 K5 ; R19 := R19["mCosmeticsList"]
	286	[9124]	GETTABLE 	R19 R19 K59 ; R19 := R19["HOLSTER_CUSTOMIZATION"]
	287	[9124]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 536
	288	[9124]	JMP      	536 ; PC := 536
	289	[9126]	GETGLOBAL	R18 K4 ; R18 := mLists
	290	[9126]	GETTABLE 	R18 R18 K5 ; R18 := R18["mCosmeticsList"]
	291	[9126]	SELF     	R18 R18 K14 ; R19 := R18; R18 := R18[0xca30dfb6]
	292	[9126]	GETGLOBAL	R20 K15 ; R20 := 0x03f57322
	293	[9126]	MOVE     	R21 R0 ; R21 := R0
	294	[9126]	CALL     	R20 2 0 ; R20,... := R20(R21)
	295	[9126]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	296	[9127]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	297	[9127]	MOVE     	R20 R18 ; R20 := R18
	298	[9127]	CALL     	R19 2 2 ; R19 := R19(R20)
	299	[9127]	TEST     	R19 0 ; if not R19 then PC := 302
	300	[9127]	JMP      	302 ; PC := 302
	301	[9128]	RETURN   	R0 1 ; return 
	302	[9131]	GETGLOBAL	R19 K1 ; R19 := mSelected
	303	[9131]	GETTABLE 	R19 R19 K2 ; R19 := R19["Element"]
	304	[9131]	GETTABLE 	R19 R19 K16 ; R19 := R19["Customization"]
	305	[9132]	SELF     	R20 R19 K17 ; R21 := R19; R20 := R19[0x8e62760a]
	306	[9132]	LOADK    	R22 := 3.000000
	307	[9132]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	308	[9133]	LOADK    	R21 := 0.000000
	309	[9134]	LOADK    	R22 := 0.000000
	310	[9136]	SELF     	R23 R20 K60 ; R24 := R20; R23 := R20[0x697019d0]
	311	[9136]	GETTABLE 	R25 R18 K22 ; R25 := R18["Attribute"]
	312	[9136]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	313	[9136]	TEST     	R23 0 ; if not R23 then PC := 329
	314	[9136]	JMP      	329 ; PC := 329
	315	[9137]	SELF     	R23 R20 K21 ; R24 := R20; R23 := R20[0x5d10207d]
	316	[9137]	GETTABLE 	R25 R18 K22 ; R25 := R18["Attribute"]
	317	[9137]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	318	[9137]	GETTABLE 	R23 R23 K23 ; R23 := R23["red"]
	319	[9137]	MOD      	R21 R23 K61 ; R21 := R23 % 16.000000
	320	[9138]	GETGLOBAL	R23 K62 ; R23 := 0x5bced4c4
	321	[9138]	GETTABLE 	R23 R23 K63 ; R23 := R23[0x55f27c30]
	322	[9138]	SELF     	R24 R20 K21 ; R25 := R20; R24 := R20[0x5d10207d]
	323	[9138]	GETTABLE 	R26 R18 K22 ; R26 := R18["Attribute"]
	324	[9138]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	325	[9138]	GETTABLE 	R24 R24 K23 ; R24 := R24["red"]
	326	[9138]	DIV      	R24 R24 K61 ; R24 := R24 / 16.000000
	327	[9138]	CALL     	R23 2 2 ; R23 := R23(R24)
	328	[9138]	MOVE     	R22 R23 ; R22 := R23
	329	[9140]	GETTABLE 	R23 R18 K25 ; R23 := R18["Value"]
	330	[9143]	OP_LOADBOOL	R24 1 0 ; R24 := true
	331	[9144]	GETTABLE 	R25 R18 K64 ; R25 := R18["AttachPart"]
	332	[9144]	EQ       	1 R25 K20 ; if R25 == nil then PC := 406
	333	[9144]	JMP      	406 ; PC := 406
	334	[9145]	GETTABLE 	R25 R18 K65 ; R25 := R18["Hand"]
	335	[9145]	EQ       	0 R25 K67 ; if R25 ~= 0.000000 then PC := 355
	336	[9145]	JMP      	355 ; PC := 355
	337	[9146]	GETTABLE 	R25 R18 K68 ; R25 := R18["NumOptions"]
	338	[9146]	EQ       	1 R25 K20 ; if R25 == nil then PC := 347
	339	[9146]	JMP      	347 ; PC := 347
	340	[9147]	GETTABLE 	R25 R18 K68 ; R25 := R18["NumOptions"]
	341	[9147]	MUL      	R23 R23 R25 ; R23 := R23 * R25
	342	[9148]	GETGLOBAL	R25 K62 ; R25 := 0x5bced4c4
	343	[9148]	GETTABLE 	R25 R25 K63 ; R25 := R25[0x55f27c30]
	344	[9148]	ADD      	R26 R23 K69 ; R26 := R23 + 0.500000
	345	[9148]	CALL     	R25 2 2 ; R25 := R25(R26)
	346	[9148]	MOVE     	R23 R25 ; R23 := R25
	347	[9150]	GETGLOBAL	R25 K24 ; R25 := 0x42dcc9f5
	348	[9150]	MOVE     	R26 R23 ; R26 := R23
	349	[9150]	LOADK    	R27 := 0.000000
	350	[9150]	GETTABLE 	R28 R18 K68 ; R28 := R18["NumOptions"]
	351	[9150]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	352	[9150]	MOVE     	R23 R25 ; R23 := R25
	353	[9151]	MOVE     	R21 R23 ; R21 := R23
	354	[9151]	JMP      	375 ; PC := 375
	355	[9152]	GETTABLE 	R25 R18 K65 ; R25 := R18["Hand"]
	356	[9152]	EQ       	0 R25 K45 ; if R25 ~= 1.000000 then PC := 375
	357	[9152]	JMP      	375 ; PC := 375
	358	[9153]	GETTABLE 	R25 R18 K68 ; R25 := R18["NumOptions"]
	359	[9153]	EQ       	1 R25 K20 ; if R25 == nil then PC := 368
	360	[9153]	JMP      	368 ; PC := 368
	361	[9154]	GETTABLE 	R25 R18 K68 ; R25 := R18["NumOptions"]
	362	[9154]	MUL      	R23 R23 R25 ; R23 := R23 * R25
	363	[9155]	GETGLOBAL	R25 K62 ; R25 := 0x5bced4c4
	364	[9155]	GETTABLE 	R25 R25 K63 ; R25 := R25[0x55f27c30]
	365	[9155]	ADD      	R26 R23 K69 ; R26 := R23 + 0.500000
	366	[9155]	CALL     	R25 2 2 ; R25 := R25(R26)
	367	[9155]	MOVE     	R23 R25 ; R23 := R25
	368	[9157]	GETGLOBAL	R25 K24 ; R25 := 0x42dcc9f5
	369	[9157]	MOVE     	R26 R23 ; R26 := R23
	370	[9157]	LOADK    	R27 := 0.000000
	371	[9157]	GETTABLE 	R28 R18 K68 ; R28 := R18["NumOptions"]
	372	[9157]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	373	[9157]	MOVE     	R23 R25 ; R23 := R25
	374	[9158]	MOVE     	R22 R23 ; R22 := R23
	375	[9161]	SELF     	R25 R20 K21 ; R26 := R20; R25 := R20[0x5d10207d]
	376	[9161]	GETTABLE 	R27 R18 K22 ; R27 := R18["Attribute"]
	377	[9161]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	378	[9161]	MUL      	R26 R22 K61 ; R26 := R22 * 16.000000
	379	[9161]	ADD      	R26 R26 R21 ; R26 := R26 + R21
	380	[9161]	SETTABLE 	R25 K23 R26 ; R25["red"] := R26
	381	[9163]	GETUPVAL 	R25 U5 ; R25 := U5
	382	[9163]	GETGLOBAL	R26 K1 ; R26 := mSelected
	383	[9163]	GETTABLE 	R26 R26 K2 ; R26 := R26["Element"]
	384	[9163]	CALL     	R25 2 2 ; R25 := R25(R26)
	385	[9164]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	386	[9164]	MOVE     	R27 R25 ; R27 := R25
	387	[9164]	CALL     	R26 2 2 ; R26 := R26(R27)
	388	[9164]	TEST     	R26 1 ; if R26 then PC := 491
	389	[9164]	JMP      	491 ; PC := 491
	390	[9165]	SELF     	R26 R25 K70 ; R27 := R25; R26 := R25[0x5819e29e]
	391	[9165]	GETTABLE 	R28 R18 K65 ; R28 := R18["Hand"]
	392	[9165]	MOVE     	R29 R23 ; R29 := R23
	393	[9165]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	394	[9166]	GETTABLE 	R27 R18 K71 ; R27 := R18["Title"]
	395	[9166]	EQ       	1 R27 R26 ; if R27 == R26 then PC := 491
	396	[9166]	JMP      	491 ; PC := 491
	397	[9167]	SETTABLE 	R18 K71 R26 ; R18["Title"] := R26
	398	[9168]	GETGLOBAL	R27 K4 ; R27 := mLists
	399	[9168]	GETTABLE 	R27 R27 K5 ; R27 := R27["mCosmeticsList"]
	400	[9168]	SELF     	R27 R27 K72 ; R28 := R27; R27 := R27[0x71e9ac81]
	401	[9168]	LOADNIL  	R29 R29 ; R29 := nil
	402	[9168]	OP_LOADBOOL	R30 1 0 ; R30 := true
	403	[9168]	OP_LOADBOOL	R31 1 0 ; R31 := true
	404	[9168]	CALL     	R27 5 1 ; R27(R28,R29,R30,R31)
	405	[9170]	JMP      	491 ; PC := 491
	406	[9171]	GETTABLE 	R27 R18 K19 ; R27 := R18["PositionX"]
	407	[9171]	EQ       	1 R27 K20 ; if R27 == nil then PC := 420
	408	[9171]	JMP      	420 ; PC := 420
	409	[9172]	SELF     	R27 R20 K21 ; R28 := R20; R27 := R20[0x5d10207d]
	410	[9172]	GETTABLE 	R29 R18 K22 ; R29 := R18["Attribute"]
	411	[9172]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	412	[9172]	GETGLOBAL	R28 K24 ; R28 := 0x42dcc9f5
	413	[9172]	GETTABLE 	R29 R18 K25 ; R29 := R18["Value"]
	414	[9172]	MUL      	R29 R29 K26 ; R29 := R29 * 255.000000
	415	[9172]	LOADK    	R30 := 0.000000
	416	[9172]	LOADK    	R31 := 255.000000
	417	[9172]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	418	[9172]	SETTABLE 	R27 K23 R28 ; R27["red"] := R28
	419	[9172]	JMP      	491 ; PC := 491
	420	[9173]	GETTABLE 	R27 R18 K27 ; R27 := R18["PositionY"]
	421	[9173]	EQ       	1 R27 K20 ; if R27 == nil then PC := 434
	422	[9173]	JMP      	434 ; PC := 434
	423	[9174]	SELF     	R27 R20 K21 ; R28 := R20; R27 := R20[0x5d10207d]
	424	[9174]	GETTABLE 	R29 R18 K22 ; R29 := R18["Attribute"]
	425	[9174]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	426	[9174]	GETGLOBAL	R28 K24 ; R28 := 0x42dcc9f5
	427	[9174]	GETTABLE 	R29 R18 K25 ; R29 := R18["Value"]
	428	[9174]	MUL      	R29 R29 K26 ; R29 := R29 * 255.000000
	429	[9174]	LOADK    	R30 := 0.000000
	430	[9174]	LOADK    	R31 := 255.000000
	431	[9174]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	432	[9174]	SETTABLE 	R27 K28 R28 ; R27["green"] := R28
	433	[9174]	JMP      	491 ; PC := 491
	434	[9175]	GETTABLE 	R27 R18 K73 ; R27 := R18["PositionZ"]
	435	[9175]	EQ       	1 R27 K20 ; if R27 == nil then PC := 448
	436	[9175]	JMP      	448 ; PC := 448
	437	[9176]	SELF     	R27 R20 K21 ; R28 := R20; R27 := R20[0x5d10207d]
	438	[9176]	GETTABLE 	R29 R18 K22 ; R29 := R18["Attribute"]
	439	[9176]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	440	[9176]	GETGLOBAL	R28 K24 ; R28 := 0x42dcc9f5
	441	[9176]	GETTABLE 	R29 R18 K25 ; R29 := R18["Value"]
	442	[9176]	MUL      	R29 R29 K26 ; R29 := R29 * 255.000000
	443	[9176]	LOADK    	R30 := 0.000000
	444	[9176]	LOADK    	R31 := 255.000000
	445	[9176]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	446	[9176]	SETTABLE 	R27 K30 R28 ; R27["blue"] := R28
	447	[9176]	JMP      	491 ; PC := 491
	448	[9177]	GETTABLE 	R27 R18 K74 ; R27 := R18["RotationX"]
	449	[9177]	EQ       	1 R27 K20 ; if R27 == nil then PC := 462
	450	[9177]	JMP      	462 ; PC := 462
	451	[9178]	SELF     	R27 R20 K21 ; R28 := R20; R27 := R20[0x5d10207d]
	452	[9178]	GETTABLE 	R29 R18 K22 ; R29 := R18["Attribute"]
	453	[9178]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	454	[9178]	GETGLOBAL	R28 K24 ; R28 := 0x42dcc9f5
	455	[9178]	GETTABLE 	R29 R18 K25 ; R29 := R18["Value"]
	456	[9178]	MUL      	R29 R29 K26 ; R29 := R29 * 255.000000
	457	[9178]	LOADK    	R30 := 0.000000
	458	[9178]	LOADK    	R31 := 255.000000
	459	[9178]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	460	[9178]	SETTABLE 	R27 K23 R28 ; R27["red"] := R28
	461	[9178]	JMP      	491 ; PC := 491
	462	[9179]	GETTABLE 	R27 R18 K75 ; R27 := R18["RotationY"]
	463	[9179]	EQ       	1 R27 K20 ; if R27 == nil then PC := 476
	464	[9179]	JMP      	476 ; PC := 476
	465	[9180]	SELF     	R27 R20 K21 ; R28 := R20; R27 := R20[0x5d10207d]
	466	[9180]	GETTABLE 	R29 R18 K22 ; R29 := R18["Attribute"]
	467	[9180]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	468	[9180]	GETGLOBAL	R28 K24 ; R28 := 0x42dcc9f5
	469	[9180]	GETTABLE 	R29 R18 K25 ; R29 := R18["Value"]
	470	[9180]	MUL      	R29 R29 K26 ; R29 := R29 * 255.000000
	471	[9180]	LOADK    	R30 := 0.000000
	472	[9180]	LOADK    	R31 := 255.000000
	473	[9180]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	474	[9180]	SETTABLE 	R27 K28 R28 ; R27["green"] := R28
	475	[9180]	JMP      	491 ; PC := 491
	476	[9181]	GETTABLE 	R27 R18 K76 ; R27 := R18["RotationZ"]
	477	[9181]	EQ       	1 R27 K20 ; if R27 == nil then PC := 490
	478	[9181]	JMP      	490 ; PC := 490
	479	[9182]	SELF     	R27 R20 K21 ; R28 := R20; R27 := R20[0x5d10207d]
	480	[9182]	GETTABLE 	R29 R18 K22 ; R29 := R18["Attribute"]
	481	[9182]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	482	[9182]	GETGLOBAL	R28 K24 ; R28 := 0x42dcc9f5
	483	[9182]	GETTABLE 	R29 R18 K25 ; R29 := R18["Value"]
	484	[9182]	MUL      	R29 R29 K26 ; R29 := R29 * 255.000000
	485	[9182]	LOADK    	R30 := 0.000000
	486	[9182]	LOADK    	R31 := 255.000000
	487	[9182]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	488	[9182]	SETTABLE 	R27 K30 R28 ; R27["blue"] := R28
	489	[9182]	JMP      	491 ; PC := 491
	490	[9184]	OP_LOADBOOL	R24 0 0 ; R24 := false
	491	[9186]	TEST     	R24 0 ; if not R24 then PC := 497
	492	[9186]	JMP      	497 ; PC := 497
	493	[9187]	SELF     	R27 R20 K35 ; R28 := R20; R27 := R20[0xfc5d7158]
	494	[9187]	GETTABLE 	R29 R18 K22 ; R29 := R18["Attribute"]
	495	[9187]	OP_LOADBOOL	R30 1 0 ; R30 := true
	496	[9187]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	497	[9190]	SELF     	R27 R19 K36 ; R28 := R19; R27 := R19[0x199edf6e]
	498	[9190]	LOADK    	R29 := 3.000000
	499	[9190]	MOVE     	R30 R20 ; R30 := R20
	500	[9190]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	501	[9192]	GETGLOBAL	R27 K38 ; R27 := 0x60130201
	502	[9192]	SELF     	R28 R20 K21 ; R29 := R20; R28 := R20[0x5d10207d]
	503	[9192]	GETTABLE 	R30 R18 K22 ; R30 := R18["Attribute"]
	504	[9192]	CALL     	R28 3 0 ; R28,... := R28(R29,R30)
	505	[9192]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	506	[9192]	SETTABLE 	R18 K37 R27 ; R18["Color"] := R27
	507	[9194]	GETUPVAL 	R27 U4 ; R27 := U4
	508	[9194]	GETGLOBAL	R28 K1 ; R28 := mSelected
	509	[9194]	GETTABLE 	R28 R28 K2 ; R28 := R28["Element"]
	510	[9194]	GETTABLE 	R28 R28 K39 ; R28 := R28["LoadOutType"]
	511	[9194]	GETGLOBAL	R29 K1 ; R29 := mSelected
	512	[9194]	GETTABLE 	R29 R29 K2 ; R29 := R29["Element"]
	513	[9194]	GETTABLE 	R29 R29 K40 ; R29 := R29["LoadOutId"]
	514	[9194]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	515	[9195]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	516	[9195]	MOVE     	R29 R27 ; R29 := R27
	517	[9195]	CALL     	R28 2 2 ; R28 := R28(R29)
	518	[9195]	TEST     	R28 1 ; if R28 then PC := 524
	519	[9195]	JMP      	524 ; PC := 524
	520	[9196]	SELF     	R28 R27 K52 ; R29 := R27; R28 := R27[0xaa041663]
	521	[9196]	MOVE     	R30 R19 ; R30 := R19
	522	[9196]	OP_LOADBOOL	R31 0 0 ; R31 := false
	523	[9196]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	524	[9199]	GETGLOBAL	R28 K55 ; R28 := mInventory
	525	[9199]	SELF     	R28 R28 K56 ; R29 := R28; R28 := R28[0x9b051033]
	526	[9199]	GETGLOBAL	R30 K1 ; R30 := mSelected
	527	[9199]	GETTABLE 	R30 R30 K2 ; R30 := R30["Element"]
	528	[9199]	GETTABLE 	R30 R30 K57 ; R30 := R30["UID"]
	529	[9199]	GETGLOBAL	R31 K1 ; R31 := mSelected
	530	[9199]	GETTABLE 	R31 R31 K2 ; R31 := R31["Element"]
	531	[9199]	GETTABLE 	R31 R31 K58 ; R31 := R31["mCustSlot"]
	532	[9199]	GETGLOBAL	R32 K1 ; R32 := mSelected
	533	[9199]	GETTABLE 	R32 R32 K2 ; R32 := R32["Element"]
	534	[9199]	GETTABLE 	R32 R32 K16 ; R32 := R32["Customization"]
	535	[9199]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	536	[9201]	RETURN   	R0 1 ; return 

function #138 <?:9205,9243> (126 instructions, 504 bytes at 0000021137983F40)
2 params, 11 slots, 3 upvalues, 0 locals, 40 constants, 0 functions
	1	[9206]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[9206]	GETGLOBAL	R3 K1 ; R3 := mSelected
	3	[9206]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[9206]	TEST     	R2 1 ; if R2 then PC := 12
	5	[9206]	JMP      	12 ; PC := 12
	6	[9206]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[9206]	GETGLOBAL	R3 K1 ; R3 := mSelected
	8	[9206]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	9	[9206]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[9206]	TEST     	R2 0 ; if not R2 then PC := 13
	11	[9206]	JMP      	13 ; PC := 13
	12	[9207]	RETURN   	R0 1 ; return 
	13	[9209]	EQ       	0 R0 K3 ; if R0 ~= nil then PC := 61
	14	[9209]	JMP      	61 ; PC := 61
	15	[9211]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[9212]	GETGLOBAL	R3 K4 ; R3 := mLists
	17	[9212]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	18	[9212]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xed1ab921]
	19	[9212]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[9212]	MOVE     	R0 R3 ; R0 := R3
	21	[9213]	EQ       	1 R0 K3 ; if R0 == nil then PC := 58
	22	[9213]	JMP      	58 ; PC := 58
	23	[9214]	GETTABLE 	R3 R0 K7 ; R3 := R0["Color"]
	24	[9214]	EQ       	1 R3 K3 ; if R3 == nil then PC := 56
	25	[9214]	JMP      	56 ; PC := 56
	26	[9214]	GETTABLE 	R3 R0 K8 ; R3 := R0["PositionX"]
	27	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	28	[9214]	JMP      	56 ; PC := 56
	29	[9214]	GETTABLE 	R3 R0 K9 ; R3 := R0["PositionY"]
	30	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	31	[9214]	JMP      	56 ; PC := 56
	32	[9214]	GETTABLE 	R3 R0 K10 ; R3 := R0["PositionZ"]
	33	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	34	[9214]	JMP      	56 ; PC := 56
	35	[9214]	GETTABLE 	R3 R0 K11 ; R3 := R0["ScaleX"]
	36	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	37	[9214]	JMP      	56 ; PC := 56
	38	[9214]	GETTABLE 	R3 R0 K12 ; R3 := R0["ScaleY"]
	39	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	40	[9214]	JMP      	56 ; PC := 56
	41	[9214]	GETTABLE 	R3 R0 K13 ; R3 := R0["Rotation"]
	42	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	43	[9214]	JMP      	56 ; PC := 56
	44	[9214]	GETTABLE 	R3 R0 K14 ; R3 := R0["Alpha"]
	45	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	46	[9214]	JMP      	56 ; PC := 56
	47	[9214]	GETTABLE 	R3 R0 K15 ; R3 := R0["RotationX"]
	48	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	49	[9214]	JMP      	56 ; PC := 56
	50	[9214]	GETTABLE 	R3 R0 K16 ; R3 := R0["RotationY"]
	51	[9214]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 56
	52	[9214]	JMP      	56 ; PC := 56
	53	[9214]	GETTABLE 	R3 R0 K17 ; R3 := R0["RotationZ"]
	54	[9214]	EQ       	1 R3 K3 ; if R3 == nil then PC := 57
	55	[9214]	JMP      	57 ; PC := 57
	56	[9214]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 57
	57	[9214]	OP_LOADBOOL	R2 1 0 ; R2 := true
	58	[9217]	TEST     	R2 1 ; if R2 then PC := 61
	59	[9217]	JMP      	61 ; PC := 61
	60	[9218]	RETURN   	R0 1 ; return 
	61	[9222]	GETUPVAL 	R3 U0 ; R3 := U0
	62	[9222]	CALL     	R3 1 2 ; R3 := R3()
	63	[9224]	SETTABLE 	R0 K18 K19 ; R0["mForceRedraw"] := true
	64	[9226]	GETTABLE 	R4 R0 K20 ; R4 := R0["PetTrait"]
	65	[9226]	TEST     	R4 0 ; if not R4 then PC := 93
	66	[9226]	JMP      	93 ; PC := 93
	67	[9226]	GETGLOBAL	R4 K1 ; R4 := mSelected
	68	[9226]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	69	[9226]	GETTABLE 	R4 R4 K21 ; R4 := R4["LoadOutId"]
	70	[9226]	EQ       	0 R4 K23 ; if R4 ~= 5.000000 then PC := 76
	71	[9226]	JMP      	76 ; PC := 76
	72	[9226]	GETGLOBAL	R4 K24 ; R4 := _T
	73	[9226]	GETTABLE 	R4 R4 K25 ; R4 := R4["mSpecialSuitMode"]
	74	[9226]	TEST     	R4 1 ; if R4 then PC := 93
	75	[9226]	JMP      	93 ; PC := 93
	76	[9227]	GETGLOBAL	R4 K26 ; R4 := 0x25d99d89
	77	[9227]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x62c81b76]
	78	[9227]	CALL     	R4 2 2 ; R4 := R4(R5)
	79	[9227]	GETTABLE 	R4 R4 K28 ; R4 := R4["mKubrowPetDetails"]
	80	[9227]	GETTABLE 	R4 R4 K29 ; R4 := R4["mDominantTraits"]
	81	[9228]	GETGLOBAL	R5 K30 ; R5 := 0xb009bbc6
	82	[9228]	GETTABLE 	R6 R0 K20 ; R6 := R0["PetTrait"]
	83	[9228]	GETTABLE 	R6 R4 R6 ; R6 := R4[R6]
	84	[9228]	CALL     	R5 2 2 ; R5 := R5(R6)
	85	[9230]	GETUPVAL 	R6 U1 ; R6 := U1
	86	[9230]	GETTABLE 	R7 R0 K31 ; R7 := R0["Attribute"]
	87	[9230]	SELF     	R8 R5 K32 ; R9 := R5; R8 := R5[0x5d10207d]
	88	[9230]	CALL     	R8 2 2 ; R8 := R8(R9)
	89	[9230]	LOADK    	R9 := 0.000000
	90	[9230]	LOADNIL  	R10 R10 ; R10 := nil
	91	[9230]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	92	[9230]	JMP      	123 ; PC := 123
	93	[9232]	GETGLOBAL	R6 K1 ; R6 := mSelected
	94	[9232]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	95	[9232]	GETTABLE 	R6 R6 K33 ; R6 := R6["Customization"]
	96	[9232]	SELF     	R6 R6 K34 ; R7 := R6; R6 := R6[0x8e62760a]
	97	[9232]	MOVE     	R8 R3 ; R8 := R3
	98	[9232]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	99	[9233]	EQ       	1 R1 K3 ; if R1 == nil then PC := 103
	100	[9233]	JMP      	103 ; PC := 103
	101	[9233]	EQ       	0 R1 K35 ; if R1 ~= 2.000000 then PC := 107
	102	[9233]	JMP      	107 ; PC := 107
	103	[9234]	SELF     	R7 R6 K36 ; R8 := R6; R7 := R6[0xfc5d7158]
	104	[9234]	GETTABLE 	R9 R0 K31 ; R9 := R0["Attribute"]
	105	[9234]	OP_LOADBOOL	R10 0 0 ; R10 := false
	106	[9234]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	107	[9236]	EQ       	1 R1 K3 ; if R1 == nil then PC := 116
	108	[9236]	JMP      	116 ; PC := 116
	109	[9236]	GETTABLE 	R7 R0 K37 ; R7 := R0["Attribute2"]
	110	[9236]	EQ       	1 R7 K3 ; if R7 == nil then PC := 116
	111	[9236]	JMP      	116 ; PC := 116
	112	[9237]	SELF     	R7 R6 K36 ; R8 := R6; R7 := R6[0xfc5d7158]
	113	[9237]	GETTABLE 	R9 R0 K37 ; R9 := R0["Attribute2"]
	114	[9237]	OP_LOADBOOL	R10 0 0 ; R10 := false
	115	[9237]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	116	[9239]	GETGLOBAL	R7 K1 ; R7 := mSelected
	117	[9239]	GETTABLE 	R7 R7 K2 ; R7 := R7["Element"]
	118	[9239]	GETTABLE 	R7 R7 K33 ; R7 := R7["Customization"]
	119	[9239]	SELF     	R7 R7 K38 ; R8 := R7; R7 := R7[0x199edf6e]
	120	[9239]	MOVE     	R9 R3 ; R9 := R3
	121	[9239]	MOVE     	R10 R6 ; R10 := R6
	122	[9239]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	123	[9242]	GETUPVAL 	R7 U2 ; R7 := U2
	124	[9242]	GETTABLE 	R7 R7 K39 ; R7 := R7[0xba296217]
	125	[9242]	CALL     	R7 1 1 ; R7()
	126	[9243]	RETURN   	R0 1 ; return 

function #139 <?:9245,9335> (97 instructions, 388 bytes at 0000021137984680)
1 param, 14 slots, 3 upvalues, 0 locals, 26 constants, 2 functions
	1	[9247]	GETGLOBAL	R1 K0 ; R1 := mLists
	2	[9247]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCosmeticsList"]
	3	[9247]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCurrLevel"]
	4	[9247]	GETGLOBAL	R2 K0 ; R2 := mLists
	5	[9247]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCosmeticsList"]
	6	[9247]	GETTABLE 	R2 R2 K3 ; R2 := R2["HOLSTER_CUSTOMIZATION"]
	7	[9247]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 90
	8	[9247]	JMP      	90 ; PC := 90
	9	[9247]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	10	[9247]	GETGLOBAL	R2 K5 ; R2 := mSelected
	11	[9247]	GETTABLE 	R2 R2 K6 ; R2 := R2["Element"]
	12	[9247]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[9247]	TEST     	R1 1 ; if R1 then PC := 90
	14	[9247]	JMP      	90 ; PC := 90
	15	[9248]	GETGLOBAL	R1 K7 ; R1 := _T
	16	[9248]	GETTABLE 	R1 R1 K8 ; R1 := R1["MenuSuitAvatar"]
	17	[9249]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0xde321e6f]
	18	[9249]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[9249]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xf7d48ee0]
	20	[9249]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[9251]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[9251]	GETGLOBAL	R4 K5 ; R4 := mSelected
	23	[9251]	GETTABLE 	R4 R4 K6 ; R4 := R4["Element"]
	24	[9251]	GETTABLE 	R4 R4 K11 ; R4 := R4["LoadOutType"]
	25	[9251]	GETGLOBAL	R5 K5 ; R5 := mSelected
	26	[9251]	GETTABLE 	R5 R5 K6 ; R5 := R5["Element"]
	27	[9251]	GETTABLE 	R5 R5 K12 ; R5 := R5["LoadOutId"]
	28	[9251]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	29	[9253]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	30	[9253]	MOVE     	R5 R2 ; R5 := R2
	31	[9253]	CALL     	R4 2 2 ; R4 := R4(R5)
	32	[9253]	TEST     	R4 1 ; if R4 then PC := 97
	33	[9253]	JMP      	97 ; PC := 97
	34	[9253]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	35	[9253]	MOVE     	R5 R3 ; R5 := R3
	36	[9253]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[9253]	TEST     	R4 1 ; if R4 then PC := 97
	38	[9253]	JMP      	97 ; PC := 97
	39	[9254]	GETGLOBAL	R4 K5 ; R4 := mSelected
	40	[9254]	GETTABLE 	R4 R4 K6 ; R4 := R4["Element"]
	41	[9254]	GETTABLE 	R4 R4 K13 ; R4 := R4["Customization"]
	42	[9255]	SELF     	R5 R4 K14 ; R6 := R4; R5 := R4[0x8e62760a]
	43	[9255]	LOADK    	R7 := 3.000000
	44	[9255]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	45	[9256]	SELF     	R6 R2 K16 ; R7 := R2; R6 := R2[0xd6496b1c]
	46	[9256]	MOVE     	R8 R3 ; R8 := R3
	47	[9256]	GETTABLE 	R9 R0 K17 ; R9 := R0["Hand"]
	48	[9256]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	49	[9257]	SELF     	R7 R6 K14 ; R8 := R6; R7 := R6[0x8e62760a]
	50	[9257]	LOADK    	R9 := 3.000000
	51	[9257]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	52	[9259]	GETGLOBAL	R8 K0 ; R8 := mLists
	53	[9259]	GETTABLE 	R8 R8 K1 ; R8 := R8["mCosmeticsList"]
	54	[9259]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xea061e98]
	55	[9300]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	56	[9300]	MOVE     	R0 R0 ; R0 := R0
	57	[9300]	MOVE     	R0 R7 ; R0 := R7
	58	[9300]	GETUPVAL 	R0 U1 ; R0 := U1
	59	[9300]	MOVE     	R0 R5 ; R0 := R5
	60	[9259]	CALL     	R8 3 1 ; R8(R9,R10)
	61	[9303]	SELF     	R8 R4 K19 ; R9 := R4; R8 := R4[0x199edf6e]
	62	[9303]	LOADK    	R10 := 3.000000
	63	[9303]	MOVE     	R11 R5 ; R11 := R5
	64	[9303]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	65	[9305]	SELF     	R8 R3 K20 ; R9 := R3; R8 := R3[0x0ad758cb]
	66	[9305]	CALL     	R8 2 2 ; R8 := R8(R9)
	67	[9306]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	68	[9306]	MOVE     	R10 R3 ; R10 := R3
	69	[9306]	CALL     	R9 2 2 ; R9 := R9(R10)
	70	[9306]	TEST     	R9 1 ; if R9 then PC := 76
	71	[9306]	JMP      	76 ; PC := 76
	72	[9307]	SELF     	R9 R3 K21 ; R10 := R3; R9 := R3[0xaa041663]
	73	[9307]	MOVE     	R11 R4 ; R11 := R4
	74	[9307]	OP_LOADBOOL	R12 0 0 ; R12 := false
	75	[9307]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	76	[9310]	GETGLOBAL	R9 K22 ; R9 := mInventory
	77	[9310]	SELF     	R9 R9 K23 ; R10 := R9; R9 := R9[0x9b051033]
	78	[9310]	GETGLOBAL	R11 K5 ; R11 := mSelected
	79	[9310]	GETTABLE 	R11 R11 K6 ; R11 := R11["Element"]
	80	[9310]	GETTABLE 	R11 R11 K24 ; R11 := R11["UID"]
	81	[9310]	GETGLOBAL	R12 K5 ; R12 := mSelected
	82	[9310]	GETTABLE 	R12 R12 K6 ; R12 := R12["Element"]
	83	[9310]	GETTABLE 	R12 R12 K25 ; R12 := R12["mCustSlot"]
	84	[9310]	GETGLOBAL	R13 K5 ; R13 := mSelected
	85	[9310]	GETTABLE 	R13 R13 K6 ; R13 := R13["Element"]
	86	[9310]	GETTABLE 	R13 R13 K13 ; R13 := R13["Customization"]
	87	[9310]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	88	[9310]	CLOSE    	R4 ; SAVE R4,...
	89	[9311]	JMP      	97 ; PC := 97
	90	[9313]	GETGLOBAL	R4 K0 ; R4 := mLists
	91	[9313]	GETTABLE 	R4 R4 K1 ; R4 := R4["mCosmeticsList"]
	92	[9313]	SELF     	R4 R4 K18 ; R5 := R4; R4 := R4[0xea061e98]
	93	[9333]	CLOSURE  	R6 1 ; R6 := closure(Function #2)
	94	[9333]	GETUPVAL 	R0 U1 ; R0 := U1
	95	[9333]	GETUPVAL 	R0 U2 ; R0 := U2
	96	[9313]	CALL     	R4 3 1 ; R4(R5,R6)
	97	[9335]	RETURN   	R0 1 ; return 

function #140 <?:9337,9387> (172 instructions, 688 bytes at 0000021137985B30)
1 param, 24 slots, 8 upvalues, 0 locals, 35 constants, 0 functions
	1	[9338]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[9338]	GETGLOBAL	R2 K1 ; R2 := mSelected
	3	[9338]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	4	[9338]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[9338]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[9338]	JMP      	8 ; PC := 8
	7	[9339]	RETURN   	R0 1 ; return 
	8	[9342]	GETTABLE 	R1 R0 K3 ; R1 := R0["CopyColors"]
	9	[9343]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[9343]	TEST     	R2 0 ; if not R2 then PC := 24
	11	[9343]	JMP      	24 ; PC := 24
	12	[9343]	GETGLOBAL	R2 K1 ; R2 := mSelected
	13	[9343]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	14	[9343]	GETTABLE 	R2 R2 K4 ; R2 := R2["EquippedItem"]
	15	[9343]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xba568eef]
	16	[9343]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[9343]	TEST     	R2 0 ; if not R2 then PC := 24
	18	[9343]	JMP      	24 ; PC := 24
	19	[9344]	GETUPVAL 	R2 U1 ; R2 := U1
	20	[9344]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xe0cba3ca]
	21	[9344]	LOADK    	R3 K7 ; R3 := "/Lotus/Language/Changyou/CannotColourTimeLimitedEquipment"
	22	[9344]	CALL     	R2 2 1 ; R2(R3)
	23	[9345]	RETURN   	R0 1 ; return 
	24	[9348]	GETGLOBAL	R2 K1 ; R2 := mSelected
	25	[9348]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	26	[9348]	GETTABLE 	R2 R2 K8 ; R2 := R2["Customization"]
	27	[9349]	GETUPVAL 	R3 U2 ; R3 := U2
	28	[9349]	GETGLOBAL	R4 K1 ; R4 := mSelected
	29	[9349]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	30	[9349]	GETTABLE 	R4 R4 K9 ; R4 := R4["LoadOutType"]
	31	[9349]	GETGLOBAL	R5 K1 ; R5 := mSelected
	32	[9349]	GETTABLE 	R5 R5 K2 ; R5 := R5["Element"]
	33	[9349]	GETTABLE 	R5 R5 K10 ; R5 := R5["LoadOutId"]
	34	[9349]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	35	[9350]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	36	[9350]	MOVE     	R5 R2 ; R5 := R2
	37	[9350]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[9350]	TEST     	R4 1 ; if R4 then PC := 172
	39	[9350]	JMP      	172 ; PC := 172
	40	[9351]	GETUPVAL 	R4 U3 ; R4 := U3
	41	[9351]	GETGLOBAL	R5 K1 ; R5 := mSelected
	42	[9351]	GETTABLE 	R5 R5 K2 ; R5 := R5["Element"]
	43	[9351]	GETTABLE 	R5 R5 K9 ; R5 := R5["LoadOutType"]
	44	[9351]	GETGLOBAL	R6 K1 ; R6 := mSelected
	45	[9351]	GETTABLE 	R6 R6 K2 ; R6 := R6["Element"]
	46	[9351]	GETTABLE 	R6 R6 K10 ; R6 := R6["LoadOutId"]
	47	[9351]	CALL     	R4 3 3 ; R4,R5 := R4(R5,R6)
	48	[9352]	SELF     	R6 R2 K11 ; R7 := R2; R6 := R2[0x8e62760a]
	49	[9352]	MOVE     	R8 R1 ; R8 := R1
	50	[9352]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	51	[9353]	GETUPVAL 	R7 U4 ; R7 := U4
	52	[9353]	CALL     	R7 1 2 ; R7 := R7()
	53	[9354]	SELF     	R8 R2 K11 ; R9 := R2; R8 := R2[0x8e62760a]
	54	[9354]	MOVE     	R10 R7 ; R10 := R7
	55	[9354]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	56	[9356]	LOADK    	R9 := 0.000000
	57	[9356]	LOADK    	R10 := 7.000000
	58	[9356]	LOADK    	R11 := 1.000000
	59	[9356]	FORPREP  	R9 119 ; R9 -= R11; PC := 119
	60	[9357]	EQ       	0 R12 K13 ; if R12 ~= 7.000000 then PC := 68
	61	[9357]	JMP      	68 ; PC := 68
	62	[9357]	GETUPVAL 	R13 U5 ; R13 := U5
	63	[9357]	GETGLOBAL	R14 K1 ; R14 := mSelected
	64	[9357]	GETTABLE 	R14 R14 K2 ; R14 := R14["Element"]
	65	[9357]	CALL     	R13 2 2 ; R13 := R13(R14)
	66	[9357]	TEST     	R13 0 ; if not R13 then PC := 119
	67	[9357]	JMP      	119 ; PC := 119
	68	[9358]	LOADNIL  	R13 R13 ; R13 := nil
	69	[9359]	OP_LOADBOOL	R14 1 0 ; R14 := true
	70	[9360]	SELF     	R15 R6 K14 ; R16 := R6; R15 := R6[0x697019d0]
	71	[9360]	MOVE     	R17 R12 ; R17 := R12
	72	[9360]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	73	[9360]	TEST     	R15 0 ; if not R15 then PC := 80
	74	[9360]	JMP      	80 ; PC := 80
	75	[9361]	SELF     	R15 R6 K15 ; R16 := R6; R15 := R6[0x5d10207d]
	76	[9361]	MOVE     	R17 R12 ; R17 := R12
	77	[9361]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	78	[9361]	MOVE     	R13 R15 ; R13 := R15
	79	[9361]	JMP      	111 ; PC := 111
	80	[9364]	SELF     	R15 R2 K16 ; R16 := R2; R15 := R2[0x6199aec6]
	81	[9364]	MOVE     	R17 R12 ; R17 := R12
	82	[9364]	GETUPVAL 	R18 U1 ; R18 := U1
	83	[9364]	GETTABLE 	R18 R18 K17 ; R18 := R18[0x06d055f9]
	84	[9364]	LEN      	R19 R4 ; R19 := # R4
	85	[9364]	LT       	1 K18 R19 ; if 0.000000 < R19 then PC := 88
	86	[9364]	JMP      	88 ; PC := 88
	87	[9364]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 88
	88	[9364]	OP_LOADBOOL	R19 1 0 ; R19 := true
	89	[9364]	GETTABLE 	R20 R4 K19 ; R20 := R4[1.000000]
	90	[9364]	LOADNIL  	R21 R21 ; R21 := nil
	91	[9364]	CALL     	R18 4 0 ; R18,... := R18(R19,R20,R21)
	92	[9364]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	93	[9364]	MOVE     	R13 R15 ; R13 := R15
	94	[9365]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	95	[9365]	MOVE     	R16 R3 ; R16 := R3
	96	[9365]	CALL     	R15 2 2 ; R15 := R15(R16)
	97	[9365]	TEST     	R15 1 ; if R15 then PC := 111
	98	[9365]	JMP      	111 ; PC := 111
	99	[9365]	EQ       	1 R12 K20 ; if R12 == 6.000000 then PC := 103
	100	[9365]	JMP      	103 ; PC := 103
	101	[9365]	EQ       	0 R12 K13 ; if R12 ~= 7.000000 then PC := 111
	102	[9365]	JMP      	111 ; PC := 111
	103	[9366]	SELF     	R15 R3 K21 ; R16 := R3; R15 := R3[0xa3ef5d65]
	104	[9366]	MOVE     	R17 R13 ; R17 := R13
	105	[9366]	EQ       	1 R12 K13 ; if R12 == 7.000000 then PC := 108
	106	[9366]	JMP      	108 ; PC := 108
	107	[9366]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 108
	108	[9366]	OP_LOADBOOL	R18 1 0 ; R18 := true
	109	[9366]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	110	[9366]	MOVE     	R14 R15 ; R14 := R15
	111	[9369]	SELF     	R15 R8 K22 ; R16 := R8; R15 := R8[0xa3927fe9]
	112	[9369]	MOVE     	R17 R12 ; R17 := R12
	113	[9369]	MOVE     	R18 R13 ; R18 := R13
	114	[9369]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	115	[9370]	SELF     	R15 R8 K23 ; R16 := R8; R15 := R8[0xfc5d7158]
	116	[9370]	MOVE     	R17 R12 ; R17 := R12
	117	[9370]	MOVE     	R18 R14 ; R18 := R14
	118	[9370]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	119	[9356]	FORLOOP  	R9 60 ; R9 += R11; if R9 <= R10 then begin PC := 60; R12 := R9 end
	120	[9374]	GETGLOBAL	R15 K1 ; R15 := mSelected
	121	[9374]	GETTABLE 	R15 R15 K2 ; R15 := R15["Element"]
	122	[9374]	GETTABLE 	R15 R15 K8 ; R15 := R15["Customization"]
	123	[9374]	SELF     	R15 R15 K24 ; R16 := R15; R15 := R15[0x199edf6e]
	124	[9374]	MOVE     	R17 R7 ; R17 := R7
	125	[9374]	MOVE     	R18 R8 ; R18 := R8
	126	[9374]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	127	[9375]	GETGLOBAL	R15 K1 ; R15 := mSelected
	128	[9375]	GETTABLE 	R15 R15 K2 ; R15 := R15["Element"]
	129	[9375]	GETTABLE 	R15 R15 K4 ; R15 := R15["EquippedItem"]
	130	[9375]	SELF     	R15 R15 K25 ; R16 := R15; R15 := R15[0xaa041663]
	131	[9375]	GETGLOBAL	R17 K1 ; R17 := mSelected
	132	[9375]	GETTABLE 	R17 R17 K2 ; R17 := R17["Element"]
	133	[9375]	GETTABLE 	R17 R17 K8 ; R17 := R17["Customization"]
	134	[9375]	GETGLOBAL	R18 K1 ; R18 := mSelected
	135	[9375]	GETTABLE 	R18 R18 K2 ; R18 := R18["Element"]
	136	[9375]	GETTABLE 	R18 R18 K26 ; R18 := R18["mCustSlot"]
	137	[9375]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	138	[9376]	GETGLOBAL	R15 K27 ; R15 := mInventory
	139	[9376]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0x9b051033]
	140	[9376]	GETGLOBAL	R17 K1 ; R17 := mSelected
	141	[9376]	GETTABLE 	R17 R17 K2 ; R17 := R17["Element"]
	142	[9376]	GETTABLE 	R17 R17 K29 ; R17 := R17["UID"]
	143	[9376]	GETGLOBAL	R18 K1 ; R18 := mSelected
	144	[9376]	GETTABLE 	R18 R18 K2 ; R18 := R18["Element"]
	145	[9376]	GETTABLE 	R18 R18 K26 ; R18 := R18["mCustSlot"]
	146	[9376]	GETGLOBAL	R19 K1 ; R19 := mSelected
	147	[9376]	GETTABLE 	R19 R19 K2 ; R19 := R19["Element"]
	148	[9376]	GETTABLE 	R19 R19 K8 ; R19 := R19["Customization"]
	149	[9376]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	150	[9378]	LOADK    	R15 := 1.000000
	151	[9378]	LEN      	R16 R4 ; R16 := # R4
	152	[9378]	LOADK    	R17 := 1.000000
	153	[9378]	FORPREP  	R15 162 ; R15 -= R17; PC := 162
	154	[9379]	GETTABLE 	R19 R4 R18 ; R19 := R4[R18]
	155	[9380]	GETGLOBAL	R20 K1 ; R20 := mSelected
	156	[9380]	GETTABLE 	R20 R20 K2 ; R20 := R20["Element"]
	157	[9380]	GETTABLE 	R20 R20 K8 ; R20 := R20["Customization"]
	158	[9380]	SELF     	R20 R20 K30 ; R21 := R20; R20 := R20[0x61b59a83]
	159	[9380]	MOVE     	R22 R19 ; R22 := R19
	160	[9380]	MOVE     	R23 R5 ; R23 := R5
	161	[9380]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	162	[9378]	FORLOOP  	R15 154 ; R15 += R17; if R15 <= R16 then begin PC := 154; R18 := R15 end
	163	[9382]	GETUPVAL 	R20 U6 ; R20 := U6
	164	[9382]	CALL     	R20 1 1 ; R20()
	165	[9383]	GETGLOBAL	R20 K31 ; R20 := mLists
	166	[9383]	GETTABLE 	R20 R20 K32 ; R20 := R20["mCosmeticsList"]
	167	[9383]	SELF     	R20 R20 K33 ; R21 := R20; R20 := R20[0x71e9ac81]
	168	[9383]	CALL     	R20 2 1 ; R20(R21)
	169	[9385]	GETUPVAL 	R20 U7 ; R20 := U7
	170	[9385]	GETTABLE 	R20 R20 K34 ; R20 := R20[0xf6edf3bb]
	171	[9385]	CALL     	R20 1 1 ; R20()
	172	[9387]	RETURN   	R0 1 ; return 

function #141 <?:9389,9453> (268 instructions, 1072 bytes at 0000021137986380)
0 params, 18 slots, 5 upvalues, 0 locals, 47 constants, 0 functions
	1	[9390]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9390]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[9390]	GETTABLE 	R1 R1 K2 ; R1 := R1["BackgroundMovie"]
	4	[9390]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[9390]	TEST     	R0 1 ; if R0 then PC := 13
	6	[9390]	JMP      	13 ; PC := 13
	7	[9391]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[9391]	GETTABLE 	R0 R0 K2 ; R0 := R0["BackgroundMovie"]
	9	[9391]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	10	[9391]	LOADK    	R2 K4 ; R2 := "ShowBlockingMessage"
	11	[9391]	LOADK    	R3 K5 ; R3 := "0"
	12	[9391]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[9393]	LOADK    	R0 := 1.000000
	14	[9393]	GETGLOBAL	R1 K6 ; R1 := mPendingRandomizeInfo
	15	[9393]	GETTABLE 	R1 R1 K7 ; R1 := R1["Items"]
	16	[9393]	LEN      	R1 R1 ; R1 := # R1
	17	[9393]	LOADK    	R2 := 1.000000
	18	[9393]	FORPREP  	R0 39 ; R0 -= R2; PC := 39
	19	[9394]	GETGLOBAL	R4 K8 ; R4 := mSelected
	20	[9394]	GETGLOBAL	R5 K6 ; R5 := mPendingRandomizeInfo
	21	[9394]	GETTABLE 	R5 R5 K10 ; R5 := R5["Cosmetics"]
	22	[9394]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	23	[9394]	SETTABLE 	R4 K9 R5 ; R4["Cosmetic"] := R5
	24	[9395]	GETGLOBAL	R4 K8 ; R4 := mSelected
	25	[9395]	GETGLOBAL	R5 K6 ; R5 := mPendingRandomizeInfo
	26	[9395]	GETTABLE 	R5 R5 K7 ; R5 := R5["Items"]
	27	[9395]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	28	[9395]	SETTABLE 	R4 K11 R5 ; R4["Item"] := R5
	29	[9396]	GETUPVAL 	R4 U1 ; R4 := U1
	30	[9396]	GETTABLE 	R4 R4 K12 ; R4 := R4["SELECTING_SKINS"]
	31	[9396]	SETUPVAL 	R4 U0 ; U0 := R4
	32	[9397]	OP_LOADBOOL	R4 0 0 ; R4 := false
	33	[9397]	SETGLOBALHASH	R4 K13 ; mInputBlocked := R4
	34	[9398]	GETUPVAL 	R4 U2 ; R4 := U2
	35	[9398]	CALL     	R4 1 1 ; R4()
	36	[9399]	GETUPVAL 	R4 U1 ; R4 := U1
	37	[9399]	GETTABLE 	R4 R4 K14 ; R4 := R4["CUSTOMIZING_SKINS"]
	38	[9399]	SETUPVAL 	R4 U0 ; U0 := R4
	39	[9393]	FORLOOP  	R0 19 ; R0 += R2; if R0 <= R1 then begin PC := 19; R3 := R0 end
	40	[9402]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	41	[9402]	GETGLOBAL	R5 K8 ; R5 := mSelected
	42	[9402]	GETTABLE 	R5 R5 K15 ; R5 := R5["Element"]
	43	[9402]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[9402]	TEST     	R4 1 ; if R4 then PC := 81
	45	[9402]	JMP      	81 ; PC := 81
	46	[9403]	GETGLOBAL	R4 K8 ; R4 := mSelected
	47	[9403]	GETTABLE 	R4 R4 K15 ; R4 := R4["Element"]
	48	[9403]	GETTABLE 	R4 R4 K16 ; R4 := R4["LoadOutType"]
	49	[9403]	EQ       	0 R4 K18 ; if R4 ~= 1.000000 then PC := 61
	50	[9403]	JMP      	61 ; PC := 61
	51	[9403]	GETGLOBAL	R4 K8 ; R4 := mSelected
	52	[9403]	GETTABLE 	R4 R4 K15 ; R4 := R4["Element"]
	53	[9403]	GETTABLE 	R4 R4 K19 ; R4 := R4["LoadOutId"]
	54	[9403]	EQ       	0 R4 K20 ; if R4 ~= 0.000000 then PC := 61
	55	[9403]	JMP      	61 ; PC := 61
	56	[9403]	GETGLOBAL	R4 K21 ; R4 := 0x25d99d89
	57	[9403]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x3c6b0324]
	58	[9403]	CALL     	R4 2 2 ; R4 := R4(R5)
	59	[9404]	TEST     	R4 1 ; if R4 then PC := 83
	60	[9404]	JMP      	83 ; PC := 83
	61	[9404]	GETGLOBAL	R4 K8 ; R4 := mSelected
	62	[9404]	GETTABLE 	R4 R4 K15 ; R4 := R4["Element"]
	63	[9404]	GETTABLE 	R4 R4 K19 ; R4 := R4["LoadOutId"]
	64	[9404]	EQ       	0 R4 K23 ; if R4 ~= 5.000000 then PC := 81
	65	[9404]	JMP      	81 ; PC := 81
	66	[9404]	GETGLOBAL	R4 K8 ; R4 := mSelected
	67	[9404]	GETTABLE 	R4 R4 K15 ; R4 := R4["Element"]
	68	[9404]	GETTABLE 	R4 R4 K24 ; R4 := R4["Type"]
	69	[9404]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0xf2deaf69]
	70	[9404]	GETGLOBAL	R6 K26 ; R6 := 0xb9a9a904
	71	[9404]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	72	[9404]	TEST     	R4 1 ; if R4 then PC := 83
	73	[9404]	JMP      	83 ; PC := 83
	74	[9404]	GETGLOBAL	R4 K8 ; R4 := mSelected
	75	[9404]	GETTABLE 	R4 R4 K15 ; R4 := R4["Element"]
	76	[9404]	GETTABLE 	R4 R4 K24 ; R4 := R4["Type"]
	77	[9404]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0xf2deaf69]
	78	[9404]	GETGLOBAL	R6 K27 ; R6 := 0x01302fb0
	79	[9404]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	80	[9404]	JMP      	83 ; PC := 83
	81	[9404]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 82
	82	[9404]	OP_LOADBOOL	R4 1 0 ; R4 := true
	83	[9405]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	84	[9405]	GETGLOBAL	R6 K8 ; R6 := mSelected
	85	[9405]	GETTABLE 	R6 R6 K15 ; R6 := R6["Element"]
	86	[9405]	CALL     	R5 2 2 ; R5 := R5(R6)
	87	[9405]	TEST     	R5 1 ; if R5 then PC := 104
	88	[9405]	JMP      	104 ; PC := 104
	89	[9406]	GETGLOBAL	R5 K8 ; R5 := mSelected
	90	[9406]	GETTABLE 	R5 R5 K15 ; R5 := R5["Element"]
	91	[9406]	GETTABLE 	R5 R5 K16 ; R5 := R5["LoadOutType"]
	92	[9406]	EQ       	1 R5 K20 ; if R5 == 0.000000 then PC := 99
	93	[9406]	JMP      	99 ; PC := 99
	94	[9406]	GETGLOBAL	R5 K8 ; R5 := mSelected
	95	[9406]	GETTABLE 	R5 R5 K15 ; R5 := R5["Element"]
	96	[9406]	GETTABLE 	R5 R5 K16 ; R5 := R5["LoadOutType"]
	97	[9406]	EQ       	0 R5 K28 ; if R5 ~= 3.000000 then PC := 104
	98	[9406]	JMP      	104 ; PC := 104
	99	[9407]	GETGLOBAL	R5 K8 ; R5 := mSelected
	100	[9407]	GETTABLE 	R5 R5 K15 ; R5 := R5["Element"]
	101	[9407]	GETTABLE 	R5 R5 K19 ; R5 := R5["LoadOutId"]
	102	[9407]	EQ       	1 R5 K20 ; if R5 == 0.000000 then PC := 105
	103	[9407]	JMP      	105 ; PC := 105
	104	[9407]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 105
	105	[9407]	OP_LOADBOOL	R5 1 0 ; R5 := true
	106	[9408]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	107	[9408]	GETGLOBAL	R7 K8 ; R7 := mSelected
	108	[9408]	GETTABLE 	R7 R7 K15 ; R7 := R7["Element"]
	109	[9408]	CALL     	R6 2 2 ; R6 := R6(R7)
	110	[9408]	TEST     	R6 1 ; if R6 then PC := 134
	111	[9408]	JMP      	134 ; PC := 134
	112	[9408]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	113	[9408]	GETGLOBAL	R7 K8 ; R7 := mSelected
	114	[9408]	GETTABLE 	R7 R7 K15 ; R7 := R7["Element"]
	115	[9408]	GETTABLE 	R7 R7 K29 ; R7 := R7["EquippedItem"]
	116	[9408]	CALL     	R6 2 2 ; R6 := R6(R7)
	117	[9408]	TEST     	R6 1 ; if R6 then PC := 134
	118	[9408]	JMP      	134 ; PC := 134
	119	[9408]	GETGLOBAL	R6 K8 ; R6 := mSelected
	120	[9408]	GETTABLE 	R6 R6 K15 ; R6 := R6["Element"]
	121	[9408]	GETTABLE 	R6 R6 K29 ; R6 := R6["EquippedItem"]
	122	[9408]	GETTABLE 	R6 R6 K30 ; R6 := R6["mModularParts"]
	123	[9408]	LEN      	R6 R6 ; R6 := # R6
	124	[9408]	LT       	0 K20 R6 ; if 0.000000 >= R6 then PC := 134
	125	[9408]	JMP      	134 ; PC := 134
	126	[9408]	GETGLOBAL	R6 K8 ; R6 := mSelected
	127	[9408]	GETTABLE 	R6 R6 K15 ; R6 := R6["Element"]
	128	[9408]	GETTABLE 	R6 R6 K29 ; R6 := R6["EquippedItem"]
	129	[9408]	SELF     	R6 R6 K31 ; R7 := R6; R6 := R6[0xdbfbf6c0]
	130	[9408]	LOADK    	R8 := 3.000000
	131	[9408]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	132	[9408]	NOT      	R6 R6 ; R6 := not R6
	133	[9408]	JMP      	136 ; PC := 136
	134	[9408]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 135
	135	[9408]	OP_LOADBOOL	R6 1 0 ; R6 := true
	136	[9409]	TEST     	R6 0 ; if not R6 then PC := 144
	137	[9409]	JMP      	144 ; PC := 144
	138	[9409]	GETGLOBAL	R7 K8 ; R7 := mSelected
	139	[9409]	GETTABLE 	R7 R7 K15 ; R7 := R7["Element"]
	140	[9409]	GETTABLE 	R7 R7 K16 ; R7 := R7["LoadOutType"]
	141	[9409]	EQ       	0 R7 K32 ; if R7 ~= 6.000000 then PC := 144
	142	[9409]	JMP      	144 ; PC := 144
	143	[9410]	OP_LOADBOOL	R6 0 0 ; R6 := false
	144	[9413]	TEST     	R4 1 ; if R4 then PC := 159
	145	[9413]	JMP      	159 ; PC := 159
	146	[9413]	TEST     	R6 1 ; if R6 then PC := 159
	147	[9413]	JMP      	159 ; PC := 159
	148	[9414]	GETUPVAL 	R7 U3 ; R7 := U3
	149	[9414]	LOADK    	R8 := 0.000000
	150	[9414]	CALL     	R7 2 1 ; R7(R8)
	151	[9415]	GETUPVAL 	R7 U3 ; R7 := U3
	152	[9415]	LOADK    	R8 := 1.000000
	153	[9415]	CALL     	R7 2 1 ; R7(R8)
	154	[9416]	TEST     	R5 0 ; if not R5 then PC := 159
	155	[9416]	JMP      	159 ; PC := 159
	156	[9417]	GETUPVAL 	R7 U3 ; R7 := U3
	157	[9417]	LOADK    	R8 := 3.000000
	158	[9417]	CALL     	R7 2 1 ; R7(R8)
	159	[9420]	GETGLOBAL	R7 K6 ; R7 := mPendingRandomizeInfo
	160	[9420]	GETTABLE 	R7 R7 K33 ; R7 := R7["HasSigil"]
	161	[9420]	TEST     	R7 0 ; if not R7 then PC := 251
	162	[9420]	JMP      	251 ; PC := 251
	163	[9420]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	164	[9420]	GETGLOBAL	R8 K8 ; R8 := mSelected
	165	[9420]	GETTABLE 	R8 R8 K15 ; R8 := R8["Element"]
	166	[9420]	CALL     	R7 2 2 ; R7 := R7(R8)
	167	[9420]	TEST     	R7 1 ; if R7 then PC := 251
	168	[9420]	JMP      	251 ; PC := 251
	169	[9420]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	170	[9420]	GETGLOBAL	R8 K8 ; R8 := mSelected
	171	[9420]	GETTABLE 	R8 R8 K15 ; R8 := R8["Element"]
	172	[9420]	GETTABLE 	R8 R8 K34 ; R8 := R8["Customization"]
	173	[9420]	CALL     	R7 2 2 ; R7 := R7(R8)
	174	[9420]	TEST     	R7 1 ; if R7 then PC := 251
	175	[9420]	JMP      	251 ; PC := 251
	176	[9421]	GETGLOBAL	R7 K8 ; R7 := mSelected
	177	[9421]	GETTABLE 	R7 R7 K15 ; R7 := R7["Element"]
	178	[9421]	GETTABLE 	R7 R7 K34 ; R7 := R7["Customization"]
	179	[9421]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0x8e62760a]
	180	[9421]	LOADK    	R9 := 2.000000
	181	[9421]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	182	[9422]	SELF     	R8 R7 K36 ; R9 := R7; R8 := R7[0x5d10207d]
	183	[9422]	LOADK    	R10 := 1.000000
	184	[9422]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	185	[9423]	SELF     	R9 R7 K36 ; R10 := R7; R9 := R7[0x5d10207d]
	186	[9423]	LOADK    	R11 := 3.000000
	187	[9423]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	188	[9425]	GETUPVAL 	R10 U3 ; R10 := U3
	189	[9425]	LOADK    	R11 := 2.000000
	190	[9425]	CALL     	R10 2 1 ; R10(R11)
	191	[9427]	GETGLOBAL	R10 K8 ; R10 := mSelected
	192	[9427]	GETTABLE 	R10 R10 K15 ; R10 := R10["Element"]
	193	[9427]	GETTABLE 	R10 R10 K34 ; R10 := R10["Customization"]
	194	[9427]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0x8e62760a]
	195	[9427]	LOADK    	R12 := 2.000000
	196	[9427]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	197	[9428]	SELF     	R11 R10 K36 ; R12 := R10; R11 := R10[0x5d10207d]
	198	[9428]	LOADK    	R13 := 1.000000
	199	[9428]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	200	[9429]	SELF     	R12 R10 K36 ; R13 := R10; R12 := R10[0x5d10207d]
	201	[9429]	LOADK    	R14 := 3.000000
	202	[9429]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	203	[9430]	SELF     	R13 R10 K36 ; R14 := R10; R13 := R10[0x5d10207d]
	204	[9430]	LOADK    	R15 := 6.000000
	205	[9430]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	206	[9432]	GETTABLE 	R14 R8 K37 ; R14 := R8["red"]
	207	[9432]	SETTABLE 	R11 K37 R14 ; R11["red"] := R14
	208	[9433]	GETTABLE 	R14 R8 K38 ; R14 := R8["green"]
	209	[9433]	SETTABLE 	R11 K38 R14 ; R11["green"] := R14
	210	[9434]	GETGLOBAL	R14 K40 ; R14 := 0x5bced4c4
	211	[9434]	GETTABLE 	R14 R14 K41 ; R14 := R14[0x3630e649]
	212	[9434]	LOADK    	R15 := 0.000000
	213	[9434]	LOADK    	R16 := 255.000000
	214	[9434]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	215	[9434]	SETTABLE 	R11 K39 R14 ; R11["alpha"] := R14
	216	[9435]	GETTABLE 	R14 R9 K37 ; R14 := R9["red"]
	217	[9435]	SETTABLE 	R12 K37 R14 ; R12["red"] := R14
	218	[9436]	GETTABLE 	R14 R9 K38 ; R14 := R9["green"]
	219	[9436]	SETTABLE 	R12 K38 R14 ; R12["green"] := R14
	220	[9437]	GETGLOBAL	R14 K40 ; R14 := 0x5bced4c4
	221	[9437]	GETTABLE 	R14 R14 K41 ; R14 := R14[0x3630e649]
	222	[9437]	LOADK    	R15 := 0.000000
	223	[9437]	LOADK    	R16 := 255.000000
	224	[9437]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	225	[9437]	SETTABLE 	R12 K39 R14 ; R12["alpha"] := R14
	226	[9438]	GETGLOBAL	R14 K40 ; R14 := 0x5bced4c4
	227	[9438]	GETTABLE 	R14 R14 K41 ; R14 := R14[0x3630e649]
	228	[9438]	LOADK    	R15 := 0.000000
	229	[9438]	LOADK    	R16 := 255.000000
	230	[9438]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	231	[9438]	SETTABLE 	R13 K39 R14 ; R13["alpha"] := R14
	232	[9440]	SELF     	R14 R10 K42 ; R15 := R10; R14 := R10[0xa3927fe9]
	233	[9440]	LOADK    	R16 := 1.000000
	234	[9440]	MOVE     	R17 R11 ; R17 := R11
	235	[9440]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	236	[9441]	SELF     	R14 R10 K42 ; R15 := R10; R14 := R10[0xa3927fe9]
	237	[9441]	LOADK    	R16 := 3.000000
	238	[9441]	MOVE     	R17 R12 ; R17 := R12
	239	[9441]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	240	[9442]	SELF     	R14 R10 K42 ; R15 := R10; R14 := R10[0xa3927fe9]
	241	[9442]	LOADK    	R16 := 6.000000
	242	[9442]	MOVE     	R17 R13 ; R17 := R13
	243	[9442]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	244	[9444]	GETGLOBAL	R14 K8 ; R14 := mSelected
	245	[9444]	GETTABLE 	R14 R14 K15 ; R14 := R14["Element"]
	246	[9444]	GETTABLE 	R14 R14 K34 ; R14 := R14["Customization"]
	247	[9444]	SELF     	R14 R14 K43 ; R15 := R14; R14 := R14[0x199edf6e]
	248	[9444]	LOADK    	R16 := 2.000000
	249	[9444]	MOVE     	R17 R10 ; R17 := R10
	250	[9444]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	251	[9446]	TEST     	R6 1 ; if R6 then PC := 257
	252	[9446]	JMP      	257 ; PC := 257
	253	[9447]	GETUPVAL 	R14 U4 ; R14 := U4
	254	[9447]	NEWTABLE 	R15 0 1 ; R15 := {}
	255	[9447]	SETTABLE 	R15 K44 K20 ; R15["CopyColors"] := 0.000000
	256	[9447]	CALL     	R14 2 1 ; R14(R15)
	257	[9449]	GETGLOBAL	R14 K6 ; R14 := mPendingRandomizeInfo
	258	[9449]	NEWTABLE 	R15 0 0 ; R15 := {}
	259	[9449]	SETTABLE 	R14 K7 R15 ; R14["Items"] := R15
	260	[9450]	GETGLOBAL	R14 K6 ; R14 := mPendingRandomizeInfo
	261	[9450]	NEWTABLE 	R15 0 0 ; R15 := {}
	262	[9450]	SETTABLE 	R14 K10 R15 ; R14["Cosmetics"] := R15
	263	[9451]	GETGLOBAL	R14 K6 ; R14 := mPendingRandomizeInfo
	264	[9451]	NEWTABLE 	R15 0 0 ; R15 := {}
	265	[9451]	SETTABLE 	R14 K45 R15 ; R14["SlotInfo"] := R15
	266	[9452]	GETGLOBAL	R14 K6 ; R14 := mPendingRandomizeInfo
	267	[9452]	SETTABLE 	R14 K33 K46 ; R14["HasSigil"] := nil
	268	[9453]	RETURN   	R0 1 ; return 

function #142 <?:9455,9515> (180 instructions, 720 bytes at 0000021137986FD0)
0 params, 20 slots, 2 upvalues, 0 locals, 42 constants, 0 functions
	1	[9456]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9456]	GETGLOBAL	R1 K1 ; R1 := mChildMovie
	3	[9456]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9456]	TEST     	R0 1 ; if R0 then PC := 19
	5	[9456]	JMP      	19 ; PC := 19
	6	[9457]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[9457]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[9457]	GETTABLE 	R1 R1 K3 ; R1 := R1["BackgroundMovie"]
	9	[9457]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[9457]	TEST     	R0 1 ; if R0 then PC := 18
	11	[9457]	JMP      	18 ; PC := 18
	12	[9458]	GETGLOBAL	R0 K2 ; R0 := _T
	13	[9458]	GETTABLE 	R0 R0 K3 ; R0 := R0["BackgroundMovie"]
	14	[9458]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xe4162eed]
	15	[9458]	LOADK    	R2 K5 ; R2 := "ShowBlockingMessage"
	16	[9458]	LOADK    	R3 K6 ; R3 := "0"
	17	[9458]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	18	[9460]	RETURN   	R0 1 ; return 
	19	[9463]	GETGLOBAL	R0 K7 ; R0 := mPendingRandomizeInfo
	20	[9463]	SETTABLE 	R0 K8 K9 ; R0["HasSigil"] := false
	21	[9464]	NEWTABLE 	R0 0 0 ; R0 := {}
	22	[9465]	GETGLOBAL	R1 K7 ; R1 := mPendingRandomizeInfo
	23	[9465]	NEWTABLE 	R2 0 0 ; R2 := {}
	24	[9465]	SETTABLE 	R1 K10 R2 ; R1["Items"] := R2
	25	[9466]	GETGLOBAL	R1 K7 ; R1 := mPendingRandomizeInfo
	26	[9466]	NEWTABLE 	R2 0 0 ; R2 := {}
	27	[9466]	SETTABLE 	R1 K11 R2 ; R1[0x68d708a7] := R2
	28	[9467]	GETGLOBAL	R1 K7 ; R1 := mPendingRandomizeInfo
	29	[9467]	NEWTABLE 	R2 0 0 ; R2 := {}
	30	[9467]	SETTABLE 	R1 K12 R2 ; R1["Cosmetics"] := R2
	31	[9468]	GETGLOBAL	R1 K13 ; R1 := 0xc8802016
	32	[9468]	GETGLOBAL	R2 K14 ; R2 := mSortedCosmetics
	33	[9468]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	34	[9468]	JMP      	157 ; PC := 157
	35	[9469]	GETGLOBAL	R6 K15 ; R6 := 0xce225efa
	36	[9469]	LOADK    	R7 := 0.000000
	37	[9469]	CALL     	R6 2 1 ; R6(R7)
	38	[9471]	GETTABLE 	R6 R5 K10 ; R6 := R5["Items"]
	39	[9471]	LEN      	R6 R6 ; R6 := # R6
	40	[9471]	LOADK    	R7 := 1.000000
	41	[9471]	LOADK    	R8 := -1.000000
	42	[9471]	FORPREP  	R6 89 ; R6 -= R8; PC := 89
	43	[9472]	GETTABLE 	R10 R5 K10 ; R10 := R5["Items"]
	44	[9472]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	45	[9472]	GETTABLE 	R10 R10 K16 ; R10 := R10["mPurchased"]
	46	[9472]	TEST     	R10 1 ; if R10 then PC := 54
	47	[9472]	JMP      	54 ; PC := 54
	48	[9473]	GETGLOBAL	R10 K17 ; R10 := 0x33bdd652
	49	[9473]	GETTABLE 	R10 R10 K18 ; R10 := R10[0x9c1f3b5a]
	50	[9473]	GETTABLE 	R11 R5 K10 ; R11 := R5["Items"]
	51	[9473]	MOVE     	R12 R9 ; R12 := R9
	52	[9473]	CALL     	R10 3 1 ; R10(R11,R12)
	53	[9473]	JMP      	89 ; PC := 89
	54	[9474]	GETTABLE 	R10 R5 K19 ; R10 := R5["Slot"]
	55	[9474]	EQ       	1 R10 K21 ; if R10 == 12.000000 then PC := 60
	56	[9474]	JMP      	60 ; PC := 60
	57	[9474]	GETTABLE 	R10 R5 K19 ; R10 := R5["Slot"]
	58	[9474]	EQ       	0 R10 K22 ; if R10 ~= 13.000000 then PC := 89
	59	[9474]	JMP      	89 ; PC := 89
	60	[9474]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	61	[9474]	GETTABLE 	R11 R5 K10 ; R11 := R5["Items"]
	62	[9474]	GETTABLE 	R11 R11 R9 ; R11 := R11[R9]
	63	[9474]	GETTABLE 	R11 R11 K23 ; R11 := R11["Type"]
	64	[9474]	CALL     	R10 2 2 ; R10 := R10(R11)
	65	[9474]	TEST     	R10 1 ; if R10 then PC := 89
	66	[9474]	JMP      	89 ; PC := 89
	67	[9476]	GETGLOBAL	R10 K24 ; R10 := 0xb009bbc6
	68	[9476]	GETTABLE 	R11 R5 K10 ; R11 := R5["Items"]
	69	[9476]	GETTABLE 	R11 R11 R9 ; R11 := R11[R9]
	70	[9476]	GETTABLE 	R11 R11 K23 ; R11 := R11["Type"]
	71	[9476]	CALL     	R10 2 2 ; R10 := R10(R11)
	72	[9477]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	73	[9477]	MOVE     	R12 R10 ; R12 := R10
	74	[9477]	CALL     	R11 2 2 ; R11 := R11(R12)
	75	[9477]	TEST     	R11 1 ; if R11 then PC := 89
	76	[9477]	JMP      	89 ; PC := 89
	77	[9478]	SELF     	R11 R10 K25 ; R12 := R10; R11 := R10[0x07408254]
	78	[9478]	CALL     	R11 2 2 ; R11 := R11(R12)
	79	[9479]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	80	[9479]	MOVE     	R13 R11 ; R13 := R11
	81	[9479]	CALL     	R12 2 2 ; R12 := R12(R13)
	82	[9479]	TEST     	R12 1 ; if R12 then PC := 89
	83	[9479]	JMP      	89 ; PC := 89
	84	[9480]	GETGLOBAL	R12 K17 ; R12 := 0x33bdd652
	85	[9480]	GETTABLE 	R12 R12 K18 ; R12 := R12[0x9c1f3b5a]
	86	[9480]	GETTABLE 	R13 R5 K10 ; R13 := R5["Items"]
	87	[9480]	MOVE     	R14 R9 ; R14 := R9
	88	[9480]	CALL     	R12 3 1 ; R12(R13,R14)
	89	[9471]	FORLOOP  	R6 43 ; R6 += R8; if R6 <= R7 then begin PC := 43; R9 := R6 end
	90	[9486]	OP_LOADBOOL	R12 1 0 ; R12 := true
	91	[9487]	GETTABLE 	R13 R5 K19 ; R13 := R5["Slot"]
	92	[9487]	EQ       	1 R13 K21 ; if R13 == 12.000000 then PC := 97
	93	[9487]	JMP      	97 ; PC := 97
	94	[9487]	GETTABLE 	R13 R5 K19 ; R13 := R5["Slot"]
	95	[9487]	EQ       	0 R13 K22 ; if R13 ~= 13.000000 then PC := 133
	96	[9487]	JMP      	133 ; PC := 133
	97	[9488]	GETGLOBAL	R13 K7 ; R13 := mPendingRandomizeInfo
	98	[9488]	SETTABLE 	R13 K8 K26 ; R13["HasSigil"] := true
	99	[9490]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	100	[9490]	GETGLOBAL	R14 K27 ; R14 := mSelected
	101	[9490]	GETTABLE 	R14 R14 K28 ; R14 := R14["Element"]
	102	[9490]	CALL     	R13 2 2 ; R13 := R13(R14)
	103	[9490]	TEST     	R13 1 ; if R13 then PC := 133
	104	[9490]	JMP      	133 ; PC := 133
	105	[9490]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	106	[9490]	GETGLOBAL	R14 K27 ; R14 := mSelected
	107	[9490]	GETTABLE 	R14 R14 K28 ; R14 := R14["Element"]
	108	[9490]	GETTABLE 	R14 R14 K29 ; R14 := R14["Customization"]
	109	[9490]	CALL     	R13 2 2 ; R13 := R13(R14)
	110	[9490]	TEST     	R13 1 ; if R13 then PC := 133
	111	[9490]	JMP      	133 ; PC := 133
	112	[9491]	GETGLOBAL	R13 K24 ; R13 := 0xb009bbc6
	113	[9491]	GETGLOBAL	R14 K27 ; R14 := mSelected
	114	[9491]	GETTABLE 	R14 R14 K28 ; R14 := R14["Element"]
	115	[9491]	GETTABLE 	R14 R14 K29 ; R14 := R14["Customization"]
	116	[9491]	SELF     	R14 R14 K30 ; R15 := R14; R14 := R14[0x2540510f]
	117	[9491]	GETTABLE 	R16 R5 K19 ; R16 := R5["Slot"]
	118	[9491]	CALL     	R14 3 0 ; R14,... := R14(R15,R16)
	119	[9491]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	120	[9492]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	121	[9492]	MOVE     	R15 R13 ; R15 := R13
	122	[9492]	CALL     	R14 2 2 ; R14 := R14(R15)
	123	[9492]	TEST     	R14 1 ; if R14 then PC := 133
	124	[9492]	JMP      	133 ; PC := 133
	125	[9493]	SELF     	R14 R13 K25 ; R15 := R13; R14 := R13[0x07408254]
	126	[9493]	CALL     	R14 2 2 ; R14 := R14(R15)
	127	[9494]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	128	[9494]	MOVE     	R16 R14 ; R16 := R14
	129	[9494]	CALL     	R15 2 2 ; R15 := R15(R16)
	130	[9494]	TEST     	R15 1 ; if R15 then PC := 133
	131	[9494]	JMP      	133 ; PC := 133
	132	[9495]	OP_LOADBOOL	R12 0 0 ; R12 := false
	133	[9500]	TEST     	R12 0 ; if not R12 then PC := 157
	134	[9500]	JMP      	157 ; PC := 157
	135	[9500]	GETTABLE 	R15 R5 K10 ; R15 := R5["Items"]
	136	[9500]	LEN      	R15 R15 ; R15 := # R15
	137	[9500]	LT       	0 K31 R15 ; if 0.000000 >= R15 then PC := 157
	138	[9500]	JMP      	157 ; PC := 157
	139	[9501]	GETGLOBAL	R15 K32 ; R15 := 0x5bced4c4
	140	[9501]	GETTABLE 	R15 R15 K33 ; R15 := R15[0x3630e649]
	141	[9501]	LOADK    	R16 := 1.000000
	142	[9501]	GETTABLE 	R17 R5 K10 ; R17 := R5["Items"]
	143	[9501]	LEN      	R17 R17 ; R17 := # R17
	144	[9501]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	145	[9502]	GETGLOBAL	R16 K7 ; R16 := mPendingRandomizeInfo
	146	[9502]	GETTABLE 	R16 R16 K12 ; R16 := R16["Cosmetics"]
	147	[9502]	SETTABLE 	R16 R4 R5 ; R16[R4] := R5
	148	[9503]	GETGLOBAL	R16 K7 ; R16 := mPendingRandomizeInfo
	149	[9503]	GETTABLE 	R16 R16 K10 ; R16 := R16["Items"]
	150	[9503]	GETTABLE 	R17 R5 K10 ; R17 := R5["Items"]
	151	[9503]	GETTABLE 	R17 R17 R15 ; R17 := R17[R15]
	152	[9503]	SETTABLE 	R16 R4 R17 ; R16[R4] := R17
	153	[9504]	GETTABLE 	R16 R5 K10 ; R16 := R5["Items"]
	154	[9504]	GETTABLE 	R16 R16 R15 ; R16 := R16[R15]
	155	[9504]	GETTABLE 	R16 R16 K34 ; R16 := R16["FullName"]
	156	[9504]	SETTABLE 	R0 R4 R16 ; R0[R4] := R16
	157	[9468]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 35; R3 := R4 end
	158	[9505]	JMP      	35 ; PC := 35
	159	[9508]	GETGLOBAL	R16 K35 ; R16 := mLoaders
	160	[9508]	GETTABLE 	R16 R16 K36 ; R16 := R16["mCosmeticsLoader"]
	161	[9508]	SELF     	R16 R16 K37 ; R17 := R16; R16 := R16[0x5a7aac67]
	162	[9508]	CALL     	R16 2 1 ; R16(R17)
	163	[9509]	LEN      	R16 R0 ; R16 := # R0
	164	[9509]	LT       	0 K31 R16 ; if 0.000000 >= R16 then PC := 173
	165	[9509]	JMP      	173 ; PC := 173
	166	[9510]	GETGLOBAL	R16 K35 ; R16 := mLoaders
	167	[9510]	GETTABLE 	R16 R16 K36 ; R16 := R16["mCosmeticsLoader"]
	168	[9510]	SELF     	R16 R16 K38 ; R17 := R16; R16 := R16[0x2f86cf1e]
	169	[9510]	MOVE     	R18 R0 ; R18 := R0
	170	[9510]	OP_LOADBOOL	R19 1 0 ; R19 := true
	171	[9510]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	172	[9510]	JMP      	175 ; PC := 175
	173	[9512]	GETUPVAL 	R16 U0 ; R16 := U0
	174	[9512]	CALL     	R16 1 1 ; R16()
	175	[9514]	GETUPVAL 	R16 U1 ; R16 := U1
	176	[9514]	GETTABLE 	R16 R16 K39 ; R16 := R16[0x659d451f]
	177	[9514]	GETGLOBAL	R17 K40 ; R17 := 0x0032441c
	178	[9514]	GETTABLE 	R17 R17 K41 ; R17 := R17["UISound_SweetenerTwo"]
	179	[9514]	CALL     	R16 2 1 ; R16(R17)
	180	[9515]	RETURN   	R0 1 ; return 

function #143 <?:9517,9528> (25 instructions, 100 bytes at 00000211379878D0)
0 params, 4 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[9518]	GETGLOBAL	R0 K0 ; R0 := mSeenRandomizeConfirm
	2	[9518]	TEST     	R0 1 ; if R0 then PC := 10
	3	[9518]	JMP      	10 ; PC := 10
	4	[9519]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[9519]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xdedfded7]
	6	[9519]	LOADK    	R1 K2 ; R1 := "/Lotus/Language/Loadout/RandomizeConfirm"
	7	[9519]	LOADK    	R2 K3 ; R2 := "OnRandomizeConfirm"
	8	[9519]	CALL     	R0 3 1 ; R0(R1,R2)
	9	[9521]	RETURN   	R0 1 ; return 
	10	[9524]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	11	[9524]	GETGLOBAL	R1 K5 ; R1 := _T
	12	[9524]	GETTABLE 	R1 R1 K6 ; R1 := R1["BackgroundMovie"]
	13	[9524]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[9524]	TEST     	R0 1 ; if R0 then PC := 25
	15	[9524]	JMP      	25 ; PC := 25
	16	[9525]	GETGLOBAL	R0 K5 ; R0 := _T
	17	[9525]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[9525]	SETTABLE 	R0 K7 R1 ; R0["DialogOpenCallback"] := R1
	19	[9526]	GETGLOBAL	R0 K5 ; R0 := _T
	20	[9526]	GETTABLE 	R0 R0 K6 ; R0 := R0["BackgroundMovie"]
	21	[9526]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xe4162eed]
	22	[9526]	LOADK    	R2 K9 ; R2 := "ShowBlockingMessage"
	23	[9526]	LOADK    	R3 K10 ; R3 := "2"
	24	[9526]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	25	[9528]	RETURN   	R0 1 ; return 

function #144 <?:9530,9532> (3 instructions, 12 bytes at 0000021137987B20)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[9531]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[9531]	CALL     	R0 1 1 ; R0()
	3	[9532]	RETURN   	R0 1 ; return 

function #145 <?:9534,9540> (11 instructions, 44 bytes at 0000021137987BF0)
1 param, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[9535]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[9535]	MOVE     	R2 R0 ; R2 := R0
	3	[9535]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9535]	MOVE     	R0 R1 ; R0 := R1
	5	[9536]	EQ       	0 R0 K2 ; if R0 ~= 4.000000 then PC := 11
	6	[9536]	JMP      	11 ; PC := 11
	7	[9537]	OP_LOADBOOL	R1 1 0 ; R1 := true
	8	[9537]	SETGLOBALHASH	R1 K3 ; mSeenRandomizeConfirm := R1
	9	[9538]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[9538]	CALL     	R1 1 1 ; R1()
	11	[9540]	RETURN   	R0 1 ; return 

function #146 <?:9542,9639> (296 instructions, 1184 bytes at 0000021137987D50)
0 params, 37 slots, 8 upvalues, 0 locals, 53 constants, 0 functions
	1	[9543]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9543]	GETGLOBAL	R1 K1 ; R1 := mInventory
	3	[9543]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9543]	TEST     	R0 1 ; if R0 then PC := 17
	5	[9543]	JMP      	17 ; PC := 17
	6	[9543]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[9543]	GETGLOBAL	R1 K2 ; R1 := mCurrentLoadout
	8	[9543]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[9543]	TEST     	R0 1 ; if R0 then PC := 17
	10	[9543]	JMP      	17 ; PC := 17
	11	[9543]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	12	[9543]	GETGLOBAL	R1 K3 ; R1 := mSelected
	13	[9543]	GETTABLE 	R1 R1 K4 ; R1 := R1["Element"]
	14	[9543]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[9543]	TEST     	R0 0 ; if not R0 then PC := 18
	16	[9543]	JMP      	18 ; PC := 18
	17	[9544]	RETURN   	R0 1 ; return 
	18	[9547]	LOADK    	R0 := 0.000000
	19	[9548]	GETUPVAL 	R1 U0 ; R1 := U0
	20	[9548]	GETTABLE 	R1 R1 K6 ; R1 := R1["Current"]
	21	[9548]	EQ       	0 R1 K7 ; if R1 ~= 2.000000 then PC := 25
	22	[9548]	JMP      	25 ; PC := 25
	23	[9549]	LOADK    	R0 := 3.000000
	24	[9549]	JMP      	36 ; PC := 36
	25	[9550]	GETGLOBAL	R1 K3 ; R1 := mSelected
	26	[9550]	GETTABLE 	R1 R1 K4 ; R1 := R1["Element"]
	27	[9550]	GETTABLE 	R1 R1 K8 ; R1 := R1["LoadOutType"]
	28	[9550]	EQ       	0 R1 K9 ; if R1 ~= 8.000000 then PC := 36
	29	[9550]	JMP      	36 ; PC := 36
	30	[9550]	GETGLOBAL	R1 K3 ; R1 := mSelected
	31	[9550]	GETTABLE 	R1 R1 K4 ; R1 := R1["Element"]
	32	[9550]	GETTABLE 	R1 R1 K10 ; R1 := R1["LoadOutId"]
	33	[9550]	EQ       	1 R1 K11 ; if R1 == 0.000000 then PC := 36
	34	[9550]	JMP      	36 ; PC := 36
	35	[9551]	LOADK    	R0 := 8.000000
	36	[9554]	LOADK    	R1 := 0.000000
	37	[9555]	GETGLOBAL	R2 K12 ; R2 := _T
	38	[9555]	GETTABLE 	R2 R2 K13 ; R2 := R2["mSpecialSuitMode"]
	39	[9555]	TEST     	R2 0 ; if not R2 then PC := 47
	40	[9555]	JMP      	47 ; PC := 47
	41	[9555]	GETGLOBAL	R2 K3 ; R2 := mSelected
	42	[9555]	GETTABLE 	R2 R2 K4 ; R2 := R2["Element"]
	43	[9555]	GETTABLE 	R2 R2 K10 ; R2 := R2["LoadOutId"]
	44	[9555]	EQ       	0 R2 K14 ; if R2 ~= 6.000000 then PC := 47
	45	[9555]	JMP      	47 ; PC := 47
	46	[9556]	LOADK    	R1 := 5.000000
	47	[9559]	GETGLOBAL	R2 K2 ; R2 := mCurrentLoadout
	48	[9559]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	49	[9559]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x2abbe722]
	50	[9559]	MOVE     	R4 R1 ; R4 := R1
	51	[9559]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	52	[9560]	GETGLOBAL	R3 K3 ; R3 := mSelected
	53	[9560]	GETTABLE 	R3 R3 K4 ; R3 := R3["Element"]
	54	[9560]	GETTABLE 	R3 R3 K16 ; R3 := R3["Customization"]
	55	[9562]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	56	[9562]	MOVE     	R5 R3 ; R5 := R3
	57	[9562]	CALL     	R4 2 2 ; R4 := R4(R5)
	58	[9562]	TEST     	R4 1 ; if R4 then PC := 65
	59	[9562]	JMP      	65 ; PC := 65
	60	[9562]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	61	[9562]	MOVE     	R5 R2 ; R5 := R2
	62	[9562]	CALL     	R4 2 2 ; R4 := R4(R5)
	63	[9562]	TEST     	R4 0 ; if not R4 then PC := 66
	64	[9562]	JMP      	66 ; PC := 66
	65	[9563]	RETURN   	R0 1 ; return 
	66	[9567]	GETGLOBAL	R4 K1 ; R4 := mInventory
	67	[9567]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0xc70965fe]
	68	[9567]	GETUPVAL 	R6 U1 ; R6 := U1
	69	[9567]	GETTABLE 	R6 R6 K18 ; R6 := R6[0x06d055f9]
	70	[9567]	EQ       	1 R0 K19 ; if R0 == 3.000000 then PC := 73
	71	[9567]	JMP      	73 ; PC := 73
	72	[9567]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 73
	73	[9567]	OP_LOADBOOL	R7 1 0 ; R7 := true
	74	[9567]	LOADK    	R8 := 0.000000
	75	[9567]	MOVE     	R9 R0 ; R9 := R0
	76	[9567]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	77	[9567]	MOVE     	R7 R1 ; R7 := R1
	78	[9567]	GETTABLE 	R8 R2 K20 ; R8 := R2["mItemId"]
	79	[9567]	GETTABLE 	R8 R8 K21 ; R8 := R8["mId"]
	80	[9567]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	81	[9568]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	82	[9568]	MOVE     	R6 R4 ; R6 := R4
	83	[9568]	CALL     	R5 2 2 ; R5 := R5(R6)
	84	[9568]	TEST     	R5 0 ; if not R5 then PC := 87
	85	[9568]	JMP      	87 ; PC := 87
	86	[9569]	RETURN   	R0 1 ; return 
	87	[9572]	SELF     	R5 R4 K22 ; R6 := R4; R5 := R4[0x68d708a7]
	88	[9572]	GETTABLE 	R7 R2 K23 ; R7 := R2["mCustSlot"]
	89	[9572]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	90	[9573]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	91	[9573]	MOVE     	R7 R5 ; R7 := R5
	92	[9573]	CALL     	R6 2 2 ; R6 := R6(R7)
	93	[9573]	TEST     	R6 0 ; if not R6 then PC := 96
	94	[9573]	JMP      	96 ; PC := 96
	95	[9574]	RETURN   	R0 1 ; return 
	96	[9577]	GETUPVAL 	R6 U2 ; R6 := U2
	97	[9577]	MOVE     	R7 R0 ; R7 := R0
	98	[9577]	MOVE     	R8 R1 ; R8 := R1
	99	[9577]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	100	[9578]	SELF     	R7 R5 K24 ; R8 := R5; R7 := R5[0x8e62760a]
	101	[9578]	LOADK    	R9 := 0.000000
	102	[9578]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	103	[9579]	SELF     	R8 R3 K24 ; R9 := R3; R8 := R3[0x8e62760a]
	104	[9579]	LOADK    	R10 := 0.000000
	105	[9579]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	106	[9580]	GETUPVAL 	R9 U3 ; R9 := U3
	107	[9580]	LOADK    	R10 := 0.000000
	108	[9580]	MOVE     	R11 R1 ; R11 := R1
	109	[9580]	CALL     	R9 3 3 ; R9,R10 := R9(R10,R11)
	110	[9581]	GETUPVAL 	R11 U1 ; R11 := U1
	111	[9581]	GETTABLE 	R11 R11 K18 ; R11 := R11[0x06d055f9]
	112	[9581]	LEN      	R12 R9 ; R12 := # R9
	113	[9581]	LT       	1 K11 R12 ; if 0.000000 < R12 then PC := 116
	114	[9581]	JMP      	116 ; PC := 116
	115	[9581]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 116
	116	[9581]	OP_LOADBOOL	R12 1 0 ; R12 := true
	117	[9581]	LEN      	R13 R9 ; R13 := # R9
	118	[9581]	GETTABLE 	R13 R9 R13 ; R13 := R9[R13]
	119	[9581]	LOADNIL  	R14 R14 ; R14 := nil
	120	[9581]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	121	[9582]	GETUPVAL 	R12 U0 ; R12 := U0
	122	[9582]	GETTABLE 	R12 R12 K6 ; R12 := R12["Current"]
	123	[9582]	EQ       	0 R12 K19 ; if R12 ~= 3.000000 then PC := 148
	124	[9582]	JMP      	148 ; PC := 148
	125	[9582]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	126	[9582]	MOVE     	R13 R11 ; R13 := R11
	127	[9582]	CALL     	R12 2 2 ; R12 := R12(R13)
	128	[9582]	TEST     	R12 1 ; if R12 then PC := 148
	129	[9582]	JMP      	148 ; PC := 148
	130	[9585]	SELF     	R12 R11 K25 ; R13 := R11; R12 := R11[0x905bb2bd]
	131	[9585]	CALL     	R12 2 2 ; R12 := R12(R13)
	132	[9586]	GETGLOBAL	R13 K26 ; R13 := 0x7ed0a956
	133	[9586]	LOADK    	R14 K27 ; R14 := "/Lotus/Types/Game/FlightJetPack"
	134	[9586]	CALL     	R13 2 2 ; R13 := R13(R14)
	135	[9587]	GETGLOBAL	R14 K28 ; R14 := 0xcfc01047
	136	[9587]	MOVE     	R15 R12 ; R15 := R12
	137	[9587]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	138	[9587]	JMP      	146 ; PC := 146
	139	[9588]	SELF     	R19 R18 K29 ; R20 := R18; R19 := R18[0xf2deaf69]
	140	[9588]	MOVE     	R21 R13 ; R21 := R13
	141	[9588]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	142	[9588]	TEST     	R19 0 ; if not R19 then PC := 146
	143	[9588]	JMP      	146 ; PC := 146
	144	[9589]	MOVE     	R11 R18 ; R11 := R18
	145	[9591]	JMP      	148 ; PC := 148
	146	[9587]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 139; R16 := R17 end
	147	[9592]	JMP      	139 ; PC := 139
	148	[9596]	LOADNIL  	R19 R19 ; R19 := nil
	149	[9597]	GETGLOBAL	R20 K3 ; R20 := mSelected
	150	[9597]	GETTABLE 	R20 R20 K4 ; R20 := R20["Element"]
	151	[9597]	GETTABLE 	R20 R20 K10 ; R20 := R20["LoadOutId"]
	152	[9597]	GETGLOBAL	R21 K5 ; R21 := 0x6c97a788
	153	[9597]	GETTABLE 	R21 R21 K30 ; R21 := R21["NUM_NORMAL_LOADOUT_SLOTS"]
	154	[9597]	LE       	0 R21 R20 ; if R21 > R20 then PC := 161
	155	[9597]	JMP      	161 ; PC := 161
	156	[9598]	GETUPVAL 	R20 U4 ; R20 := U4
	157	[9598]	GETGLOBAL	R21 K3 ; R21 := mSelected
	158	[9598]	GETTABLE 	R21 R21 K4 ; R21 := R21["Element"]
	159	[9598]	CALL     	R20 2 2 ; R20 := R20(R21)
	160	[9598]	MOVE     	R19 R20 ; R19 := R20
	161	[9601]	LOADK    	R20 := 0.000000
	162	[9601]	LOADK    	R21 := 7.000000
	163	[9601]	LOADK    	R22 := 1.000000
	164	[9601]	FORPREP  	R20 220 ; R20 -= R22; PC := 220
	165	[9603]	EQ       	1 R19 K31 ; if R19 == nil then PC := 170
	166	[9603]	JMP      	170 ; PC := 170
	167	[9603]	GETTABLE 	R24 R19 R23 ; R24 := R19[R23]
	168	[9603]	TEST     	R24 0 ; if not R24 then PC := 220
	169	[9603]	JMP      	220 ; PC := 220
	170	[9604]	EQ       	0 R23 K32 ; if R23 ~= 7.000000 then PC := 178
	171	[9604]	JMP      	178 ; PC := 178
	172	[9604]	GETUPVAL 	R24 U5 ; R24 := U5
	173	[9604]	GETGLOBAL	R25 K3 ; R25 := mSelected
	174	[9604]	GETTABLE 	R25 R25 K4 ; R25 := R25["Element"]
	175	[9604]	CALL     	R24 2 2 ; R24 := R24(R25)
	176	[9604]	TEST     	R24 0 ; if not R24 then PC := 220
	177	[9604]	JMP      	220 ; PC := 220
	178	[9606]	LOADNIL  	R24 R24 ; R24 := nil
	179	[9607]	OP_LOADBOOL	R25 1 0 ; R25 := true
	180	[9608]	SELF     	R26 R7 K33 ; R27 := R7; R26 := R7[0x697019d0]
	181	[9608]	MOVE     	R28 R23 ; R28 := R23
	182	[9608]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	183	[9608]	TEST     	R26 0 ; if not R26 then PC := 190
	184	[9608]	JMP      	190 ; PC := 190
	185	[9609]	SELF     	R26 R7 K34 ; R27 := R7; R26 := R7[0x5d10207d]
	186	[9609]	MOVE     	R28 R23 ; R28 := R23
	187	[9609]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	188	[9609]	MOVE     	R24 R26 ; R24 := R26
	189	[9609]	JMP      	212 ; PC := 212
	190	[9611]	SELF     	R26 R5 K35 ; R27 := R5; R26 := R5[0x6199aec6]
	191	[9611]	MOVE     	R28 R23 ; R28 := R23
	192	[9611]	MOVE     	R29 R11 ; R29 := R11
	193	[9611]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	194	[9611]	MOVE     	R24 R26 ; R24 := R26
	195	[9612]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	196	[9612]	MOVE     	R27 R6 ; R27 := R6
	197	[9612]	CALL     	R26 2 2 ; R26 := R26(R27)
	198	[9612]	TEST     	R26 1 ; if R26 then PC := 212
	199	[9612]	JMP      	212 ; PC := 212
	200	[9612]	EQ       	1 R23 K14 ; if R23 == 6.000000 then PC := 204
	201	[9612]	JMP      	204 ; PC := 204
	202	[9612]	EQ       	0 R23 K32 ; if R23 ~= 7.000000 then PC := 212
	203	[9612]	JMP      	212 ; PC := 212
	204	[9613]	SELF     	R26 R6 K36 ; R27 := R6; R26 := R6[0xa3ef5d65]
	205	[9613]	MOVE     	R28 R24 ; R28 := R24
	206	[9613]	EQ       	1 R23 K32 ; if R23 == 7.000000 then PC := 209
	207	[9613]	JMP      	209 ; PC := 209
	208	[9613]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 209
	209	[9613]	OP_LOADBOOL	R29 1 0 ; R29 := true
	210	[9613]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	211	[9613]	MOVE     	R25 R26 ; R25 := R26
	212	[9616]	SELF     	R26 R8 K37 ; R27 := R8; R26 := R8[0xa3927fe9]
	213	[9616]	MOVE     	R28 R23 ; R28 := R23
	214	[9616]	MOVE     	R29 R24 ; R29 := R24
	215	[9616]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	216	[9617]	SELF     	R26 R8 K38 ; R27 := R8; R26 := R8[0xfc5d7158]
	217	[9617]	MOVE     	R28 R23 ; R28 := R23
	218	[9617]	MOVE     	R29 R25 ; R29 := R25
	219	[9617]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	220	[9601]	FORLOOP  	R20 165 ; R20 += R22; if R20 <= R21 then begin PC := 165; R23 := R20 end
	221	[9621]	GETGLOBAL	R26 K3 ; R26 := mSelected
	222	[9621]	GETTABLE 	R26 R26 K4 ; R26 := R26["Element"]
	223	[9621]	GETTABLE 	R26 R26 K16 ; R26 := R26["Customization"]
	224	[9621]	SELF     	R26 R26 K39 ; R27 := R26; R26 := R26[0x199edf6e]
	225	[9621]	LOADK    	R28 := 0.000000
	226	[9621]	MOVE     	R29 R8 ; R29 := R8
	227	[9621]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	228	[9622]	GETGLOBAL	R26 K3 ; R26 := mSelected
	229	[9622]	GETTABLE 	R26 R26 K4 ; R26 := R26["Element"]
	230	[9622]	GETTABLE 	R26 R26 K40 ; R26 := R26["EquippedItem"]
	231	[9622]	SELF     	R26 R26 K41 ; R27 := R26; R26 := R26[0xaa041663]
	232	[9622]	GETGLOBAL	R28 K3 ; R28 := mSelected
	233	[9622]	GETTABLE 	R28 R28 K4 ; R28 := R28["Element"]
	234	[9622]	GETTABLE 	R28 R28 K16 ; R28 := R28["Customization"]
	235	[9622]	GETGLOBAL	R29 K3 ; R29 := mSelected
	236	[9622]	GETTABLE 	R29 R29 K4 ; R29 := R29["Element"]
	237	[9622]	GETTABLE 	R29 R29 K23 ; R29 := R29["mCustSlot"]
	238	[9622]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	239	[9623]	GETGLOBAL	R26 K1 ; R26 := mInventory
	240	[9623]	SELF     	R26 R26 K42 ; R27 := R26; R26 := R26[0x9b051033]
	241	[9623]	GETGLOBAL	R28 K3 ; R28 := mSelected
	242	[9623]	GETTABLE 	R28 R28 K4 ; R28 := R28["Element"]
	243	[9623]	GETTABLE 	R28 R28 K43 ; R28 := R28["UID"]
	244	[9623]	GETGLOBAL	R29 K3 ; R29 := mSelected
	245	[9623]	GETTABLE 	R29 R29 K4 ; R29 := R29["Element"]
	246	[9623]	GETTABLE 	R29 R29 K23 ; R29 := R29["mCustSlot"]
	247	[9623]	GETGLOBAL	R30 K3 ; R30 := mSelected
	248	[9623]	GETTABLE 	R30 R30 K4 ; R30 := R30["Element"]
	249	[9623]	GETTABLE 	R30 R30 K16 ; R30 := R30["Customization"]
	250	[9623]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	251	[9625]	GETUPVAL 	R26 U3 ; R26 := U3
	252	[9625]	GETGLOBAL	R27 K3 ; R27 := mSelected
	253	[9625]	GETTABLE 	R27 R27 K4 ; R27 := R27["Element"]
	254	[9625]	GETTABLE 	R27 R27 K8 ; R27 := R27["LoadOutType"]
	255	[9625]	GETGLOBAL	R28 K3 ; R28 := mSelected
	256	[9625]	GETTABLE 	R28 R28 K4 ; R28 := R28["Element"]
	257	[9625]	GETTABLE 	R28 R28 K10 ; R28 := R28["LoadOutId"]
	258	[9625]	CALL     	R26 3 3 ; R26,R27 := R26(R27,R28)
	259	[9626]	LOADK    	R28 := 1.000000
	260	[9626]	LEN      	R29 R26 ; R29 := # R26
	261	[9626]	LOADK    	R30 := 1.000000
	262	[9626]	FORPREP  	R28 281 ; R28 -= R30; PC := 281
	263	[9627]	GETTABLE 	R32 R26 R31 ; R32 := R26[R31]
	264	[9628]	GETGLOBAL	R33 K3 ; R33 := mSelected
	265	[9628]	GETTABLE 	R33 R33 K4 ; R33 := R33["Element"]
	266	[9628]	GETTABLE 	R33 R33 K16 ; R33 := R33["Customization"]
	267	[9628]	SELF     	R33 R33 K44 ; R34 := R33; R33 := R33[0x61b59a83]
	268	[9628]	MOVE     	R35 R32 ; R35 := R32
	269	[9628]	MOVE     	R36 R27 ; R36 := R27
	270	[9628]	CALL     	R33 4 1 ; R33(R34,R35,R36)
	271	[9629]	GETGLOBAL	R33 K0 ; R33 := 0x7b998233
	272	[9629]	MOVE     	R34 R6 ; R34 := R6
	273	[9629]	CALL     	R33 2 2 ; R33 := R33(R34)
	274	[9629]	TEST     	R33 1 ; if R33 then PC := 281
	275	[9629]	JMP      	281 ; PC := 281
	276	[9630]	SELF     	R33 R6 K45 ; R34 := R6; R33 := R6[0x22d4e696]
	277	[9630]	GETGLOBAL	R35 K3 ; R35 := mSelected
	278	[9630]	GETTABLE 	R35 R35 K4 ; R35 := R35["Element"]
	279	[9630]	GETTABLE 	R35 R35 K16 ; R35 := R35["Customization"]
	280	[9630]	CALL     	R33 3 1 ; R33(R34,R35)
	281	[9626]	FORLOOP  	R28 263 ; R28 += R30; if R28 <= R29 then begin PC := 263; R31 := R28 end
	282	[9633]	GETUPVAL 	R33 U6 ; R33 := U6
	283	[9633]	CALL     	R33 1 1 ; R33()
	284	[9634]	GETGLOBAL	R33 K46 ; R33 := mLists
	285	[9634]	GETTABLE 	R33 R33 K47 ; R33 := R33["mCosmeticsList"]
	286	[9634]	SELF     	R33 R33 K48 ; R34 := R33; R33 := R33[0x71e9ac81]
	287	[9634]	CALL     	R33 2 1 ; R33(R34)
	288	[9636]	GETUPVAL 	R33 U7 ; R33 := U7
	289	[9636]	GETTABLE 	R33 R33 K49 ; R33 := R33[0xf6edf3bb]
	290	[9636]	CALL     	R33 1 1 ; R33()
	291	[9638]	GETUPVAL 	R33 U1 ; R33 := U1
	292	[9638]	GETTABLE 	R33 R33 K50 ; R33 := R33[0x659d451f]
	293	[9638]	GETGLOBAL	R34 K51 ; R34 := 0x0032441c
	294	[9638]	GETTABLE 	R34 R34 K52 ; R34 := R34["UISound_ButtonSelect"]
	295	[9638]	CALL     	R33 2 1 ; R33(R34)
	296	[9639]	RETURN   	R0 1 ; return 

function #147 <?:9641,9649> (21 instructions, 84 bytes at 0000021137988AA0)
0 params, 5 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[9642]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9642]	GETGLOBAL	R1 K1 ; R1 := mChildMovie
	3	[9642]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9642]	TEST     	R0 1 ; if R0 then PC := 9
	5	[9642]	JMP      	9 ; PC := 9
	6	[9643]	GETGLOBAL	R0 K1 ; R0 := mChildMovie
	7	[9643]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x32302b4a]
	8	[9643]	CALL     	R0 2 1 ; R0(R1)
	9	[9646]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[9646]	SETTABLE 	R0 K3 K4 ; R0["MouseDown"] := false
	11	[9647]	GETGLOBAL	R0 K5 ; R0 := 0x2d0fad09
	12	[9647]	LOADK    	R1 K6 ; R1 := "Lotus.Interface.PhotoboothUtilities"
	13	[9647]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[9648]	GETTABLE 	R1 R0 K7 ; R1 := R0[0x67df6022]
	15	[9648]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	16	[9648]	GETGLOBAL	R3 K9 ; R3 := mTimerTable
	17	[9648]	GETTABLE 	R3 R3 K10 ; R3 := R3["mTimerMgr"]
	18	[9648]	GETUPVAL 	R4 U1 ; R4 := U1
	19	[9648]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	20	[9648]	SETGLOBALHASH	R1 K1 ; mChildMovie := R1
	21	[9649]	RETURN   	R0 1 ; return 

function #148 <?:9651,9713> (180 instructions, 720 bytes at 0000021137988CD0)
0 params, 13 slots, 13 upvalues, 0 locals, 40 constants, 1 function
	1	[9652]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9652]	GETGLOBAL	R1 K1 ; R1 := mSelected
	3	[9652]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	4	[9652]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[9652]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[9652]	JMP      	8 ; PC := 8
	7	[9653]	RETURN   	R0 1 ; return 
	8	[9656]	GETGLOBAL	R0 K1 ; R0 := mSelected
	9	[9656]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	10	[9656]	GETTABLE 	R0 R0 K3 ; R0 := R0["LoadOutType"]
	11	[9656]	EQ       	0 R0 K5 ; if R0 ~= 0.000000 then PC := 71
	12	[9656]	JMP      	71 ; PC := 71
	13	[9656]	GETGLOBAL	R0 K1 ; R0 := mSelected
	14	[9656]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	15	[9656]	GETTABLE 	R0 R0 K6 ; R0 := R0["LoadOutId"]
	16	[9656]	EQ       	0 R0 K5 ; if R0 ~= 0.000000 then PC := 71
	17	[9656]	JMP      	71 ; PC := 71
	18	[9658]	GETUPVAL 	R0 U0 ; R0 := U0
	19	[9659]	NEWTABLE 	R1 0 0 ; R1 := {}
	20	[9660]	OP_LOADBOOL	R2 0 0 ; R2 := false
	21	[9662]	GETGLOBAL	R3 K7 ; R3 := mLists
	22	[9662]	GETTABLE 	R3 R3 K8 ; R3 := R3["mCosmeticsList"]
	23	[9662]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0xea061e98]
	24	[9672]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	25	[9672]	MOVE     	R0 R1 ; R0 := R1
	26	[9662]	CALL     	R3 3 1 ; R3(R4,R5)
	27	[9674]	LOADK    	R3 := 1.000000
	28	[9674]	LEN      	R4 R0 ; R4 := # R0
	29	[9674]	LOADK    	R5 := 1.000000
	30	[9674]	FORPREP  	R3 51 ; R3 -= R5; PC := 51
	31	[9675]	GETTABLE 	R7 R0 R6 ; R7 := R0[R6]
	32	[9675]	GETTABLE 	R7 R7 K10 ; R7 := R7["red"]
	33	[9675]	GETTABLE 	R8 R1 R6 ; R8 := R1[R6]
	34	[9675]	GETTABLE 	R8 R8 K10 ; R8 := R8["red"]
	35	[9675]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 49
	36	[9675]	JMP      	49 ; PC := 49
	37	[9676]	GETTABLE 	R7 R0 R6 ; R7 := R0[R6]
	38	[9676]	GETTABLE 	R7 R7 K11 ; R7 := R7["green"]
	39	[9676]	GETTABLE 	R8 R1 R6 ; R8 := R1[R6]
	40	[9676]	GETTABLE 	R8 R8 K11 ; R8 := R8["green"]
	41	[9676]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 49
	42	[9676]	JMP      	49 ; PC := 49
	43	[9677]	GETTABLE 	R7 R0 R6 ; R7 := R0[R6]
	44	[9677]	GETTABLE 	R7 R7 K12 ; R7 := R7["blue"]
	45	[9677]	GETTABLE 	R8 R1 R6 ; R8 := R1[R6]
	46	[9677]	GETTABLE 	R8 R8 K12 ; R8 := R8["blue"]
	47	[9677]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 51
	48	[9677]	JMP      	51 ; PC := 51
	49	[9678]	OP_LOADBOOL	R2 1 0 ; R2 := true
	50	[9679]	JMP      	52 ; PC := 52
	51	[9674]	FORLOOP  	R3 31 ; R3 += R5; if R3 <= R4 then begin PC := 31; R6 := R3 end
	52	[9683]	TEST     	R2 0 ; if not R2 then PC := 70
	53	[9683]	JMP      	70 ; PC := 70
	54	[9684]	GETGLOBAL	R7 K13 ; R7 := 0x89326c93
	55	[9684]	SELF     	R7 R7 K14 ; R8 := R7; R7 := R7[0xded7d5cd]
	56	[9684]	CALL     	R7 2 2 ; R7 := R7(R8)
	57	[9684]	GETTABLE 	R7 R7 K15 ; R7 := R7[1.000000]
	58	[9685]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	59	[9685]	MOVE     	R9 R7 ; R9 := R7
	60	[9685]	CALL     	R8 2 2 ; R8 := R8(R9)
	61	[9685]	TEST     	R8 1 ; if R8 then PC := 70
	62	[9685]	JMP      	70 ; PC := 70
	63	[9686]	GETGLOBAL	R8 K16 ; R8 := 0xba7dfcd2
	64	[9686]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0xf056b179]
	65	[9686]	MOVE     	R10 R7 ; R10 := R7
	66	[9686]	GETGLOBAL	R11 K18 ; R11 := 0x0469f296
	67	[9686]	LOADK    	R12 K19 ; R12 := "SUIT_COLOR_CHANGED"
	68	[9686]	CALL     	R11 2 0 ; R11,... := R11(R12)
	69	[9686]	CALL     	R8 0 1 ; R8(R9,...)
	70	[9688]	CLOSE    	R0 ; SAVE R0,...
	71	[9691]	GETGLOBAL	R0 K20 ; R0 := _T
	72	[9691]	SETTABLE 	R0 K21 K22 ; R0["LoadoutSaveRequired"] := true
	73	[9693]	GETUPVAL 	R0 U1 ; R0 := U1
	74	[9693]	GETGLOBAL	R1 K1 ; R1 := mSelected
	75	[9693]	GETTABLE 	R1 R1 K2 ; R1 := R1["Element"]
	76	[9693]	GETTABLE 	R1 R1 K3 ; R1 := R1["LoadOutType"]
	77	[9693]	GETGLOBAL	R2 K1 ; R2 := mSelected
	78	[9693]	GETTABLE 	R2 R2 K2 ; R2 := R2["Element"]
	79	[9693]	GETTABLE 	R2 R2 K6 ; R2 := R2["LoadOutId"]
	80	[9693]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	81	[9694]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	82	[9694]	GETGLOBAL	R2 K23 ; R2 := 0x25d99d89
	83	[9694]	CALL     	R1 2 2 ; R1 := R1(R2)
	84	[9694]	TEST     	R1 1 ; if R1 then PC := 102
	85	[9694]	JMP      	102 ; PC := 102
	86	[9694]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	87	[9694]	MOVE     	R2 R0 ; R2 := R0
	88	[9694]	CALL     	R1 2 2 ; R1 := R1(R2)
	89	[9694]	TEST     	R1 1 ; if R1 then PC := 102
	90	[9694]	JMP      	102 ; PC := 102
	91	[9695]	GETGLOBAL	R1 K23 ; R1 := 0x25d99d89
	92	[9695]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x400b84a1]
	93	[9695]	GETGLOBAL	R3 K1 ; R3 := mSelected
	94	[9695]	GETTABLE 	R3 R3 K2 ; R3 := R3["Element"]
	95	[9695]	GETTABLE 	R3 R3 K3 ; R3 := R3["LoadOutType"]
	96	[9695]	GETGLOBAL	R4 K25 ; R4 := mCurrentLoadout
	97	[9695]	GETGLOBAL	R5 K1 ; R5 := mSelected
	98	[9695]	GETTABLE 	R5 R5 K2 ; R5 := R5["Element"]
	99	[9695]	GETTABLE 	R5 R5 K3 ; R5 := R5["LoadOutType"]
	100	[9695]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	101	[9695]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	102	[9698]	GETGLOBAL	R1 K20 ; R1 := _T
	103	[9698]	GETTABLE 	R1 R1 K26 ; R1 := R1["MenuSuitAvatar"]
	104	[9699]	GETUPVAL 	R2 U2 ; R2 := U2
	105	[9699]	GETUPVAL 	R3 U3 ; R3 := U3
	106	[9699]	GETTABLE 	R3 R3 K27 ; R3 := R3["Current"]
	107	[9699]	EQ       	1 R3 K28 ; if R3 == 2.000000 then PC := 110
	108	[9699]	JMP      	110 ; PC := 110
	109	[9699]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 110
	110	[9699]	OP_LOADBOOL	R3 1 0 ; R3 := true
	111	[9699]	CALL     	R2 2 1 ; R2(R3)
	112	[9700]	GETUPVAL 	R2 U4 ; R2 := U4
	113	[9700]	CALL     	R2 1 2 ; R2 := R2()
	114	[9700]	TEST     	R2 1 ; if R2 then PC := 140
	115	[9700]	JMP      	140 ; PC := 140
	116	[9700]	GETGLOBAL	R2 K20 ; R2 := _T
	117	[9700]	GETTABLE 	R2 R2 K29 ; R2 := R2["mSentinelMode"]
	118	[9700]	TEST     	R2 0 ; if not R2 then PC := 140
	119	[9700]	JMP      	140 ; PC := 140
	120	[9700]	GETGLOBAL	R2 K23 ; R2 := 0x25d99d89
	121	[9700]	SELF     	R2 R2 K30 ; R3 := R2; R2 := R2[0x3c6b0324]
	122	[9700]	CALL     	R2 2 2 ; R2 := R2(R3)
	123	[9700]	TEST     	R2 1 ; if R2 then PC := 130
	124	[9700]	JMP      	130 ; PC := 130
	125	[9700]	GETGLOBAL	R2 K23 ; R2 := 0x25d99d89
	126	[9700]	SELF     	R2 R2 K31 ; R3 := R2; R2 := R2[0x9f91f49d]
	127	[9700]	CALL     	R2 2 2 ; R2 := R2(R3)
	128	[9700]	TEST     	R2 0 ; if not R2 then PC := 140
	129	[9700]	JMP      	140 ; PC := 140
	130	[9701]	LOADK    	R2 := 1.000000
	131	[9701]	SETUPVAL 	R2 U5 ; U5 := R2
	132	[9702]	GETUPVAL 	R2 U6 ; R2 := U6
	133	[9702]	GETTABLE 	R2 R2 K32 ; R2 := R2[0xd4c67576]
	134	[9702]	GETGLOBAL	R3 K33 ; R3 := 0xae91e43b
	135	[9702]	GETGLOBAL	R4 K20 ; R4 := _T
	136	[9702]	GETTABLE 	R4 R4 K26 ; R4 := R4["MenuSuitAvatar"]
	137	[9702]	GETUPVAL 	R5 U7 ; R5 := U7
	138	[9702]	GETTABLE 	R5 R5 K34 ; R5 := R5["MouseDown"]
	139	[9702]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	140	[9706]	GETUPVAL 	R2 U8 ; R2 := U8
	141	[9706]	GETUPVAL 	R3 U9 ; R3 := U9
	142	[9706]	GETTABLE 	R3 R3 K35 ; R3 := R3["FRONT"]
	143	[9706]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 150
	144	[9706]	JMP      	150 ; PC := 150
	145	[9706]	GETUPVAL 	R2 U8 ; R2 := U8
	146	[9706]	GETUPVAL 	R3 U9 ; R3 := U9
	147	[9706]	GETTABLE 	R3 R3 K36 ; R3 := R3["BACK"]
	148	[9706]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 153
	149	[9706]	JMP      	153 ; PC := 153
	150	[9707]	GETUPVAL 	R2 U10 ; R2 := U10
	151	[9707]	CALL     	R2 1 1 ; R2()
	152	[9707]	JMP      	171 ; PC := 171
	153	[9708]	GETGLOBAL	R2 K7 ; R2 := mLists
	154	[9708]	GETTABLE 	R2 R2 K8 ; R2 := R2["mCosmeticsList"]
	155	[9708]	GETTABLE 	R2 R2 K37 ; R2 := R2["mCurrLevel"]
	156	[9708]	GETGLOBAL	R3 K7 ; R3 := mLists
	157	[9708]	GETTABLE 	R3 R3 K8 ; R3 := R3["mCosmeticsList"]
	158	[9708]	GETTABLE 	R3 R3 K38 ; R3 := R3["HOLSTER_STYLE"]
	159	[9708]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 169
	160	[9708]	JMP      	169 ; PC := 169
	161	[9708]	GETGLOBAL	R2 K7 ; R2 := mLists
	162	[9708]	GETTABLE 	R2 R2 K8 ; R2 := R2["mCosmeticsList"]
	163	[9708]	GETTABLE 	R2 R2 K37 ; R2 := R2["mCurrLevel"]
	164	[9708]	GETGLOBAL	R3 K7 ; R3 := mLists
	165	[9708]	GETTABLE 	R3 R3 K8 ; R3 := R3["mCosmeticsList"]
	166	[9708]	GETTABLE 	R3 R3 K39 ; R3 := R3["HOLSTER_CUSTOMIZATION"]
	167	[9708]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 171
	168	[9708]	JMP      	171 ; PC := 171
	169	[9709]	GETUPVAL 	R2 U11 ; R2 := U11
	170	[9709]	CALL     	R2 1 1 ; R2()
	171	[9712]	GETUPVAL 	R2 U12 ; R2 := U12
	172	[9712]	MOVE     	R3 R1 ; R3 := R1
	173	[9712]	GETGLOBAL	R4 K1 ; R4 := mSelected
	174	[9712]	GETTABLE 	R4 R4 K2 ; R4 := R4["Element"]
	175	[9712]	GETTABLE 	R4 R4 K3 ; R4 := R4["LoadOutType"]
	176	[9712]	GETGLOBAL	R5 K1 ; R5 := mSelected
	177	[9712]	GETTABLE 	R5 R5 K2 ; R5 := R5["Element"]
	178	[9712]	GETTABLE 	R5 R5 K6 ; R5 := R5["LoadOutId"]
	179	[9712]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	180	[9713]	RETURN   	R0 1 ; return 

function #149 <?:9715,10346> (377 instructions, 1508 bytes at 00000211379895B0)
0 params, 18 slots, 25 upvalues, 0 locals, 114 constants, 12 functions
	1	[9716]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[9716]	LOADK    	R1 K1 ; R1 := "EE.Interface.Components.List"
	3	[9716]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9717]	GETGLOBAL	R1 K2 ; R1 := mLists
	5	[9717]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x9383bc56]
	6	[9717]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	7	[9717]	LOADK    	R4 K6 ; R4 := "CosmeticsMenu.CosmeticsMenuItem"
	8	[9717]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[9717]	SETTABLE 	R1 K3 R2 ; R1["mCosmeticsList"] := R2
	10	[9718]	GETGLOBAL	R1 K2 ; R1 := mLists
	11	[9718]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	12	[9718]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	13	[9718]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x91a24e4b]
	14	[9718]	LOADK    	R4 K9 ; R4 := "CosmeticsMenu"
	15	[9718]	LOADK    	R5 := 1.000000
	16	[9718]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	17	[9718]	SETTABLE 	R1 K7 R2 ; R1["mInitListYPos"] := R2
	18	[9719]	GETGLOBAL	R1 K2 ; R1 := mLists
	19	[9719]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	20	[9719]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	21	[9719]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x91a24e4b]
	22	[9719]	LOADK    	R4 K9 ; R4 := "CosmeticsMenu"
	23	[9719]	LOADK    	R5 := 0.000000
	24	[9719]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	25	[9719]	SETTABLE 	R1 K10 R2 ; R1["mInitListXPos"] := R2
	26	[9720]	GETGLOBAL	R1 K2 ; R1 := mLists
	27	[9720]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	28	[9720]	SETTABLE 	R1 K11 K12 ; R1["mElementWidth"] := 430.000000
	29	[9721]	GETGLOBAL	R1 K2 ; R1 := mLists
	30	[9721]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	31	[9721]	GETGLOBAL	R2 K2 ; R2 := mLists
	32	[9721]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	33	[9721]	GETTABLE 	R2 R2 K14 ; R2 := R2["mInitialY"]
	34	[9721]	SETTABLE 	R1 K13 R2 ; R1["mOrigY"] := R2
	35	[9722]	GETGLOBAL	R1 K2 ; R1 := mLists
	36	[9722]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	37	[9722]	SETTABLE 	R1 K15 K16 ; R1["mForcedVerticalSeparation"] := 40.000000
	38	[9723]	GETGLOBAL	R1 K2 ; R1 := mLists
	39	[9723]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	40	[9723]	SETTABLE 	R1 K17 K18 ; R1["mTransitionInDeltaY"] := 0.000000
	41	[9724]	GETGLOBAL	R1 K2 ; R1 := mLists
	42	[9724]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	43	[9724]	SETTABLE 	R1 K19 K18 ; R1["mTransitionOutDeltaY"] := 0.000000
	44	[9725]	GETGLOBAL	R1 K2 ; R1 := mLists
	45	[9725]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	46	[9725]	SETTABLE 	R1 K20 K21 ; R1["mInitialDepth"] := 3000.000000
	47	[9726]	GETGLOBAL	R1 K2 ; R1 := mLists
	48	[9726]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	49	[9726]	SETTABLE 	R1 K22 K23 ; R1["mWrapAroundNavigation"] := false
	50	[9727]	GETGLOBAL	R1 K2 ; R1 := mLists
	51	[9727]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	52	[9727]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	53	[9727]	LOADK    	R3 K25 ; R3 := "CosmeticsItemPressed"
	54	[9727]	LOADK    	R4 K26 ; R4 := "CosmeticsItemFocused"
	55	[9727]	LOADK    	R5 K27 ; R5 := "CosmeticsItemUnfocused"
	56	[9727]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	57	[9729]	GETGLOBAL	R1 K2 ; R1 := mLists
	58	[9729]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	59	[9729]	SETTABLE 	R1 K28 K18 ; R1["NONE"] := 0.000000
	60	[9730]	GETGLOBAL	R1 K2 ; R1 := mLists
	61	[9730]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	62	[9730]	SETTABLE 	R1 K29 K30 ; R1["DEFAULT"] := 1.000000
	63	[9731]	GETGLOBAL	R1 K2 ; R1 := mLists
	64	[9731]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	65	[9731]	SETTABLE 	R1 K31 K32 ; R1["ATTACHMENTS"] := 2.000000
	66	[9732]	GETGLOBAL	R1 K2 ; R1 := mLists
	67	[9732]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	68	[9732]	SETTABLE 	R1 K33 K34 ; R1["SYANDANAS"] := 3.000000
	69	[9733]	GETGLOBAL	R1 K2 ; R1 := mLists
	70	[9733]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	71	[9733]	SETTABLE 	R1 K35 K36 ; R1["BADGES"] := 4.000000
	72	[9734]	GETGLOBAL	R1 K2 ; R1 := mLists
	73	[9734]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	74	[9734]	SETTABLE 	R1 K37 K38 ; R1["FRONTSIGIL"] := 5.000000
	75	[9735]	GETGLOBAL	R1 K2 ; R1 := mLists
	76	[9735]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	77	[9735]	SETTABLE 	R1 K39 K40 ; R1["BACKSIGIL"] := 6.000000
	78	[9736]	GETGLOBAL	R1 K2 ; R1 := mLists
	79	[9736]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	80	[9736]	SETTABLE 	R1 K41 K42 ; R1["HOLSTER_STYLE"] := 7.000000
	81	[9737]	GETGLOBAL	R1 K2 ; R1 := mLists
	82	[9737]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	83	[9737]	SETTABLE 	R1 K43 K44 ; R1["HOLSTER_CUSTOMIZATION"] := 8.000000
	84	[9738]	GETGLOBAL	R1 K2 ; R1 := mLists
	85	[9738]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	86	[9738]	SETTABLE 	R1 K45 K46 ; R1["mLastFocused"] := nil
	87	[9739]	GETGLOBAL	R1 K2 ; R1 := mLists
	88	[9739]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	89	[9739]	GETGLOBAL	R2 K2 ; R2 := mLists
	90	[9739]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	91	[9739]	GETTABLE 	R2 R2 K29 ; R2 := R2["DEFAULT"]
	92	[9739]	SETTABLE 	R1 K47 R2 ; R1["mCurrLevel"] := R2
	93	[9740]	GETGLOBAL	R1 K2 ; R1 := mLists
	94	[9740]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	95	[9740]	NEWTABLE 	R2 0 0 ; R2 := {}
	96	[9740]	SETTABLE 	R1 K48 R2 ; R1["mLevels"] := R2
	97	[9741]	GETGLOBAL	R1 K2 ; R1 := mLists
	98	[9741]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	99	[9741]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	100	[9741]	GETGLOBAL	R2 K2 ; R2 := mLists
	101	[9741]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	102	[9741]	GETTABLE 	R2 R2 K29 ; R2 := R2["DEFAULT"]
	103	[9741]	NEWTABLE 	R3 0 0 ; R3 := {}
	104	[9741]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	105	[9742]	GETGLOBAL	R1 K2 ; R1 := mLists
	106	[9742]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	107	[9742]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	108	[9742]	GETGLOBAL	R2 K2 ; R2 := mLists
	109	[9742]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	110	[9742]	GETTABLE 	R2 R2 K31 ; R2 := R2["ATTACHMENTS"]
	111	[9742]	NEWTABLE 	R3 0 2 ; R3 := {}
	112	[9742]	SETTABLE 	R3 K49 K50 ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
	113	[9742]	GETGLOBAL	R4 K2 ; R4 := mLists
	114	[9742]	GETTABLE 	R4 R4 K3 ; R4 := R4["mCosmeticsList"]
	115	[9742]	GETTABLE 	R4 R4 K29 ; R4 := R4["DEFAULT"]
	116	[9742]	SETTABLE 	R3 K51 R4 ; R3["mParentId"] := R4
	117	[9742]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	118	[9743]	GETGLOBAL	R1 K2 ; R1 := mLists
	119	[9743]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	120	[9743]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	121	[9743]	GETGLOBAL	R2 K2 ; R2 := mLists
	122	[9743]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	123	[9743]	GETTABLE 	R2 R2 K33 ; R2 := R2["SYANDANAS"]
	124	[9743]	NEWTABLE 	R3 0 2 ; R3 := {}
	125	[9743]	SETTABLE 	R3 K49 K52 ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_Neckwear"
	126	[9743]	GETGLOBAL	R4 K2 ; R4 := mLists
	127	[9743]	GETTABLE 	R4 R4 K3 ; R4 := R4["mCosmeticsList"]
	128	[9743]	GETTABLE 	R4 R4 K29 ; R4 := R4["DEFAULT"]
	129	[9743]	SETTABLE 	R3 K51 R4 ; R3["mParentId"] := R4
	130	[9743]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	131	[9744]	GETGLOBAL	R1 K2 ; R1 := mLists
	132	[9744]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	133	[9744]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	134	[9744]	GETGLOBAL	R2 K2 ; R2 := mLists
	135	[9744]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	136	[9744]	GETTABLE 	R2 R2 K35 ; R2 := R2["BADGES"]
	137	[9744]	NEWTABLE 	R3 0 3 ; R3 := {}
	138	[9744]	SETTABLE 	R3 K49 K53 ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_Regalia"
	139	[9744]	GETGLOBAL	R4 K2 ; R4 := mLists
	140	[9744]	GETTABLE 	R4 R4 K3 ; R4 := R4["mCosmeticsList"]
	141	[9744]	GETTABLE 	R4 R4 K29 ; R4 := R4["DEFAULT"]
	142	[9744]	SETTABLE 	R3 K51 R4 ; R3["mParentId"] := R4
	143	[9745]	NEWTABLE 	R4 0 1 ; R4 := {}
	144	[9745]	NEWTABLE 	R5 0 1 ; R5 := {}
	145	[9745]	GETGLOBAL	R6 K2 ; R6 := mLists
	146	[9745]	GETTABLE 	R6 R6 K3 ; R6 := R6["mCosmeticsList"]
	147	[9745]	GETTABLE 	R6 R6 K28 ; R6 := R6["NONE"]
	148	[9745]	SETTABLE 	R5 K18 R6 ; R5[0.000000] := R6
	149	[9745]	SETTABLE 	R4 K40 R5 ; R4[6.000000] := R5
	150	[9745]	SETTABLE 	R3 K54 R4 ; R3["mAltParentId"] := R4
	151	[9745]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	152	[9746]	GETGLOBAL	R1 K2 ; R1 := mLists
	153	[9746]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	154	[9746]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	155	[9746]	GETGLOBAL	R2 K2 ; R2 := mLists
	156	[9746]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	157	[9746]	GETTABLE 	R2 R2 K37 ; R2 := R2["FRONTSIGIL"]
	158	[9746]	NEWTABLE 	R3 0 2 ; R3 := {}
	159	[9746]	SETTABLE 	R3 K49 K56 ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_FrontSigil"
	160	[9746]	GETGLOBAL	R4 K2 ; R4 := mLists
	161	[9746]	GETTABLE 	R4 R4 K3 ; R4 := R4["mCosmeticsList"]
	162	[9746]	GETTABLE 	R4 R4 K35 ; R4 := R4["BADGES"]
	163	[9746]	SETTABLE 	R3 K51 R4 ; R3["mParentId"] := R4
	164	[9746]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	165	[9747]	GETGLOBAL	R1 K2 ; R1 := mLists
	166	[9747]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	167	[9747]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	168	[9747]	GETGLOBAL	R2 K2 ; R2 := mLists
	169	[9747]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	170	[9747]	GETTABLE 	R2 R2 K39 ; R2 := R2["BACKSIGIL"]
	171	[9747]	NEWTABLE 	R3 0 4 ; R3 := {}
	172	[9747]	SETTABLE 	R3 K49 K57 ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_BackSigil"
	173	[9747]	GETGLOBAL	R4 K2 ; R4 := mLists
	174	[9747]	GETTABLE 	R4 R4 K3 ; R4 := R4["mCosmeticsList"]
	175	[9747]	GETTABLE 	R4 R4 K35 ; R4 := R4["BADGES"]
	176	[9747]	SETTABLE 	R3 K51 R4 ; R3["mParentId"] := R4
	177	[9748]	NEWTABLE 	R4 0 1 ; R4 := {}
	178	[9748]	NEWTABLE 	R5 0 1 ; R5 := {}
	179	[9748]	SETTABLE 	R5 K18 K59 ; R5[0.000000] := "/Lotus/Language/Hoverboards/CategoryHoverboardSticker"
	180	[9748]	SETTABLE 	R4 K40 R5 ; R4[6.000000] := R5
	181	[9748]	SETTABLE 	R3 K58 R4 ; R3["mAltTitles"] := R4
	182	[9749]	NEWTABLE 	R4 0 1 ; R4 := {}
	183	[9749]	NEWTABLE 	R5 0 1 ; R5 := {}
	184	[9749]	GETGLOBAL	R6 K2 ; R6 := mLists
	185	[9749]	GETTABLE 	R6 R6 K3 ; R6 := R6["mCosmeticsList"]
	186	[9749]	GETTABLE 	R6 R6 K29 ; R6 := R6["DEFAULT"]
	187	[9749]	SETTABLE 	R5 K18 R6 ; R5[0.000000] := R6
	188	[9749]	SETTABLE 	R4 K40 R5 ; R4[6.000000] := R5
	189	[9749]	SETTABLE 	R3 K54 R4 ; R3["mAltParentId"] := R4
	190	[9749]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	191	[9750]	GETGLOBAL	R1 K2 ; R1 := mLists
	192	[9750]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	193	[9750]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	194	[9750]	GETGLOBAL	R2 K2 ; R2 := mLists
	195	[9750]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	196	[9750]	GETTABLE 	R2 R2 K41 ; R2 := R2["HOLSTER_STYLE"]
	197	[9750]	NEWTABLE 	R3 0 2 ; R3 := {}
	198	[9750]	SETTABLE 	R3 K49 K60 ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	199	[9750]	GETGLOBAL	R4 K2 ; R4 := mLists
	200	[9750]	GETTABLE 	R4 R4 K3 ; R4 := R4["mCosmeticsList"]
	201	[9750]	GETTABLE 	R4 R4 K29 ; R4 := R4["DEFAULT"]
	202	[9750]	SETTABLE 	R3 K51 R4 ; R3["mParentId"] := R4
	203	[9750]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	204	[9751]	GETGLOBAL	R1 K2 ; R1 := mLists
	205	[9751]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	206	[9751]	GETTABLE 	R1 R1 K48 ; R1 := R1["mLevels"]
	207	[9751]	GETGLOBAL	R2 K2 ; R2 := mLists
	208	[9751]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	209	[9751]	GETTABLE 	R2 R2 K43 ; R2 := R2["HOLSTER_CUSTOMIZATION"]
	210	[9751]	NEWTABLE 	R3 0 2 ; R3 := {}
	211	[9751]	SETTABLE 	R3 K49 K60 ; R3["mTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	212	[9751]	GETGLOBAL	R4 K2 ; R4 := mLists
	213	[9751]	GETTABLE 	R4 R4 K3 ; R4 := R4["mCosmeticsList"]
	214	[9751]	GETTABLE 	R4 R4 K41 ; R4 := R4["HOLSTER_STYLE"]
	215	[9751]	SETTABLE 	R3 K51 R4 ; R3["mParentId"] := R4
	216	[9751]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	217	[9753]	GETGLOBAL	R1 K2 ; R1 := mLists
	218	[9753]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	219	[9753]	NEWTABLE 	R2 15 0 ; R2 := {}
	220	[9755]	LOADK    	R3 K62 ; R3 := "ValueSelector.Slider"
	221	[9755]	LOADK    	R4 K63 ; R4 := "ValueSelector.Front"
	222	[9755]	LOADK    	R5 K64 ; R5 := "ValueSelector.Back"
	223	[9755]	LOADK    	R6 K65 ; R6 := "ValueSelector.LeftArrow"
	224	[9755]	LOADK    	R7 K66 ; R7 := "ValueSelector.RightArrow"
	225	[9756]	LOADK    	R8 K67 ; R8 := "UndoBtn.CostBg"
	226	[9756]	LOADK    	R9 K68 ; R9 := "UndoBtn.Bg"
	227	[9756]	LOADK    	R10 K69 ; R10 := "UndoBtn.Icon"
	228	[9757]	LOADK    	R11 K70 ; R11 := "MiddleLine"
	229	[9757]	LOADK    	R12 K71 ; R12 := "checkbox"
	230	[9757]	LOADK    	R13 K72 ; R13 := "CopyColors"
	231	[9757]	LOADK    	R14 K73 ; R14 := "DefaultColors"
	232	[9757]	LOADK    	R15 K74 ; R15 := "RandomColors"
	233	[9757]	LOADK    	R16 K75 ; R16 := "Arrow"
	234	[9758]	LOADK    	R17 K76 ; R17 := "Bg"
	235	[9758]	SETLIST  	R2 15 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 15
	236	[9758]	SETTABLE 	R1 K61 R2 ; R1["mVisClips"] := R2
	237	[9759]	GETGLOBAL	R1 K2 ; R1 := mLists
	238	[9759]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	239	[9759]	NEWTABLE 	R2 7 0 ; R2 := {}
	240	[9761]	LOADK    	R3 K78 ; R3 := "BottomLine"
	241	[9762]	LOADK    	R4 K79 ; R4 := "TopTitle.LineRightCap"
	242	[9762]	LOADK    	R5 K80 ; R5 := "TopTitle.LineLeftCap"
	243	[9762]	LOADK    	R6 K81 ; R6 := "TopTitle.LineRight"
	244	[9762]	LOADK    	R7 K82 ; R7 := "TopTitle.LineLeft"
	245	[9762]	LOADK    	R8 K83 ; R8 := "TopTitle.LineRightOuterCap"
	246	[9763]	LOADK    	R9 K84 ; R9 := "TopTitle.LineLeftOuterCap"
	247	[9763]	SETLIST  	R2 7 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 7
	248	[9763]	SETTABLE 	R1 K77 R2 ; R1["mVisNoAAClips"] := R2
	249	[9764]	GETGLOBAL	R1 K2 ; R1 := mLists
	250	[9764]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	251	[9764]	NEWTABLE 	R2 4 0 ; R2 := {}
	252	[9766]	LOADK    	R3 K86 ; R3 := "UndoBtn.Cost"
	253	[9766]	LOADK    	R4 K87 ; R4 := "TotalColorCost"
	254	[9766]	LOADK    	R5 K88 ; R5 := "Label"
	255	[9767]	LOADK    	R6 K89 ; R6 := "TopTitle.Label"
	256	[9767]	SETLIST  	R2 4 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
	257	[9767]	SETTABLE 	R1 K85 R2 ; R1["mVisTextClips"] := R2
	258	[9769]	GETGLOBAL	R1 K2 ; R1 := mLists
	259	[9769]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	260	[9787]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	261	[9787]	GETUPVAL 	R0 U0 ; R0 := U0
	262	[9787]	GETUPVAL 	R0 U1 ; R0 := U1
	263	[9787]	SETTABLE 	R1 K90 R2 ; R1["GoToParent"] := R2
	264	[9788]	GETGLOBAL	R1 K2 ; R1 := mLists
	265	[9788]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	266	[9825]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	267	[9825]	GETUPVAL 	R0 U2 ; R0 := U2
	268	[9825]	SETTABLE 	R1 K91 R2 ; R1["AddLevelTags"] := R2
	269	[9826]	GETGLOBAL	R1 K2 ; R1 := mLists
	270	[9826]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	271	[9837]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	272	[9837]	GETUPVAL 	R0 U3 ; R0 := U3
	273	[9837]	SETTABLE 	R1 K92 R2 ; R1["mOnFocusedCallback"] := R2
	274	[9838]	GETGLOBAL	R1 K2 ; R1 := mLists
	275	[9838]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	276	[9841]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	277	[9841]	SETTABLE 	R1 K93 R2 ; R1["mOnUnfocusedCallback"] := R2
	278	[9842]	GETGLOBAL	R1 K2 ; R1 := mLists
	279	[9842]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	280	[9986]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	281	[9986]	GETUPVAL 	R0 U4 ; R0 := U4
	282	[9986]	GETUPVAL 	R0 U5 ; R0 := U5
	283	[9986]	GETUPVAL 	R0 U3 ; R0 := U3
	284	[9986]	GETUPVAL 	R0 U6 ; R0 := U6
	285	[9986]	GETUPVAL 	R0 U7 ; R0 := U7
	286	[9986]	GETUPVAL 	R0 U8 ; R0 := U8
	287	[9986]	GETUPVAL 	R0 U9 ; R0 := U9
	288	[9986]	GETUPVAL 	R0 U10 ; R0 := U10
	289	[9986]	GETUPVAL 	R0 U11 ; R0 := U11
	290	[9986]	GETUPVAL 	R0 U12 ; R0 := U12
	291	[9986]	GETUPVAL 	R0 U13 ; R0 := U13
	292	[9986]	GETUPVAL 	R0 U0 ; R0 := U0
	293	[9986]	GETUPVAL 	R0 U1 ; R0 := U1
	294	[9986]	GETUPVAL 	R0 U14 ; R0 := U14
	295	[9986]	GETUPVAL 	R0 U15 ; R0 := U15
	296	[9986]	GETUPVAL 	R0 U16 ; R0 := U16
	297	[9986]	GETUPVAL 	R0 U17 ; R0 := U17
	298	[9986]	GETUPVAL 	R0 U18 ; R0 := U18
	299	[9986]	SETTABLE 	R1 K94 R2 ; R1["mOnSelectedCallback"] := R2
	300	[9987]	GETGLOBAL	R1 K2 ; R1 := mLists
	301	[9987]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	302	[9992]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	303	[9992]	SETTABLE 	R1 K95 R2 ; R1["mOnRemovedCallback"] := R2
	304	[9993]	GETGLOBAL	R1 K2 ; R1 := mLists
	305	[9993]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	306	[10292]	CLOSURE  	R2 6 ; R2 := closure(Function #7)
	307	[10292]	GETUPVAL 	R0 U19 ; R0 := U19
	308	[10292]	GETUPVAL 	R0 U20 ; R0 := U20
	309	[10292]	GETUPVAL 	R0 U21 ; R0 := U21
	310	[10292]	GETUPVAL 	R0 U22 ; R0 := U22
	311	[10292]	GETUPVAL 	R0 U3 ; R0 := U3
	312	[10292]	GETUPVAL 	R0 U12 ; R0 := U12
	313	[10292]	MOVE     	R0 R0 ; R0 := R0
	314	[10292]	GETUPVAL 	R0 U23 ; R0 := U23
	315	[10292]	GETUPVAL 	R0 U24 ; R0 := U24
	316	[10292]	SETTABLE 	R1 K96 R2 ; R1["mElementDrawCallback"] := R2
	317	[10293]	GETGLOBAL	R1 K2 ; R1 := mLists
	318	[10293]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	319	[10296]	CLOSURE  	R2 7 ; R2 := closure(Function #8)
	320	[10296]	SETTABLE 	R1 K97 R2 ; R1["SetupPreInterpolationValues"] := R2
	321	[10297]	GETGLOBAL	R1 K2 ; R1 := mLists
	322	[10297]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	323	[10300]	CLOSURE  	R2 8 ; R2 := closure(Function #9)
	324	[10300]	SETTABLE 	R1 K98 R2 ; R1["GetInterpolationProperties"] := R2
	325	[10301]	GETGLOBAL	R1 K2 ; R1 := mLists
	326	[10301]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	327	[10301]	GETGLOBAL	R2 K2 ; R2 := mLists
	328	[10301]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCosmeticsList"]
	329	[10301]	GETTABLE 	R2 R2 K100 ; R2 := R2["CalculateY"]
	330	[10301]	SETTABLE 	R1 K99 R2 ; R1["_CosmeticsList_CalculateY"] := R2
	331	[10302]	GETGLOBAL	R1 K2 ; R1 := mLists
	332	[10302]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCosmeticsList"]
	333	[10322]	CLOSURE  	R2 9 ; R2 := closure(Function #10)
	334	[10322]	SETTABLE 	R1 K100 R2 ; R1["CalculateY"] := R2
	335	[10324]	GETGLOBAL	R1 K0 ; R1 := 0x2d0fad09
	336	[10324]	LOADK    	R2 K101 ; R2 := "EE.Interface.Components.ScrollBar"
	337	[10324]	CALL     	R1 2 2 ; R1 := R1(R2)
	338	[10325]	GETGLOBAL	R2 K2 ; R2 := mLists
	339	[10325]	GETTABLE 	R3 R1 K103 ; R3 := R1[0x3b3ea08c]
	340	[10325]	GETGLOBAL	R4 K5 ; R4 := 0xae91e43b
	341	[10325]	LOADK    	R5 K104 ; R5 := "CosmeticsMenuScrollBar"
	342	[10325]	LOADK    	R6 := 720.000000
	343	[10325]	LOADK    	R7 := 0.500000
	344	[10325]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	345	[10325]	SETTABLE 	R2 K102 R3 ; R2["mCosmeticsScrollBar"] := R3
	346	[10326]	GETGLOBAL	R2 K2 ; R2 := mLists
	347	[10326]	GETTABLE 	R2 R2 K102 ; R2 := R2["mCosmeticsScrollBar"]
	348	[10329]	CLOSURE  	R3 10 ; R3 := closure(Function #11)
	349	[10329]	SETTABLE 	R2 K105 R3 ; R2["GetMenuYAtScroll"] := R3
	350	[10330]	GETGLOBAL	R2 K2 ; R2 := mLists
	351	[10330]	GETTABLE 	R2 R2 K102 ; R2 := R2["mCosmeticsScrollBar"]
	352	[10340]	CLOSURE  	R3 11 ; R3 := closure(Function #12)
	353	[10340]	SETTABLE 	R2 K106 R3 ; R2["mScrollValueChangedCallback"] := R3
	354	[10341]	GETGLOBAL	R2 K2 ; R2 := mLists
	355	[10341]	GETTABLE 	R2 R2 K102 ; R2 := R2["mCosmeticsScrollBar"]
	356	[10341]	GETGLOBAL	R3 K2 ; R3 := mLists
	357	[10341]	GETTABLE 	R3 R3 K102 ; R3 := R3["mCosmeticsScrollBar"]
	358	[10341]	GETTABLE 	R3 R3 K108 ; R3 := R3["mHeight"]
	359	[10341]	SETTABLE 	R2 K107 R3 ; R2["mInitHeight"] := R3
	360	[10342]	GETGLOBAL	R2 K2 ; R2 := mLists
	361	[10342]	GETTABLE 	R2 R2 K102 ; R2 := R2["mCosmeticsScrollBar"]
	362	[10342]	SETTABLE 	R2 K109 K110 ; R2["mEnableSmoothScroll"] := true
	363	[10343]	GETGLOBAL	R2 K2 ; R2 := mLists
	364	[10343]	GETTABLE 	R2 R2 K102 ; R2 := R2["mCosmeticsScrollBar"]
	365	[10343]	SELF     	R2 R2 K111 ; R3 := R2; R2 := R2[0xe91c55ec]
	366	[10343]	CALL     	R2 2 1 ; R2(R3)
	367	[10344]	GETGLOBAL	R2 K2 ; R2 := mLists
	368	[10344]	GETTABLE 	R2 R2 K102 ; R2 := R2["mCosmeticsScrollBar"]
	369	[10344]	SELF     	R2 R2 K112 ; R3 := R2; R2 := R2[0x687ae094]
	370	[10344]	CALL     	R2 2 1 ; R2(R3)
	371	[10345]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	372	[10345]	SELF     	R2 R2 K113 ; R3 := R2; R2 := R2[0xaade900e]
	373	[10345]	LOADK    	R4 K104 ; R4 := "CosmeticsMenuScrollBar"
	374	[10345]	LOADK    	R5 := 11.000000
	375	[10345]	OP_LOADBOOL	R6 0 0 ; R6 := false
	376	[10345]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	377	[10346]	RETURN   	R0 1 ; return 

function #150 <?:10348,10430> (267 instructions, 1068 bytes at 00000211148234D0)
2 params, 9 slots, 12 upvalues, 0 locals, 68 constants, 0 functions
	1	[10349]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[10349]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[10349]	GETTABLE 	R3 R3 K0 ; R3 := R3["CUSTOMIZING_SKINS"]
	4	[10349]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 23
	5	[10349]	JMP      	23 ; PC := 23
	6	[10350]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	7	[10350]	GETGLOBAL	R3 K2 ; R3 := mSelected
	8	[10350]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	9	[10350]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[10350]	TEST     	R2 1 ; if R2 then PC := 24
	11	[10350]	JMP      	24 ; PC := 24
	12	[10350]	GETTABLE 	R2 R0 K4 ; R2 := R0["ConfigSlot"]
	13	[10350]	EQ       	1 R2 K5 ; if R2 == nil then PC := 24
	14	[10350]	JMP      	24 ; PC := 24
	15	[10350]	GETGLOBAL	R2 K2 ; R2 := mSelected
	16	[10350]	GETTABLE 	R2 R2 K3 ; R2 := R2["Element"]
	17	[10350]	GETTABLE 	R2 R2 K6 ; R2 := R2["mCustSlot"]
	18	[10350]	GETTABLE 	R3 R0 K4 ; R3 := R0["ConfigSlot"]
	19	[10350]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 24
	20	[10350]	JMP      	24 ; PC := 24
	21	[10350]	TEST     	R1 1 ; if R1 then PC := 24
	22	[10350]	JMP      	24 ; PC := 24
	23	[10351]	RETURN   	R0 1 ; return 
	24	[10354]	GETTABLE 	R2 R0 K7 ; R2 := R0["IsFlappy"]
	25	[10354]	TEST     	R2 1 ; if R2 then PC := 30
	26	[10354]	JMP      	30 ; PC := 30
	27	[10354]	GETTABLE 	R2 R0 K8 ; R2 := R0["IsWyrmius"]
	28	[10354]	TEST     	R2 0 ; if not R2 then PC := 60
	29	[10354]	JMP      	60 ; PC := 60
	30	[10355]	GETGLOBAL	R2 K9 ; R2 := 0x34291f5c
	31	[10355]	GETTABLE 	R2 R2 K10 ; R2 := R2[0x68d83431]
	32	[10355]	CALL     	R2 1 2 ; R2 := R2()
	33	[10356]	GETGLOBAL	R3 K11 ; R3 := 0x0032441c
	34	[10356]	GETUPVAL 	R4 U2 ; R4 := U2
	35	[10356]	GETTABLE 	R4 R4 K13 ; R4 := R4[0x06d055f9]
	36	[10356]	GETTABLE 	R5 R0 K7 ; R5 := R0["IsFlappy"]
	37	[10356]	LOADK    	R6 K14 ; R6 := "flappy"
	38	[10356]	LOADK    	R7 K15 ; R7 := "wyrmius"
	39	[10356]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	40	[10356]	SETTABLE 	R3 K12 R4 ; R3["PlayingMiniGame"] := R4
	41	[10357]	SELF     	R3 R2 K16 ; R4 := R2; R3 := R2[0x8623cf14]
	42	[10357]	GETUPVAL 	R5 U2 ; R5 := U2
	43	[10357]	GETTABLE 	R5 R5 K13 ; R5 := R5[0x06d055f9]
	44	[10357]	GETTABLE 	R6 R0 K7 ; R6 := R0["IsFlappy"]
	45	[10357]	GETGLOBAL	R7 K17 ; R7 := 0x184afc30
	46	[10357]	GETGLOBAL	R8 K18 ; R8 := 0x2e09b1e6
	47	[10357]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	48	[10357]	SELF     	R5 R5 K19 ; R6 := R5; R5 := R5[0xed4e0128]
	49	[10357]	CALL     	R5 2 0 ; R5,... := R5(R6)
	50	[10357]	CALL     	R3 0 1 ; R3(R4,...)
	51	[10358]	SETTABLE 	R2 K20 K21 ; R2["migrateServer"] := false
	52	[10359]	GETGLOBAL	R3 K9 ; R3 := 0x34291f5c
	53	[10359]	GETTABLE 	R3 R3 K22 ; R3 := R3[0x4e0a1dfc]
	54	[10359]	MOVE     	R4 R2 ; R4 := R2
	55	[10359]	CALL     	R3 2 1 ; R3(R4)
	56	[10360]	GETGLOBAL	R3 K23 ; R3 := 0xae91e43b
	57	[10360]	SELF     	R3 R3 K24 ; R4 := R3; R3 := R3[0x32302b4a]
	58	[10360]	CALL     	R3 2 1 ; R3(R4)
	59	[10361]	RETURN   	R0 1 ; return 
	60	[10364]	GETGLOBAL	R3 K2 ; R3 := mSelected
	61	[10364]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	62	[10364]	EQ       	1 R3 K5 ; if R3 == nil then PC := 267
	63	[10364]	JMP      	267 ; PC := 267
	64	[10364]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	65	[10364]	GETGLOBAL	R4 K25 ; R4 := 0x25d99d89
	66	[10364]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[10364]	TEST     	R3 1 ; if R3 then PC := 267
	68	[10364]	JMP      	267 ; PC := 267
	69	[10365]	GETGLOBAL	R3 K2 ; R3 := mSelected
	70	[10365]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	71	[10365]	GETTABLE 	R4 R0 K4 ; R4 := R0["ConfigSlot"]
	72	[10365]	SETTABLE 	R3 K6 R4 ; R3["mCustSlot"] := R4
	73	[10368]	GETGLOBAL	R3 K2 ; R3 := mSelected
	74	[10368]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	75	[10368]	GETTABLE 	R3 R3 K26 ; R3 := R3["EquippedItem"]
	76	[10368]	EQ       	1 R3 K5 ; if R3 == nil then PC := 95
	77	[10368]	JMP      	95 ; PC := 95
	78	[10369]	GETGLOBAL	R3 K2 ; R3 := mSelected
	79	[10369]	GETTABLE 	R3 R3 K3 ; R3 := R3["Element"]
	80	[10369]	GETGLOBAL	R4 K2 ; R4 := mSelected
	81	[10369]	GETTABLE 	R4 R4 K3 ; R4 := R4["Element"]
	82	[10369]	GETUPVAL 	R5 U3 ; R5 := U3
	83	[10369]	GETGLOBAL	R6 K2 ; R6 := mSelected
	84	[10369]	GETTABLE 	R6 R6 K3 ; R6 := R6["Element"]
	85	[10369]	OP_LOADBOOL	R7 1 0 ; R7 := true
	86	[10369]	CALL     	R5 3 3 ; R5,R6 := R5(R6,R7)
	87	[10369]	SETTABLE 	R4 K28 R6 ; R4["BackupCustomization"] := R6
	88	[10369]	SETTABLE 	R3 K27 R5 ; R3["Customization"] := R5
	89	[10370]	GETGLOBAL	R3 K29 ; R3 := mLists
	90	[10370]	GETTABLE 	R3 R3 K30 ; R3 := R3["mLoadOutList"]
	91	[10370]	GETTABLE 	R3 R3 K31 ; R3 := R3[0x101bab76]
	92	[10370]	GETGLOBAL	R4 K2 ; R4 := mSelected
	93	[10370]	GETTABLE 	R4 R4 K3 ; R4 := R4["Element"]
	94	[10370]	CALL     	R3 2 1 ; R3(R4)
	95	[10374]	GETGLOBAL	R3 K32 ; R3 := mCurrentLoadout
	96	[10374]	GETGLOBAL	R4 K2 ; R4 := mSelected
	97	[10374]	GETTABLE 	R4 R4 K3 ; R4 := R4["Element"]
	98	[10374]	GETTABLE 	R4 R4 K33 ; R4 := R4["LoadOutType"]
	99	[10374]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	100	[10374]	SELF     	R3 R3 K34 ; R4 := R3; R3 := R3[0x2abbe722]
	101	[10374]	GETGLOBAL	R5 K2 ; R5 := mSelected
	102	[10374]	GETTABLE 	R5 R5 K3 ; R5 := R5["Element"]
	103	[10374]	GETTABLE 	R5 R5 K35 ; R5 := R5["LoadOutId"]
	104	[10374]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	105	[10375]	GETTABLE 	R4 R3 K36 ; R4 := R3["mItemId"]
	106	[10375]	GETGLOBAL	R5 K2 ; R5 := mSelected
	107	[10375]	GETTABLE 	R5 R5 K3 ; R5 := R5["Element"]
	108	[10375]	GETTABLE 	R5 R5 K38 ; R5 := R5["UID"]
	109	[10375]	SETTABLE 	R4 K37 R5 ; R4["mId"] := R5
	110	[10376]	GETGLOBAL	R4 K2 ; R4 := mSelected
	111	[10376]	GETTABLE 	R4 R4 K3 ; R4 := R4["Element"]
	112	[10376]	GETTABLE 	R4 R4 K6 ; R4 := R4["mCustSlot"]
	113	[10376]	SETTABLE 	R3 K6 R4 ; R3["mCustSlot"] := R4
	114	[10377]	GETGLOBAL	R4 K32 ; R4 := mCurrentLoadout
	115	[10377]	GETGLOBAL	R5 K2 ; R5 := mSelected
	116	[10377]	GETTABLE 	R5 R5 K3 ; R5 := R5["Element"]
	117	[10377]	GETTABLE 	R5 R5 K33 ; R5 := R5["LoadOutType"]
	118	[10377]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	119	[10377]	SELF     	R4 R4 K39 ; R5 := R4; R4 := R4[0xffca321e]
	120	[10377]	GETGLOBAL	R6 K2 ; R6 := mSelected
	121	[10377]	GETTABLE 	R6 R6 K3 ; R6 := R6["Element"]
	122	[10377]	GETTABLE 	R6 R6 K35 ; R6 := R6["LoadOutId"]
	123	[10377]	MOVE     	R7 R3 ; R7 := R3
	124	[10377]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	125	[10378]	GETGLOBAL	R4 K40 ; R4 := mInventory
	126	[10378]	SELF     	R4 R4 K41 ; R5 := R4; R4 := R4[0x6beb8ae1]
	127	[10378]	GETGLOBAL	R6 K2 ; R6 := mSelected
	128	[10378]	GETTABLE 	R6 R6 K3 ; R6 := R6["Element"]
	129	[10378]	GETTABLE 	R6 R6 K33 ; R6 := R6["LoadOutType"]
	130	[10378]	GETGLOBAL	R7 K32 ; R7 := mCurrentLoadout
	131	[10378]	GETGLOBAL	R8 K2 ; R8 := mSelected
	132	[10378]	GETTABLE 	R8 R8 K3 ; R8 := R8["Element"]
	133	[10378]	GETTABLE 	R8 R8 K33 ; R8 := R8["LoadOutType"]
	134	[10378]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	135	[10378]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	136	[10381]	GETUPVAL 	R4 U4 ; R4 := U4
	137	[10381]	CALL     	R4 1 1 ; R4()
	138	[10388]	GETGLOBAL	R4 K29 ; R4 := mLists
	139	[10388]	GETTABLE 	R4 R4 K42 ; R4 := R4["mCosmeticsList"]
	140	[10388]	SELF     	R4 R4 K43 ; R5 := R4; R4 := R4[0x71e9ac81]
	141	[10388]	LOADNIL  	R6 R6 ; R6 := nil
	142	[10388]	OP_LOADBOOL	R7 1 0 ; R7 := true
	143	[10388]	OP_LOADBOOL	R8 1 0 ; R8 := true
	144	[10388]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	145	[10391]	GETGLOBAL	R4 K25 ; R4 := 0x25d99d89
	146	[10391]	SELF     	R4 R4 K44 ; R5 := R4; R4 := R4[0x400b84a1]
	147	[10391]	GETGLOBAL	R6 K2 ; R6 := mSelected
	148	[10391]	GETTABLE 	R6 R6 K3 ; R6 := R6["Element"]
	149	[10391]	GETTABLE 	R6 R6 K33 ; R6 := R6["LoadOutType"]
	150	[10391]	GETGLOBAL	R7 K32 ; R7 := mCurrentLoadout
	151	[10391]	GETGLOBAL	R8 K2 ; R8 := mSelected
	152	[10391]	GETTABLE 	R8 R8 K3 ; R8 := R8["Element"]
	153	[10391]	GETTABLE 	R8 R8 K33 ; R8 := R8["LoadOutType"]
	154	[10391]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	155	[10391]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	156	[10392]	GETGLOBAL	R4 K25 ; R4 := 0x25d99d89
	157	[10392]	SELF     	R4 R4 K45 ; R5 := R4; R4 := R4[0x121ec068]
	158	[10392]	CALL     	R4 2 1 ; R4(R5)
	159	[10394]	GETGLOBAL	R4 K46 ; R4 := _T
	160	[10394]	GETTABLE 	R4 R4 K47 ; R4 := R4["MenuSuitAvatar"]
	161	[10395]	SELF     	R5 R4 K48 ; R6 := R4; R5 := R4[0xde321e6f]
	162	[10395]	CALL     	R5 2 2 ; R5 := R5(R6)
	163	[10395]	SELF     	R5 R5 K49 ; R6 := R5; R5 := R5[0x374b084a]
	164	[10395]	CALL     	R5 2 1 ; R5(R6)
	165	[10397]	GETUPVAL 	R5 U5 ; R5 := U5
	166	[10397]	GETUPVAL 	R6 U6 ; R6 := U6
	167	[10397]	GETTABLE 	R6 R6 K50 ; R6 := R6["Current"]
	168	[10397]	EQ       	1 R6 K52 ; if R6 == 2.000000 then PC := 171
	169	[10397]	JMP      	171 ; PC := 171
	170	[10397]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 171
	171	[10397]	OP_LOADBOOL	R6 1 0 ; R6 := true
	172	[10397]	CALL     	R5 2 1 ; R5(R6)
	173	[10398]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	174	[10398]	GETUPVAL 	R6 U7 ; R6 := U7
	175	[10398]	CALL     	R5 2 2 ; R5 := R5(R6)
	176	[10398]	TEST     	R5 0 ; if not R5 then PC := 183
	177	[10398]	JMP      	183 ; PC := 183
	178	[10399]	SELF     	R5 R4 K48 ; R6 := R4; R5 := R4[0xde321e6f]
	179	[10399]	CALL     	R5 2 2 ; R5 := R5(R6)
	180	[10399]	SELF     	R5 R5 K53 ; R6 := R5; R5 := R5[0x0c277ae1]
	181	[10399]	OP_LOADBOOL	R7 0 0 ; R7 := false
	182	[10399]	CALL     	R5 3 1 ; R5(R6,R7)
	183	[10401]	OP_LOADBOOL	R5 1 0 ; R5 := true
	184	[10401]	SETGLOBALHASH	R5 K54 ; mRePopulateCosmetics := R5
	185	[10403]	GETUPVAL 	R5 U8 ; R5 := U8
	186	[10403]	CALL     	R5 1 2 ; R5 := R5()
	187	[10403]	TEST     	R5 1 ; if R5 then PC := 208
	188	[10403]	JMP      	208 ; PC := 208
	189	[10403]	GETGLOBAL	R5 K46 ; R5 := _T
	190	[10403]	GETTABLE 	R5 R5 K55 ; R5 := R5["mSentinelMode"]
	191	[10403]	TEST     	R5 0 ; if not R5 then PC := 208
	192	[10403]	JMP      	208 ; PC := 208
	193	[10404]	GETGLOBAL	R5 K25 ; R5 := 0x25d99d89
	194	[10404]	SELF     	R5 R5 K56 ; R6 := R5; R5 := R5[0x3c6b0324]
	195	[10404]	CALL     	R5 2 2 ; R5 := R5(R6)
	196	[10404]	TEST     	R5 1 ; if R5 then PC := 203
	197	[10404]	JMP      	203 ; PC := 203
	198	[10404]	GETGLOBAL	R5 K25 ; R5 := 0x25d99d89
	199	[10404]	SELF     	R5 R5 K57 ; R6 := R5; R5 := R5[0x9f91f49d]
	200	[10404]	CALL     	R5 2 2 ; R5 := R5(R6)
	201	[10404]	TEST     	R5 0 ; if not R5 then PC := 208
	202	[10404]	JMP      	208 ; PC := 208
	203	[10405]	LOADK    	R5 := 1.000000
	204	[10405]	SETUPVAL 	R5 U9 ; U9 := R5
	205	[10406]	GETUPVAL 	R5 U10 ; R5 := U10
	206	[10406]	GETTABLE 	R5 R5 K58 ; R5 := R5[0xd4c67576]
	207	[10406]	CALL     	R5 1 1 ; R5()
	208	[10410]	GETGLOBAL	R5 K46 ; R5 := _T
	209	[10410]	SETTABLE 	R5 K59 K60 ; R5["LoadoutSaveRequired"] := true
	210	[10412]	GETUPVAL 	R5 U11 ; R5 := U11
	211	[10412]	MOVE     	R6 R4 ; R6 := R4
	212	[10412]	GETGLOBAL	R7 K2 ; R7 := mSelected
	213	[10412]	GETTABLE 	R7 R7 K3 ; R7 := R7["Element"]
	214	[10412]	GETTABLE 	R7 R7 K33 ; R7 := R7["LoadOutType"]
	215	[10412]	GETGLOBAL	R8 K2 ; R8 := mSelected
	216	[10412]	GETTABLE 	R8 R8 K3 ; R8 := R8["Element"]
	217	[10412]	GETTABLE 	R8 R8 K35 ; R8 := R8["LoadOutId"]
	218	[10412]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	219	[10415]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	220	[10415]	GETGLOBAL	R6 K46 ; R6 := _T
	221	[10415]	GETTABLE 	R6 R6 K47 ; R6 := R6["MenuSuitAvatar"]
	222	[10415]	CALL     	R5 2 2 ; R5 := R5(R6)
	223	[10415]	TEST     	R5 1 ; if R5 then PC := 233
	224	[10415]	JMP      	233 ; PC := 233
	225	[10416]	GETGLOBAL	R5 K46 ; R5 := _T
	226	[10416]	GETGLOBAL	R6 K46 ; R6 := _T
	227	[10416]	GETTABLE 	R6 R6 K47 ; R6 := R6["MenuSuitAvatar"]
	228	[10416]	SELF     	R6 R6 K48 ; R7 := R6; R6 := R6[0xde321e6f]
	229	[10416]	CALL     	R6 2 2 ; R6 := R6(R7)
	230	[10416]	SELF     	R6 R6 K62 ; R7 := R6; R6 := R6[0x2676deee]
	231	[10416]	CALL     	R6 2 2 ; R6 := R6(R7)
	232	[10416]	SETTABLE 	R5 K61 R6 ; R5["MenuSentinel"] := R6
	233	[10418]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	234	[10418]	GETGLOBAL	R6 K46 ; R6 := _T
	235	[10418]	GETTABLE 	R6 R6 K61 ; R6 := R6["MenuSentinel"]
	236	[10418]	CALL     	R5 2 2 ; R5 := R5(R6)
	237	[10418]	TEST     	R5 1 ; if R5 then PC := 267
	238	[10418]	JMP      	267 ; PC := 267
	239	[10419]	GETGLOBAL	R5 K46 ; R5 := _T
	240	[10419]	GETTABLE 	R5 R5 K61 ; R5 := R5["MenuSentinel"]
	241	[10419]	SELF     	R5 R5 K63 ; R6 := R5; R5 := R5[0xd749da12]
	242	[10419]	OP_LOADBOOL	R7 0 0 ; R7 := false
	243	[10419]	CALL     	R5 3 1 ; R5(R6,R7)
	244	[10421]	GETGLOBAL	R5 K46 ; R5 := _T
	245	[10421]	GETTABLE 	R5 R5 K64 ; R5 := R5["InSimulacrum"]
	246	[10421]	TEST     	R5 0 ; if not R5 then PC := 267
	247	[10421]	JMP      	267 ; PC := 267
	248	[10422]	GETGLOBAL	R5 K46 ; R5 := _T
	249	[10422]	GETTABLE 	R5 R5 K61 ; R5 := R5["MenuSentinel"]
	250	[10422]	SELF     	R5 R5 K65 ; R6 := R5; R5 := R5[0x23d6100a]
	251	[10422]	OP_LOADBOOL	R7 0 0 ; R7 := false
	252	[10422]	CALL     	R5 3 1 ; R5(R6,R7)
	253	[10423]	GETGLOBAL	R5 K46 ; R5 := _T
	254	[10423]	GETTABLE 	R5 R5 K61 ; R5 := R5["MenuSentinel"]
	255	[10423]	SELF     	R5 R5 K48 ; R6 := R5; R5 := R5[0xde321e6f]
	256	[10423]	CALL     	R5 2 2 ; R5 := R5(R6)
	257	[10423]	SELF     	R5 R5 K66 ; R6 := R5; R5 := R5[0xf7d48ee0]
	258	[10423]	CALL     	R5 2 2 ; R5 := R5(R6)
	259	[10424]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	260	[10424]	MOVE     	R7 R5 ; R7 := R5
	261	[10424]	CALL     	R6 2 2 ; R6 := R6(R7)
	262	[10424]	TEST     	R6 1 ; if R6 then PC := 267
	263	[10424]	JMP      	267 ; PC := 267
	264	[10425]	SELF     	R6 R5 K67 ; R7 := R5; R6 := R5[0x1bf26251]
	265	[10425]	OP_LOADBOOL	R8 0 0 ; R8 := false
	266	[10425]	CALL     	R6 3 1 ; R6(R7,R8)
	267	[10430]	RETURN   	R0 1 ; return 

function #151 <?:10432,10515> (178 instructions, 712 bytes at 00000211148242B0)
1 param, 20 slots, 7 upvalues, 0 locals, 32 constants, 0 functions
	1	[10433]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[10433]	CALL     	R1 1 2 ; R1 := R1()
	3	[10434]	GETGLOBAL	R2 K0 ; R2 := mInventory
	4	[10434]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x4b28a14c]
	5	[10434]	MOVE     	R4 R1 ; R4 := R1
	6	[10434]	GETTABLE 	R5 R0 K2 ; R5 := R0["mItemId"]
	7	[10434]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	8	[10435]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 20
	9	[10435]	JMP      	20 ; PC := 20
	10	[10437]	GETGLOBAL	R2 K0 ; R2 := mInventory
	11	[10437]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x4b28a14c]
	12	[10437]	LOADK    	R4 := 1.000000
	13	[10437]	GETTABLE 	R5 R0 K2 ; R5 := R0["mItemId"]
	14	[10437]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	15	[10438]	GETGLOBAL	R2 K0 ; R2 := mInventory
	16	[10438]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x4b28a14c]
	17	[10438]	LOADK    	R4 := 7.000000
	18	[10438]	GETTABLE 	R5 R0 K2 ; R5 := R0["mItemId"]
	19	[10438]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[10444]	GETGLOBAL	R2 K0 ; R2 := mInventory
	21	[10444]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x566259e1]
	22	[10444]	LOADK    	R4 := 1.000000
	23	[10444]	GETTABLE 	R5 R0 K2 ; R5 := R0["mItemId"]
	24	[10444]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	25	[10445]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x2abbe722]
	26	[10445]	LOADK    	R5 := 0.000000
	27	[10445]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	28	[10446]	LOADNIL  	R4 R5 ; R4 := R5 := nil
	29	[10448]	GETGLOBAL	R6 K0 ; R6 := mInventory
	30	[10448]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xa855881a]
	31	[10448]	CALL     	R6 2 2 ; R6 := R6(R7)
	32	[10449]	LOADK    	R7 := 1.000000
	33	[10449]	LEN      	R8 R6 ; R8 := # R6
	34	[10449]	LOADK    	R9 := 1.000000
	35	[10449]	FORPREP  	R7 66 ; R7 -= R9; PC := 66
	36	[10450]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	37	[10450]	GETTABLE 	R11 R11 K2 ; R11 := R11["mItemId"]
	38	[10450]	GETTABLE 	R11 R11 K8 ; R11 := R11["mId"]
	39	[10450]	GETTABLE 	R12 R3 K2 ; R12 := R3["mItemId"]
	40	[10450]	GETTABLE 	R12 R12 K8 ; R12 := R12["mId"]
	41	[10450]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 44
	42	[10450]	JMP      	44 ; PC := 44
	43	[10451]	GETTABLE 	R4 R6 R10 ; R4 := R6[R10]
	44	[10456]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	45	[10456]	GETTABLE 	R11 R11 K9 ; R11 := R11["mDetails"]
	46	[10456]	GETTABLE 	R11 R11 K10 ; R11 := R11["mStatus"]
	47	[10456]	EQ       	1 R11 K4 ; if R11 == 0.000000 then PC := 54
	48	[10456]	JMP      	54 ; PC := 54
	49	[10457]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	50	[10457]	GETTABLE 	R11 R11 K9 ; R11 := R11["mDetails"]
	51	[10457]	GETTABLE 	R11 R11 K10 ; R11 := R11["mStatus"]
	52	[10457]	EQ       	0 R11 K11 ; if R11 ~= 1.000000 then PC := 55
	53	[10457]	JMP      	55 ; PC := 55
	54	[10460]	GETTABLE 	R5 R6 R10 ; R5 := R6[R10]
	55	[10463]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	56	[10463]	MOVE     	R12 R4 ; R12 := R4
	57	[10463]	CALL     	R11 2 2 ; R11 := R11(R12)
	58	[10463]	TEST     	R11 1 ; if R11 then PC := 66
	59	[10463]	JMP      	66 ; PC := 66
	60	[10463]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	61	[10463]	MOVE     	R12 R5 ; R12 := R5
	62	[10463]	CALL     	R11 2 2 ; R11 := R11(R12)
	63	[10463]	TEST     	R11 1 ; if R11 then PC := 66
	64	[10463]	JMP      	66 ; PC := 66
	65	[10464]	JMP      	67 ; PC := 67
	66	[10449]	FORLOOP  	R7 36 ; R7 += R9; if R7 <= R8 then begin PC := 36; R10 := R7 end
	67	[10468]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	68	[10468]	MOVE     	R12 R5 ; R12 := R5
	69	[10468]	CALL     	R11 2 2 ; R11 := R11(R12)
	70	[10468]	TEST     	R11 1 ; if R11 then PC := 102
	71	[10468]	JMP      	102 ; PC := 102
	72	[10469]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	73	[10469]	MOVE     	R12 R4 ; R12 := R4
	74	[10469]	CALL     	R11 2 2 ; R11 := R11(R12)
	75	[10469]	TEST     	R11 1 ; if R11 then PC := 93
	76	[10469]	JMP      	93 ; PC := 93
	77	[10471]	GETTABLE 	R11 R3 K2 ; R11 := R3["mItemId"]
	78	[10471]	SETTABLE 	R11 K8 K13 ; R11["mId"] := ""
	79	[10472]	SELF     	R11 R2 K14 ; R12 := R2; R11 := R2[0xffca321e]
	80	[10472]	LOADK    	R13 := 0.000000
	81	[10472]	MOVE     	R14 R3 ; R14 := R3
	82	[10472]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	83	[10473]	GETGLOBAL	R11 K0 ; R11 := mInventory
	84	[10473]	SELF     	R11 R11 K15 ; R12 := R11; R11 := R11[0x6beb8ae1]
	85	[10473]	LOADK    	R13 := 1.000000
	86	[10473]	MOVE     	R14 R2 ; R14 := R2
	87	[10473]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	88	[10474]	GETGLOBAL	R11 K16 ; R11 := 0x25d99d89
	89	[10474]	SELF     	R11 R11 K17 ; R12 := R11; R11 := R11[0x400b84a1]
	90	[10474]	LOADK    	R13 := 1.000000
	91	[10474]	MOVE     	R14 R2 ; R14 := R2
	92	[10474]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	93	[10477]	GETUPVAL 	R11 U1 ; R11 := U1
	94	[10477]	GETUPVAL 	R12 U2 ; R12 := U2
	95	[10477]	GETTABLE 	R12 R12 K18 ; R12 := R12["UI_MODE_IN_SPACE_SHIP"]
	96	[10477]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 102
	97	[10477]	JMP      	102 ; PC := 102
	98	[10479]	GETUPVAL 	R11 U3 ; R11 := U3
	99	[10479]	MOVE     	R12 R5 ; R12 := R5
	100	[10479]	GETTABLE 	R13 R5 K19 ; R13 := R5["mItemType"]
	101	[10479]	CALL     	R11 3 1 ; R11(R12,R13)
	102	[10483]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	103	[10483]	MOVE     	R12 R5 ; R12 := R5
	104	[10483]	CALL     	R11 2 2 ; R11 := R11(R12)
	105	[10483]	TEST     	R11 0 ; if not R11 then PC := 127
	106	[10483]	JMP      	127 ; PC := 127
	107	[10483]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	108	[10483]	MOVE     	R12 R4 ; R12 := R4
	109	[10483]	CALL     	R11 2 2 ; R11 := R11(R12)
	110	[10483]	TEST     	R11 1 ; if R11 then PC := 127
	111	[10483]	JMP      	127 ; PC := 127
	112	[10486]	GETUPVAL 	R11 U1 ; R11 := U1
	113	[10486]	GETUPVAL 	R12 U2 ; R12 := U2
	114	[10486]	GETTABLE 	R12 R12 K18 ; R12 := R12["UI_MODE_IN_SPACE_SHIP"]
	115	[10486]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 121
	116	[10486]	JMP      	121 ; PC := 121
	117	[10487]	GETUPVAL 	R11 U3 ; R11 := U3
	118	[10487]	MOVE     	R12 R4 ; R12 := R4
	119	[10487]	GETTABLE 	R13 R4 K19 ; R13 := R4["mItemType"]
	120	[10487]	CALL     	R11 3 1 ; R11(R12,R13)
	121	[10490]	GETGLOBAL	R11 K16 ; R11 := 0x25d99d89
	122	[10490]	SELF     	R11 R11 K20 ; R12 := R11; R11 := R11[0xd03a1fb0]
	123	[10490]	GETTABLE 	R13 R4 K2 ; R13 := R4["mItemId"]
	124	[10490]	GETTABLE 	R13 R13 K8 ; R13 := R13["mId"]
	125	[10490]	LOADK    	R14 K21 ; R14 := "OnRetrievePetFromStasisResults"
	126	[10490]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	127	[10493]	GETGLOBAL	R11 K12 ; R11 := 0x7b998233
	128	[10493]	MOVE     	R12 R4 ; R12 := R4
	129	[10493]	CALL     	R11 2 2 ; R11 := R11(R12)
	130	[10493]	TEST     	R11 0 ; if not R11 then PC := 164
	131	[10493]	JMP      	164 ; PC := 164
	132	[10493]	GETUPVAL 	R11 U1 ; R11 := U1
	133	[10493]	GETUPVAL 	R12 U2 ; R12 := U2
	134	[10493]	GETTABLE 	R12 R12 K18 ; R12 := R12["UI_MODE_IN_SPACE_SHIP"]
	135	[10493]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 164
	136	[10493]	JMP      	164 ; PC := 164
	137	[10494]	LOADNIL  	R11 R11 ; R11 := nil
	138	[10495]	GETGLOBAL	R12 K0 ; R12 := mInventory
	139	[10495]	SELF     	R12 R12 K22 ; R13 := R12; R12 := R12[0x91a3eddf]
	140	[10495]	CALL     	R12 2 2 ; R12 := R12(R13)
	141	[10496]	LOADK    	R13 := 1.000000
	142	[10496]	LEN      	R14 R12 ; R14 := # R12
	143	[10496]	LOADK    	R15 := 1.000000
	144	[10496]	FORPREP  	R13 154 ; R13 -= R15; PC := 154
	145	[10497]	GETTABLE 	R17 R12 R16 ; R17 := R12[R16]
	146	[10497]	GETTABLE 	R17 R17 K2 ; R17 := R17["mItemId"]
	147	[10497]	GETTABLE 	R17 R17 K8 ; R17 := R17["mId"]
	148	[10497]	GETTABLE 	R18 R3 K2 ; R18 := R3["mItemId"]
	149	[10497]	GETTABLE 	R18 R18 K8 ; R18 := R18["mId"]
	150	[10497]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 154
	151	[10497]	JMP      	154 ; PC := 154
	152	[10498]	GETTABLE 	R11 R12 R16 ; R11 := R12[R16]
	153	[10499]	JMP      	155 ; PC := 155
	154	[10496]	FORLOOP  	R13 145 ; R13 += R15; if R13 <= R14 then begin PC := 145; R16 := R13 end
	155	[10503]	GETGLOBAL	R17 K12 ; R17 := 0x7b998233
	156	[10503]	MOVE     	R18 R11 ; R18 := R11
	157	[10503]	CALL     	R17 2 2 ; R17 := R17(R18)
	158	[10503]	TEST     	R17 1 ; if R17 then PC := 164
	159	[10503]	JMP      	164 ; PC := 164
	160	[10504]	GETUPVAL 	R17 U4 ; R17 := U4
	161	[10504]	MOVE     	R18 R11 ; R18 := R11
	162	[10504]	GETTABLE 	R19 R11 K19 ; R19 := R11["mItemType"]
	163	[10504]	CALL     	R17 3 1 ; R17(R18,R19)
	164	[10508]	GETGLOBAL	R17 K23 ; R17 := _T
	165	[10508]	GETTABLE 	R17 R17 K24 ; R17 := R17["loadoutInProgress"]
	166	[10508]	EQ       	0 R17 K25 ; if R17 ~= nil then PC := 170
	167	[10508]	JMP      	170 ; PC := 170
	168	[10509]	GETGLOBAL	R17 K23 ; R17 := _T
	169	[10509]	SETTABLE 	R17 K26 K27 ; R17["LoadoutSaveRequired"] := true
	170	[10512]	GETUPVAL 	R17 U5 ; R17 := U5
	171	[10512]	GETTABLE 	R17 R17 K28 ; R17 := R17[0x5f6897e6]
	172	[10512]	CALL     	R17 1 1 ; R17()
	173	[10514]	GETUPVAL 	R17 U6 ; R17 := U6
	174	[10514]	GETTABLE 	R17 R17 K29 ; R17 := R17[0x659d451f]
	175	[10514]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	176	[10514]	GETTABLE 	R18 R18 K31 ; R18 := R18["UISound_SweetenerTwo"]
	177	[10514]	CALL     	R17 2 1 ; R17(R18)
	178	[10515]	RETURN   	R0 1 ; return 

function #152 <?:10517,10519> (4 instructions, 16 bytes at 0000021114824B10)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[10518]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[10518]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x5f6897e6]
	3	[10518]	CALL     	R0 1 1 ; R0()
	4	[10519]	RETURN   	R0 1 ; return 

function #153 <?:10521,10548> (57 instructions, 228 bytes at 0000021114824C00)
2 params, 11 slots, 7 upvalues, 0 locals, 20 constants, 1 function
	1	[10522]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[10522]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[10522]	GETTABLE 	R3 R3 K0 ; R3 := R3["SELECTING_PART"]
	4	[10522]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 7
	5	[10522]	JMP      	7 ; PC := 7
	6	[10523]	RETURN   	R0 1 ; return 
	7	[10526]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[10526]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x659d451f]
	9	[10526]	GETGLOBAL	R3 K2 ; R3 := 0x0032441c
	10	[10526]	GETTABLE 	R3 R3 K3 ; R3 := R3["UISound_ButtonSelect"]
	11	[10526]	CALL     	R2 2 1 ; R2(R3)
	12	[10528]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	13	[10528]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x0c33ebb2]
	14	[10528]	LOADK    	R4 K6 ; R4 := "_root"
	15	[10528]	LOADK    	R5 K7 ; R5 := "suitRotationX"
	16	[10528]	LOADK    	R6 := 0.000000
	17	[10528]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	18	[10529]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	19	[10529]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x42b04007]
	20	[10529]	GETUPVAL 	R4 U2 ; R4 := U2
	21	[10529]	GETTABLE 	R4 R4 K9 ; R4 := R4[0x06d055f9]
	22	[10529]	EQ       	0 R0 K10 ; if R0 ~= nil then PC := 25
	23	[10529]	JMP      	25 ; PC := 25
	24	[10529]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 25
	25	[10529]	OP_LOADBOOL	R5 1 0 ; R5 := true
	26	[10529]	MOVE     	R6 R0 ; R6 := R0
	27	[10529]	LOADK    	R7 K11 ; R7 := "/Lotus/Language/Menu/Loadout_Change"
	28	[10529]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	29	[10529]	OP_LOADBOOL	R5 1 0 ; R5 := true
	30	[10529]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	31	[10530]	GETUPVAL 	R3 U3 ; R3 := U3
	32	[10530]	GETTABLE 	R3 R3 K12 ; R3 := R3["Current"]
	33	[10530]	EQ       	0 R3 K14 ; if R3 ~= 2.000000 then PC := 43
	34	[10530]	JMP      	43 ; PC := 43
	35	[10531]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	36	[10531]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x42b04007]
	37	[10531]	LOADK    	R5 K15 ; R5 := "<CONCLAVE>"
	38	[10531]	OP_LOADBOOL	R6 1 0 ; R6 := true
	39	[10531]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	40	[10531]	LOADK    	R4 K16 ; R4 := " "
	41	[10531]	MOVE     	R5 R2 ; R5 := R2
	42	[10531]	CONCAT   	R2 R3 R5 ; R2 := R3 .. R4 .. R5
	43	[10545]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	44	[10545]	MOVE     	R0 R1 ; R0 := R1
	45	[10545]	GETUPVAL 	R0 U4 ; R0 := U4
	46	[10547]	GETUPVAL 	R4 U5 ; R4 := U5
	47	[10547]	GETTABLE 	R4 R4 K18 ; R4 := R4[0x69d0e4da]
	48	[10547]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	49	[10547]	OP_LOADBOOL	R6 1 0 ; R6 := true
	50	[10547]	GETGLOBAL	R7 K19 ; R7 := 0x25d99d89
	51	[10547]	GETUPVAL 	R8 U6 ; R8 := U6
	52	[10547]	CALL     	R8 1 2 ; R8 := R8()
	53	[10547]	MOVE     	R9 R3 ; R9 := R3
	54	[10547]	MOVE     	R10 R2 ; R10 := R2
	55	[10547]	CALL     	R4 7 2 ; R4 := R4(R5,R6,R7,R8,R9,R10)
	56	[10547]	SETGLOBALHASH	R4 K17 ; mChildMovie := R4
	57	[10548]	RETURN   	R0 1 ; return 

function #154 <?:10550,10552> (3 instructions, 12 bytes at 0000021114825180)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[10551]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[10551]	CALL     	R0 1 1 ; R0()
	3	[10552]	RETURN   	R0 1 ; return 

function #155 <?:10554,10590> (92 instructions, 368 bytes at 0000021114825250)
1 param, 7 slots, 5 upvalues, 0 locals, 21 constants, 0 functions
	1	[10555]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[10555]	TEST     	R1 0 ; if not R1 then PC := 5
	3	[10555]	JMP      	5 ; PC := 5
	4	[10556]	RETURN   	R0 1 ; return 
	5	[10559]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[10559]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[10559]	GETTABLE 	R2 R2 K1 ; R2 := R2["CUSTOMIZING_SKINS"]
	8	[10559]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 43
	9	[10559]	JMP      	43 ; PC := 43
	10	[10559]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	11	[10559]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[10559]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[10559]	TEST     	R1 1 ; if R1 then PC := 43
	14	[10559]	JMP      	43 ; PC := 43
	15	[10560]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[10560]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[10560]	GETTABLE 	R2 R2 K3 ; R2 := R2["SELECTING_PART"]
	18	[10560]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 42
	19	[10560]	JMP      	42 ; PC := 42
	20	[10561]	EQ       	0 R0 K4 ; if R0 ~= 1.000000 then PC := 30
	21	[10561]	JMP      	30 ; PC := 30
	22	[10561]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	23	[10561]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x1467d5f4]
	24	[10561]	CALL     	R1 1 2 ; R1 := R1()
	25	[10561]	TEST     	R1 1 ; if R1 then PC := 30
	26	[10561]	JMP      	30 ; PC := 30
	27	[10562]	GETUPVAL 	R1 U3 ; R1 := U3
	28	[10562]	CALL     	R1 1 1 ; R1()
	29	[10562]	JMP      	42 ; PC := 42
	30	[10563]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	31	[10563]	GETGLOBAL	R2 K7 ; R2 := mLists
	32	[10563]	GETTABLE 	R2 R2 K8 ; R2 := R2["mLoadOutCategories"]
	33	[10563]	CALL     	R1 2 2 ; R1 := R1(R2)
	34	[10563]	TEST     	R1 1 ; if R1 then PC := 42
	35	[10563]	JMP      	42 ; PC := 42
	36	[10565]	GETGLOBAL	R1 K7 ; R1 := mLists
	37	[10565]	GETTABLE 	R1 R1 K8 ; R1 := R1["mLoadOutCategories"]
	38	[10565]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xe0077a96]
	39	[10565]	MOVE     	R3 R0 ; R3 := R0
	40	[10565]	OP_LOADBOOL	R4 1 0 ; R4 := true
	41	[10565]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	42	[10569]	RETURN   	R0 1 ; return 
	43	[10571]	LOADNIL  	R1 R1 ; R1 := nil
	44	[10572]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	45	[10572]	GETGLOBAL	R3 K10 ; R3 := mSelected
	46	[10572]	GETTABLE 	R3 R3 K11 ; R3 := R3["Element"]
	47	[10572]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[10572]	TEST     	R2 1 ; if R2 then PC := 53
	49	[10572]	JMP      	53 ; PC := 53
	50	[10573]	GETGLOBAL	R2 K10 ; R2 := mSelected
	51	[10573]	GETTABLE 	R2 R2 K11 ; R2 := R2["Element"]
	52	[10573]	GETTABLE 	R1 R2 K12 ; R1 := R2["EquippedItem"]
	53	[10575]	LOADK    	R2 := 3.000000
	54	[10576]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	55	[10576]	MOVE     	R4 R1 ; R4 := R1
	56	[10576]	CALL     	R3 2 2 ; R3 := R3(R4)
	57	[10576]	TEST     	R3 1 ; if R3 then PC := 62
	58	[10576]	JMP      	62 ; PC := 62
	59	[10577]	SELF     	R3 R1 K13 ; R4 := R1; R3 := R1[0xe1471700]
	60	[10577]	CALL     	R3 2 2 ; R3 := R3(R4)
	61	[10577]	MOVE     	R2 R3 ; R2 := R3
	62	[10579]	GETGLOBAL	R3 K10 ; R3 := mSelected
	63	[10579]	GETTABLE 	R3 R3 K11 ; R3 := R3["Element"]
	64	[10579]	EQ       	1 R3 K14 ; if R3 == nil then PC := 87
	65	[10579]	JMP      	87 ; PC := 87
	66	[10579]	GETGLOBAL	R3 K10 ; R3 := mSelected
	67	[10579]	GETTABLE 	R3 R3 K11 ; R3 := R3["Element"]
	68	[10579]	GETTABLE 	R3 R3 K15 ; R3 := R3["mCustSlot"]
	69	[10579]	EQ       	1 R3 K14 ; if R3 == nil then PC := 87
	70	[10579]	JMP      	87 ; PC := 87
	71	[10580]	GETGLOBAL	R3 K10 ; R3 := mSelected
	72	[10580]	GETTABLE 	R3 R3 K11 ; R3 := R3["Element"]
	73	[10580]	GETTABLE 	R3 R3 K15 ; R3 := R3["mCustSlot"]
	74	[10580]	ADD      	R3 R3 R0 ; R3 := R3 + R0
	75	[10581]	SUB      	R4 R2 K4 ; R4 := R2 - 1.000000
	76	[10581]	LT       	0 R4 R3 ; if R4 >= R3 then PC := 80
	77	[10581]	JMP      	80 ; PC := 80
	78	[10582]	LOADK    	R3 := 0.000000
	79	[10582]	JMP      	83 ; PC := 83
	80	[10583]	LT       	0 R3 K16 ; if R3 >= 0.000000 then PC := 83
	81	[10583]	JMP      	83 ; PC := 83
	82	[10584]	SUB      	R3 R2 K4 ; R3 := R2 - 1.000000
	83	[10587]	GETUPVAL 	R4 U2 ; R4 := U2
	84	[10587]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0x20c43dc8]
	85	[10587]	MOVE     	R6 R3 ; R6 := R3
	86	[10587]	CALL     	R4 3 1 ; R4(R5,R6)
	87	[10589]	GETUPVAL 	R4 U4 ; R4 := U4
	88	[10589]	GETTABLE 	R4 R4 K18 ; R4 := R4[0x659d451f]
	89	[10589]	GETGLOBAL	R5 K19 ; R5 := 0x0032441c
	90	[10589]	GETTABLE 	R5 R5 K20 ; R5 := R5["UISound_DialogOpen"]
	91	[10589]	CALL     	R4 2 1 ; R4(R5)
	92	[10590]	RETURN   	R0 1 ; return 

function #156 <?:10592,10596> (8 instructions, 32 bytes at 0000021114825740)
0 params, 2 slots, 3 upvalues, 0 locals, 1 constant, 0 functions
	1	[10593]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[10593]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[10593]	GETTABLE 	R1 R1 K0 ; R1 := R1["SELECTING_PART"]
	4	[10593]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 8
	5	[10593]	JMP      	8 ; PC := 8
	6	[10594]	GETUPVAL 	R0 U2 ; R0 := U2
	7	[10594]	CALL     	R0 1 1 ; R0()
	8	[10596]	RETURN   	R0 1 ; return 

function #157 <?:10599,10629> (42 instructions, 168 bytes at 0000021114825850)
1 param, 5 slots, 5 upvalues, 0 locals, 15 constants, 2 functions
	1	[10600]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[10600]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[10601]	SETGLOBALHASH	R0 K1 ; mViewingConsumables := R0
	4	[10602]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[10602]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[10602]	GETTABLE 	R2 R2 K2 ; R2 := R2["BROWSING_CONSUMABLES"]
	7	[10602]	CALL     	R1 2 1 ; R1(R2)
	8	[10603]	GETGLOBAL	R1 K3 ; R1 := 0x9ba7909f
	9	[10603]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x5374b92e]
	10	[10603]	GETGLOBAL	R3 K5 ; R3 := 0x6af348d2
	11	[10603]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[10603]	TEST     	R1 1 ; if R1 then PC := 19
	13	[10603]	JMP      	19 ; PC := 19
	14	[10604]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	15	[10604]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1fd6abd0]
	16	[10604]	GETGLOBAL	R3 K5 ; R3 := 0x6af348d2
	17	[10604]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	18	[10604]	SETGLOBALHASH	R1 K6 ; mConsumablesInstance := R1
	19	[10606]	GETGLOBAL	R1 K9 ; R1 := _T
	20	[10606]	GETTABLE 	R1 R1 K10 ; R1 := R1[0x680ea051]
	21	[10606]	TEST     	R0 0 ; if not R0 then PC := 26
	22	[10606]	JMP      	26 ; PC := 26
	23	[10606]	LOADK    	R2 := 1.000000
	24	[10606]	TEST     	R2 1 ; if R2 then PC := 27
	25	[10606]	JMP      	27 ; PC := 27
	26	[10606]	LOADK    	R2 := 2.000000
	27	[10606]	GETGLOBAL	R3 K11 ; R3 := 0xb009bbc6
	28	[10606]	LOADK    	R4 K12 ; R4 := "/Lotus/Types/Game/Store/ProductsManifest"
	29	[10606]	CALL     	R3 2 0 ; R3,... := R3(R4)
	30	[10606]	CALL     	R1 0 1 ; R1(R2,...)
	31	[10608]	GETGLOBAL	R1 K9 ; R1 := _T
	32	[10613]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	33	[10613]	GETUPVAL 	R0 U2 ; R0 := U2
	34	[10613]	SETTABLE 	R1 K13 R2 ; R1["ConsumablesOverlayClosedCallback"] := R2
	35	[10614]	GETGLOBAL	R1 K9 ; R1 := _T
	36	[10628]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	37	[10628]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[10628]	GETUPVAL 	R0 U1 ; R0 := U1
	39	[10628]	GETUPVAL 	R0 U3 ; R0 := U3
	40	[10628]	GETUPVAL 	R0 U4 ; R0 := U4
	41	[10628]	SETTABLE 	R1 K14 R2 ; R1["ConsumablesOverlayElementSelectedCallback"] := R2
	42	[10629]	RETURN   	R0 1 ; return 

function #158 <?:10631,10649> (44 instructions, 176 bytes at 00000211342D8EB0)
0 params, 4 slots, 5 upvalues, 0 locals, 17 constants, 1 function
	1	[10632]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[10632]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[10632]	GETTABLE 	R1 R1 K2 ; R1 := R1["PolarityTree"]
	4	[10632]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[10632]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[10632]	JMP      	8 ; PC := 8
	7	[10633]	RETURN   	R0 1 ; return 
	8	[10635]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[10635]	SETGLOBALHASH	R0 K3 ; mInputBlocked := R0
	10	[10636]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[10636]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x6bfeac2e]
	12	[10636]	CALL     	R0 2 1 ; R0(R1)
	13	[10637]	GETUPVAL 	R0 U1 ; R0 := U1
	14	[10637]	GETUPVAL 	R1 U2 ; R1 := U2
	15	[10637]	GETTABLE 	R1 R1 K5 ; R1 := R1["BROWSING_WAY_TREE"]
	16	[10637]	CALL     	R0 2 1 ; R0(R1)
	17	[10638]	GETGLOBAL	R0 K6 ; R0 := 0x9ba7909f
	18	[10638]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x5374b92e]
	19	[10638]	GETGLOBAL	R2 K8 ; R2 := 0x8c2d7fcb
	20	[10638]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	21	[10638]	TEST     	R0 1 ; if R0 then PC := 28
	22	[10638]	JMP      	28 ; PC := 28
	23	[10639]	GETGLOBAL	R0 K10 ; R0 := 0xae91e43b
	24	[10639]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0x1fd6abd0]
	25	[10639]	GETGLOBAL	R2 K8 ; R2 := 0x8c2d7fcb
	26	[10639]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	27	[10639]	SETGLOBALHASH	R0 K9 ; mTennoWayInstance := R0
	28	[10641]	GETGLOBAL	R0 K1 ; R0 := _T
	29	[10646]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	30	[10646]	GETUPVAL 	R0 U3 ; R0 := U3
	31	[10646]	GETUPVAL 	R0 U2 ; R0 := U2
	32	[10646]	GETUPVAL 	R0 U4 ; R0 := U4
	33	[10646]	SETTABLE 	R0 K12 R1 ; R0["TennoWayClosedCallback"] := R1
	34	[10647]	GETGLOBAL	R0 K9 ; R0 := mTennoWayInstance
	35	[10647]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0xe4162eed]
	36	[10647]	LOADK    	R2 K14 ; R2 := "SetCallBack"
	37	[10647]	LOADK    	R3 K12 ; R3 := "TennoWayClosedCallback"
	38	[10647]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	39	[10648]	GETGLOBAL	R0 K9 ; R0 := mTennoWayInstance
	40	[10648]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0xe4162eed]
	41	[10648]	LOADK    	R2 K15 ; R2 := "ShowTreeSelection"
	42	[10648]	LOADK    	R3 K16 ; R3 := ""
	43	[10648]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	44	[10649]	RETURN   	R0 1 ; return 

function #159 <?:10651,10653> (4 instructions, 16 bytes at 00000211342D9380)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[10652]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[10652]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[10652]	CALL     	R0 2 1 ; R0(R1)
	4	[10653]	RETURN   	R0 1 ; return 

function #160 <?:10655,10657> (4 instructions, 16 bytes at 00000211342D9450)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[10656]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[10656]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[10656]	CALL     	R0 2 1 ; R0(R1)
	4	[10657]	RETURN   	R0 1 ; return 

function #161 <?:10659,10669> (21 instructions, 84 bytes at 00000211342D9520)
2 params, 6 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[10660]	TEST     	R0 1 ; if R0 then PC := 8
	2	[10660]	JMP      	8 ; PC := 8
	3	[10661]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	4	[10661]	LOADK    	R3 K1 ; R3 := "OnPvpDefaultLoadoutCreated failed:"
	5	[10661]	MOVE     	R4 R1 ; R4 := R1
	6	[10661]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	7	[10661]	CALL     	R2 2 1 ; R2(R3)
	8	[10664]	GETGLOBAL	R2 K2 ; R2 := _T
	9	[10664]	GETTABLE 	R2 R2 K3 ; R2 := R2["BackgroundMovie"]
	10	[10664]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xe4162eed]
	11	[10664]	LOADK    	R4 K5 ; R4 := "ShowBlockingMessage"
	12	[10664]	LOADK    	R5 K6 ; R5 := "0"
	13	[10664]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	14	[10666]	OP_LOADBOOL	R2 0 0 ; R2 := false
	15	[10666]	SETUPVAL 	R2 U0 ; U0 := R2
	16	[10668]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[10668]	GETTABLE 	R2 R2 K7 ; R2 := R2[0x05eeb9db]
	18	[10668]	GETGLOBAL	R3 K2 ; R3 := _T
	19	[10668]	GETTABLE 	R3 R3 K8 ; R3 := R3["ArsenalState"]
	20	[10668]	CALL     	R2 2 1 ; R2(R3)
	21	[10669]	RETURN   	R0 1 ; return 

function #162 <?:10671,10726> (118 instructions, 472 bytes at 00000211342D9780)
0 params, 21 slots, 3 upvalues, 0 locals, 32 constants, 0 functions
	1	[10673]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[10673]	TEST     	R0 1 ; if R0 then PC := 9
	3	[10673]	JMP      	9 ; PC := 9
	4	[10673]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	5	[10673]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	6	[10673]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[10673]	TEST     	R0 0 ; if not R0 then PC := 11
	8	[10673]	JMP      	11 ; PC := 11
	9	[10674]	OP_LOADBOOL	R0 0 0 ; R0 := false
	10	[10674]	RETURN   	R0 2 ; return R0 
	11	[10677]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	12	[10677]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x626a83c1]
	13	[10677]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[10678]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[10678]	MOVE     	R2 R0 ; R2 := R0
	16	[10678]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[10678]	TEST     	R1 1 ; if R1 then PC := 22
	18	[10678]	JMP      	22 ; PC := 22
	19	[10678]	LEN      	R1 R0 ; R1 := # R0
	20	[10678]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 116
	21	[10678]	JMP      	116 ; PC := 116
	22	[10681]	NEWTABLE 	R1 0 0 ; R1 := {}
	23	[10682]	GETGLOBAL	R2 K4 ; R2 := 0x6c97a788
	24	[10682]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x313a28d9]
	25	[10682]	CALL     	R2 1 2 ; R2 := R2()
	26	[10683]	GETTABLE 	R3 R2 K6 ; R3 := R2["mItemId"]
	27	[10683]	GETGLOBAL	R4 K4 ; R4 := 0x6c97a788
	28	[10683]	GETTABLE 	R4 R4 K8 ; R4 := R4["InvalidItemID"]
	29	[10683]	SETTABLE 	R3 K7 R4 ; R3["mId"] := R4
	30	[10684]	GETUPVAL 	R3 U1 ; R3 := U1
	31	[10684]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xe25dca66]
	32	[10684]	LOADK    	R4 K11 ; R4 := "Default Loadout"
	33	[10684]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[10684]	SETTABLE 	R2 K9 R3 ; R2["mName"] := R3
	35	[10686]	NEWTABLE 	R3 4 0 ; R3 := {}
	36	[10686]	LOADK    	R4 := 0.000000
	37	[10686]	LOADK    	R5 := 2.000000
	38	[10686]	LOADK    	R6 := 1.000000
	39	[10686]	LOADK    	R7 := 3.000000
	40	[10686]	SETLIST  	R3 4 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
	41	[10689]	LOADK    	R4 := 1.000000
	42	[10689]	LEN      	R5 R3 ; R5 := # R3
	43	[10689]	LOADK    	R6 := 1.000000
	44	[10689]	FORPREP  	R4 74 ; R4 -= R6; PC := 74
	45	[10690]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	46	[10691]	GETUPVAL 	R9 U2 ; R9 := U2
	47	[10691]	GETTABLE 	R9 R9 K12 ; R9 := R9[0x866fb296]
	48	[10691]	LOADK    	R10 := 3.000000
	49	[10691]	MOVE     	R11 R8 ; R11 := R8
	50	[10691]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	51	[10692]	LOADK    	R10 := 1.000000
	52	[10692]	LEN      	R11 R9 ; R11 := # R9
	53	[10692]	LOADK    	R12 := 1.000000
	54	[10692]	FORPREP  	R10 73 ; R10 -= R12; PC := 73
	55	[10693]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	56	[10694]	GETTABLE 	R15 R14 K13 ; R15 := R14["mStoreItem"]
	57	[10694]	SELF     	R15 R15 K14 ; R16 := R15; R15 := R15[0x9470f5c2]
	58	[10694]	CALL     	R15 2 2 ; R15 := R15(R16)
	59	[10694]	TEST     	R15 0 ; if not R15 then PC := 73
	60	[10694]	JMP      	73 ; PC := 73
	61	[10695]	GETGLOBAL	R15 K4 ; R15 := 0x6c97a788
	62	[10695]	GETTABLE 	R15 R15 K15 ; R15 := R15[0xd81046cb]
	63	[10695]	CALL     	R15 1 2 ; R15 := R15()
	64	[10695]	MOVE     	R1 R15 ; R1 := R15
	65	[10696]	GETTABLE 	R15 R14 K16 ; R15 := R14["Item"]
	66	[10696]	GETTABLE 	R15 R15 K6 ; R15 := R15["mItemId"]
	67	[10696]	SETTABLE 	R1 K6 R15 ; R1["mItemId"] := R15
	68	[10697]	SELF     	R15 R2 K17 ; R16 := R2; R15 := R2[0xffca321e]
	69	[10697]	MOVE     	R17 R8 ; R17 := R8
	70	[10697]	MOVE     	R18 R1 ; R18 := R1
	71	[10697]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	72	[10698]	JMP      	74 ; PC := 74
	73	[10692]	FORLOOP  	R10 55 ; R10 += R12; if R10 <= R11 then begin PC := 55; R13 := R10 end
	74	[10689]	FORLOOP  	R4 45 ; R4 += R6; if R4 <= R5 then begin PC := 45; R7 := R4 end
	75	[10703]	GETGLOBAL	R15 K1 ; R15 := 0x25d99d89
	76	[10703]	SELF     	R15 R15 K18 ; R16 := R15; R15 := R15[0x25a6e75e]
	77	[10703]	CALL     	R15 2 2 ; R15 := R15(R16)
	78	[10706]	SELF     	R16 R15 K19 ; R17 := R15; R16 := R15[0x8ed300d6]
	79	[10706]	LOADK    	R18 := 3.000000
	80	[10706]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	81	[10707]	GETTABLE 	R17 R2 K6 ; R17 := R2["mItemId"]
	82	[10707]	GETTABLE 	R18 R16 K20 ; R18 := R16[1.000000]
	83	[10707]	GETTABLE 	R18 R18 K6 ; R18 := R18["mItemId"]
	84	[10707]	GETTABLE 	R18 R18 K7 ; R18 := R18["mId"]
	85	[10707]	SETTABLE 	R17 K7 R18 ; R17["mId"] := R18
	86	[10709]	SELF     	R17 R15 K21 ; R18 := R15; R17 := R15[0x6beb8ae1]
	87	[10709]	LOADK    	R19 := 3.000000
	88	[10709]	MOVE     	R20 R2 ; R20 := R2
	89	[10709]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	90	[10710]	SELF     	R17 R15 K22 ; R18 := R15; R17 := R15[0x4b28a14c]
	91	[10710]	LOADK    	R19 := 3.000000
	92	[10710]	GETTABLE 	R20 R2 K6 ; R20 := R2["mItemId"]
	93	[10710]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	94	[10712]	GETGLOBAL	R17 K23 ; R17 := _T
	95	[10712]	SETTABLE 	R17 K24 K25 ; R17["LoadoutSaveRequired"] := true
	96	[10715]	OP_LOADBOOL	R17 1 0 ; R17 := true
	97	[10715]	SETUPVAL 	R17 U0 ; U0 := R17
	98	[10717]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	99	[10717]	GETGLOBAL	R18 K23 ; R18 := _T
	100	[10717]	GETTABLE 	R18 R18 K26 ; R18 := R18["BackgroundMovie"]
	101	[10717]	CALL     	R17 2 2 ; R17 := R17(R18)
	102	[10717]	TEST     	R17 1 ; if R17 then PC := 110
	103	[10717]	JMP      	110 ; PC := 110
	104	[10718]	GETGLOBAL	R17 K23 ; R17 := _T
	105	[10718]	GETTABLE 	R17 R17 K26 ; R17 := R17["BackgroundMovie"]
	106	[10718]	SELF     	R17 R17 K27 ; R18 := R17; R17 := R17[0xe4162eed]
	107	[10718]	LOADK    	R19 K28 ; R19 := "ShowBlockingMessage"
	108	[10718]	LOADK    	R20 K29 ; R20 := "1"
	109	[10718]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	110	[10720]	GETGLOBAL	R17 K1 ; R17 := 0x25d99d89
	111	[10720]	SELF     	R17 R17 K30 ; R18 := R17; R17 := R17[0xb6e2ab0d]
	112	[10720]	LOADK    	R19 K31 ; R19 := "OnPvpDefaultLoadoutCreated"
	113	[10720]	CALL     	R17 3 1 ; R17(R18,R19)
	114	[10722]	OP_LOADBOOL	R17 0 0 ; R17 := false
	115	[10722]	RETURN   	R17 2 ; return R17 
	116	[10725]	OP_LOADBOOL	R17 1 0 ; R17 := true
	117	[10725]	RETURN   	R17 2 ; return R17 
	118	[10726]	RETURN   	R0 1 ; return 

function #163 <?:10728,10814> (185 instructions, 740 bytes at 00000211342D9E40)
0 params, 18 slots, 14 upvalues, 0 locals, 44 constants, 2 functions
	1	[10729]	GETGLOBAL	R0 K0 ; R0 := mPendingRandomizeInfo
	2	[10729]	GETTABLE 	R0 R0 K1 ; R0 := R0["Items"]
	3	[10729]	LEN      	R0 R0 ; R0 := # R0
	4	[10729]	LT       	0 K2 R0 ; if 0.000000 >= R0 then PC := 76
	5	[10729]	JMP      	76 ; PC := 76
	6	[10730]	LOADK    	R0 := 1.000000
	7	[10730]	GETGLOBAL	R1 K0 ; R1 := mPendingRandomizeInfo
	8	[10730]	GETTABLE 	R1 R1 K1 ; R1 := R1["Items"]
	9	[10730]	LEN      	R1 R1 ; R1 := # R1
	10	[10730]	LOADK    	R2 := 1.000000
	11	[10730]	FORPREP  	R0 32 ; R0 -= R2; PC := 32
	12	[10731]	GETUPVAL 	R4 U1 ; R4 := U1
	13	[10731]	GETTABLE 	R4 R4 K3 ; R4 := R4["SWAPPING_ITEM"]
	14	[10731]	SETUPVAL 	R4 U0 ; U0 := R4
	15	[10732]	GETGLOBAL	R4 K4 ; R4 := mSelected
	16	[10732]	GETGLOBAL	R5 K0 ; R5 := mPendingRandomizeInfo
	17	[10732]	GETTABLE 	R5 R5 K6 ; R5 := R5["SlotInfo"]
	18	[10732]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	19	[10732]	SETTABLE 	R4 K5 R5 ; R4["Element"] := R5
	20	[10733]	GETUPVAL 	R4 U2 ; R4 := U2
	21	[10733]	GETGLOBAL	R5 K0 ; R5 := mPendingRandomizeInfo
	22	[10733]	GETTABLE 	R5 R5 K1 ; R5 := R5["Items"]
	23	[10733]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	24	[10733]	CALL     	R4 2 1 ; R4(R5)
	25	[10734]	OP_LOADBOOL	R4 0 0 ; R4 := false
	26	[10734]	SETGLOBALHASH	R4 K7 ; mInputBlocked := R4
	27	[10735]	GETUPVAL 	R4 U3 ; R4 := U3
	28	[10735]	CALL     	R4 1 1 ; R4()
	29	[10736]	GETUPVAL 	R4 U1 ; R4 := U1
	30	[10736]	GETTABLE 	R4 R4 K8 ; R4 := R4["SELECTING_PART"]
	31	[10736]	SETUPVAL 	R4 U0 ; U0 := R4
	32	[10730]	FORLOOP  	R0 12 ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
	33	[10739]	LOADK    	R4 := 1.000000
	34	[10739]	GETGLOBAL	R5 K0 ; R5 := mPendingRandomizeInfo
	35	[10739]	GETTABLE 	R5 R5 K6 ; R5 := R5["SlotInfo"]
	36	[10739]	LEN      	R5 R5 ; R5 := # R5
	37	[10739]	LOADK    	R6 := 1.000000
	38	[10739]	FORPREP  	R4 44 ; R4 -= R6; PC := 44
	39	[10740]	GETUPVAL 	R8 U4 ; R8 := U4
	40	[10740]	GETGLOBAL	R9 K0 ; R9 := mPendingRandomizeInfo
	41	[10740]	GETTABLE 	R9 R9 K6 ; R9 := R9["SlotInfo"]
	42	[10740]	GETTABLE 	R9 R9 R7 ; R9 := R9[R7]
	43	[10740]	CALL     	R8 2 1 ; R8(R9)
	44	[10739]	FORLOOP  	R4 39 ; R4 += R6; if R4 <= R5 then begin PC := 39; R7 := R4 end
	45	[10743]	GETGLOBAL	R8 K0 ; R8 := mPendingRandomizeInfo
	46	[10743]	GETTABLE 	R8 R8 K9 ; R8 := R8["OriginalSlot"]
	47	[10743]	EQ       	1 R8 K10 ; if R8 == nil then PC := 177
	48	[10743]	JMP      	177 ; PC := 177
	49	[10744]	GETUPVAL 	R8 U5 ; R8 := U5
	50	[10744]	GETGLOBAL	R9 K0 ; R9 := mPendingRandomizeInfo
	51	[10744]	GETTABLE 	R9 R9 K9 ; R9 := R9["OriginalSlot"]
	52	[10744]	CALL     	R8 2 1 ; R8(R9)
	53	[10745]	GETGLOBAL	R8 K4 ; R8 := mSelected
	54	[10745]	GETGLOBAL	R9 K0 ; R9 := mPendingRandomizeInfo
	55	[10745]	GETTABLE 	R9 R9 K9 ; R9 := R9["OriginalSlot"]
	56	[10745]	SETTABLE 	R8 K5 R9 ; R8["Element"] := R9
	57	[10746]	GETGLOBAL	R8 K11 ; R8 := mLists
	58	[10746]	GETTABLE 	R8 R8 K12 ; R8 := R8["mLoadOutList"]
	59	[10746]	GETTABLE 	R8 R8 K13 ; R8 := R8[0xad85f085]
	60	[10746]	GETGLOBAL	R9 K0 ; R9 := mPendingRandomizeInfo
	61	[10746]	GETTABLE 	R9 R9 K9 ; R9 := R9["OriginalSlot"]
	62	[10746]	CALL     	R8 2 1 ; R8(R9)
	63	[10747]	GETGLOBAL	R8 K0 ; R8 := mPendingRandomizeInfo
	64	[10747]	GETTABLE 	R8 R8 K9 ; R8 := R8["OriginalSlot"]
	65	[10747]	GETTABLE 	R8 R8 K14 ; R8 := R8["mIndex"]
	66	[10747]	EQ       	1 R8 K15 ; if R8 == 5.000000 then PC := 177
	67	[10747]	JMP      	177 ; PC := 177
	68	[10747]	GETGLOBAL	R8 K0 ; R8 := mPendingRandomizeInfo
	69	[10747]	GETTABLE 	R8 R8 K9 ; R8 := R8["OriginalSlot"]
	70	[10747]	GETTABLE 	R8 R8 K14 ; R8 := R8["mIndex"]
	71	[10747]	EQ       	1 R8 K16 ; if R8 == 6.000000 then PC := 177
	72	[10747]	JMP      	177 ; PC := 177
	73	[10748]	GETGLOBAL	R8 K17 ; R8 := _T
	74	[10748]	SETTABLE 	R8 K18 K19 ; R8["mSentinelMode"] := false
	75	[10750]	JMP      	177 ; PC := 177
	76	[10752]	GETGLOBAL	R8 K20 ; R8 := 0x7b998233
	77	[10752]	GETGLOBAL	R9 K21 ; R9 := 0x25d99d89
	78	[10752]	CALL     	R8 2 2 ; R8 := R8(R9)
	79	[10752]	NOT      	R8 R8 ; R8 := not R8
	80	[10753]	GETGLOBAL	R9 K22 ; R9 := 0xcfc01047
	81	[10753]	GETGLOBAL	R10 K23 ; R10 := mCurrentLoadout
	82	[10753]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	83	[10753]	JMP      	100 ; PC := 100
	84	[10754]	TEST     	R8 0 ; if not R8 then PC := 91
	85	[10754]	JMP      	91 ; PC := 91
	86	[10755]	GETGLOBAL	R14 K21 ; R14 := 0x25d99d89
	87	[10755]	SELF     	R14 R14 K24 ; R15 := R14; R14 := R14[0x400b84a1]
	88	[10755]	MOVE     	R16 R12 ; R16 := R12
	89	[10755]	MOVE     	R17 R13 ; R17 := R13
	90	[10755]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	91	[10758]	SELF     	R14 R13 K25 ; R15 := R13; R14 := R13[0x0384916a]
	92	[10758]	CALL     	R14 2 2 ; R14 := R14(R15)
	93	[10758]	TEST     	R14 0 ; if not R14 then PC := 100
	94	[10758]	JMP      	100 ; PC := 100
	95	[10761]	GETGLOBAL	R14 K26 ; R14 := mInventory
	96	[10761]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0x6beb8ae1]
	97	[10761]	MOVE     	R16 R12 ; R16 := R12
	98	[10761]	MOVE     	R17 R13 ; R17 := R13
	99	[10761]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	100	[10753]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 84; R11 := R12 end
	101	[10762]	JMP      	84 ; PC := 84
	102	[10764]	TEST     	R8 0 ; if not R8 then PC := 107
	103	[10764]	JMP      	107 ; PC := 107
	104	[10765]	GETGLOBAL	R14 K21 ; R14 := 0x25d99d89
	105	[10765]	SELF     	R14 R14 K28 ; R15 := R14; R14 := R14[0x121ec068]
	106	[10765]	CALL     	R14 2 1 ; R14(R15)
	107	[10768]	GETGLOBAL	R14 K17 ; R14 := _T
	108	[10768]	GETTABLE 	R14 R14 K29 ; R14 := R14["MenuSuitAvatar"]
	109	[10769]	GETGLOBAL	R15 K20 ; R15 := 0x7b998233
	110	[10769]	MOVE     	R16 R14 ; R16 := R14
	111	[10769]	CALL     	R15 2 2 ; R15 := R15(R16)
	112	[10769]	TEST     	R15 1 ; if R15 then PC := 143
	113	[10769]	JMP      	143 ; PC := 143
	114	[10770]	SELF     	R15 R14 K30 ; R16 := R14; R15 := R14[0xde321e6f]
	115	[10770]	CALL     	R15 2 2 ; R15 := R15(R16)
	116	[10770]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x527a892b]
	117	[10770]	CALL     	R15 2 1 ; R15(R16)
	118	[10771]	SELF     	R15 R14 K30 ; R16 := R14; R15 := R14[0xde321e6f]
	119	[10771]	CALL     	R15 2 2 ; R15 := R15(R16)
	120	[10771]	SELF     	R15 R15 K32 ; R16 := R15; R15 := R15[0x374b084a]
	121	[10771]	CALL     	R15 2 1 ; R15(R16)
	122	[10773]	GETUPVAL 	R15 U6 ; R15 := U6
	123	[10773]	GETUPVAL 	R16 U7 ; R16 := U7
	124	[10773]	GETTABLE 	R16 R16 K33 ; R16 := R16["Current"]
	125	[10773]	EQ       	1 R16 K35 ; if R16 == 2.000000 then PC := 128
	126	[10773]	JMP      	128 ; PC := 128
	127	[10773]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 128
	128	[10773]	OP_LOADBOOL	R16 1 0 ; R16 := true
	129	[10773]	CALL     	R15 2 1 ; R15(R16)
	130	[10774]	GETGLOBAL	R15 K20 ; R15 := 0x7b998233
	131	[10774]	GETUPVAL 	R16 U8 ; R16 := U8
	132	[10774]	CALL     	R15 2 2 ; R15 := R15(R16)
	133	[10774]	TEST     	R15 0 ; if not R15 then PC := 139
	134	[10774]	JMP      	139 ; PC := 139
	135	[10775]	SELF     	R15 R14 K30 ; R16 := R14; R15 := R14[0xde321e6f]
	136	[10775]	CALL     	R15 2 2 ; R15 := R15(R16)
	137	[10775]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0x0c277ae1]
	138	[10775]	CALL     	R15 2 1 ; R15(R16)
	139	[10777]	GETUPVAL 	R15 U9 ; R15 := U9
	140	[10777]	GETTABLE 	R15 R15 K37 ; R15 := R15[0xcfd657f3]
	141	[10777]	MOVE     	R16 R14 ; R16 := R14
	142	[10777]	CALL     	R15 2 1 ; R15(R16)
	143	[10780]	GETUPVAL 	R15 U10 ; R15 := U10
	144	[10780]	GETUPVAL 	R16 U11 ; R16 := U11
	145	[10780]	GETTABLE 	R16 R16 K38 ; R16 := R16["UI_MODE_IN_SPACE_SHIP"]
	146	[10780]	EQ       	1 R15 R16 ; if R15 == R16 then PC := 165
	147	[10780]	JMP      	165 ; PC := 165
	148	[10780]	TEST     	R8 0 ; if not R8 then PC := 165
	149	[10780]	JMP      	165 ; PC := 165
	150	[10780]	GETGLOBAL	R15 K21 ; R15 := 0x25d99d89
	151	[10780]	SELF     	R15 R15 K39 ; R16 := R15; R15 := R15[0x3c6b0324]
	152	[10780]	CALL     	R15 2 2 ; R15 := R15(R16)
	153	[10780]	TEST     	R15 1 ; if R15 then PC := 160
	154	[10780]	JMP      	160 ; PC := 160
	155	[10780]	GETGLOBAL	R15 K21 ; R15 := 0x25d99d89
	156	[10780]	SELF     	R15 R15 K40 ; R16 := R15; R15 := R15[0x9f91f49d]
	157	[10780]	CALL     	R15 2 2 ; R15 := R15(R16)
	158	[10780]	TEST     	R15 0 ; if not R15 then PC := 165
	159	[10780]	JMP      	165 ; PC := 165
	160	[10781]	LOADK    	R15 := 3.000000
	161	[10781]	SETUPVAL 	R15 U12 ; U12 := R15
	162	[10782]	GETUPVAL 	R15 U9 ; R15 := U9
	163	[10782]	GETTABLE 	R15 R15 K41 ; R15 := R15[0xd4c67576]
	164	[10782]	CALL     	R15 1 1 ; R15()
	165	[10785]	GETGLOBAL	R15 K11 ; R15 := mLists
	166	[10785]	GETTABLE 	R15 R15 K12 ; R15 := R15["mLoadOutList"]
	167	[10785]	SELF     	R15 R15 K42 ; R16 := R15; R15 := R15[0xea061e98]
	168	[10795]	CLOSURE  	R17 0 ; R17 := closure(Function #1)
	169	[10795]	GETUPVAL 	R0 U9 ; R0 := U9
	170	[10795]	GETUPVAL 	R0 U13 ; R0 := U13
	171	[10785]	CALL     	R15 3 1 ; R15(R16,R17)
	172	[10797]	GETGLOBAL	R15 K11 ; R15 := mLists
	173	[10797]	GETTABLE 	R15 R15 K12 ; R15 := R15["mLoadOutList"]
	174	[10797]	SELF     	R15 R15 K43 ; R16 := R15; R15 := R15[0x71e9ac81]
	175	[10809]	CLOSURE  	R17 1 ; R17 := closure(Function #2)
	176	[10797]	CALL     	R15 3 1 ; R15(R16,R17)
	177	[10811]	GETGLOBAL	R15 K0 ; R15 := mPendingRandomizeInfo
	178	[10811]	NEWTABLE 	R16 0 0 ; R16 := {}
	179	[10811]	SETTABLE 	R15 K1 R16 ; R15["Items"] := R16
	180	[10812]	GETGLOBAL	R15 K0 ; R15 := mPendingRandomizeInfo
	181	[10812]	NEWTABLE 	R16 0 0 ; R16 := {}
	182	[10812]	SETTABLE 	R15 K6 R16 ; R15["SlotInfo"] := R16
	183	[10813]	GETGLOBAL	R15 K0 ; R15 := mPendingRandomizeInfo
	184	[10813]	SETTABLE 	R15 K9 K10 ; R15["OriginalSlot"] := nil
	185	[10814]	RETURN   	R0 1 ; return 

function #164 <?:10816,10819> (9 instructions, 36 bytes at 00000211342DAD60)
2 params, 6 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[10818]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[10818]	LOADK    	R3 K1 ; R3 := "FocusAbiltySet(result="
	3	[10818]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	4	[10818]	MOVE     	R5 R0 ; R5 := R0
	5	[10818]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[10818]	LOADK    	R5 K3 ; R5 := ")"
	7	[10818]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	8	[10818]	CALL     	R2 2 1 ; R2(R3)
	9	[10819]	RETURN   	R0 1 ; return 

function #165 <?:10821,10883> (153 instructions, 612 bytes at 00000211342DAEC0)
0 params, 27 slots, 1 upvalue, 0 locals, 51 constants, 0 functions
	1	[10822]	GETGLOBAL	R0 K0 ; R0 := mLists
	2	[10822]	GETTABLE 	R0 R0 K1 ; R0 := R0["mLoadOutList"]
	3	[10822]	GETTABLE 	R0 R0 K2 ; R0 := R0["FocusSlotId"]
	4	[10822]	EQ       	1 R0 K3 ; if R0 == nil then PC := 153
	5	[10822]	JMP      	153 ; PC := 153
	6	[10823]	GETGLOBAL	R0 K0 ; R0 := mLists
	7	[10823]	GETTABLE 	R0 R0 K1 ; R0 := R0["mLoadOutList"]
	8	[10823]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xca30dfb6]
	9	[10823]	GETGLOBAL	R2 K0 ; R2 := mLists
	10	[10823]	GETTABLE 	R2 R2 K1 ; R2 := R2["mLoadOutList"]
	11	[10823]	GETTABLE 	R2 R2 K2 ; R2 := R2["FocusSlotId"]
	12	[10823]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	13	[10824]	LOADNIL  	R1 R1 ; R1 := nil
	14	[10825]	GETGLOBAL	R2 K5 ; R2 := mCurrentLoadout
	15	[10825]	EQ       	1 R2 K3 ; if R2 == nil then PC := 26
	16	[10825]	JMP      	26 ; PC := 26
	17	[10826]	GETGLOBAL	R2 K5 ; R2 := mCurrentLoadout
	18	[10826]	GETTABLE 	R3 R0 K6 ; R3 := R0["LoadOutType"]
	19	[10826]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	20	[10827]	EQ       	1 R2 K3 ; if R2 == nil then PC := 26
	21	[10827]	JMP      	26 ; PC := 26
	22	[10827]	GETTABLE 	R3 R2 K7 ; R3 := R2["mFocusSchool"]
	23	[10827]	EQ       	1 R3 K9 ; if R3 == 10.000000 then PC := 26
	24	[10827]	JMP      	26 ; PC := 26
	25	[10828]	GETTABLE 	R1 R2 K7 ; R1 := R2["mFocusSchool"]
	26	[10831]	EQ       	0 R1 K3 ; if R1 ~= nil then PC := 40
	27	[10831]	JMP      	40 ; PC := 40
	28	[10832]	GETGLOBAL	R3 K10 ; R3 := 0x25d99d89
	29	[10832]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xa340c0e2]
	30	[10832]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[10833]	GETGLOBAL	R4 K12 ; R4 := 0x7b998233
	32	[10833]	MOVE     	R5 R3 ; R5 := R3
	33	[10833]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[10833]	TEST     	R4 1 ; if R4 then PC := 40
	35	[10833]	JMP      	40 ; PC := 40
	36	[10834]	SELF     	R4 R3 K13 ; R5 := R3; R4 := R3[0xc6b8b3f2]
	37	[10834]	LOADK    	R6 K14 ; R6 := ""
	38	[10834]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	39	[10834]	MOVE     	R1 R4 ; R1 := R4
	40	[10838]	GETGLOBAL	R4 K15 ; R4 := _T
	41	[10838]	SETTABLE 	R4 K16 K3 ; R4["PolarityTree"] := nil
	42	[10839]	EQ       	1 R1 K3 ; if R1 == nil then PC := 153
	43	[10839]	JMP      	153 ; PC := 153
	44	[10840]	GETUPVAL 	R4 U0 ; R4 := U0
	45	[10840]	GETTABLE 	R4 R4 K17 ; R4 := R4[0x3077ca89]
	46	[10840]	MOVE     	R5 R1 ; R5 := R1
	47	[10840]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[10841]	EQ       	1 R4 K3 ; if R4 == nil then PC := 153
	49	[10841]	JMP      	153 ; PC := 153
	50	[10842]	GETTABLE 	R5 R4 K18 ; R5 := R4["Ability"]
	51	[10843]	GETGLOBAL	R6 K19 ; R6 := 0x3d106989
	52	[10843]	LOADK    	R7 K20 ; R7 := "ActivateAbility "
	53	[10843]	MOVE     	R8 R5 ; R8 := R5
	54	[10843]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	55	[10843]	CALL     	R6 2 1 ; R6(R7)
	56	[10844]	GETGLOBAL	R6 K21 ; R6 := 0xb009bbc6
	57	[10844]	MOVE     	R7 R5 ; R7 := R5
	58	[10844]	CALL     	R6 2 2 ; R6 := R6(R7)
	59	[10844]	MOVE     	R5 R6 ; R5 := R6
	60	[10845]	GETGLOBAL	R6 K12 ; R6 := 0x7b998233
	61	[10845]	MOVE     	R7 R5 ; R7 := R5
	62	[10845]	CALL     	R6 2 2 ; R6 := R6(R7)
	63	[10845]	TEST     	R6 1 ; if R6 then PC := 153
	64	[10845]	JMP      	153 ; PC := 153
	65	[10846]	GETGLOBAL	R6 K10 ; R6 := 0x25d99d89
	66	[10846]	SELF     	R6 R6 K11 ; R7 := R6; R6 := R6[0xa340c0e2]
	67	[10846]	CALL     	R6 2 2 ; R6 := R6(R7)
	68	[10846]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 75
	69	[10846]	JMP      	75 ; PC := 75
	70	[10847]	GETGLOBAL	R6 K10 ; R6 := 0x25d99d89
	71	[10847]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0x74ad30b5]
	72	[10847]	MOVE     	R8 R5 ; R8 := R5
	73	[10847]	LOADK    	R9 K23 ; R9 := "FocusAbiltySet"
	74	[10847]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	75	[10850]	GETGLOBAL	R6 K21 ; R6 := 0xb009bbc6
	76	[10850]	SELF     	R7 R5 K24 ; R8 := R5; R7 := R5[0x60e42378]
	77	[10850]	CALL     	R7 2 0 ; R7,... := R7(R8)
	78	[10850]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	79	[10851]	SELF     	R7 R6 K25 ; R8 := R6; R7 := R6[0x9cb57e2b]
	80	[10851]	CALL     	R7 2 2 ; R7 := R7(R8)
	81	[10852]	LOADK    	R8 := 0.000000
	82	[10853]	LOADK    	R9 := 0.000000
	83	[10854]	GETGLOBAL	R10 K26 ; R10 := 0xc8802016
	84	[10854]	GETTABLE 	R11 R7 K27 ; R11 := R7["nodes"]
	85	[10854]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	86	[10854]	JMP      	123 ; PC := 123
	87	[10855]	GETTABLE 	R15 R7 K28 ; R15 := R7["nodeTypes"]
	88	[10855]	GETTABLE 	R15 R15 R13 ; R15 := R15[R13]
	89	[10856]	SELF     	R16 R15 K29 ; R17 := R15; R16 := R15[0xf2deaf69]
	90	[10856]	GETGLOBAL	R18 K30 ; R18 := gLotusArtifactUpgradeType
	91	[10856]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	92	[10856]	TEST     	R16 0 ; if not R16 then PC := 123
	93	[10856]	JMP      	123 ; PC := 123
	94	[10856]	SELF     	R16 R15 K29 ; R17 := R15; R16 := R15[0xf2deaf69]
	95	[10856]	GETGLOBAL	R18 K31 ; R18 := gLotusFocusAbilityType
	96	[10856]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	97	[10856]	TEST     	R16 1 ; if R16 then PC := 123
	98	[10856]	JMP      	123 ; PC := 123
	99	[10857]	ADD      	R8 R8 K32 ; R8 := R8 + 1.000000
	100	[10858]	GETGLOBAL	R16 K10 ; R16 := 0x25d99d89
	101	[10858]	SELF     	R16 R16 K33 ; R17 := R16; R16 := R16[0x9de9471a]
	102	[10858]	MOVE     	R18 R15 ; R18 := R15
	103	[10858]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	104	[10859]	GETGLOBAL	R17 K12 ; R17 := 0x7b998233
	105	[10859]	GETTABLE 	R18 R16 K34 ; R18 := R16["mItemType"]
	106	[10859]	CALL     	R17 2 2 ; R17 := R17(R18)
	107	[10859]	TEST     	R17 1 ; if R17 then PC := 123
	108	[10859]	JMP      	123 ; PC := 123
	109	[10860]	GETGLOBAL	R17 K8 ; R17 := 0x6c97a788
	110	[10860]	GETTABLE 	R17 R17 K35 ; R17 := R17[0x1aba4d9e]
	111	[10860]	CALL     	R17 1 2 ; R17 := R17()
	112	[10861]	SETTABLE 	R17 K34 R15 ; R17["mItemType"] := R15
	113	[10862]	GETTABLE 	R18 R17 K36 ; R18 := R17["mInstance"]
	114	[10862]	SELF     	R18 R18 K13 ; R19 := R18; R18 := R18[0xc6b8b3f2]
	115	[10862]	LOADK    	R20 K14 ; R20 := ""
	116	[10862]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	117	[10863]	EQ       	1 R18 R1 ; if R18 == R1 then PC := 122
	118	[10863]	JMP      	122 ; PC := 122
	119	[10863]	GETTABLE 	R19 R16 K37 ; R19 := R16["mIsUniversal"]
	120	[10863]	TEST     	R19 0 ; if not R19 then PC := 123
	121	[10863]	JMP      	123 ; PC := 123
	122	[10865]	ADD      	R9 R9 K32 ; R9 := R9 + 1.000000
	123	[10854]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 87; R12 := R13 end
	124	[10868]	JMP      	87 ; PC := 87
	125	[10871]	GETTABLE 	R19 R4 K39 ; R19 := R4["Polarity"]
	126	[10871]	SETTABLE 	R0 K38 R19 ; R0[0x4e457768] := R19
	127	[10872]	GETGLOBAL	R19 K21 ; R19 := 0xb009bbc6
	128	[10872]	LOADK    	R20 K41 ; R20 := "/Lotus/Interface/Icons/StoreIcons/Operator/FocusLenses/"
	129	[10872]	GETTABLE 	R21 R4 K42 ; R21 := R4["Icon"]
	130	[10872]	CONCAT   	R20 R20 R21 ; R20 := R20 .. R21
	131	[10872]	CALL     	R19 2 2 ; R19 := R19(R20)
	132	[10872]	SETTABLE 	R0 K40 R19 ; R0[0xe4162eed] := R19
	133	[10873]	GETTABLE 	R19 R0 K40 ; R19 := R0["Texture"]
	134	[10873]	SETTABLE 	R0 K43 R19 ; R0[0xcfc01047] := R19
	135	[10874]	MOVE     	R19 R9 ; R19 := R9
	136	[10874]	LOADK    	R20 K45 ; R20 := " / "
	137	[10874]	MOVE     	R21 R8 ; R21 := R8
	138	[10874]	LOADK    	R22 K46 ; R22 := " "
	139	[10874]	GETGLOBAL	R23 K47 ; R23 := 0xae91e43b
	140	[10874]	SELF     	R23 R23 K48 ; R24 := R23; R23 := R23[0x42b04007]
	141	[10874]	LOADK    	R25 K49 ; R25 := "/Lotus/Language/Menu/Unlocked"
	142	[10874]	OP_LOADBOOL	R26 1 0 ; R26 := true
	143	[10874]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	144	[10874]	CONCAT   	R19 R19 R23 ; R19 := R19 .. R20 .. R21 .. R22 .. R23
	145	[10874]	SETTABLE 	R0 K44 R19 ; R0["SubTitle"] := R19
	146	[10876]	GETGLOBAL	R19 K0 ; R19 := mLists
	147	[10876]	GETTABLE 	R19 R19 K1 ; R19 := R19["mLoadOutList"]
	148	[10876]	GETTABLE 	R19 R19 K50 ; R19 := R19[0xb15e6aca]
	149	[10876]	MOVE     	R20 R0 ; R20 := R0
	150	[10876]	CALL     	R19 2 1 ; R19(R20)
	151	[10878]	GETGLOBAL	R19 K15 ; R19 := _T
	152	[10878]	SETTABLE 	R19 K16 R1 ; R19["PolarityTree"] := R1
	153	[10883]	RETURN   	R0 1 ; return 

function #166 <?:10885,11049> (667 instructions, 2668 bytes at 00000211342DB840)
0 params, 29 slots, 6 upvalues, 0 locals, 137 constants, 0 functions
	1	[10886]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[10886]	SETGLOBALHASH	R0 K0 ; mInputBlocked := R0
	3	[10888]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	4	[10888]	GETGLOBAL	R1 K2 ; R1 := 0x25d99d89
	5	[10888]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[10888]	TEST     	R0 0 ; if not R0 then PC := 9
	7	[10888]	JMP      	9 ; PC := 9
	8	[10889]	RETURN   	R0 1 ; return 
	9	[10891]	GETGLOBAL	R0 K2 ; R0 := 0x25d99d89
	10	[10891]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x25a6e75e]
	11	[10891]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[10891]	SETGLOBALHASH	R0 K3 ; mInventory := R0
	13	[10893]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	14	[10893]	GETGLOBAL	R1 K5 ; R1 := 0x96517417
	15	[10893]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[10893]	TEST     	R0 1 ; if R0 then PC := 29
	17	[10893]	JMP      	29 ; PC := 29
	18	[10893]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	19	[10893]	GETGLOBAL	R1 K3 ; R1 := mInventory
	20	[10893]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[10893]	TEST     	R0 1 ; if R0 then PC := 29
	22	[10893]	JMP      	29 ; PC := 29
	23	[10894]	GETGLOBAL	R0 K7 ; R0 := 0x6c97a788
	24	[10894]	GETTABLE 	R0 R0 K8 ; R0 := R0[0x779b1304]
	25	[10894]	GETGLOBAL	R1 K5 ; R1 := 0x96517417
	26	[10894]	GETGLOBAL	R2 K3 ; R2 := mInventory
	27	[10894]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	28	[10894]	SETGLOBALHASH	R0 K6 ; mUpsellHelper := R0
	29	[10897]	GETGLOBAL	R0 K9 ; R0 := _T
	30	[10897]	GETTABLE 	R0 R0 K10 ; R0 := R0["loadoutInProgress"]
	31	[10897]	EQ       	1 R0 K11 ; if R0 == nil then PC := 39
	32	[10897]	JMP      	39 ; PC := 39
	33	[10898]	GETGLOBAL	R0 K9 ; R0 := _T
	34	[10898]	GETTABLE 	R0 R0 K10 ; R0 := R0["loadoutInProgress"]
	35	[10898]	SETGLOBALHASH	R0 K12 ; mCurrentLoadout := R0
	36	[10899]	GETGLOBAL	R0 K9 ; R0 := _T
	37	[10899]	SETTABLE 	R0 K10 K11 ; R0["loadoutInProgress"] := nil
	38	[10899]	JMP      	56 ; PC := 56
	39	[10901]	NEWTABLE 	R0 0 0 ; R0 := {}
	40	[10901]	SETGLOBALHASH	R0 K12 ; mCurrentLoadout := R0
	41	[10902]	LOADK    	R0 := 0.000000
	42	[10902]	LOADK    	R1 := 9.000000
	43	[10902]	LOADK    	R2 := 1.000000
	44	[10902]	FORPREP  	R0 55 ; R0 -= R2; PC := 55
	45	[10903]	GETGLOBAL	R4 K12 ; R4 := mCurrentLoadout
	46	[10903]	GETGLOBAL	R5 K3 ; R5 := mInventory
	47	[10903]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0x566259e1]
	48	[10903]	MOVE     	R7 R3 ; R7 := R3
	49	[10903]	GETGLOBAL	R8 K3 ; R8 := mInventory
	50	[10903]	SELF     	R8 R8 K14 ; R9 := R8; R8 := R8[0x4e457768]
	51	[10903]	MOVE     	R10 R3 ; R10 := R3
	52	[10903]	CALL     	R8 3 0 ; R8,... := R8(R9,R10)
	53	[10903]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	54	[10903]	SETTABLE 	R4 R3 R5 ; R4[R3] := R5
	55	[10902]	FORLOOP  	R0 45 ; R0 += R2; if R0 <= R1 then begin PC := 45; R3 := R0 end
	56	[10907]	GETGLOBAL	R4 K15 ; R4 := 0xae91e43b
	57	[10907]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe4162eed]
	58	[10907]	LOADK    	R6 K17 ; R6 := "UpdateFocusSlot"
	59	[10907]	LOADK    	R7 K18 ; R7 := ""
	60	[10907]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	61	[10909]	NEWTABLE 	R4 0 0 ; R4 := {}
	62	[10910]	GETGLOBAL	R5 K19 ; R5 := 0xcfc01047
	63	[10910]	GETGLOBAL	R6 K20 ; R6 := LOADOUT_SLOTS
	64	[10910]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	65	[10910]	JMP      	258 ; PC := 258
	66	[10911]	GETTABLE 	R10 R9 K21 ; R10 := R9["LoadOutId"]
	67	[10911]	EQ       	1 R10 K11 ; if R10 == nil then PC := 258
	68	[10911]	JMP      	258 ; PC := 258
	69	[10912]	OP_LOADBOOL	R10 0 0 ; R10 := false
	70	[10914]	GETTABLE 	R11 R9 K22 ; R11 := R9["LoadOutType"]
	71	[10914]	EQ       	0 R11 K23 ; if R11 ~= 0.000000 then PC := 101
	72	[10914]	JMP      	101 ; PC := 101
	73	[10914]	GETTABLE 	R11 R9 K21 ; R11 := R9["LoadOutId"]
	74	[10914]	EQ       	0 R11 K24 ; if R11 ~= 3.000000 then PC := 101
	75	[10914]	JMP      	101 ; PC := 101
	76	[10915]	GETUPVAL 	R11 U0 ; R11 := U0
	77	[10915]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x8e7c3b5e]
	78	[10915]	GETGLOBAL	R12 K2 ; R12 := 0x25d99d89
	79	[10915]	CALL     	R11 2 3 ; R11,R12 := R11(R12)
	80	[10916]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	81	[10916]	MOVE     	R14 R11 ; R14 := R11
	82	[10916]	CALL     	R13 2 2 ; R13 := R13(R14)
	83	[10916]	TEST     	R13 1 ; if R13 then PC := 101
	84	[10916]	JMP      	101 ; PC := 101
	85	[10916]	GETUPVAL 	R13 U1 ; R13 := U1
	86	[10916]	EQ       	0 R11 R13 ; if R11 ~= R13 then PC := 101
	87	[10916]	JMP      	101 ; PC := 101
	88	[10917]	LE       	0 K26 R12 ; if 15.000000 > R12 then PC := 101
	89	[10917]	JMP      	101 ; PC := 101
	90	[10918]	GETGLOBAL	R13 K2 ; R13 := 0x25d99d89
	91	[10918]	SELF     	R13 R13 K4 ; R14 := R13; R13 := R13[0x25a6e75e]
	92	[10918]	CALL     	R13 2 2 ; R13 := R13(R14)
	93	[10918]	SELF     	R13 R13 K27 ; R14 := R13; R13 := R13[0xbadb2a78]
	94	[10918]	GETGLOBAL	R15 K28 ; R15 := 0x7ed0a956
	95	[10918]	LOADK    	R16 K29 ; R16 := "/Lotus/Weapons/Orokin/BallasSword/BallasSwordWeapon"
	96	[10918]	CALL     	R15 2 0 ; R15,... := R15(R16)
	97	[10918]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	98	[10918]	EQ       	0 R13 K23 ; if R13 ~= 0.000000 then PC := 101
	99	[10918]	JMP      	101 ; PC := 101
	100	[10920]	OP_LOADBOOL	R10 1 0 ; R10 := true
	101	[10926]	TEST     	R10 0 ; if not R10 then PC := 109
	102	[10926]	JMP      	109 ; PC := 109
	103	[10927]	SETTABLE 	R9 K30 K31 ; R9["isFixedQuestParacesis"] := true
	104	[10928]	GETGLOBAL	R13 K33 ; R13 := 0xb009bbc6
	105	[10928]	LOADK    	R14 K34 ; R14 := "/Lotus/StoreItems/Weapons/Orokin/BallasSword/TNWQuestBallasSwordWeapon"
	106	[10928]	CALL     	R13 2 2 ; R13 := R13(R14)
	107	[10928]	SETTABLE 	R9 K32 R13 ; R9["mStoreItem"] := R13
	108	[10928]	JMP      	258 ; PC := 258
	109	[10930]	GETUPVAL 	R13 U2 ; R13 := U2
	110	[10930]	GETTABLE 	R13 R13 K36 ; R13 := R13[0x866fb296]
	111	[10930]	GETTABLE 	R14 R9 K22 ; R14 := R9["LoadOutType"]
	112	[10930]	GETTABLE 	R15 R9 K21 ; R15 := R9["LoadOutId"]
	113	[10930]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	114	[10930]	SETTABLE 	R9 K35 R13 ; R9["OwnedItems"] := R13
	115	[10931]	GETGLOBAL	R13 K12 ; R13 := mCurrentLoadout
	116	[10931]	GETTABLE 	R14 R9 K22 ; R14 := R9["LoadOutType"]
	117	[10931]	GETTABLE 	R13 R13 R14 ; R13 := R13[R14]
	118	[10931]	SELF     	R13 R13 K37 ; R14 := R13; R13 := R13[0x2abbe722]
	119	[10931]	GETTABLE 	R15 R9 K21 ; R15 := R9["LoadOutId"]
	120	[10931]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	121	[10932]	GETTABLE 	R14 R13 K38 ; R14 := R13["mModSlot"]
	122	[10933]	GETTABLE 	R15 R13 K39 ; R15 := R13["mCustSlot"]
	123	[10934]	GETTABLE 	R16 R13 K41 ; R16 := R13["mItemId"]
	124	[10934]	GETTABLE 	R16 R16 K42 ; R16 := R16["mId"]
	125	[10934]	SETTABLE 	R9 K40 R16 ; R9["UID"] := R16
	126	[10936]	GETTABLE 	R16 R9 K43 ; R16 := R9["StoreItemId"]
	127	[10936]	EQ       	1 R16 K11 ; if R16 == nil then PC := 258
	128	[10936]	JMP      	258 ; PC := 258
	129	[10937]	GETTABLE 	R16 R9 K43 ; R16 := R9["StoreItemId"]
	130	[10937]	EQ       	0 R16 K26 ; if R16 ~= 15.000000 then PC := 193
	131	[10937]	JMP      	193 ; PC := 193
	132	[10938]	GETGLOBAL	R16 K3 ; R16 := mInventory
	133	[10938]	SELF     	R16 R16 K45 ; R17 := R16; R16 := R16[0xc70965fe]
	134	[10938]	GETTABLE 	R18 R9 K40 ; R18 := R9["UID"]
	135	[10938]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	136	[10939]	GETGLOBAL	R17 K1 ; R17 := 0x7b998233
	137	[10939]	GETTABLE 	R18 R16 K46 ; R18 := R16["mItemType"]
	138	[10939]	CALL     	R17 2 2 ; R17 := R17(R18)
	139	[10939]	TEST     	R17 1 ; if R17 then PC := 238
	140	[10939]	JMP      	238 ; PC := 238
	141	[10940]	GETTABLE 	R17 R16 K46 ; R17 := R16["mItemType"]
	142	[10940]	SELF     	R17 R17 K47 ; R18 := R17; R17 := R17[0xf2deaf69]
	143	[10940]	GETGLOBAL	R19 K48 ; R19 := 0x88980f4f
	144	[10940]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	145	[10940]	TEST     	R17 0 ; if not R17 then PC := 154
	146	[10940]	JMP      	154 ; PC := 154
	147	[10941]	SETTABLE 	R9 K43 K49 ; R9["StoreItemId"] := 39.000000
	148	[10942]	GETGLOBAL	R17 K50 ; R17 := 0x33bdd652
	149	[10942]	GETTABLE 	R17 R17 K51 ; R17 := R17[0x23d5322f]
	150	[10942]	MOVE     	R18 R4 ; R18 := R4
	151	[10942]	LOADK    	R19 K52 ; R19 := "/Lotus/Types/Friendly/Pets/MoaPets/MoaPetAgent"
	152	[10942]	CALL     	R17 3 1 ; R17(R18,R19)
	153	[10942]	JMP      	238 ; PC := 238
	154	[10943]	GETTABLE 	R17 R16 K46 ; R17 := R16["mItemType"]
	155	[10943]	SELF     	R17 R17 K47 ; R18 := R17; R17 := R17[0xf2deaf69]
	156	[10943]	GETGLOBAL	R19 K53 ; R19 := 0xb506ff82
	157	[10943]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	158	[10943]	TEST     	R17 0 ; if not R17 then PC := 167
	159	[10943]	JMP      	167 ; PC := 167
	160	[10944]	SETTABLE 	R9 K43 K49 ; R9["StoreItemId"] := 39.000000
	161	[10945]	GETGLOBAL	R17 K50 ; R17 := 0x33bdd652
	162	[10945]	GETTABLE 	R17 R17 K51 ; R17 := R17[0x23d5322f]
	163	[10945]	MOVE     	R18 R4 ; R18 := R4
	164	[10945]	LOADK    	R19 K54 ; R19 := "/Lotus/Types/Friendly/Pets/ZanukaPets/ZanukaPetAgent"
	165	[10945]	CALL     	R17 3 1 ; R17(R18,R19)
	166	[10945]	JMP      	238 ; PC := 238
	167	[10946]	GETTABLE 	R17 R16 K46 ; R17 := R16["mItemType"]
	168	[10946]	SELF     	R17 R17 K47 ; R18 := R17; R17 := R17[0xf2deaf69]
	169	[10946]	GETGLOBAL	R19 K55 ; R19 := 0xb9a9a904
	170	[10946]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	171	[10946]	TEST     	R17 0 ; if not R17 then PC := 180
	172	[10946]	JMP      	180 ; PC := 180
	173	[10947]	SETTABLE 	R9 K43 K56 ; R9["StoreItemId"] := 24.000000
	174	[10948]	GETGLOBAL	R17 K50 ; R17 := 0x33bdd652
	175	[10948]	GETTABLE 	R17 R17 K51 ; R17 := R17[0x23d5322f]
	176	[10948]	MOVE     	R18 R4 ; R18 := R4
	177	[10948]	LOADK    	R19 K57 ; R19 := "/Lotus/Types/Friendly/Pets/KubrowPetAgent"
	178	[10948]	CALL     	R17 3 1 ; R17(R18,R19)
	179	[10948]	JMP      	238 ; PC := 238
	180	[10949]	GETTABLE 	R17 R16 K46 ; R17 := R16["mItemType"]
	181	[10949]	SELF     	R17 R17 K47 ; R18 := R17; R17 := R17[0xf2deaf69]
	182	[10949]	GETGLOBAL	R19 K58 ; R19 := 0x01302fb0
	183	[10949]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	184	[10949]	TEST     	R17 0 ; if not R17 then PC := 238
	185	[10949]	JMP      	238 ; PC := 238
	186	[10950]	SETTABLE 	R9 K43 K56 ; R9["StoreItemId"] := 24.000000
	187	[10951]	GETGLOBAL	R17 K50 ; R17 := 0x33bdd652
	188	[10951]	GETTABLE 	R17 R17 K51 ; R17 := R17[0x23d5322f]
	189	[10951]	MOVE     	R18 R4 ; R18 := R4
	190	[10951]	LOADK    	R19 K59 ; R19 := "/Lotus/Types/Friendly/Pets/CatbrowPetAgent"
	191	[10951]	CALL     	R17 3 1 ; R17(R18,R19)
	192	[10953]	JMP      	238 ; PC := 238
	193	[10954]	GETTABLE 	R17 R9 K43 ; R17 := R9["StoreItemId"]
	194	[10954]	EQ       	0 R17 K60 ; if R17 ~= 48.000000 then PC := 224
	195	[10954]	JMP      	224 ; PC := 224
	196	[10955]	GETTABLE 	R17 R9 K35 ; R17 := R9["OwnedItems"]
	197	[10955]	LEN      	R17 R17 ; R17 := # R17
	198	[10955]	LT       	0 K23 R17 ; if 0.000000 >= R17 then PC := 238
	199	[10955]	JMP      	238 ; PC := 238
	200	[10956]	GETTABLE 	R17 R9 K40 ; R17 := R9["UID"]
	201	[10956]	GETGLOBAL	R18 K7 ; R18 := 0x6c97a788
	202	[10956]	GETTABLE 	R18 R18 K61 ; R18 := R18["InvalidItemID"]
	203	[10956]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 209
	204	[10956]	JMP      	209 ; PC := 209
	205	[10957]	GETTABLE 	R17 R9 K35 ; R17 := R9["OwnedItems"]
	206	[10957]	GETTABLE 	R17 R17 K62 ; R17 := R17[1.000000]
	207	[10957]	GETTABLE 	R17 R17 K40 ; R17 := R17["UID"]
	208	[10957]	SETTABLE 	R9 K40 R17 ; R9["UID"] := R17
	209	[10959]	GETGLOBAL	R17 K50 ; R17 := 0x33bdd652
	210	[10959]	GETTABLE 	R17 R17 K51 ; R17 := R17[0x23d5322f]
	211	[10959]	MOVE     	R18 R4 ; R18 := R4
	212	[10959]	GETGLOBAL	R19 K63 ; R19 := 0x6658d5be
	213	[10959]	SELF     	R19 R19 K64 ; R20 := R19; R19 := R19[0xed4e0128]
	214	[10959]	CALL     	R19 2 0 ; R19,... := R19(R20)
	215	[10959]	CALL     	R17 0 1 ; R17(R18,...)
	216	[10960]	GETGLOBAL	R17 K50 ; R17 := 0x33bdd652
	217	[10960]	GETTABLE 	R17 R17 K51 ; R17 := R17[0x23d5322f]
	218	[10960]	MOVE     	R18 R4 ; R18 := R4
	219	[10960]	GETGLOBAL	R19 K65 ; R19 := 0x3369a6b1
	220	[10960]	SELF     	R19 R19 K64 ; R20 := R19; R19 := R19[0xed4e0128]
	221	[10960]	CALL     	R19 2 0 ; R19,... := R19(R20)
	222	[10960]	CALL     	R17 0 1 ; R17(R18,...)
	223	[10961]	JMP      	238 ; PC := 238
	224	[10962]	GETTABLE 	R17 R9 K43 ; R17 := R9["StoreItemId"]
	225	[10962]	EQ       	0 R17 K66 ; if R17 ~= 41.000000 then PC := 238
	226	[10962]	JMP      	238 ; PC := 238
	227	[10963]	GETTABLE 	R17 R9 K35 ; R17 := R9["OwnedItems"]
	228	[10963]	LEN      	R17 R17 ; R17 := # R17
	229	[10963]	LT       	0 K23 R17 ; if 0.000000 >= R17 then PC := 238
	230	[10963]	JMP      	238 ; PC := 238
	231	[10964]	GETGLOBAL	R17 K50 ; R17 := 0x33bdd652
	232	[10964]	GETTABLE 	R17 R17 K51 ; R17 := R17[0x23d5322f]
	233	[10964]	MOVE     	R18 R4 ; R18 := R4
	234	[10964]	GETGLOBAL	R19 K67 ; R19 := 0xdac9387c
	235	[10964]	SELF     	R19 R19 K64 ; R20 := R19; R19 := R19[0xed4e0128]
	236	[10964]	CALL     	R19 2 0 ; R19,... := R19(R20)
	237	[10964]	CALL     	R17 0 1 ; R17(R18,...)
	238	[10968]	GETGLOBAL	R17 K2 ; R17 := 0x25d99d89
	239	[10968]	SELF     	R17 R17 K68 ; R18 := R17; R17 := R17[0xd08c3966]
	240	[10968]	GETTABLE 	R19 R9 K40 ; R19 := R9["UID"]
	241	[10968]	GETTABLE 	R20 R9 K22 ; R20 := R9["LoadOutType"]
	242	[10968]	GETTABLE 	R21 R9 K21 ; R21 := R9["LoadOutId"]
	243	[10968]	GETTABLE 	R22 R9 K43 ; R22 := R9["StoreItemId"]
	244	[10968]	MOVE     	R23 R14 ; R23 := R14
	245	[10968]	MOVE     	R24 R15 ; R24 := R15
	246	[10968]	CALL     	R17 8 2 ; R17 := R17(R18,R19,R20,R21,R22,R23,R24)
	247	[10969]	GETGLOBAL	R18 K69 ; R18 := 0xc8802016
	248	[10969]	MOVE     	R19 R17 ; R19 := R17
	249	[10969]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	250	[10969]	JMP      	256 ; PC := 256
	251	[10970]	GETGLOBAL	R23 K50 ; R23 := 0x33bdd652
	252	[10970]	GETTABLE 	R23 R23 K51 ; R23 := R23[0x23d5322f]
	253	[10970]	MOVE     	R24 R4 ; R24 := R4
	254	[10970]	MOVE     	R25 R22 ; R25 := R22
	255	[10970]	CALL     	R23 3 1 ; R23(R24,R25)
	256	[10969]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 251; R20 := R21 end
	257	[10970]	JMP      	251 ; PC := 251
	258	[10910]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 66; R7 := R8 end
	259	[10974]	JMP      	66 ; PC := 66
	260	[10977]	GETGLOBAL	R23 K70 ; R23 := mLists
	261	[10977]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	262	[10977]	SELF     	R23 R23 K72 ; R24 := R23; R23 := R23[0x7c09c373]
	263	[10977]	OP_LOADBOOL	R25 1 0 ; R25 := true
	264	[10977]	OP_LOADBOOL	R26 0 0 ; R26 := false
	265	[10977]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	266	[10978]	GETGLOBAL	R23 K70 ; R23 := mLists
	267	[10978]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	268	[10978]	SETTABLE 	R23 K73 K11 ; R23["SuitSlotId"] := nil
	269	[10979]	GETGLOBAL	R23 K70 ; R23 := mLists
	270	[10979]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	271	[10979]	SETTABLE 	R23 K74 K11 ; R23["PrimarySlotId"] := nil
	272	[10980]	GETGLOBAL	R23 K70 ; R23 := mLists
	273	[10980]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	274	[10980]	SETTABLE 	R23 K75 K11 ; R23["SecondarySlotId"] := nil
	275	[10981]	GETGLOBAL	R23 K70 ; R23 := mLists
	276	[10981]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	277	[10981]	SETTABLE 	R23 K76 K11 ; R23["MeleeSlotId"] := nil
	278	[10982]	GETGLOBAL	R23 K70 ; R23 := mLists
	279	[10982]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	280	[10982]	SETTABLE 	R23 K77 K11 ; R23["FocusSlotId"] := nil
	281	[10983]	GETGLOBAL	R23 K70 ; R23 := mLists
	282	[10983]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	283	[10983]	SETTABLE 	R23 K78 K11 ; R23["SpecialASlotId"] := nil
	284	[10984]	GETGLOBAL	R23 K70 ; R23 := mLists
	285	[10984]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	286	[10984]	SETTABLE 	R23 K79 K11 ; R23["SpecialBSlotId"] := nil
	287	[10985]	GETGLOBAL	R23 K70 ; R23 := mLists
	288	[10985]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	289	[10985]	SETTABLE 	R23 K80 K11 ; R23["PetSlotId"] := nil
	290	[10986]	GETGLOBAL	R23 K70 ; R23 := mLists
	291	[10986]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	292	[10986]	SETTABLE 	R23 K81 K11 ; R23["PetWeaponId"] := nil
	293	[10987]	GETGLOBAL	R23 K70 ; R23 := mLists
	294	[10987]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	295	[10987]	SETTABLE 	R23 K82 K11 ; R23["DataKnifeSlotId"] := nil
	296	[10988]	GETGLOBAL	R23 K70 ; R23 := mLists
	297	[10988]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	298	[10988]	SETTABLE 	R23 K83 K11 ; R23["MechSuitSlotId"] := nil
	299	[10989]	GETGLOBAL	R23 K70 ; R23 := mLists
	300	[10989]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	301	[10989]	SETTABLE 	R23 K84 K11 ; R23["MechGunSlotId"] := nil
	302	[10990]	GETGLOBAL	R23 K70 ; R23 := mLists
	303	[10990]	GETTABLE 	R23 R23 K71 ; R23 := R23["mLoadOutList"]
	304	[10990]	SETTABLE 	R23 K85 K11 ; R23["HeavyGunSlotId"] := nil
	305	[10991]	GETUPVAL 	R23 U3 ; R23 := U3
	306	[10991]	GETTABLE 	R23 R23 K86 ; R23 := R23["Current"]
	307	[10991]	EQ       	0 R23 K62 ; if R23 ~= 1.000000 then PC := 458
	308	[10991]	JMP      	458 ; PC := 458
	309	[10992]	GETGLOBAL	R23 K70 ; R23 := mLists
	310	[10992]	GETTABLE 	R23 R23 K87 ; R23 := R23["mLoadOutCategories"]
	311	[10992]	GETTABLE 	R23 R23 K88 ; R23 := R23["mState"]
	312	[10993]	GETGLOBAL	R24 K70 ; R24 := mLists
	313	[10993]	GETTABLE 	R24 R24 K87 ; R24 := R24["mLoadOutCategories"]
	314	[10993]	GETTABLE 	R24 R24 K89 ; R24 := R24["mStates"]
	315	[10993]	GETTABLE 	R24 R24 K90 ; R24 := R24["TENNO"]
	316	[10993]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 414
	317	[10993]	JMP      	414 ; PC := 414
	318	[10994]	GETGLOBAL	R24 K70 ; R24 := mLists
	319	[10994]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	320	[10994]	GETGLOBAL	R25 K70 ; R25 := mLists
	321	[10994]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	322	[10994]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	323	[10994]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	324	[10994]	GETTABLE 	R27 R27 K92 ; R27 := R27["SUIT"]
	325	[10994]	OP_LOADBOOL	R28 1 0 ; R28 := true
	326	[10994]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	327	[10994]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	328	[10994]	SETTABLE 	R24 K73 R25 ; R24["SuitSlotId"] := R25
	329	[10995]	GETGLOBAL	R24 K70 ; R24 := mLists
	330	[10995]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	331	[10995]	GETGLOBAL	R25 K70 ; R25 := mLists
	332	[10995]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	333	[10995]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	334	[10995]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	335	[10995]	GETTABLE 	R27 R27 K94 ; R27 := R27["PRIMARY"]
	336	[10995]	OP_LOADBOOL	R28 1 0 ; R28 := true
	337	[10995]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	338	[10995]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	339	[10995]	SETTABLE 	R24 K74 R25 ; R24["PrimarySlotId"] := R25
	340	[10996]	GETGLOBAL	R24 K70 ; R24 := mLists
	341	[10996]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	342	[10996]	GETGLOBAL	R25 K70 ; R25 := mLists
	343	[10996]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	344	[10996]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	345	[10996]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	346	[10996]	GETTABLE 	R27 R27 K95 ; R27 := R27["SECONDARY"]
	347	[10996]	OP_LOADBOOL	R28 1 0 ; R28 := true
	348	[10996]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	349	[10996]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	350	[10996]	SETTABLE 	R24 K75 R25 ; R24["SecondarySlotId"] := R25
	351	[10997]	GETGLOBAL	R24 K70 ; R24 := mLists
	352	[10997]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	353	[10997]	GETGLOBAL	R25 K70 ; R25 := mLists
	354	[10997]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	355	[10997]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	356	[10997]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	357	[10997]	GETTABLE 	R27 R27 K96 ; R27 := R27["MELEE"]
	358	[10997]	OP_LOADBOOL	R28 1 0 ; R28 := true
	359	[10997]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	360	[10997]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	361	[10997]	SETTABLE 	R24 K76 R25 ; R24["MeleeSlotId"] := R25
	362	[10998]	GETGLOBAL	R24 K70 ; R24 := mLists
	363	[10998]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	364	[10998]	GETGLOBAL	R25 K70 ; R25 := mLists
	365	[10998]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	366	[10998]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	367	[10998]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	368	[10998]	GETTABLE 	R27 R27 K97 ; R27 := R27["FOCUS"]
	369	[10998]	OP_LOADBOOL	R28 1 0 ; R28 := true
	370	[10998]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	371	[10998]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	372	[10998]	SETTABLE 	R24 K77 R25 ; R24["FocusSlotId"] := R25
	373	[10999]	GETGLOBAL	R24 K70 ; R24 := mLists
	374	[10999]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	375	[10999]	GETGLOBAL	R25 K70 ; R25 := mLists
	376	[10999]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	377	[10999]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	378	[10999]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	379	[10999]	GETTABLE 	R27 R27 K98 ; R27 := R27["SPECIAL_A"]
	380	[10999]	OP_LOADBOOL	R28 1 0 ; R28 := true
	381	[10999]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	382	[10999]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	383	[10999]	SETTABLE 	R24 K78 R25 ; R24["SpecialASlotId"] := R25
	384	[11000]	GETGLOBAL	R24 K70 ; R24 := mLists
	385	[11000]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	386	[11000]	GETGLOBAL	R25 K70 ; R25 := mLists
	387	[11000]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	388	[11000]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	389	[11000]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	390	[11000]	GETTABLE 	R27 R27 K99 ; R27 := R27["SPECIAL_B"]
	391	[11000]	OP_LOADBOOL	R28 1 0 ; R28 := true
	392	[11000]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	393	[11000]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	394	[11000]	SETTABLE 	R24 K79 R25 ; R24["SpecialBSlotId"] := R25
	395	[11001]	GETGLOBAL	R24 K70 ; R24 := mLists
	396	[11001]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	397	[11001]	GETGLOBAL	R25 K70 ; R25 := mLists
	398	[11001]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	399	[11001]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	400	[11001]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	401	[11001]	GETTABLE 	R27 R27 K100 ; R27 := R27["DATA_KNIFE"]
	402	[11001]	OP_LOADBOOL	R28 1 0 ; R28 := true
	403	[11001]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	404	[11001]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	405	[11001]	SETTABLE 	R24 K82 R25 ; R24["DataKnifeSlotId"] := R25
	406	[11002]	GETGLOBAL	R24 K70 ; R24 := mLists
	407	[11002]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	408	[11002]	SELF     	R24 R24 K91 ; R25 := R24; R24 := R24[0xbad4316f]
	409	[11002]	GETGLOBAL	R26 K20 ; R26 := LOADOUT_SLOTS
	410	[11002]	GETTABLE 	R26 R26 K101 ; R26 := R26["MANDACHORD"]
	411	[11002]	OP_LOADBOOL	R27 1 0 ; R27 := true
	412	[11002]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	413	[11002]	JMP      	635 ; PC := 635
	414	[11003]	GETGLOBAL	R24 K70 ; R24 := mLists
	415	[11003]	GETTABLE 	R24 R24 K87 ; R24 := R24["mLoadOutCategories"]
	416	[11003]	GETTABLE 	R24 R24 K89 ; R24 := R24["mStates"]
	417	[11003]	GETTABLE 	R24 R24 K102 ; R24 := R24["COMPANION"]
	418	[11003]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 443
	419	[11003]	JMP      	443 ; PC := 443
	420	[11004]	GETGLOBAL	R24 K70 ; R24 := mLists
	421	[11004]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	422	[11004]	GETGLOBAL	R25 K70 ; R25 := mLists
	423	[11004]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	424	[11004]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	425	[11004]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	426	[11004]	GETTABLE 	R27 R27 K103 ; R27 := R27["PET"]
	427	[11004]	OP_LOADBOOL	R28 1 0 ; R28 := true
	428	[11004]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	429	[11004]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	430	[11004]	SETTABLE 	R24 K80 R25 ; R24["PetSlotId"] := R25
	431	[11005]	GETGLOBAL	R24 K70 ; R24 := mLists
	432	[11005]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	433	[11005]	GETGLOBAL	R25 K70 ; R25 := mLists
	434	[11005]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	435	[11005]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	436	[11005]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	437	[11005]	GETTABLE 	R27 R27 K104 ; R27 := R27["PET_WEAPON"]
	438	[11005]	OP_LOADBOOL	R28 1 0 ; R28 := true
	439	[11005]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	440	[11005]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	441	[11005]	SETTABLE 	R24 K81 R25 ; R24["PetWeaponId"] := R25
	442	[11005]	JMP      	635 ; PC := 635
	443	[11007]	GETGLOBAL	R24 K70 ; R24 := mLists
	444	[11007]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	445	[11007]	SELF     	R24 R24 K91 ; R25 := R24; R24 := R24[0xbad4316f]
	446	[11007]	GETGLOBAL	R26 K20 ; R26 := LOADOUT_SLOTS
	447	[11007]	GETTABLE 	R26 R26 K105 ; R26 := R26["CONSUMABLES"]
	448	[11007]	OP_LOADBOOL	R27 1 0 ; R27 := true
	449	[11007]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	450	[11008]	GETGLOBAL	R24 K70 ; R24 := mLists
	451	[11008]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	452	[11008]	SELF     	R24 R24 K91 ; R25 := R24; R24 := R24[0xbad4316f]
	453	[11008]	GETGLOBAL	R26 K20 ; R26 := LOADOUT_SLOTS
	454	[11008]	GETTABLE 	R26 R26 K106 ; R26 := R26["EMOTES"]
	455	[11008]	OP_LOADBOOL	R27 1 0 ; R27 := true
	456	[11008]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	457	[11009]	JMP      	635 ; PC := 635
	458	[11010]	GETUPVAL 	R24 U3 ; R24 := U3
	459	[11010]	GETTABLE 	R24 R24 K86 ; R24 := R24["Current"]
	460	[11010]	EQ       	0 R24 K107 ; if R24 ~= 2.000000 then PC := 543
	461	[11010]	JMP      	543 ; PC := 543
	462	[11011]	GETGLOBAL	R24 K70 ; R24 := mLists
	463	[11011]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	464	[11011]	GETGLOBAL	R25 K70 ; R25 := mLists
	465	[11011]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	466	[11011]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	467	[11011]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	468	[11011]	GETTABLE 	R27 R27 K108 ; R27 := R27["PVP_SUIT"]
	469	[11011]	OP_LOADBOOL	R28 1 0 ; R28 := true
	470	[11011]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	471	[11011]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	472	[11011]	SETTABLE 	R24 K73 R25 ; R24["SuitSlotId"] := R25
	473	[11012]	GETGLOBAL	R24 K70 ; R24 := mLists
	474	[11012]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	475	[11012]	GETGLOBAL	R25 K70 ; R25 := mLists
	476	[11012]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	477	[11012]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	478	[11012]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	479	[11012]	GETTABLE 	R27 R27 K109 ; R27 := R27["PVP_PRIMARY"]
	480	[11012]	OP_LOADBOOL	R28 1 0 ; R28 := true
	481	[11012]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	482	[11012]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	483	[11012]	SETTABLE 	R24 K74 R25 ; R24["PrimarySlotId"] := R25
	484	[11013]	GETGLOBAL	R24 K70 ; R24 := mLists
	485	[11013]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	486	[11013]	GETGLOBAL	R25 K70 ; R25 := mLists
	487	[11013]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	488	[11013]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	489	[11013]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	490	[11013]	GETTABLE 	R27 R27 K110 ; R27 := R27["PVP_SECONDARY"]
	491	[11013]	OP_LOADBOOL	R28 1 0 ; R28 := true
	492	[11013]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	493	[11013]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	494	[11013]	SETTABLE 	R24 K75 R25 ; R24["SecondarySlotId"] := R25
	495	[11014]	GETGLOBAL	R24 K70 ; R24 := mLists
	496	[11014]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	497	[11014]	GETGLOBAL	R25 K70 ; R25 := mLists
	498	[11014]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	499	[11014]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	500	[11014]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	501	[11014]	GETTABLE 	R27 R27 K111 ; R27 := R27["PVP_MELEE"]
	502	[11014]	OP_LOADBOOL	R28 1 0 ; R28 := true
	503	[11014]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	504	[11014]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	505	[11014]	SETTABLE 	R24 K76 R25 ; R24["MeleeSlotId"] := R25
	506	[11016]	GETGLOBAL	R24 K70 ; R24 := mLists
	507	[11016]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	508	[11016]	GETGLOBAL	R25 K70 ; R25 := mLists
	509	[11016]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	510	[11016]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	511	[11016]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	512	[11016]	GETTABLE 	R27 R27 K112 ; R27 := R27["PVP_SPECIAL_A"]
	513	[11016]	OP_LOADBOOL	R28 1 0 ; R28 := true
	514	[11016]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	515	[11016]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	516	[11016]	SETTABLE 	R24 K78 R25 ; R24["SpecialASlotId"] := R25
	517	[11017]	GETGLOBAL	R24 K70 ; R24 := mLists
	518	[11017]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	519	[11017]	GETGLOBAL	R25 K70 ; R25 := mLists
	520	[11017]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	521	[11017]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	522	[11017]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	523	[11017]	GETTABLE 	R27 R27 K113 ; R27 := R27["PVP_SPECIAL_B"]
	524	[11017]	OP_LOADBOOL	R28 1 0 ; R28 := true
	525	[11017]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	526	[11017]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	527	[11017]	SETTABLE 	R24 K79 R25 ; R24["SpecialBSlotId"] := R25
	528	[11019]	GETGLOBAL	R24 K70 ; R24 := mLists
	529	[11019]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	530	[11019]	SELF     	R24 R24 K91 ; R25 := R24; R24 := R24[0xbad4316f]
	531	[11019]	GETGLOBAL	R26 K20 ; R26 := LOADOUT_SLOTS
	532	[11019]	GETTABLE 	R26 R26 K114 ; R26 := R26["PVP_SCOOP"]
	533	[11019]	OP_LOADBOOL	R27 1 0 ; R27 := true
	534	[11019]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	535	[11020]	GETGLOBAL	R24 K70 ; R24 := mLists
	536	[11020]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	537	[11020]	SELF     	R24 R24 K91 ; R25 := R24; R24 := R24[0xbad4316f]
	538	[11020]	GETGLOBAL	R26 K20 ; R26 := LOADOUT_SLOTS
	539	[11020]	GETTABLE 	R26 R26 K115 ; R26 := R26["PVP_EMOTES"]
	540	[11020]	OP_LOADBOOL	R27 1 0 ; R27 := true
	541	[11020]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	542	[11020]	JMP      	635 ; PC := 635
	543	[11022]	GETGLOBAL	R24 K70 ; R24 := mLists
	544	[11022]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	545	[11022]	GETGLOBAL	R25 K70 ; R25 := mLists
	546	[11022]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	547	[11022]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	548	[11022]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	549	[11022]	GETTABLE 	R27 R27 K116 ; R27 := R27["ARCHWING"]
	550	[11022]	OP_LOADBOOL	R28 1 0 ; R28 := true
	551	[11022]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	552	[11022]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	553	[11022]	SETTABLE 	R24 K73 R25 ; R24["SuitSlotId"] := R25
	554	[11023]	GETGLOBAL	R24 K70 ; R24 := mLists
	555	[11023]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	556	[11023]	GETGLOBAL	R25 K70 ; R25 := mLists
	557	[11023]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	558	[11023]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	559	[11023]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	560	[11023]	GETTABLE 	R27 R27 K117 ; R27 := R27["ARCHGUN"]
	561	[11023]	OP_LOADBOOL	R28 1 0 ; R28 := true
	562	[11023]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	563	[11023]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	564	[11023]	SETTABLE 	R24 K74 R25 ; R24["PrimarySlotId"] := R25
	565	[11024]	GETGLOBAL	R24 K70 ; R24 := mLists
	566	[11024]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	567	[11024]	GETGLOBAL	R25 K70 ; R25 := mLists
	568	[11024]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	569	[11024]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	570	[11024]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	571	[11024]	GETTABLE 	R27 R27 K118 ; R27 := R27["ARCHMELEE"]
	572	[11024]	OP_LOADBOOL	R28 1 0 ; R28 := true
	573	[11024]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	574	[11024]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	575	[11024]	SETTABLE 	R24 K76 R25 ; R24["MeleeSlotId"] := R25
	576	[11025]	GETUPVAL 	R24 U4 ; R24 := U4
	577	[11025]	GETTABLE 	R24 R24 K119 ; R24 := R24["CanEquipHeavyWeapons"]
	578	[11025]	TEST     	R24 0 ; if not R24 then PC := 591
	579	[11025]	JMP      	591 ; PC := 591
	580	[11026]	GETGLOBAL	R24 K70 ; R24 := mLists
	581	[11026]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	582	[11026]	GETGLOBAL	R25 K70 ; R25 := mLists
	583	[11026]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	584	[11026]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	585	[11026]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	586	[11026]	GETTABLE 	R27 R27 K120 ; R27 := R27["HEAVY_GUN"]
	587	[11026]	OP_LOADBOOL	R28 1 0 ; R28 := true
	588	[11026]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	589	[11026]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	590	[11026]	SETTABLE 	R24 K85 R25 ; R24["HeavyGunSlotId"] := R25
	591	[11028]	GETGLOBAL	R24 K70 ; R24 := mLists
	592	[11028]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	593	[11028]	SELF     	R24 R24 K91 ; R25 := R24; R24 := R24[0xbad4316f]
	594	[11028]	GETGLOBAL	R26 K20 ; R26 := LOADOUT_SLOTS
	595	[11028]	GETTABLE 	R26 R26 K121 ; R26 := R26["KDRIVE"]
	596	[11028]	OP_LOADBOOL	R27 1 0 ; R27 := true
	597	[11028]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	598	[11030]	GETUPVAL 	R24 U4 ; R24 := U4
	599	[11030]	GETTABLE 	R24 R24 K122 ; R24 := R24["CanEquipMech"]
	600	[11030]	TEST     	R24 0 ; if not R24 then PC := 635
	601	[11030]	JMP      	635 ; PC := 635
	602	[11031]	GETGLOBAL	R24 K70 ; R24 := mLists
	603	[11031]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	604	[11031]	GETGLOBAL	R25 K70 ; R25 := mLists
	605	[11031]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	606	[11031]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	607	[11031]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	608	[11031]	GETTABLE 	R27 R27 K123 ; R27 := R27["MECH_SUIT"]
	609	[11031]	OP_LOADBOOL	R28 1 0 ; R28 := true
	610	[11031]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	611	[11031]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	612	[11031]	SETTABLE 	R24 K83 R25 ; R24["MechSuitSlotId"] := R25
	613	[11032]	GETGLOBAL	R24 K70 ; R24 := mLists
	614	[11032]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	615	[11032]	GETGLOBAL	R25 K70 ; R25 := mLists
	616	[11032]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	617	[11032]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	618	[11032]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	619	[11032]	GETTABLE 	R27 R27 K124 ; R27 := R27["MECH_GUN"]
	620	[11032]	OP_LOADBOOL	R28 1 0 ; R28 := true
	621	[11032]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	622	[11032]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	623	[11032]	SETTABLE 	R24 K84 R25 ; R24["MechGunSlotId"] := R25
	624	[11033]	GETGLOBAL	R24 K70 ; R24 := mLists
	625	[11033]	GETTABLE 	R24 R24 K71 ; R24 := R24["mLoadOutList"]
	626	[11033]	GETGLOBAL	R25 K70 ; R25 := mLists
	627	[11033]	GETTABLE 	R25 R25 K71 ; R25 := R25["mLoadOutList"]
	628	[11033]	SELF     	R25 R25 K91 ; R26 := R25; R25 := R25[0xbad4316f]
	629	[11033]	GETGLOBAL	R27 K20 ; R27 := LOADOUT_SLOTS
	630	[11033]	GETTABLE 	R27 R27 K125 ; R27 := R27["MECH_SPECIAL_A"]
	631	[11033]	OP_LOADBOOL	R28 1 0 ; R28 := true
	632	[11033]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	633	[11033]	GETTABLE 	R25 R25 K93 ; R25 := R25["Id"]
	634	[11033]	SETTABLE 	R24 K78 R25 ; R24["SpecialASlotId"] := R25
	635	[11037]	GETGLOBAL	R24 K126 ; R24 := mSelected
	636	[11037]	SETTABLE 	R24 K127 K11 ; R24["Element"] := nil
	637	[11039]	GETGLOBAL	R24 K128 ; R24 := mLoaders
	638	[11039]	GETTABLE 	R24 R24 K129 ; R24 := R24["mSlotLoader"]
	639	[11039]	SELF     	R24 R24 K130 ; R25 := R24; R24 := R24[0x5a7aac67]
	640	[11039]	CALL     	R24 2 1 ; R24(R25)
	641	[11040]	GETGLOBAL	R24 K131 ; R24 := mPendingRandomizeInfo
	642	[11040]	SETTABLE 	R24 K132 K11 ; R24["OriginalSlot"] := nil
	643	[11041]	LEN      	R24 R4 ; R24 := # R4
	644	[11041]	LT       	0 K23 R24 ; if 0.000000 >= R24 then PC := 665
	645	[11041]	JMP      	665 ; PC := 665
	646	[11042]	GETGLOBAL	R24 K1 ; R24 := 0x7b998233
	647	[11042]	GETGLOBAL	R25 K9 ; R25 := _T
	648	[11042]	GETTABLE 	R25 R25 K133 ; R25 := R25["BackgroundMovie"]
	649	[11042]	CALL     	R24 2 2 ; R24 := R24(R25)
	650	[11042]	TEST     	R24 1 ; if R24 then PC := 658
	651	[11042]	JMP      	658 ; PC := 658
	652	[11043]	GETGLOBAL	R24 K9 ; R24 := _T
	653	[11043]	GETTABLE 	R24 R24 K133 ; R24 := R24["BackgroundMovie"]
	654	[11043]	SELF     	R24 R24 K16 ; R25 := R24; R24 := R24[0xe4162eed]
	655	[11043]	LOADK    	R26 K134 ; R26 := "ShowBlockingMessage"
	656	[11043]	LOADK    	R27 K135 ; R27 := "2"
	657	[11043]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	658	[11045]	GETGLOBAL	R24 K128 ; R24 := mLoaders
	659	[11045]	GETTABLE 	R24 R24 K129 ; R24 := R24["mSlotLoader"]
	660	[11045]	SELF     	R24 R24 K136 ; R25 := R24; R24 := R24[0x2f86cf1e]
	661	[11045]	MOVE     	R26 R4 ; R26 := R4
	662	[11045]	OP_LOADBOOL	R27 1 0 ; R27 := true
	663	[11045]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	664	[11045]	JMP      	667 ; PC := 667
	665	[11047]	GETUPVAL 	R24 U5 ; R24 := U5
	666	[11047]	CALL     	R24 1 1 ; R24()
	667	[11049]	RETURN   	R0 1 ; return 

function #167 <?:11051,11107> (355 instructions, 1420 bytes at 00000211342DDCC0)
0 params, 7 slots, 1 upvalue, 0 locals, 65 constants, 1 function
	1	[11052]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[11052]	SETGLOBALHASH	R0 K0 ; mCosmeticsLabels := R0
	3	[11063]	CLOSURE  	R0 0 ; R0 := closure(Function #1)
	4	[11065]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	5	[11065]	MOVE     	R2 R0 ; R2 := R0
	6	[11065]	LOADK    	R3 K3 ; R3 := "/Lotus/Language/Menu/Cosmetics_Skin"
	7	[11065]	GETGLOBAL	R4 K4 ; R4 := mLists
	8	[11065]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	9	[11065]	GETTABLE 	R4 R4 K6 ; R4 := R4["DEFAULT"]
	10	[11065]	LOADK    	R5 K7 ; R5 := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
	11	[11065]	LOADK    	R6 := 1.000000
	12	[11065]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	13	[11065]	SETTABLE 	R1 K2 R2 ; R1[0.000000] := R2
	14	[11066]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	15	[11066]	GETTABLE 	R1 R1 K2 ; R1 := R1[0.000000]
	16	[11066]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	17	[11066]	GETTABLE 	R1 R1 K2 ; R1 := R1[0.000000]
	18	[11066]	NEWTABLE 	R2 0 1 ; R2 := {}
	19	[11066]	SETTABLE 	R2 K9 K10 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Helmet"
	20	[11066]	SETTABLE 	R1 K2 R2 ; R1[0.000000] := R2
	21	[11068]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	22	[11068]	MOVE     	R2 R0 ; R2 := R0
	23	[11068]	LOADK    	R3 K12 ; R3 := "/Lotus/Language/Menu/Cosmetics_ArmLeft"
	24	[11068]	GETGLOBAL	R4 K4 ; R4 := mLists
	25	[11068]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	26	[11068]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	27	[11068]	LOADNIL  	R5 R5 ; R5 := nil
	28	[11068]	LOADK    	R6 := 4.000000
	29	[11068]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	30	[11068]	SETTABLE 	R1 K11 R2 ; R1[1.000000] := R2
	31	[11069]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	32	[11069]	GETTABLE 	R1 R1 K11 ; R1 := R1[1.000000]
	33	[11069]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	34	[11069]	GETTABLE 	R1 R1 K2 ; R1 := R1[0.000000]
	35	[11069]	NEWTABLE 	R2 0 1 ; R2 := {}
	36	[11069]	SETTABLE 	R2 K9 K3 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
	37	[11069]	SETTABLE 	R1 K14 R2 ; R1[2.000000] := R2
	38	[11070]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	39	[11070]	GETTABLE 	R1 R1 K11 ; R1 := R1[1.000000]
	40	[11070]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	41	[11070]	GETTABLE 	R1 R1 K15 ; R1 := R1[3.000000]
	42	[11070]	NEWTABLE 	R2 0 1 ; R2 := {}
	43	[11070]	SETTABLE 	R2 K9 K3 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
	44	[11070]	SETTABLE 	R1 K14 R2 ; R1[2.000000] := R2
	45	[11072]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	46	[11072]	MOVE     	R2 R0 ; R2 := R0
	47	[11072]	LOADK    	R3 K17 ; R3 := "/Lotus/Language/Menu/Cosmetics_ArmRight"
	48	[11072]	GETGLOBAL	R4 K4 ; R4 := mLists
	49	[11072]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	50	[11072]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	51	[11072]	LOADNIL  	R5 R5 ; R5 := nil
	52	[11072]	LOADK    	R6 := 4.000000
	53	[11072]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	54	[11072]	SETTABLE 	R1 K16 R2 ; R1[9.000000] := R2
	55	[11074]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	56	[11074]	MOVE     	R2 R0 ; R2 := R0
	57	[11074]	LOADK    	R3 K18 ; R3 := "/Lotus/Language/Menu/Cosmetics_LegLeft"
	58	[11074]	GETGLOBAL	R4 K4 ; R4 := mLists
	59	[11074]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	60	[11074]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	61	[11074]	LOADNIL  	R5 R5 ; R5 := nil
	62	[11074]	LOADK    	R6 := 5.000000
	63	[11074]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	64	[11074]	SETTABLE 	R1 K14 R2 ; R1[2.000000] := R2
	65	[11075]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	66	[11075]	GETTABLE 	R1 R1 K14 ; R1 := R1[2.000000]
	67	[11075]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	68	[11075]	GETTABLE 	R1 R1 K2 ; R1 := R1[0.000000]
	69	[11075]	NEWTABLE 	R2 0 3 ; R2 := {}
	70	[11075]	SETTABLE 	R2 K9 K19 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	71	[11075]	GETGLOBAL	R3 K4 ; R3 := mLists
	72	[11075]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	73	[11075]	GETTABLE 	R3 R3 K21 ; R3 := R3["HOLSTER_STYLE"]
	74	[11075]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	75	[11075]	SETTABLE 	R2 K22 K19 ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	76	[11075]	SETTABLE 	R1 K14 R2 ; R1[2.000000] := R2
	77	[11076]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	78	[11076]	GETTABLE 	R1 R1 K14 ; R1 := R1[2.000000]
	79	[11076]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	80	[11076]	GETTABLE 	R1 R1 K15 ; R1 := R1[3.000000]
	81	[11076]	NEWTABLE 	R2 0 3 ; R2 := {}
	82	[11076]	SETTABLE 	R2 K9 K19 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	83	[11076]	GETGLOBAL	R3 K4 ; R3 := mLists
	84	[11076]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	85	[11076]	GETTABLE 	R3 R3 K21 ; R3 := R3["HOLSTER_STYLE"]
	86	[11076]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	87	[11076]	SETTABLE 	R2 K22 K19 ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	88	[11076]	SETTABLE 	R1 K14 R2 ; R1[2.000000] := R2
	89	[11077]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	90	[11077]	GETTABLE 	R1 R1 K14 ; R1 := R1[2.000000]
	91	[11077]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	92	[11077]	GETTABLE 	R1 R1 K2 ; R1 := R1[0.000000]
	93	[11077]	NEWTABLE 	R2 0 3 ; R2 := {}
	94	[11077]	SETTABLE 	R2 K9 K19 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	95	[11077]	GETGLOBAL	R3 K4 ; R3 := mLists
	96	[11077]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	97	[11077]	GETTABLE 	R3 R3 K21 ; R3 := R3["HOLSTER_STYLE"]
	98	[11077]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	99	[11077]	SETTABLE 	R2 K22 K19 ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	100	[11077]	SETTABLE 	R1 K11 R2 ; R1[1.000000] := R2
	101	[11078]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	102	[11078]	GETTABLE 	R1 R1 K14 ; R1 := R1[2.000000]
	103	[11078]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	104	[11078]	GETTABLE 	R1 R1 K15 ; R1 := R1[3.000000]
	105	[11078]	NEWTABLE 	R2 0 3 ; R2 := {}
	106	[11078]	SETTABLE 	R2 K9 K19 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	107	[11078]	GETGLOBAL	R3 K4 ; R3 := mLists
	108	[11078]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	109	[11078]	GETTABLE 	R3 R3 K21 ; R3 := R3["HOLSTER_STYLE"]
	110	[11078]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	111	[11078]	SETTABLE 	R2 K22 K19 ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	112	[11078]	SETTABLE 	R1 K11 R2 ; R1[1.000000] := R2
	113	[11079]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	114	[11079]	GETTABLE 	R1 R1 K14 ; R1 := R1[2.000000]
	115	[11079]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	116	[11079]	GETTABLE 	R1 R1 K2 ; R1 := R1[0.000000]
	117	[11079]	NEWTABLE 	R2 0 3 ; R2 := {}
	118	[11079]	SETTABLE 	R2 K9 K19 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	119	[11079]	GETGLOBAL	R3 K4 ; R3 := mLists
	120	[11079]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	121	[11079]	GETTABLE 	R3 R3 K21 ; R3 := R3["HOLSTER_STYLE"]
	122	[11079]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	123	[11079]	SETTABLE 	R2 K22 K19 ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	124	[11079]	SETTABLE 	R1 K15 R2 ; R1[3.000000] := R2
	125	[11080]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	126	[11080]	GETTABLE 	R1 R1 K14 ; R1 := R1[2.000000]
	127	[11080]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	128	[11080]	GETTABLE 	R1 R1 K15 ; R1 := R1[3.000000]
	129	[11080]	NEWTABLE 	R2 0 3 ; R2 := {}
	130	[11080]	SETTABLE 	R2 K9 K19 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	131	[11080]	GETGLOBAL	R3 K4 ; R3 := mLists
	132	[11080]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	133	[11080]	GETTABLE 	R3 R3 K21 ; R3 := R3["HOLSTER_STYLE"]
	134	[11080]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	135	[11080]	SETTABLE 	R2 K22 K19 ; R2["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_HolsterStyle"
	136	[11080]	SETTABLE 	R1 K15 R2 ; R1[3.000000] := R2
	137	[11082]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	138	[11082]	MOVE     	R2 R0 ; R2 := R0
	139	[11082]	LOADK    	R3 K23 ; R3 := "/Lotus/Language/Menu/Cosmetics_CustomBadge"
	140	[11082]	GETGLOBAL	R4 K4 ; R4 := mLists
	141	[11082]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	142	[11082]	GETTABLE 	R4 R4 K24 ; R4 := R4["BADGES"]
	143	[11082]	LOADK    	R5 K25 ; R5 := "/Lotus/Language/Menu/Cosmetics_Regalia"
	144	[11082]	LOADK    	R6 := 2.000000
	145	[11082]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	146	[11082]	SETTABLE 	R1 K15 R2 ; R1[3.000000] := R2
	147	[11083]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	148	[11083]	MOVE     	R2 R0 ; R2 := R0
	149	[11083]	LOADK    	R3 K27 ; R3 := "/Lotus/Language/Menu/Cosmetics_EventBadge"
	150	[11083]	GETGLOBAL	R4 K4 ; R4 := mLists
	151	[11083]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	152	[11083]	GETTABLE 	R4 R4 K24 ; R4 := R4["BADGES"]
	153	[11083]	LOADNIL  	R5 R5 ; R5 := nil
	154	[11083]	LOADK    	R6 := 2.000000
	155	[11083]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	156	[11083]	SETTABLE 	R1 K26 R2 ; R1[4.000000] := R2
	157	[11084]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	158	[11084]	MOVE     	R2 R0 ; R2 := R0
	159	[11084]	LOADK    	R3 K29 ; R3 := "/Lotus/Language/Menu/Cosmetics_AnimationSet"
	160	[11084]	GETGLOBAL	R4 K4 ; R4 := mLists
	161	[11084]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	162	[11084]	GETTABLE 	R4 R4 K6 ; R4 := R4["DEFAULT"]
	163	[11084]	LOADNIL  	R5 R5 ; R5 := nil
	164	[11084]	LOADK    	R6 := 3.000000
	165	[11084]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	166	[11084]	SETTABLE 	R1 K28 R2 ; R1[0xae91e43b] := R2
	167	[11085]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	168	[11085]	GETTABLE 	R1 R1 K28 ; R1 := R1[5.000000]
	169	[11085]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	170	[11085]	GETTABLE 	R1 R1 K11 ; R1 := R1[1.000000]
	171	[11085]	NEWTABLE 	R2 0 2 ; R2 := {}
	172	[11085]	SETTABLE 	R2 K9 K30 ; R2["Title"] := "/Lotus/Language/SolarisVenus/Cosmetics_PetPersonality"
	173	[11085]	SETTABLE 	R2 K22 K7 ; R2["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
	174	[11085]	SETTABLE 	R1 K2 R2 ; R1[0.000000] := R2
	175	[11086]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	176	[11086]	MOVE     	R2 R0 ; R2 := R0
	177	[11086]	LOADK    	R3 K32 ; R3 := "/Lotus/Language/Menu/Cosmetics_Accessories"
	178	[11086]	GETGLOBAL	R4 K4 ; R4 := mLists
	179	[11086]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	180	[11086]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	181	[11086]	LOADK    	R5 K33 ; R5 := "/Lotus/Language/Menu/Cosmetics_Attachments"
	182	[11086]	LOADK    	R6 := 1.000000
	183	[11086]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	184	[11086]	SETTABLE 	R1 K31 R2 ; R1[6.000000] := R2
	185	[11087]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	186	[11087]	GETTABLE 	R1 R1 K31 ; R1 := R1[6.000000]
	187	[11087]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	188	[11087]	GETTABLE 	R1 R1 K2 ; R1 := R1[0.000000]
	189	[11087]	NEWTABLE 	R2 0 2 ; R2 := {}
	190	[11087]	SETTABLE 	R2 K9 K34 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Neckwear"
	191	[11087]	GETGLOBAL	R3 K4 ; R3 := mLists
	192	[11087]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	193	[11087]	GETTABLE 	R3 R3 K35 ; R3 := R3["SYANDANAS"]
	194	[11087]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	195	[11087]	SETTABLE 	R1 K2 R2 ; R1[0.000000] := R2
	196	[11088]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	197	[11088]	GETTABLE 	R1 R1 K31 ; R1 := R1[6.000000]
	198	[11088]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	199	[11088]	GETTABLE 	R1 R1 K15 ; R1 := R1[3.000000]
	200	[11088]	NEWTABLE 	R2 0 2 ; R2 := {}
	201	[11088]	SETTABLE 	R2 K9 K34 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Neckwear"
	202	[11088]	GETGLOBAL	R3 K4 ; R3 := mLists
	203	[11088]	GETTABLE 	R3 R3 K5 ; R3 := R3["mCosmeticsList"]
	204	[11088]	GETTABLE 	R3 R3 K35 ; R3 := R3["SYANDANAS"]
	205	[11088]	SETTABLE 	R2 K20 R3 ; R2["Level"] := R3
	206	[11088]	SETTABLE 	R1 K2 R2 ; R1[0.000000] := R2
	207	[11089]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	208	[11089]	MOVE     	R2 R0 ; R2 := R0
	209	[11089]	LOADK    	R3 K37 ; R3 := "/Lotus/Language/Menu/Cosmetics_BodySkin"
	210	[11089]	GETGLOBAL	R4 K4 ; R4 := mLists
	211	[11089]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	212	[11089]	GETTABLE 	R4 R4 K6 ; R4 := R4["DEFAULT"]
	213	[11089]	LOADNIL  	R5 R5 ; R5 := nil
	214	[11089]	LOADK    	R6 := 2.000000
	215	[11089]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	216	[11089]	SETTABLE 	R1 K36 R2 ; R1[7.000000] := R2
	217	[11090]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	218	[11090]	GETTABLE 	R1 R1 K36 ; R1 := R1[7.000000]
	219	[11090]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	220	[11090]	GETTABLE 	R1 R1 K14 ; R1 := R1[2.000000]
	221	[11090]	NEWTABLE 	R2 0 2 ; R2 := {}
	222	[11090]	SETTABLE 	R2 K9 K3 ; R2["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
	223	[11090]	SETTABLE 	R2 K22 K7 ; R2["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
	224	[11090]	SETTABLE 	R1 K2 R2 ; R1[0.000000] := R2
	225	[11091]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	226	[11091]	GETTABLE 	R1 R1 K36 ; R1 := R1[7.000000]
	227	[11091]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	228	[11091]	GETTABLE 	R1 R1 K31 ; R1 := R1[6.000000]
	229	[11091]	GETUPVAL 	R2 U0 ; R2 := U0
	230	[11091]	GETTABLE 	R2 R2 K38 ; R2 := R2["KDriveSlot"]
	231	[11091]	NEWTABLE 	R3 0 2 ; R3 := {}
	232	[11091]	SETTABLE 	R3 K9 K3 ; R3["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
	233	[11091]	SETTABLE 	R3 K22 K7 ; R3["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
	234	[11091]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	235	[11092]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	236	[11092]	MOVE     	R2 R0 ; R2 := R0
	237	[11092]	LOADK    	R3 K40 ; R3 := "/Lotus/Language/Menu/Cosmetics_Chest"
	238	[11092]	GETGLOBAL	R4 K4 ; R4 := mLists
	239	[11092]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	240	[11092]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	241	[11092]	LOADK    	R5 K33 ; R5 := "/Lotus/Language/Menu/Cosmetics_Attachments"
	242	[11092]	LOADK    	R6 := 3.000000
	243	[11092]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	244	[11092]	SETTABLE 	R1 K39 R2 ; R1[8.000000] := R2
	245	[11093]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	246	[11093]	MOVE     	R2 R0 ; R2 := R0
	247	[11093]	LOADK    	R3 K42 ; R3 := "/Lotus/Language/Menu/Cosmetics_LegRight"
	248	[11093]	GETGLOBAL	R4 K4 ; R4 := mLists
	249	[11093]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	250	[11093]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	251	[11093]	LOADNIL  	R5 R5 ; R5 := nil
	252	[11093]	LOADK    	R6 := 5.000000
	253	[11093]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	254	[11093]	SETTABLE 	R1 K41 R2 ; R1[10.000000] := R2
	255	[11094]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	256	[11094]	MOVE     	R2 R0 ; R2 := R0
	257	[11094]	LOADK    	R3 K44 ; R3 := "/Lotus/Language/Menu/Cosmetics_Face"
	258	[11094]	GETGLOBAL	R4 K4 ; R4 := mLists
	259	[11094]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	260	[11094]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	261	[11094]	LOADNIL  	R5 R5 ; R5 := nil
	262	[11094]	LOADK    	R6 := 6.000000
	263	[11094]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	264	[11094]	SETTABLE 	R1 K43 R2 ; R1[11.000000] := R2
	265	[11095]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	266	[11095]	MOVE     	R2 R0 ; R2 := R0
	267	[11095]	LOADK    	R3 K46 ; R3 := "/Lotus/Language/Menu/Cosmetics_ChestSigil"
	268	[11095]	GETGLOBAL	R4 K4 ; R4 := mLists
	269	[11095]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	270	[11095]	GETTABLE 	R4 R4 K47 ; R4 := R4["FRONTSIGIL"]
	271	[11095]	LOADK    	R5 K48 ; R5 := "/Lotus/Language/Menu/Cosmetics_FrontSigil"
	272	[11095]	LOADK    	R6 := 1.000000
	273	[11095]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	274	[11095]	SETTABLE 	R1 K45 R2 ; R1[12.000000] := R2
	275	[11096]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	276	[11096]	MOVE     	R2 R0 ; R2 := R0
	277	[11096]	LOADK    	R3 K50 ; R3 := "/Lotus/Language/Menu/Cosmetics_BackSigil"
	278	[11096]	GETGLOBAL	R4 K4 ; R4 := mLists
	279	[11096]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	280	[11096]	GETTABLE 	R4 R4 K51 ; R4 := R4["BACKSIGIL"]
	281	[11096]	LOADK    	R5 K50 ; R5 := "/Lotus/Language/Menu/Cosmetics_BackSigil"
	282	[11096]	LOADK    	R6 := 2.000000
	283	[11096]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	284	[11096]	SETTABLE 	R1 K49 R2 ; R1[13.000000] := R2
	285	[11097]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	286	[11097]	GETTABLE 	R1 R1 K49 ; R1 := R1[13.000000]
	287	[11097]	GETTABLE 	R1 R1 K8 ; R1 := R1["Overrides"]
	288	[11097]	GETTABLE 	R1 R1 K31 ; R1 := R1[6.000000]
	289	[11097]	GETUPVAL 	R2 U0 ; R2 := U0
	290	[11097]	GETTABLE 	R2 R2 K38 ; R2 := R2["KDriveSlot"]
	291	[11097]	NEWTABLE 	R3 0 2 ; R3 := {}
	292	[11097]	SETTABLE 	R3 K9 K52 ; R3["Title"] := "/Lotus/Language/Hoverboards/CategoryHoverboardSticker"
	293	[11097]	SETTABLE 	R3 K22 K52 ; R3["TopTitle"] := "/Lotus/Language/Hoverboards/CategoryHoverboardSticker"
	294	[11097]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	295	[11098]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	296	[11098]	MOVE     	R2 R0 ; R2 := R0
	297	[11098]	LOADK    	R3 K54 ; R3 := "/Lotus/Language/Menu/Cosmetics_FxSet"
	298	[11098]	GETGLOBAL	R4 K4 ; R4 := mLists
	299	[11098]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	300	[11098]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	301	[11098]	LOADNIL  	R5 R5 ; R5 := nil
	302	[11098]	LOADK    	R6 := 7.000000
	303	[11098]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	304	[11098]	SETTABLE 	R1 K53 R2 ; R1[0xd8dfa041] := R2
	305	[11099]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	306	[11099]	MOVE     	R2 R0 ; R2 := R0
	307	[11099]	LOADK    	R3 K56 ; R3 := "/Lotus/Language/Menu/Cosmetics_SpecialFxSet"
	308	[11099]	GETGLOBAL	R4 K4 ; R4 := mLists
	309	[11099]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	310	[11099]	GETTABLE 	R4 R4 K13 ; R4 := R4["ATTACHMENTS"]
	311	[11099]	LOADNIL  	R5 R5 ; R5 := nil
	312	[11099]	LOADK    	R6 := 8.000000
	313	[11099]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	314	[11099]	SETTABLE 	R1 K55 R2 ; R1[0xf278f8a1] := R2
	315	[11102]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	316	[11102]	MOVE     	R2 R0 ; R2 := R0
	317	[11102]	LOADK    	R3 K58 ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material1"
	318	[11102]	GETGLOBAL	R4 K4 ; R4 := mLists
	319	[11102]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	320	[11102]	GETTABLE 	R4 R4 K6 ; R4 := R4["DEFAULT"]
	321	[11102]	LOADNIL  	R5 R5 ; R5 := nil
	322	[11102]	LOADK    	R6 := 50.000000
	323	[11102]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	324	[11102]	SETTABLE 	R1 K57 R2 ; R1[0x08681f50] := R2
	325	[11103]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	326	[11103]	MOVE     	R2 R0 ; R2 := R0
	327	[11103]	LOADK    	R3 K60 ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material2"
	328	[11103]	GETGLOBAL	R4 K4 ; R4 := mLists
	329	[11103]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	330	[11103]	GETTABLE 	R4 R4 K6 ; R4 := R4["DEFAULT"]
	331	[11103]	LOADNIL  	R5 R5 ; R5 := nil
	332	[11103]	LOADK    	R6 := 51.000000
	333	[11103]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	334	[11103]	SETTABLE 	R1 K59 R2 ; R1[0x25d99d89] := R2
	335	[11104]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	336	[11104]	MOVE     	R2 R0 ; R2 := R0
	337	[11104]	LOADK    	R3 K62 ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material3"
	338	[11104]	GETGLOBAL	R4 K4 ; R4 := mLists
	339	[11104]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	340	[11104]	GETTABLE 	R4 R4 K6 ; R4 := R4["DEFAULT"]
	341	[11104]	LOADNIL  	R5 R5 ; R5 := nil
	342	[11104]	LOADK    	R6 := 52.000000
	343	[11104]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	344	[11104]	SETTABLE 	R1 K61 R2 ; R1[19.000000] := R2
	345	[11105]	GETGLOBAL	R1 K0 ; R1 := mCosmeticsLabels
	346	[11105]	MOVE     	R2 R0 ; R2 := R0
	347	[11105]	LOADK    	R3 K64 ; R3 := "/Lotus/Language/Loadout/Cosmetics_Material4"
	348	[11105]	GETGLOBAL	R4 K4 ; R4 := mLists
	349	[11105]	GETTABLE 	R4 R4 K5 ; R4 := R4["mCosmeticsList"]
	350	[11105]	GETTABLE 	R4 R4 K6 ; R4 := R4["DEFAULT"]
	351	[11105]	LOADNIL  	R5 R5 ; R5 := nil
	352	[11105]	LOADK    	R6 := 53.000000
	353	[11105]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	354	[11105]	SETTABLE 	R1 K63 R2 ; R1[0x00000000] := R2
	355	[11107]	RETURN   	R0 1 ; return 

function #168 <?:11109,11113> (10 instructions, 40 bytes at 00000211359FBC50)
1 param, 3 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[11110]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[11110]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[11111]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[11111]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[11111]	GETTABLE 	R2 R2 K1 ; R2 := R2["SELECTING_SKINS"]
	6	[11111]	CALL     	R1 2 1 ; R1(R2)
	7	[11112]	GETUPVAL 	R1 U2 ; R1 := U2
	8	[11112]	MOVE     	R2 R0 ; R2 := R0
	9	[11112]	CALL     	R1 2 1 ; R1(R2)
	10	[11113]	RETURN   	R0 1 ; return 

function #169 <?:11115,11166> (123 instructions, 492 bytes at 00000211359FBD90)
0 params, 25 slots, 3 upvalues, 0 locals, 44 constants, 1 function
	1	[11116]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[11116]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[11116]	LOADK    	R2 K2 ; R2 := "CosmeticsMenu"
	4	[11116]	LOADK    	R3 := 11.000000
	5	[11116]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[11116]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[11118]	NEWTABLE 	R0 0 0 ; R0 := {}
	8	[11120]	NEWTABLE 	R1 0 5 ; R1 := {}
	9	[11120]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	10	[11120]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x42b04007]
	11	[11120]	LOADK    	R4 K5 ; R4 := "/Lotus/Language/Menu/Arsenal_None"
	12	[11120]	OP_LOADBOOL	R5 0 0 ; R5 := false
	13	[11120]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	14	[11120]	SETTABLE 	R1 K3 R2 ; R1["Name"] := R2
	15	[11120]	SETTABLE 	R1 K6 K7 ; R1["mEmpty"] := true
	16	[11120]	SETTABLE 	R1 K8 K7 ; R1["mPurchased"] := true
	17	[11120]	NEWTABLE 	R2 0 1 ; R2 := {}
	18	[11120]	SETTABLE 	R2 K10 K11 ; R2["UID"] := ""
	19	[11120]	SETTABLE 	R1 K9 R2 ; R1["mPurchasedInfo"] := R2
	20	[11120]	SETTABLE 	R1 K12 K13 ; R1["mSortId"] := -1.000000
	21	[11122]	NEWTABLE 	R2 0 4 ; R2 := {}
	22	[11123]	SETTABLE 	R2 K15 K16 ; R2["Title"] := "/Lotus/Language/Menu/Loadout_Pennant"
	23	[11124]	GETGLOBAL	R3 K18 ; R3 := 0x7ed0a956
	24	[11124]	LOADK    	R4 K19 ; R4 := "/Lotus/Upgrades/Skins/Lunaro/Arena/PennantMeshBase"
	25	[11124]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[11124]	SETTABLE 	R2 K17 R3 ; R2["BaseType"] := R3
	27	[11125]	NEWTABLE 	R3 1 0 ; R3 := {}
	28	[11125]	MOVE     	R4 R1 ; R4 := R1
	29	[11125]	SETLIST  	R3 1 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
	30	[11125]	SETTABLE 	R2 K20 R3 ; R2["Items"] := R3
	31	[11126]	GETUPVAL 	R3 U0 ; R3 := U0
	32	[11126]	SETTABLE 	R2 K21 R3 ; R2["Callback"] := R3
	33	[11127]	SETTABLE 	R0 K14 R2 ; R0[1.000000] := R2
	34	[11129]	GETUPVAL 	R2 U1 ; R2 := U1
	35	[11129]	SELF     	R2 R2 K22 ; R3 := R2; R2 := R2[0xe9cbffa8]
	36	[11129]	GETGLOBAL	R4 K23 ; R4 := gArenaCustomizationItemType
	37	[11129]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	38	[11131]	GETGLOBAL	R3 K24 ; R3 := mInventory
	39	[11131]	SELF     	R3 R3 K25 ; R4 := R3; R3 := R3[0xd8dfa041]
	40	[11131]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[11133]	LOADK    	R4 := 1.000000
	42	[11133]	LEN      	R5 R0 ; R5 := # R0
	43	[11133]	LOADK    	R6 := 1.000000
	44	[11133]	FORPREP  	R4 117 ; R4 -= R6; PC := 117
	45	[11134]	GETTABLE 	R8 R0 R7 ; R8 := R0[R7]
	46	[11135]	GETGLOBAL	R9 K26 ; R9 := 0xc8802016
	47	[11135]	MOVE     	R10 R2 ; R10 := R2
	48	[11135]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	49	[11135]	JMP      	109 ; PC := 109
	50	[11136]	SELF     	R14 R13 K27 ; R15 := R13; R14 := R13[0xf278f8a1]
	51	[11136]	CALL     	R14 2 2 ; R14 := R14(R15)
	52	[11136]	SELF     	R14 R14 K28 ; R15 := R14; R14 := R14[0xf2deaf69]
	53	[11136]	GETTABLE 	R16 R8 K17 ; R16 := R8["BaseType"]
	54	[11136]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	55	[11136]	TEST     	R14 0 ; if not R14 then PC := 109
	56	[11136]	JMP      	109 ; PC := 109
	57	[11137]	GETUPVAL 	R14 U2 ; R14 := U2
	58	[11137]	GETTABLE 	R14 R14 K29 ; R14 := R14[0x08681f50]
	59	[11137]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	60	[11137]	MOVE     	R16 R13 ; R16 := R13
	61	[11137]	NEWTABLE 	R17 0 1 ; R17 := {}
	62	[11137]	GETGLOBAL	R18 K31 ; R18 := 0x25d99d89
	63	[11137]	SETTABLE 	R17 K30 R18 ; R17["GameData"] := R18
	64	[11137]	LOADNIL  	R18 R19 ; R18 := R19 := nil
	65	[11137]	OP_LOADBOOL	R20 1 0 ; R20 := true
	66	[11137]	CALL     	R14 7 2 ; R14 := R14(R15,R16,R17,R18,R19,R20)
	67	[11139]	GETGLOBAL	R15 K32 ; R15 := 0x7b998233
	68	[11139]	GETTABLE 	R16 R14 K33 ; R16 := R14["LocalizedDesc"]
	69	[11139]	CALL     	R15 2 2 ; R15 := R15(R16)
	70	[11139]	TEST     	R15 0 ; if not R15 then PC := 73
	71	[11139]	JMP      	73 ; PC := 73
	72	[11140]	SETTABLE 	R14 K33 K11 ; R14["LocalizedDesc"] := ""
	73	[11143]	SETTABLE 	R14 K34 R13 ; R14["mStoreItem"] := R13
	74	[11144]	SETTABLE 	R14 K8 K35 ; R14["mPurchased"] := false
	75	[11145]	NEWTABLE 	R15 0 1 ; R15 := {}
	76	[11145]	GETTABLE 	R16 R14 K34 ; R16 := R14["mStoreItem"]
	77	[11145]	SELF     	R16 R16 K27 ; R17 := R16; R16 := R16[0xf278f8a1]
	78	[11145]	CALL     	R16 2 2 ; R16 := R16(R17)
	79	[11145]	SELF     	R16 R16 K36 ; R17 := R16; R16 := R16[0xed4e0128]
	80	[11145]	CALL     	R16 2 2 ; R16 := R16(R17)
	81	[11145]	SETTABLE 	R15 K10 R16 ; R15["UID"] := R16
	82	[11145]	SETTABLE 	R14 K9 R15 ; R14["mPurchasedInfo"] := R15
	83	[11147]	GETGLOBAL	R15 K26 ; R15 := 0xc8802016
	84	[11147]	MOVE     	R16 R3 ; R16 := R3
	85	[11147]	CALL     	R15 2 4 ; R15,R16,R17 := R15(R16)
	86	[11147]	JMP      	99 ; PC := 99
	87	[11148]	GETTABLE 	R20 R19 K37 ; R20 := R19["mItemType"]
	88	[11149]	GETGLOBAL	R21 K32 ; R21 := 0x7b998233
	89	[11149]	MOVE     	R22 R20 ; R22 := R20
	90	[11149]	CALL     	R21 2 2 ; R21 := R21(R22)
	91	[11149]	TEST     	R21 1 ; if R21 then PC := 99
	92	[11149]	JMP      	99 ; PC := 99
	93	[11149]	SELF     	R21 R13 K27 ; R22 := R13; R21 := R13[0xf278f8a1]
	94	[11149]	CALL     	R21 2 2 ; R21 := R21(R22)
	95	[11149]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 99
	96	[11149]	JMP      	99 ; PC := 99
	97	[11150]	SETTABLE 	R14 K8 K7 ; R14["mPurchased"] := true
	98	[11151]	JMP      	101 ; PC := 101
	99	[11147]	TFORLOOP 	R15 2 ; R18,R19 := R15(R16,R17); if R18 ~= nil then begin PC = 87; R17 := R18 end
	100	[11152]	JMP      	87 ; PC := 87
	101	[11155]	GETTABLE 	R21 R8 K20 ; R21 := R8["Items"]
	102	[11155]	LEN      	R21 R21 ; R21 := # R21
	103	[11155]	SETTABLE 	R14 K12 R21 ; R14["mSortId"] := R21
	104	[11156]	GETGLOBAL	R21 K38 ; R21 := 0x33bdd652
	105	[11156]	GETTABLE 	R21 R21 K39 ; R21 := R21[0x23d5322f]
	106	[11156]	GETTABLE 	R22 R8 K20 ; R22 := R8["Items"]
	107	[11156]	MOVE     	R23 R14 ; R23 := R14
	108	[11156]	CALL     	R21 3 1 ; R21(R22,R23)
	109	[11135]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 50; R11 := R12 end
	110	[11157]	JMP      	50 ; PC := 50
	111	[11159]	GETGLOBAL	R21 K40 ; R21 := mLists
	112	[11159]	GETTABLE 	R21 R21 K41 ; R21 := R21["mCosmeticsList"]
	113	[11159]	SELF     	R21 R21 K42 ; R22 := R21; R21 := R21[0xbad4316f]
	114	[11159]	MOVE     	R23 R8 ; R23 := R8
	115	[11159]	OP_LOADBOOL	R24 1 0 ; R24 := true
	116	[11159]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	117	[11133]	FORLOOP  	R4 45 ; R4 += R6; if R4 <= R5 then begin PC := 45; R7 := R4 end
	118	[11162]	GETGLOBAL	R21 K40 ; R21 := mLists
	119	[11162]	GETTABLE 	R21 R21 K41 ; R21 := R21["mCosmeticsList"]
	120	[11162]	SELF     	R21 R21 K43 ; R22 := R21; R21 := R21[0x71e9ac81]
	121	[11165]	CLOSURE  	R23 0 ; R23 := closure(Function #1)
	122	[11162]	CALL     	R21 3 1 ; R21(R22,R23)
	123	[11166]	RETURN   	R0 1 ; return 

function #170 <?:11168,11919> (2663 instructions, 10652 bytes at 00000211359FC6B0)
1 param, 184 slots, 19 upvalues, 0 locals, 271 constants, 7 functions
	1	[11169]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[11169]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	3	[11169]	LOADK    	R3 K2 ; R3 := "CosmeticsMenu"
	4	[11169]	LOADK    	R4 := 11.000000
	5	[11169]	OP_LOADBOOL	R5 1 0 ; R5 := true
	6	[11169]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[11170]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[11170]	CALL     	R1 1 2 ; R1 := R1()
	9	[11171]	NEWTABLE 	R2 0 0 ; R2 := {}
	10	[11172]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	11	[11172]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x5f56eeab]
	12	[11172]	LOADK    	R5 K4 ; R5 := "CosmeticDesc"
	13	[11172]	LOADK    	R6 := 29.000000
	14	[11172]	LOADK    	R7 K5 ; R7 := ""
	15	[11172]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	16	[11174]	GETGLOBAL	R3 K6 ; R3 := 0x7b998233
	17	[11174]	GETGLOBAL	R4 K7 ; R4 := mSelected
	18	[11174]	GETTABLE 	R4 R4 K8 ; R4 := R4["Element"]
	19	[11174]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[11174]	TEST     	R3 0 ; if not R3 then PC := 23
	21	[11174]	JMP      	23 ; PC := 23
	22	[11175]	RETURN   	R0 1 ; return 
	23	[11177]	GETGLOBAL	R3 K7 ; R3 := mSelected
	24	[11177]	GETTABLE 	R3 R3 K8 ; R3 := R3["Element"]
	25	[11177]	GETTABLE 	R3 R3 K9 ; R3 := R3["LoadOutType"]
	26	[11178]	GETGLOBAL	R4 K7 ; R4 := mSelected
	27	[11178]	GETTABLE 	R4 R4 K8 ; R4 := R4["Element"]
	28	[11178]	GETTABLE 	R4 R4 K10 ; R4 := R4["LoadOutId"]
	29	[11179]	EQ       	0 R4 K12 ; if R4 ~= 5.000000 then PC := 43
	30	[11179]	JMP      	43 ; PC := 43
	31	[11179]	GETGLOBAL	R5 K13 ; R5 := _T
	32	[11179]	GETTABLE 	R5 R5 K14 ; R5 := R5["mSpecialSuitMode"]
	33	[11179]	TEST     	R5 0 ; if not R5 then PC := 45
	34	[11179]	JMP      	45 ; PC := 45
	35	[11179]	GETGLOBAL	R5 K7 ; R5 := mSelected
	36	[11179]	GETTABLE 	R5 R5 K8 ; R5 := R5["Element"]
	37	[11179]	GETTABLE 	R5 R5 K15 ; R5 := R5["EquippedItem"]
	38	[11179]	GETTABLE 	R5 R5 K16 ; R5 := R5["mItemType"]
	39	[11179]	SELF     	R5 R5 K17 ; R6 := R5; R5 := R5[0xf2deaf69]
	40	[11179]	GETGLOBAL	R7 K18 ; R7 := gPetPowerSuitType
	41	[11179]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	42	[11179]	JMP      	45 ; PC := 45
	43	[11179]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 44
	44	[11179]	OP_LOADBOOL	R5 1 0 ; R5 := true
	45	[11182]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	46	[11182]	GETGLOBAL	R7 K19 ; R7 := 0x25d99d89
	47	[11182]	CALL     	R6 2 2 ; R6 := R6(R7)
	48	[11182]	TEST     	R6 1 ; if R6 then PC := 52
	49	[11182]	JMP      	52 ; PC := 52
	50	[11182]	EQ       	1 R3 K20 ; if R3 == 1.000000 then PC := 54
	51	[11182]	JMP      	54 ; PC := 54
	52	[11182]	TEST     	R5 0 ; if not R5 then PC := 452
	53	[11182]	JMP      	452 ; PC := 452
	54	[11183]	GETGLOBAL	R6 K21 ; R6 := mCosmeticsLabels
	55	[11183]	GETTABLE 	R6 R6 K22 ; R6 := R6[16.000000]
	56	[11183]	GETTABLE 	R6 R6 K23 ; R6 := R6["Overrides"]
	57	[11183]	GETTABLE 	R6 R6 K20 ; R6 := R6[1.000000]
	58	[11183]	SETTABLE 	R6 K24 K25 ; R6[0.000000] := nil
	59	[11184]	TEST     	R5 1 ; if R5 then PC := 66
	60	[11184]	JMP      	66 ; PC := 66
	61	[11184]	GETGLOBAL	R6 K19 ; R6 := 0x25d99d89
	62	[11184]	SELF     	R6 R6 K26 ; R7 := R6; R6 := R6[0x3c6b0324]
	63	[11184]	CALL     	R6 2 2 ; R6 := R6(R7)
	64	[11184]	TEST     	R6 0 ; if not R6 then PC := 292
	65	[11184]	JMP      	292 ; PC := 292
	66	[11185]	GETGLOBAL	R6 K21 ; R6 := mCosmeticsLabels
	67	[11185]	GETTABLE 	R6 R6 K27 ; R6 := R6[7.000000]
	68	[11185]	GETTABLE 	R6 R6 K23 ; R6 := R6["Overrides"]
	69	[11185]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	70	[11185]	NEWTABLE 	R7 0 4 ; R7 := {}
	71	[11185]	SETTABLE 	R7 K28 K29 ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_FurPattern"
	72	[11185]	GETGLOBAL	R8 K31 ; R8 := mLists
	73	[11185]	GETTABLE 	R8 R8 K32 ; R8 := R8["mCosmeticsList"]
	74	[11185]	GETTABLE 	R8 R8 K33 ; R8 := R8["DEFAULT"]
	75	[11185]	SETTABLE 	R7 K30 R8 ; R7["Level"] := R8
	76	[11185]	SETTABLE 	R7 K34 K35 ; R7["PetTrait"] := "mFurPattern"
	77	[11185]	SETTABLE 	R7 K36 K37 ; R7["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
	78	[11185]	SETTABLE 	R6 R4 R7 ; R6[R4] := R7
	79	[11186]	GETGLOBAL	R6 K21 ; R6 := mCosmeticsLabels
	80	[11186]	GETTABLE 	R6 R6 K20 ; R6 := R6[1.000000]
	81	[11186]	GETTABLE 	R6 R6 K23 ; R6 := R6["Overrides"]
	82	[11186]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	83	[11186]	NEWTABLE 	R7 0 4 ; R7 := {}
	84	[11186]	SETTABLE 	R7 K28 K38 ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_BaseColor"
	85	[11186]	GETGLOBAL	R8 K31 ; R8 := mLists
	86	[11186]	GETTABLE 	R8 R8 K32 ; R8 := R8["mCosmeticsList"]
	87	[11186]	GETTABLE 	R8 R8 K33 ; R8 := R8["DEFAULT"]
	88	[11186]	SETTABLE 	R7 K30 R8 ; R7["Level"] := R8
	89	[11186]	SETTABLE 	R7 K39 K24 ; R7["Attribute"] := 0.000000
	90	[11186]	SETTABLE 	R7 K34 K40 ; R7["PetTrait"] := "mBaseColor"
	91	[11186]	SETTABLE 	R6 R4 R7 ; R6[R4] := R7
	92	[11187]	GETGLOBAL	R6 K21 ; R6 := mCosmeticsLabels
	93	[11187]	GETTABLE 	R6 R6 K41 ; R6 := R6[9.000000]
	94	[11187]	GETTABLE 	R6 R6 K23 ; R6 := R6["Overrides"]
	95	[11187]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	96	[11187]	NEWTABLE 	R7 0 4 ; R7 := {}
	97	[11187]	SETTABLE 	R7 K28 K42 ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_SecondaryColor"
	98	[11187]	GETGLOBAL	R8 K31 ; R8 := mLists
	99	[11187]	GETTABLE 	R8 R8 K32 ; R8 := R8["mCosmeticsList"]
	100	[11187]	GETTABLE 	R8 R8 K33 ; R8 := R8["DEFAULT"]
	101	[11187]	SETTABLE 	R7 K30 R8 ; R7["Level"] := R8
	102	[11187]	SETTABLE 	R7 K39 K20 ; R7["Attribute"] := 1.000000
	103	[11187]	SETTABLE 	R7 K34 K43 ; R7["PetTrait"] := "mSecondaryColor"
	104	[11187]	SETTABLE 	R6 R4 R7 ; R6[R4] := R7
	105	[11188]	GETGLOBAL	R6 K21 ; R6 := mCosmeticsLabels
	106	[11188]	GETTABLE 	R6 R6 K44 ; R6 := R6[2.000000]
	107	[11188]	GETTABLE 	R6 R6 K23 ; R6 := R6["Overrides"]
	108	[11188]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	109	[11188]	NEWTABLE 	R7 0 4 ; R7 := {}
	110	[11188]	SETTABLE 	R7 K28 K45 ; R7["Title"] := "/Lotus/Language/Menu/Cosmetics_TertiaryColor"
	111	[11188]	GETGLOBAL	R8 K31 ; R8 := mLists
	112	[11188]	GETTABLE 	R8 R8 K32 ; R8 := R8["mCosmeticsList"]
	113	[11188]	GETTABLE 	R8 R8 K33 ; R8 := R8["DEFAULT"]
	114	[11188]	SETTABLE 	R7 K30 R8 ; R7["Level"] := R8
	115	[11188]	SETTABLE 	R7 K39 K44 ; R7["Attribute"] := 2.000000
	116	[11188]	SETTABLE 	R7 K34 K46 ; R7["PetTrait"] := "mTertiaryColor"
	117	[11188]	SETTABLE 	R6 R4 R7 ; R6[R4] := R7
	118	[11190]	TEST     	R5 0 ; if not R5 then PC := 127
	119	[11190]	JMP      	127 ; PC := 127
	120	[11191]	NEWTABLE 	R6 3 0 ; R6 := {}
	121	[11191]	LOADK    	R7 := 1.000000
	122	[11191]	LOADK    	R8 := 9.000000
	123	[11191]	LOADK    	R9 := 2.000000
	124	[11191]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	125	[11191]	MOVE     	R2 R6 ; R2 := R6
	126	[11191]	JMP      	134 ; PC := 134
	127	[11193]	NEWTABLE 	R6 4 0 ; R6 := {}
	128	[11193]	LOADK    	R7 := 7.000000
	129	[11193]	LOADK    	R8 := 1.000000
	130	[11193]	LOADK    	R9 := 9.000000
	131	[11193]	LOADK    	R10 := 2.000000
	132	[11193]	SETLIST  	R6 4 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 4
	133	[11193]	MOVE     	R2 R6 ; R2 := R6
	134	[11197]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	135	[11197]	GETGLOBAL	R7 K7 ; R7 := mSelected
	136	[11197]	GETTABLE 	R7 R7 K8 ; R7 := R7["Element"]
	137	[11197]	GETTABLE 	R7 R7 K47 ; R7 := R7["Type"]
	138	[11197]	CALL     	R6 2 2 ; R6 := R6(R7)
	139	[11197]	TEST     	R6 1 ; if R6 then PC := 148
	140	[11197]	JMP      	148 ; PC := 148
	141	[11197]	GETGLOBAL	R6 K7 ; R6 := mSelected
	142	[11197]	GETTABLE 	R6 R6 K8 ; R6 := R6["Element"]
	143	[11197]	GETTABLE 	R6 R6 K47 ; R6 := R6["Type"]
	144	[11197]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0xf2deaf69]
	145	[11197]	GETGLOBAL	R8 K48 ; R8 := 0x01302fb0
	146	[11197]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	147	[11197]	JMP      	150 ; PC := 150
	148	[11197]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 149
	149	[11197]	OP_LOADBOOL	R6 1 0 ; R6 := true
	150	[11198]	GETGLOBAL	R7 K21 ; R7 := mCosmeticsLabels
	151	[11198]	GETTABLE 	R7 R7 K49 ; R7 := R7[8.000000]
	152	[11198]	GETTABLE 	R7 R7 K23 ; R7 := R7["Overrides"]
	153	[11198]	GETTABLE 	R7 R7 R3 ; R7 := R7[R3]
	154	[11198]	NEWTABLE 	R8 0 2 ; R8 := {}
	155	[11198]	SETTABLE 	R8 K28 K50 ; R8["Title"] := "/Lotus/Language/Menu/Cosmetics_KubrowArmor"
	156	[11198]	GETUPVAL 	R9 U1 ; R9 := U1
	157	[11198]	GETTABLE 	R9 R9 K51 ; R9 := R9[0x06d055f9]
	158	[11198]	NOT      	R10 R6 ; R10 := not R6
	159	[11198]	LOADK    	R11 K5 ; R11 := ""
	160	[11198]	LOADNIL  	R12 R12 ; R12 := nil
	161	[11198]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	162	[11198]	SETTABLE 	R8 K36 R9 ; R8["TopTitle"] := R9
	163	[11198]	SETTABLE 	R7 R4 R8 ; R7[R4] := R8
	164	[11200]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	165	[11200]	GETGLOBAL	R8 K7 ; R8 := mSelected
	166	[11200]	GETTABLE 	R8 R8 K8 ; R8 := R8["Element"]
	167	[11200]	GETTABLE 	R8 R8 K47 ; R8 := R8["Type"]
	168	[11200]	CALL     	R7 2 2 ; R7 := R7(R8)
	169	[11200]	TEST     	R7 1 ; if R7 then PC := 491
	170	[11200]	JMP      	491 ; PC := 491
	171	[11201]	GETUPVAL 	R7 U2 ; R7 := U2
	172	[11201]	GETTABLE 	R7 R7 K52 ; R7 := R7[0xb68bba03]
	173	[11201]	GETGLOBAL	R8 K7 ; R8 := mSelected
	174	[11201]	GETTABLE 	R8 R8 K8 ; R8 := R8["Element"]
	175	[11201]	GETTABLE 	R8 R8 K53 ; R8 := R8["Customization"]
	176	[11201]	CALL     	R7 2 2 ; R7 := R7(R8)
	177	[11202]	TEST     	R7 0 ; if not R7 then PC := 192
	178	[11202]	JMP      	192 ; PC := 192
	179	[11203]	GETGLOBAL	R8 K21 ; R8 := mCosmeticsLabels
	180	[11203]	GETTABLE 	R8 R8 K54 ; R8 := R8[10.000000]
	181	[11203]	GETTABLE 	R8 R8 K23 ; R8 := R8["Overrides"]
	182	[11203]	GETTABLE 	R8 R8 R3 ; R8 := R8[R3]
	183	[11203]	NEWTABLE 	R9 0 4 ; R9 := {}
	184	[11203]	SETTABLE 	R9 K28 K55 ; R9["Title"] := "/Lotus/Language/Menu/Cosmetics_TertiaryColor2"
	185	[11203]	GETGLOBAL	R10 K31 ; R10 := mLists
	186	[11203]	GETTABLE 	R10 R10 K32 ; R10 := R10["mCosmeticsList"]
	187	[11203]	GETTABLE 	R10 R10 K33 ; R10 := R10["DEFAULT"]
	188	[11203]	SETTABLE 	R9 K30 R10 ; R9["Level"] := R10
	189	[11203]	SETTABLE 	R9 K39 K56 ; R9["Attribute"] := 3.000000
	190	[11203]	SETTABLE 	R9 K34 K57 ; R9["PetTrait"] := "mEyeColor"
	191	[11203]	SETTABLE 	R8 R4 R9 ; R8[R4] := R9
	192	[11207]	TEST     	R6 1 ; if R6 then PC := 210
	193	[11207]	JMP      	210 ; PC := 210
	194	[11207]	GETGLOBAL	R8 K7 ; R8 := mSelected
	195	[11207]	GETTABLE 	R8 R8 K8 ; R8 := R8["Element"]
	196	[11207]	GETTABLE 	R8 R8 K47 ; R8 := R8["Type"]
	197	[11207]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0xf2deaf69]
	198	[11207]	GETGLOBAL	R10 K58 ; R10 := 0xf541be71
	199	[11207]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	200	[11207]	TEST     	R8 1 ; if R8 then PC := 210
	201	[11207]	JMP      	210 ; PC := 210
	202	[11207]	GETGLOBAL	R8 K7 ; R8 := mSelected
	203	[11207]	GETTABLE 	R8 R8 K8 ; R8 := R8["Element"]
	204	[11207]	GETTABLE 	R8 R8 K47 ; R8 := R8["Type"]
	205	[11207]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0xf2deaf69]
	206	[11207]	GETGLOBAL	R10 K59 ; R10 := 0x5bc0a754
	207	[11207]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	208	[11207]	TEST     	R8 0 ; if not R8 then PC := 246
	209	[11207]	JMP      	246 ; PC := 246
	210	[11208]	GETGLOBAL	R8 K21 ; R8 := mCosmeticsLabels
	211	[11208]	GETTABLE 	R8 R8 K54 ; R8 := R8[10.000000]
	212	[11208]	GETTABLE 	R8 R8 K23 ; R8 := R8["Overrides"]
	213	[11208]	GETTABLE 	R8 R8 R3 ; R8 := R8[R3]
	214	[11208]	NEWTABLE 	R9 0 4 ; R9 := {}
	215	[11208]	SETTABLE 	R9 K28 K55 ; R9["Title"] := "/Lotus/Language/Menu/Cosmetics_TertiaryColor2"
	216	[11208]	GETGLOBAL	R10 K31 ; R10 := mLists
	217	[11208]	GETTABLE 	R10 R10 K32 ; R10 := R10["mCosmeticsList"]
	218	[11208]	GETTABLE 	R10 R10 K33 ; R10 := R10["DEFAULT"]
	219	[11208]	SETTABLE 	R9 K30 R10 ; R9["Level"] := R10
	220	[11208]	SETTABLE 	R9 K39 K56 ; R9["Attribute"] := 3.000000
	221	[11208]	SETTABLE 	R9 K34 K60 ; R9["PetTrait"] := "mAccentColor"
	222	[11208]	SETTABLE 	R8 R4 R9 ; R8[R4] := R9
	223	[11209]	GETGLOBAL	R8 K61 ; R8 := 0x33bdd652
	224	[11209]	GETTABLE 	R8 R8 K62 ; R8 := R8[0x23d5322f]
	225	[11209]	MOVE     	R9 R2 ; R9 := R2
	226	[11209]	LOADK    	R10 := 10.000000
	227	[11209]	CALL     	R8 3 1 ; R8(R9,R10)
	228	[11211]	GETGLOBAL	R8 K21 ; R8 := mCosmeticsLabels
	229	[11211]	GETTABLE 	R8 R8 K63 ; R8 := R8[11.000000]
	230	[11211]	GETTABLE 	R8 R8 K23 ; R8 := R8["Overrides"]
	231	[11211]	GETTABLE 	R8 R8 R3 ; R8 := R8[R3]
	232	[11211]	NEWTABLE 	R9 0 4 ; R9 := {}
	233	[11211]	SETTABLE 	R9 K28 K64 ; R9["Title"] := "/Lotus/Language/Menu/Arsenal_Emissive"
	234	[11211]	GETGLOBAL	R10 K31 ; R10 := mLists
	235	[11211]	GETTABLE 	R10 R10 K32 ; R10 := R10["mCosmeticsList"]
	236	[11211]	GETTABLE 	R10 R10 K33 ; R10 := R10["DEFAULT"]
	237	[11211]	SETTABLE 	R9 K30 R10 ; R9["Level"] := R10
	238	[11211]	SETTABLE 	R9 K39 K65 ; R9["Attribute"] := 4.000000
	239	[11211]	SETTABLE 	R9 K34 K57 ; R9["PetTrait"] := "mEyeColor"
	240	[11211]	SETTABLE 	R8 R4 R9 ; R8[R4] := R9
	241	[11212]	GETGLOBAL	R8 K61 ; R8 := 0x33bdd652
	242	[11212]	GETTABLE 	R8 R8 K62 ; R8 := R8[0x23d5322f]
	243	[11212]	MOVE     	R9 R2 ; R9 := R2
	244	[11212]	LOADK    	R10 := 11.000000
	245	[11212]	CALL     	R8 3 1 ; R8(R9,R10)
	246	[11216]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	247	[11216]	GETGLOBAL	R9 K7 ; R9 := mSelected
	248	[11216]	GETTABLE 	R9 R9 K8 ; R9 := R9["Element"]
	249	[11216]	GETTABLE 	R9 R9 K53 ; R9 := R9["Customization"]
	250	[11216]	CALL     	R8 2 2 ; R8 := R8(R9)
	251	[11216]	TEST     	R8 1 ; if R8 then PC := 491
	252	[11216]	JMP      	491 ; PC := 491
	253	[11217]	GETGLOBAL	R8 K7 ; R8 := mSelected
	254	[11217]	GETTABLE 	R8 R8 K8 ; R8 := R8["Element"]
	255	[11217]	GETTABLE 	R8 R8 K53 ; R8 := R8["Customization"]
	256	[11217]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0x2540510f]
	257	[11217]	LOADK    	R10 := 7.000000
	258	[11217]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	259	[11218]	GETGLOBAL	R9 K6 ; R9 := 0x7b998233
	260	[11218]	MOVE     	R10 R8 ; R10 := R8
	261	[11218]	CALL     	R9 2 2 ; R9 := R9(R10)
	262	[11218]	TEST     	R9 1 ; if R9 then PC := 491
	263	[11218]	JMP      	491 ; PC := 491
	264	[11218]	SELF     	R9 R8 K17 ; R10 := R8; R9 := R8[0xf2deaf69]
	265	[11218]	GETGLOBAL	R11 K67 ; R11 := 0x0a914a18
	266	[11218]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	267	[11218]	TEST     	R9 0 ; if not R9 then PC := 491
	268	[11218]	JMP      	491 ; PC := 491
	269	[11219]	GETGLOBAL	R9 K68 ; R9 := 0xb009bbc6
	270	[11219]	MOVE     	R10 R8 ; R10 := R8
	271	[11219]	CALL     	R9 2 2 ; R9 := R9(R10)
	272	[11219]	MOVE     	R8 R9 ; R8 := R9
	273	[11220]	SELF     	R9 R8 K69 ; R10 := R8; R9 := R8[0xb8ef5b34]
	274	[11220]	LOADK    	R11 := 8.000000
	275	[11220]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	276	[11221]	GETGLOBAL	R10 K6 ; R10 := 0x7b998233
	277	[11221]	MOVE     	R11 R9 ; R11 := R9
	278	[11221]	CALL     	R10 2 2 ; R10 := R10(R11)
	279	[11221]	TEST     	R10 1 ; if R10 then PC := 491
	280	[11221]	JMP      	491 ; PC := 491
	281	[11222]	GETGLOBAL	R10 K21 ; R10 := mCosmeticsLabels
	282	[11222]	GETTABLE 	R10 R10 K49 ; R10 := R10[8.000000]
	283	[11222]	GETTABLE 	R10 R10 K23 ; R10 := R10["Overrides"]
	284	[11222]	GETTABLE 	R10 R10 R3 ; R10 := R10[R3]
	285	[11222]	NEWTABLE 	R11 0 1 ; R11 := {}
	286	[11222]	GETGLOBAL	R12 K31 ; R12 := mLists
	287	[11222]	GETTABLE 	R12 R12 K32 ; R12 := R12["mCosmeticsList"]
	288	[11222]	GETTABLE 	R12 R12 K70 ; R12 := R12["NONE"]
	289	[11222]	SETTABLE 	R11 K30 R12 ; R11["Level"] := R12
	290	[11222]	SETTABLE 	R10 R4 R11 ; R10[R4] := R11
	291	[11226]	JMP      	491 ; PC := 491
	292	[11227]	GETGLOBAL	R10 K19 ; R10 := 0x25d99d89
	293	[11227]	SELF     	R10 R10 K71 ; R11 := R10; R10 := R10[0x9f91f49d]
	294	[11227]	CALL     	R10 2 2 ; R10 := R10(R11)
	295	[11227]	TEST     	R10 0 ; if not R10 then PC := 406
	296	[11227]	JMP      	406 ; PC := 406
	297	[11227]	EQ       	0 R3 K20 ; if R3 ~= 1.000000 then PC := 406
	298	[11227]	JMP      	406 ; PC := 406
	299	[11228]	GETGLOBAL	R10 K21 ; R10 := mCosmeticsLabels
	300	[11228]	GETTABLE 	R10 R10 K49 ; R10 := R10[8.000000]
	301	[11228]	GETTABLE 	R10 R10 K23 ; R10 := R10["Overrides"]
	302	[11228]	GETTABLE 	R10 R10 K20 ; R10 := R10[1.000000]
	303	[11228]	NEWTABLE 	R11 0 1 ; R11 := {}
	304	[11228]	GETGLOBAL	R12 K31 ; R12 := mLists
	305	[11228]	GETTABLE 	R12 R12 K32 ; R12 := R12["mCosmeticsList"]
	306	[11228]	GETTABLE 	R12 R12 K70 ; R12 := R12["NONE"]
	307	[11228]	SETTABLE 	R11 K30 R12 ; R11["Level"] := R12
	308	[11228]	SETTABLE 	R10 K24 R11 ; R10[0.000000] := R11
	309	[11230]	GETGLOBAL	R10 K6 ; R10 := 0x7b998233
	310	[11230]	GETGLOBAL	R11 K7 ; R11 := mSelected
	311	[11230]	GETTABLE 	R11 R11 K8 ; R11 := R11["Element"]
	312	[11230]	CALL     	R10 2 2 ; R10 := R10(R11)
	313	[11230]	TEST     	R10 1 ; if R10 then PC := 336
	314	[11230]	JMP      	336 ; PC := 336
	315	[11230]	GETGLOBAL	R10 K6 ; R10 := 0x7b998233
	316	[11230]	GETGLOBAL	R11 K7 ; R11 := mSelected
	317	[11230]	GETTABLE 	R11 R11 K8 ; R11 := R11["Element"]
	318	[11230]	GETTABLE 	R11 R11 K15 ; R11 := R11["EquippedItem"]
	319	[11230]	CALL     	R10 2 2 ; R10 := R10(R11)
	320	[11230]	TEST     	R10 1 ; if R10 then PC := 336
	321	[11230]	JMP      	336 ; PC := 336
	322	[11230]	GETGLOBAL	R10 K7 ; R10 := mSelected
	323	[11230]	GETTABLE 	R10 R10 K8 ; R10 := R10["Element"]
	324	[11230]	GETTABLE 	R10 R10 K15 ; R10 := R10["EquippedItem"]
	325	[11230]	GETTABLE 	R10 R10 K72 ; R10 := R10["mModularParts"]
	326	[11230]	LEN      	R10 R10 ; R10 := # R10
	327	[11230]	LT       	0 K24 R10 ; if 0.000000 >= R10 then PC := 336
	328	[11230]	JMP      	336 ; PC := 336
	329	[11230]	GETGLOBAL	R10 K7 ; R10 := mSelected
	330	[11230]	GETTABLE 	R10 R10 K8 ; R10 := R10["Element"]
	331	[11230]	GETTABLE 	R10 R10 K15 ; R10 := R10["EquippedItem"]
	332	[11230]	SELF     	R10 R10 K73 ; R11 := R10; R10 := R10[0xdbfbf6c0]
	333	[11230]	LOADK    	R12 := 3.000000
	334	[11230]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	335	[11230]	JMP      	338 ; PC := 338
	336	[11230]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 337
	337	[11230]	OP_LOADBOOL	R10 1 0 ; R10 := true
	338	[11231]	TEST     	R10 0 ; if not R10 then PC := 348
	339	[11231]	JMP      	348 ; PC := 348
	340	[11232]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	341	[11232]	GETTABLE 	R11 R11 K27 ; R11 := R11[7.000000]
	342	[11232]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	343	[11232]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	344	[11232]	NEWTABLE 	R12 0 1 ; R12 := {}
	345	[11232]	SETTABLE 	R12 K36 K37 ; R12["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
	346	[11232]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	347	[11232]	JMP      	358 ; PC := 358
	348	[11234]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	349	[11234]	GETTABLE 	R11 R11 K27 ; R11 := R11[7.000000]
	350	[11234]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	351	[11234]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	352	[11234]	NEWTABLE 	R12 0 1 ; R12 := {}
	353	[11234]	GETGLOBAL	R13 K31 ; R13 := mLists
	354	[11234]	GETTABLE 	R13 R13 K32 ; R13 := R13["mCosmeticsList"]
	355	[11234]	GETTABLE 	R13 R13 K70 ; R13 := R13["NONE"]
	356	[11234]	SETTABLE 	R12 K30 R13 ; R12["Level"] := R13
	357	[11234]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	358	[11236]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	359	[11236]	GETTABLE 	R11 R11 K24 ; R11 := R11[0.000000]
	360	[11236]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	361	[11236]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	362	[11236]	NEWTABLE 	R12 0 1 ; R12 := {}
	363	[11236]	GETGLOBAL	R13 K31 ; R13 := mLists
	364	[11236]	GETTABLE 	R13 R13 K32 ; R13 := R13["mCosmeticsList"]
	365	[11236]	GETTABLE 	R13 R13 K70 ; R13 := R13["NONE"]
	366	[11236]	SETTABLE 	R12 K30 R13 ; R12["Level"] := R13
	367	[11236]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	368	[11237]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	369	[11237]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	370	[11237]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	371	[11237]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	372	[11237]	NEWTABLE 	R12 0 1 ; R12 := {}
	373	[11237]	GETGLOBAL	R13 K31 ; R13 := mLists
	374	[11237]	GETTABLE 	R13 R13 K32 ; R13 := R13["mCosmeticsList"]
	375	[11237]	GETTABLE 	R13 R13 K70 ; R13 := R13["NONE"]
	376	[11237]	SETTABLE 	R12 K30 R13 ; R12["Level"] := R13
	377	[11237]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	378	[11238]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	379	[11238]	GETTABLE 	R11 R11 K41 ; R11 := R11[9.000000]
	380	[11238]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	381	[11238]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	382	[11238]	NEWTABLE 	R12 0 1 ; R12 := {}
	383	[11238]	GETGLOBAL	R13 K31 ; R13 := mLists
	384	[11238]	GETTABLE 	R13 R13 K32 ; R13 := R13["mCosmeticsList"]
	385	[11238]	GETTABLE 	R13 R13 K70 ; R13 := R13["NONE"]
	386	[11238]	SETTABLE 	R12 K30 R13 ; R12["Level"] := R13
	387	[11238]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	388	[11239]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	389	[11239]	GETTABLE 	R11 R11 K44 ; R11 := R11[2.000000]
	390	[11239]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	391	[11239]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	392	[11239]	NEWTABLE 	R12 0 1 ; R12 := {}
	393	[11239]	GETGLOBAL	R13 K31 ; R13 := mLists
	394	[11239]	GETTABLE 	R13 R13 K32 ; R13 := R13["mCosmeticsList"]
	395	[11239]	GETTABLE 	R13 R13 K70 ; R13 := R13["NONE"]
	396	[11239]	SETTABLE 	R12 K30 R13 ; R12["Level"] := R13
	397	[11239]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	398	[11240]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	399	[11240]	GETTABLE 	R11 R11 K22 ; R11 := R11[16.000000]
	400	[11240]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	401	[11240]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	402	[11240]	NEWTABLE 	R12 0 1 ; R12 := {}
	403	[11240]	SETTABLE 	R12 K36 K74 ; R12["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
	404	[11240]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	405	[11240]	JMP      	491 ; PC := 491
	406	[11242]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	407	[11242]	GETTABLE 	R11 R11 K27 ; R11 := R11[7.000000]
	408	[11242]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	409	[11242]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	410	[11242]	NEWTABLE 	R12 0 1 ; R12 := {}
	411	[11242]	SETTABLE 	R12 K36 K37 ; R12["TopTitle"] := "/Lotus/Language/Menu/Loadout_PhysicalTitle"
	412	[11242]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	413	[11243]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	414	[11243]	GETTABLE 	R11 R11 K24 ; R11 := R11[0.000000]
	415	[11243]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	416	[11243]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	417	[11243]	NEWTABLE 	R12 0 2 ; R12 := {}
	418	[11243]	SETTABLE 	R12 K28 K75 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Mask"
	419	[11243]	GETGLOBAL	R13 K31 ; R13 := mLists
	420	[11243]	GETTABLE 	R13 R13 K32 ; R13 := R13["mCosmeticsList"]
	421	[11243]	GETTABLE 	R13 R13 K76 ; R13 := R13["ATTACHMENTS"]
	422	[11243]	SETTABLE 	R12 K30 R13 ; R12["Level"] := R13
	423	[11243]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	424	[11244]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	425	[11244]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	426	[11244]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	427	[11244]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	428	[11244]	NEWTABLE 	R12 0 1 ; R12 := {}
	429	[11244]	SETTABLE 	R12 K28 K77 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Wings"
	430	[11244]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	431	[11245]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	432	[11245]	GETTABLE 	R11 R11 K41 ; R11 := R11[9.000000]
	433	[11245]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	434	[11245]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	435	[11245]	NEWTABLE 	R12 0 1 ; R12 := {}
	436	[11245]	SETTABLE 	R12 K28 K78 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_WingsRight"
	437	[11245]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	438	[11246]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	439	[11246]	GETTABLE 	R11 R11 K44 ; R11 := R11[2.000000]
	440	[11246]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	441	[11246]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	442	[11246]	NEWTABLE 	R12 0 1 ; R12 := {}
	443	[11246]	SETTABLE 	R12 K28 K79 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Tail"
	444	[11246]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	445	[11247]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	446	[11247]	GETTABLE 	R11 R11 K65 ; R11 := R11[4.000000]
	447	[11247]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	448	[11247]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	449	[11247]	NEWTABLE 	R12 0 0 ; R12 := {}
	450	[11247]	SETTABLE 	R11 K24 R12 ; R11[0.000000] := R12
	451	[11248]	JMP      	491 ; PC := 491
	452	[11251]	GETGLOBAL	R11 K7 ; R11 := mSelected
	453	[11251]	GETTABLE 	R11 R11 K8 ; R11 := R11["Element"]
	454	[11251]	GETTABLE 	R11 R11 K47 ; R11 := R11["Type"]
	455	[11251]	SELF     	R11 R11 K17 ; R12 := R11; R11 := R11[0xf2deaf69]
	456	[11251]	GETGLOBAL	R13 K80 ; R13 := 0x56fafcd2
	457	[11251]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	458	[11251]	TEST     	R11 0 ; if not R11 then PC := 477
	459	[11251]	JMP      	477 ; PC := 477
	460	[11252]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	461	[11252]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	462	[11252]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	463	[11252]	GETTABLE 	R11 R11 K24 ; R11 := R11[0.000000]
	464	[11252]	NEWTABLE 	R12 0 2 ; R12 := {}
	465	[11252]	SETTABLE 	R12 K28 K81 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_ArrowSkin"
	466	[11252]	SETTABLE 	R12 K36 K74 ; R12["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
	467	[11252]	SETTABLE 	R11 K44 R12 ; R11[2.000000] := R12
	468	[11253]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	469	[11253]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	470	[11253]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	471	[11253]	GETTABLE 	R11 R11 K56 ; R11 := R11[3.000000]
	472	[11253]	NEWTABLE 	R12 0 2 ; R12 := {}
	473	[11253]	SETTABLE 	R12 K28 K81 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_ArrowSkin"
	474	[11253]	SETTABLE 	R12 K36 K74 ; R12["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Attachments"
	475	[11253]	SETTABLE 	R11 K44 R12 ; R11[2.000000] := R12
	476	[11253]	JMP      	491 ; PC := 491
	477	[11255]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	478	[11255]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	479	[11255]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	480	[11255]	GETTABLE 	R11 R11 K24 ; R11 := R11[0.000000]
	481	[11255]	NEWTABLE 	R12 0 1 ; R12 := {}
	482	[11255]	SETTABLE 	R12 K28 K82 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
	483	[11255]	SETTABLE 	R11 K44 R12 ; R11[2.000000] := R12
	484	[11256]	GETGLOBAL	R11 K21 ; R11 := mCosmeticsLabels
	485	[11256]	GETTABLE 	R11 R11 K20 ; R11 := R11[1.000000]
	486	[11256]	GETTABLE 	R11 R11 K23 ; R11 := R11["Overrides"]
	487	[11256]	GETTABLE 	R11 R11 K56 ; R11 := R11[3.000000]
	488	[11256]	NEWTABLE 	R12 0 1 ; R12 := {}
	489	[11256]	SETTABLE 	R12 K28 K82 ; R12["Title"] := "/Lotus/Language/Menu/Cosmetics_Skin"
	490	[11256]	SETTABLE 	R11 K44 R12 ; R11[2.000000] := R12
	491	[11261]	LOADNIL  	R11 R11 ; R11 := nil
	492	[11262]	GETGLOBAL	R12 K7 ; R12 := mSelected
	493	[11262]	GETTABLE 	R12 R12 K8 ; R12 := R12["Element"]
	494	[11262]	EQ       	1 R12 K25 ; if R12 == nil then PC := 499
	495	[11262]	JMP      	499 ; PC := 499
	496	[11263]	GETGLOBAL	R12 K7 ; R12 := mSelected
	497	[11263]	GETTABLE 	R12 R12 K8 ; R12 := R12["Element"]
	498	[11263]	GETTABLE 	R11 R12 K53 ; R11 := R12["Customization"]
	499	[11266]	NEWTABLE 	R12 0 0 ; R12 := {}
	500	[11294]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	501	[11294]	MOVE     	R0 R3 ; R0 := R3
	502	[11294]	MOVE     	R0 R4 ; R0 := R4
	503	[11294]	MOVE     	R0 R12 ; R0 := R12
	504	[11296]	GETGLOBAL	R14 K83 ; R14 := 0xc8802016
	505	[11296]	MOVE     	R15 R2 ; R15 := R2
	506	[11296]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	507	[11296]	JMP      	514 ; PC := 514
	508	[11297]	GETTABLE 	R19 R12 R18 ; R19 := R12[R18]
	509	[11297]	EQ       	0 R19 K25 ; if R19 ~= nil then PC := 514
	510	[11297]	JMP      	514 ; PC := 514
	511	[11298]	MOVE     	R19 R13 ; R19 := R13
	512	[11298]	MOVE     	R20 R18 ; R20 := R18
	513	[11298]	CALL     	R19 2 1 ; R19(R20)
	514	[11296]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 508; R16 := R17 end
	515	[11299]	JMP      	508 ; PC := 508
	516	[11303]	NEWTABLE 	R19 1 0 ; R19 := {}
	517	[11303]	LOADK    	R20 := 0.000000
	518	[11303]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	519	[11304]	GETGLOBAL	R20 K6 ; R20 := 0x7b998233
	520	[11304]	GETGLOBAL	R21 K7 ; R21 := mSelected
	521	[11304]	GETTABLE 	R21 R21 K8 ; R21 := R21["Element"]
	522	[11304]	GETTABLE 	R21 R21 K15 ; R21 := R21["EquippedItem"]
	523	[11304]	CALL     	R20 2 2 ; R20 := R20(R21)
	524	[11304]	TEST     	R20 1 ; if R20 then PC := 541
	525	[11304]	JMP      	541 ; PC := 541
	526	[11304]	GETGLOBAL	R20 K7 ; R20 := mSelected
	527	[11304]	GETTABLE 	R20 R20 K8 ; R20 := R20["Element"]
	528	[11304]	GETTABLE 	R20 R20 K15 ; R20 := R20["EquippedItem"]
	529	[11304]	GETTABLE 	R20 R20 K72 ; R20 := R20["mModularParts"]
	530	[11304]	LEN      	R20 R20 ; R20 := # R20
	531	[11304]	LT       	0 K24 R20 ; if 0.000000 >= R20 then PC := 541
	532	[11304]	JMP      	541 ; PC := 541
	533	[11304]	GETGLOBAL	R20 K7 ; R20 := mSelected
	534	[11304]	GETTABLE 	R20 R20 K8 ; R20 := R20["Element"]
	535	[11304]	GETTABLE 	R20 R20 K15 ; R20 := R20["EquippedItem"]
	536	[11304]	SELF     	R20 R20 K73 ; R21 := R20; R20 := R20[0xdbfbf6c0]
	537	[11304]	LOADK    	R22 := 3.000000
	538	[11304]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	539	[11304]	NOT      	R20 R20 ; R20 := not R20
	540	[11304]	JMP      	543 ; PC := 543
	541	[11304]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 542
	542	[11304]	OP_LOADBOOL	R20 1 0 ; R20 := true
	543	[11305]	TEST     	R20 0 ; if not R20 then PC := 556
	544	[11305]	JMP      	556 ; PC := 556
	545	[11305]	GETGLOBAL	R21 K7 ; R21 := mSelected
	546	[11305]	GETTABLE 	R21 R21 K8 ; R21 := R21["Element"]
	547	[11305]	GETTABLE 	R21 R21 K9 ; R21 := R21["LoadOutType"]
	548	[11305]	EQ       	1 R21 K84 ; if R21 == 6.000000 then PC := 555
	549	[11305]	JMP      	555 ; PC := 555
	550	[11305]	GETGLOBAL	R21 K7 ; R21 := mSelected
	551	[11305]	GETTABLE 	R21 R21 K8 ; R21 := R21["Element"]
	552	[11305]	GETTABLE 	R21 R21 K9 ; R21 := R21["LoadOutType"]
	553	[11305]	EQ       	0 R21 K44 ; if R21 ~= 2.000000 then PC := 556
	554	[11305]	JMP      	556 ; PC := 556
	555	[11306]	OP_LOADBOOL	R20 0 0 ; R20 := false
	556	[11308]	TEST     	R20 0 ; if not R20 then PC := 568
	557	[11308]	JMP      	568 ; PC := 568
	558	[11308]	GETGLOBAL	R21 K6 ; R21 := 0x7b998233
	559	[11308]	GETGLOBAL	R22 K7 ; R22 := mSelected
	560	[11308]	GETTABLE 	R22 R22 K8 ; R22 := R22["Element"]
	561	[11308]	CALL     	R21 2 2 ; R21 := R21(R22)
	562	[11308]	TEST     	R21 1 ; if R21 then PC := 568
	563	[11308]	JMP      	568 ; PC := 568
	564	[11309]	GETGLOBAL	R21 K7 ; R21 := mSelected
	565	[11309]	GETTABLE 	R21 R21 K8 ; R21 := R21["Element"]
	566	[11309]	SETTABLE 	R21 K85 R19 ; R21["gildRestrictedSlots"] := R19
	567	[11309]	JMP      	571 ; PC := 571
	568	[11311]	GETGLOBAL	R21 K7 ; R21 := mSelected
	569	[11311]	GETTABLE 	R21 R21 K8 ; R21 := R21["Element"]
	570	[11311]	SETTABLE 	R21 K85 K25 ; R21["gildRestrictedSlots"] := nil
	571	[11314]	GETUPVAL 	R21 U3 ; R21 := U3
	572	[11314]	GETGLOBAL	R22 K7 ; R22 := mSelected
	573	[11314]	GETTABLE 	R22 R22 K8 ; R22 := R22["Element"]
	574	[11314]	GETTABLE 	R22 R22 K47 ; R22 := R22["Type"]
	575	[11314]	MOVE     	R23 R4 ; R23 := R4
	576	[11314]	MOVE     	R24 R3 ; R24 := R3
	577	[11314]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	578	[11315]	GETGLOBAL	R22 K83 ; R22 := 0xc8802016
	579	[11315]	MOVE     	R23 R21 ; R23 := R21
	580	[11315]	CALL     	R22 2 4 ; R22,R23,R24 := R22(R23)
	581	[11315]	JMP      	839 ; PC := 839
	582	[11316]	GETGLOBAL	R27 K83 ; R27 := 0xc8802016
	583	[11316]	MOVE     	R28 R1 ; R28 := R1
	584	[11316]	CALL     	R27 2 4 ; R27,R28,R29 := R27(R28)
	585	[11316]	JMP      	837 ; PC := 837
	586	[11317]	NEWTABLE 	R32 0 0 ; R32 := {}
	587	[11319]	GETUPVAL 	R33 U4 ; R33 := U4
	588	[11319]	GETTABLE 	R34 R31 K86 ; R34 := R31["mStoreItem"]
	589	[11319]	CALL     	R33 2 2 ; R33 := R33(R34)
	590	[11319]	TEST     	R33 0 ; if not R33 then PC := 699
	591	[11319]	JMP      	699 ; PC := 699
	592	[11320]	GETTABLE 	R33 R31 K86 ; R33 := R31["mStoreItem"]
	593	[11320]	SELF     	R33 R33 K87 ; R34 := R33; R33 := R33[0x29ba1d84]
	594	[11320]	CALL     	R33 2 2 ; R33 := R33(R34)
	595	[11321]	GETGLOBAL	R34 K6 ; R34 := 0x7b998233
	596	[11321]	MOVE     	R35 R33 ; R35 := R33
	597	[11321]	CALL     	R34 2 2 ; R34 := R34(R35)
	598	[11321]	TEST     	R34 1 ; if R34 then PC := 617
	599	[11321]	JMP      	617 ; PC := 617
	600	[11321]	SELF     	R34 R26 K17 ; R35 := R26; R34 := R26[0xf2deaf69]
	601	[11321]	GETGLOBAL	R36 K88 ; R36 := gLotusWeaponType
	602	[11321]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	603	[11321]	TEST     	R34 0 ; if not R34 then PC := 622
	604	[11321]	JMP      	622 ; PC := 622
	605	[11321]	SELF     	R34 R26 K89 ; R35 := R26; R34 := R26[0x4be2c5e3]
	606	[11321]	MOVE     	R36 R33 ; R36 := R33
	607	[11321]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	608	[11321]	TEST     	R34 1 ; if R34 then PC := 617
	609	[11321]	JMP      	617 ; PC := 617
	610	[11321]	SELF     	R34 R26 K89 ; R35 := R26; R34 := R26[0x4be2c5e3]
	611	[11321]	GETTABLE 	R36 R31 K86 ; R36 := R31["mStoreItem"]
	612	[11321]	SELF     	R36 R36 K90 ; R37 := R36; R36 := R36[0xb6525e9d]
	613	[11321]	CALL     	R36 2 0 ; R36,... := R36(R37)
	614	[11321]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	615	[11321]	TEST     	R34 0 ; if not R34 then PC := 622
	616	[11321]	JMP      	622 ; PC := 622
	617	[11322]	GETGLOBAL	R34 K61 ; R34 := 0x33bdd652
	618	[11322]	GETTABLE 	R34 R34 K62 ; R34 := R34[0x23d5322f]
	619	[11322]	MOVE     	R35 R32 ; R35 := R32
	620	[11322]	MOVE     	R36 R31 ; R36 := R31
	621	[11322]	CALL     	R34 3 1 ; R34(R35,R36)
	622	[11325]	GETTABLE 	R34 R31 K91 ; R34 := R31["mPurchased"]
	623	[11325]	TEST     	R34 1 ; if R34 then PC := 699
	624	[11325]	JMP      	699 ; PC := 699
	625	[11326]	GETTABLE 	R34 R31 K86 ; R34 := R31["mStoreItem"]
	626	[11326]	SELF     	R34 R34 K92 ; R35 := R34; R34 := R34[0x7b060e36]
	627	[11326]	CALL     	R34 2 2 ; R34 := R34(R35)
	628	[11328]	OP_LOADBOOL	R35 1 0 ; R35 := true
	629	[11329]	GETGLOBAL	R36 K83 ; R36 := 0xc8802016
	630	[11329]	MOVE     	R37 R34 ; R37 := R34
	631	[11329]	CALL     	R36 2 4 ; R36,R37,R38 := R36(R37)
	632	[11329]	JMP      	697 ; PC := 697
	633	[11330]	GETGLOBAL	R41 K6 ; R41 := 0x7b998233
	634	[11330]	GETTABLE 	R42 R40 K93 ; R42 := R40["mTypeName"]
	635	[11330]	CALL     	R41 2 2 ; R41 := R41(R42)
	636	[11330]	TEST     	R41 1 ; if R41 then PC := 697
	637	[11330]	JMP      	697 ; PC := 697
	638	[11330]	SELF     	R41 R26 K17 ; R42 := R26; R41 := R26[0xf2deaf69]
	639	[11330]	GETTABLE 	R43 R40 K93 ; R43 := R40["mTypeName"]
	640	[11330]	SELF     	R43 R43 K87 ; R44 := R43; R43 := R43[0x29ba1d84]
	641	[11330]	CALL     	R43 2 0 ; R43,... := R43(R44)
	642	[11330]	CALL     	R41 0 2 ; R41 := R41(R42,...)
	643	[11330]	TEST     	R41 0 ; if not R41 then PC := 697
	644	[11330]	JMP      	697 ; PC := 697
	645	[11331]	NEWTABLE 	R41 0 0 ; R41 := {}
	646	[11332]	GETGLOBAL	R42 K94 ; R42 := 0xcfc01047
	647	[11332]	MOVE     	R43 R31 ; R43 := R31
	648	[11332]	CALL     	R42 2 4 ; R42,R43,R44 := R42(R43)
	649	[11332]	JMP      	651 ; PC := 651
	650	[11333]	SETTABLE 	R41 R45 R46 ; R41[R45] := R46
	651	[11332]	TFORLOOP 	R42 2 ; R45,R46 := R42(R43,R44); if R45 ~= nil then begin PC = 650; R44 := R45 end
	652	[11333]	JMP      	650 ; PC := 650
	653	[11335]	GETTABLE 	R47 R40 K93 ; R47 := R40["mTypeName"]
	654	[11335]	SELF     	R47 R47 K95 ; R48 := R47; R47 := R47[0xf278f8a1]
	655	[11335]	CALL     	R47 2 2 ; R47 := R47(R48)
	656	[11335]	SETTABLE 	R41 K47 R47 ; R41["Type"] := R47
	657	[11336]	GETTABLE 	R47 R40 K93 ; R47 := R40["mTypeName"]
	658	[11336]	SETTABLE 	R41 K96 R47 ; R41["CustomizationType"] := R47
	659	[11339]	GETTABLE 	R47 R31 K97 ; R47 := R31["SetItems"]
	660	[11339]	EQ       	0 R47 K25 ; if R47 ~= nil then PC := 664
	661	[11339]	JMP      	664 ; PC := 664
	662	[11340]	NEWTABLE 	R47 0 0 ; R47 := {}
	663	[11340]	SETTABLE 	R31 K97 R47 ; R31["SetItems"] := R47
	664	[11342]	NEWTABLE 	R47 1 0 ; R47 := {}
	665	[11342]	MOVE     	R48 R31 ; R48 := R31
	666	[11342]	SETLIST  	R47 1 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
	667	[11342]	SETTABLE 	R41 K97 R47 ; R41["SetItems"] := R47
	668	[11343]	GETGLOBAL	R47 K83 ; R47 := 0xc8802016
	669	[11343]	GETTABLE 	R48 R31 K97 ; R48 := R31["SetItems"]
	670	[11343]	CALL     	R47 2 4 ; R47,R48,R49 := R47(R48)
	671	[11343]	JMP      	682 ; PC := 682
	672	[11344]	GETGLOBAL	R52 K61 ; R52 := 0x33bdd652
	673	[11344]	GETTABLE 	R52 R52 K62 ; R52 := R52[0x23d5322f]
	674	[11344]	GETTABLE 	R53 R51 K97 ; R53 := R51["SetItems"]
	675	[11344]	MOVE     	R54 R41 ; R54 := R41
	676	[11344]	CALL     	R52 3 1 ; R52(R53,R54)
	677	[11345]	GETGLOBAL	R52 K61 ; R52 := 0x33bdd652
	678	[11345]	GETTABLE 	R52 R52 K62 ; R52 := R52[0x23d5322f]
	679	[11345]	GETTABLE 	R53 R41 K97 ; R53 := R41["SetItems"]
	680	[11345]	MOVE     	R54 R51 ; R54 := R51
	681	[11345]	CALL     	R52 3 1 ; R52(R53,R54)
	682	[11343]	TFORLOOP 	R47 2 ; R50,R51 := R47(R48,R49); if R50 ~= nil then begin PC = 672; R49 := R50 end
	683	[11345]	JMP      	672 ; PC := 672
	684	[11347]	GETGLOBAL	R52 K61 ; R52 := 0x33bdd652
	685	[11347]	GETTABLE 	R52 R52 K62 ; R52 := R52[0x23d5322f]
	686	[11347]	GETTABLE 	R53 R31 K97 ; R53 := R31["SetItems"]
	687	[11347]	MOVE     	R54 R41 ; R54 := R41
	688	[11347]	CALL     	R52 3 1 ; R52(R53,R54)
	689	[11351]	TEST     	R35 0 ; if not R35 then PC := 697
	690	[11351]	JMP      	697 ; PC := 697
	691	[11352]	GETGLOBAL	R52 K61 ; R52 := 0x33bdd652
	692	[11352]	GETTABLE 	R52 R52 K62 ; R52 := R52[0x23d5322f]
	693	[11352]	MOVE     	R53 R32 ; R53 := R32
	694	[11352]	MOVE     	R54 R41 ; R54 := R41
	695	[11352]	CALL     	R52 3 1 ; R52(R53,R54)
	696	[11353]	OP_LOADBOOL	R35 0 0 ; R35 := false
	697	[11329]	TFORLOOP 	R36 2 ; R39,R40 := R36(R37,R38); if R39 ~= nil then begin PC = 633; R38 := R39 end
	698	[11355]	JMP      	633 ; PC := 633
	699	[11360]	LOADK    	R52 := 0.000000
	700	[11360]	LOADK    	R53 := 20.000000
	701	[11360]	LOADK    	R54 := 1.000000
	702	[11360]	FORPREP  	R52 836 ; R52 -= R54; PC := 836
	703	[11361]	OP_LOADBOOL	R56 0 0 ; R56 := false
	704	[11362]	TEST     	R20 0 ; if not R20 then PC := 724
	705	[11362]	JMP      	724 ; PC := 724
	706	[11363]	GETGLOBAL	R57 K83 ; R57 := 0xc8802016
	707	[11363]	MOVE     	R58 R19 ; R58 := R19
	708	[11363]	CALL     	R57 2 4 ; R57,R58,R59 := R57(R58)
	709	[11363]	JMP      	722 ; PC := 722
	710	[11364]	EQ       	0 R55 R61 ; if R55 ~= R61 then PC := 722
	711	[11364]	JMP      	722 ; PC := 722
	712	[11365]	OP_LOADBOOL	R56 1 0 ; R56 := true
	713	[11366]	GETTABLE 	R62 R12 R55 ; R62 := R12[R55]
	714	[11366]	EQ       	0 R62 K25 ; if R62 ~= nil then PC := 724
	715	[11366]	JMP      	724 ; PC := 724
	716	[11367]	MOVE     	R62 R13 ; R62 := R13
	717	[11367]	MOVE     	R63 R55 ; R63 := R55
	718	[11367]	CALL     	R62 2 1 ; R62(R63)
	719	[11368]	GETTABLE 	R62 R12 R55 ; R62 := R12[R55]
	720	[11368]	SETTABLE 	R62 K98 K99 ; R62["Enabled"] := false
	721	[11370]	JMP      	724 ; PC := 724
	722	[11363]	TFORLOOP 	R57 2 ; R60,R61 := R57(R58,R59); if R60 ~= nil then begin PC = 710; R59 := R60 end
	723	[11371]	JMP      	710 ; PC := 710
	724	[11374]	TEST     	R56 1 ; if R56 then PC := 836
	725	[11374]	JMP      	836 ; PC := 836
	726	[11375]	GETGLOBAL	R62 K83 ; R62 := 0xc8802016
	727	[11375]	MOVE     	R63 R32 ; R63 := R32
	728	[11375]	CALL     	R62 2 4 ; R62,R63,R64 := R62(R63)
	729	[11375]	JMP      	834 ; PC := 834
	730	[11376]	GETGLOBAL	R67 K100 ; R67 := 0xce225efa
	731	[11376]	LOADK    	R68 := 0.000000
	732	[11376]	CALL     	R67 2 1 ; R67(R68)
	733	[11377]	GETUPVAL 	R67 U5 ; R67 := U5
	734	[11377]	MOVE     	R68 R66 ; R68 := R66
	735	[11377]	MOVE     	R69 R55 ; R69 := R55
	736	[11377]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	737	[11377]	TEST     	R67 0 ; if not R67 then PC := 834
	738	[11377]	JMP      	834 ; PC := 834
	739	[11377]	GETTABLE 	R67 R66 K86 ; R67 := R66["mStoreItem"]
	740	[11377]	SELF     	R67 R67 K101 ; R68 := R67; R67 := R67[0x2e649c02]
	741	[11377]	MOVE     	R69 R11 ; R69 := R11
	742	[11377]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	743	[11377]	TEST     	R67 0 ; if not R67 then PC := 834
	744	[11377]	JMP      	834 ; PC := 834
	745	[11377]	GETGLOBAL	R67 K21 ; R67 := mCosmeticsLabels
	746	[11377]	GETTABLE 	R67 R67 R55 ; R67 := R67[R55]
	747	[11377]	EQ       	1 R67 K25 ; if R67 == nil then PC := 834
	748	[11377]	JMP      	834 ; PC := 834
	749	[11378]	GETTABLE 	R67 R12 R55 ; R67 := R12[R55]
	750	[11378]	EQ       	0 R67 K25 ; if R67 ~= nil then PC := 755
	751	[11378]	JMP      	755 ; PC := 755
	752	[11379]	MOVE     	R67 R13 ; R67 := R13
	753	[11379]	MOVE     	R68 R55 ; R68 := R55
	754	[11379]	CALL     	R67 2 1 ; R67(R68)
	755	[11381]	GETTABLE 	R67 R12 R55 ; R67 := R12[R55]
	756	[11381]	GETTABLE 	R67 R67 K34 ; R67 := R67["PetTrait"]
	757	[11381]	TEST     	R67 0 ; if not R67 then PC := 768
	758	[11381]	JMP      	768 ; PC := 768
	759	[11381]	GETTABLE 	R67 R12 R55 ; R67 := R12[R55]
	760	[11381]	GETTABLE 	R67 R67 K34 ; R67 := R67["PetTrait"]
	761	[11381]	EQ       	1 R67 K35 ; if R67 == "mFurPattern" then PC := 766
	762	[11381]	JMP      	766 ; PC := 766
	763	[11381]	GETTABLE 	R67 R66 K91 ; R67 := R66["mPurchased"]
	764	[11381]	NOT      	R67 R67 ; R67 := not R67
	765	[11381]	JMP      	768 ; PC := 768
	766	[11381]	OP_LOADBOOL	R67 0 1 ; R67 := false; PC := 767
	767	[11381]	OP_LOADBOOL	R67 1 0 ; R67 := true
	768	[11382]	TEST     	R67 1 ; if R67 then PC := 808
	769	[11382]	JMP      	808 ; PC := 808
	770	[11382]	GETTABLE 	R68 R12 R55 ; R68 := R12[R55]
	771	[11382]	GETTABLE 	R68 R68 K34 ; R68 := R68["PetTrait"]
	772	[11382]	TEST     	R68 0 ; if not R68 then PC := 808
	773	[11382]	JMP      	808 ; PC := 808
	774	[11382]	GETTABLE 	R68 R12 R55 ; R68 := R12[R55]
	775	[11382]	GETTABLE 	R68 R68 K34 ; R68 := R68["PetTrait"]
	776	[11382]	EQ       	0 R68 K35 ; if R68 ~= "mFurPattern" then PC := 808
	777	[11382]	JMP      	808 ; PC := 808
	778	[11383]	GETTABLE 	R68 R66 K86 ; R68 := R66["mStoreItem"]
	779	[11383]	SELF     	R68 R68 K87 ; R69 := R68; R68 := R68[0x29ba1d84]
	780	[11383]	CALL     	R68 2 2 ; R68 := R68(R69)
	781	[11384]	GETGLOBAL	R69 K6 ; R69 := 0x7b998233
	782	[11384]	MOVE     	R70 R68 ; R70 := R68
	783	[11384]	CALL     	R69 2 2 ; R69 := R69(R70)
	784	[11384]	TEST     	R69 1 ; if R69 then PC := 808
	785	[11384]	JMP      	808 ; PC := 808
	786	[11384]	SELF     	R69 R68 K17 ; R70 := R68; R69 := R68[0xf2deaf69]
	787	[11384]	GETGLOBAL	R71 K102 ; R71 := 0x2bc8b4f4
	788	[11384]	CALL     	R69 3 2 ; R69 := R69(R70,R71)
	789	[11384]	TEST     	R69 0 ; if not R69 then PC := 808
	790	[11384]	JMP      	808 ; PC := 808
	791	[11385]	GETGLOBAL	R69 K19 ; R69 := 0x25d99d89
	792	[11385]	SELF     	R69 R69 K103 ; R70 := R69; R69 := R69[0x62c81b76]
	793	[11385]	CALL     	R69 2 2 ; R69 := R69(R70)
	794	[11385]	GETTABLE 	R69 R69 K104 ; R69 := R69["mKubrowPetDetails"]
	795	[11385]	GETTABLE 	R69 R69 K105 ; R69 := R69["mDominantTraits"]
	796	[11385]	GETTABLE 	R69 R69 K106 ; R69 := R69["mBodyType"]
	797	[11386]	GETGLOBAL	R70 K6 ; R70 := 0x7b998233
	798	[11386]	MOVE     	R71 R69 ; R71 := R69
	799	[11386]	CALL     	R70 2 2 ; R70 := R70(R71)
	800	[11386]	TEST     	R70 1 ; if R70 then PC := 808
	801	[11386]	JMP      	808 ; PC := 808
	802	[11386]	SELF     	R70 R69 K17 ; R71 := R69; R70 := R69[0xf2deaf69]
	803	[11386]	GETGLOBAL	R72 K107 ; R72 := 0xcd412bda
	804	[11386]	CALL     	R70 3 2 ; R70 := R70(R71,R72)
	805	[11386]	TEST     	R70 0 ; if not R70 then PC := 808
	806	[11386]	JMP      	808 ; PC := 808
	807	[11387]	OP_LOADBOOL	R67 1 0 ; R67 := true
	808	[11393]	TEST     	R67 0 ; if not R67 then PC := 811
	809	[11393]	JMP      	811 ; PC := 811
	810	[11393]	JMP      	834 ; PC := 834
	811	[11396]	NEWTABLE 	R70 0 0 ; R70 := {}
	812	[11397]	GETGLOBAL	R71 K94 ; R71 := 0xcfc01047
	813	[11397]	MOVE     	R72 R66 ; R72 := R66
	814	[11397]	CALL     	R71 2 4 ; R71,R72,R73 := R71(R72)
	815	[11397]	JMP      	817 ; PC := 817
	816	[11398]	SETTABLE 	R70 R74 R75 ; R70[R74] := R75
	817	[11397]	TFORLOOP 	R71 2 ; R74,R75 := R71(R72,R73); if R74 ~= nil then begin PC = 816; R73 := R74 end
	818	[11398]	JMP      	816 ; PC := 816
	819	[11400]	SETTABLE 	R66 K108 R55 ; R66["CosmeticSlot"] := R55
	820	[11401]	SETTABLE 	R70 K108 R55 ; R70["CosmeticSlot"] := R55
	821	[11403]	GETTABLE 	R76 R12 R55 ; R76 := R12[R55]
	822	[11403]	GETTABLE 	R76 R76 K39 ; R76 := R76["Attribute"]
	823	[11403]	TEST     	R76 0 ; if not R76 then PC := 828
	824	[11403]	JMP      	828 ; PC := 828
	825	[11404]	GETTABLE 	R76 R12 R55 ; R76 := R12[R55]
	826	[11404]	GETTABLE 	R76 R76 K39 ; R76 := R76["Attribute"]
	827	[11404]	SETTABLE 	R70 K39 R76 ; R70["Attribute"] := R76
	828	[11406]	GETGLOBAL	R76 K61 ; R76 := 0x33bdd652
	829	[11406]	GETTABLE 	R76 R76 K62 ; R76 := R76[0x23d5322f]
	830	[11406]	GETTABLE 	R77 R12 R55 ; R77 := R12[R55]
	831	[11406]	GETTABLE 	R77 R77 K109 ; R77 := R77["Items"]
	832	[11406]	MOVE     	R78 R70 ; R78 := R70
	833	[11406]	CALL     	R76 3 1 ; R76(R77,R78)
	834	[11375]	TFORLOOP 	R62 2 ; R65,R66 := R62(R63,R64); if R65 ~= nil then begin PC = 730; R64 := R65 end
	835	[11408]	JMP      	730 ; PC := 730
	836	[11360]	FORLOOP  	R52 703 ; R52 += R54; if R52 <= R53 then begin PC := 703; R55 := R52 end
	837	[11316]	TFORLOOP 	R27 2 ; R30,R31 := R27(R28,R29); if R30 ~= nil then begin PC = 586; R29 := R30 end
	838	[11411]	JMP      	586 ; PC := 586
	839	[11315]	TFORLOOP 	R22 2 ; R25,R26 := R22(R23,R24); if R25 ~= nil then begin PC = 582; R24 := R25 end
	840	[11412]	JMP      	582 ; PC := 582
	841	[11415]	LOADK    	R76 := 0.000000
	842	[11415]	LOADK    	R77 := 20.000000
	843	[11415]	LOADK    	R78 := 1.000000
	844	[11415]	FORPREP  	R76 1154 ; R76 -= R78; PC := 1154
	845	[11416]	GETGLOBAL	R80 K100 ; R80 := 0xce225efa
	846	[11416]	LOADK    	R81 := 0.000000
	847	[11416]	CALL     	R80 2 1 ; R80(R81)
	848	[11417]	GETTABLE 	R80 R12 R79 ; R80 := R12[R79]
	849	[11417]	EQ       	1 R80 K25 ; if R80 == nil then PC := 1154
	850	[11417]	JMP      	1154 ; PC := 1154
	851	[11417]	GETGLOBAL	R80 K6 ; R80 := 0x7b998233
	852	[11417]	GETGLOBAL	R81 K19 ; R81 := 0x25d99d89
	853	[11417]	CALL     	R80 2 2 ; R80 := R80(R81)
	854	[11417]	TEST     	R80 1 ; if R80 then PC := 1154
	855	[11417]	JMP      	1154 ; PC := 1154
	856	[11418]	GETTABLE 	R80 R12 R79 ; R80 := R12[R79]
	857	[11418]	GETTABLE 	R80 R80 K34 ; R80 := R80["PetTrait"]
	858	[11418]	TEST     	R80 0 ; if not R80 then PC := 980
	859	[11418]	JMP      	980 ; PC := 980
	860	[11419]	NEWTABLE 	R80 0 7 ; R80 := {}
	861	[11419]	SETTABLE 	R80 K108 R79 ; R80["CosmeticSlot"] := R79
	862	[11419]	SETTABLE 	R80 K47 K25 ; R80["Type"] := nil
	863	[11419]	SETTABLE 	R80 K110 K111 ; R80["Name"] := "/Lotus/Language/Menu/Cosmetics_None"
	864	[11419]	SETTABLE 	R80 K112 K113 ; R80["mEmpty"] := true
	865	[11419]	SETTABLE 	R80 K91 K113 ; R80["mPurchased"] := true
	866	[11419]	NEWTABLE 	R81 0 1 ; R81 := {}
	867	[11419]	SETTABLE 	R81 K115 K5 ; R81["UID"] := ""
	868	[11419]	SETTABLE 	R80 K114 R81 ; R80["mPurchasedInfo"] := R81
	869	[11419]	UNM      	R81 R79 ; R81 := ^ R79
	870	[11419]	SETTABLE 	R80 K116 R81 ; R80["mSortId"] := R81
	871	[11421]	TEST     	R5 0 ; if not R5 then PC := 913
	872	[11421]	JMP      	913 ; PC := 913
	873	[11422]	GETTABLE 	R81 R12 R79 ; R81 := R12[R79]
	874	[11422]	GETTABLE 	R81 R81 K39 ; R81 := R81["Attribute"]
	875	[11422]	TEST     	R81 0 ; if not R81 then PC := 890
	876	[11422]	JMP      	890 ; PC := 890
	877	[11423]	GETTABLE 	R81 R12 R79 ; R81 := R12[R79]
	878	[11423]	GETTABLE 	R81 R81 K39 ; R81 := R81["Attribute"]
	879	[11423]	SETTABLE 	R80 K39 R81 ; R80["Attribute"] := R81
	880	[11424]	SELF     	R81 R11 K118 ; R82 := R11; R81 := R11[0x6199aec6]
	881	[11424]	GETTABLE 	R83 R80 K39 ; R83 := R80["Attribute"]
	882	[11424]	GETGLOBAL	R84 K13 ; R84 := _T
	883	[11424]	GETTABLE 	R84 R84 K119 ; R84 := R84["SpecialSuitAvatar"]
	884	[11424]	CALL     	R81 4 2 ; R81 := R81(R82,R83,R84)
	885	[11424]	SELF     	R81 R81 K120 ; R82 := R81; R81 := R81[0xa5d5c8f6]
	886	[11424]	CALL     	R81 2 2 ; R81 := R81(R82)
	887	[11424]	SETTABLE 	R80 K117 R81 ; R80["PetTintColor"] := R81
	888	[11425]	SETTABLE 	R80 K110 K121 ; R80["Name"] := "/Lotus/Language/Menu/Cosmetics_NaturalColor"
	889	[11425]	JMP      	965 ; PC := 965
	890	[11428]	LEN      	R81 R21 ; R81 := # R21
	891	[11428]	GETTABLE 	R81 R21 R81 ; R81 := R21[R81]
	892	[11429]	SELF     	R82 R81 K122 ; R83 := R81; R82 := R81[0x0911ae7c]
	893	[11429]	MOVE     	R84 R79 ; R84 := R79
	894	[11429]	CALL     	R82 3 2 ; R82 := R82(R83,R84)
	895	[11431]	GETGLOBAL	R83 K83 ; R83 := 0xc8802016
	896	[11431]	GETTABLE 	R84 R12 R79 ; R84 := R12[R79]
	897	[11431]	GETTABLE 	R84 R84 K109 ; R84 := R84["Items"]
	898	[11431]	CALL     	R83 2 4 ; R83,R84,R85 := R83(R84)
	899	[11431]	JMP      	907 ; PC := 907
	900	[11432]	GETTABLE 	R88 R87 K47 ; R88 := R87["Type"]
	901	[11432]	EQ       	0 R88 R82 ; if R88 ~= R82 then PC := 907
	902	[11432]	JMP      	907 ; PC := 907
	903	[11433]	SETTABLE 	R87 K123 K113 ; R87["mDefault"] := true
	904	[11434]	SETTABLE 	R87 K91 K113 ; R87["mPurchased"] := true
	905	[11435]	LOADNIL  	R80 R80 ; R80 := nil
	906	[11436]	JMP      	909 ; PC := 909
	907	[11431]	TFORLOOP 	R83 2 ; R86,R87 := R83(R84,R85); if R86 ~= nil then begin PC = 900; R85 := R86 end
	908	[11437]	JMP      	900 ; PC := 900
	909	[11440]	TEST     	R80 0 ; if not R80 then PC := 965
	910	[11440]	JMP      	965 ; PC := 965
	911	[11441]	SETTABLE 	R80 K47 R82 ; R80["Type"] := R82
	912	[11443]	JMP      	965 ; PC := 965
	913	[11446]	GETGLOBAL	R88 K19 ; R88 := 0x25d99d89
	914	[11446]	SELF     	R88 R88 K103 ; R89 := R88; R88 := R88[0x62c81b76]
	915	[11446]	CALL     	R88 2 2 ; R88 := R88(R89)
	916	[11446]	GETTABLE 	R88 R88 K104 ; R88 := R88["mKubrowPetDetails"]
	917	[11446]	GETTABLE 	R88 R88 K105 ; R88 := R88["mDominantTraits"]
	918	[11447]	GETGLOBAL	R89 K68 ; R89 := 0xb009bbc6
	919	[11447]	GETTABLE 	R90 R12 R79 ; R90 := R12[R79]
	920	[11447]	GETTABLE 	R90 R90 K34 ; R90 := R90["PetTrait"]
	921	[11447]	GETTABLE 	R90 R88 R90 ; R90 := R88[R90]
	922	[11447]	CALL     	R89 2 2 ; R89 := R89(R90)
	923	[11448]	GETTABLE 	R90 R12 R79 ; R90 := R12[R79]
	924	[11448]	GETTABLE 	R90 R90 K39 ; R90 := R90["Attribute"]
	925	[11448]	TEST     	R90 0 ; if not R90 then PC := 941
	926	[11448]	JMP      	941 ; PC := 941
	927	[11449]	GETTABLE 	R90 R12 R79 ; R90 := R12[R79]
	928	[11449]	GETTABLE 	R90 R90 K39 ; R90 := R90["Attribute"]
	929	[11449]	SETTABLE 	R80 K39 R90 ; R80["Attribute"] := R90
	930	[11450]	TEST     	R89 0 ; if not R89 then PC := 938
	931	[11450]	JMP      	938 ; PC := 938
	932	[11451]	SELF     	R90 R89 K124 ; R91 := R89; R90 := R89[0x5d10207d]
	933	[11451]	CALL     	R90 2 2 ; R90 := R90(R91)
	934	[11451]	SELF     	R90 R90 K120 ; R91 := R90; R90 := R90[0xa5d5c8f6]
	935	[11451]	CALL     	R90 2 2 ; R90 := R90(R91)
	936	[11451]	SETTABLE 	R80 K117 R90 ; R80["PetTintColor"] := R90
	937	[11451]	JMP      	939 ; PC := 939
	938	[11453]	SETTABLE 	R80 K117 K24 ; R80["PetTintColor"] := 0.000000
	939	[11455]	SETTABLE 	R80 K110 K121 ; R80["Name"] := "/Lotus/Language/Menu/Cosmetics_NaturalColor"
	940	[11455]	JMP      	965 ; PC := 965
	941	[11457]	GETGLOBAL	R90 K68 ; R90 := 0xb009bbc6
	942	[11457]	GETTABLE 	R91 R12 R79 ; R91 := R12[R79]
	943	[11457]	GETTABLE 	R91 R91 K34 ; R91 := R91["PetTrait"]
	944	[11457]	GETTABLE 	R91 R88 R91 ; R91 := R88[R91]
	945	[11457]	CALL     	R90 2 2 ; R90 := R90(R91)
	946	[11457]	SETTABLE 	R80 K47 R90 ; R80["Type"] := R90
	947	[11458]	GETTABLE 	R90 R80 K114 ; R90 := R80["mPurchasedInfo"]
	948	[11458]	GETTABLE 	R91 R80 K47 ; R91 := R80["Type"]
	949	[11458]	SELF     	R91 R91 K125 ; R92 := R91; R91 := R91[0xed4e0128]
	950	[11458]	CALL     	R91 2 2 ; R91 := R91(R92)
	951	[11458]	SETTABLE 	R90 K115 R91 ; R90["UID"] := R91
	952	[11459]	GETTABLE 	R90 R80 K47 ; R90 := R80["Type"]
	953	[11459]	SELF     	R90 R90 K126 ; R91 := R90; R90 := R90[0xd3a9d01f]
	954	[11459]	CALL     	R90 2 2 ; R90 := R90(R91)
	955	[11459]	SELF     	R90 R90 K127 ; R91 := R90; R90 := R90[0x6d604ba7]
	956	[11459]	CALL     	R90 2 2 ; R90 := R90(R91)
	957	[11459]	SETTABLE 	R80 K110 R90 ; R80["Name"] := R90
	958	[11460]	GETUPVAL 	R90 U6 ; R90 := U6
	959	[11460]	GETTABLE 	R90 R90 K130 ; R90 := R90[0x056dcf06]
	960	[11460]	GETTABLE 	R91 R80 K47 ; R91 := R80["Type"]
	961	[11460]	OP_LOADBOOL	R92 1 0 ; R92 := true
	962	[11460]	CALL     	R90 3 3 ; R90,R91 := R90(R91,R92)
	963	[11460]	SETTABLE 	R80 K129 R91 ; R80["Themed"] := R91
	964	[11460]	SETTABLE 	R80 K128 R90 ; R80["Icon"] := R90
	965	[11464]	TEST     	R80 0 ; if not R80 then PC := 1154
	966	[11464]	JMP      	1154 ; PC := 1154
	967	[11465]	GETGLOBAL	R90 K0 ; R90 := 0xae91e43b
	968	[11465]	SELF     	R90 R90 K131 ; R91 := R90; R90 := R90[0x42b04007]
	969	[11465]	GETTABLE 	R92 R80 K110 ; R92 := R80["Name"]
	970	[11465]	OP_LOADBOOL	R93 0 0 ; R93 := false
	971	[11465]	CALL     	R90 4 2 ; R90 := R90(R91,R92,R93)
	972	[11465]	SETTABLE 	R80 K110 R90 ; R80["Name"] := R90
	973	[11466]	GETGLOBAL	R90 K61 ; R90 := 0x33bdd652
	974	[11466]	GETTABLE 	R90 R90 K62 ; R90 := R90[0x23d5322f]
	975	[11466]	GETTABLE 	R91 R12 R79 ; R91 := R12[R79]
	976	[11466]	GETTABLE 	R91 R91 K109 ; R91 := R91["Items"]
	977	[11466]	MOVE     	R92 R80 ; R92 := R80
	978	[11466]	CALL     	R90 3 1 ; R90(R91,R92)
	979	[11467]	JMP      	1154 ; PC := 1154
	980	[11469]	OP_LOADBOOL	R90 1 0 ; R90 := true
	981	[11470]	TEST     	R20 0 ; if not R20 then PC := 992
	982	[11470]	JMP      	992 ; PC := 992
	983	[11471]	GETGLOBAL	R91 K83 ; R91 := 0xc8802016
	984	[11471]	MOVE     	R92 R19 ; R92 := R19
	985	[11471]	CALL     	R91 2 4 ; R91,R92,R93 := R91(R92)
	986	[11471]	JMP      	990 ; PC := 990
	987	[11472]	EQ       	0 R79 R95 ; if R79 ~= R95 then PC := 990
	988	[11472]	JMP      	990 ; PC := 990
	989	[11473]	OP_LOADBOOL	R90 0 0 ; R90 := false
	990	[11471]	TFORLOOP 	R91 2 ; R94,R95 := R91(R92,R93); if R94 ~= nil then begin PC = 987; R93 := R94 end
	991	[11474]	JMP      	987 ; PC := 987
	992	[11477]	TEST     	R90 0 ; if not R90 then PC := 1154
	993	[11477]	JMP      	1154 ; PC := 1154
	994	[11479]	LEN      	R96 R21 ; R96 := # R21
	995	[11479]	GETTABLE 	R96 R21 R96 ; R96 := R21[R96]
	996	[11480]	GETGLOBAL	R97 K7 ; R97 := mSelected
	997	[11480]	GETTABLE 	R97 R97 K8 ; R97 := R97["Element"]
	998	[11480]	GETTABLE 	R97 R97 K53 ; R97 := R97["Customization"]
	999	[11480]	SELF     	R97 R97 K66 ; R98 := R97; R97 := R97[0x2540510f]
	1000	[11480]	MOVE     	R99 R79 ; R99 := R79
	1001	[11480]	CALL     	R97 3 2 ; R97 := R97(R98,R99)
	1002	[11481]	SELF     	R98 R96 K122 ; R99 := R96; R98 := R96[0x0911ae7c]
	1003	[11481]	MOVE     	R100 R79 ; R100 := R79
	1004	[11481]	CALL     	R98 3 2 ; R98 := R98(R99,R100)
	1005	[11483]	LOADK    	R99 := 0.000000
	1006	[11483]	LOADK    	R100 := 20.000000
	1007	[11483]	LOADK    	R101 := 1.000000
	1008	[11483]	FORPREP  	R99 1042 ; R99 -= R101; PC := 1042
	1009	[11484]	GETGLOBAL	R103 K7 ; R103 := mSelected
	1010	[11484]	GETTABLE 	R103 R103 K8 ; R103 := R103["Element"]
	1011	[11484]	GETTABLE 	R103 R103 K53 ; R103 := R103["Customization"]
	1012	[11484]	SELF     	R103 R103 K66 ; R104 := R103; R103 := R103[0x2540510f]
	1013	[11484]	MOVE     	R105 R102 ; R105 := R102
	1014	[11484]	CALL     	R103 3 2 ; R103 := R103(R104,R105)
	1015	[11485]	GETGLOBAL	R104 K6 ; R104 := 0x7b998233
	1016	[11485]	MOVE     	R105 R103 ; R105 := R103
	1017	[11485]	CALL     	R104 2 2 ; R104 := R104(R105)
	1018	[11485]	TEST     	R104 1 ; if R104 then PC := 1042
	1019	[11485]	JMP      	1042 ; PC := 1042
	1020	[11485]	SELF     	R104 R103 K17 ; R105 := R103; R104 := R103[0xf2deaf69]
	1021	[11485]	GETGLOBAL	R106 K132 ; R106 := gLotusSuitCustomizationType
	1022	[11485]	CALL     	R104 3 2 ; R104 := R104(R105,R106)
	1023	[11485]	TEST     	R104 0 ; if not R104 then PC := 1042
	1024	[11485]	JMP      	1042 ; PC := 1042
	1025	[11487]	GETGLOBAL	R104 K68 ; R104 := 0xb009bbc6
	1026	[11487]	MOVE     	R105 R103 ; R105 := R103
	1027	[11487]	CALL     	R104 2 2 ; R104 := R104(R105)
	1028	[11488]	GETGLOBAL	R105 K6 ; R105 := 0x7b998233
	1029	[11488]	MOVE     	R106 R104 ; R106 := R104
	1030	[11488]	CALL     	R105 2 2 ; R105 := R105(R106)
	1031	[11488]	TEST     	R105 1 ; if R105 then PC := 1042
	1032	[11488]	JMP      	1042 ; PC := 1042
	1033	[11489]	SELF     	R105 R104 K133 ; R106 := R104; R105 := R104[0x68eb5c84]
	1034	[11489]	MOVE     	R107 R79 ; R107 := R79
	1035	[11489]	CALL     	R105 3 2 ; R105 := R105(R106,R107)
	1036	[11490]	GETGLOBAL	R106 K6 ; R106 := 0x7b998233
	1037	[11490]	MOVE     	R107 R105 ; R107 := R105
	1038	[11490]	CALL     	R106 2 2 ; R106 := R106(R107)
	1039	[11490]	TEST     	R106 1 ; if R106 then PC := 1042
	1040	[11490]	JMP      	1042 ; PC := 1042
	1041	[11491]	MOVE     	R98 R105 ; R98 := R105
	1042	[11483]	FORLOOP  	R99 1009 ; R99 += R101; if R99 <= R100 then begin PC := 1009; R102 := R99 end
	1043	[11497]	SELF     	R106 R96 K134 ; R107 := R96; R106 := R96[0x81f3a598]
	1044	[11497]	CALL     	R106 2 2 ; R106 := R106(R107)
	1045	[11498]	GETGLOBAL	R107 K6 ; R107 := 0x7b998233
	1046	[11498]	MOVE     	R108 R98 ; R108 := R98
	1047	[11498]	CALL     	R107 2 2 ; R107 := R107(R108)
	1048	[11498]	TEST     	R107 0 ; if not R107 then PC := 1082
	1049	[11498]	JMP      	1082 ; PC := 1082
	1050	[11498]	TEST     	R106 0 ; if not R106 then PC := 1060
	1051	[11498]	JMP      	1060 ; PC := 1060
	1052	[11498]	GETGLOBAL	R107 K31 ; R107 := mLists
	1053	[11498]	GETTABLE 	R107 R107 K32 ; R107 := R107["mCosmeticsList"]
	1054	[11498]	GETTABLE 	R107 R107 K135 ; R107 := R107["mCurrLevel"]
	1055	[11498]	GETGLOBAL	R108 K31 ; R108 := mLists
	1056	[11498]	GETTABLE 	R108 R108 K32 ; R108 := R108["mCosmeticsList"]
	1057	[11498]	GETTABLE 	R108 R108 K136 ; R108 := R108["HOLSTER_STYLE"]
	1058	[11498]	EQ       	1 R107 R108 ; if R107 == R108 then PC := 1082
	1059	[11498]	JMP      	1082 ; PC := 1082
	1060	[11499]	GETGLOBAL	R107 K61 ; R107 := 0x33bdd652
	1061	[11499]	GETTABLE 	R107 R107 K62 ; R107 := R107[0x23d5322f]
	1062	[11499]	GETTABLE 	R108 R12 R79 ; R108 := R12[R79]
	1063	[11499]	GETTABLE 	R108 R108 K109 ; R108 := R108["Items"]
	1064	[11499]	NEWTABLE 	R109 0 7 ; R109 := {}
	1065	[11499]	SETTABLE 	R109 K108 R79 ; R109["CosmeticSlot"] := R79
	1066	[11499]	SETTABLE 	R109 K47 K25 ; R109["Type"] := nil
	1067	[11499]	GETGLOBAL	R110 K0 ; R110 := 0xae91e43b
	1068	[11499]	SELF     	R110 R110 K131 ; R111 := R110; R110 := R110[0x42b04007]
	1069	[11499]	LOADK    	R112 K111 ; R112 := "/Lotus/Language/Menu/Cosmetics_None"
	1070	[11499]	OP_LOADBOOL	R113 0 0 ; R113 := false
	1071	[11499]	CALL     	R110 4 2 ; R110 := R110(R111,R112,R113)
	1072	[11499]	SETTABLE 	R109 K110 R110 ; R109["Name"] := R110
	1073	[11499]	SETTABLE 	R109 K112 K113 ; R109["mEmpty"] := true
	1074	[11499]	SETTABLE 	R109 K91 K113 ; R109["mPurchased"] := true
	1075	[11499]	NEWTABLE 	R110 0 1 ; R110 := {}
	1076	[11499]	SETTABLE 	R110 K115 K5 ; R110["UID"] := ""
	1077	[11499]	SETTABLE 	R109 K114 R110 ; R109["mPurchasedInfo"] := R110
	1078	[11499]	UNM      	R110 R79 ; R110 := ^ R79
	1079	[11499]	SETTABLE 	R109 K116 R110 ; R109["mSortId"] := R110
	1080	[11499]	CALL     	R107 3 1 ; R107(R108,R109)
	1081	[11499]	JMP      	1122 ; PC := 1122
	1082	[11502]	OP_LOADBOOL	R107 0 0 ; R107 := false
	1083	[11503]	GETGLOBAL	R108 K83 ; R108 := 0xc8802016
	1084	[11503]	GETTABLE 	R109 R12 R79 ; R109 := R12[R79]
	1085	[11503]	GETTABLE 	R109 R109 K109 ; R109 := R109["Items"]
	1086	[11503]	CALL     	R108 2 4 ; R108,R109,R110 := R108(R109)
	1087	[11503]	JMP      	1095 ; PC := 1095
	1088	[11504]	GETTABLE 	R113 R112 K47 ; R113 := R112["Type"]
	1089	[11504]	EQ       	0 R113 R98 ; if R113 ~= R98 then PC := 1095
	1090	[11504]	JMP      	1095 ; PC := 1095
	1091	[11505]	SETTABLE 	R112 K123 K113 ; R112["mDefault"] := true
	1092	[11506]	SETTABLE 	R112 K91 K113 ; R112["mPurchased"] := true
	1093	[11507]	OP_LOADBOOL	R107 1 0 ; R107 := true
	1094	[11508]	JMP      	1097 ; PC := 1097
	1095	[11503]	TFORLOOP 	R108 2 ; R111,R112 := R108(R109,R110); if R111 ~= nil then begin PC = 1088; R110 := R111 end
	1096	[11509]	JMP      	1088 ; PC := 1088
	1097	[11512]	TEST     	R107 1 ; if R107 then PC := 1122
	1098	[11512]	JMP      	1122 ; PC := 1122
	1099	[11512]	TEST     	R106 1 ; if R106 then PC := 1122
	1100	[11512]	JMP      	1122 ; PC := 1122
	1101	[11513]	GETGLOBAL	R113 K61 ; R113 := 0x33bdd652
	1102	[11513]	GETTABLE 	R113 R113 K62 ; R113 := R113[0x23d5322f]
	1103	[11513]	GETTABLE 	R114 R12 R79 ; R114 := R12[R79]
	1104	[11513]	GETTABLE 	R114 R114 K109 ; R114 := R114["Items"]
	1105	[11513]	NEWTABLE 	R115 0 7 ; R115 := {}
	1106	[11513]	SETTABLE 	R115 K108 R79 ; R115["CosmeticSlot"] := R79
	1107	[11513]	SETTABLE 	R115 K47 R98 ; R115["Type"] := R98
	1108	[11513]	GETGLOBAL	R116 K0 ; R116 := 0xae91e43b
	1109	[11513]	SELF     	R116 R116 K131 ; R117 := R116; R116 := R116[0x42b04007]
	1110	[11513]	LOADK    	R118 K111 ; R118 := "/Lotus/Language/Menu/Cosmetics_None"
	1111	[11513]	OP_LOADBOOL	R119 0 0 ; R119 := false
	1112	[11513]	CALL     	R116 4 2 ; R116 := R116(R117,R118,R119)
	1113	[11513]	SETTABLE 	R115 K110 R116 ; R115["Name"] := R116
	1114	[11513]	SETTABLE 	R115 K112 K113 ; R115["mEmpty"] := true
	1115	[11513]	SETTABLE 	R115 K91 K113 ; R115["mPurchased"] := true
	1116	[11513]	NEWTABLE 	R116 0 1 ; R116 := {}
	1117	[11513]	SETTABLE 	R116 K115 K5 ; R116["UID"] := ""
	1118	[11513]	SETTABLE 	R115 K114 R116 ; R115["mPurchasedInfo"] := R116
	1119	[11513]	UNM      	R116 R79 ; R116 := ^ R79
	1120	[11513]	SETTABLE 	R115 K116 R116 ; R115["mSortId"] := R116
	1121	[11513]	CALL     	R113 3 1 ; R113(R114,R115)
	1122	[11517]	GETGLOBAL	R113 K6 ; R113 := 0x7b998233
	1123	[11517]	MOVE     	R114 R97 ; R114 := R97
	1124	[11517]	CALL     	R113 2 2 ; R113 := R113(R114)
	1125	[11517]	TEST     	R113 1 ; if R113 then PC := 1154
	1126	[11517]	JMP      	1154 ; PC := 1154
	1127	[11517]	SELF     	R113 R97 K17 ; R114 := R97; R113 := R97[0xf2deaf69]
	1128	[11517]	GETGLOBAL	R115 K132 ; R115 := gLotusSuitCustomizationType
	1129	[11517]	CALL     	R113 3 2 ; R113 := R113(R114,R115)
	1130	[11517]	TEST     	R113 0 ; if not R113 then PC := 1154
	1131	[11517]	JMP      	1154 ; PC := 1154
	1132	[11519]	LOADK    	R113 := 0.000000
	1133	[11519]	LOADK    	R114 := 20.000000
	1134	[11519]	LOADK    	R115 := 1.000000
	1135	[11519]	FORPREP  	R113 1153 ; R113 -= R115; PC := 1153
	1136	[11520]	GETGLOBAL	R117 K68 ; R117 := 0xb009bbc6
	1137	[11520]	MOVE     	R118 R97 ; R118 := R97
	1138	[11520]	CALL     	R117 2 2 ; R117 := R117(R118)
	1139	[11521]	GETGLOBAL	R118 K6 ; R118 := 0x7b998233
	1140	[11521]	MOVE     	R119 R117 ; R119 := R117
	1141	[11521]	CALL     	R118 2 2 ; R118 := R118(R119)
	1142	[11521]	TEST     	R118 1 ; if R118 then PC := 1153
	1143	[11521]	JMP      	1153 ; PC := 1153
	1144	[11522]	SELF     	R118 R117 K69 ; R119 := R117; R118 := R117[0xb8ef5b34]
	1145	[11522]	MOVE     	R120 R116 ; R120 := R116
	1146	[11522]	CALL     	R118 3 2 ; R118 := R118(R119,R120)
	1147	[11523]	GETGLOBAL	R119 K6 ; R119 := 0x7b998233
	1148	[11523]	MOVE     	R120 R118 ; R120 := R118
	1149	[11523]	CALL     	R119 2 2 ; R119 := R119(R120)
	1150	[11523]	TEST     	R119 1 ; if R119 then PC := 1153
	1151	[11523]	JMP      	1153 ; PC := 1153
	1152	[11524]	SETTABLE 	R12 R116 K25 ; R12[R116] := nil
	1153	[11519]	FORLOOP  	R113 1136 ; R113 += R115; if R113 <= R114 then begin PC := 1136; R116 := R113 end
	1154	[11415]	FORLOOP  	R76 845 ; R76 += R78; if R76 <= R77 then begin PC := 845; R79 := R76 end
	1155	[11535]	EQ       	0 R3 K44 ; if R3 ~= 2.000000 then PC := 1159
	1156	[11535]	JMP      	1159 ; PC := 1159
	1157	[11536]	SETTABLE 	R12 K56 K25 ; R12[3.000000] := nil
	1158	[11537]	SETTABLE 	R12 K65 K25 ; R12[4.000000] := nil
	1159	[11540]	NEWTABLE 	R119 0 0 ; R119 := {}
	1160	[11541]	GETGLOBAL	R120 K94 ; R120 := 0xcfc01047
	1161	[11541]	MOVE     	R121 R12 ; R121 := R12
	1162	[11541]	CALL     	R120 2 4 ; R120,R121,R122 := R120(R121)
	1163	[11541]	JMP      	1169 ; PC := 1169
	1164	[11542]	GETGLOBAL	R125 K61 ; R125 := 0x33bdd652
	1165	[11542]	GETTABLE 	R125 R125 K62 ; R125 := R125[0x23d5322f]
	1166	[11542]	MOVE     	R126 R119 ; R126 := R119
	1167	[11542]	MOVE     	R127 R124 ; R127 := R124
	1168	[11542]	CALL     	R125 3 1 ; R125(R126,R127)
	1169	[11541]	TFORLOOP 	R120 2 ; R123,R124 := R120(R121,R122); if R123 ~= nil then begin PC = 1164; R122 := R123 end
	1170	[11542]	JMP      	1164 ; PC := 1164
	1171	[11545]	GETGLOBAL	R125 K61 ; R125 := 0x33bdd652
	1172	[11545]	GETTABLE 	R125 R125 K137 ; R125 := R125[0xf21b1d8e]
	1173	[11545]	MOVE     	R126 R119 ; R126 := R119
	1174	[11552]	CLOSURE  	R127 1 ; R127 := closure(Function #2)
	1175	[11545]	CALL     	R125 3 1 ; R125(R126,R127)
	1176	[11555]	GETGLOBAL	R125 K6 ; R125 := 0x7b998233
	1177	[11555]	GETGLOBAL	R126 K19 ; R126 := 0x25d99d89
	1178	[11555]	CALL     	R125 2 2 ; R125 := R125(R126)
	1179	[11555]	TEST     	R125 1 ; if R125 then PC := 1241
	1180	[11555]	JMP      	1241 ; PC := 1241
	1181	[11555]	GETGLOBAL	R125 K31 ; R125 := mLists
	1182	[11555]	GETTABLE 	R125 R125 K32 ; R125 := R125["mCosmeticsList"]
	1183	[11555]	GETTABLE 	R125 R125 K135 ; R125 := R125["mCurrLevel"]
	1184	[11555]	GETGLOBAL	R126 K31 ; R126 := mLists
	1185	[11555]	GETTABLE 	R126 R126 K32 ; R126 := R126["mCosmeticsList"]
	1186	[11555]	GETTABLE 	R126 R126 K33 ; R126 := R126["DEFAULT"]
	1187	[11555]	EQ       	0 R125 R126 ; if R125 ~= R126 then PC := 1241
	1188	[11555]	JMP      	1241 ; PC := 1241
	1189	[11555]	EQ       	1 R3 K24 ; if R3 == 0.000000 then PC := 1193
	1190	[11555]	JMP      	1193 ; PC := 1193
	1191	[11555]	EQ       	0 R3 K56 ; if R3 ~= 3.000000 then PC := 1241
	1192	[11555]	JMP      	1241 ; PC := 1241
	1193	[11556]	EQ       	1 R4 K44 ; if R4 == 2.000000 then PC := 1199
	1194	[11556]	JMP      	1199 ; PC := 1199
	1195	[11556]	EQ       	1 R4 K20 ; if R4 == 1.000000 then PC := 1199
	1196	[11556]	JMP      	1199 ; PC := 1199
	1197	[11556]	EQ       	0 R4 K56 ; if R4 ~= 3.000000 then PC := 1241
	1198	[11556]	JMP      	1241 ; PC := 1241
	1199	[11557]	GETGLOBAL	R125 K138 ; R125 := mCurrentLoadout
	1200	[11557]	GETTABLE 	R125 R125 R3 ; R125 := R125[R3]
	1201	[11557]	SELF     	R125 R125 K139 ; R126 := R125; R125 := R125[0x2abbe722]
	1202	[11557]	MOVE     	R127 R4 ; R127 := R4
	1203	[11557]	CALL     	R125 3 2 ; R125 := R125(R126,R127)
	1204	[11558]	GETGLOBAL	R126 K31 ; R126 := mLists
	1205	[11558]	GETTABLE 	R126 R126 K32 ; R126 := R126["mCosmeticsList"]
	1206	[11558]	SELF     	R126 R126 K140 ; R127 := R126; R126 := R126[0xbad4316f]
	1207	[11558]	NEWTABLE 	R128 0 4 ; R128 := {}
	1208	[11558]	SETTABLE 	R128 K28 K141 ; R128["Title"] := "/Lotus/Language/Menu/Arsenal_HolsterVis"
	1209	[11558]	GETTABLE 	R129 R125 K143 ; R129 := R125["mHiddenWhenHolstered"]
	1210	[11558]	NOT      	R129 R129 ; R129 := not R129
	1211	[11558]	SETTABLE 	R128 K142 R129 ; R128["ToggleVal"] := R129
	1212	[11573]	CLOSURE  	R129 2 ; R129 := closure(Function #3)
	1213	[11573]	MOVE     	R0 R3 ; R0 := R3
	1214	[11573]	MOVE     	R0 R4 ; R0 := R4
	1215	[11573]	GETUPVAL 	R0 U7 ; R0 := U7
	1216	[11573]	SETTABLE 	R128 K144 R129 ; R128["ToggleFunction"] := R129
	1217	[11574]	SETTABLE 	R128 K145 K113 ; R128["HasBottomLine"] := true
	1218	[11574]	OP_LOADBOOL	R129 1 0 ; R129 := true
	1219	[11558]	CALL     	R126 4 2 ; R126 := R126(R127,R128,R129)
	1220	[11576]	LOADK    	R127 K5 ; R127 := ""
	1221	[11577]	GETGLOBAL	R128 K7 ; R128 := mSelected
	1222	[11577]	GETTABLE 	R128 R128 K8 ; R128 := R128["Element"]
	1223	[11577]	EQ       	1 R128 K25 ; if R128 == nil then PC := 1233
	1224	[11577]	JMP      	1233 ; PC := 1233
	1225	[11578]	GETGLOBAL	R128 K0 ; R128 := 0xae91e43b
	1226	[11578]	SELF     	R128 R128 K131 ; R129 := R128; R128 := R128[0x42b04007]
	1227	[11578]	GETGLOBAL	R130 K7 ; R130 := mSelected
	1228	[11578]	GETTABLE 	R130 R130 K8 ; R130 := R130["Element"]
	1229	[11578]	GETTABLE 	R130 R130 K28 ; R130 := R130["Title"]
	1230	[11578]	OP_LOADBOOL	R131 0 0 ; R131 := false
	1231	[11578]	CALL     	R128 4 2 ; R128 := R128(R129,R130,R131)
	1232	[11578]	MOVE     	R127 R128 ; R127 := R128
	1233	[11580]	GETGLOBAL	R128 K0 ; R128 := 0xae91e43b
	1234	[11580]	SELF     	R128 R128 K131 ; R129 := R128; R128 := R128[0x42b04007]
	1235	[11580]	LOADK    	R130 K146 ; R130 := "/Lotus/Language/Menu/Loadout_HolsterTitle"
	1236	[11580]	OP_LOADBOOL	R131 0 0 ; R131 := false
	1237	[11580]	NEWTABLE 	R132 0 1 ; R132 := {}
	1238	[11580]	SETTABLE 	R132 K147 R127 ; R132["SLOT"] := R127
	1239	[11580]	CALL     	R128 5 2 ; R128 := R128(R129,R130,R131,R132)
	1240	[11580]	SETTABLE 	R126 K36 R128 ; R126["TopTitle"] := R128
	1241	[11583]	SETGLOBALHASH	R119 K148 ; mSortedCosmetics := R119
	1242	[11584]	NEWTABLE 	R128 0 0 ; R128 := {}
	1243	[11585]	OP_LOADBOOL	R129 0 0 ; R129 := false
	1244	[11587]	LOADK    	R130 := 1.000000
	1245	[11587]	LEN      	R131 R119 ; R131 := # R119
	1246	[11587]	LOADK    	R132 := 1.000000
	1247	[11587]	FORPREP  	R130 1277 ; R130 -= R132; PC := 1277
	1248	[11588]	GETTABLE 	R134 R119 R133 ; R134 := R119[R133]
	1249	[11590]	GETTABLE 	R135 R134 K30 ; R135 := R134["Level"]
	1250	[11590]	GETGLOBAL	R136 K31 ; R136 := mLists
	1251	[11590]	GETTABLE 	R136 R136 K32 ; R136 := R136["mCosmeticsList"]
	1252	[11590]	GETTABLE 	R136 R136 K135 ; R136 := R136["mCurrLevel"]
	1253	[11590]	EQ       	0 R135 R136 ; if R135 ~= R136 then PC := 1277
	1254	[11590]	JMP      	1277 ; PC := 1277
	1255	[11594]	GETTABLE 	R135 R134 K149 ; R135 := R134["Slot"]
	1256	[11594]	EQ       	1 R135 K150 ; if R135 == 17.000000 then PC := 1267
	1257	[11594]	JMP      	1267 ; PC := 1267
	1258	[11595]	GETTABLE 	R135 R134 K149 ; R135 := R134["Slot"]
	1259	[11595]	EQ       	1 R135 K151 ; if R135 == 18.000000 then PC := 1267
	1260	[11595]	JMP      	1267 ; PC := 1267
	1261	[11596]	GETTABLE 	R135 R134 K149 ; R135 := R134["Slot"]
	1262	[11596]	EQ       	1 R135 K152 ; if R135 == 19.000000 then PC := 1267
	1263	[11596]	JMP      	1267 ; PC := 1267
	1264	[11597]	GETTABLE 	R135 R134 K149 ; R135 := R134["Slot"]
	1265	[11597]	EQ       	0 R135 K153 ; if R135 ~= 20.000000 then PC := 1271
	1266	[11597]	JMP      	1271 ; PC := 1271
	1267	[11598]	OP_LOADBOOL	R129 1 0 ; R129 := true
	1268	[11599]	GETTABLE 	R135 R134 K149 ; R135 := R134["Slot"]
	1269	[11599]	SETTABLE 	R128 R135 R133 ; R128[R135] := R133
	1270	[11599]	JMP      	1277 ; PC := 1277
	1271	[11601]	GETGLOBAL	R135 K31 ; R135 := mLists
	1272	[11601]	GETTABLE 	R135 R135 K32 ; R135 := R135["mCosmeticsList"]
	1273	[11601]	SELF     	R135 R135 K140 ; R136 := R135; R135 := R135[0xbad4316f]
	1274	[11601]	MOVE     	R137 R134 ; R137 := R134
	1275	[11601]	OP_LOADBOOL	R138 1 0 ; R138 := true
	1276	[11601]	CALL     	R135 4 1 ; R135(R136,R137,R138)
	1277	[11587]	FORLOOP  	R130 1248 ; R130 += R132; if R130 <= R131 then begin PC := 1248; R133 := R130 end
	1278	[11606]	GETGLOBAL	R135 K31 ; R135 := mLists
	1279	[11606]	GETTABLE 	R135 R135 K32 ; R135 := R135["mCosmeticsList"]
	1280	[11606]	SELF     	R135 R135 K154 ; R136 := R135; R135 := R135[0xd4878f80]
	1281	[11606]	MOVE     	R137 R12 ; R137 := R12
	1282	[11606]	CALL     	R135 3 1 ; R135(R136,R137)
	1283	[11608]	OP_LOADBOOL	R135 0 0 ; R135 := false
	1284	[11609]	GETGLOBAL	R136 K31 ; R136 := mLists
	1285	[11609]	GETTABLE 	R136 R136 K32 ; R136 := R136["mCosmeticsList"]
	1286	[11609]	GETTABLE 	R136 R136 K135 ; R136 := R136["mCurrLevel"]
	1287	[11609]	GETGLOBAL	R137 K31 ; R137 := mLists
	1288	[11609]	GETTABLE 	R137 R137 K32 ; R137 := R137["mCosmeticsList"]
	1289	[11609]	GETTABLE 	R137 R137 K33 ; R137 := R137["DEFAULT"]
	1290	[11609]	EQ       	0 R136 R137 ; if R136 ~= R137 then PC := 1338
	1291	[11609]	JMP      	1338 ; PC := 1338
	1292	[11609]	GETGLOBAL	R136 K6 ; R136 := 0x7b998233
	1293	[11609]	GETGLOBAL	R137 K7 ; R137 := mSelected
	1294	[11609]	GETTABLE 	R137 R137 K8 ; R137 := R137["Element"]
	1295	[11609]	GETTABLE 	R137 R137 K47 ; R137 := R137["Type"]
	1296	[11609]	CALL     	R136 2 2 ; R136 := R136(R137)
	1297	[11609]	TEST     	R136 1 ; if R136 then PC := 1338
	1298	[11609]	JMP      	1338 ; PC := 1338
	1299	[11609]	GETGLOBAL	R136 K7 ; R136 := mSelected
	1300	[11609]	GETTABLE 	R136 R136 K8 ; R136 := R136["Element"]
	1301	[11609]	GETTABLE 	R136 R136 K47 ; R136 := R136["Type"]
	1302	[11609]	SELF     	R136 R136 K17 ; R137 := R136; R136 := R136[0xf2deaf69]
	1303	[11609]	GETGLOBAL	R138 K155 ; R138 := gPowerSuitType
	1304	[11609]	CALL     	R136 3 2 ; R136 := R136(R137,R138)
	1305	[11609]	TEST     	R136 0 ; if not R136 then PC := 1338
	1306	[11609]	JMP      	1338 ; PC := 1338
	1307	[11610]	GETGLOBAL	R136 K68 ; R136 := 0xb009bbc6
	1308	[11610]	GETGLOBAL	R137 K7 ; R137 := mSelected
	1309	[11610]	GETTABLE 	R137 R137 K8 ; R137 := R137["Element"]
	1310	[11610]	GETTABLE 	R137 R137 K47 ; R137 := R137["Type"]
	1311	[11610]	CALL     	R136 2 2 ; R136 := R136(R137)
	1312	[11611]	SELF     	R137 R136 K156 ; R138 := R136; R137 := R136[0x6df09e59]
	1313	[11611]	CALL     	R137 2 2 ; R137 := R137(R138)
	1314	[11611]	TEST     	R137 1 ; if R137 then PC := 1320
	1315	[11611]	JMP      	1320 ; PC := 1320
	1316	[11611]	SELF     	R137 R136 K157 ; R138 := R136; R137 := R136[0xa55b216f]
	1317	[11611]	CALL     	R137 2 2 ; R137 := R137(R138)
	1318	[11611]	TEST     	R137 0 ; if not R137 then PC := 1338
	1319	[11611]	JMP      	1338 ; PC := 1338
	1320	[11612]	GETGLOBAL	R137 K68 ; R137 := 0xb009bbc6
	1321	[11612]	GETGLOBAL	R138 K7 ; R138 := mSelected
	1322	[11612]	GETTABLE 	R138 R138 K8 ; R138 := R138["Element"]
	1323	[11612]	GETTABLE 	R138 R138 K53 ; R138 := R138["Customization"]
	1324	[11612]	SELF     	R138 R138 K66 ; R139 := R138; R138 := R138[0x2540510f]
	1325	[11612]	LOADK    	R140 := 7.000000
	1326	[11612]	CALL     	R138 3 0 ; R138,... := R138(R139,R140)
	1327	[11612]	CALL     	R137 0 2 ; R137 := R137(R138,...)
	1328	[11613]	GETGLOBAL	R138 K6 ; R138 := 0x7b998233
	1329	[11613]	MOVE     	R139 R137 ; R139 := R137
	1330	[11613]	CALL     	R138 2 2 ; R138 := R138(R139)
	1331	[11613]	TEST     	R138 1 ; if R138 then PC := 1338
	1332	[11613]	JMP      	1338 ; PC := 1338
	1333	[11613]	SELF     	R138 R137 K158 ; R139 := R137; R138 := R137[0x90b30b03]
	1334	[11613]	CALL     	R138 2 2 ; R138 := R138(R139)
	1335	[11613]	TEST     	R138 0 ; if not R138 then PC := 1338
	1336	[11613]	JMP      	1338 ; PC := 1338
	1337	[11614]	OP_LOADBOOL	R135 1 0 ; R135 := true
	1338	[11619]	GETGLOBAL	R138 K31 ; R138 := mLists
	1339	[11619]	GETTABLE 	R138 R138 K32 ; R138 := R138["mCosmeticsList"]
	1340	[11619]	GETTABLE 	R138 R138 K159 ; R138 := R138["mElements"]
	1341	[11619]	GETGLOBAL	R139 K31 ; R139 := mLists
	1342	[11619]	GETTABLE 	R139 R139 K32 ; R139 := R139["mCosmeticsList"]
	1343	[11619]	SELF     	R139 R139 K160 ; R140 := R139; R139 := R139[0x5fbddc1a]
	1344	[11619]	CALL     	R139 2 2 ; R139 := R139(R140)
	1345	[11619]	GETTABLE 	R138 R138 R139 ; R138 := R138[R139]
	1346	[11620]	GETGLOBAL	R139 K6 ; R139 := 0x7b998233
	1347	[11620]	MOVE     	R140 R138 ; R140 := R138
	1348	[11620]	CALL     	R139 2 2 ; R139 := R139(R140)
	1349	[11620]	TEST     	R139 1 ; if R139 then PC := 1354
	1350	[11620]	JMP      	1354 ; PC := 1354
	1351	[11620]	TEST     	R135 1 ; if R135 then PC := 1354
	1352	[11620]	JMP      	1354 ; PC := 1354
	1353	[11621]	SETTABLE 	R138 K145 K113 ; R138["HasBottomLine"] := true
	1354	[11624]	EQ       	0 R3 K20 ; if R3 ~= 1.000000 then PC := 1363
	1355	[11624]	JMP      	1363 ; PC := 1363
	1356	[11624]	EQ       	0 R4 K24 ; if R4 ~= 0.000000 then PC := 1363
	1357	[11624]	JMP      	1363 ; PC := 1363
	1358	[11624]	GETGLOBAL	R139 K19 ; R139 := 0x25d99d89
	1359	[11624]	SELF     	R139 R139 K26 ; R140 := R139; R139 := R139[0x3c6b0324]
	1360	[11624]	CALL     	R139 2 2 ; R139 := R139(R140)
	1361	[11624]	TEST     	R139 1 ; if R139 then PC := 1364
	1362	[11624]	JMP      	1364 ; PC := 1364
	1363	[11624]	MOVE     	R139 R5 ; R139 := R5
	1364	[11625]	OP_LOADBOOL	R140 1 0 ; R140 := true
	1365	[11626]	OP_LOADBOOL	R141 0 0 ; R141 := false
	1366	[11627]	GETGLOBAL	R142 K6 ; R142 := 0x7b998233
	1367	[11627]	GETGLOBAL	R143 K19 ; R143 := 0x25d99d89
	1368	[11627]	CALL     	R142 2 2 ; R142 := R142(R143)
	1369	[11627]	TEST     	R142 1 ; if R142 then PC := 2409
	1370	[11627]	JMP      	2409 ; PC := 2409
	1371	[11627]	TEST     	R139 0 ; if not R139 then PC := 1381
	1372	[11627]	JMP      	1381 ; PC := 1381
	1373	[11627]	GETGLOBAL	R142 K31 ; R142 := mLists
	1374	[11627]	GETTABLE 	R142 R142 K32 ; R142 := R142["mCosmeticsList"]
	1375	[11627]	GETTABLE 	R142 R142 K135 ; R142 := R142["mCurrLevel"]
	1376	[11627]	GETGLOBAL	R143 K31 ; R143 := mLists
	1377	[11627]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1378	[11627]	GETTABLE 	R143 R143 K76 ; R143 := R143["ATTACHMENTS"]
	1379	[11627]	EQ       	0 R142 R143 ; if R142 ~= R143 then PC := 2409
	1380	[11627]	JMP      	2409 ; PC := 2409
	1381	[11628]	GETGLOBAL	R142 K31 ; R142 := mLists
	1382	[11628]	GETTABLE 	R142 R142 K32 ; R142 := R142["mCosmeticsList"]
	1383	[11628]	GETTABLE 	R142 R142 K135 ; R142 := R142["mCurrLevel"]
	1384	[11628]	GETGLOBAL	R143 K31 ; R143 := mLists
	1385	[11628]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1386	[11628]	GETTABLE 	R143 R143 K33 ; R143 := R143["DEFAULT"]
	1387	[11628]	EQ       	1 R142 R143 ; if R142 == R143 then PC := 1405
	1388	[11628]	JMP      	1405 ; PC := 1405
	1389	[11628]	GETGLOBAL	R142 K31 ; R142 := mLists
	1390	[11628]	GETTABLE 	R142 R142 K32 ; R142 := R142["mCosmeticsList"]
	1391	[11628]	GETTABLE 	R142 R142 K135 ; R142 := R142["mCurrLevel"]
	1392	[11628]	GETGLOBAL	R143 K31 ; R143 := mLists
	1393	[11628]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1394	[11628]	GETTABLE 	R143 R143 K76 ; R143 := R143["ATTACHMENTS"]
	1395	[11628]	EQ       	1 R142 R143 ; if R142 == R143 then PC := 1405
	1396	[11628]	JMP      	1405 ; PC := 1405
	1397	[11628]	GETGLOBAL	R142 K31 ; R142 := mLists
	1398	[11628]	GETTABLE 	R142 R142 K32 ; R142 := R142["mCosmeticsList"]
	1399	[11628]	GETTABLE 	R142 R142 K135 ; R142 := R142["mCurrLevel"]
	1400	[11628]	GETGLOBAL	R143 K31 ; R143 := mLists
	1401	[11628]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1402	[11628]	GETTABLE 	R143 R143 K161 ; R143 := R143["SYANDANAS"]
	1403	[11628]	EQ       	0 R142 R143 ; if R142 ~= R143 then PC := 1637
	1404	[11628]	JMP      	1637 ; PC := 1637
	1405	[11630]	GETGLOBAL	R142 K31 ; R142 := mLists
	1406	[11630]	GETTABLE 	R142 R142 K32 ; R142 := R142["mCosmeticsList"]
	1407	[11630]	GETTABLE 	R142 R142 K135 ; R142 := R142["mCurrLevel"]
	1408	[11630]	GETGLOBAL	R143 K31 ; R143 := mLists
	1409	[11630]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1410	[11630]	GETTABLE 	R143 R143 K33 ; R143 := R143["DEFAULT"]
	1411	[11630]	EQ       	0 R142 R143 ; if R142 ~= R143 then PC := 1450
	1412	[11630]	JMP      	1450 ; PC := 1450
	1413	[11630]	TEST     	R135 0 ; if not R135 then PC := 1450
	1414	[11630]	JMP      	1450 ; PC := 1450
	1415	[11631]	GETGLOBAL	R142 K68 ; R142 := 0xb009bbc6
	1416	[11631]	GETGLOBAL	R143 K7 ; R143 := mSelected
	1417	[11631]	GETTABLE 	R143 R143 K8 ; R143 := R143["Element"]
	1418	[11631]	GETTABLE 	R143 R143 K53 ; R143 := R143["Customization"]
	1419	[11631]	SELF     	R143 R143 K66 ; R144 := R143; R143 := R143[0x2540510f]
	1420	[11631]	LOADK    	R145 := 7.000000
	1421	[11631]	CALL     	R143 3 0 ; R143,... := R143(R144,R145)
	1422	[11631]	CALL     	R142 0 2 ; R142 := R142(R143,...)
	1423	[11632]	GETGLOBAL	R143 K6 ; R143 := 0x7b998233
	1424	[11632]	MOVE     	R144 R142 ; R144 := R142
	1425	[11632]	CALL     	R143 2 2 ; R143 := R143(R144)
	1426	[11632]	TEST     	R143 1 ; if R143 then PC := 1450
	1427	[11632]	JMP      	1450 ; PC := 1450
	1428	[11632]	SELF     	R143 R142 K158 ; R144 := R142; R143 := R142[0x90b30b03]
	1429	[11632]	CALL     	R143 2 2 ; R143 := R143(R144)
	1430	[11632]	TEST     	R143 0 ; if not R143 then PC := 1450
	1431	[11632]	JMP      	1450 ; PC := 1450
	1432	[11633]	GETGLOBAL	R143 K31 ; R143 := mLists
	1433	[11633]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1434	[11633]	SELF     	R143 R143 K140 ; R144 := R143; R143 := R143[0xbad4316f]
	1435	[11633]	NEWTABLE 	R145 0 4 ; R145 := {}
	1436	[11633]	SETTABLE 	R145 K28 K162 ; R145["Title"] := "/Lotus/Language/Menu/Arsenal_UglyMode"
	1437	[11633]	GETTABLE 	R146 R11 K163 ; R146 := R11["mAllowUglyMode"]
	1438	[11633]	SETTABLE 	R145 K142 R146 ; R145["ToggleVal"] := R146
	1439	[11644]	CLOSURE  	R146 3 ; R146 := closure(Function #4)
	1440	[11644]	GETUPVAL 	R0 U7 ; R0 := U7
	1441	[11644]	MOVE     	R0 R3 ; R0 := R3
	1442	[11644]	MOVE     	R0 R4 ; R0 := R4
	1443	[11644]	GETUPVAL 	R0 U8 ; R0 := U8
	1444	[11644]	GETUPVAL 	R0 U9 ; R0 := U9
	1445	[11644]	SETTABLE 	R145 K144 R146 ; R145["ToggleFunction"] := R146
	1446	[11645]	SETTABLE 	R145 K145 K113 ; R145["HasBottomLine"] := true
	1447	[11645]	OP_LOADBOOL	R146 1 0 ; R146 := true
	1448	[11633]	CALL     	R143 4 1 ; R143(R144,R145,R146)
	1449	[11646]	OP_LOADBOOL	R141 1 0 ; R141 := true
	1450	[11650]	TEST     	R20 1 ; if R20 then PC := 2265
	1451	[11650]	JMP      	2265 ; PC := 2265
	1452	[11651]	OP_LOADBOOL	R143 1 0 ; R143 := true
	1453	[11651]	OP_LOADBOOL	R144 1 0 ; R144 := true
	1454	[11651]	OP_LOADBOOL	R145 1 0 ; R145 := true
	1455	[11651]	OP_LOADBOOL	R146 1 0 ; R146 := true
	1456	[11651]	OP_LOADBOOL	R147 1 0 ; R147 := true
	1457	[11651]	OP_LOADBOOL	R148 1 0 ; R148 := true
	1458	[11651]	OP_LOADBOOL	R149 1 0 ; R149 := true
	1459	[11651]	OP_LOADBOOL	R150 0 0 ; R150 := false
	1460	[11652]	GETGLOBAL	R151 K11 ; R151 := 0x6c97a788
	1461	[11652]	GETTABLE 	R151 R151 K164 ; R151 := R151["NUM_NORMAL_LOADOUT_SLOTS"]
	1462	[11652]	LE       	0 R151 R4 ; if R151 > R4 then PC := 1488
	1463	[11652]	JMP      	1488 ; PC := 1488
	1464	[11653]	GETUPVAL 	R151 U10 ; R151 := U10
	1465	[11653]	GETGLOBAL	R152 K7 ; R152 := mSelected
	1466	[11653]	GETTABLE 	R152 R152 K8 ; R152 := R152["Element"]
	1467	[11653]	CALL     	R151 2 2 ; R151 := R151(R152)
	1468	[11654]	GETTABLE 	R143 R151 K24 ; R143 := R151[0.000000]
	1469	[11655]	GETTABLE 	R144 R151 K20 ; R144 := R151[1.000000]
	1470	[11656]	GETTABLE 	R145 R151 K44 ; R145 := R151[2.000000]
	1471	[11657]	GETTABLE 	R146 R151 K56 ; R146 := R151[3.000000]
	1472	[11658]	GETTABLE 	R147 R151 K65 ; R147 := R151[4.000000]
	1473	[11659]	GETTABLE 	R148 R151 K12 ; R148 := R151[5.000000]
	1474	[11660]	OP_LOADBOOL	R149 0 0 ; R149 := false
	1475	[11661]	OP_LOADBOOL	R150 0 0 ; R150 := false
	1476	[11663]	TESTSET  	R140 R143 1 ; if R143 then PC := 1487 else R140 := R143 
	1477	[11663]	JMP      	1487 ; PC := 1487
	1478	[11663]	TESTSET  	R140 R144 1 ; if R144 then PC := 1487 else R140 := R144 
	1479	[11663]	JMP      	1487 ; PC := 1487
	1480	[11663]	TESTSET  	R140 R145 1 ; if R145 then PC := 1487 else R140 := R145 
	1481	[11663]	JMP      	1487 ; PC := 1487
	1482	[11663]	TESTSET  	R140 R146 1 ; if R146 then PC := 1487 else R140 := R146 
	1483	[11663]	JMP      	1487 ; PC := 1487
	1484	[11663]	TESTSET  	R140 R147 1 ; if R147 then PC := 1487 else R140 := R147 
	1485	[11663]	JMP      	1487 ; PC := 1487
	1486	[11663]	MOVE     	R140 R148 ; R140 := R148
	1487	[11663]	JMP      	1495 ; PC := 1495
	1488	[11664]	GETUPVAL 	R152 U11 ; R152 := U11
	1489	[11664]	GETGLOBAL	R153 K7 ; R153 := mSelected
	1490	[11664]	GETTABLE 	R153 R153 K8 ; R153 := R153["Element"]
	1491	[11664]	CALL     	R152 2 2 ; R152 := R152(R153)
	1492	[11664]	TEST     	R152 0 ; if not R152 then PC := 1495
	1493	[11664]	JMP      	1495 ; PC := 1495
	1494	[11665]	OP_LOADBOOL	R150 1 0 ; R150 := true
	1495	[11668]	NEWTABLE 	R152 7 0 ; R152 := {}
	1496	[11668]	LOADK    	R153 := 0.000000
	1497	[11668]	LOADK    	R154 := 1.000000
	1498	[11668]	LOADK    	R155 := 2.000000
	1499	[11668]	LOADK    	R156 := 7.000000
	1500	[11668]	LOADK    	R157 := 8.000000
	1501	[11668]	LOADK    	R158 := 9.000000
	1502	[11668]	LOADK    	R159 := 10.000000
	1503	[11668]	SETLIST  	R152 7 1 ; R152[(1-1)*FPF+i] := R(152+i), 1 <= i <= 7
	1504	[11669]	OP_LOADBOOL	R153 0 0 ; R153 := false
	1505	[11670]	GETGLOBAL	R154 K83 ; R154 := 0xc8802016
	1506	[11670]	MOVE     	R155 R152 ; R155 := R152
	1507	[11670]	CALL     	R154 2 4 ; R154,R155,R156 := R154(R155)
	1508	[11670]	JMP      	1528 ; PC := 1528
	1509	[11672]	GETGLOBAL	R159 K68 ; R159 := 0xb009bbc6
	1510	[11672]	GETGLOBAL	R160 K7 ; R160 := mSelected
	1511	[11672]	GETTABLE 	R160 R160 K8 ; R160 := R160["Element"]
	1512	[11672]	GETTABLE 	R160 R160 K53 ; R160 := R160["Customization"]
	1513	[11672]	SELF     	R160 R160 K66 ; R161 := R160; R160 := R160[0x2540510f]
	1514	[11672]	MOVE     	R162 R158 ; R162 := R158
	1515	[11672]	CALL     	R160 3 0 ; R160,... := R160(R161,R162)
	1516	[11672]	CALL     	R159 0 2 ; R159 := R159(R160,...)
	1517	[11673]	GETGLOBAL	R160 K6 ; R160 := 0x7b998233
	1518	[11673]	MOVE     	R161 R159 ; R161 := R159
	1519	[11673]	CALL     	R160 2 2 ; R160 := R160(R161)
	1520	[11673]	TEST     	R160 1 ; if R160 then PC := 1528
	1521	[11673]	JMP      	1528 ; PC := 1528
	1522	[11673]	SELF     	R160 R159 K165 ; R161 := R159; R160 := R159[0x03186ac2]
	1523	[11673]	CALL     	R160 2 2 ; R160 := R160(R161)
	1524	[11673]	TEST     	R160 0 ; if not R160 then PC := 1528
	1525	[11673]	JMP      	1528 ; PC := 1528
	1526	[11674]	OP_LOADBOOL	R153 1 0 ; R153 := true
	1527	[11675]	JMP      	1530 ; PC := 1530
	1528	[11670]	TFORLOOP 	R154 2 ; R157,R158 := R154(R155,R156); if R157 ~= nil then begin PC = 1509; R156 := R157 end
	1529	[11676]	JMP      	1509 ; PC := 1509
	1530	[11687]	CLOSURE  	R160 4 ; R160 := closure(Function #5)
	1531	[11687]	MOVE     	R0 R153 ; R0 := R153
	1532	[11687]	MOVE     	R0 R128 ; R0 := R128
	1533	[11687]	MOVE     	R0 R119 ; R0 := R119
	1534	[11689]	LOADK    	R161 K166 ; R161 := "/Lotus/Language/Menu/Loadout_CustomizeColor"
	1535	[11690]	TEST     	R129 0 ; if not R129 then PC := 1538
	1536	[11690]	JMP      	1538 ; PC := 1538
	1537	[11691]	LOADK    	R161 K167 ; R161 := "/Lotus/Language/Loadout/ColorAndMaterialTitle"
	1538	[11693]	TEST     	R143 0 ; if not R143 then PC := 1550
	1539	[11693]	JMP      	1550 ; PC := 1550
	1540	[11694]	GETGLOBAL	R162 K31 ; R162 := mLists
	1541	[11694]	GETTABLE 	R162 R162 K32 ; R162 := R162["mCosmeticsList"]
	1542	[11694]	SELF     	R162 R162 K140 ; R163 := R162; R162 := R162[0xbad4316f]
	1543	[11694]	NEWTABLE 	R164 0 3 ; R164 := {}
	1544	[11694]	SETTABLE 	R164 K39 K24 ; R164["Attribute"] := 0.000000
	1545	[11694]	SETTABLE 	R164 K28 K168 ; R164["Title"] := "/Lotus/Language/Menu/Arsenal_Primary"
	1546	[11694]	SETTABLE 	R164 K36 R161 ; R164["TopTitle"] := R161
	1547	[11694]	OP_LOADBOOL	R165 1 0 ; R165 := true
	1548	[11694]	CALL     	R162 4 1 ; R162(R163,R164,R165)
	1549	[11695]	LOADNIL  	R161 R161 ; R161 := nil
	1550	[11697]	MOVE     	R162 R160 ; R162 := R160
	1551	[11697]	LOADK    	R163 := 17.000000
	1552	[11697]	CALL     	R162 2 1 ; R162(R163)
	1553	[11699]	TEST     	R144 0 ; if not R144 then PC := 1565
	1554	[11699]	JMP      	1565 ; PC := 1565
	1555	[11700]	GETGLOBAL	R162 K31 ; R162 := mLists
	1556	[11700]	GETTABLE 	R162 R162 K32 ; R162 := R162["mCosmeticsList"]
	1557	[11700]	SELF     	R162 R162 K140 ; R163 := R162; R162 := R162[0xbad4316f]
	1558	[11700]	NEWTABLE 	R164 0 3 ; R164 := {}
	1559	[11700]	SETTABLE 	R164 K39 K20 ; R164["Attribute"] := 1.000000
	1560	[11700]	SETTABLE 	R164 K28 K169 ; R164["Title"] := "/Lotus/Language/Menu/Arsenal_Secondary"
	1561	[11700]	SETTABLE 	R164 K36 R161 ; R164["TopTitle"] := R161
	1562	[11700]	OP_LOADBOOL	R165 1 0 ; R165 := true
	1563	[11700]	CALL     	R162 4 1 ; R162(R163,R164,R165)
	1564	[11701]	LOADNIL  	R161 R161 ; R161 := nil
	1565	[11703]	MOVE     	R162 R160 ; R162 := R160
	1566	[11703]	LOADK    	R163 := 18.000000
	1567	[11703]	CALL     	R162 2 1 ; R162(R163)
	1568	[11705]	TEST     	R145 0 ; if not R145 then PC := 1580
	1569	[11705]	JMP      	1580 ; PC := 1580
	1570	[11706]	GETGLOBAL	R162 K31 ; R162 := mLists
	1571	[11706]	GETTABLE 	R162 R162 K32 ; R162 := R162["mCosmeticsList"]
	1572	[11706]	SELF     	R162 R162 K140 ; R163 := R162; R162 := R162[0xbad4316f]
	1573	[11706]	NEWTABLE 	R164 0 3 ; R164 := {}
	1574	[11706]	SETTABLE 	R164 K39 K44 ; R164["Attribute"] := 2.000000
	1575	[11706]	SETTABLE 	R164 K28 K170 ; R164["Title"] := "/Lotus/Language/Menu/Arsenal_TintColor3"
	1576	[11706]	SETTABLE 	R164 K36 R161 ; R164["TopTitle"] := R161
	1577	[11706]	OP_LOADBOOL	R165 1 0 ; R165 := true
	1578	[11706]	CALL     	R162 4 1 ; R162(R163,R164,R165)
	1579	[11707]	LOADNIL  	R161 R161 ; R161 := nil
	1580	[11709]	MOVE     	R162 R160 ; R162 := R160
	1581	[11709]	LOADK    	R163 := 19.000000
	1582	[11709]	CALL     	R162 2 1 ; R162(R163)
	1583	[11711]	TEST     	R146 0 ; if not R146 then PC := 1595
	1584	[11711]	JMP      	1595 ; PC := 1595
	1585	[11712]	GETGLOBAL	R162 K31 ; R162 := mLists
	1586	[11712]	GETTABLE 	R162 R162 K32 ; R162 := R162["mCosmeticsList"]
	1587	[11712]	SELF     	R162 R162 K140 ; R163 := R162; R162 := R162[0xbad4316f]
	1588	[11712]	NEWTABLE 	R164 0 3 ; R164 := {}
	1589	[11712]	SETTABLE 	R164 K39 K56 ; R164["Attribute"] := 3.000000
	1590	[11712]	SETTABLE 	R164 K28 K171 ; R164["Title"] := "/Lotus/Language/Menu/Arsenal_TintColor4"
	1591	[11712]	SETTABLE 	R164 K36 R161 ; R164["TopTitle"] := R161
	1592	[11712]	OP_LOADBOOL	R165 1 0 ; R165 := true
	1593	[11712]	CALL     	R162 4 1 ; R162(R163,R164,R165)
	1594	[11713]	LOADNIL  	R161 R161 ; R161 := nil
	1595	[11715]	MOVE     	R162 R160 ; R162 := R160
	1596	[11715]	LOADK    	R163 := 20.000000
	1597	[11715]	CALL     	R162 2 1 ; R162(R163)
	1598	[11717]	TEST     	R147 0 ; if not R147 then PC := 1617
	1599	[11717]	JMP      	1617 ; PC := 1617
	1600	[11718]	GETGLOBAL	R162 K31 ; R162 := mLists
	1601	[11718]	GETTABLE 	R162 R162 K32 ; R162 := R162["mCosmeticsList"]
	1602	[11718]	SELF     	R162 R162 K140 ; R163 := R162; R162 := R162[0xbad4316f]
	1603	[11718]	NEWTABLE 	R164 0 4 ; R164 := {}
	1604	[11718]	SETTABLE 	R164 K39 K65 ; R164["Attribute"] := 4.000000
	1605	[11718]	GETUPVAL 	R165 U1 ; R165 := U1
	1606	[11718]	GETTABLE 	R165 R165 K51 ; R165 := R165[0x06d055f9]
	1607	[11718]	MOVE     	R166 R148 ; R166 := R148
	1608	[11718]	LOADK    	R167 := 5.000000
	1609	[11718]	LOADNIL  	R168 R168 ; R168 := nil
	1610	[11718]	CALL     	R165 4 2 ; R165 := R165(R166,R167,R168)
	1611	[11718]	SETTABLE 	R164 K172 R165 ; R164["Attribute2"] := R165
	1612	[11718]	SETTABLE 	R164 K28 K64 ; R164["Title"] := "/Lotus/Language/Menu/Arsenal_Emissive"
	1613	[11718]	SETTABLE 	R164 K36 R161 ; R164["TopTitle"] := R161
	1614	[11718]	OP_LOADBOOL	R165 1 0 ; R165 := true
	1615	[11718]	CALL     	R162 4 1 ; R162(R163,R164,R165)
	1616	[11719]	LOADNIL  	R161 R161 ; R161 := nil
	1617	[11721]	TEST     	R149 0 ; if not R149 then PC := 1635
	1618	[11721]	JMP      	1635 ; PC := 1635
	1619	[11722]	GETGLOBAL	R162 K31 ; R162 := mLists
	1620	[11722]	GETTABLE 	R162 R162 K32 ; R162 := R162["mCosmeticsList"]
	1621	[11722]	SELF     	R162 R162 K140 ; R163 := R162; R162 := R162[0xbad4316f]
	1622	[11722]	NEWTABLE 	R164 0 4 ; R164 := {}
	1623	[11722]	SETTABLE 	R164 K39 K84 ; R164["Attribute"] := 6.000000
	1624	[11722]	GETUPVAL 	R165 U1 ; R165 := U1
	1625	[11722]	GETTABLE 	R165 R165 K51 ; R165 := R165[0x06d055f9]
	1626	[11722]	MOVE     	R166 R150 ; R166 := R150
	1627	[11722]	LOADK    	R167 := 7.000000
	1628	[11722]	LOADNIL  	R168 R168 ; R168 := nil
	1629	[11722]	CALL     	R165 4 2 ; R165 := R165(R166,R167,R168)
	1630	[11722]	SETTABLE 	R164 K172 R165 ; R164["Attribute2"] := R165
	1631	[11722]	SETTABLE 	R164 K28 K173 ; R164["Title"] := "/Lotus/Language/Menu/Arsenal_PrimaryEnergy"
	1632	[11722]	SETTABLE 	R164 K36 R161 ; R164["TopTitle"] := R161
	1633	[11722]	OP_LOADBOOL	R165 1 0 ; R165 := true
	1634	[11722]	CALL     	R162 4 1 ; R162(R163,R164,R165)
	1635	[11723]	CLOSE    	R143 ; SAVE R143,...
	1636	[11724]	JMP      	2265 ; PC := 2265
	1637	[11726]	GETGLOBAL	R143 K31 ; R143 := mLists
	1638	[11726]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1639	[11726]	GETTABLE 	R143 R143 K135 ; R143 := R143["mCurrLevel"]
	1640	[11726]	GETGLOBAL	R144 K31 ; R144 := mLists
	1641	[11726]	GETTABLE 	R144 R144 K32 ; R144 := R144["mCosmeticsList"]
	1642	[11726]	GETTABLE 	R144 R144 K174 ; R144 := R144["FRONTSIGIL"]
	1643	[11726]	EQ       	1 R143 R144 ; if R143 == R144 then PC := 1653
	1644	[11726]	JMP      	1653 ; PC := 1653
	1645	[11726]	GETGLOBAL	R143 K31 ; R143 := mLists
	1646	[11726]	GETTABLE 	R143 R143 K32 ; R143 := R143["mCosmeticsList"]
	1647	[11726]	GETTABLE 	R143 R143 K135 ; R143 := R143["mCurrLevel"]
	1648	[11726]	GETGLOBAL	R144 K31 ; R144 := mLists
	1649	[11726]	GETTABLE 	R144 R144 K32 ; R144 := R144["mCosmeticsList"]
	1650	[11726]	GETTABLE 	R144 R144 K175 ; R144 := R144["BACKSIGIL"]
	1651	[11726]	EQ       	0 R143 R144 ; if R143 ~= R144 then PC := 1914
	1652	[11726]	JMP      	1914 ; PC := 1914
	1653	[11727]	GETGLOBAL	R143 K7 ; R143 := mSelected
	1654	[11727]	GETTABLE 	R143 R143 K8 ; R143 := R143["Element"]
	1655	[11727]	GETTABLE 	R143 R143 K53 ; R143 := R143["Customization"]
	1656	[11728]	SELF     	R144 R143 K176 ; R145 := R143; R144 := R143[0x8e62760a]
	1657	[11728]	LOADK    	R146 := 2.000000
	1658	[11728]	CALL     	R144 3 2 ; R144 := R144(R145,R146)
	1659	[11730]	LOADK    	R145 := 0.000000
	1660	[11731]	LOADK    	R146 := 4.000000
	1661	[11732]	LOADK    	R147 := 6.000000
	1662	[11733]	LOADK    	R148 K177 ; R148 := "blue"
	1663	[11734]	LOADK    	R149 := 1.000000
	1664	[11735]	LOADK    	R150 := 6.000000
	1665	[11736]	LOADK    	R151 K178 ; R151 := "red"
	1666	[11738]	GETGLOBAL	R152 K31 ; R152 := mLists
	1667	[11738]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1668	[11738]	GETTABLE 	R152 R152 K135 ; R152 := R152["mCurrLevel"]
	1669	[11738]	GETGLOBAL	R153 K31 ; R153 := mLists
	1670	[11738]	GETTABLE 	R153 R153 K32 ; R153 := R153["mCosmeticsList"]
	1671	[11738]	GETTABLE 	R153 R153 K175 ; R153 := R153["BACKSIGIL"]
	1672	[11738]	EQ       	0 R152 R153 ; if R152 ~= R153 then PC := 1679
	1673	[11738]	JMP      	1679 ; PC := 1679
	1674	[11739]	LOADK    	R145 := 2.000000
	1675	[11740]	LOADK    	R146 := 5.000000
	1676	[11741]	LOADK    	R148 K179 ; R148 := "alpha"
	1677	[11742]	LOADK    	R149 := 3.000000
	1678	[11743]	LOADK    	R151 K180 ; R151 := "green"
	1679	[11746]	EQ       	0 R3 K84 ; if R3 ~= 6.000000 then PC := 1772
	1680	[11746]	JMP      	1772 ; PC := 1772
	1681	[11747]	GETGLOBAL	R152 K31 ; R152 := mLists
	1682	[11747]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1683	[11747]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1684	[11747]	NEWTABLE 	R154 0 8 ; R154 := {}
	1685	[11747]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1686	[11747]	SETTABLE 	R154 K28 K181 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XScale"
	1687	[11747]	SETTABLE 	R154 K182 K113 ; R154["ScaleX"] := true
	1688	[11747]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1689	[11747]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1690	[11747]	MOVE     	R157 R149 ; R157 := R149
	1691	[11747]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1692	[11747]	GETTABLE 	R155 R155 K177 ; R155 := R155["blue"]
	1693	[11747]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1694	[11747]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1695	[11747]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1696	[11747]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1697	[11747]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1698	[11747]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1699	[11747]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1700	[11748]	GETGLOBAL	R152 K31 ; R152 := mLists
	1701	[11748]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1702	[11748]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1703	[11748]	NEWTABLE 	R154 0 8 ; R154 := {}
	1704	[11748]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1705	[11748]	SETTABLE 	R154 K28 K189 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YScale"
	1706	[11748]	SETTABLE 	R154 K190 K113 ; R154["ScaleY"] := true
	1707	[11748]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1708	[11748]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1709	[11748]	MOVE     	R157 R149 ; R157 := R149
	1710	[11748]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1711	[11748]	GETTABLE 	R155 R155 K179 ; R155 := R155["alpha"]
	1712	[11748]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1713	[11748]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1714	[11748]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1715	[11748]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1716	[11748]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1717	[11748]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1718	[11748]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1719	[11749]	GETGLOBAL	R152 K31 ; R152 := mLists
	1720	[11749]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1721	[11749]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1722	[11749]	NEWTABLE 	R154 0 8 ; R154 := {}
	1723	[11749]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1724	[11749]	SETTABLE 	R154 K28 K191 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XOffset"
	1725	[11749]	SETTABLE 	R154 K192 K113 ; R154["PositionX"] := true
	1726	[11749]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1727	[11749]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1728	[11749]	MOVE     	R157 R149 ; R157 := R149
	1729	[11749]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1730	[11749]	GETTABLE 	R155 R155 K178 ; R155 := R155["red"]
	1731	[11749]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1732	[11749]	SUB      	R155 K20 R155 ; R155 := 1.000000 - R155
	1733	[11749]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1734	[11749]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1735	[11749]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1736	[11749]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1737	[11749]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1738	[11749]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1739	[11750]	GETGLOBAL	R152 K31 ; R152 := mLists
	1740	[11750]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1741	[11750]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1742	[11750]	NEWTABLE 	R154 0 8 ; R154 := {}
	1743	[11750]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1744	[11750]	SETTABLE 	R154 K28 K193 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YOffset"
	1745	[11750]	SETTABLE 	R154 K194 K113 ; R154["PositionY"] := true
	1746	[11750]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1747	[11750]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1748	[11750]	MOVE     	R157 R149 ; R157 := R149
	1749	[11750]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1750	[11750]	GETTABLE 	R155 R155 K180 ; R155 := R155["green"]
	1751	[11750]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1752	[11750]	SUB      	R155 K20 R155 ; R155 := 1.000000 - R155
	1753	[11750]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1754	[11750]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1755	[11750]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1756	[11750]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1757	[11750]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1758	[11750]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1759	[11751]	GETGLOBAL	R152 K31 ; R152 := mLists
	1760	[11751]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1761	[11751]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1762	[11751]	NEWTABLE 	R154 0 5 ; R154 := {}
	1763	[11751]	SETTABLE 	R154 K28 K195 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetProperties"
	1764	[11751]	SETTABLE 	R154 K196 K113 ; R154["DefaultSigilProps"] := true
	1765	[11751]	GETUPVAL 	R155 U12 ; R155 := U12
	1766	[11751]	SETTABLE 	R154 K197 R155 ; R154["Callback"] := R155
	1767	[11751]	SETTABLE 	R154 K145 K113 ; R154["HasBottomLine"] := true
	1768	[11751]	SETTABLE 	R154 K198 K113 ; R154["HasMiddleLine"] := true
	1769	[11751]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1770	[11751]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1771	[11751]	JMP      	2265 ; PC := 2265
	1772	[11753]	GETGLOBAL	R152 K31 ; R152 := mLists
	1773	[11753]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1774	[11753]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1775	[11753]	NEWTABLE 	R154 0 9 ; R154 := {}
	1776	[11753]	SETTABLE 	R154 K39 R147 ; R154["Attribute"] := R147
	1777	[11753]	SETTABLE 	R154 K28 K199 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_Rotation"
	1778	[11753]	SETTABLE 	R154 K36 K200 ; R154["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Properties"
	1779	[11753]	SETTABLE 	R154 K201 R148 ; R154["Rotation"] := R148
	1780	[11753]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1781	[11753]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1782	[11753]	MOVE     	R157 R147 ; R157 := R147
	1783	[11753]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1784	[11753]	GETTABLE 	R155 R155 R148 ; R155 := R155[R148]
	1785	[11753]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1786	[11753]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1787	[11753]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1788	[11753]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1789	[11753]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1790	[11753]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1791	[11753]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1792	[11754]	GETGLOBAL	R152 K31 ; R152 := mLists
	1793	[11754]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1794	[11754]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1795	[11754]	NEWTABLE 	R154 0 8 ; R154 := {}
	1796	[11754]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1797	[11754]	SETTABLE 	R154 K28 K181 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XScale"
	1798	[11754]	SETTABLE 	R154 K182 K113 ; R154["ScaleX"] := true
	1799	[11754]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1800	[11754]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1801	[11754]	MOVE     	R157 R149 ; R157 := R149
	1802	[11754]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1803	[11754]	GETTABLE 	R155 R155 K177 ; R155 := R155["blue"]
	1804	[11754]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1805	[11754]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1806	[11754]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1807	[11754]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1808	[11754]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1809	[11754]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1810	[11754]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1811	[11755]	GETGLOBAL	R152 K31 ; R152 := mLists
	1812	[11755]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1813	[11755]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1814	[11755]	NEWTABLE 	R154 0 8 ; R154 := {}
	1815	[11755]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1816	[11755]	SETTABLE 	R154 K28 K189 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YScale"
	1817	[11755]	SETTABLE 	R154 K190 K113 ; R154["ScaleY"] := true
	1818	[11755]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1819	[11755]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1820	[11755]	MOVE     	R157 R149 ; R157 := R149
	1821	[11755]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1822	[11755]	GETTABLE 	R155 R155 K179 ; R155 := R155["alpha"]
	1823	[11755]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1824	[11755]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1825	[11755]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1826	[11755]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1827	[11755]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1828	[11755]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1829	[11755]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1830	[11756]	GETGLOBAL	R152 K31 ; R152 := mLists
	1831	[11756]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1832	[11756]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1833	[11756]	NEWTABLE 	R154 0 8 ; R154 := {}
	1834	[11756]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1835	[11756]	SETTABLE 	R154 K28 K191 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_XOffset"
	1836	[11756]	SETTABLE 	R154 K192 K113 ; R154["PositionX"] := true
	1837	[11756]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1838	[11756]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1839	[11756]	MOVE     	R157 R149 ; R157 := R149
	1840	[11756]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1841	[11756]	GETTABLE 	R155 R155 K178 ; R155 := R155["red"]
	1842	[11756]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1843	[11756]	SUB      	R155 K20 R155 ; R155 := 1.000000 - R155
	1844	[11756]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1845	[11756]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1846	[11756]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1847	[11756]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1848	[11756]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1849	[11756]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1850	[11757]	GETGLOBAL	R152 K31 ; R152 := mLists
	1851	[11757]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1852	[11757]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1853	[11757]	NEWTABLE 	R154 0 8 ; R154 := {}
	1854	[11757]	SETTABLE 	R154 K39 R149 ; R154["Attribute"] := R149
	1855	[11757]	SETTABLE 	R154 K28 K193 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_YOffset"
	1856	[11757]	SETTABLE 	R154 K194 K113 ; R154["PositionY"] := true
	1857	[11757]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1858	[11757]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1859	[11757]	MOVE     	R157 R149 ; R157 := R149
	1860	[11757]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1861	[11757]	GETTABLE 	R155 R155 K180 ; R155 := R155["green"]
	1862	[11757]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1863	[11757]	SUB      	R155 K20 R155 ; R155 := 1.000000 - R155
	1864	[11757]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1865	[11757]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1866	[11757]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1867	[11757]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1868	[11757]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1869	[11757]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1870	[11758]	GETGLOBAL	R152 K31 ; R152 := mLists
	1871	[11758]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1872	[11758]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1873	[11758]	NEWTABLE 	R154 0 8 ; R154 := {}
	1874	[11758]	SETTABLE 	R154 K39 R150 ; R154["Attribute"] := R150
	1875	[11758]	SETTABLE 	R154 K28 K202 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_Alpha"
	1876	[11758]	SETTABLE 	R154 K203 R151 ; R154["Alpha"] := R151
	1877	[11758]	SETTABLE 	R154 K183 K113 ; R154["IsValueSelector"] := true
	1878	[11758]	SELF     	R155 R144 K124 ; R156 := R144; R155 := R144[0x5d10207d]
	1879	[11758]	MOVE     	R157 R150 ; R157 := R150
	1880	[11758]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1881	[11758]	GETTABLE 	R155 R155 R151 ; R155 := R155[R151]
	1882	[11758]	DIV      	R155 R155 K185 ; R155 := R155 / 255.000000
	1883	[11758]	SETTABLE 	R154 K184 R155 ; R154["Value"] := R155
	1884	[11758]	SETTABLE 	R154 K186 K24 ; R154["ValueChange"] := 0.000000
	1885	[11758]	SETTABLE 	R154 K187 K99 ; R154["SliderActive"] := false
	1886	[11758]	SETTABLE 	R154 K188 K24 ; R154["SliderX"] := 0.000000
	1887	[11758]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1888	[11758]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1889	[11760]	GETGLOBAL	R152 K31 ; R152 := mLists
	1890	[11760]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1891	[11760]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1892	[11760]	NEWTABLE 	R154 0 5 ; R154 := {}
	1893	[11760]	SETTABLE 	R154 K28 K195 ; R154["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetProperties"
	1894	[11760]	SETTABLE 	R154 K196 K113 ; R154["DefaultSigilProps"] := true
	1895	[11760]	GETUPVAL 	R155 U12 ; R155 := U12
	1896	[11760]	SETTABLE 	R154 K197 R155 ; R154["Callback"] := R155
	1897	[11760]	SETTABLE 	R154 K145 K113 ; R154["HasBottomLine"] := true
	1898	[11760]	SETTABLE 	R154 K198 K113 ; R154["HasMiddleLine"] := true
	1899	[11760]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1900	[11760]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1901	[11761]	GETGLOBAL	R152 K31 ; R152 := mLists
	1902	[11761]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1903	[11761]	SELF     	R152 R152 K140 ; R153 := R152; R152 := R152[0xbad4316f]
	1904	[11761]	NEWTABLE 	R154 0 6 ; R154 := {}
	1905	[11761]	SETTABLE 	R154 K39 R145 ; R154["Attribute"] := R145
	1906	[11761]	SETTABLE 	R154 K172 R146 ; R154["Attribute2"] := R146
	1907	[11761]	SETTABLE 	R154 K28 K168 ; R154["Title"] := "/Lotus/Language/Menu/Arsenal_Primary"
	1908	[11761]	SETTABLE 	R154 K36 K166 ; R154["TopTitle"] := "/Lotus/Language/Menu/Loadout_CustomizeColor"
	1909	[11761]	SETTABLE 	R154 K204 K113 ; R154["SigilColor"] := true
	1910	[11761]	SETTABLE 	R154 K145 K113 ; R154["HasBottomLine"] := true
	1911	[11761]	OP_LOADBOOL	R155 1 0 ; R155 := true
	1912	[11761]	CALL     	R152 4 1 ; R152(R153,R154,R155)
	1913	[11762]	JMP      	2265 ; PC := 2265
	1914	[11763]	GETGLOBAL	R152 K31 ; R152 := mLists
	1915	[11763]	GETTABLE 	R152 R152 K32 ; R152 := R152["mCosmeticsList"]
	1916	[11763]	GETTABLE 	R152 R152 K135 ; R152 := R152["mCurrLevel"]
	1917	[11763]	GETGLOBAL	R153 K31 ; R153 := mLists
	1918	[11763]	GETTABLE 	R153 R153 K32 ; R153 := R153["mCosmeticsList"]
	1919	[11763]	GETTABLE 	R153 R153 K136 ; R153 := R153["HOLSTER_STYLE"]
	1920	[11763]	EQ       	0 R152 R153 ; if R152 ~= R153 then PC := 1980
	1921	[11763]	JMP      	1980 ; PC := 1980
	1922	[11764]	OP_LOADBOOL	R152 0 0 ; R152 := false
	1923	[11765]	OP_LOADBOOL	R153 0 0 ; R153 := false
	1924	[11767]	GETUPVAL 	R154 U13 ; R154 := U13
	1925	[11767]	GETGLOBAL	R155 K7 ; R155 := mSelected
	1926	[11767]	GETTABLE 	R155 R155 K8 ; R155 := R155["Element"]
	1927	[11767]	CALL     	R154 2 2 ; R154 := R154(R155)
	1928	[11769]	GETGLOBAL	R155 K6 ; R155 := 0x7b998233
	1929	[11769]	MOVE     	R156 R154 ; R156 := R154
	1930	[11769]	CALL     	R155 2 2 ; R155 := R155(R156)
	1931	[11769]	TEST     	R155 1 ; if R155 then PC := 1941
	1932	[11769]	JMP      	1941 ; PC := 1941
	1933	[11770]	SELF     	R155 R154 K205 ; R156 := R154; R155 := R154[0x8fa87b4b]
	1934	[11770]	LOADK    	R157 := 0.000000
	1935	[11770]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1936	[11770]	MOVE     	R152 R155 ; R152 := R155
	1937	[11771]	SELF     	R155 R154 K205 ; R156 := R154; R155 := R154[0x8fa87b4b]
	1938	[11771]	LOADK    	R157 := 1.000000
	1939	[11771]	CALL     	R155 3 2 ; R155 := R155(R156,R157)
	1940	[11771]	MOVE     	R153 R155 ; R153 := R155
	1941	[11774]	TEST     	R152 0 ; if not R152 then PC := 1960
	1942	[11774]	JMP      	1960 ; PC := 1960
	1943	[11775]	NEWTABLE 	R155 0 4 ; R155 := {}
	1944	[11775]	SETTABLE 	R155 K28 K207 ; R155["Title"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolsterMainHand"
	1945	[11775]	SETTABLE 	R155 K36 K208 ; R155["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolster"
	1946	[11775]	GETGLOBAL	R156 K31 ; R156 := mLists
	1947	[11775]	GETTABLE 	R156 R156 K32 ; R156 := R156["mCosmeticsList"]
	1948	[11775]	GETTABLE 	R156 R156 K209 ; R156 := R156["HOLSTER_CUSTOMIZATION"]
	1949	[11775]	SETTABLE 	R155 K30 R156 ; R155["Level"] := R156
	1950	[11775]	SETTABLE 	R155 K210 K24 ; R155["Hand"] := 0.000000
	1951	[11776]	TEST     	R153 1 ; if R153 then PC := 1954
	1952	[11776]	JMP      	1954 ; PC := 1954
	1953	[11777]	SETTABLE 	R155 K145 K113 ; R155["HasBottomLine"] := true
	1954	[11779]	GETGLOBAL	R156 K31 ; R156 := mLists
	1955	[11779]	GETTABLE 	R156 R156 K32 ; R156 := R156["mCosmeticsList"]
	1956	[11779]	SELF     	R156 R156 K140 ; R157 := R156; R156 := R156[0xbad4316f]
	1957	[11779]	MOVE     	R158 R155 ; R158 := R155
	1958	[11779]	OP_LOADBOOL	R159 1 0 ; R159 := true
	1959	[11779]	CALL     	R156 4 1 ; R156(R157,R158,R159)
	1960	[11782]	TEST     	R153 0 ; if not R153 then PC := 2265
	1961	[11782]	JMP      	2265 ; PC := 2265
	1962	[11783]	NEWTABLE 	R156 0 4 ; R156 := {}
	1963	[11783]	SETTABLE 	R156 K28 K211 ; R156["Title"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolsterOffHand"
	1964	[11783]	SETTABLE 	R156 K145 K113 ; R156["HasBottomLine"] := true
	1965	[11783]	GETGLOBAL	R157 K31 ; R157 := mLists
	1966	[11783]	GETTABLE 	R157 R157 K32 ; R157 := R157["mCosmeticsList"]
	1967	[11783]	GETTABLE 	R157 R157 K209 ; R157 := R157["HOLSTER_CUSTOMIZATION"]
	1968	[11783]	SETTABLE 	R156 K30 R157 ; R156["Level"] := R157
	1969	[11783]	SETTABLE 	R156 K210 K20 ; R156["Hand"] := 1.000000
	1970	[11784]	TEST     	R152 1 ; if R152 then PC := 1973
	1971	[11784]	JMP      	1973 ; PC := 1973
	1972	[11785]	SETTABLE 	R156 K36 K208 ; R156["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_CustomizeHolster"
	1973	[11787]	GETGLOBAL	R157 K31 ; R157 := mLists
	1974	[11787]	GETTABLE 	R157 R157 K32 ; R157 := R157["mCosmeticsList"]
	1975	[11787]	SELF     	R157 R157 K140 ; R158 := R157; R157 := R157[0xbad4316f]
	1976	[11787]	MOVE     	R159 R156 ; R159 := R156
	1977	[11787]	OP_LOADBOOL	R160 1 0 ; R160 := true
	1978	[11787]	CALL     	R157 4 1 ; R157(R158,R159,R160)
	1979	[11788]	JMP      	2265 ; PC := 2265
	1980	[11789]	GETGLOBAL	R157 K31 ; R157 := mLists
	1981	[11789]	GETTABLE 	R157 R157 K32 ; R157 := R157["mCosmeticsList"]
	1982	[11789]	GETTABLE 	R157 R157 K135 ; R157 := R157["mCurrLevel"]
	1983	[11789]	GETGLOBAL	R158 K31 ; R158 := mLists
	1984	[11789]	GETTABLE 	R158 R158 K32 ; R158 := R158["mCosmeticsList"]
	1985	[11789]	GETTABLE 	R158 R158 K209 ; R158 := R158["HOLSTER_CUSTOMIZATION"]
	1986	[11789]	EQ       	0 R157 R158 ; if R157 ~= R158 then PC := 2265
	1987	[11789]	JMP      	2265 ; PC := 2265
	1988	[11790]	GETUPVAL 	R157 U13 ; R157 := U13
	1989	[11790]	GETGLOBAL	R158 K7 ; R158 := mSelected
	1990	[11790]	GETTABLE 	R158 R158 K8 ; R158 := R158["Element"]
	1991	[11790]	CALL     	R157 2 2 ; R157 := R157(R158)
	1992	[11792]	LOADK    	R158 := 6.000000
	1993	[11793]	LOADK    	R159 := 0.000000
	1994	[11794]	LOADK    	R160 := 1.000000
	1995	[11796]	GETGLOBAL	R161 K31 ; R161 := mLists
	1996	[11796]	GETTABLE 	R161 R161 K32 ; R161 := R161["mCosmeticsList"]
	1997	[11796]	GETTABLE 	R161 R161 K210 ; R161 := R161["Hand"]
	1998	[11796]	EQ       	0 R161 K20 ; if R161 ~= 1.000000 then PC := 2002
	1999	[11796]	JMP      	2002 ; PC := 2002
	2000	[11797]	LOADK    	R159 := 2.000000
	2001	[11798]	LOADK    	R160 := 3.000000
	2002	[11801]	GETGLOBAL	R161 K7 ; R161 := mSelected
	2003	[11801]	GETTABLE 	R161 R161 K8 ; R161 := R161["Element"]
	2004	[11801]	GETTABLE 	R161 R161 K53 ; R161 := R161["Customization"]
	2005	[11802]	SELF     	R162 R161 K176 ; R163 := R161; R162 := R161[0x8e62760a]
	2006	[11802]	LOADK    	R164 := 3.000000
	2007	[11802]	CALL     	R162 3 2 ; R162 := R162(R163,R164)
	2008	[11804]	GETGLOBAL	R163 K13 ; R163 := _T
	2009	[11804]	GETTABLE 	R163 R163 K212 ; R163 := R163["MenuSuitAvatar"]
	2010	[11805]	SELF     	R164 R163 K213 ; R165 := R163; R164 := R163[0xde321e6f]
	2011	[11805]	CALL     	R164 2 2 ; R164 := R164(R165)
	2012	[11805]	SELF     	R164 R164 K214 ; R165 := R164; R164 := R164[0xf7d48ee0]
	2013	[11805]	CALL     	R164 2 2 ; R164 := R164(R165)
	2014	[11806]	GETUPVAL 	R165 U7 ; R165 := U7
	2015	[11806]	MOVE     	R166 R3 ; R166 := R3
	2016	[11806]	MOVE     	R167 R4 ; R167 := R4
	2017	[11806]	CALL     	R165 3 2 ; R165 := R165(R166,R167)
	2018	[11808]	SELF     	R166 R164 K215 ; R167 := R164; R166 := R164[0xd6496b1c]
	2019	[11808]	MOVE     	R168 R165 ; R168 := R165
	2020	[11808]	GETGLOBAL	R169 K31 ; R169 := mLists
	2021	[11808]	GETTABLE 	R169 R169 K32 ; R169 := R169["mCosmeticsList"]
	2022	[11808]	GETTABLE 	R169 R169 K210 ; R169 := R169["Hand"]
	2023	[11808]	CALL     	R166 4 2 ; R166 := R166(R167,R168,R169)
	2024	[11809]	SELF     	R167 R166 K176 ; R168 := R166; R167 := R166[0x8e62760a]
	2025	[11809]	LOADK    	R169 := 3.000000
	2026	[11809]	CALL     	R167 3 2 ; R167 := R167(R168,R169)
	2027	[11811]	LOADNIL  	R168 R168 ; R168 := nil
	2028	[11812]	SELF     	R169 R162 K216 ; R170 := R162; R169 := R162[0x697019d0]
	2029	[11812]	MOVE     	R171 R158 ; R171 := R158
	2030	[11812]	CALL     	R169 3 2 ; R169 := R169(R170,R171)
	2031	[11812]	TEST     	R169 0 ; if not R169 then PC := 2038
	2032	[11812]	JMP      	2038 ; PC := 2038
	2033	[11813]	SELF     	R169 R162 K124 ; R170 := R162; R169 := R162[0x5d10207d]
	2034	[11813]	MOVE     	R171 R158 ; R171 := R158
	2035	[11813]	CALL     	R169 3 2 ; R169 := R169(R170,R171)
	2036	[11813]	MOVE     	R168 R169 ; R168 := R169
	2037	[11813]	JMP      	2042 ; PC := 2042
	2038	[11815]	SELF     	R169 R167 K124 ; R170 := R167; R169 := R167[0x5d10207d]
	2039	[11815]	MOVE     	R171 R158 ; R171 := R158
	2040	[11815]	CALL     	R169 3 2 ; R169 := R169(R170,R171)
	2041	[11815]	MOVE     	R168 R169 ; R168 := R169
	2042	[11818]	LOADNIL  	R169 R169 ; R169 := nil
	2043	[11819]	SELF     	R170 R162 K216 ; R171 := R162; R170 := R162[0x697019d0]
	2044	[11819]	MOVE     	R172 R159 ; R172 := R159
	2045	[11819]	CALL     	R170 3 2 ; R170 := R170(R171,R172)
	2046	[11819]	TEST     	R170 0 ; if not R170 then PC := 2053
	2047	[11819]	JMP      	2053 ; PC := 2053
	2048	[11820]	SELF     	R170 R162 K124 ; R171 := R162; R170 := R162[0x5d10207d]
	2049	[11820]	MOVE     	R172 R159 ; R172 := R159
	2050	[11820]	CALL     	R170 3 2 ; R170 := R170(R171,R172)
	2051	[11820]	MOVE     	R169 R170 ; R169 := R170
	2052	[11820]	JMP      	2057 ; PC := 2057
	2053	[11822]	SELF     	R170 R167 K124 ; R171 := R167; R170 := R167[0x5d10207d]
	2054	[11822]	MOVE     	R172 R159 ; R172 := R159
	2055	[11822]	CALL     	R170 3 2 ; R170 := R170(R171,R172)
	2056	[11822]	MOVE     	R169 R170 ; R169 := R170
	2057	[11825]	LOADNIL  	R170 R170 ; R170 := nil
	2058	[11826]	SELF     	R171 R162 K216 ; R172 := R162; R171 := R162[0x697019d0]
	2059	[11826]	MOVE     	R173 R160 ; R173 := R160
	2060	[11826]	CALL     	R171 3 2 ; R171 := R171(R172,R173)
	2061	[11826]	TEST     	R171 0 ; if not R171 then PC := 2068
	2062	[11826]	JMP      	2068 ; PC := 2068
	2063	[11827]	SELF     	R171 R162 K124 ; R172 := R162; R171 := R162[0x5d10207d]
	2064	[11827]	MOVE     	R173 R160 ; R173 := R160
	2065	[11827]	CALL     	R171 3 2 ; R171 := R171(R172,R173)
	2066	[11827]	MOVE     	R170 R171 ; R170 := R171
	2067	[11827]	JMP      	2072 ; PC := 2072
	2068	[11829]	SELF     	R171 R167 K124 ; R172 := R167; R171 := R167[0x5d10207d]
	2069	[11829]	MOVE     	R173 R160 ; R173 := R160
	2070	[11829]	CALL     	R171 3 2 ; R171 := R171(R172,R173)
	2071	[11829]	MOVE     	R170 R171 ; R170 := R171
	2072	[11832]	GETTABLE 	R171 R168 K178 ; R171 := R168["red"]
	2073	[11832]	MOD      	R171 R171 K22 ; R171 := R171 % 16.000000
	2074	[11833]	SELF     	R172 R157 K217 ; R173 := R157; R172 := R157[0x210f7d8b]
	2075	[11833]	GETGLOBAL	R174 K31 ; R174 := mLists
	2076	[11833]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2077	[11833]	GETTABLE 	R174 R174 K210 ; R174 := R174["Hand"]
	2078	[11833]	CALL     	R172 3 2 ; R172 := R172(R173,R174)
	2079	[11834]	SELF     	R173 R157 K218 ; R174 := R157; R173 := R157[0x5819e29e]
	2080	[11834]	GETGLOBAL	R175 K31 ; R175 := mLists
	2081	[11834]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2082	[11834]	GETTABLE 	R175 R175 K210 ; R175 := R175["Hand"]
	2083	[11834]	MOVE     	R176 R171 ; R176 := R171
	2084	[11834]	CALL     	R173 4 2 ; R173 := R173(R174,R175,R176)
	2085	[11836]	LEN      	R174 R172 ; R174 := # R172
	2086	[11836]	LT       	0 K20 R174 ; if 1.000000 >= R174 then PC := 2111
	2087	[11836]	JMP      	2111 ; PC := 2111
	2088	[11837]	GETGLOBAL	R174 K31 ; R174 := mLists
	2089	[11837]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2090	[11837]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2091	[11837]	NEWTABLE 	R176 0 12 ; R176 := {}
	2092	[11837]	SETTABLE 	R176 K39 R158 ; R176["Attribute"] := R158
	2093	[11837]	SETTABLE 	R176 K28 R173 ; R176["Title"] := R173
	2094	[11837]	SETTABLE 	R176 K219 K113 ; R176["AttachPart"] := true
	2095	[11837]	GETGLOBAL	R177 K31 ; R177 := mLists
	2096	[11837]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2097	[11837]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2098	[11837]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2099	[11837]	SETTABLE 	R176 K183 K113 ; R176["IsValueSelector"] := true
	2100	[11837]	SETTABLE 	R176 K184 R171 ; R176["Value"] := R171
	2101	[11837]	SETTABLE 	R176 K186 K24 ; R176["ValueChange"] := 0.000000
	2102	[11837]	LEN      	R177 R172 ; R177 := # R172
	2103	[11837]	SUB      	R177 R177 K20 ; R177 := R177 - 1.000000
	2104	[11837]	SETTABLE 	R176 K220 R177 ; R176["NumOptions"] := R177
	2105	[11837]	SETTABLE 	R176 K187 K99 ; R176["SliderActive"] := false
	2106	[11837]	SETTABLE 	R176 K188 K24 ; R176["SliderX"] := 0.000000
	2107	[11837]	SETTABLE 	R176 K36 K221 ; R176["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_AttachPart"
	2108	[11837]	SETTABLE 	R176 K145 K113 ; R176["HasBottomLine"] := true
	2109	[11837]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2110	[11837]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2111	[11839]	GETGLOBAL	R174 K31 ; R174 := mLists
	2112	[11839]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2113	[11839]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2114	[11839]	NEWTABLE 	R176 0 10 ; R176 := {}
	2115	[11839]	SETTABLE 	R176 K39 R159 ; R176["Attribute"] := R159
	2116	[11839]	SETTABLE 	R176 K28 K191 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_XOffset"
	2117	[11839]	SETTABLE 	R176 K192 K113 ; R176["PositionX"] := true
	2118	[11839]	GETGLOBAL	R177 K31 ; R177 := mLists
	2119	[11839]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2120	[11839]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2121	[11839]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2122	[11839]	SETTABLE 	R176 K183 K113 ; R176["IsValueSelector"] := true
	2123	[11839]	GETTABLE 	R177 R169 K178 ; R177 := R169["red"]
	2124	[11839]	DIV      	R177 R177 K185 ; R177 := R177 / 255.000000
	2125	[11839]	SETTABLE 	R176 K184 R177 ; R176["Value"] := R177
	2126	[11839]	SETTABLE 	R176 K186 K24 ; R176["ValueChange"] := 0.000000
	2127	[11839]	SETTABLE 	R176 K187 K99 ; R176["SliderActive"] := false
	2128	[11839]	SETTABLE 	R176 K188 K24 ; R176["SliderX"] := 0.000000
	2129	[11839]	SETTABLE 	R176 K36 K222 ; R176["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Position"
	2130	[11839]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2131	[11839]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2132	[11840]	GETGLOBAL	R174 K31 ; R174 := mLists
	2133	[11840]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2134	[11840]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2135	[11840]	NEWTABLE 	R176 0 9 ; R176 := {}
	2136	[11840]	SETTABLE 	R176 K39 R159 ; R176["Attribute"] := R159
	2137	[11840]	SETTABLE 	R176 K28 K193 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_YOffset"
	2138	[11840]	SETTABLE 	R176 K194 K113 ; R176["PositionY"] := true
	2139	[11840]	GETGLOBAL	R177 K31 ; R177 := mLists
	2140	[11840]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2141	[11840]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2142	[11840]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2143	[11840]	SETTABLE 	R176 K183 K113 ; R176["IsValueSelector"] := true
	2144	[11840]	GETTABLE 	R177 R169 K180 ; R177 := R169["green"]
	2145	[11840]	DIV      	R177 R177 K185 ; R177 := R177 / 255.000000
	2146	[11840]	SETTABLE 	R176 K184 R177 ; R176["Value"] := R177
	2147	[11840]	SETTABLE 	R176 K186 K24 ; R176["ValueChange"] := 0.000000
	2148	[11840]	SETTABLE 	R176 K187 K99 ; R176["SliderActive"] := false
	2149	[11840]	SETTABLE 	R176 K188 K24 ; R176["SliderX"] := 0.000000
	2150	[11840]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2151	[11840]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2152	[11841]	GETGLOBAL	R174 K31 ; R174 := mLists
	2153	[11841]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2154	[11841]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2155	[11841]	NEWTABLE 	R176 0 9 ; R176 := {}
	2156	[11841]	SETTABLE 	R176 K39 R159 ; R176["Attribute"] := R159
	2157	[11841]	SETTABLE 	R176 K28 K223 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_ZOffset"
	2158	[11841]	SETTABLE 	R176 K224 K113 ; R176["PositionZ"] := true
	2159	[11841]	GETGLOBAL	R177 K31 ; R177 := mLists
	2160	[11841]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2161	[11841]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2162	[11841]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2163	[11841]	SETTABLE 	R176 K183 K113 ; R176["IsValueSelector"] := true
	2164	[11841]	GETTABLE 	R177 R169 K177 ; R177 := R169["blue"]
	2165	[11841]	DIV      	R177 R177 K185 ; R177 := R177 / 255.000000
	2166	[11841]	SETTABLE 	R176 K184 R177 ; R176["Value"] := R177
	2167	[11841]	SETTABLE 	R176 K186 K24 ; R176["ValueChange"] := 0.000000
	2168	[11841]	SETTABLE 	R176 K187 K99 ; R176["SliderActive"] := false
	2169	[11841]	SETTABLE 	R176 K188 K24 ; R176["SliderX"] := 0.000000
	2170	[11841]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2171	[11841]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2172	[11842]	GETGLOBAL	R174 K31 ; R174 := mLists
	2173	[11842]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2174	[11842]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2175	[11842]	NEWTABLE 	R176 0 6 ; R176 := {}
	2176	[11842]	SETTABLE 	R176 K28 K225 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetPosition"
	2177	[11842]	SETTABLE 	R176 K226 K113 ; R176["DefaultHolsterPosition"] := true
	2178	[11842]	GETGLOBAL	R177 K31 ; R177 := mLists
	2179	[11842]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2180	[11842]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2181	[11842]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2182	[11842]	GETUPVAL 	R177 U12 ; R177 := U12
	2183	[11842]	SETTABLE 	R176 K197 R177 ; R176["Callback"] := R177
	2184	[11842]	SETTABLE 	R176 K145 K113 ; R176["HasBottomLine"] := true
	2185	[11842]	SETTABLE 	R176 K198 K113 ; R176["HasMiddleLine"] := true
	2186	[11842]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2187	[11842]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2188	[11843]	GETGLOBAL	R174 K31 ; R174 := mLists
	2189	[11843]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2190	[11843]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2191	[11843]	NEWTABLE 	R176 0 10 ; R176 := {}
	2192	[11843]	SETTABLE 	R176 K39 R160 ; R176["Attribute"] := R160
	2193	[11843]	SETTABLE 	R176 K28 K227 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RotationX"
	2194	[11843]	SETTABLE 	R176 K228 K113 ; R176["RotationX"] := true
	2195	[11843]	GETGLOBAL	R177 K31 ; R177 := mLists
	2196	[11843]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2197	[11843]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2198	[11843]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2199	[11843]	SETTABLE 	R176 K183 K113 ; R176["IsValueSelector"] := true
	2200	[11843]	GETTABLE 	R177 R170 K178 ; R177 := R170["red"]
	2201	[11843]	DIV      	R177 R177 K185 ; R177 := R177 / 255.000000
	2202	[11843]	SETTABLE 	R176 K184 R177 ; R176["Value"] := R177
	2203	[11843]	SETTABLE 	R176 K186 K24 ; R176["ValueChange"] := 0.000000
	2204	[11843]	SETTABLE 	R176 K187 K99 ; R176["SliderActive"] := false
	2205	[11843]	SETTABLE 	R176 K188 K24 ; R176["SliderX"] := 0.000000
	2206	[11843]	SETTABLE 	R176 K36 K199 ; R176["TopTitle"] := "/Lotus/Language/Menu/Cosmetics_Rotation"
	2207	[11843]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2208	[11843]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2209	[11844]	GETGLOBAL	R174 K31 ; R174 := mLists
	2210	[11844]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2211	[11844]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2212	[11844]	NEWTABLE 	R176 0 9 ; R176 := {}
	2213	[11844]	SETTABLE 	R176 K39 R160 ; R176["Attribute"] := R160
	2214	[11844]	SETTABLE 	R176 K28 K229 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RotationY"
	2215	[11844]	SETTABLE 	R176 K230 K113 ; R176["RotationY"] := true
	2216	[11844]	GETGLOBAL	R177 K31 ; R177 := mLists
	2217	[11844]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2218	[11844]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2219	[11844]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2220	[11844]	SETTABLE 	R176 K183 K113 ; R176["IsValueSelector"] := true
	2221	[11844]	GETTABLE 	R177 R170 K180 ; R177 := R170["green"]
	2222	[11844]	DIV      	R177 R177 K185 ; R177 := R177 / 255.000000
	2223	[11844]	SETTABLE 	R176 K184 R177 ; R176["Value"] := R177
	2224	[11844]	SETTABLE 	R176 K186 K24 ; R176["ValueChange"] := 0.000000
	2225	[11844]	SETTABLE 	R176 K187 K99 ; R176["SliderActive"] := false
	2226	[11844]	SETTABLE 	R176 K188 K24 ; R176["SliderX"] := 0.000000
	2227	[11844]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2228	[11844]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2229	[11845]	GETGLOBAL	R174 K31 ; R174 := mLists
	2230	[11845]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2231	[11845]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2232	[11845]	NEWTABLE 	R176 0 9 ; R176 := {}
	2233	[11845]	SETTABLE 	R176 K39 R160 ; R176["Attribute"] := R160
	2234	[11845]	SETTABLE 	R176 K28 K231 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RotationZ"
	2235	[11845]	SETTABLE 	R176 K232 K113 ; R176["RotationZ"] := true
	2236	[11845]	GETGLOBAL	R177 K31 ; R177 := mLists
	2237	[11845]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2238	[11845]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2239	[11845]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2240	[11845]	SETTABLE 	R176 K183 K113 ; R176["IsValueSelector"] := true
	2241	[11845]	GETTABLE 	R177 R170 K177 ; R177 := R170["blue"]
	2242	[11845]	DIV      	R177 R177 K185 ; R177 := R177 / 255.000000
	2243	[11845]	SETTABLE 	R176 K184 R177 ; R176["Value"] := R177
	2244	[11845]	SETTABLE 	R176 K186 K24 ; R176["ValueChange"] := 0.000000
	2245	[11845]	SETTABLE 	R176 K187 K99 ; R176["SliderActive"] := false
	2246	[11845]	SETTABLE 	R176 K188 K24 ; R176["SliderX"] := 0.000000
	2247	[11845]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2248	[11845]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2249	[11846]	GETGLOBAL	R174 K31 ; R174 := mLists
	2250	[11846]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2251	[11846]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2252	[11846]	NEWTABLE 	R176 0 6 ; R176 := {}
	2253	[11846]	SETTABLE 	R176 K28 K233 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_ResetRotation"
	2254	[11846]	SETTABLE 	R176 K234 K113 ; R176["DefaultHolsterRotation"] := true
	2255	[11846]	GETGLOBAL	R177 K31 ; R177 := mLists
	2256	[11846]	GETTABLE 	R177 R177 K32 ; R177 := R177["mCosmeticsList"]
	2257	[11846]	GETTABLE 	R177 R177 K210 ; R177 := R177["Hand"]
	2258	[11846]	SETTABLE 	R176 K210 R177 ; R176["Hand"] := R177
	2259	[11846]	GETUPVAL 	R177 U12 ; R177 := U12
	2260	[11846]	SETTABLE 	R176 K197 R177 ; R176["Callback"] := R177
	2261	[11846]	SETTABLE 	R176 K145 K113 ; R176["HasBottomLine"] := true
	2262	[11846]	SETTABLE 	R176 K198 K113 ; R176["HasMiddleLine"] := true
	2263	[11846]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2264	[11846]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2265	[11849]	GETGLOBAL	R174 K31 ; R174 := mLists
	2266	[11849]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2267	[11849]	GETTABLE 	R174 R174 K135 ; R174 := R174["mCurrLevel"]
	2268	[11849]	GETGLOBAL	R175 K31 ; R175 := mLists
	2269	[11849]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2270	[11849]	GETTABLE 	R175 R175 K33 ; R175 := R175["DEFAULT"]
	2271	[11849]	EQ       	1 R174 R175 ; if R174 == R175 then PC := 2289
	2272	[11849]	JMP      	2289 ; PC := 2289
	2273	[11849]	GETGLOBAL	R174 K31 ; R174 := mLists
	2274	[11849]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2275	[11849]	GETTABLE 	R174 R174 K135 ; R174 := R174["mCurrLevel"]
	2276	[11849]	GETGLOBAL	R175 K31 ; R175 := mLists
	2277	[11849]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2278	[11849]	GETTABLE 	R175 R175 K76 ; R175 := R175["ATTACHMENTS"]
	2279	[11849]	EQ       	1 R174 R175 ; if R174 == R175 then PC := 2289
	2280	[11849]	JMP      	2289 ; PC := 2289
	2281	[11849]	GETGLOBAL	R174 K31 ; R174 := mLists
	2282	[11849]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2283	[11849]	GETTABLE 	R174 R174 K135 ; R174 := R174["mCurrLevel"]
	2284	[11849]	GETGLOBAL	R175 K31 ; R175 := mLists
	2285	[11849]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2286	[11849]	GETTABLE 	R175 R175 K161 ; R175 := R175["SYANDANAS"]
	2287	[11849]	EQ       	0 R174 R175 ; if R174 ~= R175 then PC := 2406
	2288	[11849]	JMP      	2406 ; PC := 2406
	2289	[11850]	TEST     	R20 0 ; if not R20 then PC := 2302
	2290	[11850]	JMP      	2302 ; PC := 2302
	2291	[11851]	GETGLOBAL	R174 K31 ; R174 := mLists
	2292	[11851]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2293	[11851]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2294	[11851]	NEWTABLE 	R176 0 4 ; R176 := {}
	2295	[11851]	SETTABLE 	R176 K98 K99 ; R176["Enabled"] := false
	2296	[11851]	SETTABLE 	R176 K28 K235 ; R176["Title"] := "/Lotus/Language/Menu/Loadout_ColorLocked"
	2297	[11851]	SETTABLE 	R176 K36 K166 ; R176["TopTitle"] := "/Lotus/Language/Menu/Loadout_CustomizeColor"
	2298	[11851]	SETTABLE 	R176 K145 K113 ; R176["HasBottomLine"] := true
	2299	[11851]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2300	[11851]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2301	[11851]	JMP      	2406 ; PC := 2406
	2302	[11852]	TEST     	R140 0 ; if not R140 then PC := 2406
	2303	[11852]	JMP      	2406 ; PC := 2406
	2304	[11853]	GETGLOBAL	R174 K31 ; R174 := mLists
	2305	[11853]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2306	[11853]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2307	[11853]	NEWTABLE 	R176 0 3 ; R176 := {}
	2308	[11853]	SETTABLE 	R176 K28 K236 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_RandomColors"
	2309	[11853]	SETTABLE 	R176 K237 K113 ; R176["RandomizeColors"] := true
	2310	[11853]	NOT      	R177 R141 ; R177 := not R141
	2311	[11853]	SETTABLE 	R176 K198 R177 ; R176["HasMiddleLine"] := R177
	2312	[11853]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2313	[11853]	CALL     	R174 4 1 ; R174(R175,R176,R177)
	2314	[11854]	GETGLOBAL	R174 K31 ; R174 := mLists
	2315	[11854]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2316	[11854]	GETTABLE 	R174 R174 K135 ; R174 := R174["mCurrLevel"]
	2317	[11854]	GETGLOBAL	R175 K31 ; R175 := mLists
	2318	[11854]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2319	[11854]	GETTABLE 	R175 R175 K33 ; R175 := R175["DEFAULT"]
	2320	[11854]	EQ       	0 R174 R175 ; if R174 ~= R175 then PC := 2366
	2321	[11854]	JMP      	2366 ; PC := 2366
	2322	[11855]	GETGLOBAL	R174 K31 ; R174 := mLists
	2323	[11855]	GETTABLE 	R174 R174 K32 ; R174 := R174["mCosmeticsList"]
	2324	[11855]	SELF     	R174 R174 K140 ; R175 := R174; R174 := R174[0xbad4316f]
	2325	[11855]	NEWTABLE 	R176 0 2 ; R176 := {}
	2326	[11855]	SETTABLE 	R176 K28 K238 ; R176["Title"] := "/Lotus/Language/Menu/Cosmetics_DefaultColors"
	2327	[11855]	SETTABLE 	R176 K239 K113 ; R176["DefaultColors"] := true
	2328	[11855]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2329	[11855]	CALL     	R174 4 2 ; R174 := R174(R175,R176,R177)
	2330	[11857]	EQ       	0 R4 K24 ; if R4 ~= 0.000000 then PC := 2336
	2331	[11857]	JMP      	2336 ; PC := 2336
	2332	[11857]	EQ       	1 R3 K24 ; if R3 == 0.000000 then PC := 2364
	2333	[11857]	JMP      	2364 ; PC := 2364
	2334	[11857]	EQ       	1 R3 K56 ; if R3 == 3.000000 then PC := 2364
	2335	[11857]	JMP      	2364 ; PC := 2364
	2336	[11859]	EQ       	0 R3 K49 ; if R3 ~= 8.000000 then PC := 2352
	2337	[11859]	JMP      	2352 ; PC := 2352
	2338	[11859]	EQ       	1 R4 K24 ; if R4 == 0.000000 then PC := 2352
	2339	[11859]	JMP      	2352 ; PC := 2352
	2340	[11860]	GETGLOBAL	R175 K31 ; R175 := mLists
	2341	[11860]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2342	[11860]	SELF     	R175 R175 K140 ; R176 := R175; R175 := R175[0xbad4316f]
	2343	[11860]	NEWTABLE 	R177 0 4 ; R177 := {}
	2344	[11860]	SETTABLE 	R177 K28 K240 ; R177["Title"] := "/Lotus/Language/Necromech/Cosmetics_CopyMechColors"
	2345	[11860]	SETTABLE 	R177 K241 K113 ; R177["CopyColors"] := true
	2346	[11860]	GETUPVAL 	R178 U14 ; R178 := U14
	2347	[11860]	SETTABLE 	R177 K197 R178 ; R177["Callback"] := R178
	2348	[11860]	SETTABLE 	R177 K145 K113 ; R177["HasBottomLine"] := true
	2349	[11860]	OP_LOADBOOL	R178 1 0 ; R178 := true
	2350	[11860]	CALL     	R175 4 1 ; R175(R176,R177,R178)
	2351	[11860]	JMP      	2406 ; PC := 2406
	2352	[11862]	GETGLOBAL	R175 K31 ; R175 := mLists
	2353	[11862]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2354	[11862]	SELF     	R175 R175 K140 ; R176 := R175; R175 := R175[0xbad4316f]
	2355	[11862]	NEWTABLE 	R177 0 4 ; R177 := {}
	2356	[11862]	SETTABLE 	R177 K28 K242 ; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_CopyWarframeColors"
	2357	[11862]	SETTABLE 	R177 K241 K113 ; R177["CopyColors"] := true
	2358	[11862]	GETUPVAL 	R178 U14 ; R178 := U14
	2359	[11862]	SETTABLE 	R177 K197 R178 ; R177["Callback"] := R178
	2360	[11862]	SETTABLE 	R177 K145 K113 ; R177["HasBottomLine"] := true
	2361	[11862]	OP_LOADBOOL	R178 1 0 ; R178 := true
	2362	[11862]	CALL     	R175 4 1 ; R175(R176,R177,R178)
	2363	[11863]	JMP      	2406 ; PC := 2406
	2364	[11865]	SETTABLE 	R174 K145 K113 ; R174["HasBottomLine"] := true
	2365	[11866]	JMP      	2406 ; PC := 2406
	2366	[11868]	GETGLOBAL	R175 K31 ; R175 := mLists
	2367	[11868]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2368	[11868]	SELF     	R175 R175 K140 ; R176 := R175; R175 := R175[0xbad4316f]
	2369	[11868]	NEWTABLE 	R177 0 3 ; R177 := {}
	2370	[11868]	SETTABLE 	R177 K28 K238 ; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_DefaultColors"
	2371	[11868]	SETTABLE 	R177 K239 K113 ; R177["DefaultColors"] := true
	2372	[11868]	SETTABLE 	R177 K145 R139 ; R177["HasBottomLine"] := R139
	2373	[11868]	OP_LOADBOOL	R178 1 0 ; R178 := true
	2374	[11868]	CALL     	R175 4 1 ; R175(R176,R177,R178)
	2375	[11870]	TEST     	R139 1 ; if R139 then PC := 2406
	2376	[11870]	JMP      	2406 ; PC := 2406
	2377	[11871]	GETGLOBAL	R175 K31 ; R175 := mLists
	2378	[11871]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2379	[11871]	GETTABLE 	R175 R175 K135 ; R175 := R175["mCurrLevel"]
	2380	[11871]	GETGLOBAL	R176 K31 ; R176 := mLists
	2381	[11871]	GETTABLE 	R176 R176 K32 ; R176 := R176["mCosmeticsList"]
	2382	[11871]	GETTABLE 	R176 R176 K161 ; R176 := R176["SYANDANAS"]
	2383	[11871]	EQ       	0 R175 R176 ; if R175 ~= R176 then PC := 2395
	2384	[11871]	JMP      	2395 ; PC := 2395
	2385	[11872]	GETGLOBAL	R175 K31 ; R175 := mLists
	2386	[11872]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2387	[11872]	SELF     	R175 R175 K140 ; R176 := R175; R175 := R175[0xbad4316f]
	2388	[11872]	NEWTABLE 	R177 0 3 ; R177 := {}
	2389	[11872]	SETTABLE 	R177 K28 K243 ; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_CopyAttachmentColors"
	2390	[11872]	SETTABLE 	R177 K241 K20 ; R177["CopyColors"] := 1.000000
	2391	[11872]	GETUPVAL 	R178 U15 ; R178 := U15
	2392	[11872]	SETTABLE 	R177 K197 R178 ; R177["Callback"] := R178
	2393	[11872]	OP_LOADBOOL	R178 1 0 ; R178 := true
	2394	[11872]	CALL     	R175 4 1 ; R175(R176,R177,R178)
	2395	[11875]	GETGLOBAL	R175 K31 ; R175 := mLists
	2396	[11875]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2397	[11875]	SELF     	R175 R175 K140 ; R176 := R175; R175 := R175[0xbad4316f]
	2398	[11875]	NEWTABLE 	R177 0 4 ; R177 := {}
	2399	[11875]	SETTABLE 	R177 K28 K244 ; R177["Title"] := "/Lotus/Language/Menu/Cosmetics_CopyColors"
	2400	[11875]	SETTABLE 	R177 K241 K24 ; R177["CopyColors"] := 0.000000
	2401	[11875]	GETUPVAL 	R178 U15 ; R178 := U15
	2402	[11875]	SETTABLE 	R177 K197 R178 ; R177["Callback"] := R178
	2403	[11875]	SETTABLE 	R177 K145 K113 ; R177["HasBottomLine"] := true
	2404	[11875]	OP_LOADBOOL	R178 1 0 ; R178 := true
	2405	[11875]	CALL     	R175 4 1 ; R175(R176,R177,R178)
	2406	[11881]	GETUPVAL 	R175 U16 ; R175 := U16
	2407	[11881]	CALL     	R175 1 1 ; R175()
	2408	[11881]	JMP      	2411 ; PC := 2411
	2409	[11883]	GETUPVAL 	R175 U16 ; R175 := U16
	2410	[11883]	CALL     	R175 1 1 ; R175()
	2411	[11886]	GETGLOBAL	R175 K31 ; R175 := mLists
	2412	[11886]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2413	[11886]	GETGLOBAL	R176 K31 ; R176 := mLists
	2414	[11886]	GETTABLE 	R176 R176 K32 ; R176 := R176["mCosmeticsList"]
	2415	[11886]	GETTABLE 	R176 R176 K246 ; R176 := R176["mOrigY"]
	2416	[11886]	GETUPVAL 	R177 U1 ; R177 := U1
	2417	[11886]	GETTABLE 	R177 R177 K51 ; R177 := R177[0x06d055f9]
	2418	[11886]	GETGLOBAL	R178 K31 ; R178 := mLists
	2419	[11886]	GETTABLE 	R178 R178 K32 ; R178 := R178["mCosmeticsList"]
	2420	[11886]	GETTABLE 	R178 R178 K135 ; R178 := R178["mCurrLevel"]
	2421	[11886]	GETGLOBAL	R179 K31 ; R179 := mLists
	2422	[11886]	GETTABLE 	R179 R179 K32 ; R179 := R179["mCosmeticsList"]
	2423	[11886]	GETTABLE 	R179 R179 K33 ; R179 := R179["DEFAULT"]
	2424	[11886]	EQ       	1 R178 R179 ; if R178 == R179 then PC := 2427
	2425	[11886]	JMP      	2427 ; PC := 2427
	2426	[11886]	OP_LOADBOOL	R178 0 1 ; R178 := false; PC := 2427
	2427	[11886]	OP_LOADBOOL	R178 1 0 ; R178 := true
	2428	[11886]	LOADK    	R179 := -20.000000
	2429	[11886]	LOADK    	R180 := -60.000000
	2430	[11886]	CALL     	R177 4 2 ; R177 := R177(R178,R179,R180)
	2431	[11886]	ADD      	R176 R176 R177 ; R176 := R176 + R177
	2432	[11886]	SETTABLE 	R175 K245 R176 ; R175["mInitialY"] := R176
	2433	[11887]	GETGLOBAL	R175 K31 ; R175 := mLists
	2434	[11887]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2435	[11887]	SELF     	R175 R175 K247 ; R176 := R175; R175 := R175[0x71e9ac81]
	2436	[11890]	CLOSURE  	R177 5 ; R177 := closure(Function #6)
	2437	[11887]	CALL     	R175 3 1 ; R175(R176,R177)
	2438	[11893]	GETGLOBAL	R175 K31 ; R175 := mLists
	2439	[11893]	GETTABLE 	R175 R175 K248 ; R175 := R175["mCosmeticsScrollBar"]
	2440	[11893]	GETGLOBAL	R176 K31 ; R176 := mLists
	2441	[11893]	GETTABLE 	R176 R176 K248 ; R176 := R176["mCosmeticsScrollBar"]
	2442	[11893]	GETTABLE 	R176 R176 K250 ; R176 := R176["mInitHeight"]
	2443	[11893]	GETUPVAL 	R177 U1 ; R177 := U1
	2444	[11893]	GETTABLE 	R177 R177 K51 ; R177 := R177[0x06d055f9]
	2445	[11893]	GETGLOBAL	R178 K31 ; R178 := mLists
	2446	[11893]	GETTABLE 	R178 R178 K32 ; R178 := R178["mCosmeticsList"]
	2447	[11893]	GETTABLE 	R178 R178 K135 ; R178 := R178["mCurrLevel"]
	2448	[11893]	GETGLOBAL	R179 K31 ; R179 := mLists
	2449	[11893]	GETTABLE 	R179 R179 K32 ; R179 := R179["mCosmeticsList"]
	2450	[11893]	GETTABLE 	R179 R179 K33 ; R179 := R179["DEFAULT"]
	2451	[11893]	EQ       	1 R178 R179 ; if R178 == R179 then PC := 2454
	2452	[11893]	JMP      	2454 ; PC := 2454
	2453	[11893]	OP_LOADBOOL	R178 0 1 ; R178 := false; PC := 2454
	2454	[11893]	OP_LOADBOOL	R178 1 0 ; R178 := true
	2455	[11893]	LOADK    	R179 := 0.000000
	2456	[11893]	LOADK    	R180 := 40.000000
	2457	[11893]	CALL     	R177 4 2 ; R177 := R177(R178,R179,R180)
	2458	[11893]	ADD      	R176 R176 R177 ; R176 := R176 + R177
	2459	[11893]	SETTABLE 	R175 K249 R176 ; R175["mHeight"] := R176
	2460	[11894]	GETGLOBAL	R175 K0 ; R175 := 0xae91e43b
	2461	[11894]	SELF     	R175 R175 K251 ; R176 := R175; R175 := R175[0x67bc869f]
	2462	[11894]	LOADK    	R177 K252 ; R177 := "CosmeticsMenuScrollBar"
	2463	[11894]	LOADK    	R178 := 1.000000
	2464	[11894]	GETGLOBAL	R179 K31 ; R179 := mLists
	2465	[11894]	GETTABLE 	R179 R179 K32 ; R179 := R179["mCosmeticsList"]
	2466	[11894]	GETTABLE 	R179 R179 K253 ; R179 := R179["mInitListYPos"]
	2467	[11894]	GETGLOBAL	R180 K31 ; R180 := mLists
	2468	[11894]	GETTABLE 	R180 R180 K32 ; R180 := R180["mCosmeticsList"]
	2469	[11894]	GETTABLE 	R180 R180 K245 ; R180 := R180["mInitialY"]
	2470	[11894]	ADD      	R179 R179 R180 ; R179 := R179 + R180
	2471	[11894]	SUB      	R179 R179 K254 ; R179 := R179 - 30.000000
	2472	[11894]	CALL     	R175 5 1 ; R175(R176,R177,R178,R179)
	2473	[11895]	GETGLOBAL	R175 K31 ; R175 := mLists
	2474	[11895]	GETTABLE 	R175 R175 K32 ; R175 := R175["mCosmeticsList"]
	2475	[11895]	SELF     	R175 R175 K255 ; R176 := R175; R175 := R175[0x68e36b8d]
	2476	[11895]	NEWTABLE 	R177 0 1 ; R177 := {}
	2477	[11895]	LOADK    	R178 K256 ; R178 := "mIndex"
	2478	[11895]	GETGLOBAL	R179 K31 ; R179 := mLists
	2479	[11895]	GETTABLE 	R179 R179 K32 ; R179 := R179["mCosmeticsList"]
	2480	[11895]	GETTABLE 	R179 R179 K159 ; R179 := R179["mElements"]
	2481	[11895]	LEN      	R179 R179 ; R179 := # R179
	2482	[11895]	LOADK    	R180 := 1.000000
	2483	[11895]	ADD      	R179 R179 R180 ; R179 := R179 + R180
	2484	[11895]	SETTABLE 	R177 R178 R179 ; R177[R178] := R179
	2485	[11895]	CALL     	R175 3 2 ; R175 := R175(R176,R177)
	2486	[11895]	GETGLOBAL	R176 K31 ; R176 := mLists
	2487	[11895]	GETTABLE 	R176 R176 K32 ; R176 := R176["mCosmeticsList"]
	2488	[11895]	GETTABLE 	R176 R176 K245 ; R176 := R176["mInitialY"]
	2489	[11895]	SUB      	R175 R175 R176 ; R175 := R175 - R176
	2490	[11896]	LOADK    	R176 := 30.000000
	2491	[11896]	ADD      	R175 R175 R176 ; R175 := R175 + R176
	2492	[11897]	GETGLOBAL	R176 K31 ; R176 := mLists
	2493	[11897]	GETTABLE 	R176 R176 K248 ; R176 := R176["mCosmeticsScrollBar"]
	2494	[11897]	GETTABLE 	R176 R176 K249 ; R176 := R176["mHeight"]
	2495	[11897]	DIV      	R176 R176 R175 ; R176 := R176 / R175
	2496	[11898]	LOADK    	R177 := 1.000000
	2497	[11898]	LT       	1 R176 R177 ; if R176 < R177 then PC := 2500
	2498	[11898]	JMP      	2500 ; PC := 2500
	2499	[11898]	OP_LOADBOOL	R177 0 1 ; R177 := false; PC := 2500
	2500	[11898]	OP_LOADBOOL	R177 1 0 ; R177 := true
	2501	[11899]	GETGLOBAL	R178 K0 ; R178 := 0xae91e43b
	2502	[11899]	SELF     	R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
	2503	[11899]	LOADK    	R180 K252 ; R180 := "CosmeticsMenuScrollBar"
	2504	[11899]	LOADK    	R181 := 11.000000
	2505	[11899]	MOVE     	R182 R177 ; R182 := R177
	2506	[11899]	CALL     	R178 5 1 ; R178(R179,R180,R181,R182)
	2507	[11901]	GETGLOBAL	R178 K31 ; R178 := mLists
	2508	[11901]	GETTABLE 	R178 R178 K248 ; R178 := R178["mCosmeticsScrollBar"]
	2509	[11901]	LOADK    	R179 K257 ; R179 := "mTotalHeight"
	2510	[11901]	SETTABLE 	R178 R179 R175 ; R178[R179] := R175
	2511	[11902]	GETGLOBAL	R178 K31 ; R178 := mLists
	2512	[11902]	GETTABLE 	R178 R178 K248 ; R178 := R178["mCosmeticsScrollBar"]
	2513	[11902]	LOADK    	R179 K258 ; R179 := "mVisibleProp"
	2514	[11902]	GETUPVAL 	R180 U1 ; R180 := U1
	2515	[11902]	GETTABLE 	R180 R180 K51 ; R180 := R180[0x06d055f9]
	2516	[11902]	MOVE     	R181 R177 ; R181 := R177
	2517	[11902]	MOVE     	R182 R176 ; R182 := R176
	2518	[11902]	LOADK    	R183 := 0.500000
	2519	[11902]	CALL     	R180 4 2 ; R180 := R180(R181,R182,R183)
	2520	[11902]	SETTABLE 	R178 R179 R180 ; R178[R179] := R180
	2521	[11903]	GETGLOBAL	R178 K31 ; R178 := mLists
	2522	[11903]	GETTABLE 	R178 R178 K248 ; R178 := R178["mCosmeticsScrollBar"]
	2523	[11903]	LOADK    	R180 K259 ; R180 := true
	2524	[11903]	SELF     	R178 R178 R180 ; R179 := R178; R178 := R178[R180]
	2525	[11903]	LOADK    	R180 := 0.000000
	2526	[11903]	OP_LOADBOOL	R181 0 0 ; R181 := false
	2527	[11903]	OP_LOADBOOL	R182 1 0 ; R182 := true
	2528	[11903]	CALL     	R178 5 1 ; R178(R179,R180,R181,R182)
	2529	[11904]	GETGLOBAL	R178 K31 ; R178 := mLists
	2530	[11904]	GETTABLE 	R178 R178 K248 ; R178 := R178["mCosmeticsScrollBar"]
	2531	[11904]	LOADK    	R180 K260 ; R180 := true
	2532	[11904]	SELF     	R178 R178 R180 ; R179 := R178; R178 := R178[R180]
	2533	[11904]	CALL     	R178 2 1 ; R178(R179)
	2534	[11905]	GETGLOBAL	R178 K31 ; R178 := mLists
	2535	[11905]	GETTABLE 	R178 R178 K248 ; R178 := R178["mCosmeticsScrollBar"]
	2536	[11905]	LOADK    	R179 K261 ; R179 := "mScrollStep"
	2537	[11905]	LOADK    	R180 := 1.000000
	2538	[11905]	SUB      	R180 R180 R176 ; R180 := R180 - R176
	2539	[11905]	GETGLOBAL	R181 K31 ; R181 := mLists
	2540	[11905]	GETTABLE 	R181 R181 K32 ; R181 := R181["mCosmeticsList"]
	2541	[11905]	GETTABLE 	R181 R181 K159 ; R181 := R181["mElements"]
	2542	[11905]	LEN      	R181 R181 ; R181 := # R181
	2543	[11905]	LOADK    	R182 := 1.000000
	2544	[11905]	ADD      	R181 R181 R182 ; R181 := R181 + R182
	2545	[11905]	MUL      	R180 R180 R181 ; R180 := R180 * R181
	2546	[11905]	LOADK    	R181 := 1.000000
	2547	[11905]	DIV      	R180 R181 R180 ; R180 := R181 / R180
	2548	[11905]	LOADK    	R181 K262 ; R181 := 0.050000
	2549	[11905]	ADD      	R180 R180 R181 ; R180 := R180 + R181
	2550	[11905]	SETTABLE 	R178 R179 R180 ; R178[R179] := R180
	2551	[11906]	GETGLOBAL	R178 K31 ; R178 := mLists
	2552	[11906]	GETTABLE 	R178 R178 K248 ; R178 := R178["mCosmeticsScrollBar"]
	2553	[11906]	LOADK    	R180 K263 ; R180 := true
	2554	[11906]	SELF     	R178 R178 R180 ; R179 := R178; R178 := R178[R180]
	2555	[11906]	MOVE     	R180 R177 ; R180 := R177
	2556	[11906]	CALL     	R178 3 1 ; R178(R179,R180)
	2557	[11907]	GETUPVAL 	R178 U17 ; R178 := U17
	2558	[11907]	CALL     	R178 1 1 ; R178()
	2559	[11909]	GETUPVAL 	R178 U18 ; R178 := U18
	2560	[11909]	LOADK    	R180 K264 ; R180 := true
	2561	[11909]	SELF     	R178 R178 R180 ; R179 := R178; R178 := R178[R180]
	2562	[11912]	CLOSURE  	R180 6 ; R180 := closure(Function #7)
	2563	[11909]	CALL     	R178 3 1 ; R178(R179,R180)
	2564	[11914]	GETGLOBAL	R178 K0 ; R178 := 0xae91e43b
	2565	[11914]	SELF     	R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
	2566	[11914]	LOADK    	R180 K265 ; R180 := "MenuPanel.Left"
	2567	[11914]	LOADK    	R181 := 11.000000
	2568	[11914]	GETGLOBAL	R182 K206 ; R182 := 0x34291f5c
	2569	[11914]	LOADK    	R183 K266 ; R183 := true
	2570	[11914]	GETTABLE 	R182 R182 R183 ; R182 := R182[R183]
	2571	[11914]	CALL     	R182 1 2 ; R182 := R182()
	2572	[11914]	TEST     	R182 0 ; if not R182 then PC := 2584
	2573	[11914]	JMP      	2584 ; PC := 2584
	2574	[11914]	GETGLOBAL	R182 K31 ; R182 := mLists
	2575	[11914]	GETTABLE 	R182 R182 K32 ; R182 := R182["mCosmeticsList"]
	2576	[11914]	GETTABLE 	R182 R182 K135 ; R182 := R182["mCurrLevel"]
	2577	[11914]	GETGLOBAL	R183 K31 ; R183 := mLists
	2578	[11914]	GETTABLE 	R183 R183 K32 ; R183 := R183["mCosmeticsList"]
	2579	[11914]	GETTABLE 	R183 R183 K33 ; R183 := R183["DEFAULT"]
	2580	[11914]	EQ       	1 R182 R183 ; if R182 == R183 then PC := 2583
	2581	[11914]	JMP      	2583 ; PC := 2583
	2582	[11914]	OP_LOADBOOL	R182 0 1 ; R182 := false; PC := 2583
	2583	[11914]	OP_LOADBOOL	R182 1 0 ; R182 := true
	2584	[11914]	CALL     	R178 5 1 ; R178(R179,R180,R181,R182)
	2585	[11915]	GETGLOBAL	R178 K0 ; R178 := 0xae91e43b
	2586	[11915]	SELF     	R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
	2587	[11915]	LOADK    	R180 K267 ; R180 := "MenuPanel.Right"
	2588	[11915]	LOADK    	R181 := 11.000000
	2589	[11915]	GETGLOBAL	R182 K206 ; R182 := 0x34291f5c
	2590	[11915]	LOADK    	R183 K266 ; R183 := true
	2591	[11915]	GETTABLE 	R182 R182 R183 ; R182 := R182[R183]
	2592	[11915]	CALL     	R182 1 2 ; R182 := R182()
	2593	[11915]	TEST     	R182 0 ; if not R182 then PC := 2605
	2594	[11915]	JMP      	2605 ; PC := 2605
	2595	[11915]	GETGLOBAL	R182 K31 ; R182 := mLists
	2596	[11915]	GETTABLE 	R182 R182 K32 ; R182 := R182["mCosmeticsList"]
	2597	[11915]	GETTABLE 	R182 R182 K135 ; R182 := R182["mCurrLevel"]
	2598	[11915]	GETGLOBAL	R183 K31 ; R183 := mLists
	2599	[11915]	GETTABLE 	R183 R183 K32 ; R183 := R183["mCosmeticsList"]
	2600	[11915]	GETTABLE 	R183 R183 K33 ; R183 := R183["DEFAULT"]
	2601	[11915]	EQ       	1 R182 R183 ; if R182 == R183 then PC := 2604
	2602	[11915]	JMP      	2604 ; PC := 2604
	2603	[11915]	OP_LOADBOOL	R182 0 1 ; R182 := false; PC := 2604
	2604	[11915]	OP_LOADBOOL	R182 1 0 ; R182 := true
	2605	[11915]	CALL     	R178 5 1 ; R178(R179,R180,R181,R182)
	2606	[11916]	GETGLOBAL	R178 K0 ; R178 := 0xae91e43b
	2607	[11916]	SELF     	R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
	2608	[11916]	LOADK    	R180 K268 ; R180 := "MenuPanel.LeftArrow"
	2609	[11916]	LOADK    	R181 := 11.000000
	2610	[11916]	GETGLOBAL	R182 K206 ; R182 := 0x34291f5c
	2611	[11916]	LOADK    	R183 K266 ; R183 := true
	2612	[11916]	GETTABLE 	R182 R182 R183 ; R182 := R182[R183]
	2613	[11916]	CALL     	R182 1 2 ; R182 := R182()
	2614	[11916]	TEST     	R182 1 ; if R182 then PC := 2624
	2615	[11916]	JMP      	2624 ; PC := 2624
	2616	[11916]	GETGLOBAL	R182 K31 ; R182 := mLists
	2617	[11916]	GETTABLE 	R182 R182 K32 ; R182 := R182["mCosmeticsList"]
	2618	[11916]	GETTABLE 	R182 R182 K135 ; R182 := R182["mCurrLevel"]
	2619	[11916]	GETGLOBAL	R183 K31 ; R183 := mLists
	2620	[11916]	GETTABLE 	R183 R183 K32 ; R183 := R183["mCosmeticsList"]
	2621	[11916]	GETTABLE 	R183 R183 K33 ; R183 := R183["DEFAULT"]
	2622	[11916]	EQ       	1 R182 R183 ; if R182 == R183 then PC := 2625
	2623	[11916]	JMP      	2625 ; PC := 2625
	2624	[11916]	OP_LOADBOOL	R182 0 1 ; R182 := false; PC := 2625
	2625	[11916]	OP_LOADBOOL	R182 1 0 ; R182 := true
	2626	[11916]	CALL     	R178 5 1 ; R178(R179,R180,R181,R182)
	2627	[11917]	GETGLOBAL	R178 K0 ; R178 := 0xae91e43b
	2628	[11917]	SELF     	R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
	2629	[11917]	LOADK    	R180 K269 ; R180 := "MenuPanel.RightArrow"
	2630	[11917]	LOADK    	R181 := 11.000000
	2631	[11917]	GETGLOBAL	R182 K206 ; R182 := 0x34291f5c
	2632	[11917]	LOADK    	R183 K266 ; R183 := true
	2633	[11917]	GETTABLE 	R182 R182 R183 ; R182 := R182[R183]
	2634	[11917]	CALL     	R182 1 2 ; R182 := R182()
	2635	[11917]	TEST     	R182 1 ; if R182 then PC := 2645
	2636	[11917]	JMP      	2645 ; PC := 2645
	2637	[11917]	GETGLOBAL	R182 K31 ; R182 := mLists
	2638	[11917]	GETTABLE 	R182 R182 K32 ; R182 := R182["mCosmeticsList"]
	2639	[11917]	GETTABLE 	R182 R182 K135 ; R182 := R182["mCurrLevel"]
	2640	[11917]	GETGLOBAL	R183 K31 ; R183 := mLists
	2641	[11917]	GETTABLE 	R183 R183 K32 ; R183 := R183["mCosmeticsList"]
	2642	[11917]	GETTABLE 	R183 R183 K33 ; R183 := R183["DEFAULT"]
	2643	[11917]	EQ       	1 R182 R183 ; if R182 == R183 then PC := 2646
	2644	[11917]	JMP      	2646 ; PC := 2646
	2645	[11917]	OP_LOADBOOL	R182 0 1 ; R182 := false; PC := 2646
	2646	[11917]	OP_LOADBOOL	R182 1 0 ; R182 := true
	2647	[11917]	CALL     	R178 5 1 ; R178(R179,R180,R181,R182)
	2648	[11918]	GETGLOBAL	R178 K0 ; R178 := 0xae91e43b
	2649	[11918]	SELF     	R178 R178 K1 ; R179 := R178; R178 := R178[0xaade900e]
	2650	[11918]	LOADK    	R180 K270 ; R180 := "MenuPanel.Bg"
	2651	[11918]	LOADK    	R181 := 11.000000
	2652	[11918]	GETGLOBAL	R182 K31 ; R182 := mLists
	2653	[11918]	GETTABLE 	R182 R182 K32 ; R182 := R182["mCosmeticsList"]
	2654	[11918]	GETTABLE 	R182 R182 K135 ; R182 := R182["mCurrLevel"]
	2655	[11918]	GETGLOBAL	R183 K31 ; R183 := mLists
	2656	[11918]	GETTABLE 	R183 R183 K32 ; R183 := R183["mCosmeticsList"]
	2657	[11918]	GETTABLE 	R183 R183 K33 ; R183 := R183["DEFAULT"]
	2658	[11918]	EQ       	1 R182 R183 ; if R182 == R183 then PC := 2661
	2659	[11918]	JMP      	2661 ; PC := 2661
	2660	[11918]	OP_LOADBOOL	R182 0 1 ; R182 := false; PC := 2661
	2661	[11918]	OP_LOADBOOL	R182 1 0 ; R182 := true
	2662	[11918]	CALL     	R178 5 1 ; R178(R179,R180,R181,R182)
	2663	[11919]	RETURN   	R0 1 ; return 

function #171 <?:11921,11926> (23 instructions, 92 bytes at 000002111414C240)
1 param, 5 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[11922]	GETGLOBAL	R1 K0 ; R1 := mLists
	2	[11922]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCosmeticsList"]
	3	[11922]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xca30dfb6]
	4	[11922]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	5	[11922]	MOVE     	R4 R0 ; R4 := R0
	6	[11922]	CALL     	R3 2 0 ; R3,... := R3(R4)
	7	[11922]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	8	[11923]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	9	[11923]	MOVE     	R3 R1 ; R3 := R1
	10	[11923]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[11923]	TEST     	R2 1 ; if R2 then PC := 23
	12	[11923]	JMP      	23 ; PC := 23
	13	[11923]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	14	[11923]	GETTABLE 	R3 R1 K5 ; R3 := R1["Value"]
	15	[11923]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[11923]	TEST     	R2 1 ; if R2 then PC := 23
	17	[11923]	JMP      	23 ; PC := 23
	18	[11924]	GETGLOBAL	R2 K0 ; R2 := mLists
	19	[11924]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCosmeticsList"]
	20	[11924]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xaf2cb9be]
	21	[11924]	MOVE     	R3 R1 ; R3 := R1
	22	[11924]	CALL     	R2 2 1 ; R2(R3)
	23	[11926]	RETURN   	R0 1 ; return 

function #172 <?:11928,11936> (24 instructions, 96 bytes at 000002111414C430)
1 param, 6 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[11929]	GETGLOBAL	R1 K0 ; R1 := mLists
	2	[11929]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCosmeticsList"]
	3	[11929]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xca30dfb6]
	4	[11929]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	5	[11929]	MOVE     	R4 R0 ; R4 := R0
	6	[11929]	CALL     	R3 2 0 ; R3,... := R3(R4)
	7	[11929]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	8	[11931]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	9	[11931]	MOVE     	R3 R1 ; R3 := R1
	10	[11931]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[11931]	TEST     	R2 1 ; if R2 then PC := 24
	12	[11931]	JMP      	24 ; PC := 24
	13	[11931]	GETTABLE 	R2 R1 K5 ; R2 := R1["SliderActive"]
	14	[11931]	TEST     	R2 1 ; if R2 then PC := 24
	15	[11931]	JMP      	24 ; PC := 24
	16	[11932]	SETTABLE 	R1 K5 K6 ; R1["SliderActive"] := true
	17	[11933]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	18	[11933]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x91a24e4b]
	19	[11933]	LOADK    	R4 K10 ; R4 := "_root"
	20	[11933]	LOADK    	R5 := 25.000000
	21	[11933]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	22	[11933]	SETTABLE 	R1 K7 R2 ; R1["SliderX"] := R2
	23	[11934]	SETUPVAL 	R0 U0 ; U0 := R0
	24	[11936]	RETURN   	R0 1 ; return 

function #173 <?:11938,11950> (39 instructions, 156 bytes at 000002111414C660)
2 params, 6 slots, 3 upvalues, 0 locals, 12 constants, 0 functions
	1	[11939]	GETGLOBAL	R2 K0 ; R2 := mLists
	2	[11939]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCosmeticsList"]
	3	[11939]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xca30dfb6]
	4	[11939]	GETGLOBAL	R4 K3 ; R4 := 0x03f57322
	5	[11939]	MOVE     	R5 R0 ; R5 := R0
	6	[11939]	CALL     	R4 2 0 ; R4,... := R4(R5)
	7	[11939]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	8	[11940]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	9	[11940]	MOVE     	R4 R2 ; R4 := R2
	10	[11940]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[11940]	TEST     	R3 1 ; if R3 then PC := 39
	12	[11940]	JMP      	39 ; PC := 39
	13	[11940]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	14	[11940]	GETTABLE 	R4 R2 K5 ; R4 := R2["Value"]
	15	[11940]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[11940]	TEST     	R3 1 ; if R3 then PC := 39
	17	[11940]	JMP      	39 ; PC := 39
	18	[11941]	GETTABLE 	R3 R2 K5 ; R3 := R2["Value"]
	19	[11941]	EQ       	1 R3 R1 ; if R3 == R1 then PC := 39
	20	[11941]	JMP      	39 ; PC := 39
	21	[11942]	SETTABLE 	R2 K5 R1 ; R2["Value"] := R1
	22	[11944]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[11944]	GETUPVAL 	R4 U1 ; R4 := U1
	24	[11944]	GETTABLE 	R4 R4 K6 ; R4 := R4["FALSE"]
	25	[11944]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 35
	26	[11944]	JMP      	35 ; PC := 35
	27	[11944]	GETGLOBAL	R3 K0 ; R3 := mLists
	28	[11944]	GETTABLE 	R3 R3 K1 ; R3 := R3["mCosmeticsList"]
	29	[11944]	GETTABLE 	R3 R3 K7 ; R3 := R3["mCurrLevel"]
	30	[11944]	GETGLOBAL	R4 K0 ; R4 := mLists
	31	[11944]	GETTABLE 	R4 R4 K1 ; R4 := R4["mCosmeticsList"]
	32	[11944]	GETTABLE 	R4 R4 K8 ; R4 := R4["HOLSTER_CUSTOMIZATION"]
	33	[11944]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 39
	34	[11944]	JMP      	39 ; PC := 39
	35	[11945]	OP_LOADBOOL	R3 1 0 ; R3 := true
	36	[11945]	SETUPVAL 	R3 U2 ; U2 := R3
	37	[11946]	GETGLOBAL	R3 K9 ; R3 := _T
	38	[11946]	SETTABLE 	R3 K10 K11 ; R3["LoadoutSaveRequired"] := true
	39	[11950]	RETURN   	R0 1 ; return 

function #174 <?:11952,11954> (4 instructions, 16 bytes at 000002111414C920)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[11953]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[11953]	MOVE     	R2 R0 ; R2 := R0
	3	[11953]	CALL     	R1 2 1 ; R1(R2)
	4	[11954]	RETURN   	R0 1 ; return 

function #175 <?:11956,11968> (50 instructions, 200 bytes at 000002111414C9F0)
2 params, 9 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[11957]	GETGLOBAL	R2 K0 ; R2 := mLists
	2	[11957]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCosmeticsList"]
	3	[11957]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xca30dfb6]
	4	[11957]	GETGLOBAL	R4 K3 ; R4 := 0x03f57322
	5	[11957]	MOVE     	R5 R0 ; R5 := R0
	6	[11957]	CALL     	R4 2 0 ; R4,... := R4(R5)
	7	[11957]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	8	[11958]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	9	[11958]	MOVE     	R4 R2 ; R4 := R2
	10	[11958]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[11958]	TEST     	R3 1 ; if R3 then PC := 50
	12	[11958]	JMP      	50 ; PC := 50
	13	[11958]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	14	[11958]	GETTABLE 	R4 R2 K5 ; R4 := R2["Value"]
	15	[11958]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[11958]	TEST     	R3 1 ; if R3 then PC := 50
	17	[11958]	JMP      	50 ; PC := 50
	18	[11959]	SETTABLE 	R2 K6 R1 ; R2["ValueChange"] := R1
	19	[11960]	GETUPVAL 	R3 U0 ; R3 := U0
	20	[11960]	MOVE     	R4 R0 ; R4 := R0
	21	[11960]	GETGLOBAL	R5 K7 ; R5 := 0x42dcc9f5
	22	[11960]	GETTABLE 	R6 R2 K5 ; R6 := R2["Value"]
	23	[11960]	SUB      	R6 R6 K8 ; R6 := R6 - 0.010000
	24	[11960]	LOADK    	R7 := 0.000000
	25	[11960]	LOADK    	R8 := 1.000000
	26	[11960]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	27	[11960]	CALL     	R3 0 1 ; R3(R4,...)
	28	[11961]	LT       	0 K9 R1 ; if 0.000000 >= R1 then PC := 39
	29	[11961]	JMP      	39 ; PC := 39
	30	[11962]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	31	[11962]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xf64b7262]
	32	[11962]	GETTABLE 	R5 R2 K12 ; R5 := R2["mClipName"]
	33	[11962]	LOADK    	R6 K13 ; R6 := "ValueSelector.RightArrow"
	34	[11962]	LOADK    	R7 := 9.000000
	35	[11962]	GETGLOBAL	R8 K14 ; R8 := 0x0032441c
	36	[11962]	GETTABLE 	R8 R8 K15 ; R8 := R8["UIColor_White"]
	37	[11962]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	38	[11962]	JMP      	49 ; PC := 49
	39	[11963]	LT       	0 R1 K9 ; if R1 >= 0.000000 then PC := 49
	40	[11963]	JMP      	49 ; PC := 49
	41	[11964]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	42	[11964]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xf64b7262]
	43	[11964]	GETTABLE 	R5 R2 K12 ; R5 := R2["mClipName"]
	44	[11964]	LOADK    	R6 K16 ; R6 := "ValueSelector.LeftArrow"
	45	[11964]	LOADK    	R7 := 9.000000
	46	[11964]	GETGLOBAL	R8 K14 ; R8 := 0x0032441c
	47	[11964]	GETTABLE 	R8 R8 K15 ; R8 := R8["UIColor_White"]
	48	[11964]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	49	[11966]	SETUPVAL 	R0 U1 ; U1 := R0
	50	[11968]	RETURN   	R0 1 ; return 

function #176 <?:11970,11978> (23 instructions, 92 bytes at 000002111414CD60)
1 param, 6 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[11971]	LOADK    	R1 := 255.000000
	2	[11972]	GETGLOBAL	R2 K0 ; R2 := mLists
	3	[11972]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCosmeticsList"]
	4	[11972]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xca30dfb6]
	5	[11972]	GETGLOBAL	R4 K3 ; R4 := 0x03f57322
	6	[11972]	MOVE     	R5 R0 ; R5 := R0
	7	[11972]	CALL     	R4 2 0 ; R4,... := R4(R5)
	8	[11972]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	9	[11973]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	10	[11973]	MOVE     	R4 R2 ; R4 := R2
	11	[11973]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[11973]	TEST     	R3 1 ; if R3 then PC := 18
	13	[11973]	JMP      	18 ; PC := 18
	14	[11973]	GETTABLE 	R3 R2 K5 ; R3 := R2["NumOptions"]
	15	[11973]	EQ       	1 R3 K6 ; if R3 == nil then PC := 18
	16	[11973]	JMP      	18 ; PC := 18
	17	[11974]	GETTABLE 	R1 R2 K5 ; R1 := R2["NumOptions"]
	18	[11977]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[11977]	MOVE     	R4 R0 ; R4 := R0
	20	[11977]	DIV      	R5 K7 R1 ; R5 := 1.000000 / R1
	21	[11977]	UNM      	R5 R5 ; R5 := ^ R5
	22	[11977]	CALL     	R3 3 1 ; R3(R4,R5)
	23	[11978]	RETURN   	R0 1 ; return 

function #177 <?:11980,11988> (22 instructions, 88 bytes at 000002111414CF60)
1 param, 6 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[11981]	LOADK    	R1 := 255.000000
	2	[11982]	GETGLOBAL	R2 K0 ; R2 := mLists
	3	[11982]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCosmeticsList"]
	4	[11982]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xca30dfb6]
	5	[11982]	GETGLOBAL	R4 K3 ; R4 := 0x03f57322
	6	[11982]	MOVE     	R5 R0 ; R5 := R0
	7	[11982]	CALL     	R4 2 0 ; R4,... := R4(R5)
	8	[11982]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	9	[11983]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	10	[11983]	MOVE     	R4 R2 ; R4 := R2
	11	[11983]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[11983]	TEST     	R3 1 ; if R3 then PC := 18
	13	[11983]	JMP      	18 ; PC := 18
	14	[11983]	GETTABLE 	R3 R2 K5 ; R3 := R2["NumOptions"]
	15	[11983]	EQ       	1 R3 K6 ; if R3 == nil then PC := 18
	16	[11983]	JMP      	18 ; PC := 18
	17	[11984]	GETTABLE 	R1 R2 K5 ; R1 := R2["NumOptions"]
	18	[11987]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[11987]	MOVE     	R4 R0 ; R4 := R0
	20	[11987]	DIV      	R5 K7 R1 ; R5 := 1.000000 / R1
	21	[11987]	CALL     	R3 3 1 ; R3(R4,R5)
	22	[11988]	RETURN   	R0 1 ; return 

function #178 <?:11990,12018> (83 instructions, 332 bytes at 000002111414D160)
1 param, 13 slots, 5 upvalues, 0 locals, 28 constants, 0 functions
	1	[11991]	GETGLOBAL	R1 K0 ; R1 := mLists
	2	[11991]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCosmeticsList"]
	3	[11991]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xca30dfb6]
	4	[11991]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	5	[11991]	MOVE     	R4 R0 ; R4 := R0
	6	[11991]	CALL     	R3 2 0 ; R3,... := R3(R4)
	7	[11991]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	8	[11993]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	9	[11993]	MOVE     	R3 R1 ; R3 := R1
	10	[11993]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[11993]	TEST     	R2 1 ; if R2 then PC := 83
	12	[11993]	JMP      	83 ; PC := 83
	13	[11993]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	14	[11993]	GETTABLE 	R3 R1 K5 ; R3 := R1["Value"]
	15	[11993]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[11993]	TEST     	R2 1 ; if R2 then PC := 83
	17	[11993]	JMP      	83 ; PC := 83
	18	[11994]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	19	[11994]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x91a24e4b]
	20	[11994]	LOADK    	R4 K8 ; R4 := "_root"
	21	[11994]	LOADK    	R5 := 25.000000
	22	[11994]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	23	[11995]	GETUPVAL 	R3 U0 ; R3 := U0
	24	[11995]	GETTABLE 	R3 R3 K9 ; R3 := R3[0xb5be5d4a]
	25	[11995]	GETGLOBAL	R4 K6 ; R4 := 0xae91e43b
	26	[11995]	GETTABLE 	R5 R1 K10 ; R5 := R1["mClipName"]
	27	[11995]	LOADK    	R6 K11 ; R6 := ".ValueSelector.Back"
	28	[11995]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	29	[11995]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	30	[11998]	GETUPVAL 	R5 U1 ; R5 := U1
	31	[11998]	MOVE     	R6 R0 ; R6 := R0
	32	[11998]	SUB      	R7 R2 R3 ; R7 := R2 - R3
	33	[11998]	DIV      	R7 R7 K12 ; R7 := R7 / 143.000000
	34	[11998]	CALL     	R5 3 1 ; R5(R6,R7)
	35	[12000]	GETTABLE 	R5 R1 K5 ; R5 := R1["Value"]
	36	[12001]	GETTABLE 	R6 R1 K13 ; R6 := R1["NumOptions"]
	37	[12001]	EQ       	1 R6 K14 ; if R6 == nil then PC := 48
	38	[12001]	JMP      	48 ; PC := 48
	39	[12002]	GETTABLE 	R6 R1 K13 ; R6 := R1["NumOptions"]
	40	[12002]	MUL      	R5 R5 R6 ; R5 := R5 * R6
	41	[12003]	GETGLOBAL	R6 K15 ; R6 := 0x5bced4c4
	42	[12003]	GETTABLE 	R6 R6 K16 ; R6 := R6[0x55f27c30]
	43	[12003]	ADD      	R7 R5 K17 ; R7 := R5 + 0.500000
	44	[12003]	CALL     	R6 2 2 ; R6 := R6(R7)
	45	[12003]	MOVE     	R5 R6 ; R5 := R6
	46	[12004]	GETTABLE 	R6 R1 K13 ; R6 := R1["NumOptions"]
	47	[12004]	DIV      	R5 R5 R6 ; R5 := R5 / R6
	48	[12007]	GETGLOBAL	R6 K18 ; R6 := 0x42dcc9f5
	49	[12007]	GETUPVAL 	R7 U2 ; R7 := U2
	50	[12007]	GETTABLE 	R7 R7 K19 ; R7 := R7["VS_WIDTH"]
	51	[12007]	MUL      	R7 R7 R5 ; R7 := R7 * R5
	52	[12007]	LOADK    	R8 K20 ; R8 := 0.100000
	53	[12007]	GETUPVAL 	R9 U2 ; R9 := U2
	54	[12007]	GETTABLE 	R9 R9 K19 ; R9 := R9["VS_WIDTH"]
	55	[12007]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	56	[12009]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	57	[12009]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0xf64b7262]
	58	[12009]	GETTABLE 	R9 R1 K10 ; R9 := R1["mClipName"]
	59	[12009]	LOADK    	R10 K22 ; R10 := "ValueSelector.Front"
	60	[12009]	LOADK    	R11 := 12.000000
	61	[12009]	MOVE     	R12 R6 ; R12 := R6
	62	[12009]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	63	[12011]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	64	[12011]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0xf64b7262]
	65	[12011]	GETTABLE 	R9 R1 K10 ; R9 := R1["mClipName"]
	66	[12011]	LOADK    	R10 K23 ; R10 := "ValueSelector.Slider"
	67	[12011]	LOADK    	R11 := 0.000000
	68	[12011]	SUB      	R12 R6 K24 ; R12 := R6 - 74.250000
	69	[12011]	SUB      	R12 R12 K25 ; R12 := R12 - 4.000000
	70	[12011]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	71	[12012]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	72	[12012]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0xf64b7262]
	73	[12012]	GETTABLE 	R9 R1 K10 ; R9 := R1["mClipName"]
	74	[12012]	LOADK    	R10 K26 ; R10 := "ValueSelector.SliderBtn"
	75	[12012]	LOADK    	R11 := 0.000000
	76	[12012]	SUB      	R12 R6 K24 ; R12 := R6 - 74.250000
	77	[12012]	SUB      	R12 R12 K27 ; R12 := R12 - 7.500000
	78	[12012]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	79	[12014]	SETUPVAL 	R0 U3 ; U3 := R0
	80	[12016]	GETUPVAL 	R7 U4 ; R7 := U4
	81	[12016]	MOVE     	R8 R0 ; R8 := R0
	82	[12016]	CALL     	R7 2 1 ; R7(R8)
	83	[12018]	RETURN   	R0 1 ; return 

function #179 <?:12020,12029> (31 instructions, 124 bytes at 000002111414D520)
1 param, 8 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[12021]	GETGLOBAL	R1 K0 ; R1 := mLists
	2	[12021]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCosmeticsList"]
	3	[12021]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xca30dfb6]
	4	[12021]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	5	[12021]	MOVE     	R4 R0 ; R4 := R0
	6	[12021]	CALL     	R3 2 0 ; R3,... := R3(R4)
	7	[12021]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	8	[12022]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	9	[12022]	MOVE     	R3 R1 ; R3 := R1
	10	[12022]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[12022]	TEST     	R2 1 ; if R2 then PC := 31
	12	[12022]	JMP      	31 ; PC := 31
	13	[12023]	SETTABLE 	R1 K5 K6 ; R1["SliderActive"] := false
	14	[12024]	SETTABLE 	R1 K7 K8 ; R1["ValueChange"] := 0.000000
	15	[12026]	GETGLOBAL	R2 K9 ; R2 := 0xae91e43b
	16	[12026]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xf64b7262]
	17	[12026]	GETTABLE 	R4 R1 K11 ; R4 := R1["mClipName"]
	18	[12026]	LOADK    	R5 K12 ; R5 := "ValueSelector.RightArrow"
	19	[12026]	LOADK    	R6 := 9.000000
	20	[12026]	GETGLOBAL	R7 K13 ; R7 := 0x0032441c
	21	[12026]	GETTABLE 	R7 R7 K14 ; R7 := R7["UIColor_Black"]
	22	[12026]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	23	[12027]	GETGLOBAL	R2 K9 ; R2 := 0xae91e43b
	24	[12027]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xf64b7262]
	25	[12027]	GETTABLE 	R4 R1 K11 ; R4 := R1["mClipName"]
	26	[12027]	LOADK    	R5 K15 ; R5 := "ValueSelector.LeftArrow"
	27	[12027]	LOADK    	R6 := 9.000000
	28	[12027]	GETGLOBAL	R7 K13 ; R7 := 0x0032441c
	29	[12027]	GETTABLE 	R7 R7 K14 ; R7 := R7["UIColor_Black"]
	30	[12027]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	31	[12029]	RETURN   	R0 1 ; return 

function #180 <?:12031,12033> (4 instructions, 16 bytes at 000002112BD256B0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[12032]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[12032]	MOVE     	R2 R0 ; R2 := R0
	3	[12032]	CALL     	R1 2 1 ; R1(R2)
	4	[12033]	RETURN   	R0 1 ; return 

function #181 <?:12035,12086> (155 instructions, 620 bytes at 000002112BD25780)
0 params, 14 slots, 6 upvalues, 0 locals, 34 constants, 0 functions
	1	[12036]	GETGLOBAL	R0 K0 ; R0 := mLists
	2	[12036]	GETTABLE 	R0 R0 K1 ; R0 := R0["mCosmeticsList"]
	3	[12036]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xca30dfb6]
	4	[12036]	GETGLOBAL	R2 K3 ; R2 := 0x03f57322
	5	[12036]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[12036]	CALL     	R2 2 0 ; R2,... := R2(R3)
	7	[12036]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	8	[12038]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	9	[12038]	MOVE     	R2 R0 ; R2 := R0
	10	[12038]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[12038]	TEST     	R1 1 ; if R1 then PC := 155
	12	[12038]	JMP      	155 ; PC := 155
	13	[12038]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	14	[12038]	GETTABLE 	R2 R0 K5 ; R2 := R0["Value"]
	15	[12038]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[12038]	TEST     	R1 1 ; if R1 then PC := 155
	17	[12038]	JMP      	155 ; PC := 155
	18	[12038]	GETTABLE 	R1 R0 K6 ; R1 := R0["IsValueSelector"]
	19	[12038]	EQ       	0 R1 K7 ; if R1 ~= true then PC := 155
	20	[12038]	JMP      	155 ; PC := 155
	21	[12040]	GETUPVAL 	R1 U1 ; R1 := U1
	22	[12040]	GETTABLE 	R1 R1 K8 ; R1 := R1["MouseDown"]
	23	[12040]	TEST     	R1 1 ; if R1 then PC := 29
	24	[12040]	JMP      	29 ; PC := 29
	25	[12041]	GETUPVAL 	R1 U2 ; R1 := U2
	26	[12041]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[12041]	CALL     	R1 2 1 ; R1(R2)
	28	[12042]	RETURN   	R0 1 ; return 
	29	[12045]	GETTABLE 	R1 R0 K9 ; R1 := R0["ValueChange"]
	30	[12045]	EQ       	1 R1 K10 ; if R1 == 0.000000 then PC := 89
	31	[12045]	JMP      	89 ; PC := 89
	32	[12046]	GETUPVAL 	R1 U3 ; R1 := U3
	33	[12046]	GETGLOBAL	R2 K3 ; R2 := 0x03f57322
	34	[12046]	GETUPVAL 	R3 U0 ; R3 := U0
	35	[12046]	CALL     	R2 2 2 ; R2 := R2(R3)
	36	[12046]	GETGLOBAL	R3 K11 ; R3 := 0x42dcc9f5
	37	[12046]	GETTABLE 	R4 R0 K5 ; R4 := R0["Value"]
	38	[12046]	GETTABLE 	R5 R0 K9 ; R5 := R0["ValueChange"]
	39	[12046]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	40	[12046]	LOADK    	R5 := 0.000000
	41	[12046]	LOADK    	R6 := 1.000000
	42	[12046]	CALL     	R3 4 0 ; R3,... := R3(R4,R5,R6)
	43	[12046]	CALL     	R1 0 1 ; R1(R2,...)
	44	[12048]	GETTABLE 	R1 R0 K5 ; R1 := R0["Value"]
	45	[12049]	GETTABLE 	R2 R0 K12 ; R2 := R0["NumOptions"]
	46	[12049]	EQ       	1 R2 K13 ; if R2 == nil then PC := 58
	47	[12049]	JMP      	58 ; PC := 58
	48	[12050]	GETTABLE 	R2 R0 K12 ; R2 := R0["NumOptions"]
	49	[12050]	MUL      	R1 R1 R2 ; R1 := R1 * R2
	50	[12051]	GETGLOBAL	R2 K14 ; R2 := 0x5bced4c4
	51	[12051]	GETTABLE 	R2 R2 K15 ; R2 := R2[0x55f27c30]
	52	[12051]	ADD      	R3 R1 K16 ; R3 := R1 + 0.500000
	53	[12051]	CALL     	R2 2 2 ; R2 := R2(R3)
	54	[12051]	MOVE     	R1 R2 ; R1 := R2
	55	[12052]	GETTABLE 	R2 R0 K12 ; R2 := R0["NumOptions"]
	56	[12052]	DIV      	R1 R1 R2 ; R1 := R1 / R2
	57	[12055]	SETTABLE 	R0 K9 K10 ; R0["ValueChange"] := 0.000000
	58	[12058]	GETGLOBAL	R2 K11 ; R2 := 0x42dcc9f5
	59	[12058]	GETUPVAL 	R3 U4 ; R3 := U4
	60	[12058]	GETTABLE 	R3 R3 K17 ; R3 := R3["VS_WIDTH"]
	61	[12058]	MUL      	R3 R3 R1 ; R3 := R3 * R1
	62	[12058]	LOADK    	R4 K18 ; R4 := 0.100000
	63	[12058]	GETUPVAL 	R5 U4 ; R5 := U4
	64	[12058]	GETTABLE 	R5 R5 K17 ; R5 := R5["VS_WIDTH"]
	65	[12058]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	66	[12059]	GETGLOBAL	R3 K19 ; R3 := 0xae91e43b
	67	[12059]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xf64b7262]
	68	[12059]	GETTABLE 	R5 R0 K21 ; R5 := R0["mClipName"]
	69	[12059]	LOADK    	R6 K22 ; R6 := "ValueSelector.Front"
	70	[12059]	LOADK    	R7 := 12.000000
	71	[12059]	MOVE     	R8 R2 ; R8 := R2
	72	[12059]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	73	[12061]	GETGLOBAL	R3 K19 ; R3 := 0xae91e43b
	74	[12061]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xf64b7262]
	75	[12061]	GETTABLE 	R5 R0 K21 ; R5 := R0["mClipName"]
	76	[12061]	LOADK    	R6 K23 ; R6 := "ValueSelector.Slider"
	77	[12061]	LOADK    	R7 := 0.000000
	78	[12061]	SUB      	R8 R2 K24 ; R8 := R2 - 74.250000
	79	[12061]	SUB      	R8 R8 K25 ; R8 := R8 - 4.000000
	80	[12061]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	81	[12062]	GETGLOBAL	R3 K19 ; R3 := 0xae91e43b
	82	[12062]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xf64b7262]
	83	[12062]	GETTABLE 	R5 R0 K21 ; R5 := R0["mClipName"]
	84	[12062]	LOADK    	R6 K26 ; R6 := "ValueSelector.SliderBtn"
	85	[12062]	LOADK    	R7 := 0.000000
	86	[12062]	SUB      	R8 R2 K24 ; R8 := R2 - 74.250000
	87	[12062]	SUB      	R8 R8 K27 ; R8 := R8 - 7.500000
	88	[12062]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	89	[12065]	GETTABLE 	R3 R0 K28 ; R3 := R0["SliderActive"]
	90	[12065]	TEST     	R3 0 ; if not R3 then PC := 155
	91	[12065]	JMP      	155 ; PC := 155
	92	[12066]	GETGLOBAL	R3 K19 ; R3 := 0xae91e43b
	93	[12066]	SELF     	R3 R3 K29 ; R4 := R3; R3 := R3[0x91a24e4b]
	94	[12066]	LOADK    	R5 K30 ; R5 := "_root"
	95	[12066]	LOADK    	R6 := 25.000000
	96	[12066]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	97	[12067]	GETUPVAL 	R4 U5 ; R4 := U5
	98	[12067]	GETTABLE 	R4 R4 K31 ; R4 := R4[0xb5be5d4a]
	99	[12067]	GETGLOBAL	R5 K19 ; R5 := 0xae91e43b
	100	[12067]	GETTABLE 	R6 R0 K21 ; R6 := R0["mClipName"]
	101	[12067]	LOADK    	R7 K32 ; R7 := ".ValueSelector.Back"
	102	[12067]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	103	[12067]	CALL     	R4 3 3 ; R4,R5 := R4(R5,R6)
	104	[12070]	GETUPVAL 	R6 U3 ; R6 := U3
	105	[12070]	GETGLOBAL	R7 K3 ; R7 := 0x03f57322
	106	[12070]	GETUPVAL 	R8 U0 ; R8 := U0
	107	[12070]	CALL     	R7 2 2 ; R7 := R7(R8)
	108	[12070]	SUB      	R8 R3 R4 ; R8 := R3 - R4
	109	[12070]	DIV      	R8 R8 K33 ; R8 := R8 / 143.000000
	110	[12070]	CALL     	R6 3 1 ; R6(R7,R8)
	111	[12072]	GETTABLE 	R6 R0 K5 ; R6 := R0["Value"]
	112	[12073]	GETTABLE 	R7 R0 K12 ; R7 := R0["NumOptions"]
	113	[12073]	EQ       	1 R7 K13 ; if R7 == nil then PC := 124
	114	[12073]	JMP      	124 ; PC := 124
	115	[12074]	GETTABLE 	R7 R0 K12 ; R7 := R0["NumOptions"]
	116	[12074]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	117	[12075]	GETGLOBAL	R7 K14 ; R7 := 0x5bced4c4
	118	[12075]	GETTABLE 	R7 R7 K15 ; R7 := R7[0x55f27c30]
	119	[12075]	ADD      	R8 R6 K16 ; R8 := R6 + 0.500000
	120	[12075]	CALL     	R7 2 2 ; R7 := R7(R8)
	121	[12075]	MOVE     	R6 R7 ; R6 := R7
	122	[12076]	GETTABLE 	R7 R0 K12 ; R7 := R0["NumOptions"]
	123	[12076]	DIV      	R6 R6 R7 ; R6 := R6 / R7
	124	[12079]	GETGLOBAL	R7 K11 ; R7 := 0x42dcc9f5
	125	[12079]	GETUPVAL 	R8 U4 ; R8 := U4
	126	[12079]	GETTABLE 	R8 R8 K17 ; R8 := R8["VS_WIDTH"]
	127	[12079]	MUL      	R8 R8 R6 ; R8 := R8 * R6
	128	[12079]	LOADK    	R9 K18 ; R9 := 0.100000
	129	[12079]	GETUPVAL 	R10 U4 ; R10 := U4
	130	[12079]	GETTABLE 	R10 R10 K17 ; R10 := R10["VS_WIDTH"]
	131	[12079]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	132	[12080]	GETGLOBAL	R8 K19 ; R8 := 0xae91e43b
	133	[12080]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0xf64b7262]
	134	[12080]	GETTABLE 	R10 R0 K21 ; R10 := R0["mClipName"]
	135	[12080]	LOADK    	R11 K22 ; R11 := "ValueSelector.Front"
	136	[12080]	LOADK    	R12 := 12.000000
	137	[12080]	MOVE     	R13 R7 ; R13 := R7
	138	[12080]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	139	[12082]	GETGLOBAL	R8 K19 ; R8 := 0xae91e43b
	140	[12082]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0xf64b7262]
	141	[12082]	GETTABLE 	R10 R0 K21 ; R10 := R0["mClipName"]
	142	[12082]	LOADK    	R11 K23 ; R11 := "ValueSelector.Slider"
	143	[12082]	LOADK    	R12 := 0.000000
	144	[12082]	SUB      	R13 R7 K24 ; R13 := R7 - 74.250000
	145	[12082]	SUB      	R13 R13 K25 ; R13 := R13 - 4.000000
	146	[12082]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	147	[12083]	GETGLOBAL	R8 K19 ; R8 := 0xae91e43b
	148	[12083]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0xf64b7262]
	149	[12083]	GETTABLE 	R10 R0 K21 ; R10 := R0["mClipName"]
	150	[12083]	LOADK    	R11 K26 ; R11 := "ValueSelector.SliderBtn"
	151	[12083]	LOADK    	R12 := 0.000000
	152	[12083]	SUB      	R13 R7 K24 ; R13 := R7 - 74.250000
	153	[12083]	SUB      	R13 R13 K27 ; R13 := R13 - 7.500000
	154	[12083]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	155	[12086]	RETURN   	R0 1 ; return 

function #182 <?:12088,12223> (457 instructions, 1828 bytes at 000002112BD25F40)
3 params, 17 slots, 10 upvalues, 0 locals, 73 constants, 0 functions
	1	[12089]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[12089]	GETTABLE 	R3 R3 K0 ; R3 := R3["Current"]
	3	[12089]	EQ       	1 R3 K2 ; if R3 == 3.000000 then PC := 6
	4	[12089]	JMP      	6 ; PC := 6
	5	[12089]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 6
	6	[12089]	OP_LOADBOOL	R3 1 0 ; R3 := true
	7	[12090]	EQ       	1 R1 K3 ; if R1 == nil then PC := 23
	8	[12090]	JMP      	23 ; PC := 23
	9	[12091]	TEST     	R3 0 ; if not R3 then PC := 22
	10	[12091]	JMP      	22 ; PC := 22
	11	[12091]	GETTABLE 	R4 R1 K4 ; R4 := R1["LoadOutId"]
	12	[12091]	EQ       	1 R4 K3 ; if R4 == nil then PC := 21
	13	[12091]	JMP      	21 ; PC := 21
	14	[12091]	GETTABLE 	R4 R1 K5 ; R4 := R1["LoadOutType"]
	15	[12091]	EQ       	1 R4 K6 ; if R4 == 8.000000 then PC := 21
	16	[12091]	JMP      	21 ; PC := 21
	17	[12091]	GETTABLE 	R4 R1 K4 ; R4 := R1["LoadOutId"]
	18	[12091]	EQ       	0 R4 K7 ; if R4 ~= 4.000000 then PC := 21
	19	[12091]	JMP      	21 ; PC := 21
	20	[12091]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 21
	21	[12091]	OP_LOADBOOL	R3 1 0 ; R3 := true
	22	[12091]	JMP      	41 ; PC := 41
	23	[12092]	TEST     	R0 0 ; if not R0 then PC := 41
	24	[12092]	JMP      	41 ; PC := 41
	25	[12093]	TEST     	R3 0 ; if not R3 then PC := 41
	26	[12093]	JMP      	41 ; PC := 41
	27	[12093]	GETGLOBAL	R4 K8 ; R4 := _T
	28	[12093]	GETTABLE 	R4 R4 K9 ; R4 := R4["upgradeItemSlot"]
	29	[12093]	EQ       	1 R4 K3 ; if R4 == nil then PC := 40
	30	[12093]	JMP      	40 ; PC := 40
	31	[12093]	GETGLOBAL	R4 K8 ; R4 := _T
	32	[12093]	GETTABLE 	R4 R4 K10 ; R4 := R4["upgradeItemLot"]
	33	[12093]	EQ       	1 R4 K6 ; if R4 == 8.000000 then PC := 40
	34	[12093]	JMP      	40 ; PC := 40
	35	[12093]	GETGLOBAL	R4 K8 ; R4 := _T
	36	[12093]	GETTABLE 	R4 R4 K9 ; R4 := R4["upgradeItemSlot"]
	37	[12093]	EQ       	0 R4 K7 ; if R4 ~= 4.000000 then PC := 40
	38	[12093]	JMP      	40 ; PC := 40
	39	[12093]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 40
	40	[12093]	OP_LOADBOOL	R3 1 0 ; R3 := true
	41	[12095]	TEST     	R2 0 ; if not R2 then PC := 69
	42	[12095]	JMP      	69 ; PC := 69
	43	[12096]	TEST     	R3 0 ; if not R3 then PC := 54
	44	[12096]	JMP      	54 ; PC := 54
	45	[12097]	GETUPVAL 	R4 U1 ; R4 := U1
	46	[12097]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x659d451f]
	47	[12097]	GETGLOBAL	R5 K12 ; R5 := 0xf32c4c64
	48	[12097]	CALL     	R4 2 1 ; R4(R5)
	49	[12098]	GETGLOBAL	R4 K8 ; R4 := _T
	50	[12098]	SETTABLE 	R4 K13 K14 ; R4["previousConsoleTag"] := "Arsenal"
	51	[12099]	OP_LOADBOOL	R4 1 0 ; R4 := true
	52	[12099]	SETUPVAL 	R4 U2 ; U2 := R4
	53	[12099]	JMP      	65 ; PC := 65
	54	[12101]	GETUPVAL 	R4 U1 ; R4 := U1
	55	[12101]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x659d451f]
	56	[12101]	GETGLOBAL	R5 K15 ; R5 := 0x69f76352
	57	[12101]	CALL     	R4 2 1 ; R4(R5)
	58	[12102]	GETUPVAL 	R4 U3 ; R4 := U3
	59	[12102]	GETUPVAL 	R5 U4 ; R5 := U4
	60	[12102]	GETTABLE 	R5 R5 K16 ; R5 := R5["UI_MODE_IN_SPACE_SHIP"]
	61	[12102]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 65
	62	[12102]	JMP      	65 ; PC := 65
	63	[12103]	GETGLOBAL	R4 K8 ; R4 := _T
	64	[12103]	SETTABLE 	R4 K13 K3 ; R4["previousConsoleTag"] := nil
	65	[12107]	GETUPVAL 	R4 U5 ; R4 := U5
	66	[12107]	CALL     	R4 1 1 ; R4()
	67	[12109]	GETGLOBAL	R4 K17 ; R4 := mSelected
	68	[12109]	SETTABLE 	R4 K18 K3 ; R4["Element"] := nil
	69	[12112]	GETGLOBAL	R4 K19 ; R4 := 0x89326c93
	70	[12112]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xfb64e76c]
	71	[12112]	CALL     	R4 2 2 ; R4 := R4(R5)
	72	[12113]	GETGLOBAL	R5 K21 ; R5 := 0x7b998233
	73	[12113]	MOVE     	R6 R4 ; R6 := R4
	74	[12113]	CALL     	R5 2 2 ; R5 := R5(R6)
	75	[12113]	TEST     	R5 1 ; if R5 then PC := 91
	76	[12113]	JMP      	91 ; PC := 91
	77	[12113]	GETGLOBAL	R5 K21 ; R5 := 0x7b998233
	78	[12113]	SELF     	R6 R4 K22 ; R7 := R4; R6 := R4[0x5578d98b]
	79	[12113]	CALL     	R6 2 0 ; R6,... := R6(R7)
	80	[12113]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	81	[12113]	TEST     	R5 1 ; if R5 then PC := 91
	82	[12113]	JMP      	91 ; PC := 91
	83	[12113]	GETGLOBAL	R5 K21 ; R5 := 0x7b998233
	84	[12113]	SELF     	R6 R4 K22 ; R7 := R4; R6 := R4[0x5578d98b]
	85	[12113]	CALL     	R6 2 2 ; R6 := R6(R7)
	86	[12113]	SELF     	R6 R6 K23 ; R7 := R6; R6 := R6[0x5e651723]
	87	[12113]	CALL     	R6 2 0 ; R6,... := R6(R7)
	88	[12113]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	89	[12113]	NOT      	R5 R5 ; R5 := not R5
	90	[12113]	JMP      	93 ; PC := 93
	91	[12113]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 92
	92	[12113]	OP_LOADBOOL	R5 1 0 ; R5 := true
	93	[12114]	GETGLOBAL	R6 K8 ; R6 := _T
	94	[12114]	GETTABLE 	R6 R6 K24 ; R6 := R6["MenuSuitAvatar"]
	95	[12115]	GETGLOBAL	R7 K19 ; R7 := 0x89326c93
	96	[12115]	SELF     	R7 R7 K25 ; R8 := R7; R7 := R7[0x78298275]
	97	[12115]	CALL     	R7 2 2 ; R7 := R7(R8)
	98	[12115]	SELF     	R7 R7 K26 ; R8 := R7; R7 := R7[0x0b4bcfb6]
	99	[12115]	CALL     	R7 2 2 ; R7 := R7(R8)
	100	[12116]	TEST     	R5 0 ; if not R5 then PC := 107
	101	[12116]	JMP      	107 ; PC := 107
	102	[12117]	SELF     	R8 R4 K22 ; R9 := R4; R8 := R4[0x5578d98b]
	103	[12117]	CALL     	R8 2 2 ; R8 := R8(R9)
	104	[12117]	SELF     	R8 R8 K26 ; R9 := R8; R8 := R8[0x0b4bcfb6]
	105	[12117]	CALL     	R8 2 2 ; R8 := R8(R9)
	106	[12117]	MOVE     	R7 R8 ; R7 := R8
	107	[12120]	TEST     	R5 0 ; if not R5 then PC := 120
	108	[12120]	JMP      	120 ; PC := 120
	109	[12121]	TEST     	R3 0 ; if not R3 then PC := 116
	110	[12121]	JMP      	116 ; PC := 116
	111	[12122]	GETGLOBAL	R8 K19 ; R8 := 0x89326c93
	112	[12122]	SELF     	R8 R8 K27 ; R9 := R8; R8 := R8[0x55684e45]
	113	[12122]	MOVE     	R10 R6 ; R10 := R6
	114	[12122]	CALL     	R8 3 1 ; R8(R9,R10)
	115	[12122]	JMP      	120 ; PC := 120
	116	[12124]	GETGLOBAL	R8 K19 ; R8 := 0x89326c93
	117	[12124]	SELF     	R8 R8 K28 ; R9 := R8; R8 := R8[0x51d7cb5b]
	118	[12124]	MOVE     	R10 R6 ; R10 := R6
	119	[12124]	CALL     	R8 3 1 ; R8(R9,R10)
	120	[12128]	GETGLOBAL	R8 K21 ; R8 := 0x7b998233
	121	[12128]	MOVE     	R9 R6 ; R9 := R6
	122	[12128]	CALL     	R8 2 2 ; R8 := R8(R9)
	123	[12128]	TEST     	R8 1 ; if R8 then PC := 457
	124	[12128]	JMP      	457 ; PC := 457
	125	[12129]	TEST     	R2 0 ; if not R2 then PC := 148
	126	[12129]	JMP      	148 ; PC := 148
	127	[12130]	SELF     	R8 R6 K29 ; R9 := R6; R8 := R6[0xde321e6f]
	128	[12130]	CALL     	R8 2 2 ; R8 := R8(R9)
	129	[12130]	SELF     	R8 R8 K30 ; R9 := R8; R8 := R8[0x374b084a]
	130	[12130]	CALL     	R8 2 1 ; R8(R9)
	131	[12131]	GETUPVAL 	R8 U6 ; R8 := U6
	132	[12131]	GETUPVAL 	R9 U0 ; R9 := U0
	133	[12131]	GETTABLE 	R9 R9 K0 ; R9 := R9["Current"]
	134	[12131]	EQ       	1 R9 K31 ; if R9 == 2.000000 then PC := 137
	135	[12131]	JMP      	137 ; PC := 137
	136	[12131]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 137
	137	[12131]	OP_LOADBOOL	R9 1 0 ; R9 := true
	138	[12131]	CALL     	R8 2 1 ; R8(R9)
	139	[12132]	GETGLOBAL	R8 K21 ; R8 := 0x7b998233
	140	[12132]	GETUPVAL 	R9 U7 ; R9 := U7
	141	[12132]	CALL     	R8 2 2 ; R8 := R8(R9)
	142	[12132]	TEST     	R8 0 ; if not R8 then PC := 148
	143	[12132]	JMP      	148 ; PC := 148
	144	[12133]	SELF     	R8 R6 K29 ; R9 := R6; R8 := R6[0xde321e6f]
	145	[12133]	CALL     	R8 2 2 ; R8 := R8(R9)
	146	[12133]	SELF     	R8 R8 K32 ; R9 := R8; R8 := R8[0x0c277ae1]
	147	[12133]	CALL     	R8 2 1 ; R8(R9)
	148	[12137]	GETUPVAL 	R8 U8 ; R8 := U8
	149	[12137]	GETTABLE 	R8 R8 K33 ; R8 := R8[0xcfd657f3]
	150	[12137]	MOVE     	R9 R6 ; R9 := R6
	151	[12137]	MOVE     	R10 R3 ; R10 := R3
	152	[12137]	CALL     	R8 3 1 ; R8(R9,R10)
	153	[12139]	TEST     	R3 0 ; if not R3 then PC := 335
	154	[12139]	JMP      	335 ; PC := 335
	155	[12140]	TEST     	R0 1 ; if R0 then PC := 162
	156	[12140]	JMP      	162 ; PC := 162
	157	[12141]	GETGLOBAL	R8 K8 ; R8 := _T
	158	[12141]	GETTABLE 	R8 R8 K34 ; R8 := R8["suitTable"]
	159	[12141]	SELF     	R9 R6 K36 ; R10 := R6; R9 := R6[0xd1586535]
	160	[12141]	CALL     	R9 2 2 ; R9 := R9(R10)
	161	[12141]	SETTABLE 	R8 K35 R9 ; R8["prevPos"] := R9
	162	[12143]	GETGLOBAL	R8 K21 ; R8 := 0x7b998233
	163	[12143]	GETGLOBAL	R9 K8 ; R9 := _T
	164	[12143]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	165	[12143]	GETTABLE 	R9 R9 K37 ; R9 := R9["positions"]
	166	[12143]	CALL     	R8 2 2 ; R8 := R8(R9)
	167	[12143]	TEST     	R8 0 ; if not R8 then PC := 173
	168	[12143]	JMP      	173 ; PC := 173
	169	[12144]	GETGLOBAL	R8 K8 ; R8 := _T
	170	[12144]	GETTABLE 	R8 R8 K34 ; R8 := R8["suitTable"]
	171	[12144]	NEWTABLE 	R9 0 0 ; R9 := {}
	172	[12144]	SETTABLE 	R8 K37 R9 ; R8["positions"] := R9
	173	[12146]	GETUPVAL 	R8 U8 ; R8 := U8
	174	[12146]	GETTABLE 	R8 R8 K38 ; R8 := R8[0x09b8fbee]
	175	[12146]	SELF     	R9 R6 K36 ; R10 := R6; R9 := R6[0xd1586535]
	176	[12146]	CALL     	R9 2 0 ; R9,... := R9(R10)
	177	[12146]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	178	[12147]	GETGLOBAL	R9 K21 ; R9 := 0x7b998233
	179	[12147]	MOVE     	R10 R8 ; R10 := R8
	180	[12147]	CALL     	R9 2 2 ; R9 := R9(R10)
	181	[12147]	TEST     	R9 1 ; if R9 then PC := 298
	182	[12147]	JMP      	298 ; PC := 298
	183	[12149]	GETGLOBAL	R9 K8 ; R9 := _T
	184	[12149]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	185	[12149]	SETTABLE 	R9 K39 K3 ; R9["desiredPos"] := nil
	186	[12150]	GETGLOBAL	R9 K8 ; R9 := _T
	187	[12150]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	188	[12150]	GETGLOBAL	R10 K8 ; R10 := _T
	189	[12150]	GETTABLE 	R10 R10 K41 ; R10 := R10["ARCHWING_DEFAULT_ROTATION"]
	190	[12150]	SETTABLE 	R9 K40 R10 ; R9["desiredRot"] := R10
	191	[12151]	GETGLOBAL	R9 K8 ; R9 := _T
	192	[12151]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	193	[12151]	GETGLOBAL	R10 K8 ; R10 := _T
	194	[12151]	GETTABLE 	R10 R10 K41 ; R10 := R10["ARCHWING_DEFAULT_ROTATION"]
	195	[12151]	SETTABLE 	R9 K42 R10 ; R9[0x5f56eeab] := R10
	196	[12153]	GETGLOBAL	R9 K8 ; R9 := _T
	197	[12153]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	198	[12153]	GETTABLE 	R9 R9 K37 ; R9 := R9["positions"]
	199	[12153]	SELF     	R10 R6 K43 ; R11 := R6; R10 := R6[0x388577d5]
	200	[12153]	CALL     	R10 2 2 ; R10 := R10(R11)
	201	[12153]	SELF     	R11 R8 K36 ; R12 := R8; R11 := R8[0xd1586535]
	202	[12153]	CALL     	R11 2 2 ; R11 := R11(R12)
	203	[12153]	SETTABLE 	R9 R10 R11 ; R9[R10] := R11
	204	[12155]	GETGLOBAL	R9 K21 ; R9 := 0x7b998233
	205	[12155]	GETGLOBAL	R10 K8 ; R10 := _T
	206	[12155]	GETTABLE 	R10 R10 K44 ; R10 := R10["KDriveAvatar"]
	207	[12155]	CALL     	R9 2 2 ; R9 := R9(R10)
	208	[12155]	TEST     	R9 1 ; if R9 then PC := 226
	209	[12155]	JMP      	226 ; PC := 226
	210	[12156]	GETGLOBAL	R9 K8 ; R9 := _T
	211	[12156]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	212	[12156]	GETTABLE 	R9 R9 K37 ; R9 := R9["positions"]
	213	[12156]	GETGLOBAL	R10 K8 ; R10 := _T
	214	[12156]	GETTABLE 	R10 R10 K44 ; R10 := R10["KDriveAvatar"]
	215	[12156]	SELF     	R10 R10 K43 ; R11 := R10; R10 := R10[0x388577d5]
	216	[12156]	CALL     	R10 2 2 ; R10 := R10(R11)
	217	[12156]	SELF     	R11 R8 K36 ; R12 := R8; R11 := R8[0xd1586535]
	218	[12156]	CALL     	R11 2 2 ; R11 := R11(R12)
	219	[12156]	GETGLOBAL	R12 K45 ; R12 := 0xa421af95
	220	[12156]	LOADK    	R13 := 0.500000
	221	[12156]	LOADK    	R14 := -0.500000
	222	[12156]	LOADK    	R15 := 0.000000
	223	[12156]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	224	[12156]	ADD      	R11 R11 R12 ; R11 := R11 + R12
	225	[12156]	SETTABLE 	R9 R10 R11 ; R9[R10] := R11
	226	[12159]	GETGLOBAL	R9 K21 ; R9 := 0x7b998233
	227	[12159]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	228	[12159]	GETTABLE 	R10 R10 K47 ; R10 := R10["rootNodeEntity"]
	229	[12159]	CALL     	R9 2 2 ; R9 := R9(R10)
	230	[12159]	TEST     	R9 0 ; if not R9 then PC := 236
	231	[12159]	JMP      	236 ; PC := 236
	232	[12160]	GETGLOBAL	R9 K46 ; R9 := mCameraTable
	233	[12160]	GETGLOBAL	R10 K8 ; R10 := _T
	234	[12160]	GETTABLE 	R10 R10 K24 ; R10 := R10["MenuSuitAvatar"]
	235	[12160]	SETTABLE 	R9 K47 R10 ; R9["rootNodeEntity"] := R10
	236	[12163]	GETGLOBAL	R9 K46 ; R9 := mCameraTable
	237	[12163]	GETUPVAL 	R10 U9 ; R10 := U9
	238	[12163]	GETTABLE 	R10 R10 K49 ; R10 := R10["ARCHWING_CAMERA"]
	239	[12163]	SETTABLE 	R9 K48 R10 ; R9[0x34291f5c] := R10
	240	[12164]	GETGLOBAL	R9 K46 ; R9 := mCameraTable
	241	[12164]	GETGLOBAL	R10 K19 ; R10 := 0x89326c93
	242	[12164]	SELF     	R10 R10 K51 ; R11 := R10; R10 := R10[0x46a0ebf5]
	243	[12164]	GETGLOBAL	R12 K52 ; R12 := 0x0469f296
	244	[12164]	GETUPVAL 	R13 U9 ; R13 := U9
	245	[12164]	GETTABLE 	R13 R13 K49 ; R13 := R13["ARCHWING_CAMERA"]
	246	[12164]	CALL     	R12 2 0 ; R12,... := R12(R13)
	247	[12164]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	248	[12164]	SETTABLE 	R9 K50 R10 ; R9["camera"] := R10
	249	[12165]	GETGLOBAL	R9 K46 ; R9 := mCameraTable
	250	[12165]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	251	[12165]	GETTABLE 	R10 R10 K50 ; R10 := R10["camera"]
	252	[12165]	SELF     	R10 R10 K36 ; R11 := R10; R10 := R10[0xd1586535]
	253	[12165]	CALL     	R10 2 2 ; R10 := R10(R11)
	254	[12165]	SETTABLE 	R9 K53 R10 ; R9["orgPosition"] := R10
	255	[12166]	GETGLOBAL	R9 K46 ; R9 := mCameraTable
	256	[12166]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	257	[12166]	GETTABLE 	R10 R10 K50 ; R10 := R10["camera"]
	258	[12166]	SELF     	R10 R10 K55 ; R11 := R10; R10 := R10[0xcb3851b8]
	259	[12166]	CALL     	R10 2 2 ; R10 := R10(R11)
	260	[12166]	SETTABLE 	R9 K54 R10 ; R9["orgRotation"] := R10
	261	[12167]	GETGLOBAL	R9 K46 ; R9 := mCameraTable
	262	[12167]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	263	[12167]	GETTABLE 	R10 R10 K50 ; R10 := R10["camera"]
	264	[12167]	SELF     	R10 R10 K57 ; R11 := R10; R10 := R10[0xaac2f3a5]
	265	[12167]	CALL     	R10 2 2 ; R10 := R10(R11)
	266	[12167]	SETTABLE 	R9 K56 R10 ; R9["orgFOV"] := R10
	267	[12168]	GETGLOBAL	R9 K46 ; R9 := mCameraTable
	268	[12168]	SETTABLE 	R9 K58 K3 ; R9["destFov"] := nil
	269	[12170]	GETGLOBAL	R9 K21 ; R9 := 0x7b998233
	270	[12170]	MOVE     	R10 R7 ; R10 := R7
	271	[12170]	CALL     	R9 2 2 ; R9 := R9(R10)
	272	[12170]	TEST     	R9 1 ; if R9 then PC := 287
	273	[12170]	JMP      	287 ; PC := 287
	274	[12171]	SELF     	R9 R7 K59 ; R10 := R7; R9 := R7[0xa72afc7e]
	275	[12171]	CALL     	R9 2 2 ; R9 := R9(R10)
	276	[12172]	SELF     	R10 R7 K60 ; R11 := R7; R10 := R7[0x68f07b6a]
	277	[12172]	LOADK    	R12 K61 ; R12 := 0.010000
	278	[12172]	CALL     	R10 3 1 ; R10(R11,R12)
	279	[12173]	SELF     	R10 R7 K62 ; R11 := R7; R10 := R7[0x14c7f7dd]
	280	[12173]	GETGLOBAL	R12 K46 ; R12 := mCameraTable
	281	[12173]	GETTABLE 	R12 R12 K50 ; R12 := R12["camera"]
	282	[12173]	LOADK    	R13 := 0.000000
	283	[12173]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	284	[12174]	SELF     	R10 R7 K60 ; R11 := R7; R10 := R7[0x68f07b6a]
	285	[12174]	MOVE     	R12 R9 ; R12 := R9
	286	[12174]	CALL     	R10 3 1 ; R10(R11,R12)
	287	[12176]	GETGLOBAL	R10 K21 ; R10 := 0x7b998233
	288	[12176]	GETGLOBAL	R11 K63 ; R11 := mArsenalConsole
	289	[12176]	CALL     	R10 2 2 ; R10 := R10(R11)
	290	[12176]	TEST     	R10 1 ; if R10 then PC := 457
	291	[12176]	JMP      	457 ; PC := 457
	292	[12177]	GETGLOBAL	R10 K63 ; R10 := mArsenalConsole
	293	[12177]	SELF     	R10 R10 K64 ; R11 := R10; R10 := R10[0x0e684fdd]
	294	[12177]	GETGLOBAL	R12 K46 ; R12 := mCameraTable
	295	[12177]	GETTABLE 	R12 R12 K50 ; R12 := R12["camera"]
	296	[12177]	CALL     	R10 3 1 ; R10(R11,R12)
	297	[12178]	JMP      	457 ; PC := 457
	298	[12180]	GETGLOBAL	R10 K8 ; R10 := _T
	299	[12180]	GETTABLE 	R10 R10 K34 ; R10 := R10["suitTable"]
	300	[12180]	GETTABLE 	R10 R10 K37 ; R10 := R10["positions"]
	301	[12180]	SELF     	R11 R6 K43 ; R12 := R6; R11 := R6[0x388577d5]
	302	[12180]	CALL     	R11 2 2 ; R11 := R11(R12)
	303	[12180]	SELF     	R12 R6 K36 ; R13 := R6; R12 := R6[0xd1586535]
	304	[12180]	CALL     	R12 2 2 ; R12 := R12(R13)
	305	[12180]	GETGLOBAL	R13 K45 ; R13 := 0xa421af95
	306	[12180]	LOADK    	R14 := 0.000000
	307	[12180]	LOADK    	R15 := 0.750000
	308	[12180]	LOADK    	R16 := 0.000000
	309	[12180]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	310	[12180]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	311	[12180]	SETTABLE 	R10 R11 R12 ; R10[R11] := R12
	312	[12181]	GETGLOBAL	R10 K21 ; R10 := 0x7b998233
	313	[12181]	GETGLOBAL	R11 K8 ; R11 := _T
	314	[12181]	GETTABLE 	R11 R11 K44 ; R11 := R11["KDriveAvatar"]
	315	[12181]	CALL     	R10 2 2 ; R10 := R10(R11)
	316	[12181]	TEST     	R10 1 ; if R10 then PC := 457
	317	[12181]	JMP      	457 ; PC := 457
	318	[12182]	GETGLOBAL	R10 K8 ; R10 := _T
	319	[12182]	GETTABLE 	R10 R10 K34 ; R10 := R10["suitTable"]
	320	[12182]	GETTABLE 	R10 R10 K37 ; R10 := R10["positions"]
	321	[12182]	GETGLOBAL	R11 K8 ; R11 := _T
	322	[12182]	GETTABLE 	R11 R11 K44 ; R11 := R11["KDriveAvatar"]
	323	[12182]	SELF     	R11 R11 K43 ; R12 := R11; R11 := R11[0x388577d5]
	324	[12182]	CALL     	R11 2 2 ; R11 := R11(R12)
	325	[12182]	SELF     	R12 R6 K36 ; R13 := R6; R12 := R6[0xd1586535]
	326	[12182]	CALL     	R12 2 2 ; R12 := R12(R13)
	327	[12182]	GETGLOBAL	R13 K45 ; R13 := 0xa421af95
	328	[12182]	LOADK    	R14 := 0.000000
	329	[12182]	LOADK    	R15 := 0.750000
	330	[12182]	LOADK    	R16 := 0.000000
	331	[12182]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	332	[12182]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	333	[12182]	SETTABLE 	R10 R11 R12 ; R10[R11] := R12
	334	[12184]	JMP      	457 ; PC := 457
	335	[12186]	GETGLOBAL	R10 K21 ; R10 := 0x7b998233
	336	[12186]	GETGLOBAL	R11 K8 ; R11 := _T
	337	[12186]	GETTABLE 	R11 R11 K34 ; R11 := R11["suitTable"]
	338	[12186]	GETTABLE 	R11 R11 K35 ; R11 := R11["prevPos"]
	339	[12186]	CALL     	R10 2 2 ; R10 := R10(R11)
	340	[12186]	TEST     	R10 1 ; if R10 then PC := 457
	341	[12186]	JMP      	457 ; PC := 457
	342	[12187]	GETGLOBAL	R10 K8 ; R10 := _T
	343	[12187]	GETTABLE 	R10 R10 K34 ; R10 := R10["suitTable"]
	344	[12187]	GETGLOBAL	R11 K8 ; R11 := _T
	345	[12187]	GETTABLE 	R11 R11 K65 ; R11 := R11["DEFAULT_SUIT_ROTATION"]
	346	[12187]	SETTABLE 	R10 K40 R11 ; R10["desiredRot"] := R11
	347	[12188]	GETGLOBAL	R10 K8 ; R10 := _T
	348	[12188]	GETTABLE 	R10 R10 K34 ; R10 := R10["suitTable"]
	349	[12188]	GETGLOBAL	R11 K8 ; R11 := _T
	350	[12188]	GETTABLE 	R11 R11 K65 ; R11 := R11["DEFAULT_SUIT_ROTATION"]
	351	[12188]	SETTABLE 	R10 K42 R11 ; R10[0x5f56eeab] := R11
	352	[12190]	GETGLOBAL	R10 K21 ; R10 := 0x7b998233
	353	[12190]	GETGLOBAL	R11 K8 ; R11 := _T
	354	[12190]	GETTABLE 	R11 R11 K34 ; R11 := R11["suitTable"]
	355	[12190]	GETTABLE 	R11 R11 K37 ; R11 := R11["positions"]
	356	[12190]	CALL     	R10 2 2 ; R10 := R10(R11)
	357	[12190]	TEST     	R10 0 ; if not R10 then PC := 363
	358	[12190]	JMP      	363 ; PC := 363
	359	[12191]	GETGLOBAL	R10 K8 ; R10 := _T
	360	[12191]	GETTABLE 	R10 R10 K34 ; R10 := R10["suitTable"]
	361	[12191]	NEWTABLE 	R11 0 0 ; R11 := {}
	362	[12191]	SETTABLE 	R10 K37 R11 ; R10["positions"] := R11
	363	[12193]	GETGLOBAL	R10 K8 ; R10 := _T
	364	[12193]	GETTABLE 	R10 R10 K34 ; R10 := R10["suitTable"]
	365	[12193]	GETTABLE 	R10 R10 K37 ; R10 := R10["positions"]
	366	[12193]	SELF     	R11 R6 K43 ; R12 := R6; R11 := R6[0x388577d5]
	367	[12193]	CALL     	R11 2 2 ; R11 := R11(R12)
	368	[12193]	GETGLOBAL	R12 K8 ; R12 := _T
	369	[12193]	GETTABLE 	R12 R12 K34 ; R12 := R12["suitTable"]
	370	[12193]	GETTABLE 	R12 R12 K35 ; R12 := R12["prevPos"]
	371	[12193]	SETTABLE 	R10 R11 R12 ; R10[R11] := R12
	372	[12195]	SELF     	R10 R6 K66 ; R11 := R6; R10 := R6[0x30eb0cc3]
	373	[12195]	LOADK    	R12 := 15.000000
	374	[12195]	OP_LOADBOOL	R13 0 0 ; R13 := false
	375	[12195]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	376	[12196]	SELF     	R10 R6 K68 ; R11 := R6; R10 := R6[0xb2532845]
	377	[12196]	GETGLOBAL	R12 K52 ; R12 := 0x0469f296
	378	[12196]	LOADK    	R13 K69 ; R13 := "IDLE"
	379	[12196]	CALL     	R12 2 0 ; R12,... := R12(R13)
	380	[12196]	CALL     	R10 0 1 ; R10(R11,...)
	381	[12198]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	382	[12198]	GETUPVAL 	R11 U9 ; R11 := U9
	383	[12198]	GETTABLE 	R11 R11 K70 ; R11 := R11["ARSENAL_CAMERA"]
	384	[12198]	SETTABLE 	R10 K48 R11 ; R10[0x34291f5c] := R11
	385	[12199]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	386	[12199]	GETGLOBAL	R11 K19 ; R11 := 0x89326c93
	387	[12199]	SELF     	R11 R11 K51 ; R12 := R11; R11 := R11[0x46a0ebf5]
	388	[12199]	GETGLOBAL	R13 K52 ; R13 := 0x0469f296
	389	[12199]	GETUPVAL 	R14 U9 ; R14 := U9
	390	[12199]	GETTABLE 	R14 R14 K70 ; R14 := R14["ARSENAL_CAMERA"]
	391	[12199]	CALL     	R13 2 0 ; R13,... := R13(R14)
	392	[12199]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	393	[12199]	SETTABLE 	R10 K50 R11 ; R10["camera"] := R11
	394	[12200]	GETGLOBAL	R10 K21 ; R10 := 0x7b998233
	395	[12200]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	396	[12200]	GETTABLE 	R11 R11 K50 ; R11 := R11["camera"]
	397	[12200]	CALL     	R10 2 2 ; R10 := R10(R11)
	398	[12200]	TEST     	R10 1 ; if R10 then PC := 419
	399	[12200]	JMP      	419 ; PC := 419
	400	[12201]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	401	[12201]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	402	[12201]	GETTABLE 	R11 R11 K50 ; R11 := R11["camera"]
	403	[12201]	SELF     	R11 R11 K36 ; R12 := R11; R11 := R11[0xd1586535]
	404	[12201]	CALL     	R11 2 2 ; R11 := R11(R12)
	405	[12201]	SETTABLE 	R10 K53 R11 ; R10["orgPosition"] := R11
	406	[12202]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	407	[12202]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	408	[12202]	GETTABLE 	R11 R11 K50 ; R11 := R11["camera"]
	409	[12202]	SELF     	R11 R11 K55 ; R12 := R11; R11 := R11[0xcb3851b8]
	410	[12202]	CALL     	R11 2 2 ; R11 := R11(R12)
	411	[12202]	SETTABLE 	R10 K54 R11 ; R10["orgRotation"] := R11
	412	[12203]	GETGLOBAL	R10 K46 ; R10 := mCameraTable
	413	[12203]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	414	[12203]	GETTABLE 	R11 R11 K50 ; R11 := R11["camera"]
	415	[12203]	SELF     	R11 R11 K57 ; R12 := R11; R11 := R11[0xaac2f3a5]
	416	[12203]	CALL     	R11 2 2 ; R11 := R11(R12)
	417	[12203]	SETTABLE 	R10 K56 R11 ; R10["orgFOV"] := R11
	418	[12203]	JMP      	436 ; PC := 436
	419	[12205]	GETGLOBAL	R10 K8 ; R10 := _T
	420	[12205]	GETTABLE 	R10 R10 K24 ; R10 := R10["MenuSuitAvatar"]
	421	[12206]	GETGLOBAL	R11 K21 ; R11 := 0x7b998233
	422	[12206]	MOVE     	R12 R10 ; R12 := R10
	423	[12206]	CALL     	R11 2 2 ; R11 := R11(R12)
	424	[12206]	TEST     	R11 1 ; if R11 then PC := 434
	425	[12206]	JMP      	434 ; PC := 434
	426	[12207]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	427	[12207]	SELF     	R12 R10 K36 ; R13 := R10; R12 := R10[0xd1586535]
	428	[12207]	CALL     	R12 2 2 ; R12 := R12(R13)
	429	[12207]	SETTABLE 	R11 K53 R12 ; R11["orgPosition"] := R12
	430	[12208]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	431	[12208]	SELF     	R12 R10 K55 ; R13 := R10; R12 := R10[0xcb3851b8]
	432	[12208]	CALL     	R12 2 2 ; R12 := R12(R13)
	433	[12208]	SETTABLE 	R11 K54 R12 ; R11["orgRotation"] := R12
	434	[12210]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	435	[12210]	SETTABLE 	R11 K56 K71 ; R11["orgFOV"] := 90.000000
	436	[12212]	GETGLOBAL	R11 K46 ; R11 := mCameraTable
	437	[12212]	SETTABLE 	R11 K58 K3 ; R11["destFov"] := nil
	438	[12214]	GETGLOBAL	R11 K21 ; R11 := 0x7b998233
	439	[12214]	MOVE     	R12 R7 ; R12 := R7
	440	[12214]	CALL     	R11 2 2 ; R11 := R11(R12)
	441	[12214]	TEST     	R11 1 ; if R11 then PC := 448
	442	[12214]	JMP      	448 ; PC := 448
	443	[12215]	SELF     	R11 R7 K62 ; R12 := R7; R11 := R7[0x14c7f7dd]
	444	[12215]	GETGLOBAL	R13 K46 ; R13 := mCameraTable
	445	[12215]	GETTABLE 	R13 R13 K50 ; R13 := R13["camera"]
	446	[12215]	LOADK    	R14 K72 ; R14 := 0.001000
	447	[12215]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	448	[12217]	GETGLOBAL	R11 K21 ; R11 := 0x7b998233
	449	[12217]	GETGLOBAL	R12 K63 ; R12 := mArsenalConsole
	450	[12217]	CALL     	R11 2 2 ; R11 := R11(R12)
	451	[12217]	TEST     	R11 1 ; if R11 then PC := 457
	452	[12217]	JMP      	457 ; PC := 457
	453	[12218]	GETGLOBAL	R11 K63 ; R11 := mArsenalConsole
	454	[12218]	SELF     	R11 R11 K64 ; R12 := R11; R11 := R11[0x0e684fdd]
	455	[12218]	LOADNIL  	R13 R13 ; R13 := nil
	456	[12218]	CALL     	R11 3 1 ; R11(R12,R13)
	457	[12223]	RETURN   	R0 1 ; return 

function #183 <?:12225,12235> (15 instructions, 60 bytes at 000002112BD27320)
1 param, 6 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[12226]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[12227]	LOADK    	R2 K0 ; R2 := ""
	3	[12230]	EQ       	0 R0 K2 ; if R0 ~= 2.000000 then PC := 12
	4	[12230]	JMP      	12 ; PC := 12
	5	[12231]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[12231]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xdd53e2ad]
	7	[12231]	GETGLOBAL	R4 K4 ; R4 := mInventory
	8	[12231]	GETUPVAL 	R5 U1 ; R5 := U1
	9	[12231]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	10	[12231]	MOVE     	R2 R4 ; R2 := R4
	11	[12231]	MOVE     	R1 R3 ; R1 := R3
	12	[12234]	MOVE     	R3 R1 ; R3 := R1
	13	[12234]	MOVE     	R4 R2 ; R4 := R2
	14	[12234]	RETURN   	R3 3 ; return R3, R4 
	15	[12235]	RETURN   	R0 1 ; return 

function #184 <?:12237,12286> (152 instructions, 608 bytes at 000002112BD274B0)
0 params, 17 slots, 7 upvalues, 0 locals, 43 constants, 0 functions
	1	[12238]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[12238]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[12238]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[12238]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[12238]	JMP      	7 ; PC := 7
	6	[12239]	RETURN   	R0 1 ; return 
	7	[12241]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	8	[12241]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x25a6e75e]
	9	[12241]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[12241]	SETGLOBALHASH	R0 K2 ; mInventory := R0
	11	[12243]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[12243]	CALL     	R0 1 2 ; R0 := R0()
	13	[12244]	GETGLOBAL	R1 K2 ; R1 := mInventory
	14	[12244]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x8ed300d6]
	15	[12244]	MOVE     	R3 R0 ; R3 := R0
	16	[12244]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	17	[12245]	GETGLOBAL	R2 K2 ; R2 := mInventory
	18	[12245]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x4e457768]
	19	[12245]	MOVE     	R4 R0 ; R4 := R0
	20	[12245]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[12247]	GETGLOBAL	R3 K6 ; R3 := _T
	22	[12247]	GETTABLE 	R3 R3 K7 ; R3 := R3["loadoutInProgress"]
	23	[12247]	EQ       	1 R3 K8 ; if R3 == nil then PC := 29
	24	[12247]	JMP      	29 ; PC := 29
	25	[12248]	GETGLOBAL	R3 K6 ; R3 := _T
	26	[12248]	GETTABLE 	R3 R3 K7 ; R3 := R3["loadoutInProgress"]
	27	[12248]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	28	[12248]	GETTABLE 	R2 R3 K9 ; R2 := R3["mItemId"]
	29	[12251]	GETUPVAL 	R3 U1 ; R3 := U1
	30	[12251]	CALL     	R3 1 1 ; R3()
	31	[12253]	LOADK    	R3 := 0.000000
	32	[12253]	SETUPVAL 	R3 U2 ; U2 := R3
	33	[12254]	LOADK    	R3 K10 ; R3 := ""
	34	[12255]	GETGLOBAL	R4 K11 ; R4 := 0xc8802016
	35	[12255]	MOVE     	R5 R1 ; R5 := R1
	36	[12255]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	37	[12255]	JMP      	70 ; PC := 70
	38	[12256]	GETTABLE 	R9 R8 K12 ; R9 := R8["mRemove"]
	39	[12256]	TEST     	R9 1 ; if R9 then PC := 70
	40	[12256]	JMP      	70 ; PC := 70
	41	[12257]	GETTABLE 	R9 R8 K9 ; R9 := R8["mItemId"]
	42	[12257]	GETTABLE 	R9 R9 K13 ; R9 := R9["mId"]
	43	[12258]	GETTABLE 	R10 R2 K13 ; R10 := R2["mId"]
	44	[12258]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 67
	45	[12258]	JMP      	67 ; PC := 67
	46	[12259]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	47	[12259]	SELF     	R10 R10 K15 ; R11 := R10; R10 := R10[0x42b04007]
	48	[12259]	GETUPVAL 	R12 U3 ; R12 := U3
	49	[12259]	GETTABLE 	R12 R12 K16 ; R12 := R12[0xe25dca66]
	50	[12259]	GETTABLE 	R13 R8 K17 ; R13 := R8["mName"]
	51	[12259]	CALL     	R12 2 2 ; R12 := R12(R13)
	52	[12259]	OP_LOADBOOL	R13 0 0 ; R13 := false
	53	[12259]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	54	[12259]	MOVE     	R3 R10 ; R3 := R10
	55	[12261]	GETUPVAL 	R10 U4 ; R10 := U4
	56	[12261]	GETTABLE 	R10 R10 K18 ; R10 := R10["Current"]
	57	[12261]	EQ       	0 R10 K20 ; if R10 ~= 2.000000 then PC := 67
	58	[12261]	JMP      	67 ; PC := 67
	59	[12262]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	60	[12262]	SELF     	R10 R10 K15 ; R11 := R10; R10 := R10[0x42b04007]
	61	[12262]	LOADK    	R12 K21 ; R12 := "<CONCLAVE>"
	62	[12262]	OP_LOADBOOL	R13 1 0 ; R13 := true
	63	[12262]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	64	[12262]	LOADK    	R11 K22 ; R11 := " "
	65	[12262]	MOVE     	R12 R3 ; R12 := R3
	66	[12262]	CONCAT   	R3 R10 R12 ; R3 := R10 .. R11 .. R12
	67	[12266]	GETUPVAL 	R10 U2 ; R10 := U2
	68	[12266]	ADD      	R10 R10 K23 ; R10 := R10 + 1.000000
	69	[12266]	SETUPVAL 	R10 U2 ; U2 := R10
	70	[12255]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 38; R6 := R7 end
	71	[12267]	JMP      	38 ; PC := 38
	72	[12270]	GETUPVAL 	R10 U5 ; R10 := U5
	73	[12270]	TEST     	R10 0 ; if not R10 then PC := 107
	74	[12270]	JMP      	107 ; PC := 107
	75	[12271]	LOADK    	R10 K24 ; R10 := "<p><font face=\"Arial Unicode MS\" size=\"18\">"
	76	[12271]	MOVE     	R11 R3 ; R11 := R3
	77	[12271]	LOADK    	R12 K25 ; R12 := "</font></p>"
	78	[12271]	CONCAT   	R3 R10 R12 ; R3 := R10 .. R11 .. R12
	79	[12272]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	80	[12272]	SELF     	R10 R10 K26 ; R11 := R10; R10 := R10[0x67bc869f]
	81	[12272]	LOADK    	R12 K27 ; R12 := "MenuPanel.Label"
	82	[12272]	LOADK    	R13 := 0.000000
	83	[12272]	GETUPVAL 	R14 U6 ; R14 := U6
	84	[12272]	GETTABLE 	R14 R14 K28 ; R14 := R14["X"]
	85	[12272]	SUB      	R14 R14 K29 ; R14 := R14 - 30.000000
	86	[12272]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	87	[12273]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	88	[12273]	SELF     	R10 R10 K26 ; R11 := R10; R10 := R10[0x67bc869f]
	89	[12273]	LOADK    	R12 K27 ; R12 := "MenuPanel.Label"
	90	[12273]	LOADK    	R13 := 1.000000
	91	[12273]	GETUPVAL 	R14 U6 ; R14 := U6
	92	[12273]	GETTABLE 	R14 R14 K30 ; R14 := R14["Y"]
	93	[12273]	SUB      	R14 R14 K31 ; R14 := R14 - 10.000000
	94	[12273]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	95	[12275]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	96	[12275]	SELF     	R10 R10 K26 ; R11 := R10; R10 := R10[0x67bc869f]
	97	[12275]	LOADK    	R12 K27 ; R12 := "MenuPanel.Label"
	98	[12275]	LOADK    	R13 := 5.000000
	99	[12275]	LOADK    	R14 := 135.000000
	100	[12275]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	101	[12276]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	102	[12276]	SELF     	R10 R10 K26 ; R11 := R10; R10 := R10[0x67bc869f]
	103	[12276]	LOADK    	R12 K27 ; R12 := "MenuPanel.Label"
	104	[12276]	LOADK    	R13 := 6.000000
	105	[12276]	LOADK    	R14 := 135.000000
	106	[12276]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	107	[12278]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	108	[12278]	SELF     	R10 R10 K32 ; R11 := R10; R10 := R10[0x5f56eeab]
	109	[12278]	LOADK    	R12 K27 ; R12 := "MenuPanel.Label"
	110	[12278]	LOADK    	R13 := 29.000000
	111	[12278]	GETGLOBAL	R14 K14 ; R14 := 0xae91e43b
	112	[12278]	SELF     	R14 R14 K33 ; R15 := R14; R14 := R14[0xdca61cfa]
	113	[12278]	MOVE     	R16 R3 ; R16 := R3
	114	[12278]	CALL     	R14 3 0 ; R14,... := R14(R15,R16)
	115	[12278]	CALL     	R10 0 1 ; R10(R11,...)
	116	[12280]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	117	[12280]	SELF     	R10 R10 K26 ; R11 := R10; R10 := R10[0x67bc869f]
	118	[12280]	LOADK    	R12 K27 ; R12 := "MenuPanel.Label"
	119	[12280]	LOADK    	R13 := 36.000000
	120	[12280]	GETGLOBAL	R14 K34 ; R14 := 0x0032441c
	121	[12280]	GETTABLE 	R14 R14 K35 ; R14 := R14["UIColor_White"]
	122	[12280]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	123	[12282]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	124	[12282]	SELF     	R10 R10 K36 ; R11 := R10; R10 := R10[0xaade900e]
	125	[12282]	LOADK    	R12 K37 ; R12 := "MenuPanel.RightArrow"
	126	[12282]	LOADK    	R13 := 11.000000
	127	[12282]	GETGLOBAL	R14 K38 ; R14 := 0x34291f5c
	128	[12282]	GETTABLE 	R14 R14 K39 ; R14 := R14[0x1467d5f4]
	129	[12282]	CALL     	R14 1 2 ; R14 := R14()
	130	[12282]	NOT      	R14 R14 ; R14 := not R14
	131	[12282]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	132	[12283]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	133	[12283]	SELF     	R10 R10 K36 ; R11 := R10; R10 := R10[0xaade900e]
	134	[12283]	LOADK    	R12 K40 ; R12 := "MenuPanel.Right"
	135	[12283]	LOADK    	R13 := 11.000000
	136	[12283]	GETGLOBAL	R14 K38 ; R14 := 0x34291f5c
	137	[12283]	GETTABLE 	R14 R14 K39 ; R14 := R14[0x1467d5f4]
	138	[12283]	CALL     	R14 1 0 ; R14,... := R14()
	139	[12283]	CALL     	R10 0 1 ; R10(R11,...)
	140	[12284]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	141	[12284]	SELF     	R10 R10 K36 ; R11 := R10; R10 := R10[0xaade900e]
	142	[12284]	LOADK    	R12 K41 ; R12 := "MenuPanel.LeftArrow"
	143	[12284]	LOADK    	R13 := 11.000000
	144	[12284]	OP_LOADBOOL	R14 0 0 ; R14 := false
	145	[12284]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	146	[12285]	GETGLOBAL	R10 K14 ; R10 := 0xae91e43b
	147	[12285]	SELF     	R10 R10 K36 ; R11 := R10; R10 := R10[0xaade900e]
	148	[12285]	LOADK    	R12 K42 ; R12 := "MenuPanel.Left"
	149	[12285]	LOADK    	R13 := 11.000000
	150	[12285]	OP_LOADBOOL	R14 0 0 ; R14 := false
	151	[12285]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	152	[12286]	RETURN   	R0 1 ; return 

function #185 <?:12288,12323> (109 instructions, 436 bytes at 000002112BD27D70)
1 param, 7 slots, 7 upvalues, 0 locals, 25 constants, 0 functions
	1	[12289]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[12289]	GETTABLE 	R1 R1 K0 ; R1 := R1["Current"]
	3	[12291]	GETGLOBAL	R2 K1 ; R2 := _T
	4	[12291]	SETTABLE 	R2 K2 R0 ; R2["ArsenalState"] := R0
	5	[12292]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[12292]	SETTABLE 	R2 K0 R0 ; R2["Current"] := R0
	7	[12294]	GETUPVAL 	R2 U1 ; R2 := U1
	8	[12294]	CALL     	R2 1 1 ; R2()
	9	[12296]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	10	[12296]	TEST     	R2 0 ; if not R2 then PC := 42
	11	[12296]	JMP      	42 ; PC := 42
	12	[12297]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	13	[12297]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x919b1925]
	14	[12297]	GETGLOBAL	R4 K1 ; R4 := _T
	15	[12297]	GETTABLE 	R4 R4 K2 ; R4 := R4["ArsenalState"]
	16	[12297]	EQ       	1 R4 K6 ; if R4 == 2.000000 then PC := 19
	17	[12297]	JMP      	19 ; PC := 19
	18	[12297]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 19
	19	[12297]	OP_LOADBOOL	R4 1 0 ; R4 := true
	20	[12297]	CALL     	R2 3 1 ; R2(R3,R4)
	21	[12298]	GETGLOBAL	R2 K1 ; R2 := _T
	22	[12298]	GETTABLE 	R2 R2 K7 ; R2 := R2["QuestProgressWaitingForUpgradesScreen"]
	23	[12298]	EQ       	1 R2 K8 ; if R2 == nil then PC := 28
	24	[12298]	JMP      	28 ; PC := 28
	25	[12298]	GETGLOBAL	R2 K1 ; R2 := _T
	26	[12298]	GETTABLE 	R2 R2 K7 ; R2 := R2["QuestProgressWaitingForUpgradesScreen"]
	27	[12298]	JMP      	30 ; PC := 30
	28	[12298]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 29
	29	[12298]	OP_LOADBOOL	R2 1 0 ; R2 := true
	30	[12299]	GETGLOBAL	R3 K3 ; R3 := 0xbe190284
	31	[12299]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0xc02f2cb8]
	32	[12299]	GETGLOBAL	R5 K1 ; R5 := _T
	33	[12299]	GETTABLE 	R5 R5 K2 ; R5 := R5["ArsenalState"]
	34	[12299]	EQ       	0 R5 K10 ; if R5 ~= 1.000000 then PC := 39
	35	[12299]	JMP      	39 ; PC := 39
	36	[12299]	MOVE     	R5 R2 ; R5 := R2
	37	[12299]	JMP      	40 ; PC := 40
	38	[12299]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 39
	39	[12299]	OP_LOADBOOL	R5 1 0 ; R5 := true
	40	[12299]	OP_LOADBOOL	R6 1 0 ; R6 := true
	41	[12299]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	42	[12302]	GETUPVAL 	R3 U0 ; R3 := U0
	43	[12302]	GETTABLE 	R3 R3 K0 ; R3 := R3["Current"]
	44	[12302]	EQ       	0 R3 K6 ; if R3 ~= 2.000000 then PC := 51
	45	[12302]	JMP      	51 ; PC := 51
	46	[12303]	GETUPVAL 	R3 U2 ; R3 := U2
	47	[12303]	CALL     	R3 1 2 ; R3 := R3()
	48	[12303]	TEST     	R3 1 ; if R3 then PC := 51
	49	[12303]	JMP      	51 ; PC := 51
	50	[12304]	RETURN   	R0 1 ; return 
	51	[12308]	GETUPVAL 	R3 U0 ; R3 := U0
	52	[12308]	GETTABLE 	R3 R3 K0 ; R3 := R3["Current"]
	53	[12308]	EQ       	1 R3 K11 ; if R3 == 3.000000 then PC := 57
	54	[12308]	JMP      	57 ; PC := 57
	55	[12308]	EQ       	0 R1 K11 ; if R1 ~= 3.000000 then PC := 69
	56	[12308]	JMP      	69 ; PC := 69
	57	[12309]	GETUPVAL 	R3 U3 ; R3 := U3
	58	[12309]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xd19b6acc]
	59	[12309]	EQ       	0 R0 K11 ; if R0 ~= 3.000000 then PC := 64
	60	[12309]	JMP      	64 ; PC := 64
	61	[12309]	GETGLOBAL	R4 K13 ; R4 := mInitialized
	62	[12309]	NOT      	R4 R4 ; R4 := not R4
	63	[12309]	JMP      	66 ; PC := 66
	64	[12309]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 65
	65	[12309]	OP_LOADBOOL	R4 1 0 ; R4 := true
	66	[12309]	LOADNIL  	R5 R5 ; R5 := nil
	67	[12309]	OP_LOADBOOL	R6 1 0 ; R6 := true
	68	[12309]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	69	[12312]	LOADK    	R3 K14 ; R3 := "/Lotus/Language/Menu/Exit"
	70	[12313]	GETUPVAL 	R4 U0 ; R4 := U0
	71	[12313]	GETTABLE 	R4 R4 K0 ; R4 := R4["Current"]
	72	[12313]	EQ       	0 R4 K6 ; if R4 ~= 2.000000 then PC := 79
	73	[12313]	JMP      	79 ; PC := 79
	74	[12313]	GETGLOBAL	R4 K1 ; R4 := _T
	75	[12313]	GETTABLE 	R4 R4 K15 ; R4 := R4["ArsenalPvPOnlyReturnConsole"]
	76	[12313]	EQ       	0 R4 K8 ; if R4 ~= nil then PC := 79
	77	[12313]	JMP      	79 ; PC := 79
	78	[12314]	LOADK    	R3 K16 ; R3 := "/Lotus/Language/Menu/Loadout_PVE"
	79	[12316]	GETGLOBAL	R4 K17 ; R4 := mButtons
	80	[12316]	GETTABLE 	R4 R4 K10 ; R4 := R4[1.000000]
	81	[12316]	SETTABLE 	R4 K18 R3 ; R4["mLabel"] := R3
	82	[12317]	GETGLOBAL	R4 K17 ; R4 := mButtons
	83	[12317]	GETGLOBAL	R5 K19 ; R5 := mButtonIndices
	84	[12317]	GETTABLE 	R5 R5 K20 ; R5 := R5["PvpTeam"]
	85	[12317]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	86	[12317]	GETUPVAL 	R5 U4 ; R5 := U4
	87	[12317]	CALL     	R5 1 2 ; R5 := R5()
	88	[12317]	SETTABLE 	R4 K21 R5 ; R4["mVisible"] := R5
	89	[12318]	GETGLOBAL	R4 K22 ; R4 := 0x7b998233
	90	[12318]	GETGLOBAL	R5 K17 ; R5 := mButtons
	91	[12318]	GETGLOBAL	R6 K19 ; R6 := mButtonIndices
	92	[12318]	GETTABLE 	R6 R6 K23 ; R6 := R6["Mode"]
	93	[12318]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	94	[12318]	CALL     	R4 2 2 ; R4 := R4(R5)
	95	[12318]	TEST     	R4 1 ; if R4 then PC := 104
	96	[12318]	JMP      	104 ; PC := 104
	97	[12319]	GETGLOBAL	R4 K17 ; R4 := mButtons
	98	[12319]	GETGLOBAL	R5 K19 ; R5 := mButtonIndices
	99	[12319]	GETTABLE 	R5 R5 K23 ; R5 := R5["Mode"]
	100	[12319]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	101	[12319]	GETUPVAL 	R5 U5 ; R5 := U5
	102	[12319]	CALL     	R5 1 2 ; R5 := R5()
	103	[12319]	SETTABLE 	R4 K21 R5 ; R4["mVisible"] := R5
	104	[12321]	GETUPVAL 	R4 U6 ; R4 := U6
	105	[12321]	CALL     	R4 1 1 ; R4()
	106	[12322]	GETUPVAL 	R4 U3 ; R4 := U3
	107	[12322]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x5f6897e6]
	108	[12322]	CALL     	R4 1 1 ; R4()
	109	[12323]	RETURN   	R0 1 ; return 

function #186 <?:12325,12343> (32 instructions, 128 bytes at 000002112BD28340)
1 param, 5 slots, 6 upvalues, 0 locals, 10 constants, 1 function
	1	[12326]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[12326]	SETTABLE 	R1 K0 K1 ; R1["MouseDown"] := false
	3	[12328]	GETUPVAL 	R1 U1 ; R1 := U1
	4	[12328]	GETTABLE 	R1 R1 K2 ; R1 := R1["Current"]
	5	[12328]	EQ       	0 R1 R0 ; if R1 ~= R0 then PC := 8
	6	[12328]	JMP      	8 ; PC := 8
	7	[12329]	RETURN   	R0 1 ; return 
	8	[12332]	GETUPVAL 	R1 U2 ; R1 := U2
	9	[12332]	MOVE     	R2 R0 ; R2 := R0
	10	[12332]	CALL     	R1 2 3 ; R1,R2 := R1(R2)
	11	[12333]	TEST     	R1 1 ; if R1 then PC := 18
	12	[12333]	JMP      	18 ; PC := 18
	13	[12334]	GETUPVAL 	R3 U3 ; R3 := U3
	14	[12334]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xe0cba3ca]
	15	[12334]	MOVE     	R4 R2 ; R4 := R2
	16	[12334]	CALL     	R3 2 1 ; R3(R4)
	17	[12335]	RETURN   	R0 1 ; return 
	18	[12338]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[12338]	SETTABLE 	R3 K4 R0 ; R3["Queued"] := R0
	20	[12339]	GETGLOBAL	R3 K5 ; R3 := _T
	21	[12339]	SETTABLE 	R3 K6 K1 ; R3["mSentinelMode"] := false
	22	[12340]	OP_LOADBOOL	R3 1 0 ; R3 := true
	23	[12340]	SETGLOBALHASH	R3 K7 ; mInputBlocked := R3
	24	[12341]	GETUPVAL 	R3 U4 ; R3 := U4
	25	[12341]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	26	[12341]	GETUPVAL 	R0 U5 ; R0 := U5
	27	[12341]	GETUPVAL 	R0 U1 ; R0 := U1
	28	[12341]	SETTABLE 	R3 K8 R4 ; R3["Callback"] := R4
	29	[12342]	GETUPVAL 	R3 U4 ; R3 := U4
	30	[12342]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x6bfeac2e]
	31	[12342]	CALL     	R3 2 1 ; R3(R4)
	32	[12343]	RETURN   	R0 1 ; return 

function #187 <?:12348,12416> (229 instructions, 916 bytes at 000002112BD286E0)
0 params, 30 slots, 3 upvalues, 0 locals, 46 constants, 0 functions
	1	[12349]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[12349]	GETTABLE 	R0 R0 K1 ; R0 := R0["MenuSuitAvatar"]
	3	[12350]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[12350]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[12350]	GETTABLE 	R2 R2 K2 ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
	6	[12350]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 136
	7	[12350]	JMP      	136 ; PC := 136
	8	[12350]	GETGLOBAL	R1 K0 ; R1 := _T
	9	[12350]	GETTABLE 	R1 R1 K3 ; R1 := R1["InSimulacrum"]
	10	[12350]	TEST     	R1 1 ; if R1 then PC := 136
	11	[12350]	JMP      	136 ; PC := 136
	12	[12350]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	13	[12350]	GETGLOBAL	R2 K5 ; R2 := mArsenalConsole
	14	[12350]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[12350]	TEST     	R1 1 ; if R1 then PC := 136
	16	[12350]	JMP      	136 ; PC := 136
	17	[12350]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	18	[12350]	MOVE     	R2 R0 ; R2 := R0
	19	[12350]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[12350]	TEST     	R1 1 ; if R1 then PC := 136
	21	[12350]	JMP      	136 ; PC := 136
	22	[12350]	GETGLOBAL	R1 K5 ; R1 := mArsenalConsole
	23	[12350]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x16defb8a]
	24	[12350]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[12350]	TEST     	R1 1 ; if R1 then PC := 136
	26	[12350]	JMP      	136 ; PC := 136
	27	[12351]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0x5280b883]
	28	[12351]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[12353]	GETGLOBAL	R2 K8 ; R2 := 0xa421af95
	30	[12353]	CALL     	R2 1 2 ; R2 := R2()
	31	[12354]	SELF     	R3 R0 K9 ; R4 := R0; R3 := R0[0xef8e8f7f]
	32	[12354]	CALL     	R3 2 2 ; R3 := R3(R4)
	33	[12355]	NEWTABLE 	R4 4 0 ; R4 := {}
	34	[12355]	GETGLOBAL	R5 K10 ; R5 := gBaseAvatarType
	35	[12355]	GETGLOBAL	R6 K11 ; R6 := gPickUpType
	36	[12355]	GETGLOBAL	R7 K12 ; R7 := gRagdollType
	37	[12355]	GETGLOBAL	R8 K13 ; R8 := gHitProxyType
	38	[12355]	SETLIST  	R4 4 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
	39	[12357]	NEWTABLE 	R5 20 0 ; R5 := {}
	40	[12357]	LOADK    	R6 := 0.000000
	41	[12357]	LOADK    	R7 := 30.000000
	42	[12357]	LOADK    	R8 := 330.000000
	43	[12357]	LOADK    	R9 := 180.000000
	44	[12357]	LOADK    	R10 := 150.000000
	45	[12357]	LOADK    	R11 := 210.000000
	46	[12357]	LOADK    	R12 := 90.000000
	47	[12357]	LOADK    	R13 := 270.000000
	48	[12357]	LOADK    	R14 := 60.000000
	49	[12357]	LOADK    	R15 := 120.000000
	50	[12357]	LOADK    	R16 := 240.000000
	51	[12357]	LOADK    	R17 := 300.000000
	52	[12357]	LOADK    	R18 := 15.000000
	53	[12357]	LOADK    	R19 := 45.000000
	54	[12357]	LOADK    	R20 := 315.000000
	55	[12357]	LOADK    	R21 := 345.000000
	56	[12357]	LOADK    	R22 := 165.000000
	57	[12357]	LOADK    	R23 := 195.000000
	58	[12357]	LOADK    	R24 := 135.000000
	59	[12357]	LOADK    	R25 := 225.000000
	60	[12357]	LOADK    	R26 := 75.000000
	61	[12357]	LOADK    	R27 := 105.000000
	62	[12357]	LOADK    	R28 := 255.000000
	63	[12357]	LOADK    	R29 := 285.000000
	64	[12357]	SETLIST  	R5 24 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 24
	65	[12358]	NEWTABLE 	R6 7 0 ; R6 := {}
	66	[12358]	LOADK    	R7 K14 ; R7 := "GAME_C1_HEAD1"
	67	[12358]	LOADK    	R8 K15 ; R8 := "GAME_L1_ARM2"
	68	[12358]	LOADK    	R9 K16 ; R9 := "GAME_R1_ARM2"
	69	[12358]	LOADK    	R10 K17 ; R10 := "GAME_L1_ARM3"
	70	[12358]	LOADK    	R11 K18 ; R11 := "GAME_R1_ARM3"
	71	[12358]	LOADK    	R12 K19 ; R12 := "GAME_L1_LEG3"
	72	[12358]	LOADK    	R13 K20 ; R13 := "GAME_R1_LEG3"
	73	[12358]	SETLIST  	R6 7 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 7
	74	[12360]	GETGLOBAL	R7 K21 ; R7 := 0xc8802016
	75	[12360]	MOVE     	R8 R5 ; R8 := R5
	76	[12360]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	77	[12360]	JMP      	124 ; PC := 124
	78	[12361]	MOVE     	R12 R1 ; R12 := R1
	79	[12362]	GETTABLE 	R13 R12 K22 ; R13 := R12["heading"]
	80	[12362]	ADD      	R13 R13 R11 ; R13 := R13 + R11
	81	[12362]	SETTABLE 	R12 K22 R13 ; R12["heading"] := R13
	82	[12363]	GETGLOBAL	R13 K23 ; R13 := 0xf6c6e505
	83	[12363]	MOVE     	R14 R12 ; R14 := R12
	84	[12363]	CALL     	R13 2 2 ; R13 := R13(R14)
	85	[12364]	MUL      	R14 R13 K24 ; R14 := R13 * 4.000000
	86	[12364]	ADD      	R14 R3 R14 ; R14 := R3 + R14
	87	[12365]	GETGLOBAL	R15 K25 ; R15 := 0x89326c93
	88	[12365]	SELF     	R15 R15 K26 ; R16 := R15; R15 := R15[0x722cd32c]
	89	[12365]	MOVE     	R17 R3 ; R17 := R3
	90	[12365]	MOVE     	R18 R14 ; R18 := R14
	91	[12365]	MOVE     	R19 R4 ; R19 := R4
	92	[12365]	LOADNIL  	R20 R20 ; R20 := nil
	93	[12365]	MOVE     	R21 R2 ; R21 := R2
	94	[12365]	CALL     	R15 7 2 ; R15 := R15(R16,R17,R18,R19,R20,R21)
	95	[12366]	TEST     	R15 1 ; if R15 then PC := 124
	96	[12366]	JMP      	124 ; PC := 124
	97	[12367]	GETGLOBAL	R16 K21 ; R16 := 0xc8802016
	98	[12367]	MOVE     	R17 R6 ; R17 := R6
	99	[12367]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	100	[12367]	JMP      	118 ; PC := 118
	101	[12368]	SELF     	R21 R0 K27 ; R22 := R0; R21 := R0[0x003c792f]
	102	[12368]	GETGLOBAL	R23 K28 ; R23 := 0x0469f296
	103	[12368]	MOVE     	R24 R20 ; R24 := R20
	104	[12368]	CALL     	R23 2 0 ; R23,... := R23(R24)
	105	[12368]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	106	[12369]	GETGLOBAL	R22 K25 ; R22 := 0x89326c93
	107	[12369]	SELF     	R22 R22 K26 ; R23 := R22; R22 := R22[0x722cd32c]
	108	[12369]	MOVE     	R24 R21 ; R24 := R21
	109	[12369]	MOVE     	R25 R14 ; R25 := R14
	110	[12369]	MOVE     	R26 R4 ; R26 := R4
	111	[12369]	LOADNIL  	R27 R27 ; R27 := nil
	112	[12369]	MOVE     	R28 R2 ; R28 := R2
	113	[12369]	CALL     	R22 7 2 ; R22 := R22(R23,R24,R25,R26,R27,R28)
	114	[12369]	MOVE     	R15 R22 ; R15 := R22
	115	[12370]	TEST     	R15 0 ; if not R15 then PC := 118
	116	[12370]	JMP      	118 ; PC := 118
	117	[12371]	JMP      	120 ; PC := 120
	118	[12367]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 101; R18 := R19 end
	119	[12372]	JMP      	101 ; PC := 101
	120	[12375]	TEST     	R15 1 ; if R15 then PC := 124
	121	[12375]	JMP      	124 ; PC := 124
	122	[12376]	MOVE     	R1 R12 ; R1 := R12
	123	[12377]	JMP      	126 ; PC := 126
	124	[12360]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 78; R9 := R10 end
	125	[12379]	JMP      	78 ; PC := 78
	126	[12382]	GETGLOBAL	R22 K0 ; R22 := _T
	127	[12382]	GETTABLE 	R23 R1 K22 ; R23 := R1["heading"]
	128	[12382]	SETTABLE 	R22 K29 R23 ; R22["DEFAULT_SUIT_ROTATION"] := R23
	129	[12383]	GETGLOBAL	R22 K0 ; R22 := _T
	130	[12383]	GETTABLE 	R23 R1 K22 ; R23 := R1["heading"]
	131	[12383]	SETTABLE 	R22 K30 R23 ; R22["ARCHWING_DEFAULT_ROTATION"] := R23
	132	[12384]	GETGLOBAL	R22 K0 ; R22 := _T
	133	[12384]	GETTABLE 	R23 R1 K22 ; R23 := R1["heading"]
	134	[12384]	SETTABLE 	R22 K31 R23 ; R22["SENTINEL_DEFAULT_ROTATION"] := R23
	135	[12384]	JMP      	195 ; PC := 195
	136	[12386]	GETGLOBAL	R22 K0 ; R22 := _T
	137	[12386]	GETTABLE 	R22 R22 K32 ; R22 := R22["InDojo"]
	138	[12386]	TEST     	R22 0 ; if not R22 then PC := 159
	139	[12386]	JMP      	159 ; PC := 159
	140	[12388]	GETGLOBAL	R22 K4 ; R22 := 0x7b998233
	141	[12388]	GETGLOBAL	R23 K5 ; R23 := mArsenalConsole
	142	[12388]	CALL     	R22 2 2 ; R22 := R22(R23)
	143	[12388]	TEST     	R22 1 ; if R22 then PC := 152
	144	[12388]	JMP      	152 ; PC := 152
	145	[12389]	GETGLOBAL	R22 K0 ; R22 := _T
	146	[12389]	GETGLOBAL	R23 K5 ; R23 := mArsenalConsole
	147	[12389]	SELF     	R23 R23 K33 ; R24 := R23; R23 := R23[0xcb3851b8]
	148	[12389]	CALL     	R23 2 2 ; R23 := R23(R24)
	149	[12389]	GETTABLE 	R23 R23 K22 ; R23 := R23["heading"]
	150	[12389]	ADD      	R23 R23 K34 ; R23 := R23 + 180.000000
	151	[12389]	SETTABLE 	R22 K29 R23 ; R22["DEFAULT_SUIT_ROTATION"] := R23
	152	[12391]	GETGLOBAL	R22 K0 ; R22 := _T
	153	[12391]	GETGLOBAL	R23 K0 ; R23 := _T
	154	[12391]	GETTABLE 	R23 R23 K29 ; R23 := R23["DEFAULT_SUIT_ROTATION"]
	155	[12391]	SETTABLE 	R22 K30 R23 ; R22["ARCHWING_DEFAULT_ROTATION"] := R23
	156	[12392]	GETGLOBAL	R22 K0 ; R22 := _T
	157	[12392]	SETTABLE 	R22 K31 K35 ; R22["SENTINEL_DEFAULT_ROTATION"] := 0.000000
	158	[12392]	JMP      	195 ; PC := 195
	159	[12393]	GETGLOBAL	R22 K0 ; R22 := _T
	160	[12393]	GETTABLE 	R22 R22 K3 ; R22 := R22["InSimulacrum"]
	161	[12393]	TEST     	R22 1 ; if R22 then PC := 168
	162	[12393]	JMP      	168 ; PC := 168
	163	[12393]	GETUPVAL 	R22 U1 ; R22 := U1
	164	[12393]	GETTABLE 	R22 R22 K36 ; R22 := R22[0xcf1fcba4]
	165	[12393]	CALL     	R22 1 2 ; R22 := R22()
	166	[12393]	TEST     	R22 0 ; if not R22 then PC := 175
	167	[12393]	JMP      	175 ; PC := 175
	168	[12394]	GETGLOBAL	R22 K0 ; R22 := _T
	169	[12394]	SETTABLE 	R22 K29 K37 ; R22["DEFAULT_SUIT_ROTATION"] := 90.000000
	170	[12395]	GETGLOBAL	R22 K0 ; R22 := _T
	171	[12395]	SETTABLE 	R22 K30 K37 ; R22["ARCHWING_DEFAULT_ROTATION"] := 90.000000
	172	[12396]	GETGLOBAL	R22 K0 ; R22 := _T
	173	[12396]	SETTABLE 	R22 K31 K37 ; R22["SENTINEL_DEFAULT_ROTATION"] := 90.000000
	174	[12396]	JMP      	195 ; PC := 195
	175	[12398]	GETGLOBAL	R22 K4 ; R22 := 0x7b998233
	176	[12398]	GETGLOBAL	R23 K5 ; R23 := mArsenalConsole
	177	[12398]	CALL     	R22 2 2 ; R22 := R22(R23)
	178	[12398]	TEST     	R22 1 ; if R22 then PC := 187
	179	[12398]	JMP      	187 ; PC := 187
	180	[12399]	GETGLOBAL	R22 K0 ; R22 := _T
	181	[12399]	GETGLOBAL	R23 K5 ; R23 := mArsenalConsole
	182	[12399]	SELF     	R23 R23 K33 ; R24 := R23; R23 := R23[0xcb3851b8]
	183	[12399]	CALL     	R23 2 2 ; R23 := R23(R24)
	184	[12399]	GETTABLE 	R23 R23 K22 ; R23 := R23["heading"]
	185	[12399]	ADD      	R23 R23 K34 ; R23 := R23 + 180.000000
	186	[12399]	SETTABLE 	R22 K29 R23 ; R22["DEFAULT_SUIT_ROTATION"] := R23
	187	[12401]	GETGLOBAL	R22 K0 ; R22 := _T
	188	[12401]	GETUPVAL 	R23 U2 ; R23 := U2
	189	[12401]	GETTABLE 	R23 R23 K38 ; R23 := R23["DefaultArchwingRotationOffset"]
	190	[12401]	SETTABLE 	R22 K30 R23 ; R22["ARCHWING_DEFAULT_ROTATION"] := R23
	191	[12402]	GETGLOBAL	R22 K0 ; R22 := _T
	192	[12402]	GETUPVAL 	R23 U2 ; R23 := U2
	193	[12402]	GETTABLE 	R23 R23 K39 ; R23 := R23["DefaultSentinelRotationOffset"]
	194	[12402]	SETTABLE 	R22 K31 R23 ; R22["SENTINEL_DEFAULT_ROTATION"] := R23
	195	[12406]	GETGLOBAL	R22 K0 ; R22 := _T
	196	[12406]	GETTABLE 	R22 R22 K40 ; R22 := R22["suitTable"]
	197	[12406]	EQ       	0 R22 K41 ; if R22 ~= nil then PC := 219
	198	[12406]	JMP      	219 ; PC := 219
	199	[12408]	GETGLOBAL	R22 K0 ; R22 := _T
	200	[12408]	NEWTABLE 	R23 0 0 ; R23 := {}
	201	[12408]	SETTABLE 	R22 K40 R23 ; R22["suitTable"] := R23
	202	[12409]	GETGLOBAL	R22 K0 ; R22 := _T
	203	[12409]	GETTABLE 	R22 R22 K40 ; R22 := R22["suitTable"]
	204	[12409]	GETGLOBAL	R23 K0 ; R23 := _T
	205	[12409]	GETTABLE 	R23 R23 K29 ; R23 := R23["DEFAULT_SUIT_ROTATION"]
	206	[12409]	SETTABLE 	R22 K42 R23 ; R22["desiredRot"] := R23
	207	[12410]	GETGLOBAL	R22 K0 ; R22 := _T
	208	[12410]	GETTABLE 	R22 R22 K40 ; R22 := R22["suitTable"]
	209	[12410]	GETGLOBAL	R23 K0 ; R23 := _T
	210	[12410]	GETTABLE 	R23 R23 K40 ; R23 := R23["suitTable"]
	211	[12410]	GETTABLE 	R23 R23 K42 ; R23 := R23["desiredRot"]
	212	[12410]	SETTABLE 	R22 K43 R23 ; R22["lerpRot"] := R23
	213	[12411]	GETGLOBAL	R22 K0 ; R22 := _T
	214	[12411]	GETTABLE 	R22 R22 K40 ; R22 := R22["suitTable"]
	215	[12411]	GETGLOBAL	R23 K45 ; R23 := 0x00046924
	216	[12411]	CALL     	R23 1 2 ; R23 := R23()
	217	[12411]	SETTABLE 	R22 K44 R23 ; R22["lerpHead"] := R23
	218	[12411]	JMP      	229 ; PC := 229
	219	[12413]	GETGLOBAL	R22 K0 ; R22 := _T
	220	[12413]	GETTABLE 	R22 R22 K40 ; R22 := R22["suitTable"]
	221	[12413]	GETGLOBAL	R23 K0 ; R23 := _T
	222	[12413]	GETTABLE 	R23 R23 K29 ; R23 := R23["DEFAULT_SUIT_ROTATION"]
	223	[12413]	SETTABLE 	R22 K42 R23 ; R22["desiredRot"] := R23
	224	[12414]	GETGLOBAL	R22 K0 ; R22 := _T
	225	[12414]	GETTABLE 	R22 R22 K40 ; R22 := R22["suitTable"]
	226	[12414]	GETGLOBAL	R23 K45 ; R23 := 0x00046924
	227	[12414]	CALL     	R23 1 2 ; R23 := R23()
	228	[12414]	SETTABLE 	R22 K44 R23 ; R22["lerpHead"] := R23
	229	[12416]	RETURN   	R0 1 ; return 

function #188 <?:12418,12498> (240 instructions, 960 bytes at 000002112BD29200)
0 params, 13 slots, 3 upvalues, 0 locals, 37 constants, 0 functions
	1	[12419]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[12419]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[12419]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[12419]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[12419]	JMP      	7 ; PC := 7
	6	[12420]	RETURN   	R0 1 ; return 
	7	[12422]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	8	[12422]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xfb64e76c]
	9	[12422]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[12423]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	11	[12423]	MOVE     	R2 R0 ; R2 := R0
	12	[12423]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[12423]	TEST     	R1 0 ; if not R1 then PC := 16
	14	[12423]	JMP      	16 ; PC := 16
	15	[12424]	RETURN   	R0 1 ; return 
	16	[12426]	GETGLOBAL	R1 K3 ; R1 := _T
	17	[12426]	GETTABLE 	R1 R1 K4 ; R1 := R1["MenuSuitAvatar"]
	18	[12427]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	19	[12427]	MOVE     	R3 R1 ; R3 := R1
	20	[12427]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[12427]	TEST     	R2 0 ; if not R2 then PC := 26
	22	[12427]	JMP      	26 ; PC := 26
	23	[12428]	SELF     	R2 R0 K5 ; R3 := R0; R2 := R0[0xbb610e5b]
	24	[12428]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[12428]	MOVE     	R1 R2 ; R1 := R2
	26	[12431]	SELF     	R2 R0 K6 ; R3 := R0; R2 := R0[0x5578d98b]
	27	[12431]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[12433]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	29	[12433]	MOVE     	R4 R2 ; R4 := R2
	30	[12433]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[12433]	TEST     	R3 0 ; if not R3 then PC := 43
	32	[12433]	JMP      	43 ; PC := 43
	33	[12434]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0xbb610e5b]
	34	[12434]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[12434]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0xf2deaf69]
	36	[12434]	GETUPVAL 	R5 U0 ; R5 := U0
	37	[12434]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	38	[12434]	TEST     	R3 0 ; if not R3 then PC := 43
	39	[12434]	JMP      	43 ; PC := 43
	40	[12435]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0xbb610e5b]
	41	[12435]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[12435]	MOVE     	R2 R3 ; R2 := R3
	43	[12438]	GETGLOBAL	R3 K8 ; R3 := 0xa421af95
	44	[12438]	CALL     	R3 1 2 ; R3 := R3()
	45	[12439]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	46	[12439]	MOVE     	R5 R2 ; R5 := R2
	47	[12439]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[12439]	TEST     	R4 1 ; if R4 then PC := 67
	49	[12439]	JMP      	67 ; PC := 67
	50	[12439]	SELF     	R4 R0 K5 ; R5 := R0; R4 := R0[0xbb610e5b]
	51	[12439]	CALL     	R4 2 2 ; R4 := R4(R5)
	52	[12439]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 67
	53	[12439]	JMP      	67 ; PC := 67
	54	[12440]	SELF     	R4 R1 K9 ; R5 := R1; R4 := R1[0x5d985c7e]
	55	[12440]	LOADNIL  	R6 R6 ; R6 := nil
	56	[12440]	OP_LOADBOOL	R7 0 0 ; R7 := false
	57	[12440]	LOADK    	R8 := 2.000000
	58	[12440]	LOADK    	R9 := 1.000000
	59	[12440]	OP_LOADBOOL	R10 1 0 ; R10 := true
	60	[12440]	CALL     	R4 7 1 ; R4(R5,R6,R7,R8,R9,R10)
	61	[12441]	SELF     	R4 R2 K11 ; R5 := R2; R4 := R2[0x2abc8ecd]
	62	[12441]	OP_LOADBOOL	R6 0 0 ; R6 := false
	63	[12441]	CALL     	R4 3 1 ; R4(R5,R6)
	64	[12442]	SELF     	R4 R2 K12 ; R5 := R2; R4 := R2[0xd1586535]
	65	[12442]	CALL     	R4 2 2 ; R4 := R4(R5)
	66	[12442]	MOVE     	R3 R4 ; R3 := R4
	67	[12445]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	68	[12445]	MOVE     	R5 R1 ; R5 := R1
	69	[12445]	CALL     	R4 2 2 ; R4 := R4(R5)
	70	[12445]	TEST     	R4 1 ; if R4 then PC := 240
	71	[12445]	JMP      	240 ; PC := 240
	72	[12446]	SELF     	R4 R1 K13 ; R5 := R1; R4 := R1[0x020d4331]
	73	[12446]	CALL     	R4 2 2 ; R4 := R4(R5)
	74	[12446]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0xcdadcd5d]
	75	[12446]	GETGLOBAL	R6 K15 ; R6 := ZERO_VECTOR
	76	[12446]	CALL     	R4 3 1 ; R4(R5,R6)
	77	[12447]	SELF     	R4 R1 K13 ; R5 := R1; R4 := R1[0x020d4331]
	78	[12447]	CALL     	R4 2 2 ; R4 := R4(R5)
	79	[12447]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x8eefb01e]
	80	[12447]	GETGLOBAL	R6 K8 ; R6 := 0xa421af95
	81	[12447]	CALL     	R6 1 0 ; R6,... := R6()
	82	[12447]	CALL     	R4 0 1 ; R4(R5,...)
	83	[12448]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	84	[12448]	GETGLOBAL	R5 K17 ; R5 := 0xbe190284
	85	[12448]	CALL     	R4 2 2 ; R4 := R4(R5)
	86	[12448]	TEST     	R4 1 ; if R4 then PC := 240
	87	[12448]	JMP      	240 ; PC := 240
	88	[12448]	GETGLOBAL	R4 K17 ; R4 := 0xbe190284
	89	[12448]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xf2deaf69]
	90	[12448]	GETGLOBAL	R6 K18 ; R6 := gLotusPhotoBoothGameRulesType
	91	[12448]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	92	[12448]	TEST     	R4 1 ; if R4 then PC := 240
	93	[12448]	JMP      	240 ; PC := 240
	94	[12449]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	95	[12449]	GETGLOBAL	R5 K19 ; R5 := mArsenalConsole
	96	[12449]	CALL     	R4 2 2 ; R4 := R4(R5)
	97	[12449]	TEST     	R4 1 ; if R4 then PC := 240
	98	[12449]	JMP      	240 ; PC := 240
	99	[12450]	GETGLOBAL	R4 K19 ; R4 := mArsenalConsole
	100	[12450]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0xd1586535]
	101	[12450]	CALL     	R4 2 2 ; R4 := R4(R5)
	102	[12451]	GETGLOBAL	R5 K17 ; R5 := 0xbe190284
	103	[12451]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0xf2deaf69]
	104	[12451]	GETGLOBAL	R7 K20 ; R7 := gLotusBaseGameRulesType
	105	[12451]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	106	[12451]	TEST     	R5 0 ; if not R5 then PC := 126
	107	[12451]	JMP      	126 ; PC := 126
	108	[12452]	GETGLOBAL	R5 K17 ; R5 := 0xbe190284
	109	[12452]	SELF     	R5 R5 K21 ; R6 := R5; R5 := R5[0xef893aec]
	110	[12452]	CALL     	R5 2 2 ; R5 := R5(R6)
	111	[12452]	GETTABLE 	R5 R5 K22 ; R5 := R5["location"]
	112	[12452]	GETUPVAL 	R6 U1 ; R6 := U1
	113	[12452]	GETTABLE 	R6 R6 K23 ; R6 := R6["CETUS_NODE_TAG"]
	114	[12452]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 125
	115	[12452]	JMP      	125 ; PC := 125
	116	[12452]	GETGLOBAL	R5 K17 ; R5 := 0xbe190284
	117	[12452]	SELF     	R5 R5 K21 ; R6 := R5; R5 := R5[0xef893aec]
	118	[12452]	CALL     	R5 2 2 ; R5 := R5(R6)
	119	[12452]	GETTABLE 	R5 R5 K22 ; R5 := R5["location"]
	120	[12452]	GETUPVAL 	R6 U1 ; R6 := U1
	121	[12452]	GETTABLE 	R6 R6 K24 ; R6 := R6["FORTUNA_NODE_TAG"]
	122	[12452]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 125
	123	[12452]	JMP      	125 ; PC := 125
	124	[12452]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 125
	125	[12452]	OP_LOADBOOL	R5 1 0 ; R5 := true
	126	[12453]	TEST     	R5 1 ; if R5 then PC := 133
	127	[12453]	JMP      	133 ; PC := 133
	128	[12453]	GETUPVAL 	R6 U2 ; R6 := U2
	129	[12453]	GETTABLE 	R6 R6 K25 ; R6 := R6[0x7a04c21d]
	130	[12453]	CALL     	R6 1 2 ; R6 := R6()
	131	[12453]	TEST     	R6 0 ; if not R6 then PC := 135
	132	[12453]	JMP      	135 ; PC := 135
	133	[12456]	MOVE     	R4 R3 ; R4 := R3
	134	[12456]	JMP      	146 ; PC := 146
	135	[12457]	GETGLOBAL	R6 K3 ; R6 := _T
	136	[12457]	GETTABLE 	R6 R6 K26 ; R6 := R6["InSimulacrum"]
	137	[12457]	TEST     	R6 0 ; if not R6 then PC := 143
	138	[12457]	JMP      	143 ; PC := 143
	139	[12458]	GETTABLE 	R6 R4 K27 ; R6 := R4["y"]
	140	[12458]	SUB      	R6 R6 K28 ; R6 := R6 - 0.750000
	141	[12458]	SETTABLE 	R4 K27 R6 ; R4["y"] := R6
	142	[12458]	JMP      	146 ; PC := 146
	143	[12460]	GETTABLE 	R6 R4 K27 ; R6 := R4["y"]
	144	[12460]	SUB      	R6 R6 K28 ; R6 := R6 - 0.750000
	145	[12460]	SETTABLE 	R4 K27 R6 ; R4["y"] := R6
	146	[12462]	GETGLOBAL	R6 K29 ; R6 := 0xcbd666e1
	147	[12462]	LOADK    	R7 := 0.000000
	148	[12462]	CALL     	R6 2 1 ; R6(R7)
	149	[12463]	SELF     	R6 R1 K30 ; R7 := R1; R6 := R1[0x589ef1c1]
	150	[12463]	MOVE     	R8 R4 ; R8 := R4
	151	[12463]	GETGLOBAL	R9 K19 ; R9 := mArsenalConsole
	152	[12463]	SELF     	R9 R9 K31 ; R10 := R9; R9 := R9[0xcb3851b8]
	153	[12463]	CALL     	R9 2 0 ; R9,... := R9(R10)
	154	[12463]	CALL     	R6 0 1 ; R6(R7,...)
	155	[12465]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	156	[12465]	MOVE     	R7 R2 ; R7 := R2
	157	[12465]	CALL     	R6 2 2 ; R6 := R6(R7)
	158	[12465]	TEST     	R6 1 ; if R6 then PC := 177
	159	[12465]	JMP      	177 ; PC := 177
	160	[12465]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0xbb610e5b]
	161	[12465]	CALL     	R6 2 2 ; R6 := R6(R7)
	162	[12465]	EQ       	0 R2 R6 ; if R2 ~= R6 then PC := 177
	163	[12465]	JMP      	177 ; PC := 177
	164	[12466]	SELF     	R6 R0 K32 ; R7 := R0; R6 := R0[0xa534c3ac]
	165	[12466]	CALL     	R6 2 2 ; R6 := R6(R7)
	166	[12467]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	167	[12467]	MOVE     	R8 R6 ; R8 := R6
	168	[12467]	CALL     	R7 2 2 ; R7 := R7(R8)
	169	[12467]	TEST     	R7 1 ; if R7 then PC := 177
	170	[12467]	JMP      	177 ; PC := 177
	171	[12468]	SELF     	R7 R6 K30 ; R8 := R6; R7 := R6[0x589ef1c1]
	172	[12468]	MOVE     	R9 R4 ; R9 := R4
	173	[12468]	GETGLOBAL	R10 K19 ; R10 := mArsenalConsole
	174	[12468]	SELF     	R10 R10 K31 ; R11 := R10; R10 := R10[0xcb3851b8]
	175	[12468]	CALL     	R10 2 0 ; R10,... := R10(R11)
	176	[12468]	CALL     	R7 0 1 ; R7(R8,...)
	177	[12473]	GETGLOBAL	R7 K1 ; R7 := 0x89326c93
	178	[12473]	SELF     	R7 R7 K33 ; R8 := R7; R7 := R7[0x18d05d30]
	179	[12473]	CALL     	R7 2 2 ; R7 := R7(R8)
	180	[12473]	TEST     	R7 1 ; if R7 then PC := 199
	181	[12473]	JMP      	199 ; PC := 199
	182	[12473]	GETGLOBAL	R7 K3 ; R7 := _T
	183	[12473]	GETTABLE 	R7 R7 K26 ; R7 := R7["InSimulacrum"]
	184	[12473]	TEST     	R7 0 ; if not R7 then PC := 199
	185	[12473]	JMP      	199 ; PC := 199
	186	[12474]	SELF     	R7 R0 K32 ; R8 := R0; R7 := R0[0xa534c3ac]
	187	[12474]	CALL     	R7 2 2 ; R7 := R7(R8)
	188	[12475]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	189	[12475]	MOVE     	R9 R7 ; R9 := R7
	190	[12475]	CALL     	R8 2 2 ; R8 := R8(R9)
	191	[12475]	TEST     	R8 1 ; if R8 then PC := 199
	192	[12475]	JMP      	199 ; PC := 199
	193	[12476]	SELF     	R8 R7 K30 ; R9 := R7; R8 := R7[0x589ef1c1]
	194	[12476]	MOVE     	R10 R4 ; R10 := R4
	195	[12476]	GETGLOBAL	R11 K19 ; R11 := mArsenalConsole
	196	[12476]	SELF     	R11 R11 K31 ; R12 := R11; R11 := R11[0xcb3851b8]
	197	[12476]	CALL     	R11 2 0 ; R11,... := R11(R12)
	198	[12476]	CALL     	R8 0 1 ; R8(R9,...)
	199	[12481]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	200	[12481]	GETGLOBAL	R9 K3 ; R9 := _T
	201	[12481]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	202	[12481]	CALL     	R8 2 2 ; R8 := R8(R9)
	203	[12481]	TEST     	R8 0 ; if not R8 then PC := 208
	204	[12481]	JMP      	208 ; PC := 208
	205	[12482]	GETGLOBAL	R8 K3 ; R8 := _T
	206	[12482]	NEWTABLE 	R9 0 0 ; R9 := {}
	207	[12482]	SETTABLE 	R8 K34 R9 ; R8["suitTable"] := R9
	208	[12484]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	209	[12484]	GETGLOBAL	R9 K3 ; R9 := _T
	210	[12484]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	211	[12484]	GETTABLE 	R9 R9 K35 ; R9 := R9["positions"]
	212	[12484]	CALL     	R8 2 2 ; R8 := R8(R9)
	213	[12484]	TEST     	R8 0 ; if not R8 then PC := 219
	214	[12484]	JMP      	219 ; PC := 219
	215	[12485]	GETGLOBAL	R8 K3 ; R8 := _T
	216	[12485]	GETTABLE 	R8 R8 K34 ; R8 := R8["suitTable"]
	217	[12485]	NEWTABLE 	R9 0 0 ; R9 := {}
	218	[12485]	SETTABLE 	R8 K35 R9 ; R8["positions"] := R9
	219	[12487]	SELF     	R8 R1 K36 ; R9 := R1; R8 := R1[0x388577d5]
	220	[12487]	CALL     	R8 2 2 ; R8 := R8(R9)
	221	[12488]	GETGLOBAL	R9 K3 ; R9 := _T
	222	[12488]	GETTABLE 	R9 R9 K34 ; R9 := R9["suitTable"]
	223	[12488]	GETTABLE 	R9 R9 K35 ; R9 := R9["positions"]
	224	[12488]	SETTABLE 	R9 R8 R4 ; R9[R8] := R4
	225	[12490]	SELF     	R9 R0 K5 ; R10 := R0; R9 := R0[0xbb610e5b]
	226	[12490]	CALL     	R9 2 2 ; R9 := R9(R10)
	227	[12491]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	228	[12491]	MOVE     	R11 R9 ; R11 := R9
	229	[12491]	CALL     	R10 2 2 ; R10 := R10(R11)
	230	[12491]	TEST     	R10 1 ; if R10 then PC := 240
	231	[12491]	JMP      	240 ; PC := 240
	232	[12491]	EQ       	1 R9 R1 ; if R9 == R1 then PC := 240
	233	[12491]	JMP      	240 ; PC := 240
	234	[12493]	GETGLOBAL	R10 K3 ; R10 := _T
	235	[12493]	GETTABLE 	R10 R10 K34 ; R10 := R10["suitTable"]
	236	[12493]	GETTABLE 	R10 R10 K35 ; R10 := R10["positions"]
	237	[12493]	SELF     	R11 R9 K36 ; R12 := R9; R11 := R9[0x388577d5]
	238	[12493]	CALL     	R11 2 2 ; R11 := R11(R12)
	239	[12493]	SETTABLE 	R10 R11 R4 ; R10[R11] := R4
	240	[12498]	RETURN   	R0 1 ; return 

function #189 <?:12501,12522> (56 instructions, 224 bytes at 000002112BD29C90)
1 param, 5 slots, 1 upvalue, 0 locals, 22 constants, 0 functions
	1	[12502]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[12502]	GETGLOBAL	R2 K1 ; R2 := 0xab18f94e
	3	[12502]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[12502]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[12502]	JMP      	7 ; PC := 7
	6	[12503]	RETURN   	R0 1 ; return 
	7	[12506]	GETGLOBAL	R1 K2 ; R1 := mLists
	8	[12506]	GETTABLE 	R1 R1 K3 ; R1 := R1["mLoadOutList"]
	9	[12506]	GETTABLE 	R1 R1 K4 ; R1 := R1["mElements"]
	10	[12506]	GETGLOBAL	R2 K2 ; R2 := mLists
	11	[12506]	GETTABLE 	R2 R2 K3 ; R2 := R2["mLoadOutList"]
	12	[12506]	GETTABLE 	R2 R2 K5 ; R2 := R2["SuitSlotId"]
	13	[12506]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	14	[12507]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	15	[12507]	MOVE     	R3 R1 ; R3 := R1
	16	[12507]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[12507]	TEST     	R2 0 ; if not R2 then PC := 20
	18	[12507]	JMP      	20 ; PC := 20
	19	[12508]	RETURN   	R0 1 ; return 
	20	[12511]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	21	[12511]	GETGLOBAL	R3 K6 ; R3 := mChildMovie
	22	[12511]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[12511]	TEST     	R2 1 ; if R2 then PC := 28
	24	[12511]	JMP      	28 ; PC := 28
	25	[12512]	GETGLOBAL	R2 K6 ; R2 := mChildMovie
	26	[12512]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x32302b4a]
	27	[12512]	CALL     	R2 2 1 ; R2(R3)
	28	[12515]	GETGLOBAL	R2 K8 ; R2 := _T
	29	[12515]	GETTABLE 	R2 R2 K9 ; R2 := R2["suitTable"]
	30	[12515]	GETGLOBAL	R3 K8 ; R3 := _T
	31	[12515]	GETTABLE 	R3 R3 K11 ; R3 := R3["DEFAULT_SUIT_ROTATION"]
	32	[12515]	SETTABLE 	R2 K10 R3 ; R2["desiredRot"] := R3
	33	[12516]	GETGLOBAL	R2 K8 ; R2 := _T
	34	[12516]	GETTABLE 	R2 R2 K9 ; R2 := R2["suitTable"]
	35	[12516]	GETGLOBAL	R3 K8 ; R3 := _T
	36	[12516]	GETTABLE 	R3 R3 K9 ; R3 := R3["suitTable"]
	37	[12516]	GETTABLE 	R3 R3 K10 ; R3 := R3["desiredRot"]
	38	[12516]	SETTABLE 	R2 K12 R3 ; R2["lerpRot"] := R3
	39	[12517]	GETUPVAL 	R2 U0 ; R2 := U0
	40	[12517]	GETTABLE 	R2 R2 K13 ; R2 := R2[0xd4c67576]
	41	[12517]	OP_LOADBOOL	R3 1 0 ; R3 := true
	42	[12517]	CALL     	R2 2 1 ; R2(R3)
	43	[12519]	GETGLOBAL	R2 K8 ; R2 := _T
	44	[12519]	NEWTABLE 	R3 0 3 ; R3 := {}
	45	[12519]	SETTABLE 	R3 K15 R0 ; R3["abilityIndex"] := R0
	46	[12519]	GETTABLE 	R4 R1 K17 ; R4 := R1["UID"]
	47	[12519]	SETTABLE 	R3 K16 R4 ; R3["weaponId"] := R4
	48	[12519]	GETTABLE 	R4 R1 K19 ; R4 := R1["mCustSlot"]
	49	[12519]	SETTABLE 	R3 K18 R4 ; R3["configId"] := R4
	50	[12519]	SETTABLE 	R2 K14 R3 ; R2["ComposeTool"] := R3
	51	[12521]	GETGLOBAL	R2 K20 ; R2 := 0xae91e43b
	52	[12521]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x1fd6abd0]
	53	[12521]	GETGLOBAL	R4 K1 ; R4 := 0xab18f94e
	54	[12521]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	55	[12521]	SETGLOBALHASH	R2 K6 ; mChildMovie := R2
	56	[12522]	RETURN   	R0 1 ; return 

function #190 <?:12524,12890> (1248 instructions, 4992 bytes at 000002112BD2A070)
0 params, 48 slots, 41 upvalues, 0 locals, 192 constants, 1 function
	1	[12525]	GETGLOBAL	R0 K0 ; R0 := 0xb693b6c1
	2	[12525]	CALL     	R0 1 2 ; R0 := R0()
	3	[12526]	GETGLOBAL	R1 K1 ; R1 := mInitialized
	4	[12526]	TEST     	R1 0 ; if not R1 then PC := 16
	5	[12526]	JMP      	16 ; PC := 16
	6	[12526]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	7	[12526]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[12526]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[12526]	TEST     	R1 1 ; if R1 then PC := 16
	10	[12526]	JMP      	16 ; PC := 16
	11	[12526]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	12	[12526]	GETGLOBAL	R2 K4 ; R2 := 0x89326c93
	13	[12526]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[12526]	TEST     	R1 0 ; if not R1 then PC := 17
	15	[12526]	JMP      	17 ; PC := 17
	16	[12527]	RETURN   	R0 1 ; return 
	17	[12530]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	18	[12530]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x8a8c8d5a]
	19	[12530]	MOVE     	R3 R0 ; R3 := R0
	20	[12530]	CALL     	R1 3 1 ; R1(R2,R3)
	21	[12532]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	22	[12532]	GETGLOBAL	R2 K6 ; R2 := mTimerTable
	23	[12532]	GETTABLE 	R2 R2 K7 ; R2 := R2["mTimerMgr"]
	24	[12532]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[12532]	TEST     	R1 1 ; if R1 then PC := 32
	26	[12532]	JMP      	32 ; PC := 32
	27	[12533]	GETGLOBAL	R1 K6 ; R1 := mTimerTable
	28	[12533]	GETTABLE 	R1 R1 K7 ; R1 := R1["mTimerMgr"]
	29	[12533]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xfaa69527]
	30	[12533]	MOVE     	R3 R0 ; R3 := R0
	31	[12533]	CALL     	R1 3 1 ; R1(R2,R3)
	32	[12536]	GETGLOBAL	R1 K9 ; R1 := 0x34291f5c
	33	[12536]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xe6b41adb]
	34	[12536]	CALL     	R1 1 2 ; R1 := R1()
	35	[12536]	TEST     	R1 0 ; if not R1 then PC := 46
	36	[12536]	JMP      	46 ; PC := 46
	37	[12536]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	38	[12536]	GETGLOBAL	R2 K11 ; R2 := mItemsGrid
	39	[12536]	CALL     	R1 2 2 ; R1 := R1(R2)
	40	[12536]	TEST     	R1 1 ; if R1 then PC := 46
	41	[12536]	JMP      	46 ; PC := 46
	42	[12537]	GETGLOBAL	R1 K11 ; R1 := mItemsGrid
	43	[12537]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xfaa69527]
	44	[12537]	MOVE     	R3 R0 ; R3 := R0
	45	[12537]	CALL     	R1 3 1 ; R1(R2,R3)
	46	[12540]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	47	[12540]	GETUPVAL 	R2 U0 ; R2 := U0
	48	[12540]	CALL     	R1 2 2 ; R1 := R1(R2)
	49	[12540]	TEST     	R1 1 ; if R1 then PC := 56
	50	[12540]	JMP      	56 ; PC := 56
	51	[12541]	GETUPVAL 	R1 U0 ; R1 := U0
	52	[12541]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xfaa69527]
	53	[12541]	GETGLOBAL	R3 K0 ; R3 := 0xb693b6c1
	54	[12541]	CALL     	R3 1 0 ; R3,... := R3()
	55	[12541]	CALL     	R1 0 1 ; R1(R2,...)
	56	[12544]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	57	[12544]	GETUPVAL 	R2 U1 ; R2 := U1
	58	[12544]	CALL     	R1 2 2 ; R1 := R1(R2)
	59	[12544]	TEST     	R1 1 ; if R1 then PC := 65
	60	[12544]	JMP      	65 ; PC := 65
	61	[12545]	GETUPVAL 	R1 U1 ; R1 := U1
	62	[12545]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xfaa69527]
	63	[12545]	MOVE     	R3 R0 ; R3 := R0
	64	[12545]	CALL     	R1 3 1 ; R1(R2,R3)
	65	[12548]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	66	[12548]	GETGLOBAL	R2 K12 ; R2 := _T
	67	[12548]	GETTABLE 	R2 R2 K13 ; R2 := R2["MenuSuitAvatar"]
	68	[12548]	CALL     	R1 2 2 ; R1 := R1(R2)
	69	[12548]	TEST     	R1 0 ; if not R1 then PC := 73
	70	[12548]	JMP      	73 ; PC := 73
	71	[12549]	GETUPVAL 	R1 U2 ; R1 := U2
	72	[12549]	CALL     	R1 1 1 ; R1()
	73	[12558]	GETUPVAL 	R1 U3 ; R1 := U3
	74	[12558]	GETTABLE 	R1 R1 K14 ; R1 := R1["Timer"]
	75	[12558]	LT       	0 K15 R1 ; if 0.000000 >= R1 then PC := 144
	76	[12558]	JMP      	144 ; PC := 144
	77	[12560]	GETUPVAL 	R1 U3 ; R1 := U3
	78	[12560]	GETUPVAL 	R2 U3 ; R2 := U3
	79	[12560]	GETTABLE 	R2 R2 K14 ; R2 := R2["Timer"]
	80	[12560]	SUB      	R2 R2 R0 ; R2 := R2 - R0
	81	[12560]	SETTABLE 	R1 K14 R2 ; R1["Timer"] := R2
	82	[12561]	OP_LOADBOOL	R1 1 0 ; R1 := true
	83	[12561]	SETGLOBALHASH	R1 K16 ; mInputBlocked := R1
	84	[12562]	LOADK    	R1 := 1.000000
	85	[12563]	GETUPVAL 	R2 U3 ; R2 := U3
	86	[12563]	GETTABLE 	R2 R2 K14 ; R2 := R2["Timer"]
	87	[12563]	GETUPVAL 	R3 U3 ; R3 := U3
	88	[12563]	GETTABLE 	R3 R3 K17 ; R3 := R3["StartTime"]
	89	[12563]	GETUPVAL 	R4 U3 ; R4 := U3
	90	[12563]	GETTABLE 	R4 R4 K18 ; R4 := R4["FadeInTime"]
	91	[12563]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	92	[12563]	LT       	0 R3 R2 ; if R3 >= R2 then PC := 109
	93	[12563]	JMP      	109 ; PC := 109
	94	[12565]	GETUPVAL 	R2 U3 ; R2 := U3
	95	[12565]	GETTABLE 	R2 R2 K18 ; R2 := R2["FadeInTime"]
	96	[12565]	GETUPVAL 	R3 U3 ; R3 := U3
	97	[12565]	GETTABLE 	R3 R3 K14 ; R3 := R3["Timer"]
	98	[12565]	GETUPVAL 	R4 U3 ; R4 := U3
	99	[12565]	GETTABLE 	R4 R4 K17 ; R4 := R4["StartTime"]
	100	[12565]	GETUPVAL 	R5 U3 ; R5 := U3
	101	[12565]	GETTABLE 	R5 R5 K18 ; R5 := R5["FadeInTime"]
	102	[12565]	SUB      	R4 R4 R5 ; R4 := R4 - R5
	103	[12565]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	104	[12565]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	105	[12565]	GETUPVAL 	R3 U3 ; R3 := U3
	106	[12565]	GETTABLE 	R3 R3 K18 ; R3 := R3["FadeInTime"]
	107	[12565]	DIV      	R1 R2 R3 ; R1 := R2 / R3
	108	[12565]	JMP      	138 ; PC := 138
	109	[12566]	GETUPVAL 	R2 U3 ; R2 := U3
	110	[12566]	GETTABLE 	R2 R2 K14 ; R2 := R2["Timer"]
	111	[12566]	LE       	0 R2 K15 ; if R2 > 0.000000 then PC := 117
	112	[12566]	JMP      	117 ; PC := 117
	113	[12568]	LOADK    	R1 := 0.000000
	114	[12569]	OP_LOADBOOL	R2 0 0 ; R2 := false
	115	[12569]	SETGLOBALHASH	R2 K16 ; mInputBlocked := R2
	116	[12569]	JMP      	138 ; PC := 138
	117	[12570]	GETUPVAL 	R2 U3 ; R2 := U3
	118	[12570]	GETTABLE 	R2 R2 K14 ; R2 := R2["Timer"]
	119	[12570]	GETUPVAL 	R3 U3 ; R3 := U3
	120	[12570]	GETTABLE 	R3 R3 K19 ; R3 := R3["FadeOutTime"]
	121	[12570]	LT       	0 R2 R3 ; if R2 >= R3 then PC := 129
	122	[12570]	JMP      	129 ; PC := 129
	123	[12572]	GETUPVAL 	R2 U3 ; R2 := U3
	124	[12572]	GETTABLE 	R2 R2 K14 ; R2 := R2["Timer"]
	125	[12572]	GETUPVAL 	R3 U3 ; R3 := U3
	126	[12572]	GETTABLE 	R3 R3 K19 ; R3 := R3["FadeOutTime"]
	127	[12572]	DIV      	R1 R2 R3 ; R1 := R2 / R3
	128	[12572]	JMP      	138 ; PC := 138
	129	[12573]	GETUPVAL 	R2 U3 ; R2 := U3
	130	[12573]	GETTABLE 	R2 R2 K20 ; R2 := R2["Callback"]
	131	[12573]	EQ       	1 R2 K21 ; if R2 == nil then PC := 138
	132	[12573]	JMP      	138 ; PC := 138
	133	[12575]	GETUPVAL 	R2 U3 ; R2 := U3
	134	[12575]	GETTABLE 	R2 R2 K22 ; R2 := R2[0x75afeb61]
	135	[12575]	CALL     	R2 1 1 ; R2()
	136	[12576]	GETUPVAL 	R2 U3 ; R2 := U3
	137	[12576]	SETTABLE 	R2 K20 K21 ; R2["Callback"] := nil
	138	[12578]	GETGLOBAL	R2 K4 ; R2 := 0x89326c93
	139	[12578]	SELF     	R2 R2 K23 ; R3 := R2; R2 := R2[0x7c1a0374]
	140	[12578]	CALL     	R2 2 2 ; R2 := R2(R3)
	141	[12578]	SELF     	R2 R2 K24 ; R3 := R2; R2 := R2[0xb6df3e50]
	142	[12578]	MOVE     	R4 R1 ; R4 := R1
	143	[12578]	CALL     	R2 3 1 ; R2(R3,R4)
	144	[12581]	GETGLOBAL	R2 K12 ; R2 := _T
	145	[12581]	GETTABLE 	R2 R2 K25 ; R2 := R2["Arsenal_QuickUpgrade"]
	146	[12581]	EQ       	1 R2 K21 ; if R2 == nil then PC := 174
	147	[12581]	JMP      	174 ; PC := 174
	148	[12581]	GETUPVAL 	R2 U4 ; R2 := U4
	149	[12581]	CALL     	R2 1 2 ; R2 := R2()
	150	[12581]	TEST     	R2 0 ; if not R2 then PC := 174
	151	[12581]	JMP      	174 ; PC := 174
	152	[12582]	LOADNIL  	R2 R2 ; R2 := nil
	153	[12583]	GETGLOBAL	R3 K26 ; R3 := mLists
	154	[12583]	GETTABLE 	R3 R3 K27 ; R3 := R3["mLoadOutList"]
	155	[12583]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0xea061e98]
	156	[12588]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	157	[12588]	MOVE     	R0 R2 ; R0 := R2
	158	[12583]	CALL     	R3 3 1 ; R3(R4,R5)
	159	[12590]	EQ       	1 R2 K21 ; if R2 == nil then PC := 173
	160	[12590]	JMP      	173 ; PC := 173
	161	[12592]	GETUPVAL 	R3 U5 ; R3 := U5
	162	[12592]	GETTABLE 	R3 R3 K29 ; R3 := R3["mStatCompare"]
	163	[12592]	SETTABLE 	R3 K30 K15 ; R3["mUpdateQueued"] := 0.000000
	164	[12593]	GETUPVAL 	R3 U6 ; R3 := U6
	165	[12593]	MOVE     	R4 R2 ; R4 := R2
	166	[12593]	OP_LOADBOOL	R5 1 0 ; R5 := true
	167	[12593]	OP_LOADBOOL	R6 1 0 ; R6 := true
	168	[12593]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	169	[12594]	TEST     	R3 0 ; if not R3 then PC := 173
	170	[12594]	JMP      	173 ; PC := 173
	171	[12595]	GETGLOBAL	R4 K12 ; R4 := _T
	172	[12595]	SETTABLE 	R4 K25 K21 ; R4["Arsenal_QuickUpgrade"] := nil
	173	[12597]	CLOSE    	R2 ; SAVE R2,...
	174	[12600]	GETUPVAL 	R2 U5 ; R2 := U5
	175	[12600]	GETTABLE 	R2 R2 K29 ; R2 := R2["mStatCompare"]
	176	[12600]	GETTABLE 	R2 R2 K30 ; R2 := R2["mUpdateQueued"]
	177	[12600]	LT       	0 K15 R2 ; if 0.000000 >= R2 then PC := 201
	178	[12600]	JMP      	201 ; PC := 201
	179	[12601]	GETUPVAL 	R2 U5 ; R2 := U5
	180	[12601]	GETTABLE 	R2 R2 K29 ; R2 := R2["mStatCompare"]
	181	[12601]	GETUPVAL 	R3 U5 ; R3 := U5
	182	[12601]	GETTABLE 	R3 R3 K29 ; R3 := R3["mStatCompare"]
	183	[12601]	GETTABLE 	R3 R3 K30 ; R3 := R3["mUpdateQueued"]
	184	[12601]	SUB      	R3 R3 K31 ; R3 := R3 - 1.000000
	185	[12601]	SETTABLE 	R2 K30 R3 ; R2["mUpdateQueued"] := R3
	186	[12602]	GETUPVAL 	R2 U5 ; R2 := U5
	187	[12602]	GETTABLE 	R2 R2 K29 ; R2 := R2["mStatCompare"]
	188	[12602]	GETTABLE 	R2 R2 K30 ; R2 := R2["mUpdateQueued"]
	189	[12602]	EQ       	0 R2 K15 ; if R2 ~= 0.000000 then PC := 201
	190	[12602]	JMP      	201 ; PC := 201
	191	[12602]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	192	[12602]	GETGLOBAL	R3 K32 ; R3 := mSelected
	193	[12602]	GETTABLE 	R3 R3 K33 ; R3 := R3["Element"]
	194	[12602]	CALL     	R2 2 2 ; R2 := R2(R3)
	195	[12602]	TEST     	R2 1 ; if R2 then PC := 201
	196	[12602]	JMP      	201 ; PC := 201
	197	[12603]	GETUPVAL 	R2 U7 ; R2 := U7
	198	[12603]	GETGLOBAL	R3 K32 ; R3 := mSelected
	199	[12603]	GETTABLE 	R3 R3 K33 ; R3 := R3["Element"]
	200	[12603]	CALL     	R2 2 1 ; R2(R3)
	201	[12607]	GETGLOBAL	R2 K9 ; R2 := 0x34291f5c
	202	[12607]	GETTABLE 	R2 R2 K34 ; R2 := R2[0x1467d5f4]
	203	[12607]	CALL     	R2 1 2 ; R2 := R2()
	204	[12607]	TEST     	R2 0 ; if not R2 then PC := 262
	205	[12607]	JMP      	262 ; PC := 262
	206	[12608]	GETUPVAL 	R2 U8 ; R2 := U8
	207	[12608]	GETUPVAL 	R3 U9 ; R3 := U9
	208	[12608]	GETTABLE 	R3 R3 K35 ; R3 := R3["SWAPPING_ITEM"]
	209	[12608]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 221
	210	[12608]	JMP      	221 ; PC := 221
	211	[12608]	GETUPVAL 	R2 U8 ; R2 := U8
	212	[12608]	GETUPVAL 	R3 U9 ; R3 := U9
	213	[12608]	GETTABLE 	R3 R3 K36 ; R3 := R3["SELECTING_SKINS"]
	214	[12608]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 221
	215	[12608]	JMP      	221 ; PC := 221
	216	[12608]	GETUPVAL 	R2 U8 ; R2 := U8
	217	[12608]	GETUPVAL 	R3 U9 ; R3 := U9
	218	[12608]	GETTABLE 	R3 R3 K37 ; R3 := R3["SELECTING_CONSUMABLES"]
	219	[12608]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 225
	220	[12608]	JMP      	225 ; PC := 225
	221	[12608]	GETUPVAL 	R2 U10 ; R2 := U10
	222	[12608]	GETTABLE 	R2 R2 K38 ; R2 := R2[0x70d40695]
	223	[12608]	CALL     	R2 1 2 ; R2 := R2()
	224	[12608]	JMP      	227 ; PC := 227
	225	[12608]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 226
	226	[12608]	OP_LOADBOOL	R2 1 0 ; R2 := true
	227	[12609]	GETGLOBAL	R3 K26 ; R3 := mLists
	228	[12609]	GETTABLE 	R3 R3 K39 ; R3 := R3["mCosmeticsScrollBar"]
	229	[12609]	GETTABLE 	R3 R3 K40 ; R3 := R3["mEnabled"]
	230	[12609]	TEST     	R3 0 ; if not R3 then PC := 243
	231	[12609]	JMP      	243 ; PC := 243
	232	[12609]	GETUPVAL 	R3 U8 ; R3 := U8
	233	[12609]	GETUPVAL 	R4 U9 ; R4 := U9
	234	[12609]	GETTABLE 	R4 R4 K41 ; R4 := R4["CUSTOMIZING_SKINS"]
	235	[12609]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 241
	236	[12609]	JMP      	241 ; PC := 241
	237	[12609]	GETUPVAL 	R3 U10 ; R3 := U10
	238	[12609]	GETTABLE 	R3 R3 K42 ; R3 := R3[0xe502027a]
	239	[12609]	CALL     	R3 1 2 ; R3 := R3()
	240	[12609]	JMP      	243 ; PC := 243
	241	[12609]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 242
	242	[12609]	OP_LOADBOOL	R3 1 0 ; R3 := true
	243	[12610]	GETUPVAL 	R4 U5 ; R4 := U5
	244	[12610]	GETTABLE 	R4 R4 K43 ; R4 := R4["mStatCompareScrollBar"]
	245	[12610]	GETTABLE 	R4 R4 K40 ; R4 := R4["mEnabled"]
	246	[12610]	TEST     	R4 0 ; if not R4 then PC := 251
	247	[12610]	JMP      	251 ; PC := 251
	248	[12610]	GETUPVAL 	R4 U10 ; R4 := U10
	249	[12610]	GETTABLE 	R4 R4 K44 ; R4 := R4[0x8d5a3387]
	250	[12610]	CALL     	R4 1 2 ; R4 := R4()
	251	[12611]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	252	[12611]	SELF     	R5 R5 K45 ; R6 := R5; R5 := R5[0x824d113a]
	253	[12611]	TEST     	R2 1 ; if R2 then PC := 259
	254	[12611]	JMP      	259 ; PC := 259
	255	[12611]	TEST     	R4 1 ; if R4 then PC := 259
	256	[12611]	JMP      	259 ; PC := 259
	257	[12611]	NOT      	R7 R3 ; R7 := not R3
	258	[12611]	JMP      	261 ; PC := 261
	259	[12611]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 260
	260	[12611]	OP_LOADBOOL	R7 1 0 ; R7 := true
	261	[12611]	CALL     	R5 3 1 ; R5(R6,R7)
	262	[12614]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	263	[12614]	GETGLOBAL	R6 K46 ; R6 := 0x9ba7909f
	264	[12614]	SELF     	R6 R6 K47 ; R7 := R6; R6 := R6[0xc12c4f71]
	265	[12614]	CALL     	R6 2 2 ; R6 := R6(R7)
	266	[12614]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 270
	267	[12614]	JMP      	270 ; PC := 270
	268	[12615]	GETUPVAL 	R5 U11 ; R5 := U11
	269	[12615]	SETTABLE 	R5 K48 K49 ; R5["MouseDown"] := false
	270	[12618]	GETUPVAL 	R5 U5 ; R5 := U5
	271	[12618]	GETTABLE 	R5 R5 K43 ; R5 := R5["mStatCompareScrollBar"]
	272	[12618]	EQ       	1 R5 K21 ; if R5 == nil then PC := 332
	273	[12618]	JMP      	332 ; PC := 332
	274	[12618]	GETUPVAL 	R5 U5 ; R5 := U5
	275	[12618]	GETTABLE 	R5 R5 K43 ; R5 := R5["mStatCompareScrollBar"]
	276	[12618]	GETTABLE 	R5 R5 K40 ; R5 := R5["mEnabled"]
	277	[12618]	TEST     	R5 0 ; if not R5 then PC := 332
	278	[12618]	JMP      	332 ; PC := 332
	279	[12619]	GETUPVAL 	R5 U10 ; R5 := U10
	280	[12619]	GETTABLE 	R5 R5 K44 ; R5 := R5[0x8d5a3387]
	281	[12619]	CALL     	R5 1 2 ; R5 := R5()
	282	[12620]	GETUPVAL 	R6 U5 ; R6 := U5
	283	[12620]	GETTABLE 	R6 R6 K43 ; R6 := R6["mStatCompareScrollBar"]
	284	[12620]	GETTABLE 	R6 R6 K50 ; R6 := R6["mActive"]
	285	[12620]	EQ       	1 R6 R5 ; if R6 == R5 then PC := 332
	286	[12620]	JMP      	332 ; PC := 332
	287	[12621]	GETUPVAL 	R6 U12 ; R6 := U12
	288	[12621]	GETTABLE 	R6 R6 K51 ; R6 := R6[0x06d055f9]
	289	[12621]	GETUPVAL 	R7 U5 ; R7 := U5
	290	[12621]	GETTABLE 	R7 R7 K43 ; R7 := R7["mStatCompareScrollBar"]
	291	[12621]	GETTABLE 	R7 R7 K50 ; R7 := R7["mActive"]
	292	[12621]	EQ       	1 R7 K21 ; if R7 == nil then PC := 295
	293	[12621]	JMP      	295 ; PC := 295
	294	[12621]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 295
	295	[12621]	OP_LOADBOOL	R7 1 0 ; R7 := true
	296	[12621]	LOADK    	R8 := 0.000000
	297	[12621]	LOADK    	R9 K52 ; R9 := 0.200000
	298	[12621]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	299	[12622]	GETUPVAL 	R7 U5 ; R7 := U5
	300	[12622]	GETTABLE 	R7 R7 K43 ; R7 := R7["mStatCompareScrollBar"]
	301	[12622]	SETTABLE 	R7 K50 R5 ; R7["mActive"] := R5
	302	[12623]	GETUPVAL 	R7 U12 ; R7 := U12
	303	[12623]	GETTABLE 	R7 R7 K51 ; R7 := R7[0x06d055f9]
	304	[12623]	GETUPVAL 	R8 U5 ; R8 := U5
	305	[12623]	GETTABLE 	R8 R8 K43 ; R8 := R8["mStatCompareScrollBar"]
	306	[12623]	GETTABLE 	R8 R8 K50 ; R8 := R8["mActive"]
	307	[12623]	LOADK    	R9 := 100.000000
	308	[12623]	LOADK    	R10 := 50.000000
	309	[12623]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	310	[12624]	GETUPVAL 	R8 U12 ; R8 := U12
	311	[12624]	GETTABLE 	R8 R8 K51 ; R8 := R8[0x06d055f9]
	312	[12624]	GETUPVAL 	R9 U5 ; R9 := U5
	313	[12624]	GETTABLE 	R9 R9 K43 ; R9 := R9["mStatCompareScrollBar"]
	314	[12624]	GETTABLE 	R9 R9 K50 ; R9 := R9["mActive"]
	315	[12624]	LOADK    	R10 := 100.000000
	316	[12624]	LOADK    	R11 := 30.000000
	317	[12624]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	318	[12626]	GETGLOBAL	R9 K53 ; R9 := 0x25312c9b
	319	[12626]	GETGLOBAL	R10 K3 ; R10 := 0xae91e43b
	320	[12626]	LOADK    	R11 K54 ; R11 := "StatContainer.ScrollBarContainer"
	321	[12626]	LOADK    	R12 := 8.000000
	322	[12626]	NEWTABLE 	R13 2 0 ; R13 := {}
	323	[12626]	LOADK    	R14 := 10.000000
	324	[12626]	LOADK    	R15 := 5.000000
	325	[12626]	SETLIST  	R13 2 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 2
	326	[12626]	NEWTABLE 	R14 2 0 ; R14 := {}
	327	[12626]	MOVE     	R15 R7 ; R15 := R7
	328	[12626]	MOVE     	R16 R8 ; R16 := R8
	329	[12626]	SETLIST  	R14 2 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 2
	330	[12626]	MOVE     	R15 R6 ; R15 := R6
	331	[12626]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	332	[12630]	GETUPVAL 	R9 U13 ; R9 := U13
	333	[12630]	TEST     	R9 0 ; if not R9 then PC := 346
	334	[12630]	JMP      	346 ; PC := 346
	335	[12631]	OP_LOADBOOL	R9 0 0 ; R9 := false
	336	[12631]	SETUPVAL 	R9 U13 ; U13 := R9
	337	[12632]	GETUPVAL 	R9 U12 ; R9 := U12
	338	[12632]	GETTABLE 	R9 R9 K56 ; R9 := R9[0xf616a184]
	339	[12632]	GETGLOBAL	R10 K3 ; R10 := 0xae91e43b
	340	[12632]	SELF     	R10 R10 K57 ; R11 := R10; R10 := R10[0x42b04007]
	341	[12632]	LOADK    	R12 K58 ; R12 := "/Lotus/Language/Menu/RetrieveLockedWeapons"
	342	[12632]	OP_LOADBOOL	R13 0 0 ; R13 := false
	343	[12632]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	344	[12632]	LOADK    	R11 K59 ; R11 := "ConfirmWeaponRetrieve"
	345	[12632]	CALL     	R9 3 1 ; R9(R10,R11)
	346	[12635]	GETGLOBAL	R9 K12 ; R9 := _T
	347	[12635]	GETTABLE 	R9 R9 K60 ; R9 := R9["QuickSelectTutorialName"]
	348	[12635]	EQ       	0 R9 K21 ; if R9 ~= nil then PC := 377
	349	[12635]	JMP      	377 ; PC := 377
	350	[12635]	GETGLOBAL	R9 K12 ; R9 := _T
	351	[12635]	GETTABLE 	R9 R9 K61 ; R9 := R9["TopMenuOpen"]
	352	[12635]	EQ       	1 R9 K21 ; if R9 == nil then PC := 358
	353	[12635]	JMP      	358 ; PC := 358
	354	[12635]	GETGLOBAL	R9 K12 ; R9 := _T
	355	[12635]	GETTABLE 	R9 R9 K61 ; R9 := R9["TopMenuOpen"]
	356	[12635]	TEST     	R9 1 ; if R9 then PC := 377
	357	[12635]	JMP      	377 ; PC := 377
	358	[12635]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	359	[12635]	GETGLOBAL	R10 K62 ; R10 := mChildMovie
	360	[12635]	CALL     	R9 2 2 ; R9 := R9(R10)
	361	[12635]	TEST     	R9 1 ; if R9 then PC := 379
	362	[12635]	JMP      	379 ; PC := 379
	363	[12635]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	364	[12635]	GETGLOBAL	R10 K62 ; R10 := mChildMovie
	365	[12635]	SELF     	R10 R10 K63 ; R11 := R10; R10 := R10[0x492f9da2]
	366	[12635]	CALL     	R10 2 0 ; R10,... := R10(R11)
	367	[12635]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	368	[12635]	TEST     	R9 1 ; if R9 then PC := 379
	369	[12635]	JMP      	379 ; PC := 379
	370	[12635]	GETGLOBAL	R9 K62 ; R9 := mChildMovie
	371	[12635]	SELF     	R9 R9 K63 ; R10 := R9; R9 := R9[0x492f9da2]
	372	[12635]	CALL     	R9 2 2 ; R9 := R9(R10)
	373	[12635]	GETGLOBAL	R10 K64 ; R10 := 0x0032441c
	374	[12635]	GETTABLE 	R10 R10 K65 ; R10 := R10["UIMovie_GenericMenu"]
	375	[12635]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 378
	376	[12635]	JMP      	378 ; PC := 378
	377	[12635]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 378
	378	[12635]	OP_LOADBOOL	R9 1 0 ; R9 := true
	379	[12636]	GETUPVAL 	R10 U14 ; R10 := U14
	380	[12636]	GETTABLE 	R10 R10 K66 ; R10 := R10["Visible"]
	381	[12636]	EQ       	1 R10 K21 ; if R10 == nil then PC := 387
	382	[12636]	JMP      	387 ; PC := 387
	383	[12636]	GETUPVAL 	R10 U14 ; R10 := U14
	384	[12636]	GETTABLE 	R10 R10 K66 ; R10 := R10["Visible"]
	385	[12636]	EQ       	1 R10 R9 ; if R10 == R9 then PC := 406
	386	[12636]	JMP      	406 ; PC := 406
	387	[12637]	GETGLOBAL	R10 K3 ; R10 := 0xae91e43b
	388	[12637]	SELF     	R10 R10 K67 ; R11 := R10; R10 := R10[0x368ad758]
	389	[12637]	MOVE     	R12 R9 ; R12 := R9
	390	[12637]	CALL     	R10 3 1 ; R10(R11,R12)
	391	[12638]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	392	[12638]	GETGLOBAL	R11 K68 ; R11 := mEvoMovie
	393	[12638]	CALL     	R10 2 2 ; R10 := R10(R11)
	394	[12638]	TEST     	R10 1 ; if R10 then PC := 404
	395	[12638]	JMP      	404 ; PC := 404
	396	[12639]	GETGLOBAL	R10 K68 ; R10 := mEvoMovie
	397	[12639]	SELF     	R10 R10 K67 ; R11 := R10; R10 := R10[0x368ad758]
	398	[12639]	MOVE     	R12 R9 ; R12 := R9
	399	[12639]	CALL     	R10 3 1 ; R10(R11,R12)
	400	[12640]	GETGLOBAL	R10 K68 ; R10 := mEvoMovie
	401	[12640]	SELF     	R10 R10 K69 ; R11 := R10; R10 := R10[0xbc838db9]
	402	[12640]	MOVE     	R12 R9 ; R12 := R9
	403	[12640]	CALL     	R10 3 1 ; R10(R11,R12)
	404	[12643]	GETUPVAL 	R10 U14 ; R10 := U14
	405	[12643]	SETTABLE 	R10 K66 R9 ; R10["Visible"] := R9
	406	[12646]	GETGLOBAL	R10 K3 ; R10 := 0xae91e43b
	407	[12646]	SELF     	R10 R10 K70 ; R11 := R10; R10 := R10[0x91a24e4b]
	408	[12646]	LOADK    	R12 K71 ; R12 := "_root"
	409	[12646]	LOADK    	R13 := 25.000000
	410	[12646]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	411	[12647]	GETGLOBAL	R11 K3 ; R11 := 0xae91e43b
	412	[12647]	SELF     	R11 R11 K70 ; R12 := R11; R11 := R11[0x91a24e4b]
	413	[12647]	LOADK    	R13 K71 ; R13 := "_root"
	414	[12647]	LOADK    	R14 := 26.000000
	415	[12647]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	416	[12648]	LT       	0 K72 R10 ; if -1000.000000 >= R10 then PC := 454
	417	[12648]	JMP      	454 ; PC := 454
	418	[12648]	LT       	0 K72 R11 ; if -1000.000000 >= R11 then PC := 454
	419	[12648]	JMP      	454 ; PC := 454
	420	[12649]	GETGLOBAL	R12 K3 ; R12 := 0xae91e43b
	421	[12649]	SELF     	R12 R12 K73 ; R13 := R12; R12 := R12[0x091c120e]
	422	[12649]	CALL     	R12 2 2 ; R12 := R12(R13)
	423	[12649]	MUL      	R12 R12 K74 ; R12 := R12 * 0.500000
	424	[12650]	GETGLOBAL	R13 K3 ; R13 := 0xae91e43b
	425	[12650]	SELF     	R13 R13 K73 ; R14 := R13; R13 := R13[0x091c120e]
	426	[12650]	CALL     	R13 2 2 ; R13 := R13(R14)
	427	[12650]	MUL      	R13 R13 K74 ; R13 := R13 * 0.500000
	428	[12651]	SUB      	R14 R10 R12 ; R14 := R10 - R12
	429	[12651]	DIV      	R10 R14 R12 ; R10 := R14 / R12
	430	[12652]	SUB      	R14 R11 R13 ; R14 := R11 - R13
	431	[12652]	DIV      	R11 R14 R13 ; R11 := R14 / R13
	432	[12653]	GETGLOBAL	R14 K75 ; R14 := 0x42dcc9f5
	433	[12653]	MOVE     	R15 R10 ; R15 := R10
	434	[12653]	LOADK    	R16 := -1.000000
	435	[12653]	LOADK    	R17 := 1.000000
	436	[12653]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	437	[12653]	MOVE     	R10 R14 ; R10 := R14
	438	[12654]	GETGLOBAL	R14 K75 ; R14 := 0x42dcc9f5
	439	[12654]	MOVE     	R15 R11 ; R15 := R11
	440	[12654]	LOADK    	R16 := -1.000000
	441	[12654]	LOADK    	R17 := 1.000000
	442	[12654]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	443	[12654]	MOVE     	R11 R14 ; R11 := R14
	444	[12656]	GETUPVAL 	R14 U15 ; R14 := U15
	445	[12656]	GETTABLE 	R14 R14 K76 ; R14 := R14["X"]
	446	[12656]	SELF     	R14 R14 K77 ; R15 := R14; R14 := R14[0x188e2bee]
	447	[12656]	MOVE     	R16 R10 ; R16 := R10
	448	[12656]	CALL     	R14 3 1 ; R14(R15,R16)
	449	[12657]	GETUPVAL 	R14 U15 ; R14 := U15
	450	[12657]	GETTABLE 	R14 R14 K78 ; R14 := R14["Y"]
	451	[12657]	SELF     	R14 R14 K77 ; R15 := R14; R14 := R14[0x188e2bee]
	452	[12657]	MOVE     	R16 R11 ; R16 := R11
	453	[12657]	CALL     	R14 3 1 ; R14(R15,R16)
	454	[12660]	GETUPVAL 	R14 U15 ; R14 := U15
	455	[12660]	GETTABLE 	R14 R14 K76 ; R14 := R14["X"]
	456	[12660]	SELF     	R14 R14 K8 ; R15 := R14; R14 := R14[0xfaa69527]
	457	[12660]	GETGLOBAL	R16 K79 ; R16 := 0x67652851
	458	[12660]	CALL     	R16 1 0 ; R16,... := R16()
	459	[12660]	CALL     	R14 0 1 ; R14(R15,...)
	460	[12661]	GETUPVAL 	R14 U15 ; R14 := U15
	461	[12661]	GETTABLE 	R14 R14 K78 ; R14 := R14["Y"]
	462	[12661]	SELF     	R14 R14 K8 ; R15 := R14; R14 := R14[0xfaa69527]
	463	[12661]	GETGLOBAL	R16 K79 ; R16 := 0x67652851
	464	[12661]	CALL     	R16 1 0 ; R16,... := R16()
	465	[12661]	CALL     	R14 0 1 ; R14(R15,...)
	466	[12662]	GETUPVAL 	R14 U15 ; R14 := U15
	467	[12662]	GETTABLE 	R14 R14 K76 ; R14 := R14["X"]
	468	[12662]	SELF     	R14 R14 K80 ; R15 := R14; R14 := R14[0x54ab95f9]
	469	[12662]	CALL     	R14 2 2 ; R14 := R14(R15)
	470	[12662]	MOVE     	R10 R14 ; R10 := R14
	471	[12663]	GETUPVAL 	R14 U15 ; R14 := U15
	472	[12663]	GETTABLE 	R14 R14 K78 ; R14 := R14["Y"]
	473	[12663]	SELF     	R14 R14 K80 ; R15 := R14; R14 := R14[0x54ab95f9]
	474	[12663]	CALL     	R14 2 2 ; R14 := R14(R15)
	475	[12663]	MOVE     	R11 R14 ; R11 := R14
	476	[12665]	MUL      	R14 R10 K74 ; R14 := R10 * 0.500000
	477	[12665]	ADD      	R10 R14 K74 ; R10 := R14 + 0.500000
	478	[12666]	MUL      	R14 R11 K74 ; R14 := R11 * 0.500000
	479	[12666]	ADD      	R11 R14 K74 ; R11 := R14 + 0.500000
	480	[12668]	GETGLOBAL	R14 K81 ; R14 := mLoaders
	481	[12668]	GETTABLE 	R14 R14 K82 ; R14 := R14["mQueueEquipItem"]
	482	[12668]	TEST     	R14 0 ; if not R14 then PC := 488
	483	[12668]	JMP      	488 ; PC := 488
	484	[12669]	GETUPVAL 	R14 U16 ; R14 := U16
	485	[12669]	CALL     	R14 1 1 ; R14()
	486	[12671]	GETGLOBAL	R14 K81 ; R14 := mLoaders
	487	[12671]	SETTABLE 	R14 K82 K49 ; R14["mQueueEquipItem"] := false
	488	[12674]	GETUPVAL 	R14 U17 ; R14 := U17
	489	[12674]	TEST     	R14 0 ; if not R14 then PC := 507
	490	[12674]	JMP      	507 ; PC := 507
	491	[12675]	GETUPVAL 	R14 U8 ; R14 := U8
	492	[12675]	GETUPVAL 	R15 U9 ; R15 := U9
	493	[12675]	GETTABLE 	R15 R15 K83 ; R15 := R15["SELECTING_PART"]
	494	[12675]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 500
	495	[12675]	JMP      	500 ; PC := 500
	496	[12676]	GETUPVAL 	R14 U10 ; R14 := U10
	497	[12676]	GETTABLE 	R14 R14 K84 ; R14 := R14[0xbe07b886]
	498	[12676]	CALL     	R14 1 1 ; R14()
	499	[12676]	JMP      	507 ; PC := 507
	500	[12678]	OP_LOADBOOL	R14 0 0 ; R14 := false
	501	[12678]	SETUPVAL 	R14 U17 ; U17 := R14
	502	[12679]	GETGLOBAL	R14 K3 ; R14 := 0xae91e43b
	503	[12679]	SELF     	R14 R14 K85 ; R15 := R14; R14 := R14[0xe4162eed]
	504	[12679]	LOADK    	R16 K86 ; R16 := "RefreshLoadout"
	505	[12679]	LOADK    	R17 K87 ; R17 := ""
	506	[12679]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	507	[12684]	GETGLOBAL	R14 K88 ; R14 := 0xcfc01047
	508	[12684]	GETGLOBAL	R15 K81 ; R15 := mLoaders
	509	[12684]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	510	[12684]	JMP      	515 ; PC := 515
	511	[12685]	EQ       	1 R17 K82 ; if R17 == "mQueueEquipItem" then PC := 515
	512	[12685]	JMP      	515 ; PC := 515
	513	[12686]	SELF     	R19 R18 K8 ; R20 := R18; R19 := R18[0xfaa69527]
	514	[12686]	CALL     	R19 2 1 ; R19(R20)
	515	[12684]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 511; R16 := R17 end
	516	[12687]	JMP      	511 ; PC := 511
	517	[12690]	GETGLOBAL	R19 K12 ; R19 := _T
	518	[12690]	GETTABLE 	R19 R19 K89 ; R19 := R19["mLoadoutInPosition"]
	519	[12690]	EQ       	1 R19 K21 ; if R19 == nil then PC := 525
	520	[12690]	JMP      	525 ; PC := 525
	521	[12690]	GETGLOBAL	R19 K12 ; R19 := _T
	522	[12690]	GETTABLE 	R19 R19 K89 ; R19 := R19["mLoadoutInPosition"]
	523	[12690]	TEST     	R19 1 ; if R19 then PC := 530
	524	[12690]	JMP      	530 ; PC := 530
	525	[12690]	GETUPVAL 	R19 U18 ; R19 := U18
	526	[12690]	GETUPVAL 	R20 U19 ; R20 := U19
	527	[12690]	GETTABLE 	R20 R20 K90 ; R20 := R20["UI_MODE_IN_SPACE_HUB"]
	528	[12690]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 699
	529	[12690]	JMP      	699 ; PC := 699
	530	[12691]	GETGLOBAL	R19 K2 ; R19 := 0x7b998233
	531	[12691]	GETGLOBAL	R20 K91 ; R20 := 0x1211d00f
	532	[12691]	CALL     	R19 2 2 ; R19 := R19(R20)
	533	[12691]	NOT      	R19 R19 ; R19 := not R19
	534	[12692]	GETGLOBAL	R20 K92 ; R20 := mCameraTable
	535	[12692]	GETTABLE 	R20 R20 K93 ; R20 := R20["ConstantUpdate"]
	536	[12692]	TEST     	R20 0 ; if not R20 then PC := 564
	537	[12692]	JMP      	564 ; PC := 564
	538	[12692]	TEST     	R19 1 ; if R19 then PC := 564
	539	[12692]	JMP      	564 ; PC := 564
	540	[12693]	GETGLOBAL	R20 K26 ; R20 := mLists
	541	[12693]	GETTABLE 	R20 R20 K27 ; R20 := R20["mLoadOutList"]
	542	[12693]	SELF     	R20 R20 K94 ; R21 := R20; R20 := R20[0xed1ab921]
	543	[12693]	CALL     	R20 2 2 ; R20 := R20(R21)
	544	[12694]	EQ       	1 R20 K21 ; if R20 == nil then PC := 553
	545	[12694]	JMP      	553 ; PC := 553
	546	[12695]	GETUPVAL 	R21 U20 ; R21 := U20
	547	[12695]	GETTABLE 	R22 R20 K95 ; R22 := R20["LoadOutType"]
	548	[12695]	GETTABLE 	R23 R20 K96 ; R23 := R20["LoadOutId"]
	549	[12695]	MOVE     	R24 R20 ; R24 := R20
	550	[12695]	OP_LOADBOOL	R25 1 0 ; R25 := true
	551	[12695]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	552	[12695]	JMP      	564 ; PC := 564
	553	[12696]	GETUPVAL 	R21 U21 ; R21 := U21
	554	[12696]	EQ       	1 R21 K21 ; if R21 == nil then PC := 564
	555	[12696]	JMP      	564 ; PC := 564
	556	[12697]	GETUPVAL 	R21 U20 ; R21 := U20
	557	[12697]	GETUPVAL 	R22 U21 ; R22 := U21
	558	[12697]	GETTABLE 	R22 R22 K95 ; R22 := R22["LoadOutType"]
	559	[12697]	GETUPVAL 	R23 U21 ; R23 := U21
	560	[12697]	GETTABLE 	R23 R23 K96 ; R23 := R23["LoadOutId"]
	561	[12697]	GETUPVAL 	R24 U21 ; R24 := U21
	562	[12697]	OP_LOADBOOL	R25 1 0 ; R25 := true
	563	[12697]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	564	[12702]	GETUPVAL 	R21 U8 ; R21 := U8
	565	[12702]	GETUPVAL 	R22 U9 ; R22 := U9
	566	[12702]	GETTABLE 	R22 R22 K35 ; R22 := R22["SWAPPING_ITEM"]
	567	[12702]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 585
	568	[12702]	JMP      	585 ; PC := 585
	569	[12702]	GETGLOBAL	R21 K2 ; R21 := 0x7b998233
	570	[12702]	GETGLOBAL	R22 K32 ; R22 := mSelected
	571	[12702]	GETTABLE 	R22 R22 K97 ; R22 := R22["Item"]
	572	[12702]	CALL     	R21 2 2 ; R21 := R21(R22)
	573	[12702]	TEST     	R21 1 ; if R21 then PC := 585
	574	[12702]	JMP      	585 ; PC := 585
	575	[12703]	GETGLOBAL	R21 K32 ; R21 := mSelected
	576	[12703]	GETTABLE 	R21 R21 K97 ; R21 := R21["Item"]
	577	[12703]	GETTABLE 	R21 R21 K98 ; R21 := R21["mPetType"]
	578	[12703]	EQ       	1 R21 K31 ; if R21 == 1.000000 then PC := 600
	579	[12703]	JMP      	600 ; PC := 600
	580	[12703]	GETGLOBAL	R21 K32 ; R21 := mSelected
	581	[12703]	GETTABLE 	R21 R21 K97 ; R21 := R21["Item"]
	582	[12703]	GETTABLE 	R21 R21 K98 ; R21 := R21["mPetType"]
	583	[12703]	EQ       	1 R21 K100 ; if R21 == 2.000000 then PC := 600
	584	[12703]	JMP      	600 ; PC := 600
	585	[12704]	GETUPVAL 	R21 U8 ; R21 := U8
	586	[12704]	GETUPVAL 	R22 U9 ; R22 := U9
	587	[12704]	GETTABLE 	R22 R22 K35 ; R22 := R22["SWAPPING_ITEM"]
	588	[12704]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 599
	589	[12704]	JMP      	599 ; PC := 599
	590	[12704]	GETGLOBAL	R21 K2 ; R21 := 0x7b998233
	591	[12704]	GETGLOBAL	R22 K101 ; R22 := 0x25d99d89
	592	[12704]	CALL     	R21 2 2 ; R21 := R21(R22)
	593	[12704]	TEST     	R21 1 ; if R21 then PC := 599
	594	[12704]	JMP      	599 ; PC := 599
	595	[12704]	GETGLOBAL	R21 K101 ; R21 := 0x25d99d89
	596	[12704]	SELF     	R21 R21 K102 ; R22 := R21; R21 := R21[0x3c6b0324]
	597	[12704]	CALL     	R21 2 2 ; R21 := R21(R22)
	598	[12704]	JMP      	601 ; PC := 601
	599	[12704]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 600
	600	[12704]	OP_LOADBOOL	R21 1 0 ; R21 := true
	601	[12706]	GETUPVAL 	R22 U8 ; R22 := U8
	602	[12706]	GETUPVAL 	R23 U9 ; R23 := U9
	603	[12706]	GETTABLE 	R23 R23 K35 ; R23 := R23["SWAPPING_ITEM"]
	604	[12706]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 622
	605	[12706]	JMP      	622 ; PC := 622
	606	[12706]	GETGLOBAL	R22 K2 ; R22 := 0x7b998233
	607	[12706]	GETGLOBAL	R23 K32 ; R23 := mSelected
	608	[12706]	GETTABLE 	R23 R23 K97 ; R23 := R23["Item"]
	609	[12706]	CALL     	R22 2 2 ; R22 := R22(R23)
	610	[12706]	TEST     	R22 1 ; if R22 then PC := 622
	611	[12706]	JMP      	622 ; PC := 622
	612	[12706]	GETGLOBAL	R22 K32 ; R22 := mSelected
	613	[12706]	GETTABLE 	R22 R22 K97 ; R22 := R22["Item"]
	614	[12706]	GETTABLE 	R22 R22 K98 ; R22 := R22["mPetType"]
	615	[12706]	EQ       	1 R22 K103 ; if R22 == 3.000000 then PC := 637
	616	[12706]	JMP      	637 ; PC := 637
	617	[12706]	GETGLOBAL	R22 K32 ; R22 := mSelected
	618	[12706]	GETTABLE 	R22 R22 K97 ; R22 := R22["Item"]
	619	[12706]	GETTABLE 	R22 R22 K98 ; R22 := R22["mPetType"]
	620	[12706]	EQ       	1 R22 K104 ; if R22 == 4.000000 then PC := 637
	621	[12706]	JMP      	637 ; PC := 637
	622	[12707]	GETUPVAL 	R22 U8 ; R22 := U8
	623	[12707]	GETUPVAL 	R23 U9 ; R23 := U9
	624	[12707]	GETTABLE 	R23 R23 K35 ; R23 := R23["SWAPPING_ITEM"]
	625	[12707]	EQ       	1 R22 R23 ; if R22 == R23 then PC := 636
	626	[12707]	JMP      	636 ; PC := 636
	627	[12707]	GETGLOBAL	R22 K2 ; R22 := 0x7b998233
	628	[12707]	GETGLOBAL	R23 K101 ; R23 := 0x25d99d89
	629	[12707]	CALL     	R22 2 2 ; R22 := R22(R23)
	630	[12707]	TEST     	R22 1 ; if R22 then PC := 636
	631	[12707]	JMP      	636 ; PC := 636
	632	[12707]	GETGLOBAL	R22 K101 ; R22 := 0x25d99d89
	633	[12707]	SELF     	R22 R22 K105 ; R23 := R22; R22 := R22[0x9f91f49d]
	634	[12707]	CALL     	R22 2 2 ; R22 := R22(R23)
	635	[12707]	JMP      	638 ; PC := 638
	636	[12707]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 637
	637	[12707]	OP_LOADBOOL	R22 1 0 ; R22 := true
	638	[12710]	GETGLOBAL	R23 K12 ; R23 := _T
	639	[12710]	GETTABLE 	R23 R23 K106 ; R23 := R23["mSentinelMode"]
	640	[12710]	TEST     	R23 0 ; if not R23 then PC := 660
	641	[12710]	JMP      	660 ; PC := 660
	642	[12710]	GETGLOBAL	R23 K2 ; R23 := 0x7b998233
	643	[12710]	GETGLOBAL	R24 K101 ; R24 := 0x25d99d89
	644	[12710]	CALL     	R23 2 2 ; R23 := R23(R24)
	645	[12710]	TEST     	R23 1 ; if R23 then PC := 660
	646	[12710]	JMP      	660 ; PC := 660
	647	[12710]	TEST     	R21 0 ; if not R21 then PC := 660
	648	[12710]	JMP      	660 ; PC := 660
	649	[12710]	GETUPVAL 	R23 U22 ; R23 := U22
	650	[12710]	CALL     	R23 1 2 ; R23 := R23()
	651	[12710]	TEST     	R23 0 ; if not R23 then PC := 660
	652	[12710]	JMP      	660 ; PC := 660
	653	[12710]	GETGLOBAL	R23 K12 ; R23 := _T
	654	[12710]	GETTABLE 	R23 R23 K107 ; R23 := R23["petCommands"]
	655	[12710]	GETTABLE 	R23 R23 K108 ; R23 := R23[0x2b82e642]
	656	[12710]	CALL     	R23 1 2 ; R23 := R23()
	657	[12710]	TEST     	R23 1 ; if R23 then PC := 660
	658	[12710]	JMP      	660 ; PC := 660
	659	[12710]	JMP      	699 ; PC := 699
	660	[12713]	GETUPVAL 	R23 U18 ; R23 := U18
	661	[12713]	GETUPVAL 	R24 U19 ; R24 := U19
	662	[12713]	GETTABLE 	R24 R24 K109 ; R24 := R24["UI_MODE_IN_SPACE_SHIP"]
	663	[12713]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 671
	664	[12713]	JMP      	671 ; PC := 671
	665	[12713]	GETUPVAL 	R23 U23 ; R23 := U23
	666	[12713]	LT       	0 K15 R23 ; if 0.000000 >= R23 then PC := 671
	667	[12713]	JMP      	671 ; PC := 671
	668	[12714]	GETUPVAL 	R23 U23 ; R23 := U23
	669	[12714]	SUB      	R23 R23 R0 ; R23 := R23 - R0
	670	[12714]	SETUPVAL 	R23 U23 ; U23 := R23
	671	[12718]	GETUPVAL 	R23 U24 ; R23 := U24
	672	[12718]	TEST     	R23 1 ; if R23 then PC := 699
	673	[12718]	JMP      	699 ; PC := 699
	674	[12718]	TEST     	R19 1 ; if R19 then PC := 699
	675	[12718]	JMP      	699 ; PC := 699
	676	[12718]	GETUPVAL 	R23 U18 ; R23 := U18
	677	[12718]	GETUPVAL 	R24 U19 ; R24 := U19
	678	[12718]	GETTABLE 	R24 R24 K109 ; R24 := R24["UI_MODE_IN_SPACE_SHIP"]
	679	[12718]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 692
	680	[12718]	JMP      	692 ; PC := 692
	681	[12718]	GETGLOBAL	R23 K12 ; R23 := _T
	682	[12718]	GETTABLE 	R23 R23 K106 ; R23 := R23["mSentinelMode"]
	683	[12718]	TEST     	R23 0 ; if not R23 then PC := 692
	684	[12718]	JMP      	692 ; PC := 692
	685	[12718]	TEST     	R21 1 ; if R21 then PC := 689
	686	[12718]	JMP      	689 ; PC := 689
	687	[12718]	TEST     	R22 0 ; if not R22 then PC := 692
	688	[12718]	JMP      	692 ; PC := 692
	689	[12718]	GETUPVAL 	R23 U23 ; R23 := U23
	690	[12718]	LE       	0 R23 K15 ; if R23 > 0.000000 then PC := 699
	691	[12718]	JMP      	699 ; PC := 699
	692	[12719]	GETUPVAL 	R23 U10 ; R23 := U10
	693	[12719]	GETTABLE 	R23 R23 K110 ; R23 := R23[0xd4c67576]
	694	[12719]	LOADNIL  	R24 R24 ; R24 := nil
	695	[12719]	GETGLOBAL	R25 K9 ; R25 := 0x34291f5c
	696	[12719]	GETTABLE 	R25 R25 K34 ; R25 := R25[0x1467d5f4]
	697	[12719]	CALL     	R25 1 0 ; R25,... := R25()
	698	[12719]	CALL     	R23 0 1 ; R23(R24,...)
	699	[12724]	GETGLOBAL	R23 K2 ; R23 := 0x7b998233
	700	[12724]	GETGLOBAL	R24 K12 ; R24 := _T
	701	[12724]	GETTABLE 	R24 R24 K13 ; R24 := R24["MenuSuitAvatar"]
	702	[12724]	CALL     	R23 2 2 ; R23 := R23(R24)
	703	[12724]	TEST     	R23 1 ; if R23 then PC := 715
	704	[12724]	JMP      	715 ; PC := 715
	705	[12724]	GETGLOBAL	R23 K4 ; R23 := 0x89326c93
	706	[12724]	SELF     	R23 R23 K111 ; R24 := R23; R23 := R23[0xfb64e76c]
	707	[12724]	CALL     	R23 2 2 ; R23 := R23(R24)
	708	[12724]	TEST     	R23 0 ; if not R23 then PC := 715
	709	[12724]	JMP      	715 ; PC := 715
	710	[12725]	GETGLOBAL	R23 K4 ; R23 := 0x89326c93
	711	[12725]	SELF     	R23 R23 K111 ; R24 := R23; R23 := R23[0xfb64e76c]
	712	[12725]	CALL     	R23 2 2 ; R23 := R23(R24)
	713	[12725]	SELF     	R23 R23 K112 ; R24 := R23; R23 := R23[0xb5983272]
	714	[12725]	CALL     	R23 2 1 ; R23(R24)
	715	[12728]	GETGLOBAL	R23 K92 ; R23 := mCameraTable
	716	[12728]	TEST     	R23 0 ; if not R23 then PC := 854
	717	[12728]	JMP      	854 ; PC := 854
	718	[12728]	GETGLOBAL	R23 K92 ; R23 := mCameraTable
	719	[12728]	GETTABLE 	R23 R23 K113 ; R23 := R23["destFov"]
	720	[12728]	TEST     	R23 0 ; if not R23 then PC := 854
	721	[12728]	JMP      	854 ; PC := 854
	722	[12728]	GETGLOBAL	R23 K92 ; R23 := mCameraTable
	723	[12728]	GETTABLE 	R23 R23 K114 ; R23 := R23["destPos"]
	724	[12728]	TEST     	R23 0 ; if not R23 then PC := 854
	725	[12728]	JMP      	854 ; PC := 854
	726	[12728]	GETGLOBAL	R23 K2 ; R23 := 0x7b998233
	727	[12728]	GETGLOBAL	R24 K92 ; R24 := mCameraTable
	728	[12728]	GETTABLE 	R24 R24 K115 ; R24 := R24["camera"]
	729	[12728]	CALL     	R23 2 2 ; R23 := R23(R24)
	730	[12728]	TEST     	R23 1 ; if R23 then PC := 854
	731	[12728]	JMP      	854 ; PC := 854
	732	[12729]	GETGLOBAL	R23 K75 ; R23 := 0x42dcc9f5
	733	[12729]	GETGLOBAL	R24 K92 ; R24 := mCameraTable
	734	[12729]	GETTABLE 	R24 R24 K116 ; R24 := R24["LerpScale"]
	735	[12729]	MUL      	R24 R0 R24 ; R24 := R0 * R24
	736	[12729]	LOADK    	R25 := 0.000000
	737	[12729]	LOADK    	R26 := 1.000000
	738	[12729]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	739	[12730]	GETGLOBAL	R24 K92 ; R24 := mCameraTable
	740	[12730]	GETTABLE 	R24 R24 K113 ; R24 := R24["destFov"]
	741	[12730]	GETGLOBAL	R25 K92 ; R25 := mCameraTable
	742	[12730]	GETTABLE 	R25 R25 K117 ; R25 := R25["attenFov"]
	743	[12730]	MUL      	R24 R24 R25 ; R24 := R24 * R25
	744	[12731]	GETGLOBAL	R25 K118 ; R25 := 0x5db3ce80
	745	[12731]	GETGLOBAL	R26 K92 ; R26 := mCameraTable
	746	[12731]	GETTABLE 	R26 R26 K115 ; R26 := R26["camera"]
	747	[12731]	SELF     	R26 R26 K119 ; R27 := R26; R26 := R26[0xd1586535]
	748	[12731]	CALL     	R26 2 2 ; R26 := R26(R27)
	749	[12731]	GETGLOBAL	R27 K92 ; R27 := mCameraTable
	750	[12731]	GETTABLE 	R27 R27 K114 ; R27 := R27["destPos"]
	751	[12731]	MOVE     	R28 R23 ; R28 := R23
	752	[12731]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	753	[12732]	LOADNIL  	R26 R26 ; R26 := nil
	754	[12733]	GETUPVAL 	R27 U22 ; R27 := U22
	755	[12733]	CALL     	R27 1 2 ; R27 := R27()
	756	[12733]	TEST     	R27 0 ; if not R27 then PC := 778
	757	[12733]	JMP      	778 ; PC := 778
	758	[12734]	GETGLOBAL	R27 K92 ; R27 := mCameraTable
	759	[12734]	GETTABLE 	R27 R27 K115 ; R27 := R27["camera"]
	760	[12734]	SELF     	R27 R27 K120 ; R28 := R27; R27 := R27[0x2b54251b]
	761	[12734]	CALL     	R27 2 2 ; R27 := R27(R28)
	762	[12734]	MOVE     	R26 R27 ; R26 := R27
	763	[12735]	GETGLOBAL	R27 K2 ; R27 := 0x7b998233
	764	[12735]	MOVE     	R28 R26 ; R28 := R26
	765	[12735]	CALL     	R27 2 2 ; R27 := R27(R28)
	766	[12735]	TEST     	R27 1 ; if R27 then PC := 777
	767	[12735]	JMP      	777 ; PC := 777
	768	[12735]	SELF     	R27 R26 K121 ; R28 := R26; R27 := R26[0x810163c2]
	769	[12735]	CALL     	R27 2 2 ; R27 := R27(R28)
	770	[12735]	TEST     	R27 1 ; if R27 then PC := 777
	771	[12735]	JMP      	777 ; PC := 777
	772	[12736]	SELF     	R27 R26 K122 ; R28 := R26; R27 := R26[0x3e768d03]
	773	[12736]	MOVE     	R29 R25 ; R29 := R25
	774	[12736]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	775	[12736]	MOVE     	R25 R27 ; R25 := R27
	776	[12736]	JMP      	778 ; PC := 778
	777	[12738]	LOADNIL  	R26 R26 ; R26 := nil
	778	[12741]	GETGLOBAL	R27 K123 ; R27 := 0x00046924
	779	[12741]	CALL     	R27 1 2 ; R27 := R27()
	780	[12742]	GETGLOBAL	R28 K92 ; R28 := mCameraTable
	781	[12742]	GETTABLE 	R28 R28 K125 ; R28 := R28["destRot"]
	782	[12742]	GETTABLE 	R28 R28 K124 ; R28 := R28["heading"]
	783	[12742]	GETGLOBAL	R29 K92 ; R29 := mCameraTable
	784	[12742]	GETTABLE 	R29 R29 K126 ; R29 := R29["biasRot"]
	785	[12742]	GETTABLE 	R29 R29 K124 ; R29 := R29["heading"]
	786	[12742]	ADD      	R28 R28 R29 ; R28 := R28 + R29
	787	[12742]	SETTABLE 	R27 K124 R28 ; R27["heading"] := R28
	788	[12743]	GETGLOBAL	R28 K92 ; R28 := mCameraTable
	789	[12743]	GETTABLE 	R28 R28 K125 ; R28 := R28["destRot"]
	790	[12743]	GETTABLE 	R28 R28 K127 ; R28 := R28["pitch"]
	791	[12743]	GETGLOBAL	R29 K92 ; R29 := mCameraTable
	792	[12743]	GETTABLE 	R29 R29 K126 ; R29 := R29["biasRot"]
	793	[12743]	GETTABLE 	R29 R29 K127 ; R29 := R29["pitch"]
	794	[12743]	ADD      	R28 R28 R29 ; R28 := R28 + R29
	795	[12743]	SETTABLE 	R27 K127 R28 ; R27["pitch"] := R28
	796	[12744]	GETGLOBAL	R28 K92 ; R28 := mCameraTable
	797	[12744]	GETTABLE 	R28 R28 K125 ; R28 := R28["destRot"]
	798	[12744]	GETTABLE 	R28 R28 K128 ; R28 := R28["bank"]
	799	[12744]	GETGLOBAL	R29 K92 ; R29 := mCameraTable
	800	[12744]	GETTABLE 	R29 R29 K126 ; R29 := R29["biasRot"]
	801	[12744]	GETTABLE 	R29 R29 K128 ; R29 := R29["bank"]
	802	[12744]	ADD      	R28 R28 R29 ; R28 := R28 + R29
	803	[12744]	SETTABLE 	R27 K128 R28 ; R27["bank"] := R28
	804	[12745]	GETGLOBAL	R28 K129 ; R28 := 0x5e223e7d
	805	[12745]	GETGLOBAL	R29 K92 ; R29 := mCameraTable
	806	[12745]	GETTABLE 	R29 R29 K115 ; R29 := R29["camera"]
	807	[12745]	SELF     	R29 R29 K130 ; R30 := R29; R29 := R29[0xcb3851b8]
	808	[12745]	CALL     	R29 2 2 ; R29 := R29(R30)
	809	[12745]	MOVE     	R30 R27 ; R30 := R27
	810	[12745]	MOVE     	R31 R23 ; R31 := R23
	811	[12745]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	812	[12745]	MOVE     	R27 R28 ; R27 := R28
	813	[12747]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	814	[12747]	MOVE     	R29 R26 ; R29 := R26
	815	[12747]	CALL     	R28 2 2 ; R28 := R28(R29)
	816	[12747]	TEST     	R28 1 ; if R28 then PC := 832
	817	[12747]	JMP      	832 ; PC := 832
	818	[12749]	GETTABLE 	R28 R27 K124 ; R28 := R27["heading"]
	819	[12749]	GETGLOBAL	R29 K131 ; R29 := mArsenalConsole
	820	[12749]	SELF     	R29 R29 K130 ; R30 := R29; R29 := R29[0xcb3851b8]
	821	[12749]	CALL     	R29 2 2 ; R29 := R29(R30)
	822	[12749]	GETTABLE 	R29 R29 K124 ; R29 := R29["heading"]
	823	[12749]	SUB      	R28 R28 R29 ; R28 := R28 - R29
	824	[12749]	SETTABLE 	R27 K124 R28 ; R27["heading"] := R28
	825	[12750]	GETGLOBAL	R28 K92 ; R28 := mCameraTable
	826	[12750]	GETTABLE 	R28 R28 K115 ; R28 := R28["camera"]
	827	[12750]	SELF     	R28 R28 K132 ; R29 := R28; R28 := R28[0xe28aa928]
	828	[12750]	MOVE     	R30 R25 ; R30 := R25
	829	[12750]	MOVE     	R31 R27 ; R31 := R27
	830	[12750]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	831	[12750]	JMP      	842 ; PC := 842
	832	[12752]	GETGLOBAL	R28 K92 ; R28 := mCameraTable
	833	[12752]	GETTABLE 	R28 R28 K115 ; R28 := R28["camera"]
	834	[12752]	SELF     	R28 R28 K133 ; R29 := R28; R28 := R28[0x9307aa51]
	835	[12752]	MOVE     	R30 R25 ; R30 := R25
	836	[12752]	CALL     	R28 3 1 ; R28(R29,R30)
	837	[12753]	GETGLOBAL	R28 K92 ; R28 := mCameraTable
	838	[12753]	GETTABLE 	R28 R28 K115 ; R28 := R28["camera"]
	839	[12753]	SELF     	R28 R28 K134 ; R29 := R28; R28 := R28[0x70b8836c]
	840	[12753]	MOVE     	R30 R27 ; R30 := R27
	841	[12753]	CALL     	R28 3 1 ; R28(R29,R30)
	842	[12755]	GETGLOBAL	R28 K92 ; R28 := mCameraTable
	843	[12755]	GETTABLE 	R28 R28 K115 ; R28 := R28["camera"]
	844	[12755]	SELF     	R28 R28 K135 ; R29 := R28; R28 := R28[0xacea6d71]
	845	[12755]	GETGLOBAL	R30 K136 ; R30 := 0x9bafffe3
	846	[12755]	GETGLOBAL	R31 K92 ; R31 := mCameraTable
	847	[12755]	GETTABLE 	R31 R31 K115 ; R31 := R31["camera"]
	848	[12755]	SELF     	R31 R31 K137 ; R32 := R31; R31 := R31[0xaac2f3a5]
	849	[12755]	CALL     	R31 2 2 ; R31 := R31(R32)
	850	[12755]	MOVE     	R32 R24 ; R32 := R24
	851	[12755]	MOVE     	R33 R23 ; R33 := R23
	852	[12755]	CALL     	R30 4 0 ; R30,... := R30(R31,R32,R33)
	853	[12755]	CALL     	R28 0 1 ; R28(R29,...)
	854	[12758]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	855	[12758]	SELF     	R28 R28 K70 ; R29 := R28; R28 := R28[0x91a24e4b]
	856	[12758]	LOADK    	R30 K71 ; R30 := "_root"
	857	[12758]	LOADK    	R31 := 10.000000
	858	[12758]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	859	[12758]	MUL      	R28 R28 K138 ; R28 := R28 * 0.010000
	860	[12760]	NEWTABLE 	R29 5 0 ; R29 := {}
	861	[12760]	LOADK    	R30 K139 ; R30 := "Lotus"
	862	[12760]	LOADK    	R31 K140 ; R31 := "Power1"
	863	[12760]	LOADK    	R32 K141 ; R32 := "Power2"
	864	[12760]	LOADK    	R33 K142 ; R33 := "Power3"
	865	[12760]	LOADK    	R34 K143 ; R34 := "Power4"
	866	[12760]	SETLIST  	R29 5 1 ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 5
	867	[12761]	LOADK    	R30 := 1.000000
	868	[12761]	LEN      	R31 R29 ; R31 := # R29
	869	[12761]	LOADK    	R32 := 1.000000
	870	[12761]	FORPREP  	R30 880 ; R30 -= R32; PC := 880
	871	[12762]	GETGLOBAL	R34 K3 ; R34 := 0xae91e43b
	872	[12762]	SELF     	R34 R34 K144 ; R35 := R34; R34 := R34[0x91e13703]
	873	[12762]	GETTABLE 	R36 R29 R33 ; R36 := R29[R33]
	874	[12762]	LOADK    	R37 K145 ; R37 := "PixelateBias"
	875	[12762]	LOADK    	R38 := 1.000000
	876	[12762]	MOVE     	R39 R28 ; R39 := R28
	877	[12762]	LOADK    	R40 := 0.000000
	878	[12762]	LOADK    	R41 := 0.000000
	879	[12762]	CALL     	R34 8 1 ; R34(R35,R36,R37,R38,R39,R40,R41)
	880	[12761]	FORLOOP  	R30 871 ; R30 += R32; if R30 <= R31 then begin PC := 871; R33 := R30 end
	881	[12765]	GETGLOBAL	R34 K146 ; R34 := mRePopulateCosmetics
	882	[12765]	TEST     	R34 0 ; if not R34 then PC := 907
	883	[12765]	JMP      	907 ; PC := 907
	884	[12766]	GETGLOBAL	R34 K2 ; R34 := 0x7b998233
	885	[12766]	GETGLOBAL	R35 K32 ; R35 := mSelected
	886	[12766]	GETTABLE 	R35 R35 K33 ; R35 := R35["Element"]
	887	[12766]	CALL     	R34 2 2 ; R34 := R34(R35)
	888	[12766]	TEST     	R34 1 ; if R34 then PC := 900
	889	[12766]	JMP      	900 ; PC := 900
	890	[12766]	GETGLOBAL	R34 K32 ; R34 := mSelected
	891	[12766]	GETTABLE 	R34 R34 K33 ; R34 := R34["Element"]
	892	[12766]	GETTABLE 	R34 R34 K147 ; R34 := R34["LunaroArenaEntry"]
	893	[12766]	TEST     	R34 0 ; if not R34 then PC := 900
	894	[12766]	JMP      	900 ; PC := 900
	895	[12767]	GETUPVAL 	R34 U25 ; R34 := U25
	896	[12767]	CALL     	R34 1 1 ; R34()
	897	[12768]	GETUPVAL 	R34 U26 ; R34 := U26
	898	[12768]	CALL     	R34 1 1 ; R34()
	899	[12768]	JMP      	905 ; PC := 905
	900	[12770]	GETUPVAL 	R34 U25 ; R34 := U25
	901	[12770]	CALL     	R34 1 1 ; R34()
	902	[12771]	GETUPVAL 	R34 U27 ; R34 := U27
	903	[12771]	LOADK    	R35 := 0.000000
	904	[12771]	CALL     	R34 2 1 ; R34(R35)
	905	[12773]	OP_LOADBOOL	R34 0 0 ; R34 := false
	906	[12773]	SETGLOBALHASH	R34 K146 ; mRePopulateCosmetics := R34
	907	[12776]	GETUPVAL 	R34 U28 ; R34 := U28
	908	[12776]	MOVE     	R35 R10 ; R35 := R10
	909	[12776]	MOVE     	R36 R11 ; R36 := R11
	910	[12776]	CALL     	R34 3 1 ; R34(R35,R36)
	911	[12777]	GETGLOBAL	R34 K2 ; R34 := 0x7b998233
	912	[12777]	GETGLOBAL	R35 K32 ; R35 := mSelected
	913	[12777]	GETTABLE 	R35 R35 K33 ; R35 := R35["Element"]
	914	[12777]	CALL     	R34 2 2 ; R34 := R34(R35)
	915	[12777]	TEST     	R34 1 ; if R34 then PC := 938
	916	[12777]	JMP      	938 ; PC := 938
	917	[12778]	GETUPVAL 	R34 U29 ; R34 := U29
	918	[12778]	GETUPVAL 	R35 U30 ; R35 := U30
	919	[12778]	GETTABLE 	R35 R35 K148 ; R35 := R35["FALSE"]
	920	[12778]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 930
	921	[12778]	JMP      	930 ; PC := 930
	922	[12778]	GETGLOBAL	R34 K26 ; R34 := mLists
	923	[12778]	GETTABLE 	R34 R34 K149 ; R34 := R34["mCosmeticsList"]
	924	[12778]	GETTABLE 	R34 R34 K150 ; R34 := R34["mCurrLevel"]
	925	[12778]	GETGLOBAL	R35 K26 ; R35 := mLists
	926	[12778]	GETTABLE 	R35 R35 K149 ; R35 := R35["mCosmeticsList"]
	927	[12778]	GETTABLE 	R35 R35 K151 ; R35 := R35["HOLSTER_CUSTOMIZATION"]
	928	[12778]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 938
	929	[12778]	JMP      	938 ; PC := 938
	930	[12778]	GETUPVAL 	R34 U31 ; R34 := U31
	931	[12778]	TEST     	R34 0 ; if not R34 then PC := 938
	932	[12778]	JMP      	938 ; PC := 938
	933	[12779]	OP_LOADBOOL	R34 0 0 ; R34 := false
	934	[12779]	SETUPVAL 	R34 U31 ; U31 := R34
	935	[12780]	GETUPVAL 	R34 U32 ; R34 := U32
	936	[12780]	GETUPVAL 	R35 U33 ; R35 := U33
	937	[12780]	CALL     	R34 2 1 ; R34(R35)
	938	[12784]	GETUPVAL 	R34 U34 ; R34 := U34
	939	[12784]	TEST     	R34 1 ; if R34 then PC := 983
	940	[12784]	JMP      	983 ; PC := 983
	941	[12787]	GETGLOBAL	R34 K4 ; R34 := 0x89326c93
	942	[12787]	SELF     	R34 R34 K111 ; R35 := R34; R34 := R34[0xfb64e76c]
	943	[12787]	CALL     	R34 2 2 ; R34 := R34(R35)
	944	[12789]	GETUPVAL 	R35 U18 ; R35 := U18
	945	[12789]	GETUPVAL 	R36 U19 ; R36 := U19
	946	[12789]	GETTABLE 	R36 R36 K90 ; R36 := R36["UI_MODE_IN_SPACE_HUB"]
	947	[12789]	EQ       	1 R35 R36 ; if R35 == R36 then PC := 954
	948	[12789]	JMP      	954 ; PC := 954
	949	[12789]	GETUPVAL 	R35 U10 ; R35 := U10
	950	[12789]	GETTABLE 	R35 R35 K152 ; R35 := R35[0x7a04c21d]
	951	[12789]	CALL     	R35 1 2 ; R35 := R35()
	952	[12789]	JMP      	955 ; PC := 955
	953	[12789]	OP_LOADBOOL	R35 0 1 ; R35 := false; PC := 954
	954	[12789]	OP_LOADBOOL	R35 1 0 ; R35 := true
	955	[12790]	EQ       	1 R34 K21 ; if R34 == nil then PC := 975
	956	[12790]	JMP      	975 ; PC := 975
	957	[12790]	TEST     	R35 0 ; if not R35 then PC := 975
	958	[12790]	JMP      	975 ; PC := 975
	959	[12790]	SELF     	R36 R34 K153 ; R37 := R34; R36 := R34[0x5578d98b]
	960	[12790]	CALL     	R36 2 2 ; R36 := R36(R37)
	961	[12790]	SELF     	R37 R34 K154 ; R38 := R34; R37 := R34[0xbb610e5b]
	962	[12790]	CALL     	R37 2 2 ; R37 := R37(R38)
	963	[12790]	EQ       	1 R36 R37 ; if R36 == R37 then PC := 975
	964	[12790]	JMP      	975 ; PC := 975
	965	[12790]	SELF     	R36 R34 K154 ; R37 := R34; R36 := R34[0xbb610e5b]
	966	[12790]	CALL     	R36 2 2 ; R36 := R36(R37)
	967	[12790]	SELF     	R36 R36 K155 ; R37 := R36; R36 := R36[0xf2deaf69]
	968	[12790]	GETUPVAL 	R38 U35 ; R38 := U35
	969	[12790]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	970	[12790]	TEST     	R36 1 ; if R36 then PC := 975
	971	[12790]	JMP      	975 ; PC := 975
	972	[12791]	GETGLOBAL	R36 K12 ; R36 := _T
	973	[12791]	SETTABLE 	R36 K89 K156 ; R36["mLoadoutInPosition"] := true
	974	[12791]	JMP      	980 ; PC := 980
	975	[12793]	GETUPVAL 	R36 U36 ; R36 := U36
	976	[12793]	GETTABLE 	R36 R36 K157 ; R36 := R36[0xaf03c51d]
	977	[12793]	CALL     	R36 1 1 ; R36()
	978	[12796]	GETUPVAL 	R36 U36 ; R36 := U36
	979	[12796]	SETTABLE 	R36 K158 K100 ; R36["mMoveUpdateDelay"] := 2.000000
	980	[12799]	OP_LOADBOOL	R36 1 0 ; R36 := true
	981	[12799]	SETUPVAL 	R36 U34 ; U34 := R36
	982	[12799]	JMP      	1007 ; PC := 1007
	983	[12800]	GETGLOBAL	R36 K12 ; R36 := _T
	984	[12800]	GETTABLE 	R36 R36 K89 ; R36 := R36["mLoadoutInPosition"]
	985	[12800]	TEST     	R36 1 ; if R36 then PC := 1007
	986	[12800]	JMP      	1007 ; PC := 1007
	987	[12801]	GETUPVAL 	R36 U36 ; R36 := U36
	988	[12801]	GETTABLE 	R36 R36 K158 ; R36 := R36["mMoveUpdateDelay"]
	989	[12801]	EQ       	0 R36 K21 ; if R36 ~= nil then PC := 993
	990	[12801]	JMP      	993 ; PC := 993
	991	[12802]	GETUPVAL 	R36 U36 ; R36 := U36
	992	[12802]	SETTABLE 	R36 K158 K100 ; R36["mMoveUpdateDelay"] := 2.000000
	993	[12804]	GETUPVAL 	R36 U36 ; R36 := U36
	994	[12804]	GETUPVAL 	R37 U36 ; R37 := U36
	995	[12804]	GETTABLE 	R37 R37 K158 ; R37 := R37["mMoveUpdateDelay"]
	996	[12804]	SUB      	R37 R37 K31 ; R37 := R37 - 1.000000
	997	[12804]	SETTABLE 	R36 K158 R37 ; R36["mMoveUpdateDelay"] := R37
	998	[12805]	GETUPVAL 	R36 U36 ; R36 := U36
	999	[12805]	GETTABLE 	R36 R36 K158 ; R36 := R36["mMoveUpdateDelay"]
	1000	[12805]	EQ       	0 R36 K15 ; if R36 ~= 0.000000 then PC := 1007
	1001	[12805]	JMP      	1007 ; PC := 1007
	1002	[12806]	GETUPVAL 	R36 U36 ; R36 := U36
	1003	[12806]	GETTABLE 	R36 R36 K159 ; R36 := R36[0xe2a1b930]
	1004	[12806]	CALL     	R36 1 1 ; R36()
	1005	[12807]	GETGLOBAL	R36 K12 ; R36 := _T
	1006	[12807]	SETTABLE 	R36 K89 K156 ; R36["mLoadoutInPosition"] := true
	1007	[12811]	GETGLOBAL	R36 K26 ; R36 := mLists
	1008	[12811]	GETTABLE 	R36 R36 K149 ; R36 := R36["mCosmeticsList"]
	1009	[12811]	GETTABLE 	R36 R36 K150 ; R36 := R36["mCurrLevel"]
	1010	[12811]	GETGLOBAL	R37 K26 ; R37 := mLists
	1011	[12811]	GETTABLE 	R37 R37 K149 ; R37 := R37["mCosmeticsList"]
	1012	[12811]	GETTABLE 	R37 R37 K160 ; R37 := R37["HOLSTER_STYLE"]
	1013	[12811]	EQ       	1 R36 R37 ; if R36 == R37 then PC := 1023
	1014	[12811]	JMP      	1023 ; PC := 1023
	1015	[12811]	GETGLOBAL	R36 K26 ; R36 := mLists
	1016	[12811]	GETTABLE 	R36 R36 K149 ; R36 := R36["mCosmeticsList"]
	1017	[12811]	GETTABLE 	R36 R36 K150 ; R36 := R36["mCurrLevel"]
	1018	[12811]	GETGLOBAL	R37 K26 ; R37 := mLists
	1019	[12811]	GETTABLE 	R37 R37 K149 ; R37 := R37["mCosmeticsList"]
	1020	[12811]	GETTABLE 	R37 R37 K151 ; R37 := R37["HOLSTER_CUSTOMIZATION"]
	1021	[12811]	EQ       	0 R36 R37 ; if R36 ~= R37 then PC := 1090
	1022	[12811]	JMP      	1090 ; PC := 1090
	1023	[12812]	GETGLOBAL	R36 K12 ; R36 := _T
	1024	[12812]	GETTABLE 	R36 R36 K13 ; R36 := R36["MenuSuitAvatar"]
	1025	[12813]	GETUPVAL 	R37 U37 ; R37 := U37
	1026	[12813]	GETGLOBAL	R38 K32 ; R38 := mSelected
	1027	[12813]	GETTABLE 	R38 R38 K33 ; R38 := R38["Element"]
	1028	[12813]	GETTABLE 	R38 R38 K96 ; R38 := R38["LoadOutId"]
	1029	[12813]	CALL     	R37 2 2 ; R37 := R37(R38)
	1030	[12814]	SELF     	R38 R36 K161 ; R39 := R36; R38 := R36[0xde321e6f]
	1031	[12814]	CALL     	R38 2 2 ; R38 := R38(R39)
	1032	[12814]	SELF     	R38 R38 K162 ; R39 := R38; R38 := R38[0x881b6b90]
	1033	[12814]	LOADK    	R40 := 0.000000
	1034	[12814]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	1035	[12816]	GETUPVAL 	R39 U38 ; R39 := U38
	1036	[12816]	EQ       	0 R39 K104 ; if R39 ~= 4.000000 then PC := 1048
	1037	[12816]	JMP      	1048 ; PC := 1048
	1038	[12819]	SELF     	R39 R36 K161 ; R40 := R36; R39 := R36[0xde321e6f]
	1039	[12819]	CALL     	R39 2 2 ; R39 := R39(R40)
	1040	[12819]	SELF     	R39 R39 K163 ; R40 := R39; R39 := R39[0xc69087f6]
	1041	[12819]	MOVE     	R41 R37 ; R41 := R37
	1042	[12819]	LOADK    	R42 := 0.000000
	1043	[12819]	LOADK    	R43 := 0.000000
	1044	[12819]	CALL     	R39 5 1 ; R39(R40,R41,R42,R43)
	1045	[12820]	LOADK    	R39 := 3.000000
	1046	[12820]	SETUPVAL 	R39 U38 ; U38 := R39
	1047	[12820]	JMP      	1090 ; PC := 1090
	1048	[12821]	GETUPVAL 	R39 U38 ; R39 := U38
	1049	[12821]	EQ       	0 R39 K103 ; if R39 ~= 3.000000 then PC := 1063
	1050	[12821]	JMP      	1063 ; PC := 1063
	1051	[12823]	GETGLOBAL	R39 K2 ; R39 := 0x7b998233
	1052	[12823]	MOVE     	R40 R38 ; R40 := R38
	1053	[12823]	CALL     	R39 2 2 ; R39 := R39(R40)
	1054	[12823]	TEST     	R39 1 ; if R39 then PC := 1090
	1055	[12823]	JMP      	1090 ; PC := 1090
	1056	[12823]	SELF     	R39 R38 K164 ; R40 := R38; R39 := R38[0x53c3399f]
	1057	[12823]	CALL     	R39 2 2 ; R39 := R39(R40)
	1058	[12823]	EQ       	0 R39 K165 ; if R39 ~= 15.000000 then PC := 1090
	1059	[12823]	JMP      	1090 ; PC := 1090
	1060	[12824]	LOADK    	R39 := 2.000000
	1061	[12824]	SETUPVAL 	R39 U38 ; U38 := R39
	1062	[12825]	JMP      	1090 ; PC := 1090
	1063	[12826]	GETUPVAL 	R39 U38 ; R39 := U38
	1064	[12826]	EQ       	0 R39 K100 ; if R39 ~= 2.000000 then PC := 1078
	1065	[12826]	JMP      	1078 ; PC := 1078
	1066	[12828]	GETGLOBAL	R39 K2 ; R39 := 0x7b998233
	1067	[12828]	MOVE     	R40 R38 ; R40 := R38
	1068	[12828]	CALL     	R39 2 2 ; R39 := R39(R40)
	1069	[12828]	TEST     	R39 1 ; if R39 then PC := 1090
	1070	[12828]	JMP      	1090 ; PC := 1090
	1071	[12828]	SELF     	R39 R38 K164 ; R40 := R38; R39 := R38[0x53c3399f]
	1072	[12828]	CALL     	R39 2 2 ; R39 := R39(R40)
	1073	[12828]	EQ       	0 R39 K15 ; if R39 ~= 0.000000 then PC := 1090
	1074	[12828]	JMP      	1090 ; PC := 1090
	1075	[12829]	LOADK    	R39 := 1.000000
	1076	[12829]	SETUPVAL 	R39 U38 ; U38 := R39
	1077	[12830]	JMP      	1090 ; PC := 1090
	1078	[12831]	GETUPVAL 	R39 U38 ; R39 := U38
	1079	[12831]	EQ       	0 R39 K31 ; if R39 ~= 1.000000 then PC := 1090
	1080	[12831]	JMP      	1090 ; PC := 1090
	1081	[12832]	SELF     	R39 R36 K161 ; R40 := R36; R39 := R36[0xde321e6f]
	1082	[12832]	CALL     	R39 2 2 ; R39 := R39(R40)
	1083	[12832]	SELF     	R39 R39 K166 ; R40 := R39; R39 := R39[0x54732cc7]
	1084	[12832]	MOVE     	R41 R37 ; R41 := R37
	1085	[12832]	LOADK    	R42 := 0.000000
	1086	[12832]	CALL     	R39 4 1 ; R39(R40,R41,R42)
	1087	[12833]	LOADK    	R39 := 0.000000
	1088	[12833]	SETUPVAL 	R39 U38 ; U38 := R39
	1089	[12833]	JMP      	1090 ; PC := 1090
	1090	[12839]	GETGLOBAL	R39 K2 ; R39 := 0x7b998233
	1091	[12839]	GETUPVAL 	R40 U14 ; R40 := U14
	1092	[12839]	GETTABLE 	R40 R40 K167 ; R40 := R40["petAgent"]
	1093	[12839]	CALL     	R39 2 2 ; R39 := R39(R40)
	1094	[12839]	TEST     	R39 1 ; if R39 then PC := 1100
	1095	[12839]	JMP      	1100 ; PC := 1100
	1096	[12840]	GETUPVAL 	R39 U14 ; R39 := U14
	1097	[12840]	GETTABLE 	R39 R39 K167 ; R39 := R39["petAgent"]
	1098	[12840]	SELF     	R39 R39 K168 ; R40 := R39; R39 := R39[0xc778ced4]
	1099	[12840]	CALL     	R39 2 1 ; R39(R40)
	1100	[12843]	GETGLOBAL	R39 K12 ; R39 := _T
	1101	[12843]	GETTABLE 	R39 R39 K169 ; R39 := R39["refreshPetView"]
	1102	[12843]	TEST     	R39 0 ; if not R39 then PC := 1143
	1103	[12843]	JMP      	1143 ; PC := 1143
	1104	[12844]	GETGLOBAL	R39 K12 ; R39 := _T
	1105	[12844]	GETGLOBAL	R40 K12 ; R40 := _T
	1106	[12844]	GETTABLE 	R40 R40 K169 ; R40 := R40["refreshPetView"]
	1107	[12844]	SUB      	R40 R40 K31 ; R40 := R40 - 1.000000
	1108	[12844]	SETTABLE 	R39 K169 R40 ; R39["refreshPetView"] := R40
	1109	[12845]	GETGLOBAL	R39 K12 ; R39 := _T
	1110	[12845]	GETTABLE 	R39 R39 K169 ; R39 := R39["refreshPetView"]
	1111	[12845]	LE       	0 R39 K15 ; if R39 > 0.000000 then PC := 1143
	1112	[12845]	JMP      	1143 ; PC := 1143
	1113	[12846]	LOADNIL  	R39 R39 ; R39 := nil
	1114	[12847]	GETUPVAL 	R40 U18 ; R40 := U18
	1115	[12847]	GETUPVAL 	R41 U19 ; R41 := U19
	1116	[12847]	GETTABLE 	R41 R41 K109 ; R41 := R41["UI_MODE_IN_SPACE_SHIP"]
	1117	[12847]	EQ       	0 R40 R41 ; if R40 ~= R41 then PC := 1125
	1118	[12847]	JMP      	1125 ; PC := 1125
	1119	[12848]	GETGLOBAL	R40 K170 ; R40 := 0xbe190284
	1120	[12848]	SELF     	R40 R40 K171 ; R41 := R40; R40 := R40[0x7cf8123f]
	1121	[12848]	LOADK    	R42 := 1.000000
	1122	[12848]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	1123	[12848]	MOVE     	R39 R40 ; R39 := R40
	1124	[12848]	JMP      	1132 ; PC := 1132
	1125	[12850]	GETGLOBAL	R40 K12 ; R40 := _T
	1126	[12850]	GETTABLE 	R40 R40 K13 ; R40 := R40["MenuSuitAvatar"]
	1127	[12850]	SELF     	R40 R40 K161 ; R41 := R40; R40 := R40[0xde321e6f]
	1128	[12850]	CALL     	R40 2 2 ; R40 := R40(R41)
	1129	[12850]	SELF     	R40 R40 K172 ; R41 := R40; R40 := R40[0x2676deee]
	1130	[12850]	CALL     	R40 2 2 ; R40 := R40(R41)
	1131	[12850]	MOVE     	R39 R40 ; R39 := R40
	1132	[12852]	GETGLOBAL	R40 K2 ; R40 := 0x7b998233
	1133	[12852]	MOVE     	R41 R39 ; R41 := R39
	1134	[12852]	CALL     	R40 2 2 ; R40 := R40(R41)
	1135	[12852]	TEST     	R40 1 ; if R40 then PC := 1141
	1136	[12852]	JMP      	1141 ; PC := 1141
	1137	[12853]	SELF     	R40 R39 K173 ; R41 := R39; R40 := R39[0x768274d6]
	1138	[12853]	OP_LOADBOOL	R42 1 0 ; R42 := true
	1139	[12853]	OP_LOADBOOL	R43 1 0 ; R43 := true
	1140	[12853]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	1141	[12855]	GETGLOBAL	R40 K12 ; R40 := _T
	1142	[12855]	SETTABLE 	R40 K169 K21 ; R40["refreshPetView"] := nil
	1143	[12859]	GETGLOBAL	R40 K12 ; R40 := _T
	1144	[12859]	GETTABLE 	R40 R40 K174 ; R40 := R40["updateActiveKubrow"]
	1145	[12859]	TEST     	R40 0 ; if not R40 then PC := 1151
	1146	[12859]	JMP      	1151 ; PC := 1151
	1147	[12860]	GETUPVAL 	R40 U39 ; R40 := U39
	1148	[12860]	CALL     	R40 1 1 ; R40()
	1149	[12861]	GETGLOBAL	R40 K12 ; R40 := _T
	1150	[12861]	SETTABLE 	R40 K174 K21 ; R40["updateActiveKubrow"] := nil
	1151	[12864]	GETGLOBAL	R40 K12 ; R40 := _T
	1152	[12864]	GETTABLE 	R40 R40 K175 ; R40 := R40["InSimulacrum"]
	1153	[12864]	TEST     	R40 0 ; if not R40 then PC := 1199
	1154	[12864]	JMP      	1199 ; PC := 1199
	1155	[12864]	GETGLOBAL	R40 K2 ; R40 := 0x7b998233
	1156	[12864]	GETGLOBAL	R41 K170 ; R41 := 0xbe190284
	1157	[12864]	CALL     	R40 2 2 ; R40 := R40(R41)
	1158	[12864]	TEST     	R40 1 ; if R40 then PC := 1199
	1159	[12864]	JMP      	1199 ; PC := 1199
	1160	[12864]	GETGLOBAL	R40 K170 ; R40 := 0xbe190284
	1161	[12864]	SELF     	R40 R40 K155 ; R41 := R40; R40 := R40[0xf2deaf69]
	1162	[12864]	GETGLOBAL	R42 K176 ; R42 := gLotusSandBoxGameRulesType
	1163	[12864]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	1164	[12864]	TEST     	R40 0 ; if not R40 then PC := 1199
	1165	[12864]	JMP      	1199 ; PC := 1199
	1166	[12865]	GETGLOBAL	R40 K4 ; R40 := 0x89326c93
	1167	[12865]	SELF     	R40 R40 K177 ; R41 := R40; R40 := R40[0x78298275]
	1168	[12865]	CALL     	R40 2 2 ; R40 := R40(R41)
	1169	[12867]	GETGLOBAL	R41 K2 ; R41 := 0x7b998233
	1170	[12867]	MOVE     	R42 R40 ; R42 := R40
	1171	[12867]	CALL     	R41 2 2 ; R41 := R41(R42)
	1172	[12867]	TEST     	R41 1 ; if R41 then PC := 1190
	1173	[12867]	JMP      	1190 ; PC := 1190
	1174	[12867]	SELF     	R41 R40 K178 ; R42 := R40; R41 := R40[0xd4cc05b4]
	1175	[12867]	CALL     	R41 2 2 ; R41 := R41(R42)
	1176	[12867]	TEST     	R41 0 ; if not R41 then PC := 1190
	1177	[12867]	JMP      	1190 ; PC := 1190
	1178	[12867]	SELF     	R41 R40 K155 ; R42 := R40; R41 := R40[0xf2deaf69]
	1179	[12867]	GETGLOBAL	R43 K179 ; R43 := gLotusOperatorAvatarType
	1180	[12867]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	1181	[12867]	TEST     	R41 1 ; if R41 then PC := 1190
	1182	[12867]	JMP      	1190 ; PC := 1190
	1183	[12867]	GETGLOBAL	R41 K12 ; R41 := _T
	1184	[12867]	GETTABLE 	R41 R41 K13 ; R41 := R41["MenuSuitAvatar"]
	1185	[12867]	EQ       	1 R40 R41 ; if R40 == R41 then PC := 1190
	1186	[12867]	JMP      	1190 ; PC := 1190
	1187	[12868]	SELF     	R41 R40 K180 ; R42 := R40; R41 := R40[0x2abc8ecd]
	1188	[12868]	OP_LOADBOOL	R43 0 0 ; R43 := false
	1189	[12868]	CALL     	R41 3 1 ; R41(R42,R43)
	1190	[12872]	SELF     	R41 R40 K181 ; R42 := R40; R41 := R40[0x2047cfe7]
	1191	[12872]	CALL     	R41 2 2 ; R41 := R41(R42)
	1192	[12872]	TEST     	R41 0 ; if not R41 then PC := 1199
	1193	[12872]	JMP      	1199 ; PC := 1199
	1194	[12873]	GETGLOBAL	R41 K12 ; R41 := _T
	1195	[12873]	GETTABLE 	R41 R41 K182 ; R41 := R41["mTrigger"]
	1196	[12873]	SELF     	R41 R41 K183 ; R42 := R41; R41 := R41[0x8eb2112d]
	1197	[12873]	LOADK    	R43 K184 ; R43 := "Close"
	1198	[12873]	CALL     	R41 3 1 ; R41(R42,R43)
	1199	[12877]	GETGLOBAL	R41 K12 ; R41 := _T
	1200	[12877]	GETTABLE 	R41 R41 K185 ; R41 := R41["waitForBardSuit"]
	1201	[12877]	TEST     	R41 0 ; if not R41 then PC := 1248
	1202	[12877]	JMP      	1248 ; PC := 1248
	1203	[12878]	GETGLOBAL	R41 K4 ; R41 := 0x89326c93
	1204	[12878]	SELF     	R41 R41 K111 ; R42 := R41; R41 := R41[0xfb64e76c]
	1205	[12878]	CALL     	R41 2 2 ; R41 := R41(R42)
	1206	[12879]	GETUPVAL 	R42 U12 ; R42 := U12
	1207	[12879]	GETTABLE 	R42 R42 K51 ; R42 := R42[0x06d055f9]
	1208	[12879]	EQ       	0 R41 K21 ; if R41 ~= nil then PC := 1211
	1209	[12879]	JMP      	1211 ; PC := 1211
	1210	[12879]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 1211
	1211	[12879]	OP_LOADBOOL	R43 1 0 ; R43 := true
	1212	[12879]	SELF     	R44 R41 K186 ; R45 := R41; R44 := R41[0xa534c3ac]
	1213	[12879]	CALL     	R44 2 2 ; R44 := R44(R45)
	1214	[12879]	LOADNIL  	R45 R45 ; R45 := nil
	1215	[12879]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	1216	[12880]	GETGLOBAL	R43 K2 ; R43 := 0x7b998233
	1217	[12880]	MOVE     	R44 R42 ; R44 := R42
	1218	[12880]	CALL     	R43 2 2 ; R43 := R43(R44)
	1219	[12880]	TEST     	R43 1 ; if R43 then PC := 1248
	1220	[12880]	JMP      	1248 ; PC := 1248
	1221	[12881]	SELF     	R43 R42 K161 ; R44 := R42; R43 := R42[0xde321e6f]
	1222	[12881]	CALL     	R43 2 2 ; R43 := R43(R44)
	1223	[12881]	SELF     	R43 R43 K187 ; R44 := R43; R43 := R43[0xf7d48ee0]
	1224	[12881]	CALL     	R43 2 2 ; R43 := R43(R44)
	1225	[12882]	GETGLOBAL	R44 K2 ; R44 := 0x7b998233
	1226	[12882]	MOVE     	R45 R43 ; R45 := R43
	1227	[12882]	CALL     	R44 2 2 ; R44 := R44(R45)
	1228	[12882]	TEST     	R44 1 ; if R44 then PC := 1248
	1229	[12882]	JMP      	1248 ; PC := 1248
	1230	[12882]	SELF     	R44 R43 K155 ; R45 := R43; R44 := R43[0xf2deaf69]
	1231	[12882]	GETGLOBAL	R46 K188 ; R46 := 0x2de3a851
	1232	[12882]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	1233	[12882]	TEST     	R44 0 ; if not R44 then PC := 1248
	1234	[12882]	JMP      	1248 ; PC := 1248
	1235	[12883]	GETGLOBAL	R44 K12 ; R44 := _T
	1236	[12883]	GETTABLE 	R44 R44 K189 ; R44 := R44["BackgroundMovie"]
	1237	[12883]	SELF     	R44 R44 K85 ; R45 := R44; R44 := R44[0xe4162eed]
	1238	[12883]	LOADK    	R46 K190 ; R46 := "ShowBlockingMessage"
	1239	[12883]	LOADK    	R47 K191 ; R47 := "0"
	1240	[12883]	CALL     	R44 4 1 ; R44(R45,R46,R47)
	1241	[12884]	OP_LOADBOOL	R44 0 0 ; R44 := false
	1242	[12884]	SETGLOBALHASH	R44 K16 ; mInputBlocked := R44
	1243	[12885]	GETGLOBAL	R44 K12 ; R44 := _T
	1244	[12885]	SETTABLE 	R44 K185 K21 ; R44["waitForBardSuit"] := nil
	1245	[12886]	GETUPVAL 	R44 U40 ; R44 := U40
	1246	[12886]	LOADK    	R45 := 0.000000
	1247	[12886]	CALL     	R44 2 1 ; R44(R45)
	1248	[12890]	RETURN   	R0 1 ; return 

function #191 <?:12892,12896> (12 instructions, 48 bytes at 000002112BD2A410)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[12893]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[12893]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[12893]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[12893]	TEST     	R1 1 ; if R1 then PC := 12
	5	[12893]	JMP      	12 ; PC := 12
	6	[12894]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[12894]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xdf42446e]
	8	[12894]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	9	[12894]	MOVE     	R4 R0 ; R4 := R0
	10	[12894]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[12894]	CALL     	R1 0 1 ; R1(R2,...)
	12	[12896]	RETURN   	R0 1 ; return 

function #192 <?:12898,12902> (12 instructions, 48 bytes at 000002112BD2A560)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[12899]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[12899]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[12899]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[12899]	TEST     	R1 1 ; if R1 then PC := 12
	5	[12899]	JMP      	12 ; PC := 12
	6	[12900]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[12900]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[12900]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	9	[12900]	MOVE     	R4 R0 ; R4 := R0
	10	[12900]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[12900]	CALL     	R1 0 1 ; R1(R2,...)
	12	[12902]	RETURN   	R0 1 ; return 

function #193 <?:12904,12909> (21 instructions, 84 bytes at 000002112BD2A6B0)
1 param, 5 slots, 3 upvalues, 0 locals, 6 constants, 0 functions
	1	[12905]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[12905]	CALL     	R1 1 2 ; R1 := R1()
	3	[12905]	TEST     	R1 1 ; if R1 then PC := 21
	4	[12905]	JMP      	21 ; PC := 21
	5	[12905]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	6	[12905]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[12905]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[12905]	TEST     	R1 1 ; if R1 then PC := 21
	9	[12905]	JMP      	21 ; PC := 21
	10	[12906]	GETUPVAL 	R1 U1 ; R1 := U1
	11	[12906]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x070daa5a]
	12	[12906]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	13	[12906]	MOVE     	R4 R0 ; R4 := R0
	14	[12906]	CALL     	R3 2 0 ; R3,... := R3(R4)
	15	[12906]	CALL     	R1 0 1 ; R1(R2,...)
	16	[12907]	GETUPVAL 	R1 U2 ; R1 := U2
	17	[12907]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x659d451f]
	18	[12907]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	19	[12907]	GETTABLE 	R2 R2 K5 ; R2 := R2["UISound_DialogOpen"]
	20	[12907]	CALL     	R1 2 1 ; R1(R2)
	21	[12909]	RETURN   	R0 1 ; return 

function #194 <?:12911,12915> (16 instructions, 64 bytes at 000002112BD2A890)
1 param, 5 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[12912]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[12912]	CALL     	R1 1 2 ; R1 := R1()
	3	[12912]	TEST     	R1 1 ; if R1 then PC := 16
	4	[12912]	JMP      	16 ; PC := 16
	5	[12912]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	6	[12912]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[12912]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[12912]	TEST     	R1 1 ; if R1 then PC := 16
	9	[12912]	JMP      	16 ; PC := 16
	10	[12913]	GETUPVAL 	R1 U1 ; R1 := U1
	11	[12913]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaf5319dc]
	12	[12913]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	13	[12913]	MOVE     	R4 R0 ; R4 := R0
	14	[12913]	CALL     	R3 2 0 ; R3,... := R3(R4)
	15	[12913]	CALL     	R1 0 1 ; R1(R2,...)
	16	[12915]	RETURN   	R0 1 ; return 

function #195 <?:12917,12925> (29 instructions, 116 bytes at 000002112BD2AA00)
0 params, 7 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[12918]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[12918]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[12918]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[12918]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[12918]	JMP      	7 ; PC := 7
	6	[12919]	RETURN   	R0 1 ; return 
	7	[12922]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[12922]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x5fbddc1a]
	9	[12922]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[12922]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[12922]	GETTABLE 	R1 R1 K2 ; R1 := R1["mForcedHorizontalSeparation"]
	12	[12922]	MUL      	R0 R0 R1 ; R0 := R0 * R1
	13	[12923]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	14	[12923]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x67bc869f]
	15	[12923]	LOADK    	R3 K5 ; R3 := "MenuPanel.ConfigMenu"
	16	[12923]	LOADK    	R4 := 0.000000
	17	[12923]	GETUPVAL 	R5 U0 ; R5 := U0
	18	[12923]	GETTABLE 	R5 R5 K6 ; R5 := R5["mInitialXPos"]
	19	[12923]	DIV      	R6 R0 K7 ; R6 := R0 / 2.000000
	20	[12923]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	21	[12923]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	22	[12924]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	23	[12924]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x67bc869f]
	24	[12924]	LOADK    	R3 K8 ; R3 := "MenuPanel.ConfigMenu.SwapLabel"
	25	[12924]	LOADK    	R4 := 0.000000
	26	[12924]	DIV      	R5 R0 K7 ; R5 := R0 / 2.000000
	27	[12924]	SUB      	R5 R5 K9 ; R5 := R5 - 75.000000
	28	[12924]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	29	[12925]	RETURN   	R0 1 ; return 

function #196 <?:12927,12964> (117 instructions, 468 bytes at 000002111A6C7A00)
0 params, 14 slots, 5 upvalues, 0 locals, 35 constants, 0 functions
	1	[12928]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[12928]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0x7c09c373]
	3	[12928]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[12928]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[12928]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[12930]	LOADNIL  	R0 R0 ; R0 := nil
	7	[12931]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	8	[12931]	GETGLOBAL	R2 K2 ; R2 := mSelected
	9	[12931]	GETTABLE 	R2 R2 K3 ; R2 := R2["Element"]
	10	[12931]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[12931]	TEST     	R1 1 ; if R1 then PC := 16
	12	[12931]	JMP      	16 ; PC := 16
	13	[12932]	GETGLOBAL	R1 K2 ; R1 := mSelected
	14	[12932]	GETTABLE 	R1 R1 K3 ; R1 := R1["Element"]
	15	[12932]	GETTABLE 	R0 R1 K4 ; R0 := R1["EquippedItem"]
	16	[12935]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	17	[12935]	MOVE     	R2 R0 ; R2 := R0
	18	[12935]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[12935]	TEST     	R1 1 ; if R1 then PC := 66
	20	[12935]	JMP      	66 ; PC := 66
	21	[12936]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0xe1471700]
	22	[12936]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[12937]	LOADK    	R2 := 1.000000
	24	[12937]	MOVE     	R3 R1 ; R3 := R1
	25	[12937]	LOADK    	R4 := 1.000000
	26	[12937]	FORPREP  	R2 40 ; R2 -= R4; PC := 40
	27	[12938]	GETUPVAL 	R6 U0 ; R6 := U0
	28	[12938]	SELF     	R6 R6 K6 ; R7 := R6; R6 := R6[0xbad4316f]
	29	[12938]	NEWTABLE 	R8 0 2 ; R8 := {}
	30	[12938]	LOADK    	R9 K8 ; R9 := " "
	31	[12938]	GETUPVAL 	R10 U1 ; R10 := U1
	32	[12938]	GETTABLE 	R10 R10 K9 ; R10 := R10["CONFIG_TYPES"]
	33	[12938]	GETTABLE 	R10 R10 R5 ; R10 := R10[R5]
	34	[12938]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	35	[12938]	SETTABLE 	R8 K7 R9 ; R8["Name"] := R9
	36	[12938]	SUB      	R9 R5 K11 ; R9 := R5 - 1.000000
	37	[12938]	SETTABLE 	R8 K10 R9 ; R8["ConfigSlot"] := R9
	38	[12938]	OP_LOADBOOL	R9 1 0 ; R9 := true
	39	[12938]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	40	[12937]	FORLOOP  	R2 27 ; R2 += R4; if R2 <= R3 then begin PC := 27; R5 := R2 end
	41	[12941]	GETGLOBAL	R6 K12 ; R6 := 0x25d99d89
	42	[12941]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0xefee6c91]
	43	[12941]	CALL     	R6 2 2 ; R6 := R6(R7)
	44	[12942]	LE       	0 K14 R6 ; if 10.000000 > R6 then PC := 66
	45	[12942]	JMP      	66 ; PC := 66
	46	[12942]	GETGLOBAL	R7 K15 ; R7 := 0x6c97a788
	47	[12942]	GETTABLE 	R7 R7 K16 ; R7 := R7["WeaponInfo_DEFAULT_NUM_SLOTS"]
	48	[12942]	GETGLOBAL	R8 K15 ; R8 := 0x6c97a788
	49	[12942]	GETTABLE 	R8 R8 K17 ; R8 := R8["WeaponInfo_MAX_SLOT_PURCHASES"]
	50	[12942]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	51	[12942]	LT       	0 R1 R7 ; if R1 >= R7 then PC := 66
	52	[12942]	JMP      	66 ; PC := 66
	53	[12943]	GETUPVAL 	R7 U0 ; R7 := U0
	54	[12943]	SELF     	R7 R7 K6 ; R8 := R7; R7 := R7[0xbad4316f]
	55	[12943]	NEWTABLE 	R9 0 3 ; R9 := {}
	56	[12943]	GETGLOBAL	R10 K18 ; R10 := 0xae91e43b
	57	[12943]	SELF     	R10 R10 K19 ; R11 := R10; R10 := R10[0x42b04007]
	58	[12943]	LOADK    	R12 K20 ; R12 := "<PLUS>"
	59	[12943]	OP_LOADBOOL	R13 1 0 ; R13 := true
	60	[12943]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	61	[12943]	SETTABLE 	R9 K7 R10 ; R9["Name"] := R10
	62	[12943]	SETTABLE 	R9 K21 K22 ; R9["IsAdd"] := true
	63	[12943]	SETTABLE 	R9 K23 K22 ; R9["DisableDrag"] := true
	64	[12943]	OP_LOADBOOL	R10 1 0 ; R10 := true
	65	[12943]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	66	[12947]	GETUPVAL 	R7 U2 ; R7 := U2
	67	[12947]	CALL     	R7 1 2 ; R7 := R7()
	68	[12947]	TEST     	R7 0 ; if not R7 then PC := 79
	69	[12947]	JMP      	79 ; PC := 79
	70	[12948]	GETUPVAL 	R7 U0 ; R7 := U0
	71	[12948]	SELF     	R7 R7 K6 ; R8 := R7; R7 := R7[0xbad4316f]
	72	[12948]	NEWTABLE 	R9 0 3 ; R9 := {}
	73	[12948]	SETTABLE 	R9 K7 K24 ; R9["Name"] := " Z"
	74	[12948]	SETTABLE 	R9 K25 K22 ; R9["IsFlappy"] := true
	75	[12948]	SETTABLE 	R9 K23 K22 ; R9["DisableDrag"] := true
	76	[12948]	OP_LOADBOOL	R10 1 0 ; R10 := true
	77	[12948]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	78	[12948]	JMP      	91 ; PC := 91
	79	[12949]	GETUPVAL 	R7 U3 ; R7 := U3
	80	[12949]	CALL     	R7 1 2 ; R7 := R7()
	81	[12949]	TEST     	R7 0 ; if not R7 then PC := 91
	82	[12949]	JMP      	91 ; PC := 91
	83	[12950]	GETUPVAL 	R7 U0 ; R7 := U0
	84	[12950]	SELF     	R7 R7 K6 ; R8 := R7; R7 := R7[0xbad4316f]
	85	[12950]	NEWTABLE 	R9 0 3 ; R9 := {}
	86	[12950]	SETTABLE 	R9 K7 K26 ; R9["Name"] := " W"
	87	[12950]	SETTABLE 	R9 K27 K22 ; R9["IsWyrmius"] := true
	88	[12950]	SETTABLE 	R9 K23 K22 ; R9["DisableDrag"] := true
	89	[12950]	OP_LOADBOOL	R10 1 0 ; R10 := true
	90	[12950]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	91	[12953]	GETUPVAL 	R7 U0 ; R7 := U0
	92	[12953]	GETTABLE 	R7 R7 K28 ; R7 := R7["mClickDrag"]
	93	[12953]	GETTABLE 	R7 R7 K29 ; R7 := R7["Dragging"]
	94	[12953]	TEST     	R7 0 ; if not R7 then PC := 99
	95	[12953]	JMP      	99 ; PC := 99
	96	[12955]	GETUPVAL 	R7 U0 ; R7 := U0
	97	[12955]	SELF     	R7 R7 K30 ; R8 := R7; R7 := R7[0xb31346eb]
	98	[12955]	CALL     	R7 2 1 ; R7(R8)
	99	[12958]	GETUPVAL 	R7 U0 ; R7 := U0
	100	[12958]	SELF     	R7 R7 K31 ; R8 := R7; R7 := R7[0x71e9ac81]
	101	[12958]	LOADNIL  	R9 R9 ; R9 := nil
	102	[12958]	OP_LOADBOOL	R10 0 0 ; R10 := false
	103	[12958]	OP_LOADBOOL	R11 1 0 ; R11 := true
	104	[12958]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	105	[12959]	GETUPVAL 	R7 U4 ; R7 := U4
	106	[12959]	CALL     	R7 1 1 ; R7()
	107	[12961]	GETGLOBAL	R7 K2 ; R7 := mSelected
	108	[12961]	GETTABLE 	R7 R7 K3 ; R7 := R7["Element"]
	109	[12961]	EQ       	1 R7 K32 ; if R7 == nil then PC := 117
	110	[12961]	JMP      	117 ; PC := 117
	111	[12962]	GETUPVAL 	R7 U0 ; R7 := U0
	112	[12962]	SELF     	R7 R7 K33 ; R8 := R7; R7 := R7[0x20c43dc8]
	113	[12962]	GETGLOBAL	R9 K2 ; R9 := mSelected
	114	[12962]	GETTABLE 	R9 R9 K3 ; R9 := R9["Element"]
	115	[12962]	GETTABLE 	R9 R9 K34 ; R9 := R9["mCustSlot"]
	116	[12962]	CALL     	R7 3 1 ; R7(R8,R9)
	117	[12964]	RETURN   	R0 1 ; return 

function #197 <?:12966,13161> (91 instructions, 364 bytes at 000002111A6C8110)
0 params, 10 slots, 8 upvalues, 0 locals, 36 constants, 11 functions
	1	[12967]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[12967]	LOADK    	R1 K1 ; R1 := "EE.Interface.Components.List"
	3	[12967]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[12968]	GETTABLE 	R1 R0 K2 ; R1 := R0[0x9383bc56]
	5	[12968]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	6	[12968]	LOADK    	R3 K4 ; R3 := "MenuPanel.ConfigMenu.MenuItem"
	7	[12968]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	8	[12968]	SETUPVAL 	R1 U0 ; U0 := R1
	9	[12969]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[12969]	SETTABLE 	R1 K5 K6 ; R1["mForcedVerticalSeparation"] := 0.000000
	11	[12970]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[12970]	SETTABLE 	R1 K7 K8 ; R1["mForcedHorizontalSeparation"] := 50.000000
	13	[12971]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[12971]	SETTABLE 	R1 K9 K10 ; R1["mInitialDepth"] := 4000.000000
	15	[12972]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[12972]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	17	[12972]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x91a24e4b]
	18	[12972]	LOADK    	R4 K13 ; R4 := "MenuPanel.ConfigMenu"
	19	[12972]	LOADK    	R5 := 0.000000
	20	[12972]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	21	[12972]	SETTABLE 	R1 K11 R2 ; R1["mInitialXPos"] := R2
	22	[12973]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[12973]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	24	[12973]	LOADK    	R3 K15 ; R3 := "ConfigItemSelected"
	25	[12973]	LOADK    	R4 K16 ; R4 := "ConfigItemFocused"
	26	[12973]	LOADK    	R5 K17 ; R5 := "ConfigItemUnfocused"
	27	[12973]	LOADK    	R6 K18 ; R6 := "ConfigItemPressed"
	28	[12973]	LOADNIL  	R7 R8 ; R7 := R8 := nil
	29	[12973]	LOADK    	R9 K15 ; R9 := "ConfigItemSelected"
	30	[12973]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	31	[12974]	GETUPVAL 	R1 U0 ; R1 := U0
	32	[12974]	SELF     	R1 R1 K19 ; R2 := R1; R1 := R1[0xb0e9af9b]
	33	[12974]	CALL     	R1 2 1 ; R1(R2)
	34	[12975]	GETUPVAL 	R1 U0 ; R1 := U0
	35	[12975]	SETTABLE 	R1 K20 K21 ; R1["mFocusedElementId"] := nil
	36	[12976]	GETUPVAL 	R1 U0 ; R1 := U0
	37	[12979]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	38	[12979]	SETTABLE 	R1 K22 R2 ; R1["Print"] := R2
	39	[12980]	GETUPVAL 	R1 U0 ; R1 := U0
	40	[12991]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	41	[12991]	SETTABLE 	R1 K23 R2 ; R1["SelectElementByCustSlot"] := R2
	42	[12992]	GETUPVAL 	R1 U0 ; R1 := U0
	43	[13011]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	44	[13011]	GETUPVAL 	R0 U1 ; R0 := U1
	45	[13011]	SETTABLE 	R1 K24 R2 ; R1["mElementDrawCallback"] := R2
	46	[13012]	GETUPVAL 	R1 U0 ; R1 := U0
	47	[13038]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	48	[13038]	GETUPVAL 	R0 U0 ; R0 := U0
	49	[13038]	GETUPVAL 	R0 U1 ; R0 := U1
	50	[13038]	GETUPVAL 	R0 U2 ; R0 := U2
	51	[13038]	SETTABLE 	R1 K25 R2 ; R1["mOnFocusedCallback"] := R2
	52	[13039]	GETUPVAL 	R1 U0 ; R1 := U0
	53	[13048]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	54	[13048]	GETUPVAL 	R0 U0 ; R0 := U0
	55	[13048]	SETTABLE 	R1 K26 R2 ; R1["mOnUnfocusedCallback"] := R2
	56	[13049]	GETUPVAL 	R1 U0 ; R1 := U0
	57	[13111]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	58	[13111]	GETUPVAL 	R0 U0 ; R0 := U0
	59	[13111]	GETUPVAL 	R0 U3 ; R0 := U3
	60	[13111]	GETUPVAL 	R0 U4 ; R0 := U4
	61	[13111]	GETUPVAL 	R0 U1 ; R0 := U1
	62	[13111]	GETUPVAL 	R0 U5 ; R0 := U5
	63	[13111]	SETTABLE 	R1 K27 R2 ; R1["mOnSelectedCallback"] := R2
	64	[13112]	GETUPVAL 	R1 U0 ; R1 := U0
	65	[13121]	CLOSURE  	R2 6 ; R2 := closure(Function #7)
	66	[13121]	GETUPVAL 	R0 U0 ; R0 := U0
	67	[13121]	SETTABLE 	R1 K28 R2 ; R1["mOnDragFocusedCallback"] := R2
	68	[13122]	GETUPVAL 	R1 U0 ; R1 := U0
	69	[13125]	CLOSURE  	R2 7 ; R2 := closure(Function #8)
	70	[13125]	SETTABLE 	R1 K29 R2 ; R1[0x7b998233] := R2
	71	[13126]	GETUPVAL 	R1 U0 ; R1 := U0
	72	[13146]	CLOSURE  	R2 8 ; R2 := closure(Function #9)
	73	[13146]	GETUPVAL 	R0 U0 ; R0 := U0
	74	[13146]	GETUPVAL 	R0 U1 ; R0 := U1
	75	[13146]	GETUPVAL 	R0 U6 ; R0 := U6
	76	[13146]	GETUPVAL 	R0 U7 ; R0 := U7
	77	[13146]	GETUPVAL 	R0 U5 ; R0 := U5
	78	[13146]	SETTABLE 	R1 K30 R2 ; R1["mOnDraggedCallback"] := R2
	79	[13147]	GETUPVAL 	R1 U0 ; R1 := U0
	80	[13150]	CLOSURE  	R2 9 ; R2 := closure(Function #10)
	81	[13150]	SETTABLE 	R1 K31 R2 ; R1["mOnDragEndCallback"] := R2
	82	[13151]	GETUPVAL 	R1 U0 ; R1 := U0
	83	[13158]	CLOSURE  	R2 10 ; R2 := closure(Function #11)
	84	[13158]	SETTABLE 	R1 K32 R2 ; R1[0xae91e43b] := R2
	85	[13160]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	86	[13160]	SELF     	R1 R1 K33 ; R2 := R1; R1 := R1[0x5f56eeab]
	87	[13160]	LOADK    	R3 K34 ; R3 := "MenuPanel.ConfigMenu.SwapLabel"
	88	[13160]	LOADK    	R4 := 29.000000
	89	[13160]	LOADK    	R5 K35 ; R5 := ""
	90	[13160]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	91	[13161]	RETURN   	R0 1 ; return 

function #198 <?:13163,13174> (21 instructions, 84 bytes at 000002111F9A6800)
1 param, 5 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[13164]	TEST     	R0 0 ; if not R0 then PC := 19
	2	[13164]	JMP      	19 ; PC := 19
	3	[13165]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[13165]	CALL     	R1 1 2 ; R1 := R1()
	5	[13166]	GETGLOBAL	R2 K0 ; R2 := mInventory
	6	[13166]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x8ed300d6]
	7	[13166]	MOVE     	R4 R1 ; R4 := R1
	8	[13166]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[13168]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	10	[13168]	LEN      	R4 R2 ; R4 := # R2
	11	[13168]	GETTABLE 	R4 R2 R4 ; R4 := R2[R4]
	12	[13168]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[13168]	TEST     	R3 1 ; if R3 then PC := 19
	14	[13168]	JMP      	19 ; PC := 19
	15	[13169]	GETUPVAL 	R3 U1 ; R3 := U1
	16	[13169]	LEN      	R4 R2 ; R4 := # R2
	17	[13169]	GETTABLE 	R4 R2 R4 ; R4 := R2[R4]
	18	[13169]	CALL     	R3 2 1 ; R3(R4)
	19	[13173]	OP_LOADBOOL	R3 0 0 ; R3 := false
	20	[13173]	SETGLOBALHASH	R3 K3 ; mInputBlocked := R3
	21	[13174]	RETURN   	R0 1 ; return 

function #199 <?:13176,13178> (10 instructions, 40 bytes at 000002111F9A69C0)
0 params, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[13177]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[13177]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[13177]	GETTABLE 	R1 R1 K0 ; R1 := R1["PVE_LOADOUTS"]
	4	[13177]	GETGLOBAL	R2 K1 ; R2 := 0xa94df70b
	5	[13177]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x4ddd3d6e]
	6	[13177]	LOADK    	R4 := 6.000000
	7	[13177]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[13177]	ADD      	R1 R1 R2 ; R1 := R1 + R2
	9	[13177]	SETTABLE 	R0 K0 R1 ; R0["PVE_LOADOUTS"] := R1
	10	[13178]	RETURN   	R0 1 ; return 

function #200 <?:13180,13204> (54 instructions, 216 bytes at 000002111F9A6B20)
0 params, 4 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[13181]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[13181]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x14e3a848]
	3	[13181]	LOADK    	R1 K2 ; R1 := "AbilityProgression"
	4	[13181]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[13182]	EQ       	1 R0 K3 ; if R0 == nil then PC := 54
	6	[13182]	JMP      	54 ; PC := 54
	7	[13184]	GETGLOBAL	R1 K0 ; R1 := _T
	8	[13184]	SETTABLE 	R1 K4 K5 ; R1["mSentinelMode"] := false
	9	[13186]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[13186]	GETTABLE 	R1 R1 K6 ; R1 := R1["Current"]
	11	[13186]	EQ       	0 R1 K8 ; if R1 ~= 3.000000 then PC := 19
	12	[13186]	JMP      	19 ; PC := 19
	13	[13187]	GETGLOBAL	R1 K0 ; R1 := _T
	14	[13187]	GETTABLE 	R1 R1 K9 ; R1 := R1["suitTable"]
	15	[13187]	GETGLOBAL	R2 K0 ; R2 := _T
	16	[13187]	GETTABLE 	R2 R2 K11 ; R2 := R2["ARCHWING_DEFAULT_ROTATION"]
	17	[13187]	SETTABLE 	R1 K10 R2 ; R1[0xf2deaf69] := R2
	18	[13187]	JMP      	24 ; PC := 24
	19	[13189]	GETGLOBAL	R1 K0 ; R1 := _T
	20	[13189]	GETTABLE 	R1 R1 K9 ; R1 := R1["suitTable"]
	21	[13189]	GETGLOBAL	R2 K0 ; R2 := _T
	22	[13189]	GETTABLE 	R2 R2 K12 ; R2 := R2["DEFAULT_SUIT_ROTATION"]
	23	[13189]	SETTABLE 	R1 K10 R2 ; R1[0xf2deaf69] := R2
	24	[13192]	GETGLOBAL	R1 K0 ; R1 := _T
	25	[13192]	GETTABLE 	R1 R1 K9 ; R1 := R1["suitTable"]
	26	[13192]	GETGLOBAL	R2 K0 ; R2 := _T
	27	[13192]	GETTABLE 	R2 R2 K9 ; R2 := R2["suitTable"]
	28	[13192]	GETTABLE 	R2 R2 K10 ; R2 := R2["desiredRot"]
	29	[13192]	SETTABLE 	R1 K13 R2 ; R1[0xc50e8842] := R2
	30	[13193]	GETUPVAL 	R1 U1 ; R1 := U1
	31	[13193]	GETTABLE 	R1 R1 K14 ; R1 := R1[0xd4c67576]
	32	[13193]	OP_LOADBOOL	R2 1 0 ; R2 := true
	33	[13193]	CALL     	R1 2 1 ; R1(R2)
	34	[13195]	OP_LOADBOOL	R1 1 0 ; R1 := true
	35	[13195]	SETGLOBALHASH	R1 K15 ; mInputBlocked := R1
	36	[13198]	GETGLOBAL	R1 K16 ; R1 := 0x7b998233
	37	[13198]	GETGLOBAL	R2 K17 ; R2 := mSelected
	38	[13198]	GETTABLE 	R2 R2 K18 ; R2 := R2["Element"]
	39	[13198]	CALL     	R1 2 2 ; R1 := R1(R2)
	40	[13198]	TEST     	R1 1 ; if R1 then PC := 49
	41	[13198]	JMP      	49 ; PC := 49
	42	[13198]	GETGLOBAL	R1 K17 ; R1 := mSelected
	43	[13198]	GETTABLE 	R1 R1 K18 ; R1 := R1["Element"]
	44	[13198]	GETTABLE 	R1 R1 K19 ; R1 := R1["LoadOutId"]
	45	[13198]	EQ       	0 R1 K20 ; if R1 ~= 0.000000 then PC := 49
	46	[13198]	JMP      	49 ; PC := 49
	47	[13199]	GETGLOBAL	R1 K0 ; R1 := _T
	48	[13199]	SETTABLE 	R1 K21 K22 ; R1["SlideAbilityScreen"] := true
	49	[13202]	GETGLOBAL	R1 K24 ; R1 := 0xae91e43b
	50	[13202]	SELF     	R1 R1 K25 ; R2 := R1; R1 := R1[0x1fd6abd0]
	51	[13202]	MOVE     	R3 R0 ; R3 := R0
	52	[13202]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	53	[13202]	SETGLOBALHASH	R1 K23 ; mChildMovie := R1
	54	[13204]	RETURN   	R0 1 ; return 

function #201 <?:13206,13208> (3 instructions, 12 bytes at 000002111F9A6F40)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[13207]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[13207]	CALL     	R0 1 1 ; R0()
	3	[13208]	RETURN   	R0 1 ; return 

function #202 <?:13210,13233> (61 instructions, 244 bytes at 000002111F9A7010)
0 params, 4 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[13212]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[13212]	GETGLOBAL	R1 K1 ; R1 := mChildMovie
	3	[13212]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[13212]	TEST     	R0 1 ; if R0 then PC := 9
	5	[13212]	JMP      	9 ; PC := 9
	6	[13213]	GETGLOBAL	R0 K1 ; R0 := mChildMovie
	7	[13213]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x32302b4a]
	8	[13213]	CALL     	R0 2 1 ; R0(R1)
	9	[13216]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	10	[13216]	GETGLOBAL	R1 K3 ; R1 := _T
	11	[13216]	GETTABLE 	R1 R1 K4 ; R1 := R1["SelectedLoadOutPart"]
	12	[13216]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[13216]	TEST     	R0 0 ; if not R0 then PC := 17
	14	[13216]	JMP      	17 ; PC := 17
	15	[13217]	GETGLOBAL	R0 K3 ; R0 := _T
	16	[13217]	SETTABLE 	R0 K4 K5 ; R0["SelectedLoadOutPart"] := 1.000000
	17	[13220]	OP_LOADBOOL	R0 0 0 ; R0 := false
	18	[13220]	SETGLOBALHASH	R0 K6 ; mInputBlocked := R0
	19	[13221]	GETGLOBAL	R0 K7 ; R0 := mSelected
	20	[13221]	SETTABLE 	R0 K8 K9 ; R0["Element"] := nil
	21	[13222]	GETGLOBAL	R0 K10 ; R0 := mLists
	22	[13222]	GETTABLE 	R0 R0 K11 ; R0 := R0["mLoadOutList"]
	23	[13222]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0xbce5a201]
	24	[13222]	GETGLOBAL	R2 K3 ; R2 := _T
	25	[13222]	GETTABLE 	R2 R2 K4 ; R2 := R2["SelectedLoadOutPart"]
	26	[13222]	CALL     	R0 3 1 ; R0(R1,R2)
	27	[13223]	GETGLOBAL	R0 K10 ; R0 := mLists
	28	[13223]	GETTABLE 	R0 R0 K11 ; R0 := R0["mLoadOutList"]
	29	[13223]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0xdf42446e]
	30	[13223]	GETGLOBAL	R2 K3 ; R2 := _T
	31	[13223]	GETTABLE 	R2 R2 K4 ; R2 := R2["SelectedLoadOutPart"]
	32	[13223]	CALL     	R0 3 1 ; R0(R1,R2)
	33	[13225]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	34	[13225]	GETGLOBAL	R1 K3 ; R1 := _T
	35	[13225]	GETTABLE 	R1 R1 K14 ; R1 := R1["MenuSuitAvatar"]
	36	[13225]	CALL     	R0 2 2 ; R0 := R0(R1)
	37	[13225]	TEST     	R0 1 ; if R0 then PC := 57
	38	[13225]	JMP      	57 ; PC := 57
	39	[13226]	GETGLOBAL	R0 K3 ; R0 := _T
	40	[13226]	GETTABLE 	R0 R0 K14 ; R0 := R0["MenuSuitAvatar"]
	41	[13226]	SELF     	R0 R0 K15 ; R1 := R0; R0 := R0[0xb63fc1d8]
	42	[13226]	GETGLOBAL	R2 K16 ; R2 := 0x0469f296
	43	[13226]	LOADK    	R3 K17 ; R3 := "GAME_C1_HEAD1"
	44	[13226]	CALL     	R2 2 2 ; R2 := R2(R3)
	45	[13226]	GETGLOBAL	R3 K18 ; R3 := 0x00046924
	46	[13226]	CALL     	R3 1 0 ; R3,... := R3()
	47	[13226]	CALL     	R0 0 1 ; R0(R1,...)
	48	[13227]	GETGLOBAL	R0 K3 ; R0 := _T
	49	[13227]	GETTABLE 	R0 R0 K14 ; R0 := R0["MenuSuitAvatar"]
	50	[13227]	SELF     	R0 R0 K15 ; R1 := R0; R0 := R0[0xb63fc1d8]
	51	[13227]	GETGLOBAL	R2 K16 ; R2 := 0x0469f296
	52	[13227]	LOADK    	R3 K19 ; R3 := "GAME_C1_NECK2"
	53	[13227]	CALL     	R2 2 2 ; R2 := R2(R3)
	54	[13227]	GETGLOBAL	R3 K18 ; R3 := 0x00046924
	55	[13227]	CALL     	R3 1 0 ; R3,... := R3()
	56	[13227]	CALL     	R0 0 1 ; R0(R1,...)
	57	[13230]	GETGLOBAL	R0 K3 ; R0 := _T
	58	[13230]	SETTABLE 	R0 K20 K9 ; R0["SlideAbilityScreen"] := nil
	59	[13232]	OP_LOADBOOL	R0 1 0 ; R0 := true
	60	[13232]	RETURN   	R0 2 ; return R0 
	61	[13233]	RETURN   	R0 1 ; return 

function #203 <?:13235,13238> (11 instructions, 44 bytes at 000002111F9A7460)
0 params, 2 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[13236]	GETGLOBAL	R0 K0 ; R0 := mLists
	2	[13236]	GETTABLE 	R0 R0 K1 ; R0 := R0["mLoadOutCategories"]
	3	[13236]	GETGLOBAL	R1 K0 ; R1 := mLists
	4	[13236]	GETTABLE 	R1 R1 K1 ; R1 := R1["mLoadOutCategories"]
	5	[13236]	GETTABLE 	R1 R1 K3 ; R1 := R1["mStates"]
	6	[13236]	GETTABLE 	R1 R1 K4 ; R1 := R1["TENNO"]
	7	[13236]	SETTABLE 	R0 K2 R1 ; R0["mState"] := R1
	8	[13237]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[13237]	LOADK    	R1 := 2.000000
	10	[13237]	CALL     	R0 2 1 ; R0(R1)
	11	[13238]	RETURN   	R0 1 ; return 

function #204 <?:13240,13341> (393 instructions, 1572 bytes at 000002111F9A75E0)
0 params, 22 slots, 3 upvalues, 0 locals, 75 constants, 0 functions
	1	[13241]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[13241]	GETTABLE 	R0 R0 K1 ; R0 := R0["MenuSuitAvatar"]
	3	[13242]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	4	[13242]	MOVE     	R2 R0 ; R2 := R0
	5	[13242]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[13242]	TEST     	R1 1 ; if R1 then PC := 393
	7	[13242]	JMP      	393 ; PC := 393
	8	[13243]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	9	[13243]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x0c33ebb2]
	10	[13243]	LOADK    	R3 K5 ; R3 := "_root"
	11	[13243]	LOADK    	R4 K6 ; R4 := "suitRotationX"
	12	[13243]	LOADK    	R5 := 0.000000
	13	[13243]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	14	[13244]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0xde321e6f]
	15	[13244]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[13244]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf7d48ee0]
	17	[13244]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[13245]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	19	[13245]	MOVE     	R3 R1 ; R3 := R1
	20	[13245]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[13245]	TEST     	R2 1 ; if R2 then PC := 393
	22	[13245]	JMP      	393 ; PC := 393
	23	[13246]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0xf2deaf69]
	24	[13246]	GETGLOBAL	R4 K10 ; R4 := 0xb5afcb89
	25	[13246]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	26	[13246]	TEST     	R2 0 ; if not R2 then PC := 44
	27	[13246]	JMP      	44 ; PC := 44
	28	[13247]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	29	[13247]	GETGLOBAL	R3 K0 ; R3 := _T
	30	[13247]	GETTABLE 	R3 R3 K11 ; R3 := R3["DRAGON_EnablePelt"]
	31	[13247]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[13247]	TEST     	R2 1 ; if R2 then PC := 393
	33	[13247]	JMP      	393 ; PC := 393
	34	[13248]	GETGLOBAL	R2 K0 ; R2 := _T
	35	[13248]	GETTABLE 	R2 R2 K12 ; R2 := R2[0xc50e8842]
	36	[13248]	MOVE     	R3 R0 ; R3 := R0
	37	[13248]	GETGLOBAL	R4 K0 ; R4 := _T
	38	[13248]	GETTABLE 	R4 R4 K13 ; R4 := R4[0xb3bbbb5e]
	39	[13248]	MOVE     	R5 R0 ; R5 := R0
	40	[13248]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[13248]	NOT      	R4 R4 ; R4 := not R4
	42	[13248]	CALL     	R2 3 1 ; R2(R3,R4)
	43	[13249]	JMP      	393 ; PC := 393
	44	[13250]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0xf2deaf69]
	45	[13250]	GETGLOBAL	R4 K14 ; R4 := 0xe3ae0932
	46	[13250]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	47	[13250]	TEST     	R2 0 ; if not R2 then PC := 65
	48	[13250]	JMP      	65 ; PC := 65
	49	[13253]	GETGLOBAL	R2 K15 ; R2 := 0x2d0fad09
	50	[13253]	LOADK    	R3 K16 ; R3 := "Lotus.Scripts.Effects.Polarity"
	51	[13253]	CALL     	R2 2 2 ; R2 := R2(R3)
	52	[13254]	GETTABLE 	R3 R2 K17 ; R3 := R2[0x7d2b2507]
	53	[13254]	MOVE     	R4 R1 ; R4 := R1
	54	[13254]	CALL     	R3 2 2 ; R3 := R3(R4)
	55	[13254]	TEST     	R3 0 ; if not R3 then PC := 61
	56	[13254]	JMP      	61 ; PC := 61
	57	[13255]	GETTABLE 	R3 R2 K18 ; R3 := R2[0x467fcae6]
	58	[13255]	MOVE     	R4 R1 ; R4 := R1
	59	[13255]	CALL     	R3 2 1 ; R3(R4)
	60	[13255]	JMP      	393 ; PC := 393
	61	[13257]	GETTABLE 	R3 R2 K19 ; R3 := R2[0x09118c8b]
	62	[13257]	MOVE     	R4 R1 ; R4 := R1
	63	[13257]	CALL     	R3 2 1 ; R3(R4)
	64	[13258]	JMP      	393 ; PC := 393
	65	[13259]	SELF     	R3 R1 K9 ; R4 := R1; R3 := R1[0xf2deaf69]
	66	[13259]	GETGLOBAL	R5 K20 ; R5 := 0x68564c44
	67	[13259]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	68	[13259]	TEST     	R3 0 ; if not R3 then PC := 99
	69	[13259]	JMP      	99 ; PC := 99
	70	[13260]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	71	[13260]	GETGLOBAL	R4 K0 ; R4 := _T
	72	[13260]	GETTABLE 	R4 R4 K21 ; R4 := R4["INFESTED_DecoState"]
	73	[13260]	CALL     	R3 2 2 ; R3 := R3(R4)
	74	[13260]	TEST     	R3 1 ; if R3 then PC := 393
	75	[13260]	JMP      	393 ; PC := 393
	76	[13260]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	77	[13260]	GETGLOBAL	R4 K0 ; R4 := _T
	78	[13260]	GETTABLE 	R4 R4 K21 ; R4 := R4["INFESTED_DecoState"]
	79	[13260]	SELF     	R5 R0 K22 ; R6 := R0; R5 := R0[0x388577d5]
	80	[13260]	CALL     	R5 2 2 ; R5 := R5(R6)
	81	[13260]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	82	[13260]	CALL     	R3 2 2 ; R3 := R3(R4)
	83	[13260]	TEST     	R3 1 ; if R3 then PC := 393
	84	[13260]	JMP      	393 ; PC := 393
	85	[13261]	GETGLOBAL	R3 K23 ; R3 := 0x4ec73e73
	86	[13261]	GETGLOBAL	R4 K0 ; R4 := _T
	87	[13261]	GETTABLE 	R4 R4 K21 ; R4 := R4["INFESTED_DecoState"]
	88	[13261]	SELF     	R5 R0 K22 ; R6 := R0; R5 := R0[0x388577d5]
	89	[13261]	CALL     	R5 2 2 ; R5 := R5(R6)
	90	[13261]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	91	[13261]	GETTABLE 	R4 R4 K24 ; R4 := R4["openDecos"]
	92	[13261]	CALL     	R3 2 3 ; R3,R4 := R3(R4)
	93	[13262]	GETGLOBAL	R5 K0 ; R5 := _T
	94	[13262]	GETTABLE 	R5 R5 K25 ; R5 := R5[0x8095dfb5]
	95	[13262]	MOVE     	R6 R0 ; R6 := R0
	96	[13262]	NOT      	R7 R4 ; R7 := not R4
	97	[13262]	CALL     	R5 3 1 ; R5(R6,R7)
	98	[13263]	JMP      	393 ; PC := 393
	99	[13264]	SELF     	R5 R1 K9 ; R6 := R1; R5 := R1[0xf2deaf69]
	100	[13264]	GETGLOBAL	R7 K26 ; R7 := 0x2de3a851
	101	[13264]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	102	[13264]	TEST     	R5 0 ; if not R5 then PC := 181
	103	[13264]	JMP      	181 ; PC := 181
	104	[13265]	GETGLOBAL	R5 K27 ; R5 := 0x89326c93
	105	[13265]	SELF     	R5 R5 K28 ; R6 := R5; R5 := R5[0xfb64e76c]
	106	[13265]	CALL     	R5 2 2 ; R5 := R5(R6)
	107	[13266]	SELF     	R6 R5 K29 ; R7 := R5; R6 := R5[0xa534c3ac]
	108	[13266]	CALL     	R6 2 2 ; R6 := R6(R7)
	109	[13267]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	110	[13267]	MOVE     	R8 R6 ; R8 := R6
	111	[13267]	CALL     	R7 2 2 ; R7 := R7(R8)
	112	[13267]	TEST     	R7 1 ; if R7 then PC := 393
	113	[13267]	JMP      	393 ; PC := 393
	114	[13268]	SELF     	R7 R6 K7 ; R8 := R6; R7 := R6[0xde321e6f]
	115	[13268]	CALL     	R7 2 2 ; R7 := R7(R8)
	116	[13268]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0xf7d48ee0]
	117	[13268]	CALL     	R7 2 2 ; R7 := R7(R8)
	118	[13269]	GETGLOBAL	R8 K2 ; R8 := 0x7b998233
	119	[13269]	MOVE     	R9 R7 ; R9 := R7
	120	[13269]	CALL     	R8 2 2 ; R8 := R8(R9)
	121	[13269]	TEST     	R8 1 ; if R8 then PC := 177
	122	[13269]	JMP      	177 ; PC := 177
	123	[13269]	SELF     	R8 R7 K9 ; R9 := R7; R8 := R7[0xf2deaf69]
	124	[13269]	GETGLOBAL	R10 K26 ; R10 := 0x2de3a851
	125	[13269]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	126	[13269]	TEST     	R8 1 ; if R8 then PC := 177
	127	[13269]	JMP      	177 ; PC := 177
	128	[13270]	GETGLOBAL	R8 K2 ; R8 := 0x7b998233
	129	[13270]	GETGLOBAL	R9 K30 ; R9 := 0xbe190284
	130	[13270]	CALL     	R8 2 2 ; R8 := R8(R9)
	131	[13270]	TEST     	R8 1 ; if R8 then PC := 160
	132	[13270]	JMP      	160 ; PC := 160
	133	[13270]	GETGLOBAL	R8 K30 ; R8 := 0xbe190284
	134	[13270]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0xf2deaf69]
	135	[13270]	GETGLOBAL	R10 K31 ; R10 := gLotusSandBoxGameRulesType
	136	[13270]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	137	[13270]	TEST     	R8 0 ; if not R8 then PC := 160
	138	[13270]	JMP      	160 ; PC := 160
	139	[13271]	OP_LOADBOOL	R8 1 0 ; R8 := true
	140	[13271]	SETGLOBALHASH	R8 K32 ; mInputBlocked := R8
	141	[13272]	GETGLOBAL	R8 K0 ; R8 := _T
	142	[13272]	GETTABLE 	R8 R8 K33 ; R8 := R8["BackgroundMovie"]
	143	[13272]	SELF     	R8 R8 K34 ; R9 := R8; R8 := R8[0xe4162eed]
	144	[13272]	LOADK    	R10 K35 ; R10 := "ShowBlockingMessage"
	145	[13272]	LOADK    	R11 K36 ; R11 := "2"
	146	[13272]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	147	[13273]	SELF     	R8 R5 K37 ; R9 := R5; R8 := R5[0xbe524b27]
	148	[13273]	CALL     	R8 2 2 ; R8 := R8(R9)
	149	[13274]	SELF     	R9 R8 K38 ; R10 := R8; R9 := R8[0x80563238]
	150	[13274]	CALL     	R9 2 2 ; R9 := R9(R10)
	151	[13275]	GETGLOBAL	R10 K30 ; R10 := 0xbe190284
	152	[13275]	SELF     	R10 R10 K39 ; R11 := R10; R10 := R10[0x20d53ac3]
	153	[13275]	MOVE     	R12 R5 ; R12 := R5
	154	[13275]	SELF     	R13 R9 K40 ; R14 := R9; R13 := R9[0x62c81b76]
	155	[13275]	CALL     	R13 2 0 ; R13,... := R13(R14)
	156	[13275]	CALL     	R10 0 1 ; R10(R11,...)
	157	[13276]	GETGLOBAL	R10 K0 ; R10 := _T
	158	[13276]	SETTABLE 	R10 K41 K42 ; R10["waitForBardSuit"] := true
	159	[13276]	JMP      	393 ; PC := 393
	160	[13278]	GETGLOBAL	R10 K0 ; R10 := _T
	161	[13278]	GETTABLE 	R10 R10 K1 ; R10 := R10["MenuSuitAvatar"]
	162	[13279]	GETGLOBAL	R11 K0 ; R11 := _T
	163	[13279]	SETTABLE 	R11 K1 R6 ; R11["MenuSuitAvatar"] := R6
	164	[13280]	GETUPVAL 	R11 U0 ; R11 := U0
	165	[13280]	CALL     	R11 1 1 ; R11()
	166	[13281]	GETGLOBAL	R11 K0 ; R11 := _T
	167	[13281]	GETTABLE 	R11 R11 K1 ; R11 := R11["MenuSuitAvatar"]
	168	[13281]	SELF     	R11 R11 K43 ; R12 := R11; R11 := R11[0x2abc8ecd]
	169	[13281]	OP_LOADBOOL	R13 0 0 ; R13 := false
	170	[13281]	CALL     	R11 3 1 ; R11(R12,R13)
	171	[13282]	GETGLOBAL	R11 K0 ; R11 := _T
	172	[13282]	SETTABLE 	R11 K1 R10 ; R11["MenuSuitAvatar"] := R10
	173	[13283]	GETUPVAL 	R11 U1 ; R11 := U1
	174	[13283]	LOADK    	R12 := 0.000000
	175	[13283]	CALL     	R11 2 1 ; R11(R12)
	176	[13284]	JMP      	393 ; PC := 393
	177	[13286]	GETUPVAL 	R11 U1 ; R11 := U1
	178	[13286]	LOADK    	R12 := 0.000000
	179	[13286]	CALL     	R11 2 1 ; R11(R12)
	180	[13288]	JMP      	393 ; PC := 393
	181	[13289]	SELF     	R11 R1 K9 ; R12 := R1; R11 := R1[0xf2deaf69]
	182	[13289]	GETGLOBAL	R13 K44 ; R13 := 0x6dcacb87
	183	[13289]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	184	[13289]	TEST     	R11 0 ; if not R11 then PC := 336
	185	[13289]	JMP      	336 ; PC := 336
	186	[13290]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	187	[13290]	GETGLOBAL	R12 K0 ; R12 := _T
	188	[13290]	GETTABLE 	R12 R12 K45 ; R12 := R12["KHORA_SetMode"]
	189	[13290]	CALL     	R11 2 2 ; R11 := R11(R12)
	190	[13290]	TEST     	R11 1 ; if R11 then PC := 393
	191	[13290]	JMP      	393 ; PC := 393
	192	[13291]	LOADK    	R11 := 0.000000
	193	[13292]	LOADK    	R12 := 0.000000
	194	[13293]	GETGLOBAL	R13 K2 ; R13 := 0x7b998233
	195	[13293]	GETGLOBAL	R14 K0 ; R14 := _T
	196	[13293]	GETTABLE 	R14 R14 K46 ; R14 := R14["KHORA_CurrentMode"]
	197	[13293]	CALL     	R13 2 2 ; R13 := R13(R14)
	198	[13293]	TEST     	R13 1 ; if R13 then PC := 214
	199	[13293]	JMP      	214 ; PC := 214
	200	[13293]	GETGLOBAL	R13 K2 ; R13 := 0x7b998233
	201	[13293]	GETGLOBAL	R14 K0 ; R14 := _T
	202	[13293]	GETTABLE 	R14 R14 K46 ; R14 := R14["KHORA_CurrentMode"]
	203	[13293]	SELF     	R15 R0 K22 ; R16 := R0; R15 := R0[0x388577d5]
	204	[13293]	CALL     	R15 2 2 ; R15 := R15(R16)
	205	[13293]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	206	[13293]	CALL     	R13 2 2 ; R13 := R13(R14)
	207	[13293]	TEST     	R13 1 ; if R13 then PC := 214
	208	[13293]	JMP      	214 ; PC := 214
	209	[13294]	GETGLOBAL	R13 K0 ; R13 := _T
	210	[13294]	GETTABLE 	R13 R13 K46 ; R13 := R13["KHORA_CurrentMode"]
	211	[13294]	SELF     	R14 R0 K22 ; R15 := R0; R14 := R0[0x388577d5]
	212	[13294]	CALL     	R14 2 2 ; R14 := R14(R15)
	213	[13294]	GETTABLE 	R11 R13 R14 ; R11 := R13[R14]
	214	[13297]	GETGLOBAL	R13 K2 ; R13 := 0x7b998233
	215	[13297]	GETGLOBAL	R14 K0 ; R14 := _T
	216	[13297]	GETTABLE 	R14 R14 K47 ; R14 := R14["KHORA_CurrentDissolve"]
	217	[13297]	CALL     	R13 2 2 ; R13 := R13(R14)
	218	[13297]	TEST     	R13 1 ; if R13 then PC := 235
	219	[13297]	JMP      	235 ; PC := 235
	220	[13297]	GETGLOBAL	R13 K2 ; R13 := 0x7b998233
	221	[13297]	GETGLOBAL	R14 K0 ; R14 := _T
	222	[13297]	GETTABLE 	R14 R14 K47 ; R14 := R14["KHORA_CurrentDissolve"]
	223	[13297]	SELF     	R15 R0 K22 ; R16 := R0; R15 := R0[0x388577d5]
	224	[13297]	CALL     	R15 2 2 ; R15 := R15(R16)
	225	[13297]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	226	[13297]	CALL     	R13 2 2 ; R13 := R13(R14)
	227	[13297]	TEST     	R13 1 ; if R13 then PC := 235
	228	[13297]	JMP      	235 ; PC := 235
	229	[13298]	GETGLOBAL	R13 K0 ; R13 := _T
	230	[13298]	GETTABLE 	R13 R13 K47 ; R13 := R13["KHORA_CurrentDissolve"]
	231	[13298]	SELF     	R14 R0 K22 ; R15 := R0; R14 := R0[0x388577d5]
	232	[13298]	CALL     	R14 2 2 ; R14 := R14(R15)
	233	[13298]	GETTABLE 	R12 R13 R14 ; R12 := R13[R14]
	234	[13298]	JMP      	245 ; PC := 245
	235	[13300]	GETGLOBAL	R13 K0 ; R13 := _T
	236	[13300]	GETTABLE 	R13 R13 K48 ; R13 := R13[0xb1b8ab73]
	237	[13300]	MOVE     	R14 R1 ; R14 := R1
	238	[13300]	CALL     	R13 2 2 ; R13 := R13(R14)
	239	[13300]	MOVE     	R12 R13 ; R12 := R13
	240	[13301]	GETGLOBAL	R13 K0 ; R13 := _T
	241	[13301]	GETTABLE 	R13 R13 K47 ; R13 := R13["KHORA_CurrentDissolve"]
	242	[13301]	SELF     	R14 R0 K22 ; R15 := R0; R14 := R0[0x388577d5]
	243	[13301]	CALL     	R14 2 2 ; R14 := R14(R15)
	244	[13301]	SETTABLE 	R13 R14 R12 ; R13[R14] := R12
	245	[13304]	LT       	0 K49 R12 ; if 0.000000 >= R12 then PC := 278
	246	[13304]	JMP      	278 ; PC := 278
	247	[13305]	GETGLOBAL	R13 K0 ; R13 := _T
	248	[13305]	GETTABLE 	R13 R13 K50 ; R13 := R13[0x9d4f5aaf]
	249	[13305]	MOVE     	R14 R1 ; R14 := R1
	250	[13305]	LOADK    	R15 := 0.000000
	251	[13305]	CALL     	R13 3 1 ; R13(R14,R15)
	252	[13306]	GETGLOBAL	R13 K0 ; R13 := _T
	253	[13306]	GETTABLE 	R13 R13 K47 ; R13 := R13["KHORA_CurrentDissolve"]
	254	[13306]	SELF     	R14 R0 K22 ; R15 := R0; R14 := R0[0x388577d5]
	255	[13306]	CALL     	R14 2 2 ; R14 := R14(R15)
	256	[13306]	SETTABLE 	R13 R14 K49 ; R13[R14] := 0.000000
	257	[13307]	GETGLOBAL	R13 K0 ; R13 := _T
	258	[13307]	GETTABLE 	R13 R13 K51 ; R13 := R13[0xea9ef043]
	259	[13307]	MOVE     	R14 R1 ; R14 := R1
	260	[13307]	LOADK    	R15 := 0.000000
	261	[13307]	CALL     	R13 3 1 ; R13(R14,R15)
	262	[13308]	GETGLOBAL	R13 K52 ; R13 := mButtons
	263	[13308]	GETGLOBAL	R14 K53 ; R14 := mButtonIndices
	264	[13308]	GETTABLE 	R14 R14 K54 ; R14 := R14["SuitAppearance"]
	265	[13308]	GETTABLE 	R13 R13 R14 ; R13 := R13[R14]
	266	[13308]	GETGLOBAL	R14 K56 ; R14 := 0x7f5022cf
	267	[13308]	GETTABLE 	R14 R14 K57 ; R14 := R14[0x3f3e4d12]
	268	[13308]	GETGLOBAL	R15 K3 ; R15 := 0xae91e43b
	269	[13308]	SELF     	R15 R15 K58 ; R16 := R15; R15 := R15[0x42b04007]
	270	[13308]	LOADK    	R17 K59 ; R17 := "/Lotus/Language/Suits/KhoraKavatMode"
	271	[13308]	LOADK    	R18 := 0.000000
	272	[13308]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	273	[13308]	OP_LOADBOOL	R18 1 0 ; R18 := true
	274	[13308]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	275	[13308]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	276	[13308]	SETTABLE 	R13 K55 R14 ; R13["mLabel"] := R14
	277	[13308]	JMP      	333 ; PC := 333
	278	[13309]	EQ       	0 R11 K60 ; if R11 ~= 2.000000 then PC := 311
	279	[13309]	JMP      	311 ; PC := 311
	280	[13309]	GETGLOBAL	R13 K0 ; R13 := _T
	281	[13309]	GETTABLE 	R13 R13 K50 ; R13 := R13[0x9d4f5aaf]
	282	[13309]	MOVE     	R14 R1 ; R14 := R1
	283	[13309]	LOADK    	R15 := 1.000000
	284	[13309]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	285	[13309]	TEST     	R13 0 ; if not R13 then PC := 311
	286	[13309]	JMP      	311 ; PC := 311
	287	[13310]	GETGLOBAL	R13 K0 ; R13 := _T
	288	[13310]	GETTABLE 	R13 R13 K47 ; R13 := R13["KHORA_CurrentDissolve"]
	289	[13310]	SELF     	R14 R0 K22 ; R15 := R0; R14 := R0[0x388577d5]
	290	[13310]	CALL     	R14 2 2 ; R14 := R14(R15)
	291	[13310]	SETTABLE 	R13 R14 K61 ; R13[R14] := 1.000000
	292	[13311]	GETGLOBAL	R13 K0 ; R13 := _T
	293	[13311]	GETTABLE 	R13 R13 K51 ; R13 := R13[0xea9ef043]
	294	[13311]	MOVE     	R14 R1 ; R14 := R1
	295	[13311]	LOADK    	R15 := 0.000000
	296	[13311]	CALL     	R13 3 1 ; R13(R14,R15)
	297	[13312]	GETGLOBAL	R13 K52 ; R13 := mButtons
	298	[13312]	GETGLOBAL	R14 K53 ; R14 := mButtonIndices
	299	[13312]	GETTABLE 	R14 R14 K54 ; R14 := R14["SuitAppearance"]
	300	[13312]	GETTABLE 	R13 R13 R14 ; R13 := R13[R14]
	301	[13312]	GETGLOBAL	R14 K56 ; R14 := 0x7f5022cf
	302	[13312]	GETTABLE 	R14 R14 K57 ; R14 := R14[0x3f3e4d12]
	303	[13312]	GETGLOBAL	R15 K3 ; R15 := 0xae91e43b
	304	[13312]	SELF     	R15 R15 K58 ; R16 := R15; R15 := R15[0x42b04007]
	305	[13312]	LOADK    	R17 K62 ; R17 := "/Lotus/Language/Suits/KhoraKavatModeNone"
	306	[13312]	OP_LOADBOOL	R18 1 0 ; R18 := true
	307	[13312]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	308	[13312]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	309	[13312]	SETTABLE 	R13 K55 R14 ; R13["mLabel"] := R14
	310	[13312]	JMP      	333 ; PC := 333
	311	[13314]	ADD      	R13 R11 K61 ; R13 := R11 + 1.000000
	312	[13314]	MOD      	R13 R13 K63 ; R13 := R13 % 3.000000
	313	[13315]	GETGLOBAL	R14 K0 ; R14 := _T
	314	[13315]	GETTABLE 	R14 R14 K51 ; R14 := R14[0xea9ef043]
	315	[13315]	MOVE     	R15 R1 ; R15 := R1
	316	[13315]	MOVE     	R16 R13 ; R16 := R13
	317	[13315]	CALL     	R14 3 1 ; R14(R15,R16)
	318	[13316]	GETGLOBAL	R14 K52 ; R14 := mButtons
	319	[13316]	GETGLOBAL	R15 K53 ; R15 := mButtonIndices
	320	[13316]	GETTABLE 	R15 R15 K54 ; R15 := R15["SuitAppearance"]
	321	[13316]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	322	[13316]	GETGLOBAL	R15 K56 ; R15 := 0x7f5022cf
	323	[13316]	GETTABLE 	R15 R15 K57 ; R15 := R15[0x3f3e4d12]
	324	[13316]	GETGLOBAL	R16 K3 ; R16 := 0xae91e43b
	325	[13316]	SELF     	R16 R16 K58 ; R17 := R16; R16 := R16[0x42b04007]
	326	[13316]	LOADK    	R18 K59 ; R18 := "/Lotus/Language/Suits/KhoraKavatMode"
	327	[13316]	MOVE     	R19 R13 ; R19 := R13
	328	[13316]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	329	[13316]	OP_LOADBOOL	R19 1 0 ; R19 := true
	330	[13316]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	331	[13316]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	332	[13316]	SETTABLE 	R14 K55 R15 ; R14["mLabel"] := R15
	333	[13319]	GETUPVAL 	R14 U2 ; R14 := U2
	334	[13319]	CALL     	R14 1 1 ; R14()
	335	[13320]	JMP      	393 ; PC := 393
	336	[13321]	SELF     	R14 R1 K9 ; R15 := R1; R14 := R1[0xf2deaf69]
	337	[13321]	GETGLOBAL	R16 K64 ; R16 := 0x2ccd2c30
	338	[13321]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	339	[13321]	TEST     	R14 0 ; if not R14 then PC := 355
	340	[13321]	JMP      	355 ; PC := 355
	341	[13322]	GETGLOBAL	R14 K0 ; R14 := _T
	342	[13322]	GETTABLE 	R14 R14 K65 ; R14 := R14["RUNNER_SetDecoState"]
	343	[13322]	EQ       	1 R14 K66 ; if R14 == nil then PC := 393
	344	[13322]	JMP      	393 ; PC := 393
	345	[13323]	GETGLOBAL	R14 K0 ; R14 := _T
	346	[13323]	GETTABLE 	R14 R14 K67 ; R14 := R14[0x3ef5c227]
	347	[13323]	MOVE     	R15 R0 ; R15 := R0
	348	[13323]	GETGLOBAL	R16 K0 ; R16 := _T
	349	[13323]	GETTABLE 	R16 R16 K68 ; R16 := R16[0x7fab9289]
	350	[13323]	MOVE     	R17 R0 ; R17 := R0
	351	[13323]	CALL     	R16 2 2 ; R16 := R16(R17)
	352	[13323]	NOT      	R16 R16 ; R16 := not R16
	353	[13323]	CALL     	R14 3 1 ; R14(R15,R16)
	354	[13324]	JMP      	393 ; PC := 393
	355	[13325]	SELF     	R14 R1 K9 ; R15 := R1; R14 := R1[0xf2deaf69]
	356	[13325]	GETGLOBAL	R16 K69 ; R16 := 0x969b8384
	357	[13325]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	358	[13325]	TEST     	R14 0 ; if not R14 then PC := 393
	359	[13325]	JMP      	393 ; PC := 393
	360	[13326]	GETGLOBAL	R14 K0 ; R14 := _T
	361	[13326]	GETTABLE 	R14 R14 K70 ; R14 := R14["BROKEN_SetDecoVisibility"]
	362	[13326]	TEST     	R14 0 ; if not R14 then PC := 393
	363	[13326]	JMP      	393 ; PC := 393
	364	[13327]	GETGLOBAL	R14 K0 ; R14 := _T
	365	[13327]	GETTABLE 	R14 R14 K71 ; R14 := R14[0xb0420af9]
	366	[13327]	MOVE     	R15 R0 ; R15 := R0
	367	[13327]	CALL     	R14 2 2 ; R14 := R14(R15)
	368	[13328]	LOADK    	R15 K72 ; R15 := "/Lotus/Language/Suits/BrokenFrameMode_Broken"
	369	[13329]	TEST     	R14 0 ; if not R14 then PC := 372
	370	[13329]	JMP      	372 ; PC := 372
	371	[13330]	LOADK    	R15 K73 ; R15 := "/Lotus/Language/Suits/BrokenFrameMode_Unbroken"
	372	[13333]	GETGLOBAL	R16 K52 ; R16 := mButtons
	373	[13333]	GETGLOBAL	R17 K53 ; R17 := mButtonIndices
	374	[13333]	GETTABLE 	R17 R17 K54 ; R17 := R17["SuitAppearance"]
	375	[13333]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	376	[13333]	GETGLOBAL	R17 K56 ; R17 := 0x7f5022cf
	377	[13333]	GETTABLE 	R17 R17 K57 ; R17 := R17[0x3f3e4d12]
	378	[13333]	GETGLOBAL	R18 K3 ; R18 := 0xae91e43b
	379	[13333]	SELF     	R18 R18 K58 ; R19 := R18; R18 := R18[0x42b04007]
	380	[13333]	MOVE     	R20 R15 ; R20 := R15
	381	[13333]	OP_LOADBOOL	R21 0 0 ; R21 := false
	382	[13333]	CALL     	R18 4 0 ; R18,... := R18(R19,R20,R21)
	383	[13333]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	384	[13333]	SETTABLE 	R16 K55 R17 ; R16["mLabel"] := R17
	385	[13334]	GETGLOBAL	R16 K0 ; R16 := _T
	386	[13334]	GETTABLE 	R16 R16 K74 ; R16 := R16[0xf627ed0d]
	387	[13334]	MOVE     	R17 R0 ; R17 := R0
	388	[13334]	NOT      	R18 R14 ; R18 := not R14
	389	[13334]	LOADK    	R19 := 0.250000
	390	[13334]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	391	[13336]	GETUPVAL 	R16 U2 ; R16 := U2
	392	[13336]	CALL     	R16 1 1 ; R16()
	393	[13341]	RETURN   	R0 1 ; return 

function #205 <?:13343,13346> (14 instructions, 56 bytes at 000002111F9A8810)
1 param, 9 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[13344]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[13344]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x0c33ebb2]
	3	[13344]	LOADK    	R3 K2 ; R3 := "_root"
	4	[13344]	LOADK    	R4 K3 ; R4 := "suitRotationX"
	5	[13344]	GETUPVAL 	R5 U0 ; R5 := U0
	6	[13344]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x06d055f9]
	7	[13344]	MOVE     	R6 R0 ; R6 := R0
	8	[13344]	LOADK    	R7 K5 ; R7 := 0.400000
	9	[13344]	LOADK    	R8 := 0.000000
	10	[13344]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	11	[13344]	CALL     	R1 0 1 ; R1(R2,...)
	12	[13345]	GETUPVAL 	R1 U1 ; R1 := U1
	13	[13345]	SETTABLE 	R1 K6 R0 ; R1["MouseDown"] := R0
	14	[13346]	RETURN   	R0 1 ; return 

function #206 <?:13348,13355> (36 instructions, 144 bytes at 000002111F9A89C0)
0 params, 7 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[13349]	GETGLOBAL	R0 K0 ; R0 := mPvpTeams
	2	[13349]	GETGLOBAL	R1 K0 ; R1 := mPvpTeams
	3	[13349]	GETTABLE 	R1 R1 K1 ; R1 := R1["Current"]
	4	[13349]	GETGLOBAL	R2 K0 ; R2 := mPvpTeams
	5	[13349]	GETTABLE 	R2 R2 K2 ; R2 := R2["Types"]
	6	[13349]	LEN      	R2 R2 ; R2 := # R2
	7	[13349]	MOD      	R1 R1 R2 ; R1 := R1 % R2
	8	[13349]	ADD      	R1 R1 K3 ; R1 := R1 + 1.000000
	9	[13349]	SETTABLE 	R0 K1 R1 ; R0["Current"] := R1
	10	[13350]	GETGLOBAL	R0 K4 ; R0 := 0xae91e43b
	11	[13350]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x42b04007]
	12	[13350]	GETGLOBAL	R2 K0 ; R2 := mPvpTeams
	13	[13350]	GETTABLE 	R2 R2 K2 ; R2 := R2["Types"]
	14	[13350]	GETGLOBAL	R3 K0 ; R3 := mPvpTeams
	15	[13350]	GETTABLE 	R3 R3 K1 ; R3 := R3["Current"]
	16	[13350]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	17	[13350]	OP_LOADBOOL	R3 0 0 ; R3 := false
	18	[13350]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	19	[13351]	GETGLOBAL	R1 K6 ; R1 := mButtons
	20	[13351]	GETGLOBAL	R2 K7 ; R2 := mButtonIndices
	21	[13351]	GETTABLE 	R2 R2 K8 ; R2 := R2["PvpTeam"]
	22	[13351]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	23	[13351]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	24	[13351]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x42b04007]
	25	[13351]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Menu/Loadout_Team"
	26	[13351]	OP_LOADBOOL	R5 0 0 ; R5 := false
	27	[13351]	NEWTABLE 	R6 0 1 ; R6 := {}
	28	[13351]	SETTABLE 	R6 K11 R0 ; R6["TEAM_NAME"] := R0
	29	[13351]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	30	[13351]	SETTABLE 	R1 K9 R2 ; R1["mLabel"] := R2
	31	[13352]	GETUPVAL 	R1 U0 ; R1 := U0
	32	[13352]	CALL     	R1 1 1 ; R1()
	33	[13354]	GETUPVAL 	R1 U1 ; R1 := U1
	34	[13354]	OP_LOADBOOL	R2 1 0 ; R2 := true
	35	[13354]	CALL     	R1 2 1 ; R1(R2)
	36	[13355]	RETURN   	R0 1 ; return 

function #207 <?:13357,13395> (21 instructions, 84 bytes at 000002111F9A8CF0)
0 params, 5 slots, 8 upvalues, 0 locals, 7 constants, 1 function
	1	[13359]	GETGLOBAL	R0 K0 ; R0 := mLists
	2	[13359]	GETTABLE 	R0 R0 K1 ; R0 := R0["mLoadOutList"]
	3	[13359]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xea061e98]
	4	[13391]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	5	[13391]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[13391]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[13391]	GETUPVAL 	R0 U2 ; R0 := U2
	8	[13391]	GETUPVAL 	R0 U3 ; R0 := U3
	9	[13391]	GETUPVAL 	R0 U4 ; R0 := U4
	10	[13391]	GETUPVAL 	R0 U5 ; R0 := U5
	11	[13391]	GETUPVAL 	R0 U6 ; R0 := U6
	12	[13359]	CALL     	R0 3 1 ; R0(R1,R2)
	13	[13394]	GETGLOBAL	R0 K3 ; R0 := mTimerTable
	14	[13394]	GETGLOBAL	R1 K3 ; R1 := mTimerTable
	15	[13394]	GETTABLE 	R1 R1 K5 ; R1 := R1["mTimerMgr"]
	16	[13394]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xbd2e96ea]
	17	[13394]	LOADK    	R3 := 1.000000
	18	[13394]	GETUPVAL 	R4 U7 ; R4 := U7
	19	[13394]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	20	[13394]	SETTABLE 	R0 K4 R1 ; R0["mRedrawLoadOutTimerId"] := R1
	21	[13395]	RETURN   	R0 1 ; return 

function #208 <?:13397,13915> (2065 instructions, 8260 bytes at 000002111F9A9770)
0 params, 42 slots, 47 upvalues, 0 locals, 411 constants, 8 functions
	1	[13398]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[13398]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[13398]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[13398]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[13398]	JMP      	7 ; PC := 7
	6	[13399]	RETURN   	R0 1 ; return 
	7	[13401]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	8	[13401]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x0c33ebb2]
	9	[13401]	LOADK    	R2 K4 ; R2 := "_root"
	10	[13401]	LOADK    	R3 K5 ; R3 := "suitRotationX"
	11	[13401]	LOADK    	R4 := 0.000000
	12	[13401]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	13	[13403]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	14	[13403]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x1e5b5cfe]
	15	[13403]	LOADK    	R2 K7 ; R2 := "MenuPanel.LeftArrow"
	16	[13403]	LOADK    	R3 K8 ; R3 := "RollOverArrow"
	17	[13403]	LOADK    	R4 K9 ; R4 := "RollOutArrow"
	18	[13403]	LOADK    	R5 K10 ; R5 := "PressArrow"
	19	[13403]	LOADNIL  	R6 R6 ; R6 := nil
	20	[13403]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	21	[13404]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	22	[13404]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x1e5b5cfe]
	23	[13404]	LOADK    	R2 K11 ; R2 := "MenuPanel.RightArrow"
	24	[13404]	LOADK    	R3 K8 ; R3 := "RollOverArrow"
	25	[13404]	LOADK    	R4 K9 ; R4 := "RollOutArrow"
	26	[13404]	LOADK    	R5 K10 ; R5 := "PressArrow"
	27	[13404]	LOADNIL  	R6 R6 ; R6 := nil
	28	[13404]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	29	[13405]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	30	[13405]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x1e5b5cfe]
	31	[13405]	LOADK    	R2 K12 ; R2 := "MenuPanel.SelectLoadoutBtn"
	32	[13405]	LOADK    	R3 K8 ; R3 := "RollOverArrow"
	33	[13405]	LOADK    	R4 K9 ; R4 := "RollOutArrow"
	34	[13405]	LOADK    	R5 K13 ; R5 := "OpenLoadoutSelection"
	35	[13405]	LOADNIL  	R6 R6 ; R6 := nil
	36	[13405]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	37	[13407]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	38	[13407]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x263a3cc2]
	39	[13407]	GETGLOBAL	R2 K15 ; R2 := 0x89326c93
	40	[13407]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0xb4364067]
	41	[13407]	CALL     	R2 2 0 ; R2,... := R2(R3)
	42	[13407]	CALL     	R0 0 1 ; R0(R1,...)
	43	[13409]	GETGLOBAL	R0 K17 ; R0 := 0x34291f5c
	44	[13409]	GETTABLE 	R0 R0 K18 ; R0 := R0[0xa7a2e381]
	45	[13409]	CALL     	R0 1 2 ; R0 := R0()
	46	[13409]	SETUPVAL 	R0 U0 ; U0 := R0
	47	[13411]	GETUPVAL 	R0 U2 ; R0 := U2
	48	[13411]	GETTABLE 	R0 R0 K19 ; R0 := R0[0xb73d420f]
	49	[13411]	CALL     	R0 1 2 ; R0 := R0()
	50	[13411]	SETUPVAL 	R0 U1 ; U1 := R0
	51	[13413]	GETUPVAL 	R0 U0 ; R0 := U0
	52	[13413]	TEST     	R0 0 ; if not R0 then PC := 74
	53	[13413]	JMP      	74 ; PC := 74
	54	[13414]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	55	[13414]	SELF     	R0 R0 K20 ; R1 := R0; R0 := R0[0x5f56eeab]
	56	[13414]	LOADK    	R2 K21 ; R2 := "MenuPanel.Label"
	57	[13414]	LOADK    	R3 := 41.000000
	58	[13414]	LOADK    	R4 K22 ; R4 := "Arial Unicode MS"
	59	[13414]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	60	[13415]	GETUPVAL 	R0 U3 ; R0 := U3
	61	[13415]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	62	[13415]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x91a24e4b]
	63	[13415]	LOADK    	R3 K21 ; R3 := "MenuPanel.Label"
	64	[13415]	LOADK    	R4 := 0.000000
	65	[13415]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	66	[13415]	SETTABLE 	R0 K23 R1 ; R0["X"] := R1
	67	[13416]	GETUPVAL 	R0 U3 ; R0 := U3
	68	[13416]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	69	[13416]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x91a24e4b]
	70	[13416]	LOADK    	R3 K21 ; R3 := "MenuPanel.Label"
	71	[13416]	LOADK    	R4 := 1.000000
	72	[13416]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	73	[13416]	SETTABLE 	R0 K25 R1 ; R0["Y"] := R1
	74	[13421]	GETGLOBAL	R0 K15 ; R0 := 0x89326c93
	75	[13421]	SELF     	R0 R0 K26 ; R1 := R0; R0 := R0[0x46a0ebf5]
	76	[13421]	GETUPVAL 	R2 U4 ; R2 := U4
	77	[13421]	GETTABLE 	R2 R2 K27 ; R2 := R2["TELEPORT_TRIGGER"]
	78	[13421]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	79	[13422]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	80	[13422]	MOVE     	R2 R0 ; R2 := R0
	81	[13422]	CALL     	R1 2 2 ; R1 := R1(R2)
	82	[13422]	TEST     	R1 1 ; if R1 then PC := 86
	83	[13422]	JMP      	86 ; PC := 86
	84	[13423]	SELF     	R1 R0 K28 ; R2 := R0; R1 := R0[0xf4e253b6]
	85	[13423]	CALL     	R1 2 1 ; R1(R2)
	86	[13427]	GETGLOBAL	R1 K29 ; R1 := mLoaders
	87	[13427]	GETUPVAL 	R2 U5 ; R2 := U5
	88	[13431]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	89	[13431]	GETUPVAL 	R0 U6 ; R0 := U6
	90	[13427]	CALL     	R2 2 2 ; R2 := R2(R3)
	91	[13431]	SETTABLE 	R1 K30 R2 ; R1["mSelectionLoader"] := R2
	92	[13432]	GETGLOBAL	R1 K29 ; R1 := mLoaders
	93	[13432]	GETUPVAL 	R2 U5 ; R2 := U5
	94	[13435]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	95	[13435]	GETUPVAL 	R0 U7 ; R0 := U7
	96	[13432]	CALL     	R2 2 2 ; R2 := R2(R3)
	97	[13435]	SETTABLE 	R1 K31 R2 ; R1["mCosmeticsLoader"] := R2
	98	[13436]	GETGLOBAL	R1 K29 ; R1 := mLoaders
	99	[13436]	GETUPVAL 	R2 U5 ; R2 := U5
	100	[13442]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	101	[13442]	GETUPVAL 	R0 U8 ; R0 := U8
	102	[13436]	CALL     	R2 2 2 ; R2 := R2(R3)
	103	[13442]	SETTABLE 	R1 K32 R2 ; R1[0x659d451f] := R2
	104	[13443]	GETGLOBAL	R1 K29 ; R1 := mLoaders
	105	[13443]	GETUPVAL 	R2 U5 ; R2 := U5
	106	[13452]	CLOSURE  	R3 3 ; R3 := closure(Function #4)
	107	[13452]	GETUPVAL 	R0 U9 ; R0 := U9
	108	[13452]	GETUPVAL 	R0 U10 ; R0 := U10
	109	[13443]	CALL     	R2 2 2 ; R2 := R2(R3)
	110	[13452]	SETTABLE 	R1 K33 R2 ; R1[0x0032441c] := R2
	111	[13454]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	112	[13454]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0x824d113a]
	113	[13454]	OP_LOADBOOL	R3 1 0 ; R3 := true
	114	[13454]	CALL     	R1 3 1 ; R1(R2,R3)
	115	[13456]	LOADNIL  	R1 R1 ; R1 := nil
	116	[13457]	GETGLOBAL	R2 K15 ; R2 := 0x89326c93
	117	[13457]	SELF     	R2 R2 K35 ; R3 := R2; R2 := R2[0x78298275]
	118	[13457]	CALL     	R2 2 2 ; R2 := R2(R3)
	119	[13458]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	120	[13458]	MOVE     	R4 R2 ; R4 := R2
	121	[13458]	CALL     	R3 2 2 ; R3 := R3(R4)
	122	[13458]	TEST     	R3 1 ; if R3 then PC := 127
	123	[13458]	JMP      	127 ; PC := 127
	124	[13459]	SELF     	R3 R2 K36 ; R4 := R2; R3 := R2[0xd1586535]
	125	[13459]	CALL     	R3 2 2 ; R3 := R3(R4)
	126	[13459]	MOVE     	R1 R3 ; R1 := R3
	127	[13462]	GETUPVAL 	R3 U11 ; R3 := U11
	128	[13462]	GETTABLE 	R3 R3 K38 ; R3 := R3[0x2a1108a9]
	129	[13462]	GETUPVAL 	R4 U11 ; R4 := U11
	130	[13462]	GETTABLE 	R4 R4 K39 ; R4 := R4[0x06d055f9]
	131	[13462]	GETGLOBAL	R5 K40 ; R5 := 0xe7f2b02f
	132	[13462]	SELF     	R5 R5 K41 ; R6 := R5; R5 := R5[0xca33534d]
	133	[13462]	CALL     	R5 2 2 ; R5 := R5(R6)
	134	[13462]	LOADK    	R6 K42 ; R6 := "ArsenalRelay"
	135	[13462]	LOADK    	R7 K43 ; R7 := "Arsenal"
	136	[13462]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	137	[13462]	MOVE     	R5 R1 ; R5 := R1
	138	[13462]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	139	[13462]	SETGLOBALHASH	R3 K37 ; mArsenalConsole := R3
	140	[13464]	GETUPVAL 	R3 U11 ; R3 := U11
	141	[13464]	GETTABLE 	R3 R3 K38 ; R3 := R3[0x2a1108a9]
	142	[13464]	LOADK    	R4 K44 ; R4 := "OnEnteredArsenal"
	143	[13464]	MOVE     	R5 R1 ; R5 := R1
	144	[13464]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	145	[13465]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	146	[13465]	MOVE     	R5 R3 ; R5 := R3
	147	[13465]	CALL     	R4 2 2 ; R4 := R4(R5)
	148	[13465]	TEST     	R4 1 ; if R4 then PC := 153
	149	[13465]	JMP      	153 ; PC := 153
	150	[13466]	SELF     	R4 R3 K45 ; R5 := R3; R4 := R3[0x8eb2112d]
	151	[13466]	LOADK    	R6 K46 ; R6 := "Execute"
	152	[13466]	CALL     	R4 3 1 ; R4(R5,R6)
	153	[13469]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	154	[13469]	SELF     	R4 R4 K47 ; R5 := R4; R4 := R4[0xacedfbeb]
	155	[13469]	LOADK    	R6 := 2.000000
	156	[13469]	CALL     	R4 3 1 ; R4(R5,R6)
	157	[13471]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	158	[13471]	SELF     	R4 R4 K49 ; R5 := R4; R4 := R4[0xc6a10ab1]
	159	[13471]	LOADK    	R6 := 0.000000
	160	[13471]	CALL     	R4 3 1 ; R4(R5,R6)
	161	[13473]	GETGLOBAL	R4 K50 ; R4 := _T
	162	[13473]	SETTABLE 	R4 K51 K52 ; R4["maximumSyndicateScarfIntensity"] := true
	163	[13474]	GETGLOBAL	R4 K50 ; R4 := _T
	164	[13474]	GETTABLE 	R4 R4 K53 ; R4 := R4["QuestProgressWaitingForUpgradesScreen"]
	165	[13474]	TEST     	R4 0 ; if not R4 then PC := 171
	166	[13474]	JMP      	171 ; PC := 171
	167	[13476]	GETGLOBAL	R4 K54 ; R4 := 0xbe190284
	168	[13476]	SELF     	R4 R4 K55 ; R5 := R4; R4 := R4[0xc02f2cb8]
	169	[13476]	OP_LOADBOOL	R6 1 0 ; R6 := true
	170	[13476]	CALL     	R4 3 1 ; R4(R5,R6)
	171	[13481]	GETGLOBAL	R4 K56 ; R4 := 0x9ba7909f
	172	[13481]	SELF     	R4 R4 K57 ; R5 := R4; R4 := R4[0xbcfb64ab]
	173	[13481]	GETGLOBAL	R6 K58 ; R6 := 0x10179b0e
	174	[13481]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	175	[13482]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	176	[13482]	MOVE     	R6 R4 ; R6 := R4
	177	[13482]	CALL     	R5 2 2 ; R5 := R5(R6)
	178	[13482]	TEST     	R5 1 ; if R5 then PC := 183
	179	[13482]	JMP      	183 ; PC := 183
	180	[13483]	SELF     	R5 R4 K59 ; R6 := R4; R5 := R4[0x41d3c627]
	181	[13483]	OP_LOADBOOL	R7 1 0 ; R7 := true
	182	[13483]	CALL     	R5 3 1 ; R5(R6,R7)
	183	[13486]	GETUPVAL 	R5 U12 ; R5 := U12
	184	[13486]	GETUPVAL 	R6 U13 ; R6 := U13
	185	[13486]	GETTABLE 	R6 R6 K61 ; R6 := R6[0x5d10207d]
	186	[13486]	LOADK    	R7 := 9.000000
	187	[13486]	OP_LOADBOOL	R8 1 0 ; R8 := true
	188	[13486]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	189	[13486]	SETTABLE 	R5 K60 R6 ; R5["FloatingContent"] := R6
	190	[13487]	GETUPVAL 	R5 U12 ; R5 := U12
	191	[13487]	GETUPVAL 	R6 U13 ; R6 := U13
	192	[13487]	GETTABLE 	R6 R6 K61 ; R6 := R6[0x5d10207d]
	193	[13487]	LOADK    	R7 := 10.000000
	194	[13487]	OP_LOADBOOL	R8 1 0 ; R8 := true
	195	[13487]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	196	[13487]	SETTABLE 	R5 K63 R6 ; R5["FloatingContentHighlight"] := R6
	197	[13488]	GETUPVAL 	R5 U12 ; R5 := U12
	198	[13488]	GETUPVAL 	R6 U13 ; R6 := U13
	199	[13488]	GETTABLE 	R6 R6 K61 ; R6 := R6[0x5d10207d]
	200	[13488]	LOADK    	R7 := 2.000000
	201	[13488]	OP_LOADBOOL	R8 1 0 ; R8 := true
	202	[13488]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	203	[13488]	SETTABLE 	R5 K64 R6 ; R5["Background1"] := R6
	204	[13490]	GETGLOBAL	R5 K65 ; R5 := Icons
	205	[13490]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	206	[13490]	SELF     	R6 R6 K67 ; R7 := R6; R6 := R6[0x42b04007]
	207	[13490]	LOADK    	R8 K68 ; R8 := "<REPUTATION_SMALL>"
	208	[13490]	OP_LOADBOOL	R9 1 0 ; R9 := true
	209	[13490]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	210	[13490]	SETTABLE 	R5 K66 R6 ; R5["REPUTATION"] := R6
	211	[13491]	GETGLOBAL	R5 K65 ; R5 := Icons
	212	[13491]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	213	[13491]	SELF     	R6 R6 K67 ; R7 := R6; R6 := R6[0x42b04007]
	214	[13491]	LOADK    	R8 K70 ; R8 := "<PLATINUM_CREDITS>"
	215	[13491]	OP_LOADBOOL	R9 1 0 ; R9 := true
	216	[13491]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	217	[13491]	SETTABLE 	R5 K69 R6 ; R5["PLATINUM"] := R6
	218	[13492]	GETGLOBAL	R5 K65 ; R5 := Icons
	219	[13492]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	220	[13492]	SELF     	R6 R6 K67 ; R7 := R6; R6 := R6[0x42b04007]
	221	[13492]	LOADK    	R8 K72 ; R8 := "<TIMER>"
	222	[13492]	OP_LOADBOOL	R9 1 0 ; R9 := true
	223	[13492]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	224	[13492]	SETTABLE 	R5 K71 R6 ; R5["TIMER"] := R6
	225	[13494]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	226	[13494]	GETGLOBAL	R6 K37 ; R6 := mArsenalConsole
	227	[13494]	CALL     	R5 2 2 ; R5 := R5(R6)
	228	[13494]	TEST     	R5 1 ; if R5 then PC := 239
	229	[13494]	JMP      	239 ; PC := 239
	230	[13494]	GETGLOBAL	R5 K37 ; R5 := mArsenalConsole
	231	[13494]	SELF     	R5 R5 K73 ; R6 := R5; R5 := R5[0xfe3be07a]
	232	[13494]	CALL     	R5 2 2 ; R5 := R5(R6)
	233	[13494]	TEST     	R5 0 ; if not R5 then PC := 239
	234	[13494]	JMP      	239 ; PC := 239
	235	[13497]	GETGLOBAL	R5 K37 ; R5 := mArsenalConsole
	236	[13497]	SELF     	R5 R5 K74 ; R6 := R5; R5 := R5[0x19368051]
	237	[13497]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	238	[13497]	CALL     	R5 3 1 ; R5(R6,R7)
	239	[13500]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	240	[13500]	SELF     	R5 R5 K75 ; R6 := R5; R5 := R5[0x67bc869f]
	241	[13500]	LOADK    	R7 K76 ; R7 := "StatContainer.Bg"
	242	[13500]	LOADK    	R8 := 10.000000
	243	[13500]	LOADK    	R9 := 10.000000
	244	[13500]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	245	[13502]	NEWTABLE 	R5 0 23 ; R5 := {}
	246	[13504]	NEWTABLE 	R6 0 5 ; R6 := {}
	247	[13504]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	248	[13504]	SETTABLE 	R6 K81 K80 ; R6["LoadOutId"] := 0.000000
	249	[13504]	SETTABLE 	R6 K82 K83 ; R6["StoreItemId"] := 3.000000
	250	[13504]	SETTABLE 	R6 K84 K85 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Warframe"
	251	[13504]	SETTABLE 	R6 K86 K87 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_TennoLoadout"
	252	[13504]	SETTABLE 	R5 K78 R6 ; R5["SUIT"] := R6
	253	[13505]	NEWTABLE 	R6 0 4 ; R6 := {}
	254	[13505]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	255	[13505]	SETTABLE 	R6 K81 K89 ; R6["LoadOutId"] := 2.000000
	256	[13505]	SETTABLE 	R6 K82 K90 ; R6["StoreItemId"] := 1.000000
	257	[13505]	SETTABLE 	R6 K84 K91 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_LongGun"
	258	[13505]	SETTABLE 	R5 K88 R6 ; R5["PRIMARY"] := R6
	259	[13506]	NEWTABLE 	R6 0 4 ; R6 := {}
	260	[13506]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	261	[13506]	SETTABLE 	R6 K81 K90 ; R6["LoadOutId"] := 1.000000
	262	[13506]	SETTABLE 	R6 K82 K80 ; R6["StoreItemId"] := 0.000000
	263	[13506]	SETTABLE 	R6 K84 K93 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Pistol"
	264	[13506]	SETTABLE 	R5 K92 R6 ; R5[0x3ed442a9] := R6
	265	[13507]	NEWTABLE 	R6 0 4 ; R6 := {}
	266	[13507]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	267	[13507]	SETTABLE 	R6 K81 K83 ; R6["LoadOutId"] := 3.000000
	268	[13507]	SETTABLE 	R6 K82 K95 ; R6["StoreItemId"] := 5.000000
	269	[13507]	SETTABLE 	R6 K84 K96 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Melee"
	270	[13507]	SETTABLE 	R5 K94 R6 ; R5["MELEE"] := R6
	271	[13508]	NEWTABLE 	R6 0 6 ; R6 := {}
	272	[13508]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	273	[13508]	SETTABLE 	R6 K98 K52 ; R6["FocusEntry"] := true
	274	[13508]	SETTABLE 	R6 K84 K99 ; R6["Title"] := "/Lotus/Language/Menu/Focus"
	275	[13508]	SETTABLE 	R6 K100 K89 ; R6["IconScale"] := 2.000000
	276	[13508]	SETTABLE 	R6 K101 K102 ; R6["IconXScale"] := -0.600000
	277	[13508]	GETUPVAL 	R7 U14 ; R7 := U14
	278	[13508]	SETTABLE 	R6 K103 R7 ; R6[0x8f270b0e] := R7
	279	[13508]	SETTABLE 	R5 K97 R6 ; R5["FOCUS"] := R6
	280	[13509]	NEWTABLE 	R6 0 4 ; R6 := {}
	281	[13509]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	282	[13509]	SETTABLE 	R6 K81 K95 ; R6["LoadOutId"] := 5.000000
	283	[13509]	SETTABLE 	R6 K82 K105 ; R6["StoreItemId"] := 38.000000
	284	[13509]	SETTABLE 	R6 K84 K106 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
	285	[13509]	SETTABLE 	R5 K104 R6 ; R5["SPECIAL_A"] := R6
	286	[13510]	NEWTABLE 	R6 0 4 ; R6 := {}
	287	[13510]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	288	[13510]	SETTABLE 	R6 K81 K108 ; R6["LoadOutId"] := 6.000000
	289	[13510]	SETTABLE 	R6 K82 K105 ; R6["StoreItemId"] := 38.000000
	290	[13510]	SETTABLE 	R6 K84 K106 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
	291	[13510]	SETTABLE 	R5 K107 R6 ; R5["SPECIAL_B"] := R6
	292	[13511]	NEWTABLE 	R6 0 5 ; R6 := {}
	293	[13511]	SETTABLE 	R6 K79 K110 ; R6["LoadOutType"] := 7.000000
	294	[13511]	SETTABLE 	R6 K81 K80 ; R6["LoadOutId"] := 0.000000
	295	[13511]	SETTABLE 	R6 K82 K111 ; R6["StoreItemId"] := 47.000000
	296	[13511]	SETTABLE 	R6 K84 K112 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_DataKnife"
	297	[13511]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	298	[13511]	SETTABLE 	R5 K109 R6 ; R5["DATA_KNIFE"] := R6
	299	[13512]	NEWTABLE 	R6 0 5 ; R6 := {}
	300	[13512]	GETGLOBAL	R7 K115 ; R7 := 0x7f5022cf
	301	[13512]	GETTABLE 	R7 R7 K116 ; R7 := R7[0x3f3e4d12]
	302	[13512]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	303	[13512]	SELF     	R8 R8 K67 ; R9 := R8; R8 := R8[0x42b04007]
	304	[13512]	LOADK    	R10 K117 ; R10 := "/Lotus/Language/BardQuest/BardQuestSequencer"
	305	[13512]	OP_LOADBOOL	R11 0 0 ; R11 := false
	306	[13512]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	307	[13512]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	308	[13512]	SETTABLE 	R6 K84 R7 ; R6["Title"] := R7
	309	[13512]	GETGLOBAL	R7 K119 ; R7 := 0xcc921830
	310	[13512]	SETTABLE 	R6 K118 R7 ; R6[0x05eeb9db] := R7
	311	[13512]	GETUPVAL 	R7 U15 ; R7 := U15
	312	[13512]	SETTABLE 	R6 K103 R7 ; R6[0x8f270b0e] := R7
	313	[13512]	SETTABLE 	R6 K120 K52 ; R6["MandachordEntry"] := true
	314	[13512]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	315	[13512]	SETTABLE 	R5 K114 R6 ; R5["MANDACHORD"] := R6
	316	[13514]	NEWTABLE 	R6 0 5 ; R6 := {}
	317	[13514]	SETTABLE 	R6 K79 K90 ; R6["LoadOutType"] := 1.000000
	318	[13514]	SETTABLE 	R6 K81 K80 ; R6["LoadOutId"] := 0.000000
	319	[13514]	SETTABLE 	R6 K82 K122 ; R6["StoreItemId"] := 15.000000
	320	[13514]	SETTABLE 	R6 K84 K123 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Companion"
	321	[13514]	SETTABLE 	R6 K86 K124 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_CompanionLoadout"
	322	[13514]	SETTABLE 	R5 K121 R6 ; R5["PET"] := R6
	323	[13515]	NEWTABLE 	R6 0 5 ; R6 := {}
	324	[13515]	SETTABLE 	R6 K79 K90 ; R6["LoadOutType"] := 1.000000
	325	[13515]	SETTABLE 	R6 K81 K89 ; R6["LoadOutId"] := 2.000000
	326	[13515]	SETTABLE 	R6 K82 K126 ; R6["StoreItemId"] := 16.000000
	327	[13515]	SETTABLE 	R6 K84 K127 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SentinelWeapon"
	328	[13515]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	329	[13515]	SETTABLE 	R5 K125 R6 ; R5["PET_WEAPON"] := R6
	330	[13517]	NEWTABLE 	R6 0 5 ; R6 := {}
	331	[13517]	SETTABLE 	R6 K84 K129 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Consumables"
	332	[13517]	GETGLOBAL	R7 K130 ; R7 := 0x12bbae18
	333	[13517]	SETTABLE 	R6 K118 R7 ; R6[0x05eeb9db] := R7
	334	[13517]	GETUPVAL 	R7 U16 ; R7 := U16
	335	[13517]	SETTABLE 	R6 K103 R7 ; R6[0x8f270b0e] := R7
	336	[13517]	SETTABLE 	R6 K131 K52 ; R6["ConsumablesEntry"] := true
	337	[13517]	SETTABLE 	R6 K86 K129 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_Consumables"
	338	[13517]	SETTABLE 	R5 K128 R6 ; R5["CONSUMABLES"] := R6
	339	[13518]	NEWTABLE 	R6 0 5 ; R6 := {}
	340	[13518]	SETTABLE 	R6 K84 K133 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Emotes"
	341	[13518]	GETGLOBAL	R7 K134 ; R7 := 0x1ecc3e46
	342	[13518]	SETTABLE 	R6 K118 R7 ; R6[0x05eeb9db] := R7
	343	[13518]	GETUPVAL 	R7 U17 ; R7 := U17
	344	[13518]	SETTABLE 	R6 K103 R7 ; R6[0x8f270b0e] := R7
	345	[13518]	SETTABLE 	R6 K135 K52 ; R6["EmotesEntry"] := true
	346	[13518]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	347	[13518]	SETTABLE 	R5 K132 R6 ; R5[0x9e3d3434] := R6
	348	[13520]	NEWTABLE 	R6 0 5 ; R6 := {}
	349	[13520]	SETTABLE 	R6 K79 K83 ; R6["LoadOutType"] := 3.000000
	350	[13520]	SETTABLE 	R6 K81 K80 ; R6["LoadOutId"] := 0.000000
	351	[13520]	SETTABLE 	R6 K82 K83 ; R6["StoreItemId"] := 3.000000
	352	[13520]	SETTABLE 	R6 K84 K85 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Warframe"
	353	[13520]	SETTABLE 	R6 K86 K87 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_TennoLoadout"
	354	[13520]	SETTABLE 	R5 K136 R6 ; R5[0xed4e0128] := R6
	355	[13521]	NEWTABLE 	R6 0 4 ; R6 := {}
	356	[13521]	SETTABLE 	R6 K79 K83 ; R6["LoadOutType"] := 3.000000
	357	[13521]	SETTABLE 	R6 K81 K89 ; R6["LoadOutId"] := 2.000000
	358	[13521]	SETTABLE 	R6 K82 K90 ; R6["StoreItemId"] := 1.000000
	359	[13521]	SETTABLE 	R6 K84 K91 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_LongGun"
	360	[13521]	SETTABLE 	R5 K137 R6 ; R5["PVP_PRIMARY"] := R6
	361	[13522]	NEWTABLE 	R6 0 4 ; R6 := {}
	362	[13522]	SETTABLE 	R6 K79 K83 ; R6["LoadOutType"] := 3.000000
	363	[13522]	SETTABLE 	R6 K81 K90 ; R6["LoadOutId"] := 1.000000
	364	[13522]	SETTABLE 	R6 K82 K80 ; R6["StoreItemId"] := 0.000000
	365	[13522]	SETTABLE 	R6 K84 K93 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Pistol"
	366	[13522]	SETTABLE 	R5 K138 R6 ; R5["PVP_SECONDARY"] := R6
	367	[13523]	NEWTABLE 	R6 0 4 ; R6 := {}
	368	[13523]	SETTABLE 	R6 K79 K83 ; R6["LoadOutType"] := 3.000000
	369	[13523]	SETTABLE 	R6 K81 K83 ; R6["LoadOutId"] := 3.000000
	370	[13523]	SETTABLE 	R6 K82 K95 ; R6["StoreItemId"] := 5.000000
	371	[13523]	SETTABLE 	R6 K84 K96 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Melee"
	372	[13523]	SETTABLE 	R5 K139 R6 ; R5[0x200054f6] := R6
	373	[13524]	NEWTABLE 	R6 0 4 ; R6 := {}
	374	[13524]	SETTABLE 	R6 K79 K83 ; R6["LoadOutType"] := 3.000000
	375	[13524]	SETTABLE 	R6 K81 K95 ; R6["LoadOutId"] := 5.000000
	376	[13524]	SETTABLE 	R6 K82 K105 ; R6["StoreItemId"] := 38.000000
	377	[13524]	SETTABLE 	R6 K84 K106 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
	378	[13524]	SETTABLE 	R5 K140 R6 ; R5[0x2d3d0773] := R6
	379	[13525]	NEWTABLE 	R6 0 5 ; R6 := {}
	380	[13525]	SETTABLE 	R6 K79 K83 ; R6["LoadOutType"] := 3.000000
	381	[13525]	SETTABLE 	R6 K81 K108 ; R6["LoadOutId"] := 6.000000
	382	[13525]	SETTABLE 	R6 K82 K105 ; R6["StoreItemId"] := 38.000000
	383	[13525]	SETTABLE 	R6 K84 K106 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
	384	[13525]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	385	[13525]	SETTABLE 	R5 K141 R6 ; R5[0xc1b70f65] := R6
	386	[13526]	NEWTABLE 	R6 0 7 ; R6 := {}
	387	[13526]	SETTABLE 	R6 K79 K143 ; R6["LoadOutType"] := 4.000000
	388	[13526]	SETTABLE 	R6 K81 K83 ; R6["LoadOutId"] := 3.000000
	389	[13526]	SETTABLE 	R6 K82 K144 ; R6["StoreItemId"] := 33.000000
	390	[13526]	SETTABLE 	R6 K84 K145 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_LunaroScoop"
	391	[13526]	SETTABLE 	R6 K86 K146 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_Lunaro"
	392	[13526]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	393	[13526]	SETTABLE 	R6 K147 K52 ; R6["Scoop"] := true
	394	[13526]	SETTABLE 	R5 K142 R6 ; R5["PVP_SCOOP"] := R6
	395	[13527]	NEWTABLE 	R6 0 6 ; R6 := {}
	396	[13527]	SETTABLE 	R6 K84 K133 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Emotes"
	397	[13527]	GETGLOBAL	R7 K134 ; R7 := 0x1ecc3e46
	398	[13527]	SETTABLE 	R6 K118 R7 ; R6[0x05eeb9db] := R7
	399	[13527]	GETUPVAL 	R7 U17 ; R7 := U17
	400	[13527]	SETTABLE 	R6 K103 R7 ; R6[0x8f270b0e] := R7
	401	[13527]	SETTABLE 	R6 K135 K52 ; R6["EmotesEntry"] := true
	402	[13527]	SETTABLE 	R6 K86 K129 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_Consumables"
	403	[13527]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	404	[13527]	SETTABLE 	R5 K148 R6 ; R5[0xc14d48af] := R6
	405	[13529]	NEWTABLE 	R6 0 5 ; R6 := {}
	406	[13529]	SETTABLE 	R6 K79 K89 ; R6["LoadOutType"] := 2.000000
	407	[13529]	SETTABLE 	R6 K81 K80 ; R6["LoadOutId"] := 0.000000
	408	[13529]	SETTABLE 	R6 K82 K150 ; R6["StoreItemId"] := 27.000000
	409	[13529]	SETTABLE 	R6 K84 K151 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Archwing"
	410	[13529]	SETTABLE 	R6 K86 K87 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_TennoLoadout"
	411	[13529]	SETTABLE 	R5 K149 R6 ; R5["ARCHWING"] := R6
	412	[13530]	NEWTABLE 	R6 0 4 ; R6 := {}
	413	[13530]	SETTABLE 	R6 K79 K89 ; R6["LoadOutType"] := 2.000000
	414	[13530]	SETTABLE 	R6 K81 K89 ; R6["LoadOutId"] := 2.000000
	415	[13530]	SETTABLE 	R6 K82 K153 ; R6["StoreItemId"] := 28.000000
	416	[13530]	SETTABLE 	R6 K84 K154 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceGun"
	417	[13530]	SETTABLE 	R5 K152 R6 ; R5["ARCHGUN"] := R6
	418	[13531]	NEWTABLE 	R6 0 5 ; R6 := {}
	419	[13531]	SETTABLE 	R6 K79 K89 ; R6["LoadOutType"] := 2.000000
	420	[13531]	SETTABLE 	R6 K81 K83 ; R6["LoadOutId"] := 3.000000
	421	[13531]	SETTABLE 	R6 K82 K156 ; R6["StoreItemId"] := 29.000000
	422	[13531]	SETTABLE 	R6 K84 K157 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceMelee"
	423	[13531]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	424	[13531]	SETTABLE 	R5 K155 R6 ; R5["ARCHMELEE"] := R6
	425	[13532]	NEWTABLE 	R6 0 6 ; R6 := {}
	426	[13532]	SETTABLE 	R6 K79 K80 ; R6["LoadOutType"] := 0.000000
	427	[13532]	SETTABLE 	R6 K81 K143 ; R6["LoadOutId"] := 4.000000
	428	[13532]	SETTABLE 	R6 K82 K153 ; R6["StoreItemId"] := 28.000000
	429	[13532]	SETTABLE 	R6 K84 K154 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceGun"
	430	[13532]	SETTABLE 	R6 K86 K159 ; R6["TopTitle"] := "/Lotus/Language/Menu/Loadout_HeavyWeapon"
	431	[13532]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	432	[13532]	SETTABLE 	R5 K158 R6 ; R5["HEAVY_GUN"] := R6
	433	[13533]	NEWTABLE 	R6 0 6 ; R6 := {}
	434	[13533]	SETTABLE 	R6 K79 K108 ; R6["LoadOutType"] := 6.000000
	435	[13533]	GETUPVAL 	R7 U18 ; R7 := U18
	436	[13533]	GETTABLE 	R7 R7 K161 ; R7 := R7["KDriveSlot"]
	437	[13533]	SETTABLE 	R6 K81 R7 ; R6["LoadOutId"] := R7
	438	[13533]	SETTABLE 	R6 K82 K162 ; R6["StoreItemId"] := 41.000000
	439	[13533]	SETTABLE 	R6 K84 K163 ; R6["Title"] := "/Lotus/Language/Items/HoverboardSummonBondiName"
	440	[13533]	SETTABLE 	R6 K86 K164 ; R6["TopTitle"] := "/Lotus/Language/Hoverboards/Hoverboard_SingularUpper"
	441	[13533]	SETTABLE 	R6 K113 K52 ; R6["HasBottomLine"] := true
	442	[13533]	SETTABLE 	R5 K160 R6 ; R5["KDRIVE"] := R6
	443	[13534]	NEWTABLE 	R6 0 5 ; R6 := {}
	444	[13534]	SETTABLE 	R6 K79 K166 ; R6["LoadOutType"] := 8.000000
	445	[13534]	SETTABLE 	R6 K81 K80 ; R6["LoadOutId"] := 0.000000
	446	[13534]	SETTABLE 	R6 K82 K167 ; R6["StoreItemId"] := 48.000000
	447	[13534]	SETTABLE 	R6 K84 K168 ; R6["Title"] := "/Lotus/Language/Necromech/MechCategoryName"
	448	[13534]	SETTABLE 	R6 K86 K168 ; R6["TopTitle"] := "/Lotus/Language/Necromech/MechCategoryName"
	449	[13534]	SETTABLE 	R5 K165 R6 ; R5["MECH_SUIT"] := R6
	450	[13535]	NEWTABLE 	R6 0 4 ; R6 := {}
	451	[13535]	SETTABLE 	R6 K79 K166 ; R6["LoadOutType"] := 8.000000
	452	[13535]	SETTABLE 	R6 K81 K143 ; R6["LoadOutId"] := 4.000000
	453	[13535]	SETTABLE 	R6 K82 K153 ; R6["StoreItemId"] := 28.000000
	454	[13535]	SETTABLE 	R6 K84 K154 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_SpaceGun"
	455	[13535]	SETTABLE 	R5 K169 R6 ; R5[0x67bc869f] := R6
	456	[13536]	NEWTABLE 	R6 0 4 ; R6 := {}
	457	[13536]	SETTABLE 	R6 K79 K166 ; R6["LoadOutType"] := 8.000000
	458	[13536]	SETTABLE 	R6 K81 K95 ; R6["LoadOutId"] := 5.000000
	459	[13536]	SETTABLE 	R6 K82 K105 ; R6["StoreItemId"] := 38.000000
	460	[13536]	SETTABLE 	R6 K84 K106 ; R6["Title"] := "/Lotus/Language/Menu/Loadout_Special"
	461	[13536]	SETTABLE 	R5 K170 R6 ; R5["MECH_SPECIAL_A"] := R6
	462	[13537]	SETGLOBALHASH	R5 K77 ; LOADOUT_SLOTS := R5
	463	[13539]	GETGLOBAL	R5 K171 ; R5 := 0x2d0fad09
	464	[13539]	LOADK    	R6 K172 ; R6 := "EE.Interface.AnchorMgr"
	465	[13539]	CALL     	R5 2 2 ; R5 := R5(R6)
	466	[13540]	GETTABLE 	R6 R5 K173 ; R6 := R5[0xae6791ba]
	467	[13540]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	468	[13540]	CALL     	R6 2 2 ; R6 := R6(R7)
	469	[13540]	SETUPVAL 	R6 U19 ; U19 := R6
	470	[13541]	GETUPVAL 	R6 U19 ; R6 := U19
	471	[13541]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	472	[13541]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	473	[13541]	LOADK    	R9 K175 ; R9 := "LinkBtn"
	474	[13541]	NEWTABLE 	R10 1 0 ; R10 := {}
	475	[13541]	GETUPVAL 	R11 U19 ; R11 := U19
	476	[13541]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	477	[13541]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	478	[13541]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	479	[13542]	GETUPVAL 	R6 U19 ; R6 := U19
	480	[13542]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	481	[13542]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	482	[13542]	LOADK    	R9 K177 ; R9 := "CapturaBtn"
	483	[13542]	NEWTABLE 	R10 1 0 ; R10 := {}
	484	[13542]	GETUPVAL 	R11 U19 ; R11 := U19
	485	[13542]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	486	[13542]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	487	[13542]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	488	[13543]	GETUPVAL 	R6 U19 ; R6 := U19
	489	[13543]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	490	[13543]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	491	[13543]	LOADK    	R9 K178 ; R9 := "ClipLinkBtn"
	492	[13543]	NEWTABLE 	R10 1 0 ; R10 := {}
	493	[13543]	GETUPVAL 	R11 U19 ; R11 := U19
	494	[13543]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	495	[13543]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	496	[13543]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	497	[13544]	GETUPVAL 	R6 U19 ; R6 := U19
	498	[13544]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	499	[13544]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	500	[13544]	LOADK    	R9 K179 ; R9 := "CosmeticDesc"
	501	[13544]	NEWTABLE 	R10 1 0 ; R10 := {}
	502	[13544]	GETUPVAL 	R11 U19 ; R11 := U19
	503	[13544]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	504	[13544]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	505	[13544]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	506	[13545]	GETUPVAL 	R6 U19 ; R6 := U19
	507	[13545]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	508	[13545]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	509	[13545]	LOADK    	R9 K180 ; R9 := "Ability1"
	510	[13545]	NEWTABLE 	R10 1 0 ; R10 := {}
	511	[13545]	GETUPVAL 	R11 U19 ; R11 := U19
	512	[13545]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	513	[13545]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	514	[13545]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	515	[13546]	GETUPVAL 	R6 U19 ; R6 := U19
	516	[13546]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	517	[13546]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	518	[13546]	LOADK    	R9 K181 ; R9 := "Ability2"
	519	[13546]	NEWTABLE 	R10 1 0 ; R10 := {}
	520	[13546]	GETUPVAL 	R11 U19 ; R11 := U19
	521	[13546]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	522	[13546]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	523	[13546]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	524	[13547]	GETUPVAL 	R6 U19 ; R6 := U19
	525	[13547]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	526	[13547]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	527	[13547]	LOADK    	R9 K182 ; R9 := "Ability3"
	528	[13547]	NEWTABLE 	R10 1 0 ; R10 := {}
	529	[13547]	GETUPVAL 	R11 U19 ; R11 := U19
	530	[13547]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	531	[13547]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	532	[13547]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	533	[13548]	GETUPVAL 	R6 U19 ; R6 := U19
	534	[13548]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	535	[13548]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	536	[13548]	LOADK    	R9 K183 ; R9 := "Ability4"
	537	[13548]	NEWTABLE 	R10 1 0 ; R10 := {}
	538	[13548]	GETUPVAL 	R11 U19 ; R11 := U19
	539	[13548]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	540	[13548]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	541	[13548]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	542	[13549]	GETUPVAL 	R6 U19 ; R6 := U19
	543	[13549]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	544	[13549]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	545	[13549]	LOADK    	R9 K184 ; R9 := "EquippedTitle"
	546	[13549]	NEWTABLE 	R10 1 0 ; R10 := {}
	547	[13549]	GETUPVAL 	R11 U19 ; R11 := U19
	548	[13549]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	549	[13549]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	550	[13549]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	551	[13550]	GETUPVAL 	R6 U19 ; R6 := U19
	552	[13550]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	553	[13550]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	554	[13550]	LOADK    	R9 K185 ; R9 := "StatContainer"
	555	[13550]	NEWTABLE 	R10 1 0 ; R10 := {}
	556	[13550]	GETUPVAL 	R11 U19 ; R11 := U19
	557	[13550]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	558	[13550]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	559	[13550]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	560	[13551]	GETUPVAL 	R6 U19 ; R6 := U19
	561	[13551]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	562	[13551]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	563	[13551]	LOADK    	R9 K186 ; R9 := "RightFade"
	564	[13551]	NEWTABLE 	R10 1 0 ; R10 := {}
	565	[13551]	GETUPVAL 	R11 U19 ; R11 := U19
	566	[13551]	GETTABLE 	R11 R11 K176 ; R11 := R11["ANCHOR_H_RIGHT"]
	567	[13551]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	568	[13551]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	569	[13552]	GETUPVAL 	R6 U19 ; R6 := U19
	570	[13552]	SELF     	R6 R6 K174 ; R7 := R6; R6 := R6[0x20ff29f7]
	571	[13552]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	572	[13552]	LOADK    	R9 K187 ; R9 := "LeftFade"
	573	[13552]	NEWTABLE 	R10 1 0 ; R10 := {}
	574	[13552]	GETUPVAL 	R11 U19 ; R11 := U19
	575	[13552]	GETTABLE 	R11 R11 K188 ; R11 := R11["ANCHOR_H_LEFT"]
	576	[13552]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	577	[13552]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	578	[13553]	GETUPVAL 	R6 U19 ; R6 := U19
	579	[13553]	SELF     	R6 R6 K189 ; R7 := R6; R6 := R6[0xfaa69527]
	580	[13553]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	581	[13553]	SELF     	R8 R8 K190 ; R9 := R8; R8 := R8[0x6b837788]
	582	[13553]	CALL     	R8 2 2 ; R8 := R8(R9)
	583	[13553]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	584	[13553]	SELF     	R9 R9 K191 ; R10 := R9; R9 := R9[0xaf9fda9f]
	585	[13553]	CALL     	R9 2 0 ; R9,... := R9(R10)
	586	[13553]	CALL     	R6 0 1 ; R6(R7,...)
	587	[13555]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	588	[13555]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x0c33ebb2]
	589	[13555]	LOADK    	R8 K180 ; R8 := "Ability1"
	590	[13555]	LOADK    	R9 K192 ; R9 := "noMenuSelection"
	591	[13555]	OP_LOADBOOL	R10 1 0 ; R10 := true
	592	[13555]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	593	[13556]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	594	[13556]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x0c33ebb2]
	595	[13556]	LOADK    	R8 K181 ; R8 := "Ability2"
	596	[13556]	LOADK    	R9 K192 ; R9 := "noMenuSelection"
	597	[13556]	OP_LOADBOOL	R10 1 0 ; R10 := true
	598	[13556]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	599	[13557]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	600	[13557]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x0c33ebb2]
	601	[13557]	LOADK    	R8 K182 ; R8 := "Ability3"
	602	[13557]	LOADK    	R9 K192 ; R9 := "noMenuSelection"
	603	[13557]	OP_LOADBOOL	R10 1 0 ; R10 := true
	604	[13557]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	605	[13558]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	606	[13558]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x0c33ebb2]
	607	[13558]	LOADK    	R8 K183 ; R8 := "Ability4"
	608	[13558]	LOADK    	R9 K192 ; R9 := "noMenuSelection"
	609	[13558]	OP_LOADBOOL	R10 1 0 ; R10 := true
	610	[13558]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	611	[13560]	GETGLOBAL	R6 K171 ; R6 := 0x2d0fad09
	612	[13560]	LOADK    	R7 K193 ; R7 := "Lotus.Interface.Libs.TimerMgr"
	613	[13560]	CALL     	R6 2 2 ; R6 := R6(R7)
	614	[13561]	GETGLOBAL	R7 K194 ; R7 := mTimerTable
	615	[13561]	GETTABLE 	R8 R6 K196 ; R8 := R6[0xde474187]
	616	[13561]	CALL     	R8 1 2 ; R8 := R8()
	617	[13561]	SETTABLE 	R7 K195 R8 ; R7["mTimerMgr"] := R8
	618	[13563]	GETGLOBAL	R7 K197 ; R7 := 0x119fdfe2
	619	[13563]	SELF     	R7 R7 K198 ; R8 := R7; R7 := R7[0x830eea67]
	620	[13563]	GETGLOBAL	R9 K62 ; R9 := 0x6c97a788
	621	[13563]	GETTABLE 	R9 R9 K199 ; R9 := R9["VISIBILITY_CENTER"]
	622	[13563]	LOADK    	R10 K200 ; R10 := 0.560000
	623	[13563]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	624	[13564]	GETGLOBAL	R7 K197 ; R7 := 0x119fdfe2
	625	[13564]	SELF     	R7 R7 K198 ; R8 := R7; R7 := R7[0x830eea67]
	626	[13564]	GETGLOBAL	R9 K62 ; R9 := 0x6c97a788
	627	[13564]	GETTABLE 	R9 R9 K201 ; R9 := R9["VISIBILITY_SIZE"]
	628	[13564]	LOADK    	R10 K202 ; R10 := 0.525000
	629	[13564]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	630	[13566]	GETUPVAL 	R7 U18 ; R7 := U18
	631	[13566]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	632	[13566]	SELF     	R8 R8 K24 ; R9 := R8; R8 := R8[0x91a24e4b]
	633	[13566]	LOADK    	R10 K179 ; R10 := "CosmeticDesc"
	634	[13566]	LOADK    	R11 := 12.000000
	635	[13566]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	636	[13566]	SETTABLE 	R7 K203 R8 ; R7["CosmeticDescOrigWidth"] := R8
	637	[13567]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	638	[13567]	SELF     	R7 R7 K20 ; R8 := R7; R7 := R7[0x5f56eeab]
	639	[13567]	LOADK    	R9 K179 ; R9 := "CosmeticDesc"
	640	[13567]	LOADK    	R10 := 29.000000
	641	[13567]	LOADK    	R11 K204 ; R11 := ""
	642	[13567]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	643	[13569]	GETGLOBAL	R7 K206 ; R7 := 0x76ea806b
	644	[13569]	SELF     	R7 R7 K207 ; R8 := R7; R7 := R7[0x3f3ae64c]
	645	[13569]	LOADK    	R9 := 0.000000
	646	[13569]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	647	[13569]	SETGLOBALHASH	R7 K205 ; mPlayerProfile := R7
	648	[13570]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	649	[13570]	GETGLOBAL	R8 K205 ; R8 := mPlayerProfile
	650	[13570]	CALL     	R7 2 2 ; R7 := R7(R8)
	651	[13570]	TEST     	R7 1 ; if R7 then PC := 701
	652	[13570]	JMP      	701 ; PC := 701
	653	[13571]	GETUPVAL 	R7 U20 ; R7 := U20
	654	[13571]	GETGLOBAL	R8 K209 ; R8 := 0x5bced4c4
	655	[13571]	GETTABLE 	R8 R8 K210 ; R8 := R8[0x55f27c30]
	656	[13571]	GETGLOBAL	R9 K1 ; R9 := 0x25d99d89
	657	[13571]	SELF     	R9 R9 K211 ; R10 := R9; R9 := R9[0xefee6c91]
	658	[13571]	CALL     	R9 2 2 ; R9 := R9(R10)
	659	[13571]	DIV      	R9 R9 K89 ; R9 := R9 / 2.000000
	660	[13571]	CALL     	R8 2 2 ; R8 := R8(R9)
	661	[13571]	ADD      	R8 R8 K90 ; R8 := R8 + 1.000000
	662	[13571]	GETGLOBAL	R9 K1 ; R9 := 0x25d99d89
	663	[13571]	SELF     	R9 R9 K212 ; R10 := R9; R9 := R9[0x25a6e75e]
	664	[13571]	CALL     	R9 2 2 ; R9 := R9(R10)
	665	[13571]	SELF     	R9 R9 K213 ; R10 := R9; R9 := R9[0xa64e07df]
	666	[13571]	LOADK    	R11 := 6.000000
	667	[13571]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	668	[13571]	ADD      	R8 R8 R9 ; R8 := R8 + R9
	669	[13571]	SETTABLE 	R7 K208 R8 ; R7["PVE_LOADOUTS"] := R8
	670	[13573]	GETGLOBAL	R7 K50 ; R7 := _T
	671	[13573]	GETTABLE 	R7 R7 K215 ; R7 := R7["ArsenalPvPOnlyReturnConsole"]
	672	[13573]	EQ       	0 R7 K216 ; if R7 ~= nil then PC := 698
	673	[13573]	JMP      	698 ; PC := 698
	674	[13573]	GETGLOBAL	R7 K1 ; R7 := 0x25d99d89
	675	[13573]	SELF     	R7 R7 K212 ; R8 := R7; R7 := R7[0x25a6e75e]
	676	[13573]	CALL     	R7 2 2 ; R7 := R7(R8)
	677	[13573]	SELF     	R7 R7 K217 ; R8 := R7; R7 := R7[0x4bb8609a]
	678	[13573]	CALL     	R7 2 2 ; R7 := R7(R8)
	679	[13573]	LEN      	R7 R7 ; R7 := # R7
	680	[13573]	LE       	0 K90 R7 ; if 1.000000 > R7 then PC := 698
	681	[13573]	JMP      	698 ; PC := 698
	682	[13573]	GETGLOBAL	R7 K1 ; R7 := 0x25d99d89
	683	[13573]	SELF     	R7 R7 K212 ; R8 := R7; R7 := R7[0x25a6e75e]
	684	[13573]	CALL     	R7 2 2 ; R7 := R7(R8)
	685	[13573]	SELF     	R7 R7 K218 ; R8 := R7; R7 := R7[0x6f7b67d7]
	686	[13573]	CALL     	R7 2 2 ; R7 := R7(R8)
	687	[13573]	LEN      	R7 R7 ; R7 := # R7
	688	[13573]	LE       	0 K90 R7 ; if 1.000000 > R7 then PC := 698
	689	[13573]	JMP      	698 ; PC := 698
	690	[13573]	GETGLOBAL	R7 K1 ; R7 := 0x25d99d89
	691	[13573]	SELF     	R7 R7 K212 ; R8 := R7; R7 := R7[0x25a6e75e]
	692	[13573]	CALL     	R7 2 2 ; R7 := R7(R8)
	693	[13573]	SELF     	R7 R7 K219 ; R8 := R7; R7 := R7[0x3218c3b0]
	694	[13573]	CALL     	R7 2 2 ; R7 := R7(R8)
	695	[13573]	LEN      	R7 R7 ; R7 := # R7
	696	[13573]	LE       	1 K90 R7 ; if 1.000000 <= R7 then PC := 699
	697	[13573]	JMP      	699 ; PC := 699
	698	[13573]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 699
	699	[13573]	OP_LOADBOOL	R7 1 0 ; R7 := true
	700	[13573]	SETGLOBALHASH	R7 K214 ; mShowVehicles := R7
	701	[13576]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	702	[13576]	GETGLOBAL	R8 K220 ; R8 := 0xb2fe2999
	703	[13576]	CALL     	R7 2 2 ; R7 := R7(R8)
	704	[13576]	TEST     	R7 1 ; if R7 then PC := 712
	705	[13576]	JMP      	712 ; PC := 712
	706	[13577]	GETUPVAL 	R7 U20 ; R7 := U20
	707	[13577]	GETUPVAL 	R8 U2 ; R8 := U2
	708	[13577]	GETTABLE 	R8 R8 K222 ; R8 := R8[0x790d34ac]
	709	[13577]	GETGLOBAL	R9 K220 ; R9 := 0xb2fe2999
	710	[13577]	CALL     	R8 2 2 ; R8 := R8(R9)
	711	[13577]	SETTABLE 	R7 K221 R8 ; R7["PVP_LOADOUTS"] := R8
	712	[13580]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	713	[13580]	GETGLOBAL	R8 K50 ; R8 := _T
	714	[13580]	GETTABLE 	R8 R8 K223 ; R8 := R8["MenuSuitAvatar"]
	715	[13580]	CALL     	R7 2 2 ; R7 := R7(R8)
	716	[13580]	TEST     	R7 0 ; if not R7 then PC := 723
	717	[13580]	JMP      	723 ; PC := 723
	718	[13581]	GETGLOBAL	R7 K50 ; R7 := _T
	719	[13581]	GETUPVAL 	R8 U2 ; R8 := U2
	720	[13581]	GETTABLE 	R8 R8 K224 ; R8 := R8[0x6ef45ebc]
	721	[13581]	CALL     	R8 1 2 ; R8 := R8()
	722	[13581]	SETTABLE 	R7 K223 R8 ; R7["MenuSuitAvatar"] := R8
	723	[13584]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	724	[13584]	GETGLOBAL	R8 K50 ; R8 := _T
	725	[13584]	GETTABLE 	R8 R8 K225 ; R8 := R8["MenuSentinel"]
	726	[13584]	CALL     	R7 2 2 ; R7 := R7(R8)
	727	[13584]	TEST     	R7 1 ; if R7 then PC := 733
	728	[13584]	JMP      	733 ; PC := 733
	729	[13584]	GETGLOBAL	R7 K50 ; R7 := _T
	730	[13584]	GETTABLE 	R7 R7 K226 ; R7 := R7["InSimulacrum"]
	731	[13584]	TEST     	R7 1 ; if R7 then PC := 771
	732	[13584]	JMP      	771 ; PC := 771
	733	[13585]	GETGLOBAL	R7 K50 ; R7 := _T
	734	[13585]	GETGLOBAL	R8 K50 ; R8 := _T
	735	[13585]	GETTABLE 	R8 R8 K223 ; R8 := R8["MenuSuitAvatar"]
	736	[13585]	SELF     	R8 R8 K227 ; R9 := R8; R8 := R8[0xde321e6f]
	737	[13585]	CALL     	R8 2 2 ; R8 := R8(R9)
	738	[13585]	SELF     	R8 R8 K228 ; R9 := R8; R8 := R8[0x2676deee]
	739	[13585]	CALL     	R8 2 2 ; R8 := R8(R9)
	740	[13585]	SETTABLE 	R7 K225 R8 ; R7["MenuSentinel"] := R8
	741	[13586]	LOADK    	R7 := 0.000000
	742	[13587]	GETGLOBAL	R8 K1 ; R8 := 0x25d99d89
	743	[13587]	SELF     	R8 R8 K229 ; R9 := R8; R8 := R8[0x3c6b0324]
	744	[13587]	CALL     	R8 2 2 ; R8 := R8(R9)
	745	[13587]	TEST     	R8 0 ; if not R8 then PC := 749
	746	[13587]	JMP      	749 ; PC := 749
	747	[13588]	LOADK    	R7 := 1.000000
	748	[13588]	JMP      	755 ; PC := 755
	749	[13589]	GETGLOBAL	R8 K1 ; R8 := 0x25d99d89
	750	[13589]	SELF     	R8 R8 K230 ; R9 := R8; R8 := R8[0x9f91f49d]
	751	[13589]	CALL     	R8 2 2 ; R8 := R8(R9)
	752	[13589]	TEST     	R8 0 ; if not R8 then PC := 755
	753	[13589]	JMP      	755 ; PC := 755
	754	[13590]	LOADK    	R7 := 3.000000
	755	[13592]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	756	[13592]	GETGLOBAL	R9 K50 ; R9 := _T
	757	[13592]	GETTABLE 	R9 R9 K225 ; R9 := R9["MenuSentinel"]
	758	[13592]	CALL     	R8 2 2 ; R8 := R8(R9)
	759	[13592]	TEST     	R8 0 ; if not R8 then PC := 771
	760	[13592]	JMP      	771 ; PC := 771
	761	[13592]	GETUPVAL 	R8 U21 ; R8 := U21
	762	[13592]	MOVE     	R9 R7 ; R9 := R7
	763	[13592]	CALL     	R8 2 2 ; R8 := R8(R9)
	764	[13592]	TEST     	R8 0 ; if not R8 then PC := 771
	765	[13592]	JMP      	771 ; PC := 771
	766	[13593]	GETGLOBAL	R8 K50 ; R8 := _T
	767	[13593]	GETUPVAL 	R9 U21 ; R9 := U21
	768	[13593]	MOVE     	R10 R7 ; R10 := R7
	769	[13593]	CALL     	R9 2 2 ; R9 := R9(R10)
	770	[13593]	SETTABLE 	R8 K225 R9 ; R8["MenuSentinel"] := R9
	771	[13597]	MOVE     	R8 R2 ; R8 := R2
	772	[13599]	SELF     	R9 R8 K231 ; R10 := R8; R9 := R8[0xf2deaf69]
	773	[13599]	GETGLOBAL	R11 K232 ; R11 := gLotusOperatorAvatarType
	774	[13599]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	775	[13599]	TEST     	R9 1 ; if R9 then PC := 782
	776	[13599]	JMP      	782 ; PC := 782
	777	[13599]	SELF     	R9 R8 K231 ; R10 := R8; R9 := R8[0xf2deaf69]
	778	[13599]	GETUPVAL 	R11 U22 ; R11 := U22
	779	[13599]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	780	[13599]	TEST     	R9 0 ; if not R9 then PC := 792
	781	[13599]	JMP      	792 ; PC := 792
	782	[13600]	SELF     	R9 R8 K233 ; R10 := R8; R9 := R8[0x5b89142c]
	783	[13600]	CALL     	R9 2 2 ; R9 := R9(R10)
	784	[13601]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	785	[13601]	MOVE     	R11 R9 ; R11 := R9
	786	[13601]	CALL     	R10 2 2 ; R10 := R10(R11)
	787	[13601]	TEST     	R10 1 ; if R10 then PC := 792
	788	[13601]	JMP      	792 ; PC := 792
	789	[13602]	SELF     	R10 R9 K234 ; R11 := R9; R10 := R9[0xa534c3ac]
	790	[13602]	CALL     	R10 2 2 ; R10 := R10(R11)
	791	[13602]	MOVE     	R8 R10 ; R8 := R10
	792	[13605]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	793	[13605]	MOVE     	R11 R8 ; R11 := R8
	794	[13605]	CALL     	R10 2 2 ; R10 := R10(R11)
	795	[13605]	TEST     	R10 1 ; if R10 then PC := 825
	796	[13605]	JMP      	825 ; PC := 825
	797	[13606]	SELF     	R10 R8 K227 ; R11 := R8; R10 := R8[0xde321e6f]
	798	[13606]	CALL     	R10 2 2 ; R10 := R10(R11)
	799	[13607]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	800	[13607]	MOVE     	R12 R10 ; R12 := R10
	801	[13607]	CALL     	R11 2 2 ; R11 := R11(R12)
	802	[13607]	TEST     	R11 1 ; if R11 then PC := 825
	803	[13607]	JMP      	825 ; PC := 825
	804	[13607]	SELF     	R11 R10 K231 ; R12 := R10; R11 := R10[0xf2deaf69]
	805	[13607]	GETGLOBAL	R13 K235 ; R13 := gLotusInventoryControllerType
	806	[13607]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	807	[13607]	TEST     	R11 0 ; if not R11 then PC := 825
	808	[13607]	JMP      	825 ; PC := 825
	809	[13608]	SELF     	R11 R10 K236 ; R12 := R10; R11 := R10[0xf7d48ee0]
	810	[13608]	CALL     	R11 2 2 ; R11 := R11(R12)
	811	[13609]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	812	[13609]	MOVE     	R13 R11 ; R13 := R11
	813	[13609]	CALL     	R12 2 2 ; R12 := R12(R13)
	814	[13609]	TEST     	R12 1 ; if R12 then PC := 818
	815	[13609]	JMP      	818 ; PC := 818
	816	[13610]	SELF     	R12 R11 K237 ; R13 := R11; R12 := R11[0x707cd1f0]
	817	[13610]	CALL     	R12 2 1 ; R12(R13)
	818	[13613]	GETGLOBAL	R12 K50 ; R12 := _T
	819	[13613]	GETTABLE 	R12 R12 K226 ; R12 := R12["InSimulacrum"]
	820	[13613]	TEST     	R12 0 ; if not R12 then PC := 825
	821	[13613]	JMP      	825 ; PC := 825
	822	[13614]	SELF     	R12 R10 K238 ; R13 := R10; R12 := R10[0x0b5ec5b5]
	823	[13614]	OP_LOADBOOL	R14 1 0 ; R14 := true
	824	[13614]	CALL     	R12 3 1 ; R12(R13,R14)
	825	[13619]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	826	[13619]	GETGLOBAL	R13 K54 ; R13 := 0xbe190284
	827	[13619]	CALL     	R12 2 2 ; R12 := R12(R13)
	828	[13619]	TEST     	R12 1 ; if R12 then PC := 924
	829	[13619]	JMP      	924 ; PC := 924
	830	[13620]	GETGLOBAL	R12 K15 ; R12 := 0x89326c93
	831	[13620]	SELF     	R12 R12 K239 ; R13 := R12; R12 := R12[0xfb64e76c]
	832	[13620]	CALL     	R12 2 2 ; R12 := R12(R13)
	833	[13621]	SELF     	R13 R12 K234 ; R14 := R12; R13 := R12[0xa534c3ac]
	834	[13621]	CALL     	R13 2 2 ; R13 := R13(R14)
	835	[13622]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	836	[13622]	MOVE     	R15 R13 ; R15 := R13
	837	[13622]	CALL     	R14 2 2 ; R14 := R14(R15)
	838	[13622]	TEST     	R14 0 ; if not R14 then PC := 843
	839	[13622]	JMP      	843 ; PC := 843
	840	[13623]	SELF     	R14 R12 K240 ; R15 := R12; R14 := R12[0xbb610e5b]
	841	[13623]	CALL     	R14 2 2 ; R14 := R14(R15)
	842	[13623]	MOVE     	R13 R14 ; R13 := R14
	843	[13625]	GETGLOBAL	R14 K50 ; R14 := _T
	844	[13625]	GETTABLE 	R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
	845	[13625]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 924
	846	[13625]	JMP      	924 ; PC := 924
	847	[13626]	GETGLOBAL	R14 K15 ; R14 := 0x89326c93
	848	[13626]	SELF     	R14 R14 K241 ; R15 := R14; R14 := R14[0x18d05d30]
	849	[13626]	CALL     	R14 2 2 ; R14 := R14(R15)
	850	[13626]	TEST     	R14 0 ; if not R14 then PC := 858
	851	[13626]	JMP      	858 ; PC := 858
	852	[13627]	GETGLOBAL	R14 K50 ; R14 := _T
	853	[13627]	GETTABLE 	R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
	854	[13627]	SELF     	R14 R14 K242 ; R15 := R14; R14 := R14[0x2abc8ecd]
	855	[13627]	OP_LOADBOOL	R16 0 0 ; R16 := false
	856	[13627]	CALL     	R14 3 1 ; R14(R15,R16)
	857	[13627]	JMP      	864 ; PC := 864
	858	[13629]	GETGLOBAL	R14 K50 ; R14 := _T
	859	[13629]	GETTABLE 	R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
	860	[13629]	SELF     	R14 R14 K243 ; R15 := R14; R14 := R14[0x768274d6]
	861	[13629]	OP_LOADBOOL	R16 0 0 ; R16 := false
	862	[13629]	OP_LOADBOOL	R17 1 0 ; R17 := true
	863	[13629]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	864	[13631]	GETGLOBAL	R14 K50 ; R14 := _T
	865	[13631]	GETTABLE 	R14 R14 K223 ; R14 := R14["MenuSuitAvatar"]
	866	[13631]	SELF     	R14 R14 K244 ; R15 := R14; R14 := R14[0x808b79e6]
	867	[13631]	CALL     	R14 2 2 ; R14 := R14(R15)
	868	[13632]	GETGLOBAL	R15 K50 ; R15 := _T
	869	[13632]	GETGLOBAL	R16 K15 ; R16 := 0x89326c93
	870	[13632]	SELF     	R16 R16 K245 ; R17 := R16; R16 := R16[0x05909209]
	871	[13632]	GETGLOBAL	R18 K246 ; R18 := 0xc94196df
	872	[13632]	GETGLOBAL	R19 K50 ; R19 := _T
	873	[13632]	GETTABLE 	R19 R19 K223 ; R19 := R19["MenuSuitAvatar"]
	874	[13632]	SELF     	R19 R19 K36 ; R20 := R19; R19 := R19[0xd1586535]
	875	[13632]	CALL     	R19 2 2 ; R19 := R19(R20)
	876	[13632]	GETGLOBAL	R20 K50 ; R20 := _T
	877	[13632]	GETTABLE 	R20 R20 K223 ; R20 := R20["MenuSuitAvatar"]
	878	[13632]	SELF     	R20 R20 K247 ; R21 := R20; R20 := R20[0xcb3851b8]
	879	[13632]	CALL     	R20 2 2 ; R20 := R20(R21)
	880	[13632]	MOVE     	R21 R12 ; R21 := R12
	881	[13632]	MOVE     	R22 R12 ; R22 := R12
	882	[13632]	GETUPVAL 	R23 U23 ; R23 := U23
	883	[13632]	CALL     	R23 1 0 ; R23,... := R23()
	884	[13632]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	885	[13632]	SETTABLE 	R15 K223 R16 ; R15["MenuSuitAvatar"] := R16
	886	[13633]	GETGLOBAL	R15 K50 ; R15 := _T
	887	[13633]	GETTABLE 	R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
	888	[13633]	SELF     	R15 R15 K248 ; R16 := R15; R15 := R15[0xf04f9558]
	889	[13633]	MOVE     	R17 R12 ; R17 := R12
	890	[13633]	CALL     	R15 3 1 ; R15(R16,R17)
	891	[13634]	GETGLOBAL	R15 K50 ; R15 := _T
	892	[13634]	GETTABLE 	R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
	893	[13634]	SELF     	R15 R15 K243 ; R16 := R15; R15 := R15[0x768274d6]
	894	[13634]	OP_LOADBOOL	R17 0 0 ; R17 := false
	895	[13634]	OP_LOADBOOL	R18 1 0 ; R18 := true
	896	[13634]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	897	[13635]	GETGLOBAL	R15 K50 ; R15 := _T
	898	[13635]	GETTABLE 	R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
	899	[13635]	SELF     	R15 R15 K249 ; R16 := R15; R15 := R15[0x0cca925a]
	900	[13635]	MOVE     	R17 R14 ; R17 := R14
	901	[13635]	CALL     	R15 3 1 ; R15(R16,R17)
	902	[13636]	GETGLOBAL	R15 K50 ; R15 := _T
	903	[13636]	GETTABLE 	R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
	904	[13636]	SELF     	R15 R15 K250 ; R16 := R15; R15 := R15[0xd749da12]
	905	[13636]	OP_LOADBOOL	R17 0 0 ; R17 := false
	906	[13636]	CALL     	R15 3 1 ; R15(R16,R17)
	907	[13638]	GETGLOBAL	R15 K50 ; R15 := _T
	908	[13638]	GETTABLE 	R15 R15 K223 ; R15 := R15["MenuSuitAvatar"]
	909	[13638]	SELF     	R15 R15 K227 ; R16 := R15; R15 := R15[0xde321e6f]
	910	[13638]	CALL     	R15 2 2 ; R15 := R15(R16)
	911	[13639]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	912	[13639]	MOVE     	R17 R15 ; R17 := R15
	913	[13639]	CALL     	R16 2 2 ; R16 := R16(R17)
	914	[13639]	TEST     	R16 1 ; if R16 then PC := 924
	915	[13639]	JMP      	924 ; PC := 924
	916	[13639]	SELF     	R16 R15 K231 ; R17 := R15; R16 := R15[0xf2deaf69]
	917	[13639]	GETGLOBAL	R18 K235 ; R18 := gLotusInventoryControllerType
	918	[13639]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	919	[13639]	TEST     	R16 0 ; if not R16 then PC := 924
	920	[13639]	JMP      	924 ; PC := 924
	921	[13640]	SELF     	R16 R15 K251 ; R17 := R15; R16 := R15[0x6df65c49]
	922	[13640]	OP_LOADBOOL	R18 1 0 ; R18 := true
	923	[13640]	CALL     	R16 3 1 ; R16(R17,R18)
	924	[13645]	GETGLOBAL	R16 K50 ; R16 := _T
	925	[13645]	GETTABLE 	R16 R16 K223 ; R16 := R16["MenuSuitAvatar"]
	926	[13645]	SELF     	R16 R16 K252 ; R17 := R16; R16 := R16[0xb2532845]
	927	[13645]	GETGLOBAL	R18 K253 ; R18 := 0x0469f296
	928	[13645]	LOADK    	R19 K254 ; R19 := "IDLE"
	929	[13645]	CALL     	R18 2 0 ; R18,... := R18(R19)
	930	[13645]	CALL     	R16 0 1 ; R16(R17,...)
	931	[13647]	GETGLOBAL	R16 K50 ; R16 := _T
	932	[13647]	GETTABLE 	R16 R16 K223 ; R16 := R16["MenuSuitAvatar"]
	933	[13647]	SELF     	R16 R16 K255 ; R17 := R16; R16 := R16[0xeb332d30]
	934	[13647]	CALL     	R16 2 2 ; R16 := R16(R17)
	935	[13647]	TEST     	R16 0 ; if not R16 then PC := 946
	936	[13647]	JMP      	946 ; PC := 946
	937	[13648]	GETGLOBAL	R16 K54 ; R16 := 0xbe190284
	938	[13648]	LOADK    	R18 K256 ; R18 := true
	939	[13648]	SELF     	R16 R16 R18 ; R17 := R16; R16 := R16[R18]
	940	[13648]	CALL     	R16 2 2 ; R16 := R16(R17)
	941	[13649]	LOADK    	R19 K257 ; R19 := true
	942	[13649]	SELF     	R17 R16 R19 ; R18 := R16; R17 := R16[R19]
	943	[13649]	LOADK    	R19 K258 ; R19 := "ToggleVendor"
	944	[13649]	LOADK    	R20 K204 ; R20 := ""
	945	[13649]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	946	[13652]	GETGLOBAL	R17 K50 ; R17 := _T
	947	[13652]	LOADK    	R18 K259 ; R18 := "LongGunSlotSwapped"
	948	[13652]	OP_LOADBOOL	R19 0 0 ; R19 := false
	949	[13652]	SETTABLE 	R17 R18 R19 ; R17[R18] := R19
	950	[13653]	GETGLOBAL	R17 K50 ; R17 := _T
	951	[13653]	LOADK    	R18 K260 ; R18 := "MeleeSlotSwapped"
	952	[13653]	OP_LOADBOOL	R19 0 0 ; R19 := false
	953	[13653]	SETTABLE 	R17 R18 R19 ; R17[R18] := R19
	954	[13655]	GETGLOBAL	R17 K50 ; R17 := _T
	955	[13655]	GETTABLE 	R17 R17 K223 ; R17 := R17["MenuSuitAvatar"]
	956	[13656]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	957	[13656]	MOVE     	R19 R17 ; R19 := R17
	958	[13656]	CALL     	R18 2 2 ; R18 := R18(R19)
	959	[13656]	TEST     	R18 1 ; if R18 then PC := 973
	960	[13656]	JMP      	973 ; PC := 973
	961	[13657]	LOADK    	R20 K261 ; R20 := true
	962	[13657]	SELF     	R18 R17 R20 ; R19 := R17; R18 := R17[R20]
	963	[13657]	OP_LOADBOOL	R20 0 0 ; R20 := false
	964	[13657]	CALL     	R18 3 1 ; R18(R19,R20)
	965	[13658]	LOADK    	R20 K262 ; R20 := true
	966	[13658]	SELF     	R18 R17 R20 ; R19 := R17; R18 := R17[R20]
	967	[13658]	OP_LOADBOOL	R20 1 0 ; R20 := true
	968	[13658]	CALL     	R18 3 1 ; R18(R19,R20)
	969	[13659]	LOADK    	R20 K263 ; R20 := true
	970	[13659]	SELF     	R18 R17 R20 ; R19 := R17; R18 := R17[R20]
	971	[13659]	LOADNIL  	R20 R20 ; R20 := nil
	972	[13659]	CALL     	R18 3 1 ; R18(R19,R20)
	973	[13662]	GETGLOBAL	R18 K50 ; R18 := _T
	974	[13662]	LOADK    	R19 K264 ; R19 := "DEFAULT_SUIT_ROTATION"
	975	[13662]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	976	[13662]	LOADNIL  	R19 R19 ; R19 := nil
	977	[13662]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 985
	978	[13662]	JMP      	985 ; PC := 985
	979	[13663]	GETGLOBAL	R18 K50 ; R18 := _T
	980	[13663]	LOADK    	R19 K264 ; R19 := "DEFAULT_SUIT_ROTATION"
	981	[13663]	GETUPVAL 	R20 U18 ; R20 := U18
	982	[13663]	LOADK    	R21 K265 ; R21 := "DefaultSuitRotationOffset"
	983	[13663]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	984	[13663]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	985	[13666]	GETGLOBAL	R18 K50 ; R18 := _T
	986	[13666]	LOADK    	R19 K266 ; R19 := "SENTINEL_DEFAULT_ROTATION"
	987	[13666]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	988	[13666]	LOADNIL  	R19 R19 ; R19 := nil
	989	[13666]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 997
	990	[13666]	JMP      	997 ; PC := 997
	991	[13667]	GETGLOBAL	R18 K50 ; R18 := _T
	992	[13667]	LOADK    	R19 K266 ; R19 := "SENTINEL_DEFAULT_ROTATION"
	993	[13667]	GETUPVAL 	R20 U18 ; R20 := U18
	994	[13667]	LOADK    	R21 K267 ; R21 := "DefaultSentinelRotationOffset"
	995	[13667]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	996	[13667]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	997	[13670]	GETGLOBAL	R18 K50 ; R18 := _T
	998	[13670]	LOADK    	R19 K268 ; R19 := "ARCHWING_DEFAULT_ROTATION"
	999	[13670]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1000	[13670]	LOADNIL  	R19 R19 ; R19 := nil
	1001	[13670]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 1022
	1002	[13670]	JMP      	1022 ; PC := 1022
	1003	[13671]	GETUPVAL 	R18 U2 ; R18 := U2
	1004	[13671]	LOADK    	R19 K269 ; R19 := true
	1005	[13671]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1006	[13671]	CALL     	R18 1 2 ; R18 := R18()
	1007	[13671]	TEST     	R18 0 ; if not R18 then PC := 1016
	1008	[13671]	JMP      	1016 ; PC := 1016
	1009	[13672]	GETGLOBAL	R18 K50 ; R18 := _T
	1010	[13672]	LOADK    	R19 K268 ; R19 := "ARCHWING_DEFAULT_ROTATION"
	1011	[13672]	GETUPVAL 	R20 U18 ; R20 := U18
	1012	[13672]	LOADK    	R21 K265 ; R21 := "DefaultSuitRotationOffset"
	1013	[13672]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1014	[13672]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	1015	[13672]	JMP      	1022 ; PC := 1022
	1016	[13674]	GETGLOBAL	R18 K50 ; R18 := _T
	1017	[13674]	LOADK    	R19 K268 ; R19 := "ARCHWING_DEFAULT_ROTATION"
	1018	[13674]	GETUPVAL 	R20 U18 ; R20 := U18
	1019	[13674]	LOADK    	R21 K270 ; R21 := "DefaultArchwingRotationOffset"
	1020	[13674]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1021	[13674]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	1022	[13678]	GETGLOBAL	R18 K50 ; R18 := _T
	1023	[13678]	LOADK    	R19 K271 ; R19 := "suitTable"
	1024	[13678]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1025	[13678]	LOADNIL  	R19 R19 ; R19 := nil
	1026	[13678]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 1032
	1027	[13678]	JMP      	1032 ; PC := 1032
	1028	[13680]	GETGLOBAL	R18 K50 ; R18 := _T
	1029	[13680]	LOADK    	R19 K271 ; R19 := "suitTable"
	1030	[13680]	NEWTABLE 	R20 0 0 ; R20 := {}
	1031	[13680]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	1032	[13683]	GETGLOBAL	R18 K50 ; R18 := _T
	1033	[13683]	LOADK    	R19 K271 ; R19 := "suitTable"
	1034	[13683]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1035	[13683]	LOADK    	R19 K272 ; R19 := "desiredRot"
	1036	[13683]	GETGLOBAL	R20 K50 ; R20 := _T
	1037	[13683]	LOADK    	R21 K264 ; R21 := "DEFAULT_SUIT_ROTATION"
	1038	[13683]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1039	[13683]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	1040	[13684]	GETGLOBAL	R18 K50 ; R18 := _T
	1041	[13684]	LOADK    	R19 K271 ; R19 := "suitTable"
	1042	[13684]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1043	[13684]	LOADK    	R19 K273 ; R19 := "lerpRot"
	1044	[13684]	GETGLOBAL	R20 K50 ; R20 := _T
	1045	[13684]	LOADK    	R21 K271 ; R21 := "suitTable"
	1046	[13684]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1047	[13684]	LOADK    	R21 K272 ; R21 := "desiredRot"
	1048	[13684]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1049	[13684]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	1050	[13685]	GETGLOBAL	R18 K50 ; R18 := _T
	1051	[13685]	LOADK    	R19 K271 ; R19 := "suitTable"
	1052	[13685]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1053	[13685]	LOADK    	R19 K274 ; R19 := "lerpHead"
	1054	[13685]	GETGLOBAL	R20 K275 ; R20 := 0x00046924
	1055	[13685]	CALL     	R20 1 2 ; R20 := R20()
	1056	[13685]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	1057	[13686]	GETGLOBAL	R18 K50 ; R18 := _T
	1058	[13686]	GETTABLE 	R18 R18 K223 ; R18 := R18["MenuSuitAvatar"]
	1059	[13686]	LOADK    	R20 K276 ; R20 := true
	1060	[13686]	SELF     	R18 R18 R20 ; R19 := R18; R18 := R18[R20]
	1061	[13686]	GETGLOBAL	R20 K253 ; R20 := 0x0469f296
	1062	[13686]	LOADK    	R21 K277 ; R21 := "GAME_C1_HEAD1"
	1063	[13686]	CALL     	R20 2 2 ; R20 := R20(R21)
	1064	[13686]	GETGLOBAL	R21 K275 ; R21 := 0x00046924
	1065	[13686]	CALL     	R21 1 0 ; R21,... := R21()
	1066	[13686]	CALL     	R18 0 1 ; R18(R19,...)
	1067	[13687]	GETGLOBAL	R18 K50 ; R18 := _T
	1068	[13687]	GETTABLE 	R18 R18 K223 ; R18 := R18["MenuSuitAvatar"]
	1069	[13687]	LOADK    	R20 K276 ; R20 := true
	1070	[13687]	SELF     	R18 R18 R20 ; R19 := R18; R18 := R18[R20]
	1071	[13687]	GETGLOBAL	R20 K253 ; R20 := 0x0469f296
	1072	[13687]	LOADK    	R21 K278 ; R21 := "GAME_C1_NECK2"
	1073	[13687]	CALL     	R20 2 2 ; R20 := R20(R21)
	1074	[13687]	GETGLOBAL	R21 K275 ; R21 := 0x00046924
	1075	[13687]	CALL     	R21 1 0 ; R21,... := R21()
	1076	[13687]	CALL     	R18 0 1 ; R18(R19,...)
	1077	[13689]	GETGLOBAL	R18 K50 ; R18 := _T
	1078	[13689]	LOADK    	R19 K279 ; R19 := "domeState"
	1079	[13689]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1080	[13689]	TEST     	R18 0 ; if not R18 then PC := 1089
	1081	[13689]	JMP      	1089 ; PC := 1089
	1082	[13689]	GETGLOBAL	R18 K50 ; R18 := _T
	1083	[13689]	LOADK    	R19 K279 ; R19 := "domeState"
	1084	[13689]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1085	[13689]	LOADK    	R19 K280 ; R19 := "closed"
	1086	[13689]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	1087	[13689]	TEST     	R18 1 ; if R18 then PC := 1108
	1088	[13689]	JMP      	1108 ; PC := 1108
	1089	[13689]	GETUPVAL 	R18 U1 ; R18 := U1
	1090	[13689]	GETUPVAL 	R19 U2 ; R19 := U2
	1091	[13689]	LOADK    	R20 K281 ; R20 := "UI_MODE_IN_SPACE_SHIP"
	1092	[13689]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	1093	[13689]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 1108
	1094	[13689]	JMP      	1108 ; PC := 1108
	1095	[13690]	GETUPVAL 	R18 U21 ; R18 := U21
	1096	[13690]	LOADK    	R19 := 1.000000
	1097	[13690]	CALL     	R18 2 2 ; R18 := R18(R19)
	1098	[13691]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	1099	[13691]	MOVE     	R20 R18 ; R20 := R18
	1100	[13691]	CALL     	R19 2 2 ; R19 := R19(R20)
	1101	[13691]	TEST     	R19 1 ; if R19 then PC := 1108
	1102	[13691]	JMP      	1108 ; PC := 1108
	1103	[13692]	SELF     	R19 R18 K252 ; R20 := R18; R19 := R18[0xb2532845]
	1104	[13692]	GETGLOBAL	R21 K253 ; R21 := 0x0469f296
	1105	[13692]	LOADK    	R22 K282 ; R22 := "StandUp"
	1106	[13692]	CALL     	R21 2 0 ; R21,... := R21(R22)
	1107	[13692]	CALL     	R19 0 1 ; R19(R20,...)
	1108	[13695]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	1109	[13695]	GETGLOBAL	R20 K50 ; R20 := _T
	1110	[13695]	LOADK    	R21 K283 ; R21 := "petCommands"
	1111	[13695]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1112	[13695]	CALL     	R19 2 2 ; R19 := R19(R20)
	1113	[13695]	TEST     	R19 1 ; if R19 then PC := 1128
	1114	[13695]	JMP      	1128 ; PC := 1128
	1115	[13696]	GETGLOBAL	R19 K50 ; R19 := _T
	1116	[13696]	LOADK    	R20 K283 ; R20 := "petCommands"
	1117	[13696]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	1118	[13696]	LOADK    	R20 K284 ; R20 := true
	1119	[13696]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	1120	[13696]	GETUPVAL 	R20 U11 ; R20 := U11
	1121	[13696]	LOADK    	R21 K285 ; R21 := true
	1122	[13696]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1123	[13696]	LOADK    	R21 K286 ; R21 := "KubrowSpawnControl"
	1124	[13696]	CALL     	R20 2 2 ; R20 := R20(R21)
	1125	[13696]	LOADNIL  	R21 R21 ; R21 := nil
	1126	[13696]	OP_LOADBOOL	R22 1 0 ; R22 := true
	1127	[13696]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	1128	[13699]	OP_LOADBOOL	R19 0 0 ; R19 := false
	1129	[13700]	GETGLOBAL	R20 K50 ; R20 := _T
	1130	[13700]	LOADK    	R21 K287 ; R21 := "loadoutInProgress"
	1131	[13700]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1132	[13700]	LOADNIL  	R21 R21 ; R21 := nil
	1133	[13700]	EQ       	1 R20 R21 ; if R20 == R21 then PC := 1138
	1134	[13700]	JMP      	1138 ; PC := 1138
	1135	[13703]	OP_LOADBOOL	R20 1 0 ; R20 := true
	1136	[13703]	SETUPVAL 	R20 U24 ; U24 := R20
	1137	[13704]	OP_LOADBOOL	R19 1 0 ; R19 := true
	1138	[13707]	GETUPVAL 	R20 U11 ; R20 := U11
	1139	[13707]	LOADK    	R21 K288 ; R21 := true
	1140	[13707]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	1141	[13707]	GETGLOBAL	R21 K289 ; R21 := 0x0032441c
	1142	[13707]	LOADK    	R22 K290 ; R22 := "UISound_GridOpen"
	1143	[13707]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	1144	[13707]	CALL     	R20 2 1 ; R20(R21)
	1145	[13709]	GETGLOBAL	R20 K15 ; R20 := 0x89326c93
	1146	[13709]	SELF     	R20 R20 K239 ; R21 := R20; R20 := R20[0xfb64e76c]
	1147	[13709]	CALL     	R20 2 2 ; R20 := R20(R21)
	1148	[13710]	GETGLOBAL	R21 K291 ; R21 := 0x83f4e77c
	1149	[13710]	LOADK    	R23 K292 ; R23 := true
	1150	[13710]	SELF     	R21 R21 R23 ; R22 := R21; R21 := R21[R23]
	1151	[13710]	CALL     	R21 2 2 ; R21 := R21(R22)
	1152	[13711]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	1153	[13711]	MOVE     	R23 R21 ; R23 := R21
	1154	[13711]	CALL     	R22 2 2 ; R22 := R22(R23)
	1155	[13711]	TEST     	R22 1 ; if R22 then PC := 1168
	1156	[13711]	JMP      	1168 ; PC := 1168
	1157	[13711]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	1158	[13711]	MOVE     	R23 R20 ; R23 := R20
	1159	[13711]	CALL     	R22 2 2 ; R22 := R22(R23)
	1160	[13711]	TEST     	R22 1 ; if R22 then PC := 1168
	1161	[13711]	JMP      	1168 ; PC := 1168
	1162	[13712]	LOADK    	R24 K293 ; R24 := true
	1163	[13712]	SELF     	R22 R21 R24 ; R23 := R21; R22 := R21[R24]
	1164	[13712]	MOVE     	R24 R20 ; R24 := R20
	1165	[13712]	GETGLOBAL	R25 K294 ; R25 := 0xf3a45924
	1166	[13712]	LOADNIL  	R26 R26 ; R26 := nil
	1167	[13712]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	1168	[13715]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1169	[13715]	LOADK    	R23 K296 ; R23 := true
	1170	[13715]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1171	[13715]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1172	[13715]	NEWTABLE 	R24 0 0 ; R24 := {}
	1173	[13715]	CALL     	R22 3 1 ; R22(R23,R24)
	1174	[13716]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1175	[13716]	LOADK    	R23 := 1.000000
	1176	[13716]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1177	[13716]	LOADK    	R23 K298 ; R23 := "mVisible"
	1178	[13716]	OP_LOADBOOL	R24 1 0 ; R24 := true
	1179	[13716]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1180	[13717]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1181	[13717]	LOADK    	R23 := 1.000000
	1182	[13717]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1183	[13717]	LOADK    	R23 K299 ; R23 := "mLabel"
	1184	[13717]	LOADK    	R24 K300 ; R24 := "/Lotus/Language/Menu/Exit"
	1185	[13717]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1186	[13718]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1187	[13718]	LOADK    	R23 := 1.000000
	1188	[13718]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1189	[13718]	LOADK    	R23 K301 ; R23 := "mCallback"
	1190	[13718]	CLOSURE  	R24 4 ; R24 := closure(Function #5)
	1191	[13718]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1192	[13719]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1193	[13719]	LOADK    	R23 := 1.000000
	1194	[13719]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1195	[13719]	LOADK    	R23 K302 ; R23 := "mCallout"
	1196	[13719]	LOADK    	R24 K303 ; R24 := "MENU_CANCEL"
	1197	[13719]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1198	[13721]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1199	[13721]	LOADK    	R23 K296 ; R23 := true
	1200	[13721]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1201	[13721]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1202	[13721]	NEWTABLE 	R24 0 0 ; R24 := {}
	1203	[13721]	CALL     	R22 3 1 ; R22(R23,R24)
	1204	[13722]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1205	[13722]	LOADK    	R23 := 2.000000
	1206	[13722]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1207	[13722]	LOADK    	R23 K298 ; R23 := "mVisible"
	1208	[13722]	OP_LOADBOOL	R24 0 0 ; R24 := false
	1209	[13722]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1210	[13723]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1211	[13723]	LOADK    	R23 := 2.000000
	1212	[13723]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1213	[13723]	LOADK    	R23 K299 ; R23 := "mLabel"
	1214	[13723]	SETTABLE 	R22 R23 K204 ; R22[R23] := ""
	1215	[13724]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1216	[13724]	LOADK    	R23 := 2.000000
	1217	[13724]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1218	[13724]	LOADK    	R23 K301 ; R23 := "mCallback"
	1219	[13724]	LOADNIL  	R24 R24 ; R24 := nil
	1220	[13724]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1221	[13725]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1222	[13725]	LOADK    	R23 := 2.000000
	1223	[13725]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1224	[13725]	LOADK    	R23 K302 ; R23 := "mCallout"
	1225	[13725]	LOADK    	R24 K304 ; R24 := "MENU_SELECT"
	1226	[13725]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1227	[13727]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1228	[13727]	LOADK    	R23 K296 ; R23 := true
	1229	[13727]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1230	[13727]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1231	[13727]	NEWTABLE 	R24 0 0 ; R24 := {}
	1232	[13727]	CALL     	R22 3 1 ; R22(R23,R24)
	1233	[13728]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1234	[13728]	LOADK    	R23 := 3.000000
	1235	[13728]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1236	[13728]	LOADK    	R23 K298 ; R23 := "mVisible"
	1237	[13728]	OP_LOADBOOL	R24 0 0 ; R24 := false
	1238	[13728]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1239	[13729]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1240	[13729]	LOADK    	R23 := 3.000000
	1241	[13729]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1242	[13729]	LOADK    	R23 K299 ; R23 := "mLabel"
	1243	[13729]	LOADK    	R24 K305 ; R24 := "/Lotus/Language/Menu/ItemSelection_Equip"
	1244	[13729]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1245	[13730]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1246	[13730]	LOADK    	R23 := 3.000000
	1247	[13730]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1248	[13730]	LOADK    	R23 K301 ; R23 := "mCallback"
	1249	[13732]	CLOSURE  	R24 5 ; R24 := closure(Function #6)
	1250	[13732]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1251	[13733]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1252	[13733]	LOADK    	R23 := 3.000000
	1253	[13733]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1254	[13733]	LOADK    	R23 K302 ; R23 := "mCallout"
	1255	[13733]	LOADK    	R24 K304 ; R24 := "MENU_SELECT"
	1256	[13733]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1257	[13735]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1258	[13735]	LOADK    	R23 K296 ; R23 := true
	1259	[13735]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1260	[13735]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1261	[13735]	NEWTABLE 	R24 0 0 ; R24 := {}
	1262	[13735]	CALL     	R22 3 1 ; R22(R23,R24)
	1263	[13736]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1264	[13736]	LOADK    	R23 := 4.000000
	1265	[13736]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1266	[13736]	LOADK    	R23 K298 ; R23 := "mVisible"
	1267	[13736]	OP_LOADBOOL	R24 0 0 ; R24 := false
	1268	[13736]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1269	[13737]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1270	[13737]	LOADK    	R23 := 4.000000
	1271	[13737]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1272	[13737]	LOADK    	R23 K299 ; R23 := "mLabel"
	1273	[13737]	LOADK    	R24 K306 ; R24 := "/Lotus/Language/Menu/Loadout_ResetColor"
	1274	[13737]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1275	[13738]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1276	[13738]	LOADK    	R23 := 4.000000
	1277	[13738]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1278	[13738]	LOADK    	R23 K301 ; R23 := "mCallback"
	1279	[13738]	GETUPVAL 	R24 U25 ; R24 := U25
	1280	[13738]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1281	[13739]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1282	[13739]	LOADK    	R23 := 4.000000
	1283	[13739]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1284	[13739]	LOADK    	R23 K302 ; R23 := "mCallout"
	1285	[13739]	LOADK    	R24 K307 ; R24 := "MENU_RTHUMB"
	1286	[13739]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1287	[13741]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1288	[13741]	LOADK    	R23 K296 ; R23 := true
	1289	[13741]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1290	[13741]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1291	[13741]	NEWTABLE 	R24 0 0 ; R24 := {}
	1292	[13741]	CALL     	R22 3 1 ; R22(R23,R24)
	1293	[13742]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1294	[13742]	LOADK    	R23 := 5.000000
	1295	[13742]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1296	[13742]	LOADK    	R23 K298 ; R23 := "mVisible"
	1297	[13742]	OP_LOADBOOL	R24 0 0 ; R24 := false
	1298	[13742]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1299	[13743]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1300	[13743]	LOADK    	R23 := 5.000000
	1301	[13743]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1302	[13743]	LOADK    	R23 K299 ; R23 := "mLabel"
	1303	[13743]	LOADK    	R24 K308 ; R24 := "/Lotus/Language/Menu/Loadout_Randomize"
	1304	[13743]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1305	[13744]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1306	[13744]	LOADK    	R23 := 5.000000
	1307	[13744]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1308	[13744]	LOADK    	R23 K301 ; R23 := "mCallback"
	1309	[13744]	CLOSURE  	R24 6 ; R24 := closure(Function #7)
	1310	[13744]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1311	[13745]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1312	[13745]	LOADK    	R23 := 5.000000
	1313	[13745]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1314	[13745]	LOADK    	R23 K302 ; R23 := "mCallout"
	1315	[13745]	LOADK    	R24 K309 ; R24 := "MENU_GENERIC2"
	1316	[13745]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1317	[13748]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1318	[13748]	LOADK    	R23 K296 ; R23 := true
	1319	[13748]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1320	[13748]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1321	[13748]	NEWTABLE 	R24 0 0 ; R24 := {}
	1322	[13748]	CALL     	R22 3 1 ; R22(R23,R24)
	1323	[13749]	GETGLOBAL	R22 K310 ; R22 := mButtonIndices
	1324	[13749]	LOADK    	R23 K311 ; R23 := "Mode"
	1325	[13749]	GETGLOBAL	R24 K297 ; R24 := mButtons
	1326	[13749]	LEN      	R24 R24 ; R24 := # R24
	1327	[13749]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1328	[13750]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1329	[13750]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1330	[13750]	LOADK    	R24 K311 ; R24 := "Mode"
	1331	[13750]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1332	[13750]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1333	[13750]	LOADK    	R23 K298 ; R23 := "mVisible"
	1334	[13750]	GETGLOBAL	R24 K0 ; R24 := 0x7b998233
	1335	[13750]	GETGLOBAL	R25 K1 ; R25 := 0x25d99d89
	1336	[13750]	CALL     	R24 2 2 ; R24 := R24(R25)
	1337	[13750]	TEST     	R24 1 ; if R24 then PC := 1353
	1338	[13750]	JMP      	1353 ; PC := 1353
	1339	[13750]	GETGLOBAL	R24 K1 ; R24 := 0x25d99d89
	1340	[13750]	LOADK    	R26 K312 ; R26 := true
	1341	[13750]	SELF     	R24 R24 R26 ; R25 := R24; R24 := R24[R26]
	1342	[13750]	GETUPVAL 	R26 U2 ; R26 := U2
	1343	[13750]	LOADK    	R27 K313 ; R27 := "SF_SOCIAL_MENU"
	1344	[13750]	GETTABLE 	R26 R26 R27 ; R26 := R26[R27]
	1345	[13750]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	1346	[13750]	TEST     	R24 0 ; if not R24 then PC := 1355
	1347	[13750]	JMP      	1355 ; PC := 1355
	1348	[13750]	GETGLOBAL	R24 K50 ; R24 := _T
	1349	[13750]	GETTABLE 	R24 R24 K215 ; R24 := R24["ArsenalPvPOnlyReturnConsole"]
	1350	[13750]	LOADNIL  	R25 R25 ; R25 := nil
	1351	[13750]	EQ       	1 R24 R25 ; if R24 == R25 then PC := 1354
	1352	[13750]	JMP      	1354 ; PC := 1354
	1353	[13750]	OP_LOADBOOL	R24 0 1 ; R24 := false; PC := 1354
	1354	[13750]	OP_LOADBOOL	R24 1 0 ; R24 := true
	1355	[13750]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1356	[13751]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1357	[13751]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1358	[13751]	LOADK    	R24 K311 ; R24 := "Mode"
	1359	[13751]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1360	[13751]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1361	[13751]	LOADK    	R23 K299 ; R23 := "mLabel"
	1362	[13751]	LOADK    	R24 K314 ; R24 := "/Lotus/Language/Game/MissionNameWithIcon_PVP"
	1363	[13751]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1364	[13752]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1365	[13752]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1366	[13752]	LOADK    	R24 K311 ; R24 := "Mode"
	1367	[13752]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1368	[13752]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1369	[13752]	LOADK    	R23 K301 ; R23 := "mCallback"
	1370	[13752]	GETUPVAL 	R24 U26 ; R24 := U26
	1371	[13752]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1372	[13753]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1373	[13753]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1374	[13753]	LOADK    	R24 K311 ; R24 := "Mode"
	1375	[13753]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1376	[13753]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1377	[13753]	LOADK    	R23 K302 ; R23 := "mCallout"
	1378	[13753]	LOADK    	R24 K315 ; R24 := "MENU_LTHUMB"
	1379	[13753]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1380	[13755]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1381	[13755]	LOADK    	R23 K296 ; R23 := true
	1382	[13755]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1383	[13755]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1384	[13755]	NEWTABLE 	R24 0 0 ; R24 := {}
	1385	[13755]	CALL     	R22 3 1 ; R22(R23,R24)
	1386	[13756]	GETGLOBAL	R22 K310 ; R22 := mButtonIndices
	1387	[13756]	LOADK    	R23 K316 ; R23 := "SuitAppearance"
	1388	[13756]	GETGLOBAL	R24 K297 ; R24 := mButtons
	1389	[13756]	LEN      	R24 R24 ; R24 := # R24
	1390	[13756]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1391	[13757]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1392	[13757]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1393	[13757]	LOADK    	R24 K316 ; R24 := "SuitAppearance"
	1394	[13757]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1395	[13757]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1396	[13757]	LOADK    	R23 K298 ; R23 := "mVisible"
	1397	[13757]	OP_LOADBOOL	R24 0 0 ; R24 := false
	1398	[13757]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1399	[13758]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1400	[13758]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1401	[13758]	LOADK    	R24 K316 ; R24 := "SuitAppearance"
	1402	[13758]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1403	[13758]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1404	[13758]	LOADK    	R23 K301 ; R23 := "mCallback"
	1405	[13758]	GETUPVAL 	R24 U15 ; R24 := U15
	1406	[13758]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1407	[13759]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1408	[13759]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1409	[13759]	LOADK    	R24 K316 ; R24 := "SuitAppearance"
	1410	[13759]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1411	[13759]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1412	[13759]	LOADK    	R23 K302 ; R23 := "mCallout"
	1413	[13759]	LOADK    	R24 K317 ; R24 := "MENU_RTRIGGER1"
	1414	[13759]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1415	[13761]	GETGLOBAL	R22 K295 ; R22 := 0x33bdd652
	1416	[13761]	LOADK    	R23 K296 ; R23 := true
	1417	[13761]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1418	[13761]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1419	[13761]	NEWTABLE 	R24 0 0 ; R24 := {}
	1420	[13761]	CALL     	R22 3 1 ; R22(R23,R24)
	1421	[13762]	GETGLOBAL	R22 K310 ; R22 := mButtonIndices
	1422	[13762]	LOADK    	R23 K318 ; R23 := "PvpTeam"
	1423	[13762]	GETGLOBAL	R24 K297 ; R24 := mButtons
	1424	[13762]	LEN      	R24 R24 ; R24 := # R24
	1425	[13762]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1426	[13763]	GETGLOBAL	R22 K297 ; R22 := mButtons
	1427	[13763]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1428	[13763]	LOADK    	R24 K318 ; R24 := "PvpTeam"
	1429	[13763]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1430	[13763]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	1431	[13763]	LOADK    	R23 K298 ; R23 := "mVisible"
	1432	[13763]	OP_LOADBOOL	R24 0 0 ; R24 := false
	1433	[13763]	SETTABLE 	R22 R23 R24 ; R22[R23] := R24
	1434	[13764]	GETGLOBAL	R22 K2 ; R22 := 0xae91e43b
	1435	[13764]	SELF     	R22 R22 K67 ; R23 := R22; R22 := R22[0x42b04007]
	1436	[13764]	GETGLOBAL	R24 K319 ; R24 := mPvpTeams
	1437	[13764]	LOADK    	R25 K320 ; R25 := "Types"
	1438	[13764]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1439	[13764]	GETGLOBAL	R25 K319 ; R25 := mPvpTeams
	1440	[13764]	LOADK    	R26 K321 ; R26 := "Current"
	1441	[13764]	GETTABLE 	R25 R25 R26 ; R25 := R25[R26]
	1442	[13764]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1443	[13764]	OP_LOADBOOL	R25 0 0 ; R25 := false
	1444	[13764]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	1445	[13765]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1446	[13765]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1447	[13765]	LOADK    	R25 K318 ; R25 := "PvpTeam"
	1448	[13765]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1449	[13765]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1450	[13765]	LOADK    	R24 K299 ; R24 := "mLabel"
	1451	[13765]	GETGLOBAL	R25 K2 ; R25 := 0xae91e43b
	1452	[13765]	SELF     	R25 R25 K67 ; R26 := R25; R25 := R25[0x42b04007]
	1453	[13765]	LOADK    	R27 K322 ; R27 := "/Lotus/Language/Menu/Loadout_Team"
	1454	[13765]	OP_LOADBOOL	R28 0 0 ; R28 := false
	1455	[13765]	NEWTABLE 	R29 0 1 ; R29 := {}
	1456	[13765]	LOADK    	R30 K323 ; R30 := "TEAM_NAME"
	1457	[13765]	SETTABLE 	R29 R30 R22 ; R29[R30] := R22
	1458	[13765]	CALL     	R25 5 2 ; R25 := R25(R26,R27,R28,R29)
	1459	[13765]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1460	[13766]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1461	[13766]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1462	[13766]	LOADK    	R25 K318 ; R25 := "PvpTeam"
	1463	[13766]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1464	[13766]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1465	[13766]	LOADK    	R24 K301 ; R24 := "mCallback"
	1466	[13766]	GETUPVAL 	R25 U27 ; R25 := U27
	1467	[13766]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1468	[13767]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1469	[13767]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1470	[13767]	LOADK    	R25 K318 ; R25 := "PvpTeam"
	1471	[13767]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1472	[13767]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1473	[13767]	LOADK    	R24 K302 ; R24 := "mCallout"
	1474	[13767]	LOADK    	R25 K315 ; R25 := "MENU_LTHUMB"
	1475	[13767]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1476	[13769]	GETGLOBAL	R23 K295 ; R23 := 0x33bdd652
	1477	[13769]	LOADK    	R24 K296 ; R24 := true
	1478	[13769]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1479	[13769]	GETGLOBAL	R24 K297 ; R24 := mButtons
	1480	[13769]	NEWTABLE 	R25 0 0 ; R25 := {}
	1481	[13769]	CALL     	R23 3 1 ; R23(R24,R25)
	1482	[13770]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1483	[13770]	LOADK    	R24 K324 ; R24 := "Rotate"
	1484	[13770]	GETGLOBAL	R25 K297 ; R25 := mButtons
	1485	[13770]	LEN      	R25 R25 ; R25 := # R25
	1486	[13770]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1487	[13771]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1488	[13771]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1489	[13771]	LOADK    	R25 K324 ; R25 := "Rotate"
	1490	[13771]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1491	[13771]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1492	[13771]	LOADK    	R24 K298 ; R24 := "mVisible"
	1493	[13771]	OP_LOADBOOL	R25 0 0 ; R25 := false
	1494	[13771]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1495	[13772]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1496	[13772]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1497	[13772]	LOADK    	R25 K324 ; R25 := "Rotate"
	1498	[13772]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1499	[13772]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1500	[13772]	LOADK    	R24 K299 ; R24 := "mLabel"
	1501	[13772]	LOADK    	R25 K325 ; R25 := "ROTATE"
	1502	[13772]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1503	[13773]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1504	[13773]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1505	[13773]	LOADK    	R25 K324 ; R25 := "Rotate"
	1506	[13773]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1507	[13773]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1508	[13773]	LOADK    	R24 K301 ; R24 := "mCallback"
	1509	[13773]	GETUPVAL 	R25 U28 ; R25 := U28
	1510	[13773]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1511	[13774]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1512	[13774]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1513	[13774]	LOADK    	R25 K324 ; R25 := "Rotate"
	1514	[13774]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1515	[13774]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1516	[13774]	LOADK    	R24 K302 ; R24 := "mCallout"
	1517	[13774]	LOADK    	R25 K317 ; R25 := "MENU_RTRIGGER1"
	1518	[13774]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1519	[13776]	GETGLOBAL	R23 K295 ; R23 := 0x33bdd652
	1520	[13776]	LOADK    	R24 K296 ; R24 := true
	1521	[13776]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1522	[13776]	GETGLOBAL	R24 K297 ; R24 := mButtons
	1523	[13776]	NEWTABLE 	R25 0 0 ; R25 := {}
	1524	[13776]	CALL     	R23 3 1 ; R23(R24,R25)
	1525	[13777]	GETGLOBAL	R23 K310 ; R23 := mButtonIndices
	1526	[13777]	LOADK    	R24 K326 ; R24 := "Hints"
	1527	[13777]	GETGLOBAL	R25 K297 ; R25 := mButtons
	1528	[13777]	LEN      	R25 R25 ; R25 := # R25
	1529	[13777]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1530	[13778]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1531	[13778]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1532	[13778]	LOADK    	R25 K326 ; R25 := "Hints"
	1533	[13778]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1534	[13778]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1535	[13778]	LOADK    	R24 K298 ; R24 := "mVisible"
	1536	[13778]	OP_LOADBOOL	R25 1 0 ; R25 := true
	1537	[13778]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1538	[13779]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1539	[13779]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1540	[13779]	LOADK    	R25 K326 ; R25 := "Hints"
	1541	[13779]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1542	[13779]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1543	[13779]	LOADK    	R24 K299 ; R24 := "mLabel"
	1544	[13779]	GETGLOBAL	R25 K2 ; R25 := 0xae91e43b
	1545	[13779]	SELF     	R25 R25 K67 ; R26 := R25; R25 := R25[0x42b04007]
	1546	[13779]	LOADK    	R27 K327 ; R27 := "<WARNING>"
	1547	[13779]	OP_LOADBOOL	R28 1 0 ; R28 := true
	1548	[13779]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	1549	[13779]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1550	[13780]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1551	[13780]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1552	[13780]	LOADK    	R25 K326 ; R25 := "Hints"
	1553	[13780]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1554	[13780]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1555	[13780]	LOADK    	R24 K328 ; R24 := "Tips"
	1556	[13780]	GETUPVAL 	R25 U29 ; R25 := U29
	1557	[13780]	LOADK    	R26 K329 ; R26 := true
	1558	[13780]	GETTABLE 	R25 R25 R26 ; R25 := R25[R26]
	1559	[13780]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	1560	[13780]	LOADK    	R27 K330 ; R27 := "/Lotus/Language/WarframeHints/Arsenal_"
	1561	[13780]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	1562	[13780]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1563	[13781]	GETGLOBAL	R23 K297 ; R23 := mButtons
	1564	[13781]	GETGLOBAL	R24 K310 ; R24 := mButtonIndices
	1565	[13781]	LOADK    	R25 K326 ; R25 := "Hints"
	1566	[13781]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	1567	[13781]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1568	[13781]	LOADK    	R24 K331 ; R24 := "Padding"
	1569	[13781]	LOADK    	R25 := -10.000000
	1570	[13781]	SETTABLE 	R23 R24 R25 ; R23[R24] := R25
	1571	[13783]	GETUPVAL 	R23 U30 ; R23 := U30
	1572	[13783]	CALL     	R23 1 1 ; R23()
	1573	[13785]	GETUPVAL 	R23 U31 ; R23 := U31
	1574	[13785]	CALL     	R23 1 1 ; R23()
	1575	[13786]	GETUPVAL 	R23 U32 ; R23 := U32
	1576	[13786]	CALL     	R23 1 1 ; R23()
	1577	[13787]	GETUPVAL 	R23 U33 ; R23 := U33
	1578	[13787]	CALL     	R23 1 1 ; R23()
	1579	[13788]	GETUPVAL 	R23 U34 ; R23 := U34
	1580	[13788]	CALL     	R23 1 1 ; R23()
	1581	[13789]	GETUPVAL 	R23 U35 ; R23 := U35
	1582	[13789]	CALL     	R23 1 1 ; R23()
	1583	[13790]	GETUPVAL 	R23 U36 ; R23 := U36
	1584	[13790]	CALL     	R23 1 1 ; R23()
	1585	[13791]	GETUPVAL 	R23 U37 ; R23 := U37
	1586	[13791]	CALL     	R23 1 1 ; R23()
	1587	[13792]	GETUPVAL 	R23 U38 ; R23 := U38
	1588	[13792]	CALL     	R23 1 1 ; R23()
	1589	[13794]	GETGLOBAL	R23 K17 ; R23 := 0x34291f5c
	1590	[13794]	LOADK    	R24 K332 ; R24 := true
	1591	[13794]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1592	[13794]	CALL     	R23 1 2 ; R23 := R23()
	1593	[13794]	TEST     	R23 0 ; if not R23 then PC := 1622
	1594	[13794]	JMP      	1622 ; PC := 1622
	1595	[13795]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1596	[13795]	LOADK    	R25 K333 ; R25 := true
	1597	[13795]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1598	[13795]	LOADK    	R25 K334 ; R25 := "MenuPanel.Right.Tf.text"
	1599	[13795]	LOADK    	R26 K335 ; R26 := "<MENU_RTHUMB>"
	1600	[13795]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	1601	[13796]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1602	[13796]	LOADK    	R25 K333 ; R25 := true
	1603	[13796]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1604	[13796]	LOADK    	R25 K336 ; R25 := "MenuPanel.Left.Tf.text"
	1605	[13796]	LOADK    	R26 K337 ; R26 := "<MENU_LTRIGGER2>"
	1606	[13796]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	1607	[13797]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1608	[13797]	LOADK    	R25 K338 ; R25 := true
	1609	[13797]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1610	[13797]	LOADK    	R25 K11 ; R25 := "MenuPanel.RightArrow"
	1611	[13797]	LOADK    	R26 := 11.000000
	1612	[13797]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1613	[13797]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1614	[13798]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1615	[13798]	LOADK    	R25 K338 ; R25 := true
	1616	[13798]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1617	[13798]	LOADK    	R25 K7 ; R25 := "MenuPanel.LeftArrow"
	1618	[13798]	LOADK    	R26 := 11.000000
	1619	[13798]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1620	[13798]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1621	[13798]	JMP      	1646 ; PC := 1646
	1622	[13800]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1623	[13800]	LOADK    	R25 K338 ; R25 := true
	1624	[13800]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1625	[13800]	LOADK    	R25 K339 ; R25 := "MenuPanel.Right"
	1626	[13800]	LOADK    	R26 := 11.000000
	1627	[13800]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1628	[13800]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1629	[13801]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1630	[13801]	LOADK    	R25 K338 ; R25 := true
	1631	[13801]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1632	[13801]	LOADK    	R25 K340 ; R25 := "MenuPanel.Left"
	1633	[13801]	LOADK    	R26 := 11.000000
	1634	[13801]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1635	[13801]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1636	[13802]	GETGLOBAL	R23 K341 ; R23 := 0x38f10e85
	1637	[13802]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	1638	[13802]	LOADK    	R25 K342 ; R25 := "MenuPanel.LeftArrow.swapDepths"
	1639	[13802]	LOADK    	R26 K343 ; R26 := 8001.000000
	1640	[13802]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	1641	[13803]	GETGLOBAL	R23 K341 ; R23 := 0x38f10e85
	1642	[13803]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	1643	[13803]	LOADK    	R25 K344 ; R25 := "MenuPanel.RightArrow.swapDepths"
	1644	[13803]	LOADK    	R26 K345 ; R26 := 8002.000000
	1645	[13803]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	1646	[13805]	GETUPVAL 	R23 U39 ; R23 := U39
	1647	[13805]	LOADK    	R24 K346 ; R24 := true
	1648	[13805]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1649	[13805]	CALL     	R23 1 1 ; R23()
	1650	[13807]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1651	[13807]	SELF     	R23 R23 K75 ; R24 := R23; R23 := R23[0x67bc869f]
	1652	[13807]	LOADK    	R25 K347 ; R25 := "ScrollBar"
	1653	[13807]	LOADK    	R26 := 10.000000
	1654	[13807]	LOADK    	R27 := 0.000000
	1655	[13807]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1656	[13809]	GETUPVAL 	R23 U2 ; R23 := U2
	1657	[13809]	LOADK    	R24 K348 ; R24 := true
	1658	[13809]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	1659	[13809]	OP_LOADBOOL	R24 1 0 ; R24 := true
	1660	[13809]	CALL     	R23 2 1 ; R23(R24)
	1661	[13811]	GETUPVAL 	R23 U40 ; R23 := U40
	1662	[13811]	OP_LOADBOOL	R24 0 0 ; R24 := false
	1663	[13811]	CALL     	R23 2 1 ; R23(R24)
	1664	[13813]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1665	[13813]	LOADK    	R25 K349 ; R25 := true
	1666	[13813]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1667	[13813]	LOADK    	R25 K350 ; R25 := "ItemGridBG"
	1668	[13813]	GETGLOBAL	R26 K289 ; R26 := 0x0032441c
	1669	[13813]	LOADK    	R27 K351 ; R27 := "UIMaterial_SmoothEdgeNoDepthTest"
	1670	[13813]	GETTABLE 	R26 R26 R27 ; R26 := R26[R27]
	1671	[13813]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	1672	[13814]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1673	[13814]	LOADK    	R25 K338 ; R25 := true
	1674	[13814]	SELF     	R23 R23 R25 ; R24 := R23; R23 := R23[R25]
	1675	[13814]	LOADK    	R25 K350 ; R25 := "ItemGridBG"
	1676	[13814]	LOADK    	R26 := 11.000000
	1677	[13814]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1678	[13814]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1679	[13816]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1680	[13816]	SELF     	R23 R23 K75 ; R24 := R23; R23 := R23[0x67bc869f]
	1681	[13816]	LOADK    	R25 K4 ; R25 := "_root"
	1682	[13816]	LOADK    	R26 := 10.000000
	1683	[13816]	LOADK    	R27 := 0.000000
	1684	[13816]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1685	[13817]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	1686	[13817]	SELF     	R23 R23 K75 ; R24 := R23; R23 := R23[0x67bc869f]
	1687	[13817]	LOADK    	R25 K4 ; R25 := "_root"
	1688	[13817]	LOADK    	R26 := 4.000000
	1689	[13817]	LOADK    	R27 := -10000.000000
	1690	[13817]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	1691	[13818]	GETGLOBAL	R23 K352 ; R23 := 0x25312c9b
	1692	[13818]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	1693	[13818]	LOADK    	R25 K4 ; R25 := "_root"
	1694	[13818]	LOADK    	R26 := 8.000000
	1695	[13818]	NEWTABLE 	R27 2 0 ; R27 := {}
	1696	[13818]	LOADK    	R28 := 10.000000
	1697	[13818]	LOADK    	R29 := 4.000000
	1698	[13818]	SETLIST  	R27 2 1 ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 2
	1699	[13818]	NEWTABLE 	R28 2 0 ; R28 := {}
	1700	[13818]	LOADK    	R29 := 100.000000
	1701	[13818]	LOADK    	R30 := 0.000000
	1702	[13818]	SETLIST  	R28 2 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
	1703	[13818]	LOADK    	R29 K353 ; R29 := 0.700000
	1704	[13818]	CALL     	R23 7 1 ; R23(R24,R25,R26,R27,R28,R29)
	1705	[13820]	LOADK    	R23 := 1.000000
	1706	[13820]	LOADK    	R24 := 4.000000
	1707	[13820]	LOADK    	R25 := 1.000000
	1708	[13820]	FORPREP  	R23 1718 ; R23 -= R25; PC := 1718
	1709	[13821]	GETGLOBAL	R27 K2 ; R27 := 0xae91e43b
	1710	[13821]	LOADK    	R29 K338 ; R29 := true
	1711	[13821]	SELF     	R27 R27 R29 ; R28 := R27; R27 := R27[R29]
	1712	[13821]	LOADK    	R29 K354 ; R29 := "Ability"
	1713	[13821]	MOVE     	R30 R26 ; R30 := R26
	1714	[13821]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	1715	[13821]	LOADK    	R30 := 11.000000
	1716	[13821]	OP_LOADBOOL	R31 0 0 ; R31 := false
	1717	[13821]	CALL     	R27 5 1 ; R27(R28,R29,R30,R31)
	1718	[13820]	FORLOOP  	R23 1709 ; R23 += R25; if R23 <= R24 then begin PC := 1709; R26 := R23 end
	1719	[13835]	CLOSURE  	R27 7 ; R27 := closure(Function #8)
	1720	[13835]	GETUPVAL 	R0 U12 ; R0 := U12
	1721	[13837]	MOVE     	R28 R27 ; R28 := R27
	1722	[13837]	LOADK    	R29 K175 ; R29 := "LinkBtn"
	1723	[13837]	LOADK    	R30 := 1.000000
	1724	[13837]	CALL     	R28 3 1 ; R28(R29,R30)
	1725	[13838]	MOVE     	R28 R27 ; R28 := R27
	1726	[13838]	LOADK    	R29 K177 ; R29 := "CapturaBtn"
	1727	[13838]	LOADK    	R30 := 2.000000
	1728	[13838]	CALL     	R28 3 1 ; R28(R29,R30)
	1729	[13839]	MOVE     	R28 R27 ; R28 := R27
	1730	[13839]	LOADK    	R29 K178 ; R29 := "ClipLinkBtn"
	1731	[13839]	LOADK    	R30 := 3.000000
	1732	[13839]	CALL     	R28 3 1 ; R28(R29,R30)
	1733	[13841]	GETGLOBAL	R28 K50 ; R28 := _T
	1734	[13841]	LOADK    	R29 K355 ; R29 := true
	1735	[13841]	GETTABLE 	R28 R28 R29 ; R28 := R28[R29]
	1736	[13841]	CALL     	R28 1 1 ; R28()
	1737	[13843]	GETGLOBAL	R28 K1 ; R28 := 0x25d99d89
	1738	[13843]	SELF     	R28 R28 K212 ; R29 := R28; R28 := R28[0x25a6e75e]
	1739	[13843]	CALL     	R28 2 2 ; R28 := R28(R29)
	1740	[13843]	LOADK    	R30 K356 ; R30 := true
	1741	[13843]	SELF     	R28 R28 R30 ; R29 := R28; R28 := R28[R30]
	1742	[13843]	CALL     	R28 2 2 ; R28 := R28(R29)
	1743	[13844]	GETGLOBAL	R29 K357 ; R29 := 0xc8802016
	1744	[13844]	MOVE     	R30 R28 ; R30 := R28
	1745	[13844]	CALL     	R29 2 4 ; R29,R30,R31 := R29(R30)
	1746	[13844]	JMP      	1759 ; PC := 1759
	1747	[13845]	LOADK    	R34 K358 ; R34 := "mItemType"
	1748	[13845]	GETTABLE 	R34 R33 R34 ; R34 := R33[R34]
	1749	[13845]	SELF     	R34 R34 K231 ; R35 := R34; R34 := R34[0xf2deaf69]
	1750	[13845]	GETGLOBAL	R36 K359 ; R36 := 0x8f270b0e
	1751	[13845]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	1752	[13845]	TEST     	R34 0 ; if not R34 then PC := 1759
	1753	[13845]	JMP      	1759 ; PC := 1759
	1754	[13846]	GETUPVAL 	R34 U18 ; R34 := U18
	1755	[13846]	LOADK    	R35 K360 ; R35 := "CanEquipHeavyWeapons"
	1756	[13846]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1757	[13846]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1758	[13847]	JMP      	1761 ; PC := 1761
	1759	[13844]	TFORLOOP 	R29 2 ; R32,R33 := R29(R30,R31); if R32 ~= nil then begin PC = 1747; R31 := R32 end
	1760	[13848]	JMP      	1747 ; PC := 1747
	1761	[13851]	GETUPVAL 	R34 U18 ; R34 := U18
	1762	[13851]	LOADK    	R35 K361 ; R35 := "CanEquipMech"
	1763	[13851]	GETGLOBAL	R36 K1 ; R36 := 0x25d99d89
	1764	[13851]	SELF     	R36 R36 K212 ; R37 := R36; R36 := R36[0x25a6e75e]
	1765	[13851]	CALL     	R36 2 2 ; R36 := R36(R37)
	1766	[13851]	LOADK    	R38 K362 ; R38 := true
	1767	[13851]	SELF     	R36 R36 R38 ; R37 := R36; R36 := R36[R38]
	1768	[13851]	CALL     	R36 2 2 ; R36 := R36(R37)
	1769	[13851]	LEN      	R36 R36 ; R36 := # R36
	1770	[13851]	LOADK    	R37 := 0.000000
	1771	[13851]	LT       	1 R37 R36 ; if R37 < R36 then PC := 1774
	1772	[13851]	JMP      	1774 ; PC := 1774
	1773	[13851]	OP_LOADBOOL	R36 0 1 ; R36 := false; PC := 1774
	1774	[13851]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1775	[13851]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1776	[13853]	GETGLOBAL	R34 K50 ; R34 := _T
	1777	[13853]	GETTABLE 	R34 R34 K215 ; R34 := R34["ArsenalPvPOnlyReturnConsole"]
	1778	[13853]	LOADNIL  	R35 R35 ; R35 := nil
	1779	[13853]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1798
	1780	[13853]	JMP      	1798 ; PC := 1798
	1781	[13853]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	1782	[13853]	GETGLOBAL	R35 K54 ; R35 := 0xbe190284
	1783	[13853]	CALL     	R34 2 2 ; R34 := R34(R35)
	1784	[13853]	TEST     	R34 1 ; if R34 then PC := 1803
	1785	[13853]	JMP      	1803 ; PC := 1803
	1786	[13853]	GETGLOBAL	R34 K54 ; R34 := 0xbe190284
	1787	[13853]	SELF     	R34 R34 K231 ; R35 := R34; R34 := R34[0xf2deaf69]
	1788	[13853]	GETGLOBAL	R36 K363 ; R36 := gLotusPhotoBoothGameRulesType
	1789	[13853]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	1790	[13853]	TEST     	R34 0 ; if not R34 then PC := 1803
	1791	[13853]	JMP      	1803 ; PC := 1803
	1792	[13853]	GETGLOBAL	R34 K54 ; R34 := 0xbe190284
	1793	[13853]	LOADK    	R36 K364 ; R36 := true
	1794	[13853]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1795	[13853]	CALL     	R34 2 2 ; R34 := R34(R35)
	1796	[13853]	TEST     	R34 0 ; if not R34 then PC := 1803
	1797	[13853]	JMP      	1803 ; PC := 1803
	1798	[13857]	GETGLOBAL	R34 K50 ; R34 := _T
	1799	[13857]	LOADK    	R35 K365 ; R35 := "ArsenalState"
	1800	[13857]	LOADK    	R36 := 2.000000
	1801	[13857]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1802	[13857]	JMP      	1865 ; PC := 1865
	1803	[13858]	GETGLOBAL	R34 K50 ; R34 := _T
	1804	[13858]	LOADK    	R35 K365 ; R35 := "ArsenalState"
	1805	[13858]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1806	[13858]	LOADNIL  	R35 R35 ; R35 := nil
	1807	[13858]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1814
	1808	[13858]	JMP      	1814 ; PC := 1814
	1809	[13859]	GETGLOBAL	R34 K50 ; R34 := _T
	1810	[13859]	LOADK    	R35 K365 ; R35 := "ArsenalState"
	1811	[13859]	LOADK    	R36 := 1.000000
	1812	[13859]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1813	[13859]	JMP      	1865 ; PC := 1865
	1814	[13861]	GETGLOBAL	R34 K50 ; R34 := _T
	1815	[13861]	LOADK    	R35 K365 ; R35 := "ArsenalState"
	1816	[13861]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1817	[13861]	LOADK    	R35 := 3.000000
	1818	[13861]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1833
	1819	[13861]	JMP      	1833 ; PC := 1833
	1820	[13862]	GETGLOBAL	R34 K366 ; R34 := mLists
	1821	[13862]	LOADK    	R35 K367 ; R35 := "mLoadOutCategories"
	1822	[13862]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1823	[13862]	LOADK    	R35 K368 ; R35 := "mState"
	1824	[13862]	GETGLOBAL	R36 K366 ; R36 := mLists
	1825	[13862]	LOADK    	R37 K367 ; R37 := "mLoadOutCategories"
	1826	[13862]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1827	[13862]	LOADK    	R37 K369 ; R37 := "mStates"
	1828	[13862]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1829	[13862]	LOADK    	R37 K370 ; R37 := "VEHICLES"
	1830	[13862]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1831	[13862]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1832	[13862]	JMP      	1865 ; PC := 1865
	1833	[13863]	TEST     	R19 0 ; if not R19 then PC := 1865
	1834	[13863]	JMP      	1865 ; PC := 1865
	1835	[13863]	GETGLOBAL	R34 K50 ; R34 := _T
	1836	[13863]	LOADK    	R35 K365 ; R35 := "ArsenalState"
	1837	[13863]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1838	[13863]	LOADK    	R35 := 1.000000
	1839	[13863]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1865
	1840	[13863]	JMP      	1865 ; PC := 1865
	1841	[13863]	GETGLOBAL	R34 K50 ; R34 := _T
	1842	[13863]	LOADK    	R35 K371 ; R35 := "upgradeItemSlot"
	1843	[13863]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1844	[13863]	LOADNIL  	R35 R35 ; R35 := nil
	1845	[13863]	EQ       	1 R34 R35 ; if R34 == R35 then PC := 1865
	1846	[13863]	JMP      	1865 ; PC := 1865
	1847	[13863]	GETGLOBAL	R34 K50 ; R34 := _T
	1848	[13863]	LOADK    	R35 K372 ; R35 := "upgradeItemLot"
	1849	[13863]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1850	[13863]	LOADK    	R35 := 1.000000
	1851	[13863]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1865
	1852	[13863]	JMP      	1865 ; PC := 1865
	1853	[13865]	GETGLOBAL	R34 K366 ; R34 := mLists
	1854	[13865]	LOADK    	R35 K367 ; R35 := "mLoadOutCategories"
	1855	[13865]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1856	[13865]	LOADK    	R35 K368 ; R35 := "mState"
	1857	[13865]	GETGLOBAL	R36 K366 ; R36 := mLists
	1858	[13865]	LOADK    	R37 K367 ; R37 := "mLoadOutCategories"
	1859	[13865]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1860	[13865]	LOADK    	R37 K369 ; R37 := "mStates"
	1861	[13865]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1862	[13865]	LOADK    	R37 K373 ; R37 := "COMPANION"
	1863	[13865]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1864	[13865]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1865	[13869]	GETUPVAL 	R34 U39 ; R34 := U39
	1866	[13869]	LOADK    	R35 K374 ; R35 := true
	1867	[13869]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1868	[13869]	GETGLOBAL	R35 K50 ; R35 := _T
	1869	[13869]	LOADK    	R36 K365 ; R36 := "ArsenalState"
	1870	[13869]	GETTABLE 	R35 R35 R36 ; R35 := R35[R36]
	1871	[13869]	CALL     	R34 2 1 ; R34(R35)
	1872	[13871]	GETGLOBAL	R34 K194 ; R34 := mTimerTable
	1873	[13871]	LOADK    	R35 K375 ; R35 := "mRedrawLoadOutTimerId"
	1874	[13871]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1875	[13871]	LOADNIL  	R35 R35 ; R35 := nil
	1876	[13871]	EQ       	1 R34 R35 ; if R34 == R35 then PC := 1886
	1877	[13871]	JMP      	1886 ; PC := 1886
	1878	[13872]	GETGLOBAL	R34 K194 ; R34 := mTimerTable
	1879	[13872]	GETTABLE 	R34 R34 K195 ; R34 := R34["mTimerMgr"]
	1880	[13872]	LOADK    	R36 K376 ; R36 := true
	1881	[13872]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1882	[13872]	GETGLOBAL	R36 K194 ; R36 := mTimerTable
	1883	[13872]	LOADK    	R37 K375 ; R37 := "mRedrawLoadOutTimerId"
	1884	[13872]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1885	[13872]	CALL     	R34 3 1 ; R34(R35,R36)
	1886	[13875]	GETUPVAL 	R34 U41 ; R34 := U41
	1887	[13875]	CALL     	R34 1 1 ; R34()
	1888	[13877]	GETGLOBAL	R34 K50 ; R34 := _T
	1889	[13877]	LOADK    	R35 K377 ; R35 := "ForegroundMovie"
	1890	[13877]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1891	[13877]	TEST     	R34 0 ; if not R34 then PC := 1905
	1892	[13877]	JMP      	1905 ; PC := 1905
	1893	[13878]	GETGLOBAL	R34 K50 ; R34 := _T
	1894	[13878]	LOADK    	R35 K377 ; R35 := "ForegroundMovie"
	1895	[13878]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1896	[13878]	LOADK    	R36 K257 ; R36 := true
	1897	[13878]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1898	[13878]	LOADK    	R36 K378 ; R36 := "TogglePlayTypeDropDown"
	1899	[13878]	LOADK    	R37 K379 ; R37 := "false"
	1900	[13878]	CALL     	R34 4 1 ; R34(R35,R36,R37)
	1901	[13879]	GETGLOBAL	R34 K50 ; R34 := _T
	1902	[13879]	LOADK    	R35 K380 ; R35 := "ForceHideLobbyStatusMessage"
	1903	[13879]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1904	[13879]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1905	[13882]	GETUPVAL 	R34 U2 ; R34 := U2
	1906	[13882]	LOADK    	R35 K269 ; R35 := true
	1907	[13882]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1908	[13882]	CALL     	R34 1 2 ; R34 := R34()
	1909	[13882]	TEST     	R34 0 ; if not R34 then PC := 1915
	1910	[13882]	JMP      	1915 ; PC := 1915
	1911	[13883]	GETGLOBAL	R34 K50 ; R34 := _T
	1912	[13883]	LOADK    	R35 K381 ; R35 := "HubArsenalOpen"
	1913	[13883]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1914	[13883]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1915	[13886]	GETGLOBAL	R34 K15 ; R34 := 0x89326c93
	1916	[13886]	LOADK    	R36 K382 ; R36 := true
	1917	[13886]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1918	[13886]	CALL     	R34 2 2 ; R34 := R34(R35)
	1919	[13886]	LOADK    	R35 K383 ; R35 := "postProcess"
	1920	[13886]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1921	[13887]	LOADK    	R35 K384 ; R35 := "focalTint"
	1922	[13887]	GETTABLE 	R35 R34 R35 ; R35 := R34[R35]
	1923	[13887]	LOADK    	R36 K385 ; R36 := "alpha"
	1924	[13887]	LOADK    	R37 := 0.000000
	1925	[13887]	SETTABLE 	R35 R36 R37 ; R35[R36] := R37
	1926	[13888]	GETGLOBAL	R35 K15 ; R35 := 0x89326c93
	1927	[13888]	LOADK    	R37 K382 ; R37 := true
	1928	[13888]	SELF     	R35 R35 R37 ; R36 := R35; R35 := R35[R37]
	1929	[13888]	CALL     	R35 2 2 ; R35 := R35(R36)
	1930	[13888]	LOADK    	R37 K386 ; R37 := true
	1931	[13888]	SELF     	R35 R35 R37 ; R36 := R35; R35 := R35[R37]
	1932	[13888]	LOADK    	R37 := 0.000000
	1933	[13888]	CALL     	R35 3 1 ; R35(R36,R37)
	1934	[13889]	GETGLOBAL	R35 K50 ; R35 := _T
	1935	[13889]	LOADK    	R36 K387 ; R36 := "ArsenalOpen"
	1936	[13889]	OP_LOADBOOL	R37 1 0 ; R37 := true
	1937	[13889]	SETTABLE 	R35 R36 R37 ; R35[R36] := R37
	1938	[13890]	GETUPVAL 	R35 U2 ; R35 := U2
	1939	[13890]	LOADK    	R36 K388 ; R36 := true
	1940	[13890]	GETTABLE 	R35 R35 R36 ; R35 := R35[R36]
	1941	[13890]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1942	[13890]	CALL     	R35 2 1 ; R35(R36)
	1943	[13892]	GETUPVAL 	R35 U42 ; R35 := U42
	1944	[13892]	LOADK    	R36 K389 ; R36 := "MAIN"
	1945	[13892]	CALL     	R35 2 1 ; R35(R36)
	1946	[13894]	GETUPVAL 	R35 U43 ; R35 := U43
	1947	[13894]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1948	[13894]	CALL     	R35 2 1 ; R35(R36)
	1949	[13896]	GETGLOBAL	R35 K0 ; R35 := 0x7b998233
	1950	[13896]	GETGLOBAL	R36 K54 ; R36 := 0xbe190284
	1951	[13896]	CALL     	R35 2 2 ; R35 := R35(R36)
	1952	[13896]	TEST     	R35 1 ; if R35 then PC := 1970
	1953	[13896]	JMP      	1970 ; PC := 1970
	1954	[13896]	GETGLOBAL	R35 K54 ; R35 := 0xbe190284
	1955	[13896]	SELF     	R35 R35 K231 ; R36 := R35; R35 := R35[0xf2deaf69]
	1956	[13896]	GETGLOBAL	R37 K390 ; R37 := gLotusSandBoxGameRulesType
	1957	[13896]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	1958	[13896]	TEST     	R35 1 ; if R35 then PC := 1970
	1959	[13896]	JMP      	1970 ; PC := 1970
	1960	[13896]	GETGLOBAL	R35 K15 ; R35 := 0x89326c93
	1961	[13896]	LOADK    	R37 K391 ; R37 := true
	1962	[13896]	SELF     	R35 R35 R37 ; R36 := R35; R35 := R35[R37]
	1963	[13896]	CALL     	R35 2 2 ; R35 := R35(R36)
	1964	[13896]	LOADK    	R37 K392 ; R37 := true
	1965	[13896]	SELF     	R35 R35 R37 ; R36 := R35; R35 := R35[R37]
	1966	[13896]	CALL     	R35 2 2 ; R35 := R35(R36)
	1967	[13896]	LOADK    	R36 K393 ; R36 := "/Lotus/Levels/Tenno/SimulacrumEnemySpawnerB.level"
	1968	[13896]	EQ       	1 R35 R36 ; if R35 == R36 then PC := 1971
	1969	[13896]	JMP      	1971 ; PC := 1971
	1970	[13896]	OP_LOADBOOL	R35 0 1 ; R35 := false; PC := 1971
	1971	[13896]	OP_LOADBOOL	R35 1 0 ; R35 := true
	1972	[13896]	SETUPVAL 	R35 U44 ; U44 := R35
	1973	[13898]	GETGLOBAL	R35 K171 ; R35 := 0x2d0fad09
	1974	[13898]	LOADK    	R36 K394 ; R36 := "Lotus.Scripts.Libs.StoryLib"
	1975	[13898]	CALL     	R35 2 2 ; R35 := R35(R36)
	1976	[13899]	LOADK    	R36 K395 ; R36 := true
	1977	[13899]	GETTABLE 	R36 R35 R36 ; R36 := R35[R36]
	1978	[13899]	GETGLOBAL	R37 K396 ; R37 := 0x2d3d0773
	1979	[13899]	OP_LOADBOOL	R38 0 0 ; R38 := false
	1980	[13899]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	1981	[13900]	LOADK    	R37 K395 ; R37 := true
	1982	[13900]	GETTABLE 	R37 R35 R37 ; R37 := R35[R37]
	1983	[13900]	GETGLOBAL	R38 K397 ; R38 := 0xc1b70f65
	1984	[13900]	OP_LOADBOOL	R39 0 0 ; R39 := false
	1985	[13900]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	1986	[13901]	GETUPVAL 	R38 U45 ; R38 := U45
	1987	[13901]	LOADK    	R39 K398 ; R39 := "UmbraUnlocked"
	1988	[13901]	GETGLOBAL	R40 K50 ; R40 := _T
	1989	[13901]	LOADK    	R41 K399 ; R41 := "Arsenal_ForceUmbraUnlock"
	1990	[13901]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	1991	[13901]	TEST     	R40 1 ; if R40 then PC := 1994
	1992	[13901]	JMP      	1994 ; PC := 1994
	1993	[13901]	MOVE     	R40 R36 ; R40 := R36
	1994	[13901]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	1995	[13902]	GETUPVAL 	R38 U45 ; R38 := U45
	1996	[13902]	LOADK    	R39 K400 ; R39 := "UmbraMeleeUnlocked"
	1997	[13902]	GETGLOBAL	R40 K50 ; R40 := _T
	1998	[13902]	LOADK    	R41 K401 ; R41 := "Arsenal_ForceUmbraSwordUnlock"
	1999	[13902]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	2000	[13902]	TEST     	R40 1 ; if R40 then PC := 2003
	2001	[13902]	JMP      	2003 ; PC := 2003
	2002	[13902]	MOVE     	R40 R36 ; R40 := R36
	2003	[13902]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	2004	[13903]	GETUPVAL 	R38 U45 ; R38 := U45
	2005	[13903]	LOADK    	R39 K402 ; R39 := "ArchwingUnlocked"
	2006	[13903]	SETTABLE 	R38 R39 R37 ; R38[R39] := R37
	2007	[13904]	GETUPVAL 	R38 U45 ; R38 := U45
	2008	[13904]	LOADK    	R39 K403 ; R39 := "NewWarCompleted"
	2009	[13904]	GETUPVAL 	R40 U2 ; R40 := U2
	2010	[13904]	LOADK    	R41 K404 ; R41 := true
	2011	[13904]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	2012	[13904]	CALL     	R40 1 2 ; R40 := R40()
	2013	[13904]	TEST     	R40 1 ; if R40 then PC := 2016
	2014	[13904]	JMP      	2016 ; PC := 2016
	2015	[13904]	OP_LOADBOOL	R40 0 0 ; R40 := false
	2016	[13904]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	2017	[13906]	OP_LOADBOOL	R38 1 0 ; R38 := true
	2018	[13906]	SETGLOBALHASH	R38 K405 ; mInitialized := R38
	2019	[13908]	GETUPVAL 	R38 U46 ; R38 := U46
	2020	[13908]	CALL     	R38 1 2 ; R38 := R38()
	2021	[13908]	TEST     	R38 1 ; if R38 then PC := 2026
	2022	[13908]	JMP      	2026 ; PC := 2026
	2023	[13909]	GETGLOBAL	R38 K50 ; R38 := _T
	2024	[13909]	LOADK    	R39 K406 ; R39 := "previousConsoleTag"
	2025	[13909]	SETTABLE 	R38 R39 K43 ; R38[R39] := "Arsenal"
	2026	[13912]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	2027	[13912]	GETGLOBAL	R39 K50 ; R39 := _T
	2028	[13912]	LOADK    	R40 K407 ; R40 := "PodState"
	2029	[13912]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	2030	[13912]	CALL     	R38 2 2 ; R38 := R38(R39)
	2031	[13912]	TEST     	R38 1 ; if R38 then PC := 2065
	2032	[13912]	JMP      	2065 ; PC := 2065
	2033	[13912]	GETGLOBAL	R38 K50 ; R38 := _T
	2034	[13912]	LOADK    	R39 K407 ; R39 := "PodState"
	2035	[13912]	GETTABLE 	R38 R38 R39 ; R38 := R38[R39]
	2036	[13912]	LOADK    	R39 K408 ; R39 := "Status"
	2037	[13912]	GETTABLE 	R38 R38 R39 ; R38 := R38[R39]
	2038	[13912]	LOADK    	R39 := 0.000000
	2039	[13912]	EQ       	1 R38 R39 ; if R38 == R39 then PC := 2050
	2040	[13912]	JMP      	2050 ; PC := 2050
	2041	[13912]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	2042	[13912]	GETGLOBAL	R39 K50 ; R39 := _T
	2043	[13912]	LOADK    	R40 K407 ; R40 := "PodState"
	2044	[13912]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	2045	[13912]	LOADK    	R40 K408 ; R40 := "Status"
	2046	[13912]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	2047	[13912]	CALL     	R38 2 2 ; R38 := R38(R39)
	2048	[13912]	TEST     	R38 0 ; if not R38 then PC := 2065
	2049	[13912]	JMP      	2065 ; PC := 2065
	2050	[13912]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	2051	[13912]	GETGLOBAL	R39 K50 ; R39 := _T
	2052	[13912]	LOADK    	R40 K409 ; R40 := "BackgroundMovie"
	2053	[13912]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	2054	[13912]	CALL     	R38 2 2 ; R38 := R38(R39)
	2055	[13912]	TEST     	R38 1 ; if R38 then PC := 2065
	2056	[13912]	JMP      	2065 ; PC := 2065
	2057	[13913]	GETGLOBAL	R38 K50 ; R38 := _T
	2058	[13913]	LOADK    	R39 K409 ; R39 := "BackgroundMovie"
	2059	[13913]	GETTABLE 	R38 R38 R39 ; R38 := R38[R39]
	2060	[13913]	LOADK    	R40 K257 ; R40 := true
	2061	[13913]	SELF     	R38 R38 R40 ; R39 := R38; R38 := R38[R40]
	2062	[13913]	LOADK    	R40 K410 ; R40 := "OpenPod"
	2063	[13913]	LOADK    	R41 K204 ; R41 := ""
	2064	[13913]	CALL     	R38 4 1 ; R38(R39,R40,R41)
	2065	[13915]	RETURN   	R0 1 ; return 

function #209 <?:13917,13919> (7 instructions, 28 bytes at 000002111D0753A0)
1 param, 6 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[13918]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[13918]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	3	[13918]	LOADK    	R3 K2 ; R3 := "_root"
	4	[13918]	LOADK    	R4 := 1.000000
	5	[13918]	LOADK    	R5 := 0.000000
	6	[13918]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[13919]	RETURN   	R0 1 ; return 

function #210 <?:13921,13923> (3 instructions, 12 bytes at 000002111D0754D0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[13922]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[13922]	CALL     	R0 1 1 ; R0()
	3	[13923]	RETURN   	R0 1 ; return 

function #211 <?:13925,13940> (46 instructions, 184 bytes at 000002111D0755A0)
1 param, 4 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[13926]	OP_LOADBOOL	R1 1 0 ; R1 := true
	2	[13926]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[13928]	GETGLOBAL	R1 K1 ; R1 := _T
	4	[13928]	GETTABLE 	R1 R1 K2 ; R1 := R1["loadoutInProgress"]
	5	[13928]	TEST     	R1 1 ; if R1 then PC := 25
	6	[13928]	JMP      	25 ; PC := 25
	7	[13928]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[13928]	GETGLOBAL	R2 K4 ; R2 := 0x89326c93
	9	[13928]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[13928]	TEST     	R1 1 ; if R1 then PC := 25
	11	[13928]	JMP      	25 ; PC := 25
	12	[13928]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	13	[13928]	GETGLOBAL	R2 K4 ; R2 := 0x89326c93
	14	[13928]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x7c1a0374]
	15	[13928]	CALL     	R2 2 0 ; R2,... := R2(R3)
	16	[13928]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	17	[13928]	TEST     	R1 1 ; if R1 then PC := 25
	18	[13928]	JMP      	25 ; PC := 25
	19	[13929]	GETGLOBAL	R1 K4 ; R1 := 0x89326c93
	20	[13929]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x7c1a0374]
	21	[13929]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[13929]	GETTABLE 	R1 R1 K6 ; R1 := R1["postProcess"]
	23	[13929]	GETTABLE 	R1 R1 K7 ; R1 := R1["focalTint"]
	24	[13929]	SETTABLE 	R1 K8 K9 ; R1["alpha"] := 255.000000
	25	[13934]	GETGLOBAL	R1 K1 ; R1 := _T
	26	[13934]	GETTABLE 	R1 R1 K10 ; R1 := R1["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
	27	[13934]	EQ       	1 R1 K11 ; if R1 == nil then PC := 33
	28	[13934]	JMP      	33 ; PC := 33
	29	[13934]	GETGLOBAL	R1 K1 ; R1 := _T
	30	[13934]	GETTABLE 	R1 R1 K10 ; R1 := R1["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
	31	[13934]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 41
	32	[13934]	JMP      	41 ; PC := 41
	33	[13935]	GETGLOBAL	R1 K1 ; R1 := _T
	34	[13935]	GETTABLE 	R1 R1 K12 ; R1 := R1["SCREEN_EXIT_REASON_FORCE_CLOSE"]
	35	[13935]	EQ       	1 R1 K11 ; if R1 == nil then PC := 44
	36	[13935]	JMP      	44 ; PC := 44
	37	[13935]	GETGLOBAL	R1 K1 ; R1 := _T
	38	[13935]	GETTABLE 	R1 R1 K12 ; R1 := R1["SCREEN_EXIT_REASON_FORCE_CLOSE"]
	39	[13935]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 44
	40	[13935]	JMP      	44 ; PC := 44
	41	[13936]	GETUPVAL 	R1 U0 ; R1 := U0
	42	[13936]	CALL     	R1 1 1 ; R1()
	43	[13936]	JMP      	46 ; PC := 46
	44	[13938]	GETUPVAL 	R1 U1 ; R1 := U1
	45	[13938]	CALL     	R1 1 1 ; R1()
	46	[13940]	RETURN   	R0 1 ; return 

function #212 <?:13942,13944> (3 instructions, 12 bytes at 000002111D0758B0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[13943]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[13943]	CALL     	R0 1 1 ; R0()
	3	[13944]	RETURN   	R0 1 ; return 

function #213 <?:13946,13956> (32 instructions, 128 bytes at 000002111D075980)
0 params, 3 slots, 5 upvalues, 0 locals, 6 constants, 0 functions
	1	[13947]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[13947]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[13947]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[13947]	TEST     	R0 1 ; if R0 then PC := 13
	5	[13947]	JMP      	13 ; PC := 13
	6	[13947]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[13947]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x4ae54c32]
	8	[13947]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[13947]	GETTABLE 	R2 R2 K3 ; R2 := R2["SF_MODS"]
	10	[13947]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	11	[13947]	TEST     	R0 1 ; if R0 then PC := 15
	12	[13947]	JMP      	15 ; PC := 15
	13	[13948]	OP_LOADBOOL	R0 0 0 ; R0 := false
	14	[13948]	RETURN   	R0 2 ; return R0 
	15	[13951]	GETUPVAL 	R0 U1 ; R0 := U1
	16	[13951]	CALL     	R0 1 2 ; R0 := R0()
	17	[13951]	TEST     	R0 1 ; if R0 then PC := 30
	18	[13951]	JMP      	30 ; PC := 30
	19	[13951]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[13951]	GETUPVAL 	R1 U3 ; R1 := U3
	21	[13951]	GETTABLE 	R1 R1 K4 ; R1 := R1["SELECTING_PART"]
	22	[13951]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 30
	23	[13951]	JMP      	30 ; PC := 30
	24	[13951]	GETUPVAL 	R0 U4 ; R0 := U4
	25	[13951]	GETTABLE 	R0 R0 K5 ; R0 := R0["EquipmentChangesBlocked"]
	26	[13951]	TEST     	R0 1 ; if R0 then PC := 30
	27	[13951]	JMP      	30 ; PC := 30
	28	[13952]	OP_LOADBOOL	R0 1 0 ; R0 := true
	29	[13952]	RETURN   	R0 2 ; return R0 
	30	[13955]	OP_LOADBOOL	R0 0 0 ; R0 := false
	31	[13955]	RETURN   	R0 2 ; return R0 
	32	[13956]	RETURN   	R0 1 ; return 

function #214 <?:13958,14056> (258 instructions, 1032 bytes at 000002111D075BA0)
3 params, 12 slots, 5 upvalues, 0 locals, 72 constants, 0 functions
	1	[13959]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[13959]	CALL     	R3 1 2 ; R3 := R3()
	3	[13959]	TEST     	R3 1 ; if R3 then PC := 7
	4	[13959]	JMP      	7 ; PC := 7
	5	[13960]	OP_LOADBOOL	R3 0 0 ; R3 := false
	6	[13960]	RETURN   	R3 2 ; return R3 
	7	[13963]	GETUPVAL 	R3 U1 ; R3 := U1
	8	[13963]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x659d451f]
	9	[13963]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	10	[13963]	GETTABLE 	R4 R4 K2 ; R4 := R4["UISound_Select"]
	11	[13963]	CALL     	R3 2 1 ; R3(R4)
	12	[13964]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[13964]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x659d451f]
	14	[13964]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	15	[13964]	GETTABLE 	R4 R4 K3 ; R4 := R4["UISound_DialogOpen"]
	16	[13964]	CALL     	R3 2 1 ; R3(R4)
	17	[13965]	GETGLOBAL	R3 K4 ; R3 := mLists
	18	[13965]	GETTABLE 	R3 R3 K5 ; R3 := R3["mLoadOutList"]
	19	[13965]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xca30dfb6]
	20	[13965]	GETGLOBAL	R5 K7 ; R5 := 0x03f57322
	21	[13965]	MOVE     	R6 R0 ; R6 := R0
	22	[13965]	CALL     	R5 2 0 ; R5,... := R5(R6)
	23	[13965]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	24	[13966]	EQ       	1 R3 K8 ; if R3 == nil then PC := 241
	25	[13966]	JMP      	241 ; PC := 241
	26	[13967]	GETGLOBAL	R4 K9 ; R4 := _T
	27	[13967]	GETTABLE 	R5 R3 K11 ; R5 := R3["StoreItemId"]
	28	[13967]	SETTABLE 	R4 K10 R5 ; R4["upgradeItemCategory"] := R5
	29	[13968]	GETGLOBAL	R4 K9 ; R4 := _T
	30	[13968]	GETTABLE 	R5 R3 K13 ; R5 := R3["LoadOutType"]
	31	[13968]	SETTABLE 	R4 K12 R5 ; R4["upgradeItemLot"] := R5
	32	[13969]	GETGLOBAL	R4 K9 ; R4 := _T
	33	[13969]	GETTABLE 	R5 R3 K15 ; R5 := R3["LoadOutId"]
	34	[13969]	SETTABLE 	R4 K14 R5 ; R4["upgradeItemSlot"] := R5
	35	[13970]	GETGLOBAL	R4 K9 ; R4 := _T
	36	[13970]	GETTABLE 	R5 R3 K17 ; R5 := R3["UID"]
	37	[13970]	SETTABLE 	R4 K16 R5 ; R4["upgradeItemUID"] := R5
	38	[13973]	GETGLOBAL	R4 K9 ; R4 := _T
	39	[13973]	GETTABLE 	R4 R4 K10 ; R4 := R4["upgradeItemCategory"]
	40	[13973]	EQ       	1 R4 K19 ; if R4 == 15.000000 then PC := 50
	41	[13973]	JMP      	50 ; PC := 50
	42	[13973]	GETGLOBAL	R4 K9 ; R4 := _T
	43	[13973]	GETTABLE 	R4 R4 K10 ; R4 := R4["upgradeItemCategory"]
	44	[13973]	EQ       	1 R4 K20 ; if R4 == 24.000000 then PC := 50
	45	[13973]	JMP      	50 ; PC := 50
	46	[13973]	GETGLOBAL	R4 K9 ; R4 := _T
	47	[13973]	GETTABLE 	R4 R4 K10 ; R4 := R4["upgradeItemCategory"]
	48	[13973]	EQ       	0 R4 K21 ; if R4 ~= 39.000000 then PC := 68
	49	[13973]	JMP      	68 ; PC := 68
	50	[13974]	GETGLOBAL	R4 K22 ; R4 := 0x25d99d89
	51	[13974]	SELF     	R4 R4 K23 ; R5 := R4; R4 := R4[0x3c6b0324]
	52	[13974]	CALL     	R4 2 2 ; R4 := R4(R5)
	53	[13974]	TEST     	R4 0 ; if not R4 then PC := 58
	54	[13974]	JMP      	58 ; PC := 58
	55	[13975]	GETGLOBAL	R4 K9 ; R4 := _T
	56	[13975]	SETTABLE 	R4 K10 K20 ; R4["upgradeItemCategory"] := 24.000000
	57	[13975]	JMP      	68 ; PC := 68
	58	[13976]	GETGLOBAL	R4 K22 ; R4 := 0x25d99d89
	59	[13976]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0x9f91f49d]
	60	[13976]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[13976]	TEST     	R4 0 ; if not R4 then PC := 66
	62	[13976]	JMP      	66 ; PC := 66
	63	[13977]	GETGLOBAL	R4 K9 ; R4 := _T
	64	[13977]	SETTABLE 	R4 K10 K21 ; R4["upgradeItemCategory"] := 39.000000
	65	[13977]	JMP      	68 ; PC := 68
	66	[13979]	GETGLOBAL	R4 K9 ; R4 := _T
	67	[13979]	SETTABLE 	R4 K10 K19 ; R4["upgradeItemCategory"] := 15.000000
	68	[13983]	LOADNIL  	R4 R4 ; R4 := nil
	69	[13984]	GETTABLE 	R5 R3 K13 ; R5 := R3["LoadOutType"]
	70	[13984]	EQ       	0 R5 K26 ; if R5 ~= 8.000000 then PC := 81
	71	[13984]	JMP      	81 ; PC := 81
	72	[13984]	GETGLOBAL	R5 K27 ; R5 := 0x7b998233
	73	[13984]	GETGLOBAL	R6 K9 ; R6 := _T
	74	[13984]	GETTABLE 	R6 R6 K28 ; R6 := R6["MechAvatar"]
	75	[13984]	CALL     	R5 2 2 ; R5 := R5(R6)
	76	[13984]	TEST     	R5 1 ; if R5 then PC := 81
	77	[13984]	JMP      	81 ; PC := 81
	78	[13985]	GETGLOBAL	R5 K9 ; R5 := _T
	79	[13985]	GETTABLE 	R4 R5 K28 ; R4 := R5["MechAvatar"]
	80	[13985]	JMP      	105 ; PC := 105
	81	[13986]	GETGLOBAL	R5 K9 ; R5 := _T
	82	[13986]	GETTABLE 	R5 R5 K29 ; R5 := R5["mSpecialSuitMode"]
	83	[13986]	TEST     	R5 0 ; if not R5 then PC := 94
	84	[13986]	JMP      	94 ; PC := 94
	85	[13986]	GETGLOBAL	R5 K27 ; R5 := 0x7b998233
	86	[13986]	GETGLOBAL	R6 K9 ; R6 := _T
	87	[13986]	GETTABLE 	R6 R6 K30 ; R6 := R6["SpecialSuitAvatar"]
	88	[13986]	CALL     	R5 2 2 ; R5 := R5(R6)
	89	[13986]	TEST     	R5 1 ; if R5 then PC := 94
	90	[13986]	JMP      	94 ; PC := 94
	91	[13987]	GETGLOBAL	R5 K9 ; R5 := _T
	92	[13987]	GETTABLE 	R4 R5 K30 ; R4 := R5["SpecialSuitAvatar"]
	93	[13987]	JMP      	105 ; PC := 105
	94	[13988]	GETGLOBAL	R5 K9 ; R5 := _T
	95	[13988]	GETTABLE 	R5 R5 K31 ; R5 := R5["MenuSuitAvatar"]
	96	[13988]	EQ       	1 R5 K8 ; if R5 == nil then PC := 101
	97	[13988]	JMP      	101 ; PC := 101
	98	[13989]	GETGLOBAL	R5 K9 ; R5 := _T
	99	[13989]	GETTABLE 	R4 R5 K31 ; R4 := R5["MenuSuitAvatar"]
	100	[13989]	JMP      	105 ; PC := 105
	101	[13991]	GETUPVAL 	R5 U2 ; R5 := U2
	102	[13991]	GETTABLE 	R5 R5 K32 ; R5 := R5[0x6ef45ebc]
	103	[13991]	CALL     	R5 1 2 ; R5 := R5()
	104	[13991]	MOVE     	R4 R5 ; R4 := R5
	105	[13994]	LOADNIL  	R5 R6 ; R5 := R6 := nil
	106	[13996]	GETGLOBAL	R7 K27 ; R7 := 0x7b998233
	107	[13996]	MOVE     	R8 R4 ; R8 := R4
	108	[13996]	CALL     	R7 2 2 ; R7 := R7(R8)
	109	[13996]	TEST     	R7 1 ; if R7 then PC := 127
	110	[13996]	JMP      	127 ; PC := 127
	111	[13997]	SELF     	R7 R4 K33 ; R8 := R4; R7 := R4[0xde321e6f]
	112	[13997]	CALL     	R7 2 2 ; R7 := R7(R8)
	113	[13997]	SELF     	R7 R7 K34 ; R8 := R7; R7 := R7[0xab98dbf5]
	114	[13997]	GETTABLE 	R9 R3 K17 ; R9 := R3["UID"]
	115	[13997]	GETTABLE 	R10 R3 K13 ; R10 := R3["LoadOutType"]
	116	[13997]	GETTABLE 	R11 R3 K15 ; R11 := R3["LoadOutId"]
	117	[13997]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	118	[13997]	MOVE     	R6 R7 ; R6 := R7
	119	[13998]	GETGLOBAL	R7 K27 ; R7 := 0x7b998233
	120	[13998]	MOVE     	R8 R6 ; R8 := R6
	121	[13998]	CALL     	R7 2 2 ; R7 := R7(R8)
	122	[13998]	TEST     	R7 1 ; if R7 then PC := 127
	123	[13998]	JMP      	127 ; PC := 127
	124	[13999]	SELF     	R7 R6 K35 ; R8 := R6; R7 := R6[0x4e2bfd98]
	125	[13999]	CALL     	R7 2 2 ; R7 := R7(R8)
	126	[13999]	MOVE     	R5 R7 ; R5 := R7
	127	[14004]	GETGLOBAL	R7 K27 ; R7 := 0x7b998233
	128	[14004]	MOVE     	R8 R6 ; R8 := R6
	129	[14004]	CALL     	R7 2 2 ; R7 := R7(R8)
	130	[14004]	TEST     	R7 0 ; if not R7 then PC := 183
	131	[14004]	JMP      	183 ; PC := 183
	132	[14007]	GETTABLE 	R7 R3 K15 ; R7 := R3["LoadOutId"]
	133	[14007]	EQ       	1 R7 K36 ; if R7 == 0.000000 then PC := 138
	134	[14007]	JMP      	138 ; PC := 138
	135	[14007]	GETTABLE 	R7 R3 K15 ; R7 := R3["LoadOutId"]
	136	[14007]	EQ       	0 R7 K37 ; if R7 ~= 2.000000 then PC := 141
	137	[14007]	JMP      	141 ; PC := 141
	138	[14007]	GETTABLE 	R7 R3 K13 ; R7 := R3["LoadOutType"]
	139	[14007]	EQ       	1 R7 K38 ; if R7 == 1.000000 then PC := 142
	140	[14007]	JMP      	142 ; PC := 142
	141	[14007]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 142
	142	[14007]	OP_LOADBOOL	R7 1 0 ; R7 := true
	143	[14008]	TEST     	R7 1 ; if R7 then PC := 183
	144	[14008]	JMP      	183 ; PC := 183
	145	[14009]	GETTABLE 	R8 R3 K15 ; R8 := R3["LoadOutId"]
	146	[14009]	EQ       	0 R8 K39 ; if R8 ~= 5.000000 then PC := 155
	147	[14009]	JMP      	155 ; PC := 155
	148	[14009]	GETGLOBAL	R8 K9 ; R8 := _T
	149	[14009]	GETTABLE 	R8 R8 K29 ; R8 := R8["mSpecialSuitMode"]
	150	[14009]	TEST     	R8 0 ; if not R8 then PC := 155
	151	[14009]	JMP      	155 ; PC := 155
	152	[14010]	GETGLOBAL	R8 K9 ; R8 := _T
	153	[14010]	GETTABLE 	R4 R8 K30 ; R4 := R8["SpecialSuitAvatar"]
	154	[14010]	JMP      	171 ; PC := 171
	155	[14011]	GETTABLE 	R8 R3 K13 ; R8 := R3["LoadOutType"]
	156	[14011]	EQ       	0 R8 K40 ; if R8 ~= 6.000000 then PC := 171
	157	[14011]	JMP      	171 ; PC := 171
	158	[14011]	GETTABLE 	R8 R3 K15 ; R8 := R3["LoadOutId"]
	159	[14011]	GETUPVAL 	R9 U3 ; R9 := U3
	160	[14011]	GETTABLE 	R9 R9 K41 ; R9 := R9["KDriveSlot"]
	161	[14011]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 171
	162	[14011]	JMP      	171 ; PC := 171
	163	[14011]	GETGLOBAL	R8 K27 ; R8 := 0x7b998233
	164	[14011]	GETGLOBAL	R9 K9 ; R9 := _T
	165	[14011]	GETTABLE 	R9 R9 K42 ; R9 := R9["KDriveAvatar"]
	166	[14011]	CALL     	R8 2 2 ; R8 := R8(R9)
	167	[14011]	TEST     	R8 1 ; if R8 then PC := 171
	168	[14011]	JMP      	171 ; PC := 171
	169	[14012]	GETGLOBAL	R8 K9 ; R8 := _T
	170	[14012]	GETTABLE 	R4 R8 K42 ; R4 := R8["KDriveAvatar"]
	171	[14014]	GETGLOBAL	R8 K43 ; R8 := 0xb009bbc6
	172	[14014]	GETTABLE 	R9 R3 K44 ; R9 := R3["Type"]
	173	[14014]	CALL     	R8 2 2 ; R8 := R8(R9)
	174	[14014]	SELF     	R8 R8 K35 ; R9 := R8; R8 := R8[0x4e2bfd98]
	175	[14014]	CALL     	R8 2 2 ; R8 := R8(R9)
	176	[14014]	MOVE     	R5 R8 ; R5 := R8
	177	[14015]	SELF     	R8 R4 K33 ; R9 := R4; R8 := R4[0xde321e6f]
	178	[14015]	CALL     	R8 2 2 ; R8 := R8(R9)
	179	[14015]	SELF     	R8 R8 K45 ; R9 := R8; R8 := R8[0xe85a2361]
	180	[14015]	MOVE     	R10 R5 ; R10 := R5
	181	[14015]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	182	[14015]	MOVE     	R6 R8 ; R6 := R8
	183	[14019]	GETGLOBAL	R8 K9 ; R8 := _T
	184	[14019]	NEWTABLE 	R9 0 6 ; R9 := {}
	185	[14021]	GETTABLE 	R10 R3 K44 ; R10 := R3["Type"]
	186	[14021]	SETTABLE 	R9 K47 R10 ; R9["type"] := R10
	187	[14022]	GETTABLE 	R10 R3 K49 ; R10 := R3["mStoreItem"]
	188	[14022]	SETTABLE 	R9 K48 R10 ; R9["storeItem"] := R10
	189	[14023]	GETTABLE 	R10 R3 K51 ; R10 := R3["EquippedItem"]
	190	[14023]	SETTABLE 	R9 K50 R10 ; R9["info"] := R10
	191	[14024]	GETTABLE 	R10 R3 K53 ; R10 := R3["Xp"]
	192	[14024]	SETTABLE 	R9 K52 R10 ; R9["xp"] := R10
	193	[14025]	GETTABLE 	R10 R3 K55 ; R10 := R3["mModSlot"]
	194	[14025]	SETTABLE 	R9 K54 R10 ; R9["configSlot"] := R10
	195	[14026]	SETTABLE 	R9 K56 R6 ; R9["item"] := R6
	196	[14027]	SETTABLE 	R8 K46 R9 ; R8["upgradeItem"] := R9
	197	[14029]	GETGLOBAL	R8 K27 ; R8 := 0x7b998233
	198	[14029]	GETGLOBAL	R9 K9 ; R9 := _T
	199	[14029]	GETTABLE 	R9 R9 K46 ; R9 := R9["upgradeItem"]
	200	[14029]	GETTABLE 	R9 R9 K56 ; R9 := R9["item"]
	201	[14029]	CALL     	R8 2 2 ; R8 := R8(R9)
	202	[14029]	TEST     	R8 0 ; if not R8 then PC := 211
	203	[14029]	JMP      	211 ; PC := 211
	204	[14032]	TEST     	R1 1 ; if R1 then PC := 210
	205	[14032]	JMP      	210 ; PC := 210
	206	[14033]	GETUPVAL 	R8 U1 ; R8 := U1
	207	[14033]	GETTABLE 	R8 R8 K57 ; R8 := R8[0xa53f5e12]
	208	[14033]	LOADK    	R9 K58 ; R9 := "/Lotus/Language/Menu/Arsenal_UpgradeItemNotLoaded"
	209	[14033]	CALL     	R8 2 1 ; R8(R9)
	210	[14036]	RETURN   	R0 1 ; return 
	211	[14039]	GETGLOBAL	R8 K9 ; R8 := _T
	212	[14039]	GETGLOBAL	R9 K60 ; R9 := mCurrentLoadout
	213	[14039]	SETTABLE 	R8 K59 R9 ; R8["loadoutInProgress"] := R9
	214	[14040]	OP_LOADBOOL	R8 0 0 ; R8 := false
	215	[14040]	SETUPVAL 	R8 U4 ; U4 := R8
	216	[14041]	GETGLOBAL	R8 K9 ; R8 := _T
	217	[14041]	GETTABLE 	R8 R8 K61 ; R8 := R8[0xbf0443a1]
	218	[14041]	LOADK    	R9 K62 ; R9 := "UpgradeCards"
	219	[14041]	CALL     	R8 2 1 ; R8(R9)
	220	[14043]	GETGLOBAL	R8 K27 ; R8 := 0x7b998233
	221	[14043]	GETGLOBAL	R9 K63 ; R9 := 0xcb79539e
	222	[14043]	CALL     	R8 2 2 ; R8 := R8(R9)
	223	[14043]	TEST     	R8 1 ; if R8 then PC := 239
	224	[14043]	JMP      	239 ; PC := 239
	225	[14044]	GETGLOBAL	R8 K63 ; R8 := 0xcb79539e
	226	[14044]	SELF     	R8 R8 K64 ; R9 := R8; R8 := R8[0xa9188a47]
	227	[14044]	GETGLOBAL	R10 K65 ; R10 := 0x0469f296
	228	[14044]	LOADK    	R11 K66 ; R11 := "IN_SHIP_VIEW_TIME"
	229	[14044]	CALL     	R10 2 2 ; R10 := R10(R11)
	230	[14044]	LOADK    	R11 K67 ; R11 := "EQUIPMENT_ARSENAL_MOD"
	231	[14044]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	232	[14045]	GETGLOBAL	R8 K63 ; R8 := 0xcb79539e
	233	[14045]	SELF     	R8 R8 K68 ; R9 := R8; R8 := R8[0xa9136b2f]
	234	[14045]	GETGLOBAL	R10 K65 ; R10 := 0x0469f296
	235	[14045]	LOADK    	R11 K66 ; R11 := "IN_SHIP_VIEW_TIME"
	236	[14045]	CALL     	R10 2 2 ; R10 := R10(R11)
	237	[14045]	LOADK    	R11 K69 ; R11 := "EQUIPMENT_ARSENAL_MAIN"
	238	[14045]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	239	[14048]	OP_LOADBOOL	R8 1 0 ; R8 := true
	240	[14048]	RETURN   	R8 2 ; return R8 
	241	[14051]	TEST     	R2 1 ; if R2 then PC := 258
	242	[14051]	JMP      	258 ; PC := 258
	243	[14052]	GETUPVAL 	R8 U1 ; R8 := U1
	244	[14052]	GETTABLE 	R8 R8 K0 ; R8 := R8[0x659d451f]
	245	[14052]	GETGLOBAL	R9 K1 ; R9 := 0x0032441c
	246	[14052]	GETTABLE 	R9 R9 K2 ; R9 := R9["UISound_Select"]
	247	[14052]	CALL     	R8 2 1 ; R8(R9)
	248	[14053]	GETUPVAL 	R8 U1 ; R8 := U1
	249	[14053]	GETTABLE 	R8 R8 K0 ; R8 := R8[0x659d451f]
	250	[14053]	GETGLOBAL	R9 K1 ; R9 := 0x0032441c
	251	[14053]	GETTABLE 	R9 R9 K70 ; R9 := R9["UISound_ButtonSelect"]
	252	[14053]	CALL     	R8 2 1 ; R8(R9)
	253	[14054]	GETUPVAL 	R8 U1 ; R8 := U1
	254	[14054]	GETTABLE 	R8 R8 K0 ; R8 := R8[0x659d451f]
	255	[14054]	GETGLOBAL	R9 K1 ; R9 := 0x0032441c
	256	[14054]	GETTABLE 	R9 R9 K71 ; R9 := R9["UISound_GridOpenTwo"]
	257	[14054]	CALL     	R8 2 1 ; R8(R9)
	258	[14056]	RETURN   	R0 1 ; return 

function #215 <?:14058,14060> (4 instructions, 16 bytes at 000002111D076960)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14059]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14059]	MOVE     	R2 R0 ; R2 := R0
	3	[14059]	CALL     	R1 2 1 ; R1(R2)
	4	[14060]	RETURN   	R0 1 ; return 

function #216 <?:14062,14071> (35 instructions, 140 bytes at 000002111D076A30)
1 param, 5 slots, 7 upvalues, 0 locals, 9 constants, 0 functions
	1	[14063]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14063]	CALL     	R1 1 2 ; R1 := R1()
	3	[14063]	TEST     	R1 1 ; if R1 then PC := 35
	4	[14063]	JMP      	35 ; PC := 35
	5	[14063]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[14063]	GETUPVAL 	R2 U2 ; R2 := U2
	7	[14063]	GETTABLE 	R2 R2 K0 ; R2 := R2["SELECTING_PART"]
	8	[14063]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 35
	9	[14063]	JMP      	35 ; PC := 35
	10	[14063]	GETUPVAL 	R1 U3 ; R1 := U3
	11	[14063]	GETTABLE 	R1 R1 K1 ; R1 := R1["EquipmentChangesBlocked"]
	12	[14063]	TEST     	R1 1 ; if R1 then PC := 35
	13	[14063]	JMP      	35 ; PC := 35
	14	[14064]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[14064]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	16	[14066]	GETUPVAL 	R1 U4 ; R1 := U4
	17	[14066]	GETUPVAL 	R2 U2 ; R2 := U2
	18	[14066]	GETTABLE 	R2 R2 K3 ; R2 := R2["SWAPPING_ITEM"]
	19	[14066]	CALL     	R1 2 1 ; R1(R2)
	20	[14067]	GETGLOBAL	R1 K4 ; R1 := mLists
	21	[14067]	GETTABLE 	R1 R1 K5 ; R1 := R1["mLoadOutList"]
	22	[14067]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xca30dfb6]
	23	[14067]	GETGLOBAL	R3 K7 ; R3 := 0x03f57322
	24	[14067]	MOVE     	R4 R0 ; R4 := R0
	25	[14067]	CALL     	R3 2 0 ; R3,... := R3(R4)
	26	[14067]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	27	[14068]	GETUPVAL 	R2 U5 ; R2 := U5
	28	[14068]	GETTABLE 	R2 R2 K8 ; R2 := R2[0xb2cd8e7b]
	29	[14068]	OP_LOADBOOL	R3 1 0 ; R3 := true
	30	[14068]	MOVE     	R4 R1 ; R4 := R1
	31	[14068]	CALL     	R2 3 1 ; R2(R3,R4)
	32	[14069]	GETUPVAL 	R2 U6 ; R2 := U6
	33	[14069]	MOVE     	R3 R1 ; R3 := R1
	34	[14069]	CALL     	R2 2 1 ; R2(R3)
	35	[14071]	RETURN   	R0 1 ; return 

function #217 <?:14073,14075> (4 instructions, 16 bytes at 000002111D076CA0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14074]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14074]	MOVE     	R2 R0 ; R2 := R0
	3	[14074]	CALL     	R1 2 1 ; R1(R2)
	4	[14075]	RETURN   	R0 1 ; return 

function #218 <?:14077,14082> (16 instructions, 64 bytes at 000002111D076D70)
1 param, 3 slots, 4 upvalues, 0 locals, 3 constants, 0 functions
	1	[14078]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14078]	CALL     	R1 1 2 ; R1 := R1()
	3	[14078]	TEST     	R1 1 ; if R1 then PC := 16
	4	[14078]	JMP      	16 ; PC := 16
	5	[14078]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[14078]	GETUPVAL 	R2 U2 ; R2 := U2
	7	[14078]	GETTABLE 	R2 R2 K0 ; R2 := R2["SELECTING_PART"]
	8	[14078]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 16
	9	[14078]	JMP      	16 ; PC := 16
	10	[14079]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[14079]	SETGLOBALHASH	R1 K1 ; mInputBlocked := R1
	12	[14080]	GETUPVAL 	R1 U3 ; R1 := U3
	13	[14080]	GETUPVAL 	R2 U2 ; R2 := U2
	14	[14080]	GETTABLE 	R2 R2 K2 ; R2 := R2["CUSTOMIZING_SKINS"]
	15	[14080]	CALL     	R1 2 1 ; R1(R2)
	16	[14082]	RETURN   	R0 1 ; return 

function #219 <?:14084,14086> (4 instructions, 16 bytes at 000002111D076EE0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14085]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14085]	MOVE     	R2 R0 ; R2 := R0
	3	[14085]	CALL     	R1 2 1 ; R1(R2)
	4	[14086]	RETURN   	R0 1 ; return 

function #220 <?:14088,14091> (8 instructions, 32 bytes at 000002111D076FB0)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[14089]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[14089]	JMP      	4 ; PC := 4
	3	[14089]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[14089]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[14090]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[14090]	MOVE     	R2 R0 ; R2 := R0
	7	[14090]	CALL     	R1 2 1 ; R1(R2)
	8	[14091]	RETURN   	R0 1 ; return 

function #221 <?:14093,14095> (3 instructions, 12 bytes at 000002111D0770C0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14094]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14094]	CALL     	R0 1 1 ; R0()
	3	[14095]	RETURN   	R0 1 ; return 

function #222 <?:14097,14141> (189 instructions, 756 bytes at 000002112AA19020)
0 params, 6 slots, 5 upvalues, 0 locals, 47 constants, 0 functions
	1	[14098]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14098]	CALL     	R0 1 2 ; R0 := R0()
	3	[14098]	TEST     	R0 1 ; if R0 then PC := 189
	4	[14098]	JMP      	189 ; PC := 189
	5	[14099]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	6	[14099]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0c33ebb2]
	7	[14099]	LOADK    	R2 K2 ; R2 := "_root"
	8	[14099]	LOADK    	R3 K3 ; R3 := "suitRotationX"
	9	[14099]	LOADK    	R4 := 0.000000
	10	[14099]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	11	[14100]	GETUPVAL 	R0 U1 ; R0 := U1
	12	[14100]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[14100]	GETTABLE 	R1 R1 K4 ; R1 := R1["SELECTING_PART"]
	14	[14100]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 46
	15	[14100]	JMP      	46 ; PC := 46
	16	[14101]	GETGLOBAL	R0 K5 ; R0 := mSelected
	17	[14101]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	18	[14101]	EQ       	0 R0 K7 ; if R0 ~= nil then PC := 25
	19	[14101]	JMP      	25 ; PC := 25
	20	[14102]	GETGLOBAL	R0 K8 ; R0 := mLists
	21	[14102]	GETTABLE 	R0 R0 K9 ; R0 := R0["mLoadOutList"]
	22	[14102]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x8b24ce41]
	23	[14102]	CALL     	R0 2 1 ; R0(R1)
	24	[14102]	JMP      	189 ; PC := 189
	25	[14103]	GETGLOBAL	R0 K5 ; R0 := mSelected
	26	[14103]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	27	[14103]	GETTABLE 	R0 R0 K11 ; R0 := R0["LoadOutId"]
	28	[14103]	EQ       	1 R0 K13 ; if R0 == 5.000000 then PC := 189
	29	[14103]	JMP      	189 ; PC := 189
	30	[14104]	GETGLOBAL	R0 K5 ; R0 := mSelected
	31	[14104]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	32	[14104]	GETTABLE 	R0 R0 K11 ; R0 := R0["LoadOutId"]
	33	[14104]	EQ       	1 R0 K14 ; if R0 == 6.000000 then PC := 189
	34	[14104]	JMP      	189 ; PC := 189
	35	[14105]	GETGLOBAL	R0 K5 ; R0 := mSelected
	36	[14105]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	37	[14105]	GETTABLE 	R0 R0 K15 ; R0 := R0["LoadOutType"]
	38	[14105]	EQ       	1 R0 K16 ; if R0 == 7.000000 then PC := 189
	39	[14105]	JMP      	189 ; PC := 189
	40	[14106]	GETUPVAL 	R0 U3 ; R0 := U3
	41	[14106]	GETGLOBAL	R1 K5 ; R1 := mSelected
	42	[14106]	GETTABLE 	R1 R1 K6 ; R1 := R1["Element"]
	43	[14106]	GETTABLE 	R1 R1 K17 ; R1 := R1["Id"]
	44	[14106]	CALL     	R0 2 1 ; R0(R1)
	45	[14107]	JMP      	189 ; PC := 189
	46	[14108]	GETUPVAL 	R0 U1 ; R0 := U1
	47	[14108]	GETUPVAL 	R1 U2 ; R1 := U2
	48	[14108]	GETTABLE 	R1 R1 K18 ; R1 := R1["CUSTOMIZING_SKINS"]
	49	[14108]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 56
	50	[14108]	JMP      	56 ; PC := 56
	51	[14109]	GETGLOBAL	R0 K8 ; R0 := mLists
	52	[14109]	GETTABLE 	R0 R0 K19 ; R0 := R0["mCosmeticsList"]
	53	[14109]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x8b24ce41]
	54	[14109]	CALL     	R0 2 1 ; R0(R1)
	55	[14109]	JMP      	189 ; PC := 189
	56	[14110]	GETUPVAL 	R0 U1 ; R0 := U1
	57	[14110]	GETUPVAL 	R1 U2 ; R1 := U2
	58	[14110]	GETTABLE 	R1 R1 K20 ; R1 := R1["SWAPPING_ITEM"]
	59	[14110]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 66
	60	[14110]	JMP      	66 ; PC := 66
	61	[14110]	GETUPVAL 	R0 U1 ; R0 := U1
	62	[14110]	GETUPVAL 	R1 U2 ; R1 := U2
	63	[14110]	GETTABLE 	R1 R1 K21 ; R1 := R1["SELECTING_SKINS"]
	64	[14110]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 129
	65	[14110]	JMP      	129 ; PC := 129
	66	[14111]	GETGLOBAL	R0 K22 ; R0 := 0x7b998233
	67	[14111]	GETGLOBAL	R1 K23 ; R1 := mItemsGrid
	68	[14111]	CALL     	R0 2 2 ; R0 := R0(R1)
	69	[14111]	TEST     	R0 1 ; if R0 then PC := 189
	70	[14111]	JMP      	189 ; PC := 189
	71	[14111]	GETGLOBAL	R0 K23 ; R0 := mItemsGrid
	72	[14111]	SELF     	R0 R0 K24 ; R1 := R0; R0 := R0[0x5222d944]
	73	[14111]	CALL     	R0 2 2 ; R0 := R0(R1)
	74	[14111]	TEST     	R0 1 ; if R0 then PC := 189
	75	[14111]	JMP      	189 ; PC := 189
	76	[14112]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	77	[14112]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0x40eb8ac7]
	78	[14112]	CALL     	R0 2 2 ; R0 := R0(R1)
	79	[14113]	EQ       	0 R0 K26 ; if R0 ~= "FilterText" then PC := 105
	80	[14113]	JMP      	105 ; PC := 105
	81	[14113]	GETGLOBAL	R1 K22 ; R1 := 0x7b998233
	82	[14113]	GETGLOBAL	R2 K5 ; R2 := mSelected
	83	[14113]	GETTABLE 	R2 R2 K27 ; R2 := R2["Item"]
	84	[14113]	CALL     	R1 2 2 ; R1 := R1(R2)
	85	[14113]	TEST     	R1 1 ; if R1 then PC := 105
	86	[14113]	JMP      	105 ; PC := 105
	87	[14113]	GETGLOBAL	R1 K23 ; R1 := mItemsGrid
	88	[14113]	SELF     	R1 R1 K28 ; R2 := R1; R1 := R1[0x538bfcb8]
	89	[14113]	GETGLOBAL	R3 K5 ; R3 := mSelected
	90	[14113]	GETTABLE 	R3 R3 K27 ; R3 := R3["Item"]
	91	[14113]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	92	[14113]	TEST     	R1 0 ; if not R1 then PC := 105
	93	[14113]	JMP      	105 ; PC := 105
	94	[14116]	GETGLOBAL	R1 K23 ; R1 := mItemsGrid
	95	[14116]	SELF     	R1 R1 K29 ; R2 := R1; R1 := R1[0x77de11fe]
	96	[14116]	LOADK    	R3 := 1.000000
	97	[14116]	OP_LOADBOOL	R4 1 0 ; R4 := true
	98	[14116]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	99	[14118]	GETGLOBAL	R1 K5 ; R1 := mSelected
	100	[14118]	GETTABLE 	R1 R1 K27 ; R1 := R1["Item"]
	101	[14118]	SETGLOBALHASH	R1 K30 ; mPrevSelection := R1
	102	[14119]	GETUPVAL 	R1 U4 ; R1 := U4
	103	[14119]	SETTABLE 	R1 K31 K32 ; R1["DoubleClick"] := true
	104	[14119]	JMP      	189 ; PC := 189
	105	[14120]	GETGLOBAL	R1 K33 ; R1 := mLoaders
	106	[14120]	GETTABLE 	R1 R1 K34 ; R1 := R1["mSelectionLoader"]
	107	[14120]	GETTABLE 	R1 R1 K35 ; R1 := R1["mState"]
	108	[14120]	GETGLOBAL	R2 K36 ; R2 := LoaderState
	109	[14120]	GETTABLE 	R2 R2 K37 ; R2 := R2["LS_DONE"]
	110	[14120]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 189
	111	[14120]	JMP      	189 ; PC := 189
	112	[14120]	GETGLOBAL	R1 K38 ; R1 := mButtons
	113	[14120]	GETTABLE 	R1 R1 K39 ; R1 := R1[2.000000]
	114	[14120]	GETTABLE 	R1 R1 K40 ; R1 := R1["mVisible"]
	115	[14120]	TEST     	R1 0 ; if not R1 then PC := 189
	116	[14120]	JMP      	189 ; PC := 189
	117	[14120]	GETGLOBAL	R1 K22 ; R1 := 0x7b998233
	118	[14120]	GETGLOBAL	R2 K38 ; R2 := mButtons
	119	[14120]	GETTABLE 	R2 R2 K39 ; R2 := R2[2.000000]
	120	[14120]	GETTABLE 	R2 R2 K41 ; R2 := R2["mCallback"]
	121	[14120]	CALL     	R1 2 2 ; R1 := R1(R2)
	122	[14120]	TEST     	R1 1 ; if R1 then PC := 189
	123	[14120]	JMP      	189 ; PC := 189
	124	[14121]	GETGLOBAL	R1 K38 ; R1 := mButtons
	125	[14121]	GETTABLE 	R1 R1 K39 ; R1 := R1[2.000000]
	126	[14121]	GETTABLE 	R1 R1 K42 ; R1 := R1[0x7ca0d7fa]
	127	[14121]	CALL     	R1 1 1 ; R1()
	128	[14123]	JMP      	189 ; PC := 189
	129	[14124]	GETUPVAL 	R1 U1 ; R1 := U1
	130	[14124]	GETUPVAL 	R2 U2 ; R2 := U2
	131	[14124]	GETTABLE 	R2 R2 K43 ; R2 := R2["SELECTING_CONSUMABLES"]
	132	[14124]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 189
	133	[14124]	JMP      	189 ; PC := 189
	134	[14125]	GETGLOBAL	R1 K22 ; R1 := 0x7b998233
	135	[14125]	GETGLOBAL	R2 K23 ; R2 := mItemsGrid
	136	[14125]	CALL     	R1 2 2 ; R1 := R1(R2)
	137	[14125]	TEST     	R1 1 ; if R1 then PC := 160
	138	[14125]	JMP      	160 ; PC := 160
	139	[14125]	GETGLOBAL	R1 K23 ; R1 := mItemsGrid
	140	[14125]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x5222d944]
	141	[14125]	CALL     	R1 2 2 ; R1 := R1(R2)
	142	[14125]	TEST     	R1 1 ; if R1 then PC := 160
	143	[14125]	JMP      	160 ; PC := 160
	144	[14126]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	145	[14126]	SELF     	R1 R1 K25 ; R2 := R1; R1 := R1[0x40eb8ac7]
	146	[14126]	CALL     	R1 2 2 ; R1 := R1(R2)
	147	[14127]	EQ       	0 R1 K26 ; if R1 ~= "FilterText" then PC := 160
	148	[14127]	JMP      	160 ; PC := 160
	149	[14128]	GETGLOBAL	R2 K23 ; R2 := mItemsGrid
	150	[14128]	SELF     	R2 R2 K29 ; R3 := R2; R2 := R2[0x77de11fe]
	151	[14128]	LOADK    	R4 := 1.000000
	152	[14128]	OP_LOADBOOL	R5 1 0 ; R5 := true
	153	[14128]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	154	[14129]	GETGLOBAL	R2 K5 ; R2 := mSelected
	155	[14129]	GETTABLE 	R2 R2 K27 ; R2 := R2["Item"]
	156	[14129]	SETGLOBALHASH	R2 K30 ; mPrevSelection := R2
	157	[14130]	GETUPVAL 	R2 U4 ; R2 := U4
	158	[14130]	SETTABLE 	R2 K31 K32 ; R2["DoubleClick"] := true
	159	[14131]	RETURN   	R0 1 ; return 
	160	[14134]	GETGLOBAL	R2 K38 ; R2 := mButtons
	161	[14134]	GETTABLE 	R2 R2 K44 ; R2 := R2[3.000000]
	162	[14134]	GETTABLE 	R2 R2 K40 ; R2 := R2["mVisible"]
	163	[14134]	TEST     	R2 0 ; if not R2 then PC := 175
	164	[14134]	JMP      	175 ; PC := 175
	165	[14134]	GETGLOBAL	R2 K38 ; R2 := mButtons
	166	[14134]	GETTABLE 	R2 R2 K44 ; R2 := R2[3.000000]
	167	[14134]	GETTABLE 	R2 R2 K45 ; R2 := R2["mCallout"]
	168	[14134]	EQ       	0 R2 K46 ; if R2 ~= "MENU_SELECT" then PC := 175
	169	[14134]	JMP      	175 ; PC := 175
	170	[14135]	GETGLOBAL	R2 K38 ; R2 := mButtons
	171	[14135]	GETTABLE 	R2 R2 K44 ; R2 := R2[3.000000]
	172	[14135]	GETTABLE 	R2 R2 K42 ; R2 := R2[0x7ca0d7fa]
	173	[14135]	CALL     	R2 1 1 ; R2()
	174	[14135]	JMP      	189 ; PC := 189
	175	[14136]	GETGLOBAL	R2 K38 ; R2 := mButtons
	176	[14136]	GETTABLE 	R2 R2 K39 ; R2 := R2[2.000000]
	177	[14136]	GETTABLE 	R2 R2 K40 ; R2 := R2["mVisible"]
	178	[14136]	TEST     	R2 0 ; if not R2 then PC := 189
	179	[14136]	JMP      	189 ; PC := 189
	180	[14136]	GETGLOBAL	R2 K38 ; R2 := mButtons
	181	[14136]	GETTABLE 	R2 R2 K39 ; R2 := R2[2.000000]
	182	[14136]	GETTABLE 	R2 R2 K45 ; R2 := R2["mCallout"]
	183	[14136]	EQ       	0 R2 K46 ; if R2 ~= "MENU_SELECT" then PC := 189
	184	[14136]	JMP      	189 ; PC := 189
	185	[14137]	GETGLOBAL	R2 K38 ; R2 := mButtons
	186	[14137]	GETTABLE 	R2 R2 K39 ; R2 := R2[2.000000]
	187	[14137]	GETTABLE 	R2 R2 K42 ; R2 := R2[0x7ca0d7fa]
	188	[14137]	CALL     	R2 1 1 ; R2()
	189	[14141]	RETURN   	R0 1 ; return 

function #223 <?:14143,14158> (88 instructions, 352 bytes at 000002112AA199D0)
0 params, 5 slots, 4 upvalues, 0 locals, 25 constants, 0 functions
	1	[14144]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14144]	CALL     	R0 1 2 ; R0 := R0()
	3	[14144]	TEST     	R0 1 ; if R0 then PC := 88
	4	[14144]	JMP      	88 ; PC := 88
	5	[14145]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	6	[14145]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0c33ebb2]
	7	[14145]	LOADK    	R2 K2 ; R2 := "_root"
	8	[14145]	LOADK    	R3 K3 ; R3 := "suitRotationX"
	9	[14145]	LOADK    	R4 := 0.000000
	10	[14145]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	11	[14146]	GETUPVAL 	R0 U1 ; R0 := U1
	12	[14146]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[14146]	GETTABLE 	R1 R1 K4 ; R1 := R1["SELECTING_PART"]
	14	[14146]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 41
	15	[14146]	JMP      	41 ; PC := 41
	16	[14147]	GETGLOBAL	R0 K5 ; R0 := mSelected
	17	[14147]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	18	[14147]	EQ       	1 R0 K7 ; if R0 == nil then PC := 88
	19	[14147]	JMP      	88 ; PC := 88
	20	[14147]	GETGLOBAL	R0 K5 ; R0 := mSelected
	21	[14147]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	22	[14147]	GETTABLE 	R0 R0 K8 ; R0 := R0["EquippedItem"]
	23	[14147]	EQ       	1 R0 K7 ; if R0 == nil then PC := 88
	24	[14147]	JMP      	88 ; PC := 88
	25	[14147]	GETGLOBAL	R0 K5 ; R0 := mSelected
	26	[14147]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	27	[14147]	GETTABLE 	R0 R0 K9 ; R0 := R0["mCanCustomize"]
	28	[14147]	EQ       	1 R0 K7 ; if R0 == nil then PC := 88
	29	[14147]	JMP      	88 ; PC := 88
	30	[14147]	GETGLOBAL	R0 K5 ; R0 := mSelected
	31	[14147]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	32	[14147]	GETTABLE 	R0 R0 K9 ; R0 := R0["mCanCustomize"]
	33	[14147]	TEST     	R0 0 ; if not R0 then PC := 88
	34	[14147]	JMP      	88 ; PC := 88
	35	[14148]	GETUPVAL 	R0 U3 ; R0 := U3
	36	[14148]	GETGLOBAL	R1 K5 ; R1 := mSelected
	37	[14148]	GETTABLE 	R1 R1 K6 ; R1 := R1["Element"]
	38	[14148]	GETTABLE 	R1 R1 K10 ; R1 := R1["Id"]
	39	[14148]	CALL     	R0 2 1 ; R0(R1)
	40	[14149]	JMP      	88 ; PC := 88
	41	[14150]	GETGLOBAL	R0 K11 ; R0 := 0x34291f5c
	42	[14150]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x1467d5f4]
	43	[14150]	CALL     	R0 1 2 ; R0 := R0()
	44	[14150]	TEST     	R0 0 ; if not R0 then PC := 69
	45	[14150]	JMP      	69 ; PC := 69
	46	[14150]	GETUPVAL 	R0 U1 ; R0 := U1
	47	[14150]	GETUPVAL 	R1 U2 ; R1 := U2
	48	[14150]	GETTABLE 	R1 R1 K13 ; R1 := R1["SWAPPING_ITEM"]
	49	[14150]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 65
	50	[14150]	JMP      	65 ; PC := 65
	51	[14150]	GETUPVAL 	R0 U1 ; R0 := U1
	52	[14150]	GETUPVAL 	R1 U2 ; R1 := U2
	53	[14150]	GETTABLE 	R1 R1 K14 ; R1 := R1["SELECTING_SKINS"]
	54	[14150]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 65
	55	[14150]	JMP      	65 ; PC := 65
	56	[14150]	GETUPVAL 	R0 U1 ; R0 := U1
	57	[14150]	GETUPVAL 	R1 U2 ; R1 := U2
	58	[14150]	GETTABLE 	R1 R1 K15 ; R1 := R1["SELECTING_CONSUMABLES"]
	59	[14150]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 69
	60	[14150]	JMP      	69 ; PC := 69
	61	[14150]	GETGLOBAL	R0 K5 ; R0 := mSelected
	62	[14150]	GETTABLE 	R0 R0 K16 ; R0 := R0["Emote"]
	63	[14150]	EQ       	1 R0 K7 ; if R0 == nil then PC := 69
	64	[14150]	JMP      	69 ; PC := 69
	65	[14152]	GETGLOBAL	R0 K17 ; R0 := mItemsGrid
	66	[14152]	SELF     	R0 R0 K18 ; R1 := R0; R0 := R0[0x8b24ce41]
	67	[14152]	CALL     	R0 2 1 ; R0(R1)
	68	[14152]	JMP      	88 ; PC := 88
	69	[14153]	GETUPVAL 	R0 U1 ; R0 := U1
	70	[14153]	GETUPVAL 	R1 U2 ; R1 := U2
	71	[14153]	GETTABLE 	R1 R1 K15 ; R1 := R1["SELECTING_CONSUMABLES"]
	72	[14153]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 88
	73	[14153]	JMP      	88 ; PC := 88
	74	[14153]	GETGLOBAL	R0 K19 ; R0 := mButtons
	75	[14153]	GETTABLE 	R0 R0 K20 ; R0 := R0[2.000000]
	76	[14153]	GETTABLE 	R0 R0 K21 ; R0 := R0["mVisible"]
	77	[14153]	TEST     	R0 0 ; if not R0 then PC := 88
	78	[14153]	JMP      	88 ; PC := 88
	79	[14153]	GETGLOBAL	R0 K19 ; R0 := mButtons
	80	[14153]	GETTABLE 	R0 R0 K20 ; R0 := R0[2.000000]
	81	[14153]	GETTABLE 	R0 R0 K22 ; R0 := R0["mCallout"]
	82	[14153]	EQ       	0 R0 K23 ; if R0 ~= "MENU_GENERIC1" then PC := 88
	83	[14153]	JMP      	88 ; PC := 88
	84	[14155]	GETGLOBAL	R0 K19 ; R0 := mButtons
	85	[14155]	GETTABLE 	R0 R0 K20 ; R0 := R0[2.000000]
	86	[14155]	GETTABLE 	R0 R0 K24 ; R0 := R0[0x7ca0d7fa]
	87	[14155]	CALL     	R0 1 1 ; R0()
	88	[14158]	RETURN   	R0 1 ; return 

function #224 <?:14160,14173> (60 instructions, 240 bytes at 000002112AA19EE0)
0 params, 5 slots, 4 upvalues, 0 locals, 18 constants, 0 functions
	1	[14161]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14161]	CALL     	R0 1 2 ; R0 := R0()
	3	[14161]	TEST     	R0 1 ; if R0 then PC := 60
	4	[14161]	JMP      	60 ; PC := 60
	5	[14162]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	6	[14162]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0c33ebb2]
	7	[14162]	LOADK    	R2 K2 ; R2 := "_root"
	8	[14162]	LOADK    	R3 K3 ; R3 := "suitRotationX"
	9	[14162]	LOADK    	R4 := 0.000000
	10	[14162]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	11	[14163]	GETUPVAL 	R0 U1 ; R0 := U1
	12	[14163]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[14163]	GETTABLE 	R1 R1 K4 ; R1 := R1["SELECTING_PART"]
	14	[14163]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 41
	15	[14163]	JMP      	41 ; PC := 41
	16	[14164]	GETGLOBAL	R0 K5 ; R0 := mSelected
	17	[14164]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	18	[14164]	EQ       	1 R0 K7 ; if R0 == nil then PC := 60
	19	[14164]	JMP      	60 ; PC := 60
	20	[14164]	GETGLOBAL	R0 K5 ; R0 := mSelected
	21	[14164]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	22	[14164]	GETTABLE 	R0 R0 K8 ; R0 := R0["EquippedItem"]
	23	[14164]	EQ       	1 R0 K7 ; if R0 == nil then PC := 60
	24	[14164]	JMP      	60 ; PC := 60
	25	[14164]	GETGLOBAL	R0 K5 ; R0 := mSelected
	26	[14164]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	27	[14164]	GETTABLE 	R0 R0 K9 ; R0 := R0["mCanUpgrade"]
	28	[14164]	EQ       	1 R0 K7 ; if R0 == nil then PC := 60
	29	[14164]	JMP      	60 ; PC := 60
	30	[14164]	GETGLOBAL	R0 K5 ; R0 := mSelected
	31	[14164]	GETTABLE 	R0 R0 K6 ; R0 := R0["Element"]
	32	[14164]	GETTABLE 	R0 R0 K9 ; R0 := R0["mCanUpgrade"]
	33	[14164]	TEST     	R0 0 ; if not R0 then PC := 60
	34	[14164]	JMP      	60 ; PC := 60
	35	[14165]	GETUPVAL 	R0 U3 ; R0 := U3
	36	[14165]	GETGLOBAL	R1 K5 ; R1 := mSelected
	37	[14165]	GETTABLE 	R1 R1 K6 ; R1 := R1["Element"]
	38	[14165]	GETTABLE 	R1 R1 K10 ; R1 := R1["Id"]
	39	[14165]	CALL     	R0 2 1 ; R0(R1)
	40	[14166]	JMP      	60 ; PC := 60
	41	[14167]	GETUPVAL 	R0 U1 ; R0 := U1
	42	[14167]	GETUPVAL 	R1 U2 ; R1 := U2
	43	[14167]	GETTABLE 	R1 R1 K11 ; R1 := R1["CUSTOMIZING_SKINS"]
	44	[14167]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 60
	45	[14167]	JMP      	60 ; PC := 60
	46	[14168]	GETGLOBAL	R0 K12 ; R0 := mButtons
	47	[14168]	GETTABLE 	R0 R0 K13 ; R0 := R0[5.000000]
	48	[14168]	GETTABLE 	R0 R0 K14 ; R0 := R0["mVisible"]
	49	[14168]	TEST     	R0 0 ; if not R0 then PC := 60
	50	[14168]	JMP      	60 ; PC := 60
	51	[14168]	GETGLOBAL	R0 K15 ; R0 := 0x34291f5c
	52	[14168]	GETTABLE 	R0 R0 K16 ; R0 := R0[0x1467d5f4]
	53	[14168]	CALL     	R0 1 2 ; R0 := R0()
	54	[14168]	TEST     	R0 0 ; if not R0 then PC := 60
	55	[14168]	JMP      	60 ; PC := 60
	56	[14169]	GETGLOBAL	R0 K12 ; R0 := mButtons
	57	[14169]	GETTABLE 	R0 R0 K13 ; R0 := R0[5.000000]
	58	[14169]	GETTABLE 	R0 R0 K17 ; R0 := R0[0x7ca0d7fa]
	59	[14169]	CALL     	R0 1 1 ; R0()
	60	[14173]	RETURN   	R0 1 ; return 

function #225 <?:14175,14179> (15 instructions, 60 bytes at 000002112AA1A2A0)
0 params, 3 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[14176]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14176]	CALL     	R0 1 2 ; R0 := R0()
	3	[14176]	TEST     	R0 1 ; if R0 then PC := 15
	4	[14176]	JMP      	15 ; PC := 15
	5	[14176]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[14176]	GETUPVAL 	R1 U2 ; R1 := U2
	7	[14176]	GETTABLE 	R1 R1 K0 ; R1 := R1["SWAPPING_ITEM"]
	8	[14176]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 15
	9	[14176]	JMP      	15 ; PC := 15
	10	[14177]	GETGLOBAL	R0 K1 ; R0 := mItemsGrid
	11	[14177]	GETTABLE 	R0 R0 K2 ; R0 := R0["mSortMenu"]
	12	[14177]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x32b02cab]
	13	[14177]	OP_LOADBOOL	R2 1 0 ; R2 := true
	14	[14177]	CALL     	R0 3 1 ; R0(R1,R2)
	15	[14179]	RETURN   	R0 1 ; return 

function #226 <?:14182,14188> (19 instructions, 76 bytes at 000002112AA1A420)
0 params, 2 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[14183]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14183]	CALL     	R0 1 2 ; R0 := R0()
	3	[14183]	TEST     	R0 1 ; if R0 then PC := 19
	4	[14183]	JMP      	19 ; PC := 19
	5	[14184]	GETGLOBAL	R0 K0 ; R0 := mButtons
	6	[14184]	GETGLOBAL	R1 K1 ; R1 := mButtonIndices
	7	[14184]	GETTABLE 	R1 R1 K2 ; R1 := R1["Rotate"]
	8	[14184]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	9	[14184]	GETTABLE 	R0 R0 K3 ; R0 := R0["mVisible"]
	10	[14184]	TEST     	R0 0 ; if not R0 then PC := 19
	11	[14184]	JMP      	19 ; PC := 19
	12	[14185]	GETGLOBAL	R0 K0 ; R0 := mButtons
	13	[14185]	GETGLOBAL	R1 K1 ; R1 := mButtonIndices
	14	[14185]	GETTABLE 	R1 R1 K2 ; R1 := R1["Rotate"]
	15	[14185]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	16	[14185]	GETTABLE 	R0 R0 K4 ; R0 := R0[0x7ca0d7fa]
	17	[14185]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[14185]	CALL     	R0 2 1 ; R0(R1)
	19	[14188]	RETURN   	R0 1 ; return 

function #227 <?:14190,14204> (65 instructions, 260 bytes at 000002112AA1A5D0)
0 params, 2 slots, 4 upvalues, 0 locals, 14 constants, 0 functions
	1	[14191]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14191]	CALL     	R0 1 2 ; R0 := R0()
	3	[14191]	TEST     	R0 1 ; if R0 then PC := 65
	4	[14191]	JMP      	65 ; PC := 65
	5	[14192]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[14192]	GETUPVAL 	R1 U2 ; R1 := U2
	7	[14192]	GETTABLE 	R1 R1 K0 ; R1 := R1["SELECTING_PART"]
	8	[14192]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 22
	9	[14192]	JMP      	22 ; PC := 22
	10	[14192]	GETGLOBAL	R0 K1 ; R0 := mSelected
	11	[14192]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	12	[14192]	EQ       	1 R0 K3 ; if R0 == nil then PC := 22
	13	[14192]	JMP      	22 ; PC := 22
	14	[14192]	GETGLOBAL	R0 K1 ; R0 := mSelected
	15	[14192]	GETTABLE 	R0 R0 K2 ; R0 := R0["Element"]
	16	[14192]	GETTABLE 	R0 R0 K4 ; R0 := R0["mAbilityButtonVisible"]
	17	[14192]	TEST     	R0 0 ; if not R0 then PC := 22
	18	[14192]	JMP      	22 ; PC := 22
	19	[14193]	GETUPVAL 	R0 U3 ; R0 := U3
	20	[14193]	CALL     	R0 1 1 ; R0()
	21	[14193]	JMP      	65 ; PC := 65
	22	[14194]	GETUPVAL 	R0 U1 ; R0 := U1
	23	[14194]	GETUPVAL 	R1 U2 ; R1 := U2
	24	[14194]	GETTABLE 	R1 R1 K5 ; R1 := R1["SWAPPING_ITEM"]
	25	[14194]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 32
	26	[14194]	JMP      	32 ; PC := 32
	27	[14194]	GETUPVAL 	R0 U1 ; R0 := U1
	28	[14194]	GETUPVAL 	R1 U2 ; R1 := U2
	29	[14194]	GETTABLE 	R1 R1 K6 ; R1 := R1["SELECTING_SKINS"]
	30	[14194]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 47
	31	[14194]	JMP      	47 ; PC := 47
	32	[14195]	GETGLOBAL	R0 K7 ; R0 := mButtons
	33	[14195]	GETGLOBAL	R1 K8 ; R1 := mButtonIndices
	34	[14195]	GETTABLE 	R1 R1 K9 ; R1 := R1["Rotate"]
	35	[14195]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	36	[14195]	GETTABLE 	R0 R0 K10 ; R0 := R0["mVisible"]
	37	[14195]	TEST     	R0 0 ; if not R0 then PC := 65
	38	[14195]	JMP      	65 ; PC := 65
	39	[14196]	GETGLOBAL	R0 K7 ; R0 := mButtons
	40	[14196]	GETGLOBAL	R1 K8 ; R1 := mButtonIndices
	41	[14196]	GETTABLE 	R1 R1 K9 ; R1 := R1["Rotate"]
	42	[14196]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	43	[14196]	GETTABLE 	R0 R0 K11 ; R0 := R0[0x7ca0d7fa]
	44	[14196]	OP_LOADBOOL	R1 0 0 ; R1 := false
	45	[14196]	CALL     	R0 2 1 ; R0(R1)
	46	[14197]	JMP      	65 ; PC := 65
	47	[14198]	GETUPVAL 	R0 U1 ; R0 := U1
	48	[14198]	GETUPVAL 	R1 U2 ; R1 := U2
	49	[14198]	GETTABLE 	R1 R1 K12 ; R1 := R1["CUSTOMIZING_SKINS"]
	50	[14198]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 65
	51	[14198]	JMP      	65 ; PC := 65
	52	[14199]	GETGLOBAL	R0 K7 ; R0 := mButtons
	53	[14199]	GETGLOBAL	R1 K8 ; R1 := mButtonIndices
	54	[14199]	GETTABLE 	R1 R1 K13 ; R1 := R1["SuitAppearance"]
	55	[14199]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	56	[14199]	GETTABLE 	R0 R0 K10 ; R0 := R0["mVisible"]
	57	[14199]	TEST     	R0 0 ; if not R0 then PC := 65
	58	[14199]	JMP      	65 ; PC := 65
	59	[14200]	GETGLOBAL	R0 K7 ; R0 := mButtons
	60	[14200]	GETGLOBAL	R1 K8 ; R1 := mButtonIndices
	61	[14200]	GETTABLE 	R1 R1 K13 ; R1 := R1["SuitAppearance"]
	62	[14200]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	63	[14200]	GETTABLE 	R0 R0 K11 ; R0 := R0[0x7ca0d7fa]
	64	[14200]	CALL     	R0 1 1 ; R0()
	65	[14204]	RETURN   	R0 1 ; return 

function #228 <?:14206,14218> (68 instructions, 272 bytes at 000002112AA1A990)
0 params, 3 slots, 3 upvalues, 0 locals, 9 constants, 0 functions
	1	[14207]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14207]	CALL     	R0 1 2 ; R0 := R0()
	3	[14207]	TEST     	R0 1 ; if R0 then PC := 68
	4	[14207]	JMP      	68 ; PC := 68
	5	[14208]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[14208]	GETTABLE 	R0 R0 K0 ; R0 := R0["mVisible"]
	7	[14208]	TEST     	R0 0 ; if not R0 then PC := 13
	8	[14208]	JMP      	13 ; PC := 13
	9	[14209]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[14209]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xa0ade61f]
	11	[14209]	CALL     	R0 2 1 ; R0(R1)
	12	[14209]	JMP      	68 ; PC := 68
	13	[14210]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	14	[14210]	GETGLOBAL	R1 K3 ; R1 := mButtons
	15	[14210]	GETGLOBAL	R2 K4 ; R2 := mButtonIndices
	16	[14210]	GETTABLE 	R2 R2 K5 ; R2 := R2["PvpTeam"]
	17	[14210]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	18	[14210]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[14210]	TEST     	R0 1 ; if R0 then PC := 35
	20	[14210]	JMP      	35 ; PC := 35
	21	[14210]	GETGLOBAL	R0 K3 ; R0 := mButtons
	22	[14210]	GETGLOBAL	R1 K4 ; R1 := mButtonIndices
	23	[14210]	GETTABLE 	R1 R1 K5 ; R1 := R1["PvpTeam"]
	24	[14210]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	25	[14210]	GETTABLE 	R0 R0 K0 ; R0 := R0["mVisible"]
	26	[14210]	TEST     	R0 0 ; if not R0 then PC := 35
	27	[14210]	JMP      	35 ; PC := 35
	28	[14211]	GETGLOBAL	R0 K3 ; R0 := mButtons
	29	[14211]	GETGLOBAL	R1 K4 ; R1 := mButtonIndices
	30	[14211]	GETTABLE 	R1 R1 K5 ; R1 := R1["PvpTeam"]
	31	[14211]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	32	[14211]	GETTABLE 	R0 R0 K6 ; R0 := R0[0x7ca0d7fa]
	33	[14211]	CALL     	R0 1 1 ; R0()
	34	[14211]	JMP      	68 ; PC := 68
	35	[14212]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	36	[14212]	GETGLOBAL	R1 K3 ; R1 := mButtons
	37	[14212]	GETGLOBAL	R2 K4 ; R2 := mButtonIndices
	38	[14212]	GETTABLE 	R2 R2 K7 ; R2 := R2["Mode"]
	39	[14212]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	40	[14212]	CALL     	R0 2 2 ; R0 := R0(R1)
	41	[14212]	TEST     	R0 1 ; if R0 then PC := 53
	42	[14212]	JMP      	53 ; PC := 53
	43	[14212]	GETGLOBAL	R0 K3 ; R0 := mButtons
	44	[14212]	GETGLOBAL	R1 K4 ; R1 := mButtonIndices
	45	[14212]	GETTABLE 	R1 R1 K7 ; R1 := R1["Mode"]
	46	[14212]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	47	[14212]	GETTABLE 	R0 R0 K0 ; R0 := R0["mVisible"]
	48	[14212]	TEST     	R0 0 ; if not R0 then PC := 53
	49	[14212]	JMP      	53 ; PC := 53
	50	[14213]	GETUPVAL 	R0 U2 ; R0 := U2
	51	[14213]	CALL     	R0 1 1 ; R0()
	52	[14213]	JMP      	68 ; PC := 68
	53	[14214]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	54	[14214]	GETGLOBAL	R1 K3 ; R1 := mButtons
	55	[14214]	GETTABLE 	R1 R1 K8 ; R1 := R1[8.000000]
	56	[14214]	CALL     	R0 2 2 ; R0 := R0(R1)
	57	[14214]	TEST     	R0 1 ; if R0 then PC := 68
	58	[14214]	JMP      	68 ; PC := 68
	59	[14214]	GETGLOBAL	R0 K3 ; R0 := mButtons
	60	[14214]	GETTABLE 	R0 R0 K8 ; R0 := R0[8.000000]
	61	[14214]	GETTABLE 	R0 R0 K0 ; R0 := R0["mVisible"]
	62	[14214]	TEST     	R0 0 ; if not R0 then PC := 68
	63	[14214]	JMP      	68 ; PC := 68
	64	[14215]	GETGLOBAL	R0 K3 ; R0 := mButtons
	65	[14215]	GETTABLE 	R0 R0 K8 ; R0 := R0[8.000000]
	66	[14215]	GETTABLE 	R0 R0 K6 ; R0 := R0[0x7ca0d7fa]
	67	[14215]	CALL     	R0 1 1 ; R0()
	68	[14218]	RETURN   	R0 1 ; return 

function #229 <?:14220,14241> (64 instructions, 256 bytes at 000002112AA1AD00)
2 params, 13 slots, 0 upvalues, 0 locals, 20 constants, 0 functions
	1	[14221]	LOADK    	R2 := 0.000000
	2	[14221]	LOADK    	R3 := 4.000000
	3	[14221]	LOADK    	R4 := 1.000000
	4	[14221]	FORPREP  	R2 63 ; R2 -= R4; PC := 63
	5	[14222]	SELF     	R6 R0 K1 ; R7 := R0; R6 := R0[0x8e62760a]
	6	[14222]	MOVE     	R8 R5 ; R8 := R5
	7	[14222]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	8	[14223]	EQ       	0 R5 K2 ; if R5 ~= 0.000000 then PC := 59
	9	[14223]	JMP      	59 ; PC := 59
	10	[14223]	GETGLOBAL	R7 K3 ; R7 := _T
	11	[14223]	GETTABLE 	R7 R7 K4 ; R7 := R7["mSpecialSuitMode"]
	12	[14223]	TEST     	R7 1 ; if R7 then PC := 59
	13	[14223]	JMP      	59 ; PC := 59
	14	[14224]	GETGLOBAL	R7 K5 ; R7 := mSelected
	15	[14224]	GETTABLE 	R7 R7 K6 ; R7 := R7["Element"]
	16	[14224]	GETTABLE 	R7 R7 K7 ; R7 := R7["LoadOutId"]
	17	[14224]	EQ       	1 R7 K8 ; if R7 == 5.000000 then PC := 24
	18	[14224]	JMP      	24 ; PC := 24
	19	[14224]	GETGLOBAL	R7 K5 ; R7 := mSelected
	20	[14224]	GETTABLE 	R7 R7 K6 ; R7 := R7["Element"]
	21	[14224]	GETTABLE 	R7 R7 K7 ; R7 := R7["LoadOutId"]
	22	[14224]	EQ       	0 R7 K9 ; if R7 ~= 6.000000 then PC := 59
	23	[14224]	JMP      	59 ; PC := 59
	24	[14226]	GETGLOBAL	R7 K3 ; R7 := _T
	25	[14226]	GETTABLE 	R7 R7 K10 ; R7 := R7["MenuSuitAvatar"]
	26	[14226]	SELF     	R7 R7 K11 ; R8 := R7; R7 := R7[0xde321e6f]
	27	[14226]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[14226]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0xf7d48ee0]
	29	[14226]	CALL     	R7 2 2 ; R7 := R7(R8)
	30	[14227]	GETGLOBAL	R8 K13 ; R8 := 0x7b998233
	31	[14227]	MOVE     	R9 R7 ; R9 := R7
	32	[14227]	CALL     	R8 2 2 ; R8 := R8(R9)
	33	[14227]	TEST     	R8 1 ; if R8 then PC := 59
	34	[14227]	JMP      	59 ; PC := 59
	35	[14228]	GETGLOBAL	R8 K14 ; R8 := 0x60130201
	36	[14228]	CALL     	R8 1 2 ; R8 := R8()
	37	[14229]	SELF     	R9 R7 K15 ; R10 := R7; R9 := R7[0xa3ef5d65]
	38	[14229]	MOVE     	R11 R8 ; R11 := R8
	39	[14229]	OP_LOADBOOL	R12 0 0 ; R12 := false
	40	[14229]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	41	[14229]	TEST     	R9 0 ; if not R9 then PC := 48
	42	[14229]	JMP      	48 ; PC := 48
	43	[14230]	SETTABLE 	R6 K16 R8 ; R6["mEnergyColor"] := R8
	44	[14231]	SELF     	R9 R6 K17 ; R10 := R6; R9 := R6[0xfc5d7158]
	45	[14231]	LOADK    	R11 := 6.000000
	46	[14231]	OP_LOADBOOL	R12 1 0 ; R12 := true
	47	[14231]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	48	[14233]	SELF     	R9 R7 K15 ; R10 := R7; R9 := R7[0xa3ef5d65]
	49	[14233]	MOVE     	R11 R8 ; R11 := R8
	50	[14233]	OP_LOADBOOL	R12 1 0 ; R12 := true
	51	[14233]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	52	[14233]	TEST     	R9 0 ; if not R9 then PC := 59
	53	[14233]	JMP      	59 ; PC := 59
	54	[14234]	SETTABLE 	R6 K18 R8 ; R6["mEnergyColor1"] := R8
	55	[14235]	SELF     	R9 R6 K17 ; R10 := R6; R9 := R6[0xfc5d7158]
	56	[14235]	LOADK    	R11 := 7.000000
	57	[14235]	OP_LOADBOOL	R12 1 0 ; R12 := true
	58	[14235]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	59	[14239]	SELF     	R9 R1 K19 ; R10 := R1; R9 := R1[0x199edf6e]
	60	[14239]	MOVE     	R11 R5 ; R11 := R5
	61	[14239]	MOVE     	R12 R6 ; R12 := R6
	62	[14239]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	63	[14221]	FORLOOP  	R2 5 ; R2 += R4; if R2 <= R3 then begin PC := 5; R5 := R2 end
	64	[14241]	RETURN   	R0 1 ; return 

function #230 <?:14243,14301> (183 instructions, 732 bytes at 000002112AA1B100)
2 params, 10 slots, 14 upvalues, 0 locals, 44 constants, 0 functions
	1	[14246]	GETGLOBAL	R3 K0 ; R3 := mSelected
	2	[14246]	GETTABLE 	R3 R3 K1 ; R3 := R3["Element"]
	3	[14246]	EQ       	1 R3 K2 ; if R3 == nil then PC := 14
	4	[14246]	JMP      	14 ; PC := 14
	5	[14247]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[14247]	GETGLOBAL	R4 K0 ; R4 := mSelected
	7	[14247]	GETTABLE 	R4 R4 K1 ; R4 := R4["Element"]
	8	[14247]	GETTABLE 	R4 R4 K3 ; R4 := R4["LoadOutType"]
	9	[14247]	GETGLOBAL	R5 K0 ; R5 := mSelected
	10	[14247]	GETTABLE 	R5 R5 K1 ; R5 := R5["Element"]
	11	[14247]	GETTABLE 	R5 R5 K4 ; R5 := R5["LoadOutId"]
	12	[14247]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	13	[14247]	MOVE     	R2 R3 ; R2 := R3
	14	[14249]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	15	[14249]	MOVE     	R4 R2 ; R4 := R2
	16	[14249]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[14249]	TEST     	R3 1 ; if R3 then PC := 57
	18	[14249]	JMP      	57 ; PC := 57
	19	[14250]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x68d708a7]
	20	[14250]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[14251]	GETGLOBAL	R4 K5 ; R4 := 0x7b998233
	22	[14251]	MOVE     	R5 R1 ; R5 := R1
	23	[14251]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[14251]	TEST     	R4 1 ; if R4 then PC := 37
	25	[14251]	JMP      	37 ; PC := 37
	26	[14252]	GETGLOBAL	R4 K0 ; R4 := mSelected
	27	[14252]	GETTABLE 	R4 R4 K1 ; R4 := R4["Element"]
	28	[14252]	GETTABLE 	R4 R4 K7 ; R4 := R4["EquippedItem"]
	29	[14252]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x68d708a7]
	30	[14252]	MOVE     	R6 R1 ; R6 := R1
	31	[14252]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	32	[14253]	GETUPVAL 	R5 U1 ; R5 := U1
	33	[14253]	MOVE     	R6 R4 ; R6 := R4
	34	[14253]	MOVE     	R7 R3 ; R7 := R3
	35	[14253]	CALL     	R5 3 1 ; R5(R6,R7)
	36	[14253]	JMP      	43 ; PC := 43
	37	[14255]	GETUPVAL 	R5 U1 ; R5 := U1
	38	[14255]	GETGLOBAL	R6 K0 ; R6 := mSelected
	39	[14255]	GETTABLE 	R6 R6 K1 ; R6 := R6["Element"]
	40	[14255]	GETTABLE 	R6 R6 K8 ; R6 := R6["Customization"]
	41	[14255]	MOVE     	R7 R3 ; R7 := R3
	42	[14255]	CALL     	R5 3 1 ; R5(R6,R7)
	43	[14257]	SELF     	R5 R2 K9 ; R6 := R2; R5 := R2[0xaa041663]
	44	[14257]	MOVE     	R7 R3 ; R7 := R3
	45	[14257]	CALL     	R5 3 1 ; R5(R6,R7)
	46	[14258]	GETGLOBAL	R5 K10 ; R5 := 0x25d99d89
	47	[14258]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x400b84a1]
	48	[14258]	GETGLOBAL	R7 K0 ; R7 := mSelected
	49	[14258]	GETTABLE 	R7 R7 K1 ; R7 := R7["Element"]
	50	[14258]	GETTABLE 	R7 R7 K3 ; R7 := R7["LoadOutType"]
	51	[14258]	GETGLOBAL	R8 K12 ; R8 := mCurrentLoadout
	52	[14258]	GETGLOBAL	R9 K0 ; R9 := mSelected
	53	[14258]	GETTABLE 	R9 R9 K1 ; R9 := R9["Element"]
	54	[14258]	GETTABLE 	R9 R9 K3 ; R9 := R9["LoadOutType"]
	55	[14258]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	56	[14258]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	57	[14261]	GETGLOBAL	R5 K13 ; R5 := mCameraTable
	58	[14261]	SETTABLE 	R5 K14 K15 ; R5["attenFov"] := 1.000000
	59	[14262]	GETGLOBAL	R5 K13 ; R5 := mCameraTable
	60	[14262]	GETGLOBAL	R6 K17 ; R6 := 0x00046924
	61	[14262]	CALL     	R6 1 2 ; R6 := R6()
	62	[14262]	SETTABLE 	R5 K16 R6 ; R5[0x00003816] := R6
	63	[14263]	GETUPVAL 	R5 U2 ; R5 := U2
	64	[14263]	GETUPVAL 	R6 U3 ; R6 := U3
	65	[14263]	GETTABLE 	R6 R6 K18 ; R6 := R6["FALSE"]
	66	[14263]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 166
	67	[14263]	JMP      	166 ; PC := 166
	68	[14264]	GETGLOBAL	R5 K19 ; R5 := _T
	69	[14264]	GETTABLE 	R5 R5 K20 ; R5 := R5["MenuSuitAvatar"]
	70	[14266]	GETGLOBAL	R6 K5 ; R6 := 0x7b998233
	71	[14266]	GETGLOBAL	R7 K10 ; R7 := 0x25d99d89
	72	[14266]	CALL     	R6 2 2 ; R6 := R6(R7)
	73	[14266]	TEST     	R6 1 ; if R6 then PC := 124
	74	[14266]	JMP      	124 ; PC := 124
	75	[14266]	GETGLOBAL	R6 K5 ; R6 := 0x7b998233
	76	[14266]	MOVE     	R7 R5 ; R7 := R5
	77	[14266]	CALL     	R6 2 2 ; R6 := R6(R7)
	78	[14266]	TEST     	R6 1 ; if R6 then PC := 124
	79	[14266]	JMP      	124 ; PC := 124
	80	[14267]	SELF     	R6 R5 K21 ; R7 := R5; R6 := R5[0xde321e6f]
	81	[14267]	CALL     	R6 2 2 ; R6 := R6(R7)
	82	[14267]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0x374b084a]
	83	[14267]	CALL     	R6 2 1 ; R6(R7)
	84	[14268]	GETUPVAL 	R6 U4 ; R6 := U4
	85	[14268]	GETUPVAL 	R7 U5 ; R7 := U5
	86	[14268]	GETTABLE 	R7 R7 K23 ; R7 := R7["Current"]
	87	[14268]	EQ       	1 R7 K25 ; if R7 == 2.000000 then PC := 90
	88	[14268]	JMP      	90 ; PC := 90
	89	[14268]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 90
	90	[14268]	OP_LOADBOOL	R7 1 0 ; R7 := true
	91	[14268]	CALL     	R6 2 1 ; R6(R7)
	92	[14269]	GETGLOBAL	R6 K5 ; R6 := 0x7b998233
	93	[14269]	GETUPVAL 	R7 U6 ; R7 := U6
	94	[14269]	CALL     	R6 2 2 ; R6 := R6(R7)
	95	[14269]	TEST     	R6 0 ; if not R6 then PC := 101
	96	[14269]	JMP      	101 ; PC := 101
	97	[14270]	SELF     	R6 R5 K21 ; R7 := R5; R6 := R5[0xde321e6f]
	98	[14270]	CALL     	R6 2 2 ; R6 := R6(R7)
	99	[14270]	SELF     	R6 R6 K26 ; R7 := R6; R6 := R6[0x0c277ae1]
	100	[14270]	CALL     	R6 2 1 ; R6(R7)
	101	[14273]	GETUPVAL 	R6 U7 ; R6 := U7
	102	[14273]	CALL     	R6 1 2 ; R6 := R6()
	103	[14273]	TEST     	R6 1 ; if R6 then PC := 124
	104	[14273]	JMP      	124 ; PC := 124
	105	[14273]	GETGLOBAL	R6 K19 ; R6 := _T
	106	[14273]	GETTABLE 	R6 R6 K27 ; R6 := R6["mSentinelMode"]
	107	[14273]	TEST     	R6 0 ; if not R6 then PC := 124
	108	[14273]	JMP      	124 ; PC := 124
	109	[14273]	GETGLOBAL	R6 K10 ; R6 := 0x25d99d89
	110	[14273]	SELF     	R6 R6 K28 ; R7 := R6; R6 := R6[0x3c6b0324]
	111	[14273]	CALL     	R6 2 2 ; R6 := R6(R7)
	112	[14273]	TEST     	R6 1 ; if R6 then PC := 119
	113	[14273]	JMP      	119 ; PC := 119
	114	[14273]	GETGLOBAL	R6 K10 ; R6 := 0x25d99d89
	115	[14273]	SELF     	R6 R6 K29 ; R7 := R6; R6 := R6[0x9f91f49d]
	116	[14273]	CALL     	R6 2 2 ; R6 := R6(R7)
	117	[14273]	TEST     	R6 0 ; if not R6 then PC := 124
	118	[14273]	JMP      	124 ; PC := 124
	119	[14274]	LOADK    	R6 := 1.000000
	120	[14274]	SETUPVAL 	R6 U8 ; U8 := R6
	121	[14275]	GETUPVAL 	R6 U9 ; R6 := U9
	122	[14275]	GETTABLE 	R6 R6 K30 ; R6 := R6[0xd4c67576]
	123	[14275]	CALL     	R6 1 1 ; R6()
	124	[14279]	GETUPVAL 	R6 U5 ; R6 := U5
	125	[14279]	GETTABLE 	R6 R6 K23 ; R6 := R6["Current"]
	126	[14279]	EQ       	1 R6 K31 ; if R6 == 3.000000 then PC := 132
	127	[14279]	JMP      	132 ; PC := 132
	128	[14279]	GETUPVAL 	R6 U5 ; R6 := U5
	129	[14279]	GETTABLE 	R6 R6 K23 ; R6 := R6["Current"]
	130	[14279]	EQ       	0 R6 K25 ; if R6 ~= 2.000000 then PC := 138
	131	[14279]	JMP      	138 ; PC := 138
	132	[14280]	GETGLOBAL	R6 K19 ; R6 := _T
	133	[14280]	GETTABLE 	R6 R6 K32 ; R6 := R6["suitTable"]
	134	[14280]	GETGLOBAL	R7 K19 ; R7 := _T
	135	[14280]	GETTABLE 	R7 R7 K34 ; R7 := R7["ARCHWING_DEFAULT_ROTATION"]
	136	[14280]	SETTABLE 	R6 K33 R7 ; R6[0x0032441c] := R7
	137	[14280]	JMP      	143 ; PC := 143
	138	[14282]	GETGLOBAL	R6 K19 ; R6 := _T
	139	[14282]	GETTABLE 	R6 R6 K32 ; R6 := R6["suitTable"]
	140	[14282]	GETGLOBAL	R7 K19 ; R7 := _T
	141	[14282]	GETTABLE 	R7 R7 K35 ; R7 := R7["DEFAULT_SUIT_ROTATION"]
	142	[14282]	SETTABLE 	R6 K33 R7 ; R6[0x0032441c] := R7
	143	[14284]	GETGLOBAL	R6 K19 ; R6 := _T
	144	[14284]	GETTABLE 	R6 R6 K32 ; R6 := R6["suitTable"]
	145	[14284]	GETGLOBAL	R7 K19 ; R7 := _T
	146	[14284]	GETTABLE 	R7 R7 K32 ; R7 := R7["suitTable"]
	147	[14284]	GETTABLE 	R7 R7 K33 ; R7 := R7["desiredRot"]
	148	[14284]	SETTABLE 	R6 K36 R7 ; R6["lerpRot"] := R7
	149	[14285]	GETGLOBAL	R6 K19 ; R6 := _T
	150	[14285]	GETTABLE 	R6 R6 K32 ; R6 := R6["suitTable"]
	151	[14285]	GETGLOBAL	R7 K17 ; R7 := 0x00046924
	152	[14285]	CALL     	R7 1 2 ; R7 := R7()
	153	[14285]	SETTABLE 	R6 K37 R7 ; R6["lerpHead"] := R7
	154	[14287]	GETUPVAL 	R6 U3 ; R6 := U3
	155	[14287]	GETTABLE 	R6 R6 K18 ; R6 := R6["FALSE"]
	156	[14287]	SETUPVAL 	R6 U2 ; U2 := R6
	157	[14288]	GETGLOBAL	R6 K13 ; R6 := mCameraTable
	158	[14288]	SETTABLE 	R6 K38 K39 ; R6["ConstantUpdate"] := false
	159	[14289]	GETGLOBAL	R6 K13 ; R6 := mCameraTable
	160	[14289]	GETGLOBAL	R7 K13 ; R7 := mCameraTable
	161	[14289]	GETTABLE 	R7 R7 K41 ; R7 := R7["zoomMin"]
	162	[14289]	SETTABLE 	R6 K40 R7 ; R6["destPos"] := R7
	163	[14290]	GETUPVAL 	R6 U9 ; R6 := U9
	164	[14290]	GETTABLE 	R6 R6 K42 ; R6 := R6[0x7027aec6]
	165	[14290]	CALL     	R6 1 1 ; R6()
	166	[14293]	TEST     	R0 0 ; if not R0 then PC := 183
	167	[14293]	JMP      	183 ; PC := 183
	168	[14295]	GETUPVAL 	R6 U10 ; R6 := U10
	169	[14295]	GETUPVAL 	R7 U11 ; R7 := U11
	170	[14295]	GETTABLE 	R7 R7 K43 ; R7 := R7["SELECTING_PART"]
	171	[14295]	CALL     	R6 2 1 ; R6(R7)
	172	[14296]	GETGLOBAL	R6 K0 ; R6 := mSelected
	173	[14296]	GETTABLE 	R6 R6 K1 ; R6 := R6["Element"]
	174	[14296]	EQ       	1 R6 K2 ; if R6 == nil then PC := 180
	175	[14296]	JMP      	180 ; PC := 180
	176	[14297]	GETUPVAL 	R6 U12 ; R6 := U12
	177	[14297]	GETGLOBAL	R7 K0 ; R7 := mSelected
	178	[14297]	GETTABLE 	R7 R7 K1 ; R7 := R7["Element"]
	179	[14297]	CALL     	R6 2 1 ; R6(R7)
	180	[14299]	GETUPVAL 	R6 U13 ; R6 := U13
	181	[14299]	OP_LOADBOOL	R7 0 0 ; R7 := false
	182	[14299]	CALL     	R6 2 1 ; R6(R7)
	183	[14301]	RETURN   	R0 1 ; return 

function #231 <?:14303,14503> (580 instructions, 2320 bytes at 000002112AA1BA40)
0 params, 19 slots, 29 upvalues, 0 locals, 90 constants, 1 function
	1	[14304]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14304]	CALL     	R0 1 2 ; R0 := R0()
	3	[14304]	TEST     	R0 1 ; if R0 then PC := 580
	4	[14304]	JMP      	580 ; PC := 580
	5	[14304]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	6	[14304]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	7	[14304]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[14304]	TEST     	R0 1 ; if R0 then PC := 580
	9	[14304]	JMP      	580 ; PC := 580
	10	[14305]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[14305]	GETUPVAL 	R1 U2 ; R1 := U2
	12	[14305]	GETTABLE 	R1 R1 K2 ; R1 := R1["SELECTING_PART"]
	13	[14305]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 69
	14	[14305]	JMP      	69 ; PC := 69
	15	[14306]	GETUPVAL 	R0 U3 ; R0 := U3
	16	[14306]	GETTABLE 	R0 R0 K3 ; R0 := R0["Current"]
	17	[14306]	EQ       	1 R0 K5 ; if R0 == 3.000000 then PC := 23
	18	[14306]	JMP      	23 ; PC := 23
	19	[14306]	GETUPVAL 	R0 U3 ; R0 := U3
	20	[14306]	GETTABLE 	R0 R0 K3 ; R0 := R0["Current"]
	21	[14306]	EQ       	0 R0 K6 ; if R0 ~= 2.000000 then PC := 66
	22	[14306]	JMP      	66 ; PC := 66
	23	[14307]	GETUPVAL 	R0 U3 ; R0 := U3
	24	[14307]	GETTABLE 	R0 R0 K3 ; R0 := R0["Current"]
	25	[14307]	EQ       	0 R0 K6 ; if R0 ~= 2.000000 then PC := 55
	26	[14307]	JMP      	55 ; PC := 55
	27	[14307]	GETGLOBAL	R0 K7 ; R0 := _T
	28	[14307]	GETTABLE 	R0 R0 K8 ; R0 := R0["ArsenalPvPOnlyReturnConsole"]
	29	[14307]	EQ       	1 R0 K9 ; if R0 == nil then PC := 55
	30	[14307]	JMP      	55 ; PC := 55
	31	[14310]	GETUPVAL 	R0 U4 ; R0 := U4
	32	[14310]	GETTABLE 	R0 R0 K10 ; R0 := R0[0xa9882367]
	33	[14310]	GETGLOBAL	R1 K7 ; R1 := _T
	34	[14310]	GETTABLE 	R1 R1 K8 ; R1 := R1["ArsenalPvPOnlyReturnConsole"]
	35	[14310]	CALL     	R0 2 2 ; R0 := R0(R1)
	36	[14311]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	37	[14311]	MOVE     	R2 R0 ; R2 := R0
	38	[14311]	CALL     	R1 2 2 ; R1 := R1(R2)
	39	[14311]	TEST     	R1 1 ; if R1 then PC := 52
	40	[14311]	JMP      	52 ; PC := 52
	41	[14312]	GETGLOBAL	R1 K7 ; R1 := _T
	42	[14312]	SETTABLE 	R1 K11 K12 ; R1["triggeredConsoleTag"] := "Conclave"
	43	[14313]	GETGLOBAL	R1 K7 ; R1 := _T
	44	[14313]	SETTABLE 	R1 K13 K14 ; R1["previousConsoleTag"] := "Arsenal"
	45	[14314]	GETUPVAL 	R1 U4 ; R1 := U4
	46	[14314]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xa9882367]
	47	[14314]	LOADK    	R2 K15 ; R2 := "ConsoleTeleportAndActivate"
	48	[14314]	CALL     	R1 2 2 ; R1 := R1(R2)
	49	[14314]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0xd91e1179]
	50	[14314]	CALL     	R1 2 1 ; R1(R2)
	51	[14314]	JMP      	580 ; PC := 580
	52	[14317]	GETUPVAL 	R1 U5 ; R1 := U5
	53	[14317]	CALL     	R1 1 1 ; R1()
	54	[14318]	JMP      	580 ; PC := 580
	55	[14320]	GETGLOBAL	R1 K17 ; R1 := mLists
	56	[14320]	GETTABLE 	R1 R1 K18 ; R1 := R1["mLoadOutCategories"]
	57	[14320]	GETGLOBAL	R2 K17 ; R2 := mLists
	58	[14320]	GETTABLE 	R2 R2 K18 ; R2 := R2["mLoadOutCategories"]
	59	[14320]	GETTABLE 	R2 R2 K20 ; R2 := R2["mStates"]
	60	[14320]	GETTABLE 	R2 R2 K21 ; R2 := R2["TENNO"]
	61	[14320]	SETTABLE 	R1 K19 R2 ; R1["mState"] := R2
	62	[14321]	GETUPVAL 	R1 U6 ; R1 := U6
	63	[14321]	LOADK    	R2 := 1.000000
	64	[14321]	CALL     	R1 2 1 ; R1(R2)
	65	[14322]	JMP      	580 ; PC := 580
	66	[14324]	GETUPVAL 	R1 U5 ; R1 := U5
	67	[14324]	CALL     	R1 1 1 ; R1()
	68	[14325]	JMP      	580 ; PC := 580
	69	[14326]	GETUPVAL 	R1 U1 ; R1 := U1
	70	[14326]	GETUPVAL 	R2 U2 ; R2 := U2
	71	[14326]	GETTABLE 	R2 R2 K22 ; R2 := R2["BROWSING_WAY_TREE"]
	72	[14326]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 121
	73	[14326]	JMP      	121 ; PC := 121
	74	[14327]	GETUPVAL 	R1 U7 ; R1 := U7
	75	[14327]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0x6bfeac2e]
	76	[14327]	CALL     	R1 2 1 ; R1(R2)
	77	[14328]	GETUPVAL 	R1 U8 ; R1 := U8
	78	[14328]	GETUPVAL 	R2 U2 ; R2 := U2
	79	[14328]	GETTABLE 	R2 R2 K2 ; R2 := R2["SELECTING_PART"]
	80	[14328]	CALL     	R1 2 1 ; R1(R2)
	81	[14329]	GETGLOBAL	R1 K24 ; R1 := mSelected
	82	[14329]	GETTABLE 	R1 R1 K25 ; R1 := R1["Element"]
	83	[14329]	EQ       	1 R1 K9 ; if R1 == nil then PC := 89
	84	[14329]	JMP      	89 ; PC := 89
	85	[14330]	GETUPVAL 	R1 U9 ; R1 := U9
	86	[14330]	GETGLOBAL	R2 K24 ; R2 := mSelected
	87	[14330]	GETTABLE 	R2 R2 K25 ; R2 := R2["Element"]
	88	[14330]	CALL     	R1 2 1 ; R1(R2)
	89	[14332]	GETUPVAL 	R1 U10 ; R1 := U10
	90	[14332]	OP_LOADBOOL	R2 0 0 ; R2 := false
	91	[14332]	CALL     	R1 2 1 ; R1(R2)
	92	[14333]	GETGLOBAL	R1 K17 ; R1 := mLists
	93	[14333]	GETTABLE 	R1 R1 K26 ; R1 := R1["mLoadOutList"]
	94	[14333]	GETTABLE 	R1 R1 K27 ; R1 := R1["FocusSlotId"]
	95	[14333]	EQ       	1 R1 K9 ; if R1 == nil then PC := 115
	96	[14333]	JMP      	115 ; PC := 115
	97	[14334]	GETGLOBAL	R1 K17 ; R1 := mLists
	98	[14334]	GETTABLE 	R1 R1 K26 ; R1 := R1["mLoadOutList"]
	99	[14334]	SELF     	R1 R1 K28 ; R2 := R1; R1 := R1[0xca30dfb6]
	100	[14334]	GETGLOBAL	R3 K17 ; R3 := mLists
	101	[14334]	GETTABLE 	R3 R3 K26 ; R3 := R3["mLoadOutList"]
	102	[14334]	GETTABLE 	R3 R3 K27 ; R3 := R3["FocusSlotId"]
	103	[14334]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	104	[14335]	GETGLOBAL	R2 K29 ; R2 := mCurrentLoadout
	105	[14335]	GETTABLE 	R3 R1 K30 ; R3 := R1["LoadOutType"]
	106	[14335]	GETGLOBAL	R4 K31 ; R4 := mInventory
	107	[14335]	SELF     	R4 R4 K32 ; R5 := R4; R4 := R4[0x566259e1]
	108	[14335]	GETTABLE 	R6 R1 K30 ; R6 := R1["LoadOutType"]
	109	[14335]	GETGLOBAL	R7 K31 ; R7 := mInventory
	110	[14335]	SELF     	R7 R7 K33 ; R8 := R7; R7 := R7[0x4e457768]
	111	[14335]	GETTABLE 	R9 R1 K30 ; R9 := R1["LoadOutType"]
	112	[14335]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	113	[14335]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	114	[14335]	SETTABLE 	R2 R3 R4 ; R2[R3] := R4
	115	[14337]	GETGLOBAL	R2 K34 ; R2 := 0xae91e43b
	116	[14337]	SELF     	R2 R2 K35 ; R3 := R2; R2 := R2[0xe4162eed]
	117	[14337]	LOADK    	R4 K36 ; R4 := "UpdateFocusSlot"
	118	[14337]	LOADK    	R5 K37 ; R5 := ""
	119	[14337]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	120	[14337]	JMP      	580 ; PC := 580
	121	[14338]	GETUPVAL 	R2 U1 ; R2 := U1
	122	[14338]	GETUPVAL 	R3 U2 ; R3 := U2
	123	[14338]	GETTABLE 	R3 R3 K38 ; R3 := R3["SWAPPING_ITEM"]
	124	[14338]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 136
	125	[14338]	JMP      	136 ; PC := 136
	126	[14338]	GETUPVAL 	R2 U1 ; R2 := U1
	127	[14338]	GETUPVAL 	R3 U2 ; R3 := U2
	128	[14338]	GETTABLE 	R3 R3 K39 ; R3 := R3["CUSTOMIZING_SKINS"]
	129	[14338]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 136
	130	[14338]	JMP      	136 ; PC := 136
	131	[14338]	GETUPVAL 	R2 U1 ; R2 := U1
	132	[14338]	GETUPVAL 	R3 U2 ; R3 := U2
	133	[14338]	GETTABLE 	R3 R3 K40 ; R3 := R3["BROWSING_CONSUMABLES"]
	134	[14338]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 483
	135	[14338]	JMP      	483 ; PC := 483
	136	[14339]	GETUPVAL 	R2 U1 ; R2 := U1
	137	[14339]	GETUPVAL 	R3 U2 ; R3 := U2
	138	[14339]	GETTABLE 	R3 R3 K40 ; R3 := R3["BROWSING_CONSUMABLES"]
	139	[14339]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 195
	140	[14339]	JMP      	195 ; PC := 195
	141	[14340]	GETGLOBAL	R2 K41 ; R2 := mConsumablesChanged
	142	[14340]	TEST     	R2 0 ; if not R2 then PC := 171
	143	[14340]	JMP      	171 ; PC := 171
	144	[14341]	OP_LOADBOOL	R2 0 0 ; R2 := false
	145	[14341]	SETGLOBALHASH	R2 K41 ; mConsumablesChanged := R2
	146	[14342]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	147	[14342]	SELF     	R2 R2 K42 ; R3 := R2; R2 := R2[0x369c59f1]
	148	[14342]	CALL     	R2 2 1 ; R2(R3)
	149	[14344]	GETGLOBAL	R2 K7 ; R2 := _T
	150	[14344]	GETTABLE 	R2 R2 K43 ; R2 := R2["ConsumablesElements"]
	151	[14345]	LOADK    	R3 := 1.000000
	152	[14345]	LEN      	R4 R2 ; R4 := # R2
	153	[14345]	LOADK    	R5 := 1.000000
	154	[14345]	FORPREP  	R3 164 ; R3 -= R5; PC := 164
	155	[14346]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	156	[14346]	GETTABLE 	R7 R7 K44 ; R7 := R7["mInsertElementButton"]
	157	[14346]	TEST     	R7 1 ; if R7 then PC := 164
	158	[14346]	JMP      	164 ; PC := 164
	159	[14347]	GETGLOBAL	R7 K1 ; R7 := 0x25d99d89
	160	[14347]	SELF     	R7 R7 K45 ; R8 := R7; R7 := R7[0xae7e2261]
	161	[14347]	GETTABLE 	R9 R2 R6 ; R9 := R2[R6]
	162	[14347]	GETTABLE 	R9 R9 K46 ; R9 := R9["mItem"]
	163	[14347]	CALL     	R7 3 1 ; R7(R8,R9)
	164	[14345]	FORLOOP  	R3 155 ; R3 += R5; if R3 <= R4 then begin PC := 155; R6 := R3 end
	165	[14352]	GETGLOBAL	R7 K17 ; R7 := mLists
	166	[14352]	GETTABLE 	R7 R7 K26 ; R7 := R7["mLoadOutList"]
	167	[14352]	SELF     	R7 R7 K47 ; R8 := R7; R7 := R7[0xea061e98]
	168	[14358]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	169	[14358]	GETUPVAL 	R0 U9 ; R0 := U9
	170	[14352]	CALL     	R7 3 1 ; R7(R8,R9)
	171	[14361]	GETGLOBAL	R7 K48 ; R7 := mEmotesChanged
	172	[14361]	TEST     	R7 0 ; if not R7 then PC := 195
	173	[14361]	JMP      	195 ; PC := 195
	174	[14362]	OP_LOADBOOL	R7 0 0 ; R7 := false
	175	[14362]	SETGLOBALHASH	R7 K48 ; mEmotesChanged := R7
	176	[14363]	GETGLOBAL	R7 K1 ; R7 := 0x25d99d89
	177	[14363]	SELF     	R7 R7 K49 ; R8 := R7; R7 := R7[0x2f7171b2]
	178	[14363]	CALL     	R7 2 1 ; R7(R8)
	179	[14365]	GETGLOBAL	R7 K7 ; R7 := _T
	180	[14365]	GETTABLE 	R7 R7 K50 ; R7 := R7["EmotesElements"]
	181	[14366]	LOADK    	R8 := 1.000000
	182	[14366]	LEN      	R9 R7 ; R9 := # R7
	183	[14366]	LOADK    	R10 := 1.000000
	184	[14366]	FORPREP  	R8 194 ; R8 -= R10; PC := 194
	185	[14367]	GETTABLE 	R12 R7 R11 ; R12 := R7[R11]
	186	[14367]	GETTABLE 	R12 R12 K44 ; R12 := R12["mInsertElementButton"]
	187	[14367]	TEST     	R12 1 ; if R12 then PC := 194
	188	[14367]	JMP      	194 ; PC := 194
	189	[14368]	GETGLOBAL	R12 K1 ; R12 := 0x25d99d89
	190	[14368]	SELF     	R12 R12 K51 ; R13 := R12; R12 := R12[0x5fcae72c]
	191	[14368]	GETTABLE 	R14 R7 R11 ; R14 := R7[R11]
	192	[14368]	GETTABLE 	R14 R14 K46 ; R14 := R14["mItem"]
	193	[14368]	CALL     	R12 3 1 ; R12(R13,R14)
	194	[14366]	FORLOOP  	R8 185 ; R8 += R10; if R8 <= R9 then begin PC := 185; R11 := R8 end
	195	[14374]	GETUPVAL 	R12 U1 ; R12 := U1
	196	[14374]	GETUPVAL 	R13 U2 ; R13 := U2
	197	[14374]	GETTABLE 	R13 R13 K39 ; R13 := R13["CUSTOMIZING_SKINS"]
	198	[14374]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 228
	199	[14374]	JMP      	228 ; PC := 228
	200	[14375]	GETGLOBAL	R12 K17 ; R12 := mLists
	201	[14375]	GETTABLE 	R12 R12 K52 ; R12 := R12["mCosmeticsList"]
	202	[14375]	SELF     	R12 R12 K53 ; R13 := R12; R12 := R12[0x70d2982d]
	203	[14375]	CALL     	R12 2 2 ; R12 := R12(R13)
	204	[14377]	GETUPVAL 	R13 U11 ; R13 := U11
	205	[14377]	NOT      	R14 R12 ; R14 := not R12
	206	[14377]	CALL     	R13 2 1 ; R13(R14)
	207	[14379]	GETGLOBAL	R13 K54 ; R13 := mButtons
	208	[14379]	GETTABLE 	R13 R13 K55 ; R13 := R13[4.000000]
	209	[14379]	SETTABLE 	R13 K56 K57 ; R13["mVisible"] := false
	210	[14381]	GETGLOBAL	R13 K17 ; R13 := mLists
	211	[14381]	GETTABLE 	R13 R13 K52 ; R13 := R13["mCosmeticsList"]
	212	[14381]	EQ       	1 R13 K9 ; if R13 == nil then PC := 223
	213	[14381]	JMP      	223 ; PC := 223
	214	[14381]	GETGLOBAL	R13 K17 ; R13 := mLists
	215	[14381]	GETTABLE 	R13 R13 K52 ; R13 := R13["mCosmeticsList"]
	216	[14381]	GETTABLE 	R13 R13 K58 ; R13 := R13["mCurrLevel"]
	217	[14381]	EQ       	0 R13 K59 ; if R13 ~= 1.000000 then PC := 223
	218	[14381]	JMP      	223 ; PC := 223
	219	[14382]	GETGLOBAL	R13 K54 ; R13 := mButtons
	220	[14382]	GETTABLE 	R13 R13 K60 ; R13 := R13[5.000000]
	221	[14382]	SETTABLE 	R13 K56 K61 ; R13["mVisible"] := true
	222	[14382]	JMP      	226 ; PC := 226
	223	[14384]	GETGLOBAL	R13 K54 ; R13 := mButtons
	224	[14384]	GETTABLE 	R13 R13 K60 ; R13 := R13[5.000000]
	225	[14384]	SETTABLE 	R13 K56 K57 ; R13["mVisible"] := false
	226	[14387]	GETUPVAL 	R13 U12 ; R13 := U12
	227	[14387]	CALL     	R13 1 1 ; R13()
	228	[14390]	GETUPVAL 	R13 U1 ; R13 := U1
	229	[14390]	GETUPVAL 	R14 U2 ; R14 := U2
	230	[14390]	GETTABLE 	R14 R14 K38 ; R14 := R14["SWAPPING_ITEM"]
	231	[14390]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 462
	232	[14390]	JMP      	462 ; PC := 462
	233	[14391]	LOADNIL  	R13 R13 ; R13 := nil
	234	[14392]	GETGLOBAL	R14 K7 ; R14 := _T
	235	[14392]	GETTABLE 	R13 R14 K62 ; R13 := R14["MenuSuitAvatar"]
	236	[14393]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	237	[14393]	MOVE     	R15 R13 ; R15 := R13
	238	[14393]	CALL     	R14 2 2 ; R14 := R14(R15)
	239	[14393]	TEST     	R14 1 ; if R14 then PC := 245
	240	[14393]	JMP      	245 ; PC := 245
	241	[14394]	SELF     	R14 R13 K63 ; R15 := R13; R14 := R13[0xde321e6f]
	242	[14394]	CALL     	R14 2 2 ; R14 := R14(R15)
	243	[14394]	SELF     	R14 R14 K64 ; R15 := R14; R14 := R14[0x527a892b]
	244	[14394]	CALL     	R14 2 1 ; R14(R15)
	245	[14397]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	246	[14397]	GETGLOBAL	R15 K1 ; R15 := 0x25d99d89
	247	[14397]	CALL     	R14 2 2 ; R14 := R14(R15)
	248	[14397]	TEST     	R14 1 ; if R14 then PC := 275
	249	[14397]	JMP      	275 ; PC := 275
	250	[14398]	SELF     	R14 R13 K63 ; R15 := R13; R14 := R13[0xde321e6f]
	251	[14398]	CALL     	R14 2 2 ; R14 := R14(R15)
	252	[14398]	SELF     	R14 R14 K65 ; R15 := R14; R14 := R14[0x374b084a]
	253	[14398]	CALL     	R14 2 1 ; R14(R15)
	254	[14399]	GETUPVAL 	R14 U13 ; R14 := U13
	255	[14399]	GETUPVAL 	R15 U3 ; R15 := U3
	256	[14399]	GETTABLE 	R15 R15 K3 ; R15 := R15["Current"]
	257	[14399]	EQ       	1 R15 K6 ; if R15 == 2.000000 then PC := 260
	258	[14399]	JMP      	260 ; PC := 260
	259	[14399]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 260
	260	[14399]	OP_LOADBOOL	R15 1 0 ; R15 := true
	261	[14399]	CALL     	R14 2 1 ; R14(R15)
	262	[14400]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	263	[14400]	GETUPVAL 	R15 U14 ; R15 := U14
	264	[14400]	CALL     	R14 2 2 ; R14 := R14(R15)
	265	[14400]	TEST     	R14 0 ; if not R14 then PC := 271
	266	[14400]	JMP      	271 ; PC := 271
	267	[14401]	SELF     	R14 R13 K63 ; R15 := R13; R14 := R13[0xde321e6f]
	268	[14401]	CALL     	R14 2 2 ; R14 := R14(R15)
	269	[14401]	SELF     	R14 R14 K66 ; R15 := R14; R14 := R14[0x0c277ae1]
	270	[14401]	CALL     	R14 2 1 ; R14(R15)
	271	[14403]	GETUPVAL 	R14 U15 ; R14 := U15
	272	[14403]	GETTABLE 	R14 R14 K67 ; R14 := R14[0xcfd657f3]
	273	[14403]	MOVE     	R15 R13 ; R15 := R13
	274	[14403]	CALL     	R14 2 1 ; R14(R15)
	275	[14406]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	276	[14406]	GETGLOBAL	R15 K24 ; R15 := mSelected
	277	[14406]	GETTABLE 	R15 R15 K25 ; R15 := R15["Element"]
	278	[14406]	CALL     	R14 2 2 ; R14 := R14(R15)
	279	[14406]	TEST     	R14 1 ; if R14 then PC := 454
	280	[14406]	JMP      	454 ; PC := 454
	281	[14407]	GETGLOBAL	R14 K24 ; R14 := mSelected
	282	[14407]	GETTABLE 	R14 R14 K25 ; R14 := R14["Element"]
	283	[14407]	GETTABLE 	R14 R14 K68 ; R14 := R14["LoadOutId"]
	284	[14407]	EQ       	0 R14 K6 ; if R14 ~= 2.000000 then PC := 294
	285	[14407]	JMP      	294 ; PC := 294
	286	[14408]	SELF     	R14 R13 K63 ; R15 := R13; R14 := R13[0xde321e6f]
	287	[14408]	CALL     	R14 2 2 ; R14 := R14(R15)
	288	[14408]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xc69087f6]
	289	[14408]	LOADK    	R16 := 1.000000
	290	[14408]	LOADK    	R17 := 0.000000
	291	[14408]	LOADK    	R18 := 2.000000
	292	[14408]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	293	[14408]	JMP      	319 ; PC := 319
	294	[14409]	GETGLOBAL	R14 K24 ; R14 := mSelected
	295	[14409]	GETTABLE 	R14 R14 K25 ; R14 := R14["Element"]
	296	[14409]	GETTABLE 	R14 R14 K68 ; R14 := R14["LoadOutId"]
	297	[14409]	EQ       	0 R14 K59 ; if R14 ~= 1.000000 then PC := 307
	298	[14409]	JMP      	307 ; PC := 307
	299	[14410]	SELF     	R14 R13 K63 ; R15 := R13; R14 := R13[0xde321e6f]
	300	[14410]	CALL     	R14 2 2 ; R14 := R14(R15)
	301	[14410]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xc69087f6]
	302	[14410]	LOADK    	R16 := 0.000000
	303	[14410]	LOADK    	R17 := 0.000000
	304	[14410]	LOADK    	R18 := 2.000000
	305	[14410]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	306	[14410]	JMP      	319 ; PC := 319
	307	[14411]	GETGLOBAL	R14 K24 ; R14 := mSelected
	308	[14411]	GETTABLE 	R14 R14 K25 ; R14 := R14["Element"]
	309	[14411]	GETTABLE 	R14 R14 K68 ; R14 := R14["LoadOutId"]
	310	[14411]	EQ       	0 R14 K5 ; if R14 ~= 3.000000 then PC := 319
	311	[14411]	JMP      	319 ; PC := 319
	312	[14412]	SELF     	R14 R13 K63 ; R15 := R13; R14 := R13[0xde321e6f]
	313	[14412]	CALL     	R14 2 2 ; R14 := R14(R15)
	314	[14412]	SELF     	R14 R14 K69 ; R15 := R14; R14 := R14[0xc69087f6]
	315	[14412]	LOADK    	R16 := 5.000000
	316	[14412]	LOADK    	R17 := 0.000000
	317	[14412]	LOADK    	R18 := 2.000000
	318	[14412]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	319	[14415]	GETUPVAL 	R14 U16 ; R14 := U16
	320	[14415]	MOVE     	R15 R13 ; R15 := R13
	321	[14415]	GETGLOBAL	R16 K24 ; R16 := mSelected
	322	[14415]	GETTABLE 	R16 R16 K25 ; R16 := R16["Element"]
	323	[14415]	GETTABLE 	R16 R16 K30 ; R16 := R16["LoadOutType"]
	324	[14415]	GETGLOBAL	R17 K24 ; R17 := mSelected
	325	[14415]	GETTABLE 	R17 R17 K25 ; R17 := R17["Element"]
	326	[14415]	GETTABLE 	R17 R17 K68 ; R17 := R17["LoadOutId"]
	327	[14415]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	328	[14417]	GETGLOBAL	R14 K24 ; R14 := mSelected
	329	[14417]	GETTABLE 	R14 R14 K25 ; R14 := R14["Element"]
	330	[14417]	GETTABLE 	R14 R14 K30 ; R14 := R14["LoadOutType"]
	331	[14417]	EQ       	0 R14 K59 ; if R14 ~= 1.000000 then PC := 454
	332	[14417]	JMP      	454 ; PC := 454
	333	[14417]	GETGLOBAL	R14 K24 ; R14 := mSelected
	334	[14417]	GETTABLE 	R14 R14 K25 ; R14 := R14["Element"]
	335	[14417]	GETTABLE 	R14 R14 K68 ; R14 := R14["LoadOutId"]
	336	[14417]	EQ       	0 R14 K71 ; if R14 ~= 0.000000 then PC := 454
	337	[14417]	JMP      	454 ; PC := 454
	338	[14418]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	339	[14418]	GETGLOBAL	R15 K1 ; R15 := 0x25d99d89
	340	[14418]	CALL     	R14 2 2 ; R14 := R14(R15)
	341	[14418]	TEST     	R14 1 ; if R14 then PC := 424
	342	[14418]	JMP      	424 ; PC := 424
	343	[14418]	GETUPVAL 	R14 U17 ; R14 := U17
	344	[14418]	GETUPVAL 	R15 U18 ; R15 := U18
	345	[14418]	GETTABLE 	R15 R15 K72 ; R15 := R15["UI_MODE_IN_SPACE_SHIP"]
	346	[14418]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 424
	347	[14418]	JMP      	424 ; PC := 424
	348	[14419]	LOADNIL  	R14 R14 ; R14 := nil
	349	[14420]	GETGLOBAL	R15 K1 ; R15 := 0x25d99d89
	350	[14420]	SELF     	R15 R15 K73 ; R16 := R15; R15 := R15[0x3c6b0324]
	351	[14420]	CALL     	R15 2 2 ; R15 := R15(R16)
	352	[14420]	TEST     	R15 0 ; if not R15 then PC := 381
	353	[14420]	JMP      	381 ; PC := 381
	354	[14421]	GETUPVAL 	R15 U19 ; R15 := U19
	355	[14421]	LOADK    	R16 := 0.000000
	356	[14421]	CALL     	R15 2 2 ; R15 := R15(R16)
	357	[14421]	MOVE     	R14 R15 ; R14 := R15
	358	[14422]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	359	[14422]	MOVE     	R16 R14 ; R16 := R14
	360	[14422]	CALL     	R15 2 2 ; R15 := R15(R16)
	361	[14422]	TEST     	R15 1 ; if R15 then PC := 367
	362	[14422]	JMP      	367 ; PC := 367
	363	[14423]	SELF     	R15 R14 K74 ; R16 := R14; R15 := R14[0x768274d6]
	364	[14423]	OP_LOADBOOL	R17 0 0 ; R17 := false
	365	[14423]	OP_LOADBOOL	R18 1 0 ; R18 := true
	366	[14423]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	367	[14426]	GETUPVAL 	R15 U19 ; R15 := U19
	368	[14426]	LOADK    	R16 := 3.000000
	369	[14426]	CALL     	R15 2 2 ; R15 := R15(R16)
	370	[14426]	MOVE     	R14 R15 ; R14 := R15
	371	[14427]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	372	[14427]	MOVE     	R16 R14 ; R16 := R14
	373	[14427]	CALL     	R15 2 2 ; R15 := R15(R16)
	374	[14427]	TEST     	R15 1 ; if R15 then PC := 413
	375	[14427]	JMP      	413 ; PC := 413
	376	[14428]	SELF     	R15 R14 K74 ; R16 := R14; R15 := R14[0x768274d6]
	377	[14428]	OP_LOADBOOL	R17 0 0 ; R17 := false
	378	[14428]	OP_LOADBOOL	R18 1 0 ; R18 := true
	379	[14428]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	380	[14429]	JMP      	413 ; PC := 413
	381	[14431]	GETGLOBAL	R15 K1 ; R15 := 0x25d99d89
	382	[14431]	SELF     	R15 R15 K75 ; R16 := R15; R15 := R15[0x9f91f49d]
	383	[14431]	CALL     	R15 2 2 ; R15 := R15(R16)
	384	[14431]	TEST     	R15 0 ; if not R15 then PC := 400
	385	[14431]	JMP      	400 ; PC := 400
	386	[14432]	GETUPVAL 	R15 U19 ; R15 := U19
	387	[14432]	LOADK    	R16 := 0.000000
	388	[14432]	CALL     	R15 2 2 ; R15 := R15(R16)
	389	[14432]	MOVE     	R14 R15 ; R14 := R15
	390	[14433]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	391	[14433]	MOVE     	R16 R14 ; R16 := R14
	392	[14433]	CALL     	R15 2 2 ; R15 := R15(R16)
	393	[14433]	TEST     	R15 1 ; if R15 then PC := 413
	394	[14433]	JMP      	413 ; PC := 413
	395	[14434]	SELF     	R15 R14 K74 ; R16 := R14; R15 := R14[0x768274d6]
	396	[14434]	OP_LOADBOOL	R17 0 0 ; R17 := false
	397	[14434]	OP_LOADBOOL	R18 1 0 ; R18 := true
	398	[14434]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	399	[14435]	JMP      	413 ; PC := 413
	400	[14437]	GETUPVAL 	R15 U19 ; R15 := U19
	401	[14437]	LOADK    	R16 := 3.000000
	402	[14437]	CALL     	R15 2 2 ; R15 := R15(R16)
	403	[14437]	MOVE     	R14 R15 ; R14 := R15
	404	[14438]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	405	[14438]	MOVE     	R16 R14 ; R16 := R14
	406	[14438]	CALL     	R15 2 2 ; R15 := R15(R16)
	407	[14438]	TEST     	R15 1 ; if R15 then PC := 413
	408	[14438]	JMP      	413 ; PC := 413
	409	[14439]	SELF     	R15 R14 K74 ; R16 := R14; R15 := R14[0x768274d6]
	410	[14439]	OP_LOADBOOL	R17 0 0 ; R17 := false
	411	[14439]	OP_LOADBOOL	R18 1 0 ; R18 := true
	412	[14439]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	413	[14444]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	414	[14444]	GETGLOBAL	R16 K1 ; R16 := 0x25d99d89
	415	[14444]	CALL     	R15 2 2 ; R15 := R15(R16)
	416	[14444]	TEST     	R15 1 ; if R15 then PC := 447
	417	[14444]	JMP      	447 ; PC := 447
	418	[14445]	GETUPVAL 	R15 U20 ; R15 := U20
	419	[14445]	CALL     	R15 1 1 ; R15()
	420	[14447]	GETUPVAL 	R15 U13 ; R15 := U13
	421	[14447]	OP_LOADBOOL	R16 0 0 ; R16 := false
	422	[14447]	CALL     	R15 2 1 ; R15(R16)
	423	[14448]	JMP      	447 ; PC := 447
	424	[14450]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	425	[14450]	GETGLOBAL	R16 K1 ; R16 := 0x25d99d89
	426	[14450]	CALL     	R15 2 2 ; R15 := R15(R16)
	427	[14450]	TEST     	R15 1 ; if R15 then PC := 444
	428	[14450]	JMP      	444 ; PC := 444
	429	[14450]	GETGLOBAL	R15 K1 ; R15 := 0x25d99d89
	430	[14450]	SELF     	R15 R15 K73 ; R16 := R15; R15 := R15[0x3c6b0324]
	431	[14450]	CALL     	R15 2 2 ; R15 := R15(R16)
	432	[14450]	TEST     	R15 1 ; if R15 then PC := 439
	433	[14450]	JMP      	439 ; PC := 439
	434	[14450]	GETGLOBAL	R15 K1 ; R15 := 0x25d99d89
	435	[14450]	SELF     	R15 R15 K75 ; R16 := R15; R15 := R15[0x9f91f49d]
	436	[14450]	CALL     	R15 2 2 ; R15 := R15(R16)
	437	[14450]	TEST     	R15 0 ; if not R15 then PC := 444
	438	[14450]	JMP      	444 ; PC := 444
	439	[14450]	GETUPVAL 	R15 U21 ; R15 := U21
	440	[14450]	LE       	0 R15 K76 ; if R15 > 0.500000 then PC := 444
	441	[14450]	JMP      	444 ; PC := 444
	442	[14451]	LOADK    	R15 := 1.000000
	443	[14451]	SETUPVAL 	R15 U21 ; U21 := R15
	444	[14453]	GETUPVAL 	R15 U22 ; R15 := U22
	445	[14453]	LOADK    	R16 := 0.000000
	446	[14453]	CALL     	R15 2 1 ; R15(R16)
	447	[14456]	GETUPVAL 	R15 U19 ; R15 := U19
	448	[14456]	LOADK    	R16 := 1.000000
	449	[14456]	CALL     	R15 2 2 ; R15 := R15(R16)
	450	[14457]	GETUPVAL 	R16 U15 ; R16 := U15
	451	[14457]	GETTABLE 	R16 R16 K77 ; R16 := R16[0x705e38df]
	452	[14457]	MOVE     	R17 R15 ; R17 := R15
	453	[14457]	CALL     	R16 2 1 ; R16(R17)
	454	[14461]	GETUPVAL 	R16 U10 ; R16 := U10
	455	[14461]	OP_LOADBOOL	R17 0 0 ; R17 := false
	456	[14461]	CALL     	R16 2 1 ; R16(R17)
	457	[14462]	GETUPVAL 	R16 U23 ; R16 := U23
	458	[14462]	GETGLOBAL	R17 K24 ; R17 := mSelected
	459	[14462]	GETTABLE 	R17 R17 K25 ; R17 := R17["Element"]
	460	[14462]	OP_LOADBOOL	R18 0 0 ; R18 := false
	461	[14462]	CALL     	R16 3 1 ; R16(R17,R18)
	462	[14465]	GETUPVAL 	R16 U1 ; R16 := U1
	463	[14465]	GETUPVAL 	R17 U2 ; R17 := U2
	464	[14465]	GETTABLE 	R17 R17 K39 ; R17 := R17["CUSTOMIZING_SKINS"]
	465	[14465]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 580
	466	[14465]	JMP      	580 ; PC := 580
	467	[14466]	GETUPVAL 	R16 U8 ; R16 := U8
	468	[14466]	GETUPVAL 	R17 U2 ; R17 := U2
	469	[14466]	GETTABLE 	R17 R17 K2 ; R17 := R17["SELECTING_PART"]
	470	[14466]	CALL     	R16 2 1 ; R16(R17)
	471	[14467]	GETGLOBAL	R16 K24 ; R16 := mSelected
	472	[14467]	GETTABLE 	R16 R16 K25 ; R16 := R16["Element"]
	473	[14467]	EQ       	1 R16 K9 ; if R16 == nil then PC := 479
	474	[14467]	JMP      	479 ; PC := 479
	475	[14468]	GETUPVAL 	R16 U9 ; R16 := U9
	476	[14468]	GETGLOBAL	R17 K24 ; R17 := mSelected
	477	[14468]	GETTABLE 	R17 R17 K25 ; R17 := R17["Element"]
	478	[14468]	CALL     	R16 2 1 ; R16(R17)
	479	[14470]	GETUPVAL 	R16 U10 ; R16 := U10
	480	[14470]	OP_LOADBOOL	R17 0 0 ; R17 := false
	481	[14470]	CALL     	R16 2 1 ; R16(R17)
	482	[14471]	JMP      	580 ; PC := 580
	483	[14472]	GETUPVAL 	R16 U1 ; R16 := U1
	484	[14472]	GETUPVAL 	R17 U2 ; R17 := U2
	485	[14472]	GETTABLE 	R17 R17 K78 ; R17 := R17["SELECTING_SKINS"]
	486	[14472]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 541
	487	[14472]	JMP      	541 ; PC := 541
	488	[14473]	GETUPVAL 	R16 U8 ; R16 := U8
	489	[14473]	GETUPVAL 	R17 U2 ; R17 := U2
	490	[14473]	GETTABLE 	R17 R17 K39 ; R17 := R17["CUSTOMIZING_SKINS"]
	491	[14473]	CALL     	R16 2 1 ; R16(R17)
	492	[14475]	GETUPVAL 	R16 U24 ; R16 := U24
	493	[14475]	GETUPVAL 	R17 U25 ; R17 := U25
	494	[14475]	GETTABLE 	R17 R17 K79 ; R17 := R17["FRONT"]
	495	[14475]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 502
	496	[14475]	JMP      	502 ; PC := 502
	497	[14475]	GETUPVAL 	R16 U24 ; R16 := U24
	498	[14475]	GETUPVAL 	R17 U25 ; R17 := U25
	499	[14475]	GETTABLE 	R17 R17 K80 ; R17 := R17["BACK"]
	500	[14475]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 505
	501	[14475]	JMP      	505 ; PC := 505
	502	[14476]	GETUPVAL 	R16 U26 ; R16 := U26
	503	[14476]	CALL     	R16 1 1 ; R16()
	504	[14476]	JMP      	523 ; PC := 523
	505	[14477]	GETGLOBAL	R16 K17 ; R16 := mLists
	506	[14477]	GETTABLE 	R16 R16 K52 ; R16 := R16["mCosmeticsList"]
	507	[14477]	GETTABLE 	R16 R16 K58 ; R16 := R16["mCurrLevel"]
	508	[14477]	GETGLOBAL	R17 K17 ; R17 := mLists
	509	[14477]	GETTABLE 	R17 R17 K52 ; R17 := R17["mCosmeticsList"]
	510	[14477]	GETTABLE 	R17 R17 K81 ; R17 := R17["HOLSTER_STYLE"]
	511	[14477]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 521
	512	[14477]	JMP      	521 ; PC := 521
	513	[14477]	GETGLOBAL	R16 K17 ; R16 := mLists
	514	[14477]	GETTABLE 	R16 R16 K52 ; R16 := R16["mCosmeticsList"]
	515	[14477]	GETTABLE 	R16 R16 K58 ; R16 := R16["mCurrLevel"]
	516	[14477]	GETGLOBAL	R17 K17 ; R17 := mLists
	517	[14477]	GETTABLE 	R17 R17 K52 ; R17 := R17["mCosmeticsList"]
	518	[14477]	GETTABLE 	R17 R17 K82 ; R17 := R17["HOLSTER_CUSTOMIZATION"]
	519	[14477]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 523
	520	[14477]	JMP      	523 ; PC := 523
	521	[14478]	GETUPVAL 	R16 U27 ; R16 := U27
	522	[14478]	CALL     	R16 1 1 ; R16()
	523	[14481]	GETUPVAL 	R16 U28 ; R16 := U28
	524	[14481]	GETGLOBAL	R17 K24 ; R17 := mSelected
	525	[14481]	GETTABLE 	R17 R17 K83 ; R17 := R17["Cosmetic"]
	526	[14481]	CALL     	R16 2 2 ; R16 := R16(R17)
	527	[14481]	TEST     	R16 0 ; if not R16 then PC := 580
	528	[14481]	JMP      	580 ; PC := 580
	529	[14482]	GETUPVAL 	R16 U15 ; R16 := U15
	530	[14482]	GETTABLE 	R16 R16 K84 ; R16 := R16[0xb2cd8e7b]
	531	[14482]	OP_LOADBOOL	R17 0 0 ; R17 := false
	532	[14482]	GETGLOBAL	R18 K24 ; R18 := mSelected
	533	[14482]	GETTABLE 	R18 R18 K25 ; R18 := R18["Element"]
	534	[14482]	CALL     	R16 3 1 ; R16(R17,R18)
	535	[14483]	GETUPVAL 	R16 U23 ; R16 := U23
	536	[14483]	GETGLOBAL	R17 K24 ; R17 := mSelected
	537	[14483]	GETTABLE 	R17 R17 K25 ; R17 := R17["Element"]
	538	[14483]	OP_LOADBOOL	R18 0 0 ; R18 := false
	539	[14483]	CALL     	R16 3 1 ; R16(R17,R18)
	540	[14484]	JMP      	580 ; PC := 580
	541	[14485]	GETUPVAL 	R16 U1 ; R16 := U1
	542	[14485]	GETUPVAL 	R17 U2 ; R17 := U2
	543	[14485]	GETTABLE 	R17 R17 K85 ; R17 := R17["SELECTING_CONSUMABLES"]
	544	[14485]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 580
	545	[14485]	JMP      	580 ; PC := 580
	546	[14486]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	547	[14486]	GETGLOBAL	R17 K24 ; R17 := mSelected
	548	[14486]	GETTABLE 	R17 R17 K86 ; R17 := R17["Emote"]
	549	[14486]	CALL     	R16 2 2 ; R16 := R16(R17)
	550	[14486]	TEST     	R16 1 ; if R16 then PC := 563
	551	[14486]	JMP      	563 ; PC := 563
	552	[14486]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	553	[14486]	GETGLOBAL	R17 K7 ; R17 := _T
	554	[14486]	GETTABLE 	R17 R17 K62 ; R17 := R17["MenuSuitAvatar"]
	555	[14486]	CALL     	R16 2 2 ; R16 := R16(R17)
	556	[14486]	TEST     	R16 1 ; if R16 then PC := 563
	557	[14486]	JMP      	563 ; PC := 563
	558	[14487]	GETGLOBAL	R16 K7 ; R16 := _T
	559	[14487]	GETTABLE 	R16 R16 K62 ; R16 := R16["MenuSuitAvatar"]
	560	[14487]	SELF     	R16 R16 K87 ; R17 := R16; R16 := R16[0xb13134f8]
	561	[14487]	LOADNIL  	R18 R18 ; R18 := nil
	562	[14487]	CALL     	R16 3 1 ; R16(R17,R18)
	563	[14490]	OP_LOADBOOL	R16 0 0 ; R16 := false
	564	[14491]	GETGLOBAL	R17 K7 ; R17 := _T
	565	[14491]	GETTABLE 	R17 R17 K88 ; R17 := R17["BrowseItemsDone"]
	566	[14491]	EQ       	1 R17 K9 ; if R17 == nil then PC := 573
	567	[14491]	JMP      	573 ; PC := 573
	568	[14492]	OP_LOADBOOL	R16 1 0 ; R16 := true
	569	[14493]	GETGLOBAL	R17 K7 ; R17 := _T
	570	[14493]	GETTABLE 	R17 R17 K89 ; R17 := R17[0xc85e4018]
	571	[14493]	NEWTABLE 	R18 0 0 ; R18 := {}
	572	[14493]	CALL     	R17 2 1 ; R17(R18)
	573	[14496]	GETUPVAL 	R17 U8 ; R17 := U8
	574	[14496]	GETUPVAL 	R18 U2 ; R18 := U2
	575	[14496]	GETTABLE 	R18 R18 K40 ; R18 := R18["BROWSING_CONSUMABLES"]
	576	[14496]	CALL     	R17 2 1 ; R17(R18)
	577	[14498]	TEST     	R16 0 ; if not R16 then PC := 580
	578	[14498]	JMP      	580 ; PC := 580
	579	[14499]	RETURN   	R0 1 ; return 
	580	[14503]	RETURN   	R0 1 ; return 

function #232 <?:14505,14508> (9 instructions, 36 bytes at 000002112AA1C5A0)
0 params, 2 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[14506]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14506]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xbe07b886]
	3	[14506]	CALL     	R0 1 1 ; R0()
	4	[14507]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[14507]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x659d451f]
	6	[14507]	GETGLOBAL	R1 K2 ; R1 := 0x0032441c
	7	[14507]	GETTABLE 	R1 R1 K3 ; R1 := R1["UISound_WindowClose"]
	8	[14507]	CALL     	R0 2 1 ; R0(R1)
	9	[14508]	RETURN   	R0 1 ; return 

function #233 <?:14510,14520> (29 instructions, 116 bytes at 000002112AA1C700)
0 params, 2 slots, 4 upvalues, 0 locals, 7 constants, 0 functions
	1	[14511]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14511]	CALL     	R0 1 2 ; R0 := R0()
	3	[14511]	TEST     	R0 1 ; if R0 then PC := 29
	4	[14511]	JMP      	29 ; PC := 29
	5	[14511]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[14511]	GETUPVAL 	R1 U2 ; R1 := U2
	7	[14511]	GETTABLE 	R1 R1 K0 ; R1 := R1["BROWSING_CONSUMABLES"]
	8	[14511]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 29
	9	[14511]	JMP      	29 ; PC := 29
	10	[14511]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[14511]	GETUPVAL 	R1 U2 ; R1 := U2
	12	[14511]	GETTABLE 	R1 R1 K1 ; R1 := R1["BROWSING_WAY_TREE"]
	13	[14511]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 29
	14	[14511]	JMP      	29 ; PC := 29
	15	[14512]	GETGLOBAL	R0 K2 ; R0 := mItemsGrid
	16	[14512]	GETTABLE 	R0 R0 K3 ; R0 := R0["mSortMenu"]
	17	[14512]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xd4cc05b4]
	18	[14512]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[14512]	TEST     	R0 0 ; if not R0 then PC := 26
	20	[14512]	JMP      	26 ; PC := 26
	21	[14513]	GETGLOBAL	R0 K2 ; R0 := mItemsGrid
	22	[14513]	GETTABLE 	R0 R0 K3 ; R0 := R0["mSortMenu"]
	23	[14513]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x32b02cab]
	24	[14513]	CALL     	R0 2 1 ; R0(R1)
	25	[14514]	RETURN   	R0 1 ; return 
	26	[14518]	GETUPVAL 	R0 U3 ; R0 := U3
	27	[14518]	GETTABLE 	R0 R0 K6 ; R0 := R0[0xbe07b886]
	28	[14518]	CALL     	R0 1 1 ; R0()
	29	[14520]	RETURN   	R0 1 ; return 

function #234 <?:14522,14536> (47 instructions, 188 bytes at 000002112C067820)
2 params, 10 slots, 4 upvalues, 0 locals, 13 constants, 0 functions
	1	[14523]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14523]	EQ       	1 R2 K0 ; if R2 == nil then PC := 43
	3	[14523]	JMP      	43 ; PC := 43
	4	[14524]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[14524]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xfaa69527]
	6	[14524]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	7	[14524]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x6b837788]
	8	[14524]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[14524]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	10	[14524]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0xaf9fda9f]
	11	[14524]	CALL     	R5 2 0 ; R5,... := R5(R6)
	12	[14524]	CALL     	R2 0 1 ; R2(R3,...)
	13	[14527]	LOADK    	R2 := 15.000000
	14	[14528]	GETUPVAL 	R3 U1 ; R3 := U1
	15	[14528]	GETTABLE 	R3 R3 K5 ; R3 := R3["mStatCompare"]
	16	[14528]	GETTABLE 	R3 R3 K6 ; R3 := R3["mListHeight"]
	17	[14528]	ADD      	R3 R3 R2 ; R3 := R3 + R2
	18	[14529]	GETUPVAL 	R4 U1 ; R4 := U1
	19	[14529]	GETTABLE 	R4 R4 K5 ; R4 := R4["mStatCompare"]
	20	[14529]	GETUPVAL 	R5 U1 ; R5 := U1
	21	[14529]	GETTABLE 	R5 R5 K5 ; R5 := R5["mStatCompare"]
	22	[14529]	GETTABLE 	R5 R5 K8 ; R5 := R5["mInitListYPos"]
	23	[14529]	GETUPVAL 	R6 U1 ; R6 := U1
	24	[14529]	GETTABLE 	R6 R6 K5 ; R6 := R6["mStatCompare"]
	25	[14529]	GETTABLE 	R6 R6 K6 ; R6 := R6["mListHeight"]
	26	[14529]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	27	[14529]	SETTABLE 	R4 K7 R5 ; R4["mListYPos"] := R5
	28	[14530]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	29	[14530]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x91a24e4b]
	30	[14530]	LOADK    	R6 K10 ; R6 := "EquippedTitle"
	31	[14530]	LOADK    	R7 := 34.000000
	32	[14530]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	33	[14531]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	34	[14531]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x67bc869f]
	35	[14531]	LOADK    	R7 K10 ; R7 := "EquippedTitle"
	36	[14531]	LOADK    	R8 := 1.000000
	37	[14531]	GETUPVAL 	R9 U1 ; R9 := U1
	38	[14531]	GETTABLE 	R9 R9 K5 ; R9 := R9["mStatCompare"]
	39	[14531]	GETTABLE 	R9 R9 K12 ; R9 := R9["mContainerYPos"]
	40	[14531]	SUB      	R9 R9 R3 ; R9 := R9 - R3
	41	[14531]	SUB      	R9 R9 R4 ; R9 := R9 - R4
	42	[14531]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	43	[14534]	GETUPVAL 	R5 U2 ; R5 := U2
	44	[14534]	CALL     	R5 1 1 ; R5()
	45	[14535]	GETUPVAL 	R5 U3 ; R5 := U3
	46	[14535]	CALL     	R5 1 1 ; R5()
	47	[14536]	RETURN   	R0 1 ; return 

function #235 <?:14538,14549> (29 instructions, 116 bytes at 000002112C067B30)
2 params, 11 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[14539]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14539]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	3	[14540]	EQ       	1 R2 K0 ; if R2 == nil then PC := 29
	4	[14540]	JMP      	29 ; PC := 29
	5	[14540]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	6	[14540]	GETTABLE 	R4 R2 K2 ; R4 := R2["Suit"]
	7	[14540]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[14540]	TEST     	R3 1 ; if R3 then PC := 29
	9	[14540]	JMP      	29 ; PC := 29
	10	[14541]	GETUPVAL 	R3 U1 ; R3 := U1
	11	[14541]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xfc3fed1f]
	12	[14541]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	13	[14541]	MOVE     	R5 R2 ; R5 := R2
	14	[14542]	GETGLOBAL	R6 K4 ; R6 := 0xae91e43b
	15	[14542]	SELF     	R6 R6 K5 ; R7 := R6; R6 := R6[0x91a24e4b]
	16	[14542]	MOVE     	R8 R1 ; R8 := R1
	17	[14542]	LOADK    	R9 := 2.000000
	18	[14542]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	19	[14543]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	20	[14543]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0x91a24e4b]
	21	[14543]	MOVE     	R9 R1 ; R9 := R1
	22	[14543]	LOADK    	R10 := 3.000000
	23	[14543]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	24	[14544]	LOADK    	R8 := 200.000000
	25	[14545]	LOADK    	R9 := 100.000000
	26	[14541]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	27	[14547]	GETGLOBAL	R3 K6 ; R3 := _T
	28	[14547]	SETTABLE 	R3 K7 R2 ; R3["InfoPopup_Data"] := R2
	29	[14549]	RETURN   	R0 1 ; return 

function #236 <?:14551,14553> (3 instructions, 12 bytes at 000002112C067D70)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[14552]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[14552]	SETTABLE 	R0 K1 K2 ; R0["InfoPopup_Data"] := nil
	3	[14553]	RETURN   	R0 1 ; return 

function #237 <?:14555,14557> (6 instructions, 24 bytes at 000002112C067E60)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[14556]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14556]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x659d451f]
	3	[14556]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	4	[14556]	GETTABLE 	R1 R1 K2 ; R1 := R1["UISound_Focus"]
	5	[14556]	CALL     	R0 2 1 ; R0(R1)
	6	[14557]	RETURN   	R0 1 ; return 

function #238 <?:14559,14563> (14 instructions, 56 bytes at 000002112C067F90)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[14560]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14560]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[14560]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutList"]
	4	[14560]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[14560]	TEST     	R1 1 ; if R1 then PC := 14
	6	[14560]	JMP      	14 ; PC := 14
	7	[14561]	GETGLOBAL	R1 K1 ; R1 := mLists
	8	[14561]	GETTABLE 	R1 R1 K2 ; R1 := R1["mLoadOutList"]
	9	[14561]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[14561]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[14561]	MOVE     	R4 R0 ; R4 := R0
	12	[14561]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[14561]	CALL     	R1 0 1 ; R1(R2,...)
	14	[14563]	RETURN   	R0 1 ; return 

function #239 <?:14565,14569> (14 instructions, 56 bytes at 000002112C068120)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[14566]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14566]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[14566]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutList"]
	4	[14566]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[14566]	TEST     	R1 1 ; if R1 then PC := 14
	6	[14566]	JMP      	14 ; PC := 14
	7	[14567]	GETGLOBAL	R1 K1 ; R1 := mLists
	8	[14567]	GETTABLE 	R1 R1 K2 ; R1 := R1["mLoadOutList"]
	9	[14567]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[14567]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[14567]	MOVE     	R4 R0 ; R4 := R0
	12	[14567]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[14567]	CALL     	R1 0 1 ; R1(R2,...)
	14	[14569]	RETURN   	R0 1 ; return 

function #240 <?:14571,14575> (18 instructions, 72 bytes at 000002112C0682B0)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[14572]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14572]	CALL     	R1 1 2 ; R1 := R1()
	3	[14572]	TEST     	R1 1 ; if R1 then PC := 18
	4	[14572]	JMP      	18 ; PC := 18
	5	[14572]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	6	[14572]	GETGLOBAL	R2 K1 ; R2 := mLists
	7	[14572]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutList"]
	8	[14572]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[14572]	TEST     	R1 1 ; if R1 then PC := 18
	10	[14572]	JMP      	18 ; PC := 18
	11	[14573]	GETGLOBAL	R1 K1 ; R1 := mLists
	12	[14573]	GETTABLE 	R1 R1 K2 ; R1 := R1["mLoadOutList"]
	13	[14573]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	14	[14573]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	15	[14573]	MOVE     	R4 R0 ; R4 := R0
	16	[14573]	CALL     	R3 2 0 ; R3,... := R3(R4)
	17	[14573]	CALL     	R1 0 1 ; R1(R2,...)
	18	[14575]	RETURN   	R0 1 ; return 

function #241 <?:14577,14581> (14 instructions, 56 bytes at 000002112C068460)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[14578]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14578]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[14578]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCosmeticsList"]
	4	[14578]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[14578]	TEST     	R1 1 ; if R1 then PC := 14
	6	[14578]	JMP      	14 ; PC := 14
	7	[14579]	GETGLOBAL	R1 K1 ; R1 := mLists
	8	[14579]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	9	[14579]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[14579]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[14579]	MOVE     	R4 R0 ; R4 := R0
	12	[14579]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[14579]	CALL     	R1 0 1 ; R1(R2,...)
	14	[14581]	RETURN   	R0 1 ; return 

function #242 <?:14583,14587> (14 instructions, 56 bytes at 000002112C0685F0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[14584]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14584]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[14584]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCosmeticsList"]
	4	[14584]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[14584]	TEST     	R1 1 ; if R1 then PC := 14
	6	[14584]	JMP      	14 ; PC := 14
	7	[14585]	GETGLOBAL	R1 K1 ; R1 := mLists
	8	[14585]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	9	[14585]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[14585]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[14585]	MOVE     	R4 R0 ; R4 := R0
	12	[14585]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[14585]	CALL     	R1 0 1 ; R1(R2,...)
	14	[14587]	RETURN   	R0 1 ; return 

function #243 <?:14589,14593> (18 instructions, 72 bytes at 000002112C068780)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[14590]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14590]	CALL     	R1 1 2 ; R1 := R1()
	3	[14590]	TEST     	R1 1 ; if R1 then PC := 18
	4	[14590]	JMP      	18 ; PC := 18
	5	[14590]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	6	[14590]	GETGLOBAL	R2 K1 ; R2 := mLists
	7	[14590]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCosmeticsList"]
	8	[14590]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[14590]	TEST     	R1 1 ; if R1 then PC := 18
	10	[14590]	JMP      	18 ; PC := 18
	11	[14591]	GETGLOBAL	R1 K1 ; R1 := mLists
	12	[14591]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	13	[14591]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	14	[14591]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	15	[14591]	MOVE     	R4 R0 ; R4 := R0
	16	[14591]	CALL     	R3 2 0 ; R3,... := R3(R4)
	17	[14591]	CALL     	R1 0 1 ; R1(R2,...)
	18	[14593]	RETURN   	R0 1 ; return 

function #244 <?:14595,14599> (16 instructions, 64 bytes at 000002112C068930)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[14596]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[14596]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	3	[14596]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[14596]	TEST     	R0 1 ; if R0 then PC := 16
	5	[14596]	JMP      	16 ; PC := 16
	6	[14596]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[14596]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	8	[14596]	GETTABLE 	R1 R1 K2 ; R1 := R1["mSortMenu"]
	9	[14596]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[14596]	TEST     	R0 1 ; if R0 then PC := 16
	11	[14596]	JMP      	16 ; PC := 16
	12	[14597]	GETGLOBAL	R0 K1 ; R0 := mItemsGrid
	13	[14597]	GETTABLE 	R0 R0 K2 ; R0 := R0["mSortMenu"]
	14	[14597]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x32b02cab]
	15	[14597]	CALL     	R0 2 1 ; R0(R1)
	16	[14599]	RETURN   	R0 1 ; return 

function #245 <?:14601,14605> (16 instructions, 64 bytes at 000002112C068AB0)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[14602]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[14602]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	3	[14602]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[14602]	TEST     	R0 1 ; if R0 then PC := 16
	5	[14602]	JMP      	16 ; PC := 16
	6	[14602]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[14602]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	8	[14602]	GETTABLE 	R1 R1 K2 ; R1 := R1["mSortMenu"]
	9	[14602]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[14602]	TEST     	R0 1 ; if R0 then PC := 16
	11	[14602]	JMP      	16 ; PC := 16
	12	[14603]	GETGLOBAL	R0 K1 ; R0 := mItemsGrid
	13	[14603]	GETTABLE 	R0 R0 K2 ; R0 := R0["mSortMenu"]
	14	[14603]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xeaeb4acc]
	15	[14603]	CALL     	R0 2 1 ; R0(R1)
	16	[14605]	RETURN   	R0 1 ; return 

function #246 <?:14607,14611> (16 instructions, 64 bytes at 000002112C068C30)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[14608]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[14608]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	3	[14608]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[14608]	TEST     	R0 1 ; if R0 then PC := 16
	5	[14608]	JMP      	16 ; PC := 16
	6	[14608]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[14608]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	8	[14608]	GETTABLE 	R1 R1 K2 ; R1 := R1["mSortMenu"]
	9	[14608]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[14608]	TEST     	R0 1 ; if R0 then PC := 16
	11	[14608]	JMP      	16 ; PC := 16
	12	[14609]	GETGLOBAL	R0 K1 ; R0 := mItemsGrid
	13	[14609]	GETTABLE 	R0 R0 K2 ; R0 := R0["mSortMenu"]
	14	[14609]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xcc4b959d]
	15	[14609]	CALL     	R0 2 1 ; R0(R1)
	16	[14611]	RETURN   	R0 1 ; return 

function #247 <?:14613,14617> (19 instructions, 76 bytes at 000002112C068DB0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[14614]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14614]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	3	[14614]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14614]	TEST     	R1 1 ; if R1 then PC := 19
	5	[14614]	JMP      	19 ; PC := 19
	6	[14614]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[14614]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	8	[14614]	GETTABLE 	R2 R2 K2 ; R2 := R2["mSortMenu"]
	9	[14614]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[14614]	TEST     	R1 1 ; if R1 then PC := 19
	11	[14614]	JMP      	19 ; PC := 19
	12	[14615]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	13	[14615]	GETTABLE 	R1 R1 K2 ; R1 := R1["mSortMenu"]
	14	[14615]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	15	[14615]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	16	[14615]	MOVE     	R4 R0 ; R4 := R0
	17	[14615]	CALL     	R3 2 0 ; R3,... := R3(R4)
	18	[14615]	CALL     	R1 0 1 ; R1(R2,...)
	19	[14617]	RETURN   	R0 1 ; return 

function #248 <?:14619,14623> (19 instructions, 76 bytes at 000002112C068F60)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[14620]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14620]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	3	[14620]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14620]	TEST     	R1 1 ; if R1 then PC := 19
	5	[14620]	JMP      	19 ; PC := 19
	6	[14620]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[14620]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	8	[14620]	GETTABLE 	R2 R2 K2 ; R2 := R2["mSortMenu"]
	9	[14620]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[14620]	TEST     	R1 1 ; if R1 then PC := 19
	11	[14620]	JMP      	19 ; PC := 19
	12	[14621]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	13	[14621]	GETTABLE 	R1 R1 K2 ; R1 := R1["mSortMenu"]
	14	[14621]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	15	[14621]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	16	[14621]	MOVE     	R4 R0 ; R4 := R0
	17	[14621]	CALL     	R3 2 0 ; R3,... := R3(R4)
	18	[14621]	CALL     	R1 0 1 ; R1(R2,...)
	19	[14623]	RETURN   	R0 1 ; return 

function #249 <?:14625,14629> (24 instructions, 96 bytes at 000002112C069110)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[14626]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14626]	CALL     	R1 1 2 ; R1 := R1()
	3	[14626]	TEST     	R1 1 ; if R1 then PC := 24
	4	[14626]	JMP      	24 ; PC := 24
	5	[14626]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	6	[14626]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	7	[14626]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[14626]	TEST     	R1 1 ; if R1 then PC := 24
	9	[14626]	JMP      	24 ; PC := 24
	10	[14626]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	11	[14626]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	12	[14626]	GETTABLE 	R2 R2 K2 ; R2 := R2["mSortMenu"]
	13	[14626]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[14626]	TEST     	R1 1 ; if R1 then PC := 24
	15	[14626]	JMP      	24 ; PC := 24
	16	[14627]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	17	[14627]	GETTABLE 	R1 R1 K2 ; R1 := R1["mSortMenu"]
	18	[14627]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	19	[14627]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	20	[14627]	MOVE     	R4 R0 ; R4 := R0
	21	[14627]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[14627]	OP_LOADBOOL	R4 1 0 ; R4 := true
	23	[14627]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	24	[14629]	RETURN   	R0 1 ; return 

function #250 <?:14631,14633> (3 instructions, 12 bytes at 000002112C0692E0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[14632]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14632]	SETTABLE 	R0 K0 K1 ; R0["MouseDown"] := true
	3	[14633]	RETURN   	R0 1 ; return 

function #251 <?:14635,14641> (15 instructions, 60 bytes at 000002112C0693E0)
0 params, 2 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[14636]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14636]	SETTABLE 	R0 K0 K1 ; R0["MouseDown"] := false
	3	[14638]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[14638]	CALL     	R0 1 2 ; R0 := R0()
	5	[14638]	TEST     	R0 1 ; if R0 then PC := 15
	6	[14638]	JMP      	15 ; PC := 15
	7	[14638]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	8	[14638]	GETGLOBAL	R1 K3 ; R1 := mItemsGrid
	9	[14638]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[14638]	TEST     	R0 1 ; if R0 then PC := 15
	11	[14638]	JMP      	15 ; PC := 15
	12	[14639]	GETGLOBAL	R0 K3 ; R0 := mItemsGrid
	13	[14639]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x214e55d4]
	14	[14639]	CALL     	R0 2 1 ; R0(R1)
	15	[14641]	RETURN   	R0 1 ; return 

function #252 <?:14643,14652> (24 instructions, 96 bytes at 000002112C069570)
2 params, 7 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[14644]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	2	[14644]	MOVE     	R3 R1 ; R3 := R1
	3	[14644]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[14644]	MOVE     	R1 R2 ; R1 := R2
	5	[14645]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[14645]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x0c33ebb2]
	7	[14645]	LOADK    	R4 K3 ; R4 := "_root"
	8	[14645]	LOADK    	R5 K4 ; R5 := "suitRotationX"
	9	[14645]	MOVE     	R6 R1 ; R6 := R1
	10	[14645]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	11	[14646]	GETGLOBAL	R2 K5 ; R2 := 0x5bced4c4
	12	[14646]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xe4a5b3ca]
	13	[14646]	MOVE     	R3 R1 ; R3 := R1
	14	[14646]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[14646]	LT       	0 K7 R2 ; if 0.200000 >= R2 then PC := 20
	16	[14646]	JMP      	20 ; PC := 20
	17	[14647]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[14647]	SETTABLE 	R2 K8 K9 ; R2["MouseDown"] := true
	19	[14647]	JMP      	22 ; PC := 22
	20	[14649]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[14649]	SETTABLE 	R2 K8 K10 ; R2["MouseDown"] := false
	22	[14651]	OP_LOADBOOL	R2 1 0 ; R2 := true
	23	[14651]	RETURN   	R2 2 ; return R2 
	24	[14652]	RETURN   	R0 1 ; return 

function #253 <?:14654,14664> (62 instructions, 248 bytes at 000002112C0697A0)
0 params, 2 slots, 4 upvalues, 0 locals, 15 constants, 0 functions
	1	[14655]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14655]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompareScrollBar"]
	3	[14655]	GETTABLE 	R0 R0 K1 ; R0 := R0["mEnabled"]
	4	[14655]	TEST     	R0 0 ; if not R0 then PC := 15
	5	[14655]	JMP      	15 ; PC := 15
	6	[14655]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[14655]	GETTABLE 	R0 R0 K2 ; R0 := R0[0x8d5a3387]
	8	[14655]	CALL     	R0 1 2 ; R0 := R0()
	9	[14655]	TEST     	R0 0 ; if not R0 then PC := 15
	10	[14655]	JMP      	15 ; PC := 15
	11	[14656]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[14656]	GETTABLE 	R0 R0 K0 ; R0 := R0["mStatCompareScrollBar"]
	13	[14656]	RETURN   	R0 2 ; return R0 
	14	[14656]	JMP      	60 ; PC := 60
	15	[14657]	GETUPVAL 	R0 U2 ; R0 := U2
	16	[14657]	GETUPVAL 	R1 U3 ; R1 := U3
	17	[14657]	GETTABLE 	R1 R1 K3 ; R1 := R1["SWAPPING_ITEM"]
	18	[14657]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 30
	19	[14657]	JMP      	30 ; PC := 30
	20	[14657]	GETUPVAL 	R0 U2 ; R0 := U2
	21	[14657]	GETUPVAL 	R1 U3 ; R1 := U3
	22	[14657]	GETTABLE 	R1 R1 K4 ; R1 := R1["SELECTING_SKINS"]
	23	[14657]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 30
	24	[14657]	JMP      	30 ; PC := 30
	25	[14657]	GETUPVAL 	R0 U2 ; R0 := U2
	26	[14657]	GETUPVAL 	R1 U3 ; R1 := U3
	27	[14657]	GETTABLE 	R1 R1 K5 ; R1 := R1["SELECTING_CONSUMABLES"]
	28	[14657]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 43
	29	[14657]	JMP      	43 ; PC := 43
	30	[14657]	GETGLOBAL	R0 K6 ; R0 := mCameraTable
	31	[14657]	GETTABLE 	R0 R0 K7 ; R0 := R0["ConstantUpdate"]
	32	[14657]	TEST     	R0 1 ; if R0 then PC := 39
	33	[14657]	JMP      	39 ; PC := 39
	34	[14657]	GETUPVAL 	R0 U1 ; R0 := U1
	35	[14657]	GETTABLE 	R0 R0 K8 ; R0 := R0[0x70d40695]
	36	[14657]	CALL     	R0 1 2 ; R0 := R0()
	37	[14657]	TEST     	R0 0 ; if not R0 then PC := 43
	38	[14657]	JMP      	43 ; PC := 43
	39	[14658]	GETGLOBAL	R0 K9 ; R0 := mItemsGrid
	40	[14658]	GETTABLE 	R0 R0 K10 ; R0 := R0["mScrollBar"]
	41	[14658]	RETURN   	R0 2 ; return R0 
	42	[14658]	JMP      	60 ; PC := 60
	43	[14659]	GETUPVAL 	R0 U2 ; R0 := U2
	44	[14659]	GETUPVAL 	R1 U3 ; R1 := U3
	45	[14659]	GETTABLE 	R1 R1 K11 ; R1 := R1["CUSTOMIZING_SKINS"]
	46	[14659]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 60
	47	[14659]	JMP      	60 ; PC := 60
	48	[14659]	GETGLOBAL	R0 K6 ; R0 := mCameraTable
	49	[14659]	GETTABLE 	R0 R0 K7 ; R0 := R0["ConstantUpdate"]
	50	[14659]	TEST     	R0 1 ; if R0 then PC := 57
	51	[14659]	JMP      	57 ; PC := 57
	52	[14659]	GETUPVAL 	R0 U1 ; R0 := U1
	53	[14659]	GETTABLE 	R0 R0 K12 ; R0 := R0[0xe502027a]
	54	[14659]	CALL     	R0 1 2 ; R0 := R0()
	55	[14659]	TEST     	R0 0 ; if not R0 then PC := 60
	56	[14659]	JMP      	60 ; PC := 60
	57	[14660]	GETGLOBAL	R0 K13 ; R0 := mLists
	58	[14660]	GETTABLE 	R0 R0 K14 ; R0 := R0["mCosmeticsScrollBar"]
	59	[14660]	RETURN   	R0 2 ; return R0 
	60	[14663]	LOADNIL  	R0 R0 ; R0 := nil
	61	[14663]	RETURN   	R0 2 ; return R0 
	62	[14664]	RETURN   	R0 1 ; return 

function #254 <?:14666,14675> (24 instructions, 96 bytes at 000002112C069B50)
2 params, 7 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[14667]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	2	[14667]	MOVE     	R3 R1 ; R3 := R1
	3	[14667]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[14667]	MOVE     	R1 R2 ; R1 := R2
	5	[14668]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[14668]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x0c33ebb2]
	7	[14668]	LOADK    	R4 K3 ; R4 := "_root"
	8	[14668]	LOADK    	R5 K4 ; R5 := "suitRotationX"
	9	[14668]	MOVE     	R6 R1 ; R6 := R1
	10	[14668]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	11	[14669]	GETGLOBAL	R2 K5 ; R2 := 0x5bced4c4
	12	[14669]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xe4a5b3ca]
	13	[14669]	MOVE     	R3 R1 ; R3 := R1
	14	[14669]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[14669]	LT       	0 K7 R2 ; if 0.200000 >= R2 then PC := 20
	16	[14669]	JMP      	20 ; PC := 20
	17	[14670]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[14670]	SETTABLE 	R2 K8 K9 ; R2["MouseDown"] := true
	19	[14670]	JMP      	22 ; PC := 22
	20	[14672]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[14672]	SETTABLE 	R2 K8 K10 ; R2["MouseDown"] := false
	22	[14674]	OP_LOADBOOL	R2 1 0 ; R2 := true
	23	[14674]	RETURN   	R2 2 ; return R2 
	24	[14675]	RETURN   	R0 1 ; return 

function #255 <?:14677,14688> (35 instructions, 140 bytes at 000002112C069D80)
1 param, 4 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[14678]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[14678]	MOVE     	R2 R0 ; R2 := R0
	3	[14678]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14678]	MOVE     	R0 R1 ; R0 := R1
	5	[14679]	GETGLOBAL	R1 K1 ; R1 := mCameraTable
	6	[14679]	SETTABLE 	R1 K2 K3 ; R1["mRightStickZoomValue"] := 0.000000
	7	[14680]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[14680]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x3130199c]
	9	[14680]	CALL     	R1 1 2 ; R1 := R1()
	10	[14681]	GETUPVAL 	R2 U1 ; R2 := U1
	11	[14681]	CALL     	R2 1 2 ; R2 := R2()
	12	[14681]	TEST     	R2 1 ; if R2 then PC := 18
	13	[14681]	JMP      	18 ; PC := 18
	14	[14681]	EQ       	1 R1 K5 ; if R1 == nil then PC := 18
	15	[14681]	JMP      	18 ; PC := 18
	16	[14682]	SETTABLE 	R1 K6 R0 ; R1["mRightStickScrollYValue"] := R0
	17	[14682]	JMP      	35 ; PC := 35
	18	[14683]	GETGLOBAL	R2 K7 ; R2 := 0x5bced4c4
	19	[14683]	GETTABLE 	R2 R2 K8 ; R2 := R2[0xe4a5b3ca]
	20	[14683]	MOVE     	R3 R0 ; R3 := R0
	21	[14683]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[14683]	LT       	0 K9 R2 ; if 0.200000 >= R2 then PC := 35
	23	[14683]	JMP      	35 ; PC := 35
	24	[14684]	GETGLOBAL	R2 K1 ; R2 := mCameraTable
	25	[14684]	MUL      	R3 K10 R0 ; R3 := 0.050000 * R0
	26	[14684]	SETTABLE 	R2 K2 R3 ; R2["mRightStickZoomValue"] := R3
	27	[14685]	GETUPVAL 	R2 U0 ; R2 := U0
	28	[14685]	GETTABLE 	R2 R2 K11 ; R2 := R2[0x8375cf88]
	29	[14685]	GETGLOBAL	R3 K1 ; R3 := mCameraTable
	30	[14685]	GETTABLE 	R3 R3 K2 ; R3 := R3["mRightStickZoomValue"]
	31	[14685]	CALL     	R2 2 1 ; R2(R3)
	32	[14686]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[14686]	GETTABLE 	R2 R2 K12 ; R2 := R2[0x7027aec6]
	34	[14686]	CALL     	R2 1 1 ; R2()
	35	[14688]	RETURN   	R0 1 ; return 

function #256 <?:14690,14693> (6 instructions, 24 bytes at 000002112C06A030)
2 params, 4 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14691]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14691]	MOVE     	R3 R1 ; R3 := R1
	3	[14691]	CALL     	R2 2 1 ; R2(R3)
	4	[14692]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[14692]	RETURN   	R2 2 ; return R2 
	6	[14693]	RETURN   	R0 1 ; return 

function #257 <?:14695,14698> (6 instructions, 24 bytes at 000002112C06A120)
2 params, 4 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14696]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14696]	MOVE     	R3 R1 ; R3 := R1
	3	[14696]	CALL     	R2 2 1 ; R2(R3)
	4	[14697]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[14697]	RETURN   	R2 2 ; return R2 
	6	[14698]	RETURN   	R0 1 ; return 

function #258 <?:14700,14711> (42 instructions, 168 bytes at 000002112C06A210)
0 params, 9 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[14701]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[14701]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x91a24e4b]
	3	[14701]	LOADK    	R2 K2 ; R2 := "_root"
	4	[14701]	LOADK    	R3 := 25.000000
	5	[14701]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	6	[14702]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	7	[14702]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x91a24e4b]
	8	[14702]	LOADK    	R3 K2 ; R3 := "_root"
	9	[14702]	LOADK    	R4 := 26.000000
	10	[14702]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	11	[14703]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[14703]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xb5be5d4a]
	13	[14703]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	14	[14703]	LOADK    	R4 K4 ; R4 := "StatContainer.Bg"
	15	[14703]	CALL     	R2 3 3 ; R2,R3 := R2(R3,R4)
	16	[14704]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	17	[14704]	SELF     	R4 R4 K1 ; R5 := R4; R4 := R4[0x91a24e4b]
	18	[14704]	LOADK    	R6 K4 ; R6 := "StatContainer.Bg"
	19	[14704]	LOADK    	R7 := 13.000000
	20	[14704]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	21	[14705]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	22	[14705]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0x91a24e4b]
	23	[14705]	LOADK    	R7 K4 ; R7 := "StatContainer.Bg"
	24	[14705]	LOADK    	R8 := 12.000000
	25	[14705]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	26	[14707]	DIV      	R6 R5 K5 ; R6 := R5 / 2.000000
	27	[14707]	SUB      	R6 R2 R6 ; R6 := R2 - R6
	28	[14707]	LE       	0 R6 R0 ; if R6 > R0 then PC := 39
	29	[14707]	JMP      	39 ; PC := 39
	30	[14708]	DIV      	R6 R5 K5 ; R6 := R5 / 2.000000
	31	[14708]	ADD      	R6 R2 R6 ; R6 := R2 + R6
	32	[14708]	LE       	0 R0 R6 ; if R0 > R6 then PC := 39
	33	[14708]	JMP      	39 ; PC := 39
	34	[14709]	SUB      	R6 R3 R4 ; R6 := R3 - R4
	35	[14709]	LE       	0 R6 R1 ; if R6 > R1 then PC := 39
	36	[14709]	JMP      	39 ; PC := 39
	37	[14710]	LE       	1 R1 R3 ; if R1 <= R3 then PC := 40
	38	[14710]	JMP      	40 ; PC := 40
	39	[14710]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 40
	40	[14710]	OP_LOADBOOL	R6 1 0 ; R6 := true
	41	[14710]	RETURN   	R6 2 ; return R6 
	42	[14711]	RETURN   	R0 1 ; return 

function #259 <?:14713,14727> (59 instructions, 236 bytes at 000002112C06A490)
0 params, 7 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[14714]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[14714]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	3	[14714]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[14714]	TEST     	R0 1 ; if R0 then PC := 59
	5	[14714]	JMP      	59 ; PC := 59
	6	[14715]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	7	[14715]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x91a24e4b]
	8	[14715]	LOADK    	R2 K4 ; R2 := "_root"
	9	[14715]	LOADK    	R3 := 25.000000
	10	[14715]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	11	[14716]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	12	[14716]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x91a24e4b]
	13	[14716]	LOADK    	R3 K4 ; R3 := "_root"
	14	[14716]	LOADK    	R4 := 26.000000
	15	[14716]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	16	[14717]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	17	[14717]	GETTABLE 	R2 R2 K5 ; R2 := R2["mInitialY"]
	18	[14717]	GETGLOBAL	R3 K1 ; R3 := mItemsGrid
	19	[14717]	GETTABLE 	R3 R3 K6 ; R3 := R3["mElementHeight"]
	20	[14717]	DIV      	R3 R3 K7 ; R3 := R3 / 2.000000
	21	[14717]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	22	[14718]	GETGLOBAL	R3 K1 ; R3 := mItemsGrid
	23	[14718]	GETTABLE 	R3 R3 K8 ; R3 := R3["mInitialX"]
	24	[14718]	GETGLOBAL	R4 K1 ; R4 := mItemsGrid
	25	[14718]	GETTABLE 	R4 R4 K9 ; R4 := R4["mElementWidth"]
	26	[14718]	DIV      	R4 R4 K7 ; R4 := R4 / 2.000000
	27	[14718]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	28	[14719]	GETGLOBAL	R4 K1 ; R4 := mItemsGrid
	29	[14719]	GETTABLE 	R4 R4 K10 ; R4 := R4["mColumns"]
	30	[14719]	SUB      	R4 R4 K11 ; R4 := R4 - 1.000000
	31	[14719]	GETGLOBAL	R5 K1 ; R5 := mItemsGrid
	32	[14719]	GETTABLE 	R5 R5 K12 ; R5 := R5["mColumnSeparation"]
	33	[14719]	MUL      	R4 R4 R5 ; R4 := R4 * R5
	34	[14719]	ADD      	R4 R3 R4 ; R4 := R3 + R4
	35	[14719]	GETGLOBAL	R5 K1 ; R5 := mItemsGrid
	36	[14719]	GETTABLE 	R5 R5 K9 ; R5 := R5["mElementWidth"]
	37	[14719]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	38	[14720]	GETGLOBAL	R5 K1 ; R5 := mItemsGrid
	39	[14720]	GETTABLE 	R5 R5 K13 ; R5 := R5["mRows"]
	40	[14720]	SUB      	R5 R5 K11 ; R5 := R5 - 1.000000
	41	[14720]	GETGLOBAL	R6 K1 ; R6 := mItemsGrid
	42	[14720]	GETTABLE 	R6 R6 K14 ; R6 := R6["mRowSeparation"]
	43	[14720]	MUL      	R5 R5 R6 ; R5 := R5 * R6
	44	[14720]	ADD      	R5 R2 R5 ; R5 := R2 + R5
	45	[14720]	GETGLOBAL	R6 K1 ; R6 := mItemsGrid
	46	[14720]	GETTABLE 	R6 R6 K6 ; R6 := R6["mElementHeight"]
	47	[14720]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	48	[14722]	LE       	0 R3 R0 ; if R3 > R0 then PC := 56
	49	[14722]	JMP      	56 ; PC := 56
	50	[14723]	LE       	0 R0 R4 ; if R0 > R4 then PC := 56
	51	[14723]	JMP      	56 ; PC := 56
	52	[14724]	LE       	0 R2 R1 ; if R2 > R1 then PC := 56
	53	[14724]	JMP      	56 ; PC := 56
	54	[14725]	LE       	1 R1 R5 ; if R1 <= R5 then PC := 57
	55	[14725]	JMP      	57 ; PC := 57
	56	[14725]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 57
	57	[14725]	OP_LOADBOOL	R6 1 0 ; R6 := true
	58	[14725]	RETURN   	R6 2 ; return R6 
	59	[14727]	RETURN   	R0 1 ; return 

function #260 <?:14729,14743> (58 instructions, 232 bytes at 000002112C06A820)
0 params, 9 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[14730]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[14730]	GETGLOBAL	R1 K1 ; R1 := mLists
	3	[14730]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCosmeticsList"]
	4	[14730]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[14730]	TEST     	R0 1 ; if R0 then PC := 58
	6	[14730]	JMP      	58 ; PC := 58
	7	[14731]	GETGLOBAL	R0 K3 ; R0 := 0xae91e43b
	8	[14731]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x91a24e4b]
	9	[14731]	LOADK    	R2 K5 ; R2 := "_root"
	10	[14731]	LOADK    	R3 := 25.000000
	11	[14731]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	12	[14732]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	13	[14732]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x91a24e4b]
	14	[14732]	LOADK    	R3 K5 ; R3 := "_root"
	15	[14732]	LOADK    	R4 := 26.000000
	16	[14732]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	17	[14733]	GETGLOBAL	R2 K1 ; R2 := mLists
	18	[14733]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCosmeticsList"]
	19	[14733]	GETTABLE 	R2 R2 K6 ; R2 := R2["mInitListYPos"]
	20	[14734]	GETGLOBAL	R3 K1 ; R3 := mLists
	21	[14734]	GETTABLE 	R3 R3 K2 ; R3 := R3["mCosmeticsList"]
	22	[14734]	GETTABLE 	R3 R3 K7 ; R3 := R3["mInitListXPos"]
	23	[14734]	GETGLOBAL	R4 K1 ; R4 := mLists
	24	[14734]	GETTABLE 	R4 R4 K2 ; R4 := R4["mCosmeticsList"]
	25	[14734]	GETTABLE 	R4 R4 K8 ; R4 := R4["mElementWidth"]
	26	[14734]	DIV      	R4 R4 K9 ; R4 := R4 / 2.000000
	27	[14734]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	28	[14735]	GETGLOBAL	R4 K1 ; R4 := mLists
	29	[14735]	GETTABLE 	R4 R4 K2 ; R4 := R4["mCosmeticsList"]
	30	[14735]	GETTABLE 	R4 R4 K8 ; R4 := R4["mElementWidth"]
	31	[14735]	ADD      	R4 R3 R4 ; R4 := R3 + R4
	32	[14736]	GETUPVAL 	R5 U0 ; R5 := U0
	33	[14736]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x06d055f9]
	34	[14736]	GETGLOBAL	R6 K1 ; R6 := mLists
	35	[14736]	GETTABLE 	R6 R6 K11 ; R6 := R6["mCosmeticsScrollBar"]
	36	[14736]	GETTABLE 	R6 R6 K12 ; R6 := R6["mTotalHeight"]
	37	[14736]	EQ       	0 R6 K13 ; if R6 ~= nil then PC := 40
	38	[14736]	JMP      	40 ; PC := 40
	39	[14736]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 40
	40	[14736]	OP_LOADBOOL	R6 1 0 ; R6 := true
	41	[14736]	GETGLOBAL	R7 K1 ; R7 := mLists
	42	[14736]	GETTABLE 	R7 R7 K11 ; R7 := R7["mCosmeticsScrollBar"]
	43	[14736]	GETTABLE 	R7 R7 K12 ; R7 := R7["mTotalHeight"]
	44	[14736]	LOADK    	R8 := 0.000000
	45	[14736]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	46	[14736]	ADD      	R5 R2 R5 ; R5 := R2 + R5
	47	[14738]	LE       	0 R3 R0 ; if R3 > R0 then PC := 55
	48	[14738]	JMP      	55 ; PC := 55
	49	[14739]	LE       	0 R0 R4 ; if R0 > R4 then PC := 55
	50	[14739]	JMP      	55 ; PC := 55
	51	[14740]	LE       	0 R2 R1 ; if R2 > R1 then PC := 55
	52	[14740]	JMP      	55 ; PC := 55
	53	[14741]	LE       	1 R1 R5 ; if R1 <= R5 then PC := 56
	54	[14741]	JMP      	56 ; PC := 56
	55	[14741]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 56
	56	[14741]	OP_LOADBOOL	R6 1 0 ; R6 := true
	57	[14741]	RETURN   	R6 2 ; return R6 
	58	[14743]	RETURN   	R0 1 ; return 

function #261 <?:14745,14760> (36 instructions, 144 bytes at 000002112C06ABA0)
2 params, 7 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[14746]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14746]	CALL     	R2 1 2 ; R2 := R2()
	3	[14746]	TEST     	R2 0 ; if not R2 then PC := 6
	4	[14746]	JMP      	6 ; PC := 6
	5	[14747]	RETURN   	R0 1 ; return 
	6	[14750]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	7	[14750]	MOVE     	R3 R1 ; R3 := R1
	8	[14750]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[14750]	MOVE     	R1 R2 ; R1 := R2
	10	[14752]	GETUPVAL 	R2 U1 ; R2 := U1
	11	[14752]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x3130199c]
	12	[14752]	CALL     	R2 1 2 ; R2 := R2()
	13	[14753]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	14	[14753]	MOVE     	R4 R2 ; R4 := R2
	15	[14753]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[14753]	TEST     	R3 1 ; if R3 then PC := 24
	17	[14753]	JMP      	24 ; PC := 24
	18	[14754]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x30456f58]
	19	[14754]	MOVE     	R5 R1 ; R5 := R1
	20	[14754]	GETGLOBAL	R6 K4 ; R6 := 0x0032441c
	21	[14754]	GETTABLE 	R6 R6 K5 ; R6 := R6["UISound_Scroll"]
	22	[14754]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	23	[14754]	JMP      	36 ; PC := 36
	24	[14755]	GETGLOBAL	R3 K6 ; R3 := mCameraTable
	25	[14755]	GETTABLE 	R3 R3 K7 ; R3 := R3["ConstantUpdate"]
	26	[14755]	TEST     	R3 1 ; if R3 then PC := 36
	27	[14755]	JMP      	36 ; PC := 36
	28	[14756]	GETUPVAL 	R3 U1 ; R3 := U1
	29	[14756]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x8375cf88]
	30	[14756]	MUL      	R4 K9 R1 ; R4 := -0.400000 * R1
	31	[14756]	CALL     	R3 2 1 ; R3(R4)
	32	[14757]	GETUPVAL 	R3 U1 ; R3 := U1
	33	[14757]	GETTABLE 	R3 R3 K10 ; R3 := R3[0x7027aec6]
	34	[14757]	CALL     	R3 1 1 ; R3()
	35	[14758]	RETURN   	R0 1 ; return 
	36	[14760]	RETURN   	R0 1 ; return 

function #262 <?:14762,14765> (6 instructions, 24 bytes at 000002112C06AE30)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14763]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14763]	LOADK    	R1 := -1.000000
	3	[14763]	CALL     	R0 2 1 ; R0(R1)
	4	[14764]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[14764]	RETURN   	R0 2 ; return R0 
	6	[14765]	RETURN   	R0 1 ; return 

function #263 <?:14767,14770> (6 instructions, 24 bytes at 000002112C06AF20)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[14768]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[14768]	LOADK    	R1 := 1.000000
	3	[14768]	CALL     	R0 2 1 ; R0(R1)
	4	[14769]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[14769]	RETURN   	R0 2 ; return R0 
	6	[14770]	RETURN   	R0 1 ; return 

function #264 <?:14772,14776> (12 instructions, 48 bytes at 000002112C06B010)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[14773]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14773]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	3	[14773]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14773]	TEST     	R1 1 ; if R1 then PC := 12
	5	[14773]	JMP      	12 ; PC := 12
	6	[14774]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	7	[14774]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	8	[14774]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[14774]	MOVE     	R4 R0 ; R4 := R0
	10	[14774]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[14774]	CALL     	R1 0 1 ; R1(R2,...)
	12	[14776]	RETURN   	R0 1 ; return 

function #265 <?:14778,14782> (12 instructions, 48 bytes at 000002112C06B170)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[14779]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14779]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	3	[14779]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14779]	TEST     	R1 1 ; if R1 then PC := 12
	5	[14779]	JMP      	12 ; PC := 12
	6	[14780]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	7	[14780]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[14780]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[14780]	MOVE     	R4 R0 ; R4 := R0
	10	[14780]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[14780]	CALL     	R1 0 1 ; R1(R2,...)
	12	[14782]	RETURN   	R0 1 ; return 

function #266 <?:14784,14788> (17 instructions, 68 bytes at 000002112C06B2D0)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[14785]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14785]	CALL     	R1 1 2 ; R1 := R1()
	3	[14785]	TEST     	R1 1 ; if R1 then PC := 17
	4	[14785]	JMP      	17 ; PC := 17
	5	[14785]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	6	[14785]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	7	[14785]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[14785]	TEST     	R1 1 ; if R1 then PC := 17
	9	[14785]	JMP      	17 ; PC := 17
	10	[14786]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	11	[14786]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x070daa5a]
	12	[14786]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	13	[14786]	MOVE     	R4 R0 ; R4 := R0
	14	[14786]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[14786]	OP_LOADBOOL	R4 1 0 ; R4 := true
	16	[14786]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	17	[14788]	RETURN   	R0 1 ; return 

function #267 <?:14790,14794> (16 instructions, 64 bytes at 000002112C06B470)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[14791]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14791]	CALL     	R1 1 2 ; R1 := R1()
	3	[14791]	TEST     	R1 1 ; if R1 then PC := 16
	4	[14791]	JMP      	16 ; PC := 16
	5	[14791]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	6	[14791]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	7	[14791]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[14791]	TEST     	R1 1 ; if R1 then PC := 16
	9	[14791]	JMP      	16 ; PC := 16
	10	[14792]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	11	[14792]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaf5319dc]
	12	[14792]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	13	[14792]	MOVE     	R4 R0 ; R4 := R0
	14	[14792]	CALL     	R3 2 0 ; R3,... := R3(R4)
	15	[14792]	CALL     	R1 0 1 ; R1(R2,...)
	16	[14794]	RETURN   	R0 1 ; return 

function #268 <?:14796,14800> (9 instructions, 36 bytes at 000002112C06B5F0)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[14797]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[14797]	GETGLOBAL	R2 K1 ; R2 := mItemsGrid
	3	[14797]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14797]	TEST     	R1 1 ; if R1 then PC := 9
	5	[14797]	JMP      	9 ; PC := 9
	6	[14798]	GETGLOBAL	R1 K1 ; R1 := mItemsGrid
	7	[14798]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xafefd935]
	8	[14798]	CALL     	R1 2 1 ; R1(R2)
	9	[14800]	RETURN   	R0 1 ; return 

function #269 <?:14802,14821> (53 instructions, 212 bytes at 000002112C06B740)
1 param, 9 slots, 4 upvalues, 0 locals, 23 constants, 0 functions
	1	[14803]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[14803]	MOVE     	R2 R0 ; R2 := R0
	3	[14803]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14803]	MOVE     	R0 R1 ; R0 := R1
	5	[14804]	LOADK    	R1 K1 ; R1 := "LinkBtn"
	6	[14805]	LOADK    	R2 K2 ; R2 := "/Lotus/Language/Menu/Loadout_LinkCust"
	7	[14806]	EQ       	0 R0 K3 ; if R0 ~= 2.000000 then PC := 12
	8	[14806]	JMP      	12 ; PC := 12
	9	[14807]	LOADK    	R1 K4 ; R1 := "CapturaBtn"
	10	[14808]	LOADK    	R2 K5 ; R2 := "/Lotus/Language/Menu/Loadout_CapturaBtn"
	11	[14808]	JMP      	33 ; PC := 33
	12	[14809]	EQ       	0 R0 K6 ; if R0 ~= 3.000000 then PC := 33
	13	[14809]	JMP      	33 ; PC := 33
	14	[14810]	LOADK    	R1 K7 ; R1 := "ClipLinkBtn"
	15	[14811]	LOADK    	R2 K8 ; R2 := "/Lotus/Language/Menu/Loadout_ClipLinkBtn"
	16	[14812]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[14812]	GETTABLE 	R3 R3 K9 ; R3 := R3[0x3b05de19]
	18	[14812]	GETUPVAL 	R4 U1 ; R4 := U1
	19	[14812]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[14812]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	21	[14812]	TEST     	R3 0 ; if not R3 then PC := 25
	22	[14812]	JMP      	25 ; PC := 25
	23	[14813]	LOADK    	R2 K10 ; R2 := "/Lotus/Language/Menu/Loadout_ClipLookLinkBtn"
	24	[14813]	JMP      	33 ; PC := 33
	25	[14814]	GETUPVAL 	R3 U0 ; R3 := U0
	26	[14814]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x233d2f71]
	27	[14814]	GETUPVAL 	R4 U1 ; R4 := U1
	28	[14814]	OP_LOADBOOL	R5 1 0 ; R5 := true
	29	[14814]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	30	[14814]	TEST     	R3 0 ; if not R3 then PC := 33
	31	[14814]	JMP      	33 ; PC := 33
	32	[14815]	LOADK    	R2 K12 ; R2 := "/Lotus/Language/Menu/Loadout_ClipModLinkBtn"
	33	[14818]	GETGLOBAL	R3 K13 ; R3 := 0xae91e43b
	34	[14818]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0xf64b7262]
	35	[14818]	MOVE     	R5 R1 ; R5 := R1
	36	[14818]	LOADK    	R6 K15 ; R6 := "Icon"
	37	[14818]	LOADK    	R7 := 9.000000
	38	[14818]	GETUPVAL 	R8 U2 ; R8 := U2
	39	[14818]	GETTABLE 	R8 R8 K16 ; R8 := R8["FloatingContentHighlight"]
	40	[14818]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	41	[14819]	GETGLOBAL	R3 K17 ; R3 := _T
	42	[14819]	GETGLOBAL	R4 K13 ; R4 := 0xae91e43b
	43	[14819]	SELF     	R4 R4 K19 ; R5 := R4; R4 := R4[0x42b04007]
	44	[14819]	MOVE     	R6 R2 ; R6 := R2
	45	[14819]	OP_LOADBOOL	R7 0 0 ; R7 := false
	46	[14819]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	47	[14819]	SETTABLE 	R3 K18 R4 ; R3["gToolTip"] := R4
	48	[14820]	GETUPVAL 	R3 U3 ; R3 := U3
	49	[14820]	GETTABLE 	R3 R3 K20 ; R3 := R3[0x659d451f]
	50	[14820]	GETGLOBAL	R4 K21 ; R4 := 0x0032441c
	51	[14820]	GETTABLE 	R4 R4 K22 ; R4 := R4["UISound_Focus"]
	52	[14820]	CALL     	R3 2 1 ; R3(R4)
	53	[14821]	RETURN   	R0 1 ; return 

function #270 <?:14823,14833> (23 instructions, 92 bytes at 000002112C06BCF0)
1 param, 8 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[14824]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[14824]	MOVE     	R2 R0 ; R2 := R0
	3	[14824]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14824]	MOVE     	R0 R1 ; R0 := R1
	5	[14825]	LOADK    	R1 K1 ; R1 := "LinkBtn"
	6	[14826]	EQ       	0 R0 K2 ; if R0 ~= 2.000000 then PC := 10
	7	[14826]	JMP      	10 ; PC := 10
	8	[14827]	LOADK    	R1 K3 ; R1 := "CapturaBtn"
	9	[14827]	JMP      	13 ; PC := 13
	10	[14828]	EQ       	0 R0 K4 ; if R0 ~= 3.000000 then PC := 13
	11	[14828]	JMP      	13 ; PC := 13
	12	[14829]	LOADK    	R1 K5 ; R1 := "ClipLinkBtn"
	13	[14831]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	14	[14831]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xf64b7262]
	15	[14831]	MOVE     	R4 R1 ; R4 := R1
	16	[14831]	LOADK    	R5 K8 ; R5 := "Icon"
	17	[14831]	LOADK    	R6 := 9.000000
	18	[14831]	GETUPVAL 	R7 U0 ; R7 := U0
	19	[14831]	GETTABLE 	R7 R7 K9 ; R7 := R7["FloatingContent"]
	20	[14831]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	21	[14832]	GETGLOBAL	R2 K10 ; R2 := _T
	22	[14832]	SETTABLE 	R2 K11 K12 ; R2["gToolTip"] := nil
	23	[14833]	RETURN   	R0 1 ; return 

function #271 <?:14835,14885> (127 instructions, 508 bytes at 000002112C06BF40)
1 param, 10 slots, 4 upvalues, 0 locals, 37 constants, 1 function
	1	[14836]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[14836]	MOVE     	R2 R0 ; R2 := R0
	3	[14836]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[14836]	MOVE     	R0 R1 ; R0 := R1
	5	[14837]	EQ       	0 R0 K1 ; if R0 ~= 1.000000 then PC := 58
	6	[14837]	JMP      	58 ; PC := 58
	7	[14838]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	8	[14838]	GETGLOBAL	R2 K3 ; R2 := mSelected
	9	[14838]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[14838]	TEST     	R1 1 ; if R1 then PC := 18
	11	[14838]	JMP      	18 ; PC := 18
	12	[14838]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	13	[14838]	GETGLOBAL	R2 K3 ; R2 := mSelected
	14	[14838]	GETTABLE 	R2 R2 K4 ; R2 := R2["Element"]
	15	[14838]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[14838]	TEST     	R1 0 ; if not R1 then PC := 19
	17	[14838]	JMP      	19 ; PC := 19
	18	[14839]	RETURN   	R0 1 ; return 
	19	[14842]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	20	[14842]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xbcfb64ab]
	21	[14842]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[14842]	GETTABLE 	R3 R3 K7 ; R3 := R3[0xc472e470]
	23	[14842]	CALL     	R3 1 0 ; R3,... := R3()
	24	[14842]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	25	[14843]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	26	[14843]	MOVE     	R3 R1 ; R3 := R1
	27	[14843]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[14843]	TEST     	R2 1 ; if R2 then PC := 127
	29	[14843]	JMP      	127 ; PC := 127
	30	[14844]	GETGLOBAL	R2 K8 ; R2 := 0x25d99d89
	31	[14844]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x62c81b76]
	32	[14844]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[14844]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xc1a84a4b]
	34	[14844]	GETGLOBAL	R4 K3 ; R4 := mSelected
	35	[14844]	GETTABLE 	R4 R4 K4 ; R4 := R4["Element"]
	36	[14844]	GETTABLE 	R4 R4 K11 ; R4 := R4["LoadOutType"]
	37	[14844]	GETGLOBAL	R5 K3 ; R5 := mSelected
	38	[14844]	GETTABLE 	R5 R5 K4 ; R5 := R5["Element"]
	39	[14844]	GETTABLE 	R5 R5 K12 ; R5 := R5["LoadOutId"]
	40	[14844]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	41	[14845]	GETGLOBAL	R3 K13 ; R3 := _T
	42	[14845]	NEWTABLE 	R4 0 3 ; R4 := {}
	43	[14845]	SETTABLE 	R4 K15 R2 ; R4["StoredItem"] := R2
	44	[14845]	GETGLOBAL	R5 K3 ; R5 := mSelected
	45	[14845]	GETTABLE 	R5 R5 K4 ; R5 := R5["Element"]
	46	[14845]	GETTABLE 	R5 R5 K11 ; R5 := R5["LoadOutType"]
	47	[14845]	SETTABLE 	R4 K11 R5 ; R4["LoadOutType"] := R5
	48	[14845]	GETGLOBAL	R5 K3 ; R5 := mSelected
	49	[14845]	GETTABLE 	R5 R5 K4 ; R5 := R5["Element"]
	50	[14845]	GETTABLE 	R5 R5 K12 ; R5 := R5["LoadOutId"]
	51	[14845]	SETTABLE 	R4 K16 R5 ; R4["LoadOutSlot"] := R5
	52	[14845]	SETTABLE 	R3 K14 R4 ; R3["AppearanceStoredItem"] := R4
	53	[14847]	SELF     	R3 R1 K17 ; R4 := R1; R3 := R1[0xe4162eed]
	54	[14847]	LOADK    	R5 K18 ; R5 := "LinkAppearance"
	55	[14847]	LOADK    	R6 K19 ; R6 := ""
	56	[14847]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	57	[14848]	JMP      	127 ; PC := 127
	58	[14849]	EQ       	0 R0 K20 ; if R0 ~= 2.000000 then PC := 63
	59	[14849]	JMP      	63 ; PC := 63
	60	[14850]	GETUPVAL 	R3 U1 ; R3 := U1
	61	[14850]	CALL     	R3 1 1 ; R3()
	62	[14850]	JMP      	127 ; PC := 127
	63	[14852]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	64	[14855]	GETUPVAL 	R5 U2 ; R5 := U2
	65	[14855]	GETTABLE 	R5 R5 K21 ; R5 := R5[0x3b05de19]
	66	[14855]	GETUPVAL 	R6 U3 ; R6 := U3
	67	[14855]	OP_LOADBOOL	R7 1 0 ; R7 := true
	68	[14855]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	69	[14855]	TEST     	R5 0 ; if not R5 then PC := 74
	70	[14855]	JMP      	74 ; PC := 74
	71	[14856]	GETGLOBAL	R3 K22 ; R3 := 0x4209ddac
	72	[14857]	LOADK    	R4 K23 ; R4 := "AppearancePreviewDone"
	73	[14857]	JMP      	83 ; PC := 83
	74	[14858]	GETUPVAL 	R5 U2 ; R5 := U2
	75	[14858]	GETTABLE 	R5 R5 K24 ; R5 := R5[0x233d2f71]
	76	[14858]	GETUPVAL 	R6 U3 ; R6 := U3
	77	[14858]	OP_LOADBOOL	R7 1 0 ; R7 := true
	78	[14858]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	79	[14858]	TEST     	R5 0 ; if not R5 then PC := 83
	80	[14858]	JMP      	83 ; PC := 83
	81	[14859]	GETGLOBAL	R3 K25 ; R3 := 0xdeb439ee
	82	[14860]	LOADK    	R4 K26 ; R4 := "ModPreviewDone"
	83	[14863]	TEST     	R3 0 ; if not R3 then PC := 126
	84	[14863]	JMP      	126 ; PC := 126
	85	[14864]	GETGLOBAL	R5 K5 ; R5 := 0x9ba7909f
	86	[14864]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0xbcfb64ab]
	87	[14864]	GETGLOBAL	R7 K27 ; R7 := 0x7ed0a956
	88	[14864]	LOADK    	R8 K28 ; R8 := "/Lotus/Interface/ColorPicker.swf"
	89	[14864]	CALL     	R7 2 0 ; R7,... := R7(R8)
	90	[14864]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	91	[14865]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	92	[14865]	MOVE     	R7 R5 ; R7 := R5
	93	[14865]	CALL     	R6 2 2 ; R6 := R6(R7)
	94	[14865]	TEST     	R6 1 ; if R6 then PC := 100
	95	[14865]	JMP      	100 ; PC := 100
	96	[14867]	SELF     	R6 R5 K17 ; R7 := R5; R6 := R5[0xe4162eed]
	97	[14867]	LOADK    	R8 K29 ; R8 := "Close"
	98	[14867]	LOADK    	R9 K30 ; R9 := "true"
	99	[14867]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	100	[14870]	GETGLOBAL	R6 K32 ; R6 := 0xae91e43b
	101	[14870]	SELF     	R6 R6 K33 ; R7 := R6; R6 := R6[0x1fd6abd0]
	102	[14870]	MOVE     	R8 R3 ; R8 := R3
	103	[14870]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	104	[14870]	SETGLOBALHASH	R6 K31 ; mChildMovie := R6
	105	[14871]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	106	[14871]	GETGLOBAL	R7 K31 ; R7 := mChildMovie
	107	[14871]	CALL     	R6 2 2 ; R6 := R6(R7)
	108	[14871]	TEST     	R6 1 ; if R6 then PC := 126
	109	[14871]	JMP      	126 ; PC := 126
	110	[14872]	OP_LOADBOOL	R6 1 0 ; R6 := true
	111	[14872]	SETGLOBALHASH	R6 K34 ; mInputBlocked := R6
	112	[14874]	GETGLOBAL	R6 K13 ; R6 := _T
	113	[14878]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	114	[14878]	MOVE     	R0 R4 ; R0 := R4
	115	[14878]	SETTABLE 	R6 R4 R7 ; R6[R4] := R7
	116	[14880]	GETGLOBAL	R6 K31 ; R6 := mChildMovie
	117	[14880]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0xe4162eed]
	118	[14880]	LOADK    	R8 K35 ; R8 := "SetOnCloseCallback"
	119	[14880]	MOVE     	R9 R4 ; R9 := R4
	120	[14880]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	121	[14881]	GETGLOBAL	R6 K31 ; R6 := mChildMovie
	122	[14881]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0xe4162eed]
	123	[14881]	LOADK    	R8 K36 ; R8 := "SetLink"
	124	[14881]	GETUPVAL 	R9 U3 ; R9 := U3
	125	[14881]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	126	[14883]	CLOSE    	R3 ; SAVE R3,...
	127	[14885]	RETURN   	R0 1 ; return 

function #272 <?:14887,14888> (1 instruction, 4 bytes at 00000211323A8FD0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[14888]	RETURN   	R0 1 ; return 

function #273 <?:14891,14902> (17 instructions, 68 bytes at 00000211323A90A0)
2 params, 5 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[14892]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[14892]	SETGLOBALHASH	R2 K0 ; mInputBlocked := R2
	3	[14893]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[14893]	CALL     	R2 1 1 ; R2()
	5	[14895]	TEST     	R0 0 ; if not R0 then PC := 13
	6	[14895]	JMP      	13 ; PC := 13
	7	[14896]	GETUPVAL 	R2 U1 ; R2 := U1
	8	[14896]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x4479c7ef]
	9	[14896]	CALL     	R2 1 2 ; R2 := R2()
	10	[14896]	TEST     	R2 0 ; if not R2 then PC := 13
	11	[14896]	JMP      	13 ; PC := 13
	12	[14897]	RETURN   	R0 1 ; return 
	13	[14901]	GETUPVAL 	R2 U2 ; R2 := U2
	14	[14901]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/PurchaseFailure"
	15	[14901]	LOADK    	R4 := 1.000000
	16	[14901]	CALL     	R2 3 1 ; R2(R3,R4)
	17	[14902]	RETURN   	R0 1 ; return 

function #274 <?:14904,14909> (13 instructions, 52 bytes at 00000211323A9230)
2 params, 5 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[14905]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14905]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[14905]	GETTABLE 	R3 R3 K0 ; R3 := R3["BROWSING_CONSUMABLES"]
	4	[14905]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 13
	5	[14905]	JMP      	13 ; PC := 13
	6	[14906]	GETUPVAL 	R2 U2 ; R2 := U2
	7	[14906]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	8	[14906]	MOVE     	R4 R1 ; R4 := R1
	9	[14906]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[14906]	SETTABLE 	R2 K1 R3 ; R2["X"] := R3
	11	[14907]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[14907]	RETURN   	R2 2 ; return R2 
	13	[14909]	RETURN   	R0 1 ; return 

function #275 <?:14911,14916> (13 instructions, 52 bytes at 00000211323A93A0)
2 params, 5 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[14912]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14912]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[14912]	GETTABLE 	R3 R3 K0 ; R3 := R3["BROWSING_CONSUMABLES"]
	4	[14912]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 13
	5	[14912]	JMP      	13 ; PC := 13
	6	[14913]	GETUPVAL 	R2 U2 ; R2 := U2
	7	[14913]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	8	[14913]	MOVE     	R4 R1 ; R4 := R1
	9	[14913]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[14913]	SETTABLE 	R2 K1 R3 ; R2["X"] := R3
	11	[14914]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[14914]	RETURN   	R2 2 ; return R2 
	13	[14916]	RETURN   	R0 1 ; return 

function #276 <?:14918,14923> (13 instructions, 52 bytes at 00000211323A9510)
2 params, 5 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[14919]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14919]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[14919]	GETTABLE 	R3 R3 K0 ; R3 := R3["BROWSING_CONSUMABLES"]
	4	[14919]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 13
	5	[14919]	JMP      	13 ; PC := 13
	6	[14920]	GETUPVAL 	R2 U2 ; R2 := U2
	7	[14920]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	8	[14920]	MOVE     	R4 R1 ; R4 := R1
	9	[14920]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[14920]	SETTABLE 	R2 K1 R3 ; R2["Y"] := R3
	11	[14921]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[14921]	RETURN   	R2 2 ; return R2 
	13	[14923]	RETURN   	R0 1 ; return 

function #277 <?:14925,14930> (13 instructions, 52 bytes at 00000211323A9680)
2 params, 5 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[14926]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[14926]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[14926]	GETTABLE 	R3 R3 K0 ; R3 := R3["BROWSING_CONSUMABLES"]
	4	[14926]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 13
	5	[14926]	JMP      	13 ; PC := 13
	6	[14927]	GETUPVAL 	R2 U2 ; R2 := U2
	7	[14927]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	8	[14927]	MOVE     	R4 R1 ; R4 := R1
	9	[14927]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[14927]	SETTABLE 	R2 K1 R3 ; R2["Y"] := R3
	11	[14928]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[14928]	RETURN   	R2 2 ; return R2 
	13	[14930]	RETURN   	R0 1 ; return 

function #278 <?:14932,14945> (37 instructions, 148 bytes at 00000211323A97F0)
1 param, 3 slots, 3 upvalues, 0 locals, 16 constants, 0 functions
	1	[14933]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[14933]	GETTABLE 	R1 R1 K0 ; R1 := R1["Current"]
	3	[14933]	EQ       	1 R1 K2 ; if R1 == 3.000000 then PC := 17
	4	[14933]	JMP      	17 ; PC := 17
	5	[14933]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[14933]	GETTABLE 	R1 R1 K0 ; R1 := R1["Current"]
	7	[14933]	EQ       	0 R1 K3 ; if R1 ~= 2.000000 then PC := 28
	8	[14933]	JMP      	28 ; PC := 28
	9	[14933]	GETGLOBAL	R1 K4 ; R1 := _T
	10	[14933]	GETTABLE 	R1 R1 K5 ; R1 := R1["ArsenalPvPOnlyReturnConsole"]
	11	[14933]	EQ       	1 R1 K6 ; if R1 == nil then PC := 28
	12	[14933]	JMP      	28 ; PC := 28
	13	[14933]	GETGLOBAL	R1 K4 ; R1 := _T
	14	[14933]	GETTABLE 	R1 R1 K7 ; R1 := R1["loadoutInProgress"]
	15	[14933]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 28
	16	[14933]	JMP      	28 ; PC := 28
	17	[14936]	GETGLOBAL	R1 K8 ; R1 := mLists
	18	[14936]	GETTABLE 	R1 R1 K9 ; R1 := R1["mLoadOutCategories"]
	19	[14936]	GETGLOBAL	R2 K8 ; R2 := mLists
	20	[14936]	GETTABLE 	R2 R2 K9 ; R2 := R2["mLoadOutCategories"]
	21	[14936]	GETTABLE 	R2 R2 K11 ; R2 := R2["mStates"]
	22	[14936]	GETTABLE 	R2 R2 K12 ; R2 := R2["TENNO"]
	23	[14936]	SETTABLE 	R1 K10 R2 ; R1["mState"] := R2
	24	[14937]	GETUPVAL 	R1 U1 ; R1 := U1
	25	[14937]	GETTABLE 	R1 R1 K13 ; R1 := R1[0x05eeb9db]
	26	[14937]	LOADK    	R2 := 1.000000
	27	[14937]	CALL     	R1 2 1 ; R1(R2)
	28	[14940]	GETGLOBAL	R1 K4 ; R1 := _T
	29	[14940]	GETTABLE 	R1 R1 K14 ; R1 := R1["LoadoutSaveRequired"]
	30	[14940]	TEST     	R1 0 ; if not R1 then PC := 37
	31	[14940]	JMP      	37 ; PC := 37
	32	[14941]	SETGLOBALHASH	R0 K15 ; mHandleCanBeClosedCallback := R0
	33	[14942]	GETUPVAL 	R1 U2 ; R1 := U2
	34	[14942]	CALL     	R1 1 1 ; R1()
	35	[14943]	OP_LOADBOOL	R1 1 0 ; R1 := true
	36	[14943]	RETURN   	R1 2 ; return R1 
	37	[14945]	RETURN   	R0 1 ; return 

function #279 <?:14947,14958> (33 instructions, 132 bytes at 00000211323A9AF0)
1 param, 6 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[14948]	EQ       	1 R0 K0 ; if R0 == nil then PC := 33
	2	[14948]	JMP      	33 ; PC := 33
	3	[14948]	EQ       	1 R0 K1 ; if R0 == "" then PC := 33
	4	[14948]	JMP      	33 ; PC := 33
	5	[14948]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[14948]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	7	[14948]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[14948]	TEST     	R1 1 ; if R1 then PC := 33
	9	[14948]	JMP      	33 ; PC := 33
	10	[14949]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[14949]	SETGLOBALHASH	R1 K4 ; mInputBlocked := R1
	12	[14951]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[14951]	CALL     	R1 1 2 ; R1 := R1()
	14	[14953]	GETGLOBAL	R2 K5 ; R2 := mCurrentLoadout
	15	[14953]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	16	[14953]	GETTABLE 	R2 R2 K6 ; R2 := R2["mItemId"]
	17	[14953]	GETGLOBAL	R3 K8 ; R3 := 0x6c97a788
	18	[14953]	GETTABLE 	R3 R3 K9 ; R3 := R3["InvalidItemID"]
	19	[14953]	SETTABLE 	R2 K7 R3 ; R2["mId"] := R3
	20	[14954]	GETGLOBAL	R2 K5 ; R2 := mCurrentLoadout
	21	[14954]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	22	[14954]	SETTABLE 	R2 K10 R0 ; R2["mName"] := R0
	23	[14955]	GETGLOBAL	R2 K11 ; R2 := mInventory
	24	[14955]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x6beb8ae1]
	25	[14955]	MOVE     	R4 R1 ; R4 := R1
	26	[14955]	GETGLOBAL	R5 K5 ; R5 := mCurrentLoadout
	27	[14955]	GETTABLE 	R5 R5 R1 ; R5 := R5[R1]
	28	[14955]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	29	[14956]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	30	[14956]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0xb6e2ab0d]
	31	[14956]	LOADK    	R4 K14 ; R4 := "OnNewPreset"
	32	[14956]	CALL     	R2 3 1 ; R2(R3,R4)
	33	[14958]	RETURN   	R0 1 ; return 

function #280 <?:14960,14964> (9 instructions, 36 bytes at 00000211323A9DC0)
1 param, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[14961]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[14961]	SETTABLE 	R1 K1 R0 ; R1["mTrigger"] := R0
	3	[14962]	GETGLOBAL	R1 K0 ; R1 := _T
	4	[14962]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x194aa42b]
	5	[14962]	LOADK    	R2 K3 ; R2 := "LoadOut"
	6	[14962]	CALL     	R1 2 1 ; R1(R2)
	7	[14963]	OP_LOADBOOL	R1 1 0 ; R1 := true
	8	[14963]	RETURN   	R1 2 ; return R1 
	9	[14964]	RETURN   	R0 1 ; return 

function #281 <?:14966,14978> (29 instructions, 116 bytes at 00000211323A9F20)
1 param, 7 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[14968]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[14968]	SETTABLE 	R1 K1 K2 ; R1["EnteringLoadout"] := true
	3	[14970]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[14970]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x2a1108a9]
	5	[14970]	LOADK    	R2 K4 ; R2 := "ArsenalDevice"
	6	[14970]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0xd1586535]
	7	[14970]	CALL     	R3 2 0 ; R3,... := R3(R4)
	8	[14970]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	9	[14971]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	10	[14971]	MOVE     	R3 R1 ; R3 := R1
	11	[14971]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[14971]	TEST     	R2 1 ; if R2 then PC := 27
	13	[14971]	JMP      	27 ; PC := 27
	14	[14972]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x5d985c7e]
	15	[14972]	GETGLOBAL	R4 K8 ; R4 := 0x75a3529a
	16	[14972]	OP_LOADBOOL	R5 1 0 ; R5 := true
	17	[14972]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	18	[14973]	GETGLOBAL	R2 K0 ; R2 := _T
	19	[14973]	GETTABLE 	R2 R2 K1 ; R2 := R2["EnteringLoadout"]
	20	[14973]	TEST     	R2 0 ; if not R2 then PC := 27
	21	[14973]	JMP      	27 ; PC := 27
	22	[14974]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x5d985c7e]
	23	[14974]	GETGLOBAL	R4 K9 ; R4 := 0x975c1752
	24	[14974]	OP_LOADBOOL	R5 0 0 ; R5 := false
	25	[14974]	OP_LOADBOOL	R6 1 0 ; R6 := true
	26	[14974]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	27	[14977]	GETGLOBAL	R2 K0 ; R2 := _T
	28	[14977]	SETTABLE 	R2 K1 K10 ; R2["EnteringLoadout"] := false
	29	[14978]	RETURN   	R0 1 ; return 

function #282 <?:14980,14990> (27 instructions, 108 bytes at 00000211323AA1D0)
1 param, 7 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[14981]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[14981]	SETTABLE 	R1 K1 K2 ; R1["EnteringLoadout"] := false
	3	[14983]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[14983]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x2a1108a9]
	5	[14983]	LOADK    	R2 K4 ; R2 := "ArsenalDevice"
	6	[14983]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0xd1586535]
	7	[14983]	CALL     	R3 2 0 ; R3,... := R3(R4)
	8	[14983]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	9	[14984]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	10	[14984]	MOVE     	R3 R1 ; R3 := R1
	11	[14984]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[14984]	TEST     	R2 1 ; if R2 then PC := 27
	13	[14984]	JMP      	27 ; PC := 27
	14	[14985]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x5d985c7e]
	15	[14985]	GETGLOBAL	R4 K8 ; R4 := 0x1c2261ee
	16	[14985]	OP_LOADBOOL	R5 1 0 ; R5 := true
	17	[14985]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	18	[14986]	GETGLOBAL	R2 K0 ; R2 := _T
	19	[14986]	GETTABLE 	R2 R2 K1 ; R2 := R2["EnteringLoadout"]
	20	[14986]	TEST     	R2 1 ; if R2 then PC := 27
	21	[14986]	JMP      	27 ; PC := 27
	22	[14987]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x5d985c7e]
	23	[14987]	GETGLOBAL	R4 K9 ; R4 := 0x13cef3bc
	24	[14987]	OP_LOADBOOL	R5 0 0 ; R5 := false
	25	[14987]	OP_LOADBOOL	R6 1 0 ; R6 := true
	26	[14987]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	27	[14990]	RETURN   	R0 1 ; return 

function #283 <?:14992,15000> (22 instructions, 88 bytes at 00000211323AA410)
1 param, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[14993]	LOADK    	R1 := 0.000000
	2	[14994]	LT       	0 R1 K0 ; if R1 >= 1.000000 then PC := 17
	3	[14994]	JMP      	17 ; PC := 17
	4	[14995]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x986d2ab8]
	5	[14995]	GETGLOBAL	R4 K2 ; R4 := 0x6c97a788
	6	[14995]	GETTABLE 	R4 R4 K3 ; R4 := R4["UNLIT_ATTEN"]
	7	[14995]	SUB      	R5 K0 R1 ; R5 := 1.000000 - R1
	8	[14995]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	9	[14996]	GETGLOBAL	R2 K4 ; R2 := 0x67652851
	10	[14996]	CALL     	R2 1 2 ; R2 := R2()
	11	[14996]	MUL      	R2 R2 K5 ; R2 := R2 * 2.000000
	12	[14996]	ADD      	R1 R1 R2 ; R1 := R1 + R2
	13	[14997]	GETGLOBAL	R2 K6 ; R2 := 0xcbd666e1
	14	[14997]	LOADK    	R3 := 0.000000
	15	[14997]	CALL     	R2 2 1 ; R2(R3)
	16	[14997]	JMP      	2 ; PC := 2
	17	[14999]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x986d2ab8]
	18	[14999]	GETGLOBAL	R4 K2 ; R4 := 0x6c97a788
	19	[14999]	GETTABLE 	R4 R4 K3 ; R4 := R4["UNLIT_ATTEN"]
	20	[14999]	LOADK    	R5 := 0.000000
	21	[14999]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	22	[15000]	RETURN   	R0 1 ; return 

function #284 <?:15002,15010> (22 instructions, 88 bytes at 00000211323AA600)
1 param, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[15003]	LOADK    	R1 := 0.000000
	2	[15004]	LT       	0 R1 K0 ; if R1 >= 1.000000 then PC := 17
	3	[15004]	JMP      	17 ; PC := 17
	4	[15005]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x986d2ab8]
	5	[15005]	GETGLOBAL	R4 K2 ; R4 := 0x6c97a788
	6	[15005]	GETTABLE 	R4 R4 K3 ; R4 := R4["UNLIT_ATTEN"]
	7	[15005]	MOVE     	R5 R1 ; R5 := R1
	8	[15005]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	9	[15006]	GETGLOBAL	R2 K4 ; R2 := 0x67652851
	10	[15006]	CALL     	R2 1 2 ; R2 := R2()
	11	[15006]	MUL      	R2 R2 K5 ; R2 := R2 * 3.000000
	12	[15006]	ADD      	R1 R1 R2 ; R1 := R1 + R2
	13	[15007]	GETGLOBAL	R2 K6 ; R2 := 0xcbd666e1
	14	[15007]	LOADK    	R3 := 0.000000
	15	[15007]	CALL     	R2 2 1 ; R2(R3)
	16	[15007]	JMP      	2 ; PC := 2
	17	[15009]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x986d2ab8]
	18	[15009]	GETGLOBAL	R4 K2 ; R4 := 0x6c97a788
	19	[15009]	GETTABLE 	R4 R4 K3 ; R4 := R4["UNLIT_ATTEN"]
	20	[15009]	LOADK    	R5 := 1.000000
	21	[15009]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	22	[15010]	RETURN   	R0 1 ; return 

function #285 <?:15012,15077> (172 instructions, 688 bytes at 00000211323AA7F0)
0 params, 9 slots, 1 upvalue, 0 locals, 26 constants, 0 functions
	1	[15015]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[15015]	GETTABLE 	R2 R2 K1 ; R2 := R2["upgradeItemLot"]
	3	[15016]	GETGLOBAL	R3 K0 ; R3 := _T
	4	[15016]	GETTABLE 	R3 R3 K2 ; R3 := R3["upgradeItemSlot"]
	5	[15017]	EQ       	1 R3 K3 ; if R3 == nil then PC := 171
	6	[15017]	JMP      	171 ; PC := 171
	7	[15018]	EQ       	0 R2 K5 ; if R2 ~= 1.000000 then PC := 66
	8	[15018]	JMP      	66 ; PC := 66
	9	[15019]	EQ       	0 R3 K6 ; if R3 ~= 0.000000 then PC := 39
	10	[15019]	JMP      	39 ; PC := 39
	11	[15020]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	12	[15020]	GETGLOBAL	R5 K0 ; R5 := _T
	13	[15020]	GETTABLE 	R5 R5 K8 ; R5 := R5["MenuSuitAvatar"]
	14	[15020]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[15020]	TEST     	R4 1 ; if R4 then PC := 24
	16	[15020]	JMP      	24 ; PC := 24
	17	[15021]	GETGLOBAL	R4 K0 ; R4 := _T
	18	[15021]	GETTABLE 	R4 R4 K8 ; R4 := R4["MenuSuitAvatar"]
	19	[15021]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0xde321e6f]
	20	[15021]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[15021]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0x2676deee]
	22	[15021]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[15021]	MOVE     	R0 R4 ; R0 := R4
	24	[15023]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	25	[15023]	MOVE     	R5 R0 ; R5 := R0
	26	[15023]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[15023]	TEST     	R4 1 ; if R4 then PC := 171
	28	[15023]	JMP      	171 ; PC := 171
	29	[15023]	SELF     	R4 R0 K11 ; R5 := R0; R4 := R0[0xd4cc05b4]
	30	[15023]	CALL     	R4 2 2 ; R4 := R4(R5)
	31	[15023]	TEST     	R4 0 ; if not R4 then PC := 171
	32	[15023]	JMP      	171 ; PC := 171
	33	[15024]	SELF     	R4 R0 K9 ; R5 := R0; R4 := R0[0xde321e6f]
	34	[15024]	CALL     	R4 2 2 ; R4 := R4(R5)
	35	[15024]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0xf7d48ee0]
	36	[15024]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[15024]	MOVE     	R1 R4 ; R1 := R4
	38	[15025]	JMP      	171 ; PC := 171
	39	[15026]	EQ       	0 R3 K13 ; if R3 ~= 2.000000 then PC := 171
	40	[15026]	JMP      	171 ; PC := 171
	41	[15027]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	42	[15027]	GETGLOBAL	R5 K0 ; R5 := _T
	43	[15027]	GETTABLE 	R5 R5 K8 ; R5 := R5["MenuSuitAvatar"]
	44	[15027]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[15027]	TEST     	R4 1 ; if R4 then PC := 54
	46	[15027]	JMP      	54 ; PC := 54
	47	[15028]	GETGLOBAL	R4 K0 ; R4 := _T
	48	[15028]	GETTABLE 	R4 R4 K8 ; R4 := R4["MenuSuitAvatar"]
	49	[15028]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0xde321e6f]
	50	[15028]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[15028]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0x2676deee]
	52	[15028]	CALL     	R4 2 2 ; R4 := R4(R5)
	53	[15028]	MOVE     	R0 R4 ; R0 := R4
	54	[15030]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	55	[15030]	MOVE     	R5 R0 ; R5 := R0
	56	[15030]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[15030]	TEST     	R4 1 ; if R4 then PC := 171
	58	[15030]	JMP      	171 ; PC := 171
	59	[15031]	SELF     	R4 R0 K9 ; R5 := R0; R4 := R0[0xde321e6f]
	60	[15031]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[15031]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0xe85a2361]
	62	[15031]	LOADK    	R6 := 1.000000
	63	[15031]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	64	[15031]	MOVE     	R1 R4 ; R1 := R4
	65	[15033]	JMP      	171 ; PC := 171
	66	[15034]	EQ       	1 R2 K16 ; if R2 == 4.000000 then PC := 171
	67	[15034]	JMP      	171 ; PC := 171
	68	[15034]	EQ       	1 R2 K17 ; if R2 == 6.000000 then PC := 171
	69	[15034]	JMP      	171 ; PC := 171
	70	[15035]	GETGLOBAL	R4 K0 ; R4 := _T
	71	[15035]	GETTABLE 	R0 R4 K8 ; R0 := R4["MenuSuitAvatar"]
	72	[15036]	EQ       	0 R2 K18 ; if R2 ~= 8.000000 then PC := 76
	73	[15036]	JMP      	76 ; PC := 76
	74	[15037]	GETGLOBAL	R4 K0 ; R4 := _T
	75	[15037]	GETTABLE 	R0 R4 K19 ; R0 := R4["MechAvatar"]
	76	[15040]	EQ       	0 R3 K6 ; if R3 ~= 0.000000 then PC := 97
	77	[15040]	JMP      	97 ; PC := 97
	78	[15041]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	79	[15041]	MOVE     	R5 R0 ; R5 := R0
	80	[15041]	CALL     	R4 2 2 ; R4 := R4(R5)
	81	[15041]	TEST     	R4 1 ; if R4 then PC := 171
	82	[15041]	JMP      	171 ; PC := 171
	83	[15042]	EQ       	0 R2 K13 ; if R2 ~= 2.000000 then PC := 91
	84	[15042]	JMP      	91 ; PC := 91
	85	[15043]	SELF     	R4 R0 K9 ; R5 := R0; R4 := R0[0xde321e6f]
	86	[15043]	CALL     	R4 2 2 ; R4 := R4(R5)
	87	[15043]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0x2303a280]
	88	[15043]	CALL     	R4 2 2 ; R4 := R4(R5)
	89	[15043]	MOVE     	R1 R4 ; R1 := R4
	90	[15043]	JMP      	171 ; PC := 171
	91	[15045]	SELF     	R4 R0 K9 ; R5 := R0; R4 := R0[0xde321e6f]
	92	[15045]	CALL     	R4 2 2 ; R4 := R4(R5)
	93	[15045]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0xf7d48ee0]
	94	[15045]	CALL     	R4 2 2 ; R4 := R4(R5)
	95	[15045]	MOVE     	R1 R4 ; R1 := R4
	96	[15047]	JMP      	171 ; PC := 171
	97	[15048]	GETGLOBAL	R4 K0 ; R4 := _T
	98	[15048]	GETTABLE 	R4 R4 K21 ; R4 := R4["mSpecialSuitMode"]
	99	[15048]	TEST     	R4 0 ; if not R4 then PC := 128
	100	[15048]	JMP      	128 ; PC := 128
	101	[15049]	GETGLOBAL	R4 K0 ; R4 := _T
	102	[15049]	GETTABLE 	R0 R4 K22 ; R0 := R4["SpecialSuitAvatar"]
	103	[15051]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	104	[15051]	MOVE     	R5 R0 ; R5 := R0
	105	[15051]	CALL     	R4 2 2 ; R4 := R4(R5)
	106	[15051]	TEST     	R4 1 ; if R4 then PC := 171
	107	[15051]	JMP      	171 ; PC := 171
	108	[15052]	EQ       	0 R3 K23 ; if R3 ~= 5.000000 then PC := 116
	109	[15052]	JMP      	116 ; PC := 116
	110	[15053]	SELF     	R4 R0 K9 ; R5 := R0; R4 := R0[0xde321e6f]
	111	[15053]	CALL     	R4 2 2 ; R4 := R4(R5)
	112	[15053]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0xf7d48ee0]
	113	[15053]	CALL     	R4 2 2 ; R4 := R4(R5)
	114	[15053]	MOVE     	R1 R4 ; R1 := R4
	115	[15053]	JMP      	171 ; PC := 171
	116	[15055]	GETUPVAL 	R4 U0 ; R4 := U0
	117	[15055]	MOVE     	R5 R3 ; R5 := R3
	118	[15055]	CALL     	R4 2 2 ; R4 := R4(R5)
	119	[15056]	TEST     	R4 0 ; if not R4 then PC := 171
	120	[15056]	JMP      	171 ; PC := 171
	121	[15057]	SELF     	R5 R0 K9 ; R6 := R0; R5 := R0[0xde321e6f]
	122	[15057]	CALL     	R5 2 2 ; R5 := R5(R6)
	123	[15057]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xe85a2361]
	124	[15057]	MOVE     	R7 R4 ; R7 := R4
	125	[15057]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	126	[15057]	MOVE     	R1 R5 ; R1 := R5
	127	[15060]	JMP      	171 ; PC := 171
	128	[15061]	EQ       	0 R3 K16 ; if R3 ~= 4.000000 then PC := 153
	129	[15061]	JMP      	153 ; PC := 153
	130	[15062]	GETGLOBAL	R5 K7 ; R5 := 0x7b998233
	131	[15062]	MOVE     	R6 R0 ; R6 := R0
	132	[15062]	CALL     	R5 2 2 ; R5 := R5(R6)
	133	[15062]	TEST     	R5 1 ; if R5 then PC := 171
	134	[15062]	JMP      	171 ; PC := 171
	135	[15062]	GETGLOBAL	R5 K7 ; R5 := 0x7b998233
	136	[15062]	GETGLOBAL	R6 K24 ; R6 := mSelected
	137	[15062]	CALL     	R5 2 2 ; R5 := R5(R6)
	138	[15062]	TEST     	R5 1 ; if R5 then PC := 171
	139	[15062]	JMP      	171 ; PC := 171
	140	[15062]	GETGLOBAL	R5 K7 ; R5 := 0x7b998233
	141	[15062]	GETGLOBAL	R6 K24 ; R6 := mSelected
	142	[15062]	GETTABLE 	R6 R6 K25 ; R6 := R6["Element"]
	143	[15062]	CALL     	R5 2 2 ; R5 := R5(R6)
	144	[15062]	TEST     	R5 1 ; if R5 then PC := 171
	145	[15062]	JMP      	171 ; PC := 171
	146	[15063]	SELF     	R5 R0 K9 ; R6 := R0; R5 := R0[0xde321e6f]
	147	[15063]	CALL     	R5 2 2 ; R5 := R5(R6)
	148	[15063]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xe85a2361]
	149	[15063]	LOADK    	R7 := 10.000000
	150	[15063]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	151	[15063]	MOVE     	R1 R5 ; R1 := R5
	152	[15064]	JMP      	171 ; PC := 171
	153	[15066]	GETUPVAL 	R5 U0 ; R5 := U0
	154	[15066]	MOVE     	R6 R3 ; R6 := R3
	155	[15066]	CALL     	R5 2 2 ; R5 := R5(R6)
	156	[15067]	TEST     	R5 1 ; if R5 then PC := 160
	157	[15067]	JMP      	160 ; PC := 160
	158	[15068]	LOADNIL  	R6 R6 ; R6 := nil
	159	[15068]	RETURN   	R6 2 ; return R6 
	160	[15070]	GETGLOBAL	R6 K7 ; R6 := 0x7b998233
	161	[15070]	MOVE     	R7 R0 ; R7 := R0
	162	[15070]	CALL     	R6 2 2 ; R6 := R6(R7)
	163	[15070]	TEST     	R6 1 ; if R6 then PC := 171
	164	[15070]	JMP      	171 ; PC := 171
	165	[15071]	SELF     	R6 R0 K9 ; R7 := R0; R6 := R0[0xde321e6f]
	166	[15071]	CALL     	R6 2 2 ; R6 := R6(R7)
	167	[15071]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0xe85a2361]
	168	[15071]	MOVE     	R8 R5 ; R8 := R5
	169	[15071]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	170	[15071]	MOVE     	R1 R6 ; R1 := R6
	171	[15076]	RETURN   	R1 2 ; return R1 
	172	[15077]	RETURN   	R0 1 ; return 

function #286 <?:15079,15161> (296 instructions, 1184 bytes at 00000211323AAFB0)
2 params, 20 slots, 8 upvalues, 0 locals, 55 constants, 0 functions
	1	[15080]	GETGLOBAL	R2 K0 ; R2 := 0x7ed0a956
	2	[15080]	LOADK    	R3 K1 ; R3 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
	3	[15080]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[15081]	GETGLOBAL	R3 K0 ; R3 := 0x7ed0a956
	5	[15081]	LOADK    	R4 K2 ; R4 := "/Lotus/Weapons/Tenno/LotusLongGun"
	6	[15081]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[15082]	GETGLOBAL	R4 K0 ; R4 := 0x7ed0a956
	8	[15082]	LOADK    	R5 K3 ; R5 := "/Lotus/Weapons/Tenno/Archwing/Primary/ArchGun"
	9	[15082]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[15083]	GETUPVAL 	R5 U0 ; R5 := U0
	11	[15083]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x517d4a58]
	12	[15083]	CALL     	R5 1 2 ; R5 := R5()
	13	[15084]	GETGLOBAL	R6 K5 ; R6 := 0x7b998233
	14	[15084]	MOVE     	R7 R5 ; R7 := R5
	15	[15084]	CALL     	R6 2 2 ; R6 := R6(R7)
	16	[15084]	TEST     	R6 0 ; if not R6 then PC := 21
	17	[15084]	JMP      	21 ; PC := 21
	18	[15085]	GETUPVAL 	R6 U1 ; R6 := U1
	19	[15085]	SETTABLE 	R6 K6 K7 ; R6["mCachedStats"] := nil
	20	[15086]	RETURN   	R0 1 ; return 
	21	[15089]	LOADNIL  	R6 R6 ; R6 := nil
	22	[15090]	OP_LOADBOOL	R7 0 0 ; R7 := false
	23	[15091]	OP_LOADBOOL	R8 0 0 ; R8 := false
	24	[15093]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	25	[15093]	GETGLOBAL	R11 K9 ; R11 := 0x26072944
	26	[15093]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	27	[15093]	TEST     	R9 0 ; if not R9 then PC := 39
	28	[15093]	JMP      	39 ; PC := 39
	29	[15094]	GETUPVAL 	R9 U2 ; R9 := U2
	30	[15094]	GETTABLE 	R9 R9 K10 ; R9 := R9[0x06d055f9]
	31	[15094]	MOVE     	R10 R0 ; R10 := R0
	32	[15094]	LOADNIL  	R11 R11 ; R11 := nil
	33	[15094]	GETGLOBAL	R12 K11 ; R12 := _T
	34	[15094]	GETTABLE 	R12 R12 K12 ; R12 := R12["KDriveAvatar"]
	35	[15094]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	36	[15094]	MOVE     	R6 R9 ; R6 := R9
	37	[15095]	OP_LOADBOOL	R7 1 0 ; R7 := true
	38	[15095]	JMP      	183 ; PC := 183
	39	[15096]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	40	[15096]	GETGLOBAL	R11 K13 ; R11 := 0x88980f4f
	41	[15096]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	42	[15096]	TEST     	R9 1 ; if R9 then PC := 49
	43	[15096]	JMP      	49 ; PC := 49
	44	[15096]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	45	[15096]	GETGLOBAL	R11 K14 ; R11 := 0xb506ff82
	46	[15096]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	47	[15096]	TEST     	R9 0 ; if not R9 then PC := 58
	48	[15096]	JMP      	58 ; PC := 58
	49	[15097]	GETGLOBAL	R9 K11 ; R9 := _T
	50	[15097]	GETTABLE 	R9 R9 K15 ; R9 := R9["MenuSuitAvatar"]
	51	[15097]	SELF     	R9 R9 K16 ; R10 := R9; R9 := R9[0xde321e6f]
	52	[15097]	CALL     	R9 2 2 ; R9 := R9(R10)
	53	[15097]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0x2676deee]
	54	[15097]	CALL     	R9 2 2 ; R9 := R9(R10)
	55	[15097]	MOVE     	R6 R9 ; R6 := R9
	56	[15098]	OP_LOADBOOL	R7 1 0 ; R7 := true
	57	[15098]	JMP      	183 ; PC := 183
	58	[15099]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	59	[15099]	MOVE     	R11 R2 ; R11 := R2
	60	[15099]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	61	[15099]	TEST     	R9 1 ; if R9 then PC := 68
	62	[15099]	JMP      	68 ; PC := 68
	63	[15099]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	64	[15099]	GETGLOBAL	R11 K18 ; R11 := gFlightJetPackItemType
	65	[15099]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	66	[15099]	TEST     	R9 0 ; if not R9 then PC := 96
	67	[15099]	JMP      	96 ; PC := 96
	68	[15100]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	69	[15100]	GETGLOBAL	R11 K19 ; R11 := 0x3219bb07
	70	[15100]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	71	[15100]	TEST     	R9 0 ; if not R9 then PC := 74
	72	[15100]	JMP      	74 ; PC := 74
	73	[15101]	OP_LOADBOOL	R8 1 0 ; R8 := true
	74	[15104]	GETGLOBAL	R9 K11 ; R9 := _T
	75	[15104]	GETTABLE 	R9 R9 K20 ; R9 := R9["mSpecialSuitMode"]
	76	[15104]	TEST     	R9 0 ; if not R9 then PC := 87
	77	[15104]	JMP      	87 ; PC := 87
	78	[15105]	GETUPVAL 	R9 U2 ; R9 := U2
	79	[15105]	GETTABLE 	R9 R9 K10 ; R9 := R9[0x06d055f9]
	80	[15105]	MOVE     	R10 R0 ; R10 := R0
	81	[15105]	LOADNIL  	R11 R11 ; R11 := nil
	82	[15105]	GETGLOBAL	R12 K11 ; R12 := _T
	83	[15105]	GETTABLE 	R12 R12 K21 ; R12 := R12["SpecialSuitAvatar"]
	84	[15105]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	85	[15105]	MOVE     	R6 R9 ; R6 := R9
	86	[15105]	JMP      	183 ; PC := 183
	87	[15107]	GETUPVAL 	R9 U2 ; R9 := U2
	88	[15107]	GETTABLE 	R9 R9 K10 ; R9 := R9[0x06d055f9]
	89	[15107]	MOVE     	R10 R0 ; R10 := R0
	90	[15107]	LOADNIL  	R11 R11 ; R11 := nil
	91	[15107]	GETGLOBAL	R12 K11 ; R12 := _T
	92	[15107]	GETTABLE 	R12 R12 K15 ; R12 := R12["MenuSuitAvatar"]
	93	[15107]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	94	[15107]	MOVE     	R6 R9 ; R6 := R9
	95	[15108]	JMP      	183 ; PC := 183
	96	[15109]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	97	[15109]	GETGLOBAL	R11 K22 ; R11 := gSentinelPowerSuitType
	98	[15109]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	99	[15109]	TEST     	R9 1 ; if R9 then PC := 109
	100	[15109]	JMP      	109 ; PC := 109
	101	[15109]	GETGLOBAL	R9 K11 ; R9 := _T
	102	[15109]	GETTABLE 	R9 R9 K23 ; R9 := R9["upgradeItemLot"]
	103	[15109]	EQ       	0 R9 K25 ; if R9 ~= 1.000000 then PC := 135
	104	[15109]	JMP      	135 ; PC := 135
	105	[15109]	GETGLOBAL	R9 K11 ; R9 := _T
	106	[15109]	GETTABLE 	R9 R9 K26 ; R9 := R9["upgradeItemSlot"]
	107	[15109]	EQ       	0 R9 K27 ; if R9 ~= 2.000000 then PC := 135
	108	[15109]	JMP      	135 ; PC := 135
	109	[15110]	GETGLOBAL	R9 K11 ; R9 := _T
	110	[15110]	GETTABLE 	R9 R9 K20 ; R9 := R9["mSpecialSuitMode"]
	111	[15110]	TEST     	R9 0 ; if not R9 then PC := 122
	112	[15110]	JMP      	122 ; PC := 122
	113	[15111]	GETUPVAL 	R9 U2 ; R9 := U2
	114	[15111]	GETTABLE 	R9 R9 K10 ; R9 := R9[0x06d055f9]
	115	[15111]	MOVE     	R10 R0 ; R10 := R0
	116	[15111]	LOADNIL  	R11 R11 ; R11 := nil
	117	[15111]	GETGLOBAL	R12 K11 ; R12 := _T
	118	[15111]	GETTABLE 	R12 R12 K21 ; R12 := R12["SpecialSuitAvatar"]
	119	[15111]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	120	[15111]	MOVE     	R6 R9 ; R6 := R9
	121	[15111]	JMP      	183 ; PC := 183
	122	[15113]	GETUPVAL 	R9 U2 ; R9 := U2
	123	[15113]	GETTABLE 	R9 R9 K10 ; R9 := R9[0x06d055f9]
	124	[15113]	MOVE     	R10 R0 ; R10 := R0
	125	[15113]	LOADNIL  	R11 R11 ; R11 := nil
	126	[15113]	GETGLOBAL	R12 K11 ; R12 := _T
	127	[15113]	GETTABLE 	R12 R12 K15 ; R12 := R12["MenuSuitAvatar"]
	128	[15113]	SELF     	R12 R12 K16 ; R13 := R12; R12 := R12[0xde321e6f]
	129	[15113]	CALL     	R12 2 2 ; R12 := R12(R13)
	130	[15113]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0x2676deee]
	131	[15113]	CALL     	R12 2 0 ; R12,... := R12(R13)
	132	[15113]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	133	[15113]	MOVE     	R6 R9 ; R6 := R9
	134	[15114]	JMP      	183 ; PC := 183
	135	[15115]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	136	[15115]	MOVE     	R11 R3 ; R11 := R3
	137	[15115]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	138	[15115]	TEST     	R9 1 ; if R9 then PC := 155
	139	[15115]	JMP      	155 ; PC := 155
	140	[15115]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	141	[15115]	GETGLOBAL	R11 K28 ; R11 := gLotusPistolType
	142	[15115]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	143	[15115]	TEST     	R9 1 ; if R9 then PC := 155
	144	[15115]	JMP      	155 ; PC := 155
	145	[15115]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	146	[15115]	MOVE     	R11 R4 ; R11 := R4
	147	[15115]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	148	[15115]	TEST     	R9 1 ; if R9 then PC := 155
	149	[15115]	JMP      	155 ; PC := 155
	150	[15115]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	151	[15115]	GETGLOBAL	R11 K29 ; R11 := gLotusMeleeWeaponType
	152	[15115]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	153	[15115]	TEST     	R9 0 ; if not R9 then PC := 166
	154	[15115]	JMP      	166 ; PC := 166
	155	[15116]	GETGLOBAL	R9 K11 ; R9 := _T
	156	[15116]	GETTABLE 	R9 R9 K20 ; R9 := R9["mSpecialSuitMode"]
	157	[15116]	TEST     	R9 0 ; if not R9 then PC := 162
	158	[15116]	JMP      	162 ; PC := 162
	159	[15117]	GETGLOBAL	R9 K11 ; R9 := _T
	160	[15117]	GETTABLE 	R6 R9 K21 ; R6 := R9["SpecialSuitAvatar"]
	161	[15117]	JMP      	164 ; PC := 164
	162	[15119]	GETGLOBAL	R9 K11 ; R9 := _T
	163	[15119]	GETTABLE 	R6 R9 K15 ; R6 := R9["MenuSuitAvatar"]
	164	[15121]	OP_LOADBOOL	R7 1 0 ; R7 := true
	165	[15121]	JMP      	183 ; PC := 183
	166	[15122]	SELF     	R9 R5 K8 ; R10 := R5; R9 := R5[0xf2deaf69]
	167	[15122]	GETGLOBAL	R11 K30 ; R11 := gPowerSuitType
	168	[15122]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	169	[15122]	TEST     	R9 0 ; if not R9 then PC := 183
	170	[15122]	JMP      	183 ; PC := 183
	171	[15122]	GETGLOBAL	R9 K11 ; R9 := _T
	172	[15122]	GETTABLE 	R9 R9 K26 ; R9 := R9["upgradeItemSlot"]
	173	[15122]	GETGLOBAL	R10 K24 ; R10 := 0x6c97a788
	174	[15122]	GETTABLE 	R10 R10 K31 ; R10 := R10["NUM_NORMAL_LOADOUT_SLOTS"]
	175	[15122]	LE       	0 R10 R9 ; if R10 > R9 then PC := 183
	176	[15122]	JMP      	183 ; PC := 183
	177	[15122]	GETGLOBAL	R9 K11 ; R9 := _T
	178	[15122]	GETTABLE 	R9 R9 K20 ; R9 := R9["mSpecialSuitMode"]
	179	[15122]	TEST     	R9 0 ; if not R9 then PC := 183
	180	[15122]	JMP      	183 ; PC := 183
	181	[15123]	GETGLOBAL	R9 K11 ; R9 := _T
	182	[15123]	GETTABLE 	R6 R9 K21 ; R6 := R9["SpecialSuitAvatar"]
	183	[15126]	GETTABLE 	R9 R1 K32 ; R9 := R1["LoadOutType"]
	184	[15126]	EQ       	0 R9 K33 ; if R9 ~= 8.000000 then PC := 188
	185	[15126]	JMP      	188 ; PC := 188
	186	[15127]	GETGLOBAL	R9 K11 ; R9 := _T
	187	[15127]	GETTABLE 	R6 R9 K34 ; R6 := R9["MechAvatar"]
	188	[15130]	MOVE     	R9 R5 ; R9 := R5
	189	[15131]	OP_LOADBOOL	R10 0 0 ; R10 := false
	190	[15133]	TEST     	R0 0 ; if not R0 then PC := 259
	191	[15133]	JMP      	259 ; PC := 259
	192	[15134]	TEST     	R8 0 ; if not R8 then PC := 226
	193	[15134]	JMP      	226 ; PC := 226
	194	[15135]	MOVE     	R11 R6 ; R11 := R6
	195	[15136]	GETGLOBAL	R12 K5 ; R12 := 0x7b998233
	196	[15136]	MOVE     	R13 R11 ; R13 := R11
	197	[15136]	CALL     	R12 2 2 ; R12 := R12(R13)
	198	[15136]	TEST     	R12 0 ; if not R12 then PC := 202
	199	[15136]	JMP      	202 ; PC := 202
	200	[15137]	GETGLOBAL	R12 K11 ; R12 := _T
	201	[15137]	GETTABLE 	R11 R12 K15 ; R11 := R12["MenuSuitAvatar"]
	202	[15139]	GETGLOBAL	R12 K35 ; R12 := 0x89326c93
	203	[15139]	SELF     	R12 R12 K36 ; R13 := R12; R12 := R12[0x765dad71]
	204	[15139]	GETGLOBAL	R14 K37 ; R14 := 0x88efc25e
	205	[15139]	SELF     	R15 R5 K38 ; R16 := R5; R15 := R5[0xcde10c4a]
	206	[15139]	CALL     	R15 2 0 ; R15,... := R15(R16)
	207	[15139]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	208	[15139]	MOVE     	R15 R11 ; R15 := R11
	209	[15139]	GETUPVAL 	R16 U3 ; R16 := U3
	210	[15139]	CALL     	R16 1 0 ; R16,... := R16()
	211	[15139]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	212	[15139]	MOVE     	R9 R12 ; R9 := R12
	213	[15140]	SELF     	R12 R9 K39 ; R13 := R9; R12 := R9[0xa6101f7e]
	214	[15140]	SELF     	R14 R5 K40 ; R15 := R5; R14 := R5[0xde7a1002]
	215	[15140]	CALL     	R14 2 2 ; R14 := R14(R15)
	216	[15140]	SELF     	R15 R5 K41 ; R16 := R5; R15 := R5[0x6db2bc2b]
	217	[15140]	CALL     	R15 2 0 ; R15,... := R15(R16)
	218	[15140]	CALL     	R12 0 1 ; R12(R13,...)
	219	[15141]	SELF     	R12 R11 K16 ; R13 := R11; R12 := R11[0xde321e6f]
	220	[15141]	CALL     	R12 2 2 ; R12 := R12(R13)
	221	[15141]	SELF     	R12 R12 K42 ; R13 := R12; R12 := R12[0x511d26b8]
	222	[15141]	MOVE     	R14 R9 ; R14 := R9
	223	[15141]	OP_LOADBOOL	R15 1 0 ; R15 := true
	224	[15141]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	225	[15141]	JMP      	259 ; PC := 259
	226	[15142]	TEST     	R7 0 ; if not R7 then PC := 254
	227	[15142]	JMP      	254 ; PC := 254
	228	[15143]	GETGLOBAL	R12 K35 ; R12 := 0x89326c93
	229	[15143]	SELF     	R12 R12 K36 ; R13 := R12; R12 := R12[0x765dad71]
	230	[15143]	GETGLOBAL	R14 K37 ; R14 := 0x88efc25e
	231	[15143]	SELF     	R15 R5 K38 ; R16 := R5; R15 := R5[0xcde10c4a]
	232	[15143]	CALL     	R15 2 0 ; R15,... := R15(R16)
	233	[15143]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	234	[15143]	MOVE     	R15 R6 ; R15 := R6
	235	[15143]	GETUPVAL 	R16 U3 ; R16 := U3
	236	[15143]	CALL     	R16 1 0 ; R16,... := R16()
	237	[15143]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	238	[15143]	MOVE     	R9 R12 ; R9 := R12
	239	[15144]	SELF     	R12 R9 K43 ; R13 := R9; R12 := R9[0x054e3c19]
	240	[15144]	MOVE     	R14 R6 ; R14 := R6
	241	[15144]	CALL     	R12 3 1 ; R12(R13,R14)
	242	[15145]	OP_LOADBOOL	R10 1 0 ; R10 := true
	243	[15146]	SELF     	R12 R5 K44 ; R13 := R5; R12 := R5[0x81f3a598]
	244	[15146]	CALL     	R12 2 2 ; R12 := R12(R13)
	245	[15146]	TEST     	R12 0 ; if not R12 then PC := 259
	246	[15146]	JMP      	259 ; PC := 259
	247	[15147]	SELF     	R12 R9 K39 ; R13 := R9; R12 := R9[0xa6101f7e]
	248	[15147]	SELF     	R14 R5 K40 ; R15 := R5; R14 := R5[0xde7a1002]
	249	[15147]	CALL     	R14 2 2 ; R14 := R14(R15)
	250	[15147]	SELF     	R15 R5 K41 ; R16 := R5; R15 := R5[0x6db2bc2b]
	251	[15147]	CALL     	R15 2 0 ; R15,... := R15(R16)
	252	[15147]	CALL     	R12 0 1 ; R12(R13,...)
	253	[15148]	JMP      	259 ; PC := 259
	254	[15150]	GETGLOBAL	R12 K45 ; R12 := 0xb009bbc6
	255	[15150]	SELF     	R13 R9 K38 ; R14 := R9; R13 := R9[0xcde10c4a]
	256	[15150]	CALL     	R13 2 0 ; R13,... := R13(R14)
	257	[15150]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	258	[15150]	MOVE     	R9 R12 ; R9 := R12
	259	[15155]	GETUPVAL 	R12 U4 ; R12 := U4
	260	[15155]	GETTABLE 	R12 R12 K46 ; R12 := R12["Current"]
	261	[15155]	EQ       	0 R12 K47 ; if R12 ~= 3.000000 then PC := 272
	262	[15155]	JMP      	272 ; PC := 272
	263	[15155]	GETGLOBAL	R12 K48 ; R12 := mSelected
	264	[15155]	GETTABLE 	R12 R12 K49 ; R12 := R12["Element"]
	265	[15155]	EQ       	1 R12 K7 ; if R12 == nil then PC := 272
	266	[15155]	JMP      	272 ; PC := 272
	267	[15155]	GETGLOBAL	R12 K48 ; R12 := mSelected
	268	[15155]	GETTABLE 	R12 R12 K49 ; R12 := R12["Element"]
	269	[15155]	GETTABLE 	R12 R12 K50 ; R12 := R12["LoadOutId"]
	270	[15155]	EQ       	1 R12 K51 ; if R12 == 4.000000 then PC := 273
	271	[15155]	JMP      	273 ; PC := 273
	272	[15155]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 273
	273	[15155]	OP_LOADBOOL	R12 1 0 ; R12 := true
	274	[15156]	GETUPVAL 	R13 U1 ; R13 := U1
	275	[15156]	GETUPVAL 	R14 U5 ; R14 := U5
	276	[15156]	GETTABLE 	R14 R14 K52 ; R14 := R14[0x0ed5e9ac]
	277	[15156]	MOVE     	R15 R9 ; R15 := R9
	278	[15156]	MOVE     	R16 R6 ; R16 := R6
	279	[15156]	OP_LOADBOOL	R17 0 0 ; R17 := false
	280	[15156]	GETUPVAL 	R18 U6 ; R18 := U6
	281	[15156]	GETUPVAL 	R19 U7 ; R19 := U7
	282	[15156]	GETTABLE 	R19 R19 K53 ; R19 := R19["SWAPPING_ITEM"]
	283	[15156]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 286
	284	[15156]	JMP      	286 ; PC := 286
	285	[15156]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 286
	286	[15156]	OP_LOADBOOL	R18 1 0 ; R18 := true
	287	[15156]	MOVE     	R19 R12 ; R19 := R12
	288	[15156]	CALL     	R14 6 2 ; R14 := R14(R15,R16,R17,R18,R19)
	289	[15156]	SETTABLE 	R13 K6 R14 ; R13["mCachedStats"] := R14
	290	[15158]	TEST     	R10 0 ; if not R10 then PC := 296
	291	[15158]	JMP      	296 ; PC := 296
	292	[15159]	GETGLOBAL	R13 K35 ; R13 := 0x89326c93
	293	[15159]	SELF     	R13 R13 K54 ; R14 := R13; R13 := R13[0x59c96e77]
	294	[15159]	MOVE     	R15 R9 ; R15 := R9
	295	[15159]	CALL     	R13 3 1 ; R13(R14,R15)
	296	[15161]	RETURN   	R0 1 ; return 

function #287 <?:15163,15166> (13 instructions, 52 bytes at 00000211323ABD20)
2 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[15164]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[15164]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x659d451f]
	3	[15164]	GETGLOBAL	R3 K1 ; R3 := 0x0032441c
	4	[15164]	GETTABLE 	R3 R3 K2 ; R3 := R3["UISound_Focus"]
	5	[15164]	CALL     	R2 2 1 ; R2(R3)
	6	[15165]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	7	[15165]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x67bc869f]
	8	[15165]	MOVE     	R4 R1 ; R4 := R1
	9	[15165]	LOADK    	R5 := 9.000000
	10	[15165]	GETGLOBAL	R6 K1 ; R6 := 0x0032441c
	11	[15165]	GETTABLE 	R6 R6 K5 ; R6 := R6["UIColor_Yellow"]
	12	[15165]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	13	[15166]	RETURN   	R0 1 ; return 

function #288 <?:15168,15170> (8 instructions, 32 bytes at 00000211323ABEC0)
2 params, 7 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[15169]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	2	[15169]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x67bc869f]
	3	[15169]	MOVE     	R4 R1 ; R4 := R1
	4	[15169]	LOADK    	R5 := 9.000000
	5	[15169]	GETGLOBAL	R6 K2 ; R6 := 0x0032441c
	6	[15169]	GETTABLE 	R6 R6 K3 ; R6 := R6["UIColor_White"]
	7	[15169]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	8	[15170]	RETURN   	R0 1 ; return 

function #289 <?:15172,15177> (12 instructions, 48 bytes at 00000211323AC000)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[15173]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[15173]	CALL     	R0 1 2 ; R0 := R0()
	3	[15173]	TEST     	R0 1 ; if R0 then PC := 8
	4	[15173]	JMP      	8 ; PC := 8
	5	[15173]	GETGLOBAL	R0 K0 ; R0 := mInitialized
	6	[15173]	TEST     	R0 1 ; if R0 then PC := 10
	7	[15173]	JMP      	10 ; PC := 10
	8	[15174]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[15174]	RETURN   	R0 2 ; return R0 
	10	[15176]	OP_LOADBOOL	R0 0 0 ; R0 := false
	11	[15176]	RETURN   	R0 2 ; return R0 
	12	[15177]	RETURN   	R0 1 ; return 

function #290 <?:15179,15187> (14 instructions, 56 bytes at 00000211323AC130)
2 params, 4 slots, 2 upvalues, 0 locals, 1 constant, 0 functions
	1	[15180]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[15180]	CALL     	R2 1 2 ; R2 := R2()
	3	[15180]	TEST     	R2 1 ; if R2 then PC := 14
	4	[15180]	JMP      	14 ; PC := 14
	5	[15181]	EQ       	0 R1 K0 ; if R1 ~= "MenuPanel.LeftArrow" then PC := 11
	6	[15181]	JMP      	11 ; PC := 11
	7	[15182]	GETUPVAL 	R2 U1 ; R2 := U1
	8	[15182]	LOADK    	R3 := -1.000000
	9	[15182]	CALL     	R2 2 1 ; R2(R3)
	10	[15182]	JMP      	14 ; PC := 14
	11	[15184]	GETUPVAL 	R2 U1 ; R2 := U1
	12	[15184]	LOADK    	R3 := 1.000000
	13	[15184]	CALL     	R2 2 1 ; R2(R3)
	14	[15187]	RETURN   	R0 1 ; return 

function #291 <?:15189,15230> (50 instructions, 200 bytes at 00000211323AC280)
0 params, 5 slots, 3 upvalues, 0 locals, 16 constants, 2 functions
	1	[15190]	GETGLOBAL	R0 K0 ; R0 := Icons
	2	[15190]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	3	[15190]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x42b04007]
	4	[15190]	LOADK    	R3 K4 ; R3 := "<REPUTATION_SMALL>"
	5	[15190]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[15190]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	7	[15190]	SETTABLE 	R0 K1 R1 ; R0["REPUTATION"] := R1
	8	[15191]	GETGLOBAL	R0 K0 ; R0 := Icons
	9	[15191]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	10	[15191]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x42b04007]
	11	[15191]	LOADK    	R3 K6 ; R3 := "<PLATINUM_CREDITS>"
	12	[15191]	OP_LOADBOOL	R4 1 0 ; R4 := true
	13	[15191]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	14	[15191]	SETTABLE 	R0 K5 R1 ; R0["PLATINUM"] := R1
	15	[15192]	GETGLOBAL	R0 K0 ; R0 := Icons
	16	[15192]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	17	[15192]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x42b04007]
	18	[15192]	LOADK    	R3 K8 ; R3 := "<TIMER>"
	19	[15192]	OP_LOADBOOL	R4 1 0 ; R4 := true
	20	[15192]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	21	[15192]	SETTABLE 	R0 K7 R1 ; R0["TIMER"] := R1
	22	[15194]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	23	[15194]	GETGLOBAL	R1 K10 ; R1 := mItemsGrid
	24	[15194]	CALL     	R0 2 2 ; R0 := R0(R1)
	25	[15194]	TEST     	R0 1 ; if R0 then PC := 36
	26	[15194]	JMP      	36 ; PC := 36
	27	[15194]	GETUPVAL 	R0 U0 ; R0 := U0
	28	[15194]	GETUPVAL 	R1 U1 ; R1 := U1
	29	[15194]	GETTABLE 	R1 R1 K11 ; R1 := R1["SWAPPING_ITEM"]
	30	[15194]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 36
	31	[15194]	JMP      	36 ; PC := 36
	32	[15196]	GETGLOBAL	R0 K10 ; R0 := mItemsGrid
	33	[15196]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x741d078c]
	34	[15199]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	35	[15196]	CALL     	R0 3 1 ; R0(R1,R2)
	36	[15202]	GETGLOBAL	R0 K9 ; R0 := 0x7b998233
	37	[15202]	GETGLOBAL	R1 K13 ; R1 := mLists
	38	[15202]	GETTABLE 	R1 R1 K14 ; R1 := R1["mCosmeticsList"]
	39	[15202]	CALL     	R0 2 2 ; R0 := R0(R1)
	40	[15202]	TEST     	R0 1 ; if R0 then PC := 50
	41	[15202]	JMP      	50 ; PC := 50
	42	[15203]	GETGLOBAL	R0 K13 ; R0 := mLists
	43	[15203]	GETTABLE 	R0 R0 K14 ; R0 := R0["mCosmeticsList"]
	44	[15203]	SELF     	R0 R0 K15 ; R1 := R0; R0 := R0[0xea061e98]
	45	[15228]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	46	[15228]	GETUPVAL 	R0 U2 ; R0 := U2
	47	[15228]	GETUPVAL 	R0 U0 ; R0 := U0
	48	[15228]	GETUPVAL 	R0 U1 ; R0 := U1
	49	[15203]	CALL     	R0 3 1 ; R0(R1,R2)
	50	[15230]	RETURN   	R0 1 ; return 

function #292 <?:15232,15239> (17 instructions, 68 bytes at 00000211323ACCC0)
1 param, 4 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[15233]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[15233]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[15233]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[15233]	TEST     	R1 0 ; if not R1 then PC := 10
	5	[15233]	JMP      	10 ; PC := 10
	6	[15234]	GETGLOBAL	R1 K2 ; R1 := 0xcbd666e1
	7	[15234]	LOADK    	R2 := 0.000000
	8	[15234]	CALL     	R1 2 1 ; R1(R2)
	9	[15234]	JMP      	1 ; PC := 1
	10	[15237]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x56c05b89]
	11	[15237]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[15237]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[15238]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	14	[15238]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x424c55a8]
	15	[15238]	MOVE     	R3 R0 ; R3 := R0
	16	[15238]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[15239]	RETURN   	R0 1 ; return 

function #293 <?:15241,15266> (106 instructions, 424 bytes at 00000211323ACE70)
1 param, 8 slots, 5 upvalues, 0 locals, 20 constants, 0 functions
	1	[15242]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[15242]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[15242]	GETTABLE 	R2 R2 K0 ; R2 := R2["BROWSING_CONSUMABLES"]
	4	[15242]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 7
	5	[15242]	JMP      	7 ; PC := 7
	6	[15243]	RETURN   	R0 1 ; return 
	7	[15246]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[15246]	GETUPVAL 	R2 U1 ; R2 := U1
	9	[15246]	GETTABLE 	R2 R2 K1 ; R2 := R2["CUSTOMIZING_SKINS"]
	10	[15246]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 18
	11	[15246]	JMP      	18 ; PC := 18
	12	[15246]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[15246]	GETUPVAL 	R2 U1 ; R2 := U1
	14	[15246]	GETTABLE 	R2 R2 K2 ; R2 := R2["SELECTING_PART"]
	15	[15246]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 18
	16	[15246]	JMP      	18 ; PC := 18
	17	[15246]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 18
	18	[15246]	OP_LOADBOOL	R1 1 0 ; R1 := true
	19	[15247]	GETGLOBAL	R2 K3 ; R2 := 0x34291f5c
	20	[15247]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x1467d5f4]
	21	[15247]	CALL     	R2 1 2 ; R2 := R2()
	22	[15247]	TEST     	R2 0 ; if not R2 then PC := 26
	23	[15247]	JMP      	26 ; PC := 26
	24	[15248]	GETUPVAL 	R2 U2 ; R2 := U2
	25	[15248]	SETTABLE 	R2 K5 K6 ; R2["MouseDown"] := false
	26	[15251]	GETUPVAL 	R2 U3 ; R2 := U3
	27	[15251]	GETTABLE 	R2 R2 K7 ; R2 := R2[0x75598285]
	28	[15251]	CALL     	R2 1 1 ; R2()
	29	[15252]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	30	[15252]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x20b98db3]
	31	[15252]	LOADK    	R4 K10 ; R4 := "MenuPanel.Left.Tf.text"
	32	[15252]	LOADK    	R5 K11 ; R5 := "<MENU_LTRIGGER2>"
	33	[15252]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	34	[15254]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	35	[15254]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xaade900e]
	36	[15254]	LOADK    	R4 K13 ; R4 := "MenuPanel.Left"
	37	[15254]	LOADK    	R5 := 11.000000
	38	[15254]	GETGLOBAL	R6 K3 ; R6 := 0x34291f5c
	39	[15254]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x1467d5f4]
	40	[15254]	CALL     	R6 1 2 ; R6 := R6()
	41	[15254]	TEST     	R6 0 ; if not R6 then PC := 50
	42	[15254]	JMP      	50 ; PC := 50
	43	[15254]	GETUPVAL 	R6 U0 ; R6 := U0
	44	[15254]	GETUPVAL 	R7 U1 ; R7 := U1
	45	[15254]	GETTABLE 	R7 R7 K1 ; R7 := R7["CUSTOMIZING_SKINS"]
	46	[15254]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 49
	47	[15254]	JMP      	49 ; PC := 49
	48	[15254]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 49
	49	[15254]	OP_LOADBOOL	R6 1 0 ; R6 := true
	50	[15254]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	51	[15255]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	52	[15255]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xaade900e]
	53	[15255]	LOADK    	R4 K14 ; R4 := "MenuPanel.Right"
	54	[15255]	LOADK    	R5 := 11.000000
	55	[15255]	GETGLOBAL	R6 K3 ; R6 := 0x34291f5c
	56	[15255]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x1467d5f4]
	57	[15255]	CALL     	R6 1 2 ; R6 := R6()
	58	[15255]	TEST     	R6 0 ; if not R6 then PC := 61
	59	[15255]	JMP      	61 ; PC := 61
	60	[15255]	MOVE     	R6 R1 ; R6 := R1
	61	[15255]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	62	[15258]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	63	[15258]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xaade900e]
	64	[15258]	LOADK    	R4 K15 ; R4 := "MenuPanel.LeftArrow"
	65	[15258]	LOADK    	R5 := 11.000000
	66	[15258]	GETGLOBAL	R6 K3 ; R6 := 0x34291f5c
	67	[15258]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x1467d5f4]
	68	[15258]	CALL     	R6 1 2 ; R6 := R6()
	69	[15258]	TEST     	R6 1 ; if R6 then PC := 76
	70	[15258]	JMP      	76 ; PC := 76
	71	[15258]	GETUPVAL 	R6 U0 ; R6 := U0
	72	[15258]	GETUPVAL 	R7 U1 ; R7 := U1
	73	[15258]	GETTABLE 	R7 R7 K1 ; R7 := R7["CUSTOMIZING_SKINS"]
	74	[15258]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 77
	75	[15258]	JMP      	77 ; PC := 77
	76	[15258]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 77
	77	[15258]	OP_LOADBOOL	R6 1 0 ; R6 := true
	78	[15258]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	79	[15259]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	80	[15259]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xaade900e]
	81	[15259]	LOADK    	R4 K16 ; R4 := "MenuPanel.RightArrow"
	82	[15259]	LOADK    	R5 := 11.000000
	83	[15259]	GETGLOBAL	R6 K3 ; R6 := 0x34291f5c
	84	[15259]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x1467d5f4]
	85	[15259]	CALL     	R6 1 2 ; R6 := R6()
	86	[15259]	TEST     	R6 1 ; if R6 then PC := 90
	87	[15259]	JMP      	90 ; PC := 90
	88	[15259]	MOVE     	R6 R1 ; R6 := R1
	89	[15259]	JMP      	92 ; PC := 92
	90	[15259]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 91
	91	[15259]	OP_LOADBOOL	R6 1 0 ; R6 := true
	92	[15259]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	93	[15261]	GETGLOBAL	R2 K17 ; R2 := 0x7b998233
	94	[15261]	GETUPVAL 	R3 U4 ; R3 := U4
	95	[15261]	CALL     	R2 2 2 ; R2 := R2(R3)
	96	[15261]	TEST     	R2 1 ; if R2 then PC := 101
	97	[15261]	JMP      	101 ; PC := 101
	98	[15262]	GETUPVAL 	R2 U4 ; R2 := U4
	99	[15262]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0x71e9ac81]
	100	[15262]	CALL     	R2 2 1 ; R2(R3)
	101	[15265]	GETUPVAL 	R2 U3 ; R2 := U3
	102	[15265]	GETTABLE 	R2 R2 K19 ; R2 := R2[0x18e56c6b]
	103	[15265]	GETUPVAL 	R3 U0 ; R3 := U0
	104	[15265]	OP_LOADBOOL	R4 1 0 ; R4 := true
	105	[15265]	CALL     	R2 3 1 ; R2(R3,R4)
	106	[15266]	RETURN   	R0 1 ; return 

function #294 <?:15268,15271> (5 instructions, 20 bytes at 00000211323AD3D0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[15269]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[15269]	SETTABLE 	R0 K0 K1 ; R0["EquipmentChangesBlocked"] := true
	3	[15270]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[15270]	SETTABLE 	R0 K2 K1 ; R0["SacrificeQuestInputBlocked"] := true
	5	[15271]	RETURN   	R0 1 ; return 

function #295 <?:15273,15279> (30 instructions, 120 bytes at 00000211323AD500)
1 param, 9 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[15274]	EQ       	0 R0 K0 ; if R0 ~= "true" then PC := 17
	2	[15274]	JMP      	17 ; PC := 17
	3	[15275]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	4	[15275]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[15275]	LOADK    	R3 K3 ; R3 := "_root"
	6	[15275]	LOADK    	R4 := 0.000000
	7	[15275]	NEWTABLE 	R5 1 0 ; R5 := {}
	8	[15275]	LOADK    	R6 := 10.000000
	9	[15275]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	10	[15275]	NEWTABLE 	R6 1 0 ; R6 := {}
	11	[15275]	LOADK    	R7 := 0.000000
	12	[15275]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	13	[15275]	LOADK    	R7 K5 ; R7 := 0.150000
	14	[15275]	LOADK    	R8 := 0.000000
	15	[15275]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	16	[15275]	JMP      	30 ; PC := 30
	17	[15277]	GETGLOBAL	R1 K1 ; R1 := 0x25312c9b
	18	[15277]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	19	[15277]	LOADK    	R3 K3 ; R3 := "_root"
	20	[15277]	LOADK    	R4 := 2.000000
	21	[15277]	NEWTABLE 	R5 1 0 ; R5 := {}
	22	[15277]	LOADK    	R6 := 10.000000
	23	[15277]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	24	[15277]	NEWTABLE 	R6 1 0 ; R6 := {}
	25	[15277]	LOADK    	R7 := 100.000000
	26	[15277]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	27	[15277]	LOADK    	R7 K5 ; R7 := 0.150000
	28	[15277]	LOADK    	R8 := 0.000000
	29	[15277]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	30	[15279]	RETURN   	R0 1 ; return 

function #296 <?:15281,15295> (20 instructions, 80 bytes at 00000211323AD720)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 1 function
	1	[15282]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[15282]	GETGLOBAL	R2 K1 ; R2 := mLists
	3	[15282]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutList"]
	4	[15282]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[15282]	TEST     	R1 1 ; if R1 then PC := 20
	6	[15282]	JMP      	20 ; PC := 20
	7	[15283]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[15284]	GETGLOBAL	R2 K1 ; R2 := mLists
	9	[15284]	GETTABLE 	R2 R2 K2 ; R2 := R2["mLoadOutList"]
	10	[15284]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xea061e98]
	11	[15289]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	12	[15289]	MOVE     	R0 R0 ; R0 := R0
	13	[15289]	MOVE     	R0 R1 ; R0 := R1
	14	[15284]	CALL     	R2 3 1 ; R2(R3,R4)
	15	[15291]	TEST     	R1 0 ; if not R1 then PC := 19
	16	[15291]	JMP      	19 ; PC := 19
	17	[15292]	OP_LOADBOOL	R2 1 0 ; R2 := true
	18	[15292]	SETUPVAL 	R2 U0 ; U0 := R2
	19	[15293]	CLOSE    	R1 ; SAVE R1,...
	20	[15295]	RETURN   	R0 1 ; return 

function #297 <?:15297,15299> (1 instruction, 4 bytes at 00000211323AD9F0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[15299]	RETURN   	R0 1 ; return 

function #298 <?:15301,15310> (37 instructions, 148 bytes at 00000211323ADAC0)
1 param, 8 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[15302]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[15302]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x91a24e4b]
	3	[15302]	LOADK    	R3 K2 ; R3 := "StatContainer.Mask"
	4	[15302]	LOADK    	R4 := 3.000000
	5	[15302]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[15303]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	7	[15303]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x91a24e4b]
	8	[15303]	LOADK    	R4 K3 ; R4 := "_root"
	9	[15303]	LOADK    	R5 := 26.000000
	10	[15303]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	11	[15304]	LE       	0 R2 R1 ; if R2 > R1 then PC := 14
	12	[15304]	JMP      	14 ; PC := 14
	13	[15305]	RETURN   	R0 1 ; return 
	14	[15307]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	15	[15307]	GETUPVAL 	R4 U0 ; R4 := U0
	16	[15307]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[15307]	TEST     	R3 1 ; if R3 then PC := 37
	18	[15307]	JMP      	37 ; PC := 37
	19	[15307]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	20	[15307]	GETUPVAL 	R4 U0 ; R4 := U0
	21	[15307]	GETTABLE 	R4 R4 K5 ; R4 := R4["mStatCompare"]
	22	[15307]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[15307]	TEST     	R3 1 ; if R3 then PC := 37
	24	[15307]	JMP      	37 ; PC := 37
	25	[15307]	GETGLOBAL	R3 K6 ; R3 := mInputBlocked
	26	[15307]	TEST     	R3 1 ; if R3 then PC := 37
	27	[15307]	JMP      	37 ; PC := 37
	28	[15308]	GETUPVAL 	R3 U1 ; R3 := U1
	29	[15308]	GETUPVAL 	R4 U0 ; R4 := U0
	30	[15308]	GETTABLE 	R4 R4 K5 ; R4 := R4["mStatCompare"]
	31	[15308]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0x1d246732]
	32	[15308]	GETGLOBAL	R6 K8 ; R6 := 0x03f57322
	33	[15308]	MOVE     	R7 R0 ; R7 := R0
	34	[15308]	CALL     	R6 2 0 ; R6,... := R6(R7)
	35	[15308]	CALL     	R4 0 0 ; R4,... := R4(R5,...)
	36	[15308]	CALL     	R3 0 1 ; R3(R4,...)
	37	[15310]	RETURN   	R0 1 ; return 

function #299 <?:15312,15321> (21 instructions, 84 bytes at 00000211323ADD50)
1 param, 5 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[15313]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[15313]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x91a24e4b]
	3	[15313]	LOADK    	R3 K2 ; R3 := "_root"
	4	[15313]	LOADK    	R4 := 26.000000
	5	[15313]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[15314]	LT       	0 R1 K3 ; if R1 >= 0.000000 then PC := 9
	7	[15314]	JMP      	9 ; PC := 9
	8	[15315]	RETURN   	R0 1 ; return 
	9	[15317]	GETGLOBAL	R2 K4 ; R2 := _T
	10	[15317]	SETTABLE 	R2 K5 K6 ; R2["InfoPopup_Data"] := nil
	11	[15318]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[15318]	EQ       	1 R2 K6 ; if R2 == nil then PC := 21
	13	[15318]	JMP      	21 ; PC := 21
	14	[15318]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[15318]	GETTABLE 	R2 R2 K7 ; R2 := R2["mStatCompare"]
	16	[15318]	EQ       	1 R2 K6 ; if R2 == nil then PC := 21
	17	[15318]	JMP      	21 ; PC := 21
	18	[15319]	GETUPVAL 	R2 U0 ; R2 := U0
	19	[15319]	GETTABLE 	R2 R2 K7 ; R2 := R2["mStatCompare"]
	20	[15319]	SETTABLE 	R2 K8 K6 ; R2["TipIndex"] := nil
	21	[15321]	RETURN   	R0 1 ; return 

function #300 <?:15323,15325> (1 instruction, 4 bytes at 00000211323ADF60)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[15325]	RETURN   	R0 1 ; return 
