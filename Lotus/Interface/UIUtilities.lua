
main <?:0,0> (994 instructions, 3976 bytes at 00000211631878C0)
0+ params, 73 slots, 0 upvalues, 0 locals, 230 constants, 74 functions
	1	[1]	GETGLOBAL	R0 K0 ; R0 := 0xaeabecda
	2	[1]	VARARG   	R1 R2 ; R1 := R2 := ...
	3	[1]	GETGLOBAL	R2 K1 ; R2 := package
	4	[1]	GETTABLE 	R2 R2 K2 ; R2 := R2["seeall"]
	5	[1]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[3]	GETGLOBAL	R0 K3 ; R0 := 0x2d0fad09
	7	[3]	LOADK    	R1 K4 ; R1 := "EE.Interface.Utilities"
	8	[3]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[4]	GETGLOBAL	R1 K3 ; R1 := 0x2d0fad09
	10	[4]	LOADK    	R2 K5 ; R2 := "Lotus.Interface.CardUtilitiesRedux"
	11	[4]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[5]	GETGLOBAL	R2 K3 ; R2 := 0x2d0fad09
	13	[5]	LOADK    	R3 K6 ; R3 := "Lotus.Interface.LotusUtilities"
	14	[5]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[6]	GETGLOBAL	R3 K3 ; R3 := 0x2d0fad09
	16	[6]	LOADK    	R4 K7 ; R4 := "Lotus.Interface.UIStyleUtilities"
	17	[6]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[7]	GETGLOBAL	R4 K3 ; R4 := 0x2d0fad09
	19	[7]	LOADK    	R5 K8 ; R5 := "Lotus.Interface.CodexUtilities"
	20	[7]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[8]	GETGLOBAL	R5 K3 ; R5 := 0x2d0fad09
	22	[8]	LOADK    	R6 K9 ; R6 := "Lotus.Interface.StoreItemUtilities"
	23	[8]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[10]	NEWTABLE 	R6 3 0 ; R6 := {}
	25	[12]	GETGLOBAL	R7 K10 ; R7 := 0x0469f296
	26	[12]	LOADK    	R8 K11 ; R8 := "MaskingPlane0"
	27	[12]	CALL     	R7 2 2 ; R7 := R7(R8)
	28	[13]	GETGLOBAL	R8 K10 ; R8 := 0x0469f296
	29	[13]	LOADK    	R9 K12 ; R9 := "MaskingPlane1"
	30	[13]	CALL     	R8 2 2 ; R8 := R8(R9)
	31	[14]	GETGLOBAL	R9 K10 ; R9 := 0x0469f296
	32	[14]	LOADK    	R10 K13 ; R10 := "MaskingPlane2"
	33	[14]	CALL     	R9 2 2 ; R9 := R9(R10)
	34	[15]	GETGLOBAL	R10 K10 ; R10 := 0x0469f296
	35	[15]	LOADK    	R11 K14 ; R11 := "MaskingPlane3"
	36	[15]	CALL     	R10 2 0 ; R10,... := R10(R11)
	37	[16]	SETLIST  	R6 0 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 0
	38	[18]	NEWTABLE 	R7 3 0 ; R7 := {}
	39	[18]	GETGLOBAL	R8 K15 ; R8 := 0xa421af95
	40	[18]	CALL     	R8 1 2 ; R8 := R8()
	41	[18]	GETGLOBAL	R9 K15 ; R9 := 0xa421af95
	42	[18]	CALL     	R9 1 2 ; R9 := R9()
	43	[18]	GETGLOBAL	R10 K15 ; R10 := 0xa421af95
	44	[18]	CALL     	R10 1 2 ; R10 := R10()
	45	[18]	GETGLOBAL	R11 K15 ; R11 := 0xa421af95
	46	[18]	CALL     	R11 1 0 ; R11,... := R11()
	47	[18]	SETLIST  	R7 0 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
	48	[20]	NEWTABLE 	R8 6 0 ; R8 := {}
	49	[21]	LOADK    	R9 := 1.000000
	50	[21]	LOADK    	R10 := 0.000000
	51	[21]	LOADK    	R11 := 5.000000
	52	[22]	LOADK    	R12 := 16.000000
	53	[23]	LOADK    	R13 := 28.000000
	54	[24]	LOADK    	R14 := 29.000000
	55	[24]	SETLIST  	R8 6 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 6
	56	[26]	NEWTABLE 	R9 3 0 ; R9 := {}
	57	[26]	LOADK    	R10 := 3.000000
	58	[26]	LOADK    	R11 := 15.000000
	59	[26]	LOADK    	R12 := 27.000000
	60	[26]	SETLIST  	R9 3 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 3
	61	[27]	GETGLOBAL	R10 K17 ; R10 := 0x7ed0a956
	62	[27]	LOADK    	R11 K18 ; R11 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
	63	[27]	CALL     	R10 2 2 ; R10 := R10(R11)
	64	[28]	GETGLOBAL	R11 K17 ; R11 := 0x7ed0a956
	65	[28]	LOADK    	R12 K19 ; R12 := "/Lotus/Upgrades/Mods/Fusers/LegendaryModFuser"
	66	[28]	CALL     	R11 2 2 ; R11 := R11(R12)
	67	[29]	GETGLOBAL	R12 K17 ; R12 := 0x7ed0a956
	68	[29]	LOADK    	R13 K20 ; R13 := "/Lotus/Interface/ItemInfoPopup.swf"
	69	[29]	CALL     	R12 2 2 ; R12 := R12(R13)
	70	[30]	GETGLOBAL	R13 K17 ; R13 := 0x7ed0a956
	71	[30]	LOADK    	R14 K21 ; R14 := "/Lotus/Weapons/CrewShip/RailjackWeapon"
	72	[30]	CALL     	R13 2 2 ; R13 := R13(R14)
	73	[31]	GETGLOBAL	R14 K17 ; R14 := 0x7ed0a956
	74	[31]	LOADK    	R15 K22 ; R15 := "/Lotus/Types/Game/CrewShipCustomization"
	75	[31]	CALL     	R14 2 2 ; R14 := R14(R15)
	76	[32]	GETGLOBAL	R15 K17 ; R15 := 0x7ed0a956
	77	[32]	LOADK    	R16 K23 ; R16 := "/Lotus/Upgrades/Mods/Railjack/RailjackBaseMod"
	78	[32]	CALL     	R15 2 2 ; R15 := R15(R16)
	79	[36]	NEWTABLE 	R16 18 0 ; R16 := {}
	80	[38]	GETGLOBAL	R17 K17 ; R17 := 0x7ed0a956
	81	[38]	LOADK    	R18 K24 ; R18 := "/Lotus/Interface/Friends.swf"
	82	[38]	CALL     	R17 2 2 ; R17 := R17(R18)
	83	[39]	GETGLOBAL	R18 K17 ; R18 := 0x7ed0a956
	84	[39]	LOADK    	R19 K25 ; R19 := "/Lotus/Interface/Clan.swf"
	85	[39]	CALL     	R18 2 2 ; R18 := R18(R19)
	86	[40]	GETGLOBAL	R19 K17 ; R19 := 0x7ed0a956
	87	[40]	LOADK    	R20 K26 ; R20 := "/Lotus/Interface/EpisodeChallenges.swf"
	88	[40]	CALL     	R19 2 2 ; R19 := R19(R20)
	89	[41]	GETGLOBAL	R20 K17 ; R20 := 0x7ed0a956
	90	[41]	LOADK    	R21 K27 ; R21 := "/Lotus/Interface/TennoWayTree.swf"
	91	[41]	CALL     	R20 2 2 ; R20 := R20(R21)
	92	[42]	GETGLOBAL	R21 K17 ; R21 := 0x7ed0a956
	93	[42]	LOADK    	R22 K28 ; R22 := "/Lotus/Interface/Settings.swf"
	94	[42]	CALL     	R21 2 2 ; R21 := R21(R22)
	95	[43]	GETGLOBAL	R22 K17 ; R22 := 0x7ed0a956
	96	[43]	LOADK    	R23 K29 ; R23 := "/Lotus/Interface/Profile.swf"
	97	[43]	CALL     	R22 2 2 ; R22 := R22(R23)
	98	[44]	GETGLOBAL	R23 K17 ; R23 := 0x7ed0a956
	99	[44]	LOADK    	R24 K30 ; R24 := "/Lotus/Interface/ControllerLayoutPS4.swf"
	100	[44]	CALL     	R23 2 2 ; R23 := R23(R24)
	101	[45]	GETGLOBAL	R24 K17 ; R24 := 0x7ed0a956
	102	[45]	LOADK    	R25 K31 ; R25 := "/Lotus/Interface/ControllerLayoutPS5.swf"
	103	[45]	CALL     	R24 2 2 ; R24 := R24(R25)
	104	[46]	GETGLOBAL	R25 K17 ; R25 := 0x7ed0a956
	105	[46]	LOADK    	R26 K32 ; R26 := "/Lotus/Interface/ControllerLayoutRemotePlay.swf"
	106	[46]	CALL     	R25 2 2 ; R25 := R25(R26)
	107	[47]	GETGLOBAL	R26 K17 ; R26 := 0x7ed0a956
	108	[47]	LOADK    	R27 K33 ; R27 := "/Lotus/Interface/ControllerLayoutSwitch.swf"
	109	[47]	CALL     	R26 2 2 ; R26 := R26(R27)
	110	[48]	GETGLOBAL	R27 K17 ; R27 := 0x7ed0a956
	111	[48]	LOADK    	R28 K34 ; R28 := "/Lotus/Interface/ControllerLayoutXbone.swf"
	112	[48]	CALL     	R27 2 2 ; R27 := R27(R28)
	113	[49]	GETGLOBAL	R28 K17 ; R28 := 0x7ed0a956
	114	[49]	LOADK    	R29 K35 ; R29 := "/Lotus/Interface/StyleManager.swf"
	115	[49]	CALL     	R28 2 2 ; R28 := R28(R29)
	116	[50]	GETGLOBAL	R29 K17 ; R29 := 0x7ed0a956
	117	[50]	LOADK    	R30 K36 ; R30 := "/Lotus/Interface/InputBinding.swf"
	118	[50]	CALL     	R29 2 2 ; R29 := R29(R30)
	119	[51]	GETGLOBAL	R30 K17 ; R30 := 0x7ed0a956
	120	[51]	LOADK    	R31 K37 ; R31 := "/Lotus/Interface/LoadOutSelect.swf"
	121	[51]	CALL     	R30 2 2 ; R30 := R30(R31)
	122	[52]	GETGLOBAL	R31 K17 ; R31 := 0x7ed0a956
	123	[52]	LOADK    	R32 K38 ; R32 := "/Lotus/Interface/Test/NemesisTest.swf"
	124	[52]	CALL     	R31 2 2 ; R31 := R31(R32)
	125	[53]	GETGLOBAL	R32 K17 ; R32 := 0x7ed0a956
	126	[53]	LOADK    	R33 K39 ; R33 := "/Lotus/Interface/ThemedArcaneManager.swf"
	127	[53]	CALL     	R32 2 2 ; R32 := R32(R33)
	128	[54]	GETGLOBAL	R33 K17 ; R33 := 0x7ed0a956
	129	[54]	LOADK    	R34 K40 ; R34 := "/Lotus/Interface/RailjackLoadOut.swf"
	130	[54]	CALL     	R33 2 2 ; R33 := R33(R34)
	131	[55]	GETGLOBAL	R34 K17 ; R34 := 0x7ed0a956
	132	[55]	LOADK    	R35 K41 ; R35 := "/Lotus/Interface/RailjackResources.swf"
	133	[55]	CALL     	R34 2 2 ; R34 := R34(R35)
	134	[56]	GETGLOBAL	R35 K17 ; R35 := 0x7ed0a956
	135	[56]	LOADK    	R36 K42 ; R36 := "/Lotus/Interface/Intrinsics.swf"
	136	[56]	CALL     	R35 2 2 ; R35 := R35(R36)
	137	[57]	GETGLOBAL	R36 K17 ; R36 := 0x7ed0a956
	138	[57]	LOADK    	R37 K43 ; R37 := "/Lotus/Interface/CephalonFragment.swf"
	139	[57]	CALL     	R36 2 2 ; R36 := R36(R37)
	140	[58]	GETGLOBAL	R37 K17 ; R37 := 0x7ed0a956
	141	[58]	LOADK    	R38 K44 ; R38 := "/Lotus/Interface/ThemedCephalonFragment.swf"
	142	[58]	CALL     	R37 2 0 ; R37,... := R37(R38)
	143	[59]	SETLIST  	R16 0 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 0
	144	[61]	NEWTABLE 	R17 19 0 ; R17 := {}
	145	[62]	OP_LOADBOOL	R18 0 0 ; R18 := false
	146	[63]	OP_LOADBOOL	R19 0 0 ; R19 := false
	147	[64]	OP_LOADBOOL	R20 0 0 ; R20 := false
	148	[65]	OP_LOADBOOL	R21 0 0 ; R21 := false
	149	[66]	OP_LOADBOOL	R22 0 0 ; R22 := false
	150	[67]	OP_LOADBOOL	R23 1 0 ; R23 := true
	151	[68]	OP_LOADBOOL	R24 1 0 ; R24 := true
	152	[69]	OP_LOADBOOL	R25 1 0 ; R25 := true
	153	[70]	OP_LOADBOOL	R26 1 0 ; R26 := true
	154	[71]	OP_LOADBOOL	R27 1 0 ; R27 := true
	155	[72]	OP_LOADBOOL	R28 0 0 ; R28 := false
	156	[73]	OP_LOADBOOL	R29 0 0 ; R29 := false
	157	[74]	OP_LOADBOOL	R30 0 0 ; R30 := false
	158	[75]	OP_LOADBOOL	R31 0 0 ; R31 := false
	159	[76]	OP_LOADBOOL	R32 0 0 ; R32 := false
	160	[77]	OP_LOADBOOL	R33 0 0 ; R33 := false
	161	[78]	OP_LOADBOOL	R34 0 0 ; R34 := false
	162	[79]	OP_LOADBOOL	R35 0 0 ; R35 := false
	163	[80]	OP_LOADBOOL	R36 0 0 ; R36 := false
	164	[81]	OP_LOADBOOL	R37 1 0 ; R37 := true
	165	[82]	OP_LOADBOOL	R38 1 0 ; R38 := true
	166	[84]	OP_LOADBOOL	R39 0 0 ; R39 := false
	167	[84]	SETLIST  	R17 22 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 22
	168	[86]	NEWTABLE 	R18 0 2 ; R18 := {}
	169	[88]	SETTABLE 	R18 K45 K46 ; R18["InitLabelWidth"] := 25.000000
	170	[89]	NEWTABLE 	R19 0 2 ; R19 := {}
	171	[89]	SETTABLE 	R19 K48 K49 ; R19["Width"] := 232.000000
	172	[89]	SETTABLE 	R19 K50 K51 ; R19["Height"] := 162.000000
	173	[89]	SETTABLE 	R18 K47 R19 ; R18["ItemDimensions"] := R19
	174	[94]	LOADK    	R19 := 1.000000
	175	[94]	SETGLOBALHASH	R19 K52 ; LABEL_TYPE_CREDITS := R19
	176	[95]	LOADK    	R19 := 2.000000
	177	[95]	SETGLOBALHASH	R19 K53 ; LABEL_TYPE_PLATINUM := R19
	178	[96]	LOADK    	R19 := 3.000000
	179	[96]	SETGLOBALHASH	R19 K54 ; LABEL_TYPE_CHECKMARK := R19
	180	[97]	LOADK    	R19 := 4.000000
	181	[97]	SETGLOBALHASH	R19 K55 ; LABEL_TYPE_STEAM := R19
	182	[98]	LOADK    	R19 := 5.000000
	183	[98]	SETGLOBALHASH	R19 K56 ; LABEL_TYPE_PREVIEW := R19
	184	[99]	LOADK    	R19 := 6.000000
	185	[99]	SETGLOBALHASH	R19 K57 ; LABEL_TYPE_REPUTATION := R19
	186	[100]	LOADK    	R19 := 7.000000
	187	[100]	SETGLOBALHASH	R19 K58 ; LABEL_TYPE_DUCATS := R19
	188	[101]	LOADK    	R19 := 8.000000
	189	[101]	SETGLOBALHASH	R19 K59 ; LABEL_TYPE_PRIMETOKENS := R19
	190	[102]	LOADK    	R19 := 9.000000
	191	[102]	SETGLOBALHASH	R19 K60 ; LABEL_TYPE_TIMER := R19
	192	[103]	LOADK    	R19 := 10.000000
	193	[103]	SETGLOBALHASH	R19 K61 ; LABEL_TYPE_OSTRON_ITEM := R19
	194	[104]	LOADK    	R19 := 11.000000
	195	[104]	SETGLOBALHASH	R19 K62 ; LABEL_TYPE_MISC_ITEM := R19
	196	[105]	LOADK    	R19 := 12.000000
	197	[105]	SETGLOBALHASH	R19 K63 ; LABEL_TYPE_FOCUS := R19
	198	[106]	LOADK    	R19 := 13.000000
	199	[106]	SETGLOBALHASH	R19 K64 ; LABEL_TYPE_ENDO := R19
	200	[107]	LOADK    	R19 := 14.000000
	201	[107]	SETGLOBALHASH	R19 K65 ; LABEL_TYPE_RESEARCHED := R19
	202	[108]	LOADK    	R19 := 15.000000
	203	[108]	SETGLOBALHASH	R19 K66 ; LABEL_TYPE_CLAN_XP := R19
	204	[109]	LOADK    	R19 := 16.000000
	205	[109]	SETGLOBALHASH	R19 K67 ; LABEL_TYPE_CRAFTED := R19
	206	[110]	LOADK    	R19 := 17.000000
	207	[110]	SETGLOBALHASH	R19 K68 ; LABEL_TYPE_RECIPES := R19
	208	[111]	LOADK    	R19 := 18.000000
	209	[111]	SETGLOBALHASH	R19 K69 ; LABEL_TYPE_UNIQUE_TEXT := R19
	210	[112]	LOADK    	R19 := 19.000000
	211	[112]	SETGLOBALHASH	R19 K70 ; LABEL_TYPE_NEW := R19
	212	[113]	LOADK    	R19 := 20.000000
	213	[113]	SETGLOBALHASH	R19 K71 ; LABEL_TYPE_RECOMMENDED := R19
	214	[114]	LOADK    	R19 := 21.000000
	215	[114]	SETGLOBALHASH	R19 K72 ; LABEL_TYPE_LIMITED := R19
	216	[115]	LOADK    	R19 := 22.000000
	217	[115]	SETGLOBALHASH	R19 K73 ; LABEL_TYPE_SALE := R19
	218	[116]	LOADK    	R19 := 23.000000
	219	[116]	SETGLOBALHASH	R19 K74 ; LABEL_TYPE_UPGRADE := R19
	220	[117]	LOADK    	R19 := 24.000000
	221	[117]	SETGLOBALHASH	R19 K75 ; LABEL_TYPE_PAUSED := R19
	222	[118]	LOADK    	R19 := 25.000000
	223	[118]	SETGLOBALHASH	R19 K76 ; LABEL_TYPE_MASTERY := R19
	224	[119]	LOADK    	R19 := 26.000000
	225	[119]	SETGLOBALHASH	R19 K77 ; LABEL_TYPE_POLARIZED := R19
	226	[120]	LOADK    	R19 := 27.000000
	227	[120]	SETGLOBALHASH	R19 K78 ; LABEL_TYPE_TRADEABLE := R19
	228	[121]	LOADK    	R19 := 28.000000
	229	[121]	SETGLOBALHASH	R19 K79 ; LABEL_TYPE_CATALYST := R19
	230	[122]	LOADK    	R19 := 29.000000
	231	[122]	SETGLOBALHASH	R19 K80 ; LABEL_TYPE_REACTOR := R19
	232	[123]	LOADK    	R19 := 30.000000
	233	[123]	SETGLOBALHASH	R19 K81 ; LABEL_TYPE_WEAPON_EXILUS := R19
	234	[124]	LOADK    	R19 := 31.000000
	235	[124]	SETGLOBALHASH	R19 K82 ; LABEL_TYPE_POWERSUIT_EXILUS := R19
	236	[125]	LOADK    	R19 := 32.000000
	237	[125]	SETGLOBALHASH	R19 K83 ; LABEL_TYPE_PRIMARY_ADAPTER := R19
	238	[126]	LOADK    	R19 := 33.000000
	239	[126]	SETGLOBALHASH	R19 K84 ; LABEL_TYPE_SECONDARY_ADAPTER := R19
	240	[127]	LOADK    	R19 := 34.000000
	241	[127]	SETGLOBALHASH	R19 K85 ; LABEL_TYPE_FOCUS_LENS := R19
	242	[128]	LOADK    	R19 := 35.000000
	243	[128]	SETGLOBALHASH	R19 K86 ; LABEL_TYPE_GILD := R19
	244	[129]	LOADK    	R19 := 36.000000
	245	[129]	SETGLOBALHASH	R19 K87 ; LABEL_TYPE_REQUIRED_MASTERY := R19
	246	[130]	LOADK    	R19 := 37.000000
	247	[130]	SETGLOBALHASH	R19 K88 ; LABEL_TYPE_REUSABLE_BLUEPRINT := R19
	248	[131]	LOADK    	R19 := 38.000000
	249	[131]	SETGLOBALHASH	R19 K89 ; LABEL_TYPE_RIGHT_TEXT := R19
	250	[132]	LOADK    	R19 := 39.000000
	251	[132]	SETGLOBALHASH	R19 K90 ; LABEL_TYPE_LOCK := R19
	252	[133]	LOADK    	R19 := 40.000000
	253	[133]	SETGLOBALHASH	R19 K91 ; LABEL_TYPE_DISCORD := R19
	254	[134]	LOADK    	R19 := 41.000000
	255	[134]	SETGLOBALHASH	R19 K92 ; LABEL_TYPE_FAVORITE := R19
	256	[135]	LOADK    	R19 := 42.000000
	257	[135]	SETGLOBALHASH	R19 K93 ; LABEL_TYPE_CAMERA := R19
	258	[136]	LOADK    	R19 := 43.000000
	259	[136]	SETGLOBALHASH	R19 K94 ; LABEL_TYPE_CREW_SHIP_FUSION_POINTS := R19
	260	[137]	LOADK    	R19 := 44.000000
	261	[137]	SETGLOBALHASH	R19 K95 ; LABEL_TYPE_ARCANE_REPROC := R19
	262	[138]	LOADK    	R19 := 45.000000
	263	[138]	SETGLOBALHASH	R19 K96 ; LABEL_TYPE_EPIC := R19
	264	[139]	LOADK    	R19 := 46.000000
	265	[139]	SETGLOBALHASH	R19 K97 ; LABEL_TYPE_CONTRIBUTE := R19
	266	[140]	LOADK    	R19 := 47.000000
	267	[140]	SETGLOBALHASH	R19 K98 ; LABEL_TYPE_PREMIUM := R19
	268	[141]	LOADK    	R19 := 48.000000
	269	[141]	SETGLOBALHASH	R19 K99 ; LABEL_TYPE_GIFTABLE := R19
	270	[142]	LOADK    	R19 := 49.000000
	271	[142]	SETGLOBALHASH	R19 K100 ; LABEL_TYPE_IN_PROGRESS := R19
	272	[143]	LOADK    	R19 := 50.000000
	273	[143]	SETGLOBALHASH	R19 K101 ; LABEL_TYPE_UGC := R19
	274	[145]	GETGLOBAL	R19 K75 ; R19 := LABEL_TYPE_PAUSED
	275	[145]	SETGLOBALHASH	R19 K102 ; FULL_LABEL_THRESHOLD := R19
	276	[147]	LOADK    	R19 := 300.000000
	277	[147]	SETGLOBALHASH	R19 K103 ; PQ_FIRST_LAYER := R19
	278	[148]	LOADK    	R19 := 315.000000
	279	[148]	SETGLOBALHASH	R19 K104 ; PQ_LAST_LAYER := R19
	280	[149]	LOADK    	R19 := 0.125000
	281	[149]	SETGLOBALHASH	R19 K105 ; TOUCH_TOOLTIP_DELAY := R19
	282	[151]	LOADK    	R19 := 9.000000
	283	[153]	NEWTABLE 	R20 0 19 ; R20 := {}
	284	[155]	GETGLOBAL	R21 K52 ; R21 := LABEL_TYPE_CREDITS
	285	[155]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	286	[156]	GETGLOBAL	R21 K53 ; R21 := LABEL_TYPE_PLATINUM
	287	[156]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	288	[157]	GETGLOBAL	R21 K58 ; R21 := LABEL_TYPE_DUCATS
	289	[157]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	290	[158]	GETGLOBAL	R21 K59 ; R21 := LABEL_TYPE_PRIMETOKENS
	291	[158]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	292	[159]	GETGLOBAL	R21 K54 ; R21 := LABEL_TYPE_CHECKMARK
	293	[159]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	294	[160]	GETGLOBAL	R21 K56 ; R21 := LABEL_TYPE_PREVIEW
	295	[160]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	296	[161]	GETGLOBAL	R21 K64 ; R21 := LABEL_TYPE_ENDO
	297	[161]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	298	[162]	GETGLOBAL	R21 K65 ; R21 := LABEL_TYPE_RESEARCHED
	299	[162]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	300	[163]	GETGLOBAL	R21 K97 ; R21 := LABEL_TYPE_CONTRIBUTE
	301	[163]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	302	[164]	GETGLOBAL	R21 K60 ; R21 := LABEL_TYPE_TIMER
	303	[164]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	304	[165]	GETGLOBAL	R21 K74 ; R21 := LABEL_TYPE_UPGRADE
	305	[165]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	306	[166]	GETGLOBAL	R21 K73 ; R21 := LABEL_TYPE_SALE
	307	[166]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	308	[167]	GETGLOBAL	R21 K75 ; R21 := LABEL_TYPE_PAUSED
	309	[167]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	310	[168]	GETGLOBAL	R21 K90 ; R21 := LABEL_TYPE_LOCK
	311	[168]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	312	[169]	GETGLOBAL	R21 K92 ; R21 := LABEL_TYPE_FAVORITE
	313	[169]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	314	[170]	GETGLOBAL	R21 K93 ; R21 := LABEL_TYPE_CAMERA
	315	[170]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	316	[171]	GETGLOBAL	R21 K70 ; R21 := LABEL_TYPE_NEW
	317	[171]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	318	[172]	GETGLOBAL	R21 K71 ; R21 := LABEL_TYPE_RECOMMENDED
	319	[172]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	320	[173]	GETGLOBAL	R21 K72 ; R21 := LABEL_TYPE_LIMITED
	321	[173]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	322	[174]	GETGLOBAL	R21 K100 ; R21 := LABEL_TYPE_IN_PROGRESS
	323	[174]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	324	[175]	GETGLOBAL	R21 K101 ; R21 := LABEL_TYPE_UGC
	325	[175]	SETTABLE 	R20 R21 K106 ; R20[R21] := true
	326	[178]	NEWTABLE 	R21 29 0 ; R21 := {}
	327	[179]	NEWTABLE 	R22 0 2 ; R22 := {}
	328	[181]	NEWTABLE 	R23 0 2 ; R23 := {}
	329	[181]	SETTABLE 	R23 K108 K109 ; R23["X"] := 3.000000
	330	[181]	SETTABLE 	R23 K110 K111 ; R23["Y"] := 2.000000
	331	[181]	SETTABLE 	R22 K107 R23 ; R22["IconPos"] := R23
	332	[182]	NEWTABLE 	R23 0 2 ; R23 := {}
	333	[182]	SETTABLE 	R23 K113 K114 ; R23["W"] := 22.000000
	334	[182]	SETTABLE 	R23 K115 K114 ; R23["H"] := 22.000000
	335	[182]	SETTABLE 	R22 K112 R23 ; R22["IconDims"] := R23
	336	[183]	NEWTABLE 	R23 0 5 ; R23 := {}
	337	[185]	NEWTABLE 	R24 0 2 ; R24 := {}
	338	[185]	SETTABLE 	R24 K108 K116 ; R24["X"] := 0.000000
	339	[185]	SETTABLE 	R24 K110 K117 ; R24["Y"] := 1.000000
	340	[185]	SETTABLE 	R23 K107 R24 ; R23["IconPos"] := R24
	341	[186]	NEWTABLE 	R24 0 2 ; R24 := {}
	342	[186]	SETTABLE 	R24 K108 K119 ; R24["X"] := 7.000000
	343	[186]	SETTABLE 	R24 K110 K109 ; R24["Y"] := 3.000000
	344	[186]	SETTABLE 	R23 K118 R24 ; R23["GridIconPos"] := R24
	345	[187]	NEWTABLE 	R24 0 2 ; R24 := {}
	346	[187]	SETTABLE 	R24 K113 K46 ; R24["W"] := 25.000000
	347	[187]	SETTABLE 	R24 K115 K46 ; R24["H"] := 25.000000
	348	[187]	SETTABLE 	R23 K112 R24 ; R23["IconDims"] := R24
	349	[188]	NEWTABLE 	R24 0 2 ; R24 := {}
	350	[188]	SETTABLE 	R24 K113 K121 ; R24["W"] := 21.000000
	351	[188]	SETTABLE 	R24 K115 K121 ; R24["H"] := 21.000000
	352	[188]	SETTABLE 	R23 K120 R24 ; R23["GridIconDims"] := R24
	353	[189]	SETTABLE 	R23 K122 K111 ; R23["GridBgColor"] := 2.000000
	354	[190]	NEWTABLE 	R24 0 5 ; R24 := {}
	355	[192]	SETTABLE 	R24 K124 K106 ; R24["SkipTitleCase"] := true
	356	[193]	SETTABLE 	R24 K125 K106 ; R24["IconTintLabelColor"] := true
	357	[194]	NEWTABLE 	R25 0 2 ; R25 := {}
	358	[194]	SETTABLE 	R25 K108 K126 ; R25["X"] := 5.000000
	359	[194]	SETTABLE 	R25 K110 K117 ; R25["Y"] := 1.000000
	360	[194]	SETTABLE 	R24 K107 R25 ; R24["IconPos"] := R25
	361	[195]	NEWTABLE 	R25 0 2 ; R25 := {}
	362	[195]	SETTABLE 	R25 K113 K127 ; R25["W"] := 24.000000
	363	[195]	SETTABLE 	R25 K115 K127 ; R25["H"] := 24.000000
	364	[195]	SETTABLE 	R24 K112 R25 ; R24["IconDims"] := R25
	365	[196]	SETTABLE 	R24 K128 K111 ; R24["BgColor"] := 2.000000
	366	[197]	NEWTABLE 	R25 0 3 ; R25 := {}
	367	[199]	SETTABLE 	R25 K124 K106 ; R25["SkipTitleCase"] := true
	368	[200]	NEWTABLE 	R26 0 2 ; R26 := {}
	369	[200]	SETTABLE 	R26 K108 K116 ; R26["X"] := 0.000000
	370	[200]	SETTABLE 	R26 K110 K116 ; R26["Y"] := 0.000000
	371	[200]	SETTABLE 	R25 K107 R26 ; R25["IconPos"] := R26
	372	[201]	NEWTABLE 	R26 0 2 ; R26 := {}
	373	[201]	SETTABLE 	R26 K113 K46 ; R26["W"] := 25.000000
	374	[201]	SETTABLE 	R26 K115 K46 ; R26["H"] := 25.000000
	375	[201]	SETTABLE 	R25 K112 R26 ; R25["IconDims"] := R26
	376	[202]	NEWTABLE 	R26 0 2 ; R26 := {}
	377	[204]	SETTABLE 	R26 K129 K130 ; R26["LabelPrefix"] := "<PREVIEW>"
	378	[205]	SETTABLE 	R26 K131 K111 ; R26["LabelOffset"] := 2.000000
	379	[206]	NEWTABLE 	R27 0 2 ; R27 := {}
	380	[208]	SETTABLE 	R27 K129 K132 ; R27["LabelPrefix"] := "<REPUTATION>"
	381	[209]	SETTABLE 	R27 K131 K111 ; R27["LabelOffset"] := 2.000000
	382	[210]	NEWTABLE 	R28 0 2 ; R28 := {}
	383	[212]	SETTABLE 	R28 K129 K133 ; R28["LabelPrefix"] := "<PRIME_BUCKS>"
	384	[213]	SETTABLE 	R28 K131 K111 ; R28["LabelOffset"] := 2.000000
	385	[214]	NEWTABLE 	R29 0 2 ; R29 := {}
	386	[216]	SETTABLE 	R29 K129 K134 ; R29["LabelPrefix"] := "<PRIME_TOKEN>"
	387	[217]	SETTABLE 	R29 K131 K111 ; R29["LabelOffset"] := 2.000000
	388	[218]	NEWTABLE 	R30 0 3 ; R30 := {}
	389	[220]	NEWTABLE 	R31 0 2 ; R31 := {}
	390	[220]	SETTABLE 	R31 K108 K109 ; R31["X"] := 3.000000
	391	[220]	SETTABLE 	R31 K110 K111 ; R31["Y"] := 2.000000
	392	[220]	SETTABLE 	R30 K107 R31 ; R30["IconPos"] := R31
	393	[221]	NEWTABLE 	R31 0 2 ; R31 := {}
	394	[221]	SETTABLE 	R31 K113 K127 ; R31["W"] := 24.000000
	395	[221]	SETTABLE 	R31 K115 K127 ; R31["H"] := 24.000000
	396	[221]	SETTABLE 	R30 K112 R31 ; R30["IconDims"] := R31
	397	[222]	SETTABLE 	R30 K125 K106 ; R30["IconTintLabelColor"] := true
	398	[223]	NEWTABLE 	R31 0 2 ; R31 := {}
	399	[225]	SETTABLE 	R31 K129 K135 ; R31["LabelPrefix"] := "<OSTRON_PRICE>"
	400	[226]	SETTABLE 	R31 K131 K111 ; R31["LabelOffset"] := 2.000000
	401	[227]	NEWTABLE 	R32 0 3 ; R32 := {}
	402	[229]	NEWTABLE 	R33 0 2 ; R33 := {}
	403	[229]	SETTABLE 	R33 K108 K116 ; R33["X"] := 0.000000
	404	[229]	SETTABLE 	R33 K110 K116 ; R33["Y"] := 0.000000
	405	[229]	SETTABLE 	R32 K107 R33 ; R32["IconPos"] := R33
	406	[230]	NEWTABLE 	R33 0 2 ; R33 := {}
	407	[230]	SETTABLE 	R33 K113 K136 ; R33["W"] := 40.000000
	408	[230]	SETTABLE 	R33 K115 K46 ; R33["H"] := 25.000000
	409	[230]	SETTABLE 	R32 K112 R33 ; R32["IconDims"] := R33
	410	[231]	SETTABLE 	R32 K131 K137 ; R32["LabelOffset"] := 38.000000
	411	[232]	NEWTABLE 	R33 0 2 ; R33 := {}
	412	[234]	SETTABLE 	R33 K129 K138 ; R33["LabelPrefix"] := "<FOCUS>"
	413	[235]	SETTABLE 	R33 K131 K111 ; R33["LabelOffset"] := 2.000000
	414	[236]	NEWTABLE 	R34 0 2 ; R34 := {}
	415	[238]	SETTABLE 	R34 K129 K139 ; R34["LabelPrefix"] := "<FUSION_POINTS>"
	416	[239]	SETTABLE 	R34 K131 K111 ; R34["LabelOffset"] := 2.000000
	417	[240]	NEWTABLE 	R35 0 4 ; R35 := {}
	418	[242]	NEWTABLE 	R36 0 2 ; R36 := {}
	419	[242]	SETTABLE 	R36 K108 K116 ; R36["X"] := 0.000000
	420	[242]	SETTABLE 	R36 K110 K140 ; R36["Y"] := -3.000000
	421	[242]	SETTABLE 	R35 K107 R36 ; R35["IconPos"] := R36
	422	[243]	NEWTABLE 	R36 0 2 ; R36 := {}
	423	[243]	SETTABLE 	R36 K113 K141 ; R36["W"] := 32.000000
	424	[243]	SETTABLE 	R36 K115 K141 ; R36["H"] := 32.000000
	425	[243]	SETTABLE 	R35 K112 R36 ; R35["IconDims"] := R36
	426	[244]	SETTABLE 	R35 K125 K106 ; R35["IconTintLabelColor"] := true
	427	[245]	SETTABLE 	R35 K142 K143 ; R35["LabelColor"] := 10.000000
	428	[246]	NEWTABLE 	R36 0 2 ; R36 := {}
	429	[248]	NEWTABLE 	R37 0 2 ; R37 := {}
	430	[248]	SETTABLE 	R37 K108 K116 ; R37["X"] := 0.000000
	431	[248]	SETTABLE 	R37 K110 K140 ; R37["Y"] := -3.000000
	432	[248]	SETTABLE 	R36 K107 R37 ; R36["IconPos"] := R37
	433	[249]	NEWTABLE 	R37 0 2 ; R37 := {}
	434	[249]	SETTABLE 	R37 K113 K141 ; R37["W"] := 32.000000
	435	[249]	SETTABLE 	R37 K115 K141 ; R37["H"] := 32.000000
	436	[249]	SETTABLE 	R36 K112 R37 ; R36["IconDims"] := R37
	437	[250]	NEWTABLE 	R37 0 3 ; R37 := {}
	438	[252]	SETTABLE 	R37 K125 K106 ; R37["IconTintLabelColor"] := true
	439	[253]	NEWTABLE 	R38 0 2 ; R38 := {}
	440	[253]	SETTABLE 	R38 K108 K116 ; R38["X"] := 0.000000
	441	[253]	SETTABLE 	R38 K110 K116 ; R38["Y"] := 0.000000
	442	[253]	SETTABLE 	R37 K107 R38 ; R37["IconPos"] := R38
	443	[254]	NEWTABLE 	R38 0 2 ; R38 := {}
	444	[254]	SETTABLE 	R38 K113 K141 ; R38["W"] := 32.000000
	445	[254]	SETTABLE 	R38 K115 K141 ; R38["H"] := 32.000000
	446	[254]	SETTABLE 	R37 K112 R38 ; R37["IconDims"] := R38
	447	[255]	NEWTABLE 	R38 0 3 ; R38 := {}
	448	[257]	SETTABLE 	R38 K125 K106 ; R38["IconTintLabelColor"] := true
	449	[258]	NEWTABLE 	R39 0 2 ; R39 := {}
	450	[258]	SETTABLE 	R39 K108 K116 ; R39["X"] := 0.000000
	451	[258]	SETTABLE 	R39 K110 K116 ; R39["Y"] := 0.000000
	452	[258]	SETTABLE 	R38 K107 R39 ; R38["IconPos"] := R39
	453	[259]	NEWTABLE 	R39 0 2 ; R39 := {}
	454	[259]	SETTABLE 	R39 K113 K141 ; R39["W"] := 32.000000
	455	[259]	SETTABLE 	R39 K115 K141 ; R39["H"] := 32.000000
	456	[259]	SETTABLE 	R38 K112 R39 ; R38["IconDims"] := R39
	457	[260]	NEWTABLE 	R39 0 1 ; R39 := {}
	458	[262]	SETTABLE 	R39 K131 K116 ; R39["LabelOffset"] := 0.000000
	459	[263]	NEWTABLE 	R40 0 6 ; R40 := {}
	460	[265]	SETTABLE 	R40 K124 K106 ; R40["SkipTitleCase"] := true
	461	[266]	SETTABLE 	R40 K125 K106 ; R40["IconTintLabelColor"] := true
	462	[267]	NEWTABLE 	R41 0 2 ; R41 := {}
	463	[267]	SETTABLE 	R41 K108 K117 ; R41["X"] := 1.000000
	464	[267]	SETTABLE 	R41 K110 K144 ; R41["Y"] := -2.000000
	465	[267]	SETTABLE 	R40 K107 R41 ; R40["IconPos"] := R41
	466	[268]	NEWTABLE 	R41 0 2 ; R41 := {}
	467	[268]	SETTABLE 	R41 K113 K141 ; R41["W"] := 32.000000
	468	[268]	SETTABLE 	R41 K115 K141 ; R41["H"] := 32.000000
	469	[268]	SETTABLE 	R40 K112 R41 ; R40["IconDims"] := R41
	470	[269]	SETTABLE 	R40 K122 K111 ; R40["GridBgColor"] := 2.000000
	471	[270]	SETTABLE 	R40 K145 K111 ; R40["GridBgHeightOffset"] := 2.000000
	472	[271]	NEWTABLE 	R41 0 3 ; R41 := {}
	473	[273]	SETTABLE 	R41 K125 K106 ; R41["IconTintLabelColor"] := true
	474	[274]	NEWTABLE 	R42 0 2 ; R42 := {}
	475	[274]	SETTABLE 	R42 K108 K116 ; R42["X"] := 0.000000
	476	[274]	SETTABLE 	R42 K110 K116 ; R42["Y"] := 0.000000
	477	[274]	SETTABLE 	R41 K107 R42 ; R41["IconPos"] := R42
	478	[275]	NEWTABLE 	R42 0 2 ; R42 := {}
	479	[275]	SETTABLE 	R42 K113 K141 ; R42["W"] := 32.000000
	480	[275]	SETTABLE 	R42 K115 K141 ; R42["H"] := 32.000000
	481	[275]	SETTABLE 	R41 K112 R42 ; R41["IconDims"] := R42
	482	[276]	NEWTABLE 	R42 0 5 ; R42 := {}
	483	[278]	SETTABLE 	R42 K124 K106 ; R42["SkipTitleCase"] := true
	484	[279]	SETTABLE 	R42 K125 K106 ; R42["IconTintLabelColor"] := true
	485	[280]	NEWTABLE 	R43 0 2 ; R43 := {}
	486	[280]	SETTABLE 	R43 K108 K119 ; R43["X"] := 7.000000
	487	[280]	SETTABLE 	R43 K110 K146 ; R43["Y"] := 4.000000
	488	[280]	SETTABLE 	R42 K107 R43 ; R42["IconPos"] := R43
	489	[281]	NEWTABLE 	R43 0 2 ; R43 := {}
	490	[281]	SETTABLE 	R43 K113 K147 ; R43["W"] := 20.000000
	491	[281]	SETTABLE 	R43 K115 K147 ; R43["H"] := 20.000000
	492	[281]	SETTABLE 	R42 K112 R43 ; R42["IconDims"] := R43
	493	[282]	SETTABLE 	R42 K122 K111 ; R42["GridBgColor"] := 2.000000
	494	[283]	NEWTABLE 	R43 0 4 ; R43 := {}
	495	[285]	SETTABLE 	R43 K125 K106 ; R43["IconTintLabelColor"] := true
	496	[286]	NEWTABLE 	R44 0 2 ; R44 := {}
	497	[286]	SETTABLE 	R44 K108 K126 ; R44["X"] := 5.000000
	498	[286]	SETTABLE 	R44 K110 K117 ; R44["Y"] := 1.000000
	499	[286]	SETTABLE 	R43 K107 R44 ; R43["IconPos"] := R44
	500	[287]	NEWTABLE 	R44 0 2 ; R44 := {}
	501	[287]	SETTABLE 	R44 K113 K127 ; R44["W"] := 24.000000
	502	[287]	SETTABLE 	R44 K115 K127 ; R44["H"] := 24.000000
	503	[287]	SETTABLE 	R43 K112 R44 ; R43["IconDims"] := R44
	504	[288]	SETTABLE 	R43 K122 K111 ; R43["GridBgColor"] := 2.000000
	505	[289]	NEWTABLE 	R44 0 4 ; R44 := {}
	506	[291]	SETTABLE 	R44 K125 K106 ; R44["IconTintLabelColor"] := true
	507	[292]	NEWTABLE 	R45 0 2 ; R45 := {}
	508	[292]	SETTABLE 	R45 K108 K119 ; R45["X"] := 7.000000
	509	[292]	SETTABLE 	R45 K110 K146 ; R45["Y"] := 4.000000
	510	[292]	SETTABLE 	R44 K107 R45 ; R44["IconPos"] := R45
	511	[293]	NEWTABLE 	R45 0 2 ; R45 := {}
	512	[293]	SETTABLE 	R45 K113 K148 ; R45["W"] := 30.000000
	513	[293]	SETTABLE 	R45 K115 K148 ; R45["H"] := 30.000000
	514	[293]	SETTABLE 	R44 K112 R45 ; R44["IconDims"] := R45
	515	[294]	SETTABLE 	R44 K149 K106 ; R44["ExcludeFromInfoPopup"] := true
	516	[295]	NEWTABLE 	R45 0 3 ; R45 := {}
	517	[297]	NEWTABLE 	R46 0 2 ; R46 := {}
	518	[297]	SETTABLE 	R46 K108 K109 ; R46["X"] := 3.000000
	519	[297]	SETTABLE 	R46 K110 K117 ; R46["Y"] := 1.000000
	520	[297]	SETTABLE 	R45 K107 R46 ; R45["IconPos"] := R46
	521	[298]	NEWTABLE 	R46 0 2 ; R46 := {}
	522	[298]	SETTABLE 	R46 K113 K127 ; R46["W"] := 24.000000
	523	[298]	SETTABLE 	R46 K115 K127 ; R46["H"] := 24.000000
	524	[298]	SETTABLE 	R45 K112 R46 ; R45["IconDims"] := R46
	525	[299]	SETTABLE 	R45 K125 K106 ; R45["IconTintLabelColor"] := true
	526	[300]	NEWTABLE 	R46 0 2 ; R46 := {}
	527	[302]	NEWTABLE 	R47 0 2 ; R47 := {}
	528	[302]	SETTABLE 	R47 K108 K150 ; R47["X"] := -10.000000
	529	[302]	SETTABLE 	R47 K110 K151 ; R47["Y"] := -11.000000
	530	[302]	SETTABLE 	R46 K107 R47 ; R46["IconPos"] := R47
	531	[303]	NEWTABLE 	R47 0 2 ; R47 := {}
	532	[303]	SETTABLE 	R47 K113 K152 ; R47["W"] := 50.000000
	533	[303]	SETTABLE 	R47 K115 K152 ; R47["H"] := 50.000000
	534	[303]	SETTABLE 	R46 K112 R47 ; R46["IconDims"] := R47
	535	[304]	NEWTABLE 	R47 0 4 ; R47 := {}
	536	[306]	NEWTABLE 	R48 0 2 ; R48 := {}
	537	[306]	SETTABLE 	R48 K108 K116 ; R48["X"] := 0.000000
	538	[306]	SETTABLE 	R48 K110 K116 ; R48["Y"] := 0.000000
	539	[306]	SETTABLE 	R47 K107 R48 ; R47["IconPos"] := R48
	540	[307]	NEWTABLE 	R48 0 2 ; R48 := {}
	541	[307]	SETTABLE 	R48 K113 K153 ; R48["W"] := 28.000000
	542	[307]	SETTABLE 	R48 K115 K153 ; R48["H"] := 28.000000
	543	[307]	SETTABLE 	R47 K112 R48 ; R47["IconDims"] := R48
	544	[308]	NEWTABLE 	R48 0 2 ; R48 := {}
	545	[308]	SETTABLE 	R48 K108 K127 ; R48["X"] := 24.000000
	546	[308]	SETTABLE 	R48 K110 K109 ; R48["Y"] := 3.000000
	547	[308]	SETTABLE 	R47 K154 R48 ; R47["IconTextPos"] := R48
	548	[309]	SETTABLE 	R47 K155 K156 ; R47["IconTextColor"] := 9.000000
	549	[310]	NEWTABLE 	R48 0 3 ; R48 := {}
	550	[312]	SETTABLE 	R48 K125 K106 ; R48["IconTintLabelColor"] := true
	551	[313]	NEWTABLE 	R49 0 2 ; R49 := {}
	552	[313]	SETTABLE 	R49 K108 K157 ; R49["X"] := 6.000000
	553	[313]	SETTABLE 	R49 K110 K126 ; R49["Y"] := 5.000000
	554	[313]	SETTABLE 	R48 K107 R49 ; R48["IconPos"] := R49
	555	[314]	NEWTABLE 	R49 0 2 ; R49 := {}
	556	[314]	SETTABLE 	R49 K113 K147 ; R49["W"] := 20.000000
	557	[314]	SETTABLE 	R49 K115 K147 ; R49["H"] := 20.000000
	558	[314]	SETTABLE 	R48 K112 R49 ; R48["IconDims"] := R49
	559	[315]	NEWTABLE 	R49 0 2 ; R49 := {}
	560	[317]	NEWTABLE 	R50 0 2 ; R50 := {}
	561	[317]	SETTABLE 	R50 K108 K116 ; R50["X"] := 0.000000
	562	[317]	SETTABLE 	R50 K110 K144 ; R50["Y"] := -2.000000
	563	[317]	SETTABLE 	R49 K107 R50 ; R49["IconPos"] := R50
	564	[318]	NEWTABLE 	R50 0 2 ; R50 := {}
	565	[318]	SETTABLE 	R50 K113 K141 ; R50["W"] := 32.000000
	566	[318]	SETTABLE 	R50 K115 K141 ; R50["H"] := 32.000000
	567	[318]	SETTABLE 	R49 K112 R50 ; R49["IconDims"] := R50
	568	[319]	NEWTABLE 	R50 0 2 ; R50 := {}
	569	[321]	NEWTABLE 	R51 0 2 ; R51 := {}
	570	[321]	SETTABLE 	R51 K108 K116 ; R51["X"] := 0.000000
	571	[321]	SETTABLE 	R51 K110 K144 ; R51["Y"] := -2.000000
	572	[321]	SETTABLE 	R50 K107 R51 ; R50["IconPos"] := R51
	573	[322]	NEWTABLE 	R51 0 2 ; R51 := {}
	574	[322]	SETTABLE 	R51 K113 K141 ; R51["W"] := 32.000000
	575	[322]	SETTABLE 	R51 K115 K141 ; R51["H"] := 32.000000
	576	[322]	SETTABLE 	R50 K112 R51 ; R50["IconDims"] := R51
	577	[323]	NEWTABLE 	R51 0 2 ; R51 := {}
	578	[325]	NEWTABLE 	R52 0 2 ; R52 := {}
	579	[325]	SETTABLE 	R52 K108 K116 ; R52["X"] := 0.000000
	580	[325]	SETTABLE 	R52 K110 K144 ; R52["Y"] := -2.000000
	581	[325]	SETTABLE 	R51 K107 R52 ; R51["IconPos"] := R52
	582	[326]	NEWTABLE 	R52 0 2 ; R52 := {}
	583	[326]	SETTABLE 	R52 K113 K141 ; R52["W"] := 32.000000
	584	[326]	SETTABLE 	R52 K115 K141 ; R52["H"] := 32.000000
	585	[326]	SETTABLE 	R51 K112 R52 ; R51["IconDims"] := R52
	586	[327]	NEWTABLE 	R52 0 2 ; R52 := {}
	587	[329]	NEWTABLE 	R53 0 2 ; R53 := {}
	588	[329]	SETTABLE 	R53 K108 K116 ; R53["X"] := 0.000000
	589	[329]	SETTABLE 	R53 K110 K116 ; R53["Y"] := 0.000000
	590	[329]	SETTABLE 	R52 K107 R53 ; R52["IconPos"] := R53
	591	[330]	NEWTABLE 	R53 0 2 ; R53 := {}
	592	[330]	SETTABLE 	R53 K113 K136 ; R53["W"] := 40.000000
	593	[330]	SETTABLE 	R53 K115 K46 ; R53["H"] := 25.000000
	594	[330]	SETTABLE 	R52 K112 R53 ; R52["IconDims"] := R53
	595	[331]	NEWTABLE 	R53 0 2 ; R53 := {}
	596	[333]	NEWTABLE 	R54 0 2 ; R54 := {}
	597	[333]	SETTABLE 	R54 K108 K116 ; R54["X"] := 0.000000
	598	[333]	SETTABLE 	R54 K110 K116 ; R54["Y"] := 0.000000
	599	[333]	SETTABLE 	R53 K107 R54 ; R53["IconPos"] := R54
	600	[334]	NEWTABLE 	R54 0 2 ; R54 := {}
	601	[334]	SETTABLE 	R54 K113 K141 ; R54["W"] := 32.000000
	602	[334]	SETTABLE 	R54 K115 K141 ; R54["H"] := 32.000000
	603	[334]	SETTABLE 	R53 K112 R54 ; R53["IconDims"] := R54
	604	[335]	NEWTABLE 	R54 0 2 ; R54 := {}
	605	[337]	NEWTABLE 	R55 0 2 ; R55 := {}
	606	[337]	SETTABLE 	R55 K108 K116 ; R55["X"] := 0.000000
	607	[337]	SETTABLE 	R55 K110 K116 ; R55["Y"] := 0.000000
	608	[337]	SETTABLE 	R54 K107 R55 ; R54["IconPos"] := R55
	609	[338]	NEWTABLE 	R55 0 2 ; R55 := {}
	610	[338]	SETTABLE 	R55 K113 K141 ; R55["W"] := 32.000000
	611	[338]	SETTABLE 	R55 K115 K141 ; R55["H"] := 32.000000
	612	[338]	SETTABLE 	R54 K112 R55 ; R54["IconDims"] := R55
	613	[339]	NEWTABLE 	R55 0 1 ; R55 := {}
	614	[341]	SETTABLE 	R55 K131 K116 ; R55["LabelOffset"] := 0.000000
	615	[342]	NEWTABLE 	R56 0 2 ; R56 := {}
	616	[344]	NEWTABLE 	R57 0 2 ; R57 := {}
	617	[344]	SETTABLE 	R57 K108 K116 ; R57["X"] := 0.000000
	618	[344]	SETTABLE 	R57 K110 K116 ; R57["Y"] := 0.000000
	619	[344]	SETTABLE 	R56 K107 R57 ; R56["IconPos"] := R57
	620	[345]	NEWTABLE 	R57 0 2 ; R57 := {}
	621	[345]	SETTABLE 	R57 K113 K153 ; R57["W"] := 28.000000
	622	[345]	SETTABLE 	R57 K115 K153 ; R57["H"] := 28.000000
	623	[345]	SETTABLE 	R56 K112 R57 ; R56["IconDims"] := R57
	624	[346]	NEWTABLE 	R57 0 4 ; R57 := {}
	625	[348]	NEWTABLE 	R58 0 2 ; R58 := {}
	626	[348]	SETTABLE 	R58 K108 K116 ; R58["X"] := 0.000000
	627	[348]	SETTABLE 	R58 K110 K116 ; R58["Y"] := 0.000000
	628	[348]	SETTABLE 	R57 K107 R58 ; R57["IconPos"] := R58
	629	[349]	NEWTABLE 	R58 0 2 ; R58 := {}
	630	[349]	SETTABLE 	R58 K113 K153 ; R58["W"] := 28.000000
	631	[349]	SETTABLE 	R58 K115 K153 ; R58["H"] := 28.000000
	632	[349]	SETTABLE 	R57 K112 R58 ; R57["IconDims"] := R58
	633	[350]	NEWTABLE 	R58 0 2 ; R58 := {}
	634	[350]	SETTABLE 	R58 K108 K121 ; R58["X"] := 21.000000
	635	[350]	SETTABLE 	R58 K110 K109 ; R58["Y"] := 3.000000
	636	[350]	SETTABLE 	R57 K154 R58 ; R57["IconTextPos"] := R58
	637	[351]	SETTABLE 	R57 K155 K156 ; R57["IconTextColor"] := 9.000000
	638	[352]	NEWTABLE 	R58 0 1 ; R58 := {}
	639	[354]	SETTABLE 	R58 K149 K106 ; R58["ExcludeFromInfoPopup"] := true
	640	[355]	NEWTABLE 	R59 0 4 ; R59 := {}
	641	[357]	SETTABLE 	R59 K131 K158 ; R59["LabelOffset"] := -200.000000
	642	[358]	SETTABLE 	R59 K159 K160 ; R59["LabelAlignment"] := "right"
	643	[359]	SETTABLE 	R59 K161 K162 ; R59["MaxWidth"] := 220.000000
	644	[360]	SETTABLE 	R59 K163 K106 ; R59["MultiLine"] := true
	645	[361]	NEWTABLE 	R60 0 3 ; R60 := {}
	646	[363]	SETTABLE 	R60 K125 K106 ; R60["IconTintLabelColor"] := true
	647	[364]	NEWTABLE 	R61 0 2 ; R61 := {}
	648	[364]	SETTABLE 	R61 K108 K146 ; R61["X"] := 4.000000
	649	[364]	SETTABLE 	R61 K110 K109 ; R61["Y"] := 3.000000
	650	[364]	SETTABLE 	R60 K107 R61 ; R60["IconPos"] := R61
	651	[365]	NEWTABLE 	R61 0 2 ; R61 := {}
	652	[365]	SETTABLE 	R61 K113 K114 ; R61["W"] := 22.000000
	653	[365]	SETTABLE 	R61 K115 K114 ; R61["H"] := 22.000000
	654	[365]	SETTABLE 	R60 K112 R61 ; R60["IconDims"] := R61
	655	[366]	NEWTABLE 	R61 0 4 ; R61 := {}
	656	[368]	SETTABLE 	R61 K125 K106 ; R61["IconTintLabelColor"] := true
	657	[369]	SETTABLE 	R61 K124 K106 ; R61["SkipTitleCase"] := true
	658	[370]	NEWTABLE 	R62 0 2 ; R62 := {}
	659	[370]	SETTABLE 	R62 K108 K146 ; R62["X"] := 4.000000
	660	[370]	SETTABLE 	R62 K110 K109 ; R62["Y"] := 3.000000
	661	[370]	SETTABLE 	R61 K107 R62 ; R61["IconPos"] := R62
	662	[371]	NEWTABLE 	R62 0 2 ; R62 := {}
	663	[371]	SETTABLE 	R62 K113 K114 ; R62["W"] := 22.000000
	664	[371]	SETTABLE 	R62 K115 K114 ; R62["H"] := 22.000000
	665	[371]	SETTABLE 	R61 K112 R62 ; R61["IconDims"] := R62
	666	[372]	NEWTABLE 	R62 0 3 ; R62 := {}
	667	[374]	SETTABLE 	R62 K125 K106 ; R62["IconTintLabelColor"] := true
	668	[375]	NEWTABLE 	R63 0 2 ; R63 := {}
	669	[375]	SETTABLE 	R63 K108 K126 ; R63["X"] := 5.000000
	670	[375]	SETTABLE 	R63 K110 K109 ; R63["Y"] := 3.000000
	671	[375]	SETTABLE 	R62 K107 R63 ; R62["IconPos"] := R63
	672	[376]	NEWTABLE 	R63 0 2 ; R63 := {}
	673	[376]	SETTABLE 	R63 K113 K114 ; R63["W"] := 22.000000
	674	[376]	SETTABLE 	R63 K115 K114 ; R63["H"] := 22.000000
	675	[376]	SETTABLE 	R62 K112 R63 ; R62["IconDims"] := R63
	676	[377]	NEWTABLE 	R63 0 3 ; R63 := {}
	677	[379]	SETTABLE 	R63 K125 K106 ; R63["IconTintLabelColor"] := true
	678	[380]	NEWTABLE 	R64 0 2 ; R64 := {}
	679	[380]	SETTABLE 	R64 K108 K156 ; R64["X"] := 9.000000
	680	[380]	SETTABLE 	R64 K110 K156 ; R64["Y"] := 9.000000
	681	[380]	SETTABLE 	R63 K107 R64 ; R63["IconPos"] := R64
	682	[381]	NEWTABLE 	R64 0 2 ; R64 := {}
	683	[381]	SETTABLE 	R64 K113 K164 ; R64["W"] := 36.000000
	684	[381]	SETTABLE 	R64 K115 K164 ; R64["H"] := 36.000000
	685	[381]	SETTABLE 	R63 K112 R64 ; R63["IconDims"] := R64
	686	[382]	NEWTABLE 	R64 0 2 ; R64 := {}
	687	[384]	SETTABLE 	R64 K129 K165 ; R64["LabelPrefix"] := "<CREW_SHIP_FUSION_POINTS>"
	688	[385]	SETTABLE 	R64 K131 K111 ; R64["LabelOffset"] := 2.000000
	689	[386]	NEWTABLE 	R65 0 2 ; R65 := {}
	690	[388]	SETTABLE 	R65 K129 K166 ; R65["LabelPrefix"] := "<ARCANE_CAN_REPROC>"
	691	[389]	SETTABLE 	R65 K131 K111 ; R65["LabelOffset"] := 2.000000
	692	[390]	NEWTABLE 	R66 0 4 ; R66 := {}
	693	[392]	SETTABLE 	R66 K125 K106 ; R66["IconTintLabelColor"] := true
	694	[393]	SETTABLE 	R66 K124 K106 ; R66["SkipTitleCase"] := true
	695	[394]	NEWTABLE 	R67 0 2 ; R67 := {}
	696	[394]	SETTABLE 	R67 K108 K146 ; R67["X"] := 4.000000
	697	[394]	SETTABLE 	R67 K110 K109 ; R67["Y"] := 3.000000
	698	[394]	SETTABLE 	R66 K107 R67 ; R66["IconPos"] := R67
	699	[395]	NEWTABLE 	R67 0 2 ; R67 := {}
	700	[395]	SETTABLE 	R67 K113 K114 ; R67["W"] := 22.000000
	701	[395]	SETTABLE 	R67 K115 K114 ; R67["H"] := 22.000000
	702	[395]	SETTABLE 	R66 K112 R67 ; R66["IconDims"] := R67
	703	[396]	NEWTABLE 	R67 0 3 ; R67 := {}
	704	[398]	NEWTABLE 	R68 0 2 ; R68 := {}
	705	[398]	SETTABLE 	R68 K108 K109 ; R68["X"] := 3.000000
	706	[398]	SETTABLE 	R68 K110 K117 ; R68["Y"] := 1.000000
	707	[398]	SETTABLE 	R67 K107 R68 ; R67["IconPos"] := R68
	708	[399]	NEWTABLE 	R68 0 2 ; R68 := {}
	709	[399]	SETTABLE 	R68 K113 K127 ; R68["W"] := 24.000000
	710	[399]	SETTABLE 	R68 K115 K127 ; R68["H"] := 24.000000
	711	[399]	SETTABLE 	R67 K112 R68 ; R67["IconDims"] := R68
	712	[400]	SETTABLE 	R67 K125 K106 ; R67["IconTintLabelColor"] := true
	713	[401]	NEWTABLE 	R68 0 5 ; R68 := {}
	714	[403]	SETTABLE 	R68 K167 K106 ; R68["RightAlign"] := true
	715	[404]	NEWTABLE 	R69 0 2 ; R69 := {}
	716	[404]	SETTABLE 	R69 K113 K127 ; R69["W"] := 24.000000
	717	[404]	SETTABLE 	R69 K115 K127 ; R69["H"] := 24.000000
	718	[404]	SETTABLE 	R68 K112 R69 ; R68["IconDims"] := R69
	719	[405]	SETTABLE 	R68 K125 K106 ; R68["IconTintLabelColor"] := true
	720	[406]	SETTABLE 	R68 K168 K106 ; R68["mShowItemPrice"] := true
	721	[407]	NEWTABLE 	R69 0 2 ; R69 := {}
	722	[407]	SETTABLE 	R69 K108 K144 ; R69["X"] := -2.000000
	723	[407]	SETTABLE 	R69 K110 K111 ; R69["Y"] := 2.000000
	724	[407]	SETTABLE 	R68 K107 R69 ; R68["IconPos"] := R69
	725	[408]	NEWTABLE 	R69 0 4 ; R69 := {}
	726	[410]	SETTABLE 	R69 K167 K106 ; R69["RightAlign"] := true
	727	[411]	NEWTABLE 	R70 0 2 ; R70 := {}
	728	[411]	SETTABLE 	R70 K113 K164 ; R70["W"] := 36.000000
	729	[411]	SETTABLE 	R70 K115 K164 ; R70["H"] := 36.000000
	730	[411]	SETTABLE 	R69 K112 R70 ; R69["IconDims"] := R70
	731	[412]	SETTABLE 	R69 K125 K106 ; R69["IconTintLabelColor"] := true
	732	[413]	NEWTABLE 	R70 0 2 ; R70 := {}
	733	[413]	SETTABLE 	R70 K108 K144 ; R70["X"] := -2.000000
	734	[413]	SETTABLE 	R70 K110 K169 ; R70["Y"] := -4.000000
	735	[413]	SETTABLE 	R69 K107 R70 ; R69["IconPos"] := R70
	736	[414]	NEWTABLE 	R70 0 2 ; R70 := {}
	737	[416]	SETTABLE 	R70 K129 K170 ; R70["LabelPrefix"] := "<IN_PROGRESS>"
	738	[417]	SETTABLE 	R70 K131 K111 ; R70["LabelOffset"] := 2.000000
	739	[418]	NEWTABLE 	R71 0 9 ; R71 := {}
	740	[420]	SETTABLE 	R71 K124 K106 ; R71["SkipTitleCase"] := true
	741	[421]	SETTABLE 	R71 K167 K106 ; R71["RightAlign"] := true
	742	[422]	NEWTABLE 	R72 0 2 ; R72 := {}
	743	[422]	SETTABLE 	R72 K113 K127 ; R72["W"] := 24.000000
	744	[422]	SETTABLE 	R72 K115 K127 ; R72["H"] := 24.000000
	745	[422]	SETTABLE 	R71 K112 R72 ; R71["IconDims"] := R72
	746	[423]	NEWTABLE 	R72 0 2 ; R72 := {}
	747	[423]	SETTABLE 	R72 K108 K116 ; R72["X"] := 0.000000
	748	[423]	SETTABLE 	R72 K110 K111 ; R72["Y"] := 2.000000
	749	[423]	SETTABLE 	R71 K107 R72 ; R71["IconPos"] := R72
	750	[424]	NEWTABLE 	R72 0 2 ; R72 := {}
	751	[424]	SETTABLE 	R72 K108 K169 ; R72["X"] := -4.000000
	752	[424]	SETTABLE 	R72 K110 K111 ; R72["Y"] := 2.000000
	753	[424]	SETTABLE 	R71 K118 R72 ; R71["GridIconPos"] := R72
	754	[425]	SETTABLE 	R71 K171 K172 ; R71["BgOffset"] := -8.000000
	755	[426]	SETTABLE 	R71 K173 K174 ; R71["BgWidth"] := 31.000000
	756	[427]	SETTABLE 	R71 K145 K111 ; R71["GridBgHeightOffset"] := 2.000000
	757	[428]	SETTABLE 	R71 K175 K176 ; R71["PopUpLabel"] := "/Lotus/Language/Menu/Store_Tennogen"
	758	[430]	SETLIST  	R21 50 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 50
	759	[464]	CLOSURE  	R22 0 ; R22 := closure(Function #1)
	760	[432]	SETGLOBAL	R22 K177 ; HandleHudScale := R22
	761	[488]	CLOSURE  	R22 1 ; R22 := closure(Function #2)
	762	[488]	MOVE     	R0 R0 ; R0 := R0
	763	[466]	SETGLOBAL	R22 K178 ; GetCraftingPostErrorMessage := R22
	764	[513]	CLOSURE  	R22 2 ; R22 := closure(Function #3)
	765	[513]	MOVE     	R0 R2 ; R0 := R2
	766	[490]	SETGLOBAL	R22 K179 ; PlayTransmission := R22
	767	[527]	CLOSURE  	R22 3 ; R22 := closure(Function #4)
	768	[535]	CLOSURE  	R23 4 ; R23 := closure(Function #5)
	769	[535]	MOVE     	R0 R22 ; R0 := R22
	770	[543]	CLOSURE  	R24 5 ; R24 := closure(Function #6)
	771	[543]	MOVE     	R0 R23 ; R0 := R23
	772	[543]	MOVE     	R0 R7 ; R0 := R7
	773	[543]	MOVE     	R0 R6 ; R0 := R6
	774	[537]	SETGLOBAL	R24 K180 ; UpdateMaskingMaterial := R24
	775	[615]	CLOSURE  	R24 6 ; R24 := closure(Function #7)
	776	[545]	SETGLOBAL	R24 K181 ; StreamVignette := R24
	777	[641]	CLOSURE  	R24 7 ; R24 := closure(Function #8)
	778	[617]	SETGLOBAL	R24 K182 ; GetFishDeco := R24
	779	[660]	CLOSURE  	R24 8 ; R24 := closure(Function #9)
	780	[660]	MOVE     	R0 R0 ; R0 := R0
	781	[643]	SETGLOBAL	R24 K183 ; SetFishScale := R24
	782	[669]	CLOSURE  	R24 9 ; R24 := closure(Function #10)
	783	[662]	SETGLOBAL	R24 K184 ; SetQuartersWallpaper := R24
	784	[690]	CLOSURE  	R24 10 ; R24 := closure(Function #11)
	785	[698]	CLOSURE  	R25 11 ; R25 := closure(Function #12)
	786	[698]	MOVE     	R0 R24 ; R0 := R24
	787	[692]	SETGLOBAL	R25 K185 ; RestoreGridModMaterials := R25
	788	[719]	CLOSURE  	R25 12 ; R25 := closure(Function #13)
	789	[719]	MOVE     	R0 R24 ; R0 := R24
	790	[700]	SETGLOBAL	R25 K186 ; ClearGridModMaterials := R25
	791	[792]	CLOSURE  	R25 13 ; R25 := closure(Function #14)
	792	[792]	MOVE     	R0 R0 ; R0 := R0
	793	[722]	SETGLOBAL	R25 K187 ; GetPopupCoords := R25
	794	[815]	CLOSURE  	R25 14 ; R25 := closure(Function #15)
	795	[815]	MOVE     	R0 R21 ; R0 := R21
	796	[819]	CLOSURE  	R26 15 ; R26 := closure(Function #16)
	797	[819]	MOVE     	R0 R25 ; R0 := R25
	798	[817]	SETGLOBAL	R26 K188 ; GetInfoForLabel := R26
	799	[1037]	CLOSURE  	R26 16 ; R26 := closure(Function #17)
	800	[1037]	MOVE     	R0 R0 ; R0 := R0
	801	[1037]	MOVE     	R0 R3 ; R0 := R3
	802	[1041]	CLOSURE  	R27 17 ; R27 := closure(Function #18)
	803	[1041]	MOVE     	R0 R26 ; R0 := R26
	804	[1039]	SETGLOBAL	R27 K189 ; DrawPriceLabel := R27
	805	[1054]	CLOSURE  	R27 18 ; R27 := closure(Function #19)
	806	[1058]	CLOSURE  	R28 19 ; R28 := closure(Function #20)
	807	[1058]	MOVE     	R0 R27 ; R0 := R27
	808	[1056]	SETGLOBAL	R28 K190 ; GetPriceLabelClip := R28
	809	[1077]	CLOSURE  	R28 20 ; R28 := closure(Function #21)
	810	[1077]	MOVE     	R0 R0 ; R0 := R0
	811	[1081]	CLOSURE  	R29 21 ; R29 := closure(Function #22)
	812	[1081]	MOVE     	R0 R28 ; R0 := R28
	813	[1079]	SETGLOBAL	R29 K191 ; SetItemInfoPopupRect := R29
	814	[1100]	CLOSURE  	R29 22 ; R29 := closure(Function #23)
	815	[1100]	MOVE     	R0 R28 ; R0 := R28
	816	[1104]	CLOSURE  	R30 23 ; R30 := closure(Function #24)
	817	[1104]	MOVE     	R0 R29 ; R0 := R29
	818	[1102]	SETGLOBAL	R30 K192 ; ShowInfoPopupTip := R30
	819	[1106]	LOADNIL  	R30 R30 ; R30 := nil
	820	[1129]	CLOSURE  	R30 24 ; R30 := closure(Function #25)
	821	[1129]	MOVE     	R0 R30 ; R0 := R30
	822	[1293]	CLOSURE  	R31 25 ; R31 := closure(Function #26)
	823	[1293]	MOVE     	R0 R0 ; R0 := R0
	824	[1293]	MOVE     	R0 R1 ; R0 := R1
	825	[1293]	MOVE     	R0 R2 ; R0 := R2
	826	[1293]	MOVE     	R0 R5 ; R0 := R5
	827	[1293]	MOVE     	R0 R30 ; R0 := R30
	828	[1293]	MOVE     	R0 R28 ; R0 := R28
	829	[1293]	MOVE     	R0 R20 ; R0 := R20
	830	[1297]	CLOSURE  	R32 26 ; R32 := closure(Function #27)
	831	[1297]	MOVE     	R0 R31 ; R0 := R31
	832	[1295]	SETGLOBAL	R32 K193 ; OnGridItemFocusChanged := R32
	833	[1318]	CLOSURE  	R32 27 ; R32 := closure(Function #28)
	834	[1318]	MOVE     	R0 R0 ; R0 := R0
	835	[1322]	CLOSURE  	R33 28 ; R33 := closure(Function #29)
	836	[1322]	MOVE     	R0 R32 ; R0 := R32
	837	[1320]	SETGLOBAL	R33 K194 ; FitGridToWidth := R33
	838	[1343]	CLOSURE  	R33 29 ; R33 := closure(Function #30)
	839	[1343]	MOVE     	R0 R0 ; R0 := R0
	840	[1367]	CLOSURE  	R34 30 ; R34 := closure(Function #31)
	841	[1367]	MOVE     	R0 R32 ; R0 := R32
	842	[1367]	MOVE     	R0 R33 ; R0 := R33
	843	[1345]	SETGLOBAL	R34 K195 ; ResizeGrid := R34
	844	[1390]	CLOSURE  	R34 31 ; R34 := closure(Function #32)
	845	[1390]	MOVE     	R0 R0 ; R0 := R0
	846	[1370]	SETGLOBAL	R34 K196 ; InitializeGridItem := R34
	847	[1476]	CLOSURE  	R34 32 ; R34 := closure(Function #33)
	848	[1476]	MOVE     	R0 R18 ; R0 := R18
	849	[1476]	MOVE     	R0 R0 ; R0 := R0
	850	[1392]	SETGLOBAL	R34 K197 ; OnGridItemCreated := R34
	851	[1500]	CLOSURE  	R34 33 ; R34 := closure(Function #34)
	852	[1504]	CLOSURE  	R35 34 ; R35 := closure(Function #35)
	853	[1504]	MOVE     	R0 R34 ; R0 := R34
	854	[1502]	SETGLOBAL	R35 K198 ; GetArcaneRankString := R35
	855	[1579]	CLOSURE  	R35 35 ; R35 := closure(Function #36)
	856	[1579]	MOVE     	R0 R2 ; R0 := R2
	857	[1579]	MOVE     	R0 R13 ; R0 := R13
	858	[1579]	MOVE     	R0 R14 ; R0 := R14
	859	[1579]	MOVE     	R0 R34 ; R0 := R34
	860	[1579]	MOVE     	R0 R0 ; R0 := R0
	861	[1583]	CLOSURE  	R36 36 ; R36 := closure(Function #37)
	862	[1583]	MOVE     	R0 R35 ; R0 := R35
	863	[1581]	SETGLOBAL	R36 K199 ; GetGridItemName := R36
	864	[1595]	CLOSURE  	R36 37 ; R36 := closure(Function #38)
	865	[1595]	MOVE     	R0 R0 ; R0 := R0
	866	[1620]	CLOSURE  	R37 38 ; R37 := closure(Function #39)
	867	[1620]	MOVE     	R0 R25 ; R0 := R25
	868	[1624]	CLOSURE  	R38 39 ; R38 := closure(Function #40)
	869	[1624]	MOVE     	R0 R37 ; R0 := R37
	870	[1622]	SETGLOBAL	R38 K200 ; GetArcaneTagInfo := R38
	871	[2330]	CLOSURE  	R38 40 ; R38 := closure(Function #41)
	872	[2330]	MOVE     	R0 R12 ; R0 := R12
	873	[2330]	MOVE     	R0 R5 ; R0 := R5
	874	[2330]	MOVE     	R0 R15 ; R0 := R15
	875	[2330]	MOVE     	R0 R0 ; R0 := R0
	876	[2330]	MOVE     	R0 R25 ; R0 := R25
	877	[2330]	MOVE     	R0 R36 ; R0 := R36
	878	[2330]	MOVE     	R0 R2 ; R0 := R2
	879	[2330]	MOVE     	R0 R37 ; R0 := R37
	880	[2330]	MOVE     	R0 R8 ; R0 := R8
	881	[2330]	MOVE     	R0 R9 ; R0 := R9
	882	[2334]	CLOSURE  	R39 41 ; R39 := closure(Function #42)
	883	[2334]	MOVE     	R0 R38 ; R0 := R38
	884	[2332]	SETGLOBAL	R39 K201 ; GetGridItemTags := R39
	885	[2338]	CLOSURE  	R39 42 ; R39 := closure(Function #43)
	886	[2338]	MOVE     	R0 R20 ; R0 := R20
	887	[2336]	SETGLOBAL	R39 K202 ; IsGridLabelType := R39
	888	[2697]	CLOSURE  	R39 43 ; R39 := closure(Function #44)
	889	[2697]	MOVE     	R0 R35 ; R0 := R35
	890	[2697]	MOVE     	R0 R38 ; R0 := R38
	891	[2697]	MOVE     	R0 R20 ; R0 := R20
	892	[2697]	MOVE     	R0 R27 ; R0 := R27
	893	[2697]	MOVE     	R0 R26 ; R0 := R26
	894	[2697]	MOVE     	R0 R1 ; R0 := R1
	895	[2697]	MOVE     	R0 R10 ; R0 := R10
	896	[2697]	MOVE     	R0 R11 ; R0 := R11
	897	[2697]	MOVE     	R0 R0 ; R0 := R0
	898	[2697]	MOVE     	R0 R31 ; R0 := R31
	899	[2340]	SETGLOBAL	R39 K203 ; DrawGridItem := R39
	900	[2771]	CLOSURE  	R39 44 ; R39 := closure(Function #45)
	901	[2771]	MOVE     	R0 R3 ; R0 := R3
	902	[2699]	SETGLOBAL	R39 K204 ; SetupLoginLighting := R39
	903	[2790]	CLOSURE  	R39 45 ; R39 := closure(Function #46)
	904	[2794]	CLOSURE  	R40 46 ; R40 := closure(Function #47)
	905	[2794]	MOVE     	R0 R39 ; R0 := R39
	906	[2792]	SETGLOBAL	R40 K205 ; DrawSeparator := R40
	907	[2824]	CLOSURE  	R40 47 ; R40 := closure(Function #48)
	908	[2824]	MOVE     	R0 R40 ; R0 := R40
	909	[2828]	CLOSURE  	R41 48 ; R41 := closure(Function #49)
	910	[2828]	MOVE     	R0 R40 ; R0 := R40
	911	[2826]	SETGLOBAL	R41 K206 ; PulseColor := R41
	912	[2885]	CLOSURE  	R41 49 ; R41 := closure(Function #50)
	913	[2885]	MOVE     	R0 R0 ; R0 := R0
	914	[2885]	MOVE     	R0 R3 ; R0 := R3
	915	[2885]	MOVE     	R0 R5 ; R0 := R5
	916	[2885]	MOVE     	R0 R4 ; R0 := R4
	917	[2830]	SETGLOBAL	R41 K207 ; GetItemInfoDesc := R41
	918	[2887]	NEWTABLE 	R41 3 0 ; R41 := {}
	919	[2887]	NEWTABLE 	R42 2 0 ; R42 := {}
	920	[2887]	LOADK    	R43 K208 ; R43 := 2047.000000
	921	[2887]	LOADK    	R44 := 192.000000
	922	[2887]	SETLIST  	R42 2 1 ; R42[(1-1)*FPF+i] := R(42+i), 1 <= i <= 2
	923	[2887]	NEWTABLE 	R43 2 0 ; R43 := {}
	924	[2887]	LOADK    	R44 K209 ; R44 := 65535.000000
	925	[2887]	LOADK    	R45 := 224.000000
	926	[2887]	SETLIST  	R43 2 1 ; R43[(1-1)*FPF+i] := R(43+i), 1 <= i <= 2
	927	[2887]	NEWTABLE 	R44 2 0 ; R44 := {}
	928	[2887]	LOADK    	R45 K210 ; R45 := 2097151.000000
	929	[2887]	LOADK    	R46 := 240.000000
	930	[2887]	SETLIST  	R44 2 1 ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 2
	931	[2887]	SETLIST  	R41 3 1 ; R41[(1-1)*FPF+i] := R(41+i), 1 <= i <= 3
	932	[2906]	CLOSURE  	R42 50 ; R42 := closure(Function #51)
	933	[2906]	MOVE     	R0 R41 ; R0 := R41
	934	[2910]	CLOSURE  	R43 51 ; R43 := closure(Function #52)
	935	[2910]	MOVE     	R0 R42 ; R0 := R42
	936	[2908]	SETGLOBAL	R43 K211 ; UTF8 := R43
	937	[2919]	CLOSURE  	R43 52 ; R43 := closure(Function #53)
	938	[2912]	SETGLOBAL	R43 K212 ; OnHyperlinkPressed := R43
	939	[2946]	CLOSURE  	R43 53 ; R43 := closure(Function #54)
	940	[2921]	SETGLOBAL	R43 K213 ; ScaleTextToFit := R43
	941	[2966]	CLOSURE  	R43 54 ; R43 := closure(Function #55)
	942	[2989]	CLOSURE  	R44 55 ; R44 := closure(Function #56)
	943	[2968]	SETGLOBAL	R44 K214 ; UpdateRarityBar := R44
	944	[3101]	CLOSURE  	R44 56 ; R44 := closure(Function #57)
	945	[3101]	MOVE     	R0 R43 ; R0 := R43
	946	[2991]	SETGLOBAL	R44 K215 ; DrawRarityBar := R44
	947	[3123]	CLOSURE  	R44 57 ; R44 := closure(Function #58)
	948	[3123]	MOVE     	R0 R16 ; R0 := R16
	949	[3103]	SETGLOBAL	R44 K216 ; ToggleScreensToHide := R44
	950	[3140]	CLOSURE  	R44 58 ; R44 := closure(Function #59)
	951	[3125]	SETGLOBAL	R44 K217 ; SliceLichIcon := R44
	952	[3150]	CLOSURE  	R44 59 ; R44 := closure(Function #60)
	953	[3420]	CLOSURE  	R45 60 ; R45 := closure(Function #61)
	954	[3420]	MOVE     	R0 R39 ; R0 := R39
	955	[3420]	MOVE     	R0 R0 ; R0 := R0
	956	[3420]	MOVE     	R0 R1 ; R0 := R1
	957	[3420]	MOVE     	R0 R19 ; R0 := R19
	958	[3420]	MOVE     	R0 R28 ; R0 := R28
	959	[3152]	SETGLOBAL	R45 K218 ; InitializeNemesisAttemptInfo := R45
	960	[3449]	CLOSURE  	R45 61 ; R45 := closure(Function #62)
	961	[3449]	MOVE     	R0 R0 ; R0 := R0
	962	[3449]	MOVE     	R0 R2 ; R0 := R2
	963	[3422]	SETGLOBAL	R45 K219 ; GetInnateDamageName := R45
	964	[3464]	CLOSURE  	R45 62 ; R45 := closure(Function #63)
	965	[3451]	SETGLOBAL	R45 K220 ; OnMuseumStreamed := R45
	966	[3477]	CLOSURE  	R45 63 ; R45 := closure(Function #64)
	967	[3466]	SETGLOBAL	R45 K221 ; StreamMuseum := R45
	968	[3484]	CLOSURE  	R45 64 ; R45 := closure(Function #65)
	969	[3515]	CLOSURE  	R46 65 ; R46 := closure(Function #66)
	970	[3515]	MOVE     	R0 R45 ; R0 := R45
	971	[3519]	CLOSURE  	R47 66 ; R47 := closure(Function #67)
	972	[3519]	MOVE     	R0 R46 ; R0 := R46
	973	[3517]	SETGLOBAL	R47 K222 ; GetTips := R47
	974	[3523]	CLOSURE  	R47 67 ; R47 := closure(Function #68)
	975	[3523]	MOVE     	R0 R46 ; R0 := R46
	976	[3521]	SETGLOBAL	R47 K223 ; AppendTips := R47
	977	[3544]	CLOSURE  	R47 68 ; R47 := closure(Function #69)
	978	[3525]	SETGLOBAL	R47 K224 ; ResetModVisibleRangeMaterials := R47
	979	[3548]	CLOSURE  	R47 69 ; R47 := closure(Function #70)
	980	[3548]	MOVE     	R0 R17 ; R0 := R17
	981	[3546]	SETGLOBAL	R47 K225 ; IsGreyscale := R47
	982	[3560]	CLOSURE  	R47 70 ; R47 := closure(Function #71)
	983	[3550]	SETGLOBAL	R47 K226 ; SetChatVisible := R47
	984	[3598]	CLOSURE  	R47 71 ; R47 := closure(Function #72)
	985	[3562]	SETGLOBAL	R47 K227 ; AdjustDualWieldComponent := R47
	986	[3941]	CLOSURE  	R47 72 ; R47 := closure(Function #73)
	987	[3941]	MOVE     	R0 R2 ; R0 := R2
	988	[3941]	MOVE     	R0 R0 ; R0 := R0
	989	[3941]	MOVE     	R0 R5 ; R0 := R5
	990	[3941]	MOVE     	R0 R25 ; R0 := R25
	991	[3600]	SETGLOBAL	R47 K228 ; ProfileIconSelect := R47
	992	[3952]	CLOSURE  	R47 73 ; R47 := closure(Function #74)
	993	[3943]	SETGLOBAL	R47 K229 ; GetBuildLabel := R47
	994	[3952]	RETURN   	R0 1 ; return 


function #1 <?:432,464> (95 instructions, 380 bytes at 000002116318A4C0)
4 params, 21 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[433]	SELF     	R4 R0 K0 ; R5 := R0; R4 := R0[0x6b837788]
	2	[433]	CALL     	R4 2 2 ; R4 := R4(R5)
	3	[434]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xaf9fda9f]
	4	[434]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[435]	SELF     	R6 R0 K2 ; R7 := R0; R6 := R0[0x091c120e]
	6	[435]	CALL     	R6 2 2 ; R6 := R6(R7)
	7	[435]	LT       	1 R4 R6 ; if R4 < R6 then PC := 18
	8	[435]	JMP      	18 ; PC := 18
	9	[435]	SELF     	R6 R0 K3 ; R7 := R0; R6 := R0[0x2cc9d281]
	10	[435]	CALL     	R6 2 2 ; R6 := R6(R7)
	11	[435]	LT       	1 R5 R6 ; if R5 < R6 then PC := 18
	12	[435]	JMP      	18 ; PC := 18
	13	[435]	GETGLOBAL	R6 K4 ; R6 := 0x34291f5c
	14	[435]	GETTABLE 	R6 R6 K5 ; R6 := R6[0x056bfe8b]
	15	[435]	CALL     	R6 1 2 ; R6 := R6()
	16	[435]	TEST     	R6 0 ; if not R6 then PC := 24
	17	[435]	JMP      	24 ; PC := 24
	18	[436]	SELF     	R6 R0 K2 ; R7 := R0; R6 := R0[0x091c120e]
	19	[436]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[436]	MOVE     	R4 R6 ; R4 := R6
	21	[437]	SELF     	R6 R0 K3 ; R7 := R0; R6 := R0[0x2cc9d281]
	22	[437]	CALL     	R6 2 2 ; R6 := R6(R7)
	23	[437]	MOVE     	R5 R6 ; R5 := R6
	24	[440]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	25	[440]	LOADK    	R8 K7 ; R8 := "_root"
	26	[440]	LOADK    	R9 := 5.000000
	27	[440]	MUL      	R10 R1 K8 ; R10 := R1 * 100.000000
	28	[440]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	29	[441]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	30	[441]	LOADK    	R8 K7 ; R8 := "_root"
	31	[441]	LOADK    	R9 := 6.000000
	32	[441]	MUL      	R10 R1 K8 ; R10 := R1 * 100.000000
	33	[441]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	34	[442]	SUB      	R6 R1 K9 ; R6 := R1 - 1.000000
	35	[442]	MUL      	R6 R6 R4 ; R6 := R6 * R4
	36	[442]	DIV      	R6 R6 K10 ; R6 := R6 / 2.000000
	37	[443]	SUB      	R7 R1 K9 ; R7 := R1 - 1.000000
	38	[443]	MUL      	R7 R7 R5 ; R7 := R7 * R5
	39	[443]	DIV      	R7 R7 K10 ; R7 := R7 / 2.000000
	40	[444]	SELF     	R8 R0 K6 ; R9 := R0; R8 := R0[0x67bc869f]
	41	[444]	LOADK    	R10 K7 ; R10 := "_root"
	42	[444]	LOADK    	R11 := 0.000000
	43	[444]	UNM      	R12 R6 ; R12 := ^ R6
	44	[444]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	45	[445]	SELF     	R8 R0 K6 ; R9 := R0; R8 := R0[0x67bc869f]
	46	[445]	LOADK    	R10 K7 ; R10 := "_root"
	47	[445]	LOADK    	R11 := 1.000000
	48	[445]	UNM      	R12 R7 ; R12 := ^ R7
	49	[445]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	50	[447]	NEWTABLE 	R8 2 0 ; R8 := {}
	51	[447]	LOADK    	R9 := 0.000000
	52	[447]	LOADK    	R10 := 0.000000
	53	[447]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	54	[448]	NEWTABLE 	R9 2 0 ; R9 := {}
	55	[448]	DIV      	R10 R6 R1 ; R10 := R6 / R1
	56	[448]	DIV      	R11 R7 R1 ; R11 := R7 / R1
	57	[448]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	58	[448]	MOVE     	R8 R9 ; R8 := R9
	59	[450]	GETGLOBAL	R9 K11 ; R9 := 0x7b998233
	60	[450]	MOVE     	R10 R3 ; R10 := R3
	61	[450]	CALL     	R9 2 2 ; R9 := R9(R10)
	62	[450]	TEST     	R9 1 ; if R9 then PC := 82
	63	[450]	JMP      	82 ; PC := 82
	64	[451]	DIV      	R9 K9 R1 ; R9 := 1.000000 / R1
	65	[451]	MUL      	R9 R9 K8 ; R9 := R9 * 100.000000
	66	[452]	GETGLOBAL	R10 K12 ; R10 := 0xc8802016
	67	[452]	MOVE     	R11 R3 ; R11 := R3
	68	[452]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	69	[452]	JMP      	80 ; PC := 80
	70	[453]	SELF     	R15 R0 K6 ; R16 := R0; R15 := R0[0x67bc869f]
	71	[453]	MOVE     	R17 R14 ; R17 := R14
	72	[453]	LOADK    	R18 := 5.000000
	73	[453]	MOVE     	R19 R9 ; R19 := R9
	74	[453]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	75	[454]	SELF     	R15 R0 K6 ; R16 := R0; R15 := R0[0x67bc869f]
	76	[454]	MOVE     	R17 R14 ; R17 := R14
	77	[454]	LOADK    	R18 := 6.000000
	78	[454]	MOVE     	R19 R9 ; R19 := R9
	79	[454]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	80	[452]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 70; R12 := R13 end
	81	[454]	JMP      	70 ; PC := 70
	82	[458]	GETGLOBAL	R15 K11 ; R15 := 0x7b998233
	83	[458]	MOVE     	R16 R2 ; R16 := R2
	84	[458]	CALL     	R15 2 2 ; R15 := R15(R16)
	85	[458]	TEST     	R15 1 ; if R15 then PC := 94
	86	[458]	JMP      	94 ; PC := 94
	87	[459]	SETTABLE 	R2 K13 R8 ; R2["mHudScalePadding"] := R8
	88	[460]	SELF     	R15 R2 K14 ; R16 := R2; R15 := R2[0xfaa69527]
	89	[460]	MOVE     	R17 R4 ; R17 := R4
	90	[460]	MOVE     	R18 R5 ; R18 := R5
	91	[460]	OP_LOADBOOL	R19 1 0 ; R19 := true
	92	[460]	MOVE     	R20 R8 ; R20 := R8
	93	[460]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	94	[463]	RETURN   	R8 2 ; return R8 
	95	[464]	RETURN   	R0 1 ; return 

function #2 <?:466,488> (68 instructions, 272 bytes at 000002116318A590)
1 param, 6 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[467]	GETGLOBAL	R1 K0 ; R1 := 0x603636ad
	2	[467]	LOADK    	R2 K1 ; R2 := "/Lotus/Language/Menu/CraftingErrorText_UnknownError"
	3	[467]	OP_LOADBOOL	R3 0 0 ; R3 := false
	4	[467]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[468]	GETGLOBAL	R2 K2 ; R2 := 0x03f57322
	6	[468]	MOVE     	R3 R0 ; R3 := R0
	7	[468]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[469]	EQ       	1 R2 K3 ; if R2 == nil then PC := 56
	9	[469]	JMP      	56 ; PC := 56
	10	[470]	EQ       	0 R2 K4 ; if R2 ~= 5.000000 then PC := 18
	11	[470]	JMP      	18 ; PC := 18
	12	[471]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	13	[471]	LOADK    	R4 K5 ; R4 := "/Lotus/Language/Menu/CraftingErrorText_InsufficientSpace"
	14	[471]	OP_LOADBOOL	R5 0 0 ; R5 := false
	15	[471]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	16	[471]	MOVE     	R1 R3 ; R1 := R3
	17	[471]	JMP      	67 ; PC := 67
	18	[472]	EQ       	0 R2 K6 ; if R2 ~= 4.000000 then PC := 26
	19	[472]	JMP      	26 ; PC := 26
	20	[473]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	21	[473]	LOADK    	R4 K7 ; R4 := "/Lotus/Language/Menu/CraftingErrorText_InvalidAccount"
	22	[473]	OP_LOADBOOL	R5 0 0 ; R5 := false
	23	[473]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	24	[473]	MOVE     	R1 R3 ; R1 := R3
	25	[473]	JMP      	67 ; PC := 67
	26	[474]	EQ       	0 R2 K8 ; if R2 ~= 3.000000 then PC := 34
	27	[474]	JMP      	34 ; PC := 34
	28	[475]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	29	[475]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/Menu/CraftingErrorText_AuthenticationFailed"
	30	[475]	OP_LOADBOOL	R5 0 0 ; R5 := false
	31	[475]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	32	[475]	MOVE     	R1 R3 ; R1 := R3
	33	[475]	JMP      	67 ; PC := 67
	34	[476]	EQ       	0 R2 K10 ; if R2 ~= 2.000000 then PC := 42
	35	[476]	JMP      	42 ; PC := 42
	36	[477]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	37	[477]	LOADK    	R4 K11 ; R4 := "/Lotus/Language/Menu/CraftingErrorText_InsufficientXP"
	38	[477]	OP_LOADBOOL	R5 0 0 ; R5 := false
	39	[477]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	40	[477]	MOVE     	R1 R3 ; R1 := R3
	41	[477]	JMP      	67 ; PC := 67
	42	[478]	EQ       	0 R2 K12 ; if R2 ~= 1.000000 then PC := 50
	43	[478]	JMP      	50 ; PC := 50
	44	[479]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	45	[479]	LOADK    	R4 K13 ; R4 := "/Lotus/Language/Menu/CraftingErrorText_InsufficientCredits"
	46	[479]	OP_LOADBOOL	R5 0 0 ; R5 := false
	47	[479]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	48	[479]	MOVE     	R1 R3 ; R1 := R3
	49	[479]	JMP      	67 ; PC := 67
	50	[481]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	51	[481]	LOADK    	R4 K1 ; R4 := "/Lotus/Language/Menu/CraftingErrorText_UnknownError"
	52	[481]	OP_LOADBOOL	R5 0 0 ; R5 := false
	53	[481]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	54	[481]	MOVE     	R1 R3 ; R1 := R3
	55	[482]	JMP      	67 ; PC := 67
	56	[483]	GETUPVAL 	R3 U0 ; R3 := U0
	57	[483]	GETTABLE 	R3 R3 K14 ; R3 := R3[0x7b3cf471]
	58	[483]	MOVE     	R4 R0 ; R4 := R0
	59	[483]	CALL     	R3 2 2 ; R3 := R3(R4)
	60	[483]	TEST     	R3 0 ; if not R3 then PC := 67
	61	[483]	JMP      	67 ; PC := 67
	62	[484]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	63	[484]	LOADK    	R4 K15 ; R4 := "/Lotus/Language/Menu/Profile_FailedToConnect"
	64	[484]	OP_LOADBOOL	R5 0 0 ; R5 := false
	65	[484]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	66	[484]	MOVE     	R1 R3 ; R1 := R3
	67	[487]	RETURN   	R1 2 ; return R1 
	68	[488]	RETURN   	R0 1 ; return 

function #3 <?:490,513> (61 instructions, 244 bytes at 000002116318A870)
4 params, 11 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[491]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[491]	MOVE     	R5 R0 ; R5 := R0
	3	[491]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[491]	TEST     	R4 0 ; if not R4 then PC := 7
	5	[491]	JMP      	7 ; PC := 7
	6	[492]	RETURN   	R0 1 ; return 
	7	[495]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x10c9eef2]
	8	[495]	GETGLOBAL	R6 K2 ; R6 := 0x0469f296
	9	[495]	MOVE     	R7 R1 ; R7 := R1
	10	[495]	CALL     	R6 2 0 ; R6,... := R6(R7)
	11	[495]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	12	[496]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	13	[496]	MOVE     	R6 R4 ; R6 := R4
	14	[496]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[496]	TEST     	R5 0 ; if not R5 then PC := 18
	16	[496]	JMP      	18 ; PC := 18
	17	[497]	RETURN   	R0 1 ; return 
	18	[500]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	19	[500]	GETGLOBAL	R6 K3 ; R6 := _T
	20	[500]	GETTABLE 	R6 R6 K4 ; R6 := R6["curTransmission"]
	21	[500]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[500]	TEST     	R5 0 ; if not R5 then PC := 30
	23	[500]	JMP      	30 ; PC := 30
	24	[500]	GETGLOBAL	R5 K3 ; R5 := _T
	25	[500]	GETTABLE 	R5 R5 K5 ; R5 := R5["QueuedTransmissions"]
	26	[500]	LEN      	R5 R5 ; R5 := # R5
	27	[500]	EQ       	0 R5 K6 ; if R5 ~= 0.000000 then PC := 30
	28	[500]	JMP      	30 ; PC := 30
	29	[500]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 30
	30	[500]	OP_LOADBOOL	R5 1 0 ; R5 := true
	31	[501]	TEST     	R2 0 ; if not R2 then PC := 40
	32	[501]	JMP      	40 ; PC := 40
	33	[502]	GETUPVAL 	R6 U0 ; R6 := U0
	34	[502]	GETTABLE 	R6 R6 K7 ; R6 := R6[0xa559eb32]
	35	[502]	CALL     	R6 1 1 ; R6()
	36	[503]	GETUPVAL 	R6 U0 ; R6 := U0
	37	[503]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xfe0d9469]
	38	[503]	CALL     	R6 1 1 ; R6()
	39	[503]	JMP      	45 ; PC := 45
	40	[504]	TEST     	R3 1 ; if R3 then PC := 45
	41	[504]	JMP      	45 ; PC := 45
	42	[504]	TEST     	R5 0 ; if not R5 then PC := 45
	43	[504]	JMP      	45 ; PC := 45
	44	[505]	RETURN   	R0 1 ; return 
	45	[508]	GETGLOBAL	R6 K3 ; R6 := _T
	46	[508]	GETTABLE 	R6 R6 K9 ; R6 := R6["CurrentConversation"]
	47	[508]	TEST     	R6 0 ; if not R6 then PC := 57
	48	[508]	JMP      	57 ; PC := 57
	49	[509]	GETGLOBAL	R6 K3 ; R6 := _T
	50	[509]	GETTABLE 	R6 R6 K9 ; R6 := R6["CurrentConversation"]
	51	[509]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x68d7cbe0]
	52	[509]	MOVE     	R8 R4 ; R8 := R4
	53	[509]	LOADNIL  	R9 R9 ; R9 := nil
	54	[509]	OP_LOADBOOL	R10 0 0 ; R10 := false
	55	[509]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	56	[509]	JMP      	61 ; PC := 61
	57	[511]	GETUPVAL 	R6 U0 ; R6 := U0
	58	[511]	GETTABLE 	R6 R6 K11 ; R6 := R6[0x1f60d532]
	59	[511]	MOVE     	R7 R4 ; R7 := R4
	60	[511]	CALL     	R6 2 1 ; R6(R7)
	61	[513]	RETURN   	R0 1 ; return 

function #4 <?:515,527> (19 instructions, 76 bytes at 000002116318A9D0)
3 params, 8 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[517]	GETTABLE 	R3 R1 K0 ; R3 := R1["x"]
	2	[517]	GETTABLE 	R4 R0 K0 ; R4 := R0["x"]
	3	[517]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	4	[518]	GETTABLE 	R4 R1 K1 ; R4 := R1["y"]
	5	[518]	GETTABLE 	R5 R0 K1 ; R5 := R0["y"]
	6	[518]	SUB      	R4 R4 R5 ; R4 := R4 - R5
	7	[521]	UNM      	R5 R4 ; R5 := ^ R4
	8	[521]	SETTABLE 	R2 K0 R5 ; R2["x"] := R5
	9	[522]	SETTABLE 	R2 K1 R3 ; R2["y"] := R3
	10	[523]	SETTABLE 	R2 K2 K3 ; R2["z"] := 0.000000
	11	[524]	GETGLOBAL	R5 K4 ; R5 := 0xc2892f65
	12	[524]	MOVE     	R6 R2 ; R6 := R2
	13	[524]	CALL     	R5 2 1 ; R5(R6)
	14	[525]	GETGLOBAL	R5 K5 ; R5 := 0x4fd57545
	15	[525]	MOVE     	R6 R2 ; R6 := R2
	16	[525]	MOVE     	R7 R0 ; R7 := R0
	17	[525]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	18	[526]	SETTABLE 	R2 K2 R5 ; R2["z"] := R5
	19	[527]	RETURN   	R0 1 ; return 

function #5 <?:530,535> (21 instructions, 84 bytes at 000002116318AB90)
2 params, 6 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[531]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[531]	GETTABLE 	R3 R0 K0 ; R3 := R0[1.000000]
	3	[531]	GETTABLE 	R4 R0 K1 ; R4 := R0[2.000000]
	4	[531]	GETTABLE 	R5 R1 K0 ; R5 := R1[1.000000]
	5	[531]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[532]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[532]	GETTABLE 	R3 R0 K1 ; R3 := R0[2.000000]
	8	[532]	GETTABLE 	R4 R0 K2 ; R4 := R0[3.000000]
	9	[532]	GETTABLE 	R5 R1 K1 ; R5 := R1[2.000000]
	10	[532]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[533]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[533]	GETTABLE 	R3 R0 K2 ; R3 := R0[3.000000]
	13	[533]	GETTABLE 	R4 R0 K3 ; R4 := R0[4.000000]
	14	[533]	GETTABLE 	R5 R1 K2 ; R5 := R1[3.000000]
	15	[533]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	16	[534]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[534]	GETTABLE 	R3 R0 K3 ; R3 := R0[4.000000]
	18	[534]	GETTABLE 	R4 R0 K0 ; R4 := R0[1.000000]
	19	[534]	GETTABLE 	R5 R1 K3 ; R5 := R1[4.000000]
	20	[534]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	21	[535]	RETURN   	R0 1 ; return 

function #6 <?:537,543> (25 instructions, 100 bytes at 000002116318AD50)
3 params, 14 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[538]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[538]	MOVE     	R4 R1 ; R4 := R1
	3	[538]	GETUPVAL 	R5 U1 ; R5 := U1
	4	[538]	CALL     	R3 3 1 ; R3(R4,R5)
	5	[540]	LOADK    	R3 := 1.000000
	6	[540]	GETUPVAL 	R4 U1 ; R4 := U1
	7	[540]	LEN      	R4 R4 ; R4 := # R4
	8	[540]	LOADK    	R5 := 1.000000
	9	[540]	FORPREP  	R3 24 ; R3 -= R5; PC := 24
	10	[541]	SELF     	R7 R0 K0 ; R8 := R0; R7 := R0[0x830eea67]
	11	[541]	GETUPVAL 	R9 U2 ; R9 := U2
	12	[541]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	13	[541]	GETUPVAL 	R10 U1 ; R10 := U1
	14	[541]	GETTABLE 	R10 R10 R6 ; R10 := R10[R6]
	15	[541]	GETTABLE 	R10 R10 K1 ; R10 := R10["x"]
	16	[541]	GETUPVAL 	R11 U1 ; R11 := U1
	17	[541]	GETTABLE 	R11 R11 R6 ; R11 := R11[R6]
	18	[541]	GETTABLE 	R11 R11 K2 ; R11 := R11["y"]
	19	[541]	GETUPVAL 	R12 U1 ; R12 := U1
	20	[541]	GETTABLE 	R12 R12 R6 ; R12 := R12[R6]
	21	[541]	GETTABLE 	R12 R12 K3 ; R12 := R12["z"]
	22	[541]	LOADK    	R13 := 0.000000
	23	[541]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	24	[540]	FORLOOP  	R3 10 ; R3 += R5; if R3 <= R4 then begin PC := 10; R6 := R3 end
	25	[543]	RETURN   	R0 1 ; return 

function #7 <?:545,615> (166 instructions, 664 bytes at 000002116318AEB0)
3 params, 27 slots, 0 upvalues, 0 locals, 39 constants, 0 functions
	1	[546]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[546]	MOVE     	R4 R0 ; R4 := R0
	3	[546]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[546]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[546]	JMP      	7 ; PC := 7
	6	[547]	RETURN   	R0 1 ; return 
	7	[550]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	8	[550]	GETGLOBAL	R4 K1 ; R4 := _T
	9	[550]	GETTABLE 	R4 R4 K2 ; R4 := R4["QuartersVignette"]
	10	[550]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[550]	TEST     	R3 0 ; if not R3 then PC := 22
	12	[550]	JMP      	22 ; PC := 22
	13	[551]	GETGLOBAL	R3 K1 ; R3 := _T
	14	[551]	NEWTABLE 	R4 0 4 ; R4 := {}
	15	[551]	SETTABLE 	R4 K3 K4 ; R4["Level"] := nil
	16	[551]	GETGLOBAL	R5 K6 ; R5 := PQ_FIRST_LAYER
	17	[551]	SUB      	R5 R5 K7 ; R5 := R5 - 1.000000
	18	[551]	SETTABLE 	R4 K5 R5 ; R4["Layer"] := R5
	19	[551]	SETTABLE 	R4 K8 K9 ; R4["IsStreaming"] := false
	20	[551]	SETTABLE 	R4 K10 K9 ; R4["RemovingOld"] := false
	21	[551]	SETTABLE 	R3 K2 R4 ; R3["QuartersVignette"] := R4
	22	[554]	GETGLOBAL	R3 K1 ; R3 := _T
	23	[554]	GETTABLE 	R3 R3 K2 ; R3 := R3["QuartersVignette"]
	24	[554]	GETTABLE 	R3 R3 K5 ; R3 := R3["Layer"]
	25	[555]	GETGLOBAL	R4 K11 ; R4 := 0x89326c93
	26	[555]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x46a0ebf5]
	27	[555]	GETGLOBAL	R6 K13 ; R6 := 0x0469f296
	28	[555]	LOADK    	R7 K14 ; R7 := "DioramaStreamOffset"
	29	[555]	CALL     	R6 2 0 ; R6,... := R6(R7)
	30	[555]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	31	[556]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	32	[556]	MOVE     	R6 R4 ; R6 := R4
	33	[556]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[556]	TEST     	R5 0 ; if not R5 then PC := 40
	35	[556]	JMP      	40 ; PC := 40
	36	[557]	GETGLOBAL	R5 K15 ; R5 := 0x3d106989
	37	[557]	LOADK    	R6 K16 ; R6 := "Error: Could not find DioramaStreamOffset waypoint, aborting vignette stream."
	38	[557]	CALL     	R5 2 1 ; R5(R6)
	39	[559]	RETURN   	R0 1 ; return 
	40	[562]	GETGLOBAL	R5 K17 ; R5 := 0x34291f5c
	41	[562]	GETTABLE 	R5 R5 K18 ; R5 := R5[0x68d83431]
	42	[562]	CALL     	R5 1 2 ; R5 := R5()
	43	[563]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	44	[563]	MOVE     	R7 R1 ; R7 := R1
	45	[563]	CALL     	R6 2 2 ; R6 := R6(R7)
	46	[563]	TEST     	R6 1 ; if R6 then PC := 71
	47	[563]	JMP      	71 ; PC := 71
	48	[564]	SETTABLE 	R5 K19 R1 ; R5["level"] := R1
	49	[565]	ADD      	R6 R3 K7 ; R6 := R3 + 1.000000
	50	[565]	SETTABLE 	R5 K20 R6 ; R5["streamingLayer"] := R6
	51	[566]	GETTABLE 	R6 R5 K20 ; R6 := R5["streamingLayer"]
	52	[566]	GETGLOBAL	R7 K21 ; R7 := PQ_LAST_LAYER
	53	[566]	LT       	0 R7 R6 ; if R7 >= R6 then PC := 57
	54	[566]	JMP      	57 ; PC := 57
	55	[567]	GETGLOBAL	R6 K6 ; R6 := PQ_FIRST_LAYER
	56	[567]	SETTABLE 	R5 K20 R6 ; R5["streamingLayer"] := R6
	57	[569]	SETTABLE 	R5 K22 K7 ; R5["streamingMode"] := 1.000000
	58	[570]	SELF     	R6 R5 K24 ; R7 := R5; R6 := R5[0x30e5d39d]
	59	[570]	LOADK    	R8 K25 ; R8 := "OnVignetteStreamed"
	60	[570]	CALL     	R6 3 1 ; R6(R7,R8)
	61	[571]	SELF     	R6 R5 K26 ; R7 := R5; R6 := R5[0x691a3b2d]
	62	[571]	SELF     	R8 R4 K27 ; R9 := R4; R8 := R4[0xd1586535]
	63	[571]	CALL     	R8 2 2 ; R8 := R8(R9)
	64	[571]	SELF     	R9 R4 K28 ; R10 := R4; R9 := R4[0xcb3851b8]
	65	[571]	CALL     	R9 2 0 ; R9,... := R9(R10)
	66	[571]	CALL     	R6 0 1 ; R6(R7,...)
	67	[572]	GETGLOBAL	R6 K17 ; R6 := 0x34291f5c
	68	[572]	GETTABLE 	R6 R6 K29 ; R6 := R6[0xa37dca0a]
	69	[572]	MOVE     	R7 R5 ; R7 := R5
	70	[572]	CALL     	R6 2 1 ; R6(R7)
	71	[575]	GETGLOBAL	R6 K1 ; R6 := _T
	72	[575]	GETTABLE 	R6 R6 K2 ; R6 := R6["QuartersVignette"]
	73	[575]	GETTABLE 	R6 R6 K3 ; R6 := R6["Level"]
	74	[575]	EQ       	0 R6 K4 ; if R6 ~= nil then PC := 77
	75	[575]	JMP      	77 ; PC := 77
	76	[575]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 77
	77	[575]	OP_LOADBOOL	R6 1 0 ; R6 := true
	78	[576]	GETGLOBAL	R7 K1 ; R7 := _T
	79	[576]	GETTABLE 	R7 R7 K2 ; R7 := R7["QuartersVignette"]
	80	[576]	SETTABLE 	R7 K10 R6 ; R7["RemovingOld"] := R6
	81	[577]	TEST     	R6 0 ; if not R6 then PC := 99
	82	[577]	JMP      	99 ; PC := 99
	83	[578]	GETGLOBAL	R7 K17 ; R7 := 0x34291f5c
	84	[578]	GETTABLE 	R7 R7 K18 ; R7 := R7[0x68d83431]
	85	[578]	CALL     	R7 1 2 ; R7 := R7()
	86	[580]	GETGLOBAL	R8 K1 ; R8 := _T
	87	[580]	GETTABLE 	R8 R8 K2 ; R8 := R8["QuartersVignette"]
	88	[580]	GETTABLE 	R8 R8 K3 ; R8 := R8["Level"]
	89	[580]	SETTABLE 	R7 K19 R8 ; R7["level"] := R8
	90	[581]	SETTABLE 	R7 K20 R3 ; R7["streamingLayer"] := R3
	91	[582]	SETTABLE 	R7 K22 K7 ; R7["streamingMode"] := 1.000000
	92	[583]	SELF     	R8 R7 K24 ; R9 := R7; R8 := R7[0x30e5d39d]
	93	[583]	LOADK    	R10 K30 ; R10 := "OnVignetteRemoved"
	94	[583]	CALL     	R8 3 1 ; R8(R9,R10)
	95	[584]	GETGLOBAL	R8 K17 ; R8 := 0x34291f5c
	96	[584]	GETTABLE 	R8 R8 K31 ; R8 := R8[0x47aa0f1b]
	97	[584]	MOVE     	R9 R7 ; R9 := R7
	98	[584]	CALL     	R8 2 1 ; R8(R9)
	99	[587]	GETGLOBAL	R8 K1 ; R8 := _T
	100	[587]	GETTABLE 	R8 R8 K2 ; R8 := R8["QuartersVignette"]
	101	[587]	SETTABLE 	R8 K3 R1 ; R8["Level"] := R1
	102	[588]	GETGLOBAL	R8 K11 ; R8 := 0x89326c93
	103	[588]	SELF     	R8 R8 K32 ; R9 := R8; R8 := R8[0xc7fcada9]
	104	[588]	GETGLOBAL	R10 K13 ; R10 := 0x0469f296
	105	[588]	LOADK    	R11 K33 ; R11 := "VignetteBasePlate"
	106	[588]	CALL     	R10 2 0 ; R10,... := R10(R11)
	107	[588]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	108	[589]	OP_LOADBOOL	R9 1 0 ; R9 := true
	109	[590]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	110	[590]	MOVE     	R11 R1 ; R11 := R1
	111	[590]	CALL     	R10 2 2 ; R10 := R10(R11)
	112	[590]	TEST     	R10 1 ; if R10 then PC := 119
	113	[590]	JMP      	119 ; PC := 119
	114	[591]	OP_LOADBOOL	R9 0 0 ; R9 := false
	115	[592]	GETGLOBAL	R10 K1 ; R10 := _T
	116	[592]	GETTABLE 	R10 R10 K2 ; R10 := R10["QuartersVignette"]
	117	[592]	GETTABLE 	R11 R5 K20 ; R11 := R5["streamingLayer"]
	118	[592]	SETTABLE 	R10 K5 R11 ; R10["Layer"] := R11
	119	[595]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	120	[595]	MOVE     	R11 R8 ; R11 := R8
	121	[595]	CALL     	R10 2 2 ; R10 := R10(R11)
	122	[595]	TEST     	R10 1 ; if R10 then PC := 133
	123	[595]	JMP      	133 ; PC := 133
	124	[596]	LOADK    	R10 := 1.000000
	125	[596]	LEN      	R11 R8 ; R11 := # R8
	126	[596]	LOADK    	R12 := 1.000000
	127	[596]	FORPREP  	R10 132 ; R10 -= R12; PC := 132
	128	[597]	GETTABLE 	R14 R8 R13 ; R14 := R8[R13]
	129	[597]	SELF     	R14 R14 K34 ; R15 := R14; R14 := R14[0x768274d6]
	130	[597]	MOVE     	R16 R9 ; R16 := R9
	131	[597]	CALL     	R14 3 1 ; R14(R15,R16)
	132	[596]	FORLOOP  	R10 128 ; R10 += R12; if R10 <= R11 then begin PC := 128; R13 := R10 end
	133	[602]	GETGLOBAL	R14 K1 ; R14 := _T
	134	[602]	GETTABLE 	R14 R14 K35 ; R14 := R14["ShipDecosInVignette"]
	135	[602]	EQ       	1 R14 K4 ; if R14 == nil then PC := 166
	136	[602]	JMP      	166 ; PC := 166
	137	[602]	EQ       	1 R2 K4 ; if R2 == nil then PC := 166
	138	[602]	JMP      	166 ; PC := 166
	139	[603]	GETGLOBAL	R14 K36 ; R14 := 0xcfc01047
	140	[603]	GETGLOBAL	R15 K1 ; R15 := _T
	141	[603]	GETTABLE 	R15 R15 K35 ; R15 := R15["ShipDecosInVignette"]
	142	[603]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	143	[603]	JMP      	164 ; PC := 164
	144	[604]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	145	[604]	MOVE     	R20 R18 ; R20 := R18
	146	[604]	CALL     	R19 2 2 ; R19 := R19(R20)
	147	[604]	TEST     	R19 1 ; if R19 then PC := 164
	148	[604]	JMP      	164 ; PC := 164
	149	[605]	SELF     	R19 R18 K34 ; R20 := R18; R19 := R18[0x768274d6]
	150	[605]	MOVE     	R21 R2 ; R21 := R2
	151	[605]	CALL     	R19 3 1 ; R19(R20,R21)
	152	[608]	SELF     	R19 R18 K37 ; R20 := R18; R19 := R18[0xc1595bd5]
	153	[608]	GETGLOBAL	R21 K38 ; R21 := gEntityType
	154	[608]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	155	[609]	LOADK    	R20 := 1.000000
	156	[609]	LEN      	R21 R19 ; R21 := # R19
	157	[609]	LOADK    	R22 := 1.000000
	158	[609]	FORPREP  	R20 163 ; R20 -= R22; PC := 163
	159	[610]	GETTABLE 	R24 R19 R23 ; R24 := R19[R23]
	160	[610]	SELF     	R24 R24 K34 ; R25 := R24; R24 := R24[0x768274d6]
	161	[610]	MOVE     	R26 R2 ; R26 := R2
	162	[610]	CALL     	R24 3 1 ; R24(R25,R26)
	163	[609]	FORLOOP  	R20 159 ; R20 += R22; if R20 <= R21 then begin PC := 159; R23 := R20 end
	164	[603]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 144; R16 := R17 end
	165	[612]	JMP      	144 ; PC := 144
	166	[615]	RETURN   	R0 1 ; return 

function #8 <?:617,641> (40 instructions, 160 bytes at 000002116318B300)
2 params, 16 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[618]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[618]	MOVE     	R3 R0 ; R3 := R0
	3	[618]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[618]	TEST     	R2 1 ; if R2 then PC := 11
	5	[618]	JMP      	11 ; PC := 11
	6	[618]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[618]	MOVE     	R3 R1 ; R3 := R1
	8	[618]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[618]	TEST     	R2 0 ; if not R2 then PC := 12
	10	[618]	JMP      	12 ; PC := 12
	11	[619]	RETURN   	R0 1 ; return 
	12	[622]	LOADNIL  	R2 R2 ; R2 := nil
	13	[623]	SELF     	R3 R1 K1 ; R4 := R1; R3 := R1[0x99a63bb9]
	14	[623]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[624]	LOADK    	R4 := 1.000000
	16	[624]	LEN      	R5 R3 ; R5 := # R3
	17	[624]	LOADK    	R6 := 1.000000
	18	[624]	FORPREP  	R4 38 ; R4 -= R6; PC := 38
	19	[625]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	20	[626]	SELF     	R9 R8 K2 ; R10 := R8; R9 := R8[0x8cbb7448]
	21	[626]	CALL     	R9 2 2 ; R9 := R9(R10)
	22	[627]	LOADK    	R10 := 1.000000
	23	[627]	LEN      	R11 R9 ; R11 := # R9
	24	[627]	LOADK    	R12 := 1.000000
	25	[627]	FORPREP  	R10 31 ; R10 -= R12; PC := 31
	26	[628]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	27	[628]	EQ       	0 R14 R0 ; if R14 ~= R0 then PC := 31
	28	[628]	JMP      	31 ; PC := 31
	29	[629]	GETTABLE 	R2 R8 K3 ; R2 := R8["mDecoration"]
	30	[631]	JMP      	32 ; PC := 32
	31	[627]	FORLOOP  	R10 26 ; R10 += R12; if R10 <= R11 then begin PC := 26; R13 := R10 end
	32	[635]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	33	[635]	MOVE     	R15 R2 ; R15 := R2
	34	[635]	CALL     	R14 2 2 ; R14 := R14(R15)
	35	[635]	TEST     	R14 1 ; if R14 then PC := 38
	36	[635]	JMP      	38 ; PC := 38
	37	[636]	JMP      	39 ; PC := 39
	38	[624]	FORLOOP  	R4 19 ; R4 += R6; if R4 <= R5 then begin PC := 19; R7 := R4 end
	39	[640]	RETURN   	R2 2 ; return R2 
	40	[641]	RETURN   	R0 1 ; return 

function #9 <?:643,660> (36 instructions, 144 bytes at 000002116318B530)
2 params, 9 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[644]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[644]	MOVE     	R3 R0 ; R3 := R0
	3	[644]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[644]	TEST     	R2 1 ; if R2 then PC := 11
	5	[644]	JMP      	11 ; PC := 11
	6	[644]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[644]	MOVE     	R3 R1 ; R3 := R1
	8	[644]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[644]	TEST     	R2 0 ; if not R2 then PC := 12
	10	[644]	JMP      	12 ; PC := 12
	11	[645]	RETURN   	R0 1 ; return 
	12	[648]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0xfe5189f5]
	13	[648]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[649]	EQ       	0 R2 K3 ; if R2 ~= 0.000000 then PC := 36
	15	[649]	JMP      	36 ; PC := 36
	16	[650]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0x65d389cb]
	17	[650]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[651]	SELF     	R4 R1 K5 ; R5 := R1; R4 := R1[0xc399f522]
	19	[651]	CALL     	R4 2 2 ; R4 := R4(R5)
	20	[652]	EQ       	1 R4 K6 ; if R4 == 1.000000 then PC := 32
	21	[652]	JMP      	32 ; PC := 32
	22	[653]	GETUPVAL 	R5 U0 ; R5 := U0
	23	[653]	GETTABLE 	R5 R5 K7 ; R5 := R5[0x06d055f9]
	24	[653]	EQ       	1 R4 K3 ; if R4 == 0.000000 then PC := 27
	25	[653]	JMP      	27 ; PC := 27
	26	[653]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 27
	27	[653]	OP_LOADBOOL	R6 1 0 ; R6 := true
	28	[653]	LOADK    	R7 := 0.500000
	29	[653]	LOADK    	R8 K8 ; R8 := 1.600000
	30	[653]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	31	[653]	MUL      	R3 R3 R5 ; R3 := R3 * R5
	32	[656]	SELF     	R5 R0 K9 ; R6 := R0; R5 := R0[0x2d9ba74f]
	33	[656]	MOVE     	R7 R3 ; R7 := R3
	34	[656]	CALL     	R5 3 1 ; R5(R6,R7)
	35	[656]	JMP      	36 ; PC := 36
	36	[660]	RETURN   	R0 1 ; return 

function #10 <?:662,669> (17 instructions, 68 bytes at 000002116318B7B0)
1 param, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[663]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[663]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x46a0ebf5]
	3	[663]	GETGLOBAL	R3 K2 ; R3 := 0x0469f296
	4	[663]	LOADK    	R4 K3 ; R4 := "WallpaperMesh"
	5	[663]	CALL     	R3 2 0 ; R3,... := R3(R4)
	6	[663]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	7	[664]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	8	[664]	MOVE     	R3 R1 ; R3 := R1
	9	[664]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[664]	TEST     	R2 0 ; if not R2 then PC := 13
	11	[664]	JMP      	13 ; PC := 13
	12	[665]	RETURN   	R0 1 ; return 
	13	[668]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xcddc3abb]
	14	[668]	LOADK    	R4 := 0.000000
	15	[668]	MOVE     	R5 R0 ; R5 := R0
	16	[668]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[669]	RETURN   	R0 1 ; return 

function #11 <?:671,690> (64 instructions, 256 bytes at 000002116318B9B0)
3 params, 33 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[672]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[673]	GETGLOBAL	R4 K0 ; R4 := 0xcfc01047
	3	[673]	GETGLOBAL	R5 K1 ; R5 := 0x0032441c
	4	[673]	GETTABLE 	R5 R5 K2 ; R5 := R5["UIMaterial_Mods"]
	5	[673]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	6	[673]	JMP      	18 ; PC := 18
	7	[674]	GETGLOBAL	R9 K0 ; R9 := 0xcfc01047
	8	[674]	MOVE     	R10 R8 ; R10 := R8
	9	[674]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	10	[674]	JMP      	16 ; PC := 16
	11	[675]	GETGLOBAL	R14 K3 ; R14 := 0x33bdd652
	12	[675]	GETTABLE 	R14 R14 K4 ; R14 := R14[0x23d5322f]
	13	[675]	MOVE     	R15 R3 ; R15 := R3
	14	[675]	MOVE     	R16 R13 ; R16 := R13
	15	[675]	CALL     	R14 3 1 ; R14(R15,R16)
	16	[674]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 11; R11 := R12 end
	17	[675]	JMP      	11 ; PC := 11
	18	[673]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 7; R6 := R7 end
	19	[676]	JMP      	7 ; PC := 7
	20	[678]	GETGLOBAL	R14 K0 ; R14 := 0xcfc01047
	21	[678]	GETGLOBAL	R15 K1 ; R15 := 0x0032441c
	22	[678]	GETTABLE 	R15 R15 K5 ; R15 := R15["UIMaterial_ModsSyndicateIcons"]
	23	[678]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	24	[678]	JMP      	36 ; PC := 36
	25	[679]	GETGLOBAL	R19 K0 ; R19 := 0xcfc01047
	26	[679]	MOVE     	R20 R18 ; R20 := R18
	27	[679]	CALL     	R19 2 4 ; R19,R20,R21 := R19(R20)
	28	[679]	JMP      	34 ; PC := 34
	29	[680]	GETGLOBAL	R24 K3 ; R24 := 0x33bdd652
	30	[680]	GETTABLE 	R24 R24 K4 ; R24 := R24[0x23d5322f]
	31	[680]	MOVE     	R25 R3 ; R25 := R3
	32	[680]	MOVE     	R26 R23 ; R26 := R23
	33	[680]	CALL     	R24 3 1 ; R24(R25,R26)
	34	[679]	TFORLOOP 	R19 2 ; R22,R23 := R19(R20,R21); if R22 ~= nil then begin PC = 29; R21 := R22 end
	35	[680]	JMP      	29 ; PC := 29
	36	[678]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 25; R16 := R17 end
	37	[681]	JMP      	25 ; PC := 25
	38	[683]	GETGLOBAL	R24 K0 ; R24 := 0xcfc01047
	39	[683]	MOVE     	R25 R3 ; R25 := R3
	40	[683]	CALL     	R24 2 4 ; R24,R25,R26 := R24(R25)
	41	[683]	JMP      	62 ; PC := 62
	42	[684]	GETGLOBAL	R29 K6 ; R29 := 0x7b998233
	43	[684]	MOVE     	R30 R28 ; R30 := R28
	44	[684]	CALL     	R29 2 2 ; R29 := R29(R30)
	45	[684]	TEST     	R29 1 ; if R29 then PC := 62
	46	[684]	JMP      	62 ; PC := 62
	47	[685]	SELF     	R29 R28 K7 ; R30 := R28; R29 := R28[0x830eea67]
	48	[685]	GETGLOBAL	R31 K8 ; R31 := 0x6c97a788
	49	[685]	GETTABLE 	R31 R31 K9 ; R31 := R31["VISIBILITY_CENTER"]
	50	[685]	MOVE     	R32 R0 ; R32 := R0
	51	[685]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	52	[686]	SELF     	R29 R28 K7 ; R30 := R28; R29 := R28[0x830eea67]
	53	[686]	GETGLOBAL	R31 K8 ; R31 := 0x6c97a788
	54	[686]	GETTABLE 	R31 R31 K10 ; R31 := R31["VISIBILITY_SIZE"]
	55	[686]	MOVE     	R32 R1 ; R32 := R1
	56	[686]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	57	[687]	SELF     	R29 R28 K7 ; R30 := R28; R29 := R28[0x830eea67]
	58	[687]	GETGLOBAL	R31 K8 ; R31 := 0x6c97a788
	59	[687]	GETTABLE 	R31 R31 K11 ; R31 := R31["VISIBILITY_FADE_SIZE"]
	60	[687]	MOVE     	R32 R2 ; R32 := R2
	61	[687]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	62	[683]	TFORLOOP 	R24 2 ; R27,R28 := R24(R25,R26); if R27 ~= nil then begin PC = 42; R26 := R27 end
	63	[688]	JMP      	42 ; PC := 42
	64	[690]	RETURN   	R0 1 ; return 

function #12 <?:692,698> (17 instructions, 68 bytes at 000002116318BD30)
0 params, 4 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[693]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[693]	GETTABLE 	R0 R0 K1 ; R0 := R0["CachedGridModParams"]
	3	[693]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 6
	4	[693]	JMP      	6 ; PC := 6
	5	[694]	RETURN   	R0 1 ; return 
	6	[697]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[697]	GETGLOBAL	R1 K0 ; R1 := _T
	8	[697]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedGridModParams"]
	9	[697]	GETTABLE 	R1 R1 K3 ; R1 := R1["Center"]
	10	[697]	GETGLOBAL	R2 K0 ; R2 := _T
	11	[697]	GETTABLE 	R2 R2 K1 ; R2 := R2["CachedGridModParams"]
	12	[697]	GETTABLE 	R2 R2 K4 ; R2 := R2["Size"]
	13	[697]	GETGLOBAL	R3 K0 ; R3 := _T
	14	[697]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedGridModParams"]
	15	[697]	GETTABLE 	R3 R3 K5 ; R3 := R3["FadeSize"]
	16	[697]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	17	[698]	RETURN   	R0 1 ; return 

function #13 <?:700,719> (51 instructions, 204 bytes at 000002116318BF30)
1 param, 16 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[703]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[703]	SETTABLE 	R1 K1 K2 ; R1["CachedGridModParams"] := nil
	3	[704]	TEST     	R0 0 ; if not R0 then PC := 46
	4	[704]	JMP      	46 ; PC := 46
	5	[707]	GETGLOBAL	R1 K3 ; R1 := 0xcfc01047
	6	[707]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	7	[707]	GETTABLE 	R2 R2 K5 ; R2 := R2["UIMaterial_Mods"]
	8	[707]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	9	[707]	JMP      	44 ; PC := 44
	10	[708]	GETGLOBAL	R6 K3 ; R6 := 0xcfc01047
	11	[708]	MOVE     	R7 R5 ; R7 := R5
	12	[708]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	13	[708]	JMP      	42 ; PC := 42
	14	[709]	GETGLOBAL	R11 K0 ; R11 := _T
	15	[709]	NEWTABLE 	R12 0 0 ; R12 := {}
	16	[709]	SETTABLE 	R11 K1 R12 ; R11["CachedGridModParams"] := R12
	17	[710]	GETGLOBAL	R11 K0 ; R11 := _T
	18	[710]	GETTABLE 	R11 R11 K1 ; R11 := R11["CachedGridModParams"]
	19	[710]	SELF     	R12 R10 K7 ; R13 := R10; R12 := R10[0xae79653b]
	20	[710]	GETGLOBAL	R14 K8 ; R14 := 0x6c97a788
	21	[710]	GETTABLE 	R14 R14 K9 ; R14 := R14["VISIBILITY_CENTER"]
	22	[710]	LOADK    	R15 := 1.000000
	23	[710]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	24	[710]	SETTABLE 	R11 K6 R12 ; R11["Center"] := R12
	25	[711]	GETGLOBAL	R11 K0 ; R11 := _T
	26	[711]	GETTABLE 	R11 R11 K1 ; R11 := R11["CachedGridModParams"]
	27	[711]	SELF     	R12 R10 K7 ; R13 := R10; R12 := R10[0xae79653b]
	28	[711]	GETGLOBAL	R14 K8 ; R14 := 0x6c97a788
	29	[711]	GETTABLE 	R14 R14 K11 ; R14 := R14["VISIBILITY_SIZE"]
	30	[711]	LOADK    	R15 := 1.000000
	31	[711]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	32	[711]	SETTABLE 	R11 K10 R12 ; R11["Size"] := R12
	33	[712]	GETGLOBAL	R11 K0 ; R11 := _T
	34	[712]	GETTABLE 	R11 R11 K1 ; R11 := R11["CachedGridModParams"]
	35	[712]	SELF     	R12 R10 K7 ; R13 := R10; R12 := R10[0xae79653b]
	36	[712]	GETGLOBAL	R14 K8 ; R14 := 0x6c97a788
	37	[712]	GETTABLE 	R14 R14 K13 ; R14 := R14["VISIBILITY_FADE_SIZE"]
	38	[712]	LOADK    	R15 := 1.000000
	39	[712]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	40	[712]	SETTABLE 	R11 K12 R12 ; R11["FadeSize"] := R12
	41	[713]	JMP      	44 ; PC := 44
	42	[708]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 14; R8 := R9 end
	43	[713]	JMP      	14 ; PC := 14
	44	[707]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 10; R3 := R4 end
	45	[714]	JMP      	10 ; PC := 10
	46	[718]	GETUPVAL 	R11 U0 ; R11 := U0
	47	[718]	LOADK    	R12 := 0.500000
	48	[718]	LOADK    	R13 := 1.500000
	49	[718]	LOADK    	R14 := 0.000000
	50	[718]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	51	[719]	RETURN   	R0 1 ; return 

function #14 <?:722,792> (145 instructions, 580 bytes at 000002116318C270)
5 params, 27 slots, 1 upvalue, 0 locals, 32 constants, 1 function
	1	[723]	LOADK    	R5 := 0.000000
	2	[724]	LOADK    	R6 := 0.000000
	3	[725]	LOADK    	R7 := 0.000000
	4	[726]	LOADK    	R8 := 0.000000
	5	[727]	LOADK    	R9 := 0.000000
	6	[728]	LOADK    	R10 := 0.000000
	7	[730]	EQ       	0 R4 K0 ; if R4 ~= nil then PC := 10
	8	[730]	JMP      	10 ; PC := 10
	9	[731]	LOADK    	R4 := 0.000000
	10	[734]	GETTABLE 	R11 R2 K1 ; R11 := R2["PixelCoords"]
	11	[734]	TEST     	R11 0 ; if not R11 then PC := 25
	12	[734]	JMP      	25 ; PC := 25
	13	[735]	GETUPVAL 	R11 U0 ; R11 := U0
	14	[735]	GETTABLE 	R11 R11 K2 ; R11 := R11[0xee122c82]
	15	[735]	MOVE     	R12 R1 ; R12 := R1
	16	[735]	MOVE     	R13 R0 ; R13 := R0
	17	[735]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	18	[737]	GETTABLE 	R12 R11 K3 ; R12 := R11["x"]
	19	[737]	GETTABLE 	R13 R2 K4 ; R13 := R2["DrawScale"]
	20	[737]	MUL      	R5 R12 R13 ; R5 := R12 * R13
	21	[738]	GETTABLE 	R12 R11 K5 ; R12 := R11["y"]
	22	[738]	GETTABLE 	R13 R2 K4 ; R13 := R2["DrawScale"]
	23	[738]	MUL      	R6 R12 R13 ; R6 := R12 * R13
	24	[738]	JMP      	39 ; PC := 39
	25	[740]	SELF     	R12 R1 K6 ; R13 := R1; R12 := R1[0xbf94c0da]
	26	[740]	GETTABLE 	R14 R0 K3 ; R14 := R0["x"]
	27	[740]	GETTABLE 	R15 R0 K5 ; R15 := R0["y"]
	28	[740]	CALL     	R12 4 3 ; R12,R13 := R12(R13,R14,R15)
	29	[740]	MOVE     	R6 R13 ; R6 := R13
	30	[740]	MOVE     	R5 R12 ; R5 := R12
	31	[742]	SELF     	R12 R1 K6 ; R13 := R1; R12 := R1[0xbf94c0da]
	32	[742]	GETTABLE 	R14 R2 K7 ; R14 := R2["CursorScale"]
	33	[742]	MUL      	R14 K8 R14 ; R14 := 15.000000 * R14
	34	[742]	GETTABLE 	R15 R2 K7 ; R15 := R2["CursorScale"]
	35	[742]	MUL      	R15 K9 R15 ; R15 := 30.000000 * R15
	36	[742]	CALL     	R12 4 3 ; R12,R13 := R12(R13,R14,R15)
	37	[742]	MOVE     	R8 R13 ; R8 := R13
	38	[742]	MOVE     	R7 R12 ; R7 := R12
	39	[745]	GETTABLE 	R12 R2 K10 ; R12 := R2["Width"]
	40	[745]	GETTABLE 	R13 R2 K4 ; R13 := R2["DrawScale"]
	41	[745]	MUL      	R12 R12 R13 ; R12 := R12 * R13
	42	[746]	GETTABLE 	R13 R2 K11 ; R13 := R2["Height"]
	43	[746]	GETTABLE 	R14 R2 K4 ; R14 := R2["DrawScale"]
	44	[746]	MUL      	R13 R13 R14 ; R13 := R13 * R14
	45	[747]	GETTABLE 	R14 R2 K1 ; R14 := R2["PixelCoords"]
	46	[747]	TEST     	R14 1 ; if R14 then PC := 51
	47	[747]	JMP      	51 ; PC := 51
	48	[749]	DIV      	R14 R13 K12 ; R14 := R13 / 2.000000
	49	[749]	SUB      	R10 R8 R14 ; R10 := R8 - R14
	50	[750]	MOVE     	R9 R7 ; R9 := R7
	51	[752]	ADD      	R14 R5 R9 ; R14 := R5 + R9
	52	[752]	ADD      	R14 R14 R12 ; R14 := R14 + R12
	53	[752]	GETTABLE 	R15 R2 K13 ; R15 := R2["InvScale"]
	54	[752]	MUL      	R14 R14 R15 ; R14 := R14 * R15
	55	[752]	GETTABLE 	R15 R2 K14 ; R15 := R2["ViewportWidth"]
	56	[752]	LT       	0 R15 R14 ; if R15 >= R14 then PC := 65
	57	[752]	JMP      	65 ; PC := 65
	58	[753]	SUB      	R14 R12 K15 ; R14 := R12 - 5.000000
	59	[753]	UNM      	R9 R14 ; R9 := ^ R14
	60	[754]	GETTABLE 	R14 R2 K16 ; R14 := R2["ReverseBuffer"]
	61	[754]	EQ       	1 R14 K0 ; if R14 == nil then PC := 65
	62	[754]	JMP      	65 ; PC := 65
	63	[755]	GETTABLE 	R14 R2 K16 ; R14 := R2["ReverseBuffer"]
	64	[755]	SUB      	R9 R9 R14 ; R9 := R9 - R14
	65	[758]	ADD      	R14 R6 R10 ; R14 := R6 + R10
	66	[758]	GETTABLE 	R15 R2 K13 ; R15 := R2["InvScale"]
	67	[758]	MUL      	R14 R14 R15 ; R14 := R14 * R15
	68	[759]	ADD      	R15 R6 R10 ; R15 := R6 + R10
	69	[759]	ADD      	R15 R15 R13 ; R15 := R15 + R13
	70	[759]	GETTABLE 	R16 R2 K13 ; R16 := R2["InvScale"]
	71	[759]	MUL      	R15 R15 R16 ; R15 := R15 * R16
	72	[760]	GETTABLE 	R16 R2 K17 ; R16 := R2["ViewportHeight"]
	73	[760]	SUB      	R16 R16 R4 ; R16 := R16 - R4
	74	[760]	LT       	0 R16 R15 ; if R16 >= R15 then PC := 81
	75	[760]	JMP      	81 ; PC := 81
	76	[762]	GETTABLE 	R16 R2 K17 ; R16 := R2["ViewportHeight"]
	77	[762]	SUB      	R16 R16 R4 ; R16 := R16 - R4
	78	[762]	SUB      	R16 R16 R15 ; R16 := R16 - R15
	79	[762]	ADD      	R10 R10 R16 ; R10 := R10 + R16
	80	[762]	JMP      	85 ; PC := 85
	81	[763]	LT       	0 R14 R4 ; if R14 >= R4 then PC := 85
	82	[763]	JMP      	85 ; PC := 85
	83	[765]	SUB      	R16 R4 R14 ; R16 := R4 - R14
	84	[765]	ADD      	R10 R10 R16 ; R10 := R10 + R16
	85	[768]	GETTABLE 	R16 R3 K18 ; R16 := R3["TargetX"]
	86	[768]	EQ       	0 R16 R9 ; if R16 ~= R9 then PC := 91
	87	[768]	JMP      	91 ; PC := 91
	88	[768]	GETTABLE 	R16 R3 K19 ; R16 := R3["TargetY"]
	89	[768]	EQ       	1 R16 R10 ; if R16 == R10 then PC := 133
	90	[768]	JMP      	133 ; PC := 133
	91	[769]	GETTABLE 	R16 R3 K18 ; R16 := R3["TargetX"]
	92	[769]	SETTABLE 	R3 K20 R16 ; R3["PreviousX"] := R16
	93	[770]	GETTABLE 	R16 R3 K19 ; R16 := R3["TargetY"]
	94	[770]	SETTABLE 	R3 K21 R16 ; R3["PreviousY"] := R16
	95	[771]	SETTABLE 	R3 K18 R9 ; R3["TargetX"] := R9
	96	[772]	SETTABLE 	R3 K19 R10 ; R3["TargetY"] := R10
	97	[773]	GETGLOBAL	R16 K22 ; R16 := 0x7b998233
	98	[773]	GETTABLE 	R17 R3 K20 ; R17 := R3["PreviousX"]
	99	[773]	CALL     	R16 2 2 ; R16 := R16(R17)
	100	[773]	TEST     	R16 1 ; if R16 then PC := 107
	101	[773]	JMP      	107 ; PC := 107
	102	[773]	GETGLOBAL	R16 K22 ; R16 := 0x7b998233
	103	[773]	GETTABLE 	R17 R3 K21 ; R17 := R3["PreviousY"]
	104	[773]	CALL     	R16 2 2 ; R16 := R16(R17)
	105	[773]	TEST     	R16 0 ; if not R16 then PC := 113
	106	[773]	JMP      	113 ; PC := 113
	107	[774]	SETTABLE 	R3 K23 R9 ; R3["CurrentX"] := R9
	108	[775]	SETTABLE 	R3 K24 R10 ; R3["CurrentY"] := R10
	109	[776]	SELF     	R16 R1 K25 ; R17 := R1; R16 := R1[0xaf5300dc]
	110	[776]	LOADK    	R18 K26 ; R18 := "_root"
	111	[776]	CALL     	R16 3 1 ; R16(R17,R18)
	112	[776]	JMP      	133 ; PC := 133
	113	[784]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	114	[784]	MOVE     	R0 R3 ; R0 := R3
	115	[784]	GETUPVAL 	R0 U0 ; R0 := U0
	116	[785]	GETGLOBAL	R17 K27 ; R17 := 0x25312c9b
	117	[785]	MOVE     	R18 R1 ; R18 := R1
	118	[785]	LOADK    	R19 K26 ; R19 := "_root"
	119	[785]	LOADK    	R20 := 0.000000
	120	[785]	NEWTABLE 	R21 1 0 ; R21 := {}
	121	[785]	MOVE     	R22 R16 ; R22 := R16
	122	[785]	SETLIST  	R21 1 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
	123	[785]	NEWTABLE 	R22 1 0 ; R22 := {}
	124	[785]	LOADK    	R23 := 1.000000
	125	[785]	SETLIST  	R22 1 1 ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
	126	[785]	GETUPVAL 	R23 U0 ; R23 := U0
	127	[785]	GETTABLE 	R23 R23 K29 ; R23 := R23[0x06d055f9]
	128	[785]	GETTABLE 	R24 R2 K30 ; R24 := R2["Instant"]
	129	[785]	LOADK    	R25 := 0.000000
	130	[785]	LOADK    	R26 K31 ; R26 := 0.150000
	131	[785]	CALL     	R23 4 0 ; R23,... := R23(R24,R25,R26)
	132	[785]	CALL     	R17 0 1 ; R17(R18,...)
	133	[788]	GETTABLE 	R17 R3 K23 ; R17 := R3["CurrentX"]
	134	[788]	ADD      	R17 R5 R17 ; R17 := R5 + R17
	135	[788]	GETTABLE 	R18 R2 K13 ; R18 := R2["InvScale"]
	136	[788]	MUL      	R5 R17 R18 ; R5 := R17 * R18
	137	[789]	GETTABLE 	R17 R3 K24 ; R17 := R3["CurrentY"]
	138	[789]	ADD      	R17 R6 R17 ; R17 := R6 + R17
	139	[789]	GETTABLE 	R18 R2 K13 ; R18 := R2["InvScale"]
	140	[789]	MUL      	R6 R17 R18 ; R6 := R17 * R18
	141	[791]	NEWTABLE 	R17 0 2 ; R17 := {}
	142	[791]	SETTABLE 	R17 K3 R5 ; R17["x"] := R5
	143	[791]	SETTABLE 	R17 K5 R6 ; R17["y"] := R6
	144	[791]	RETURN   	R17 2 ; return R17 
	145	[792]	RETURN   	R0 1 ; return 

function #15 <?:794,815> (43 instructions, 172 bytes at 000002116318CFA0)
4 params, 14 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[795]	TESTSET  	R4 R2 1 ; if R2 then PC := 4 else R4 := R2 
	2	[795]	JMP      	4 ; PC := 4
	3	[795]	NEWTABLE 	R4 0 0 ; R4 := {}
	4	[796]	GETGLOBAL	R5 K0 ; R5 := 0xcfc01047
	5	[796]	GETUPVAL 	R6 U0 ; R6 := U0
	6	[796]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	7	[796]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	8	[796]	JMP      	10 ; PC := 10
	9	[797]	SETTABLE 	R4 R8 R9 ; R4[R8] := R9
	10	[796]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 9; R7 := R8 end
	11	[797]	JMP      	9 ; PC := 9
	12	[799]	GETGLOBAL	R10 K1 ; R10 := 0x4ec73e73
	13	[799]	MOVE     	R11 R4 ; R11 := R4
	14	[799]	CALL     	R10 2 2 ; R10 := R10(R11)
	15	[799]	TEST     	R10 1 ; if R10 then PC := 25
	16	[799]	JMP      	25 ; PC := 25
	17	[800]	GETGLOBAL	R10 K2 ; R10 := 0x3d106989
	18	[800]	LOADK    	R11 K3 ; R11 := "UIUtilities::_GetInfoForLabel - Could not find label info for type: "
	19	[800]	GETGLOBAL	R12 K4 ; R12 := 0x64fb1586
	20	[800]	MOVE     	R13 R0 ; R13 := R0
	21	[800]	CALL     	R12 2 2 ; R12 := R12(R13)
	22	[800]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	23	[800]	CALL     	R10 2 1 ; R10(R11)
	24	[800]	JMP      	42 ; PC := 42
	25	[802]	SETTABLE 	R4 K5 R1 ; R4["Name"] := R1
	26	[803]	SETTABLE 	R4 K6 R0 ; R4["Type"] := R0
	27	[804]	GETTABLE 	R10 R4 K7 ; R10 := R4["LabelColor"]
	28	[804]	TEST     	R10 1 ; if R10 then PC := 31
	29	[804]	JMP      	31 ; PC := 31
	30	[804]	LOADK    	R10 := 9.000000
	31	[804]	SETTABLE 	R4 K7 R10 ; R4["LabelColor"] := R10
	32	[805]	TEST     	R3 0 ; if not R3 then PC := 35
	33	[805]	JMP      	35 ; PC := 35
	34	[806]	SETTABLE 	R4 K9 R3 ; R4["LabelPrefix"] := R3
	35	[809]	GETTABLE 	R10 R4 K10 ; R10 := R4["IconDims"]
	36	[809]	EQ       	1 R10 K11 ; if R10 == nil then PC := 42
	37	[809]	JMP      	42 ; PC := 42
	38	[810]	GETGLOBAL	R10 K13 ; R10 := 0x0032441c
	39	[810]	GETTABLE 	R10 R10 K14 ; R10 := R10["UITexture_LabelIcons"]
	40	[810]	GETTABLE 	R10 R10 R0 ; R10 := R10[R0]
	41	[810]	SETTABLE 	R4 K12 R10 ; R4["Icon"] := R10
	42	[814]	RETURN   	R4 2 ; return R4 
	43	[815]	RETURN   	R0 1 ; return 

function #16 <?:817,819> (7 instructions, 28 bytes at 000002116318D260)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[818]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[818]	MOVE     	R4 R0 ; R4 := R0
	3	[818]	MOVE     	R5 R1 ; R5 := R1
	4	[818]	MOVE     	R6 R2 ; R6 := R2
	5	[818]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[818]	RETURN   	R3 0 ; return R3,... 
	7	[819]	RETURN   	R0 1 ; return 

function #17 <?:821,1037> (820 instructions, 3280 bytes at 000002116318D350)
4 params, 33 slots, 2 upvalues, 0 locals, 104 constants, 3 functions
	1	[823]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[823]	GETTABLE 	R5 R2 K1 ; R5 := R2["Icon"]
	3	[823]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[824]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0xc0a3774b]
	5	[824]	MOVE     	R7 R1 ; R7 := R1
	6	[824]	LOADK    	R8 K1 ; R8 := "Icon"
	7	[824]	LOADK    	R9 := 11.000000
	8	[824]	NOT      	R10 R4 ; R10 := not R4
	9	[824]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	10	[825]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0xc0a3774b]
	11	[825]	MOVE     	R7 R1 ; R7 := R1
	12	[825]	LOADK    	R8 K3 ; R8 := "IconText"
	13	[825]	LOADK    	R9 := 11.000000
	14	[825]	TEST     	R4 1 ; if R4 then PC := 19
	15	[825]	JMP      	19 ; PC := 19
	16	[825]	GETTABLE 	R10 R2 K3 ; R10 := R2["IconText"]
	17	[825]	EQ       	0 R10 K4 ; if R10 ~= nil then PC := 20
	18	[825]	JMP      	20 ; PC := 20
	19	[825]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 20
	20	[825]	OP_LOADBOOL	R10 1 0 ; R10 := true
	21	[825]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	22	[826]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0xc0a3774b]
	23	[826]	MOVE     	R7 R1 ; R7 := R1
	24	[826]	LOADK    	R8 K5 ; R8 := "IconTextBg"
	25	[826]	LOADK    	R9 := 11.000000
	26	[826]	TEST     	R4 1 ; if R4 then PC := 36
	27	[826]	JMP      	36 ; PC := 36
	28	[826]	GETTABLE 	R10 R2 K3 ; R10 := R2["IconText"]
	29	[826]	EQ       	1 R10 K4 ; if R10 == nil then PC := 36
	30	[826]	JMP      	36 ; PC := 36
	31	[826]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	32	[826]	GETTABLE 	R11 R2 K5 ; R11 := R2["IconTextBg"]
	33	[826]	CALL     	R10 2 2 ; R10 := R10(R11)
	34	[826]	TEST     	R10 0 ; if not R10 then PC := 40
	35	[826]	JMP      	40 ; PC := 40
	36	[826]	GETTABLE 	R10 R2 K6 ; R10 := R2["BackerCapTexture"]
	37	[826]	EQ       	0 R10 K4 ; if R10 ~= nil then PC := 40
	38	[826]	JMP      	40 ; PC := 40
	39	[826]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 40
	40	[826]	OP_LOADBOOL	R10 1 0 ; R10 := true
	41	[826]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	42	[827]	SELF     	R5 R0 K7 ; R6 := R0; R5 := R0[0x5f56eeab]
	43	[827]	MOVE     	R7 R1 ; R7 := R1
	44	[827]	LOADK    	R8 K8 ; R8 := ".IconText"
	45	[827]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	46	[827]	LOADK    	R8 := 29.000000
	47	[827]	GETTABLE 	R9 R2 K3 ; R9 := R2["IconText"]
	48	[827]	TEST     	R9 1 ; if R9 then PC := 51
	49	[827]	JMP      	51 ; PC := 51
	50	[827]	LOADK    	R9 K9 ; R9 := ""
	51	[827]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	52	[828]	TEST     	R4 1 ; if R4 then PC := 247
	53	[828]	JMP      	247 ; PC := 247
	54	[829]	SELF     	R5 R0 K10 ; R6 := R0; R5 := R0[0x1cb415c1]
	55	[829]	MOVE     	R7 R1 ; R7 := R1
	56	[829]	LOADK    	R8 K11 ; R8 := ".Icon"
	57	[829]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	58	[829]	GETTABLE 	R8 R2 K1 ; R8 := R2["Icon"]
	59	[829]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	60	[830]	GETUPVAL 	R5 U0 ; R5 := U0
	61	[830]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x06d055f9]
	62	[830]	TESTSET  	R6 R3 0 ; if not R3 then PC := 68 else R6 := R3 
	63	[830]	JMP      	68 ; PC := 68
	64	[830]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	65	[830]	GETTABLE 	R7 R2 K13 ; R7 := R2["GridIconDims"]
	66	[830]	CALL     	R6 2 2 ; R6 := R6(R7)
	67	[830]	NOT      	R6 R6 ; R6 := not R6
	68	[830]	GETTABLE 	R7 R2 K13 ; R7 := R2["GridIconDims"]
	69	[830]	GETTABLE 	R8 R2 K14 ; R8 := R2["IconDims"]
	70	[830]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	71	[831]	GETUPVAL 	R6 U0 ; R6 := U0
	72	[831]	GETTABLE 	R6 R6 K12 ; R6 := R6[0x06d055f9]
	73	[831]	TESTSET  	R7 R3 0 ; if not R3 then PC := 79 else R7 := R3 
	74	[831]	JMP      	79 ; PC := 79
	75	[831]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	76	[831]	GETTABLE 	R8 R2 K15 ; R8 := R2["GridIconPos"]
	77	[831]	CALL     	R7 2 2 ; R7 := R7(R8)
	78	[831]	NOT      	R7 R7 ; R7 := not R7
	79	[831]	GETTABLE 	R8 R2 K15 ; R8 := R2["GridIconPos"]
	80	[831]	GETTABLE 	R9 R2 K16 ; R9 := R2["IconPos"]
	81	[831]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	82	[832]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	83	[832]	MOVE     	R9 R1 ; R9 := R1
	84	[832]	LOADK    	R10 K1 ; R10 := "Icon"
	85	[832]	LOADK    	R11 := 12.000000
	86	[832]	GETTABLE 	R12 R5 K18 ; R12 := R5["W"]
	87	[832]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	88	[833]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	89	[833]	MOVE     	R9 R1 ; R9 := R1
	90	[833]	LOADK    	R10 K1 ; R10 := "Icon"
	91	[833]	LOADK    	R11 := 13.000000
	92	[833]	GETTABLE 	R12 R5 K19 ; R12 := R5["H"]
	93	[833]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	94	[834]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	95	[834]	MOVE     	R9 R1 ; R9 := R1
	96	[834]	LOADK    	R10 K1 ; R10 := "Icon"
	97	[834]	LOADK    	R11 := 0.000000
	98	[834]	GETTABLE 	R12 R6 K20 ; R12 := R6["X"]
	99	[834]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	100	[835]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	101	[835]	MOVE     	R9 R1 ; R9 := R1
	102	[835]	LOADK    	R10 K1 ; R10 := "Icon"
	103	[835]	LOADK    	R11 := 1.000000
	104	[835]	GETTABLE 	R12 R6 K21 ; R12 := R6["Y"]
	105	[835]	ADD      	R12 R12 K22 ; R12 := R12 + 2.000000
	106	[835]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	107	[837]	GETTABLE 	R7 R2 K23 ; R7 := R2["IconTintLabelColor"]
	108	[837]	EQ       	0 R7 K24 ; if R7 ~= true then PC := 124
	109	[837]	JMP      	124 ; PC := 124
	110	[837]	GETTABLE 	R7 R2 K25 ; R7 := R2["LabelColor"]
	111	[837]	TEST     	R7 0 ; if not R7 then PC := 124
	112	[837]	JMP      	124 ; PC := 124
	113	[838]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	114	[838]	MOVE     	R9 R1 ; R9 := R1
	115	[838]	LOADK    	R10 K1 ; R10 := "Icon"
	116	[838]	LOADK    	R11 := 9.000000
	117	[838]	GETUPVAL 	R12 U1 ; R12 := U1
	118	[838]	GETTABLE 	R12 R12 K26 ; R12 := R12[0x5d10207d]
	119	[838]	GETTABLE 	R13 R2 K25 ; R13 := R2["LabelColor"]
	120	[838]	OP_LOADBOOL	R14 1 0 ; R14 := true
	121	[838]	CALL     	R12 3 0 ; R12,... := R12(R13,R14)
	122	[838]	CALL     	R7 0 1 ; R7(R8,...)
	123	[838]	JMP      	130 ; PC := 130
	124	[840]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	125	[840]	MOVE     	R9 R1 ; R9 := R1
	126	[840]	LOADK    	R10 K1 ; R10 := "Icon"
	127	[840]	LOADK    	R11 := 9.000000
	128	[840]	LOADK    	R12 K27 ; R12 := 16777215.000000
	129	[840]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	130	[843]	GETTABLE 	R7 R2 K3 ; R7 := R2["IconText"]
	131	[843]	EQ       	1 R7 K4 ; if R7 == nil then PC := 247
	132	[843]	JMP      	247 ; PC := 247
	133	[844]	GETTABLE 	R7 R2 K28 ; R7 := R2["CenterIconText"]
	134	[844]	TEST     	R7 0 ; if not R7 then PC := 158
	135	[844]	JMP      	158 ; PC := 158
	136	[845]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	137	[845]	MOVE     	R9 R1 ; R9 := R1
	138	[845]	LOADK    	R10 K3 ; R10 := "IconText"
	139	[845]	LOADK    	R11 := 0.000000
	140	[845]	GETTABLE 	R12 R6 K20 ; R12 := R6["X"]
	141	[845]	GETTABLE 	R13 R2 K29 ; R13 := R2["IconTextPos"]
	142	[845]	GETTABLE 	R13 R13 K20 ; R13 := R13["X"]
	143	[845]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	144	[845]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	145	[846]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	146	[846]	MOVE     	R9 R1 ; R9 := R1
	147	[846]	LOADK    	R10 K3 ; R10 := "IconText"
	148	[846]	LOADK    	R11 := 65.000000
	149	[846]	LOADK    	R12 := -2.000000
	150	[846]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	151	[847]	SELF     	R7 R0 K30 ; R8 := R0; R7 := R0[0xe261aa96]
	152	[847]	MOVE     	R9 R1 ; R9 := R1
	153	[847]	LOADK    	R10 K3 ; R10 := "IconText"
	154	[847]	LOADK    	R11 := 37.000000
	155	[847]	LOADK    	R12 K31 ; R12 := "center"
	156	[847]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	157	[847]	JMP      	177 ; PC := 177
	158	[849]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	159	[849]	MOVE     	R9 R1 ; R9 := R1
	160	[849]	LOADK    	R10 K3 ; R10 := "IconText"
	161	[849]	LOADK    	R11 := 0.000000
	162	[849]	GETTABLE 	R12 R2 K29 ; R12 := R2["IconTextPos"]
	163	[849]	GETTABLE 	R12 R12 K20 ; R12 := R12["X"]
	164	[849]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	165	[850]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	166	[850]	MOVE     	R9 R1 ; R9 := R1
	167	[850]	LOADK    	R10 K3 ; R10 := "IconText"
	168	[850]	LOADK    	R11 := 65.000000
	169	[850]	LOADK    	R12 := 0.000000
	170	[850]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	171	[851]	SELF     	R7 R0 K30 ; R8 := R0; R7 := R0[0xe261aa96]
	172	[851]	MOVE     	R9 R1 ; R9 := R1
	173	[851]	LOADK    	R10 K3 ; R10 := "IconText"
	174	[851]	LOADK    	R11 := 37.000000
	175	[851]	LOADK    	R12 K32 ; R12 := "left"
	176	[851]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	177	[853]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	178	[853]	MOVE     	R9 R1 ; R9 := R1
	179	[853]	LOADK    	R10 K3 ; R10 := "IconText"
	180	[853]	LOADK    	R11 := 1.000000
	181	[853]	GETTABLE 	R12 R2 K29 ; R12 := R2["IconTextPos"]
	182	[853]	GETTABLE 	R12 R12 K21 ; R12 := R12["Y"]
	183	[853]	ADD      	R12 R12 K22 ; R12 := R12 + 2.000000
	184	[853]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	185	[854]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	186	[854]	MOVE     	R9 R1 ; R9 := R1
	187	[854]	LOADK    	R10 K3 ; R10 := "IconText"
	188	[854]	LOADK    	R11 := 36.000000
	189	[854]	GETUPVAL 	R12 U1 ; R12 := U1
	190	[854]	GETTABLE 	R12 R12 K26 ; R12 := R12[0x5d10207d]
	191	[854]	GETTABLE 	R13 R2 K33 ; R13 := R2["IconTextColor"]
	192	[854]	OP_LOADBOOL	R14 1 0 ; R14 := true
	193	[854]	CALL     	R12 3 0 ; R12,... := R12(R13,R14)
	194	[854]	CALL     	R7 0 1 ; R7(R8,...)
	195	[855]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	196	[855]	GETTABLE 	R8 R2 K5 ; R8 := R2["IconTextBg"]
	197	[855]	CALL     	R7 2 2 ; R7 := R7(R8)
	198	[855]	TEST     	R7 1 ; if R7 then PC := 247
	199	[855]	JMP      	247 ; PC := 247
	200	[856]	SELF     	R7 R0 K10 ; R8 := R0; R7 := R0[0x1cb415c1]
	201	[856]	MOVE     	R9 R1 ; R9 := R1
	202	[856]	LOADK    	R10 K34 ; R10 := ".IconTextBg"
	203	[856]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	204	[856]	GETTABLE 	R10 R2 K5 ; R10 := R2["IconTextBg"]
	205	[856]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	206	[857]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	207	[857]	MOVE     	R9 R1 ; R9 := R1
	208	[857]	LOADK    	R10 K5 ; R10 := "IconTextBg"
	209	[857]	LOADK    	R11 := 10.000000
	210	[857]	GETTABLE 	R12 R2 K35 ; R12 := R2["IconTextBgAlpha"]
	211	[857]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	212	[858]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	213	[858]	MOVE     	R9 R1 ; R9 := R1
	214	[858]	LOADK    	R10 K5 ; R10 := "IconTextBg"
	215	[858]	LOADK    	R11 := 9.000000
	216	[858]	GETTABLE 	R12 R2 K36 ; R12 := R2["IconTextBgColor"]
	217	[858]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	218	[859]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	219	[859]	MOVE     	R9 R1 ; R9 := R1
	220	[859]	LOADK    	R10 K5 ; R10 := "IconTextBg"
	221	[859]	LOADK    	R11 := 12.000000
	222	[859]	GETTABLE 	R12 R2 K37 ; R12 := R2["IconTextBgDims"]
	223	[859]	GETTABLE 	R12 R12 K18 ; R12 := R12["W"]
	224	[859]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	225	[860]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	226	[860]	MOVE     	R9 R1 ; R9 := R1
	227	[860]	LOADK    	R10 K5 ; R10 := "IconTextBg"
	228	[860]	LOADK    	R11 := 13.000000
	229	[860]	GETTABLE 	R12 R2 K37 ; R12 := R2["IconTextBgDims"]
	230	[860]	GETTABLE 	R12 R12 K19 ; R12 := R12["H"]
	231	[860]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	232	[861]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	233	[861]	MOVE     	R9 R1 ; R9 := R1
	234	[861]	LOADK    	R10 K5 ; R10 := "IconTextBg"
	235	[861]	LOADK    	R11 := 0.000000
	236	[861]	GETTABLE 	R12 R2 K38 ; R12 := R2["IconTextBgPos"]
	237	[861]	GETTABLE 	R12 R12 K20 ; R12 := R12["X"]
	238	[861]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	239	[862]	SELF     	R7 R0 K17 ; R8 := R0; R7 := R0[0xf64b7262]
	240	[862]	MOVE     	R9 R1 ; R9 := R1
	241	[862]	LOADK    	R10 K5 ; R10 := "IconTextBg"
	242	[862]	LOADK    	R11 := 1.000000
	243	[862]	GETTABLE 	R12 R2 K38 ; R12 := R2["IconTextBgPos"]
	244	[862]	GETTABLE 	R12 R12 K21 ; R12 := R12["Y"]
	245	[862]	ADD      	R12 R12 K22 ; R12 := R12 + 2.000000
	246	[862]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	247	[867]	GETGLOBAL	R7 K39 ; R7 := 0x5bced4c4
	248	[867]	GETTABLE 	R7 R7 K40 ; R7 := R7[0xb62ecfe0]
	249	[867]	SELF     	R8 R0 K41 ; R9 := R0; R8 := R0[0x91a24e4b]
	250	[867]	MOVE     	R10 R1 ; R10 := R1
	251	[867]	LOADK    	R11 K8 ; R11 := ".IconText"
	252	[867]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	253	[867]	LOADK    	R11 := 33.000000
	254	[867]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	255	[867]	TEST     	R8 1 ; if R8 then PC := 258
	256	[867]	JMP      	258 ; PC := 258
	257	[867]	LOADK    	R8 := 0.000000
	258	[867]	LOADK    	R9 := 5.000000
	259	[867]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	260	[868]	GETTABLE 	R8 R2 K42 ; R8 := R2["ClipOffset"]
	261	[868]	TEST     	R8 1 ; if R8 then PC := 264
	262	[868]	JMP      	264 ; PC := 264
	263	[868]	LOADK    	R8 := 0.000000
	264	[869]	SELF     	R9 R0 K43 ; R10 := R0; R9 := R0[0x67bc869f]
	265	[869]	MOVE     	R11 R1 ; R11 := R1
	266	[869]	LOADK    	R12 := 0.000000
	267	[869]	MOVE     	R13 R8 ; R13 := R8
	268	[869]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	269	[870]	LOADK    	R9 := 27.000000
	270	[871]	GETTABLE 	R10 R2 K44 ; R10 := R2["LabelOffset"]
	271	[871]	TEST     	R10 1 ; if R10 then PC := 274
	272	[871]	JMP      	274 ; PC := 274
	273	[871]	MOVE     	R10 R9 ; R10 := R9
	274	[871]	ADD      	R10 R7 R10 ; R10 := R7 + R10
	275	[872]	SELF     	R11 R0 K17 ; R12 := R0; R11 := R0[0xf64b7262]
	276	[872]	MOVE     	R13 R1 ; R13 := R1
	277	[872]	LOADK    	R14 K45 ; R14 := "Label"
	278	[872]	LOADK    	R15 := 0.000000
	279	[872]	MOVE     	R16 R10 ; R16 := R10
	280	[872]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	281	[873]	SELF     	R11 R0 K17 ; R12 := R0; R11 := R0[0xf64b7262]
	282	[873]	MOVE     	R13 R1 ; R13 := R1
	283	[873]	LOADK    	R14 K45 ; R14 := "Label"
	284	[873]	LOADK    	R15 := 1.000000
	285	[873]	GETTABLE 	R16 R2 K46 ; R16 := R2["LabelOffsetY"]
	286	[873]	TEST     	R16 1 ; if R16 then PC := 289
	287	[873]	JMP      	289 ; PC := 289
	288	[873]	LOADK    	R16 := 5.000000
	289	[873]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	290	[875]	GETTABLE 	R11 R2 K47 ; R11 := R2["Name"]
	291	[876]	TEST     	R3 0 ; if not R3 then PC := 297
	292	[876]	JMP      	297 ; PC := 297
	293	[876]	GETTABLE 	R12 R2 K48 ; R12 := R2["mGridLabelTag"]
	294	[876]	EQ       	1 R12 K4 ; if R12 == nil then PC := 297
	295	[876]	JMP      	297 ; PC := 297
	296	[877]	GETTABLE 	R11 R2 K48 ; R11 := R2["mGridLabelTag"]
	297	[879]	SELF     	R12 R0 K49 ; R13 := R0; R12 := R0[0x42b04007]
	298	[879]	MOVE     	R14 R11 ; R14 := R11
	299	[879]	OP_LOADBOOL	R15 1 0 ; R15 := true
	300	[879]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	301	[879]	MOVE     	R11 R12 ; R11 := R12
	302	[880]	GETTABLE 	R12 R2 K50 ; R12 := R2["SkipTitleCase"]
	303	[880]	TEST     	R12 1 ; if R12 then PC := 309
	304	[880]	JMP      	309 ; PC := 309
	305	[881]	GETGLOBAL	R12 K51 ; R12 := 0x5f0788c4
	306	[881]	MOVE     	R13 R11 ; R13 := R11
	307	[881]	CALL     	R12 2 2 ; R12 := R12(R13)
	308	[881]	MOVE     	R11 R12 ; R11 := R12
	309	[883]	GETTABLE 	R12 R2 K52 ; R12 := R2["LabelPrefix"]
	310	[883]	EQ       	1 R12 K4 ; if R12 == nil then PC := 319
	311	[883]	JMP      	319 ; PC := 319
	312	[884]	SELF     	R12 R0 K49 ; R13 := R0; R12 := R0[0x42b04007]
	313	[884]	GETTABLE 	R14 R2 K52 ; R14 := R2["LabelPrefix"]
	314	[884]	OP_LOADBOOL	R15 1 0 ; R15 := true
	315	[884]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	316	[884]	LOADK    	R13 K53 ; R13 := " "
	317	[884]	MOVE     	R14 R11 ; R14 := R11
	318	[884]	CONCAT   	R11 R12 R14 ; R11 := R12 .. R13 .. R14
	319	[887]	SELF     	R12 R0 K2 ; R13 := R0; R12 := R0[0xc0a3774b]
	320	[887]	MOVE     	R14 R1 ; R14 := R1
	321	[887]	LOADK    	R15 K54 ; R15 := "Strikethrough"
	322	[887]	LOADK    	R16 := 11.000000
	323	[887]	GETTABLE 	R17 R2 K55 ; R17 := R2["ShowDiscount"]
	324	[887]	EQ       	1 R17 K24 ; if R17 == true then PC := 327
	325	[887]	JMP      	327 ; PC := 327
	326	[887]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 327
	327	[887]	OP_LOADBOOL	R17 1 0 ; R17 := true
	328	[887]	CALL     	R12 6 1 ; R12(R13,R14,R15,R16,R17)
	329	[888]	GETTABLE 	R12 R2 K55 ; R12 := R2["ShowDiscount"]
	330	[888]	TEST     	R12 0 ; if not R12 then PC := 397
	331	[888]	JMP      	397 ; PC := 397
	332	[888]	GETTABLE 	R12 R2 K56 ; R12 := R2["RegularPrice"]
	333	[888]	EQ       	1 R12 K4 ; if R12 == nil then PC := 397
	334	[888]	JMP      	397 ; PC := 397
	335	[889]	SELF     	R12 R0 K49 ; R13 := R0; R12 := R0[0x42b04007]
	336	[889]	LOADK    	R14 K57 ; R14 := "<MINI_ARROW>"
	337	[889]	OP_LOADBOOL	R15 1 0 ; R15 := true
	338	[889]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	339	[890]	SELF     	R13 R0 K49 ; R14 := R0; R13 := R0[0x42b04007]
	340	[890]	GETUPVAL 	R15 U0 ; R15 := U0
	341	[890]	GETTABLE 	R15 R15 K12 ; R15 := R15[0x06d055f9]
	342	[890]	GETTABLE 	R16 R2 K58 ; R16 := R2["Type"]
	343	[890]	GETGLOBAL	R17 K59 ; R17 := LABEL_TYPE_PLATINUM
	344	[890]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 347
	345	[890]	JMP      	347 ; PC := 347
	346	[890]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 347
	347	[890]	OP_LOADBOOL	R16 1 0 ; R16 := true
	348	[890]	LOADK    	R17 K60 ; R17 := "<PLATINUM_CREDITS>"
	349	[890]	LOADK    	R18 K61 ; R18 := "<REGULAR_CREDITS>"
	350	[890]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	351	[890]	OP_LOADBOOL	R16 1 0 ; R16 := true
	352	[890]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	353	[891]	GETUPVAL 	R14 U0 ; R14 := U0
	354	[891]	GETTABLE 	R14 R14 K62 ; R14 := R14[0x1142c7a8]
	355	[891]	GETTABLE 	R15 R2 K56 ; R15 := R2["RegularPrice"]
	356	[891]	CALL     	R14 2 2 ; R14 := R14(R15)
	357	[891]	MOVE     	R15 R12 ; R15 := R12
	358	[891]	MOVE     	R16 R13 ; R16 := R13
	359	[891]	MOVE     	R17 R11 ; R17 := R11
	360	[891]	CONCAT   	R11 R14 R17 ; R11 := R14 .. R15 .. R16 .. R17
	361	[893]	SELF     	R14 R0 K30 ; R15 := R0; R14 := R0[0xe261aa96]
	362	[893]	MOVE     	R16 R1 ; R16 := R1
	363	[893]	LOADK    	R17 K45 ; R17 := "Label"
	364	[893]	LOADK    	R18 := 29.000000
	365	[893]	GETUPVAL 	R19 U0 ; R19 := U0
	366	[893]	GETTABLE 	R19 R19 K62 ; R19 := R19[0x1142c7a8]
	367	[893]	GETTABLE 	R20 R2 K56 ; R20 := R2["RegularPrice"]
	368	[893]	CALL     	R19 2 0 ; R19,... := R19(R20)
	369	[893]	CALL     	R14 0 1 ; R14(R15,...)
	370	[894]	SELF     	R14 R0 K63 ; R15 := R0; R14 := R0[0x2ce15376]
	371	[894]	MOVE     	R16 R1 ; R16 := R1
	372	[894]	LOADK    	R17 K45 ; R17 := "Label"
	373	[894]	LOADK    	R18 := 33.000000
	374	[894]	CALL     	R14 5 2 ; R14 := R14(R15,R16,R17,R18)
	375	[895]	SELF     	R15 R0 K17 ; R16 := R0; R15 := R0[0xf64b7262]
	376	[895]	MOVE     	R17 R1 ; R17 := R1
	377	[895]	LOADK    	R18 K54 ; R18 := "Strikethrough"
	378	[895]	LOADK    	R19 := 12.000000
	379	[895]	ADD      	R20 R14 K64 ; R20 := R14 + 30.000000
	380	[895]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	381	[896]	SELF     	R15 R0 K17 ; R16 := R0; R15 := R0[0xf64b7262]
	382	[896]	MOVE     	R17 R1 ; R17 := R1
	383	[896]	LOADK    	R18 K54 ; R18 := "Strikethrough"
	384	[896]	LOADK    	R19 := 0.000000
	385	[896]	LOADK    	R20 := 3.000000
	386	[896]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	387	[897]	SELF     	R15 R0 K17 ; R16 := R0; R15 := R0[0xf64b7262]
	388	[897]	MOVE     	R17 R1 ; R17 := R1
	389	[897]	LOADK    	R18 K54 ; R18 := "Strikethrough"
	390	[897]	LOADK    	R19 := 9.000000
	391	[897]	GETUPVAL 	R20 U1 ; R20 := U1
	392	[897]	GETTABLE 	R20 R20 K26 ; R20 := R20[0x5d10207d]
	393	[897]	LOADK    	R21 := 6.000000
	394	[897]	OP_LOADBOOL	R22 1 0 ; R22 := true
	395	[897]	CALL     	R20 3 0 ; R20,... := R20(R21,R22)
	396	[897]	CALL     	R15 0 1 ; R15(R16,...)
	397	[900]	TEST     	R3 1 ; if R3 then PC := 405
	398	[900]	JMP      	405 ; PC := 405
	399	[900]	GETTABLE 	R15 R2 K66 ; R15 := R2["PricePostfix"]
	400	[900]	EQ       	1 R15 K4 ; if R15 == nil then PC := 405
	401	[900]	JMP      	405 ; PC := 405
	402	[901]	MOVE     	R15 R11 ; R15 := R11
	403	[901]	GETTABLE 	R16 R2 K66 ; R16 := R2["PricePostfix"]
	404	[901]	CONCAT   	R11 R15 R16 ; R11 := R15 .. R16
	405	[903]	GETTABLE 	R15 R2 K67 ; R15 := R2["Bold"]
	406	[903]	TEST     	R15 0 ; if not R15 then PC := 412
	407	[903]	JMP      	412 ; PC := 412
	408	[904]	LOADK    	R15 K68 ; R15 := "<b>"
	409	[904]	MOVE     	R16 R11 ; R16 := R11
	410	[904]	LOADK    	R17 K69 ; R17 := "</b>"
	411	[904]	CONCAT   	R11 R15 R17 ; R11 := R15 .. R16 .. R17
	412	[908]	LOADK    	R15 K70 ; R15 := "<p><font color=\""
	413	[908]	GETUPVAL 	R16 U0 ; R16 := U0
	414	[908]	GETTABLE 	R16 R16 K71 ; R16 := R16[0x9f57dd7d]
	415	[908]	GETTABLE 	R17 R2 K25 ; R17 := R2["LabelColor"]
	416	[908]	EQ       	1 R17 K4 ; if R17 == nil then PC := 425
	417	[908]	JMP      	425 ; PC := 425
	418	[908]	GETUPVAL 	R17 U1 ; R17 := U1
	419	[908]	GETTABLE 	R17 R17 K26 ; R17 := R17[0x5d10207d]
	420	[908]	GETTABLE 	R18 R2 K25 ; R18 := R2["LabelColor"]
	421	[908]	OP_LOADBOOL	R19 1 0 ; R19 := true
	422	[908]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	423	[908]	TEST     	R17 1 ; if R17 then PC := 426
	424	[908]	JMP      	426 ; PC := 426
	425	[908]	LOADK    	R17 K27 ; R17 := 16777215.000000
	426	[908]	CALL     	R16 2 2 ; R16 := R16(R17)
	427	[908]	LOADK    	R17 K72 ; R17 := "\">"
	428	[908]	MOVE     	R18 R11 ; R18 := R11
	429	[908]	LOADK    	R19 K73 ; R19 := "</font></p>"
	430	[908]	CONCAT   	R11 R15 R19 ; R11 := R15 .. R16 .. R17 .. R18 .. R19
	431	[909]	GETTABLE 	R15 R2 K74 ; R15 := R2["FitText"]
	432	[909]	TEST     	R15 0 ; if not R15 then PC := 454
	433	[909]	JMP      	454 ; PC := 454
	434	[909]	GETTABLE 	R15 R2 K75 ; R15 := R2["MaxWidth"]
	435	[909]	EQ       	1 R15 K4 ; if R15 == nil then PC := 454
	436	[909]	JMP      	454 ; PC := 454
	437	[910]	SELF     	R15 R0 K17 ; R16 := R0; R15 := R0[0xf64b7262]
	438	[910]	MOVE     	R17 R1 ; R17 := R1
	439	[910]	LOADK    	R18 K45 ; R18 := "Label"
	440	[910]	LOADK    	R19 := 12.000000
	441	[910]	GETTABLE 	R20 R2 K75 ; R20 := R2["MaxWidth"]
	442	[910]	ADD      	R21 R10 R8 ; R21 := R10 + R8
	443	[910]	SUB      	R20 R20 R21 ; R20 := R20 - R21
	444	[910]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	445	[911]	GETUPVAL 	R15 U0 ; R15 := U0
	446	[911]	GETTABLE 	R15 R15 K76 ; R15 := R15[0x5f0440b6]
	447	[911]	MOVE     	R16 R0 ; R16 := R0
	448	[911]	MOVE     	R17 R1 ; R17 := R1
	449	[911]	LOADK    	R18 K77 ; R18 := ".Label"
	450	[911]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	451	[911]	LOADK    	R18 K78 ; R18 := "..."
	452	[911]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	453	[911]	JMP      	470 ; PC := 470
	454	[912]	GETTABLE 	R15 R2 K75 ; R15 := R2["MaxWidth"]
	455	[912]	EQ       	1 R15 K4 ; if R15 == nil then PC := 464
	456	[912]	JMP      	464 ; PC := 464
	457	[913]	SELF     	R15 R0 K17 ; R16 := R0; R15 := R0[0xf64b7262]
	458	[913]	MOVE     	R17 R1 ; R17 := R1
	459	[913]	LOADK    	R18 K45 ; R18 := "Label"
	460	[913]	LOADK    	R19 := 12.000000
	461	[913]	GETTABLE 	R20 R2 K75 ; R20 := R2["MaxWidth"]
	462	[913]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	463	[913]	JMP      	470 ; PC := 470
	464	[915]	SELF     	R15 R0 K17 ; R16 := R0; R15 := R0[0xf64b7262]
	465	[915]	MOVE     	R17 R1 ; R17 := R1
	466	[915]	LOADK    	R18 K45 ; R18 := "Label"
	467	[915]	LOADK    	R19 := 12.000000
	468	[915]	LOADK    	R20 := 75.000000
	469	[915]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	470	[918]	LOADK    	R15 := 0.000000
	471	[919]	TEST     	R4 0 ; if not R4 then PC := 474
	472	[919]	JMP      	474 ; PC := 474
	473	[920]	LOADK    	R15 := 1.000000
	474	[922]	EQ       	1 R3 K24 ; if R3 == true then PC := 477
	475	[922]	JMP      	477 ; PC := 477
	476	[922]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 477
	477	[922]	OP_LOADBOOL	R16 1 0 ; R16 := true
	478	[923]	LOADNIL  	R17 R17 ; R17 := nil
	479	[924]	SELF     	R18 R0 K2 ; R19 := R0; R18 := R0[0xc0a3774b]
	480	[924]	MOVE     	R20 R1 ; R20 := R1
	481	[924]	LOADK    	R21 K79 ; R21 := "Bg"
	482	[924]	LOADK    	R22 := 11.000000
	483	[924]	MOVE     	R23 R16 ; R23 := R16
	484	[924]	CALL     	R18 6 1 ; R18(R19,R20,R21,R22,R23)
	485	[925]	TEST     	R16 0 ; if not R16 then PC := 692
	486	[925]	JMP      	692 ; PC := 692
	487	[961]	CLOSURE  	R17 0 ; R17 := closure(Function #1)
	488	[961]	MOVE     	R0 R0 ; R0 := R0
	489	[961]	MOVE     	R0 R1 ; R0 := R1
	490	[961]	GETUPVAL 	R0 U0 ; R0 := U0
	491	[961]	MOVE     	R0 R15 ; R0 := R15
	492	[961]	MOVE     	R0 R4 ; R0 := R4
	493	[961]	MOVE     	R0 R2 ; R0 := R2
	494	[961]	MOVE     	R0 R10 ; R0 := R10
	495	[961]	MOVE     	R0 R9 ; R0 := R9
	496	[963]	GETTABLE 	R18 R2 K80 ; R18 := R2["BgColor"]
	497	[964]	GETTABLE 	R19 R2 K81 ; R19 := R2["GridBgColor"]
	498	[964]	EQ       	1 R19 K4 ; if R19 == nil then PC := 503
	499	[964]	JMP      	503 ; PC := 503
	500	[964]	TEST     	R3 0 ; if not R3 then PC := 503
	501	[964]	JMP      	503 ; PC := 503
	502	[965]	GETTABLE 	R18 R2 K81 ; R18 := R2["GridBgColor"]
	503	[967]	GETUPVAL 	R19 U0 ; R19 := U0
	504	[967]	GETTABLE 	R19 R19 K82 ; R19 := R19[0x8bcd12b6]
	505	[967]	GETUPVAL 	R20 U1 ; R20 := U1
	506	[967]	GETTABLE 	R20 R20 K26 ; R20 := R20[0x5d10207d]
	507	[967]	TESTSET  	R21 R18 1 ; if R18 then PC := 510 else R21 := R18 
	508	[967]	JMP      	510 ; PC := 510
	509	[967]	LOADK    	R21 := 2.000000
	510	[967]	OP_LOADBOOL	R22 1 0 ; R22 := true
	511	[967]	CALL     	R20 3 0 ; R20,... := R20(R21,R22)
	512	[967]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	513	[967]	MOVE     	R18 R19 ; R18 := R19
	514	[968]	GETUPVAL 	R19 U0 ; R19 := U0
	515	[968]	GETTABLE 	R19 R19 K82 ; R19 := R19[0x8bcd12b6]
	516	[968]	GETUPVAL 	R20 U1 ; R20 := U1
	517	[968]	GETTABLE 	R20 R20 K26 ; R20 := R20[0x5d10207d]
	518	[968]	LOADK    	R21 := 9.000000
	519	[968]	OP_LOADBOOL	R22 1 0 ; R22 := true
	520	[968]	CALL     	R20 3 0 ; R20,... := R20(R21,R22)
	521	[968]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	522	[970]	SELF     	R20 R0 K17 ; R21 := R0; R20 := R0[0xf64b7262]
	523	[970]	MOVE     	R22 R1 ; R22 := R1
	524	[970]	LOADK    	R23 K79 ; R23 := "Bg"
	525	[970]	LOADK    	R24 := 0.000000
	526	[970]	GETTABLE 	R25 R2 K83 ; R25 := R2["BgOffset"]
	527	[970]	TEST     	R25 1 ; if R25 then PC := 530
	528	[970]	JMP      	530 ; PC := 530
	529	[970]	LOADK    	R25 := 0.000000
	530	[970]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	531	[971]	SELF     	R20 R0 K17 ; R21 := R0; R20 := R0[0xf64b7262]
	532	[971]	MOVE     	R22 R1 ; R22 := R1
	533	[971]	LOADK    	R23 K79 ; R23 := "Bg"
	534	[971]	LOADK    	R24 := 1.000000
	535	[971]	GETTABLE 	R25 R2 K84 ; R25 := R2["BgOffsetY"]
	536	[971]	TEST     	R25 1 ; if R25 then PC := 539
	537	[971]	JMP      	539 ; PC := 539
	538	[971]	LOADK    	R25 := 0.000000
	539	[971]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	540	[972]	LOADK    	R20 := 0.000000
	541	[973]	GETTABLE 	R21 R2 K85 ; R21 := R2["GridBgHeightOffset"]
	542	[973]	EQ       	1 R21 K4 ; if R21 == nil then PC := 547
	543	[973]	JMP      	547 ; PC := 547
	544	[973]	TEST     	R3 0 ; if not R3 then PC := 547
	545	[973]	JMP      	547 ; PC := 547
	546	[974]	GETTABLE 	R20 R2 K85 ; R20 := R2["GridBgHeightOffset"]
	547	[976]	SELF     	R21 R0 K17 ; R22 := R0; R21 := R0[0xf64b7262]
	548	[976]	MOVE     	R23 R1 ; R23 := R1
	549	[976]	LOADK    	R24 K79 ; R24 := "Bg"
	550	[976]	LOADK    	R25 := 13.000000
	551	[976]	ADD      	R26 K64 R20 ; R26 := 30.000000 + R20
	552	[976]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	553	[978]	SELF     	R21 R0 K10 ; R22 := R0; R21 := R0[0x1cb415c1]
	554	[978]	MOVE     	R23 R1 ; R23 := R1
	555	[978]	LOADK    	R24 K86 ; R24 := ".Bg"
	556	[978]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	557	[978]	GETTABLE 	R24 R2 K87 ; R24 := R2["BackerTexture"]
	558	[978]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	559	[979]	GETTABLE 	R21 R2 K6 ; R21 := R2["BackerCapTexture"]
	560	[979]	EQ       	1 R21 K4 ; if R21 == nil then PC := 622
	561	[979]	JMP      	622 ; PC := 622
	562	[980]	SELF     	R21 R0 K10 ; R22 := R0; R21 := R0[0x1cb415c1]
	563	[980]	MOVE     	R23 R1 ; R23 := R1
	564	[980]	LOADK    	R24 K34 ; R24 := ".IconTextBg"
	565	[980]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	566	[980]	GETTABLE 	R24 R2 K6 ; R24 := R2["BackerCapTexture"]
	567	[980]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	568	[981]	SELF     	R21 R0 K17 ; R22 := R0; R21 := R0[0xf64b7262]
	569	[981]	MOVE     	R23 R1 ; R23 := R1
	570	[981]	LOADK    	R24 K5 ; R24 := "IconTextBg"
	571	[981]	LOADK    	R25 := 10.000000
	572	[981]	LOADK    	R26 := 100.000000
	573	[981]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	574	[982]	SELF     	R21 R0 K17 ; R22 := R0; R21 := R0[0xf64b7262]
	575	[982]	MOVE     	R23 R1 ; R23 := R1
	576	[982]	LOADK    	R24 K5 ; R24 := "IconTextBg"
	577	[982]	LOADK    	R25 := 9.000000
	578	[982]	LOADK    	R26 K27 ; R26 := 16777215.000000
	579	[982]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	580	[983]	SELF     	R21 R0 K17 ; R22 := R0; R21 := R0[0xf64b7262]
	581	[983]	MOVE     	R23 R1 ; R23 := R1
	582	[983]	LOADK    	R24 K5 ; R24 := "IconTextBg"
	583	[983]	LOADK    	R25 := 12.000000
	584	[983]	ADD      	R26 K64 R20 ; R26 := 30.000000 + R20
	585	[983]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	586	[984]	SELF     	R21 R0 K17 ; R22 := R0; R21 := R0[0xf64b7262]
	587	[984]	MOVE     	R23 R1 ; R23 := R1
	588	[984]	LOADK    	R24 K5 ; R24 := "IconTextBg"
	589	[984]	LOADK    	R25 := 13.000000
	590	[984]	ADD      	R26 K64 R20 ; R26 := 30.000000 + R20
	591	[984]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	592	[985]	SELF     	R21 R0 K17 ; R22 := R0; R21 := R0[0xf64b7262]
	593	[985]	MOVE     	R23 R1 ; R23 := R1
	594	[985]	LOADK    	R24 K5 ; R24 := "IconTextBg"
	595	[985]	LOADK    	R25 := 1.000000
	596	[985]	SELF     	R26 R0 K63 ; R27 := R0; R26 := R0[0x2ce15376]
	597	[985]	MOVE     	R28 R1 ; R28 := R1
	598	[985]	LOADK    	R29 K79 ; R29 := "Bg"
	599	[985]	LOADK    	R30 := 1.000000
	600	[985]	CALL     	R26 5 0 ; R26,... := R26(R27,R28,R29,R30)
	601	[985]	CALL     	R21 0 1 ; R21(R22,...)
	602	[986]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	603	[986]	MOVE     	R23 R1 ; R23 := R1
	604	[986]	LOADK    	R24 K34 ; R24 := ".IconTextBg"
	605	[986]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	606	[986]	LOADK    	R24 K89 ; R24 := "StartColor"
	607	[986]	GETTABLE 	R25 R18 K90 ; R25 := R18["r"]
	608	[986]	GETTABLE 	R26 R18 K91 ; R26 := R18["g"]
	609	[986]	GETTABLE 	R27 R18 K92 ; R27 := R18["b"]
	610	[986]	LOADK    	R28 := 1.000000
	611	[986]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	612	[987]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	613	[987]	MOVE     	R23 R1 ; R23 := R1
	614	[987]	LOADK    	R24 K34 ; R24 := ".IconTextBg"
	615	[987]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	616	[987]	LOADK    	R24 K93 ; R24 := "EndColor"
	617	[987]	GETTABLE 	R25 R19 K90 ; R25 := R19["r"]
	618	[987]	GETTABLE 	R26 R19 K91 ; R26 := R19["g"]
	619	[987]	GETTABLE 	R27 R19 K92 ; R27 := R19["b"]
	620	[987]	LOADK    	R28 := 1.000000
	621	[987]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	622	[989]	GETTABLE 	R21 R2 K94 ; R21 := R2["BackerMaterial"]
	623	[989]	EQ       	1 R21 K4 ; if R21 == nil then PC := 669
	624	[989]	JMP      	669 ; PC := 669
	625	[990]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	626	[990]	MOVE     	R23 R1 ; R23 := R1
	627	[990]	LOADK    	R24 K86 ; R24 := ".Bg"
	628	[990]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	629	[990]	LOADK    	R24 K95 ; R24 := "RectInnerColor"
	630	[990]	LOADK    	R25 := 1.000000
	631	[990]	LOADK    	R26 := 1.000000
	632	[990]	LOADK    	R27 := 1.000000
	633	[990]	LOADK    	R28 := 1.000000
	634	[990]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	635	[991]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	636	[991]	MOVE     	R23 R1 ; R23 := R1
	637	[991]	LOADK    	R24 K86 ; R24 := ".Bg"
	638	[991]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	639	[991]	LOADK    	R24 K96 ; R24 := "RectEdgeColor"
	640	[991]	LOADK    	R25 := 1.000000
	641	[991]	LOADK    	R26 := 1.000000
	642	[991]	LOADK    	R27 := 1.000000
	643	[991]	GETTABLE 	R28 R2 K97 ; R28 := R2["RectEdgeAlpha"]
	644	[991]	TEST     	R28 1 ; if R28 then PC := 647
	645	[991]	JMP      	647 ; PC := 647
	646	[991]	LOADK    	R28 := 0.000000
	647	[991]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	648	[992]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	649	[992]	MOVE     	R23 R1 ; R23 := R1
	650	[992]	LOADK    	R24 K86 ; R24 := ".Bg"
	651	[992]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	652	[992]	LOADK    	R24 K89 ; R24 := "StartColor"
	653	[992]	GETTABLE 	R25 R18 K90 ; R25 := R18["r"]
	654	[992]	GETTABLE 	R26 R18 K91 ; R26 := R18["g"]
	655	[992]	GETTABLE 	R27 R18 K92 ; R27 := R18["b"]
	656	[992]	LOADK    	R28 := 1.000000
	657	[992]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	658	[993]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	659	[993]	MOVE     	R23 R1 ; R23 := R1
	660	[993]	LOADK    	R24 K86 ; R24 := ".Bg"
	661	[993]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	662	[993]	LOADK    	R24 K93 ; R24 := "EndColor"
	663	[993]	GETTABLE 	R25 R19 K90 ; R25 := R19["r"]
	664	[993]	GETTABLE 	R26 R19 K91 ; R26 := R19["g"]
	665	[993]	GETTABLE 	R27 R19 K92 ; R27 := R19["b"]
	666	[993]	LOADK    	R28 := 1.000000
	667	[993]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	668	[993]	JMP      	692 ; PC := 692
	669	[995]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	670	[995]	MOVE     	R23 R1 ; R23 := R1
	671	[995]	LOADK    	R24 K86 ; R24 := ".Bg"
	672	[995]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	673	[995]	LOADK    	R24 K95 ; R24 := "RectInnerColor"
	674	[995]	GETTABLE 	R25 R18 K90 ; R25 := R18["r"]
	675	[995]	GETTABLE 	R26 R18 K91 ; R26 := R18["g"]
	676	[995]	GETTABLE 	R27 R18 K92 ; R27 := R18["b"]
	677	[995]	LOADK    	R28 := 1.000000
	678	[995]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	679	[996]	SELF     	R21 R0 K88 ; R22 := R0; R21 := R0[0x91e13703]
	680	[996]	MOVE     	R23 R1 ; R23 := R1
	681	[996]	LOADK    	R24 K86 ; R24 := ".Bg"
	682	[996]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	683	[996]	LOADK    	R24 K96 ; R24 := "RectEdgeColor"
	684	[996]	GETTABLE 	R25 R18 K90 ; R25 := R18["r"]
	685	[996]	GETTABLE 	R26 R18 K91 ; R26 := R18["g"]
	686	[996]	GETTABLE 	R27 R18 K92 ; R27 := R18["b"]
	687	[996]	GETTABLE 	R28 R2 K97 ; R28 := R2["RectEdgeAlpha"]
	688	[996]	TEST     	R28 1 ; if R28 then PC := 691
	689	[996]	JMP      	691 ; PC := 691
	690	[996]	LOADK    	R28 := 0.000000
	691	[996]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	692	[1000]	GETTABLE 	R21 R2 K98 ; R21 := R2["HideTagLabel"]
	693	[1000]	EQ       	1 R21 K4 ; if R21 == nil then PC := 777
	694	[1000]	JMP      	777 ; PC := 777
	695	[1000]	GETTABLE 	R21 R2 K99 ; R21 := R2["DisableHide"]
	696	[1000]	TEST     	R21 1 ; if R21 then PC := 777
	697	[1000]	JMP      	777 ; PC := 777
	698	[1001]	SELF     	R21 R0 K63 ; R22 := R0; R21 := R0[0x2ce15376]
	699	[1001]	MOVE     	R23 R1 ; R23 := R1
	700	[1001]	LOADK    	R24 K45 ; R24 := "Label"
	701	[1001]	LOADK    	R25 := 64.000000
	702	[1001]	CALL     	R21 5 2 ; R21 := R21(R22,R23,R24,R25)
	703	[1002]	LOADNIL  	R22 R22 ; R22 := nil
	704	[1003]	GETTABLE 	R23 R2 K98 ; R23 := R2["HideTagLabel"]
	705	[1003]	TEST     	R23 0 ; if not R23 then PC := 740
	706	[1003]	JMP      	740 ; PC := 740
	707	[1004]	TEST     	R16 0 ; if not R16 then PC := 711
	708	[1004]	JMP      	711 ; PC := 711
	709	[1005]	CLOSURE  	R22 1 ; R22 := closure(Function #2)
	710	[1005]	MOVE     	R0 R17 ; R0 := R17
	711	[1007]	LT       	1 R15 R21 ; if R15 < R21 then PC := 715
	712	[1007]	JMP      	715 ; PC := 715
	713	[1007]	LT       	0 R21 K100 ; if R21 >= 0.000000 then PC := 729
	714	[1007]	JMP      	729 ; PC := 729
	715	[1009]	GETUPVAL 	R23 U0 ; R23 := U0
	716	[1009]	GETTABLE 	R23 R23 K101 ; R23 := R23[0xf6e70fb6]
	717	[1009]	MOVE     	R24 R0 ; R24 := R0
	718	[1009]	LOADNIL  	R25 R25 ; R25 := nil
	719	[1009]	MOVE     	R26 R1 ; R26 := R1
	720	[1009]	LOADK    	R27 K77 ; R27 := ".Label"
	721	[1009]	CONCAT   	R26 R26 R27 ; R26 := R26 .. R27
	722	[1009]	MOVE     	R27 R11 ; R27 := R11
	723	[1009]	MOVE     	R28 R22 ; R28 := R22
	724	[1009]	LOADK    	R29 := -1.000000
	725	[1009]	LOADNIL  	R30 R30 ; R30 := nil
	726	[1009]	MOVE     	R31 R17 ; R31 := R17
	727	[1009]	CALL     	R23 9 1 ; R23(R24,R25,R26,R27,R28,R29,R30,R31)
	728	[1009]	JMP      	794 ; PC := 794
	729	[1010]	TEST     	R16 0 ; if not R16 then PC := 794
	730	[1010]	JMP      	794 ; PC := 794
	731	[1011]	SELF     	R23 R0 K30 ; R24 := R0; R23 := R0[0xe261aa96]
	732	[1011]	MOVE     	R25 R1 ; R25 := R1
	733	[1011]	LOADK    	R26 K45 ; R26 := "Label"
	734	[1011]	LOADK    	R27 := 29.000000
	735	[1011]	MOVE     	R28 R11 ; R28 := R11
	736	[1011]	CALL     	R23 6 1 ; R23(R24,R25,R26,R27,R28)
	737	[1012]	MOVE     	R23 R22 ; R23 := R22
	738	[1012]	CALL     	R23 1 1 ; R23()
	739	[1013]	JMP      	794 ; PC := 794
	740	[1015]	SELF     	R23 R0 K63 ; R24 := R0; R23 := R0[0x2ce15376]
	741	[1015]	MOVE     	R25 R1 ; R25 := R1
	742	[1015]	LOADK    	R26 K45 ; R26 := "Label"
	743	[1015]	LOADK    	R27 := 68.000000
	744	[1015]	CALL     	R23 5 2 ; R23 := R23(R24,R25,R26,R27)
	745	[1016]	TEST     	R16 0 ; if not R16 then PC := 749
	746	[1016]	JMP      	749 ; PC := 749
	747	[1017]	CLOSURE  	R22 2 ; R22 := closure(Function #3)
	748	[1017]	MOVE     	R0 R17 ; R0 := R17
	749	[1019]	LE       	0 K100 R21 ; if 0.000000 > R21 then PC := 766
	750	[1019]	JMP      	766 ; PC := 766
	751	[1019]	LT       	0 R21 R23 ; if R21 >= R23 then PC := 766
	752	[1019]	JMP      	766 ; PC := 766
	753	[1021]	GETUPVAL 	R24 U0 ; R24 := U0
	754	[1021]	GETTABLE 	R24 R24 K101 ; R24 := R24[0xf6e70fb6]
	755	[1021]	MOVE     	R25 R0 ; R25 := R0
	756	[1021]	LOADNIL  	R26 R26 ; R26 := nil
	757	[1021]	MOVE     	R27 R1 ; R27 := R1
	758	[1021]	LOADK    	R28 K77 ; R28 := ".Label"
	759	[1021]	CONCAT   	R27 R27 R28 ; R27 := R27 .. R28
	760	[1021]	MOVE     	R28 R11 ; R28 := R11
	761	[1021]	MOVE     	R29 R22 ; R29 := R22
	762	[1021]	LOADNIL  	R30 R31 ; R30 := R31 := nil
	763	[1021]	MOVE     	R32 R17 ; R32 := R17
	764	[1021]	CALL     	R24 9 1 ; R24(R25,R26,R27,R28,R29,R30,R31,R32)
	765	[1021]	JMP      	794 ; PC := 794
	766	[1022]	TEST     	R16 0 ; if not R16 then PC := 794
	767	[1022]	JMP      	794 ; PC := 794
	768	[1023]	SELF     	R24 R0 K30 ; R25 := R0; R24 := R0[0xe261aa96]
	769	[1023]	MOVE     	R26 R1 ; R26 := R1
	770	[1023]	LOADK    	R27 K45 ; R27 := "Label"
	771	[1023]	LOADK    	R28 := 29.000000
	772	[1023]	MOVE     	R29 R11 ; R29 := R11
	773	[1023]	CALL     	R24 6 1 ; R24(R25,R26,R27,R28,R29)
	774	[1024]	MOVE     	R24 R22 ; R24 := R22
	775	[1024]	CALL     	R24 1 1 ; R24()
	776	[1026]	JMP      	794 ; PC := 794
	777	[1028]	SELF     	R24 R0 K30 ; R25 := R0; R24 := R0[0xe261aa96]
	778	[1028]	MOVE     	R26 R1 ; R26 := R1
	779	[1028]	LOADK    	R27 K45 ; R27 := "Label"
	780	[1028]	LOADK    	R28 := 29.000000
	781	[1028]	MOVE     	R29 R11 ; R29 := R11
	782	[1028]	CALL     	R24 6 1 ; R24(R25,R26,R27,R28,R29)
	783	[1029]	SELF     	R24 R0 K17 ; R25 := R0; R24 := R0[0xf64b7262]
	784	[1029]	MOVE     	R26 R1 ; R26 := R1
	785	[1029]	LOADK    	R27 K45 ; R27 := "Label"
	786	[1029]	LOADK    	R28 := 64.000000
	787	[1029]	LOADK    	R29 := -1.000000
	788	[1029]	CALL     	R24 6 1 ; R24(R25,R26,R27,R28,R29)
	789	[1030]	TEST     	R16 0 ; if not R16 then PC := 794
	790	[1030]	JMP      	794 ; PC := 794
	791	[1031]	MOVE     	R24 R17 ; R24 := R17
	792	[1031]	LOADK    	R25 := 1.000000
	793	[1031]	CALL     	R24 2 1 ; R24(R25)
	794	[1034]	GETUPVAL 	R24 U0 ; R24 := U0
	795	[1034]	GETTABLE 	R24 R24 K12 ; R24 := R24[0x06d055f9]
	796	[1034]	GETTABLE 	R25 R2 K102 ; R25 := R2["LabelAlignment"]
	797	[1034]	EQ       	0 R25 K4 ; if R25 ~= nil then PC := 800
	798	[1034]	JMP      	800 ; PC := 800
	799	[1034]	OP_LOADBOOL	R25 0 1 ; R25 := false; PC := 800
	800	[1034]	OP_LOADBOOL	R25 1 0 ; R25 := true
	801	[1034]	GETTABLE 	R26 R2 K102 ; R26 := R2["LabelAlignment"]
	802	[1034]	LOADK    	R27 K32 ; R27 := "left"
	803	[1034]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	804	[1035]	SELF     	R25 R0 K30 ; R26 := R0; R25 := R0[0xe261aa96]
	805	[1035]	MOVE     	R27 R1 ; R27 := R1
	806	[1035]	LOADK    	R28 K45 ; R28 := "Label"
	807	[1035]	LOADK    	R29 := 37.000000
	808	[1035]	MOVE     	R30 R24 ; R30 := R24
	809	[1035]	CALL     	R25 6 1 ; R25(R26,R27,R28,R29,R30)
	810	[1036]	SELF     	R25 R0 K2 ; R26 := R0; R25 := R0[0xc0a3774b]
	811	[1036]	MOVE     	R27 R1 ; R27 := R1
	812	[1036]	LOADK    	R28 K45 ; R28 := "Label"
	813	[1036]	LOADK    	R29 := 44.000000
	814	[1036]	GETTABLE 	R30 R2 K103 ; R30 := R2["MultiLine"]
	815	[1036]	EQ       	1 R30 K24 ; if R30 == true then PC := 818
	816	[1036]	JMP      	818 ; PC := 818
	817	[1036]	OP_LOADBOOL	R30 0 1 ; R30 := false; PC := 818
	818	[1036]	OP_LOADBOOL	R30 1 0 ; R30 := true
	819	[1036]	CALL     	R25 6 1 ; R25(R26,R27,R28,R29,R30)
	820	[1037]	RETURN   	R0 1 ; return 

function #18 <?:1039,1041> (7 instructions, 28 bytes at 0000021163190220)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1040]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[1040]	MOVE     	R5 R0 ; R5 := R0
	3	[1040]	MOVE     	R6 R1 ; R6 := R1
	4	[1040]	MOVE     	R7 R2 ; R7 := R2
	5	[1040]	MOVE     	R8 R3 ; R8 := R3
	6	[1040]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	7	[1041]	RETURN   	R0 1 ; return 

function #19 <?:1043,1054> (41 instructions, 164 bytes at 0000021163190310)
3 params, 12 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1044]	MOVE     	R3 R1 ; R3 := R1
	2	[1044]	LOADK    	R4 K0 ; R4 := ".TagContainer.Tag"
	3	[1044]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	4	[1045]	MOVE     	R4 R3 ; R4 := R3
	5	[1045]	GETGLOBAL	R5 K1 ; R5 := 0x64fb1586
	6	[1045]	MOVE     	R6 R2 ; R6 := R2
	7	[1045]	CALL     	R5 2 2 ; R5 := R5(R6)
	8	[1045]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	9	[1046]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0xa7ec3e8a]
	10	[1046]	MOVE     	R7 R4 ; R7 := R4
	11	[1046]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	12	[1046]	TEST     	R5 1 ; if R5 then PC := 37
	13	[1046]	JMP      	37 ; PC := 37
	14	[1048]	GETGLOBAL	R5 K3 ; R5 := 0x03f57322
	15	[1048]	GETGLOBAL	R6 K4 ; R6 := 0x38f10e85
	16	[1048]	MOVE     	R7 R0 ; R7 := R0
	17	[1048]	MOVE     	R8 R3 ; R8 := R3
	18	[1048]	LOADK    	R9 K5 ; R9 := "1.getDepth"
	19	[1048]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	20	[1048]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	21	[1048]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	22	[1048]	TEST     	R5 1 ; if R5 then PC := 25
	23	[1048]	JMP      	25 ; PC := 25
	24	[1048]	LOADK    	R5 := 10000.000000
	25	[1049]	GETGLOBAL	R6 K4 ; R6 := 0x38f10e85
	26	[1049]	MOVE     	R7 R0 ; R7 := R0
	27	[1049]	MOVE     	R8 R3 ; R8 := R3
	28	[1049]	LOADK    	R9 K6 ; R9 := "1.duplicateMovieClip"
	29	[1049]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	30	[1049]	LOADK    	R9 K7 ; R9 := "Tag"
	31	[1049]	GETGLOBAL	R10 K1 ; R10 := 0x64fb1586
	32	[1049]	MOVE     	R11 R2 ; R11 := R2
	33	[1049]	CALL     	R10 2 2 ; R10 := R10(R11)
	34	[1049]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	35	[1049]	ADD      	R10 R5 R2 ; R10 := R5 + R2
	36	[1049]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	37	[1052]	ADD      	R2 R2 K8 ; R2 := R2 + 1.000000
	38	[1053]	MOVE     	R6 R4 ; R6 := R4
	39	[1053]	MOVE     	R7 R2 ; R7 := R2
	40	[1053]	RETURN   	R6 3 ; return R6, R7 
	41	[1054]	RETURN   	R0 1 ; return 

function #20 <?:1056,1058> (7 instructions, 28 bytes at 0000021163190680)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1057]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1057]	MOVE     	R4 R0 ; R4 := R0
	3	[1057]	MOVE     	R5 R1 ; R5 := R1
	4	[1057]	MOVE     	R6 R2 ; R6 := R2
	5	[1057]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[1057]	RETURN   	R3 0 ; return R3,... 
	7	[1058]	RETURN   	R0 1 ; return 

function #21 <?:1060,1077> (18 instructions, 72 bytes at 0000021163190770)
8 params, 11 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[1061]	GETUPVAL 	R8 U0 ; R8 := U0
	2	[1061]	GETTABLE 	R8 R8 K0 ; R8 := R8[0x6d7e6810]
	3	[1061]	MOVE     	R9 R0 ; R9 := R0
	4	[1061]	NEWTABLE 	R10 0 2 ; R10 := {}
	5	[1063]	SETTABLE 	R10 K1 R2 ; R10["x"] := R2
	6	[1064]	SETTABLE 	R10 K2 R3 ; R10["y"] := R3
	7	[1061]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	8	[1067]	NEWTABLE 	R9 0 4 ; R9 := {}
	9	[1069]	GETTABLE 	R10 R8 K1 ; R10 := R8["x"]
	10	[1069]	SETTABLE 	R9 K4 R10 ; R9["X"] := R10
	11	[1070]	GETTABLE 	R10 R8 K2 ; R10 := R8["y"]
	12	[1070]	SETTABLE 	R9 K5 R10 ; R9["Y"] := R10
	13	[1071]	SETTABLE 	R9 K6 R4 ; R9["W"] := R4
	14	[1072]	SETTABLE 	R9 K7 R5 ; R9["H"] := R5
	15	[1073]	SETTABLE 	R1 K3 R9 ; R1["Rect"] := R9
	16	[1075]	SETTABLE 	R1 K8 R6 ; R1["TopLeftAligned"] := R6
	17	[1076]	SETTABLE 	R1 K9 R7 ; R1["BottomAnchor"] := R7
	18	[1077]	RETURN   	R0 1 ; return 

function #22 <?:1079,1081> (11 instructions, 44 bytes at 0000021163190A20)
8 params, 17 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1080]	GETUPVAL 	R8 U0 ; R8 := U0
	2	[1080]	MOVE     	R9 R0 ; R9 := R0
	3	[1080]	MOVE     	R10 R1 ; R10 := R1
	4	[1080]	MOVE     	R11 R2 ; R11 := R2
	5	[1080]	MOVE     	R12 R3 ; R12 := R3
	6	[1080]	MOVE     	R13 R4 ; R13 := R4
	7	[1080]	MOVE     	R14 R5 ; R14 := R5
	8	[1080]	MOVE     	R15 R6 ; R15 := R6
	9	[1080]	MOVE     	R16 R7 ; R16 := R7
	10	[1080]	CALL     	R8 9 1 ; R8(R9,R10,R11,R12,R13,R14,R15,R16)
	11	[1081]	RETURN   	R0 1 ; return 

function #23 <?:1083,1100> (37 instructions, 148 bytes at 0000021163190B30)
4 params, 16 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[1084]	TEST     	R3 1 ; if R3 then PC := 4
	2	[1084]	JMP      	4 ; PC := 4
	3	[1084]	LOADK    	R3 := 0.000000
	4	[1086]	NEWTABLE 	R4 0 2 ; R4 := {}
	5	[1087]	SETTABLE 	R4 K0 K1 ; R4["CustomEntry"] := true
	6	[1088]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0x42b04007]
	7	[1088]	MOVE     	R7 R2 ; R7 := R2
	8	[1088]	OP_LOADBOOL	R8 1 0 ; R8 := true
	9	[1088]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	10	[1088]	SETTABLE 	R4 K2 R5 ; R4["LocalizedDesc"] := R5
	11	[1091]	SELF     	R5 R0 K4 ; R6 := R0; R5 := R0[0x91a24e4b]
	12	[1091]	MOVE     	R7 R1 ; R7 := R1
	13	[1091]	LOADK    	R8 := 12.000000
	14	[1091]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	15	[1093]	GETUPVAL 	R6 U0 ; R6 := U0
	16	[1093]	MOVE     	R7 R0 ; R7 := R0
	17	[1093]	MOVE     	R8 R4 ; R8 := R4
	18	[1094]	SELF     	R9 R0 K4 ; R10 := R0; R9 := R0[0x91a24e4b]
	19	[1094]	MOVE     	R11 R1 ; R11 := R1
	20	[1094]	LOADK    	R12 := 2.000000
	21	[1094]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	22	[1094]	MUL      	R10 R5 R3 ; R10 := R5 * R3
	23	[1094]	DIV      	R10 R10 K5 ; R10 := R10 / 2.000000
	24	[1094]	ADD      	R9 R9 R10 ; R9 := R9 + R10
	25	[1095]	SELF     	R10 R0 K4 ; R11 := R0; R10 := R0[0x91a24e4b]
	26	[1095]	MOVE     	R12 R1 ; R12 := R1
	27	[1095]	LOADK    	R13 := 3.000000
	28	[1095]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	29	[1096]	MOVE     	R11 R5 ; R11 := R5
	30	[1097]	SELF     	R12 R0 K4 ; R13 := R0; R12 := R0[0x91a24e4b]
	31	[1097]	MOVE     	R14 R1 ; R14 := R1
	32	[1097]	LOADK    	R15 := 13.000000
	33	[1097]	CALL     	R12 4 0 ; R12,... := R12(R13,R14,R15)
	34	[1093]	CALL     	R6 0 1 ; R6(R7,...)
	35	[1099]	GETGLOBAL	R6 K6 ; R6 := _T
	36	[1099]	SETTABLE 	R6 K7 R4 ; R6["InfoPopup_Data"] := R4
	37	[1100]	RETURN   	R0 1 ; return 

function #24 <?:1102,1104> (7 instructions, 28 bytes at 0000021163190E30)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1103]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[1103]	MOVE     	R5 R0 ; R5 := R0
	3	[1103]	MOVE     	R6 R1 ; R6 := R1
	4	[1103]	MOVE     	R7 R2 ; R7 := R2
	5	[1103]	MOVE     	R8 R3 ; R8 := R3
	6	[1103]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	7	[1104]	RETURN   	R0 1 ; return 

function #25 <?:1107,1129> (37 instructions, 148 bytes at 0000021163190F20)
4 params, 13 slots, 1 upvalue, 0 locals, 8 constants, 1 function
	1	[1108]	GETTABLE 	R4 R1 K0 ; R4 := R1["BundleTextureIndex"]
	2	[1108]	EQ       	1 R4 K1 ; if R4 == nil then PC := 15
	3	[1108]	JMP      	15 ; PC := 15
	4	[1108]	GETTABLE 	R4 R1 K2 ; R4 := R1["BundleTextures"]
	5	[1108]	EQ       	1 R4 K1 ; if R4 == nil then PC := 15
	6	[1108]	JMP      	15 ; PC := 15
	7	[1108]	GETTABLE 	R4 R1 K3 ; R4 := R1["mClipName"]
	8	[1108]	EQ       	1 R4 K1 ; if R4 == nil then PC := 15
	9	[1108]	JMP      	15 ; PC := 15
	10	[1108]	SELF     	R4 R0 K4 ; R5 := R0; R4 := R0[0xa7ec3e8a]
	11	[1108]	GETTABLE 	R6 R1 K3 ; R6 := R1["mClipName"]
	12	[1108]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	13	[1108]	TEST     	R4 1 ; if R4 then PC := 16
	14	[1108]	JMP      	16 ; PC := 16
	15	[1109]	RETURN   	R0 1 ; return 
	16	[1111]	GETGLOBAL	R4 K5 ; R4 := 0x25312c9b
	17	[1111]	MOVE     	R5 R0 ; R5 := R0
	18	[1111]	GETTABLE 	R6 R1 K3 ; R6 := R1["mClipName"]
	19	[1111]	LOADK    	R7 K6 ; R7 := ".ImageContainer.Image"
	20	[1111]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	21	[1111]	LOADK    	R7 := 0.000000
	22	[1111]	NEWTABLE 	R8 1 0 ; R8 := {}
	23	[1111]	LOADK    	R9 := 10.000000
	24	[1111]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	25	[1111]	NEWTABLE 	R9 1 0 ; R9 := {}
	26	[1111]	LOADK    	R10 := 0.000000
	27	[1111]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	28	[1111]	MOVE     	R10 R2 ; R10 := R2
	29	[1111]	MOVE     	R11 R3 ; R11 := R3
	30	[1128]	CLOSURE  	R12 0 ; R12 := closure(Function #1)
	31	[1128]	MOVE     	R0 R1 ; R0 := R1
	32	[1128]	MOVE     	R0 R0 ; R0 := R0
	33	[1128]	MOVE     	R0 R2 ; R0 := R2
	34	[1128]	GETUPVAL 	R0 U0 ; R0 := U0
	35	[1128]	MOVE     	R0 R3 ; R0 := R3
	36	[1111]	CALL     	R4 9 1 ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
	37	[1129]	RETURN   	R0 1 ; return 

function #26 <?:1131,1293> (608 instructions, 2432 bytes at 0000021163191880)
4 params, 54 slots, 7 upvalues, 0 locals, 108 constants, 0 functions
	1	[1132]	GETTABLE 	R4 R2 K0 ; R4 := R2["mClipName"]
	2	[1133]	EQ       	1 R4 K1 ; if R4 == nil then PC := 9
	3	[1133]	JMP      	9 ; PC := 9
	4	[1133]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0xa7ec3e8a]
	5	[1133]	MOVE     	R7 R4 ; R7 := R4
	6	[1133]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	7	[1133]	TEST     	R5 1 ; if R5 then PC := 10
	8	[1133]	JMP      	10 ; PC := 10
	9	[1134]	RETURN   	R0 1 ; return 
	10	[1137]	GETTABLE 	R5 R1 K3 ; R5 := R1["UpdateColors"]
	11	[1137]	EQ       	1 R5 K1 ; if R5 == nil then PC := 19
	12	[1137]	JMP      	19 ; PC := 19
	13	[1138]	SELF     	R5 R1 K4 ; R6 := R1; R5 := R1[0x087cbd3f]
	14	[1138]	MOVE     	R7 R2 ; R7 := R2
	15	[1138]	GETTABLE 	R8 R3 K5 ; R8 := R3["IsFocused"]
	16	[1138]	GETTABLE 	R9 R3 K6 ; R9 := R3["IsSelected"]
	17	[1138]	GETTABLE 	R10 R3 K7 ; R10 := R3["IgnoreCount"]
	18	[1138]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	19	[1141]	GETUPVAL 	R5 U0 ; R5 := U0
	20	[1141]	GETTABLE 	R5 R5 K8 ; R5 := R5[0x06d055f9]
	21	[1141]	GETTABLE 	R6 R3 K9 ; R6 := R3["FromRedraw"]
	22	[1141]	LOADK    	R7 := 0.000000
	23	[1141]	LOADK    	R8 K10 ; R8 := 0.200000
	24	[1141]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	25	[1142]	GETUPVAL 	R6 U0 ; R6 := U0
	26	[1142]	GETTABLE 	R6 R6 K8 ; R6 := R6[0x06d055f9]
	27	[1142]	GETTABLE 	R7 R3 K9 ; R7 := R3["FromRedraw"]
	28	[1142]	LOADK    	R8 := 0.000000
	29	[1142]	LOADK    	R9 K11 ; R9 := 0.010000
	30	[1142]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	31	[1143]	LOADK    	R7 := 2.000000
	32	[1144]	GETTABLE 	R8 R3 K5 ; R8 := R3["IsFocused"]
	33	[1145]	LOADK    	R9 := 1.000000
	34	[1146]	GETTABLE 	R10 R3 K13 ; R10 := R3["OffAlphaMultiplier"]
	35	[1146]	EQ       	1 R10 K1 ; if R10 == nil then PC := 38
	36	[1146]	JMP      	38 ; PC := 38
	37	[1147]	GETTABLE 	R9 R3 K13 ; R9 := R3["OffAlphaMultiplier"]
	38	[1149]	GETUPVAL 	R10 U0 ; R10 := U0
	39	[1149]	GETTABLE 	R10 R10 K8 ; R10 := R10[0x06d055f9]
	40	[1149]	MOVE     	R11 R8 ; R11 := R8
	41	[1149]	LOADK    	R12 := 100.000000
	42	[1149]	GETUPVAL 	R13 U0 ; R13 := U0
	43	[1149]	GETTABLE 	R13 R13 K8 ; R13 := R13[0x06d055f9]
	44	[1149]	GETTABLE 	R14 R2 K14 ; R14 := R2["NotOwned"]
	45	[1149]	LOADK    	R15 := 25.000000
	46	[1149]	LOADK    	R16 := 85.000000
	47	[1149]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	48	[1149]	MUL      	R13 R13 R9 ; R13 := R13 * R9
	49	[1149]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	50	[1150]	GETUPVAL 	R11 U0 ; R11 := U0
	51	[1150]	GETTABLE 	R11 R11 K8 ; R11 := R11[0x06d055f9]
	52	[1150]	TESTSET  	R12 R8 1 ; if R8 then PC := 55 else R12 := R8 
	53	[1150]	JMP      	55 ; PC := 55
	54	[1150]	GETTABLE 	R12 R3 K15 ; R12 := R3["DisableSaturation"]
	55	[1150]	LOADK    	R13 := 0.000000
	56	[1150]	GETUPVAL 	R14 U0 ; R14 := U0
	57	[1150]	GETTABLE 	R14 R14 K8 ; R14 := R14[0x06d055f9]
	58	[1150]	GETTABLE 	R15 R2 K14 ; R15 := R2["NotOwned"]
	59	[1150]	LOADK    	R16 := -50.000000
	60	[1150]	LOADK    	R17 := 0.000000
	61	[1150]	CALL     	R14 4 0 ; R14,... := R14(R15,R16,R17)
	62	[1150]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	63	[1151]	SELF     	R12 R0 K16 ; R13 := R0; R12 := R0[0xaf5300dc]
	64	[1151]	MOVE     	R14 R4 ; R14 := R4
	65	[1151]	LOADK    	R15 K17 ; R15 := ".ImageContainer.Image"
	66	[1151]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	67	[1151]	CALL     	R12 3 1 ; R12(R13,R14)
	68	[1152]	GETGLOBAL	R12 K18 ; R12 := 0x25312c9b
	69	[1152]	MOVE     	R13 R0 ; R13 := R0
	70	[1152]	MOVE     	R14 R4 ; R14 := R4
	71	[1152]	LOADK    	R15 K17 ; R15 := ".ImageContainer.Image"
	72	[1152]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	73	[1152]	MOVE     	R15 R7 ; R15 := R7
	74	[1152]	NEWTABLE 	R16 2 0 ; R16 := {}
	75	[1153]	LOADK    	R17 K19 ; R17 := "adjustcolor_saturation"
	76	[1153]	LOADK    	R18 K20 ; R18 := "_alpha"
	77	[1153]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	78	[1153]	NEWTABLE 	R17 2 0 ; R17 := {}
	79	[1153]	MOVE     	R18 R11 ; R18 := R11
	80	[1153]	MOVE     	R19 R10 ; R19 := R10
	81	[1153]	SETLIST  	R17 2 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
	82	[1153]	MOVE     	R18 R5 ; R18 := R5
	83	[1153]	MOVE     	R19 R6 ; R19 := R6
	84	[1152]	CALL     	R12 8 1 ; R12(R13,R14,R15,R16,R17,R18,R19)
	85	[1155]	GETUPVAL 	R12 U0 ; R12 := U0
	86	[1155]	GETTABLE 	R12 R12 K8 ; R12 := R12[0x06d055f9]
	87	[1155]	MOVE     	R13 R8 ; R13 := R8
	88	[1155]	LOADK    	R14 := 115.000000
	89	[1155]	LOADK    	R15 := 100.000000
	90	[1155]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	91	[1156]	NEWTABLE 	R13 2 0 ; R13 := {}
	92	[1156]	LOADK    	R14 K21 ; R14 := "_xscale"
	93	[1156]	LOADK    	R15 K22 ; R15 := "_yscale"
	94	[1156]	SETLIST  	R13 2 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 2
	95	[1157]	NEWTABLE 	R14 2 0 ; R14 := {}
	96	[1157]	MOVE     	R15 R12 ; R15 := R12
	97	[1157]	MOVE     	R16 R12 ; R16 := R12
	98	[1157]	SETLIST  	R14 2 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 2
	99	[1159]	GETGLOBAL	R15 K18 ; R15 := 0x25312c9b
	100	[1159]	MOVE     	R16 R0 ; R16 := R0
	101	[1159]	MOVE     	R17 R4 ; R17 := R4
	102	[1159]	LOADK    	R18 K23 ; R18 := ".NameBg"
	103	[1159]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	104	[1159]	LOADK    	R18 := 0.000000
	105	[1159]	NEWTABLE 	R19 1 0 ; R19 := {}
	106	[1159]	LOADK    	R20 := 10.000000
	107	[1159]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	108	[1159]	NEWTABLE 	R20 0 0 ; R20 := {}
	109	[1159]	GETUPVAL 	R21 U0 ; R21 := U0
	110	[1159]	GETTABLE 	R21 R21 K8 ; R21 := R21[0x06d055f9]
	111	[1159]	GETTABLE 	R22 R3 K5 ; R22 := R3["IsFocused"]
	112	[1159]	LOADK    	R23 := 100.000000
	113	[1159]	LOADK    	R24 := 65.000000
	114	[1159]	CALL     	R21 4 0 ; R21,... := R21(R22,R23,R24)
	115	[1159]	SETLIST  	R20 0 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 0
	116	[1159]	MOVE     	R21 R5 ; R21 := R5
	117	[1159]	MOVE     	R22 R6 ; R22 := R6
	118	[1159]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	119	[1160]	GETGLOBAL	R15 K18 ; R15 := 0x25312c9b
	120	[1160]	MOVE     	R16 R0 ; R16 := R0
	121	[1160]	MOVE     	R17 R4 ; R17 := R4
	122	[1160]	LOADK    	R18 K24 ; R18 := ".ImageContainer"
	123	[1160]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	124	[1160]	MOVE     	R18 R7 ; R18 := R7
	125	[1160]	MOVE     	R19 R13 ; R19 := R13
	126	[1160]	MOVE     	R20 R14 ; R20 := R14
	127	[1160]	MOVE     	R21 R5 ; R21 := R5
	128	[1160]	MOVE     	R22 R6 ; R22 := R6
	129	[1160]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	130	[1161]	GETTABLE 	R15 R3 K25 ; R15 := R3["HideLockedOnFocus"]
	131	[1161]	TEST     	R15 0 ; if not R15 then PC := 153
	132	[1161]	JMP      	153 ; PC := 153
	133	[1162]	GETGLOBAL	R15 K18 ; R15 := 0x25312c9b
	134	[1162]	MOVE     	R16 R0 ; R16 := R0
	135	[1162]	MOVE     	R17 R4 ; R17 := R4
	136	[1162]	LOADK    	R18 K26 ; R18 := ".Locked"
	137	[1162]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	138	[1162]	MOVE     	R18 R7 ; R18 := R7
	139	[1162]	NEWTABLE 	R19 1 0 ; R19 := {}
	140	[1162]	LOADK    	R20 := 10.000000
	141	[1162]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	142	[1162]	NEWTABLE 	R20 0 0 ; R20 := {}
	143	[1162]	GETUPVAL 	R21 U0 ; R21 := U0
	144	[1162]	GETTABLE 	R21 R21 K8 ; R21 := R21[0x06d055f9]
	145	[1162]	GETTABLE 	R22 R3 K5 ; R22 := R3["IsFocused"]
	146	[1162]	LOADK    	R23 := 0.000000
	147	[1162]	LOADK    	R24 := 100.000000
	148	[1162]	CALL     	R21 4 0 ; R21,... := R21(R22,R23,R24)
	149	[1162]	SETLIST  	R20 0 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 0
	150	[1162]	MOVE     	R21 R5 ; R21 := R5
	151	[1162]	MOVE     	R22 R6 ; R22 := R6
	152	[1162]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	153	[1165]	LOADK    	R15 := 0.000000
	154	[1166]	LOADK    	R16 := 0.000000
	155	[1167]	GETGLOBAL	R17 K27 ; R17 := 0x7b998233
	156	[1167]	GETTABLE 	R18 R2 K28 ; R18 := R2["mMod"]
	157	[1167]	CALL     	R17 2 2 ; R17 := R17(R18)
	158	[1167]	TEST     	R17 1 ; if R17 then PC := 356
	159	[1167]	JMP      	356 ; PC := 356
	160	[1168]	GETUPVAL 	R17 U0 ; R17 := U0
	161	[1168]	GETTABLE 	R17 R17 K8 ; R17 := R17[0x06d055f9]
	162	[1168]	GETTABLE 	R18 R3 K5 ; R18 := R3["IsFocused"]
	163	[1168]	LOADK    	R19 := 80.000000
	164	[1168]	GETTABLE 	R20 R1 K29 ; R20 := R1["ModScale"]
	165	[1168]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	166	[1171]	GETUPVAL 	R18 U0 ; R18 := U0
	167	[1171]	GETTABLE 	R18 R18 K8 ; R18 := R18[0x06d055f9]
	168	[1171]	GETTABLE 	R19 R2 K30 ; R19 := R2["mBaseClipName"]
	169	[1171]	EQ       	0 R19 K1 ; if R19 ~= nil then PC := 172
	170	[1171]	JMP      	172 ; PC := 172
	171	[1171]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 172
	172	[1171]	OP_LOADBOOL	R19 1 0 ; R19 := true
	173	[1171]	GETTABLE 	R20 R2 K30 ; R20 := R2["mBaseClipName"]
	174	[1171]	MOVE     	R21 R4 ; R21 := R4
	175	[1171]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	176	[1172]	GETTABLE 	R19 R3 K5 ; R19 := R3["IsFocused"]
	177	[1172]	TEST     	R19 0 ; if not R19 then PC := 276
	178	[1172]	JMP      	276 ; PC := 276
	179	[1174]	GETTABLE 	R19 R3 K31 ; R19 := R3["ZoomYShift"]
	180	[1174]	EQ       	1 R19 K1 ; if R19 == nil then PC := 184
	181	[1174]	JMP      	184 ; PC := 184
	182	[1175]	GETTABLE 	R16 R3 K31 ; R16 := R3["ZoomYShift"]
	183	[1175]	JMP      	226 ; PC := 226
	184	[1176]	GETTABLE 	R19 R1 K32 ; R19 := R1["Horizontal"]
	185	[1176]	TEST     	R19 1 ; if R19 then PC := 226
	186	[1176]	JMP      	226 ; PC := 226
	187	[1177]	GETTABLE 	R19 R1 K33 ; R19 := R1["mInitialY"]
	188	[1177]	GETTABLE 	R20 R1 K34 ; R20 := R1["ElementHeight"]
	189	[1177]	DIV      	R20 R20 K35 ; R20 := R20 / 2.000000
	190	[1177]	SUB      	R19 R19 R20 ; R19 := R19 - R20
	191	[1178]	SELF     	R20 R0 K36 ; R21 := R0; R20 := R0[0x91a24e4b]
	192	[1178]	MOVE     	R22 R4 ; R22 := R4
	193	[1178]	LOADK    	R23 := 1.000000
	194	[1178]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	195	[1179]	GETTABLE 	R21 R1 K37 ; R21 := R1["mRows"]
	196	[1179]	GETTABLE 	R22 R1 K38 ; R22 := R1["mRowSeparation"]
	197	[1179]	MUL      	R21 R21 R22 ; R21 := R21 * R22
	198	[1179]	GETUPVAL 	R22 U0 ; R22 := U0
	199	[1179]	GETTABLE 	R22 R22 K8 ; R22 := R22[0x06d055f9]
	200	[1179]	GETTABLE 	R23 R1 K39 ; R23 := R1["ElementDimBuffer"]
	201	[1179]	EQ       	0 R23 K1 ; if R23 ~= nil then PC := 204
	202	[1179]	JMP      	204 ; PC := 204
	203	[1179]	OP_LOADBOOL	R23 0 1 ; R23 := false; PC := 204
	204	[1179]	OP_LOADBOOL	R23 1 0 ; R23 := true
	205	[1179]	GETTABLE 	R24 R1 K39 ; R24 := R1["ElementDimBuffer"]
	206	[1179]	LOADK    	R25 := 0.000000
	207	[1179]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	208	[1179]	SUB      	R21 R21 R22 ; R21 := R21 - R22
	209	[1180]	GETUPVAL 	R22 U1 ; R22 := U1
	210	[1180]	GETTABLE 	R22 R22 K40 ; R22 := R22["MAX_BACKGROUND_HEIGHT"]
	211	[1180]	DIV      	R22 R22 K35 ; R22 := R22 / 2.000000
	212	[1180]	ADD      	R22 R22 K41 ; R22 := R22 + 10.000000
	213	[1181]	ADD      	R23 R19 R22 ; R23 := R19 + R22
	214	[1181]	LT       	0 R20 R23 ; if R20 >= R23 then PC := 219
	215	[1181]	JMP      	219 ; PC := 219
	216	[1182]	SUB      	R23 R20 R19 ; R23 := R20 - R19
	217	[1182]	SUB      	R16 R22 R23 ; R16 := R22 - R23
	218	[1182]	JMP      	226 ; PC := 226
	219	[1183]	ADD      	R23 R19 R21 ; R23 := R19 + R21
	220	[1183]	SUB      	R23 R23 R22 ; R23 := R23 - R22
	221	[1183]	LT       	0 R23 R20 ; if R23 >= R20 then PC := 226
	222	[1183]	JMP      	226 ; PC := 226
	223	[1184]	ADD      	R23 R19 R21 ; R23 := R19 + R21
	224	[1184]	SUB      	R23 R23 R20 ; R23 := R23 - R20
	225	[1184]	SUB      	R16 R23 R22 ; R16 := R23 - R22
	226	[1188]	GETTABLE 	R23 R3 K42 ; R23 := R3["ZoomXShift"]
	227	[1188]	EQ       	1 R23 K1 ; if R23 == nil then PC := 231
	228	[1188]	JMP      	231 ; PC := 231
	229	[1189]	GETTABLE 	R15 R3 K42 ; R15 := R3["ZoomXShift"]
	230	[1189]	JMP      	259 ; PC := 259
	231	[1190]	GETTABLE 	R23 R1 K32 ; R23 := R1["Horizontal"]
	232	[1190]	TEST     	R23 0 ; if not R23 then PC := 259
	233	[1190]	JMP      	259 ; PC := 259
	234	[1191]	GETTABLE 	R23 R1 K43 ; R23 := R1["mInitialX"]
	235	[1191]	GETTABLE 	R24 R1 K44 ; R24 := R1["ElementWidth"]
	236	[1191]	SUB      	R23 R23 R24 ; R23 := R23 - R24
	237	[1192]	SELF     	R24 R0 K36 ; R25 := R0; R24 := R0[0x91a24e4b]
	238	[1192]	MOVE     	R26 R4 ; R26 := R4
	239	[1192]	LOADK    	R27 := 0.000000
	240	[1192]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	241	[1193]	GETTABLE 	R25 R1 K45 ; R25 := R1["Height"]
	242	[1194]	GETUPVAL 	R26 U1 ; R26 := U1
	243	[1194]	GETTABLE 	R26 R26 K46 ; R26 := R26["MAX_BACKGROUND_WIDTH"]
	244	[1194]	DIV      	R26 R26 K35 ; R26 := R26 / 2.000000
	245	[1194]	ADD      	R26 R26 K41 ; R26 := R26 + 10.000000
	246	[1195]	ADD      	R27 R23 R26 ; R27 := R23 + R26
	247	[1195]	LT       	0 R24 R27 ; if R24 >= R27 then PC := 252
	248	[1195]	JMP      	252 ; PC := 252
	249	[1196]	SUB      	R27 R24 R23 ; R27 := R24 - R23
	250	[1196]	SUB      	R15 R26 R27 ; R15 := R26 - R27
	251	[1196]	JMP      	259 ; PC := 259
	252	[1197]	ADD      	R27 R23 R25 ; R27 := R23 + R25
	253	[1197]	SUB      	R27 R27 R26 ; R27 := R27 - R26
	254	[1197]	LT       	0 R27 R24 ; if R27 >= R24 then PC := 259
	255	[1197]	JMP      	259 ; PC := 259
	256	[1198]	ADD      	R27 R23 R25 ; R27 := R23 + R25
	257	[1198]	SUB      	R27 R27 R24 ; R27 := R27 - R24
	258	[1198]	SUB      	R15 R27 R26 ; R15 := R27 - R26
	259	[1202]	GETGLOBAL	R27 K48 ; R27 := 0x03f57322
	260	[1202]	GETGLOBAL	R28 K49 ; R28 := 0x38f10e85
	261	[1202]	MOVE     	R29 R0 ; R29 := R0
	262	[1202]	MOVE     	R30 R18 ; R30 := R18
	263	[1202]	LOADK    	R31 K50 ; R31 := ".getDepth"
	264	[1202]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	265	[1202]	CALL     	R28 3 0 ; R28,... := R28(R29,R30)
	266	[1202]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	267	[1202]	SETTABLE 	R2 K47 R27 ; R2["InitDepth"] := R27
	268	[1203]	GETGLOBAL	R27 K49 ; R27 := 0x38f10e85
	269	[1203]	MOVE     	R28 R0 ; R28 := R0
	270	[1203]	MOVE     	R29 R18 ; R29 := R18
	271	[1203]	LOADK    	R30 K51 ; R30 := ".swapDepths"
	272	[1203]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	273	[1203]	LOADK    	R30 := 3000.000000
	274	[1203]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	275	[1203]	JMP      	287 ; PC := 287
	276	[1204]	GETTABLE 	R27 R2 K47 ; R27 := R2["InitDepth"]
	277	[1204]	EQ       	1 R27 K1 ; if R27 == nil then PC := 287
	278	[1204]	JMP      	287 ; PC := 287
	279	[1206]	GETGLOBAL	R27 K49 ; R27 := 0x38f10e85
	280	[1206]	MOVE     	R28 R0 ; R28 := R0
	281	[1206]	MOVE     	R29 R18 ; R29 := R18
	282	[1206]	LOADK    	R30 K51 ; R30 := ".swapDepths"
	283	[1206]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	284	[1206]	GETTABLE 	R30 R2 K47 ; R30 := R2["InitDepth"]
	285	[1206]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	286	[1207]	SETTABLE 	R2 K47 K1 ; R2["InitDepth"] := nil
	287	[1209]	GETGLOBAL	R27 K18 ; R27 := 0x25312c9b
	288	[1209]	MOVE     	R28 R0 ; R28 := R0
	289	[1209]	MOVE     	R29 R4 ; R29 := R4
	290	[1209]	LOADK    	R30 K52 ; R30 := ".Mod"
	291	[1209]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	292	[1209]	MOVE     	R30 R7 ; R30 := R7
	293	[1209]	NEWTABLE 	R31 2 0 ; R31 := {}
	294	[1209]	LOADK    	R32 := 5.000000
	295	[1209]	LOADK    	R33 := 6.000000
	296	[1209]	SETLIST  	R31 2 1 ; R31[(1-1)*FPF+i] := R(31+i), 1 <= i <= 2
	297	[1209]	NEWTABLE 	R32 2 0 ; R32 := {}
	298	[1209]	MOVE     	R33 R17 ; R33 := R17
	299	[1209]	MOVE     	R34 R17 ; R34 := R17
	300	[1209]	SETLIST  	R32 2 1 ; R32[(1-1)*FPF+i] := R(32+i), 1 <= i <= 2
	301	[1209]	MOVE     	R33 R5 ; R33 := R5
	302	[1209]	MOVE     	R34 R6 ; R34 := R6
	303	[1209]	CALL     	R27 8 1 ; R27(R28,R29,R30,R31,R32,R33,R34)
	304	[1210]	LOADNIL  	R27 R27 ; R27 := nil
	305	[1211]	GETTABLE 	R28 R3 K53 ; R28 := R3["DepthTest"]
	306	[1211]	TEST     	R28 0 ; if not R28 then PC := 316
	307	[1211]	JMP      	316 ; PC := 316
	308	[1212]	GETUPVAL 	R28 U0 ; R28 := U0
	309	[1212]	GETTABLE 	R28 R28 K8 ; R28 := R28[0x06d055f9]
	310	[1212]	GETTABLE 	R29 R1 K32 ; R29 := R1["Horizontal"]
	311	[1212]	LOADK    	R30 := 3.000000
	312	[1212]	LOADK    	R31 := 1.000000
	313	[1212]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	314	[1212]	MOVE     	R27 R28 ; R27 := R28
	315	[1212]	JMP      	323 ; PC := 323
	316	[1214]	GETUPVAL 	R28 U0 ; R28 := U0
	317	[1214]	GETTABLE 	R28 R28 K8 ; R28 := R28[0x06d055f9]
	318	[1214]	GETTABLE 	R29 R1 K32 ; R29 := R1["Horizontal"]
	319	[1214]	LOADK    	R30 := 4.000000
	320	[1214]	LOADK    	R31 := 2.000000
	321	[1214]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	322	[1214]	MOVE     	R27 R28 ; R27 := R28
	323	[1217]	GETTABLE 	R28 R3 K54 ; R28 := R3["NoZoomedVisRange"]
	324	[1217]	TEST     	R28 0 ; if not R28 then PC := 336
	325	[1217]	JMP      	336 ; PC := 336
	326	[1218]	GETUPVAL 	R28 U1 ; R28 := U1
	327	[1218]	GETTABLE 	R28 R28 K55 ; R28 := R28[0x7b21de70]
	328	[1218]	GETTABLE 	R29 R2 K28 ; R29 := R2["mMod"]
	329	[1218]	GETTABLE 	R30 R2 K28 ; R30 := R2["mMod"]
	330	[1218]	GETTABLE 	R30 R30 K0 ; R30 := R30["mClipName"]
	331	[1218]	LOADK    	R31 K56 ; R31 := ".Card"
	332	[1218]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	333	[1218]	GETTABLE 	R31 R3 K5 ; R31 := R3["IsFocused"]
	334	[1218]	NOT      	R31 R31 ; R31 := not R31
	335	[1218]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	336	[1220]	GETUPVAL 	R28 U1 ; R28 := U1
	337	[1220]	GETTABLE 	R28 R28 K57 ; R28 := R28[0x37970f97]
	338	[1220]	GETTABLE 	R29 R2 K28 ; R29 := R2["mMod"]
	339	[1220]	GETTABLE 	R30 R2 K28 ; R30 := R2["mMod"]
	340	[1220]	GETTABLE 	R30 R30 K0 ; R30 := R30["mClipName"]
	341	[1220]	LOADK    	R31 K56 ; R31 := ".Card"
	342	[1220]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	343	[1220]	GETTABLE 	R31 R3 K5 ; R31 := R3["IsFocused"]
	344	[1220]	GETUPVAL 	R32 U0 ; R32 := U0
	345	[1220]	GETTABLE 	R32 R32 K8 ; R32 := R32[0x06d055f9]
	346	[1220]	GETTABLE 	R33 R3 K9 ; R33 := R3["FromRedraw"]
	347	[1220]	LOADK    	R34 := 0.000000
	348	[1220]	LOADNIL  	R35 R35 ; R35 := nil
	349	[1220]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	350	[1220]	MOVE     	R33 R15 ; R33 := R15
	351	[1220]	MOVE     	R34 R16 ; R34 := R16
	352	[1220]	LOADNIL  	R35 R35 ; R35 := nil
	353	[1220]	MOVE     	R36 R27 ; R36 := R27
	354	[1220]	CALL     	R28 9 1 ; R28(R29,R30,R31,R32,R33,R34,R35,R36)
	355	[1220]	JMP      	468 ; PC := 468
	356	[1221]	GETTABLE 	R28 R3 K58 ; R28 := R3["DisableBundleCycle"]
	357	[1221]	TEST     	R28 1 ; if R28 then PC := 468
	358	[1221]	JMP      	468 ; PC := 468
	359	[1221]	GETGLOBAL	R28 K27 ; R28 := 0x7b998233
	360	[1221]	GETTABLE 	R29 R2 K59 ; R29 := R2["Category"]
	361	[1221]	CALL     	R28 2 2 ; R28 := R28(R29)
	362	[1221]	TEST     	R28 1 ; if R28 then PC := 468
	363	[1221]	JMP      	468 ; PC := 468
	364	[1221]	GETTABLE 	R28 R2 K59 ; R28 := R2["Category"]
	365	[1221]	EQ       	0 R28 K61 ; if R28 ~= 9.000000 then PC := 468
	366	[1221]	JMP      	468 ; PC := 468
	367	[1221]	GETGLOBAL	R28 K27 ; R28 := 0x7b998233
	368	[1221]	GETTABLE 	R29 R2 K62 ; R29 := R2["StoreItem"]
	369	[1221]	CALL     	R28 2 2 ; R28 := R28(R29)
	370	[1221]	TEST     	R28 1 ; if R28 then PC := 468
	371	[1221]	JMP      	468 ; PC := 468
	372	[1222]	GETTABLE 	R28 R3 K5 ; R28 := R3["IsFocused"]
	373	[1222]	TEST     	R28 0 ; if not R28 then PC := 452
	374	[1222]	JMP      	452 ; PC := 452
	375	[1223]	GETTABLE 	R28 R2 K62 ; R28 := R2["StoreItem"]
	376	[1223]	SELF     	R28 R28 K63 ; R29 := R28; R28 := R28[0x7b060e36]
	377	[1223]	CALL     	R28 2 2 ; R28 := R28(R29)
	378	[1224]	GETTABLE 	R29 R2 K62 ; R29 := R2["StoreItem"]
	379	[1224]	SELF     	R29 R29 K64 ; R30 := R29; R29 := R29[0x19865272]
	380	[1224]	CALL     	R29 2 2 ; R29 := R29(R30)
	381	[1224]	EQ       	1 R29 K65 ; if R29 == "" then PC := 389
	382	[1224]	JMP      	389 ; PC := 389
	383	[1224]	GETUPVAL 	R29 U2 ; R29 := U2
	384	[1224]	GETTABLE 	R29 R29 K66 ; R29 := R29[0x9df9be7e]
	385	[1224]	GETTABLE 	R30 R2 K62 ; R30 := R2["StoreItem"]
	386	[1224]	CALL     	R29 2 2 ; R29 := R29(R30)
	387	[1224]	EQ       	0 R29 K67 ; if R29 ~= "MARKET" then PC := 390
	388	[1224]	JMP      	390 ; PC := 390
	389	[1224]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 390
	390	[1224]	OP_LOADBOOL	R29 1 0 ; R29 := true
	391	[1225]	TEST     	R29 1 ; if R29 then PC := 468
	392	[1225]	JMP      	468 ; PC := 468
	393	[1225]	LEN      	R30 R28 ; R30 := # R28
	394	[1225]	LT       	0 K68 R30 ; if 0.000000 >= R30 then PC := 468
	395	[1225]	JMP      	468 ; PC := 468
	396	[1226]	GETGLOBAL	R30 K27 ; R30 := 0x7b998233
	397	[1226]	GETTABLE 	R31 R2 K69 ; R31 := R2["BundleTextures"]
	398	[1226]	CALL     	R30 2 2 ; R30 := R30(R31)
	399	[1226]	TEST     	R30 0 ; if not R30 then PC := 438
	400	[1226]	JMP      	438 ; PC := 438
	401	[1227]	NEWTABLE 	R30 1 0 ; R30 := {}
	402	[1227]	NEWTABLE 	R31 0 2 ; R31 := {}
	403	[1227]	GETTABLE 	R32 R2 K71 ; R32 := R2["Icon"]
	404	[1227]	SETTABLE 	R31 K70 R32 ; R31["Texture"] := R32
	405	[1227]	GETTABLE 	R32 R2 K72 ; R32 := R2["Themed"]
	406	[1227]	SETTABLE 	R31 K72 R32 ; R31["Themed"] := R32
	407	[1227]	SETLIST  	R30 1 1 ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
	408	[1227]	SETTABLE 	R2 K69 R30 ; R2["BundleTextures"] := R30
	409	[1228]	LOADK    	R30 := 1.000000
	410	[1228]	LEN      	R31 R28 ; R31 := # R28
	411	[1228]	LOADK    	R32 := 1.000000
	412	[1228]	FORPREP  	R30 437 ; R30 -= R32; PC := 437
	413	[1229]	GETTABLE 	R34 R28 R33 ; R34 := R28[R33]
	414	[1229]	GETTABLE 	R34 R34 K73 ; R34 := R34["mTypeName"]
	415	[1230]	GETGLOBAL	R35 K27 ; R35 := 0x7b998233
	416	[1230]	MOVE     	R36 R34 ; R36 := R34
	417	[1230]	CALL     	R35 2 2 ; R35 := R35(R36)
	418	[1230]	TEST     	R35 1 ; if R35 then PC := 437
	419	[1230]	JMP      	437 ; PC := 437
	420	[1231]	GETUPVAL 	R35 U3 ; R35 := U3
	421	[1231]	GETTABLE 	R35 R35 K74 ; R35 := R35[0x056dcf06]
	422	[1231]	MOVE     	R36 R34 ; R36 := R34
	423	[1231]	OP_LOADBOOL	R37 1 0 ; R37 := true
	424	[1231]	CALL     	R35 3 3 ; R35,R36 := R35(R36,R37)
	425	[1232]	GETGLOBAL	R37 K27 ; R37 := 0x7b998233
	426	[1232]	MOVE     	R38 R35 ; R38 := R35
	427	[1232]	CALL     	R37 2 2 ; R37 := R37(R38)
	428	[1232]	TEST     	R37 1 ; if R37 then PC := 437
	429	[1232]	JMP      	437 ; PC := 437
	430	[1233]	GETGLOBAL	R37 K75 ; R37 := 0x33bdd652
	431	[1233]	GETTABLE 	R37 R37 K76 ; R37 := R37[0x23d5322f]
	432	[1233]	GETTABLE 	R38 R2 K69 ; R38 := R2["BundleTextures"]
	433	[1233]	NEWTABLE 	R39 0 2 ; R39 := {}
	434	[1233]	SETTABLE 	R39 K70 R35 ; R39["Texture"] := R35
	435	[1233]	SETTABLE 	R39 K72 R36 ; R39["Themed"] := R36
	436	[1233]	CALL     	R37 3 1 ; R37(R38,R39)
	437	[1228]	FORLOOP  	R30 413 ; R30 += R32; if R30 <= R31 then begin PC := 413; R33 := R30 end
	438	[1238]	SETTABLE 	R2 K77 K78 ; R2["BundleTextureIndex"] := 1.000000
	439	[1239]	SELF     	R37 R0 K80 ; R38 := R0; R37 := R0[0x2ce15376]
	440	[1239]	MOVE     	R39 R4 ; R39 := R4
	441	[1239]	LOADK    	R40 K81 ; R40 := "ImageContainer.Image"
	442	[1239]	LOADK    	R41 := 12.000000
	443	[1239]	CALL     	R37 5 2 ; R37 := R37(R38,R39,R40,R41)
	444	[1239]	SETTABLE 	R2 K79 R37 ; R2["OriginalImageWidth"] := R37
	445	[1240]	GETUPVAL 	R37 U4 ; R37 := U4
	446	[1240]	MOVE     	R38 R0 ; R38 := R0
	447	[1240]	MOVE     	R39 R2 ; R39 := R2
	448	[1240]	LOADK    	R40 := 0.500000
	449	[1240]	LOADK    	R41 := 3.000000
	450	[1240]	CALL     	R37 5 1 ; R37(R38,R39,R40,R41)
	451	[1241]	JMP      	468 ; PC := 468
	452	[1243]	SELF     	R37 R0 K82 ; R38 := R0; R37 := R0[0x1cb415c1]
	453	[1243]	MOVE     	R39 R4 ; R39 := R4
	454	[1243]	LOADK    	R40 K17 ; R40 := ".ImageContainer.Image"
	455	[1243]	CONCAT   	R39 R39 R40 ; R39 := R39 .. R40
	456	[1243]	GETTABLE 	R40 R2 K71 ; R40 := R2["Icon"]
	457	[1243]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	458	[1244]	GETTABLE 	R37 R2 K79 ; R37 := R2["OriginalImageWidth"]
	459	[1244]	EQ       	1 R37 K1 ; if R37 == nil then PC := 468
	460	[1244]	JMP      	468 ; PC := 468
	461	[1245]	SELF     	R37 R0 K83 ; R38 := R0; R37 := R0[0xf64b7262]
	462	[1245]	MOVE     	R39 R4 ; R39 := R4
	463	[1245]	LOADK    	R40 K81 ; R40 := "ImageContainer.Image"
	464	[1245]	LOADK    	R41 := 12.000000
	465	[1245]	GETTABLE 	R42 R2 K79 ; R42 := R2["OriginalImageWidth"]
	466	[1245]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	467	[1246]	SETTABLE 	R2 K79 K1 ; R2["OriginalImageWidth"] := nil
	468	[1251]	GETTABLE 	R37 R3 K9 ; R37 := R3["FromRedraw"]
	469	[1251]	TEST     	R37 1 ; if R37 then PC := 547
	470	[1251]	JMP      	547 ; PC := 547
	471	[1252]	GETTABLE 	R37 R3 K5 ; R37 := R3["IsFocused"]
	472	[1252]	TEST     	R37 0 ; if not R37 then PC := 541
	473	[1252]	JMP      	541 ; PC := 541
	474	[1253]	GETUPVAL 	R37 U0 ; R37 := U0
	475	[1253]	GETTABLE 	R37 R37 K84 ; R37 := R37[0x659d451f]
	476	[1253]	GETGLOBAL	R38 K85 ; R38 := 0x0032441c
	477	[1253]	GETTABLE 	R38 R38 K86 ; R38 := R38["UISound_Focus"]
	478	[1253]	CALL     	R37 2 1 ; R37(R38)
	479	[1255]	GETTABLE 	R37 R3 K87 ; R37 := R3["ShowToolTip"]
	480	[1255]	TEST     	R37 0 ; if not R37 then PC := 497
	481	[1255]	JMP      	497 ; PC := 497
	482	[1255]	GETGLOBAL	R37 K27 ; R37 := 0x7b998233
	483	[1255]	GETTABLE 	R38 R2 K88 ; R38 := R2["ToolTip"]
	484	[1255]	CALL     	R37 2 2 ; R37 := R37(R38)
	485	[1255]	TEST     	R37 1 ; if R37 then PC := 497
	486	[1255]	JMP      	497 ; PC := 497
	487	[1255]	GETTABLE 	R37 R2 K88 ; R37 := R2["ToolTip"]
	488	[1255]	EQ       	1 R37 K65 ; if R37 == "" then PC := 497
	489	[1255]	JMP      	497 ; PC := 497
	490	[1256]	GETGLOBAL	R37 K89 ; R37 := _T
	491	[1256]	SELF     	R38 R0 K91 ; R39 := R0; R38 := R0[0x42b04007]
	492	[1256]	GETTABLE 	R40 R2 K88 ; R40 := R2["ToolTip"]
	493	[1256]	OP_LOADBOOL	R41 1 0 ; R41 := true
	494	[1256]	CALL     	R38 4 2 ; R38 := R38(R39,R40,R41)
	495	[1256]	SETTABLE 	R37 K90 R38 ; R37["gToolTip"] := R38
	496	[1256]	JMP      	547 ; PC := 547
	497	[1257]	GETTABLE 	R37 R3 K92 ; R37 := R3["ShowInfoPopup"]
	498	[1257]	TEST     	R37 0 ; if not R37 then PC := 547
	499	[1257]	JMP      	547 ; PC := 547
	500	[1258]	SELF     	R37 R0 K36 ; R38 := R0; R37 := R0[0x91a24e4b]
	501	[1258]	MOVE     	R39 R4 ; R39 := R4
	502	[1258]	LOADK    	R40 K93 ; R40 := ".RectangleBg"
	503	[1258]	CONCAT   	R39 R39 R40 ; R39 := R39 .. R40
	504	[1258]	LOADK    	R40 := 12.000000
	505	[1258]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	506	[1259]	GETGLOBAL	R38 K27 ; R38 := 0x7b998233
	507	[1259]	GETTABLE 	R39 R2 K28 ; R39 := R2["mMod"]
	508	[1259]	CALL     	R38 2 2 ; R38 := R38(R39)
	509	[1259]	TEST     	R38 1 ; if R38 then PC := 514
	510	[1259]	JMP      	514 ; PC := 514
	511	[1261]	GETUPVAL 	R38 U1 ; R38 := U1
	512	[1261]	GETTABLE 	R38 R38 K46 ; R38 := R38["MAX_BACKGROUND_WIDTH"]
	513	[1261]	MUL      	R37 R38 K94 ; R37 := R38 * 0.800000
	514	[1264]	GETUPVAL 	R38 U5 ; R38 := U5
	515	[1264]	MOVE     	R39 R0 ; R39 := R0
	516	[1264]	MOVE     	R40 R2 ; R40 := R2
	517	[1265]	SELF     	R41 R0 K36 ; R42 := R0; R41 := R0[0x91a24e4b]
	518	[1265]	MOVE     	R43 R4 ; R43 := R4
	519	[1265]	LOADK    	R44 := 2.000000
	520	[1265]	CALL     	R41 4 2 ; R41 := R41(R42,R43,R44)
	521	[1265]	ADD      	R41 R41 R15 ; R41 := R41 + R15
	522	[1266]	SELF     	R42 R0 K36 ; R43 := R0; R42 := R0[0x91a24e4b]
	523	[1266]	MOVE     	R44 R4 ; R44 := R4
	524	[1266]	LOADK    	R45 := 3.000000
	525	[1266]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	526	[1267]	MOVE     	R43 R37 ; R43 := R37
	527	[1268]	SELF     	R44 R0 K36 ; R45 := R0; R44 := R0[0x91a24e4b]
	528	[1268]	MOVE     	R46 R4 ; R46 := R4
	529	[1268]	LOADK    	R47 K93 ; R47 := ".RectangleBg"
	530	[1268]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	531	[1268]	LOADK    	R47 := 13.000000
	532	[1268]	CALL     	R44 4 0 ; R44,... := R44(R45,R46,R47)
	533	[1264]	CALL     	R38 0 1 ; R38(R39,...)
	534	[1270]	GETGLOBAL	R38 K96 ; R38 := LABEL_TYPE_CHECKMARK
	535	[1270]	SETTABLE 	R2 K95 R38 ; R2["TagType"] := R38
	536	[1271]	GETGLOBAL	R38 K89 ; R38 := _T
	537	[1271]	SETTABLE 	R38 K97 R2 ; R38["InfoPopup_Data"] := R2
	538	[1272]	GETGLOBAL	R38 K89 ; R38 := _T
	539	[1272]	SETTABLE 	R38 K98 R1 ; R38["InfoPopup_Grid"] := R1
	540	[1273]	JMP      	547 ; PC := 547
	541	[1275]	GETGLOBAL	R38 K89 ; R38 := _T
	542	[1275]	SETTABLE 	R38 K90 K1 ; R38["gToolTip"] := nil
	543	[1276]	GETGLOBAL	R38 K89 ; R38 := _T
	544	[1276]	SETTABLE 	R38 K97 K1 ; R38["InfoPopup_Data"] := nil
	545	[1277]	GETGLOBAL	R38 K89 ; R38 := _T
	546	[1277]	SETTABLE 	R38 K98 K1 ; R38["InfoPopup_Grid"] := nil
	547	[1281]	SELF     	R38 R0 K83 ; R39 := R0; R38 := R0[0xf64b7262]
	548	[1281]	MOVE     	R40 R4 ; R40 := R4
	549	[1281]	LOADK    	R41 K99 ; R41 := "CornerPiece"
	550	[1281]	LOADK    	R42 := 10.000000
	551	[1281]	GETUPVAL 	R43 U0 ; R43 := U0
	552	[1281]	GETTABLE 	R43 R43 K8 ; R43 := R43[0x06d055f9]
	553	[1281]	GETTABLE 	R44 R1 K100 ; R44 := R1["mUseCornerForSelected"]
	554	[1281]	TEST     	R44 0 ; if not R44 then PC := 557
	555	[1281]	JMP      	557 ; PC := 557
	556	[1281]	GETTABLE 	R44 R3 K6 ; R44 := R3["IsSelected"]
	557	[1281]	LOADK    	R45 := 100.000000
	558	[1281]	LOADK    	R46 := 0.000000
	559	[1281]	CALL     	R43 4 0 ; R43,... := R43(R44,R45,R46)
	560	[1281]	CALL     	R38 0 1 ; R38(R39,...)
	561	[1283]	GETTABLE 	R38 R3 K9 ; R38 := R3["FromRedraw"]
	562	[1283]	TEST     	R38 0 ; if not R38 then PC := 567
	563	[1283]	JMP      	567 ; PC := 567
	564	[1283]	GETTABLE 	R38 R3 K5 ; R38 := R3["IsFocused"]
	565	[1283]	TEST     	R38 1 ; if R38 then PC := 608
	566	[1283]	JMP      	608 ; PC := 608
	567	[1284]	GETGLOBAL	R38 K101 ; R38 := 0xcfc01047
	568	[1284]	GETTABLE 	R39 R2 K102 ; R39 := R2["Labels"]
	569	[1284]	CALL     	R38 2 4 ; R38,R39,R40 := R38(R39)
	570	[1284]	JMP      	606 ; PC := 606
	571	[1285]	GETTABLE 	R43 R42 K103 ; R43 := R42["mShowItemPrice"]
	572	[1285]	TEST     	R43 1 ; if R43 then PC := 606
	573	[1285]	JMP      	606 ; PC := 606
	574	[1286]	MOVE     	R43 R4 ; R43 := R4
	575	[1286]	LOADK    	R44 K104 ; R44 := ".TagContainer.Tag"
	576	[1286]	GETGLOBAL	R45 K105 ; R45 := 0x64fb1586
	577	[1286]	MOVE     	R46 R41 ; R46 := R41
	578	[1286]	CALL     	R45 2 2 ; R45 := R45(R46)
	579	[1286]	CONCAT   	R43 R43 R45 ; R43 := R43 .. R44 .. R45
	580	[1287]	GETTABLE 	R44 R42 K106 ; R44 := R42["HideInGrid"]
	581	[1287]	TEST     	R44 1 ; if R44 then PC := 588
	582	[1287]	JMP      	588 ; PC := 588
	583	[1287]	GETUPVAL 	R44 U6 ; R44 := U6
	584	[1287]	GETTABLE 	R45 R42 K107 ; R45 := R42["Type"]
	585	[1287]	GETTABLE 	R44 R44 R45 ; R44 := R44[R45]
	586	[1287]	TEST     	R44 1 ; if R44 then PC := 606
	587	[1287]	JMP      	606 ; PC := 606
	588	[1288]	GETGLOBAL	R44 K18 ; R44 := 0x25312c9b
	589	[1288]	MOVE     	R45 R0 ; R45 := R0
	590	[1288]	MOVE     	R46 R43 ; R46 := R43
	591	[1288]	MOVE     	R47 R7 ; R47 := R7
	592	[1288]	NEWTABLE 	R48 1 0 ; R48 := {}
	593	[1288]	LOADK    	R49 := 10.000000
	594	[1288]	SETLIST  	R48 1 1 ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 1
	595	[1288]	NEWTABLE 	R49 0 0 ; R49 := {}
	596	[1288]	GETUPVAL 	R50 U0 ; R50 := U0
	597	[1288]	GETTABLE 	R50 R50 K8 ; R50 := R50[0x06d055f9]
	598	[1288]	GETTABLE 	R51 R3 K5 ; R51 := R3["IsFocused"]
	599	[1288]	LOADK    	R52 := 0.000000
	600	[1288]	LOADK    	R53 := 0.000000
	601	[1288]	CALL     	R50 4 0 ; R50,... := R50(R51,R52,R53)
	602	[1288]	SETLIST  	R49 0 1 ; R49[(1-1)*FPF+i] := R(49+i), 1 <= i <= 0
	603	[1288]	MOVE     	R50 R5 ; R50 := R5
	604	[1288]	MOVE     	R51 R6 ; R51 := R6
	605	[1288]	CALL     	R44 8 1 ; R44(R45,R46,R47,R48,R49,R50,R51)
	606	[1284]	TFORLOOP 	R38 2 ; R41,R42 := R38(R39,R40); if R41 ~= nil then begin PC = 571; R40 := R41 end
	607	[1290]	JMP      	571 ; PC := 571
	608	[1293]	RETURN   	R0 1 ; return 

function #27 <?:1295,1297> (7 instructions, 28 bytes at 0000021163193A00)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1296]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[1296]	MOVE     	R5 R0 ; R5 := R0
	3	[1296]	MOVE     	R6 R1 ; R6 := R1
	4	[1296]	MOVE     	R7 R2 ; R7 := R2
	5	[1296]	MOVE     	R8 R3 ; R8 := R3
	6	[1296]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	7	[1297]	RETURN   	R0 1 ; return 

function #28 <?:1299,1318> (39 instructions, 156 bytes at 0000021163193AF0)
1 param, 8 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[1300]	GETTABLE 	R1 R0 K0 ; R1 := R0["ElementWidth"]
	2	[1300]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[1300]	JMP      	5 ; PC := 5
	4	[1301]	RETURN   	R0 1 ; return 
	5	[1304]	GETTABLE 	R1 R0 K2 ; R1 := R0["SkipReinitializePos"]
	6	[1304]	TEST     	R1 1 ; if R1 then PC := 11
	7	[1304]	JMP      	11 ; PC := 11
	8	[1305]	GETTABLE 	R1 R0 K0 ; R1 := R0["ElementWidth"]
	9	[1305]	DIV      	R1 R1 K4 ; R1 := R1 / 2.000000
	10	[1305]	SETTABLE 	R0 K3 R1 ; R0["mInitialX"] := R1
	11	[1308]	GETTABLE 	R1 R0 K5 ; R1 := R0["Width"]
	12	[1308]	GETTABLE 	R2 R0 K6 ; R2 := R0["ElementDimBuffer"]
	13	[1308]	ADD      	R1 R1 R2 ; R1 := R1 + R2
	14	[1309]	GETTABLE 	R2 R0 K0 ; R2 := R0["ElementWidth"]
	15	[1309]	GETTABLE 	R3 R0 K6 ; R3 := R0["ElementDimBuffer"]
	16	[1309]	ADD      	R2 R2 R3 ; R2 := R2 + R3
	17	[1310]	DIV      	R3 R1 R2 ; R3 := R1 / R2
	18	[1311]	MOD      	R4 R1 R2 ; R4 := R1 % R2
	19	[1312]	GETGLOBAL	R5 K7 ; R5 := 0x5bced4c4
	20	[1312]	GETTABLE 	R5 R5 K8 ; R5 := R5[0x55f27c30]
	21	[1312]	MOVE     	R6 R3 ; R6 := R3
	22	[1312]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[1312]	MOVE     	R3 R5 ; R3 := R5
	24	[1314]	GETUPVAL 	R5 U0 ; R5 := U0
	25	[1314]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x74a11ec6]
	26	[1314]	SUB      	R6 R3 K10 ; R6 := R3 - 1.000000
	27	[1314]	DIV      	R6 R4 R6 ; R6 := R4 / R6
	28	[1314]	CALL     	R5 2 2 ; R5 := R5(R6)
	29	[1315]	GETTABLE 	R6 R0 K0 ; R6 := R0["ElementWidth"]
	30	[1315]	ADD      	R6 R6 R5 ; R6 := R6 + R5
	31	[1315]	GETTABLE 	R7 R0 K6 ; R7 := R0["ElementDimBuffer"]
	32	[1315]	ADD      	R6 R6 R7 ; R6 := R6 + R7
	33	[1315]	SETTABLE 	R0 K11 R6 ; R0["mColumnSeparation"] := R6
	34	[1316]	SETTABLE 	R0 K12 R3 ; R0["mColumns"] := R3
	35	[1317]	GETTABLE 	R6 R0 K12 ; R6 := R0["mColumns"]
	36	[1317]	GETTABLE 	R7 R0 K14 ; R7 := R0["mRows"]
	37	[1317]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	38	[1317]	SETTABLE 	R0 K13 R6 ; R0["mVisibleElements"] := R6
	39	[1318]	RETURN   	R0 1 ; return 

function #29 <?:1320,1322> (4 instructions, 16 bytes at 0000021163193E20)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1321]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1321]	MOVE     	R2 R0 ; R2 := R0
	3	[1321]	CALL     	R1 2 1 ; R1(R2)
	4	[1322]	RETURN   	R0 1 ; return 

function #30 <?:1324,1343> (39 instructions, 156 bytes at 0000021163193EF0)
1 param, 8 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[1325]	GETTABLE 	R1 R0 K0 ; R1 := R0["ElementHeight"]
	2	[1325]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[1325]	JMP      	5 ; PC := 5
	4	[1326]	RETURN   	R0 1 ; return 
	5	[1329]	GETTABLE 	R1 R0 K2 ; R1 := R0["SkipReinitializePos"]
	6	[1329]	TEST     	R1 1 ; if R1 then PC := 11
	7	[1329]	JMP      	11 ; PC := 11
	8	[1330]	GETTABLE 	R1 R0 K0 ; R1 := R0["ElementHeight"]
	9	[1330]	DIV      	R1 R1 K4 ; R1 := R1 / 2.000000
	10	[1330]	SETTABLE 	R0 K3 R1 ; R0["mInitialY"] := R1
	11	[1333]	GETTABLE 	R1 R0 K5 ; R1 := R0["Height"]
	12	[1333]	GETTABLE 	R2 R0 K6 ; R2 := R0["ElementDimBuffer"]
	13	[1333]	ADD      	R1 R1 R2 ; R1 := R1 + R2
	14	[1334]	GETTABLE 	R2 R0 K0 ; R2 := R0["ElementHeight"]
	15	[1334]	GETTABLE 	R3 R0 K6 ; R3 := R0["ElementDimBuffer"]
	16	[1334]	ADD      	R2 R2 R3 ; R2 := R2 + R3
	17	[1335]	DIV      	R3 R1 R2 ; R3 := R1 / R2
	18	[1336]	MOD      	R4 R1 R2 ; R4 := R1 % R2
	19	[1337]	GETGLOBAL	R5 K7 ; R5 := 0x5bced4c4
	20	[1337]	GETTABLE 	R5 R5 K8 ; R5 := R5[0x55f27c30]
	21	[1337]	MOVE     	R6 R3 ; R6 := R3
	22	[1337]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[1337]	MOVE     	R3 R5 ; R3 := R5
	24	[1339]	GETUPVAL 	R5 U0 ; R5 := U0
	25	[1339]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x74a11ec6]
	26	[1339]	SUB      	R6 R3 K10 ; R6 := R3 - 1.000000
	27	[1339]	DIV      	R6 R4 R6 ; R6 := R4 / R6
	28	[1339]	CALL     	R5 2 2 ; R5 := R5(R6)
	29	[1340]	GETTABLE 	R6 R0 K0 ; R6 := R0["ElementHeight"]
	30	[1340]	ADD      	R6 R6 R5 ; R6 := R6 + R5
	31	[1340]	GETTABLE 	R7 R0 K6 ; R7 := R0["ElementDimBuffer"]
	32	[1340]	ADD      	R6 R6 R7 ; R6 := R6 + R7
	33	[1340]	SETTABLE 	R0 K11 R6 ; R0[0xcfc01047] := R6
	34	[1341]	SETTABLE 	R0 K12 R3 ; R0["mRows"] := R3
	35	[1342]	GETTABLE 	R6 R0 K14 ; R6 := R0["mColumns"]
	36	[1342]	GETTABLE 	R7 R0 K12 ; R7 := R0["mRows"]
	37	[1342]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	38	[1342]	SETTABLE 	R0 K13 R6 ; R0[0x67bc869f] := R6
	39	[1343]	RETURN   	R0 1 ; return 

function #31 <?:1345,1367> (51 instructions, 204 bytes at 00000211631941E0)
6 params, 13 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[1346]	OP_LOADBOOL	R6 0 0 ; R6 := false
	2	[1347]	GETTABLE 	R7 R0 K0 ; R7 := R0["Width"]
	3	[1347]	EQ       	1 R1 R7 ; if R1 == R7 then PC := 35
	4	[1347]	JMP      	35 ; PC := 35
	5	[1348]	OP_LOADBOOL	R6 1 0 ; R6 := true
	6	[1349]	EQ       	1 R4 K1 ; if R4 == nil then PC := 31
	7	[1349]	JMP      	31 ; PC := 31
	8	[1349]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	9	[1349]	MOVE     	R8 R3 ; R8 := R3
	10	[1349]	CALL     	R7 2 2 ; R7 := R7(R8)
	11	[1349]	TEST     	R7 1 ; if R7 then PC := 31
	12	[1349]	JMP      	31 ; PC := 31
	13	[1350]	SELF     	R7 R3 K3 ; R8 := R3; R7 := R3[0xf64b7262]
	14	[1350]	MOVE     	R9 R4 ; R9 := R4
	15	[1350]	LOADK    	R10 K4 ; R10 := "Search"
	16	[1350]	LOADK    	R11 := 0.000000
	17	[1350]	SUB      	R12 R1 K5 ; R12 := R1 - 178.000000
	18	[1350]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	19	[1351]	SELF     	R7 R3 K3 ; R8 := R3; R7 := R3[0xf64b7262]
	20	[1351]	MOVE     	R9 R4 ; R9 := R4
	21	[1351]	LOADK    	R10 K6 ; R10 := "SortMenu"
	22	[1351]	LOADK    	R11 := 0.000000
	23	[1351]	SUB      	R12 R1 K7 ; R12 := R1 - 388.000000
	24	[1351]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	25	[1352]	SELF     	R7 R3 K3 ; R8 := R3; R7 := R3[0xf64b7262]
	26	[1352]	MOVE     	R9 R4 ; R9 := R4
	27	[1352]	LOADK    	R10 K8 ; R10 := "ScrollBar"
	28	[1352]	LOADK    	R11 := 0.000000
	29	[1352]	ADD      	R12 R1 K9 ; R12 := R1 + 18.000000
	30	[1352]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	31	[1354]	SETTABLE 	R0 K0 R1 ; R0["Width"] := R1
	32	[1355]	GETUPVAL 	R7 U0 ; R7 := U0
	33	[1355]	MOVE     	R8 R0 ; R8 := R0
	34	[1355]	CALL     	R7 2 1 ; R7(R8)
	35	[1357]	GETTABLE 	R7 R0 K10 ; R7 := R0["Height"]
	36	[1357]	EQ       	1 R2 R7 ; if R2 == R7 then PC := 43
	37	[1357]	JMP      	43 ; PC := 43
	38	[1358]	OP_LOADBOOL	R6 1 0 ; R6 := true
	39	[1359]	SETTABLE 	R0 K10 R2 ; R0["Height"] := R2
	40	[1360]	GETUPVAL 	R7 U1 ; R7 := U1
	41	[1360]	MOVE     	R8 R0 ; R8 := R0
	42	[1360]	CALL     	R7 2 1 ; R7(R8)
	43	[1362]	TEST     	R6 0 ; if not R6 then PC := 51
	44	[1362]	JMP      	51 ; PC := 51
	45	[1363]	TEST     	R5 1 ; if R5 then PC := 51
	46	[1363]	JMP      	51 ; PC := 51
	47	[1364]	SELF     	R7 R0 K11 ; R8 := R0; R7 := R0[0x71e9ac81]
	48	[1364]	LOADNIL  	R9 R10 ; R9 := R10 := nil
	49	[1364]	OP_LOADBOOL	R11 1 0 ; R11 := true
	50	[1364]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	51	[1367]	RETURN   	R0 1 ; return 

function #32 <?:1370,1390> (72 instructions, 288 bytes at 00000211631945B0)
2 params, 7 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[1371]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1371]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x06d055f9]
	3	[1371]	GETTABLE 	R3 R1 K1 ; R3 := R1["ElementDimBuffer"]
	4	[1371]	EQ       	0 R3 K2 ; if R3 ~= nil then PC := 7
	5	[1371]	JMP      	7 ; PC := 7
	6	[1371]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 7
	7	[1371]	OP_LOADBOOL	R3 1 0 ; R3 := true
	8	[1371]	GETTABLE 	R4 R1 K1 ; R4 := R1["ElementDimBuffer"]
	9	[1371]	LOADK    	R5 := 0.000000
	10	[1371]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	11	[1372]	GETTABLE 	R3 R1 K3 ; R3 := R1["ElementWidth"]
	12	[1372]	EQ       	1 R3 K2 ; if R3 == nil then PC := 34
	13	[1372]	JMP      	34 ; PC := 34
	14	[1373]	GETTABLE 	R3 R1 K3 ; R3 := R1["ElementWidth"]
	15	[1373]	ADD      	R3 R3 R2 ; R3 := R3 + R2
	16	[1373]	SETTABLE 	R1 K4 R3 ; R1["mColumnSeparation"] := R3
	17	[1374]	GETTABLE 	R3 R1 K5 ; R3 := R1["SkipReinitializePos"]
	18	[1374]	TEST     	R3 1 ; if R3 then PC := 23
	19	[1374]	JMP      	23 ; PC := 23
	20	[1375]	GETTABLE 	R3 R1 K3 ; R3 := R1["ElementWidth"]
	21	[1375]	DIV      	R3 R3 K7 ; R3 := R3 / 2.000000
	22	[1375]	SETTABLE 	R1 K6 R3 ; R1["mInitialX"] := R3
	23	[1377]	GETGLOBAL	R3 K9 ; R3 := 0x5bced4c4
	24	[1377]	GETTABLE 	R3 R3 K10 ; R3 := R3[0x55f27c30]
	25	[1377]	GETTABLE 	R4 R1 K11 ; R4 := R1["Width"]
	26	[1377]	TEST     	R4 1 ; if R4 then PC := 29
	27	[1377]	JMP      	29 ; PC := 29
	28	[1377]	LOADK    	R4 := 1200.000000
	29	[1377]	ADD      	R4 R4 R2 ; R4 := R4 + R2
	30	[1377]	GETTABLE 	R5 R1 K4 ; R5 := R1["mColumnSeparation"]
	31	[1377]	DIV      	R4 R4 R5 ; R4 := R4 / R5
	32	[1377]	CALL     	R3 2 2 ; R3 := R3(R4)
	33	[1377]	SETTABLE 	R1 K8 R3 ; R1["mColumns"] := R3
	34	[1380]	GETTABLE 	R3 R1 K12 ; R3 := R1["ElementHeight"]
	35	[1380]	EQ       	1 R3 K2 ; if R3 == nil then PC := 68
	36	[1380]	JMP      	68 ; PC := 68
	37	[1381]	GETUPVAL 	R3 U0 ; R3 := U0
	38	[1381]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x06d055f9]
	39	[1381]	GETTABLE 	R4 R1 K13 ; R4 := R1["ElementHeightBuffer"]
	40	[1381]	EQ       	0 R4 K2 ; if R4 ~= nil then PC := 43
	41	[1381]	JMP      	43 ; PC := 43
	42	[1381]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 43
	43	[1381]	OP_LOADBOOL	R4 1 0 ; R4 := true
	44	[1381]	GETTABLE 	R5 R1 K13 ; R5 := R1["ElementHeightBuffer"]
	45	[1381]	MOVE     	R6 R2 ; R6 := R2
	46	[1381]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	47	[1381]	MOVE     	R2 R3 ; R2 := R3
	48	[1382]	GETTABLE 	R3 R1 K12 ; R3 := R1["ElementHeight"]
	49	[1382]	ADD      	R3 R3 R2 ; R3 := R3 + R2
	50	[1382]	SETTABLE 	R1 K14 R3 ; R1["mRowSeparation"] := R3
	51	[1383]	GETTABLE 	R3 R1 K5 ; R3 := R1["SkipReinitializePos"]
	52	[1383]	TEST     	R3 1 ; if R3 then PC := 57
	53	[1383]	JMP      	57 ; PC := 57
	54	[1384]	GETTABLE 	R3 R1 K12 ; R3 := R1["ElementHeight"]
	55	[1384]	DIV      	R3 R3 K7 ; R3 := R3 / 2.000000
	56	[1384]	SETTABLE 	R1 K15 R3 ; R1["mInitialY"] := R3
	57	[1386]	GETGLOBAL	R3 K9 ; R3 := 0x5bced4c4
	58	[1386]	GETTABLE 	R3 R3 K10 ; R3 := R3[0x55f27c30]
	59	[1386]	GETTABLE 	R4 R1 K17 ; R4 := R1["Height"]
	60	[1386]	TEST     	R4 1 ; if R4 then PC := 63
	61	[1386]	JMP      	63 ; PC := 63
	62	[1386]	LOADK    	R4 := 700.000000
	63	[1386]	ADD      	R4 R4 R2 ; R4 := R4 + R2
	64	[1386]	GETTABLE 	R5 R1 K14 ; R5 := R1["mRowSeparation"]
	65	[1386]	DIV      	R4 R4 R5 ; R4 := R4 / R5
	66	[1386]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[1386]	SETTABLE 	R1 K16 R3 ; R1["mRows"] := R3
	68	[1389]	GETTABLE 	R3 R1 K8 ; R3 := R1["mColumns"]
	69	[1389]	GETTABLE 	R4 R1 K16 ; R4 := R1["mRows"]
	70	[1389]	MUL      	R3 R3 R4 ; R3 := R3 * R4
	71	[1389]	SETTABLE 	R1 K18 R3 ; R1["mVisibleElements"] := R3
	72	[1390]	RETURN   	R0 1 ; return 

function #33 <?:1392,1476> (327 instructions, 1308 bytes at 0000021163194A20)
3 params, 27 slots, 2 upvalues, 0 locals, 51 constants, 0 functions
	1	[1393]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1393]	MOVE     	R4 R0 ; R4 := R0
	3	[1393]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1393]	TEST     	R3 1 ; if R3 then PC := 16
	5	[1393]	JMP      	16 ; PC := 16
	6	[1393]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	7	[1393]	MOVE     	R4 R1 ; R4 := R1
	8	[1393]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[1393]	TEST     	R3 1 ; if R3 then PC := 16
	10	[1393]	JMP      	16 ; PC := 16
	11	[1393]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	12	[1393]	MOVE     	R4 R2 ; R4 := R2
	13	[1393]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[1393]	TEST     	R3 0 ; if not R3 then PC := 17
	15	[1393]	JMP      	17 ; PC := 17
	16	[1394]	RETURN   	R0 1 ; return 
	17	[1398]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[1398]	GETTABLE 	R3 R3 K1 ; R3 := R3["ItemDimensions"]
	19	[1398]	GETTABLE 	R3 R3 K2 ; R3 := R3["Width"]
	20	[1399]	GETUPVAL 	R4 U0 ; R4 := U0
	21	[1399]	GETTABLE 	R4 R4 K1 ; R4 := R4["ItemDimensions"]
	22	[1399]	GETTABLE 	R4 R4 K3 ; R4 := R4["Height"]
	23	[1400]	GETUPVAL 	R5 U1 ; R5 := U1
	24	[1400]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x06d055f9]
	25	[1400]	GETTABLE 	R6 R1 K5 ; R6 := R1["ElementDimBuffer"]
	26	[1400]	EQ       	0 R6 K6 ; if R6 ~= nil then PC := 29
	27	[1400]	JMP      	29 ; PC := 29
	28	[1400]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 29
	29	[1400]	OP_LOADBOOL	R6 1 0 ; R6 := true
	30	[1400]	GETTABLE 	R7 R1 K5 ; R7 := R1["ElementDimBuffer"]
	31	[1400]	LOADK    	R8 := 0.000000
	32	[1400]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	33	[1401]	GETTABLE 	R6 R1 K7 ; R6 := R1["ElementWidth"]
	34	[1401]	EQ       	1 R6 K6 ; if R6 == nil then PC := 38
	35	[1401]	JMP      	38 ; PC := 38
	36	[1402]	GETTABLE 	R3 R1 K7 ; R3 := R1["ElementWidth"]
	37	[1402]	JMP      	56 ; PC := 56
	38	[1403]	GETTABLE 	R6 R1 K8 ; R6 := R1["mForcedHorizontalSeparation"]
	39	[1403]	EQ       	0 R6 K6 ; if R6 ~= nil then PC := 44
	40	[1403]	JMP      	44 ; PC := 44
	41	[1403]	GETTABLE 	R6 R1 K9 ; R6 := R1["mColumnSeparation"]
	42	[1403]	EQ       	1 R6 K6 ; if R6 == nil then PC := 56
	43	[1403]	JMP      	56 ; PC := 56
	44	[1404]	GETUPVAL 	R6 U1 ; R6 := U1
	45	[1404]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x06d055f9]
	46	[1404]	GETTABLE 	R7 R1 K8 ; R7 := R1["mForcedHorizontalSeparation"]
	47	[1404]	EQ       	0 R7 K6 ; if R7 ~= nil then PC := 50
	48	[1404]	JMP      	50 ; PC := 50
	49	[1404]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 50
	50	[1404]	OP_LOADBOOL	R7 1 0 ; R7 := true
	51	[1404]	GETTABLE 	R8 R1 K8 ; R8 := R1["mForcedHorizontalSeparation"]
	52	[1404]	GETTABLE 	R9 R1 K9 ; R9 := R1["mColumnSeparation"]
	53	[1404]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	54	[1404]	MOVE     	R3 R6 ; R3 := R6
	55	[1405]	SUB      	R3 R3 R5 ; R3 := R3 - R5
	56	[1407]	GETTABLE 	R6 R1 K10 ; R6 := R1["ElementHeight"]
	57	[1407]	EQ       	1 R6 K6 ; if R6 == nil then PC := 61
	58	[1407]	JMP      	61 ; PC := 61
	59	[1408]	GETTABLE 	R4 R1 K10 ; R4 := R1["ElementHeight"]
	60	[1408]	JMP      	79 ; PC := 79
	61	[1409]	GETTABLE 	R6 R1 K11 ; R6 := R1["mForcedVerticalSeparation"]
	62	[1409]	EQ       	0 R6 K6 ; if R6 ~= nil then PC := 67
	63	[1409]	JMP      	67 ; PC := 67
	64	[1409]	GETTABLE 	R6 R1 K12 ; R6 := R1["mRowSeparation"]
	65	[1409]	EQ       	1 R6 K6 ; if R6 == nil then PC := 79
	66	[1409]	JMP      	79 ; PC := 79
	67	[1410]	GETUPVAL 	R6 U1 ; R6 := U1
	68	[1410]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x06d055f9]
	69	[1410]	GETTABLE 	R7 R1 K11 ; R7 := R1["mForcedVerticalSeparation"]
	70	[1410]	EQ       	0 R7 K6 ; if R7 ~= nil then PC := 73
	71	[1410]	JMP      	73 ; PC := 73
	72	[1410]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 73
	73	[1410]	OP_LOADBOOL	R7 1 0 ; R7 := true
	74	[1410]	GETTABLE 	R8 R1 K11 ; R8 := R1["mForcedVerticalSeparation"]
	75	[1410]	GETTABLE 	R9 R1 K12 ; R9 := R1["mRowSeparation"]
	76	[1410]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	77	[1410]	MOVE     	R4 R6 ; R4 := R6
	78	[1411]	SUB      	R4 R4 R5 ; R4 := R4 - R5
	79	[1414]	NEWTABLE 	R6 3 0 ; R6 := {}
	80	[1414]	LOADK    	R7 K13 ; R7 := ".Btn"
	81	[1414]	LOADK    	R8 K14 ; R8 := ".RectangleBg"
	82	[1414]	LOADK    	R9 K15 ; R9 := ".Blurer"
	83	[1414]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	84	[1415]	GETGLOBAL	R7 K16 ; R7 := 0xcfc01047
	85	[1415]	MOVE     	R8 R6 ; R8 := R6
	86	[1415]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	87	[1415]	JMP      	113 ; PC := 113
	88	[1416]	GETTABLE 	R12 R1 K17 ; R12 := R1["BackerWidth"]
	89	[1416]	EQ       	1 R12 K6 ; if R12 == nil then PC := 99
	90	[1416]	JMP      	99 ; PC := 99
	91	[1417]	SELF     	R12 R0 K18 ; R13 := R0; R12 := R0[0x67bc869f]
	92	[1417]	MOVE     	R14 R2 ; R14 := R2
	93	[1417]	MOVE     	R15 R11 ; R15 := R11
	94	[1417]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	95	[1417]	LOADK    	R15 := 12.000000
	96	[1417]	GETTABLE 	R16 R1 K17 ; R16 := R1["BackerWidth"]
	97	[1417]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	98	[1417]	JMP      	106 ; PC := 106
	99	[1419]	SELF     	R12 R0 K18 ; R13 := R0; R12 := R0[0x67bc869f]
	100	[1419]	MOVE     	R14 R2 ; R14 := R2
	101	[1419]	MOVE     	R15 R11 ; R15 := R11
	102	[1419]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	103	[1419]	LOADK    	R15 := 12.000000
	104	[1419]	MOVE     	R16 R3 ; R16 := R3
	105	[1419]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	106	[1421]	SELF     	R12 R0 K18 ; R13 := R0; R12 := R0[0x67bc869f]
	107	[1421]	MOVE     	R14 R2 ; R14 := R2
	108	[1421]	MOVE     	R15 R11 ; R15 := R11
	109	[1421]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	110	[1421]	LOADK    	R15 := 13.000000
	111	[1421]	MOVE     	R16 R4 ; R16 := R4
	112	[1421]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	113	[1415]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 88; R9 := R10 end
	114	[1421]	JMP      	88 ; PC := 88
	115	[1424]	SUB      	R12 R4 K20 ; R12 := R4 - 4.000000
	116	[1424]	SETTABLE 	R1 K19 R12 ; R1["ImageHeight"] := R12
	117	[1425]	NEWTABLE 	R12 7 0 ; R12 := {}
	118	[1425]	LOADK    	R13 K21 ; R13 := ".ImageMask"
	119	[1425]	LOADK    	R14 K22 ; R14 := ".ImageContainer.Image"
	120	[1425]	LOADK    	R15 K23 ; R15 := ".ShadowContainer.ImageShadow"
	121	[1425]	LOADK    	R16 K24 ; R16 := ".Background"
	122	[1425]	LOADK    	R17 K25 ; R17 := ".Locked.Gradient"
	123	[1425]	LOADK    	R18 K26 ; R18 := ".Highlight"
	124	[1425]	LOADK    	R19 K27 ; R19 := ".NameBg"
	125	[1425]	SETLIST  	R12 7 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 7
	126	[1426]	GETGLOBAL	R13 K16 ; R13 := 0xcfc01047
	127	[1426]	MOVE     	R14 R12 ; R14 := R12
	128	[1426]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	129	[1426]	JMP      	162 ; PC := 162
	130	[1427]	GETTABLE 	R18 R1 K17 ; R18 := R1["BackerWidth"]
	131	[1427]	EQ       	1 R18 K6 ; if R18 == nil then PC := 148
	132	[1427]	JMP      	148 ; PC := 148
	133	[1427]	EQ       	1 R16 K28 ; if R16 == 1.000000 then PC := 148
	134	[1427]	JMP      	148 ; PC := 148
	135	[1427]	EQ       	1 R16 K29 ; if R16 == 2.000000 then PC := 148
	136	[1427]	JMP      	148 ; PC := 148
	137	[1427]	EQ       	1 R16 K30 ; if R16 == 3.000000 then PC := 148
	138	[1427]	JMP      	148 ; PC := 148
	139	[1428]	SELF     	R18 R0 K18 ; R19 := R0; R18 := R0[0x67bc869f]
	140	[1428]	MOVE     	R20 R2 ; R20 := R2
	141	[1428]	MOVE     	R21 R17 ; R21 := R17
	142	[1428]	CONCAT   	R20 R20 R21 ; R20 := R20 .. R21
	143	[1428]	LOADK    	R21 := 12.000000
	144	[1428]	GETTABLE 	R22 R1 K17 ; R22 := R1["BackerWidth"]
	145	[1428]	SUB      	R22 R22 K20 ; R22 := R22 - 4.000000
	146	[1428]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	147	[1428]	JMP      	155 ; PC := 155
	148	[1430]	SELF     	R18 R0 K18 ; R19 := R0; R18 := R0[0x67bc869f]
	149	[1430]	MOVE     	R20 R2 ; R20 := R2
	150	[1430]	MOVE     	R21 R17 ; R21 := R17
	151	[1430]	CONCAT   	R20 R20 R21 ; R20 := R20 .. R21
	152	[1430]	LOADK    	R21 := 12.000000
	153	[1430]	SUB      	R22 R3 K20 ; R22 := R3 - 4.000000
	154	[1430]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	155	[1432]	SELF     	R18 R0 K18 ; R19 := R0; R18 := R0[0x67bc869f]
	156	[1432]	MOVE     	R20 R2 ; R20 := R2
	157	[1432]	MOVE     	R21 R17 ; R21 := R17
	158	[1432]	CONCAT   	R20 R20 R21 ; R20 := R20 .. R21
	159	[1432]	LOADK    	R21 := 13.000000
	160	[1432]	GETTABLE 	R22 R1 K19 ; R22 := R1["ImageHeight"]
	161	[1432]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	162	[1426]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 130; R15 := R16 end
	163	[1432]	JMP      	130 ; PC := 130
	164	[1435]	DIV      	R18 R3 K29 ; R18 := R3 / 2.000000
	165	[1436]	GETTABLE 	R19 R1 K17 ; R19 := R1["BackerWidth"]
	166	[1436]	EQ       	1 R19 K6 ; if R19 == nil then PC := 196
	167	[1436]	JMP      	196 ; PC := 196
	168	[1437]	GETTABLE 	R19 R1 K17 ; R19 := R1["BackerWidth"]
	169	[1437]	DIV      	R18 R19 K29 ; R18 := R19 / 2.000000
	170	[1438]	SELF     	R19 R0 K31 ; R20 := R0; R19 := R0[0xf64b7262]
	171	[1438]	MOVE     	R21 R2 ; R21 := R2
	172	[1438]	LOADK    	R22 K32 ; R22 := "ImageMask"
	173	[1438]	LOADK    	R23 := 0.000000
	174	[1438]	UNM      	R24 R18 ; R24 := ^ R18
	175	[1438]	ADD      	R24 R24 K33 ; R24 := R24 + 43.000000
	176	[1438]	CALL     	R19 6 1 ; R19(R20,R21,R22,R23,R24)
	177	[1439]	SELF     	R19 R0 K31 ; R20 := R0; R19 := R0[0xf64b7262]
	178	[1439]	MOVE     	R21 R2 ; R21 := R2
	179	[1439]	LOADK    	R22 K32 ; R22 := "ImageMask"
	180	[1439]	LOADK    	R23 := 1.000000
	181	[1439]	LOADK    	R24 := -13.000000
	182	[1439]	CALL     	R19 6 1 ; R19(R20,R21,R22,R23,R24)
	183	[1440]	SELF     	R19 R0 K31 ; R20 := R0; R19 := R0[0xf64b7262]
	184	[1440]	MOVE     	R21 R2 ; R21 := R2
	185	[1440]	LOADK    	R22 K34 ; R22 := "ImageContainer"
	186	[1440]	LOADK    	R23 := 0.000000
	187	[1440]	UNM      	R24 R18 ; R24 := ^ R18
	188	[1440]	ADD      	R24 R24 K33 ; R24 := R24 + 43.000000
	189	[1440]	CALL     	R19 6 1 ; R19(R20,R21,R22,R23,R24)
	190	[1441]	SELF     	R19 R0 K31 ; R20 := R0; R19 := R0[0xf64b7262]
	191	[1441]	MOVE     	R21 R2 ; R21 := R2
	192	[1441]	LOADK    	R22 K34 ; R22 := "ImageContainer"
	193	[1441]	LOADK    	R23 := 1.000000
	194	[1441]	LOADK    	R24 := -13.000000
	195	[1441]	CALL     	R19 6 1 ; R19(R20,R21,R22,R23,R24)
	196	[1444]	GETTABLE 	R19 R1 K35 ; R19 := R1["ModScale"]
	197	[1444]	EQ       	0 R19 K6 ; if R19 ~= nil then PC := 200
	198	[1444]	JMP      	200 ; PC := 200
	199	[1445]	SETTABLE 	R1 K35 K36 ; R1["ModScale"] := 54.000000
	200	[1447]	SELF     	R19 R0 K31 ; R20 := R0; R19 := R0[0xf64b7262]
	201	[1447]	MOVE     	R21 R2 ; R21 := R2
	202	[1447]	LOADK    	R22 K37 ; R22 := "Mod"
	203	[1447]	LOADK    	R23 := 5.000000
	204	[1447]	GETTABLE 	R24 R1 K35 ; R24 := R1["ModScale"]
	205	[1447]	CALL     	R19 6 1 ; R19(R20,R21,R22,R23,R24)
	206	[1448]	SELF     	R19 R0 K31 ; R20 := R0; R19 := R0[0xf64b7262]
	207	[1448]	MOVE     	R21 R2 ; R21 := R2
	208	[1448]	LOADK    	R22 K37 ; R22 := "Mod"
	209	[1448]	LOADK    	R23 := 6.000000
	210	[1448]	GETTABLE 	R24 R1 K35 ; R24 := R1["ModScale"]
	211	[1448]	CALL     	R19 6 1 ; R19(R20,R21,R22,R23,R24)
	212	[1450]	LOADK    	R19 := 45.000000
	213	[1451]	SELF     	R20 R0 K31 ; R21 := R0; R20 := R0[0xf64b7262]
	214	[1451]	MOVE     	R22 R2 ; R22 := R2
	215	[1451]	LOADK    	R23 K38 ; R23 := "CornerPiece"
	216	[1451]	LOADK    	R24 := 14.000000
	217	[1451]	LOADK    	R25 := 180.000000
	218	[1451]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	219	[1452]	SELF     	R20 R0 K31 ; R21 := R0; R20 := R0[0xf64b7262]
	220	[1452]	MOVE     	R22 R2 ; R22 := R2
	221	[1452]	LOADK    	R23 K38 ; R23 := "CornerPiece"
	222	[1452]	LOADK    	R24 := 12.000000
	223	[1452]	MOVE     	R25 R19 ; R25 := R19
	224	[1452]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	225	[1453]	SELF     	R20 R0 K31 ; R21 := R0; R20 := R0[0xf64b7262]
	226	[1453]	MOVE     	R22 R2 ; R22 := R2
	227	[1453]	LOADK    	R23 K38 ; R23 := "CornerPiece"
	228	[1453]	LOADK    	R24 := 13.000000
	229	[1453]	MOVE     	R25 R19 ; R25 := R19
	230	[1453]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	231	[1454]	SELF     	R20 R0 K31 ; R21 := R0; R20 := R0[0xf64b7262]
	232	[1454]	MOVE     	R22 R2 ; R22 := R2
	233	[1454]	LOADK    	R23 K38 ; R23 := "CornerPiece"
	234	[1454]	LOADK    	R24 := 0.000000
	235	[1454]	DIV      	R25 R19 K29 ; R25 := R19 / 2.000000
	236	[1454]	SUB      	R25 R18 R25 ; R25 := R18 - R25
	237	[1454]	ADD      	R25 R25 K39 ; R25 := R25 + 9.000000
	238	[1454]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	239	[1455]	SELF     	R20 R0 K31 ; R21 := R0; R20 := R0[0xf64b7262]
	240	[1455]	MOVE     	R22 R2 ; R22 := R2
	241	[1455]	LOADK    	R23 K38 ; R23 := "CornerPiece"
	242	[1455]	LOADK    	R24 := 1.000000
	243	[1455]	UNM      	R25 R4 ; R25 := ^ R4
	244	[1455]	DIV      	R25 R25 K29 ; R25 := R25 / 2.000000
	245	[1455]	DIV      	R26 R19 K29 ; R26 := R19 / 2.000000
	246	[1455]	ADD      	R25 R25 R26 ; R25 := R25 + R26
	247	[1455]	SUB      	R25 R25 K39 ; R25 := R25 - 9.000000
	248	[1455]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	249	[1457]	SELF     	R20 R0 K31 ; R21 := R0; R20 := R0[0xf64b7262]
	250	[1457]	MOVE     	R22 R2 ; R22 := R2
	251	[1457]	LOADK    	R23 K40 ; R23 := "Highlight"
	252	[1457]	LOADK    	R24 := 1.000000
	253	[1457]	DIV      	R25 R4 K29 ; R25 := R4 / 2.000000
	254	[1457]	SUB      	R25 R25 K28 ; R25 := R25 - 1.000000
	255	[1457]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	256	[1459]	LOADK    	R20 := 4.000000
	257	[1460]	UNM      	R21 R3 ; R21 := ^ R3
	258	[1460]	DIV      	R21 R21 K29 ; R21 := R21 / 2.000000
	259	[1460]	ADD      	R21 R21 R20 ; R21 := R21 + R20
	260	[1460]	ADD      	R21 R21 K29 ; R21 := R21 + 2.000000
	261	[1460]	SETTABLE 	R1 K41 R21 ; R1["mNameX"] := R21
	262	[1461]	MUL      	R21 R20 K29 ; R21 := R20 * 2.000000
	263	[1461]	SUB      	R21 R3 R21 ; R21 := R3 - R21
	264	[1461]	SETTABLE 	R1 K42 R21 ; R1["mNameWidth"] := R21
	265	[1462]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	266	[1462]	MOVE     	R23 R2 ; R23 := R2
	267	[1462]	LOADK    	R24 K43 ; R24 := "ItemName"
	268	[1462]	LOADK    	R25 := 0.000000
	269	[1462]	GETTABLE 	R26 R1 K41 ; R26 := R1["mNameX"]
	270	[1462]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	271	[1463]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	272	[1463]	MOVE     	R23 R2 ; R23 := R2
	273	[1463]	LOADK    	R24 K43 ; R24 := "ItemName"
	274	[1463]	LOADK    	R25 := 12.000000
	275	[1463]	GETTABLE 	R26 R1 K42 ; R26 := R1["mNameWidth"]
	276	[1463]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	277	[1464]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	278	[1464]	MOVE     	R23 R2 ; R23 := R2
	279	[1464]	LOADK    	R24 K43 ; R24 := "ItemName"
	280	[1464]	LOADK    	R25 := 1.000000
	281	[1464]	DIV      	R26 R4 K29 ; R26 := R4 / 2.000000
	282	[1464]	SUB      	R26 R26 K44 ; R26 := R26 - 24.000000
	283	[1464]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	284	[1465]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	285	[1465]	MOVE     	R23 R2 ; R23 := R2
	286	[1465]	LOADK    	R24 K45 ; R24 := "NameBg"
	287	[1465]	LOADK    	R25 := 1.000000
	288	[1465]	DIV      	R26 R4 K29 ; R26 := R4 / 2.000000
	289	[1465]	SUB      	R26 R26 K28 ; R26 := R26 - 1.000000
	290	[1465]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	291	[1467]	SETTABLE 	R1 K46 R4 ; R1["mOriginalButtonHeight"] := R4
	292	[1469]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	293	[1469]	MOVE     	R23 R2 ; R23 := R2
	294	[1469]	LOADK    	R24 K47 ; R24 := "Check"
	295	[1469]	LOADK    	R25 := 0.000000
	296	[1469]	DIV      	R26 R3 K29 ; R26 := R3 / 2.000000
	297	[1469]	SUB      	R26 R26 K48 ; R26 := R26 - 20.000000
	298	[1469]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	299	[1470]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	300	[1470]	MOVE     	R23 R2 ; R23 := R2
	301	[1470]	LOADK    	R24 K47 ; R24 := "Check"
	302	[1470]	LOADK    	R25 := 1.000000
	303	[1470]	DIV      	R26 R4 K29 ; R26 := R4 / 2.000000
	304	[1470]	SUB      	R26 R26 K48 ; R26 := R26 - 20.000000
	305	[1470]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	306	[1473]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	307	[1473]	MOVE     	R23 R2 ; R23 := R2
	308	[1473]	LOADK    	R24 K49 ; R24 := "Locked.LabelBg"
	309	[1473]	LOADK    	R25 := 12.000000
	310	[1473]	SUB      	R26 R3 K20 ; R26 := R3 - 4.000000
	311	[1473]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	312	[1474]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	313	[1474]	MOVE     	R23 R2 ; R23 := R2
	314	[1474]	LOADK    	R24 K50 ; R24 := "Locked.Label"
	315	[1474]	LOADK    	R25 := 12.000000
	316	[1474]	SUB      	R26 R3 K20 ; R26 := R3 - 4.000000
	317	[1474]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	318	[1475]	SELF     	R21 R0 K31 ; R22 := R0; R21 := R0[0xf64b7262]
	319	[1475]	MOVE     	R23 R2 ; R23 := R2
	320	[1475]	LOADK    	R24 K50 ; R24 := "Locked.Label"
	321	[1475]	LOADK    	R25 := 0.000000
	322	[1475]	SUB      	R26 R3 K20 ; R26 := R3 - 4.000000
	323	[1475]	DIV      	R26 R26 K29 ; R26 := R26 / 2.000000
	324	[1475]	UNM      	R26 R26 ; R26 := ^ R26
	325	[1475]	ADD      	R26 R26 K29 ; R26 := R26 + 2.000000
	326	[1475]	CALL     	R21 6 1 ; R21(R22,R23,R24,R25,R26)
	327	[1476]	RETURN   	R0 1 ; return 

function #34 <?:1478,1500> (57 instructions, 228 bytes at 0000021163195A90)
5 params, 14 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[1479]	EQ       	1 R1 K0 ; if R1 == nil then PC := 56
	2	[1479]	JMP      	56 ; PC := 56
	3	[1479]	LE       	0 K1 R1 ; if 0.000000 > R1 then PC := 56
	4	[1479]	JMP      	56 ; PC := 56
	5	[1480]	EQ       	1 R0 K2 ; if R0 == "" then PC := 36
	6	[1480]	JMP      	36 ; PC := 36
	7	[1481]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	8	[1481]	MOVE     	R6 R4 ; R6 := R4
	9	[1481]	CALL     	R5 2 2 ; R5 := R5(R6)
	10	[1481]	TEST     	R5 1 ; if R5 then PC := 33
	11	[1481]	JMP      	33 ; PC := 33
	12	[1482]	GETTABLE 	R5 R4 K4 ; R5 := R4["mShowLabels"]
	13	[1482]	EQ       	0 R5 K5 ; if R5 ~= false then PC := 23
	14	[1482]	JMP      	23 ; PC := 23
	15	[1482]	SELF     	R5 R3 K6 ; R6 := R3; R5 := R3[0xe4162eed]
	16	[1482]	LOADK    	R7 K7 ; R7 := "AlwaysShowLabels"
	17	[1482]	LOADK    	R8 K2 ; R8 := ""
	18	[1482]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	19	[1482]	TEST     	R5 1 ; if R5 then PC := 23
	20	[1482]	JMP      	23 ; PC := 23
	21	[1483]	LOADK    	R0 K2 ; R0 := ""
	22	[1483]	JMP      	36 ; PC := 36
	23	[1484]	GETGLOBAL	R5 K8 ; R5 := 0x7f5022cf
	24	[1484]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x41e2ae25]
	25	[1484]	MOVE     	R6 R0 ; R6 := R0
	26	[1484]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[1484]	LT       	0 K1 R5 ; if 0.000000 >= R5 then PC := 36
	28	[1484]	JMP      	36 ; PC := 36
	29	[1485]	MOVE     	R5 R0 ; R5 := R0
	30	[1485]	LOADK    	R6 K10 ; R6 := "\r\n"
	31	[1485]	CONCAT   	R0 R5 R6 ; R0 := R5 .. R6
	32	[1486]	JMP      	36 ; PC := 36
	33	[1488]	MOVE     	R5 R0 ; R5 := R0
	34	[1488]	LOADK    	R6 K11 ; R6 := " "
	35	[1488]	CONCAT   	R0 R5 R6 ; R0 := R5 .. R6
	36	[1491]	LOADK    	R5 := 1.000000
	37	[1491]	MOVE     	R6 R2 ; R6 := R2
	38	[1491]	LOADK    	R7 := 1.000000
	39	[1491]	FORPREP  	R5 55 ; R5 -= R7; PC := 55
	40	[1492]	LE       	0 R8 R1 ; if R8 > R1 then PC := 49
	41	[1492]	JMP      	49 ; PC := 49
	42	[1493]	MOVE     	R9 R0 ; R9 := R0
	43	[1493]	SELF     	R10 R3 K12 ; R11 := R3; R10 := R3[0x42b04007]
	44	[1493]	LOADK    	R12 K13 ; R12 := "<ARCANE_RANK>"
	45	[1493]	OP_LOADBOOL	R13 1 0 ; R13 := true
	46	[1493]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	47	[1493]	CONCAT   	R0 R9 R10 ; R0 := R9 .. R10
	48	[1493]	JMP      	55 ; PC := 55
	49	[1495]	MOVE     	R9 R0 ; R9 := R0
	50	[1495]	SELF     	R10 R3 K12 ; R11 := R3; R10 := R3[0x42b04007]
	51	[1495]	LOADK    	R12 K14 ; R12 := "<ARCANE_RANK_OUTLINE>"
	52	[1495]	OP_LOADBOOL	R13 1 0 ; R13 := true
	53	[1495]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	54	[1495]	CONCAT   	R0 R9 R10 ; R0 := R9 .. R10
	55	[1491]	FORLOOP  	R5 40 ; R5 += R7; if R5 <= R6 then begin PC := 40; R8 := R5 end
	56	[1499]	RETURN   	R0 2 ; return R0 
	57	[1500]	RETURN   	R0 1 ; return 

function #35 <?:1502,1504> (9 instructions, 36 bytes at 0000021163195E60)
5 params, 11 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1503]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[1503]	MOVE     	R6 R0 ; R6 := R0
	3	[1503]	MOVE     	R7 R1 ; R7 := R1
	4	[1503]	MOVE     	R8 R2 ; R8 := R2
	5	[1503]	MOVE     	R9 R3 ; R9 := R3
	6	[1503]	MOVE     	R10 R4 ; R10 := R4
	7	[1503]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	8	[1503]	RETURN   	R5 0 ; return R5,... 
	9	[1504]	RETURN   	R0 1 ; return 

function #36 <?:1507,1579> (255 instructions, 1020 bytes at 0000021163195F70)
4 params, 21 slots, 5 upvalues, 0 locals, 58 constants, 0 functions
	1	[1508]	GETTABLE 	R4 R2 K0 ; R4 := R2["Name"]
	2	[1509]	LOADK    	R5 K1 ; R5 := "Owned"
	3	[1510]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	4	[1510]	GETTABLE 	R7 R2 K3 ; R7 := R2["Type"]
	5	[1510]	CALL     	R6 2 2 ; R6 := R6(R7)
	6	[1510]	TEST     	R6 1 ; if R6 then PC := 28
	7	[1510]	JMP      	28 ; PC := 28
	8	[1510]	GETTABLE 	R6 R2 K3 ; R6 := R2["Type"]
	9	[1510]	SELF     	R6 R6 K4 ; R7 := R6; R6 := R6[0xf2deaf69]
	10	[1510]	GETGLOBAL	R8 K5 ; R8 := gFusionTreasureType
	11	[1510]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	12	[1510]	TEST     	R6 0 ; if not R6 then PC := 28
	13	[1510]	JMP      	28 ; PC := 28
	14	[1510]	GETTABLE 	R6 R2 K6 ; R6 := R2["RawName"]
	15	[1510]	EQ       	0 R6 K7 ; if R6 ~= nil then PC := 28
	16	[1510]	JMP      	28 ; PC := 28
	17	[1512]	SELF     	R6 R0 K8 ; R7 := R0; R6 := R0[0x42b04007]
	18	[1512]	GETUPVAL 	R8 U0 ; R8 := U0
	19	[1512]	GETTABLE 	R8 R8 K9 ; R8 := R8[0x0c382f1c]
	20	[1512]	MOVE     	R9 R0 ; R9 := R0
	21	[1512]	GETTABLE 	R10 R2 K10 ; R10 := R2["StoreItem"]
	22	[1512]	GETTABLE 	R11 R2 K11 ; R11 := R2["RawItem"]
	23	[1512]	MOVE     	R12 R4 ; R12 := R4
	24	[1512]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	25	[1512]	OP_LOADBOOL	R9 1 0 ; R9 := true
	26	[1512]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	27	[1512]	MOVE     	R4 R6 ; R4 := R6
	28	[1515]	GETTABLE 	R6 R2 K12 ; R6 := R2["WillExpire"]
	29	[1515]	TEST     	R6 0 ; if not R6 then PC := 61
	30	[1515]	JMP      	61 ; PC := 61
	31	[1516]	GETGLOBAL	R6 K13 ; R6 := 0x34291f5c
	32	[1516]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x397b920f]
	33	[1516]	GETTABLE 	R7 R2 K11 ; R7 := R2["RawItem"]
	34	[1516]	GETTABLE 	R7 R7 K15 ; R7 := R7["mExpiry"]
	35	[1516]	GETTABLE 	R7 R7 K16 ; R7 := R7["sec"]
	36	[1516]	CALL     	R6 2 2 ; R6 := R6(R7)
	37	[1517]	LOADNIL  	R7 R7 ; R7 := nil
	38	[1518]	LE       	0 R6 K17 ; if R6 > 0.000000 then PC := 46
	39	[1518]	JMP      	46 ; PC := 46
	40	[1519]	SELF     	R8 R0 K8 ; R9 := R0; R8 := R0[0x42b04007]
	41	[1519]	LOADK    	R10 K18 ; R10 := "/Lotus/Language/Menu/Expired"
	42	[1519]	OP_LOADBOOL	R11 0 0 ; R11 := false
	43	[1519]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	44	[1519]	MOVE     	R7 R8 ; R7 := R8
	45	[1519]	JMP      	51 ; PC := 51
	46	[1521]	GETUPVAL 	R8 U0 ; R8 := U0
	47	[1521]	GETTABLE 	R8 R8 K19 ; R8 := R8[0x10e5bb7a]
	48	[1521]	MOVE     	R9 R6 ; R9 := R6
	49	[1521]	CALL     	R8 2 2 ; R8 := R8(R9)
	50	[1521]	MOVE     	R7 R8 ; R7 := R8
	51	[1523]	SELF     	R8 R0 K8 ; R9 := R0; R8 := R0[0x42b04007]
	52	[1523]	LOADK    	R10 K20 ; R10 := "<TIMER>"
	53	[1523]	OP_LOADBOOL	R11 1 0 ; R11 := true
	54	[1523]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	55	[1524]	MOVE     	R9 R4 ; R9 := R4
	56	[1524]	LOADK    	R10 K21 ; R10 := "\r\n"
	57	[1524]	MOVE     	R11 R8 ; R11 := R8
	58	[1524]	MOVE     	R12 R7 ; R12 := R7
	59	[1524]	CONCAT   	R4 R9 R12 ; R4 := R9 .. R10 .. R11 .. R12
	60	[1524]	JMP      	238 ; PC := 238
	61	[1525]	GETTABLE 	R9 R2 K22 ; R9 := R2["Rank"]
	62	[1525]	EQ       	1 R9 K7 ; if R9 == nil then PC := 124
	63	[1525]	JMP      	124 ; PC := 124
	64	[1526]	GETTABLE 	R9 R2 K22 ; R9 := R2["Rank"]
	65	[1526]	GETGLOBAL	R10 K23 ; R10 := 0xa94df70b
	66	[1526]	SELF     	R10 R10 K24 ; R11 := R10; R10 := R10[0x757f0100]
	67	[1526]	GETTABLE 	R12 R2 K3 ; R12 := R2["Type"]
	68	[1526]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	69	[1526]	LE       	1 R10 R9 ; if R10 <= R9 then PC := 72
	70	[1526]	JMP      	72 ; PC := 72
	71	[1526]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 72
	72	[1526]	OP_LOADBOOL	R9 1 0 ; R9 := true
	73	[1527]	GETTABLE 	R10 R2 K25 ; R10 := R2["Polarized"]
	74	[1527]	EQ       	1 R10 K7 ; if R10 == nil then PC := 81
	75	[1527]	JMP      	81 ; PC := 81
	76	[1527]	GETTABLE 	R10 R2 K25 ; R10 := R2["Polarized"]
	77	[1527]	LT       	0 K17 R10 ; if 0.000000 >= R10 then PC := 81
	78	[1527]	JMP      	81 ; PC := 81
	79	[1528]	LOADK    	R5 K26 ; R5 := "Forma"
	80	[1528]	JMP      	84 ; PC := 84
	81	[1529]	TEST     	R9 0 ; if not R9 then PC := 84
	82	[1529]	JMP      	84 ; PC := 84
	83	[1530]	LOADK    	R5 K27 ; R5 := "Max"
	84	[1534]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	85	[1534]	GETTABLE 	R11 R2 K3 ; R11 := R2["Type"]
	86	[1534]	CALL     	R10 2 2 ; R10 := R10(R11)
	87	[1534]	TEST     	R10 1 ; if R10 then PC := 100
	88	[1534]	JMP      	100 ; PC := 100
	89	[1534]	GETTABLE 	R10 R2 K3 ; R10 := R2["Type"]
	90	[1534]	SELF     	R10 R10 K4 ; R11 := R10; R10 := R10[0xf2deaf69]
	91	[1534]	GETUPVAL 	R12 U1 ; R12 := U1
	92	[1534]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	93	[1534]	TEST     	R10 1 ; if R10 then PC := 102
	94	[1534]	JMP      	102 ; PC := 102
	95	[1534]	GETTABLE 	R10 R2 K3 ; R10 := R2["Type"]
	96	[1534]	SELF     	R10 R10 K4 ; R11 := R10; R10 := R10[0xf2deaf69]
	97	[1534]	GETUPVAL 	R12 U2 ; R12 := U2
	98	[1534]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	99	[1534]	JMP      	102 ; PC := 102
	100	[1534]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 101
	101	[1534]	OP_LOADBOOL	R10 1 0 ; R10 := true
	102	[1535]	EQ       	1 R4 K7 ; if R4 == nil then PC := 238
	103	[1535]	JMP      	238 ; PC := 238
	104	[1535]	TEST     	R10 1 ; if R10 then PC := 238
	105	[1535]	JMP      	238 ; PC := 238
	106	[1535]	GETTABLE 	R11 R2 K28 ; R11 := R2["ResultStoreItem"]
	107	[1535]	EQ       	0 R11 K7 ; if R11 ~= nil then PC := 238
	108	[1535]	JMP      	238 ; PC := 238
	109	[1535]	GETTABLE 	R11 R2 K29 ; R11 := R2["Category"]
	110	[1535]	EQ       	1 R11 K7 ; if R11 == nil then PC := 115
	111	[1535]	JMP      	115 ; PC := 115
	112	[1535]	GETTABLE 	R11 R2 K29 ; R11 := R2["Category"]
	113	[1535]	EQ       	1 R11 K30 ; if R11 == 13.000000 then PC := 238
	114	[1535]	JMP      	238 ; PC := 238
	115	[1536]	LOADK    	R11 K31 ; R11 := "["
	116	[1536]	GETTABLE 	R12 R2 K22 ; R12 := R2["Rank"]
	117	[1536]	LOADK    	R13 K32 ; R13 := "]"
	118	[1536]	CONCAT   	R11 R11 R13 ; R11 := R11 .. R12 .. R13
	119	[1537]	MOVE     	R12 R4 ; R12 := R4
	120	[1537]	LOADK    	R13 K33 ; R13 := " "
	121	[1537]	MOVE     	R14 R11 ; R14 := R11
	122	[1537]	CONCAT   	R4 R12 R14 ; R4 := R12 .. R13 .. R14
	123	[1538]	JMP      	238 ; PC := 238
	124	[1539]	GETTABLE 	R12 R2 K34 ; R12 := R2["ArcaneRank"]
	125	[1539]	EQ       	1 R12 K7 ; if R12 == nil then PC := 136
	126	[1539]	JMP      	136 ; PC := 136
	127	[1540]	GETUPVAL 	R12 U3 ; R12 := U3
	128	[1540]	MOVE     	R13 R4 ; R13 := R4
	129	[1540]	GETTABLE 	R14 R2 K34 ; R14 := R2["ArcaneRank"]
	130	[1540]	GETTABLE 	R15 R2 K35 ; R15 := R2["ArcaneMaxRank"]
	131	[1540]	MOVE     	R16 R0 ; R16 := R0
	132	[1540]	MOVE     	R17 R1 ; R17 := R1
	133	[1540]	CALL     	R12 6 2 ; R12 := R12(R13,R14,R15,R16,R17)
	134	[1540]	MOVE     	R4 R12 ; R4 := R12
	135	[1540]	JMP      	238 ; PC := 238
	136	[1541]	GETTABLE 	R12 R2 K10 ; R12 := R2["StoreItem"]
	137	[1541]	TEST     	R12 0 ; if not R12 then PC := 238
	138	[1541]	JMP      	238 ; PC := 238
	139	[1542]	GETGLOBAL	R12 K2 ; R12 := 0x7b998233
	140	[1542]	GETTABLE 	R13 R2 K3 ; R13 := R2["Type"]
	141	[1542]	CALL     	R12 2 2 ; R12 := R12(R13)
	142	[1542]	TEST     	R12 1 ; if R12 then PC := 169
	143	[1542]	JMP      	169 ; PC := 169
	144	[1542]	GETTABLE 	R12 R2 K3 ; R12 := R2["Type"]
	145	[1542]	SELF     	R12 R12 K4 ; R13 := R12; R12 := R12[0xf2deaf69]
	146	[1542]	GETGLOBAL	R14 K36 ; R14 := gLotusSigilType
	147	[1542]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	148	[1542]	TEST     	R12 0 ; if not R12 then PC := 169
	149	[1542]	JMP      	169 ; PC := 169
	150	[1543]	GETTABLE 	R12 R2 K10 ; R12 := R2["StoreItem"]
	151	[1543]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0xe1c86d38]
	152	[1543]	CALL     	R12 2 2 ; R12 := R12(R13)
	153	[1543]	SUB      	R12 R12 K38 ; R12 := R12 - 1.000000
	154	[1544]	LT       	0 K17 R12 ; if 0.000000 >= R12 then PC := 169
	155	[1544]	JMP      	169 ; PC := 169
	156	[1545]	MOVE     	R13 R4 ; R13 := R4
	157	[1545]	LOADK    	R14 K39 ; R14 := " (+"
	158	[1545]	GETUPVAL 	R15 U4 ; R15 := U4
	159	[1545]	GETTABLE 	R15 R15 K40 ; R15 := R15[0x74a11ec6]
	160	[1545]	MUL      	R16 R12 K41 ; R16 := R12 * 100.000000
	161	[1545]	CALL     	R15 2 2 ; R15 := R15(R16)
	162	[1545]	LOADK    	R16 K42 ; R16 := "%"
	163	[1545]	SELF     	R17 R0 K8 ; R18 := R0; R17 := R0[0x42b04007]
	164	[1545]	LOADK    	R19 K43 ; R19 := "<REPUTATION_SMALL>"
	165	[1545]	OP_LOADBOOL	R20 1 0 ; R20 := true
	166	[1545]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	167	[1545]	LOADK    	R18 K44 ; R18 := ")"
	168	[1545]	CONCAT   	R4 R13 R18 ; R4 := R13 .. R14 .. R15 .. R16 .. R17 .. R18
	169	[1549]	LOADK    	R13 := 1.000000
	170	[1550]	GETGLOBAL	R14 K2 ; R14 := 0x7b998233
	171	[1550]	MOVE     	R15 R3 ; R15 := R3
	172	[1550]	CALL     	R14 2 2 ; R14 := R14(R15)
	173	[1550]	TEST     	R14 1 ; if R14 then PC := 184
	174	[1550]	JMP      	184 ; PC := 184
	175	[1550]	GETGLOBAL	R14 K2 ; R14 := 0x7b998233
	176	[1550]	GETTABLE 	R15 R3 K45 ; R15 := R3["ShowPurchaseQuantity"]
	177	[1550]	CALL     	R14 2 2 ; R14 := R14(R15)
	178	[1550]	TEST     	R14 1 ; if R14 then PC := 184
	179	[1550]	JMP      	184 ; PC := 184
	180	[1551]	GETTABLE 	R14 R2 K10 ; R14 := R2["StoreItem"]
	181	[1551]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x075cb724]
	182	[1551]	CALL     	R14 2 2 ; R14 := R14(R15)
	183	[1551]	MOVE     	R13 R14 ; R13 := R14
	184	[1554]	GETTABLE 	R14 R2 K47 ; R14 := R2["QuantityMultiplier"]
	185	[1554]	EQ       	1 R14 K7 ; if R14 == nil then PC := 192
	186	[1554]	JMP      	192 ; PC := 192
	187	[1554]	GETTABLE 	R14 R2 K47 ; R14 := R2["QuantityMultiplier"]
	188	[1554]	LT       	0 K38 R14 ; if 1.000000 >= R14 then PC := 192
	189	[1554]	JMP      	192 ; PC := 192
	190	[1555]	GETTABLE 	R14 R2 K47 ; R14 := R2["QuantityMultiplier"]
	191	[1555]	MUL      	R13 R13 R14 ; R13 := R13 * R14
	192	[1558]	GETTABLE 	R14 R2 K10 ; R14 := R2["StoreItem"]
	193	[1558]	SELF     	R14 R14 K48 ; R15 := R14; R14 := R14[0xfe9eb1a5]
	194	[1558]	CALL     	R14 2 2 ; R14 := R14(R15)
	195	[1558]	EQ       	0 R14 K49 ; if R14 ~= 35.000000 then PC := 229
	196	[1558]	JMP      	229 ; PC := 229
	197	[1559]	GETTABLE 	R14 R2 K50 ; R14 := R2["HideEndoCount"]
	198	[1559]	TEST     	R14 0 ; if not R14 then PC := 210
	199	[1559]	JMP      	210 ; PC := 210
	200	[1560]	SELF     	R14 R0 K8 ; R15 := R0; R14 := R0[0x42b04007]
	201	[1560]	GETTABLE 	R16 R2 K10 ; R16 := R2["StoreItem"]
	202	[1560]	SELF     	R16 R16 K51 ; R17 := R16; R16 := R16[0xd3a9d01f]
	203	[1560]	CALL     	R16 2 2 ; R16 := R16(R17)
	204	[1560]	SELF     	R16 R16 K52 ; R17 := R16; R16 := R16[0x6d604ba7]
	205	[1560]	CALL     	R16 2 2 ; R16 := R16(R17)
	206	[1560]	OP_LOADBOOL	R17 0 0 ; R17 := false
	207	[1560]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	208	[1560]	MOVE     	R4 R14 ; R4 := R14
	209	[1560]	JMP      	238 ; PC := 238
	210	[1562]	GETTABLE 	R14 R2 K10 ; R14 := R2["StoreItem"]
	211	[1562]	SELF     	R14 R14 K53 ; R15 := R14; R14 := R14[0x4e485a6f]
	212	[1562]	CALL     	R14 2 2 ; R14 := R14(R15)
	213	[1562]	UNM      	R14 R14 ; R14 := ^ R14
	214	[1563]	GETUPVAL 	R15 U4 ; R15 := U4
	215	[1563]	GETTABLE 	R15 R15 K54 ; R15 := R15[0x1142c7a8]
	216	[1563]	MUL      	R16 R14 R13 ; R16 := R14 * R13
	217	[1563]	CALL     	R15 2 2 ; R15 := R15(R16)
	218	[1563]	LOADK    	R16 K33 ; R16 := " "
	219	[1563]	SELF     	R17 R0 K8 ; R18 := R0; R17 := R0[0x42b04007]
	220	[1563]	GETTABLE 	R19 R2 K10 ; R19 := R2["StoreItem"]
	221	[1563]	SELF     	R19 R19 K51 ; R20 := R19; R19 := R19[0xd3a9d01f]
	222	[1563]	CALL     	R19 2 2 ; R19 := R19(R20)
	223	[1563]	SELF     	R19 R19 K52 ; R20 := R19; R19 := R19[0x6d604ba7]
	224	[1563]	CALL     	R19 2 2 ; R19 := R19(R20)
	225	[1563]	OP_LOADBOOL	R20 0 0 ; R20 := false
	226	[1563]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	227	[1563]	CONCAT   	R4 R15 R17 ; R4 := R15 .. R16 .. R17
	228	[1564]	JMP      	238 ; PC := 238
	229	[1565]	LT       	0 K38 R13 ; if 1.000000 >= R13 then PC := 238
	230	[1565]	JMP      	238 ; PC := 238
	231	[1566]	GETUPVAL 	R15 U4 ; R15 := U4
	232	[1566]	GETTABLE 	R15 R15 K54 ; R15 := R15[0x1142c7a8]
	233	[1566]	MOVE     	R16 R13 ; R16 := R13
	234	[1566]	CALL     	R15 2 2 ; R15 := R15(R16)
	235	[1566]	LOADK    	R16 K55 ; R16 := " x "
	236	[1566]	MOVE     	R17 R4 ; R17 := R4
	237	[1566]	CONCAT   	R4 R15 R17 ; R4 := R15 .. R16 .. R17
	238	[1570]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	239	[1570]	MOVE     	R16 R3 ; R16 := R3
	240	[1570]	CALL     	R15 2 2 ; R15 := R15(R16)
	241	[1570]	TEST     	R15 1 ; if R15 then PC := 249
	242	[1570]	JMP      	249 ; PC := 249
	243	[1570]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	244	[1570]	GETTABLE 	R16 R3 K56 ; R16 := R3["NameOverride"]
	245	[1570]	CALL     	R15 2 2 ; R15 := R15(R16)
	246	[1570]	TEST     	R15 1 ; if R15 then PC := 249
	247	[1570]	JMP      	249 ; PC := 249
	248	[1571]	GETTABLE 	R4 R3 K56 ; R4 := R3["NameOverride"]
	249	[1574]	EQ       	0 R4 K7 ; if R4 ~= nil then PC := 252
	250	[1574]	JMP      	252 ; PC := 252
	251	[1575]	LOADK    	R4 K57 ; R4 := ""
	252	[1578]	MOVE     	R15 R4 ; R15 := R4
	253	[1578]	MOVE     	R16 R5 ; R16 := R5
	254	[1578]	RETURN   	R15 3 ; return R15, R16 
	255	[1579]	RETURN   	R0 1 ; return 

function #37 <?:1581,1583> (8 instructions, 32 bytes at 0000021163196E60)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1582]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[1582]	MOVE     	R5 R0 ; R5 := R0
	3	[1582]	MOVE     	R6 R1 ; R6 := R1
	4	[1582]	MOVE     	R7 R2 ; R7 := R2
	5	[1582]	MOVE     	R8 R3 ; R8 := R3
	6	[1582]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[1582]	RETURN   	R4 0 ; return R4,... 
	8	[1583]	RETURN   	R0 1 ; return 

function #38 <?:1585,1595> (50 instructions, 200 bytes at 0000021163628AA0)
4 params, 16 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[1586]	SUB      	R4 R2 R1 ; R4 := R2 - R1
	2	[1586]	DIV      	R4 R4 R2 ; R4 := R4 / R2
	3	[1586]	MUL      	R4 R4 K0 ; R4 := R4 * 100.000000
	4	[1587]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0x42b04007]
	5	[1587]	LOADK    	R7 K2 ; R7 := "/Lotus/Language/Railjack/"
	6	[1587]	GETUPVAL 	R8 U0 ; R8 := U0
	7	[1587]	GETTABLE 	R8 R8 K3 ; R8 := R8[0x06d055f9]
	8	[1587]	LT       	1 K4 R4 ; if 0.000000 < R4 then PC := 11
	9	[1587]	JMP      	11 ; PC := 11
	10	[1587]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 11
	11	[1587]	OP_LOADBOOL	R9 1 0 ; R9 := true
	12	[1587]	LOADK    	R10 K5 ; R10 := "CrewMemberDiscountLabel"
	13	[1587]	LOADK    	R11 K6 ; R11 := "CrewMemberTaxLabel"
	14	[1587]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	15	[1587]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	16	[1587]	OP_LOADBOOL	R8 0 0 ; R8 := false
	17	[1587]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	18	[1588]	LOADK    	R6 K7 ; R6 := ""
	19	[1589]	GETGLOBAL	R7 K8 ; R7 := 0x7b998233
	20	[1589]	MOVE     	R8 R3 ; R8 := R3
	21	[1589]	CALL     	R7 2 2 ; R7 := R7(R8)
	22	[1589]	TEST     	R7 1 ; if R7 then PC := 32
	23	[1589]	JMP      	32 ; PC := 32
	24	[1590]	SELF     	R7 R0 K1 ; R8 := R0; R7 := R0[0x42b04007]
	25	[1590]	SELF     	R9 R3 K9 ; R10 := R3; R9 := R3[0xd3a9d01f]
	26	[1590]	CALL     	R9 2 2 ; R9 := R9(R10)
	27	[1590]	SELF     	R9 R9 K10 ; R10 := R9; R9 := R9[0x6d604ba7]
	28	[1590]	CALL     	R9 2 2 ; R9 := R9(R10)
	29	[1590]	OP_LOADBOOL	R10 0 0 ; R10 := false
	30	[1590]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	31	[1590]	MOVE     	R6 R7 ; R6 := R7
	32	[1592]	LOADK    	R7 K11 ; R7 := "\r\n"
	33	[1592]	SELF     	R8 R0 K1 ; R9 := R0; R8 := R0[0x42b04007]
	34	[1592]	LOADK    	R10 K12 ; R10 := "/Lotus/Language/Railjack/CrewMemberPriceChangeLabel"
	35	[1592]	OP_LOADBOOL	R11 0 0 ; R11 := false
	36	[1592]	NEWTABLE 	R12 0 3 ; R12 := {}
	37	[1592]	GETUPVAL 	R13 U0 ; R13 := U0
	38	[1592]	GETTABLE 	R13 R13 K14 ; R13 := R13[0x1142c7a8]
	39	[1592]	GETGLOBAL	R14 K15 ; R14 := 0x5bced4c4
	40	[1592]	GETTABLE 	R14 R14 K16 ; R14 := R14[0xe4a5b3ca]
	41	[1592]	MOVE     	R15 R4 ; R15 := R4
	42	[1592]	CALL     	R14 2 0 ; R14,... := R14(R15)
	43	[1592]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	44	[1592]	SETTABLE 	R12 K13 R13 ; R12["CHANGE"] := R13
	45	[1592]	SETTABLE 	R12 K17 R6 ; R12["SYNDICATE"] := R6
	46	[1592]	SETTABLE 	R12 K18 R5 ; R12["TYPE"] := R5
	47	[1592]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	48	[1592]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	49	[1594]	RETURN   	R7 2 ; return R7 
	50	[1595]	RETURN   	R0 1 ; return 

function #39 <?:1597,1620> (75 instructions, 300 bytes at 0000021163628F80)
1 param, 8 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[1600]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xf2deaf69]
	2	[1600]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	3	[1600]	LOADK    	R6 K2 ; R6 := "/Lotus/Types/Game/WarframeCosmeticEnhancer"
	4	[1600]	CALL     	R5 2 0 ; R5,... := R5(R6)
	5	[1600]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	6	[1600]	TEST     	R3 0 ; if not R3 then PC := 10
	7	[1600]	JMP      	10 ; PC := 10
	8	[1601]	LOADK    	R1 K3 ; R1 := "/Lotus/Language/Categories/WARFRAME"
	9	[1601]	JMP      	63 ; PC := 63
	10	[1602]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xf2deaf69]
	11	[1602]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	12	[1602]	LOADK    	R6 K4 ; R6 := "/Lotus/Types/Game/OperatorCosmeticEnhancer"
	13	[1602]	CALL     	R5 2 0 ; R5,... := R5(R6)
	14	[1602]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	15	[1602]	TEST     	R3 0 ; if not R3 then PC := 19
	16	[1602]	JMP      	19 ; PC := 19
	17	[1603]	LOADK    	R1 K5 ; R1 := "/Lotus/Language/Menu/MenuOperator"
	18	[1603]	JMP      	63 ; PC := 63
	19	[1604]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xf2deaf69]
	20	[1604]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	21	[1604]	LOADK    	R6 K6 ; R6 := "/Lotus/Types/Game/OperatorAmpCosmeticEnhancer"
	22	[1604]	CALL     	R5 2 0 ; R5,... := R5(R6)
	23	[1604]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	24	[1604]	TEST     	R3 0 ; if not R3 then PC := 28
	25	[1604]	JMP      	28 ; PC := 28
	26	[1605]	LOADK    	R1 K7 ; R1 := "/Lotus/Language/Categories/AMPS"
	27	[1605]	JMP      	63 ; PC := 63
	28	[1606]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xf2deaf69]
	29	[1606]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	30	[1606]	LOADK    	R6 K8 ; R6 := "/Lotus/Types/Game/ModularWeaponCosmeticEnhancer"
	31	[1606]	CALL     	R5 2 0 ; R5,... := R5(R6)
	32	[1606]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	33	[1606]	TEST     	R3 0 ; if not R3 then PC := 37
	34	[1606]	JMP      	37 ; PC := 37
	35	[1607]	LOADK    	R1 K9 ; R1 := "/Lotus/Language/Categories/ZAWS"
	36	[1607]	JMP      	63 ; PC := 63
	37	[1608]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xf2deaf69]
	38	[1608]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	39	[1608]	LOADK    	R6 K10 ; R6 := "/Lotus/Types/Game/ModularGunCosmeticEnhancer"
	40	[1608]	CALL     	R5 2 0 ; R5,... := R5(R6)
	41	[1608]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	42	[1608]	TEST     	R3 0 ; if not R3 then PC := 46
	43	[1608]	JMP      	46 ; PC := 46
	44	[1609]	LOADK    	R1 K11 ; R1 := "/Lotus/Language/Categories/GUNS"
	45	[1609]	JMP      	63 ; PC := 63
	46	[1610]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xf2deaf69]
	47	[1610]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	48	[1610]	LOADK    	R6 K12 ; R6 := "/Lotus/Types/Game/LotusPistolCosmeticEnhancer"
	49	[1610]	CALL     	R5 2 0 ; R5,... := R5(R6)
	50	[1610]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	51	[1610]	TEST     	R3 0 ; if not R3 then PC := 55
	52	[1610]	JMP      	55 ; PC := 55
	53	[1611]	LOADK    	R1 K13 ; R1 := "/Lotus/Language/Categories/HAND_GUN"
	54	[1611]	JMP      	63 ; PC := 63
	55	[1612]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xf2deaf69]
	56	[1612]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	57	[1612]	LOADK    	R6 K14 ; R6 := "/Lotus/Types/Game/LongGunCosmeticEnhancer"
	58	[1612]	CALL     	R5 2 0 ; R5,... := R5(R6)
	59	[1612]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	60	[1612]	TEST     	R3 0 ; if not R3 then PC := 63
	61	[1612]	JMP      	63 ; PC := 63
	62	[1613]	LOADK    	R1 K15 ; R1 := "/Lotus/Language/Categories/RIFLE"
	63	[1615]	EQ       	1 R1 K16 ; if R1 == nil then PC := 74
	64	[1615]	JMP      	74 ; PC := 74
	65	[1616]	GETUPVAL 	R3 U0 ; R3 := U0
	66	[1616]	GETGLOBAL	R4 K17 ; R4 := LABEL_TYPE_FOCUS
	67	[1616]	GETGLOBAL	R5 K18 ; R5 := 0x603636ad
	68	[1616]	MOVE     	R6 R1 ; R6 := R1
	69	[1616]	NEWTABLE 	R7 0 0 ; R7 := {}
	70	[1616]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	71	[1616]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	72	[1616]	MOVE     	R2 R3 ; R2 := R3
	73	[1617]	SETTABLE 	R2 K19 K20 ; R2["LabelPrefix"] := "<ENHANCER_SMALL>"
	74	[1619]	RETURN   	R2 2 ; return R2 
	75	[1620]	RETURN   	R0 1 ; return 

function #40 <?:1622,1624> (5 instructions, 20 bytes at 00000211636298B0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1623]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1623]	MOVE     	R2 R0 ; R2 := R0
	3	[1623]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[1623]	RETURN   	R1 0 ; return R1,... 
	5	[1624]	RETURN   	R0 1 ; return 

function #41 <?:1627,2330> (2401 instructions, 9604 bytes at 00000211636299A0)
5 params, 156 slots, 10 upvalues, 0 locals, 319 constants, 0 functions
	1	[1628]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[1628]	MOVE     	R6 R3 ; R6 := R3
	3	[1628]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[1628]	TEST     	R5 0 ; if not R5 then PC := 8
	5	[1628]	JMP      	8 ; PC := 8
	6	[1629]	NEWTABLE 	R5 0 0 ; R5 := {}
	7	[1629]	RETURN   	R5 2 ; return R5 
	8	[1632]	LOADNIL  	R5 R5 ; R5 := nil
	9	[1633]	NEWTABLE 	R6 0 0 ; R6 := {}
	10	[1634]	SELF     	R7 R0 K1 ; R8 := R0; R7 := R0[0x492f9da2]
	11	[1634]	CALL     	R7 2 2 ; R7 := R7(R8)
	12	[1634]	GETUPVAL 	R8 U0 ; R8 := U0
	13	[1634]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 16
	14	[1634]	JMP      	16 ; PC := 16
	15	[1634]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 16
	16	[1634]	OP_LOADBOOL	R7 1 0 ; R7 := true
	17	[1636]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	18	[1636]	GETTABLE 	R9 R3 K2 ; R9 := R3["CustomTags"]
	19	[1636]	CALL     	R8 2 2 ; R8 := R8(R9)
	20	[1636]	TEST     	R8 1 ; if R8 then PC := 38
	21	[1636]	JMP      	38 ; PC := 38
	22	[1637]	GETGLOBAL	R8 K3 ; R8 := 0xcfc01047
	23	[1637]	GETTABLE 	R9 R3 K2 ; R9 := R3["CustomTags"]
	24	[1637]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	25	[1637]	JMP      	36 ; PC := 36
	26	[1638]	TEST     	R7 0 ; if not R7 then PC := 31
	27	[1638]	JMP      	31 ; PC := 31
	28	[1638]	GETTABLE 	R13 R12 K4 ; R13 := R12["HideInPopup"]
	29	[1638]	TEST     	R13 1 ; if R13 then PC := 36
	30	[1638]	JMP      	36 ; PC := 36
	31	[1639]	GETGLOBAL	R13 K5 ; R13 := 0x33bdd652
	32	[1639]	GETTABLE 	R13 R13 K6 ; R13 := R13[0x23d5322f]
	33	[1639]	MOVE     	R14 R6 ; R14 := R6
	34	[1639]	MOVE     	R15 R12 ; R15 := R12
	35	[1639]	CALL     	R13 3 1 ; R13(R14,R15)
	36	[1637]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 26; R10 := R11 end
	37	[1640]	JMP      	26 ; PC := 26
	38	[1644]	LOADNIL  	R13 R13 ; R13 := nil
	39	[1645]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	40	[1645]	MOVE     	R15 R1 ; R15 := R1
	41	[1645]	CALL     	R14 2 2 ; R14 := R14(R15)
	42	[1645]	TEST     	R14 1 ; if R14 then PC := 77
	43	[1645]	JMP      	77 ; PC := 77
	44	[1646]	GETTABLE 	R13 R1 K7 ; R13 := R1["PurchasedItems"]
	45	[1647]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	46	[1647]	MOVE     	R15 R13 ; R15 := R13
	47	[1647]	CALL     	R14 2 2 ; R14 := R14(R15)
	48	[1647]	TEST     	R14 0 ; if not R14 then PC := 77
	49	[1647]	JMP      	77 ; PC := 77
	50	[1647]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	51	[1647]	GETTABLE 	R15 R2 K8 ; R15 := R2["ResultStoreItem"]
	52	[1647]	CALL     	R14 2 2 ; R14 := R14(R15)
	53	[1647]	TEST     	R14 1 ; if R14 then PC := 77
	54	[1647]	JMP      	77 ; PC := 77
	55	[1647]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	56	[1647]	GETGLOBAL	R15 K9 ; R15 := 0xbe190284
	57	[1647]	CALL     	R14 2 2 ; R14 := R14(R15)
	58	[1647]	TEST     	R14 1 ; if R14 then PC := 77
	59	[1647]	JMP      	77 ; PC := 77
	60	[1648]	GETGLOBAL	R14 K9 ; R14 := 0xbe190284
	61	[1648]	SELF     	R14 R14 K10 ; R15 := R14; R14 := R14[0xa1c390fe]
	62	[1648]	CALL     	R14 2 2 ; R14 := R14(R15)
	63	[1649]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	64	[1649]	MOVE     	R16 R14 ; R16 := R14
	65	[1649]	CALL     	R15 2 2 ; R15 := R15(R16)
	66	[1649]	TEST     	R15 1 ; if R15 then PC := 77
	67	[1649]	JMP      	77 ; PC := 77
	68	[1650]	GETUPVAL 	R15 U1 ; R15 := U1
	69	[1650]	GETTABLE 	R15 R15 K11 ; R15 := R15[0x71a5b951]
	70	[1650]	MOVE     	R16 R14 ; R16 := R14
	71	[1650]	GETGLOBAL	R17 K12 ; R17 := 0x25d99d89
	72	[1650]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x25a6e75e]
	73	[1650]	CALL     	R17 2 0 ; R17,... := R17(R18)
	74	[1650]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	75	[1650]	MOVE     	R13 R15 ; R13 := R15
	76	[1651]	SETTABLE 	R1 K7 R13 ; R1[0x250c286a] := R13
	77	[1657]	GETTABLE 	R15 R3 K14 ; R15 := R3["SellInfo"]
	78	[1657]	EQ       	1 R15 K15 ; if R15 == nil then PC := 176
	79	[1657]	JMP      	176 ; PC := 176
	80	[1658]	GETTABLE 	R15 R3 K14 ; R15 := R3["SellInfo"]
	81	[1659]	GETGLOBAL	R16 K16 ; R16 := LABEL_TYPE_CREDITS
	82	[1660]	GETTABLE 	R17 R15 K17 ; R17 := R15["LabelType"]
	83	[1660]	EQ       	1 R17 K15 ; if R17 == nil then PC := 86
	84	[1660]	JMP      	86 ; PC := 86
	85	[1661]	GETTABLE 	R16 R15 K17 ; R16 := R15["LabelType"]
	86	[1664]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	87	[1664]	GETTABLE 	R18 R2 K18 ; R18 := R2["SellingPrice"]
	88	[1664]	CALL     	R17 2 2 ; R17 := R17(R18)
	89	[1664]	TEST     	R17 1 ; if R17 then PC := 100
	90	[1664]	JMP      	100 ; PC := 100
	91	[1664]	GETTABLE 	R17 R2 K18 ; R17 := R2["SellingPrice"]
	92	[1664]	EQ       	1 R17 K19 ; if R17 == 0.000000 then PC := 100
	93	[1664]	JMP      	100 ; PC := 100
	94	[1664]	GETTABLE 	R17 R2 K20 ; R17 := R2["WillExpire"]
	95	[1664]	TEST     	R17 1 ; if R17 then PC := 100
	96	[1664]	JMP      	100 ; PC := 100
	97	[1664]	GETTABLE 	R17 R2 K21 ; R17 := R2["PreventSelling"]
	98	[1664]	NOT      	R17 R17 ; R17 := not R17
	99	[1664]	JMP      	102 ; PC := 102
	100	[1664]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 101
	101	[1664]	OP_LOADBOOL	R17 1 0 ; R17 := true
	102	[1665]	SELF     	R18 R0 K22 ; R19 := R0; R18 := R0[0x42b04007]
	103	[1665]	LOADK    	R20 K23 ; R20 := "/Lotus/Language/Menu/CantSell"
	104	[1665]	OP_LOADBOOL	R21 0 0 ; R21 := false
	105	[1665]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	106	[1666]	TEST     	R17 0 ; if not R17 then PC := 146
	107	[1666]	JMP      	146 ; PC := 146
	108	[1667]	GETTABLE 	R19 R2 K24 ; R19 := R2["Category"]
	109	[1667]	EQ       	0 R19 K26 ; if R19 ~= 4.000000 then PC := 141
	110	[1667]	JMP      	141 ; PC := 141
	111	[1667]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	112	[1667]	GETTABLE 	R20 R2 K27 ; R20 := R2["RawItem"]
	113	[1667]	CALL     	R19 2 2 ; R19 := R19(R20)
	114	[1667]	TEST     	R19 1 ; if R19 then PC := 141
	115	[1667]	JMP      	141 ; PC := 141
	116	[1667]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	117	[1667]	GETTABLE 	R20 R2 K27 ; R20 := R2["RawItem"]
	118	[1667]	GETTABLE 	R20 R20 K28 ; R20 := R20["mItemType"]
	119	[1667]	CALL     	R19 2 2 ; R19 := R19(R20)
	120	[1667]	TEST     	R19 1 ; if R19 then PC := 141
	121	[1667]	JMP      	141 ; PC := 141
	122	[1667]	GETTABLE 	R19 R2 K27 ; R19 := R2["RawItem"]
	123	[1667]	GETTABLE 	R19 R19 K28 ; R19 := R19["mItemType"]
	124	[1667]	SELF     	R19 R19 K29 ; R20 := R19; R19 := R19[0xf2deaf69]
	125	[1667]	GETUPVAL 	R21 U2 ; R21 := U2
	126	[1667]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	127	[1667]	TEST     	R19 1 ; if R19 then PC := 141
	128	[1667]	JMP      	141 ; PC := 141
	129	[1668]	GETTABLE 	R19 R2 K27 ; R19 := R2["RawItem"]
	130	[1668]	GETTABLE 	R19 R19 K30 ; R19 := R19["mInstance"]
	131	[1668]	SELF     	R19 R19 K31 ; R20 := R19; R19 := R19[0x362e069d]
	132	[1668]	GETTABLE 	R21 R2 K27 ; R21 := R2["RawItem"]
	133	[1668]	GETTABLE 	R21 R21 K32 ; R21 := R21["mUpgradeFingerprint"]
	134	[1668]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	135	[1669]	GETUPVAL 	R20 U3 ; R20 := U3
	136	[1669]	GETTABLE 	R20 R20 K33 ; R20 := R20[0x1142c7a8]
	137	[1669]	MOVE     	R21 R19 ; R21 := R19
	138	[1669]	CALL     	R20 2 2 ; R20 := R20(R21)
	139	[1669]	MOVE     	R18 R20 ; R18 := R20
	140	[1669]	JMP      	146 ; PC := 146
	141	[1671]	GETUPVAL 	R20 U3 ; R20 := U3
	142	[1671]	GETTABLE 	R20 R20 K33 ; R20 := R20[0x1142c7a8]
	143	[1671]	GETTABLE 	R21 R2 K18 ; R21 := R2["SellingPrice"]
	144	[1671]	CALL     	R20 2 2 ; R20 := R20(R21)
	145	[1671]	MOVE     	R18 R20 ; R18 := R20
	146	[1675]	GETGLOBAL	R20 K35 ; R20 := LABEL_TYPE_DUCATS
	147	[1675]	EQ       	1 R16 R20 ; if R16 == R20 then PC := 150
	148	[1675]	JMP      	150 ; PC := 150
	149	[1675]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 150
	150	[1675]	OP_LOADBOOL	R20 1 0 ; R20 := true
	151	[1675]	SETTABLE 	R2 K34 R20 ; R2[0x535d4938] := R20
	152	[1676]	GETUPVAL 	R20 U4 ; R20 := U4
	153	[1676]	MOVE     	R21 R16 ; R21 := R16
	154	[1676]	MOVE     	R22 R18 ; R22 := R18
	155	[1676]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	156	[1676]	MOVE     	R5 R20 ; R5 := R20
	157	[1677]	GETUPVAL 	R20 U3 ; R20 := U3
	158	[1677]	GETTABLE 	R20 R20 K37 ; R20 := R20[0x06d055f9]
	159	[1677]	GETTABLE 	R21 R15 K36 ; R21 := R15["HideInGrid"]
	160	[1677]	EQ       	0 R21 K15 ; if R21 ~= nil then PC := 163
	161	[1677]	JMP      	163 ; PC := 163
	162	[1677]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 163
	163	[1677]	OP_LOADBOOL	R21 1 0 ; R21 := true
	164	[1677]	GETTABLE 	R22 R15 K36 ; R22 := R15["HideInGrid"]
	165	[1677]	OP_LOADBOOL	R23 1 0 ; R23 := true
	166	[1677]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	167	[1677]	SETTABLE 	R5 K36 R20 ; R5["HideInGrid"] := R20
	168	[1678]	TEST     	R17 1 ; if R17 then PC := 170
	169	[1678]	JMP      	170 ; PC := 170
	170	[1682]	GETGLOBAL	R20 K5 ; R20 := 0x33bdd652
	171	[1682]	GETTABLE 	R20 R20 K6 ; R20 := R20[0x23d5322f]
	172	[1682]	MOVE     	R21 R6 ; R21 := R6
	173	[1682]	MOVE     	R22 R5 ; R22 := R5
	174	[1682]	CALL     	R20 3 1 ; R20(R21,R22)
	175	[1682]	JMP      	837 ; PC := 837
	176	[1683]	GETTABLE 	R20 R3 K38 ; R20 := R3["HidePrice"]
	177	[1683]	TEST     	R20 1 ; if R20 then PC := 712
	178	[1683]	JMP      	712 ; PC := 712
	179	[1683]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	180	[1683]	GETTABLE 	R21 R2 K39 ; R21 := R2["StoreItem"]
	181	[1683]	CALL     	R20 2 2 ; R20 := R20(R21)
	182	[1683]	TEST     	R20 1 ; if R20 then PC := 712
	183	[1683]	JMP      	712 ; PC := 712
	184	[1684]	GETTABLE 	R20 R3 K40 ; R20 := R3["SpecialPriceInfo"]
	185	[1684]	TEST     	R20 0 ; if not R20 then PC := 241
	186	[1684]	JMP      	241 ; PC := 241
	187	[1684]	GETTABLE 	R20 R3 K40 ; R20 := R3["SpecialPriceInfo"]
	188	[1684]	GETTABLE 	R20 R20 K41 ; R20 := R20["Price"]
	189	[1684]	LT       	0 K19 R20 ; if 0.000000 >= R20 then PC := 241
	190	[1684]	JMP      	241 ; PC := 241
	191	[1684]	GETTABLE 	R20 R3 K40 ; R20 := R3["SpecialPriceInfo"]
	192	[1684]	GETTABLE 	R20 R20 K17 ; R20 := R20["LabelType"]
	193	[1684]	EQ       	1 R20 K15 ; if R20 == nil then PC := 241
	194	[1684]	JMP      	241 ; PC := 241
	195	[1685]	GETUPVAL 	R20 U3 ; R20 := U3
	196	[1685]	GETTABLE 	R20 R20 K37 ; R20 := R20[0x06d055f9]
	197	[1685]	GETTABLE 	R21 R3 K40 ; R21 := R3["SpecialPriceInfo"]
	198	[1685]	GETTABLE 	R21 R21 K42 ; R21 := R21["TagOverride"]
	199	[1685]	EQ       	0 R21 K15 ; if R21 ~= nil then PC := 202
	200	[1685]	JMP      	202 ; PC := 202
	201	[1685]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 202
	202	[1685]	OP_LOADBOOL	R21 1 0 ; R21 := true
	203	[1685]	GETTABLE 	R22 R3 K40 ; R22 := R3["SpecialPriceInfo"]
	204	[1685]	GETTABLE 	R22 R22 K42 ; R22 := R22["TagOverride"]
	205	[1685]	GETUPVAL 	R23 U3 ; R23 := U3
	206	[1685]	GETTABLE 	R23 R23 K33 ; R23 := R23[0x1142c7a8]
	207	[1685]	GETTABLE 	R24 R3 K40 ; R24 := R3["SpecialPriceInfo"]
	208	[1685]	GETTABLE 	R24 R24 K41 ; R24 := R24["Price"]
	209	[1685]	CALL     	R23 2 0 ; R23,... := R23(R24)
	210	[1685]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	211	[1686]	GETUPVAL 	R21 U4 ; R21 := U4
	212	[1686]	GETTABLE 	R22 R3 K40 ; R22 := R3["SpecialPriceInfo"]
	213	[1686]	GETTABLE 	R22 R22 K17 ; R22 := R22["LabelType"]
	214	[1686]	MOVE     	R23 R20 ; R23 := R20
	215	[1686]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	216	[1686]	MOVE     	R5 R21 ; R5 := R21
	217	[1687]	GETTABLE 	R21 R3 K40 ; R21 := R3["SpecialPriceInfo"]
	218	[1687]	GETTABLE 	R21 R21 K43 ; R21 := R21["LabelPrefix"]
	219	[1687]	EQ       	1 R21 K15 ; if R21 == nil then PC := 224
	220	[1687]	JMP      	224 ; PC := 224
	221	[1688]	GETTABLE 	R21 R3 K40 ; R21 := R3["SpecialPriceInfo"]
	222	[1688]	GETTABLE 	R21 R21 K43 ; R21 := R21["LabelPrefix"]
	223	[1688]	SETTABLE 	R5 K43 R21 ; R5[0xdbfbf6c0] := R21
	224	[1690]	GETTABLE 	R21 R2 K44 ; R21 := R2["Count"]
	225	[1690]	EQ       	1 R21 K15 ; if R21 == nil then PC := 233
	226	[1690]	JMP      	233 ; PC := 233
	227	[1690]	GETTABLE 	R21 R2 K44 ; R21 := R2["Count"]
	228	[1690]	LT       	0 K19 R21 ; if 0.000000 >= R21 then PC := 233
	229	[1690]	JMP      	233 ; PC := 233
	230	[1690]	GETTABLE 	R21 R3 K45 ; R21 := R3["PriceIgnoreCount"]
	231	[1690]	NOT      	R21 R21 ; R21 := not R21
	232	[1690]	JMP      	235 ; PC := 235
	233	[1690]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 234
	234	[1690]	OP_LOADBOOL	R21 1 0 ; R21 := true
	235	[1690]	SETTABLE 	R5 K36 R21 ; R5["HideInGrid"] := R21
	236	[1692]	GETGLOBAL	R21 K5 ; R21 := 0x33bdd652
	237	[1692]	GETTABLE 	R21 R21 K6 ; R21 := R21[0x23d5322f]
	238	[1692]	MOVE     	R22 R6 ; R22 := R6
	239	[1692]	MOVE     	R23 R5 ; R23 := R5
	240	[1692]	CALL     	R21 3 1 ; R21(R22,R23)
	241	[1695]	GETTABLE 	R21 R2 K46 ; R21 := R2["ItemPrices"]
	242	[1695]	EQ       	1 R21 K15 ; if R21 == nil then PC := 399
	243	[1695]	JMP      	399 ; PC := 399
	244	[1696]	LOADNIL  	R21 R21 ; R21 := nil
	245	[1697]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	246	[1697]	GETGLOBAL	R23 K9 ; R23 := 0xbe190284
	247	[1697]	CALL     	R22 2 2 ; R22 := R22(R23)
	248	[1697]	TEST     	R22 1 ; if R22 then PC := 254
	249	[1697]	JMP      	254 ; PC := 254
	250	[1698]	GETGLOBAL	R22 K9 ; R22 := 0xbe190284
	251	[1698]	SELF     	R22 R22 K10 ; R23 := R22; R22 := R22[0xa1c390fe]
	252	[1698]	CALL     	R22 2 2 ; R22 := R22(R23)
	253	[1698]	MOVE     	R21 R22 ; R21 := R22
	254	[1701]	GETTABLE 	R22 R2 K46 ; R22 := R2["ItemPrices"]
	255	[1701]	LEN      	R22 R22 ; R22 := # R22
	256	[1702]	LOADK    	R23 := 1.000000
	257	[1702]	MOVE     	R24 R22 ; R24 := R22
	258	[1702]	LOADK    	R25 := 1.000000
	259	[1702]	FORPREP  	R23 398 ; R23 -= R25; PC := 398
	260	[1703]	GETTABLE 	R27 R2 K46 ; R27 := R2["ItemPrices"]
	261	[1703]	GETTABLE 	R27 R27 R26 ; R27 := R27[R26]
	262	[1704]	LOADNIL  	R28 R28 ; R28 := nil
	263	[1705]	GETGLOBAL	R29 K0 ; R29 := 0x7b998233
	264	[1705]	MOVE     	R30 R21 ; R30 := R21
	265	[1705]	CALL     	R29 2 2 ; R29 := R29(R30)
	266	[1705]	TEST     	R29 1 ; if R29 then PC := 272
	267	[1705]	JMP      	272 ; PC := 272
	268	[1706]	SELF     	R29 R21 K47 ; R30 := R21; R29 := R21[0x105074fb]
	269	[1706]	GETTABLE 	R31 R27 K28 ; R31 := R27["mItemType"]
	270	[1706]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	271	[1706]	MOVE     	R28 R29 ; R28 := R29
	272	[1708]	GETGLOBAL	R29 K0 ; R29 := 0x7b998233
	273	[1708]	MOVE     	R30 R28 ; R30 := R28
	274	[1708]	CALL     	R29 2 2 ; R29 := R29(R30)
	275	[1708]	TEST     	R29 0 ; if not R29 then PC := 281
	276	[1708]	JMP      	281 ; PC := 281
	277	[1709]	GETGLOBAL	R29 K48 ; R29 := 0xb009bbc6
	278	[1709]	GETTABLE 	R30 R27 K28 ; R30 := R27["mItemType"]
	279	[1709]	CALL     	R29 2 2 ; R29 := R29(R30)
	280	[1709]	MOVE     	R28 R29 ; R28 := R29
	281	[1711]	GETGLOBAL	R29 K0 ; R29 := 0x7b998233
	282	[1711]	MOVE     	R30 R28 ; R30 := R28
	283	[1711]	CALL     	R29 2 2 ; R29 := R29(R30)
	284	[1711]	TEST     	R29 1 ; if R29 then PC := 398
	285	[1711]	JMP      	398 ; PC := 398
	286	[1715]	LOADK    	R29 K49 ; R29 := ""
	287	[1716]	GETUPVAL 	R30 U3 ; R30 := U3
	288	[1716]	GETTABLE 	R30 R30 K33 ; R30 := R30[0x1142c7a8]
	289	[1716]	GETTABLE 	R31 R27 K50 ; R31 := R27["mItemCount"]
	290	[1716]	CALL     	R30 2 2 ; R30 := R30(R31)
	291	[1717]	GETTABLE 	R31 R27 K28 ; R31 := R27["mItemType"]
	292	[1717]	SELF     	R31 R31 K29 ; R32 := R31; R31 := R31[0xf2deaf69]
	293	[1717]	GETGLOBAL	R33 K51 ; R33 := gLotusArtifactUpgradeType
	294	[1717]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	295	[1717]	TEST     	R31 1 ; if R31 then PC := 306
	296	[1717]	JMP      	306 ; PC := 306
	297	[1717]	GETTABLE 	R31 R27 K52 ; R31 := R27["NumOwned"]
	298	[1717]	EQ       	1 R31 K15 ; if R31 == nil then PC := 306
	299	[1717]	JMP      	306 ; PC := 306
	300	[1718]	GETUPVAL 	R31 U3 ; R31 := U3
	301	[1718]	GETTABLE 	R31 R31 K33 ; R31 := R31[0x1142c7a8]
	302	[1718]	GETTABLE 	R32 R27 K52 ; R32 := R27["NumOwned"]
	303	[1718]	CALL     	R31 2 2 ; R31 := R31(R32)
	304	[1718]	LOADK    	R32 K53 ; R32 := "/"
	305	[1718]	CONCAT   	R29 R31 R32 ; R29 := R31 .. R32
	306	[1720]	GETGLOBAL	R31 K54 ; R31 := 0x64fb1586
	307	[1720]	SELF     	R32 R28 K55 ; R33 := R28; R32 := R28[0xd3a9d01f]
	308	[1720]	CALL     	R32 2 0 ; R32,... := R32(R33)
	309	[1720]	CALL     	R31 0 2 ; R31 := R31(R32,...)
	310	[1721]	OP_LOADBOOL	R32 0 0 ; R32 := false
	311	[1722]	MOVE     	R33 R29 ; R33 := R29
	312	[1722]	MOVE     	R34 R30 ; R34 := R30
	313	[1722]	LOADK    	R35 K56 ; R35 := " "
	314	[1722]	GETGLOBAL	R36 K57 ; R36 := 0x5f0788c4
	315	[1722]	SELF     	R37 R0 K22 ; R38 := R0; R37 := R0[0x42b04007]
	316	[1722]	MOVE     	R39 R31 ; R39 := R31
	317	[1722]	OP_LOADBOOL	R40 0 0 ; R40 := false
	318	[1722]	CALL     	R37 4 0 ; R37,... := R37(R38,R39,R40)
	319	[1722]	CALL     	R36 0 2 ; R36 := R36(R37,...)
	320	[1722]	CONCAT   	R29 R33 R36 ; R29 := R33 .. R34 .. R35 .. R36
	321	[1723]	GETTABLE 	R33 R27 K58 ; R33 := R27["mItemCountBeforeDiscount"]
	322	[1723]	EQ       	1 R33 K15 ; if R33 == nil then PC := 337
	323	[1723]	JMP      	337 ; PC := 337
	324	[1723]	GETTABLE 	R33 R27 K58 ; R33 := R27["mItemCountBeforeDiscount"]
	325	[1723]	GETTABLE 	R34 R27 K50 ; R34 := R27["mItemCount"]
	326	[1723]	EQ       	1 R33 R34 ; if R33 == R34 then PC := 337
	327	[1723]	JMP      	337 ; PC := 337
	328	[1724]	MOVE     	R33 R29 ; R33 := R29
	329	[1724]	GETUPVAL 	R34 U5 ; R34 := U5
	330	[1724]	MOVE     	R35 R0 ; R35 := R0
	331	[1724]	GETTABLE 	R36 R27 K50 ; R36 := R27["mItemCount"]
	332	[1724]	GETTABLE 	R37 R27 K58 ; R37 := R27["mItemCountBeforeDiscount"]
	333	[1724]	GETTABLE 	R38 R2 K39 ; R38 := R2["StoreItem"]
	334	[1724]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	335	[1724]	CONCAT   	R29 R33 R34 ; R29 := R33 .. R34
	336	[1725]	OP_LOADBOOL	R32 1 0 ; R32 := true
	337	[1727]	GETUPVAL 	R33 U4 ; R33 := U4
	338	[1727]	GETGLOBAL	R34 K59 ; R34 := LABEL_TYPE_MISC_ITEM
	339	[1727]	MOVE     	R35 R29 ; R35 := R29
	340	[1727]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	341	[1727]	MOVE     	R5 R33 ; R5 := R33
	342	[1728]	SETTABLE 	R5 K60 R32 ; R5["MultiLine"] := R32
	343	[1729]	GETTABLE 	R33 R27 K28 ; R33 := R27["mItemType"]
	344	[1729]	SELF     	R33 R33 K29 ; R34 := R33; R33 := R33[0xf2deaf69]
	345	[1729]	GETGLOBAL	R35 K61 ; R35 := 0x7ed0a956
	346	[1729]	LOADK    	R36 K62 ; R36 := "/Lotus/Types/Items/Deimos/EntratiFragmentBase"
	347	[1729]	CALL     	R35 2 0 ; R35,... := R35(R36)
	348	[1729]	CALL     	R33 0 2 ; R33 := R33(R34,...)
	349	[1729]	TEST     	R33 0 ; if not R33 then PC := 368
	350	[1729]	JMP      	368 ; PC := 368
	351	[1730]	GETGLOBAL	R33 K63 ; R33 := 0x015284cd
	352	[1730]	LOADK    	R34 K53 ; R34 := "/"
	353	[1730]	MOVE     	R35 R31 ; R35 := R31
	354	[1730]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	355	[1731]	LEN      	R34 R33 ; R34 := # R33
	356	[1731]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	357	[1732]	NEWTABLE 	R34 0 6 ; R34 := {}
	358	[1733]	SETTABLE 	R34 K64 K65 ; R34["EntratiFragmentCommonA"] := "<OTAK_TOKEN>"
	359	[1734]	SETTABLE 	R34 K66 K67 ; R34["EntratiFragmentCommonB"] := "<SON_TOKEN>"
	360	[1735]	SETTABLE 	R34 K68 K69 ; R34["EntratiFragmentCommonC"] := "<DAUGHTER_TOKEN>"
	361	[1736]	SETTABLE 	R34 K70 K71 ; R34["EntratiFragmentUncommonA"] := "<FATHER_TOKEN>"
	362	[1737]	SETTABLE 	R34 K72 K73 ; R34["EntratiFragmentUncommonB"] := "<MOTHER_TOKEN>"
	363	[1738]	SETTABLE 	R34 K74 K75 ; R34["EntratiFragmentRareA"] := "<GRANDMOTHER_TOKEN>"
	364	[1740]	GETTABLE 	R35 R34 R33 ; R35 := R34[R33]
	365	[1740]	SETTABLE 	R5 K43 R35 ; R5[0xdbfbf6c0] := R35
	366	[1741]	SETTABLE 	R5 K76 K77 ; R5["LabelOffset"] := 2.000000
	367	[1741]	JMP      	379 ; PC := 379
	368	[1743]	GETUPVAL 	R35 U1 ; R35 := U1
	369	[1743]	GETTABLE 	R35 R35 K78 ; R35 := R35[0x056dcf06]
	370	[1743]	MOVE     	R36 R28 ; R36 := R28
	371	[1743]	OP_LOADBOOL	R37 1 0 ; R37 := true
	372	[1743]	CALL     	R35 3 3 ; R35,R36 := R35(R36,R37)
	373	[1744]	SETTABLE 	R5 K79 R35 ; R5["Icon"] := R35
	374	[1745]	TEST     	R36 0 ; if not R36 then PC := 379
	375	[1745]	JMP      	379 ; PC := 379
	376	[1746]	GETTABLE 	R37 R5 K80 ; R37 := R5["IconDims"]
	377	[1746]	SETTABLE 	R37 K81 K82 ; R37["W"] := 25.000000
	378	[1747]	SETTABLE 	R5 K76 K82 ; R5["LabelOffset"] := 25.000000
	379	[1751]	EQ       	0 R22 K83 ; if R22 ~= 1.000000 then PC := 393
	380	[1751]	JMP      	393 ; PC := 393
	381	[1752]	LOADK    	R37 K56 ; R37 := " "
	382	[1752]	MOVE     	R38 R30 ; R38 := R30
	383	[1752]	CONCAT   	R37 R37 R38 ; R37 := R37 .. R38
	384	[1752]	SETTABLE 	R5 K84 R37 ; R5["mGridLabelTag"] := R37
	385	[1753]	NEWTABLE 	R37 0 2 ; R37 := {}
	386	[1753]	SETTABLE 	R37 K86 K87 ; R37["X"] := 3.000000
	387	[1753]	SETTABLE 	R37 K88 K19 ; R37["Y"] := 0.000000
	388	[1753]	SETTABLE 	R5 K85 R37 ; R5["IconPos"] := R37
	389	[1754]	NEWTABLE 	R37 0 2 ; R37 := {}
	390	[1754]	SETTABLE 	R37 K81 K89 ; R37["W"] := 26.000000
	391	[1754]	SETTABLE 	R37 K90 K89 ; R37["H"] := 26.000000
	392	[1754]	SETTABLE 	R5 K80 R37 ; R5["IconDims"] := R37
	393	[1757]	GETGLOBAL	R37 K5 ; R37 := 0x33bdd652
	394	[1757]	GETTABLE 	R37 R37 K6 ; R37 := R37[0x23d5322f]
	395	[1757]	MOVE     	R38 R6 ; R38 := R6
	396	[1757]	MOVE     	R39 R5 ; R39 := R5
	397	[1757]	CALL     	R37 3 1 ; R37(R38,R39)
	398	[1702]	FORLOOP  	R23 260 ; R23 += R25; if R23 <= R24 then begin PC := 260; R26 := R23 end
	399	[1762]	GETUPVAL 	R37 U6 ; R37 := U6
	400	[1762]	GETTABLE 	R37 R37 K91 ; R37 := R37[0x9df9be7e]
	401	[1762]	GETTABLE 	R38 R2 K39 ; R38 := R2["StoreItem"]
	402	[1762]	CALL     	R37 2 2 ; R37 := R37(R38)
	403	[1763]	GETUPVAL 	R38 U6 ; R38 := U6
	404	[1763]	GETTABLE 	R38 R38 K92 ; R38 := R38[0x4da2faab]
	405	[1763]	GETTABLE 	R39 R2 K39 ; R39 := R2["StoreItem"]
	406	[1763]	CALL     	R38 2 2 ; R38 := R38(R39)
	407	[1764]	GETUPVAL 	R39 U6 ; R39 := U6
	408	[1764]	GETTABLE 	R39 R39 K93 ; R39 := R39[0x7139588b]
	409	[1764]	GETTABLE 	R40 R2 K39 ; R40 := R2["StoreItem"]
	410	[1764]	CALL     	R39 2 2 ; R39 := R39(R40)
	411	[1765]	GETTABLE 	R40 R2 K39 ; R40 := R2["StoreItem"]
	412	[1765]	SELF     	R40 R40 K94 ; R41 := R40; R40 := R40[0x0f5a34d1]
	413	[1765]	CALL     	R40 2 2 ; R40 := R40(R41)
	414	[1766]	GETTABLE 	R41 R2 K39 ; R41 := R2["StoreItem"]
	415	[1766]	SELF     	R41 R41 K95 ; R42 := R41; R41 := R41[0xdaefcda4]
	416	[1766]	CALL     	R41 2 2 ; R41 := R41(R42)
	417	[1766]	LT       	0 K19 R41 ; if 0.000000 >= R41 then PC := 423
	418	[1766]	JMP      	423 ; PC := 423
	419	[1766]	GETGLOBAL	R41 K25 ; R41 := 0x34291f5c
	420	[1766]	GETTABLE 	R41 R41 K96 ; R41 := R41[0xbcd06415]
	421	[1766]	CALL     	R41 1 2 ; R41 := R41()
	422	[1766]	JMP      	425 ; PC := 425
	423	[1766]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 424
	424	[1766]	OP_LOADBOOL	R41 1 0 ; R41 := true
	425	[1767]	GETGLOBAL	R42 K25 ; R42 := 0x34291f5c
	426	[1767]	GETTABLE 	R42 R42 K97 ; R42 := R42[0xe6b41adb]
	427	[1767]	CALL     	R42 1 2 ; R42 := R42()
	428	[1767]	TEST     	R42 0 ; if not R42 then PC := 436
	429	[1767]	JMP      	436 ; PC := 436
	430	[1767]	GETGLOBAL	R42 K12 ; R42 := 0x25d99d89
	431	[1767]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xfb406c3c]
	432	[1767]	GETTABLE 	R44 R2 K39 ; R44 := R2["StoreItem"]
	433	[1767]	SELF     	R44 R44 K99 ; R45 := R44; R44 := R44[0x19865272]
	434	[1767]	CALL     	R44 2 0 ; R44,... := R44(R45)
	435	[1767]	CALL     	R42 0 2 ; R42 := R42(R43,...)
	436	[1768]	TEST     	R40 0 ; if not R40 then PC := 440
	437	[1768]	JMP      	440 ; PC := 440
	438	[1768]	EQ       	1 R37 K100 ; if R37 == "UNAVAILABLE" then PC := 837
	439	[1768]	JMP      	837 ; PC := 837
	440	[1769]	TEST     	R41 0 ; if not R41 then PC := 444
	441	[1769]	JMP      	444 ; PC := 444
	442	[1769]	EQ       	1 R38 K100 ; if R38 == "UNAVAILABLE" then PC := 837
	443	[1769]	JMP      	837 ; PC := 837
	444	[1770]	TEST     	R42 0 ; if not R42 then PC := 449
	445	[1770]	JMP      	449 ; PC := 449
	446	[1770]	EQ       	0 R39 K100 ; if R39 ~= "UNAVAILABLE" then PC := 449
	447	[1770]	JMP      	449 ; PC := 449
	448	[1770]	JMP      	837 ; PC := 837
	449	[1772]	TEST     	R40 0 ; if not R40 then PC := 453
	450	[1772]	JMP      	453 ; PC := 453
	451	[1772]	EQ       	1 R37 K101 ; if R37 == "EXTERNAL" then PC := 461
	452	[1772]	JMP      	461 ; PC := 461
	453	[1773]	TEST     	R41 0 ; if not R41 then PC := 457
	454	[1773]	JMP      	457 ; PC := 457
	455	[1773]	EQ       	1 R38 K101 ; if R38 == "EXTERNAL" then PC := 461
	456	[1773]	JMP      	461 ; PC := 461
	457	[1774]	TEST     	R42 0 ; if not R42 then PC := 575
	458	[1774]	JMP      	575 ; PC := 575
	459	[1774]	EQ       	0 R39 K101 ; if R39 ~= "EXTERNAL" then PC := 575
	460	[1774]	JMP      	575 ; PC := 575
	461	[1776]	LOADK    	R43 K102 ; R43 := "0.00"
	462	[1777]	GETGLOBAL	R44 K0 ; R44 := 0x7b998233
	463	[1777]	GETGLOBAL	R45 K12 ; R45 := 0x25d99d89
	464	[1777]	CALL     	R44 2 2 ; R44 := R44(R45)
	465	[1777]	TEST     	R44 1 ; if R44 then PC := 544
	466	[1777]	JMP      	544 ; PC := 544
	467	[1778]	GETTABLE 	R44 R2 K39 ; R44 := R2["StoreItem"]
	468	[1778]	SELF     	R44 R44 K95 ; R45 := R44; R44 := R44[0xdaefcda4]
	469	[1778]	CALL     	R44 2 2 ; R44 := R44(R45)
	470	[1778]	EQ       	0 R44 K26 ; if R44 ~= 4.000000 then PC := 536
	471	[1778]	JMP      	536 ; PC := 536
	472	[1778]	GETTABLE 	R44 R2 K39 ; R44 := R2["StoreItem"]
	473	[1778]	SELF     	R44 R44 K103 ; R45 := R44; R44 := R44[0xfe9eb1a5]
	474	[1778]	CALL     	R44 2 2 ; R44 := R44(R45)
	475	[1778]	EQ       	0 R44 K104 ; if R44 ~= 9.000000 then PC := 536
	476	[1778]	JMP      	536 ; PC := 536
	477	[1779]	GETGLOBAL	R44 K12 ; R44 := 0x25d99d89
	478	[1779]	SELF     	R44 R44 K105 ; R45 := R44; R44 := R44[0x104b2223]
	479	[1779]	CALL     	R44 2 2 ; R44 := R44(R45)
	480	[1780]	EQ       	1 R44 K15 ; if R44 == nil then PC := 527
	481	[1780]	JMP      	527 ; PC := 527
	482	[1780]	GETGLOBAL	R45 K25 ; R45 := 0x34291f5c
	483	[1780]	GETTABLE 	R45 R45 K106 ; R45 := R45[0x397b920f]
	484	[1780]	GETTABLE 	R46 R44 K107 ; R46 := R44["mExpiry"]
	485	[1780]	CALL     	R45 2 2 ; R45 := R45(R46)
	486	[1780]	LT       	0 K19 R45 ; if 0.000000 >= R45 then PC := 527
	487	[1780]	JMP      	527 ; PC := 527
	488	[1781]	GETGLOBAL	R45 K12 ; R45 := 0x25d99d89
	489	[1781]	SELF     	R45 R45 K108 ; R46 := R45; R45 := R45[0x183d1d74]
	490	[1781]	GETUPVAL 	R47 U6 ; R47 := U6
	491	[1781]	GETTABLE 	R47 R47 K109 ; R47 := R47[0xab8bc5ac]
	492	[1781]	GETTABLE 	R48 R2 K39 ; R48 := R2["StoreItem"]
	493	[1781]	CALL     	R47 2 0 ; R47,... := R47(R48)
	494	[1781]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	495	[1782]	GETTABLE 	R46 R44 K110 ; R46 := R44["mDiscount"]
	496	[1782]	MUL      	R46 R45 R46 ; R46 := R45 * R46
	497	[1782]	DIV      	R46 R46 K111 ; R46 := R46 / 100.000000
	498	[1783]	SUB      	R47 R45 R46 ; R47 := R45 - R46
	499	[1784]	GETGLOBAL	R48 K12 ; R48 := 0x25d99d89
	500	[1784]	SELF     	R48 R48 K112 ; R49 := R48; R48 := R48[0xfe9896f2]
	501	[1784]	GETUPVAL 	R50 U6 ; R50 := U6
	502	[1784]	GETTABLE 	R50 R50 K109 ; R50 := R50[0xab8bc5ac]
	503	[1784]	GETTABLE 	R51 R2 K39 ; R51 := R2["StoreItem"]
	504	[1784]	CALL     	R50 2 2 ; R50 := R50(R51)
	505	[1784]	GETUPVAL 	R51 U3 ; R51 := U3
	506	[1784]	GETTABLE 	R51 R51 K33 ; R51 := R51[0x1142c7a8]
	507	[1784]	MOVE     	R52 R47 ; R52 := R47
	508	[1784]	LOADK    	R53 := 2.000000
	509	[1784]	OP_LOADBOOL	R54 1 0 ; R54 := true
	510	[1784]	OP_LOADBOOL	R55 1 0 ; R55 := true
	511	[1784]	CALL     	R51 5 0 ; R51,... := R51(R52,R53,R54,R55)
	512	[1784]	CALL     	R48 0 2 ; R48 := R48(R49,...)
	513	[1785]	GETTABLE 	R49 R44 K110 ; R49 := R44["mDiscount"]
	514	[1786]	SELF     	R50 R0 K22 ; R51 := R0; R50 := R0[0x42b04007]
	515	[1786]	LOADK    	R52 K113 ; R52 := "/Lotus/Language/Bundles/DetailedPurchase_DiscountAndDiscountPrice"
	516	[1786]	OP_LOADBOOL	R53 0 0 ; R53 := false
	517	[1786]	NEWTABLE 	R54 0 2 ; R54 := {}
	518	[1786]	SETTABLE 	R54 K114 R49 ; R54["DISCOUNT"] := R49
	519	[1786]	GETGLOBAL	R55 K116 ; R55 := 0x7f5022cf
	520	[1786]	GETTABLE 	R55 R55 K117 ; R55 := R55[0x3f3e4d12]
	521	[1786]	MOVE     	R56 R48 ; R56 := R48
	522	[1786]	CALL     	R55 2 2 ; R55 := R55(R56)
	523	[1786]	SETTABLE 	R54 K115 R55 ; R54["PRICE"] := R55
	524	[1786]	CALL     	R50 5 2 ; R50 := R50(R51,R52,R53,R54)
	525	[1786]	MOVE     	R43 R50 ; R43 := R50
	526	[1786]	JMP      	544 ; PC := 544
	527	[1789]	GETGLOBAL	R50 K12 ; R50 := 0x25d99d89
	528	[1789]	SELF     	R50 R50 K118 ; R51 := R50; R50 := R50[0xf952636e]
	529	[1789]	GETUPVAL 	R52 U6 ; R52 := U6
	530	[1789]	GETTABLE 	R52 R52 K109 ; R52 := R52[0xab8bc5ac]
	531	[1789]	GETTABLE 	R53 R2 K39 ; R53 := R2["StoreItem"]
	532	[1789]	CALL     	R52 2 0 ; R52,... := R52(R53)
	533	[1789]	CALL     	R50 0 2 ; R50 := R50(R51,...)
	534	[1789]	MOVE     	R43 R50 ; R43 := R50
	535	[1790]	JMP      	544 ; PC := 544
	536	[1792]	GETGLOBAL	R50 K12 ; R50 := 0x25d99d89
	537	[1792]	SELF     	R50 R50 K118 ; R51 := R50; R50 := R50[0xf952636e]
	538	[1792]	GETUPVAL 	R52 U6 ; R52 := U6
	539	[1792]	GETTABLE 	R52 R52 K109 ; R52 := R52[0xab8bc5ac]
	540	[1792]	GETTABLE 	R53 R2 K39 ; R53 := R2["StoreItem"]
	541	[1792]	CALL     	R52 2 0 ; R52,... := R52(R53)
	542	[1792]	CALL     	R50 0 2 ; R50 := R50(R51,...)
	543	[1792]	MOVE     	R43 R50 ; R43 := R50
	544	[1797]	TEST     	R41 0 ; if not R41 then PC := 555
	545	[1797]	JMP      	555 ; PC := 555
	546	[1798]	GETGLOBAL	R50 K5 ; R50 := 0x33bdd652
	547	[1798]	GETTABLE 	R50 R50 K6 ; R50 := R50[0x23d5322f]
	548	[1798]	MOVE     	R51 R6 ; R51 := R6
	549	[1798]	GETUPVAL 	R52 U4 ; R52 := U4
	550	[1798]	GETGLOBAL	R53 K119 ; R53 := LABEL_TYPE_EPIC
	551	[1798]	MOVE     	R54 R43 ; R54 := R43
	552	[1798]	CALL     	R52 3 0 ; R52,... := R52(R53,R54)
	553	[1798]	CALL     	R50 0 1 ; R50(R51,...)
	554	[1798]	JMP      	837 ; PC := 837
	555	[1799]	TEST     	R42 0 ; if not R42 then PC := 566
	556	[1799]	JMP      	566 ; PC := 566
	557	[1800]	GETGLOBAL	R50 K5 ; R50 := 0x33bdd652
	558	[1800]	GETTABLE 	R50 R50 K6 ; R50 := R50[0x23d5322f]
	559	[1800]	MOVE     	R51 R6 ; R51 := R6
	560	[1800]	GETUPVAL 	R52 U4 ; R52 := U4
	561	[1800]	GETGLOBAL	R53 K119 ; R53 := LABEL_TYPE_EPIC
	562	[1800]	MOVE     	R54 R43 ; R54 := R43
	563	[1800]	CALL     	R52 3 0 ; R52,... := R52(R53,R54)
	564	[1800]	CALL     	R50 0 1 ; R50(R51,...)
	565	[1800]	JMP      	837 ; PC := 837
	566	[1802]	GETGLOBAL	R50 K5 ; R50 := 0x33bdd652
	567	[1802]	GETTABLE 	R50 R50 K6 ; R50 := R50[0x23d5322f]
	568	[1802]	MOVE     	R51 R6 ; R51 := R6
	569	[1802]	GETUPVAL 	R52 U4 ; R52 := U4
	570	[1802]	GETGLOBAL	R53 K120 ; R53 := LABEL_TYPE_STEAM
	571	[1802]	MOVE     	R54 R43 ; R54 := R43
	572	[1802]	CALL     	R52 3 0 ; R52,... := R52(R53,R54)
	573	[1802]	CALL     	R50 0 1 ; R50(R51,...)
	574	[1803]	JMP      	837 ; PC := 837
	575	[1804]	GETTABLE 	R50 R2 K121 ; R50 := R2["IsExternalProduct"]
	576	[1804]	TEST     	R50 1 ; if R50 then PC := 837
	577	[1804]	JMP      	837 ; PC := 837
	578	[1805]	GETUPVAL 	R50 U6 ; R50 := U6
	579	[1805]	GETTABLE 	R50 R50 K122 ; R50 := R50[0xe9947039]
	580	[1805]	GETTABLE 	R51 R2 K39 ; R51 := R2["StoreItem"]
	581	[1805]	LOADNIL  	R52 R52 ; R52 := nil
	582	[1805]	OP_LOADBOOL	R53 0 0 ; R53 := false
	583	[1805]	MOVE     	R54 R13 ; R54 := R13
	584	[1805]	OP_LOADBOOL	R55 0 0 ; R55 := false
	585	[1805]	CALL     	R50 6 3 ; R50,R51 := R50(R51,R52,R53,R54,R55)
	586	[1806]	GETUPVAL 	R52 U6 ; R52 := U6
	587	[1806]	GETTABLE 	R52 R52 K122 ; R52 := R52[0xe9947039]
	588	[1806]	GETTABLE 	R53 R2 K39 ; R53 := R2["StoreItem"]
	589	[1806]	LOADNIL  	R54 R54 ; R54 := nil
	590	[1806]	OP_LOADBOOL	R55 1 0 ; R55 := true
	591	[1806]	MOVE     	R56 R13 ; R56 := R13
	592	[1806]	OP_LOADBOOL	R57 1 0 ; R57 := true
	593	[1806]	CALL     	R52 6 3 ; R52,R53 := R52(R53,R54,R55,R56,R57)
	594	[1807]	LOADK    	R54 := 0.000000
	595	[1808]	GETTABLE 	R55 R2 K123 ; R55 := R2["RegularPrice"]
	596	[1808]	EQ       	1 R55 K15 ; if R55 == nil then PC := 613
	597	[1808]	JMP      	613 ; PC := 613
	598	[1809]	GETTABLE 	R52 R2 K123 ; R52 := R2["RegularPrice"]
	599	[1810]	GETUPVAL 	R55 U3 ; R55 := U3
	600	[1810]	GETTABLE 	R55 R55 K37 ; R55 := R55[0x06d055f9]
	601	[1810]	GETTABLE 	R56 R2 K124 ; R56 := R2["RegularPriceBeforeDiscount"]
	602	[1810]	EQ       	1 R56 K15 ; if R56 == nil then PC := 607
	603	[1810]	JMP      	607 ; PC := 607
	604	[1810]	GETTABLE 	R56 R2 K124 ; R56 := R2["RegularPriceBeforeDiscount"]
	605	[1810]	LT       	1 K19 R56 ; if 0.000000 < R56 then PC := 608
	606	[1810]	JMP      	608 ; PC := 608
	607	[1810]	OP_LOADBOOL	R56 0 1 ; R56 := false; PC := 608
	608	[1810]	OP_LOADBOOL	R56 1 0 ; R56 := true
	609	[1810]	GETTABLE 	R57 R2 K124 ; R57 := R2["RegularPriceBeforeDiscount"]
	610	[1810]	MOVE     	R58 R52 ; R58 := R52
	611	[1810]	CALL     	R55 4 2 ; R55 := R55(R56,R57,R58)
	612	[1810]	MOVE     	R50 R55 ; R50 := R55
	613	[1812]	GETTABLE 	R55 R2 K125 ; R55 := R2["PremiumPrice"]
	614	[1812]	EQ       	1 R55 K15 ; if R55 == nil then PC := 618
	615	[1812]	JMP      	618 ; PC := 618
	616	[1813]	GETTABLE 	R53 R2 K125 ; R53 := R2["PremiumPrice"]
	617	[1814]	MOVE     	R51 R53 ; R51 := R53
	618	[1816]	GETTABLE 	R55 R2 K126 ; R55 := R2["SpecialPrice"]
	619	[1816]	EQ       	1 R55 K15 ; if R55 == nil then PC := 622
	620	[1816]	JMP      	622 ; PC := 622
	621	[1817]	GETTABLE 	R54 R2 K126 ; R54 := R2["SpecialPrice"]
	622	[1819]	LT       	1 K19 R53 ; if 0.000000 < R53 then PC := 625
	623	[1819]	JMP      	625 ; PC := 625
	624	[1819]	OP_LOADBOOL	R55 0 1 ; R55 := false; PC := 625
	625	[1819]	OP_LOADBOOL	R55 1 0 ; R55 := true
	626	[1820]	TEST     	R55 1 ; if R55 then PC := 630
	627	[1820]	JMP      	630 ; PC := 630
	628	[1820]	LT       	0 K19 R52 ; if 0.000000 >= R52 then PC := 837
	629	[1820]	JMP      	837 ; PC := 837
	630	[1821]	GETUPVAL 	R56 U3 ; R56 := U3
	631	[1821]	GETTABLE 	R56 R56 K37 ; R56 := R56[0x06d055f9]
	632	[1821]	MOVE     	R57 R55 ; R57 := R55
	633	[1821]	LT       	1 R53 R51 ; if R53 < R51 then PC := 636
	634	[1821]	JMP      	636 ; PC := 636
	635	[1821]	OP_LOADBOOL	R58 0 1 ; R58 := false; PC := 636
	636	[1821]	OP_LOADBOOL	R58 1 0 ; R58 := true
	637	[1821]	LT       	1 R52 R50 ; if R52 < R50 then PC := 640
	638	[1821]	JMP      	640 ; PC := 640
	639	[1821]	OP_LOADBOOL	R59 0 1 ; R59 := false; PC := 640
	640	[1821]	OP_LOADBOOL	R59 1 0 ; R59 := true
	641	[1821]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	642	[1822]	GETUPVAL 	R57 U3 ; R57 := U3
	643	[1822]	GETTABLE 	R57 R57 K33 ; R57 := R57[0x1142c7a8]
	644	[1822]	GETUPVAL 	R58 U3 ; R58 := U3
	645	[1822]	GETTABLE 	R58 R58 K37 ; R58 := R58[0x06d055f9]
	646	[1822]	MOVE     	R59 R55 ; R59 := R55
	647	[1822]	MOVE     	R60 R53 ; R60 := R53
	648	[1822]	MOVE     	R61 R52 ; R61 := R52
	649	[1822]	CALL     	R58 4 0 ; R58,... := R58(R59,R60,R61)
	650	[1822]	CALL     	R57 0 2 ; R57 := R57(R58,...)
	651	[1823]	GETUPVAL 	R58 U4 ; R58 := U4
	652	[1823]	GETUPVAL 	R59 U3 ; R59 := U3
	653	[1823]	GETTABLE 	R59 R59 K37 ; R59 := R59[0x06d055f9]
	654	[1823]	MOVE     	R60 R55 ; R60 := R55
	655	[1823]	GETGLOBAL	R61 K127 ; R61 := LABEL_TYPE_PLATINUM
	656	[1823]	GETGLOBAL	R62 K16 ; R62 := LABEL_TYPE_CREDITS
	657	[1823]	CALL     	R59 4 2 ; R59 := R59(R60,R61,R62)
	658	[1823]	MOVE     	R60 R57 ; R60 := R57
	659	[1823]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	660	[1823]	MOVE     	R5 R58 ; R5 := R58
	661	[1824]	GETTABLE 	R58 R2 K124 ; R58 := R2["RegularPriceBeforeDiscount"]
	662	[1824]	EQ       	1 R58 K15 ; if R58 == nil then PC := 675
	663	[1824]	JMP      	675 ; PC := 675
	664	[1824]	EQ       	1 R52 R50 ; if R52 == R50 then PC := 675
	665	[1824]	JMP      	675 ; PC := 675
	666	[1825]	GETUPVAL 	R58 U5 ; R58 := U5
	667	[1825]	MOVE     	R59 R0 ; R59 := R0
	668	[1825]	MOVE     	R60 R52 ; R60 := R52
	669	[1825]	MOVE     	R61 R50 ; R61 := R50
	670	[1825]	GETTABLE 	R62 R2 K39 ; R62 := R2["StoreItem"]
	671	[1825]	CALL     	R58 5 2 ; R58 := R58(R59,R60,R61,R62)
	672	[1825]	SETTABLE 	R5 K128 R58 ; R5["PricePostfix"] := R58
	673	[1826]	SETTABLE 	R5 K60 K129 ; R5["MultiLine"] := true
	674	[1827]	OP_LOADBOOL	R56 0 0 ; R56 := false
	675	[1829]	GETTABLE 	R58 R3 K131 ; R58 := R3["IgnoreDiscount"]
	676	[1829]	TEST     	R58 1 ; if R58 then PC := 680
	677	[1829]	JMP      	680 ; PC := 680
	678	[1829]	MOVE     	R58 R56 ; R58 := R56
	679	[1829]	JMP      	682 ; PC := 682
	680	[1829]	OP_LOADBOOL	R58 0 1 ; R58 := false; PC := 681
	681	[1829]	OP_LOADBOOL	R58 1 0 ; R58 := true
	682	[1829]	SETTABLE 	R5 K130 R58 ; R5["ShowDiscount"] := R58
	683	[1830]	GETUPVAL 	R58 U3 ; R58 := U3
	684	[1830]	GETTABLE 	R58 R58 K37 ; R58 := R58[0x06d055f9]
	685	[1830]	MOVE     	R59 R55 ; R59 := R55
	686	[1830]	MOVE     	R60 R51 ; R60 := R51
	687	[1830]	MOVE     	R61 R50 ; R61 := R50
	688	[1830]	CALL     	R58 4 2 ; R58 := R58(R59,R60,R61)
	689	[1830]	SETTABLE 	R5 K123 R58 ; R5["RegularPrice"] := R58
	690	[1831]	GETTABLE 	R58 R2 K44 ; R58 := R2["Count"]
	691	[1831]	EQ       	1 R58 K15 ; if R58 == nil then PC := 699
	692	[1831]	JMP      	699 ; PC := 699
	693	[1831]	GETTABLE 	R58 R2 K44 ; R58 := R2["Count"]
	694	[1831]	LT       	0 K19 R58 ; if 0.000000 >= R58 then PC := 699
	695	[1831]	JMP      	699 ; PC := 699
	696	[1831]	GETTABLE 	R58 R3 K45 ; R58 := R3["PriceIgnoreCount"]
	697	[1831]	TEST     	R58 0 ; if not R58 then PC := 704
	698	[1831]	JMP      	704 ; PC := 704
	699	[1831]	TEST     	R55 1 ; if R55 then PC := 703
	700	[1831]	JMP      	703 ; PC := 703
	701	[1831]	LT       	1 K19 R54 ; if 0.000000 < R54 then PC := 704
	702	[1831]	JMP      	704 ; PC := 704
	703	[1831]	OP_LOADBOOL	R58 0 1 ; R58 := false; PC := 704
	704	[1831]	OP_LOADBOOL	R58 1 0 ; R58 := true
	705	[1831]	SETTABLE 	R5 K36 R58 ; R5["HideInGrid"] := R58
	706	[1832]	GETGLOBAL	R58 K5 ; R58 := 0x33bdd652
	707	[1832]	GETTABLE 	R58 R58 K6 ; R58 := R58[0x23d5322f]
	708	[1832]	MOVE     	R59 R6 ; R59 := R6
	709	[1832]	MOVE     	R60 R5 ; R60 := R5
	710	[1832]	CALL     	R58 3 1 ; R58(R59,R60)
	711	[1834]	JMP      	837 ; PC := 837
	712	[1836]	TEST     	R7 1 ; if R7 then PC := 794
	713	[1836]	JMP      	794 ; PC := 794
	714	[1836]	GETTABLE 	R58 R2 K121 ; R58 := R2["IsExternalProduct"]
	715	[1836]	TEST     	R58 1 ; if R58 then PC := 794
	716	[1836]	JMP      	794 ; PC := 794
	717	[1837]	GETUPVAL 	R58 U6 ; R58 := U6
	718	[1837]	GETTABLE 	R58 R58 K122 ; R58 := R58[0xe9947039]
	719	[1837]	GETTABLE 	R59 R2 K39 ; R59 := R2["StoreItem"]
	720	[1837]	LOADNIL  	R60 R60 ; R60 := nil
	721	[1837]	OP_LOADBOOL	R61 0 0 ; R61 := false
	722	[1837]	MOVE     	R62 R13 ; R62 := R13
	723	[1837]	OP_LOADBOOL	R63 0 0 ; R63 := false
	724	[1837]	CALL     	R58 6 3 ; R58,R59 := R58(R59,R60,R61,R62,R63)
	725	[1838]	GETUPVAL 	R60 U6 ; R60 := U6
	726	[1838]	GETTABLE 	R60 R60 K122 ; R60 := R60[0xe9947039]
	727	[1838]	GETTABLE 	R61 R2 K39 ; R61 := R2["StoreItem"]
	728	[1838]	LOADNIL  	R62 R62 ; R62 := nil
	729	[1838]	OP_LOADBOOL	R63 1 0 ; R63 := true
	730	[1838]	MOVE     	R64 R13 ; R64 := R13
	731	[1838]	OP_LOADBOOL	R65 1 0 ; R65 := true
	732	[1838]	CALL     	R60 6 3 ; R60,R61 := R60(R61,R62,R63,R64,R65)
	733	[1839]	LT       	1 K19 R61 ; if 0.000000 < R61 then PC := 736
	734	[1839]	JMP      	736 ; PC := 736
	735	[1839]	OP_LOADBOOL	R62 0 1 ; R62 := false; PC := 736
	736	[1839]	OP_LOADBOOL	R62 1 0 ; R62 := true
	737	[1840]	GETTABLE 	R63 R2 K123 ; R63 := R2["RegularPrice"]
	738	[1840]	EQ       	1 R63 K15 ; if R63 == nil then PC := 755
	739	[1840]	JMP      	755 ; PC := 755
	740	[1841]	GETTABLE 	R60 R2 K123 ; R60 := R2["RegularPrice"]
	741	[1842]	GETUPVAL 	R63 U3 ; R63 := U3
	742	[1842]	GETTABLE 	R63 R63 K37 ; R63 := R63[0x06d055f9]
	743	[1842]	GETTABLE 	R64 R2 K124 ; R64 := R2["RegularPriceBeforeDiscount"]
	744	[1842]	EQ       	1 R64 K15 ; if R64 == nil then PC := 749
	745	[1842]	JMP      	749 ; PC := 749
	746	[1842]	GETTABLE 	R64 R2 K124 ; R64 := R2["RegularPriceBeforeDiscount"]
	747	[1842]	LT       	1 K19 R64 ; if 0.000000 < R64 then PC := 750
	748	[1842]	JMP      	750 ; PC := 750
	749	[1842]	OP_LOADBOOL	R64 0 1 ; R64 := false; PC := 750
	750	[1842]	OP_LOADBOOL	R64 1 0 ; R64 := true
	751	[1842]	GETTABLE 	R65 R2 K124 ; R65 := R2["RegularPriceBeforeDiscount"]
	752	[1842]	MOVE     	R66 R60 ; R66 := R60
	753	[1842]	CALL     	R63 4 2 ; R63 := R63(R64,R65,R66)
	754	[1842]	MOVE     	R58 R63 ; R58 := R63
	755	[1844]	GETTABLE 	R63 R2 K125 ; R63 := R2["PremiumPrice"]
	756	[1844]	EQ       	1 R63 K15 ; if R63 == nil then PC := 760
	757	[1844]	JMP      	760 ; PC := 760
	758	[1845]	GETTABLE 	R61 R2 K125 ; R61 := R2["PremiumPrice"]
	759	[1846]	MOVE     	R59 R61 ; R59 := R61
	760	[1848]	TEST     	R62 1 ; if R62 then PC := 764
	761	[1848]	JMP      	764 ; PC := 764
	762	[1848]	LT       	0 K19 R60 ; if 0.000000 >= R60 then PC := 794
	763	[1848]	JMP      	794 ; PC := 794
	764	[1849]	GETTABLE 	R63 R3 K131 ; R63 := R3["IgnoreDiscount"]
	765	[1849]	TEST     	R63 1 ; if R63 then PC := 780
	766	[1849]	JMP      	780 ; PC := 780
	767	[1849]	GETUPVAL 	R63 U3 ; R63 := U3
	768	[1849]	GETTABLE 	R63 R63 K37 ; R63 := R63[0x06d055f9]
	769	[1849]	MOVE     	R64 R62 ; R64 := R62
	770	[1849]	LT       	1 R61 R59 ; if R61 < R59 then PC := 773
	771	[1849]	JMP      	773 ; PC := 773
	772	[1849]	OP_LOADBOOL	R65 0 1 ; R65 := false; PC := 773
	773	[1849]	OP_LOADBOOL	R65 1 0 ; R65 := true
	774	[1849]	LT       	1 R60 R58 ; if R60 < R58 then PC := 777
	775	[1849]	JMP      	777 ; PC := 777
	776	[1849]	OP_LOADBOOL	R66 0 1 ; R66 := false; PC := 777
	777	[1849]	OP_LOADBOOL	R66 1 0 ; R66 := true
	778	[1849]	CALL     	R63 4 2 ; R63 := R63(R64,R65,R66)
	779	[1849]	JMP      	782 ; PC := 782
	780	[1849]	OP_LOADBOOL	R63 0 1 ; R63 := false; PC := 781
	781	[1849]	OP_LOADBOOL	R63 1 0 ; R63 := true
	782	[1850]	TEST     	R63 0 ; if not R63 then PC := 794
	783	[1850]	JMP      	794 ; PC := 794
	784	[1851]	GETUPVAL 	R64 U4 ; R64 := U4
	785	[1851]	GETGLOBAL	R65 K132 ; R65 := LABEL_TYPE_SALE
	786	[1851]	LOADK    	R66 K133 ; R66 := "/Lotus/Language/Menu/Store_Sale"
	787	[1851]	CALL     	R64 3 2 ; R64 := R64(R65,R66)
	788	[1851]	MOVE     	R5 R64 ; R5 := R64
	789	[1852]	GETGLOBAL	R64 K5 ; R64 := 0x33bdd652
	790	[1852]	GETTABLE 	R64 R64 K6 ; R64 := R64[0x23d5322f]
	791	[1852]	MOVE     	R65 R6 ; R65 := R6
	792	[1852]	MOVE     	R66 R5 ; R66 := R5
	793	[1852]	CALL     	R64 3 1 ; R64(R65,R66)
	794	[1857]	GETTABLE 	R64 R2 K134 ; R64 := R2["CustomEntry"]
	795	[1857]	TEST     	R64 0 ; if not R64 then PC := 837
	796	[1857]	JMP      	837 ; PC := 837
	797	[1858]	LOADK    	R64 := 0.000000
	798	[1859]	LOADK    	R65 := 0.000000
	799	[1860]	GETTABLE 	R66 R2 K123 ; R66 := R2["RegularPrice"]
	800	[1860]	EQ       	1 R66 K15 ; if R66 == nil then PC := 803
	801	[1860]	JMP      	803 ; PC := 803
	802	[1861]	GETTABLE 	R64 R2 K123 ; R64 := R2["RegularPrice"]
	803	[1863]	GETTABLE 	R66 R2 K125 ; R66 := R2["PremiumPrice"]
	804	[1863]	EQ       	1 R66 K15 ; if R66 == nil then PC := 807
	805	[1863]	JMP      	807 ; PC := 807
	806	[1864]	GETTABLE 	R65 R2 K125 ; R65 := R2["PremiumPrice"]
	807	[1866]	LT       	1 K19 R64 ; if 0.000000 < R64 then PC := 811
	808	[1866]	JMP      	811 ; PC := 811
	809	[1866]	LT       	0 K19 R65 ; if 0.000000 >= R65 then PC := 837
	810	[1866]	JMP      	837 ; PC := 837
	811	[1867]	LT       	1 K19 R65 ; if 0.000000 < R65 then PC := 814
	812	[1867]	JMP      	814 ; PC := 814
	813	[1867]	OP_LOADBOOL	R66 0 1 ; R66 := false; PC := 814
	814	[1867]	OP_LOADBOOL	R66 1 0 ; R66 := true
	815	[1868]	GETUPVAL 	R67 U3 ; R67 := U3
	816	[1868]	GETTABLE 	R67 R67 K33 ; R67 := R67[0x1142c7a8]
	817	[1868]	GETUPVAL 	R68 U3 ; R68 := U3
	818	[1868]	GETTABLE 	R68 R68 K37 ; R68 := R68[0x06d055f9]
	819	[1868]	MOVE     	R69 R66 ; R69 := R66
	820	[1868]	MOVE     	R70 R65 ; R70 := R65
	821	[1868]	MOVE     	R71 R64 ; R71 := R64
	822	[1868]	CALL     	R68 4 0 ; R68,... := R68(R69,R70,R71)
	823	[1868]	CALL     	R67 0 2 ; R67 := R67(R68,...)
	824	[1869]	GETGLOBAL	R68 K5 ; R68 := 0x33bdd652
	825	[1869]	GETTABLE 	R68 R68 K6 ; R68 := R68[0x23d5322f]
	826	[1869]	MOVE     	R69 R6 ; R69 := R6
	827	[1869]	GETUPVAL 	R70 U4 ; R70 := U4
	828	[1869]	GETUPVAL 	R71 U3 ; R71 := U3
	829	[1869]	GETTABLE 	R71 R71 K37 ; R71 := R71[0x06d055f9]
	830	[1869]	MOVE     	R72 R66 ; R72 := R66
	831	[1869]	GETGLOBAL	R73 K127 ; R73 := LABEL_TYPE_PLATINUM
	832	[1869]	GETGLOBAL	R74 K16 ; R74 := LABEL_TYPE_CREDITS
	833	[1869]	CALL     	R71 4 2 ; R71 := R71(R72,R73,R74)
	834	[1869]	MOVE     	R72 R67 ; R72 := R67
	835	[1869]	CALL     	R70 3 0 ; R70,... := R70(R71,R72)
	836	[1869]	CALL     	R68 0 1 ; R68(R69,...)
	837	[1874]	GETUPVAL 	R68 U1 ; R68 := U1
	838	[1874]	GETTABLE 	R68 R68 K135 ; R68 := R68[0x46ea9a6b]
	839	[1874]	MOVE     	R69 R2 ; R69 := R2
	840	[1874]	CALL     	R68 2 2 ; R68 := R68(R69)
	841	[1875]	EQ       	1 R68 K19 ; if R68 == 0.000000 then PC := 878
	842	[1875]	JMP      	878 ; PC := 878
	843	[1875]	GETTABLE 	R69 R3 K136 ; R69 := R3["CanShowExpiry"]
	844	[1875]	TEST     	R69 0 ; if not R69 then PC := 878
	845	[1875]	JMP      	878 ; PC := 878
	846	[1876]	LOADK    	R69 K137 ; R69 := "/Lotus/Language/Menu/Store_Expires"
	847	[1877]	TEST     	R7 0 ; if not R7 then PC := 868
	848	[1877]	JMP      	868 ; PC := 868
	849	[1878]	GETGLOBAL	R70 K25 ; R70 := 0x34291f5c
	850	[1878]	GETTABLE 	R70 R70 K106 ; R70 := R70[0x397b920f]
	851	[1878]	MOVE     	R71 R68 ; R71 := R68
	852	[1878]	CALL     	R70 2 2 ; R70 := R70(R71)
	853	[1879]	LT       	0 K19 R70 ; if 0.000000 >= R70 then PC := 867
	854	[1879]	JMP      	867 ; PC := 867
	855	[1880]	GETUPVAL 	R71 U6 ; R71 := U6
	856	[1880]	GETTABLE 	R71 R71 K138 ; R71 := R71[0x608b28e2]
	857	[1880]	MOVE     	R72 R70 ; R72 := R70
	858	[1880]	CALL     	R71 2 2 ; R71 := R71(R72)
	859	[1881]	SELF     	R72 R0 K22 ; R73 := R0; R72 := R0[0x42b04007]
	860	[1881]	LOADK    	R74 K139 ; R74 := "/Lotus/Language/Menu/Store_Expires_Short"
	861	[1881]	OP_LOADBOOL	R75 0 0 ; R75 := false
	862	[1881]	NEWTABLE 	R76 0 1 ; R76 := {}
	863	[1881]	SETTABLE 	R76 K140 R71 ; R76["TIME"] := R71
	864	[1881]	CALL     	R72 5 2 ; R72 := R72(R73,R74,R75,R76)
	865	[1881]	MOVE     	R69 R72 ; R69 := R72
	866	[1881]	JMP      	868 ; PC := 868
	867	[1883]	LOADK    	R69 K141 ; R69 := "/Lotus/Language/Menu/Store_Expired"
	868	[1886]	GETUPVAL 	R72 U4 ; R72 := U4
	869	[1886]	GETGLOBAL	R73 K142 ; R73 := LABEL_TYPE_LIMITED
	870	[1886]	MOVE     	R74 R69 ; R74 := R69
	871	[1886]	CALL     	R72 3 2 ; R72 := R72(R73,R74)
	872	[1886]	MOVE     	R5 R72 ; R5 := R72
	873	[1887]	GETGLOBAL	R72 K5 ; R72 := 0x33bdd652
	874	[1887]	GETTABLE 	R72 R72 K6 ; R72 := R72[0x23d5322f]
	875	[1887]	MOVE     	R73 R6 ; R73 := R6
	876	[1887]	MOVE     	R74 R5 ; R74 := R5
	877	[1887]	CALL     	R72 3 1 ; R72(R73,R74)
	878	[1890]	GETGLOBAL	R72 K143 ; R72 := 0x76ea806b
	879	[1890]	SELF     	R72 R72 K144 ; R73 := R72; R72 := R72[0x3f3ae64c]
	880	[1890]	LOADK    	R74 := 0.000000
	881	[1890]	CALL     	R72 3 2 ; R72 := R72(R73,R74)
	882	[1891]	GETGLOBAL	R73 K0 ; R73 := 0x7b998233
	883	[1891]	MOVE     	R74 R72 ; R74 := R72
	884	[1891]	CALL     	R73 2 2 ; R73 := R73(R74)
	885	[1891]	TEST     	R73 0 ; if not R73 then PC := 889
	886	[1891]	JMP      	889 ; PC := 889
	887	[1892]	NEWTABLE 	R73 0 0 ; R73 := {}
	888	[1892]	RETURN   	R73 2 ; return R73 
	889	[1895]	SELF     	R73 R72 K145 ; R74 := R72; R73 := R72[0x80563238]
	890	[1895]	CALL     	R73 2 2 ; R73 := R73(R74)
	891	[1896]	GETGLOBAL	R74 K0 ; R74 := 0x7b998233
	892	[1896]	MOVE     	R75 R73 ; R75 := R73
	893	[1896]	CALL     	R74 2 2 ; R74 := R74(R75)
	894	[1896]	TEST     	R74 0 ; if not R74 then PC := 898
	895	[1896]	JMP      	898 ; PC := 898
	896	[1897]	NEWTABLE 	R74 0 0 ; R74 := {}
	897	[1897]	RETURN   	R74 2 ; return R74 
	898	[1899]	SELF     	R74 R73 K146 ; R75 := R73; R74 := R73[0x69727e0b]
	899	[1899]	CALL     	R74 2 2 ; R74 := R74(R75)
	900	[1901]	OP_LOADBOOL	R75 0 0 ; R75 := false
	901	[1902]	GETGLOBAL	R76 K147 ; R76 := 0xc8802016
	902	[1902]	GETTABLE 	R77 R74 K148 ; R77 := R74["mExperimentRecommended"]
	903	[1902]	CALL     	R76 2 4 ; R76,R77,R78 := R76(R77)
	904	[1902]	JMP      	927 ; PC := 927
	905	[1903]	GETTABLE 	R81 R2 K39 ; R81 := R2["StoreItem"]
	906	[1903]	TEST     	R81 0 ; if not R81 then PC := 927
	907	[1903]	JMP      	927 ; PC := 927
	908	[1904]	LOADK    	R81 K49 ; R81 := ""
	909	[1905]	GETTABLE 	R82 R2 K39 ; R82 := R2["StoreItem"]
	910	[1905]	SELF     	R82 R82 K149 ; R83 := R82; R82 := R82[0x9dbbea0a]
	911	[1905]	CALL     	R82 2 2 ; R82 := R82(R83)
	912	[1905]	TEST     	R82 0 ; if not R82 then PC := 919
	913	[1905]	JMP      	919 ; PC := 919
	914	[1906]	GETTABLE 	R82 R2 K39 ; R82 := R2["StoreItem"]
	915	[1906]	SELF     	R82 R82 K150 ; R83 := R82; R82 := R82[0xed4e0128]
	916	[1906]	CALL     	R82 2 2 ; R82 := R82(R83)
	917	[1906]	MOVE     	R81 R82 ; R81 := R82
	918	[1906]	JMP      	923 ; PC := 923
	919	[1908]	GETTABLE 	R82 R2 K39 ; R82 := R2["StoreItem"]
	920	[1908]	SELF     	R82 R82 K151 ; R83 := R82; R82 := R82[0x170c5cfa]
	921	[1908]	CALL     	R82 2 2 ; R82 := R82(R83)
	922	[1908]	MOVE     	R81 R82 ; R81 := R82
	923	[1911]	EQ       	0 R80 R81 ; if R80 ~= R81 then PC := 927
	924	[1911]	JMP      	927 ; PC := 927
	925	[1912]	OP_LOADBOOL	R75 1 0 ; R75 := true
	926	[1913]	JMP      	929 ; PC := 929
	927	[1902]	TFORLOOP 	R76 2 ; R79,R80 := R76(R77,R78); if R79 ~= nil then begin PC = 905; R78 := R79 end
	928	[1915]	JMP      	905 ; PC := 905
	929	[1918]	GETGLOBAL	R82 K0 ; R82 := 0x7b998233
	930	[1918]	GETTABLE 	R83 R2 K152 ; R83 := R2["Tag"]
	931	[1918]	CALL     	R82 2 2 ; R82 := R82(R83)
	932	[1918]	TEST     	R82 1 ; if R82 then PC := 978
	933	[1918]	JMP      	978 ; PC := 978
	934	[1918]	GETTABLE 	R82 R2 K152 ; R82 := R2["Tag"]
	935	[1918]	EQ       	1 R82 K49 ; if R82 == "" then PC := 978
	936	[1918]	JMP      	978 ; PC := 978
	937	[1919]	GETTABLE 	R82 R2 K152 ; R82 := R2["Tag"]
	938	[1919]	EQ       	0 R82 K153 ; if R82 ~= "Popular" then PC := 951
	939	[1919]	JMP      	951 ; PC := 951
	940	[1920]	GETUPVAL 	R82 U4 ; R82 := U4
	941	[1920]	GETGLOBAL	R83 K154 ; R83 := LABEL_TYPE_RECOMMENDED
	942	[1920]	LOADK    	R84 K155 ; R84 := "/Lotus/Language/Menu/StorePopular"
	943	[1920]	CALL     	R82 3 2 ; R82 := R82(R83,R84)
	944	[1920]	MOVE     	R5 R82 ; R5 := R82
	945	[1921]	GETGLOBAL	R82 K5 ; R82 := 0x33bdd652
	946	[1921]	GETTABLE 	R82 R82 K6 ; R82 := R82[0x23d5322f]
	947	[1921]	MOVE     	R83 R6 ; R83 := R6
	948	[1921]	MOVE     	R84 R5 ; R84 := R5
	949	[1921]	CALL     	R82 3 1 ; R82(R83,R84)
	950	[1921]	JMP      	978 ; PC := 978
	951	[1922]	GETTABLE 	R82 R2 K152 ; R82 := R2["Tag"]
	952	[1922]	EQ       	0 R82 K156 ; if R82 ~= "Premium" then PC := 965
	953	[1922]	JMP      	965 ; PC := 965
	954	[1923]	GETUPVAL 	R82 U4 ; R82 := U4
	955	[1923]	GETGLOBAL	R83 K154 ; R83 := LABEL_TYPE_RECOMMENDED
	956	[1923]	LOADK    	R84 K157 ; R84 := "/Lotus/Language/Menu/CategoryPremium"
	957	[1923]	CALL     	R82 3 2 ; R82 := R82(R83,R84)
	958	[1923]	MOVE     	R5 R82 ; R5 := R82
	959	[1924]	GETGLOBAL	R82 K5 ; R82 := 0x33bdd652
	960	[1924]	GETTABLE 	R82 R82 K6 ; R82 := R82[0x23d5322f]
	961	[1924]	MOVE     	R83 R6 ; R83 := R6
	962	[1924]	MOVE     	R84 R5 ; R84 := R5
	963	[1924]	CALL     	R82 3 1 ; R82(R83,R84)
	964	[1924]	JMP      	978 ; PC := 978
	965	[1925]	GETTABLE 	R82 R2 K152 ; R82 := R2["Tag"]
	966	[1925]	EQ       	0 R82 K158 ; if R82 ~= "Recommended" then PC := 978
	967	[1925]	JMP      	978 ; PC := 978
	968	[1926]	GETUPVAL 	R82 U4 ; R82 := U4
	969	[1926]	GETGLOBAL	R83 K154 ; R83 := LABEL_TYPE_RECOMMENDED
	970	[1926]	LOADK    	R84 K159 ; R84 := "/Lotus/Language/Store/RecommendedTag"
	971	[1926]	CALL     	R82 3 2 ; R82 := R82(R83,R84)
	972	[1926]	MOVE     	R5 R82 ; R5 := R82
	973	[1927]	GETGLOBAL	R82 K5 ; R82 := 0x33bdd652
	974	[1927]	GETTABLE 	R82 R82 K6 ; R82 := R82[0x23d5322f]
	975	[1927]	MOVE     	R83 R6 ; R83 := R6
	976	[1927]	MOVE     	R84 R5 ; R84 := R5
	977	[1927]	CALL     	R82 3 1 ; R82(R83,R84)
	978	[1931]	GETTABLE 	R82 R2 K160 ; R82 := R2["IsPAUpgrade"]
	979	[1931]	TEST     	R82 0 ; if not R82 then PC := 989
	980	[1931]	JMP      	989 ; PC := 989
	981	[1932]	GETGLOBAL	R82 K5 ; R82 := 0x33bdd652
	982	[1932]	GETTABLE 	R82 R82 K6 ; R82 := R82[0x23d5322f]
	983	[1932]	MOVE     	R83 R6 ; R83 := R6
	984	[1932]	GETUPVAL 	R84 U4 ; R84 := U4
	985	[1932]	GETGLOBAL	R85 K161 ; R85 := LABEL_TYPE_UPGRADE
	986	[1932]	LOADK    	R86 K49 ; R86 := ""
	987	[1932]	CALL     	R84 3 0 ; R84,... := R84(R85,R86)
	988	[1932]	CALL     	R82 0 1 ; R82(R83,...)
	989	[1936]	GETGLOBAL	R82 K0 ; R82 := 0x7b998233
	990	[1936]	GETTABLE 	R83 R2 K44 ; R83 := R2["Count"]
	991	[1936]	CALL     	R82 2 2 ; R82 := R82(R83)
	992	[1936]	TEST     	R82 1 ; if R82 then PC := 1075
	993	[1936]	JMP      	1075 ; PC := 1075
	994	[1936]	GETTABLE 	R82 R3 K162 ; R82 := R3["HideOwned"]
	995	[1936]	TEST     	R82 1 ; if R82 then PC := 1075
	996	[1936]	JMP      	1075 ; PC := 1075
	997	[1936]	GETTABLE 	R82 R2 K44 ; R82 := R2["Count"]
	998	[1936]	GETUPVAL 	R83 U3 ; R83 := U3
	999	[1936]	GETTABLE 	R83 R83 K37 ; R83 := R83[0x06d055f9]
	1000	[1936]	GETTABLE 	R84 R3 K163 ; R84 := R3["HideCountThreshold"]
	1001	[1936]	EQ       	0 R84 K15 ; if R84 ~= nil then PC := 1004
	1002	[1936]	JMP      	1004 ; PC := 1004
	1003	[1936]	OP_LOADBOOL	R84 0 1 ; R84 := false; PC := 1004
	1004	[1936]	OP_LOADBOOL	R84 1 0 ; R84 := true
	1005	[1936]	GETTABLE 	R85 R3 K163 ; R85 := R3["HideCountThreshold"]
	1006	[1936]	LOADK    	R86 := 1.000000
	1007	[1936]	CALL     	R83 4 2 ; R83 := R83(R84,R85,R86)
	1008	[1936]	LT       	0 R83 R82 ; if R83 >= R82 then PC := 1075
	1009	[1936]	JMP      	1075 ; PC := 1075
	1010	[1937]	GETUPVAL 	R82 U3 ; R82 := U3
	1011	[1937]	GETTABLE 	R82 R82 K37 ; R82 := R82[0x06d055f9]
	1012	[1937]	GETTABLE 	R83 R3 K164 ; R83 := R3["OwnedInfo"]
	1013	[1937]	EQ       	0 R83 K15 ; if R83 ~= nil then PC := 1016
	1014	[1937]	JMP      	1016 ; PC := 1016
	1015	[1937]	OP_LOADBOOL	R83 0 1 ; R83 := false; PC := 1016
	1016	[1937]	OP_LOADBOOL	R83 1 0 ; R83 := true
	1017	[1937]	GETTABLE 	R84 R3 K164 ; R84 := R3["OwnedInfo"]
	1018	[1937]	NEWTABLE 	R85 0 0 ; R85 := {}
	1019	[1937]	CALL     	R82 4 2 ; R82 := R82(R83,R84,R85)
	1020	[1938]	LOADK    	R83 K165 ; R83 := "/Lotus/Language/Menu/Crafting_Owned_Brief"
	1021	[1939]	GETUPVAL 	R84 U3 ; R84 := U3
	1022	[1939]	GETTABLE 	R84 R84 K37 ; R84 := R84[0x06d055f9]
	1023	[1939]	GETTABLE 	R85 R82 K42 ; R85 := R82["TagOverride"]
	1024	[1939]	EQ       	0 R85 K15 ; if R85 ~= nil then PC := 1027
	1025	[1939]	JMP      	1027 ; PC := 1027
	1026	[1939]	OP_LOADBOOL	R85 0 1 ; R85 := false; PC := 1027
	1027	[1939]	OP_LOADBOOL	R85 1 0 ; R85 := true
	1028	[1939]	GETTABLE 	R86 R82 K42 ; R86 := R82["TagOverride"]
	1029	[1939]	MOVE     	R87 R83 ; R87 := R83
	1030	[1939]	CALL     	R84 4 2 ; R84 := R84(R85,R86,R87)
	1031	[1940]	SELF     	R85 R0 K22 ; R86 := R0; R85 := R0[0x42b04007]
	1032	[1940]	MOVE     	R87 R84 ; R87 := R84
	1033	[1940]	OP_LOADBOOL	R88 1 0 ; R88 := true
	1034	[1940]	NEWTABLE 	R89 0 1 ; R89 := {}
	1035	[1943]	GETUPVAL 	R90 U3 ; R90 := U3
	1036	[1943]	GETTABLE 	R90 R90 K37 ; R90 := R90[0x06d055f9]
	1037	[1943]	GETTABLE 	R91 R2 K44 ; R91 := R2["Count"]
	1038	[1943]	EQ       	0 R91 K83 ; if R91 ~= 1.000000 then PC := 1043
	1039	[1943]	JMP      	1043 ; PC := 1043
	1040	[1943]	GETTABLE 	R91 R82 K167 ; R91 := R82["mShowOne"]
	1041	[1943]	NOT      	R91 R91 ; R91 := not R91
	1042	[1943]	JMP      	1045 ; PC := 1045
	1043	[1943]	OP_LOADBOOL	R91 0 1 ; R91 := false; PC := 1044
	1044	[1943]	OP_LOADBOOL	R91 1 0 ; R91 := true
	1045	[1943]	LOADK    	R92 K49 ; R92 := ""
	1046	[1943]	GETUPVAL 	R93 U3 ; R93 := U3
	1047	[1943]	GETTABLE 	R93 R93 K33 ; R93 := R93[0x1142c7a8]
	1048	[1943]	GETTABLE 	R94 R2 K44 ; R94 := R2["Count"]
	1049	[1943]	LOADK    	R95 := 0.000000
	1050	[1943]	CALL     	R93 3 0 ; R93,... := R93(R94,R95)
	1051	[1943]	CALL     	R90 0 2 ; R90 := R90(R91,...)
	1052	[1943]	SETTABLE 	R89 K166 R90 ; R89["HOW_MANY"] := R90
	1053	[1940]	CALL     	R85 5 2 ; R85 := R85(R86,R87,R88,R89)
	1054	[1944]	MOVE     	R84 R85 ; R84 := R85
	1055	[1946]	GETUPVAL 	R85 U4 ; R85 := U4
	1056	[1946]	GETGLOBAL	R86 K168 ; R86 := LABEL_TYPE_CHECKMARK
	1057	[1946]	MOVE     	R87 R84 ; R87 := R84
	1058	[1946]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	1059	[1946]	MOVE     	R5 R85 ; R5 := R85
	1060	[1947]	GETTABLE 	R85 R82 K42 ; R85 := R82["TagOverride"]
	1061	[1947]	EQ       	1 R85 K15 ; if R85 == nil then PC := 1069
	1062	[1947]	JMP      	1069 ; PC := 1069
	1063	[1947]	GETTABLE 	R85 R82 K42 ; R85 := R82["TagOverride"]
	1064	[1947]	EQ       	1 R85 R83 ; if R85 == R83 then PC := 1069
	1065	[1947]	JMP      	1069 ; PC := 1069
	1066	[1948]	SETTABLE 	R5 K79 K15 ; R5["Icon"] := nil
	1067	[1949]	SETTABLE 	R5 K76 K87 ; R5["LabelOffset"] := 3.000000
	1068	[1950]	SETTABLE 	R5 K169 K19 ; R5["BgAlpha"] := 0.000000
	1069	[1953]	GETGLOBAL	R85 K5 ; R85 := 0x33bdd652
	1070	[1953]	GETTABLE 	R85 R85 K6 ; R85 := R85[0x23d5322f]
	1071	[1953]	MOVE     	R86 R6 ; R86 := R6
	1072	[1953]	MOVE     	R87 R5 ; R87 := R5
	1073	[1953]	CALL     	R85 3 1 ; R85(R86,R87)
	1074	[1953]	JMP      	1191 ; PC := 1191
	1075	[1954]	GETTABLE 	R85 R3 K170 ; R85 := R3["ShowCheckmark"]
	1076	[1954]	TEST     	R85 0 ; if not R85 then PC := 1092
	1077	[1954]	JMP      	1092 ; PC := 1092
	1078	[1955]	GETGLOBAL	R85 K5 ; R85 := 0x33bdd652
	1079	[1955]	GETTABLE 	R85 R85 K6 ; R85 := R85[0x23d5322f]
	1080	[1955]	MOVE     	R86 R6 ; R86 := R6
	1081	[1955]	GETUPVAL 	R87 U4 ; R87 := U4
	1082	[1955]	GETGLOBAL	R88 K168 ; R88 := LABEL_TYPE_CHECKMARK
	1083	[1955]	SELF     	R89 R0 K22 ; R90 := R0; R89 := R0[0x42b04007]
	1084	[1955]	LOADK    	R91 K165 ; R91 := "/Lotus/Language/Menu/Crafting_Owned_Brief"
	1085	[1955]	OP_LOADBOOL	R92 1 0 ; R92 := true
	1086	[1955]	NEWTABLE 	R93 0 1 ; R93 := {}
	1087	[1955]	SETTABLE 	R93 K166 K49 ; R93["HOW_MANY"] := ""
	1088	[1955]	CALL     	R89 5 0 ; R89,... := R89(R90,R91,R92,R93)
	1089	[1955]	CALL     	R87 0 0 ; R87,... := R87(R88,...)
	1090	[1955]	CALL     	R85 0 1 ; R85(R86,...)
	1091	[1955]	JMP      	1191 ; PC := 1191
	1092	[1957]	GETTABLE 	R85 R2 K171 ; R85 := R2["IsNew"]
	1093	[1957]	TEST     	R85 1 ; if R85 then PC := 1098
	1094	[1957]	JMP      	1098 ; PC := 1098
	1095	[1957]	GETTABLE 	R85 R3 K172 ; R85 := R3["ForceNew"]
	1096	[1957]	TEST     	R85 0 ; if not R85 then PC := 1114
	1097	[1957]	JMP      	1114 ; PC := 1114
	1098	[1957]	GETTABLE 	R85 R3 K173 ; R85 := R3["CanShowNew"]
	1099	[1957]	TEST     	R85 0 ; if not R85 then PC := 1114
	1100	[1957]	JMP      	1114 ; PC := 1114
	1101	[1957]	TEST     	R7 1 ; if R7 then PC := 1114
	1102	[1957]	JMP      	1114 ; PC := 1114
	1103	[1958]	GETUPVAL 	R85 U4 ; R85 := U4
	1104	[1958]	GETGLOBAL	R86 K174 ; R86 := LABEL_TYPE_NEW
	1105	[1958]	LOADK    	R87 K175 ; R87 := "/Lotus/Language/Menu/Store_New"
	1106	[1958]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	1107	[1958]	MOVE     	R5 R85 ; R5 := R85
	1108	[1959]	GETGLOBAL	R85 K5 ; R85 := 0x33bdd652
	1109	[1959]	GETTABLE 	R85 R85 K6 ; R85 := R85[0x23d5322f]
	1110	[1959]	MOVE     	R86 R6 ; R86 := R6
	1111	[1959]	MOVE     	R87 R5 ; R87 := R5
	1112	[1959]	CALL     	R85 3 1 ; R85(R86,R87)
	1113	[1959]	JMP      	1171 ; PC := 1171
	1114	[1960]	TEST     	R75 0 ; if not R75 then PC := 1171
	1115	[1960]	JMP      	1171 ; PC := 1171
	1116	[1960]	GETGLOBAL	R85 K0 ; R85 := 0x7b998233
	1117	[1960]	GETTABLE 	R86 R2 K44 ; R86 := R2["Count"]
	1118	[1960]	CALL     	R85 2 2 ; R85 := R85(R86)
	1119	[1960]	TEST     	R85 1 ; if R85 then PC := 1124
	1120	[1960]	JMP      	1124 ; PC := 1124
	1121	[1960]	GETTABLE 	R85 R2 K44 ; R85 := R2["Count"]
	1122	[1960]	EQ       	0 R85 K19 ; if R85 ~= 0.000000 then PC := 1171
	1123	[1960]	JMP      	1171 ; PC := 1171
	1124	[1960]	TEST     	R7 1 ; if R7 then PC := 1171
	1125	[1960]	JMP      	1171 ; PC := 1171
	1126	[1963]	SELF     	R85 R72 K176 ; R86 := R72; R85 := R72[0xfe6131c3]
	1127	[1963]	LOADK    	R87 K177 ; R87 := "tag_recommended"
	1128	[1963]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	1129	[1963]	TEST     	R85 0 ; if not R85 then PC := 1171
	1130	[1963]	JMP      	1171 ; PC := 1171
	1131	[1964]	OP_LOADBOOL	R85 1 0 ; R85 := true
	1132	[1965]	GETTABLE 	R86 R2 K39 ; R86 := R2["StoreItem"]
	1133	[1965]	SELF     	R86 R86 K149 ; R87 := R86; R86 := R86[0x9dbbea0a]
	1134	[1965]	CALL     	R86 2 2 ; R86 := R86(R87)
	1135	[1965]	TEST     	R86 0 ; if not R86 then PC := 1159
	1136	[1965]	JMP      	1159 ; PC := 1159
	1137	[1966]	GETTABLE 	R86 R2 K39 ; R86 := R2["StoreItem"]
	1138	[1966]	SELF     	R86 R86 K178 ; R87 := R86; R86 := R86[0x7b060e36]
	1139	[1966]	CALL     	R86 2 2 ; R86 := R86(R87)
	1140	[1967]	LOADK    	R87 := 1.000000
	1141	[1967]	LEN      	R88 R86 ; R88 := # R86
	1142	[1967]	LOADK    	R89 := 1.000000
	1143	[1967]	FORPREP  	R87 1158 ; R87 -= R89; PC := 1158
	1144	[1968]	GETUPVAL 	R91 U6 ; R91 := U6
	1145	[1968]	GETTABLE 	R91 R91 K179 ; R91 := R91[0x8a36a81b]
	1146	[1968]	GETGLOBAL	R92 K12 ; R92 := 0x25d99d89
	1147	[1968]	GETGLOBAL	R93 K12 ; R93 := 0x25d99d89
	1148	[1968]	SELF     	R93 R93 K13 ; R94 := R93; R93 := R93[0x25a6e75e]
	1149	[1968]	CALL     	R93 2 2 ; R93 := R93(R94)
	1150	[1968]	GETTABLE 	R94 R86 R90 ; R94 := R86[R90]
	1151	[1968]	GETTABLE 	R94 R94 K180 ; R94 := R94["mTypeName"]
	1152	[1968]	GETTABLE 	R95 R1 K7 ; R95 := R1["PurchasedItems"]
	1153	[1968]	CALL     	R91 5 2 ; R91 := R91(R92,R93,R94,R95)
	1154	[1969]	LT       	0 K19 R91 ; if 0.000000 >= R91 then PC := 1158
	1155	[1969]	JMP      	1158 ; PC := 1158
	1156	[1970]	OP_LOADBOOL	R85 0 0 ; R85 := false
	1157	[1971]	JMP      	1159 ; PC := 1159
	1158	[1967]	FORLOOP  	R87 1144 ; R87 += R89; if R87 <= R88 then begin PC := 1144; R90 := R87 end
	1159	[1975]	TEST     	R85 0 ; if not R85 then PC := 1171
	1160	[1975]	JMP      	1171 ; PC := 1171
	1161	[1976]	GETUPVAL 	R92 U4 ; R92 := U4
	1162	[1976]	GETGLOBAL	R93 K154 ; R93 := LABEL_TYPE_RECOMMENDED
	1163	[1976]	LOADK    	R94 K159 ; R94 := "/Lotus/Language/Store/RecommendedTag"
	1164	[1976]	CALL     	R92 3 2 ; R92 := R92(R93,R94)
	1165	[1976]	MOVE     	R5 R92 ; R5 := R92
	1166	[1977]	GETGLOBAL	R92 K5 ; R92 := 0x33bdd652
	1167	[1977]	GETTABLE 	R92 R92 K6 ; R92 := R92[0x23d5322f]
	1168	[1977]	MOVE     	R93 R6 ; R93 := R6
	1169	[1977]	MOVE     	R94 R5 ; R94 := R5
	1170	[1977]	CALL     	R92 3 1 ; R92(R93,R94)
	1171	[1982]	GETTABLE 	R92 R2 K181 ; R92 := R2["CanPreview"]
	1172	[1982]	TEST     	R92 0 ; if not R92 then PC := 1191
	1173	[1982]	JMP      	1191 ; PC := 1191
	1174	[1984]	GETUPVAL 	R92 U3 ; R92 := U3
	1175	[1984]	GETTABLE 	R92 R92 K37 ; R92 := R92[0x06d055f9]
	1176	[1984]	MOVE     	R93 R7 ; R93 := R7
	1177	[1984]	LOADK    	R94 K182 ; R94 := "/Lotus/Language/OstronCrafting/Crafting_Preview_NoIcon"
	1178	[1984]	LOADK    	R95 K49 ; R95 := ""
	1179	[1984]	CALL     	R92 4 2 ; R92 := R92(R93,R94,R95)
	1180	[1985]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1181	[1985]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1182	[1985]	MOVE     	R94 R6 ; R94 := R6
	1183	[1985]	GETUPVAL 	R95 U4 ; R95 := U4
	1184	[1985]	GETGLOBAL	R96 K183 ; R96 := LABEL_TYPE_PREVIEW
	1185	[1985]	SELF     	R97 R0 K22 ; R98 := R0; R97 := R0[0x42b04007]
	1186	[1985]	MOVE     	R99 R92 ; R99 := R92
	1187	[1985]	OP_LOADBOOL	R100 0 0 ; R100 := false
	1188	[1985]	CALL     	R97 4 0 ; R97,... := R97(R98,R99,R100)
	1189	[1985]	CALL     	R95 0 0 ; R95,... := R95(R96,...)
	1190	[1985]	CALL     	R93 0 1 ; R93(R94,...)
	1191	[1989]	GETTABLE 	R93 R2 K184 ; R93 := R2["Researched"]
	1192	[1989]	TEST     	R93 0 ; if not R93 then PC := 1206
	1193	[1989]	JMP      	1206 ; PC := 1206
	1194	[1990]	GETUPVAL 	R93 U4 ; R93 := U4
	1195	[1990]	GETGLOBAL	R94 K185 ; R94 := LABEL_TYPE_RESEARCHED
	1196	[1990]	LOADK    	R95 K49 ; R95 := ""
	1197	[1990]	CALL     	R93 3 2 ; R93 := R93(R94,R95)
	1198	[1990]	MOVE     	R5 R93 ; R5 := R93
	1199	[1991]	SETTABLE 	R5 K186 K187 ; R5["PopUpLabel"] := "/Lotus/Language/Dojo/ResearchStatusComplete"
	1200	[1992]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1201	[1992]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1202	[1992]	MOVE     	R94 R6 ; R94 := R6
	1203	[1992]	MOVE     	R95 R5 ; R95 := R5
	1204	[1992]	CALL     	R93 3 1 ; R93(R94,R95)
	1205	[1992]	JMP      	1250 ; PC := 1250
	1206	[1993]	GETTABLE 	R93 R2 K188 ; R93 := R2["Paused"]
	1207	[1993]	TEST     	R93 0 ; if not R93 then PC := 1221
	1208	[1993]	JMP      	1221 ; PC := 1221
	1209	[1994]	GETUPVAL 	R93 U4 ; R93 := U4
	1210	[1994]	GETGLOBAL	R94 K189 ; R94 := LABEL_TYPE_PAUSED
	1211	[1994]	LOADK    	R95 K49 ; R95 := ""
	1212	[1994]	CALL     	R93 3 2 ; R93 := R93(R94,R95)
	1213	[1994]	MOVE     	R5 R93 ; R5 := R93
	1214	[1995]	SETTABLE 	R5 K186 K190 ; R5["PopUpLabel"] := "/Lotus/Language/Dojo/ResearchStatusPause"
	1215	[1996]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1216	[1996]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1217	[1996]	MOVE     	R94 R6 ; R94 := R6
	1218	[1996]	MOVE     	R95 R5 ; R95 := R5
	1219	[1996]	CALL     	R93 3 1 ; R93(R94,R95)
	1220	[1996]	JMP      	1250 ; PC := 1250
	1221	[1997]	GETTABLE 	R93 R2 K191 ; R93 := R2["InProgress"]
	1222	[1997]	TEST     	R93 0 ; if not R93 then PC := 1236
	1223	[1997]	JMP      	1236 ; PC := 1236
	1224	[1998]	GETUPVAL 	R93 U4 ; R93 := U4
	1225	[1998]	GETGLOBAL	R94 K192 ; R94 := LABEL_TYPE_IN_PROGRESS
	1226	[1998]	LOADK    	R95 K49 ; R95 := ""
	1227	[1998]	CALL     	R93 3 2 ; R93 := R93(R94,R95)
	1228	[1998]	MOVE     	R5 R93 ; R5 := R93
	1229	[1999]	SETTABLE 	R5 K186 K193 ; R5["PopUpLabel"] := "/Lotus/Language/Categories/IN_PROGRESS"
	1230	[2000]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1231	[2000]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1232	[2000]	MOVE     	R94 R6 ; R94 := R6
	1233	[2000]	MOVE     	R95 R5 ; R95 := R5
	1234	[2000]	CALL     	R93 3 1 ; R93(R94,R95)
	1235	[2000]	JMP      	1250 ; PC := 1250
	1236	[2001]	GETTABLE 	R93 R2 K194 ; R93 := R2["AwaitingFunds"]
	1237	[2001]	TEST     	R93 0 ; if not R93 then PC := 1250
	1238	[2001]	JMP      	1250 ; PC := 1250
	1239	[2002]	GETUPVAL 	R93 U4 ; R93 := U4
	1240	[2002]	GETGLOBAL	R94 K195 ; R94 := LABEL_TYPE_CONTRIBUTE
	1241	[2002]	LOADK    	R95 K49 ; R95 := ""
	1242	[2002]	CALL     	R93 3 2 ; R93 := R93(R94,R95)
	1243	[2002]	MOVE     	R5 R93 ; R5 := R93
	1244	[2003]	SETTABLE 	R5 K186 K196 ; R5["PopUpLabel"] := "/Lotus/Language/Dojo/ResearchStatusAwaitingFunds"
	1245	[2004]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1246	[2004]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1247	[2004]	MOVE     	R94 R6 ; R94 := R6
	1248	[2004]	MOVE     	R95 R5 ; R95 := R5
	1249	[2004]	CALL     	R93 3 1 ; R93(R94,R95)
	1250	[2007]	GETTABLE 	R93 R2 K197 ; R93 := R2["ShowLockIcon"]
	1251	[2007]	TEST     	R93 0 ; if not R93 then PC := 1264
	1252	[2007]	JMP      	1264 ; PC := 1264
	1253	[2008]	GETUPVAL 	R93 U4 ; R93 := U4
	1254	[2008]	GETGLOBAL	R94 K198 ; R94 := LABEL_TYPE_LOCK
	1255	[2008]	LOADK    	R95 K49 ; R95 := ""
	1256	[2008]	CALL     	R93 3 2 ; R93 := R93(R94,R95)
	1257	[2008]	MOVE     	R5 R93 ; R5 := R93
	1258	[2009]	SETTABLE 	R5 K186 K199 ; R5["PopUpLabel"] := "/Lotus/Language/Menu/MissionLocked"
	1259	[2010]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1260	[2010]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1261	[2010]	MOVE     	R94 R6 ; R94 := R6
	1262	[2010]	MOVE     	R95 R5 ; R95 := R5
	1263	[2010]	CALL     	R93 3 1 ; R93(R94,R95)
	1264	[2013]	GETTABLE 	R93 R2 K200 ; R93 := R2["Favorite"]
	1265	[2013]	TEST     	R93 0 ; if not R93 then PC := 1278
	1266	[2013]	JMP      	1278 ; PC := 1278
	1267	[2014]	GETUPVAL 	R93 U4 ; R93 := U4
	1268	[2014]	GETGLOBAL	R94 K201 ; R94 := LABEL_TYPE_FAVORITE
	1269	[2014]	LOADK    	R95 K49 ; R95 := ""
	1270	[2014]	CALL     	R93 3 2 ; R93 := R93(R94,R95)
	1271	[2014]	MOVE     	R5 R93 ; R5 := R93
	1272	[2015]	SETTABLE 	R5 K186 K202 ; R5["PopUpLabel"] := "/Lotus/Language/SystemMessages/Favorite"
	1273	[2016]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1274	[2016]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1275	[2016]	MOVE     	R94 R6 ; R94 := R6
	1276	[2016]	MOVE     	R95 R5 ; R95 := R5
	1277	[2016]	CALL     	R93 3 1 ; R93(R94,R95)
	1278	[2019]	GETTABLE 	R93 R2 K203 ; R93 := R2["ShowCameraIcon"]
	1279	[2019]	TEST     	R93 0 ; if not R93 then PC := 1291
	1280	[2019]	JMP      	1291 ; PC := 1291
	1281	[2020]	GETUPVAL 	R93 U4 ; R93 := U4
	1282	[2020]	GETGLOBAL	R94 K204 ; R94 := LABEL_TYPE_CAMERA
	1283	[2020]	LOADK    	R95 K49 ; R95 := ""
	1284	[2020]	CALL     	R93 3 2 ; R93 := R93(R94,R95)
	1285	[2020]	MOVE     	R5 R93 ; R5 := R93
	1286	[2021]	GETGLOBAL	R93 K5 ; R93 := 0x33bdd652
	1287	[2021]	GETTABLE 	R93 R93 K6 ; R93 := R93[0x23d5322f]
	1288	[2021]	MOVE     	R94 R6 ; R94 := R6
	1289	[2021]	MOVE     	R95 R5 ; R95 := R5
	1290	[2021]	CALL     	R93 3 1 ; R93(R94,R95)
	1291	[2024]	GETTABLE 	R93 R2 K205 ; R93 := R2["NumPortals"]
	1292	[2024]	EQ       	1 R93 K15 ; if R93 == nil then PC := 1372
	1293	[2024]	JMP      	1372 ; PC := 1372
	1294	[2025]	LOADK    	R93 := 0.000000
	1295	[2026]	GETGLOBAL	R94 K0 ; R94 := 0x7b998233
	1296	[2026]	GETGLOBAL	R95 K206 ; R95 := _T
	1297	[2026]	GETTABLE 	R95 R95 K207 ; R95 := R95["DojoMgr"]
	1298	[2026]	CALL     	R94 2 2 ; R94 := R94(R95)
	1299	[2026]	TEST     	R94 1 ; if R94 then PC := 1331
	1300	[2026]	JMP      	1331 ; PC := 1331
	1301	[2026]	GETGLOBAL	R94 K0 ; R94 := 0x7b998233
	1302	[2026]	GETTABLE 	R95 R2 K208 ; R95 := R2["Prefab"]
	1303	[2026]	CALL     	R94 2 2 ; R94 := R94(R95)
	1304	[2026]	TEST     	R94 1 ; if R94 then PC := 1331
	1305	[2026]	JMP      	1331 ; PC := 1331
	1306	[2027]	GETGLOBAL	R94 K206 ; R94 := _T
	1307	[2027]	GETTABLE 	R94 R94 K207 ; R94 := R94["DojoMgr"]
	1308	[2027]	GETTABLE 	R94 R94 K209 ; R94 := R94["mDojo"]
	1309	[2027]	SELF     	R94 R94 K210 ; R95 := R94; R94 := R94[0x8f543247]
	1310	[2027]	GETTABLE 	R96 R2 K208 ; R96 := R2["Prefab"]
	1311	[2027]	CALL     	R94 3 2 ; R94 := R94(R95,R96)
	1312	[2027]	MOVE     	R93 R94 ; R93 := R94
	1313	[2028]	LT       	0 K19 R93 ; if 0.000000 >= R93 then PC := 1331
	1314	[2028]	JMP      	1331 ; PC := 1331
	1315	[2029]	GETUPVAL 	R94 U4 ; R94 := U4
	1316	[2029]	GETGLOBAL	R95 K168 ; R95 := LABEL_TYPE_CHECKMARK
	1317	[2029]	SELF     	R96 R0 K22 ; R97 := R0; R96 := R0[0x42b04007]
	1318	[2029]	LOADK    	R98 K211 ; R98 := "/Lotus/Language/Dojo/NumBuilt"
	1319	[2029]	OP_LOADBOOL	R99 1 0 ; R99 := true
	1320	[2029]	NEWTABLE 	R100 0 1 ; R100 := {}
	1321	[2029]	SETTABLE 	R100 K212 R93 ; R100["AMOUNT"] := R93
	1322	[2029]	CALL     	R96 5 0 ; R96,... := R96(R97,R98,R99,R100)
	1323	[2029]	CALL     	R94 0 2 ; R94 := R94(R95,...)
	1324	[2029]	MOVE     	R5 R94 ; R5 := R94
	1325	[2030]	SETTABLE 	R5 K36 K129 ; R5["HideInGrid"] := true
	1326	[2031]	GETGLOBAL	R94 K5 ; R94 := 0x33bdd652
	1327	[2031]	GETTABLE 	R94 R94 K6 ; R94 := R94[0x23d5322f]
	1328	[2031]	MOVE     	R95 R6 ; R95 := R6
	1329	[2031]	MOVE     	R96 R5 ; R96 := R5
	1330	[2031]	CALL     	R94 3 1 ; R94(R95,R96)
	1331	[2034]	EQ       	0 R93 K19 ; if R93 ~= 0.000000 then PC := 1498
	1332	[2034]	JMP      	1498 ; PC := 1498
	1333	[2034]	GETGLOBAL	R94 K0 ; R94 := 0x7b998233
	1334	[2034]	GETTABLE 	R95 R2 K213 ; R95 := R2["Recipe"]
	1335	[2034]	CALL     	R94 2 2 ; R94 := R94(R95)
	1336	[2034]	TEST     	R94 1 ; if R94 then PC := 1498
	1337	[2034]	JMP      	1498 ; PC := 1498
	1338	[2034]	GETTABLE 	R94 R2 K213 ; R94 := R2["Recipe"]
	1339	[2034]	SELF     	R94 R94 K29 ; R95 := R94; R94 := R94[0xf2deaf69]
	1340	[2034]	GETGLOBAL	R96 K214 ; R96 := gRecipeItemType
	1341	[2034]	CALL     	R94 3 2 ; R94 := R94(R95,R96)
	1342	[2034]	TEST     	R94 0 ; if not R94 then PC := 1498
	1343	[2034]	JMP      	1498 ; PC := 1498
	1344	[2034]	GETTABLE 	R94 R2 K213 ; R94 := R2["Recipe"]
	1345	[2034]	SELF     	R94 R94 K215 ; R95 := R94; R94 := R94[0xc5e1d5fa]
	1346	[2034]	CALL     	R94 2 2 ; R94 := R94(R95)
	1347	[2034]	LT       	0 K19 R94 ; if 0.000000 >= R94 then PC := 1498
	1348	[2034]	JMP      	1498 ; PC := 1498
	1349	[2035]	GETUPVAL 	R94 U4 ; R94 := U4
	1350	[2035]	GETGLOBAL	R95 K216 ; R95 := LABEL_TYPE_CLAN_XP
	1351	[2035]	SELF     	R96 R0 K22 ; R97 := R0; R96 := R0[0x42b04007]
	1352	[2035]	LOADK    	R98 K217 ; R98 := "/Lotus/Language/Menu/OneTimeClanXp"
	1353	[2035]	OP_LOADBOOL	R99 1 0 ; R99 := true
	1354	[2035]	NEWTABLE 	R100 0 1 ; R100 := {}
	1355	[2035]	GETUPVAL 	R101 U3 ; R101 := U3
	1356	[2035]	GETTABLE 	R101 R101 K33 ; R101 := R101[0x1142c7a8]
	1357	[2035]	GETTABLE 	R102 R2 K213 ; R102 := R2["Recipe"]
	1358	[2035]	SELF     	R102 R102 K215 ; R103 := R102; R102 := R102[0xc5e1d5fa]
	1359	[2035]	CALL     	R102 2 2 ; R102 := R102(R103)
	1360	[2035]	LOADK    	R103 := 0.000000
	1361	[2035]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	1362	[2035]	SETTABLE 	R100 K212 R101 ; R100["AMOUNT"] := R101
	1363	[2035]	CALL     	R96 5 0 ; R96,... := R96(R97,R98,R99,R100)
	1364	[2035]	CALL     	R94 0 2 ; R94 := R94(R95,...)
	1365	[2035]	MOVE     	R5 R94 ; R5 := R94
	1366	[2036]	GETGLOBAL	R94 K5 ; R94 := 0x33bdd652
	1367	[2036]	GETTABLE 	R94 R94 K6 ; R94 := R94[0x23d5322f]
	1368	[2036]	MOVE     	R95 R6 ; R95 := R6
	1369	[2036]	MOVE     	R96 R5 ; R96 := R5
	1370	[2036]	CALL     	R94 3 1 ; R94(R95,R96)
	1371	[2037]	JMP      	1498 ; PC := 1498
	1372	[2038]	GETTABLE 	R94 R2 K218 ; R94 := R2["Capacity"]
	1373	[2038]	EQ       	1 R94 K15 ; if R94 == nil then PC := 1498
	1374	[2038]	JMP      	1498 ; PC := 1498
	1375	[2038]	GETGLOBAL	R94 K0 ; R94 := 0x7b998233
	1376	[2038]	GETTABLE 	R95 R2 K213 ; R95 := R2["Recipe"]
	1377	[2038]	CALL     	R94 2 2 ; R94 := R94(R95)
	1378	[2038]	TEST     	R94 1 ; if R94 then PC := 1498
	1379	[2038]	JMP      	1498 ; PC := 1498
	1380	[2038]	GETTABLE 	R94 R2 K213 ; R94 := R2["Recipe"]
	1381	[2038]	SELF     	R94 R94 K29 ; R95 := R94; R94 := R94[0xf2deaf69]
	1382	[2038]	GETGLOBAL	R96 K219 ; R96 := gDojoDecorationRecipeItemType
	1383	[2038]	CALL     	R94 3 2 ; R94 := R94(R95,R96)
	1384	[2038]	TEST     	R94 0 ; if not R94 then PC := 1498
	1385	[2038]	JMP      	1498 ; PC := 1498
	1386	[2039]	GETTABLE 	R94 R2 K213 ; R94 := R2["Recipe"]
	1387	[2039]	SELF     	R94 R94 K220 ; R95 := R94; R94 := R94[0x05067c6d]
	1388	[2039]	CALL     	R94 2 2 ; R94 := R94(R95)
	1389	[2040]	GETGLOBAL	R95 K221 ; R95 := 0x89326c93
	1390	[2040]	SELF     	R95 R95 K222 ; R96 := R95; R95 := R95[0xfb669000]
	1391	[2040]	MOVE     	R97 R94 ; R97 := R94
	1392	[2040]	CALL     	R95 3 2 ; R95 := R95(R96,R97)
	1393	[2040]	LEN      	R95 R95 ; R95 := # R95
	1394	[2041]	LT       	0 K19 R95 ; if 0.000000 >= R95 then PC := 1469
	1395	[2041]	JMP      	1469 ; PC := 1469
	1396	[2042]	GETUPVAL 	R96 U4 ; R96 := U4
	1397	[2042]	GETGLOBAL	R97 K168 ; R97 := LABEL_TYPE_CHECKMARK
	1398	[2042]	SELF     	R98 R0 K22 ; R99 := R0; R98 := R0[0x42b04007]
	1399	[2042]	LOADK    	R100 K211 ; R100 := "/Lotus/Language/Dojo/NumBuilt"
	1400	[2042]	OP_LOADBOOL	R101 1 0 ; R101 := true
	1401	[2042]	NEWTABLE 	R102 0 1 ; R102 := {}
	1402	[2042]	SETTABLE 	R102 K212 R95 ; R102["AMOUNT"] := R95
	1403	[2042]	CALL     	R98 5 0 ; R98,... := R98(R99,R100,R101,R102)
	1404	[2042]	CALL     	R96 0 2 ; R96 := R96(R97,...)
	1405	[2042]	MOVE     	R5 R96 ; R5 := R96
	1406	[2043]	SETTABLE 	R5 K36 K129 ; R5["HideInGrid"] := true
	1407	[2044]	GETGLOBAL	R96 K5 ; R96 := 0x33bdd652
	1408	[2044]	GETTABLE 	R96 R96 K6 ; R96 := R96[0x23d5322f]
	1409	[2044]	MOVE     	R97 R6 ; R97 := R6
	1410	[2044]	MOVE     	R98 R5 ; R98 := R5
	1411	[2044]	CALL     	R96 3 1 ; R96(R97,R98)
	1412	[2046]	GETTABLE 	R96 R2 K223 ; R96 := R2["ShowCollecting"]
	1413	[2046]	TEST     	R96 0 ; if not R96 then PC := 1469
	1414	[2046]	JMP      	1469 ; PC := 1469
	1415	[2046]	GETGLOBAL	R96 K0 ; R96 := 0x7b998233
	1416	[2046]	GETGLOBAL	R97 K206 ; R97 := _T
	1417	[2046]	GETTABLE 	R97 R97 K207 ; R97 := R97["DojoMgr"]
	1418	[2046]	CALL     	R96 2 2 ; R96 := R96(R97)
	1419	[2046]	TEST     	R96 1 ; if R96 then PC := 1469
	1420	[2046]	JMP      	1469 ; PC := 1469
	1421	[2047]	GETGLOBAL	R96 K206 ; R96 := _T
	1422	[2047]	GETTABLE 	R96 R96 K207 ; R96 := R96["DojoMgr"]
	1423	[2047]	GETTABLE 	R96 R96 K224 ; R96 := R96["mDecoTypeToDecos"]
	1424	[2047]	SELF     	R97 R94 K150 ; R98 := R94; R97 := R94[0xed4e0128]
	1425	[2047]	CALL     	R97 2 2 ; R97 := R97(R98)
	1426	[2047]	GETTABLE 	R96 R96 R97 ; R96 := R96[R97]
	1427	[2049]	LOADK    	R97 := 0.000000
	1428	[2050]	GETGLOBAL	R98 K3 ; R98 := 0xcfc01047
	1429	[2050]	MOVE     	R99 R96 ; R99 := R96
	1430	[2050]	CALL     	R98 2 4 ; R98,R99,R100 := R98(R99)
	1431	[2050]	JMP      	1448 ; PC := 1448
	1432	[2051]	GETGLOBAL	R103 K206 ; R103 := _T
	1433	[2051]	GETTABLE 	R103 R103 K207 ; R103 := R103["DojoMgr"]
	1434	[2051]	GETTABLE 	R103 R103 K225 ; R103 := R103["mIdToPlacedDecos"]
	1435	[2051]	GETTABLE 	R103 R103 R102 ; R103 := R103[R102]
	1436	[2051]	GETTABLE 	R103 R103 R101 ; R103 := R103[R101]
	1437	[2052]	GETGLOBAL	R104 K206 ; R104 := _T
	1438	[2052]	GETTABLE 	R104 R104 K207 ; R104 := R104["DojoMgr"]
	1439	[2052]	GETTABLE 	R104 R104 K209 ; R104 := R104["mDojo"]
	1440	[2052]	SELF     	R104 R104 K226 ; R105 := R104; R104 := R104[0xfce0784e]
	1441	[2052]	MOVE     	R106 R101 ; R106 := R101
	1442	[2052]	CALL     	R104 3 2 ; R104 := R104(R105,R106)
	1443	[2053]	SELF     	R105 R104 K227 ; R106 := R104; R105 := R104[0x3ae915ba]
	1444	[2053]	CALL     	R105 2 2 ; R105 := R105(R106)
	1445	[2053]	TEST     	R105 0 ; if not R105 then PC := 1448
	1446	[2053]	JMP      	1448 ; PC := 1448
	1447	[2054]	ADD      	R97 R97 K83 ; R97 := R97 + 1.000000
	1448	[2050]	TFORLOOP 	R98 2 ; R101,R102 := R98(R99,R100); if R101 ~= nil then begin PC = 1432; R100 := R101 end
	1449	[2055]	JMP      	1432 ; PC := 1432
	1450	[2058]	LT       	0 K19 R97 ; if 0.000000 >= R97 then PC := 1469
	1451	[2058]	JMP      	1469 ; PC := 1469
	1452	[2059]	GETUPVAL 	R105 U4 ; R105 := U4
	1453	[2059]	GETGLOBAL	R106 K228 ; R106 := LABEL_TYPE_UNIQUE_TEXT
	1454	[2059]	SELF     	R107 R0 K22 ; R108 := R0; R107 := R0[0x42b04007]
	1455	[2059]	LOADK    	R109 K229 ; R109 := "/Lotus/Language/Dojo/NumUnfunded"
	1456	[2059]	OP_LOADBOOL	R110 1 0 ; R110 := true
	1457	[2059]	NEWTABLE 	R111 0 1 ; R111 := {}
	1458	[2059]	SETTABLE 	R111 K212 R97 ; R111["AMOUNT"] := R97
	1459	[2059]	CALL     	R107 5 0 ; R107,... := R107(R108,R109,R110,R111)
	1460	[2059]	CALL     	R105 0 2 ; R105 := R105(R106,...)
	1461	[2059]	MOVE     	R5 R105 ; R5 := R105
	1462	[2060]	SETTABLE 	R5 K36 K129 ; R5["HideInGrid"] := true
	1463	[2061]	SETTABLE 	R5 K76 K77 ; R5["LabelOffset"] := 2.000000
	1464	[2062]	GETGLOBAL	R105 K5 ; R105 := 0x33bdd652
	1465	[2062]	GETTABLE 	R105 R105 K6 ; R105 := R105[0x23d5322f]
	1466	[2062]	MOVE     	R106 R6 ; R106 := R6
	1467	[2062]	MOVE     	R107 R5 ; R107 := R5
	1468	[2062]	CALL     	R105 3 1 ; R105(R106,R107)
	1469	[2066]	EQ       	0 R95 K19 ; if R95 ~= 0.000000 then PC := 1498
	1470	[2066]	JMP      	1498 ; PC := 1498
	1471	[2066]	GETTABLE 	R105 R2 K213 ; R105 := R2["Recipe"]
	1472	[2066]	SELF     	R105 R105 K215 ; R106 := R105; R105 := R105[0xc5e1d5fa]
	1473	[2066]	CALL     	R105 2 2 ; R105 := R105(R106)
	1474	[2066]	LT       	0 K19 R105 ; if 0.000000 >= R105 then PC := 1498
	1475	[2066]	JMP      	1498 ; PC := 1498
	1476	[2067]	GETUPVAL 	R105 U4 ; R105 := U4
	1477	[2067]	GETGLOBAL	R106 K216 ; R106 := LABEL_TYPE_CLAN_XP
	1478	[2067]	SELF     	R107 R0 K22 ; R108 := R0; R107 := R0[0x42b04007]
	1479	[2067]	LOADK    	R109 K217 ; R109 := "/Lotus/Language/Menu/OneTimeClanXp"
	1480	[2067]	OP_LOADBOOL	R110 1 0 ; R110 := true
	1481	[2067]	NEWTABLE 	R111 0 1 ; R111 := {}
	1482	[2067]	GETUPVAL 	R112 U3 ; R112 := U3
	1483	[2067]	GETTABLE 	R112 R112 K33 ; R112 := R112[0x1142c7a8]
	1484	[2067]	GETTABLE 	R113 R2 K213 ; R113 := R2["Recipe"]
	1485	[2067]	SELF     	R113 R113 K215 ; R114 := R113; R113 := R113[0xc5e1d5fa]
	1486	[2067]	CALL     	R113 2 2 ; R113 := R113(R114)
	1487	[2067]	LOADK    	R114 := 0.000000
	1488	[2067]	CALL     	R112 3 2 ; R112 := R112(R113,R114)
	1489	[2067]	SETTABLE 	R111 K212 R112 ; R111["AMOUNT"] := R112
	1490	[2067]	CALL     	R107 5 0 ; R107,... := R107(R108,R109,R110,R111)
	1491	[2067]	CALL     	R105 0 2 ; R105 := R105(R106,...)
	1492	[2067]	MOVE     	R5 R105 ; R5 := R105
	1493	[2068]	GETGLOBAL	R105 K5 ; R105 := 0x33bdd652
	1494	[2068]	GETTABLE 	R105 R105 K6 ; R105 := R105[0x23d5322f]
	1495	[2068]	MOVE     	R106 R6 ; R106 := R6
	1496	[2068]	MOVE     	R107 R5 ; R107 := R5
	1497	[2068]	CALL     	R105 3 1 ; R105(R106,R107)
	1498	[2072]	EQ       	1 R4 K230 ; if R4 == "Max" then PC := 1502
	1499	[2072]	JMP      	1502 ; PC := 1502
	1500	[2072]	EQ       	0 R4 K231 ; if R4 ~= "Forma" then PC := 1550
	1501	[2072]	JMP      	1550 ; PC := 1550
	1502	[2073]	SELF     	R105 R0 K22 ; R106 := R0; R105 := R0[0x42b04007]
	1503	[2073]	LOADK    	R107 K232 ; R107 := "/Lotus/Language/Menu/DetailedPurchase_Mastered"
	1504	[2073]	OP_LOADBOOL	R108 0 0 ; R108 := false
	1505	[2073]	CALL     	R105 4 2 ; R105 := R105(R106,R107,R108)
	1506	[2074]	GETUPVAL 	R106 U4 ; R106 := U4
	1507	[2074]	GETGLOBAL	R107 K233 ; R107 := LABEL_TYPE_MASTERY
	1508	[2074]	MOVE     	R108 R105 ; R108 := R105
	1509	[2074]	CALL     	R106 3 2 ; R106 := R106(R107,R108)
	1510	[2074]	MOVE     	R5 R106 ; R5 := R106
	1511	[2076]	GETGLOBAL	R106 K5 ; R106 := 0x33bdd652
	1512	[2076]	GETTABLE 	R106 R106 K6 ; R106 := R106[0x23d5322f]
	1513	[2076]	MOVE     	R107 R6 ; R107 := R6
	1514	[2076]	MOVE     	R108 R5 ; R108 := R5
	1515	[2076]	CALL     	R106 3 1 ; R106(R107,R108)
	1516	[2078]	EQ       	0 R4 K231 ; if R4 ~= "Forma" then PC := 1550
	1517	[2078]	JMP      	1550 ; PC := 1550
	1518	[2079]	SELF     	R106 R0 K22 ; R107 := R0; R106 := R0[0x42b04007]
	1519	[2079]	LOADK    	R108 K234 ; R108 := "/Lotus/Language/Menu/SortBy_FormaCount"
	1520	[2079]	OP_LOADBOOL	R109 0 0 ; R109 := false
	1521	[2079]	CALL     	R106 4 2 ; R106 := R106(R107,R108,R109)
	1522	[2080]	GETUPVAL 	R107 U4 ; R107 := U4
	1523	[2080]	GETGLOBAL	R108 K235 ; R108 := LABEL_TYPE_POLARIZED
	1524	[2080]	MOVE     	R109 R106 ; R109 := R106
	1525	[2080]	CALL     	R107 3 2 ; R107 := R107(R108,R109)
	1526	[2081]	GETUPVAL 	R108 U3 ; R108 := U3
	1527	[2081]	GETTABLE 	R108 R108 K33 ; R108 := R108[0x1142c7a8]
	1528	[2081]	GETTABLE 	R109 R2 K237 ; R109 := R2["Polarized"]
	1529	[2081]	CALL     	R108 2 2 ; R108 := R108(R109)
	1530	[2081]	SETTABLE 	R107 K236 R108 ; R107["IconText"] := R108
	1531	[2082]	GETGLOBAL	R108 K116 ; R108 := 0x7f5022cf
	1532	[2082]	GETTABLE 	R108 R108 K238 ; R108 := R108[0x41e2ae25]
	1533	[2082]	GETTABLE 	R109 R107 K236 ; R109 := R107["IconText"]
	1534	[2082]	CALL     	R108 2 2 ; R108 := R108(R109)
	1535	[2083]	GETTABLE 	R109 R107 K239 ; R109 := R107["IconTextPos"]
	1536	[2083]	GETTABLE 	R110 R107 K239 ; R110 := R107["IconTextPos"]
	1537	[2083]	GETTABLE 	R110 R110 K86 ; R110 := R110["X"]
	1538	[2083]	GETTABLE 	R111 R107 K239 ; R111 := R107["IconTextPos"]
	1539	[2083]	GETTABLE 	R111 R111 K86 ; R111 := R111["X"]
	1540	[2083]	DIV      	R111 R111 K77 ; R111 := R111 / 2.000000
	1541	[2083]	SUB      	R112 R108 K83 ; R112 := R108 - 1.000000
	1542	[2083]	MUL      	R111 R111 R112 ; R111 := R111 * R112
	1543	[2083]	SUB      	R110 R110 R111 ; R110 := R110 - R111
	1544	[2083]	SETTABLE 	R109 K86 R110 ; R109["X"] := R110
	1545	[2085]	GETGLOBAL	R109 K5 ; R109 := 0x33bdd652
	1546	[2085]	GETTABLE 	R109 R109 K6 ; R109 := R109[0x23d5322f]
	1547	[2085]	MOVE     	R110 R6 ; R110 := R6
	1548	[2085]	MOVE     	R111 R107 ; R111 := R107
	1549	[2085]	CALL     	R109 3 1 ; R109(R110,R111)
	1550	[2089]	GETGLOBAL	R109 K0 ; R109 := 0x7b998233
	1551	[2089]	GETTABLE 	R110 R2 K27 ; R110 := R2["RawItem"]
	1552	[2089]	CALL     	R109 2 2 ; R109 := R109(R110)
	1553	[2089]	TEST     	R109 1 ; if R109 then PC := 1649
	1554	[2089]	JMP      	1649 ; PC := 1649
	1555	[2089]	GETGLOBAL	R109 K0 ; R109 := 0x7b998233
	1556	[2089]	GETTABLE 	R110 R2 K27 ; R110 := R2["RawItem"]
	1557	[2089]	GETTABLE 	R110 R110 K240 ; R110 := R110["mDominantTraits"]
	1558	[2089]	CALL     	R109 2 2 ; R109 := R109(R110)
	1559	[2089]	TEST     	R109 1 ; if R109 then PC := 1649
	1560	[2089]	JMP      	1649 ; PC := 1649
	1561	[2091]	GETUPVAL 	R109 U6 ; R109 := U6
	1562	[2091]	GETTABLE 	R109 R109 K241 ; R109 := R109[0xc16ccc77]
	1563	[2091]	CALL     	R109 1 2 ; R109 := R109()
	1564	[2092]	LOADK    	R110 K49 ; R110 := ""
	1565	[2093]	LOADNIL  	R111 R111 ; R111 := nil
	1566	[2094]	LOADK    	R112 := 1.000000
	1567	[2094]	LEN      	R113 R109 ; R113 := # R109
	1568	[2094]	LOADK    	R114 := 1.000000
	1569	[2094]	FORPREP  	R112 1582 ; R112 -= R114; PC := 1582
	1570	[2095]	GETTABLE 	R116 R109 R115 ; R116 := R109[R115]
	1571	[2095]	GETTABLE 	R116 R116 K242 ; R116 := R116["Type"]
	1572	[2095]	GETTABLE 	R117 R2 K27 ; R117 := R2["RawItem"]
	1573	[2095]	GETTABLE 	R117 R117 K240 ; R117 := R117["mDominantTraits"]
	1574	[2095]	GETTABLE 	R117 R117 K243 ; R117 := R117["mPersonality"]
	1575	[2095]	EQ       	0 R116 R117 ; if R116 ~= R117 then PC := 1582
	1576	[2095]	JMP      	1582 ; PC := 1582
	1577	[2096]	GETTABLE 	R116 R109 R115 ; R116 := R109[R115]
	1578	[2096]	GETTABLE 	R110 R116 K244 ; R110 := R116["Name"]
	1579	[2097]	GETTABLE 	R116 R109 R115 ; R116 := R109[R115]
	1580	[2097]	GETTABLE 	R111 R116 K79 ; R111 := R116["Icon"]
	1581	[2099]	JMP      	1583 ; PC := 1583
	1582	[2094]	FORLOOP  	R112 1570 ; R112 += R114; if R112 <= R113 then begin PC := 1570; R115 := R112 end
	1583	[2102]	GETUPVAL 	R116 U4 ; R116 := U4
	1584	[2102]	GETGLOBAL	R117 K59 ; R117 := LABEL_TYPE_MISC_ITEM
	1585	[2102]	SELF     	R118 R0 K22 ; R119 := R0; R118 := R0[0x42b04007]
	1586	[2102]	MOVE     	R120 R110 ; R120 := R110
	1587	[2102]	OP_LOADBOOL	R121 0 0 ; R121 := false
	1588	[2102]	CALL     	R118 4 0 ; R118,... := R118(R119,R120,R121)
	1589	[2102]	CALL     	R116 0 2 ; R116 := R116(R117,...)
	1590	[2103]	SETTABLE 	R116 K79 R111 ; R116["Icon"] := R111
	1591	[2104]	SETTABLE 	R116 K245 K129 ; R116["IconTintLabelColor"] := true
	1592	[2105]	GETTABLE 	R117 R116 K80 ; R117 := R116["IconDims"]
	1593	[2105]	SETTABLE 	R117 K90 K246 ; R117["H"] := 40.000000
	1594	[2106]	GETTABLE 	R117 R116 K85 ; R117 := R116["IconPos"]
	1595	[2106]	SETTABLE 	R117 K88 K247 ; R117["Y"] := -8.000000
	1596	[2107]	SETTABLE 	R116 K76 K246 ; R116["LabelOffset"] := 40.000000
	1597	[2108]	GETGLOBAL	R117 K5 ; R117 := 0x33bdd652
	1598	[2108]	GETTABLE 	R117 R117 K6 ; R117 := R117[0x23d5322f]
	1599	[2108]	MOVE     	R118 R6 ; R118 := R6
	1600	[2108]	MOVE     	R119 R116 ; R119 := R116
	1601	[2108]	CALL     	R117 3 1 ; R117(R118,R119)
	1602	[2110]	LOADNIL  	R117 R117 ; R117 := nil
	1603	[2111]	LOADK    	R118 K49 ; R118 := ""
	1604	[2112]	GETTABLE 	R119 R2 K27 ; R119 := R2["RawItem"]
	1605	[2112]	GETTABLE 	R119 R119 K248 ; R119 := R119["mIsMale"]
	1606	[2112]	EQ       	1 R119 K15 ; if R119 == nil then PC := 1628
	1607	[2112]	JMP      	1628 ; PC := 1628
	1608	[2113]	GETUPVAL 	R119 U3 ; R119 := U3
	1609	[2113]	GETTABLE 	R119 R119 K37 ; R119 := R119[0x06d055f9]
	1610	[2113]	GETTABLE 	R120 R2 K27 ; R120 := R2["RawItem"]
	1611	[2113]	GETTABLE 	R120 R120 K248 ; R120 := R120["mIsMale"]
	1612	[2113]	LOADK    	R121 K249 ; R121 := "/Lotus/Language/Menu/KubrowMale"
	1613	[2113]	LOADK    	R122 K250 ; R122 := "/Lotus/Language/Menu/KubrowFemale"
	1614	[2113]	CALL     	R119 4 2 ; R119 := R119(R120,R121,R122)
	1615	[2113]	MOVE     	R118 R119 ; R118 := R119
	1616	[2114]	GETUPVAL 	R119 U3 ; R119 := U3
	1617	[2114]	GETTABLE 	R119 R119 K37 ; R119 := R119[0x06d055f9]
	1618	[2114]	GETTABLE 	R120 R2 K27 ; R120 := R2["RawItem"]
	1619	[2114]	GETTABLE 	R120 R120 K248 ; R120 := R120["mIsMale"]
	1620	[2114]	GETGLOBAL	R121 K251 ; R121 := 0x0032441c
	1621	[2114]	GETTABLE 	R121 R121 K252 ; R121 := R121["UITexture_GenderIcons"]
	1622	[2114]	GETTABLE 	R121 R121 K77 ; R121 := R121[2.000000]
	1623	[2114]	GETGLOBAL	R122 K251 ; R122 := 0x0032441c
	1624	[2114]	GETTABLE 	R122 R122 K252 ; R122 := R122["UITexture_GenderIcons"]
	1625	[2114]	GETTABLE 	R122 R122 K83 ; R122 := R122[1.000000]
	1626	[2114]	CALL     	R119 4 2 ; R119 := R119(R120,R121,R122)
	1627	[2114]	MOVE     	R117 R119 ; R117 := R119
	1628	[2117]	GETUPVAL 	R119 U4 ; R119 := U4
	1629	[2117]	GETGLOBAL	R120 K59 ; R120 := LABEL_TYPE_MISC_ITEM
	1630	[2117]	SELF     	R121 R0 K22 ; R122 := R0; R121 := R0[0x42b04007]
	1631	[2117]	MOVE     	R123 R118 ; R123 := R118
	1632	[2117]	OP_LOADBOOL	R124 0 0 ; R124 := false
	1633	[2117]	CALL     	R121 4 0 ; R121,... := R121(R122,R123,R124)
	1634	[2117]	CALL     	R119 0 2 ; R119 := R119(R120,...)
	1635	[2118]	SETTABLE 	R119 K79 R117 ; R119["Icon"] := R117
	1636	[2119]	SETTABLE 	R119 K245 K129 ; R119["IconTintLabelColor"] := true
	1637	[2120]	GETTABLE 	R120 R119 K80 ; R120 := R119["IconDims"]
	1638	[2120]	SETTABLE 	R120 K81 K253 ; R120["W"] := 35.000000
	1639	[2121]	GETTABLE 	R120 R119 K80 ; R120 := R119["IconDims"]
	1640	[2121]	SETTABLE 	R120 K90 K253 ; R120["H"] := 35.000000
	1641	[2122]	GETTABLE 	R120 R119 K85 ; R120 := R119["IconPos"]
	1642	[2122]	SETTABLE 	R120 K88 K254 ; R120["Y"] := -5.000000
	1643	[2123]	SETTABLE 	R119 K76 K246 ; R119["LabelOffset"] := 40.000000
	1644	[2124]	GETGLOBAL	R120 K5 ; R120 := 0x33bdd652
	1645	[2124]	GETTABLE 	R120 R120 K6 ; R120 := R120[0x23d5322f]
	1646	[2124]	MOVE     	R121 R6 ; R121 := R6
	1647	[2124]	MOVE     	R122 R119 ; R122 := R119
	1648	[2124]	CALL     	R120 3 1 ; R120(R121,R122)
	1649	[2127]	GETTABLE 	R120 R2 K20 ; R120 := R2["WillExpire"]
	1650	[2127]	EQ       	0 R120 K129 ; if R120 ~= true then PC := 1690
	1651	[2127]	JMP      	1690 ; PC := 1690
	1652	[2127]	GETGLOBAL	R120 K0 ; R120 := 0x7b998233
	1653	[2127]	GETTABLE 	R121 R2 K27 ; R121 := R2["RawItem"]
	1654	[2127]	CALL     	R120 2 2 ; R120 := R120(R121)
	1655	[2127]	TEST     	R120 1 ; if R120 then PC := 1690
	1656	[2127]	JMP      	1690 ; PC := 1690
	1657	[2128]	GETGLOBAL	R120 K25 ; R120 := 0x34291f5c
	1658	[2128]	GETTABLE 	R120 R120 K106 ; R120 := R120[0x397b920f]
	1659	[2128]	GETTABLE 	R121 R2 K27 ; R121 := R2["RawItem"]
	1660	[2128]	GETTABLE 	R121 R121 K107 ; R121 := R121["mExpiry"]
	1661	[2128]	GETTABLE 	R121 R121 K255 ; R121 := R121["sec"]
	1662	[2128]	CALL     	R120 2 2 ; R120 := R120(R121)
	1663	[2129]	LOADNIL  	R121 R121 ; R121 := nil
	1664	[2130]	LOADK    	R122 := 0.000000
	1665	[2130]	LE       	0 R120 R122 ; if R120 > R122 then PC := 1673
	1666	[2130]	JMP      	1673 ; PC := 1673
	1667	[2131]	SELF     	R122 R0 K22 ; R123 := R0; R122 := R0[0x42b04007]
	1668	[2131]	LOADK    	R124 K256 ; R124 := "/Lotus/Language/Menu/Expired"
	1669	[2131]	OP_LOADBOOL	R125 0 0 ; R125 := false
	1670	[2131]	CALL     	R122 4 2 ; R122 := R122(R123,R124,R125)
	1671	[2131]	MOVE     	R121 R122 ; R121 := R122
	1672	[2131]	JMP      	1679 ; PC := 1679
	1673	[2133]	GETUPVAL 	R122 U6 ; R122 := U6
	1674	[2133]	LOADK    	R123 K257 ; R123 := true
	1675	[2133]	GETTABLE 	R122 R122 R123 ; R122 := R122[R123]
	1676	[2133]	MOVE     	R123 R120 ; R123 := R120
	1677	[2133]	CALL     	R122 2 2 ; R122 := R122(R123)
	1678	[2133]	MOVE     	R121 R122 ; R121 := R122
	1679	[2136]	GETUPVAL 	R122 U4 ; R122 := U4
	1680	[2136]	GETGLOBAL	R123 K258 ; R123 := LABEL_TYPE_TIMER
	1681	[2136]	MOVE     	R124 R121 ; R124 := R121
	1682	[2136]	CALL     	R122 3 2 ; R122 := R122(R123,R124)
	1683	[2136]	MOVE     	R5 R122 ; R5 := R122
	1684	[2137]	GETGLOBAL	R122 K5 ; R122 := 0x33bdd652
	1685	[2137]	GETTABLE 	R122 R122 K6 ; R122 := R122[0x23d5322f]
	1686	[2137]	MOVE     	R123 R6 ; R123 := R6
	1687	[2137]	MOVE     	R124 R5 ; R124 := R5
	1688	[2137]	CALL     	R122 3 1 ; R122(R123,R124)
	1689	[2137]	JMP      	1742 ; PC := 1742
	1690	[2138]	GETGLOBAL	R122 K0 ; R122 := 0x7b998233
	1691	[2138]	GETTABLE 	R123 R2 K242 ; R123 := R2["Type"]
	1692	[2138]	CALL     	R122 2 2 ; R122 := R122(R123)
	1693	[2138]	TEST     	R122 1 ; if R122 then PC := 1742
	1694	[2138]	JMP      	1742 ; PC := 1742
	1695	[2138]	GETTABLE 	R122 R2 K242 ; R122 := R2["Type"]
	1696	[2138]	SELF     	R122 R122 K29 ; R123 := R122; R122 := R122[0xf2deaf69]
	1697	[2138]	GETGLOBAL	R124 K259 ; R124 := gMiscItemBaseType
	1698	[2138]	CALL     	R122 3 2 ; R122 := R122(R123,R124)
	1699	[2138]	TEST     	R122 0 ; if not R122 then PC := 1742
	1700	[2138]	JMP      	1742 ; PC := 1742
	1701	[2139]	GETGLOBAL	R122 K260 ; R122 := 0x6c97a788
	1702	[2139]	LOADK    	R123 K261 ; R123 := true
	1703	[2139]	GETTABLE 	R122 R122 R123 ; R122 := R122[R123]
	1704	[2139]	GETTABLE 	R123 R2 K242 ; R123 := R2["Type"]
	1705	[2139]	LOADK    	R124 := 1.000000
	1706	[2139]	CALL     	R122 3 2 ; R122 := R122(R123,R124)
	1707	[2140]	LOADK    	R125 K262 ; R125 := true
	1708	[2140]	SELF     	R123 R122 R125 ; R124 := R122; R123 := R122[R125]
	1709	[2140]	CALL     	R123 2 2 ; R123 := R123(R124)
	1710	[2140]	LOADK    	R124 := 0.000000
	1711	[2140]	LT       	0 R124 R123 ; if R124 >= R123 then PC := 1742
	1712	[2140]	JMP      	1742 ; PC := 1742
	1713	[2141]	GETGLOBAL	R123 K25 ; R123 := 0x34291f5c
	1714	[2141]	GETTABLE 	R123 R123 K106 ; R123 := R123[0x397b920f]
	1715	[2141]	GETGLOBAL	R124 K12 ; R124 := 0x25d99d89
	1716	[2141]	LOADK    	R126 K263 ; R126 := true
	1717	[2141]	SELF     	R124 R124 R126 ; R125 := R124; R124 := R124[R126]
	1718	[2141]	CALL     	R124 2 0 ; R124,... := R124(R125)
	1719	[2141]	CALL     	R123 0 2 ; R123 := R123(R124,...)
	1720	[2142]	SELF     	R124 R0 K22 ; R125 := R0; R124 := R0[0x42b04007]
	1721	[2142]	LOADK    	R126 K264 ; R126 := "/Lotus/Language/CraftingComponents/DecayRate_Timer"
	1722	[2142]	OP_LOADBOOL	R127 0 0 ; R127 := false
	1723	[2142]	NEWTABLE 	R128 0 1 ; R128 := {}
	1724	[2142]	GETUPVAL 	R129 U6 ; R129 := U6
	1725	[2142]	GETTABLE 	R129 R129 K138 ; R129 := R129[0x608b28e2]
	1726	[2142]	MOVE     	R130 R123 ; R130 := R123
	1727	[2142]	CALL     	R129 2 2 ; R129 := R129(R130)
	1728	[2142]	SETTABLE 	R128 K140 R129 ; R128["TIME"] := R129
	1729	[2142]	CALL     	R124 5 2 ; R124 := R124(R125,R126,R127,R128)
	1730	[2144]	GETUPVAL 	R125 U4 ; R125 := U4
	1731	[2144]	GETGLOBAL	R126 K258 ; R126 := LABEL_TYPE_TIMER
	1732	[2144]	MOVE     	R127 R124 ; R127 := R124
	1733	[2144]	CALL     	R125 3 2 ; R125 := R125(R126,R127)
	1734	[2144]	MOVE     	R5 R125 ; R5 := R125
	1735	[2145]	OP_LOADBOOL	R125 1 0 ; R125 := true
	1736	[2145]	SETTABLE 	R5 K36 R125 ; R5["HideInGrid"] := R125
	1737	[2146]	GETGLOBAL	R125 K5 ; R125 := 0x33bdd652
	1738	[2146]	GETTABLE 	R125 R125 K6 ; R125 := R125[0x23d5322f]
	1739	[2146]	MOVE     	R126 R6 ; R126 := R6
	1740	[2146]	MOVE     	R127 R5 ; R127 := R5
	1741	[2146]	CALL     	R125 3 1 ; R125(R126,R127)
	1742	[2150]	GETGLOBAL	R125 K0 ; R125 := 0x7b998233
	1743	[2150]	GETTABLE 	R126 R2 K8 ; R126 := R2["ResultStoreItem"]
	1744	[2150]	CALL     	R125 2 2 ; R125 := R125(R126)
	1745	[2150]	TEST     	R125 1 ; if R125 then PC := 1872
	1746	[2150]	JMP      	1872 ; PC := 1872
	1747	[2150]	GETGLOBAL	R125 K0 ; R125 := 0x7b998233
	1748	[2150]	MOVE     	R126 R13 ; R126 := R13
	1749	[2150]	CALL     	R125 2 2 ; R125 := R125(R126)
	1750	[2150]	TEST     	R125 1 ; if R125 then PC := 1872
	1751	[2150]	JMP      	1872 ; PC := 1872
	1752	[2150]	GETGLOBAL	R125 K0 ; R125 := 0x7b998233
	1753	[2150]	GETGLOBAL	R126 K12 ; R126 := 0x25d99d89
	1754	[2150]	CALL     	R125 2 2 ; R125 := R125(R126)
	1755	[2150]	TEST     	R125 1 ; if R125 then PC := 1872
	1756	[2150]	JMP      	1872 ; PC := 1872
	1757	[2152]	LOADK    	R125 := 0.000000
	1758	[2153]	LOADK    	R126 K265 ; R126 := "PurchasedIsDictionary"
	1759	[2153]	GETTABLE 	R126 R1 R126 ; R126 := R1[R126]
	1760	[2153]	TEST     	R126 0 ; if not R126 then PC := 1773
	1761	[2153]	JMP      	1773 ; PC := 1773
	1762	[2154]	GETTABLE 	R126 R2 K8 ; R126 := R2["ResultStoreItem"]
	1763	[2154]	SELF     	R126 R126 K151 ; R127 := R126; R126 := R126[0x170c5cfa]
	1764	[2154]	CALL     	R126 2 2 ; R126 := R126(R127)
	1765	[2154]	GETTABLE 	R126 R13 R126 ; R126 := R13[R126]
	1766	[2155]	GETGLOBAL	R127 K0 ; R127 := 0x7b998233
	1767	[2155]	MOVE     	R128 R126 ; R128 := R126
	1768	[2155]	CALL     	R127 2 2 ; R127 := R127(R128)
	1769	[2155]	TEST     	R127 1 ; if R127 then PC := 1783
	1770	[2155]	JMP      	1783 ; PC := 1783
	1771	[2156]	GETTABLE 	R125 R126 K44 ; R125 := R126["Count"]
	1772	[2157]	JMP      	1783 ; PC := 1783
	1773	[2159]	GETUPVAL 	R127 U6 ; R127 := U6
	1774	[2159]	GETTABLE 	R127 R127 K179 ; R127 := R127[0x8a36a81b]
	1775	[2159]	GETGLOBAL	R128 K12 ; R128 := 0x25d99d89
	1776	[2159]	GETGLOBAL	R129 K12 ; R129 := 0x25d99d89
	1777	[2159]	SELF     	R129 R129 K13 ; R130 := R129; R129 := R129[0x25a6e75e]
	1778	[2159]	CALL     	R129 2 2 ; R129 := R129(R130)
	1779	[2159]	GETTABLE 	R130 R2 K8 ; R130 := R2["ResultStoreItem"]
	1780	[2159]	MOVE     	R131 R13 ; R131 := R13
	1781	[2159]	CALL     	R127 5 2 ; R127 := R127(R128,R129,R130,R131)
	1782	[2159]	MOVE     	R125 R127 ; R125 := R127
	1783	[2163]	LOADK    	R127 := 0.000000
	1784	[2163]	LT       	0 R127 R125 ; if R127 >= R125 then PC := 1872
	1785	[2163]	JMP      	1872 ; PC := 1872
	1786	[2163]	GETTABLE 	R127 R2 K24 ; R127 := R2["Category"]
	1787	[2163]	LOADNIL  	R128 R128 ; R128 := nil
	1788	[2163]	EQ       	1 R127 R128 ; if R127 == R128 then PC := 1798
	1789	[2163]	JMP      	1798 ; PC := 1798
	1790	[2163]	GETTABLE 	R127 R2 K24 ; R127 := R2["Category"]
	1791	[2163]	LOADK    	R128 := 43.000000
	1792	[2163]	EQ       	1 R127 R128 ; if R127 == R128 then PC := 1872
	1793	[2163]	JMP      	1872 ; PC := 1872
	1794	[2163]	GETTABLE 	R127 R2 K24 ; R127 := R2["Category"]
	1795	[2163]	LOADK    	R128 := 46.000000
	1796	[2163]	EQ       	1 R127 R128 ; if R127 == R128 then PC := 1872
	1797	[2163]	JMP      	1872 ; PC := 1872
	1798	[2164]	LOADK    	R127 K49 ; R127 := ""
	1799	[2165]	LOADK    	R128 := 1.000000
	1800	[2165]	EQ       	0 R125 R128 ; if R125 ~= R128 then PC := 1808
	1801	[2165]	JMP      	1808 ; PC := 1808
	1802	[2166]	SELF     	R128 R0 K22 ; R129 := R0; R128 := R0[0x42b04007]
	1803	[2166]	LOADK    	R130 K266 ; R130 := "/Lotus/Language/CraftingComponents/CraftedSingular"
	1804	[2166]	OP_LOADBOOL	R131 0 0 ; R131 := false
	1805	[2166]	CALL     	R128 4 2 ; R128 := R128(R129,R130,R131)
	1806	[2166]	MOVE     	R127 R128 ; R127 := R128
	1807	[2166]	JMP      	1820 ; PC := 1820
	1808	[2168]	SELF     	R128 R0 K22 ; R129 := R0; R128 := R0[0x42b04007]
	1809	[2168]	LOADK    	R130 K267 ; R130 := "/Lotus/Language/CraftingComponents/CraftedPlural"
	1810	[2168]	OP_LOADBOOL	R131 0 0 ; R131 := false
	1811	[2168]	NEWTABLE 	R132 0 1 ; R132 := {}
	1812	[2168]	LOADK    	R133 K268 ; R133 := "COUNT"
	1813	[2168]	GETUPVAL 	R134 U3 ; R134 := U3
	1814	[2168]	GETTABLE 	R134 R134 K33 ; R134 := R134[0x1142c7a8]
	1815	[2168]	MOVE     	R135 R125 ; R135 := R125
	1816	[2168]	CALL     	R134 2 2 ; R134 := R134(R135)
	1817	[2168]	SETTABLE 	R132 R133 R134 ; R132[R133] := R134
	1818	[2168]	CALL     	R128 5 2 ; R128 := R128(R129,R130,R131,R132)
	1819	[2168]	MOVE     	R127 R128 ; R127 := R128
	1820	[2171]	GETTABLE 	R128 R2 K24 ; R128 := R2["Category"]
	1821	[2171]	LOADK    	R129 := 6.000000
	1822	[2171]	EQ       	0 R128 R129 ; if R128 ~= R129 then PC := 1862
	1823	[2171]	JMP      	1862 ; PC := 1862
	1824	[2173]	GETTABLE 	R128 R3 K170 ; R128 := R3["ShowCheckmark"]
	1825	[2173]	TEST     	R128 1 ; if R128 then PC := 1862
	1826	[2173]	JMP      	1862 ; PC := 1862
	1827	[2173]	GETTABLE 	R128 R3 K162 ; R128 := R3["HideOwned"]
	1828	[2173]	TEST     	R128 1 ; if R128 then PC := 1862
	1829	[2173]	JMP      	1862 ; PC := 1862
	1830	[2173]	GETGLOBAL	R128 K0 ; R128 := 0x7b998233
	1831	[2173]	GETTABLE 	R129 R2 K44 ; R129 := R2["Count"]
	1832	[2173]	CALL     	R128 2 2 ; R128 := R128(R129)
	1833	[2173]	TEST     	R128 1 ; if R128 then PC := 1849
	1834	[2173]	JMP      	1849 ; PC := 1849
	1835	[2173]	GETTABLE 	R128 R2 K44 ; R128 := R2["Count"]
	1836	[2173]	GETUPVAL 	R129 U3 ; R129 := U3
	1837	[2173]	GETTABLE 	R129 R129 K37 ; R129 := R129[0x06d055f9]
	1838	[2173]	GETTABLE 	R130 R3 K163 ; R130 := R3["HideCountThreshold"]
	1839	[2173]	LOADNIL  	R131 R131 ; R131 := nil
	1840	[2173]	EQ       	0 R130 R131 ; if R130 ~= R131 then PC := 1843
	1841	[2173]	JMP      	1843 ; PC := 1843
	1842	[2173]	OP_LOADBOOL	R130 0 1 ; R130 := false; PC := 1843
	1843	[2173]	OP_LOADBOOL	R130 1 0 ; R130 := true
	1844	[2173]	GETTABLE 	R131 R3 K163 ; R131 := R3["HideCountThreshold"]
	1845	[2173]	LOADK    	R132 := 1.000000
	1846	[2173]	CALL     	R129 4 2 ; R129 := R129(R130,R131,R132)
	1847	[2173]	LE       	0 R128 R129 ; if R128 > R129 then PC := 1862
	1848	[2173]	JMP      	1862 ; PC := 1862
	1849	[2174]	GETGLOBAL	R128 K5 ; R128 := 0x33bdd652
	1850	[2174]	GETTABLE 	R128 R128 K6 ; R128 := R128[0x23d5322f]
	1851	[2174]	MOVE     	R129 R6 ; R129 := R6
	1852	[2174]	GETUPVAL 	R130 U4 ; R130 := U4
	1853	[2174]	GETGLOBAL	R131 K168 ; R131 := LABEL_TYPE_CHECKMARK
	1854	[2174]	SELF     	R132 R0 K22 ; R133 := R0; R132 := R0[0x42b04007]
	1855	[2174]	LOADK    	R134 K165 ; R134 := "/Lotus/Language/Menu/Crafting_Owned_Brief"
	1856	[2174]	OP_LOADBOOL	R135 1 0 ; R135 := true
	1857	[2174]	NEWTABLE 	R136 0 1 ; R136 := {}
	1858	[2174]	SETTABLE 	R136 K166 K49 ; R136["HOW_MANY"] := ""
	1859	[2174]	CALL     	R132 5 0 ; R132,... := R132(R133,R134,R135,R136)
	1860	[2174]	CALL     	R130 0 0 ; R130,... := R130(R131,...)
	1861	[2174]	CALL     	R128 0 1 ; R128(R129,...)
	1862	[2178]	GETUPVAL 	R128 U4 ; R128 := U4
	1863	[2178]	GETGLOBAL	R129 K269 ; R129 := LABEL_TYPE_CRAFTED
	1864	[2178]	MOVE     	R130 R127 ; R130 := R127
	1865	[2178]	CALL     	R128 3 2 ; R128 := R128(R129,R130)
	1866	[2178]	MOVE     	R5 R128 ; R5 := R128
	1867	[2179]	GETGLOBAL	R128 K5 ; R128 := 0x33bdd652
	1868	[2179]	GETTABLE 	R128 R128 K6 ; R128 := R128[0x23d5322f]
	1869	[2179]	MOVE     	R129 R6 ; R129 := R6
	1870	[2179]	MOVE     	R130 R5 ; R130 := R5
	1871	[2179]	CALL     	R128 3 1 ; R128(R129,R130)
	1872	[2183]	GETGLOBAL	R128 K0 ; R128 := 0x7b998233
	1873	[2183]	LOADK    	R129 K270 ; R129 := "Arcane"
	1874	[2183]	GETTABLE 	R129 R2 R129 ; R129 := R2[R129]
	1875	[2183]	CALL     	R128 2 2 ; R128 := R128(R129)
	1876	[2183]	TEST     	R128 1 ; if R128 then PC := 1917
	1877	[2183]	JMP      	1917 ; PC := 1917
	1878	[2184]	LOADK    	R128 K271 ; R128 := "CanReproc"
	1879	[2184]	GETTABLE 	R128 R2 R128 ; R128 := R2[R128]
	1880	[2184]	LOADNIL  	R129 R129 ; R129 := nil
	1881	[2184]	EQ       	0 R128 R129 ; if R128 ~= R129 then PC := 1900
	1882	[2184]	JMP      	1900 ; PC := 1900
	1883	[2186]	LOADK    	R128 K271 ; R128 := "CanReproc"
	1884	[2186]	LOADK    	R129 K270 ; R129 := "Arcane"
	1885	[2186]	GETTABLE 	R129 R2 R129 ; R129 := R2[R129]
	1886	[2186]	GETTABLE 	R129 R129 K30 ; R129 := R129["mInstance"]
	1887	[2186]	LOADK    	R131 K272 ; R131 := true
	1888	[2186]	SELF     	R129 R129 R131 ; R130 := R129; R129 := R129[R131]
	1889	[2186]	CALL     	R129 2 2 ; R129 := R129(R130)
	1890	[2186]	TEST     	R129 0 ; if not R129 then PC := 1899
	1891	[2186]	JMP      	1899 ; PC := 1899
	1892	[2186]	LOADK    	R129 K270 ; R129 := "Arcane"
	1893	[2186]	GETTABLE 	R129 R2 R129 ; R129 := R2[R129]
	1894	[2186]	GETTABLE 	R129 R129 K30 ; R129 := R129["mInstance"]
	1895	[2186]	LOADK    	R131 K273 ; R131 := true
	1896	[2186]	SELF     	R129 R129 R131 ; R130 := R129; R129 := R129[R131]
	1897	[2186]	CALL     	R129 2 2 ; R129 := R129(R130)
	1898	[2186]	NOT      	R129 R129 ; R129 := not R129
	1899	[2186]	SETTABLE 	R2 R128 R129 ; R2[R128] := R129
	1900	[2188]	LOADK    	R128 K271 ; R128 := "CanReproc"
	1901	[2188]	GETTABLE 	R128 R2 R128 ; R128 := R2[R128]
	1902	[2188]	TEST     	R128 0 ; if not R128 then PC := 1917
	1903	[2188]	JMP      	1917 ; PC := 1917
	1904	[2189]	GETUPVAL 	R128 U4 ; R128 := U4
	1905	[2189]	GETGLOBAL	R129 K274 ; R129 := LABEL_TYPE_ARCANE_REPROC
	1906	[2189]	SELF     	R130 R0 K22 ; R131 := R0; R130 := R0[0x42b04007]
	1907	[2189]	LOADK    	R132 K275 ; R132 := "/Lotus/Language/Menu/ArcaneManager_CanReproc"
	1908	[2189]	OP_LOADBOOL	R133 0 0 ; R133 := false
	1909	[2189]	CALL     	R130 4 0 ; R130,... := R130(R131,R132,R133)
	1910	[2189]	CALL     	R128 0 2 ; R128 := R128(R129,...)
	1911	[2189]	MOVE     	R5 R128 ; R5 := R128
	1912	[2190]	GETGLOBAL	R128 K5 ; R128 := 0x33bdd652
	1913	[2190]	GETTABLE 	R128 R128 K6 ; R128 := R128[0x23d5322f]
	1914	[2190]	MOVE     	R129 R6 ; R129 := R6
	1915	[2190]	MOVE     	R130 R5 ; R130 := R5
	1916	[2190]	CALL     	R128 3 1 ; R128(R129,R130)
	1917	[2193]	LOADK    	R128 K276 ; R128 := "ArcaneRank"
	1918	[2193]	GETTABLE 	R128 R2 R128 ; R128 := R2[R128]
	1919	[2193]	LOADNIL  	R129 R129 ; R129 := nil
	1920	[2193]	EQ       	1 R128 R129 ; if R128 == R129 then PC := 1934
	1921	[2193]	JMP      	1934 ; PC := 1934
	1922	[2194]	GETUPVAL 	R128 U7 ; R128 := U7
	1923	[2194]	GETTABLE 	R129 R2 K242 ; R129 := R2["Type"]
	1924	[2194]	CALL     	R128 2 2 ; R128 := R128(R129)
	1925	[2194]	MOVE     	R5 R128 ; R5 := R128
	1926	[2195]	LOADNIL  	R128 R128 ; R128 := nil
	1927	[2195]	EQ       	1 R5 R128 ; if R5 == R128 then PC := 1934
	1928	[2195]	JMP      	1934 ; PC := 1934
	1929	[2196]	GETGLOBAL	R128 K5 ; R128 := 0x33bdd652
	1930	[2196]	GETTABLE 	R128 R128 K6 ; R128 := R128[0x23d5322f]
	1931	[2196]	MOVE     	R129 R6 ; R129 := R6
	1932	[2196]	MOVE     	R130 R5 ; R130 := R5
	1933	[2196]	CALL     	R128 3 1 ; R128(R129,R130)
	1934	[2200]	GETGLOBAL	R128 K0 ; R128 := 0x7b998233
	1935	[2200]	GETTABLE 	R129 R2 K39 ; R129 := R2["StoreItem"]
	1936	[2200]	CALL     	R128 2 2 ; R128 := R128(R129)
	1937	[2200]	TEST     	R128 1 ; if R128 then PC := 2400
	1938	[2200]	JMP      	2400 ; PC := 2400
	1939	[2201]	LOADK    	R128 K277 ; R128 := "HideMastery"
	1940	[2201]	GETTABLE 	R128 R3 R128 ; R128 := R3[R128]
	1941	[2201]	TEST     	R128 1 ; if R128 then PC := 1973
	1942	[2201]	JMP      	1973 ; PC := 1973
	1943	[2202]	GETUPVAL 	R128 U6 ; R128 := U6
	1944	[2202]	LOADK    	R129 K278 ; R129 := true
	1945	[2202]	GETTABLE 	R128 R128 R129 ; R128 := R128[R129]
	1946	[2202]	GETTABLE 	R129 R2 K39 ; R129 := R2["StoreItem"]
	1947	[2202]	CALL     	R128 2 3 ; R128,R129 := R128(R129)
	1948	[2203]	TEST     	R128 1 ; if R128 then PC := 1956
	1949	[2203]	JMP      	1956 ; PC := 1956
	1950	[2203]	LOADNIL  	R130 R130 ; R130 := nil
	1951	[2203]	EQ       	1 R129 R130 ; if R129 == R130 then PC := 1973
	1952	[2203]	JMP      	1973 ; PC := 1973
	1953	[2203]	LOADK    	R130 := 0.000000
	1954	[2203]	LT       	0 R130 R129 ; if R130 >= R129 then PC := 1973
	1955	[2203]	JMP      	1973 ; PC := 1973
	1956	[2204]	GETUPVAL 	R130 U4 ; R130 := U4
	1957	[2204]	GETGLOBAL	R131 K279 ; R131 := LABEL_TYPE_REQUIRED_MASTERY
	1958	[2204]	LOADK    	R132 K49 ; R132 := ""
	1959	[2204]	CALL     	R130 3 2 ; R130 := R130(R131,R132)
	1960	[2204]	MOVE     	R5 R130 ; R5 := R130
	1961	[2205]	LOADK    	R130 K280 ; R130 := "/Lotus/Language/Menu/SortBy_MasteryRank"
	1962	[2205]	SETTABLE 	R5 K186 R130 ; R5["PopUpLabel"] := R130
	1963	[2206]	GETUPVAL 	R130 U3 ; R130 := U3
	1964	[2206]	GETTABLE 	R130 R130 K33 ; R130 := R130[0x1142c7a8]
	1965	[2206]	MOVE     	R131 R129 ; R131 := R129
	1966	[2206]	CALL     	R130 2 2 ; R130 := R130(R131)
	1967	[2206]	SETTABLE 	R5 K236 R130 ; R5["IconText"] := R130
	1968	[2207]	GETGLOBAL	R130 K5 ; R130 := 0x33bdd652
	1969	[2207]	GETTABLE 	R130 R130 K6 ; R130 := R130[0x23d5322f]
	1970	[2207]	MOVE     	R131 R6 ; R131 := R6
	1971	[2207]	MOVE     	R132 R5 ; R132 := R5
	1972	[2207]	CALL     	R130 3 1 ; R130(R131,R132)
	1973	[2210]	GETTABLE 	R130 R2 K39 ; R130 := R2["StoreItem"]
	1974	[2210]	LOADK    	R132 K281 ; R132 := true
	1975	[2210]	SELF     	R130 R130 R132 ; R131 := R130; R130 := R130[R132]
	1976	[2210]	CALL     	R130 2 2 ; R130 := R130(R131)
	1977	[2210]	TEST     	R130 0 ; if not R130 then PC := 2023
	1978	[2210]	JMP      	2023 ; PC := 2023
	1979	[2211]	OP_LOADBOOL	R130 1 0 ; R130 := true
	1980	[2212]	GETTABLE 	R131 R2 K39 ; R131 := R2["StoreItem"]
	1981	[2212]	SELF     	R131 R131 K29 ; R132 := R131; R131 := R131[0xf2deaf69]
	1982	[2212]	GETGLOBAL	R133 K282 ; R133 := gRecipeStoreItemType
	1983	[2212]	CALL     	R131 3 2 ; R131 := R131(R132,R133)
	1984	[2212]	TEST     	R131 1 ; if R131 then PC := 2008
	1985	[2212]	JMP      	2008 ; PC := 2008
	1986	[2212]	GETTABLE 	R131 R2 K24 ; R131 := R2["Category"]
	1987	[2212]	LOADK    	R132 := 1.000000
	1988	[2212]	EQ       	1 R131 R132 ; if R131 == R132 then PC := 1998
	1989	[2212]	JMP      	1998 ; PC := 1998
	1990	[2212]	GETTABLE 	R131 R2 K24 ; R131 := R2["Category"]
	1991	[2212]	LOADK    	R132 := 0.000000
	1992	[2212]	EQ       	1 R131 R132 ; if R131 == R132 then PC := 1998
	1993	[2212]	JMP      	1998 ; PC := 1998
	1994	[2212]	GETTABLE 	R131 R2 K24 ; R131 := R2["Category"]
	1995	[2212]	LOADK    	R132 := 5.000000
	1996	[2212]	EQ       	0 R131 R132 ; if R131 ~= R132 then PC := 2008
	1997	[2212]	JMP      	2008 ; PC := 2008
	1998	[2212]	GETGLOBAL	R131 K0 ; R131 := 0x7b998233
	1999	[2212]	GETTABLE 	R132 R2 K27 ; R132 := R2["RawItem"]
	2000	[2212]	CALL     	R131 2 2 ; R131 := R131(R132)
	2001	[2212]	TEST     	R131 1 ; if R131 then PC := 2008
	2002	[2212]	JMP      	2008 ; PC := 2008
	2003	[2213]	GETTABLE 	R131 R2 K27 ; R131 := R2["RawItem"]
	2004	[2213]	LOADK    	R133 K283 ; R133 := true
	2005	[2213]	SELF     	R131 R131 R133 ; R132 := R131; R131 := R131[R133]
	2006	[2213]	CALL     	R131 2 2 ; R131 := R131(R132)
	2007	[2213]	MOVE     	R130 R131 ; R130 := R131
	2008	[2216]	TEST     	R130 0 ; if not R130 then PC := 2023
	2009	[2216]	JMP      	2023 ; PC := 2023
	2010	[2217]	GETUPVAL 	R131 U4 ; R131 := U4
	2011	[2217]	GETGLOBAL	R132 K284 ; R132 := LABEL_TYPE_TRADEABLE
	2012	[2217]	SELF     	R133 R0 K22 ; R134 := R0; R133 := R0[0x42b04007]
	2013	[2217]	LOADK    	R135 K285 ; R135 := "/Lotus/Language/Dojo/Trade_Tradeable"
	2014	[2217]	OP_LOADBOOL	R136 0 0 ; R136 := false
	2015	[2217]	CALL     	R133 4 0 ; R133,... := R133(R134,R135,R136)
	2016	[2217]	CALL     	R131 0 2 ; R131 := R131(R132,...)
	2017	[2217]	MOVE     	R5 R131 ; R5 := R131
	2018	[2218]	GETGLOBAL	R131 K5 ; R131 := 0x33bdd652
	2019	[2218]	GETTABLE 	R131 R131 K6 ; R131 := R131[0x23d5322f]
	2020	[2218]	MOVE     	R132 R6 ; R132 := R6
	2021	[2218]	MOVE     	R133 R5 ; R133 := R5
	2022	[2218]	CALL     	R131 3 1 ; R131(R132,R133)
	2023	[2222]	GETTABLE 	R131 R2 K39 ; R131 := R2["StoreItem"]
	2024	[2222]	LOADK    	R133 K286 ; R133 := true
	2025	[2222]	SELF     	R131 R131 R133 ; R132 := R131; R131 := R131[R133]
	2026	[2222]	CALL     	R131 2 2 ; R131 := R131(R132)
	2027	[2222]	TEST     	R131 0 ; if not R131 then PC := 2058
	2028	[2222]	JMP      	2058 ; PC := 2058
	2029	[2223]	GETUPVAL 	R131 U4 ; R131 := U4
	2030	[2223]	GETGLOBAL	R132 K287 ; R132 := LABEL_TYPE_UGC
	2031	[2223]	LOADK    	R133 K49 ; R133 := ""
	2032	[2223]	CALL     	R131 3 2 ; R131 := R131(R132,R133)
	2033	[2223]	MOVE     	R5 R131 ; R5 := R131
	2034	[2224]	TEST     	R7 1 ; if R7 then PC := 2053
	2035	[2224]	JMP      	2053 ; PC := 2053
	2036	[2224]	GETGLOBAL	R131 K0 ; R131 := 0x7b998233
	2037	[2224]	MOVE     	R132 R1 ; R132 := R1
	2038	[2224]	CALL     	R131 2 2 ; R131 := R131(R132)
	2039	[2224]	TEST     	R131 1 ; if R131 then PC := 2053
	2040	[2224]	JMP      	2053 ; PC := 2053
	2041	[2224]	LOADK    	R131 K288 ; R131 := "ElementWidth"
	2042	[2224]	GETTABLE 	R131 R1 R131 ; R131 := R1[R131]
	2043	[2224]	LOADNIL  	R132 R132 ; R132 := nil
	2044	[2224]	EQ       	1 R131 R132 ; if R131 == R132 then PC := 2053
	2045	[2224]	JMP      	2053 ; PC := 2053
	2046	[2225]	LOADK    	R131 K289 ; R131 := "ClipOffset"
	2047	[2225]	LOADK    	R132 K288 ; R132 := "ElementWidth"
	2048	[2225]	GETTABLE 	R132 R1 R132 ; R132 := R1[R132]
	2049	[2225]	GETTABLE 	R133 R5 K80 ; R133 := R5["IconDims"]
	2050	[2225]	GETTABLE 	R133 R133 K81 ; R133 := R133["W"]
	2051	[2225]	SUB      	R132 R132 R133 ; R132 := R132 - R133
	2052	[2225]	SETTABLE 	R5 R131 R132 ; R5[R131] := R132
	2053	[2227]	GETGLOBAL	R131 K5 ; R131 := 0x33bdd652
	2054	[2227]	GETTABLE 	R131 R131 K6 ; R131 := R131[0x23d5322f]
	2055	[2227]	MOVE     	R132 R6 ; R132 := R6
	2056	[2227]	MOVE     	R133 R5 ; R133 := R5
	2057	[2227]	CALL     	R131 3 1 ; R131(R132,R133)
	2058	[2230]	GETTABLE 	R131 R2 K24 ; R131 := R2["Category"]
	2059	[2230]	LOADK    	R132 := 13.000000
	2060	[2230]	EQ       	1 R131 R132 ; if R131 == R132 then PC := 2072
	2061	[2230]	JMP      	2072 ; PC := 2072
	2062	[2231]	GETTABLE 	R131 R2 K24 ; R131 := R2["Category"]
	2063	[2231]	LOADK    	R132 := 2.000000
	2064	[2231]	EQ       	0 R131 R132 ; if R131 ~= R132 then PC := 2091
	2065	[2231]	JMP      	2091 ; PC := 2091
	2066	[2231]	GETTABLE 	R131 R2 K39 ; R131 := R2["StoreItem"]
	2067	[2231]	SELF     	R131 R131 K103 ; R132 := R131; R131 := R131[0xfe9eb1a5]
	2068	[2231]	CALL     	R131 2 2 ; R131 := R131(R132)
	2069	[2231]	LOADK    	R132 := 13.000000
	2070	[2231]	EQ       	0 R131 R132 ; if R131 ~= R132 then PC := 2091
	2071	[2231]	JMP      	2091 ; PC := 2091
	2072	[2232]	GETTABLE 	R131 R2 K39 ; R131 := R2["StoreItem"]
	2073	[2232]	LOADK    	R133 K290 ; R133 := true
	2074	[2232]	SELF     	R131 R131 R133 ; R132 := R131; R131 := R131[R133]
	2075	[2232]	CALL     	R131 2 2 ; R131 := R131(R132)
	2076	[2232]	TEST     	R131 1 ; if R131 then PC := 2091
	2077	[2232]	JMP      	2091 ; PC := 2091
	2078	[2233]	GETUPVAL 	R131 U4 ; R131 := U4
	2079	[2233]	GETGLOBAL	R132 K291 ; R132 := LABEL_TYPE_REUSABLE_BLUEPRINT
	2080	[2233]	SELF     	R133 R0 K22 ; R134 := R0; R133 := R0[0x42b04007]
	2081	[2233]	LOADK    	R135 K292 ; R135 := "/Lotus/Language/Menu/Blueprint_UnlimitedCharges"
	2082	[2233]	OP_LOADBOOL	R136 0 0 ; R136 := false
	2083	[2233]	CALL     	R133 4 0 ; R133,... := R133(R134,R135,R136)
	2084	[2233]	CALL     	R131 0 2 ; R131 := R131(R132,...)
	2085	[2233]	MOVE     	R5 R131 ; R5 := R131
	2086	[2234]	GETGLOBAL	R131 K5 ; R131 := 0x33bdd652
	2087	[2234]	GETTABLE 	R131 R131 K6 ; R131 := R131[0x23d5322f]
	2088	[2234]	MOVE     	R132 R6 ; R132 := R6
	2089	[2234]	MOVE     	R133 R5 ; R133 := R5
	2090	[2234]	CALL     	R131 3 1 ; R131(R132,R133)
	2091	[2237]	GETGLOBAL	R131 K0 ; R131 := 0x7b998233
	2092	[2237]	MOVE     	R132 R13 ; R132 := R13
	2093	[2237]	CALL     	R131 2 2 ; R131 := R131(R132)
	2094	[2237]	TEST     	R131 1 ; if R131 then PC := 2162
	2095	[2237]	JMP      	2162 ; PC := 2162
	2096	[2238]	GETTABLE 	R131 R2 K39 ; R131 := R2["StoreItem"]
	2097	[2238]	LOADK    	R133 K293 ; R133 := true
	2098	[2238]	SELF     	R131 R131 R133 ; R132 := R131; R131 := R131[R133]
	2099	[2238]	CALL     	R131 2 2 ; R131 := R131(R132)
	2100	[2239]	GETGLOBAL	R132 K0 ; R132 := 0x7b998233
	2101	[2239]	MOVE     	R133 R131 ; R133 := R131
	2102	[2239]	CALL     	R132 2 2 ; R132 := R132(R133)
	2103	[2239]	TEST     	R132 1 ; if R132 then PC := 2162
	2104	[2239]	JMP      	2162 ; PC := 2162
	2105	[2241]	LOADK    	R132 := 0.000000
	2106	[2242]	LOADK    	R133 K265 ; R133 := "PurchasedIsDictionary"
	2107	[2242]	GETTABLE 	R133 R1 R133 ; R133 := R1[R133]
	2108	[2242]	TEST     	R133 0 ; if not R133 then PC := 2120
	2109	[2242]	JMP      	2120 ; PC := 2120
	2110	[2243]	SELF     	R133 R131 K150 ; R134 := R131; R133 := R131[0xed4e0128]
	2111	[2243]	CALL     	R133 2 2 ; R133 := R133(R134)
	2112	[2243]	GETTABLE 	R133 R13 R133 ; R133 := R13[R133]
	2113	[2244]	GETGLOBAL	R134 K0 ; R134 := 0x7b998233
	2114	[2244]	MOVE     	R135 R133 ; R135 := R133
	2115	[2244]	CALL     	R134 2 2 ; R134 := R134(R135)
	2116	[2244]	TEST     	R134 1 ; if R134 then PC := 2127
	2117	[2244]	JMP      	2127 ; PC := 2127
	2118	[2245]	GETTABLE 	R132 R133 K44 ; R132 := R133["Count"]
	2119	[2246]	JMP      	2127 ; PC := 2127
	2120	[2248]	GETUPVAL 	R134 U6 ; R134 := U6
	2121	[2248]	LOADK    	R135 K294 ; R135 := true
	2122	[2248]	GETTABLE 	R134 R134 R135 ; R134 := R134[R135]
	2123	[2248]	MOVE     	R135 R131 ; R135 := R131
	2124	[2248]	MOVE     	R136 R13 ; R136 := R13
	2125	[2248]	CALL     	R134 3 2 ; R134 := R134(R135,R136)
	2126	[2248]	MOVE     	R132 R134 ; R132 := R134
	2127	[2251]	LOADK    	R134 := 0.000000
	2128	[2251]	LT       	0 R134 R132 ; if R134 >= R132 then PC := 2162
	2129	[2251]	JMP      	2162 ; PC := 2162
	2130	[2252]	LOADK    	R134 K49 ; R134 := ""
	2131	[2253]	LOADK    	R135 := 1.000000
	2132	[2253]	EQ       	0 R132 R135 ; if R132 ~= R135 then PC := 2140
	2133	[2253]	JMP      	2140 ; PC := 2140
	2134	[2254]	SELF     	R135 R0 K22 ; R136 := R0; R135 := R0[0x42b04007]
	2135	[2254]	LOADK    	R137 K295 ; R137 := "/Lotus/Language/CraftingComponents/RecipeOwnedSingular"
	2136	[2254]	OP_LOADBOOL	R138 0 0 ; R138 := false
	2137	[2254]	CALL     	R135 4 2 ; R135 := R135(R136,R137,R138)
	2138	[2254]	MOVE     	R134 R135 ; R134 := R135
	2139	[2254]	JMP      	2152 ; PC := 2152
	2140	[2256]	SELF     	R135 R0 K22 ; R136 := R0; R135 := R0[0x42b04007]
	2141	[2256]	LOADK    	R137 K296 ; R137 := "/Lotus/Language/CraftingComponents/RecipeOwnedPlural"
	2142	[2256]	OP_LOADBOOL	R138 0 0 ; R138 := false
	2143	[2256]	NEWTABLE 	R139 0 1 ; R139 := {}
	2144	[2256]	LOADK    	R140 K268 ; R140 := "COUNT"
	2145	[2256]	GETUPVAL 	R141 U3 ; R141 := U3
	2146	[2256]	GETTABLE 	R141 R141 K33 ; R141 := R141[0x1142c7a8]
	2147	[2256]	MOVE     	R142 R132 ; R142 := R132
	2148	[2256]	CALL     	R141 2 2 ; R141 := R141(R142)
	2149	[2256]	SETTABLE 	R139 R140 R141 ; R139[R140] := R141
	2150	[2256]	CALL     	R135 5 2 ; R135 := R135(R136,R137,R138,R139)
	2151	[2256]	MOVE     	R134 R135 ; R134 := R135
	2152	[2258]	GETUPVAL 	R135 U4 ; R135 := U4
	2153	[2258]	GETGLOBAL	R136 K297 ; R136 := LABEL_TYPE_RECIPES
	2154	[2258]	MOVE     	R137 R134 ; R137 := R134
	2155	[2258]	CALL     	R135 3 2 ; R135 := R135(R136,R137)
	2156	[2258]	MOVE     	R5 R135 ; R5 := R135
	2157	[2259]	GETGLOBAL	R135 K5 ; R135 := 0x33bdd652
	2158	[2259]	GETTABLE 	R135 R135 K6 ; R135 := R135[0x23d5322f]
	2159	[2259]	MOVE     	R136 R6 ; R136 := R6
	2160	[2259]	MOVE     	R137 R5 ; R137 := R5
	2161	[2259]	CALL     	R135 3 1 ; R135(R136,R137)
	2162	[2264]	OP_LOADBOOL	R135 0 0 ; R135 := false
	2163	[2265]	GETTABLE 	R136 R2 K39 ; R136 := R2["StoreItem"]
	2164	[2265]	SELF     	R136 R136 K103 ; R137 := R136; R136 := R136[0xfe9eb1a5]
	2165	[2265]	CALL     	R136 2 2 ; R136 := R136(R137)
	2166	[2266]	GETGLOBAL	R137 K147 ; R137 := 0xc8802016
	2167	[2266]	GETUPVAL 	R138 U8 ; R138 := U8
	2168	[2266]	CALL     	R137 2 4 ; R137,R138,R139 := R137(R138)
	2169	[2266]	JMP      	2265 ; PC := 2265
	2170	[2267]	EQ       	0 R136 R141 ; if R136 ~= R141 then PC := 2265
	2171	[2267]	JMP      	2265 ; PC := 2265
	2172	[2268]	GETGLOBAL	R142 K0 ; R142 := 0x7b998233
	2173	[2268]	GETTABLE 	R143 R2 K27 ; R143 := R2["RawItem"]
	2174	[2268]	CALL     	R142 2 2 ; R142 := R142(R143)
	2175	[2268]	TEST     	R142 1 ; if R142 then PC := 2263
	2176	[2268]	JMP      	2263 ; PC := 2263
	2177	[2268]	GETTABLE 	R142 R2 K27 ; R142 := R2["RawItem"]
	2178	[2268]	LOADK    	R143 K298 ; R143 := "Item"
	2179	[2268]	GETTABLE 	R142 R142 R143 ; R142 := R142[R143]
	2180	[2268]	LOADNIL  	R143 R143 ; R143 := nil
	2181	[2268]	EQ       	0 R142 R143 ; if R142 ~= R143 then PC := 2263
	2182	[2268]	JMP      	2263 ; PC := 2263
	2183	[2269]	GETTABLE 	R142 R2 K27 ; R142 := R2["RawItem"]
	2184	[2269]	LOADK    	R144 K299 ; R144 := true
	2185	[2269]	SELF     	R142 R142 R144 ; R143 := R142; R142 := R142[R144]
	2186	[2269]	LOADK    	R144 := 0.000000
	2187	[2269]	CALL     	R142 3 2 ; R142 := R142(R143,R144)
	2188	[2269]	TEST     	R142 0 ; if not R142 then PC := 2203
	2189	[2269]	JMP      	2203 ; PC := 2203
	2190	[2270]	GETUPVAL 	R142 U4 ; R142 := U4
	2191	[2270]	GETGLOBAL	R143 K300 ; R143 := LABEL_TYPE_CATALYST
	2192	[2270]	SELF     	R144 R0 K22 ; R145 := R0; R144 := R0[0x42b04007]
	2193	[2270]	LOADK    	R146 K301 ; R146 := "/Lotus/Language/Items/OrokinCatalyst"
	2194	[2270]	OP_LOADBOOL	R147 0 0 ; R147 := false
	2195	[2270]	CALL     	R144 4 0 ; R144,... := R144(R145,R146,R147)
	2196	[2270]	CALL     	R142 0 2 ; R142 := R142(R143,...)
	2197	[2270]	MOVE     	R5 R142 ; R5 := R142
	2198	[2271]	GETGLOBAL	R142 K5 ; R142 := 0x33bdd652
	2199	[2271]	GETTABLE 	R142 R142 K6 ; R142 := R142[0x23d5322f]
	2200	[2271]	MOVE     	R143 R6 ; R143 := R6
	2201	[2271]	MOVE     	R144 R5 ; R144 := R5
	2202	[2271]	CALL     	R142 3 1 ; R142(R143,R144)
	2203	[2274]	GETTABLE 	R142 R2 K27 ; R142 := R2["RawItem"]
	2204	[2274]	LOADK    	R144 K299 ; R144 := true
	2205	[2274]	SELF     	R142 R142 R144 ; R143 := R142; R142 := R142[R144]
	2206	[2274]	LOADK    	R144 := 1.000000
	2207	[2274]	CALL     	R142 3 2 ; R142 := R142(R143,R144)
	2208	[2274]	TEST     	R142 0 ; if not R142 then PC := 2223
	2209	[2274]	JMP      	2223 ; PC := 2223
	2210	[2275]	GETUPVAL 	R142 U4 ; R142 := U4
	2211	[2275]	GETGLOBAL	R143 K302 ; R143 := LABEL_TYPE_WEAPON_EXILUS
	2212	[2275]	SELF     	R144 R0 K22 ; R145 := R0; R144 := R0[0x42b04007]
	2213	[2275]	LOADK    	R146 K303 ; R146 := "/Lotus/Language/Items/WeaponUtilityUnlocker"
	2214	[2275]	OP_LOADBOOL	R147 0 0 ; R147 := false
	2215	[2275]	CALL     	R144 4 0 ; R144,... := R144(R145,R146,R147)
	2216	[2275]	CALL     	R142 0 2 ; R142 := R142(R143,...)
	2217	[2275]	MOVE     	R5 R142 ; R5 := R142
	2218	[2276]	GETGLOBAL	R142 K5 ; R142 := 0x33bdd652
	2219	[2276]	GETTABLE 	R142 R142 K6 ; R142 := R142[0x23d5322f]
	2220	[2276]	MOVE     	R143 R6 ; R143 := R6
	2221	[2276]	MOVE     	R144 R5 ; R144 := R5
	2222	[2276]	CALL     	R142 3 1 ; R142(R143,R144)
	2223	[2279]	GETTABLE 	R142 R2 K27 ; R142 := R2["RawItem"]
	2224	[2279]	LOADK    	R144 K299 ; R144 := true
	2225	[2279]	SELF     	R142 R142 R144 ; R143 := R142; R142 := R142[R144]
	2226	[2279]	LOADK    	R144 := 5.000000
	2227	[2279]	CALL     	R142 3 2 ; R142 := R142(R143,R144)
	2228	[2279]	TEST     	R142 0 ; if not R142 then PC := 2263
	2229	[2279]	JMP      	2263 ; PC := 2263
	2230	[2280]	LOADK    	R142 := 1.000000
	2231	[2280]	EQ       	0 R136 R142 ; if R136 ~= R142 then PC := 2247
	2232	[2280]	JMP      	2247 ; PC := 2247
	2233	[2281]	GETUPVAL 	R142 U4 ; R142 := U4
	2234	[2281]	GETGLOBAL	R143 K304 ; R143 := LABEL_TYPE_PRIMARY_ADAPTER
	2235	[2281]	SELF     	R144 R0 K22 ; R145 := R0; R144 := R0[0x42b04007]
	2236	[2281]	LOADK    	R146 K305 ; R146 := "/Lotus/Language/Weapons/WeaponPrimaryArcaneUnlockerName"
	2237	[2281]	OP_LOADBOOL	R147 0 0 ; R147 := false
	2238	[2281]	CALL     	R144 4 0 ; R144,... := R144(R145,R146,R147)
	2239	[2281]	CALL     	R142 0 2 ; R142 := R142(R143,...)
	2240	[2281]	MOVE     	R5 R142 ; R5 := R142
	2241	[2282]	GETGLOBAL	R142 K5 ; R142 := 0x33bdd652
	2242	[2282]	GETTABLE 	R142 R142 K6 ; R142 := R142[0x23d5322f]
	2243	[2282]	MOVE     	R143 R6 ; R143 := R6
	2244	[2282]	MOVE     	R144 R5 ; R144 := R5
	2245	[2282]	CALL     	R142 3 1 ; R142(R143,R144)
	2246	[2282]	JMP      	2263 ; PC := 2263
	2247	[2283]	LOADK    	R142 := 0.000000
	2248	[2283]	EQ       	0 R136 R142 ; if R136 ~= R142 then PC := 2263
	2249	[2283]	JMP      	2263 ; PC := 2263
	2250	[2284]	GETUPVAL 	R142 U4 ; R142 := U4
	2251	[2284]	GETGLOBAL	R143 K306 ; R143 := LABEL_TYPE_SECONDARY_ADAPTER
	2252	[2284]	SELF     	R144 R0 K22 ; R145 := R0; R144 := R0[0x42b04007]
	2253	[2284]	LOADK    	R146 K307 ; R146 := "/Lotus/Language/Weapons/WeaponsecondaryArcaneUnlockerName"
	2254	[2284]	OP_LOADBOOL	R147 0 0 ; R147 := false
	2255	[2284]	CALL     	R144 4 0 ; R144,... := R144(R145,R146,R147)
	2256	[2284]	CALL     	R142 0 2 ; R142 := R142(R143,...)
	2257	[2284]	MOVE     	R5 R142 ; R5 := R142
	2258	[2285]	GETGLOBAL	R142 K5 ; R142 := 0x33bdd652
	2259	[2285]	GETTABLE 	R142 R142 K6 ; R142 := R142[0x23d5322f]
	2260	[2285]	MOVE     	R143 R6 ; R143 := R6
	2261	[2285]	MOVE     	R144 R5 ; R144 := R5
	2262	[2285]	CALL     	R142 3 1 ; R142(R143,R144)
	2263	[2289]	OP_LOADBOOL	R135 1 0 ; R135 := true
	2264	[2290]	JMP      	2267 ; PC := 2267
	2265	[2266]	TFORLOOP 	R137 2 ; R140,R141 := R137(R138,R139); if R140 ~= nil then begin PC = 2170; R139 := R140 end
	2266	[2291]	JMP      	2170 ; PC := 2170
	2267	[2293]	TEST     	R135 1 ; if R135 then PC := 2330
	2268	[2293]	JMP      	2330 ; PC := 2330
	2269	[2294]	GETGLOBAL	R142 K147 ; R142 := 0xc8802016
	2270	[2294]	GETUPVAL 	R143 U9 ; R143 := U9
	2271	[2294]	CALL     	R142 2 4 ; R142,R143,R144 := R142(R143)
	2272	[2294]	JMP      	2328 ; PC := 2328
	2273	[2295]	EQ       	0 R136 R146 ; if R136 ~= R146 then PC := 2328
	2274	[2295]	JMP      	2328 ; PC := 2328
	2275	[2296]	GETGLOBAL	R147 K0 ; R147 := 0x7b998233
	2276	[2296]	GETTABLE 	R148 R2 K27 ; R148 := R2["RawItem"]
	2277	[2296]	CALL     	R147 2 2 ; R147 := R147(R148)
	2278	[2296]	TEST     	R147 1 ; if R147 then PC := 2326
	2279	[2296]	JMP      	2326 ; PC := 2326
	2280	[2296]	GETTABLE 	R147 R2 K27 ; R147 := R2["RawItem"]
	2281	[2296]	LOADK    	R148 K298 ; R148 := "Item"
	2282	[2296]	GETTABLE 	R147 R147 R148 ; R147 := R147[R148]
	2283	[2296]	LOADNIL  	R148 R148 ; R148 := nil
	2284	[2296]	EQ       	0 R147 R148 ; if R147 ~= R148 then PC := 2326
	2285	[2296]	JMP      	2326 ; PC := 2326
	2286	[2297]	GETTABLE 	R147 R2 K27 ; R147 := R2["RawItem"]
	2287	[2297]	LOADK    	R149 K299 ; R149 := true
	2288	[2297]	SELF     	R147 R147 R149 ; R148 := R147; R147 := R147[R149]
	2289	[2297]	LOADK    	R149 := 0.000000
	2290	[2297]	CALL     	R147 3 2 ; R147 := R147(R148,R149)
	2291	[2297]	TEST     	R147 0 ; if not R147 then PC := 2306
	2292	[2297]	JMP      	2306 ; PC := 2306
	2293	[2298]	GETUPVAL 	R147 U4 ; R147 := U4
	2294	[2298]	GETGLOBAL	R148 K308 ; R148 := LABEL_TYPE_REACTOR
	2295	[2298]	SELF     	R149 R0 K22 ; R150 := R0; R149 := R0[0x42b04007]
	2296	[2298]	LOADK    	R151 K309 ; R151 := "/Lotus/Language/Items/OrokinReactor"
	2297	[2298]	OP_LOADBOOL	R152 0 0 ; R152 := false
	2298	[2298]	CALL     	R149 4 0 ; R149,... := R149(R150,R151,R152)
	2299	[2298]	CALL     	R147 0 2 ; R147 := R147(R148,...)
	2300	[2298]	MOVE     	R5 R147 ; R5 := R147
	2301	[2299]	GETGLOBAL	R147 K5 ; R147 := 0x33bdd652
	2302	[2299]	GETTABLE 	R147 R147 K6 ; R147 := R147[0x23d5322f]
	2303	[2299]	MOVE     	R148 R6 ; R148 := R6
	2304	[2299]	MOVE     	R149 R5 ; R149 := R5
	2305	[2299]	CALL     	R147 3 1 ; R147(R148,R149)
	2306	[2302]	GETTABLE 	R147 R2 K27 ; R147 := R2["RawItem"]
	2307	[2302]	LOADK    	R149 K299 ; R149 := true
	2308	[2302]	SELF     	R147 R147 R149 ; R148 := R147; R147 := R147[R149]
	2309	[2302]	LOADK    	R149 := 1.000000
	2310	[2302]	CALL     	R147 3 2 ; R147 := R147(R148,R149)
	2311	[2302]	TEST     	R147 0 ; if not R147 then PC := 2326
	2312	[2302]	JMP      	2326 ; PC := 2326
	2313	[2303]	GETUPVAL 	R147 U4 ; R147 := U4
	2314	[2303]	GETGLOBAL	R148 K310 ; R148 := LABEL_TYPE_POWERSUIT_EXILUS
	2315	[2303]	SELF     	R149 R0 K22 ; R150 := R0; R149 := R0[0x42b04007]
	2316	[2303]	LOADK    	R151 K311 ; R151 := "/Lotus/Language/Items/UtilityUnlocker"
	2317	[2303]	OP_LOADBOOL	R152 0 0 ; R152 := false
	2318	[2303]	CALL     	R149 4 0 ; R149,... := R149(R150,R151,R152)
	2319	[2303]	CALL     	R147 0 2 ; R147 := R147(R148,...)
	2320	[2303]	MOVE     	R5 R147 ; R5 := R147
	2321	[2304]	GETGLOBAL	R147 K5 ; R147 := 0x33bdd652
	2322	[2304]	GETTABLE 	R147 R147 K6 ; R147 := R147[0x23d5322f]
	2323	[2304]	MOVE     	R148 R6 ; R148 := R6
	2324	[2304]	MOVE     	R149 R5 ; R149 := R5
	2325	[2304]	CALL     	R147 3 1 ; R147(R148,R149)
	2326	[2307]	OP_LOADBOOL	R135 1 0 ; R135 := true
	2327	[2308]	JMP      	2330 ; PC := 2330
	2328	[2294]	TFORLOOP 	R142 2 ; R145,R146 := R142(R143,R144); if R145 ~= nil then begin PC = 2273; R144 := R145 end
	2329	[2309]	JMP      	2273 ; PC := 2273
	2330	[2312]	TEST     	R135 1 ; if R135 then PC := 2335
	2331	[2312]	JMP      	2335 ; PC := 2335
	2332	[2312]	LOADK    	R147 := 37.000000
	2333	[2312]	EQ       	0 R136 R147 ; if R136 ~= R147 then PC := 2400
	2334	[2312]	JMP      	2400 ; PC := 2400
	2335	[2312]	GETGLOBAL	R147 K0 ; R147 := 0x7b998233
	2336	[2312]	GETTABLE 	R148 R2 K27 ; R148 := R2["RawItem"]
	2337	[2312]	CALL     	R147 2 2 ; R147 := R147(R148)
	2338	[2312]	TEST     	R147 1 ; if R147 then PC := 2400
	2339	[2312]	JMP      	2400 ; PC := 2400
	2340	[2313]	GETTABLE 	R147 R2 K27 ; R147 := R2["RawItem"]
	2341	[2313]	LOADK    	R148 K298 ; R148 := "Item"
	2342	[2313]	GETTABLE 	R147 R147 R148 ; R147 := R147[R148]
	2343	[2313]	LOADNIL  	R148 R148 ; R148 := nil
	2344	[2313]	EQ       	0 R147 R148 ; if R147 ~= R148 then PC := 2366
	2345	[2313]	JMP      	2366 ; PC := 2366
	2346	[2314]	GETTABLE 	R147 R2 K27 ; R147 := R2["RawItem"]
	2347	[2314]	LOADK    	R149 K299 ; R149 := true
	2348	[2314]	SELF     	R147 R147 R149 ; R148 := R147; R147 := R147[R149]
	2349	[2314]	LOADK    	R149 := 3.000000
	2350	[2314]	CALL     	R147 3 2 ; R147 := R147(R148,R149)
	2351	[2314]	TEST     	R147 0 ; if not R147 then PC := 2366
	2352	[2314]	JMP      	2366 ; PC := 2366
	2353	[2315]	GETUPVAL 	R147 U4 ; R147 := U4
	2354	[2315]	GETGLOBAL	R148 K312 ; R148 := LABEL_TYPE_GILD
	2355	[2315]	SELF     	R149 R0 K22 ; R150 := R0; R149 := R0[0x42b04007]
	2356	[2315]	LOADK    	R151 K313 ; R151 := "/Lotus/Language/OstronCrafting/Crafting_Gilded"
	2357	[2315]	OP_LOADBOOL	R152 0 0 ; R152 := false
	2358	[2315]	CALL     	R149 4 0 ; R149,... := R149(R150,R151,R152)
	2359	[2315]	CALL     	R147 0 2 ; R147 := R147(R148,...)
	2360	[2315]	MOVE     	R5 R147 ; R5 := R147
	2361	[2316]	GETGLOBAL	R147 K5 ; R147 := 0x33bdd652
	2362	[2316]	GETTABLE 	R147 R147 K6 ; R147 := R147[0x23d5322f]
	2363	[2316]	MOVE     	R148 R6 ; R148 := R6
	2364	[2316]	MOVE     	R149 R5 ; R149 := R5
	2365	[2316]	CALL     	R147 3 1 ; R147(R148,R149)
	2366	[2320]	GETGLOBAL	R147 K0 ; R147 := 0x7b998233
	2367	[2320]	GETTABLE 	R148 R2 K27 ; R148 := R2["RawItem"]
	2368	[2320]	LOADK    	R149 K314 ; R149 := "mFocusLens"
	2369	[2320]	GETTABLE 	R148 R148 R149 ; R148 := R148[R149]
	2370	[2320]	CALL     	R147 2 2 ; R147 := R147(R148)
	2371	[2320]	TEST     	R147 1 ; if R147 then PC := 2400
	2372	[2320]	JMP      	2400 ; PC := 2400
	2373	[2321]	GETUPVAL 	R147 U6 ; R147 := U6
	2374	[2321]	LOADK    	R148 K315 ; R148 := true
	2375	[2321]	GETTABLE 	R147 R147 R148 ; R147 := R147[R148]
	2376	[2321]	GETTABLE 	R148 R2 K27 ; R148 := R2["RawItem"]
	2377	[2321]	LOADK    	R149 K314 ; R149 := "mFocusLens"
	2378	[2321]	GETTABLE 	R148 R148 R149 ; R148 := R148[R149]
	2379	[2321]	CALL     	R147 2 2 ; R147 := R147(R148)
	2380	[2322]	GETUPVAL 	R148 U4 ; R148 := U4
	2381	[2322]	GETGLOBAL	R149 K316 ; R149 := LABEL_TYPE_FOCUS_LENS
	2382	[2322]	SELF     	R150 R0 K22 ; R151 := R0; R150 := R0[0x42b04007]
	2383	[2322]	LOADK    	R152 K317 ; R152 := "PolarityTag"
	2384	[2322]	GETTABLE 	R152 R147 R152 ; R152 := R147[R152]
	2385	[2322]	OP_LOADBOOL	R153 1 0 ; R153 := true
	2386	[2322]	CALL     	R150 4 2 ; R150 := R150(R151,R152,R153)
	2387	[2322]	LOADNIL  	R151 R151 ; R151 := nil
	2388	[2322]	SELF     	R152 R0 K22 ; R153 := R0; R152 := R0[0x42b04007]
	2389	[2322]	LOADK    	R154 K318 ; R154 := "LensTag"
	2390	[2322]	GETTABLE 	R154 R147 R154 ; R154 := R147[R154]
	2391	[2322]	OP_LOADBOOL	R155 1 0 ; R155 := true
	2392	[2322]	CALL     	R152 4 0 ; R152,... := R152(R153,R154,R155)
	2393	[2322]	CALL     	R148 0 2 ; R148 := R148(R149,...)
	2394	[2322]	MOVE     	R5 R148 ; R5 := R148
	2395	[2323]	GETGLOBAL	R148 K5 ; R148 := 0x33bdd652
	2396	[2323]	GETTABLE 	R148 R148 K6 ; R148 := R148[0x23d5322f]
	2397	[2323]	MOVE     	R149 R6 ; R149 := R6
	2398	[2323]	MOVE     	R150 R5 ; R150 := R5
	2399	[2323]	CALL     	R148 3 1 ; R148(R149,R150)
	2400	[2329]	RETURN   	R6 2 ; return R6 
	2401	[2330]	RETURN   	R0 1 ; return 

function #42 <?:2332,2334> (9 instructions, 36 bytes at 00000211636316D0)
5 params, 11 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2333]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[2333]	MOVE     	R6 R0 ; R6 := R0
	3	[2333]	MOVE     	R7 R1 ; R7 := R1
	4	[2333]	MOVE     	R8 R2 ; R8 := R2
	5	[2333]	MOVE     	R9 R3 ; R9 := R3
	6	[2333]	MOVE     	R10 R4 ; R10 := R4
	7	[2333]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	8	[2333]	RETURN   	R5 0 ; return R5,... 
	9	[2334]	RETURN   	R0 1 ; return 

function #43 <?:2336,2338> (4 instructions, 16 bytes at 00000211636317E0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2337]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2337]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[2337]	RETURN   	R1 2 ; return R1 
	4	[2338]	RETURN   	R0 1 ; return 

function #44 <?:2340,2697> (1279 instructions, 5116 bytes at 00000211636318B0)
4 params, 100 slots, 10 upvalues, 0 locals, 181 constants, 0 functions
	1	[2348]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[2348]	MOVE     	R5 R0 ; R5 := R0
	3	[2348]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[2348]	TEST     	R4 0 ; if not R4 then PC := 7
	5	[2348]	JMP      	7 ; PC := 7
	6	[2349]	RETURN   	R0 1 ; return 
	7	[2352]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	8	[2352]	MOVE     	R5 R3 ; R5 := R3
	9	[2352]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[2352]	TEST     	R4 0 ; if not R4 then PC := 14
	11	[2352]	JMP      	14 ; PC := 14
	12	[2353]	NEWTABLE 	R4 0 0 ; R4 := {}
	13	[2353]	MOVE     	R3 R4 ; R3 := R4
	14	[2355]	SETTABLE 	R3 K1 K2 ; R3["FromRedraw"] := true
	15	[2356]	NEWTABLE 	R4 0 0 ; R4 := {}
	16	[2356]	SETTABLE 	R2 K3 R4 ; R2["Labels"] := R4
	17	[2358]	GETTABLE 	R4 R2 K4 ; R4 := R2["mClipName"]
	18	[2359]	LOADK    	R5 := 1.000000
	19	[2360]	GETTABLE 	R6 R2 K5 ; R6 := R2["Filler"]
	20	[2360]	TEST     	R6 1 ; if R6 then PC := 23
	21	[2360]	JMP      	23 ; PC := 23
	22	[2360]	GETTABLE 	R6 R3 K6 ; R6 := R3["IsFiller"]
	23	[2361]	GETTABLE 	R7 R2 K7 ; R7 := R2["EmptySlot"]
	24	[2362]	GETTABLE 	R8 R2 K8 ; R8 := R2["IsNone"]
	25	[2365]	GETUPVAL 	R9 U0 ; R9 := U0
	26	[2365]	MOVE     	R10 R0 ; R10 := R0
	27	[2365]	MOVE     	R11 R1 ; R11 := R1
	28	[2365]	MOVE     	R12 R2 ; R12 := R2
	29	[2365]	MOVE     	R13 R3 ; R13 := R3
	30	[2365]	CALL     	R9 5 3 ; R9,R10 := R9(R10,R11,R12,R13)
	31	[2368]	SELF     	R11 R0 K9 ; R12 := R0; R11 := R0[0xc0a3774b]
	32	[2368]	MOVE     	R13 R4 ; R13 := R4
	33	[2368]	LOADK    	R14 K10 ; R14 := "Btn"
	34	[2368]	LOADK    	R15 := 59.000000
	35	[2368]	NOT      	R16 R6 ; R16 := not R6
	36	[2368]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	37	[2370]	GETUPVAL 	R11 U1 ; R11 := U1
	38	[2370]	MOVE     	R12 R0 ; R12 := R0
	39	[2370]	MOVE     	R13 R1 ; R13 := R1
	40	[2370]	MOVE     	R14 R2 ; R14 := R2
	41	[2370]	MOVE     	R15 R3 ; R15 := R3
	42	[2370]	MOVE     	R16 R10 ; R16 := R10
	43	[2370]	CALL     	R11 6 2 ; R11 := R11(R12,R13,R14,R15,R16)
	44	[2371]	LOADK    	R12 := 0.000000
	45	[2372]	LOADK    	R13 := 0.000000
	46	[2373]	LOADK    	R14 := 0.000000
	47	[2377]	GETGLOBAL	R15 K11 ; R15 := 0xc8802016
	48	[2377]	MOVE     	R16 R11 ; R16 := R11
	49	[2377]	CALL     	R15 2 4 ; R15,R16,R17 := R15(R16)
	50	[2377]	JMP      	72 ; PC := 72
	51	[2378]	GETUPVAL 	R20 U2 ; R20 := U2
	52	[2378]	GETTABLE 	R21 R19 K12 ; R21 := R19["Type"]
	53	[2378]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	54	[2378]	TEST     	R20 0 ; if not R20 then PC := 60
	55	[2378]	JMP      	60 ; PC := 60
	56	[2378]	GETTABLE 	R20 R19 K13 ; R20 := R19["HideInGrid"]
	57	[2378]	TEST     	R20 1 ; if R20 then PC := 60
	58	[2378]	JMP      	60 ; PC := 60
	59	[2379]	ADD      	R14 R14 K14 ; R14 := R14 + 1.000000
	60	[2381]	GETTABLE 	R20 R3 K15 ; R20 := R3["HideTagLabel"]
	61	[2381]	SETTABLE 	R19 K15 R20 ; R19["HideTagLabel"] := R20
	62	[2382]	GETTABLE 	R20 R19 K12 ; R20 := R19["Type"]
	63	[2382]	GETGLOBAL	R21 K16 ; R21 := LABEL_TYPE_PLATINUM
	64	[2382]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 72
	65	[2382]	JMP      	72 ; PC := 72
	66	[2383]	GETTABLE 	R20 R1 K18 ; R20 := R1["PlatBackerTexture"]
	67	[2383]	SETTABLE 	R19 K17 R20 ; R19["BackerTexture"] := R20
	68	[2384]	GETTABLE 	R20 R1 K20 ; R20 := R1["PlatBackerCapTexture"]
	69	[2384]	SETTABLE 	R19 K19 R20 ; R19["BackerCapTexture"] := R20
	70	[2385]	GETTABLE 	R20 R1 K22 ; R20 := R1["ColorRemapMaterial"]
	71	[2385]	SETTABLE 	R19 K21 R20 ; R19["BackerMaterial"] := R20
	72	[2377]	TFORLOOP 	R15 2 ; R18,R19 := R15(R16,R17); if R18 ~= nil then begin PC = 51; R17 := R18 end
	73	[2386]	JMP      	51 ; PC := 51
	74	[2389]	GETGLOBAL	R20 K11 ; R20 := 0xc8802016
	75	[2389]	MOVE     	R21 R11 ; R21 := R11
	76	[2389]	CALL     	R20 2 4 ; R20,R21,R22 := R20(R21)
	77	[2389]	JMP      	154 ; PC := 154
	78	[2390]	LOADK    	R25 K23 ; R25 := ""
	79	[2391]	GETUPVAL 	R26 U3 ; R26 := U3
	80	[2391]	MOVE     	R27 R0 ; R27 := R0
	81	[2391]	MOVE     	R28 R4 ; R28 := R4
	82	[2391]	MOVE     	R29 R5 ; R29 := R5
	83	[2391]	CALL     	R26 4 3 ; R26,R27 := R26(R27,R28,R29)
	84	[2391]	MOVE     	R5 R27 ; R5 := R27
	85	[2391]	MOVE     	R25 R26 ; R25 := R26
	86	[2392]	GETUPVAL 	R26 U4 ; R26 := U4
	87	[2392]	MOVE     	R27 R0 ; R27 := R0
	88	[2392]	MOVE     	R28 R25 ; R28 := R25
	89	[2392]	MOVE     	R29 R24 ; R29 := R24
	90	[2392]	OP_LOADBOOL	R30 1 0 ; R30 := true
	91	[2392]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	92	[2393]	GETGLOBAL	R26 K24 ; R26 := 0x33bdd652
	93	[2393]	GETTABLE 	R26 R26 K25 ; R26 := R26[0x23d5322f]
	94	[2393]	GETTABLE 	R27 R2 K3 ; R27 := R2["Labels"]
	95	[2393]	MOVE     	R28 R24 ; R28 := R24
	96	[2393]	CALL     	R26 3 1 ; R26(R27,R28)
	97	[2394]	GETTABLE 	R26 R24 K26 ; R26 := R24["mGridLabelTag"]
	98	[2394]	EQ       	1 R26 K27 ; if R26 == nil then PC := 103
	99	[2394]	JMP      	103 ; PC := 103
	100	[2394]	EQ       	0 R14 K28 ; if R14 ~= 0.000000 then PC := 103
	101	[2394]	JMP      	103 ; PC := 103
	102	[2395]	SETTABLE 	R24 K29 K2 ; R24["mShowItemPrice"] := true
	103	[2397]	GETUPVAL 	R26 U2 ; R26 := U2
	104	[2397]	GETTABLE 	R27 R24 K12 ; R27 := R24["Type"]
	105	[2397]	GETTABLE 	R26 R26 R27 ; R26 := R26[R27]
	106	[2397]	TEST     	R26 1 ; if R26 then PC := 111
	107	[2397]	JMP      	111 ; PC := 111
	108	[2397]	GETTABLE 	R26 R24 K29 ; R26 := R24["mShowItemPrice"]
	109	[2397]	TEST     	R26 0 ; if not R26 then PC := 154
	110	[2397]	JMP      	154 ; PC := 154
	111	[2398]	GETTABLE 	R26 R24 K13 ; R26 := R24["HideInGrid"]
	112	[2398]	TEST     	R26 1 ; if R26 then PC := 154
	113	[2398]	JMP      	154 ; PC := 154
	114	[2399]	SELF     	R26 R0 K30 ; R27 := R0; R26 := R0[0xaf5300dc]
	115	[2399]	MOVE     	R28 R25 ; R28 := R25
	116	[2399]	CALL     	R26 3 1 ; R26(R27,R28)
	117	[2400]	SELF     	R26 R0 K31 ; R27 := R0; R26 := R0[0x67bc869f]
	118	[2400]	MOVE     	R28 R25 ; R28 := R25
	119	[2400]	LOADK    	R29 := 10.000000
	120	[2400]	LOADK    	R30 := 100.000000
	121	[2400]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	122	[2401]	GETTABLE 	R26 R24 K32 ; R26 := R24["RightAlign"]
	123	[2401]	TEST     	R26 0 ; if not R26 then PC := 140
	124	[2401]	JMP      	140 ; PC := 140
	125	[2402]	GETTABLE 	R26 R24 K17 ; R26 := R24["BackerTexture"]
	126	[2402]	EQ       	1 R26 K27 ; if R26 == nil then PC := 129
	127	[2402]	JMP      	129 ; PC := 129
	128	[2403]	ADD      	R13 R13 K14 ; R13 := R13 + 1.000000
	129	[2405]	SELF     	R26 R0 K31 ; R27 := R0; R26 := R0[0x67bc869f]
	130	[2405]	MOVE     	R28 R25 ; R28 := R25
	131	[2405]	LOADK    	R29 := 1.000000
	132	[2405]	MOVE     	R30 R13 ; R30 := R13
	133	[2405]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	134	[2406]	ADD      	R13 R13 K33 ; R13 := R13 + 26.000000
	135	[2407]	GETTABLE 	R26 R24 K17 ; R26 := R24["BackerTexture"]
	136	[2407]	EQ       	1 R26 K27 ; if R26 == nil then PC := 154
	137	[2407]	JMP      	154 ; PC := 154
	138	[2408]	ADD      	R13 R13 K34 ; R13 := R13 + 4.000000
	139	[2409]	JMP      	154 ; PC := 154
	140	[2411]	GETTABLE 	R26 R24 K17 ; R26 := R24["BackerTexture"]
	141	[2411]	EQ       	1 R26 K27 ; if R26 == nil then PC := 144
	142	[2411]	JMP      	144 ; PC := 144
	143	[2412]	ADD      	R12 R12 K14 ; R12 := R12 + 1.000000
	144	[2414]	SELF     	R26 R0 K31 ; R27 := R0; R26 := R0[0x67bc869f]
	145	[2414]	MOVE     	R28 R25 ; R28 := R25
	146	[2414]	LOADK    	R29 := 1.000000
	147	[2414]	MOVE     	R30 R12 ; R30 := R12
	148	[2414]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	149	[2415]	ADD      	R12 R12 K33 ; R12 := R12 + 26.000000
	150	[2416]	GETTABLE 	R26 R24 K17 ; R26 := R24["BackerTexture"]
	151	[2416]	EQ       	1 R26 K27 ; if R26 == nil then PC := 154
	152	[2416]	JMP      	154 ; PC := 154
	153	[2417]	ADD      	R12 R12 K34 ; R12 := R12 + 4.000000
	154	[2389]	TFORLOOP 	R20 2 ; R23,R24 := R20(R21,R22); if R23 ~= nil then begin PC = 78; R22 := R23 end
	155	[2421]	JMP      	78 ; PC := 78
	156	[2423]	SELF     	R26 R0 K35 ; R27 := R0; R26 := R0[0x91a24e4b]
	157	[2423]	MOVE     	R28 R4 ; R28 := R4
	158	[2423]	LOADK    	R29 K36 ; R29 := ".RectangleBg"
	159	[2423]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	160	[2423]	LOADK    	R29 := 12.000000
	161	[2423]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	162	[2424]	SELF     	R27 R0 K35 ; R28 := R0; R27 := R0[0x91a24e4b]
	163	[2424]	MOVE     	R29 R4 ; R29 := R4
	164	[2424]	LOADK    	R30 K36 ; R30 := ".RectangleBg"
	165	[2424]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	166	[2424]	LOADK    	R30 := 13.000000
	167	[2424]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	168	[2425]	EQ       	0 R26 K27 ; if R26 ~= nil then PC := 171
	169	[2425]	JMP      	171 ; PC := 171
	170	[2426]	LOADK    	R26 := 0.000000
	171	[2428]	EQ       	0 R27 K27 ; if R27 ~= nil then PC := 174
	172	[2428]	JMP      	174 ; PC := 174
	173	[2429]	LOADK    	R27 := 0.000000
	174	[2432]	SELF     	R28 R0 K37 ; R29 := R0; R28 := R0[0xf64b7262]
	175	[2432]	MOVE     	R30 R4 ; R30 := R4
	176	[2432]	LOADK    	R31 K38 ; R31 := "TagContainer"
	177	[2432]	LOADK    	R32 := 0.000000
	178	[2432]	DIV      	R33 R26 K39 ; R33 := R26 / 2.000000
	179	[2432]	UNM      	R33 R33 ; R33 := ^ R33
	180	[2432]	ADD      	R33 R33 K40 ; R33 := R33 + 0.500000
	181	[2432]	CALL     	R28 6 1 ; R28(R29,R30,R31,R32,R33)
	182	[2433]	SELF     	R28 R0 K37 ; R29 := R0; R28 := R0[0xf64b7262]
	183	[2433]	MOVE     	R30 R4 ; R30 := R4
	184	[2433]	LOADK    	R31 K38 ; R31 := "TagContainer"
	185	[2433]	LOADK    	R32 := 1.000000
	186	[2433]	DIV      	R33 R27 K39 ; R33 := R27 / 2.000000
	187	[2433]	UNM      	R33 R33 ; R33 := ^ R33
	188	[2433]	ADD      	R33 R33 K40 ; R33 := R33 + 0.500000
	189	[2433]	CALL     	R28 6 1 ; R28(R29,R30,R31,R32,R33)
	190	[2435]	GETTABLE 	R28 R3 K41 ; R28 := R3["UpdateLabelsOnly"]
	191	[2435]	TEST     	R28 0 ; if not R28 then PC := 194
	192	[2435]	JMP      	194 ; PC := 194
	193	[2436]	RETURN   	R0 1 ; return 
	194	[2439]	SELF     	R28 R0 K9 ; R29 := R0; R28 := R0[0xc0a3774b]
	195	[2439]	MOVE     	R30 R4 ; R30 := R4
	196	[2439]	LOADK    	R31 K42 ; R31 := "Check"
	197	[2439]	LOADK    	R32 := 11.000000
	198	[2439]	GETTABLE 	R33 R3 K43 ; R33 := R3["ShowComplete"]
	199	[2439]	EQ       	1 R33 K2 ; if R33 == true then PC := 202
	200	[2439]	JMP      	202 ; PC := 202
	201	[2439]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 202
	202	[2439]	OP_LOADBOOL	R33 1 0 ; R33 := true
	203	[2439]	CALL     	R28 6 1 ; R28(R29,R30,R31,R32,R33)
	204	[2441]	OP_LOADBOOL	R28 0 0 ; R28 := false
	205	[2442]	OP_LOADBOOL	R29 0 0 ; R29 := false
	206	[2443]	OP_LOADBOOL	R30 0 0 ; R30 := false
	207	[2444]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	208	[2444]	GETTABLE 	R32 R2 K44 ; R32 := R2["Card"]
	209	[2444]	CALL     	R31 2 2 ; R31 := R31(R32)
	210	[2444]	TEST     	R31 1 ; if R31 then PC := 218
	211	[2444]	JMP      	218 ; PC := 218
	212	[2444]	GETUPVAL 	R31 U5 ; R31 := U5
	213	[2444]	GETTABLE 	R31 R31 K45 ; R31 := R31[0xf5d68fd7]
	214	[2444]	GETTABLE 	R32 R2 K44 ; R32 := R2["Card"]
	215	[2444]	CALL     	R31 2 2 ; R31 := R31(R32)
	216	[2444]	NOT      	R31 R31 ; R31 := not R31
	217	[2444]	JMP      	220 ; PC := 220
	218	[2444]	OP_LOADBOOL	R31 0 1 ; R31 := false; PC := 219
	219	[2444]	OP_LOADBOOL	R31 1 0 ; R31 := true
	220	[2445]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	221	[2445]	GETTABLE 	R33 R2 K12 ; R33 := R2["Type"]
	222	[2445]	CALL     	R32 2 2 ; R32 := R32(R33)
	223	[2445]	TEST     	R32 1 ; if R32 then PC := 259
	224	[2445]	JMP      	259 ; PC := 259
	225	[2446]	GETTABLE 	R32 R2 K12 ; R32 := R2["Type"]
	226	[2446]	SELF     	R32 R32 K46 ; R33 := R32; R32 := R32[0xf2deaf69]
	227	[2446]	GETUPVAL 	R34 U6 ; R34 := U6
	228	[2446]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	229	[2446]	MOVE     	R28 R32 ; R28 := R32
	230	[2447]	GETTABLE 	R32 R2 K12 ; R32 := R2["Type"]
	231	[2447]	SELF     	R32 R32 K46 ; R33 := R32; R32 := R32[0xf2deaf69]
	232	[2447]	GETGLOBAL	R34 K47 ; R34 := gCrewShipUpgradeType
	233	[2447]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	234	[2447]	MOVE     	R29 R32 ; R29 := R32
	235	[2448]	GETTABLE 	R32 R2 K12 ; R32 := R2["Type"]
	236	[2448]	SELF     	R32 R32 K46 ; R33 := R32; R32 := R32[0xf2deaf69]
	237	[2448]	GETGLOBAL	R34 K48 ; R34 := gLotusArtifactUpgradeType
	238	[2448]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	239	[2448]	TESTSET  	R30 R32 1 ; if R32 then PC := 245 else R30 := R32 
	240	[2448]	JMP      	245 ; PC := 245
	241	[2448]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	242	[2448]	GETTABLE 	R33 R2 K49 ; R33 := R2["UpgradeInfo"]
	243	[2448]	CALL     	R32 2 2 ; R32 := R32(R33)
	244	[2448]	NOT      	R30 R32 ; R30 := not R32
	245	[2449]	TEST     	R31 1 ; if R31 then PC := 259
	246	[2449]	JMP      	259 ; PC := 259
	247	[2449]	TESTSET  	R31 R30 0 ; if not R30 then PC := 259 else R31 := R30 
	248	[2449]	JMP      	259 ; PC := 259
	249	[2449]	TEST     	R28 1 ; if R28 then PC := 257
	250	[2449]	JMP      	257 ; PC := 257
	251	[2449]	GETTABLE 	R32 R2 K12 ; R32 := R2["Type"]
	252	[2449]	SELF     	R32 R32 K46 ; R33 := R32; R32 := R32[0xf2deaf69]
	253	[2449]	GETUPVAL 	R34 U7 ; R34 := U7
	254	[2449]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	255	[2449]	NOT      	R31 R32 ; R31 := not R32
	256	[2449]	JMP      	259 ; PC := 259
	257	[2449]	OP_LOADBOOL	R31 0 1 ; R31 := false; PC := 258
	258	[2449]	OP_LOADBOOL	R31 1 0 ; R31 := true
	259	[2453]	EQ       	1 R9 K23 ; if R9 == "" then PC := 288
	260	[2453]	JMP      	288 ; PC := 288
	261	[2453]	TESTSET  	R32 R7 1 ; if R7 then PC := 290 else R32 := R7 
	262	[2453]	JMP      	290 ; PC := 290
	263	[2453]	TESTSET  	R32 R8 1 ; if R8 then PC := 290 else R32 := R8 
	264	[2453]	JMP      	290 ; PC := 290
	265	[2453]	GETTABLE 	R32 R1 K50 ; R32 := R1["mHideArcaneRank"]
	266	[2453]	TEST     	R32 1 ; if R32 then PC := 273
	267	[2453]	JMP      	273 ; PC := 273
	268	[2453]	TEST     	R28 0 ; if not R28 then PC := 273
	269	[2453]	JMP      	273 ; PC := 273
	270	[2453]	GETTABLE 	R32 R2 K51 ; R32 := R2["NotOwned"]
	271	[2453]	TEST     	R32 0 ; if not R32 then PC := 289
	272	[2453]	JMP      	289 ; PC := 289
	273	[2453]	TEST     	R31 1 ; if R31 then PC := 281
	274	[2453]	JMP      	281 ; PC := 281
	275	[2453]	GETTABLE 	R32 R1 K52 ; R32 := R1["mShowLabels"]
	276	[2453]	TEST     	R32 1 ; if R32 then PC := 286
	277	[2453]	JMP      	286 ; PC := 286
	278	[2453]	GETTABLE 	R32 R2 K53 ; R32 := R2["mShowLabel"]
	279	[2453]	TEST     	R32 1 ; if R32 then PC := 286
	280	[2453]	JMP      	286 ; PC := 286
	281	[2453]	TESTSET  	R32 R31 0 ; if not R31 then PC := 290 else R32 := R31 
	282	[2453]	JMP      	290 ; PC := 290
	283	[2453]	GETTABLE 	R32 R1 K54 ; R32 := R1["mShowModLabels"]
	284	[2453]	TEST     	R32 0 ; if not R32 then PC := 290
	285	[2453]	JMP      	290 ; PC := 290
	286	[2453]	NOT      	R32 R6 ; R32 := not R6
	287	[2453]	JMP      	290 ; PC := 290
	288	[2453]	OP_LOADBOOL	R32 0 1 ; R32 := false; PC := 289
	289	[2453]	OP_LOADBOOL	R32 1 0 ; R32 := true
	290	[2454]	EQ       	1 R32 K2 ; if R32 == true then PC := 293
	291	[2454]	JMP      	293 ; PC := 293
	292	[2454]	OP_LOADBOOL	R32 0 1 ; R32 := false; PC := 293
	293	[2454]	OP_LOADBOOL	R32 1 0 ; R32 := true
	294	[2455]	SELF     	R33 R0 K9 ; R34 := R0; R33 := R0[0xc0a3774b]
	295	[2455]	MOVE     	R35 R4 ; R35 := R4
	296	[2455]	LOADK    	R36 K55 ; R36 := "ItemName"
	297	[2455]	LOADK    	R37 := 11.000000
	298	[2455]	MOVE     	R38 R32 ; R38 := R32
	299	[2455]	CALL     	R33 6 1 ; R33(R34,R35,R36,R37,R38)
	300	[2456]	SELF     	R33 R0 K9 ; R34 := R0; R33 := R0[0xc0a3774b]
	301	[2456]	MOVE     	R35 R4 ; R35 := R4
	302	[2456]	LOADK    	R36 K56 ; R36 := "NameBg"
	303	[2456]	LOADK    	R37 := 11.000000
	304	[2456]	TESTSET  	R38 R32 0 ; if not R32 then PC := 311 else R38 := R32 
	305	[2456]	JMP      	311 ; PC := 311
	306	[2456]	GETTABLE 	R38 R1 K57 ; R38 := R1["BackerWidth"]
	307	[2456]	EQ       	1 R38 K27 ; if R38 == nil then PC := 310
	308	[2456]	JMP      	310 ; PC := 310
	309	[2456]	OP_LOADBOOL	R38 0 1 ; R38 := false; PC := 310
	310	[2456]	OP_LOADBOOL	R38 1 0 ; R38 := true
	311	[2456]	CALL     	R33 6 1 ; R33(R34,R35,R36,R37,R38)
	312	[2457]	SELF     	R33 R0 K9 ; R34 := R0; R33 := R0[0xc0a3774b]
	313	[2457]	MOVE     	R35 R4 ; R35 := R4
	314	[2457]	LOADK    	R36 K58 ; R36 := "Mod"
	315	[2457]	LOADK    	R37 := 11.000000
	316	[2457]	MOVE     	R38 R31 ; R38 := R31
	317	[2457]	CALL     	R33 6 1 ; R33(R34,R35,R36,R37,R38)
	318	[2459]	TEST     	R31 0 ; if not R31 then PC := 400
	319	[2459]	JMP      	400 ; PC := 400
	320	[2460]	LOADNIL  	R33 R33 ; R33 := nil
	321	[2461]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	322	[2461]	GETTABLE 	R35 R2 K44 ; R35 := R2["Card"]
	323	[2461]	CALL     	R34 2 2 ; R34 := R34(R35)
	324	[2461]	TEST     	R34 1 ; if R34 then PC := 328
	325	[2461]	JMP      	328 ; PC := 328
	326	[2462]	GETTABLE 	R33 R2 K44 ; R33 := R2["Card"]
	327	[2462]	JMP      	377 ; PC := 377
	328	[2463]	GETGLOBAL	R34 K0 ; R34 := 0x7b998233
	329	[2463]	GETTABLE 	R35 R2 K49 ; R35 := R2["UpgradeInfo"]
	330	[2463]	CALL     	R34 2 2 ; R34 := R34(R35)
	331	[2463]	TEST     	R34 1 ; if R34 then PC := 345
	332	[2463]	JMP      	345 ; PC := 345
	333	[2464]	GETUPVAL 	R34 U5 ; R34 := U5
	334	[2464]	GETTABLE 	R34 R34 K59 ; R34 := R34[0xfc31b69e]
	335	[2464]	GETTABLE 	R35 R2 K49 ; R35 := R2["UpgradeInfo"]
	336	[2464]	LOADK    	R36 := 1.000000
	337	[2464]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	338	[2464]	MOVE     	R33 R34 ; R33 := R34
	339	[2465]	GETTABLE 	R34 R2 K60 ; R34 := R2["UpgradeNameOverride"]
	340	[2465]	EQ       	1 R34 K27 ; if R34 == nil then PC := 377
	341	[2465]	JMP      	377 ; PC := 377
	342	[2466]	GETTABLE 	R34 R2 K60 ; R34 := R2["UpgradeNameOverride"]
	343	[2466]	SETTABLE 	R33 K61 R34 ; R33["mName"] := R34
	344	[2467]	JMP      	377 ; PC := 377
	345	[2469]	GETGLOBAL	R34 K62 ; R34 := 0x6c97a788
	346	[2469]	GETTABLE 	R34 R34 K63 ; R34 := R34[0x1aba4d9e]
	347	[2469]	CALL     	R34 1 2 ; R34 := R34()
	348	[2470]	GETTABLE 	R35 R2 K12 ; R35 := R2["Type"]
	349	[2470]	SETTABLE 	R34 K64 R35 ; R34["mItemType"] := R35
	350	[2471]	GETTABLE 	R35 R2 K65 ; R35 := R2["UpgradeFingerprint"]
	351	[2471]	EQ       	1 R35 K27 ; if R35 == nil then PC := 356
	352	[2471]	JMP      	356 ; PC := 356
	353	[2472]	GETTABLE 	R35 R2 K65 ; R35 := R2["UpgradeFingerprint"]
	354	[2472]	SETTABLE 	R34 K66 R35 ; R34["mUpgradeFingerprint"] := R35
	355	[2472]	JMP      	371 ; PC := 371
	356	[2474]	GETTABLE 	R35 R34 K64 ; R35 := R34["mItemType"]
	357	[2474]	SELF     	R35 R35 K46 ; R36 := R35; R35 := R35[0xf2deaf69]
	358	[2474]	GETUPVAL 	R37 U5 ; R37 := U5
	359	[2474]	GETTABLE 	R37 R37 K67 ; R37 := R37["immortalModType"]
	360	[2474]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	361	[2474]	TEST     	R35 1 ; if R35 then PC := 371
	362	[2474]	JMP      	371 ; PC := 371
	363	[2476]	GETTABLE 	R35 R34 K68 ; R35 := R34["mInstance"]
	364	[2476]	SELF     	R35 R35 K69 ; R36 := R35; R35 := R35[0x86ba2663]
	365	[2476]	GETTABLE 	R37 R34 K68 ; R37 := R34["mInstance"]
	366	[2476]	SELF     	R37 R37 K70 ; R38 := R37; R37 := R37[0x91fb01d5]
	367	[2476]	LOADK    	R39 K23 ; R39 := ""
	368	[2476]	CALL     	R37 3 0 ; R37,... := R37(R38,R39)
	369	[2476]	CALL     	R35 0 2 ; R35 := R35(R36,...)
	370	[2476]	SETTABLE 	R34 K66 R35 ; R34["mUpgradeFingerprint"] := R35
	371	[2479]	GETUPVAL 	R35 U5 ; R35 := U5
	372	[2479]	GETTABLE 	R35 R35 K59 ; R35 := R35[0xfc31b69e]
	373	[2479]	MOVE     	R36 R34 ; R36 := R34
	374	[2479]	LOADK    	R37 := 1.000000
	375	[2479]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	376	[2479]	MOVE     	R33 R35 ; R33 := R35
	377	[2481]	NEWTABLE 	R35 0 4 ; R35 := {}
	378	[2481]	MOVE     	R36 R4 ; R36 := R4
	379	[2481]	LOADK    	R37 K71 ; R37 := ".Mod"
	380	[2481]	CONCAT   	R36 R36 R37 ; R36 := R36 .. R37
	381	[2481]	SETTABLE 	R35 K4 R36 ; R35["mClipName"] := R36
	382	[2481]	SETTABLE 	R35 K44 R33 ; R35["Card"] := R33
	383	[2481]	SETTABLE 	R35 K72 K28 ; R35["mPolarity"] := 0.000000
	384	[2481]	GETTABLE 	R36 R2 K73 ; R36 := R2["Count"]
	385	[2481]	SETTABLE 	R35 K73 R36 ; R35["Count"] := R36
	386	[2482]	SETTABLE 	R2 K74 R35 ; R2["mMod"] := R35
	387	[2484]	GETUPVAL 	R36 U5 ; R36 := U5
	388	[2484]	GETTABLE 	R36 R36 K75 ; R36 := R36[0xcbcefa26]
	389	[2484]	MOVE     	R37 R35 ; R37 := R35
	390	[2484]	LOADNIL  	R38 R41 ; R38 := R39 := R40 := R41 := nil
	391	[2484]	GETTABLE 	R42 R2 K76 ; R42 := R2["OverrideCardCount"]
	392	[2484]	CALL     	R36 7 1 ; R36(R37,R38,R39,R40,R41,R42)
	393	[2486]	SELF     	R36 R0 K9 ; R37 := R0; R36 := R0[0xc0a3774b]
	394	[2486]	MOVE     	R38 R4 ; R38 := R4
	395	[2486]	LOADK    	R39 K77 ; R39 := "Mod.Btn"
	396	[2486]	LOADK    	R40 := 59.000000
	397	[2486]	OP_LOADBOOL	R41 0 0 ; R41 := false
	398	[2486]	CALL     	R36 6 1 ; R36(R37,R38,R39,R40,R41)
	399	[2486]	JMP      	419 ; PC := 419
	400	[2488]	EQ       	0 R9 K27 ; if R9 ~= nil then PC := 419
	401	[2488]	JMP      	419 ; PC := 419
	402	[2489]	TEST     	R7 0 ; if not R7 then PC := 410
	403	[2489]	JMP      	410 ; PC := 410
	404	[2490]	GETGLOBAL	R36 K78 ; R36 := 0x603636ad
	405	[2490]	LOADK    	R37 K79 ; R37 := "/Lotus/Language/Menu/Loadout_EmptySlotToolTip"
	406	[2490]	OP_LOADBOOL	R38 0 0 ; R38 := false
	407	[2490]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	408	[2490]	MOVE     	R9 R36 ; R9 := R36
	409	[2490]	JMP      	419 ; PC := 419
	410	[2491]	TEST     	R8 0 ; if not R8 then PC := 418
	411	[2491]	JMP      	418 ; PC := 418
	412	[2492]	GETGLOBAL	R36 K78 ; R36 := 0x603636ad
	413	[2492]	LOADK    	R37 K80 ; R37 := "/Lotus/Language/Menu/Cosmetics_None"
	414	[2492]	OP_LOADBOOL	R38 0 0 ; R38 := false
	415	[2492]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	416	[2492]	MOVE     	R9 R36 ; R9 := R36
	417	[2492]	JMP      	419 ; PC := 419
	418	[2494]	LOADK    	R9 K23 ; R9 := ""
	419	[2499]	EQ       	1 R9 K27 ; if R9 == nil then PC := 468
	420	[2499]	JMP      	468 ; PC := 468
	421	[2500]	GETTABLE 	R36 R2 K81 ; R36 := R2["SkipTitleCase"]
	422	[2500]	TEST     	R36 1 ; if R36 then PC := 442
	423	[2500]	JMP      	442 ; PC := 442
	424	[2501]	GETGLOBAL	R36 K82 ; R36 := 0x5f0788c4
	425	[2501]	MOVE     	R37 R9 ; R37 := R9
	426	[2501]	CALL     	R36 2 2 ; R36 := R36(R37)
	427	[2501]	MOVE     	R9 R36 ; R9 := R36
	428	[2502]	GETGLOBAL	R36 K83 ; R36 := 0x7f5022cf
	429	[2502]	GETTABLE 	R36 R36 K84 ; R36 := R36[0xa5c556b9]
	430	[2502]	MOVE     	R37 R9 ; R37 := R9
	431	[2502]	LOADK    	R38 K85 ; R38 := "Tennogen"
	432	[2502]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	433	[2502]	EQ       	1 R36 K27 ; if R36 == nil then PC := 442
	434	[2502]	JMP      	442 ; PC := 442
	435	[2503]	GETGLOBAL	R36 K83 ; R36 := 0x7f5022cf
	436	[2503]	GETTABLE 	R36 R36 K86 ; R36 := R36[0x66edf04f]
	437	[2503]	MOVE     	R37 R9 ; R37 := R9
	438	[2503]	LOADK    	R38 K85 ; R38 := "Tennogen"
	439	[2503]	LOADK    	R39 K87 ; R39 := "TennoGen"
	440	[2503]	CALL     	R36 4 2 ; R36 := R36(R37,R38,R39)
	441	[2503]	MOVE     	R9 R36 ; R9 := R36
	442	[2506]	SELF     	R36 R0 K88 ; R37 := R0; R36 := R0[0xe261aa96]
	443	[2506]	MOVE     	R38 R4 ; R38 := R4
	444	[2506]	LOADK    	R39 K55 ; R39 := "ItemName"
	445	[2506]	LOADK    	R40 := 38.000000
	446	[2506]	LOADK    	R41 K89 ; R41 := "bottom"
	447	[2506]	CALL     	R36 6 1 ; R36(R37,R38,R39,R40,R41)
	448	[2507]	SELF     	R36 R0 K88 ; R37 := R0; R36 := R0[0xe261aa96]
	449	[2507]	MOVE     	R38 R4 ; R38 := R4
	450	[2507]	LOADK    	R39 K55 ; R39 := "ItemName"
	451	[2507]	LOADK    	R40 := 29.000000
	452	[2507]	MOVE     	R41 R9 ; R41 := R9
	453	[2507]	CALL     	R36 6 1 ; R36(R37,R38,R39,R40,R41)
	454	[2508]	SELF     	R36 R0 K35 ; R37 := R0; R36 := R0[0x91a24e4b]
	455	[2508]	MOVE     	R38 R4 ; R38 := R4
	456	[2508]	LOADK    	R39 K90 ; R39 := ".ItemName"
	457	[2508]	CONCAT   	R38 R38 R39 ; R38 := R38 .. R39
	458	[2508]	LOADK    	R39 := 34.000000
	459	[2508]	CALL     	R36 4 2 ; R36 := R36(R37,R38,R39)
	460	[2509]	EQ       	1 R36 K27 ; if R36 == nil then PC := 468
	461	[2509]	JMP      	468 ; PC := 468
	462	[2510]	SELF     	R37 R0 K37 ; R38 := R0; R37 := R0[0xf64b7262]
	463	[2510]	MOVE     	R39 R4 ; R39 := R4
	464	[2510]	LOADK    	R40 K56 ; R40 := "NameBg"
	465	[2510]	LOADK    	R41 := 13.000000
	466	[2510]	ADD      	R42 R36 K91 ; R42 := R36 + 15.000000
	467	[2510]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	468	[2515]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	469	[2515]	GETTABLE 	R38 R2 K92 ; R38 := R2["Icon"]
	470	[2515]	CALL     	R37 2 2 ; R37 := R37(R38)
	471	[2515]	TEST     	R37 0 ; if not R37 then PC := 488
	472	[2515]	JMP      	488 ; PC := 488
	473	[2515]	GETTABLE 	R37 R2 K93 ; R37 := R2["IconMissing"]
	474	[2515]	TEST     	R37 1 ; if R37 then PC := 488
	475	[2515]	JMP      	488 ; PC := 488
	476	[2515]	GETTABLE 	R37 R2 K94 ; R37 := R2["HideIcon"]
	477	[2515]	TEST     	R37 1 ; if R37 then PC := 488
	478	[2515]	JMP      	488 ; PC := 488
	479	[2515]	TEST     	R6 1 ; if R6 then PC := 488
	480	[2515]	JMP      	488 ; PC := 488
	481	[2515]	TEST     	R8 1 ; if R8 then PC := 488
	482	[2515]	JMP      	488 ; PC := 488
	483	[2515]	TEST     	R7 1 ; if R7 then PC := 488
	484	[2515]	JMP      	488 ; PC := 488
	485	[2516]	GETGLOBAL	R37 K95 ; R37 := 0x3d106989
	486	[2516]	LOADK    	R38 K96 ; R38 := "Missing icon data!"
	487	[2516]	CALL     	R37 2 1 ; R37(R38)
	488	[2518]	SELF     	R37 R0 K9 ; R38 := R0; R37 := R0[0xc0a3774b]
	489	[2518]	MOVE     	R39 R4 ; R39 := R4
	490	[2518]	LOADK    	R40 K97 ; R40 := "ImageContainer"
	491	[2518]	LOADK    	R41 := 11.000000
	492	[2518]	TESTSET  	R42 R7 1 ; if R7 then PC := 518 else R42 := R7 
	493	[2518]	JMP      	518 ; PC := 518
	494	[2518]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	495	[2518]	GETTABLE 	R43 R2 K74 ; R43 := R2["mMod"]
	496	[2518]	CALL     	R42 2 2 ; R42 := R42(R43)
	497	[2518]	TEST     	R42 0 ; if not R42 then PC := 509
	498	[2518]	JMP      	509 ; PC := 509
	499	[2518]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	500	[2518]	GETTABLE 	R43 R2 K92 ; R43 := R2["Icon"]
	501	[2518]	CALL     	R42 2 2 ; R42 := R42(R43)
	502	[2518]	TEST     	R42 1 ; if R42 then PC := 509
	503	[2518]	JMP      	509 ; PC := 509
	504	[2518]	GETTABLE 	R42 R2 K94 ; R42 := R2["HideIcon"]
	505	[2518]	TEST     	R42 1 ; if R42 then PC := 509
	506	[2518]	JMP      	509 ; PC := 509
	507	[2518]	TEST     	R6 0 ; if not R6 then PC := 517
	508	[2518]	JMP      	517 ; PC := 517
	509	[2518]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	510	[2518]	GETTABLE 	R43 R2 K98 ; R43 := R2["IsColorGrid"]
	511	[2518]	CALL     	R42 2 2 ; R42 := R42(R43)
	512	[2518]	TEST     	R42 1 ; if R42 then PC := 516
	513	[2518]	JMP      	516 ; PC := 516
	514	[2518]	GETTABLE 	R42 R2 K98 ; R42 := R2["IsColorGrid"]
	515	[2518]	JMP      	518 ; PC := 518
	516	[2518]	OP_LOADBOOL	R42 0 1 ; R42 := false; PC := 517
	517	[2518]	OP_LOADBOOL	R42 1 0 ; R42 := true
	518	[2518]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	519	[2519]	LOADK    	R37 := 100.000000
	520	[2520]	TEST     	R7 0 ; if not R7 then PC := 524
	521	[2520]	JMP      	524 ; PC := 524
	522	[2521]	LOADK    	R37 := 30.000000
	523	[2521]	JMP      	528 ; PC := 528
	524	[2522]	GETTABLE 	R38 R2 K99 ; R38 := R2["ShadowIcon"]
	525	[2522]	TEST     	R38 0 ; if not R38 then PC := 528
	526	[2522]	JMP      	528 ; PC := 528
	527	[2523]	LOADK    	R37 := 50.000000
	528	[2525]	SELF     	R38 R0 K37 ; R39 := R0; R38 := R0[0xf64b7262]
	529	[2525]	MOVE     	R40 R4 ; R40 := R4
	530	[2525]	LOADK    	R41 K97 ; R41 := "ImageContainer"
	531	[2525]	LOADK    	R42 := 10.000000
	532	[2525]	MOVE     	R43 R37 ; R43 := R37
	533	[2525]	CALL     	R38 6 1 ; R38(R39,R40,R41,R42,R43)
	534	[2526]	GETTABLE 	R38 R2 K100 ; R38 := R2["IconHeight"]
	535	[2526]	TEST     	R38 1 ; if R38 then PC := 538
	536	[2526]	JMP      	538 ; PC := 538
	537	[2526]	SUB      	R38 R27 K34 ; R38 := R27 - 4.000000
	538	[2527]	GETTABLE 	R39 R2 K101 ; R39 := R2["IconWidth"]
	539	[2527]	TEST     	R39 1 ; if R39 then PC := 542
	540	[2527]	JMP      	542 ; PC := 542
	541	[2527]	MOVE     	R39 R38 ; R39 := R38
	542	[2528]	GETGLOBAL	R40 K0 ; R40 := 0x7b998233
	543	[2528]	GETTABLE 	R41 R2 K92 ; R41 := R2["Icon"]
	544	[2528]	CALL     	R40 2 2 ; R40 := R40(R41)
	545	[2528]	TEST     	R40 1 ; if R40 then PC := 729
	546	[2528]	JMP      	729 ; PC := 729
	547	[2529]	SELF     	R40 R0 K102 ; R41 := R0; R40 := R0[0x1cb415c1]
	548	[2529]	MOVE     	R42 R4 ; R42 := R4
	549	[2529]	LOADK    	R43 K103 ; R43 := ".ImageContainer.Image"
	550	[2529]	CONCAT   	R42 R42 R43 ; R42 := R42 .. R43
	551	[2529]	GETTABLE 	R43 R2 K92 ; R43 := R2["Icon"]
	552	[2529]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	553	[2531]	GETUPVAL 	R40 U8 ; R40 := U8
	554	[2531]	GETTABLE 	R40 R40 K104 ; R40 := R40[0x06d055f9]
	555	[2531]	GETTABLE 	R41 R2 K105 ; R41 := R2["IconRotation"]
	556	[2531]	EQ       	0 R41 K27 ; if R41 ~= nil then PC := 559
	557	[2531]	JMP      	559 ; PC := 559
	558	[2531]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 559
	559	[2531]	OP_LOADBOOL	R41 1 0 ; R41 := true
	560	[2531]	GETTABLE 	R42 R2 K105 ; R42 := R2["IconRotation"]
	561	[2531]	LOADK    	R43 := 0.000000
	562	[2531]	CALL     	R40 4 2 ; R40 := R40(R41,R42,R43)
	563	[2532]	SELF     	R41 R0 K37 ; R42 := R0; R41 := R0[0xf64b7262]
	564	[2532]	MOVE     	R43 R4 ; R43 := R4
	565	[2532]	LOADK    	R44 K97 ; R44 := "ImageContainer"
	566	[2532]	LOADK    	R45 := 14.000000
	567	[2532]	MOVE     	R46 R40 ; R46 := R40
	568	[2532]	CALL     	R41 6 1 ; R41(R42,R43,R44,R45,R46)
	569	[2535]	SELF     	R41 R0 K37 ; R42 := R0; R41 := R0[0xf64b7262]
	570	[2535]	MOVE     	R43 R4 ; R43 := R4
	571	[2535]	LOADK    	R44 K106 ; R44 := "ImageContainer.Image"
	572	[2535]	LOADK    	R45 := 12.000000
	573	[2535]	GETTABLE 	R46 R2 K107 ; R46 := R2["Themed"]
	574	[2535]	TEST     	R46 1 ; if R46 then PC := 579
	575	[2535]	JMP      	579 ; PC := 579
	576	[2535]	GETTABLE 	R46 R2 K101 ; R46 := R2["IconWidth"]
	577	[2535]	EQ       	1 R46 K27 ; if R46 == nil then PC := 581
	578	[2535]	JMP      	581 ; PC := 581
	579	[2535]	TESTSET  	R46 R39 1 ; if R39 then PC := 582 else R46 := R39 
	580	[2535]	JMP      	582 ; PC := 582
	581	[2535]	MUL      	R46 R39 K108 ; R46 := R39 * 1.600000
	582	[2535]	CALL     	R41 6 1 ; R41(R42,R43,R44,R45,R46)
	583	[2536]	SELF     	R41 R0 K37 ; R42 := R0; R41 := R0[0xf64b7262]
	584	[2536]	MOVE     	R43 R4 ; R43 := R4
	585	[2536]	LOADK    	R44 K106 ; R44 := "ImageContainer.Image"
	586	[2536]	LOADK    	R45 := 13.000000
	587	[2536]	MOVE     	R46 R38 ; R46 := R38
	588	[2536]	CALL     	R41 6 1 ; R41(R42,R43,R44,R45,R46)
	589	[2538]	GETUPVAL 	R41 U8 ; R41 := U8
	590	[2538]	GETTABLE 	R41 R41 K104 ; R41 := R41[0x06d055f9]
	591	[2538]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	592	[2538]	GETTABLE 	R43 R2 K109 ; R43 := R2["Material"]
	593	[2538]	CALL     	R42 2 2 ; R42 := R42(R43)
	594	[2538]	GETTABLE 	R43 R1 K110 ; R43 := R1["VisibleRangeMaterial"]
	595	[2538]	GETTABLE 	R44 R2 K109 ; R44 := R2["Material"]
	596	[2538]	CALL     	R41 4 2 ; R41 := R41(R42,R43,R44)
	597	[2539]	SELF     	R42 R0 K111 ; R43 := R0; R42 := R0[0xd5181643]
	598	[2539]	MOVE     	R44 R4 ; R44 := R4
	599	[2539]	LOADK    	R45 K103 ; R45 := ".ImageContainer.Image"
	600	[2539]	CONCAT   	R44 R44 R45 ; R44 := R44 .. R45
	601	[2539]	MOVE     	R45 R41 ; R45 := R41
	602	[2539]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	603	[2541]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	604	[2541]	GETTABLE 	R43 R2 K12 ; R43 := R2["Type"]
	605	[2541]	CALL     	R42 2 2 ; R42 := R42(R43)
	606	[2541]	TEST     	R42 1 ; if R42 then PC := 613
	607	[2541]	JMP      	613 ; PC := 613
	608	[2541]	GETTABLE 	R42 R2 K12 ; R42 := R2["Type"]
	609	[2541]	SELF     	R42 R42 K46 ; R43 := R42; R42 := R42[0xf2deaf69]
	610	[2541]	GETGLOBAL	R44 K112 ; R44 := gFocusLensType
	611	[2541]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	612	[2541]	JMP      	615 ; PC := 615
	613	[2541]	OP_LOADBOOL	R42 0 1 ; R42 := false; PC := 614
	614	[2541]	OP_LOADBOOL	R42 1 0 ; R42 := true
	615	[2542]	TEST     	R42 1 ; if R42 then PC := 630
	616	[2542]	JMP      	630 ; PC := 630
	617	[2542]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	618	[2542]	GETTABLE 	R44 R2 K113 ; R44 := R2["ResultItemType"]
	619	[2542]	CALL     	R43 2 2 ; R43 := R43(R44)
	620	[2542]	TEST     	R43 1 ; if R43 then PC := 628
	621	[2542]	JMP      	628 ; PC := 628
	622	[2542]	GETTABLE 	R43 R2 K113 ; R43 := R2["ResultItemType"]
	623	[2542]	SELF     	R43 R43 K46 ; R44 := R43; R43 := R43[0xf2deaf69]
	624	[2542]	GETGLOBAL	R45 K112 ; R45 := gFocusLensType
	625	[2542]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	626	[2542]	MOVE     	R42 R43 ; R42 := R43
	627	[2542]	JMP      	630 ; PC := 630
	628	[2542]	OP_LOADBOOL	R42 0 1 ; R42 := false; PC := 629
	629	[2542]	OP_LOADBOOL	R42 1 0 ; R42 := true
	630	[2543]	TEST     	R42 0 ; if not R42 then PC := 679
	631	[2543]	JMP      	679 ; PC := 679
	632	[2544]	GETTABLE 	R43 R2 K109 ; R43 := R2["Material"]
	633	[2545]	GETGLOBAL	R44 K0 ; R44 := 0x7b998233
	634	[2545]	MOVE     	R45 R43 ; R45 := R43
	635	[2545]	CALL     	R44 2 2 ; R44 := R44(R45)
	636	[2545]	TEST     	R44 1 ; if R44 then PC := 668
	637	[2545]	JMP      	668 ; PC := 668
	638	[2546]	GETGLOBAL	R44 K114 ; R44 := 0x0469f296
	639	[2546]	LOADK    	R45 K115 ; R45 := "DetailMapParams"
	640	[2546]	CALL     	R44 2 2 ; R44 := R44(R45)
	641	[2547]	SELF     	R45 R43 K116 ; R46 := R43; R45 := R43[0xae79653b]
	642	[2547]	MOVE     	R47 R44 ; R47 := R44
	643	[2547]	LOADK    	R48 := 1.000000
	644	[2547]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	645	[2548]	SELF     	R46 R43 K116 ; R47 := R43; R46 := R43[0xae79653b]
	646	[2548]	MOVE     	R48 R44 ; R48 := R44
	647	[2548]	LOADK    	R49 := 2.000000
	648	[2548]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	649	[2549]	SELF     	R47 R43 K116 ; R48 := R43; R47 := R43[0xae79653b]
	650	[2549]	MOVE     	R49 R44 ; R49 := R44
	651	[2549]	LOADK    	R50 := 3.000000
	652	[2549]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	653	[2550]	SELF     	R48 R43 K116 ; R49 := R43; R48 := R43[0xae79653b]
	654	[2550]	MOVE     	R50 R44 ; R50 := R44
	655	[2550]	LOADK    	R51 := 4.000000
	656	[2550]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	657	[2551]	SELF     	R49 R0 K117 ; R50 := R0; R49 := R0[0x91e13703]
	658	[2551]	MOVE     	R51 R4 ; R51 := R4
	659	[2551]	LOADK    	R52 K103 ; R52 := ".ImageContainer.Image"
	660	[2551]	CONCAT   	R51 R51 R52 ; R51 := R51 .. R52
	661	[2551]	LOADK    	R52 K115 ; R52 := "DetailMapParams"
	662	[2551]	MOVE     	R53 R45 ; R53 := R45
	663	[2551]	MOVE     	R54 R46 ; R54 := R46
	664	[2551]	MOVE     	R55 R47 ; R55 := R47
	665	[2551]	MOVE     	R56 R48 ; R56 := R48
	666	[2551]	CALL     	R49 8 1 ; R49(R50,R51,R52,R53,R54,R55,R56)
	667	[2551]	JMP      	691 ; PC := 691
	668	[2554]	SELF     	R49 R0 K117 ; R50 := R0; R49 := R0[0x91e13703]
	669	[2554]	MOVE     	R51 R4 ; R51 := R4
	670	[2554]	LOADK    	R52 K103 ; R52 := ".ImageContainer.Image"
	671	[2554]	CONCAT   	R51 R51 R52 ; R51 := R51 .. R52
	672	[2554]	LOADK    	R52 K115 ; R52 := "DetailMapParams"
	673	[2554]	LOADK    	R53 := 0.000000
	674	[2554]	LOADK    	R54 := 6.000000
	675	[2554]	LOADK    	R55 := 1.000000
	676	[2554]	LOADK    	R56 := 1.000000
	677	[2554]	CALL     	R49 8 1 ; R49(R50,R51,R52,R53,R54,R55,R56)
	678	[2555]	JMP      	691 ; PC := 691
	679	[2556]	TEST     	R29 1 ; if R29 then PC := 691
	680	[2556]	JMP      	691 ; PC := 691
	681	[2557]	SELF     	R49 R0 K117 ; R50 := R0; R49 := R0[0x91e13703]
	682	[2557]	MOVE     	R51 R4 ; R51 := R4
	683	[2557]	LOADK    	R52 K103 ; R52 := ".ImageContainer.Image"
	684	[2557]	CONCAT   	R51 R51 R52 ; R51 := R51 .. R52
	685	[2557]	LOADK    	R52 K115 ; R52 := "DetailMapParams"
	686	[2557]	LOADK    	R53 := 1.000000
	687	[2557]	LOADK    	R54 := 0.000000
	688	[2557]	LOADK    	R55 := 1.000000
	689	[2557]	LOADK    	R56 := 1.000000
	690	[2557]	CALL     	R49 8 1 ; R49(R50,R51,R52,R53,R54,R55,R56)
	691	[2560]	GETTABLE 	R49 R2 K118 ; R49 := R2["ShadowMaterial"]
	692	[2561]	GETGLOBAL	R50 K0 ; R50 := 0x7b998233
	693	[2561]	MOVE     	R51 R49 ; R51 := R49
	694	[2561]	CALL     	R50 2 2 ; R50 := R50(R51)
	695	[2561]	TEST     	R50 0 ; if not R50 then PC := 706
	696	[2561]	JMP      	706 ; PC := 706
	697	[2562]	GETUPVAL 	R50 U8 ; R50 := U8
	698	[2562]	GETTABLE 	R50 R50 K104 ; R50 := R50[0x06d055f9]
	699	[2562]	GETGLOBAL	R51 K0 ; R51 := 0x7b998233
	700	[2562]	GETTABLE 	R52 R1 K119 ; R52 := R1["ShadowVisibleRangeMaterial"]
	701	[2562]	CALL     	R51 2 2 ; R51 := R51(R52)
	702	[2562]	GETTABLE 	R52 R1 K110 ; R52 := R1["VisibleRangeMaterial"]
	703	[2562]	GETTABLE 	R53 R1 K119 ; R53 := R1["ShadowVisibleRangeMaterial"]
	704	[2562]	CALL     	R50 4 2 ; R50 := R50(R51,R52,R53)
	705	[2562]	MOVE     	R49 R50 ; R49 := R50
	706	[2565]	GETTABLE 	R50 R2 K120 ; R50 := R2["Color"]
	707	[2565]	EQ       	1 R50 K27 ; if R50 == nil then PC := 763
	708	[2565]	JMP      	763 ; PC := 763
	709	[2566]	GETTABLE 	R50 R2 K120 ; R50 := R2["Color"]
	710	[2566]	GETTABLE 	R50 R50 K121 ; R50 := R50["red"]
	711	[2566]	DIV      	R50 R50 K122 ; R50 := R50 / 255.000000
	712	[2567]	GETTABLE 	R51 R2 K120 ; R51 := R2["Color"]
	713	[2567]	GETTABLE 	R51 R51 K123 ; R51 := R51["green"]
	714	[2567]	DIV      	R51 R51 K122 ; R51 := R51 / 255.000000
	715	[2568]	GETTABLE 	R52 R2 K120 ; R52 := R2["Color"]
	716	[2568]	GETTABLE 	R52 R52 K124 ; R52 := R52["blue"]
	717	[2568]	DIV      	R52 R52 K122 ; R52 := R52 / 255.000000
	718	[2569]	SELF     	R53 R0 K117 ; R54 := R0; R53 := R0[0x91e13703]
	719	[2569]	MOVE     	R55 R4 ; R55 := R4
	720	[2569]	LOADK    	R56 K103 ; R56 := ".ImageContainer.Image"
	721	[2569]	CONCAT   	R55 R55 R56 ; R55 := R55 .. R56
	722	[2569]	LOADK    	R56 K125 ; R56 := "DetailMapTint"
	723	[2569]	MOVE     	R57 R50 ; R57 := R50
	724	[2569]	MOVE     	R58 R51 ; R58 := R51
	725	[2569]	MOVE     	R59 R52 ; R59 := R52
	726	[2569]	LOADK    	R60 := 1.000000
	727	[2569]	CALL     	R53 8 1 ; R53(R54,R55,R56,R57,R58,R59,R60)
	728	[2570]	JMP      	763 ; PC := 763
	729	[2571]	TEST     	R7 1 ; if R7 then PC := 733
	730	[2571]	JMP      	733 ; PC := 733
	731	[2571]	TEST     	R8 0 ; if not R8 then PC := 763
	732	[2571]	JMP      	763 ; PC := 763
	733	[2572]	SELF     	R53 R0 K102 ; R54 := R0; R53 := R0[0x1cb415c1]
	734	[2572]	MOVE     	R55 R4 ; R55 := R4
	735	[2572]	LOADK    	R56 K103 ; R56 := ".ImageContainer.Image"
	736	[2572]	CONCAT   	R55 R55 R56 ; R55 := R55 .. R56
	737	[2572]	GETGLOBAL	R56 K126 ; R56 := 0x0032441c
	738	[2572]	GETTABLE 	R56 R56 K127 ; R56 := R56["UITexture_EmptySlot"]
	739	[2572]	CALL     	R53 4 1 ; R53(R54,R55,R56)
	740	[2573]	SELF     	R53 R0 K37 ; R54 := R0; R53 := R0[0xf64b7262]
	741	[2573]	MOVE     	R55 R4 ; R55 := R4
	742	[2573]	LOADK    	R56 K106 ; R56 := "ImageContainer.Image"
	743	[2573]	LOADK    	R57 := 12.000000
	744	[2573]	SUB      	R58 R27 K128 ; R58 := R27 - 32.000000
	745	[2573]	CALL     	R53 6 1 ; R53(R54,R55,R56,R57,R58)
	746	[2574]	SELF     	R53 R0 K37 ; R54 := R0; R53 := R0[0xf64b7262]
	747	[2574]	MOVE     	R55 R4 ; R55 := R4
	748	[2574]	LOADK    	R56 K106 ; R56 := "ImageContainer.Image"
	749	[2574]	LOADK    	R57 := 13.000000
	750	[2574]	SUB      	R58 R27 K128 ; R58 := R27 - 32.000000
	751	[2574]	CALL     	R53 6 1 ; R53(R54,R55,R56,R57,R58)
	752	[2575]	GETGLOBAL	R53 K0 ; R53 := 0x7b998233
	753	[2575]	GETTABLE 	R54 R1 K110 ; R54 := R1["VisibleRangeMaterial"]
	754	[2575]	CALL     	R53 2 2 ; R53 := R53(R54)
	755	[2575]	TEST     	R53 1 ; if R53 then PC := 763
	756	[2575]	JMP      	763 ; PC := 763
	757	[2576]	SELF     	R53 R0 K111 ; R54 := R0; R53 := R0[0xd5181643]
	758	[2576]	MOVE     	R55 R4 ; R55 := R4
	759	[2576]	LOADK    	R56 K103 ; R56 := ".ImageContainer.Image"
	760	[2576]	CONCAT   	R55 R55 R56 ; R55 := R55 .. R56
	761	[2576]	GETTABLE 	R56 R1 K110 ; R56 := R1["VisibleRangeMaterial"]
	762	[2576]	CALL     	R53 4 1 ; R53(R54,R55,R56)
	763	[2579]	SELF     	R53 R0 K37 ; R54 := R0; R53 := R0[0xf64b7262]
	764	[2579]	MOVE     	R55 R4 ; R55 := R4
	765	[2579]	LOADK    	R56 K106 ; R56 := "ImageContainer.Image"
	766	[2579]	LOADK    	R57 := 1.000000
	767	[2579]	GETUPVAL 	R58 U8 ; R58 := U8
	768	[2579]	GETTABLE 	R58 R58 K104 ; R58 := R58[0x06d055f9]
	769	[2579]	TESTSET  	R59 R7 1 ; if R7 then PC := 772 else R59 := R7 
	770	[2579]	JMP      	772 ; PC := 772
	771	[2579]	MOVE     	R59 R8 ; R59 := R8
	772	[2579]	LOADK    	R60 := -3.000000
	773	[2579]	LOADK    	R61 := 0.000000
	774	[2579]	CALL     	R58 4 0 ; R58,... := R58(R59,R60,R61)
	775	[2579]	CALL     	R53 0 1 ; R53(R54,...)
	776	[2581]	GETTABLE 	R53 R2 K98 ; R53 := R2["IsColorGrid"]
	777	[2581]	TEST     	R53 0 ; if not R53 then PC := 819
	778	[2581]	JMP      	819 ; PC := 819
	779	[2582]	SELF     	R53 R0 K37 ; R54 := R0; R53 := R0[0xf64b7262]
	780	[2582]	MOVE     	R55 R4 ; R55 := R4
	781	[2582]	LOADK    	R56 K97 ; R56 := "ImageContainer"
	782	[2582]	LOADK    	R57 := 9.000000
	783	[2582]	GETTABLE 	R58 R2 K120 ; R58 := R2["Color"]
	784	[2582]	CALL     	R53 6 1 ; R53(R54,R55,R56,R57,R58)
	785	[2583]	SELF     	R53 R0 K37 ; R54 := R0; R53 := R0[0xf64b7262]
	786	[2583]	MOVE     	R55 R4 ; R55 := R4
	787	[2583]	LOADK    	R56 K106 ; R56 := "ImageContainer.Image"
	788	[2583]	LOADK    	R57 := 12.000000
	789	[2583]	GETTABLE 	R58 R2 K107 ; R58 := R2["Themed"]
	790	[2583]	TEST     	R58 1 ; if R58 then PC := 795
	791	[2583]	JMP      	795 ; PC := 795
	792	[2583]	GETTABLE 	R58 R2 K101 ; R58 := R2["IconWidth"]
	793	[2583]	EQ       	1 R58 K27 ; if R58 == nil then PC := 797
	794	[2583]	JMP      	797 ; PC := 797
	795	[2583]	TESTSET  	R58 R39 1 ; if R39 then PC := 798 else R58 := R39 
	796	[2583]	JMP      	798 ; PC := 798
	797	[2583]	MUL      	R58 R39 K108 ; R58 := R39 * 1.600000
	798	[2583]	CALL     	R53 6 1 ; R53(R54,R55,R56,R57,R58)
	799	[2584]	SELF     	R53 R0 K37 ; R54 := R0; R53 := R0[0xf64b7262]
	800	[2584]	MOVE     	R55 R4 ; R55 := R4
	801	[2584]	LOADK    	R56 K106 ; R56 := "ImageContainer.Image"
	802	[2584]	LOADK    	R57 := 13.000000
	803	[2584]	MOVE     	R58 R38 ; R58 := R38
	804	[2584]	CALL     	R53 6 1 ; R53(R54,R55,R56,R57,R58)
	805	[2585]	GETUPVAL 	R53 U8 ; R53 := U8
	806	[2585]	GETTABLE 	R53 R53 K104 ; R53 := R53[0x06d055f9]
	807	[2585]	GETGLOBAL	R54 K0 ; R54 := 0x7b998233
	808	[2585]	GETTABLE 	R55 R2 K109 ; R55 := R2["Material"]
	809	[2585]	CALL     	R54 2 2 ; R54 := R54(R55)
	810	[2585]	GETTABLE 	R55 R1 K110 ; R55 := R1["VisibleRangeMaterial"]
	811	[2585]	GETTABLE 	R56 R2 K109 ; R56 := R2["Material"]
	812	[2585]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	813	[2586]	SELF     	R54 R0 K111 ; R55 := R0; R54 := R0[0xd5181643]
	814	[2586]	MOVE     	R56 R4 ; R56 := R4
	815	[2586]	LOADK    	R57 K103 ; R57 := ".ImageContainer.Image"
	816	[2586]	CONCAT   	R56 R56 R57 ; R56 := R56 .. R57
	817	[2586]	MOVE     	R57 R53 ; R57 := R53
	818	[2586]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	819	[2590]	SELF     	R54 R0 K37 ; R55 := R0; R54 := R0[0xf64b7262]
	820	[2590]	MOVE     	R56 R4 ; R56 := R4
	821	[2590]	LOADK    	R57 K129 ; R57 := "Background"
	822	[2590]	LOADK    	R58 := 10.000000
	823	[2590]	GETUPVAL 	R59 U8 ; R59 := U8
	824	[2590]	GETTABLE 	R59 R59 K104 ; R59 := R59[0x06d055f9]
	825	[2590]	GETGLOBAL	R60 K0 ; R60 := 0x7b998233
	826	[2590]	GETTABLE 	R61 R2 K129 ; R61 := R2["Background"]
	827	[2590]	CALL     	R60 2 2 ; R60 := R60(R61)
	828	[2590]	TEST     	R60 1 ; if R60 then PC := 832
	829	[2590]	JMP      	832 ; PC := 832
	830	[2590]	NOT      	R60 R6 ; R60 := not R6
	831	[2590]	JMP      	834 ; PC := 834
	832	[2590]	OP_LOADBOOL	R60 0 1 ; R60 := false; PC := 833
	833	[2590]	OP_LOADBOOL	R60 1 0 ; R60 := true
	834	[2590]	LOADK    	R61 := 100.000000
	835	[2590]	LOADK    	R62 := 0.000000
	836	[2590]	CALL     	R59 4 0 ; R59,... := R59(R60,R61,R62)
	837	[2590]	CALL     	R54 0 1 ; R54(R55,...)
	838	[2591]	SELF     	R54 R0 K102 ; R55 := R0; R54 := R0[0x1cb415c1]
	839	[2591]	MOVE     	R56 R4 ; R56 := R4
	840	[2591]	LOADK    	R57 K130 ; R57 := ".Background"
	841	[2591]	CONCAT   	R56 R56 R57 ; R56 := R56 .. R57
	842	[2591]	GETTABLE 	R57 R2 K129 ; R57 := R2["Background"]
	843	[2591]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	844	[2592]	SELF     	R54 R0 K37 ; R55 := R0; R54 := R0[0xf64b7262]
	845	[2592]	MOVE     	R56 R4 ; R56 := R4
	846	[2592]	LOADK    	R57 K129 ; R57 := "Background"
	847	[2592]	LOADK    	R58 := 12.000000
	848	[2592]	MOVE     	R59 R39 ; R59 := R39
	849	[2592]	CALL     	R54 6 1 ; R54(R55,R56,R57,R58,R59)
	850	[2593]	SELF     	R54 R0 K37 ; R55 := R0; R54 := R0[0xf64b7262]
	851	[2593]	MOVE     	R56 R4 ; R56 := R4
	852	[2593]	LOADK    	R57 K129 ; R57 := "Background"
	853	[2593]	LOADK    	R58 := 13.000000
	854	[2593]	MOVE     	R59 R38 ; R59 := R38
	855	[2593]	CALL     	R54 6 1 ; R54(R55,R56,R57,R58,R59)
	856	[2596]	GETUPVAL 	R54 U8 ; R54 := U8
	857	[2596]	GETTABLE 	R54 R54 K104 ; R54 := R54[0x06d055f9]
	858	[2596]	GETGLOBAL	R55 K0 ; R55 := 0x7b998233
	859	[2596]	GETTABLE 	R56 R1 K131 ; R56 := R1["RectangleVisibleRangeMaterial"]
	860	[2596]	CALL     	R55 2 2 ; R55 := R55(R56)
	861	[2596]	GETGLOBAL	R56 K126 ; R56 := 0x0032441c
	862	[2596]	GETTABLE 	R56 R56 K132 ; R56 := R56["UIMaterial_RectangleNoDepth"]
	863	[2596]	GETTABLE 	R57 R1 K131 ; R57 := R1["RectangleVisibleRangeMaterial"]
	864	[2596]	CALL     	R54 4 2 ; R54 := R54(R55,R56,R57)
	865	[2597]	SELF     	R55 R0 K111 ; R56 := R0; R55 := R0[0xd5181643]
	866	[2597]	MOVE     	R57 R4 ; R57 := R4
	867	[2597]	LOADK    	R58 K36 ; R58 := ".RectangleBg"
	868	[2597]	CONCAT   	R57 R57 R58 ; R57 := R57 .. R58
	869	[2597]	MOVE     	R58 R54 ; R58 := R54
	870	[2597]	CALL     	R55 4 1 ; R55(R56,R57,R58)
	871	[2599]	SELF     	R55 R0 K37 ; R56 := R0; R55 := R0[0xf64b7262]
	872	[2599]	MOVE     	R57 R4 ; R57 := R4
	873	[2599]	LOADK    	R58 K133 ; R58 := "CornerPiece"
	874	[2599]	LOADK    	R59 := 10.000000
	875	[2599]	GETUPVAL 	R60 U8 ; R60 := U8
	876	[2599]	GETTABLE 	R60 R60 K104 ; R60 := R60[0x06d055f9]
	877	[2599]	GETTABLE 	R61 R1 K134 ; R61 := R1["mUseCornerForSelected"]
	878	[2599]	TEST     	R61 0 ; if not R61 then PC := 881
	879	[2599]	JMP      	881 ; PC := 881
	880	[2599]	GETTABLE 	R61 R3 K135 ; R61 := R3["IsSelected"]
	881	[2599]	LOADK    	R62 := 100.000000
	882	[2599]	LOADK    	R63 := 0.000000
	883	[2599]	CALL     	R60 4 0 ; R60,... := R60(R61,R62,R63)
	884	[2599]	CALL     	R55 0 1 ; R55(R56,...)
	885	[2602]	SELF     	R55 R0 K9 ; R56 := R0; R55 := R0[0xc0a3774b]
	886	[2602]	MOVE     	R57 R4 ; R57 := R4
	887	[2602]	LOADK    	R58 K136 ; R58 := "Locked"
	888	[2602]	LOADK    	R59 := 11.000000
	889	[2602]	GETTABLE 	R60 R3 K136 ; R60 := R3["Locked"]
	890	[2602]	EQ       	1 R60 K2 ; if R60 == true then PC := 893
	891	[2602]	JMP      	893 ; PC := 893
	892	[2602]	OP_LOADBOOL	R60 0 1 ; R60 := false; PC := 893
	893	[2602]	OP_LOADBOOL	R60 1 0 ; R60 := true
	894	[2602]	CALL     	R55 6 1 ; R55(R56,R57,R58,R59,R60)
	895	[2603]	GETTABLE 	R55 R3 K136 ; R55 := R3["Locked"]
	896	[2603]	TEST     	R55 0 ; if not R55 then PC := 1021
	897	[2603]	JMP      	1021 ; PC := 1021
	898	[2604]	NEWTABLE 	R55 0 2 ; R55 := {}
	899	[2604]	SETTABLE 	R55 K137 K138 ; R55["Width"] := 24.000000
	900	[2604]	SETTABLE 	R55 K139 K138 ; R55["Height"] := 24.000000
	901	[2606]	GETTABLE 	R56 R3 K140 ; R56 := R3["HideLockLabel"]
	902	[2606]	NOT      	R56 R56 ; R56 := not R56
	903	[2608]	SELF     	R57 R0 K9 ; R58 := R0; R57 := R0[0xc0a3774b]
	904	[2608]	MOVE     	R59 R4 ; R59 := R4
	905	[2608]	LOADK    	R60 K141 ; R60 := "Locked.Label"
	906	[2608]	LOADK    	R61 := 11.000000
	907	[2608]	MOVE     	R62 R56 ; R62 := R56
	908	[2608]	CALL     	R57 6 1 ; R57(R58,R59,R60,R61,R62)
	909	[2609]	SELF     	R57 R0 K9 ; R58 := R0; R57 := R0[0xc0a3774b]
	910	[2609]	MOVE     	R59 R4 ; R59 := R4
	911	[2609]	LOADK    	R60 K142 ; R60 := "Locked.LabelBg"
	912	[2609]	LOADK    	R61 := 11.000000
	913	[2609]	MOVE     	R62 R56 ; R62 := R56
	914	[2609]	CALL     	R57 6 1 ; R57(R58,R59,R60,R61,R62)
	915	[2611]	SELF     	R57 R0 K88 ; R58 := R0; R57 := R0[0xe261aa96]
	916	[2611]	MOVE     	R59 R4 ; R59 := R4
	917	[2611]	LOADK    	R60 K141 ; R60 := "Locked.Label"
	918	[2611]	LOADK    	R61 := 38.000000
	919	[2611]	LOADK    	R62 K143 ; R62 := "center"
	920	[2611]	CALL     	R57 6 1 ; R57(R58,R59,R60,R61,R62)
	921	[2612]	GETGLOBAL	R57 K83 ; R57 := 0x7f5022cf
	922	[2612]	GETTABLE 	R57 R57 K144 ; R57 := R57[0x3f3e4d12]
	923	[2612]	SELF     	R58 R0 K145 ; R59 := R0; R58 := R0[0x42b04007]
	924	[2612]	GETUPVAL 	R60 U8 ; R60 := U8
	925	[2612]	GETTABLE 	R60 R60 K104 ; R60 := R60[0x06d055f9]
	926	[2612]	GETTABLE 	R61 R3 K146 ; R61 := R3["LockedMsg"]
	927	[2612]	EQ       	0 R61 K27 ; if R61 ~= nil then PC := 930
	928	[2612]	JMP      	930 ; PC := 930
	929	[2612]	OP_LOADBOOL	R61 0 1 ; R61 := false; PC := 930
	930	[2612]	OP_LOADBOOL	R61 1 0 ; R61 := true
	931	[2612]	GETTABLE 	R62 R3 K146 ; R62 := R3["LockedMsg"]
	932	[2612]	LOADK    	R63 K23 ; R63 := ""
	933	[2612]	CALL     	R60 4 2 ; R60 := R60(R61,R62,R63)
	934	[2612]	OP_LOADBOOL	R61 1 0 ; R61 := true
	935	[2612]	CALL     	R58 4 0 ; R58,... := R58(R59,R60,R61)
	936	[2612]	CALL     	R57 0 2 ; R57 := R57(R58,...)
	937	[2613]	SELF     	R58 R0 K88 ; R59 := R0; R58 := R0[0xe261aa96]
	938	[2613]	MOVE     	R60 R4 ; R60 := R4
	939	[2613]	LOADK    	R61 K141 ; R61 := "Locked.Label"
	940	[2613]	LOADK    	R62 := 29.000000
	941	[2613]	MOVE     	R63 R57 ; R63 := R57
	942	[2613]	CALL     	R58 6 1 ; R58(R59,R60,R61,R62,R63)
	943	[2614]	SELF     	R58 R0 K147 ; R59 := R0; R58 := R0[0x2ce15376]
	944	[2614]	MOVE     	R60 R4 ; R60 := R4
	945	[2614]	LOADK    	R61 K141 ; R61 := "Locked.Label"
	946	[2614]	LOADK    	R62 := 34.000000
	947	[2614]	CALL     	R58 5 2 ; R58 := R58(R59,R60,R61,R62)
	948	[2615]	SELF     	R59 R0 K37 ; R60 := R0; R59 := R0[0xf64b7262]
	949	[2615]	MOVE     	R61 R4 ; R61 := R4
	950	[2615]	LOADK    	R62 K142 ; R62 := "Locked.LabelBg"
	951	[2615]	LOADK    	R63 := 13.000000
	952	[2615]	ADD      	R64 R58 K148 ; R64 := R58 + 6.000000
	953	[2615]	CALL     	R59 6 1 ; R59(R60,R61,R62,R63,R64)
	954	[2616]	SELF     	R59 R0 K37 ; R60 := R0; R59 := R0[0xf64b7262]
	955	[2616]	MOVE     	R61 R4 ; R61 := R4
	956	[2616]	LOADK    	R62 K149 ; R62 := "Locked.LockIcon"
	957	[2616]	LOADK    	R63 := 1.000000
	958	[2616]	DIV      	R64 R58 K39 ; R64 := R58 / 2.000000
	959	[2616]	UNM      	R64 R64 ; R64 := ^ R64
	960	[2616]	GETTABLE 	R65 R3 K150 ; R65 := R3["LockedIconY"]
	961	[2616]	TEST     	R65 1 ; if R65 then PC := 964
	962	[2616]	JMP      	964 ; PC := 964
	963	[2616]	LOADK    	R65 := 16.000000
	964	[2616]	SUB      	R64 R64 R65 ; R64 := R64 - R65
	965	[2616]	CALL     	R59 6 1 ; R59(R60,R61,R62,R63,R64)
	966	[2618]	GETTABLE 	R59 R3 K151 ; R59 := R3["LockIconWidth"]
	967	[2618]	TEST     	R59 1 ; if R59 then PC := 976
	968	[2618]	JMP      	976 ; PC := 976
	969	[2618]	GETUPVAL 	R59 U8 ; R59 := U8
	970	[2618]	GETTABLE 	R59 R59 K104 ; R59 := R59[0x06d055f9]
	971	[2618]	MOVE     	R60 R56 ; R60 := R56
	972	[2618]	GETTABLE 	R61 R55 K137 ; R61 := R55["Width"]
	973	[2618]	GETTABLE 	R62 R55 K137 ; R62 := R55["Width"]
	974	[2618]	MUL      	R62 R62 K39 ; R62 := R62 * 2.000000
	975	[2618]	CALL     	R59 4 2 ; R59 := R59(R60,R61,R62)
	976	[2619]	GETTABLE 	R60 R3 K152 ; R60 := R3["LockIconHeight"]
	977	[2619]	TEST     	R60 1 ; if R60 then PC := 986
	978	[2619]	JMP      	986 ; PC := 986
	979	[2619]	GETUPVAL 	R60 U8 ; R60 := U8
	980	[2619]	GETTABLE 	R60 R60 K104 ; R60 := R60[0x06d055f9]
	981	[2619]	MOVE     	R61 R56 ; R61 := R56
	982	[2619]	GETTABLE 	R62 R55 K139 ; R62 := R55["Height"]
	983	[2619]	GETTABLE 	R63 R55 K139 ; R63 := R55["Height"]
	984	[2619]	MUL      	R63 R63 K39 ; R63 := R63 * 2.000000
	985	[2619]	CALL     	R60 4 2 ; R60 := R60(R61,R62,R63)
	986	[2621]	SELF     	R61 R0 K37 ; R62 := R0; R61 := R0[0xf64b7262]
	987	[2621]	MOVE     	R63 R4 ; R63 := R4
	988	[2621]	LOADK    	R64 K149 ; R64 := "Locked.LockIcon"
	989	[2621]	LOADK    	R65 := 12.000000
	990	[2621]	MOVE     	R66 R59 ; R66 := R59
	991	[2621]	CALL     	R61 6 1 ; R61(R62,R63,R64,R65,R66)
	992	[2622]	SELF     	R61 R0 K37 ; R62 := R0; R61 := R0[0xf64b7262]
	993	[2622]	MOVE     	R63 R4 ; R63 := R4
	994	[2622]	LOADK    	R64 K149 ; R64 := "Locked.LockIcon"
	995	[2622]	LOADK    	R65 := 13.000000
	996	[2622]	MOVE     	R66 R60 ; R66 := R60
	997	[2622]	CALL     	R61 6 1 ; R61(R62,R63,R64,R65,R66)
	998	[2624]	SELF     	R61 R0 K102 ; R62 := R0; R61 := R0[0x1cb415c1]
	999	[2624]	MOVE     	R63 R4 ; R63 := R4
	1000	[2624]	LOADK    	R64 K153 ; R64 := ".Locked.LockIcon"
	1001	[2624]	CONCAT   	R63 R63 R64 ; R63 := R63 .. R64
	1002	[2624]	GETTABLE 	R64 R3 K154 ; R64 := R3["LockedIcon"]
	1003	[2624]	TEST     	R64 1 ; if R64 then PC := 1007
	1004	[2624]	JMP      	1007 ; PC := 1007
	1005	[2624]	GETGLOBAL	R64 K126 ; R64 := 0x0032441c
	1006	[2624]	GETTABLE 	R64 R64 K155 ; R64 := R64["UITexture_Locked"]
	1007	[2624]	CALL     	R61 4 1 ; R61(R62,R63,R64)
	1008	[2625]	SELF     	R61 R0 K9 ; R62 := R0; R61 := R0[0xc0a3774b]
	1009	[2625]	MOVE     	R63 R4 ; R63 := R4
	1010	[2625]	LOADK    	R64 K149 ; R64 := "Locked.LockIcon"
	1011	[2625]	LOADK    	R65 := 11.000000
	1012	[2625]	GETTABLE 	R66 R3 K156 ; R66 := R3["HideLockIcon"]
	1013	[2625]	EQ       	1 R66 K27 ; if R66 == nil then PC := 1019
	1014	[2625]	JMP      	1019 ; PC := 1019
	1015	[2625]	GETTABLE 	R66 R3 K156 ; R66 := R3["HideLockIcon"]
	1016	[2625]	NOT      	R66 R66 ; R66 := not R66
	1017	[2625]	JMP      	1020 ; PC := 1020
	1018	[2625]	OP_LOADBOOL	R66 0 1 ; R66 := false; PC := 1019
	1019	[2625]	OP_LOADBOOL	R66 1 0 ; R66 := true
	1020	[2625]	CALL     	R61 6 1 ; R61(R62,R63,R64,R65,R66)
	1021	[2629]	SELF     	R61 R0 K9 ; R62 := R0; R61 := R0[0xc0a3774b]
	1022	[2629]	MOVE     	R63 R4 ; R63 := R4
	1023	[2629]	LOADK    	R64 K157 ; R64 := "Flare"
	1024	[2629]	LOADK    	R65 := 11.000000
	1025	[2629]	OP_LOADBOOL	R66 0 0 ; R66 := false
	1026	[2629]	CALL     	R61 6 1 ; R61(R62,R63,R64,R65,R66)
	1027	[2632]	GETGLOBAL	R61 K0 ; R61 := 0x7b998233
	1028	[2632]	GETTABLE 	R62 R1 K110 ; R62 := R1["VisibleRangeMaterial"]
	1029	[2632]	CALL     	R61 2 2 ; R61 := R61(R62)
	1030	[2632]	TEST     	R61 1 ; if R61 then PC := 1088
	1031	[2632]	JMP      	1088 ; PC := 1088
	1032	[2633]	NEWTABLE 	R61 8 0 ; R61 := {}
	1033	[2633]	LOADK    	R62 K130 ; R62 := ".Background"
	1034	[2633]	LOADK    	R63 K158 ; R63 := ".Blurer"
	1035	[2633]	LOADK    	R64 K159 ; R64 := ".Locked.LabelBg"
	1036	[2633]	LOADK    	R65 K160 ; R65 := ".Locked.Gradient"
	1037	[2633]	LOADK    	R66 K153 ; R66 := ".Locked.LockIcon"
	1038	[2633]	LOADK    	R67 K161 ; R67 := ".Highlight"
	1039	[2633]	LOADK    	R68 K162 ; R68 := ".NameBg"
	1040	[2633]	LOADK    	R69 K163 ; R69 := ".CornerPiece"
	1041	[2633]	SETLIST  	R61 8 1 ; R61[(1-1)*FPF+i] := R(61+i), 1 <= i <= 8
	1042	[2634]	LOADK    	R62 := 1.000000
	1043	[2634]	LEN      	R63 R11 ; R63 := # R11
	1044	[2634]	LOADK    	R64 := 1.000000
	1045	[2634]	FORPREP  	R62 1074 ; R62 -= R64; PC := 1074
	1046	[2635]	LOADK    	R66 K164 ; R66 := ".TagContainer.Tag"
	1047	[2635]	GETGLOBAL	R67 K165 ; R67 := 0x64fb1586
	1048	[2635]	MOVE     	R68 R65 ; R68 := R65
	1049	[2635]	CALL     	R67 2 2 ; R67 := R67(R68)
	1050	[2635]	CONCAT   	R66 R66 R67 ; R66 := R66 .. R67
	1051	[2636]	GETTABLE 	R67 R11 R65 ; R67 := R11[R65]
	1052	[2636]	GETTABLE 	R67 R67 K12 ; R67 := R67["Type"]
	1053	[2636]	GETGLOBAL	R68 K166 ; R68 := LABEL_TYPE_NEW
	1054	[2636]	EQ       	0 R67 R68 ; if R67 ~= R68 then PC := 1067
	1055	[2636]	JMP      	1067 ; PC := 1067
	1056	[2636]	GETTABLE 	R67 R1 K167 ; R67 := R1["RippleMaterial"]
	1057	[2636]	EQ       	1 R67 K27 ; if R67 == nil then PC := 1067
	1058	[2636]	JMP      	1067 ; PC := 1067
	1059	[2637]	SELF     	R67 R0 K111 ; R68 := R0; R67 := R0[0xd5181643]
	1060	[2637]	MOVE     	R69 R4 ; R69 := R4
	1061	[2637]	MOVE     	R70 R66 ; R70 := R66
	1062	[2637]	LOADK    	R71 K168 ; R71 := ".Icon"
	1063	[2637]	CONCAT   	R69 R69 R71 ; R69 := R69 .. R70 .. R71
	1064	[2637]	GETTABLE 	R70 R1 K167 ; R70 := R1["RippleMaterial"]
	1065	[2637]	CALL     	R67 4 1 ; R67(R68,R69,R70)
	1066	[2637]	JMP      	1074 ; PC := 1074
	1067	[2639]	GETGLOBAL	R67 K24 ; R67 := 0x33bdd652
	1068	[2639]	GETTABLE 	R67 R67 K25 ; R67 := R67[0x23d5322f]
	1069	[2639]	MOVE     	R68 R61 ; R68 := R61
	1070	[2639]	MOVE     	R69 R66 ; R69 := R66
	1071	[2639]	LOADK    	R70 K168 ; R70 := ".Icon"
	1072	[2639]	CONCAT   	R69 R69 R70 ; R69 := R69 .. R70
	1073	[2639]	CALL     	R67 3 1 ; R67(R68,R69)
	1074	[2634]	FORLOOP  	R62 1046 ; R62 += R64; if R62 <= R63 then begin PC := 1046; R65 := R62 end
	1075	[2642]	GETGLOBAL	R67 K11 ; R67 := 0xc8802016
	1076	[2642]	MOVE     	R68 R61 ; R68 := R61
	1077	[2642]	CALL     	R67 2 4 ; R67,R68,R69 := R67(R68)
	1078	[2642]	JMP      	1085 ; PC := 1085
	1079	[2643]	SELF     	R72 R0 K111 ; R73 := R0; R72 := R0[0xd5181643]
	1080	[2643]	MOVE     	R74 R4 ; R74 := R4
	1081	[2643]	MOVE     	R75 R71 ; R75 := R71
	1082	[2643]	CONCAT   	R74 R74 R75 ; R74 := R74 .. R75
	1083	[2643]	GETTABLE 	R75 R1 K110 ; R75 := R1["VisibleRangeMaterial"]
	1084	[2643]	CALL     	R72 4 1 ; R72(R73,R74,R75)
	1085	[2642]	TFORLOOP 	R67 2 ; R70,R71 := R67(R68,R69); if R70 ~= nil then begin PC = 1079; R69 := R70 end
	1086	[2643]	JMP      	1079 ; PC := 1079
	1087	[2644]	JMP      	1121 ; PC := 1121
	1088	[2645]	GETTABLE 	R72 R1 K167 ; R72 := R1["RippleMaterial"]
	1089	[2645]	EQ       	1 R72 K27 ; if R72 == nil then PC := 1121
	1090	[2645]	JMP      	1121 ; PC := 1121
	1091	[2646]	LOADK    	R72 := 1.000000
	1092	[2646]	LEN      	R73 R11 ; R73 := # R11
	1093	[2646]	LOADK    	R74 := 1.000000
	1094	[2646]	FORPREP  	R72 1120 ; R72 -= R74; PC := 1120
	1095	[2647]	LOADK    	R76 K164 ; R76 := ".TagContainer.Tag"
	1096	[2647]	GETGLOBAL	R77 K165 ; R77 := 0x64fb1586
	1097	[2647]	MOVE     	R78 R75 ; R78 := R75
	1098	[2647]	CALL     	R77 2 2 ; R77 := R77(R78)
	1099	[2647]	CONCAT   	R76 R76 R77 ; R76 := R76 .. R77
	1100	[2648]	GETTABLE 	R77 R11 R75 ; R77 := R11[R75]
	1101	[2648]	GETTABLE 	R77 R77 K12 ; R77 := R77["Type"]
	1102	[2648]	GETGLOBAL	R78 K166 ; R78 := LABEL_TYPE_NEW
	1103	[2648]	EQ       	0 R77 R78 ; if R77 ~= R78 then PC := 1113
	1104	[2648]	JMP      	1113 ; PC := 1113
	1105	[2649]	SELF     	R77 R0 K111 ; R78 := R0; R77 := R0[0xd5181643]
	1106	[2649]	MOVE     	R79 R4 ; R79 := R4
	1107	[2649]	MOVE     	R80 R76 ; R80 := R76
	1108	[2649]	LOADK    	R81 K168 ; R81 := ".Icon"
	1109	[2649]	CONCAT   	R79 R79 R81 ; R79 := R79 .. R80 .. R81
	1110	[2649]	GETTABLE 	R80 R1 K167 ; R80 := R1["RippleMaterial"]
	1111	[2649]	CALL     	R77 4 1 ; R77(R78,R79,R80)
	1112	[2649]	JMP      	1120 ; PC := 1120
	1113	[2651]	SELF     	R77 R0 K111 ; R78 := R0; R77 := R0[0xd5181643]
	1114	[2651]	MOVE     	R79 R4 ; R79 := R4
	1115	[2651]	MOVE     	R80 R76 ; R80 := R76
	1116	[2651]	LOADK    	R81 K168 ; R81 := ".Icon"
	1117	[2651]	CONCAT   	R79 R79 R81 ; R79 := R79 .. R80 .. R81
	1118	[2651]	LOADNIL  	R80 R80 ; R80 := nil
	1119	[2651]	CALL     	R77 4 1 ; R77(R78,R79,R80)
	1120	[2646]	FORLOOP  	R72 1095 ; R72 += R74; if R72 <= R73 then begin PC := 1095; R75 := R72 end
	1121	[2656]	GETGLOBAL	R77 K0 ; R77 := 0x7b998233
	1122	[2656]	GETTABLE 	R78 R1 K169 ; R78 := R1["TextVisibleRangeMaterial"]
	1123	[2656]	CALL     	R77 2 2 ; R77 := R77(R78)
	1124	[2656]	TEST     	R77 1 ; if R77 then PC := 1166
	1125	[2656]	JMP      	1166 ; PC := 1166
	1126	[2657]	NEWTABLE 	R77 2 0 ; R77 := {}
	1127	[2657]	LOADK    	R78 K90 ; R78 := ".ItemName"
	1128	[2657]	LOADK    	R79 K170 ; R79 := ".Locked.Label"
	1129	[2657]	SETLIST  	R77 2 1 ; R77[(1-1)*FPF+i] := R(77+i), 1 <= i <= 2
	1130	[2658]	LOADK    	R78 := 1.000000
	1131	[2658]	LEN      	R79 R11 ; R79 := # R11
	1132	[2658]	LOADK    	R80 := 1.000000
	1133	[2658]	FORPREP  	R78 1153 ; R78 -= R80; PC := 1153
	1134	[2659]	LOADK    	R82 K164 ; R82 := ".TagContainer.Tag"
	1135	[2659]	GETGLOBAL	R83 K165 ; R83 := 0x64fb1586
	1136	[2659]	MOVE     	R84 R81 ; R84 := R81
	1137	[2659]	CALL     	R83 2 2 ; R83 := R83(R84)
	1138	[2659]	CONCAT   	R82 R82 R83 ; R82 := R82 .. R83
	1139	[2660]	GETGLOBAL	R83 K24 ; R83 := 0x33bdd652
	1140	[2660]	GETTABLE 	R83 R83 K25 ; R83 := R83[0x23d5322f]
	1141	[2660]	MOVE     	R84 R77 ; R84 := R77
	1142	[2660]	MOVE     	R85 R82 ; R85 := R82
	1143	[2660]	LOADK    	R86 K171 ; R86 := ".Label"
	1144	[2660]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	1145	[2660]	CALL     	R83 3 1 ; R83(R84,R85)
	1146	[2661]	GETGLOBAL	R83 K24 ; R83 := 0x33bdd652
	1147	[2661]	GETTABLE 	R83 R83 K25 ; R83 := R83[0x23d5322f]
	1148	[2661]	MOVE     	R84 R77 ; R84 := R77
	1149	[2661]	MOVE     	R85 R82 ; R85 := R82
	1150	[2661]	LOADK    	R86 K172 ; R86 := ".IconText"
	1151	[2661]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	1152	[2661]	CALL     	R83 3 1 ; R83(R84,R85)
	1153	[2658]	FORLOOP  	R78 1134 ; R78 += R80; if R78 <= R79 then begin PC := 1134; R81 := R78 end
	1154	[2663]	GETGLOBAL	R83 K11 ; R83 := 0xc8802016
	1155	[2663]	MOVE     	R84 R77 ; R84 := R77
	1156	[2663]	CALL     	R83 2 4 ; R83,R84,R85 := R83(R84)
	1157	[2663]	JMP      	1164 ; PC := 1164
	1158	[2664]	SELF     	R88 R0 K111 ; R89 := R0; R88 := R0[0xd5181643]
	1159	[2664]	MOVE     	R90 R4 ; R90 := R4
	1160	[2664]	MOVE     	R91 R87 ; R91 := R87
	1161	[2664]	CONCAT   	R90 R90 R91 ; R90 := R90 .. R91
	1162	[2664]	GETTABLE 	R91 R1 K169 ; R91 := R1["TextVisibleRangeMaterial"]
	1163	[2664]	CALL     	R88 4 1 ; R88(R89,R90,R91)
	1164	[2663]	TFORLOOP 	R83 2 ; R86,R87 := R83(R84,R85); if R86 ~= nil then begin PC = 1158; R85 := R86 end
	1165	[2664]	JMP      	1158 ; PC := 1158
	1166	[2668]	GETGLOBAL	R88 K0 ; R88 := 0x7b998233
	1167	[2668]	MOVE     	R89 R54 ; R89 := R54
	1168	[2668]	CALL     	R88 2 2 ; R88 := R88(R89)
	1169	[2668]	TEST     	R88 1 ; if R88 then PC := 1245
	1170	[2668]	JMP      	1245 ; PC := 1245
	1171	[2669]	LOADK    	R88 := 1.000000
	1172	[2669]	LEN      	R89 R11 ; R89 := # R11
	1173	[2669]	LOADK    	R90 := 1.000000
	1174	[2669]	FORPREP  	R88 1244 ; R88 -= R90; PC := 1244
	1175	[2670]	LOADK    	R92 K164 ; R92 := ".TagContainer.Tag"
	1176	[2670]	GETGLOBAL	R93 K165 ; R93 := 0x64fb1586
	1177	[2670]	MOVE     	R94 R91 ; R94 := R91
	1178	[2670]	CALL     	R93 2 2 ; R93 := R93(R94)
	1179	[2670]	CONCAT   	R92 R92 R93 ; R92 := R92 .. R93
	1180	[2671]	GETTABLE 	R93 R11 R91 ; R93 := R11[R91]
	1181	[2671]	GETTABLE 	R93 R93 K12 ; R93 := R93["Type"]
	1182	[2671]	GETGLOBAL	R94 K166 ; R94 := LABEL_TYPE_NEW
	1183	[2671]	EQ       	0 R93 R94 ; if R93 ~= R94 then PC := 1203
	1184	[2671]	JMP      	1203 ; PC := 1203
	1185	[2671]	GETTABLE 	R93 R1 K173 ; R93 := R1["RippleRectMaterial"]
	1186	[2671]	EQ       	1 R93 K27 ; if R93 == nil then PC := 1203
	1187	[2671]	JMP      	1203 ; PC := 1203
	1188	[2672]	SELF     	R93 R0 K111 ; R94 := R0; R93 := R0[0xd5181643]
	1189	[2672]	MOVE     	R95 R4 ; R95 := R4
	1190	[2672]	MOVE     	R96 R92 ; R96 := R92
	1191	[2672]	LOADK    	R97 K174 ; R97 := ".Bg"
	1192	[2672]	CONCAT   	R95 R95 R97 ; R95 := R95 .. R96 .. R97
	1193	[2672]	GETTABLE 	R96 R1 K173 ; R96 := R1["RippleRectMaterial"]
	1194	[2672]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	1195	[2673]	SELF     	R93 R0 K111 ; R94 := R0; R93 := R0[0xd5181643]
	1196	[2673]	MOVE     	R95 R4 ; R95 := R4
	1197	[2673]	MOVE     	R96 R92 ; R96 := R92
	1198	[2673]	LOADK    	R97 K175 ; R97 := ".IconTextBg"
	1199	[2673]	CONCAT   	R95 R95 R97 ; R95 := R95 .. R96 .. R97
	1200	[2673]	LOADNIL  	R96 R96 ; R96 := nil
	1201	[2673]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	1202	[2673]	JMP      	1244 ; PC := 1244
	1203	[2674]	GETTABLE 	R93 R11 R91 ; R93 := R11[R91]
	1204	[2674]	GETTABLE 	R93 R93 K12 ; R93 := R93["Type"]
	1205	[2674]	GETGLOBAL	R94 K16 ; R94 := LABEL_TYPE_PLATINUM
	1206	[2674]	EQ       	1 R93 R94 ; if R93 == R94 then PC := 1212
	1207	[2674]	JMP      	1212 ; PC := 1212
	1208	[2674]	GETTABLE 	R93 R11 R91 ; R93 := R11[R91]
	1209	[2674]	GETTABLE 	R93 R93 K176 ; R93 := R93["RemapColors"]
	1210	[2674]	TEST     	R93 0 ; if not R93 then PC := 1230
	1211	[2674]	JMP      	1230 ; PC := 1230
	1212	[2674]	GETTABLE 	R93 R1 K22 ; R93 := R1["ColorRemapMaterial"]
	1213	[2674]	EQ       	1 R93 K27 ; if R93 == nil then PC := 1230
	1214	[2674]	JMP      	1230 ; PC := 1230
	1215	[2675]	SELF     	R93 R0 K111 ; R94 := R0; R93 := R0[0xd5181643]
	1216	[2675]	MOVE     	R95 R4 ; R95 := R4
	1217	[2675]	MOVE     	R96 R92 ; R96 := R92
	1218	[2675]	LOADK    	R97 K174 ; R97 := ".Bg"
	1219	[2675]	CONCAT   	R95 R95 R97 ; R95 := R95 .. R96 .. R97
	1220	[2675]	GETTABLE 	R96 R1 K22 ; R96 := R1["ColorRemapMaterial"]
	1221	[2675]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	1222	[2676]	SELF     	R93 R0 K111 ; R94 := R0; R93 := R0[0xd5181643]
	1223	[2676]	MOVE     	R95 R4 ; R95 := R4
	1224	[2676]	MOVE     	R96 R92 ; R96 := R92
	1225	[2676]	LOADK    	R97 K175 ; R97 := ".IconTextBg"
	1226	[2676]	CONCAT   	R95 R95 R97 ; R95 := R95 .. R96 .. R97
	1227	[2676]	GETTABLE 	R96 R1 K22 ; R96 := R1["ColorRemapMaterial"]
	1228	[2676]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	1229	[2676]	JMP      	1244 ; PC := 1244
	1230	[2678]	SELF     	R93 R0 K111 ; R94 := R0; R93 := R0[0xd5181643]
	1231	[2678]	MOVE     	R95 R4 ; R95 := R4
	1232	[2678]	MOVE     	R96 R92 ; R96 := R92
	1233	[2678]	LOADK    	R97 K174 ; R97 := ".Bg"
	1234	[2678]	CONCAT   	R95 R95 R97 ; R95 := R95 .. R96 .. R97
	1235	[2678]	MOVE     	R96 R54 ; R96 := R54
	1236	[2678]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	1237	[2679]	SELF     	R93 R0 K111 ; R94 := R0; R93 := R0[0xd5181643]
	1238	[2679]	MOVE     	R95 R4 ; R95 := R4
	1239	[2679]	MOVE     	R96 R92 ; R96 := R92
	1240	[2679]	LOADK    	R97 K175 ; R97 := ".IconTextBg"
	1241	[2679]	CONCAT   	R95 R95 R97 ; R95 := R95 .. R96 .. R97
	1242	[2679]	LOADNIL  	R96 R96 ; R96 := nil
	1243	[2679]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	1244	[2669]	FORLOOP  	R88 1175 ; R88 += R90; if R88 <= R89 then begin PC := 1175; R91 := R88 end
	1245	[2685]	MOVE     	R93 R4 ; R93 := R4
	1246	[2685]	LOADK    	R94 K177 ; R94 := ".TagContainer.Tag1"
	1247	[2685]	CONCAT   	R93 R93 R94 ; R93 := R93 .. R94
	1248	[2686]	LOADK    	R94 := 1.000000
	1249	[2687]	SELF     	R95 R0 K178 ; R96 := R0; R95 := R0[0xa7ec3e8a]
	1250	[2687]	MOVE     	R97 R93 ; R97 := R93
	1251	[2687]	CALL     	R95 3 2 ; R95 := R95(R96,R97)
	1252	[2687]	TEST     	R95 0 ; if not R95 then PC := 1272
	1253	[2687]	JMP      	1272 ; PC := 1272
	1254	[2688]	SELF     	R95 R0 K179 ; R96 := R0; R95 := R0[0xaade900e]
	1255	[2688]	MOVE     	R97 R93 ; R97 := R93
	1256	[2688]	LOADK    	R98 := 11.000000
	1257	[2688]	TEST     	R6 1 ; if R6 then PC := 1261
	1258	[2688]	JMP      	1261 ; PC := 1261
	1259	[2688]	LT       	1 R94 R5 ; if R94 < R5 then PC := 1262
	1260	[2688]	JMP      	1262 ; PC := 1262
	1261	[2688]	OP_LOADBOOL	R99 0 1 ; R99 := false; PC := 1262
	1262	[2688]	OP_LOADBOOL	R99 1 0 ; R99 := true
	1263	[2688]	CALL     	R95 5 1 ; R95(R96,R97,R98,R99)
	1264	[2689]	ADD      	R94 R94 K14 ; R94 := R94 + 1.000000
	1265	[2690]	MOVE     	R95 R4 ; R95 := R4
	1266	[2690]	LOADK    	R96 K164 ; R96 := ".TagContainer.Tag"
	1267	[2690]	GETGLOBAL	R97 K165 ; R97 := 0x64fb1586
	1268	[2690]	MOVE     	R98 R94 ; R98 := R94
	1269	[2690]	CALL     	R97 2 2 ; R97 := R97(R98)
	1270	[2690]	CONCAT   	R93 R95 R97 ; R93 := R95 .. R96 .. R97
	1271	[2690]	JMP      	1249 ; PC := 1249
	1272	[2693]	SETTABLE 	R2 K180 R3 ; R2["MetaData"] := R3
	1273	[2696]	GETUPVAL 	R95 U9 ; R95 := U9
	1274	[2696]	MOVE     	R96 R0 ; R96 := R0
	1275	[2696]	MOVE     	R97 R1 ; R97 := R1
	1276	[2696]	MOVE     	R98 R2 ; R98 := R2
	1277	[2696]	MOVE     	R99 R3 ; R99 := R3
	1278	[2696]	CALL     	R95 5 1 ; R95(R96,R97,R98,R99)
	1279	[2697]	RETURN   	R0 1 ; return 

function #45 <?:2699,2771> (167 instructions, 668 bytes at 00000211636357B0)
4 params, 26 slots, 1 upvalue, 0 locals, 31 constants, 0 functions
	1	[2700]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[2700]	GETGLOBAL	R5 K1 ; R5 := 0x89326c93
	3	[2700]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[2700]	TEST     	R4 1 ; if R4 then PC := 13
	5	[2700]	JMP      	13 ; PC := 13
	6	[2700]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	7	[2700]	GETGLOBAL	R5 K1 ; R5 := 0x89326c93
	8	[2700]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0x7c1a0374]
	9	[2700]	CALL     	R5 2 0 ; R5,... := R5(R6)
	10	[2700]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	11	[2700]	TEST     	R4 0 ; if not R4 then PC := 14
	12	[2700]	JMP      	14 ; PC := 14
	13	[2701]	RETURN   	R0 1 ; return 
	14	[2704]	GETGLOBAL	R4 K1 ; R4 := 0x89326c93
	15	[2704]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x7c1a0374]
	16	[2704]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[2704]	GETTABLE 	R4 R4 K3 ; R4 := R4["postProcess"]
	18	[2705]	GETGLOBAL	R5 K1 ; R5 := 0x89326c93
	19	[2705]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0xc7fcada9]
	20	[2705]	GETGLOBAL	R7 K5 ; R7 := 0x0469f296
	21	[2705]	LOADK    	R8 K6 ; R8 := "Sunlight"
	22	[2705]	CALL     	R7 2 0 ; R7,... := R7(R8)
	23	[2705]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	24	[2706]	GETGLOBAL	R6 K1 ; R6 := 0x89326c93
	25	[2706]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xfb669000]
	26	[2706]	GETGLOBAL	R8 K8 ; R8 := gDynamicSkyType
	27	[2706]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	28	[2707]	GETGLOBAL	R7 K9 ; R7 := 0xa421af95
	29	[2707]	LOADK    	R8 := 0.000000
	30	[2707]	LOADK    	R9 := 1.500000
	31	[2707]	LOADK    	R10 := -0.250000
	32	[2707]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	33	[2710]	OP_LOADBOOL	R8 0 0 ; R8 := false
	34	[2711]	LEN      	R9 R6 ; R9 := # R6
	35	[2711]	EQ       	1 R9 K10 ; if R9 == 0.000000 then PC := 38
	36	[2711]	JMP      	38 ; PC := 38
	37	[2712]	OP_LOADBOOL	R8 1 0 ; R8 := true
	38	[2715]	TEST     	R8 1 ; if R8 then PC := 59
	39	[2715]	JMP      	59 ; PC := 59
	40	[2716]	GETGLOBAL	R9 K11 ; R9 := 0xcfc01047
	41	[2716]	MOVE     	R10 R5 ; R10 := R5
	42	[2716]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	43	[2716]	JMP      	56 ; PC := 56
	44	[2717]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	45	[2717]	MOVE     	R15 R13 ; R15 := R13
	46	[2717]	CALL     	R14 2 2 ; R14 := R14(R15)
	47	[2717]	TEST     	R14 1 ; if R14 then PC := 56
	48	[2717]	JMP      	56 ; PC := 56
	49	[2718]	TEST     	R0 0 ; if not R0 then PC := 54
	50	[2718]	JMP      	54 ; PC := 54
	51	[2719]	SELF     	R14 R13 K12 ; R15 := R13; R14 := R13[0x6b5e0c7a]
	52	[2719]	CALL     	R14 2 1 ; R14(R15)
	53	[2719]	JMP      	56 ; PC := 56
	54	[2721]	SELF     	R14 R13 K13 ; R15 := R13; R14 := R13[0xd199e920]
	55	[2721]	CALL     	R14 2 1 ; R14(R15)
	56	[2716]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 44; R11 := R12 end
	57	[2723]	JMP      	44 ; PC := 44
	58	[2724]	JMP      	65 ; PC := 65
	59	[2726]	GETGLOBAL	R14 K9 ; R14 := 0xa421af95
	60	[2726]	LOADK    	R15 := 1.000000
	61	[2726]	LOADK    	R16 := 1.000000
	62	[2726]	LOADK    	R17 := -0.250000
	63	[2726]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	64	[2726]	MOVE     	R7 R14 ; R7 := R14
	65	[2729]	TEST     	R0 0 ; if not R0 then PC := 143
	66	[2729]	JMP      	143 ; PC := 143
	67	[2730]	GETGLOBAL	R14 K1 ; R14 := 0x89326c93
	68	[2730]	SELF     	R14 R14 K14 ; R15 := R14; R14 := R14[0x78298275]
	69	[2730]	CALL     	R14 2 2 ; R14 := R14(R15)
	70	[2731]	LOADNIL  	R15 R15 ; R15 := nil
	71	[2732]	GETGLOBAL	R16 K15 ; R16 := 0x60130201
	72	[2732]	LOADK    	R17 := 255.000000
	73	[2732]	LOADK    	R18 := 255.000000
	74	[2732]	LOADK    	R19 := 255.000000
	75	[2732]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	76	[2733]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	77	[2733]	MOVE     	R18 R14 ; R18 := R14
	78	[2733]	CALL     	R17 2 2 ; R17 := R17(R18)
	79	[2733]	TEST     	R17 1 ; if R17 then PC := 139
	80	[2733]	JMP      	139 ; PC := 139
	81	[2734]	SELF     	R17 R14 K16 ; R18 := R14; R17 := R14[0x47901f07]
	82	[2734]	MOVE     	R19 R3 ; R19 := R3
	83	[2734]	GETGLOBAL	R20 K17 ; R20 := EMPTY_SYMBOL
	84	[2734]	MOVE     	R21 R7 ; R21 := R7
	85	[2734]	GETGLOBAL	R22 K18 ; R22 := 0x00046924
	86	[2734]	LOADK    	R23 := 0.000000
	87	[2734]	LOADK    	R24 := 90.000000
	88	[2734]	LOADK    	R25 := 0.000000
	89	[2734]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	90	[2734]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	91	[2734]	MOVE     	R15 R17 ; R15 := R17
	92	[2735]	GETUPVAL 	R17 U0 ; R17 := U0
	93	[2735]	GETTABLE 	R17 R17 K19 ; R17 := R17[0x5d10207d]
	94	[2735]	LOADK    	R18 := 13.000000
	95	[2735]	CALL     	R17 2 2 ; R17 := R17(R18)
	96	[2736]	SELF     	R18 R15 K21 ; R19 := R15; R18 := R15[0xa3927fe9]
	97	[2736]	MOVE     	R20 R17 ; R20 := R17
	98	[2736]	CALL     	R18 3 1 ; R18(R19,R20)
	99	[2738]	SELF     	R18 R15 K22 ; R19 := R15; R18 := R15[0x4ec9bce1]
	100	[2738]	CALL     	R18 2 2 ; R18 := R18(R19)
	101	[2739]	TEST     	R8 0 ; if not R8 then PC := 104
	102	[2739]	JMP      	104 ; PC := 104
	103	[2740]	MUL      	R18 R18 K23 ; R18 := R18 * 0.500000
	104	[2742]	SELF     	R19 R17 K24 ; R20 := R17; R19 := R17[0x694e551c]
	105	[2742]	CALL     	R19 2 2 ; R19 := R19(R20)
	106	[2742]	LT       	0 K23 R19 ; if 0.500000 >= R19 then PC := 109
	107	[2742]	JMP      	109 ; PC := 109
	108	[2743]	MUL      	R18 R18 K25 ; R18 := R18 * 0.300000
	109	[2745]	SELF     	R19 R15 K26 ; R20 := R15; R19 := R15[0xe29e950d]
	110	[2745]	MOVE     	R21 R18 ; R21 := R18
	111	[2745]	CALL     	R19 3 1 ; R19(R20,R21)
	112	[2747]	TEST     	R8 1 ; if R8 then PC := 124
	113	[2747]	JMP      	124 ; PC := 124
	114	[2748]	GETGLOBAL	R19 K15 ; R19 := 0x60130201
	115	[2748]	GETTABLE 	R20 R4 K27 ; R20 := R4["lightMapTint"]
	116	[2748]	CALL     	R19 2 2 ; R19 := R19(R20)
	117	[2748]	MOVE     	R16 R19 ; R16 := R19
	118	[2749]	GETGLOBAL	R19 K15 ; R19 := 0x60130201
	119	[2749]	LOADK    	R20 := 255.000000
	120	[2749]	LOADK    	R21 := 255.000000
	121	[2749]	LOADK    	R22 := 255.000000
	122	[2749]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	123	[2749]	SETTABLE 	R4 K27 R19 ; R4["lightMapTint"] := R19
	124	[2752]	SELF     	R19 R14 K28 ; R20 := R14; R19 := R14[0xe79e7ef4]
	125	[2752]	CALL     	R19 2 2 ; R19 := R19(R20)
	126	[2753]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	127	[2753]	MOVE     	R21 R19 ; R21 := R19
	128	[2753]	CALL     	R20 2 2 ; R20 := R20(R21)
	129	[2753]	TEST     	R20 1 ; if R20 then PC := 139
	130	[2753]	JMP      	139 ; PC := 139
	131	[2754]	SELF     	R20 R19 K29 ; R21 := R19; R20 := R19[0x2ecc2a7a]
	132	[2754]	GETGLOBAL	R22 K15 ; R22 := 0x60130201
	133	[2754]	CALL     	R22 1 2 ; R22 := R22()
	134	[2754]	GETGLOBAL	R23 K15 ; R23 := 0x60130201
	135	[2754]	CALL     	R23 1 2 ; R23 := R23()
	136	[2754]	GETGLOBAL	R24 K15 ; R24 := 0x60130201
	137	[2754]	CALL     	R24 1 0 ; R24,... := R24()
	138	[2754]	CALL     	R20 0 1 ; R20(R21,...)
	139	[2758]	MOVE     	R20 R15 ; R20 := R15
	140	[2758]	MOVE     	R21 R16 ; R21 := R16
	141	[2758]	RETURN   	R20 3 ; return R20, R21 
	142	[2758]	JMP      	167 ; PC := 167
	143	[2760]	TEST     	R8 1 ; if R8 then PC := 157
	144	[2760]	JMP      	157 ; PC := 157
	145	[2761]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	146	[2761]	MOVE     	R21 R2 ; R21 := R2
	147	[2761]	CALL     	R20 2 2 ; R20 := R20(R21)
	148	[2761]	TEST     	R20 0 ; if not R20 then PC := 156
	149	[2761]	JMP      	156 ; PC := 156
	150	[2762]	GETGLOBAL	R20 K15 ; R20 := 0x60130201
	151	[2762]	LOADK    	R21 := 255.000000
	152	[2762]	LOADK    	R22 := 255.000000
	153	[2762]	LOADK    	R23 := 255.000000
	154	[2762]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	155	[2762]	MOVE     	R2 R20 ; R2 := R20
	156	[2764]	SETTABLE 	R4 K27 R2 ; R4["lightMapTint"] := R2
	157	[2766]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	158	[2766]	MOVE     	R21 R1 ; R21 := R1
	159	[2766]	CALL     	R20 2 2 ; R20 := R20(R21)
	160	[2766]	TEST     	R20 1 ; if R20 then PC := 167
	161	[2766]	JMP      	167 ; PC := 167
	162	[2767]	SELF     	R20 R1 K30 ; R21 := R1; R20 := R1[0x3e59fb19]
	163	[2767]	OP_LOADBOOL	R22 1 0 ; R22 := true
	164	[2767]	CALL     	R20 3 1 ; R20(R21,R22)
	165	[2768]	SELF     	R20 R1 K12 ; R21 := R1; R20 := R1[0x6b5e0c7a]
	166	[2768]	CALL     	R20 2 1 ; R20(R21)
	167	[2771]	RETURN   	R0 1 ; return 

function #46 <?:2773,2790> (62 instructions, 248 bytes at 0000021163636020)
4 params, 14 slots, 0 upvalues, 0 locals, 18 constants, 0 functions
	1	[2774]	GETGLOBAL	R4 K0 ; R4 := 0x2d0fad09
	2	[2774]	LOADK    	R5 K1 ; R5 := "Lotus.Interface.Components.TitleBar"
	3	[2774]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[2775]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0x1cb415c1]
	5	[2775]	MOVE     	R7 R1 ; R7 := R1
	6	[2775]	LOADK    	R8 K3 ; R8 := ".Fill"
	7	[2775]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	8	[2775]	GETTABLE 	R8 R4 K4 ; R8 := R4["UnderlineFillTexture"]
	9	[2775]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	10	[2776]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0x1cb415c1]
	11	[2776]	MOVE     	R7 R1 ; R7 := R1
	12	[2776]	LOADK    	R8 K5 ; R8 := ".CapRight"
	13	[2776]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	14	[2776]	GETTABLE 	R8 R4 K6 ; R8 := R4["UnderlineCapTexture"]
	15	[2776]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	16	[2777]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0x1cb415c1]
	17	[2777]	MOVE     	R7 R1 ; R7 := R1
	18	[2777]	LOADK    	R8 K7 ; R8 := ".CapLeft"
	19	[2777]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	20	[2777]	GETTABLE 	R8 R4 K8 ; R8 := R4["UnderlineStartTexture"]
	21	[2777]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	22	[2779]	EQ       	1 R3 K9 ; if R3 == nil then PC := 27
	23	[2779]	JMP      	27 ; PC := 27
	24	[2779]	GETTABLE 	R5 R3 K10 ; R5 := R3["Left"]
	25	[2779]	JMP      	28 ; PC := 28
	26	[2779]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 27
	27	[2779]	OP_LOADBOOL	R5 1 0 ; R5 := true
	28	[2780]	EQ       	1 R3 K9 ; if R3 == nil then PC := 33
	29	[2780]	JMP      	33 ; PC := 33
	30	[2780]	GETTABLE 	R6 R3 K11 ; R6 := R3["Right"]
	31	[2780]	JMP      	34 ; PC := 34
	32	[2780]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 33
	33	[2780]	OP_LOADBOOL	R6 1 0 ; R6 := true
	34	[2781]	SELF     	R7 R0 K12 ; R8 := R0; R7 := R0[0xc0a3774b]
	35	[2781]	MOVE     	R9 R1 ; R9 := R1
	36	[2781]	LOADK    	R10 K13 ; R10 := "CapLeft"
	37	[2781]	LOADK    	R11 := 11.000000
	38	[2781]	MOVE     	R12 R5 ; R12 := R5
	39	[2781]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	40	[2782]	SELF     	R7 R0 K12 ; R8 := R0; R7 := R0[0xc0a3774b]
	41	[2782]	MOVE     	R9 R1 ; R9 := R1
	42	[2782]	LOADK    	R10 K14 ; R10 := "CapRight"
	43	[2782]	LOADK    	R11 := 11.000000
	44	[2782]	MOVE     	R12 R6 ; R12 := R6
	45	[2782]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	46	[2784]	EQ       	1 R2 K9 ; if R2 == nil then PC := 62
	47	[2784]	JMP      	62 ; PC := 62
	48	[2785]	LOADK    	R7 := 32.000000
	49	[2786]	SELF     	R8 R0 K15 ; R9 := R0; R8 := R0[0xf64b7262]
	50	[2786]	MOVE     	R10 R1 ; R10 := R1
	51	[2786]	LOADK    	R11 K16 ; R11 := "Fill"
	52	[2786]	LOADK    	R12 := 12.000000
	53	[2786]	MUL      	R13 R7 K17 ; R13 := R7 * 2.000000
	54	[2786]	SUB      	R13 R2 R13 ; R13 := R2 - R13
	55	[2786]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	56	[2787]	SELF     	R8 R0 K15 ; R9 := R0; R8 := R0[0xf64b7262]
	57	[2787]	MOVE     	R10 R1 ; R10 := R1
	58	[2787]	LOADK    	R11 K14 ; R11 := "CapRight"
	59	[2787]	LOADK    	R12 := 0.000000
	60	[2787]	SUB      	R13 R2 R7 ; R13 := R2 - R7
	61	[2787]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	62	[2790]	RETURN   	R0 1 ; return 

function #47 <?:2792,2794> (7 instructions, 28 bytes at 0000021163636550)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2793]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[2793]	MOVE     	R5 R0 ; R5 := R0
	3	[2793]	MOVE     	R6 R1 ; R6 := R1
	4	[2793]	MOVE     	R7 R2 ; R7 := R2
	5	[2793]	MOVE     	R8 R3 ; R8 := R3
	6	[2793]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	7	[2794]	RETURN   	R0 1 ; return 

function #48 <?:2796,2824> (53 instructions, 212 bytes at 0000021163636640)
6 params, 17 slots, 1 upvalue, 0 locals, 4 constants, 2 functions
	1	[2797]	TEST     	R3 1 ; if R3 then PC := 4
	2	[2797]	JMP      	4 ; PC := 4
	3	[2797]	LOADK    	R3 := 0.000000
	4	[2798]	TESTSET  	R6 R2 1 ; if R2 then PC := 7 else R6 := R2 
	5	[2798]	JMP      	7 ; PC := 7
	6	[2798]	LOADK    	R6 := 1.000000
	7	[2798]	SUB      	R2 R6 K0 ; R2 := R6 - 1.000000
	8	[2799]	OP_LOADBOOL	R6 0 0 ; R6 := false
	9	[2800]	TEST     	R4 1 ; if R4 then PC := 17
	10	[2800]	JMP      	17 ; PC := 17
	11	[2800]	GETGLOBAL	R7 K1 ; R7 := 0x60130201
	12	[2800]	LOADK    	R8 := 255.000000
	13	[2800]	LOADK    	R9 := 255.000000
	14	[2800]	LOADK    	R10 := 255.000000
	15	[2800]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	16	[2800]	MOVE     	R4 R7 ; R4 := R7
	17	[2801]	TEST     	R5 1 ; if R5 then PC := 25
	18	[2801]	JMP      	25 ; PC := 25
	19	[2801]	GETGLOBAL	R7 K1 ; R7 := 0x60130201
	20	[2801]	LOADK    	R8 := 232.000000
	21	[2801]	LOADK    	R9 := 93.000000
	22	[2801]	LOADK    	R10 := 93.000000
	23	[2801]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	24	[2801]	MOVE     	R5 R7 ; R5 := R7
	25	[2812]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	26	[2812]	MOVE     	R0 R6 ; R0 := R6
	27	[2812]	MOVE     	R0 R5 ; R0 := R5
	28	[2812]	MOVE     	R0 R4 ; R0 := R4
	29	[2812]	MOVE     	R0 R0 ; R0 := R0
	30	[2812]	MOVE     	R0 R1 ; R0 := R1
	31	[2814]	GETGLOBAL	R8 K2 ; R8 := 0x25312c9b
	32	[2814]	MOVE     	R9 R0 ; R9 := R0
	33	[2814]	MOVE     	R10 R1 ; R10 := R1
	34	[2814]	LOADK    	R11 := 8.000000
	35	[2814]	NEWTABLE 	R12 1 0 ; R12 := {}
	36	[2814]	MOVE     	R13 R7 ; R13 := R7
	37	[2814]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	38	[2814]	NEWTABLE 	R13 1 0 ; R13 := {}
	39	[2814]	LOADK    	R14 := 1.000000
	40	[2814]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	41	[2814]	LOADK    	R14 := 0.250000
	42	[2814]	MOVE     	R15 R3 ; R15 := R3
	43	[2823]	CLOSURE  	R16 1 ; R16 := closure(Function #2)
	44	[2823]	MOVE     	R0 R6 ; R0 := R6
	45	[2823]	MOVE     	R0 R0 ; R0 := R0
	46	[2823]	MOVE     	R0 R1 ; R0 := R1
	47	[2823]	MOVE     	R0 R7 ; R0 := R7
	48	[2823]	MOVE     	R0 R2 ; R0 := R2
	49	[2823]	GETUPVAL 	R0 U0 ; R0 := U0
	50	[2823]	MOVE     	R0 R4 ; R0 := R4
	51	[2823]	MOVE     	R0 R5 ; R0 := R5
	52	[2814]	CALL     	R8 9 1 ; R8(R9,R10,R11,R12,R13,R14,R15,R16)
	53	[2824]	RETURN   	R0 1 ; return 

function #49 <?:2826,2828> (9 instructions, 36 bytes at 0000021163636DC0)
6 params, 13 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2827]	GETUPVAL 	R6 U0 ; R6 := U0
	2	[2827]	MOVE     	R7 R0 ; R7 := R0
	3	[2827]	MOVE     	R8 R1 ; R8 := R1
	4	[2827]	MOVE     	R9 R2 ; R9 := R2
	5	[2827]	MOVE     	R10 R3 ; R10 := R3
	6	[2827]	MOVE     	R11 R4 ; R11 := R4
	7	[2827]	MOVE     	R12 R5 ; R12 := R5
	8	[2827]	CALL     	R6 7 1 ; R6(R7,R8,R9,R10,R11,R12)
	9	[2828]	RETURN   	R0 1 ; return 

function #50 <?:2830,2885> (225 instructions, 900 bytes at 0000021163636ED0)
3 params, 21 slots, 4 upvalues, 0 locals, 42 constants, 0 functions
	1	[2831]	LOADK    	R3 K0 ; R3 := ""
	2	[2832]	GETTABLE 	R4 R1 K1 ; R4 := R1["StoreItem"]
	3	[2833]	LOADNIL  	R5 R5 ; R5 := nil
	4	[2834]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	5	[2834]	MOVE     	R7 R4 ; R7 := R4
	6	[2834]	CALL     	R6 2 2 ; R6 := R6(R7)
	7	[2834]	TEST     	R6 1 ; if R6 then PC := 12
	8	[2834]	JMP      	12 ; PC := 12
	9	[2835]	SELF     	R6 R4 K3 ; R7 := R4; R6 := R4[0xfe9eb1a5]
	10	[2835]	CALL     	R6 2 2 ; R6 := R6(R7)
	11	[2835]	MOVE     	R5 R6 ; R5 := R6
	12	[2837]	GETUPVAL 	R6 U0 ; R6 := U0
	13	[2837]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x9f57dd7d]
	14	[2837]	GETUPVAL 	R7 U1 ; R7 := U1
	15	[2837]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x5d10207d]
	16	[2837]	LOADK    	R8 := 6.000000
	17	[2837]	OP_LOADBOOL	R9 1 0 ; R9 := true
	18	[2837]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	19	[2837]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	20	[2838]	GETUPVAL 	R7 U0 ; R7 := U0
	21	[2838]	GETTABLE 	R7 R7 K4 ; R7 := R7[0x9f57dd7d]
	22	[2838]	GETUPVAL 	R8 U1 ; R8 := U1
	23	[2838]	GETTABLE 	R8 R8 K5 ; R8 := R8[0x5d10207d]
	24	[2838]	LOADK    	R9 := 5.000000
	25	[2838]	OP_LOADBOOL	R10 1 0 ; R10 := true
	26	[2838]	CALL     	R8 3 0 ; R8,... := R8(R9,R10)
	27	[2838]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	28	[2839]	GETGLOBAL	R8 K2 ; R8 := 0x7b998233
	29	[2839]	MOVE     	R9 R4 ; R9 := R4
	30	[2839]	CALL     	R8 2 2 ; R8 := R8(R9)
	31	[2839]	TEST     	R8 1 ; if R8 then PC := 55
	32	[2839]	JMP      	55 ; PC := 55
	33	[2839]	GETGLOBAL	R8 K2 ; R8 := 0x7b998233
	34	[2839]	SELF     	R9 R4 K7 ; R10 := R4; R9 := R4[0xf278f8a1]
	35	[2839]	CALL     	R9 2 0 ; R9,... := R9(R10)
	36	[2839]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	37	[2839]	TEST     	R8 1 ; if R8 then PC := 55
	38	[2839]	JMP      	55 ; PC := 55
	39	[2839]	SELF     	R8 R4 K7 ; R9 := R4; R8 := R4[0xf278f8a1]
	40	[2839]	CALL     	R8 2 2 ; R8 := R8(R9)
	41	[2839]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0xf2deaf69]
	42	[2839]	GETGLOBAL	R10 K9 ; R10 := gVoidProjectionItemType
	43	[2839]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	44	[2839]	TEST     	R8 0 ; if not R8 then PC := 55
	45	[2839]	JMP      	55 ; PC := 55
	46	[2840]	MOVE     	R8 R3 ; R8 := R3
	47	[2840]	GETUPVAL 	R9 U2 ; R9 := U2
	48	[2840]	GETTABLE 	R9 R9 K10 ; R9 := R9[0x56296f99]
	49	[2840]	MOVE     	R10 R0 ; R10 := R0
	50	[2840]	MOVE     	R11 R4 ; R11 := R4
	51	[2840]	OP_LOADBOOL	R12 1 0 ; R12 := true
	52	[2840]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	53	[2840]	CONCAT   	R3 R8 R9 ; R3 := R8 .. R9
	54	[2840]	JMP      	87 ; PC := 87
	55	[2842]	TEST     	R2 0 ; if not R2 then PC := 69
	56	[2842]	JMP      	69 ; PC := 69
	57	[2843]	SELF     	R8 R0 K11 ; R9 := R0; R8 := R0[0x42b04007]
	58	[2843]	LOADK    	R10 K12 ; R10 := "/Lotus/Language/Menu/Blueprint_UnlimitedCharges"
	59	[2843]	OP_LOADBOOL	R11 1 0 ; R11 := true
	60	[2843]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	61	[2843]	LOADK    	R9 K13 ; R9 := "<br>"
	62	[2843]	MOVE     	R10 R3 ; R10 := R3
	63	[2843]	SELF     	R11 R0 K11 ; R12 := R0; R11 := R0[0x42b04007]
	64	[2843]	GETTABLE 	R13 R1 K14 ; R13 := R1["Description"]
	65	[2843]	OP_LOADBOOL	R14 0 0 ; R14 := false
	66	[2843]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	67	[2843]	CONCAT   	R3 R8 R11 ; R3 := R8 .. R9 .. R10 .. R11
	68	[2843]	JMP      	87 ; PC := 87
	69	[2844]	GETGLOBAL	R8 K2 ; R8 := 0x7b998233
	70	[2844]	GETTABLE 	R9 R1 K15 ; R9 := R1["mMod"]
	71	[2844]	CALL     	R8 2 2 ; R8 := R8(R9)
	72	[2844]	TEST     	R8 0 ; if not R8 then PC := 87
	73	[2844]	JMP      	87 ; PC := 87
	74	[2845]	GETTABLE 	R8 R1 K16 ; R8 := R1["LocalizedDesc"]
	75	[2845]	EQ       	1 R8 K17 ; if R8 == nil then PC := 81
	76	[2845]	JMP      	81 ; PC := 81
	77	[2846]	MOVE     	R8 R3 ; R8 := R3
	78	[2846]	GETTABLE 	R9 R1 K16 ; R9 := R1["LocalizedDesc"]
	79	[2846]	CONCAT   	R3 R8 R9 ; R3 := R8 .. R9
	80	[2846]	JMP      	87 ; PC := 87
	81	[2848]	MOVE     	R8 R3 ; R8 := R3
	82	[2848]	SELF     	R9 R0 K11 ; R10 := R0; R9 := R0[0x42b04007]
	83	[2848]	GETTABLE 	R11 R1 K14 ; R11 := R1["Description"]
	84	[2848]	OP_LOADBOOL	R12 1 0 ; R12 := true
	85	[2848]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	86	[2848]	CONCAT   	R3 R8 R9 ; R3 := R8 .. R9
	87	[2853]	GETGLOBAL	R8 K2 ; R8 := 0x7b998233
	88	[2853]	GETTABLE 	R9 R1 K18 ; R9 := R1["CodexEntry"]
	89	[2853]	CALL     	R8 2 2 ; R8 := R8(R9)
	90	[2853]	TEST     	R8 1 ; if R8 then PC := 109
	91	[2853]	JMP      	109 ; PC := 109
	92	[2854]	GETUPVAL 	R8 U0 ; R8 := U0
	93	[2854]	GETTABLE 	R8 R8 K4 ; R8 := R8[0x9f57dd7d]
	94	[2854]	GETUPVAL 	R9 U1 ; R9 := U1
	95	[2854]	GETTABLE 	R9 R9 K5 ; R9 := R9[0x5d10207d]
	96	[2854]	LOADK    	R10 := 10.000000
	97	[2854]	OP_LOADBOOL	R11 1 0 ; R11 := true
	98	[2854]	CALL     	R9 3 0 ; R9,... := R9(R10,R11)
	99	[2854]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	100	[2855]	MOVE     	R9 R3 ; R9 := R3
	101	[2855]	GETUPVAL 	R10 U3 ; R10 := U3
	102	[2855]	GETTABLE 	R10 R10 K19 ; R10 := R10[0xf360f3f5]
	103	[2855]	MOVE     	R11 R0 ; R11 := R0
	104	[2855]	GETTABLE 	R12 R1 K18 ; R12 := R1["CodexEntry"]
	105	[2855]	MOVE     	R13 R8 ; R13 := R8
	106	[2855]	MOVE     	R14 R6 ; R14 := R6
	107	[2855]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	108	[2855]	CONCAT   	R3 R9 R10 ; R3 := R9 .. R10
	109	[2858]	GETGLOBAL	R9 K20 ; R9 := _T
	110	[2858]	GETTABLE 	R9 R9 K21 ; R9 := R9["InfoPopup_Grid"]
	111	[2859]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	112	[2859]	MOVE     	R11 R9 ; R11 := R9
	113	[2859]	CALL     	R10 2 2 ; R10 := R10(R11)
	114	[2859]	TEST     	R10 1 ; if R10 then PC := 189
	115	[2859]	JMP      	189 ; PC := 189
	116	[2860]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	117	[2860]	MOVE     	R11 R4 ; R11 := R4
	118	[2860]	CALL     	R10 2 2 ; R10 := R10(R11)
	119	[2860]	TEST     	R10 1 ; if R10 then PC := 149
	120	[2860]	JMP      	149 ; PC := 149
	121	[2860]	SELF     	R10 R4 K22 ; R11 := R4; R10 := R4[0x9dbbea0a]
	122	[2860]	CALL     	R10 2 2 ; R10 := R10(R11)
	123	[2860]	TEST     	R10 0 ; if not R10 then PC := 149
	124	[2860]	JMP      	149 ; PC := 149
	125	[2860]	GETGLOBAL	R10 K23 ; R10 := 0x34291f5c
	126	[2860]	GETTABLE 	R10 R10 K24 ; R10 := R10["Item_AvatarImage"]
	127	[2860]	EQ       	1 R5 R10 ; if R5 == R10 then PC := 149
	128	[2860]	JMP      	149 ; PC := 149
	129	[2861]	GETUPVAL 	R10 U0 ; R10 := U0
	130	[2861]	GETTABLE 	R10 R10 K4 ; R10 := R10[0x9f57dd7d]
	131	[2861]	GETUPVAL 	R11 U1 ; R11 := U1
	132	[2861]	GETTABLE 	R11 R11 K5 ; R11 := R11[0x5d10207d]
	133	[2861]	LOADK    	R12 := 10.000000
	134	[2861]	OP_LOADBOOL	R13 1 0 ; R13 := true
	135	[2861]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	136	[2861]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	137	[2862]	MOVE     	R11 R3 ; R11 := R3
	138	[2862]	LOADK    	R12 K25 ; R12 := "<br><br>"
	139	[2862]	GETUPVAL 	R13 U2 ; R13 := U2
	140	[2862]	GETTABLE 	R13 R13 K26 ; R13 := R13[0x38a66489]
	141	[2862]	MOVE     	R14 R0 ; R14 := R0
	142	[2862]	MOVE     	R15 R4 ; R15 := R4
	143	[2862]	GETTABLE 	R16 R9 K27 ; R16 := R9["PurchasedItems"]
	144	[2862]	OP_LOADBOOL	R17 1 0 ; R17 := true
	145	[2862]	MOVE     	R18 R10 ; R18 := R10
	146	[2862]	MOVE     	R19 R7 ; R19 := R7
	147	[2862]	CALL     	R13 7 2 ; R13 := R13(R14,R15,R16,R17,R18,R19)
	148	[2862]	CONCAT   	R3 R11 R13 ; R3 := R11 .. R12 .. R13
	149	[2865]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	150	[2865]	GETGLOBAL	R12 K28 ; R12 := 0x25d99d89
	151	[2865]	CALL     	R11 2 2 ; R11 := R11(R12)
	152	[2865]	TEST     	R11 1 ; if R11 then PC := 189
	153	[2865]	JMP      	189 ; PC := 189
	154	[2866]	NEWTABLE 	R11 0 0 ; R11 := {}
	155	[2867]	LOADNIL  	R12 R13 ; R12 := R13 := nil
	156	[2869]	GETUPVAL 	R14 U2 ; R14 := U2
	157	[2869]	GETTABLE 	R14 R14 K29 ; R14 := R14[0x3bdcb508]
	158	[2869]	MOVE     	R15 R0 ; R15 := R0
	159	[2869]	MOVE     	R16 R4 ; R16 := R4
	160	[2869]	GETGLOBAL	R17 K30 ; R17 := 0xbe190284
	161	[2869]	SELF     	R17 R17 K31 ; R18 := R17; R17 := R17[0xa1c390fe]
	162	[2869]	CALL     	R17 2 2 ; R17 := R17(R18)
	163	[2869]	GETGLOBAL	R18 K28 ; R18 := 0x25d99d89
	164	[2869]	SELF     	R18 R18 K32 ; R19 := R18; R18 := R18[0x25a6e75e]
	165	[2869]	CALL     	R18 2 2 ; R18 := R18(R19)
	166	[2869]	NEWTABLE 	R19 0 2 ; R19 := {}
	167	[2869]	GETTABLE 	R20 R9 K27 ; R20 := R9["PurchasedItems"]
	168	[2869]	SETTABLE 	R19 K33 R20 ; R19["Items"] := R20
	169	[2869]	GETTABLE 	R20 R9 K35 ; R20 := R9["PurchasedIsDictionary"]
	170	[2869]	SETTABLE 	R19 K34 R20 ; R19["Dictionary"] := R20
	171	[2869]	OP_LOADBOOL	R20 1 0 ; R20 := true
	172	[2869]	CALL     	R14 7 4 ; R14,R15,R16 := R14(R15,R16,R17,R18,R19,R20)
	173	[2869]	MOVE     	R13 R16 ; R13 := R16
	174	[2869]	MOVE     	R12 R15 ; R12 := R15
	175	[2869]	MOVE     	R11 R14 ; R11 := R14
	176	[2870]	EQ       	1 R12 K17 ; if R12 == nil then PC := 189
	177	[2870]	JMP      	189 ; PC := 189
	178	[2870]	EQ       	1 R12 K0 ; if R12 == "" then PC := 189
	179	[2870]	JMP      	189 ; PC := 189
	180	[2871]	MOVE     	R14 R3 ; R14 := R3
	181	[2871]	LOADK    	R15 K25 ; R15 := "<br><br>"
	182	[2871]	SELF     	R16 R0 K11 ; R17 := R0; R16 := R0[0x42b04007]
	183	[2871]	LOADK    	R18 K36 ; R18 := "<WARNING>"
	184	[2871]	OP_LOADBOOL	R19 1 0 ; R19 := true
	185	[2871]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	186	[2871]	LOADK    	R17 K37 ; R17 := " "
	187	[2871]	MOVE     	R18 R12 ; R18 := R12
	188	[2871]	CONCAT   	R3 R14 R18 ; R3 := R14 .. R15 .. R16 .. R17 .. R18
	189	[2876]	GETGLOBAL	R14 K2 ; R14 := 0x7b998233
	190	[2876]	GETTABLE 	R15 R1 K15 ; R15 := R1["mMod"]
	191	[2876]	CALL     	R14 2 2 ; R14 := R14(R15)
	192	[2876]	TEST     	R14 1 ; if R14 then PC := 200
	193	[2876]	JMP      	200 ; PC := 200
	194	[2877]	MOVE     	R14 R3 ; R14 := R3
	195	[2877]	GETTABLE 	R15 R1 K15 ; R15 := R1["mMod"]
	196	[2877]	GETTABLE 	R15 R15 K38 ; R15 := R15["Card"]
	197	[2877]	GETTABLE 	R15 R15 K39 ; R15 := R15["mDesc"]
	198	[2877]	CONCAT   	R3 R14 R15 ; R3 := R14 .. R15
	199	[2877]	JMP      	224 ; PC := 224
	200	[2878]	GETTABLE 	R14 R1 K40 ; R14 := R1["mModDescOverride"]
	201	[2878]	EQ       	1 R14 K17 ; if R14 == nil then PC := 207
	202	[2878]	JMP      	207 ; PC := 207
	203	[2879]	MOVE     	R14 R3 ; R14 := R3
	204	[2879]	GETTABLE 	R15 R1 K40 ; R15 := R1["mModDescOverride"]
	205	[2879]	CONCAT   	R3 R14 R15 ; R3 := R14 .. R15
	206	[2879]	JMP      	224 ; PC := 224
	207	[2881]	GETUPVAL 	R14 U1 ; R14 := U1
	208	[2881]	GETTABLE 	R14 R14 K5 ; R14 := R14[0x5d10207d]
	209	[2881]	LOADK    	R15 := 10.000000
	210	[2881]	OP_LOADBOOL	R16 1 0 ; R16 := true
	211	[2881]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	212	[2882]	MOVE     	R15 R3 ; R15 := R3
	213	[2882]	GETUPVAL 	R16 U2 ; R16 := U2
	214	[2882]	GETTABLE 	R16 R16 K41 ; R16 := R16[0x80c4a70a]
	215	[2882]	MOVE     	R17 R0 ; R17 := R0
	216	[2882]	MOVE     	R18 R4 ; R18 := R4
	217	[2882]	GETUPVAL 	R19 U0 ; R19 := U0
	218	[2882]	GETTABLE 	R19 R19 K4 ; R19 := R19[0x9f57dd7d]
	219	[2882]	MOVE     	R20 R14 ; R20 := R14
	220	[2882]	CALL     	R19 2 2 ; R19 := R19(R20)
	221	[2882]	MOVE     	R20 R6 ; R20 := R6
	222	[2882]	CALL     	R16 5 2 ; R16 := R16(R17,R18,R19,R20)
	223	[2882]	CONCAT   	R3 R15 R16 ; R3 := R15 .. R16
	224	[2884]	RETURN   	R3 2 ; return R3 
	225	[2885]	RETURN   	R0 1 ; return 

function #51 <?:2888,2906> (43 instructions, 172 bytes at 0000021163637A10)
1 param, 14 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[2889]	LT       	0 R0 K0 ; if R0 >= 128.000000 then PC := 8
	2	[2889]	JMP      	8 ; PC := 8
	3	[2890]	GETGLOBAL	R1 K1 ; R1 := 0x7f5022cf
	4	[2890]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x0da4acb2]
	5	[2890]	MOVE     	R2 R0 ; R2 := R0
	6	[2890]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	7	[2890]	RETURN   	R1 0 ; return R1,... 
	8	[2893]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[2894]	GETGLOBAL	R2 K3 ; R2 := 0xc8802016
	10	[2894]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[2894]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	12	[2894]	JMP      	36 ; PC := 36
	13	[2895]	GETTABLE 	R7 R6 K4 ; R7 := R6[1.000000]
	14	[2895]	LE       	0 R0 R7 ; if R0 > R7 then PC := 36
	15	[2895]	JMP      	36 ; PC := 36
	16	[2896]	ADD      	R7 R5 K4 ; R7 := R5 + 1.000000
	17	[2896]	LOADK    	R8 := 2.000000
	18	[2896]	LOADK    	R9 := -1.000000
	19	[2896]	FORPREP  	R7 28 ; R7 -= R9; PC := 28
	20	[2897]	MOD      	R11 R0 K5 ; R11 := R0 % 64.000000
	21	[2898]	SUB      	R12 R0 R11 ; R12 := R0 - R11
	22	[2898]	DIV      	R0 R12 K5 ; R0 := R12 / 64.000000
	23	[2899]	GETGLOBAL	R12 K1 ; R12 := 0x7f5022cf
	24	[2899]	GETTABLE 	R12 R12 K2 ; R12 := R12[0x0da4acb2]
	25	[2899]	ADD      	R13 K0 R11 ; R13 := 128.000000 + R11
	26	[2899]	CALL     	R12 2 2 ; R12 := R12(R13)
	27	[2899]	SETTABLE 	R1 R10 R12 ; R1[R10] := R12
	28	[2896]	FORLOOP  	R7 20 ; R7 += R9; if R7 <= R8 then begin PC := 20; R10 := R7 end
	29	[2901]	GETGLOBAL	R12 K1 ; R12 := 0x7f5022cf
	30	[2901]	GETTABLE 	R12 R12 K2 ; R12 := R12[0x0da4acb2]
	31	[2901]	GETTABLE 	R13 R6 K6 ; R13 := R6[2.000000]
	32	[2901]	ADD      	R13 R13 R0 ; R13 := R13 + R0
	33	[2901]	CALL     	R12 2 2 ; R12 := R12(R13)
	34	[2901]	SETTABLE 	R1 K4 R12 ; R1[1.000000] := R12
	35	[2902]	JMP      	38 ; PC := 38
	36	[2894]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 13; R4 := R5 end
	37	[2903]	JMP      	13 ; PC := 13
	38	[2905]	GETGLOBAL	R12 K7 ; R12 := 0x33bdd652
	39	[2905]	GETTABLE 	R12 R12 K8 ; R12 := R12[0x76960806]
	40	[2905]	MOVE     	R13 R1 ; R13 := R1
	41	[2905]	TAILCALL 	R12 2 0 ; R12,... := R12(R13)
	42	[2905]	RETURN   	R12 0 ; return R12,... 
	43	[2906]	RETURN   	R0 1 ; return 

function #52 <?:2908,2910> (5 instructions, 20 bytes at 0000021163637CC0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2909]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2909]	MOVE     	R2 R0 ; R2 := R0
	3	[2909]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[2909]	RETURN   	R1 0 ; return R1,... 
	5	[2910]	RETURN   	R0 1 ; return 

function #53 <?:2912,2919> (13 instructions, 52 bytes at 0000021163637DB0)
1 param, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2916]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2916]	MOVE     	R2 R0 ; R2 := R0
	3	[2916]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2916]	TEST     	R1 1 ; if R1 then PC := 13
	5	[2916]	JMP      	13 ; PC := 13
	6	[2916]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	7	[2916]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x1467d5f4]
	8	[2916]	CALL     	R1 1 2 ; R1 := R1()
	9	[2916]	TEST     	R1 0 ; if not R1 then PC := 13
	10	[2916]	JMP      	13 ; PC := 13
	11	[2917]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x80dc5f76]
	12	[2917]	CALL     	R1 2 1 ; R1(R2)
	13	[2919]	RETURN   	R0 1 ; return 

function #54 <?:2921,2946> (59 instructions, 236 bytes at 0000021163637F30)
5 params, 13 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[2922]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[2922]	MOVE     	R6 R0 ; R6 := R0
	3	[2922]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[2922]	TEST     	R5 1 ; if R5 then PC := 12
	5	[2922]	JMP      	12 ; PC := 12
	6	[2922]	EQ       	1 R1 K1 ; if R1 == nil then PC := 12
	7	[2922]	JMP      	12 ; PC := 12
	8	[2922]	EQ       	1 R2 K1 ; if R2 == nil then PC := 12
	9	[2922]	JMP      	12 ; PC := 12
	10	[2922]	EQ       	0 R3 K1 ; if R3 ~= nil then PC := 13
	11	[2922]	JMP      	13 ; PC := 13
	12	[2923]	RETURN   	R0 1 ; return 
	13	[2926]	EQ       	0 R4 K1 ; if R4 ~= nil then PC := 16
	14	[2926]	JMP      	16 ; PC := 16
	15	[2927]	LOADK    	R4 := 0.000000
	16	[2930]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0x5f56eeab]
	17	[2930]	MOVE     	R7 R1 ; R7 := R1
	18	[2930]	LOADK    	R8 := 29.000000
	19	[2930]	MOVE     	R9 R2 ; R9 := R2
	20	[2930]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	21	[2931]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0x91a24e4b]
	22	[2931]	MOVE     	R7 R1 ; R7 := R1
	23	[2931]	LOADK    	R8 := 33.000000
	24	[2931]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	25	[2932]	LOADK    	R6 := 100.000000
	26	[2933]	LE       	0 R3 R5 ; if R3 > R5 then PC := 34
	27	[2933]	JMP      	34 ; PC := 34
	28	[2934]	GETGLOBAL	R7 K4 ; R7 := 0x5bced4c4
	29	[2934]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x99675e23]
	30	[2934]	DIV      	R8 R3 R5 ; R8 := R3 / R5
	31	[2934]	MUL      	R8 R8 K6 ; R8 := R8 * 100.000000
	32	[2934]	CALL     	R7 2 2 ; R7 := R7(R8)
	33	[2934]	MOVE     	R6 R7 ; R6 := R7
	34	[2936]	SELF     	R7 R0 K7 ; R8 := R0; R7 := R0[0x67bc869f]
	35	[2936]	MOVE     	R9 R1 ; R9 := R1
	36	[2936]	LOADK    	R10 := 5.000000
	37	[2936]	MOVE     	R11 R6 ; R11 := R6
	38	[2936]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	39	[2937]	SELF     	R7 R0 K7 ; R8 := R0; R7 := R0[0x67bc869f]
	40	[2937]	MOVE     	R9 R1 ; R9 := R1
	41	[2937]	LOADK    	R10 := 6.000000
	42	[2937]	MOVE     	R11 R6 ; R11 := R6
	43	[2937]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	44	[2938]	MOVE     	R7 R4 ; R7 := R4
	45	[2939]	EQ       	1 R6 K6 ; if R6 == 100.000000 then PC := 53
	46	[2939]	JMP      	53 ; PC := 53
	47	[2940]	GETGLOBAL	R8 K4 ; R8 := 0x5bced4c4
	48	[2940]	GETTABLE 	R8 R8 K8 ; R8 := R8[0x55f27c30]
	49	[2940]	SUB      	R9 K6 R6 ; R9 := 100.000000 - R6
	50	[2940]	DIV      	R9 R9 K9 ; R9 := R9 / 10.000000
	51	[2940]	CALL     	R8 2 2 ; R8 := R8(R9)
	52	[2940]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	53	[2943]	SELF     	R8 R0 K7 ; R9 := R0; R8 := R0[0x67bc869f]
	54	[2943]	MOVE     	R10 R1 ; R10 := R1
	55	[2943]	LOADK    	R11 := 1.000000
	56	[2943]	MOVE     	R12 R7 ; R12 := R7
	57	[2943]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	58	[2945]	RETURN   	R6 2 ; return R6 
	59	[2946]	RETURN   	R0 1 ; return 

function #55 <?:2948,2966> (101 instructions, 404 bytes at 0000021163638270)
10 params, 19 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[2949]	SELF     	R10 R0 K0 ; R11 := R0; R10 := R0[0x67bc869f]
	2	[2949]	MOVE     	R12 R1 ; R12 := R1
	3	[2949]	LOADK    	R13 := 1.000000
	4	[2949]	MOVE     	R14 R5 ; R14 := R5
	5	[2949]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	6	[2950]	SELF     	R10 R0 K0 ; R11 := R0; R10 := R0[0x67bc869f]
	7	[2950]	MOVE     	R12 R1 ; R12 := R1
	8	[2950]	LOADK    	R13 := 13.000000
	9	[2950]	MOVE     	R14 R6 ; R14 := R6
	10	[2950]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	11	[2951]	SELF     	R10 R0 K1 ; R11 := R0; R10 := R0[0xd5181643]
	12	[2951]	MOVE     	R12 R1 ; R12 := R1
	13	[2951]	LOADK    	R13 K2 ; R13 := ".Left"
	14	[2951]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	15	[2951]	MOVE     	R13 R8 ; R13 := R8
	16	[2951]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	17	[2952]	SELF     	R10 R0 K3 ; R11 := R0; R10 := R0[0x91e13703]
	18	[2952]	MOVE     	R12 R1 ; R12 := R1
	19	[2952]	LOADK    	R13 K2 ; R13 := ".Left"
	20	[2952]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	21	[2952]	LOADK    	R13 K4 ; R13 := "RectEdgeColor"
	22	[2952]	GETTABLE 	R14 R3 K5 ; R14 := R3["r"]
	23	[2952]	GETTABLE 	R15 R3 K6 ; R15 := R3["g"]
	24	[2952]	GETTABLE 	R16 R3 K7 ; R16 := R3["b"]
	25	[2952]	LOADK    	R17 := 1.000000
	26	[2952]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	27	[2953]	SELF     	R10 R0 K3 ; R11 := R0; R10 := R0[0x91e13703]
	28	[2953]	MOVE     	R12 R1 ; R12 := R1
	29	[2953]	LOADK    	R13 K2 ; R13 := ".Left"
	30	[2953]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	31	[2953]	LOADK    	R13 K8 ; R13 := "RectInnerColor"
	32	[2953]	GETTABLE 	R14 R3 K5 ; R14 := R3["r"]
	33	[2953]	GETTABLE 	R15 R3 K6 ; R15 := R3["g"]
	34	[2953]	GETTABLE 	R16 R3 K7 ; R16 := R3["b"]
	35	[2953]	LOADK    	R17 := 1.000000
	36	[2953]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	37	[2954]	EQ       	1 R9 K9 ; if R9 == false then PC := 49
	38	[2954]	JMP      	49 ; PC := 49
	39	[2955]	SELF     	R10 R0 K3 ; R11 := R0; R10 := R0[0x91e13703]
	40	[2955]	MOVE     	R12 R1 ; R12 := R1
	41	[2955]	LOADK    	R13 K2 ; R13 := ".Left"
	42	[2955]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	43	[2955]	LOADK    	R13 K10 ; R13 := "WipeSpeed"
	44	[2955]	LOADK    	R14 K11 ; R14 := 0.150000
	45	[2955]	LOADK    	R15 := -1.000000
	46	[2955]	LOADK    	R16 := 0.000000
	47	[2955]	LOADK    	R17 := 0.000000
	48	[2955]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	49	[2957]	SELF     	R10 R0 K1 ; R11 := R0; R10 := R0[0xd5181643]
	50	[2957]	MOVE     	R12 R1 ; R12 := R1
	51	[2957]	LOADK    	R13 K12 ; R13 := ".Right"
	52	[2957]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	53	[2957]	MOVE     	R13 R8 ; R13 := R8
	54	[2957]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	55	[2958]	SELF     	R10 R0 K3 ; R11 := R0; R10 := R0[0x91e13703]
	56	[2958]	MOVE     	R12 R1 ; R12 := R1
	57	[2958]	LOADK    	R13 K12 ; R13 := ".Right"
	58	[2958]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	59	[2958]	LOADK    	R13 K4 ; R13 := "RectEdgeColor"
	60	[2958]	GETTABLE 	R14 R3 K5 ; R14 := R3["r"]
	61	[2958]	GETTABLE 	R15 R3 K6 ; R15 := R3["g"]
	62	[2958]	GETTABLE 	R16 R3 K7 ; R16 := R3["b"]
	63	[2958]	LOADK    	R17 := 1.000000
	64	[2958]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	65	[2959]	SELF     	R10 R0 K3 ; R11 := R0; R10 := R0[0x91e13703]
	66	[2959]	MOVE     	R12 R1 ; R12 := R1
	67	[2959]	LOADK    	R13 K12 ; R13 := ".Right"
	68	[2959]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	69	[2959]	LOADK    	R13 K8 ; R13 := "RectInnerColor"
	70	[2959]	GETTABLE 	R14 R3 K5 ; R14 := R3["r"]
	71	[2959]	GETTABLE 	R15 R3 K6 ; R15 := R3["g"]
	72	[2959]	GETTABLE 	R16 R3 K7 ; R16 := R3["b"]
	73	[2959]	LOADK    	R17 := 1.000000
	74	[2959]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	75	[2960]	EQ       	0 R9 K13 ; if R9 ~= true then PC := 87
	76	[2960]	JMP      	87 ; PC := 87
	77	[2961]	SELF     	R10 R0 K3 ; R11 := R0; R10 := R0[0x91e13703]
	78	[2961]	MOVE     	R12 R1 ; R12 := R1
	79	[2961]	LOADK    	R13 K12 ; R13 := ".Right"
	80	[2961]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	81	[2961]	LOADK    	R13 K10 ; R13 := "WipeSpeed"
	82	[2961]	LOADK    	R14 K11 ; R14 := 0.150000
	83	[2961]	LOADK    	R15 := -1.000000
	84	[2961]	LOADK    	R16 := 0.000000
	85	[2961]	LOADK    	R17 := 0.000000
	86	[2961]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	87	[2964]	SELF     	R10 R0 K0 ; R11 := R0; R10 := R0[0x67bc869f]
	88	[2964]	MOVE     	R12 R2 ; R12 := R2
	89	[2964]	LOADK    	R13 := 1.000000
	90	[2964]	MOVE     	R14 R7 ; R14 := R7
	91	[2964]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	92	[2965]	SELF     	R10 R0 K14 ; R11 := R0; R10 := R0[0xe261aa96]
	93	[2965]	MOVE     	R12 R2 ; R12 := R2
	94	[2965]	LOADK    	R13 K15 ; R13 := "Text"
	95	[2965]	LOADK    	R14 := 29.000000
	96	[2965]	SELF     	R15 R0 K16 ; R16 := R0; R15 := R0[0x42b04007]
	97	[2965]	MOVE     	R17 R4 ; R17 := R4
	98	[2965]	OP_LOADBOOL	R18 1 0 ; R18 := true
	99	[2965]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	100	[2965]	CALL     	R10 0 1 ; R10(R11,...)
	101	[2966]	RETURN   	R0 1 ; return 

function #56 <?:2968,2989> (112 instructions, 448 bytes at 0000021163638820)
4 params, 12 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[2970]	EQ       	1 R3 K0 ; if R3 == false then PC := 26
	2	[2970]	JMP      	26 ; PC := 26
	3	[2971]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	4	[2971]	MOVE     	R6 R1 ; R6 := R1
	5	[2971]	LOADK    	R7 K2 ; R7 := ".LeftFill.Left"
	6	[2971]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	7	[2971]	LOADK    	R7 K3 ; R7 := "TileOffset"
	8	[2971]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	9	[2971]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	10	[2971]	UNM      	R9 R9 ; R9 := ^ R9
	11	[2971]	LOADK    	R10 := 1.000000
	12	[2971]	LOADK    	R11 := 1.000000
	13	[2971]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	14	[2972]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	15	[2972]	MOVE     	R6 R1 ; R6 := R1
	16	[2972]	LOADK    	R7 K6 ; R7 := ".LeftFill.Right"
	17	[2972]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	18	[2972]	LOADK    	R7 K3 ; R7 := "TileOffset"
	19	[2972]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	20	[2972]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	21	[2972]	UNM      	R9 R9 ; R9 := ^ R9
	22	[2972]	LOADK    	R10 := 1.000000
	23	[2972]	LOADK    	R11 := 1.000000
	24	[2972]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	25	[2972]	JMP      	50 ; PC := 50
	26	[2974]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	27	[2974]	MOVE     	R6 R1 ; R6 := R1
	28	[2974]	LOADK    	R7 K2 ; R7 := ".LeftFill.Left"
	29	[2974]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	30	[2974]	LOADK    	R7 K3 ; R7 := "TileOffset"
	31	[2974]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	32	[2974]	UNM      	R8 R8 ; R8 := ^ R8
	33	[2974]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	34	[2974]	UNM      	R9 R9 ; R9 := ^ R9
	35	[2974]	LOADK    	R10 := 1.000000
	36	[2974]	LOADK    	R11 := 1.000000
	37	[2974]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	38	[2975]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	39	[2975]	MOVE     	R6 R1 ; R6 := R1
	40	[2975]	LOADK    	R7 K6 ; R7 := ".LeftFill.Right"
	41	[2975]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	42	[2975]	LOADK    	R7 K3 ; R7 := "TileOffset"
	43	[2975]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	44	[2975]	UNM      	R8 R8 ; R8 := ^ R8
	45	[2975]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	46	[2975]	UNM      	R9 R9 ; R9 := ^ R9
	47	[2975]	LOADK    	R10 := 1.000000
	48	[2975]	LOADK    	R11 := 1.000000
	49	[2975]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	50	[2979]	EQ       	1 R3 K0 ; if R3 == false then PC := 64
	51	[2979]	JMP      	64 ; PC := 64
	52	[2980]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	53	[2980]	MOVE     	R6 R1 ; R6 := R1
	54	[2980]	LOADK    	R7 K7 ; R7 := ".CenterFill.Left"
	55	[2980]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	56	[2980]	LOADK    	R7 K3 ; R7 := "TileOffset"
	57	[2980]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	58	[2980]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	59	[2980]	UNM      	R9 R9 ; R9 := ^ R9
	60	[2980]	LOADK    	R10 := 1.000000
	61	[2980]	LOADK    	R11 := 1.000000
	62	[2980]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	63	[2980]	JMP      	76 ; PC := 76
	64	[2982]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	65	[2982]	MOVE     	R6 R1 ; R6 := R1
	66	[2982]	LOADK    	R7 K7 ; R7 := ".CenterFill.Left"
	67	[2982]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	68	[2982]	LOADK    	R7 K3 ; R7 := "TileOffset"
	69	[2982]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	70	[2982]	UNM      	R8 R8 ; R8 := ^ R8
	71	[2982]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	72	[2982]	UNM      	R9 R9 ; R9 := ^ R9
	73	[2982]	LOADK    	R10 := 1.000000
	74	[2982]	LOADK    	R11 := 1.000000
	75	[2982]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	76	[2984]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	77	[2984]	MOVE     	R6 R1 ; R6 := R1
	78	[2984]	LOADK    	R7 K8 ; R7 := ".CenterFill.Right"
	79	[2984]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	80	[2984]	LOADK    	R7 K3 ; R7 := "TileOffset"
	81	[2984]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	82	[2984]	UNM      	R8 R8 ; R8 := ^ R8
	83	[2984]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	84	[2984]	UNM      	R9 R9 ; R9 := ^ R9
	85	[2984]	LOADK    	R10 := 1.000000
	86	[2984]	LOADK    	R11 := 1.000000
	87	[2984]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	88	[2987]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	89	[2987]	MOVE     	R6 R1 ; R6 := R1
	90	[2987]	LOADK    	R7 K9 ; R7 := ".RightFill.Left"
	91	[2987]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	92	[2987]	LOADK    	R7 K3 ; R7 := "TileOffset"
	93	[2987]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	94	[2987]	UNM      	R8 R8 ; R8 := ^ R8
	95	[2987]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	96	[2987]	UNM      	R9 R9 ; R9 := ^ R9
	97	[2987]	LOADK    	R10 := 1.000000
	98	[2987]	LOADK    	R11 := 1.000000
	99	[2987]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	100	[2988]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x91e13703]
	101	[2988]	MOVE     	R6 R1 ; R6 := R1
	102	[2988]	LOADK    	R7 K10 ; R7 := ".RightFill.Right"
	103	[2988]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	104	[2988]	LOADK    	R7 K3 ; R7 := "TileOffset"
	105	[2988]	GETTABLE 	R8 R2 K4 ; R8 := R2["x"]
	106	[2988]	UNM      	R8 R8 ; R8 := ^ R8
	107	[2988]	GETTABLE 	R9 R2 K5 ; R9 := R2["y"]
	108	[2988]	UNM      	R9 R9 ; R9 := ^ R9
	109	[2988]	LOADK    	R10 := 1.000000
	110	[2988]	LOADK    	R11 := 1.000000
	111	[2988]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	112	[2989]	RETURN   	R0 1 ; return 

function #57 <?:2991,3101> (368 instructions, 1472 bytes at 0000021163638ED0)
9 params, 53 slots, 1 upvalue, 0 locals, 48 constants, 0 functions
	1	[2992]	NEWTABLE 	R9 3 0 ; R9 := {}
	2	[2992]	NEWTABLE 	R10 0 3 ; R10 := {}
	3	[2993]	NEWTABLE 	R11 0 3 ; R11 := {}
	4	[2993]	SETTABLE 	R11 K1 K2 ; R11["r"] := 0.733333
	5	[2993]	SETTABLE 	R11 K3 K4 ; R11["g"] := 0.407843
	6	[2993]	SETTABLE 	R11 K5 K6 ; R11["b"] := 0.282353
	7	[2993]	SETTABLE 	R10 K0 R11 ; R10[0x25312c9b] := R11
	8	[2993]	NEWTABLE 	R11 0 3 ; R11 := {}
	9	[2993]	SETTABLE 	R11 K1 K8 ; R11["r"] := 0.121569
	10	[2993]	SETTABLE 	R11 K3 K8 ; R11["g"] := 0.121569
	11	[2993]	SETTABLE 	R11 K5 K9 ; R11["b"] := 0.129412
	12	[2993]	SETTABLE 	R10 K7 R11 ; R10["Color2"] := R11
	13	[2993]	SETTABLE 	R10 K10 K11 ; R10["Icon"] := "<COMMON>"
	14	[2993]	NEWTABLE 	R11 0 3 ; R11 := {}
	15	[2994]	NEWTABLE 	R12 0 3 ; R12 := {}
	16	[2994]	SETTABLE 	R12 K1 K12 ; R12["r"] := 0.470588
	17	[2994]	SETTABLE 	R12 K3 K13 ; R12["g"] := 0.462745
	18	[2994]	SETTABLE 	R12 K5 K13 ; R12["b"] := 0.462745
	19	[2994]	SETTABLE 	R11 K0 R12 ; R11[0x25312c9b] := R12
	20	[2994]	NEWTABLE 	R12 0 3 ; R12 := {}
	21	[2994]	SETTABLE 	R12 K1 K8 ; R12["r"] := 0.121569
	22	[2994]	SETTABLE 	R12 K3 K8 ; R12["g"] := 0.121569
	23	[2994]	SETTABLE 	R12 K5 K9 ; R12["b"] := 0.129412
	24	[2994]	SETTABLE 	R11 K7 R12 ; R11["Color2"] := R12
	25	[2994]	SETTABLE 	R11 K10 K14 ; R11["Icon"] := "<UNCOMMON>"
	26	[2994]	NEWTABLE 	R12 0 3 ; R12 := {}
	27	[2995]	NEWTABLE 	R13 0 3 ; R13 := {}
	28	[2995]	SETTABLE 	R13 K1 K15 ; R13["r"] := 0.647059
	29	[2995]	SETTABLE 	R13 K3 K16 ; R13["g"] := 0.564706
	30	[2995]	SETTABLE 	R13 K5 K17 ; R13["b"] := 0.274510
	31	[2995]	SETTABLE 	R12 K0 R13 ; R12[0x25312c9b] := R13
	32	[2995]	NEWTABLE 	R13 0 3 ; R13 := {}
	33	[2995]	SETTABLE 	R13 K1 K8 ; R13["r"] := 0.121569
	34	[2995]	SETTABLE 	R13 K3 K8 ; R13["g"] := 0.121569
	35	[2995]	SETTABLE 	R13 K5 K9 ; R13["b"] := 0.129412
	36	[2995]	SETTABLE 	R12 K7 R13 ; R12["Color2"] := R13
	37	[2995]	SETTABLE 	R12 K10 K18 ; R12["Icon"] := "<RARE>"
	38	[2996]	SETLIST  	R9 3 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 3
	39	[2998]	GETGLOBAL	R10 K19 ; R10 := 0x7b998233
	40	[2998]	MOVE     	R11 R4 ; R11 := R4
	41	[2998]	CALL     	R10 2 2 ; R10 := R10(R11)
	42	[2998]	TEST     	R10 0 ; if not R10 then PC := 46
	43	[2998]	JMP      	46 ; PC := 46
	44	[2999]	GETGLOBAL	R10 K20 ; R10 := 0x0032441c
	45	[2999]	GETTABLE 	R4 R10 K21 ; R4 := R10["UIMaterial_RectangleNoDepth"]
	46	[3001]	MOVE     	R10 R4 ; R10 := R4
	47	[3002]	LOADK    	R11 := 0.000000
	48	[3003]	LOADK    	R12 := 0.000000
	49	[3004]	LOADK    	R13 := 1.000000
	50	[3005]	LOADK    	R14 := 7.000000
	51	[3006]	LOADK    	R15 := 1.000000
	52	[3007]	LOADNIL  	R16 R24 ; R16 := R17 := R18 := R19 := R20 := R21 := R22 := R23 := R24 := nil
	53	[3010]	MOVE     	R25 R1 ; R25 := R1
	54	[3010]	LOADK    	R26 K22 ; R26 := ".Backer"
	55	[3010]	CONCAT   	R25 R25 R26 ; R25 := R25 .. R26
	56	[3011]	MOVE     	R26 R1 ; R26 := R1
	57	[3011]	LOADK    	R27 K23 ; R27 := ".LeftFill"
	58	[3011]	CONCAT   	R26 R26 R27 ; R26 := R26 .. R27
	59	[3012]	MOVE     	R27 R1 ; R27 := R1
	60	[3012]	LOADK    	R28 K24 ; R28 := ".CenterFill"
	61	[3012]	CONCAT   	R27 R27 R28 ; R27 := R27 .. R28
	62	[3013]	MOVE     	R28 R1 ; R28 := R1
	63	[3013]	LOADK    	R29 K25 ; R29 := ".RightFill"
	64	[3013]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	65	[3014]	MOVE     	R29 R1 ; R29 := R1
	66	[3014]	LOADK    	R30 K26 ; R30 := ".LeftIcon"
	67	[3014]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	68	[3015]	MOVE     	R30 R1 ; R30 := R1
	69	[3015]	LOADK    	R31 K27 ; R31 := ".CenterIcon"
	70	[3015]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	71	[3016]	MOVE     	R31 R1 ; R31 := R1
	72	[3016]	LOADK    	R32 K28 ; R32 := ".RightIcon"
	73	[3016]	CONCAT   	R31 R31 R32 ; R31 := R31 .. R32
	74	[3017]	GETGLOBAL	R32 K29 ; R32 := 0xcfc01047
	75	[3017]	MOVE     	R33 R2 ; R33 := R2
	76	[3017]	CALL     	R32 2 4 ; R32,R33,R34 := R32(R33)
	77	[3017]	JMP      	83 ; PC := 83
	78	[3018]	LT       	0 K30 R36 ; if 0.000000 >= R36 then PC := 83
	79	[3018]	JMP      	83 ; PC := 83
	80	[3019]	ADD      	R11 R11 K31 ; R11 := R11 + 1.000000
	81	[3020]	ADD      	R12 R12 R36 ; R12 := R12 + R36
	82	[3021]	MOVE     	R13 R35 ; R13 := R35
	83	[3017]	TFORLOOP 	R32 2 ; R35,R36 := R32(R33,R34); if R35 ~= nil then begin PC = 78; R34 := R35 end
	84	[3022]	JMP      	78 ; PC := 78
	85	[3024]	EQ       	0 R11 K31 ; if R11 ~= 1.000000 then PC := 132
	86	[3024]	JMP      	132 ; PC := 132
	87	[3025]	GETGLOBAL	R37 K20 ; R37 := 0x0032441c
	88	[3025]	GETTABLE 	R10 R37 K21 ; R10 := R37["UIMaterial_RectangleNoDepth"]
	89	[3027]	GETTABLE 	R37 R9 R13 ; R37 := R9[R13]
	90	[3027]	GETTABLE 	R16 R37 K7 ; R16 := R37["Color2"]
	91	[3028]	GETTABLE 	R37 R9 R13 ; R37 := R9[R13]
	92	[3028]	GETTABLE 	R17 R37 K0 ; R17 := R37["Color1"]
	93	[3029]	GETTABLE 	R37 R9 R13 ; R37 := R9[R13]
	94	[3029]	GETTABLE 	R18 R37 K7 ; R18 := R37["Color2"]
	95	[3030]	LOADK    	R19 K32 ; R19 := ""
	96	[3031]	GETTABLE 	R37 R9 R13 ; R37 := R9[R13]
	97	[3031]	GETTABLE 	R20 R37 K10 ; R20 := R37["Icon"]
	98	[3032]	LOADK    	R21 K32 ; R21 := ""
	99	[3034]	GETTABLE 	R37 R2 R13 ; R37 := R2[R13]
	100	[3035]	GETGLOBAL	R38 K33 ; R38 := 0x5bced4c4
	101	[3035]	GETTABLE 	R38 R38 K34 ; R38 := R38[0xb62ecfe0]
	102	[3035]	LOADK    	R39 K35 ; R39 := 0.010000
	103	[3035]	MUL      	R40 R15 K36 ; R40 := R15 * 4.000000
	104	[3035]	SUB      	R40 R3 R40 ; R40 := R3 - R40
	105	[3035]	SUB      	R41 K31 R37 ; R41 := 1.000000 - R37
	106	[3035]	MUL      	R40 R40 R41 ; R40 := R40 * R41
	107	[3035]	DIV      	R40 R40 K37 ; R40 := R40 / 2.000000
	108	[3035]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	109	[3035]	MOVE     	R22 R38 ; R22 := R38
	110	[3036]	GETGLOBAL	R38 K33 ; R38 := 0x5bced4c4
	111	[3036]	GETTABLE 	R38 R38 K34 ; R38 := R38[0xb62ecfe0]
	112	[3036]	LOADK    	R39 K35 ; R39 := 0.010000
	113	[3036]	MUL      	R40 R15 K36 ; R40 := R15 * 4.000000
	114	[3036]	SUB      	R40 R3 R40 ; R40 := R3 - R40
	115	[3036]	MUL      	R40 R40 R37 ; R40 := R40 * R37
	116	[3036]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	117	[3036]	MOVE     	R23 R38 ; R23 := R38
	118	[3037]	MOVE     	R24 R22 ; R24 := R22
	119	[3039]	SELF     	R38 R0 K38 ; R39 := R0; R38 := R0[0xf64b7262]
	120	[3039]	MOVE     	R40 R27 ; R40 := R27
	121	[3039]	LOADK    	R41 K39 ; R41 := "Left"
	122	[3039]	LOADK    	R42 := 12.000000
	123	[3039]	LOADK    	R43 := 16.000000
	124	[3039]	CALL     	R38 6 1 ; R38(R39,R40,R41,R42,R43)
	125	[3040]	SELF     	R38 R0 K40 ; R39 := R0; R38 := R0[0xc0a3774b]
	126	[3040]	MOVE     	R40 R27 ; R40 := R27
	127	[3040]	LOADK    	R41 K41 ; R41 := "Right"
	128	[3040]	LOADK    	R42 := 11.000000
	129	[3040]	OP_LOADBOOL	R43 1 0 ; R43 := true
	130	[3040]	CALL     	R38 6 1 ; R38(R39,R40,R41,R42,R43)
	131	[3040]	JMP      	186 ; PC := 186
	132	[3042]	GETTABLE 	R38 R9 K31 ; R38 := R9[1.000000]
	133	[3042]	GETTABLE 	R16 R38 K0 ; R16 := R38["Color1"]
	134	[3043]	GETTABLE 	R38 R9 K37 ; R38 := R9[2.000000]
	135	[3043]	GETTABLE 	R17 R38 K0 ; R17 := R38["Color1"]
	136	[3044]	GETTABLE 	R38 R9 K42 ; R38 := R9[3.000000]
	137	[3044]	GETTABLE 	R18 R38 K0 ; R18 := R38["Color1"]
	138	[3045]	GETTABLE 	R38 R9 K31 ; R38 := R9[1.000000]
	139	[3045]	GETTABLE 	R19 R38 K10 ; R19 := R38["Icon"]
	140	[3046]	GETTABLE 	R38 R9 K37 ; R38 := R9[2.000000]
	141	[3046]	GETTABLE 	R20 R38 K10 ; R20 := R38["Icon"]
	142	[3047]	GETTABLE 	R38 R9 K42 ; R38 := R9[3.000000]
	143	[3047]	GETTABLE 	R21 R38 K10 ; R21 := R38["Icon"]
	144	[3049]	GETTABLE 	R38 R2 K31 ; R38 := R2[1.000000]
	145	[3049]	DIV      	R38 R38 R12 ; R38 := R38 / R12
	146	[3050]	GETGLOBAL	R39 K33 ; R39 := 0x5bced4c4
	147	[3050]	GETTABLE 	R39 R39 K34 ; R39 := R39[0xb62ecfe0]
	148	[3050]	LOADK    	R40 K35 ; R40 := 0.010000
	149	[3050]	MUL      	R41 R15 K36 ; R41 := R15 * 4.000000
	150	[3050]	SUB      	R41 R3 R41 ; R41 := R3 - R41
	151	[3050]	MUL      	R41 R41 R38 ; R41 := R41 * R38
	152	[3050]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	153	[3050]	MOVE     	R22 R39 ; R22 := R39
	154	[3051]	GETTABLE 	R39 R2 K37 ; R39 := R2[2.000000]
	155	[3051]	DIV      	R38 R39 R12 ; R38 := R39 / R12
	156	[3052]	GETGLOBAL	R39 K33 ; R39 := 0x5bced4c4
	157	[3052]	GETTABLE 	R39 R39 K34 ; R39 := R39[0xb62ecfe0]
	158	[3052]	LOADK    	R40 K35 ; R40 := 0.010000
	159	[3052]	MUL      	R41 R15 K36 ; R41 := R15 * 4.000000
	160	[3052]	SUB      	R41 R3 R41 ; R41 := R3 - R41
	161	[3052]	MUL      	R41 R41 R38 ; R41 := R41 * R38
	162	[3052]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	163	[3052]	MOVE     	R23 R39 ; R23 := R39
	164	[3053]	GETTABLE 	R39 R2 K42 ; R39 := R2[3.000000]
	165	[3053]	DIV      	R38 R39 R12 ; R38 := R39 / R12
	166	[3054]	GETGLOBAL	R39 K33 ; R39 := 0x5bced4c4
	167	[3054]	GETTABLE 	R39 R39 K34 ; R39 := R39[0xb62ecfe0]
	168	[3054]	LOADK    	R40 K35 ; R40 := 0.010000
	169	[3054]	MUL      	R41 R15 K36 ; R41 := R15 * 4.000000
	170	[3054]	SUB      	R41 R3 R41 ; R41 := R3 - R41
	171	[3054]	MUL      	R41 R41 R38 ; R41 := R41 * R38
	172	[3054]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	173	[3054]	MOVE     	R24 R39 ; R24 := R39
	174	[3056]	SELF     	R39 R0 K38 ; R40 := R0; R39 := R0[0xf64b7262]
	175	[3056]	MOVE     	R41 R27 ; R41 := R27
	176	[3056]	LOADK    	R42 K39 ; R42 := "Left"
	177	[3056]	LOADK    	R43 := 12.000000
	178	[3056]	LOADK    	R44 := 32.000000
	179	[3056]	CALL     	R39 6 1 ; R39(R40,R41,R42,R43,R44)
	180	[3057]	SELF     	R39 R0 K40 ; R40 := R0; R39 := R0[0xc0a3774b]
	181	[3057]	MOVE     	R41 R27 ; R41 := R27
	182	[3057]	LOADK    	R42 K41 ; R42 := "Right"
	183	[3057]	LOADK    	R43 := 11.000000
	184	[3057]	OP_LOADBOOL	R44 0 0 ; R44 := false
	185	[3057]	CALL     	R39 6 1 ; R39(R40,R41,R42,R43,R44)
	186	[3059]	SELF     	R39 R0 K40 ; R40 := R0; R39 := R0[0xc0a3774b]
	187	[3059]	MOVE     	R41 R26 ; R41 := R26
	188	[3059]	LOADK    	R42 K41 ; R42 := "Right"
	189	[3059]	LOADK    	R43 := 11.000000
	190	[3059]	OP_LOADBOOL	R44 0 0 ; R44 := false
	191	[3059]	CALL     	R39 6 1 ; R39(R40,R41,R42,R43,R44)
	192	[3060]	SELF     	R39 R0 K40 ; R40 := R0; R39 := R0[0xc0a3774b]
	193	[3060]	MOVE     	R41 R28 ; R41 := R28
	194	[3060]	LOADK    	R42 K41 ; R42 := "Right"
	195	[3060]	LOADK    	R43 := 11.000000
	196	[3060]	OP_LOADBOOL	R44 0 0 ; R44 := false
	197	[3060]	CALL     	R39 6 1 ; R39(R40,R41,R42,R43,R44)
	198	[3062]	MOVE     	R39 R15 ; R39 := R15
	199	[3063]	ADD      	R40 R39 R15 ; R40 := R39 + R15
	200	[3063]	ADD      	R40 R40 R22 ; R40 := R40 + R22
	201	[3064]	ADD      	R41 R40 R15 ; R41 := R40 + R15
	202	[3064]	ADD      	R41 R41 R23 ; R41 := R41 + R23
	203	[3067]	ADD      	R22 R22 K31 ; R22 := R22 + 1.000000
	204	[3068]	SUB      	R41 R41 K31 ; R41 := R41 - 1.000000
	205	[3069]	ADD      	R24 R24 K31 ; R24 := R24 + 1.000000
	206	[3071]	EQ       	1 R7 K43 ; if R7 == nil then PC := 213
	207	[3071]	JMP      	213 ; PC := 213
	208	[3072]	SELF     	R42 R0 K44 ; R43 := R0; R42 := R0[0x67bc869f]
	209	[3072]	MOVE     	R44 R1 ; R44 := R1
	210	[3072]	LOADK    	R45 := 0.000000
	211	[3072]	MOVE     	R46 R7 ; R46 := R7
	212	[3072]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	213	[3074]	EQ       	1 R8 K43 ; if R8 == nil then PC := 220
	214	[3074]	JMP      	220 ; PC := 220
	215	[3075]	SELF     	R42 R0 K44 ; R43 := R0; R42 := R0[0x67bc869f]
	216	[3075]	MOVE     	R44 R1 ; R44 := R1
	217	[3075]	LOADK    	R45 := 1.000000
	218	[3075]	MOVE     	R46 R8 ; R46 := R8
	219	[3075]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	220	[3077]	SELF     	R42 R0 K44 ; R43 := R0; R42 := R0[0x67bc869f]
	221	[3077]	MOVE     	R44 R25 ; R44 := R25
	222	[3077]	LOADK    	R45 := 12.000000
	223	[3077]	MOVE     	R46 R3 ; R46 := R3
	224	[3077]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	225	[3078]	SELF     	R42 R0 K44 ; R43 := R0; R42 := R0[0x67bc869f]
	226	[3078]	MOVE     	R44 R25 ; R44 := R25
	227	[3078]	LOADK    	R45 := 13.000000
	228	[3078]	MOVE     	R46 R14 ; R46 := R14
	229	[3078]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	230	[3079]	SELF     	R42 R0 K44 ; R43 := R0; R42 := R0[0x67bc869f]
	231	[3079]	MOVE     	R44 R25 ; R44 := R25
	232	[3079]	LOADK    	R45 := 9.000000
	233	[3079]	LOADK    	R46 := 0.000000
	234	[3079]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	235	[3080]	SELF     	R42 R0 K44 ; R43 := R0; R42 := R0[0x67bc869f]
	236	[3080]	MOVE     	R44 R25 ; R44 := R25
	237	[3080]	LOADK    	R45 := 10.000000
	238	[3080]	LOADK    	R46 := 50.000000
	239	[3080]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	240	[3082]	TEST     	R6 1 ; if R6 then PC := 243
	241	[3082]	JMP      	243 ; PC := 243
	242	[3082]	LOADK    	R6 := 0.000000
	243	[3083]	MUL      	R42 R15 K37 ; R42 := R15 * 2.000000
	244	[3083]	SUB      	R14 R14 R42 ; R14 := R14 - R42
	245	[3084]	GETUPVAL 	R42 U0 ; R42 := U0
	246	[3084]	MOVE     	R43 R0 ; R43 := R0
	247	[3084]	MOVE     	R44 R26 ; R44 := R26
	248	[3084]	MOVE     	R45 R29 ; R45 := R29
	249	[3084]	MOVE     	R46 R16 ; R46 := R16
	250	[3084]	MOVE     	R47 R19 ; R47 := R19
	251	[3084]	MOVE     	R48 R15 ; R48 := R15
	252	[3084]	MOVE     	R49 R14 ; R49 := R14
	253	[3084]	MOVE     	R50 R6 ; R50 := R6
	254	[3084]	MOVE     	R51 R10 ; R51 := R10
	255	[3084]	OP_LOADBOOL	R52 1 0 ; R52 := true
	256	[3084]	CALL     	R42 11 1 ; R42(R43,R44,R45,R46,R47,R48,R49,R50,R51,R52)
	257	[3085]	GETUPVAL 	R42 U0 ; R42 := U0
	258	[3085]	MOVE     	R43 R0 ; R43 := R0
	259	[3085]	MOVE     	R44 R27 ; R44 := R27
	260	[3085]	MOVE     	R45 R30 ; R45 := R30
	261	[3085]	MOVE     	R46 R17 ; R46 := R17
	262	[3085]	MOVE     	R47 R20 ; R47 := R20
	263	[3085]	MOVE     	R48 R15 ; R48 := R15
	264	[3085]	MOVE     	R49 R14 ; R49 := R14
	265	[3085]	MOVE     	R50 R6 ; R50 := R6
	266	[3085]	MOVE     	R51 R4 ; R51 := R4
	267	[3085]	LOADNIL  	R52 R52 ; R52 := nil
	268	[3085]	CALL     	R42 11 1 ; R42(R43,R44,R45,R46,R47,R48,R49,R50,R51,R52)
	269	[3086]	GETUPVAL 	R42 U0 ; R42 := U0
	270	[3086]	MOVE     	R43 R0 ; R43 := R0
	271	[3086]	MOVE     	R44 R28 ; R44 := R28
	272	[3086]	MOVE     	R45 R31 ; R45 := R31
	273	[3086]	MOVE     	R46 R18 ; R46 := R18
	274	[3086]	MOVE     	R47 R21 ; R47 := R21
	275	[3086]	MOVE     	R48 R15 ; R48 := R15
	276	[3086]	MOVE     	R49 R14 ; R49 := R14
	277	[3086]	MOVE     	R50 R6 ; R50 := R6
	278	[3086]	MOVE     	R51 R10 ; R51 := R10
	279	[3086]	OP_LOADBOOL	R52 0 0 ; R52 := false
	280	[3086]	CALL     	R42 11 1 ; R42(R43,R44,R45,R46,R47,R48,R49,R50,R51,R52)
	281	[3088]	TEST     	R5 1 ; if R5 then PC := 284
	282	[3088]	JMP      	284 ; PC := 284
	283	[3088]	LOADK    	R5 K45 ; R5 := 0.200000
	284	[3089]	GETGLOBAL	R42 K46 ; R42 := 0x25312c9b
	285	[3089]	MOVE     	R43 R0 ; R43 := R0
	286	[3089]	MOVE     	R44 R26 ; R44 := R26
	287	[3089]	LOADK    	R45 := 2.000000
	288	[3089]	NEWTABLE 	R46 2 0 ; R46 := {}
	289	[3089]	LOADK    	R47 := 12.000000
	290	[3089]	LOADK    	R48 := 0.000000
	291	[3089]	SETLIST  	R46 2 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 2
	292	[3089]	NEWTABLE 	R47 2 0 ; R47 := {}
	293	[3089]	MOVE     	R48 R22 ; R48 := R22
	294	[3089]	MOVE     	R49 R39 ; R49 := R39
	295	[3089]	SETLIST  	R47 2 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 2
	296	[3089]	MOVE     	R48 R5 ; R48 := R5
	297	[3089]	CALL     	R42 7 1 ; R42(R43,R44,R45,R46,R47,R48)
	298	[3090]	GETGLOBAL	R42 K46 ; R42 := 0x25312c9b
	299	[3090]	MOVE     	R43 R0 ; R43 := R0
	300	[3090]	MOVE     	R44 R27 ; R44 := R27
	301	[3090]	LOADK    	R45 := 2.000000
	302	[3090]	NEWTABLE 	R46 2 0 ; R46 := {}
	303	[3090]	LOADK    	R47 := 12.000000
	304	[3090]	LOADK    	R48 := 0.000000
	305	[3090]	SETLIST  	R46 2 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 2
	306	[3090]	NEWTABLE 	R47 2 0 ; R47 := {}
	307	[3090]	MOVE     	R48 R23 ; R48 := R23
	308	[3090]	MOVE     	R49 R40 ; R49 := R40
	309	[3090]	SETLIST  	R47 2 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 2
	310	[3090]	MOVE     	R48 R5 ; R48 := R5
	311	[3090]	CALL     	R42 7 1 ; R42(R43,R44,R45,R46,R47,R48)
	312	[3091]	GETGLOBAL	R42 K46 ; R42 := 0x25312c9b
	313	[3091]	MOVE     	R43 R0 ; R43 := R0
	314	[3091]	MOVE     	R44 R28 ; R44 := R28
	315	[3091]	LOADK    	R45 := 2.000000
	316	[3091]	NEWTABLE 	R46 2 0 ; R46 := {}
	317	[3091]	LOADK    	R47 := 12.000000
	318	[3091]	LOADK    	R48 := 0.000000
	319	[3091]	SETLIST  	R46 2 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 2
	320	[3091]	NEWTABLE 	R47 2 0 ; R47 := {}
	321	[3091]	MOVE     	R48 R24 ; R48 := R24
	322	[3091]	MOVE     	R49 R41 ; R49 := R41
	323	[3091]	SETLIST  	R47 2 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 2
	324	[3091]	MOVE     	R48 R5 ; R48 := R5
	325	[3091]	CALL     	R42 7 1 ; R42(R43,R44,R45,R46,R47,R48)
	326	[3094]	EQ       	0 R11 K31 ; if R11 ~= 1.000000 then PC := 329
	327	[3094]	JMP      	329 ; PC := 329
	328	[3095]	LOADK    	R5 := 0.000000
	329	[3098]	GETGLOBAL	R42 K46 ; R42 := 0x25312c9b
	330	[3098]	MOVE     	R43 R0 ; R43 := R0
	331	[3098]	MOVE     	R44 R29 ; R44 := R29
	332	[3098]	LOADK    	R45 := 2.000000
	333	[3098]	NEWTABLE 	R46 1 0 ; R46 := {}
	334	[3098]	LOADK    	R47 := 0.000000
	335	[3098]	SETLIST  	R46 1 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 1
	336	[3098]	NEWTABLE 	R47 1 0 ; R47 := {}
	337	[3098]	DIV      	R48 R22 K37 ; R48 := R22 / 2.000000
	338	[3098]	ADD      	R48 R39 R48 ; R48 := R39 + R48
	339	[3098]	SETLIST  	R47 1 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
	340	[3098]	MOVE     	R48 R5 ; R48 := R5
	341	[3098]	CALL     	R42 7 1 ; R42(R43,R44,R45,R46,R47,R48)
	342	[3099]	GETGLOBAL	R42 K46 ; R42 := 0x25312c9b
	343	[3099]	MOVE     	R43 R0 ; R43 := R0
	344	[3099]	MOVE     	R44 R30 ; R44 := R30
	345	[3099]	LOADK    	R45 := 2.000000
	346	[3099]	NEWTABLE 	R46 1 0 ; R46 := {}
	347	[3099]	LOADK    	R47 := 0.000000
	348	[3099]	SETLIST  	R46 1 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 1
	349	[3099]	NEWTABLE 	R47 1 0 ; R47 := {}
	350	[3099]	DIV      	R48 R23 K37 ; R48 := R23 / 2.000000
	351	[3099]	ADD      	R48 R40 R48 ; R48 := R40 + R48
	352	[3099]	SETLIST  	R47 1 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
	353	[3099]	MOVE     	R48 R5 ; R48 := R5
	354	[3099]	CALL     	R42 7 1 ; R42(R43,R44,R45,R46,R47,R48)
	355	[3100]	GETGLOBAL	R42 K46 ; R42 := 0x25312c9b
	356	[3100]	MOVE     	R43 R0 ; R43 := R0
	357	[3100]	MOVE     	R44 R31 ; R44 := R31
	358	[3100]	LOADK    	R45 := 2.000000
	359	[3100]	NEWTABLE 	R46 1 0 ; R46 := {}
	360	[3100]	LOADK    	R47 := 0.000000
	361	[3100]	SETLIST  	R46 1 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 1
	362	[3100]	NEWTABLE 	R47 1 0 ; R47 := {}
	363	[3100]	DIV      	R48 R24 K37 ; R48 := R24 / 2.000000
	364	[3100]	ADD      	R48 R41 R48 ; R48 := R41 + R48
	365	[3100]	SETLIST  	R47 1 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
	366	[3100]	MOVE     	R48 R5 ; R48 := R5
	367	[3100]	CALL     	R42 7 1 ; R42(R43,R44,R45,R46,R47,R48)
	368	[3101]	RETURN   	R0 1 ; return 

function #58 <?:3103,3123> (42 instructions, 168 bytes at 000002116363A0A0)
2 params, 11 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[3104]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3104]	GETGLOBAL	R3 K1 ; R3 := 0x9ba7909f
	3	[3104]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[3104]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[3104]	JMP      	7 ; PC := 7
	6	[3105]	RETURN   	R0 1 ; return 
	7	[3109]	LOADK    	R2 := 1.000000
	8	[3109]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[3109]	LEN      	R3 R3 ; R3 := # R3
	10	[3109]	LOADK    	R4 := 1.000000
	11	[3109]	FORPREP  	R2 41 ; R2 -= R4; PC := 41
	12	[3110]	GETGLOBAL	R6 K1 ; R6 := 0x9ba7909f
	13	[3110]	SELF     	R6 R6 K2 ; R7 := R6; R6 := R6[0xbcfb64ab]
	14	[3110]	GETUPVAL 	R8 U0 ; R8 := U0
	15	[3110]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	16	[3110]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	17	[3111]	OP_LOADBOOL	R7 0 0 ; R7 := false
	18	[3112]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	19	[3112]	MOVE     	R9 R6 ; R9 := R6
	20	[3112]	CALL     	R8 2 2 ; R8 := R8(R9)
	21	[3112]	TEST     	R8 1 ; if R8 then PC := 34
	22	[3112]	JMP      	34 ; PC := 34
	23	[3113]	SELF     	R8 R6 K3 ; R9 := R6; R8 := R6[0xd4cc05b4]
	24	[3113]	CALL     	R8 2 2 ; R8 := R8(R9)
	25	[3113]	MOVE     	R7 R8 ; R7 := R8
	26	[3114]	TEST     	R0 0 ; if not R0 then PC := 31
	27	[3114]	JMP      	31 ; PC := 31
	28	[3114]	GETTABLE 	R8 R1 R5 ; R8 := R1[R5]
	29	[3114]	TEST     	R8 0 ; if not R8 then PC := 34
	30	[3114]	JMP      	34 ; PC := 34
	31	[3115]	SELF     	R8 R6 K4 ; R9 := R6; R8 := R6[0x368ad758]
	32	[3115]	MOVE     	R10 R0 ; R10 := R0
	33	[3115]	CALL     	R8 3 1 ; R8(R9,R10)
	34	[3119]	TEST     	R0 1 ; if R0 then PC := 41
	35	[3119]	JMP      	41 ; PC := 41
	36	[3120]	GETGLOBAL	R8 K5 ; R8 := 0x33bdd652
	37	[3120]	GETTABLE 	R8 R8 K6 ; R8 := R8[0x23d5322f]
	38	[3120]	MOVE     	R9 R1 ; R9 := R1
	39	[3120]	MOVE     	R10 R7 ; R10 := R7
	40	[3120]	CALL     	R8 3 1 ; R8(R9,R10)
	41	[3109]	FORLOOP  	R2 12 ; R2 += R4; if R2 <= R3 then begin PC := 12; R5 := R2 end
	42	[3123]	RETURN   	R0 1 ; return 

function #59 <?:3125,3140> (73 instructions, 292 bytes at 000002116363A330)
2 params, 10 slots, 0 upvalues, 0 locals, 10 constants, 2 functions
	1	[3126]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xc0a3774b]
	2	[3126]	MOVE     	R4 R1 ; R4 := R1
	3	[3126]	LOADK    	R5 K1 ; R5 := "Slice"
	4	[3126]	LOADK    	R6 := 11.000000
	5	[3126]	OP_LOADBOOL	R7 1 0 ; R7 := true
	6	[3126]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	7	[3127]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0xf64b7262]
	8	[3127]	MOVE     	R4 R1 ; R4 := R1
	9	[3127]	LOADK    	R5 K1 ; R5 := "Slice"
	10	[3127]	LOADK    	R6 := 5.000000
	11	[3127]	LOADK    	R7 := 1.000000
	12	[3127]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	13	[3128]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0xf64b7262]
	14	[3128]	MOVE     	R4 R1 ; R4 := R1
	15	[3128]	LOADK    	R5 K1 ; R5 := "Slice"
	16	[3128]	LOADK    	R6 := 6.000000
	17	[3128]	LOADK    	R7 := 1.000000
	18	[3128]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	19	[3129]	GETGLOBAL	R2 K3 ; R2 := 0x25312c9b
	20	[3129]	MOVE     	R3 R0 ; R3 := R0
	21	[3129]	MOVE     	R4 R1 ; R4 := R1
	22	[3129]	LOADK    	R5 K4 ; R5 := ".Slice"
	23	[3129]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	24	[3129]	LOADK    	R5 := 0.000000
	25	[3129]	NEWTABLE 	R6 2 0 ; R6 := {}
	26	[3129]	LOADK    	R7 := 5.000000
	27	[3129]	LOADK    	R8 := 6.000000
	28	[3129]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	29	[3129]	NEWTABLE 	R7 2 0 ; R7 := {}
	30	[3129]	LOADK    	R8 := 100.000000
	31	[3129]	LOADK    	R9 := 100.000000
	32	[3129]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	33	[3129]	LOADK    	R8 K6 ; R8 := 0.050000
	34	[3129]	CALL     	R2 7 1 ; R2(R3,R4,R5,R6,R7,R8)
	35	[3130]	GETGLOBAL	R2 K3 ; R2 := 0x25312c9b
	36	[3130]	MOVE     	R3 R0 ; R3 := R0
	37	[3130]	MOVE     	R4 R1 ; R4 := R1
	38	[3130]	LOADK    	R5 K7 ; R5 := ".Icon"
	39	[3130]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	40	[3130]	LOADK    	R5 := 2.000000
	41	[3130]	NEWTABLE 	R6 2 0 ; R6 := {}
	42	[3134]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	43	[3134]	MOVE     	R0 R0 ; R0 := R0
	44	[3134]	MOVE     	R0 R1 ; R0 := R1
	45	[3134]	LOADK    	R8 K8 ; R8 := "_alpha"
	46	[3134]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	47	[3134]	NEWTABLE 	R7 2 0 ; R7 := {}
	48	[3134]	LOADK    	R8 := 1.000000
	49	[3134]	LOADK    	R9 := 75.000000
	50	[3134]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	51	[3134]	LOADK    	R8 := 0.500000
	52	[3134]	LOADK    	R9 K6 ; R9 := 0.050000
	53	[3130]	CALL     	R2 8 1 ; R2(R3,R4,R5,R6,R7,R8,R9)
	54	[3135]	GETGLOBAL	R2 K3 ; R2 := 0x25312c9b
	55	[3135]	MOVE     	R3 R0 ; R3 := R0
	56	[3135]	MOVE     	R4 R1 ; R4 := R1
	57	[3135]	LOADK    	R5 K9 ; R5 := ".Icon2"
	58	[3135]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	59	[3135]	LOADK    	R5 := 2.000000
	60	[3135]	NEWTABLE 	R6 2 0 ; R6 := {}
	61	[3139]	CLOSURE  	R7 1 ; R7 := closure(Function #2)
	62	[3139]	MOVE     	R0 R0 ; R0 := R0
	63	[3139]	MOVE     	R0 R1 ; R0 := R1
	64	[3139]	LOADK    	R8 K8 ; R8 := "_alpha"
	65	[3139]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	66	[3139]	NEWTABLE 	R7 2 0 ; R7 := {}
	67	[3139]	LOADK    	R8 := 1.000000
	68	[3139]	LOADK    	R9 := 75.000000
	69	[3139]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	70	[3139]	LOADK    	R8 := 0.500000
	71	[3139]	LOADK    	R9 K6 ; R9 := 0.050000
	72	[3135]	CALL     	R2 8 1 ; R2(R3,R4,R5,R6,R7,R8,R9)
	73	[3140]	RETURN   	R0 1 ; return 

function #60 <?:3142,3150> (15 instructions, 60 bytes at 000002116363AB30)
0 params, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3143]	LOADK    	R0 := 2.000000
	2	[3144]	GETGLOBAL	R1 K0 ; R1 := 0xcd0165a3
	3	[3144]	MOVE     	R2 R0 ; R2 := R0
	4	[3144]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[3145]	GETTABLE 	R2 R1 K1 ; R2 := R1["mMovie"]
	6	[3145]	TEST     	R2 1 ; if R2 then PC := 14
	7	[3145]	JMP      	14 ; PC := 14
	8	[3146]	ADD      	R0 R0 K2 ; R0 := R0 + 1.000000
	9	[3147]	GETGLOBAL	R2 K0 ; R2 := 0xcd0165a3
	10	[3147]	MOVE     	R3 R0 ; R3 := R0
	11	[3147]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[3147]	MOVE     	R1 R2 ; R1 := R2
	13	[3147]	JMP      	5 ; PC := 5
	14	[3149]	RETURN   	R1 2 ; return R1 
	15	[3150]	RETURN   	R0 1 ; return 

function #61 <?:3152,3420> (205 instructions, 820 bytes at 000002116363ACA0)
9 params, 29 slots, 5 upvalues, 0 locals, 53 constants, 7 functions
	1	[3153]	NEWTABLE 	R9 3 0 ; R9 := {}
	2	[3153]	LOADK    	R10 := 35.000000
	3	[3153]	LOADK    	R11 := 60.000000
	4	[3153]	LOADK    	R12 := 100.000000
	5	[3153]	SETLIST  	R9 3 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 3
	6	[3154]	NEWTABLE 	R10 0 3 ; R10 := {}
	7	[3154]	SETTABLE 	R10 K0 R0 ; R10["mMovie"] := R0
	8	[3154]	NEWTABLE 	R11 0 0 ; R11 := {}
	9	[3154]	SETTABLE 	R10 K1 R11 ; R10["Hints"] := R11
	10	[3154]	SETTABLE 	R10 K2 R1 ; R10[0xaade900e] := R1
	11	[3155]	NEWTABLE 	R11 0 3 ; R11 := {}
	12	[3155]	SETTABLE 	R11 K4 K5 ; R11["Timer"] := nil
	13	[3155]	NEWTABLE 	R12 0 0 ; R12 := {}
	14	[3155]	SETTABLE 	R11 K6 R12 ; R11["Positions"] := R12
	15	[3155]	SETTABLE 	R11 K7 K8 ; R11["IconFocused"] := false
	16	[3155]	SETTABLE 	R10 K3 R11 ; R10["HintInfo"] := R11
	17	[3157]	LOADK    	R11 := 1.000000
	18	[3157]	LOADK    	R12 := 3.000000
	19	[3157]	LOADK    	R13 := 1.000000
	20	[3157]	FORPREP  	R11 62 ; R11 -= R13; PC := 62
	21	[3158]	MOVE     	R15 R1 ; R15 := R1
	22	[3158]	LOADK    	R16 K9 ; R16 := ".Hint.Hint"
	23	[3158]	GETGLOBAL	R17 K10 ; R17 := 0x64fb1586
	24	[3158]	MOVE     	R18 R14 ; R18 := R14
	25	[3158]	CALL     	R17 2 2 ; R17 := R17(R18)
	26	[3158]	CONCAT   	R15 R15 R17 ; R15 := R15 .. R16 .. R17
	27	[3159]	SELF     	R16 R0 K11 ; R17 := R0; R16 := R0[0xaade900e]
	28	[3159]	MOVE     	R18 R15 ; R18 := R15
	29	[3159]	LOADK    	R19 := 11.000000
	30	[3159]	OP_LOADBOOL	R20 0 0 ; R20 := false
	31	[3159]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	32	[3160]	SELF     	R16 R0 K12 ; R17 := R0; R16 := R0[0x67bc869f]
	33	[3160]	MOVE     	R18 R15 ; R18 := R15
	34	[3160]	LOADK    	R19 K13 ; R19 := ".Progress"
	35	[3160]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	36	[3160]	LOADK    	R19 := 9.000000
	37	[3160]	GETTABLE 	R20 R6 K14 ; R20 := R6["Content"]
	38	[3160]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	39	[3161]	SELF     	R16 R0 K15 ; R17 := R0; R16 := R0[0xd5181643]
	40	[3161]	MOVE     	R18 R15 ; R18 := R15
	41	[3161]	LOADK    	R19 K16 ; R19 := ".Icon"
	42	[3161]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	43	[3161]	MOVE     	R19 R2 ; R19 := R2
	44	[3161]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	45	[3163]	SELF     	R16 R0 K17 ; R17 := R0; R16 := R0[0x91a24e4b]
	46	[3163]	MOVE     	R18 R15 ; R18 := R15
	47	[3163]	LOADK    	R19 := 0.000000
	48	[3163]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	49	[3164]	SELF     	R17 R0 K17 ; R18 := R0; R17 := R0[0x91a24e4b]
	50	[3164]	MOVE     	R19 R15 ; R19 := R15
	51	[3164]	LOADK    	R20 := 1.000000
	52	[3164]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	53	[3165]	GETGLOBAL	R18 K18 ; R18 := 0x33bdd652
	54	[3165]	GETTABLE 	R18 R18 K19 ; R18 := R18[0x23d5322f]
	55	[3165]	GETTABLE 	R19 R10 K3 ; R19 := R10["HintInfo"]
	56	[3165]	GETTABLE 	R19 R19 K6 ; R19 := R19["Positions"]
	57	[3165]	NEWTABLE 	R20 2 0 ; R20 := {}
	58	[3165]	MOVE     	R21 R16 ; R21 := R16
	59	[3165]	MOVE     	R22 R17 ; R22 := R17
	60	[3165]	SETLIST  	R20 2 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 2
	61	[3165]	CALL     	R18 3 1 ; R18(R19,R20)
	62	[3157]	FORLOOP  	R11 21 ; R11 += R13; if R11 <= R12 then begin PC := 21; R14 := R11 end
	63	[3168]	GETGLOBAL	R18 K20 ; R18 := 0x5f0788c4
	64	[3168]	SELF     	R19 R0 K21 ; R20 := R0; R19 := R0[0x42b04007]
	65	[3168]	LOADK    	R21 K22 ; R21 := "/Lotus/Language/Kingpins/NemesisView_HintLabel"
	66	[3168]	OP_LOADBOOL	R22 0 0 ; R22 := false
	67	[3168]	CALL     	R19 4 0 ; R19,... := R19(R20,R21,R22)
	68	[3168]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	69	[3169]	SELF     	R19 R0 K23 ; R20 := R0; R19 := R0[0x5f56eeab]
	70	[3169]	MOVE     	R21 R1 ; R21 := R1
	71	[3169]	LOADK    	R22 K24 ; R22 := ".Hint.Label"
	72	[3169]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	73	[3169]	LOADK    	R22 := 29.000000
	74	[3169]	MOVE     	R23 R18 ; R23 := R18
	75	[3169]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	76	[3170]	SELF     	R19 R0 K12 ; R20 := R0; R19 := R0[0x67bc869f]
	77	[3170]	MOVE     	R21 R1 ; R21 := R1
	78	[3170]	LOADK    	R22 K24 ; R22 := ".Hint.Label"
	79	[3170]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	80	[3170]	LOADK    	R22 := 36.000000
	81	[3170]	GETTABLE 	R23 R6 K25 ; R23 := R6["FloatingContent"]
	82	[3170]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	83	[3171]	SELF     	R19 R0 K17 ; R20 := R0; R19 := R0[0x91a24e4b]
	84	[3171]	MOVE     	R21 R1 ; R21 := R1
	85	[3171]	LOADK    	R22 K24 ; R22 := ".Hint.Label"
	86	[3171]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	87	[3171]	LOADK    	R22 := 33.000000
	88	[3171]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	89	[3172]	GETUPVAL 	R20 U0 ; R20 := U0
	90	[3172]	MOVE     	R21 R0 ; R21 := R0
	91	[3172]	MOVE     	R22 R1 ; R22 := R1
	92	[3172]	LOADK    	R23 K26 ; R23 := ".Hint.Underline"
	93	[3172]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	94	[3172]	ADD      	R23 R19 K27 ; R23 := R19 + 20.000000
	95	[3172]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	96	[3173]	SELF     	R20 R0 K12 ; R21 := R0; R20 := R0[0x67bc869f]
	97	[3173]	MOVE     	R22 R1 ; R22 := R1
	98	[3173]	LOADK    	R23 K26 ; R23 := ".Hint.Underline"
	99	[3173]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	100	[3173]	LOADK    	R23 := 9.000000
	101	[3173]	GETTABLE 	R24 R6 K25 ; R24 := R6["FloatingContent"]
	102	[3173]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	103	[3174]	SELF     	R20 R0 K12 ; R21 := R0; R20 := R0[0x67bc869f]
	104	[3174]	MOVE     	R22 R1 ; R22 := R1
	105	[3174]	LOADK    	R23 K26 ; R23 := ".Hint.Underline"
	106	[3174]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	107	[3174]	LOADK    	R23 := 0.000000
	108	[3174]	DIV      	R24 R19 K28 ; R24 := R19 / 2.000000
	109	[3174]	UNM      	R24 R24 ; R24 := ^ R24
	110	[3174]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	111	[3175]	SELF     	R20 R0 K11 ; R21 := R0; R20 := R0[0xaade900e]
	112	[3175]	MOVE     	R22 R1 ; R22 := R1
	113	[3175]	LOADK    	R23 K9 ; R23 := ".Hint.Hint"
	114	[3175]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	115	[3175]	LOADK    	R23 := 11.000000
	116	[3175]	OP_LOADBOOL	R24 0 0 ; R24 := false
	117	[3175]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	118	[3177]	GETTABLE 	R20 R7 K30 ; R20 := R7[0xda0c93a2]
	119	[3177]	MOVE     	R21 R0 ; R21 := R0
	120	[3177]	MOVE     	R22 R1 ; R22 := R1
	121	[3177]	LOADK    	R23 K31 ; R23 := ".CombinationHistory.Grid.Element"
	122	[3177]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	123	[3177]	LOADNIL  	R23 R23 ; R23 := nil
	124	[3177]	LOADK    	R24 := 1.000000
	125	[3177]	GETUPVAL 	R25 U1 ; R25 := U1
	126	[3177]	GETTABLE 	R25 R25 K32 ; R25 := R25[0x06d055f9]
	127	[3177]	EQ       	0 R8 K5 ; if R8 ~= nil then PC := 130
	128	[3177]	JMP      	130 ; PC := 130
	129	[3177]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 130
	130	[3177]	OP_LOADBOOL	R26 1 0 ; R26 := true
	131	[3177]	MOVE     	R27 R8 ; R27 := R8
	132	[3177]	LOADK    	R28 := 6.000000
	133	[3177]	CALL     	R25 4 0 ; R25,... := R25(R26,R27,R28)
	134	[3177]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	135	[3177]	SETTABLE 	R10 K29 R20 ; R10["CombGrid"] := R20
	136	[3178]	GETTABLE 	R20 R10 K29 ; R20 := R10["CombGrid"]
	137	[3178]	SETTABLE 	R20 K33 K34 ; R20["mRowSeparation"] := 60.000000
	138	[3179]	GETTABLE 	R20 R10 K29 ; R20 := R10["CombGrid"]
	139	[3179]	SETTABLE 	R20 K35 K36 ; R20["mColumnSeparation"] := 200.000000
	140	[3180]	GETTABLE 	R20 R10 K29 ; R20 := R10["CombGrid"]
	141	[3180]	SELF     	R20 R20 K37 ; R21 := R20; R20 := R20[0x3bc79f4f]
	142	[3180]	MOVE     	R22 R1 ; R22 := R1
	143	[3180]	LOADK    	R23 K38 ; R23 := ".CombinationHistory.ScrollBar"
	144	[3180]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	145	[3180]	LOADK    	R23 := -5.000000
	146	[3180]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	147	[3181]	GETTABLE 	R20 R10 K29 ; R20 := R10["CombGrid"]
	148	[3181]	SELF     	R20 R20 K39 ; R21 := R20; R20 := R20[0x7220acb6]
	149	[3181]	CALL     	R20 2 1 ; R20(R21)
	150	[3182]	GETTABLE 	R20 R10 K29 ; R20 := R10["CombGrid"]
	151	[3231]	CLOSURE  	R21 0 ; R21 := closure(Function #1)
	152	[3231]	MOVE     	R0 R10 ; R0 := R10
	153	[3231]	MOVE     	R0 R0 ; R0 := R0
	154	[3231]	MOVE     	R0 R4 ; R0 := R4
	155	[3231]	MOVE     	R0 R6 ; R0 := R6
	156	[3231]	MOVE     	R0 R3 ; R0 := R3
	157	[3231]	SETTABLE 	R20 K40 R21 ; R20["mElementDrawCallback"] := R21
	158	[3233]	SELF     	R20 R0 K12 ; R21 := R0; R20 := R0[0x67bc869f]
	159	[3233]	MOVE     	R22 R1 ; R22 := R1
	160	[3233]	LOADK    	R23 K41 ; R23 := ".CombinationHistory.Hint"
	161	[3233]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	162	[3233]	LOADK    	R23 := 36.000000
	163	[3233]	GETTABLE 	R24 R6 K25 ; R24 := R6["FloatingContent"]
	164	[3233]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	165	[3234]	SELF     	R20 R0 K23 ; R21 := R0; R20 := R0[0x5f56eeab]
	166	[3234]	MOVE     	R22 R1 ; R22 := R1
	167	[3234]	LOADK    	R23 K41 ; R23 := ".CombinationHistory.Hint"
	168	[3234]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	169	[3234]	LOADK    	R23 := 38.000000
	170	[3234]	LOADK    	R24 K42 ; R24 := "center"
	171	[3234]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	172	[3235]	SELF     	R20 R0 K43 ; R21 := R0; R20 := R0[0x20b98db3]
	173	[3235]	MOVE     	R22 R1 ; R22 := R1
	174	[3235]	LOADK    	R23 K44 ; R23 := ".CombinationHistory.Hint.text"
	175	[3235]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	176	[3235]	LOADK    	R23 K45 ; R23 := "/Lotus/Language/Kingpins/NemesisView_NoHistoryHint"
	177	[3235]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	178	[3258]	CLOSURE  	R20 1 ; R20 := closure(Function #2)
	179	[3258]	GETUPVAL 	R0 U1 ; R0 := U1
	180	[3258]	MOVE     	R0 R3 ; R0 := R3
	181	[3258]	MOVE     	R0 R4 ; R0 := R4
	182	[3258]	MOVE     	R0 R5 ; R0 := R5
	183	[3258]	SETTABLE 	R10 K46 R20 ; R10["AdjustToViewport"] := R20
	184	[3306]	CLOSURE  	R20 2 ; R20 := closure(Function #3)
	185	[3306]	GETUPVAL 	R0 U2 ; R0 := U2
	186	[3306]	GETUPVAL 	R0 U3 ; R0 := U3
	187	[3306]	MOVE     	R0 R5 ; R0 := R5
	188	[3306]	SETTABLE 	R10 K47 R20 ; R10["PopulateCombinationHistory"] := R20
	189	[3335]	CLOSURE  	R20 3 ; R20 := closure(Function #4)
	190	[3335]	SETTABLE 	R10 K48 R20 ; R10["RotateHints"] := R20
	191	[3387]	CLOSURE  	R20 4 ; R20 := closure(Function #5)
	192	[3387]	MOVE     	R0 R9 ; R0 := R9
	193	[3387]	MOVE     	R0 R6 ; R0 := R6
	194	[3387]	GETUPVAL 	R0 U2 ; R0 := U2
	195	[3387]	GETUPVAL 	R0 U1 ; R0 := U1
	196	[3387]	SETTABLE 	R10 K49 R20 ; R10["PopulateHints"] := R20
	197	[3409]	CLOSURE  	R20 5 ; R20 := closure(Function #6)
	198	[3409]	GETUPVAL 	R0 U4 ; R0 := U4
	199	[3409]	SETTABLE 	R10 K50 R20 ; R10["HintFocused"] := R20
	200	[3415]	CLOSURE  	R20 6 ; R20 := closure(Function #7)
	201	[3415]	SETTABLE 	R10 K51 R20 ; R10["HintUnfocused"] := R20
	202	[3417]	SELF     	R20 R10 K52 ; R21 := R10; R20 := R10[0x6311580e]
	203	[3417]	CALL     	R20 2 1 ; R20(R21)
	204	[3419]	RETURN   	R10 2 ; return R10 
	205	[3420]	RETURN   	R0 1 ; return 

function #62 <?:3422,3449> (79 instructions, 316 bytes at 000002116363EA30)
6 params, 17 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[3423]	GETGLOBAL	R6 K0 ; R6 := 0xb009bbc6
	2	[3423]	GETTABLE 	R7 R1 K1 ; R7 := R1["mUpgradeType"]
	3	[3423]	CALL     	R6 2 2 ; R6 := R6(R7)
	4	[3424]	LOADK    	R7 K2 ; R7 := ""
	5	[3425]	LOADK    	R8 := 0.000000
	6	[3426]	LOADK    	R9 := 0.000000
	7	[3428]	GETGLOBAL	R10 K3 ; R10 := 0x7b998233
	8	[3428]	MOVE     	R11 R6 ; R11 := R6
	9	[3428]	CALL     	R10 2 2 ; R10 := R10(R11)
	10	[3428]	TEST     	R10 1 ; if R10 then PC := 75
	11	[3428]	JMP      	75 ; PC := 75
	12	[3429]	SELF     	R10 R6 K4 ; R11 := R6; R10 := R6[0x6868f7f8]
	13	[3429]	GETUPVAL 	R12 U0 ; R12 := U0
	14	[3429]	GETTABLE 	R12 R12 K5 ; R12 := R12[0x06d055f9]
	15	[3429]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	16	[3429]	MOVE     	R14 R4 ; R14 := R4
	17	[3429]	CALL     	R13 2 2 ; R13 := R13(R14)
	18	[3429]	NOT      	R13 R13 ; R13 := not R13
	19	[3429]	MOVE     	R14 R4 ; R14 := R4
	20	[3429]	GETTABLE 	R15 R1 K6 ; R15 := R1["mUpgradeFingerprint"]
	21	[3429]	CALL     	R12 4 0 ; R12,... := R12(R13,R14,R15)
	22	[3429]	CALL     	R10 0 1 ; R10(R11,...)
	23	[3430]	SELF     	R10 R6 K7 ; R11 := R6; R10 := R6[0x0ad758cb]
	24	[3430]	CALL     	R10 2 2 ; R10 := R10(R11)
	25	[3430]	LT       	0 K8 R10 ; if 0.000000 >= R10 then PC := 75
	26	[3430]	JMP      	75 ; PC := 75
	27	[3431]	SELF     	R10 R6 K9 ; R11 := R6; R10 := R6[0xfef27732]
	28	[3431]	LOADK    	R12 := 0.000000
	29	[3431]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	30	[3432]	GETUPVAL 	R11 U0 ; R11 := U0
	31	[3432]	GETTABLE 	R11 R11 K5 ; R11 := R11[0x06d055f9]
	32	[3432]	GETGLOBAL	R12 K3 ; R12 := 0x7b998233
	33	[3432]	MOVE     	R13 R5 ; R13 := R5
	34	[3432]	CALL     	R12 2 2 ; R12 := R12(R13)
	35	[3432]	NOT      	R12 R12 ; R12 := not R12
	36	[3432]	MOVE     	R13 R5 ; R13 := R5
	37	[3432]	SELF     	R14 R10 K10 ; R15 := R10; R14 := R10[0x14be127f]
	38	[3432]	CALL     	R14 2 0 ; R14,... := R14(R15)
	39	[3432]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	40	[3432]	MOVE     	R8 R11 ; R8 := R11
	41	[3433]	SELF     	R11 R10 K11 ; R12 := R10; R11 := R10[0x0fbc7293]
	42	[3433]	CALL     	R11 2 2 ; R11 := R11(R12)
	43	[3433]	MOVE     	R9 R11 ; R9 := R11
	44	[3434]	GETUPVAL 	R11 U1 ; R11 := U1
	45	[3434]	GETTABLE 	R11 R11 K12 ; R11 := R11[0xf851aa35]
	46	[3434]	MOVE     	R12 R8 ; R12 := R8
	47	[3434]	CALL     	R11 2 2 ; R11 := R11(R12)
	48	[3435]	TEST     	R3 0 ; if not R3 then PC := 55
	49	[3435]	JMP      	55 ; PC := 55
	50	[3436]	LOADK    	R12 K13 ; R12 := "<"
	51	[3436]	MOVE     	R13 R11 ; R13 := R11
	52	[3436]	LOADK    	R14 K14 ; R14 := ">"
	53	[3436]	CONCAT   	R11 R12 R14 ; R11 := R12 .. R13 .. R14
	54	[3436]	JMP      	63 ; PC := 63
	55	[3438]	TEST     	R2 0 ; if not R2 then PC := 60
	56	[3438]	JMP      	60 ; PC := 60
	57	[3439]	MOVE     	R12 R11 ; R12 := R11
	58	[3439]	LOADK    	R13 K15 ; R13 := "_NoIcon"
	59	[3439]	CONCAT   	R11 R12 R13 ; R11 := R12 .. R13
	60	[3442]	LOADK    	R12 K16 ; R12 := "/Lotus/Language/Game/"
	61	[3442]	MOVE     	R13 R11 ; R13 := R11
	62	[3442]	CONCAT   	R11 R12 R13 ; R11 := R12 .. R13
	63	[3444]	SELF     	R12 R0 K17 ; R13 := R0; R12 := R0[0x42b04007]
	64	[3444]	MOVE     	R14 R11 ; R14 := R11
	65	[3444]	OP_LOADBOOL	R15 1 0 ; R15 := true
	66	[3444]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	67	[3444]	LOADK    	R13 K18 ; R13 := " "
	68	[3444]	GETUPVAL 	R14 U0 ; R14 := U0
	69	[3444]	GETTABLE 	R14 R14 K19 ; R14 := R14[0x1142c7a8]
	70	[3444]	MUL      	R15 R9 K20 ; R15 := R9 * 100.000000
	71	[3444]	LOADK    	R16 := 1.000000
	72	[3444]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	73	[3444]	LOADK    	R15 K21 ; R15 := "%"
	74	[3444]	CONCAT   	R7 R12 R15 ; R7 := R12 .. R13 .. R14 .. R15
	75	[3448]	MOVE     	R12 R7 ; R12 := R7
	76	[3448]	MOVE     	R13 R8 ; R13 := R8
	77	[3448]	MOVE     	R14 R9 ; R14 := R9
	78	[3448]	RETURN   	R12 4 ; return R12, R13, R14 
	79	[3449]	RETURN   	R0 1 ; return 

function #63 <?:3451,3464> (48 instructions, 192 bytes at 000002116363EF00)
0 params, 8 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[3452]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[3452]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xe3a0bbca]
	3	[3452]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3453]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	5	[3453]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x46a0ebf5]
	6	[3453]	GETGLOBAL	R3 K3 ; R3 := 0x0469f296
	7	[3453]	LOADK    	R4 K4 ; R4 := "MuseumWaypoint"
	8	[3453]	CALL     	R3 2 0 ; R3,... := R3(R4)
	9	[3453]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	10	[3455]	GETGLOBAL	R2 K5 ; R2 := _T
	11	[3455]	NEWTABLE 	R3 2 0 ; R3 := {}
	12	[3455]	SELF     	R4 R0 K7 ; R5 := R0; R4 := R0[0xd1586535]
	13	[3455]	CALL     	R4 2 2 ; R4 := R4(R5)
	14	[3455]	SELF     	R5 R0 K8 ; R6 := R0; R5 := R0[0xcb3851b8]
	15	[3455]	CALL     	R5 2 2 ; R5 := R5(R6)
	16	[3455]	SELF     	R6 R0 K9 ; R7 := R0; R6 := R0[0xeea7f8c4]
	17	[3455]	CALL     	R6 2 0 ; R6,... := R6(R7)
	18	[3455]	SETLIST  	R3 0 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 0
	19	[3455]	SETTABLE 	R2 K6 R3 ; R2["PreMuseumState"] := R3
	20	[3456]	SELF     	R2 R0 K10 ; R3 := R0; R2 := R0[0x589ef1c1]
	21	[3456]	SELF     	R4 R1 K7 ; R5 := R1; R4 := R1[0xd1586535]
	22	[3456]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[3456]	SELF     	R5 R1 K8 ; R6 := R1; R5 := R1[0xcb3851b8]
	24	[3456]	CALL     	R5 2 0 ; R5,... := R5(R6)
	25	[3456]	CALL     	R2 0 1 ; R2(R3,...)
	26	[3457]	SELF     	R2 R0 K11 ; R3 := R0; R2 := R0[0xb41a4158]
	27	[3457]	SELF     	R4 R1 K8 ; R5 := R1; R4 := R1[0xcb3851b8]
	28	[3457]	CALL     	R4 2 0 ; R4,... := R4(R5)
	29	[3457]	CALL     	R2 0 1 ; R2(R3,...)
	30	[3459]	SELF     	R2 R0 K10 ; R3 := R0; R2 := R0[0x589ef1c1]
	31	[3459]	SELF     	R4 R1 K7 ; R5 := R1; R4 := R1[0xd1586535]
	32	[3459]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[3459]	SELF     	R5 R1 K8 ; R6 := R1; R5 := R1[0xcb3851b8]
	34	[3459]	CALL     	R5 2 0 ; R5,... := R5(R6)
	35	[3459]	CALL     	R2 0 1 ; R2(R3,...)
	36	[3460]	SELF     	R2 R0 K11 ; R3 := R0; R2 := R0[0xb41a4158]
	37	[3460]	SELF     	R4 R1 K8 ; R5 := R1; R4 := R1[0xcb3851b8]
	38	[3460]	CALL     	R4 2 0 ; R4,... := R4(R5)
	39	[3460]	CALL     	R2 0 1 ; R2(R3,...)
	40	[3462]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	41	[3462]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x46a0ebf5]
	42	[3462]	GETGLOBAL	R4 K3 ; R4 := 0x0469f296
	43	[3462]	LOADK    	R5 K12 ; R5 := "MuseumScript"
	44	[3462]	CALL     	R4 2 0 ; R4,... := R4(R5)
	45	[3462]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	46	[3463]	SELF     	R3 R2 K13 ; R4 := R2; R3 := R2[0xd91e1179]
	47	[3463]	CALL     	R3 2 1 ; R3(R4)
	48	[3464]	RETURN   	R0 1 ; return 

function #64 <?:3466,3477> (38 instructions, 152 bytes at 000002116363F2E0)
1 param, 10 slots, 0 upvalues, 0 locals, 21 constants, 0 functions
	1	[3467]	GETGLOBAL	R1 K0 ; R1 := 0xa421af95
	2	[3467]	LOADK    	R2 := 0.000000
	3	[3467]	LOADK    	R3 := 1000.000000
	4	[3467]	LOADK    	R4 := 0.000000
	5	[3467]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[3468]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	7	[3468]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x68d83431]
	8	[3468]	CALL     	R2 1 2 ; R2 := R2()
	9	[3469]	SETTABLE 	R2 K3 R0 ; R2["level"] := R0
	10	[3470]	SETTABLE 	R2 K4 K5 ; R2["streamingLayer"] := 511.000000
	11	[3471]	SETTABLE 	R2 K6 K8 ; R2["streamingMode"] := 1.000000
	12	[3472]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x30e5d39d]
	13	[3472]	LOADK    	R5 K10 ; R5 := "OnMuseumStreamed"
	14	[3472]	CALL     	R3 3 1 ; R3(R4,R5)
	15	[3473]	SELF     	R3 R2 K11 ; R4 := R2; R3 := R2[0x691a3b2d]
	16	[3473]	MOVE     	R5 R1 ; R5 := R1
	17	[3473]	GETGLOBAL	R6 K12 ; R6 := 0x00046924
	18	[3473]	CALL     	R6 1 0 ; R6,... := R6()
	19	[3473]	CALL     	R3 0 1 ; R3(R4,...)
	20	[3474]	GETGLOBAL	R3 K13 ; R3 := 0x89326c93
	21	[3474]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0x78298275]
	22	[3474]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[3475]	GETGLOBAL	R4 K15 ; R4 := _T
	24	[3475]	NEWTABLE 	R5 4 0 ; R5 := {}
	25	[3475]	SELF     	R6 R3 K17 ; R7 := R3; R6 := R3[0xd1586535]
	26	[3475]	CALL     	R6 2 2 ; R6 := R6(R7)
	27	[3475]	SELF     	R7 R3 K18 ; R8 := R3; R7 := R3[0xcb3851b8]
	28	[3475]	CALL     	R7 2 2 ; R7 := R7(R8)
	29	[3475]	SELF     	R8 R3 K19 ; R9 := R3; R8 := R3[0xeea7f8c4]
	30	[3475]	CALL     	R8 2 2 ; R8 := R8(R9)
	31	[3475]	MOVE     	R9 R0 ; R9 := R0
	32	[3475]	SETLIST  	R5 4 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 4
	33	[3475]	SETTABLE 	R4 K16 R5 ; R4["PreMuseumState"] := R5
	34	[3476]	GETGLOBAL	R4 K1 ; R4 := 0x34291f5c
	35	[3476]	GETTABLE 	R4 R4 K20 ; R4 := R4[0xa37dca0a]
	36	[3476]	MOVE     	R5 R2 ; R5 := R2
	37	[3476]	CALL     	R4 2 1 ; R4(R5)
	38	[3477]	RETURN   	R0 1 ; return 

function #65 <?:3479,3484> (15 instructions, 60 bytes at 000002116363F630)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3480]	LEN      	R1 R0 ; R1 := # R0
	2	[3480]	LT       	0 K0 R1 ; if 0.000000 >= R1 then PC := 13
	3	[3480]	JMP      	13 ; PC := 13
	4	[3480]	GETGLOBAL	R1 K1 ; R1 := 0x7f5022cf
	5	[3480]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x1a94c9cc]
	6	[3480]	MOVE     	R2 R0 ; R2 := R0
	7	[3480]	LOADK    	R3 := 1.000000
	8	[3480]	LOADK    	R4 := 1.000000
	9	[3480]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	10	[3480]	EQ       	1 R1 K3 ; if R1 == "/" then PC := 13
	11	[3480]	JMP      	13 ; PC := 13
	12	[3481]	RETURN   	R0 2 ; return R0 
	13	[3483]	LOADNIL  	R1 R1 ; R1 := nil
	14	[3483]	RETURN   	R1 2 ; return R1 
	15	[3484]	RETURN   	R0 1 ; return 

function #66 <?:3486,3515> (58 instructions, 232 bytes at 000002116363F7B0)
2+ params, 16 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[3487]	LOADK    	R3 := 0.000000
	2	[3489]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	3	[3489]	MOVE     	R5 R0 ; R5 := R0
	4	[3489]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[3489]	TEST     	R4 0 ; if not R4 then PC := 8
	6	[3489]	JMP      	8 ; PC := 8
	7	[3490]	RETURN   	R1 2 ; return R1 
	8	[3494]	LOADNIL  	R4 R4 ; R4 := nil
	9	[3495]	GETGLOBAL	R5 K1 ; R5 := 0xc8802016
	10	[3495]	MOVE     	R6 R2 ; R6 := R2
	11	[3495]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	12	[3495]	JMP      	51 ; PC := 51
	13	[3496]	LEN      	R10 R9 ; R10 := # R9
	14	[3496]	EQ       	1 R10 K2 ; if R10 == 0.000000 then PC := 51
	15	[3496]	JMP      	51 ; PC := 51
	16	[3497]	GETGLOBAL	R10 K3 ; R10 := 0x34291f5c
	17	[3497]	GETTABLE 	R10 R10 K4 ; R10 := R10[0x1467d5f4]
	18	[3497]	CALL     	R10 1 2 ; R10 := R10()
	19	[3497]	TEST     	R10 0 ; if not R10 then PC := 31
	20	[3497]	JMP      	31 ; PC := 31
	21	[3498]	GETUPVAL 	R10 U0 ; R10 := U0
	22	[3498]	SELF     	R11 R0 K5 ; R12 := R0; R11 := R0[0x42b04007]
	23	[3498]	MOVE     	R13 R9 ; R13 := R9
	24	[3498]	LOADK    	R14 K6 ; R14 := "Controller_"
	25	[3498]	MOVE     	R15 R3 ; R15 := R3
	26	[3498]	CONCAT   	R13 R13 R15 ; R13 := R13 .. R14 .. R15
	27	[3498]	OP_LOADBOOL	R14 1 0 ; R14 := true
	28	[3498]	CALL     	R11 4 0 ; R11,... := R11(R12,R13,R14)
	29	[3498]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	30	[3498]	MOVE     	R4 R10 ; R4 := R10
	31	[3500]	EQ       	0 R4 K7 ; if R4 ~= nil then PC := 42
	32	[3500]	JMP      	42 ; PC := 42
	33	[3501]	GETUPVAL 	R10 U0 ; R10 := U0
	34	[3501]	SELF     	R11 R0 K5 ; R12 := R0; R11 := R0[0x42b04007]
	35	[3501]	MOVE     	R13 R9 ; R13 := R9
	36	[3501]	MOVE     	R14 R3 ; R14 := R3
	37	[3501]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	38	[3501]	OP_LOADBOOL	R14 1 0 ; R14 := true
	39	[3501]	CALL     	R11 4 0 ; R11,... := R11(R12,R13,R14)
	40	[3501]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	41	[3501]	MOVE     	R4 R10 ; R4 := R10
	42	[3503]	EQ       	1 R4 K7 ; if R4 == nil then PC := 51
	43	[3503]	JMP      	51 ; PC := 51
	44	[3504]	GETGLOBAL	R10 K8 ; R10 := 0x33bdd652
	45	[3504]	GETTABLE 	R10 R10 K9 ; R10 := R10[0x23d5322f]
	46	[3504]	MOVE     	R11 R1 ; R11 := R1
	47	[3504]	MOVE     	R12 R4 ; R12 := R4
	48	[3504]	CALL     	R10 3 1 ; R10(R11,R12)
	49	[3505]	ADD      	R3 R3 K10 ; R3 := R3 + 1.000000
	50	[3506]	JMP      	53 ; PC := 53
	51	[3495]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 13; R7 := R8 end
	52	[3508]	JMP      	13 ; PC := 13
	53	[3510]	EQ       	0 R4 K7 ; if R4 ~= nil then PC := 8
	54	[3510]	JMP      	8 ; PC := 8
	55	[3511]	JMP      	57 ; PC := 57
	56	[3512]	JMP      	8 ; PC := 8
	57	[3514]	RETURN   	R1 2 ; return R1 
	58	[3515]	RETURN   	R0 1 ; return 

function #67 <?:3517,3519> (7 instructions, 28 bytes at 000002116363FB40)
1+ param, 6 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3518]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[3518]	MOVE     	R3 R0 ; R3 := R0
	3	[3518]	NEWTABLE 	R4 0 0 ; R4 := {}
	4	[3518]	VARARG   	R5 0 ; R5 := ...
	5	[3518]	TAILCALL 	R2 0 0 ; R2,... := R2(R3,...)
	6	[3518]	RETURN   	R2 0 ; return R2,... 
	7	[3519]	RETURN   	R0 1 ; return 

function #68 <?:3521,3523> (7 instructions, 28 bytes at 000002116363FC30)
2+ params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3522]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[3522]	MOVE     	R4 R0 ; R4 := R0
	3	[3522]	MOVE     	R5 R1 ; R5 := R1
	4	[3522]	VARARG   	R6 0 ; R6 := ...
	5	[3522]	TAILCALL 	R3 0 0 ; R3,... := R3(R4,...)
	6	[3522]	RETURN   	R3 0 ; return R3,... 
	7	[3523]	RETURN   	R0 1 ; return 

function #69 <?:3525,3544> (59 instructions, 236 bytes at 000002116363FD20)
0 params, 30 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[3526]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3527]	GETGLOBAL	R1 K0 ; R1 := 0xcfc01047
	3	[3527]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	4	[3527]	GETTABLE 	R2 R2 K2 ; R2 := R2["UIMaterial_Mods"]
	5	[3527]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	6	[3527]	JMP      	18 ; PC := 18
	7	[3528]	GETGLOBAL	R6 K0 ; R6 := 0xcfc01047
	8	[3528]	MOVE     	R7 R5 ; R7 := R5
	9	[3528]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	10	[3528]	JMP      	16 ; PC := 16
	11	[3529]	GETGLOBAL	R11 K3 ; R11 := 0x33bdd652
	12	[3529]	GETTABLE 	R11 R11 K4 ; R11 := R11[0x23d5322f]
	13	[3529]	MOVE     	R12 R0 ; R12 := R0
	14	[3529]	MOVE     	R13 R10 ; R13 := R10
	15	[3529]	CALL     	R11 3 1 ; R11(R12,R13)
	16	[3528]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 11; R8 := R9 end
	17	[3529]	JMP      	11 ; PC := 11
	18	[3527]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 7; R3 := R4 end
	19	[3530]	JMP      	7 ; PC := 7
	20	[3533]	GETGLOBAL	R11 K0 ; R11 := 0xcfc01047
	21	[3533]	GETGLOBAL	R12 K1 ; R12 := 0x0032441c
	22	[3533]	GETTABLE 	R12 R12 K5 ; R12 := R12["UIMaterial_ModsSyndicateIcons"]
	23	[3533]	CALL     	R11 2 4 ; R11,R12,R13 := R11(R12)
	24	[3533]	JMP      	36 ; PC := 36
	25	[3534]	GETGLOBAL	R16 K0 ; R16 := 0xcfc01047
	26	[3534]	MOVE     	R17 R15 ; R17 := R15
	27	[3534]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	28	[3534]	JMP      	34 ; PC := 34
	29	[3535]	GETGLOBAL	R21 K3 ; R21 := 0x33bdd652
	30	[3535]	GETTABLE 	R21 R21 K4 ; R21 := R21[0x23d5322f]
	31	[3535]	MOVE     	R22 R0 ; R22 := R0
	32	[3535]	MOVE     	R23 R20 ; R23 := R20
	33	[3535]	CALL     	R21 3 1 ; R21(R22,R23)
	34	[3534]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 29; R18 := R19 end
	35	[3535]	JMP      	29 ; PC := 29
	36	[3533]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 25; R13 := R14 end
	37	[3536]	JMP      	25 ; PC := 25
	38	[3539]	GETGLOBAL	R21 K6 ; R21 := 0xc8802016
	39	[3539]	MOVE     	R22 R0 ; R22 := R0
	40	[3539]	CALL     	R21 2 4 ; R21,R22,R23 := R21(R22)
	41	[3539]	JMP      	57 ; PC := 57
	42	[3540]	SELF     	R26 R25 K7 ; R27 := R25; R26 := R25[0x830eea67]
	43	[3540]	GETGLOBAL	R28 K8 ; R28 := 0x6c97a788
	44	[3540]	GETTABLE 	R28 R28 K9 ; R28 := R28["VISIBILITY_CENTER"]
	45	[3540]	LOADK    	R29 := 0.500000
	46	[3540]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	47	[3541]	SELF     	R26 R25 K7 ; R27 := R25; R26 := R25[0x830eea67]
	48	[3541]	GETGLOBAL	R28 K8 ; R28 := 0x6c97a788
	49	[3541]	GETTABLE 	R28 R28 K10 ; R28 := R28["VISIBILITY_SIZE"]
	50	[3541]	LOADK    	R29 := 1.500000
	51	[3541]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	52	[3542]	SELF     	R26 R25 K7 ; R27 := R25; R26 := R25[0x830eea67]
	53	[3542]	GETGLOBAL	R28 K8 ; R28 := 0x6c97a788
	54	[3542]	GETTABLE 	R28 R28 K11 ; R28 := R28["VISIBILITY_FADE_SIZE"]
	55	[3542]	LOADK    	R29 := 0.000000
	56	[3542]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	57	[3539]	TFORLOOP 	R21 2 ; R24,R25 := R21(R22,R23); if R24 ~= nil then begin PC = 42; R23 := R24 end
	58	[3542]	JMP      	42 ; PC := 42
	59	[3544]	RETURN   	R0 1 ; return 

function #70 <?:3546,3548> (10 instructions, 40 bytes at 0000021163640080)
1 param, 4 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[3547]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3547]	GETGLOBAL	R2 K0 ; R2 := 0xb009bbc6
	3	[3547]	MOVE     	R3 R0 ; R3 := R0
	4	[3547]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[3547]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xf83a6484]
	6	[3547]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[3547]	ADD      	R2 R2 K2 ; R2 := R2 + 1.000000
	8	[3547]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	9	[3547]	RETURN   	R1 2 ; return R1 
	10	[3548]	RETURN   	R0 1 ; return 

function #71 <?:3550,3560> (28 instructions, 112 bytes at 00000211636401D0)
1 param, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[3551]	TEST     	R0 1 ; if R0 then PC := 12
	2	[3551]	JMP      	12 ; PC := 12
	3	[3552]	GETGLOBAL	R1 K0 ; R1 := _T
	4	[3552]	GETGLOBAL	R2 K0 ; R2 := _T
	5	[3552]	GETTABLE 	R2 R2 K1 ; R2 := R2["HideChat"]
	6	[3552]	TEST     	R2 1 ; if R2 then PC := 9
	7	[3552]	JMP      	9 ; PC := 9
	8	[3552]	LOADK    	R2 := 0.000000
	9	[3552]	ADD      	R2 R2 K2 ; R2 := R2 + 1.000000
	10	[3552]	SETTABLE 	R1 K1 R2 ; R1["HideChat"] := R2
	11	[3552]	JMP      	28 ; PC := 28
	12	[3553]	GETGLOBAL	R1 K0 ; R1 := _T
	13	[3553]	GETTABLE 	R1 R1 K1 ; R1 := R1["HideChat"]
	14	[3553]	EQ       	1 R1 K3 ; if R1 == nil then PC := 28
	15	[3553]	JMP      	28 ; PC := 28
	16	[3554]	GETGLOBAL	R1 K0 ; R1 := _T
	17	[3554]	GETTABLE 	R1 R1 K1 ; R1 := R1["HideChat"]
	18	[3554]	LT       	0 K4 R1 ; if 0.000000 >= R1 then PC := 26
	19	[3554]	JMP      	26 ; PC := 26
	20	[3555]	GETGLOBAL	R1 K0 ; R1 := _T
	21	[3555]	GETGLOBAL	R2 K0 ; R2 := _T
	22	[3555]	GETTABLE 	R2 R2 K1 ; R2 := R2["HideChat"]
	23	[3555]	SUB      	R2 R2 K2 ; R2 := R2 - 1.000000
	24	[3555]	SETTABLE 	R1 K1 R2 ; R1["HideChat"] := R2
	25	[3555]	JMP      	28 ; PC := 28
	26	[3557]	GETGLOBAL	R1 K0 ; R1 := _T
	27	[3557]	SETTABLE 	R1 K1 K3 ; R1["HideChat"] := nil
	28	[3560]	RETURN   	R0 1 ; return 

function #72 <?:3562,3598> (79 instructions, 316 bytes at 0000021163640400)
6 params, 15 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[3563]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	2	[3563]	MOVE     	R7 R5 ; R7 := R5
	3	[3563]	CALL     	R6 2 2 ; R6 := R6(R7)
	4	[3563]	TEST     	R6 0 ; if not R6 then PC := 10
	5	[3563]	JMP      	10 ; PC := 10
	6	[3564]	GETGLOBAL	R6 K1 ; R6 := 0x89326c93
	7	[3564]	SELF     	R6 R6 K2 ; R7 := R6; R6 := R6[0x78298275]
	8	[3564]	CALL     	R6 2 2 ; R6 := R6(R7)
	9	[3564]	MOVE     	R5 R6 ; R5 := R6
	10	[3567]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	11	[3567]	MOVE     	R7 R5 ; R7 := R5
	12	[3567]	CALL     	R6 2 2 ; R6 := R6(R7)
	13	[3567]	TEST     	R6 0 ; if not R6 then PC := 16
	14	[3567]	JMP      	16 ; PC := 16
	15	[3568]	RETURN   	R0 1 ; return 
	16	[3571]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	17	[3571]	MOVE     	R7 R4 ; R7 := R4
	18	[3571]	CALL     	R6 2 2 ; R6 := R6(R7)
	19	[3571]	TEST     	R6 0 ; if not R6 then PC := 37
	20	[3571]	JMP      	37 ; PC := 37
	21	[3572]	SELF     	R6 R5 K3 ; R7 := R5; R6 := R5[0x5e651723]
	22	[3572]	CALL     	R6 2 2 ; R6 := R6(R7)
	23	[3573]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	24	[3573]	MOVE     	R8 R6 ; R8 := R6
	25	[3573]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[3573]	TEST     	R7 1 ; if R7 then PC := 31
	27	[3573]	JMP      	31 ; PC := 31
	28	[3574]	SELF     	R7 R6 K4 ; R8 := R6; R7 := R6[0x0803eee1]
	29	[3574]	CALL     	R7 2 2 ; R7 := R7(R8)
	30	[3574]	MOVE     	R4 R7 ; R4 := R7
	31	[3577]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	32	[3577]	MOVE     	R8 R4 ; R8 := R4
	33	[3577]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[3577]	TEST     	R7 0 ; if not R7 then PC := 37
	35	[3577]	JMP      	37 ; PC := 37
	36	[3578]	RETURN   	R0 1 ; return 
	37	[3582]	SELF     	R7 R4 K5 ; R8 := R4; R7 := R4[0xb9700060]
	38	[3582]	CALL     	R7 2 2 ; R7 := R7(R8)
	39	[3583]	EQ       	1 R3 R7 ; if R3 == R7 then PC := 78
	40	[3583]	JMP      	78 ; PC := 78
	41	[3584]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	42	[3584]	GETGLOBAL	R9 K6 ; R9 := _T
	43	[3584]	GETTABLE 	R9 R9 K7 ; R9 := R9["HUD_GetAnchorMgr"]
	44	[3584]	CALL     	R8 2 2 ; R8 := R8(R9)
	45	[3584]	TEST     	R8 1 ; if R8 then PC := 78
	46	[3584]	JMP      	78 ; PC := 78
	47	[3585]	GETGLOBAL	R8 K6 ; R8 := _T
	48	[3585]	GETTABLE 	R8 R8 K8 ; R8 := R8[0xf6b77431]
	49	[3585]	CALL     	R8 1 2 ; R8 := R8()
	50	[3586]	EQ       	1 R8 K9 ; if R8 == nil then PC := 78
	51	[3586]	JMP      	78 ; PC := 78
	52	[3587]	TEST     	R7 0 ; if not R7 then PC := 60
	53	[3587]	JMP      	60 ; PC := 60
	54	[3588]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0x4bc5dc8b]
	55	[3588]	MOVE     	R11 R1 ; R11 := R1
	56	[3588]	LOADNIL  	R12 R12 ; R12 := nil
	57	[3588]	SUB      	R13 R2 K11 ; R13 := R2 - 54.000000
	58	[3588]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	59	[3588]	JMP      	65 ; PC := 65
	60	[3590]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0x4bc5dc8b]
	61	[3590]	MOVE     	R11 R1 ; R11 := R1
	62	[3590]	LOADNIL  	R12 R12 ; R12 := nil
	63	[3590]	MOVE     	R13 R2 ; R13 := R2
	64	[3590]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	65	[3592]	SELF     	R9 R8 K12 ; R10 := R8; R9 := R8[0xfaa69527]
	66	[3592]	SELF     	R11 R0 K13 ; R12 := R0; R11 := R0[0x6b837788]
	67	[3592]	CALL     	R11 2 2 ; R11 := R11(R12)
	68	[3592]	SELF     	R12 R0 K14 ; R13 := R0; R12 := R0[0xaf9fda9f]
	69	[3592]	CALL     	R12 2 2 ; R12 := R12(R13)
	70	[3592]	OP_LOADBOOL	R13 1 0 ; R13 := true
	71	[3592]	GETTABLE 	R14 R8 K15 ; R14 := R8["mHudScalePadding"]
	72	[3592]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	73	[3593]	GETGLOBAL	R9 K6 ; R9 := _T
	74	[3593]	GETTABLE 	R9 R9 K16 ; R9 := R9[0x71907cb1]
	75	[3593]	MOVE     	R10 R0 ; R10 := R0
	76	[3593]	MOVE     	R11 R1 ; R11 := R1
	77	[3593]	CALL     	R9 3 1 ; R9(R10,R11)
	78	[3597]	RETURN   	R7 2 ; return R7 
	79	[3598]	RETURN   	R0 1 ; return 

function #73 <?:3600,3941> (139 instructions, 556 bytes at 0000021163640890)
4 params, 18 slots, 4 upvalues, 0 locals, 42 constants, 9 functions
	1	[3601]	GETGLOBAL	R4 K0 ; R4 := _T
	2	[3601]	SETTABLE 	R4 K1 K2 ; R4["ItemBrowsingElementWidth"] := 130.000000
	3	[3602]	GETGLOBAL	R4 K0 ; R4 := _T
	4	[3602]	SETTABLE 	R4 K3 K2 ; R4["ItemBrowsingElementHeight"] := 130.000000
	5	[3603]	GETGLOBAL	R4 K0 ; R4 := _T
	6	[3603]	SETTABLE 	R4 K4 K5 ; R4["PPSScreenOpen"] := true
	7	[3605]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[3605]	GETTABLE 	R4 R4 K6 ; R4 := R4[0xf5b36237]
	9	[3605]	CALL     	R4 1 2 ; R4 := R4()
	10	[3607]	SELF     	R5 R0 K7 ; R6 := R0; R5 := R0[0x1fd6abd0]
	11	[3607]	GETGLOBAL	R7 K8 ; R7 := 0x0032441c
	12	[3607]	GETTABLE 	R7 R7 K9 ; R7 := R7["UIMovie_ItemBrowsingMovie"]
	13	[3607]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	14	[3608]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xe4162eed]
	15	[3608]	LOADK    	R8 K11 ; R8 := "SetTitle"
	16	[3608]	SELF     	R9 R0 K12 ; R10 := R0; R9 := R0[0x42b04007]
	17	[3608]	LOADK    	R11 K13 ; R11 := "/Lotus/Language/Menu/Profile_ChangeAvatarImage"
	18	[3608]	OP_LOADBOOL	R12 0 0 ; R12 := false
	19	[3608]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	20	[3608]	CALL     	R6 0 1 ; R6(R7,...)
	21	[3609]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xe4162eed]
	22	[3609]	LOADK    	R8 K14 ; R8 := "SetVariableSelection"
	23	[3609]	LOADK    	R9 := 1.000000
	24	[3609]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	25	[3610]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xe4162eed]
	26	[3610]	LOADK    	R8 K15 ; R8 := "SetExitCallout"
	27	[3610]	LOADK    	R9 K16 ; R9 := "/Lotus/Language/Menu/Select"
	28	[3610]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	29	[3611]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xe4162eed]
	30	[3611]	LOADK    	R8 K17 ; R8 := "SetHideCountThreshold"
	31	[3611]	LOADK    	R9 := 0.000000
	32	[3611]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	33	[3612]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xe4162eed]
	34	[3612]	LOADK    	R8 K18 ; R8 := "SetHidePriceIfOwned"
	35	[3612]	LOADK    	R9 K19 ; R9 := "false"
	36	[3612]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	37	[3613]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xe4162eed]
	38	[3613]	LOADK    	R8 K20 ; R8 := "SetShowGridLabels"
	39	[3613]	LOADK    	R9 K19 ; R9 := "false"
	40	[3613]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	41	[3615]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0xe4162eed]
	42	[3615]	LOADK    	R8 K21 ; R8 := "SetGridCanPreview"
	43	[3615]	GETGLOBAL	R9 K22 ; R9 := 0x64fb1586
	44	[3615]	NOT      	R10 R4 ; R10 := not R4
	45	[3615]	CALL     	R9 2 0 ; R9,... := R9(R10)
	46	[3615]	CALL     	R6 0 1 ; R6(R7,...)
	47	[3617]	LOADNIL  	R6 R6 ; R6 := nil
	48	[3618]	NEWTABLE 	R7 0 1 ; R7 := {}
	49	[3618]	SETTABLE 	R7 K23 R5 ; R7[0xd8dfa041] := R5
	50	[3619]	GETGLOBAL	R8 K24 ; R8 := 0x7b998233
	51	[3619]	MOVE     	R9 R3 ; R9 := R3
	52	[3619]	CALL     	R8 2 2 ; R8 := R8(R9)
	53	[3619]	NOT      	R8 R8 ; R8 := not R8
	54	[3621]	NEWTABLE 	R9 0 2 ; R9 := {}
	55	[3623]	SETTABLE 	R9 K25 K26 ; R9["ALL"] := 0.000000
	56	[3624]	SETTABLE 	R9 K27 K28 ; R9["PREMIUM"] := 1.000000
	57	[3627]	GETUPVAL 	R10 U0 ; R10 := U0
	58	[3627]	GETTABLE 	R10 R10 K29 ; R10 := R10[0xca6539f4]
	59	[3627]	CALL     	R10 1 1 ; R10()
	60	[3636]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	61	[3667]	CLOSURE  	R11 1 ; R11 := closure(Function #2)
	62	[3667]	GETUPVAL 	R0 U0 ; R0 := U0
	63	[3667]	GETUPVAL 	R0 U1 ; R0 := U1
	64	[3667]	MOVE     	R0 R2 ; R0 := R2
	65	[3691]	CLOSURE  	R12 2 ; R12 := closure(Function #3)
	66	[3691]	MOVE     	R0 R7 ; R0 := R7
	67	[3691]	GETUPVAL 	R0 U1 ; R0 := U1
	68	[3728]	CLOSURE  	R13 3 ; R13 := closure(Function #4)
	69	[3728]	MOVE     	R0 R4 ; R0 := R4
	70	[3728]	MOVE     	R0 R12 ; R0 := R12
	71	[3728]	MOVE     	R0 R10 ; R0 := R10
	72	[3728]	MOVE     	R0 R11 ; R0 := R11
	73	[3728]	MOVE     	R0 R7 ; R0 := R7
	74	[3728]	MOVE     	R0 R5 ; R0 := R5
	75	[3730]	GETGLOBAL	R14 K0 ; R14 := _T
	76	[3824]	CLOSURE  	R15 4 ; R15 := closure(Function #5)
	77	[3824]	MOVE     	R0 R3 ; R0 := R3
	78	[3824]	GETUPVAL 	R0 U1 ; R0 := U1
	79	[3824]	GETUPVAL 	R0 U0 ; R0 := U0
	80	[3824]	MOVE     	R0 R0 ; R0 := R0
	81	[3824]	GETUPVAL 	R0 U2 ; R0 := U2
	82	[3824]	MOVE     	R0 R8 ; R0 := R8
	83	[3824]	GETUPVAL 	R0 U3 ; R0 := U3
	84	[3824]	MOVE     	R0 R9 ; R0 := R9
	85	[3824]	MOVE     	R0 R6 ; R0 := R6
	86	[3824]	SETTABLE 	R14 K30 R15 ; R14["GetAllItems"] := R15
	87	[3825]	SELF     	R14 R5 K10 ; R15 := R5; R14 := R5[0xe4162eed]
	88	[3825]	LOADK    	R16 K31 ; R16 := "SetElementsFunction"
	89	[3825]	LOADK    	R17 K30 ; R17 := "GetAllItems"
	90	[3825]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	91	[3827]	GETGLOBAL	R14 K0 ; R14 := _T
	92	[3835]	CLOSURE  	R15 5 ; R15 := closure(Function #6)
	93	[3835]	MOVE     	R0 R9 ; R0 := R9
	94	[3835]	MOVE     	R0 R0 ; R0 := R0
	95	[3835]	MOVE     	R0 R1 ; R0 := R1
	96	[3835]	SETTABLE 	R14 K32 R15 ; R14["GlyphCategories"] := R15
	97	[3836]	SELF     	R14 R5 K10 ; R15 := R5; R14 := R5[0xe4162eed]
	98	[3836]	LOADK    	R16 K33 ; R16 := "SetCategoriesFunction"
	99	[3836]	LOADK    	R17 K32 ; R17 := "GlyphCategories"
	100	[3836]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	101	[3838]	GETGLOBAL	R14 K0 ; R14 := _T
	102	[3868]	CLOSURE  	R15 6 ; R15 := closure(Function #7)
	103	[3868]	MOVE     	R0 R0 ; R0 := R0
	104	[3868]	SETTABLE 	R14 K34 R15 ; R14["GlyphSort"] := R15
	105	[3869]	SELF     	R14 R5 K10 ; R15 := R5; R14 := R5[0xe4162eed]
	106	[3869]	LOADK    	R16 K35 ; R16 := "SetSortByFunction"
	107	[3869]	LOADK    	R17 K34 ; R17 := "GlyphSort"
	108	[3869]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	109	[3871]	GETGLOBAL	R14 K0 ; R14 := _T
	110	[3898]	CLOSURE  	R15 7 ; R15 := closure(Function #8)
	111	[3898]	MOVE     	R0 R5 ; R0 := R5
	112	[3898]	GETUPVAL 	R0 U1 ; R0 := U1
	113	[3898]	MOVE     	R0 R10 ; R0 := R10
	114	[3898]	MOVE     	R0 R8 ; R0 := R8
	115	[3898]	MOVE     	R0 R11 ; R0 := R11
	116	[3898]	MOVE     	R0 R13 ; R0 := R13
	117	[3898]	SETTABLE 	R14 K36 R15 ; R14["GlyphSelectedCallback"] := R15
	118	[3899]	SELF     	R14 R5 K10 ; R15 := R5; R14 := R5[0xe4162eed]
	119	[3899]	LOADK    	R16 K37 ; R16 := "SetValidationFunction"
	120	[3899]	LOADK    	R17 K36 ; R17 := "GlyphSelectedCallback"
	121	[3899]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	122	[3901]	GETGLOBAL	R14 K0 ; R14 := _T
	123	[3934]	CLOSURE  	R15 8 ; R15 := closure(Function #9)
	124	[3934]	MOVE     	R0 R6 ; R0 := R6
	125	[3934]	MOVE     	R0 R8 ; R0 := R8
	126	[3934]	MOVE     	R0 R7 ; R0 := R7
	127	[3934]	SETTABLE 	R14 K38 R15 ; R14["GlyphScreenDone"] := R15
	128	[3935]	SELF     	R14 R5 K10 ; R15 := R5; R14 := R5[0xe4162eed]
	129	[3935]	LOADK    	R16 K39 ; R16 := "SetCallBack"
	130	[3935]	LOADK    	R17 K38 ; R17 := "GlyphScreenDone"
	131	[3935]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	132	[3937]	GETGLOBAL	R14 K0 ; R14 := _T
	133	[3937]	SETTABLE 	R14 K40 R13 ; R14["GlyphGiftCallback"] := R13
	134	[3938]	SELF     	R14 R5 K10 ; R15 := R5; R14 := R5[0xe4162eed]
	135	[3938]	LOADK    	R16 K41 ; R16 := "SetRightClickFunction"
	136	[3938]	LOADK    	R17 K40 ; R17 := "GlyphGiftCallback"
	137	[3938]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	138	[3940]	RETURN   	R7 2 ; return R7 
	139	[3941]	RETURN   	R0 1 ; return 

function #74 <?:3943,3952> (28 instructions, 112 bytes at 0000021163644FD0)
0 params, 7 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[3944]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[3944]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xb3365548]
	3	[3944]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3945]	GETGLOBAL	R1 K2 ; R1 := 0x7f5022cf
	5	[3945]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa5c556b9]
	6	[3945]	MOVE     	R2 R0 ; R2 := R0
	7	[3945]	LOADK    	R3 K4 ; R3 := " "
	8	[3945]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[3946]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 17
	10	[3946]	JMP      	17 ; PC := 17
	11	[3947]	GETGLOBAL	R2 K2 ; R2 := 0x7f5022cf
	12	[3947]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x41e2ae25]
	13	[3947]	MOVE     	R3 R0 ; R3 := R0
	14	[3947]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[3947]	MOVE     	R1 R2 ; R1 := R2
	16	[3947]	JMP      	18 ; PC := 18
	17	[3949]	SUB      	R1 R1 K7 ; R1 := R1 - 1.000000
	18	[3951]	GETGLOBAL	R2 K2 ; R2 := 0x7f5022cf
	19	[3951]	GETTABLE 	R2 R2 K8 ; R2 := R2[0x3f3e4d12]
	20	[3951]	GETGLOBAL	R3 K2 ; R3 := 0x7f5022cf
	21	[3951]	GETTABLE 	R3 R3 K9 ; R3 := R3[0x1a94c9cc]
	22	[3951]	MOVE     	R4 R0 ; R4 := R0
	23	[3951]	LOADK    	R5 := 1.000000
	24	[3951]	MOVE     	R6 R1 ; R6 := R1
	25	[3951]	CALL     	R3 4 0 ; R3,... := R3(R4,R5,R6)
	26	[3951]	TAILCALL 	R2 0 0 ; R2,... := R2(R3,...)
	27	[3951]	RETURN   	R2 0 ; return R2,... 
	28	[3952]	RETURN   	R0 1 ; return 
