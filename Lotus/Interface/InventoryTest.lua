
main <?:0,0> (1002 instructions, 4008 bytes at 00000211358327E0)
0+ params, 161 slots, 0 upvalues, 0 locals, 205 constants, 126 functions
	1	[47]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[48]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[50]	GETGLOBAL	R2 K0 ; R2 := 0x7ed0a956
	4	[50]	LOADK    	R3 K1 ; R3 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
	5	[50]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[51]	GETGLOBAL	R3 K0 ; R3 := 0x7ed0a956
	7	[51]	LOADK    	R4 K2 ; R4 := "/Lotus/Upgrades/Mods/Railjack/RailjackBaseMod"
	8	[51]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[53]	LOADNIL  	R4 R9 ; R4 := R5 := R6 := R7 := R8 := R9 := nil
	10	[61]	NEWTABLE 	R10 0 0 ; R10 := {}
	11	[62]	OP_LOADBOOL	R11 0 0 ; R11 := false
	12	[63]	OP_LOADBOOL	R12 0 0 ; R12 := false
	13	[64]	OP_LOADBOOL	R13 0 0 ; R13 := false
	14	[65]	LOADNIL  	R14 R14 ; R14 := nil
	15	[66]	LOADK    	R15 := 0.000000
	16	[67]	LOADK    	R16 := 20.000000
	17	[68]	LOADK    	R17 := 5000.000000
	18	[69]	GETGLOBAL	R18 K3 ; R18 := 0x0469f296
	19	[69]	LOADK    	R19 K4 ; R19 := "AvatarPause"
	20	[69]	CALL     	R18 2 2 ; R18 := R18(R19)
	21	[70]	NEWTABLE 	R19 0 3 ; R19 := {}
	22	[70]	SETTABLE 	R19 K5 K6 ; R19["PauseState"] := nil
	23	[70]	NEWTABLE 	R20 0 0 ; R20 := {}
	24	[70]	SETTABLE 	R19 K7 R20 ; R19["ScreenVis"] := R20
	25	[70]	SETTABLE 	R19 K8 K9 ; R19["AvatarDrawOnTop"] := false
	26	[72]	GETGLOBAL	R20 K10 ; R20 := 0x2d0fad09
	27	[72]	LOADK    	R21 K11 ; R21 := "EE.Interface.AnchorMgr"
	28	[72]	CALL     	R20 2 2 ; R20 := R20(R21)
	29	[73]	GETGLOBAL	R21 K10 ; R21 := 0x2d0fad09
	30	[73]	LOADK    	R22 K12 ; R22 := "Lotus.Interface.StoreItemUtilities"
	31	[73]	CALL     	R21 2 2 ; R21 := R21(R22)
	32	[74]	GETGLOBAL	R22 K10 ; R22 := 0x2d0fad09
	33	[74]	LOADK    	R23 K13 ; R23 := "Lotus.Interface.LotusUtilities"
	34	[74]	CALL     	R22 2 2 ; R22 := R22(R23)
	35	[75]	GETGLOBAL	R23 K10 ; R23 := 0x2d0fad09
	36	[75]	LOADK    	R24 K14 ; R24 := "EE.Interface.Utilities"
	37	[75]	CALL     	R23 2 2 ; R23 := R23(R24)
	38	[76]	GETGLOBAL	R24 K10 ; R24 := 0x2d0fad09
	39	[76]	LOADK    	R25 K15 ; R25 := "Lotus.Interface.UIStyleUtilities"
	40	[76]	CALL     	R24 2 2 ; R24 := R24(R25)
	41	[77]	GETGLOBAL	R25 K10 ; R25 := 0x2d0fad09
	42	[77]	LOADK    	R26 K16 ; R26 := "Lotus.Interface.UIUtilities"
	43	[77]	CALL     	R25 2 2 ; R25 := R25(R26)
	44	[78]	GETGLOBAL	R26 K10 ; R26 := 0x2d0fad09
	45	[78]	LOADK    	R27 K17 ; R27 := "Lotus.Interface.CardUtilitiesRedux"
	46	[78]	CALL     	R26 2 2 ; R26 := R26(R27)
	47	[79]	GETGLOBAL	R27 K10 ; R27 := 0x2d0fad09
	48	[79]	LOADK    	R28 K18 ; R28 := "Lotus.Interface.SyndicateUtilities"
	49	[79]	CALL     	R27 2 2 ; R27 := R27(R28)
	50	[80]	GETGLOBAL	R28 K10 ; R28 := 0x2d0fad09
	51	[80]	LOADK    	R29 K19 ; R29 := "Lotus.Scripts.Nemesis.NemesisGenerator"
	52	[80]	CALL     	R28 2 2 ; R28 := R28(R29)
	53	[81]	GETGLOBAL	R29 K10 ; R29 := 0x2d0fad09
	54	[81]	LOADK    	R30 K20 ; R30 := "Lotus.Interface.CodexUtilities"
	55	[81]	CALL     	R29 2 2 ; R29 := R29(R30)
	56	[83]	GETGLOBAL	R30 K10 ; R30 := 0x2d0fad09
	57	[83]	LOADK    	R31 K21 ; R31 := "Lotus.Interface.Components.ThemedButton"
	58	[83]	CALL     	R30 2 2 ; R30 := R30(R31)
	59	[84]	GETGLOBAL	R31 K10 ; R31 := 0x2d0fad09
	60	[84]	LOADK    	R32 K22 ; R32 := "Lotus.Interface.Components.ThemedProgressInfo"
	61	[84]	CALL     	R31 2 2 ; R31 := R31(R32)
	62	[85]	GETGLOBAL	R32 K10 ; R32 := 0x2d0fad09
	63	[85]	LOADK    	R33 K23 ; R33 := "Lotus.Scripts.Libs.StoryLib"
	64	[85]	CALL     	R32 2 2 ; R32 := R32(R33)
	65	[87]	LOADNIL  	R33 R34 ; R33 := R34 := nil
	66	[89]	OP_LOADBOOL	R35 0 0 ; R35 := false
	67	[90]	OP_LOADBOOL	R36 1 0 ; R36 := true
	68	[91]	OP_LOADBOOL	R37 0 0 ; R37 := false
	69	[92]	OP_LOADBOOL	R38 0 0 ; R38 := false
	70	[94]	LOADNIL  	R39 R42 ; R39 := R40 := R41 := R42 := nil
	71	[98]	NEWTABLE 	R43 0 0 ; R43 := {}
	72	[99]	LOADNIL  	R44 R46 ; R44 := R45 := R46 := nil
	73	[102]	OP_LOADBOOL	R47 0 0 ; R47 := false
	74	[103]	LOADNIL  	R48 R52 ; R48 := R49 := R50 := R51 := R52 := nil
	75	[108]	LOADK    	R53 := 0.000000
	76	[109]	LOADK    	R54 K24 ; R54 := ""
	77	[110]	LOADK    	R55 K24 ; R55 := ""
	78	[111]	LOADK    	R56 K24 ; R56 := ""
	79	[112]	OP_LOADBOOL	R57 0 0 ; R57 := false
	80	[113]	LOADNIL  	R58 R59 ; R58 := R59 := nil
	81	[115]	OP_LOADBOOL	R60 0 0 ; R60 := false
	82	[116]	LOADK    	R61 := 0.000000
	83	[117]	LOADK    	R62 := 0.000000
	84	[118]	OP_LOADBOOL	R63 0 0 ; R63 := false
	85	[119]	NEWTABLE 	R64 0 0 ; R64 := {}
	86	[120]	OP_LOADBOOL	R65 0 0 ; R65 := false
	87	[121]	LOADNIL  	R66 R67 ; R66 := R67 := nil
	88	[123]	NEWTABLE 	R68 0 0 ; R68 := {}
	89	[124]	NEWTABLE 	R69 0 0 ; R69 := {}
	90	[125]	NEWTABLE 	R70 0 2 ; R70 := {}
	91	[125]	SETTABLE 	R70 K25 K6 ; R70["Category"] := nil
	92	[125]	NEWTABLE 	R71 0 0 ; R71 := {}
	93	[125]	SETTABLE 	R70 K26 R71 ; R70["Elements"] := R71
	94	[126]	LOADK    	R71 := 75.000000
	95	[127]	NEWTABLE 	R72 0 0 ; R72 := {}
	96	[128]	NEWTABLE 	R73 0 0 ; R73 := {}
	97	[129]	NEWTABLE 	R74 0 1 ; R74 := {}
	98	[129]	NEWTABLE 	R75 0 0 ; R75 := {}
	99	[129]	SETTABLE 	R74 K26 R75 ; R74["Elements"] := R75
	100	[130]	LOADNIL  	R75 R75 ; R75 := nil
	101	[131]	LOADK    	R76 := 1.000000
	102	[132]	OP_LOADBOOL	R77 1 0 ; R77 := true
	103	[133]	LOADNIL  	R78 R80 ; R78 := R79 := R80 := nil
	104	[138]	NEWTABLE 	R81 0 4 ; R81 := {}
	105	[138]	SETTABLE 	R81 K27 K6 ; R81["SyndicateInfo"] := nil
	106	[138]	SETTABLE 	R81 K28 K6 ; R81["DailyStandingInfo"] := nil
	107	[138]	SETTABLE 	R81 K29 K6 ; R81["mSyndicateStandingBonusOperation"] := nil
	108	[138]	SETTABLE 	R81 K30 K9 ; R81["MadeTrade"] := false
	109	[140]	LOADNIL  	R82 R82 ; R82 := nil
	110	[142]	NEWTABLE 	R83 0 14 ; R83 := {}
	111	[144]	SETTABLE 	R83 K31 K32 ; R83["INVENTORY"] := 1.000000
	112	[145]	SETTABLE 	R83 K33 K34 ; R83["ENEMIES"] := 2.000000
	113	[146]	SETTABLE 	R83 K35 K36 ; R83["FISH"] := 3.000000
	114	[147]	SETTABLE 	R83 K37 K38 ; R83["TREASURE"] := 4.000000
	115	[148]	SETTABLE 	R83 K39 K40 ; R83["PRIMEPARTS"] := 5.000000
	116	[149]	SETTABLE 	R83 K41 K42 ; R83["SHIP_RAW"] := 6.000000
	117	[150]	SETTABLE 	R83 K43 K44 ; R83["SHIP_SCRAP"] := 7.000000
	118	[151]	SETTABLE 	R83 K45 K46 ; R83["SHIP_PARTS"] := 8.000000
	119	[152]	SETTABLE 	R83 K47 K48 ; R83["SHARDS"] := 9.000000
	120	[153]	SETTABLE 	R83 K49 K50 ; R83["DECODONATE"] := 10.000000
	121	[154]	SETTABLE 	R83 K51 K52 ; R83["RESDONATE"] := 11.000000
	122	[155]	SETTABLE 	R83 K53 K54 ; R83["TRADE_ITEMS"] := 12.000000
	123	[156]	SETTABLE 	R83 K55 K56 ; R83["TRADE_MODS"] := 13.000000
	124	[157]	SETTABLE 	R83 K57 K58 ; R83["SYNDDONATE"] := 14.000000
	125	[159]	GETTABLE 	R84 R83 K31 ; R84 := R83["INVENTORY"]
	126	[160]	OP_LOADBOOL	R85 0 0 ; R85 := false
	127	[161]	OP_LOADBOOL	R86 0 0 ; R86 := false
	128	[163]	NEWTABLE 	R87 0 2 ; R87 := {}
	129	[163]	SETTABLE 	R87 K31 K32 ; R87["INVENTORY"] := 1.000000
	130	[163]	SETTABLE 	R87 K59 K34 ; R87["SELL"] := 2.000000
	131	[164]	LOADNIL  	R88 R88 ; R88 := nil
	132	[165]	NEWTABLE 	R89 0 3 ; R89 := {}
	133	[165]	NEWTABLE 	R90 0 0 ; R90 := {}
	134	[165]	SETTABLE 	R89 K60 R90 ; R89["Materials"] := R90
	135	[165]	SETTABLE 	R89 K61 K62 ; R89["Size"] := 0.000000
	136	[165]	SETTABLE 	R89 K63 K62 ; R89["YPos"] := 0.000000
	137	[166]	LOADK    	R90 := 142.000000
	138	[168]	LOADK    	R91 K64 ; R91 := 0.300000
	139	[172]	LOADK    	R92 := 10.000000
	140	[174]	LOADK    	R93 := 1.000000
	141	[176]	GETGLOBAL	R94 K0 ; R94 := 0x7ed0a956
	142	[176]	LOADK    	R95 K65 ; R95 := "/Lotus/Types/Items/SyndicateDogTags/KelaEventDogTag"
	143	[176]	CALL     	R94 2 2 ; R94 := R94(R95)
	144	[181]	NEWTABLE 	R95 1 0 ; R95 := {}
	145	[183]	GETGLOBAL	R96 K0 ; R96 := 0x7ed0a956
	146	[183]	LOADK    	R97 K67 ; R97 := "/Lotus/Types/Game/Nemesis/KuvaLich/CapturedGrineerLichToken"
	147	[183]	CALL     	R96 2 2 ; R96 := R96(R97)
	148	[184]	GETGLOBAL	R97 K0 ; R97 := 0x7ed0a956
	149	[184]	LOADK    	R98 K68 ; R98 := "/Lotus/Types/Game/Nemesis/KuvaLich/CapturedCorpusLichToken"
	150	[184]	CALL     	R97 2 0 ; R97,... := R97(R98)
	151	[185]	SETLIST  	R95 0 1 ; R95[(1-1)*FPF+i] := R(95+i), 1 <= i <= 0
	152	[185]	SETGLOBALHASH	R95 K66 ; lichItems := R95
	153	[186]	GETGLOBAL	R95 K0 ; R95 := 0x7ed0a956
	154	[186]	LOADK    	R96 K69 ; R96 := "/Lotus/Interface/StandingGainPopup.swf"
	155	[186]	CALL     	R95 2 2 ; R95 := R95(R96)
	156	[190]	LOADK    	R96 := 100.000000
	157	[192]	NEWTABLE 	R97 0 26 ; R97 := {}
	158	[194]	SETTABLE 	R97 K70 K62 ; R97["ALL"] := 0.000000
	159	[195]	SETTABLE 	R97 K71 K32 ; R97["WARFRAME"] := 1.000000
	160	[196]	SETTABLE 	R97 K72 K34 ; R97["WEAPONS"] := 2.000000
	161	[197]	SETTABLE 	R97 K73 K36 ; R97["SENTINEL"] := 3.000000
	162	[198]	SETTABLE 	R97 K74 K38 ; R97["APPEARANCE"] := 4.000000
	163	[199]	SETTABLE 	R97 K75 K40 ; R97["ENHANCEMENTS"] := 5.000000
	164	[200]	SETTABLE 	R97 K76 K42 ; R97["FOCUS"] := 6.000000
	165	[201]	SETTABLE 	R97 K77 K44 ; R97["DRONES"] := 7.000000
	166	[202]	SETTABLE 	R97 K78 K46 ; R97["GEAR"] := 8.000000
	167	[203]	SETTABLE 	R97 K79 K48 ; R97["KEYS"] := 9.000000
	168	[204]	SETTABLE 	R97 K80 K50 ; R97["RESOURCES"] := 10.000000
	169	[205]	SETTABLE 	R97 K81 K52 ; R97["PRIME"] := 11.000000
	170	[206]	SETTABLE 	R97 K82 K54 ; R97["ARCHWING"] := 12.000000
	171	[207]	SETTABLE 	R97 K83 K56 ; R97["ARCHWINGWEAPONS"] := 13.000000
	172	[208]	SETTABLE 	R97 K84 K58 ; R97["MISC"] := 14.000000
	173	[209]	SETTABLE 	R97 K85 K86 ; R97["OPERATORAMPS"] := 15.000000
	174	[210]	SETTABLE 	R97 K87 K88 ; R97["GRINEER"] := 16.000000
	175	[211]	SETTABLE 	R97 K89 K90 ; R97["CORPUS"] := 17.000000
	176	[212]	SETTABLE 	R97 K91 K92 ; R97["INFESTED"] := 18.000000
	177	[213]	SETTABLE 	R97 K93 K94 ; R97["WILD"] := 19.000000
	178	[214]	SETTABLE 	R97 K95 K96 ; R97["OROKIN"] := 20.000000
	179	[215]	SETTABLE 	R97 K97 K98 ; R97["SENTIENT"] := 21.000000
	180	[216]	SETTABLE 	R97 K99 K100 ; R97["RELICS"] := 22.000000
	181	[217]	SETTABLE 	R97 K101 K102 ; R97["RECIPES"] := 23.000000
	182	[218]	SETTABLE 	R97 K103 K104 ; R97["PETPRINTS"] := 24.000000
	183	[219]	SETTABLE 	R97 K105 K106 ; R97["LICH"] := 25.000000
	184	[220]	SETTABLE 	R97 K107 K108 ; R97["AVIONICS"] := 26.000000
	185	[221]	SETTABLE 	R97 K109 K110 ; R97["MKI"] := 27.000000
	186	[222]	SETTABLE 	R97 K111 K112 ; R97["MKII"] := 28.000000
	187	[223]	SETTABLE 	R97 K113 K114 ; R97["MKIII"] := 29.000000
	188	[224]	SETTABLE 	R97 K115 K116 ; R97["LAVAN"] := 30.000000
	189	[225]	SETTABLE 	R97 K117 K118 ; R97["VIDAR"] := 31.000000
	190	[226]	SETTABLE 	R97 K119 K120 ; R97["ZEKTI"] := 32.000000
	191	[227]	SETTABLE 	R97 K121 K122 ; R97["SIGMA"] := 33.000000
	192	[228]	SETTABLE 	R97 K123 K124 ; R97["MECHS"] := 34.000000
	193	[229]	SETTABLE 	R97 K125 K126 ; R97["EMOTE"] := 35.000000
	194	[230]	SETTABLE 	R97 K127 K128 ; R97["NARMER"] := 36.000000
	195	[233]	NEWTABLE 	R98 0 3 ; R98 := {}
	196	[235]	SETTABLE 	R98 K129 K88 ; R98["FISH_SMALL"] := 16.000000
	197	[236]	SETTABLE 	R98 K130 K90 ; R98["FISH_MEDIUM"] := 17.000000
	198	[237]	SETTABLE 	R98 K131 K92 ; R98["FISH_LARGE"] := 18.000000
	199	[240]	LOADK    	R99 := 16.000000
	200	[242]	NEWTABLE 	R100 0 0 ; R100 := {}
	201	[244]	NEWTABLE 	R101 0 4 ; R101 := {}
	202	[246]	SETTABLE 	R101 K132 K32 ; R101["EXIT"] := 1.000000
	203	[247]	SETTABLE 	R101 K133 K36 ; R101["FISH_CATEGORY"] := 3.000000
	204	[248]	SETTABLE 	R101 K134 K40 ; R101["SELECT_ALL"] := 5.000000
	205	[249]	SETTABLE 	R101 K135 K42 ; R101["TUTORIAL"] := 6.000000
	206	[252]	LOADNIL  	R102 R110 ; R102 := R103 := R104 := R105 := R106 := R107 := R108 := R109 := R110 := nil
	207	[273]	CLOSURE  	R111 0 ; R111 := closure(Function #1)
	208	[273]	MOVE     	R0 R60 ; R0 := R60
	209	[273]	MOVE     	R0 R108 ; R0 := R108
	210	[273]	MOVE     	R0 R39 ; R0 := R39
	211	[277]	CLOSURE  	R112 1 ; R112 := closure(Function #2)
	212	[277]	MOVE     	R0 R111 ; R0 := R111
	213	[277]	MOVE     	R0 R60 ; R0 := R60
	214	[281]	CLOSURE  	R113 2 ; R113 := closure(Function #3)
	215	[281]	MOVE     	R0 R84 ; R0 := R84
	216	[281]	MOVE     	R0 R83 ; R0 := R83
	217	[298]	CLOSURE  	R108 3 ; R108 := closure(Function #4)
	218	[298]	MOVE     	R0 R84 ; R0 := R84
	219	[298]	MOVE     	R0 R83 ; R0 := R83
	220	[298]	MOVE     	R0 R25 ; R0 := R25
	221	[298]	MOVE     	R0 R23 ; R0 := R23
	222	[298]	MOVE     	R0 R60 ; R0 := R60
	223	[298]	MOVE     	R0 R112 ; R0 := R112
	224	[298]	MOVE     	R0 R43 ; R0 := R43
	225	[388]	CLOSURE  	R114 4 ; R114 := closure(Function #5)
	226	[388]	MOVE     	R0 R9 ; R0 := R9
	227	[388]	MOVE     	R0 R19 ; R0 := R19
	228	[388]	MOVE     	R0 R84 ; R0 := R84
	229	[388]	MOVE     	R0 R83 ; R0 := R83
	230	[388]	MOVE     	R0 R25 ; R0 := R25
	231	[388]	MOVE     	R0 R22 ; R0 := R22
	232	[388]	MOVE     	R0 R39 ; R0 := R39
	233	[388]	MOVE     	R0 R42 ; R0 := R42
	234	[388]	MOVE     	R0 R110 ; R0 := R110
	235	[388]	MOVE     	R0 R50 ; R0 := R50
	236	[300]	SETGLOBAL	R114 K136 ; Shutdown := R114
	237	[398]	CLOSURE  	R114 5 ; R114 := closure(Function #6)
	238	[398]	MOVE     	R0 R60 ; R0 := R60
	239	[414]	CLOSURE  	R110 6 ; R110 := closure(Function #7)
	240	[414]	MOVE     	R0 R38 ; R0 := R38
	241	[414]	MOVE     	R0 R37 ; R0 := R37
	242	[414]	MOVE     	R0 R113 ; R0 := R113
	243	[441]	CLOSURE  	R115 7 ; R115 := closure(Function #8)
	244	[441]	MOVE     	R0 R110 ; R0 := R110
	245	[441]	MOVE     	R0 R84 ; R0 := R84
	246	[441]	MOVE     	R0 R83 ; R0 := R83
	247	[441]	MOVE     	R0 R36 ; R0 := R36
	248	[441]	MOVE     	R0 R23 ; R0 := R23
	249	[441]	MOVE     	R0 R45 ; R0 := R45
	250	[441]	MOVE     	R0 R114 ; R0 := R114
	251	[444]	CLOSURE  	R116 8 ; R116 := closure(Function #9)
	252	[443]	SETGLOBAL	R116 K137 ; OnUpdateSessionSettings := R116
	253	[453]	CLOSURE  	R116 9 ; R116 := closure(Function #10)
	254	[453]	MOVE     	R0 R22 ; R0 := R22
	255	[453]	MOVE     	R0 R48 ; R0 := R48
	256	[453]	MOVE     	R0 R115 ; R0 := R115
	257	[446]	SETGLOBAL	R116 K138 ; OnSaveLoadOutComplete := R116
	258	[477]	CLOSURE  	R116 10 ; R116 := closure(Function #11)
	259	[477]	MOVE     	R0 R36 ; R0 := R36
	260	[477]	MOVE     	R0 R84 ; R0 := R84
	261	[477]	MOVE     	R0 R83 ; R0 := R83
	262	[477]	MOVE     	R0 R81 ; R0 := R81
	263	[477]	MOVE     	R0 R27 ; R0 := R27
	264	[477]	MOVE     	R0 R47 ; R0 := R47
	265	[477]	MOVE     	R0 R115 ; R0 := R115
	266	[481]	CLOSURE  	R117 11 ; R117 := closure(Function #12)
	267	[481]	MOVE     	R0 R116 ; R0 := R116
	268	[479]	SETGLOBAL	R117 K139 ; TransitionOut := R117
	269	[497]	CLOSURE  	R117 12 ; R117 := closure(Function #13)
	270	[497]	MOVE     	R0 R23 ; R0 := R23
	271	[497]	MOVE     	R0 R116 ; R0 := R116
	272	[497]	MOVE     	R0 R84 ; R0 := R84
	273	[497]	MOVE     	R0 R83 ; R0 := R83
	274	[503]	CLOSURE  	R118 13 ; R118 := closure(Function #14)
	275	[503]	MOVE     	R0 R117 ; R0 := R117
	276	[499]	SETGLOBAL	R118 K140 ; OnExitScreenConfirm := R118
	277	[507]	CLOSURE  	R118 14 ; R118 := closure(Function #15)
	278	[507]	MOVE     	R0 R116 ; R0 := R116
	279	[505]	SETGLOBAL	R118 K141 ; OnTeleportedToConsole := R118
	280	[525]	CLOSURE  	R118 15 ; R118 := closure(Function #16)
	281	[525]	MOVE     	R0 R41 ; R0 := R41
	282	[525]	MOVE     	R0 R23 ; R0 := R23
	283	[525]	MOVE     	R0 R40 ; R0 := R40
	284	[550]	CLOSURE  	R119 16 ; R119 := closure(Function #17)
	285	[550]	MOVE     	R0 R42 ; R0 := R42
	286	[550]	MOVE     	R0 R23 ; R0 := R23
	287	[550]	MOVE     	R0 R39 ; R0 := R39
	288	[556]	CLOSURE  	R120 17 ; R120 := closure(Function #18)
	289	[556]	MOVE     	R0 R39 ; R0 := R39
	290	[579]	CLOSURE  	R121 18 ; R121 := closure(Function #19)
	291	[584]	CLOSURE  	R122 19 ; R122 := closure(Function #20)
	292	[584]	MOVE     	R0 R120 ; R0 := R120
	293	[627]	CLOSURE  	R123 20 ; R123 := closure(Function #21)
	294	[627]	MOVE     	R0 R53 ; R0 := R53
	295	[627]	MOVE     	R0 R84 ; R0 := R84
	296	[627]	MOVE     	R0 R83 ; R0 := R83
	297	[627]	MOVE     	R0 R56 ; R0 := R56
	298	[627]	MOVE     	R0 R24 ; R0 := R24
	299	[627]	MOVE     	R0 R23 ; R0 := R23
	300	[627]	MOVE     	R0 R16 ; R0 := R16
	301	[627]	MOVE     	R0 R113 ; R0 := R113
	302	[627]	MOVE     	R0 R41 ; R0 := R41
	303	[627]	MOVE     	R0 R54 ; R0 := R54
	304	[627]	MOVE     	R0 R86 ; R0 := R86
	305	[627]	MOVE     	R0 R55 ; R0 := R55
	306	[662]	CLOSURE  	R124 21 ; R124 := closure(Function #22)
	307	[662]	MOVE     	R0 R120 ; R0 := R120
	308	[662]	MOVE     	R0 R41 ; R0 := R41
	309	[662]	MOVE     	R0 R113 ; R0 := R113
	310	[662]	MOVE     	R0 R23 ; R0 := R23
	311	[662]	MOVE     	R0 R123 ; R0 := R123
	312	[834]	CLOSURE  	R125 22 ; R125 := closure(Function #23)
	313	[834]	MOVE     	R0 R88 ; R0 := R88
	314	[834]	MOVE     	R0 R87 ; R0 := R87
	315	[834]	MOVE     	R0 R84 ; R0 := R84
	316	[834]	MOVE     	R0 R83 ; R0 := R83
	317	[834]	MOVE     	R0 R2 ; R0 := R2
	318	[834]	MOVE     	R0 R23 ; R0 := R23
	319	[834]	MOVE     	R0 R16 ; R0 := R16
	320	[834]	MOVE     	R0 R53 ; R0 := R53
	321	[834]	MOVE     	R0 R113 ; R0 := R113
	322	[834]	MOVE     	R0 R41 ; R0 := R41
	323	[834]	MOVE     	R0 R92 ; R0 := R92
	324	[834]	MOVE     	R0 R119 ; R0 := R119
	325	[834]	MOVE     	R0 R42 ; R0 := R42
	326	[834]	MOVE     	R0 R51 ; R0 := R51
	327	[834]	MOVE     	R0 R49 ; R0 := R49
	328	[834]	MOVE     	R0 R121 ; R0 := R121
	329	[834]	MOVE     	R0 R123 ; R0 := R123
	330	[834]	MOVE     	R0 R122 ; R0 := R122
	331	[834]	MOVE     	R0 R124 ; R0 := R124
	332	[834]	MOVE     	R0 R39 ; R0 := R39
	333	[834]	MOVE     	R0 R118 ; R0 := R118
	334	[852]	CLOSURE  	R126 23 ; R126 := closure(Function #24)
	335	[852]	MOVE     	R0 R41 ; R0 := R41
	336	[852]	MOVE     	R0 R88 ; R0 := R88
	337	[852]	MOVE     	R0 R87 ; R0 := R87
	338	[852]	MOVE     	R0 R39 ; R0 := R39
	339	[852]	MOVE     	R0 R25 ; R0 := R25
	340	[852]	MOVE     	R0 R84 ; R0 := R84
	341	[852]	MOVE     	R0 R83 ; R0 := R83
	342	[860]	CLOSURE  	R127 24 ; R127 := closure(Function #25)
	343	[860]	MOVE     	R0 R23 ; R0 := R23
	344	[860]	MOVE     	R0 R41 ; R0 := R41
	345	[860]	MOVE     	R0 R39 ; R0 := R39
	346	[860]	MOVE     	R0 R25 ; R0 := R25
	347	[877]	CLOSURE  	R128 25 ; R128 := closure(Function #26)
	348	[877]	MOVE     	R0 R50 ; R0 := R50
	349	[877]	MOVE     	R0 R41 ; R0 := R41
	350	[877]	MOVE     	R0 R123 ; R0 := R123
	351	[877]	MOVE     	R0 R53 ; R0 := R53
	352	[877]	MOVE     	R0 R103 ; R0 := R103
	353	[877]	MOVE     	R0 R23 ; R0 := R23
	354	[898]	CLOSURE  	R129 26 ; R129 := closure(Function #27)
	355	[898]	MOVE     	R0 R50 ; R0 := R50
	356	[898]	MOVE     	R0 R39 ; R0 := R39
	357	[898]	MOVE     	R0 R82 ; R0 := R82
	358	[898]	MOVE     	R0 R125 ; R0 := R125
	359	[898]	MOVE     	R0 R23 ; R0 := R23
	360	[921]	CLOSURE  	R130 27 ; R130 := closure(Function #28)
	361	[921]	MOVE     	R0 R88 ; R0 := R88
	362	[921]	MOVE     	R0 R23 ; R0 := R23
	363	[921]	MOVE     	R0 R87 ; R0 := R87
	364	[921]	MOVE     	R0 R128 ; R0 := R128
	365	[921]	MOVE     	R0 R50 ; R0 := R50
	366	[921]	MOVE     	R0 R84 ; R0 := R84
	367	[921]	MOVE     	R0 R83 ; R0 := R83
	368	[921]	MOVE     	R0 R82 ; R0 := R82
	369	[921]	MOVE     	R0 R129 ; R0 := R129
	370	[921]	MOVE     	R0 R125 ; R0 := R125
	371	[929]	CLOSURE  	R131 28 ; R131 := closure(Function #29)
	372	[929]	MOVE     	R0 R25 ; R0 := R25
	373	[929]	MOVE     	R0 R39 ; R0 := R39
	374	[933]	CLOSURE  	R132 29 ; R132 := closure(Function #30)
	375	[933]	MOVE     	R0 R25 ; R0 := R25
	376	[933]	MOVE     	R0 R41 ; R0 := R41
	377	[995]	CLOSURE  	R133 30 ; R133 := closure(Function #31)
	378	[995]	MOVE     	R0 R41 ; R0 := R41
	379	[995]	MOVE     	R0 R39 ; R0 := R39
	380	[995]	MOVE     	R0 R84 ; R0 := R84
	381	[995]	MOVE     	R0 R83 ; R0 := R83
	382	[995]	MOVE     	R0 R25 ; R0 := R25
	383	[995]	MOVE     	R0 R26 ; R0 := R26
	384	[995]	MOVE     	R0 R23 ; R0 := R23
	385	[999]	CLOSURE  	R134 31 ; R134 := closure(Function #32)
	386	[999]	MOVE     	R0 R113 ; R0 := R113
	387	[999]	MOVE     	R0 R84 ; R0 := R84
	388	[999]	MOVE     	R0 R83 ; R0 := R83
	389	[1003]	CLOSURE  	R135 32 ; R135 := closure(Function #33)
	390	[1003]	MOVE     	R0 R25 ; R0 := R25
	391	[1062]	CLOSURE  	R136 33 ; R136 := closure(Function #34)
	392	[1062]	MOVE     	R0 R39 ; R0 := R39
	393	[1062]	MOVE     	R0 R135 ; R0 := R135
	394	[1062]	MOVE     	R0 R89 ; R0 := R89
	395	[1062]	MOVE     	R0 R84 ; R0 := R84
	396	[1062]	MOVE     	R0 R83 ; R0 := R83
	397	[1062]	MOVE     	R0 R23 ; R0 := R23
	398	[1062]	MOVE     	R0 R61 ; R0 := R61
	399	[1263]	CLOSURE  	R137 34 ; R137 := closure(Function #35)
	400	[1263]	MOVE     	R0 R113 ; R0 := R113
	401	[1263]	MOVE     	R0 R41 ; R0 := R41
	402	[1263]	MOVE     	R0 R25 ; R0 := R25
	403	[1263]	MOVE     	R0 R126 ; R0 := R126
	404	[1263]	MOVE     	R0 R127 ; R0 := R127
	405	[1263]	MOVE     	R0 R133 ; R0 := R133
	406	[1263]	MOVE     	R0 R132 ; R0 := R132
	407	[1263]	MOVE     	R0 R118 ; R0 := R118
	408	[1263]	MOVE     	R0 R61 ; R0 := R61
	409	[1263]	MOVE     	R0 R24 ; R0 := R24
	410	[1263]	MOVE     	R0 R23 ; R0 := R23
	411	[1263]	MOVE     	R0 R88 ; R0 := R88
	412	[1263]	MOVE     	R0 R87 ; R0 := R87
	413	[1263]	MOVE     	R0 R84 ; R0 := R84
	414	[1263]	MOVE     	R0 R83 ; R0 := R83
	415	[1263]	MOVE     	R0 R30 ; R0 := R30
	416	[1263]	MOVE     	R0 R130 ; R0 := R130
	417	[1263]	MOVE     	R0 R40 ; R0 := R40
	418	[1267]	CLOSURE  	R138 35 ; R138 := closure(Function #36)
	419	[1267]	MOVE     	R0 R79 ; R0 := R79
	420	[1297]	CLOSURE  	R139 36 ; R139 := closure(Function #37)
	421	[1297]	MOVE     	R0 R79 ; R0 := R79
	422	[1297]	MOVE     	R0 R138 ; R0 := R138
	423	[1662]	CLOSURE  	R140 37 ; R140 := closure(Function #38)
	424	[1662]	MOVE     	R0 R139 ; R0 := R139
	425	[1662]	MOVE     	R0 R39 ; R0 := R39
	426	[1662]	MOVE     	R0 R126 ; R0 := R126
	427	[1662]	MOVE     	R0 R127 ; R0 := R127
	428	[1662]	MOVE     	R0 R130 ; R0 := R130
	429	[1662]	MOVE     	R0 R133 ; R0 := R133
	430	[1662]	MOVE     	R0 R131 ; R0 := R131
	431	[1662]	MOVE     	R0 R90 ; R0 := R90
	432	[1662]	MOVE     	R0 R84 ; R0 := R84
	433	[1662]	MOVE     	R0 R83 ; R0 := R83
	434	[1662]	MOVE     	R0 R25 ; R0 := R25
	435	[1662]	MOVE     	R0 R23 ; R0 := R23
	436	[1662]	MOVE     	R0 R134 ; R0 := R134
	437	[1662]	MOVE     	R0 R50 ; R0 := R50
	438	[1662]	MOVE     	R0 R77 ; R0 := R77
	439	[1662]	MOVE     	R0 R96 ; R0 := R96
	440	[1662]	MOVE     	R0 R60 ; R0 := R60
	441	[1662]	MOVE     	R0 R97 ; R0 := R97
	442	[1662]	MOVE     	R0 R59 ; R0 := R59
	443	[1662]	MOVE     	R0 R22 ; R0 := R22
	444	[1662]	MOVE     	R0 R42 ; R0 := R42
	445	[1662]	MOVE     	R0 R26 ; R0 := R26
	446	[1662]	MOVE     	R0 R98 ; R0 := R98
	447	[1662]	MOVE     	R0 R100 ; R0 := R100
	448	[1662]	MOVE     	R0 R113 ; R0 := R113
	449	[1840]	CLOSURE  	R141 38 ; R141 := closure(Function #39)
	450	[1840]	MOVE     	R0 R97 ; R0 := R97
	451	[1840]	MOVE     	R0 R113 ; R0 := R113
	452	[1840]	MOVE     	R0 R4 ; R0 := R4
	453	[1840]	MOVE     	R0 R21 ; R0 := R21
	454	[1840]	MOVE     	R0 R64 ; R0 := R64
	455	[1840]	MOVE     	R0 R84 ; R0 := R84
	456	[1840]	MOVE     	R0 R83 ; R0 := R83
	457	[1840]	MOVE     	R0 R22 ; R0 := R22
	458	[1840]	MOVE     	R0 R23 ; R0 := R23
	459	[1840]	MOVE     	R0 R26 ; R0 := R26
	460	[1840]	MOVE     	R0 R2 ; R0 := R2
	461	[1840]	MOVE     	R0 R3 ; R0 := R3
	462	[1840]	MOVE     	R0 R39 ; R0 := R39
	463	[1840]	MOVE     	R0 R96 ; R0 := R96
	464	[1840]	MOVE     	R0 R125 ; R0 := R125
	465	[2014]	CLOSURE  	R142 39 ; R142 := closure(Function #40)
	466	[2014]	MOVE     	R0 R84 ; R0 := R84
	467	[2014]	MOVE     	R0 R83 ; R0 := R83
	468	[2014]	MOVE     	R0 R67 ; R0 := R67
	469	[2014]	MOVE     	R0 R23 ; R0 := R23
	470	[2014]	MOVE     	R0 R0 ; R0 := R0
	471	[2014]	MOVE     	R0 R1 ; R0 := R1
	472	[2014]	MOVE     	R0 R4 ; R0 := R4
	473	[2014]	MOVE     	R0 R2 ; R0 := R2
	474	[2014]	MOVE     	R0 R3 ; R0 := R3
	475	[2014]	MOVE     	R0 R21 ; R0 := R21
	476	[2014]	MOVE     	R0 R100 ; R0 := R100
	477	[2014]	MOVE     	R0 R96 ; R0 := R96
	478	[2014]	MOVE     	R0 R93 ; R0 := R93
	479	[2014]	MOVE     	R0 R28 ; R0 := R28
	480	[2021]	CLOSURE  	R143 40 ; R143 := closure(Function #41)
	481	[2021]	MOVE     	R0 R69 ; R0 := R69
	482	[2397]	CLOSURE  	R104 41 ; R104 := closure(Function #42)
	483	[2397]	MOVE     	R0 R66 ; R0 := R66
	484	[2397]	MOVE     	R0 R71 ; R0 := R71
	485	[2397]	MOVE     	R0 R70 ; R0 := R70
	486	[2397]	MOVE     	R0 R68 ; R0 := R68
	487	[2397]	MOVE     	R0 R142 ; R0 := R142
	488	[2397]	MOVE     	R0 R4 ; R0 := R4
	489	[2397]	MOVE     	R0 R113 ; R0 := R113
	490	[2397]	MOVE     	R0 R21 ; R0 := R21
	491	[2397]	MOVE     	R0 R84 ; R0 := R84
	492	[2397]	MOVE     	R0 R83 ; R0 := R83
	493	[2397]	MOVE     	R0 R42 ; R0 := R42
	494	[2397]	MOVE     	R0 R67 ; R0 := R67
	495	[2397]	MOVE     	R0 R46 ; R0 := R46
	496	[2397]	MOVE     	R0 R79 ; R0 := R79
	497	[2397]	MOVE     	R0 R2 ; R0 := R2
	498	[2397]	MOVE     	R0 R26 ; R0 := R26
	499	[2397]	MOVE     	R0 R23 ; R0 := R23
	500	[2397]	MOVE     	R0 R143 ; R0 := R143
	501	[2397]	MOVE     	R0 R97 ; R0 := R97
	502	[2397]	MOVE     	R0 R3 ; R0 := R3
	503	[2397]	MOVE     	R0 R100 ; R0 := R100
	504	[2397]	MOVE     	R0 R72 ; R0 := R72
	505	[2397]	MOVE     	R0 R76 ; R0 := R76
	506	[2397]	MOVE     	R0 R74 ; R0 := R74
	507	[2397]	MOVE     	R0 R75 ; R0 := R75
	508	[2397]	MOVE     	R0 R69 ; R0 := R69
	509	[2397]	MOVE     	R0 R141 ; R0 := R141
	510	[2397]	MOVE     	R0 R98 ; R0 := R98
	511	[2397]	MOVE     	R0 R22 ; R0 := R22
	512	[2397]	MOVE     	R0 R39 ; R0 := R39
	513	[2397]	MOVE     	R0 R94 ; R0 := R94
	514	[2397]	MOVE     	R0 R99 ; R0 := R99
	515	[2397]	MOVE     	R0 R36 ; R0 := R36
	516	[2397]	MOVE     	R0 R43 ; R0 := R43
	517	[2397]	MOVE     	R0 R101 ; R0 := R101
	518	[2397]	MOVE     	R0 R108 ; R0 := R108
	519	[2397]	MOVE     	R0 R125 ; R0 := R125
	520	[2397]	MOVE     	R0 R52 ; R0 := R52
	521	[2540]	CLOSURE  	R103 42 ; R103 := closure(Function #43)
	522	[2540]	MOVE     	R0 R39 ; R0 := R39
	523	[2540]	MOVE     	R0 R84 ; R0 := R84
	524	[2540]	MOVE     	R0 R83 ; R0 := R83
	525	[2540]	MOVE     	R0 R102 ; R0 := R102
	526	[2540]	MOVE     	R0 R36 ; R0 := R36
	527	[2540]	MOVE     	R0 R52 ; R0 := R52
	528	[2540]	MOVE     	R0 R42 ; R0 := R42
	529	[2540]	MOVE     	R0 R67 ; R0 := R67
	530	[2540]	MOVE     	R0 R21 ; R0 := R21
	531	[2540]	MOVE     	R0 R4 ; R0 := R4
	532	[2540]	MOVE     	R0 R68 ; R0 := R68
	533	[2540]	MOVE     	R0 R85 ; R0 := R85
	534	[2540]	MOVE     	R0 R96 ; R0 := R96
	535	[2540]	MOVE     	R0 R72 ; R0 := R72
	536	[2540]	MOVE     	R0 R97 ; R0 := R97
	537	[2540]	MOVE     	R0 R43 ; R0 := R43
	538	[2540]	MOVE     	R0 R101 ; R0 := R101
	539	[2540]	MOVE     	R0 R108 ; R0 := R108
	540	[2540]	MOVE     	R0 R66 ; R0 := R66
	541	[2540]	MOVE     	R0 R23 ; R0 := R23
	542	[2559]	CLOSURE  	R144 43 ; R144 := closure(Function #44)
	543	[2559]	MOVE     	R0 R39 ; R0 := R39
	544	[2559]	MOVE     	R0 R135 ; R0 := R135
	545	[2559]	MOVE     	R0 R25 ; R0 := R25
	546	[2566]	CLOSURE  	R145 44 ; R145 := closure(Function #45)
	547	[2566]	MOVE     	R0 R36 ; R0 := R36
	548	[2566]	MOVE     	R0 R63 ; R0 := R63
	549	[2566]	MOVE     	R0 R23 ; R0 := R23
	550	[2561]	SETGLOBAL	R145 K142 ; SliderPress := R145
	551	[2570]	CLOSURE  	R145 45 ; R145 := closure(Function #46)
	552	[2570]	MOVE     	R0 R63 ; R0 := R63
	553	[2568]	SETGLOBAL	R145 K143 ; SliderRelease := R145
	554	[2623]	CLOSURE  	R145 46 ; R145 := closure(Function #47)
	555	[2623]	MOVE     	R0 R35 ; R0 := R35
	556	[2623]	MOVE     	R0 R63 ; R0 := R63
	557	[2623]	MOVE     	R0 R144 ; R0 := R144
	558	[2623]	MOVE     	R0 R77 ; R0 := R77
	559	[2623]	MOVE     	R0 R65 ; R0 := R65
	560	[2623]	MOVE     	R0 R84 ; R0 := R84
	561	[2623]	MOVE     	R0 R83 ; R0 := R83
	562	[2623]	MOVE     	R0 R33 ; R0 := R33
	563	[2623]	MOVE     	R0 R52 ; R0 := R52
	564	[2623]	MOVE     	R0 R66 ; R0 := R66
	565	[2623]	MOVE     	R0 R104 ; R0 := R104
	566	[2623]	MOVE     	R0 R39 ; R0 := R39
	567	[2623]	MOVE     	R0 R4 ; R0 := R4
	568	[2623]	MOVE     	R0 R6 ; R0 := R6
	569	[2623]	MOVE     	R0 R5 ; R0 := R5
	570	[2623]	MOVE     	R0 R103 ; R0 := R103
	571	[2623]	MOVE     	R0 R13 ; R0 := R13
	572	[2623]	MOVE     	R0 R14 ; R0 := R14
	573	[2623]	MOVE     	R0 R36 ; R0 := R36
	574	[2623]	MOVE     	R0 R41 ; R0 := R41
	575	[2623]	MOVE     	R0 R15 ; R0 := R15
	576	[2623]	MOVE     	R0 R116 ; R0 := R116
	577	[2572]	SETGLOBAL	R145 K144 ; Update := R145
	578	[2637]	CLOSURE  	R145 47 ; R145 := closure(Function #48)
	579	[2637]	MOVE     	R0 R39 ; R0 := R39
	580	[2637]	MOVE     	R0 R120 ; R0 := R120
	581	[2637]	MOVE     	R0 R41 ; R0 := R41
	582	[2637]	MOVE     	R0 R123 ; R0 := R123
	583	[2637]	MOVE     	R0 R53 ; R0 := R53
	584	[2661]	CLOSURE  	R146 48 ; R146 := closure(Function #49)
	585	[2661]	MOVE     	R0 R11 ; R0 := R11
	586	[2661]	MOVE     	R0 R16 ; R0 := R16
	587	[2668]	CLOSURE  	R147 49 ; R147 := closure(Function #50)
	588	[2668]	MOVE     	R0 R146 ; R0 := R146
	589	[2668]	MOVE     	R0 R123 ; R0 := R123
	590	[2663]	SETGLOBAL	R147 K145 ; KillEnemies := R147
	591	[2677]	CLOSURE  	R147 50 ; R147 := closure(Function #51)
	592	[2677]	MOVE     	R0 R73 ; R0 := R73
	593	[2688]	CLOSURE  	R148 51 ; R148 := closure(Function #52)
	594	[2688]	MOVE     	R0 R17 ; R0 := R17
	595	[2688]	MOVE     	R0 R15 ; R0 := R15
	596	[2679]	SETGLOBAL	R148 K146 ; EnemyLevelSelected := R148
	597	[2701]	CLOSURE  	R148 52 ; R148 := closure(Function #53)
	598	[2701]	MOVE     	R0 R15 ; R0 := R15
	599	[2701]	MOVE     	R0 R50 ; R0 := R50
	600	[2701]	MOVE     	R0 R147 ; R0 := R147
	601	[2690]	SETGLOBAL	R148 K147 ; OnEnemyLevelChanged := R148
	602	[2711]	CLOSURE  	R148 53 ; R148 := closure(Function #54)
	603	[2711]	MOVE     	R0 R107 ; R0 := R107
	604	[2711]	MOVE     	R0 R147 ; R0 := R147
	605	[2703]	SETGLOBAL	R148 K148 ; ToggleFriendlyFire := R148
	606	[2721]	CLOSURE  	R148 54 ; R148 := closure(Function #55)
	607	[2721]	MOVE     	R0 R106 ; R0 := R106
	608	[2721]	MOVE     	R0 R147 ; R0 := R147
	609	[2713]	SETGLOBAL	R148 K149 ; TogglePauseAI := R148
	610	[2730]	CLOSURE  	R148 55 ; R148 := closure(Function #56)
	611	[2730]	MOVE     	R0 R147 ; R0 := R147
	612	[2723]	SETGLOBAL	R148 K150 ; ToggleInvincibility := R148
	613	[2739]	CLOSURE  	R148 56 ; R148 := closure(Function #57)
	614	[2739]	MOVE     	R0 R147 ; R0 := R147
	615	[2732]	SETGLOBAL	R148 K151 ; ToggleCompanionInvincibility := R148
	616	[2763]	CLOSURE  	R148 57 ; R148 := closure(Function #58)
	617	[2763]	MOVE     	R0 R65 ; R0 := R65
	618	[2763]	MOVE     	R0 R50 ; R0 := R50
	619	[2741]	SETGLOBAL	R148 K152 ; SyndicateMovieClosed := R148
	620	[2772]	CLOSURE  	R148 58 ; R148 := closure(Function #59)
	621	[2772]	MOVE     	R0 R50 ; R0 := R50
	622	[2772]	MOVE     	R0 R65 ; R0 := R65
	623	[2765]	SETGLOBAL	R148 K153 ; OpenSyndicateMovie := R148
	624	[2787]	CLOSURE  	R148 59 ; R148 := closure(Function #60)
	625	[2787]	MOVE     	R0 R43 ; R0 := R43
	626	[2787]	MOVE     	R0 R84 ; R0 := R84
	627	[2787]	MOVE     	R0 R83 ; R0 := R83
	628	[2787]	MOVE     	R0 R145 ; R0 := R145
	629	[2787]	MOVE     	R0 R105 ; R0 := R105
	630	[2791]	CLOSURE  	R149 60 ; R149 := closure(Function #61)
	631	[2791]	MOVE     	R0 R22 ; R0 := R22
	632	[2789]	SETGLOBAL	R149 K154 ; OnInvalidBinError := R149
	633	[2839]	CLOSURE  	R149 61 ; R149 := closure(Function #62)
	634	[2839]	MOVE     	R0 R24 ; R0 := R24
	635	[2839]	MOVE     	R0 R123 ; R0 := R123
	636	[2839]	MOVE     	R0 R40 ; R0 := R40
	637	[2839]	MOVE     	R0 R59 ; R0 := R59
	638	[2839]	MOVE     	R0 R41 ; R0 := R41
	639	[2839]	MOVE     	R0 R39 ; R0 := R39
	640	[2846]	CLOSURE  	R150 62 ; R150 := closure(Function #63)
	641	[2846]	MOVE     	R0 R10 ; R0 := R10
	642	[2865]	CLOSURE  	R151 63 ; R151 := closure(Function #64)
	643	[2887]	CLOSURE  	R106 64 ; R106 := closure(Function #65)
	644	[2887]	MOVE     	R0 R18 ; R0 := R18
	645	[2887]	MOVE     	R0 R7 ; R0 := R7
	646	[2887]	MOVE     	R0 R151 ; R0 := R151
	647	[2902]	CLOSURE  	R107 65 ; R107 := closure(Function #66)
	648	[2984]	CLOSURE  	R152 66 ; R152 := closure(Function #67)
	649	[2984]	MOVE     	R0 R9 ; R0 := R9
	650	[2984]	MOVE     	R0 R17 ; R0 := R17
	651	[2984]	MOVE     	R0 R11 ; R0 := R11
	652	[2984]	MOVE     	R0 R23 ; R0 := R23
	653	[2984]	MOVE     	R0 R15 ; R0 := R15
	654	[2984]	MOVE     	R0 R106 ; R0 := R106
	655	[2984]	MOVE     	R0 R107 ; R0 := R107
	656	[2984]	MOVE     	R0 R73 ; R0 := R73
	657	[2984]	MOVE     	R0 R30 ; R0 := R30
	658	[2984]	MOVE     	R0 R25 ; R0 := R25
	659	[2984]	MOVE     	R0 R61 ; R0 := R61
	660	[3023]	CLOSURE  	R153 67 ; R153 := closure(Function #68)
	661	[3023]	MOVE     	R0 R59 ; R0 := R59
	662	[3023]	MOVE     	R0 R36 ; R0 := R36
	663	[3023]	MOVE     	R0 R39 ; R0 := R39
	664	[3040]	CLOSURE  	R154 68 ; R154 := closure(Function #69)
	665	[3040]	MOVE     	R0 R33 ; R0 := R33
	666	[3040]	MOVE     	R0 R34 ; R0 := R34
	667	[3040]	MOVE     	R0 R20 ; R0 := R20
	668	[3040]	MOVE     	R0 R134 ; R0 := R134
	669	[3492]	CLOSURE  	R155 69 ; R155 := closure(Function #70)
	670	[3492]	MOVE     	R0 R84 ; R0 := R84
	671	[3492]	MOVE     	R0 R83 ; R0 := R83
	672	[3492]	MOVE     	R0 R23 ; R0 := R23
	673	[3492]	MOVE     	R0 R85 ; R0 := R85
	674	[3492]	MOVE     	R0 R19 ; R0 := R19
	675	[3492]	MOVE     	R0 R26 ; R0 := R26
	676	[3492]	MOVE     	R0 R64 ; R0 := R64
	677	[3492]	MOVE     	R0 R54 ; R0 := R54
	678	[3492]	MOVE     	R0 R55 ; R0 := R55
	679	[3492]	MOVE     	R0 R56 ; R0 := R56
	680	[3492]	MOVE     	R0 R113 ; R0 := R113
	681	[3492]	MOVE     	R0 R25 ; R0 := R25
	682	[3492]	MOVE     	R0 R22 ; R0 := R22
	683	[3492]	MOVE     	R0 R123 ; R0 := R123
	684	[3492]	MOVE     	R0 R86 ; R0 := R86
	685	[3492]	MOVE     	R0 R100 ; R0 := R100
	686	[3492]	MOVE     	R0 R21 ; R0 := R21
	687	[3492]	MOVE     	R0 R32 ; R0 := R32
	688	[3492]	MOVE     	R0 R0 ; R0 := R0
	689	[3492]	MOVE     	R0 R1 ; R0 := R1
	690	[3492]	MOVE     	R0 R11 ; R0 := R11
	691	[3492]	MOVE     	R0 R12 ; R0 := R12
	692	[3492]	MOVE     	R0 R81 ; R0 := R81
	693	[3492]	MOVE     	R0 R31 ; R0 := R31
	694	[3492]	MOVE     	R0 R24 ; R0 := R24
	695	[3492]	MOVE     	R0 R27 ; R0 := R27
	696	[3492]	MOVE     	R0 R90 ; R0 := R90
	697	[3492]	MOVE     	R0 R61 ; R0 := R61
	698	[3492]	MOVE     	R0 R4 ; R0 := R4
	699	[3492]	MOVE     	R0 R37 ; R0 := R37
	700	[3492]	MOVE     	R0 R42 ; R0 := R42
	701	[3492]	MOVE     	R0 R9 ; R0 := R9
	702	[3492]	MOVE     	R0 R7 ; R0 := R7
	703	[3492]	MOVE     	R0 R152 ; R0 := R152
	704	[3492]	MOVE     	R0 R146 ; R0 := R146
	705	[3492]	MOVE     	R0 R58 ; R0 := R58
	706	[3492]	MOVE     	R0 R109 ; R0 := R109
	707	[3492]	MOVE     	R0 R140 ; R0 := R140
	708	[3492]	MOVE     	R0 R137 ; R0 := R137
	709	[3492]	MOVE     	R0 R153 ; R0 := R153
	710	[3492]	MOVE     	R0 R154 ; R0 := R154
	711	[3492]	MOVE     	R0 R136 ; R0 := R136
	712	[3492]	MOVE     	R0 R39 ; R0 := R39
	713	[3492]	MOVE     	R0 R148 ; R0 := R148
	714	[3492]	MOVE     	R0 R52 ; R0 := R52
	715	[3492]	MOVE     	R0 R88 ; R0 := R88
	716	[3492]	MOVE     	R0 R87 ; R0 := R87
	717	[3492]	MOVE     	R0 R8 ; R0 := R8
	718	[3492]	MOVE     	R0 R150 ; R0 := R150
	719	[3492]	MOVE     	R0 R5 ; R0 := R5
	720	[3492]	MOVE     	R0 R6 ; R0 := R6
	721	[3492]	MOVE     	R0 R43 ; R0 := R43
	722	[3492]	MOVE     	R0 R101 ; R0 := R101
	723	[3492]	MOVE     	R0 R108 ; R0 := R108
	724	[3492]	MOVE     	R0 R103 ; R0 := R103
	725	[3492]	MOVE     	R0 R35 ; R0 := R35
	726	[3492]	MOVE     	R0 R60 ; R0 := R60
	727	[3492]	MOVE     	R0 R111 ; R0 := R111
	728	[3492]	MOVE     	R0 R149 ; R0 := R149
	729	[3042]	SETGLOBAL	R155 K155 ; Initialize := R155
	730	[3494]	LOADK    	R155 := 0.000000
	731	[3510]	CLOSURE  	R156 70 ; R156 := closure(Function #71)
	732	[3510]	MOVE     	R0 R33 ; R0 := R33
	733	[3510]	MOVE     	R0 R155 ; R0 := R155
	734	[3627]	CLOSURE  	R157 71 ; R157 := closure(Function #72)
	735	[3627]	MOVE     	R0 R52 ; R0 := R52
	736	[3627]	MOVE     	R0 R80 ; R0 := R80
	737	[3627]	MOVE     	R0 R155 ; R0 := R155
	738	[3627]	MOVE     	R0 R84 ; R0 := R84
	739	[3627]	MOVE     	R0 R83 ; R0 := R83
	740	[3627]	MOVE     	R0 R156 ; R0 := R156
	741	[3627]	MOVE     	R0 R44 ; R0 := R44
	742	[3627]	MOVE     	R0 R41 ; R0 := R41
	743	[3627]	MOVE     	R0 R23 ; R0 := R23
	744	[3627]	MOVE     	R0 R91 ; R0 := R91
	745	[3627]	MOVE     	R0 R117 ; R0 := R117
	746	[3627]	MOVE     	R0 R123 ; R0 := R123
	747	[3627]	MOVE     	R0 R53 ; R0 := R53
	748	[3627]	MOVE     	R0 R103 ; R0 := R103
	749	[3627]	MOVE     	R0 R118 ; R0 := R118
	750	[3627]	MOVE     	R0 R22 ; R0 := R22
	751	[3627]	MOVE     	R0 R36 ; R0 := R36
	752	[3512]	SETGLOBAL	R157 K156 ; OnSellCompleted := R157
	753	[3640]	CLOSURE  	R157 72 ; R157 := closure(Function #73)
	754	[3640]	MOVE     	R0 R57 ; R0 := R57
	755	[3640]	MOVE     	R0 R52 ; R0 := R52
	756	[3640]	MOVE     	R0 R80 ; R0 := R80
	757	[3640]	MOVE     	R0 R44 ; R0 := R44
	758	[3640]	MOVE     	R0 R23 ; R0 := R23
	759	[3640]	MOVE     	R0 R36 ; R0 := R36
	760	[3629]	SETGLOBAL	R157 K157 ; OnSellConfirmed := R157
	761	[3704]	CLOSURE  	R157 73 ; R157 := closure(Function #74)
	762	[3737]	CLOSURE  	R158 74 ; R158 := closure(Function #75)
	763	[3737]	MOVE     	R0 R4 ; R0 := R4
	764	[3737]	MOVE     	R0 R44 ; R0 := R44
	765	[3737]	MOVE     	R0 R41 ; R0 := R41
	766	[3737]	MOVE     	R0 R21 ; R0 := R21
	767	[3737]	MOVE     	R0 R78 ; R0 := R78
	768	[3852]	CLOSURE  	R159 75 ; R159 := closure(Function #76)
	769	[3852]	MOVE     	R0 R36 ; R0 := R36
	770	[3852]	MOVE     	R0 R57 ; R0 := R57
	771	[3852]	MOVE     	R0 R44 ; R0 := R44
	772	[3852]	MOVE     	R0 R84 ; R0 := R84
	773	[3852]	MOVE     	R0 R83 ; R0 := R83
	774	[3852]	MOVE     	R0 R158 ; R0 := R158
	775	[3852]	MOVE     	R0 R62 ; R0 := R62
	776	[3852]	MOVE     	R0 R41 ; R0 := R41
	777	[3852]	MOVE     	R0 R23 ; R0 := R23
	778	[3852]	MOVE     	R0 R157 ; R0 := R157
	779	[3739]	SETGLOBAL	R159 K158 ; SellWithManifest := R159
	780	[3898]	CLOSURE  	R159 76 ; R159 := closure(Function #77)
	781	[3898]	MOVE     	R0 R36 ; R0 := R36
	782	[3898]	MOVE     	R0 R53 ; R0 := R53
	783	[3898]	MOVE     	R0 R16 ; R0 := R16
	784	[3898]	MOVE     	R0 R23 ; R0 := R23
	785	[3898]	MOVE     	R0 R52 ; R0 := R52
	786	[3898]	MOVE     	R0 R41 ; R0 := R41
	787	[3898]	MOVE     	R0 R9 ; R0 := R9
	788	[3898]	MOVE     	R0 R13 ; R0 := R13
	789	[3898]	MOVE     	R0 R14 ; R0 := R14
	790	[3854]	SETGLOBAL	R159 K159 ; LoadEnemies := R159
	791	[3902]	CLOSURE  	R159 77 ; R159 := closure(Function #78)
	792	[3902]	MOVE     	R0 R115 ; R0 := R115
	793	[3900]	SETGLOBAL	R159 K160 ; Close := R159
	794	[3906]	CLOSURE  	R159 78 ; R159 := closure(Function #79)
	795	[3906]	MOVE     	R0 R117 ; R0 := R117
	796	[3904]	SETGLOBAL	R159 K161 ; ExitScreen := R159
	797	[3922]	CLOSURE  	R159 79 ; R159 := closure(Function #80)
	798	[3922]	MOVE     	R0 R36 ; R0 := R36
	799	[3922]	MOVE     	R0 R39 ; R0 := R39
	800	[3922]	MOVE     	R0 R88 ; R0 := R88
	801	[3922]	MOVE     	R0 R87 ; R0 := R87
	802	[3922]	MOVE     	R0 R43 ; R0 := R43
	803	[3922]	MOVE     	R0 R101 ; R0 := R101
	804	[3908]	SETGLOBAL	R159 K162 ; onKeyUp_MENU_CANCEL := R159
	805	[3930]	CLOSURE  	R159 80 ; R159 := closure(Function #81)
	806	[3930]	MOVE     	R0 R39 ; R0 := R39
	807	[3926]	SETGLOBAL	R159 K163 ; GridItemFocused := R159
	808	[3936]	CLOSURE  	R159 81 ; R159 := closure(Function #82)
	809	[3936]	MOVE     	R0 R39 ; R0 := R39
	810	[3932]	SETGLOBAL	R159 K164 ; GridItemUnfocused := R159
	811	[3942]	CLOSURE  	R159 82 ; R159 := closure(Function #83)
	812	[3942]	MOVE     	R0 R36 ; R0 := R36
	813	[3942]	MOVE     	R0 R39 ; R0 := R39
	814	[3938]	SETGLOBAL	R159 K165 ; GridItemPressed := R159
	815	[3948]	CLOSURE  	R159 83 ; R159 := closure(Function #84)
	816	[3948]	MOVE     	R0 R39 ; R0 := R39
	817	[3944]	SETGLOBAL	R159 K166 ; CategoryFocused := R159
	818	[3954]	CLOSURE  	R159 84 ; R159 := closure(Function #85)
	819	[3954]	MOVE     	R0 R39 ; R0 := R39
	820	[3950]	SETGLOBAL	R159 K167 ; CategoryUnfocused := R159
	821	[3975]	CLOSURE  	R159 85 ; R159 := closure(Function #86)
	822	[3975]	MOVE     	R0 R36 ; R0 := R36
	823	[3975]	MOVE     	R0 R39 ; R0 := R39
	824	[3975]	MOVE     	R0 R84 ; R0 := R84
	825	[3975]	MOVE     	R0 R83 ; R0 := R83
	826	[3975]	MOVE     	R0 R43 ; R0 := R43
	827	[3975]	MOVE     	R0 R101 ; R0 := R101
	828	[3975]	MOVE     	R0 R108 ; R0 := R108
	829	[3956]	SETGLOBAL	R159 K168 ; CategoryPressed := R159
	830	[3978]	CLOSURE  	R159 86 ; R159 := closure(Function #87)
	831	[3977]	SETGLOBAL	R159 K169 ; SortByFocused := R159
	832	[3981]	CLOSURE  	R159 87 ; R159 := closure(Function #88)
	833	[3980]	SETGLOBAL	R159 K170 ; SortByUnfocused := R159
	834	[3984]	CLOSURE  	R159 88 ; R159 := closure(Function #89)
	835	[3983]	SETGLOBAL	R159 K171 ; SortByPressed := R159
	836	[3991]	CLOSURE  	R159 89 ; R159 := closure(Function #90)
	837	[3991]	MOVE     	R0 R36 ; R0 := R36
	838	[3991]	MOVE     	R0 R39 ; R0 := R39
	839	[3991]	MOVE     	R0 R23 ; R0 := R23
	840	[3986]	SETGLOBAL	R159 K172 ; onKeyUp_MENU_LTRIGGER2 := R159
	841	[3998]	CLOSURE  	R159 90 ; R159 := closure(Function #91)
	842	[3998]	MOVE     	R0 R36 ; R0 := R36
	843	[3998]	MOVE     	R0 R39 ; R0 := R39
	844	[3998]	MOVE     	R0 R23 ; R0 := R23
	845	[3993]	SETGLOBAL	R159 K173 ; onKeyUp_MENU_RTRIGGER2 := R159
	846	[4005]	CLOSURE  	R159 91 ; R159 := closure(Function #92)
	847	[4005]	MOVE     	R0 R36 ; R0 := R36
	848	[4005]	MOVE     	R0 R39 ; R0 := R39
	849	[4005]	MOVE     	R0 R23 ; R0 := R23
	850	[4000]	SETGLOBAL	R159 K174 ; onKeyDown_MENU_LTRIGGER2 := R159
	851	[4012]	CLOSURE  	R159 92 ; R159 := closure(Function #93)
	852	[4012]	MOVE     	R0 R36 ; R0 := R36
	853	[4012]	MOVE     	R0 R39 ; R0 := R39
	854	[4012]	MOVE     	R0 R23 ; R0 := R23
	855	[4007]	SETGLOBAL	R159 K175 ; onKeyDown_MENU_RTRIGGER2 := R159
	856	[4018]	CLOSURE  	R159 93 ; R159 := closure(Function #94)
	857	[4018]	MOVE     	R0 R39 ; R0 := R39
	858	[4014]	SETGLOBAL	R159 K176 ; DropDownArrowPressed := R159
	859	[4024]	CLOSURE  	R159 94 ; R159 := closure(Function #95)
	860	[4024]	MOVE     	R0 R39 ; R0 := R39
	861	[4020]	SETGLOBAL	R159 K177 ; DropDownArrowFocused := R159
	862	[4030]	CLOSURE  	R159 95 ; R159 := closure(Function #96)
	863	[4030]	MOVE     	R0 R39 ; R0 := R39
	864	[4026]	SETGLOBAL	R159 K178 ; DropDownArrowUnfocused := R159
	865	[4034]	CLOSURE  	R159 96 ; R159 := closure(Function #97)
	866	[4034]	MOVE     	R0 R36 ; R0 := R36
	867	[4032]	SETGLOBAL	R159 K179 ; IsInputBlocked := R159
	868	[4049]	CLOSURE  	R159 97 ; R159 := closure(Function #98)
	869	[4049]	MOVE     	R0 R88 ; R0 := R88
	870	[4049]	MOVE     	R0 R87 ; R0 := R87
	871	[4049]	MOVE     	R0 R39 ; R0 := R39
	872	[4049]	MOVE     	R0 R105 ; R0 := R105
	873	[4049]	MOVE     	R0 R41 ; R0 := R41
	874	[4036]	SETGLOBAL	R159 K180 ; SelectAllCategoryItems := R159
	875	[4072]	CLOSURE  	R105 98 ; R105 := closure(Function #99)
	876	[4072]	MOVE     	R0 R130 ; R0 := R130
	877	[4072]	MOVE     	R0 R39 ; R0 := R39
	878	[4072]	MOVE     	R0 R23 ; R0 := R23
	879	[4072]	MOVE     	R0 R41 ; R0 := R41
	880	[4076]	CLOSURE  	R159 99 ; R159 := closure(Function #100)
	881	[4076]	MOVE     	R0 R23 ; R0 := R23
	882	[4074]	SETGLOBAL	R159 K181 ; RollOver := R159
	883	[4083]	CLOSURE  	R159 100 ; R159 := closure(Function #101)
	884	[4083]	MOVE     	R0 R23 ; R0 := R23
	885	[4083]	MOVE     	R0 R88 ; R0 := R88
	886	[4083]	MOVE     	R0 R87 ; R0 := R87
	887	[4083]	MOVE     	R0 R41 ; R0 := R41
	888	[4083]	MOVE     	R0 R39 ; R0 := R39
	889	[4083]	MOVE     	R0 R36 ; R0 := R36
	890	[4078]	SETGLOBAL	R159 K182 ; onKeyDown_MENU_MOUSE_Z := R159
	891	[4090]	CLOSURE  	R159 101 ; R159 := closure(Function #102)
	892	[4090]	MOVE     	R0 R39 ; R0 := R39
	893	[4090]	MOVE     	R0 R51 ; R0 := R51
	894	[4090]	MOVE     	R0 R125 ; R0 := R125
	895	[4085]	SETGLOBAL	R159 K183 ; OKSaveSelectedCount := R159
	896	[4109]	CLOSURE  	R159 102 ; R159 := closure(Function #103)
	897	[4109]	MOVE     	R0 R22 ; R0 := R22
	898	[4109]	MOVE     	R0 R42 ; R0 := R42
	899	[4109]	MOVE     	R0 R48 ; R0 := R48
	900	[4109]	MOVE     	R0 R47 ; R0 := R47
	901	[4092]	SETGLOBAL	R159 K184 ; HandleCanBeClosed := R159
	902	[4121]	CLOSURE  	R159 103 ; R159 := closure(Function #104)
	903	[4121]	MOVE     	R0 R52 ; R0 := R52
	904	[4121]	MOVE     	R0 R34 ; R0 := R34
	905	[4121]	MOVE     	R0 R39 ; R0 := R39
	906	[4121]	MOVE     	R0 R41 ; R0 := R41
	907	[4121]	MOVE     	R0 R136 ; R0 := R136
	908	[4111]	SETGLOBAL	R159 K185 ; onViewportSizeChanged := R159
	909	[4127]	CLOSURE  	R159 104 ; R159 := closure(Function #105)
	910	[4127]	MOVE     	R0 R105 ; R0 := R105
	911	[4123]	SETGLOBAL	R159 K186 ; onRawInputEvent := R159
	912	[4134]	CLOSURE  	R159 105 ; R159 := closure(Function #106)
	913	[4134]	MOVE     	R0 R36 ; R0 := R36
	914	[4134]	MOVE     	R0 R117 ; R0 := R117
	915	[4129]	SETGLOBAL	R159 K187 ; onKeyDown_HIDE_PAUSE_MENU := R159
	916	[4138]	CLOSURE  	R159 106 ; R159 := closure(Function #107)
	917	[4138]	MOVE     	R0 R49 ; R0 := R49
	918	[4136]	SETGLOBAL	R159 K188 ; SetOnMarkedToSellFunction := R159
	919	[4145]	CLOSURE  	R159 107 ; R159 := closure(Function #108)
	920	[4145]	MOVE     	R0 R149 ; R0 := R149
	921	[4140]	SETGLOBAL	R159 K189 ; OnStyleChangedCallback := R159
	922	[4152]	CLOSURE  	R159 108 ; R159 := closure(Function #109)
	923	[4152]	MOVE     	R0 R43 ; R0 := R43
	924	[4152]	MOVE     	R0 R101 ; R0 := R101
	925	[4152]	MOVE     	R0 R84 ; R0 := R84
	926	[4152]	MOVE     	R0 R83 ; R0 := R83
	927	[4152]	MOVE     	R0 R108 ; R0 := R108
	928	[4147]	SETGLOBAL	R159 K190 ; OnGamepadTransition := R159
	929	[4156]	CLOSURE  	R159 109 ; R159 := closure(Function #110)
	930	[4154]	SETGLOBAL	R159 K191 ; SupportsThemes := R159
	931	[4328]	CLOSURE  	R102 110 ; R102 := closure(Function #111)
	932	[4328]	MOVE     	R0 R8 ; R0 := R8
	933	[4328]	MOVE     	R0 R97 ; R0 := R97
	934	[4328]	MOVE     	R0 R10 ; R0 := R10
	935	[4328]	MOVE     	R0 R11 ; R0 := R11
	936	[4328]	MOVE     	R0 R29 ; R0 := R29
	937	[4328]	MOVE     	R0 R12 ; R0 := R12
	938	[4328]	MOVE     	R0 R39 ; R0 := R39
	939	[4328]	MOVE     	R0 R125 ; R0 := R125
	940	[4334]	CLOSURE  	R159 111 ; R159 := closure(Function #112)
	941	[4334]	MOVE     	R0 R136 ; R0 := R136
	942	[4334]	MOVE     	R0 R36 ; R0 := R36
	943	[4330]	SETGLOBAL	R159 K192 ; FishFunctionCancelled := R159
	944	[4340]	CLOSURE  	R159 112 ; R159 := closure(Function #113)
	945	[4340]	MOVE     	R0 R41 ; R0 := R41
	946	[4340]	MOVE     	R0 R36 ; R0 := R36
	947	[4336]	SETGLOBAL	R159 K193 ; FishFunction := R159
	948	[4413]	CLOSURE  	R159 113 ; R159 := closure(Function #114)
	949	[4413]	MOVE     	R0 R81 ; R0 := R81
	950	[4413]	MOVE     	R0 R41 ; R0 := R41
	951	[4413]	MOVE     	R0 R53 ; R0 := R53
	952	[4413]	MOVE     	R0 R22 ; R0 := R22
	953	[4413]	MOVE     	R0 R42 ; R0 := R42
	954	[4413]	MOVE     	R0 R23 ; R0 := R23
	955	[4417]	CLOSURE  	R160 114 ; R160 := closure(Function #115)
	956	[4417]	MOVE     	R0 R159 ; R0 := R159
	957	[4415]	SETGLOBAL	R160 K194 ; DonateDogTags := R160
	958	[4423]	CLOSURE  	R160 115 ; R160 := closure(Function #116)
	959	[4423]	MOVE     	R0 R159 ; R0 := R159
	960	[4419]	SETGLOBAL	R160 K195 ; ConfirmDogTagPartial := R160
	961	[4435]	CLOSURE  	R160 116 ; R160 := closure(Function #117)
	962	[4435]	MOVE     	R0 R42 ; R0 := R42
	963	[4435]	MOVE     	R0 R81 ; R0 := R81
	964	[4435]	MOVE     	R0 R22 ; R0 := R22
	965	[4435]	MOVE     	R0 R23 ; R0 := R23
	966	[4425]	SETGLOBAL	R160 K196 ; ConfirmDogTagAll := R160
	967	[4472]	CLOSURE  	R160 117 ; R160 := closure(Function #118)
	968	[4472]	MOVE     	R0 R81 ; R0 := R81
	969	[4472]	MOVE     	R0 R95 ; R0 := R95
	970	[4472]	MOVE     	R0 R27 ; R0 := R27
	971	[4472]	MOVE     	R0 R117 ; R0 := R117
	972	[4437]	SETGLOBAL	R160 K197 ; OnDonateDogTagsComplete := R160
	973	[4478]	CLOSURE  	R160 118 ; R160 := closure(Function #119)
	974	[4478]	MOVE     	R0 R41 ; R0 := R41
	975	[4478]	MOVE     	R0 R117 ; R0 := R117
	976	[4474]	SETGLOBAL	R160 K198 ; ConvertShards := R160
	977	[4484]	CLOSURE  	R160 119 ; R160 := closure(Function #120)
	978	[4484]	MOVE     	R0 R41 ; R0 := R41
	979	[4484]	MOVE     	R0 R117 ; R0 := R117
	980	[4480]	SETGLOBAL	R160 K199 ; DonateDecorations := R160
	981	[4519]	CLOSURE  	R160 120 ; R160 := closure(Function #121)
	982	[4519]	MOVE     	R0 R42 ; R0 := R42
	983	[4519]	MOVE     	R0 R41 ; R0 := R41
	984	[4519]	MOVE     	R0 R157 ; R0 := R157
	985	[4519]	MOVE     	R0 R23 ; R0 := R23
	986	[4519]	MOVE     	R0 R117 ; R0 := R117
	987	[4486]	SETGLOBAL	R160 K200 ; TradeItems := R160
	988	[4525]	CLOSURE  	R109 121 ; R109 := closure(Function #122)
	989	[4530]	CLOSURE  	R160 122 ; R160 := closure(Function #123)
	990	[4530]	MOVE     	R0 R109 ; R0 := R109
	991	[4527]	SETGLOBAL	R160 K201 ; SetTitle := R160
	992	[4540]	CLOSURE  	R160 123 ; R160 := closure(Function #124)
	993	[4540]	MOVE     	R0 R77 ; R0 := R77
	994	[4540]	MOVE     	R0 R136 ; R0 := R136
	995	[4532]	SETGLOBAL	R160 K202 ; HideScreenForPlatPurchase := R160
	996	[4544]	CLOSURE  	R160 124 ; R160 := closure(Function #125)
	997	[4544]	MOVE     	R0 R45 ; R0 := R45
	998	[4542]	SETGLOBAL	R160 K203 ; SetCallback := R160
	999	[4548]	CLOSURE  	R160 125 ; R160 := closure(Function #126)
	1000	[4548]	MOVE     	R0 R46 ; R0 := R46
	1001	[4546]	SETGLOBAL	R160 K204 ; SetExtraInfoCallback := R160
	1002	[4548]	RETURN   	R0 1 ; return 


function #1 <?:262,273> (25 instructions, 100 bytes at 000002112DAEC3F0)
1 param, 6 slots, 3 upvalues, 0 locals, 9 constants, 0 functions
	1	[264]	SETUPVAL 	R0 U0 ; U0 := R0
	2	[265]	TEST     	R0 0 ; if not R0 then PC := 7
	3	[265]	JMP      	7 ; PC := 7
	4	[265]	LOADK    	R1 K0 ; R1 := "On"
	5	[265]	TESTSET  	R0 R1 1 ; if R1 then PC := 8 else R0 := R1 
	6	[265]	JMP      	8 ; PC := 8
	7	[265]	LOADK    	R0 K1 ; R0 := "Off"
	8	[266]	GETGLOBAL	R1 K2 ; R1 := 0x38f10e85
	9	[266]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	10	[266]	LOADK    	R3 K4 ; R3 := "Sellable.Toggle.gotoAndStop"
	11	[266]	MOVE     	R4 R0 ; R4 := R0
	12	[266]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	13	[267]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[267]	CALL     	R1 1 1 ; R1()
	15	[270]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[270]	SETTABLE 	R1 K5 K6 ; R1["mMuteGridOpenSound"] := true
	17	[271]	GETUPVAL 	R1 U2 ; R1 := U2
	18	[271]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x71e9ac81]
	19	[271]	LOADNIL  	R3 R3 ; R3 := nil
	20	[271]	OP_LOADBOOL	R4 1 0 ; R4 := true
	21	[271]	OP_LOADBOOL	R5 1 0 ; R5 := true
	22	[271]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	23	[272]	GETUPVAL 	R1 U2 ; R1 := U2
	24	[272]	SETTABLE 	R1 K5 K8 ; R1["mMuteGridOpenSound"] := false
	25	[273]	RETURN   	R0 1 ; return 

function #2 <?:275,277> (5 instructions, 20 bytes at 000002112DAEC670)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[276]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[276]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[276]	NOT      	R1 R1 ; R1 := not R1
	4	[276]	CALL     	R0 2 1 ; R0(R1)
	5	[277]	RETURN   	R0 1 ; return 

function #3 <?:279,281> (14 instructions, 56 bytes at 000002112DAEC760)
0 params, 2 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[280]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[280]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[280]	GETTABLE 	R1 R1 K0 ; R1 := R1["TRADE_ITEMS"]
	4	[280]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 12
	5	[280]	JMP      	12 ; PC := 12
	6	[280]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[280]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[280]	GETTABLE 	R1 R1 K1 ; R1 := R1["TRADE_MODS"]
	9	[280]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 12
	10	[280]	JMP      	12 ; PC := 12
	11	[280]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 12
	12	[280]	OP_LOADBOOL	R0 1 0 ; R0 := true
	13	[280]	RETURN   	R0 2 ; return R0 
	14	[281]	RETURN   	R0 1 ; return 

function #4 <?:283,298> (75 instructions, 300 bytes at 000002112DAEC8C0)
0 params, 11 slots, 7 upvalues, 0 locals, 26 constants, 0 functions
	1	[284]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[285]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[285]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[285]	GETTABLE 	R2 R2 K0 ; R2 := R2["INVENTORY"]
	5	[285]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 39
	6	[285]	JMP      	39 ; PC := 39
	7	[286]	GETGLOBAL	R1 K1 ; R1 := 0x33bdd652
	8	[286]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x23d5322f]
	9	[286]	MOVE     	R2 R0 ; R2 := R0
	10	[286]	NEWTABLE 	R3 0 3 ; R3 := {}
	11	[286]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	12	[286]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x42b04007]
	13	[286]	LOADK    	R6 K6 ; R6 := "<WARNING>"
	14	[286]	OP_LOADBOOL	R7 1 0 ; R7 := true
	15	[286]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	16	[286]	SETTABLE 	R3 K3 R4 ; R3["Label"] := R4
	17	[286]	GETUPVAL 	R4 U2 ; R4 := U2
	18	[286]	GETTABLE 	R4 R4 K8 ; R4 := R4[0xa7d904b8]
	19	[286]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	20	[286]	LOADK    	R6 K9 ; R6 := "/Lotus/Language/WarframeHints/Inventory_"
	21	[286]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	22	[286]	SETTABLE 	R3 K7 R4 ; R3["Tips"] := R4
	23	[286]	SETTABLE 	R3 K10 K11 ; R3["Padding"] := -10.000000
	24	[286]	CALL     	R1 3 1 ; R1(R2,R3)
	25	[287]	GETGLOBAL	R1 K1 ; R1 := 0x33bdd652
	26	[287]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x23d5322f]
	27	[287]	MOVE     	R2 R0 ; R2 := R0
	28	[287]	NEWTABLE 	R3 0 2 ; R3 := {}
	29	[287]	GETUPVAL 	R4 U3 ; R4 := U3
	30	[287]	GETTABLE 	R4 R4 K12 ; R4 := R4[0x06d055f9]
	31	[287]	GETUPVAL 	R5 U4 ; R5 := U4
	32	[287]	LOADK    	R6 K13 ; R6 := "/Lotus/Language/Menu/OnlySellableOn"
	33	[287]	LOADK    	R7 K14 ; R7 := "/Lotus/Language/Menu/OnlySellableOff"
	34	[287]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	35	[287]	SETTABLE 	R3 K3 R4 ; R3["Label"] := R4
	36	[287]	GETUPVAL 	R4 U5 ; R4 := U5
	37	[287]	SETTABLE 	R3 K15 R4 ; R3["CallBack"] := R4
	38	[287]	CALL     	R1 3 1 ; R1(R2,R3)
	39	[289]	GETUPVAL 	R1 U6 ; R1 := U6
	40	[289]	LEN      	R1 R1 ; R1 := # R1
	41	[289]	LOADK    	R2 := 1.000000
	42	[289]	LOADK    	R3 := -1.000000
	43	[289]	FORPREP  	R1 60 ; R1 -= R3; PC := 60
	44	[290]	GETUPVAL 	R5 U6 ; R5 := U6
	45	[290]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	46	[291]	GETTABLE 	R6 R5 K16 ; R6 := R5["mVisible"]
	47	[291]	TEST     	R6 0 ; if not R6 then PC := 60
	48	[291]	JMP      	60 ; PC := 60
	49	[292]	GETGLOBAL	R6 K1 ; R6 := 0x33bdd652
	50	[292]	GETTABLE 	R6 R6 K2 ; R6 := R6[0x23d5322f]
	51	[292]	MOVE     	R7 R0 ; R7 := R0
	52	[292]	NEWTABLE 	R8 0 3 ; R8 := {}
	53	[292]	GETTABLE 	R9 R5 K17 ; R9 := R5["mLabel"]
	54	[292]	SETTABLE 	R8 K3 R9 ; R8["Label"] := R9
	55	[292]	GETTABLE 	R9 R5 K18 ; R9 := R5["mCallback"]
	56	[292]	SETTABLE 	R8 K15 R9 ; R8["CallBack"] := R9
	57	[292]	GETTABLE 	R9 R5 K20 ; R9 := R5["mCallout"]
	58	[292]	SETTABLE 	R8 K19 R9 ; R8["CallOut"] := R9
	59	[292]	CALL     	R6 3 1 ; R6(R7,R8)
	60	[289]	FORLOOP  	R1 44 ; R1 += R3; if R1 <= R2 then begin PC := 44; R4 := R1 end
	61	[295]	GETGLOBAL	R6 K21 ; R6 := 0x7b998233
	62	[295]	GETGLOBAL	R7 K22 ; R7 := _T
	63	[295]	GETTABLE 	R7 R7 K23 ; R7 := R7["SetButtons"]
	64	[295]	CALL     	R6 2 2 ; R6 := R6(R7)
	65	[295]	TEST     	R6 1 ; if R6 then PC := 75
	66	[295]	JMP      	75 ; PC := 75
	67	[296]	GETGLOBAL	R6 K22 ; R6 := _T
	68	[296]	GETTABLE 	R6 R6 K24 ; R6 := R6[0x1c5b546f]
	69	[296]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	70	[296]	MOVE     	R8 R0 ; R8 := R0
	71	[296]	GETGLOBAL	R9 K25 ; R9 := 0xcd0165a3
	72	[296]	LOADK    	R10 := 1.000000
	73	[296]	CALL     	R9 2 0 ; R9,... := R9(R10)
	74	[296]	CALL     	R6 0 1 ; R6(R7,...)
	75	[298]	RETURN   	R0 1 ; return 

function #5 <?:300,388> (262 instructions, 1048 bytes at 000002112DAECE80)
0 params, 6 slots, 10 upvalues, 0 locals, 64 constants, 0 functions
	1	[301]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[301]	SETTABLE 	R0 K1 K2 ; R0["gToolTip"] := nil
	3	[302]	GETGLOBAL	R0 K0 ; R0 := _T
	4	[302]	SETTABLE 	R0 K3 K2 ; R0["InfoPopup_Data"] := nil
	5	[303]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[303]	SETTABLE 	R0 K4 K2 ; R0["SellingPrimeParts"] := nil
	7	[304]	GETGLOBAL	R0 K0 ; R0 := _T
	8	[304]	SETTABLE 	R0 K5 K2 ; R0["SellingTreasure"] := nil
	9	[305]	GETGLOBAL	R0 K0 ; R0 := _T
	10	[305]	SETTABLE 	R0 K6 K2 ; R0["SelectingFishManifest"] := nil
	11	[306]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[306]	SETTABLE 	R0 K7 K2 ; R0["SelectingEnemies"] := nil
	13	[307]	GETGLOBAL	R0 K0 ; R0 := _T
	14	[307]	SETTABLE 	R0 K8 K2 ; R0["SelectingEnemiesManifest"] := nil
	15	[308]	GETGLOBAL	R0 K0 ; R0 := _T
	16	[308]	SETTABLE 	R0 K9 K2 ; R0["ShowPrimeBucks"] := nil
	17	[309]	GETGLOBAL	R0 K0 ; R0 := _T
	18	[309]	SETTABLE 	R0 K10 K2 ; R0["ShowPrimeTokens"] := nil
	19	[310]	GETGLOBAL	R0 K0 ; R0 := _T
	20	[310]	SETTABLE 	R0 K11 K2 ; R0["ShowFusionPoints"] := nil
	21	[311]	GETGLOBAL	R0 K0 ; R0 := _T
	22	[311]	SETTABLE 	R0 K12 K2 ; R0["InvTradingInfo"] := nil
	23	[312]	GETGLOBAL	R0 K0 ; R0 := _T
	24	[312]	SETTABLE 	R0 K13 K2 ; R0["OnNemesisClosed"] := nil
	25	[313]	GETGLOBAL	R0 K0 ; R0 := _T
	26	[313]	SETTABLE 	R0 K14 K15 ; R0["InventoryScreenOpen"] := false
	27	[315]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	28	[315]	GETUPVAL 	R1 U0 ; R1 := U0
	29	[315]	CALL     	R0 2 2 ; R0 := R0(R1)
	30	[315]	TEST     	R0 1 ; if R0 then PC := 108
	31	[315]	JMP      	108 ; PC := 108
	32	[315]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	33	[315]	GETGLOBAL	R1 K17 ; R1 := 0x76ea806b
	34	[315]	CALL     	R0 2 2 ; R0 := R0(R1)
	35	[315]	TEST     	R0 1 ; if R0 then PC := 108
	36	[315]	JMP      	108 ; PC := 108
	37	[316]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	38	[316]	GETGLOBAL	R1 K0 ; R1 := _T
	39	[316]	GETTABLE 	R1 R1 K18 ; R1 := R1["SelectedEnemyLevel"]
	40	[316]	CALL     	R0 2 2 ; R0 := R0(R1)
	41	[316]	TEST     	R0 1 ; if R0 then PC := 50
	42	[316]	JMP      	50 ; PC := 50
	43	[317]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[317]	SELF     	R0 R0 K19 ; R1 := R0; R0 := R0[0xf2cd5d8b]
	45	[317]	GETGLOBAL	R2 K20 ; R2 := 0x64fb1586
	46	[317]	GETGLOBAL	R3 K0 ; R3 := _T
	47	[317]	GETTABLE 	R3 R3 K18 ; R3 := R3["SelectedEnemyLevel"]
	48	[317]	CALL     	R2 2 0 ; R2,... := R2(R3)
	49	[317]	CALL     	R0 0 1 ; R0(R1,...)
	50	[319]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	51	[319]	GETGLOBAL	R1 K0 ; R1 := _T
	52	[319]	GETTABLE 	R1 R1 K21 ; R1 := R1["PauseAI"]
	53	[319]	CALL     	R0 2 2 ; R0 := R0(R1)
	54	[319]	TEST     	R0 1 ; if R0 then PC := 61
	55	[319]	JMP      	61 ; PC := 61
	56	[320]	GETUPVAL 	R0 U0 ; R0 := U0
	57	[320]	SELF     	R0 R0 K22 ; R1 := R0; R0 := R0[0xd65237e4]
	58	[320]	GETGLOBAL	R2 K0 ; R2 := _T
	59	[320]	GETTABLE 	R2 R2 K21 ; R2 := R2["PauseAI"]
	60	[320]	CALL     	R0 3 1 ; R0(R1,R2)
	61	[322]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	62	[322]	GETGLOBAL	R1 K0 ; R1 := _T
	63	[322]	GETTABLE 	R1 R1 K23 ; R1 := R1["warframesInvincible"]
	64	[322]	CALL     	R0 2 2 ; R0 := R0(R1)
	65	[322]	TEST     	R0 1 ; if R0 then PC := 73
	66	[322]	JMP      	73 ; PC := 73
	67	[323]	GETUPVAL 	R0 U0 ; R0 := U0
	68	[323]	SELF     	R0 R0 K24 ; R1 := R0; R0 := R0[0x672b1d32]
	69	[323]	GETGLOBAL	R2 K0 ; R2 := _T
	70	[323]	GETTABLE 	R2 R2 K23 ; R2 := R2["warframesInvincible"]
	71	[323]	CALL     	R0 3 1 ; R0(R1,R2)
	72	[323]	JMP      	77 ; PC := 77
	73	[325]	GETUPVAL 	R0 U0 ; R0 := U0
	74	[325]	SELF     	R0 R0 K24 ; R1 := R0; R0 := R0[0x672b1d32]
	75	[325]	OP_LOADBOOL	R2 0 0 ; R2 := false
	76	[325]	CALL     	R0 3 1 ; R0(R1,R2)
	77	[327]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	78	[327]	GETGLOBAL	R1 K0 ; R1 := _T
	79	[327]	GETTABLE 	R1 R1 K25 ; R1 := R1["companionsInvincible"]
	80	[327]	CALL     	R0 2 2 ; R0 := R0(R1)
	81	[327]	TEST     	R0 1 ; if R0 then PC := 89
	82	[327]	JMP      	89 ; PC := 89
	83	[328]	GETUPVAL 	R0 U0 ; R0 := U0
	84	[328]	SELF     	R0 R0 K26 ; R1 := R0; R0 := R0[0x5c71a80b]
	85	[328]	GETGLOBAL	R2 K0 ; R2 := _T
	86	[328]	GETTABLE 	R2 R2 K25 ; R2 := R2["companionsInvincible"]
	87	[328]	CALL     	R0 3 1 ; R0(R1,R2)
	88	[328]	JMP      	93 ; PC := 93
	89	[330]	GETUPVAL 	R0 U0 ; R0 := U0
	90	[330]	SELF     	R0 R0 K26 ; R1 := R0; R0 := R0[0x5c71a80b]
	91	[330]	OP_LOADBOOL	R2 0 0 ; R2 := false
	92	[330]	CALL     	R0 3 1 ; R0(R1,R2)
	93	[332]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	94	[332]	GETGLOBAL	R1 K0 ; R1 := _T
	95	[332]	GETTABLE 	R1 R1 K27 ; R1 := R1["FriendlyFire"]
	96	[332]	CALL     	R0 2 2 ; R0 := R0(R1)
	97	[332]	TEST     	R0 1 ; if R0 then PC := 104
	98	[332]	JMP      	104 ; PC := 104
	99	[333]	GETUPVAL 	R0 U0 ; R0 := U0
	100	[333]	SELF     	R0 R0 K28 ; R1 := R0; R0 := R0[0xa0cdbd7f]
	101	[333]	GETGLOBAL	R2 K0 ; R2 := _T
	102	[333]	GETTABLE 	R2 R2 K27 ; R2 := R2["FriendlyFire"]
	103	[333]	CALL     	R0 3 1 ; R0(R1,R2)
	104	[335]	GETGLOBAL	R0 K17 ; R0 := 0x76ea806b
	105	[335]	SELF     	R0 R0 K29 ; R1 := R0; R0 := R0[0x524772b5]
	106	[335]	LOADK    	R2 := 0.000000
	107	[335]	CALL     	R0 3 1 ; R0(R1,R2)
	108	[338]	GETUPVAL 	R0 U1 ; R0 := U1
	109	[338]	GETTABLE 	R0 R0 K30 ; R0 := R0["PauseState"]
	110	[338]	TEST     	R0 1 ; if R0 then PC := 121
	111	[338]	JMP      	121 ; PC := 121
	112	[338]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	113	[338]	GETGLOBAL	R1 K31 ; R1 := 0xbe190284
	114	[338]	CALL     	R0 2 2 ; R0 := R0(R1)
	115	[338]	TEST     	R0 1 ; if R0 then PC := 121
	116	[338]	JMP      	121 ; PC := 121
	117	[339]	GETGLOBAL	R0 K31 ; R0 := 0xbe190284
	118	[339]	SELF     	R0 R0 K32 ; R1 := R0; R0 := R0[0xc02f2cb8]
	119	[339]	OP_LOADBOOL	R2 0 0 ; R2 := false
	120	[339]	CALL     	R0 3 1 ; R0(R1,R2)
	121	[342]	GETUPVAL 	R0 U2 ; R0 := U2
	122	[342]	GETUPVAL 	R1 U3 ; R1 := U3
	123	[342]	GETTABLE 	R1 R1 K33 ; R1 := R1["SHIP_SCRAP"]
	124	[342]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 132
	125	[342]	JMP      	132 ; PC := 132
	126	[343]	GETUPVAL 	R0 U4 ; R0 := U4
	127	[343]	GETTABLE 	R0 R0 K34 ; R0 := R0[0x37d68e16]
	128	[343]	OP_LOADBOOL	R1 1 0 ; R1 := true
	129	[343]	GETUPVAL 	R2 U1 ; R2 := U1
	130	[343]	GETTABLE 	R2 R2 K35 ; R2 := R2["ScreenVis"]
	131	[343]	CALL     	R0 3 1 ; R0(R1,R2)
	132	[346]	GETUPVAL 	R0 U2 ; R0 := U2
	133	[346]	GETUPVAL 	R1 U3 ; R1 := U3
	134	[346]	GETTABLE 	R1 R1 K36 ; R1 := R1["TREASURE"]
	135	[346]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 153
	136	[346]	JMP      	153 ; PC := 153
	137	[346]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	138	[346]	GETGLOBAL	R1 K0 ; R1 := _T
	139	[346]	GETTABLE 	R1 R1 K37 ; R1 := R1["PlayBackgroundTransmission"]
	140	[346]	CALL     	R0 2 2 ; R0 := R0(R1)
	141	[346]	TEST     	R0 1 ; if R0 then PC := 153
	142	[346]	JMP      	153 ; PC := 153
	143	[347]	GETGLOBAL	R0 K0 ; R0 := _T
	144	[347]	GETGLOBAL	R1 K0 ; R1 := _T
	145	[347]	GETTABLE 	R1 R1 K39 ; R1 := R1["MarooDeco"]
	146	[347]	SETTABLE 	R0 K38 R1 ; R0["LypSyncDeco"] := R1
	147	[348]	GETGLOBAL	R0 K0 ; R0 := _T
	148	[348]	GETTABLE 	R0 R0 K40 ; R0 := R0[0xc7848588]
	149	[348]	LOADK    	R1 K41 ; R1 := "TransactionComplete"
	150	[348]	GETGLOBAL	R2 K42 ; R2 := 0xe91d7466
	151	[348]	LOADK    	R3 := 3.000000
	152	[348]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	153	[351]	GETGLOBAL	R0 K0 ; R0 := _T
	154	[351]	SETTABLE 	R0 K39 K2 ; R0["MarooDeco"] := nil
	155	[353]	GETUPVAL 	R0 U5 ; R0 := U5
	156	[353]	GETTABLE 	R0 R0 K43 ; R0 := R0[0x9e3d3434]
	157	[353]	OP_LOADBOOL	R1 0 0 ; R1 := false
	158	[353]	CALL     	R0 2 1 ; R0(R1)
	159	[354]	GETUPVAL 	R0 U2 ; R0 := U2
	160	[354]	GETUPVAL 	R1 U3 ; R1 := U3
	161	[354]	GETTABLE 	R1 R1 K44 ; R1 := R1["TRADE_MODS"]
	162	[354]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 167
	163	[354]	JMP      	167 ; PC := 167
	164	[355]	GETUPVAL 	R0 U4 ; R0 := U4
	165	[355]	GETTABLE 	R0 R0 K45 ; R0 := R0[0xc4b927cd]
	166	[355]	CALL     	R0 1 1 ; R0()
	167	[358]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	168	[358]	GETUPVAL 	R1 U6 ; R1 := U6
	169	[358]	CALL     	R0 2 2 ; R0 := R0(R1)
	170	[358]	TEST     	R0 1 ; if R0 then PC := 193
	171	[358]	JMP      	193 ; PC := 193
	172	[359]	GETUPVAL 	R0 U6 ; R0 := U6
	173	[359]	SELF     	R0 R0 K46 ; R1 := R0; R0 := R0[0xc32ccf2e]
	174	[359]	CALL     	R0 2 2 ; R0 := R0(R1)
	175	[360]	GETGLOBAL	R1 K16 ; R1 := 0x7b998233
	176	[360]	MOVE     	R2 R0 ; R2 := R0
	177	[360]	CALL     	R1 2 2 ; R1 := R1(R2)
	178	[360]	TEST     	R1 1 ; if R1 then PC := 193
	179	[360]	JMP      	193 ; PC := 193
	180	[360]	GETGLOBAL	R1 K16 ; R1 := 0x7b998233
	181	[360]	GETUPVAL 	R2 U7 ; R2 := U7
	182	[360]	CALL     	R1 2 2 ; R1 := R1(R2)
	183	[360]	TEST     	R1 1 ; if R1 then PC := 193
	184	[360]	JMP      	193 ; PC := 193
	185	[361]	GETGLOBAL	R1 K47 ; R1 := 0xae91e43b
	186	[361]	SELF     	R1 R1 K48 ; R2 := R1; R1 := R1[0x492f9da2]
	187	[361]	CALL     	R1 2 2 ; R1 := R1(R2)
	188	[362]	GETUPVAL 	R2 U7 ; R2 := U7
	189	[362]	SELF     	R2 R2 K49 ; R3 := R2; R2 := R2[0x7855ea52]
	190	[362]	MOVE     	R4 R1 ; R4 := R1
	191	[362]	MOVE     	R5 R0 ; R5 := R0
	192	[362]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	193	[366]	GETUPVAL 	R2 U5 ; R2 := U5
	194	[366]	GETTABLE 	R2 R2 K50 ; R2 := R2[0x6ef45ebc]
	195	[366]	CALL     	R2 1 2 ; R2 := R2()
	196	[367]	GETGLOBAL	R3 K16 ; R3 := 0x7b998233
	197	[367]	MOVE     	R4 R2 ; R4 := R2
	198	[367]	CALL     	R3 2 2 ; R3 := R3(R4)
	199	[367]	TEST     	R3 1 ; if R3 then PC := 211
	200	[367]	JMP      	211 ; PC := 211
	201	[368]	SELF     	R3 R2 K51 ; R4 := R2; R3 := R2[0x768274d6]
	202	[368]	OP_LOADBOOL	R5 1 0 ; R5 := true
	203	[368]	CALL     	R3 3 1 ; R3(R4,R5)
	204	[369]	GETUPVAL 	R3 U1 ; R3 := U1
	205	[369]	GETTABLE 	R3 R3 K52 ; R3 := R3["AvatarDrawOnTop"]
	206	[369]	TEST     	R3 0 ; if not R3 then PC := 211
	207	[369]	JMP      	211 ; PC := 211
	208	[370]	SELF     	R3 R2 K53 ; R4 := R2; R3 := R2[0x044b7be8]
	209	[370]	OP_LOADBOOL	R5 1 0 ; R5 := true
	210	[370]	CALL     	R3 3 1 ; R3(R4,R5)
	211	[374]	GETUPVAL 	R3 U8 ; R3 := U8
	212	[374]	CALL     	R3 1 1 ; R3()
	213	[376]	GETGLOBAL	R3 K16 ; R3 := 0x7b998233
	214	[376]	GETGLOBAL	R4 K0 ; R4 := _T
	215	[376]	GETTABLE 	R4 R4 K54 ; R4 := R4["SetSquadOverlayTitle"]
	216	[376]	CALL     	R3 2 2 ; R3 := R3(R4)
	217	[376]	TEST     	R3 1 ; if R3 then PC := 222
	218	[376]	JMP      	222 ; PC := 222
	219	[377]	GETGLOBAL	R3 K0 ; R3 := _T
	220	[377]	GETTABLE 	R3 R3 K55 ; R3 := R3[0xdf29a9d6]
	221	[377]	CALL     	R3 1 1 ; R3()
	222	[380]	GETGLOBAL	R3 K16 ; R3 := 0x7b998233
	223	[380]	GETUPVAL 	R4 U9 ; R4 := U9
	224	[380]	CALL     	R3 2 2 ; R3 := R3(R4)
	225	[380]	TEST     	R3 1 ; if R3 then PC := 230
	226	[380]	JMP      	230 ; PC := 230
	227	[381]	GETUPVAL 	R3 U9 ; R3 := U9
	228	[381]	SELF     	R3 R3 K56 ; R4 := R3; R3 := R3[0x32302b4a]
	229	[381]	CALL     	R3 2 1 ; R3(R4)
	230	[384]	GETGLOBAL	R3 K16 ; R3 := 0x7b998233
	231	[384]	GETGLOBAL	R4 K31 ; R4 := 0xbe190284
	232	[384]	CALL     	R3 2 2 ; R3 := R3(R4)
	233	[384]	TEST     	R3 1 ; if R3 then PC := 262
	234	[384]	JMP      	262 ; PC := 262
	235	[384]	GETGLOBAL	R3 K16 ; R3 := 0x7b998233
	236	[384]	GETGLOBAL	R4 K57 ; R4 := 0x89326c93
	237	[384]	CALL     	R3 2 2 ; R3 := R3(R4)
	238	[384]	TEST     	R3 1 ; if R3 then PC := 262
	239	[384]	JMP      	262 ; PC := 262
	240	[384]	GETGLOBAL	R3 K31 ; R3 := 0xbe190284
	241	[384]	SELF     	R3 R3 K58 ; R4 := R3; R3 := R3[0xf2deaf69]
	242	[384]	GETGLOBAL	R5 K59 ; R5 := gLotusPhotoBoothGameRulesType
	243	[384]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	244	[384]	TEST     	R3 0 ; if not R3 then PC := 262
	245	[384]	JMP      	262 ; PC := 262
	246	[384]	GETGLOBAL	R3 K57 ; R3 := 0x89326c93
	247	[384]	SELF     	R3 R3 K60 ; R4 := R3; R3 := R3[0x18d05d30]
	248	[384]	CALL     	R3 2 2 ; R3 := R3(R4)
	249	[384]	TEST     	R3 0 ; if not R3 then PC := 262
	250	[384]	JMP      	262 ; PC := 262
	251	[384]	GETGLOBAL	R3 K31 ; R3 := 0xbe190284
	252	[384]	SELF     	R3 R3 K61 ; R4 := R3; R3 := R3[0x0af64c14]
	253	[384]	CALL     	R3 2 2 ; R3 := R3(R4)
	254	[384]	TEST     	R3 0 ; if not R3 then PC := 262
	255	[384]	JMP      	262 ; PC := 262
	256	[385]	GETGLOBAL	R3 K31 ; R3 := 0xbe190284
	257	[385]	SELF     	R3 R3 K62 ; R4 := R3; R3 := R3[0x637cff9e]
	258	[385]	CALL     	R3 2 1 ; R3(R4)
	259	[386]	GETGLOBAL	R3 K31 ; R3 := 0xbe190284
	260	[386]	SELF     	R3 R3 K63 ; R4 := R3; R3 := R3[0x41490abb]
	261	[386]	CALL     	R3 2 1 ; R3(R4)
	262	[388]	RETURN   	R0 1 ; return 

function #6 <?:390,398> (20 instructions, 80 bytes at 000002112DAEDE10)
0 params, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[391]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[391]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[391]	LOADK    	R2 := 0.000000
	4	[391]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[392]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[392]	MOVE     	R2 R0 ; R2 := R0
	7	[392]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[392]	TEST     	R1 1 ; if R1 then PC := 20
	9	[392]	JMP      	20 ; PC := 20
	10	[393]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x40e9c32b]
	11	[393]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[394]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	13	[394]	MOVE     	R3 R1 ; R3 := R1
	14	[394]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[394]	TEST     	R2 1 ; if R2 then PC := 20
	16	[394]	JMP      	20 ; PC := 20
	17	[395]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x35250910]
	18	[395]	GETUPVAL 	R4 U0 ; R4 := U0
	19	[395]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[398]	RETURN   	R0 1 ; return 

function #7 <?:400,414> (27 instructions, 108 bytes at 000002112DAEDFC0)
0 params, 2 slots, 3 upvalues, 0 locals, 6 constants, 0 functions
	1	[401]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[401]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[401]	JMP      	5 ; PC := 5
	4	[402]	RETURN   	R0 1 ; return 
	5	[405]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[405]	TEST     	R0 0 ; if not R0 then PC := 11
	7	[405]	JMP      	11 ; PC := 11
	8	[406]	GETGLOBAL	R0 K0 ; R0 := _T
	9	[406]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x80172c74]
	10	[406]	CALL     	R0 1 1 ; R0()
	11	[409]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	12	[409]	GETGLOBAL	R1 K0 ; R1 := _T
	13	[409]	GETTABLE 	R1 R1 K3 ; R1 := R1["HideBackground"]
	14	[409]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[409]	TEST     	R0 1 ; if R0 then PC := 25
	16	[409]	JMP      	25 ; PC := 25
	17	[409]	GETUPVAL 	R0 U2 ; R0 := U2
	18	[409]	CALL     	R0 1 2 ; R0 := R0()
	19	[409]	TEST     	R0 1 ; if R0 then PC := 25
	20	[409]	JMP      	25 ; PC := 25
	21	[410]	GETGLOBAL	R0 K0 ; R0 := _T
	22	[410]	GETTABLE 	R0 R0 K4 ; R0 := R0[0x6d147816]
	23	[410]	LOADK    	R1 K5 ; R1 := 0.200000
	24	[410]	CALL     	R0 2 1 ; R0(R1)
	25	[413]	OP_LOADBOOL	R0 1 0 ; R0 := true
	26	[413]	SETUPVAL 	R0 U0 ; U0 := R0
	27	[414]	RETURN   	R0 1 ; return 

function #8 <?:416,441> (75 instructions, 300 bytes at 000002112DAEE1C0)
0 params, 10 slots, 7 upvalues, 0 locals, 19 constants, 1 function
	1	[417]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[417]	CALL     	R0 1 1 ; R0()
	3	[419]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[419]	GETUPVAL 	R1 U2 ; R1 := U2
	5	[419]	GETTABLE 	R1 R1 K0 ; R1 := R1["PRIMEPARTS"]
	6	[419]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 17
	7	[419]	JMP      	17 ; PC := 17
	8	[419]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	9	[419]	GETGLOBAL	R1 K2 ; R1 := _T
	10	[419]	GETTABLE 	R1 R1 K3 ; R1 := R1["InterruptVoidTraderTransmission"]
	11	[419]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[419]	TEST     	R0 1 ; if R0 then PC := 17
	13	[419]	JMP      	17 ; PC := 17
	14	[420]	GETGLOBAL	R0 K2 ; R0 := _T
	15	[420]	GETTABLE 	R0 R0 K4 ; R0 := R0[0x790bad73]
	16	[420]	CALL     	R0 1 1 ; R0()
	17	[423]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	18	[423]	GETGLOBAL	R1 K5 ; R1 := 0x76ea806b
	19	[423]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x3f3ae64c]
	20	[423]	LOADK    	R3 := 0.000000
	21	[423]	CALL     	R1 3 0 ; R1,... := R1(R2,R3)
	22	[423]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	23	[423]	TEST     	R0 1 ; if R0 then PC := 43
	24	[423]	JMP      	43 ; PC := 43
	25	[423]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	26	[423]	GETGLOBAL	R1 K5 ; R1 := 0x76ea806b
	27	[423]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x3f3ae64c]
	28	[423]	LOADK    	R3 := 0.000000
	29	[423]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	30	[423]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x80563238]
	31	[423]	CALL     	R1 2 0 ; R1,... := R1(R2)
	32	[423]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	33	[423]	TEST     	R0 1 ; if R0 then PC := 43
	34	[423]	JMP      	43 ; PC := 43
	35	[424]	GETGLOBAL	R0 K5 ; R0 := 0x76ea806b
	36	[424]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x3f3ae64c]
	37	[424]	LOADK    	R2 := 0.000000
	38	[424]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	39	[424]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x80563238]
	40	[424]	CALL     	R0 2 2 ; R0 := R0(R1)
	41	[424]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xc0f749c1]
	42	[424]	CALL     	R0 2 1 ; R0(R1)
	43	[426]	OP_LOADBOOL	R0 1 0 ; R0 := true
	44	[426]	SETUPVAL 	R0 U3 ; U3 := R0
	45	[427]	LOADK    	R0 := 0.000000
	46	[428]	GETGLOBAL	R1 K9 ; R1 := 0x9ba7909f
	47	[428]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xbcfb64ab]
	48	[428]	GETGLOBAL	R3 K11 ; R3 := 0x8c2d7fcb
	49	[428]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	50	[428]	EQ       	0 R1 K12 ; if R1 ~= nil then PC := 53
	51	[428]	JMP      	53 ; PC := 53
	52	[429]	LOADK    	R0 K13 ; R0 := 0.200000
	53	[431]	GETUPVAL 	R1 U4 ; R1 := U4
	54	[431]	GETTABLE 	R1 R1 K14 ; R1 := R1[0x4c232afc]
	55	[431]	GETGLOBAL	R2 K15 ; R2 := 0xae91e43b
	56	[431]	LOADK    	R3 := 0.000000
	57	[431]	MOVE     	R4 R0 ; R4 := R0
	58	[431]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	59	[432]	GETGLOBAL	R1 K16 ; R1 := 0x25312c9b
	60	[432]	GETGLOBAL	R2 K15 ; R2 := 0xae91e43b
	61	[432]	LOADK    	R3 K17 ; R3 := "_root"
	62	[432]	LOADK    	R4 := 0.000000
	63	[432]	NEWTABLE 	R5 1 0 ; R5 := {}
	64	[432]	LOADK    	R6 := 10.000000
	65	[432]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	66	[432]	NEWTABLE 	R6 1 0 ; R6 := {}
	67	[432]	LOADK    	R7 := 0.000000
	68	[432]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	69	[432]	MOVE     	R7 R0 ; R7 := R0
	70	[432]	LOADK    	R8 := 0.000000
	71	[440]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	72	[440]	GETUPVAL 	R0 U5 ; R0 := U5
	73	[440]	GETUPVAL 	R0 U6 ; R0 := U6
	74	[432]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	75	[441]	RETURN   	R0 1 ; return 

function #9 <?:443,444> (1 instruction, 4 bytes at 000002112DAEE820)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[444]	RETURN   	R0 1 ; return 

function #10 <?:446,453> (17 instructions, 68 bytes at 000002112DAEE8F0)
2 params, 4 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[447]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[447]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x8fbd62e4]
	3	[447]	LOADK    	R3 K1 ; R3 := "OnUpdateSessionSettings"
	4	[447]	CALL     	R2 2 1 ; R2(R3)
	5	[448]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[448]	EQ       	1 R2 K2 ; if R2 == nil then PC := 15
	7	[448]	JMP      	15 ; PC := 15
	8	[449]	GETGLOBAL	R2 K3 ; R2 := _T
	9	[449]	GETUPVAL 	R3 U1 ; R3 := U1
	10	[449]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	11	[449]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[449]	CALL     	R2 2 1 ; R2(R3)
	13	[450]	LOADNIL  	R2 R2 ; R2 := nil
	14	[450]	SETUPVAL 	R2 U1 ; U1 := R2
	15	[452]	GETUPVAL 	R2 U2 ; R2 := U2
	16	[452]	CALL     	R2 1 1 ; R2()
	17	[453]	RETURN   	R0 1 ; return 

function #11 <?:455,477> (58 instructions, 232 bytes at 000002112DAEEA90)
0 params, 6 slots, 7 upvalues, 0 locals, 16 constants, 0 functions
	1	[456]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[456]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[457]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[457]	GETUPVAL 	R1 U2 ; R1 := U2
	5	[457]	GETTABLE 	R1 R1 K0 ; R1 := R1["SYNDDONATE"]
	6	[457]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 45
	7	[457]	JMP      	45 ; PC := 45
	8	[457]	GETUPVAL 	R0 U3 ; R0 := U3
	9	[457]	GETTABLE 	R0 R0 K1 ; R0 := R0["MadeTrade"]
	10	[457]	TEST     	R0 1 ; if R0 then PC := 45
	11	[457]	JMP      	45 ; PC := 45
	12	[458]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	13	[458]	GETGLOBAL	R1 K3 ; R1 := _T
	14	[458]	GETTABLE 	R1 R1 K4 ; R1 := R1["SyndicateInvInfo"]
	15	[458]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[458]	TEST     	R0 1 ; if R0 then PC := 45
	17	[458]	JMP      	45 ; PC := 45
	18	[458]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	19	[458]	GETGLOBAL	R1 K3 ; R1 := _T
	20	[458]	GETTABLE 	R1 R1 K4 ; R1 := R1["SyndicateInvInfo"]
	21	[458]	GETTABLE 	R1 R1 K5 ; R1 := R1["Syndicate"]
	22	[458]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[458]	TEST     	R0 1 ; if R0 then PC := 45
	24	[458]	JMP      	45 ; PC := 45
	25	[459]	GETGLOBAL	R0 K3 ; R0 := _T
	26	[459]	GETTABLE 	R0 R0 K4 ; R0 := R0["SyndicateInvInfo"]
	27	[459]	GETTABLE 	R0 R0 K6 ; R0 := R0["VendorTag"]
	28	[460]	EQ       	1 R0 K7 ; if R0 == nil then PC := 45
	29	[460]	JMP      	45 ; PC := 45
	30	[461]	LOADK    	R1 K8 ; R1 := "DogTagExitNoSale"
	31	[462]	GETGLOBAL	R2 K9 ; R2 := EMPTY_SYMBOL
	32	[462]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 38
	33	[462]	JMP      	38 ; PC := 38
	34	[463]	MOVE     	R2 R1 ; R2 := R1
	35	[463]	SELF     	R3 R0 K10 ; R4 := R0; R3 := R0[0x6d604ba7]
	36	[463]	CALL     	R3 2 2 ; R3 := R3(R4)
	37	[463]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	38	[466]	GETUPVAL 	R2 U4 ; R2 := U4
	39	[466]	GETTABLE 	R2 R2 K11 ; R2 := R2[0xf245b012]
	40	[466]	GETGLOBAL	R3 K3 ; R3 := _T
	41	[466]	GETTABLE 	R3 R3 K4 ; R3 := R3["SyndicateInvInfo"]
	42	[466]	GETTABLE 	R3 R3 K5 ; R3 := R3["Syndicate"]
	43	[466]	MOVE     	R4 R1 ; R4 := R1
	44	[466]	CALL     	R2 3 1 ; R2(R3,R4)
	45	[471]	GETUPVAL 	R2 U5 ; R2 := U5
	46	[471]	TEST     	R2 0 ; if not R2 then PC := 51
	47	[471]	JMP      	51 ; PC := 51
	48	[472]	OP_LOADBOOL	R2 0 0 ; R2 := false
	49	[472]	SETUPVAL 	R2 U5 ; U5 := R2
	50	[472]	JMP      	53 ; PC := 53
	51	[474]	GETUPVAL 	R2 U6 ; R2 := U6
	52	[474]	CALL     	R2 1 1 ; R2()
	53	[476]	GETGLOBAL	R2 K12 ; R2 := 0x9ba7909f
	54	[476]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x7e17ae26]
	55	[476]	LOADK    	R4 K14 ; R4 := "DisplayInWorldText"
	56	[476]	LOADK    	R5 K15 ; R5 := "true"
	57	[476]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	58	[477]	RETURN   	R0 1 ; return 

function #12 <?:479,481> (3 instructions, 12 bytes at 000002112DAEEEB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[480]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[480]	CALL     	R0 1 1 ; R0()
	3	[481]	RETURN   	R0 1 ; return 

function #13 <?:483,497> (53 instructions, 212 bytes at 000002112DAEEF80)
1 param, 5 slots, 4 upvalues, 0 locals, 19 constants, 0 functions
	1	[484]	TEST     	R0 1 ; if R0 then PC := 20
	2	[484]	JMP      	20 ; PC := 20
	3	[484]	GETGLOBAL	R1 K0 ; R1 := _T
	4	[484]	GETTABLE 	R1 R1 K1 ; R1 := R1["InventoryInfo"]
	5	[484]	EQ       	1 R1 K2 ; if R1 == nil then PC := 20
	6	[484]	JMP      	20 ; PC := 20
	7	[484]	GETGLOBAL	R1 K0 ; R1 := _T
	8	[484]	GETTABLE 	R1 R1 K1 ; R1 := R1["InventoryInfo"]
	9	[484]	GETTABLE 	R1 R1 K3 ; R1 := R1["CancelConfirm"]
	10	[484]	EQ       	1 R1 K2 ; if R1 == nil then PC := 20
	11	[484]	JMP      	20 ; PC := 20
	12	[485]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[485]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xdedfded7]
	14	[485]	GETGLOBAL	R2 K0 ; R2 := _T
	15	[485]	GETTABLE 	R2 R2 K1 ; R2 := R2["InventoryInfo"]
	16	[485]	GETTABLE 	R2 R2 K3 ; R2 := R2["CancelConfirm"]
	17	[485]	LOADK    	R3 K5 ; R3 := "OnExitScreenConfirm"
	18	[485]	CALL     	R1 3 1 ; R1(R2,R3)
	19	[487]	RETURN   	R0 1 ; return 
	20	[490]	GETUPVAL 	R1 U0 ; R1 := U0
	21	[490]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x659d451f]
	22	[490]	GETGLOBAL	R2 K7 ; R2 := 0x0032441c
	23	[490]	GETTABLE 	R2 R2 K8 ; R2 := R2["UISound_GridOpenTwo"]
	24	[490]	CALL     	R1 2 1 ; R1(R2)
	25	[491]	GETUPVAL 	R1 U0 ; R1 := U0
	26	[491]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x659d451f]
	27	[491]	GETGLOBAL	R2 K7 ; R2 := 0x0032441c
	28	[491]	GETTABLE 	R2 R2 K9 ; R2 := R2["UISound_WindowClose"]
	29	[491]	CALL     	R1 2 1 ; R1(R2)
	30	[492]	GETUPVAL 	R1 U1 ; R1 := U1
	31	[492]	CALL     	R1 1 1 ; R1()
	32	[494]	GETGLOBAL	R1 K10 ; R1 := 0xcb79539e
	33	[494]	EQ       	1 R1 K2 ; if R1 == nil then PC := 53
	34	[494]	JMP      	53 ; PC := 53
	35	[494]	GETGLOBAL	R1 K11 ; R1 := 0xbe190284
	36	[494]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xf2deaf69]
	37	[494]	GETGLOBAL	R3 K13 ; R3 := gLotusAttractModeGameRulesType
	38	[494]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	39	[494]	TEST     	R1 0 ; if not R1 then PC := 53
	40	[494]	JMP      	53 ; PC := 53
	41	[494]	GETUPVAL 	R1 U2 ; R1 := U2
	42	[494]	GETUPVAL 	R2 U3 ; R2 := U3
	43	[494]	GETTABLE 	R2 R2 K14 ; R2 := R2["INVENTORY"]
	44	[494]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 53
	45	[494]	JMP      	53 ; PC := 53
	46	[495]	GETGLOBAL	R1 K10 ; R1 := 0xcb79539e
	47	[495]	SELF     	R1 R1 K15 ; R2 := R1; R1 := R1[0xa9188a47]
	48	[495]	GETGLOBAL	R3 K16 ; R3 := 0x0469f296
	49	[495]	LOADK    	R4 K17 ; R4 := "IN_SHIP_VIEW_TIME"
	50	[495]	CALL     	R3 2 2 ; R3 := R3(R4)
	51	[495]	LOADK    	R4 K18 ; R4 := "EQUIPMENT_INVENTORY"
	52	[495]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	53	[497]	RETURN   	R0 1 ; return 

function #14 <?:499,503> (9 instructions, 36 bytes at 000002112DAEF3F0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[500]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[500]	MOVE     	R2 R0 ; R2 := R0
	3	[500]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[500]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 9
	5	[500]	JMP      	9 ; PC := 9
	6	[501]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[501]	OP_LOADBOOL	R2 1 0 ; R2 := true
	8	[501]	CALL     	R1 2 1 ; R1(R2)
	9	[503]	RETURN   	R0 1 ; return 

function #15 <?:505,507> (3 instructions, 12 bytes at 000002112DAEF540)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[506]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[506]	CALL     	R0 1 1 ; R0()
	3	[507]	RETURN   	R0 1 ; return 

function #16 <?:509,525> (63 instructions, 252 bytes at 000002112DAEF610)
0 params, 11 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[510]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[510]	GETTABLE 	R0 R0 K0 ; R0 := R0["mElements"]
	3	[510]	LEN      	R0 R0 ; R0 := # R0
	4	[510]	LT       	1 K1 R0 ; if 0.000000 < R0 then PC := 7
	5	[510]	JMP      	7 ; PC := 7
	6	[510]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[510]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[511]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	9	[511]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaade900e]
	10	[511]	LOADK    	R3 K4 ; R3 := "SellList.Tip"
	11	[511]	LOADK    	R4 := 11.000000
	12	[511]	NOT      	R5 R0 ; R5 := not R0
	13	[511]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	14	[512]	TEST     	R0 0 ; if not R0 then PC := 54
	15	[512]	JMP      	54 ; PC := 54
	16	[512]	GETGLOBAL	R1 K5 ; R1 := _T
	17	[512]	GETTABLE 	R1 R1 K6 ; R1 := R1["InventoryInfo"]
	18	[512]	EQ       	1 R1 K7 ; if R1 == nil then PC := 54
	19	[512]	JMP      	54 ; PC := 54
	20	[512]	GETGLOBAL	R1 K5 ; R1 := _T
	21	[512]	GETTABLE 	R1 R1 K6 ; R1 := R1["InventoryInfo"]
	22	[512]	GETTABLE 	R1 R1 K8 ; R1 := R1["MinSellAmount"]
	23	[512]	EQ       	1 R1 K7 ; if R1 == nil then PC := 54
	24	[512]	JMP      	54 ; PC := 54
	25	[513]	LOADK    	R1 := 0.000000
	26	[514]	LOADK    	R2 := 1.000000
	27	[514]	GETUPVAL 	R3 U0 ; R3 := U0
	28	[514]	GETTABLE 	R3 R3 K0 ; R3 := R3["mElements"]
	29	[514]	LEN      	R3 R3 ; R3 := # R3
	30	[514]	LOADK    	R4 := 1.000000
	31	[514]	FORPREP  	R2 46 ; R2 -= R4; PC := 46
	32	[515]	GETUPVAL 	R6 U0 ; R6 := U0
	33	[515]	GETTABLE 	R6 R6 K0 ; R6 := R6["mElements"]
	34	[515]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	35	[516]	GETUPVAL 	R7 U1 ; R7 := U1
	36	[516]	GETTABLE 	R7 R7 K9 ; R7 := R7[0x06d055f9]
	37	[516]	GETTABLE 	R8 R6 K10 ; R8 := R6["Count"]
	38	[516]	EQ       	0 R8 K7 ; if R8 ~= nil then PC := 41
	39	[516]	JMP      	41 ; PC := 41
	40	[516]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 41
	41	[516]	OP_LOADBOOL	R8 1 0 ; R8 := true
	42	[516]	GETTABLE 	R9 R6 K10 ; R9 := R6["Count"]
	43	[516]	LOADK    	R10 := 1.000000
	44	[516]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	45	[516]	ADD      	R1 R1 R7 ; R1 := R1 + R7
	46	[514]	FORLOOP  	R2 32 ; R2 += R4; if R2 <= R3 then begin PC := 32; R5 := R2 end
	47	[519]	GETGLOBAL	R7 K5 ; R7 := _T
	48	[519]	GETTABLE 	R7 R7 K6 ; R7 := R7["InventoryInfo"]
	49	[519]	GETTABLE 	R7 R7 K8 ; R7 := R7["MinSellAmount"]
	50	[519]	LE       	1 R7 R1 ; if R7 <= R1 then PC := 53
	51	[519]	JMP      	53 ; PC := 53
	52	[519]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 53
	53	[519]	OP_LOADBOOL	R0 1 0 ; R0 := true
	54	[522]	GETGLOBAL	R7 K11 ; R7 := 0x7b998233
	55	[522]	GETUPVAL 	R8 U2 ; R8 := U2
	56	[522]	CALL     	R7 2 2 ; R7 := R7(R8)
	57	[522]	TEST     	R7 1 ; if R7 then PC := 63
	58	[522]	JMP      	63 ; PC := 63
	59	[523]	GETUPVAL 	R7 U2 ; R7 := U2
	60	[523]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0x46610c50]
	61	[523]	MOVE     	R9 R0 ; R9 := R0
	62	[523]	CALL     	R7 3 1 ; R7(R8,R9)
	63	[525]	RETURN   	R0 1 ; return 

function #17 <?:527,550> (47 instructions, 188 bytes at 000002112DAEFA20)
1 param, 7 slots, 3 upvalues, 0 locals, 12 constants, 1 function
	1	[528]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[528]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[528]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[528]	TEST     	R1 1 ; if R1 then PC := 15
	5	[528]	JMP      	15 ; PC := 15
	6	[528]	GETTABLE 	R1 R0 K1 ; R1 := R0["UID"]
	7	[528]	EQ       	1 R1 K2 ; if R1 == nil then PC := 21
	8	[528]	JMP      	21 ; PC := 21
	9	[528]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[528]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf84d3744]
	11	[528]	GETTABLE 	R3 R0 K1 ; R3 := R0["UID"]
	12	[528]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	13	[528]	TEST     	R1 0 ; if not R1 then PC := 21
	14	[528]	JMP      	21 ; PC := 21
	15	[529]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[529]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xe0cba3ca]
	17	[529]	LOADK    	R2 K5 ; R2 := "/Lotus/Language/Menu/WeaponLockedUnsellable"
	18	[529]	CALL     	R1 2 1 ; R1(R2)
	19	[530]	OP_LOADBOOL	R1 0 0 ; R1 := false
	20	[530]	RETURN   	R1 2 ; return R1 
	21	[532]	GETTABLE 	R1 R0 K6 ; R1 := R0["Category"]
	22	[534]	OP_LOADBOOL	R2 0 0 ; R2 := false
	23	[535]	LOADK    	R3 := 0.000000
	24	[536]	GETUPVAL 	R4 U2 ; R4 := U2
	25	[536]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xea061e98]
	26	[544]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	27	[544]	MOVE     	R0 R1 ; R0 := R1
	28	[544]	MOVE     	R0 R3 ; R0 := R3
	29	[544]	GETUPVAL 	R0 U0 ; R0 := U0
	30	[544]	MOVE     	R0 R2 ; R0 := R2
	31	[536]	CALL     	R4 3 1 ; R4(R5,R6)
	32	[545]	LT       	0 R3 K8 ; if R3 >= 3.000000 then PC := 45
	33	[545]	JMP      	45 ; PC := 45
	34	[545]	TEST     	R2 0 ; if not R2 then PC := 45
	35	[545]	JMP      	45 ; PC := 45
	36	[545]	GETTABLE 	R4 R0 K9 ; R4 := R0["Selected"]
	37	[545]	EQ       	0 R4 K10 ; if R4 ~= false then PC := 45
	38	[545]	JMP      	45 ; PC := 45
	39	[546]	GETUPVAL 	R4 U1 ; R4 := U1
	40	[546]	GETTABLE 	R4 R4 K4 ; R4 := R4[0xe0cba3ca]
	41	[546]	LOADK    	R5 K11 ; R5 := "/Lotus/Language/Menu/LastItemOtherLockedUnsellable"
	42	[546]	CALL     	R4 2 1 ; R4(R5)
	43	[547]	OP_LOADBOOL	R4 0 0 ; R4 := false
	44	[547]	RETURN   	R4 2 ; return R4 
	45	[549]	OP_LOADBOOL	R4 1 0 ; R4 := true
	46	[549]	RETURN   	R4 2 ; return R4 
	47	[550]	RETURN   	R0 1 ; return 

function #18 <?:552,556> (10 instructions, 40 bytes at 000002112DAEFFE0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[553]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[553]	GETTABLE 	R2 R0 K1 ; R2 := R0["mClipName"]
	3	[553]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[553]	TEST     	R1 1 ; if R1 then PC := 10
	5	[553]	JMP      	10 ; PC := 10
	6	[554]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[554]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb15e6aca]
	8	[554]	MOVE     	R2 R0 ; R2 := R0
	9	[554]	CALL     	R1 2 1 ; R1(R2)
	10	[556]	RETURN   	R0 1 ; return 

function #19 <?:558,579> (24 instructions, 96 bytes at 0000021132312F20)
2 params, 9 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[559]	NEWTABLE 	R2 0 0 ; R2 := {}
	2	[560]	GETGLOBAL	R3 K0 ; R3 := 0xcfc01047
	3	[560]	MOVE     	R4 R0 ; R4 := R0
	4	[560]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	5	[560]	JMP      	7 ; PC := 7
	6	[561]	SETTABLE 	R2 R6 R7 ; R2[R6] := R7
	7	[560]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 6; R5 := R6 end
	8	[561]	JMP      	6 ; PC := 6
	9	[564]	GETTABLE 	R8 R0 K2 ; R8 := R0["Id"]
	10	[564]	SETTABLE 	R2 K1 R8 ; R2["LookupId"] := R8
	11	[565]	SETTABLE 	R2 K2 K3 ; R2["Id"] := nil
	12	[566]	SETTABLE 	R2 K4 K5 ; R2["SellGrid"] := true
	13	[567]	SETTABLE 	R2 K6 K3 ; R2["mIndex"] := nil
	14	[568]	SETTABLE 	R2 K7 K3 ; R2["mClipName"] := nil
	15	[569]	SETTABLE 	R2 K8 K3 ; R2["mForceRedraw"] := nil
	16	[570]	SETTABLE 	R2 K9 K3 ; R2["mInitialized"] := nil
	17	[571]	SETTABLE 	R2 K10 K3 ; R2["InitDepth"] := nil
	18	[572]	SETTABLE 	R2 K11 R1 ; R2["Count"] := R1
	19	[574]	GETTABLE 	R8 R2 K12 ; R8 := R2["Card"]
	20	[574]	EQ       	1 R8 K3 ; if R8 == nil then PC := 23
	21	[574]	JMP      	23 ; PC := 23
	22	[575]	SETTABLE 	R2 K13 K5 ; R2["OverrideCardCount"] := true
	23	[578]	RETURN   	R2 2 ; return R2 
	24	[579]	RETURN   	R0 1 ; return 

function #20 <?:581,584> (5 instructions, 20 bytes at 0000021132313190)
1 param, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[582]	SETTABLE 	R0 K0 K1 ; R0["MarkedToSell"] := true
	2	[583]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[583]	MOVE     	R2 R0 ; R2 := R0
	4	[583]	CALL     	R1 2 1 ; R1(R2)
	5	[584]	RETURN   	R0 1 ; return 

function #21 <?:586,627> (166 instructions, 664 bytes at 00000211323132F0)
1 param, 14 slots, 12 upvalues, 0 locals, 32 constants, 0 functions
	1	[587]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[587]	ADD      	R1 R1 R0 ; R1 := R1 + R0
	3	[587]	SETUPVAL 	R1 U0 ; U0 := R1
	4	[588]	LOADK    	R1 K0 ; R1 := ""
	5	[589]	LOADK    	R2 K0 ; R2 := ""
	6	[590]	GETUPVAL 	R3 U1 ; R3 := U1
	7	[590]	GETUPVAL 	R4 U2 ; R4 := U2
	8	[590]	GETTABLE 	R4 R4 K1 ; R4 := R4["FISH"]
	9	[590]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 16
	10	[590]	JMP      	16 ; PC := 16
	11	[590]	GETGLOBAL	R3 K2 ; R3 := _T
	12	[590]	GETTABLE 	R3 R3 K3 ; R3 := R3["FishInvInfo"]
	13	[590]	GETTABLE 	R3 R3 K4 ; R3 := R3["ShowRep"]
	14	[590]	TEST     	R3 0 ; if not R3 then PC := 26
	15	[590]	JMP      	26 ; PC := 26
	16	[590]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[590]	GETUPVAL 	R4 U2 ; R4 := U2
	18	[590]	GETTABLE 	R4 R4 K5 ; R4 := R4["DECODONATE"]
	19	[590]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 26
	20	[590]	JMP      	26 ; PC := 26
	21	[590]	GETUPVAL 	R3 U1 ; R3 := U1
	22	[590]	GETUPVAL 	R4 U2 ; R4 := U2
	23	[590]	GETTABLE 	R4 R4 K6 ; R4 := R4["RESDONATE"]
	24	[590]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 33
	25	[590]	JMP      	33 ; PC := 33
	26	[591]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	27	[591]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x42b04007]
	28	[591]	LOADK    	R5 K9 ; R5 := "/Lotus/Language/Menu/ItemInventory_SelectPile"
	29	[591]	OP_LOADBOOL	R6 0 0 ; R6 := false
	30	[591]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	31	[591]	MOVE     	R1 R3 ; R1 := R3
	32	[591]	JMP      	154 ; PC := 154
	33	[593]	GETGLOBAL	R3 K10 ; R3 := 0x603636ad
	34	[593]	GETUPVAL 	R4 U3 ; R4 := U3
	35	[593]	NEWTABLE 	R5 0 0 ; R5 := {}
	36	[593]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	37	[593]	MOVE     	R1 R3 ; R1 := R3
	38	[594]	GETUPVAL 	R3 U4 ; R3 := U4
	39	[594]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x5d10207d]
	40	[594]	LOADK    	R4 := 9.000000
	41	[594]	OP_LOADBOOL	R5 1 0 ; R5 := true
	42	[594]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[595]	GETUPVAL 	R4 U4 ; R4 := U4
	44	[595]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x5d10207d]
	45	[595]	LOADK    	R5 := 9.000000
	46	[595]	OP_LOADBOOL	R6 1 0 ; R6 := true
	47	[595]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	48	[596]	GETUPVAL 	R5 U5 ; R5 := U5
	49	[596]	GETTABLE 	R5 R5 K13 ; R5 := R5[0x9f57dd7d]
	50	[596]	MOVE     	R6 R3 ; R6 := R3
	51	[596]	CALL     	R5 2 2 ; R5 := R5(R6)
	52	[596]	MOVE     	R3 R5 ; R3 := R5
	53	[597]	GETUPVAL 	R5 U5 ; R5 := U5
	54	[597]	GETTABLE 	R5 R5 K13 ; R5 := R5[0x9f57dd7d]
	55	[597]	MOVE     	R6 R4 ; R6 := R4
	56	[597]	CALL     	R5 2 2 ; R5 := R5(R6)
	57	[597]	MOVE     	R4 R5 ; R4 := R5
	58	[598]	LOADK    	R5 K0 ; R5 := ""
	59	[599]	GETUPVAL 	R6 U1 ; R6 := U1
	60	[599]	GETUPVAL 	R7 U2 ; R7 := U2
	61	[599]	GETTABLE 	R7 R7 K14 ; R7 := R7["ENEMIES"]
	62	[599]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 75
	63	[599]	JMP      	75 ; PC := 75
	64	[600]	GETUPVAL 	R6 U5 ; R6 := U5
	65	[600]	GETTABLE 	R6 R6 K15 ; R6 := R6[0x1142c7a8]
	66	[600]	GETUPVAL 	R7 U0 ; R7 := U0
	67	[600]	CALL     	R6 2 2 ; R6 := R6(R7)
	68	[600]	LOADK    	R7 K16 ; R7 := "/"
	69	[600]	GETUPVAL 	R8 U5 ; R8 := U5
	70	[600]	GETTABLE 	R8 R8 K15 ; R8 := R8[0x1142c7a8]
	71	[600]	GETUPVAL 	R9 U6 ; R9 := U6
	72	[600]	CALL     	R8 2 2 ; R8 := R8(R9)
	73	[600]	CONCAT   	R5 R6 R8 ; R5 := R6 .. R7 .. R8
	74	[600]	JMP      	121 ; PC := 121
	75	[601]	GETUPVAL 	R6 U7 ; R6 := U7
	76	[601]	CALL     	R6 1 2 ; R6 := R6()
	77	[601]	TEST     	R6 0 ; if not R6 then PC := 101
	78	[601]	JMP      	101 ; PC := 101
	79	[602]	LOADK    	R6 := 0.000000
	80	[603]	GETGLOBAL	R7 K17 ; R7 := 0x7b998233
	81	[603]	GETUPVAL 	R8 U8 ; R8 := U8
	82	[603]	CALL     	R7 2 2 ; R7 := R7(R8)
	83	[603]	TEST     	R7 1 ; if R7 then PC := 88
	84	[603]	JMP      	88 ; PC := 88
	85	[604]	GETUPVAL 	R7 U8 ; R7 := U8
	86	[604]	GETTABLE 	R7 R7 K18 ; R7 := R7["mUnfilteredElements"]
	87	[604]	LEN      	R6 R7 ; R6 := # R7
	88	[606]	GETUPVAL 	R7 U5 ; R7 := U5
	89	[606]	GETTABLE 	R7 R7 K15 ; R7 := R7[0x1142c7a8]
	90	[606]	MOVE     	R8 R6 ; R8 := R6
	91	[606]	CALL     	R7 2 2 ; R7 := R7(R8)
	92	[606]	LOADK    	R8 K16 ; R8 := "/"
	93	[606]	GETUPVAL 	R9 U5 ; R9 := U5
	94	[606]	GETTABLE 	R9 R9 K15 ; R9 := R9[0x1142c7a8]
	95	[606]	GETGLOBAL	R10 K2 ; R10 := _T
	96	[606]	GETTABLE 	R10 R10 K19 ; R10 := R10["InvTradingInfo"]
	97	[606]	GETTABLE 	R10 R10 K20 ; R10 := R10["Slots"]
	98	[606]	CALL     	R9 2 2 ; R9 := R9(R10)
	99	[606]	CONCAT   	R5 R7 R9 ; R5 := R7 .. R8 .. R9
	100	[606]	JMP      	121 ; PC := 121
	101	[608]	GETUPVAL 	R7 U9 ; R7 := U9
	102	[608]	LEN      	R7 R7 ; R7 := # R7
	103	[608]	LT       	0 K21 R7 ; if 0.000000 >= R7 then PC := 118
	104	[608]	JMP      	118 ; PC := 118
	105	[609]	GETGLOBAL	R7 K7 ; R7 := 0xae91e43b
	106	[609]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x42b04007]
	107	[609]	GETUPVAL 	R9 U9 ; R9 := U9
	108	[609]	OP_LOADBOOL	R10 1 0 ; R10 := true
	109	[609]	NEWTABLE 	R11 0 1 ; R11 := {}
	110	[609]	GETUPVAL 	R12 U5 ; R12 := U5
	111	[609]	GETTABLE 	R12 R12 K15 ; R12 := R12[0x1142c7a8]
	112	[609]	GETUPVAL 	R13 U0 ; R13 := U0
	113	[609]	CALL     	R12 2 2 ; R12 := R12(R13)
	114	[609]	SETTABLE 	R11 K22 R12 ; R11["PRICE"] := R12
	115	[609]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	116	[609]	MOVE     	R5 R7 ; R5 := R7
	117	[609]	JMP      	121 ; PC := 121
	118	[611]	LOADK    	R1 K0 ; R1 := ""
	119	[612]	OP_LOADBOOL	R7 1 0 ; R7 := true
	120	[612]	SETUPVAL 	R7 U10 ; U10 := R7
	121	[615]	LOADK    	R7 K23 ; R7 := "</font><font color=\""
	122	[615]	MOVE     	R8 R4 ; R8 := R4
	123	[615]	LOADK    	R9 K24 ; R9 := "\">"
	124	[615]	MOVE     	R10 R5 ; R10 := R5
	125	[615]	LOADK    	R11 K25 ; R11 := "</font>"
	126	[615]	CONCAT   	R7 R7 R11 ; R7 := R7 .. R8 .. R9 .. R10 .. R11
	127	[616]	GETUPVAL 	R8 U1 ; R8 := U1
	128	[616]	GETUPVAL 	R9 U2 ; R9 := U2
	129	[616]	GETTABLE 	R9 R9 K1 ; R9 := R9["FISH"]
	130	[616]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 140
	131	[616]	JMP      	140 ; PC := 140
	132	[617]	MOVE     	R7 R5 ; R7 := R5
	133	[618]	LOADK    	R8 K23 ; R8 := "</font><font color=\""
	134	[618]	MOVE     	R9 R4 ; R9 := R4
	135	[618]	LOADK    	R10 K24 ; R10 := "\">"
	136	[618]	MOVE     	R11 R7 ; R11 := R7
	137	[618]	LOADK    	R12 K25 ; R12 := "</font>"
	138	[618]	CONCAT   	R2 R8 R12 ; R2 := R8 .. R9 .. R10 .. R11 .. R12
	139	[618]	JMP      	148 ; PC := 148
	140	[620]	GETGLOBAL	R8 K7 ; R8 := 0xae91e43b
	141	[620]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0x42b04007]
	142	[620]	GETUPVAL 	R10 U11 ; R10 := U11
	143	[620]	OP_LOADBOOL	R11 0 0 ; R11 := false
	144	[620]	NEWTABLE 	R12 0 1 ; R12 := {}
	145	[620]	SETTABLE 	R12 K26 R7 ; R12["TOTAL"] := R7
	146	[620]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	147	[620]	MOVE     	R2 R8 ; R2 := R8
	148	[622]	LOADK    	R8 K27 ; R8 := "<p><font color=\""
	149	[622]	MOVE     	R9 R3 ; R9 := R3
	150	[622]	LOADK    	R10 K24 ; R10 := "\">"
	151	[622]	MOVE     	R11 R2 ; R11 := R2
	152	[622]	LOADK    	R12 K28 ; R12 := "</p>"
	153	[622]	CONCAT   	R2 R8 R12 ; R2 := R8 .. R9 .. R10 .. R11 .. R12
	154	[625]	GETGLOBAL	R8 K7 ; R8 := 0xae91e43b
	155	[625]	SELF     	R8 R8 K29 ; R9 := R8; R8 := R8[0x5f56eeab]
	156	[625]	LOADK    	R10 K30 ; R10 := "SellList.Total"
	157	[625]	LOADK    	R11 := 29.000000
	158	[625]	MOVE     	R12 R1 ; R12 := R1
	159	[625]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	160	[626]	GETGLOBAL	R8 K7 ; R8 := 0xae91e43b
	161	[626]	SELF     	R8 R8 K29 ; R9 := R8; R8 := R8[0x5f56eeab]
	162	[626]	LOADK    	R10 K31 ; R10 := "SellList.Amount"
	163	[626]	LOADK    	R11 := 29.000000
	164	[626]	MOVE     	R12 R2 ; R12 := R2
	165	[626]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	166	[627]	RETURN   	R0 1 ; return 

function #22 <?:629,662> (85 instructions, 340 bytes at 0000021132313C40)
2 params, 11 slots, 5 upvalues, 0 locals, 18 constants, 0 functions
	1	[630]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[630]	MOVE     	R3 R1 ; R3 := R1
	3	[630]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[630]	TEST     	R2 1 ; if R2 then PC := 31
	5	[630]	JMP      	31 ; PC := 31
	6	[631]	LOADK    	R2 := 1.000000
	7	[631]	GETTABLE 	R3 R1 K1 ; R3 := R1["LookupIds"]
	8	[631]	LEN      	R3 R3 ; R3 := # R3
	9	[631]	LOADK    	R4 := 1.000000
	10	[631]	FORPREP  	R2 22 ; R2 -= R4; PC := 22
	11	[632]	GETTABLE 	R6 R1 K1 ; R6 := R1["LookupIds"]
	12	[632]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	13	[632]	GETTABLE 	R7 R0 K2 ; R7 := R0["Id"]
	14	[632]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 22
	15	[632]	JMP      	22 ; PC := 22
	16	[633]	GETGLOBAL	R6 K3 ; R6 := 0x33bdd652
	17	[633]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x9c1f3b5a]
	18	[633]	GETTABLE 	R7 R1 K1 ; R7 := R1["LookupIds"]
	19	[633]	MOVE     	R8 R5 ; R8 := R5
	20	[633]	CALL     	R6 3 1 ; R6(R7,R8)
	21	[635]	JMP      	23 ; PC := 23
	22	[631]	FORLOOP  	R2 11 ; R2 += R4; if R2 <= R3 then begin PC := 11; R5 := R2 end
	23	[639]	GETTABLE 	R6 R1 K1 ; R6 := R1["LookupIds"]
	24	[639]	LEN      	R6 R6 ; R6 := # R6
	25	[639]	EQ       	0 R6 K5 ; if R6 ~= 0.000000 then PC := 28
	26	[639]	JMP      	28 ; PC := 28
	27	[640]	SETTABLE 	R1 K6 K7 ; R1["MarkedToSell"] := nil
	28	[643]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[643]	MOVE     	R7 R1 ; R7 := R1
	30	[643]	CALL     	R6 2 1 ; R6(R7)
	31	[646]	GETUPVAL 	R6 U1 ; R6 := U1
	32	[646]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x0cf73b8d]
	33	[646]	GETTABLE 	R8 R0 K9 ; R8 := R0["mIndex"]
	34	[646]	CALL     	R6 3 1 ; R6(R7,R8)
	35	[647]	GETUPVAL 	R6 U2 ; R6 := U2
	36	[647]	CALL     	R6 1 2 ; R6 := R6()
	37	[647]	TEST     	R6 0 ; if not R6 then PC := 46
	38	[647]	JMP      	46 ; PC := 46
	39	[648]	GETUPVAL 	R6 U1 ; R6 := U1
	40	[648]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x8b9eb3e6]
	41	[648]	GETTABLE 	R8 R0 K2 ; R8 := R0["Id"]
	42	[648]	OP_LOADBOOL	R9 0 0 ; R9 := false
	43	[648]	OP_LOADBOOL	R10 1 0 ; R10 := true
	44	[648]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	45	[648]	JMP      	52 ; PC := 52
	46	[650]	GETUPVAL 	R6 U1 ; R6 := U1
	47	[650]	SELF     	R6 R6 K11 ; R7 := R6; R6 := R6[0x9ae7e2d2]
	48	[650]	GETTABLE 	R8 R0 K9 ; R8 := R0["mIndex"]
	49	[650]	OP_LOADBOOL	R9 0 0 ; R9 := false
	50	[650]	OP_LOADBOOL	R10 0 0 ; R10 := false
	51	[650]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	52	[652]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	53	[652]	GETUPVAL 	R7 U1 ; R7 := U1
	54	[652]	GETTABLE 	R7 R7 K12 ; R7 := R7["mScrollBar"]
	55	[652]	CALL     	R6 2 2 ; R6 := R6(R7)
	56	[652]	TEST     	R6 1 ; if R6 then PC := 67
	57	[652]	JMP      	67 ; PC := 67
	58	[653]	GETUPVAL 	R6 U1 ; R6 := U1
	59	[653]	GETTABLE 	R6 R6 K12 ; R6 := R6["mScrollBar"]
	60	[653]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0x44aa79ac]
	61	[653]	GETUPVAL 	R8 U1 ; R8 := U1
	62	[653]	GETTABLE 	R8 R8 K12 ; R8 := R8["mScrollBar"]
	63	[653]	GETTABLE 	R8 R8 K14 ; R8 := R8["mCurrentScroll"]
	64	[653]	OP_LOADBOOL	R9 0 0 ; R9 := false
	65	[653]	OP_LOADBOOL	R10 1 0 ; R10 := true
	66	[653]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	67	[656]	LOADK    	R6 := 0.000000
	68	[657]	GETTABLE 	R7 R0 K15 ; R7 := R0["SellingPrice"]
	69	[657]	EQ       	1 R7 K7 ; if R7 == nil then PC := 82
	70	[657]	JMP      	82 ; PC := 82
	71	[658]	GETUPVAL 	R7 U3 ; R7 := U3
	72	[658]	GETTABLE 	R7 R7 K16 ; R7 := R7[0x06d055f9]
	73	[658]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	74	[658]	GETTABLE 	R9 R0 K17 ; R9 := R0["Count"]
	75	[658]	CALL     	R8 2 2 ; R8 := R8(R9)
	76	[658]	LOADK    	R9 := 1.000000
	77	[658]	GETTABLE 	R10 R0 K17 ; R10 := R0["Count"]
	78	[658]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	79	[658]	GETTABLE 	R8 R0 K15 ; R8 := R0["SellingPrice"]
	80	[658]	MUL      	R7 R7 R8 ; R7 := R7 * R8
	81	[658]	UNM      	R6 R7 ; R6 := ^ R7
	82	[661]	GETUPVAL 	R7 U4 ; R7 := U4
	83	[661]	MOVE     	R8 R6 ; R8 := R6
	84	[661]	CALL     	R7 2 1 ; R7(R8)
	85	[662]	RETURN   	R0 1 ; return 

function #23 <?:664,834> (582 instructions, 2328 bytes at 0000021132314120)
3 params, 27 slots, 21 upvalues, 0 locals, 93 constants, 1 function
	1	[665]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[665]	GETUPVAL 	R4 U1 ; R4 := U1
	3	[665]	GETTABLE 	R4 R4 K0 ; R4 := R4["INVENTORY"]
	4	[665]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 59
	5	[665]	JMP      	59 ; PC := 59
	6	[665]	GETTABLE 	R3 R0 K1 ; R3 := R0["MarkedToSell"]
	7	[665]	TEST     	R3 1 ; if R3 then PC := 59
	8	[665]	JMP      	59 ; PC := 59
	9	[666]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	10	[666]	MOVE     	R4 R0 ; R4 := R0
	11	[666]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[666]	TEST     	R3 1 ; if R3 then PC := 59
	13	[666]	JMP      	59 ; PC := 59
	14	[666]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	15	[666]	GETTABLE 	R4 R0 K3 ; R4 := R0["Card"]
	16	[666]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[666]	TEST     	R3 1 ; if R3 then PC := 23
	18	[666]	JMP      	23 ; PC := 23
	19	[666]	GETTABLE 	R3 R0 K3 ; R3 := R0["Card"]
	20	[666]	GETTABLE 	R3 R3 K4 ; R3 := R3["mInstalled"]
	21	[666]	EQ       	0 R3 K5 ; if R3 ~= nil then PC := 31
	22	[666]	JMP      	31 ; PC := 31
	23	[666]	GETUPVAL 	R3 U2 ; R3 := U2
	24	[666]	GETUPVAL 	R4 U3 ; R4 := U3
	25	[666]	GETTABLE 	R4 R4 K6 ; R4 := R4["TRADE_ITEMS"]
	26	[666]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 59
	27	[666]	JMP      	59 ; PC := 59
	28	[666]	GETTABLE 	R3 R0 K7 ; R3 := R0["mModInstalledTable"]
	29	[666]	EQ       	1 R3 K5 ; if R3 == nil then PC := 59
	30	[666]	JMP      	59 ; PC := 59
	31	[667]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	32	[667]	GETTABLE 	R4 R0 K8 ; R4 := R0["Type"]
	33	[667]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[667]	TEST     	R3 1 ; if R3 then PC := 51
	35	[667]	JMP      	51 ; PC := 51
	36	[667]	GETTABLE 	R3 R0 K8 ; R3 := R0["Type"]
	37	[667]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0xf2deaf69]
	38	[667]	GETUPVAL 	R5 U4 ; R5 := U4
	39	[667]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	40	[667]	TEST     	R3 0 ; if not R3 then PC := 51
	41	[667]	JMP      	51 ; PC := 51
	42	[668]	GETUPVAL 	R3 U5 ; R3 := U5
	43	[668]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xe0cba3ca]
	44	[668]	GETGLOBAL	R4 K11 ; R4 := 0xae91e43b
	45	[668]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x42b04007]
	46	[668]	LOADK    	R6 K13 ; R6 := "/Lotus/Language/Dojo/ArcaneInstalledWarning"
	47	[668]	OP_LOADBOOL	R7 0 0 ; R7 := false
	48	[668]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	49	[668]	CALL     	R3 0 1 ; R3(R4,...)
	50	[668]	JMP      	59 ; PC := 59
	51	[670]	GETUPVAL 	R3 U5 ; R3 := U5
	52	[670]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xe0cba3ca]
	53	[670]	GETGLOBAL	R4 K11 ; R4 := 0xae91e43b
	54	[670]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x42b04007]
	55	[670]	LOADK    	R6 K14 ; R6 := "/Lotus/Language/Dojo/ModInstalledWarning"
	56	[670]	OP_LOADBOOL	R7 0 0 ; R7 := false
	57	[670]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	58	[670]	CALL     	R3 0 1 ; R3(R4,...)
	59	[675]	GETUPVAL 	R3 U2 ; R3 := U2
	60	[675]	GETUPVAL 	R4 U3 ; R4 := U3
	61	[675]	GETTABLE 	R4 R4 K15 ; R4 := R4["ENEMIES"]
	62	[675]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 78
	63	[675]	JMP      	78 ; PC := 78
	64	[676]	GETGLOBAL	R3 K16 ; R3 := _T
	65	[676]	GETTABLE 	R3 R3 K17 ; R3 := R3["InfoPopup_Data"]
	66	[676]	EQ       	1 R3 K5 ; if R3 == nil then PC := 229
	67	[676]	JMP      	229 ; PC := 229
	68	[677]	GETGLOBAL	R3 K16 ; R3 := _T
	69	[677]	GETTABLE 	R3 R3 K17 ; R3 := R3["InfoPopup_Data"]
	70	[677]	SETTABLE 	R3 K18 K5 ; R3["TagType"] := nil
	71	[678]	GETGLOBAL	R3 K16 ; R3 := _T
	72	[678]	GETTABLE 	R3 R3 K17 ; R3 := R3["InfoPopup_Data"]
	73	[678]	GETUPVAL 	R4 U6 ; R4 := U6
	74	[678]	GETUPVAL 	R5 U7 ; R5 := U7
	75	[678]	SUB      	R4 R4 R5 ; R4 := R4 - R5
	76	[678]	SETTABLE 	R3 K19 R4 ; R3["CountOverride"] := R4
	77	[679]	JMP      	229 ; PC := 229
	78	[680]	GETUPVAL 	R3 U0 ; R3 := U0
	79	[680]	GETUPVAL 	R4 U1 ; R4 := U1
	80	[680]	GETTABLE 	R4 R4 K0 ; R4 := R4["INVENTORY"]
	81	[680]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 163
	82	[680]	JMP      	163 ; PC := 163
	83	[680]	GETTABLE 	R3 R0 K1 ; R3 := R0["MarkedToSell"]
	84	[680]	TEST     	R3 1 ; if R3 then PC := 163
	85	[680]	JMP      	163 ; PC := 163
	86	[680]	GETUPVAL 	R3 U2 ; R3 := U2
	87	[680]	GETUPVAL 	R4 U3 ; R4 := U3
	88	[680]	GETTABLE 	R4 R4 K20 ; R4 := R4["DECODONATE"]
	89	[680]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 100
	90	[680]	JMP      	100 ; PC := 100
	91	[680]	GETUPVAL 	R3 U2 ; R3 := U2
	92	[680]	GETUPVAL 	R4 U3 ; R4 := U3
	93	[680]	GETTABLE 	R4 R4 K21 ; R4 := R4["RESDONATE"]
	94	[680]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 100
	95	[680]	JMP      	100 ; PC := 100
	96	[680]	GETUPVAL 	R3 U8 ; R3 := U8
	97	[680]	CALL     	R3 1 2 ; R3 := R3()
	98	[680]	TEST     	R3 0 ; if not R3 then PC := 163
	99	[680]	JMP      	163 ; PC := 163
	100	[681]	GETUPVAL 	R3 U8 ; R3 := U8
	101	[681]	CALL     	R3 1 2 ; R3 := R3()
	102	[681]	TEST     	R3 0 ; if not R3 then PC := 141
	103	[681]	JMP      	141 ; PC := 141
	104	[682]	GETUPVAL 	R3 U9 ; R3 := U9
	105	[682]	GETTABLE 	R3 R3 K22 ; R3 := R3["mUnfilteredElements"]
	106	[682]	LEN      	R3 R3 ; R3 := # R3
	107	[682]	GETGLOBAL	R4 K16 ; R4 := _T
	108	[682]	GETTABLE 	R4 R4 K23 ; R4 := R4["InvTradingInfo"]
	109	[682]	GETTABLE 	R4 R4 K24 ; R4 := R4["Slots"]
	110	[682]	LE       	0 R4 R3 ; if R4 > R3 then PC := 117
	111	[682]	JMP      	117 ; PC := 117
	112	[683]	GETUPVAL 	R3 U5 ; R3 := U5
	113	[683]	GETTABLE 	R3 R3 K25 ; R3 := R3[0xa53f5e12]
	114	[683]	LOADK    	R4 K26 ; R4 := "/Lotus/Language/Dojo/Trade_MaxSlotsReached"
	115	[683]	CALL     	R3 2 1 ; R3(R4)
	116	[685]	RETURN   	R0 1 ; return 
	117	[687]	GETTABLE 	R3 R0 K27 ; R3 := R0["RawItem"]
	118	[687]	EQ       	1 R3 K5 ; if R3 == nil then PC := 229
	119	[687]	JMP      	229 ; PC := 229
	120	[687]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	121	[687]	GETTABLE 	R4 R0 K27 ; R4 := R0["RawItem"]
	122	[687]	GETTABLE 	R4 R4 K28 ; R4 := R4["Nemesis"]
	123	[687]	CALL     	R3 2 2 ; R3 := R3(R4)
	124	[687]	TEST     	R3 1 ; if R3 then PC := 229
	125	[687]	JMP      	229 ; PC := 229
	126	[689]	OP_LOADBOOL	R3 0 0 ; R3 := false
	127	[690]	GETUPVAL 	R4 U9 ; R4 := U9
	128	[690]	SELF     	R4 R4 K29 ; R5 := R4; R4 := R4[0xea061e98]
	129	[695]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	130	[695]	MOVE     	R0 R3 ; R0 := R3
	131	[690]	CALL     	R4 3 1 ; R4(R5,R6)
	132	[697]	TEST     	R3 0 ; if not R3 then PC := 139
	133	[697]	JMP      	139 ; PC := 139
	134	[698]	GETUPVAL 	R4 U5 ; R4 := U5
	135	[698]	GETTABLE 	R4 R4 K25 ; R4 := R4[0xa53f5e12]
	136	[698]	LOADK    	R5 K30 ; R5 := "/Lotus/Language/Dojo/Trade_LichLimit"
	137	[698]	CALL     	R4 2 1 ; R4(R5)
	138	[700]	RETURN   	R0 1 ; return 
	139	[701]	CLOSE    	R3 ; SAVE R3,...
	140	[702]	JMP      	229 ; PC := 229
	141	[703]	GETUPVAL 	R3 U9 ; R3 := U9
	142	[703]	SELF     	R3 R3 K31 ; R4 := R3; R3 := R3[0x5fbddc1a]
	143	[703]	CALL     	R3 2 2 ; R3 := R3(R4)
	144	[703]	GETUPVAL 	R4 U10 ; R4 := U10
	145	[703]	LE       	0 R4 R3 ; if R4 > R3 then PC := 229
	146	[703]	JMP      	229 ; PC := 229
	147	[704]	GETGLOBAL	R3 K11 ; R3 := 0xae91e43b
	148	[704]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x42b04007]
	149	[704]	LOADK    	R5 K32 ; R5 := "/Lotus/Language/Dojo/VaultContributionDecoTooMany"
	150	[704]	OP_LOADBOOL	R6 0 0 ; R6 := false
	151	[704]	NEWTABLE 	R7 0 1 ; R7 := {}
	152	[704]	GETGLOBAL	R8 K34 ; R8 := 0x64fb1586
	153	[704]	GETUPVAL 	R9 U10 ; R9 := U10
	154	[704]	CALL     	R8 2 2 ; R8 := R8(R9)
	155	[704]	SETTABLE 	R7 K33 R8 ; R7["NUM"] := R8
	156	[704]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	157	[705]	GETUPVAL 	R4 U5 ; R4 := U5
	158	[705]	GETTABLE 	R4 R4 K25 ; R4 := R4[0xa53f5e12]
	159	[705]	MOVE     	R5 R3 ; R5 := R3
	160	[705]	CALL     	R4 2 1 ; R4(R5)
	161	[707]	RETURN   	R0 1 ; return 
	162	[708]	JMP      	229 ; PC := 229
	163	[709]	GETUPVAL 	R4 U8 ; R4 := U8
	164	[709]	CALL     	R4 1 2 ; R4 := R4()
	165	[709]	TEST     	R4 1 ; if R4 then PC := 229
	166	[709]	JMP      	229 ; PC := 229
	167	[709]	GETUPVAL 	R4 U2 ; R4 := U2
	168	[709]	GETUPVAL 	R5 U3 ; R5 := U3
	169	[709]	GETTABLE 	R5 R5 K35 ; R5 := R5["FISH"]
	170	[709]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 229
	171	[709]	JMP      	229 ; PC := 229
	172	[709]	GETUPVAL 	R4 U2 ; R4 := U2
	173	[709]	GETUPVAL 	R5 U3 ; R5 := U3
	174	[709]	GETTABLE 	R5 R5 K20 ; R5 := R5["DECODONATE"]
	175	[709]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 229
	176	[709]	JMP      	229 ; PC := 229
	177	[709]	GETUPVAL 	R4 U2 ; R4 := U2
	178	[709]	GETUPVAL 	R5 U3 ; R5 := U3
	179	[709]	GETTABLE 	R5 R5 K21 ; R5 := R5["RESDONATE"]
	180	[709]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 229
	181	[709]	JMP      	229 ; PC := 229
	182	[709]	GETUPVAL 	R4 U2 ; R4 := U2
	183	[709]	GETUPVAL 	R5 U3 ; R5 := U3
	184	[709]	GETTABLE 	R5 R5 K36 ; R5 := R5["SHIP_PARTS"]
	185	[709]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 229
	186	[709]	JMP      	229 ; PC := 229
	187	[710]	EQ       	1 R0 K5 ; if R0 == nil then PC := 203
	188	[710]	JMP      	203 ; PC := 203
	189	[710]	GETTABLE 	R4 R0 K37 ; R4 := R0["SellingPrice"]
	190	[710]	EQ       	1 R4 K5 ; if R4 == nil then PC := 203
	191	[710]	JMP      	203 ; PC := 203
	192	[710]	GETTABLE 	R4 R0 K37 ; R4 := R0["SellingPrice"]
	193	[710]	EQ       	1 R4 K38 ; if R4 == 0.000000 then PC := 203
	194	[710]	JMP      	203 ; PC := 203
	195	[710]	GETUPVAL 	R4 U11 ; R4 := U11
	196	[710]	MOVE     	R5 R0 ; R5 := R0
	197	[710]	CALL     	R4 2 2 ; R4 := R4(R5)
	198	[710]	TEST     	R4 0 ; if not R4 then PC := 203
	199	[710]	JMP      	203 ; PC := 203
	200	[710]	GETTABLE 	R4 R0 K39 ; R4 := R0["PreventSelling"]
	201	[710]	EQ       	0 R4 K40 ; if R4 ~= true then PC := 210
	202	[710]	JMP      	210 ; PC := 210
	203	[711]	GETUPVAL 	R4 U5 ; R4 := U5
	204	[711]	GETTABLE 	R4 R4 K41 ; R4 := R4[0x659d451f]
	205	[711]	GETGLOBAL	R5 K42 ; R5 := 0x0032441c
	206	[711]	GETTABLE 	R5 R5 K43 ; R5 := R5["UISound_Error"]
	207	[711]	CALL     	R4 2 1 ; R4(R5)
	208	[712]	RETURN   	R0 1 ; return 
	209	[712]	JMP      	229 ; PC := 229
	210	[713]	GETTABLE 	R4 R0 K44 ; R4 := R0["Category"]
	211	[713]	EQ       	0 R4 K46 ; if R4 ~= 18.000000 then PC := 229
	212	[713]	JMP      	229 ; PC := 229
	213	[714]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	214	[714]	GETUPVAL 	R5 U12 ; R5 := U12
	215	[714]	CALL     	R4 2 2 ; R4 := R4(R5)
	216	[714]	TEST     	R4 1 ; if R4 then PC := 224
	217	[714]	JMP      	224 ; PC := 224
	218	[714]	GETUPVAL 	R4 U12 ; R4 := U12
	219	[714]	SELF     	R4 R4 K47 ; R5 := R4; R4 := R4[0x9b0f479e]
	220	[714]	GETTABLE 	R6 R0 K48 ; R6 := R0["UID"]
	221	[714]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	222	[714]	TEST     	R4 0 ; if not R4 then PC := 229
	223	[714]	JMP      	229 ; PC := 229
	224	[715]	GETUPVAL 	R4 U5 ; R4 := U5
	225	[715]	GETTABLE 	R4 R4 K10 ; R4 := R4[0xe0cba3ca]
	226	[715]	LOADK    	R5 K49 ; R5 := "/Lotus/Language/Menu/ItemInventory_ResourceDroneDeployed"
	227	[715]	CALL     	R4 2 1 ; R4(R5)
	228	[716]	RETURN   	R0 1 ; return 
	229	[721]	GETUPVAL 	R4 U0 ; R4 := U0
	230	[721]	GETUPVAL 	R5 U1 ; R5 := U1
	231	[721]	GETTABLE 	R5 R5 K0 ; R5 := R5["INVENTORY"]
	232	[721]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 563
	233	[721]	JMP      	563 ; PC := 563
	234	[722]	GETTABLE 	R4 R0 K1 ; R4 := R0["MarkedToSell"]
	235	[722]	TEST     	R4 1 ; if R4 then PC := 378
	236	[722]	JMP      	378 ; PC := 378
	237	[722]	TEST     	R1 1 ; if R1 then PC := 378
	238	[722]	JMP      	378 ; PC := 378
	239	[722]	TEST     	R2 1 ; if R2 then PC := 378
	240	[722]	JMP      	378 ; PC := 378
	241	[722]	GETUPVAL 	R4 U2 ; R4 := U2
	242	[722]	GETUPVAL 	R5 U3 ; R5 := U3
	243	[722]	GETTABLE 	R5 R5 K15 ; R5 := R5["ENEMIES"]
	244	[722]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 252
	245	[722]	JMP      	252 ; PC := 252
	246	[722]	GETTABLE 	R4 R0 K50 ; R4 := R0["Count"]
	247	[722]	EQ       	1 R4 K5 ; if R4 == nil then PC := 378
	248	[722]	JMP      	378 ; PC := 378
	249	[722]	GETTABLE 	R4 R0 K50 ; R4 := R0["Count"]
	250	[722]	LT       	0 K51 R4 ; if 1.000000 >= R4 then PC := 378
	251	[722]	JMP      	378 ; PC := 378
	252	[723]	GETTABLE 	R4 R0 K52 ; R4 := R0["Id"]
	253	[723]	SETUPVAL 	R4 U13 ; U13 := R4
	254	[724]	GETGLOBAL	R4 K16 ; R4 := _T
	255	[724]	GETTABLE 	R4 R4 K17 ; R4 := R4["InfoPopup_Data"]
	256	[724]	EQ       	1 R4 K5 ; if R4 == nil then PC := 373
	257	[724]	JMP      	373 ; PC := 373
	258	[725]	GETGLOBAL	R4 K16 ; R4 := _T
	259	[725]	GETTABLE 	R4 R4 K17 ; R4 := R4["InfoPopup_Data"]
	260	[725]	SETTABLE 	R4 K53 K54 ; R4["Callback"] := "OKSaveSelectedCount"
	261	[727]	GETUPVAL 	R4 U8 ; R4 := U8
	262	[727]	CALL     	R4 1 2 ; R4 := R4()
	263	[727]	TEST     	R4 0 ; if not R4 then PC := 282
	264	[727]	JMP      	282 ; PC := 282
	265	[728]	GETGLOBAL	R4 K16 ; R4 := _T
	266	[728]	GETTABLE 	R4 R4 K17 ; R4 := R4["InfoPopup_Data"]
	267	[728]	GETGLOBAL	R5 K55 ; R5 := 0x5bced4c4
	268	[728]	GETTABLE 	R5 R5 K56 ; R5 := R5[0xac1b386a]
	269	[728]	GETGLOBAL	R6 K16 ; R6 := _T
	270	[728]	GETTABLE 	R6 R6 K17 ; R6 := R6["InfoPopup_Data"]
	271	[728]	GETTABLE 	R6 R6 K50 ; R6 := R6["Count"]
	272	[728]	GETGLOBAL	R7 K16 ; R7 := _T
	273	[728]	GETTABLE 	R7 R7 K23 ; R7 := R7["InvTradingInfo"]
	274	[728]	GETTABLE 	R7 R7 K24 ; R7 := R7["Slots"]
	275	[728]	GETUPVAL 	R8 U9 ; R8 := U9
	276	[728]	GETTABLE 	R8 R8 K22 ; R8 := R8["mUnfilteredElements"]
	277	[728]	LEN      	R8 R8 ; R8 := # R8
	278	[728]	SUB      	R7 R7 R8 ; R7 := R7 - R8
	279	[728]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	280	[728]	SETTABLE 	R4 K19 R5 ; R4["CountOverride"] := R5
	281	[728]	JMP      	373 ; PC := 373
	282	[729]	GETGLOBAL	R4 K16 ; R4 := _T
	283	[729]	GETTABLE 	R4 R4 K57 ; R4 := R4["SyndicateInvInfo"]
	284	[729]	EQ       	1 R4 K5 ; if R4 == nil then PC := 373
	285	[729]	JMP      	373 ; PC := 373
	286	[729]	GETTABLE 	R4 R0 K37 ; R4 := R0["SellingPrice"]
	287	[729]	LT       	0 K38 R4 ; if 0.000000 >= R4 then PC := 373
	288	[729]	JMP      	373 ; PC := 373
	289	[731]	GETGLOBAL	R4 K16 ; R4 := _T
	290	[731]	GETTABLE 	R4 R4 K57 ; R4 := R4["SyndicateInvInfo"]
	291	[731]	GETTABLE 	R4 R4 K58 ; R4 := R4["MaxRepInc"]
	292	[731]	GETUPVAL 	R5 U7 ; R5 := U7
	293	[731]	SUB      	R4 R4 R5 ; R4 := R4 - R5
	294	[732]	LOADK    	R5 K59 ; R5 := "/Lotus/Language/SystemMessages/SyndicateStandingCapped"
	295	[733]	NEWTABLE 	R6 0 0 ; R6 := {}
	296	[736]	GETGLOBAL	R7 K16 ; R7 := _T
	297	[736]	GETTABLE 	R7 R7 K57 ; R7 := R7["SyndicateInvInfo"]
	298	[736]	GETTABLE 	R7 R7 K60 ; R7 := R7["Syndicate"]
	299	[736]	SELF     	R7 R7 K61 ; R8 := R7; R7 := R7[0x715e4e45]
	300	[736]	CALL     	R7 2 2 ; R7 := R7(R8)
	301	[736]	TEST     	R7 0 ; if not R7 then PC := 339
	302	[736]	JMP      	339 ; PC := 339
	303	[737]	GETGLOBAL	R7 K16 ; R7 := _T
	304	[737]	GETTABLE 	R7 R7 K57 ; R7 := R7["SyndicateInvInfo"]
	305	[737]	GETTABLE 	R7 R7 K60 ; R7 := R7["Syndicate"]
	306	[737]	SELF     	R7 R7 K62 ; R8 := R7; R7 := R7[0x08b0b7bf]
	307	[737]	CALL     	R7 2 2 ; R7 := R7(R8)
	308	[738]	LT       	0 K38 R7 ; if 0.000000 >= R7 then PC := 339
	309	[738]	JMP      	339 ; PC := 339
	310	[738]	LT       	0 R7 K64 ; if R7 >= 13.000000 then PC := 339
	311	[738]	JMP      	339 ; PC := 339
	312	[739]	GETGLOBAL	R8 K65 ; R8 := 0x25d99d89
	313	[739]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf5b0abc2]
	314	[739]	MOVE     	R10 R7 ; R10 := R7
	315	[739]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	316	[740]	GETGLOBAL	R9 K16 ; R9 := _T
	317	[740]	GETTABLE 	R9 R9 K57 ; R9 := R9["SyndicateInvInfo"]
	318	[740]	GETTABLE 	R9 R9 K58 ; R9 := R9["MaxRepInc"]
	319	[740]	EQ       	0 R9 R8 ; if R9 ~= R8 then PC := 339
	320	[740]	JMP      	339 ; PC := 339
	321	[741]	GETGLOBAL	R9 K16 ; R9 := _T
	322	[741]	GETTABLE 	R9 R9 K57 ; R9 := R9["SyndicateInvInfo"]
	323	[741]	GETTABLE 	R9 R9 K60 ; R9 := R9["Syndicate"]
	324	[741]	SELF     	R9 R9 K67 ; R10 := R9; R9 := R9[0xdff9d2a7]
	325	[741]	CALL     	R9 2 2 ; R9 := R9(R10)
	326	[741]	SELF     	R9 R9 K68 ; R10 := R9; R9 := R9[0x6d604ba7]
	327	[741]	CALL     	R9 2 2 ; R9 := R9(R10)
	328	[742]	EQ       	0 R9 K69 ; if R9 ~= "/Lotus/Language/Syndicates/CetusName" then PC := 331
	329	[742]	JMP      	331 ; PC := 331
	330	[744]	LOADK    	R9 K70 ; R9 := "/Lotus/Language/Syndicates/CetusNameInline"
	331	[746]	LOADK    	R5 K71 ; R5 := "/Lotus/Language/SystemMessages/SyndicateDailyStandingCapped"
	332	[747]	NEWTABLE 	R10 0 1 ; R10 := {}
	333	[747]	GETGLOBAL	R11 K73 ; R11 := 0x603636ad
	334	[747]	MOVE     	R12 R9 ; R12 := R9
	335	[747]	LOADNIL  	R13 R13 ; R13 := nil
	336	[747]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	337	[747]	SETTABLE 	R10 K72 R11 ; R10["SYNDICATE"] := R11
	338	[747]	MOVE     	R6 R10 ; R6 := R10
	339	[751]	GETGLOBAL	R10 K73 ; R10 := 0x603636ad
	340	[751]	MOVE     	R11 R5 ; R11 := R5
	341	[751]	MOVE     	R12 R6 ; R12 := R6
	342	[751]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	343	[751]	MOVE     	R5 R10 ; R5 := R10
	344	[752]	GETGLOBAL	R10 K55 ; R10 := 0x5bced4c4
	345	[752]	GETTABLE 	R10 R10 K74 ; R10 := R10[0x99675e23]
	346	[752]	GETTABLE 	R11 R0 K37 ; R11 := R0["SellingPrice"]
	347	[752]	DIV      	R11 R4 R11 ; R11 := R4 / R11
	348	[752]	CALL     	R10 2 2 ; R10 := R10(R11)
	349	[753]	LE       	0 R10 K38 ; if R10 > 0.000000 then PC := 365
	350	[753]	JMP      	365 ; PC := 365
	351	[754]	GETUPVAL 	R11 U5 ; R11 := U5
	352	[754]	GETTABLE 	R11 R11 K25 ; R11 := R11[0xa53f5e12]
	353	[754]	GETGLOBAL	R12 K11 ; R12 := 0xae91e43b
	354	[754]	SELF     	R12 R12 K12 ; R13 := R12; R12 := R12[0x42b04007]
	355	[754]	MOVE     	R14 R5 ; R14 := R5
	356	[754]	OP_LOADBOOL	R15 0 0 ; R15 := false
	357	[754]	CALL     	R12 4 0 ; R12,... := R12(R13,R14,R15)
	358	[754]	CALL     	R11 0 1 ; R11(R12,...)
	359	[755]	GETUPVAL 	R11 U5 ; R11 := U5
	360	[755]	GETTABLE 	R11 R11 K75 ; R11 := R11[0x5cc9f5a2]
	361	[755]	GETGLOBAL	R12 K11 ; R12 := 0xae91e43b
	362	[755]	LOADK    	R13 K76 ; R13 := "SellList.Total"
	363	[755]	CALL     	R11 3 1 ; R11(R12,R13)
	364	[756]	RETURN   	R0 1 ; return 
	365	[758]	GETGLOBAL	R11 K16 ; R11 := _T
	366	[758]	GETTABLE 	R11 R11 K17 ; R11 := R11["InfoPopup_Data"]
	367	[758]	GETGLOBAL	R12 K55 ; R12 := 0x5bced4c4
	368	[758]	GETTABLE 	R12 R12 K56 ; R12 := R12[0xac1b386a]
	369	[758]	GETTABLE 	R13 R0 K50 ; R13 := R0["Count"]
	370	[758]	MOVE     	R14 R10 ; R14 := R10
	371	[758]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	372	[758]	SETTABLE 	R11 K77 R12 ; R11["MaxSelectionCount"] := R12
	373	[761]	GETGLOBAL	R11 K11 ; R11 := 0xae91e43b
	374	[761]	SELF     	R11 R11 K78 ; R12 := R11; R11 := R11[0x1fd6abd0]
	375	[761]	GETGLOBAL	R13 K79 ; R13 := 0xc2a05c3d
	376	[761]	CALL     	R11 3 1 ; R11(R12,R13)
	377	[762]	RETURN   	R0 1 ; return 
	378	[765]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	379	[765]	GETUPVAL 	R12 U14 ; R12 := U14
	380	[765]	CALL     	R11 2 2 ; R11 := R11(R12)
	381	[765]	TEST     	R11 1 ; if R11 then PC := 395
	382	[765]	JMP      	395 ; PC := 395
	383	[765]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	384	[765]	GETGLOBAL	R12 K16 ; R12 := _T
	385	[765]	GETUPVAL 	R13 U14 ; R13 := U14
	386	[765]	GETTABLE 	R12 R12 R13 ; R12 := R12[R13]
	387	[765]	CALL     	R11 2 2 ; R11 := R11(R12)
	388	[765]	TEST     	R11 1 ; if R11 then PC := 395
	389	[765]	JMP      	395 ; PC := 395
	390	[766]	GETGLOBAL	R11 K16 ; R11 := _T
	391	[766]	GETUPVAL 	R12 U14 ; R12 := U14
	392	[766]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	393	[766]	MOVE     	R12 R0 ; R12 := R0
	394	[766]	CALL     	R11 2 1 ; R11(R12)
	395	[769]	GETTABLE 	R11 R0 K80 ; R11 := R0["LookupIds"]
	396	[769]	EQ       	1 R11 K5 ; if R11 == nil then PC := 402
	397	[769]	JMP      	402 ; PC := 402
	398	[769]	GETTABLE 	R11 R0 K80 ; R11 := R0["LookupIds"]
	399	[769]	LEN      	R11 R11 ; R11 := # R11
	400	[769]	EQ       	0 R11 K38 ; if R11 ~= 0.000000 then PC := 540
	401	[769]	JMP      	540 ; PC := 540
	402	[770]	MOVE     	R11 R2 ; R11 := R2
	403	[771]	GETGLOBAL	R12 K2 ; R12 := 0x7b998233
	404	[771]	MOVE     	R13 R11 ; R13 := R11
	405	[771]	CALL     	R12 2 2 ; R12 := R12(R13)
	406	[771]	TEST     	R12 1 ; if R12 then PC := 410
	407	[771]	JMP      	410 ; PC := 410
	408	[771]	TEST     	R1 0 ; if not R1 then PC := 447
	409	[771]	JMP      	447 ; PC := 447
	410	[772]	GETGLOBAL	R12 K16 ; R12 := _T
	411	[772]	GETTABLE 	R12 R12 K57 ; R12 := R12["SyndicateInvInfo"]
	412	[772]	EQ       	1 R12 K5 ; if R12 == nil then PC := 434
	413	[772]	JMP      	434 ; PC := 434
	414	[772]	GETTABLE 	R12 R0 K37 ; R12 := R0["SellingPrice"]
	415	[772]	LT       	0 K38 R12 ; if 0.000000 >= R12 then PC := 434
	416	[772]	JMP      	434 ; PC := 434
	417	[774]	GETGLOBAL	R12 K16 ; R12 := _T
	418	[774]	GETTABLE 	R12 R12 K57 ; R12 := R12["SyndicateInvInfo"]
	419	[774]	GETTABLE 	R12 R12 K58 ; R12 := R12["MaxRepInc"]
	420	[774]	GETUPVAL 	R13 U7 ; R13 := U7
	421	[774]	SUB      	R12 R12 R13 ; R12 := R12 - R13
	422	[775]	GETGLOBAL	R13 K55 ; R13 := 0x5bced4c4
	423	[775]	GETTABLE 	R13 R13 K74 ; R13 := R13[0x99675e23]
	424	[775]	GETTABLE 	R14 R0 K37 ; R14 := R0["SellingPrice"]
	425	[775]	DIV      	R14 R12 R14 ; R14 := R12 / R14
	426	[775]	CALL     	R13 2 2 ; R13 := R13(R14)
	427	[776]	GETGLOBAL	R14 K55 ; R14 := 0x5bced4c4
	428	[776]	GETTABLE 	R14 R14 K56 ; R14 := R14[0xac1b386a]
	429	[776]	GETTABLE 	R15 R0 K50 ; R15 := R0["Count"]
	430	[776]	MOVE     	R16 R13 ; R16 := R13
	431	[776]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	432	[776]	MOVE     	R11 R14 ; R11 := R14
	433	[776]	JMP      	447 ; PC := 447
	434	[778]	GETUPVAL 	R14 U5 ; R14 := U5
	435	[778]	GETTABLE 	R14 R14 K81 ; R14 := R14[0x06d055f9]
	436	[778]	GETUPVAL 	R15 U2 ; R15 := U2
	437	[778]	GETUPVAL 	R16 U3 ; R16 := U3
	438	[778]	GETTABLE 	R16 R16 K15 ; R16 := R16["ENEMIES"]
	439	[778]	EQ       	1 R15 R16 ; if R15 == R16 then PC := 442
	440	[778]	JMP      	442 ; PC := 442
	441	[778]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 442
	442	[778]	OP_LOADBOOL	R15 1 0 ; R15 := true
	443	[778]	LOADK    	R16 := 5.000000
	444	[778]	GETTABLE 	R17 R0 K50 ; R17 := R0["Count"]
	445	[778]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	446	[778]	MOVE     	R11 R14 ; R11 := R14
	447	[782]	GETUPVAL 	R14 U2 ; R14 := U2
	448	[782]	GETUPVAL 	R15 U3 ; R15 := U3
	449	[782]	GETTABLE 	R15 R15 K15 ; R15 := R15["ENEMIES"]
	450	[782]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 460
	451	[782]	JMP      	460 ; PC := 460
	452	[783]	GETGLOBAL	R14 K55 ; R14 := 0x5bced4c4
	453	[783]	GETTABLE 	R14 R14 K56 ; R14 := R14[0xac1b386a]
	454	[783]	MOVE     	R15 R11 ; R15 := R11
	455	[783]	GETUPVAL 	R16 U6 ; R16 := U6
	456	[783]	GETUPVAL 	R17 U7 ; R17 := U7
	457	[783]	SUB      	R16 R16 R17 ; R16 := R16 - R17
	458	[783]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	459	[783]	MOVE     	R11 R14 ; R11 := R14
	460	[786]	LT       	0 K38 R11 ; if 0.000000 >= R11 then PC := 521
	461	[786]	JMP      	521 ; PC := 521
	462	[787]	LOADK    	R14 := 0.000000
	463	[788]	LOADK    	R15 := 1.000000
	464	[789]	GETUPVAL 	R16 U8 ; R16 := U8
	465	[789]	CALL     	R16 1 2 ; R16 := R16()
	466	[789]	TEST     	R16 0 ; if not R16 then PC := 470
	467	[789]	JMP      	470 ; PC := 470
	468	[791]	MOVE     	R15 R11 ; R15 := R11
	469	[792]	LOADK    	R11 := 1.000000
	470	[795]	NEWTABLE 	R16 0 0 ; R16 := {}
	471	[795]	SETTABLE 	R0 K80 R16 ; R0["LookupIds"] := R16
	472	[796]	LOADK    	R16 := 1.000000
	473	[796]	MOVE     	R17 R15 ; R17 := R15
	474	[796]	LOADK    	R18 := 1.000000
	475	[796]	FORPREP  	R16 496 ; R16 -= R18; PC := 496
	476	[797]	GETUPVAL 	R20 U15 ; R20 := U15
	477	[797]	MOVE     	R21 R0 ; R21 := R0
	478	[797]	MOVE     	R22 R11 ; R22 := R11
	479	[797]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	480	[798]	GETUPVAL 	R21 U9 ; R21 := U9
	481	[798]	SELF     	R21 R21 K82 ; R22 := R21; R21 := R21[0xbad4316f]
	482	[798]	MOVE     	R23 R20 ; R23 := R20
	483	[798]	OP_LOADBOOL	R24 0 0 ; R24 := false
	484	[798]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	485	[799]	GETGLOBAL	R21 K83 ; R21 := 0x33bdd652
	486	[799]	GETTABLE 	R21 R21 K84 ; R21 := R21[0x23d5322f]
	487	[799]	GETTABLE 	R22 R0 K80 ; R22 := R0["LookupIds"]
	488	[799]	GETTABLE 	R23 R20 K52 ; R23 := R20["Id"]
	489	[799]	CALL     	R21 3 1 ; R21(R22,R23)
	490	[801]	GETTABLE 	R21 R0 K37 ; R21 := R0["SellingPrice"]
	491	[801]	EQ       	1 R21 K5 ; if R21 == nil then PC := 496
	492	[801]	JMP      	496 ; PC := 496
	493	[802]	GETTABLE 	R21 R0 K37 ; R21 := R0["SellingPrice"]
	494	[802]	MUL      	R21 R11 R21 ; R21 := R11 * R21
	495	[802]	ADD      	R14 R14 R21 ; R14 := R14 + R21
	496	[796]	FORLOOP  	R16 476 ; R16 += R18; if R16 <= R17 then begin PC := 476; R19 := R16 end
	497	[806]	GETUPVAL 	R21 U8 ; R21 := U8
	498	[806]	CALL     	R21 1 2 ; R21 := R21()
	499	[806]	TEST     	R21 0 ; if not R21 then PC := 509
	500	[806]	JMP      	509 ; PC := 509
	501	[808]	GETUPVAL 	R21 U9 ; R21 := U9
	502	[808]	SETTABLE 	R21 K85 K40 ; R21["mSortingChanged"] := true
	503	[809]	GETUPVAL 	R21 U9 ; R21 := U9
	504	[809]	SELF     	R21 R21 K86 ; R22 := R21; R21 := R21[0x71e9ac81]
	505	[809]	LOADNIL  	R23 R23 ; R23 := nil
	506	[809]	OP_LOADBOOL	R24 0 0 ; R24 := false
	507	[809]	OP_LOADBOOL	R25 1 0 ; R25 := true
	508	[809]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	509	[812]	GETUPVAL 	R21 U16 ; R21 := U16
	510	[812]	MOVE     	R22 R14 ; R22 := R14
	511	[812]	CALL     	R21 2 1 ; R21(R22)
	512	[813]	GETUPVAL 	R21 U5 ; R21 := U5
	513	[813]	GETTABLE 	R21 R21 K41 ; R21 := R21[0x659d451f]
	514	[813]	GETGLOBAL	R22 K42 ; R22 := 0x0032441c
	515	[813]	GETTABLE 	R22 R22 K87 ; R22 := R22["UISound_ButtonSelect"]
	516	[813]	CALL     	R21 2 1 ; R21(R22)
	517	[814]	GETUPVAL 	R21 U17 ; R21 := U17
	518	[814]	MOVE     	R22 R0 ; R22 := R0
	519	[814]	CALL     	R21 2 1 ; R21(R22)
	520	[814]	JMP      	580 ; PC := 580
	521	[815]	GETUPVAL 	R21 U2 ; R21 := U2
	522	[815]	GETUPVAL 	R22 U3 ; R22 := U3
	523	[815]	GETTABLE 	R22 R22 K15 ; R22 := R22["ENEMIES"]
	524	[815]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 580
	525	[815]	JMP      	580 ; PC := 580
	526	[817]	GETUPVAL 	R21 U5 ; R21 := U5
	527	[817]	GETTABLE 	R21 R21 K25 ; R21 := R21[0xa53f5e12]
	528	[817]	GETGLOBAL	R22 K11 ; R22 := 0xae91e43b
	529	[817]	SELF     	R22 R22 K12 ; R23 := R22; R22 := R22[0x42b04007]
	530	[817]	LOADK    	R24 K59 ; R24 := "/Lotus/Language/SystemMessages/SyndicateStandingCapped"
	531	[817]	OP_LOADBOOL	R25 0 0 ; R25 := false
	532	[817]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	533	[817]	CALL     	R21 0 1 ; R21(R22,...)
	534	[818]	GETUPVAL 	R21 U5 ; R21 := U5
	535	[818]	GETTABLE 	R21 R21 K75 ; R21 := R21[0x5cc9f5a2]
	536	[818]	GETGLOBAL	R22 K11 ; R22 := 0xae91e43b
	537	[818]	LOADK    	R23 K76 ; R23 := "SellList.Total"
	538	[818]	CALL     	R21 3 1 ; R21(R22,R23)
	539	[819]	JMP      	580 ; PC := 580
	540	[820]	GETTABLE 	R21 R0 K1 ; R21 := R0["MarkedToSell"]
	541	[820]	TEST     	R21 0 ; if not R21 then PC := 580
	542	[820]	JMP      	580 ; PC := 580
	543	[821]	GETTABLE 	R21 R0 K80 ; R21 := R0["LookupIds"]
	544	[821]	LEN      	R21 R21 ; R21 := # R21
	545	[821]	LT       	0 K38 R21 ; if 0.000000 >= R21 then PC := 557
	546	[821]	JMP      	557 ; PC := 557
	547	[822]	GETUPVAL 	R21 U9 ; R21 := U9
	548	[822]	SELF     	R21 R21 K88 ; R22 := R21; R21 := R21[0xca30dfb6]
	549	[822]	GETTABLE 	R23 R0 K80 ; R23 := R0["LookupIds"]
	550	[822]	GETTABLE 	R23 R23 K51 ; R23 := R23[1.000000]
	551	[822]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	552	[823]	GETUPVAL 	R22 U18 ; R22 := U18
	553	[823]	MOVE     	R23 R21 ; R23 := R21
	554	[823]	MOVE     	R24 R0 ; R24 := R0
	555	[823]	CALL     	R22 3 1 ; R22(R23,R24)
	556	[823]	JMP      	543 ; PC := 543
	557	[825]	GETUPVAL 	R22 U5 ; R22 := U5
	558	[825]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x659d451f]
	559	[825]	GETGLOBAL	R23 K42 ; R23 := 0x0032441c
	560	[825]	GETTABLE 	R23 R23 K89 ; R23 := R23["UISound_WindowClose"]
	561	[825]	CALL     	R22 2 1 ; R22(R23)
	562	[826]	JMP      	580 ; PC := 580
	563	[828]	GETUPVAL 	R22 U18 ; R22 := U18
	564	[828]	MOVE     	R23 R0 ; R23 := R0
	565	[828]	GETUPVAL 	R24 U19 ; R24 := U19
	566	[828]	SELF     	R24 R24 K90 ; R25 := R24; R24 := R24[0xf73486b6]
	567	[828]	GETTABLE 	R26 R0 K91 ; R26 := R0["LookupId"]
	568	[828]	CALL     	R24 3 0 ; R24,... := R24(R25,R26)
	569	[828]	CALL     	R22 0 1 ; R22(R23,...)
	570	[829]	GETUPVAL 	R22 U5 ; R22 := U5
	571	[829]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x659d451f]
	572	[829]	GETGLOBAL	R23 K42 ; R23 := 0x0032441c
	573	[829]	GETTABLE 	R23 R23 K92 ; R23 := R23["UISound_Select"]
	574	[829]	CALL     	R22 2 1 ; R22(R23)
	575	[830]	GETUPVAL 	R22 U5 ; R22 := U5
	576	[830]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x659d451f]
	577	[830]	GETGLOBAL	R23 K42 ; R23 := 0x0032441c
	578	[830]	GETTABLE 	R23 R23 K89 ; R23 := R23["UISound_WindowClose"]
	579	[830]	CALL     	R22 2 1 ; R22(R23)
	580	[833]	GETUPVAL 	R22 U20 ; R22 := U20
	581	[833]	CALL     	R22 1 1 ; R22()
	582	[834]	RETURN   	R0 1 ; return 

function #24 <?:836,852> (53 instructions, 212 bytes at 0000021132315F20)
1 param, 10 slots, 7 upvalues, 0 locals, 16 constants, 0 functions
	1	[837]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[837]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[837]	JMP      	5 ; PC := 5
	4	[838]	RETURN   	R0 1 ; return 
	5	[841]	LOADNIL  	R1 R1 ; R1 := nil
	6	[842]	GETTABLE 	R2 R0 K2 ; R2 := R0["SellGrid"]
	7	[842]	TEST     	R2 0 ; if not R2 then PC := 14
	8	[842]	JMP      	14 ; PC := 14
	9	[843]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[844]	GETUPVAL 	R2 U2 ; R2 := U2
	11	[844]	GETTABLE 	R2 R2 K3 ; R2 := R2["SELL"]
	12	[844]	SETUPVAL 	R2 U1 ; U1 := R2
	13	[844]	JMP      	18 ; PC := 18
	14	[846]	GETUPVAL 	R1 U3 ; R1 := U3
	15	[847]	GETUPVAL 	R2 U2 ; R2 := U2
	16	[847]	GETTABLE 	R2 R2 K4 ; R2 := R2["INVENTORY"]
	17	[847]	SETUPVAL 	R2 U1 ; U1 := R2
	18	[850]	GETTABLE 	R2 R0 K2 ; R2 := R0["SellGrid"]
	19	[850]	TEST     	R2 1 ; if R2 then PC := 28
	20	[850]	JMP      	28 ; PC := 28
	21	[850]	GETTABLE 	R2 R0 K5 ; R2 := R0["LookupIds"]
	22	[850]	EQ       	1 R2 K1 ; if R2 == nil then PC := 28
	23	[850]	JMP      	28 ; PC := 28
	24	[850]	GETTABLE 	R2 R0 K5 ; R2 := R0["LookupIds"]
	25	[850]	LEN      	R2 R2 ; R2 := # R2
	26	[850]	LT       	1 K6 R2 ; if 0.000000 < R2 then PC := 29
	27	[850]	JMP      	29 ; PC := 29
	28	[850]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 29
	29	[850]	OP_LOADBOOL	R2 1 0 ; R2 := true
	30	[851]	GETUPVAL 	R3 U4 ; R3 := U4
	31	[851]	GETTABLE 	R3 R3 K7 ; R3 := R3[0xb496de90]
	32	[851]	GETGLOBAL	R4 K8 ; R4 := 0xae91e43b
	33	[851]	MOVE     	R5 R1 ; R5 := R1
	34	[851]	MOVE     	R6 R0 ; R6 := R0
	35	[851]	NEWTABLE 	R7 0 3 ; R7 := {}
	36	[851]	SETTABLE 	R7 K9 K10 ; R7["IsFocused"] := true
	37	[851]	SETTABLE 	R7 K11 R2 ; R7[0xae91e43b] := R2
	38	[851]	GETTABLE 	R8 R0 K13 ; R8 := R0["Locked"]
	39	[851]	TEST     	R8 0 ; if not R8 then PC := 46
	40	[851]	JMP      	46 ; PC := 46
	41	[851]	GETUPVAL 	R8 U5 ; R8 := U5
	42	[851]	GETUPVAL 	R9 U6 ; R9 := U6
	43	[851]	GETTABLE 	R9 R9 K14 ; R9 := R9["ENEMIES"]
	44	[851]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 49
	45	[851]	JMP      	49 ; PC := 49
	46	[851]	GETTABLE 	R8 R0 K15 ; R8 := R0["Hidden"]
	47	[851]	NOT      	R8 R8 ; R8 := not R8
	48	[851]	JMP      	51 ; PC := 51
	49	[851]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 50
	50	[851]	OP_LOADBOOL	R8 1 0 ; R8 := true
	51	[851]	SETTABLE 	R7 K12 R8 ; R7["ShowInfoPopup"] := R8
	52	[851]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	53	[852]	RETURN   	R0 1 ; return 

function #25 <?:854,860> (31 instructions, 124 bytes at 00000211323162A0)
1 param, 8 slots, 4 upvalues, 0 locals, 11 constants, 0 functions
	1	[855]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[855]	EQ       	1 R1 K1 ; if R1 == nil then PC := 31
	3	[855]	JMP      	31 ; PC := 31
	4	[856]	GETTABLE 	R1 R0 K2 ; R1 := R0["SellGrid"]
	5	[856]	TEST     	R1 1 ; if R1 then PC := 14
	6	[856]	JMP      	14 ; PC := 14
	7	[856]	GETTABLE 	R1 R0 K3 ; R1 := R0["LookupIds"]
	8	[856]	EQ       	1 R1 K1 ; if R1 == nil then PC := 14
	9	[856]	JMP      	14 ; PC := 14
	10	[856]	GETTABLE 	R1 R0 K3 ; R1 := R0["LookupIds"]
	11	[856]	LEN      	R1 R1 ; R1 := # R1
	12	[856]	LT       	1 K4 R1 ; if 0.000000 < R1 then PC := 15
	13	[856]	JMP      	15 ; PC := 15
	14	[856]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[856]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[857]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[857]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x06d055f9]
	18	[857]	GETTABLE 	R3 R0 K2 ; R3 := R0["SellGrid"]
	19	[857]	GETUPVAL 	R4 U1 ; R4 := U1
	20	[857]	GETUPVAL 	R5 U2 ; R5 := U2
	21	[857]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	22	[858]	GETUPVAL 	R3 U3 ; R3 := U3
	23	[858]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xb496de90]
	24	[858]	GETGLOBAL	R4 K7 ; R4 := 0xae91e43b
	25	[858]	MOVE     	R5 R2 ; R5 := R2
	26	[858]	MOVE     	R6 R0 ; R6 := R0
	27	[858]	NEWTABLE 	R7 0 2 ; R7 := {}
	28	[858]	SETTABLE 	R7 K8 K9 ; R7["IsFocused"] := false
	29	[858]	SETTABLE 	R7 K10 R1 ; R7["IsSelected"] := R1
	30	[858]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	31	[860]	RETURN   	R0 1 ; return 

function #26 <?:862,877> (30 instructions, 120 bytes at 0000021132316510)
1 param, 5 slots, 6 upvalues, 0 locals, 8 constants, 0 functions
	1	[863]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[863]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[863]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[863]	TEST     	R1 1 ; if R1 then PC := 11
	5	[863]	JMP      	11 ; PC := 11
	6	[864]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[864]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xe4162eed]
	8	[864]	LOADK    	R3 K2 ; R3 := "TransitionOut"
	9	[864]	LOADK    	R4 K3 ; R4 := ""
	10	[864]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	11	[867]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 14
	12	[867]	JMP      	14 ; PC := 14
	13	[867]	JMP      	30 ; PC := 30
	14	[869]	TEST     	R0 0 ; if not R0 then PC := 26
	15	[869]	JMP      	26 ; PC := 26
	16	[870]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[870]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x7c09c373]
	18	[870]	CALL     	R1 2 1 ; R1(R2)
	19	[871]	GETUPVAL 	R1 U2 ; R1 := U2
	20	[871]	GETUPVAL 	R2 U3 ; R2 := U3
	21	[871]	UNM      	R2 R2 ; R2 := ^ R2
	22	[871]	CALL     	R1 2 1 ; R1(R2)
	23	[873]	GETUPVAL 	R1 U4 ; R1 := U4
	24	[873]	CALL     	R1 1 1 ; R1()
	25	[873]	JMP      	30 ; PC := 30
	26	[875]	GETUPVAL 	R1 U5 ; R1 := U5
	27	[875]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe0cba3ca]
	28	[875]	LOADK    	R2 K7 ; R2 := "/Lotus/Language/Menu/Global_PurchaseFailed"
	29	[875]	CALL     	R1 2 1 ; R1(R2)
	30	[877]	RETURN   	R0 1 ; return 

function #27 <?:879,898> (44 instructions, 176 bytes at 0000021132316750)
2 params, 8 slots, 5 upvalues, 0 locals, 11 constants, 0 functions
	1	[880]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[880]	GETUPVAL 	R3 U0 ; R3 := U0
	3	[880]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[880]	TEST     	R2 1 ; if R2 then PC := 11
	5	[880]	JMP      	11 ; PC := 11
	6	[881]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[881]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xe4162eed]
	8	[881]	LOADK    	R4 K2 ; R4 := "TransitionOut"
	9	[881]	LOADK    	R5 K3 ; R5 := ""
	10	[881]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[884]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 14
	12	[884]	JMP      	14 ; PC := 14
	13	[884]	JMP      	42 ; PC := 42
	14	[886]	TEST     	R0 0 ; if not R0 then PC := 38
	15	[886]	JMP      	38 ; PC := 38
	16	[887]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[887]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xca30dfb6]
	18	[887]	GETUPVAL 	R4 U2 ; R4 := U2
	19	[887]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	20	[888]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	21	[888]	MOVE     	R4 R2 ; R4 := R2
	22	[888]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[888]	TEST     	R3 1 ; if R3 then PC := 42
	24	[888]	JMP      	42 ; PC := 42
	25	[889]	GETTABLE 	R3 R1 K7 ; R3 := R1["mQuantity"]
	26	[889]	SETTABLE 	R2 K6 R3 ; R2["Count"] := R3
	27	[890]	GETUPVAL 	R3 U1 ; R3 := U1
	28	[890]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x71e9ac81]
	29	[890]	LOADNIL  	R5 R5 ; R5 := nil
	30	[890]	OP_LOADBOOL	R6 1 0 ; R6 := true
	31	[890]	OP_LOADBOOL	R7 1 0 ; R7 := true
	32	[890]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	33	[891]	GETUPVAL 	R3 U3 ; R3 := U3
	34	[891]	MOVE     	R4 R2 ; R4 := R2
	35	[891]	OP_LOADBOOL	R5 1 0 ; R5 := true
	36	[891]	CALL     	R3 3 1 ; R3(R4,R5)
	37	[892]	JMP      	42 ; PC := 42
	38	[894]	GETUPVAL 	R3 U4 ; R3 := U4
	39	[894]	GETTABLE 	R3 R3 K9 ; R3 := R3[0xe0cba3ca]
	40	[894]	LOADK    	R4 K10 ; R4 := "/Lotus/Language/Menu/Global_PurchaseFailed"
	41	[894]	CALL     	R3 2 1 ; R3(R4)
	42	[897]	LOADNIL  	R3 R3 ; R3 := nil
	43	[897]	SETUPVAL 	R3 U2 ; U2 := R3
	44	[898]	RETURN   	R0 1 ; return 

function #28 <?:900,921> (105 instructions, 420 bytes at 0000021132316A20)
3 params, 7 slots, 10 upvalues, 0 locals, 30 constants, 0 functions
	1	[901]	GETUPVAL 	R3 U1 ; R3 := U1
	2	[901]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x06d055f9]
	3	[901]	GETTABLE 	R4 R0 K1 ; R4 := R0["SellGrid"]
	4	[901]	GETUPVAL 	R5 U2 ; R5 := U2
	5	[901]	GETTABLE 	R5 R5 K2 ; R5 := R5["SELL"]
	6	[901]	GETUPVAL 	R6 U2 ; R6 := U2
	7	[901]	GETTABLE 	R6 R6 K3 ; R6 := R6["INVENTORY"]
	8	[901]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	9	[901]	SETUPVAL 	R3 U0 ; U0 := R3
	10	[903]	GETTABLE 	R3 R0 K4 ; R3 := R0["BuySlot"]
	11	[903]	TEST     	R3 0 ; if not R3 then PC := 29
	12	[903]	JMP      	29 ; PC := 29
	13	[904]	GETGLOBAL	R3 K5 ; R3 := _T
	14	[904]	NEWTABLE 	R4 0 2 ; R4 := {}
	15	[904]	NEWTABLE 	R5 0 1 ; R5 := {}
	16	[904]	GETTABLE 	R6 R0 K8 ; R6 := R0["StoreItem"]
	17	[904]	SETTABLE 	R5 K8 R6 ; R5["StoreItem"] := R6
	18	[904]	SETTABLE 	R4 K7 R5 ; R4["ITEM"] := R5
	19	[904]	GETUPVAL 	R5 U3 ; R5 := U3
	20	[904]	SETTABLE 	R4 K9 R5 ; R4["CALLBACK"] := R5
	21	[904]	SETTABLE 	R3 K6 R4 ; R3["marketDetailedViewParms"] := R4
	22	[905]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	23	[905]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x1fd6abd0]
	24	[905]	GETGLOBAL	R5 K12 ; R5 := 0x0032441c
	25	[905]	GETTABLE 	R5 R5 K13 ; R5 := R5["UIMovie_DetailedPurchaseDialog"]
	26	[905]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[905]	SETUPVAL 	R3 U4 ; U4 := R3
	28	[905]	JMP      	105 ; PC := 105
	29	[906]	GETTABLE 	R3 R0 K14 ; R3 := R0["EmptySlot"]
	30	[906]	TEST     	R3 1 ; if R3 then PC := 68
	31	[906]	JMP      	68 ; PC := 68
	32	[906]	GETTABLE 	R3 R0 K15 ; R3 := R0["Filler"]
	33	[906]	TEST     	R3 1 ; if R3 then PC := 68
	34	[906]	JMP      	68 ; PC := 68
	35	[906]	GETTABLE 	R3 R0 K16 ; R3 := R0["Locked"]
	36	[906]	TEST     	R3 1 ; if R3 then PC := 68
	37	[906]	JMP      	68 ; PC := 68
	38	[906]	GETTABLE 	R3 R0 K17 ; R3 := R0["Hidden"]
	39	[906]	TEST     	R3 1 ; if R3 then PC := 68
	40	[906]	JMP      	68 ; PC := 68
	41	[906]	GETTABLE 	R3 R0 K18 ; R3 := R0["Plat"]
	42	[906]	TEST     	R3 1 ; if R3 then PC := 68
	43	[906]	JMP      	68 ; PC := 68
	44	[907]	GETUPVAL 	R3 U5 ; R3 := U5
	45	[907]	GETUPVAL 	R4 U6 ; R4 := U6
	46	[907]	GETTABLE 	R4 R4 K19 ; R4 := R4["TRADE_ITEMS"]
	47	[907]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 52
	48	[907]	JMP      	52 ; PC := 52
	49	[907]	GETTABLE 	R3 R0 K20 ; R3 := R0["Card"]
	50	[907]	EQ       	0 R3 K21 ; if R3 ~= nil then PC := 68
	51	[907]	JMP      	68 ; PC := 68
	52	[908]	GETUPVAL 	R3 U5 ; R3 := U5
	53	[908]	GETUPVAL 	R4 U6 ; R4 := U6
	54	[908]	GETTABLE 	R4 R4 K22 ; R4 := R4["TRADE_MODS"]
	55	[908]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 60
	56	[908]	JMP      	60 ; PC := 60
	57	[908]	GETTABLE 	R3 R0 K20 ; R3 := R0["Card"]
	58	[908]	EQ       	1 R3 K21 ; if R3 == nil then PC := 68
	59	[908]	JMP      	68 ; PC := 68
	60	[909]	GETUPVAL 	R3 U5 ; R3 := U5
	61	[909]	GETUPVAL 	R4 U6 ; R4 := U6
	62	[909]	GETTABLE 	R4 R4 K23 ; R4 := R4["SYNDDONATE"]
	63	[909]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 70
	64	[909]	JMP      	70 ; PC := 70
	65	[909]	GETTABLE 	R3 R0 K24 ; R3 := R0["ShadowIcon"]
	66	[909]	TEST     	R3 0 ; if not R3 then PC := 70
	67	[909]	JMP      	70 ; PC := 70
	68	[912]	RETURN   	R0 1 ; return 
	69	[912]	JMP      	105 ; PC := 105
	70	[913]	GETUPVAL 	R3 U5 ; R3 := U5
	71	[913]	GETUPVAL 	R4 U6 ; R4 := U6
	72	[913]	GETTABLE 	R4 R4 K25 ; R4 := R4["DECODONATE"]
	73	[913]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 80
	74	[913]	JMP      	80 ; PC := 80
	75	[913]	GETUPVAL 	R3 U5 ; R3 := U5
	76	[913]	GETUPVAL 	R4 U6 ; R4 := U6
	77	[913]	GETTABLE 	R4 R4 K26 ; R4 := R4["RESDONATE"]
	78	[913]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 101
	79	[913]	JMP      	101 ; PC := 101
	80	[913]	GETTABLE 	R3 R0 K27 ; R3 := R0["Count"]
	81	[913]	EQ       	0 R3 K28 ; if R3 ~= 0.000000 then PC := 101
	82	[913]	JMP      	101 ; PC := 101
	83	[915]	GETTABLE 	R3 R0 K29 ; R3 := R0["Id"]
	84	[915]	SETUPVAL 	R3 U7 ; U7 := R3
	85	[916]	GETGLOBAL	R3 K5 ; R3 := _T
	86	[916]	NEWTABLE 	R4 0 2 ; R4 := {}
	87	[916]	NEWTABLE 	R5 0 1 ; R5 := {}
	88	[916]	GETTABLE 	R6 R0 K8 ; R6 := R0["StoreItem"]
	89	[916]	SETTABLE 	R5 K8 R6 ; R5["StoreItem"] := R6
	90	[916]	SETTABLE 	R4 K7 R5 ; R4["ITEM"] := R5
	91	[916]	GETUPVAL 	R5 U8 ; R5 := U8
	92	[916]	SETTABLE 	R4 K9 R5 ; R4["CALLBACK"] := R5
	93	[916]	SETTABLE 	R3 K6 R4 ; R3["marketDetailedViewParms"] := R4
	94	[917]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	95	[917]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x1fd6abd0]
	96	[917]	GETGLOBAL	R5 K12 ; R5 := 0x0032441c
	97	[917]	GETTABLE 	R5 R5 K13 ; R5 := R5["UIMovie_DetailedPurchaseDialog"]
	98	[917]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	99	[917]	SETUPVAL 	R3 U4 ; U4 := R3
	100	[917]	JMP      	105 ; PC := 105
	101	[919]	GETUPVAL 	R3 U9 ; R3 := U9
	102	[919]	MOVE     	R4 R0 ; R4 := R0
	103	[919]	MOVE     	R5 R2 ; R5 := R2
	104	[919]	CALL     	R3 3 1 ; R3(R4,R5)
	105	[921]	RETURN   	R0 1 ; return 

function #29 <?:923,929> (17 instructions, 68 bytes at 0000021132317050)
2 params, 6 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[924]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[924]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xbf9f30a4]
	3	[924]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	4	[924]	GETUPVAL 	R4 U1 ; R4 := U1
	5	[924]	MOVE     	R5 R0 ; R5 := R0
	6	[924]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[926]	EQ       	1 R1 K2 ; if R1 == nil then PC := 17
	8	[926]	JMP      	17 ; PC := 17
	9	[926]	GETGLOBAL	R2 K3 ; R2 := _T
	10	[926]	GETTABLE 	R2 R2 K4 ; R2 := R2["CheckModInstalled"]
	11	[926]	EQ       	1 R2 K2 ; if R2 == nil then PC := 17
	12	[926]	JMP      	17 ; PC := 17
	13	[927]	GETGLOBAL	R2 K3 ; R2 := _T
	14	[927]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x55ce2198]
	15	[927]	MOVE     	R3 R1 ; R3 := R1
	16	[927]	CALL     	R2 2 1 ; R2(R3)
	17	[929]	RETURN   	R0 1 ; return 

function #30 <?:931,933> (7 instructions, 28 bytes at 0000021132317250)
2 params, 6 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[932]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[932]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xbf9f30a4]
	3	[932]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	4	[932]	GETUPVAL 	R4 U1 ; R4 := U1
	5	[932]	MOVE     	R5 R0 ; R5 := R0
	6	[932]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[933]	RETURN   	R0 1 ; return 

function #31 <?:935,995> (233 instructions, 932 bytes at 0000021132317370)
1 param, 10 slots, 7 upvalues, 0 locals, 65 constants, 0 functions
	1	[936]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[936]	EQ       	1 R1 K1 ; if R1 == nil then PC := 10
	3	[936]	JMP      	10 ; PC := 10
	4	[936]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	5	[936]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xa7ec3e8a]
	6	[936]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	7	[936]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	8	[936]	TEST     	R1 1 ; if R1 then PC := 11
	9	[936]	JMP      	11 ; PC := 11
	10	[937]	RETURN   	R0 1 ; return 
	11	[940]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[940]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xed1ab921]
	13	[940]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[940]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 22
	15	[940]	JMP      	22 ; PC := 22
	16	[940]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[940]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xed1ab921]
	18	[940]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[940]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 22
	20	[940]	JMP      	22 ; PC := 22
	21	[940]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 22
	22	[940]	OP_LOADBOOL	R1 1 0 ; R1 := true
	23	[941]	GETTABLE 	R2 R0 K5 ; R2 := R0["SellGrid"]
	24	[941]	TEST     	R2 1 ; if R2 then PC := 33
	25	[941]	JMP      	33 ; PC := 33
	26	[941]	GETTABLE 	R2 R0 K6 ; R2 := R0["LookupIds"]
	27	[941]	EQ       	1 R2 K1 ; if R2 == nil then PC := 33
	28	[941]	JMP      	33 ; PC := 33
	29	[941]	GETTABLE 	R2 R0 K6 ; R2 := R0["LookupIds"]
	30	[941]	LEN      	R2 R2 ; R2 := # R2
	31	[941]	LT       	1 K7 R2 ; if 0.000000 < R2 then PC := 34
	32	[941]	JMP      	34 ; PC := 34
	33	[941]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 34
	34	[941]	OP_LOADBOOL	R2 1 0 ; R2 := true
	35	[942]	NEWTABLE 	R3 0 4 ; R3 := {}
	36	[942]	SETTABLE 	R3 K8 K9 ; R3["HideCountThreshold"] := 1.000000
	37	[942]	GETTABLE 	R4 R0 K11 ; R4 := R0["Filler"]
	38	[942]	TEST     	R4 1 ; if R4 then PC := 41
	39	[942]	JMP      	41 ; PC := 41
	40	[942]	GETTABLE 	R4 R0 K12 ; R4 := R0["EmptySlot"]
	41	[942]	SETTABLE 	R3 K10 R4 ; R3["IsFiller"] := R4
	42	[942]	SETTABLE 	R3 K13 R1 ; R3["IsFocused"] := R1
	43	[942]	SETTABLE 	R3 K14 R2 ; R3["IsSelected"] := R2
	44	[943]	NEWTABLE 	R4 0 0 ; R4 := {}
	45	[943]	SETTABLE 	R3 K15 R4 ; R3["OwnedInfo"] := R4
	46	[944]	GETTABLE 	R4 R0 K16 ; R4 := R0["BuySlot"]
	47	[944]	TEST     	R4 1 ; if R4 then PC := 76
	48	[944]	JMP      	76 ; PC := 76
	49	[944]	GETUPVAL 	R4 U2 ; R4 := U2
	50	[944]	GETUPVAL 	R5 U3 ; R5 := U3
	51	[944]	GETTABLE 	R5 R5 K17 ; R5 := R5["ENEMIES"]
	52	[944]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 76
	53	[944]	JMP      	76 ; PC := 76
	54	[944]	GETUPVAL 	R4 U2 ; R4 := U2
	55	[944]	GETUPVAL 	R5 U3 ; R5 := U3
	56	[944]	GETTABLE 	R5 R5 K18 ; R5 := R5["SHARDS"]
	57	[944]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 76
	58	[944]	JMP      	76 ; PC := 76
	59	[944]	GETUPVAL 	R4 U2 ; R4 := U2
	60	[944]	GETUPVAL 	R5 U3 ; R5 := U3
	61	[944]	GETTABLE 	R5 R5 K19 ; R5 := R5["DECODONATE"]
	62	[944]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 76
	63	[944]	JMP      	76 ; PC := 76
	64	[944]	GETUPVAL 	R4 U2 ; R4 := U2
	65	[944]	GETUPVAL 	R5 U3 ; R5 := U3
	66	[944]	GETTABLE 	R5 R5 K20 ; R5 := R5["RESDONATE"]
	67	[944]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 76
	68	[944]	JMP      	76 ; PC := 76
	69	[944]	GETUPVAL 	R4 U2 ; R4 := U2
	70	[944]	GETUPVAL 	R5 U3 ; R5 := U3
	71	[944]	GETTABLE 	R5 R5 K21 ; R5 := R5["SHIP_PARTS"]
	72	[944]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 76
	73	[944]	JMP      	76 ; PC := 76
	74	[945]	NEWTABLE 	R4 0 0 ; R4 := {}
	75	[945]	SETTABLE 	R3 K22 R4 ; R3["SellInfo"] := R4
	76	[947]	GETUPVAL 	R4 U2 ; R4 := U2
	77	[947]	GETUPVAL 	R5 U3 ; R5 := U3
	78	[947]	GETTABLE 	R5 R5 K23 ; R5 := R5["PRIMEPARTS"]
	79	[947]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 86
	80	[947]	JMP      	86 ; PC := 86
	81	[948]	GETTABLE 	R4 R3 K22 ; R4 := R3["SellInfo"]
	82	[948]	GETUPVAL 	R5 U4 ; R5 := U4
	83	[948]	GETTABLE 	R5 R5 K25 ; R5 := R5["LABEL_TYPE_DUCATS"]
	84	[948]	SETTABLE 	R4 K24 R5 ; R4["LabelType"] := R5
	85	[948]	JMP      	105 ; PC := 105
	86	[949]	GETUPVAL 	R4 U2 ; R4 := U2
	87	[949]	GETUPVAL 	R5 U3 ; R5 := U3
	88	[949]	GETTABLE 	R5 R5 K26 ; R5 := R5["TREASURE"]
	89	[949]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 101
	90	[949]	JMP      	101 ; PC := 101
	91	[949]	GETUPVAL 	R4 U2 ; R4 := U2
	92	[949]	GETUPVAL 	R5 U3 ; R5 := U3
	93	[949]	GETTABLE 	R5 R5 K27 ; R5 := R5["SHIP_SCRAP"]
	94	[949]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 101
	95	[949]	JMP      	101 ; PC := 101
	96	[949]	GETUPVAL 	R4 U2 ; R4 := U2
	97	[949]	GETUPVAL 	R5 U3 ; R5 := U3
	98	[949]	GETTABLE 	R5 R5 K28 ; R5 := R5["SHIP_RAW"]
	99	[949]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 105
	100	[949]	JMP      	105 ; PC := 105
	101	[950]	GETTABLE 	R4 R3 K22 ; R4 := R3["SellInfo"]
	102	[950]	GETUPVAL 	R5 U4 ; R5 := U4
	103	[950]	GETTABLE 	R5 R5 K29 ; R5 := R5["LABEL_TYPE_ENDO"]
	104	[950]	SETTABLE 	R4 K24 R5 ; R4["LabelType"] := R5
	105	[953]	GETUPVAL 	R4 U2 ; R4 := U2
	106	[953]	GETUPVAL 	R5 U3 ; R5 := U3
	107	[953]	GETTABLE 	R5 R5 K30 ; R5 := R5["SYNDDONATE"]
	108	[953]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 127
	109	[953]	JMP      	127 ; PC := 127
	110	[953]	GETTABLE 	R4 R0 K11 ; R4 := R0["Filler"]
	111	[953]	TEST     	R4 1 ; if R4 then PC := 127
	112	[953]	JMP      	127 ; PC := 127
	113	[954]	GETTABLE 	R4 R3 K22 ; R4 := R3["SellInfo"]
	114	[954]	GETUPVAL 	R5 U4 ; R5 := U4
	115	[954]	GETTABLE 	R5 R5 K31 ; R5 := R5["LABEL_TYPE_REPUTATION"]
	116	[954]	SETTABLE 	R4 K24 R5 ; R4["LabelType"] := R5
	117	[955]	GETTABLE 	R4 R0 K33 ; R4 := R0["RawItem"]
	118	[955]	GETTABLE 	R4 R4 K34 ; R4 := R4["mStanding"]
	119	[955]	SETTABLE 	R0 K32 R4 ; R0["SellingPrice"] := R4
	120	[956]	SETTABLE 	R3 K8 K7 ; R3["HideCountThreshold"] := 0.000000
	121	[957]	GETTABLE 	R4 R3 K15 ; R4 := R3["OwnedInfo"]
	122	[957]	SETTABLE 	R4 K35 K36 ; R4["mShowOne"] := true
	123	[958]	GETTABLE 	R4 R0 K37 ; R4 := R0["Count"]
	124	[958]	EQ       	0 R4 K7 ; if R4 ~= 0.000000 then PC := 127
	125	[958]	JMP      	127 ; PC := 127
	126	[959]	SETTABLE 	R0 K38 K36 ; R0["ShadowIcon"] := true
	127	[963]	GETUPVAL 	R4 U2 ; R4 := U2
	128	[963]	GETUPVAL 	R5 U3 ; R5 := U3
	129	[963]	GETTABLE 	R5 R5 K39 ; R5 := R5["FISH"]
	130	[963]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 150
	131	[963]	JMP      	150 ; PC := 150
	132	[963]	GETTABLE 	R4 R0 K11 ; R4 := R0["Filler"]
	133	[963]	TEST     	R4 1 ; if R4 then PC := 150
	134	[963]	JMP      	150 ; PC := 150
	135	[965]	GETGLOBAL	R4 K40 ; R4 := _T
	136	[965]	GETTABLE 	R4 R4 K41 ; R4 := R4["FishInvInfo"]
	137	[965]	GETTABLE 	R4 R4 K42 ; R4 := R4["ShowRep"]
	138	[965]	TEST     	R4 0 ; if not R4 then PC := 149
	139	[965]	JMP      	149 ; PC := 149
	140	[966]	GETTABLE 	R4 R3 K22 ; R4 := R3["SellInfo"]
	141	[966]	GETUPVAL 	R5 U4 ; R5 := U4
	142	[966]	GETTABLE 	R5 R5 K31 ; R5 := R5["LABEL_TYPE_REPUTATION"]
	143	[966]	SETTABLE 	R4 K24 R5 ; R4["LabelType"] := R5
	144	[967]	GETTABLE 	R4 R0 K43 ; R4 := R0["StoreItem"]
	145	[967]	SELF     	R4 R4 K44 ; R5 := R4; R4 := R4[0xc928a335]
	146	[967]	CALL     	R4 2 2 ; R4 := R4(R5)
	147	[967]	SETTABLE 	R0 K32 R4 ; R0["SellingPrice"] := R4
	148	[967]	JMP      	150 ; PC := 150
	149	[969]	SETTABLE 	R3 K22 K1 ; R3["SellInfo"] := nil
	150	[973]	GETUPVAL 	R4 U2 ; R4 := U2
	151	[973]	GETUPVAL 	R5 U3 ; R5 := U3
	152	[973]	GETTABLE 	R5 R5 K19 ; R5 := R5["DECODONATE"]
	153	[973]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 163
	154	[973]	JMP      	163 ; PC := 163
	155	[973]	GETUPVAL 	R4 U2 ; R4 := U2
	156	[973]	GETUPVAL 	R5 U3 ; R5 := U3
	157	[973]	GETTABLE 	R5 R5 K20 ; R5 := R5["RESDONATE"]
	158	[973]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 163
	159	[973]	JMP      	163 ; PC := 163
	160	[974]	GETTABLE 	R4 R3 K15 ; R4 := R3["OwnedInfo"]
	161	[974]	SETTABLE 	R4 K45 K46 ; R4["TagOverride"] := "/Lotus/Language/Menu/Crafting_Owned_Brief"
	162	[974]	JMP      	175 ; PC := 175
	163	[976]	GETTABLE 	R4 R0 K37 ; R4 := R0["Count"]
	164	[976]	EQ       	1 R4 K1 ; if R4 == nil then PC := 169
	165	[976]	JMP      	169 ; PC := 169
	166	[976]	GETTABLE 	R4 R0 K37 ; R4 := R0["Count"]
	167	[976]	LT       	1 K7 R4 ; if 0.000000 < R4 then PC := 170
	168	[976]	JMP      	170 ; PC := 170
	169	[976]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 170
	170	[976]	OP_LOADBOOL	R4 1 0 ; R4 := true
	171	[976]	SETTABLE 	R3 K47 R4 ; R3["HidePrice"] := R4
	172	[977]	SETTABLE 	R3 K8 K7 ; R3["HideCountThreshold"] := 0.000000
	173	[978]	GETTABLE 	R4 R3 K15 ; R4 := R3["OwnedInfo"]
	174	[978]	SETTABLE 	R4 K35 K36 ; R4["mShowOne"] := true
	175	[981]	GETTABLE 	R4 R0 K12 ; R4 := R0["EmptySlot"]
	176	[981]	TEST     	R4 0 ; if not R4 then PC := 184
	177	[981]	JMP      	184 ; PC := 184
	178	[982]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	179	[982]	SELF     	R4 R4 K49 ; R5 := R4; R4 := R4[0x42b04007]
	180	[982]	LOADK    	R6 K50 ; R6 := "/Lotus/Language/Menu/OpenChamber"
	181	[982]	OP_LOADBOOL	R7 0 0 ; R7 := false
	182	[982]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	183	[982]	SETTABLE 	R3 K48 R4 ; R3["NameOverride"] := R4
	184	[984]	GETTABLE 	R4 R0 K51 ; R4 := R0["SpecialPrice"]
	185	[984]	EQ       	1 R4 K1 ; if R4 == nil then PC := 193
	186	[984]	JMP      	193 ; PC := 193
	187	[985]	NEWTABLE 	R4 0 2 ; R4 := {}
	188	[985]	GETTABLE 	R5 R0 K53 ; R5 := R0["PriceLabelType"]
	189	[985]	SETTABLE 	R4 K24 R5 ; R4["LabelType"] := R5
	190	[985]	GETTABLE 	R5 R0 K51 ; R5 := R0["SpecialPrice"]
	191	[985]	SETTABLE 	R4 K54 R5 ; R4["Price"] := R5
	192	[985]	SETTABLE 	R3 K52 R4 ; R3[0x00000000] := R4
	193	[987]	GETTABLE 	R4 R0 K55 ; R4 := R0["Locked"]
	194	[987]	SETTABLE 	R3 K55 R4 ; R3["Locked"] := R4
	195	[988]	GETTABLE 	R4 R0 K56 ; R4 := R0["HideLockIcon"]
	196	[988]	SETTABLE 	R3 K56 R4 ; R3["HideLockIcon"] := R4
	197	[989]	GETTABLE 	R4 R0 K57 ; R4 := R0["LockedMsg"]
	198	[989]	SETTABLE 	R3 K57 R4 ; R3["LockedMsg"] := R4
	199	[990]	GETUPVAL 	R4 U2 ; R4 := U2
	200	[990]	GETUPVAL 	R5 U3 ; R5 := U3
	201	[990]	GETTABLE 	R5 R5 K59 ; R5 := R5["TRADE_MODS"]
	202	[990]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 210
	203	[990]	JMP      	210 ; PC := 210
	204	[990]	GETUPVAL 	R4 U5 ; R4 := U5
	205	[990]	GETTABLE 	R4 R4 K60 ; R4 := R4[0xf5d68fd7]
	206	[990]	GETTABLE 	R5 R0 K61 ; R5 := R0["Card"]
	207	[990]	CALL     	R4 2 2 ; R4 := R4(R5)
	208	[990]	NOT      	R4 R4 ; R4 := not R4
	209	[990]	JMP      	212 ; PC := 212
	210	[990]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 211
	211	[990]	OP_LOADBOOL	R4 1 0 ; R4 := true
	212	[990]	SETTABLE 	R3 K58 R4 ; R3["HideOwned"] := R4
	213	[992]	GETUPVAL 	R4 U6 ; R4 := U6
	214	[992]	GETTABLE 	R4 R4 K63 ; R4 := R4[0x06d055f9]
	215	[992]	GETTABLE 	R5 R0 K12 ; R5 := R0["EmptySlot"]
	216	[992]	LOADK    	R6 := 50.000000
	217	[992]	LOADK    	R7 := 100.000000
	218	[992]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	219	[992]	SETTABLE 	R0 K62 R4 ; R0["NameAlpha"] := R4
	220	[993]	GETUPVAL 	R4 U6 ; R4 := U6
	221	[993]	GETTABLE 	R4 R4 K63 ; R4 := R4[0x06d055f9]
	222	[993]	GETTABLE 	R5 R0 K5 ; R5 := R0["SellGrid"]
	223	[993]	GETUPVAL 	R6 U0 ; R6 := U0
	224	[993]	GETUPVAL 	R7 U1 ; R7 := U1
	225	[993]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	226	[994]	GETUPVAL 	R5 U4 ; R5 := U4
	227	[994]	GETTABLE 	R5 R5 K64 ; R5 := R5[0xc339daf7]
	228	[994]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	229	[994]	MOVE     	R7 R4 ; R7 := R4
	230	[994]	MOVE     	R8 R0 ; R8 := R0
	231	[994]	MOVE     	R9 R3 ; R9 := R3
	232	[994]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	233	[995]	RETURN   	R0 1 ; return 

function #32 <?:997,999> (18 instructions, 72 bytes at 0000021132317FF0)
0 params, 2 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[998]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[998]	CALL     	R0 1 2 ; R0 := R0()
	3	[998]	TEST     	R0 1 ; if R0 then PC := 17
	4	[998]	JMP      	17 ; PC := 17
	5	[998]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[998]	GETUPVAL 	R1 U2 ; R1 := U2
	7	[998]	GETTABLE 	R1 R1 K0 ; R1 := R1["INVENTORY"]
	8	[998]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 16
	9	[998]	JMP      	16 ; PC := 16
	10	[998]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[998]	GETUPVAL 	R1 U2 ; R1 := U2
	12	[998]	GETTABLE 	R1 R1 K1 ; R1 := R1["RESDONATE"]
	13	[998]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 16
	14	[998]	JMP      	16 ; PC := 16
	15	[998]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 16
	16	[998]	OP_LOADBOOL	R0 1 0 ; R0 := true
	17	[998]	RETURN   	R0 2 ; return R0 
	18	[999]	RETURN   	R0 1 ; return 

function #33 <?:1001,1003> (5 instructions, 20 bytes at 0000021132318170)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1002]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1002]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x3776007c]
	3	[1002]	MOVE     	R2 R0 ; R2 := R0
	4	[1002]	CALL     	R1 2 1 ; R1(R2)
	5	[1003]	RETURN   	R0 1 ; return 

function #34 <?:1005,1062> (245 instructions, 980 bytes at 0000021132318280)
1 param, 55 slots, 7 upvalues, 0 locals, 44 constants, 0 functions
	1	[1006]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[1006]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x91a24e4b]
	3	[1006]	LOADK    	R3 K2 ; R3 := "SellList"
	4	[1006]	LOADK    	R4 := 0.000000
	5	[1006]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[1006]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	7	[1006]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x91a24e4b]
	8	[1006]	LOADK    	R4 K3 ; R4 := "InventoryGrid"
	9	[1006]	LOADK    	R5 := 0.000000
	10	[1006]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	11	[1006]	SUB      	R1 R1 R2 ; R1 := R1 - R2
	12	[1006]	SUB      	R1 R1 K4 ; R1 := R1 - 45.000000
	13	[1007]	GETUPVAL 	R2 U0 ; R2 := U0
	14	[1007]	GETTABLE 	R2 R2 K5 ; R2 := R2["Width"]
	15	[1007]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 47
	16	[1007]	JMP      	47 ; PC := 47
	17	[1008]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	18	[1008]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x67bc869f]
	19	[1008]	LOADK    	R4 K7 ; R4 := "InventoryGrid.Bounds"
	20	[1008]	LOADK    	R5 := 12.000000
	21	[1008]	MOVE     	R6 R1 ; R6 := R1
	22	[1008]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	23	[1009]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	24	[1009]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x67bc869f]
	25	[1009]	LOADK    	R4 K7 ; R4 := "InventoryGrid.Bounds"
	26	[1009]	LOADK    	R5 := 13.000000
	27	[1009]	LOADK    	R6 := 640.000000
	28	[1009]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	29	[1010]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	30	[1010]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xaade900e]
	31	[1010]	LOADK    	R4 K7 ; R4 := "InventoryGrid.Bounds"
	32	[1010]	LOADK    	R5 := 11.000000
	33	[1010]	OP_LOADBOOL	R6 0 0 ; R6 := false
	34	[1010]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	35	[1011]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[1011]	SETTABLE 	R2 K5 R1 ; R2["Width"] := R1
	37	[1012]	GETUPVAL 	R2 U1 ; R2 := U1
	38	[1012]	GETUPVAL 	R3 U0 ; R3 := U0
	39	[1012]	CALL     	R2 2 1 ; R2(R3)
	40	[1014]	TEST     	R0 1 ; if R0 then PC := 47
	41	[1014]	JMP      	47 ; PC := 47
	42	[1015]	GETUPVAL 	R2 U0 ; R2 := U0
	43	[1015]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x71e9ac81]
	44	[1015]	LOADNIL  	R4 R5 ; R4 := R5 := nil
	45	[1015]	OP_LOADBOOL	R6 1 0 ; R6 := true
	46	[1015]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	47	[1019]	GETUPVAL 	R2 U2 ; R2 := U2
	48	[1019]	NEWTABLE 	R3 6 0 ; R3 := {}
	49	[1019]	GETGLOBAL	R4 K11 ; R4 := 0x0f20c9bd
	50	[1019]	GETGLOBAL	R5 K12 ; R5 := 0x5b54ec72
	51	[1019]	GETGLOBAL	R6 K13 ; R6 := 0x09b6dacc
	52	[1019]	GETGLOBAL	R7 K14 ; R7 := 0x70f1a9cd
	53	[1019]	GETGLOBAL	R8 K15 ; R8 := 0x0032441c
	54	[1019]	GETTABLE 	R8 R8 K16 ; R8 := R8["UIMaterial_PigmentVisibilityRange"]
	55	[1019]	GETGLOBAL	R9 K15 ; R9 := 0x0032441c
	56	[1019]	GETTABLE 	R9 R9 K17 ; R9 := R9["UIMaterial_SalvageMaterials"]
	57	[1019]	GETTABLE 	R9 R9 K18 ; R9 := R9[2.000000]
	58	[1019]	SETLIST  	R3 6 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 6
	59	[1019]	SETTABLE 	R2 K10 R3 ; R2["Materials"] := R3
	60	[1020]	GETGLOBAL	R2 K19 ; R2 := 0xcfc01047
	61	[1020]	GETGLOBAL	R3 K15 ; R3 := 0x0032441c
	62	[1020]	GETTABLE 	R3 R3 K20 ; R3 := R3["UIMaterial_CosmeticEnhancersStore"]
	63	[1020]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	64	[1020]	JMP      	71 ; PC := 71
	65	[1021]	GETGLOBAL	R7 K21 ; R7 := 0x33bdd652
	66	[1021]	GETTABLE 	R7 R7 K22 ; R7 := R7[0x23d5322f]
	67	[1021]	GETUPVAL 	R8 U2 ; R8 := U2
	68	[1021]	GETTABLE 	R8 R8 K10 ; R8 := R8["Materials"]
	69	[1021]	MOVE     	R9 R6 ; R9 := R6
	70	[1021]	CALL     	R7 3 1 ; R7(R8,R9)
	71	[1020]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 65; R4 := R5 end
	72	[1021]	JMP      	65 ; PC := 65
	73	[1023]	GETGLOBAL	R7 K19 ; R7 := 0xcfc01047
	74	[1023]	GETGLOBAL	R8 K15 ; R8 := 0x0032441c
	75	[1023]	GETTABLE 	R8 R8 K23 ; R8 := R8["UIMaterial_FocusLensStore"]
	76	[1023]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	77	[1023]	JMP      	84 ; PC := 84
	78	[1024]	GETGLOBAL	R12 K21 ; R12 := 0x33bdd652
	79	[1024]	GETTABLE 	R12 R12 K22 ; R12 := R12[0x23d5322f]
	80	[1024]	GETUPVAL 	R13 U2 ; R13 := U2
	81	[1024]	GETTABLE 	R13 R13 K10 ; R13 := R13["Materials"]
	82	[1024]	MOVE     	R14 R11 ; R14 := R11
	83	[1024]	CALL     	R12 3 1 ; R12(R13,R14)
	84	[1023]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 78; R9 := R10 end
	85	[1024]	JMP      	78 ; PC := 78
	86	[1026]	GETUPVAL 	R12 U3 ; R12 := U3
	87	[1026]	GETUPVAL 	R13 U4 ; R13 := U4
	88	[1026]	GETTABLE 	R13 R13 K24 ; R13 := R13["TRADE_MODS"]
	89	[1026]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 129
	90	[1026]	JMP      	129 ; PC := 129
	91	[1027]	GETGLOBAL	R12 K19 ; R12 := 0xcfc01047
	92	[1027]	GETGLOBAL	R13 K15 ; R13 := 0x0032441c
	93	[1027]	GETTABLE 	R13 R13 K25 ; R13 := R13["UIMaterial_Mods"]
	94	[1027]	CALL     	R12 2 4 ; R12,R13,R14 := R12(R13)
	95	[1027]	JMP      	108 ; PC := 108
	96	[1028]	GETGLOBAL	R17 K19 ; R17 := 0xcfc01047
	97	[1028]	MOVE     	R18 R16 ; R18 := R16
	98	[1028]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	99	[1028]	JMP      	106 ; PC := 106
	100	[1029]	GETGLOBAL	R22 K21 ; R22 := 0x33bdd652
	101	[1029]	GETTABLE 	R22 R22 K22 ; R22 := R22[0x23d5322f]
	102	[1029]	GETUPVAL 	R23 U2 ; R23 := U2
	103	[1029]	GETTABLE 	R23 R23 K10 ; R23 := R23["Materials"]
	104	[1029]	MOVE     	R24 R21 ; R24 := R21
	105	[1029]	CALL     	R22 3 1 ; R22(R23,R24)
	106	[1028]	TFORLOOP 	R17 2 ; R20,R21 := R17(R18,R19); if R20 ~= nil then begin PC = 100; R19 := R20 end
	107	[1029]	JMP      	100 ; PC := 100
	108	[1027]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 96; R14 := R15 end
	109	[1030]	JMP      	96 ; PC := 96
	110	[1033]	GETGLOBAL	R22 K19 ; R22 := 0xcfc01047
	111	[1033]	GETGLOBAL	R23 K15 ; R23 := 0x0032441c
	112	[1033]	GETTABLE 	R23 R23 K26 ; R23 := R23["UIMaterial_ModsSyndicateIcons"]
	113	[1033]	CALL     	R22 2 4 ; R22,R23,R24 := R22(R23)
	114	[1033]	JMP      	127 ; PC := 127
	115	[1034]	GETGLOBAL	R27 K19 ; R27 := 0xcfc01047
	116	[1034]	MOVE     	R28 R26 ; R28 := R26
	117	[1034]	CALL     	R27 2 4 ; R27,R28,R29 := R27(R28)
	118	[1034]	JMP      	125 ; PC := 125
	119	[1035]	GETGLOBAL	R32 K21 ; R32 := 0x33bdd652
	120	[1035]	GETTABLE 	R32 R32 K22 ; R32 := R32[0x23d5322f]
	121	[1035]	GETUPVAL 	R33 U2 ; R33 := U2
	122	[1035]	GETTABLE 	R33 R33 K10 ; R33 := R33["Materials"]
	123	[1035]	MOVE     	R34 R31 ; R34 := R31
	124	[1035]	CALL     	R32 3 1 ; R32(R33,R34)
	125	[1034]	TFORLOOP 	R27 2 ; R30,R31 := R27(R28,R29); if R30 ~= nil then begin PC = 119; R29 := R30 end
	126	[1035]	JMP      	119 ; PC := 119
	127	[1033]	TFORLOOP 	R22 2 ; R25,R26 := R22(R23,R24); if R25 ~= nil then begin PC = 115; R24 := R25 end
	128	[1036]	JMP      	115 ; PC := 115
	129	[1039]	GETGLOBAL	R32 K27 ; R32 := 0xc8802016
	130	[1039]	GETGLOBAL	R33 K15 ; R33 := 0x0032441c
	131	[1039]	GETTABLE 	R33 R33 K28 ; R33 := R33["UIMaterial_RailjackModStore"]
	132	[1039]	CALL     	R32 2 4 ; R32,R33,R34 := R32(R33)
	133	[1039]	JMP      	140 ; PC := 140
	134	[1040]	GETGLOBAL	R37 K21 ; R37 := 0x33bdd652
	135	[1040]	GETTABLE 	R37 R37 K22 ; R37 := R37[0x23d5322f]
	136	[1040]	GETUPVAL 	R38 U2 ; R38 := U2
	137	[1040]	GETTABLE 	R38 R38 K10 ; R38 := R38["Materials"]
	138	[1040]	MOVE     	R39 R36 ; R39 := R36
	139	[1040]	CALL     	R37 3 1 ; R37(R38,R39)
	140	[1039]	TFORLOOP 	R32 2 ; R35,R36 := R32(R33,R34); if R35 ~= nil then begin PC = 134; R34 := R35 end
	141	[1040]	JMP      	134 ; PC := 134
	142	[1043]	GETGLOBAL	R37 K0 ; R37 := 0xae91e43b
	143	[1043]	SELF     	R37 R37 K29 ; R38 := R37; R37 := R37[0x75a78dce]
	144	[1043]	CALL     	R37 2 2 ; R37 := R37(R38)
	145	[1044]	GETUPVAL 	R38 U2 ; R38 := U2
	146	[1044]	GETUPVAL 	R39 U0 ; R39 := U0
	147	[1044]	GETTABLE 	R39 R39 K30 ; R39 := R39["Height"]
	148	[1044]	SETTABLE 	R38 K30 R39 ; R38["Height"] := R39
	149	[1045]	GETUPVAL 	R38 U2 ; R38 := U2
	150	[1045]	GETGLOBAL	R39 K0 ; R39 := 0xae91e43b
	151	[1045]	SELF     	R39 R39 K1 ; R40 := R39; R39 := R39[0x91a24e4b]
	152	[1045]	LOADK    	R41 K3 ; R41 := "InventoryGrid"
	153	[1045]	LOADK    	R42 := 1.000000
	154	[1045]	CALL     	R39 4 2 ; R39 := R39(R40,R41,R42)
	155	[1045]	GETUPVAL 	R40 U2 ; R40 := U2
	156	[1045]	GETTABLE 	R40 R40 K30 ; R40 := R40["Height"]
	157	[1045]	DIV      	R40 R40 K18 ; R40 := R40 / 2.000000
	158	[1045]	ADD      	R39 R39 R40 ; R39 := R39 + R40
	159	[1045]	SETTABLE 	R38 K31 R39 ; R38["YPos"] := R39
	160	[1046]	GETUPVAL 	R38 U5 ; R38 := U5
	161	[1046]	GETTABLE 	R38 R38 K32 ; R38 := R38[0xe5e5a417]
	162	[1046]	GETGLOBAL	R39 K0 ; R39 := 0xae91e43b
	163	[1046]	GETUPVAL 	R40 U2 ; R40 := U2
	164	[1046]	GETTABLE 	R40 R40 K31 ; R40 := R40["YPos"]
	165	[1046]	DIV      	R41 R37 K18 ; R41 := R37 / 2.000000
	166	[1046]	SUB      	R40 R40 R41 ; R40 := R40 - R41
	167	[1046]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	168	[1047]	GETUPVAL 	R39 U5 ; R39 := U5
	169	[1047]	GETTABLE 	R39 R39 K33 ; R39 := R39[0xd718f59b]
	170	[1047]	GETGLOBAL	R40 K0 ; R40 := 0xae91e43b
	171	[1047]	GETUPVAL 	R41 U2 ; R41 := U2
	172	[1047]	GETTABLE 	R41 R41 K30 ; R41 := R41["Height"]
	173	[1047]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	174	[1048]	GETUPVAL 	R40 U5 ; R40 := U5
	175	[1048]	GETTABLE 	R40 R40 K34 ; R40 := R40[0x0db7934d]
	176	[1048]	GETGLOBAL	R41 K0 ; R41 := 0xae91e43b
	177	[1048]	LOADK    	R42 := 5.000000
	178	[1048]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	179	[1049]	GETGLOBAL	R41 K19 ; R41 := 0xcfc01047
	180	[1049]	GETUPVAL 	R42 U2 ; R42 := U2
	181	[1049]	GETTABLE 	R42 R42 K10 ; R42 := R42["Materials"]
	182	[1049]	CALL     	R41 2 4 ; R41,R42,R43 := R41(R42)
	183	[1049]	JMP      	199 ; PC := 199
	184	[1050]	SELF     	R46 R45 K35 ; R47 := R45; R46 := R45[0x830eea67]
	185	[1050]	GETGLOBAL	R48 K36 ; R48 := 0x6c97a788
	186	[1050]	GETTABLE 	R48 R48 K37 ; R48 := R48["VISIBILITY_CENTER"]
	187	[1050]	MOVE     	R49 R38 ; R49 := R38
	188	[1050]	CALL     	R46 4 1 ; R46(R47,R48,R49)
	189	[1051]	SELF     	R46 R45 K35 ; R47 := R45; R46 := R45[0x830eea67]
	190	[1051]	GETGLOBAL	R48 K36 ; R48 := 0x6c97a788
	191	[1051]	GETTABLE 	R48 R48 K38 ; R48 := R48["VISIBILITY_SIZE"]
	192	[1051]	MOVE     	R49 R39 ; R49 := R39
	193	[1051]	CALL     	R46 4 1 ; R46(R47,R48,R49)
	194	[1052]	SELF     	R46 R45 K35 ; R47 := R45; R46 := R45[0x830eea67]
	195	[1052]	GETGLOBAL	R48 K36 ; R48 := 0x6c97a788
	196	[1052]	GETTABLE 	R48 R48 K39 ; R48 := R48["VISIBILITY_FADE_SIZE"]
	197	[1052]	MOVE     	R49 R40 ; R49 := R40
	198	[1052]	CALL     	R46 4 1 ; R46(R47,R48,R49)
	199	[1049]	TFORLOOP 	R41 2 ; R44,R45 := R41(R42,R43); if R44 ~= nil then begin PC = 184; R43 := R44 end
	200	[1052]	JMP      	184 ; PC := 184
	201	[1055]	GETUPVAL 	R46 U5 ; R46 := U5
	202	[1055]	GETTABLE 	R46 R46 K32 ; R46 := R46[0xe5e5a417]
	203	[1055]	GETGLOBAL	R47 K0 ; R47 := 0xae91e43b
	204	[1055]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	205	[1055]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x91a24e4b]
	206	[1055]	LOADK    	R50 K40 ; R50 := "SellList.List"
	207	[1055]	LOADK    	R51 := 3.000000
	208	[1055]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	209	[1055]	GETUPVAL 	R49 U6 ; R49 := U6
	210	[1055]	DIV      	R49 R49 K18 ; R49 := R49 / 2.000000
	211	[1055]	ADD      	R48 R48 R49 ; R48 := R48 + R49
	212	[1055]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	213	[1055]	MOVE     	R38 R46 ; R38 := R46
	214	[1056]	GETUPVAL 	R46 U5 ; R46 := U5
	215	[1056]	GETTABLE 	R46 R46 K33 ; R46 := R46[0xd718f59b]
	216	[1056]	GETGLOBAL	R47 K0 ; R47 := 0xae91e43b
	217	[1056]	GETUPVAL 	R48 U6 ; R48 := U6
	218	[1056]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	219	[1056]	MOVE     	R39 R46 ; R39 := R46
	220	[1057]	GETGLOBAL	R46 K19 ; R46 := 0xcfc01047
	221	[1057]	NEWTABLE 	R47 3 0 ; R47 := {}
	222	[1057]	GETGLOBAL	R48 K41 ; R48 := 0x33973bb4
	223	[1057]	GETGLOBAL	R49 K42 ; R49 := 0x84aa2d07
	224	[1057]	GETGLOBAL	R50 K43 ; R50 := 0xf6ba4e45
	225	[1057]	SETLIST  	R47 3 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 3
	226	[1057]	CALL     	R46 2 4 ; R46,R47,R48 := R46(R47)
	227	[1057]	JMP      	243 ; PC := 243
	228	[1058]	SELF     	R51 R50 K35 ; R52 := R50; R51 := R50[0x830eea67]
	229	[1058]	GETGLOBAL	R53 K36 ; R53 := 0x6c97a788
	230	[1058]	GETTABLE 	R53 R53 K37 ; R53 := R53["VISIBILITY_CENTER"]
	231	[1058]	MOVE     	R54 R38 ; R54 := R38
	232	[1058]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	233	[1059]	SELF     	R51 R50 K35 ; R52 := R50; R51 := R50[0x830eea67]
	234	[1059]	GETGLOBAL	R53 K36 ; R53 := 0x6c97a788
	235	[1059]	GETTABLE 	R53 R53 K38 ; R53 := R53["VISIBILITY_SIZE"]
	236	[1059]	MOVE     	R54 R39 ; R54 := R39
	237	[1059]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	238	[1060]	SELF     	R51 R50 K35 ; R52 := R50; R51 := R50[0x830eea67]
	239	[1060]	GETGLOBAL	R53 K36 ; R53 := 0x6c97a788
	240	[1060]	GETTABLE 	R53 R53 K39 ; R53 := R53["VISIBILITY_FADE_SIZE"]
	241	[1060]	MOVE     	R54 R40 ; R54 := R40
	242	[1060]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	243	[1057]	TFORLOOP 	R46 2 ; R49,R50 := R46(R47,R48); if R49 ~= nil then begin PC = 228; R48 := R49 end
	244	[1060]	JMP      	228 ; PC := 228
	245	[1062]	RETURN   	R0 1 ; return 

function #35 <?:1064,1263> (323 instructions, 1292 bytes at 0000021120B54DD0)
0 params, 19 slots, 18 upvalues, 0 locals, 108 constants, 4 functions
	1	[1066]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1066]	CALL     	R0 1 2 ; R0 := R0()
	3	[1066]	TEST     	R0 0 ; if not R0 then PC := 128
	4	[1066]	JMP      	128 ; PC := 128
	5	[1067]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	6	[1067]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.Components.CategorizedGrid"
	7	[1067]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[1068]	GETTABLE 	R1 R0 K2 ; R1 := R0[0x67d7b715]
	9	[1068]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	10	[1068]	LOADK    	R3 K4 ; R3 := "SellList.GridItem"
	11	[1068]	LOADK    	R4 := 2.000000
	12	[1068]	LOADK    	R5 := 3.000000
	13	[1068]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	14	[1068]	SETUPVAL 	R1 U1 ; U1 := R1
	15	[1069]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[1069]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	17	[1069]	LOADK    	R3 K6 ; R3 := "SellListItemPressed"
	18	[1069]	LOADK    	R4 K7 ; R4 := "SellListItemFocused"
	19	[1069]	LOADK    	R5 K8 ; R5 := "SellListItemUnfocused"
	20	[1069]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	21	[1070]	GETUPVAL 	R1 U1 ; R1 := U1
	22	[1070]	SETTABLE 	R1 K9 K10 ; R1["mSelectedScale"] := 100.000000
	23	[1071]	GETUPVAL 	R1 U1 ; R1 := U1
	24	[1071]	SETTABLE 	R1 K11 K12 ; R1["ElementWidth"] := 142.000000
	25	[1072]	GETUPVAL 	R1 U1 ; R1 := U1
	26	[1072]	SETTABLE 	R1 K13 K12 ; R1["ElementHeight"] := 142.000000
	27	[1073]	GETUPVAL 	R1 U1 ; R1 := U1
	28	[1073]	SETTABLE 	R1 K14 K15 ; R1["Width"] := 350.000000
	29	[1074]	GETUPVAL 	R1 U1 ; R1 := U1
	30	[1074]	SETTABLE 	R1 K16 K17 ; R1["Height"] := 600.000000
	31	[1075]	GETUPVAL 	R1 U1 ; R1 := U1
	32	[1075]	SETTABLE 	R1 K18 K19 ; R1["ElementDimBuffer"] := 25.000000
	33	[1076]	GETUPVAL 	R1 U1 ; R1 := U1
	34	[1076]	SETTABLE 	R1 K20 K21 ; R1["mHighlightAlphaFocusedOverride"] := 24.000000
	35	[1077]	GETUPVAL 	R1 U1 ; R1 := U1
	36	[1077]	SETTABLE 	R1 K22 K23 ; R1["SkipReinitializePos"] := true
	37	[1078]	GETUPVAL 	R1 U1 ; R1 := U1
	38	[1078]	SETTABLE 	R1 K24 K23 ; R1["mAddFillerElements"] := true
	39	[1079]	GETUPVAL 	R1 U2 ; R1 := U2
	40	[1079]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x27658fab]
	41	[1079]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	42	[1079]	GETUPVAL 	R3 U1 ; R3 := U1
	43	[1079]	CALL     	R1 3 1 ; R1(R2,R3)
	44	[1080]	GETUPVAL 	R1 U1 ; R1 := U1
	45	[1080]	GETUPVAL 	R2 U3 ; R2 := U3
	46	[1080]	SETTABLE 	R1 K26 R2 ; R1["mOnFocusedCallback"] := R2
	47	[1081]	GETUPVAL 	R1 U1 ; R1 := U1
	48	[1081]	GETUPVAL 	R2 U4 ; R2 := U4
	49	[1081]	SETTABLE 	R1 K27 R2 ; R1["mOnUnfocusedCallback"] := R2
	50	[1082]	GETUPVAL 	R1 U1 ; R1 := U1
	51	[1082]	GETUPVAL 	R2 U5 ; R2 := U5
	52	[1082]	SETTABLE 	R1 K28 R2 ; R1["mElementDrawCallback"] := R2
	53	[1083]	GETUPVAL 	R1 U1 ; R1 := U1
	54	[1083]	GETUPVAL 	R2 U6 ; R2 := U6
	55	[1083]	SETTABLE 	R1 K29 R2 ; R1["mClipCreatedCallback"] := R2
	56	[1085]	GETGLOBAL	R1 K30 ; R1 := _T
	57	[1085]	GETTABLE 	R1 R1 K31 ; R1 := R1["InvTradingInfo"]
	58	[1085]	GETTABLE 	R1 R1 K32 ; R1 := R1["Plat"]
	59	[1085]	EQ       	1 R1 K33 ; if R1 == nil then PC := 83
	60	[1085]	JMP      	83 ; PC := 83
	61	[1086]	GETUPVAL 	R1 U1 ; R1 := U1
	62	[1086]	SELF     	R1 R1 K34 ; R2 := R1; R1 := R1[0xbad4316f]
	63	[1086]	NEWTABLE 	R3 0 7 ; R3 := {}
	64	[1086]	SETTABLE 	R3 K35 K23 ; R3["SellGrid"] := true
	65	[1086]	SETTABLE 	R3 K36 K37 ; R3["IconHeight"] := 80.000000
	66	[1086]	SETTABLE 	R3 K38 K37 ; R3["IconWidth"] := 80.000000
	67	[1086]	SETTABLE 	R3 K32 K23 ; R3["Plat"] := true
	68	[1086]	GETGLOBAL	R4 K30 ; R4 := _T
	69	[1086]	GETTABLE 	R4 R4 K31 ; R4 := R4["InvTradingInfo"]
	70	[1086]	GETTABLE 	R4 R4 K32 ; R4 := R4["Plat"]
	71	[1086]	SETTABLE 	R3 K39 R4 ; R3["Count"] := R4
	72	[1086]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	73	[1086]	SELF     	R4 R4 K41 ; R5 := R4; R4 := R4[0x42b04007]
	74	[1086]	LOADK    	R6 K42 ; R6 := "/Lotus/Language/Dojo/TradeTypePlatinum"
	75	[1086]	OP_LOADBOOL	R7 1 0 ; R7 := true
	76	[1086]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	77	[1086]	SETTABLE 	R3 K40 R4 ; R3["Name"] := R4
	78	[1086]	GETGLOBAL	R4 K44 ; R4 := 0x0032441c
	79	[1086]	GETTABLE 	R4 R4 K45 ; R4 := R4["UITexture_PlatinumIcon"]
	80	[1086]	SETTABLE 	R3 K43 R4 ; R3["Icon"] := R4
	81	[1086]	OP_LOADBOOL	R4 1 0 ; R4 := true
	82	[1086]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	83	[1089]	GETGLOBAL	R1 K46 ; R1 := 0xcfc01047
	84	[1089]	GETGLOBAL	R2 K30 ; R2 := _T
	85	[1089]	GETTABLE 	R2 R2 K31 ; R2 := R2["InvTradingInfo"]
	86	[1089]	GETTABLE 	R2 R2 K47 ; R2 := R2["Mods"]
	87	[1089]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	88	[1089]	JMP      	96 ; PC := 96
	89	[1090]	GETUPVAL 	R6 U1 ; R6 := U1
	90	[1090]	SELF     	R6 R6 K34 ; R7 := R6; R6 := R6[0xbad4316f]
	91	[1090]	NEWTABLE 	R8 0 2 ; R8 := {}
	92	[1090]	SETTABLE 	R8 K35 K23 ; R8["SellGrid"] := true
	93	[1090]	SETTABLE 	R8 K48 R5 ; R8["Card"] := R5
	94	[1090]	OP_LOADBOOL	R9 1 0 ; R9 := true
	95	[1090]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	96	[1089]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 89; R3 := R4 end
	97	[1090]	JMP      	89 ; PC := 89
	98	[1093]	GETGLOBAL	R6 K46 ; R6 := 0xcfc01047
	99	[1093]	GETGLOBAL	R7 K30 ; R7 := _T
	100	[1093]	GETTABLE 	R7 R7 K31 ; R7 := R7["InvTradingInfo"]
	101	[1093]	GETTABLE 	R7 R7 K49 ; R7 := R7["Others"]
	102	[1093]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	103	[1093]	JMP      	111 ; PC := 111
	104	[1094]	SETTABLE 	R10 K35 K23 ; R10["SellGrid"] := true
	105	[1095]	SETTABLE 	R10 K50 K23 ; R10["IsOther"] := true
	106	[1096]	GETUPVAL 	R11 U1 ; R11 := U1
	107	[1096]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0xbad4316f]
	108	[1096]	MOVE     	R13 R10 ; R13 := R10
	109	[1096]	OP_LOADBOOL	R14 1 0 ; R14 := true
	110	[1096]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	111	[1093]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 104; R8 := R9 end
	112	[1096]	JMP      	104 ; PC := 104
	113	[1100]	GETUPVAL 	R11 U1 ; R11 := U1
	114	[1100]	SELF     	R11 R11 K51 ; R12 := R11; R11 := R11[0x71e9ac81]
	115	[1100]	LOADNIL  	R13 R13 ; R13 := nil
	116	[1100]	OP_LOADBOOL	R14 1 0 ; R14 := true
	117	[1100]	OP_LOADBOOL	R15 1 0 ; R15 := true
	118	[1100]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	119	[1101]	GETUPVAL 	R11 U7 ; R11 := U7
	120	[1101]	CALL     	R11 1 1 ; R11()
	121	[1103]	GETGLOBAL	R11 K3 ; R11 := 0xae91e43b
	122	[1103]	SELF     	R11 R11 K52 ; R12 := R11; R11 := R11[0xaade900e]
	123	[1103]	LOADK    	R13 K53 ; R13 := "SellList.ScrollBar"
	124	[1103]	LOADK    	R14 := 11.000000
	125	[1103]	OP_LOADBOOL	R15 0 0 ; R15 := false
	126	[1103]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	127	[1103]	JMP      	216 ; PC := 216
	128	[1105]	GETGLOBAL	R11 K0 ; R11 := 0x2d0fad09
	129	[1105]	LOADK    	R12 K54 ; R12 := "EE.Interface.Components.List"
	130	[1105]	CALL     	R11 2 2 ; R11 := R11(R12)
	131	[1106]	GETTABLE 	R12 R11 K55 ; R12 := R11[0x9383bc56]
	132	[1106]	GETGLOBAL	R13 K3 ; R13 := 0xae91e43b
	133	[1106]	LOADK    	R14 K56 ; R14 := "SellList.List.Item"
	134	[1106]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	135	[1106]	SETUPVAL 	R12 U1 ; U1 := R12
	136	[1107]	GETUPVAL 	R12 U1 ; R12 := U1
	137	[1107]	SETTABLE 	R12 K57 K58 ; R12["mForcedVerticalSeparation"] := 32.000000
	138	[1108]	GETUPVAL 	R12 U1 ; R12 := U1
	139	[1108]	GETGLOBAL	R13 K60 ; R13 := 0x5bced4c4
	140	[1108]	GETTABLE 	R13 R13 K61 ; R13 := R13[0x55f27c30]
	141	[1108]	GETUPVAL 	R14 U8 ; R14 := U8
	142	[1108]	ADD      	R14 R14 K62 ; R14 := R14 + 10.000000
	143	[1108]	GETUPVAL 	R15 U1 ; R15 := U1
	144	[1108]	GETTABLE 	R15 R15 K57 ; R15 := R15["mForcedVerticalSeparation"]
	145	[1108]	DIV      	R14 R14 R15 ; R14 := R14 / R15
	146	[1108]	CALL     	R13 2 2 ; R13 := R13(R14)
	147	[1108]	SETTABLE 	R12 K59 R13 ; R12["mVisibleElements"] := R13
	148	[1109]	GETUPVAL 	R12 U1 ; R12 := U1
	149	[1109]	SELF     	R12 R12 K63 ; R13 := R12; R12 := R12[0x3bc79f4f]
	150	[1109]	LOADK    	R14 K53 ; R14 := "SellList.ScrollBar"
	151	[1109]	LOADK    	R15 := 0.000000
	152	[1109]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	153	[1110]	GETUPVAL 	R12 U1 ; R12 := U1
	154	[1110]	SETTABLE 	R12 K64 K65 ; R12["mScroll"] := 1.000000
	155	[1111]	GETUPVAL 	R12 U1 ; R12 := U1
	156	[1111]	SELF     	R12 R12 K66 ; R13 := R12; R12 := R12[0x7220acb6]
	157	[1111]	CALL     	R12 2 1 ; R12(R13)
	158	[1112]	GETUPVAL 	R12 U1 ; R12 := U1
	159	[1112]	GETGLOBAL	R13 K3 ; R13 := 0xae91e43b
	160	[1112]	SELF     	R13 R13 K68 ; R14 := R13; R13 := R13[0x91a24e4b]
	161	[1112]	GETUPVAL 	R15 U1 ; R15 := U1
	162	[1112]	GETTABLE 	R15 R15 K69 ; R15 := R15["mClipName"]
	163	[1112]	LOADK    	R16 K70 ; R16 := ".Bg"
	164	[1112]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	165	[1112]	LOADK    	R16 := 12.000000
	166	[1112]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	167	[1112]	SETTABLE 	R12 K67 R13 ; R12["mInitBgWidth"] := R13
	168	[1113]	GETUPVAL 	R12 U1 ; R12 := U1
	169	[1113]	GETGLOBAL	R13 K3 ; R13 := 0xae91e43b
	170	[1113]	SELF     	R13 R13 K68 ; R14 := R13; R13 := R13[0x91a24e4b]
	171	[1113]	GETUPVAL 	R15 U1 ; R15 := U1
	172	[1113]	GETTABLE 	R15 R15 K69 ; R15 := R15["mClipName"]
	173	[1113]	LOADK    	R16 K70 ; R16 := ".Bg"
	174	[1113]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	175	[1113]	LOADK    	R16 := 13.000000
	176	[1113]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	177	[1113]	SETTABLE 	R12 K71 R13 ; R12["mInitBgHeight"] := R13
	178	[1114]	GETUPVAL 	R12 U1 ; R12 := U1
	179	[1129]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	180	[1129]	GETUPVAL 	R0 U9 ; R0 := U9
	181	[1129]	GETUPVAL 	R0 U10 ; R0 := U10
	182	[1129]	SETTABLE 	R12 K72 R13 ; R12["UpdateColors"] := R13
	183	[1130]	GETUPVAL 	R12 U1 ; R12 := U1
	184	[1152]	CLOSURE  	R13 1 ; R13 := closure(Function #2)
	185	[1152]	GETUPVAL 	R0 U11 ; R0 := U11
	186	[1152]	GETUPVAL 	R0 U12 ; R0 := U12
	187	[1152]	GETUPVAL 	R0 U1 ; R0 := U1
	188	[1152]	GETUPVAL 	R0 U2 ; R0 := U2
	189	[1152]	SETTABLE 	R12 K26 R13 ; R12["mOnFocusedCallback"] := R13
	190	[1153]	GETUPVAL 	R12 U1 ; R12 := U1
	191	[1167]	CLOSURE  	R13 2 ; R13 := closure(Function #3)
	192	[1167]	GETUPVAL 	R0 U11 ; R0 := U11
	193	[1167]	GETUPVAL 	R0 U12 ; R0 := U12
	194	[1167]	GETUPVAL 	R0 U1 ; R0 := U1
	195	[1167]	SETTABLE 	R12 K27 R13 ; R12["mOnUnfocusedCallback"] := R13
	196	[1168]	GETUPVAL 	R12 U1 ; R12 := U1
	197	[1223]	CLOSURE  	R13 3 ; R13 := closure(Function #4)
	198	[1223]	GETUPVAL 	R0 U1 ; R0 := U1
	199	[1223]	GETUPVAL 	R0 U13 ; R0 := U13
	200	[1223]	GETUPVAL 	R0 U14 ; R0 := U14
	201	[1223]	GETUPVAL 	R0 U0 ; R0 := U0
	202	[1223]	GETUPVAL 	R0 U10 ; R0 := U10
	203	[1223]	GETUPVAL 	R0 U2 ; R0 := U2
	204	[1223]	GETUPVAL 	R0 U15 ; R0 := U15
	205	[1223]	SETTABLE 	R12 K28 R13 ; R12["mElementDrawCallback"] := R13
	206	[1225]	GETGLOBAL	R12 K3 ; R12 := 0xae91e43b
	207	[1225]	SELF     	R12 R12 K73 ; R13 := R12; R12 := R12[0x67bc869f]
	208	[1225]	LOADK    	R14 K74 ; R14 := "SellList.ListMask"
	209	[1225]	LOADK    	R15 := 13.000000
	210	[1225]	GETUPVAL 	R16 U1 ; R16 := U1
	211	[1225]	GETTABLE 	R16 R16 K59 ; R16 := R16["mVisibleElements"]
	212	[1225]	GETUPVAL 	R17 U1 ; R17 := U1
	213	[1225]	GETTABLE 	R17 R17 K57 ; R17 := R17["mForcedVerticalSeparation"]
	214	[1225]	MUL      	R16 R16 R17 ; R16 := R16 * R17
	215	[1225]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	216	[1228]	GETUPVAL 	R12 U1 ; R12 := U1
	217	[1228]	GETUPVAL 	R13 U16 ; R13 := U16
	218	[1228]	SETTABLE 	R12 K75 R13 ; R12["mOnSelectedCallback"] := R13
	219	[1230]	LOADK    	R12 K76 ; R12 := "SellWithManifest"
	220	[1231]	LOADK    	R13 K77 ; R13 := "/Lotus/Language/Menu/ItemInventory_SellItems"
	221	[1232]	GETUPVAL 	R14 U13 ; R14 := U13
	222	[1232]	GETUPVAL 	R15 U14 ; R15 := U14
	223	[1232]	GETTABLE 	R15 R15 K78 ; R15 := R15["FISH"]
	224	[1232]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 231
	225	[1232]	JMP      	231 ; PC := 231
	226	[1233]	LOADK    	R12 K79 ; R12 := "FishFunction"
	227	[1234]	GETGLOBAL	R14 K30 ; R14 := _T
	228	[1234]	GETTABLE 	R14 R14 K80 ; R14 := R14["FishInvInfo"]
	229	[1234]	GETTABLE 	R13 R14 K81 ; R13 := R14["SellBtnLabel"]
	230	[1234]	JMP      	301 ; PC := 301
	231	[1235]	GETUPVAL 	R14 U13 ; R14 := U13
	232	[1235]	GETUPVAL 	R15 U14 ; R15 := U14
	233	[1235]	GETTABLE 	R15 R15 K82 ; R15 := R15["ENEMIES"]
	234	[1235]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 239
	235	[1235]	JMP      	239 ; PC := 239
	236	[1236]	LOADK    	R12 K83 ; R12 := "LoadEnemies"
	237	[1237]	LOADK    	R13 K84 ; R13 := "/Lotus/Language/Menu/EnemySelector_SpawnEnemies"
	238	[1237]	JMP      	301 ; PC := 301
	239	[1238]	GETUPVAL 	R14 U13 ; R14 := U13
	240	[1238]	GETUPVAL 	R15 U14 ; R15 := U14
	241	[1238]	GETTABLE 	R15 R15 K85 ; R15 := R15["TREASURE"]
	242	[1238]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 246
	243	[1238]	JMP      	246 ; PC := 246
	244	[1239]	LOADK    	R13 K86 ; R13 := "/Lotus/Language/Menu/ItemInventory_ExtractEndo"
	245	[1239]	JMP      	301 ; PC := 301
	246	[1240]	GETUPVAL 	R14 U13 ; R14 := U13
	247	[1240]	GETUPVAL 	R15 U14 ; R15 := U14
	248	[1240]	GETTABLE 	R15 R15 K87 ; R15 := R15["SHIP_SCRAP"]
	249	[1240]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 261
	250	[1240]	JMP      	261 ; PC := 261
	251	[1240]	GETUPVAL 	R14 U13 ; R14 := U13
	252	[1240]	GETUPVAL 	R15 U14 ; R15 := U14
	253	[1240]	GETTABLE 	R15 R15 K88 ; R15 := R15["SHIP_PARTS"]
	254	[1240]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 261
	255	[1240]	JMP      	261 ; PC := 261
	256	[1240]	GETUPVAL 	R14 U13 ; R14 := U13
	257	[1240]	GETUPVAL 	R15 U14 ; R15 := U14
	258	[1240]	GETTABLE 	R15 R15 K89 ; R15 := R15["SHIP_RAW"]
	259	[1240]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 263
	260	[1240]	JMP      	263 ; PC := 263
	261	[1241]	LOADK    	R13 K90 ; R13 := "/Lotus/Language/Menu/ItemSelection_SellSalvage"
	262	[1241]	JMP      	301 ; PC := 301
	263	[1242]	GETUPVAL 	R14 U13 ; R14 := U13
	264	[1242]	GETUPVAL 	R15 U14 ; R15 := U14
	265	[1242]	GETTABLE 	R15 R15 K91 ; R15 := R15["SHARDS"]
	266	[1242]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 271
	267	[1242]	JMP      	271 ; PC := 271
	268	[1243]	LOADK    	R12 K92 ; R12 := "ConvertShards"
	269	[1244]	LOADK    	R13 K93 ; R13 := "/Lotus/Language/TennoWay/ConvertShardsSellBtn"
	270	[1244]	JMP      	301 ; PC := 301
	271	[1245]	GETUPVAL 	R14 U13 ; R14 := U13
	272	[1245]	GETUPVAL 	R15 U14 ; R15 := U14
	273	[1245]	GETTABLE 	R15 R15 K94 ; R15 := R15["DECODONATE"]
	274	[1245]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 279
	275	[1245]	JMP      	279 ; PC := 279
	276	[1246]	LOADK    	R12 K95 ; R12 := "DonateDecorations"
	277	[1247]	LOADK    	R13 K96 ; R13 := "/Lotus/Language/OstronCrafting/Crafting_Donate"
	278	[1247]	JMP      	301 ; PC := 301
	279	[1248]	GETUPVAL 	R14 U13 ; R14 := U13
	280	[1248]	GETUPVAL 	R15 U14 ; R15 := U14
	281	[1248]	GETTABLE 	R15 R15 K97 ; R15 := R15["RESDONATE"]
	282	[1248]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 287
	283	[1248]	JMP      	287 ; PC := 287
	284	[1249]	LOADK    	R12 K95 ; R12 := "DonateDecorations"
	285	[1250]	LOADK    	R13 K96 ; R13 := "/Lotus/Language/OstronCrafting/Crafting_Donate"
	286	[1250]	JMP      	301 ; PC := 301
	287	[1251]	GETUPVAL 	R14 U13 ; R14 := U13
	288	[1251]	GETUPVAL 	R15 U14 ; R15 := U14
	289	[1251]	GETTABLE 	R15 R15 K98 ; R15 := R15["SYNDDONATE"]
	290	[1251]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 295
	291	[1251]	JMP      	295 ; PC := 295
	292	[1252]	LOADK    	R12 K99 ; R12 := "DonateDogTags"
	293	[1253]	LOADK    	R13 K100 ; R13 := "/Lotus/Language/Syndicates/Favors_RedeemReward"
	294	[1253]	JMP      	301 ; PC := 301
	295	[1254]	GETUPVAL 	R14 U0 ; R14 := U0
	296	[1254]	CALL     	R14 1 2 ; R14 := R14()
	297	[1254]	TEST     	R14 0 ; if not R14 then PC := 301
	298	[1254]	JMP      	301 ; PC := 301
	299	[1255]	LOADK    	R12 K101 ; R12 := "TradeItems"
	300	[1256]	LOADK    	R13 K102 ; R13 := "/Lotus/Language/Dojo/Trade_Offer"
	301	[1258]	GETUPVAL 	R14 U15 ; R14 := U15
	302	[1258]	GETTABLE 	R14 R14 K103 ; R14 := R14[0xae6791ba]
	303	[1258]	GETGLOBAL	R15 K3 ; R15 := 0xae91e43b
	304	[1258]	LOADK    	R16 K104 ; R16 := "SellList.SellBtn"
	305	[1258]	MOVE     	R17 R13 ; R17 := R13
	306	[1258]	MOVE     	R18 R12 ; R18 := R12
	307	[1258]	CALL     	R14 5 2 ; R14 := R14(R15,R16,R17,R18)
	308	[1258]	SETUPVAL 	R14 U17 ; U17 := R14
	309	[1259]	GETUPVAL 	R14 U17 ; R14 := U17
	310	[1259]	SELF     	R14 R14 K105 ; R15 := R14; R14 := R14[0x4e86c602]
	311	[1259]	CALL     	R14 2 1 ; R14(R15)
	312	[1260]	GETUPVAL 	R14 U17 ; R14 := U17
	313	[1260]	SELF     	R14 R14 K106 ; R15 := R14; R14 := R14[0x8d77b2b2]
	314	[1260]	LOADK    	R16 := 280.000000
	315	[1260]	CALL     	R14 3 1 ; R14(R15,R16)
	316	[1261]	GETUPVAL 	R14 U17 ; R14 := U17
	317	[1261]	SELF     	R14 R14 K107 ; R15 := R14; R14 := R14[0x46610c50]
	318	[1261]	OP_LOADBOOL	R16 0 0 ; R16 := false
	319	[1261]	CALL     	R14 3 1 ; R14(R15,R16)
	320	[1262]	GETUPVAL 	R14 U17 ; R14 := U17
	321	[1262]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0x71e9ac81]
	322	[1262]	CALL     	R14 2 1 ; R14(R15)
	323	[1263]	RETURN   	R0 1 ; return 

function #36 <?:1265,1267> (5 instructions, 20 bytes at 0000021120B57F90)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1266]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1266]	GETTABLE 	R2 R0 K0 ; R2 := R0["mItemId"]
	3	[1266]	GETTABLE 	R2 R2 K1 ; R2 := R2["mId"]
	4	[1266]	SETTABLE 	R1 R2 K2 ; R1[R2] := true
	5	[1267]	RETURN   	R0 1 ; return 

function #37 <?:1269,1297> (75 instructions, 300 bytes at 0000021120B580C0)
0 params, 14 slots, 2 upvalues, 0 locals, 16 constants, 0 functions
	1	[1270]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[1270]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[1271]	LOADNIL  	R0 R0 ; R0 := nil
	4	[1272]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	5	[1272]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x25a6e75e]
	6	[1272]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1273]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xe8e8a9f7]
	8	[1273]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[1273]	GETTABLE 	R2 R2 K3 ; R2 := R2["mId"]
	10	[1274]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0x2fdbb24a]
	11	[1274]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[1275]	GETGLOBAL	R4 K5 ; R4 := 0xc8802016
	13	[1275]	MOVE     	R5 R3 ; R5 := R3
	14	[1275]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	15	[1275]	JMP      	22 ; PC := 22
	16	[1276]	GETTABLE 	R9 R8 K6 ; R9 := R8["mItemId"]
	17	[1276]	GETTABLE 	R9 R9 K3 ; R9 := R9["mId"]
	18	[1276]	EQ       	0 R9 R2 ; if R9 ~= R2 then PC := 22
	19	[1276]	JMP      	22 ; PC := 22
	20	[1277]	MOVE     	R0 R8 ; R0 := R8
	21	[1278]	JMP      	24 ; PC := 24
	22	[1275]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 16; R6 := R7 end
	23	[1279]	JMP      	16 ; PC := 16
	24	[1281]	EQ       	0 R0 K7 ; if R0 ~= nil then PC := 30
	25	[1281]	JMP      	30 ; PC := 30
	26	[1281]	LEN      	R9 R3 ; R9 := # R3
	27	[1281]	LT       	0 K8 R9 ; if 0.000000 >= R9 then PC := 30
	28	[1281]	JMP      	30 ; PC := 30
	29	[1282]	GETTABLE 	R0 R3 K9 ; R0 := R3[1.000000]
	30	[1285]	GETGLOBAL	R9 K10 ; R9 := 0x7b998233
	31	[1285]	MOVE     	R10 R0 ; R10 := R0
	32	[1285]	CALL     	R9 2 2 ; R9 := R9(R10)
	33	[1285]	TEST     	R9 1 ; if R9 then PC := 75
	34	[1285]	JMP      	75 ; PC := 75
	35	[1287]	GETUPVAL 	R9 U1 ; R9 := U1
	36	[1287]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0x73a8846a]
	37	[1287]	LOADK    	R12 := 0.000000
	38	[1287]	LOADK    	R13 := 0.000000
	39	[1287]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	40	[1287]	CALL     	R9 0 1 ; R9(R10,...)
	41	[1288]	GETUPVAL 	R9 U1 ; R9 := U1
	42	[1288]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0x73a8846a]
	43	[1288]	LOADK    	R12 := 0.000000
	44	[1288]	LOADK    	R13 := 2.000000
	45	[1288]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	46	[1288]	CALL     	R9 0 1 ; R9(R10,...)
	47	[1289]	GETUPVAL 	R9 U1 ; R9 := U1
	48	[1289]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0x73a8846a]
	49	[1289]	LOADK    	R12 := 1.000000
	50	[1289]	LOADK    	R13 := 0.000000
	51	[1289]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	52	[1289]	CALL     	R9 0 1 ; R9(R10,...)
	53	[1291]	SELF     	R9 R0 K14 ; R10 := R0; R9 := R0[0x68d708a7]
	54	[1291]	CALL     	R9 2 2 ; R9 := R9(R10)
	55	[1292]	GETUPVAL 	R10 U1 ; R10 := U1
	56	[1292]	SELF     	R11 R9 K15 ; R12 := R9; R11 := R9[0x5ef3783b]
	57	[1292]	LOADK    	R13 := 7.000000
	58	[1292]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	59	[1292]	CALL     	R10 0 1 ; R10(R11,...)
	60	[1293]	GETUPVAL 	R10 U1 ; R10 := U1
	61	[1293]	SELF     	R11 R9 K15 ; R12 := R9; R11 := R9[0x5ef3783b]
	62	[1293]	LOADK    	R13 := 8.000000
	63	[1293]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	64	[1293]	CALL     	R10 0 1 ; R10(R11,...)
	65	[1294]	GETUPVAL 	R10 U1 ; R10 := U1
	66	[1294]	SELF     	R11 R9 K15 ; R12 := R9; R11 := R9[0x5ef3783b]
	67	[1294]	LOADK    	R13 := 10.000000
	68	[1294]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	69	[1294]	CALL     	R10 0 1 ; R10(R11,...)
	70	[1295]	GETUPVAL 	R10 U1 ; R10 := U1
	71	[1295]	SELF     	R11 R9 K15 ; R12 := R9; R11 := R9[0x5ef3783b]
	72	[1295]	LOADK    	R13 := 9.000000
	73	[1295]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	74	[1295]	CALL     	R10 0 1 ; R10(R11,...)
	75	[1297]	RETURN   	R0 1 ; return 

function #38 <?:1299,1662> (1233 instructions, 4932 bytes at 0000021120B584E0)
0 params, 28 slots, 25 upvalues, 0 locals, 258 constants, 10 functions
	1	[1300]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1300]	CALL     	R0 1 1 ; R0()
	3	[1302]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	4	[1302]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	5	[1302]	LOADK    	R2 K2 ; R2 := "InventoryGrid"
	6	[1302]	LOADK    	R3 := 0.000000
	7	[1302]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	8	[1302]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x91a24e4b]
	9	[1302]	LOADK    	R6 K4 ; R6 := "Categories"
	10	[1302]	LOADK    	R7 := 0.000000
	11	[1302]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	12	[1302]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	13	[1302]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x91a24e4b]
	14	[1302]	LOADK    	R7 K5 ; R7 := "Categories.Menu"
	15	[1302]	LOADK    	R8 := 0.000000
	16	[1302]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	17	[1302]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	18	[1302]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	19	[1304]	GETGLOBAL	R0 K6 ; R0 := 0x2d0fad09
	20	[1304]	LOADK    	R1 K7 ; R1 := "Lotus.Interface.Components.CategorizedGrid"
	21	[1304]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[1305]	GETTABLE 	R1 R0 K8 ; R1 := R0[0x67d7b715]
	23	[1305]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	24	[1305]	LOADK    	R3 K9 ; R3 := "InventoryGrid.InventoryItem"
	25	[1305]	LOADK    	R4 := 6.000000
	26	[1305]	LOADK    	R5 := 4.000000
	27	[1305]	LOADK    	R6 K5 ; R6 := "Categories.Menu"
	28	[1305]	LOADK    	R7 K10 ; R7 := "SearchAndSort.SortMenu"
	29	[1305]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	30	[1305]	SETUPVAL 	R1 U1 ; U1 := R1
	31	[1306]	GETUPVAL 	R1 U1 ; R1 := U1
	32	[1306]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	33	[1306]	LOADNIL  	R3 R3 ; R3 := nil
	34	[1306]	LOADK    	R4 K12 ; R4 := "GridItemFocused"
	35	[1306]	LOADK    	R5 K13 ; R5 := "GridItemUnfocused"
	36	[1306]	LOADK    	R6 K14 ; R6 := "GridItemPressed"
	37	[1306]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	38	[1307]	GETUPVAL 	R1 U1 ; R1 := U1
	39	[1307]	SETTABLE 	R1 K15 K16 ; R1["mSelectedScale"] := 100.000000
	40	[1308]	GETUPVAL 	R1 U1 ; R1 := U1
	41	[1308]	SETTABLE 	R1 K17 K18 ; R1["mColumnSeparation"] := 160.000000
	42	[1309]	GETUPVAL 	R1 U1 ; R1 := U1
	43	[1309]	SETTABLE 	R1 K19 K18 ; R1["mRowSeparation"] := 160.000000
	44	[1310]	GETUPVAL 	R1 U1 ; R1 := U1
	45	[1310]	SETTABLE 	R1 K20 K21 ; R1["mSmoothScrollExtraSpace"] := 0.000000
	46	[1311]	GETUPVAL 	R1 U1 ; R1 := U1
	47	[1311]	SETTABLE 	R1 K22 K23 ; R1["mScrollAlwaysVisible"] := true
	48	[1312]	GETUPVAL 	R1 U1 ; R1 := U1
	49	[1312]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x3bc79f4f]
	50	[1312]	LOADK    	R3 K25 ; R3 := "InventoryGridScrollBar"
	51	[1312]	LOADK    	R4 := 1.000000
	52	[1312]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	53	[1313]	GETUPVAL 	R1 U1 ; R1 := U1
	54	[1313]	SETTABLE 	R1 K26 K27 ; R1["mScrollBarHorizontalOffset"] := nil
	55	[1314]	GETUPVAL 	R1 U1 ; R1 := U1
	56	[1314]	SETTABLE 	R1 K28 K27 ; R1["mSortMenuHorizontalOffset"] := nil
	57	[1315]	GETUPVAL 	R1 U1 ; R1 := U1
	58	[1315]	SETTABLE 	R1 K29 K27 ; R1["mSortMenuVerticalOffset"] := nil
	59	[1316]	GETUPVAL 	R1 U1 ; R1 := U1
	60	[1316]	SELF     	R1 R1 K30 ; R2 := R1; R1 := R1[0x7220acb6]
	61	[1316]	CALL     	R1 2 1 ; R1(R2)
	62	[1317]	GETUPVAL 	R1 U1 ; R1 := U1
	63	[1317]	SETTABLE 	R1 K31 K32 ; R1["mSelectElementsOnFocus"] := false
	64	[1318]	GETUPVAL 	R1 U1 ; R1 := U1
	65	[1318]	SETTABLE 	R1 K33 K34 ; R1["mScroll"] := 1.000000
	66	[1319]	GETUPVAL 	R1 U1 ; R1 := U1
	67	[1319]	SETTABLE 	R1 K35 K23 ; R1["mSkipRefocusOnScrollRedraw"] := true
	68	[1320]	GETUPVAL 	R1 U1 ; R1 := U1
	69	[1320]	GETUPVAL 	R2 U2 ; R2 := U2
	70	[1320]	SETTABLE 	R1 K36 R2 ; R1["mOnFocusedCallback"] := R2
	71	[1321]	GETUPVAL 	R1 U1 ; R1 := U1
	72	[1321]	GETUPVAL 	R2 U3 ; R2 := U3
	73	[1321]	SETTABLE 	R1 K37 R2 ; R1["mOnUnfocusedCallback"] := R2
	74	[1322]	GETUPVAL 	R1 U1 ; R1 := U1
	75	[1322]	GETUPVAL 	R2 U4 ; R2 := U4
	76	[1322]	SETTABLE 	R1 K38 R2 ; R1["mOnSelectedCallback"] := R2
	77	[1323]	GETUPVAL 	R1 U1 ; R1 := U1
	78	[1323]	GETUPVAL 	R2 U5 ; R2 := U5
	79	[1323]	SETTABLE 	R1 K39 R2 ; R1["mElementDrawCallback"] := R2
	80	[1324]	GETUPVAL 	R1 U1 ; R1 := U1
	81	[1324]	GETUPVAL 	R2 U6 ; R2 := U6
	82	[1324]	SETTABLE 	R1 K40 R2 ; R1["mClipCreatedCallback"] := R2
	83	[1325]	GETUPVAL 	R1 U1 ; R1 := U1
	84	[1325]	GETGLOBAL	R2 K42 ; R2 := 0x5b54ec72
	85	[1325]	SETTABLE 	R1 K41 R2 ; R1["RectangleVisibleRangeMaterial"] := R2
	86	[1326]	GETUPVAL 	R1 U1 ; R1 := U1
	87	[1326]	GETGLOBAL	R2 K44 ; R2 := 0x0f20c9bd
	88	[1326]	SETTABLE 	R1 K43 R2 ; R1["VisibleRangeMaterial"] := R2
	89	[1327]	GETUPVAL 	R1 U1 ; R1 := U1
	90	[1327]	GETGLOBAL	R2 K46 ; R2 := 0x09b6dacc
	91	[1327]	SETTABLE 	R1 K45 R2 ; R1["TextVisibleRangeMaterial"] := R2
	92	[1328]	GETUPVAL 	R1 U1 ; R1 := U1
	93	[1328]	GETGLOBAL	R2 K48 ; R2 := 0x70f1a9cd
	94	[1328]	SETTABLE 	R1 K47 R2 ; R1["FlareVisibleRangeMaterial"] := R2
	95	[1329]	GETUPVAL 	R1 U1 ; R1 := U1
	96	[1329]	GETTABLE 	R1 R1 K49 ; R1 := R1["mSortMenu"]
	97	[1329]	SELF     	R1 R1 K50 ; R2 := R1; R1 := R1[0x8d77b2b2]
	98	[1329]	LOADK    	R3 := 200.000000
	99	[1329]	CALL     	R1 3 1 ; R1(R2,R3)
	100	[1330]	GETUPVAL 	R1 U1 ; R1 := U1
	101	[1330]	GETUPVAL 	R2 U7 ; R2 := U7
	102	[1330]	SETTABLE 	R1 K51 R2 ; R1["ElementWidth"] := R2
	103	[1331]	GETUPVAL 	R1 U1 ; R1 := U1
	104	[1331]	GETUPVAL 	R2 U7 ; R2 := U7
	105	[1331]	SETTABLE 	R1 K52 R2 ; R1["ElementHeight"] := R2
	106	[1332]	GETUPVAL 	R1 U1 ; R1 := U1
	107	[1332]	SETTABLE 	R1 K53 K54 ; R1["Width"] := 1000.000000
	108	[1333]	GETUPVAL 	R1 U1 ; R1 := U1
	109	[1333]	SETTABLE 	R1 K55 K56 ; R1["Height"] := 650.000000
	110	[1334]	GETUPVAL 	R1 U1 ; R1 := U1
	111	[1334]	SETTABLE 	R1 K57 K58 ; R1["ElementDimBuffer"] := 10.000000
	112	[1335]	GETUPVAL 	R1 U1 ; R1 := U1
	113	[1335]	SETTABLE 	R1 K59 K60 ; R1["ElementHeightBuffer"] := 25.000000
	114	[1336]	GETUPVAL 	R1 U1 ; R1 := U1
	115	[1336]	SETTABLE 	R1 K61 K62 ; R1["mHighlightAlphaFocusedOverride"] := 24.000000
	116	[1337]	GETUPVAL 	R1 U1 ; R1 := U1
	117	[1337]	SETTABLE 	R1 K63 K23 ; R1["mUseCornerForSelected"] := true
	118	[1338]	GETUPVAL 	R1 U1 ; R1 := U1
	119	[1338]	GETUPVAL 	R2 U8 ; R2 := U8
	120	[1338]	GETUPVAL 	R3 U9 ; R3 := U9
	121	[1338]	GETTABLE 	R3 R3 K65 ; R3 := R3["ENEMIES"]
	122	[1338]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 139
	123	[1338]	JMP      	139 ; PC := 139
	124	[1338]	GETUPVAL 	R2 U8 ; R2 := U8
	125	[1338]	GETUPVAL 	R3 U9 ; R3 := U9
	126	[1338]	GETTABLE 	R3 R3 K66 ; R3 := R3["SHIP_SCRAP"]
	127	[1338]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 139
	128	[1338]	JMP      	139 ; PC := 139
	129	[1338]	GETUPVAL 	R2 U8 ; R2 := U8
	130	[1338]	GETUPVAL 	R3 U9 ; R3 := U9
	131	[1338]	GETTABLE 	R3 R3 K67 ; R3 := R3["SHIP_PARTS"]
	132	[1338]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 139
	133	[1338]	JMP      	139 ; PC := 139
	134	[1338]	GETUPVAL 	R2 U8 ; R2 := U8
	135	[1338]	GETUPVAL 	R3 U9 ; R3 := U9
	136	[1338]	GETTABLE 	R3 R3 K68 ; R3 := R3["SHIP_RAW"]
	137	[1338]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 140
	138	[1338]	JMP      	140 ; PC := 140
	139	[1338]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 140
	140	[1338]	OP_LOADBOOL	R2 1 0 ; R2 := true
	141	[1338]	SETTABLE 	R1 K64 R2 ; R1["CanPreviewElements"] := R2
	142	[1339]	GETUPVAL 	R1 U8 ; R1 := U8
	143	[1339]	GETUPVAL 	R2 U9 ; R2 := U9
	144	[1339]	GETTABLE 	R2 R2 K66 ; R2 := R2["SHIP_SCRAP"]
	145	[1339]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 157
	146	[1339]	JMP      	157 ; PC := 157
	147	[1339]	GETUPVAL 	R1 U8 ; R1 := U8
	148	[1339]	GETUPVAL 	R2 U9 ; R2 := U9
	149	[1339]	GETTABLE 	R2 R2 K67 ; R2 := R2["SHIP_PARTS"]
	150	[1339]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 157
	151	[1339]	JMP      	157 ; PC := 157
	152	[1339]	GETUPVAL 	R1 U8 ; R1 := U8
	153	[1339]	GETUPVAL 	R2 U9 ; R2 := U9
	154	[1339]	GETTABLE 	R2 R2 K68 ; R2 := R2["SHIP_RAW"]
	155	[1339]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 159
	156	[1339]	JMP      	159 ; PC := 159
	157	[1340]	GETUPVAL 	R1 U1 ; R1 := U1
	158	[1340]	SETTABLE 	R1 K69 K23 ; R1["mShowLabels"] := true
	159	[1342]	GETUPVAL 	R1 U10 ; R1 := U10
	160	[1342]	GETTABLE 	R1 R1 K70 ; R1 := R1[0x27658fab]
	161	[1342]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	162	[1342]	GETUPVAL 	R3 U1 ; R3 := U1
	163	[1342]	CALL     	R1 3 1 ; R1(R2,R3)
	164	[1343]	GETUPVAL 	R1 U1 ; R1 := U1
	165	[1343]	GETTABLE 	R1 R1 K71 ; R1 := R1["mCategoryMenu"]
	166	[1343]	EQ       	1 R1 K27 ; if R1 == nil then PC := 186
	167	[1343]	JMP      	186 ; PC := 186
	168	[1344]	GETUPVAL 	R1 U1 ; R1 := U1
	169	[1344]	GETTABLE 	R1 R1 K71 ; R1 := R1["mCategoryMenu"]
	170	[1344]	GETUPVAL 	R2 U11 ; R2 := U11
	171	[1344]	GETTABLE 	R2 R2 K73 ; R2 := R2["LEFT_ALIGNED"]
	172	[1344]	SETTABLE 	R1 K72 R2 ; R1["mAlign"] := R2
	173	[1345]	GETUPVAL 	R1 U1 ; R1 := U1
	174	[1345]	GETTABLE 	R1 R1 K71 ; R1 := R1["mCategoryMenu"]
	175	[1345]	SETTABLE 	R1 K74 K23 ; R1["mHideEmptyCategories"] := true
	176	[1346]	GETUPVAL 	R1 U12 ; R1 := U12
	177	[1346]	CALL     	R1 1 2 ; R1 := R1()
	178	[1346]	TEST     	R1 0 ; if not R1 then PC := 186
	179	[1346]	JMP      	186 ; PC := 186
	180	[1347]	GETUPVAL 	R1 U1 ; R1 := U1
	181	[1347]	GETTABLE 	R1 R1 K71 ; R1 := R1["mCategoryMenu"]
	182	[1347]	SETTABLE 	R1 K75 K23 ; R1["mFitToGridWidth"] := true
	183	[1348]	GETUPVAL 	R1 U1 ; R1 := U1
	184	[1348]	GETTABLE 	R1 R1 K71 ; R1 := R1["mCategoryMenu"]
	185	[1348]	SETTABLE 	R1 K76 K77 ; R1["mFitGridWidthPadding"] := 21.000000
	186	[1351]	GETUPVAL 	R1 U1 ; R1 := U1
	187	[1428]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	188	[1428]	GETUPVAL 	R0 U13 ; R0 := U13
	189	[1428]	GETUPVAL 	R0 U14 ; R0 := U14
	190	[1428]	GETUPVAL 	R0 U15 ; R0 := U15
	191	[1428]	SETTABLE 	R1 K78 R2 ; R1["PreviewCallback"] := R2
	192	[1429]	GETUPVAL 	R1 U1 ; R1 := U1
	193	[1443]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	194	[1443]	GETUPVAL 	R0 U16 ; R0 := U16
	195	[1443]	GETUPVAL 	R0 U1 ; R0 := U1
	196	[1443]	GETUPVAL 	R0 U17 ; R0 := U17
	197	[1443]	GETUPVAL 	R0 U18 ; R0 := U18
	198	[1443]	SETTABLE 	R1 K79 R2 ; R1["AdditionalFilterFunction"] := R2
	199	[1445]	GETUPVAL 	R1 U19 ; R1 := U19
	200	[1445]	GETTABLE 	R1 R1 K80 ; R1 := R1[0x52fb05b3]
	201	[1445]	GETGLOBAL	R2 K81 ; R2 := 0x58b09245
	202	[1445]	CALL     	R1 2 2 ; R1 := R1(R2)
	203	[1446]	OP_LOADBOOL	R2 0 0 ; R2 := false
	204	[1447]	GETGLOBAL	R3 K82 ; R3 := 0x7b998233
	205	[1447]	GETUPVAL 	R4 U20 ; R4 := U20
	206	[1447]	CALL     	R3 2 2 ; R3 := R3(R4)
	207	[1447]	TEST     	R3 1 ; if R3 then PC := 239
	208	[1447]	JMP      	239 ; PC := 239
	209	[1448]	GETUPVAL 	R3 U20 ; R3 := U20
	210	[1448]	SELF     	R3 R3 K83 ; R4 := R3; R3 := R3[0x25a6e75e]
	211	[1448]	CALL     	R3 2 2 ; R3 := R3(R4)
	212	[1449]	TEST     	R1 1 ; if R1 then PC := 239
	213	[1449]	JMP      	239 ; PC := 239
	214	[1449]	GETGLOBAL	R4 K82 ; R4 := 0x7b998233
	215	[1449]	MOVE     	R5 R3 ; R5 := R3
	216	[1449]	CALL     	R4 2 2 ; R4 := R4(R5)
	217	[1449]	TEST     	R4 1 ; if R4 then PC := 239
	218	[1449]	JMP      	239 ; PC := 239
	219	[1450]	SELF     	R4 R3 K84 ; R5 := R3; R4 := R3[0xf4045b7e]
	220	[1450]	CALL     	R4 2 2 ; R4 := R4(R5)
	221	[1451]	LOADK    	R5 := 1.000000
	222	[1451]	LEN      	R6 R4 ; R6 := # R4
	223	[1451]	LOADK    	R7 := 1.000000
	224	[1451]	FORPREP  	R5 238 ; R5 -= R7; PC := 238
	225	[1452]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	226	[1452]	GETTABLE 	R9 R9 K85 ; R9 := R9["mItemType"]
	227	[1452]	SELF     	R9 R9 K86 ; R10 := R9; R9 := R9[0xf2deaf69]
	228	[1452]	GETGLOBAL	R11 K87 ; R11 := gFocusLensType
	229	[1452]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	230	[1452]	TEST     	R9 0 ; if not R9 then PC := 238
	231	[1452]	JMP      	238 ; PC := 238
	232	[1452]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	233	[1452]	GETTABLE 	R9 R9 K88 ; R9 := R9["mItemCount"]
	234	[1452]	LT       	0 K21 R9 ; if 0.000000 >= R9 then PC := 238
	235	[1452]	JMP      	238 ; PC := 238
	236	[1453]	OP_LOADBOOL	R2 1 0 ; R2 := true
	237	[1455]	JMP      	239 ; PC := 239
	238	[1451]	FORLOOP  	R5 225 ; R5 += R7; if R5 <= R6 then begin PC := 225; R8 := R5 end
	239	[1461]	NEWTABLE 	R9 0 0 ; R9 := {}
	240	[1462]	GETUPVAL 	R10 U8 ; R10 := U8
	241	[1462]	GETUPVAL 	R11 U9 ; R11 := U9
	242	[1462]	GETTABLE 	R11 R11 K89 ; R11 := R11["TRADE_MODS"]
	243	[1462]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 253
	244	[1462]	JMP      	253 ; PC := 253
	245	[1463]	GETUPVAL 	R10 U21 ; R10 := U21
	246	[1463]	GETTABLE 	R10 R10 K90 ; R10 := R10[0xe5a36de2]
	247	[1463]	OP_LOADBOOL	R11 0 0 ; R11 := false
	248	[1463]	OP_LOADBOOL	R12 1 0 ; R12 := true
	249	[1463]	OP_LOADBOOL	R13 1 0 ; R13 := true
	250	[1463]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	251	[1463]	MOVE     	R9 R10 ; R9 := R10
	252	[1463]	JMP      	1058 ; PC := 1058
	253	[1464]	GETUPVAL 	R10 U8 ; R10 := U8
	254	[1464]	GETUPVAL 	R11 U9 ; R11 := U9
	255	[1464]	GETTABLE 	R11 R11 K91 ; R11 := R11["PRIMEPARTS"]
	256	[1464]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 271
	257	[1464]	JMP      	271 ; PC := 271
	258	[1465]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	259	[1465]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	260	[1465]	MOVE     	R11 R9 ; R11 := R9
	261	[1465]	NEWTABLE 	R12 0 3 ; R12 := {}
	262	[1465]	SETTABLE 	R12 K94 K95 ; R12["Name"] := "/Lotus/Language/Categories/PRIME"
	263	[1465]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	264	[1465]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	265	[1465]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	266	[1465]	GETUPVAL 	R13 U17 ; R13 := U17
	267	[1465]	GETTABLE 	R13 R13 K100 ; R13 := R13["PRIME"]
	268	[1465]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	269	[1465]	CALL     	R10 3 1 ; R10(R11,R12)
	270	[1465]	JMP      	1058 ; PC := 1058
	271	[1466]	GETUPVAL 	R10 U8 ; R10 := U8
	272	[1466]	GETUPVAL 	R11 U9 ; R11 := U9
	273	[1466]	GETTABLE 	R11 R11 K101 ; R11 := R11["TREASURE"]
	274	[1466]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 281
	275	[1466]	JMP      	281 ; PC := 281
	276	[1466]	GETUPVAL 	R10 U8 ; R10 := U8
	277	[1466]	GETUPVAL 	R11 U9 ; R11 := U9
	278	[1466]	GETTABLE 	R11 R11 K102 ; R11 := R11["SHARDS"]
	279	[1466]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 294
	280	[1466]	JMP      	294 ; PC := 294
	281	[1467]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	282	[1467]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	283	[1467]	MOVE     	R11 R9 ; R11 := R9
	284	[1467]	NEWTABLE 	R12 0 3 ; R12 := {}
	285	[1467]	SETTABLE 	R12 K94 K103 ; R12["Name"] := "/Lotus/Language/Categories/MISC"
	286	[1467]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	287	[1467]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	288	[1467]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	289	[1467]	GETUPVAL 	R13 U17 ; R13 := U17
	290	[1467]	GETTABLE 	R13 R13 K104 ; R13 := R13["MISC"]
	291	[1467]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	292	[1467]	CALL     	R10 3 1 ; R10(R11,R12)
	293	[1467]	JMP      	1058 ; PC := 1058
	294	[1468]	GETUPVAL 	R10 U8 ; R10 := U8
	295	[1468]	GETUPVAL 	R11 U9 ; R11 := U9
	296	[1468]	GETTABLE 	R11 R11 K66 ; R11 := R11["SHIP_SCRAP"]
	297	[1468]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 309
	298	[1468]	JMP      	309 ; PC := 309
	299	[1468]	GETUPVAL 	R10 U8 ; R10 := U8
	300	[1468]	GETUPVAL 	R11 U9 ; R11 := U9
	301	[1468]	GETTABLE 	R11 R11 K67 ; R11 := R11["SHIP_PARTS"]
	302	[1468]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 309
	303	[1468]	JMP      	309 ; PC := 309
	304	[1468]	GETUPVAL 	R10 U8 ; R10 := U8
	305	[1468]	GETUPVAL 	R11 U9 ; R11 := U9
	306	[1468]	GETTABLE 	R11 R11 K68 ; R11 := R11["SHIP_RAW"]
	307	[1468]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 406
	308	[1468]	JMP      	406 ; PC := 406
	309	[1469]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	310	[1469]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	311	[1469]	MOVE     	R11 R9 ; R11 := R9
	312	[1469]	NEWTABLE 	R12 0 3 ; R12 := {}
	313	[1469]	SETTABLE 	R12 K94 K105 ; R12["Name"] := "/Lotus/Language/Menu/CategoryAll"
	314	[1469]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	315	[1469]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	316	[1469]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	317	[1469]	GETUPVAL 	R13 U17 ; R13 := U17
	318	[1469]	GETTABLE 	R13 R13 K106 ; R13 := R13["ALL"]
	319	[1469]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	320	[1469]	CALL     	R10 3 1 ; R10(R11,R12)
	321	[1470]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	322	[1470]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	323	[1470]	MOVE     	R11 R9 ; R11 := R9
	324	[1470]	NEWTABLE 	R12 0 3 ; R12 := {}
	325	[1470]	SETTABLE 	R12 K94 K107 ; R12["Name"] := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKI"
	326	[1470]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	327	[1470]	GETTABLE 	R13 R13 K109 ; R13 := R13[27.000000]
	328	[1470]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	329	[1470]	GETUPVAL 	R13 U17 ; R13 := U17
	330	[1470]	GETTABLE 	R13 R13 K110 ; R13 := R13["MKI"]
	331	[1470]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	332	[1470]	CALL     	R10 3 1 ; R10(R11,R12)
	333	[1471]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	334	[1471]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	335	[1471]	MOVE     	R11 R9 ; R11 := R9
	336	[1471]	NEWTABLE 	R12 0 3 ; R12 := {}
	337	[1471]	SETTABLE 	R12 K94 K111 ; R12["Name"] := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKII"
	338	[1471]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	339	[1471]	GETTABLE 	R13 R13 K112 ; R13 := R13[28.000000]
	340	[1471]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	341	[1471]	GETUPVAL 	R13 U17 ; R13 := U17
	342	[1471]	GETTABLE 	R13 R13 K113 ; R13 := R13["MKII"]
	343	[1471]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	344	[1471]	CALL     	R10 3 1 ; R10(R11,R12)
	345	[1472]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	346	[1472]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	347	[1472]	MOVE     	R11 R9 ; R11 := R9
	348	[1472]	NEWTABLE 	R12 0 3 ; R12 := {}
	349	[1472]	SETTABLE 	R12 K94 K114 ; R12["Name"] := "/Lotus/Language/Categories/CREWSHIP_WEAPONS_MKIII"
	350	[1472]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	351	[1472]	GETTABLE 	R13 R13 K115 ; R13 := R13[29.000000]
	352	[1472]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	353	[1472]	GETUPVAL 	R13 U17 ; R13 := U17
	354	[1472]	GETTABLE 	R13 R13 K116 ; R13 := R13["MKIII"]
	355	[1472]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	356	[1472]	CALL     	R10 3 1 ; R10(R11,R12)
	357	[1473]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	358	[1473]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	359	[1473]	MOVE     	R11 R9 ; R11 := R9
	360	[1473]	NEWTABLE 	R12 0 3 ; R12 := {}
	361	[1473]	SETTABLE 	R12 K94 K117 ; R12["Name"] := "/Lotus/Language/Menu/AP_TACTIC_RAILJACK"
	362	[1473]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	363	[1473]	GETTABLE 	R13 R13 K118 ; R13 := R13[30.000000]
	364	[1473]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	365	[1473]	GETUPVAL 	R13 U17 ; R13 := U17
	366	[1473]	GETTABLE 	R13 R13 K119 ; R13 := R13["LAVAN"]
	367	[1473]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	368	[1473]	CALL     	R10 3 1 ; R10(R11,R12)
	369	[1474]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	370	[1474]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	371	[1474]	MOVE     	R11 R9 ; R11 := R9
	372	[1474]	NEWTABLE 	R12 0 3 ; R12 := {}
	373	[1474]	SETTABLE 	R12 K94 K120 ; R12["Name"] := "/Lotus/Language/Menu/AP_ATTACK_RAILJACK"
	374	[1474]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	375	[1474]	GETTABLE 	R13 R13 K121 ; R13 := R13[31.000000]
	376	[1474]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	377	[1474]	GETUPVAL 	R13 U17 ; R13 := U17
	378	[1474]	GETTABLE 	R13 R13 K122 ; R13 := R13["VIDAR"]
	379	[1474]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	380	[1474]	CALL     	R10 3 1 ; R10(R11,R12)
	381	[1475]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	382	[1475]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	383	[1475]	MOVE     	R11 R9 ; R11 := R9
	384	[1475]	NEWTABLE 	R12 0 3 ; R12 := {}
	385	[1475]	SETTABLE 	R12 K94 K123 ; R12["Name"] := "/Lotus/Language/Menu/AP_DEFENSE_RAILJACK"
	386	[1475]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	387	[1475]	GETTABLE 	R13 R13 K124 ; R13 := R13[32.000000]
	388	[1475]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	389	[1475]	GETUPVAL 	R13 U17 ; R13 := U17
	390	[1475]	GETTABLE 	R13 R13 K125 ; R13 := R13["ZEKTI"]
	391	[1475]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	392	[1475]	CALL     	R10 3 1 ; R10(R11,R12)
	393	[1476]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	394	[1476]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	395	[1476]	MOVE     	R11 R9 ; R11 := R9
	396	[1476]	NEWTABLE 	R12 0 3 ; R12 := {}
	397	[1476]	SETTABLE 	R12 K94 K126 ; R12["Name"] := "/Lotus/Language/Menu/AP_UNIVERSAL_RAILJACK"
	398	[1476]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	399	[1476]	GETTABLE 	R13 R13 K127 ; R13 := R13[33.000000]
	400	[1476]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	401	[1476]	GETUPVAL 	R13 U17 ; R13 := U17
	402	[1476]	GETTABLE 	R13 R13 K128 ; R13 := R13["SIGMA"]
	403	[1476]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	404	[1476]	CALL     	R10 3 1 ; R10(R11,R12)
	405	[1476]	JMP      	1058 ; PC := 1058
	406	[1477]	GETUPVAL 	R10 U8 ; R10 := U8
	407	[1477]	GETUPVAL 	R11 U9 ; R11 := U9
	408	[1477]	GETTABLE 	R11 R11 K129 ; R11 := R11["FISH"]
	409	[1477]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 460
	410	[1477]	JMP      	460 ; PC := 460
	411	[1478]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	412	[1478]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	413	[1478]	MOVE     	R11 R9 ; R11 := R9
	414	[1478]	NEWTABLE 	R12 0 3 ; R12 := {}
	415	[1478]	SETTABLE 	R12 K94 K105 ; R12["Name"] := "/Lotus/Language/Menu/CategoryAll"
	416	[1478]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	417	[1478]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	418	[1478]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	419	[1478]	GETUPVAL 	R13 U17 ; R13 := U17
	420	[1478]	GETTABLE 	R13 R13 K106 ; R13 := R13["ALL"]
	421	[1478]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	422	[1478]	CALL     	R10 3 1 ; R10(R11,R12)
	423	[1479]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	424	[1479]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	425	[1479]	MOVE     	R11 R9 ; R11 := R9
	426	[1479]	NEWTABLE 	R12 0 3 ; R12 := {}
	427	[1479]	SETTABLE 	R12 K94 K130 ; R12["Name"] := "/Lotus/Language/UiElements/SelectAllFishCategorySmall"
	428	[1479]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	429	[1479]	GETTABLE 	R13 R13 K131 ; R13 := R13[17.000000]
	430	[1479]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	431	[1479]	GETUPVAL 	R13 U22 ; R13 := U22
	432	[1479]	GETTABLE 	R13 R13 K132 ; R13 := R13["FISH_SMALL"]
	433	[1479]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	434	[1479]	CALL     	R10 3 1 ; R10(R11,R12)
	435	[1480]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	436	[1480]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	437	[1480]	MOVE     	R11 R9 ; R11 := R9
	438	[1480]	NEWTABLE 	R12 0 3 ; R12 := {}
	439	[1480]	SETTABLE 	R12 K94 K133 ; R12["Name"] := "/Lotus/Language/UiElements/SelectAllFishCategoryMedium"
	440	[1480]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	441	[1480]	GETTABLE 	R13 R13 K134 ; R13 := R13[18.000000]
	442	[1480]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	443	[1480]	GETUPVAL 	R13 U22 ; R13 := U22
	444	[1480]	GETTABLE 	R13 R13 K135 ; R13 := R13["FISH_MEDIUM"]
	445	[1480]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	446	[1480]	CALL     	R10 3 1 ; R10(R11,R12)
	447	[1481]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	448	[1481]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	449	[1481]	MOVE     	R11 R9 ; R11 := R9
	450	[1481]	NEWTABLE 	R12 0 3 ; R12 := {}
	451	[1481]	SETTABLE 	R12 K94 K136 ; R12["Name"] := "/Lotus/Language/UiElements/SelectAllFishCategoryLarge"
	452	[1481]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	453	[1481]	GETTABLE 	R13 R13 K137 ; R13 := R13[19.000000]
	454	[1481]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	455	[1481]	GETUPVAL 	R13 U22 ; R13 := U22
	456	[1481]	GETTABLE 	R13 R13 K138 ; R13 := R13["FISH_LARGE"]
	457	[1481]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	458	[1481]	CALL     	R10 3 1 ; R10(R11,R12)
	459	[1481]	JMP      	1058 ; PC := 1058
	460	[1482]	GETUPVAL 	R10 U8 ; R10 := U8
	461	[1482]	GETUPVAL 	R11 U9 ; R11 := U9
	462	[1482]	GETTABLE 	R11 R11 K65 ; R11 := R11["ENEMIES"]
	463	[1482]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 602
	464	[1482]	JMP      	602 ; PC := 602
	465	[1483]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	466	[1483]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	467	[1483]	MOVE     	R11 R9 ; R11 := R9
	468	[1483]	NEWTABLE 	R12 0 3 ; R12 := {}
	469	[1483]	GETUPVAL 	R13 U17 ; R13 := U17
	470	[1483]	GETTABLE 	R13 R13 K106 ; R13 := R13["ALL"]
	471	[1483]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	472	[1483]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	473	[1483]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	474	[1483]	LOADK    	R15 K105 ; R15 := "/Lotus/Language/Menu/CategoryAll"
	475	[1483]	OP_LOADBOOL	R16 0 0 ; R16 := false
	476	[1483]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	477	[1483]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	478	[1483]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	479	[1483]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	480	[1483]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	481	[1483]	CALL     	R10 3 1 ; R10(R11,R12)
	482	[1484]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	483	[1484]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	484	[1484]	MOVE     	R11 R9 ; R11 := R9
	485	[1484]	NEWTABLE 	R12 0 3 ; R12 := {}
	486	[1484]	GETUPVAL 	R13 U17 ; R13 := U17
	487	[1484]	GETTABLE 	R13 R13 K140 ; R13 := R13["GRINEER"]
	488	[1484]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	489	[1484]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	490	[1484]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	491	[1484]	LOADK    	R15 K141 ; R15 := "/Lotus/Language/Game/Faction_GrineerUC"
	492	[1484]	OP_LOADBOOL	R16 0 0 ; R16 := false
	493	[1484]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	494	[1484]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	495	[1484]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	496	[1484]	GETTABLE 	R13 R13 K142 ; R13 := R13["UICategoryIcon_GrineerOn"]
	497	[1484]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	498	[1484]	CALL     	R10 3 1 ; R10(R11,R12)
	499	[1485]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	500	[1485]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	501	[1485]	MOVE     	R11 R9 ; R11 := R9
	502	[1485]	NEWTABLE 	R12 0 3 ; R12 := {}
	503	[1485]	GETUPVAL 	R13 U17 ; R13 := U17
	504	[1485]	GETTABLE 	R13 R13 K143 ; R13 := R13["CORPUS"]
	505	[1485]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	506	[1485]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	507	[1485]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	508	[1485]	LOADK    	R15 K144 ; R15 := "/Lotus/Language/Game/Faction_CorpusUC"
	509	[1485]	OP_LOADBOOL	R16 0 0 ; R16 := false
	510	[1485]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	511	[1485]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	512	[1485]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	513	[1485]	GETTABLE 	R13 R13 K145 ; R13 := R13["UICategoryIcon_CorpusOn"]
	514	[1485]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	515	[1485]	CALL     	R10 3 1 ; R10(R11,R12)
	516	[1486]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	517	[1486]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	518	[1486]	MOVE     	R11 R9 ; R11 := R9
	519	[1486]	NEWTABLE 	R12 0 3 ; R12 := {}
	520	[1486]	GETUPVAL 	R13 U17 ; R13 := U17
	521	[1486]	GETTABLE 	R13 R13 K146 ; R13 := R13["INFESTED"]
	522	[1486]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	523	[1486]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	524	[1486]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	525	[1486]	LOADK    	R15 K147 ; R15 := "/Lotus/Language/Game/Faction_InfestationUC"
	526	[1486]	OP_LOADBOOL	R16 0 0 ; R16 := false
	527	[1486]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	528	[1486]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	529	[1486]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	530	[1486]	GETTABLE 	R13 R13 K148 ; R13 := R13["UICategoryIcon_InfestedOn"]
	531	[1486]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	532	[1486]	CALL     	R10 3 1 ; R10(R11,R12)
	533	[1487]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	534	[1487]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	535	[1487]	MOVE     	R11 R9 ; R11 := R9
	536	[1487]	NEWTABLE 	R12 0 3 ; R12 := {}
	537	[1487]	GETUPVAL 	R13 U17 ; R13 := U17
	538	[1487]	GETTABLE 	R13 R13 K149 ; R13 := R13["WILD"]
	539	[1487]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	540	[1487]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	541	[1487]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	542	[1487]	LOADK    	R15 K150 ; R15 := "/Lotus/Language/Game/Faction_WildUC"
	543	[1487]	OP_LOADBOOL	R16 0 0 ; R16 := false
	544	[1487]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	545	[1487]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	546	[1487]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	547	[1487]	GETTABLE 	R13 R13 K151 ; R13 := R13["UICategoryIcon_WildOn"]
	548	[1487]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	549	[1487]	CALL     	R10 3 1 ; R10(R11,R12)
	550	[1488]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	551	[1488]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	552	[1488]	MOVE     	R11 R9 ; R11 := R9
	553	[1488]	NEWTABLE 	R12 0 3 ; R12 := {}
	554	[1488]	GETUPVAL 	R13 U17 ; R13 := U17
	555	[1488]	GETTABLE 	R13 R13 K152 ; R13 := R13["OROKIN"]
	556	[1488]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	557	[1488]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	558	[1488]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	559	[1488]	LOADK    	R15 K153 ; R15 := "/Lotus/Language/Game/Faction_OrokinUC"
	560	[1488]	OP_LOADBOOL	R16 0 0 ; R16 := false
	561	[1488]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	562	[1488]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	563	[1488]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	564	[1488]	GETTABLE 	R13 R13 K154 ; R13 := R13["UICategoryIcon_OrokinOn"]
	565	[1488]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	566	[1488]	CALL     	R10 3 1 ; R10(R11,R12)
	567	[1489]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	568	[1489]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	569	[1489]	MOVE     	R11 R9 ; R11 := R9
	570	[1489]	NEWTABLE 	R12 0 3 ; R12 := {}
	571	[1489]	GETUPVAL 	R13 U17 ; R13 := U17
	572	[1489]	GETTABLE 	R13 R13 K155 ; R13 := R13["SENTIENT"]
	573	[1489]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	574	[1489]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	575	[1489]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	576	[1489]	LOADK    	R15 K156 ; R15 := "/Lotus/Language/Game/Faction_SentientUC"
	577	[1489]	OP_LOADBOOL	R16 0 0 ; R16 := false
	578	[1489]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	579	[1489]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	580	[1489]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	581	[1489]	GETTABLE 	R13 R13 K157 ; R13 := R13["UICategoryIcon_SentientOn"]
	582	[1489]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	583	[1489]	CALL     	R10 3 1 ; R10(R11,R12)
	584	[1490]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	585	[1490]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	586	[1490]	MOVE     	R11 R9 ; R11 := R9
	587	[1490]	NEWTABLE 	R12 0 3 ; R12 := {}
	588	[1490]	GETUPVAL 	R13 U17 ; R13 := U17
	589	[1490]	GETTABLE 	R13 R13 K158 ; R13 := R13["NARMER"]
	590	[1490]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	591	[1490]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	592	[1490]	SELF     	R13 R13 K139 ; R14 := R13; R13 := R13[0x42b04007]
	593	[1490]	LOADK    	R15 K159 ; R15 := "/Lotus/Language/Factions/Faction_NewWarNarmerUC"
	594	[1490]	OP_LOADBOOL	R16 0 0 ; R16 := false
	595	[1490]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	596	[1490]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	597	[1490]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	598	[1490]	GETTABLE 	R13 R13 K160 ; R13 := R13["UICategoryIcon_NarmerOn"]
	599	[1490]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	600	[1490]	CALL     	R10 3 1 ; R10(R11,R12)
	601	[1490]	JMP      	1058 ; PC := 1058
	602	[1491]	GETUPVAL 	R10 U8 ; R10 := U8
	603	[1491]	GETUPVAL 	R11 U9 ; R11 := U9
	604	[1491]	GETTABLE 	R11 R11 K161 ; R11 := R11["DECODONATE"]
	605	[1491]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 720
	606	[1491]	JMP      	720 ; PC := 720
	607	[1492]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	608	[1492]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	609	[1492]	MOVE     	R11 R9 ; R11 := R9
	610	[1492]	NEWTABLE 	R12 0 3 ; R12 := {}
	611	[1492]	GETUPVAL 	R13 U23 ; R13 := U23
	612	[1492]	GETTABLE 	R13 R13 K106 ; R13 := R13["ALL"]
	613	[1492]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	614	[1492]	GETGLOBAL	R13 K162 ; R13 := 0x603636ad
	615	[1492]	LOADK    	R14 K105 ; R14 := "/Lotus/Language/Menu/CategoryAll"
	616	[1492]	NEWTABLE 	R15 0 0 ; R15 := {}
	617	[1492]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	618	[1492]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	619	[1492]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	620	[1492]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	621	[1492]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	622	[1492]	CALL     	R10 3 1 ; R10(R11,R12)
	623	[1493]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	624	[1493]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	625	[1493]	MOVE     	R11 R9 ; R11 := R9
	626	[1493]	NEWTABLE 	R12 0 3 ; R12 := {}
	627	[1493]	GETUPVAL 	R13 U23 ; R13 := U23
	628	[1493]	GETTABLE 	R13 R13 K163 ; R13 := R13["AYATAN"]
	629	[1493]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	630	[1493]	GETGLOBAL	R13 K162 ; R13 := 0x603636ad
	631	[1493]	LOADK    	R14 K164 ; R14 := "/Lotus/Language/FusionTreasure/FusionTreasureMgr_Title"
	632	[1493]	NEWTABLE 	R15 0 0 ; R15 := {}
	633	[1493]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	634	[1493]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	635	[1493]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	636	[1493]	GETTABLE 	R13 R13 K165 ; R13 := R13["UICategoryIcon_FusionTreasuresOn"]
	637	[1493]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	638	[1493]	CALL     	R10 3 1 ; R10(R11,R12)
	639	[1494]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	640	[1494]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	641	[1494]	MOVE     	R11 R9 ; R11 := R9
	642	[1494]	NEWTABLE 	R12 0 3 ; R12 := {}
	643	[1494]	GETUPVAL 	R13 U23 ; R13 := U23
	644	[1494]	GETTABLE 	R13 R13 K166 ; R13 := R13["NOGGLES"]
	645	[1494]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	646	[1494]	GETGLOBAL	R13 K162 ; R13 := 0x603636ad
	647	[1494]	LOADK    	R14 K167 ; R14 := "/Lotus/Language/Categories/Noggles"
	648	[1494]	NEWTABLE 	R15 0 0 ; R15 := {}
	649	[1494]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	650	[1494]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	651	[1494]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	652	[1494]	GETTABLE 	R13 R13 K168 ; R13 := R13["UICategoryIcon_NogglesOn"]
	653	[1494]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	654	[1494]	CALL     	R10 3 1 ; R10(R11,R12)
	655	[1495]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	656	[1495]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	657	[1495]	MOVE     	R11 R9 ; R11 := R9
	658	[1495]	NEWTABLE 	R12 0 3 ; R12 := {}
	659	[1495]	GETUPVAL 	R13 U23 ; R13 := U23
	660	[1495]	GETTABLE 	R13 R13 K169 ; R13 := R13["FRAMES"]
	661	[1495]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	662	[1495]	GETGLOBAL	R13 K162 ; R13 := 0x603636ad
	663	[1495]	LOADK    	R14 K170 ; R14 := "/Lotus/Language/Categories/PictureFrames"
	664	[1495]	NEWTABLE 	R15 0 0 ; R15 := {}
	665	[1495]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	666	[1495]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	667	[1495]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	668	[1495]	GETTABLE 	R13 R13 K171 ; R13 := R13["UICategoryIcon_DisplaysOn"]
	669	[1495]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	670	[1495]	CALL     	R10 3 1 ; R10(R11,R12)
	671	[1496]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	672	[1496]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	673	[1496]	MOVE     	R11 R9 ; R11 := R9
	674	[1496]	NEWTABLE 	R12 0 3 ; R12 := {}
	675	[1496]	GETUPVAL 	R13 U23 ; R13 := U23
	676	[1496]	GETTABLE 	R13 R13 K172 ; R13 := R13["RESOURCES"]
	677	[1496]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	678	[1496]	GETGLOBAL	R13 K162 ; R13 := 0x603636ad
	679	[1496]	LOADK    	R14 K173 ; R14 := "/Lotus/Language/Categories/RESOURCES"
	680	[1496]	NEWTABLE 	R15 0 0 ; R15 := {}
	681	[1496]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	682	[1496]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	683	[1496]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	684	[1496]	GETTABLE 	R13 R13 K174 ; R13 := R13["UICategoryIcon_MaterialsOn"]
	685	[1496]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	686	[1496]	CALL     	R10 3 1 ; R10(R11,R12)
	687	[1497]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	688	[1497]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	689	[1497]	MOVE     	R11 R9 ; R11 := R9
	690	[1497]	NEWTABLE 	R12 0 3 ; R12 := {}
	691	[1497]	GETUPVAL 	R13 U23 ; R13 := U23
	692	[1497]	GETTABLE 	R13 R13 K175 ; R13 := R13["COMPANIONS"]
	693	[1497]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	694	[1497]	GETGLOBAL	R13 K162 ; R13 := 0x603636ad
	695	[1497]	LOADK    	R14 K176 ; R14 := "/Lotus/Language/Menu/Store_Companions"
	696	[1497]	NEWTABLE 	R15 0 0 ; R15 := {}
	697	[1497]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	698	[1497]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	699	[1497]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	700	[1497]	GETTABLE 	R13 R13 K177 ; R13 := R13["UICategoryIcon_CompanionsOn"]
	701	[1497]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	702	[1497]	CALL     	R10 3 1 ; R10(R11,R12)
	703	[1498]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	704	[1498]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	705	[1498]	MOVE     	R11 R9 ; R11 := R9
	706	[1498]	NEWTABLE 	R12 0 3 ; R12 := {}
	707	[1498]	GETUPVAL 	R13 U23 ; R13 := U23
	708	[1498]	GETTABLE 	R13 R13 K104 ; R13 := R13["MISC"]
	709	[1498]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	710	[1498]	GETGLOBAL	R13 K162 ; R13 := 0x603636ad
	711	[1498]	LOADK    	R14 K103 ; R14 := "/Lotus/Language/Categories/MISC"
	712	[1498]	NEWTABLE 	R15 0 0 ; R15 := {}
	713	[1498]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	714	[1498]	SETTABLE 	R12 K94 R13 ; R12["Name"] := R13
	715	[1498]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	716	[1498]	GETTABLE 	R13 R13 K178 ; R13 := R13["UICategoryIcon_MiscOn"]
	717	[1498]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	718	[1498]	CALL     	R10 3 1 ; R10(R11,R12)
	719	[1498]	JMP      	1058 ; PC := 1058
	720	[1499]	GETUPVAL 	R10 U8 ; R10 := U8
	721	[1499]	GETUPVAL 	R11 U9 ; R11 := U9
	722	[1499]	GETTABLE 	R11 R11 K179 ; R11 := R11["SYNDDONATE"]
	723	[1499]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 738
	724	[1499]	JMP      	738 ; PC := 738
	725	[1500]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	726	[1500]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	727	[1500]	MOVE     	R11 R9 ; R11 := R9
	728	[1500]	NEWTABLE 	R12 0 3 ; R12 := {}
	729	[1500]	SETTABLE 	R12 K94 K105 ; R12["Name"] := "/Lotus/Language/Menu/CategoryAll"
	730	[1500]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	731	[1500]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	732	[1500]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	733	[1500]	GETUPVAL 	R13 U17 ; R13 := U17
	734	[1500]	GETTABLE 	R13 R13 K106 ; R13 := R13["ALL"]
	735	[1500]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	736	[1500]	CALL     	R10 3 1 ; R10(R11,R12)
	737	[1500]	JMP      	1058 ; PC := 1058
	738	[1502]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	739	[1502]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	740	[1502]	MOVE     	R11 R9 ; R11 := R9
	741	[1502]	NEWTABLE 	R12 0 3 ; R12 := {}
	742	[1502]	SETTABLE 	R12 K94 K105 ; R12["Name"] := "/Lotus/Language/Menu/CategoryAll"
	743	[1502]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	744	[1502]	GETTABLE 	R13 R13 K98 ; R13 := R13["UICategoryIcon_AllOn"]
	745	[1502]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	746	[1502]	GETUPVAL 	R13 U17 ; R13 := U17
	747	[1502]	GETTABLE 	R13 R13 K106 ; R13 := R13["ALL"]
	748	[1502]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	749	[1502]	CALL     	R10 3 1 ; R10(R11,R12)
	750	[1504]	GETUPVAL 	R10 U24 ; R10 := U24
	751	[1504]	CALL     	R10 1 2 ; R10 := R10()
	752	[1504]	TEST     	R10 1 ; if R10 then PC := 766
	753	[1504]	JMP      	766 ; PC := 766
	754	[1505]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	755	[1505]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	756	[1505]	MOVE     	R11 R9 ; R11 := R9
	757	[1505]	NEWTABLE 	R12 0 3 ; R12 := {}
	758	[1505]	SETTABLE 	R12 K94 K180 ; R12["Name"] := "/Lotus/Language/Menu/Store_Warframes"
	759	[1505]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	760	[1505]	GETTABLE 	R13 R13 K181 ; R13 := R13[2.000000]
	761	[1505]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	762	[1505]	GETUPVAL 	R13 U17 ; R13 := U17
	763	[1505]	GETTABLE 	R13 R13 K182 ; R13 := R13["WARFRAME"]
	764	[1505]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	765	[1505]	CALL     	R10 3 1 ; R10(R11,R12)
	766	[1507]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	767	[1507]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	768	[1507]	MOVE     	R11 R9 ; R11 := R9
	769	[1507]	NEWTABLE 	R12 0 3 ; R12 := {}
	770	[1507]	SETTABLE 	R12 K94 K183 ; R12["Name"] := "/Lotus/Language/Menu/ItemInventory_Weapons"
	771	[1507]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	772	[1507]	GETTABLE 	R13 R13 K184 ; R13 := R13[3.000000]
	773	[1507]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	774	[1507]	GETUPVAL 	R13 U17 ; R13 := U17
	775	[1507]	GETTABLE 	R13 R13 K185 ; R13 := R13["WEAPONS"]
	776	[1507]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	777	[1507]	CALL     	R10 3 1 ; R10(R11,R12)
	778	[1508]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	779	[1508]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	780	[1508]	MOVE     	R11 R9 ; R11 := R9
	781	[1508]	NEWTABLE 	R12 0 3 ; R12 := {}
	782	[1508]	SETTABLE 	R12 K94 K186 ; R12["Name"] := "/Lotus/Language/Menu/Global_ProductCategory_Robotics"
	783	[1508]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	784	[1508]	GETTABLE 	R13 R13 K187 ; R13 := R13[4.000000]
	785	[1508]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	786	[1508]	GETUPVAL 	R13 U17 ; R13 := U17
	787	[1508]	GETTABLE 	R13 R13 K188 ; R13 := R13["SENTINEL"]
	788	[1508]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	789	[1508]	CALL     	R10 3 1 ; R10(R11,R12)
	790	[1509]	GETUPVAL 	R10 U24 ; R10 := U24
	791	[1509]	CALL     	R10 1 2 ; R10 := R10()
	792	[1509]	TEST     	R10 0 ; if not R10 then PC := 806
	793	[1509]	JMP      	806 ; PC := 806
	794	[1510]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	795	[1510]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	796	[1510]	MOVE     	R11 R9 ; R11 := R9
	797	[1510]	NEWTABLE 	R12 0 3 ; R12 := {}
	798	[1510]	SETTABLE 	R12 K94 K189 ; R12["Name"] := "/Lotus/Language/Menu/Archwing_Weapons"
	799	[1510]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	800	[1510]	GETTABLE 	R13 R13 K190 ; R13 := R13[14.000000]
	801	[1510]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	802	[1510]	GETUPVAL 	R13 U17 ; R13 := U17
	803	[1510]	GETTABLE 	R13 R13 K191 ; R13 := R13["ARCHWINGWEAPONS"]
	804	[1510]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	805	[1510]	CALL     	R10 3 1 ; R10(R11,R12)
	806	[1512]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	807	[1512]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	808	[1512]	MOVE     	R11 R9 ; R11 := R9
	809	[1512]	NEWTABLE 	R12 0 3 ; R12 := {}
	810	[1512]	SETTABLE 	R12 K94 K192 ; R12["Name"] := "/Lotus/Language/Categories/APPEARANCE"
	811	[1512]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	812	[1512]	GETTABLE 	R13 R13 K193 ; R13 := R13[5.000000]
	813	[1512]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	814	[1512]	GETUPVAL 	R13 U17 ; R13 := U17
	815	[1512]	GETTABLE 	R13 R13 K194 ; R13 := R13["APPEARANCE"]
	816	[1512]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	817	[1512]	CALL     	R10 3 1 ; R10(R11,R12)
	818	[1513]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	819	[1513]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	820	[1513]	MOVE     	R11 R9 ; R11 := R9
	821	[1513]	NEWTABLE 	R12 0 3 ; R12 := {}
	822	[1513]	SETTABLE 	R12 K94 K195 ; R12["Name"] := "/Lotus/Language/Categories/ENHANCEMENTS"
	823	[1513]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	824	[1513]	GETTABLE 	R13 R13 K196 ; R13 := R13[6.000000]
	825	[1513]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	826	[1513]	GETUPVAL 	R13 U17 ; R13 := U17
	827	[1513]	GETTABLE 	R13 R13 K197 ; R13 := R13["ENHANCEMENTS"]
	828	[1513]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	829	[1513]	CALL     	R10 3 1 ; R10(R11,R12)
	830	[1514]	TEST     	R1 1 ; if R1 then PC := 834
	831	[1514]	JMP      	834 ; PC := 834
	832	[1514]	TEST     	R2 0 ; if not R2 then PC := 846
	833	[1514]	JMP      	846 ; PC := 846
	834	[1515]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	835	[1515]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	836	[1515]	MOVE     	R11 R9 ; R11 := R9
	837	[1515]	NEWTABLE 	R12 0 3 ; R12 := {}
	838	[1515]	SETTABLE 	R12 K94 K198 ; R12["Name"] := "/Lotus/Language/Menu/Focus"
	839	[1515]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	840	[1515]	GETTABLE 	R13 R13 K199 ; R13 := R13[7.000000]
	841	[1515]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	842	[1515]	GETUPVAL 	R13 U17 ; R13 := U17
	843	[1515]	GETTABLE 	R13 R13 K200 ; R13 := R13["FOCUS"]
	844	[1515]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	845	[1515]	CALL     	R10 3 1 ; R10(R11,R12)
	846	[1517]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	847	[1517]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	848	[1517]	MOVE     	R11 R9 ; R11 := R9
	849	[1517]	NEWTABLE 	R12 0 3 ; R12 := {}
	850	[1517]	SETTABLE 	R12 K94 K201 ; R12["Name"] := "/Lotus/Language/Categories/GEAR"
	851	[1517]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	852	[1517]	GETTABLE 	R13 R13 K202 ; R13 := R13[9.000000]
	853	[1517]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	854	[1517]	GETUPVAL 	R13 U17 ; R13 := U17
	855	[1517]	GETTABLE 	R13 R13 K203 ; R13 := R13["GEAR"]
	856	[1517]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	857	[1517]	CALL     	R10 3 1 ; R10(R11,R12)
	858	[1518]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	859	[1518]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	860	[1518]	MOVE     	R11 R9 ; R11 := R9
	861	[1518]	NEWTABLE 	R12 0 3 ; R12 := {}
	862	[1518]	SETTABLE 	R12 K94 K204 ; R12["Name"] := "/Lotus/Language/Categories/KEYS"
	863	[1518]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	864	[1518]	GETTABLE 	R13 R13 K58 ; R13 := R13[10.000000]
	865	[1518]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	866	[1518]	GETUPVAL 	R13 U17 ; R13 := U17
	867	[1518]	GETTABLE 	R13 R13 K205 ; R13 := R13["KEYS"]
	868	[1518]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	869	[1518]	CALL     	R10 3 1 ; R10(R11,R12)
	870	[1519]	GETUPVAL 	R10 U8 ; R10 := U8
	871	[1519]	GETUPVAL 	R11 U9 ; R11 := U9
	872	[1519]	GETTABLE 	R11 R11 K206 ; R11 := R11["RESDONATE"]
	873	[1519]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 887
	874	[1519]	JMP      	887 ; PC := 887
	875	[1520]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	876	[1520]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	877	[1520]	MOVE     	R11 R9 ; R11 := R9
	878	[1520]	NEWTABLE 	R12 0 3 ; R12 := {}
	879	[1520]	SETTABLE 	R12 K94 K173 ; R12["Name"] := "/Lotus/Language/Categories/RESOURCES"
	880	[1520]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	881	[1520]	GETTABLE 	R13 R13 K207 ; R13 := R13[11.000000]
	882	[1520]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	883	[1520]	GETUPVAL 	R13 U17 ; R13 := U17
	884	[1520]	GETTABLE 	R13 R13 K172 ; R13 := R13["RESOURCES"]
	885	[1520]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	886	[1520]	CALL     	R10 3 1 ; R10(R11,R12)
	887	[1522]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	888	[1522]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	889	[1522]	MOVE     	R11 R9 ; R11 := R9
	890	[1522]	NEWTABLE 	R12 0 3 ; R12 := {}
	891	[1522]	SETTABLE 	R12 K94 K95 ; R12["Name"] := "/Lotus/Language/Categories/PRIME"
	892	[1522]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	893	[1522]	GETTABLE 	R13 R13 K208 ; R13 := R13[12.000000]
	894	[1522]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	895	[1522]	GETUPVAL 	R13 U17 ; R13 := U17
	896	[1522]	GETTABLE 	R13 R13 K100 ; R13 := R13["PRIME"]
	897	[1522]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	898	[1522]	CALL     	R10 3 1 ; R10(R11,R12)
	899	[1523]	GETUPVAL 	R10 U8 ; R10 := U8
	900	[1523]	GETUPVAL 	R11 U9 ; R11 := U9
	901	[1523]	GETTABLE 	R11 R11 K209 ; R11 := R11["INVENTORY"]
	902	[1523]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 909
	903	[1523]	JMP      	909 ; PC := 909
	904	[1523]	GETUPVAL 	R10 U8 ; R10 := U8
	905	[1523]	GETUPVAL 	R11 U9 ; R11 := U9
	906	[1523]	GETTABLE 	R11 R11 K210 ; R11 := R11["TRADE_ITEMS"]
	907	[1523]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 921
	908	[1523]	JMP      	921 ; PC := 921
	909	[1524]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	910	[1524]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	911	[1524]	MOVE     	R11 R9 ; R11 := R9
	912	[1524]	NEWTABLE 	R12 0 3 ; R12 := {}
	913	[1524]	SETTABLE 	R12 K94 K211 ; R12["Name"] := "/Lotus/Language/Menu/ImprintCreator"
	914	[1524]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	915	[1524]	GETTABLE 	R13 R13 K212 ; R13 := R13["UICategoryIcon_ImprintsOn"]
	916	[1524]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	917	[1524]	GETUPVAL 	R13 U17 ; R13 := U17
	918	[1524]	GETTABLE 	R13 R13 K213 ; R13 := R13["PETPRINTS"]
	919	[1524]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	920	[1524]	CALL     	R10 3 1 ; R10(R11,R12)
	921	[1526]	GETUPVAL 	R10 U24 ; R10 := U24
	922	[1526]	CALL     	R10 1 2 ; R10 := R10()
	923	[1526]	TEST     	R10 1 ; if R10 then PC := 974
	924	[1526]	JMP      	974 ; PC := 974
	925	[1527]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	926	[1527]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	927	[1527]	MOVE     	R11 R9 ; R11 := R9
	928	[1527]	NEWTABLE 	R12 0 3 ; R12 := {}
	929	[1527]	SETTABLE 	R12 K94 K214 ; R12["Name"] := "/Lotus/Language/Menu/Loadout_Vehicles"
	930	[1527]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	931	[1527]	GETTABLE 	R13 R13 K215 ; R13 := R13[13.000000]
	932	[1527]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	933	[1527]	GETUPVAL 	R13 U17 ; R13 := U17
	934	[1527]	GETTABLE 	R13 R13 K216 ; R13 := R13["ARCHWING"]
	935	[1527]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	936	[1527]	CALL     	R10 3 1 ; R10(R11,R12)
	937	[1528]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	938	[1528]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	939	[1528]	MOVE     	R11 R9 ; R11 := R9
	940	[1528]	NEWTABLE 	R12 0 3 ; R12 := {}
	941	[1528]	SETTABLE 	R12 K94 K189 ; R12["Name"] := "/Lotus/Language/Menu/Archwing_Weapons"
	942	[1528]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	943	[1528]	GETTABLE 	R13 R13 K190 ; R13 := R13[14.000000]
	944	[1528]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	945	[1528]	GETUPVAL 	R13 U17 ; R13 := U17
	946	[1528]	GETTABLE 	R13 R13 K191 ; R13 := R13["ARCHWINGWEAPONS"]
	947	[1528]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	948	[1528]	CALL     	R10 3 1 ; R10(R11,R12)
	949	[1529]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	950	[1529]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	951	[1529]	MOVE     	R11 R9 ; R11 := R9
	952	[1529]	NEWTABLE 	R12 0 3 ; R12 := {}
	953	[1529]	SETTABLE 	R12 K94 K217 ; R12["Name"] := "/Lotus/Language/Necromech/MechPluralCategoryName"
	954	[1529]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	955	[1529]	GETTABLE 	R13 R13 K218 ; R13 := R13[34.000000]
	956	[1529]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	957	[1529]	GETUPVAL 	R13 U17 ; R13 := U17
	958	[1529]	GETTABLE 	R13 R13 K219 ; R13 := R13["MECHS"]
	959	[1529]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	960	[1529]	CALL     	R10 3 1 ; R10(R11,R12)
	961	[1530]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	962	[1530]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	963	[1530]	MOVE     	R11 R9 ; R11 := R9
	964	[1530]	NEWTABLE 	R12 0 3 ; R12 := {}
	965	[1530]	SETTABLE 	R12 K94 K220 ; R12["Name"] := "/Lotus/Language/Categories/AMPS"
	966	[1530]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	967	[1530]	GETTABLE 	R13 R13 K221 ; R13 := R13[16.000000]
	968	[1530]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	969	[1530]	GETUPVAL 	R13 U17 ; R13 := U17
	970	[1530]	GETTABLE 	R13 R13 K222 ; R13 := R13["OPERATORAMPS"]
	971	[1530]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	972	[1530]	CALL     	R10 3 1 ; R10(R11,R12)
	973	[1530]	JMP      	1034 ; PC := 1034
	974	[1532]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	975	[1532]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	976	[1532]	MOVE     	R11 R9 ; R11 := R9
	977	[1532]	NEWTABLE 	R12 0 3 ; R12 := {}
	978	[1532]	SETTABLE 	R12 K94 K164 ; R12["Name"] := "/Lotus/Language/FusionTreasure/FusionTreasureMgr_Title"
	979	[1532]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	980	[1532]	GETTABLE 	R13 R13 K165 ; R13 := R13["UICategoryIcon_FusionTreasuresOn"]
	981	[1532]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	982	[1532]	GETUPVAL 	R13 U23 ; R13 := U23
	983	[1532]	GETTABLE 	R13 R13 K163 ; R13 := R13["AYATAN"]
	984	[1532]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	985	[1532]	CALL     	R10 3 1 ; R10(R11,R12)
	986	[1533]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	987	[1533]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	988	[1533]	MOVE     	R11 R9 ; R11 := R9
	989	[1533]	NEWTABLE 	R12 0 3 ; R12 := {}
	990	[1533]	SETTABLE 	R12 K94 K223 ; R12["Name"] := "/Lotus/Language/Menu/Crafting_Blueprints"
	991	[1533]	GETGLOBAL	R13 K97 ; R13 := 0x0032441c
	992	[1533]	GETTABLE 	R13 R13 K224 ; R13 := R13["UICategoryIcon_RecipesOn"]
	993	[1533]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	994	[1533]	GETUPVAL 	R13 U17 ; R13 := U17
	995	[1533]	GETTABLE 	R13 R13 K225 ; R13 := R13["RECIPES"]
	996	[1533]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	997	[1533]	CALL     	R10 3 1 ; R10(R11,R12)
	998	[1534]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	999	[1534]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	1000	[1534]	MOVE     	R11 R9 ; R11 := R9
	1001	[1534]	NEWTABLE 	R12 0 3 ; R12 := {}
	1002	[1534]	SETTABLE 	R12 K94 K226 ; R12["Name"] := "/Lotus/Language/Dojo/Trade_LichCategory"
	1003	[1534]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	1004	[1534]	GETTABLE 	R13 R13 K77 ; R13 := R13[21.000000]
	1005	[1534]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	1006	[1534]	GETUPVAL 	R13 U17 ; R13 := U17
	1007	[1534]	GETTABLE 	R13 R13 K227 ; R13 := R13["LICH"]
	1008	[1534]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	1009	[1534]	CALL     	R10 3 1 ; R10(R11,R12)
	1010	[1535]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	1011	[1535]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	1012	[1535]	MOVE     	R11 R9 ; R11 := R9
	1013	[1535]	NEWTABLE 	R12 0 3 ; R12 := {}
	1014	[1535]	SETTABLE 	R12 K94 K228 ; R12["Name"] := "/Lotus/Language/Railjack/Avionics"
	1015	[1535]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	1016	[1535]	GETTABLE 	R13 R13 K60 ; R13 := R13[25.000000]
	1017	[1535]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	1018	[1535]	GETUPVAL 	R13 U17 ; R13 := U17
	1019	[1535]	GETTABLE 	R13 R13 K229 ; R13 := R13["AVIONICS"]
	1020	[1535]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	1021	[1535]	CALL     	R10 3 1 ; R10(R11,R12)
	1022	[1536]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	1023	[1536]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	1024	[1536]	MOVE     	R11 R9 ; R11 := R9
	1025	[1536]	NEWTABLE 	R12 0 3 ; R12 := {}
	1026	[1536]	SETTABLE 	R12 K94 K230 ; R12["Name"] := "/Lotus/Language/Menu/Loadout_Emotes"
	1027	[1536]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	1028	[1536]	GETTABLE 	R13 R13 K231 ; R13 := R13[35.000000]
	1029	[1536]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	1030	[1536]	GETUPVAL 	R13 U17 ; R13 := U17
	1031	[1536]	GETTABLE 	R13 R13 K232 ; R13 := R13["EMOTE"]
	1032	[1536]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	1033	[1536]	CALL     	R10 3 1 ; R10(R11,R12)
	1034	[1538]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	1035	[1538]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	1036	[1538]	MOVE     	R11 R9 ; R11 := R9
	1037	[1538]	NEWTABLE 	R12 0 3 ; R12 := {}
	1038	[1538]	SETTABLE 	R12 K94 K233 ; R12["Name"] := "/Lotus/Language/Categories/RELICS"
	1039	[1538]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	1040	[1538]	GETTABLE 	R13 R13 K234 ; R13 := R13[20.000000]
	1041	[1538]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	1042	[1538]	GETUPVAL 	R13 U17 ; R13 := U17
	1043	[1538]	GETTABLE 	R13 R13 K235 ; R13 := R13["RELICS"]
	1044	[1538]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	1045	[1538]	CALL     	R10 3 1 ; R10(R11,R12)
	1046	[1539]	GETGLOBAL	R10 K92 ; R10 := 0x33bdd652
	1047	[1539]	GETTABLE 	R10 R10 K93 ; R10 := R10[0x23d5322f]
	1048	[1539]	MOVE     	R11 R9 ; R11 := R9
	1049	[1539]	NEWTABLE 	R12 0 3 ; R12 := {}
	1050	[1539]	SETTABLE 	R12 K94 K103 ; R12["Name"] := "/Lotus/Language/Categories/MISC"
	1051	[1539]	GETGLOBAL	R13 K108 ; R13 := 0xf06bb4b0
	1052	[1539]	GETTABLE 	R13 R13 K236 ; R13 := R13[15.000000]
	1053	[1539]	SETTABLE 	R12 K96 R13 ; R12["Icon"] := R13
	1054	[1539]	GETUPVAL 	R13 U17 ; R13 := U17
	1055	[1539]	GETTABLE 	R13 R13 K104 ; R13 := R13["MISC"]
	1056	[1539]	SETTABLE 	R12 K99 R13 ; R12["Category"] := R13
	1057	[1539]	CALL     	R10 3 1 ; R10(R11,R12)
	1058	[1542]	GETGLOBAL	R10 K237 ; R10 := 0xc8802016
	1059	[1542]	MOVE     	R11 R9 ; R11 := R9
	1060	[1542]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	1061	[1542]	JMP      	1075 ; PC := 1075
	1062	[1543]	GETGLOBAL	R15 K238 ; R15 := 0x7f5022cf
	1063	[1543]	GETTABLE 	R15 R15 K239 ; R15 := R15[0x3f3e4d12]
	1064	[1543]	GETGLOBAL	R16 K0 ; R16 := 0xae91e43b
	1065	[1543]	SELF     	R16 R16 K139 ; R17 := R16; R16 := R16[0x42b04007]
	1066	[1543]	GETTABLE 	R18 R14 K94 ; R18 := R14["Name"]
	1067	[1543]	OP_LOADBOOL	R19 0 0 ; R19 := false
	1068	[1543]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	1069	[1543]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	1070	[1543]	SETTABLE 	R14 K94 R15 ; R14["Name"] := R15
	1071	[1544]	GETUPVAL 	R15 U1 ; R15 := U1
	1072	[1544]	SELF     	R15 R15 K240 ; R16 := R15; R15 := R15[0x06d36229]
	1073	[1544]	MOVE     	R17 R14 ; R17 := R14
	1074	[1544]	CALL     	R15 3 1 ; R15(R16,R17)
	1075	[1542]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 1062; R12 := R13 end
	1076	[1544]	JMP      	1062 ; PC := 1062
	1077	[1558]	CLOSURE  	R15 2 ; R15 := closure(Function #3)
	1078	[1561]	GETUPVAL 	R16 U8 ; R16 := U8
	1079	[1561]	GETUPVAL 	R17 U9 ; R17 := U9
	1080	[1561]	GETTABLE 	R17 R17 K89 ; R17 := R17["TRADE_MODS"]
	1081	[1561]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 1096
	1082	[1561]	JMP      	1096 ; PC := 1096
	1083	[1562]	GETUPVAL 	R16 U21 ; R16 := U21
	1084	[1562]	GETTABLE 	R16 R16 K241 ; R16 := R16[0x769f4393]
	1085	[1562]	CALL     	R16 1 2 ; R16 := R16()
	1086	[1563]	LOADK    	R17 := 1.000000
	1087	[1563]	LEN      	R18 R16 ; R18 := # R16
	1088	[1563]	LOADK    	R19 := 1.000000
	1089	[1563]	FORPREP  	R17 1094 ; R17 -= R19; PC := 1094
	1090	[1564]	GETUPVAL 	R21 U1 ; R21 := U1
	1091	[1564]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1092	[1564]	GETTABLE 	R23 R16 R20 ; R23 := R16[R20]
	1093	[1564]	CALL     	R21 3 1 ; R21(R22,R23)
	1094	[1563]	FORLOOP  	R17 1090 ; R17 += R19; if R17 <= R18 then begin PC := 1090; R20 := R17 end
	1095	[1565]	JMP      	1110 ; PC := 1110
	1096	[1567]	GETUPVAL 	R21 U1 ; R21 := U1
	1097	[1567]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1098	[1567]	NEWTABLE 	R23 0 3 ; R23 := {}
	1099	[1567]	GETGLOBAL	R24 K0 ; R24 := 0xae91e43b
	1100	[1567]	SELF     	R24 R24 K139 ; R25 := R24; R24 := R24[0x42b04007]
	1101	[1567]	LOADK    	R26 K243 ; R26 := "/Lotus/Language/Menu/SortBy_Name"
	1102	[1567]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1103	[1567]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	1104	[1567]	SETTABLE 	R23 K94 R24 ; R23["Name"] := R24
	1105	[1567]	SETTABLE 	R23 K244 K245 ; R23["SortId"] := "NAME"
	1106	[1575]	CLOSURE  	R24 3 ; R24 := closure(Function #4)
	1107	[1575]	MOVE     	R0 R15 ; R0 := R15
	1108	[1575]	SETTABLE 	R23 K246 R24 ; R23["Attribute"] := R24
	1109	[1567]	CALL     	R21 3 1 ; R21(R22,R23)
	1110	[1577]	GETUPVAL 	R21 U8 ; R21 := U8
	1111	[1577]	GETUPVAL 	R22 U9 ; R22 := U9
	1112	[1577]	GETTABLE 	R22 R22 K65 ; R22 := R22["ENEMIES"]
	1113	[1577]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 1130
	1114	[1577]	JMP      	1130 ; PC := 1130
	1115	[1578]	GETUPVAL 	R21 U1 ; R21 := U1
	1116	[1578]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1117	[1578]	NEWTABLE 	R23 0 3 ; R23 := {}
	1118	[1578]	GETGLOBAL	R24 K0 ; R24 := 0xae91e43b
	1119	[1578]	SELF     	R24 R24 K139 ; R25 := R24; R24 := R24[0x42b04007]
	1120	[1578]	LOADK    	R26 K247 ; R26 := "/Lotus/Language/Menu/Scanned"
	1121	[1578]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1122	[1578]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	1123	[1578]	SETTABLE 	R23 K94 R24 ; R23["Name"] := R24
	1124	[1578]	SETTABLE 	R23 K244 K248 ; R23["SortId"] := "SCAN"
	1125	[1588]	CLOSURE  	R24 4 ; R24 := closure(Function #5)
	1126	[1588]	MOVE     	R0 R15 ; R0 := R15
	1127	[1588]	SETTABLE 	R23 K246 R24 ; R23["Attribute"] := R24
	1128	[1578]	CALL     	R21 3 1 ; R21(R22,R23)
	1129	[1588]	JMP      	1233 ; PC := 1233
	1130	[1590]	GETUPVAL 	R21 U8 ; R21 := U8
	1131	[1590]	GETUPVAL 	R22 U9 ; R22 := U9
	1132	[1590]	GETTABLE 	R22 R22 K129 ; R22 := R22["FISH"]
	1133	[1590]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 1179
	1134	[1590]	JMP      	1179 ; PC := 1179
	1135	[1590]	GETUPVAL 	R21 U8 ; R21 := U8
	1136	[1590]	GETUPVAL 	R22 U9 ; R22 := U9
	1137	[1590]	GETTABLE 	R22 R22 K161 ; R22 := R22["DECODONATE"]
	1138	[1590]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 1179
	1139	[1590]	JMP      	1179 ; PC := 1179
	1140	[1590]	GETUPVAL 	R21 U8 ; R21 := U8
	1141	[1590]	GETUPVAL 	R22 U9 ; R22 := U9
	1142	[1590]	GETTABLE 	R22 R22 K206 ; R22 := R22["RESDONATE"]
	1143	[1590]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 1179
	1144	[1590]	JMP      	1179 ; PC := 1179
	1145	[1591]	GETUPVAL 	R21 U8 ; R21 := U8
	1146	[1591]	GETUPVAL 	R22 U9 ; R22 := U9
	1147	[1591]	GETTABLE 	R22 R22 K179 ; R22 := R22["SYNDDONATE"]
	1148	[1591]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 1165
	1149	[1591]	JMP      	1165 ; PC := 1165
	1150	[1592]	GETUPVAL 	R21 U1 ; R21 := U1
	1151	[1592]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1152	[1592]	NEWTABLE 	R23 0 3 ; R23 := {}
	1153	[1592]	GETGLOBAL	R24 K0 ; R24 := 0xae91e43b
	1154	[1592]	SELF     	R24 R24 K139 ; R25 := R24; R24 := R24[0x42b04007]
	1155	[1592]	LOADK    	R26 K249 ; R26 := "/Lotus/Language/Labels/SortBy_TradeValue"
	1156	[1592]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1157	[1592]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	1158	[1592]	SETTABLE 	R23 K94 R24 ; R23["Name"] := R24
	1159	[1592]	SETTABLE 	R23 K244 K250 ; R23["SortId"] := "SELL_PRICE"
	1160	[1604]	CLOSURE  	R24 5 ; R24 := closure(Function #6)
	1161	[1604]	MOVE     	R0 R15 ; R0 := R15
	1162	[1604]	SETTABLE 	R23 K246 R24 ; R23["Attribute"] := R24
	1163	[1592]	CALL     	R21 3 1 ; R21(R22,R23)
	1164	[1604]	JMP      	1179 ; PC := 1179
	1165	[1606]	GETUPVAL 	R21 U1 ; R21 := U1
	1166	[1606]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1167	[1606]	NEWTABLE 	R23 0 3 ; R23 := {}
	1168	[1606]	GETGLOBAL	R24 K0 ; R24 := 0xae91e43b
	1169	[1606]	SELF     	R24 R24 K139 ; R25 := R24; R24 := R24[0x42b04007]
	1170	[1606]	LOADK    	R26 K251 ; R26 := "/Lotus/Language/Menu/SortBy_SellingPrice"
	1171	[1606]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1172	[1606]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	1173	[1606]	SETTABLE 	R23 K94 R24 ; R23["Name"] := R24
	1174	[1606]	SETTABLE 	R23 K244 K250 ; R23["SortId"] := "SELL_PRICE"
	1175	[1618]	CLOSURE  	R24 6 ; R24 := closure(Function #7)
	1176	[1618]	MOVE     	R0 R15 ; R0 := R15
	1177	[1618]	SETTABLE 	R23 K246 R24 ; R23["Attribute"] := R24
	1178	[1606]	CALL     	R21 3 1 ; R21(R22,R23)
	1179	[1621]	GETUPVAL 	R21 U8 ; R21 := U8
	1180	[1621]	GETUPVAL 	R22 U9 ; R22 := U9
	1181	[1621]	GETTABLE 	R22 R22 K66 ; R22 := R22["SHIP_SCRAP"]
	1182	[1621]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 1204
	1183	[1621]	JMP      	1204 ; PC := 1204
	1184	[1621]	GETUPVAL 	R21 U8 ; R21 := U8
	1185	[1621]	GETUPVAL 	R22 U9 ; R22 := U9
	1186	[1621]	GETTABLE 	R22 R22 K67 ; R22 := R22["SHIP_PARTS"]
	1187	[1621]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 1204
	1188	[1621]	JMP      	1204 ; PC := 1204
	1189	[1622]	GETUPVAL 	R21 U1 ; R21 := U1
	1190	[1622]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1191	[1622]	NEWTABLE 	R23 0 3 ; R23 := {}
	1192	[1622]	GETGLOBAL	R24 K0 ; R24 := 0xae91e43b
	1193	[1622]	SELF     	R24 R24 K139 ; R25 := R24; R24 := R24[0x42b04007]
	1194	[1622]	LOADK    	R26 K252 ; R26 := "/Lotus/Language/Menu/Store_Owned"
	1195	[1622]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1196	[1622]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	1197	[1622]	SETTABLE 	R23 K94 R24 ; R23["Name"] := R24
	1198	[1622]	SETTABLE 	R23 K244 K253 ; R23["SortId"] := "COUNT"
	1199	[1634]	CLOSURE  	R24 7 ; R24 := closure(Function #8)
	1200	[1634]	MOVE     	R0 R15 ; R0 := R15
	1201	[1634]	SETTABLE 	R23 K246 R24 ; R23["Attribute"] := R24
	1202	[1622]	CALL     	R21 3 1 ; R21(R22,R23)
	1203	[1634]	JMP      	1233 ; PC := 1233
	1204	[1636]	GETUPVAL 	R21 U1 ; R21 := U1
	1205	[1636]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1206	[1636]	NEWTABLE 	R23 0 3 ; R23 := {}
	1207	[1636]	GETGLOBAL	R24 K0 ; R24 := 0xae91e43b
	1208	[1636]	SELF     	R24 R24 K139 ; R25 := R24; R24 := R24[0x42b04007]
	1209	[1636]	LOADK    	R26 K254 ; R26 := "/Lotus/Language/Menu/SortBy_Level"
	1210	[1636]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1211	[1636]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	1212	[1636]	SETTABLE 	R23 K94 R24 ; R23["Name"] := R24
	1213	[1636]	SETTABLE 	R23 K244 K255 ; R23["SortId"] := "MK_TIER"
	1214	[1647]	CLOSURE  	R24 8 ; R24 := closure(Function #9)
	1215	[1647]	MOVE     	R0 R15 ; R0 := R15
	1216	[1647]	SETTABLE 	R23 K246 R24 ; R23["Attribute"] := R24
	1217	[1636]	CALL     	R21 3 1 ; R21(R22,R23)
	1218	[1648]	GETUPVAL 	R21 U1 ; R21 := U1
	1219	[1648]	SELF     	R21 R21 K242 ; R22 := R21; R21 := R21[0xb029c588]
	1220	[1648]	NEWTABLE 	R23 0 3 ; R23 := {}
	1221	[1648]	GETGLOBAL	R24 K0 ; R24 := 0xae91e43b
	1222	[1648]	SELF     	R24 R24 K139 ; R25 := R24; R24 := R24[0x42b04007]
	1223	[1648]	LOADK    	R26 K256 ; R26 := "/Lotus/Language/Menu/SortBy_Type"
	1224	[1648]	OP_LOADBOOL	R27 0 0 ; R27 := false
	1225	[1648]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	1226	[1648]	SETTABLE 	R23 K94 R24 ; R23["Name"] := R24
	1227	[1648]	LOADK    	R24 K257 ; R24 := "BRAND"
	1228	[1648]	SETTABLE 	R23 K244 R24 ; R23["SortId"] := R24
	1229	[1659]	CLOSURE  	R24 9 ; R24 := closure(Function #10)
	1230	[1659]	MOVE     	R0 R15 ; R0 := R15
	1231	[1659]	SETTABLE 	R23 K246 R24 ; R23["Attribute"] := R24
	1232	[1648]	CALL     	R21 3 1 ; R21(R22,R23)
	1233	[1662]	RETURN   	R0 1 ; return 

function #39 <?:1664,1840> (526 instructions, 2104 bytes at 0000021120B9F290)
3 params, 39 slots, 15 upvalues, 0 locals, 101 constants, 1 function
	1	[1665]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1665]	GETTABLE 	R3 R3 K0 ; R3 := R3["WARFRAME"]
	3	[1665]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 29
	4	[1665]	JMP      	29 ; PC := 29
	5	[1666]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[1666]	GETTABLE 	R3 R3 K1 ; R3 := R3["WEAPONS"]
	7	[1666]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 29
	8	[1666]	JMP      	29 ; PC := 29
	9	[1667]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[1667]	GETTABLE 	R3 R3 K2 ; R3 := R3["SENTINEL"]
	11	[1667]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 29
	12	[1667]	JMP      	29 ; PC := 29
	13	[1668]	GETUPVAL 	R3 U0 ; R3 := U0
	14	[1668]	GETTABLE 	R3 R3 K3 ; R3 := R3["ARCHWING"]
	15	[1668]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 29
	16	[1668]	JMP      	29 ; PC := 29
	17	[1669]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[1669]	GETTABLE 	R3 R3 K4 ; R3 := R3["ARCHWINGWEAPONS"]
	19	[1669]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 29
	20	[1669]	JMP      	29 ; PC := 29
	21	[1670]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[1670]	GETTABLE 	R3 R3 K5 ; R3 := R3["OPERATORAMPS"]
	23	[1670]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 29
	24	[1670]	JMP      	29 ; PC := 29
	25	[1671]	GETUPVAL 	R3 U0 ; R3 := U0
	26	[1671]	GETTABLE 	R3 R3 K6 ; R3 := R3["MECHS"]
	27	[1671]	EQ       	0 R1 R3 ; if R1 ~= R3 then PC := 128
	28	[1671]	JMP      	128 ; PC := 128
	29	[1672]	GETUPVAL 	R3 U1 ; R3 := U1
	30	[1672]	CALL     	R3 1 2 ; R3 := R3()
	31	[1672]	TEST     	R3 1 ; if R3 then PC := 128
	32	[1672]	JMP      	128 ; PC := 128
	33	[1673]	LOADK    	R3 K7 ; R3 := ""
	34	[1674]	GETUPVAL 	R4 U0 ; R4 := U0
	35	[1674]	GETTABLE 	R4 R4 K0 ; R4 := R4["WARFRAME"]
	36	[1674]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 43
	37	[1674]	JMP      	43 ; PC := 43
	38	[1675]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	39	[1675]	LOADK    	R5 K9 ; R5 := "/Lotus/Types/StoreItems/SlotItems/SuitSlotItem"
	40	[1675]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[1675]	MOVE     	R3 R4 ; R3 := R4
	42	[1675]	JMP      	96 ; PC := 96
	43	[1676]	GETUPVAL 	R4 U0 ; R4 := U0
	44	[1676]	GETTABLE 	R4 R4 K1 ; R4 := R4["WEAPONS"]
	45	[1676]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 52
	46	[1676]	JMP      	52 ; PC := 52
	47	[1677]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	48	[1677]	LOADK    	R5 K10 ; R5 := "/Lotus/Types/StoreItems/SlotItems/TwoWeaponSlotItem"
	49	[1677]	CALL     	R4 2 2 ; R4 := R4(R5)
	50	[1677]	MOVE     	R3 R4 ; R3 := R4
	51	[1677]	JMP      	96 ; PC := 96
	52	[1678]	GETUPVAL 	R4 U0 ; R4 := U0
	53	[1678]	GETTABLE 	R4 R4 K2 ; R4 := R4["SENTINEL"]
	54	[1678]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 61
	55	[1678]	JMP      	61 ; PC := 61
	56	[1679]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	57	[1679]	LOADK    	R5 K11 ; R5 := "/Lotus/Types/StoreItems/SlotItems/TwoSentinelSlotItem"
	58	[1679]	CALL     	R4 2 2 ; R4 := R4(R5)
	59	[1679]	MOVE     	R3 R4 ; R3 := R4
	60	[1679]	JMP      	96 ; PC := 96
	61	[1680]	GETUPVAL 	R4 U0 ; R4 := U0
	62	[1680]	GETTABLE 	R4 R4 K3 ; R4 := R4["ARCHWING"]
	63	[1680]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 70
	64	[1680]	JMP      	70 ; PC := 70
	65	[1681]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	66	[1681]	LOADK    	R5 K12 ; R5 := "/Lotus/Types/StoreItems/SlotItems/SpaceSuitSlotItem"
	67	[1681]	CALL     	R4 2 2 ; R4 := R4(R5)
	68	[1681]	MOVE     	R3 R4 ; R3 := R4
	69	[1681]	JMP      	96 ; PC := 96
	70	[1682]	GETUPVAL 	R4 U0 ; R4 := U0
	71	[1682]	GETTABLE 	R4 R4 K4 ; R4 := R4["ARCHWINGWEAPONS"]
	72	[1682]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 79
	73	[1682]	JMP      	79 ; PC := 79
	74	[1683]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	75	[1683]	LOADK    	R5 K13 ; R5 := "/Lotus/Types/StoreItems/SlotItems/TwoSpaceWeaponSlotItem"
	76	[1683]	CALL     	R4 2 2 ; R4 := R4(R5)
	77	[1683]	MOVE     	R3 R4 ; R3 := R4
	78	[1683]	JMP      	96 ; PC := 96
	79	[1684]	GETUPVAL 	R4 U0 ; R4 := U0
	80	[1684]	GETTABLE 	R4 R4 K5 ; R4 := R4["OPERATORAMPS"]
	81	[1684]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 88
	82	[1684]	JMP      	88 ; PC := 88
	83	[1685]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	84	[1685]	LOADK    	R5 K14 ; R5 := "/Lotus/Types/StoreItems/SlotItems/TwoOperatorWeaponSlotItem"
	85	[1685]	CALL     	R4 2 2 ; R4 := R4(R5)
	86	[1685]	MOVE     	R3 R4 ; R3 := R4
	87	[1685]	JMP      	96 ; PC := 96
	88	[1686]	GETUPVAL 	R4 U0 ; R4 := U0
	89	[1686]	GETTABLE 	R4 R4 K6 ; R4 := R4["MECHS"]
	90	[1686]	EQ       	0 R1 R4 ; if R1 ~= R4 then PC := 96
	91	[1686]	JMP      	96 ; PC := 96
	92	[1687]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	93	[1687]	LOADK    	R5 K15 ; R5 := "/Lotus/Types/StoreItems/SlotItems/MechSlotItem"
	94	[1687]	CALL     	R4 2 2 ; R4 := R4(R5)
	95	[1687]	MOVE     	R3 R4 ; R3 := R4
	96	[1690]	GETGLOBAL	R4 K16 ; R4 := 0x7b998233
	97	[1690]	GETUPVAL 	R5 U2 ; R5 := U2
	98	[1690]	CALL     	R4 2 2 ; R4 := R4(R5)
	99	[1690]	TEST     	R4 1 ; if R4 then PC := 128
	100	[1690]	JMP      	128 ; PC := 128
	101	[1690]	EQ       	1 R2 K17 ; if R2 == nil then PC := 128
	102	[1690]	JMP      	128 ; PC := 128
	103	[1691]	GETUPVAL 	R4 U2 ; R4 := U2
	104	[1691]	SELF     	R4 R4 K18 ; R5 := R4; R4 := R4[0x105074fb]
	105	[1691]	MOVE     	R6 R3 ; R6 := R3
	106	[1691]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	107	[1692]	GETGLOBAL	R5 K16 ; R5 := 0x7b998233
	108	[1692]	MOVE     	R6 R4 ; R6 := R4
	109	[1692]	CALL     	R5 2 2 ; R5 := R5(R6)
	110	[1692]	TEST     	R5 1 ; if R5 then PC := 128
	111	[1692]	JMP      	128 ; PC := 128
	112	[1693]	GETUPVAL 	R5 U3 ; R5 := U3
	113	[1693]	GETTABLE 	R5 R5 K19 ; R5 := R5[0x08681f50]
	114	[1693]	GETGLOBAL	R6 K20 ; R6 := 0xae91e43b
	115	[1693]	MOVE     	R7 R4 ; R7 := R4
	116	[1693]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	117	[1694]	GETGLOBAL	R6 K22 ; R6 := 0x376b578e
	118	[1694]	SETTABLE 	R5 K21 R6 ; R5["Icon"] := R6
	119	[1695]	SETTABLE 	R5 K23 K24 ; R5["IconWidth"] := 64.000000
	120	[1696]	SETTABLE 	R5 K25 K24 ; R5["IconHeight"] := 64.000000
	121	[1697]	SETTABLE 	R5 K26 K27 ; R5["BuySlot"] := true
	122	[1698]	SETTABLE 	R5 K28 R2 ; R5["EmptyCount"] := R2
	123	[1699]	GETGLOBAL	R6 K29 ; R6 := 0x33bdd652
	124	[1699]	GETTABLE 	R6 R6 K30 ; R6 := R6[0x23d5322f]
	125	[1699]	MOVE     	R7 R0 ; R7 := R0
	126	[1699]	MOVE     	R8 R5 ; R8 := R5
	127	[1699]	CALL     	R6 3 1 ; R6(R7,R8)
	128	[1712]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	129	[1712]	GETUPVAL 	R0 U4 ; R0 := U4
	130	[1714]	LOADNIL  	R7 R7 ; R7 := nil
	131	[1715]	NEWTABLE 	R8 0 0 ; R8 := {}
	132	[1716]	GETUPVAL 	R9 U5 ; R9 := U5
	133	[1716]	GETUPVAL 	R10 U6 ; R10 := U6
	134	[1716]	GETTABLE 	R10 R10 K31 ; R10 := R10["SHIP_SCRAP"]
	135	[1716]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 156
	136	[1716]	JMP      	156 ; PC := 156
	137	[1717]	GETGLOBAL	R9 K32 ; R9 := 0x25d99d89
	138	[1717]	SELF     	R9 R9 K33 ; R10 := R9; R9 := R9[0xa94e864c]
	139	[1717]	CALL     	R9 2 2 ; R9 := R9(R10)
	140	[1717]	MOVE     	R7 R9 ; R7 := R9
	141	[1718]	LOADK    	R9 := 1.000000
	142	[1718]	LEN      	R10 R7 ; R10 := # R7
	143	[1718]	LOADK    	R11 := 1.000000
	144	[1718]	FORPREP  	R9 155 ; R9 -= R11; PC := 155
	145	[1719]	GETUPVAL 	R13 U7 ; R13 := U7
	146	[1719]	GETTABLE 	R13 R13 K34 ; R13 := R13[0xb2932b48]
	147	[1719]	GETTABLE 	R14 R7 R12 ; R14 := R7[R12]
	148	[1719]	CALL     	R13 2 2 ; R13 := R13(R14)
	149	[1719]	LT       	0 K35 R13 ; if 0.000000 >= R13 then PC := 155
	150	[1719]	JMP      	155 ; PC := 155
	151	[1720]	GETTABLE 	R13 R7 R12 ; R13 := R7[R12]
	152	[1720]	GETTABLE 	R13 R13 K36 ; R13 := R13["mCategoryItemId"]
	153	[1720]	GETTABLE 	R13 R13 K37 ; R13 := R13["mId"]
	154	[1720]	SETTABLE 	R8 R13 K27 ; R8[R13] := true
	155	[1718]	FORLOOP  	R9 145 ; R9 += R11; if R9 <= R10 then begin PC := 145; R12 := R9 end
	156	[1725]	LEN      	R13 R0 ; R13 := # R0
	157	[1725]	GETUPVAL 	R14 U8 ; R14 := U8
	158	[1725]	GETTABLE 	R14 R14 K38 ; R14 := R14[0x06d055f9]
	159	[1725]	EQ       	1 R2 K17 ; if R2 == nil then PC := 162
	160	[1725]	JMP      	162 ; PC := 162
	161	[1725]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 162
	162	[1725]	OP_LOADBOOL	R15 1 0 ; R15 := true
	163	[1725]	LOADK    	R16 := 0.000000
	164	[1725]	MOVE     	R17 R2 ; R17 := R2
	165	[1725]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	166	[1725]	ADD      	R13 R13 R14 ; R13 := R13 + R14
	167	[1726]	LOADK    	R14 := 1.000000
	168	[1726]	MOVE     	R15 R13 ; R15 := R13
	169	[1726]	LOADK    	R16 := 1.000000
	170	[1726]	FORPREP  	R14 525 ; R14 -= R16; PC := 525
	171	[1727]	GETGLOBAL	R18 K39 ; R18 := 0xce225efa
	172	[1727]	LOADK    	R19 := 0.000000
	173	[1727]	CALL     	R18 2 1 ; R18(R19)
	174	[1728]	GETTABLE 	R18 R0 R17 ; R18 := R0[R17]
	175	[1729]	EQ       	0 R18 K17 ; if R18 ~= nil then PC := 180
	176	[1729]	JMP      	180 ; PC := 180
	177	[1730]	NEWTABLE 	R19 0 1 ; R19 := {}
	178	[1730]	SETTABLE 	R19 K40 K27 ; R19["EmptySlot"] := true
	179	[1730]	MOVE     	R18 R19 ; R18 := R19
	180	[1732]	GETUPVAL 	R19 U5 ; R19 := U5
	181	[1732]	GETUPVAL 	R20 U6 ; R20 := U6
	182	[1732]	GETTABLE 	R20 R20 K41 ; R20 := R20["TRADE_MODS"]
	183	[1732]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 194
	184	[1732]	JMP      	194 ; PC := 194
	185	[1733]	GETUPVAL 	R19 U9 ; R19 := U9
	186	[1733]	GETTABLE 	R19 R19 K43 ; R19 := R19[0xfc31b69e]
	187	[1733]	GETTABLE 	R20 R18 K44 ; R20 := R18["RawItem"]
	188	[1733]	CALL     	R19 2 2 ; R19 := R19(R20)
	189	[1733]	SETTABLE 	R18 K42 R19 ; R18["Card"] := R19
	190	[1734]	MOVE     	R19 R6 ; R19 := R6
	191	[1734]	GETTABLE 	R20 R18 K42 ; R20 := R18["Card"]
	192	[1734]	CALL     	R19 2 1 ; R19(R20)
	193	[1734]	JMP      	291 ; PC := 291
	194	[1735]	GETUPVAL 	R19 U5 ; R19 := U5
	195	[1735]	GETUPVAL 	R20 U6 ; R20 := U6
	196	[1735]	GETTABLE 	R20 R20 K45 ; R20 := R20["TRADE_ITEMS"]
	197	[1735]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 220
	198	[1735]	JMP      	220 ; PC := 220
	199	[1735]	GETGLOBAL	R19 K16 ; R19 := 0x7b998233
	200	[1735]	GETTABLE 	R20 R18 K46 ; R20 := R18["Type"]
	201	[1735]	CALL     	R19 2 2 ; R19 := R19(R20)
	202	[1735]	TEST     	R19 1 ; if R19 then PC := 220
	203	[1735]	JMP      	220 ; PC := 220
	204	[1735]	GETTABLE 	R19 R18 K46 ; R19 := R18["Type"]
	205	[1735]	SELF     	R19 R19 K47 ; R20 := R19; R19 := R19[0xf2deaf69]
	206	[1735]	GETUPVAL 	R21 U10 ; R21 := U10
	207	[1735]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	208	[1735]	TEST     	R19 0 ; if not R19 then PC := 220
	209	[1735]	JMP      	220 ; PC := 220
	210	[1736]	GETUPVAL 	R19 U9 ; R19 := U9
	211	[1736]	GETTABLE 	R19 R19 K43 ; R19 := R19[0xfc31b69e]
	212	[1736]	GETTABLE 	R20 R18 K44 ; R20 := R18["RawItem"]
	213	[1736]	CALL     	R19 2 2 ; R19 := R19(R20)
	214	[1737]	MOVE     	R20 R6 ; R20 := R6
	215	[1737]	MOVE     	R21 R19 ; R21 := R19
	216	[1737]	CALL     	R20 2 1 ; R20(R21)
	217	[1738]	GETTABLE 	R20 R19 K49 ; R20 := R19["mInstalled"]
	218	[1738]	SETTABLE 	R18 K48 R20 ; R18["mModInstalledTable"] := R20
	219	[1738]	JMP      	291 ; PC := 291
	220	[1739]	GETGLOBAL	R20 K16 ; R20 := 0x7b998233
	221	[1739]	GETTABLE 	R21 R18 K46 ; R21 := R18["Type"]
	222	[1739]	CALL     	R20 2 2 ; R20 := R20(R21)
	223	[1739]	TEST     	R20 1 ; if R20 then PC := 273
	224	[1739]	JMP      	273 ; PC := 273
	225	[1739]	GETTABLE 	R20 R18 K46 ; R20 := R18["Type"]
	226	[1739]	SELF     	R20 R20 K47 ; R21 := R20; R20 := R20[0xf2deaf69]
	227	[1739]	GETUPVAL 	R22 U11 ; R22 := U11
	228	[1739]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	229	[1739]	TEST     	R20 0 ; if not R20 then PC := 273
	230	[1739]	JMP      	273 ; PC := 273
	231	[1740]	GETUPVAL 	R20 U9 ; R20 := U9
	232	[1740]	GETTABLE 	R20 R20 K43 ; R20 := R20[0xfc31b69e]
	233	[1740]	GETTABLE 	R21 R18 K44 ; R21 := R18["RawItem"]
	234	[1740]	CALL     	R20 2 2 ; R20 := R20(R21)
	235	[1741]	MOVE     	R21 R6 ; R21 := R6
	236	[1741]	MOVE     	R22 R20 ; R22 := R20
	237	[1741]	CALL     	R21 2 1 ; R21(R22)
	238	[1742]	GETTABLE 	R21 R20 K51 ; R21 := R20["mDesc"]
	239	[1742]	SETTABLE 	R18 K50 R21 ; R18["mModDescOverride"] := R21
	240	[1743]	GETTABLE 	R21 R20 K49 ; R21 := R20["mInstalled"]
	241	[1743]	SETTABLE 	R18 K48 R21 ; R18["mModInstalledTable"] := R21
	242	[1744]	GETGLOBAL	R21 K52 ; R21 := _T
	243	[1744]	GETTABLE 	R21 R21 K53 ; R21 := R21["CheckShipModInstalled"]
	244	[1744]	EQ       	1 R21 K17 ; if R21 == nil then PC := 250
	245	[1744]	JMP      	250 ; PC := 250
	246	[1745]	GETGLOBAL	R21 K52 ; R21 := _T
	247	[1745]	GETTABLE 	R21 R21 K54 ; R21 := R21[0xf3c3e0aa]
	248	[1745]	MOVE     	R22 R18 ; R22 := R18
	249	[1745]	CALL     	R21 2 1 ; R21(R22)
	250	[1747]	GETTABLE 	R21 R18 K55 ; R21 := R18["Installed"]
	251	[1747]	TEST     	R21 0 ; if not R21 then PC := 291
	252	[1747]	JMP      	291 ; PC := 291
	253	[1748]	SETTABLE 	R18 K56 K27 ; R18["Locked"] := true
	254	[1749]	SETTABLE 	R18 K57 K27 ; R18["HideLockIcon"] := true
	255	[1751]	GETTABLE 	R21 R18 K58 ; R21 := R18["Count"]
	256	[1751]	LT       	0 K59 R21 ; if 1.000000 >= R21 then PC := 271
	257	[1751]	JMP      	271 ; PC := 271
	258	[1752]	GETGLOBAL	R21 K20 ; R21 := 0xae91e43b
	259	[1752]	SELF     	R21 R21 K61 ; R22 := R21; R21 := R21[0x42b04007]
	260	[1752]	LOADK    	R23 K62 ; R23 := "/Lotus/Language/Railjack/Inventory_EquippedWithCount"
	261	[1752]	OP_LOADBOOL	R24 0 0 ; R24 := false
	262	[1752]	NEWTABLE 	R25 0 1 ; R25 := {}
	263	[1752]	GETUPVAL 	R26 U8 ; R26 := U8
	264	[1752]	GETTABLE 	R26 R26 K64 ; R26 := R26[0x1142c7a8]
	265	[1752]	LOADK    	R27 := 1.000000
	266	[1752]	CALL     	R26 2 2 ; R26 := R26(R27)
	267	[1752]	SETTABLE 	R25 K63 R26 ; R25["COUNT"] := R26
	268	[1752]	CALL     	R21 5 2 ; R21 := R21(R22,R23,R24,R25)
	269	[1752]	SETTABLE 	R18 K60 R21 ; R18["LockedMsg"] := R21
	270	[1752]	JMP      	291 ; PC := 291
	271	[1754]	SETTABLE 	R18 K60 K65 ; R18["LockedMsg"] := "/Lotus/Language/Menu/ItemSelection_Equipped"
	272	[1756]	JMP      	291 ; PC := 291
	273	[1757]	GETUPVAL 	R21 U5 ; R21 := U5
	274	[1757]	GETUPVAL 	R22 U6 ; R22 := U6
	275	[1757]	GETTABLE 	R22 R22 K31 ; R22 := R22["SHIP_SCRAP"]
	276	[1757]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 291
	277	[1757]	JMP      	291 ; PC := 291
	278	[1757]	GETGLOBAL	R21 K16 ; R21 := 0x7b998233
	279	[1757]	GETTABLE 	R22 R18 K44 ; R22 := R18["RawItem"]
	280	[1757]	CALL     	R21 2 2 ; R21 := R21(R22)
	281	[1757]	TEST     	R21 1 ; if R21 then PC := 291
	282	[1757]	JMP      	291 ; PC := 291
	283	[1758]	GETTABLE 	R21 R18 K44 ; R21 := R18["RawItem"]
	284	[1758]	GETTABLE 	R21 R21 K66 ; R21 := R21["mItemId"]
	285	[1758]	GETTABLE 	R21 R21 K37 ; R21 := R21["mId"]
	286	[1758]	GETTABLE 	R21 R8 R21 ; R21 := R8[R21]
	287	[1758]	TEST     	R21 0 ; if not R21 then PC := 291
	288	[1758]	JMP      	291 ; PC := 291
	289	[1759]	SETTABLE 	R18 K56 K27 ; R18["Locked"] := true
	290	[1760]	SETTABLE 	R18 K60 K67 ; R18["LockedMsg"] := "/Lotus/Language/Railjack/WreckageLimit_Repairing"
	291	[1763]	GETGLOBAL	R21 K16 ; R21 := 0x7b998233
	292	[1763]	GETTABLE 	R22 R18 K68 ; R22 := R18["StoreItem"]
	293	[1763]	CALL     	R21 2 2 ; R21 := R21(R22)
	294	[1763]	TEST     	R21 1 ; if R21 then PC := 324
	295	[1763]	JMP      	324 ; PC := 324
	296	[1764]	GETTABLE 	R21 R18 K69 ; R21 := R18["Name"]
	297	[1765]	GETTABLE 	R22 R18 K42 ; R22 := R18["Card"]
	298	[1765]	EQ       	1 R22 K17 ; if R22 == nil then PC := 302
	299	[1765]	JMP      	302 ; PC := 302
	300	[1766]	GETTABLE 	R22 R18 K42 ; R22 := R18["Card"]
	301	[1766]	GETTABLE 	R21 R22 K70 ; R21 := R22["mName"]
	302	[1768]	GETUPVAL 	R22 U3 ; R22 := U3
	303	[1768]	GETTABLE 	R22 R22 K72 ; R22 := R22[0x1ac299fb]
	304	[1768]	GETGLOBAL	R23 K20 ; R23 := 0xae91e43b
	305	[1768]	GETTABLE 	R24 R18 K68 ; R24 := R18["StoreItem"]
	306	[1768]	MOVE     	R25 R21 ; R25 := R21
	307	[1768]	GETTABLE 	R26 R18 K73 ; R26 := R18["SearchTags"]
	308	[1768]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	309	[1768]	SETTABLE 	R18 K71 R22 ; R18["SearchCache"] := R22
	310	[1769]	GETUPVAL 	R22 U5 ; R22 := U5
	311	[1769]	GETUPVAL 	R23 U6 ; R23 := U6
	312	[1769]	GETTABLE 	R23 R23 K41 ; R23 := R23["TRADE_MODS"]
	313	[1769]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 325
	314	[1769]	JMP      	325 ; PC := 325
	315	[1770]	GETTABLE 	R22 R18 K71 ; R22 := R18["SearchCache"]
	316	[1770]	LOADK    	R23 K74 ; R23 := " "
	317	[1770]	GETGLOBAL	R24 K75 ; R24 := 0x83e41587
	318	[1770]	GETTABLE 	R25 R18 K42 ; R25 := R18["Card"]
	319	[1770]	GETTABLE 	R25 R25 K51 ; R25 := R25["mDesc"]
	320	[1770]	CALL     	R24 2 2 ; R24 := R24(R25)
	321	[1770]	CONCAT   	R22 R22 R24 ; R22 := R22 .. R23 .. R24
	322	[1770]	SETTABLE 	R18 K71 R22 ; R18["SearchCache"] := R22
	323	[1771]	JMP      	325 ; PC := 325
	324	[1773]	SETTABLE 	R18 K71 K7 ; R18["SearchCache"] := ""
	325	[1775]	GETUPVAL 	R22 U5 ; R22 := U5
	326	[1775]	GETUPVAL 	R23 U6 ; R23 := U6
	327	[1775]	GETTABLE 	R23 R23 K41 ; R23 := R23["TRADE_MODS"]
	328	[1775]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 338
	329	[1775]	JMP      	338 ; PC := 338
	330	[1776]	SETTABLE 	R18 K76 K77 ; R18["CanPreviewOverride"] := false
	331	[1777]	GETUPVAL 	R22 U9 ; R22 := U9
	332	[1777]	GETTABLE 	R22 R22 K78 ; R22 := R22[0x34c67ee0]
	333	[1777]	GETUPVAL 	R23 U12 ; R23 := U12
	334	[1777]	LOADNIL  	R24 R24 ; R24 := nil
	335	[1777]	MOVE     	R25 R18 ; R25 := R18
	336	[1777]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	337	[1777]	JMP      	423 ; PC := 423
	338	[1779]	GETUPVAL 	R22 U5 ; R22 := U5
	339	[1779]	GETUPVAL 	R23 U6 ; R23 := U6
	340	[1779]	GETTABLE 	R23 R23 K31 ; R23 := R23["SHIP_SCRAP"]
	341	[1779]	EQ       	1 R22 R23 ; if R22 == R23 then PC := 353
	342	[1779]	JMP      	353 ; PC := 353
	343	[1779]	GETUPVAL 	R22 U5 ; R22 := U5
	344	[1779]	GETUPVAL 	R23 U6 ; R23 := U6
	345	[1779]	GETTABLE 	R23 R23 K79 ; R23 := R23["SHIP_PARTS"]
	346	[1779]	EQ       	1 R22 R23 ; if R22 == R23 then PC := 353
	347	[1779]	JMP      	353 ; PC := 353
	348	[1779]	GETUPVAL 	R22 U5 ; R22 := U5
	349	[1779]	GETUPVAL 	R23 U6 ; R23 := U6
	350	[1779]	GETTABLE 	R23 R23 K80 ; R23 := R23["SHIP_RAW"]
	351	[1779]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 385
	352	[1779]	JMP      	385 ; PC := 385
	353	[1780]	NEWTABLE 	R22 1 0 ; R22 := {}
	354	[1780]	GETUPVAL 	R23 U0 ; R23 := U0
	355	[1780]	GETTABLE 	R23 R23 K82 ; R23 := R23["ALL"]
	356	[1780]	SETLIST  	R22 1 1 ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
	357	[1780]	SETTABLE 	R18 K81 R22 ; R18["Categories"] := R22
	358	[1781]	GETTABLE 	R22 R18 K68 ; R22 := R18["StoreItem"]
	359	[1781]	EQ       	1 R22 K17 ; if R22 == nil then PC := 389
	360	[1781]	JMP      	389 ; PC := 389
	361	[1782]	GETUPVAL 	R22 U3 ; R22 := U3
	362	[1782]	GETTABLE 	R22 R22 K85 ; R22 := R22[0x3bd648a0]
	363	[1782]	GETTABLE 	R23 R18 K68 ; R23 := R18["StoreItem"]
	364	[1782]	GETUPVAL 	R24 U0 ; R24 := U0
	365	[1782]	CALL     	R22 3 3 ; R22,R23 := R22(R23,R24)
	366	[1782]	SETTABLE 	R18 K84 R23 ; R18["Brand"] := R23
	367	[1782]	SETTABLE 	R18 K83 R22 ; R18["Tier"] := R22
	368	[1783]	GETTABLE 	R22 R18 K83 ; R22 := R18["Tier"]
	369	[1783]	EQ       	1 R22 K17 ; if R22 == nil then PC := 376
	370	[1783]	JMP      	376 ; PC := 376
	371	[1784]	GETGLOBAL	R22 K29 ; R22 := 0x33bdd652
	372	[1784]	GETTABLE 	R22 R22 K30 ; R22 := R22[0x23d5322f]
	373	[1784]	GETTABLE 	R23 R18 K81 ; R23 := R18["Categories"]
	374	[1784]	GETTABLE 	R24 R18 K83 ; R24 := R18["Tier"]
	375	[1784]	CALL     	R22 3 1 ; R22(R23,R24)
	376	[1786]	GETTABLE 	R22 R18 K84 ; R22 := R18["Brand"]
	377	[1786]	EQ       	1 R22 K17 ; if R22 == nil then PC := 389
	378	[1786]	JMP      	389 ; PC := 389
	379	[1787]	GETGLOBAL	R22 K29 ; R22 := 0x33bdd652
	380	[1787]	GETTABLE 	R22 R22 K30 ; R22 := R22[0x23d5322f]
	381	[1787]	GETTABLE 	R23 R18 K81 ; R23 := R18["Categories"]
	382	[1787]	GETTABLE 	R24 R18 K84 ; R24 := R18["Brand"]
	383	[1787]	CALL     	R22 3 1 ; R22(R23,R24)
	384	[1789]	JMP      	389 ; PC := 389
	385	[1791]	NEWTABLE 	R22 1 0 ; R22 := {}
	386	[1791]	MOVE     	R23 R1 ; R23 := R1
	387	[1791]	SETLIST  	R22 1 1 ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
	388	[1791]	SETTABLE 	R18 K81 R22 ; R18["Categories"] := R22
	389	[1793]	GETTABLE 	R22 R18 K86 ; R22 := R18["AdditionalCategories"]
	390	[1793]	EQ       	1 R22 K17 ; if R22 == nil then PC := 403
	391	[1793]	JMP      	403 ; PC := 403
	392	[1794]	GETGLOBAL	R22 K87 ; R22 := 0xc8802016
	393	[1794]	GETTABLE 	R23 R18 K86 ; R23 := R18["AdditionalCategories"]
	394	[1794]	CALL     	R22 2 4 ; R22,R23,R24 := R22(R23)
	395	[1794]	JMP      	401 ; PC := 401
	396	[1795]	GETGLOBAL	R27 K29 ; R27 := 0x33bdd652
	397	[1795]	GETTABLE 	R27 R27 K30 ; R27 := R27[0x23d5322f]
	398	[1795]	GETTABLE 	R28 R18 K81 ; R28 := R18["Categories"]
	399	[1795]	MOVE     	R29 R26 ; R29 := R26
	400	[1795]	CALL     	R27 3 1 ; R27(R28,R29)
	401	[1794]	TFORLOOP 	R22 2 ; R25,R26 := R22(R23,R24); if R25 ~= nil then begin PC = 396; R24 := R25 end
	402	[1795]	JMP      	396 ; PC := 396
	403	[1798]	GETTABLE 	R27 R18 K88 ; R27 := R18["SortCategory"]
	404	[1798]	EQ       	1 R27 K90 ; if R27 == 26.000000 then PC := 416
	405	[1798]	JMP      	416 ; PC := 416
	406	[1798]	GETTABLE 	R27 R18 K88 ; R27 := R18["SortCategory"]
	407	[1798]	GETUPVAL 	R28 U13 ; R28 := U13
	408	[1798]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 416
	409	[1798]	JMP      	416 ; PC := 416
	410	[1798]	GETGLOBAL	R27 K16 ; R27 := 0x7b998233
	411	[1798]	GETTABLE 	R28 R18 K68 ; R28 := R18["StoreItem"]
	412	[1798]	CALL     	R27 2 2 ; R27 := R27(R28)
	413	[1798]	NOT      	R27 R27 ; R27 := not R27
	414	[1798]	JMP      	417 ; PC := 417
	415	[1798]	OP_LOADBOOL	R27 0 1 ; R27 := false; PC := 416
	416	[1798]	OP_LOADBOOL	R27 1 0 ; R27 := true
	417	[1798]	SETTABLE 	R18 K76 R27 ; R18["CanPreviewOverride"] := R27
	418	[1799]	GETUPVAL 	R27 U12 ; R27 := U12
	419	[1799]	SELF     	R27 R27 K91 ; R28 := R27; R27 := R27[0xbad4316f]
	420	[1799]	MOVE     	R29 R18 ; R29 := R18
	421	[1799]	OP_LOADBOOL	R30 1 0 ; R30 := true
	422	[1799]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	423	[1802]	GETUPVAL 	R27 U1 ; R27 := U1
	424	[1802]	CALL     	R27 1 2 ; R27 := R27()
	425	[1802]	TEST     	R27 0 ; if not R27 then PC := 525
	426	[1802]	JMP      	525 ; PC := 525
	427	[1802]	GETTABLE 	R27 R18 K40 ; R27 := R18["EmptySlot"]
	428	[1802]	TEST     	R27 1 ; if R27 then PC := 525
	429	[1802]	JMP      	525 ; PC := 525
	430	[1804]	GETTABLE 	R27 R18 K46 ; R27 := R18["Type"]
	431	[1804]	SELF     	R27 R27 K92 ; R28 := R27; R27 := R27[0xed4e0128]
	432	[1804]	CALL     	R27 2 2 ; R27 := R27(R28)
	433	[1806]	GETTABLE 	R28 R18 K88 ; R28 := R18["SortCategory"]
	434	[1806]	EQ       	0 R28 K93 ; if R28 ~= 34.000000 then PC := 440
	435	[1806]	JMP      	440 ; PC := 440
	436	[1807]	GETTABLE 	R28 R18 K44 ; R28 := R18["RawItem"]
	437	[1807]	SELF     	R28 R28 K94 ; R29 := R28; R28 := R28[0xb8327da7]
	438	[1807]	CALL     	R28 2 2 ; R28 := R28(R29)
	439	[1807]	MOVE     	R27 R28 ; R27 := R28
	440	[1810]	GETGLOBAL	R28 K52 ; R28 := _T
	441	[1810]	GETTABLE 	R28 R28 K95 ; R28 := R28["InvTradingInfo"]
	442	[1810]	GETTABLE 	R28 R28 K96 ; R28 := R28["State"]
	443	[1810]	GETTABLE 	R28 R28 R27 ; R28 := R28[R27]
	444	[1810]	EQ       	1 R28 K17 ; if R28 == nil then PC := 525
	445	[1810]	JMP      	525 ; PC := 525
	446	[1811]	GETGLOBAL	R28 K52 ; R28 := _T
	447	[1811]	GETTABLE 	R28 R28 K95 ; R28 := R28["InvTradingInfo"]
	448	[1811]	GETTABLE 	R28 R28 K96 ; R28 := R28["State"]
	449	[1811]	GETTABLE 	R28 R28 R27 ; R28 := R28[R27]
	450	[1812]	OP_LOADBOOL	R29 0 0 ; R29 := false
	451	[1813]	GETTABLE 	R30 R28 K97 ; R30 := R28["Ids"]
	452	[1813]	LEN      	R30 R30 ; R30 := # R30
	453	[1813]	LT       	0 K35 R30 ; if 0.000000 >= R30 then PC := 501
	454	[1813]	JMP      	501 ; PC := 501
	455	[1814]	LOADNIL  	R30 R30 ; R30 := nil
	456	[1815]	GETGLOBAL	R31 K16 ; R31 := 0x7b998233
	457	[1815]	GETTABLE 	R32 R18 K44 ; R32 := R18["RawItem"]
	458	[1815]	CALL     	R31 2 2 ; R31 := R31(R32)
	459	[1815]	TEST     	R31 1 ; if R31 then PC := 482
	460	[1815]	JMP      	482 ; PC := 482
	461	[1816]	GETGLOBAL	R31 K16 ; R31 := 0x7b998233
	462	[1816]	GETTABLE 	R32 R18 K44 ; R32 := R18["RawItem"]
	463	[1816]	GETTABLE 	R32 R32 K98 ; R32 := R32["Nemesis"]
	464	[1816]	CALL     	R31 2 2 ; R31 := R31(R32)
	465	[1816]	TEST     	R31 1 ; if R31 then PC := 475
	466	[1816]	JMP      	475 ; PC := 475
	467	[1817]	GETGLOBAL	R31 K99 ; R31 := 0x5f93cf5b
	468	[1817]	GETTABLE 	R32 R18 K44 ; R32 := R18["RawItem"]
	469	[1817]	GETTABLE 	R32 R32 K98 ; R32 := R32["Nemesis"]
	470	[1817]	SELF     	R32 R32 K100 ; R33 := R32; R32 := R32[0x20c79262]
	471	[1817]	CALL     	R32 2 0 ; R32,... := R32(R33)
	472	[1817]	CALL     	R31 0 2 ; R31 := R31(R32,...)
	473	[1817]	MOVE     	R30 R31 ; R30 := R31
	474	[1817]	JMP      	482 ; PC := 482
	475	[1818]	GETTABLE 	R31 R18 K44 ; R31 := R18["RawItem"]
	476	[1818]	GETTABLE 	R31 R31 K66 ; R31 := R31["mItemId"]
	477	[1818]	EQ       	1 R31 K17 ; if R31 == nil then PC := 482
	478	[1818]	JMP      	482 ; PC := 482
	479	[1819]	GETTABLE 	R31 R18 K44 ; R31 := R18["RawItem"]
	480	[1819]	GETTABLE 	R31 R31 K66 ; R31 := R31["mItemId"]
	481	[1819]	GETTABLE 	R30 R31 K37 ; R30 := R31["mId"]
	482	[1822]	EQ       	1 R30 K17 ; if R30 == nil then PC := 501
	483	[1822]	JMP      	501 ; PC := 501
	484	[1823]	LOADK    	R31 := 1.000000
	485	[1823]	GETTABLE 	R32 R28 K97 ; R32 := R28["Ids"]
	486	[1823]	LEN      	R32 R32 ; R32 := # R32
	487	[1823]	LOADK    	R33 := 1.000000
	488	[1823]	FORPREP  	R31 500 ; R31 -= R33; PC := 500
	489	[1824]	GETTABLE 	R35 R28 K97 ; R35 := R28["Ids"]
	490	[1824]	GETTABLE 	R35 R35 R34 ; R35 := R35[R34]
	491	[1824]	EQ       	0 R35 R30 ; if R35 ~= R30 then PC := 500
	492	[1824]	JMP      	500 ; PC := 500
	493	[1825]	GETUPVAL 	R35 U14 ; R35 := U14
	494	[1825]	MOVE     	R36 R18 ; R36 := R18
	495	[1825]	LOADNIL  	R37 R37 ; R37 := nil
	496	[1825]	LOADK    	R38 := 1.000000
	497	[1825]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	498	[1826]	OP_LOADBOOL	R29 1 0 ; R29 := true
	499	[1828]	JMP      	501 ; PC := 501
	500	[1823]	FORLOOP  	R31 489 ; R31 += R33; if R31 <= R32 then begin PC := 489; R34 := R31 end
	501	[1834]	TEST     	R29 1 ; if R29 then PC := 525
	502	[1834]	JMP      	525 ; PC := 525
	503	[1834]	GETTABLE 	R35 R28 K58 ; R35 := R28["Count"]
	504	[1834]	LT       	0 K35 R35 ; if 0.000000 >= R35 then PC := 525
	505	[1834]	JMP      	525 ; PC := 525
	506	[1834]	GETGLOBAL	R35 K16 ; R35 := 0x7b998233
	507	[1834]	GETTABLE 	R36 R18 K44 ; R36 := R18["RawItem"]
	508	[1834]	CALL     	R35 2 2 ; R35 := R35(R36)
	509	[1834]	TEST     	R35 1 ; if R35 then PC := 520
	510	[1834]	JMP      	520 ; PC := 520
	511	[1834]	GETTABLE 	R35 R18 K44 ; R35 := R18["RawItem"]
	512	[1834]	GETTABLE 	R35 R35 K66 ; R35 := R35["mItemId"]
	513	[1834]	EQ       	1 R35 K17 ; if R35 == nil then PC := 520
	514	[1834]	JMP      	520 ; PC := 520
	515	[1834]	GETTABLE 	R35 R18 K44 ; R35 := R18["RawItem"]
	516	[1834]	GETTABLE 	R35 R35 K66 ; R35 := R35["mItemId"]
	517	[1834]	GETTABLE 	R35 R35 K37 ; R35 := R35["mId"]
	518	[1834]	EQ       	0 R35 K7 ; if R35 ~= "" then PC := 525
	519	[1834]	JMP      	525 ; PC := 525
	520	[1835]	GETUPVAL 	R35 U14 ; R35 := U14
	521	[1835]	MOVE     	R36 R18 ; R36 := R18
	522	[1835]	LOADNIL  	R37 R37 ; R37 := nil
	523	[1835]	GETTABLE 	R38 R28 K58 ; R38 := R28["Count"]
	524	[1835]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	525	[1726]	FORLOOP  	R14 171 ; R14 += R16; if R14 <= R15 then begin PC := 171; R17 := R14 end
	526	[1840]	RETURN   	R0 1 ; return 

function #40 <?:1842,2014> (572 instructions, 2288 bytes at 0000021138864AE0)
1 param, 80 slots, 14 upvalues, 0 locals, 112 constants, 0 functions
	1	[1845]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1845]	GETUPVAL 	R3 U1 ; R3 := U1
	3	[1845]	GETTABLE 	R3 R3 K0 ; R3 := R3["SHARDS"]
	4	[1845]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 11
	5	[1845]	JMP      	11 ; PC := 11
	6	[1846]	GETGLOBAL	R2 K1 ; R2 := _T
	7	[1846]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xc64c5067]
	8	[1846]	CALL     	R2 1 2 ; R2 := R2()
	9	[1846]	MOVE     	R1 R2 ; R1 := R2
	10	[1846]	JMP      	571 ; PC := 571
	11	[1847]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[1847]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[1847]	GETTABLE 	R3 R3 K3 ; R3 := R3["SYNDDONATE"]
	14	[1847]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 45
	15	[1847]	JMP      	45 ; PC := 45
	16	[1848]	NEWTABLE 	R2 0 0 ; R2 := {}
	17	[1848]	MOVE     	R1 R2 ; R1 := R2
	18	[1849]	GETGLOBAL	R2 K1 ; R2 := _T
	19	[1849]	GETTABLE 	R2 R2 K4 ; R2 := R2["SyndicateInvInfo"]
	20	[1849]	GETTABLE 	R2 R2 K5 ; R2 := R2["Syndicate"]
	21	[1849]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x991e7039]
	22	[1849]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[1850]	GETGLOBAL	R3 K1 ; R3 := _T
	24	[1850]	GETTABLE 	R3 R3 K4 ; R3 := R3["SyndicateInvInfo"]
	25	[1850]	GETTABLE 	R3 R3 K7 ; R3 := R3["VendorTag"]
	26	[1851]	GETGLOBAL	R4 K8 ; R4 := 0xc8802016
	27	[1851]	MOVE     	R5 R2 ; R5 := R2
	28	[1851]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	29	[1851]	JMP      	42 ; PC := 42
	30	[1852]	GETTABLE 	R9 R8 K9 ; R9 := R8["mTag"]
	31	[1852]	GETGLOBAL	R10 K10 ; R10 := EMPTY_SYMBOL
	32	[1852]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 37
	33	[1852]	JMP      	37 ; PC := 37
	34	[1852]	GETTABLE 	R9 R8 K9 ; R9 := R8["mTag"]
	35	[1852]	EQ       	0 R9 R3 ; if R9 ~= R3 then PC := 42
	36	[1852]	JMP      	42 ; PC := 42
	37	[1853]	GETGLOBAL	R9 K11 ; R9 := 0x33bdd652
	38	[1853]	GETTABLE 	R9 R9 K12 ; R9 := R9[0x23d5322f]
	39	[1853]	MOVE     	R10 R1 ; R10 := R1
	40	[1853]	MOVE     	R11 R8 ; R11 := R8
	41	[1853]	CALL     	R9 3 1 ; R9(R10,R11)
	42	[1851]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 30; R6 := R7 end
	43	[1854]	JMP      	30 ; PC := 30
	44	[1855]	JMP      	571 ; PC := 571
	45	[1856]	GETUPVAL 	R9 U0 ; R9 := U0
	46	[1856]	GETUPVAL 	R10 U1 ; R10 := U1
	47	[1856]	GETTABLE 	R10 R10 K13 ; R10 := R10["SHIP_RAW"]
	48	[1856]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 55
	49	[1856]	JMP      	55 ; PC := 55
	50	[1857]	GETUPVAL 	R9 U2 ; R9 := U2
	51	[1857]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0xaea1cb86]
	52	[1857]	CALL     	R9 2 2 ; R9 := R9(R10)
	53	[1857]	MOVE     	R1 R9 ; R1 := R9
	54	[1857]	JMP      	571 ; PC := 571
	55	[1858]	EQ       	0 R0 K16 ; if R0 ~= 43.000000 then PC := 75
	56	[1858]	JMP      	75 ; PC := 75
	57	[1859]	GETUPVAL 	R9 U3 ; R9 := U3
	58	[1859]	GETTABLE 	R9 R9 K17 ; R9 := R9[0x06d055f9]
	59	[1859]	GETUPVAL 	R10 U0 ; R10 := U0
	60	[1859]	GETUPVAL 	R11 U1 ; R11 := U1
	61	[1859]	GETTABLE 	R11 R11 K18 ; R11 := R11["SHIP_SCRAP"]
	62	[1859]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 65
	63	[1859]	JMP      	65 ; PC := 65
	64	[1859]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 65
	65	[1859]	OP_LOADBOOL	R10 1 0 ; R10 := true
	66	[1859]	GETUPVAL 	R11 U2 ; R11 := U2
	67	[1859]	SELF     	R11 R11 K19 ; R12 := R11; R11 := R11[0xe600a7f3]
	68	[1859]	CALL     	R11 2 2 ; R11 := R11(R12)
	69	[1859]	GETUPVAL 	R12 U2 ; R12 := U2
	70	[1859]	SELF     	R12 R12 K20 ; R13 := R12; R12 := R12[0xbfba693e]
	71	[1859]	CALL     	R12 2 0 ; R12,... := R12(R13)
	72	[1859]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	73	[1859]	MOVE     	R1 R9 ; R1 := R9
	74	[1859]	JMP      	571 ; PC := 571
	75	[1860]	EQ       	0 R0 K21 ; if R0 ~= 46.000000 then PC := 95
	76	[1860]	JMP      	95 ; PC := 95
	77	[1861]	GETUPVAL 	R9 U3 ; R9 := U3
	78	[1861]	GETTABLE 	R9 R9 K17 ; R9 := R9[0x06d055f9]
	79	[1861]	GETUPVAL 	R10 U0 ; R10 := U0
	80	[1861]	GETUPVAL 	R11 U1 ; R11 := U1
	81	[1861]	GETTABLE 	R11 R11 K18 ; R11 := R11["SHIP_SCRAP"]
	82	[1861]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 85
	83	[1861]	JMP      	85 ; PC := 85
	84	[1861]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 85
	85	[1861]	OP_LOADBOOL	R10 1 0 ; R10 := true
	86	[1861]	GETUPVAL 	R11 U2 ; R11 := U2
	87	[1861]	SELF     	R11 R11 K22 ; R12 := R11; R11 := R11[0x64e44bdc]
	88	[1861]	CALL     	R11 2 2 ; R11 := R11(R12)
	89	[1861]	GETUPVAL 	R12 U2 ; R12 := U2
	90	[1861]	SELF     	R12 R12 K23 ; R13 := R12; R12 := R12[0xdc039065]
	91	[1861]	CALL     	R12 2 0 ; R12,... := R12(R13)
	92	[1861]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	93	[1861]	MOVE     	R1 R9 ; R1 := R9
	94	[1861]	JMP      	571 ; PC := 571
	95	[1862]	EQ       	0 R0 K24 ; if R0 ~= 0.000000 then PC := 102
	96	[1862]	JMP      	102 ; PC := 102
	97	[1863]	GETUPVAL 	R9 U2 ; R9 := U2
	98	[1863]	SELF     	R9 R9 K25 ; R10 := R9; R9 := R9[0x215bf396]
	99	[1863]	CALL     	R9 2 2 ; R9 := R9(R10)
	100	[1863]	MOVE     	R1 R9 ; R1 := R9
	101	[1863]	JMP      	571 ; PC := 571
	102	[1864]	EQ       	0 R0 K26 ; if R0 ~= 1.000000 then PC := 109
	103	[1864]	JMP      	109 ; PC := 109
	104	[1865]	GETUPVAL 	R9 U2 ; R9 := U2
	105	[1865]	SELF     	R9 R9 K27 ; R10 := R9; R9 := R9[0x57d88957]
	106	[1865]	CALL     	R9 2 2 ; R9 := R9(R10)
	107	[1865]	MOVE     	R1 R9 ; R1 := R9
	108	[1865]	JMP      	571 ; PC := 571
	109	[1866]	EQ       	0 R0 K28 ; if R0 ~= 2.000000 then PC := 116
	110	[1866]	JMP      	116 ; PC := 116
	111	[1867]	GETUPVAL 	R9 U2 ; R9 := U2
	112	[1867]	SELF     	R9 R9 K29 ; R10 := R9; R9 := R9[0x51a64e2e]
	113	[1867]	CALL     	R9 2 2 ; R9 := R9(R10)
	114	[1867]	MOVE     	R1 R9 ; R1 := R9
	115	[1867]	JMP      	571 ; PC := 571
	116	[1868]	EQ       	0 R0 K30 ; if R0 ~= 3.000000 then PC := 141
	117	[1868]	JMP      	141 ; PC := 141
	118	[1869]	GETUPVAL 	R9 U2 ; R9 := U2
	119	[1869]	SELF     	R9 R9 K31 ; R10 := R9; R9 := R9[0x21a3da0c]
	120	[1869]	CALL     	R9 2 2 ; R9 := R9(R10)
	121	[1869]	MOVE     	R1 R9 ; R1 := R9
	122	[1870]	GETUPVAL 	R9 U4 ; R9 := U4
	123	[1870]	TEST     	R9 1 ; if R9 then PC := 571
	124	[1870]	JMP      	571 ; PC := 571
	125	[1871]	LEN      	R9 R1 ; R9 := # R1
	126	[1871]	LOADK    	R10 := 1.000000
	127	[1871]	LOADK    	R11 := -1.000000
	128	[1871]	FORPREP  	R9 139 ; R9 -= R11; PC := 139
	129	[1872]	GETTABLE 	R13 R1 R12 ; R13 := R1[R12]
	130	[1873]	GETTABLE 	R14 R13 K32 ; R14 := R13["mItemType"]
	131	[1873]	GETGLOBAL	R15 K33 ; R15 := 0xfba12602
	132	[1873]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 139
	133	[1873]	JMP      	139 ; PC := 139
	134	[1874]	GETGLOBAL	R14 K11 ; R14 := 0x33bdd652
	135	[1874]	GETTABLE 	R14 R14 K34 ; R14 := R14[0x9c1f3b5a]
	136	[1874]	MOVE     	R15 R1 ; R15 := R1
	137	[1874]	MOVE     	R16 R12 ; R16 := R12
	138	[1874]	CALL     	R14 3 1 ; R14(R15,R16)
	139	[1871]	FORLOOP  	R9 129 ; R9 += R11; if R9 <= R10 then begin PC := 129; R12 := R9 end
	140	[1877]	JMP      	571 ; PC := 571
	141	[1878]	EQ       	0 R0 K35 ; if R0 ~= 5.000000 then PC := 166
	142	[1878]	JMP      	166 ; PC := 166
	143	[1879]	GETUPVAL 	R14 U2 ; R14 := U2
	144	[1879]	SELF     	R14 R14 K36 ; R15 := R14; R14 := R14[0x0bf14f02]
	145	[1879]	CALL     	R14 2 2 ; R14 := R14(R15)
	146	[1879]	MOVE     	R1 R14 ; R1 := R14
	147	[1880]	GETUPVAL 	R14 U5 ; R14 := U5
	148	[1880]	TEST     	R14 1 ; if R14 then PC := 571
	149	[1880]	JMP      	571 ; PC := 571
	150	[1881]	LEN      	R14 R1 ; R14 := # R1
	151	[1881]	LOADK    	R15 := 1.000000
	152	[1881]	LOADK    	R16 := -1.000000
	153	[1881]	FORPREP  	R14 164 ; R14 -= R16; PC := 164
	154	[1882]	GETTABLE 	R18 R1 R17 ; R18 := R1[R17]
	155	[1883]	GETTABLE 	R19 R18 K32 ; R19 := R18["mItemType"]
	156	[1883]	GETGLOBAL	R20 K37 ; R20 := 0xfa01e69a
	157	[1883]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 164
	158	[1883]	JMP      	164 ; PC := 164
	159	[1884]	GETGLOBAL	R19 K11 ; R19 := 0x33bdd652
	160	[1884]	GETTABLE 	R19 R19 K34 ; R19 := R19[0x9c1f3b5a]
	161	[1884]	MOVE     	R20 R1 ; R20 := R1
	162	[1884]	MOVE     	R21 R17 ; R21 := R17
	163	[1884]	CALL     	R19 3 1 ; R19(R20,R21)
	164	[1881]	FORLOOP  	R14 154 ; R14 += R16; if R14 <= R15 then begin PC := 154; R17 := R14 end
	165	[1887]	JMP      	571 ; PC := 571
	166	[1888]	EQ       	0 R0 K38 ; if R0 ~= 6.000000 then PC := 173
	167	[1888]	JMP      	173 ; PC := 173
	168	[1889]	GETUPVAL 	R19 U2 ; R19 := U2
	169	[1889]	SELF     	R19 R19 K39 ; R20 := R19; R19 := R19[0xe9131614]
	170	[1889]	CALL     	R19 2 2 ; R19 := R19(R20)
	171	[1889]	MOVE     	R1 R19 ; R1 := R19
	172	[1889]	JMP      	571 ; PC := 571
	173	[1890]	EQ       	0 R0 K40 ; if R0 ~= 11.000000 then PC := 242
	174	[1890]	JMP      	242 ; PC := 242
	175	[1891]	GETUPVAL 	R19 U0 ; R19 := U0
	176	[1891]	GETUPVAL 	R20 U1 ; R20 := U1
	177	[1891]	GETTABLE 	R20 R20 K41 ; R20 := R20["RESDONATE"]
	178	[1891]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 237
	179	[1891]	JMP      	237 ; PC := 237
	180	[1891]	GETGLOBAL	R19 K42 ; R19 := 0x7b998233
	181	[1891]	GETUPVAL 	R20 U6 ; R20 := U6
	182	[1891]	CALL     	R19 2 2 ; R19 := R19(R20)
	183	[1891]	TEST     	R19 1 ; if R19 then PC := 237
	184	[1891]	JMP      	237 ; PC := 237
	185	[1893]	NEWTABLE 	R19 0 0 ; R19 := {}
	186	[1893]	MOVE     	R1 R19 ; R1 := R19
	187	[1894]	GETUPVAL 	R19 U6 ; R19 := U6
	188	[1894]	SELF     	R19 R19 K43 ; R20 := R19; R19 := R19[0x06ad312d]
	189	[1894]	CALL     	R19 2 2 ; R19 := R19(R20)
	190	[1895]	GETUPVAL 	R20 U2 ; R20 := U2
	191	[1895]	SELF     	R20 R20 K44 ; R21 := R20; R20 := R20[0xf4045b7e]
	192	[1895]	CALL     	R20 2 2 ; R20 := R20(R21)
	193	[1896]	NEWTABLE 	R21 0 0 ; R21 := {}
	194	[1897]	LOADK    	R22 := 1.000000
	195	[1897]	LEN      	R23 R20 ; R23 := # R20
	196	[1897]	LOADK    	R24 := 1.000000
	197	[1897]	FORPREP  	R22 208 ; R22 -= R24; PC := 208
	198	[1898]	GETTABLE 	R26 R20 R25 ; R26 := R20[R25]
	199	[1900]	GETTABLE 	R27 R26 K32 ; R27 := R26["mItemType"]
	200	[1900]	SELF     	R27 R27 K45 ; R28 := R27; R27 := R27[0xed4e0128]
	201	[1900]	CALL     	R27 2 2 ; R27 := R27(R28)
	202	[1900]	SETTABLE 	R21 R27 K46 ; R21[R27] := true
	203	[1901]	GETGLOBAL	R27 K11 ; R27 := 0x33bdd652
	204	[1901]	GETTABLE 	R27 R27 K12 ; R27 := R27[0x23d5322f]
	205	[1901]	MOVE     	R28 R1 ; R28 := R1
	206	[1901]	MOVE     	R29 R26 ; R29 := R26
	207	[1901]	CALL     	R27 3 1 ; R27(R28,R29)
	208	[1897]	FORLOOP  	R22 198 ; R22 += R24; if R22 <= R23 then begin PC := 198; R25 := R22 end
	209	[1905]	LOADK    	R27 := 1.000000
	210	[1905]	LEN      	R28 R19 ; R28 := # R19
	211	[1905]	LOADK    	R29 := 1.000000
	212	[1905]	FORPREP  	R27 235 ; R27 -= R29; PC := 235
	213	[1906]	GETTABLE 	R31 R19 R30 ; R31 := R19[R30]
	214	[1907]	SELF     	R32 R31 K47 ; R33 := R31; R32 := R31[0xc055cef8]
	215	[1907]	CALL     	R32 2 2 ; R32 := R32(R33)
	216	[1907]	TEST     	R32 0 ; if not R32 then PC := 235
	217	[1907]	JMP      	235 ; PC := 235
	218	[1907]	SELF     	R32 R31 K48 ; R33 := R31; R32 := R31[0xf278f8a1]
	219	[1907]	CALL     	R32 2 2 ; R32 := R32(R33)
	220	[1907]	SELF     	R32 R32 K45 ; R33 := R32; R32 := R32[0xed4e0128]
	221	[1907]	CALL     	R32 2 2 ; R32 := R32(R33)
	222	[1907]	GETTABLE 	R32 R21 R32 ; R32 := R21[R32]
	223	[1907]	EQ       	0 R32 K49 ; if R32 ~= nil then PC := 235
	224	[1907]	JMP      	235 ; PC := 235
	225	[1908]	GETGLOBAL	R32 K11 ; R32 := 0x33bdd652
	226	[1908]	GETTABLE 	R32 R32 K12 ; R32 := R32[0x23d5322f]
	227	[1908]	MOVE     	R33 R1 ; R33 := R1
	228	[1908]	GETGLOBAL	R34 K50 ; R34 := 0x6c97a788
	229	[1908]	GETTABLE 	R34 R34 K51 ; R34 := R34[0x925e2bbb]
	230	[1908]	SELF     	R35 R31 K48 ; R36 := R31; R35 := R31[0xf278f8a1]
	231	[1908]	CALL     	R35 2 2 ; R35 := R35(R36)
	232	[1908]	LOADK    	R36 := 0.000000
	233	[1908]	CALL     	R34 3 0 ; R34,... := R34(R35,R36)
	234	[1908]	CALL     	R32 0 1 ; R32(R33,...)
	235	[1905]	FORLOOP  	R27 213 ; R27 += R29; if R27 <= R28 then begin PC := 213; R30 := R27 end
	236	[1910]	JMP      	571 ; PC := 571
	237	[1912]	GETUPVAL 	R32 U2 ; R32 := U2
	238	[1912]	SELF     	R32 R32 K44 ; R33 := R32; R32 := R32[0xf4045b7e]
	239	[1912]	CALL     	R32 2 2 ; R32 := R32(R33)
	240	[1912]	MOVE     	R1 R32 ; R1 := R32
	241	[1913]	JMP      	571 ; PC := 571
	242	[1914]	EQ       	0 R0 K52 ; if R0 ~= 4.000000 then PC := 295
	243	[1914]	JMP      	295 ; PC := 295
	244	[1915]	GETUPVAL 	R32 U2 ; R32 := U2
	245	[1915]	SELF     	R32 R32 K53 ; R33 := R32; R32 := R32[0xaaeb4d91]
	246	[1915]	CALL     	R32 2 2 ; R32 := R32(R33)
	247	[1916]	GETUPVAL 	R33 U2 ; R33 := U2
	248	[1916]	SELF     	R33 R33 K54 ; R34 := R33; R33 := R33[0x98b1bb53]
	249	[1916]	CALL     	R33 2 2 ; R33 := R33(R34)
	250	[1917]	NEWTABLE 	R34 0 0 ; R34 := {}
	251	[1917]	MOVE     	R1 R34 ; R1 := R34
	252	[1918]	NEWTABLE 	R34 2 0 ; R34 := {}
	253	[1918]	MOVE     	R35 R32 ; R35 := R32
	254	[1918]	MOVE     	R36 R33 ; R36 := R33
	255	[1918]	SETLIST  	R34 2 1 ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 2
	256	[1919]	LOADK    	R35 := 1.000000
	257	[1919]	LEN      	R36 R34 ; R36 := # R34
	258	[1919]	LOADK    	R37 := 1.000000
	259	[1919]	FORPREP  	R35 293 ; R35 -= R37; PC := 293
	260	[1920]	GETGLOBAL	R39 K55 ; R39 := 0xcfc01047
	261	[1920]	GETTABLE 	R40 R34 R38 ; R40 := R34[R38]
	262	[1920]	CALL     	R39 2 4 ; R39,R40,R41 := R39(R40)
	263	[1920]	JMP      	291 ; PC := 291
	264	[1921]	GETTABLE 	R44 R43 K32 ; R44 := R43["mItemType"]
	265	[1921]	SELF     	R44 R44 K56 ; R45 := R44; R44 := R44[0xf2deaf69]
	266	[1921]	GETUPVAL 	R46 U7 ; R46 := U7
	267	[1921]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	268	[1922]	GETTABLE 	R45 R43 K32 ; R45 := R43["mItemType"]
	269	[1922]	SELF     	R45 R45 K56 ; R46 := R45; R45 := R45[0xf2deaf69]
	270	[1922]	GETUPVAL 	R47 U8 ; R47 := U8
	271	[1922]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	272	[1923]	GETUPVAL 	R46 U0 ; R46 := U0
	273	[1923]	GETUPVAL 	R47 U1 ; R47 := U1
	274	[1923]	GETTABLE 	R47 R47 K57 ; R47 := R47["TRADE_MODS"]
	275	[1923]	EQ       	0 R46 R47 ; if R46 ~= R47 then PC := 279
	276	[1923]	JMP      	279 ; PC := 279
	277	[1923]	TEST     	R44 0 ; if not R44 then PC := 286
	278	[1923]	JMP      	286 ; PC := 286
	279	[1924]	GETUPVAL 	R46 U0 ; R46 := U0
	280	[1924]	GETUPVAL 	R47 U1 ; R47 := U1
	281	[1924]	GETTABLE 	R47 R47 K57 ; R47 := R47["TRADE_MODS"]
	282	[1924]	EQ       	1 R46 R47 ; if R46 == R47 then PC := 291
	283	[1924]	JMP      	291 ; PC := 291
	284	[1924]	TEST     	R44 0 ; if not R44 then PC := 291
	285	[1924]	JMP      	291 ; PC := 291
	286	[1925]	GETGLOBAL	R46 K11 ; R46 := 0x33bdd652
	287	[1925]	GETTABLE 	R46 R46 K12 ; R46 := R46[0x23d5322f]
	288	[1925]	MOVE     	R47 R1 ; R47 := R1
	289	[1925]	MOVE     	R48 R43 ; R48 := R43
	290	[1925]	CALL     	R46 3 1 ; R46(R47,R48)
	291	[1920]	TFORLOOP 	R39 2 ; R42,R43 := R39(R40,R41); if R42 ~= nil then begin PC = 264; R41 := R42 end
	292	[1926]	JMP      	264 ; PC := 264
	293	[1919]	FORLOOP  	R35 260 ; R35 += R37; if R35 <= R36 then begin PC := 260; R38 := R35 end
	294	[1928]	JMP      	571 ; PC := 571
	295	[1929]	EQ       	0 R0 K58 ; if R0 ~= 13.000000 then PC := 323
	296	[1929]	JMP      	323 ; PC := 323
	297	[1930]	NEWTABLE 	R46 0 0 ; R46 := {}
	298	[1930]	MOVE     	R1 R46 ; R1 := R46
	299	[1931]	GETUPVAL 	R46 U2 ; R46 := U2
	300	[1931]	SELF     	R46 R46 K59 ; R47 := R46; R46 := R46[0x6cfd4151]
	301	[1931]	CALL     	R46 2 2 ; R46 := R46(R47)
	302	[1932]	GETGLOBAL	R47 K60 ; R47 := 0x7ed0a956
	303	[1932]	LOADK    	R48 K61 ; R48 := "/Lotus/Types/Recipes/AbilityOverrides/BaseAbilityOverrideBlueprint"
	304	[1932]	CALL     	R47 2 2 ; R47 := R47(R48)
	305	[1933]	LOADK    	R48 := 1.000000
	306	[1933]	LEN      	R49 R46 ; R49 := # R46
	307	[1933]	LOADK    	R50 := 1.000000
	308	[1933]	FORPREP  	R48 321 ; R48 -= R50; PC := 321
	309	[1934]	GETTABLE 	R52 R46 R51 ; R52 := R46[R51]
	310	[1934]	GETTABLE 	R52 R52 K32 ; R52 := R52["mItemType"]
	311	[1934]	SELF     	R52 R52 K56 ; R53 := R52; R52 := R52[0xf2deaf69]
	312	[1934]	MOVE     	R54 R47 ; R54 := R47
	313	[1934]	CALL     	R52 3 2 ; R52 := R52(R53,R54)
	314	[1934]	TEST     	R52 1 ; if R52 then PC := 321
	315	[1934]	JMP      	321 ; PC := 321
	316	[1935]	GETGLOBAL	R52 K11 ; R52 := 0x33bdd652
	317	[1935]	GETTABLE 	R52 R52 K12 ; R52 := R52[0x23d5322f]
	318	[1935]	MOVE     	R53 R1 ; R53 := R1
	319	[1935]	GETTABLE 	R54 R46 R51 ; R54 := R46[R51]
	320	[1935]	CALL     	R52 3 1 ; R52(R53,R54)
	321	[1933]	FORLOOP  	R48 309 ; R48 += R50; if R48 <= R49 then begin PC := 309; R51 := R48 end
	322	[1937]	JMP      	571 ; PC := 571
	323	[1938]	EQ       	0 R0 K62 ; if R0 ~= 15.000000 then PC := 330
	324	[1938]	JMP      	330 ; PC := 330
	325	[1939]	GETUPVAL 	R52 U2 ; R52 := U2
	326	[1939]	SELF     	R52 R52 K63 ; R53 := R52; R52 := R52[0x2a207127]
	327	[1939]	CALL     	R52 2 2 ; R52 := R52(R53)
	328	[1939]	MOVE     	R1 R52 ; R1 := R52
	329	[1939]	JMP      	571 ; PC := 571
	330	[1940]	EQ       	0 R0 K64 ; if R0 ~= 24.000000 then PC := 358
	331	[1940]	JMP      	358 ; PC := 358
	332	[1941]	NEWTABLE 	R52 0 0 ; R52 := {}
	333	[1941]	MOVE     	R1 R52 ; R1 := R52
	334	[1942]	GETUPVAL 	R52 U2 ; R52 := U2
	335	[1942]	SELF     	R52 R52 K65 ; R53 := R52; R52 := R52[0xa855881a]
	336	[1942]	CALL     	R52 2 2 ; R52 := R52(R53)
	337	[1943]	LOADK    	R53 := 1.000000
	338	[1943]	LEN      	R54 R52 ; R54 := # R52
	339	[1943]	LOADK    	R55 := 1.000000
	340	[1943]	FORPREP  	R53 356 ; R53 -= R55; PC := 356
	341	[1946]	GETTABLE 	R57 R52 R56 ; R57 := R52[R56]
	342	[1946]	GETTABLE 	R57 R57 K66 ; R57 := R57["mDetails"]
	343	[1946]	GETTABLE 	R57 R57 K67 ; R57 := R57["mStatus"]
	344	[1946]	EQ       	1 R57 K24 ; if R57 == 0.000000 then PC := 356
	345	[1946]	JMP      	356 ; PC := 356
	346	[1947]	GETTABLE 	R57 R52 R56 ; R57 := R52[R56]
	347	[1947]	GETTABLE 	R57 R57 K66 ; R57 := R57["mDetails"]
	348	[1947]	GETTABLE 	R57 R57 K67 ; R57 := R57["mStatus"]
	349	[1947]	EQ       	1 R57 K26 ; if R57 == 1.000000 then PC := 356
	350	[1947]	JMP      	356 ; PC := 356
	351	[1950]	GETGLOBAL	R57 K11 ; R57 := 0x33bdd652
	352	[1950]	GETTABLE 	R57 R57 K12 ; R57 := R57[0x23d5322f]
	353	[1950]	MOVE     	R58 R1 ; R58 := R1
	354	[1950]	GETTABLE 	R59 R52 R56 ; R59 := R52[R56]
	355	[1950]	CALL     	R57 3 1 ; R57(R58,R59)
	356	[1943]	FORLOOP  	R53 341 ; R53 += R55; if R53 <= R54 then begin PC := 341; R56 := R53 end
	357	[1952]	JMP      	571 ; PC := 571
	358	[1953]	EQ       	0 R0 K68 ; if R0 ~= 16.000000 then PC := 365
	359	[1953]	JMP      	365 ; PC := 365
	360	[1954]	GETUPVAL 	R57 U2 ; R57 := U2
	361	[1954]	SELF     	R57 R57 K69 ; R58 := R57; R57 := R57[0xa2c6d8b7]
	362	[1954]	CALL     	R57 2 2 ; R57 := R57(R58)
	363	[1954]	MOVE     	R1 R57 ; R1 := R57
	364	[1954]	JMP      	571 ; PC := 571
	365	[1955]	EQ       	0 R0 K70 ; if R0 ~= 17.000000 then PC := 372
	366	[1955]	JMP      	372 ; PC := 372
	367	[1956]	GETUPVAL 	R57 U2 ; R57 := U2
	368	[1956]	SELF     	R57 R57 K71 ; R58 := R57; R57 := R57[0x8f27d10c]
	369	[1956]	CALL     	R57 2 2 ; R57 := R57(R58)
	370	[1956]	MOVE     	R1 R57 ; R1 := R57
	371	[1956]	JMP      	571 ; PC := 571
	372	[1957]	EQ       	0 R0 K72 ; if R0 ~= 18.000000 then PC := 379
	373	[1957]	JMP      	379 ; PC := 379
	374	[1958]	GETUPVAL 	R57 U2 ; R57 := U2
	375	[1958]	SELF     	R57 R57 K73 ; R58 := R57; R57 := R57[0xcd6e999d]
	376	[1958]	CALL     	R57 2 2 ; R57 := R57(R58)
	377	[1958]	MOVE     	R1 R57 ; R1 := R57
	378	[1958]	JMP      	571 ; PC := 571
	379	[1959]	EQ       	0 R0 K74 ; if R0 ~= 27.000000 then PC := 386
	380	[1959]	JMP      	386 ; PC := 386
	381	[1960]	GETUPVAL 	R57 U2 ; R57 := U2
	382	[1960]	SELF     	R57 R57 K75 ; R58 := R57; R57 := R57[0x4bb8609a]
	383	[1960]	CALL     	R57 2 2 ; R57 := R57(R58)
	384	[1960]	MOVE     	R1 R57 ; R1 := R57
	385	[1960]	JMP      	571 ; PC := 571
	386	[1961]	EQ       	0 R0 K76 ; if R0 ~= 28.000000 then PC := 393
	387	[1961]	JMP      	393 ; PC := 393
	388	[1962]	GETUPVAL 	R57 U2 ; R57 := U2
	389	[1962]	SELF     	R57 R57 K77 ; R58 := R57; R57 := R57[0x6f7b67d7]
	390	[1962]	CALL     	R57 2 2 ; R57 := R57(R58)
	391	[1962]	MOVE     	R1 R57 ; R1 := R57
	392	[1962]	JMP      	571 ; PC := 571
	393	[1963]	EQ       	0 R0 K78 ; if R0 ~= 29.000000 then PC := 400
	394	[1963]	JMP      	400 ; PC := 400
	395	[1964]	GETUPVAL 	R57 U2 ; R57 := U2
	396	[1964]	SELF     	R57 R57 K79 ; R58 := R57; R57 := R57[0x3218c3b0]
	397	[1964]	CALL     	R57 2 2 ; R57 := R57(R58)
	398	[1964]	MOVE     	R1 R57 ; R1 := R57
	399	[1964]	JMP      	571 ; PC := 571
	400	[1965]	EQ       	0 R0 K80 ; if R0 ~= 48.000000 then PC := 407
	401	[1965]	JMP      	407 ; PC := 407
	402	[1966]	GETUPVAL 	R57 U2 ; R57 := U2
	403	[1966]	SELF     	R57 R57 K81 ; R58 := R57; R57 := R57[0xfab085e3]
	404	[1966]	CALL     	R57 2 2 ; R57 := R57(R58)
	405	[1966]	MOVE     	R1 R57 ; R1 := R57
	406	[1966]	JMP      	571 ; PC := 571
	407	[1967]	EQ       	0 R0 K82 ; if R0 ~= 34.000000 then PC := 442
	408	[1967]	JMP      	442 ; PC := 442
	409	[1968]	NEWTABLE 	R57 0 0 ; R57 := {}
	410	[1968]	MOVE     	R1 R57 ; R1 := R57
	411	[1969]	GETUPVAL 	R57 U9 ; R57 := U9
	412	[1969]	GETTABLE 	R57 R57 K83 ; R57 := R57[0x1f81a1bd]
	413	[1969]	GETUPVAL 	R58 U2 ; R58 := U2
	414	[1969]	SELF     	R58 R58 K84 ; R59 := R58; R58 := R58[0x7a5dc828]
	415	[1969]	CALL     	R58 2 2 ; R58 := R58(R59)
	416	[1969]	GETGLOBAL	R59 K85 ; R59 := 0xae91e43b
	417	[1969]	GETUPVAL 	R60 U6 ; R60 := U6
	418	[1969]	GETUPVAL 	R61 U10 ; R61 := U10
	419	[1969]	OP_LOADBOOL	R62 1 0 ; R62 := true
	420	[1969]	GETUPVAL 	R63 U0 ; R63 := U0
	421	[1969]	GETUPVAL 	R64 U1 ; R64 := U1
	422	[1969]	GETTABLE 	R64 R64 K86 ; R64 := R64["TREASURE"]
	423	[1969]	EQ       	1 R63 R64 ; if R63 == R64 then PC := 426
	424	[1969]	JMP      	426 ; PC := 426
	425	[1969]	OP_LOADBOOL	R63 0 1 ; R63 := false; PC := 426
	426	[1969]	OP_LOADBOOL	R63 1 0 ; R63 := true
	427	[1969]	CALL     	R57 7 2 ; R57 := R57(R58,R59,R60,R61,R62,R63)
	428	[1970]	GETGLOBAL	R58 K55 ; R58 := 0xcfc01047
	429	[1970]	MOVE     	R59 R57 ; R59 := R57
	430	[1970]	CALL     	R58 2 4 ; R58,R59,R60 := R58(R59)
	431	[1970]	JMP      	439 ; PC := 439
	432	[1971]	GETTABLE 	R63 R62 K87 ; R63 := R62["Type"]
	433	[1971]	SETTABLE 	R62 K32 R63 ; R62["mItemType"] := R63
	434	[1972]	GETGLOBAL	R63 K11 ; R63 := 0x33bdd652
	435	[1972]	GETTABLE 	R63 R63 K12 ; R63 := R63[0x23d5322f]
	436	[1972]	MOVE     	R64 R1 ; R64 := R1
	437	[1972]	MOVE     	R65 R62 ; R65 := R62
	438	[1972]	CALL     	R63 3 1 ; R63(R64,R65)
	439	[1970]	TFORLOOP 	R58 2 ; R61,R62 := R58(R59,R60); if R61 ~= nil then begin PC = 432; R60 := R61 end
	440	[1972]	JMP      	432 ; PC := 432
	441	[1973]	JMP      	571 ; PC := 571
	442	[1974]	EQ       	0 R0 K88 ; if R0 ~= 39.000000 then PC := 449
	443	[1974]	JMP      	449 ; PC := 449
	444	[1975]	GETUPVAL 	R63 U2 ; R63 := U2
	445	[1975]	SELF     	R63 R63 K89 ; R64 := R63; R63 := R63[0x91a3eddf]
	446	[1975]	CALL     	R63 2 2 ; R63 := R63(R64)
	447	[1975]	MOVE     	R1 R63 ; R1 := R63
	448	[1975]	JMP      	571 ; PC := 571
	449	[1976]	EQ       	0 R0 K90 ; if R0 ~= 25.000000 then PC := 467
	450	[1976]	JMP      	467 ; PC := 467
	451	[1978]	GETUPVAL 	R63 U2 ; R63 := U2
	452	[1978]	SELF     	R63 R63 K91 ; R64 := R63; R63 := R63[0x741ca437]
	453	[1978]	CALL     	R63 2 2 ; R63 := R63(R64)
	454	[1979]	LEN      	R64 R63 ; R64 := # R63
	455	[1979]	LT       	0 K24 R64 ; if 0.000000 >= R64 then PC := 571
	456	[1979]	JMP      	571 ; PC := 571
	457	[1980]	NEWTABLE 	R64 0 0 ; R64 := {}
	458	[1980]	GETGLOBAL	R65 K50 ; R65 := 0x6c97a788
	459	[1980]	GETTABLE 	R65 R65 K51 ; R65 := R65[0x925e2bbb]
	460	[1980]	GETTABLE 	R66 R63 K26 ; R66 := R63[1.000000]
	461	[1980]	GETTABLE 	R66 R66 K32 ; R66 := R66["mItemType"]
	462	[1980]	LEN      	R67 R63 ; R67 := # R63
	463	[1980]	CALL     	R65 3 0 ; R65,... := R65(R66,R67)
	464	[1980]	SETLIST  	R64 0 1 ; R64[(1-1)*FPF+i] := R(64+i), 1 <= i <= 0
	465	[1980]	MOVE     	R1 R64 ; R1 := R64
	466	[1981]	JMP      	571 ; PC := 571
	467	[1982]	EQ       	0 R0 K92 ; if R0 ~= 26.000000 then PC := 474
	468	[1982]	JMP      	474 ; PC := 474
	469	[1983]	GETUPVAL 	R64 U2 ; R64 := U2
	470	[1983]	SELF     	R64 R64 K93 ; R65 := R64; R64 := R64[0xfccd8b09]
	471	[1983]	CALL     	R64 2 2 ; R64 := R64(R65)
	472	[1983]	MOVE     	R1 R64 ; R1 := R64
	473	[1983]	JMP      	571 ; PC := 571
	474	[1984]	EQ       	0 R0 K94 ; if R0 ~= 37.000000 then PC := 481
	475	[1984]	JMP      	481 ; PC := 481
	476	[1985]	GETUPVAL 	R64 U2 ; R64 := U2
	477	[1985]	SELF     	R64 R64 K95 ; R65 := R64; R64 := R64[0x99718a3d]
	478	[1985]	CALL     	R64 2 2 ; R64 := R64(R65)
	479	[1985]	MOVE     	R1 R64 ; R1 := R64
	480	[1985]	JMP      	571 ; PC := 571
	481	[1986]	EQ       	0 R0 K96 ; if R0 ~= 30.000000 then PC := 492
	482	[1986]	JMP      	492 ; PC := 492
	483	[1988]	GETUPVAL 	R64 U9 ; R64 := U9
	484	[1988]	GETTABLE 	R64 R64 K97 ; R64 := R64[0x2c905c8f]
	485	[1988]	GETGLOBAL	R65 K85 ; R65 := 0xae91e43b
	486	[1988]	GETGLOBAL	R66 K98 ; R66 := 0x25d99d89
	487	[1988]	OP_LOADBOOL	R67 0 0 ; R67 := false
	488	[1988]	OP_LOADBOOL	R68 1 0 ; R68 := true
	489	[1988]	CALL     	R64 5 2 ; R64 := R64(R65,R66,R67,R68)
	490	[1988]	MOVE     	R1 R64 ; R1 := R64
	491	[1988]	JMP      	571 ; PC := 571
	492	[1989]	EQ       	0 R0 K99 ; if R0 ~= 41.000000 then PC := 499
	493	[1989]	JMP      	499 ; PC := 499
	494	[1990]	GETUPVAL 	R64 U2 ; R64 := U2
	495	[1990]	SELF     	R64 R64 K100 ; R65 := R64; R64 := R64[0x738deb95]
	496	[1990]	CALL     	R64 2 2 ; R64 := R64(R65)
	497	[1990]	MOVE     	R1 R64 ; R1 := R64
	498	[1990]	JMP      	571 ; PC := 571
	499	[1991]	EQ       	0 R0 K101 ; if R0 ~= 10.000000 then PC := 524
	500	[1991]	JMP      	524 ; PC := 524
	501	[1992]	NEWTABLE 	R64 0 0 ; R64 := {}
	502	[1992]	MOVE     	R1 R64 ; R1 := R64
	503	[1993]	GETUPVAL 	R64 U2 ; R64 := U2
	504	[1993]	SELF     	R64 R64 K102 ; R65 := R64; R64 := R64[0xd8dfa041]
	505	[1993]	CALL     	R64 2 2 ; R64 := R64(R65)
	506	[1994]	LOADK    	R65 := 1.000000
	507	[1994]	LEN      	R66 R64 ; R66 := # R64
	508	[1994]	LOADK    	R67 := 1.000000
	509	[1994]	FORPREP  	R65 522 ; R65 -= R67; PC := 522
	510	[1995]	GETTABLE 	R69 R64 R68 ; R69 := R64[R68]
	511	[1995]	GETTABLE 	R69 R69 K32 ; R69 := R69["mItemType"]
	512	[1995]	SELF     	R69 R69 K56 ; R70 := R69; R69 := R69[0xf2deaf69]
	513	[1995]	GETGLOBAL	R71 K103 ; R71 := gEmoteType
	514	[1995]	CALL     	R69 3 2 ; R69 := R69(R70,R71)
	515	[1995]	TEST     	R69 0 ; if not R69 then PC := 522
	516	[1995]	JMP      	522 ; PC := 522
	517	[1996]	GETGLOBAL	R69 K11 ; R69 := 0x33bdd652
	518	[1996]	GETTABLE 	R69 R69 K12 ; R69 := R69[0x23d5322f]
	519	[1996]	MOVE     	R70 R1 ; R70 := R1
	520	[1996]	GETTABLE 	R71 R64 R68 ; R71 := R64[R68]
	521	[1996]	CALL     	R69 3 1 ; R69(R70,R71)
	522	[1994]	FORLOOP  	R65 510 ; R65 += R67; if R65 <= R66 then begin PC := 510; R68 := R65 end
	523	[1998]	JMP      	571 ; PC := 571
	524	[1999]	GETUPVAL 	R69 U11 ; R69 := U11
	525	[1999]	EQ       	0 R0 R69 ; if R0 ~= R69 then PC := 571
	526	[1999]	JMP      	571 ; PC := 571
	527	[1999]	GETGLOBAL	R69 K42 ; R69 := 0x7b998233
	528	[1999]	GETGLOBAL	R70 K98 ; R70 := 0x25d99d89
	529	[1999]	CALL     	R69 2 2 ; R69 := R69(R70)
	530	[1999]	TEST     	R69 1 ; if R69 then PC := 571
	531	[1999]	JMP      	571 ; PC := 571
	532	[2000]	GETGLOBAL	R69 K98 ; R69 := 0x25d99d89
	533	[2000]	SELF     	R69 R69 K104 ; R70 := R69; R69 := R69[0x2bc6bc3e]
	534	[2000]	CALL     	R69 2 2 ; R69 := R69(R70)
	535	[2001]	LOADK    	R70 := 1.000000
	536	[2001]	LEN      	R71 R69 ; R71 := # R69
	537	[2001]	LOADK    	R72 := 1.000000
	538	[2001]	FORPREP  	R70 570 ; R70 -= R72; PC := 570
	539	[2002]	GETTABLE 	R74 R69 R73 ; R74 := R69[R73]
	540	[2003]	GETTABLE 	R75 R74 K105 ; R75 := R74["mKilled"]
	541	[2003]	TEST     	R75 1 ; if R75 then PC := 570
	542	[2003]	JMP      	570 ; PC := 570
	543	[2003]	GETTABLE 	R75 R74 K106 ; R75 := R74["mTraded"]
	544	[2003]	TEST     	R75 1 ; if R75 then PC := 570
	545	[2003]	JMP      	570 ; PC := 570
	546	[2003]	GETTABLE 	R75 R74 K107 ; R75 := R74["mNumPreviousOwners"]
	547	[2003]	GETUPVAL 	R76 U12 ; R76 := U12
	548	[2003]	LT       	0 R75 R76 ; if R75 >= R76 then PC := 570
	549	[2003]	JMP      	570 ; PC := 570
	550	[2004]	EQ       	0 R1 K49 ; if R1 ~= nil then PC := 554
	551	[2004]	JMP      	554 ; PC := 554
	552	[2005]	NEWTABLE 	R75 0 0 ; R75 := {}
	553	[2005]	MOVE     	R1 R75 ; R1 := R75
	554	[2007]	GETUPVAL 	R75 U13 ; R75 := U13
	555	[2007]	GETTABLE 	R75 R75 K108 ; R75 := R75[0x22e50a9c]
	556	[2007]	GETUPVAL 	R76 U13 ; R76 := U13
	557	[2007]	GETTABLE 	R76 R76 K109 ; R76 := R76[0x6a965652]
	558	[2007]	MOVE     	R77 R74 ; R77 := R74
	559	[2007]	CALL     	R76 2 0 ; R76,... := R76(R77)
	560	[2007]	CALL     	R75 0 2 ; R75 := R75(R76,...)
	561	[2008]	GETGLOBAL	R76 K11 ; R76 := 0x33bdd652
	562	[2008]	GETTABLE 	R76 R76 K12 ; R76 := R76[0x23d5322f]
	563	[2008]	MOVE     	R77 R1 ; R77 := R1
	564	[2008]	NEWTABLE 	R78 0 2 ; R78 := {}
	565	[2008]	SETTABLE 	R78 K110 R74 ; R78["Nemesis"] := R74
	566	[2008]	GETGLOBAL	R79 K111 ; R79 := lichItems
	567	[2008]	GETTABLE 	R79 R79 R75 ; R79 := R79[R75]
	568	[2008]	SETTABLE 	R78 K32 R79 ; R78["mItemType"] := R79
	569	[2008]	CALL     	R76 3 1 ; R76(R77,R78)
	570	[2001]	FORLOOP  	R70 539 ; R70 += R72; if R70 <= R71 then begin PC := 539; R73 := R70 end
	571	[2013]	RETURN   	R1 2 ; return R1 
	572	[2014]	RETURN   	R0 1 ; return 

function #41 <?:2016,2021> (18 instructions, 72 bytes at 00000211388664E0)
3 params, 6 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[2017]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[2017]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	3	[2017]	EQ       	0 R3 K0 ; if R3 ~= nil then PC := 11
	4	[2017]	JMP      	11 ; PC := 11
	5	[2018]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[2018]	NEWTABLE 	R4 0 2 ; R4 := {}
	7	[2018]	SETTABLE 	R4 K1 R1 ; R4["Category"] := R1
	8	[2018]	NEWTABLE 	R5 0 0 ; R5 := {}
	9	[2018]	SETTABLE 	R4 K2 R5 ; R4["Elements"] := R5
	10	[2018]	SETTABLE 	R3 R0 R4 ; R3[R0] := R4
	11	[2020]	GETGLOBAL	R3 K3 ; R3 := 0x33bdd652
	12	[2020]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x23d5322f]
	13	[2020]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[2020]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	15	[2020]	GETTABLE 	R4 R4 K2 ; R4 := R4["Elements"]
	16	[2020]	MOVE     	R5 R2 ; R5 := R2
	17	[2020]	CALL     	R3 3 1 ; R3(R4,R5)
	18	[2021]	RETURN   	R0 1 ; return 

function #42 <?:2023,2397> (1327 instructions, 5308 bytes at 0000021138866690)
0 params, 76 slots, 38 upvalues, 0 locals, 198 constants, 1 function
	1	[2024]	LOADK    	R0 := 0.000000
	2	[2025]	LOADNIL  	R1 R4 ; R1 := R2 := R3 := R4 := nil
	3	[2027]	GETUPVAL 	R5 U0 ; R5 := U0
	4	[2027]	EQ       	0 R5 K0 ; if R5 ~= 1.000000 then PC := 833
	5	[2027]	JMP      	833 ; PC := 833
	6	[2029]	GETUPVAL 	R5 U1 ; R5 := U1
	7	[2029]	LT       	0 R0 R5 ; if R0 >= R5 then PC := 821
	8	[2029]	JMP      	821 ; PC := 821
	9	[2029]	GETUPVAL 	R5 U2 ; R5 := U2
	10	[2029]	GETTABLE 	R5 R5 K1 ; R5 := R5["Elements"]
	11	[2029]	LEN      	R5 R5 ; R5 := # R5
	12	[2029]	LT       	1 K2 R5 ; if 0.000000 < R5 then PC := 18
	13	[2029]	JMP      	18 ; PC := 18
	14	[2029]	GETUPVAL 	R5 U3 ; R5 := U3
	15	[2029]	LEN      	R5 R5 ; R5 := # R5
	16	[2029]	LT       	0 K2 R5 ; if 0.000000 >= R5 then PC := 821
	17	[2029]	JMP      	821 ; PC := 821
	18	[2030]	GETUPVAL 	R5 U2 ; R5 := U2
	19	[2030]	GETTABLE 	R5 R5 K1 ; R5 := R5["Elements"]
	20	[2030]	LEN      	R5 R5 ; R5 := # R5
	21	[2030]	EQ       	0 R5 K2 ; if R5 ~= 0.000000 then PC := 36
	22	[2030]	JMP      	36 ; PC := 36
	23	[2031]	GETUPVAL 	R5 U2 ; R5 := U2
	24	[2031]	GETGLOBAL	R6 K4 ; R6 := 0x33bdd652
	25	[2031]	GETTABLE 	R6 R6 K5 ; R6 := R6[0x9c1f3b5a]
	26	[2031]	GETUPVAL 	R7 U3 ; R7 := U3
	27	[2031]	LOADK    	R8 := 1.000000
	28	[2031]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	29	[2031]	SETTABLE 	R5 K3 R6 ; R5["Category"] := R6
	30	[2032]	GETUPVAL 	R5 U2 ; R5 := U2
	31	[2032]	GETUPVAL 	R6 U4 ; R6 := U4
	32	[2032]	GETUPVAL 	R7 U2 ; R7 := U2
	33	[2032]	GETTABLE 	R7 R7 K3 ; R7 := R7["Category"]
	34	[2032]	CALL     	R6 2 2 ; R6 := R6(R7)
	35	[2032]	SETTABLE 	R5 K1 R6 ; R5["Elements"] := R6
	36	[2039]	GETGLOBAL	R5 K6 ; R5 := 0xa94df70b
	37	[2039]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x99c4ef3a]
	38	[2039]	GETUPVAL 	R7 U2 ; R7 := U2
	39	[2039]	GETTABLE 	R7 R7 K3 ; R7 := R7["Category"]
	40	[2039]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	41	[2039]	MOVE     	R1 R5 ; R1 := R5
	42	[2041]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	43	[2041]	GETUPVAL 	R6 U2 ; R6 := U2
	44	[2041]	GETTABLE 	R6 R6 K1 ; R6 := R6["Elements"]
	45	[2041]	CALL     	R5 2 2 ; R5 := R5(R6)
	46	[2041]	TEST     	R5 1 ; if R5 then PC := 6
	47	[2041]	JMP      	6 ; PC := 6
	48	[2042]	GETUPVAL 	R5 U1 ; R5 := U1
	49	[2042]	LT       	0 R0 R5 ; if R0 >= R5 then PC := 6
	50	[2042]	JMP      	6 ; PC := 6
	51	[2043]	GETGLOBAL	R5 K9 ; R5 := 0xce225efa
	52	[2043]	CALL     	R5 1 1 ; R5()
	53	[2044]	GETGLOBAL	R5 K4 ; R5 := 0x33bdd652
	54	[2044]	GETTABLE 	R5 R5 K5 ; R5 := R5[0x9c1f3b5a]
	55	[2044]	GETUPVAL 	R6 U2 ; R6 := U2
	56	[2044]	GETTABLE 	R6 R6 K1 ; R6 := R6["Elements"]
	57	[2044]	CALL     	R5 2 2 ; R5 := R5(R6)
	58	[2044]	MOVE     	R2 R5 ; R2 := R5
	59	[2045]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	60	[2045]	MOVE     	R6 R2 ; R6 := R2
	61	[2045]	CALL     	R5 2 2 ; R5 := R5(R6)
	62	[2045]	TEST     	R5 0 ; if not R5 then PC := 65
	63	[2045]	JMP      	65 ; PC := 65
	64	[2046]	JMP      	6 ; PC := 6
	65	[2048]	ADD      	R0 R0 K0 ; R0 := R0 + 1.000000
	66	[2050]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	67	[2050]	GETTABLE 	R6 R2 K10 ; R6 := R2["mItemType"]
	68	[2050]	CALL     	R5 2 2 ; R5 := R5(R6)
	69	[2050]	TEST     	R5 1 ; if R5 then PC := 48
	70	[2050]	JMP      	48 ; PC := 48
	71	[2051]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	72	[2053]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	73	[2053]	GETUPVAL 	R6 U5 ; R6 := U5
	74	[2053]	CALL     	R5 2 2 ; R5 := R5(R6)
	75	[2053]	TEST     	R5 1 ; if R5 then PC := 106
	76	[2053]	JMP      	106 ; PC := 106
	77	[2054]	GETUPVAL 	R5 U5 ; R5 := U5
	78	[2054]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x105074fb]
	79	[2054]	GETTABLE 	R7 R2 K10 ; R7 := R2["mItemType"]
	80	[2054]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	81	[2054]	MOVE     	R3 R5 ; R3 := R5
	82	[2056]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	83	[2056]	MOVE     	R6 R3 ; R6 := R3
	84	[2056]	CALL     	R5 2 2 ; R5 := R5(R6)
	85	[2056]	TEST     	R5 1 ; if R5 then PC := 92
	86	[2056]	JMP      	92 ; PC := 92
	87	[2056]	SELF     	R5 R3 K12 ; R6 := R3; R5 := R3[0x2dacead4]
	88	[2056]	CALL     	R5 2 2 ; R5 := R5(R6)
	89	[2056]	TEST     	R5 1 ; if R5 then PC := 92
	90	[2056]	JMP      	92 ; PC := 92
	91	[2057]	LOADNIL  	R3 R3 ; R3 := nil
	92	[2060]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	93	[2060]	MOVE     	R6 R3 ; R6 := R3
	94	[2060]	CALL     	R5 2 2 ; R5 := R5(R6)
	95	[2060]	TEST     	R5 1 ; if R5 then PC := 106
	96	[2060]	JMP      	106 ; PC := 106
	97	[2060]	GETTABLE 	R5 R2 K10 ; R5 := R2["mItemType"]
	98	[2060]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0xf2deaf69]
	99	[2060]	GETGLOBAL	R7 K14 ; R7 := gFishItemType
	100	[2060]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	101	[2060]	TEST     	R5 0 ; if not R5 then PC := 106
	102	[2060]	JMP      	106 ; PC := 106
	103	[2061]	SELF     	R5 R3 K15 ; R6 := R3; R5 := R3[0xc399f522]
	104	[2061]	CALL     	R5 2 2 ; R5 := R5(R6)
	105	[2061]	MOVE     	R4 R5 ; R4 := R5
	106	[2065]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	107	[2065]	MOVE     	R6 R3 ; R6 := R3
	108	[2065]	CALL     	R5 2 2 ; R5 := R5(R6)
	109	[2065]	TEST     	R5 1 ; if R5 then PC := 48
	110	[2065]	JMP      	48 ; PC := 48
	111	[2065]	GETUPVAL 	R5 U6 ; R5 := U6
	112	[2065]	CALL     	R5 1 2 ; R5 := R5()
	113	[2065]	TEST     	R5 0 ; if not R5 then PC := 119
	114	[2065]	JMP      	119 ; PC := 119
	115	[2065]	SELF     	R5 R3 K16 ; R6 := R3; R5 := R3[0x09cec4b8]
	116	[2065]	CALL     	R5 2 2 ; R5 := R5(R6)
	117	[2065]	TEST     	R5 0 ; if not R5 then PC := 48
	118	[2065]	JMP      	48 ; PC := 48
	119	[2066]	LOADNIL  	R5 R5 ; R5 := nil
	120	[2067]	GETTABLE 	R6 R2 K17 ; R6 := R2["SortCategory"]
	121	[2067]	EQ       	0 R6 K19 ; if R6 ~= 34.000000 then PC := 125
	122	[2067]	JMP      	125 ; PC := 125
	123	[2069]	MOVE     	R5 R2 ; R5 := R2
	124	[2069]	JMP      	177 ; PC := 177
	125	[2071]	GETUPVAL 	R6 U7 ; R6 := U7
	126	[2071]	GETTABLE 	R6 R6 K20 ; R6 := R6[0x08681f50]
	127	[2071]	GETGLOBAL	R7 K21 ; R7 := 0xae91e43b
	128	[2071]	MOVE     	R8 R3 ; R8 := R3
	129	[2071]	NEWTABLE 	R9 0 11 ; R9 := {}
	130	[2071]	GETUPVAL 	R10 U8 ; R10 := U8
	131	[2071]	GETUPVAL 	R11 U9 ; R11 := U9
	132	[2071]	GETTABLE 	R11 R11 K23 ; R11 := R11["SHIP_PARTS"]
	133	[2071]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 136
	134	[2071]	JMP      	136 ; PC := 136
	135	[2071]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 136
	136	[2071]	OP_LOADBOOL	R10 1 0 ; R10 := true
	137	[2071]	SETTABLE 	R9 K22 R10 ; R9["SalvageRepaired"] := R10
	138	[2071]	SETTABLE 	R9 K24 K25 ; R9["GetVisibilityMaterial"] := true
	139	[2071]	SETTABLE 	R9 K26 R2 ; R9["ItemInfo"] := R2
	140	[2071]	GETUPVAL 	R10 U2 ; R10 := U2
	141	[2071]	GETTABLE 	R10 R10 K3 ; R10 := R10["Category"]
	142	[2071]	SETTABLE 	R9 K3 R10 ; R9["Category"] := R10
	143	[2071]	GETUPVAL 	R10 U10 ; R10 := U10
	144	[2071]	SETTABLE 	R9 K27 R10 ; R9["GameData"] := R10
	145	[2071]	SETTABLE 	R9 K28 K25 ; R9["HideRecipesInUse"] := true
	146	[2071]	SETTABLE 	R9 K29 K25 ; R9["CheckTimeLimited"] := true
	147	[2071]	SETTABLE 	R9 K30 K25 ; R9["CheckKeyChain"] := true
	148	[2071]	GETUPVAL 	R10 U8 ; R10 := U8
	149	[2071]	GETUPVAL 	R11 U9 ; R11 := U9
	150	[2071]	GETTABLE 	R11 R11 K32 ; R11 := R11["PRIMEPARTS"]
	151	[2071]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 154
	152	[2071]	JMP      	154 ; PC := 154
	153	[2071]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 154
	154	[2071]	OP_LOADBOOL	R10 1 0 ; R10 := true
	155	[2071]	SETTABLE 	R9 K31 R10 ; R9["UsePrimeBucks"] := R10
	156	[2071]	GETUPVAL 	R10 U8 ; R10 := U8
	157	[2071]	GETUPVAL 	R11 U9 ; R11 := U9
	158	[2071]	GETTABLE 	R11 R11 K34 ; R11 := R11["TREASURE"]
	159	[2071]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 162
	160	[2071]	JMP      	162 ; PC := 162
	161	[2071]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 162
	162	[2071]	OP_LOADBOOL	R10 1 0 ; R10 := true
	163	[2071]	SETTABLE 	R9 K33 R10 ; R9["UseFusionPoints"] := R10
	164	[2071]	GETUPVAL 	R10 U8 ; R10 := U8
	165	[2071]	GETUPVAL 	R11 U9 ; R11 := U9
	166	[2071]	GETTABLE 	R11 R11 K36 ; R11 := R11["SHARDS"]
	167	[2071]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 170
	168	[2071]	JMP      	170 ; PC := 170
	169	[2071]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 170
	170	[2071]	OP_LOADBOOL	R10 1 0 ; R10 := true
	171	[2071]	SETTABLE 	R9 K35 R10 ; R9["UseFocusPoints"] := R10
	172	[2071]	GETUPVAL 	R10 U5 ; R10 := U5
	173	[2071]	GETUPVAL 	R11 U11 ; R11 := U11
	174	[2071]	OP_LOADBOOL	R12 1 0 ; R12 := true
	175	[2071]	CALL     	R6 7 2 ; R6 := R6(R7,R8,R9,R10,R11,R12)
	176	[2071]	MOVE     	R5 R6 ; R5 := R6
	177	[2074]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	178	[2074]	GETUPVAL 	R7 U12 ; R7 := U12
	179	[2074]	CALL     	R6 2 2 ; R6 := R6(R7)
	180	[2074]	TEST     	R6 1 ; if R6 then PC := 194
	181	[2074]	JMP      	194 ; PC := 194
	182	[2074]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	183	[2074]	GETGLOBAL	R7 K37 ; R7 := _T
	184	[2074]	GETUPVAL 	R8 U12 ; R8 := U12
	185	[2074]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	186	[2074]	CALL     	R6 2 2 ; R6 := R6(R7)
	187	[2074]	TEST     	R6 1 ; if R6 then PC := 194
	188	[2074]	JMP      	194 ; PC := 194
	189	[2075]	GETGLOBAL	R6 K37 ; R6 := _T
	190	[2075]	GETUPVAL 	R7 U12 ; R7 := U12
	191	[2075]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	192	[2075]	MOVE     	R7 R5 ; R7 := R5
	193	[2075]	CALL     	R6 2 1 ; R6(R7)
	194	[2078]	GETUPVAL 	R6 U13 ; R6 := U13
	195	[2078]	GETTABLE 	R7 R5 K38 ; R7 := R5["UID"]
	196	[2078]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	197	[2078]	TEST     	R6 0 ; if not R6 then PC := 206
	198	[2078]	JMP      	206 ; PC := 206
	199	[2079]	SETTABLE 	R5 K39 K25 ; R5["Locked"] := true
	200	[2080]	GETGLOBAL	R6 K21 ; R6 := 0xae91e43b
	201	[2080]	SELF     	R6 R6 K41 ; R7 := R6; R6 := R6[0x42b04007]
	202	[2080]	LOADK    	R8 K42 ; R8 := "/Lotus/Language/Menu/ItemSelection_Equipped"
	203	[2080]	OP_LOADBOOL	R9 0 0 ; R9 := false
	204	[2080]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	205	[2080]	SETTABLE 	R5 K40 R6 ; R5["LockedMsg"] := R6
	206	[2083]	SETTABLE 	R5 K43 R3 ; R5["StoreItem"] := R3
	207	[2084]	GETTABLE 	R6 R2 K44 ; R6 := R2["SpecialPrice"]
	208	[2084]	SETTABLE 	R5 K44 R6 ; R5["SpecialPrice"] := R6
	209	[2085]	GETTABLE 	R6 R2 K45 ; R6 := R2["PriceLabelType"]
	210	[2085]	SETTABLE 	R5 K45 R6 ; R5["PriceLabelType"] := R6
	211	[2086]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	212	[2086]	GETTABLE 	R7 R5 K46 ; R7 := R5["Rank"]
	213	[2086]	CALL     	R6 2 2 ; R6 := R6(R7)
	214	[2086]	TEST     	R6 0 ; if not R6 then PC := 245
	215	[2086]	JMP      	245 ; PC := 245
	216	[2086]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	217	[2086]	GETTABLE 	R7 R5 K47 ; R7 := R5["ResultItemType"]
	218	[2086]	CALL     	R6 2 2 ; R6 := R6(R7)
	219	[2086]	TEST     	R6 1 ; if R6 then PC := 245
	220	[2086]	JMP      	245 ; PC := 245
	221	[2087]	GETUPVAL 	R6 U11 ; R6 := U11
	222	[2087]	GETTABLE 	R6 R6 K48 ; R6 := R6["mXPInfo"]
	223	[2088]	LOADK    	R7 := 1.000000
	224	[2088]	LEN      	R8 R6 ; R8 := # R6
	225	[2088]	LOADK    	R9 := 1.000000
	226	[2088]	FORPREP  	R7 244 ; R7 -= R9; PC := 244
	227	[2089]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	228	[2089]	GETTABLE 	R11 R11 K10 ; R11 := R11["mItemType"]
	229	[2090]	GETGLOBAL	R12 K8 ; R12 := 0x7b998233
	230	[2090]	MOVE     	R13 R11 ; R13 := R11
	231	[2090]	CALL     	R12 2 2 ; R12 := R12(R13)
	232	[2090]	TEST     	R12 1 ; if R12 then PC := 244
	233	[2090]	JMP      	244 ; PC := 244
	234	[2090]	GETTABLE 	R12 R5 K47 ; R12 := R5["ResultItemType"]
	235	[2090]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 244
	236	[2090]	JMP      	244 ; PC := 244
	237	[2091]	GETGLOBAL	R12 K6 ; R12 := 0xa94df70b
	238	[2091]	SELF     	R12 R12 K49 ; R13 := R12; R12 := R12[0x8427bf69]
	239	[2091]	GETTABLE 	R14 R6 R10 ; R14 := R6[R10]
	240	[2091]	GETTABLE 	R14 R14 K50 ; R14 := R14["mXP"]
	241	[2091]	MOVE     	R15 R11 ; R15 := R11
	242	[2091]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	243	[2091]	SETTABLE 	R5 K46 R12 ; R5["Rank"] := R12
	244	[2088]	FORLOOP  	R7 227 ; R7 += R9; if R7 <= R8 then begin PC := 227; R10 := R7 end
	245	[2095]	GETGLOBAL	R12 K8 ; R12 := 0x7b998233
	246	[2095]	GETTABLE 	R13 R5 K51 ; R13 := R5["ArcaneRank"]
	247	[2095]	CALL     	R12 2 2 ; R12 := R12(R13)
	248	[2095]	TEST     	R12 0 ; if not R12 then PC := 270
	249	[2095]	JMP      	270 ; PC := 270
	250	[2095]	GETGLOBAL	R12 K8 ; R12 := 0x7b998233
	251	[2095]	GETTABLE 	R13 R5 K52 ; R13 := R5["RawItem"]
	252	[2095]	CALL     	R12 2 2 ; R12 := R12(R13)
	253	[2095]	TEST     	R12 1 ; if R12 then PC := 270
	254	[2095]	JMP      	270 ; PC := 270
	255	[2095]	GETTABLE 	R12 R5 K52 ; R12 := R5["RawItem"]
	256	[2095]	GETTABLE 	R12 R12 K10 ; R12 := R12["mItemType"]
	257	[2095]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0xf2deaf69]
	258	[2095]	GETUPVAL 	R14 U14 ; R14 := U14
	259	[2095]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	260	[2095]	TEST     	R12 0 ; if not R12 then PC := 270
	261	[2095]	JMP      	270 ; PC := 270
	262	[2096]	GETTABLE 	R12 R5 K52 ; R12 := R5["RawItem"]
	263	[2097]	GETUPVAL 	R13 U15 ; R13 := U15
	264	[2097]	GETTABLE 	R13 R13 K54 ; R13 := R13[0xc6305b1a]
	265	[2097]	MOVE     	R14 R12 ; R14 := R12
	266	[2097]	CALL     	R13 2 3 ; R13,R14 := R13(R14)
	267	[2097]	SETTABLE 	R5 K53 R14 ; R5["ArcaneMaxRank"] := R14
	268	[2097]	SETTABLE 	R5 K51 R13 ; R5["ArcaneRank"] := R13
	269	[2098]	SETTABLE 	R5 K55 R12 ; R5["Arcane"] := R12
	270	[2101]	GETTABLE 	R13 R5 K56 ; R13 := R5["Count"]
	271	[2101]	EQ       	1 R13 K57 ; if R13 == nil then PC := 276
	272	[2101]	JMP      	276 ; PC := 276
	273	[2101]	GETTABLE 	R13 R5 K56 ; R13 := R5["Count"]
	274	[2101]	LT       	1 K2 R13 ; if 0.000000 < R13 then PC := 286
	275	[2101]	JMP      	286 ; PC := 286
	276	[2101]	GETUPVAL 	R13 U8 ; R13 := U8
	277	[2101]	GETUPVAL 	R14 U9 ; R14 := U9
	278	[2101]	GETTABLE 	R14 R14 K58 ; R14 := R14["DECODONATE"]
	279	[2101]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 286
	280	[2101]	JMP      	286 ; PC := 286
	281	[2101]	GETUPVAL 	R13 U8 ; R13 := U8
	282	[2101]	GETUPVAL 	R14 U9 ; R14 := U9
	283	[2101]	GETTABLE 	R14 R14 K59 ; R14 := R14["RESDONATE"]
	284	[2101]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 48
	285	[2101]	JMP      	48 ; PC := 48
	286	[2102]	EQ       	1 R1 K2 ; if R1 == 0.000000 then PC := 295
	287	[2102]	JMP      	295 ; PC := 295
	288	[2103]	EQ       	1 R1 K0 ; if R1 == 1.000000 then PC := 295
	289	[2103]	JMP      	295 ; PC := 295
	290	[2104]	EQ       	1 R1 K61 ; if R1 == 2.000000 then PC := 295
	291	[2104]	JMP      	295 ; PC := 295
	292	[2105]	GETTABLE 	R13 R5 K17 ; R13 := R5["SortCategory"]
	293	[2105]	EQ       	0 R13 K62 ; if R13 ~= 27.000000 then PC := 339
	294	[2105]	JMP      	339 ; PC := 339
	295	[2107]	GETGLOBAL	R13 K8 ; R13 := 0x7b998233
	296	[2107]	GETTABLE 	R14 R5 K52 ; R14 := R5["RawItem"]
	297	[2107]	CALL     	R13 2 2 ; R13 := R13(R14)
	298	[2107]	TEST     	R13 1 ; if R13 then PC := 339
	299	[2107]	JMP      	339 ; PC := 339
	300	[2107]	GETTABLE 	R13 R5 K52 ; R13 := R5["RawItem"]
	301	[2107]	GETTABLE 	R13 R13 K10 ; R13 := R13["mItemType"]
	302	[2107]	SELF     	R13 R13 K13 ; R14 := R13; R13 := R13[0xf2deaf69]
	303	[2107]	GETGLOBAL	R15 K63 ; R15 := 0xa203289c
	304	[2107]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	305	[2107]	TEST     	R13 1 ; if R13 then PC := 339
	306	[2107]	JMP      	339 ; PC := 339
	307	[2108]	GETUPVAL 	R13 U16 ; R13 := U16
	308	[2108]	GETTABLE 	R13 R13 K64 ; R13 := R13[0x06d055f9]
	309	[2108]	EQ       	1 R1 K0 ; if R1 == 1.000000 then PC := 312
	310	[2108]	JMP      	312 ; PC := 312
	311	[2108]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 312
	312	[2108]	OP_LOADBOOL	R14 1 0 ; R14 := true
	313	[2108]	LOADK    	R15 := 0.000000
	314	[2108]	LOADK    	R16 := 7.000000
	315	[2108]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	316	[2109]	GETTABLE 	R14 R5 K52 ; R14 := R5["RawItem"]
	317	[2109]	GETTABLE 	R14 R14 K10 ; R14 := R14["mItemType"]
	318	[2109]	SELF     	R14 R14 K13 ; R15 := R14; R14 := R14[0xf2deaf69]
	319	[2109]	GETGLOBAL	R16 K65 ; R16 := 0x01302fb0
	320	[2109]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	321	[2109]	TEST     	R14 0 ; if not R14 then PC := 324
	322	[2109]	JMP      	324 ; PC := 324
	323	[2110]	LOADK    	R13 := 9.000000
	324	[2112]	GETUPVAL 	R14 U7 ; R14 := U7
	325	[2112]	GETTABLE 	R14 R14 K66 ; R14 := R14[0xca5df72e]
	326	[2112]	GETUPVAL 	R15 U5 ; R15 := U5
	327	[2112]	GETUPVAL 	R16 U11 ; R16 := U11
	328	[2112]	GETTABLE 	R17 R5 K52 ; R17 := R5["RawItem"]
	329	[2112]	MOVE     	R18 R13 ; R18 := R13
	330	[2112]	OP_LOADBOOL	R19 1 0 ; R19 := true
	331	[2112]	CALL     	R14 6 3 ; R14,R15 := R14(R15,R16,R17,R18,R19)
	332	[2113]	GETGLOBAL	R16 K8 ; R16 := 0x7b998233
	333	[2113]	MOVE     	R17 R14 ; R17 := R14
	334	[2113]	CALL     	R16 2 2 ; R16 := R16(R17)
	335	[2113]	TEST     	R16 1 ; if R16 then PC := 339
	336	[2113]	JMP      	339 ; PC := 339
	337	[2114]	SETTABLE 	R5 K67 R14 ; R5["Icon"] := R14
	338	[2115]	SETTABLE 	R5 K68 R15 ; R5["Themed"] := R15
	339	[2120]	GETUPVAL 	R16 U6 ; R16 := U6
	340	[2120]	CALL     	R16 1 2 ; R16 := R16()
	341	[2120]	TEST     	R16 0 ; if not R16 then PC := 397
	342	[2120]	JMP      	397 ; PC := 397
	343	[2123]	GETGLOBAL	R16 K37 ; R16 := _T
	344	[2123]	GETTABLE 	R16 R16 K69 ; R16 := R16["InvTradingInfo"]
	345	[2123]	GETTABLE 	R16 R16 K70 ; R16 := R16["ForDisplay"]
	346	[2123]	TEST     	R16 1 ; if R16 then PC := 358
	347	[2123]	JMP      	358 ; PC := 358
	348	[2123]	SELF     	R16 R3 K71 ; R17 := R3; R16 := R3[0x9ed94a63]
	349	[2123]	CALL     	R16 2 2 ; R16 := R16(R17)
	350	[2123]	GETGLOBAL	R17 K37 ; R17 := _T
	351	[2123]	GETTABLE 	R17 R17 K69 ; R17 := R17["InvTradingInfo"]
	352	[2123]	GETTABLE 	R17 R17 K72 ; R17 := R17["PartnerMR"]
	353	[2123]	LT       	0 R17 R16 ; if R17 >= R16 then PC := 358
	354	[2123]	JMP      	358 ; PC := 358
	355	[2124]	SETTABLE 	R5 K39 K25 ; R5["Locked"] := true
	356	[2125]	SETTABLE 	R5 K40 K73 ; R5["LockedMsg"] := "/Lotus/Language/Dojo/Trade_PartnerMRLocked"
	357	[2125]	JMP      	397 ; PC := 397
	358	[2128]	EQ       	1 R1 K0 ; if R1 == 1.000000 then PC := 364
	359	[2128]	JMP      	364 ; PC := 364
	360	[2128]	EQ       	1 R1 K74 ; if R1 == 4.000000 then PC := 364
	361	[2128]	JMP      	364 ; PC := 364
	362	[2128]	EQ       	0 R1 K61 ; if R1 ~= 2.000000 then PC := 377
	363	[2128]	JMP      	377 ; PC := 377
	364	[2128]	GETGLOBAL	R16 K8 ; R16 := 0x7b998233
	365	[2128]	GETTABLE 	R17 R5 K52 ; R17 := R5["RawItem"]
	366	[2128]	CALL     	R16 2 2 ; R16 := R16(R17)
	367	[2128]	TEST     	R16 1 ; if R16 then PC := 377
	368	[2128]	JMP      	377 ; PC := 377
	369	[2128]	GETTABLE 	R16 R5 K52 ; R16 := R5["RawItem"]
	370	[2128]	SELF     	R16 R16 K75 ; R17 := R16; R16 := R16[0x6e11b572]
	371	[2128]	CALL     	R16 2 2 ; R16 := R16(R17)
	372	[2128]	TEST     	R16 1 ; if R16 then PC := 377
	373	[2128]	JMP      	377 ; PC := 377
	374	[2129]	SETTABLE 	R5 K39 K25 ; R5["Locked"] := true
	375	[2130]	SETTABLE 	R5 K40 K76 ; R5["LockedMsg"] := "/Lotus/Language/Dojo/Trade_Untradeable"
	376	[2130]	JMP      	397 ; PC := 397
	377	[2131]	EQ       	1 R1 K0 ; if R1 == 1.000000 then PC := 385
	378	[2131]	JMP      	385 ; PC := 385
	379	[2131]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	380	[2131]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	381	[2131]	GETGLOBAL	R18 K78 ; R18 := gLotusSuitCustomizationType
	382	[2131]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	383	[2131]	TEST     	R16 0 ; if not R16 then PC := 397
	384	[2131]	JMP      	397 ; PC := 397
	385	[2132]	GETGLOBAL	R16 K8 ; R16 := 0x7b998233
	386	[2132]	GETTABLE 	R17 R5 K52 ; R17 := R5["RawItem"]
	387	[2132]	CALL     	R16 2 2 ; R16 := R16(R17)
	388	[2132]	TEST     	R16 1 ; if R16 then PC := 397
	389	[2132]	JMP      	397 ; PC := 397
	390	[2132]	GETTABLE 	R16 R5 K52 ; R16 := R5["RawItem"]
	391	[2132]	SELF     	R16 R16 K79 ; R17 := R16; R16 := R16[0xba568eef]
	392	[2132]	CALL     	R16 2 2 ; R16 := R16(R17)
	393	[2132]	TEST     	R16 0 ; if not R16 then PC := 397
	394	[2132]	JMP      	397 ; PC := 397
	395	[2133]	SETTABLE 	R5 K39 K25 ; R5["Locked"] := true
	396	[2134]	SETTABLE 	R5 K40 K76 ; R5["LockedMsg"] := "/Lotus/Language/Dojo/Trade_Untradeable"
	397	[2138]	GETUPVAL 	R16 U8 ; R16 := U8
	398	[2138]	GETUPVAL 	R17 U9 ; R17 := U9
	399	[2138]	GETTABLE 	R17 R17 K80 ; R17 := R17["TRADE_MODS"]
	400	[2138]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 409
	401	[2138]	JMP      	409 ; PC := 409
	402	[2139]	GETUPVAL 	R16 U17 ; R16 := U17
	403	[2139]	LOADK    	R17 K81 ; R17 := "modList"
	404	[2139]	GETUPVAL 	R18 U18 ; R18 := U18
	405	[2139]	GETTABLE 	R18 R18 K82 ; R18 := R18["MISC"]
	406	[2139]	MOVE     	R19 R5 ; R19 := R5
	407	[2139]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	408	[2139]	JMP      	48 ; PC := 48
	409	[2140]	GETUPVAL 	R16 U8 ; R16 := U8
	410	[2140]	GETUPVAL 	R17 U9 ; R17 := U9
	411	[2140]	GETTABLE 	R17 R17 K83 ; R17 := R17["SHIP_SCRAP"]
	412	[2140]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 424
	413	[2140]	JMP      	424 ; PC := 424
	414	[2140]	GETUPVAL 	R16 U8 ; R16 := U8
	415	[2140]	GETUPVAL 	R17 U9 ; R17 := U9
	416	[2140]	GETTABLE 	R17 R17 K23 ; R17 := R17["SHIP_PARTS"]
	417	[2140]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 424
	418	[2140]	JMP      	424 ; PC := 424
	419	[2140]	GETUPVAL 	R16 U8 ; R16 := U8
	420	[2140]	GETUPVAL 	R17 U9 ; R17 := U9
	421	[2140]	GETTABLE 	R17 R17 K84 ; R17 := R17["SHIP_RAW"]
	422	[2140]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 431
	423	[2140]	JMP      	431 ; PC := 431
	424	[2141]	GETUPVAL 	R16 U17 ; R16 := U17
	425	[2141]	LOADK    	R17 K85 ; R17 := "miscList"
	426	[2141]	GETUPVAL 	R18 U18 ; R18 := U18
	427	[2141]	GETTABLE 	R18 R18 K82 ; R18 := R18["MISC"]
	428	[2141]	MOVE     	R19 R5 ; R19 := R5
	429	[2141]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	430	[2141]	JMP      	48 ; PC := 48
	431	[2142]	GETUPVAL 	R16 U6 ; R16 := U6
	432	[2142]	CALL     	R16 1 2 ; R16 := R16()
	433	[2142]	TEST     	R16 0 ; if not R16 then PC := 459
	434	[2142]	JMP      	459 ; PC := 459
	435	[2142]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	436	[2142]	EQ       	1 R16 K57 ; if R16 == nil then PC := 459
	437	[2142]	JMP      	459 ; PC := 459
	438	[2142]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	439	[2142]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	440	[2142]	GETGLOBAL	R18 K86 ; R18 := gRecipeItemType
	441	[2142]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	442	[2142]	TEST     	R16 0 ; if not R16 then PC := 459
	443	[2142]	JMP      	459 ; PC := 459
	444	[2143]	GETTABLE 	R16 R5 K87 ; R16 := R5["IsPrimePart"]
	445	[2143]	TEST     	R16 0 ; if not R16 then PC := 452
	446	[2143]	JMP      	452 ; PC := 452
	447	[2144]	NEWTABLE 	R16 1 0 ; R16 := {}
	448	[2144]	GETUPVAL 	R17 U18 ; R17 := U18
	449	[2144]	GETTABLE 	R17 R17 K89 ; R17 := R17["PRIME"]
	450	[2144]	SETLIST  	R16 1 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 1
	451	[2144]	SETTABLE 	R5 K88 R16 ; R5["AdditionalCategories"] := R16
	452	[2146]	GETUPVAL 	R16 U17 ; R16 := U17
	453	[2146]	LOADK    	R17 K90 ; R17 := "recipeList"
	454	[2146]	GETUPVAL 	R18 U18 ; R18 := U18
	455	[2146]	GETTABLE 	R18 R18 K91 ; R18 := R18["RECIPES"]
	456	[2146]	MOVE     	R19 R5 ; R19 := R5
	457	[2146]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	458	[2146]	JMP      	48 ; PC := 48
	459	[2147]	GETUPVAL 	R16 U6 ; R16 := U6
	460	[2147]	CALL     	R16 1 2 ; R16 := R16()
	461	[2147]	TEST     	R16 0 ; if not R16 then PC := 479
	462	[2147]	JMP      	479 ; PC := 479
	463	[2147]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	464	[2147]	EQ       	1 R16 K57 ; if R16 == nil then PC := 479
	465	[2147]	JMP      	479 ; PC := 479
	466	[2147]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	467	[2147]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	468	[2147]	GETGLOBAL	R18 K92 ; R18 := 0xf80ca1d8
	469	[2147]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	470	[2147]	TEST     	R16 0 ; if not R16 then PC := 479
	471	[2147]	JMP      	479 ; PC := 479
	472	[2148]	GETUPVAL 	R16 U17 ; R16 := U17
	473	[2148]	LOADK    	R17 K93 ; R17 := "lichList"
	474	[2148]	GETUPVAL 	R18 U18 ; R18 := U18
	475	[2148]	GETTABLE 	R18 R18 K94 ; R18 := R18["LICH"]
	476	[2148]	MOVE     	R19 R5 ; R19 := R5
	477	[2148]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	478	[2148]	JMP      	48 ; PC := 48
	479	[2149]	GETUPVAL 	R16 U6 ; R16 := U6
	480	[2149]	CALL     	R16 1 2 ; R16 := R16()
	481	[2149]	TEST     	R16 0 ; if not R16 then PC := 499
	482	[2149]	JMP      	499 ; PC := 499
	483	[2149]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	484	[2149]	EQ       	1 R16 K57 ; if R16 == nil then PC := 499
	485	[2149]	JMP      	499 ; PC := 499
	486	[2149]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	487	[2149]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	488	[2149]	GETGLOBAL	R18 K95 ; R18 := gEmoteType
	489	[2149]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	490	[2149]	TEST     	R16 0 ; if not R16 then PC := 499
	491	[2149]	JMP      	499 ; PC := 499
	492	[2150]	GETUPVAL 	R16 U17 ; R16 := U17
	493	[2150]	LOADK    	R17 K96 ; R17 := "emoteList"
	494	[2150]	GETUPVAL 	R18 U18 ; R18 := U18
	495	[2150]	GETTABLE 	R18 R18 K97 ; R18 := R18["EMOTE"]
	496	[2150]	MOVE     	R19 R5 ; R19 := R5
	497	[2150]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	498	[2150]	JMP      	48 ; PC := 48
	499	[2151]	GETTABLE 	R16 R5 K87 ; R16 := R5["IsPrimePart"]
	500	[2151]	TEST     	R16 0 ; if not R16 then PC := 509
	501	[2151]	JMP      	509 ; PC := 509
	502	[2152]	GETUPVAL 	R16 U17 ; R16 := U17
	503	[2152]	LOADK    	R17 K98 ; R17 := "primeList"
	504	[2152]	GETUPVAL 	R18 U18 ; R18 := U18
	505	[2152]	GETTABLE 	R18 R18 K89 ; R18 := R18["PRIME"]
	506	[2152]	MOVE     	R19 R5 ; R19 := R5
	507	[2152]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	508	[2152]	JMP      	48 ; PC := 48
	509	[2153]	EQ       	0 R1 K2 ; if R1 ~= 0.000000 then PC := 518
	510	[2153]	JMP      	518 ; PC := 518
	511	[2154]	GETUPVAL 	R16 U17 ; R16 := U17
	512	[2154]	LOADK    	R17 K99 ; R17 := "warframeList"
	513	[2154]	GETUPVAL 	R18 U18 ; R18 := U18
	514	[2154]	GETTABLE 	R18 R18 K100 ; R18 := R18["WARFRAME"]
	515	[2154]	MOVE     	R19 R5 ; R19 := R5
	516	[2154]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	517	[2154]	JMP      	48 ; PC := 48
	518	[2155]	EQ       	0 R1 K0 ; if R1 ~= 1.000000 then PC := 527
	519	[2155]	JMP      	527 ; PC := 527
	520	[2156]	GETUPVAL 	R16 U17 ; R16 := U17
	521	[2156]	LOADK    	R17 K101 ; R17 := "weaponList"
	522	[2156]	GETUPVAL 	R18 U18 ; R18 := U18
	523	[2156]	GETTABLE 	R18 R18 K102 ; R18 := R18["WEAPONS"]
	524	[2156]	MOVE     	R19 R5 ; R19 := R5
	525	[2156]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	526	[2156]	JMP      	48 ; PC := 48
	527	[2157]	EQ       	0 R1 K61 ; if R1 ~= 2.000000 then PC := 546
	528	[2157]	JMP      	546 ; PC := 546
	529	[2158]	GETTABLE 	R16 R5 K3 ; R16 := R5["Category"]
	530	[2158]	EQ       	0 R16 K103 ; if R16 ~= 24.000000 then PC := 539
	531	[2158]	JMP      	539 ; PC := 539
	532	[2158]	GETTABLE 	R16 R2 K104 ; R16 := R2["mDetails"]
	533	[2158]	GETTABLE 	R16 R16 K105 ; R16 := R16["mName"]
	534	[2158]	EQ       	1 R16 K106 ; if R16 == "" then PC := 539
	535	[2158]	JMP      	539 ; PC := 539
	536	[2159]	GETTABLE 	R16 R2 K104 ; R16 := R2["mDetails"]
	537	[2159]	GETTABLE 	R16 R16 K105 ; R16 := R16["mName"]
	538	[2159]	SETTABLE 	R5 K107 R16 ; R5[0x4e47534f] := R16
	539	[2161]	GETUPVAL 	R16 U17 ; R16 := U17
	540	[2161]	LOADK    	R17 K108 ; R17 := "sentinelList"
	541	[2161]	GETUPVAL 	R18 U18 ; R18 := U18
	542	[2161]	GETTABLE 	R18 R18 K109 ; R18 := R18["SENTINEL"]
	543	[2161]	MOVE     	R19 R5 ; R19 := R5
	544	[2161]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	545	[2161]	JMP      	48 ; PC := 48
	546	[2162]	EQ       	0 R1 K110 ; if R1 ~= 3.000000 then PC := 555
	547	[2162]	JMP      	555 ; PC := 555
	548	[2163]	GETUPVAL 	R16 U17 ; R16 := U17
	549	[2163]	LOADK    	R17 K111 ; R17 := "archwingList"
	550	[2163]	GETUPVAL 	R18 U18 ; R18 := U18
	551	[2163]	GETTABLE 	R18 R18 K112 ; R18 := R18["ARCHWING"]
	552	[2163]	MOVE     	R19 R5 ; R19 := R5
	553	[2163]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	554	[2163]	JMP      	48 ; PC := 48
	555	[2164]	EQ       	0 R1 K113 ; if R1 ~= 10.000000 then PC := 564
	556	[2164]	JMP      	564 ; PC := 564
	557	[2165]	GETUPVAL 	R16 U17 ; R16 := U17
	558	[2165]	LOADK    	R17 K114 ; R17 := "mechList"
	559	[2165]	GETUPVAL 	R18 U18 ; R18 := U18
	560	[2165]	GETTABLE 	R18 R18 K115 ; R18 := R18["MECHS"]
	561	[2165]	MOVE     	R19 R5 ; R19 := R5
	562	[2165]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	563	[2165]	JMP      	48 ; PC := 48
	564	[2166]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	565	[2166]	EQ       	0 R16 K116 ; if R16 ~= 6.000000 then PC := 574
	566	[2166]	JMP      	574 ; PC := 574
	567	[2167]	GETUPVAL 	R16 U17 ; R16 := U17
	568	[2167]	LOADK    	R17 K117 ; R17 := "skinList"
	569	[2167]	GETUPVAL 	R18 U18 ; R18 := U18
	570	[2167]	GETTABLE 	R18 R18 K118 ; R18 := R18["APPEARANCE"]
	571	[2167]	MOVE     	R19 R5 ; R19 := R5
	572	[2167]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	573	[2167]	JMP      	48 ; PC := 48
	574	[2168]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	575	[2168]	EQ       	0 R16 K119 ; if R16 ~= 18.000000 then PC := 584
	576	[2168]	JMP      	584 ; PC := 584
	577	[2169]	GETUPVAL 	R16 U17 ; R16 := U17
	578	[2169]	LOADK    	R17 K120 ; R17 := "droneList"
	579	[2169]	GETUPVAL 	R18 U18 ; R18 := U18
	580	[2169]	GETTABLE 	R18 R18 K82 ; R18 := R18["MISC"]
	581	[2169]	MOVE     	R19 R5 ; R19 := R5
	582	[2169]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	583	[2169]	JMP      	48 ; PC := 48
	584	[2170]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	585	[2170]	EQ       	0 R16 K61 ; if R16 ~= 2.000000 then PC := 594
	586	[2170]	JMP      	594 ; PC := 594
	587	[2171]	GETUPVAL 	R16 U17 ; R16 := U17
	588	[2171]	LOADK    	R17 K121 ; R17 := "gearList"
	589	[2171]	GETUPVAL 	R18 U18 ; R18 := U18
	590	[2171]	GETTABLE 	R18 R18 K122 ; R18 := R18["GEAR"]
	591	[2171]	MOVE     	R19 R5 ; R19 := R5
	592	[2171]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	593	[2171]	JMP      	48 ; PC := 48
	594	[2172]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	595	[2172]	EQ       	0 R16 K123 ; if R16 ~= 17.000000 then PC := 604
	596	[2172]	JMP      	604 ; PC := 604
	597	[2173]	GETUPVAL 	R16 U17 ; R16 := U17
	598	[2173]	LOADK    	R17 K124 ; R17 := "keyList"
	599	[2173]	GETUPVAL 	R18 U18 ; R18 := U18
	600	[2173]	GETTABLE 	R18 R18 K125 ; R18 := R18["KEYS"]
	601	[2173]	MOVE     	R19 R5 ; R19 := R5
	602	[2173]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	603	[2173]	JMP      	48 ; PC := 48
	604	[2174]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	605	[2174]	EQ       	0 R16 K126 ; if R16 ~= 28.000000 then PC := 614
	606	[2174]	JMP      	614 ; PC := 614
	607	[2175]	GETUPVAL 	R16 U17 ; R16 := U17
	608	[2175]	LOADK    	R17 K127 ; R17 := "archwingWeaponList"
	609	[2175]	GETUPVAL 	R18 U18 ; R18 := U18
	610	[2175]	GETTABLE 	R18 R18 K128 ; R18 := R18["ARCHWINGWEAPONS"]
	611	[2175]	MOVE     	R19 R5 ; R19 := R5
	612	[2175]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	613	[2175]	JMP      	48 ; PC := 48
	614	[2176]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	615	[2176]	EQ       	0 R16 K129 ; if R16 ~= 29.000000 then PC := 624
	616	[2176]	JMP      	624 ; PC := 624
	617	[2177]	GETUPVAL 	R16 U17 ; R16 := U17
	618	[2177]	LOADK    	R17 K127 ; R17 := "archwingWeaponList"
	619	[2177]	GETUPVAL 	R18 U18 ; R18 := U18
	620	[2177]	GETTABLE 	R18 R18 K128 ; R18 := R18["ARCHWINGWEAPONS"]
	621	[2177]	MOVE     	R19 R5 ; R19 := R5
	622	[2177]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	623	[2177]	JMP      	48 ; PC := 48
	624	[2178]	GETTABLE 	R16 R5 K130 ; R16 := R5["CatItemType"]
	625	[2178]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	626	[2178]	GETGLOBAL	R18 K131 ; R18 := 0x079aee84
	627	[2178]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	628	[2178]	TEST     	R16 1 ; if R16 then PC := 642
	629	[2178]	JMP      	642 ; PC := 642
	630	[2178]	GETTABLE 	R16 R5 K130 ; R16 := R5["CatItemType"]
	631	[2178]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	632	[2178]	GETGLOBAL	R18 K132 ; R18 := 0x33a4c7e5
	633	[2178]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	634	[2178]	TEST     	R16 1 ; if R16 then PC := 642
	635	[2178]	JMP      	642 ; PC := 642
	636	[2178]	GETTABLE 	R16 R5 K130 ; R16 := R5["CatItemType"]
	637	[2178]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	638	[2178]	GETGLOBAL	R18 K133 ; R18 := 0x28b75f55
	639	[2178]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	640	[2178]	TEST     	R16 0 ; if not R16 then PC := 649
	641	[2178]	JMP      	649 ; PC := 649
	642	[2179]	GETUPVAL 	R16 U17 ; R16 := U17
	643	[2179]	LOADK    	R17 K134 ; R17 := "materialList"
	644	[2179]	GETUPVAL 	R18 U18 ; R18 := U18
	645	[2179]	GETTABLE 	R18 R18 K135 ; R18 := R18["RESOURCES"]
	646	[2179]	MOVE     	R19 R5 ; R19 := R5
	647	[2179]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	648	[2179]	JMP      	48 ; PC := 48
	649	[2180]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	650	[2180]	EQ       	1 R16 K57 ; if R16 == nil then PC := 665
	651	[2180]	JMP      	665 ; PC := 665
	652	[2180]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	653	[2180]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	654	[2180]	GETUPVAL 	R18 U14 ; R18 := U14
	655	[2180]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	656	[2180]	TEST     	R16 0 ; if not R16 then PC := 665
	657	[2180]	JMP      	665 ; PC := 665
	658	[2181]	GETUPVAL 	R16 U17 ; R16 := U17
	659	[2181]	LOADK    	R17 K136 ; R17 := "enhancementList"
	660	[2181]	GETUPVAL 	R18 U18 ; R18 := U18
	661	[2181]	GETTABLE 	R18 R18 K137 ; R18 := R18["ENHANCEMENTS"]
	662	[2181]	MOVE     	R19 R5 ; R19 := R5
	663	[2181]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	664	[2181]	JMP      	48 ; PC := 48
	665	[2182]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	666	[2182]	EQ       	1 R16 K57 ; if R16 == nil then PC := 681
	667	[2182]	JMP      	681 ; PC := 681
	668	[2182]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	669	[2182]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	670	[2182]	GETUPVAL 	R18 U19 ; R18 := U19
	671	[2182]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	672	[2182]	TEST     	R16 0 ; if not R16 then PC := 681
	673	[2182]	JMP      	681 ; PC := 681
	674	[2183]	GETUPVAL 	R16 U17 ; R16 := U17
	675	[2183]	LOADK    	R17 K138 ; R17 := "avionicsList"
	676	[2183]	GETUPVAL 	R18 U18 ; R18 := U18
	677	[2183]	GETTABLE 	R18 R18 K139 ; R18 := R18["AVIONICS"]
	678	[2183]	MOVE     	R19 R5 ; R19 := R5
	679	[2183]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	680	[2183]	JMP      	48 ; PC := 48
	681	[2184]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	682	[2184]	EQ       	1 R16 K57 ; if R16 == nil then PC := 697
	683	[2184]	JMP      	697 ; PC := 697
	684	[2184]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	685	[2184]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	686	[2184]	GETGLOBAL	R18 K140 ; R18 := gFocusLensType
	687	[2184]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	688	[2184]	TEST     	R16 0 ; if not R16 then PC := 697
	689	[2184]	JMP      	697 ; PC := 697
	690	[2185]	GETUPVAL 	R16 U17 ; R16 := U17
	691	[2185]	LOADK    	R17 K141 ; R17 := "focusLensList"
	692	[2185]	GETUPVAL 	R18 U18 ; R18 := U18
	693	[2185]	GETTABLE 	R18 R18 K142 ; R18 := R18["FOCUS"]
	694	[2185]	MOVE     	R19 R5 ; R19 := R5
	695	[2185]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	696	[2185]	JMP      	48 ; PC := 48
	697	[2186]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	698	[2186]	EQ       	0 R16 K19 ; if R16 ~= 34.000000 then PC := 729
	699	[2186]	JMP      	729 ; PC := 729
	700	[2187]	GETUPVAL 	R16 U8 ; R16 := U8
	701	[2187]	GETUPVAL 	R17 U9 ; R17 := U9
	702	[2187]	GETTABLE 	R17 R17 K58 ; R17 := R17["DECODONATE"]
	703	[2187]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 710
	704	[2187]	JMP      	710 ; PC := 710
	705	[2187]	GETTABLE 	R16 R5 K43 ; R16 := R5["StoreItem"]
	706	[2187]	SELF     	R16 R16 K143 ; R17 := R16; R16 := R16[0x35ddefbe]
	707	[2187]	CALL     	R16 2 2 ; R16 := R16(R17)
	708	[2187]	TEST     	R16 0 ; if not R16 then PC := 48
	709	[2187]	JMP      	48 ; PC := 48
	710	[2188]	GETUPVAL 	R16 U8 ; R16 := U8
	711	[2188]	GETUPVAL 	R17 U9 ; R17 := U9
	712	[2188]	GETTABLE 	R17 R17 K58 ; R17 := R17["DECODONATE"]
	713	[2188]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 719
	714	[2188]	JMP      	719 ; PC := 719
	715	[2188]	GETUPVAL 	R16 U6 ; R16 := U6
	716	[2188]	CALL     	R16 1 2 ; R16 := R16()
	717	[2188]	TEST     	R16 0 ; if not R16 then PC := 722
	718	[2188]	JMP      	722 ; PC := 722
	719	[2189]	GETUPVAL 	R16 U20 ; R16 := U20
	720	[2189]	GETTABLE 	R16 R16 K144 ; R16 := R16["AYATAN"]
	721	[2189]	SETTABLE 	R5 K3 R16 ; R5["Category"] := R16
	722	[2192]	GETUPVAL 	R16 U17 ; R16 := U17
	723	[2192]	LOADK    	R17 K85 ; R17 := "miscList"
	724	[2192]	GETUPVAL 	R18 U18 ; R18 := U18
	725	[2192]	GETTABLE 	R18 R18 K82 ; R18 := R18["MISC"]
	726	[2192]	MOVE     	R19 R5 ; R19 := R5
	727	[2192]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	728	[2193]	JMP      	48 ; PC := 48
	729	[2194]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	730	[2194]	EQ       	0 R16 K145 ; if R16 ~= 37.000000 then PC := 739
	731	[2194]	JMP      	739 ; PC := 739
	732	[2195]	GETUPVAL 	R16 U17 ; R16 := U17
	733	[2195]	LOADK    	R17 K146 ; R17 := "operatorAmpList"
	734	[2195]	GETUPVAL 	R18 U18 ; R18 := U18
	735	[2195]	GETTABLE 	R18 R18 K147 ; R18 := R18["OPERATORAMPS"]
	736	[2195]	MOVE     	R19 R5 ; R19 := R5
	737	[2195]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	738	[2195]	JMP      	48 ; PC := 48
	739	[2196]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	740	[2196]	EQ       	1 R16 K57 ; if R16 == nil then PC := 755
	741	[2196]	JMP      	755 ; PC := 755
	742	[2196]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	743	[2196]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	744	[2196]	GETGLOBAL	R18 K148 ; R18 := gVoidProjectionItemType
	745	[2196]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	746	[2196]	TEST     	R16 0 ; if not R16 then PC := 755
	747	[2196]	JMP      	755 ; PC := 755
	748	[2197]	GETUPVAL 	R16 U17 ; R16 := U17
	749	[2197]	LOADK    	R17 K149 ; R17 := "relicsList"
	750	[2197]	GETUPVAL 	R18 U18 ; R18 := U18
	751	[2197]	GETTABLE 	R18 R18 K150 ; R18 := R18["RELICS"]
	752	[2197]	MOVE     	R19 R5 ; R19 := R5
	753	[2197]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	754	[2197]	JMP      	48 ; PC := 48
	755	[2198]	GETTABLE 	R16 R5 K17 ; R16 := R5["SortCategory"]
	756	[2198]	EQ       	0 R16 K151 ; if R16 ~= 26.000000 then PC := 765
	757	[2198]	JMP      	765 ; PC := 765
	758	[2199]	GETUPVAL 	R16 U17 ; R16 := U17
	759	[2199]	LOADK    	R17 K152 ; R17 := "imprintList"
	760	[2199]	GETUPVAL 	R18 U18 ; R18 := U18
	761	[2199]	GETTABLE 	R18 R18 K153 ; R18 := R18["PETPRINTS"]
	762	[2199]	MOVE     	R19 R5 ; R19 := R5
	763	[2199]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	764	[2199]	JMP      	48 ; PC := 48
	765	[2201]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	766	[2201]	GETGLOBAL	R17 K154 ; R17 := 0x039175db
	767	[2201]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 48
	768	[2201]	JMP      	48 ; PC := 48
	769	[2201]	GETUPVAL 	R16 U8 ; R16 := U8
	770	[2201]	GETUPVAL 	R17 U9 ; R17 := U9
	771	[2201]	GETTABLE 	R17 R17 K34 ; R17 := R17["TREASURE"]
	772	[2201]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 780
	773	[2201]	JMP      	780 ; PC := 780
	774	[2201]	GETTABLE 	R16 R5 K77 ; R16 := R5["Type"]
	775	[2201]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	776	[2201]	GETGLOBAL	R18 K155 ; R18 := gFusionTreasureType
	777	[2201]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	778	[2201]	TEST     	R16 0 ; if not R16 then PC := 48
	779	[2201]	JMP      	48 ; PC := 48
	780	[2202]	GETUPVAL 	R16 U8 ; R16 := U8
	781	[2202]	GETUPVAL 	R17 U9 ; R17 := U9
	782	[2202]	GETTABLE 	R17 R17 K58 ; R17 := R17["DECODONATE"]
	783	[2202]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 803
	784	[2202]	JMP      	803 ; PC := 803
	785	[2202]	GETGLOBAL	R16 K8 ; R16 := 0x7b998233
	786	[2202]	GETTABLE 	R17 R5 K43 ; R17 := R5["StoreItem"]
	787	[2202]	CALL     	R16 2 2 ; R16 := R16(R17)
	788	[2202]	TEST     	R16 1 ; if R16 then PC := 803
	789	[2202]	JMP      	803 ; PC := 803
	790	[2202]	GETTABLE 	R16 R5 K43 ; R16 := R5["StoreItem"]
	791	[2202]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xf2deaf69]
	792	[2202]	GETGLOBAL	R18 K156 ; R18 := gShipDecoStoreItemType
	793	[2202]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	794	[2202]	TEST     	R16 0 ; if not R16 then PC := 803
	795	[2202]	JMP      	803 ; PC := 803
	796	[2203]	GETUPVAL 	R16 U7 ; R16 := U7
	797	[2203]	GETTABLE 	R16 R16 K157 ; R16 := R16[0x3aabed1a]
	798	[2203]	GETTABLE 	R17 R5 K43 ; R17 := R5["StoreItem"]
	799	[2203]	SELF     	R17 R17 K158 ; R18 := R17; R17 := R17[0x656c098f]
	800	[2203]	CALL     	R17 2 0 ; R17,... := R17(R18)
	801	[2203]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	802	[2203]	SETTABLE 	R5 K3 R16 ; R5["Category"] := R16
	803	[2205]	GETUPVAL 	R16 U8 ; R16 := U8
	804	[2205]	GETUPVAL 	R17 U9 ; R17 := U9
	805	[2205]	GETTABLE 	R17 R17 K58 ; R17 := R17["DECODONATE"]
	806	[2205]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 813
	807	[2205]	JMP      	813 ; PC := 813
	808	[2205]	GETTABLE 	R16 R5 K43 ; R16 := R5["StoreItem"]
	809	[2205]	SELF     	R16 R16 K143 ; R17 := R16; R16 := R16[0x35ddefbe]
	810	[2205]	CALL     	R16 2 2 ; R16 := R16(R17)
	811	[2205]	TEST     	R16 0 ; if not R16 then PC := 48
	812	[2205]	JMP      	48 ; PC := 48
	813	[2207]	GETUPVAL 	R16 U17 ; R16 := U17
	814	[2207]	LOADK    	R17 K85 ; R17 := "miscList"
	815	[2207]	GETUPVAL 	R18 U18 ; R18 := U18
	816	[2207]	GETTABLE 	R18 R18 K82 ; R18 := R18["MISC"]
	817	[2207]	MOVE     	R19 R5 ; R19 := R5
	818	[2207]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	819	[2213]	JMP      	48 ; PC := 48
	820	[2215]	JMP      	6 ; PC := 6
	821	[2217]	GETUPVAL 	R16 U3 ; R16 := U3
	822	[2217]	LEN      	R16 R16 ; R16 := # R16
	823	[2217]	EQ       	0 R16 K2 ; if R16 ~= 0.000000 then PC := 1327
	824	[2217]	JMP      	1327 ; PC := 1327
	825	[2217]	GETUPVAL 	R16 U2 ; R16 := U2
	826	[2217]	GETTABLE 	R16 R16 K1 ; R16 := R16["Elements"]
	827	[2217]	LEN      	R16 R16 ; R16 := # R16
	828	[2217]	EQ       	0 R16 K2 ; if R16 ~= 0.000000 then PC := 1327
	829	[2217]	JMP      	1327 ; PC := 1327
	830	[2218]	LOADK    	R16 := 2.000000
	831	[2218]	SETUPVAL 	R16 U0 ; U0 := R16
	832	[2219]	JMP      	1327 ; PC := 1327
	833	[2220]	GETUPVAL 	R16 U0 ; R16 := U0
	834	[2220]	EQ       	0 R16 K61 ; if R16 ~= 2.000000 then PC := 1158
	835	[2220]	JMP      	1158 ; PC := 1158
	836	[2222]	GETUPVAL 	R16 U1 ; R16 := U1
	837	[2222]	LT       	0 R0 R16 ; if R0 >= R16 then PC := 1145
	838	[2222]	JMP      	1145 ; PC := 1145
	839	[2222]	GETUPVAL 	R16 U21 ; R16 := U21
	840	[2222]	LEN      	R16 R16 ; R16 := # R16
	841	[2222]	LT       	1 K2 R16 ; if 0.000000 < R16 then PC := 849
	842	[2222]	JMP      	849 ; PC := 849
	843	[2222]	GETUPVAL 	R16 U22 ; R16 := U22
	844	[2222]	GETUPVAL 	R17 U23 ; R17 := U23
	845	[2222]	GETTABLE 	R17 R17 K1 ; R17 := R17["Elements"]
	846	[2222]	LEN      	R17 R17 ; R17 := # R17
	847	[2222]	LE       	0 R16 R17 ; if R16 > R17 then PC := 1145
	848	[2222]	JMP      	1145 ; PC := 1145
	849	[2223]	GETUPVAL 	R16 U22 ; R16 := U22
	850	[2223]	GETUPVAL 	R17 U23 ; R17 := U23
	851	[2223]	GETTABLE 	R17 R17 K1 ; R17 := R17["Elements"]
	852	[2223]	LEN      	R17 R17 ; R17 := # R17
	853	[2223]	LT       	0 R17 R16 ; if R17 >= R16 then PC := 871
	854	[2223]	JMP      	871 ; PC := 871
	855	[2223]	GETUPVAL 	R16 U21 ; R16 := U21
	856	[2223]	LEN      	R16 R16 ; R16 := # R16
	857	[2223]	LT       	0 K2 R16 ; if 0.000000 >= R16 then PC := 871
	858	[2223]	JMP      	871 ; PC := 871
	859	[2224]	GETGLOBAL	R16 K4 ; R16 := 0x33bdd652
	860	[2224]	GETTABLE 	R16 R16 K5 ; R16 := R16[0x9c1f3b5a]
	861	[2224]	GETUPVAL 	R17 U21 ; R17 := U21
	862	[2224]	CALL     	R16 2 2 ; R16 := R16(R17)
	863	[2224]	SETUPVAL 	R16 U24 ; U24 := R16
	864	[2225]	GETUPVAL 	R16 U25 ; R16 := U25
	865	[2225]	GETUPVAL 	R17 U24 ; R17 := U24
	866	[2225]	GETTABLE 	R17 R17 K107 ; R17 := R17["Name"]
	867	[2225]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	868	[2225]	SETUPVAL 	R16 U23 ; U23 := R16
	869	[2226]	LOADK    	R16 := 1.000000
	870	[2226]	SETUPVAL 	R16 U22 ; U22 := R16
	871	[2229]	LOADK    	R16 := 0.000000
	872	[2230]	LOADK    	R17 := 0.000000
	873	[2232]	GETUPVAL 	R18 U23 ; R18 := U23
	874	[2232]	EQ       	0 R18 K57 ; if R18 ~= nil then PC := 881
	875	[2232]	JMP      	881 ; PC := 881
	876	[2233]	NEWTABLE 	R18 0 1 ; R18 := {}
	877	[2233]	NEWTABLE 	R19 0 0 ; R19 := {}
	878	[2233]	SETTABLE 	R18 K1 R19 ; R18["Elements"] := R19
	879	[2233]	SETUPVAL 	R18 U23 ; U23 := R18
	880	[2233]	JMP      	898 ; PC := 898
	881	[2236]	GETUPVAL 	R18 U23 ; R18 := U23
	882	[2236]	GETTABLE 	R18 R18 K1 ; R18 := R18["Elements"]
	883	[2236]	LEN      	R16 R18 ; R16 := # R18
	884	[2237]	GETGLOBAL	R18 K159 ; R18 := 0x5bced4c4
	885	[2237]	GETTABLE 	R18 R18 K160 ; R18 := R18[0xac1b386a]
	886	[2237]	MOVE     	R19 R16 ; R19 := R16
	887	[2237]	GETUPVAL 	R20 U22 ; R20 := U22
	888	[2237]	GETUPVAL 	R21 U1 ; R21 := U1
	889	[2237]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	890	[2237]	SUB      	R20 R20 R0 ; R20 := R20 - R0
	891	[2237]	SUB      	R20 R20 K0 ; R20 := R20 - 1.000000
	892	[2237]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	893	[2237]	MOVE     	R17 R18 ; R17 := R18
	894	[2239]	GETUPVAL 	R18 U22 ; R18 := U22
	895	[2239]	SUB      	R18 R17 R18 ; R18 := R17 - R18
	896	[2239]	ADD      	R18 R18 K0 ; R18 := R18 + 1.000000
	897	[2239]	ADD      	R0 R0 R18 ; R0 := R0 + R18
	898	[2243]	GETUPVAL 	R18 U8 ; R18 := U8
	899	[2243]	GETUPVAL 	R19 U9 ; R19 := U9
	900	[2243]	GETTABLE 	R19 R19 K58 ; R19 := R19["DECODONATE"]
	901	[2243]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 907
	902	[2243]	JMP      	907 ; PC := 907
	903	[2243]	GETUPVAL 	R18 U6 ; R18 := U6
	904	[2243]	CALL     	R18 1 2 ; R18 := R18()
	905	[2243]	TEST     	R18 0 ; if not R18 then PC := 965
	906	[2243]	JMP      	965 ; PC := 965
	907	[2243]	GETUPVAL 	R18 U24 ; R18 := U24
	908	[2243]	GETTABLE 	R18 R18 K107 ; R18 := R18["Name"]
	909	[2243]	EQ       	0 R18 K85 ; if R18 ~= "miscList" then PC := 965
	910	[2243]	JMP      	965 ; PC := 965
	911	[2244]	NEWTABLE 	R18 0 0 ; R18 := {}
	912	[2245]	GETUPVAL 	R19 U22 ; R19 := U22
	913	[2245]	MOVE     	R20 R17 ; R20 := R17
	914	[2245]	LOADK    	R21 := 1.000000
	915	[2245]	FORPREP  	R19 940 ; R19 -= R21; PC := 940
	916	[2246]	GETUPVAL 	R23 U23 ; R23 := U23
	917	[2246]	GETTABLE 	R23 R23 K1 ; R23 := R23["Elements"]
	918	[2246]	GETTABLE 	R23 R23 R22 ; R23 := R23[R22]
	919	[2247]	GETTABLE 	R24 R23 K3 ; R24 := R23["Category"]
	920	[2248]	GETUPVAL 	R25 U6 ; R25 := U6
	921	[2248]	CALL     	R25 1 2 ; R25 := R25()
	922	[2248]	TEST     	R25 0 ; if not R25 then PC := 930
	923	[2248]	JMP      	930 ; PC := 930
	924	[2248]	GETUPVAL 	R25 U20 ; R25 := U20
	925	[2248]	GETTABLE 	R25 R25 K144 ; R25 := R25["AYATAN"]
	926	[2248]	EQ       	1 R24 R25 ; if R24 == R25 then PC := 930
	927	[2248]	JMP      	930 ; PC := 930
	928	[2249]	GETUPVAL 	R25 U24 ; R25 := U24
	929	[2249]	GETTABLE 	R24 R25 K3 ; R24 := R25["Category"]
	930	[2251]	GETTABLE 	R25 R18 R24 ; R25 := R18[R24]
	931	[2251]	EQ       	0 R25 K57 ; if R25 ~= nil then PC := 935
	932	[2251]	JMP      	935 ; PC := 935
	933	[2252]	NEWTABLE 	R25 0 0 ; R25 := {}
	934	[2252]	SETTABLE 	R18 R24 R25 ; R18[R24] := R25
	935	[2255]	GETGLOBAL	R25 K4 ; R25 := 0x33bdd652
	936	[2255]	GETTABLE 	R25 R25 K161 ; R25 := R25[0x23d5322f]
	937	[2255]	GETTABLE 	R26 R18 R24 ; R26 := R18[R24]
	938	[2255]	MOVE     	R27 R23 ; R27 := R23
	939	[2255]	CALL     	R25 3 1 ; R25(R26,R27)
	940	[2245]	FORLOOP  	R19 916 ; R19 += R21; if R19 <= R20 then begin PC := 916; R22 := R19 end
	941	[2258]	GETUPVAL 	R25 U16 ; R25 := U16
	942	[2258]	GETTABLE 	R25 R25 K64 ; R25 := R25[0x06d055f9]
	943	[2258]	GETUPVAL 	R26 U22 ; R26 := U22
	944	[2258]	EQ       	1 R26 K0 ; if R26 == 1.000000 then PC := 947
	945	[2258]	JMP      	947 ; PC := 947
	946	[2258]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 947
	947	[2258]	OP_LOADBOOL	R26 1 0 ; R26 := true
	948	[2258]	LOADK    	R27 := 0.000000
	949	[2258]	LOADNIL  	R28 R28 ; R28 := nil
	950	[2258]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	951	[2260]	GETGLOBAL	R26 K162 ; R26 := 0xcfc01047
	952	[2260]	MOVE     	R27 R18 ; R27 := R18
	953	[2260]	CALL     	R26 2 4 ; R26,R27,R28 := R26(R27)
	954	[2260]	JMP      	960 ; PC := 960
	955	[2261]	GETUPVAL 	R31 U26 ; R31 := U26
	956	[2261]	MOVE     	R32 R30 ; R32 := R30
	957	[2261]	MOVE     	R33 R29 ; R33 := R29
	958	[2261]	MOVE     	R34 R25 ; R34 := R25
	959	[2261]	CALL     	R31 4 1 ; R31(R32,R33,R34)
	960	[2260]	TFORLOOP 	R26 2 ; R29,R30 := R26(R27,R28); if R29 ~= nil then begin PC = 955; R28 := R29 end
	961	[2261]	JMP      	955 ; PC := 955
	962	[2263]	ADD      	R31 R17 K0 ; R31 := R17 + 1.000000
	963	[2263]	SETUPVAL 	R31 U22 ; U22 := R31
	964	[2263]	JMP      	836 ; PC := 836
	965	[2264]	GETUPVAL 	R31 U8 ; R31 := U8
	966	[2264]	GETUPVAL 	R32 U9 ; R32 := U9
	967	[2264]	GETTABLE 	R32 R32 K163 ; R32 := R32["FISH"]
	968	[2264]	EQ       	0 R31 R32 ; if R31 ~= R32 then PC := 1058
	969	[2264]	JMP      	1058 ; PC := 1058
	970	[2264]	GETUPVAL 	R31 U24 ; R31 := U24
	971	[2264]	GETTABLE 	R31 R31 K107 ; R31 := R31["Name"]
	972	[2264]	EQ       	0 R31 K85 ; if R31 ~= "miscList" then PC := 1058
	973	[2264]	JMP      	1058 ; PC := 1058
	974	[2265]	NEWTABLE 	R31 0 0 ; R31 := {}
	975	[2266]	NEWTABLE 	R32 0 0 ; R32 := {}
	976	[2267]	NEWTABLE 	R33 0 0 ; R33 := {}
	977	[2268]	GETUPVAL 	R34 U22 ; R34 := U22
	978	[2268]	MOVE     	R35 R17 ; R35 := R17
	979	[2268]	LOADK    	R36 := 1.000000
	980	[2268]	FORPREP  	R34 1026 ; R34 -= R36; PC := 1026
	981	[2269]	LOADNIL  	R38 R38 ; R38 := nil
	982	[2270]	GETGLOBAL	R39 K8 ; R39 := 0x7b998233
	983	[2270]	GETUPVAL 	R40 U23 ; R40 := U23
	984	[2270]	GETTABLE 	R40 R40 K1 ; R40 := R40["Elements"]
	985	[2270]	GETTABLE 	R40 R40 R37 ; R40 := R40[R37]
	986	[2270]	GETTABLE 	R40 R40 K43 ; R40 := R40["StoreItem"]
	987	[2270]	CALL     	R39 2 2 ; R39 := R39(R40)
	988	[2270]	TEST     	R39 1 ; if R39 then PC := 1026
	989	[2270]	JMP      	1026 ; PC := 1026
	990	[2271]	GETUPVAL 	R39 U23 ; R39 := U23
	991	[2271]	GETTABLE 	R39 R39 K1 ; R39 := R39["Elements"]
	992	[2271]	GETTABLE 	R39 R39 R37 ; R39 := R39[R37]
	993	[2271]	GETTABLE 	R39 R39 K43 ; R39 := R39["StoreItem"]
	994	[2271]	SELF     	R39 R39 K15 ; R40 := R39; R39 := R39[0xc399f522]
	995	[2271]	CALL     	R39 2 2 ; R39 := R39(R40)
	996	[2271]	MOVE     	R38 R39 ; R38 := R39
	997	[2272]	EQ       	0 R38 K2 ; if R38 ~= 0.000000 then PC := 1007
	998	[2272]	JMP      	1007 ; PC := 1007
	999	[2273]	GETGLOBAL	R39 K4 ; R39 := 0x33bdd652
	1000	[2273]	GETTABLE 	R39 R39 K161 ; R39 := R39[0x23d5322f]
	1001	[2273]	MOVE     	R40 R31 ; R40 := R31
	1002	[2273]	GETUPVAL 	R41 U23 ; R41 := U23
	1003	[2273]	GETTABLE 	R41 R41 K1 ; R41 := R41["Elements"]
	1004	[2273]	GETTABLE 	R41 R41 R37 ; R41 := R41[R37]
	1005	[2273]	CALL     	R39 3 1 ; R39(R40,R41)
	1006	[2273]	JMP      	1026 ; PC := 1026
	1007	[2274]	EQ       	0 R38 K0 ; if R38 ~= 1.000000 then PC := 1017
	1008	[2274]	JMP      	1017 ; PC := 1017
	1009	[2275]	GETGLOBAL	R39 K4 ; R39 := 0x33bdd652
	1010	[2275]	GETTABLE 	R39 R39 K161 ; R39 := R39[0x23d5322f]
	1011	[2275]	MOVE     	R40 R32 ; R40 := R32
	1012	[2275]	GETUPVAL 	R41 U23 ; R41 := U23
	1013	[2275]	GETTABLE 	R41 R41 K1 ; R41 := R41["Elements"]
	1014	[2275]	GETTABLE 	R41 R41 R37 ; R41 := R41[R37]
	1015	[2275]	CALL     	R39 3 1 ; R39(R40,R41)
	1016	[2275]	JMP      	1026 ; PC := 1026
	1017	[2276]	EQ       	0 R38 K61 ; if R38 ~= 2.000000 then PC := 1026
	1018	[2276]	JMP      	1026 ; PC := 1026
	1019	[2277]	GETGLOBAL	R39 K4 ; R39 := 0x33bdd652
	1020	[2277]	GETTABLE 	R39 R39 K161 ; R39 := R39[0x23d5322f]
	1021	[2277]	MOVE     	R40 R33 ; R40 := R33
	1022	[2277]	GETUPVAL 	R41 U23 ; R41 := U23
	1023	[2277]	GETTABLE 	R41 R41 K1 ; R41 := R41["Elements"]
	1024	[2277]	GETTABLE 	R41 R41 R37 ; R41 := R41[R37]
	1025	[2277]	CALL     	R39 3 1 ; R39(R40,R41)
	1026	[2268]	FORLOOP  	R34 981 ; R34 += R36; if R34 <= R35 then begin PC := 981; R37 := R34 end
	1027	[2281]	GETUPVAL 	R39 U16 ; R39 := U16
	1028	[2281]	GETTABLE 	R39 R39 K64 ; R39 := R39[0x06d055f9]
	1029	[2281]	GETUPVAL 	R40 U22 ; R40 := U22
	1030	[2281]	EQ       	1 R40 K0 ; if R40 == 1.000000 then PC := 1033
	1031	[2281]	JMP      	1033 ; PC := 1033
	1032	[2281]	OP_LOADBOOL	R40 0 1 ; R40 := false; PC := 1033
	1033	[2281]	OP_LOADBOOL	R40 1 0 ; R40 := true
	1034	[2281]	LOADK    	R41 := 0.000000
	1035	[2281]	LOADNIL  	R42 R42 ; R42 := nil
	1036	[2281]	CALL     	R39 4 2 ; R39 := R39(R40,R41,R42)
	1037	[2282]	GETUPVAL 	R40 U26 ; R40 := U26
	1038	[2282]	MOVE     	R41 R31 ; R41 := R31
	1039	[2282]	GETUPVAL 	R42 U27 ; R42 := U27
	1040	[2282]	GETTABLE 	R42 R42 K164 ; R42 := R42["FISH_SMALL"]
	1041	[2282]	MOVE     	R43 R39 ; R43 := R39
	1042	[2282]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	1043	[2283]	GETUPVAL 	R40 U26 ; R40 := U26
	1044	[2283]	MOVE     	R41 R32 ; R41 := R32
	1045	[2283]	GETUPVAL 	R42 U27 ; R42 := U27
	1046	[2283]	GETTABLE 	R42 R42 K165 ; R42 := R42["FISH_MEDIUM"]
	1047	[2283]	MOVE     	R43 R39 ; R43 := R39
	1048	[2283]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	1049	[2284]	GETUPVAL 	R40 U26 ; R40 := U26
	1050	[2284]	MOVE     	R41 R33 ; R41 := R33
	1051	[2284]	GETUPVAL 	R42 U27 ; R42 := U27
	1052	[2284]	GETTABLE 	R42 R42 K166 ; R42 := R42["FISH_LARGE"]
	1053	[2284]	MOVE     	R43 R39 ; R43 := R39
	1054	[2284]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	1055	[2285]	ADD      	R40 R17 K0 ; R40 := R17 + 1.000000
	1056	[2285]	SETUPVAL 	R40 U22 ; U22 := R40
	1057	[2285]	JMP      	836 ; PC := 836
	1058	[2286]	GETUPVAL 	R40 U8 ; R40 := U8
	1059	[2286]	GETUPVAL 	R41 U9 ; R41 := U9
	1060	[2286]	GETTABLE 	R41 R41 K167 ; R41 := R41["SYNDDONATE"]
	1061	[2286]	EQ       	0 R40 R41 ; if R40 ~= R41 then PC := 1107
	1062	[2286]	JMP      	1107 ; PC := 1107
	1063	[2287]	NEWTABLE 	R40 0 0 ; R40 := {}
	1064	[2288]	GETUPVAL 	R41 U22 ; R41 := U22
	1065	[2288]	MOVE     	R42 R17 ; R42 := R17
	1066	[2288]	LOADK    	R43 := 1.000000
	1067	[2288]	FORPREP  	R41 1097 ; R41 -= R43; PC := 1097
	1068	[2289]	GETUPVAL 	R45 U23 ; R45 := U23
	1069	[2289]	GETTABLE 	R45 R45 K1 ; R45 := R45["Elements"]
	1070	[2289]	GETTABLE 	R45 R45 R44 ; R45 := R45[R44]
	1071	[2290]	GETUPVAL 	R46 U28 ; R46 := U28
	1072	[2290]	GETTABLE 	R46 R46 K168 ; R46 := R46[0x8a36a81b]
	1073	[2290]	GETUPVAL 	R47 U10 ; R47 := U10
	1074	[2290]	GETUPVAL 	R48 U11 ; R48 := U11
	1075	[2290]	GETTABLE 	R49 R45 K43 ; R49 := R45["StoreItem"]
	1076	[2290]	GETUPVAL 	R50 U29 ; R50 := U29
	1077	[2290]	GETTABLE 	R50 R50 K169 ; R50 := R50["PurchasedItems"]
	1078	[2290]	CALL     	R46 5 2 ; R46 := R46(R47,R48,R49,R50)
	1079	[2290]	SETTABLE 	R45 K56 R46 ; R45["Count"] := R46
	1080	[2291]	GETGLOBAL	R46 K8 ; R46 := 0x7b998233
	1081	[2291]	GETTABLE 	R47 R45 K77 ; R47 := R45["Type"]
	1082	[2291]	CALL     	R46 2 2 ; R46 := R46(R47)
	1083	[2291]	TEST     	R46 1 ; if R46 then PC := 1092
	1084	[2291]	JMP      	1092 ; PC := 1092
	1085	[2291]	GETTABLE 	R46 R45 K77 ; R46 := R45["Type"]
	1086	[2291]	GETUPVAL 	R47 U30 ; R47 := U30
	1087	[2291]	EQ       	0 R46 R47 ; if R46 ~= R47 then PC := 1092
	1088	[2291]	JMP      	1092 ; PC := 1092
	1089	[2291]	GETTABLE 	R46 R45 K56 ; R46 := R45["Count"]
	1090	[2291]	LT       	0 K2 R46 ; if 0.000000 >= R46 then PC := 1097
	1091	[2291]	JMP      	1097 ; PC := 1097
	1092	[2293]	GETGLOBAL	R46 K4 ; R46 := 0x33bdd652
	1093	[2293]	GETTABLE 	R46 R46 K161 ; R46 := R46[0x23d5322f]
	1094	[2293]	MOVE     	R47 R40 ; R47 := R40
	1095	[2293]	MOVE     	R48 R45 ; R48 := R45
	1096	[2293]	CALL     	R46 3 1 ; R46(R47,R48)
	1097	[2288]	FORLOOP  	R41 1068 ; R41 += R43; if R41 <= R42 then begin PC := 1068; R44 := R41 end
	1098	[2296]	LOADK    	R46 := 0.000000
	1099	[2297]	GETUPVAL 	R47 U26 ; R47 := U26
	1100	[2297]	MOVE     	R48 R40 ; R48 := R40
	1101	[2297]	GETUPVAL 	R49 U31 ; R49 := U31
	1102	[2297]	MOVE     	R50 R46 ; R50 := R46
	1103	[2297]	CALL     	R47 4 1 ; R47(R48,R49,R50)
	1104	[2298]	ADD      	R47 R17 K0 ; R47 := R17 + 1.000000
	1105	[2298]	SETUPVAL 	R47 U22 ; U22 := R47
	1106	[2298]	JMP      	836 ; PC := 836
	1107	[2300]	NEWTABLE 	R47 0 0 ; R47 := {}
	1108	[2301]	GETUPVAL 	R48 U22 ; R48 := U22
	1109	[2301]	MOVE     	R49 R17 ; R49 := R17
	1110	[2301]	LOADK    	R50 := 1.000000
	1111	[2301]	FORPREP  	R48 1119 ; R48 -= R50; PC := 1119
	1112	[2302]	GETGLOBAL	R52 K4 ; R52 := 0x33bdd652
	1113	[2302]	GETTABLE 	R52 R52 K161 ; R52 := R52[0x23d5322f]
	1114	[2302]	MOVE     	R53 R47 ; R53 := R47
	1115	[2302]	GETUPVAL 	R54 U23 ; R54 := U23
	1116	[2302]	GETTABLE 	R54 R54 K1 ; R54 := R54["Elements"]
	1117	[2302]	GETTABLE 	R54 R54 R51 ; R54 := R54[R51]
	1118	[2302]	CALL     	R52 3 1 ; R52(R53,R54)
	1119	[2301]	FORLOOP  	R48 1112 ; R48 += R50; if R48 <= R49 then begin PC := 1112; R51 := R48 end
	1120	[2305]	LOADK    	R52 := 0.000000
	1121	[2306]	GETUPVAL 	R53 U24 ; R53 := U24
	1122	[2306]	GETTABLE 	R53 R53 K170 ; R53 := R53["Bin"]
	1123	[2306]	EQ       	1 R53 K57 ; if R53 == nil then PC := 1127
	1124	[2306]	JMP      	1127 ; PC := 1127
	1125	[2307]	GETUPVAL 	R53 U24 ; R53 := U24
	1126	[2307]	GETTABLE 	R52 R53 K170 ; R52 := R53["Bin"]
	1127	[2309]	GETUPVAL 	R53 U26 ; R53 := U26
	1128	[2309]	MOVE     	R54 R47 ; R54 := R47
	1129	[2309]	GETUPVAL 	R55 U24 ; R55 := U24
	1130	[2309]	GETTABLE 	R55 R55 K3 ; R55 := R55["Category"]
	1131	[2309]	GETUPVAL 	R56 U16 ; R56 := U16
	1132	[2309]	GETTABLE 	R56 R56 K64 ; R56 := R56[0x06d055f9]
	1133	[2309]	GETUPVAL 	R57 U22 ; R57 := U22
	1134	[2309]	EQ       	1 R57 K0 ; if R57 == 1.000000 then PC := 1137
	1135	[2309]	JMP      	1137 ; PC := 1137
	1136	[2309]	OP_LOADBOOL	R57 0 1 ; R57 := false; PC := 1137
	1137	[2309]	OP_LOADBOOL	R57 1 0 ; R57 := true
	1138	[2309]	MOVE     	R58 R52 ; R58 := R52
	1139	[2309]	LOADNIL  	R59 R59 ; R59 := nil
	1140	[2309]	CALL     	R56 4 0 ; R56,... := R56(R57,R58,R59)
	1141	[2309]	CALL     	R53 0 1 ; R53(R54,...)
	1142	[2310]	ADD      	R53 R17 K0 ; R53 := R17 + 1.000000
	1143	[2310]	SETUPVAL 	R53 U22 ; U22 := R53
	1144	[2311]	JMP      	836 ; PC := 836
	1145	[2314]	GETUPVAL 	R53 U21 ; R53 := U21
	1146	[2314]	LEN      	R53 R53 ; R53 := # R53
	1147	[2314]	EQ       	0 R53 K2 ; if R53 ~= 0.000000 then PC := 1327
	1148	[2314]	JMP      	1327 ; PC := 1327
	1149	[2314]	GETUPVAL 	R53 U22 ; R53 := U22
	1150	[2314]	GETUPVAL 	R54 U23 ; R54 := U23
	1151	[2314]	GETTABLE 	R54 R54 K1 ; R54 := R54["Elements"]
	1152	[2314]	LEN      	R54 R54 ; R54 := # R54
	1153	[2314]	LT       	0 R54 R53 ; if R54 >= R53 then PC := 1327
	1154	[2314]	JMP      	1327 ; PC := 1327
	1155	[2315]	LOADK    	R53 := 3.000000
	1156	[2315]	SETUPVAL 	R53 U0 ; U0 := R53
	1157	[2316]	JMP      	1327 ; PC := 1327
	1158	[2319]	GETUPVAL 	R53 U29 ; R53 := U29
	1159	[2319]	GETTABLE 	R53 R53 K171 ; R53 := R53["mSortBy"]
	1160	[2319]	EQ       	0 R53 K57 ; if R53 ~= nil then PC := 1226
	1161	[2319]	JMP      	1226 ; PC := 1226
	1162	[2319]	GETGLOBAL	R53 K8 ; R53 := 0x7b998233
	1163	[2319]	GETUPVAL 	R54 U10 ; R54 := U10
	1164	[2319]	CALL     	R53 2 2 ; R53 := R53(R54)
	1165	[2319]	TEST     	R53 1 ; if R53 then PC := 1226
	1166	[2319]	JMP      	1226 ; PC := 1226
	1167	[2320]	GETGLOBAL	R53 K21 ; R53 := 0xae91e43b
	1168	[2320]	SELF     	R53 R53 K172 ; R54 := R53; R53 := R53[0x492f9da2]
	1169	[2320]	CALL     	R53 2 2 ; R53 := R53(R54)
	1170	[2321]	GETUPVAL 	R54 U10 ; R54 := U10
	1171	[2321]	SELF     	R54 R54 K173 ; R55 := R54; R54 := R54[0xb6b7ca1e]
	1172	[2321]	MOVE     	R56 R53 ; R56 := R53
	1173	[2321]	CALL     	R54 3 2 ; R54 := R54(R55,R56)
	1174	[2322]	GETUPVAL 	R55 U8 ; R55 := U8
	1175	[2322]	GETUPVAL 	R56 U9 ; R56 := U9
	1176	[2322]	GETTABLE 	R56 R56 K58 ; R56 := R56["DECODONATE"]
	1177	[2322]	EQ       	1 R55 R56 ; if R55 == R56 then PC := 1184
	1178	[2322]	JMP      	1184 ; PC := 1184
	1179	[2322]	GETUPVAL 	R55 U8 ; R55 := U8
	1180	[2322]	GETUPVAL 	R56 U9 ; R56 := U9
	1181	[2322]	GETTABLE 	R56 R56 K59 ; R56 := R56["RESDONATE"]
	1182	[2322]	EQ       	0 R55 R56 ; if R55 ~= R56 then PC := 1190
	1183	[2322]	JMP      	1190 ; PC := 1190
	1184	[2324]	LOADK    	R54 K174 ; R54 := "COUNT"
	1185	[2325]	GETUPVAL 	R55 U29 ; R55 := U29
	1186	[2325]	SELF     	R55 R55 K175 ; R56 := R55; R55 := R55[0x60125a4f]
	1187	[2325]	MOVE     	R57 R54 ; R57 := R54
	1188	[2325]	CALL     	R55 3 1 ; R55(R56,R57)
	1189	[2325]	JMP      	1226 ; PC := 1226
	1190	[2326]	GETUPVAL 	R55 U8 ; R55 := U8
	1191	[2326]	GETUPVAL 	R56 U9 ; R56 := U9
	1192	[2326]	GETTABLE 	R56 R56 K167 ; R56 := R56["SYNDDONATE"]
	1193	[2326]	EQ       	1 R55 R56 ; if R55 == R56 then PC := 1226
	1194	[2326]	JMP      	1226 ; PC := 1226
	1195	[2328]	OP_LOADBOOL	R55 0 0 ; R55 := false
	1196	[2330]	LOADK    	R56 := 1.000000
	1197	[2330]	GETUPVAL 	R57 U29 ; R57 := U29
	1198	[2330]	GETTABLE 	R57 R57 K176 ; R57 := R57["mSortMenu"]
	1199	[2330]	SELF     	R57 R57 K177 ; R58 := R57; R57 := R57[0x5fbddc1a]
	1200	[2330]	CALL     	R57 2 2 ; R57 := R57(R58)
	1201	[2330]	LOADK    	R58 := 1.000000
	1202	[2330]	FORPREP  	R56 1218 ; R56 -= R58; PC := 1218
	1203	[2331]	GETUPVAL 	R60 U29 ; R60 := U29
	1204	[2331]	GETTABLE 	R60 R60 K176 ; R60 := R60["mSortMenu"]
	1205	[2331]	SELF     	R60 R60 K178 ; R61 := R60; R60 := R60[0x5465f8f3]
	1206	[2331]	MOVE     	R62 R59 ; R62 := R59
	1207	[2331]	CALL     	R60 3 2 ; R60 := R60(R61,R62)
	1208	[2332]	GETGLOBAL	R61 K8 ; R61 := 0x7b998233
	1209	[2332]	MOVE     	R62 R60 ; R62 := R60
	1210	[2332]	CALL     	R61 2 2 ; R61 := R61(R62)
	1211	[2332]	TEST     	R61 1 ; if R61 then PC := 1218
	1212	[2332]	JMP      	1218 ; PC := 1218
	1213	[2332]	GETTABLE 	R61 R60 K179 ; R61 := R60["SortId"]
	1214	[2332]	EQ       	0 R61 R54 ; if R61 ~= R54 then PC := 1218
	1215	[2332]	JMP      	1218 ; PC := 1218
	1216	[2333]	OP_LOADBOOL	R55 1 0 ; R55 := true
	1217	[2335]	JMP      	1219 ; PC := 1219
	1218	[2330]	FORLOOP  	R56 1203 ; R56 += R58; if R56 <= R57 then begin PC := 1203; R59 := R56 end
	1219	[2339]	TEST     	R55 1 ; if R55 then PC := 1222
	1220	[2339]	JMP      	1222 ; PC := 1222
	1221	[2340]	LOADK    	R54 K180 ; R54 := "NAME"
	1222	[2342]	GETUPVAL 	R61 U29 ; R61 := U29
	1223	[2342]	SELF     	R61 R61 K175 ; R62 := R61; R61 := R61[0x60125a4f]
	1224	[2342]	MOVE     	R63 R54 ; R63 := R54
	1225	[2342]	CALL     	R61 3 1 ; R61(R62,R63)
	1226	[2346]	GETUPVAL 	R61 U18 ; R61 := U18
	1227	[2346]	GETTABLE 	R61 R61 K181 ; R61 := R61["ALL"]
	1228	[2347]	GETGLOBAL	R62 K37 ; R62 := _T
	1229	[2347]	GETTABLE 	R62 R62 K182 ; R62 := R62["InvTest_CatToSelect"]
	1230	[2347]	EQ       	1 R62 K57 ; if R62 == nil then PC := 1240
	1231	[2347]	JMP      	1240 ; PC := 1240
	1232	[2348]	GETGLOBAL	R62 K37 ; R62 := _T
	1233	[2348]	GETTABLE 	R62 R62 K182 ; R62 := R62["InvTest_CatToSelect"]
	1234	[2348]	EQ       	0 R62 K94 ; if R62 ~= "LICH" then PC := 1238
	1235	[2348]	JMP      	1238 ; PC := 1238
	1236	[2349]	GETUPVAL 	R62 U18 ; R62 := U18
	1237	[2349]	GETTABLE 	R61 R62 K94 ; R61 := R62["LICH"]
	1238	[2351]	GETGLOBAL	R62 K37 ; R62 := _T
	1239	[2351]	SETTABLE 	R62 K182 K57 ; R62["InvTest_CatToSelect"] := nil
	1240	[2353]	GETUPVAL 	R62 U29 ; R62 := U29
	1241	[2353]	SETTABLE 	R62 K183 R61 ; R62["mFilterBy"] := R61
	1242	[2354]	GETUPVAL 	R62 U29 ; R62 := U29
	1243	[2354]	SELF     	R62 R62 K184 ; R63 := R62; R62 := R62[0x71e9ac81]
	1244	[2374]	CLOSURE  	R64 0 ; R64 := closure(Function #1)
	1245	[2374]	GETUPVAL 	R0 U32 ; R0 := U32
	1246	[2374]	GETUPVAL 	R0 U33 ; R0 := U33
	1247	[2374]	GETUPVAL 	R0 U34 ; R0 := U34
	1248	[2374]	GETUPVAL 	R0 U8 ; R0 := U8
	1249	[2374]	GETUPVAL 	R0 U9 ; R0 := U9
	1250	[2374]	GETUPVAL 	R0 U35 ; R0 := U35
	1251	[2374]	GETUPVAL 	R0 U29 ; R0 := U29
	1252	[2374]	OP_LOADBOOL	R65 1 0 ; R65 := true
	1253	[2354]	CALL     	R62 4 1 ; R62(R63,R64,R65)
	1254	[2375]	GETGLOBAL	R62 K21 ; R62 := 0xae91e43b
	1255	[2375]	SELF     	R62 R62 K185 ; R63 := R62; R62 := R62[0xaade900e]
	1256	[2375]	LOADK    	R64 K186 ; R64 := "SearchAndSort.SearchBox"
	1257	[2375]	LOADK    	R65 := 11.000000
	1258	[2375]	OP_LOADBOOL	R66 1 0 ; R66 := true
	1259	[2375]	CALL     	R62 5 1 ; R62(R63,R64,R65,R66)
	1260	[2376]	GETGLOBAL	R62 K21 ; R62 := 0xae91e43b
	1261	[2376]	SELF     	R62 R62 K185 ; R63 := R62; R62 := R62[0xaade900e]
	1262	[2376]	GETUPVAL 	R64 U29 ; R64 := U29
	1263	[2376]	GETTABLE 	R64 R64 K187 ; R64 := R64["mCategoryClipName"]
	1264	[2376]	LOADK    	R65 := 11.000000
	1265	[2376]	OP_LOADBOOL	R66 1 0 ; R66 := true
	1266	[2376]	CALL     	R62 5 1 ; R62(R63,R64,R65,R66)
	1267	[2377]	GETGLOBAL	R62 K21 ; R62 := 0xae91e43b
	1268	[2377]	SELF     	R62 R62 K188 ; R63 := R62; R62 := R62[0x67bc869f]
	1269	[2377]	GETUPVAL 	R64 U29 ; R64 := U29
	1270	[2377]	GETTABLE 	R64 R64 K189 ; R64 := R64["mSortClipName"]
	1271	[2377]	LOADK    	R65 := 10.000000
	1272	[2377]	LOADK    	R66 := 100.000000
	1273	[2377]	CALL     	R62 5 1 ; R62(R63,R64,R65,R66)
	1274	[2379]	GETUPVAL 	R62 U8 ; R62 := U8
	1275	[2379]	GETUPVAL 	R63 U9 ; R63 := U9
	1276	[2379]	GETTABLE 	R63 R63 K163 ; R63 := R63["FISH"]
	1277	[2379]	EQ       	0 R62 R63 ; if R62 ~= R63 then PC := 1316
	1278	[2379]	JMP      	1316 ; PC := 1316
	1279	[2379]	GETGLOBAL	R62 K37 ; R62 := _T
	1280	[2379]	GETTABLE 	R62 R62 K190 ; R62 := R62["InventorySelection"]
	1281	[2379]	EQ       	1 R62 K57 ; if R62 == nil then PC := 1316
	1282	[2379]	JMP      	1316 ; PC := 1316
	1283	[2380]	GETGLOBAL	R62 K37 ; R62 := _T
	1284	[2380]	GETTABLE 	R62 R62 K190 ; R62 := R62["InventorySelection"]
	1285	[2380]	LEN      	R62 R62 ; R62 := # R62
	1286	[2381]	LT       	0 K2 R62 ; if 0.000000 >= R62 then PC := 1316
	1287	[2381]	JMP      	1316 ; PC := 1316
	1288	[2382]	GETGLOBAL	R63 K191 ; R63 := 0xc8802016
	1289	[2382]	GETUPVAL 	R64 U29 ; R64 := U29
	1290	[2382]	GETTABLE 	R64 R64 K192 ; R64 := R64["mElements"]
	1291	[2382]	CALL     	R63 2 4 ; R63,R64,R65 := R63(R64)
	1292	[2382]	JMP      	1314 ; PC := 1314
	1293	[2383]	LOADK    	R68 := 1.000000
	1294	[2383]	MOVE     	R69 R62 ; R69 := R62
	1295	[2383]	LOADK    	R70 := 1.000000
	1296	[2383]	FORPREP  	R68 1313 ; R68 -= R70; PC := 1313
	1297	[2384]	GETTABLE 	R72 R67 K77 ; R72 := R67["Type"]
	1298	[2384]	GETGLOBAL	R73 K37 ; R73 := _T
	1299	[2384]	GETTABLE 	R73 R73 K190 ; R73 := R73["InventorySelection"]
	1300	[2384]	GETTABLE 	R73 R73 R71 ; R73 := R73[R71]
	1301	[2384]	GETTABLE 	R73 R73 K193 ; R73 := R73["CountedItem"]
	1302	[2384]	GETTABLE 	R73 R73 K10 ; R73 := R73["mItemType"]
	1303	[2384]	EQ       	0 R72 R73 ; if R72 ~= R73 then PC := 1313
	1304	[2384]	JMP      	1313 ; PC := 1313
	1305	[2385]	GETUPVAL 	R72 U36 ; R72 := U36
	1306	[2385]	MOVE     	R73 R67 ; R73 := R67
	1307	[2385]	OP_LOADBOOL	R74 0 0 ; R74 := false
	1308	[2385]	GETGLOBAL	R75 K37 ; R75 := _T
	1309	[2385]	GETTABLE 	R75 R75 K190 ; R75 := R75["InventorySelection"]
	1310	[2385]	GETTABLE 	R75 R75 R71 ; R75 := R75[R71]
	1311	[2385]	GETTABLE 	R75 R75 K194 ; R75 := R75["NumSelected"]
	1312	[2385]	CALL     	R72 4 1 ; R72(R73,R74,R75)
	1313	[2383]	FORLOOP  	R68 1297 ; R68 += R70; if R68 <= R69 then begin PC := 1297; R71 := R68 end
	1314	[2382]	TFORLOOP 	R63 2 ; R66,R67 := R63(R64,R65); if R66 ~= nil then begin PC = 1293; R65 := R66 end
	1315	[2387]	JMP      	1293 ; PC := 1293
	1316	[2391]	GETUPVAL 	R72 U37 ; R72 := U37
	1317	[2391]	SELF     	R72 R72 K195 ; R73 := R72; R72 := R72[0x46610c50]
	1318	[2391]	OP_LOADBOOL	R74 0 0 ; R74 := false
	1319	[2391]	CALL     	R72 3 1 ; R72(R73,R74)
	1320	[2393]	LOADNIL  	R72 R72 ; R72 := nil
	1321	[2393]	SETUPVAL 	R72 U0 ; U0 := R72
	1322	[2394]	NEWTABLE 	R72 0 0 ; R72 := {}
	1323	[2394]	SETUPVAL 	R72 U25 ; U25 := R72
	1324	[2395]	GETGLOBAL	R72 K196 ; R72 := 0x3d106989
	1325	[2395]	LOADK    	R73 K197 ; R73 := "PopulateGrid complete"
	1326	[2395]	CALL     	R72 2 1 ; R72(R73)
	1327	[2397]	RETURN   	R0 1 ; return 

function #43 <?:2399,2540> (724 instructions, 2896 bytes at 0000021123071F10)
0 params, 25 slots, 20 upvalues, 0 locals, 83 constants, 2 functions
	1	[2400]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[2400]	LOADK    	R1 K1 ; R1 := "PopulateGrid()"
	3	[2400]	CALL     	R0 2 1 ; R0(R1)
	4	[2401]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[2401]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x7c09c373]
	6	[2401]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[2401]	OP_LOADBOOL	R3 1 0 ; R3 := true
	8	[2401]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	9	[2403]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[2403]	GETUPVAL 	R1 U2 ; R1 := U2
	11	[2403]	GETTABLE 	R1 R1 K3 ; R1 := R1["ENEMIES"]
	12	[2403]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 17
	13	[2403]	JMP      	17 ; PC := 17
	14	[2404]	GETUPVAL 	R0 U3 ; R0 := U3
	15	[2404]	CALL     	R0 1 1 ; R0()
	16	[2404]	JMP      	691 ; PC := 691
	17	[2406]	OP_LOADBOOL	R0 1 0 ; R0 := true
	18	[2406]	SETUPVAL 	R0 U4 ; U4 := R0
	19	[2407]	GETUPVAL 	R0 U5 ; R0 := U5
	20	[2407]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x46610c50]
	21	[2407]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[2407]	CALL     	R0 3 1 ; R0(R1,R2)
	23	[2409]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	24	[2409]	GETUPVAL 	R1 U6 ; R1 := U6
	25	[2409]	CALL     	R0 2 2 ; R0 := R0(R1)
	26	[2409]	TEST     	R0 0 ; if not R0 then PC := 29
	27	[2409]	JMP      	29 ; PC := 29
	28	[2410]	RETURN   	R0 1 ; return 
	29	[2413]	GETUPVAL 	R0 U6 ; R0 := U6
	30	[2413]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x25a6e75e]
	31	[2413]	CALL     	R0 2 2 ; R0 := R0(R1)
	32	[2413]	SETUPVAL 	R0 U7 ; U7 := R0
	33	[2414]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	34	[2414]	GETUPVAL 	R1 U7 ; R1 := U7
	35	[2414]	CALL     	R0 2 2 ; R0 := R0(R1)
	36	[2414]	TEST     	R0 0 ; if not R0 then PC := 44
	37	[2414]	JMP      	44 ; PC := 44
	38	[2415]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	39	[2415]	LOADK    	R1 K7 ; R1 := "ERROR: No inventory!"
	40	[2415]	CALL     	R0 2 1 ; R0(R1)
	41	[2416]	GETGLOBAL	R0 K8 ; R0 := 0x60cce7b4
	42	[2416]	OP_LOADBOOL	R1 0 0 ; R1 := false
	43	[2416]	CALL     	R0 2 1 ; R0(R1)
	44	[2419]	GETUPVAL 	R0 U0 ; R0 := U0
	45	[2419]	GETUPVAL 	R1 U8 ; R1 := U8
	46	[2419]	GETTABLE 	R1 R1 K10 ; R1 := R1[0x71a5b951]
	47	[2419]	GETUPVAL 	R2 U9 ; R2 := U9
	48	[2419]	GETUPVAL 	R3 U7 ; R3 := U7
	49	[2419]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	50	[2419]	SETTABLE 	R0 K9 R1 ; R0["PurchasedItems"] := R1
	51	[2420]	NEWTABLE 	R0 0 0 ; R0 := {}
	52	[2420]	SETUPVAL 	R0 U10 ; U10 := R0
	53	[2422]	GETUPVAL 	R0 U1 ; R0 := U1
	54	[2422]	GETUPVAL 	R1 U2 ; R1 := U2
	55	[2422]	GETTABLE 	R1 R1 K11 ; R1 := R1["PRIMEPARTS"]
	56	[2422]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 64
	57	[2422]	JMP      	64 ; PC := 64
	58	[2423]	NEWTABLE 	R0 2 0 ; R0 := {}
	59	[2423]	LOADK    	R1 := 11.000000
	60	[2423]	LOADK    	R2 := 13.000000
	61	[2423]	SETLIST  	R0 2 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 2
	62	[2423]	SETUPVAL 	R0 U10 ; U10 := R0
	63	[2423]	JMP      	184 ; PC := 184
	64	[2424]	GETUPVAL 	R0 U1 ; R0 := U1
	65	[2424]	GETUPVAL 	R1 U2 ; R1 := U2
	66	[2424]	GETTABLE 	R1 R1 K13 ; R1 := R1["TREASURE"]
	67	[2424]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 75
	68	[2424]	JMP      	75 ; PC := 75
	69	[2425]	NEWTABLE 	R0 2 0 ; R0 := {}
	70	[2425]	LOADK    	R1 := 11.000000
	71	[2425]	LOADK    	R2 := 34.000000
	72	[2425]	SETLIST  	R0 2 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 2
	73	[2425]	SETUPVAL 	R0 U10 ; U10 := R0
	74	[2425]	JMP      	184 ; PC := 184
	75	[2426]	GETUPVAL 	R0 U1 ; R0 := U1
	76	[2426]	GETUPVAL 	R1 U2 ; R1 := U2
	77	[2426]	GETTABLE 	R1 R1 K14 ; R1 := R1["FISH"]
	78	[2426]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 85
	79	[2426]	JMP      	85 ; PC := 85
	80	[2426]	GETUPVAL 	R0 U1 ; R0 := U1
	81	[2426]	GETUPVAL 	R1 U2 ; R1 := U2
	82	[2426]	GETTABLE 	R1 R1 K15 ; R1 := R1["SHARDS"]
	83	[2426]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 90
	84	[2426]	JMP      	90 ; PC := 90
	85	[2427]	NEWTABLE 	R0 1 0 ; R0 := {}
	86	[2427]	LOADK    	R1 := 11.000000
	87	[2427]	SETLIST  	R0 1 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
	88	[2427]	SETUPVAL 	R0 U10 ; U10 := R0
	89	[2427]	JMP      	184 ; PC := 184
	90	[2428]	GETUPVAL 	R0 U1 ; R0 := U1
	91	[2428]	GETUPVAL 	R1 U2 ; R1 := U2
	92	[2428]	GETTABLE 	R1 R1 K16 ; R1 := R1["SYNDDONATE"]
	93	[2428]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 100
	94	[2428]	JMP      	100 ; PC := 100
	95	[2429]	NEWTABLE 	R0 1 0 ; R0 := {}
	96	[2429]	LOADK    	R1 := 11.000000
	97	[2429]	SETLIST  	R0 1 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
	98	[2429]	SETUPVAL 	R0 U10 ; U10 := R0
	99	[2429]	JMP      	184 ; PC := 184
	100	[2430]	GETUPVAL 	R0 U1 ; R0 := U1
	101	[2430]	GETUPVAL 	R1 U2 ; R1 := U2
	102	[2430]	GETTABLE 	R1 R1 K17 ; R1 := R1["DECODONATE"]
	103	[2430]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 111
	104	[2430]	JMP      	111 ; PC := 111
	105	[2431]	NEWTABLE 	R0 2 0 ; R0 := {}
	106	[2431]	LOADK    	R1 := 30.000000
	107	[2431]	LOADK    	R2 := 34.000000
	108	[2431]	SETLIST  	R0 2 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 2
	109	[2431]	SETUPVAL 	R0 U10 ; U10 := R0
	110	[2431]	JMP      	184 ; PC := 184
	111	[2432]	GETUPVAL 	R0 U1 ; R0 := U1
	112	[2432]	GETUPVAL 	R1 U2 ; R1 := U2
	113	[2432]	GETTABLE 	R1 R1 K18 ; R1 := R1["RESDONATE"]
	114	[2432]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 121
	115	[2432]	JMP      	121 ; PC := 121
	116	[2433]	NEWTABLE 	R0 1 0 ; R0 := {}
	117	[2433]	LOADK    	R1 := 11.000000
	118	[2433]	SETLIST  	R0 1 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
	119	[2433]	SETUPVAL 	R0 U10 ; U10 := R0
	120	[2433]	JMP      	184 ; PC := 184
	121	[2434]	GETUPVAL 	R0 U1 ; R0 := U1
	122	[2434]	GETUPVAL 	R1 U2 ; R1 := U2
	123	[2434]	GETTABLE 	R1 R1 K19 ; R1 := R1["TRADE_MODS"]
	124	[2434]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 131
	125	[2434]	JMP      	131 ; PC := 131
	126	[2435]	NEWTABLE 	R0 1 0 ; R0 := {}
	127	[2435]	LOADK    	R1 := 4.000000
	128	[2435]	SETLIST  	R0 1 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
	129	[2435]	SETUPVAL 	R0 U10 ; U10 := R0
	130	[2435]	JMP      	184 ; PC := 184
	131	[2436]	GETUPVAL 	R0 U1 ; R0 := U1
	132	[2436]	GETUPVAL 	R1 U2 ; R1 := U2
	133	[2436]	GETTABLE 	R1 R1 K20 ; R1 := R1["SHIP_RAW"]
	134	[2436]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 141
	135	[2436]	JMP      	141 ; PC := 141
	136	[2437]	NEWTABLE 	R0 1 0 ; R0 := {}
	137	[2437]	LOADK    	R1 := 43.000000
	138	[2437]	SETLIST  	R0 1 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
	139	[2437]	SETUPVAL 	R0 U10 ; U10 := R0
	140	[2437]	JMP      	184 ; PC := 184
	141	[2438]	GETUPVAL 	R0 U1 ; R0 := U1
	142	[2438]	GETUPVAL 	R1 U2 ; R1 := U2
	143	[2438]	GETTABLE 	R1 R1 K21 ; R1 := R1["SHIP_SCRAP"]
	144	[2438]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 151
	145	[2438]	JMP      	151 ; PC := 151
	146	[2438]	GETUPVAL 	R0 U1 ; R0 := U1
	147	[2438]	GETUPVAL 	R1 U2 ; R1 := U2
	148	[2438]	GETTABLE 	R1 R1 K22 ; R1 := R1["SHIP_PARTS"]
	149	[2438]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 157
	150	[2438]	JMP      	157 ; PC := 157
	151	[2439]	NEWTABLE 	R0 2 0 ; R0 := {}
	152	[2439]	LOADK    	R1 := 43.000000
	153	[2439]	LOADK    	R2 := 46.000000
	154	[2439]	SETLIST  	R0 2 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 2
	155	[2439]	SETUPVAL 	R0 U10 ; U10 := R0
	156	[2439]	JMP      	184 ; PC := 184
	157	[2441]	NEWTABLE 	R0 20 0 ; R0 := {}
	158	[2441]	LOADK    	R1 := 0.000000
	159	[2441]	LOADK    	R2 := 1.000000
	160	[2441]	LOADK    	R3 := 3.000000
	161	[2441]	LOADK    	R4 := 5.000000
	162	[2441]	LOADK    	R5 := 6.000000
	163	[2441]	LOADK    	R6 := 13.000000
	164	[2441]	LOADK    	R7 := 2.000000
	165	[2442]	LOADK    	R8 := 11.000000
	166	[2442]	LOADK    	R9 := 4.000000
	167	[2442]	LOADK    	R10 := 15.000000
	168	[2442]	LOADK    	R11 := 16.000000
	169	[2442]	LOADK    	R12 := 17.000000
	170	[2442]	LOADK    	R13 := 18.000000
	171	[2442]	LOADK    	R14 := 27.000000
	172	[2443]	LOADK    	R15 := 28.000000
	173	[2443]	LOADK    	R16 := 29.000000
	174	[2443]	LOADK    	R17 := 34.000000
	175	[2443]	LOADK    	R18 := 24.000000
	176	[2443]	LOADK    	R19 := 25.000000
	177	[2443]	LOADK    	R20 := 37.000000
	178	[2443]	LOADK    	R21 := 39.000000
	179	[2444]	LOADK    	R22 := 41.000000
	180	[2444]	LOADK    	R23 := 48.000000
	181	[2444]	LOADK    	R24 := 26.000000
	182	[2444]	SETLIST  	R0 24 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 24
	183	[2444]	SETUPVAL 	R0 U10 ; U10 := R0
	184	[2447]	GETUPVAL 	R0 U1 ; R0 := U1
	185	[2447]	GETUPVAL 	R1 U2 ; R1 := U2
	186	[2447]	GETTABLE 	R1 R1 K23 ; R1 := R1["TRADE_ITEMS"]
	187	[2447]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 202
	188	[2447]	JMP      	202 ; PC := 202
	189	[2448]	GETUPVAL 	R0 U11 ; R0 := U11
	190	[2448]	TEST     	R0 0 ; if not R0 then PC := 197
	191	[2448]	JMP      	197 ; PC := 197
	192	[2450]	GETGLOBAL	R0 K24 ; R0 := 0x33bdd652
	193	[2450]	GETTABLE 	R0 R0 K25 ; R0 := R0[0x23d5322f]
	194	[2450]	GETUPVAL 	R1 U10 ; R1 := U10
	195	[2450]	GETUPVAL 	R2 U12 ; R2 := U12
	196	[2450]	CALL     	R0 3 1 ; R0(R1,R2)
	197	[2452]	GETGLOBAL	R0 K24 ; R0 := 0x33bdd652
	198	[2452]	GETTABLE 	R0 R0 K25 ; R0 := R0[0x23d5322f]
	199	[2452]	GETUPVAL 	R1 U10 ; R1 := U10
	200	[2452]	LOADK    	R2 := 10.000000
	201	[2452]	CALL     	R0 3 1 ; R0(R1,R2)
	202	[2455]	GETUPVAL 	R0 U1 ; R0 := U1
	203	[2455]	GETUPVAL 	R1 U2 ; R1 := U2
	204	[2455]	GETTABLE 	R1 R1 K26 ; R1 := R1["INVENTORY"]
	205	[2455]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 400
	206	[2455]	JMP      	400 ; PC := 400
	207	[2459]	CLOSURE  	R0 0 ; R0 := closure(Function #1)
	208	[2459]	GETUPVAL 	R0 U7 ; R0 := U7
	209	[2461]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	210	[2461]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	211	[2461]	GETUPVAL 	R2 U13 ; R2 := U13
	212	[2461]	NEWTABLE 	R3 0 3 ; R3 := {}
	213	[2461]	SETTABLE 	R3 K27 K28 ; R3["Name"] := "warframeList"
	214	[2461]	GETUPVAL 	R4 U14 ; R4 := U14
	215	[2461]	GETTABLE 	R4 R4 K30 ; R4 := R4["WARFRAME"]
	216	[2461]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	217	[2461]	MOVE     	R4 R0 ; R4 := R0
	218	[2461]	LOADK    	R5 := 0.000000
	219	[2461]	CALL     	R4 2 2 ; R4 := R4(R5)
	220	[2461]	SETTABLE 	R3 K31 R4 ; R3["Bin"] := R4
	221	[2461]	CALL     	R1 3 1 ; R1(R2,R3)
	222	[2462]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	223	[2462]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	224	[2462]	GETUPVAL 	R2 U13 ; R2 := U13
	225	[2462]	NEWTABLE 	R3 0 3 ; R3 := {}
	226	[2462]	SETTABLE 	R3 K27 K33 ; R3["Name"] := "weaponList"
	227	[2462]	GETUPVAL 	R4 U14 ; R4 := U14
	228	[2462]	GETTABLE 	R4 R4 K34 ; R4 := R4["WEAPONS"]
	229	[2462]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	230	[2462]	MOVE     	R4 R0 ; R4 := R0
	231	[2462]	LOADK    	R5 := 1.000000
	232	[2462]	CALL     	R4 2 2 ; R4 := R4(R5)
	233	[2462]	SETTABLE 	R3 K31 R4 ; R3["Bin"] := R4
	234	[2462]	CALL     	R1 3 1 ; R1(R2,R3)
	235	[2463]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	236	[2463]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	237	[2463]	GETUPVAL 	R2 U13 ; R2 := U13
	238	[2463]	NEWTABLE 	R3 0 3 ; R3 := {}
	239	[2463]	SETTABLE 	R3 K27 K35 ; R3["Name"] := "sentinelList"
	240	[2463]	GETUPVAL 	R4 U14 ; R4 := U14
	241	[2463]	GETTABLE 	R4 R4 K36 ; R4 := R4["SENTINEL"]
	242	[2463]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	243	[2463]	MOVE     	R4 R0 ; R4 := R0
	244	[2463]	LOADK    	R5 := 2.000000
	245	[2463]	CALL     	R4 2 2 ; R4 := R4(R5)
	246	[2463]	SETTABLE 	R3 K31 R4 ; R3["Bin"] := R4
	247	[2463]	CALL     	R1 3 1 ; R1(R2,R3)
	248	[2464]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	249	[2464]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	250	[2464]	GETUPVAL 	R2 U13 ; R2 := U13
	251	[2464]	NEWTABLE 	R3 0 2 ; R3 := {}
	252	[2464]	SETTABLE 	R3 K27 K37 ; R3["Name"] := "skinList"
	253	[2464]	GETUPVAL 	R4 U14 ; R4 := U14
	254	[2464]	GETTABLE 	R4 R4 K38 ; R4 := R4["APPEARANCE"]
	255	[2464]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	256	[2464]	CALL     	R1 3 1 ; R1(R2,R3)
	257	[2465]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	258	[2465]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	259	[2465]	GETUPVAL 	R2 U13 ; R2 := U13
	260	[2465]	NEWTABLE 	R3 0 2 ; R3 := {}
	261	[2465]	SETTABLE 	R3 K27 K39 ; R3["Name"] := "enhancementList"
	262	[2465]	GETUPVAL 	R4 U14 ; R4 := U14
	263	[2465]	GETTABLE 	R4 R4 K40 ; R4 := R4["ENHANCEMENTS"]
	264	[2465]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	265	[2465]	CALL     	R1 3 1 ; R1(R2,R3)
	266	[2466]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	267	[2466]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	268	[2466]	GETUPVAL 	R2 U13 ; R2 := U13
	269	[2466]	NEWTABLE 	R3 0 2 ; R3 := {}
	270	[2466]	SETTABLE 	R3 K27 K41 ; R3["Name"] := "focusLensList"
	271	[2466]	GETUPVAL 	R4 U14 ; R4 := U14
	272	[2466]	GETTABLE 	R4 R4 K42 ; R4 := R4["FOCUS"]
	273	[2466]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	274	[2466]	CALL     	R1 3 1 ; R1(R2,R3)
	275	[2467]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	276	[2467]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	277	[2467]	GETUPVAL 	R2 U13 ; R2 := U13
	278	[2467]	NEWTABLE 	R3 0 2 ; R3 := {}
	279	[2467]	SETTABLE 	R3 K27 K43 ; R3["Name"] := "droneList"
	280	[2467]	GETUPVAL 	R4 U14 ; R4 := U14
	281	[2467]	GETTABLE 	R4 R4 K44 ; R4 := R4["MISC"]
	282	[2467]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	283	[2467]	CALL     	R1 3 1 ; R1(R2,R3)
	284	[2468]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	285	[2468]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	286	[2468]	GETUPVAL 	R2 U13 ; R2 := U13
	287	[2468]	NEWTABLE 	R3 0 2 ; R3 := {}
	288	[2468]	SETTABLE 	R3 K27 K45 ; R3["Name"] := "gearList"
	289	[2468]	GETUPVAL 	R4 U14 ; R4 := U14
	290	[2468]	GETTABLE 	R4 R4 K46 ; R4 := R4["GEAR"]
	291	[2468]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	292	[2468]	CALL     	R1 3 1 ; R1(R2,R3)
	293	[2469]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	294	[2469]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	295	[2469]	GETUPVAL 	R2 U13 ; R2 := U13
	296	[2469]	NEWTABLE 	R3 0 2 ; R3 := {}
	297	[2469]	SETTABLE 	R3 K27 K47 ; R3["Name"] := "keyList"
	298	[2469]	GETUPVAL 	R4 U14 ; R4 := U14
	299	[2469]	GETTABLE 	R4 R4 K48 ; R4 := R4["KEYS"]
	300	[2469]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	301	[2469]	CALL     	R1 3 1 ; R1(R2,R3)
	302	[2470]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	303	[2470]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	304	[2470]	GETUPVAL 	R2 U13 ; R2 := U13
	305	[2470]	NEWTABLE 	R3 0 2 ; R3 := {}
	306	[2470]	SETTABLE 	R3 K27 K49 ; R3["Name"] := "miscList"
	307	[2470]	GETUPVAL 	R4 U14 ; R4 := U14
	308	[2470]	GETTABLE 	R4 R4 K44 ; R4 := R4["MISC"]
	309	[2470]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	310	[2470]	CALL     	R1 3 1 ; R1(R2,R3)
	311	[2471]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	312	[2471]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	313	[2471]	GETUPVAL 	R2 U13 ; R2 := U13
	314	[2471]	NEWTABLE 	R3 0 2 ; R3 := {}
	315	[2471]	SETTABLE 	R3 K27 K50 ; R3["Name"] := "relicsList"
	316	[2471]	GETUPVAL 	R4 U14 ; R4 := U14
	317	[2471]	GETTABLE 	R4 R4 K51 ; R4 := R4["RELICS"]
	318	[2471]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	319	[2471]	CALL     	R1 3 1 ; R1(R2,R3)
	320	[2472]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	321	[2472]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	322	[2472]	GETUPVAL 	R2 U13 ; R2 := U13
	323	[2472]	NEWTABLE 	R3 0 2 ; R3 := {}
	324	[2472]	SETTABLE 	R3 K27 K52 ; R3["Name"] := "materialList"
	325	[2472]	GETUPVAL 	R4 U14 ; R4 := U14
	326	[2472]	GETTABLE 	R4 R4 K53 ; R4 := R4["RESOURCES"]
	327	[2472]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	328	[2472]	CALL     	R1 3 1 ; R1(R2,R3)
	329	[2473]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	330	[2473]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	331	[2473]	GETUPVAL 	R2 U13 ; R2 := U13
	332	[2473]	NEWTABLE 	R3 0 2 ; R3 := {}
	333	[2473]	SETTABLE 	R3 K27 K54 ; R3["Name"] := "imprintList"
	334	[2473]	GETUPVAL 	R4 U14 ; R4 := U14
	335	[2473]	GETTABLE 	R4 R4 K55 ; R4 := R4["PETPRINTS"]
	336	[2473]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	337	[2473]	CALL     	R1 3 1 ; R1(R2,R3)
	338	[2474]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	339	[2474]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	340	[2474]	GETUPVAL 	R2 U13 ; R2 := U13
	341	[2474]	NEWTABLE 	R3 0 3 ; R3 := {}
	342	[2474]	SETTABLE 	R3 K27 K56 ; R3["Name"] := "archwingList"
	343	[2474]	GETUPVAL 	R4 U14 ; R4 := U14
	344	[2474]	GETTABLE 	R4 R4 K57 ; R4 := R4["ARCHWING"]
	345	[2474]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	346	[2474]	MOVE     	R4 R0 ; R4 := R0
	347	[2474]	LOADK    	R5 := 3.000000
	348	[2474]	CALL     	R4 2 2 ; R4 := R4(R5)
	349	[2474]	SETTABLE 	R3 K31 R4 ; R3["Bin"] := R4
	350	[2474]	CALL     	R1 3 1 ; R1(R2,R3)
	351	[2475]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	352	[2475]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	353	[2475]	GETUPVAL 	R2 U13 ; R2 := U13
	354	[2475]	NEWTABLE 	R3 0 3 ; R3 := {}
	355	[2475]	SETTABLE 	R3 K27 K58 ; R3["Name"] := "archwingWeaponList"
	356	[2475]	GETUPVAL 	R4 U14 ; R4 := U14
	357	[2475]	GETTABLE 	R4 R4 K59 ; R4 := R4["ARCHWINGWEAPONS"]
	358	[2475]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	359	[2475]	MOVE     	R4 R0 ; R4 := R0
	360	[2475]	LOADK    	R5 := 4.000000
	361	[2475]	CALL     	R4 2 2 ; R4 := R4(R5)
	362	[2475]	SETTABLE 	R3 K31 R4 ; R3["Bin"] := R4
	363	[2475]	CALL     	R1 3 1 ; R1(R2,R3)
	364	[2476]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	365	[2476]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	366	[2476]	GETUPVAL 	R2 U13 ; R2 := U13
	367	[2476]	NEWTABLE 	R3 0 3 ; R3 := {}
	368	[2476]	SETTABLE 	R3 K27 K60 ; R3["Name"] := "operatorAmpList"
	369	[2476]	GETUPVAL 	R4 U14 ; R4 := U14
	370	[2476]	GETTABLE 	R4 R4 K61 ; R4 := R4["OPERATORAMPS"]
	371	[2476]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	372	[2476]	MOVE     	R4 R0 ; R4 := R0
	373	[2476]	LOADK    	R5 := 8.000000
	374	[2476]	CALL     	R4 2 2 ; R4 := R4(R5)
	375	[2476]	SETTABLE 	R3 K31 R4 ; R3["Bin"] := R4
	376	[2476]	CALL     	R1 3 1 ; R1(R2,R3)
	377	[2477]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	378	[2477]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	379	[2477]	GETUPVAL 	R2 U13 ; R2 := U13
	380	[2477]	NEWTABLE 	R3 0 2 ; R3 := {}
	381	[2477]	SETTABLE 	R3 K27 K62 ; R3["Name"] := "avionicsList"
	382	[2477]	GETUPVAL 	R4 U14 ; R4 := U14
	383	[2477]	GETTABLE 	R4 R4 K63 ; R4 := R4["AVIONICS"]
	384	[2477]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	385	[2477]	CALL     	R1 3 1 ; R1(R2,R3)
	386	[2478]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	387	[2478]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	388	[2478]	GETUPVAL 	R2 U13 ; R2 := U13
	389	[2478]	NEWTABLE 	R3 0 3 ; R3 := {}
	390	[2478]	SETTABLE 	R3 K27 K64 ; R3["Name"] := "mechList"
	391	[2478]	GETUPVAL 	R4 U14 ; R4 := U14
	392	[2478]	GETTABLE 	R4 R4 K65 ; R4 := R4["MECHS"]
	393	[2478]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	394	[2478]	MOVE     	R4 R0 ; R4 := R0
	395	[2478]	LOADK    	R5 := 10.000000
	396	[2478]	CALL     	R4 2 2 ; R4 := R4(R5)
	397	[2478]	SETTABLE 	R3 K31 R4 ; R3["Bin"] := R4
	398	[2478]	CALL     	R1 3 1 ; R1(R2,R3)
	399	[2478]	JMP      	613 ; PC := 613
	400	[2479]	GETUPVAL 	R1 U1 ; R1 := U1
	401	[2479]	GETUPVAL 	R2 U2 ; R2 := U2
	402	[2479]	GETTABLE 	R2 R2 K19 ; R2 := R2["TRADE_MODS"]
	403	[2479]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 415
	404	[2479]	JMP      	415 ; PC := 415
	405	[2480]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	406	[2480]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	407	[2480]	GETUPVAL 	R2 U13 ; R2 := U13
	408	[2480]	NEWTABLE 	R3 0 2 ; R3 := {}
	409	[2480]	SETTABLE 	R3 K27 K66 ; R3["Name"] := "modList"
	410	[2480]	GETUPVAL 	R4 U14 ; R4 := U14
	411	[2480]	GETTABLE 	R4 R4 K44 ; R4 := R4["MISC"]
	412	[2480]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	413	[2480]	CALL     	R1 3 1 ; R1(R2,R3)
	414	[2480]	JMP      	613 ; PC := 613
	415	[2481]	GETUPVAL 	R1 U1 ; R1 := U1
	416	[2481]	GETUPVAL 	R2 U2 ; R2 := U2
	417	[2481]	GETTABLE 	R2 R2 K21 ; R2 := R2["SHIP_SCRAP"]
	418	[2481]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 430
	419	[2481]	JMP      	430 ; PC := 430
	420	[2481]	GETUPVAL 	R1 U1 ; R1 := U1
	421	[2481]	GETUPVAL 	R2 U2 ; R2 := U2
	422	[2481]	GETTABLE 	R2 R2 K22 ; R2 := R2["SHIP_PARTS"]
	423	[2481]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 430
	424	[2481]	JMP      	430 ; PC := 430
	425	[2481]	GETUPVAL 	R1 U1 ; R1 := U1
	426	[2481]	GETUPVAL 	R2 U2 ; R2 := U2
	427	[2481]	GETTABLE 	R2 R2 K20 ; R2 := R2["SHIP_RAW"]
	428	[2481]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 440
	429	[2481]	JMP      	440 ; PC := 440
	430	[2482]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	431	[2482]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	432	[2482]	GETUPVAL 	R2 U13 ; R2 := U13
	433	[2482]	NEWTABLE 	R3 0 2 ; R3 := {}
	434	[2482]	SETTABLE 	R3 K27 K49 ; R3["Name"] := "miscList"
	435	[2482]	GETUPVAL 	R4 U14 ; R4 := U14
	436	[2482]	GETTABLE 	R4 R4 K44 ; R4 := R4["MISC"]
	437	[2482]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	438	[2482]	CALL     	R1 3 1 ; R1(R2,R3)
	439	[2482]	JMP      	613 ; PC := 613
	440	[2483]	GETUPVAL 	R1 U1 ; R1 := U1
	441	[2483]	GETUPVAL 	R2 U2 ; R2 := U2
	442	[2483]	GETTABLE 	R2 R2 K23 ; R2 := R2["TRADE_ITEMS"]
	443	[2483]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 590
	444	[2483]	JMP      	590 ; PC := 590
	445	[2484]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	446	[2484]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	447	[2484]	GETUPVAL 	R2 U13 ; R2 := U13
	448	[2484]	NEWTABLE 	R3 0 2 ; R3 := {}
	449	[2484]	SETTABLE 	R3 K27 K33 ; R3["Name"] := "weaponList"
	450	[2484]	GETUPVAL 	R4 U14 ; R4 := U14
	451	[2484]	GETTABLE 	R4 R4 K34 ; R4 := R4["WEAPONS"]
	452	[2484]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	453	[2484]	CALL     	R1 3 1 ; R1(R2,R3)
	454	[2485]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	455	[2485]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	456	[2485]	GETUPVAL 	R2 U13 ; R2 := U13
	457	[2485]	NEWTABLE 	R3 0 2 ; R3 := {}
	458	[2485]	SETTABLE 	R3 K27 K58 ; R3["Name"] := "archwingWeaponList"
	459	[2485]	GETUPVAL 	R4 U14 ; R4 := U14
	460	[2485]	GETTABLE 	R4 R4 K59 ; R4 := R4["ARCHWINGWEAPONS"]
	461	[2485]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	462	[2485]	CALL     	R1 3 1 ; R1(R2,R3)
	463	[2486]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	464	[2486]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	465	[2486]	GETUPVAL 	R2 U13 ; R2 := U13
	466	[2486]	NEWTABLE 	R3 0 2 ; R3 := {}
	467	[2486]	SETTABLE 	R3 K27 K35 ; R3["Name"] := "sentinelList"
	468	[2486]	GETUPVAL 	R4 U14 ; R4 := U14
	469	[2486]	GETTABLE 	R4 R4 K36 ; R4 := R4["SENTINEL"]
	470	[2486]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	471	[2486]	CALL     	R1 3 1 ; R1(R2,R3)
	472	[2487]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	473	[2487]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	474	[2487]	GETUPVAL 	R2 U13 ; R2 := U13
	475	[2487]	NEWTABLE 	R3 0 2 ; R3 := {}
	476	[2487]	SETTABLE 	R3 K27 K37 ; R3["Name"] := "skinList"
	477	[2487]	GETUPVAL 	R4 U14 ; R4 := U14
	478	[2487]	GETTABLE 	R4 R4 K38 ; R4 := R4["APPEARANCE"]
	479	[2487]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	480	[2487]	CALL     	R1 3 1 ; R1(R2,R3)
	481	[2488]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	482	[2488]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	483	[2488]	GETUPVAL 	R2 U13 ; R2 := U13
	484	[2488]	NEWTABLE 	R3 0 2 ; R3 := {}
	485	[2488]	SETTABLE 	R3 K27 K39 ; R3["Name"] := "enhancementList"
	486	[2488]	GETUPVAL 	R4 U14 ; R4 := U14
	487	[2488]	GETTABLE 	R4 R4 K40 ; R4 := R4["ENHANCEMENTS"]
	488	[2488]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	489	[2488]	CALL     	R1 3 1 ; R1(R2,R3)
	490	[2489]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	491	[2489]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	492	[2489]	GETUPVAL 	R2 U13 ; R2 := U13
	493	[2489]	NEWTABLE 	R3 0 2 ; R3 := {}
	494	[2489]	SETTABLE 	R3 K27 K41 ; R3["Name"] := "focusLensList"
	495	[2489]	GETUPVAL 	R4 U14 ; R4 := U14
	496	[2489]	GETTABLE 	R4 R4 K42 ; R4 := R4["FOCUS"]
	497	[2489]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	498	[2489]	CALL     	R1 3 1 ; R1(R2,R3)
	499	[2490]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	500	[2490]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	501	[2490]	GETUPVAL 	R2 U13 ; R2 := U13
	502	[2490]	NEWTABLE 	R3 0 2 ; R3 := {}
	503	[2490]	SETTABLE 	R3 K27 K45 ; R3["Name"] := "gearList"
	504	[2490]	GETUPVAL 	R4 U14 ; R4 := U14
	505	[2490]	GETTABLE 	R4 R4 K46 ; R4 := R4["GEAR"]
	506	[2490]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	507	[2490]	CALL     	R1 3 1 ; R1(R2,R3)
	508	[2491]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	509	[2491]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	510	[2491]	GETUPVAL 	R2 U13 ; R2 := U13
	511	[2491]	NEWTABLE 	R3 0 2 ; R3 := {}
	512	[2491]	SETTABLE 	R3 K27 K47 ; R3["Name"] := "keyList"
	513	[2491]	GETUPVAL 	R4 U14 ; R4 := U14
	514	[2491]	GETTABLE 	R4 R4 K48 ; R4 := R4["KEYS"]
	515	[2491]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	516	[2491]	CALL     	R1 3 1 ; R1(R2,R3)
	517	[2492]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	518	[2492]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	519	[2492]	GETUPVAL 	R2 U13 ; R2 := U13
	520	[2492]	NEWTABLE 	R3 0 2 ; R3 := {}
	521	[2492]	SETTABLE 	R3 K27 K49 ; R3["Name"] := "miscList"
	522	[2492]	GETUPVAL 	R4 U14 ; R4 := U14
	523	[2492]	GETTABLE 	R4 R4 K44 ; R4 := R4["MISC"]
	524	[2492]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	525	[2492]	CALL     	R1 3 1 ; R1(R2,R3)
	526	[2493]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	527	[2493]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	528	[2493]	GETUPVAL 	R2 U13 ; R2 := U13
	529	[2493]	NEWTABLE 	R3 0 2 ; R3 := {}
	530	[2493]	SETTABLE 	R3 K27 K50 ; R3["Name"] := "relicsList"
	531	[2493]	GETUPVAL 	R4 U14 ; R4 := U14
	532	[2493]	GETTABLE 	R4 R4 K51 ; R4 := R4["RELICS"]
	533	[2493]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	534	[2493]	CALL     	R1 3 1 ; R1(R2,R3)
	535	[2494]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	536	[2494]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	537	[2494]	GETUPVAL 	R2 U13 ; R2 := U13
	538	[2494]	NEWTABLE 	R3 0 2 ; R3 := {}
	539	[2494]	SETTABLE 	R3 K27 K52 ; R3["Name"] := "materialList"
	540	[2494]	GETUPVAL 	R4 U14 ; R4 := U14
	541	[2494]	GETTABLE 	R4 R4 K53 ; R4 := R4["RESOURCES"]
	542	[2494]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	543	[2494]	CALL     	R1 3 1 ; R1(R2,R3)
	544	[2495]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	545	[2495]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	546	[2495]	GETUPVAL 	R2 U13 ; R2 := U13
	547	[2495]	NEWTABLE 	R3 0 2 ; R3 := {}
	548	[2495]	SETTABLE 	R3 K27 K67 ; R3["Name"] := "recipeList"
	549	[2495]	GETUPVAL 	R4 U14 ; R4 := U14
	550	[2495]	GETTABLE 	R4 R4 K68 ; R4 := R4["RECIPES"]
	551	[2495]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	552	[2495]	CALL     	R1 3 1 ; R1(R2,R3)
	553	[2496]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	554	[2496]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	555	[2496]	GETUPVAL 	R2 U13 ; R2 := U13
	556	[2496]	NEWTABLE 	R3 0 2 ; R3 := {}
	557	[2496]	SETTABLE 	R3 K27 K54 ; R3["Name"] := "imprintList"
	558	[2496]	GETUPVAL 	R4 U14 ; R4 := U14
	559	[2496]	GETTABLE 	R4 R4 K55 ; R4 := R4["PETPRINTS"]
	560	[2496]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	561	[2496]	CALL     	R1 3 1 ; R1(R2,R3)
	562	[2497]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	563	[2497]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	564	[2497]	GETUPVAL 	R2 U13 ; R2 := U13
	565	[2497]	NEWTABLE 	R3 0 2 ; R3 := {}
	566	[2497]	SETTABLE 	R3 K27 K69 ; R3["Name"] := "lichList"
	567	[2497]	GETUPVAL 	R4 U14 ; R4 := U14
	568	[2497]	GETTABLE 	R4 R4 K70 ; R4 := R4["LICH"]
	569	[2497]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	570	[2497]	CALL     	R1 3 1 ; R1(R2,R3)
	571	[2498]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	572	[2498]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	573	[2498]	GETUPVAL 	R2 U13 ; R2 := U13
	574	[2498]	NEWTABLE 	R3 0 2 ; R3 := {}
	575	[2498]	SETTABLE 	R3 K27 K62 ; R3["Name"] := "avionicsList"
	576	[2498]	GETUPVAL 	R4 U14 ; R4 := U14
	577	[2498]	GETTABLE 	R4 R4 K63 ; R4 := R4["AVIONICS"]
	578	[2498]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	579	[2498]	CALL     	R1 3 1 ; R1(R2,R3)
	580	[2499]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	581	[2499]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	582	[2499]	GETUPVAL 	R2 U13 ; R2 := U13
	583	[2499]	NEWTABLE 	R3 0 2 ; R3 := {}
	584	[2499]	SETTABLE 	R3 K27 K71 ; R3["Name"] := "emoteList"
	585	[2499]	GETUPVAL 	R4 U14 ; R4 := U14
	586	[2499]	GETTABLE 	R4 R4 K72 ; R4 := R4["EMOTE"]
	587	[2499]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	588	[2499]	CALL     	R1 3 1 ; R1(R2,R3)
	589	[2499]	JMP      	613 ; PC := 613
	590	[2500]	GETUPVAL 	R1 U1 ; R1 := U1
	591	[2500]	GETUPVAL 	R2 U2 ; R2 := U2
	592	[2500]	GETTABLE 	R2 R2 K18 ; R2 := R2["RESDONATE"]
	593	[2500]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 613
	594	[2500]	JMP      	613 ; PC := 613
	595	[2501]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	596	[2501]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	597	[2501]	GETUPVAL 	R2 U13 ; R2 := U13
	598	[2501]	NEWTABLE 	R3 0 2 ; R3 := {}
	599	[2501]	SETTABLE 	R3 K27 K52 ; R3["Name"] := "materialList"
	600	[2501]	GETUPVAL 	R4 U14 ; R4 := U14
	601	[2501]	GETTABLE 	R4 R4 K53 ; R4 := R4["RESOURCES"]
	602	[2501]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	603	[2501]	CALL     	R1 3 1 ; R1(R2,R3)
	604	[2502]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	605	[2502]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	606	[2502]	GETUPVAL 	R2 U13 ; R2 := U13
	607	[2502]	NEWTABLE 	R3 0 2 ; R3 := {}
	608	[2502]	SETTABLE 	R3 K27 K49 ; R3["Name"] := "miscList"
	609	[2502]	GETUPVAL 	R4 U14 ; R4 := U14
	610	[2502]	GETTABLE 	R4 R4 K53 ; R4 := R4["RESOURCES"]
	611	[2502]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	612	[2502]	CALL     	R1 3 1 ; R1(R2,R3)
	613	[2505]	GETUPVAL 	R1 U1 ; R1 := U1
	614	[2505]	GETUPVAL 	R2 U2 ; R2 := U2
	615	[2505]	GETTABLE 	R2 R2 K13 ; R2 := R2["TREASURE"]
	616	[2505]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 627
	617	[2505]	JMP      	627 ; PC := 627
	618	[2506]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	619	[2506]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	620	[2506]	GETUPVAL 	R2 U13 ; R2 := U13
	621	[2506]	NEWTABLE 	R3 0 2 ; R3 := {}
	622	[2506]	SETTABLE 	R3 K27 K73 ; R3["Name"] := "primeList"
	623	[2506]	GETUPVAL 	R4 U14 ; R4 := U14
	624	[2506]	GETTABLE 	R4 R4 K74 ; R4 := R4["PRIME"]
	625	[2506]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	626	[2506]	CALL     	R1 3 1 ; R1(R2,R3)
	627	[2509]	GETUPVAL 	R1 U1 ; R1 := U1
	628	[2509]	GETUPVAL 	R2 U2 ; R2 := U2
	629	[2509]	GETTABLE 	R2 R2 K11 ; R2 := R2["PRIMEPARTS"]
	630	[2509]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 666
	631	[2509]	JMP      	666 ; PC := 666
	632	[2509]	GETUPVAL 	R1 U1 ; R1 := U1
	633	[2509]	GETUPVAL 	R2 U2 ; R2 := U2
	634	[2509]	GETTABLE 	R2 R2 K13 ; R2 := R2["TREASURE"]
	635	[2509]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 657
	636	[2509]	JMP      	657 ; PC := 657
	637	[2509]	GETUPVAL 	R1 U1 ; R1 := U1
	638	[2509]	GETUPVAL 	R2 U2 ; R2 := U2
	639	[2509]	GETTABLE 	R2 R2 K14 ; R2 := R2["FISH"]
	640	[2509]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 657
	641	[2509]	JMP      	657 ; PC := 657
	642	[2509]	GETUPVAL 	R1 U1 ; R1 := U1
	643	[2509]	GETUPVAL 	R2 U2 ; R2 := U2
	644	[2509]	GETTABLE 	R2 R2 K15 ; R2 := R2["SHARDS"]
	645	[2509]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 657
	646	[2509]	JMP      	657 ; PC := 657
	647	[2509]	GETUPVAL 	R1 U1 ; R1 := U1
	648	[2509]	GETUPVAL 	R2 U2 ; R2 := U2
	649	[2509]	GETTABLE 	R2 R2 K17 ; R2 := R2["DECODONATE"]
	650	[2509]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 657
	651	[2509]	JMP      	657 ; PC := 657
	652	[2509]	GETUPVAL 	R1 U1 ; R1 := U1
	653	[2509]	GETUPVAL 	R2 U2 ; R2 := U2
	654	[2509]	GETTABLE 	R2 R2 K16 ; R2 := R2["SYNDDONATE"]
	655	[2509]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 666
	656	[2509]	JMP      	666 ; PC := 666
	657	[2510]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	658	[2510]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	659	[2510]	GETUPVAL 	R2 U13 ; R2 := U13
	660	[2510]	NEWTABLE 	R3 0 2 ; R3 := {}
	661	[2510]	SETTABLE 	R3 K27 K49 ; R3["Name"] := "miscList"
	662	[2510]	GETUPVAL 	R4 U14 ; R4 := U14
	663	[2510]	GETTABLE 	R4 R4 K44 ; R4 := R4["MISC"]
	664	[2510]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	665	[2510]	CALL     	R1 3 1 ; R1(R2,R3)
	666	[2513]	GETUPVAL 	R1 U1 ; R1 := U1
	667	[2513]	GETUPVAL 	R2 U2 ; R2 := U2
	668	[2513]	GETTABLE 	R2 R2 K16 ; R2 := R2["SYNDDONATE"]
	669	[2513]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 680
	670	[2513]	JMP      	680 ; PC := 680
	671	[2514]	GETGLOBAL	R1 K24 ; R1 := 0x33bdd652
	672	[2514]	GETTABLE 	R1 R1 K25 ; R1 := R1[0x23d5322f]
	673	[2514]	GETUPVAL 	R2 U13 ; R2 := U13
	674	[2514]	NEWTABLE 	R3 0 2 ; R3 := {}
	675	[2514]	SETTABLE 	R3 K27 K52 ; R3["Name"] := "materialList"
	676	[2514]	GETUPVAL 	R4 U14 ; R4 := U14
	677	[2514]	GETTABLE 	R4 R4 K53 ; R4 := R4["RESOURCES"]
	678	[2514]	SETTABLE 	R3 K29 R4 ; R3["Category"] := R4
	679	[2514]	CALL     	R1 3 1 ; R1(R2,R3)
	680	[2517]	GETUPVAL 	R1 U0 ; R1 := U0
	681	[2517]	SELF     	R1 R1 K75 ; R2 := R1; R1 := R1[0x71e9ac81]
	682	[2533]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	683	[2533]	GETUPVAL 	R0 U15 ; R0 := U15
	684	[2533]	GETUPVAL 	R0 U16 ; R0 := U16
	685	[2533]	GETUPVAL 	R0 U1 ; R0 := U1
	686	[2533]	GETUPVAL 	R0 U2 ; R0 := U2
	687	[2533]	GETUPVAL 	R0 U17 ; R0 := U17
	688	[2533]	OP_LOADBOOL	R4 1 0 ; R4 := true
	689	[2533]	OP_LOADBOOL	R5 1 0 ; R5 := true
	690	[2517]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	691	[2536]	GETGLOBAL	R1 K76 ; R1 := 0xae91e43b
	692	[2536]	SELF     	R1 R1 K77 ; R2 := R1; R1 := R1[0xaade900e]
	693	[2536]	LOADK    	R3 K78 ; R3 := "SearchAndSort.SearchBox"
	694	[2536]	LOADK    	R4 := 11.000000
	695	[2536]	OP_LOADBOOL	R5 0 0 ; R5 := false
	696	[2536]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	697	[2537]	GETGLOBAL	R1 K76 ; R1 := 0xae91e43b
	698	[2537]	SELF     	R1 R1 K79 ; R2 := R1; R1 := R1[0x67bc869f]
	699	[2537]	GETUPVAL 	R3 U0 ; R3 := U0
	700	[2537]	GETTABLE 	R3 R3 K80 ; R3 := R3["mSortClipName"]
	701	[2537]	LOADK    	R4 := 10.000000
	702	[2537]	LOADK    	R5 := 0.000000
	703	[2537]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	704	[2538]	GETGLOBAL	R1 K76 ; R1 := 0xae91e43b
	705	[2538]	SELF     	R1 R1 K77 ; R2 := R1; R1 := R1[0xaade900e]
	706	[2538]	GETUPVAL 	R3 U0 ; R3 := U0
	707	[2538]	GETTABLE 	R3 R3 K81 ; R3 := R3["mCategoryClipName"]
	708	[2538]	LOADK    	R4 := 11.000000
	709	[2538]	OP_LOADBOOL	R5 0 0 ; R5 := false
	710	[2538]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	711	[2539]	GETUPVAL 	R1 U19 ; R1 := U19
	712	[2539]	GETTABLE 	R1 R1 K82 ; R1 := R1[0x06d055f9]
	713	[2539]	GETUPVAL 	R2 U1 ; R2 := U1
	714	[2539]	GETUPVAL 	R3 U2 ; R3 := U2
	715	[2539]	GETTABLE 	R3 R3 K3 ; R3 := R3["ENEMIES"]
	716	[2539]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 719
	717	[2539]	JMP      	719 ; PC := 719
	718	[2539]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 719
	719	[2539]	OP_LOADBOOL	R2 1 0 ; R2 := true
	720	[2539]	LOADK    	R3 := 3.000000
	721	[2539]	LOADK    	R4 := 1.000000
	722	[2539]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	723	[2539]	SETUPVAL 	R1 U18 ; U18 := R1
	724	[2540]	RETURN   	R0 1 ; return 

function #44 <?:2542,2559> (76 instructions, 304 bytes at 0000021123073FE0)
1 param, 12 slots, 3 upvalues, 0 locals, 22 constants, 0 functions
	1	[2543]	GETGLOBAL	R1 K0 ; R1 := 0x42dcc9f5
	2	[2543]	MOVE     	R2 R0 ; R2 := R0
	3	[2543]	LOADK    	R3 := 0.000000
	4	[2543]	LOADK    	R4 := 1.000000
	5	[2543]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[2543]	MOVE     	R0 R1 ; R0 := R1
	7	[2544]	MUL      	R1 R0 K1 ; R1 := R0 * 100.000000
	8	[2545]	GETGLOBAL	R2 K2 ; R2 := 0x25312c9b
	9	[2545]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	10	[2545]	LOADK    	R4 K4 ; R4 := "SellList.Slider.Fill"
	11	[2545]	LOADK    	R5 := 2.000000
	12	[2545]	NEWTABLE 	R6 1 0 ; R6 := {}
	13	[2545]	LOADK    	R7 := 5.000000
	14	[2545]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	15	[2545]	NEWTABLE 	R7 0 0 ; R7 := {}
	16	[2545]	GETGLOBAL	R8 K0 ; R8 := 0x42dcc9f5
	17	[2545]	MOVE     	R9 R1 ; R9 := R1
	18	[2545]	LOADK    	R10 K6 ; R10 := 0.010000
	19	[2545]	LOADK    	R11 := 100.000000
	20	[2545]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	21	[2545]	SETLIST  	R7 0 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
	22	[2545]	LOADK    	R8 K7 ; R8 := 0.100000
	23	[2545]	CALL     	R2 7 1 ; R2(R3,R4,R5,R6,R7,R8)
	24	[2546]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	25	[2546]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x5f56eeab]
	26	[2546]	LOADK    	R4 K9 ; R4 := "SellList.SliderValue.Value"
	27	[2546]	LOADK    	R5 := 29.000000
	28	[2546]	GETGLOBAL	R6 K10 ; R6 := 0x7f5022cf
	29	[2546]	GETTABLE 	R6 R6 K11 ; R6 := R6[0xe8072ded]
	30	[2546]	LOADK    	R7 K12 ; R7 := "%.0f"
	31	[2546]	MOVE     	R8 R1 ; R8 := R1
	32	[2546]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	33	[2546]	CALL     	R2 0 1 ; R2(R3,...)
	34	[2548]	ADD      	R2 K13 R1 ; R2 := 142.000000 + R1
	35	[2549]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[2549]	GETTABLE 	R3 R3 K14 ; R3 := R3["ElementWidth"]
	37	[2549]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 76
	38	[2549]	JMP      	76 ; PC := 76
	39	[2550]	GETUPVAL 	R3 U0 ; R3 := U0
	40	[2550]	SETTABLE 	R3 K14 R2 ; R3["ElementWidth"] := R2
	41	[2551]	GETUPVAL 	R3 U0 ; R3 := U0
	42	[2551]	SETTABLE 	R3 K15 R2 ; R3["ElementHeight"] := R2
	43	[2552]	GETUPVAL 	R3 U1 ; R3 := U1
	44	[2552]	GETUPVAL 	R4 U0 ; R4 := U0
	45	[2552]	CALL     	R3 2 1 ; R3(R4)
	46	[2554]	GETUPVAL 	R3 U0 ; R3 := U0
	47	[2554]	GETTABLE 	R3 R3 K16 ; R3 := R3["mElements"]
	48	[2554]	EQ       	1 R3 K17 ; if R3 == nil then PC := 70
	49	[2554]	JMP      	70 ; PC := 70
	50	[2554]	GETUPVAL 	R3 U0 ; R3 := U0
	51	[2554]	GETTABLE 	R3 R3 K16 ; R3 := R3["mElements"]
	52	[2554]	GETTABLE 	R3 R3 K18 ; R3 := R3[1.000000]
	53	[2554]	EQ       	1 R3 K17 ; if R3 == nil then PC := 70
	54	[2554]	JMP      	70 ; PC := 70
	55	[2554]	GETUPVAL 	R3 U0 ; R3 := U0
	56	[2554]	GETTABLE 	R3 R3 K16 ; R3 := R3["mElements"]
	57	[2554]	GETTABLE 	R3 R3 K18 ; R3 := R3[1.000000]
	58	[2554]	GETTABLE 	R3 R3 K19 ; R3 := R3["mClipName"]
	59	[2554]	EQ       	1 R3 K17 ; if R3 == nil then PC := 70
	60	[2554]	JMP      	70 ; PC := 70
	61	[2555]	GETUPVAL 	R3 U2 ; R3 := U2
	62	[2555]	GETTABLE 	R3 R3 K20 ; R3 := R3[0xbf9f30a4]
	63	[2555]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	64	[2555]	GETUPVAL 	R5 U0 ; R5 := U0
	65	[2555]	GETUPVAL 	R6 U0 ; R6 := U0
	66	[2555]	GETTABLE 	R6 R6 K16 ; R6 := R6["mElements"]
	67	[2555]	GETTABLE 	R6 R6 K18 ; R6 := R6[1.000000]
	68	[2555]	GETTABLE 	R6 R6 K19 ; R6 := R6["mClipName"]
	69	[2555]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	70	[2557]	GETUPVAL 	R3 U0 ; R3 := U0
	71	[2557]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x71e9ac81]
	72	[2557]	LOADNIL  	R5 R5 ; R5 := nil
	73	[2557]	OP_LOADBOOL	R6 1 0 ; R6 := true
	74	[2557]	OP_LOADBOOL	R7 1 0 ; R7 := true
	75	[2557]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	76	[2559]	RETURN   	R0 1 ; return 

function #45 <?:2561,2566> (11 instructions, 44 bytes at 00000211230744F0)
0 params, 2 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[2562]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2562]	TEST     	R0 1 ; if R0 then PC := 11
	3	[2562]	JMP      	11 ; PC := 11
	4	[2563]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[2563]	SETUPVAL 	R0 U1 ; U1 := R0
	6	[2564]	GETUPVAL 	R0 U2 ; R0 := U2
	7	[2564]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x659d451f]
	8	[2564]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	9	[2564]	GETTABLE 	R1 R1 K2 ; R1 := R1["UISound_Select"]
	10	[2564]	CALL     	R0 2 1 ; R0(R1)
	11	[2566]	RETURN   	R0 1 ; return 

function #46 <?:2568,2570> (3 instructions, 12 bytes at 0000021123074640)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2569]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[2569]	SETUPVAL 	R1 U0 ; U0 := R1
	3	[2570]	RETURN   	R0 1 ; return 

function #47 <?:2572,2623> (156 instructions, 624 bytes at 0000021123074710)
0 params, 7 slots, 22 upvalues, 0 locals, 26 constants, 0 functions
	1	[2573]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2573]	TEST     	R0 0 ; if not R0 then PC := 9
	3	[2573]	JMP      	9 ; PC := 9
	4	[2573]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	5	[2573]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	6	[2573]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[2573]	TEST     	R0 0 ; if not R0 then PC := 10
	8	[2573]	JMP      	10 ; PC := 10
	9	[2574]	RETURN   	R0 1 ; return 
	10	[2577]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[2577]	TEST     	R0 0 ; if not R0 then PC := 31
	12	[2577]	JMP      	31 ; PC := 31
	13	[2578]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	14	[2578]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x91a24e4b]
	15	[2578]	LOADK    	R2 K3 ; R2 := "SellList.Slider"
	16	[2578]	LOADK    	R3 := 25.000000
	17	[2578]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	18	[2579]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	19	[2579]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x91a24e4b]
	20	[2579]	LOADK    	R3 K4 ; R3 := "SellList.Slider.Back"
	21	[2579]	LOADK    	R4 := 12.000000
	22	[2579]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	23	[2580]	EQ       	1 R0 K5 ; if R0 == nil then PC := 31
	24	[2580]	JMP      	31 ; PC := 31
	25	[2580]	EQ       	1 R1 K5 ; if R1 == nil then PC := 31
	26	[2580]	JMP      	31 ; PC := 31
	27	[2581]	GETUPVAL 	R2 U2 ; R2 := U2
	28	[2581]	SUB      	R3 R1 K6 ; R3 := R1 - 2.000000
	29	[2581]	DIV      	R3 R0 R3 ; R3 := R0 / R3
	30	[2581]	CALL     	R2 2 1 ; R2(R3)
	31	[2585]	GETUPVAL 	R2 U3 ; R2 := U3
	32	[2585]	TEST     	R2 0 ; if not R2 then PC := 60
	33	[2585]	JMP      	60 ; PC := 60
	34	[2585]	GETGLOBAL	R2 K7 ; R2 := 0x9ba7909f
	35	[2585]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xbcfb64ab]
	36	[2585]	GETGLOBAL	R4 K9 ; R4 := 0x0032441c
	37	[2585]	GETTABLE 	R4 R4 K10 ; R4 := R4["UIMovie_DetailedPurchaseDialog"]
	38	[2585]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	39	[2585]	EQ       	0 R2 K5 ; if R2 ~= nil then PC := 58
	40	[2585]	JMP      	58 ; PC := 58
	41	[2585]	GETUPVAL 	R2 U4 ; R2 := U4
	42	[2585]	TEST     	R2 1 ; if R2 then PC := 58
	43	[2585]	JMP      	58 ; PC := 58
	44	[2586]	GETGLOBAL	R2 K11 ; R2 := _T
	45	[2586]	GETTABLE 	R2 R2 K12 ; R2 := R2["TopMenuOpen"]
	46	[2586]	EQ       	0 R2 K13 ; if R2 ~= true then PC := 59
	47	[2586]	JMP      	59 ; PC := 59
	48	[2586]	GETUPVAL 	R2 U5 ; R2 := U5
	49	[2586]	GETUPVAL 	R3 U6 ; R3 := U6
	50	[2586]	GETTABLE 	R3 R3 K14 ; R3 := R3["PRIMEPARTS"]
	51	[2586]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 59
	52	[2586]	JMP      	59 ; PC := 59
	53	[2586]	GETUPVAL 	R2 U5 ; R2 := U5
	54	[2586]	GETUPVAL 	R3 U6 ; R3 := U6
	55	[2586]	GETTABLE 	R3 R3 K15 ; R3 := R3["TREASURE"]
	56	[2586]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 59
	57	[2586]	JMP      	59 ; PC := 59
	58	[2586]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 59
	59	[2586]	OP_LOADBOOL	R2 1 0 ; R2 := true
	60	[2587]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	61	[2587]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0x368ad758]
	62	[2587]	MOVE     	R5 R2 ; R5 := R2
	63	[2587]	CALL     	R3 3 1 ; R3(R4,R5)
	64	[2589]	GETGLOBAL	R3 K17 ; R3 := 0xb693b6c1
	65	[2589]	CALL     	R3 1 2 ; R3 := R3()
	66	[2590]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	67	[2590]	GETUPVAL 	R5 U7 ; R5 := U7
	68	[2590]	CALL     	R4 2 2 ; R4 := R4(R5)
	69	[2590]	TEST     	R4 1 ; if R4 then PC := 75
	70	[2590]	JMP      	75 ; PC := 75
	71	[2591]	GETUPVAL 	R4 U7 ; R4 := U7
	72	[2591]	SELF     	R4 R4 K18 ; R5 := R4; R4 := R4[0xfaa69527]
	73	[2591]	MOVE     	R6 R3 ; R6 := R3
	74	[2591]	CALL     	R4 3 1 ; R4(R5,R6)
	75	[2594]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	76	[2594]	SELF     	R4 R4 K19 ; R5 := R4; R4 := R4[0x8a8c8d5a]
	77	[2594]	MOVE     	R6 R3 ; R6 := R3
	78	[2594]	CALL     	R4 3 1 ; R4(R5,R6)
	79	[2596]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	80	[2596]	GETUPVAL 	R5 U8 ; R5 := U8
	81	[2596]	CALL     	R4 2 2 ; R4 := R4(R5)
	82	[2596]	TEST     	R4 1 ; if R4 then PC := 87
	83	[2596]	JMP      	87 ; PC := 87
	84	[2597]	GETUPVAL 	R4 U8 ; R4 := U8
	85	[2597]	SELF     	R4 R4 K18 ; R5 := R4; R4 := R4[0xfaa69527]
	86	[2597]	CALL     	R4 2 1 ; R4(R5)
	87	[2600]	GETUPVAL 	R4 U9 ; R4 := U9
	88	[2600]	EQ       	1 R4 K5 ; if R4 == nil then PC := 92
	89	[2600]	JMP      	92 ; PC := 92
	90	[2601]	GETUPVAL 	R4 U10 ; R4 := U10
	91	[2601]	CALL     	R4 1 1 ; R4()
	92	[2604]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	93	[2604]	GETUPVAL 	R5 U11 ; R5 := U11
	94	[2604]	CALL     	R4 2 2 ; R4 := R4(R5)
	95	[2604]	TEST     	R4 1 ; if R4 then PC := 100
	96	[2604]	JMP      	100 ; PC := 100
	97	[2605]	GETUPVAL 	R4 U11 ; R4 := U11
	98	[2605]	SELF     	R4 R4 K18 ; R5 := R4; R4 := R4[0xfaa69527]
	99	[2605]	CALL     	R4 2 1 ; R4(R5)
	100	[2608]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	101	[2608]	GETUPVAL 	R5 U12 ; R5 := U12
	102	[2608]	CALL     	R4 2 2 ; R4 := R4(R5)
	103	[2608]	TEST     	R4 0 ; if not R4 then PC := 121
	104	[2608]	JMP      	121 ; PC := 121
	105	[2608]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	106	[2608]	GETUPVAL 	R5 U13 ; R5 := U13
	107	[2608]	CALL     	R4 2 2 ; R4 := R4(R5)
	108	[2608]	TEST     	R4 1 ; if R4 then PC := 121
	109	[2608]	JMP      	121 ; PC := 121
	110	[2608]	GETUPVAL 	R4 U13 ; R4 := U13
	111	[2608]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xd2d3875a]
	112	[2608]	CALL     	R4 2 2 ; R4 := R4(R5)
	113	[2608]	TEST     	R4 0 ; if not R4 then PC := 121
	114	[2608]	JMP      	121 ; PC := 121
	115	[2609]	GETGLOBAL	R4 K21 ; R4 := 0xb009bbc6
	116	[2609]	GETUPVAL 	R5 U14 ; R5 := U14
	117	[2609]	CALL     	R4 2 2 ; R4 := R4(R5)
	118	[2609]	SETUPVAL 	R4 U12 ; U12 := R4
	119	[2610]	GETUPVAL 	R4 U15 ; R4 := U15
	120	[2610]	CALL     	R4 1 1 ; R4()
	121	[2613]	GETUPVAL 	R4 U16 ; R4 := U16
	122	[2613]	TEST     	R4 0 ; if not R4 then PC := 156
	123	[2613]	JMP      	156 ; PC := 156
	124	[2613]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	125	[2613]	GETUPVAL 	R5 U17 ; R5 := U17
	126	[2613]	CALL     	R4 2 2 ; R4 := R4(R5)
	127	[2613]	TEST     	R4 1 ; if R4 then PC := 156
	128	[2613]	JMP      	156 ; PC := 156
	129	[2613]	GETUPVAL 	R4 U17 ; R4 := U17
	130	[2613]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xd2d3875a]
	131	[2613]	CALL     	R4 2 2 ; R4 := R4(R5)
	132	[2613]	TEST     	R4 0 ; if not R4 then PC := 156
	133	[2613]	JMP      	156 ; PC := 156
	134	[2614]	OP_LOADBOOL	R4 0 0 ; R4 := false
	135	[2614]	SETUPVAL 	R4 U16 ; U16 := R4
	136	[2615]	OP_LOADBOOL	R4 0 0 ; R4 := false
	137	[2615]	SETUPVAL 	R4 U18 ; U18 := R4
	138	[2616]	GETUPVAL 	R4 U8 ; R4 := U8
	139	[2616]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x46610c50]
	140	[2616]	OP_LOADBOOL	R6 0 0 ; R6 := false
	141	[2616]	CALL     	R4 3 1 ; R4(R5,R6)
	142	[2618]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	143	[2618]	GETGLOBAL	R5 K11 ; R5 := _T
	144	[2618]	GETTABLE 	R5 R5 K23 ; R5 := R5["SpawnEnemies"]
	145	[2618]	CALL     	R4 2 2 ; R4 := R4(R5)
	146	[2618]	TEST     	R4 1 ; if R4 then PC := 156
	147	[2618]	JMP      	156 ; PC := 156
	148	[2619]	GETGLOBAL	R4 K11 ; R4 := _T
	149	[2619]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x93d36623]
	150	[2619]	GETUPVAL 	R5 U19 ; R5 := U19
	151	[2619]	GETTABLE 	R5 R5 K25 ; R5 := R5["mElements"]
	152	[2619]	GETUPVAL 	R6 U20 ; R6 := U20
	153	[2619]	CALL     	R4 3 1 ; R4(R5,R6)
	154	[2620]	GETUPVAL 	R4 U21 ; R4 := U21
	155	[2620]	CALL     	R4 1 1 ; R4()
	156	[2623]	RETURN   	R0 1 ; return 

function #48 <?:2625,2637> (13 instructions, 52 bytes at 0000021123074F10)
0 params, 3 slots, 5 upvalues, 0 locals, 2 constants, 1 function
	1	[2626]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2626]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xea061e98]
	3	[2633]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	4	[2633]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[2626]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[2635]	GETUPVAL 	R0 U2 ; R0 := U2
	7	[2635]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7c09c373]
	8	[2635]	CALL     	R0 2 1 ; R0(R1)
	9	[2636]	GETUPVAL 	R0 U3 ; R0 := U3
	10	[2636]	GETUPVAL 	R1 U4 ; R1 := U4
	11	[2636]	UNM      	R1 R1 ; R1 := ^ R1
	12	[2636]	CALL     	R0 2 1 ; R0(R1)
	13	[2637]	RETURN   	R0 1 ; return 

function #49 <?:2639,2661> (70 instructions, 280 bytes at 0000021123075210)
0 params, 14 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[2640]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2640]	TEST     	R0 0 ; if not R0 then PC := 7
	3	[2640]	JMP      	7 ; PC := 7
	4	[2641]	LOADK    	R0 := 40.000000
	5	[2641]	SETUPVAL 	R0 U1 ; U1 := R0
	6	[2641]	JMP      	18 ; PC := 18
	7	[2642]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	8	[2642]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf2deaf69]
	9	[2642]	GETGLOBAL	R2 K2 ; R2 := gLotusPhotoBoothGameRulesType
	10	[2642]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	11	[2642]	TEST     	R0 0 ; if not R0 then PC := 16
	12	[2642]	JMP      	16 ; PC := 16
	13	[2643]	LOADK    	R0 := 3.000000
	14	[2643]	SETUPVAL 	R0 U1 ; U1 := R0
	15	[2643]	JMP      	18 ; PC := 18
	16	[2645]	LOADK    	R0 := 20.000000
	17	[2645]	SETUPVAL 	R0 U1 ; U1 := R0
	18	[2647]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	19	[2647]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x18d05d30]
	20	[2647]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[2647]	TEST     	R0 0 ; if not R0 then PC := 70
	22	[2647]	JMP      	70 ; PC := 70
	23	[2648]	GETGLOBAL	R0 K5 ; R0 := 0x0469f296
	24	[2648]	LOADK    	R1 K6 ; R1 := "TENNO_TEAM"
	25	[2648]	CALL     	R0 2 2 ; R0 := R0(R1)
	26	[2649]	GETGLOBAL	R1 K5 ; R1 := 0x0469f296
	27	[2649]	LOADK    	R2 K7 ; R2 := "TENNO"
	28	[2649]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[2650]	GETGLOBAL	R2 K5 ; R2 := 0x0469f296
	30	[2650]	LOADK    	R3 K8 ; R3 := "Clem"
	31	[2650]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[2651]	LOADK    	R3 := 0.000000
	33	[2652]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	34	[2652]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0xfb669000]
	35	[2652]	GETGLOBAL	R6 K10 ; R6 := gAvatarType
	36	[2652]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	37	[2653]	GETGLOBAL	R5 K11 ; R5 := 0xc8802016
	38	[2653]	MOVE     	R6 R4 ; R6 := R4
	39	[2653]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	40	[2653]	JMP      	61 ; PC := 61
	41	[2654]	SELF     	R10 R9 K12 ; R11 := R9; R10 := R9[0xfa9e477f]
	42	[2654]	CALL     	R10 2 2 ; R10 := R10(R11)
	43	[2655]	GETGLOBAL	R11 K13 ; R11 := 0x7b998233
	44	[2655]	MOVE     	R12 R10 ; R12 := R10
	45	[2655]	CALL     	R11 2 2 ; R11 := R11(R12)
	46	[2655]	TEST     	R11 1 ; if R11 then PC := 61
	47	[2655]	JMP      	61 ; PC := 61
	48	[2655]	SELF     	R11 R10 K14 ; R12 := R10; R11 := R10[0xad1e0b4b]
	49	[2655]	CALL     	R11 2 2 ; R11 := R11(R12)
	50	[2655]	EQ       	1 R11 R0 ; if R11 == R0 then PC := 56
	51	[2655]	JMP      	56 ; PC := 56
	52	[2655]	SELF     	R11 R9 K15 ; R12 := R9; R11 := R9[0x808b79e6]
	53	[2655]	CALL     	R11 2 2 ; R11 := R11(R12)
	54	[2655]	EQ       	0 R11 R1 ; if R11 ~= R1 then PC := 60
	55	[2655]	JMP      	60 ; PC := 60
	56	[2655]	SELF     	R11 R9 K16 ; R12 := R9; R11 := R9[0x22da1852]
	57	[2655]	CALL     	R11 2 2 ; R11 := R11(R12)
	58	[2655]	EQ       	0 R11 R2 ; if R11 ~= R2 then PC := 61
	59	[2655]	JMP      	61 ; PC := 61
	60	[2656]	ADD      	R3 R3 K17 ; R3 := R3 + 1.000000
	61	[2653]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 41; R7 := R8 end
	62	[2657]	JMP      	41 ; PC := 41
	63	[2659]	GETGLOBAL	R11 K18 ; R11 := 0x5bced4c4
	64	[2659]	GETTABLE 	R11 R11 K19 ; R11 := R11[0xb62ecfe0]
	65	[2659]	LOADK    	R12 := 0.000000
	66	[2659]	GETUPVAL 	R13 U1 ; R13 := U1
	67	[2659]	SUB      	R13 R13 R3 ; R13 := R13 - R3
	68	[2659]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	69	[2659]	SETUPVAL 	R11 U1 ; U1 := R11
	70	[2661]	RETURN   	R0 1 ; return 

function #50 <?:2663,2668> (11 instructions, 44 bytes at 0000021123075650)
0 params, 3 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[2664]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[2664]	LOADK    	R1 K1 ; R1 := "Lotus.Scripts.SimulacrumUtilities"
	3	[2664]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2665]	GETTABLE 	R1 R0 K2 ; R1 := R0[0x46eb4736]
	5	[2665]	CALL     	R1 1 1 ; R1()
	6	[2666]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[2666]	CALL     	R1 1 1 ; R1()
	8	[2667]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[2667]	LOADK    	R2 := 0.000000
	10	[2667]	CALL     	R1 2 1 ; R1(R2)
	11	[2668]	RETURN   	R0 1 ; return 

function #51 <?:2670,2677> (19 instructions, 76 bytes at 00000211230757A0)
0 params, 8 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[2671]	LOADK    	R0 := 1.000000
	2	[2671]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2671]	LEN      	R1 R1 ; R1 := # R1
	4	[2671]	LOADK    	R2 := 1.000000
	5	[2671]	FORPREP  	R0 18 ; R0 -= R2; PC := 18
	6	[2672]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[2672]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	8	[2673]	EQ       	1 R4 K0 ; if R4 == nil then PC := 18
	9	[2673]	JMP      	18 ; PC := 18
	10	[2673]	GETTABLE 	R5 R4 K1 ; R5 := R4["mButton"]
	11	[2673]	EQ       	1 R5 K0 ; if R5 == nil then PC := 18
	12	[2673]	JMP      	18 ; PC := 18
	13	[2674]	GETTABLE 	R5 R4 K1 ; R5 := R4["mButton"]
	14	[2674]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0x9b71e815]
	15	[2674]	GETTABLE 	R7 R4 K3 ; R7 := R4[0xe223e2b1]
	16	[2674]	CALL     	R7 1 0 ; R7,... := R7()
	17	[2674]	CALL     	R5 0 1 ; R5(R6,...)
	18	[2671]	FORLOOP  	R0 6 ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
	19	[2677]	RETURN   	R0 1 ; return 

function #52 <?:2679,2688> (25 instructions, 100 bytes at 0000021123075940)
0 params, 6 slots, 2 upvalues, 0 locals, 15 constants, 0 functions
	1	[2680]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2680]	NEWTABLE 	R1 0 5 ; R1 := {}
	3	[2681]	GETGLOBAL	R2 K3 ; R2 := 0x603636ad
	4	[2681]	LOADK    	R3 K4 ; R3 := "/Lotus/Language/Menu/EnemySelector_LevelCount"
	5	[2681]	NEWTABLE 	R4 0 0 ; R4 := {}
	6	[2681]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	7	[2681]	SETTABLE 	R1 K2 R2 ; R1["Name"] := R2
	8	[2682]	GETGLOBAL	R2 K3 ; R2 := 0x603636ad
	9	[2682]	LOADK    	R3 K6 ; R3 := "/Lotus/Language/Menu/EnemySelector_MaxLevel"
	10	[2682]	NEWTABLE 	R4 0 1 ; R4 := {}
	11	[2682]	GETUPVAL 	R5 U0 ; R5 := U0
	12	[2682]	SETTABLE 	R4 K7 R5 ; R4["MAXLEVEL"] := R5
	13	[2682]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	14	[2682]	SETTABLE 	R1 K5 R2 ; R1["Description"] := R2
	15	[2683]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[2683]	SETTABLE 	R1 K8 R2 ; R1["Count"] := R2
	17	[2684]	GETUPVAL 	R2 U1 ; R2 := U1
	18	[2684]	SETTABLE 	R1 K9 R2 ; R1["DefaultValue"] := R2
	19	[2685]	SETTABLE 	R1 K10 K11 ; R1["Callback"] := "OnEnemyLevelChanged"
	20	[2686]	SETTABLE 	R0 K1 R1 ; R0["InfoPopup_Data"] := R1
	21	[2687]	GETGLOBAL	R0 K12 ; R0 := 0xae91e43b
	22	[2687]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x1fd6abd0]
	23	[2687]	GETGLOBAL	R2 K14 ; R2 := 0xc2a05c3d
	24	[2687]	CALL     	R0 3 1 ; R0(R1,R2)
	25	[2688]	RETURN   	R0 1 ; return 

function #53 <?:2690,2701> (35 instructions, 140 bytes at 0000021123075CD0)
2 params, 6 slots, 3 upvalues, 0 locals, 9 constants, 0 functions
	1	[2691]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[2691]	MOVE     	R3 R1 ; R3 := R1
	3	[2691]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2691]	TEST     	R2 1 ; if R2 then PC := 33
	5	[2691]	JMP      	33 ; PC := 33
	6	[2691]	GETGLOBAL	R2 K1 ; R2 := 0x03f57322
	7	[2691]	MOVE     	R3 R1 ; R3 := R1
	8	[2691]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[2691]	EQ       	0 R2 K2 ; if R2 ~= 1.000000 then PC := 33
	10	[2691]	JMP      	33 ; PC := 33
	11	[2691]	GETGLOBAL	R2 K1 ; R2 := 0x03f57322
	12	[2691]	MOVE     	R3 R0 ; R3 := R0
	13	[2691]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[2691]	LT       	0 K3 R2 ; if 0.000000 >= R2 then PC := 33
	15	[2691]	JMP      	33 ; PC := 33
	16	[2693]	GETGLOBAL	R2 K1 ; R2 := 0x03f57322
	17	[2693]	MOVE     	R3 R0 ; R3 := R0
	18	[2693]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[2693]	SETUPVAL 	R2 U0 ; U0 := R2
	20	[2694]	GETGLOBAL	R2 K4 ; R2 := _T
	21	[2694]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[2694]	SETTABLE 	R2 K5 R3 ; R2["SelectedEnemyLevel"] := R3
	23	[2696]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	24	[2696]	GETUPVAL 	R3 U1 ; R3 := U1
	25	[2696]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[2696]	TEST     	R2 1 ; if R2 then PC := 33
	27	[2696]	JMP      	33 ; PC := 33
	28	[2697]	GETUPVAL 	R2 U1 ; R2 := U1
	29	[2697]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xe4162eed]
	30	[2697]	LOADK    	R4 K7 ; R4 := "RefreshMenu"
	31	[2697]	LOADK    	R5 K8 ; R5 := ""
	32	[2697]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	33	[2700]	GETUPVAL 	R2 U2 ; R2 := U2
	34	[2700]	CALL     	R2 1 1 ; R2()
	35	[2701]	RETURN   	R0 1 ; return 

function #54 <?:2703,2711> (17 instructions, 68 bytes at 000002112925CE90)
0 params, 2 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[2704]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2704]	GETTABLE 	R0 R0 K1 ; R0 := R0["FriendlyFire"]
	3	[2704]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 8
	4	[2704]	JMP      	8 ; PC := 8
	5	[2705]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[2705]	SETTABLE 	R0 K1 K3 ; R0["FriendlyFire"] := true
	7	[2705]	JMP      	13 ; PC := 13
	8	[2707]	GETGLOBAL	R0 K0 ; R0 := _T
	9	[2707]	GETGLOBAL	R1 K0 ; R1 := _T
	10	[2707]	GETTABLE 	R1 R1 K1 ; R1 := R1["FriendlyFire"]
	11	[2707]	NOT      	R1 R1 ; R1 := not R1
	12	[2707]	SETTABLE 	R0 K1 R1 ; R0["FriendlyFire"] := R1
	13	[2709]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[2709]	CALL     	R0 1 1 ; R0()
	15	[2710]	GETUPVAL 	R0 U1 ; R0 := U1
	16	[2710]	CALL     	R0 1 1 ; R0()
	17	[2711]	RETURN   	R0 1 ; return 

function #55 <?:2713,2721> (17 instructions, 68 bytes at 000002112925CFE0)
0 params, 2 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[2714]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2714]	GETTABLE 	R0 R0 K1 ; R0 := R0["PauseAI"]
	3	[2714]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 8
	4	[2714]	JMP      	8 ; PC := 8
	5	[2715]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[2715]	SETTABLE 	R0 K1 K3 ; R0["PauseAI"] := true
	7	[2715]	JMP      	13 ; PC := 13
	8	[2717]	GETGLOBAL	R0 K0 ; R0 := _T
	9	[2717]	GETGLOBAL	R1 K0 ; R1 := _T
	10	[2717]	GETTABLE 	R1 R1 K1 ; R1 := R1["PauseAI"]
	11	[2717]	NOT      	R1 R1 ; R1 := not R1
	12	[2717]	SETTABLE 	R0 K1 R1 ; R0["PauseAI"] := R1
	13	[2719]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[2719]	CALL     	R0 1 1 ; R0()
	15	[2720]	GETUPVAL 	R0 U1 ; R0 := U1
	16	[2720]	CALL     	R0 1 1 ; R0()
	17	[2721]	RETURN   	R0 1 ; return 

function #56 <?:2723,2730> (12 instructions, 48 bytes at 000002112925D180)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[2724]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2724]	GETTABLE 	R0 R0 K1 ; R0 := R0["warframesInvincible"]
	3	[2724]	TEST     	R0 0 ; if not R0 then PC := 8
	4	[2724]	JMP      	8 ; PC := 8
	5	[2725]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[2725]	SETTABLE 	R0 K1 K2 ; R0["warframesInvincible"] := false
	7	[2725]	JMP      	10 ; PC := 10
	8	[2727]	GETGLOBAL	R0 K0 ; R0 := _T
	9	[2727]	SETTABLE 	R0 K1 K3 ; R0["warframesInvincible"] := true
	10	[2729]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[2729]	CALL     	R0 1 1 ; R0()
	12	[2730]	RETURN   	R0 1 ; return 

function #57 <?:2732,2739> (12 instructions, 48 bytes at 000002112925D2E0)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[2733]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2733]	GETTABLE 	R0 R0 K1 ; R0 := R0["companionsInvincible"]
	3	[2733]	TEST     	R0 0 ; if not R0 then PC := 8
	4	[2733]	JMP      	8 ; PC := 8
	5	[2734]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[2734]	SETTABLE 	R0 K1 K2 ; R0["companionsInvincible"] := false
	7	[2734]	JMP      	10 ; PC := 10
	8	[2736]	GETGLOBAL	R0 K0 ; R0 := _T
	9	[2736]	SETTABLE 	R0 K1 K3 ; R0["companionsInvincible"] := true
	10	[2738]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[2738]	CALL     	R0 1 1 ; R0()
	12	[2739]	RETURN   	R0 1 ; return 

function #58 <?:2741,2763> (31 instructions, 124 bytes at 000002112925D440)
0 params, 12 slots, 2 upvalues, 0 locals, 6 constants, 1 function
	1	[2742]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[2742]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[2743]	LOADNIL  	R0 R0 ; R0 := nil
	4	[2743]	SETUPVAL 	R0 U1 ; U1 := R0
	5	[2745]	LOADK    	R0 := 2.000000
	6	[2746]	LOADK    	R1 K0 ; R1 := 0.660000
	7	[2747]	SUB      	R2 R0 R1 ; R2 := R0 - R1
	8	[2759]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	9	[2759]	MOVE     	R0 R1 ; R0 := R1
	10	[2759]	MOVE     	R0 R2 ; R0 := R2
	11	[2761]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	12	[2761]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x67bc869f]
	13	[2761]	LOADK    	R6 K3 ; R6 := "_root"
	14	[2761]	LOADK    	R7 := 10.000000
	15	[2761]	LOADK    	R8 := 0.000000
	16	[2761]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	17	[2762]	GETGLOBAL	R4 K4 ; R4 := 0x25312c9b
	18	[2762]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	19	[2762]	LOADK    	R6 K3 ; R6 := "_root"
	20	[2762]	LOADK    	R7 := 8.000000
	21	[2762]	NEWTABLE 	R8 2 0 ; R8 := {}
	22	[2762]	LOADK    	R9 := 10.000000
	23	[2762]	MOVE     	R10 R3 ; R10 := R3
	24	[2762]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	25	[2762]	NEWTABLE 	R9 2 0 ; R9 := {}
	26	[2762]	LOADK    	R10 := 100.000000
	27	[2762]	LOADK    	R11 := 1.000000
	28	[2762]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	29	[2762]	LOADK    	R10 := 0.500000
	30	[2762]	CALL     	R4 7 1 ; R4(R5,R6,R7,R8,R9,R10)
	31	[2763]	RETURN   	R0 1 ; return 

function #59 <?:2765,2772> (22 instructions, 88 bytes at 000002112925D870)
0 params, 3 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[2766]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2766]	GETTABLE 	R0 R0 K1 ; R0 := R0["TaggedDialog"]
	3	[2766]	EQ       	1 R0 K2 ; if R0 == nil then PC := 10
	4	[2766]	JMP      	10 ; PC := 10
	5	[2766]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[2766]	GETTABLE 	R0 R0 K1 ; R0 := R0["TaggedDialog"]
	7	[2766]	GETTABLE 	R0 R0 K3 ; R0 := R0["Recruiter_Syndicate"]
	8	[2766]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 11
	9	[2766]	JMP      	11 ; PC := 11
	10	[2767]	RETURN   	R0 1 ; return 
	11	[2770]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[2770]	GETTABLE 	R0 R0 K1 ; R0 := R0["TaggedDialog"]
	13	[2770]	GETTABLE 	R0 R0 K3 ; R0 := R0["Recruiter_Syndicate"]
	14	[2770]	GETTABLE 	R0 R0 K4 ; R0 := R0[0x7ca0d7fa]
	15	[2770]	GETGLOBAL	R1 K0 ; R1 := _T
	16	[2770]	GETTABLE 	R1 R1 K5 ; R1 := R1["CurrentConversation"]
	17	[2770]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	18	[2770]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	19	[2770]	SETUPVAL 	R0 U0 ; U0 := R0
	20	[2771]	OP_LOADBOOL	R0 1 0 ; R0 := true
	21	[2771]	SETUPVAL 	R0 U1 ; U1 := R0
	22	[2772]	RETURN   	R0 1 ; return 

function #60 <?:2774,2787> (166 instructions, 664 bytes at 000002112925DAA0)
0 params, 6 slots, 5 upvalues, 0 locals, 35 constants, 5 functions
	1	[2775]	LOADK    	R0 K0 ; R0 := "/Lotus/Language/Menu/Exit"
	2	[2776]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[2776]	GETTABLE 	R1 R1 K2 ; R1 := R1["InventoryInfo"]
	4	[2776]	EQ       	1 R1 K3 ; if R1 == nil then PC := 14
	5	[2776]	JMP      	14 ; PC := 14
	6	[2776]	GETGLOBAL	R1 K1 ; R1 := _T
	7	[2776]	GETTABLE 	R1 R1 K2 ; R1 := R1["InventoryInfo"]
	8	[2776]	GETTABLE 	R1 R1 K4 ; R1 := R1["ExitLabel"]
	9	[2776]	EQ       	1 R1 K3 ; if R1 == nil then PC := 14
	10	[2776]	JMP      	14 ; PC := 14
	11	[2777]	GETGLOBAL	R1 K1 ; R1 := _T
	12	[2777]	GETTABLE 	R1 R1 K2 ; R1 := R1["InventoryInfo"]
	13	[2777]	GETTABLE 	R0 R1 K4 ; R0 := R1["ExitLabel"]
	14	[2780]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	15	[2780]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	16	[2780]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[2780]	NEWTABLE 	R3 0 4 ; R3 := {}
	18	[2780]	SETTABLE 	R3 K7 R0 ; R3["mLabel"] := R0
	19	[2780]	SETTABLE 	R3 K8 K9 ; R3["mVisible"] := false
	20	[2780]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	21	[2780]	SETTABLE 	R3 K10 R4 ; R3["mCallback"] := R4
	22	[2780]	SETTABLE 	R3 K11 K12 ; R3["mCallout"] := "MENU_CANCEL"
	23	[2780]	CALL     	R1 3 1 ; R1(R2,R3)
	24	[2781]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	25	[2781]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	26	[2781]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[2781]	NEWTABLE 	R3 0 4 ; R3 := {}
	28	[2781]	SETTABLE 	R3 K7 K13 ; R3["mLabel"] := "/Lotus/Language/Menu/ItemInventory_SelectAll"
	29	[2781]	GETUPVAL 	R4 U1 ; R4 := U1
	30	[2781]	GETUPVAL 	R5 U2 ; R5 := U2
	31	[2781]	GETTABLE 	R5 R5 K14 ; R5 := R5["FISH"]
	32	[2781]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 35
	33	[2781]	JMP      	35 ; PC := 35
	34	[2781]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 35
	35	[2781]	OP_LOADBOOL	R4 1 0 ; R4 := true
	36	[2781]	SETTABLE 	R3 K8 R4 ; R3["mVisible"] := R4
	37	[2781]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	38	[2781]	SETTABLE 	R3 K10 R4 ; R3["mCallback"] := R4
	39	[2781]	SETTABLE 	R3 K11 K15 ; R3["mCallout"] := "MENU_GENERIC1"
	40	[2781]	CALL     	R1 3 1 ; R1(R2,R3)
	41	[2782]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	42	[2782]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	43	[2782]	GETUPVAL 	R2 U0 ; R2 := U0
	44	[2782]	NEWTABLE 	R3 0 4 ; R3 := {}
	45	[2782]	SETTABLE 	R3 K7 K16 ; R3["mLabel"] := "/Lotus/Language/Menu/Clear"
	46	[2782]	GETUPVAL 	R4 U1 ; R4 := U1
	47	[2782]	GETUPVAL 	R5 U2 ; R5 := U2
	48	[2782]	GETTABLE 	R5 R5 K17 ; R5 := R5["ENEMIES"]
	49	[2782]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 52
	50	[2782]	JMP      	52 ; PC := 52
	51	[2782]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 52
	52	[2782]	OP_LOADBOOL	R4 1 0 ; R4 := true
	53	[2782]	SETTABLE 	R3 K8 R4 ; R3["mVisible"] := R4
	54	[2782]	GETUPVAL 	R4 U3 ; R4 := U3
	55	[2782]	SETTABLE 	R3 K10 R4 ; R3["mCallback"] := R4
	56	[2782]	SETTABLE 	R3 K11 K18 ; R3["mCallout"] := "MENU_RTRIGGER1"
	57	[2782]	CALL     	R1 3 1 ; R1(R2,R3)
	58	[2783]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	59	[2783]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	60	[2783]	GETUPVAL 	R2 U0 ; R2 := U0
	61	[2783]	NEWTABLE 	R3 0 4 ; R3 := {}
	62	[2783]	SETTABLE 	R3 K7 K19 ; R3["mLabel"] := "/Lotus/Language/Menu/Simulacrum_KillEnemies"
	63	[2783]	GETUPVAL 	R4 U1 ; R4 := U1
	64	[2783]	GETUPVAL 	R5 U2 ; R5 := U2
	65	[2783]	GETTABLE 	R5 R5 K17 ; R5 := R5["ENEMIES"]
	66	[2783]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 76
	67	[2783]	JMP      	76 ; PC := 76
	68	[2783]	GETGLOBAL	R4 K1 ; R4 := _T
	69	[2783]	GETTABLE 	R4 R4 K20 ; R4 := R4["InSimulacrum"]
	70	[2783]	TEST     	R4 0 ; if not R4 then PC := 78
	71	[2783]	JMP      	78 ; PC := 78
	72	[2783]	GETGLOBAL	R4 K21 ; R4 := 0x89326c93
	73	[2783]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x18d05d30]
	74	[2783]	CALL     	R4 2 2 ; R4 := R4(R5)
	75	[2783]	JMP      	78 ; PC := 78
	76	[2783]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 77
	77	[2783]	OP_LOADBOOL	R4 1 0 ; R4 := true
	78	[2783]	SETTABLE 	R3 K8 R4 ; R3["mVisible"] := R4
	79	[2783]	CLOSURE  	R4 2 ; R4 := closure(Function #3)
	80	[2783]	SETTABLE 	R3 K10 R4 ; R3["mCallback"] := R4
	81	[2783]	SETTABLE 	R3 K11 K23 ; R3["mCallout"] := "MENU_RTHUMB"
	82	[2783]	CALL     	R1 3 1 ; R1(R2,R3)
	83	[2784]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	84	[2784]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	85	[2784]	GETUPVAL 	R2 U0 ; R2 := U0
	86	[2784]	NEWTABLE 	R3 0 4 ; R3 := {}
	87	[2784]	SETTABLE 	R3 K7 K13 ; R3["mLabel"] := "/Lotus/Language/Menu/ItemInventory_SelectAll"
	88	[2784]	GETUPVAL 	R4 U1 ; R4 := U1
	89	[2784]	GETUPVAL 	R5 U2 ; R5 := U2
	90	[2784]	GETTABLE 	R5 R5 K14 ; R5 := R5["FISH"]
	91	[2784]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 117
	92	[2784]	JMP      	117 ; PC := 117
	93	[2784]	GETUPVAL 	R4 U1 ; R4 := U1
	94	[2784]	GETUPVAL 	R5 U2 ; R5 := U2
	95	[2784]	GETTABLE 	R5 R5 K17 ; R5 := R5["ENEMIES"]
	96	[2784]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 117
	97	[2784]	JMP      	117 ; PC := 117
	98	[2784]	GETUPVAL 	R4 U1 ; R4 := U1
	99	[2784]	GETUPVAL 	R5 U2 ; R5 := U2
	100	[2784]	GETTABLE 	R5 R5 K24 ; R5 := R5["SHIP_SCRAP"]
	101	[2784]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 117
	102	[2784]	JMP      	117 ; PC := 117
	103	[2784]	GETUPVAL 	R4 U1 ; R4 := U1
	104	[2784]	GETUPVAL 	R5 U2 ; R5 := U2
	105	[2784]	GETTABLE 	R5 R5 K25 ; R5 := R5["SHIP_PARTS"]
	106	[2784]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 117
	107	[2784]	JMP      	117 ; PC := 117
	108	[2784]	GETUPVAL 	R4 U1 ; R4 := U1
	109	[2784]	GETUPVAL 	R5 U2 ; R5 := U2
	110	[2784]	GETTABLE 	R5 R5 K26 ; R5 := R5["SHIP_RAW"]
	111	[2784]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 117
	112	[2784]	JMP      	117 ; PC := 117
	113	[2784]	GETGLOBAL	R4 K27 ; R4 := 0x34291f5c
	114	[2784]	GETTABLE 	R4 R4 K28 ; R4 := R4[0x1467d5f4]
	115	[2784]	CALL     	R4 1 2 ; R4 := R4()
	116	[2784]	JMP      	119 ; PC := 119
	117	[2784]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 118
	118	[2784]	OP_LOADBOOL	R4 1 0 ; R4 := true
	119	[2784]	SETTABLE 	R3 K8 R4 ; R3["mVisible"] := R4
	120	[2784]	GETUPVAL 	R4 U4 ; R4 := U4
	121	[2784]	SETTABLE 	R3 K10 R4 ; R3["mCallback"] := R4
	122	[2784]	SETTABLE 	R3 K11 K15 ; R3["mCallout"] := "MENU_GENERIC1"
	123	[2784]	CALL     	R1 3 1 ; R1(R2,R3)
	124	[2785]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	125	[2785]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	126	[2785]	GETUPVAL 	R2 U0 ; R2 := U0
	127	[2785]	NEWTABLE 	R3 0 4 ; R3 := {}
	128	[2785]	SETTABLE 	R3 K7 K29 ; R3["mLabel"] := "/Lotus/Language/Menu/General_Tutorial"
	129	[2785]	GETUPVAL 	R4 U1 ; R4 := U1
	130	[2785]	GETUPVAL 	R5 U2 ; R5 := U2
	131	[2785]	GETTABLE 	R5 R5 K30 ; R5 := R5["PRIMEPARTS"]
	132	[2785]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 135
	133	[2785]	JMP      	135 ; PC := 135
	134	[2785]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 135
	135	[2785]	OP_LOADBOOL	R4 1 0 ; R4 := true
	136	[2785]	SETTABLE 	R3 K8 R4 ; R3["mVisible"] := R4
	137	[2785]	CLOSURE  	R4 3 ; R4 := closure(Function #4)
	138	[2785]	SETTABLE 	R3 K10 R4 ; R3["mCallback"] := R4
	139	[2785]	SETTABLE 	R3 K11 K23 ; R3["mCallout"] := "MENU_RTHUMB"
	140	[2785]	CALL     	R1 3 1 ; R1(R2,R3)
	141	[2786]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	142	[2786]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	143	[2786]	GETUPVAL 	R2 U0 ; R2 := U0
	144	[2786]	NEWTABLE 	R3 0 3 ; R3 := {}
	145	[2786]	SETTABLE 	R3 K7 K31 ; R3["mLabel"] := "/Lotus/Language/Menu/SyndicateMissionName"
	146	[2786]	GETUPVAL 	R4 U1 ; R4 := U1
	147	[2786]	GETUPVAL 	R5 U2 ; R5 := U2
	148	[2786]	GETTABLE 	R5 R5 K32 ; R5 := R5["SYNDDONATE"]
	149	[2786]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 160
	150	[2786]	JMP      	160 ; PC := 160
	151	[2786]	GETGLOBAL	R4 K1 ; R4 := _T
	152	[2786]	GETTABLE 	R4 R4 K33 ; R4 := R4["TaggedDialog"]
	153	[2786]	EQ       	1 R4 K3 ; if R4 == nil then PC := 160
	154	[2786]	JMP      	160 ; PC := 160
	155	[2786]	GETGLOBAL	R4 K1 ; R4 := _T
	156	[2786]	GETTABLE 	R4 R4 K33 ; R4 := R4["TaggedDialog"]
	157	[2786]	GETTABLE 	R4 R4 K34 ; R4 := R4["Recruiter_Syndicate"]
	158	[2786]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 161
	159	[2786]	JMP      	161 ; PC := 161
	160	[2786]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 161
	161	[2786]	OP_LOADBOOL	R4 1 0 ; R4 := true
	162	[2786]	SETTABLE 	R3 K8 R4 ; R3["mVisible"] := R4
	163	[2786]	CLOSURE  	R4 4 ; R4 := closure(Function #5)
	164	[2786]	SETTABLE 	R3 K10 R4 ; R3["mCallback"] := R4
	165	[2786]	CALL     	R1 3 1 ; R1(R2,R3)
	166	[2787]	RETURN   	R0 1 ; return 

function #61 <?:2789,2791> (5 instructions, 20 bytes at 000002112925EA60)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2790]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2790]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x2dcaf529]
	3	[2790]	MOVE     	R2 R0 ; R2 := R0
	4	[2790]	CALL     	R1 2 1 ; R1(R2)
	5	[2791]	RETURN   	R0 1 ; return 

function #62 <?:2793,2839> (128 instructions, 512 bytes at 000002112925EB70)
0 params, 7 slots, 6 upvalues, 0 locals, 18 constants, 3 functions
	1	[2794]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2794]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x5d10207d]
	3	[2794]	LOADK    	R1 := 6.000000
	4	[2794]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[2794]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[2795]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[2795]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x5d10207d]
	8	[2795]	LOADK    	R2 := 9.000000
	9	[2795]	OP_LOADBOOL	R3 1 0 ; R3 := true
	10	[2795]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[2796]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	12	[2796]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x67bc869f]
	13	[2796]	LOADK    	R4 K4 ; R4 := "SellList.Tip"
	14	[2796]	LOADK    	R5 := 9.000000
	15	[2796]	MOVE     	R6 R1 ; R6 := R1
	16	[2796]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	17	[2797]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	18	[2797]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x67bc869f]
	19	[2797]	LOADK    	R4 K5 ; R4 := "SellList.Total"
	20	[2797]	LOADK    	R5 := 9.000000
	21	[2797]	MOVE     	R6 R0 ; R6 := R0
	22	[2797]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	23	[2798]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	24	[2798]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x67bc869f]
	25	[2798]	LOADK    	R4 K6 ; R4 := "SellList.TopLine"
	26	[2798]	LOADK    	R5 := 9.000000
	27	[2798]	MOVE     	R6 R1 ; R6 := R1
	28	[2798]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	29	[2799]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	30	[2799]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x67bc869f]
	31	[2799]	LOADK    	R4 K7 ; R4 := "SellList.BottomLine"
	32	[2799]	LOADK    	R5 := 9.000000
	33	[2799]	MOVE     	R6 R1 ; R6 := R1
	34	[2799]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	35	[2800]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	36	[2800]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x67bc869f]
	37	[2800]	LOADK    	R4 K8 ; R4 := "SellList.BottomLine2"
	38	[2800]	LOADK    	R5 := 9.000000
	39	[2800]	MOVE     	R6 R1 ; R6 := R1
	40	[2800]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	41	[2801]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	42	[2801]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x67bc869f]
	43	[2801]	LOADK    	R4 K9 ; R4 := "SellList.SimulacrumSeparator"
	44	[2801]	LOADK    	R5 := 9.000000
	45	[2801]	MOVE     	R6 R1 ; R6 := R1
	46	[2801]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	47	[2803]	GETUPVAL 	R2 U1 ; R2 := U1
	48	[2803]	LOADK    	R3 := 0.000000
	49	[2803]	CALL     	R2 2 1 ; R2(R3)
	50	[2805]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	51	[2805]	GETUPVAL 	R3 U2 ; R3 := U2
	52	[2805]	CALL     	R2 2 2 ; R2 := R2(R3)
	53	[2805]	TEST     	R2 1 ; if R2 then PC := 58
	54	[2805]	JMP      	58 ; PC := 58
	55	[2806]	GETUPVAL 	R2 U2 ; R2 := U2
	56	[2806]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x087cbd3f]
	57	[2806]	CALL     	R2 2 1 ; R2(R3)
	58	[2808]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	59	[2808]	GETUPVAL 	R3 U3 ; R3 := U3
	60	[2808]	CALL     	R2 2 2 ; R2 := R2(R3)
	61	[2808]	TEST     	R2 1 ; if R2 then PC := 66
	62	[2808]	JMP      	66 ; PC := 66
	63	[2809]	GETUPVAL 	R2 U3 ; R2 := U3
	64	[2809]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x087cbd3f]
	65	[2809]	CALL     	R2 2 1 ; R2(R3)
	66	[2811]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	67	[2811]	GETUPVAL 	R3 U4 ; R3 := U4
	68	[2811]	CALL     	R2 2 2 ; R2 := R2(R3)
	69	[2811]	TEST     	R2 1 ; if R2 then PC := 86
	70	[2811]	JMP      	86 ; PC := 86
	71	[2812]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	72	[2812]	GETUPVAL 	R3 U4 ; R3 := U4
	73	[2812]	GETTABLE 	R3 R3 K12 ; R3 := R3["mScrollBar"]
	74	[2812]	CALL     	R2 2 2 ; R2 := R2(R3)
	75	[2812]	TEST     	R2 1 ; if R2 then PC := 81
	76	[2812]	JMP      	81 ; PC := 81
	77	[2813]	GETUPVAL 	R2 U4 ; R2 := U4
	78	[2813]	GETTABLE 	R2 R2 K12 ; R2 := R2["mScrollBar"]
	79	[2813]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0xa8854625]
	80	[2813]	CALL     	R2 2 1 ; R2(R3)
	81	[2815]	GETUPVAL 	R2 U4 ; R2 := U4
	82	[2815]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0x741d078c]
	83	[2818]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	84	[2818]	GETUPVAL 	R0 U4 ; R0 := U4
	85	[2815]	CALL     	R2 3 1 ; R2(R3,R4)
	86	[2821]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	87	[2821]	GETUPVAL 	R3 U5 ; R3 := U5
	88	[2821]	CALL     	R2 2 2 ; R2 := R2(R3)
	89	[2821]	TEST     	R2 1 ; if R2 then PC := 128
	90	[2821]	JMP      	128 ; PC := 128
	91	[2822]	GETUPVAL 	R2 U5 ; R2 := U5
	92	[2822]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0x741d078c]
	93	[2825]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	94	[2825]	GETUPVAL 	R0 U5 ; R0 := U5
	95	[2822]	CALL     	R2 3 1 ; R2(R3,R4)
	96	[2826]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	97	[2826]	GETUPVAL 	R3 U5 ; R3 := U5
	98	[2826]	GETTABLE 	R3 R3 K12 ; R3 := R3["mScrollBar"]
	99	[2826]	CALL     	R2 2 2 ; R2 := R2(R3)
	100	[2826]	TEST     	R2 1 ; if R2 then PC := 106
	101	[2826]	JMP      	106 ; PC := 106
	102	[2827]	GETUPVAL 	R2 U5 ; R2 := U5
	103	[2827]	GETTABLE 	R2 R2 K12 ; R2 := R2["mScrollBar"]
	104	[2827]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0xa8854625]
	105	[2827]	CALL     	R2 2 1 ; R2(R3)
	106	[2829]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	107	[2829]	GETUPVAL 	R3 U5 ; R3 := U5
	108	[2829]	GETTABLE 	R3 R3 K15 ; R3 := R3["mSortMenu"]
	109	[2829]	CALL     	R2 2 2 ; R2 := R2(R3)
	110	[2829]	TEST     	R2 1 ; if R2 then PC := 116
	111	[2829]	JMP      	116 ; PC := 116
	112	[2830]	GETUPVAL 	R2 U5 ; R2 := U5
	113	[2830]	GETTABLE 	R2 R2 K15 ; R2 := R2["mSortMenu"]
	114	[2830]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x087cbd3f]
	115	[2830]	CALL     	R2 2 1 ; R2(R3)
	116	[2832]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	117	[2832]	GETUPVAL 	R3 U5 ; R3 := U5
	118	[2832]	GETTABLE 	R3 R3 K16 ; R3 := R3["mCategoryMenu"]
	119	[2832]	CALL     	R2 2 2 ; R2 := R2(R3)
	120	[2832]	TEST     	R2 1 ; if R2 then PC := 128
	121	[2832]	JMP      	128 ; PC := 128
	122	[2833]	GETUPVAL 	R2 U5 ; R2 := U5
	123	[2833]	GETTABLE 	R2 R2 K16 ; R2 := R2["mCategoryMenu"]
	124	[2833]	SELF     	R2 R2 K17 ; R3 := R2; R2 := R2[0xea061e98]
	125	[2836]	CLOSURE  	R4 2 ; R4 := closure(Function #3)
	126	[2836]	GETUPVAL 	R0 U5 ; R0 := U5
	127	[2833]	CALL     	R2 3 1 ; R2(R3,R4)
	128	[2839]	RETURN   	R0 1 ; return 

function #63 <?:2841,2846> (15 instructions, 60 bytes at 000002112925F630)
1 param, 9 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2842]	MOVE     	R1 R0 ; R1 := R0
	2	[2843]	LOADK    	R2 := 1.000000
	3	[2843]	LEN      	R3 R1 ; R3 := # R1
	4	[2843]	LOADK    	R4 := 1.000000
	5	[2843]	FORPREP  	R2 14 ; R2 -= R4; PC := 14
	6	[2844]	GETUPVAL 	R6 U0 ; R6 := U0
	7	[2844]	GETTABLE 	R7 R1 R5 ; R7 := R1[R5]
	8	[2844]	GETTABLE 	R7 R7 K0 ; R7 := R7["type"]
	9	[2844]	SELF     	R7 R7 K1 ; R8 := R7; R7 := R7[0xed4e0128]
	10	[2844]	CALL     	R7 2 2 ; R7 := R7(R8)
	11	[2844]	GETTABLE 	R8 R1 R5 ; R8 := R1[R5]
	12	[2844]	GETTABLE 	R8 R8 K2 ; R8 := R8["scans"]
	13	[2844]	SETTABLE 	R6 R7 R8 ; R6[R7] := R8
	14	[2843]	FORLOOP  	R2 6 ; R2 += R4; if R2 <= R3 then begin PC := 6; R5 := R2 end
	15	[2846]	RETURN   	R0 1 ; return 

function #64 <?:2848,2865> (53 instructions, 212 bytes at 000002112925F7A0)
1 param, 16 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[2849]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[2850]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	3	[2850]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x7d108ddb]
	4	[2850]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[2851]	LOADK    	R3 := 1.000000
	6	[2851]	LEN      	R4 R2 ; R4 := # R2
	7	[2851]	LOADK    	R5 := 1.000000
	8	[2851]	FORPREP  	R3 16 ; R3 -= R5; PC := 16
	9	[2852]	GETGLOBAL	R7 K2 ; R7 := 0x33bdd652
	10	[2852]	GETTABLE 	R7 R7 K3 ; R7 := R7[0x23d5322f]
	11	[2852]	MOVE     	R8 R1 ; R8 := R1
	12	[2852]	GETTABLE 	R9 R2 R6 ; R9 := R2[R6]
	13	[2852]	SELF     	R9 R9 K4 ; R10 := R9; R9 := R9[0xa534c3ac]
	14	[2852]	CALL     	R9 2 0 ; R9,... := R9(R10)
	15	[2852]	CALL     	R7 0 1 ; R7(R8,...)
	16	[2851]	FORLOOP  	R3 9 ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
	17	[2854]	LOADK    	R7 := 1.000000
	18	[2854]	LEN      	R8 R1 ; R8 := # R1
	19	[2854]	LOADK    	R9 := 1.000000
	20	[2854]	FORPREP  	R7 52 ; R7 -= R9; PC := 52
	21	[2855]	GETTABLE 	R11 R1 R10 ; R11 := R1[R10]
	22	[2855]	SELF     	R11 R11 K5 ; R12 := R11; R11 := R11[0xde321e6f]
	23	[2855]	CALL     	R11 2 2 ; R11 := R11(R12)
	24	[2856]	SELF     	R12 R11 K6 ; R13 := R11; R12 := R11[0xe85a2361]
	25	[2856]	LOADK    	R14 := 5.000000
	26	[2856]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	27	[2857]	GETGLOBAL	R13 K8 ; R13 := 0x7b998233
	28	[2857]	MOVE     	R14 R12 ; R14 := R12
	29	[2857]	CALL     	R13 2 2 ; R13 := R13(R14)
	30	[2857]	TEST     	R13 1 ; if R13 then PC := 35
	31	[2857]	JMP      	35 ; PC := 35
	32	[2858]	SELF     	R13 R12 K9 ; R14 := R12; R13 := R12[0x85b77fb3]
	33	[2858]	MOVE     	R15 R0 ; R15 := R0
	34	[2858]	CALL     	R13 3 1 ; R13(R14,R15)
	35	[2860]	SELF     	R13 R11 K6 ; R14 := R11; R13 := R11[0xe85a2361]
	36	[2860]	LOADK    	R15 := 7.000000
	37	[2860]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	38	[2860]	MOVE     	R12 R13 ; R12 := R13
	39	[2861]	GETGLOBAL	R13 K8 ; R13 := 0x7b998233
	40	[2861]	MOVE     	R14 R12 ; R14 := R12
	41	[2861]	CALL     	R13 2 2 ; R13 := R13(R14)
	42	[2861]	TEST     	R13 1 ; if R13 then PC := 52
	43	[2861]	JMP      	52 ; PC := 52
	44	[2861]	SELF     	R13 R12 K10 ; R14 := R12; R13 := R12[0xf2deaf69]
	45	[2861]	GETGLOBAL	R15 K11 ; R15 := gLotusMeleeWeaponType
	46	[2861]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	47	[2861]	TEST     	R13 0 ; if not R13 then PC := 52
	48	[2861]	JMP      	52 ; PC := 52
	49	[2862]	SELF     	R13 R12 K9 ; R14 := R12; R13 := R12[0x85b77fb3]
	50	[2862]	MOVE     	R15 R0 ; R15 := R0
	51	[2862]	CALL     	R13 3 1 ; R13(R14,R15)
	52	[2854]	FORLOOP  	R7 21 ; R7 += R9; if R7 <= R8 then begin PC := 21; R10 := R7 end
	53	[2865]	RETURN   	R0 1 ; return 

function #65 <?:2867,2887> (63 instructions, 252 bytes at 000002112925FAE0)
0 params, 13 slots, 3 upvalues, 0 locals, 17 constants, 0 functions
	1	[2868]	GETGLOBAL	R0 K0 ; R0 := 0x0469f296
	2	[2868]	LOADK    	R1 K1 ; R1 := "TENNO_TEAM"
	3	[2868]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2869]	GETGLOBAL	R1 K0 ; R1 := 0x0469f296
	5	[2869]	LOADK    	R2 K2 ; R2 := "TENNO"
	6	[2869]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[2870]	GETGLOBAL	R2 K3 ; R2 := 0x89326c93
	8	[2870]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xfb669000]
	9	[2870]	GETGLOBAL	R4 K5 ; R4 := gAvatarType
	10	[2870]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	11	[2871]	GETGLOBAL	R3 K6 ; R3 := 0xc8802016
	12	[2871]	MOVE     	R4 R2 ; R4 := R2
	13	[2871]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	14	[2871]	JMP      	36 ; PC := 36
	15	[2872]	SELF     	R8 R7 K7 ; R9 := R7; R8 := R7[0xfa9e477f]
	16	[2872]	CALL     	R8 2 2 ; R8 := R8(R9)
	17	[2873]	GETGLOBAL	R9 K8 ; R9 := 0x7b998233
	18	[2873]	MOVE     	R10 R8 ; R10 := R8
	19	[2873]	CALL     	R9 2 2 ; R9 := R9(R10)
	20	[2873]	TEST     	R9 1 ; if R9 then PC := 35
	21	[2873]	JMP      	35 ; PC := 35
	22	[2873]	SELF     	R9 R8 K9 ; R10 := R8; R9 := R8[0xad1e0b4b]
	23	[2873]	CALL     	R9 2 2 ; R9 := R9(R10)
	24	[2873]	EQ       	1 R9 R0 ; if R9 == R0 then PC := 35
	25	[2873]	JMP      	35 ; PC := 35
	26	[2873]	SELF     	R9 R7 K10 ; R10 := R7; R9 := R7[0x808b79e6]
	27	[2873]	CALL     	R9 2 2 ; R9 := R9(R10)
	28	[2873]	EQ       	1 R9 R1 ; if R9 == R1 then PC := 35
	29	[2873]	JMP      	35 ; PC := 35
	30	[2874]	SELF     	R9 R8 K11 ; R10 := R8; R9 := R8[0x55e9211c]
	31	[2874]	GETGLOBAL	R11 K12 ; R11 := _T
	32	[2874]	GETTABLE 	R11 R11 K13 ; R11 := R11["PauseAI"]
	33	[2874]	GETUPVAL 	R12 U0 ; R12 := U0
	34	[2874]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	35	[2876]	LOADNIL  	R7 R7 ; R7 := nil
	36	[2871]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 15; R5 := R6 end
	37	[2876]	JMP      	15 ; PC := 15
	38	[2879]	GETGLOBAL	R9 K12 ; R9 := _T
	39	[2879]	GETTABLE 	R9 R9 K13 ; R9 := R9["PauseAI"]
	40	[2879]	TEST     	R9 0 ; if not R9 then PC := 50
	41	[2879]	JMP      	50 ; PC := 50
	42	[2880]	GETUPVAL 	R9 U1 ; R9 := U1
	43	[2880]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0x383d2e7d]
	44	[2880]	OP_LOADBOOL	R11 0 0 ; R11 := false
	45	[2880]	CALL     	R9 3 1 ; R9(R10,R11)
	46	[2881]	GETUPVAL 	R9 U2 ; R9 := U2
	47	[2881]	OP_LOADBOOL	R10 0 0 ; R10 := false
	48	[2881]	CALL     	R9 2 1 ; R9(R10)
	49	[2881]	JMP      	63 ; PC := 63
	50	[2883]	GETUPVAL 	R9 U1 ; R9 := U1
	51	[2883]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0x383d2e7d]
	52	[2883]	OP_LOADBOOL	R11 1 0 ; R11 := true
	53	[2883]	CALL     	R9 3 1 ; R9(R10,R11)
	54	[2884]	GETUPVAL 	R9 U1 ; R9 := U1
	55	[2884]	SELF     	R9 R9 K15 ; R10 := R9; R9 := R9[0xcc6aa982]
	56	[2884]	GETGLOBAL	R11 K3 ; R11 := 0x89326c93
	57	[2884]	SELF     	R11 R11 K16 ; R12 := R11; R11 := R11[0x78298275]
	58	[2884]	CALL     	R11 2 0 ; R11,... := R11(R12)
	59	[2884]	CALL     	R9 0 1 ; R9(R10,...)
	60	[2885]	GETUPVAL 	R9 U2 ; R9 := U2
	61	[2885]	OP_LOADBOOL	R10 1 0 ; R10 := true
	62	[2885]	CALL     	R9 2 1 ; R9(R10)
	63	[2887]	RETURN   	R0 1 ; return 

function #66 <?:2889,2902> (40 instructions, 160 bytes at 000002112925FEB0)
0 params, 12 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[2890]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[2890]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xfb669000]
	3	[2890]	GETGLOBAL	R2 K2 ; R2 := gLotusAvatarType
	4	[2890]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[2891]	LOADK    	R1 := 0.000000
	6	[2892]	LOADK    	R2 := 1.000000
	7	[2892]	LEN      	R3 R0 ; R3 := # R0
	8	[2892]	LOADK    	R4 := 1.000000
	9	[2892]	FORPREP  	R2 39 ; R2 -= R4; PC := 39
	10	[2893]	GETGLOBAL	R6 K3 ; R6 := 0x7b998233
	11	[2893]	GETTABLE 	R7 R0 R5 ; R7 := R0[R5]
	12	[2893]	SELF     	R7 R7 K4 ; R8 := R7; R7 := R7[0x5b89142c]
	13	[2893]	CALL     	R7 2 0 ; R7,... := R7(R8)
	14	[2893]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	15	[2893]	TEST     	R6 1 ; if R6 then PC := 39
	16	[2893]	JMP      	39 ; PC := 39
	17	[2894]	GETGLOBAL	R6 K5 ; R6 := _T
	18	[2894]	GETTABLE 	R6 R6 K6 ; R6 := R6["FriendlyFire"]
	19	[2894]	TEST     	R6 0 ; if not R6 then PC := 33
	20	[2894]	JMP      	33 ; PC := 33
	21	[2895]	GETTABLE 	R6 R0 R5 ; R6 := R0[R5]
	22	[2895]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x0cca925a]
	23	[2895]	GETGLOBAL	R8 K8 ; R8 := 0x0469f296
	24	[2895]	LOADK    	R9 K9 ; R9 := "Enemy"
	25	[2895]	GETGLOBAL	R10 K10 ; R10 := 0x64fb1586
	26	[2895]	MOVE     	R11 R1 ; R11 := R1
	27	[2895]	CALL     	R10 2 2 ; R10 := R10(R11)
	28	[2895]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	29	[2895]	CALL     	R8 2 0 ; R8,... := R8(R9)
	30	[2895]	CALL     	R6 0 1 ; R6(R7,...)
	31	[2896]	ADD      	R1 R1 K11 ; R1 := R1 + 1.000000
	32	[2896]	JMP      	39 ; PC := 39
	33	[2898]	GETTABLE 	R6 R0 R5 ; R6 := R0[R5]
	34	[2898]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x0cca925a]
	35	[2898]	GETGLOBAL	R8 K8 ; R8 := 0x0469f296
	36	[2898]	LOADK    	R9 K12 ; R9 := "TENNO"
	37	[2898]	CALL     	R8 2 0 ; R8,... := R8(R9)
	38	[2898]	CALL     	R6 0 1 ; R6(R7,...)
	39	[2892]	FORLOOP  	R2 10 ; R2 += R4; if R2 <= R3 then begin PC := 10; R5 := R2 end
	40	[2902]	RETURN   	R0 1 ; return 

function #67 <?:2904,2984> (303 instructions, 1212 bytes at 0000021129260180)
0 params, 24 slots, 11 upvalues, 0 locals, 69 constants, 5 functions
	1	[2905]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2905]	GETGLOBAL	R1 K1 ; R1 := 0x76ea806b
	3	[2905]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2905]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[2905]	JMP      	7 ; PC := 7
	6	[2906]	RETURN   	R0 1 ; return 
	7	[2908]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[2908]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[2908]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[2908]	TEST     	R0 1 ; if R0 then PC := 157
	11	[2908]	JMP      	157 ; PC := 157
	12	[2910]	LOADK    	R0 := 50.000000
	13	[2910]	SETUPVAL 	R0 U1 ; U1 := R0
	14	[2911]	GETUPVAL 	R0 U2 ; R0 := U2
	15	[2911]	TEST     	R0 0 ; if not R0 then PC := 20
	16	[2911]	JMP      	20 ; PC := 20
	17	[2912]	LOADK    	R0 := 5000.000000
	18	[2912]	SETUPVAL 	R0 U1 ; U1 := R0
	19	[2912]	JMP      	40 ; PC := 40
	20	[2914]	GETGLOBAL	R0 K2 ; R0 := 0x89326c93
	21	[2914]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x78298275]
	22	[2914]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[2915]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	24	[2915]	MOVE     	R2 R0 ; R2 := R0
	25	[2915]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[2915]	TEST     	R1 1 ; if R1 then PC := 40
	27	[2915]	JMP      	40 ; PC := 40
	28	[2916]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0x5e651723]
	29	[2916]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[2917]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	31	[2917]	MOVE     	R3 R1 ; R3 := R1
	32	[2917]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[2917]	TEST     	R2 1 ; if R2 then PC := 40
	34	[2917]	JMP      	40 ; PC := 40
	35	[2918]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0x8ed175c9]
	36	[2918]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[2918]	MUL      	R2 K6 R2 ; R2 := 5.000000 * R2
	38	[2918]	ADD      	R2 K7 R2 ; R2 := 30.000000 + R2
	39	[2918]	SETUPVAL 	R2 U1 ; U1 := R2
	40	[2922]	GETGLOBAL	R2 K8 ; R2 := 0x5bced4c4
	41	[2922]	GETTABLE 	R2 R2 K9 ; R2 := R2[0xb62ecfe0]
	42	[2922]	LOADK    	R3 := 10.000000
	43	[2922]	GETUPVAL 	R4 U1 ; R4 := U1
	44	[2922]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	45	[2922]	SETUPVAL 	R2 U1 ; U1 := R2
	46	[2923]	GETUPVAL 	R2 U0 ; R2 := U0
	47	[2923]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x32e0eabf]
	48	[2923]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[2924]	GETGLOBAL	R3 K11 ; R3 := _T
	50	[2924]	GETUPVAL 	R4 U3 ; R4 := U3
	51	[2924]	GETTABLE 	R4 R4 K13 ; R4 := R4[0x06d055f9]
	52	[2924]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	53	[2924]	MOVE     	R6 R2 ; R6 := R2
	54	[2924]	CALL     	R5 2 2 ; R5 := R5(R6)
	55	[2924]	TEST     	R5 1 ; if R5 then PC := 61
	56	[2924]	JMP      	61 ; PC := 61
	57	[2924]	EQ       	1 R2 K14 ; if R2 == "" then PC := 60
	58	[2924]	JMP      	60 ; PC := 60
	59	[2924]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 60
	60	[2924]	OP_LOADBOOL	R5 1 0 ; R5 := true
	61	[2924]	GETGLOBAL	R6 K8 ; R6 := 0x5bced4c4
	62	[2924]	GETTABLE 	R6 R6 K15 ; R6 := R6[0xac1b386a]
	63	[2924]	LOADK    	R7 := 20.000000
	64	[2924]	GETUPVAL 	R8 U1 ; R8 := U1
	65	[2924]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	66	[2924]	MOVE     	R7 R2 ; R7 := R2
	67	[2924]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	68	[2924]	SETTABLE 	R3 K12 R4 ; R3["SelectedEnemyLevel"] := R4
	69	[2925]	GETGLOBAL	R3 K11 ; R3 := _T
	70	[2925]	GETTABLE 	R3 R3 K12 ; R3 := R3["SelectedEnemyLevel"]
	71	[2925]	SETUPVAL 	R3 U4 ; U4 := R3
	72	[2928]	GETUPVAL 	R3 U0 ; R3 := U0
	73	[2928]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0xb2f08148]
	74	[2928]	CALL     	R3 2 2 ; R3 := R3(R4)
	75	[2929]	GETGLOBAL	R4 K11 ; R4 := _T
	76	[2929]	GETUPVAL 	R5 U3 ; R5 := U3
	77	[2929]	GETTABLE 	R5 R5 K13 ; R5 := R5[0x06d055f9]
	78	[2929]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	79	[2929]	MOVE     	R7 R3 ; R7 := R3
	80	[2929]	CALL     	R6 2 2 ; R6 := R6(R7)
	81	[2929]	OP_LOADBOOL	R7 0 0 ; R7 := false
	82	[2929]	MOVE     	R8 R3 ; R8 := R3
	83	[2929]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	84	[2929]	SETTABLE 	R4 K17 R5 ; R4["PauseAI"] := R5
	85	[2930]	GETUPVAL 	R4 U5 ; R4 := U5
	86	[2930]	CALL     	R4 1 1 ; R4()
	87	[2933]	GETUPVAL 	R4 U0 ; R4 := U0
	88	[2933]	SELF     	R4 R4 K18 ; R5 := R4; R4 := R4[0xe90ec556]
	89	[2933]	CALL     	R4 2 2 ; R4 := R4(R5)
	90	[2934]	GETGLOBAL	R5 K11 ; R5 := _T
	91	[2934]	GETUPVAL 	R6 U3 ; R6 := U3
	92	[2934]	GETTABLE 	R6 R6 K13 ; R6 := R6[0x06d055f9]
	93	[2934]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	94	[2934]	MOVE     	R8 R4 ; R8 := R4
	95	[2934]	CALL     	R7 2 2 ; R7 := R7(R8)
	96	[2934]	OP_LOADBOOL	R8 0 0 ; R8 := false
	97	[2934]	MOVE     	R9 R4 ; R9 := R4
	98	[2934]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	99	[2934]	SETTABLE 	R5 K19 R6 ; R5["warframesInvincible"] := R6
	100	[2937]	GETUPVAL 	R5 U0 ; R5 := U0
	101	[2937]	SELF     	R5 R5 K20 ; R6 := R5; R5 := R5[0x4f80124f]
	102	[2937]	CALL     	R5 2 2 ; R5 := R5(R6)
	103	[2938]	GETGLOBAL	R6 K11 ; R6 := _T
	104	[2938]	GETUPVAL 	R7 U3 ; R7 := U3
	105	[2938]	GETTABLE 	R7 R7 K13 ; R7 := R7[0x06d055f9]
	106	[2938]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	107	[2938]	MOVE     	R9 R5 ; R9 := R5
	108	[2938]	CALL     	R8 2 2 ; R8 := R8(R9)
	109	[2938]	OP_LOADBOOL	R9 0 0 ; R9 := false
	110	[2938]	MOVE     	R10 R5 ; R10 := R5
	111	[2938]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	112	[2938]	SETTABLE 	R6 K21 R7 ; R6["companionsInvincible"] := R7
	113	[2941]	GETUPVAL 	R6 U0 ; R6 := U0
	114	[2941]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0xaaa82423]
	115	[2941]	CALL     	R6 2 2 ; R6 := R6(R7)
	116	[2942]	GETGLOBAL	R7 K11 ; R7 := _T
	117	[2942]	GETUPVAL 	R8 U3 ; R8 := U3
	118	[2942]	GETTABLE 	R8 R8 K13 ; R8 := R8[0x06d055f9]
	119	[2942]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	120	[2942]	MOVE     	R10 R6 ; R10 := R6
	121	[2942]	CALL     	R9 2 2 ; R9 := R9(R10)
	122	[2942]	OP_LOADBOOL	R10 0 0 ; R10 := false
	123	[2942]	MOVE     	R11 R6 ; R11 := R6
	124	[2942]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	125	[2942]	SETTABLE 	R7 K23 R8 ; R7["FriendlyFire"] := R8
	126	[2943]	GETUPVAL 	R7 U6 ; R7 := U6
	127	[2943]	CALL     	R7 1 1 ; R7()
	128	[2946]	GETUPVAL 	R7 U0 ; R7 := U0
	129	[2946]	SELF     	R7 R7 K24 ; R8 := R7; R7 := R7[0x2980361a]
	130	[2946]	CALL     	R7 2 2 ; R7 := R7(R8)
	131	[2947]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	132	[2947]	MOVE     	R9 R7 ; R9 := R7
	133	[2947]	CALL     	R8 2 2 ; R8 := R8(R9)
	134	[2947]	TEST     	R8 1 ; if R8 then PC := 157
	135	[2947]	JMP      	157 ; PC := 157
	136	[2948]	GETGLOBAL	R8 K11 ; R8 := _T
	137	[2948]	NEWTABLE 	R9 0 0 ; R9 := {}
	138	[2948]	SETTABLE 	R8 K25 R9 ; R8["SpawnedEnemies"] := R9
	139	[2949]	LOADK    	R8 := 1.000000
	140	[2949]	LEN      	R9 R7 ; R9 := # R7
	141	[2949]	LOADK    	R10 := 1.000000
	142	[2949]	FORPREP  	R8 156 ; R8 -= R10; PC := 156
	143	[2950]	GETGLOBAL	R12 K11 ; R12 := _T
	144	[2950]	GETTABLE 	R12 R12 K25 ; R12 := R12["SpawnedEnemies"]
	145	[2950]	NEWTABLE 	R13 0 3 ; R13 := {}
	146	[2950]	GETTABLE 	R14 R7 R11 ; R14 := R7[R11]
	147	[2950]	GETTABLE 	R14 R14 K27 ; R14 := R14["enemyType"]
	148	[2950]	SETTABLE 	R13 K26 R14 ; R13["Type"] := R14
	149	[2950]	GETTABLE 	R14 R7 R11 ; R14 := R7[R11]
	150	[2950]	GETTABLE 	R14 R14 K29 ; R14 := R14["resourceType"]
	151	[2950]	SETTABLE 	R13 K28 R14 ; R13["SourceType"] := R14
	152	[2950]	GETTABLE 	R14 R7 R11 ; R14 := R7[R11]
	153	[2950]	GETTABLE 	R14 R14 K31 ; R14 := R14["enemyAmount"]
	154	[2950]	SETTABLE 	R13 K30 R14 ; R13["Count"] := R14
	155	[2950]	SETTABLE 	R12 R11 R13 ; R12[R11] := R13
	156	[2949]	FORLOOP  	R8 143 ; R8 += R10; if R8 <= R9 then begin PC := 143; R11 := R8 end
	157	[2955]	GETGLOBAL	R12 K32 ; R12 := 0x33bdd652
	158	[2955]	GETTABLE 	R12 R12 K33 ; R12 := R12[0x23d5322f]
	159	[2955]	GETUPVAL 	R13 U7 ; R13 := U7
	160	[2955]	NEWTABLE 	R14 0 2 ; R14 := {}
	161	[2955]	SETTABLE 	R14 K34 K35 ; R14["PressedCallback"] := "EnemyLevelSelected"
	162	[2955]	CLOSURE  	R15 0 ; R15 := closure(Function #1)
	163	[2955]	GETUPVAL 	R0 U4 ; R0 := U4
	164	[2955]	SETTABLE 	R14 K36 R15 ; R14["GetName"] := R15
	165	[2955]	CALL     	R12 3 1 ; R12(R13,R14)
	166	[2956]	GETGLOBAL	R12 K11 ; R12 := _T
	167	[2956]	GETTABLE 	R12 R12 K37 ; R12 := R12["InSimulacrum"]
	168	[2956]	TEST     	R12 0 ; if not R12 then PC := 222
	169	[2956]	JMP      	222 ; PC := 222
	170	[2956]	GETGLOBAL	R12 K2 ; R12 := 0x89326c93
	171	[2956]	SELF     	R12 R12 K38 ; R13 := R12; R12 := R12[0x18d05d30]
	172	[2956]	CALL     	R12 2 2 ; R12 := R12(R13)
	173	[2956]	TEST     	R12 0 ; if not R12 then PC := 222
	174	[2956]	JMP      	222 ; PC := 222
	175	[2957]	GETGLOBAL	R12 K32 ; R12 := 0x33bdd652
	176	[2957]	GETTABLE 	R12 R12 K33 ; R12 := R12[0x23d5322f]
	177	[2957]	GETUPVAL 	R13 U7 ; R13 := U7
	178	[2957]	NEWTABLE 	R14 0 2 ; R14 := {}
	179	[2957]	SETTABLE 	R14 K34 K39 ; R14["PressedCallback"] := "TogglePauseAI"
	180	[2957]	CLOSURE  	R15 1 ; R15 := closure(Function #2)
	181	[2957]	GETUPVAL 	R0 U3 ; R0 := U3
	182	[2957]	SETTABLE 	R14 K36 R15 ; R14["GetName"] := R15
	183	[2957]	CALL     	R12 3 1 ; R12(R13,R14)
	184	[2958]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	185	[2958]	GETGLOBAL	R13 K40 ; R13 := 0xbe190284
	186	[2958]	CALL     	R12 2 2 ; R12 := R12(R13)
	187	[2958]	TEST     	R12 1 ; if R12 then PC := 195
	188	[2958]	JMP      	195 ; PC := 195
	189	[2958]	GETGLOBAL	R12 K40 ; R12 := 0xbe190284
	190	[2958]	SELF     	R12 R12 K41 ; R13 := R12; R12 := R12[0xf2deaf69]
	191	[2958]	GETGLOBAL	R14 K42 ; R14 := gLotusPhotoBoothGameRulesType
	192	[2958]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	193	[2958]	TEST     	R12 1 ; if R12 then PC := 222
	194	[2958]	JMP      	222 ; PC := 222
	195	[2959]	GETGLOBAL	R12 K32 ; R12 := 0x33bdd652
	196	[2959]	GETTABLE 	R12 R12 K33 ; R12 := R12[0x23d5322f]
	197	[2959]	GETUPVAL 	R13 U7 ; R13 := U7
	198	[2959]	NEWTABLE 	R14 0 2 ; R14 := {}
	199	[2959]	SETTABLE 	R14 K34 K43 ; R14["PressedCallback"] := "ToggleInvincibility"
	200	[2959]	CLOSURE  	R15 2 ; R15 := closure(Function #3)
	201	[2959]	GETUPVAL 	R0 U3 ; R0 := U3
	202	[2959]	SETTABLE 	R14 K36 R15 ; R14["GetName"] := R15
	203	[2959]	CALL     	R12 3 1 ; R12(R13,R14)
	204	[2960]	GETGLOBAL	R12 K32 ; R12 := 0x33bdd652
	205	[2960]	GETTABLE 	R12 R12 K33 ; R12 := R12[0x23d5322f]
	206	[2960]	GETUPVAL 	R13 U7 ; R13 := U7
	207	[2960]	NEWTABLE 	R14 0 2 ; R14 := {}
	208	[2960]	SETTABLE 	R14 K34 K44 ; R14["PressedCallback"] := "ToggleCompanionInvincibility"
	209	[2960]	CLOSURE  	R15 3 ; R15 := closure(Function #4)
	210	[2960]	GETUPVAL 	R0 U3 ; R0 := U3
	211	[2960]	SETTABLE 	R14 K36 R15 ; R14["GetName"] := R15
	212	[2960]	CALL     	R12 3 1 ; R12(R13,R14)
	213	[2961]	GETGLOBAL	R12 K32 ; R12 := 0x33bdd652
	214	[2961]	GETTABLE 	R12 R12 K33 ; R12 := R12[0x23d5322f]
	215	[2961]	GETUPVAL 	R13 U7 ; R13 := U7
	216	[2961]	NEWTABLE 	R14 0 2 ; R14 := {}
	217	[2961]	SETTABLE 	R14 K34 K45 ; R14["PressedCallback"] := "ToggleFriendlyFire"
	218	[2961]	CLOSURE  	R15 4 ; R15 := closure(Function #5)
	219	[2961]	GETUPVAL 	R0 U3 ; R0 := U3
	220	[2961]	SETTABLE 	R14 K36 R15 ; R14["GetName"] := R15
	221	[2961]	CALL     	R12 3 1 ; R12(R13,R14)
	222	[2965]	LOADK    	R12 := 475.000000
	223	[2966]	LOADK    	R13 := 1.000000
	224	[2966]	GETUPVAL 	R14 U7 ; R14 := U7
	225	[2966]	LEN      	R14 R14 ; R14 := # R14
	226	[2966]	LOADK    	R15 := 1.000000
	227	[2966]	FORPREP  	R13 271 ; R13 -= R15; PC := 271
	228	[2967]	GETUPVAL 	R17 U7 ; R17 := U7
	229	[2967]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	230	[2968]	LOADK    	R18 K46 ; R18 := "SellList.OptionalButton"
	231	[2968]	MOVE     	R19 R16 ; R19 := R16
	232	[2968]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	233	[2969]	GETGLOBAL	R19 K47 ; R19 := 0xae91e43b
	234	[2969]	SELF     	R19 R19 K48 ; R20 := R19; R19 := R19[0xa7ec3e8a]
	235	[2969]	MOVE     	R21 R18 ; R21 := R18
	236	[2969]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	237	[2969]	TEST     	R19 1 ; if R19 then PC := 247
	238	[2969]	JMP      	247 ; PC := 247
	239	[2970]	GETGLOBAL	R19 K49 ; R19 := 0x38f10e85
	240	[2970]	GETGLOBAL	R20 K47 ; R20 := 0xae91e43b
	241	[2970]	LOADK    	R21 K50 ; R21 := "SellList.OptionalButton1.duplicateMovieClip"
	242	[2970]	LOADK    	R22 K51 ; R22 := "OptionalButton"
	243	[2970]	MOVE     	R23 R16 ; R23 := R16
	244	[2970]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	245	[2970]	ADD      	R23 K52 R16 ; R23 := 6000.000000 + R16
	246	[2970]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	247	[2972]	GETGLOBAL	R19 K47 ; R19 := 0xae91e43b
	248	[2972]	SELF     	R19 R19 K53 ; R20 := R19; R19 := R19[0x67bc869f]
	249	[2972]	MOVE     	R21 R18 ; R21 := R18
	250	[2972]	LOADK    	R22 := 1.000000
	251	[2972]	MOVE     	R23 R12 ; R23 := R12
	252	[2972]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	253	[2973]	GETUPVAL 	R19 U8 ; R19 := U8
	254	[2973]	GETTABLE 	R19 R19 K55 ; R19 := R19[0xae6791ba]
	255	[2973]	GETGLOBAL	R20 K47 ; R20 := 0xae91e43b
	256	[2973]	MOVE     	R21 R18 ; R21 := R18
	257	[2973]	GETTABLE 	R22 R17 K56 ; R22 := R17[0xe223e2b1]
	258	[2973]	CALL     	R22 1 2 ; R22 := R22()
	259	[2973]	GETTABLE 	R23 R17 K34 ; R23 := R17["PressedCallback"]
	260	[2973]	CALL     	R19 5 2 ; R19 := R19(R20,R21,R22,R23)
	261	[2973]	SETTABLE 	R17 K54 R19 ; R17["mButton"] := R19
	262	[2974]	GETTABLE 	R19 R17 K54 ; R19 := R17["mButton"]
	263	[2974]	SELF     	R19 R19 K57 ; R20 := R19; R19 := R19[0x6b2ab44e]
	264	[2974]	LOADK    	R21 K58 ; R21 := "left"
	265	[2974]	CALL     	R19 3 1 ; R19(R20,R21)
	266	[2975]	GETTABLE 	R19 R17 K54 ; R19 := R17["mButton"]
	267	[2975]	SELF     	R19 R19 K59 ; R20 := R19; R19 := R19[0x3177700e]
	268	[2975]	LOADK    	R21 := 350.000000
	269	[2975]	CALL     	R19 3 1 ; R19(R20,R21)
	270	[2976]	SUB      	R12 R12 K60 ; R12 := R12 - 32.000000
	271	[2966]	FORLOOP  	R13 228 ; R13 += R15; if R13 <= R14 then begin PC := 228; R16 := R13 end
	272	[2979]	GETGLOBAL	R19 K49 ; R19 := 0x38f10e85
	273	[2979]	GETGLOBAL	R20 K47 ; R20 := 0xae91e43b
	274	[2979]	LOADK    	R21 K61 ; R21 := "SellList.BottomLine.duplicateMovieClip"
	275	[2979]	LOADK    	R22 K62 ; R22 := "SimulacrumSeparator"
	276	[2979]	LOADK    	R23 := 6000.000000
	277	[2979]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	278	[2980]	GETGLOBAL	R19 K47 ; R19 := 0xae91e43b
	279	[2980]	SELF     	R19 R19 K53 ; R20 := R19; R19 := R19[0x67bc869f]
	280	[2980]	LOADK    	R21 K63 ; R21 := "SellList.SimulacrumSeparator"
	281	[2980]	LOADK    	R22 := 1.000000
	282	[2980]	ADD      	R23 R12 K64 ; R23 := R12 + 17.000000
	283	[2980]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	284	[2981]	GETUPVAL 	R19 U9 ; R19 := U9
	285	[2981]	GETTABLE 	R19 R19 K65 ; R19 := R19[0x00fa676f]
	286	[2981]	GETGLOBAL	R20 K47 ; R20 := 0xae91e43b
	287	[2981]	LOADK    	R21 K63 ; R21 := "SellList.SimulacrumSeparator"
	288	[2981]	LOADK    	R22 := 380.000000
	289	[2981]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	290	[2983]	GETGLOBAL	R19 K47 ; R19 := 0xae91e43b
	291	[2983]	SELF     	R19 R19 K66 ; R20 := R19; R19 := R19[0x91a24e4b]
	292	[2983]	LOADK    	R21 K63 ; R21 := "SellList.SimulacrumSeparator"
	293	[2983]	LOADK    	R22 := 1.000000
	294	[2983]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	295	[2983]	GETGLOBAL	R20 K47 ; R20 := 0xae91e43b
	296	[2983]	SELF     	R20 R20 K66 ; R21 := R20; R20 := R20[0x91a24e4b]
	297	[2983]	LOADK    	R22 K67 ; R22 := "SellList.TopLine"
	298	[2983]	LOADK    	R23 := 1.000000
	299	[2983]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	300	[2983]	SUB      	R19 R19 R20 ; R19 := R19 - R20
	301	[2983]	SUB      	R19 R19 K68 ; R19 := R19 - 26.000000
	302	[2983]	SETUPVAL 	R19 U10 ; U10 := R19
	303	[2984]	RETURN   	R0 1 ; return 

function #68 <?:2986,3023> (61 instructions, 244 bytes at 0000021129261D40)
0 params, 8 slots, 3 upvalues, 0 locals, 29 constants, 2 functions
	1	[2987]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[2987]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x42b04007]
	3	[2987]	LOADK    	R2 K2 ; R2 := "/Lotus/Language/Menu/SearchPrompt"
	4	[2987]	OP_LOADBOOL	R3 0 0 ; R3 := false
	5	[2987]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	6	[2988]	GETGLOBAL	R1 K3 ; R1 := 0x2d0fad09
	7	[2988]	LOADK    	R2 K4 ; R2 := "Lotus.Interface.Components.ThemedInputField"
	8	[2988]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2989]	GETTABLE 	R2 R1 K5 ; R2 := R1[0xae6791ba]
	10	[2989]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	11	[2989]	LOADK    	R4 K6 ; R4 := "SearchAndSort.SearchBox"
	12	[2989]	LOADNIL  	R5 R6 ; R5 := R6 := nil
	13	[2989]	LOADK    	R7 K7 ; R7 := "<MENU_LTHUMB>"
	14	[2989]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	15	[2989]	SETUPVAL 	R2 U0 ; U0 := R2
	16	[2990]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[2990]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xf87811f6]
	18	[2990]	GETUPVAL 	R4 U0 ; R4 := U0
	19	[2990]	GETTABLE 	R4 R4 K9 ; R4 := R4["TYPE"]
	20	[2990]	GETTABLE 	R4 R4 K10 ; R4 := R4["PLAIN"]
	21	[2990]	MOVE     	R5 R0 ; R5 := R0
	22	[2990]	MOVE     	R6 R0 ; R6 := R0
	23	[2990]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	24	[2991]	GETUPVAL 	R2 U0 ; R2 := U0
	25	[2991]	SETTABLE 	R2 K11 K12 ; R2["mMinSize"] := 200.000000
	26	[2992]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[2992]	SETTABLE 	R2 K13 K12 ; R2["mMaxSize"] := 200.000000
	28	[2993]	GETUPVAL 	R2 U0 ; R2 := U0
	29	[2993]	SETTABLE 	R2 K14 K15 ; R2["mTextBuffer"] := 4.000000
	30	[2994]	GETUPVAL 	R2 U0 ; R2 := U0
	31	[2994]	GETGLOBAL	R3 K17 ; R3 := 0x0032441c
	32	[2994]	GETTABLE 	R3 R3 K18 ; R3 := R3["UITexture_Search"]
	33	[2994]	SETTABLE 	R2 K16 R3 ; R2["mAltButtonIcon"] := R3
	34	[2995]	GETUPVAL 	R2 U0 ; R2 := U0
	35	[2995]	SETTABLE 	R2 K19 K20 ; R2["mAltButtonVisible"] := true
	36	[2996]	GETUPVAL 	R2 U0 ; R2 := U0
	37	[2996]	SETTABLE 	R2 K21 K22 ; R2["mUnfocusedUnderlineColorOverride"] := nil
	38	[2997]	GETUPVAL 	R2 U0 ; R2 := U0
	39	[2997]	GETUPVAL 	R3 U0 ; R3 := U0
	40	[2997]	GETTABLE 	R3 R3 K24 ; R3 := R3["InputFieldTextChanged"]
	41	[2997]	SETTABLE 	R2 K23 R3 ; R2["BaseInputFieldTextChanged"] := R3
	42	[2998]	GETUPVAL 	R2 U0 ; R2 := U0
	43	[3012]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	44	[3012]	GETUPVAL 	R0 U1 ; R0 := U1
	45	[3012]	GETUPVAL 	R0 U2 ; R0 := U2
	46	[3012]	SETTABLE 	R2 K24 R3 ; R2["InputFieldTextChanged"] := R3
	47	[3013]	GETUPVAL 	R2 U0 ; R2 := U0
	48	[3013]	GETUPVAL 	R3 U0 ; R3 := U0
	49	[3013]	GETTABLE 	R3 R3 K26 ; R3 := R3["OnGamepadTransition"]
	50	[3013]	SETTABLE 	R2 K25 R3 ; R2["BaseOnGamepadTransition"] := R3
	51	[3014]	GETUPVAL 	R2 U0 ; R2 := U0
	52	[3020]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	53	[3020]	SETTABLE 	R2 K26 R3 ; R2["OnGamepadTransition"] := R3
	54	[3021]	GETUPVAL 	R2 U0 ; R2 := U0
	55	[3021]	SELF     	R2 R2 K27 ; R3 := R2; R2 := R2[0x6e6721d3]
	56	[3021]	LOADK    	R4 K2 ; R4 := "/Lotus/Language/Menu/SearchPrompt"
	57	[3021]	CALL     	R2 3 1 ; R2(R3,R4)
	58	[3022]	GETUPVAL 	R2 U0 ; R2 := U0
	59	[3022]	SELF     	R2 R2 K28 ; R3 := R2; R2 := R2[0x71e9ac81]
	60	[3022]	CALL     	R2 2 1 ; R2(R3)
	61	[3023]	RETURN   	R0 1 ; return 

function #69 <?:3025,3040> (92 instructions, 368 bytes at 000002111F429990)
0 params, 8 slots, 4 upvalues, 0 locals, 18 constants, 0 functions
	1	[3026]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[3026]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.Libs.TimerMgr"
	3	[3026]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3027]	GETTABLE 	R1 R0 K2 ; R1 := R0[0xde474187]
	5	[3027]	CALL     	R1 1 2 ; R1 := R1()
	6	[3027]	SETUPVAL 	R1 U0 ; U0 := R1
	7	[3029]	GETUPVAL 	R1 U2 ; R1 := U2
	8	[3029]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xae6791ba]
	9	[3029]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	10	[3029]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[3029]	SETUPVAL 	R1 U1 ; U1 := R1
	12	[3030]	GETUPVAL 	R1 U3 ; R1 := U3
	13	[3030]	CALL     	R1 1 2 ; R1 := R1()
	14	[3030]	TEST     	R1 0 ; if not R1 then PC := 28
	15	[3030]	JMP      	28 ; PC := 28
	16	[3031]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	17	[3031]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x67bc869f]
	18	[3031]	LOADK    	R3 K6 ; R3 := "Categories"
	19	[3031]	LOADK    	R4 := 1.000000
	20	[3031]	LOADK    	R5 := 100.000000
	21	[3031]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	22	[3032]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	23	[3032]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x67bc869f]
	24	[3032]	LOADK    	R3 K7 ; R3 := "SearchAndSort"
	25	[3032]	LOADK    	R4 := 1.000000
	26	[3032]	LOADK    	R5 := 87.000000
	27	[3032]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	28	[3034]	GETUPVAL 	R1 U1 ; R1 := U1
	29	[3034]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x20ff29f7]
	30	[3034]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	31	[3034]	LOADK    	R4 K6 ; R4 := "Categories"
	32	[3034]	NEWTABLE 	R5 2 0 ; R5 := {}
	33	[3034]	GETUPVAL 	R6 U1 ; R6 := U1
	34	[3034]	GETTABLE 	R6 R6 K9 ; R6 := R6["ANCHOR_V_CENTRE"]
	35	[3034]	GETUPVAL 	R7 U1 ; R7 := U1
	36	[3034]	GETTABLE 	R7 R7 K10 ; R7 := R7["ANCHOR_H_LEFT"]
	37	[3034]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	38	[3034]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	39	[3035]	GETUPVAL 	R1 U1 ; R1 := U1
	40	[3035]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x20ff29f7]
	41	[3035]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	42	[3035]	LOADK    	R4 K11 ; R4 := "InventoryGrid"
	43	[3035]	NEWTABLE 	R5 2 0 ; R5 := {}
	44	[3035]	GETUPVAL 	R6 U1 ; R6 := U1
	45	[3035]	GETTABLE 	R6 R6 K9 ; R6 := R6["ANCHOR_V_CENTRE"]
	46	[3035]	GETUPVAL 	R7 U1 ; R7 := U1
	47	[3035]	GETTABLE 	R7 R7 K10 ; R7 := R7["ANCHOR_H_LEFT"]
	48	[3035]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	49	[3035]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	50	[3036]	GETUPVAL 	R1 U1 ; R1 := U1
	51	[3036]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x20ff29f7]
	52	[3036]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	53	[3036]	LOADK    	R4 K12 ; R4 := "SellList"
	54	[3036]	NEWTABLE 	R5 2 0 ; R5 := {}
	55	[3036]	GETUPVAL 	R6 U1 ; R6 := U1
	56	[3036]	GETTABLE 	R6 R6 K9 ; R6 := R6["ANCHOR_V_CENTRE"]
	57	[3036]	GETUPVAL 	R7 U1 ; R7 := U1
	58	[3036]	GETTABLE 	R7 R7 K13 ; R7 := R7["ANCHOR_H_RIGHT"]
	59	[3036]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	60	[3036]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	61	[3037]	GETUPVAL 	R1 U1 ; R1 := U1
	62	[3037]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x20ff29f7]
	63	[3037]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	64	[3037]	LOADK    	R4 K14 ; R4 := "InventoryGridScrollBar"
	65	[3037]	NEWTABLE 	R5 2 0 ; R5 := {}
	66	[3037]	GETUPVAL 	R6 U1 ; R6 := U1
	67	[3037]	GETTABLE 	R6 R6 K9 ; R6 := R6["ANCHOR_V_CENTRE"]
	68	[3037]	GETUPVAL 	R7 U1 ; R7 := U1
	69	[3037]	GETTABLE 	R7 R7 K13 ; R7 := R7["ANCHOR_H_RIGHT"]
	70	[3037]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	71	[3037]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	72	[3038]	GETUPVAL 	R1 U1 ; R1 := U1
	73	[3038]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x20ff29f7]
	74	[3038]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	75	[3038]	LOADK    	R4 K7 ; R4 := "SearchAndSort"
	76	[3038]	NEWTABLE 	R5 2 0 ; R5 := {}
	77	[3038]	GETUPVAL 	R6 U1 ; R6 := U1
	78	[3038]	GETTABLE 	R6 R6 K9 ; R6 := R6["ANCHOR_V_CENTRE"]
	79	[3038]	GETUPVAL 	R7 U1 ; R7 := U1
	80	[3038]	GETTABLE 	R7 R7 K13 ; R7 := R7["ANCHOR_H_RIGHT"]
	81	[3038]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	82	[3038]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	83	[3039]	GETUPVAL 	R1 U1 ; R1 := U1
	84	[3039]	SELF     	R1 R1 K15 ; R2 := R1; R1 := R1[0xfaa69527]
	85	[3039]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	86	[3039]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0x6b837788]
	87	[3039]	CALL     	R3 2 2 ; R3 := R3(R4)
	88	[3039]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	89	[3039]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0xaf9fda9f]
	90	[3039]	CALL     	R4 2 0 ; R4,... := R4(R5)
	91	[3039]	CALL     	R1 0 1 ; R1(R2,...)
	92	[3040]	RETURN   	R0 1 ; return 

function #70 <?:3042,3492> (1457 instructions, 5828 bytes at 000002111F429E50)
0 params, 40 slots, 59 upvalues, 0 locals, 291 constants, 0 functions
	1	[3043]	LOADK    	R0 K0 ; R0 := "Inventory"
	2	[3044]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[3044]	GETTABLE 	R1 R1 K2 ; R1 := R1["SelectingEnemies"]
	4	[3044]	TEST     	R1 0 ; if not R1 then PC := 11
	5	[3044]	JMP      	11 ; PC := 11
	6	[3045]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[3045]	GETTABLE 	R1 R1 K3 ; R1 := R1["ENEMIES"]
	8	[3045]	SETUPVAL 	R1 U0 ; U0 := R1
	9	[3046]	LOADK    	R0 K4 ; R0 := "Selecting Enemies"
	10	[3046]	JMP      	149 ; PC := 149
	11	[3047]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	12	[3047]	GETGLOBAL	R2 K1 ; R2 := _T
	13	[3047]	GETTABLE 	R2 R2 K6 ; R2 := R2["SelectingFishManifest"]
	14	[3047]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[3047]	TEST     	R1 1 ; if R1 then PC := 22
	16	[3047]	JMP      	22 ; PC := 22
	17	[3048]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[3048]	GETTABLE 	R1 R1 K7 ; R1 := R1["FISH"]
	19	[3048]	SETUPVAL 	R1 U0 ; U0 := R1
	20	[3049]	LOADK    	R0 K8 ; R0 := "Selecting Fish (Fishmonger)"
	21	[3049]	JMP      	149 ; PC := 149
	22	[3050]	GETGLOBAL	R1 K1 ; R1 := _T
	23	[3050]	GETTABLE 	R1 R1 K9 ; R1 := R1["SellingTreasure"]
	24	[3050]	TEST     	R1 0 ; if not R1 then PC := 31
	25	[3050]	JMP      	31 ; PC := 31
	26	[3051]	GETUPVAL 	R1 U1 ; R1 := U1
	27	[3051]	GETTABLE 	R1 R1 K10 ; R1 := R1["TREASURE"]
	28	[3051]	SETUPVAL 	R1 U0 ; U0 := R1
	29	[3052]	LOADK    	R0 K11 ; R0 := "Selling Ayatan Treasures"
	30	[3052]	JMP      	149 ; PC := 149
	31	[3053]	GETGLOBAL	R1 K1 ; R1 := _T
	32	[3053]	GETTABLE 	R1 R1 K12 ; R1 := R1["SellingShipUnidentified"]
	33	[3053]	TEST     	R1 0 ; if not R1 then PC := 42
	34	[3053]	JMP      	42 ; PC := 42
	35	[3054]	GETUPVAL 	R1 U1 ; R1 := U1
	36	[3054]	GETTABLE 	R1 R1 K13 ; R1 := R1["SHIP_RAW"]
	37	[3054]	SETUPVAL 	R1 U0 ; U0 := R1
	38	[3055]	LOADK    	R0 K14 ; R0 := "Selling Railjack Raw"
	39	[3056]	GETGLOBAL	R1 K1 ; R1 := _T
	40	[3056]	SETTABLE 	R1 K12 K15 ; R1["SellingShipUnidentified"] := nil
	41	[3056]	JMP      	149 ; PC := 149
	42	[3057]	GETGLOBAL	R1 K1 ; R1 := _T
	43	[3057]	GETTABLE 	R1 R1 K16 ; R1 := R1["SellingShipWreckage"]
	44	[3057]	TEST     	R1 0 ; if not R1 then PC := 53
	45	[3057]	JMP      	53 ; PC := 53
	46	[3058]	GETUPVAL 	R1 U1 ; R1 := U1
	47	[3058]	GETTABLE 	R1 R1 K17 ; R1 := R1["SHIP_SCRAP"]
	48	[3058]	SETUPVAL 	R1 U0 ; U0 := R1
	49	[3059]	LOADK    	R0 K18 ; R0 := "Selling Railjack Wreckage"
	50	[3060]	GETGLOBAL	R1 K1 ; R1 := _T
	51	[3060]	SETTABLE 	R1 K16 K15 ; R1["SellingShipWreckage"] := nil
	52	[3060]	JMP      	149 ; PC := 149
	53	[3061]	GETGLOBAL	R1 K1 ; R1 := _T
	54	[3061]	GETTABLE 	R1 R1 K19 ; R1 := R1["SellingShipComponents"]
	55	[3061]	TEST     	R1 0 ; if not R1 then PC := 64
	56	[3061]	JMP      	64 ; PC := 64
	57	[3062]	GETUPVAL 	R1 U1 ; R1 := U1
	58	[3062]	GETTABLE 	R1 R1 K20 ; R1 := R1["SHIP_PARTS"]
	59	[3062]	SETUPVAL 	R1 U0 ; U0 := R1
	60	[3063]	LOADK    	R0 K21 ; R0 := "Selling Railjack Parts"
	61	[3064]	GETGLOBAL	R1 K1 ; R1 := _T
	62	[3064]	SETTABLE 	R1 K19 K15 ; R1["SellingShipComponents"] := nil
	63	[3064]	JMP      	149 ; PC := 149
	64	[3065]	GETGLOBAL	R1 K1 ; R1 := _T
	65	[3065]	GETTABLE 	R1 R1 K22 ; R1 := R1["SellingPrimeParts"]
	66	[3065]	TEST     	R1 0 ; if not R1 then PC := 73
	67	[3065]	JMP      	73 ; PC := 73
	68	[3066]	GETUPVAL 	R1 U1 ; R1 := U1
	69	[3066]	GETTABLE 	R1 R1 K23 ; R1 := R1["PRIMEPARTS"]
	70	[3066]	SETUPVAL 	R1 U0 ; U0 := R1
	71	[3067]	LOADK    	R0 K24 ; R0 := "Selling Prime Parts"
	72	[3067]	JMP      	149 ; PC := 149
	73	[3068]	GETGLOBAL	R1 K1 ; R1 := _T
	74	[3068]	GETTABLE 	R1 R1 K25 ; R1 := R1["InvShardConvertMode"]
	75	[3068]	EQ       	1 R1 K15 ; if R1 == nil then PC := 84
	76	[3068]	JMP      	84 ; PC := 84
	77	[3069]	GETGLOBAL	R1 K1 ; R1 := _T
	78	[3069]	SETTABLE 	R1 K25 K15 ; R1["InvShardConvertMode"] := nil
	79	[3070]	GETUPVAL 	R1 U1 ; R1 := U1
	80	[3070]	GETTABLE 	R1 R1 K26 ; R1 := R1["SHARDS"]
	81	[3070]	SETUPVAL 	R1 U0 ; U0 := R1
	82	[3071]	LOADK    	R0 K27 ; R0 := "Converting Shards"
	83	[3071]	JMP      	149 ; PC := 149
	84	[3072]	GETGLOBAL	R1 K1 ; R1 := _T
	85	[3072]	GETTABLE 	R1 R1 K28 ; R1 := R1["InvDecoDonateMode"]
	86	[3072]	EQ       	1 R1 K15 ; if R1 == nil then PC := 95
	87	[3072]	JMP      	95 ; PC := 95
	88	[3073]	GETGLOBAL	R1 K1 ; R1 := _T
	89	[3073]	SETTABLE 	R1 K28 K15 ; R1["InvDecoDonateMode"] := nil
	90	[3074]	GETUPVAL 	R1 U1 ; R1 := U1
	91	[3074]	GETTABLE 	R1 R1 K29 ; R1 := R1["DECODONATE"]
	92	[3074]	SETUPVAL 	R1 U0 ; U0 := R1
	93	[3075]	LOADK    	R0 K30 ; R0 := "Donating Decorations"
	94	[3075]	JMP      	149 ; PC := 149
	95	[3076]	GETGLOBAL	R1 K1 ; R1 := _T
	96	[3076]	GETTABLE 	R1 R1 K31 ; R1 := R1["InvResDonateMode"]
	97	[3076]	EQ       	1 R1 K15 ; if R1 == nil then PC := 106
	98	[3076]	JMP      	106 ; PC := 106
	99	[3077]	GETGLOBAL	R1 K1 ; R1 := _T
	100	[3077]	SETTABLE 	R1 K31 K15 ; R1["InvResDonateMode"] := nil
	101	[3078]	GETUPVAL 	R1 U1 ; R1 := U1
	102	[3078]	GETTABLE 	R1 R1 K32 ; R1 := R1["RESDONATE"]
	103	[3078]	SETUPVAL 	R1 U0 ; U0 := R1
	104	[3079]	LOADK    	R0 K33 ; R0 := "Donating Resources"
	105	[3079]	JMP      	149 ; PC := 149
	106	[3080]	GETGLOBAL	R1 K1 ; R1 := _T
	107	[3080]	GETTABLE 	R1 R1 K34 ; R1 := R1["InvTradingInfo"]
	108	[3080]	EQ       	1 R1 K15 ; if R1 == nil then PC := 139
	109	[3080]	JMP      	139 ; PC := 139
	110	[3081]	GETUPVAL 	R1 U2 ; R1 := U2
	111	[3081]	GETTABLE 	R1 R1 K35 ; R1 := R1[0x06d055f9]
	112	[3081]	GETGLOBAL	R2 K1 ; R2 := _T
	113	[3081]	GETTABLE 	R2 R2 K34 ; R2 := R2["InvTradingInfo"]
	114	[3081]	GETTABLE 	R2 R2 K36 ; R2 := R2["Items"]
	115	[3081]	GETUPVAL 	R3 U1 ; R3 := U1
	116	[3081]	GETTABLE 	R3 R3 K37 ; R3 := R3["TRADE_ITEMS"]
	117	[3081]	GETUPVAL 	R4 U1 ; R4 := U1
	118	[3081]	GETTABLE 	R4 R4 K38 ; R4 := R4["TRADE_MODS"]
	119	[3081]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	120	[3081]	SETUPVAL 	R1 U0 ; U0 := R1
	121	[3082]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	122	[3082]	GETGLOBAL	R2 K39 ; R2 := 0xbe190284
	123	[3082]	SELF     	R2 R2 K40 ; R3 := R2; R2 := R2[0x4875f5df]
	124	[3082]	CALL     	R2 2 0 ; R2,... := R2(R3)
	125	[3082]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	126	[3082]	TEST     	R1 1 ; if R1 then PC := 137
	127	[3082]	JMP      	137 ; PC := 137
	128	[3082]	GETGLOBAL	R1 K39 ; R1 := 0xbe190284
	129	[3082]	SELF     	R1 R1 K40 ; R2 := R1; R1 := R1[0x4875f5df]
	130	[3082]	CALL     	R1 2 2 ; R1 := R1(R2)
	131	[3082]	SELF     	R1 R1 K41 ; R2 := R1; R1 := R1[0xf3bd728c]
	132	[3082]	CALL     	R1 2 2 ; R1 := R1(R2)
	133	[3082]	TEST     	R1 0 ; if not R1 then PC := 137
	134	[3082]	JMP      	137 ; PC := 137
	135	[3083]	OP_LOADBOOL	R1 1 0 ; R1 := true
	136	[3083]	SETUPVAL 	R1 U3 ; U3 := R1
	137	[3085]	LOADK    	R0 K42 ; R0 := "Selecting items to trade"
	138	[3085]	JMP      	149 ; PC := 149
	139	[3086]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	140	[3086]	GETGLOBAL	R2 K1 ; R2 := _T
	141	[3086]	GETTABLE 	R2 R2 K43 ; R2 := R2["SyndicateInvInfo"]
	142	[3086]	CALL     	R1 2 2 ; R1 := R1(R2)
	143	[3086]	TEST     	R1 1 ; if R1 then PC := 149
	144	[3086]	JMP      	149 ; PC := 149
	145	[3087]	GETUPVAL 	R1 U1 ; R1 := U1
	146	[3087]	GETTABLE 	R1 R1 K44 ; R1 := R1["SYNDDONATE"]
	147	[3087]	SETUPVAL 	R1 U0 ; U0 := R1
	148	[3088]	LOADK    	R0 K45 ; R0 := "Donating for Standing"
	149	[3090]	GETGLOBAL	R1 K46 ; R1 := 0x3d106989
	150	[3090]	LOADK    	R2 K47 ; R2 := "InventoryTest - CurrMode: "
	151	[3090]	MOVE     	R3 R0 ; R3 := R0
	152	[3090]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	153	[3090]	CALL     	R1 2 1 ; R1(R2)
	154	[3092]	GETUPVAL 	R1 U4 ; R1 := U4
	155	[3092]	GETGLOBAL	R2 K39 ; R2 := 0xbe190284
	156	[3092]	SELF     	R2 R2 K49 ; R3 := R2; R2 := R2[0xf230485c]
	157	[3092]	CALL     	R2 2 2 ; R2 := R2(R3)
	158	[3092]	SETTABLE 	R1 K48 R2 ; R1[0x00000000] := R2
	159	[3093]	GETUPVAL 	R1 U4 ; R1 := U4
	160	[3093]	GETTABLE 	R1 R1 K48 ; R1 := R1["PauseState"]
	161	[3093]	TEST     	R1 1 ; if R1 then PC := 167
	162	[3093]	JMP      	167 ; PC := 167
	163	[3094]	GETGLOBAL	R1 K39 ; R1 := 0xbe190284
	164	[3094]	SELF     	R1 R1 K50 ; R2 := R1; R1 := R1[0xc02f2cb8]
	165	[3094]	OP_LOADBOOL	R3 1 0 ; R3 := true
	166	[3094]	CALL     	R1 3 1 ; R1(R2,R3)
	167	[3098]	GETUPVAL 	R1 U0 ; R1 := U0
	168	[3098]	GETUPVAL 	R2 U1 ; R2 := U1
	169	[3098]	GETTABLE 	R2 R2 K38 ; R2 := R2["TRADE_MODS"]
	170	[3098]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 177
	171	[3098]	JMP      	177 ; PC := 177
	172	[3098]	GETUPVAL 	R1 U0 ; R1 := U0
	173	[3098]	GETUPVAL 	R2 U1 ; R2 := U1
	174	[3098]	GETTABLE 	R2 R2 K37 ; R2 := R2["TRADE_ITEMS"]
	175	[3098]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 186
	176	[3098]	JMP      	186 ; PC := 186
	177	[3099]	GETGLOBAL	R1 K51 ; R1 := 0x25d99d89
	178	[3099]	SELF     	R1 R1 K52 ; R2 := R1; R1 := R1[0x25a6e75e]
	179	[3099]	CALL     	R1 2 2 ; R1 := R1(R2)
	180	[3100]	GETUPVAL 	R2 U5 ; R2 := U5
	181	[3100]	GETTABLE 	R2 R2 K53 ; R2 := R2[0x3ed3b704]
	182	[3100]	GETUPVAL 	R3 U6 ; R3 := U6
	183	[3100]	MOVE     	R4 R1 ; R4 := R1
	184	[3100]	LOADK    	R5 := 3.000000
	185	[3100]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	186	[3103]	GETUPVAL 	R2 U2 ; R2 := U2
	187	[3103]	GETTABLE 	R2 R2 K54 ; R2 := R2[0x659d451f]
	188	[3103]	GETGLOBAL	R3 K55 ; R3 := 0x0032441c
	189	[3103]	GETTABLE 	R3 R3 K56 ; R3 := R3["UISound_Select"]
	190	[3103]	CALL     	R2 2 1 ; R2(R3)
	191	[3104]	GETUPVAL 	R2 U2 ; R2 := U2
	192	[3104]	GETTABLE 	R2 R2 K54 ; R2 := R2[0x659d451f]
	193	[3104]	GETGLOBAL	R3 K55 ; R3 := 0x0032441c
	194	[3104]	GETTABLE 	R3 R3 K57 ; R3 := R3["UISound_DialogOpen"]
	195	[3104]	CALL     	R2 2 1 ; R2(R3)
	196	[3105]	GETUPVAL 	R2 U2 ; R2 := U2
	197	[3105]	GETTABLE 	R2 R2 K54 ; R2 := R2[0x659d451f]
	198	[3105]	GETGLOBAL	R3 K55 ; R3 := 0x0032441c
	199	[3105]	GETTABLE 	R3 R3 K58 ; R3 := R3["UISound_GridOpen"]
	200	[3105]	CALL     	R2 2 1 ; R2(R3)
	201	[3107]	LOADK    	R2 K59 ; R2 := "/Lotus/Language/Menu/CreditsWithIcon"
	202	[3107]	SETUPVAL 	R2 U7 ; U7 := R2
	203	[3108]	LOADK    	R2 K60 ; R2 := "/Lotus/Language/Menu/ItemInventory_SellTotal"
	204	[3108]	SETUPVAL 	R2 U8 ; U8 := R2
	205	[3109]	LOADK    	R2 K61 ; R2 := "/Lotus/Language/Menu/Store_Total"
	206	[3109]	SETUPVAL 	R2 U9 ; U9 := R2
	207	[3110]	GETUPVAL 	R2 U0 ; R2 := U0
	208	[3110]	GETUPVAL 	R3 U1 ; R3 := U1
	209	[3110]	GETTABLE 	R3 R3 K7 ; R3 := R3["FISH"]
	210	[3110]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 222
	211	[3110]	JMP      	222 ; PC := 222
	212	[3111]	LOADK    	R2 K62 ; R2 := "/Lotus/Language/Menu/ReputationWithIcon"
	213	[3111]	SETUPVAL 	R2 U7 ; U7 := R2
	214	[3112]	GETGLOBAL	R2 K1 ; R2 := _T
	215	[3112]	GETTABLE 	R2 R2 K63 ; R2 := R2["FishInvInfo"]
	216	[3112]	GETTABLE 	R2 R2 K64 ; R2 := R2["ShowRep"]
	217	[3112]	TEST     	R2 0 ; if not R2 then PC := 286
	218	[3112]	JMP      	286 ; PC := 286
	219	[3113]	LOADK    	R2 K65 ; R2 := "/Lotus/Language/OstronCrafting/Fishmonger_StandingTotal"
	220	[3113]	SETUPVAL 	R2 U8 ; U8 := R2
	221	[3114]	JMP      	286 ; PC := 286
	222	[3115]	GETUPVAL 	R2 U0 ; R2 := U0
	223	[3115]	GETUPVAL 	R3 U1 ; R3 := U1
	224	[3115]	GETTABLE 	R3 R3 K23 ; R3 := R3["PRIMEPARTS"]
	225	[3115]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 230
	226	[3115]	JMP      	230 ; PC := 230
	227	[3116]	LOADK    	R2 K66 ; R2 := "/Lotus/Language/Menu/PrimeBucksWithIcon"
	228	[3116]	SETUPVAL 	R2 U7 ; U7 := R2
	229	[3116]	JMP      	286 ; PC := 286
	230	[3117]	GETUPVAL 	R2 U0 ; R2 := U0
	231	[3117]	GETUPVAL 	R3 U1 ; R3 := U1
	232	[3117]	GETTABLE 	R3 R3 K10 ; R3 := R3["TREASURE"]
	233	[3117]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 245
	234	[3117]	JMP      	245 ; PC := 245
	235	[3117]	GETUPVAL 	R2 U0 ; R2 := U0
	236	[3117]	GETUPVAL 	R3 U1 ; R3 := U1
	237	[3117]	GETTABLE 	R3 R3 K17 ; R3 := R3["SHIP_SCRAP"]
	238	[3117]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 245
	239	[3117]	JMP      	245 ; PC := 245
	240	[3117]	GETUPVAL 	R2 U0 ; R2 := U0
	241	[3117]	GETUPVAL 	R3 U1 ; R3 := U1
	242	[3117]	GETTABLE 	R3 R3 K13 ; R3 := R3["SHIP_RAW"]
	243	[3117]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 248
	244	[3117]	JMP      	248 ; PC := 248
	245	[3118]	LOADK    	R2 K67 ; R2 := "/Lotus/Language/Menu/FusionPointsWithIcon"
	246	[3118]	SETUPVAL 	R2 U7 ; U7 := R2
	247	[3118]	JMP      	286 ; PC := 286
	248	[3119]	GETUPVAL 	R2 U0 ; R2 := U0
	249	[3119]	GETUPVAL 	R3 U1 ; R3 := U1
	250	[3119]	GETTABLE 	R3 R3 K20 ; R3 := R3["SHIP_PARTS"]
	251	[3119]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 256
	252	[3119]	JMP      	256 ; PC := 256
	253	[3120]	LOADK    	R2 K68 ; R2 := ""
	254	[3120]	SETUPVAL 	R2 U7 ; U7 := R2
	255	[3120]	JMP      	286 ; PC := 286
	256	[3121]	GETUPVAL 	R2 U0 ; R2 := U0
	257	[3121]	GETUPVAL 	R3 U1 ; R3 := U1
	258	[3121]	GETTABLE 	R3 R3 K26 ; R3 := R3["SHARDS"]
	259	[3121]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 264
	260	[3121]	JMP      	264 ; PC := 264
	261	[3122]	LOADK    	R2 K69 ; R2 := "/Lotus/Language/Menu/FocusPointsWithIcon"
	262	[3122]	SETUPVAL 	R2 U7 ; U7 := R2
	263	[3122]	JMP      	286 ; PC := 286
	264	[3123]	GETUPVAL 	R2 U0 ; R2 := U0
	265	[3123]	GETUPVAL 	R3 U1 ; R3 := U1
	266	[3123]	GETTABLE 	R3 R3 K3 ; R3 := R3["ENEMIES"]
	267	[3123]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 272
	268	[3123]	JMP      	272 ; PC := 272
	269	[3124]	LOADK    	R2 K70 ; R2 := "/Lotus/Language/Menu/ItemInventory_EnemyTitle"
	270	[3124]	SETUPVAL 	R2 U9 ; U9 := R2
	271	[3124]	JMP      	286 ; PC := 286
	272	[3125]	GETUPVAL 	R2 U0 ; R2 := U0
	273	[3125]	GETUPVAL 	R3 U1 ; R3 := U1
	274	[3125]	GETTABLE 	R3 R3 K44 ; R3 := R3["SYNDDONATE"]
	275	[3125]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 280
	276	[3125]	JMP      	280 ; PC := 280
	277	[3126]	LOADK    	R2 K62 ; R2 := "/Lotus/Language/Menu/ReputationWithIcon"
	278	[3126]	SETUPVAL 	R2 U7 ; U7 := R2
	279	[3126]	JMP      	286 ; PC := 286
	280	[3127]	GETUPVAL 	R2 U10 ; R2 := U10
	281	[3127]	CALL     	R2 1 2 ; R2 := R2()
	282	[3127]	TEST     	R2 0 ; if not R2 then PC := 286
	283	[3127]	JMP      	286 ; PC := 286
	284	[3128]	LOADK    	R2 K71 ; R2 := "/Lotus/Language/Dojo/Trade_OfferedLabel"
	285	[3128]	SETUPVAL 	R2 U9 ; U9 := R2
	286	[3131]	GETUPVAL 	R2 U0 ; R2 := U0
	287	[3131]	GETUPVAL 	R3 U1 ; R3 := U1
	288	[3131]	GETTABLE 	R3 R3 K17 ; R3 := R3["SHIP_SCRAP"]
	289	[3131]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 297
	290	[3131]	JMP      	297 ; PC := 297
	291	[3134]	GETUPVAL 	R2 U11 ; R2 := U11
	292	[3134]	GETTABLE 	R2 R2 K72 ; R2 := R2[0x37d68e16]
	293	[3134]	OP_LOADBOOL	R3 0 0 ; R3 := false
	294	[3134]	GETUPVAL 	R4 U4 ; R4 := U4
	295	[3134]	GETTABLE 	R4 R4 K73 ; R4 := R4["ScreenVis"]
	296	[3134]	CALL     	R2 3 1 ; R2(R3,R4)
	297	[3137]	GETUPVAL 	R2 U12 ; R2 := U12
	298	[3137]	GETTABLE 	R2 R2 K74 ; R2 := R2[0x6ef45ebc]
	299	[3137]	CALL     	R2 1 2 ; R2 := R2()
	300	[3138]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	301	[3138]	MOVE     	R4 R2 ; R4 := R2
	302	[3138]	CALL     	R3 2 2 ; R3 := R3(R4)
	303	[3138]	TEST     	R3 1 ; if R3 then PC := 314
	304	[3138]	JMP      	314 ; PC := 314
	305	[3138]	SELF     	R3 R2 K75 ; R4 := R2; R3 := R2[0x7362acd4]
	306	[3138]	CALL     	R3 2 2 ; R3 := R3(R4)
	307	[3138]	TEST     	R3 0 ; if not R3 then PC := 314
	308	[3138]	JMP      	314 ; PC := 314
	309	[3139]	SELF     	R3 R2 K76 ; R4 := R2; R3 := R2[0x044b7be8]
	310	[3139]	OP_LOADBOOL	R5 0 0 ; R5 := false
	311	[3139]	CALL     	R3 3 1 ; R3(R4,R5)
	312	[3140]	GETUPVAL 	R3 U4 ; R3 := U4
	313	[3140]	SETTABLE 	R3 K77 K78 ; R3["AvatarDrawOnTop"] := true
	314	[3143]	GETUPVAL 	R3 U13 ; R3 := U13
	315	[3143]	LOADK    	R4 := 0.000000
	316	[3143]	CALL     	R3 2 1 ; R3(R4)
	317	[3145]	GETUPVAL 	R3 U14 ; R3 := U14
	318	[3145]	TEST     	R3 0 ; if not R3 then PC := 326
	319	[3145]	JMP      	326 ; PC := 326
	320	[3146]	GETGLOBAL	R3 K79 ; R3 := 0xae91e43b
	321	[3146]	SELF     	R3 R3 K80 ; R4 := R3; R3 := R3[0x67bc869f]
	322	[3146]	LOADK    	R5 K81 ; R5 := "SellList.BottomLine"
	323	[3146]	LOADK    	R6 := 1.000000
	324	[3146]	LOADK    	R7 K82 ; R7 := 564.500000
	325	[3146]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	326	[3149]	GETUPVAL 	R3 U0 ; R3 := U0
	327	[3149]	GETUPVAL 	R4 U1 ; R4 := U1
	328	[3149]	GETTABLE 	R4 R4 K29 ; R4 := R4["DECODONATE"]
	329	[3149]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 335
	330	[3149]	JMP      	335 ; PC := 335
	331	[3149]	GETUPVAL 	R3 U10 ; R3 := U10
	332	[3149]	CALL     	R3 1 2 ; R3 := R3()
	333	[3149]	TEST     	R3 0 ; if not R3 then PC := 339
	334	[3149]	JMP      	339 ; PC := 339
	335	[3151]	GETUPVAL 	R3 U16 ; R3 := U16
	336	[3151]	GETTABLE 	R3 R3 K83 ; R3 := R3[0xf1b3fb6d]
	337	[3151]	CALL     	R3 1 2 ; R3 := R3()
	338	[3151]	SETUPVAL 	R3 U15 ; U15 := R3
	339	[3154]	GETGLOBAL	R3 K79 ; R3 := 0xae91e43b
	340	[3154]	SELF     	R3 R3 K84 ; R4 := R3; R3 := R3[0xaade900e]
	341	[3154]	LOADK    	R5 K85 ; R5 := "SellList.OptionalButton1"
	342	[3154]	LOADK    	R6 := 11.000000
	343	[3154]	GETUPVAL 	R7 U0 ; R7 := U0
	344	[3154]	GETUPVAL 	R8 U1 ; R8 := U1
	345	[3154]	GETTABLE 	R8 R8 K3 ; R8 := R8["ENEMIES"]
	346	[3154]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 349
	347	[3154]	JMP      	349 ; PC := 349
	348	[3154]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 349
	349	[3154]	OP_LOADBOOL	R7 1 0 ; R7 := true
	350	[3154]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	351	[3155]	GETGLOBAL	R3 K79 ; R3 := 0xae91e43b
	352	[3155]	SELF     	R3 R3 K86 ; R4 := R3; R3 := R3[0x5f56eeab]
	353	[3155]	LOADK    	R5 K87 ; R5 := "SellList.Total"
	354	[3155]	LOADK    	R6 := 38.000000
	355	[3155]	LOADK    	R7 K88 ; R7 := "center"
	356	[3155]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	357	[3156]	GETGLOBAL	R3 K79 ; R3 := 0xae91e43b
	358	[3156]	SELF     	R3 R3 K86 ; R4 := R3; R3 := R3[0x5f56eeab]
	359	[3156]	LOADK    	R5 K89 ; R5 := "SellList.Amount"
	360	[3156]	LOADK    	R6 := 38.000000
	361	[3156]	LOADK    	R7 K88 ; R7 := "center"
	362	[3156]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	363	[3157]	GETGLOBAL	R3 K79 ; R3 := 0xae91e43b
	364	[3157]	SELF     	R3 R3 K84 ; R4 := R3; R3 := R3[0xaade900e]
	365	[3157]	LOADK    	R5 K90 ; R5 := "SellList.List.Item"
	366	[3157]	LOADK    	R6 := 11.000000
	367	[3157]	GETUPVAL 	R7 U10 ; R7 := U10
	368	[3157]	CALL     	R7 1 2 ; R7 := R7()
	369	[3157]	NOT      	R7 R7 ; R7 := not R7
	370	[3157]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	371	[3158]	GETGLOBAL	R3 K79 ; R3 := 0xae91e43b
	372	[3158]	SELF     	R3 R3 K84 ; R4 := R3; R3 := R3[0xaade900e]
	373	[3158]	LOADK    	R5 K91 ; R5 := "SellList.GridItem"
	374	[3158]	LOADK    	R6 := 11.000000
	375	[3158]	GETUPVAL 	R7 U10 ; R7 := U10
	376	[3158]	CALL     	R7 1 0 ; R7,... := R7()
	377	[3158]	CALL     	R3 0 1 ; R3(R4,...)
	378	[3160]	GETUPVAL 	R3 U17 ; R3 := U17
	379	[3160]	GETTABLE 	R3 R3 K92 ; R3 := R3[0x200054f6]
	380	[3160]	GETGLOBAL	R4 K93 ; R4 := 0x2d3d0773
	381	[3160]	OP_LOADBOOL	R5 0 0 ; R5 := false
	382	[3160]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	383	[3161]	GETGLOBAL	R4 K1 ; R4 := _T
	384	[3161]	GETTABLE 	R4 R4 K94 ; R4 := R4["Arsenal_ForceUmbraUnlock"]
	385	[3161]	TEST     	R4 1 ; if R4 then PC := 388
	386	[3161]	JMP      	388 ; PC := 388
	387	[3161]	MOVE     	R4 R3 ; R4 := R3
	388	[3161]	SETUPVAL 	R4 U18 ; U18 := R4
	389	[3162]	GETGLOBAL	R4 K1 ; R4 := _T
	390	[3162]	GETTABLE 	R4 R4 K95 ; R4 := R4["Arsenal_ForceUmbraSwordUnlock"]
	391	[3162]	TEST     	R4 1 ; if R4 then PC := 394
	392	[3162]	JMP      	394 ; PC := 394
	393	[3162]	MOVE     	R4 R3 ; R4 := R3
	394	[3162]	SETUPVAL 	R4 U19 ; U19 := R4
	395	[3164]	OP_LOADBOOL	R4 0 0 ; R4 := false
	396	[3164]	SETUPVAL 	R4 U20 ; U20 := R4
	397	[3165]	OP_LOADBOOL	R4 0 0 ; R4 := false
	398	[3165]	SETUPVAL 	R4 U21 ; U21 := R4
	399	[3166]	GETGLOBAL	R4 K79 ; R4 := 0xae91e43b
	400	[3166]	SELF     	R4 R4 K96 ; R5 := R4; R4 := R4[0x58bec6d6]
	401	[3166]	LOADK    	R6 := 0.000000
	402	[3166]	CALL     	R4 3 1 ; R4(R5,R6)
	403	[3168]	GETGLOBAL	R4 K97 ; R4 := 0x9ba7909f
	404	[3168]	SELF     	R4 R4 K98 ; R5 := R4; R4 := R4[0x7e17ae26]
	405	[3168]	LOADK    	R6 K99 ; R6 := "DisplayInWorldText"
	406	[3168]	LOADK    	R7 K100 ; R7 := "false"
	407	[3168]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	408	[3170]	GETUPVAL 	R4 U0 ; R4 := U0
	409	[3170]	GETUPVAL 	R5 U1 ; R5 := U1
	410	[3170]	GETTABLE 	R5 R5 K44 ; R5 := R5["SYNDDONATE"]
	411	[3170]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 423
	412	[3170]	JMP      	423 ; PC := 423
	413	[3170]	GETUPVAL 	R4 U0 ; R4 := U0
	414	[3170]	GETUPVAL 	R5 U1 ; R5 := U1
	415	[3170]	GETTABLE 	R5 R5 K7 ; R5 := R5["FISH"]
	416	[3170]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 809
	417	[3170]	JMP      	809 ; PC := 809
	418	[3170]	GETGLOBAL	R4 K1 ; R4 := _T
	419	[3170]	GETTABLE 	R4 R4 K63 ; R4 := R4["FishInvInfo"]
	420	[3170]	GETTABLE 	R4 R4 K64 ; R4 := R4["ShowRep"]
	421	[3170]	TEST     	R4 0 ; if not R4 then PC := 809
	422	[3170]	JMP      	809 ; PC := 809
	423	[3171]	GETGLOBAL	R4 K1 ; R4 := _T
	424	[3171]	GETTABLE 	R4 R4 K43 ; R4 := R4["SyndicateInvInfo"]
	425	[3171]	EQ       	1 R4 K15 ; if R4 == nil then PC := 827
	426	[3171]	JMP      	827 ; PC := 827
	427	[3173]	GETGLOBAL	R4 K1 ; R4 := _T
	428	[3173]	GETTABLE 	R4 R4 K43 ; R4 := R4["SyndicateInvInfo"]
	429	[3173]	GETTABLE 	R4 R4 K101 ; R4 := R4["Syndicate"]
	430	[3174]	GETUPVAL 	R5 U12 ; R5 := U12
	431	[3174]	GETTABLE 	R5 R5 K102 ; R5 := R5[0xe6b719a2]
	432	[3174]	CALL     	R5 1 2 ; R5 := R5()
	433	[3176]	GETUPVAL 	R6 U22 ; R6 := U22
	434	[3176]	GETUPVAL 	R7 U23 ; R7 := U23
	435	[3176]	GETTABLE 	R7 R7 K104 ; R7 := R7[0xae6791ba]
	436	[3176]	GETGLOBAL	R8 K79 ; R8 := 0xae91e43b
	437	[3176]	LOADK    	R9 K105 ; R9 := "SellList.SyndicateInfo"
	438	[3176]	LOADK    	R10 K68 ; R10 := ""
	439	[3176]	LOADNIL  	R11 R11 ; R11 := nil
	440	[3176]	GETGLOBAL	R12 K106 ; R12 := 0x2da9721a
	441	[3176]	LOADNIL  	R13 R15 ; R13 := R14 := R15 := nil
	442	[3176]	CALL     	R7 9 2 ; R7 := R7(R8,R9,R10,R11,R12,R13,R14,R15)
	443	[3176]	SETTABLE 	R6 K103 R7 ; R6["SyndicateInfo"] := R7
	444	[3177]	GETUPVAL 	R6 U22 ; R6 := U22
	445	[3177]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	446	[3177]	SETTABLE 	R6 K107 K78 ; R6["mSkipResize"] := true
	447	[3178]	GETUPVAL 	R6 U22 ; R6 := U22
	448	[3178]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	449	[3178]	SETTABLE 	R6 K108 K109 ; R6["mVerticalTextOffset"] := 0.150000
	450	[3179]	GETUPVAL 	R6 U22 ; R6 := U22
	451	[3179]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	452	[3179]	SETTABLE 	R6 K110 K111 ; R6["mBackerEdgeAlpha"] := 0.300000
	453	[3180]	GETUPVAL 	R6 U22 ; R6 := U22
	454	[3180]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	455	[3180]	SETTABLE 	R6 K112 K78 ; R6["mToUpper"] := true
	456	[3181]	GETUPVAL 	R6 U22 ; R6 := U22
	457	[3181]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	458	[3181]	SETTABLE 	R6 K113 K114 ; R6["mIconSize"] := 64.000000
	459	[3182]	GETUPVAL 	R6 U22 ; R6 := U22
	460	[3182]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	461	[3182]	SETTABLE 	R6 K115 K116 ; R6["mIconBorderSize"] := 80.000000
	462	[3183]	GETUPVAL 	R6 U22 ; R6 := U22
	463	[3183]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	464	[3183]	SETTABLE 	R6 K117 K118 ; R6["mIconPaddingX"] := -4.000000
	465	[3184]	GETUPVAL 	R6 U22 ; R6 := U22
	466	[3184]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	467	[3184]	SETTABLE 	R6 K119 K118 ; R6["mIconPaddingY"] := -4.000000
	468	[3185]	GETUPVAL 	R6 U22 ; R6 := U22
	469	[3185]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	470	[3185]	SETTABLE 	R6 K120 K121 ; R6["mIconToTextPadding"] := 106.000000
	471	[3186]	GETUPVAL 	R6 U22 ; R6 := U22
	472	[3186]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	473	[3186]	SETTABLE 	R6 K122 K111 ; R6["mBackerIconAlpha"] := 0.300000
	474	[3187]	GETUPVAL 	R6 U22 ; R6 := U22
	475	[3187]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	476	[3187]	SETTABLE 	R6 K123 K124 ; R6["mBackerAlpha"] := 0.900000
	477	[3188]	GETUPVAL 	R6 U22 ; R6 := U22
	478	[3188]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	479	[3188]	SETTABLE 	R6 K125 K116 ; R6["mUnfocusedShadeAlpha"] := 80.000000
	480	[3189]	GETUPVAL 	R6 U22 ; R6 := U22
	481	[3189]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	482	[3189]	SETTABLE 	R6 K126 K78 ; R6["mShowIconHighlight"] := true
	483	[3190]	GETUPVAL 	R6 U22 ; R6 := U22
	484	[3190]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	485	[3190]	SELF     	R6 R6 K127 ; R7 := R6; R6 := R6[0x8d77b2b2]
	486	[3190]	LOADK    	R8 := 370.000000
	487	[3190]	CALL     	R6 3 1 ; R6(R7,R8)
	488	[3191]	GETUPVAL 	R6 U22 ; R6 := U22
	489	[3191]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	490	[3191]	SETTABLE 	R6 K128 K78 ; R6["mExtendedProgressBar"] := true
	491	[3192]	GETUPVAL 	R6 U22 ; R6 := U22
	492	[3192]	GETTABLE 	R6 R6 K103 ; R6 := R6["SyndicateInfo"]
	493	[3192]	SETTABLE 	R6 K129 K78 ; R6["mSeamlessProgressBar"] := true
	494	[3194]	SELF     	R6 R4 K130 ; R7 := R4; R6 := R4[0x056dcf06]
	495	[3194]	CALL     	R6 2 2 ; R6 := R6(R7)
	496	[3195]	GETUPVAL 	R7 U22 ; R7 := U22
	497	[3195]	GETTABLE 	R7 R7 K103 ; R7 := R7["SyndicateInfo"]
	498	[3195]	SELF     	R8 R4 K132 ; R9 := R4; R8 := R4[0x5660f6f0]
	499	[3195]	CALL     	R8 2 2 ; R8 := R8(R9)
	500	[3195]	SETTABLE 	R7 K131 R8 ; R7["mIconColor"] := R8
	501	[3196]	SELF     	R7 R4 K133 ; R8 := R4; R7 := R4[0xf36b7a3d]
	502	[3196]	CALL     	R7 2 2 ; R7 := R7(R8)
	503	[3197]	LOADK    	R8 := 1.500000
	504	[3198]	GETUPVAL 	R9 U22 ; R9 := U22
	505	[3198]	GETTABLE 	R9 R9 K103 ; R9 := R9["SyndicateInfo"]
	506	[3198]	GETGLOBAL	R10 K135 ; R10 := 0x60130201
	507	[3198]	GETTABLE 	R11 R7 K136 ; R11 := R7["red"]
	508	[3198]	DIV      	R11 R11 R8 ; R11 := R11 / R8
	509	[3198]	GETTABLE 	R12 R7 K137 ; R12 := R7["green"]
	510	[3198]	DIV      	R12 R12 R8 ; R12 := R12 / R8
	511	[3198]	GETTABLE 	R13 R7 K138 ; R13 := R7["blue"]
	512	[3198]	DIV      	R13 R13 R8 ; R13 := R13 / R8
	513	[3198]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	514	[3198]	SETTABLE 	R9 K134 R10 ; R9["mIconBgColor"] := R10
	515	[3199]	GETUPVAL 	R9 U22 ; R9 := U22
	516	[3199]	GETTABLE 	R9 R9 K103 ; R9 := R9["SyndicateInfo"]
	517	[3199]	SETTABLE 	R9 K139 R6 ; R9["mIconBgExtra"] := R6
	518	[3201]	SELF     	R9 R6 K140 ; R10 := R6; R9 := R6[0xed4e0128]
	519	[3201]	CALL     	R9 2 2 ; R9 := R9(R10)
	520	[3201]	GETTABLE 	R9 R5 R9 ; R9 := R5[R9]
	521	[3202]	TEST     	R9 0 ; if not R9 then PC := 557
	522	[3202]	JMP      	557 ; PC := 557
	523	[3203]	GETUPVAL 	R10 U22 ; R10 := U22
	524	[3203]	GETTABLE 	R10 R10 K103 ; R10 := R10["SyndicateInfo"]
	525	[3203]	GETTABLE 	R11 R9 K142 ; R11 := R9["Scale"]
	526	[3203]	DIV      	R11 R11 K143 ; R11 := R11 / 6.000000
	527	[3203]	SETTABLE 	R10 K141 R11 ; R10["mIconBgExtraWidth"] := R11
	528	[3204]	GETUPVAL 	R10 U22 ; R10 := U22
	529	[3204]	GETTABLE 	R10 R10 K103 ; R10 := R10["SyndicateInfo"]
	530	[3204]	GETTABLE 	R11 R9 K142 ; R11 := R9["Scale"]
	531	[3204]	DIV      	R11 R11 K143 ; R11 := R11 / 6.000000
	532	[3204]	SETTABLE 	R10 K144 R11 ; R10["mIconBgExtraHeight"] := R11
	533	[3205]	GETUPVAL 	R10 U22 ; R10 := U22
	534	[3205]	GETTABLE 	R10 R10 K103 ; R10 := R10["SyndicateInfo"]
	535	[3205]	GETTABLE 	R11 R9 K146 ; R11 := R9["X"]
	536	[3205]	DIV      	R11 R11 K147 ; R11 := R11 / 2.000000
	537	[3205]	SETTABLE 	R10 K145 R11 ; R10["mIconBgExtraOffsetX"] := R11
	538	[3206]	GETUPVAL 	R10 U22 ; R10 := U22
	539	[3206]	GETTABLE 	R10 R10 K103 ; R10 := R10["SyndicateInfo"]
	540	[3206]	GETTABLE 	R11 R9 K149 ; R11 := R9["Y"]
	541	[3206]	DIV      	R11 R11 K147 ; R11 := R11 / 2.000000
	542	[3206]	SETTABLE 	R10 K148 R11 ; R10["mIconBgExtraOffsetY"] := R11
	543	[3207]	GETUPVAL 	R10 U22 ; R10 := U22
	544	[3207]	GETTABLE 	R10 R10 K103 ; R10 := R10["SyndicateInfo"]
	545	[3207]	GETUPVAL 	R11 U2 ; R11 := U2
	546	[3207]	GETTABLE 	R11 R11 K35 ; R11 := R11[0x06d055f9]
	547	[3207]	GETTABLE 	R12 R9 K151 ; R12 := R9["Alpha"]
	548	[3207]	EQ       	0 R12 K15 ; if R12 ~= nil then PC := 551
	549	[3207]	JMP      	551 ; PC := 551
	550	[3207]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 551
	551	[3207]	OP_LOADBOOL	R12 1 0 ; R12 := true
	552	[3207]	GETTABLE 	R13 R9 K151 ; R13 := R9["Alpha"]
	553	[3207]	LOADK    	R14 := 5.000000
	554	[3207]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	555	[3207]	SETTABLE 	R10 K150 R11 ; R10["mIconBgExtraAlpha"] := R11
	556	[3207]	JMP      	560 ; PC := 560
	557	[3209]	GETUPVAL 	R10 U22 ; R10 := U22
	558	[3209]	GETTABLE 	R10 R10 K103 ; R10 := R10["SyndicateInfo"]
	559	[3209]	SETTABLE 	R10 K150 K152 ; R10["mIconBgExtraAlpha"] := 5.000000
	560	[3212]	GETUPVAL 	R10 U22 ; R10 := U22
	561	[3212]	GETTABLE 	R10 R10 K103 ; R10 := R10["SyndicateInfo"]
	562	[3212]	SELF     	R10 R10 K153 ; R11 := R10; R10 := R10[0x1c5cf2c0]
	563	[3212]	MOVE     	R12 R6 ; R12 := R6
	564	[3212]	CALL     	R10 3 1 ; R10(R11,R12)
	565	[3214]	LOADNIL  	R10 R10 ; R10 := nil
	566	[3215]	GETGLOBAL	R11 K154 ; R11 := 0xc8802016
	567	[3215]	SELF     	R12 R4 K155 ; R13 := R4; R12 := R4[0x22e6d12c]
	568	[3215]	CALL     	R12 2 0 ; R12,... := R12(R13)
	569	[3215]	CALL     	R11 0 4 ; R11,R12,R13 := R11(R12,...)
	570	[3215]	JMP      	589 ; PC := 589
	571	[3216]	GETTABLE 	R16 R15 K156 ; R16 := R15["level"]
	572	[3216]	GETGLOBAL	R17 K1 ; R17 := _T
	573	[3216]	GETTABLE 	R17 R17 K43 ; R17 := R17["SyndicateInvInfo"]
	574	[3216]	GETTABLE 	R17 R17 K157 ; R17 := R17["Level"]
	575	[3216]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 589
	576	[3216]	JMP      	589 ; PC := 589
	577	[3217]	GETGLOBAL	R16 K158 ; R16 := 0x7f5022cf
	578	[3217]	GETTABLE 	R16 R16 K159 ; R16 := R16[0x3f3e4d12]
	579	[3217]	GETGLOBAL	R17 K79 ; R17 := 0xae91e43b
	580	[3217]	SELF     	R17 R17 K160 ; R18 := R17; R17 := R17[0x42b04007]
	581	[3217]	GETTABLE 	R19 R15 K161 ; R19 := R15["titleLoc"]
	582	[3217]	SELF     	R19 R19 K162 ; R20 := R19; R19 := R19[0x6d604ba7]
	583	[3217]	CALL     	R19 2 2 ; R19 := R19(R20)
	584	[3217]	OP_LOADBOOL	R20 0 0 ; R20 := false
	585	[3217]	CALL     	R17 4 0 ; R17,... := R17(R18,R19,R20)
	586	[3217]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	587	[3217]	MOVE     	R10 R16 ; R10 := R16
	588	[3218]	JMP      	591 ; PC := 591
	589	[3215]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 571; R13 := R14 end
	590	[3219]	JMP      	571 ; PC := 571
	591	[3221]	EQ       	0 R10 K15 ; if R10 ~= nil then PC := 599
	592	[3221]	JMP      	599 ; PC := 599
	593	[3222]	GETGLOBAL	R16 K79 ; R16 := 0xae91e43b
	594	[3222]	SELF     	R16 R16 K160 ; R17 := R16; R16 := R16[0x42b04007]
	595	[3222]	LOADK    	R18 K163 ; R18 := "/Lotus/Language/Syndicates/NeutralTitle"
	596	[3222]	OP_LOADBOOL	R19 0 0 ; R19 := false
	597	[3222]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	598	[3222]	MOVE     	R10 R16 ; R10 := R16
	599	[3225]	GETUPVAL 	R16 U22 ; R16 := U22
	600	[3225]	GETTABLE 	R16 R16 K103 ; R16 := R16["SyndicateInfo"]
	601	[3225]	SELF     	R16 R16 K164 ; R17 := R16; R16 := R16[0x9b71e815]
	602	[3225]	MOVE     	R18 R10 ; R18 := R10
	603	[3225]	OP_LOADBOOL	R19 0 0 ; R19 := false
	604	[3225]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	605	[3227]	GETUPVAL 	R16 U24 ; R16 := U24
	606	[3227]	GETTABLE 	R16 R16 K165 ; R16 := R16[0x5d10207d]
	607	[3227]	LOADK    	R17 := 2.000000
	608	[3227]	OP_LOADBOOL	R18 1 0 ; R18 := true
	609	[3227]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	610	[3229]	GETUPVAL 	R17 U25 ; R17 := U25
	611	[3229]	GETTABLE 	R17 R17 K167 ; R17 := R17[0x30bd05d3]
	612	[3229]	GETGLOBAL	R18 K79 ; R18 := 0xae91e43b
	613	[3229]	LOADK    	R19 K168 ; R19 := "SellList.SyndicateRank"
	614	[3229]	NEWTABLE 	R20 0 1 ; R20 := {}
	615	[3229]	GETGLOBAL	R21 K1 ; R21 := _T
	616	[3229]	GETTABLE 	R21 R21 K43 ; R21 := R21["SyndicateInvInfo"]
	617	[3229]	GETTABLE 	R21 R21 K157 ; R21 := R21["Level"]
	618	[3229]	SETTABLE 	R20 K157 R21 ; R20["Level"] := R21
	619	[3229]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	620	[3231]	GETUPVAL 	R17 U22 ; R17 := U22
	621	[3231]	GETTABLE 	R17 R17 K103 ; R17 := R17["SyndicateInfo"]
	622	[3231]	SELF     	R17 R17 K169 ; R18 := R17; R17 := R17[0x71e9ac81]
	623	[3231]	CALL     	R17 2 1 ; R17(R18)
	624	[3232]	GETUPVAL 	R17 U22 ; R17 := U22
	625	[3232]	GETTABLE 	R17 R17 K103 ; R17 := R17["SyndicateInfo"]
	626	[3232]	SELF     	R17 R17 K170 ; R18 := R17; R17 := R17[0x99dac1e9]
	627	[3232]	GETGLOBAL	R19 K1 ; R19 := _T
	628	[3232]	GETTABLE 	R19 R19 K43 ; R19 := R19["SyndicateInvInfo"]
	629	[3232]	GETTABLE 	R19 R19 K171 ; R19 := R19["Reputation"]
	630	[3232]	GETGLOBAL	R20 K1 ; R20 := _T
	631	[3232]	GETTABLE 	R20 R20 K43 ; R20 := R20["SyndicateInvInfo"]
	632	[3232]	GETTABLE 	R20 R20 K172 ; R20 := R20["RepReq"]
	633	[3232]	LOADK    	R21 K173 ; R21 := "/Lotus/Language/Syndicates/SyndicateReputation"
	634	[3232]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	635	[3235]	GETUPVAL 	R17 U22 ; R17 := U22
	636	[3235]	GETUPVAL 	R18 U23 ; R18 := U23
	637	[3235]	GETTABLE 	R18 R18 K104 ; R18 := R18[0xae6791ba]
	638	[3235]	GETGLOBAL	R19 K79 ; R19 := 0xae91e43b
	639	[3235]	LOADK    	R20 K175 ; R20 := "SellList.DailyStandingInfo"
	640	[3235]	GETGLOBAL	R21 K176 ; R21 := 0x5f0788c4
	641	[3235]	GETGLOBAL	R22 K79 ; R22 := 0xae91e43b
	642	[3235]	SELF     	R22 R22 K160 ; R23 := R22; R22 := R22[0x42b04007]
	643	[3235]	LOADK    	R24 K177 ; R24 := "/Lotus/Language/Syndicates/DailyStandingCap"
	644	[3235]	OP_LOADBOOL	R25 0 0 ; R25 := false
	645	[3235]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	646	[3235]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	647	[3235]	LOADNIL  	R22 R22 ; R22 := nil
	648	[3235]	GETGLOBAL	R23 K106 ; R23 := 0x2da9721a
	649	[3235]	LOADNIL  	R24 R26 ; R24 := R25 := R26 := nil
	650	[3235]	CALL     	R18 9 2 ; R18 := R18(R19,R20,R21,R22,R23,R24,R25,R26)
	651	[3235]	SETTABLE 	R17 K174 R18 ; R17["DailyStandingInfo"] := R18
	652	[3236]	GETUPVAL 	R17 U22 ; R17 := U22
	653	[3236]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	654	[3236]	SETTABLE 	R17 K107 K78 ; R17["mSkipResize"] := true
	655	[3237]	GETUPVAL 	R17 U22 ; R17 := U22
	656	[3237]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	657	[3237]	SETTABLE 	R17 K178 K78 ; R17["mHideProgressTarget"] := true
	658	[3238]	GETUPVAL 	R17 U22 ; R17 := U22
	659	[3238]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	660	[3238]	SETTABLE 	R17 K108 K179 ; R17["mVerticalTextOffset"] := 0.180000
	661	[3239]	GETUPVAL 	R17 U22 ; R17 := U22
	662	[3239]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	663	[3239]	SETTABLE 	R17 K110 K111 ; R17["mBackerEdgeAlpha"] := 0.300000
	664	[3240]	GETUPVAL 	R17 U22 ; R17 := U22
	665	[3240]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	666	[3240]	SETTABLE 	R17 K113 K114 ; R17["mIconSize"] := 64.000000
	667	[3241]	GETUPVAL 	R17 U22 ; R17 := U22
	668	[3241]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	669	[3241]	SETTABLE 	R17 K115 K116 ; R17["mIconBorderSize"] := 80.000000
	670	[3242]	GETUPVAL 	R17 U22 ; R17 := U22
	671	[3242]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	672	[3242]	SETTABLE 	R17 K117 K118 ; R17["mIconPaddingX"] := -4.000000
	673	[3243]	GETUPVAL 	R17 U22 ; R17 := U22
	674	[3243]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	675	[3243]	SETTABLE 	R17 K119 K118 ; R17["mIconPaddingY"] := -4.000000
	676	[3244]	GETUPVAL 	R17 U22 ; R17 := U22
	677	[3244]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	678	[3244]	SETTABLE 	R17 K120 K180 ; R17["mIconToTextPadding"] := 12.000000
	679	[3245]	GETUPVAL 	R17 U22 ; R17 := U22
	680	[3245]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	681	[3245]	SETTABLE 	R17 K122 K111 ; R17["mBackerIconAlpha"] := 0.300000
	682	[3246]	GETUPVAL 	R17 U22 ; R17 := U22
	683	[3246]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	684	[3246]	SETTABLE 	R17 K123 K124 ; R17["mBackerAlpha"] := 0.900000
	685	[3247]	GETUPVAL 	R17 U22 ; R17 := U22
	686	[3247]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	687	[3247]	SETTABLE 	R17 K125 K116 ; R17["mUnfocusedShadeAlpha"] := 80.000000
	688	[3248]	GETUPVAL 	R17 U22 ; R17 := U22
	689	[3248]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	690	[3248]	GETGLOBAL	R18 K135 ; R18 := 0x60130201
	691	[3248]	LOADK    	R19 := 0.000000
	692	[3248]	LOADK    	R20 := 0.000000
	693	[3248]	LOADK    	R21 := 0.000000
	694	[3248]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	695	[3248]	SETTABLE 	R17 K131 R18 ; R17["mIconColor"] := R18
	696	[3249]	GETUPVAL 	R17 U22 ; R17 := U22
	697	[3249]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	698	[3249]	GETGLOBAL	R18 K135 ; R18 := 0x60130201
	699	[3249]	LOADK    	R19 := 200.000000
	700	[3249]	LOADK    	R20 := 200.000000
	701	[3249]	LOADK    	R21 := 200.000000
	702	[3249]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	703	[3249]	SETTABLE 	R17 K134 R18 ; R17["mIconBgColor"] := R18
	704	[3250]	GETUPVAL 	R17 U22 ; R17 := U22
	705	[3250]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	706	[3250]	SETTABLE 	R17 K126 K78 ; R17["mShowIconHighlight"] := true
	707	[3251]	GETUPVAL 	R17 U22 ; R17 := U22
	708	[3251]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	709	[3251]	GETGLOBAL	R18 K181 ; R18 := 0x5fc501a2
	710	[3251]	SETTABLE 	R17 K139 R18 ; R17["mIconBgExtra"] := R18
	711	[3252]	GETUPVAL 	R17 U22 ; R17 := U22
	712	[3252]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	713	[3252]	SETTABLE 	R17 K141 K182 ; R17["mIconBgExtraWidth"] := 176.000000
	714	[3253]	GETUPVAL 	R17 U22 ; R17 := U22
	715	[3253]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	716	[3253]	SETTABLE 	R17 K144 K182 ; R17["mIconBgExtraHeight"] := 176.000000
	717	[3254]	GETUPVAL 	R17 U22 ; R17 := U22
	718	[3254]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	719	[3254]	SETTABLE 	R17 K183 R16 ; R17["mIconBgExtraColor"] := R16
	720	[3255]	GETUPVAL 	R17 U22 ; R17 := U22
	721	[3255]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	722	[3255]	SETTABLE 	R17 K150 K184 ; R17["mIconBgExtraAlpha"] := 30.000000
	723	[3256]	GETUPVAL 	R17 U22 ; R17 := U22
	724	[3256]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	725	[3256]	SELF     	R17 R17 K127 ; R18 := R17; R17 := R17[0x8d77b2b2]
	726	[3256]	LOADK    	R19 := 370.000000
	727	[3256]	CALL     	R17 3 1 ; R17(R18,R19)
	728	[3257]	GETUPVAL 	R17 U22 ; R17 := U22
	729	[3257]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	730	[3257]	SETTABLE 	R17 K128 K78 ; R17["mExtendedProgressBar"] := true
	731	[3258]	GETUPVAL 	R17 U22 ; R17 := U22
	732	[3258]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	733	[3258]	SETTABLE 	R17 K129 K78 ; R17["mSeamlessProgressBar"] := true
	734	[3260]	GETUPVAL 	R17 U22 ; R17 := U22
	735	[3260]	GETTABLE 	R17 R17 K174 ; R17 := R17["DailyStandingInfo"]
	736	[3260]	SELF     	R17 R17 K169 ; R18 := R17; R17 := R17[0x71e9ac81]
	737	[3260]	CALL     	R17 2 1 ; R17(R18)
	738	[3262]	SELF     	R17 R4 K185 ; R18 := R4; R17 := R4[0x08b0b7bf]
	739	[3262]	CALL     	R17 2 2 ; R17 := R17(R18)
	740	[3263]	LT       	0 K186 R17 ; if 0.000000 >= R17 then PC := 775
	741	[3263]	JMP      	775 ; PC := 775
	742	[3263]	LT       	0 R17 K187 ; if R17 >= 13.000000 then PC := 775
	743	[3263]	JMP      	775 ; PC := 775
	744	[3264]	GETGLOBAL	R18 K51 ; R18 := 0x25d99d89
	745	[3264]	SELF     	R18 R18 K188 ; R19 := R18; R18 := R18[0xf5b0abc2]
	746	[3264]	MOVE     	R20 R17 ; R20 := R17
	747	[3264]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	748	[3265]	GETGLOBAL	R19 K189 ; R19 := 0xa94df70b
	749	[3265]	SELF     	R19 R19 K190 ; R20 := R19; R19 := R19[0x93d897af]
	750	[3265]	GETGLOBAL	R21 K51 ; R21 := 0x25d99d89
	751	[3265]	SELF     	R21 R21 K191 ; R22 := R21; R21 := R21[0xefee6c91]
	752	[3265]	CALL     	R21 2 0 ; R21,... := R21(R22)
	753	[3265]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	754	[3267]	LOADK    	R20 := 86400.000000
	755	[3268]	GETGLOBAL	R21 K39 ; R21 := 0xbe190284
	756	[3268]	SELF     	R21 R21 K192 ; R22 := R21; R21 := R21[0x67b221fa]
	757	[3268]	CALL     	R21 2 2 ; R21 := R21(R22)
	758	[3268]	MOD      	R21 R21 R20 ; R21 := R21 % R20
	759	[3269]	GETUPVAL 	R22 U12 ; R22 := U12
	760	[3269]	GETTABLE 	R22 R22 K193 ; R22 := R22[0x817b1503]
	761	[3269]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	762	[3269]	SUB      	R24 R20 R21 ; R24 := R20 - R21
	763	[3269]	LOADK    	R25 K194 ; R25 := "CompactOne"
	764	[3269]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	765	[3269]	MOVE     	R21 R22 ; R21 := R22
	766	[3271]	GETUPVAL 	R22 U22 ; R22 := U22
	767	[3271]	GETTABLE 	R22 R22 K174 ; R22 := R22["DailyStandingInfo"]
	768	[3271]	SELF     	R22 R22 K170 ; R23 := R22; R22 := R22[0x99dac1e9]
	769	[3271]	MOVE     	R24 R18 ; R24 := R18
	770	[3271]	MOVE     	R25 R19 ; R25 := R19
	771	[3271]	LOADK    	R26 K195 ; R26 := "/Lotus/Language/Syndicates/DailyStandingRemainingTime"
	772	[3271]	MOVE     	R27 R21 ; R27 := R21
	773	[3271]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	774	[3271]	JMP      	783 ; PC := 783
	775	[3273]	GETGLOBAL	R22 K79 ; R22 := 0xae91e43b
	776	[3273]	SELF     	R22 R22 K84 ; R23 := R22; R22 := R22[0xaade900e]
	777	[3273]	GETUPVAL 	R24 U22 ; R24 := U22
	778	[3273]	GETTABLE 	R24 R24 K174 ; R24 := R24["DailyStandingInfo"]
	779	[3273]	GETTABLE 	R24 R24 K196 ; R24 := R24["mClipName"]
	780	[3273]	LOADK    	R25 := 11.000000
	781	[3273]	OP_LOADBOOL	R26 0 0 ; R26 := false
	782	[3273]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	783	[3276]	GETGLOBAL	R22 K79 ; R22 := 0xae91e43b
	784	[3276]	SELF     	R22 R22 K197 ; R23 := R22; R22 := R22[0x91a24e4b]
	785	[3276]	LOADK    	R24 K105 ; R24 := "SellList.SyndicateInfo"
	786	[3276]	LOADK    	R25 := 1.000000
	787	[3276]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	788	[3277]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	789	[3277]	SELF     	R23 R23 K80 ; R24 := R23; R23 := R23[0x67bc869f]
	790	[3277]	LOADK    	R25 K81 ; R25 := "SellList.BottomLine"
	791	[3277]	LOADK    	R26 := 1.000000
	792	[3277]	SUB      	R27 R22 K198 ; R27 := R22 - 60.000000
	793	[3277]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	794	[3278]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	795	[3278]	SELF     	R23 R23 K80 ; R24 := R23; R23 := R23[0x67bc869f]
	796	[3278]	LOADK    	R25 K89 ; R25 := "SellList.Amount"
	797	[3278]	LOADK    	R26 := 1.000000
	798	[3278]	SUB      	R27 R22 K199 ; R27 := R22 - 46.000000
	799	[3278]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	800	[3279]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	801	[3279]	SELF     	R23 R23 K80 ; R24 := R23; R23 := R23[0x67bc869f]
	802	[3279]	LOADK    	R25 K87 ; R25 := "SellList.Total"
	803	[3279]	LOADK    	R26 := 1.000000
	804	[3279]	SUB      	R27 R22 K199 ; R27 := R22 - 46.000000
	805	[3279]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	806	[3281]	LOADK    	R23 := 236.000000
	807	[3281]	SETUPVAL 	R23 U26 ; U26 := R23
	808	[3282]	JMP      	827 ; PC := 827
	809	[3284]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	810	[3284]	SELF     	R23 R23 K84 ; R24 := R23; R23 := R23[0xaade900e]
	811	[3284]	LOADK    	R25 K168 ; R25 := "SellList.SyndicateRank"
	812	[3284]	LOADK    	R26 := 11.000000
	813	[3284]	OP_LOADBOOL	R27 0 0 ; R27 := false
	814	[3284]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	815	[3285]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	816	[3285]	SELF     	R23 R23 K84 ; R24 := R23; R23 := R23[0xaade900e]
	817	[3285]	LOADK    	R25 K105 ; R25 := "SellList.SyndicateInfo"
	818	[3285]	LOADK    	R26 := 11.000000
	819	[3285]	OP_LOADBOOL	R27 0 0 ; R27 := false
	820	[3285]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	821	[3286]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	822	[3286]	SELF     	R23 R23 K84 ; R24 := R23; R23 := R23[0xaade900e]
	823	[3286]	LOADK    	R25 K175 ; R25 := "SellList.DailyStandingInfo"
	824	[3286]	LOADK    	R26 := 11.000000
	825	[3286]	OP_LOADBOOL	R27 0 0 ; R27 := false
	826	[3286]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	827	[3289]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	828	[3289]	SELF     	R23 R23 K197 ; R24 := R23; R23 := R23[0x91a24e4b]
	829	[3289]	LOADK    	R25 K81 ; R25 := "SellList.BottomLine"
	830	[3289]	LOADK    	R26 := 1.000000
	831	[3289]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	832	[3289]	GETGLOBAL	R24 K79 ; R24 := 0xae91e43b
	833	[3289]	SELF     	R24 R24 K197 ; R25 := R24; R24 := R24[0x91a24e4b]
	834	[3289]	LOADK    	R26 K200 ; R26 := "SellList.TopLine"
	835	[3289]	LOADK    	R27 := 1.000000
	836	[3289]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	837	[3289]	SUB      	R23 R23 R24 ; R23 := R23 - R24
	838	[3289]	SUB      	R23 R23 K201 ; R23 := R23 - 26.000000
	839	[3289]	SETUPVAL 	R23 U27 ; U27 := R23
	840	[3291]	GETUPVAL 	R23 U12 ; R23 := U12
	841	[3291]	GETTABLE 	R23 R23 K202 ; R23 := R23[0x9e3d3434]
	842	[3291]	OP_LOADBOOL	R24 1 0 ; R24 := true
	843	[3291]	CALL     	R23 2 1 ; R23(R24)
	844	[3293]	GETUPVAL 	R23 U0 ; R23 := U0
	845	[3293]	GETUPVAL 	R24 U1 ; R24 := U1
	846	[3293]	GETTABLE 	R24 R24 K203 ; R24 := R24["INVENTORY"]
	847	[3293]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 853
	848	[3293]	JMP      	853 ; PC := 853
	849	[3294]	GETGLOBAL	R23 K39 ; R23 := 0xbe190284
	850	[3294]	SELF     	R23 R23 K204 ; R24 := R23; R23 := R23[0xa1c390fe]
	851	[3294]	CALL     	R23 2 2 ; R23 := R23(R24)
	852	[3294]	SETUPVAL 	R23 U28 ; U28 := R23
	853	[3297]	GETGLOBAL	R23 K1 ; R23 := _T
	854	[3297]	GETTABLE 	R23 R23 K205 ; R23 := R23["UIInputEnabled"]
	855	[3297]	TEST     	R23 1 ; if R23 then PC := 862
	856	[3297]	JMP      	862 ; PC := 862
	857	[3298]	OP_LOADBOOL	R23 1 0 ; R23 := true
	858	[3298]	SETUPVAL 	R23 U29 ; U29 := R23
	859	[3299]	GETGLOBAL	R23 K1 ; R23 := _T
	860	[3299]	GETTABLE 	R23 R23 K206 ; R23 := R23[0x3b0face1]
	861	[3299]	CALL     	R23 1 1 ; R23()
	862	[3302]	GETGLOBAL	R23 K79 ; R23 := 0xae91e43b
	863	[3302]	SELF     	R23 R23 K207 ; R24 := R23; R23 := R23[0xc6a10ab1]
	864	[3302]	LOADK    	R25 := 0.000000
	865	[3302]	CALL     	R23 3 1 ; R23(R24,R25)
	866	[3305]	LOADK    	R23 := 0.000000
	867	[3306]	GETGLOBAL	R24 K97 ; R24 := 0x9ba7909f
	868	[3306]	SELF     	R24 R24 K208 ; R25 := R24; R24 := R24[0xbcfb64ab]
	869	[3306]	GETGLOBAL	R26 K209 ; R26 := 0x8c2d7fcb
	870	[3306]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	871	[3306]	EQ       	0 R24 K15 ; if R24 ~= nil then PC := 900
	872	[3306]	JMP      	900 ; PC := 900
	873	[3307]	LOADK    	R23 := 0.250000
	874	[3308]	GETGLOBAL	R24 K79 ; R24 := 0xae91e43b
	875	[3308]	SELF     	R24 R24 K80 ; R25 := R24; R24 := R24[0x67bc869f]
	876	[3308]	LOADK    	R26 K210 ; R26 := "_root"
	877	[3308]	LOADK    	R27 := 10.000000
	878	[3308]	LOADK    	R28 := 0.000000
	879	[3308]	CALL     	R24 5 1 ; R24(R25,R26,R27,R28)
	880	[3309]	GETGLOBAL	R24 K79 ; R24 := 0xae91e43b
	881	[3309]	SELF     	R24 R24 K80 ; R25 := R24; R24 := R24[0x67bc869f]
	882	[3309]	LOADK    	R26 K210 ; R26 := "_root"
	883	[3309]	LOADK    	R27 := 4.000000
	884	[3309]	LOADK    	R28 := -5000.000000
	885	[3309]	CALL     	R24 5 1 ; R24(R25,R26,R27,R28)
	886	[3310]	GETGLOBAL	R24 K211 ; R24 := 0x25312c9b
	887	[3310]	GETGLOBAL	R25 K79 ; R25 := 0xae91e43b
	888	[3310]	LOADK    	R26 K210 ; R26 := "_root"
	889	[3310]	LOADK    	R27 := 8.000000
	890	[3310]	NEWTABLE 	R28 2 0 ; R28 := {}
	891	[3310]	LOADK    	R29 := 4.000000
	892	[3310]	LOADK    	R30 := 10.000000
	893	[3310]	SETLIST  	R28 2 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
	894	[3310]	NEWTABLE 	R29 2 0 ; R29 := {}
	895	[3310]	LOADK    	R30 := 0.000000
	896	[3310]	LOADK    	R31 := 100.000000
	897	[3310]	SETLIST  	R29 2 1 ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 2
	898	[3310]	MOVE     	R30 R23 ; R30 := R23
	899	[3310]	CALL     	R24 7 1 ; R24(R25,R26,R27,R28,R29,R30)
	900	[3312]	GETGLOBAL	R24 K5 ; R24 := 0x7b998233
	901	[3312]	GETGLOBAL	R25 K1 ; R25 := _T
	902	[3312]	GETTABLE 	R25 R25 K213 ; R25 := R25["ShowBackground"]
	903	[3312]	CALL     	R24 2 2 ; R24 := R24(R25)
	904	[3312]	TEST     	R24 1 ; if R24 then PC := 912
	905	[3312]	JMP      	912 ; PC := 912
	906	[3313]	GETGLOBAL	R24 K1 ; R24 := _T
	907	[3313]	GETTABLE 	R24 R24 K214 ; R24 := R24[0xa460d8df]
	908	[3313]	MOVE     	R25 R23 ; R25 := R23
	909	[3313]	LOADNIL  	R26 R26 ; R26 := nil
	910	[3313]	OP_LOADBOOL	R27 0 0 ; R27 := false
	911	[3313]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	912	[3316]	GETGLOBAL	R24 K215 ; R24 := 0x76ea806b
	913	[3316]	SELF     	R24 R24 K216 ; R25 := R24; R24 := R24[0x3f3ae64c]
	914	[3316]	LOADK    	R26 := 0.000000
	915	[3316]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	916	[3317]	GETGLOBAL	R25 K5 ; R25 := 0x7b998233
	917	[3317]	MOVE     	R26 R24 ; R26 := R24
	918	[3317]	CALL     	R25 2 2 ; R25 := R25(R26)
	919	[3317]	TEST     	R25 1 ; if R25 then PC := 927
	920	[3317]	JMP      	927 ; PC := 927
	921	[3318]	SELF     	R25 R24 K217 ; R26 := R24; R25 := R24[0x80563238]
	922	[3318]	CALL     	R25 2 2 ; R25 := R25(R26)
	923	[3318]	SETUPVAL 	R25 U30 ; U30 := R25
	924	[3319]	SELF     	R25 R24 K218 ; R26 := R24; R25 := R24[0x40e9c32b]
	925	[3319]	CALL     	R25 2 2 ; R25 := R25(R26)
	926	[3319]	SETUPVAL 	R25 U31 ; U31 := R25
	927	[3322]	GETUPVAL 	R25 U0 ; R25 := U0
	928	[3322]	GETUPVAL 	R26 U1 ; R26 := U1
	929	[3322]	GETTABLE 	R26 R26 K3 ; R26 := R26["ENEMIES"]
	930	[3322]	EQ       	0 R25 R26 ; if R25 ~= R26 then PC := 947
	931	[3322]	JMP      	947 ; PC := 947
	932	[3323]	GETGLOBAL	R25 K219 ; R25 := 0x89326c93
	933	[3323]	SELF     	R25 R25 K220 ; R26 := R25; R25 := R25[0x29ef273d]
	934	[3323]	CALL     	R25 2 2 ; R25 := R25(R26)
	935	[3324]	GETGLOBAL	R26 K5 ; R26 := 0x7b998233
	936	[3324]	MOVE     	R27 R25 ; R27 := R25
	937	[3324]	CALL     	R26 2 2 ; R26 := R26(R27)
	938	[3324]	TEST     	R26 1 ; if R26 then PC := 943
	939	[3324]	JMP      	943 ; PC := 943
	940	[3325]	SELF     	R26 R25 K221 ; R27 := R25; R26 := R25[0x66905cb0]
	941	[3325]	CALL     	R26 2 2 ; R26 := R26(R27)
	942	[3325]	SETUPVAL 	R26 U32 ; U32 := R26
	943	[3327]	GETUPVAL 	R26 U33 ; R26 := U33
	944	[3327]	CALL     	R26 1 1 ; R26()
	945	[3329]	GETUPVAL 	R26 U34 ; R26 := U34
	946	[3329]	CALL     	R26 1 1 ; R26()
	947	[3332]	GETGLOBAL	R26 K79 ; R26 := 0xae91e43b
	948	[3332]	SELF     	R26 R26 K222 ; R27 := R26; R26 := R26[0x2002e1dc]
	949	[3332]	GETGLOBAL	R28 K1 ; R28 := _T
	950	[3332]	GETTABLE 	R28 R28 K223 ; R28 := R28["RadialSolarMapOpen"]
	951	[3332]	EQ       	1 R28 K78 ; if R28 == true then PC := 954
	952	[3332]	JMP      	954 ; PC := 954
	953	[3332]	OP_LOADBOOL	R28 0 1 ; R28 := false; PC := 954
	954	[3332]	OP_LOADBOOL	R28 1 0 ; R28 := true
	955	[3332]	CALL     	R26 3 1 ; R26(R27,R28)
	956	[3334]	GETGLOBAL	R26 K5 ; R26 := 0x7b998233
	957	[3334]	GETUPVAL 	R27 U30 ; R27 := U30
	958	[3334]	CALL     	R26 2 2 ; R26 := R26(R27)
	959	[3334]	TEST     	R26 1 ; if R26 then PC := 998
	960	[3334]	JMP      	998 ; PC := 998
	961	[3335]	GETUPVAL 	R26 U30 ; R26 := U30
	962	[3335]	SELF     	R26 R26 K52 ; R27 := R26; R26 := R26[0x25a6e75e]
	963	[3335]	CALL     	R26 2 2 ; R26 := R26(R27)
	964	[3336]	GETGLOBAL	R27 K5 ; R27 := 0x7b998233
	965	[3336]	MOVE     	R28 R26 ; R28 := R26
	966	[3336]	CALL     	R27 2 2 ; R27 := R27(R28)
	967	[3336]	TEST     	R27 1 ; if R27 then PC := 994
	968	[3336]	JMP      	994 ; PC := 994
	969	[3339]	GETUPVAL 	R27 U12 ; R27 := U12
	970	[3339]	GETTABLE 	R27 R27 K224 ; R27 := R27[0xc10bb642]
	971	[3339]	MOVE     	R28 R26 ; R28 := R26
	972	[3339]	LOADK    	R29 := 0.000000
	973	[3339]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	974	[3339]	TEST     	R27 0 ; if not R27 then PC := 990
	975	[3339]	JMP      	990 ; PC := 990
	976	[3340]	GETUPVAL 	R27 U12 ; R27 := U12
	977	[3340]	GETTABLE 	R27 R27 K224 ; R27 := R27[0xc10bb642]
	978	[3340]	MOVE     	R28 R26 ; R28 := R26
	979	[3340]	LOADK    	R29 := 1.000000
	980	[3340]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	981	[3340]	TEST     	R27 0 ; if not R27 then PC := 990
	982	[3340]	JMP      	990 ; PC := 990
	983	[3341]	GETUPVAL 	R27 U12 ; R27 := U12
	984	[3341]	GETTABLE 	R27 R27 K224 ; R27 := R27[0xc10bb642]
	985	[3341]	MOVE     	R28 R26 ; R28 := R26
	986	[3341]	LOADK    	R29 := 2.000000
	987	[3341]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	988	[3341]	TEST     	R27 1 ; if R27 then PC := 994
	989	[3341]	JMP      	994 ; PC := 994
	990	[3342]	GETUPVAL 	R27 U12 ; R27 := U12
	991	[3342]	GETTABLE 	R27 R27 K225 ; R27 := R27[0x7aef8b7f]
	992	[3342]	LOADK    	R28 K226 ; R28 := "OnInvalidBinError"
	993	[3342]	CALL     	R27 2 1 ; R27(R28)
	994	[3346]	GETUPVAL 	R27 U30 ; R27 := U30
	995	[3346]	SELF     	R27 R27 K227 ; R28 := R27; R27 := R27[0x458cab75]
	996	[3346]	CALL     	R27 2 2 ; R27 := R27(R28)
	997	[3346]	SETUPVAL 	R27 U35 ; U35 := R27
	998	[3349]	GETUPVAL 	R27 U11 ; R27 := U11
	999	[3349]	GETTABLE 	R27 R27 K228 ; R27 := R27[0x00fa676f]
	1000	[3349]	GETGLOBAL	R28 K79 ; R28 := 0xae91e43b
	1001	[3349]	LOADK    	R29 K200 ; R29 := "SellList.TopLine"
	1002	[3349]	LOADK    	R30 := 380.000000
	1003	[3349]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	1004	[3350]	GETUPVAL 	R27 U11 ; R27 := U11
	1005	[3350]	GETTABLE 	R27 R27 K228 ; R27 := R27[0x00fa676f]
	1006	[3350]	GETGLOBAL	R28 K79 ; R28 := 0xae91e43b
	1007	[3350]	LOADK    	R29 K81 ; R29 := "SellList.BottomLine"
	1008	[3350]	LOADK    	R30 := 380.000000
	1009	[3350]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	1010	[3351]	GETUPVAL 	R27 U11 ; R27 := U11
	1011	[3351]	GETTABLE 	R27 R27 K228 ; R27 := R27[0x00fa676f]
	1012	[3351]	GETGLOBAL	R28 K79 ; R28 := 0xae91e43b
	1013	[3351]	LOADK    	R29 K229 ; R29 := "SellList.BottomLine2"
	1014	[3351]	LOADK    	R30 := 380.000000
	1015	[3351]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	1016	[3353]	GETGLOBAL	R27 K79 ; R27 := 0xae91e43b
	1017	[3353]	SELF     	R27 R27 K80 ; R28 := R27; R27 := R27[0x67bc869f]
	1018	[3353]	LOADK    	R29 K230 ; R29 := "SellList.Tip"
	1019	[3353]	LOADK    	R30 := 12.000000
	1020	[3353]	GETGLOBAL	R31 K79 ; R31 := 0xae91e43b
	1021	[3353]	SELF     	R31 R31 K197 ; R32 := R31; R31 := R31[0x91a24e4b]
	1022	[3353]	LOADK    	R33 K231 ; R33 := "SellList.List"
	1023	[3353]	LOADK    	R34 := 12.000000
	1024	[3353]	CALL     	R31 4 0 ; R31,... := R31(R32,R33,R34)
	1025	[3353]	CALL     	R27 0 1 ; R27(R28,...)
	1026	[3354]	GETGLOBAL	R27 K79 ; R27 := 0xae91e43b
	1027	[3354]	SELF     	R27 R27 K80 ; R28 := R27; R27 := R27[0x67bc869f]
	1028	[3354]	LOADK    	R29 K230 ; R29 := "SellList.Tip"
	1029	[3354]	LOADK    	R30 := 0.000000
	1030	[3354]	GETGLOBAL	R31 K79 ; R31 := 0xae91e43b
	1031	[3354]	SELF     	R31 R31 K197 ; R32 := R31; R31 := R31[0x91a24e4b]
	1032	[3354]	LOADK    	R33 K231 ; R33 := "SellList.List"
	1033	[3354]	LOADK    	R34 := 0.000000
	1034	[3354]	CALL     	R31 4 0 ; R31,... := R31(R32,R33,R34)
	1035	[3354]	CALL     	R27 0 1 ; R27(R28,...)
	1036	[3356]	GETGLOBAL	R27 K79 ; R27 := 0xae91e43b
	1037	[3356]	SELF     	R27 R27 K84 ; R28 := R27; R27 := R27[0xaade900e]
	1038	[3356]	LOADK    	R29 K232 ; R29 := "ScrollBar"
	1039	[3356]	LOADK    	R30 := 11.000000
	1040	[3356]	OP_LOADBOOL	R31 0 0 ; R31 := false
	1041	[3356]	CALL     	R27 5 1 ; R27(R28,R29,R30,R31)
	1042	[3358]	LOADK    	R27 K233 ; R27 := "/Lotus/Language/Menu/Loadout_Inventory"
	1043	[3359]	LOADK    	R28 K234 ; R28 := "/Lotus/Language/Menu/ItemSelection_Sell"
	1044	[3360]	LOADK    	R29 K235 ; R29 := "/Lotus/Language/Menu/ItemInventory_Tip"
	1045	[3361]	GETUPVAL 	R30 U0 ; R30 := U0
	1046	[3361]	GETUPVAL 	R31 U1 ; R31 := U1
	1047	[3361]	GETTABLE 	R31 R31 K23 ; R31 := R31["PRIMEPARTS"]
	1048	[3361]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1052
	1049	[3361]	JMP      	1052 ; PC := 1052
	1050	[3362]	LOADK    	R28 K236 ; R28 := "/Lotus/Language/Menu/ItemInventory_SellingPrimeTitle"
	1051	[3362]	JMP      	1171 ; PC := 1171
	1052	[3363]	GETUPVAL 	R30 U0 ; R30 := U0
	1053	[3363]	GETUPVAL 	R31 U1 ; R31 := U1
	1054	[3363]	GETTABLE 	R31 R31 K10 ; R31 := R31["TREASURE"]
	1055	[3363]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1059
	1056	[3363]	JMP      	1059 ; PC := 1059
	1057	[3364]	LOADK    	R28 K237 ; R28 := "/Lotus/Language/Menu/ItemInventory_SellingTreasureTitle"
	1058	[3364]	JMP      	1171 ; PC := 1171
	1059	[3365]	GETUPVAL 	R30 U0 ; R30 := U0
	1060	[3365]	GETUPVAL 	R31 U1 ; R31 := U1
	1061	[3365]	GETTABLE 	R31 R31 K17 ; R31 := R31["SHIP_SCRAP"]
	1062	[3365]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1091
	1063	[3365]	JMP      	1091 ; PC := 1091
	1064	[3366]	GETGLOBAL	R30 K1 ; R30 := _T
	1065	[3366]	GETTABLE 	R30 R30 K238 ; R30 := R30["InventoryInfo"]
	1066	[3366]	EQ       	1 R30 K15 ; if R30 == nil then PC := 1088
	1067	[3366]	JMP      	1088 ; PC := 1088
	1068	[3366]	GETGLOBAL	R30 K1 ; R30 := _T
	1069	[3366]	GETTABLE 	R30 R30 K238 ; R30 := R30["InventoryInfo"]
	1070	[3366]	GETTABLE 	R30 R30 K239 ; R30 := R30["MinSellAmount"]
	1071	[3366]	EQ       	1 R30 K15 ; if R30 == nil then PC := 1088
	1072	[3366]	JMP      	1088 ; PC := 1088
	1073	[3367]	GETGLOBAL	R30 K79 ; R30 := 0xae91e43b
	1074	[3367]	SELF     	R30 R30 K160 ; R31 := R30; R30 := R30[0x42b04007]
	1075	[3367]	LOADK    	R32 K240 ; R32 := "/Lotus/Language/Railjack/WreckageLimit_TitleWithCount"
	1076	[3367]	OP_LOADBOOL	R33 0 0 ; R33 := false
	1077	[3367]	NEWTABLE 	R34 0 1 ; R34 := {}
	1078	[3367]	GETUPVAL 	R35 U2 ; R35 := U2
	1079	[3367]	GETTABLE 	R35 R35 K242 ; R35 := R35[0x1142c7a8]
	1080	[3367]	GETGLOBAL	R36 K1 ; R36 := _T
	1081	[3367]	GETTABLE 	R36 R36 K238 ; R36 := R36["InventoryInfo"]
	1082	[3367]	GETTABLE 	R36 R36 K239 ; R36 := R36["MinSellAmount"]
	1083	[3367]	CALL     	R35 2 2 ; R35 := R35(R36)
	1084	[3367]	SETTABLE 	R34 K241 R35 ; R34["COUNT"] := R35
	1085	[3367]	CALL     	R30 5 2 ; R30 := R30(R31,R32,R33,R34)
	1086	[3367]	MOVE     	R28 R30 ; R28 := R30
	1087	[3367]	JMP      	1089 ; PC := 1089
	1088	[3369]	LOADK    	R28 K243 ; R28 := "/Lotus/Language/Railjack/ItemInventory_SellingShipWreckageTitle"
	1089	[3371]	LOADK    	R29 K244 ; R29 := "/Lotus/Language/Railjack/ItemInventory_SellingShipWreckageTip"
	1090	[3371]	JMP      	1171 ; PC := 1171
	1091	[3372]	GETUPVAL 	R30 U0 ; R30 := U0
	1092	[3372]	GETUPVAL 	R31 U1 ; R31 := U1
	1093	[3372]	GETTABLE 	R31 R31 K20 ; R31 := R31["SHIP_PARTS"]
	1094	[3372]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1099
	1095	[3372]	JMP      	1099 ; PC := 1099
	1096	[3373]	LOADK    	R28 K245 ; R28 := "/Lotus/Language/Railjack/ItemInventory_SellingShipComponentsShortTitle"
	1097	[3374]	LOADK    	R29 K246 ; R29 := "/Lotus/Language/Railjack/ItemInventory_SellingShipComponentsTip"
	1098	[3374]	JMP      	1171 ; PC := 1171
	1099	[3375]	GETUPVAL 	R30 U0 ; R30 := U0
	1100	[3375]	GETUPVAL 	R31 U1 ; R31 := U1
	1101	[3375]	GETTABLE 	R31 R31 K13 ; R31 := R31["SHIP_RAW"]
	1102	[3375]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1107
	1103	[3375]	JMP      	1107 ; PC := 1107
	1104	[3376]	LOADK    	R28 K243 ; R28 := "/Lotus/Language/Railjack/ItemInventory_SellingShipWreckageTitle"
	1105	[3377]	LOADK    	R29 K247 ; R29 := "/Lotus/Language/Railjack/ItemInventory_SellingShipUnidentifiedTip"
	1106	[3377]	JMP      	1171 ; PC := 1171
	1107	[3378]	GETUPVAL 	R30 U0 ; R30 := U0
	1108	[3378]	GETUPVAL 	R31 U1 ; R31 := U1
	1109	[3378]	GETTABLE 	R31 R31 K7 ; R31 := R31["FISH"]
	1110	[3378]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1125
	1111	[3378]	JMP      	1125 ; PC := 1125
	1112	[3379]	GETGLOBAL	R30 K5 ; R30 := 0x7b998233
	1113	[3379]	GETGLOBAL	R31 K1 ; R31 := _T
	1114	[3379]	GETTABLE 	R31 R31 K248 ; R31 := R31["CurrentConversation"]
	1115	[3379]	CALL     	R30 2 2 ; R30 := R30(R31)
	1116	[3379]	TEST     	R30 1 ; if R30 then PC := 1121
	1117	[3379]	JMP      	1121 ; PC := 1121
	1118	[3380]	GETGLOBAL	R30 K1 ; R30 := _T
	1119	[3380]	GETTABLE 	R30 R30 K248 ; R30 := R30["CurrentConversation"]
	1120	[3380]	GETTABLE 	R27 R30 K249 ; R27 := R30["mSpeakerName"]
	1121	[3382]	GETGLOBAL	R30 K1 ; R30 := _T
	1122	[3382]	GETTABLE 	R30 R30 K63 ; R30 := R30["FishInvInfo"]
	1123	[3382]	GETTABLE 	R28 R30 K250 ; R28 := R30["SellBtnLabel"]
	1124	[3382]	JMP      	1171 ; PC := 1171
	1125	[3383]	GETUPVAL 	R30 U0 ; R30 := U0
	1126	[3383]	GETUPVAL 	R31 U1 ; R31 := U1
	1127	[3383]	GETTABLE 	R31 R31 K3 ; R31 := R31["ENEMIES"]
	1128	[3383]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1134
	1129	[3383]	JMP      	1134 ; PC := 1134
	1130	[3384]	LOADK    	R27 K251 ; R27 := "/Lotus/Language/Menu/EnemySelector_Title"
	1131	[3385]	LOADK    	R28 K252 ; R28 := "/Lotus/Language/Menu/EnemySelector_SubTitle"
	1132	[3386]	LOADK    	R29 K253 ; R29 := "/Lotus/Language/Menu/EnemySelector_Tip"
	1133	[3386]	JMP      	1171 ; PC := 1171
	1134	[3387]	GETUPVAL 	R30 U0 ; R30 := U0
	1135	[3387]	GETUPVAL 	R31 U1 ; R31 := U1
	1136	[3387]	GETTABLE 	R31 R31 K29 ; R31 := R31["DECODONATE"]
	1137	[3387]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1141
	1138	[3387]	JMP      	1141 ; PC := 1141
	1139	[3388]	LOADK    	R28 K254 ; R28 := "/Lotus/Language/Dojo/VaultContributionDeco"
	1140	[3388]	JMP      	1171 ; PC := 1171
	1141	[3389]	GETUPVAL 	R30 U0 ; R30 := U0
	1142	[3389]	GETUPVAL 	R31 U1 ; R31 := U1
	1143	[3389]	GETTABLE 	R31 R31 K32 ; R31 := R31["RESDONATE"]
	1144	[3389]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1148
	1145	[3389]	JMP      	1148 ; PC := 1148
	1146	[3390]	LOADK    	R28 K255 ; R28 := "/Lotus/Language/Categories/RESOURCES"
	1147	[3390]	JMP      	1171 ; PC := 1171
	1148	[3391]	GETUPVAL 	R30 U0 ; R30 := U0
	1149	[3391]	GETUPVAL 	R31 U1 ; R31 := U1
	1150	[3391]	GETTABLE 	R31 R31 K44 ; R31 := R31["SYNDDONATE"]
	1151	[3391]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1164
	1152	[3391]	JMP      	1164 ; PC := 1164
	1153	[3392]	GETGLOBAL	R30 K5 ; R30 := 0x7b998233
	1154	[3392]	GETGLOBAL	R31 K1 ; R31 := _T
	1155	[3392]	GETTABLE 	R31 R31 K248 ; R31 := R31["CurrentConversation"]
	1156	[3392]	CALL     	R30 2 2 ; R30 := R30(R31)
	1157	[3392]	TEST     	R30 1 ; if R30 then PC := 1171
	1158	[3392]	JMP      	1171 ; PC := 1171
	1159	[3393]	GETGLOBAL	R30 K1 ; R30 := _T
	1160	[3393]	GETTABLE 	R30 R30 K248 ; R30 := R30["CurrentConversation"]
	1161	[3393]	GETTABLE 	R27 R30 K249 ; R27 := R30["mSpeakerName"]
	1162	[3394]	LOADK    	R28 K256 ; R28 := "/Lotus/Language/Syndicates/Favors_RedeemReward"
	1163	[3395]	JMP      	1171 ; PC := 1171
	1164	[3396]	GETUPVAL 	R30 U10 ; R30 := U10
	1165	[3396]	CALL     	R30 1 2 ; R30 := R30()
	1166	[3396]	TEST     	R30 0 ; if not R30 then PC := 1170
	1167	[3396]	JMP      	1170 ; PC := 1170
	1168	[3397]	LOADK    	R28 K257 ; R28 := "/Lotus/Language/Dojo/Trade"
	1169	[3397]	JMP      	1171 ; PC := 1171
	1170	[3399]	LOADK    	R29 K258 ; R29 := "/Lotus/Language/Labels/ItemInventory_SellTip"
	1171	[3401]	GETUPVAL 	R30 U36 ; R30 := U36
	1172	[3401]	GETGLOBAL	R31 K79 ; R31 := 0xae91e43b
	1173	[3401]	SELF     	R31 R31 K160 ; R32 := R31; R31 := R31[0x42b04007]
	1174	[3401]	MOVE     	R33 R27 ; R33 := R27
	1175	[3401]	OP_LOADBOOL	R34 0 0 ; R34 := false
	1176	[3401]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	1177	[3401]	GETGLOBAL	R32 K79 ; R32 := 0xae91e43b
	1178	[3401]	SELF     	R32 R32 K160 ; R33 := R32; R32 := R32[0x42b04007]
	1179	[3401]	MOVE     	R34 R28 ; R34 := R28
	1180	[3401]	OP_LOADBOOL	R35 0 0 ; R35 := false
	1181	[3401]	CALL     	R32 4 0 ; R32,... := R32(R33,R34,R35)
	1182	[3401]	CALL     	R30 0 1 ; R30(R31,...)
	1183	[3403]	GETGLOBAL	R30 K79 ; R30 := 0xae91e43b
	1184	[3403]	SELF     	R30 R30 K86 ; R31 := R30; R30 := R30[0x5f56eeab]
	1185	[3403]	LOADK    	R32 K230 ; R32 := "SellList.Tip"
	1186	[3403]	LOADK    	R33 := 29.000000
	1187	[3403]	GETGLOBAL	R34 K158 ; R34 := 0x7f5022cf
	1188	[3403]	GETTABLE 	R34 R34 K159 ; R34 := R34[0x3f3e4d12]
	1189	[3403]	GETGLOBAL	R35 K79 ; R35 := 0xae91e43b
	1190	[3403]	SELF     	R35 R35 K160 ; R36 := R35; R35 := R35[0x42b04007]
	1191	[3403]	MOVE     	R37 R29 ; R37 := R29
	1192	[3403]	OP_LOADBOOL	R38 1 0 ; R38 := true
	1193	[3403]	CALL     	R35 4 0 ; R35,... := R35(R36,R37,R38)
	1194	[3403]	CALL     	R34 0 0 ; R34,... := R34(R35,...)
	1195	[3403]	CALL     	R30 0 1 ; R30(R31,...)
	1196	[3405]	GETGLOBAL	R30 K1 ; R30 := _T
	1197	[3405]	LOADK    	R31 K259 ; R31 := "ShowPrimeBucks"
	1198	[3405]	OP_LOADBOOL	R32 1 0 ; R32 := true
	1199	[3405]	SETTABLE 	R30 R31 R32 ; R30[R31] := R32
	1200	[3406]	GETUPVAL 	R30 U0 ; R30 := U0
	1201	[3406]	GETUPVAL 	R31 U1 ; R31 := U1
	1202	[3406]	GETTABLE 	R31 R31 K10 ; R31 := R31["TREASURE"]
	1203	[3406]	EQ       	1 R30 R31 ; if R30 == R31 then PC := 1215
	1204	[3406]	JMP      	1215 ; PC := 1215
	1205	[3406]	GETUPVAL 	R30 U0 ; R30 := U0
	1206	[3406]	GETUPVAL 	R31 U1 ; R31 := U1
	1207	[3406]	GETTABLE 	R31 R31 K17 ; R31 := R31["SHIP_SCRAP"]
	1208	[3406]	EQ       	1 R30 R31 ; if R30 == R31 then PC := 1215
	1209	[3406]	JMP      	1215 ; PC := 1215
	1210	[3406]	GETUPVAL 	R30 U0 ; R30 := U0
	1211	[3406]	GETUPVAL 	R31 U1 ; R31 := U1
	1212	[3406]	GETTABLE 	R31 R31 K13 ; R31 := R31["SHIP_RAW"]
	1213	[3406]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1223
	1214	[3406]	JMP      	1223 ; PC := 1223
	1215	[3407]	GETGLOBAL	R30 K1 ; R30 := _T
	1216	[3407]	LOADK    	R31 K260 ; R31 := "ShowFusionPoints"
	1217	[3407]	OP_LOADBOOL	R32 1 0 ; R32 := true
	1218	[3407]	SETTABLE 	R30 R31 R32 ; R30[R31] := R32
	1219	[3408]	GETGLOBAL	R30 K1 ; R30 := _T
	1220	[3408]	LOADK    	R31 K259 ; R31 := "ShowPrimeBucks"
	1221	[3408]	LOADNIL  	R32 R32 ; R32 := nil
	1222	[3408]	SETTABLE 	R30 R31 R32 ; R30[R31] := R32
	1223	[3411]	GETUPVAL 	R30 U37 ; R30 := U37
	1224	[3411]	CALL     	R30 1 1 ; R30()
	1225	[3412]	GETUPVAL 	R30 U38 ; R30 := U38
	1226	[3412]	CALL     	R30 1 1 ; R30()
	1227	[3413]	GETUPVAL 	R30 U39 ; R30 := U39
	1228	[3413]	CALL     	R30 1 1 ; R30()
	1229	[3415]	GETUPVAL 	R30 U40 ; R30 := U40
	1230	[3415]	CALL     	R30 1 1 ; R30()
	1231	[3417]	GETUPVAL 	R30 U41 ; R30 := U41
	1232	[3417]	OP_LOADBOOL	R31 1 0 ; R31 := true
	1233	[3417]	CALL     	R30 2 1 ; R30(R31)
	1234	[3418]	GETGLOBAL	R30 K79 ; R30 := 0xae91e43b
	1235	[3418]	SELF     	R30 R30 K80 ; R31 := R30; R30 := R30[0x67bc869f]
	1236	[3418]	LOADK    	R32 K261 ; R32 := "Mask"
	1237	[3418]	LOADK    	R33 := 13.000000
	1238	[3418]	GETUPVAL 	R34 U42 ; R34 := U42
	1239	[3418]	LOADK    	R35 K262 ; R35 := "mRows"
	1240	[3418]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1241	[3418]	GETUPVAL 	R35 U42 ; R35 := U42
	1242	[3418]	LOADK    	R36 K263 ; R36 := "mRowSeparation"
	1243	[3418]	GETTABLE 	R35 R35 R36 ; R35 := R35[R36]
	1244	[3418]	MUL      	R34 R34 R35 ; R34 := R34 * R35
	1245	[3418]	CALL     	R30 5 1 ; R30(R31,R32,R33,R34)
	1246	[3420]	GETUPVAL 	R30 U43 ; R30 := U43
	1247	[3420]	CALL     	R30 1 1 ; R30()
	1248	[3421]	GETGLOBAL	R30 K264 ; R30 := 0x2d0fad09
	1249	[3421]	LOADK    	R31 K265 ; R31 := "Lotus.Interface.Components.ThemedSpinner"
	1250	[3421]	CALL     	R30 2 2 ; R30 := R30(R31)
	1251	[3422]	GETTABLE 	R31 R30 K104 ; R31 := R30[0xae6791ba]
	1252	[3422]	GETGLOBAL	R32 K79 ; R32 := 0xae91e43b
	1253	[3422]	LOADK    	R33 K266 ; R33 := "Loading.Spinner"
	1254	[3422]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	1255	[3422]	SETUPVAL 	R31 U44 ; U44 := R31
	1256	[3424]	GETGLOBAL	R31 K79 ; R31 := 0xae91e43b
	1257	[3424]	SELF     	R31 R31 K84 ; R32 := R31; R31 := R31[0xaade900e]
	1258	[3424]	LOADK    	R33 K230 ; R33 := "SellList.Tip"
	1259	[3424]	LOADK    	R34 := 75.000000
	1260	[3424]	OP_LOADBOOL	R35 1 0 ; R35 := true
	1261	[3424]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1262	[3426]	GETUPVAL 	R31 U46 ; R31 := U46
	1263	[3426]	GETTABLE 	R31 R31 K203 ; R31 := R31["INVENTORY"]
	1264	[3426]	SETUPVAL 	R31 U45 ; U45 := R31
	1265	[3428]	OP_LOADBOOL	R31 0 0 ; R31 := false
	1266	[3429]	GETUPVAL 	R32 U0 ; R32 := U0
	1267	[3429]	GETUPVAL 	R33 U1 ; R33 := U1
	1268	[3429]	GETTABLE 	R33 R33 K3 ; R33 := R33["ENEMIES"]
	1269	[3429]	EQ       	0 R32 R33 ; if R32 ~= R33 then PC := 1303
	1270	[3429]	JMP      	1303 ; PC := 1303
	1271	[3430]	GETGLOBAL	R32 K1 ; R32 := _T
	1272	[3430]	LOADK    	R33 K267 ; R33 := "SelectingEnemiesManifest"
	1273	[3430]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	1274	[3430]	SETUPVAL 	R32 U47 ; U47 := R32
	1275	[3431]	GETGLOBAL	R32 K1 ; R32 := _T
	1276	[3431]	LOADK    	R33 K268 ; R33 := "StatScans"
	1277	[3431]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	1278	[3431]	LOADNIL  	R33 R33 ; R33 := nil
	1279	[3431]	EQ       	0 R32 R33 ; if R32 ~= R33 then PC := 1297
	1280	[3431]	JMP      	1297 ; PC := 1297
	1281	[3432]	GETGLOBAL	R32 K5 ; R32 := 0x7b998233
	1282	[3432]	MOVE     	R33 R24 ; R33 := R24
	1283	[3432]	CALL     	R32 2 2 ; R32 := R32(R33)
	1284	[3432]	TEST     	R32 1 ; if R32 then PC := 1297
	1285	[3432]	JMP      	1297 ; PC := 1297
	1286	[3433]	LOADK    	R34 K269 ; R34 := true
	1287	[3433]	SELF     	R32 R24 R34 ; R33 := R24; R32 := R24[R34]
	1288	[3433]	CALL     	R32 2 2 ; R32 := R32(R33)
	1289	[3434]	LOADK    	R35 K270 ; R35 := true
	1290	[3434]	SELF     	R33 R24 R35 ; R34 := R24; R33 := R24[R35]
	1291	[3434]	CALL     	R33 2 2 ; R33 := R33(R34)
	1292	[3435]	GETGLOBAL	R34 K1 ; R34 := _T
	1293	[3435]	LOADK    	R35 K268 ; R35 := "StatScans"
	1294	[3435]	LOADK    	R36 K271 ; R36 := "mScans"
	1295	[3435]	GETTABLE 	R36 R33 R36 ; R36 := R33[R36]
	1296	[3435]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1297	[3438]	GETUPVAL 	R34 U48 ; R34 := U48
	1298	[3438]	GETGLOBAL	R35 K1 ; R35 := _T
	1299	[3438]	LOADK    	R36 K268 ; R36 := "StatScans"
	1300	[3438]	GETTABLE 	R35 R35 R36 ; R35 := R35[R36]
	1301	[3438]	CALL     	R34 2 1 ; R34(R35)
	1302	[3438]	JMP      	1364 ; PC := 1364
	1303	[3439]	GETGLOBAL	R34 K5 ; R34 := 0x7b998233
	1304	[3439]	GETUPVAL 	R35 U28 ; R35 := U28
	1305	[3439]	CALL     	R34 2 2 ; R34 := R34(R35)
	1306	[3439]	TEST     	R34 0 ; if not R34 then PC := 1364
	1307	[3439]	JMP      	1364 ; PC := 1364
	1308	[3440]	OP_LOADBOOL	R31 1 0 ; R31 := true
	1309	[3441]	GETUPVAL 	R34 U0 ; R34 := U0
	1310	[3441]	GETUPVAL 	R35 U1 ; R35 := U1
	1311	[3441]	GETTABLE 	R35 R35 K23 ; R35 := R35["PRIMEPARTS"]
	1312	[3441]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1317
	1313	[3441]	JMP      	1317 ; PC := 1317
	1314	[3442]	GETGLOBAL	R34 K272 ; R34 := 0x52edf834
	1315	[3442]	SETUPVAL 	R34 U49 ; U49 := R34
	1316	[3442]	JMP      	1346 ; PC := 1346
	1317	[3443]	GETUPVAL 	R34 U0 ; R34 := U0
	1318	[3443]	GETUPVAL 	R35 U1 ; R35 := U1
	1319	[3443]	GETTABLE 	R35 R35 K10 ; R35 := R35["TREASURE"]
	1320	[3443]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1325
	1321	[3443]	JMP      	1325 ; PC := 1325
	1322	[3444]	GETGLOBAL	R34 K273 ; R34 := 0x63e3ffea
	1323	[3444]	SETUPVAL 	R34 U49 ; U49 := R34
	1324	[3444]	JMP      	1346 ; PC := 1346
	1325	[3445]	GETUPVAL 	R34 U0 ; R34 := U0
	1326	[3445]	GETUPVAL 	R35 U1 ; R35 := U1
	1327	[3445]	GETTABLE 	R35 R35 K7 ; R35 := R35["FISH"]
	1328	[3445]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1334
	1329	[3445]	JMP      	1334 ; PC := 1334
	1330	[3446]	GETGLOBAL	R34 K1 ; R34 := _T
	1331	[3446]	GETTABLE 	R34 R34 K6 ; R34 := R34["SelectingFishManifest"]
	1332	[3446]	SETUPVAL 	R34 U49 ; U49 := R34
	1333	[3446]	JMP      	1346 ; PC := 1346
	1334	[3447]	GETUPVAL 	R34 U0 ; R34 := U0
	1335	[3447]	GETUPVAL 	R35 U1 ; R35 := U1
	1336	[3447]	GETTABLE 	R35 R35 K32 ; R35 := R35["RESDONATE"]
	1337	[3447]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1342
	1338	[3447]	JMP      	1342 ; PC := 1342
	1339	[3448]	GETGLOBAL	R34 K274 ; R34 := 0xed761f52
	1340	[3448]	SETUPVAL 	R34 U49 ; U49 := R34
	1341	[3448]	JMP      	1346 ; PC := 1346
	1342	[3450]	GETGLOBAL	R34 K189 ; R34 := 0xa94df70b
	1343	[3450]	SELF     	R34 R34 K204 ; R35 := R34; R34 := R34[0xa1c390fe]
	1344	[3450]	CALL     	R34 2 2 ; R34 := R34(R35)
	1345	[3450]	SETUPVAL 	R34 U49 ; U49 := R34
	1346	[3452]	GETGLOBAL	R34 K5 ; R34 := 0x7b998233
	1347	[3452]	GETUPVAL 	R35 U49 ; R35 := U49
	1348	[3452]	CALL     	R34 2 2 ; R34 := R34(R35)
	1349	[3452]	TEST     	R34 1 ; if R34 then PC := 1364
	1350	[3452]	JMP      	1364 ; PC := 1364
	1351	[3453]	GETUPVAL 	R34 U49 ; R34 := U49
	1352	[3453]	SELF     	R34 R34 K140 ; R35 := R34; R34 := R34[0xed4e0128]
	1353	[3453]	CALL     	R34 2 2 ; R34 := R34(R35)
	1354	[3453]	SETUPVAL 	R34 U49 ; U49 := R34
	1355	[3454]	GETGLOBAL	R34 K212 ; R34 := 0xbd496aa1
	1356	[3454]	LOADK    	R35 K275 ; R35 := true
	1357	[3454]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1358	[3454]	NEWTABLE 	R35 1 0 ; R35 := {}
	1359	[3454]	GETUPVAL 	R36 U49 ; R36 := U49
	1360	[3454]	SETLIST  	R35 1 1 ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
	1361	[3454]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1362	[3454]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	1363	[3454]	SETUPVAL 	R34 U50 ; U50 := R34
	1364	[3458]	TEST     	R31 0 ; if not R31 then PC := 1382
	1365	[3458]	JMP      	1382 ; PC := 1382
	1366	[3459]	GETUPVAL 	R34 U51 ; R34 := U51
	1367	[3459]	GETUPVAL 	R35 U52 ; R35 := U52
	1368	[3459]	LOADK    	R36 K276 ; R36 := "EXIT"
	1369	[3459]	GETTABLE 	R35 R35 R36 ; R35 := R35[R36]
	1370	[3459]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1371	[3459]	LOADK    	R35 K277 ; R35 := "mVisible"
	1372	[3459]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1373	[3459]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1374	[3460]	GETUPVAL 	R34 U53 ; R34 := U53
	1375	[3460]	CALL     	R34 1 1 ; R34()
	1376	[3461]	GETUPVAL 	R34 U44 ; R34 := U44
	1377	[3461]	LOADK    	R36 K278 ; R36 := true
	1378	[3461]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1379	[3461]	MOVE     	R36 R31 ; R36 := R31
	1380	[3461]	CALL     	R34 3 1 ; R34(R35,R36)
	1381	[3461]	JMP      	1384 ; PC := 1384
	1382	[3463]	GETUPVAL 	R34 U54 ; R34 := U54
	1383	[3463]	CALL     	R34 1 1 ; R34()
	1384	[3466]	OP_LOADBOOL	R34 1 0 ; R34 := true
	1385	[3466]	SETUPVAL 	R34 U55 ; U55 := R34
	1386	[3467]	GETGLOBAL	R34 K79 ; R34 := 0xae91e43b
	1387	[3467]	LOADK    	R36 K279 ; R36 := true
	1388	[3467]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1389	[3467]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1390	[3467]	CALL     	R34 3 1 ; R34(R35,R36)
	1391	[3468]	GETGLOBAL	R34 K1 ; R34 := _T
	1392	[3468]	LOADK    	R35 K280 ; R35 := "InventoryScreenOpen"
	1393	[3468]	OP_LOADBOOL	R36 1 0 ; R36 := true
	1394	[3468]	SETTABLE 	R34 R35 R36 ; R34[R35] := R36
	1395	[3470]	GETGLOBAL	R34 K281 ; R34 := 0xcb79539e
	1396	[3470]	LOADNIL  	R35 R35 ; R35 := nil
	1397	[3470]	EQ       	1 R34 R35 ; if R34 == R35 then PC := 1419
	1398	[3470]	JMP      	1419 ; PC := 1419
	1399	[3470]	GETGLOBAL	R34 K39 ; R34 := 0xbe190284
	1400	[3470]	LOADK    	R36 K282 ; R36 := true
	1401	[3470]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1402	[3470]	GETGLOBAL	R36 K283 ; R36 := gLotusAttractModeGameRulesType
	1403	[3470]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	1404	[3470]	TEST     	R34 0 ; if not R34 then PC := 1419
	1405	[3470]	JMP      	1419 ; PC := 1419
	1406	[3470]	GETUPVAL 	R34 U0 ; R34 := U0
	1407	[3470]	GETUPVAL 	R35 U1 ; R35 := U1
	1408	[3470]	GETTABLE 	R35 R35 K203 ; R35 := R35["INVENTORY"]
	1409	[3470]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1419
	1410	[3470]	JMP      	1419 ; PC := 1419
	1411	[3471]	GETGLOBAL	R34 K281 ; R34 := 0xcb79539e
	1412	[3471]	LOADK    	R36 K284 ; R36 := true
	1413	[3471]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1414	[3471]	GETGLOBAL	R36 K285 ; R36 := 0x0469f296
	1415	[3471]	LOADK    	R37 K286 ; R37 := "IN_SHIP_VIEW_TIME"
	1416	[3471]	CALL     	R36 2 2 ; R36 := R36(R37)
	1417	[3471]	LOADK    	R37 K287 ; R37 := "EQUIPMENT_INVENTORY"
	1418	[3471]	CALL     	R34 4 1 ; R34(R35,R36,R37)
	1419	[3474]	GETUPVAL 	R34 U0 ; R34 := U0
	1420	[3474]	GETUPVAL 	R35 U1 ; R35 := U1
	1421	[3474]	GETTABLE 	R35 R35 K203 ; R35 := R35["INVENTORY"]
	1422	[3474]	EQ       	0 R34 R35 ; if R34 ~= R35 then PC := 1443
	1423	[3474]	JMP      	1443 ; PC := 1443
	1424	[3475]	GETGLOBAL	R34 K5 ; R34 := 0x7b998233
	1425	[3475]	MOVE     	R35 R24 ; R35 := R24
	1426	[3475]	CALL     	R34 2 2 ; R34 := R34(R35)
	1427	[3475]	TEST     	R34 1 ; if R34 then PC := 1440
	1428	[3475]	JMP      	1440 ; PC := 1440
	1429	[3476]	SELF     	R34 R24 K218 ; R35 := R24; R34 := R24[0x40e9c32b]
	1430	[3476]	CALL     	R34 2 2 ; R34 := R34(R35)
	1431	[3477]	GETGLOBAL	R35 K5 ; R35 := 0x7b998233
	1432	[3477]	MOVE     	R36 R34 ; R36 := R34
	1433	[3477]	CALL     	R35 2 2 ; R35 := R35(R36)
	1434	[3477]	TEST     	R35 1 ; if R35 then PC := 1440
	1435	[3477]	JMP      	1440 ; PC := 1440
	1436	[3478]	LOADK    	R37 K288 ; R37 := true
	1437	[3478]	SELF     	R35 R34 R37 ; R36 := R34; R35 := R34[R37]
	1438	[3478]	CALL     	R35 2 2 ; R35 := R35(R36)
	1439	[3478]	SETUPVAL 	R35 U56 ; U56 := R35
	1440	[3481]	GETUPVAL 	R35 U57 ; R35 := U57
	1441	[3481]	GETUPVAL 	R36 U56 ; R36 := U56
	1442	[3481]	CALL     	R35 2 1 ; R35(R36)
	1443	[3487]	GETGLOBAL	R35 K79 ; R35 := 0xae91e43b
	1444	[3487]	SELF     	R35 R35 K84 ; R36 := R35; R35 := R35[0xaade900e]
	1445	[3487]	LOADK    	R37 K289 ; R37 := "SellList.Slider"
	1446	[3487]	LOADK    	R38 := 11.000000
	1447	[3487]	OP_LOADBOOL	R39 0 0 ; R39 := false
	1448	[3487]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1449	[3488]	GETGLOBAL	R35 K79 ; R35 := 0xae91e43b
	1450	[3488]	SELF     	R35 R35 K84 ; R36 := R35; R35 := R35[0xaade900e]
	1451	[3488]	LOADK    	R37 K290 ; R37 := "SellList.SliderValue"
	1452	[3488]	LOADK    	R38 := 11.000000
	1453	[3488]	OP_LOADBOOL	R39 0 0 ; R39 := false
	1454	[3488]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1455	[3491]	GETUPVAL 	R35 U58 ; R35 := U58
	1456	[3491]	CALL     	R35 1 1 ; R35()
	1457	[3492]	RETURN   	R0 1 ; return 

function #71 <?:3495,3510> (20 instructions, 80 bytes at 000002111F42EDD0)
4 params, 9 slots, 2 upvalues, 0 locals, 5 constants, 1 function
	1	[3496]	GETGLOBAL	R4 K0 ; R4 := 0x5f0788c4
	2	[3496]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	3	[3496]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0x42b04007]
	4	[3496]	MOVE     	R7 R1 ; R7 := R1
	5	[3496]	OP_LOADBOOL	R8 0 0 ; R8 := false
	6	[3496]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	7	[3496]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	8	[3497]	GETUPVAL 	R5 U0 ; R5 := U0
	9	[3497]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0xbd2e96ea]
	10	[3497]	GETUPVAL 	R7 U1 ; R7 := U1
	11	[3508]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	12	[3508]	MOVE     	R0 R4 ; R0 := R4
	13	[3508]	MOVE     	R0 R2 ; R0 := R2
	14	[3508]	MOVE     	R0 R3 ; R0 := R3
	15	[3508]	MOVE     	R0 R0 ; R0 := R0
	16	[3497]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	17	[3509]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[3509]	ADD      	R5 R5 K4 ; R5 := R5 + 2.350000
	19	[3509]	SETUPVAL 	R5 U1 ; U1 := R5
	20	[3510]	RETURN   	R0 1 ; return 

function #72 <?:3512,3627> (322 instructions, 1288 bytes at 000002111FCBC030)
2 params, 31 slots, 17 upvalues, 0 locals, 66 constants, 0 functions
	1	[3513]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[3513]	LOADK    	R3 K1 ; R3 := "OnSellCompleted(result="
	3	[3513]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	4	[3513]	MOVE     	R5 R0 ; R5 := R0
	5	[3513]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[3513]	LOADK    	R5 K3 ; R5 := ", body="
	7	[3513]	GETGLOBAL	R6 K2 ; R6 := 0x64fb1586
	8	[3513]	MOVE     	R7 R1 ; R7 := R1
	9	[3513]	CALL     	R6 2 2 ; R6 := R6(R7)
	10	[3513]	LOADK    	R7 K4 ; R7 := ")"
	11	[3513]	CONCAT   	R3 R3 R7 ; R3 := R3 .. R4 .. R5 .. R6 .. R7
	12	[3513]	CALL     	R2 2 1 ; R2(R3)
	13	[3514]	GETUPVAL 	R2 U0 ; R2 := U0
	14	[3514]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x46610c50]
	15	[3514]	OP_LOADBOOL	R4 0 0 ; R4 := false
	16	[3514]	CALL     	R2 3 1 ; R2(R3,R4)
	17	[3515]	LOADNIL  	R2 R2 ; R2 := nil
	18	[3515]	SETUPVAL 	R2 U1 ; U1 := R2
	19	[3517]	TEST     	R0 0 ; if not R0 then PC := 311
	20	[3517]	JMP      	311 ; PC := 311
	21	[3518]	LOADK    	R2 := 0.000000
	22	[3518]	SETUPVAL 	R2 U2 ; U2 := R2
	23	[3520]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	24	[3520]	GETGLOBAL	R3 K7 ; R3 := _T
	25	[3520]	GETTABLE 	R3 R3 K8 ; R3 := R3["Manifest"]
	26	[3520]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[3520]	TEST     	R2 1 ; if R2 then PC := 51
	28	[3520]	JMP      	51 ; PC := 51
	29	[3520]	GETUPVAL 	R2 U3 ; R2 := U3
	30	[3520]	GETUPVAL 	R3 U4 ; R3 := U4
	31	[3520]	GETTABLE 	R3 R3 K9 ; R3 := R3["SHIP_PARTS"]
	32	[3520]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 51
	33	[3520]	JMP      	51 ; PC := 51
	34	[3521]	GETGLOBAL	R2 K7 ; R2 := _T
	35	[3521]	GETTABLE 	R2 R2 K8 ; R2 := R2["Manifest"]
	36	[3521]	GETTABLE 	R2 R2 K10 ; R2 := R2["mITEMS"]
	37	[3522]	LOADK    	R3 := 1.000000
	38	[3522]	LEN      	R4 R2 ; R4 := # R2
	39	[3522]	LOADK    	R5 := 1.000000
	40	[3522]	FORPREP  	R3 50 ; R3 -= R5; PC := 50
	41	[3523]	GETUPVAL 	R7 U5 ; R7 := U5
	42	[3523]	GETTABLE 	R8 R2 R6 ; R8 := R2[R6]
	43	[3523]	GETTABLE 	R8 R8 K11 ; R8 := R8["StoreItem"]
	44	[3523]	GETTABLE 	R9 R2 R6 ; R9 := R2[R6]
	45	[3523]	GETTABLE 	R9 R9 K12 ; R9 := R9["Name"]
	46	[3523]	GETTABLE 	R10 R2 R6 ; R10 := R2[R6]
	47	[3523]	GETTABLE 	R10 R10 K13 ; R10 := R10["Count"]
	48	[3523]	LOADK    	R11 := 2.000000
	49	[3523]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	50	[3522]	FORLOOP  	R3 41 ; R3 += R5; if R3 <= R4 then begin PC := 41; R6 := R3 end
	51	[3527]	GETUPVAL 	R7 U6 ; R7 := U6
	52	[3527]	GETTABLE 	R7 R7 K14 ; R7 := R7["mSellPrice"]
	53	[3527]	LT       	0 K15 R7 ; if 0.000000 >= R7 then PC := 86
	54	[3527]	JMP      	86 ; PC := 86
	55	[3528]	GETGLOBAL	R7 K16 ; R7 := 0xbd44348a
	56	[3529]	LOADK    	R8 K17 ; R8 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	57	[3530]	GETUPVAL 	R9 U6 ; R9 := U6
	58	[3530]	GETTABLE 	R9 R9 K18 ; R9 := R9["mSellCurrency"]
	59	[3530]	EQ       	0 R9 K20 ; if R9 ~= 1.000000 then PC := 64
	60	[3530]	JMP      	64 ; PC := 64
	61	[3531]	GETGLOBAL	R7 K21 ; R7 := 0xf138e613
	62	[3532]	LOADK    	R8 K22 ; R8 := "/Lotus/Language/Items/PrimeBucks"
	63	[3532]	JMP      	70 ; PC := 70
	64	[3533]	GETUPVAL 	R9 U6 ; R9 := U6
	65	[3533]	GETTABLE 	R9 R9 K18 ; R9 := R9["mSellCurrency"]
	66	[3533]	EQ       	0 R9 K23 ; if R9 ~= 2.000000 then PC := 70
	67	[3533]	JMP      	70 ; PC := 70
	68	[3534]	GETGLOBAL	R7 K24 ; R7 := 0xb7323fae
	69	[3535]	LOADK    	R8 K25 ; R8 := "/Lotus/Language/Items/FusionBundle"
	70	[3538]	GETUPVAL 	R9 U6 ; R9 := U6
	71	[3538]	GETTABLE 	R9 R9 K14 ; R9 := R9["mSellPrice"]
	72	[3539]	LT       	0 K15 R9 ; if 0.000000 >= R9 then PC := 86
	73	[3539]	JMP      	86 ; PC := 86
	74	[3540]	GETUPVAL 	R10 U5 ; R10 := U5
	75	[3540]	MOVE     	R11 R7 ; R11 := R7
	76	[3540]	GETGLOBAL	R12 K26 ; R12 := 0x5f0788c4
	77	[3540]	GETGLOBAL	R13 K27 ; R13 := 0xae91e43b
	78	[3540]	SELF     	R13 R13 K28 ; R14 := R13; R13 := R13[0x42b04007]
	79	[3540]	MOVE     	R15 R8 ; R15 := R8
	80	[3540]	OP_LOADBOOL	R16 0 0 ; R16 := false
	81	[3540]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	82	[3540]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	83	[3540]	MOVE     	R13 R9 ; R13 := R9
	84	[3540]	LOADK    	R14 := 3.000000
	85	[3540]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	86	[3544]	LOADK    	R10 K29 ; R10 := ""
	87	[3545]	GETUPVAL 	R11 U3 ; R11 := U3
	88	[3545]	GETUPVAL 	R12 U4 ; R12 := U4
	89	[3545]	GETTABLE 	R12 R12 K30 ; R12 := R12["TREASURE"]
	90	[3545]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 267
	91	[3545]	JMP      	267 ; PC := 267
	92	[3545]	GETGLOBAL	R11 K6 ; R11 := 0x7b998233
	93	[3545]	GETGLOBAL	R12 K7 ; R12 := _T
	94	[3545]	GETTABLE 	R12 R12 K31 ; R12 := R12["PlayBackgroundTransmission"]
	95	[3545]	CALL     	R11 2 2 ; R11 := R11(R12)
	96	[3545]	TEST     	R11 1 ; if R11 then PC := 267
	97	[3545]	JMP      	267 ; PC := 267
	98	[3546]	LOADK    	R11 := 0.000000
	99	[3547]	LOADK    	R12 := 0.000000
	100	[3548]	LOADK    	R13 := 0.000000
	101	[3549]	LOADK    	R14 := 1.000000
	102	[3549]	GETUPVAL 	R15 U7 ; R15 := U7
	103	[3549]	GETTABLE 	R15 R15 K32 ; R15 := R15["mElements"]
	104	[3549]	LEN      	R15 R15 ; R15 := # R15
	105	[3549]	LOADK    	R16 := 1.000000
	106	[3549]	FORPREP  	R14 116 ; R14 -= R16; PC := 116
	107	[3550]	GETUPVAL 	R18 U7 ; R18 := U7
	108	[3550]	GETTABLE 	R18 R18 K32 ; R18 := R18["mElements"]
	109	[3550]	GETTABLE 	R18 R18 R17 ; R18 := R18[R17]
	110	[3550]	GETTABLE 	R18 R18 K33 ; R18 := R18["IsCostElement"]
	111	[3550]	TEST     	R18 0 ; if not R18 then PC := 115
	112	[3550]	JMP      	115 ; PC := 115
	113	[3551]	ADD      	R13 R13 K20 ; R13 := R13 + 1.000000
	114	[3551]	JMP      	116 ; PC := 116
	115	[3553]	MOVE     	R12 R17 ; R12 := R17
	116	[3549]	FORLOOP  	R14 107 ; R14 += R16; if R14 <= R15 then begin PC := 107; R17 := R14 end
	117	[3556]	GETUPVAL 	R18 U7 ; R18 := U7
	118	[3556]	GETTABLE 	R18 R18 K32 ; R18 := R18["mElements"]
	119	[3556]	LEN      	R18 R18 ; R18 := # R18
	120	[3556]	SUB      	R18 R18 R13 ; R18 := R18 - R13
	121	[3556]	EQ       	0 R18 K20 ; if R18 ~= 1.000000 then PC := 186
	122	[3556]	JMP      	186 ; PC := 186
	123	[3556]	GETUPVAL 	R18 U7 ; R18 := U7
	124	[3556]	GETTABLE 	R18 R18 K32 ; R18 := R18["mElements"]
	125	[3556]	GETTABLE 	R18 R18 R12 ; R18 := R18[R12]
	126	[3556]	GETTABLE 	R18 R18 K13 ; R18 := R18["Count"]
	127	[3556]	EQ       	0 R18 K20 ; if R18 ~= 1.000000 then PC := 186
	128	[3556]	JMP      	186 ; PC := 186
	129	[3557]	GETUPVAL 	R18 U8 ; R18 := U8
	130	[3557]	GETTABLE 	R18 R18 K34 ; R18 := R18[0x06d055f9]
	131	[3557]	GETGLOBAL	R19 K35 ; R19 := 0xdd6e4cf8
	132	[3557]	LOADK    	R20 := 0.000000
	133	[3557]	LOADK    	R21 := 1.000000
	134	[3557]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	135	[3557]	GETUPVAL 	R20 U9 ; R20 := U9
	136	[3557]	LE       	1 R19 R20 ; if R19 <= R20 then PC := 139
	137	[3557]	JMP      	139 ; PC := 139
	138	[3557]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 139
	139	[3557]	OP_LOADBOOL	R19 1 0 ; R19 := true
	140	[3557]	LOADK    	R20 K36 ; R20 := "SellGeneric"
	141	[3557]	LOADK    	R21 K29 ; R21 := ""
	142	[3557]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	143	[3557]	MOVE     	R10 R18 ; R10 := R18
	144	[3558]	EQ       	0 R10 K29 ; if R10 ~= "" then PC := 249
	145	[3558]	JMP      	249 ; PC := 249
	146	[3559]	NEWTABLE 	R18 3 0 ; R18 := {}
	147	[3559]	LOADK    	R19 K37 ; R19 := "StarsOnly"
	148	[3559]	LOADK    	R20 K38 ; R20 := "SculptureOnly"
	149	[3559]	LOADK    	R21 K39 ; R21 := "CompleteTreasure"
	150	[3559]	SETLIST  	R18 3 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 3
	151	[3560]	GETUPVAL 	R19 U7 ; R19 := U7
	152	[3560]	GETTABLE 	R19 R19 K32 ; R19 := R19["mElements"]
	153	[3560]	GETTABLE 	R19 R19 R12 ; R19 := R19[R12]
	154	[3561]	GETGLOBAL	R20 K6 ; R20 := 0x7b998233
	155	[3561]	GETTABLE 	R21 R19 K40 ; R21 := R19["MatchedSockets"]
	156	[3561]	CALL     	R20 2 2 ; R20 := R20(R21)
	157	[3561]	TEST     	R20 1 ; if R20 then PC := 178
	158	[3561]	JMP      	178 ; PC := 178
	159	[3562]	GETTABLE 	R20 R19 K40 ; R20 := R19["MatchedSockets"]
	160	[3562]	GETTABLE 	R21 R19 K41 ; R21 := R19["Sockets"]
	161	[3562]	LEN      	R21 R21 ; R21 := # R21
	162	[3562]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 171
	163	[3562]	JMP      	171 ; PC := 171
	164	[3564]	GETGLOBAL	R20 K42 ; R20 := 0x5bced4c4
	165	[3564]	GETTABLE 	R20 R20 K43 ; R20 := R20[0xb62ecfe0]
	166	[3564]	MOVE     	R21 R11 ; R21 := R11
	167	[3564]	LOADK    	R22 := 3.000000
	168	[3564]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	169	[3564]	MOVE     	R11 R20 ; R11 := R20
	170	[3564]	JMP      	184 ; PC := 184
	171	[3567]	GETGLOBAL	R20 K42 ; R20 := 0x5bced4c4
	172	[3567]	GETTABLE 	R20 R20 K43 ; R20 := R20[0xb62ecfe0]
	173	[3567]	MOVE     	R21 R11 ; R21 := R11
	174	[3567]	LOADK    	R22 := 2.000000
	175	[3567]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	176	[3567]	MOVE     	R11 R20 ; R11 := R20
	177	[3568]	JMP      	184 ; PC := 184
	178	[3571]	GETGLOBAL	R20 K42 ; R20 := 0x5bced4c4
	179	[3571]	GETTABLE 	R20 R20 K43 ; R20 := R20[0xb62ecfe0]
	180	[3571]	MOVE     	R21 R11 ; R21 := R11
	181	[3571]	LOADK    	R22 := 1.000000
	182	[3571]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	183	[3571]	MOVE     	R11 R20 ; R11 := R20
	184	[3573]	GETTABLE 	R10 R18 R11 ; R10 := R18[R11]
	185	[3574]	JMP      	249 ; PC := 249
	186	[3576]	NEWTABLE 	R20 3 0 ; R20 := {}
	187	[3576]	LOADK    	R21 K44 ; R21 := "SellGroupEmpty"
	188	[3576]	LOADK    	R22 K45 ; R22 := "SellGroupPartialFull"
	189	[3576]	LOADK    	R23 K46 ; R23 := "SellGroupAllFull"
	190	[3576]	SETLIST  	R20 3 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 3
	191	[3577]	LOADK    	R21 := 1.000000
	192	[3577]	GETUPVAL 	R22 U7 ; R22 := U7
	193	[3577]	GETTABLE 	R22 R22 K32 ; R22 := R22["mElements"]
	194	[3577]	LEN      	R22 R22 ; R22 := # R22
	195	[3577]	LOADK    	R23 := 1.000000
	196	[3577]	FORPREP  	R21 247 ; R21 -= R23; PC := 247
	197	[3578]	GETUPVAL 	R25 U7 ; R25 := U7
	198	[3578]	GETTABLE 	R25 R25 K32 ; R25 := R25["mElements"]
	199	[3578]	GETTABLE 	R25 R25 R24 ; R25 := R25[R24]
	200	[3579]	GETTABLE 	R26 R25 K33 ; R26 := R25["IsCostElement"]
	201	[3579]	TEST     	R26 1 ; if R26 then PC := 247
	202	[3579]	JMP      	247 ; PC := 247
	203	[3580]	GETGLOBAL	R26 K6 ; R26 := 0x7b998233
	204	[3580]	GETTABLE 	R27 R25 K40 ; R27 := R25["MatchedSockets"]
	205	[3580]	CALL     	R26 2 2 ; R26 := R26(R27)
	206	[3580]	TEST     	R26 1 ; if R26 then PC := 237
	207	[3580]	JMP      	237 ; PC := 237
	208	[3581]	GETTABLE 	R26 R25 K40 ; R26 := R25["MatchedSockets"]
	209	[3581]	EQ       	0 R26 K15 ; if R26 ~= 0.000000 then PC := 222
	210	[3581]	JMP      	222 ; PC := 222
	211	[3583]	GETGLOBAL	R26 K42 ; R26 := 0x5bced4c4
	212	[3583]	GETTABLE 	R26 R26 K47 ; R26 := R26[0xac1b386a]
	213	[3583]	GETGLOBAL	R27 K42 ; R27 := 0x5bced4c4
	214	[3583]	GETTABLE 	R27 R27 K43 ; R27 := R27[0xb62ecfe0]
	215	[3583]	MOVE     	R28 R11 ; R28 := R11
	216	[3583]	LOADK    	R29 := 1.000000
	217	[3583]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	218	[3583]	LOADK    	R28 := 2.000000
	219	[3583]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	220	[3583]	MOVE     	R11 R26 ; R11 := R26
	221	[3583]	JMP      	247 ; PC := 247
	222	[3584]	GETTABLE 	R26 R25 K40 ; R26 := R25["MatchedSockets"]
	223	[3584]	GETTABLE 	R27 R25 K41 ; R27 := R25["Sockets"]
	224	[3584]	LEN      	R27 R27 ; R27 := # R27
	225	[3584]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 235
	226	[3584]	JMP      	235 ; PC := 235
	227	[3586]	EQ       	1 R11 K15 ; if R11 == 0.000000 then PC := 231
	228	[3586]	JMP      	231 ; PC := 231
	229	[3586]	EQ       	0 R11 K48 ; if R11 ~= 3.000000 then PC := 233
	230	[3586]	JMP      	233 ; PC := 233
	231	[3587]	LOADK    	R11 := 3.000000
	232	[3587]	JMP      	247 ; PC := 247
	233	[3589]	LOADK    	R11 := 2.000000
	234	[3590]	JMP      	247 ; PC := 247
	235	[3593]	LOADK    	R11 := 2.000000
	236	[3594]	JMP      	247 ; PC := 247
	237	[3597]	GETGLOBAL	R26 K42 ; R26 := 0x5bced4c4
	238	[3597]	GETTABLE 	R26 R26 K47 ; R26 := R26[0xac1b386a]
	239	[3597]	GETGLOBAL	R27 K42 ; R27 := 0x5bced4c4
	240	[3597]	GETTABLE 	R27 R27 K43 ; R27 := R27[0xb62ecfe0]
	241	[3597]	MOVE     	R28 R11 ; R28 := R11
	242	[3597]	LOADK    	R29 := 1.000000
	243	[3597]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	244	[3597]	LOADK    	R28 := 2.000000
	245	[3597]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	246	[3597]	MOVE     	R11 R26 ; R11 := R26
	247	[3577]	FORLOOP  	R21 197 ; R21 += R23; if R21 <= R22 then begin PC := 197; R24 := R21 end
	248	[3601]	GETTABLE 	R10 R20 R11 ; R10 := R20[R11]
	249	[3603]	GETGLOBAL	R26 K7 ; R26 := _T
	250	[3603]	GETGLOBAL	R27 K7 ; R27 := _T
	251	[3603]	GETTABLE 	R27 R27 K50 ; R27 := R27["MarooDeco"]
	252	[3603]	SETTABLE 	R26 K49 R27 ; R26[0x6f7b67d7] := R27
	253	[3604]	GETGLOBAL	R26 K7 ; R26 := _T
	254	[3604]	GETTABLE 	R26 R26 K51 ; R26 := R26[0xc7848588]
	255	[3604]	MOVE     	R27 R10 ; R27 := R10
	256	[3604]	GETGLOBAL	R28 K52 ; R28 := 0xe91d7466
	257	[3604]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	258	[3605]	TEST     	R26 0 ; if not R26 then PC := 284
	259	[3605]	JMP      	284 ; PC := 284
	260	[3606]	GETGLOBAL	R27 K7 ; R27 := _T
	261	[3606]	GETTABLE 	R27 R27 K51 ; R27 := R27[0xc7848588]
	262	[3606]	LOADK    	R28 K53 ; R28 := "AnythingElsePrompt"
	263	[3606]	GETGLOBAL	R29 K52 ; R29 := 0xe91d7466
	264	[3606]	LOADK    	R30 := 2.000000
	265	[3606]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	266	[3607]	JMP      	284 ; PC := 284
	267	[3608]	GETUPVAL 	R27 U3 ; R27 := U3
	268	[3608]	GETUPVAL 	R28 U4 ; R28 := U4
	269	[3608]	GETTABLE 	R28 R28 K54 ; R28 := R28["SHIP_SCRAP"]
	270	[3608]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 282
	271	[3608]	JMP      	282 ; PC := 282
	272	[3608]	GETUPVAL 	R27 U3 ; R27 := U3
	273	[3608]	GETUPVAL 	R28 U4 ; R28 := U4
	274	[3608]	GETTABLE 	R28 R28 K9 ; R28 := R28["SHIP_PARTS"]
	275	[3608]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 282
	276	[3608]	JMP      	282 ; PC := 282
	277	[3608]	GETUPVAL 	R27 U3 ; R27 := U3
	278	[3608]	GETUPVAL 	R28 U4 ; R28 := U4
	279	[3608]	GETTABLE 	R28 R28 K55 ; R28 := R28["SHIP_RAW"]
	280	[3608]	EQ       	0 R27 R28 ; if R27 ~= R28 then PC := 284
	281	[3608]	JMP      	284 ; PC := 284
	282	[3609]	GETGLOBAL	R27 K7 ; R27 := _T
	283	[3609]	SETTABLE 	R27 K56 K57 ; R27["ShipParts_Sold"] := true
	284	[3612]	GETGLOBAL	R27 K7 ; R27 := _T
	285	[3612]	GETTABLE 	R27 R27 K58 ; R27 := R27["InventoryInfo"]
	286	[3612]	EQ       	1 R27 K59 ; if R27 == nil then PC := 296
	287	[3612]	JMP      	296 ; PC := 296
	288	[3612]	GETGLOBAL	R27 K7 ; R27 := _T
	289	[3612]	GETTABLE 	R27 R27 K58 ; R27 := R27["InventoryInfo"]
	290	[3612]	GETTABLE 	R27 R27 K60 ; R27 := R27["MinSellAmount"]
	291	[3612]	EQ       	1 R27 K59 ; if R27 == nil then PC := 296
	292	[3612]	JMP      	296 ; PC := 296
	293	[3613]	GETUPVAL 	R27 U10 ; R27 := U10
	294	[3613]	OP_LOADBOOL	R28 1 0 ; R28 := true
	295	[3613]	CALL     	R27 2 1 ; R27(R28)
	296	[3616]	GETUPVAL 	R27 U7 ; R27 := U7
	297	[3616]	SELF     	R27 R27 K61 ; R28 := R27; R27 := R27[0x7c09c373]
	298	[3616]	CALL     	R27 2 1 ; R27(R28)
	299	[3617]	GETUPVAL 	R27 U11 ; R27 := U11
	300	[3617]	GETUPVAL 	R28 U12 ; R28 := U12
	301	[3617]	UNM      	R28 R28 ; R28 := ^ R28
	302	[3617]	CALL     	R27 2 1 ; R27(R28)
	303	[3619]	GETUPVAL 	R27 U13 ; R27 := U13
	304	[3619]	CALL     	R27 1 1 ; R27()
	305	[3620]	GETUPVAL 	R27 U14 ; R27 := U14
	306	[3620]	CALL     	R27 1 1 ; R27()
	307	[3621]	GETUPVAL 	R27 U15 ; R27 := U15
	308	[3621]	GETTABLE 	R27 R27 K62 ; R27 := R27[0x32820b13]
	309	[3621]	CALL     	R27 1 1 ; R27()
	310	[3621]	JMP      	322 ; PC := 322
	311	[3623]	GETGLOBAL	R27 K0 ; R27 := 0x3d106989
	312	[3623]	LOADK    	R28 K63 ; R28 := "Inventory Sale Fail: "
	313	[3623]	MOVE     	R29 R1 ; R29 := R1
	314	[3623]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	315	[3623]	CALL     	R27 2 1 ; R27(R28)
	316	[3624]	GETUPVAL 	R27 U8 ; R27 := U8
	317	[3624]	GETTABLE 	R27 R27 K64 ; R27 := R27[0xe0cba3ca]
	318	[3624]	LOADK    	R28 K65 ; R28 := "/Lotus/Language/Menu/Item_SaleFailed"
	319	[3624]	CALL     	R27 2 1 ; R27(R28)
	320	[3625]	OP_LOADBOOL	R27 0 0 ; R27 := false
	321	[3625]	SETUPVAL 	R27 U16 ; U16 := R27
	322	[3627]	RETURN   	R0 1 ; return 

function #73 <?:3629,3640> (41 instructions, 164 bytes at 000002111FCBD1F0)
1 param, 4 slots, 6 upvalues, 0 locals, 15 constants, 0 functions
	1	[3630]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[3630]	SETUPVAL 	R1 U0 ; U0 := R1
	3	[3631]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	4	[3631]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	5	[3631]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[3631]	TEST     	R1 1 ; if R1 then PC := 39
	7	[3631]	JMP      	39 ; PC := 39
	8	[3631]	GETGLOBAL	R1 K2 ; R1 := 0x03f57322
	9	[3631]	MOVE     	R2 R0 ; R2 := R0
	10	[3631]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[3631]	EQ       	0 R1 K4 ; if R1 ~= 4.000000 then PC := 39
	12	[3631]	JMP      	39 ; PC := 39
	13	[3632]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[3632]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x46610c50]
	15	[3632]	OP_LOADBOOL	R3 1 0 ; R3 := true
	16	[3632]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[3633]	GETGLOBAL	R1 K6 ; R1 := 0x60cce7b4
	18	[3633]	GETUPVAL 	R2 U2 ; R2 := U2
	19	[3633]	EQ       	1 R2 K7 ; if R2 == nil then PC := 22
	20	[3633]	JMP      	22 ; PC := 22
	21	[3633]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 22
	22	[3633]	OP_LOADBOOL	R2 1 0 ; R2 := true
	23	[3633]	CALL     	R1 2 1 ; R1(R2)
	24	[3634]	GETGLOBAL	R1 K8 ; R1 := 0x6c97a788
	25	[3634]	GETTABLE 	R1 R1 K9 ; R1 := R1[0xa128fc07]
	26	[3634]	GETUPVAL 	R2 U3 ; R2 := U3
	27	[3634]	LOADK    	R3 K10 ; R3 := "OnSellCompleted"
	28	[3634]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	29	[3634]	SETUPVAL 	R1 U2 ; U2 := R1
	30	[3635]	GETUPVAL 	R1 U2 ; R1 := U2
	31	[3635]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0xe4162eed]
	32	[3635]	CALL     	R1 2 1 ; R1(R2)
	33	[3636]	GETUPVAL 	R1 U4 ; R1 := U4
	34	[3636]	GETTABLE 	R1 R1 K12 ; R1 := R1[0x659d451f]
	35	[3636]	GETGLOBAL	R2 K13 ; R2 := 0x0032441c
	36	[3636]	GETTABLE 	R2 R2 K14 ; R2 := R2["UISound_SweetenerTwo"]
	37	[3636]	CALL     	R1 2 1 ; R1(R2)
	38	[3636]	JMP      	41 ; PC := 41
	39	[3638]	OP_LOADBOOL	R1 0 0 ; R1 := false
	40	[3638]	SETUPVAL 	R1 U5 ; U5 := R1
	41	[3640]	RETURN   	R0 1 ; return 

function #74 <?:3642,3704> (125 instructions, 500 bytes at 000002111FCBD500)
1 param, 12 slots, 0 upvalues, 0 locals, 34 constants, 0 functions
	1	[3643]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[3643]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x25a6e75e]
	3	[3643]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3644]	LOADNIL  	R2 R2 ; R2 := nil
	5	[3645]	OP_LOADBOOL	R3 0 0 ; R3 := false
	6	[3646]	EQ       	0 R0 K3 ; if R0 ~= 0.000000 then PC := 13
	7	[3646]	JMP      	13 ; PC := 13
	8	[3647]	SELF     	R4 R1 K4 ; R5 := R1; R4 := R1[0x215bf396]
	9	[3647]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[3647]	MOVE     	R2 R4 ; R2 := R4
	11	[3648]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[3648]	JMP      	104 ; PC := 104
	13	[3649]	EQ       	0 R0 K5 ; if R0 ~= 1.000000 then PC := 20
	14	[3649]	JMP      	20 ; PC := 20
	15	[3650]	SELF     	R4 R1 K6 ; R5 := R1; R4 := R1[0x57d88957]
	16	[3650]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[3650]	MOVE     	R2 R4 ; R2 := R4
	18	[3651]	OP_LOADBOOL	R3 1 0 ; R3 := true
	19	[3651]	JMP      	104 ; PC := 104
	20	[3652]	EQ       	0 R0 K7 ; if R0 ~= 3.000000 then PC := 27
	21	[3652]	JMP      	27 ; PC := 27
	22	[3653]	SELF     	R4 R1 K8 ; R5 := R1; R4 := R1[0x21a3da0c]
	23	[3653]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[3653]	MOVE     	R2 R4 ; R2 := R4
	25	[3654]	OP_LOADBOOL	R3 1 0 ; R3 := true
	26	[3654]	JMP      	104 ; PC := 104
	27	[3655]	EQ       	0 R0 K9 ; if R0 ~= 5.000000 then PC := 34
	28	[3655]	JMP      	34 ; PC := 34
	29	[3656]	SELF     	R4 R1 K10 ; R5 := R1; R4 := R1[0x0bf14f02]
	30	[3656]	CALL     	R4 2 2 ; R4 := R4(R5)
	31	[3656]	MOVE     	R2 R4 ; R2 := R4
	32	[3657]	OP_LOADBOOL	R3 1 0 ; R3 := true
	33	[3657]	JMP      	104 ; PC := 104
	34	[3658]	EQ       	0 R0 K11 ; if R0 ~= 16.000000 then PC := 46
	35	[3658]	JMP      	46 ; PC := 46
	36	[3659]	SELF     	R4 R1 K12 ; R5 := R1; R4 := R1[0x2a207127]
	37	[3659]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[3659]	LEN      	R4 R4 ; R4 := # R4
	39	[3659]	LT       	0 K3 R4 ; if 0.000000 >= R4 then PC := 104
	40	[3659]	JMP      	104 ; PC := 104
	41	[3660]	SELF     	R4 R1 K13 ; R5 := R1; R4 := R1[0xa2c6d8b7]
	42	[3660]	CALL     	R4 2 2 ; R4 := R4(R5)
	43	[3660]	MOVE     	R2 R4 ; R2 := R4
	44	[3661]	OP_LOADBOOL	R3 1 0 ; R3 := true
	45	[3662]	JMP      	104 ; PC := 104
	46	[3663]	EQ       	0 R0 K14 ; if R0 ~= 6.000000 then PC := 50
	47	[3663]	JMP      	50 ; PC := 50
	48	[3664]	OP_LOADBOOL	R3 1 0 ; R3 := true
	49	[3664]	JMP      	104 ; PC := 104
	50	[3665]	EQ       	0 R0 K15 ; if R0 ~= 15.000000 then PC := 57
	51	[3665]	JMP      	57 ; PC := 57
	52	[3666]	SELF     	R4 R1 K12 ; R5 := R1; R4 := R1[0x2a207127]
	53	[3666]	CALL     	R4 2 2 ; R4 := R4(R5)
	54	[3666]	MOVE     	R2 R4 ; R2 := R4
	55	[3667]	OP_LOADBOOL	R3 1 0 ; R3 := true
	56	[3667]	JMP      	104 ; PC := 104
	57	[3668]	EQ       	0 R0 K16 ; if R0 ~= 24.000000 then PC := 64
	58	[3668]	JMP      	64 ; PC := 64
	59	[3669]	SELF     	R4 R1 K17 ; R5 := R1; R4 := R1[0xa855881a]
	60	[3669]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[3669]	MOVE     	R2 R4 ; R2 := R4
	62	[3670]	OP_LOADBOOL	R3 1 0 ; R3 := true
	63	[3670]	JMP      	104 ; PC := 104
	64	[3671]	EQ       	0 R0 K18 ; if R0 ~= 27.000000 then PC := 71
	65	[3671]	JMP      	71 ; PC := 71
	66	[3672]	SELF     	R4 R1 K19 ; R5 := R1; R4 := R1[0x4bb8609a]
	67	[3672]	CALL     	R4 2 2 ; R4 := R4(R5)
	68	[3672]	MOVE     	R2 R4 ; R2 := R4
	69	[3673]	OP_LOADBOOL	R3 1 0 ; R3 := true
	70	[3673]	JMP      	104 ; PC := 104
	71	[3674]	EQ       	0 R0 K20 ; if R0 ~= 28.000000 then PC := 78
	72	[3674]	JMP      	78 ; PC := 78
	73	[3675]	SELF     	R4 R1 K21 ; R5 := R1; R4 := R1[0x6f7b67d7]
	74	[3675]	CALL     	R4 2 2 ; R4 := R4(R5)
	75	[3675]	MOVE     	R2 R4 ; R2 := R4
	76	[3676]	OP_LOADBOOL	R3 1 0 ; R3 := true
	77	[3676]	JMP      	104 ; PC := 104
	78	[3677]	EQ       	0 R0 K22 ; if R0 ~= 29.000000 then PC := 85
	79	[3677]	JMP      	85 ; PC := 85
	80	[3678]	SELF     	R4 R1 K23 ; R5 := R1; R4 := R1[0x3218c3b0]
	81	[3678]	CALL     	R4 2 2 ; R4 := R4(R5)
	82	[3678]	MOVE     	R2 R4 ; R2 := R4
	83	[3679]	OP_LOADBOOL	R3 1 0 ; R3 := true
	84	[3679]	JMP      	104 ; PC := 104
	85	[3680]	EQ       	0 R0 K24 ; if R0 ~= 39.000000 then PC := 92
	86	[3680]	JMP      	92 ; PC := 92
	87	[3681]	SELF     	R4 R1 K25 ; R5 := R1; R4 := R1[0x91a3eddf]
	88	[3681]	CALL     	R4 2 2 ; R4 := R4(R5)
	89	[3681]	MOVE     	R2 R4 ; R2 := R4
	90	[3682]	OP_LOADBOOL	R3 1 0 ; R3 := true
	91	[3682]	JMP      	104 ; PC := 104
	92	[3683]	EQ       	0 R0 K26 ; if R0 ~= 41.000000 then PC := 99
	93	[3683]	JMP      	99 ; PC := 99
	94	[3684]	SELF     	R4 R1 K27 ; R5 := R1; R4 := R1[0x738deb95]
	95	[3684]	CALL     	R4 2 2 ; R4 := R4(R5)
	96	[3684]	MOVE     	R2 R4 ; R2 := R4
	97	[3685]	OP_LOADBOOL	R3 1 0 ; R3 := true
	98	[3685]	JMP      	104 ; PC := 104
	99	[3686]	EQ       	0 R0 K28 ; if R0 ~= 48.000000 then PC := 104
	100	[3686]	JMP      	104 ; PC := 104
	101	[3687]	SELF     	R4 R1 K29 ; R5 := R1; R4 := R1[0xfab085e3]
	102	[3687]	CALL     	R4 2 2 ; R4 := R4(R5)
	103	[3687]	MOVE     	R2 R4 ; R2 := R4
	104	[3690]	LOADK    	R4 := -1.000000
	105	[3691]	EQ       	1 R2 K30 ; if R2 == nil then PC := 121
	106	[3691]	JMP      	121 ; PC := 121
	107	[3692]	LEN      	R4 R2 ; R4 := # R2
	108	[3693]	TEST     	R3 0 ; if not R3 then PC := 121
	109	[3693]	JMP      	121 ; PC := 121
	110	[3694]	LOADK    	R5 := 1.000000
	111	[3694]	LEN      	R6 R2 ; R6 := # R2
	112	[3694]	LOADK    	R7 := 1.000000
	113	[3694]	FORPREP  	R5 120 ; R5 -= R7; PC := 120
	114	[3695]	GETTABLE 	R9 R2 R8 ; R9 := R2[R8]
	115	[3696]	SELF     	R10 R9 K31 ; R11 := R9; R10 := R9[0xba568eef]
	116	[3696]	CALL     	R10 2 2 ; R10 := R10(R11)
	117	[3696]	TEST     	R10 0 ; if not R10 then PC := 120
	118	[3696]	JMP      	120 ; PC := 120
	119	[3697]	SUB      	R4 R4 K5 ; R4 := R4 - 1.000000
	120	[3694]	FORLOOP  	R5 114 ; R5 += R7; if R5 <= R6 then begin PC := 114; R8 := R5 end
	121	[3703]	NEWTABLE 	R10 0 2 ; R10 := {}
	122	[3703]	SETTABLE 	R10 K32 R4 ; R10["Count"] := R4
	123	[3703]	SETTABLE 	R10 K33 R3 ; R10["CanHaveExpirables"] := R3
	124	[3703]	RETURN   	R10 2 ; return R10 
	125	[3704]	RETURN   	R0 1 ; return 

function #75 <?:3706,3737> (116 instructions, 464 bytes at 000002111FCBDC20)
0 params, 28 slots, 5 upvalues, 0 locals, 46 constants, 0 functions
	1	[3707]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3707]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[3707]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3707]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[3707]	JMP      	7 ; PC := 7
	6	[3708]	RETURN   	R0 1 ; return 
	7	[3711]	GETUPVAL 	R0 U1 ; R0 := U1
	8	[3711]	SETTABLE 	R0 K1 K3 ; R0["mSellCurrency"] := 4.000000
	9	[3713]	NEWTABLE 	R0 0 0 ; R0 := {}
	10	[3714]	LOADK    	R1 K4 ; R1 := ""
	11	[3715]	GETGLOBAL	R2 K5 ; R2 := 0xc8802016
	12	[3715]	GETUPVAL 	R3 U2 ; R3 := U2
	13	[3715]	GETTABLE 	R3 R3 K6 ; R3 := R3["mElements"]
	14	[3715]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	15	[3715]	JMP      	39 ; PC := 39
	16	[3716]	GETUPVAL 	R7 U1 ; R7 := U1
	17	[3716]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x6f344425]
	18	[3716]	GETTABLE 	R9 R6 K8 ; R9 := R6["Category"]
	19	[3716]	GETTABLE 	R10 R6 K9 ; R10 := R6["UID"]
	20	[3716]	LOADK    	R11 := 1.000000
	21	[3716]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	22	[3717]	GETGLOBAL	R7 K5 ; R7 := 0xc8802016
	23	[3717]	GETTABLE 	R8 R6 K10 ; R8 := R6["ItemPrices"]
	24	[3717]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	25	[3717]	JMP      	37 ; PC := 37
	26	[3718]	GETTABLE 	R12 R11 K11 ; R12 := R11["mItemType"]
	27	[3718]	SELF     	R12 R12 K12 ; R13 := R12; R12 := R12[0xed4e0128]
	28	[3718]	CALL     	R12 2 2 ; R12 := R12(R13)
	29	[3718]	MOVE     	R1 R12 ; R1 := R12
	30	[3719]	GETTABLE 	R12 R0 R1 ; R12 := R0[R1]
	31	[3719]	TEST     	R12 1 ; if R12 then PC := 34
	32	[3719]	JMP      	34 ; PC := 34
	33	[3719]	LOADK    	R12 := 0.000000
	34	[3719]	GETTABLE 	R13 R11 K13 ; R13 := R11["mItemCount"]
	35	[3719]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	36	[3719]	SETTABLE 	R0 R1 R12 ; R0[R1] := R12
	37	[3717]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 26; R9 := R10 end
	38	[3719]	JMP      	26 ; PC := 26
	39	[3715]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 16; R4 := R5 end
	40	[3720]	JMP      	16 ; PC := 16
	41	[3723]	NEWTABLE 	R12 0 0 ; R12 := {}
	42	[3724]	GETGLOBAL	R13 K14 ; R13 := 0xcfc01047
	43	[3724]	MOVE     	R14 R0 ; R14 := R0
	44	[3724]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	45	[3724]	JMP      	82 ; PC := 82
	46	[3725]	GETUPVAL 	R18 U0 ; R18 := U0
	47	[3725]	SELF     	R18 R18 K15 ; R19 := R18; R18 := R18[0x105074fb]
	48	[3725]	GETGLOBAL	R20 K16 ; R20 := 0x7ed0a956
	49	[3725]	MOVE     	R21 R16 ; R21 := R16
	50	[3725]	CALL     	R20 2 0 ; R20,... := R20(R21)
	51	[3725]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	52	[3726]	GETUPVAL 	R19 U3 ; R19 := U3
	53	[3726]	GETTABLE 	R19 R19 K17 ; R19 := R19[0x056dcf06]
	54	[3726]	MOVE     	R20 R18 ; R20 := R18
	55	[3726]	OP_LOADBOOL	R21 1 0 ; R21 := true
	56	[3726]	CALL     	R19 3 3 ; R19,R20 := R19(R20,R21)
	57	[3727]	GETGLOBAL	R21 K18 ; R21 := 0x33bdd652
	58	[3727]	GETTABLE 	R21 R21 K19 ; R21 := R21[0x23d5322f]
	59	[3727]	MOVE     	R22 R12 ; R22 := R12
	60	[3727]	NEWTABLE 	R23 0 6 ; R23 := {}
	61	[3727]	GETGLOBAL	R24 K21 ; R24 := 0x603636ad
	62	[3727]	GETGLOBAL	R25 K22 ; R25 := 0x64fb1586
	63	[3727]	SELF     	R26 R18 K23 ; R27 := R18; R26 := R18[0xd3a9d01f]
	64	[3727]	CALL     	R26 2 0 ; R26,... := R26(R27)
	65	[3727]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	66	[3727]	NEWTABLE 	R26 0 0 ; R26 := {}
	67	[3727]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	68	[3727]	SETTABLE 	R23 K20 R24 ; R23["Name"] := R24
	69	[3727]	SETTABLE 	R23 K24 R18 ; R23["StoreItem"] := R18
	70	[3727]	SETTABLE 	R23 K25 R17 ; R23["Count"] := R17
	71	[3727]	SETTABLE 	R23 K26 R19 ; R23["Icon"] := R19
	72	[3727]	SETTABLE 	R23 K27 R20 ; R23["Themed"] := R20
	73	[3727]	GETGLOBAL	R24 K21 ; R24 := 0x603636ad
	74	[3727]	GETGLOBAL	R25 K22 ; R25 := 0x64fb1586
	75	[3727]	SELF     	R26 R18 K29 ; R27 := R18; R26 := R18[0x5ba460ac]
	76	[3727]	CALL     	R26 2 0 ; R26,... := R26(R27)
	77	[3727]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	78	[3727]	NEWTABLE 	R26 0 0 ; R26 := {}
	79	[3727]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	80	[3727]	SETTABLE 	R23 K28 R24 ; R23["LocalizedDesc"] := R24
	81	[3727]	CALL     	R21 3 1 ; R21(R22,R23)
	82	[3724]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 46; R15 := R16 end
	83	[3727]	JMP      	46 ; PC := 46
	84	[3730]	GETGLOBAL	R21 K30 ; R21 := 0xae91e43b
	85	[3730]	SELF     	R21 R21 K31 ; R22 := R21; R21 := R21[0x42b04007]
	86	[3730]	LOADK    	R23 K32 ; R23 := "/Lotus/Language/Railjack/SellRepairedSalvage"
	87	[3730]	OP_LOADBOOL	R24 0 0 ; R24 := false
	88	[3730]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	89	[3731]	GETGLOBAL	R22 K30 ; R22 := 0xae91e43b
	90	[3731]	SELF     	R22 R22 K31 ; R23 := R22; R22 := R22[0x42b04007]
	91	[3731]	LOADK    	R24 K33 ; R24 := "/Lotus/Language/Menu/Crafting_CancelBuildSubtitle"
	92	[3731]	OP_LOADBOOL	R25 0 0 ; R25 := false
	93	[3731]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	94	[3732]	GETGLOBAL	R23 K34 ; R23 := _T
	95	[3732]	NEWTABLE 	R24 0 4 ; R24 := {}
	96	[3732]	SETTABLE 	R24 K36 R21 ; R24["TITLE"] := R21
	97	[3732]	SETTABLE 	R24 K37 R22 ; R24["TIP"] := R22
	98	[3732]	SETTABLE 	R24 K38 R12 ; R24["mITEMS"] := R12
	99	[3732]	SETTABLE 	R24 K39 K40 ; R24["CONFIRM_LABEL"] := "/Lotus/Language/Menu/ItemSelection_OK"
	100	[3732]	SETTABLE 	R23 K35 R24 ; R23["Manifest"] := R24
	101	[3733]	GETGLOBAL	R23 K30 ; R23 := 0xae91e43b
	102	[3733]	SELF     	R23 R23 K41 ; R24 := R23; R23 := R23[0x1fd6abd0]
	103	[3733]	GETGLOBAL	R25 K42 ; R25 := 0x0e7e9601
	104	[3733]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	105	[3733]	SETUPVAL 	R23 U4 ; U4 := R23
	106	[3734]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	107	[3734]	GETUPVAL 	R24 U4 ; R24 := U4
	108	[3734]	CALL     	R23 2 2 ; R23 := R23(R24)
	109	[3734]	TEST     	R23 1 ; if R23 then PC := 116
	110	[3734]	JMP      	116 ; PC := 116
	111	[3735]	GETUPVAL 	R23 U4 ; R23 := U4
	112	[3735]	SELF     	R23 R23 K43 ; R24 := R23; R23 := R23[0xe4162eed]
	113	[3735]	LOADK    	R25 K44 ; R25 := "SetCallback"
	114	[3735]	LOADK    	R26 K45 ; R26 := "OnSellConfirmed"
	115	[3735]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	116	[3737]	RETURN   	R0 1 ; return 

function #76 <?:3739,3852> (298 instructions, 1192 bytes at 000002111FCBE360)
0 params, 27 slots, 10 upvalues, 0 locals, 60 constants, 0 functions
	1	[3740]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3740]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[3740]	JMP      	5 ; PC := 5
	4	[3741]	RETURN   	R0 1 ; return 
	5	[3744]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[3744]	TEST     	R0 1 ; if R0 then PC := 13
	7	[3744]	JMP      	13 ; PC := 13
	8	[3744]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	9	[3744]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	10	[3744]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[3744]	TEST     	R0 0 ; if not R0 then PC := 14
	12	[3744]	JMP      	14 ; PC := 14
	13	[3745]	RETURN   	R0 1 ; return 
	14	[3748]	GETGLOBAL	R0 K2 ; R0 := 0x6c97a788
	15	[3748]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x8ec871cb]
	16	[3748]	CALL     	R0 1 2 ; R0 := R0()
	17	[3748]	SETUPVAL 	R0 U2 ; U2 := R0
	18	[3749]	GETUPVAL 	R0 U3 ; R0 := U3
	19	[3749]	GETUPVAL 	R1 U4 ; R1 := U4
	20	[3749]	GETTABLE 	R1 R1 K4 ; R1 := R1["SHIP_PARTS"]
	21	[3749]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 26
	22	[3749]	JMP      	26 ; PC := 26
	23	[3750]	GETUPVAL 	R0 U5 ; R0 := U5
	24	[3750]	CALL     	R0 1 1 ; R0()
	25	[3751]	RETURN   	R0 1 ; return 
	26	[3754]	GETUPVAL 	R0 U3 ; R0 := U3
	27	[3754]	GETUPVAL 	R1 U4 ; R1 := U4
	28	[3754]	GETTABLE 	R1 R1 K5 ; R1 := R1["PRIMEPARTS"]
	29	[3754]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 34
	30	[3754]	JMP      	34 ; PC := 34
	31	[3755]	GETUPVAL 	R0 U2 ; R0 := U2
	32	[3755]	SETTABLE 	R0 K6 K7 ; R0["mSellCurrency"] := 1.000000
	33	[3755]	JMP      	51 ; PC := 51
	34	[3756]	GETUPVAL 	R0 U3 ; R0 := U3
	35	[3756]	GETUPVAL 	R1 U4 ; R1 := U4
	36	[3756]	GETTABLE 	R1 R1 K8 ; R1 := R1["TREASURE"]
	37	[3756]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 49
	38	[3756]	JMP      	49 ; PC := 49
	39	[3756]	GETUPVAL 	R0 U3 ; R0 := U3
	40	[3756]	GETUPVAL 	R1 U4 ; R1 := U4
	41	[3756]	GETTABLE 	R1 R1 K9 ; R1 := R1["SHIP_SCRAP"]
	42	[3756]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 49
	43	[3756]	JMP      	49 ; PC := 49
	44	[3756]	GETUPVAL 	R0 U3 ; R0 := U3
	45	[3756]	GETUPVAL 	R1 U4 ; R1 := U4
	46	[3756]	GETTABLE 	R1 R1 K10 ; R1 := R1["SHIP_RAW"]
	47	[3756]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 51
	48	[3756]	JMP      	51 ; PC := 51
	49	[3757]	GETUPVAL 	R0 U2 ; R0 := U2
	50	[3757]	SETTABLE 	R0 K6 K11 ; R0["mSellCurrency"] := 2.000000
	51	[3760]	NEWTABLE 	R0 0 0 ; R0 := {}
	52	[3761]	NEWTABLE 	R1 0 0 ; R1 := {}
	53	[3763]	LOADK    	R2 := 0.000000
	54	[3763]	SETUPVAL 	R2 U6 ; U6 := R2
	55	[3764]	LOADK    	R2 := 0.000000
	56	[3765]	LOADK    	R3 := 1.000000
	57	[3765]	GETUPVAL 	R4 U7 ; R4 := U7
	58	[3765]	GETTABLE 	R4 R4 K12 ; R4 := R4["mElements"]
	59	[3765]	LEN      	R4 R4 ; R4 := # R4
	60	[3765]	LOADK    	R5 := 1.000000
	61	[3765]	FORPREP  	R3 169 ; R3 -= R5; PC := 169
	62	[3766]	GETGLOBAL	R7 K13 ; R7 := 0xce225efa
	63	[3766]	LOADK    	R8 := 0.000000
	64	[3766]	CALL     	R7 2 1 ; R7(R8)
	65	[3767]	GETUPVAL 	R7 U7 ; R7 := U7
	66	[3767]	GETTABLE 	R7 R7 K12 ; R7 := R7["mElements"]
	67	[3767]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	68	[3768]	GETTABLE 	R8 R7 K14 ; R8 := R7["SellingPrice"]
	69	[3768]	EQ       	1 R8 K15 ; if R8 == nil then PC := 169
	70	[3768]	JMP      	169 ; PC := 169
	71	[3769]	GETTABLE 	R8 R7 K16 ; R8 := R7["Category"]
	72	[3771]	EQ       	0 R8 K18 ; if R8 ~= 18.000000 then PC := 85
	73	[3771]	JMP      	85 ; PC := 85
	74	[3772]	GETGLOBAL	R9 K1 ; R9 := 0x25d99d89
	75	[3772]	SELF     	R9 R9 K19 ; R10 := R9; R9 := R9[0x9b0f479e]
	76	[3772]	GETTABLE 	R11 R7 K20 ; R11 := R7["UID"]
	77	[3772]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	78	[3772]	TEST     	R9 0 ; if not R9 then PC := 85
	79	[3772]	JMP      	85 ; PC := 85
	80	[3773]	GETUPVAL 	R9 U8 ; R9 := U8
	81	[3773]	GETTABLE 	R9 R9 K21 ; R9 := R9[0xe0cba3ca]
	82	[3773]	LOADK    	R10 K22 ; R10 := "/Lotus/Language/Menu/ItemInventory_CantSellResourceDrone"
	83	[3773]	CALL     	R9 2 1 ; R9(R10)
	84	[3774]	RETURN   	R0 1 ; return 
	85	[3778]	GETUPVAL 	R9 U8 ; R9 := U8
	86	[3778]	GETTABLE 	R9 R9 K23 ; R9 := R9[0x06d055f9]
	87	[3778]	GETTABLE 	R10 R7 K24 ; R10 := R7["Count"]
	88	[3778]	EQ       	0 R10 K15 ; if R10 ~= nil then PC := 91
	89	[3778]	JMP      	91 ; PC := 91
	90	[3778]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 91
	91	[3778]	OP_LOADBOOL	R10 1 0 ; R10 := true
	92	[3778]	GETTABLE 	R11 R7 K24 ; R11 := R7["Count"]
	93	[3778]	LOADK    	R12 := 1.000000
	94	[3778]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	95	[3779]	MOVE     	R10 R9 ; R10 := R9
	96	[3780]	LOADK    	R11 := 0.000000
	97	[3781]	GETTABLE 	R12 R7 K20 ; R12 := R7["UID"]
	98	[3781]	EQ       	1 R12 K15 ; if R12 == nil then PC := 108
	99	[3781]	JMP      	108 ; PC := 108
	100	[3781]	GETTABLE 	R12 R7 K20 ; R12 := R7["UID"]
	101	[3781]	EQ       	1 R12 K25 ; if R12 == "" then PC := 108
	102	[3781]	JMP      	108 ; PC := 108
	103	[3781]	EQ       	0 R8 K26 ; if R8 ~= 4.000000 then PC := 108
	104	[3781]	JMP      	108 ; PC := 108
	105	[3783]	LOADK    	R10 := 0.000000
	106	[3784]	GETTABLE 	R11 R7 K14 ; R11 := R7["SellingPrice"]
	107	[3784]	JMP      	110 ; PC := 110
	108	[3786]	GETTABLE 	R12 R7 K14 ; R12 := R7["SellingPrice"]
	109	[3786]	MUL      	R11 R12 R9 ; R11 := R12 * R9
	110	[3789]	GETUPVAL 	R12 U8 ; R12 := U8
	111	[3789]	GETTABLE 	R12 R12 K23 ; R12 := R12[0x06d055f9]
	112	[3789]	GETTABLE 	R13 R7 K20 ; R13 := R7["UID"]
	113	[3789]	EQ       	0 R13 K15 ; if R13 ~= nil then PC := 116
	114	[3789]	JMP      	116 ; PC := 116
	115	[3789]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 116
	116	[3789]	OP_LOADBOOL	R13 1 0 ; R13 := true
	117	[3789]	GETTABLE 	R14 R7 K20 ; R14 := R7["UID"]
	118	[3789]	GETTABLE 	R15 R7 K27 ; R15 := R7["Type"]
	119	[3789]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0xed4e0128]
	120	[3789]	CALL     	R15 2 0 ; R15,... := R15(R16)
	121	[3789]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	122	[3790]	EQ       	0 R8 K29 ; if R8 ~= 34.000000 then PC := 128
	123	[3790]	JMP      	128 ; PC := 128
	124	[3791]	GETTABLE 	R13 R7 K30 ; R13 := R7["RawItem"]
	125	[3791]	SELF     	R13 R13 K31 ; R14 := R13; R13 := R13[0xb8327da7]
	126	[3791]	CALL     	R13 2 2 ; R13 := R13(R14)
	127	[3791]	MOVE     	R12 R13 ; R12 := R13
	128	[3793]	GETUPVAL 	R13 U2 ; R13 := U2
	129	[3793]	SELF     	R13 R13 K32 ; R14 := R13; R13 := R13[0x6f344425]
	130	[3793]	MOVE     	R15 R8 ; R15 := R8
	131	[3793]	MOVE     	R16 R12 ; R16 := R12
	132	[3793]	MOVE     	R17 R10 ; R17 := R10
	133	[3793]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	134	[3795]	GETTABLE 	R13 R0 R8 ; R13 := R0[R8]
	135	[3795]	EQ       	0 R13 K15 ; if R13 ~= nil then PC := 143
	136	[3795]	JMP      	143 ; PC := 143
	137	[3796]	SETTABLE 	R0 R8 K7 ; R0[R8] := 1.000000
	138	[3797]	GETUPVAL 	R13 U9 ; R13 := U9
	139	[3797]	MOVE     	R14 R8 ; R14 := R8
	140	[3797]	CALL     	R13 2 2 ; R13 := R13(R14)
	141	[3797]	SETTABLE 	R1 R8 R13 ; R1[R8] := R13
	142	[3797]	JMP      	146 ; PC := 146
	143	[3799]	GETTABLE 	R13 R0 R8 ; R13 := R0[R8]
	144	[3799]	ADD      	R13 R13 K7 ; R13 := R13 + 1.000000
	145	[3799]	SETTABLE 	R0 R8 R13 ; R0[R8] := R13
	146	[3803]	GETTABLE 	R13 R1 R8 ; R13 := R1[R8]
	147	[3803]	EQ       	1 R13 K15 ; if R13 == nil then PC := 153
	148	[3803]	JMP      	153 ; PC := 153
	149	[3803]	GETTABLE 	R13 R1 R8 ; R13 := R1[R8]
	150	[3803]	GETTABLE 	R13 R13 K33 ; R13 := R13["CanHaveExpirables"]
	151	[3803]	TEST     	R13 1 ; if R13 then PC := 155
	152	[3803]	JMP      	155 ; PC := 155
	153	[3803]	EQ       	0 R8 K34 ; if R8 ~= 24.000000 then PC := 165
	154	[3803]	JMP      	165 ; PC := 165
	155	[3804]	GETTABLE 	R13 R7 K30 ; R13 := R7["RawItem"]
	156	[3804]	SELF     	R13 R13 K35 ; R14 := R13; R13 := R13[0xba568eef]
	157	[3804]	CALL     	R13 2 2 ; R13 := R13(R14)
	158	[3804]	TEST     	R13 0 ; if not R13 then PC := 165
	159	[3804]	JMP      	165 ; PC := 165
	160	[3805]	GETUPVAL 	R13 U8 ; R13 := U8
	161	[3805]	GETTABLE 	R13 R13 K21 ; R13 := R13[0xe0cba3ca]
	162	[3805]	LOADK    	R14 K36 ; R14 := "/Lotus/Language/Menu/ItemInventory_CantSellTimeLimited"
	163	[3805]	CALL     	R13 2 1 ; R13(R14)
	164	[3806]	RETURN   	R0 1 ; return 
	165	[3810]	GETUPVAL 	R13 U6 ; R13 := U6
	166	[3810]	ADD      	R13 R13 R11 ; R13 := R13 + R11
	167	[3810]	SETUPVAL 	R13 U6 ; U6 := R13
	168	[3811]	ADD      	R2 R2 R9 ; R2 := R2 + R9
	169	[3765]	FORLOOP  	R3 62 ; R3 += R5; if R3 <= R4 then begin PC := 62; R6 := R3 end
	170	[3814]	GETUPVAL 	R13 U2 ; R13 := U2
	171	[3814]	GETUPVAL 	R14 U6 ; R14 := U6
	172	[3814]	SETTABLE 	R13 K37 R14 ; R13["mSellPrice"] := R14
	173	[3816]	GETGLOBAL	R13 K38 ; R13 := 0xcfc01047
	174	[3816]	MOVE     	R14 R0 ; R14 := R0
	175	[3816]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	176	[3816]	JMP      	200 ; PC := 200
	177	[3817]	GETTABLE 	R18 R1 R16 ; R18 := R1[R16]
	178	[3817]	EQ       	1 R18 K15 ; if R18 == nil then PC := 200
	179	[3817]	JMP      	200 ; PC := 200
	180	[3817]	GETTABLE 	R18 R1 R16 ; R18 := R1[R16]
	181	[3817]	GETTABLE 	R18 R18 K24 ; R18 := R18["Count"]
	182	[3817]	LE       	0 K39 R18 ; if 0.000000 > R18 then PC := 200
	183	[3817]	JMP      	200 ; PC := 200
	184	[3817]	GETTABLE 	R18 R1 R16 ; R18 := R1[R16]
	185	[3817]	GETTABLE 	R18 R18 K24 ; R18 := R18["Count"]
	186	[3817]	LE       	0 R18 R17 ; if R18 > R17 then PC := 200
	187	[3817]	JMP      	200 ; PC := 200
	188	[3818]	EQ       	0 R16 K40 ; if R16 ~= 15.000000 then PC := 195
	189	[3818]	JMP      	195 ; PC := 195
	190	[3819]	GETUPVAL 	R18 U8 ; R18 := U8
	191	[3819]	GETTABLE 	R18 R18 K21 ; R18 := R18[0xe0cba3ca]
	192	[3819]	LOADK    	R19 K41 ; R19 := "/Lotus/Language/Menu/ItemInventory_CantSellLastSentinel"
	193	[3819]	CALL     	R18 2 1 ; R18(R19)
	194	[3819]	JMP      	199 ; PC := 199
	195	[3821]	GETUPVAL 	R18 U8 ; R18 := U8
	196	[3821]	GETTABLE 	R18 R18 K21 ; R18 := R18[0xe0cba3ca]
	197	[3821]	LOADK    	R19 K42 ; R19 := "/Lotus/Language/Menu/ItemInventory_CantSellLastWeapon"
	198	[3821]	CALL     	R18 2 1 ; R18(R19)
	199	[3823]	RETURN   	R0 1 ; return 
	200	[3816]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 177; R15 := R16 end
	201	[3824]	JMP      	177 ; PC := 177
	202	[3828]	GETUPVAL 	R18 U2 ; R18 := U2
	203	[3828]	GETTABLE 	R18 R18 K37 ; R18 := R18["mSellPrice"]
	204	[3828]	EQ       	0 R18 K39 ; if R18 ~= 0.000000 then PC := 211
	205	[3828]	JMP      	211 ; PC := 211
	206	[3829]	GETUPVAL 	R18 U8 ; R18 := U8
	207	[3829]	GETTABLE 	R18 R18 K21 ; R18 := R18[0xe0cba3ca]
	208	[3829]	LOADK    	R19 K43 ; R19 := "/Lotus/Language/Menu/ItemInventory_NothingCanBeSold"
	209	[3829]	CALL     	R18 2 1 ; R18(R19)
	210	[3830]	RETURN   	R0 1 ; return 
	211	[3833]	OP_LOADBOOL	R18 1 0 ; R18 := true
	212	[3833]	SETUPVAL 	R18 U0 ; U0 := R18
	213	[3834]	OP_LOADBOOL	R18 1 0 ; R18 := true
	214	[3834]	SETUPVAL 	R18 U1 ; U1 := R18
	215	[3835]	LOADK    	R18 K44 ; R18 := "/Lotus/Language/Menu/ConfirmSellFormattedPrice"
	216	[3836]	LOADK    	R19 K45 ; R19 := "/Lotus/Language/Menu/"
	217	[3836]	GETUPVAL 	R20 U8 ; R20 := U8
	218	[3836]	GETTABLE 	R20 R20 K23 ; R20 := R20[0x06d055f9]
	219	[3836]	LT       	1 K7 R2 ; if 1.000000 < R2 then PC := 222
	220	[3836]	JMP      	222 ; PC := 222
	221	[3836]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 222
	222	[3836]	OP_LOADBOOL	R21 1 0 ; R21 := true
	223	[3836]	LOADK    	R22 K46 ; R22 := "ItemInventory_MiscItemPlural"
	224	[3836]	LOADK    	R23 K47 ; R23 := "ItemInventory_MiscItemSingular"
	225	[3836]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	226	[3836]	CONCAT   	R19 R19 R20 ; R19 := R19 .. R20
	227	[3837]	GETGLOBAL	R20 K48 ; R20 := 0xae91e43b
	228	[3837]	SELF     	R20 R20 K49 ; R21 := R20; R20 := R20[0x42b04007]
	229	[3837]	MOVE     	R22 R19 ; R22 := R19
	230	[3837]	OP_LOADBOOL	R23 0 0 ; R23 := false
	231	[3837]	NEWTABLE 	R24 0 1 ; R24 := {}
	232	[3837]	GETUPVAL 	R25 U8 ; R25 := U8
	233	[3837]	GETTABLE 	R25 R25 K51 ; R25 := R25[0x1142c7a8]
	234	[3837]	MOVE     	R26 R2 ; R26 := R2
	235	[3837]	CALL     	R25 2 2 ; R25 := R25(R26)
	236	[3837]	SETTABLE 	R24 K50 R25 ; R24["NUMBER"] := R25
	237	[3837]	CALL     	R20 5 2 ; R20 := R20(R21,R22,R23,R24)
	238	[3837]	MOVE     	R19 R20 ; R19 := R20
	239	[3838]	GETUPVAL 	R20 U8 ; R20 := U8
	240	[3838]	GETTABLE 	R20 R20 K51 ; R20 := R20[0x1142c7a8]
	241	[3838]	GETUPVAL 	R21 U6 ; R21 := U6
	242	[3838]	CALL     	R20 2 2 ; R20 := R20(R21)
	243	[3839]	GETUPVAL 	R21 U3 ; R21 := U3
	244	[3839]	GETUPVAL 	R22 U4 ; R22 := U4
	245	[3839]	GETTABLE 	R22 R22 K5 ; R22 := R22["PRIMEPARTS"]
	246	[3839]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 252
	247	[3839]	JMP      	252 ; PC := 252
	248	[3840]	LOADK    	R21 K52 ; R21 := "<PRIME_BUCKS>"
	249	[3840]	MOVE     	R22 R20 ; R22 := R20
	250	[3840]	CONCAT   	R20 R21 R22 ; R20 := R21 .. R22
	251	[3840]	JMP      	285 ; PC := 285
	252	[3841]	GETUPVAL 	R21 U3 ; R21 := U3
	253	[3841]	GETUPVAL 	R22 U4 ; R22 := U4
	254	[3841]	GETTABLE 	R22 R22 K8 ; R22 := R22["TREASURE"]
	255	[3841]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 267
	256	[3841]	JMP      	267 ; PC := 267
	257	[3841]	GETUPVAL 	R21 U3 ; R21 := U3
	258	[3841]	GETUPVAL 	R22 U4 ; R22 := U4
	259	[3841]	GETTABLE 	R22 R22 K9 ; R22 := R22["SHIP_SCRAP"]
	260	[3841]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 267
	261	[3841]	JMP      	267 ; PC := 267
	262	[3841]	GETUPVAL 	R21 U3 ; R21 := U3
	263	[3841]	GETUPVAL 	R22 U4 ; R22 := U4
	264	[3841]	GETTABLE 	R22 R22 K10 ; R22 := R22["SHIP_RAW"]
	265	[3841]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 282
	266	[3841]	JMP      	282 ; PC := 282
	267	[3842]	LOADK    	R21 K53 ; R21 := "<FUSION_POINTS>"
	268	[3842]	MOVE     	R22 R20 ; R22 := R20
	269	[3842]	CONCAT   	R20 R21 R22 ; R20 := R21 .. R22
	270	[3843]	GETUPVAL 	R21 U3 ; R21 := U3
	271	[3843]	GETUPVAL 	R22 U4 ; R22 := U4
	272	[3843]	GETTABLE 	R22 R22 K9 ; R22 := R22["SHIP_SCRAP"]
	273	[3843]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 280
	274	[3843]	JMP      	280 ; PC := 280
	275	[3843]	GETUPVAL 	R21 U3 ; R21 := U3
	276	[3843]	GETUPVAL 	R22 U4 ; R22 := U4
	277	[3843]	GETTABLE 	R22 R22 K10 ; R22 := R22["SHIP_RAW"]
	278	[3843]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 285
	279	[3843]	JMP      	285 ; PC := 285
	280	[3844]	LOADK    	R18 K54 ; R18 := "/Lotus/Language/Railjack/ConfirmScrap"
	281	[3845]	JMP      	285 ; PC := 285
	282	[3847]	LOADK    	R21 K55 ; R21 := "<CREDITS>"
	283	[3847]	MOVE     	R22 R20 ; R22 := R20
	284	[3847]	CONCAT   	R20 R21 R22 ; R20 := R21 .. R22
	285	[3850]	GETGLOBAL	R21 K48 ; R21 := 0xae91e43b
	286	[3850]	SELF     	R21 R21 K49 ; R22 := R21; R21 := R21[0x42b04007]
	287	[3850]	MOVE     	R23 R18 ; R23 := R18
	288	[3850]	OP_LOADBOOL	R24 1 0 ; R24 := true
	289	[3850]	NEWTABLE 	R25 0 2 ; R25 := {}
	290	[3850]	SETTABLE 	R25 K56 R19 ; R25["ITEMS"] := R19
	291	[3850]	SETTABLE 	R25 K57 R20 ; R25["FORMATTED_PRICE"] := R20
	292	[3850]	CALL     	R21 5 2 ; R21 := R21(R22,R23,R24,R25)
	293	[3851]	GETUPVAL 	R22 U8 ; R22 := U8
	294	[3851]	GETTABLE 	R22 R22 K58 ; R22 := R22[0xdedfded7]
	295	[3851]	MOVE     	R23 R21 ; R23 := R21
	296	[3851]	LOADK    	R24 K59 ; R24 := "OnSellConfirmed"
	297	[3851]	CALL     	R22 3 1 ; R22(R23,R24)
	298	[3852]	RETURN   	R0 1 ; return 

function #77 <?:3854,3898> (96 instructions, 384 bytes at 000002111FCBF3C0)
0 params, 10 slots, 9 upvalues, 0 locals, 22 constants, 1 function
	1	[3855]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3855]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[3855]	JMP      	5 ; PC := 5
	4	[3856]	RETURN   	R0 1 ; return 
	5	[3859]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[3859]	GETUPVAL 	R1 U2 ; R1 := U2
	7	[3859]	LT       	0 R1 R0 ; if R1 >= R0 then PC := 14
	8	[3859]	JMP      	14 ; PC := 14
	9	[3860]	GETUPVAL 	R0 U3 ; R0 := U3
	10	[3860]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xa53f5e12]
	11	[3860]	LOADK    	R1 K1 ; R1 := "/Lotus/Language/Menu/EnemySelector_MaxCountReached"
	12	[3860]	CALL     	R0 2 1 ; R0(R1)
	13	[3861]	RETURN   	R0 1 ; return 
	14	[3864]	GETUPVAL 	R0 U4 ; R0 := U4
	15	[3864]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x46610c50]
	16	[3864]	OP_LOADBOOL	R2 1 0 ; R2 := true
	17	[3864]	CALL     	R0 3 1 ; R0(R1,R2)
	18	[3866]	NEWTABLE 	R0 0 0 ; R0 := {}
	19	[3867]	GETGLOBAL	R1 K3 ; R1 := _T
	20	[3867]	NEWTABLE 	R2 0 0 ; R2 := {}
	21	[3867]	SETTABLE 	R1 K4 R2 ; R1["SpawnedEnemies"] := R2
	22	[3869]	GETUPVAL 	R1 U5 ; R1 := U5
	23	[3869]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xea061e98]
	24	[3877]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	25	[3877]	MOVE     	R0 R0 ; R0 := R0
	26	[3869]	CALL     	R1 3 1 ; R1(R2,R3)
	27	[3879]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	28	[3879]	GETGLOBAL	R2 K3 ; R2 := _T
	29	[3879]	GETTABLE 	R2 R2 K4 ; R2 := R2["SpawnedEnemies"]
	30	[3879]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[3879]	TEST     	R1 1 ; if R1 then PC := 87
	32	[3879]	JMP      	87 ; PC := 87
	33	[3879]	GETGLOBAL	R1 K3 ; R1 := _T
	34	[3879]	GETTABLE 	R1 R1 K4 ; R1 := R1["SpawnedEnemies"]
	35	[3879]	LEN      	R1 R1 ; R1 := # R1
	36	[3879]	EQ       	1 R1 K7 ; if R1 == 0.000000 then PC := 87
	37	[3879]	JMP      	87 ; PC := 87
	38	[3881]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	39	[3881]	GETUPVAL 	R2 U6 ; R2 := U6
	40	[3881]	CALL     	R1 2 2 ; R1 := R1(R2)
	41	[3881]	TEST     	R1 1 ; if R1 then PC := 87
	42	[3881]	JMP      	87 ; PC := 87
	43	[3881]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	44	[3881]	GETGLOBAL	R2 K8 ; R2 := 0x76ea806b
	45	[3881]	CALL     	R1 2 2 ; R1 := R1(R2)
	46	[3881]	TEST     	R1 1 ; if R1 then PC := 87
	47	[3881]	JMP      	87 ; PC := 87
	48	[3882]	NEWTABLE 	R1 0 0 ; R1 := {}
	49	[3883]	LOADK    	R2 := 1.000000
	50	[3883]	GETGLOBAL	R3 K3 ; R3 := _T
	51	[3883]	GETTABLE 	R3 R3 K4 ; R3 := R3["SpawnedEnemies"]
	52	[3883]	LEN      	R3 R3 ; R3 := # R3
	53	[3883]	LOADK    	R4 := 1.000000
	54	[3883]	FORPREP  	R2 78 ; R2 -= R4; PC := 78
	55	[3884]	GETGLOBAL	R6 K9 ; R6 := 0x34291f5c
	56	[3884]	GETTABLE 	R6 R6 K10 ; R6 := R6[0xf7e74d7a]
	57	[3884]	CALL     	R6 1 2 ; R6 := R6()
	58	[3885]	GETGLOBAL	R7 K3 ; R7 := _T
	59	[3885]	GETTABLE 	R7 R7 K4 ; R7 := R7["SpawnedEnemies"]
	60	[3885]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	61	[3885]	GETTABLE 	R7 R7 K12 ; R7 := R7["Type"]
	62	[3885]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0xed4e0128]
	63	[3885]	CALL     	R7 2 2 ; R7 := R7(R8)
	64	[3885]	SETTABLE 	R6 K11 R7 ; R6["enemyType"] := R7
	65	[3886]	GETGLOBAL	R7 K3 ; R7 := _T
	66	[3886]	GETTABLE 	R7 R7 K4 ; R7 := R7["SpawnedEnemies"]
	67	[3886]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	68	[3886]	GETTABLE 	R7 R7 K15 ; R7 := R7["SourceType"]
	69	[3886]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0xed4e0128]
	70	[3886]	CALL     	R7 2 2 ; R7 := R7(R8)
	71	[3886]	SETTABLE 	R6 K14 R7 ; R6["resourceType"] := R7
	72	[3887]	GETGLOBAL	R7 K3 ; R7 := _T
	73	[3887]	GETTABLE 	R7 R7 K4 ; R7 := R7["SpawnedEnemies"]
	74	[3887]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	75	[3887]	GETTABLE 	R7 R7 K17 ; R7 := R7["Count"]
	76	[3887]	SETTABLE 	R6 K16 R7 ; R6["enemyAmount"] := R7
	77	[3888]	SETTABLE 	R1 R5 R6 ; R1[R5] := R6
	78	[3883]	FORLOOP  	R2 55 ; R2 += R4; if R2 <= R3 then begin PC := 55; R5 := R2 end
	79	[3890]	GETUPVAL 	R7 U6 ; R7 := U6
	80	[3890]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0x51853a16]
	81	[3890]	MOVE     	R9 R1 ; R9 := R1
	82	[3890]	CALL     	R7 3 1 ; R7(R8,R9)
	83	[3891]	GETGLOBAL	R7 K8 ; R7 := 0x76ea806b
	84	[3891]	SELF     	R7 R7 K19 ; R8 := R7; R7 := R7[0x524772b5]
	85	[3891]	LOADK    	R9 := 0.000000
	86	[3891]	CALL     	R7 3 1 ; R7(R8,R9)
	87	[3895]	OP_LOADBOOL	R7 1 0 ; R7 := true
	88	[3895]	SETUPVAL 	R7 U0 ; U0 := R7
	89	[3896]	OP_LOADBOOL	R7 1 0 ; R7 := true
	90	[3896]	SETUPVAL 	R7 U7 ; U7 := R7
	91	[3897]	GETGLOBAL	R7 K20 ; R7 := 0xbd496aa1
	92	[3897]	GETTABLE 	R7 R7 K21 ; R7 := R7[0x42645da3]
	93	[3897]	MOVE     	R8 R0 ; R8 := R0
	94	[3897]	CALL     	R7 2 2 ; R7 := R7(R8)
	95	[3897]	SETUPVAL 	R7 U8 ; U8 := R7
	96	[3898]	RETURN   	R0 1 ; return 

function #78 <?:3900,3902> (3 instructions, 12 bytes at 000002111FCBFBB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3901]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3901]	CALL     	R0 1 1 ; R0()
	3	[3902]	RETURN   	R0 1 ; return 

function #79 <?:3904,3906> (3 instructions, 12 bytes at 000002111FCBFC80)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3905]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3905]	CALL     	R0 1 1 ; R0()
	3	[3906]	RETURN   	R0 1 ; return 

function #80 <?:3908,3922> (32 instructions, 128 bytes at 000002111FCBFD50)
0 params, 3 slots, 6 upvalues, 0 locals, 9 constants, 0 functions
	1	[3909]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3909]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[3909]	JMP      	5 ; PC := 5
	4	[3910]	RETURN   	R0 1 ; return 
	5	[3913]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[3913]	GETTABLE 	R0 R0 K0 ; R0 := R0["mSortMenu"]
	7	[3913]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0488daa7]
	8	[3913]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[3913]	TEST     	R0 0 ; if not R0 then PC := 15
	10	[3913]	JMP      	15 ; PC := 15
	11	[3914]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	12	[3914]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xabab085c]
	13	[3914]	LOADK    	R2 K4 ; R2 := 0.150000
	14	[3914]	CALL     	R0 3 1 ; R0(R1,R2)
	15	[3917]	GETUPVAL 	R0 U2 ; R0 := U2
	16	[3917]	GETUPVAL 	R1 U3 ; R1 := U3
	17	[3917]	GETTABLE 	R1 R1 K5 ; R1 := R1["INVENTORY"]
	18	[3917]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 26
	19	[3917]	JMP      	26 ; PC := 26
	20	[3917]	GETUPVAL 	R0 U1 ; R0 := U1
	21	[3917]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xabdfd8fe]
	22	[3917]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[3917]	TEST     	R0 0 ; if not R0 then PC := 26
	24	[3917]	JMP      	26 ; PC := 26
	25	[3918]	RETURN   	R0 1 ; return 
	26	[3921]	GETUPVAL 	R0 U4 ; R0 := U4
	27	[3921]	GETUPVAL 	R1 U5 ; R1 := U5
	28	[3921]	GETTABLE 	R1 R1 K7 ; R1 := R1["EXIT"]
	29	[3921]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	30	[3921]	GETTABLE 	R0 R0 K8 ; R0 := R0[0x7ca0d7fa]
	31	[3921]	CALL     	R0 1 1 ; R0()
	32	[3922]	RETURN   	R0 1 ; return 

function #81 <?:3926,3930> (12 instructions, 48 bytes at 000002111FCBFFA0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[3927]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3927]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[3927]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3927]	TEST     	R1 1 ; if R1 then PC := 12
	5	[3927]	JMP      	12 ; PC := 12
	6	[3928]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[3928]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xdf42446e]
	8	[3928]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	9	[3928]	MOVE     	R4 R0 ; R4 := R0
	10	[3928]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[3928]	CALL     	R1 0 1 ; R1(R2,...)
	12	[3930]	RETURN   	R0 1 ; return 

function #82 <?:3932,3936> (12 instructions, 48 bytes at 000002111FCC00F0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[3933]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3933]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[3933]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3933]	TEST     	R1 1 ; if R1 then PC := 12
	5	[3933]	JMP      	12 ; PC := 12
	6	[3934]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[3934]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[3934]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	9	[3934]	MOVE     	R4 R0 ; R4 := R0
	10	[3934]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[3934]	CALL     	R1 0 1 ; R1(R2,...)
	12	[3936]	RETURN   	R0 1 ; return 

function #83 <?:3938,3942> (16 instructions, 64 bytes at 000002111FCC0240)
1 param, 5 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[3939]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3939]	TEST     	R1 1 ; if R1 then PC := 16
	3	[3939]	JMP      	16 ; PC := 16
	4	[3939]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	5	[3939]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[3939]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[3939]	TEST     	R1 1 ; if R1 then PC := 16
	8	[3939]	JMP      	16 ; PC := 16
	9	[3940]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[3940]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x070daa5a]
	11	[3940]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	12	[3940]	MOVE     	R4 R0 ; R4 := R0
	13	[3940]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[3940]	OP_LOADBOOL	R4 1 0 ; R4 := true
	15	[3940]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[3942]	RETURN   	R0 1 ; return 

function #84 <?:3944,3948> (14 instructions, 56 bytes at 000002111FCC03B0)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[3945]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3945]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[3945]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCategoryMenu"]
	4	[3945]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[3945]	TEST     	R1 1 ; if R1 then PC := 14
	6	[3945]	JMP      	14 ; PC := 14
	7	[3946]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3946]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCategoryMenu"]
	9	[3946]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[3946]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[3946]	MOVE     	R4 R0 ; R4 := R0
	12	[3946]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[3946]	CALL     	R1 0 1 ; R1(R2,...)
	14	[3948]	RETURN   	R0 1 ; return 

function #85 <?:3950,3954> (14 instructions, 56 bytes at 000002111FCC0530)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[3951]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3951]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[3951]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCategoryMenu"]
	4	[3951]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[3951]	TEST     	R1 1 ; if R1 then PC := 14
	6	[3951]	JMP      	14 ; PC := 14
	7	[3952]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[3952]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCategoryMenu"]
	9	[3952]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[3952]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[3952]	MOVE     	R4 R0 ; R4 := R0
	12	[3952]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[3952]	CALL     	R1 0 1 ; R1(R2,...)
	14	[3954]	RETURN   	R0 1 ; return 

function #86 <?:3956,3975> (92 instructions, 368 bytes at 000002111FCC06B0)
1 param, 10 slots, 7 upvalues, 0 locals, 19 constants, 0 functions
	1	[3957]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3957]	TEST     	R1 1 ; if R1 then PC := 92
	3	[3957]	JMP      	92 ; PC := 92
	4	[3957]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	5	[3957]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[3957]	GETTABLE 	R2 R2 K1 ; R2 := R2["mCategoryMenu"]
	7	[3957]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[3957]	TEST     	R1 1 ; if R1 then PC := 92
	9	[3957]	JMP      	92 ; PC := 92
	10	[3958]	GETUPVAL 	R1 U1 ; R1 := U1
	11	[3958]	GETTABLE 	R1 R1 K1 ; R1 := R1["mCategoryMenu"]
	12	[3958]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x070daa5a]
	13	[3958]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	14	[3958]	MOVE     	R4 R0 ; R4 := R0
	15	[3958]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[3958]	OP_LOADBOOL	R4 1 0 ; R4 := true
	17	[3958]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[3959]	GETUPVAL 	R1 U2 ; R1 := U2
	19	[3959]	GETUPVAL 	R2 U3 ; R2 := U3
	20	[3959]	GETTABLE 	R2 R2 K4 ; R2 := R2["FISH"]
	21	[3959]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 92
	22	[3959]	JMP      	92 ; PC := 92
	23	[3960]	EQ       	0 R0 K5 ; if R0 ~= "1" then PC := 31
	24	[3960]	JMP      	31 ; PC := 31
	25	[3961]	GETUPVAL 	R1 U4 ; R1 := U4
	26	[3961]	GETUPVAL 	R2 U5 ; R2 := U5
	27	[3961]	GETTABLE 	R2 R2 K6 ; R2 := R2["FISH_CATEGORY"]
	28	[3961]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	29	[3961]	SETTABLE 	R1 K7 K8 ; R1["mLabel"] := "/Lotus/Language/Menu/ItemInventory_SelectAll"
	30	[3961]	JMP      	90 ; PC := 90
	31	[3962]	EQ       	0 R0 K9 ; if R0 ~= "2" then PC := 51
	32	[3962]	JMP      	51 ; PC := 51
	33	[3963]	GETGLOBAL	R1 K10 ; R1 := 0xae91e43b
	34	[3963]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x42b04007]
	35	[3963]	LOADK    	R3 K12 ; R3 := "/Lotus/Language/UiElements/SelectAllFishCategorySmall"
	36	[3963]	OP_LOADBOOL	R4 1 0 ; R4 := true
	37	[3963]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	38	[3964]	GETUPVAL 	R2 U4 ; R2 := U4
	39	[3964]	GETUPVAL 	R3 U5 ; R3 := U5
	40	[3964]	GETTABLE 	R3 R3 K6 ; R3 := R3["FISH_CATEGORY"]
	41	[3964]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	42	[3964]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	43	[3964]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x42b04007]
	44	[3964]	LOADK    	R5 K13 ; R5 := "/Lotus/Language/UiElements/SelectAllFishCategory"
	45	[3964]	OP_LOADBOOL	R6 0 0 ; R6 := false
	46	[3964]	NEWTABLE 	R7 0 1 ; R7 := {}
	47	[3964]	SETTABLE 	R7 K14 R1 ; R7["CATEGORY"] := R1
	48	[3964]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	49	[3964]	SETTABLE 	R2 K7 R3 ; R2["mLabel"] := R3
	50	[3964]	JMP      	90 ; PC := 90
	51	[3965]	EQ       	0 R0 K15 ; if R0 ~= "3" then PC := 71
	52	[3965]	JMP      	71 ; PC := 71
	53	[3966]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	54	[3966]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x42b04007]
	55	[3966]	LOADK    	R4 K16 ; R4 := "/Lotus/Language/UiElements/SelectAllFishCategoryMedium"
	56	[3966]	OP_LOADBOOL	R5 1 0 ; R5 := true
	57	[3966]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	58	[3967]	GETUPVAL 	R3 U4 ; R3 := U4
	59	[3967]	GETUPVAL 	R4 U5 ; R4 := U5
	60	[3967]	GETTABLE 	R4 R4 K6 ; R4 := R4["FISH_CATEGORY"]
	61	[3967]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	62	[3967]	GETGLOBAL	R4 K10 ; R4 := 0xae91e43b
	63	[3967]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x42b04007]
	64	[3967]	LOADK    	R6 K13 ; R6 := "/Lotus/Language/UiElements/SelectAllFishCategory"
	65	[3967]	OP_LOADBOOL	R7 0 0 ; R7 := false
	66	[3967]	NEWTABLE 	R8 0 1 ; R8 := {}
	67	[3967]	SETTABLE 	R8 K14 R2 ; R8["CATEGORY"] := R2
	68	[3967]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	69	[3967]	SETTABLE 	R3 K7 R4 ; R3["mLabel"] := R4
	70	[3967]	JMP      	90 ; PC := 90
	71	[3968]	EQ       	0 R0 K17 ; if R0 ~= "4" then PC := 90
	72	[3968]	JMP      	90 ; PC := 90
	73	[3969]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	74	[3969]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x42b04007]
	75	[3969]	LOADK    	R5 K18 ; R5 := "/Lotus/Language/UiElements/SelectAllFishCategoryLarge"
	76	[3969]	OP_LOADBOOL	R6 1 0 ; R6 := true
	77	[3969]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	78	[3970]	GETUPVAL 	R4 U4 ; R4 := U4
	79	[3970]	GETUPVAL 	R5 U5 ; R5 := U5
	80	[3970]	GETTABLE 	R5 R5 K6 ; R5 := R5["FISH_CATEGORY"]
	81	[3970]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	82	[3970]	GETGLOBAL	R5 K10 ; R5 := 0xae91e43b
	83	[3970]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x42b04007]
	84	[3970]	LOADK    	R7 K13 ; R7 := "/Lotus/Language/UiElements/SelectAllFishCategory"
	85	[3970]	OP_LOADBOOL	R8 0 0 ; R8 := false
	86	[3970]	NEWTABLE 	R9 0 1 ; R9 := {}
	87	[3970]	SETTABLE 	R9 K14 R3 ; R9["CATEGORY"] := R3
	88	[3970]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	89	[3970]	SETTABLE 	R4 K7 R5 ; R4["mLabel"] := R5
	90	[3972]	GETUPVAL 	R4 U6 ; R4 := U6
	91	[3972]	CALL     	R4 1 1 ; R4()
	92	[3975]	RETURN   	R0 1 ; return 

function #87 <?:3977,3978> (1 instruction, 4 bytes at 000002111FCC0C20)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[3978]	RETURN   	R0 1 ; return 

function #88 <?:3980,3981> (1 instruction, 4 bytes at 000002111FCC0CF0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[3981]	RETURN   	R0 1 ; return 

function #89 <?:3983,3984> (1 instruction, 4 bytes at 000002111FCC0DC0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[3984]	RETURN   	R0 1 ; return 

function #90 <?:3986,3991> (17 instructions, 68 bytes at 000002111FCC0E90)
0 params, 4 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[3987]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3987]	TEST     	R0 1 ; if R0 then PC := 15
	3	[3987]	JMP      	15 ; PC := 15
	4	[3987]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	5	[3987]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[3987]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[3987]	TEST     	R0 1 ; if R0 then PC := 15
	8	[3987]	JMP      	15 ; PC := 15
	9	[3988]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[3988]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[3988]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[3988]	GETTABLE 	R2 R2 K2 ; R2 := R2["DECREMENT"]
	13	[3988]	OP_LOADBOOL	R3 0 0 ; R3 := false
	14	[3988]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[3990]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[3990]	RETURN   	R0 2 ; return R0 
	17	[3991]	RETURN   	R0 1 ; return 

function #91 <?:3993,3998> (17 instructions, 68 bytes at 000002111FCC1020)
0 params, 4 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[3994]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3994]	TEST     	R0 1 ; if R0 then PC := 15
	3	[3994]	JMP      	15 ; PC := 15
	4	[3994]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	5	[3994]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[3994]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[3994]	TEST     	R0 1 ; if R0 then PC := 15
	8	[3994]	JMP      	15 ; PC := 15
	9	[3995]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[3995]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[3995]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[3995]	GETTABLE 	R2 R2 K2 ; R2 := R2["INCREMENT"]
	13	[3995]	OP_LOADBOOL	R3 0 0 ; R3 := false
	14	[3995]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[3997]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[3997]	RETURN   	R0 2 ; return R0 
	17	[3998]	RETURN   	R0 1 ; return 

function #92 <?:4000,4005> (17 instructions, 68 bytes at 000002111FCC11B0)
0 params, 4 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[4001]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4001]	TEST     	R0 1 ; if R0 then PC := 15
	3	[4001]	JMP      	15 ; PC := 15
	4	[4001]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	5	[4001]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[4001]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[4001]	TEST     	R0 1 ; if R0 then PC := 15
	8	[4001]	JMP      	15 ; PC := 15
	9	[4002]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[4002]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[4002]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[4002]	GETTABLE 	R2 R2 K2 ; R2 := R2["DECREMENT"]
	13	[4002]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[4002]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[4004]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[4004]	RETURN   	R0 2 ; return R0 
	17	[4005]	RETURN   	R0 1 ; return 

function #93 <?:4007,4012> (17 instructions, 68 bytes at 00000211390582A0)
0 params, 4 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[4008]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4008]	TEST     	R0 1 ; if R0 then PC := 15
	3	[4008]	JMP      	15 ; PC := 15
	4	[4008]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	5	[4008]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[4008]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[4008]	TEST     	R0 1 ; if R0 then PC := 15
	8	[4008]	JMP      	15 ; PC := 15
	9	[4009]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[4009]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[4009]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[4009]	GETTABLE 	R2 R2 K2 ; R2 := R2["INCREMENT"]
	13	[4009]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[4009]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[4011]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[4011]	RETURN   	R0 2 ; return R0 
	17	[4012]	RETURN   	R0 1 ; return 

function #94 <?:4014,4018> (16 instructions, 64 bytes at 00000211390583D0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[4015]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4015]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[4015]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4015]	TEST     	R0 1 ; if R0 then PC := 16
	5	[4015]	JMP      	16 ; PC := 16
	6	[4015]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4015]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4015]	GETTABLE 	R1 R1 K1 ; R1 := R1["mSortMenu"]
	9	[4015]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[4015]	TEST     	R0 1 ; if R0 then PC := 16
	11	[4015]	JMP      	16 ; PC := 16
	12	[4016]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[4016]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSortMenu"]
	14	[4016]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x32b02cab]
	15	[4016]	CALL     	R0 2 1 ; R0(R1)
	16	[4018]	RETURN   	R0 1 ; return 

function #95 <?:4020,4024> (16 instructions, 64 bytes at 0000021139058540)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[4021]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4021]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[4021]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4021]	TEST     	R0 1 ; if R0 then PC := 16
	5	[4021]	JMP      	16 ; PC := 16
	6	[4021]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4021]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4021]	GETTABLE 	R1 R1 K1 ; R1 := R1["mSortMenu"]
	9	[4021]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[4021]	TEST     	R0 1 ; if R0 then PC := 16
	11	[4021]	JMP      	16 ; PC := 16
	12	[4022]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[4022]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSortMenu"]
	14	[4022]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xeaeb4acc]
	15	[4022]	CALL     	R0 2 1 ; R0(R1)
	16	[4024]	RETURN   	R0 1 ; return 

function #96 <?:4026,4030> (16 instructions, 64 bytes at 00000211390586B0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[4027]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4027]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[4027]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4027]	TEST     	R0 1 ; if R0 then PC := 16
	5	[4027]	JMP      	16 ; PC := 16
	6	[4027]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4027]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4027]	GETTABLE 	R1 R1 K1 ; R1 := R1["mSortMenu"]
	9	[4027]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[4027]	TEST     	R0 1 ; if R0 then PC := 16
	11	[4027]	JMP      	16 ; PC := 16
	12	[4028]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[4028]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSortMenu"]
	14	[4028]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xcc4b959d]
	15	[4028]	CALL     	R0 2 1 ; R0(R1)
	16	[4030]	RETURN   	R0 1 ; return 

function #97 <?:4032,4034> (3 instructions, 12 bytes at 0000021139058820)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4033]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4033]	RETURN   	R0 2 ; return R0 
	3	[4034]	RETURN   	R0 1 ; return 

function #98 <?:4036,4049> (22 instructions, 88 bytes at 00000211390588F0)
0 params, 5 slots, 5 upvalues, 0 locals, 8 constants, 1 function
	1	[4037]	GETUPVAL 	R0 U1 ; R0 := U1
	2	[4037]	GETTABLE 	R0 R0 K0 ; R0 := R0["INVENTORY"]
	3	[4037]	SETUPVAL 	R0 U0 ; U0 := R0
	4	[4038]	GETUPVAL 	R0 U2 ; R0 := U2
	5	[4038]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x741d078c]
	6	[4043]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	7	[4043]	GETUPVAL 	R0 U3 ; R0 := U3
	8	[4038]	CALL     	R0 3 1 ; R0(R1,R2)
	9	[4045]	GETUPVAL 	R0 U4 ; R0 := U4
	10	[4045]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xed1ab921]
	11	[4045]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[4046]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	13	[4046]	MOVE     	R2 R0 ; R2 := R0
	14	[4046]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[4046]	TEST     	R1 1 ; if R1 then PC := 22
	16	[4046]	JMP      	22 ; PC := 22
	17	[4047]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	18	[4047]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	19	[4047]	LOADK    	R3 K6 ; R3 := "SellListItemUnfocused"
	20	[4047]	GETTABLE 	R4 R0 K7 ; R4 := R0["Id"]
	21	[4047]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	22	[4049]	RETURN   	R0 1 ; return 

function #99 <?:4051,4072> (52 instructions, 208 bytes at 0000021139058C20)
1 param, 6 slots, 4 upvalues, 0 locals, 5 constants, 0 functions
	1	[4052]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4052]	MOVE     	R2 R0 ; R2 := R0
	3	[4052]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4052]	TEST     	R1 1 ; if R1 then PC := 12
	5	[4052]	JMP      	12 ; PC := 12
	6	[4053]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4053]	MOVE     	R2 R0 ; R2 := R0
	8	[4053]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[4053]	OP_LOADBOOL	R4 1 0 ; R4 := true
	10	[4053]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	11	[4054]	RETURN   	R0 1 ; return 
	12	[4057]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	13	[4057]	GETUPVAL 	R2 U1 ; R2 := U1
	14	[4057]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[4057]	TEST     	R1 1 ; if R1 then PC := 36
	16	[4057]	JMP      	36 ; PC := 36
	17	[4058]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[4058]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xed1ab921]
	19	[4058]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[4059]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	21	[4059]	MOVE     	R3 R1 ; R3 := R1
	22	[4059]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[4059]	TEST     	R2 1 ; if R2 then PC := 36
	24	[4059]	JMP      	36 ; PC := 36
	25	[4060]	GETUPVAL 	R2 U2 ; R2 := U2
	26	[4060]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x659d451f]
	27	[4060]	GETGLOBAL	R3 K3 ; R3 := 0x0032441c
	28	[4060]	GETTABLE 	R3 R3 K4 ; R3 := R3["UISound_Select"]
	29	[4060]	CALL     	R2 2 1 ; R2(R3)
	30	[4061]	GETUPVAL 	R2 U0 ; R2 := U0
	31	[4061]	MOVE     	R3 R1 ; R3 := R1
	32	[4061]	OP_LOADBOOL	R4 0 0 ; R4 := false
	33	[4061]	OP_LOADBOOL	R5 1 0 ; R5 := true
	34	[4061]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	35	[4062]	RETURN   	R0 1 ; return 
	36	[4066]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	37	[4066]	GETUPVAL 	R3 U3 ; R3 := U3
	38	[4066]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[4066]	TEST     	R2 1 ; if R2 then PC := 52
	40	[4066]	JMP      	52 ; PC := 52
	41	[4067]	GETUPVAL 	R2 U3 ; R2 := U3
	42	[4067]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xed1ab921]
	43	[4067]	CALL     	R2 2 2 ; R2 := R2(R3)
	44	[4068]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	45	[4068]	MOVE     	R4 R2 ; R4 := R2
	46	[4068]	CALL     	R3 2 2 ; R3 := R3(R4)
	47	[4068]	TEST     	R3 1 ; if R3 then PC := 52
	48	[4068]	JMP      	52 ; PC := 52
	49	[4069]	GETUPVAL 	R3 U0 ; R3 := U0
	50	[4069]	MOVE     	R4 R2 ; R4 := R2
	51	[4069]	CALL     	R3 2 1 ; R3(R4)
	52	[4072]	RETURN   	R0 1 ; return 

function #100 <?:4074,4076> (6 instructions, 24 bytes at 0000021139058ED0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[4075]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4075]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x659d451f]
	3	[4075]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	4	[4075]	GETTABLE 	R1 R1 K2 ; R1 := R1["UISound_Focus"]
	5	[4075]	CALL     	R0 2 1 ; R0(R1)
	6	[4076]	RETURN   	R0 1 ; return 

function #101 <?:4078,4083> (30 instructions, 120 bytes at 0000021139059000)
2 params, 7 slots, 6 upvalues, 0 locals, 8 constants, 0 functions
	1	[4079]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4079]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x06d055f9]
	3	[4079]	GETUPVAL 	R3 U1 ; R3 := U1
	4	[4079]	GETUPVAL 	R4 U2 ; R4 := U2
	5	[4079]	GETTABLE 	R4 R4 K1 ; R4 := R4["SELL"]
	6	[4079]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 9
	7	[4079]	JMP      	9 ; PC := 9
	8	[4079]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 9
	9	[4079]	OP_LOADBOOL	R3 1 0 ; R3 := true
	10	[4079]	GETUPVAL 	R4 U3 ; R4 := U3
	11	[4079]	GETTABLE 	R4 R4 K2 ; R4 := R4["mScrollBar"]
	12	[4079]	GETUPVAL 	R5 U4 ; R5 := U4
	13	[4079]	GETTABLE 	R5 R5 K2 ; R5 := R5["mScrollBar"]
	14	[4079]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	15	[4080]	GETUPVAL 	R3 U5 ; R3 := U5
	16	[4080]	TEST     	R3 1 ; if R3 then PC := 30
	17	[4080]	JMP      	30 ; PC := 30
	18	[4080]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	19	[4080]	MOVE     	R4 R2 ; R4 := R2
	20	[4080]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[4080]	TEST     	R3 1 ; if R3 then PC := 30
	22	[4080]	JMP      	30 ; PC := 30
	23	[4081]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x30456f58]
	24	[4081]	GETGLOBAL	R5 K5 ; R5 := 0x03f57322
	25	[4081]	MOVE     	R6 R1 ; R6 := R1
	26	[4081]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[4081]	GETGLOBAL	R6 K6 ; R6 := 0x0032441c
	28	[4081]	GETTABLE 	R6 R6 K7 ; R6 := R6["UISound_Scroll"]
	29	[4081]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	30	[4083]	RETURN   	R0 1 ; return 

function #102 <?:4085,4090> (29 instructions, 116 bytes at 0000021139059240)
2 params, 8 slots, 3 upvalues, 0 locals, 6 constants, 0 functions
	1	[4086]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4086]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0xf73486b6]
	3	[4086]	GETUPVAL 	R4 U1 ; R4 := U1
	4	[4086]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[4087]	EQ       	1 R1 K1 ; if R1 == nil then PC := 29
	6	[4087]	JMP      	29 ; PC := 29
	7	[4087]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	8	[4087]	MOVE     	R4 R1 ; R4 := R1
	9	[4087]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[4087]	EQ       	0 R3 K3 ; if R3 ~= 1.000000 then PC := 29
	11	[4087]	JMP      	29 ; PC := 29
	12	[4087]	GETGLOBAL	R3 K2 ; R3 := 0x03f57322
	13	[4087]	MOVE     	R4 R0 ; R4 := R0
	14	[4087]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[4087]	LT       	0 K4 R3 ; if 0.000000 >= R3 then PC := 29
	16	[4087]	JMP      	29 ; PC := 29
	17	[4087]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	18	[4087]	MOVE     	R4 R2 ; R4 := R2
	19	[4087]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[4087]	TEST     	R3 1 ; if R3 then PC := 29
	21	[4087]	JMP      	29 ; PC := 29
	22	[4088]	GETUPVAL 	R3 U2 ; R3 := U2
	23	[4088]	MOVE     	R4 R2 ; R4 := R2
	24	[4088]	LOADNIL  	R5 R5 ; R5 := nil
	25	[4088]	GETGLOBAL	R6 K2 ; R6 := 0x03f57322
	26	[4088]	MOVE     	R7 R0 ; R7 := R0
	27	[4088]	CALL     	R6 2 0 ; R6,... := R6(R7)
	28	[4088]	CALL     	R3 0 1 ; R3(R4,...)
	29	[4090]	RETURN   	R0 1 ; return 

function #103 <?:4092,4109> (49 instructions, 196 bytes at 0000021139059460)
1 param, 9 slots, 4 upvalues, 0 locals, 12 constants, 0 functions
	1	[4094]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4094]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xcf1fcba4]
	3	[4094]	CALL     	R1 1 2 ; R1 := R1()
	4	[4094]	TEST     	R1 1 ; if R1 then PC := 9
	5	[4094]	JMP      	9 ; PC := 9
	6	[4095]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4095]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xf3f90800]
	8	[4095]	CALL     	R1 1 1 ; R1()
	9	[4098]	GETGLOBAL	R1 K2 ; R1 := _T
	10	[4098]	GETTABLE 	R1 R1 K3 ; R1 := R1["LoadoutSaveRequired"]
	11	[4098]	TEST     	R1 0 ; if not R1 then PC := 49
	12	[4098]	JMP      	49 ; PC := 49
	13	[4098]	GETGLOBAL	R1 K2 ; R1 := _T
	14	[4098]	GETTABLE 	R1 R1 K4 ; R1 := R1["loadoutInProgress"]
	15	[4098]	EQ       	1 R1 K5 ; if R1 == nil then PC := 49
	16	[4098]	JMP      	49 ; PC := 49
	17	[4098]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	18	[4098]	GETUPVAL 	R2 U1 ; R2 := U1
	19	[4098]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[4098]	TEST     	R1 1 ; if R1 then PC := 49
	21	[4098]	JMP      	49 ; PC := 49
	22	[4099]	SETUPVAL 	R0 U2 ; U2 := R0
	23	[4100]	OP_LOADBOOL	R1 1 0 ; R1 := true
	24	[4100]	SETUPVAL 	R1 U3 ; U3 := R1
	25	[4101]	LOADK    	R1 := 0.000000
	26	[4101]	LOADK    	R2 := 9.000000
	27	[4101]	LOADK    	R3 := 1.000000
	28	[4101]	FORPREP  	R1 38 ; R1 -= R3; PC := 38
	29	[4102]	GETUPVAL 	R5 U1 ; R5 := U1
	30	[4102]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0x25a6e75e]
	31	[4102]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[4102]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x6beb8ae1]
	33	[4102]	MOVE     	R7 R4 ; R7 := R4
	34	[4102]	GETGLOBAL	R8 K2 ; R8 := _T
	35	[4102]	GETTABLE 	R8 R8 K4 ; R8 := R8["loadoutInProgress"]
	36	[4102]	GETTABLE 	R8 R8 R4 ; R8 := R8[R4]
	37	[4102]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	38	[4101]	FORLOOP  	R1 29 ; R1 += R3; if R1 <= R2 then begin PC := 29; R4 := R1 end
	39	[4104]	GETUPVAL 	R5 U1 ; R5 := U1
	40	[4104]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xb6e2ab0d]
	41	[4104]	LOADK    	R7 K11 ; R7 := "OnSaveLoadOutComplete"
	42	[4104]	CALL     	R5 3 1 ; R5(R6,R7)
	43	[4105]	GETGLOBAL	R5 K2 ; R5 := _T
	44	[4105]	SETTABLE 	R5 K4 K5 ; R5["loadoutInProgress"] := nil
	45	[4106]	GETGLOBAL	R5 K2 ; R5 := _T
	46	[4106]	SETTABLE 	R5 K3 K5 ; R5["LoadoutSaveRequired"] := nil
	47	[4107]	OP_LOADBOOL	R5 1 0 ; R5 := true
	48	[4107]	RETURN   	R5 2 ; return R5 
	49	[4109]	RETURN   	R0 1 ; return 

function #104 <?:4111,4121> (31 instructions, 124 bytes at 0000021139059780)
4 params, 8 slots, 5 upvalues, 0 locals, 3 constants, 0 functions
	1	[4112]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[4112]	GETUPVAL 	R5 U0 ; R5 := U0
	3	[4112]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4112]	TEST     	R4 1 ; if R4 then PC := 9
	5	[4112]	JMP      	9 ; PC := 9
	6	[4113]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[4113]	SELF     	R4 R4 K1 ; R5 := R4; R4 := R4[0x108daec0]
	8	[4113]	CALL     	R4 2 1 ; R4(R5)
	9	[4115]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	10	[4115]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4115]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[4115]	TEST     	R4 1 ; if R4 then PC := 19
	13	[4115]	JMP      	19 ; PC := 19
	14	[4116]	GETUPVAL 	R4 U1 ; R4 := U1
	15	[4116]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0xfaa69527]
	16	[4116]	MOVE     	R6 R0 ; R6 := R0
	17	[4116]	MOVE     	R7 R1 ; R7 := R1
	18	[4116]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	19	[4118]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	20	[4118]	GETUPVAL 	R5 U2 ; R5 := U2
	21	[4118]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[4118]	TEST     	R4 1 ; if R4 then PC := 31
	23	[4118]	JMP      	31 ; PC := 31
	24	[4118]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	25	[4118]	GETUPVAL 	R5 U3 ; R5 := U3
	26	[4118]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[4118]	TEST     	R4 1 ; if R4 then PC := 31
	28	[4118]	JMP      	31 ; PC := 31
	29	[4119]	GETUPVAL 	R4 U4 ; R4 := U4
	30	[4119]	CALL     	R4 1 1 ; R4()
	31	[4121]	RETURN   	R0 1 ; return 

function #105 <?:4123,4127> (12 instructions, 48 bytes at 0000021139059970)
3 params, 6 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4124]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	2	[4124]	GETTABLE 	R3 R3 K1 ; R3 := R3[0xa5c556b9]
	3	[4124]	MOVE     	R4 R1 ; R4 := R1
	4	[4124]	LOADK    	R5 K2 ; R5 := "MOUSE_B2"
	5	[4124]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	6	[4124]	EQ       	1 R3 K3 ; if R3 == nil then PC := 12
	7	[4124]	JMP      	12 ; PC := 12
	8	[4124]	EQ       	0 R2 K4 ; if R2 ~= "0" then PC := 12
	9	[4124]	JMP      	12 ; PC := 12
	10	[4125]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[4125]	CALL     	R3 1 1 ; R3()
	12	[4127]	RETURN   	R0 1 ; return 

function #106 <?:4129,4134> (8 instructions, 32 bytes at 0000021139059AE0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[4130]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4130]	TEST     	R0 1 ; if R0 then PC := 6
	3	[4130]	JMP      	6 ; PC := 6
	4	[4131]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[4131]	CALL     	R0 1 1 ; R0()
	6	[4133]	OP_LOADBOOL	R0 1 0 ; R0 := true
	7	[4133]	RETURN   	R0 2 ; return R0 
	8	[4134]	RETURN   	R0 1 ; return 

function #107 <?:4136,4138> (2 instructions, 8 bytes at 0000021139059BD0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4137]	SETUPVAL 	R0 U0 ; U0 := R0
	2	[4138]	RETURN   	R0 1 ; return 

function #108 <?:4140,4145> (12 instructions, 48 bytes at 0000021139059CA0)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[4141]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4141]	CALL     	R0 1 1 ; R0()
	3	[4142]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	4	[4142]	GETGLOBAL	R1 K1 ; R1 := _T
	5	[4142]	GETTABLE 	R1 R1 K2 ; R1 := R1["ShowBackground"]
	6	[4142]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[4142]	TEST     	R0 1 ; if R0 then PC := 12
	8	[4142]	JMP      	12 ; PC := 12
	9	[4143]	GETGLOBAL	R0 K1 ; R0 := _T
	10	[4143]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xa460d8df]
	11	[4143]	CALL     	R0 1 1 ; R0()
	12	[4145]	RETURN   	R0 1 ; return 

function #109 <?:4147,4152> (45 instructions, 180 bytes at 0000021139059E00)
1 param, 4 slots, 5 upvalues, 0 locals, 10 constants, 0 functions
	1	[4148]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4148]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[4148]	GETTABLE 	R2 R2 K0 ; R2 := R2["SELECT_ALL"]
	4	[4148]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	5	[4148]	EQ       	1 R1 K1 ; if R1 == nil then PC := 43
	6	[4148]	JMP      	43 ; PC := 43
	7	[4149]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4149]	GETUPVAL 	R2 U1 ; R2 := U1
	9	[4149]	GETTABLE 	R2 R2 K0 ; R2 := R2["SELECT_ALL"]
	10	[4149]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	11	[4149]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[4149]	GETUPVAL 	R3 U3 ; R3 := U3
	13	[4149]	GETTABLE 	R3 R3 K3 ; R3 := R3["FISH"]
	14	[4149]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 40
	15	[4149]	JMP      	40 ; PC := 40
	16	[4149]	GETUPVAL 	R2 U2 ; R2 := U2
	17	[4149]	GETUPVAL 	R3 U3 ; R3 := U3
	18	[4149]	GETTABLE 	R3 R3 K4 ; R3 := R3["ENEMIES"]
	19	[4149]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 40
	20	[4149]	JMP      	40 ; PC := 40
	21	[4149]	GETUPVAL 	R2 U2 ; R2 := U2
	22	[4149]	GETUPVAL 	R3 U3 ; R3 := U3
	23	[4149]	GETTABLE 	R3 R3 K5 ; R3 := R3["SHIP_SCRAP"]
	24	[4149]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 40
	25	[4149]	JMP      	40 ; PC := 40
	26	[4149]	GETUPVAL 	R2 U2 ; R2 := U2
	27	[4149]	GETUPVAL 	R3 U3 ; R3 := U3
	28	[4149]	GETTABLE 	R3 R3 K6 ; R3 := R3["SHIP_PARTS"]
	29	[4149]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 40
	30	[4149]	JMP      	40 ; PC := 40
	31	[4149]	GETUPVAL 	R2 U2 ; R2 := U2
	32	[4149]	GETUPVAL 	R3 U3 ; R3 := U3
	33	[4149]	GETTABLE 	R3 R3 K7 ; R3 := R3["SHIP_RAW"]
	34	[4149]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 40
	35	[4149]	JMP      	40 ; PC := 40
	36	[4149]	GETGLOBAL	R2 K8 ; R2 := 0x34291f5c
	37	[4149]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x1467d5f4]
	38	[4149]	CALL     	R2 1 2 ; R2 := R2()
	39	[4149]	JMP      	42 ; PC := 42
	40	[4149]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 41
	41	[4149]	OP_LOADBOOL	R2 1 0 ; R2 := true
	42	[4149]	SETTABLE 	R1 K2 R2 ; R1["mVisible"] := R2
	43	[4151]	GETUPVAL 	R1 U4 ; R1 := U4
	44	[4151]	CALL     	R1 1 1 ; R1()
	45	[4152]	RETURN   	R0 1 ; return 

function #110 <?:4154,4156> (3 instructions, 12 bytes at 000002113905A0E0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4155]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[4155]	RETURN   	R0 2 ; return R0 
	3	[4156]	RETURN   	R0 1 ; return 

function #111 <?:4158,4328> (275 instructions, 1100 bytes at 000002113905A1B0)
0 params, 47 slots, 8 upvalues, 0 locals, 64 constants, 1 function
	1	[4159]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4159]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[4159]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4159]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[4159]	JMP      	7 ; PC := 7
	6	[4160]	RETURN   	R0 1 ; return 
	7	[4163]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[4163]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xa0104d35]
	9	[4163]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[4164]	LOADNIL  	R1 R1 ; R1 := nil
	11	[4166]	LOADK    	R2 := 1.000000
	12	[4166]	LEN      	R3 R0 ; R3 := # R0
	13	[4166]	LOADK    	R4 := 1.000000
	14	[4166]	FORPREP  	R2 23 ; R2 -= R4; PC := 23
	15	[4167]	GETTABLE 	R6 R0 R5 ; R6 := R0[R5]
	16	[4167]	GETTABLE 	R6 R6 K2 ; R6 := R6["tag"]
	17	[4167]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x6d604ba7]
	18	[4167]	CALL     	R6 2 2 ; R6 := R6(R7)
	19	[4167]	EQ       	0 R6 K4 ; if R6 ~= "Enemy" then PC := 23
	20	[4167]	JMP      	23 ; PC := 23
	21	[4168]	GETTABLE 	R1 R0 R5 ; R1 := R0[R5]
	22	[4170]	JMP      	24 ; PC := 24
	23	[4166]	FORLOOP  	R2 15 ; R2 += R4; if R2 <= R3 then begin PC := 15; R5 := R2 end
	24	[4174]	GETGLOBAL	R6 K5 ; R6 := 0xae91e43b
	25	[4174]	SELF     	R6 R6 K6 ; R7 := R6; R6 := R6[0x42b04007]
	26	[4174]	LOADK    	R8 K7 ; R8 := "/Lotus/Language/Menu/EnemySelector_Locked"
	27	[4174]	OP_LOADBOOL	R9 0 0 ; R9 := false
	28	[4174]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	29	[4175]	GETGLOBAL	R7 K8 ; R7 := gLotusBossNpcAvatarType
	30	[4202]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	31	[4202]	GETUPVAL 	R0 U1 ; R0 := U1
	32	[4204]	GETUPVAL 	R9 U0 ; R9 := U0
	33	[4204]	SELF     	R9 R9 K9 ; R10 := R9; R9 := R9[0xb5e2261a]
	34	[4204]	MOVE     	R11 R1 ; R11 := R1
	35	[4204]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	36	[4205]	LOADK    	R10 := 1.000000
	37	[4205]	LEN      	R11 R9 ; R11 := # R9
	38	[4205]	LOADK    	R12 := 1.000000
	39	[4205]	FORPREP  	R10 236 ; R10 -= R12; PC := 236
	40	[4206]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	41	[4207]	GETTABLE 	R15 R14 K10 ; R15 := R14["type"]
	42	[4208]	GETUPVAL 	R16 U2 ; R16 := U2
	43	[4208]	SELF     	R17 R15 K11 ; R18 := R15; R17 := R15[0xed4e0128]
	44	[4208]	CALL     	R17 2 2 ; R17 := R17(R18)
	45	[4208]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	46	[4209]	TEST     	R16 1 ; if R16 then PC := 49
	47	[4209]	JMP      	49 ; PC := 49
	48	[4210]	LOADK    	R16 := 0.000000
	49	[4213]	OP_LOADBOOL	R17 1 0 ; R17 := true
	50	[4214]	OP_LOADBOOL	R18 1 0 ; R18 := true
	51	[4215]	OP_LOADBOOL	R19 0 0 ; R19 := false
	52	[4216]	LOADK    	R20 := 3.000000
	53	[4217]	GETGLOBAL	R21 K12 ; R21 := 0x42dcc9f5
	54	[4217]	GETTABLE 	R22 R14 K13 ; R22 := R14["reqScans"]
	55	[4217]	DIV      	R22 R16 R22 ; R22 := R16 / R22
	56	[4217]	LOADK    	R23 := 0.000000
	57	[4217]	LOADK    	R24 := 1.000000
	58	[4217]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	59	[4217]	EQ       	0 R21 K14 ; if R21 ~= 1.000000 then PC := 65
	60	[4217]	JMP      	65 ; PC := 65
	61	[4218]	OP_LOADBOOL	R17 0 0 ; R17 := false
	62	[4219]	OP_LOADBOOL	R18 0 0 ; R18 := false
	63	[4220]	LOADK    	R20 := 1.000000
	64	[4220]	JMP      	69 ; PC := 69
	65	[4221]	LT       	0 K15 R16 ; if 0.000000 >= R16 then PC := 69
	66	[4221]	JMP      	69 ; PC := 69
	67	[4222]	OP_LOADBOOL	R18 0 0 ; R18 := false
	68	[4223]	LOADK    	R20 := 2.000000
	69	[4226]	GETTABLE 	R21 R14 K16 ; R21 := R14["excludedFromSimulacrum"]
	70	[4226]	TEST     	R21 0 ; if not R21 then PC := 74
	71	[4226]	JMP      	74 ; PC := 74
	72	[4227]	OP_LOADBOOL	R19 1 0 ; R19 := true
	73	[4227]	JMP      	107 ; PC := 107
	74	[4228]	GETGLOBAL	R21 K0 ; R21 := 0x7b998233
	75	[4228]	MOVE     	R22 R15 ; R22 := R15
	76	[4228]	CALL     	R21 2 2 ; R21 := R21(R22)
	77	[4228]	TEST     	R21 1 ; if R21 then PC := 89
	78	[4228]	JMP      	89 ; PC := 89
	79	[4228]	GETGLOBAL	R21 K17 ; R21 := 0x7f5022cf
	80	[4228]	GETTABLE 	R21 R21 K18 ; R21 := R21[0xa5c556b9]
	81	[4228]	SELF     	R22 R15 K11 ; R23 := R15; R22 := R15[0xed4e0128]
	82	[4228]	CALL     	R22 2 2 ; R22 := R22(R23)
	83	[4228]	LOADK    	R23 K19 ; R23 := "SpaceBattle"
	84	[4228]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	85	[4228]	EQ       	1 R21 K20 ; if R21 == nil then PC := 89
	86	[4228]	JMP      	89 ; PC := 89
	87	[4229]	OP_LOADBOOL	R19 1 0 ; R19 := true
	88	[4229]	JMP      	107 ; PC := 107
	89	[4230]	SELF     	R21 R15 K21 ; R22 := R15; R21 := R15[0xf2deaf69]
	90	[4230]	MOVE     	R23 R7 ; R23 := R7
	91	[4230]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	92	[4230]	TEST     	R21 0 ; if not R21 then PC := 107
	93	[4230]	JMP      	107 ; PC := 107
	94	[4231]	OP_LOADBOOL	R19 1 0 ; R19 := true
	95	[4232]	LOADK    	R21 := 1.000000
	96	[4232]	GETGLOBAL	R22 K22 ; R22 := 0xb6989673
	97	[4232]	LEN      	R22 R22 ; R22 := # R22
	98	[4232]	LOADK    	R23 := 1.000000
	99	[4232]	FORPREP  	R21 106 ; R21 -= R23; PC := 106
	100	[4233]	GETGLOBAL	R25 K22 ; R25 := 0xb6989673
	101	[4233]	GETTABLE 	R25 R25 R24 ; R25 := R25[R24]
	102	[4233]	EQ       	0 R15 R25 ; if R15 ~= R25 then PC := 106
	103	[4233]	JMP      	106 ; PC := 106
	104	[4234]	OP_LOADBOOL	R19 0 0 ; R19 := false
	105	[4235]	JMP      	107 ; PC := 107
	106	[4232]	FORLOOP  	R21 100 ; R21 += R23; if R21 <= R22 then begin PC := 100; R24 := R21 end
	107	[4240]	GETUPVAL 	R25 U3 ; R25 := U3
	108	[4240]	TEST     	R25 0 ; if not R25 then PC := 111
	109	[4240]	JMP      	111 ; PC := 111
	110	[4241]	OP_LOADBOOL	R19 0 0 ; R19 := false
	111	[4244]	TEST     	R19 1 ; if R19 then PC := 236
	112	[4244]	JMP      	236 ; PC := 236
	113	[4245]	GETTABLE 	R25 R14 K23 ; R25 := R14["sourceType"]
	114	[4246]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	115	[4246]	MOVE     	R27 R25 ; R27 := R25
	116	[4246]	CALL     	R26 2 2 ; R26 := R26(R27)
	117	[4246]	TEST     	R26 0 ; if not R26 then PC := 147
	118	[4246]	JMP      	147 ; PC := 147
	119	[4246]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	120	[4246]	MOVE     	R27 R15 ; R27 := R15
	121	[4246]	CALL     	R26 2 2 ; R26 := R26(R27)
	122	[4246]	TEST     	R26 1 ; if R26 then PC := 147
	123	[4246]	JMP      	147 ; PC := 147
	124	[4247]	GETGLOBAL	R26 K24 ; R26 := 0x8b02abb3
	125	[4247]	LEN      	R26 R26 ; R26 := # R26
	126	[4247]	GETGLOBAL	R27 K25 ; R27 := 0xe29337c9
	127	[4247]	LEN      	R27 R27 ; R27 := # R27
	128	[4247]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 144
	129	[4247]	JMP      	144 ; PC := 144
	130	[4248]	LOADK    	R26 := 1.000000
	131	[4248]	GETGLOBAL	R27 K24 ; R27 := 0x8b02abb3
	132	[4248]	LEN      	R27 R27 ; R27 := # R27
	133	[4248]	LOADK    	R28 := 1.000000
	134	[4248]	FORPREP  	R26 142 ; R26 -= R28; PC := 142
	135	[4249]	GETGLOBAL	R30 K24 ; R30 := 0x8b02abb3
	136	[4249]	GETTABLE 	R30 R30 R29 ; R30 := R30[R29]
	137	[4249]	EQ       	0 R30 R15 ; if R30 ~= R15 then PC := 142
	138	[4249]	JMP      	142 ; PC := 142
	139	[4250]	GETGLOBAL	R30 K25 ; R30 := 0xe29337c9
	140	[4250]	GETTABLE 	R25 R30 R29 ; R25 := R30[R29]
	141	[4251]	JMP      	147 ; PC := 147
	142	[4248]	FORLOOP  	R26 135 ; R26 += R28; if R26 <= R27 then begin PC := 135; R29 := R26 end
	143	[4253]	JMP      	147 ; PC := 147
	144	[4255]	GETGLOBAL	R30 K26 ; R30 := 0x3d106989
	145	[4255]	LOADK    	R31 K27 ; R31 := "Mismatch between codex enemy lists: missingCodexEnemyAvatarTypes and missingCodexEnemyAgentTypes"
	146	[4255]	CALL     	R30 2 1 ; R30(R31)
	147	[4259]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	148	[4259]	MOVE     	R31 R25 ; R31 := R25
	149	[4259]	CALL     	R30 2 2 ; R30 := R30(R31)
	150	[4259]	TEST     	R30 1 ; if R30 then PC := 236
	151	[4259]	JMP      	236 ; PC := 236
	152	[4260]	MOVE     	R30 R8 ; R30 := R8
	153	[4260]	GETTABLE 	R31 R14 K28 ; R31 := R14["faction"]
	154	[4260]	CALL     	R30 2 2 ; R30 := R30(R31)
	155	[4261]	GETUPVAL 	R31 U4 ; R31 := U4
	156	[4261]	GETTABLE 	R31 R31 K29 ; R31 := R31[0x15dc8e24]
	157	[4261]	GETGLOBAL	R32 K5 ; R32 := 0xae91e43b
	158	[4261]	MOVE     	R33 R14 ; R33 := R14
	159	[4261]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	160	[4262]	LOADNIL  	R32 R32 ; R32 := nil
	161	[4263]	OP_LOADBOOL	R33 0 0 ; R33 := false
	162	[4264]	TEST     	R18 0 ; if not R18 then PC := 169
	163	[4264]	JMP      	169 ; PC := 169
	164	[4264]	GETUPVAL 	R34 U5 ; R34 := U5
	165	[4264]	TEST     	R34 1 ; if R34 then PC := 169
	166	[4264]	JMP      	169 ; PC := 169
	167	[4265]	LOADK    	R32 := 8.000000
	168	[4266]	OP_LOADBOOL	R33 1 0 ; R33 := true
	169	[4268]	NEWTABLE 	R34 0 15 ; R34 := {}
	170	[4270]	SETTABLE 	R34 K31 R31 ; R34["Name"] := R31
	171	[4271]	SETTABLE 	R34 K32 R30 ; R34["Categories"] := R30
	172	[4272]	SETTABLE 	R34 K33 K34 ; R34["Themed"] := true
	173	[4273]	SETTABLE 	R34 K35 R14 ; R34["CodexEntry"] := R14
	174	[4274]	GETTABLE 	R35 R14 K37 ; R35 := R14["icon"]
	175	[4274]	SETTABLE 	R34 K36 R35 ; R34["Icon"] := R35
	176	[4275]	SETTABLE 	R34 K38 R15 ; R34["Type"] := R15
	177	[4276]	SETTABLE 	R34 K39 R25 ; R34["SourceType"] := R25
	178	[4277]	GETTABLE 	R35 R14 K41 ; R35 := R14["isLeader"]
	179	[4277]	SETTABLE 	R34 K40 R35 ; R34["IsLeader"] := R35
	180	[4278]	TESTSET  	R35 R18 0 ; if not R18 then PC := 184 else R35 := R18 
	181	[4278]	JMP      	184 ; PC := 184
	182	[4278]	GETUPVAL 	R35 U5 ; R35 := U5
	183	[4278]	NOT      	R35 R35 ; R35 := not R35
	184	[4278]	SETTABLE 	R34 K42 R35 ; R34["Hidden"] := R35
	185	[4279]	TESTSET  	R35 R17 0 ; if not R17 then PC := 189 else R35 := R17 
	186	[4279]	JMP      	189 ; PC := 189
	187	[4279]	GETUPVAL 	R35 U5 ; R35 := U5
	188	[4279]	NOT      	R35 R35 ; R35 := not R35
	189	[4279]	SETTABLE 	R34 K43 R35 ; R34["Locked"] := R35
	190	[4280]	SETTABLE 	R34 K44 R6 ; R34["LockedMsg"] := R6
	191	[4281]	SETTABLE 	R34 K45 R32 ; R34["IconColor"] := R32
	192	[4282]	SETTABLE 	R34 K46 R33 ; R34["ShadowIcon"] := R33
	193	[4283]	SETTABLE 	R34 K47 R20 ; R34["ScannedId"] := R20
	194	[4284]	SETTABLE 	R34 K48 K14 ; R34["SellingPrice"] := 1.000000
	195	[4286]	GETGLOBAL	R35 K50 ; R35 := 0x83e41587
	196	[4286]	GETTABLE 	R36 R34 K31 ; R36 := R34["Name"]
	197	[4286]	LOADK    	R37 K51 ; R37 := " "
	198	[4286]	GETTABLE 	R38 R14 K28 ; R38 := R14["faction"]
	199	[4286]	SELF     	R38 R38 K3 ; R39 := R38; R38 := R38[0x6d604ba7]
	200	[4286]	CALL     	R38 2 2 ; R38 := R38(R39)
	201	[4286]	CONCAT   	R36 R36 R38 ; R36 := R36 .. R37 .. R38
	202	[4286]	CALL     	R35 2 2 ; R35 := R35(R36)
	203	[4286]	SETTABLE 	R34 K49 R35 ; R34["SearchCache"] := R35
	204	[4288]	GETUPVAL 	R35 U6 ; R35 := U6
	205	[4288]	SELF     	R35 R35 K52 ; R36 := R35; R35 := R35[0xbad4316f]
	206	[4288]	MOVE     	R37 R34 ; R37 := R34
	207	[4288]	OP_LOADBOOL	R38 1 0 ; R38 := true
	208	[4288]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	209	[4290]	GETGLOBAL	R35 K53 ; R35 := _T
	210	[4290]	GETTABLE 	R35 R35 K54 ; R35 := R35["SpawnedEnemies"]
	211	[4290]	EQ       	1 R35 K20 ; if R35 == nil then PC := 236
	212	[4290]	JMP      	236 ; PC := 236
	213	[4291]	GETGLOBAL	R35 K55 ; R35 := 0xc8802016
	214	[4291]	GETGLOBAL	R36 K53 ; R36 := _T
	215	[4291]	GETTABLE 	R36 R36 K54 ; R36 := R36["SpawnedEnemies"]
	216	[4291]	CALL     	R35 2 4 ; R35,R36,R37 := R35(R36)
	217	[4291]	JMP      	234 ; PC := 234
	218	[4292]	GETTABLE 	R40 R39 K38 ; R40 := R39["Type"]
	219	[4292]	SELF     	R41 R15 K11 ; R42 := R15; R41 := R15[0xed4e0128]
	220	[4292]	CALL     	R41 2 2 ; R41 := R41(R42)
	221	[4292]	EQ       	0 R40 R41 ; if R40 ~= R41 then PC := 234
	222	[4292]	JMP      	234 ; PC := 234
	223	[4292]	GETTABLE 	R40 R34 K42 ; R40 := R34["Hidden"]
	224	[4292]	TEST     	R40 1 ; if R40 then PC := 234
	225	[4292]	JMP      	234 ; PC := 234
	226	[4292]	GETTABLE 	R40 R34 K43 ; R40 := R34["Locked"]
	227	[4292]	TEST     	R40 1 ; if R40 then PC := 234
	228	[4292]	JMP      	234 ; PC := 234
	229	[4293]	GETUPVAL 	R40 U7 ; R40 := U7
	230	[4293]	MOVE     	R41 R34 ; R41 := R34
	231	[4293]	LOADNIL  	R42 R42 ; R42 := nil
	232	[4293]	GETTABLE 	R43 R39 K56 ; R43 := R39["Count"]
	233	[4293]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	234	[4291]	TFORLOOP 	R35 2 ; R38,R39 := R35(R36,R37); if R38 ~= nil then begin PC = 218; R37 := R38 end
	235	[4294]	JMP      	218 ; PC := 218
	236	[4205]	FORLOOP  	R10 40 ; R10 += R12; if R10 <= R11 then begin PC := 40; R13 := R10 end
	237	[4301]	GETUPVAL 	R40 U3 ; R40 := U3
	238	[4301]	TEST     	R40 0 ; if not R40 then PC := 275
	239	[4301]	JMP      	275 ; PC := 275
	240	[4303]	LOADK    	R40 K57 ; R40 := "/Lotus/Types/Enemies/Grineer/AIWeek/LoboGrineerLancer"
	241	[4304]	GETGLOBAL	R41 K58 ; R41 := 0x7ed0a956
	242	[4304]	MOVE     	R42 R40 ; R42 := R40
	243	[4304]	CALL     	R41 2 2 ; R41 := R41(R42)
	244	[4306]	NEWTABLE 	R42 0 15 ; R42 := {}
	245	[4308]	SETTABLE 	R42 K31 K59 ; R42["Name"] := "PUNCHING BAG"
	246	[4309]	NEWTABLE 	R43 1 0 ; R43 := {}
	247	[4309]	GETUPVAL 	R44 U1 ; R44 := U1
	248	[4309]	GETTABLE 	R44 R44 K60 ; R44 := R44["GRINEER"]
	249	[4309]	SETLIST  	R43 1 1 ; R43[(1-1)*FPF+i] := R(43+i), 1 <= i <= 1
	250	[4309]	SETTABLE 	R42 K32 R43 ; R42["Categories"] := R43
	251	[4310]	SETTABLE 	R42 K33 K34 ; R42["Themed"] := true
	252	[4311]	SETTABLE 	R42 K35 K20 ; R42["CodexEntry"] := nil
	253	[4312]	GETGLOBAL	R43 K61 ; R43 := 0xf06bb4b0
	254	[4312]	GETTABLE 	R43 R43 K14 ; R43 := R43[1.000000]
	255	[4312]	SETTABLE 	R42 K36 R43 ; R42["Icon"] := R43
	256	[4313]	SETTABLE 	R42 K38 R41 ; R42["Type"] := R41
	257	[4314]	SETTABLE 	R42 K39 R41 ; R42["SourceType"] := R41
	258	[4315]	SETTABLE 	R42 K40 K62 ; R42["IsLeader"] := false
	259	[4316]	SETTABLE 	R42 K42 K62 ; R42["Hidden"] := false
	260	[4317]	SETTABLE 	R42 K43 K62 ; R42["Locked"] := false
	261	[4318]	SETTABLE 	R42 K44 K63 ; R42["LockedMsg"] := ""
	262	[4319]	SETTABLE 	R42 K45 K20 ; R42["IconColor"] := nil
	263	[4320]	SETTABLE 	R42 K46 K34 ; R42["ShadowIcon"] := true
	264	[4321]	SETTABLE 	R42 K47 K14 ; R42["ScannedId"] := 1.000000
	265	[4322]	SETTABLE 	R42 K48 K14 ; R42["SellingPrice"] := 1.000000
	266	[4324]	GETGLOBAL	R43 K50 ; R43 := 0x83e41587
	267	[4324]	GETTABLE 	R44 R42 K31 ; R44 := R42["Name"]
	268	[4324]	CALL     	R43 2 2 ; R43 := R43(R44)
	269	[4324]	SETTABLE 	R42 K49 R43 ; R42["SearchCache"] := R43
	270	[4326]	GETUPVAL 	R43 U6 ; R43 := U6
	271	[4326]	SELF     	R43 R43 K52 ; R44 := R43; R43 := R43[0xbad4316f]
	272	[4326]	MOVE     	R45 R42 ; R45 := R42
	273	[4326]	OP_LOADBOOL	R46 1 0 ; R46 := true
	274	[4326]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	275	[4328]	RETURN   	R0 1 ; return 

function #112 <?:4330,4334> (12 instructions, 48 bytes at 000002113905B5B0)
0 params, 5 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[4331]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4331]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4331]	LOADK    	R2 K2 ; R2 := "InventoryGrid"
	4	[4331]	LOADK    	R3 := 10.000000
	5	[4331]	LOADK    	R4 := 100.000000
	6	[4331]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4332]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[4332]	OP_LOADBOOL	R1 1 0 ; R1 := true
	9	[4332]	CALL     	R0 2 1 ; R0(R1)
	10	[4333]	OP_LOADBOOL	R0 0 0 ; R0 := false
	11	[4333]	SETUPVAL 	R0 U1 ; U1 := R0
	12	[4334]	RETURN   	R0 1 ; return 

function #113 <?:4336,4340> (17 instructions, 68 bytes at 000002113905B700)
0 params, 5 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[4337]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4337]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4337]	LOADK    	R2 K2 ; R2 := "InventoryGrid"
	4	[4337]	LOADK    	R3 := 10.000000
	5	[4337]	LOADK    	R4 := 0.000000
	6	[4337]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4338]	GETGLOBAL	R0 K3 ; R0 := _T
	8	[4338]	GETGLOBAL	R1 K3 ; R1 := _T
	9	[4338]	GETTABLE 	R1 R1 K4 ; R1 := R1["FishInvInfo"]
	10	[4338]	GETTABLE 	R1 R1 K5 ; R1 := R1["FunctName"]
	11	[4338]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	12	[4338]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4338]	GETTABLE 	R1 R1 K6 ; R1 := R1["mElements"]
	14	[4338]	CALL     	R0 2 1 ; R0(R1)
	15	[4339]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[4339]	SETUPVAL 	R0 U1 ; U1 := R0
	17	[4340]	RETURN   	R0 1 ; return 

function #114 <?:4342,4413> (177 instructions, 708 bytes at 000002113905B910)
1 param, 36 slots, 6 upvalues, 0 locals, 51 constants, 2 functions
	1	[4343]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[4343]	GETTABLE 	R1 R1 K1 ; R1 := R1["SyndicateInvInfo"]
	3	[4343]	GETTABLE 	R1 R1 K2 ; R1 := R1["Syndicate"]
	4	[4344]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[4344]	GETGLOBAL	R3 K4 ; R3 := 0x6c97a788
	6	[4344]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xed51f53c]
	7	[4344]	CALL     	R3 1 2 ; R3 := R3()
	8	[4344]	SETTABLE 	R2 K3 R3 ; R2["SyndicateStandingBonusOperation"] := R3
	9	[4345]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[4345]	GETTABLE 	R2 R2 K3 ; R2 := R2["SyndicateStandingBonusOperation"]
	11	[4345]	SELF     	R3 R1 K7 ; R4 := R1; R3 := R1[0xec3ed714]
	12	[4345]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[4345]	SETTABLE 	R2 K6 R3 ; R2["mAffiliationTag"] := R3
	14	[4347]	LOADK    	R2 := 0.000000
	15	[4349]	GETUPVAL 	R3 U1 ; R3 := U1
	16	[4349]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xea061e98]
	17	[4353]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	18	[4353]	MOVE     	R0 R2 ; R0 := R2
	19	[4353]	GETUPVAL 	R0 U0 ; R0 := U0
	20	[4349]	CALL     	R3 3 1 ; R3(R4,R5)
	21	[4355]	GETGLOBAL	R3 K9 ; R3 := 0x60cce7b4
	22	[4355]	GETUPVAL 	R4 U2 ; R4 := U2
	23	[4355]	EQ       	1 R2 R4 ; if R2 == R4 then PC := 26
	24	[4355]	JMP      	26 ; PC := 26
	25	[4355]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 26
	26	[4355]	OP_LOADBOOL	R4 1 0 ; R4 := true
	27	[4355]	CALL     	R3 2 1 ; R3(R4)
	28	[4357]	GETUPVAL 	R3 U3 ; R3 := U3
	29	[4357]	GETTABLE 	R3 R3 K10 ; R3 := R3[0x338a8686]
	30	[4357]	MOVE     	R4 R1 ; R4 := R1
	31	[4357]	CALL     	R3 2 6 ; R3,R4,R5,R6,R7 := R3(R4)
	32	[4358]	SELF     	R8 R1 K11 ; R9 := R1; R8 := R1[0x715e4e45]
	33	[4358]	CALL     	R8 2 2 ; R8 := R8(R9)
	34	[4360]	TEST     	R8 1 ; if R8 then PC := 45
	35	[4360]	JMP      	45 ; PC := 45
	36	[4361]	LT       	0 R5 K12 ; if R5 >= 0.000000 then PC := 44
	37	[4361]	JMP      	44 ; PC := 44
	38	[4362]	GETGLOBAL	R9 K13 ; R9 := 0x5bced4c4
	39	[4362]	GETTABLE 	R9 R9 K14 ; R9 := R9[0xe4a5b3ca]
	40	[4362]	MOVE     	R10 R4 ; R10 := R4
	41	[4362]	CALL     	R9 2 2 ; R9 := R9(R10)
	42	[4362]	MOVE     	R7 R9 ; R7 := R9
	43	[4362]	JMP      	45 ; PC := 45
	44	[4364]	SUB      	R7 R5 R4 ; R7 := R5 - R4
	45	[4368]	TEST     	R0 1 ; if R0 then PC := 89
	46	[4368]	JMP      	89 ; PC := 89
	47	[4369]	EQ       	0 R7 K12 ; if R7 ~= 0.000000 then PC := 68
	48	[4369]	JMP      	68 ; PC := 68
	49	[4371]	LOADK    	R9 K15 ; R9 := "/Lotus/Language/Menu/Syndicates_ReputationOverflow"
	50	[4372]	SELF     	R10 R1 K16 ; R11 := R1; R10 := R1[0x08b0b7bf]
	51	[4372]	CALL     	R10 2 2 ; R10 := R10(R11)
	52	[4373]	LT       	0 K12 R10 ; if 0.000000 >= R10 then PC := 63
	53	[4373]	JMP      	63 ; PC := 63
	54	[4373]	LT       	0 R10 K17 ; if R10 >= 13.000000 then PC := 63
	55	[4373]	JMP      	63 ; PC := 63
	56	[4374]	GETUPVAL 	R11 U4 ; R11 := U4
	57	[4374]	SELF     	R11 R11 K18 ; R12 := R11; R11 := R11[0xf5b0abc2]
	58	[4374]	MOVE     	R13 R10 ; R13 := R10
	59	[4374]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	60	[4375]	EQ       	0 R11 K12 ; if R11 ~= 0.000000 then PC := 63
	61	[4375]	JMP      	63 ; PC := 63
	62	[4376]	LOADK    	R9 K19 ; R9 := "/Lotus/Language/Menu/Syndicates_DogTag_DailyLimit_Reached"
	63	[4379]	GETUPVAL 	R12 U5 ; R12 := U5
	64	[4379]	GETTABLE 	R12 R12 K20 ; R12 := R12[0xa53f5e12]
	65	[4379]	MOVE     	R13 R9 ; R13 := R9
	66	[4379]	CALL     	R12 2 1 ; R12(R13)
	67	[4379]	JMP      	89 ; PC := 89
	68	[4380]	GETUPVAL 	R12 U2 ; R12 := U2
	69	[4380]	LT       	0 R7 R12 ; if R7 >= R12 then PC := 89
	70	[4380]	JMP      	89 ; PC := 89
	71	[4382]	GETGLOBAL	R12 K21 ; R12 := 0xae91e43b
	72	[4382]	SELF     	R12 R12 K22 ; R13 := R12; R12 := R12[0x42b04007]
	73	[4382]	LOADK    	R14 K23 ; R14 := "/Lotus/Language/Menu/Syndicates_DogTag_StandingWasteWarning"
	74	[4382]	OP_LOADBOOL	R15 1 0 ; R15 := true
	75	[4382]	NEWTABLE 	R16 0 1 ; R16 := {}
	76	[4382]	GETUPVAL 	R17 U5 ; R17 := U5
	77	[4382]	GETTABLE 	R17 R17 K25 ; R17 := R17[0x1142c7a8]
	78	[4382]	GETUPVAL 	R18 U2 ; R18 := U2
	79	[4382]	SUB      	R18 R18 R7 ; R18 := R18 - R7
	80	[4382]	CALL     	R17 2 2 ; R17 := R17(R18)
	81	[4382]	SETTABLE 	R16 K24 R17 ; R16["STANDING"] := R17
	82	[4382]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	83	[4383]	GETUPVAL 	R13 U5 ; R13 := U5
	84	[4383]	GETTABLE 	R13 R13 K26 ; R13 := R13[0xdedfded7]
	85	[4383]	MOVE     	R14 R12 ; R14 := R12
	86	[4383]	LOADK    	R15 K27 ; R15 := "ConfirmDogTagPartial"
	87	[4383]	CALL     	R13 3 1 ; R13(R14,R15)
	88	[4384]	RETURN   	R0 1 ; return 
	89	[4389]	GETUPVAL 	R13 U2 ; R13 := U2
	90	[4390]	GETGLOBAL	R14 K13 ; R14 := 0x5bced4c4
	91	[4390]	GETTABLE 	R14 R14 K28 ; R14 := R14[0xac1b386a]
	92	[4390]	GETUPVAL 	R15 U2 ; R15 := U2
	93	[4390]	MOVE     	R16 R7 ; R16 := R7
	94	[4390]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	95	[4392]	NEWTABLE 	R15 0 0 ; R15 := {}
	96	[4393]	GETGLOBAL	R16 K29 ; R16 := 0x33bdd652
	97	[4393]	GETTABLE 	R16 R16 K30 ; R16 := R16[0x23d5322f]
	98	[4393]	MOVE     	R17 R15 ; R17 := R15
	99	[4393]	NEWTABLE 	R18 0 2 ; R18 := {}
	100	[4393]	SELF     	R19 R1 K32 ; R20 := R1; R19 := R1[0xdff9d2a7]
	101	[4393]	CALL     	R19 2 2 ; R19 := R19(R20)
	102	[4393]	SETTABLE 	R18 K31 R19 ; R18["Name"] := R19
	103	[4393]	SETTABLE 	R18 K33 R14 ; R18["Rep"] := R14
	104	[4393]	CALL     	R16 3 1 ; R16(R17,R18)
	105	[4394]	GETGLOBAL	R16 K34 ; R16 := 0xc8802016
	106	[4394]	SELF     	R17 R1 K35 ; R18 := R1; R17 := R1[0xf8770ba4]
	107	[4394]	CALL     	R17 2 0 ; R17,... := R17(R18)
	108	[4394]	CALL     	R16 0 4 ; R16,R17,R18 := R16(R17,...)
	109	[4394]	JMP      	131 ; PC := 131
	110	[4395]	GETGLOBAL	R21 K36 ; R21 := 0x7b998233
	111	[4395]	GETTABLE 	R22 R20 K37 ; R22 := R20["other"]
	112	[4395]	CALL     	R21 2 2 ; R21 := R21(R22)
	113	[4395]	TEST     	R21 1 ; if R21 then PC := 131
	114	[4395]	JMP      	131 ; PC := 131
	115	[4396]	GETGLOBAL	R21 K38 ; R21 := 0xb009bbc6
	116	[4396]	GETTABLE 	R22 R20 K37 ; R22 := R20["other"]
	117	[4396]	SELF     	R22 R22 K39 ; R23 := R22; R22 := R22[0xed4e0128]
	118	[4396]	CALL     	R22 2 0 ; R22,... := R22(R23)
	119	[4396]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	120	[4397]	GETGLOBAL	R22 K29 ; R22 := 0x33bdd652
	121	[4397]	GETTABLE 	R22 R22 K30 ; R22 := R22[0x23d5322f]
	122	[4397]	MOVE     	R23 R15 ; R23 := R15
	123	[4397]	NEWTABLE 	R24 0 2 ; R24 := {}
	124	[4397]	SELF     	R25 R21 K32 ; R26 := R21; R25 := R21[0xdff9d2a7]
	125	[4397]	CALL     	R25 2 2 ; R25 := R25(R26)
	126	[4397]	SETTABLE 	R24 K31 R25 ; R24["Name"] := R25
	127	[4397]	GETTABLE 	R25 R20 K40 ; R25 := R20["multiplier"]
	128	[4397]	MUL      	R25 R13 R25 ; R25 := R13 * R25
	129	[4397]	SETTABLE 	R24 K33 R25 ; R24["Rep"] := R25
	130	[4397]	CALL     	R22 3 1 ; R22(R23,R24)
	131	[4394]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 110; R18 := R19 end
	132	[4398]	JMP      	110 ; PC := 110
	133	[4400]	GETGLOBAL	R22 K29 ; R22 := 0x33bdd652
	134	[4400]	GETTABLE 	R22 R22 K41 ; R22 := R22[0xf21b1d8e]
	135	[4400]	MOVE     	R23 R15 ; R23 := R15
	136	[4403]	CLOSURE  	R24 1 ; R24 := closure(Function #2)
	137	[4400]	CALL     	R22 3 1 ; R22(R23,R24)
	138	[4405]	LOADK    	R22 K42 ; R22 := ""
	139	[4406]	GETGLOBAL	R23 K34 ; R23 := 0xc8802016
	140	[4406]	MOVE     	R24 R15 ; R24 := R15
	141	[4406]	CALL     	R23 2 4 ; R23,R24,R25 := R23(R24)
	142	[4406]	JMP      	162 ; PC := 162
	143	[4407]	MOVE     	R28 R22 ; R28 := R22
	144	[4407]	GETUPVAL 	R29 U5 ; R29 := U5
	145	[4407]	GETTABLE 	R29 R29 K25 ; R29 := R29[0x1142c7a8]
	146	[4407]	GETTABLE 	R30 R27 K33 ; R30 := R27["Rep"]
	147	[4407]	LOADK    	R31 := 0.000000
	148	[4407]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	149	[4407]	LOADK    	R30 K43 ; R30 := " "
	150	[4407]	GETGLOBAL	R31 K44 ; R31 := 0x7f5022cf
	151	[4407]	GETTABLE 	R31 R31 K45 ; R31 := R31[0x3f3e4d12]
	152	[4407]	GETGLOBAL	R32 K21 ; R32 := 0xae91e43b
	153	[4407]	SELF     	R32 R32 K22 ; R33 := R32; R32 := R32[0x42b04007]
	154	[4407]	GETTABLE 	R34 R27 K31 ; R34 := R27["Name"]
	155	[4407]	SELF     	R34 R34 K46 ; R35 := R34; R34 := R34[0x6d604ba7]
	156	[4407]	CALL     	R34 2 2 ; R34 := R34(R35)
	157	[4407]	OP_LOADBOOL	R35 0 0 ; R35 := false
	158	[4407]	CALL     	R32 4 0 ; R32,... := R32(R33,R34,R35)
	159	[4407]	CALL     	R31 0 2 ; R31 := R31(R32,...)
	160	[4407]	LOADK    	R32 K47 ; R32 := "\r"
	161	[4407]	CONCAT   	R22 R28 R32 ; R22 := R28 .. R29 .. R30 .. R31 .. R32
	162	[4406]	TFORLOOP 	R23 2 ; R26,R27 := R23(R24,R25); if R26 ~= nil then begin PC = 143; R25 := R26 end
	163	[4407]	JMP      	143 ; PC := 143
	164	[4410]	GETGLOBAL	R28 K21 ; R28 := 0xae91e43b
	165	[4410]	SELF     	R28 R28 K22 ; R29 := R28; R28 := R28[0x42b04007]
	166	[4410]	LOADK    	R30 K48 ; R30 := "/Lotus/Language/Menu/StandingChangeConfirm"
	167	[4410]	OP_LOADBOOL	R31 0 0 ; R31 := false
	168	[4410]	NEWTABLE 	R32 0 1 ; R32 := {}
	169	[4410]	SETTABLE 	R32 K49 R22 ; R32["CHANGES"] := R22
	170	[4410]	CALL     	R28 5 2 ; R28 := R28(R29,R30,R31,R32)
	171	[4410]	MOVE     	R22 R28 ; R22 := R28
	172	[4412]	GETUPVAL 	R28 U5 ; R28 := U5
	173	[4412]	GETTABLE 	R28 R28 K26 ; R28 := R28[0xdedfded7]
	174	[4412]	MOVE     	R29 R22 ; R29 := R22
	175	[4412]	LOADK    	R30 K50 ; R30 := "ConfirmDogTagAll"
	176	[4412]	CALL     	R28 3 1 ; R28(R29,R30)
	177	[4413]	RETURN   	R0 1 ; return 

function #115 <?:4415,4417> (3 instructions, 12 bytes at 000002113905C740)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4416]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4416]	CALL     	R0 1 1 ; R0()
	3	[4417]	RETURN   	R0 1 ; return 

function #116 <?:4419,4423> (9 instructions, 36 bytes at 000002113905C810)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[4420]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[4420]	MOVE     	R2 R0 ; R2 := R0
	3	[4420]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4420]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 9
	5	[4420]	JMP      	9 ; PC := 9
	6	[4421]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4421]	OP_LOADBOOL	R2 1 0 ; R2 := true
	8	[4421]	CALL     	R1 2 1 ; R1(R2)
	9	[4423]	RETURN   	R0 1 ; return 

function #117 <?:4425,4435> (26 instructions, 104 bytes at 000002113905C960)
1 param, 5 slots, 4 upvalues, 0 locals, 10 constants, 0 functions
	1	[4426]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[4426]	MOVE     	R2 R0 ; R2 := R0
	3	[4426]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4426]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 26
	5	[4426]	JMP      	26 ; PC := 26
	6	[4427]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4427]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x32a4a62e]
	8	[4427]	GETUPVAL 	R3 U1 ; R3 := U1
	9	[4427]	GETTABLE 	R3 R3 K4 ; R3 := R3["SyndicateStandingBonusOperation"]
	10	[4427]	LOADK    	R4 K5 ; R4 := "OnDonateDogTagsComplete"
	11	[4427]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	12	[4429]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[4429]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe2a93301]
	14	[4429]	CALL     	R1 1 2 ; R1 := R1()
	15	[4430]	GETGLOBAL	R2 K7 ; R2 := 0x5d7ec062
	16	[4430]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	17	[4431]	GETGLOBAL	R3 K8 ; R3 := 0x7b998233
	18	[4431]	MOVE     	R4 R2 ; R4 := R2
	19	[4431]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[4431]	TEST     	R3 1 ; if R3 then PC := 26
	21	[4431]	JMP      	26 ; PC := 26
	22	[4432]	GETUPVAL 	R3 U3 ; R3 := U3
	23	[4432]	GETTABLE 	R3 R3 K9 ; R3 := R3[0x659d451f]
	24	[4432]	MOVE     	R4 R2 ; R4 := R2
	25	[4432]	CALL     	R3 2 1 ; R3(R4)
	26	[4435]	RETURN   	R0 1 ; return 

function #118 <?:4437,4472> (75 instructions, 300 bytes at 000002113905CBA0)
2 params, 15 slots, 4 upvalues, 0 locals, 25 constants, 0 functions
	1	[4438]	TEST     	R0 0 ; if not R0 then PC := 10
	2	[4438]	JMP      	10 ; PC := 10
	3	[4438]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	4	[4438]	GETGLOBAL	R3 K1 ; R3 := _T
	5	[4438]	GETTABLE 	R3 R3 K2 ; R3 := R3["SyndicateInvInfo"]
	6	[4438]	GETTABLE 	R3 R3 K3 ; R3 := R3["Syndicate"]
	7	[4438]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[4438]	TEST     	R2 0 ; if not R2 then PC := 11
	9	[4438]	JMP      	11 ; PC := 11
	10	[4439]	RETURN   	R0 1 ; return 
	11	[4442]	GETGLOBAL	R2 K1 ; R2 := _T
	12	[4442]	GETTABLE 	R2 R2 K2 ; R2 := R2["SyndicateInvInfo"]
	13	[4442]	GETTABLE 	R2 R2 K3 ; R2 := R2["Syndicate"]
	14	[4443]	GETGLOBAL	R3 K1 ; R3 := _T
	15	[4443]	GETTABLE 	R3 R3 K2 ; R3 := R3["SyndicateInvInfo"]
	16	[4443]	GETTABLE 	R3 R3 K4 ; R3 := R3["VendorTag"]
	17	[4444]	GETUPVAL 	R4 U0 ; R4 := U0
	18	[4444]	SETTABLE 	R4 K5 K6 ; R4["MadeTrade"] := true
	19	[4447]	GETGLOBAL	R4 K7 ; R4 := cjson
	20	[4447]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x7ab914d8]
	21	[4447]	MOVE     	R5 R1 ; R5 := R1
	22	[4447]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[4448]	GETTABLE 	R5 R4 K9 ; R5 := R4["AffiliationMods"]
	24	[4448]	EQ       	1 R5 K10 ; if R5 == nil then PC := 58
	25	[4448]	JMP      	58 ; PC := 58
	26	[4449]	GETGLOBAL	R5 K11 ; R5 := 0x64fb1586
	27	[4449]	SELF     	R6 R2 K12 ; R7 := R2; R6 := R2[0xec3ed714]
	28	[4449]	CALL     	R6 2 0 ; R6,... := R6(R7)
	29	[4449]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	30	[4450]	GETGLOBAL	R6 K13 ; R6 := 0xc8802016
	31	[4450]	GETTABLE 	R7 R4 K9 ; R7 := R4["AffiliationMods"]
	32	[4450]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	33	[4450]	JMP      	56 ; PC := 56
	34	[4451]	GETTABLE 	R11 R10 K14 ; R11 := R10["Tag"]
	35	[4451]	EQ       	1 R11 K10 ; if R11 == nil then PC := 56
	36	[4451]	JMP      	56 ; PC := 56
	37	[4451]	GETTABLE 	R11 R10 K14 ; R11 := R10["Tag"]
	38	[4451]	EQ       	0 R11 R5 ; if R11 ~= R5 then PC := 56
	39	[4451]	JMP      	56 ; PC := 56
	40	[4452]	GETTABLE 	R11 R10 K15 ; R11 := R10["Standing"]
	41	[4452]	EQ       	1 R11 K10 ; if R11 == nil then PC := 58
	42	[4452]	JMP      	58 ; PC := 58
	43	[4452]	GETTABLE 	R11 R10 K15 ; R11 := R10["Standing"]
	44	[4452]	LT       	0 K16 R11 ; if 0.000000 >= R11 then PC := 58
	45	[4452]	JMP      	58 ; PC := 58
	46	[4453]	GETGLOBAL	R11 K1 ; R11 := _T
	47	[4453]	SETTABLE 	R11 K17 R2 ; R11["StandingSyndicateRewarded"] := R2
	48	[4454]	GETGLOBAL	R11 K1 ; R11 := _T
	49	[4454]	GETTABLE 	R12 R10 K15 ; R12 := R10["Standing"]
	50	[4454]	SETTABLE 	R11 K18 R12 ; R11["StandingRewarded"] := R12
	51	[4455]	GETGLOBAL	R11 K19 ; R11 := 0x9ba7909f
	52	[4455]	SELF     	R11 R11 K20 ; R12 := R11; R11 := R11[0x6dd7aa66]
	53	[4455]	GETUPVAL 	R13 U1 ; R13 := U1
	54	[4455]	CALL     	R11 3 1 ; R11(R12,R13)
	55	[4457]	JMP      	58 ; PC := 58
	56	[4450]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 34; R8 := R9 end
	57	[4458]	JMP      	34 ; PC := 34
	58	[4462]	EQ       	1 R3 K10 ; if R3 == nil then PC := 73
	59	[4462]	JMP      	73 ; PC := 73
	60	[4463]	LOADK    	R11 K21 ; R11 := "DogTagRedeemed"
	61	[4464]	GETGLOBAL	R12 K22 ; R12 := EMPTY_SYMBOL
	62	[4464]	EQ       	1 R3 R12 ; if R3 == R12 then PC := 68
	63	[4464]	JMP      	68 ; PC := 68
	64	[4465]	MOVE     	R12 R11 ; R12 := R11
	65	[4465]	SELF     	R13 R3 K23 ; R14 := R3; R13 := R3[0x6d604ba7]
	66	[4465]	CALL     	R13 2 2 ; R13 := R13(R14)
	67	[4465]	CONCAT   	R11 R12 R13 ; R11 := R12 .. R13
	68	[4468]	GETUPVAL 	R12 U2 ; R12 := U2
	69	[4468]	GETTABLE 	R12 R12 K24 ; R12 := R12[0xf245b012]
	70	[4468]	MOVE     	R13 R2 ; R13 := R2
	71	[4468]	MOVE     	R14 R11 ; R14 := R11
	72	[4468]	CALL     	R12 3 1 ; R12(R13,R14)
	73	[4471]	GETUPVAL 	R12 U3 ; R12 := U3
	74	[4471]	CALL     	R12 1 1 ; R12()
	75	[4472]	RETURN   	R0 1 ; return 

function #119 <?:4474,4478> (8 instructions, 32 bytes at 000002113905D090)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[4475]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[4475]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xd1d2e71b]
	3	[4475]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[4475]	GETTABLE 	R1 R1 K2 ; R1 := R1["mElements"]
	5	[4475]	CALL     	R0 2 1 ; R0(R1)
	6	[4477]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[4477]	CALL     	R0 1 1 ; R0()
	8	[4478]	RETURN   	R0 1 ; return 

function #120 <?:4480,4484> (8 instructions, 32 bytes at 000002113905D1C0)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[4481]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[4481]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x3c058ff1]
	3	[4481]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[4481]	GETTABLE 	R1 R1 K2 ; R1 := R1["mElements"]
	5	[4481]	CALL     	R0 2 1 ; R0(R1)
	6	[4483]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[4483]	CALL     	R0 1 1 ; R0()
	8	[4484]	RETURN   	R0 1 ; return 

function #121 <?:4486,4519> (67 instructions, 268 bytes at 000002113905D2F0)
0 params, 15 slots, 5 upvalues, 0 locals, 13 constants, 0 functions
	1	[4487]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4487]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[4487]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4487]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[4487]	JMP      	7 ; PC := 7
	6	[4488]	RETURN   	R0 1 ; return 
	7	[4491]	NEWTABLE 	R0 0 0 ; R0 := {}
	8	[4492]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[4494]	LOADK    	R2 := 1.000000
	10	[4494]	GETUPVAL 	R3 U1 ; R3 := U1
	11	[4494]	GETTABLE 	R3 R3 K1 ; R3 := R3["mElements"]
	12	[4494]	LEN      	R3 R3 ; R3 := # R3
	13	[4494]	LOADK    	R4 := 1.000000
	14	[4494]	FORPREP  	R2 37 ; R2 -= R4; PC := 37
	15	[4495]	GETGLOBAL	R6 K2 ; R6 := 0xce225efa
	16	[4495]	LOADK    	R7 := 0.000000
	17	[4495]	CALL     	R6 2 1 ; R6(R7)
	18	[4496]	GETUPVAL 	R6 U1 ; R6 := U1
	19	[4496]	GETTABLE 	R6 R6 K1 ; R6 := R6["mElements"]
	20	[4496]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	21	[4497]	GETTABLE 	R7 R6 K3 ; R7 := R6["Category"]
	22	[4497]	EQ       	1 R7 K4 ; if R7 == nil then PC := 37
	23	[4497]	JMP      	37 ; PC := 37
	24	[4498]	GETTABLE 	R7 R6 K3 ; R7 := R6["Category"]
	25	[4499]	GETTABLE 	R8 R0 R7 ; R8 := R0[R7]
	26	[4499]	EQ       	0 R8 K4 ; if R8 ~= nil then PC := 34
	27	[4499]	JMP      	34 ; PC := 34
	28	[4500]	SETTABLE 	R0 R7 K5 ; R0[R7] := 1.000000
	29	[4502]	GETUPVAL 	R8 U2 ; R8 := U2
	30	[4502]	MOVE     	R9 R7 ; R9 := R7
	31	[4502]	CALL     	R8 2 2 ; R8 := R8(R9)
	32	[4502]	SETTABLE 	R1 R7 R8 ; R1[R7] := R8
	33	[4502]	JMP      	37 ; PC := 37
	34	[4504]	GETTABLE 	R8 R0 R7 ; R8 := R0[R7]
	35	[4504]	ADD      	R8 R8 K5 ; R8 := R8 + 1.000000
	36	[4504]	SETTABLE 	R0 R7 R8 ; R0[R7] := R8
	37	[4494]	FORLOOP  	R2 15 ; R2 += R4; if R2 <= R3 then begin PC := 15; R5 := R2 end
	38	[4509]	GETGLOBAL	R8 K6 ; R8 := 0xcfc01047
	39	[4509]	MOVE     	R9 R0 ; R9 := R0
	40	[4509]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	41	[4509]	JMP      	58 ; PC := 58
	42	[4510]	GETTABLE 	R13 R1 R11 ; R13 := R1[R11]
	43	[4510]	EQ       	1 R13 K4 ; if R13 == nil then PC := 58
	44	[4510]	JMP      	58 ; PC := 58
	45	[4510]	GETTABLE 	R13 R1 R11 ; R13 := R1[R11]
	46	[4510]	GETTABLE 	R13 R13 K7 ; R13 := R13["Count"]
	47	[4510]	LE       	0 K8 R13 ; if 0.000000 > R13 then PC := 58
	48	[4510]	JMP      	58 ; PC := 58
	49	[4510]	GETTABLE 	R13 R1 R11 ; R13 := R1[R11]
	50	[4510]	GETTABLE 	R13 R13 K7 ; R13 := R13["Count"]
	51	[4510]	LE       	0 R13 R12 ; if R13 > R12 then PC := 58
	52	[4510]	JMP      	58 ; PC := 58
	53	[4511]	GETUPVAL 	R13 U3 ; R13 := U3
	54	[4511]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe0cba3ca]
	55	[4511]	LOADK    	R14 K10 ; R14 := "/Lotus/Language/Menu/ItemInventory_CantSellLastWeapon"
	56	[4511]	CALL     	R13 2 1 ; R13(R14)
	57	[4512]	RETURN   	R0 1 ; return 
	58	[4509]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 42; R10 := R11 end
	59	[4513]	JMP      	42 ; PC := 42
	60	[4516]	GETGLOBAL	R13 K11 ; R13 := _T
	61	[4516]	GETTABLE 	R13 R13 K12 ; R13 := R13[0xc4b03b39]
	62	[4516]	GETUPVAL 	R14 U1 ; R14 := U1
	63	[4516]	GETTABLE 	R14 R14 K1 ; R14 := R14["mElements"]
	64	[4516]	CALL     	R13 2 1 ; R13(R14)
	65	[4518]	GETUPVAL 	R13 U4 ; R13 := U4
	66	[4518]	CALL     	R13 1 1 ; R13()
	67	[4519]	RETURN   	R0 1 ; return 

function #122 <?:4521,4525> (13 instructions, 52 bytes at 000002113905D6A0)
3 params, 7 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[4522]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[4522]	GETGLOBAL	R4 K1 ; R4 := _T
	3	[4522]	GETTABLE 	R4 R4 K2 ; R4 := R4["SetSquadOverlayTitle"]
	4	[4522]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[4522]	TEST     	R3 1 ; if R3 then PC := 13
	6	[4522]	JMP      	13 ; PC := 13
	7	[4523]	GETGLOBAL	R3 K1 ; R3 := _T
	8	[4523]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xdf29a9d6]
	9	[4523]	MOVE     	R4 R0 ; R4 := R0
	10	[4523]	MOVE     	R5 R1 ; R5 := R1
	11	[4523]	MOVE     	R6 R2 ; R6 := R2
	12	[4523]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	13	[4525]	RETURN   	R0 1 ; return 

function #123 <?:4527,4530> (6 instructions, 24 bytes at 000002113905D820)
1 param, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4529]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4529]	MOVE     	R2 R0 ; R2 := R0
	3	[4529]	LOADNIL  	R3 R3 ; R3 := nil
	4	[4529]	OP_LOADBOOL	R4 1 0 ; R4 := true
	5	[4529]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	6	[4530]	RETURN   	R0 1 ; return 

function #124 <?:4532,4540> (11 instructions, 44 bytes at 000002112AC1E690)
1 param, 3 slots, 2 upvalues, 0 locals, 1 constant, 0 functions
	1	[4533]	EQ       	0 R0 K0 ; if R0 ~= "true" then PC := 6
	2	[4533]	JMP      	6 ; PC := 6
	3	[4534]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4534]	SETUPVAL 	R1 U0 ; U0 := R1
	5	[4534]	JMP      	11 ; PC := 11
	6	[4536]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[4536]	SETUPVAL 	R1 U0 ; U0 := R1
	8	[4538]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[4538]	OP_LOADBOOL	R2 1 0 ; R2 := true
	10	[4538]	CALL     	R1 2 1 ; R1(R2)
	11	[4540]	RETURN   	R0 1 ; return 

function #125 <?:4542,4544> (2 instructions, 8 bytes at 000002112AC1E7C0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4543]	SETUPVAL 	R0 U0 ; U0 := R0
	2	[4544]	RETURN   	R0 1 ; return 

function #126 <?:4546,4548> (2 instructions, 8 bytes at 000002112AC1E890)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4547]	SETUPVAL 	R0 U0 ; U0 := R0
	2	[4548]	RETURN   	R0 1 ; return 
